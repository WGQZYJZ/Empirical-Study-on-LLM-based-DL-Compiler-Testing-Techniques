import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_381 = relay.var("var_381", dtype = "float32", shape = (12, 11, 7))#candidate|381|(12, 11, 7)|var|float32
uop_382 = relay.tan(var_381.astype('float32')) # shape=(12, 11, 7)
var_388 = relay.var("var_388", dtype = "float32", shape = (12, 11, 7))#candidate|388|(12, 11, 7)|var|float32
bop_389 = relay.greater_equal(uop_382.astype('bool'), relay.reshape(var_388.astype('bool'), relay.shape_of(uop_382))) # shape=(12, 11, 7)
output = relay.Tuple([bop_389,])
output2 = relay.Tuple([bop_389,])
func_392 = relay.Function([var_381,var_388,], output)
mod['func_392'] = func_392
mod = relay.transform.InferType()(mod)
var_393 = relay.var("var_393", dtype = "float32", shape = (12, 11, 7))#candidate|393|(12, 11, 7)|var|float32
var_394 = relay.var("var_394", dtype = "float32", shape = (12, 11, 7))#candidate|394|(12, 11, 7)|var|float32
output = func_392(var_393,var_394,)
func_395 = relay.Function([var_393,var_394,], output)
mutated_mod['func_395'] = func_395
mutated_mod = relay.transform.InferType()(mutated_mod)
const_613 = relay.const([[[6.630035,-7.534333,2.872123,-5.470110,1.952212,-6.476154,3.180363,4.011628,-0.353123],[2.159270,-7.866011,1.156239,-0.981396,-7.318157,9.688046,2.637788,5.063209,-3.897664],[-5.321965,-5.364377,-4.403242,6.518352,1.609307,5.846568,0.163042,-4.376386,-4.862181],[-4.568943,-9.558505,7.587026,2.161431,-0.142196,-2.845837,9.014739,5.471840,-3.161974],[6.352447,2.158664,-1.981131,-9.425346,-4.664083,1.609518,-4.192526,3.795447,4.975240],[-9.105120,8.909885,7.542221,8.844592,-7.684592,-8.270004,5.281289,-8.472226,4.578339],[4.172304,-8.029447,-4.825759,-0.934162,-6.869506,-0.110312,-6.248019,-6.618598,2.438777],[6.675843,-0.960998,-6.344416,-1.357977,-1.948711,-9.133575,2.173430,5.725742,7.322149],[-0.290207,-8.701865,6.152019,-4.693526,-1.472275,1.269985,-0.203504,-0.547985,-8.501167],[-6.525030,-3.687479,-3.964431,-0.183745,-1.680833,7.647522,3.748820,-2.927152,-6.293529],[-8.848424,1.680953,5.186500,4.432056,-6.367254,5.931681,-0.141924,1.371930,-8.927305],[2.599650,-4.466868,3.069594,-2.307238,9.531217,-9.872070,-1.169877,-2.234549,9.028516],[2.203056,1.496657,3.247385,-3.953228,-5.414707,-1.140798,2.244047,5.505250,-5.529716]],[[-6.272268,-1.953477,1.351430,8.920142,1.269957,2.585763,-0.244632,0.176620,-7.933787],[-6.952461,-6.883498,2.775293,7.524587,6.937456,-2.105887,4.522575,-4.385139,-4.001286],[2.756182,0.535660,4.992915,6.843579,0.077006,3.139236,3.318130,4.721558,4.241662],[9.564214,9.427842,2.896205,-7.887424,-9.569718,-5.796272,-2.362412,9.913641,2.292400],[-4.982814,-3.669076,7.561656,-1.367970,7.739429,3.901107,-7.235201,7.605622,9.322807],[9.868577,-7.638955,-7.182162,-0.841300,-4.984328,-2.504339,-0.006239,-1.766202,4.819084],[-1.415797,5.267944,2.122482,-7.038069,1.505359,7.640807,3.034225,-1.511599,3.533502],[-5.678895,7.837226,4.327827,-7.581808,-9.563153,-0.572768,9.733852,0.969263,-8.789805],[2.981531,-6.785914,-6.934807,1.217787,-6.395800,4.048754,-4.750219,7.283304,-5.295394],[0.578365,-8.310548,-1.225270,2.792457,-9.791766,-4.077101,3.920765,3.049584,-6.038220],[-2.510511,6.029510,8.937021,-4.416073,1.073020,4.925273,-5.299905,-6.434772,-4.798403],[4.756637,-5.828326,4.441464,-7.887919,-5.724398,-0.977820,8.227982,-4.817926,-5.940443],[-6.038739,3.185589,-3.601240,8.911872,-1.378402,-2.649890,-7.503923,-0.860985,6.049541]],[[9.805536,7.382961,8.485164,-6.782653,-1.139205,-8.143065,-8.477291,8.917678,-8.872235],[-4.102308,-8.204007,7.965601,-9.088234,-2.012950,2.178923,-1.631180,0.974461,-3.239115],[0.498407,8.160988,-3.280568,-6.765955,-7.633195,-3.306583,-7.484580,0.186062,4.285642],[5.904137,-9.922388,6.659766,7.320464,6.977950,3.919746,0.474642,-7.349155,-7.588894],[-7.550295,-8.826095,-7.043547,0.229321,0.979123,2.438006,-3.591479,-8.740297,-4.251712],[-1.967523,1.558436,-2.168841,5.861774,-5.290304,-1.783003,-6.323985,2.388573,-4.918169],[-4.624490,-7.096812,-6.187548,-4.693414,-3.757398,4.099414,-5.048082,-8.416363,1.717512],[-6.726983,1.617996,1.417422,8.323814,-7.316046,-1.316130,-8.920173,9.221179,-6.062350],[-5.941554,-4.920327,-3.730466,1.539837,0.559354,-6.680755,-5.599929,5.098445,0.222757],[-8.033660,1.168731,-7.667353,9.224593,-0.217269,2.879359,-9.913002,8.225835,3.164692],[-3.070833,8.522420,-6.944841,3.991155,-5.029886,-0.501015,6.762474,8.871916,-7.619296],[-1.857512,-0.703831,-5.240297,5.130826,-7.562030,6.288852,-0.346299,-7.863467,8.927904],[-0.427403,-2.884803,2.143169,-2.180994,3.422511,7.579902,6.133366,7.890514,-1.845913]],[[-0.563140,-8.425719,7.926198,-7.948307,5.848177,0.305258,6.313110,4.048228,-5.675708],[3.041143,9.756358,-4.738275,-3.233630,-8.455171,-8.365824,7.796886,7.910127,8.530860],[1.575777,-0.689075,-5.169396,1.606667,8.141812,4.862251,3.482931,3.018765,5.944382],[-8.246402,8.965994,0.369657,3.713467,-4.049069,-9.952117,8.380177,7.287325,6.555061],[7.798451,-7.432885,0.962865,5.161427,-8.190419,-5.015749,-9.376071,5.035601,4.080923],[3.854322,1.598341,9.753352,4.074730,0.899755,8.614385,0.744355,5.023636,4.473389],[1.460266,1.946904,9.460638,-5.156513,-3.395023,-2.662977,-6.062662,3.781048,5.344191],[-5.329935,1.617014,-0.329238,-6.578083,-0.105914,7.705853,-6.515544,-7.674202,-0.989856],[7.048104,6.199736,-4.675307,-0.346039,-0.434845,-5.692357,-6.448538,-5.800803,-3.662219],[-0.388692,-5.120478,-0.727242,8.733396,9.673806,-7.540028,1.510809,-7.082099,-3.881046],[-3.848803,0.959989,-8.754955,0.674555,-5.598805,-7.447178,-1.804903,1.802805,4.321458],[-6.756238,3.881657,-4.245948,2.837232,1.812898,8.418361,-2.846103,-9.043499,-9.858644],[4.810033,-6.100898,8.315962,-2.798733,5.041590,0.290782,9.457613,6.727907,8.367174]],[[-8.013967,-4.999250,-6.717770,6.007457,2.809543,-0.478352,-7.634441,2.682328,-2.209967],[-2.353352,-9.364394,-5.695580,-3.347806,5.667121,-3.471209,-8.114042,9.301464,9.654555],[-7.334824,-5.078644,-7.424078,8.487335,-5.228349,2.402188,0.017078,9.958323,-9.973937],[7.956349,6.809265,-6.673675,6.621278,6.450724,9.309743,-4.504989,0.278985,-2.433001],[-9.831390,2.188177,-3.640765,6.519768,-7.513780,-6.378599,-4.754386,7.156655,-0.885669],[-9.624210,-4.296035,4.306233,-3.582915,9.003897,-0.362251,9.523037,5.477570,-5.543821],[-5.681576,-1.897961,-7.909904,7.806792,-3.858041,9.070230,-1.137652,1.353615,4.678327],[2.199884,-6.016491,4.227160,-5.074043,0.138796,4.104737,4.110760,4.129304,-2.563107],[-7.060477,4.255306,5.148233,-1.240819,-4.221868,-3.326531,-3.546112,8.221338,1.099258],[3.795420,9.331552,0.895542,-9.875386,-6.176741,-8.959980,-2.106981,-1.605447,-7.243831],[-0.081986,-8.902722,-2.373527,-5.680386,-3.526314,5.485559,-6.915388,9.132264,-8.138556],[0.647750,1.676124,-8.207804,-5.448188,7.249691,-4.812684,-1.416991,-2.238884,9.762475],[-5.569379,1.848114,2.115750,-5.565913,7.837048,-0.973943,-5.234539,8.798615,2.899181]],[[-3.717251,-0.607508,1.829086,4.843695,1.755151,-2.782326,-7.908929,-4.769889,2.350470],[-4.719054,6.334551,6.918083,3.853569,9.312402,2.986436,9.338189,8.067461,3.109683],[-5.274071,-6.117551,-5.096119,1.207330,2.355444,-1.583364,7.725656,-0.404369,0.666524],[-2.330151,-6.727841,2.446233,3.307090,9.386021,-0.561907,7.779883,8.025083,-9.807522],[-2.856585,-3.092631,4.090582,-5.492357,2.521093,1.119622,-5.218063,-6.271291,-1.032396],[-0.888955,-7.927732,-5.235684,1.115842,2.292873,1.081753,-5.957405,5.073670,-6.799973],[-8.768827,-2.303321,3.419721,-6.573581,2.727846,-3.470330,-1.053256,5.971640,-2.107949],[8.533209,3.044150,-7.178467,-9.434474,-1.846493,5.296194,-1.226193,6.009396,-7.028581],[-4.316241,-3.161209,8.993040,9.441959,-8.548421,-8.231155,-6.011134,-0.956373,-6.933611],[3.695249,2.294960,6.153245,-1.263989,-0.014518,-8.706270,-5.800003,6.175768,-1.608078],[-3.290404,-2.116305,2.042561,2.828706,-7.175147,3.441875,0.341682,1.544832,1.175747],[9.390004,-5.537890,4.348731,-6.101178,-4.561706,9.881249,-3.405826,-4.077283,-5.180184],[0.399742,-9.292040,9.735278,9.035557,-1.022673,9.887620,2.599904,7.055941,5.419580]],[[-9.467071,-2.980237,4.448916,1.971903,0.554906,3.546486,3.485087,-8.424100,-2.539469],[-7.952940,-1.769778,8.643824,-1.659540,-3.926982,-4.638941,-1.792943,-2.872345,9.715342],[-2.957806,1.132648,3.002912,1.680419,-2.239699,-6.525989,6.294106,-8.675555,6.200290],[-2.780722,-0.453016,8.320313,-1.724871,7.479741,-6.426973,-2.172672,0.482239,6.541603],[-9.006935,-4.675408,-4.967849,-7.643124,7.536888,8.266424,-1.827062,-0.455356,-2.910841],[3.563222,7.648539,8.682559,-0.701449,7.182536,-1.174265,-4.075281,7.912631,8.891732],[0.158173,-2.264239,-4.617172,9.800143,3.735350,9.889948,2.369734,-8.053403,4.760503],[-7.168342,4.975358,4.005687,-4.509861,2.657567,-5.594406,2.692025,-4.546371,-1.767431],[8.484074,0.264120,6.545765,4.148295,3.740026,-8.370255,9.213703,-2.133950,-9.703512],[-1.480177,5.095131,-9.029919,-9.188059,9.294740,6.634076,0.499590,9.212450,6.099000],[6.596534,2.841687,-2.285074,2.829919,2.075700,7.081230,-2.098371,-4.646408,1.411097],[9.480545,4.636566,-9.734249,7.074791,4.111205,-6.649508,7.638658,9.714560,-8.223444],[-3.688723,-3.274092,-9.934506,6.059297,1.448649,-7.377090,7.918388,6.602797,1.531906]],[[6.810676,8.838792,8.684675,-4.017368,-9.053698,-6.566832,0.918926,-9.823050,-7.201619],[5.701120,0.557198,0.235180,7.301790,-0.273073,1.844628,-9.343249,-8.161640,-2.377621],[8.799104,-0.476362,-3.936250,1.204479,-9.324290,3.049660,-2.556038,-1.012629,-8.675551],[5.518423,-0.771460,-5.336347,3.931835,6.091593,-9.455678,-1.207431,-5.176158,4.000523],[1.302009,-2.832664,7.229519,-9.862491,7.108227,4.657124,-5.267876,7.296343,-6.916408],[7.466863,6.596462,1.912222,-9.030352,9.200802,9.331805,7.271931,9.369290,-1.403890],[-3.926916,-4.562977,1.410810,4.089138,2.877495,4.430668,-9.751659,3.709275,0.879658],[0.644957,-2.772943,-4.397753,-4.418870,-1.060307,8.239500,-6.329034,9.364974,1.659686],[-8.863651,1.490661,-5.747472,-2.581917,0.410655,-1.152890,-9.092259,-7.792570,-8.587182],[-5.870806,-6.136402,4.098487,1.938333,1.222817,-4.950508,-2.352041,6.953972,-9.986820],[-7.023937,-0.343538,6.625706,-3.769217,3.020858,-8.228196,3.265280,-2.082995,-9.214884],[4.147137,7.614812,-6.063848,-7.638412,-5.064948,-4.050438,2.679619,4.360558,-4.577902],[-5.577126,1.080838,4.501246,3.231561,-0.853672,2.386841,0.369951,5.412774,4.714335]]], dtype = "float32")#candidate|613|(8, 13, 9)|const|float32
const_614 = relay.const([[[-8.768726,-5.290434,-9.780899,0.748504,4.431289,-5.086646,-6.717138,2.744722,-1.666631],[-3.366303,-2.402222,1.997093,-0.199154,-8.303713,-8.918283,9.378783,-4.300317,-7.120346],[0.792341,-1.842670,6.448931,-2.991973,-5.287045,-3.855426,6.570533,-7.933068,-8.563882],[9.193306,-5.041557,-7.676401,7.056419,5.247963,7.066840,9.322833,9.548531,-4.030543],[-1.685555,-8.959963,-2.177801,4.999255,4.082553,-7.654298,0.119299,-4.102590,3.687197],[6.335794,9.948876,-5.140053,-9.596792,8.579136,-3.273783,-0.366707,7.312991,0.490823],[7.742401,4.449812,-2.135266,-0.709653,2.298171,7.289405,-7.398493,-9.850615,3.258878],[-8.194539,-3.326042,3.973403,6.414695,8.257990,-9.420197,9.863683,-2.717790,-6.985773],[-5.446822,-8.634127,-0.710931,-1.801417,-2.158609,-7.866340,-3.528238,4.859260,-7.734137],[1.376157,7.812018,-6.123303,0.483606,8.392719,-6.645511,5.840523,2.973192,8.065205],[7.044699,-8.768525,-0.553292,-7.472878,7.595259,4.976801,-6.308992,-7.053050,6.972801],[-2.291474,-7.276139,-8.144047,0.174021,8.238972,-9.187551,-6.261992,-9.086471,6.865498],[6.470901,4.302198,-6.372711,1.983131,0.576089,-7.236824,-4.098968,-3.169041,-6.771181]],[[-2.787021,-1.040241,-1.687322,-8.379598,-7.691205,5.901064,2.494794,7.544767,-8.154646],[2.912992,6.192943,7.100104,5.544683,-1.996037,-0.542522,3.916592,-4.360658,-9.153845],[-2.449010,-9.256687,3.127265,-7.912499,-5.600616,-7.128991,6.864841,-4.324717,-9.360751],[-6.307675,-9.903932,2.609885,-7.863276,3.329347,-1.005272,6.574380,-0.408589,-6.984337],[-0.790305,-3.276970,-0.714502,1.921386,-5.200584,-5.251533,4.288938,-3.835850,6.661580],[-9.246842,-8.274847,6.261027,1.176738,1.152101,-2.576872,0.012217,7.198810,5.333756],[-6.477021,1.812067,6.769532,-8.440380,7.507217,-9.252137,-0.992434,-4.501045,-0.653603],[-2.477151,-8.000146,5.611880,4.274451,5.297340,-9.912645,-9.476410,5.608434,6.506254],[-5.245586,9.767904,-0.684086,-7.250009,-8.466275,-0.901494,-0.638959,-5.232389,-2.215186],[8.218545,8.749741,-1.359753,-9.280297,-5.017800,4.551363,-5.360741,2.312144,0.765698],[4.518292,0.157538,-8.679988,-0.080936,-0.380763,0.217926,-9.598223,-2.656446,-7.627979],[3.399481,2.038479,-0.106868,9.664642,-7.333019,4.018657,-9.842132,-4.481656,-5.208946],[0.661226,2.955960,-5.866784,8.360549,-7.725004,-0.210855,-2.192423,6.069798,5.016347]],[[-3.808409,-4.142844,-0.870676,-9.321270,-9.649501,-4.675046,6.496847,4.634928,8.996897],[-1.436338,-5.391046,-5.707104,0.473529,-4.859441,-1.978936,-8.704637,-5.640750,-5.961545],[-5.354362,1.158520,7.565566,-4.238268,-9.879545,3.051786,1.954102,-4.541984,-5.732017],[-4.741702,6.189875,-7.813536,-0.231449,4.101606,3.393240,6.611416,-5.855754,-4.593272],[-9.990897,8.149574,-6.674183,-9.554133,-2.711091,8.552619,1.639343,-6.542479,-6.252811],[3.980450,8.827016,9.695116,-3.418809,3.913080,-1.005767,-5.623409,-6.029986,7.306781],[-1.833715,-5.139697,-7.443125,-6.547922,1.348042,-6.872374,3.041962,-2.426475,-4.108238],[-0.587134,1.241152,-2.662090,3.100146,-0.574026,-6.818365,9.978797,-5.053263,4.524183],[0.525508,-9.938539,-2.274047,7.896469,-7.986033,-4.646439,2.088433,6.863493,-9.737227],[-3.565266,-7.063152,9.636826,-8.517426,-2.955085,-5.692314,6.093329,1.628134,-3.215659],[0.810600,3.036630,-6.811765,-8.684257,-7.015858,-8.352023,8.203627,6.864486,6.600642],[-0.804394,7.845386,-4.999040,-9.761326,2.390708,-1.802650,0.921362,6.146810,9.787188],[9.866024,-2.220050,-7.223699,-1.821505,2.086877,3.497350,7.505844,8.056180,-4.262411]],[[-3.065889,9.291273,-7.369069,-0.261554,6.117771,5.324647,9.930436,4.576342,-5.750812],[-2.079941,4.588203,-1.440692,-6.209146,0.710299,-5.797714,-2.993144,-5.488831,1.948020],[7.282176,2.151490,3.713922,0.199566,2.165664,-1.201009,-3.910074,-2.126006,7.050194],[3.020135,-4.023037,0.547030,-7.136988,-2.052889,2.961307,-0.913076,7.259262,-0.843411],[-6.146159,9.001975,-5.594798,5.205781,-2.024386,-3.946983,1.637947,9.827810,-1.781521],[-3.768141,-3.862829,-7.480159,-0.710031,-9.265692,-8.199267,4.236190,0.507187,-5.418198],[-9.962653,-2.991044,7.100501,-1.491338,-3.999912,5.997715,-9.573767,-1.721075,-7.371303],[5.670747,6.087757,-0.458231,-9.115851,-8.295098,-0.514506,8.165512,-0.662715,0.885609],[-5.691227,-4.262207,3.971621,-5.649728,-1.701946,4.303003,9.602954,3.109943,-6.163982],[-9.212658,9.727889,-7.002689,0.854034,3.023850,-4.458229,9.378872,-4.325392,2.443134],[5.679627,-4.930727,-3.981399,-9.512587,-5.370697,-7.342371,7.697504,7.076776,4.137718],[-7.332995,2.749509,0.737276,-3.232484,-0.538031,-8.481089,1.276503,5.381597,3.492435],[0.342555,7.103324,-8.841228,-2.090455,-1.092017,-9.956916,-0.153888,-2.780808,-1.809750]],[[7.434517,3.618264,-2.652240,1.321603,7.492815,5.830692,3.897124,0.659503,-6.273932],[-5.191445,7.390106,-1.851934,2.224423,0.472839,-8.098813,2.174019,-6.855984,9.875355],[-8.693484,-6.624039,-9.375611,3.187408,-5.292558,-7.775768,-5.900272,-0.037103,-0.413337],[6.784023,0.074852,3.024875,7.572921,3.246075,0.681086,-0.453238,9.897380,-9.770163],[-1.631026,8.256006,-4.658373,9.035441,1.712151,-4.536750,-3.107129,0.013629,-1.176932],[5.954701,3.841916,-1.598939,6.256915,-3.895286,2.126156,-1.529006,-1.711979,7.093082],[-9.233384,6.739014,-9.526267,4.964264,-0.475473,-0.229147,9.437932,-0.716860,-6.454535],[-6.290570,8.624629,-1.315663,3.353442,-0.911054,0.343278,-7.319013,-2.566551,5.268082],[8.666023,3.741793,8.216883,9.645434,9.361959,9.203083,-6.344801,9.429498,-8.379280],[-9.641355,5.091339,-8.828574,-3.011328,-9.203670,-9.338917,5.613499,-3.343676,3.263897],[-1.921302,-4.359019,-6.157493,6.018392,0.032554,-7.917589,0.872055,1.087923,7.999073],[7.236596,-6.987469,-0.398010,8.105626,9.209962,-0.083874,7.852056,5.788384,-2.113003],[8.660130,-9.565413,6.596466,-6.423344,2.381331,1.929307,6.979813,3.496925,-6.586619]],[[3.644605,6.966412,7.282378,4.611025,7.340018,-2.354606,7.720113,5.415589,8.566862],[-7.702545,6.440717,6.465967,2.474120,3.372269,4.223379,-1.957370,4.579579,3.299853],[-2.895193,2.708813,7.007450,3.008112,9.874237,-9.714984,9.149999,6.206285,-4.733611],[8.788786,2.008621,-0.163185,-3.952160,2.717327,5.160673,-6.793408,-7.357353,0.850260],[-5.253917,-7.667389,8.707696,-6.111682,5.707448,-6.610150,-7.988009,5.446631,-9.237800],[-5.650508,8.478966,8.260103,-1.846166,-1.230648,7.211394,-5.452748,-8.165941,-8.743105],[4.090624,4.083049,-6.666331,1.666821,3.320242,-1.832437,-2.429359,5.554847,8.632631],[-7.961931,-2.918130,-9.320779,-2.978292,8.721862,9.648667,5.309099,-8.296856,3.119914],[-3.039248,-4.938336,-0.548959,4.949569,3.339338,-4.032157,4.336116,2.723476,6.768097],[-5.299921,-2.841737,-6.658012,9.370089,1.666262,-6.437727,-1.936262,8.188148,5.030586],[5.945658,-4.064589,3.170890,4.852561,-7.672451,-6.479706,-0.314926,6.731096,8.234419],[-5.762599,0.054223,-7.469086,7.099790,-5.134940,0.867125,-3.737270,0.061740,-0.641013],[4.557104,2.420011,-0.776975,2.949648,-8.054432,3.682701,-6.285959,-6.274864,2.486725]],[[-1.658354,4.171988,6.834256,-8.894450,-4.539494,2.906617,-6.964054,-5.307491,-2.748689],[0.483689,-7.208731,-6.811684,9.315912,9.091669,3.508585,9.725818,9.536545,-6.864980],[3.942062,-7.311859,-5.596385,-8.255365,-0.865197,5.991096,4.385244,-8.410952,-4.961407],[-2.806943,-2.739235,-8.668304,-8.684225,7.471535,-7.255546,6.183501,-8.024661,7.874409],[9.154824,7.514497,1.573685,-7.921160,4.117901,-3.172257,5.651983,-0.525216,-0.657712],[1.179001,-1.609867,1.851437,1.979338,-0.677709,-5.690823,-0.308809,-0.374111,-2.189328],[-8.231091,-1.509302,2.358453,-6.642953,9.180398,-5.097104,4.232718,5.062279,-5.660125],[-6.486685,0.860710,7.324275,5.921678,1.937318,9.779415,3.611255,-1.507216,-6.035369],[-5.519224,-3.529538,0.283869,8.422145,9.035875,-9.133558,1.974436,7.413011,5.246754],[0.993142,-8.254629,-4.430641,-1.484351,-5.599101,-4.159133,-7.384569,2.574751,-9.543546],[-9.067668,3.874466,-1.914374,0.891720,-3.712248,-4.561622,-3.639683,-7.984943,-2.574374],[-8.757322,-2.559859,1.396741,1.205360,2.782226,8.327541,0.052202,-9.425285,6.172034],[-1.812912,-5.045256,5.898097,6.884777,-5.862200,-5.292781,-3.469953,5.159595,4.712659]],[[6.515132,9.778677,1.389107,8.898865,-7.909449,8.236739,-0.023989,-0.409857,1.723404],[-9.890587,0.917573,-2.124644,5.900554,1.060120,-8.682312,-9.058387,6.773247,-7.992076],[-0.045096,-5.060990,8.196889,-5.213098,6.437109,6.734861,-5.137396,1.704526,-4.723731],[3.622994,7.965526,4.094072,-3.692434,6.610973,4.605601,-0.774220,9.096872,-4.790804],[3.219082,1.493997,7.420719,1.191903,-1.524338,-7.126814,-0.134569,-1.857699,-7.669345],[5.260920,4.778140,-0.601386,5.893029,-6.151039,8.186311,2.978005,9.874113,-4.239073],[7.842171,-5.324079,-5.082487,7.850805,0.270990,-0.216207,1.095755,-1.055755,6.024004],[9.835278,3.532139,7.328025,-2.818872,0.245971,6.794882,-3.631992,7.665378,-4.354057],[1.565297,5.712369,-2.154462,-6.845835,2.080196,-1.099753,-6.926757,2.938600,-2.813770],[-5.633967,-5.380637,-0.586085,6.146506,-1.348963,-9.852010,8.584208,-0.488173,-5.932686],[-2.398427,-6.589891,6.188566,-1.729106,-2.476471,1.778036,1.621194,0.389510,-4.011298],[1.651646,9.179114,-9.216602,2.519504,3.976686,-6.050764,-1.794446,0.586213,4.410294],[0.062354,-1.902075,5.922460,-1.596200,6.566543,-3.092010,-2.912840,-9.469825,-5.138090]]], dtype = "float32")#candidate|614|(8, 13, 9)|const|float32
bop_615 = relay.divide(const_613.astype('float32'), relay.reshape(const_614.astype('float32'), relay.shape_of(const_613))) # shape=(8, 13, 9)
func_392_call = mod.get_global_var('func_392')
func_395_call = mutated_mod.get_global_var('func_395')
var_628 = relay.var("var_628", dtype = "float32", shape = (924,))#candidate|628|(924,)|var|float32
call_627 = relay.TupleGetItem(func_392_call(relay.reshape(var_628.astype('float32'), [12, 11, 7]), relay.reshape(var_628.astype('float32'), [12, 11, 7]), ), 0)
call_629 = relay.TupleGetItem(func_395_call(relay.reshape(var_628.astype('float32'), [12, 11, 7]), relay.reshape(var_628.astype('float32'), [12, 11, 7]), ), 0)
bop_635 = relay.not_equal(call_627.astype('bool'), relay.reshape(var_628.astype('bool'), relay.shape_of(call_627))) # shape=(12, 11, 7)
bop_638 = relay.not_equal(call_629.astype('bool'), relay.reshape(var_628.astype('bool'), relay.shape_of(call_629))) # shape=(12, 11, 7)
func_392_call = mod.get_global_var('func_392')
func_395_call = mutated_mod.get_global_var('func_395')
call_639 = relay.TupleGetItem(func_392_call(relay.reshape(var_628.astype('float32'), [12, 11, 7]), relay.reshape(var_628.astype('float32'), [12, 11, 7]), ), 0)
call_640 = relay.TupleGetItem(func_395_call(relay.reshape(var_628.astype('float32'), [12, 11, 7]), relay.reshape(var_628.astype('float32'), [12, 11, 7]), ), 0)
uop_646 = relay.erf(bop_615.astype('float32')) # shape=(8, 13, 9)
output = relay.Tuple([bop_635,call_639,uop_646,])
output2 = relay.Tuple([bop_638,call_640,uop_646,])
func_648 = relay.Function([var_628,], output)
mod['func_648'] = func_648
mod = relay.transform.InferType()(mod)
mutated_mod['func_648'] = func_648
mutated_mod = relay.transform.InferType()(mutated_mod)
var_649 = relay.var("var_649", dtype = "float32", shape = (924,))#candidate|649|(924,)|var|float32
func_648_call = mutated_mod.get_global_var('func_648')
call_650 = func_648_call(var_649)
output = call_650
func_651 = relay.Function([var_649], output)
mutated_mod['func_651'] = func_651
mutated_mod = relay.transform.InferType()(mutated_mod)
var_713 = relay.var("var_713", dtype = "int8", shape = (4, 13, 11))#candidate|713|(4, 13, 11)|var|int8
var_714 = relay.var("var_714", dtype = "int8", shape = (4, 13, 11))#candidate|714|(4, 13, 11)|var|int8
bop_715 = relay.subtract(var_713.astype('int8'), relay.reshape(var_714.astype('int8'), relay.shape_of(var_713))) # shape=(4, 13, 11)
bop_718 = relay.add(var_713.astype('int64'), relay.reshape(var_714.astype('int64'), relay.shape_of(var_713))) # shape=(4, 13, 11)
func_648_call = mod.get_global_var('func_648')
func_651_call = mutated_mod.get_global_var('func_651')
const_722 = relay.const([-3.110019,3.129706,-3.144495,4.414243,6.888050,-9.555618,-8.904138,-9.262484,-6.852468,2.814429,5.394382,-8.588714,-4.863241,5.654887,-9.638858,1.001596,-6.683298,-2.846990,-3.596522,0.443986,-8.798959,0.721793,-3.983497,-6.866207,0.253124,-2.216621,-6.868255,-2.582732,4.074968,-0.753179,9.080588,-2.937271,0.690007,1.344468,-5.706061,3.026148,-0.539642,6.664783,-0.494263,2.661505,5.063244,6.705183,5.141838,4.788231,7.828743,-8.314631,7.339729,-8.340177,-9.657873,-0.335839,3.381692,7.292877,8.845603,-3.108687,-0.166986,3.026972,1.470120,3.284886,5.051110,-0.631507,5.759019,2.814324,5.404981,5.856771,2.272934,2.890019,7.993432,9.842966,9.893623,-7.460413,7.328523,-8.271678,-9.623355,2.033060,-4.470286,-4.673523,9.127802,-6.295430,-1.478451,-3.077970,1.977489,-6.792634,-2.510128,8.334611,5.003644,-0.315911,-3.454322,-5.005354,-6.455373,-3.035186,5.498753,-8.097645,-5.408868,0.819650,-0.844081,4.993032,7.125641,-2.587050,2.740301,-9.714529,-0.846003,2.456705,0.542831,2.138451,-5.804440,-6.005340,3.231242,-6.257722,0.352207,-9.470896,6.584473,5.184098,5.438465,-3.629487,-5.064036,7.753845,3.407712,0.629003,-0.847484,0.998035,-3.095634,-9.827932,-4.207003,4.533989,8.751904,-6.113272,2.950855,6.888221,3.822029,5.324007,-7.627580,-6.045525,-5.745678,-5.791558,7.607094,3.130092,3.263838,8.284672,-3.839584,7.486904,-0.317861,-9.803192,-8.020879,-2.965431,7.826020,3.034743,-5.401104,-5.151712,2.282532,-9.286689,-2.171648,-6.652026,1.928900,4.693940,-9.086075,0.537550,-5.885800,7.606467,-7.254638,5.676652,6.517310,5.181580,-6.087170,-3.769681,3.902496,-8.770788,-2.348891,0.169739,-7.182514,0.906256,-0.107742,3.842643,-8.791633,3.095260,-9.228105,4.618510,1.942955,-6.684739,-5.362332,1.419424,2.683614,9.692283,-2.729133,4.998460,6.187690,7.797481,-8.250030,2.857944,9.171698,5.206385,2.789768,-2.317409,7.191564,-5.012432,8.770670,1.523490,-3.655274,7.371518,-8.016074,0.826499,8.655331,2.001352,-9.643502,2.078106,6.773007,8.200637,7.979798,8.337404,-7.313321,-6.818734,8.142178,-4.011333,-0.437567,-2.553726,4.883912,-0.797985,-8.124211,-4.654432,-1.074564,0.833051,-6.284028,-0.763237,-9.987288,-4.089719,-2.198702,-6.998873,8.570056,2.225652,-7.005007,-9.383737,4.799741,1.301262,-0.775768,-9.398044,4.010199,-5.900993,4.243241,9.628983,-8.814249,-6.801545,-4.134957,-7.743487,-4.883678,5.388401,1.260377,-9.927875,-5.956790,-7.582601,0.156345,-9.137600,-3.150894,-6.173184,6.409891,6.928208,2.726034,-0.126223,2.116295,8.124752,-2.073271,-6.653003,-1.522103,9.400390,-0.842544,6.611208,-9.648733,-9.477283,-3.753984,-5.568082,-8.661105,3.705477,-4.933357,2.625647,-1.572624,3.382318,1.492402,-3.030654,-7.806408,0.510628,-0.831809,-6.869719,-5.576647,3.375904,6.777659,-5.987305,-9.391838,4.499228,-0.110300,-1.934112,-0.754128,0.893074,1.454034,5.677577,0.584681,7.142841,-3.448090,3.220198,-6.957792,6.048487,-4.052338,-7.818229,-5.279741,4.537569,-7.904783,0.569126,5.054474,5.108207,9.694513,-7.005864,9.399770,-4.080433,5.848790,-8.527182,-4.068788,5.778498,5.018457,9.721607,-9.912120,-7.416630,-5.737600,2.196126,2.390016,9.552062,4.874404,5.718696,0.502034,-6.409921,5.149350,-2.181755,1.060923,9.750626,2.516902,-0.513356,7.944938,6.436455,-2.957728,-8.463260,9.793983,-0.602257,6.483016,3.123240,7.983768,-6.422902,-0.621178,5.868600,-8.125589,-6.610099,5.860426,3.283791,-3.995048,8.296650,2.771487,-8.635310,9.442069,-2.828149,-9.059313,7.944326,4.328901,8.491140,-8.814617,5.411129,2.408863,8.863964,-9.216324,7.195291,7.769714,-6.726894,-9.581876,9.621470,9.865919,4.850480,8.917696,-8.897678,-3.370754,-7.984064,-6.900340,3.444419,6.628335,-4.126977,-1.127567,-0.358298,-4.594191,-6.980114,7.919499,-9.103178,1.867724,0.072249,-6.047995,-2.723386,5.248042,-8.087068,-5.134841,9.822163,-9.615151,-7.056323,3.732124,-8.480781,1.304495,6.390811,-3.157219,7.218447,6.704222,-4.310407,-8.543898,-7.223473,0.914076,9.926767,-0.802566,9.988758,1.779899,2.786946,2.473076,-1.859301,4.701170,8.770843,-7.445418,3.366564,9.196857,1.049690,-3.142560,7.394650,-8.098149,-3.179085,4.112410,1.931554,0.265930,-9.637098,-1.340375,5.749172,-3.037702,6.573102,3.145439,-0.692826,-6.421821,2.833626,3.902863,-5.870528,2.208845,-8.494954,5.412013,5.056269,6.963866,9.977122,5.706957,4.665027,7.109495,-9.352821,9.191096,-9.137844,-3.226924,4.003007,-7.600600,-1.479220,-8.225835,3.950430,-4.527895,-4.621001,-3.737465,-5.394393,-4.178017,2.492572,-9.212563,-1.764342,-7.306265,-2.373485,-2.652443,-6.704788,6.534902,0.821248,7.001589,5.352879,2.161073,7.470212,8.237427,5.205792,9.279573,-2.393873,-6.403201,-5.453547,8.882384,-3.645981,-7.936421,-3.407954,1.840502,1.126293,-3.676225,-5.581133,-7.997227,9.582661,1.625482,1.234712,9.071971,0.763650,-3.178211,-6.797064,-7.704204,-0.462324,3.793485,-1.112875,-9.725612,-5.636264,0.820775,-9.339665,-4.388616,1.891580,1.133887,8.333017,-6.435955,-6.073529,-2.734014,-2.925478,7.224712,3.251083,-3.666148,1.502100,8.629793,6.215613,0.327029,-8.499292,-9.046483,5.385800,-7.562891,-6.780736,4.174508,6.575069,-3.058706,-8.660995,-6.589230,-7.378631,-0.429266,3.234799,6.196686,-3.260940,1.797658,6.959390,-8.768234,0.971863,6.920377,-7.719611,-8.298680,-4.803819,6.086521,2.432263,-5.968053,-9.739891,2.240717,-5.870957,2.869886,3.965687,7.352445,-9.081127,-4.137948,-9.562564,4.497658,-5.983596,-3.063293,-3.478703,-4.328921,-8.091936,-9.526517,9.265651,-3.094025,-1.779599,-5.030501,-5.085489,-1.987672,6.024217,-0.750910,-4.548587,-6.226301,-1.314972,1.019416,8.991362,-9.666840,-6.654032,-7.416374,-5.484055,7.529322,-9.492166,0.409290,0.615956,8.650790,-6.972366,-9.630679,-7.327539,8.596703,-9.325748,0.725203,-5.648745,1.980758,-2.439668,-9.781824,-0.992900,-2.677940,2.037361,-1.189295,6.096728,-5.498815,4.725583,6.880108,8.409792,-2.410253,8.464138,0.563338,8.338456,6.269341,5.844268,9.928864,1.528903,-3.106905,6.446707,-1.979452,9.540587,-7.788673,3.625637,-1.379534,-7.880837,-6.724858,-0.400188,-1.490890,-1.621861,-7.947192,5.282293,-9.222965,9.338439,-4.847943,8.922203,8.985484,6.290798,8.388459,5.242877,0.427211,0.612787,-5.205425,-3.503696,9.283499,-5.080007,-5.371195,0.338616,-0.790896,2.103264,8.521857,5.350775,7.847205,-1.379530,-6.015056,-9.997371,-9.918600,3.788054,-1.125781,8.641362,4.081005,7.927370,1.434728,-0.628874,8.710446,-9.022435,-1.495711,5.101751,-6.223349,-6.417594,-7.338113,5.306708,-2.798510,9.903372,-8.273733,9.934823,-3.206225,1.278797,7.422310,4.647850,8.672909,-2.959956,-5.423040,-7.179843,0.260973,1.188462,3.177526,-2.455052,4.388806,-8.118673,-5.219631,8.336164,-7.803847,1.743883,-4.013919,-2.510932,-6.191447,8.252589,9.926536,-5.046441,2.158859,-7.948454,-2.868787,-4.790817,-5.399551,3.367515,-9.386145,7.204715,6.254863,6.591332,9.525529,9.437614,-0.578696,-7.439541,-8.300971,-9.215119,-6.484217,8.692063,-3.933460,6.678634,-8.139974,0.786479,2.184783,-4.220595,2.575564,1.776536,8.917115,4.197575,9.808278,7.763692,-9.851846,5.979231,-4.030740,3.833027,1.837680,6.811091,4.148456,-8.937934,3.639460,9.195038,-5.268082,-5.699095,8.353042,4.009074,5.600665,6.830610,7.109013,0.039247,1.014134,-7.638822,5.159758,-4.661970,-8.765367,4.602769,5.380732,1.710113,3.336384,-5.516656,7.523661,-4.718951,-5.952548,-5.264800,-4.339457,-5.042191,-4.089982,-4.974288,-6.361884,-6.811988,-3.948490,5.367583,-6.299682,2.629874,-8.285304,-7.817077,-3.950677,-7.055371,-2.064910,-1.073279,-0.198812,-6.469341,5.563945,-5.156079,-6.554915,-5.785745,8.549362,-6.153633,-9.543256,5.427856,4.851565,-7.234130,-8.898090,1.881543,1.000570,-2.753727,-3.199823,-2.693829,3.106589,9.704050,9.294436,-2.469481,0.373167,-9.595591,8.647340,-7.187110,-8.000482,-3.066817,-2.240579,9.295227,2.099582,9.005157,7.534237,3.065340,9.934877,-6.997004,-9.197254,3.157650,5.475932,-1.321111,1.337067,-1.393952,3.021379,6.835262,-4.669415,-8.752030,-2.685183,8.683094,1.004565,-9.631009,7.006704,-8.608651,-3.407716,-6.323018,4.995343,-4.192755,0.479150,-2.498155,7.019423,-2.976780,8.476126,3.079098,9.382967,5.204043,2.737436,1.731096,-3.978310,-1.639576,9.415297,-3.996897,3.912969,1.953302,6.507540,-0.140993,0.871747,-1.866720,9.956255,-5.605642,-7.325152,4.551235,-6.559147,9.862571,-8.499204,6.641347,-8.527698,5.589976,-0.365858,-0.548090,-2.071099,-1.393951,-2.851951,-5.133489,-3.341871,-3.702075,-8.512317,-8.073524,-4.934566,4.934408,9.466687,-4.142348,6.112996,-7.166209,-7.451764,0.617846,3.737602,4.216412,0.201022,9.963396,-1.050107,-4.936136,2.618595,5.640975,-9.781164,7.363309,6.810742,0.449823,5.038771,-1.289913,8.730912,-1.150813,1.794093,-0.145559,-2.962724,-7.702970,7.584491,0.706898,8.273530,-3.418997,-1.446898,-9.024020,4.197438,-2.215254,3.469007,-2.358911,-5.959882,6.780568,-2.916116,-1.498728,5.380432,-6.473664,-7.828313,8.011632,-0.283059,0.143201,9.253332,7.143778,-2.775133,8.184196,-2.872308,-2.300829,1.890118,3.336549,2.338612,-8.137408,-4.804077,4.462633], dtype = "float32")#candidate|722|(924,)|const|float32
call_721 = relay.TupleGetItem(func_648_call(relay.reshape(const_722.astype('float32'), [924,])), 2)
call_723 = relay.TupleGetItem(func_651_call(relay.reshape(const_722.astype('float32'), [924,])), 2)
output = relay.Tuple([bop_715,bop_718,call_721,const_722,])
output2 = relay.Tuple([bop_715,bop_718,call_723,const_722,])
func_733 = relay.Function([var_713,var_714,], output)
mod['func_733'] = func_733
mod = relay.transform.InferType()(mod)
mutated_mod['func_733'] = func_733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_733_call = mutated_mod.get_global_var('func_733')
var_735 = relay.var("var_735", dtype = "int8", shape = (4, 13, 11))#candidate|735|(4, 13, 11)|var|int8
var_736 = relay.var("var_736", dtype = "int8", shape = (4, 13, 11))#candidate|736|(4, 13, 11)|var|int8
call_734 = func_733_call(var_735,var_736,)
output = call_734
func_737 = relay.Function([var_735,var_736,], output)
mutated_mod['func_737'] = func_737
mutated_mod = relay.transform.InferType()(mutated_mod)
var_750 = relay.var("var_750", dtype = "float64", shape = (4, 2, 9))#candidate|750|(4, 2, 9)|var|float64
var_751 = relay.var("var_751", dtype = "float64", shape = (4, 2, 9))#candidate|751|(4, 2, 9)|var|float64
bop_752 = relay.divide(var_750.astype('float64'), relay.reshape(var_751.astype('float64'), relay.shape_of(var_750))) # shape=(4, 2, 9)
func_648_call = mod.get_global_var('func_648')
func_651_call = mutated_mod.get_global_var('func_651')
const_763 = relay.const([-3.061625,7.238313,-1.863521,4.194273,2.322694,-3.363677,-5.093940,-0.790711,9.683558,-8.057464,4.187313,1.600157,0.488433,-7.507092,-1.501887,4.487418,9.736464,-2.014217,5.971314,-0.904494,-2.776233,2.996035,-9.676150,9.493298,2.285994,-9.600077,9.723620,-3.120507,-8.271024,-6.429987,-6.696427,1.516411,-8.481808,-3.307134,6.017127,-9.077275,0.975574,-8.452181,-3.530256,6.746561,8.969641,-8.021716,-6.956285,2.088428,-3.038210,3.159353,-5.959394,-1.517468,-9.036308,-9.722194,6.644049,3.655351,-4.497509,-8.646744,4.205455,-1.035666,9.682713,-2.667549,-5.478624,1.376169,2.480096,3.949438,0.597530,-8.152416,-2.984265,-8.673413,-5.626986,-2.835647,7.207364,8.360586,7.888415,-9.585986,-2.173888,-6.501594,-2.763164,5.916697,-6.122197,4.363010,-3.426716,-7.123281,5.254777,-3.408775,-1.447539,-0.421329,-3.535695,8.797638,-5.788817,-3.636986,-4.143240,2.204977,-1.920186,-0.688210,9.190049,3.740486,3.868175,2.463893,-9.226553,-4.986048,-8.615235,-3.663826,-4.283331,-4.758227,2.964099,-6.466390,1.392370,5.485575,-8.719810,5.552218,9.834138,-2.913353,-2.629605,8.951973,4.097227,1.389104,5.004114,-6.752414,5.140331,-3.637722,-1.082674,-2.857614,-4.178082,1.907778,4.071114,-2.518561,6.666348,-5.719013,-8.311601,-7.356003,4.191398,-6.186273,-8.640308,0.870239,2.563817,-6.034245,-6.616337,-7.709956,-3.195884,9.997829,-7.185582,5.673871,-0.496180,3.820728,6.455997,6.548533,8.852145,8.937903,-7.116302,-6.209645,-4.505555,4.981099,4.942497,8.707819,-7.724800,-0.778870,7.743518,-9.602631,8.665735,-6.511128,-5.458060,9.892260,0.338186,4.374471,1.777972,-1.575129,-0.109437,-5.002836,1.272453,-5.961569,7.999442,-5.695042,-8.916966,-8.904361,-6.398760,-0.627447,-5.187613,-1.869460,2.672031,-4.915089,7.460442,-9.819921,-2.571209,-5.842713,0.718508,5.591620,3.744883,7.291295,3.659874,0.863684,-3.196914,-6.706604,8.730055,7.639595,-5.618464,-9.841008,-4.982897,8.867022,3.599739,-5.926597,-4.602173,6.301974,5.515842,1.562606,1.635825,-5.867616,2.640460,-4.647826,2.735824,8.859168,2.134095,-3.037384,-9.551364,6.222365,0.314580,-8.253507,6.485680,8.831515,-9.815127,0.861641,0.191675,-5.750534,-8.020395,0.305255,-2.512241,5.853276,-3.472721,3.914034,-8.320190,9.797890,-1.089871,2.496216,5.715927,-1.240866,-1.489332,3.535354,6.810602,-0.004208,6.177542,4.561038,-1.472160,6.702458,-0.010700,1.060733,8.403299,-7.500026,2.106867,-6.222024,-1.075501,-8.750914,-3.588309,-9.431661,1.216090,-9.112701,6.914982,-7.689492,-4.667313,-1.312657,-5.647686,7.562790,-9.566241,1.503996,-0.023462,4.672520,-2.525313,1.303142,6.052348,-1.959087,-9.984913,6.163404,2.803234,3.693668,-7.560129,-0.247791,1.303740,-9.407660,-2.886861,8.234276,3.536354,1.301128,9.132314,8.946155,9.969124,5.093041,-9.461679,6.243790,9.846054,4.498787,-5.290090,-3.231961,-2.988120,-6.320400,5.416797,5.243394,-7.678341,-7.105139,7.000096,-7.776318,-2.803623,-1.253221,2.488777,-8.437048,-4.231815,-8.252135,4.559805,-6.368854,9.884988,-6.932304,5.657449,-7.417237,7.878315,3.061953,-6.207949,7.401754,6.977230,9.363740,7.227564,9.724416,6.621809,-5.147356,3.626308,-7.476675,7.904869,5.133793,-1.336906,-9.657577,-8.440804,-5.918078,-3.979304,5.112687,3.464368,-1.659205,-9.098720,-5.234629,3.463416,2.774805,-6.688695,8.617567,-9.254671,-6.630782,-4.369078,-4.302688,-5.413829,2.565891,-2.784856,-2.794320,6.541574,-8.101503,8.086331,-9.943908,-5.351595,4.261500,6.003479,-0.878964,1.191157,6.140695,-0.618429,-5.559333,-1.948292,1.595515,6.054784,7.507620,-2.977955,-9.353398,-3.751215,-5.341398,-9.972197,5.654568,-8.305940,-3.723974,-0.110843,-4.056864,0.191671,1.831430,-6.648728,0.868639,5.731772,1.638650,-7.366517,8.232366,-1.459123,1.602101,7.699000,-1.187268,4.722139,7.991833,-0.659747,-0.394195,-9.155761,-2.118894,-7.893353,-5.369968,-3.887776,3.380561,-3.450129,7.249789,-3.045439,5.776277,-5.158296,4.257272,-7.119054,9.483885,-1.218413,2.354163,-3.509407,-2.755820,0.374897,-1.525617,-6.044358,-0.174050,-7.872048,8.848357,2.645580,-1.491765,-5.804791,3.507824,-2.412313,-3.959252,-4.181282,9.887920,2.829372,8.158704,9.846325,-1.599108,4.865923,-6.956625,-4.807089,-4.657441,-2.497840,4.247763,-6.759011,-6.663548,-7.915626,-2.041270,-9.742363,1.166428,2.900647,-3.736582,-3.043562,-8.736331,4.168195,2.011851,-7.509588,1.494111,-5.737932,4.426924,0.829632,8.329764,-6.306402,-2.534091,4.015492,-2.553476,-5.806899,9.171409,3.285857,-9.089743,-6.612092,6.099502,8.766023,-8.552476,7.136180,9.580896,8.382546,-5.750135,-3.224118,-0.587234,-5.156928,-1.509929,1.229202,7.174505,1.856969,3.225713,5.194747,-7.404228,-3.611112,-0.446016,-1.814848,-4.461195,-9.908543,-8.165489,-3.040757,8.394507,4.281120,0.542410,5.353074,-3.442031,8.655239,6.789061,-2.707884,7.492775,-9.930603,-9.537157,6.298096,-9.782726,-7.442833,-2.982119,9.723033,7.510204,9.224864,2.894239,-4.767513,0.791234,7.376578,-6.562141,-7.771616,-1.311253,-2.449218,-2.736735,-3.063711,8.640106,9.050614,6.592795,7.977715,6.179752,8.298939,-0.403195,-9.775117,7.160380,-0.457837,1.461119,-4.655000,5.807644,1.599786,-5.998683,-7.138231,-0.258832,-6.169237,-8.511965,-3.827297,-7.735222,-3.897350,9.303600,0.321974,-4.574050,2.018231,-1.982439,-7.198371,-8.240254,8.300154,8.616919,-0.376490,5.032968,9.294749,0.630160,-3.461298,8.601615,-8.342298,9.838967,-7.234924,9.485199,-7.647052,3.254003,9.224617,-5.974171,-2.184606,-0.132121,5.138132,9.719046,1.813640,-8.269565,4.535741,-9.774726,2.954288,5.860113,2.737726,3.254697,-9.989557,-4.169514,-1.444221,4.559756,-8.709844,5.477732,2.674966,-2.259740,2.548648,-6.360589,8.280309,-0.623494,4.400933,-1.663527,-8.826371,-1.327547,-1.476242,-1.878725,9.867459,6.122775,6.774605,7.492636,-9.028069,3.551269,-4.250236,-6.436784,-1.407943,-4.630522,-0.838534,4.710048,-4.535122,5.428501,-5.803098,9.204588,6.245206,-2.048851,-7.354445,-3.511094,3.527393,-1.852761,1.476537,9.780442,-2.560428,9.010591,-8.101069,8.077452,-1.370391,9.450893,5.623293,-3.027260,-6.192637,6.202177,-1.512111,5.197510,-2.089125,-6.603370,-0.778236,2.826192,0.889824,6.331207,5.094272,7.176369,1.389533,9.765982,0.444073,-8.034124,-6.965313,-5.790017,0.912562,-6.239154,-0.911537,0.343250,1.234343,2.948048,-4.227150,-1.366230,3.099749,9.262464,8.771997,9.114385,5.472116,-4.712426,-4.586549,-7.219074,-2.995233,1.598063,8.454726,2.917741,3.004386,-9.018531,9.044566,-1.491237,-1.147189,8.313412,-3.498036,-1.838912,-6.214764,0.772411,-9.742274,-7.696691,-5.681238,7.006223,7.460683,-2.971071,2.184905,-9.695996,-3.438085,5.916025,-2.622804,-3.115408,-5.987396,-5.086437,5.929736,0.795616,-7.180840,-4.409610,1.699216,-2.990342,-1.299950,6.593800,3.346672,-5.276280,-2.920035,-5.297625,-2.635590,1.301935,-1.209690,-4.846588,6.131326,0.808510,1.003307,4.294234,0.459599,1.393787,-4.295726,9.875638,-6.151407,4.622142,4.679909,-9.807782,-7.253133,-3.552262,6.167294,-0.129370,-9.116631,-6.652522,4.576062,-5.204243,-2.524115,-4.384039,8.154134,-0.263435,0.399104,-6.726072,-9.112905,0.389296,1.329624,2.043917,-8.038979,1.469514,9.923009,-1.292454,6.278034,3.246854,5.965120,8.681054,5.037033,-3.706616,4.686534,0.234481,1.974477,9.945158,5.302637,-6.475457,-2.548276,-4.570426,4.327460,8.167227,-0.330003,-5.080213,-8.352326,-3.505611,-4.752754,5.636396,3.680678,9.907640,2.378734,6.736308,7.634010,-9.141854,-2.096591,0.357024,3.905622,-2.021416,1.255137,2.922967,-2.774765,7.502694,3.606114,6.115511,2.550898,9.868820,3.672576,2.422060,-9.953739,-9.381577,9.474758,9.081478,-6.633229,-7.767453,-8.385405,-8.010173,6.180617,2.273460,-6.899879,3.842750,0.946106,-3.580310,-4.262698,9.595675,1.162230,7.207132,3.674338,9.550576,-2.373538,5.892171,-2.962524,-4.358561,4.566685,-4.653693,-2.853743,-5.210591,-2.402713,-1.329916,-6.907184,-8.609270,1.295379,-3.381009,-7.687977,7.686671,5.838172,4.673676,-2.924056,3.058716,-0.450566,5.923380,-0.252807,-5.554900,-2.442780,7.685560,2.830510,-6.325687,3.413046,4.653727,-8.583302,-5.756408,-3.258543,9.564034,1.669892,-8.611921,-3.869152,-7.826876,6.798242,-8.253425,1.085583,7.818838,8.829562,-0.607564,-4.642094,-6.478324,-1.214031,9.827466,-7.389525,2.435803,9.402966,3.332211,7.644157,-1.741396,5.432590,-4.788494,-6.654528,6.256684,6.870845,-5.760222,3.832945,-4.692853,-5.360757,-1.583910,9.680467,-4.638801,-4.659034,-6.185606,-8.789840,-9.991325,1.681213,-1.234056,-1.360636,4.276202,5.292629,-0.556374,-1.038220,-3.073284,-4.492732,-6.958093,-4.161155,-0.510027,-0.618278,-7.553396,-3.889959,-7.645783,6.660788,0.335082,-2.768253,7.066149,7.345077,9.505819,5.146779,-1.601269,-4.511094,1.393054,4.273220,4.726558,-4.491436,-0.377356,8.601712,8.574601,-8.161361,-1.510052,9.566595,-2.723778,1.723653,3.909136,-3.133549,-5.796397,-4.232891,3.839262,-5.357523,5.850616,0.001694,4.819476,9.130378,3.413196,0.948428,-8.910705,-2.386917,9.322579,-8.786471,-8.987409,-0.231356,-1.899762,-1.355567,9.905355,-6.920322,5.883786,-8.290041,-3.402155,2.164103,6.483396,-4.386574,-0.997858], dtype = "float32")#candidate|763|(924,)|const|float32
call_762 = relay.TupleGetItem(func_648_call(relay.reshape(const_763.astype('float32'), [924,])), 1)
call_764 = relay.TupleGetItem(func_651_call(relay.reshape(const_763.astype('float32'), [924,])), 1)
func_733_call = mod.get_global_var('func_733')
func_737_call = mutated_mod.get_global_var('func_737')
const_772 = relay.const([6,9,-2,-3,10,-1,10,-4,4,-3,-2,-9,8,10,3,-10,-1,8,-1,-10,-8,3,-7,-6,9,-6,-2,9,6,-9,-9,7,-9,3,-7,10,-6,-3,10,-5,-1,-9,8,4,-7,3,4,-6,-7,3,-4,7,-6,4,-2,-6,-4,7,-4,5,5,-7,-10,-4,-2,10,9,-7,-10,4,3,-8,-6,-8,5,4,-3,-1,-4,9,1,3,7,-9,-2,-2,3,-2,2,-1,-5,-8,-6,1,-5,5,2,-8,-7,-7,-9,1,-8,3,3,8,1,-6,7,6,-10,8,8,-10,-2,-3,7,-5,9,6,1,1,1,8,7,-10,4,8,5,-6,-6,-9,5,9,-1,-7,8,-6,-5,7,-10,-10,6,-6,-7,-9,3,7,4,-1,10,1,8,-7,4,7,-10,8,-7,8,-9,7,8,2,-2,9,3,-2,-9,-3,10,7,-9,7,-1,7,3,-6,2,5,2,-7,-5,-7,-5,-7,2,-8,-1,4,1,6,7,-7,9,-4,5,8,-10,4,7,2,-7,10,-7,-4,8,-4,-1,6,2,-2,1,9,-9,7,-8,5,1,-7,-10,9,-10,-2,4,10,-8,-5,6,-10,-10,-1,8,-6,-1,-9,2,8,-3,-3,-10,4,-9,7,-6,-10,-6,5,-9,4,3,-3,-3,7,3,4,-4,3,9,9,-9,-2,-10,-8,9,8,-7,-9,2,-6,-5,-10,9,2,-3,3,-8,6,3,8,6,-6,-7,-3,10,-5,10,-3,9,6,6,4,6,3,-4,3,-7,2,3,-4,-5,-7,-4,-5,-8,5,-2,-8,-8,6,-10,-9,8,-2,7,4,-4,-8,-3,-1,5,5,-4,-6,1,-4,2,9,-7,1,-6,-7,-5,-9,1,9,8,3,-6,6,-2,-10,4,-2,-2,-6,-7,-9,1,3,1,-7,-6,3,-9,1,9,-6,1,-5,-3,3,5,4,-1,-5,-9,-1,3,10,3,5,-1,9,9,6,7,1,1,-8,-2,-5,5,9,10,-2,-9,6,-8,-3,-1,8,-8,9,-4,-2,-10,-1,-2,5,-10,-4,-5,-10,-7,1,-3,7,-8,1,-5,-10,1,-2,-2,3,-5,2,9,-3,6,-8,3,-2,-4,-2,-7,4,4,1,4,-7,-2,6,-10,2,5,6,-5,-8,3,-6,6,10,-7,-7,4,-9,-2,2,6,-9,3,-10,6,-7,-9,1,6,-5,-10,-5,6,-5,-9,-2,2,-7,-9,-3,-4,-5,-7,10,6,6,8,2,-3,4,-5,-8,-10,-2,-3,-5,7,-2,6,6,7,-8,3,-9,-1,2,-1,-1,-7,-1,7,-7,-8,9,-9,6,8,3,7,2,6,4,-4,8,7,2,-9,-10,-6,-3,-3,4,-4,-7,-8,-1,-2,-2,9,10,3,-9,8,9,8,2,-10,5,1,7,10,4,2,-10,7,-6,-9,1,6,-5,2,8,-2,-6,-6,2,10,9,3,-4,9,-1,6,-8,-1,-9,-10,5,-1,-5,-5,-2], dtype = "int8")#candidate|772|(572,)|const|int8
call_771 = relay.TupleGetItem(func_733_call(relay.reshape(const_772.astype('int8'), [4, 13, 11]), relay.reshape(const_772.astype('int8'), [4, 13, 11]), ), 2)
call_773 = relay.TupleGetItem(func_737_call(relay.reshape(const_772.astype('int8'), [4, 13, 11]), relay.reshape(const_772.astype('int8'), [4, 13, 11]), ), 2)
uop_779 = relay.asinh(const_772.astype('float64')) # shape=(572,)
var_784 = relay.var("var_784", dtype = "float32", shape = (8, 13, 9))#candidate|784|(8, 13, 9)|var|float32
bop_785 = relay.right_shift(call_771.astype('int32'), relay.reshape(var_784.astype('int32'), relay.shape_of(call_771))) # shape=(8, 13, 9)
bop_788 = relay.right_shift(call_773.astype('int32'), relay.reshape(var_784.astype('int32'), relay.shape_of(call_773))) # shape=(8, 13, 9)
func_733_call = mod.get_global_var('func_733')
func_737_call = mutated_mod.get_global_var('func_737')
call_800 = relay.TupleGetItem(func_733_call(relay.reshape(uop_779.astype('int8'), [4, 13, 11]), relay.reshape(uop_779.astype('int8'), [4, 13, 11]), ), 1)
call_801 = relay.TupleGetItem(func_737_call(relay.reshape(uop_779.astype('int8'), [4, 13, 11]), relay.reshape(uop_779.astype('int8'), [4, 13, 11]), ), 1)
output = relay.Tuple([bop_752,call_762,const_763,uop_779,bop_785,call_800,])
output2 = relay.Tuple([bop_752,call_764,const_763,uop_779,bop_788,call_801,])
func_811 = relay.Function([var_750,var_751,var_784,], output)
mod['func_811'] = func_811
mod = relay.transform.InferType()(mod)
mutated_mod['func_811'] = func_811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_811_call = mutated_mod.get_global_var('func_811')
var_813 = relay.var("var_813", dtype = "float64", shape = (4, 2, 9))#candidate|813|(4, 2, 9)|var|float64
var_814 = relay.var("var_814", dtype = "float64", shape = (4, 2, 9))#candidate|814|(4, 2, 9)|var|float64
var_815 = relay.var("var_815", dtype = "float32", shape = (8, 13, 9))#candidate|815|(8, 13, 9)|var|float32
call_812 = func_811_call(var_813,var_814,var_815,)
output = call_812
func_816 = relay.Function([var_813,var_814,var_815,], output)
mutated_mod['func_816'] = func_816
mutated_mod = relay.transform.InferType()(mutated_mod)
var_919 = relay.var("var_919", dtype = "int8", shape = ())#candidate|919|()|var|int8
const_920 = relay.const([[[7,-1,-1,8,9],[-10,9,-10,-2,-2],[-6,-8,3,9,9],[-9,-8,-3,-3,6],[-6,6,2,6,-6],[2,9,8,5,-5],[-3,-5,5,10,9],[-1,2,4,-3,7],[-9,3,10,2,-9],[4,-1,5,-6,-5],[-10,-4,6,-6,8],[-10,4,-5,-3,2],[3,-5,6,2,2],[-7,-6,5,-8,-10],[-2,-3,4,-1,-4]],[[8,-2,2,3,-7],[1,-9,6,-8,-5],[-3,9,-5,2,9],[-2,3,-1,9,-9],[3,2,-7,-8,-3],[3,1,-1,-6,-4],[-1,3,-8,9,2],[-4,7,9,-2,-9],[9,2,8,6,-8],[-9,5,-3,10,-10],[9,7,10,10,-10],[-9,-10,9,-6,-2],[-5,5,6,-3,-1],[7,7,-6,8,8],[-4,9,2,4,4]],[[4,10,9,9,-10],[-5,10,3,-10,3],[-10,-9,-3,-6,-10],[-6,10,-6,-1,1],[5,10,-9,-3,-3],[8,-5,2,-7,8],[1,-2,9,-7,2],[2,3,5,5,2],[-6,3,1,-3,6],[-6,5,-7,7,-3],[-2,-8,-6,-9,-3],[-3,5,-4,3,-5],[-9,5,10,-8,-6],[9,5,4,-2,-4],[-6,-6,5,7,7]],[[7,4,2,6,4],[9,1,-1,-7,8],[6,10,-6,3,-3],[7,8,1,-9,10],[-10,-5,4,4,6],[7,-7,-7,-4,-8],[3,-6,-9,3,-6],[1,3,-5,-3,2],[-2,-5,-6,1,3],[4,5,6,-8,3],[-3,8,-2,5,-5],[-5,4,5,10,-9],[-5,8,-2,3,-7],[-4,1,-6,-6,-8],[-6,7,3,-1,9]],[[-8,10,2,4,3],[-4,-10,8,9,7],[-6,-8,-4,-8,4],[2,10,9,5,9],[-5,-5,-9,-10,-1],[-6,1,-2,5,-9],[-5,-4,-4,-9,6],[-9,3,5,8,-2],[4,6,2,-10,7],[-7,-10,-9,3,5],[8,-10,7,4,-3],[-6,2,2,-1,-2],[-4,5,1,-8,4],[4,7,-2,1,4],[10,-3,-2,-8,-1]],[[-5,1,-9,-4,7],[-2,7,-8,6,4],[-5,9,-9,-5,6],[-9,-1,1,-3,8],[-2,-2,2,1,-9],[-9,9,4,-9,-7],[7,7,6,-9,-4],[8,1,-8,-2,-2],[-4,-7,9,3,4],[-4,-5,10,-1,-2],[-10,-5,-2,6,4],[5,1,10,-7,5],[-2,4,-1,9,-5],[-1,1,8,8,7],[3,9,8,-1,10]],[[-6,-6,10,-5,1],[1,-7,-7,8,-10],[-7,-1,-9,6,3],[10,10,8,-5,-10],[4,-8,6,7,-3],[10,-4,-8,1,-2],[2,4,8,-2,6],[1,5,-1,7,6],[-7,-1,9,-1,-5],[-5,-7,-9,-10,9],[-4,5,2,-2,-6],[-2,-7,1,4,6],[-8,-6,-9,-1,-5],[4,5,-9,-7,-7],[-9,3,3,4,9]],[[7,-1,2,6,-9],[-8,-2,-6,9,4],[-4,8,-1,-5,-6],[-4,-2,4,7,1],[-4,-10,-1,9,-10],[9,-8,-5,-6,3],[-3,-5,-4,-10,10],[6,8,2,2,1],[-2,8,-5,-10,-1],[3,2,10,-8,6],[2,3,7,1,-5],[-3,-3,9,-4,-1],[2,3,-3,-9,-3],[-8,-6,-7,4,-6],[10,-8,-2,1,5]],[[-3,7,4,-10,8],[9,-10,-4,-10,5],[-9,-5,8,-3,-3],[2,-9,3,8,6],[7,-1,-10,4,-5],[-4,-3,-1,-6,9],[-7,7,-9,-7,6],[-2,-1,-1,-10,-1],[-5,-1,-5,7,-9],[3,9,-1,-2,5],[4,-2,10,5,10],[5,10,4,-8,-9],[9,-2,1,7,2],[5,9,10,-3,-1],[1,-8,2,8,-3]],[[9,-8,10,-4,7],[1,3,-9,1,-10],[-7,-10,1,9,4],[-6,-5,3,6,-4],[-7,-4,7,3,-7],[2,-3,-9,4,4],[9,10,6,1,3],[6,-10,-10,6,-9],[-6,5,3,4,1],[7,9,5,-1,1],[2,3,10,1,7],[-6,-10,4,8,-5],[7,-10,7,4,-2],[3,-2,7,2,-5],[9,5,6,-7,7]],[[-3,1,-1,-9,-10],[9,6,-2,1,-3],[6,-10,3,10,8],[1,-2,-5,3,-7],[6,8,7,-6,-5],[-5,-1,10,10,-4],[-7,-2,-7,3,2],[5,-8,-1,-3,1],[6,-9,-10,-10,8],[1,-9,6,9,-8],[-1,-8,-5,2,-5],[-6,-1,-7,3,-3],[3,8,-4,-8,4],[-1,-8,-4,9,-1],[-8,-7,-9,2,-4]],[[-2,-7,-9,-5,-4],[-4,5,-6,-4,-4],[-9,-9,3,-3,-1],[8,-3,4,-5,-8],[9,4,3,3,-4],[2,9,-4,-1,-7],[-1,4,1,-6,8],[-7,-8,-10,-2,-10],[-2,-4,4,-5,-2],[-5,-7,-6,8,7],[8,2,-5,-8,-9],[-5,-9,-2,-4,5],[-9,-8,-3,7,6],[7,9,1,6,-1],[8,-6,5,-9,6]],[[5,-6,4,-7,1],[6,-9,-1,-9,2],[4,7,4,-9,-1],[8,-10,8,4,-2],[1,2,3,2,10],[3,3,-5,10,-1],[7,-6,2,9,-1],[10,3,2,7,7],[10,-3,-9,-10,-10],[-1,-10,6,-3,9],[-7,6,3,5,3],[-7,-3,-6,9,-3],[-8,-8,3,2,10],[-2,10,-9,5,3],[8,-3,-2,-3,-6]]], dtype = "int8")#candidate|920|(13, 15, 5)|const|int8
bop_921 = relay.equal(var_919.astype('bool'), const_920.astype('bool')) # shape=(13, 15, 5)
uop_925 = relay.sqrt(const_920.astype('float32')) # shape=(13, 15, 5)
output = relay.Tuple([bop_921,uop_925,])
output2 = relay.Tuple([bop_921,uop_925,])
func_929 = relay.Function([var_919,], output)
mod['func_929'] = func_929
mod = relay.transform.InferType()(mod)
mutated_mod['func_929'] = func_929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_930 = relay.var("var_930", dtype = "int8", shape = ())#candidate|930|()|var|int8
func_929_call = mutated_mod.get_global_var('func_929')
call_931 = func_929_call(var_930)
output = call_931
func_932 = relay.Function([var_930], output)
mutated_mod['func_932'] = func_932
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1121 = relay.var("var_1121", dtype = "float32", shape = (8, 1, 9))#candidate|1121|(8, 1, 9)|var|float32
uop_1122 = relay.sinh(var_1121.astype('float32')) # shape=(8, 1, 9)
output = uop_1122
output2 = uop_1122
func_1124 = relay.Function([var_1121,], output)
mod['func_1124'] = func_1124
mod = relay.transform.InferType()(mod)
var_1125 = relay.var("var_1125", dtype = "float32", shape = (8, 1, 9))#candidate|1125|(8, 1, 9)|var|float32
output = func_1124(var_1125)
func_1126 = relay.Function([var_1125], output)
mutated_mod['func_1126'] = func_1126
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1388 = relay.const([[[-4,1,-1,3],[-8,5,10,5],[-6,-6,-10,-7],[9,-5,-5,-6],[-5,7,9,-10]],[[-8,4,-9,-4],[10,8,-4,-4],[-7,1,-1,1],[4,-2,9,-10],[8,-9,-1,-6]],[[2,10,-2,-8],[-3,-1,5,-10],[9,4,7,8],[-5,4,9,-8],[-5,8,3,6]],[[-6,2,-8,-2],[6,6,-7,-9],[-9,-2,-3,1],[7,7,5,5],[10,-3,-10,7]],[[9,9,8,-2],[-1,7,-3,3],[-6,-1,6,2],[-5,-6,8,-1],[7,-4,-8,-1]],[[-1,2,-7,-5],[7,-5,1,-9],[-2,1,8,-10],[-4,7,-1,10],[9,7,8,2]],[[-9,10,-4,-8],[4,10,-3,-5],[5,8,4,-9],[9,10,7,5],[-9,-5,6,1]],[[3,1,2,-3],[-2,2,-9,9],[-6,-9,1,10],[-1,-4,10,-4],[-9,-9,5,-7]],[[-2,-10,-9,-1],[8,-9,-6,-8],[3,1,-9,6],[-1,10,-8,-10],[-7,3,9,-2]],[[-6,5,-1,-6],[-7,8,3,6],[1,-10,5,9],[-2,8,8,8],[3,5,-8,-8]]], dtype = "int64")#candidate|1388|(10, 5, 4)|const|int64
var_1389 = relay.var("var_1389", dtype = "int64", shape = (10, 5, 4))#candidate|1389|(10, 5, 4)|var|int64
bop_1390 = relay.subtract(const_1388.astype('int64'), relay.reshape(var_1389.astype('int64'), relay.shape_of(const_1388))) # shape=(10, 5, 4)
func_392_call = mod.get_global_var('func_392')
func_395_call = mutated_mod.get_global_var('func_395')
var_1398 = relay.var("var_1398", dtype = "float32", shape = (924,))#candidate|1398|(924,)|var|float32
call_1397 = relay.TupleGetItem(func_392_call(relay.reshape(var_1398.astype('float32'), [12, 11, 7]), relay.reshape(var_1398.astype('float32'), [12, 11, 7]), ), 0)
call_1399 = relay.TupleGetItem(func_395_call(relay.reshape(var_1398.astype('float32'), [12, 11, 7]), relay.reshape(var_1398.astype('float32'), [12, 11, 7]), ), 0)
output = relay.Tuple([bop_1390,call_1397,var_1398,])
output2 = relay.Tuple([bop_1390,call_1399,var_1398,])
func_1409 = relay.Function([var_1389,var_1398,], output)
mod['func_1409'] = func_1409
mod = relay.transform.InferType()(mod)
var_1410 = relay.var("var_1410", dtype = "int64", shape = (10, 5, 4))#candidate|1410|(10, 5, 4)|var|int64
var_1411 = relay.var("var_1411", dtype = "float32", shape = (924,))#candidate|1411|(924,)|var|float32
output = func_1409(var_1410,var_1411,)
func_1412 = relay.Function([var_1410,var_1411,], output)
mutated_mod['func_1412'] = func_1412
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1561 = relay.var("var_1561", dtype = "uint8", shape = (15, 16, 13))#candidate|1561|(15, 16, 13)|var|uint8
var_1562 = relay.var("var_1562", dtype = "uint8", shape = (15, 16, 13))#candidate|1562|(15, 16, 13)|var|uint8
bop_1563 = relay.logical_xor(var_1561.astype('uint8'), relay.reshape(var_1562.astype('uint8'), relay.shape_of(var_1561))) # shape=(15, 16, 13)
func_648_call = mod.get_global_var('func_648')
func_651_call = mutated_mod.get_global_var('func_651')
const_1575 = relay.const([-6.250172,-5.711179,8.520280,5.692231,-9.465390,7.913560,5.230948,-1.529485,-2.346468,-1.544829,-0.786929,-8.031480,0.835372,-4.066148,-1.611628,3.491322,4.025923,-0.605500,-5.509976,-2.959624,5.440031,6.532081,4.576863,-7.154424,0.020018,2.607910,9.272516,9.238032,-1.018135,1.144821,-0.882378,-8.930240,4.538643,-0.262090,-1.959962,-7.289475,-0.013311,-9.577415,7.159670,3.206631,8.418192,-3.926230,-8.018956,-3.586188,3.037880,1.151638,-0.289620,3.429907,9.128300,4.994461,2.508314,3.785860,3.220650,4.799499,2.605728,-3.356072,4.012884,2.398573,-3.010531,5.822024,3.067592,8.293856,-4.613974,2.522084,-6.301559,1.510393,-0.264445,0.845098,1.053199,-4.277764,0.826812,5.412567,1.084201,2.605837,-6.009471,8.501081,3.755296,3.426804,-4.456211,2.906465,-4.841636,-3.847238,-9.920023,-1.387898,-2.479291,-3.852158,6.092179,2.474137,-7.950945,8.715552,9.266115,-6.118085,4.090643,-3.547633,9.282172,1.896795,-0.511395,-0.752628,5.011236,-1.853865,-1.788590,-7.061964,8.224425,-4.035310,-0.699565,-7.729731,6.885099,-5.217281,6.924354,-1.503169,1.297083,-5.591514,5.332950,-0.483713,4.828811,-2.309873,6.700266,-4.229320,-5.207361,-7.749656,-5.633461,-0.778023,1.479057,-9.706559,6.182114,8.967612,-6.155342,6.570059,8.570759,0.480368,-6.390921,-1.891461,-7.830714,-3.607588,6.898945,0.048237,-3.747571,6.633391,-3.734858,-0.692320,-7.571826,-3.678185,5.892050,-4.451338,5.026819,6.175868,-1.747001,0.943008,-9.579691,2.271398,-0.184245,4.096625,1.457074,6.515473,9.656087,6.722641,2.654303,-4.931662,6.345654,8.823128,-9.768442,3.294391,-3.051415,7.459113,-1.245913,6.255842,7.327994,2.885505,7.692534,4.897039,-9.540678,2.168181,-8.442734,-8.258540,-6.209445,3.306919,8.247802,1.766348,9.762154,-5.147542,-3.912908,7.193913,2.993134,-6.137015,1.748376,6.042717,-6.858994,7.199936,-3.809435,8.460731,-9.594640,-4.961546,9.605656,0.720907,-3.825716,-4.561374,3.572321,3.056237,7.191758,-4.538043,1.908901,-3.466323,-2.221206,-5.485074,-1.399035,9.930165,-5.083690,-2.758944,-8.279542,4.474197,2.393718,8.383974,4.410759,6.024414,-8.053657,6.857348,7.253829,1.411910,5.193231,1.008812,5.227688,-8.183141,-7.135965,6.892391,5.543065,0.305843,3.501301,4.906936,7.589525,3.813219,-9.203410,9.584469,-4.215029,1.935335,6.240864,6.562951,-4.577938,-3.087390,-0.562119,4.788743,-4.341354,1.206162,1.421962,-6.946089,8.803320,-1.969350,-9.339061,-7.045957,-1.340916,2.700425,-7.432769,0.536359,-5.914141,6.393541,9.746605,-6.290710,8.125488,3.898743,8.153653,-2.400088,3.946644,-8.741888,-6.518401,5.091276,5.097645,-5.338895,8.399616,-5.323536,-7.941818,5.727331,-9.554455,3.780144,6.466082,-5.663311,5.039355,0.824712,6.126360,-3.412736,-2.762030,-3.182225,-4.859489,4.949568,-2.225141,-2.036269,2.898155,4.483907,1.320815,-5.336001,3.473341,1.597281,1.569067,-6.943175,0.279400,-6.542587,-0.134767,0.539976,-9.181732,-8.598089,-8.088654,0.135349,-4.971683,1.321908,1.905214,-6.459212,-7.360673,0.434125,5.349071,-7.614313,8.800889,-5.926266,0.340032,-9.604512,5.676886,7.984230,4.126385,1.292630,3.786753,-6.307829,-0.128979,4.405736,-5.280505,-2.232940,-5.189073,-8.590220,-8.696713,5.643953,-1.404595,0.329112,0.183468,4.292378,5.632547,-2.871536,8.026709,1.699676,-6.725827,-3.130468,-2.756163,-6.624444,9.201586,-2.045999,7.546197,-5.444799,4.569624,0.879612,-3.976353,-0.748597,-4.795620,-5.994418,0.906394,1.102713,-8.711945,-7.846695,6.417377,-5.378538,-7.179426,-0.379149,-8.101655,1.972915,-3.582192,-4.710182,-9.599244,-3.446562,-6.675722,-4.287870,-1.034693,8.186042,-7.504915,8.143688,-9.267701,-9.472899,-1.475942,-3.831467,1.242772,3.926058,5.327328,-2.758387,-5.511875,-3.836769,9.035599,-1.650990,-2.215084,6.672412,2.332330,-2.772187,-3.853778,-0.218443,9.308654,7.233696,9.354509,-8.164088,7.980604,-9.489268,9.929173,-8.593327,3.158064,0.604196,-9.214059,-4.786010,1.086956,3.578224,-8.508558,6.834097,-1.050522,-3.741069,5.912394,-9.439677,-0.707897,-2.419056,8.074623,-2.337028,3.191301,5.948137,-0.585372,3.161249,-4.452039,3.051261,3.390182,5.648585,-4.581017,1.501601,-0.682664,-9.892969,-7.994595,6.035976,0.569653,-3.228705,4.929171,-5.764616,-2.376426,7.998176,-0.753695,4.059537,6.433865,8.986351,-0.389123,2.251441,9.350946,3.795038,-0.437198,8.363259,3.038482,-6.027396,7.990589,-0.054209,4.135393,3.917472,5.032473,2.509667,4.781523,-6.492461,1.457848,-3.730540,4.966200,-1.846888,-3.248370,2.966495,7.322973,-2.533653,-2.910981,-4.278110,1.003500,1.608460,-4.213436,2.165601,1.971078,-3.903938,-4.334381,5.726790,-1.773538,1.709088,-5.306571,-8.318794,3.220911,-0.372322,-5.366824,9.329575,-2.653640,-3.895776,8.641489,-9.754337,6.106340,0.739197,-6.080566,5.939209,-0.296195,7.838535,0.482995,-5.570182,5.646401,-5.771008,-8.120135,3.771767,-8.642339,4.985308,7.632600,-6.237847,-7.388902,-2.635170,3.358335,-6.103954,5.021968,-6.063563,4.031306,2.713901,0.585535,-5.134915,8.680632,6.084460,5.957965,8.305005,-5.492336,3.280540,9.607253,2.302480,5.710686,-6.574282,-4.848894,6.897638,4.972369,-9.378601,-5.320183,-0.105185,-5.938866,0.644508,1.976960,-2.904222,2.286714,-5.260213,-1.221202,9.020494,8.824738,-3.421996,-5.374084,-0.464089,-8.403482,-0.780471,7.165166,-0.609244,-2.975510,-5.120655,-6.187177,-0.234293,-6.362916,-2.302052,-7.534625,7.549096,7.283830,6.489684,1.017182,7.066140,-3.725830,1.790506,2.120525,4.933010,4.550763,2.189602,0.165573,0.686294,-9.900656,-3.467436,3.988866,1.571181,2.217532,-5.843229,-8.817968,-6.762951,-4.329221,-0.388800,5.172686,9.722808,4.110148,-6.868839,-8.175058,1.924911,2.888913,-5.539200,9.251451,0.544413,-4.193736,6.688753,6.657212,-3.931280,5.608976,4.041809,-6.477033,-9.618032,1.418478,-1.256060,-7.818717,6.793056,4.849996,2.495135,3.200547,9.202362,-4.493649,-7.495227,-4.148712,3.093062,8.097292,-6.028851,-3.836297,-4.409286,8.268857,7.070900,-3.916836,1.379303,-6.221382,-6.542015,7.174023,-8.340189,-2.634306,-3.338236,6.228372,2.760175,-5.547822,-6.843965,-3.523248,5.860871,-3.384978,2.385338,0.315834,-7.033694,5.053587,2.090378,6.917170,8.591297,-8.227954,-1.175137,7.477463,-3.045267,-8.002728,-1.205000,8.489033,-9.181475,4.588130,-3.567920,3.456799,-6.603010,8.047393,1.145785,8.350394,3.308768,-1.311605,6.304970,0.192226,-1.242032,6.206302,-7.182084,-8.923341,-7.359013,-1.076953,-1.165296,9.020843,3.711688,-6.810765,6.745671,5.379488,4.122492,3.449757,0.450510,-8.811653,-0.374198,6.175217,6.756128,9.660104,0.948747,-7.891566,4.391048,-6.828099,7.704686,-3.603702,2.673302,4.174455,9.127640,2.855402,1.849635,-4.250437,4.380059,-2.561118,1.813678,-1.155370,3.851448,-8.012457,6.268809,5.228375,9.065944,1.621074,8.273305,6.933747,1.004370,-9.103070,9.851478,-4.522523,-3.456011,4.680166,9.831400,-5.101519,-4.594065,3.909576,6.069868,-7.831101,-4.952391,5.299978,-3.655498,0.413604,-4.578561,-2.255378,-3.065897,-4.207411,7.038375,3.957536,-5.175770,-4.976088,-5.534949,-1.481668,-8.659127,8.704733,-3.444595,7.442421,6.083646,1.201804,-1.932865,6.353716,-9.079850,0.371543,7.082979,-3.885998,-7.289418,3.017249,0.112186,-6.763937,-7.621103,-4.618356,4.021353,-0.607392,-0.944134,-9.099143,2.445476,-8.758584,3.036293,-7.846364,-7.425091,-9.560634,5.528123,0.805818,9.670184,-8.779035,7.757750,1.168151,-8.416905,-7.607999,2.110615,5.569932,-7.355612,-3.880462,1.987774,9.822372,-8.944458,-6.243622,5.620034,-8.034961,-5.914300,-4.458584,6.873812,-7.361761,3.574360,4.078881,6.625517,-3.340475,-7.085654,2.564260,7.899527,4.041022,6.839901,9.992702,0.326537,2.916722,-1.288424,-3.216848,3.587104,-4.031520,7.515778,9.534108,-9.121995,-8.298407,3.734212,4.583438,-2.480792,-8.420355,-1.205038,-2.126200,0.233212,8.653758,-5.130074,4.530845,-9.553376,-3.692473,7.223300,-8.396701,8.969654,-3.374466,7.998478,9.205047,-4.294404,3.342450,2.493232,4.093134,6.142147,6.631706,-2.457061,-3.454988,-1.459566,-1.623204,-6.162020,9.860152,1.272195,-0.246336,6.862286,1.752149,0.175762,5.448772,-2.918783,7.559444,5.637957,5.141674,-1.988218,8.366475,6.312880,-4.731681,-8.990588,7.287852,-8.359405,-3.844858,-3.919044,8.016255,-7.101659,-6.405525,8.428923,7.812067,-8.384729,-3.261062,-9.590409,0.327753,7.585610,6.294879,-3.166527,-8.765852,6.894080,-1.234835,-9.334090,5.869327,-7.168399,8.732283,-8.067486,5.402350,-8.853168,2.089504,6.997019,-2.140163,-4.207663,-0.349945,-0.054994,1.428433,-4.508461,9.616166,-8.047113,4.815829,1.215003,-8.580090,8.078883,-4.992500,-3.870315,-1.315327,2.079931,-9.241875,3.942256,-1.136882,1.122265,7.547022,8.685552,-3.685059,5.136256,8.356943,9.655939,-7.772502,4.671416,-9.634226,-1.303114,5.619948,5.657408,-4.395607,-0.039046,-0.272359,-2.157230,4.878552,3.915712,9.898019,-2.097145,5.751157,3.583929,-4.386132,-2.337388,-4.413326,-4.031805,-4.352706,9.573842,-5.607366,1.664099,-5.964568,-9.075320,-6.885390,1.359385,-5.809515,-4.648618,8.861679,-1.579708,-6.059192,-4.218551,5.544633,-9.793195,-0.294195,-0.854100,9.535762,-0.226787], dtype = "float32")#candidate|1575|(924,)|const|float32
call_1574 = relay.TupleGetItem(func_648_call(relay.reshape(const_1575.astype('float32'), [924,])), 2)
call_1576 = relay.TupleGetItem(func_651_call(relay.reshape(const_1575.astype('float32'), [924,])), 2)
uop_1581 = relay.asin(call_1574.astype('float64')) # shape=(8, 13, 9)
uop_1583 = relay.asin(call_1576.astype('float64')) # shape=(8, 13, 9)
uop_1595 = relay.atanh(uop_1581.astype('float64')) # shape=(8, 13, 9)
uop_1597 = relay.atanh(uop_1583.astype('float64')) # shape=(8, 13, 9)
var_1605 = relay.var("var_1605", dtype = "float32", shape = (8, 13, 9))#candidate|1605|(8, 13, 9)|var|float32
bop_1606 = relay.floor_divide(call_1574.astype('float32'), relay.reshape(var_1605.astype('float32'), relay.shape_of(call_1574))) # shape=(8, 13, 9)
bop_1609 = relay.floor_divide(call_1576.astype('float32'), relay.reshape(var_1605.astype('float32'), relay.shape_of(call_1576))) # shape=(8, 13, 9)
bop_1621 = relay.bitwise_or(uop_1581.astype('int8'), relay.reshape(uop_1595.astype('int8'), relay.shape_of(uop_1581))) # shape=(8, 13, 9)
bop_1624 = relay.bitwise_or(uop_1583.astype('int8'), relay.reshape(uop_1597.astype('int8'), relay.shape_of(uop_1583))) # shape=(8, 13, 9)
func_811_call = mod.get_global_var('func_811')
func_816_call = mutated_mod.get_global_var('func_816')
const_1626 = relay.const([[4.427193,9.495095],[-3.373445,-8.982562],[7.337376,5.763604],[2.155875,-4.991429],[1.350368,0.807038],[-6.337046,3.748787],[0.017467,1.542758],[0.179755,1.080041],[9.158058,3.315700],[-3.546864,5.648379],[-4.942062,8.663740],[2.000869,5.726094],[7.476047,-2.639433],[4.148349,8.421865],[-5.422713,-0.917017],[2.924488,3.184052],[0.357768,-8.191939],[-9.824823,4.708554],[-0.574320,-4.327554],[2.954025,-3.724462],[-6.937987,-8.381658],[-6.784126,-0.673668],[4.865914,-7.054887],[8.309223,1.949393],[6.368108,-9.142017],[5.829352,-1.555085],[-6.578349,8.793824],[1.269765,5.134938],[-2.957902,6.917640],[4.268736,-6.228170],[-8.017700,7.914619],[-1.843375,-1.059561],[-9.026751,0.261284],[5.626248,7.840568],[-6.620228,7.448120],[-8.899688,-1.073388]], dtype = "float64")#candidate|1626|(36, 2)|const|float64
call_1625 = relay.TupleGetItem(func_811_call(relay.reshape(const_1626.astype('float64'), [4, 2, 9]), relay.reshape(const_1626.astype('float64'), [4, 2, 9]), relay.reshape(uop_1595.astype('float32'), [8, 13, 9]), ), 1)
call_1627 = relay.TupleGetItem(func_816_call(relay.reshape(const_1626.astype('float64'), [4, 2, 9]), relay.reshape(const_1626.astype('float64'), [4, 2, 9]), relay.reshape(uop_1595.astype('float32'), [8, 13, 9]), ), 1)
func_1124_call = mod.get_global_var('func_1124')
func_1126_call = mutated_mod.get_global_var('func_1126')
call_1639 = func_1124_call(relay.reshape(const_1626.astype('float32'), [8, 1, 9]))
call_1640 = func_1124_call(relay.reshape(const_1626.astype('float32'), [8, 1, 9]))
output = relay.Tuple([bop_1563,const_1575,bop_1606,bop_1621,call_1625,const_1626,call_1639,])
output2 = relay.Tuple([bop_1563,const_1575,bop_1609,bop_1624,call_1627,const_1626,call_1640,])
func_1649 = relay.Function([var_1561,var_1562,var_1605,], output)
mod['func_1649'] = func_1649
mod = relay.transform.InferType()(mod)
mutated_mod['func_1649'] = func_1649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1649_call = mutated_mod.get_global_var('func_1649')
var_1651 = relay.var("var_1651", dtype = "uint8", shape = (15, 16, 13))#candidate|1651|(15, 16, 13)|var|uint8
var_1652 = relay.var("var_1652", dtype = "uint8", shape = (15, 16, 13))#candidate|1652|(15, 16, 13)|var|uint8
var_1653 = relay.var("var_1653", dtype = "float32", shape = (8, 13, 9))#candidate|1653|(8, 13, 9)|var|float32
call_1650 = func_1649_call(var_1651,var_1652,var_1653,)
output = call_1650
func_1654 = relay.Function([var_1651,var_1652,var_1653,], output)
mutated_mod['func_1654'] = func_1654
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2064 = relay.var("var_2064", dtype = "float64", shape = (5, 5, 11))#candidate|2064|(5, 5, 11)|var|float64
uop_2065 = relay.acosh(var_2064.astype('float64')) # shape=(5, 5, 11)
func_1409_call = mod.get_global_var('func_1409')
func_1412_call = mutated_mod.get_global_var('func_1412')
const_2079 = relay.const([-1,-4,4,5,8,-2,-1,-10,-3,-9,1,10,-2,1,3,4,7,-10,-9,-8,7,8,9,3,10,-10,3,7,10,-5,-7,7,-8,-7,-4,-4,5,10,-9,-5,-4,2,-6,-3,6,-1,8,9,7,-2,8,-3,-5,8,-6,5,-1,9,5,-4,-9,-3,5,2,-7,6,-10,10,-3,-1,3,-3,10,-2,4,-7,-4,-10,2,4,8,-5,-8,6,-5,-2,-1,-5,-7,-8,-4,1,-5,9,-5,-9,1,-3,-8,4,-4,-6,-1,7,-9,-6,2,-2,-2,-6,-2,-2,-8,-5,2,2,6,-10,-8,-5,-4,9,-10,-4,-2,1,-5,8,-6,2,4,3,-1,-7,9,-5,4,-10,-4,9,7,1,-3,-7,-4,6,-2,-8,-1,1,8,5,-1,10,-1,3,-9,2,-3,-10,8,5,-4,-3,9,-6,-2,-8,-8,-2,7,9,-2,-9,-1,-4,-6,9,1,4,-5,-6,1,-4,4,2,-1,-1,-3,10,1,3,2,-7,1,4,4,-7,-5,8], dtype = "int64")#candidate|2079|(200,)|const|int64
var_2080 = relay.var("var_2080", dtype = "float32", shape = (924,))#candidate|2080|(924,)|var|float32
call_2078 = relay.TupleGetItem(func_1409_call(relay.reshape(const_2079.astype('int64'), [10, 5, 4]), relay.reshape(var_2080.astype('float32'), [924,]), ), 0)
call_2081 = relay.TupleGetItem(func_1412_call(relay.reshape(const_2079.astype('int64'), [10, 5, 4]), relay.reshape(var_2080.astype('float32'), [924,]), ), 0)
uop_2095 = relay.sigmoid(uop_2065.astype('float64')) # shape=(5, 5, 11)
func_1409_call = mod.get_global_var('func_1409')
func_1412_call = mutated_mod.get_global_var('func_1412')
call_2101 = relay.TupleGetItem(func_1409_call(relay.reshape(call_2078.astype('int64'), [10, 5, 4]), relay.reshape(var_2080.astype('float32'), [924,]), ), 0)
call_2102 = relay.TupleGetItem(func_1412_call(relay.reshape(call_2078.astype('int64'), [10, 5, 4]), relay.reshape(var_2080.astype('float32'), [924,]), ), 0)
func_1649_call = mod.get_global_var('func_1649')
func_1654_call = mutated_mod.get_global_var('func_1654')
const_2107 = relay.const([2,-1,-10,-7,4,-3,8,-9,2,9,-2,6,5,6,-10,9,4,10,5,-7,3,2,-9,-6,-4,2,10,-3,7,-4,-10,-10,5,10,-7,-10,8,-4,5,-9,-2,5,10,-9,-7,3,-8,-4,1,6,3,-10,8,-10,-1,9,10,5,2,-9,9,-6,5,1,-8,-5,2,3,-7,-2,10,2,-7,-3,3,10,2,-8,-10,4,-7,-8,-6,1,-2,4,6,5,4,-4,8,8,2,8,6,-7,-4,-4,-3,-6,7,10,-7,-9,-1,-10,7,-10,4,8,-1,-5,-7,3,-3,9,-8,-5,2,-6,7,1,-3,-10,8,-9,2,-1,-2,-10,-5,6,8,8,5,2,-1,-3,-5,-3,10,1,5,-10,-8,1,1,-7,-1,8,3,8,-4,-10,8,1,5,-2,6,7,-4,9,8,-6,-5,6,4,-3,9,-7,-7,4,2,4,8,4,-2,9,1,10,10,3,10,-4,9,5,-10,10,3,-2,7,-4,8,-8,1,-4,-4,6,-3,2,-2,8,5,5,-3,-10,-2,-9,8,-7,7,-9,-10,-4,7,-5,-4,2,2,-7,4,-5,-2,7,4,-8,-7,2,3,-10,-4,1,5,-7,-1,-2,-2,3,5,-3,-4,-2,9,8,-1,-4,1,-5,9,5,-10,6,6,-5,7,-2,10,-4,9,3,-10,7,4,-10,-7,2,-2,9,-8,-10,4,-8,7,5,3,8,-7,-7,-8,-2,9,-4,2,2,-10,7,-6,10,8,-1,-3,4,-3,-1,-7,-8,8,-9,5,-2,-4,9,-5,-5,-6,4,5,-1,9,1,-4,-4,3,3,-5,-3,6,-10,4,-2,2,-10,-3,7,-3,-10,7,9,7,8,-9,-2,-6,3,-10,8,2,8,9,9,-4,-8,3,3,-7,4,5,-10,10,8,-10,-1,4,-6,-7,-6,-4,-3,10,-10,8,-5,-2,1,8,-4,-6,9,-6,-7,-1,-3,-5,-5,4,-4,-9,-7,-3,5,-10,10,-3,9,7,2,7,5,4,7,-5,-4,9,7,10,3,-10,7,3,3,-2,-8,-10,10,-2,6,7,2,-9,-8,-1,-2,-4,-4,-7,-5,-2,7,-5,-8,6,-6,3,-1,-9,3,1,-10,-6,-2,-1,-9,1,7,-5,-2,-10,-3,8,-5,-4,4,-6,10,1,5,10,-5,10,-6,-6,5,9,-6,6,2,4,5,2,-3,1,5,10,4,-1,-8,-3,2,2,8,3,-8,-10,8,10,5,7,-3,-1,10,9,8,10,-3,1,-10,3,-1,1,-5,1,2,-1,9,-4,-3,-7,-3,2,-1,7,-7,-9,3,8,-3,-7,8,-2,9,6,-8,-4,1,-9,1,6,-8,6,7,1,-4,-6,8,9,-7,9,7,-8,-9,1,-7,-8,1,10,10,9,10,6,7,-5,-10,10,8,-6,-9,9,-3,2,-10,2,-2,4,8,1,-5,8,5,-3,-5,1,3,9,6,-9,-4,6,2,1,2,-5,-2,-2,-10,9,-1,1,-10,-1,-4,3,-1,-5,1,-5,9,7,5,-6,4,4,6,3,-10,2,-3,3,4,-9,3,7,5,3,5,7,-5,-9,8,6,-4,-1,1,-3,1,1,7,8,-4,-2,-10,-10,-9,5,9,-5,-8,-4,-8,8,-8,-3,-7,-6,2,9,8,1,8,-5,7,-2,4,-8,2,2,-4,-6,8,9,-2,5,10,7,2,-5,-2,8,4,8,1,-7,-9,-4,-6,10,-5,-8,-1,-1,7,-3,-6,4,-6,-5,4,-10,6,1,-10,2,6,-10,-6,-9,8,1,1,-3,10,4,9,-9,1,-9,-1,-8,-10,3,9,7,3,3,-5,-1,-4,9,10,-10,-7,3,7,-6,-10,-1,10,8,7,-7,8,7,4,5,3,-6,4,10,-1,-8,-5,9,8,9,1,-10,-4,10,3,4,1,-8,-7,8,-7,8,5,9,9,3,-4,6,9,7,-3,8,9,1,-6,-8,3,-3,5,6,-10,3,-9,3,7,2,1,4,-7,7,-3,-4,-1,7,-1,-2,-9,6,-4,-7,-8,-8,8,8,8,7,-2,-8,-10,-3,-7,3,-7,-5,7,-1,1,-4,3,4,-1,1,-4,10,-3,6,-5,-7,7,5,-3,10,8,-3,-10,-10,-10,6,-1,9,-7,-3,5,9,1,-7,-10,8,-3,-9,-8,3,2,-1,6,-7,6,-7,2,-4,-10,9,9,10,-8,6,7,-5,1,-2,-5,-9,-10,1,-2,5,5,-4,3,8,-2,-9,-6,-10,10,1,10,6,6,-2,-4,2,2,6,1,-9,10,4,2,-2,-7,-8,3,-8,3,9,8,-9,-9,-8,-10,-5,-4,-8,-6,-7,-5,9,8,9,7,1,1,-8,4,1,2,6,-9,-10,-7,6,-1,2,-2,3,10,3,-3,-2,-6,10,-2,-1,5,6,10,5,-6,-1,9,6,-7,3,-1,-6,1,-4,-4,-4,10,-2,1,-10,-4,5,-4,-5,3,10,2,-2,3,5,-5,-8,-8,-3,-6,8,-5,-5,6,-1,-7,-3,-8,3,-3,1,-7,2,7,-6,10,7,9,-4,2,-3,10,-10,-3,2,-9,-3,-9,-6,10,-3,8,-6,10,1,9,2,10,-10,3,10,-4,-2,9,1,-10,2,2,4,-1,-5,8,10,9,4,9,-4,8,5,-4,7,-3,-5,-8,-9,5,-9,-1,-3,-6,-10,1,-9,-4,6,-5,3,3,-2,-6,-2,-3,3,10,4,-3,3,2,2,-10,-3,3,-2,-3,-9,-3,9,-2,4,6,-9,4,-2,-6,2,5,3,-3,-4,9,-5,-8,10,7,-1,-2,4,2,4,-10,-8,-6,-3,-5,-5,-2,-7,-7,2,3,-6,4,2,-6,8,5,-1,6,-9,-10,-5,5,5,-1,5,-2,8,3,-4,6,-4,-9,-1,-8,-7,-5,5,6,-3,8,-2,10,-6,2,1,5,1,10,-8,2,-1,10,6,-7,-3,-8,-5,7,-9,-3,-6,-6,2,-9,-6,-8,10,2,-3,7,-4,-1,1,-10,6,3,-4,7,6,-8,8,9,3,-4,-2,2,-3,-7,-2,7,2,8,-8,2,4,6,8,-10,9,-9,4,-7,6,-3,2,-6,9,-10,2,1,-6,8,2,-4,3,-2,-5,-5,-4,1,10,10,-3,6,-4,1,-4,3,6,-9,-3,7,-9,-10,3,-8,-1,4,-9,-9,-9,-5,9,1,5,6,10,-5,6,-1,-9,3,7,5,-8,-1,5,2,-3,-9,2,8,9,-10,-3,5,1,-1,5,-4,-10,-2,2,1,6,6,7,9,-1,10,-9,3,5,8,-2,5,-9,9,10,7,-1,-3,10,4,-10,-3,-1,6,-4,8,-9,10,-1,-9,10,-8,-2,-1,4,2,-10,-2,1,9,-4,-1,-1,9,3,-4,6,6,-2,8,10,9,-5,5,8,-3,-10,-3,7,-2,2,3,-7,-5,6,6,-5,10,-5,-8,-6,5,-5,-8,2,5,7,3,-9,-4,4,-2,6,-9,-6,5,-7,-9,-1,-9,8,-9,1,10,2,4,-5,-3,10,-3,-10,-8,1,1,6,-6,-3,-9,9,-4,-3,-5,9,-1,-1,-5,5,7,-1,-7,-10,1,-10,-6,2,-1,2,-5,-5,10,-3,8,6,-3,6,6,-4,9,-9,-6,7,-8,-5,-10,3,10,-2,-5,6,7,-9,9,-2,-1,3,4,5,1,-8,2,-10,7,-3,-4,10,10,-6,3,7,-1,-1,2,-10,8,5,-9,-4,-1,-1,-5,-6,-10,-4,-2,-9,3,1,-8,10,9,7,2,-6,-10,8,8,2,10,-3,9,7,-1,-7,9,4,5,-8,7,-2,3,-4,-5,10,-2,-8,-4,3,3,-4,-9,2,2,-1,-4,-5,4,-9,-4,4,2,7,7,1,9,-4,-4,2,-4,2,-9,-6,-4,10,4,4,-6,-9,-10,-4,-6,7,5,-3,-6,9,-1,6,10,3,-2,9,7,-2,8,6,-4,-3,6,-8,-10,8,3,-7,2,8,-9,1,-7,-5,-8,-9,5,3,-10,4,9,-1,5,-7,10,-10,-4,-6,-5,6,-1,-10,-8,6,6,-8,-1,7,-9,-3,-10,9,-8,-5,-6,-8,5,-1,-3,-1,-8,-1,-9,5,3,-6,-2,8,-10,5,-3,2,3,1,2,-4,-10,-1,5,7,-5,2,-10,9,7,-7,-7,8,-2,-7,-10,7,5,-9,6,-8,-8,8,5,9,1,10,-3,-9,7,1,6,9,8,10,3,4,-10,-1,-2,-5,-4,-5,5,-4,-10,2,-7,-7,-9,10,7,-5,-8,2,-5,-7,1,-8,5,-1,-8,-3,3,1,-9,6,-7,-4,7,7,2,5,-5,2,-6,5,3,1,7,10,3,3,8,4,-1,1,6,-9,-10,9,1,2,-9,1,-6,-2,-10,-10,-2,6,-7,9,5,-2,-8,-1,-4,-2,-7,-1,-6,4,9,6,10,7,1,1,-5,-2,-6,1,-9,5,7,-1,-8,-1,-8,-10,-9,8,-4,-9,-5,-1,6,-3,4,1,3,-6,-6,9,4,-6,6,-4,-4,9,-5,-8,-2,-6,-8,-10,8,1,-3,-1,10,1,-9,8,9,1,-10,5,-2,10,9,-3,8,-4,-6,9,10,4,8,-3,9,-2,-6,3,-9,10,-5,-8,6,-5,5,-8,5,-6,-4,-1,-4,-4,-2,-10,1,1,-10,-8,-1,9,-8,-4,-9,-5,9,7,-9,-6,9,-3,6,6,-5,4,-9,5,-10,-8,9,-3,1,4,1,2,5,-10,-1,7,-1,3,2,5,7,2,-1,4,2,-2,7,-5,-9,-1,1,8,7,-2,-9,2,4,-4,6,7,-6,-5,2,5,-4,6,4,-9,-3,-3,-10,2,8,9,4,4,-4,6,10,1,-8,1,-9,7,3,-8,-5,-9,6,7,-3,-3,3,-6,1,-8,4,-2,-2,-9,-1,8,-7,8,-4,-3,-9,7,-6,-4,-2,-5,-4,1,8,-10,7,4,4,7,-9,8,-9,-10,8,1,6,6,4,5,1,2,5,2,-10,-9,1,6,2,6,-10,10,4,-6,-5,-2,-10,4,10,5,9,8,-1,2,10,3,-9,-6,9,3,6,-2,-10,10,-6,-10,10,5,-2,-5,8,-4,3,10,-3,7,10,6,10,10,2,1,9,3,4,8,10,-9,-4,-4,-1,8,4,1,-9,-2,-4,3,10,7,-8,7,6,10,4,7,-6,-9,7,4,3,-9,8,10,-9,-3,-1,6,6,-5,9,8,-7,8,8,-3,10,10,3,-8,-7,3,1,5,-5,-8,4,-2,4,6,1,-5,-1,-1,-4,-1,9,-1,1,-8,8,-3,-3,-5,4,-10,-3,8,-9,10,-9,6,-3,8,3,-2,-3,3,-1,-6,-2,-2,9,-8,-10,-2,9,6,-5,10,2,8,9,3,2,5,-6,-8,6,5,-4,6,7,7,-6,-9,-9,4,-10,7,8,7,-8,1,3,-1,-5,10,9,-3,4,-3,-10,-10,6,6,9,10,-10,-1,-6,-10,1,4,-7,5,10,-4,-5,-5,-2,-4,4,-8,4,-7,-4,-3,7,7,6,-7,9,9,6,4,-6,-8,-4,-5,6,3,9,8,-3,9,-6,8,-8,1,2,3,-8,8,-9,-2,-5,6,-1,1,9,5,-6,5,9,-1,3,-7,-9,3,-8,-3,-10,-8,-5,-4,8,-4,-2,2,4,2,-9,8,-4,6,-4,4,9,-4,2,1,-7,8,-3,-3,-6,-4,-2,5,-3,-7,-1,10,4,6,-2,-9,3,2,-8,5,-8,10,-3,-5,7,3,4,8,7,-7,3,2,1,-2,-7,-4,-7,-6,-1,-7,4,6,3,-7,8,-3,-9,-6,9,1,6,2,2,-6,-8,3,2,1,5,-8,-1,5,8,-10,3,2,9,-5,-1,-7,-3,-2,-2,-10,10,-10,-1,-10,-8,5,-4,-1,2,-7,6,-3,-4,3,9,-3,-3,1,-9,4,-3,-7,5,-3,3,-1,2,7,10,-6,-3,-7,3,10,-1,9,3,-3,5,5,-4,6,-2,-5,-3,1,-9,2,-8,-4,-7,3,9,8,9,-2,2,10,3,6,6,1,8,7,-6,-5,2,-10,-3,4,4,5,-6,-9,2,-4,-3,-4,-8,6,-10,4,-8,-4,5,-3,6,6,-4,-10,10,-5,-8,-5,9,-10,-4,-2,1,3,6,6,5,5,-6,-8,-8,1,-3,2,-8,3,-7,4,1,-5,-5,-2,-4,2,1,-8,4,-6,-6,8,-3,5,6,-9,1,5,-8,6,3,3,7,-4,1,-7,10,-10,-8,4,-6,-2,-8,3,-3,7,-9,1,-2,-9,9,-9,-3,4,3,5,1,-8,-4,3,4,-5,-10,8,-5,4,-3,3,-9,-9,-4,-6,2,4,-9,-5,-8,-3,-1,10,-10,-10,-7,-10,1,-3,-4,2,4,-5,-6,3,3,2,-1,-1,-1,3,-5,6,-4,3,-7,5,-2,2,1,3,3,9,2,-4,-1,8,-2,2,-3,-4,-9,-2,9,2,-3,-3,10,10,-4,-2,-3,-2,7,1,-8,-2,3,-1,-2,-2,6,3,1,-10,8,-9,6,-8,-5,5,-3,10,5,-10,-4,3,-2,-10,10,6,-3,10,6,2,-6,-5,-6,-7,-8,-9,1,-4,8,4,3,-7,6,-6,5,6,-7,-10,-7,5,4,-10,9,6,8,-5,-1,-7,-10,-1,-1,6,-7,-2,-3,-4,4,-2,7,-10,9,4,-8,6,6,-4,-4,6,9,8,8,9,-5,4,-10,-5,-10,10,1,-7,-3,5,-3,1,-10,4,-2,-9,3,-6,-6,3,-1,-5,8,3,-4,1,1,9,-2,9,-7,8,2,2,-9,3,7,4,9,-7,6,-10,9,-8,4,4,6,1,9,5,2,8,5,5,1,-6,-1,6,8,2,3,-5,-9,8,-4,6,2,-3,7,-10,-1,7,-5,-3,-9,8,2,-3,-2,1,-6,1,-10,-5,-4,7,-3,9,-7,2,-9,10,-4,2,-3,-3,9,-7,10,-8,-8,10,-9,-1,1,-4,4,2,6,7,7,10,-3,7,-8,-8,1,-10,-8,1,-2,2,1,-7,9,8,-3,-4,-5,2,7,2,7,-10,-10,-6,8,-2,3,-5,5,-8,2,-7,-4,-4,8,-1,-7,1,2,4,7,-8,-9,-3,-6,3,5,-7,-10,2,-7,2,-3,-5,-2,6,9,2,-5,-10,-7,1,4,3,-10,-1,-7,3,8,7,-1,1,-5,7,9,-2,-2,-10,-2,-2,7,9,8,4,-2,-4,-3,4,-8,-7,8,-3,2,-1,-8,7,8,-1,-8,2,7,-4,3,-6,6,-7,-5,-7,4,1,4,-7,-4,9,-3,-1,-9,1,-10,10,-10,-10,-7,-4,-8,-5,5,-5,10,8,-4,-6,-1,-4,3,6,-3,2,7,3,1,6,-9,2,4,7,-6,-3,-1,7,-1,1,1,-3,7,4,3,-3,-10,4,-4,3,5,8,-3,1,-2,-9,4,-1,-8,-1,2,7,-9,-7,-3,5,-8,-3,-10,6,-5,-4,7,-1,8,-9,-6,-6,7,-7,4,10,5,-5,-8,-8,6,-5,7,9,8,8,4,10,-7,-4,9,3,7,-10,8,9,9,-8,-10,4,7,-5,-5,-4,1,3,4,-5,-5,8,-4,9,3,-2,4,-4,-7,4,5,4,8,8,-5,-4,10,4,-3,9,-10,-2,6,-5,-6,-5,-9,-8,6,10,9,-2,10,-6,8,-10,8,-3,9,-7,9,7,-3,-4,1,10,7,-2,7,9,-3,4,-2,-8,-6,-9,9,10,3,8,-7,-5,-2,3,-4,7,-5,1,-9,-2,5,10,7,3,6,-3,2,1,-4,-5,1,10,-2,-5,1,6,7,8,-7,-6,-4,6,-7,-2,-3,3,-9,-8,-3,4,8,-10,5,3,-10,-5,-5,10,9,-5,9,4,1,8,5,-10,1,2,-9,-10,-1,3,7,10,-7,6,-2,-5,2,-1,-7,-2,2,-8,6,-9,-2,-4,8,-5,-8,-3,1,5,3,-10,6,1,-3,-8,7,-7,10,10,-3,2,-7,-2,-5,2,3,-10,-4,-7,-2,-8,-2,9,-6,9,5,-3,-8,-3,-3,1,-6,7,4,7,-8,-4,-9,2,4,-5,5,-3,2,-4,-8,-3,7,-2,-1,-8,3,-9,5,-8,-3,9,-10], dtype = "uint8")#candidate|2107|(3120,)|const|uint8
const_2108 = relay.const([[-9.933108,-4.742371,-9.420798,-7.902830,4.434644,9.629448,-1.304327,-9.476696,-9.625868,-6.641960,-6.973997,-2.502104,-8.901383,-8.981921,-1.120925,-7.592685,6.245398,-1.355931,-4.148706,-3.842676,9.652319,-7.234712,4.601899,-2.867896,-4.394627,-4.010835],[9.149875,-2.723322,-4.050204,-0.937169,-2.220264,-7.105160,6.881983,-4.336593,6.703403,3.122592,-0.601954,4.053718,8.410092,2.636650,-1.903543,-2.225191,-9.748957,0.714724,1.088560,-9.811791,6.254851,-9.594556,9.168080,-9.080206,3.483266,-3.428049],[-8.710653,-1.210419,0.723943,0.347019,2.728688,6.355584,-1.467460,7.617290,-1.759209,-0.046335,-2.209531,5.753476,0.260196,-0.944577,0.043194,-8.302509,-4.555777,8.597925,-4.343290,-9.062558,-7.700770,-4.580803,-2.523541,6.917201,5.602685,-3.724983],[-5.178506,2.836747,-2.628831,-6.922194,-5.149646,3.857149,0.557070,-7.103845,3.534241,-2.266408,-8.630443,4.046262,-6.541841,-2.540023,-8.358692,5.004433,-4.636781,-9.701839,-9.453520,-8.535157,7.666257,-1.320015,4.841148,-1.357473,3.221543,-1.206539],[7.433264,-8.254740,-6.928866,5.324503,-9.798959,7.699912,-4.367385,5.788474,5.277331,1.613125,1.479676,0.331745,4.033028,6.563781,-4.858162,-6.954389,2.652933,0.635319,5.181319,-2.686422,8.523631,-4.300718,8.205567,9.965422,-2.839221,8.319789],[-3.562980,-3.995058,3.103013,-0.680173,5.591797,2.674532,3.960242,9.097087,-5.876964,-9.390807,6.899567,1.230362,-5.292520,2.987838,5.097480,-9.930662,-9.224993,6.878646,0.256547,5.802424,8.358798,6.109031,-5.007087,9.424192,3.712253,-4.434327],[1.888874,3.921262,-3.168246,-1.265484,-9.073520,2.344760,9.558150,-6.663828,-4.881918,3.881335,-9.499499,3.428831,6.562474,6.269055,-6.356690,-8.213440,8.294057,-7.457280,-6.727623,-2.512062,1.614678,1.987533,-5.412865,0.403571,-2.564251,-3.345457],[-9.718502,9.042237,9.666640,-8.872383,-4.745913,6.612812,-5.637859,-3.015316,-7.941870,5.118568,-0.203884,-5.061633,-5.592637,-0.037018,-1.387769,-7.079169,-1.918787,6.346605,-0.595567,0.971802,-9.529500,6.759318,-9.406462,7.638566,-6.427584,7.381464],[-6.871631,3.774658,2.444329,4.116550,3.783983,-2.595122,6.776317,2.406920,7.697272,-1.189559,5.612851,8.194022,3.241988,-4.307592,2.009922,4.525250,0.556718,3.874886,-6.472786,-9.982665,-5.225462,3.238643,-4.345331,3.098938,2.950091,2.643886],[0.217979,3.982759,-8.557298,-1.670357,4.393374,6.235480,8.936982,6.724445,2.659959,6.084767,7.948935,5.734047,7.974446,1.996077,-5.264601,1.657956,1.581603,6.583869,-6.811286,-1.776755,4.030139,-5.785154,-8.341423,-3.932040,9.475275,3.974523],[-5.260571,4.576405,6.194793,-1.119499,4.402655,-9.527263,-7.708839,-1.821365,2.459696,-7.292658,-4.750355,0.596549,1.086779,-0.241893,5.720263,6.632991,-2.421763,5.760607,9.840552,-7.608290,1.356215,-7.191384,-0.223299,-2.658498,1.029417,-2.271970],[1.558059,-4.199605,8.816810,-1.760231,-0.995429,-7.330843,-2.487027,-3.745796,3.388563,-4.135319,3.949036,4.301021,-4.125555,-3.528283,-2.746366,4.162368,-3.115628,-5.661089,6.071037,2.661536,-3.840312,-7.013769,4.099860,2.251647,7.393458,-2.631688],[-1.728288,-0.548750,2.834068,-6.873834,1.194883,-7.433136,6.801624,0.725409,6.699715,-0.830362,-8.960736,-5.819521,7.922382,5.442889,8.190033,-5.385312,5.822353,-6.007249,8.456007,-4.213461,6.888359,-3.661958,-6.681629,4.812724,-8.807544,7.092798],[-3.823603,0.595564,0.419211,8.548137,-3.787496,-8.371661,-3.473099,-5.952156,2.634586,2.104282,4.194829,9.380406,0.351103,8.952679,-1.488797,0.730627,-8.996143,5.639386,3.710898,6.991148,-6.570645,3.311861,-5.749630,-7.847884,-8.832416,-2.085985],[5.446015,8.521902,-5.630693,5.244628,-7.771868,-7.675233,7.661642,-6.391765,-7.216599,-1.200301,-2.082101,3.317363,5.065463,-3.812035,1.357708,-5.094799,3.812142,-8.624619,-9.887636,-2.944461,-0.128737,-6.196780,-4.177538,-8.974362,-4.400841,4.548315],[-8.523259,8.496628,-5.681279,4.344893,2.039949,3.393481,-3.911007,-7.429590,2.277448,7.622779,6.523166,6.351934,-4.126692,-4.132233,-9.000949,6.875971,0.286609,-0.626402,1.041589,1.760191,4.797396,8.168155,-5.448344,7.596902,-7.703214,4.201254],[-2.882707,-6.572831,-9.514919,8.904439,-2.770443,1.863591,1.775115,-9.097969,-3.700109,2.019649,-4.285185,8.267544,7.491894,-4.524751,0.952919,2.909393,-4.692639,-5.085073,3.763275,4.910914,5.193817,7.709785,-4.518388,2.755823,0.605123,0.579336],[6.601140,7.189741,5.357146,-6.434909,1.653152,-4.161553,1.355591,9.762749,-7.158443,8.134311,2.707425,-0.797906,-7.956876,-2.540111,9.974213,0.547618,-4.479123,6.589438,-2.072278,-9.810649,3.851084,9.806906,-8.685867,9.083497,5.289026,-4.875716],[5.969514,-4.385291,-2.958715,-0.582362,-8.647263,-6.412243,-8.587793,-2.108201,2.527000,-8.215750,0.204124,-9.300225,-5.584318,-8.961377,-3.107366,3.615598,-9.916992,4.004424,-2.209256,-1.298750,1.803078,-5.599501,-9.630076,-9.329303,9.366060,-7.321930],[-0.349331,-4.077631,1.908370,-4.289388,2.618482,4.659117,7.574097,-5.521844,-2.650007,1.637300,9.826010,5.323082,-8.223563,-9.146359,5.456096,5.736413,2.865084,-4.705758,-7.608012,-6.731054,-3.396096,5.026588,-8.939432,-1.466140,-3.523092,-3.383923],[6.919311,0.298739,3.558495,7.262483,7.065681,-6.395081,8.147485,6.997925,9.846006,7.225814,0.198429,4.181458,5.833292,7.288524,2.242408,1.865548,0.732562,7.206697,-0.031979,2.334871,1.004606,-0.705889,5.015184,-9.885066,2.705298,-8.395240],[6.044925,-3.354682,8.811745,-4.287419,7.351795,6.867153,4.735207,4.846577,-6.307835,5.336607,-6.478634,-3.712179,8.916672,-2.866324,-2.692884,9.309134,2.206211,-1.707000,5.541012,2.252031,9.931871,-1.624291,0.172679,-6.135075,-8.155915,9.104205],[-3.812954,-0.535106,2.547186,-7.581553,-2.071549,2.899034,-3.610010,-5.724629,-9.183397,-7.329468,9.978079,-9.009637,6.703938,-2.912594,-3.749262,-6.001732,0.171217,-8.007115,-8.989058,-9.522070,6.597782,-8.001161,-8.370865,3.910041,-8.141259,-7.014049],[-8.708398,0.092676,6.431337,-6.945325,4.642175,-3.211406,6.369229,0.118245,-7.710893,-2.331111,7.113443,6.363607,-1.861401,5.310478,-3.678654,-5.301733,-1.689631,-1.813116,3.241778,-3.953721,-0.463055,8.111225,2.208227,1.533148,-8.615077,7.603133],[-7.935368,5.115132,-2.615612,9.622445,-7.891378,7.698334,1.636854,3.969867,-3.437548,-1.052176,-7.199568,8.452378,-6.616780,4.558019,-6.547258,4.334855,1.847377,7.842851,7.927408,6.307003,-1.303503,-7.705564,-7.612984,-0.477251,9.382558,0.094713],[-7.873578,-9.028172,0.586685,-1.882853,-2.092967,-1.120556,-8.770211,7.266521,7.897774,-0.605866,-5.979771,3.713015,-2.824249,5.743853,-4.494424,3.191154,1.148878,-6.526241,-4.209949,9.785143,-8.954803,-0.516204,8.918706,-5.813703,-0.295872,4.750109],[4.249198,-4.266720,-9.463961,-0.814985,-3.107847,-7.803520,5.477192,0.689377,0.653069,-5.854849,-2.353390,-9.475767,1.125315,-4.824646,5.680906,-7.420254,8.089818,-0.591547,-5.381383,-8.250760,3.730669,8.530940,6.176520,-0.479327,5.740641,-1.726705],[2.634296,0.655978,7.666564,6.737549,4.867091,-8.594431,-9.101900,2.093230,4.543166,3.254874,-9.318615,0.833153,4.749752,-6.438789,-3.563046,0.253465,9.158799,-1.423622,-8.927243,-4.764556,8.440733,-7.001951,7.263641,7.832544,-1.833350,1.745580],[4.953157,-6.753852,-8.970774,3.210324,-7.628398,2.865441,9.051977,-2.589971,9.434979,-7.278920,4.723376,-0.846842,-1.027946,2.657586,-8.627886,6.812094,0.971663,3.692720,-8.574861,0.500009,9.998618,-7.682614,-4.382045,-2.556975,4.978406,1.355085],[-7.790035,-9.941220,5.538432,5.769130,-9.282318,3.692615,-4.817447,-9.034229,8.667773,2.476277,-2.004855,4.359216,1.272999,-6.057928,-5.358951,1.105756,8.027155,6.302837,-5.162920,-8.168085,1.346014,-2.375545,-9.775832,-5.316524,-8.219926,-2.374930],[-2.790075,-9.356439,-7.427597,-6.943780,-6.864911,6.177351,8.744182,-7.746722,6.436669,0.377798,-2.034984,-1.493422,-2.068079,-5.434817,7.737191,4.564821,-9.818455,3.365705,-6.684738,-0.564272,3.363111,-5.486024,-6.553575,-9.356310,0.464678,4.785459],[-4.813593,4.757169,-8.023940,5.274520,-2.318403,5.855811,-4.625379,9.671567,7.626277,3.609380,8.418321,1.340621,-3.734129,4.251713,6.002522,4.162006,1.327994,-4.150494,-8.918649,0.825897,-0.885846,-8.628073,7.578089,0.758874,0.896192,2.576087],[-4.122516,-9.754422,8.010141,6.880026,-5.685217,-0.848219,8.492450,-6.904579,-6.443539,-1.854315,-4.452102,-0.213940,4.945444,-8.691856,-5.029075,6.367073,7.618319,-3.358797,-8.023222,8.383301,-8.686018,-8.512340,0.177040,-0.026907,-2.472016,-4.793790],[1.066572,-8.275883,2.461655,1.089185,-1.762266,-2.101234,-9.117403,-2.010556,-7.859838,-8.485755,4.313215,-4.680792,2.085898,5.881592,-2.277237,-7.678030,-7.561932,-2.376460,-5.723966,1.308798,-8.879325,-6.201468,-6.971127,8.604940,-2.404472,-1.014605],[-2.121106,-4.774819,1.845878,7.899106,-2.559691,4.380133,-5.128767,-7.366421,4.809375,-4.856278,4.375625,-6.381840,2.887881,9.664238,6.341841,-3.596638,-7.754059,8.166985,-3.299971,9.851931,7.302735,0.576283,-4.016726,-0.228035,6.412935,-7.272898],[0.266556,6.195681,-5.205097,-0.205899,-3.955808,-6.971472,-4.257386,-4.149777,-3.854905,0.005832,-7.648919,-6.854540,-7.645048,-4.524155,0.164068,-7.590024,8.310111,9.221186,-4.429027,-6.725951,-2.494284,-7.443409,-2.763967,6.842891,-2.901332,-1.061043]], dtype = "float32")#candidate|2108|(36, 26)|const|float32
call_2106 = relay.TupleGetItem(func_1649_call(relay.reshape(const_2107.astype('uint8'), [15, 16, 13]), relay.reshape(const_2107.astype('uint8'), [15, 16, 13]), relay.reshape(const_2108.astype('float32'), [8, 13, 9]), ), 2)
call_2109 = relay.TupleGetItem(func_1654_call(relay.reshape(const_2107.astype('uint8'), [15, 16, 13]), relay.reshape(const_2107.astype('uint8'), [15, 16, 13]), relay.reshape(const_2108.astype('float32'), [8, 13, 9]), ), 2)
func_811_call = mod.get_global_var('func_811')
func_816_call = mutated_mod.get_global_var('func_816')
const_2112 = relay.const([-2.694253,-1.389614,6.108761,-9.201039,1.624282,-8.327575,9.232110,-9.281044,-8.894608,-6.861386,-1.289448,-6.687586,-1.264049,4.705079,-2.403052,6.245271,7.831724,-2.702525,-0.275519,-9.408295,8.995700,8.550858,1.626409,-4.120338,1.563474,5.448353,2.495105,7.122862,6.491984,7.071186,3.274450,-7.745326,-1.290256,3.713408,0.800377,-6.858459,-9.136683,9.936282,5.496589,0.103354,6.567784,-5.760607,0.722667,-0.775698,8.071530,-6.691926,-5.089098,7.697195,2.910705,9.637826,-0.097855,7.145633,-6.732727,-7.473967,-1.828760,-3.490624,3.018279,-6.795028,-8.867462,6.471038,-0.755945,9.576715,7.043063,6.618559,3.416656,5.495245,-3.021576,0.971171,-9.043859,-1.083423,4.219661,-7.624196], dtype = "float64")#candidate|2112|(72,)|const|float64
call_2111 = relay.TupleGetItem(func_811_call(relay.reshape(const_2112.astype('float64'), [4, 2, 9]), relay.reshape(const_2112.astype('float64'), [4, 2, 9]), relay.reshape(const_2108.astype('float32'), [8, 13, 9]), ), 2)
call_2113 = relay.TupleGetItem(func_816_call(relay.reshape(const_2112.astype('float64'), [4, 2, 9]), relay.reshape(const_2112.astype('float64'), [4, 2, 9]), relay.reshape(const_2108.astype('float32'), [8, 13, 9]), ), 2)
func_648_call = mod.get_global_var('func_648')
func_651_call = mutated_mod.get_global_var('func_651')
call_2118 = relay.TupleGetItem(func_648_call(relay.reshape(call_2111.astype('float32'), [924,])), 2)
call_2119 = relay.TupleGetItem(func_651_call(relay.reshape(call_2111.astype('float32'), [924,])), 2)
func_1409_call = mod.get_global_var('func_1409')
func_1412_call = mutated_mod.get_global_var('func_1412')
call_2124 = relay.TupleGetItem(func_1409_call(relay.reshape(const_2079.astype('int64'), [10, 5, 4]), relay.reshape(var_2080.astype('float32'), [924,]), ), 2)
call_2125 = relay.TupleGetItem(func_1412_call(relay.reshape(const_2079.astype('int64'), [10, 5, 4]), relay.reshape(var_2080.astype('float32'), [924,]), ), 2)
bop_2129 = relay.not_equal(uop_2095.astype('bool'), relay.reshape(var_2064.astype('bool'), relay.shape_of(uop_2095))) # shape=(5, 5, 11)
func_392_call = mod.get_global_var('func_392')
func_395_call = mutated_mod.get_global_var('func_395')
call_2133 = relay.TupleGetItem(func_392_call(relay.reshape(call_2124.astype('float32'), [12, 11, 7]), relay.reshape(call_2124.astype('float32'), [12, 11, 7]), ), 0)
call_2134 = relay.TupleGetItem(func_395_call(relay.reshape(call_2124.astype('float32'), [12, 11, 7]), relay.reshape(call_2124.astype('float32'), [12, 11, 7]), ), 0)
func_733_call = mod.get_global_var('func_733')
func_737_call = mutated_mod.get_global_var('func_737')
var_2139 = relay.var("var_2139", dtype = "int8", shape = (572,))#candidate|2139|(572,)|var|int8
call_2138 = relay.TupleGetItem(func_733_call(relay.reshape(var_2139.astype('int8'), [4, 13, 11]), relay.reshape(var_2139.astype('int8'), [4, 13, 11]), ), 2)
call_2140 = relay.TupleGetItem(func_737_call(relay.reshape(var_2139.astype('int8'), [4, 13, 11]), relay.reshape(var_2139.astype('int8'), [4, 13, 11]), ), 2)
uop_2143 = relay.cos(uop_2065.astype('float32')) # shape=(5, 5, 11)
uop_2161 = relay.asin(var_2139.astype('float64')) # shape=(572,)
bop_2168 = relay.logical_xor(uop_2095.astype('uint32'), relay.reshape(var_2064.astype('uint32'), relay.shape_of(uop_2095))) # shape=(5, 5, 11)
func_811_call = mod.get_global_var('func_811')
func_816_call = mutated_mod.get_global_var('func_816')
call_2173 = relay.TupleGetItem(func_811_call(relay.reshape(const_2112.astype('float64'), [4, 2, 9]), relay.reshape(const_2112.astype('float64'), [4, 2, 9]), relay.reshape(call_2138.astype('float32'), [8, 13, 9]), ), 3)
call_2174 = relay.TupleGetItem(func_816_call(relay.reshape(const_2112.astype('float64'), [4, 2, 9]), relay.reshape(const_2112.astype('float64'), [4, 2, 9]), relay.reshape(call_2138.astype('float32'), [8, 13, 9]), ), 3)
uop_2177 = relay.log(bop_2168.astype('float32')) # shape=(5, 5, 11)
uop_2192 = relay.tan(uop_2177.astype('float64')) # shape=(5, 5, 11)
func_1409_call = mod.get_global_var('func_1409')
func_1412_call = mutated_mod.get_global_var('func_1412')
call_2197 = relay.TupleGetItem(func_1409_call(relay.reshape(call_2101.astype('int64'), [10, 5, 4]), relay.reshape(call_2111.astype('float32'), [924,]), ), 0)
call_2198 = relay.TupleGetItem(func_1412_call(relay.reshape(call_2101.astype('int64'), [10, 5, 4]), relay.reshape(call_2111.astype('float32'), [924,]), ), 0)
func_1409_call = mod.get_global_var('func_1409')
func_1412_call = mutated_mod.get_global_var('func_1412')
call_2199 = relay.TupleGetItem(func_1409_call(relay.reshape(call_2078.astype('int64'), [10, 5, 4]), relay.reshape(var_2080.astype('float32'), [924,]), ), 1)
call_2200 = relay.TupleGetItem(func_1412_call(relay.reshape(call_2078.astype('int64'), [10, 5, 4]), relay.reshape(var_2080.astype('float32'), [924,]), ), 1)
func_1124_call = mod.get_global_var('func_1124')
func_1126_call = mutated_mod.get_global_var('func_1126')
call_2205 = func_1124_call(relay.reshape(const_2112.astype('float32'), [8, 1, 9]))
call_2206 = func_1124_call(relay.reshape(const_2112.astype('float32'), [8, 1, 9]))
bop_2212 = relay.greater_equal(uop_2177.astype('bool'), relay.reshape(uop_2095.astype('bool'), relay.shape_of(uop_2177))) # shape=(5, 5, 11)
output = relay.Tuple([call_2078,const_2079,var_2080,call_2101,call_2106,const_2107,const_2108,call_2111,const_2112,call_2118,call_2124,bop_2129,call_2133,call_2138,uop_2143,uop_2161,call_2173,uop_2192,call_2197,call_2199,call_2205,bop_2212,])
output2 = relay.Tuple([call_2081,const_2079,var_2080,call_2102,call_2109,const_2107,const_2108,call_2113,const_2112,call_2119,call_2125,bop_2129,call_2134,call_2140,uop_2143,uop_2161,call_2174,uop_2192,call_2198,call_2200,call_2206,bop_2212,])
func_2219 = relay.Function([var_2064,var_2080,var_2139,], output)
mod['func_2219'] = func_2219
mod = relay.transform.InferType()(mod)
var_2220 = relay.var("var_2220", dtype = "float64", shape = (5, 5, 11))#candidate|2220|(5, 5, 11)|var|float64
var_2221 = relay.var("var_2221", dtype = "float32", shape = (924,))#candidate|2221|(924,)|var|float32
var_2222 = relay.var("var_2222", dtype = "int8", shape = (572,))#candidate|2222|(572,)|var|int8
output = func_2219(var_2220,var_2221,var_2222,)
func_2223 = relay.Function([var_2220,var_2221,var_2222,], output)
mutated_mod['func_2223'] = func_2223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2298 = relay.var("var_2298", dtype = "float32", shape = (15, 16, 15))#candidate|2298|(15, 16, 15)|var|float32
uop_2299 = relay.exp(var_2298.astype('float32')) # shape=(15, 16, 15)
bop_2312 = relay.greater_equal(uop_2299.astype('bool'), relay.reshape(var_2298.astype('bool'), relay.shape_of(uop_2299))) # shape=(15, 16, 15)
bop_2318 = relay.right_shift(uop_2299.astype('int32'), relay.reshape(var_2298.astype('int32'), relay.shape_of(uop_2299))) # shape=(15, 16, 15)
output = relay.Tuple([bop_2312,bop_2318,])
output2 = relay.Tuple([bop_2312,bop_2318,])
func_2331 = relay.Function([var_2298,], output)
mod['func_2331'] = func_2331
mod = relay.transform.InferType()(mod)
var_2332 = relay.var("var_2332", dtype = "float32", shape = (15, 16, 15))#candidate|2332|(15, 16, 15)|var|float32
output = func_2331(var_2332)
func_2333 = relay.Function([var_2332], output)
mutated_mod['func_2333'] = func_2333
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2531 = relay.const([[[6.177182,9.194170,-3.637700,-5.448769],[-1.007323,-6.797894,-3.953350,-2.331235],[8.206262,-8.743489,-1.160578,2.960555],[-3.171732,-0.709509,1.248584,0.259189],[-0.503397,7.831085,-3.571020,-7.770185],[6.195994,9.156179,-5.919849,8.518598],[-5.459948,4.936192,-9.723182,2.718484],[-7.277665,4.246721,9.671237,2.699761],[7.540832,0.623913,-1.492921,-5.819534],[-3.352531,1.721443,-9.049241,8.861190],[7.068070,9.207521,9.048136,-2.699877],[-0.615661,6.888757,3.101552,-8.289465],[-3.125124,-1.628874,3.855774,-3.172273],[-6.051757,-4.387521,5.363303,-2.744604]],[[-9.997091,-0.818980,-9.116887,-6.206472],[5.663307,1.420794,-0.353255,6.168665],[4.620148,5.494612,5.923592,-0.739498],[-7.037166,-4.050454,-3.523410,-7.721671],[-5.696754,-5.667334,7.194191,-3.431307],[4.153119,1.871092,0.922959,-5.250342],[5.888349,9.457003,2.034746,-3.659661],[4.034712,9.572182,2.923021,-8.554039],[2.210098,2.574468,1.238006,9.871115],[5.880279,-8.751238,1.861657,4.591304],[5.405691,3.936906,-2.703152,-9.619341],[-7.745897,-2.811174,9.606899,-3.094506],[5.906034,5.740559,5.263964,7.137958],[-8.371970,7.475640,-8.697047,-9.282314]],[[1.348716,0.407487,4.561424,7.662289],[8.776197,-0.223350,1.056293,6.925680],[-7.522262,0.234420,5.903022,-0.253132],[7.524029,-6.047903,-6.186665,2.206750],[-5.510865,8.971136,-4.359471,-6.850271],[-0.773810,-7.830699,9.145235,4.496708],[-2.928637,8.514477,1.453034,9.056850],[7.198018,9.747970,-9.323873,1.979500],[7.727097,0.403840,-1.481075,0.770876],[-9.297388,-5.614340,-8.484089,4.887470],[-4.985450,-6.781134,-0.285798,-7.099866],[3.027432,2.880057,-6.259246,9.774235],[9.937065,1.784173,-0.240851,3.043759],[-7.918864,-9.606570,0.856398,-1.152974]],[[-6.677028,0.688889,-0.431338,-9.663475],[4.328720,-3.356343,-4.445726,9.265986],[-6.232009,4.197063,-4.834945,4.564909],[-9.350364,0.955218,6.616991,-6.889731],[-1.048056,-7.444147,4.590009,4.489545],[-1.532088,6.150273,5.714119,-2.721556],[8.882375,-2.515114,-8.821947,9.750497],[4.203454,-8.371618,-5.244867,-8.283493],[7.632780,4.893775,7.671221,2.993149],[-9.188009,-9.693868,-9.687134,3.420572],[8.626254,4.280761,4.173799,-7.910570],[9.145069,5.343724,7.827966,-5.441484],[-8.458098,-3.656658,-5.007956,2.413062],[-9.624807,-5.356255,0.992136,-3.448934]],[[3.809033,-1.974386,-0.321110,0.066723],[-2.416267,6.584076,-5.822759,-3.679314],[-1.737628,-7.179376,-1.049182,9.579734],[-8.962448,4.515238,-0.563432,-8.773117],[1.868042,-6.846461,0.475253,8.238325],[7.521320,-5.277103,9.278972,-9.140905],[5.385904,-5.645906,5.143986,-6.900647],[-9.674907,1.190552,4.914938,-7.824540],[-1.712248,3.137035,1.845162,4.244280],[6.561639,-0.675531,-5.538518,-6.160036],[-2.278439,-2.181869,1.135007,1.475236],[-6.271829,-5.523156,-8.005802,3.314278],[6.340255,-7.339450,4.624341,4.010447],[0.393494,2.566756,1.876801,5.829806]],[[8.968828,9.284519,-8.984578,-4.629854],[7.280761,6.165979,1.743004,-7.535256],[6.780416,9.269731,1.128084,8.730399],[4.223301,-7.990489,3.240935,-2.283279],[4.294401,9.524831,-8.150174,1.534116],[-9.880230,2.199874,8.816982,-3.614579],[-7.520290,8.541206,2.462250,3.989615],[-1.668045,5.678054,4.974079,-5.667181],[4.557680,8.011387,9.411924,7.849668],[5.287823,4.901235,-9.353768,4.996073],[-7.734016,-9.929117,8.574688,-3.266036],[-1.379177,1.855570,6.860370,-7.976080],[0.966567,-1.167889,-7.545830,-7.892900],[-8.140502,-8.661315,-8.010368,5.593481]],[[2.398473,-9.508409,0.980359,-5.211236],[-7.937641,-9.939412,1.123409,-4.153546],[-8.370972,0.114589,-3.887284,-0.460760],[4.729785,2.967093,-6.042460,-6.920253],[0.503846,-0.769686,9.136312,-5.938786],[9.178135,5.570155,9.508932,1.709376],[-9.798221,0.330711,4.220946,3.097078],[-5.449232,-1.154175,-4.209027,-6.955896],[3.671531,-0.008485,5.746745,-5.311522],[0.847729,1.136652,7.574302,-5.861651],[6.172417,-8.477164,6.504432,-1.782483],[-5.436368,-0.526543,0.694951,-4.761832],[-0.144141,-0.556210,9.655245,-6.803440],[-8.521233,-1.818192,-1.906249,-7.100386]],[[-9.531569,-4.763089,-6.516504,8.321687],[2.980376,4.385102,5.891422,4.961179],[0.304969,2.189124,-9.587516,2.142365],[-6.744962,-9.073537,6.110644,-7.426985],[3.670606,7.595080,7.862222,5.347434],[0.585131,-8.120143,-4.924621,-8.052303],[2.409792,1.713866,1.781324,-0.458815],[-5.989462,-5.390281,9.872358,6.622334],[-4.009744,7.575420,7.722448,-2.154304],[2.445974,5.547917,3.356876,0.068947],[-5.313155,-1.570799,-7.684188,0.318754],[-1.852761,-1.074114,-1.123581,-1.434163],[-1.879483,8.897406,-1.387289,-1.375392],[-4.455307,-8.926282,6.734469,-1.797900]],[[-0.223953,5.556050,2.504750,3.077797],[2.565922,-5.270292,8.456692,-1.876776],[-7.626785,6.329246,9.528219,-9.771570],[-1.904940,5.627607,6.422671,6.421228],[7.264795,-4.582516,5.150882,-5.244666],[4.040731,-4.656464,2.388266,-4.793516],[-3.658713,3.514090,-4.860236,8.343397],[-1.744226,-2.241366,-1.547838,9.187954],[3.822974,8.935452,4.696137,7.869547],[-1.343376,7.645704,-2.785625,8.511044],[8.111028,-8.212341,-4.888830,-8.817537],[0.009049,-3.454781,-8.017211,2.795513],[6.828454,-5.476306,-8.994499,7.679837],[-6.995806,-3.239568,5.851715,6.429572]],[[-6.109313,-6.443792,-6.463083,8.654547],[8.071581,2.799354,4.266118,2.180146],[1.621819,7.426578,0.905266,-4.070644],[2.446600,-6.905806,-6.837136,-8.401558],[-4.650312,-5.094919,8.107153,-9.798222],[6.915346,1.003886,-0.140435,-6.022719],[-3.753203,3.209560,-8.081318,5.406715],[-8.207339,-7.207294,-0.837098,-9.214544],[5.983153,2.200114,-8.897091,-8.237261],[7.491755,4.274888,-9.264821,-7.929201],[7.323333,2.688268,5.198562,-0.962893],[-2.109700,0.445755,4.046227,2.487382],[-8.651838,2.756492,-0.464125,-0.307517],[5.635163,0.376567,4.853205,6.730789]],[[3.246726,8.098574,3.875077,8.691981],[-0.312625,-4.138689,-6.331545,8.740525],[-1.093026,2.105195,-7.541812,5.518476],[2.559857,8.098184,-6.582074,-0.191428],[3.454832,-8.995893,2.095944,3.216729],[-4.983492,1.412023,9.892599,3.360484],[4.408207,5.516642,1.835924,-7.494758],[5.882338,7.898994,-2.776895,-1.422192],[7.841128,-9.321394,-5.564431,3.878682],[-4.685317,2.677303,8.337292,5.362016],[9.163026,-0.784760,0.903750,-4.414330],[-0.280745,-8.137797,9.131501,6.418095],[-9.405713,4.985473,2.159527,9.792779],[0.133212,6.407253,-3.549948,7.406777]],[[7.921929,-4.898794,-5.230221,-6.720661],[-3.613687,9.621113,2.101132,3.340763],[0.327222,-4.089043,3.222619,-2.749804],[-7.833865,6.686786,-8.922383,-3.667499],[-2.523690,8.141843,8.350708,8.668961],[-0.785480,2.537767,5.831896,9.629096],[3.439846,3.009640,-5.539748,4.841720],[-0.912509,3.615303,-6.330032,-4.844720],[-4.669116,8.634415,9.588487,7.777613],[-6.564981,1.513415,3.876516,-2.700030],[-0.103434,1.063492,0.012071,5.803134],[2.824406,-4.221434,4.070378,-9.413143],[-4.503085,7.752092,1.519235,-5.931874],[-2.478502,6.013990,-5.510302,-1.448720]],[[-1.836495,4.785504,6.208427,8.896724],[5.590389,-3.552693,-3.764201,-1.255502],[-8.597135,1.650457,3.734279,6.850640],[8.746489,2.888697,-2.065358,7.213909],[-3.474234,-6.034342,1.793972,-9.551764],[-0.110745,6.679886,-2.720160,1.885403],[-9.336868,-5.401693,-5.839214,1.498910],[-9.343699,-0.202246,-1.163852,7.845538],[-3.401427,-0.469940,3.965197,7.497354],[0.008254,5.224377,-2.344416,0.928803],[6.493747,-5.104115,1.584916,0.745668],[3.773557,2.218062,6.632489,-4.153339],[-8.080578,-2.993980,0.194286,0.947759],[-0.560841,-1.020085,-8.708379,4.104350]],[[1.296836,2.202282,1.858101,6.109238],[-1.803247,7.975646,9.748609,-4.025228],[-3.381614,-0.616140,-6.464314,7.382590],[-4.223644,9.561995,9.319436,-9.842181],[5.392753,4.510808,-0.636284,1.560144],[4.105638,9.790706,-5.274617,2.527982],[-8.912399,-7.123426,0.791747,1.774242],[-7.168589,-0.583619,-6.020785,-6.788177],[8.622815,-8.749093,-5.679897,-0.525129],[-1.891999,3.642922,8.018507,-4.076809],[-8.110135,-4.141942,-8.001601,3.828299],[2.795115,-7.792374,-0.498350,8.328746],[-5.282107,2.966859,5.359519,4.377893],[3.013150,-0.076795,9.493955,-5.468794]],[[4.254757,1.297787,2.975529,-2.193491],[1.779730,-2.670127,-0.132402,6.162598],[6.189115,7.378261,-0.327909,9.242824],[1.024646,1.183240,-0.062083,-0.384980],[-9.890324,2.198733,-9.919656,-1.455882],[-1.539468,9.281308,-6.475511,3.324475],[-3.725062,-8.672075,4.256908,-1.933857],[5.638840,8.791896,-1.434298,-0.542128],[-8.971010,-2.903420,9.931603,-7.394452],[5.963283,-1.981127,-4.632440,9.498375],[0.968828,4.790026,6.597621,4.598993],[1.760290,-8.424210,0.640172,4.353107],[-8.247589,-4.887152,-7.785975,3.953199],[4.668033,-7.230498,-7.926329,-1.223171]],[[5.082330,-5.333566,8.677340,-9.527879],[3.076592,-9.211441,2.185106,-7.586903],[5.143616,2.903973,0.789410,7.239517],[4.011921,-2.549272,-5.008175,2.628578],[-3.691900,-1.205414,0.606100,1.593448],[-0.806048,4.850655,2.117148,6.358234],[4.614626,-3.810823,-7.820148,2.185903],[3.555250,8.908765,-2.320727,-6.624345],[-8.737227,-5.420709,0.929520,-5.513981],[-3.803620,9.502968,0.987359,-7.536270],[5.048729,0.735970,8.222400,5.526421],[-1.636444,-6.345477,6.517874,-7.551924],[8.207538,-4.998035,-7.754383,-2.774271],[-0.756106,-6.031950,4.868404,-2.725615]]], dtype = "float32")#candidate|2531|(16, 14, 4)|const|float32
var_2532 = relay.var("var_2532", dtype = "float32", shape = (16, 14, 4))#candidate|2532|(16, 14, 4)|var|float32
bop_2533 = relay.floor_mod(const_2531.astype('float32'), relay.reshape(var_2532.astype('float32'), relay.shape_of(const_2531))) # shape=(16, 14, 4)
output = bop_2533
output2 = bop_2533
func_2548 = relay.Function([var_2532,], output)
mod['func_2548'] = func_2548
mod = relay.transform.InferType()(mod)
mutated_mod['func_2548'] = func_2548
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2549 = relay.var("var_2549", dtype = "float32", shape = (16, 14, 4))#candidate|2549|(16, 14, 4)|var|float32
func_2548_call = mutated_mod.get_global_var('func_2548')
call_2550 = func_2548_call(var_2549)
output = call_2550
func_2551 = relay.Function([var_2549], output)
mutated_mod['func_2551'] = func_2551
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2653 = relay.const([[[-4.314288,-5.827954,1.591028,5.224750,4.671994,4.521543,6.078898,-7.519017,-1.754666,8.583643,5.959555,-0.323111,-7.412824,-4.097344],[2.924325,-2.274829,-6.417418,-2.166708,2.132847,7.569488,-3.320247,-4.530067,-4.800738,-4.777269,-0.100182,9.773837,2.116363,3.418185],[9.442839,6.704853,2.224724,-2.543496,-9.773903,8.603115,-5.506796,-6.443869,0.790011,5.481818,7.454841,-5.801280,2.961328,1.270341]],[[-7.959985,-3.051095,-5.034105,-4.279222,7.410832,1.918904,-7.572654,3.682189,-6.565269,6.661733,1.454276,3.667276,-1.212377,-2.546359],[6.786642,-6.301981,7.108891,-8.050996,-1.565609,1.142211,2.164444,6.461438,-3.970488,7.566641,-2.300942,-4.871685,0.992409,-8.129258],[-6.766288,9.192215,-2.677015,4.716526,4.531618,0.220656,-5.326504,7.779405,-7.999179,5.831053,-6.116357,3.437204,2.683513,-7.452374]],[[9.629809,-1.037114,1.700218,-9.326840,-3.540179,2.575090,9.128016,2.161215,-6.624502,8.977375,-1.263752,1.214532,4.665534,8.080063],[-1.909216,3.624821,8.461820,2.660083,-7.079188,-1.212156,8.360658,-8.180781,2.244789,6.580806,-1.921283,-2.130983,6.042683,0.703855],[-1.238754,-3.027033,-4.816451,-9.800803,6.887736,2.072732,6.320039,-8.999893,9.532117,4.302712,8.331736,-7.310957,-2.556570,-1.094570]],[[-8.516618,-0.103918,-0.788918,-8.750992,4.715291,-3.096710,-8.144400,-3.853491,-1.319934,9.678605,4.704475,-2.187330,0.618791,-2.593614],[0.313553,7.848109,2.710541,-6.122922,-8.683837,-4.238964,8.804175,2.329355,-9.550803,-5.410011,-0.371438,3.337650,-7.530984,-8.944723],[-7.314361,9.040976,7.372472,-2.689620,3.924594,0.619649,0.401025,2.123750,-6.020495,-8.900567,-0.846086,6.668669,-6.338320,-3.981959]],[[-9.158521,-6.046470,5.889208,-7.987779,9.203710,2.455850,8.646355,-9.993282,2.706885,-6.743262,-0.699150,-8.276996,1.957593,-1.539056],[-8.087418,-5.404683,5.180979,-2.070955,4.533576,-5.577783,7.561156,6.782895,-2.563215,9.361580,3.363276,2.076817,-1.331410,-4.031317],[-7.463912,-0.881233,3.262061,7.758117,7.242962,0.629176,5.245204,7.787537,-1.504930,3.800965,4.325727,-8.030911,-1.560008,-0.641177]],[[0.384961,-5.049210,9.341831,3.349415,-2.248588,-2.699215,-1.247488,-5.458781,1.759721,-3.887077,-0.094106,-8.596918,-2.279304,-1.781427],[-7.957586,3.835186,5.636194,3.138532,-9.639102,4.416892,-6.339897,8.267183,3.770430,-2.879256,6.837656,-4.062609,-0.201921,9.221823],[7.711349,-2.522523,5.427583,-3.720892,7.527195,6.671408,-2.094246,-3.687347,-4.977237,2.883504,2.133869,-1.470765,-9.205483,-1.190188]],[[2.907145,7.857327,7.361867,5.226938,4.861330,3.288351,0.241767,4.322601,7.836944,-7.191078,7.728116,-7.746300,6.428545,6.574000],[0.697948,4.228219,-8.841860,-0.925039,-9.181681,-5.892779,2.097172,-0.875393,-7.037804,-1.464287,-3.111904,-1.036802,-0.232531,-2.822045],[4.277518,2.288064,-4.756260,-3.963797,6.112087,-5.084556,-3.972182,8.674637,5.365694,-0.570216,4.504017,9.749026,-3.877773,9.165268]],[[-4.116489,-0.322785,-7.935613,7.631762,-5.044277,8.142220,-0.907628,4.612350,-8.356522,-7.193947,7.342995,8.804864,7.602184,-2.796442],[-2.784345,-6.873305,8.724251,8.897755,-2.921438,-0.355120,-1.614821,-5.060515,-5.133301,2.624477,-1.022553,-7.060945,-8.884111,0.849203],[-1.546132,8.277541,3.856446,-0.228508,7.593438,-3.294518,-1.564245,-0.661211,-3.520845,1.911527,7.347121,7.411037,-6.739749,8.458561]],[[-5.028482,-1.586247,-0.653675,7.924149,1.487654,-7.925483,2.499784,-8.594327,-9.474981,-1.664421,3.351124,3.866750,-1.547011,-4.068468],[-7.498570,-9.878633,-3.451899,9.112092,-6.985179,7.485630,-5.888000,-2.721702,-0.435308,9.287471,-5.697144,-7.439743,4.421595,-6.940023],[-1.711946,-6.650537,-0.975863,9.933095,2.792510,6.331389,-1.233529,7.568099,-5.380712,-0.791358,-8.006061,0.997725,-9.881626,-3.093529]],[[0.985039,0.715017,-5.010088,-3.849722,-5.871686,0.096010,5.839425,-4.816440,0.895813,-8.834090,3.696249,6.572345,9.489489,-2.131048],[-4.855686,7.711723,5.755692,1.002455,8.008727,-1.079439,-3.261759,3.522403,-5.069590,1.162757,-0.622831,-8.767419,-8.879252,2.704948],[-0.991025,1.720008,4.662909,2.792185,-2.570348,-9.698545,-2.478506,7.882091,-4.090971,-5.443426,-9.300888,5.180331,-8.969052,2.777106]]], dtype = "float64")#candidate|2653|(10, 3, 14)|const|float64
uop_2654 = relay.exp(const_2653.astype('float64')) # shape=(10, 3, 14)
uop_2658 = relay.acos(uop_2654.astype('float64')) # shape=(10, 3, 14)
bop_2660 = relay.logical_xor(uop_2658.astype('uint16'), relay.reshape(uop_2654.astype('uint16'), relay.shape_of(uop_2658))) # shape=(10, 3, 14)
output = bop_2660
output2 = bop_2660
func_2681 = relay.Function([], output)
mod['func_2681'] = func_2681
mod = relay.transform.InferType()(mod)
mutated_mod['func_2681'] = func_2681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mutated_mod.get_global_var('func_2681')
call_2682 = func_2681_call()
output = call_2682
func_2683 = relay.Function([], output)
mutated_mod['func_2683'] = func_2683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_2763 = func_2681_call()
call_2764 = func_2681_call()
func_1409_call = mod.get_global_var('func_1409')
func_1412_call = mutated_mod.get_global_var('func_1412')
var_2781 = relay.var("var_2781", dtype = "int64", shape = (200,))#candidate|2781|(200,)|var|int64
var_2782 = relay.var("var_2782", dtype = "float32", shape = (924,))#candidate|2782|(924,)|var|float32
call_2780 = relay.TupleGetItem(func_1409_call(relay.reshape(var_2781.astype('int64'), [10, 5, 4]), relay.reshape(var_2782.astype('float32'), [924,]), ), 0)
call_2783 = relay.TupleGetItem(func_1412_call(relay.reshape(var_2781.astype('int64'), [10, 5, 4]), relay.reshape(var_2782.astype('float32'), [924,]), ), 0)
func_2548_call = mod.get_global_var('func_2548')
func_2551_call = mutated_mod.get_global_var('func_2551')
const_2788 = relay.const([[6.082670,-0.813094,5.869885,7.258311,4.478812,-4.508671,9.227140,9.969704,-8.880992,-3.824342,-4.110036,-1.722437,-5.898953,0.105176,-8.613248,-2.272268,5.601442,-9.865651,-4.372702,-7.085541,6.889058,9.085948,5.094547,8.424922,-8.297531,-9.809122,9.121672,4.360541,2.546797,5.390381,-4.668419,4.382073,-3.464854,-5.618100,5.006806,-7.836804,0.287883,7.914696,3.003698,-2.389903,9.621482,-0.210291,1.371256,-8.244424,9.948572,6.311469,3.523425,5.849643,-4.041672,-2.468595,-7.125180,3.825290,9.692776,-4.975806,1.364012,-3.422489,-5.352415,8.098022,-9.883799,-3.465390,4.922231,7.267664,-7.380688,-4.416638,-6.905372,-3.240663,-9.060211,-7.759918,7.599083,-7.652792,-3.520645,8.388847,1.442122,-9.160062,-7.246652,3.323035,-7.782312,-8.194649,3.744767,-3.515163,8.253295,7.152550,-0.943467,6.586294,-1.129259,-7.842702,0.301017,1.089539,-1.138611,-0.171435,-1.834215,3.882415,8.002440,9.473626,-8.969319,-3.731572,0.383168,6.381417,-7.921852,0.859904,-3.383285,4.573690,7.345227,1.667259,-4.256104,-2.297096,9.253603,-1.257362,2.716110,-5.561253,9.956682,2.183772,-3.853608,-2.557148,-1.361502,2.133948,3.382601,-4.212918,-7.539748,-0.402969,1.161344,5.339199,-6.057405,1.381494,-8.991696,-2.771235,4.101794,-2.394506,-3.509711,-2.646429,-8.575146,-8.003624,-3.687013,-7.816771,-9.797927,1.594025,8.282295,-1.012813,-2.941817,1.783164,0.606410,-8.465056,5.752996,-0.162912,7.844160,-8.511680,4.389278,9.617416,3.552952,-4.589804,2.939789,-7.391763,-3.596582,-6.125172,-5.986442,5.142428,9.231180,-6.017010,-3.232196,6.857608,6.454828,0.009712,-2.325941,-4.504665,-0.692803,5.381421,4.820534,-7.677763,-8.869302,-7.768804,-9.867033,8.855120,-0.729137,8.525577,-8.524216,-8.069151,-3.445239,-8.552852,2.182430,8.999043,6.470003,4.642177,-2.878378,1.112103,-9.551689,4.408054,4.474437,2.787783,0.536734,1.266607,7.678996,5.872405,8.730751,-6.193771,5.671562,6.365845,-7.216842,6.948422,-8.019582,9.964155,-7.129692,-4.837650,1.403531,5.280687,-4.426745,8.390479,5.098335,6.784296,-6.681105,2.629985,3.720098,0.952363,9.803206,-1.490752,3.778123,-6.679563,7.732793,6.485349,-2.378451,1.340248,7.829917,-4.242030,1.421133,-5.066850,6.367542,1.718416,-8.749259,-4.747729,4.193474,8.399420,2.255067,8.744129,-9.519410,7.985558,7.802424,1.644290,1.874486,4.274177,-3.193681,7.931537,8.361210,-4.975797,0.855354,2.053091,-1.095550,1.896161,1.782553,-8.535564,9.092768,-6.326774,-5.857852,-5.953058,-1.030080,-5.429215,0.209185,-0.455649,9.548417,-8.472127,-3.464930,3.600998,-0.576303,-7.438081,1.222704,-8.216451,-2.179019,-8.780962,-9.470576,2.092108,-7.232372,8.298792,8.920262,9.761588,7.244184,8.631450,0.885716,-8.243750,7.443717,5.823583,0.893706,5.745116,6.474491,-4.870082,-7.098730,-2.654797,3.345159,-5.096731,9.167556,3.047934,2.756613,-8.984839,-4.075678,5.061371,5.219547,-6.267207,-7.293958,3.370448,7.611128,6.279200,9.996535,3.480998,-0.552091,7.335978,3.969770,-0.243036,0.314608,7.768811,9.468845,4.186568,-2.078472,1.558449,8.027190,-1.159862,-3.184960,7.475775,2.170454,-0.999744,-1.512711,4.432302,6.591463,8.519399,8.570652,-1.268683,2.412817,1.299046,4.918175,-3.332537,1.525563,-4.654783,-7.750674,9.769284,-7.100158,7.166365,1.373796,-6.271436,-7.072841,4.931060,-9.850256,-8.806658,7.234974,6.445641,-2.259603,-4.175040,-2.793829,3.771597,-2.098610,-2.748910,7.081499,7.640819,5.201869,9.637177,9.035095,7.344636,-0.233374,5.091757,8.782870,-4.168545,-3.565210,-2.404492,9.336165,-1.668192,-4.610440,-6.091855,-6.385389,5.327206,7.878475,-8.569073,9.488682,2.015584,9.306158,-9.570528,3.583108,0.008552,8.204487,9.072515,6.919734,-4.014861,-4.473237,6.664481,-3.599969,-9.247218,3.583233,3.897230,-1.196468,-9.521050,8.250233,2.458200,-5.414948,3.440353,-8.874828,-7.503151,-8.980250,2.962897,-2.222224,9.107870,7.306213,-3.813788,-2.212543,-6.284445,-0.371092,2.264454,5.289524,1.739324,6.270483,6.322467,6.983753,7.973763,-8.288343,-5.468208,-8.163063,3.421519,-5.492174,-8.824135,5.610812,6.534158,-1.695908,-8.598343,4.340995,2.646367,-6.801539,-3.702854,-3.780004,5.572256,4.782192,9.699294,6.971498,9.114535,8.186627,8.526732,-0.909896,-4.544775,1.586874,-4.793037,-8.437569,1.292031,-4.711734,-1.921548,5.972392,4.459193,-3.374786,-4.911527,-1.750982,8.966741,-9.689997,-7.051414,2.412309,1.183520,7.622742,-0.278859,4.114119,-7.831625,6.040076,-5.946272,-9.214130,9.531125,7.437378,1.789224,-9.380239,0.880634,3.531856,7.293423,-2.121021,7.659350,5.485471,-5.637545,2.255912,-1.788264,2.958900,6.688950,1.344343,-5.086196,8.858475,-1.574226,-2.874185,-1.620573,6.263353,9.951741,-3.859103,-5.078316,-7.188548,-8.353849,7.411043,-7.465983,7.438027,3.165666,7.826970,3.072376,4.351443,-6.674924,7.907485,7.544855,-7.234663,4.386052,2.860048,-3.337583,-1.480234,2.557726,-2.930560,-2.495599,6.033554,-7.582924,-5.360632,8.936053,6.029170,5.541897,-6.567880,6.638164,2.765381,5.806769,-4.747189,-0.040811,-8.079430,2.104681,-8.967588,0.417402,5.669746,-2.287654,0.267098,5.598598,4.815969,-5.192231,4.084973,-7.962048,-1.035923,8.553005,-2.451536,7.862429,2.448130,0.046428,-2.763410,2.321937,-1.021101,9.463438,-4.313900,-1.246307,-9.638851,0.606105,-1.952614,-4.643267,-9.617700,-1.213377,-2.526150,6.672585,-8.707684,5.569290,6.481968,-3.969782,-8.650800,-1.664770,-5.819976,-1.470270,3.896299,-7.045996,7.619392,-6.570406,-7.212655,-6.263050,-1.238507,-8.566856,-7.823732,8.469899,-5.505565,4.773169,-9.811721,0.676562,-7.112810,8.906190,-2.124834,-5.224576,-1.327230,4.109008,6.655886,0.648484,8.934218,-2.309629,7.333496,-1.400902,2.731810,-1.604918,4.532256,-3.670740,0.768139,7.253497,0.262319,-1.821000,-2.010405,-6.798078,5.487848,4.989690,5.782213,9.475691,2.499219,-4.387285,6.338219,-4.186524,6.841003,3.852265,-5.197497,-1.245439,-2.510466,-8.378615,-7.757739,-5.088198,-7.718618,-6.204533,9.112283,5.513983,7.588460,1.519901,-6.120684,5.529179,-8.147464,8.411719,4.700589,-2.971951,-2.565086,-5.111109,5.165554,-5.292724,-4.690344,7.167574,-4.238901,3.839101,-9.637078,1.428614,-6.267211,-6.422535,3.247567,-0.440010,0.323339,-0.434398,9.273990,-9.121689,6.705434,-2.469465,-6.469017,5.447909,-1.044963,-8.287372,4.273273,-8.630558,7.400850,-1.424024,-0.565479,9.303134,6.412898,4.168664,2.063280,7.282597,-1.584551,-9.942079,5.861164,-4.153261,-5.629844,-6.274095,-1.478924,-9.174297,-7.256400,-6.264203,6.241084,-2.261512,3.608191,2.548719,-0.568966,7.524223,-9.046730,3.824338,4.633923,-3.634777,-5.144883,9.244050,3.219917,-1.767949,-9.469898,-3.859209,9.493492,-9.616258,-6.564484,2.320004,-5.613272,3.283583,-9.794604,-1.418725,-5.424175,-0.432814,0.259324,6.538992,2.533554,-6.935764,-7.293913,4.241016,-5.568134,-8.591990,0.158774,1.890822,-6.630120,-1.753383,0.157670,-0.376002,8.064993,-5.165904,-1.356874,7.798645,-7.568468,0.449406,-3.549964,-0.609721,-0.656384,4.301562,-2.431115,9.618293,-1.982710,0.164658,-5.009868,9.764189,-8.440310,1.441401,-5.490166,-0.670906,-2.096656,1.147740,-9.850356,5.309285,8.208638,-5.704523,4.698095,-7.895050,-9.112098,2.810310,-1.167193,-1.567141,2.154346,8.426695,6.345951,-5.043168,-8.220239,-5.305952,9.842356,9.125459,3.453556,-9.336103,-8.784646,-6.078731,-4.337200,3.324387,-6.308939,-4.818351,5.903236,7.740580,3.505933,6.790045,-2.710909,4.058344,8.383552,-8.632888,-8.448228,-8.778216,6.543975,2.869108,-6.214263,-7.705166,9.233332,-2.664806,0.707982,4.355338,7.605485,-3.265380,-4.832125,5.778493,-2.593520,-3.341207,-2.661375,0.097763,5.545339,-9.915456,-2.199244,2.322897,8.222961,-1.077972,1.786042,6.951436,-8.712628,-5.498895,0.100226,3.185839,8.713646,7.077367,-8.646999,-6.033247,9.032644,3.241639,6.078764,7.819904,5.071426,2.955274,0.921773,6.479513,-1.361329,5.405321,-6.375958,-0.428800,-2.963437,9.940368,-9.896173,6.091035,-6.937580,1.816862,0.860928,-7.056249,6.716935,5.060307,5.733046,-1.858861,9.202265,7.200553,-3.115399,8.913346,8.436662,0.736978,-0.210241,-9.914465,-7.196891,5.309778,-3.915334,-2.147400,7.481971,4.211566,-1.351416,9.158719,7.116765,3.155612,-9.048326,-2.968931,-1.534886,1.217709,-3.320137,4.471051,-6.508459,-6.437456,6.076065,-4.346630,9.816754,6.354809,8.251597,9.261620,1.132756,6.895648,6.303254,-7.818567,1.295162,0.622982,9.874502,-5.294578,7.375199,-0.271445,4.509323,9.673398,-3.910924,7.694772,8.485161,-6.145910,1.574207,-0.411876,-9.294339,-7.511417,8.083626,7.895333,5.678121,-3.729843,3.379273,9.078021,9.770951,8.715793,6.219608,2.701553,9.969713,5.465834,0.192353,4.696204,-7.369361,-8.695039,4.641845,-8.369860,3.201854,1.683463,-9.223167,-0.713405,-4.556424,4.869976,-1.712018,-4.767944,2.594541,-7.526417,-0.855680,-7.641637,-9.349203,-0.782744]], dtype = "float32")#candidate|2788|(1, 896)|const|float32
call_2787 = func_2548_call(relay.reshape(const_2788.astype('float32'), [16, 14, 4]))
call_2789 = func_2548_call(relay.reshape(const_2788.astype('float32'), [16, 14, 4]))
output = relay.Tuple([call_2763,call_2780,var_2781,var_2782,call_2787,const_2788,])
output2 = relay.Tuple([call_2764,call_2783,var_2781,var_2782,call_2789,const_2788,])
func_2803 = relay.Function([var_2781,var_2782,], output)
mod['func_2803'] = func_2803
mod = relay.transform.InferType()(mod)
mutated_mod['func_2803'] = func_2803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2803_call = mutated_mod.get_global_var('func_2803')
var_2805 = relay.var("var_2805", dtype = "int64", shape = (200,))#candidate|2805|(200,)|var|int64
var_2806 = relay.var("var_2806", dtype = "float32", shape = (924,))#candidate|2806|(924,)|var|float32
call_2804 = func_2803_call(var_2805,var_2806,)
output = call_2804
func_2807 = relay.Function([var_2805,var_2806,], output)
mutated_mod['func_2807'] = func_2807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_2842 = func_2681_call()
call_2843 = func_2681_call()
output = call_2842
output2 = call_2843
func_2853 = relay.Function([], output)
mod['func_2853'] = func_2853
mod = relay.transform.InferType()(mod)
mutated_mod['func_2853'] = func_2853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2853_call = mutated_mod.get_global_var('func_2853')
call_2854 = func_2853_call()
output = call_2854
func_2855 = relay.Function([], output)
mutated_mod['func_2855'] = func_2855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_2859 = func_2681_call()
call_2860 = func_2681_call()
func_733_call = mod.get_global_var('func_733')
func_737_call = mutated_mod.get_global_var('func_737')
const_2873 = relay.const([5,2,-3,1,7,2,8,7,8,-4,3,3,-3,-5,9,10,7,3,-2,-6,8,-7,6,2,10,-10,-10,-3,3,9,-7,-6,-2,4,3,5,10,8,5,-1,7,-10,-8,10,-10,-3,-10,1,10,-8,-9,-6,6,-6,7,-8,3,-9,-10,2,10,6,6,1,-5,3,-3,-5,-5,8,10,-4,3,-4,4,2,3,3,-7,7,1,-8,-7,3,-5,1,8,-8,1,-3,-10,-1,7,2,6,8,9,4,-10,-7,-10,2,-8,-9,4,5,9,9,-2,9,-2,7,-6,7,-10,3,-5,-7,5,1,8,-5,4,2,-7,-5,-10,8,5,-4,-2,-4,3,-9,7,-10,-7,-9,-1,8,4,6,-6,-1,-2,6,5,-10,-1,-7,-10,-3,-1,8,3,-1,7,-2,4,4,10,1,-1,-4,-1,-1,5,7,-8,10,-3,10,-8,5,-6,1,8,-3,-4,-1,7,7,-8,10,1,7,2,-6,-10,4,9,-3,-7,7,-5,-6,4,6,10,-8,-9,7,-4,4,3,1,-3,-10,-5,4,7,4,-5,-5,-8,6,-10,9,-7,2,-10,3,-1,6,1,-8,9,-10,-2,-9,-10,10,-9,5,-1,-5,2,-4,10,9,-9,-2,8,-3,8,5,-7,7,-3,4,-9,-4,-7,-6,-10,10,3,-10,-5,3,4,-9,-2,-9,-9,8,-1,3,-3,-7,-3,4,1,6,4,-7,-7,9,5,4,-10,3,7,9,4,-2,-5,2,-8,-9,-8,-3,7,6,-10,5,5,9,-6,1,-4,-7,-9,2,5,-4,-2,-2,6,10,-2,-6,-4,10,-3,10,-6,-6,-3,-4,4,5,-4,-4,7,-8,8,8,9,4,9,-3,10,-9,2,5,-3,1,-9,8,8,7,-10,-9,-4,-2,8,7,-7,-5,2,-2,-2,2,7,-9,4,10,-4,-2,2,1,-1,10,-7,-6,6,-5,10,-10,-7,-9,-9,-6,8,9,-4,-3,-1,5,-9,10,-9,-4,2,6,-4,-2,-6,6,-8,5,9,9,3,7,-2,-7,-2,10,6,-7,2,5,-10,1,8,-8,-6,-7,10,10,3,-5,-8,-2,2,7,9,-2,-3,-4,9,-9,10,3,-2,-4,-10,-1,-5,-5,2,-10,3,9,5,8,7,8,-5,-9,-3,3,3,2,-7,-6,-10,-8,-10,-9,-2,10,4,9,10,8,3,7,-3,8,9,-9,-4,-9,3,1,5,-7,1,10,-3,7,10,-6,4,-3,7,9,8,-8,-8,-8,-2,5,10,5,6,1,-7,-8,-10,3,2,1,-1,-3,-7,3,-8,3,4,1,-1,5,-9,8,-4,7,2,-8,-6,-4,-3,-2,-5,-7,4,-10,-10,2,6,9,8,5,-5,-5,-3,-3,7,-7,10,-1,4,9,6,5,9,1,-3,9,1,-6,4,3,7,-4,-6,1,-8,-5,-2,-6,6,8,8,-7,5,3,5,3,-8,8,3,3,2,8,10,-2,-5,-8], dtype = "int8")#candidate|2873|(572,)|const|int8
call_2872 = relay.TupleGetItem(func_733_call(relay.reshape(const_2873.astype('int8'), [4, 13, 11]), relay.reshape(const_2873.astype('int8'), [4, 13, 11]), ), 3)
call_2874 = relay.TupleGetItem(func_737_call(relay.reshape(const_2873.astype('int8'), [4, 13, 11]), relay.reshape(const_2873.astype('int8'), [4, 13, 11]), ), 3)
var_2884 = relay.var("var_2884", dtype = "int8", shape = (572,))#candidate|2884|(572,)|var|int8
bop_2885 = relay.logical_xor(const_2873.astype('uint32'), relay.reshape(var_2884.astype('uint32'), relay.shape_of(const_2873))) # shape=(572,)
output = relay.Tuple([call_2859,call_2872,bop_2885,])
output2 = relay.Tuple([call_2860,call_2874,bop_2885,])
func_2891 = relay.Function([var_2884,], output)
mod['func_2891'] = func_2891
mod = relay.transform.InferType()(mod)
mutated_mod['func_2891'] = func_2891
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2892 = relay.var("var_2892", dtype = "int8", shape = (572,))#candidate|2892|(572,)|var|int8
func_2891_call = mutated_mod.get_global_var('func_2891')
call_2893 = func_2891_call(var_2892)
output = call_2893
func_2894 = relay.Function([var_2892], output)
mutated_mod['func_2894'] = func_2894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_2925 = func_2681_call()
call_2926 = func_2681_call()
output = relay.Tuple([call_2925,])
output2 = relay.Tuple([call_2926,])
func_2932 = relay.Function([], output)
mod['func_2932'] = func_2932
mod = relay.transform.InferType()(mod)
output = func_2932()
func_2933 = relay.Function([], output)
mutated_mod['func_2933'] = func_2933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_2936 = func_2681_call()
call_2937 = func_2681_call()
uop_2940 = relay.rsqrt(call_2936.astype('float64')) # shape=(10, 3, 14)
uop_2942 = relay.rsqrt(call_2937.astype('float64')) # shape=(10, 3, 14)
func_929_call = mod.get_global_var('func_929')
func_932_call = mutated_mod.get_global_var('func_932')
const_2947 = relay.const(6, dtype = "int8")#candidate|2947|()|const|int8
call_2946 = relay.TupleGetItem(func_929_call(relay.reshape(const_2947.astype('int8'), [])), 0)
call_2948 = relay.TupleGetItem(func_932_call(relay.reshape(const_2947.astype('int8'), [])), 0)
func_2891_call = mod.get_global_var('func_2891')
func_2894_call = mutated_mod.get_global_var('func_2894')
const_2965 = relay.const([[4,-2,3,5,1,7,10,-6,10,-9,-1,3,5,8,3,3,10,-4,-7,5,3,-2,9,8,-1,2,-5,2,10,7,1,-3,-3,2,-8,-8,10,3,-7,1,-7,2,7,-3,5,10,-10,-5,-2,3,-5,-2],[-2,-6,-6,-8,9,7,5,1,-10,6,-6,2,-9,9,-9,-10,-3,-1,5,-2,-1,-10,-8,8,4,9,6,-9,8,2,-6,-10,1,10,1,10,-2,10,-3,-2,-2,-8,-2,-5,4,2,10,-3,-3,4,-8,8],[7,1,-6,-9,-4,9,6,10,1,-4,-4,-1,1,-3,-10,-10,-2,-6,-4,9,4,7,1,-1,-9,-3,-3,2,-10,4,9,-8,5,-9,1,-8,-5,-6,-2,9,4,-6,6,1,-6,-5,-9,6,-9,2,5,4],[6,-6,-6,4,7,-7,10,7,2,-1,-5,4,3,3,-7,6,8,6,7,6,-9,-4,-2,7,3,7,-6,-3,9,5,-4,1,-4,-7,-6,2,-5,-6,-7,3,2,9,10,-7,9,-5,6,6,3,-1,-8,4],[-9,-10,-5,8,2,-7,3,-1,9,-7,10,-7,9,-3,10,10,-10,-8,5,6,5,-10,-9,-1,7,-5,3,1,7,9,-1,-9,-1,-8,4,4,7,-10,-6,-7,10,9,4,-7,4,-10,-7,6,7,4,7,-3],[-3,3,3,-10,1,-8,9,-8,1,8,9,6,9,9,10,-2,-4,-2,-4,10,4,-10,3,-6,8,-4,9,4,2,5,5,4,-2,-6,1,-2,6,-9,-2,7,10,-10,1,-6,7,-4,-9,-2,5,7,-4,2],[-1,-10,8,6,9,7,-7,-3,-4,-9,-5,4,-8,7,-8,-5,2,3,-3,7,2,-3,7,-7,5,6,6,-2,-8,8,10,6,-1,1,7,-7,2,-2,-8,-1,-5,-2,4,-7,5,-10,-1,8,-5,-5,6,3],[-1,-8,2,-1,6,-7,-1,5,-10,-2,1,-2,-8,-9,8,-4,-7,-8,-4,7,4,2,-8,1,4,-10,3,1,8,6,2,-3,-2,7,1,6,7,1,7,-5,5,-5,-7,10,6,1,3,4,-4,1,-4,1],[7,7,3,-6,-7,-9,-7,2,-2,-1,7,-4,6,-6,-2,-2,-10,4,10,4,-1,4,1,-1,-8,-1,8,6,9,-4,1,-2,2,-4,6,-2,2,-4,3,-7,-10,6,2,-3,7,3,-3,9,-5,-10,3,-7],[-9,10,-10,2,3,-1,-3,-7,-2,-6,-7,10,10,-2,-3,9,-4,3,6,-6,-5,-4,-1,-7,-1,-8,2,2,-2,-6,-7,-7,6,7,-5,-10,9,-9,7,5,-2,8,-5,-5,-9,9,10,7,6,-9,-6,-1],[5,9,-5,1,9,1,-4,-8,9,-8,-7,-6,-10,2,-6,-5,3,4,-8,7,-6,1,5,10,-1,5,-5,1,-6,3,7,2,2,8,-10,-9,-3,6,-2,-2,-7,2,-7,-9,-5,-2,10,10,1,6,-5,8]], dtype = "int8")#candidate|2965|(11, 52)|const|int8
call_2964 = relay.TupleGetItem(func_2891_call(relay.reshape(const_2965.astype('int8'), [572,])), 2)
call_2966 = relay.TupleGetItem(func_2894_call(relay.reshape(const_2965.astype('int8'), [572,])), 2)
bop_2972 = relay.maximum(uop_2940.astype('uint64'), const_2947.astype('uint64')) # shape=(10, 3, 14)
bop_2975 = relay.maximum(uop_2942.astype('uint64'), const_2947.astype('uint64')) # shape=(10, 3, 14)
uop_2984 = relay.sigmoid(const_2965.astype('float32')) # shape=(11, 52)
func_1649_call = mod.get_global_var('func_1649')
func_1654_call = mutated_mod.get_global_var('func_1654')
var_2996 = relay.var("var_2996", dtype = "uint8", shape = (3120,))#candidate|2996|(3120,)|var|uint8
const_2997 = relay.const([-6.801681,1.390097,-6.057964,5.874422,5.132712,-1.404736,9.599116,-1.959966,-9.139934,6.824409,-3.223403,8.994748,-5.435913,-3.477166,-3.481481,-3.953120,2.033726,-5.271850,-7.421498,0.290303,-4.034325,-7.238952,6.364293,7.585088,1.872244,4.789917,-0.178942,3.089818,4.599833,-7.421028,2.510349,-0.089446,-5.619162,-9.798589,9.627787,-0.668501,-7.655767,4.694377,7.816893,2.957267,8.023706,-7.238157,2.132327,-7.309146,-4.750741,7.659985,-2.882364,-0.124052,-6.825489,7.789617,-7.115636,9.840451,-4.303233,-7.100760,8.745478,6.106870,9.967292,-1.955559,0.601706,9.666381,6.543996,3.349310,-0.289792,-9.406583,1.002919,-5.691578,9.706124,-9.506211,-1.827149,5.403843,-0.786236,1.866371,0.949469,-4.981418,-2.326051,-1.264251,-1.699763,5.507623,4.348251,3.128749,-1.113533,-4.660382,5.321159,3.833219,8.902646,5.452638,9.995299,5.926178,-5.447686,7.781775,0.481990,-5.191572,-2.102558,1.826616,5.973124,-6.584614,-8.885642,1.144566,1.727327,-3.881285,-0.531882,-8.208600,-1.975474,-0.707546,7.424416,6.594152,4.677356,6.968170,-3.599143,1.780243,6.442911,4.488237,-8.493264,-6.722714,6.708882,-0.403929,-0.016026,-6.385392,1.811142,-0.070298,-1.866619,6.891739,8.165748,1.214330,2.641788,-6.684345,-9.777949,3.726929,-7.447099,-8.055829,-9.215049,1.388761,5.314579,8.817589,-3.181943,-5.492922,2.482249,-9.273728,-1.891038,-6.788788,-0.027309,-6.673697,-6.434149,2.458441,0.900348,2.401862,8.040226,0.019207,-3.296412,3.623381,-3.248537,3.529461,8.128679,-1.646892,-6.335865,-1.147910,0.884990,0.904815,-9.661339,8.403456,2.093304,3.845228,2.005088,0.674931,5.192622,5.342370,-6.110692,4.575778,-4.613618,9.843414,1.043125,-4.512063,1.827880,-4.293329,-8.783101,8.768281,-8.196741,-2.483374,2.677431,4.862649,-8.428234,-4.583400,-5.427340,4.841240,-1.848394,3.839536,-6.030628,-3.557433,1.619931,5.631582,-2.967244,8.717982,5.452914,8.666814,-5.137818,6.479716,4.496770,4.016194,7.841662,-6.082846,-6.388987,2.433647,0.471763,-4.224565,0.642523,2.592512,-0.936551,-5.268268,-8.823297,0.459280,0.617770,-1.841907,-8.492287,-9.403079,-8.089301,5.045266,-8.374947,0.213305,2.329283,-0.467888,2.386249,-3.355365,5.817605,8.099860,-4.530540,-4.733015,1.699380,-4.568639,-4.975345,7.067647,-1.832857,3.458724,-4.824059,-3.434252,-4.539665,-7.604640,-6.895295,-6.716655,3.777073,-7.496049,-2.711876,3.767287,2.523465,8.369997,-6.325126,-7.669822,-1.171929,6.635483,-5.116990,-6.033748,8.891912,-0.415519,8.596805,1.683131,-3.634249,4.901108,-6.400031,-7.693457,-4.396958,4.109895,-7.099468,1.174588,-2.399137,8.458927,1.639910,5.971803,-8.499589,-2.154669,-5.019491,9.283734,8.679385,8.281641,2.125608,6.171786,-4.181825,4.837982,-2.710012,2.000444,2.511203,9.346741,-4.491611,3.061935,-8.869604,-0.868761,3.393954,5.419538,-1.711743,-2.740849,-4.968870,-9.866187,1.270107,-6.881908,-3.105137,-4.771866,-0.493947,-2.034614,-2.033637,-7.421727,-7.385957,-9.844232,-1.561193,-9.593590,-2.640201,-7.027362,8.366119,9.520786,-8.217653,-0.492108,6.696407,0.974142,3.172393,-7.898250,6.472657,-3.890208,-6.243346,-3.653617,0.617016,8.250940,7.061488,-5.158082,-3.154456,9.851419,4.544402,-3.534232,-3.681130,5.417721,1.178796,-2.516765,-2.306736,-6.231768,3.974112,9.231355,-5.175994,-1.026591,-9.404321,-5.331897,3.091384,-6.702849,9.611967,3.284377,-2.236622,6.323621,5.295653,-5.754440,6.738614,-1.580291,7.491951,0.651378,-6.478740,-3.562930,-1.514735,-7.795674,-4.730800,7.674158,6.853435,-4.066504,1.778273,0.255022,1.576822,-9.895065,9.225324,7.708354,-8.001921,-2.697999,-3.809923,4.015480,5.388283,-8.124893,-7.671838,5.365580,6.131939,4.003824,-6.217406,6.736614,3.466909,-8.161356,-6.755353,7.405930,-4.510821,3.317482,-2.102195,4.346399,-2.862121,-5.272367,7.100686,-6.409878,3.689954,2.172003,9.633782,9.228234,-6.742362,0.109587,4.753324,7.559482,-9.147211,-8.343531,-2.277722,-3.061561,-0.315299,5.986522,-3.772008,-7.610271,-2.175787,1.942842,-8.005842,-1.126268,-0.701532,1.923560,-9.563106,1.355430,9.595200,-1.256429,-6.484956,4.635573,8.125096,-9.919718,-4.897444,5.365340,9.587548,-6.362611,5.998915,-0.904529,-5.929709,2.892072,4.577472,8.445378,-9.299688,-0.578169,-1.744348,1.697585,-5.715655,-7.158483,-9.054767,4.750620,-9.203897,8.621763,-8.497629,-8.254342,9.175511,-4.600056,-2.560781,-8.258816,5.032541,7.976330,-9.836683,6.259365,6.253260,0.066569,1.211250,4.354541,7.366664,5.361311,-6.595564,-7.601003,1.678665,-1.233481,3.978154,-2.131439,0.829237,-9.165575,9.595064,3.228803,0.684747,-3.892427,3.051185,7.645102,7.701811,8.833975,-1.045841,3.904729,-4.831722,4.750849,-0.934010,-2.672481,-2.043443,4.469386,-4.617312,-5.374885,-7.861831,-0.706359,-0.718171,-8.652814,-7.070303,4.301892,5.946669,-9.697273,0.135458,7.807531,7.466206,3.472858,5.810285,3.793041,3.108012,5.986724,6.494139,-2.076660,2.086145,5.463383,-1.764867,-4.952510,4.962262,5.262713,7.369351,0.501235,-9.939330,-2.085861,8.758141,4.663184,7.323567,-4.246857,-0.079315,-3.106103,3.296889,3.273330,-4.242870,-1.224276,-0.284238,-2.589355,-1.371351,-8.962549,8.866850,-6.884871,5.355379,3.485346,8.927397,0.009502,-4.030649,4.628285,9.895543,7.307321,5.711535,6.656478,3.376235,4.121995,0.897022,-7.739628,-3.629393,-3.607294,-2.204127,-5.625348,8.394432,9.246392,8.894336,-8.337819,0.147598,-1.204071,8.228190,-6.856965,-5.942225,-5.645388,-1.923332,-8.664441,-6.024429,-1.572049,-2.010882,-8.583892,-8.430916,-7.168825,-1.061101,-2.837852,-4.319376,-6.397475,-0.621339,2.513033,-8.168492,0.408536,-6.072062,3.086025,-4.423491,-5.874079,-2.168363,-8.747980,-9.736086,-4.406056,8.154140,3.002685,-5.499736,5.013504,-8.884583,8.629866,4.055529,1.083364,-0.046757,-6.249100,-1.442766,8.422875,9.355331,7.492677,-5.395096,-4.765442,-9.505570,-3.757536,-7.079701,-4.513466,-4.855262,0.863802,-7.336364,6.206069,-2.151503,7.692852,-0.159534,4.771518,-1.799828,-9.834382,2.935761,2.325573,-7.410874,-4.179657,1.709075,7.561104,-5.867223,9.676359,-8.050519,9.340782,-6.990247,5.247550,5.047203,-0.032336,-4.597488,2.726057,-4.633316,9.832456,-4.039504,2.188297,-9.890479,5.485276,5.017280,6.318158,9.208906,-7.629025,2.612995,3.515428,5.511045,7.104084,-1.694853,0.562217,9.720149,6.353044,-6.329414,4.078413,5.295332,0.654282,-6.454180,-3.348814,2.057359,4.052158,9.067136,5.990365,1.882986,-6.404204,1.404153,-7.003881,-5.185181,-0.968364,-1.271565,-3.160366,-1.849103,-2.641933,-4.215368,2.609387,-9.335344,2.181033,8.093108,-6.667605,5.406634,-8.598814,-7.252890,4.289907,-2.751840,9.674543,3.378926,-0.847757,3.696562,-1.379916,-3.473302,8.558094,6.142636,-7.047817,5.487224,7.134472,1.499924,-9.612409,-0.461520,-7.392188,0.700788,1.653905,1.025740,7.905809,-3.782202,2.826722,8.872409,1.501202,8.633704,7.115453,-8.186719,0.909763,-3.114554,8.199733,3.016527,4.755176,9.413740,7.357111,-8.480964,6.297505,6.825233,3.070798,4.328440,4.990279,-1.440187,-5.399441,7.098558,-1.884600,8.656919,-0.937148,-2.932599,4.704090,-5.178574,-5.702653,6.613406,0.323486,-8.450565,4.221822,-2.976583,-1.019604,8.758779,2.036660,-3.305546,-3.268941,-1.856537,-1.984626,-9.585279,-3.159501,3.863778,-1.965732,4.916894,6.683139,-0.339429,6.441563,6.454361,-4.127532,-8.525984,8.125302,4.626676,-1.824706,-0.620169,-7.264620,0.916245,9.034860,-2.221850,6.746464,6.076735,8.435551,-8.869482,-4.406811,0.290746,-4.950899,6.841654,-6.221650,-5.997298,-1.782739,-9.189049,6.757669,5.615435,-0.878778,-9.806723,2.860829,-8.773284,-4.457005,-9.985527,-3.231398,7.269915,5.917486,-5.614866,3.892026,9.671914,2.862043,0.266624,6.841131,7.315917,-5.616357,8.846288,8.415305,-1.199542,-5.803652,6.483426,-6.364159,-5.989405,7.433367,-3.726844,9.983383,-3.066242,7.955888,0.918394,-9.525363,-7.267795,9.267216,6.348800,6.779757,-4.495476,-0.985716,-1.558655,-6.701092,-9.204069,4.002189,-6.413857,-4.624791,9.472413,-9.936072,-0.409293,1.951045,7.836796,0.827411,7.835705,3.551368,-1.252712,6.902355,-7.119626,2.841506,4.603916,4.486547,0.075201,-1.233317,5.265204,-4.666177,-2.303157,-0.751401,-6.544492,-0.337803,-6.164211,8.368152,0.093419,9.605007,-7.561690,-4.016706,3.045512,4.331881,-1.111907,3.147798,6.262521,2.246728,8.155902,0.125308,1.679118,-2.422771,6.872352,0.091270,-6.033197,6.465630,4.432732,6.771507,9.092718,-2.413632,-4.347954,-1.243911,2.915449,2.104230,3.013408,-8.243577,-0.750101,3.424905,-7.455317,-8.511009,3.846163,1.914512,-9.344816,-1.033494,3.589142,2.325624,-0.456338,2.791756,0.443820,3.027242,-3.176219,-6.977793,-9.492827,-9.877488,-3.908975,2.660994,-6.538771,-5.896968,4.756773,4.946653,9.957963,0.990820,-4.912080,9.774582,2.419946,-1.735777,-3.386610,8.551377,-3.802642,2.155755,-7.234726,2.634696,9.734851,5.469172,-1.233929,-0.476278,4.907902,2.967063,-3.896458,-1.901717,7.647388,3.918767,0.591847,-5.659269,9.874463,-1.311824,4.760441,-0.916513,6.003573,0.689059,-2.452605,-8.032062,4.218429,3.894130,-2.743058,-8.684781,0.932283,-4.554974,-1.151611,-0.089638,-1.324400,9.847437,-1.091186,3.018523,-2.580030,3.467498,-7.564809,-3.166860,-7.815760,6.150905,9.795113,-0.896093,-9.231387,0.514004], dtype = "float32")#candidate|2997|(936,)|const|float32
call_2995 = relay.TupleGetItem(func_1649_call(relay.reshape(var_2996.astype('uint8'), [15, 16, 13]), relay.reshape(var_2996.astype('uint8'), [15, 16, 13]), relay.reshape(const_2997.astype('float32'), [8, 13, 9]), ), 4)
call_2998 = relay.TupleGetItem(func_1654_call(relay.reshape(var_2996.astype('uint8'), [15, 16, 13]), relay.reshape(var_2996.astype('uint8'), [15, 16, 13]), relay.reshape(const_2997.astype('float32'), [8, 13, 9]), ), 4)
output = relay.Tuple([call_2946,call_2964,bop_2972,uop_2984,call_2995,var_2996,const_2997,])
output2 = relay.Tuple([call_2948,call_2966,bop_2975,uop_2984,call_2998,var_2996,const_2997,])
func_3015 = relay.Function([var_2996,], output)
mod['func_3015'] = func_3015
mod = relay.transform.InferType()(mod)
mutated_mod['func_3015'] = func_3015
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3016 = relay.var("var_3016", dtype = "uint8", shape = (3120,))#candidate|3016|(3120,)|var|uint8
func_3015_call = mutated_mod.get_global_var('func_3015')
call_3017 = func_3015_call(var_3016)
output = call_3017
func_3018 = relay.Function([var_3016], output)
mutated_mod['func_3018'] = func_3018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2853_call = mod.get_global_var('func_2853')
func_2855_call = mutated_mod.get_global_var('func_2855')
call_3020 = func_2853_call()
call_3021 = func_2853_call()
output = relay.Tuple([call_3020,])
output2 = relay.Tuple([call_3021,])
func_3031 = relay.Function([], output)
mod['func_3031'] = func_3031
mod = relay.transform.InferType()(mod)
output = func_3031()
func_3032 = relay.Function([], output)
mutated_mod['func_3032'] = func_3032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_3097 = func_2681_call()
call_3098 = func_2681_call()
output = relay.Tuple([call_3097,])
output2 = relay.Tuple([call_3098,])
func_3099 = relay.Function([], output)
mod['func_3099'] = func_3099
mod = relay.transform.InferType()(mod)
mutated_mod['func_3099'] = func_3099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3099_call = mutated_mod.get_global_var('func_3099')
call_3100 = func_3099_call()
output = call_3100
func_3101 = relay.Function([], output)
mutated_mod['func_3101'] = func_3101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3099_call = mod.get_global_var('func_3099')
func_3101_call = mutated_mod.get_global_var('func_3101')
call_3139 = relay.TupleGetItem(func_3099_call(), 0)
call_3140 = relay.TupleGetItem(func_3101_call(), 0)
output = call_3139
output2 = call_3140
func_3162 = relay.Function([], output)
mod['func_3162'] = func_3162
mod = relay.transform.InferType()(mod)
mutated_mod['func_3162'] = func_3162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3162_call = mutated_mod.get_global_var('func_3162')
call_3163 = func_3162_call()
output = call_3163
func_3164 = relay.Function([], output)
mutated_mod['func_3164'] = func_3164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2932_call = mod.get_global_var('func_2932')
func_2933_call = mutated_mod.get_global_var('func_2933')
call_3165 = relay.TupleGetItem(func_2932_call(), 0)
call_3166 = relay.TupleGetItem(func_2933_call(), 0)
var_3168 = relay.var("var_3168", dtype = "uint16", shape = (10, 3, 14))#candidate|3168|(10, 3, 14)|var|uint16
bop_3169 = relay.logical_and(call_3165.astype('bool'), relay.reshape(var_3168.astype('bool'), relay.shape_of(call_3165))) # shape=(10, 3, 14)
bop_3172 = relay.logical_and(call_3166.astype('bool'), relay.reshape(var_3168.astype('bool'), relay.shape_of(call_3166))) # shape=(10, 3, 14)
bop_3178 = relay.bitwise_or(call_3165.astype('uint8'), relay.reshape(var_3168.astype('uint8'), relay.shape_of(call_3165))) # shape=(10, 3, 14)
bop_3181 = relay.bitwise_or(call_3166.astype('uint8'), relay.reshape(var_3168.astype('uint8'), relay.shape_of(call_3166))) # shape=(10, 3, 14)
const_3191 = relay.const([[[-6,-1,-3,7,-10,3,-6,-4,6,1,-10,-7,-4,-2],[3,-4,-7,3,9,-2,-4,-1,-1,-7,8,8,-10,9],[-1,-10,10,-3,-8,-5,-8,-5,1,3,2,-9,-7,-8]],[[-2,-10,9,7,-3,-4,-9,-9,5,7,2,8,-9,6],[-7,-2,5,-2,-3,2,9,10,-5,5,5,-8,4,-4],[-6,-9,-9,2,7,6,4,8,4,-3,9,10,2,2]],[[7,-8,-6,-4,2,-9,-1,-8,3,-8,6,-9,-9,-10],[9,6,-7,9,-3,-10,-8,-3,6,-1,9,-7,3,1],[-6,-5,-4,1,5,-7,-2,5,-6,8,-2,-2,-10,-8]],[[-4,7,2,5,2,7,5,-8,-3,-6,3,-2,10,-6],[10,5,4,5,1,4,-5,1,-7,6,5,-8,5,3],[-3,-8,-2,-8,-3,4,3,9,9,2,10,5,-10,-4]],[[-4,-2,6,9,-1,4,-9,9,-6,-4,8,-10,-3,-6],[9,-10,6,9,10,-2,4,6,-6,-9,-5,7,8,4],[4,6,9,-8,6,9,-5,8,6,-5,2,5,9,-1]],[[-1,8,-6,-9,-10,3,4,3,-2,-1,6,-3,1,6],[-1,-7,-3,-8,-9,5,3,5,-10,9,9,2,-5,6],[4,6,-10,-8,7,-3,2,-6,-5,-6,-9,-9,-4,-6]],[[8,7,-5,-9,-7,1,2,10,3,1,-7,7,2,4],[6,7,5,6,-8,-8,-2,8,-4,-8,-2,-9,7,-5],[-1,-5,3,1,-5,-8,3,-7,-5,-9,-3,6,-7,6]],[[-10,-3,4,-7,1,4,4,10,-10,-2,-1,-3,-9,2],[5,-2,-9,-5,-2,-9,-10,-10,7,-4,6,-1,7,3],[-5,2,3,9,8,4,-8,-4,5,5,-3,-6,-4,-9]],[[-3,9,-7,1,6,1,-4,5,-7,-10,-4,-4,-1,7],[9,8,-10,1,-7,-7,-2,6,-5,-6,1,-7,-1,1],[3,-7,6,6,2,3,-10,2,-1,8,9,-8,-1,5]],[[-6,-4,-4,3,6,-6,-7,-8,1,10,8,8,3,-10],[-1,-6,9,7,-1,-7,-8,-5,-4,-5,-5,-9,-3,2],[6,-2,-5,5,-6,-1,-1,-6,-3,-5,6,-4,-6,-5]]], dtype = "uint8")#candidate|3191|(10, 3, 14)|const|uint8
bop_3192 = relay.bitwise_and(bop_3178.astype('uint16'), relay.reshape(const_3191.astype('uint16'), relay.shape_of(bop_3178))) # shape=(10, 3, 14)
bop_3195 = relay.bitwise_and(bop_3181.astype('uint16'), relay.reshape(const_3191.astype('uint16'), relay.shape_of(bop_3181))) # shape=(10, 3, 14)
func_3162_call = mod.get_global_var('func_3162')
func_3164_call = mutated_mod.get_global_var('func_3164')
call_3199 = func_3162_call()
call_3200 = func_3162_call()
func_2853_call = mod.get_global_var('func_2853')
func_2855_call = mutated_mod.get_global_var('func_2855')
call_3212 = func_2853_call()
call_3213 = func_2853_call()
var_3229 = relay.var("var_3229", dtype = "uint16", shape = (10, 3, 14))#candidate|3229|(10, 3, 14)|var|uint16
bop_3230 = relay.greater_equal(bop_3192.astype('bool'), relay.reshape(var_3229.astype('bool'), relay.shape_of(bop_3192))) # shape=(10, 3, 14)
bop_3233 = relay.greater_equal(bop_3195.astype('bool'), relay.reshape(var_3229.astype('bool'), relay.shape_of(bop_3195))) # shape=(10, 3, 14)
output = relay.Tuple([bop_3169,call_3199,call_3212,bop_3230,])
output2 = relay.Tuple([bop_3172,call_3200,call_3213,bop_3233,])
func_3235 = relay.Function([var_3168,var_3229,], output)
mod['func_3235'] = func_3235
mod = relay.transform.InferType()(mod)
mutated_mod['func_3235'] = func_3235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3235_call = mutated_mod.get_global_var('func_3235')
var_3237 = relay.var("var_3237", dtype = "uint16", shape = (10, 3, 14))#candidate|3237|(10, 3, 14)|var|uint16
var_3238 = relay.var("var_3238", dtype = "uint16", shape = (10, 3, 14))#candidate|3238|(10, 3, 14)|var|uint16
call_3236 = func_3235_call(var_3237,var_3238,)
output = call_3236
func_3239 = relay.Function([var_3237,var_3238,], output)
mutated_mod['func_3239'] = func_3239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3162_call = mod.get_global_var('func_3162')
func_3164_call = mutated_mod.get_global_var('func_3164')
call_3280 = func_3162_call()
call_3281 = func_3162_call()
uop_3296 = relay.atan(call_3280.astype('float64')) # shape=(10, 3, 14)
uop_3298 = relay.atan(call_3281.astype('float64')) # shape=(10, 3, 14)
uop_3303 = relay.acosh(call_3280.astype('float64')) # shape=(10, 3, 14)
uop_3305 = relay.acosh(call_3281.astype('float64')) # shape=(10, 3, 14)
bop_3306 = relay.left_shift(uop_3296.astype('uint16'), relay.reshape(uop_3303.astype('uint16'), relay.shape_of(uop_3296))) # shape=(10, 3, 14)
bop_3309 = relay.left_shift(uop_3298.astype('uint16'), relay.reshape(uop_3305.astype('uint16'), relay.shape_of(uop_3298))) # shape=(10, 3, 14)
uop_3313 = relay.cos(call_3280.astype('float32')) # shape=(10, 3, 14)
uop_3315 = relay.cos(call_3281.astype('float32')) # shape=(10, 3, 14)
output = relay.Tuple([bop_3306,uop_3313,])
output2 = relay.Tuple([bop_3309,uop_3315,])
func_3319 = relay.Function([], output)
mod['func_3319'] = func_3319
mod = relay.transform.InferType()(mod)
mutated_mod['func_3319'] = func_3319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3319_call = mutated_mod.get_global_var('func_3319')
call_3320 = func_3319_call()
output = call_3320
func_3321 = relay.Function([], output)
mutated_mod['func_3321'] = func_3321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_3381 = func_2681_call()
call_3382 = func_2681_call()
output = call_3381
output2 = call_3382
func_3392 = relay.Function([], output)
mod['func_3392'] = func_3392
mod = relay.transform.InferType()(mod)
output = func_3392()
func_3393 = relay.Function([], output)
mutated_mod['func_3393'] = func_3393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_3398 = func_2681_call()
call_3399 = func_2681_call()
output = relay.Tuple([call_3398,])
output2 = relay.Tuple([call_3399,])
func_3410 = relay.Function([], output)
mod['func_3410'] = func_3410
mod = relay.transform.InferType()(mod)
mutated_mod['func_3410'] = func_3410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3410_call = mutated_mod.get_global_var('func_3410')
call_3411 = func_3410_call()
output = call_3411
func_3412 = relay.Function([], output)
mutated_mod['func_3412'] = func_3412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_3421 = func_2681_call()
call_3422 = func_2681_call()
uop_3441 = relay.tan(call_3421.astype('float32')) # shape=(10, 3, 14)
uop_3443 = relay.tan(call_3422.astype('float32')) # shape=(10, 3, 14)
func_3015_call = mod.get_global_var('func_3015')
func_3018_call = mutated_mod.get_global_var('func_3018')
var_3453 = relay.var("var_3453", dtype = "uint8", shape = (3120,))#candidate|3453|(3120,)|var|uint8
call_3452 = relay.TupleGetItem(func_3015_call(relay.reshape(var_3453.astype('uint8'), [3120,])), 1)
call_3454 = relay.TupleGetItem(func_3018_call(relay.reshape(var_3453.astype('uint8'), [3120,])), 1)
func_3235_call = mod.get_global_var('func_3235')
func_3239_call = mutated_mod.get_global_var('func_3239')
call_3456 = relay.TupleGetItem(func_3235_call(relay.reshape(uop_3441.astype('uint16'), [10, 3, 14]), relay.reshape(uop_3441.astype('uint16'), [10, 3, 14]), ), 0)
call_3457 = relay.TupleGetItem(func_3239_call(relay.reshape(uop_3441.astype('uint16'), [10, 3, 14]), relay.reshape(uop_3441.astype('uint16'), [10, 3, 14]), ), 0)
bop_3472 = relay.right_shift(uop_3441.astype('uint64'), relay.reshape(call_3421.astype('uint64'), relay.shape_of(uop_3441))) # shape=(10, 3, 14)
bop_3475 = relay.right_shift(uop_3443.astype('uint64'), relay.reshape(call_3422.astype('uint64'), relay.shape_of(uop_3443))) # shape=(10, 3, 14)
output = relay.Tuple([call_3452,var_3453,call_3456,bop_3472,])
output2 = relay.Tuple([call_3454,var_3453,call_3457,bop_3475,])
func_3479 = relay.Function([var_3453,], output)
mod['func_3479'] = func_3479
mod = relay.transform.InferType()(mod)
mutated_mod['func_3479'] = func_3479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3480 = relay.var("var_3480", dtype = "uint8", shape = (3120,))#candidate|3480|(3120,)|var|uint8
func_3479_call = mutated_mod.get_global_var('func_3479')
call_3481 = func_3479_call(var_3480)
output = call_3481
func_3482 = relay.Function([var_3480], output)
mutated_mod['func_3482'] = func_3482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3392_call = mod.get_global_var('func_3392')
func_3393_call = mutated_mod.get_global_var('func_3393')
call_3523 = func_3392_call()
call_3524 = func_3392_call()
func_3031_call = mod.get_global_var('func_3031')
func_3032_call = mutated_mod.get_global_var('func_3032')
call_3530 = relay.TupleGetItem(func_3031_call(), 0)
call_3531 = relay.TupleGetItem(func_3032_call(), 0)
func_3099_call = mod.get_global_var('func_3099')
func_3101_call = mutated_mod.get_global_var('func_3101')
call_3541 = relay.TupleGetItem(func_3099_call(), 0)
call_3542 = relay.TupleGetItem(func_3101_call(), 0)
func_811_call = mod.get_global_var('func_811')
func_816_call = mutated_mod.get_global_var('func_816')
const_3558 = relay.const([4.791148,6.006496,1.281946,9.291517,-3.281020,5.441883,0.080331,-7.458812,-8.830412,-6.424870,1.528229,-2.115653,-2.191322,6.954662,-3.352743,1.838918,2.800014,-5.629091,-1.054948,8.906656,9.297157,-0.689737,1.370824,-1.361334,6.810152,2.561576,9.172529,-2.809586,-5.772155,-7.798067,5.449814,-3.668912,-5.995239,9.699422,-2.124625,2.688823,-2.528775,-5.387520,6.941118,5.179332,7.880649,6.022652,-2.456994,-9.916499,8.074771,-8.080503,-0.267198,8.498043,6.737329,5.889880,3.154266,-6.976708,6.520588,-0.882249,8.183254,9.986699,-9.439890,-9.230671,-9.110095,3.503042,1.329480,-5.900736,-8.635040,-3.649000,0.013546,2.390013,-1.102917,-2.409820,-2.292101,-8.774576,-1.104505,-6.981119], dtype = "float64")#candidate|3558|(72,)|const|float64
const_3559 = relay.const([-9.407402,-7.845383,-4.500968,4.512661,8.763411,-1.219890,8.065114,-3.277556,-3.326935,-8.262729,-7.906626,-2.076999,8.370764,9.734270,6.363916,5.170165,7.300814,1.237960,-4.007905,-8.317085,1.470002,-7.168469,-9.621739,-9.595623,0.259382,8.567623,5.563721,-6.265856,6.204624,1.677582,-3.364944,-9.373181,2.310226,8.703751,-2.065951,1.529603,3.493679,5.763821,-3.160008,-3.465432,-0.526530,7.623156,-9.649036,8.398280,-2.210275,-7.171163,7.517535,-1.468115,-2.888737,8.468878,-4.272405,-0.042943,-4.216873,1.887131,7.452091,8.127980,5.873635,8.771151,-0.472579,6.305725,-5.940153,-8.561164,8.779755,-5.282520,-3.390975,-8.664903,-4.191778,-8.819812,-2.805291,6.955140,-8.965470,-4.051533,5.752143,0.893117,-6.252519,-1.578399,-4.374508,-3.101863,-8.531374,-3.204356,-1.283362,6.213084,1.765983,-0.104754,0.967419,-6.632590,-7.773301,8.990653,-1.001108,5.134289,-2.372035,6.960295,-2.925790,-1.001514,-6.772172,-2.487671,1.088974,6.578206,5.468373,9.261285,9.989558,-1.756497,-2.510134,-8.799305,-1.772829,0.541491,0.430242,-8.316830,-1.361922,-0.172045,4.396870,-4.856855,-9.620439,0.910267,7.811371,-1.093970,-8.869481,-2.874254,9.386930,-2.785739,-7.127204,-4.061291,-5.040987,-7.186829,3.250289,-8.581333,8.624457,3.141621,-1.558172,2.004954,3.216950,8.532947,8.069042,-8.856299,-3.084138,-0.368850,-9.772114,-6.546337,9.844610,-6.694129,-6.854806,4.660979,8.296511,5.080437,-9.915259,9.550594,8.545653,2.610498,-5.111249,8.353971,-4.127021,1.781980,-2.841143,-8.556069,-5.907948,-6.450309,6.511930,-8.432269,-2.993583,-8.331574,1.270176,2.518807,-9.939623,4.231368,-2.480498,1.271634,-6.703669,-8.856725,6.873470,5.636056,9.215590,-3.281787,2.643756,7.852763,-6.168551,-8.045221,0.475097,-2.461302,8.018370,-1.642865,-2.131111,-0.262737,-6.704734,2.003473,1.766547,-3.207466,-7.431772,2.519923,7.730374,-6.259009,4.057642,3.605399,-4.250343,-7.057011,8.877677,3.442085,4.995892,1.009237,-0.776586,8.047323,9.525286,-8.040075,-4.145180,3.739245,-3.020635,1.073432,7.642578,-8.516594,0.619106,2.363365,8.031002,-0.011646,-4.967397,6.481814,4.250386,9.254827,-3.964952,-3.444069,6.054555,-5.099581,9.479784,9.586827,5.804906,-1.174526,7.958032,6.069384,9.010144,5.601176,3.827756,-5.318639,1.934485,6.080246,-3.955430,-2.504072,-7.042181,4.262441,-9.416273,-5.210002,6.628624,-1.136834,-8.722124,7.514302,-7.113675,3.496445,6.486152,-6.348583,4.044869,-7.761743,5.044179,-1.969411,-3.321413,-5.451159,-4.212937,-8.547739,8.236955,-8.442026,-4.009079,7.005794,-0.500772,1.541671,4.252924,-7.022247,4.963626,-9.691092,9.734271,-1.761800,-2.295715,3.733875,6.708821,-1.377692,-0.043289,-0.017718,5.556441,8.713727,0.609064,4.891283,-3.213027,9.948074,2.386215,6.637946,-6.535437,-8.060941,-1.664245,-5.264099,8.244643,-3.942885,0.499036,-9.830637,1.501851,5.333506,-9.167353,8.036119,-9.709959,9.630709,-8.199271,0.293887,-7.573800,5.837373,6.824795,4.889186,0.196771,-1.097548,-6.335417,2.031220,9.935701,-5.950242,4.002106,-8.580826,3.648663,5.880129,-4.918004,-7.002766,-3.552910,2.904119,7.812141,-5.533143,3.808427,-6.369849,-2.029788,8.425694,-2.101921,8.006327,0.792860,4.591231,8.524597,-1.443120,0.058954,9.527798,-5.070520,5.891829,8.580452,-8.350033,7.487218,-8.652552,-6.229685,7.728814,-2.271981,2.471260,-3.987290,-2.857321,0.534832,-0.978890,7.606465,4.607902,-3.554001,-1.569497,-0.824331,-8.168089,4.613136,7.991761,-0.426598,-7.934458,-6.184417,-3.438252,-8.649615,-6.587056,5.255783,8.513165,-9.529173,4.271050,4.185930,-6.850339,-6.632855,0.227042,-6.276158,-6.627977,1.487527,4.223287,-1.093760,5.369425,-0.216741,-5.279998,-4.525301,-0.399622,-3.800874,8.329874,9.529968,-3.134557,5.877145,1.029893,-0.178974,-6.014349,-4.995394,6.501634,-0.836776,-2.698483,6.895073,-8.974373,-8.873274,-8.754148,-5.902685,-9.510844,-2.077076,-2.621242,5.324096,6.705617,0.049651,5.734053,9.356395,-4.135250,5.105610,-4.982725,7.158997,-8.259061,0.943466,9.513862,3.948791,-8.236772,-8.509427,4.513903,-3.217855,2.792324,-5.149549,-5.590434,-2.781017,8.065418,8.751230,-5.732974,5.120040,-8.622027,8.677816,-7.432360,0.623335,-0.373006,9.333446,7.588355,-1.996604,9.276533,-2.543867,-0.730145,-0.228529,-4.464074,5.826259,0.725487,-6.681896,-2.525537,3.549266,-9.810517,8.724823,-9.389648,-4.233225,-8.564576,-1.820245,2.087219,0.005711,4.358553,-9.185165,4.165591,-3.088086,-5.743900,-9.054816,5.674999,3.938427,0.058907,-2.069045,-3.017026,3.119225,-0.379141,-1.856678,-4.946352,0.069695,-5.119883,-0.943655,-7.855548,-6.836630,3.314240,0.227241,-6.649327,-2.174405,7.608371,0.404871,2.268854,-4.587441,-8.597569,8.306327,6.468368,8.362080,-6.886167,6.018165,-4.510625,2.060078,4.368541,-3.308490,-7.947295,6.273230,-4.732430,3.469678,3.713461,3.267082,-3.451870,2.889470,2.637690,6.831790,-8.995314,-8.832646,-7.890637,-4.113383,-6.587249,4.959024,6.561976,-2.610157,8.912258,2.075307,-4.308949,9.834784,3.567044,-9.235329,6.327893,9.692153,-9.874205,-3.541124,0.586266,-0.726016,-8.712009,-0.612537,-6.220378,2.182339,-7.284751,3.236841,6.500312,-4.332321,2.287449,2.478487,-9.842411,-8.444717,3.598013,-8.322527,2.614631,-1.215789,-9.751866,8.452207,-7.868685,6.767923,7.863479,0.142102,3.048900,3.897832,-8.620025,8.588452,1.069863,2.826410,-0.555965,-7.830553,5.633083,0.064089,3.754879,-2.447604,8.503390,4.107689,-5.966472,7.496801,-5.434864,-6.631569,-4.970709,2.749272,4.716781,-0.941412,-6.210757,7.829876,7.740961,-0.075275,1.918357,-0.912093,-8.960489,6.109859,-1.467039,-9.956560,-8.690882,4.762682,-9.006689,-1.798202,-9.940727,4.519714,4.683884,-4.442207,-6.420027,-0.414395,0.045444,-1.783126,-8.043704,9.448264,5.326114,2.248254,-2.642133,-4.609260,1.655428,4.468013,7.474840,1.876635,8.717491,6.826554,-2.402625,-7.145973,3.745526,1.390946,-0.745209,-3.197700,-0.748041,8.806734,0.981431,3.137404,3.402221,-3.281310,2.778274,2.666654,8.851601,-2.739321,-4.319733,0.525543,-6.814844,9.489932,3.830029,-1.529363,9.845121,6.653905,6.257757,-4.553617,1.827360,5.826049,-9.431930,6.881161,7.957768,6.032189,-2.096176,7.235935,9.633157,-1.074983,7.728657,-0.239627,-3.766216,4.923617,-5.393350,-0.803067,-6.513706,-2.563308,8.260696,-8.646220,-9.254802,-7.473801,-0.891738,8.994298,5.194168,6.393618,-3.909774,6.451891,9.994111,-3.209962,-2.527772,8.749922,-7.091708,1.926194,4.322509,-8.713913,1.793291,9.815915,9.068641,8.338401,-9.745232,4.282766,-8.157962,9.939129,7.985593,3.519598,1.879662,-4.569353,4.035681,7.330516,9.261654,-9.390580,-7.670127,-5.741050,-8.927559,-2.865239,-1.537253,3.292244,5.214740,-5.902660,-6.218007,-8.764996,-9.409249,9.743181,3.818863,3.602582,-8.877098,5.503167,4.225296,-2.614980,-0.176897,-3.297116,-2.458818,6.471290,-8.302623,-2.756643,-3.849454,-9.413845,3.630410,-6.641176,-0.522148,2.287319,6.322803,-2.898062,5.796375,-3.774516,2.310307,-8.795365,-6.818446,4.275213,-5.107545,1.543081,1.301273,5.780412,2.504355,8.830290,6.901127,-2.834041,4.416898,3.828470,-1.029380,-2.810017,-5.058226,1.847221,5.150710,-4.120515,9.473339,-1.998792,2.225042,6.969707,5.586182,7.970791,-6.081940,3.533915,-5.000553,-5.296737,-9.224367,-0.296453,9.906888,1.893168,9.681688,-4.252322,3.334048,9.414647,9.931975,1.555359,4.273923,0.184305,-1.951440,7.471905,-4.395173,2.806765,5.506985,7.203043,-9.238321,8.098042,-8.255128,-4.884826,-5.576206,0.273991,-3.224201,-7.191247,7.498054,0.120359,-0.504019,-7.955173,-0.999841,3.644593,1.983686,0.887377,3.171143,7.216167,-2.572426,4.843941,5.511618,-2.584784,6.369045,5.377021,3.702853,-9.376623,-6.883889,-6.073662,5.955324,-3.102875,-3.163027,-2.132851,-5.986557,-5.179944,3.543487,3.359444,-3.191621,-5.679978,-2.568372,-9.215119,7.466346,2.338310,7.029052,-8.405108,3.616253,1.139602,-2.599628,0.156351,-3.861920,-6.785253,2.224300,-7.989753,5.748112,2.303448,8.336109,0.018097,-2.391155,-0.417271,-5.962268,-8.044798,7.947529,-3.209900,6.861437,-6.183748,2.823480,3.458727,-0.047198,-4.568110,2.332319,3.776822,3.874550,8.660928,1.620490,4.628435,-0.543273,0.966062,0.919314,-0.831763,7.008993,-3.231089,6.736103,5.823535,-9.630216,9.185506,7.639217,-4.323181,-3.690903,-0.158773,9.194057,8.409689,-0.880391,9.197486,-9.556722,-5.319035,-5.343192,-7.929431,7.370532,2.325488,5.902408,5.755809,2.173516,4.565968,1.420659,4.658657,1.113086,-1.445592,9.954752,-9.744016,3.310524,4.450888,6.980353,9.057824,0.658739,-6.068452,-3.915405,9.239506,2.117336,1.648973,-4.965264,0.320133,8.459601,9.092100,0.052420,4.624398,8.067456,-1.388455,-4.431152,1.403042,-8.324792,3.827032,4.993486,-3.749546,9.893695,8.818293,-6.772581,-3.628537,-7.767417,-6.192374,4.526190,2.215313,-9.121546,6.244228,5.530290,-8.589616,9.065497,-4.300878,-8.797824,4.196317,-4.137161,-6.309904,-3.415658,4.654470,-4.706304,-9.915791,9.506781,-1.468532,-7.701865,-3.277159,-3.060318,0.236956,-9.759997,-4.325270,2.454354,1.600237,-9.662588,-3.187651,-7.098926,-2.034738,-8.284582,-5.350167,-4.918218,2.824344,-6.437154,-1.608804,5.352816,-6.452278,-4.443071,-1.348523,2.330700,7.922087,0.447854,-2.505072,8.583668,6.292790,5.210419], dtype = "float32")#candidate|3559|(936,)|const|float32
call_3557 = relay.TupleGetItem(func_811_call(relay.reshape(const_3558.astype('float64'), [4, 2, 9]), relay.reshape(const_3558.astype('float64'), [4, 2, 9]), relay.reshape(const_3559.astype('float32'), [8, 13, 9]), ), 5)
call_3560 = relay.TupleGetItem(func_816_call(relay.reshape(const_3558.astype('float64'), [4, 2, 9]), relay.reshape(const_3558.astype('float64'), [4, 2, 9]), relay.reshape(const_3559.astype('float32'), [8, 13, 9]), ), 5)
func_2891_call = mod.get_global_var('func_2891')
func_2894_call = mutated_mod.get_global_var('func_2894')
call_3593 = relay.TupleGetItem(func_2891_call(relay.reshape(call_3557.astype('int8'), [572,])), 2)
call_3594 = relay.TupleGetItem(func_2894_call(relay.reshape(call_3557.astype('int8'), [572,])), 2)
func_1649_call = mod.get_global_var('func_1649')
func_1654_call = mutated_mod.get_global_var('func_1654')
var_3603 = relay.var("var_3603", dtype = "uint8", shape = (156, 20))#candidate|3603|(156, 20)|var|uint8
call_3602 = relay.TupleGetItem(func_1649_call(relay.reshape(var_3603.astype('uint8'), [15, 16, 13]), relay.reshape(var_3603.astype('uint8'), [15, 16, 13]), relay.reshape(const_3559.astype('float32'), [8, 13, 9]), ), 2)
call_3604 = relay.TupleGetItem(func_1654_call(relay.reshape(var_3603.astype('uint8'), [15, 16, 13]), relay.reshape(var_3603.astype('uint8'), [15, 16, 13]), relay.reshape(const_3559.astype('float32'), [8, 13, 9]), ), 2)
bop_3608 = relay.bitwise_xor(call_3530.astype('int16'), relay.reshape(call_3541.astype('int16'), relay.shape_of(call_3530))) # shape=(10, 3, 14)
bop_3611 = relay.bitwise_xor(call_3531.astype('int16'), relay.reshape(call_3542.astype('int16'), relay.shape_of(call_3531))) # shape=(10, 3, 14)
func_3479_call = mod.get_global_var('func_3479')
func_3482_call = mutated_mod.get_global_var('func_3482')
call_3618 = relay.TupleGetItem(func_3479_call(relay.reshape(var_3603.astype('uint8'), [3120,])), 2)
call_3619 = relay.TupleGetItem(func_3482_call(relay.reshape(var_3603.astype('uint8'), [3120,])), 2)
func_3392_call = mod.get_global_var('func_3392')
func_3393_call = mutated_mod.get_global_var('func_3393')
call_3649 = func_3392_call()
call_3650 = func_3392_call()
func_2803_call = mod.get_global_var('func_2803')
func_2807_call = mutated_mod.get_global_var('func_2807')
const_3654 = relay.const([[7,4,-1,3,-4,1,1,9,-8,8,1,5,2,-8,3,8,1,-8,-7,-2,-5,-6,-1,-2,3,-8,-7,2,2,8,7,-7,-10,-1,-7,-7,-9,7,-1,-8],[-10,-1,-9,8,-3,9,2,10,-3,10,-3,-2,-9,-2,-9,-5,7,8,6,-7,10,-9,-2,-6,-10,-4,-3,-7,5,-3,10,-5,-1,-10,7,-8,-5,-3,5,-1],[6,-10,-2,-3,6,1,-3,10,-9,3,-10,-5,7,2,-7,-9,-8,6,-7,7,3,9,6,10,-2,1,3,8,4,-3,3,-8,2,3,10,-5,9,9,-5,-1],[3,10,-8,5,8,-6,2,4,-7,5,6,-10,-6,-10,-9,8,3,-7,6,-6,2,5,-6,-9,-5,-8,-6,6,9,-3,-7,8,8,-4,7,-9,1,-2,3,8],[8,9,-6,6,-10,-4,9,-10,9,-3,3,-7,8,-1,-3,-10,-7,-6,5,10,10,-6,-10,-8,-2,7,-5,-2,-6,-7,-2,-1,-8,-3,9,-8,-9,-10,1,-8]], dtype = "int64")#candidate|3654|(5, 40)|const|int64
var_3655 = relay.var("var_3655", dtype = "float32", shape = (154, 6))#candidate|3655|(154, 6)|var|float32
call_3653 = relay.TupleGetItem(func_2803_call(relay.reshape(const_3654.astype('int64'), [200,]), relay.reshape(var_3655.astype('float32'), [924,]), ), 2)
call_3656 = relay.TupleGetItem(func_2807_call(relay.reshape(const_3654.astype('int64'), [200,]), relay.reshape(var_3655.astype('float32'), [924,]), ), 2)
bop_3665 = relay.power(call_3649.astype('float32'), relay.reshape(call_3523.astype('float32'), relay.shape_of(call_3649))) # shape=(10, 3, 14)
bop_3668 = relay.power(call_3650.astype('float32'), relay.reshape(call_3524.astype('float32'), relay.shape_of(call_3650))) # shape=(10, 3, 14)
func_392_call = mod.get_global_var('func_392')
func_395_call = mutated_mod.get_global_var('func_395')
call_3679 = relay.TupleGetItem(func_392_call(relay.reshape(var_3655.astype('float32'), [12, 11, 7]), relay.reshape(var_3655.astype('float32'), [12, 11, 7]), ), 0)
call_3680 = relay.TupleGetItem(func_395_call(relay.reshape(var_3655.astype('float32'), [12, 11, 7]), relay.reshape(var_3655.astype('float32'), [12, 11, 7]), ), 0)
output = relay.Tuple([call_3557,const_3558,const_3559,call_3593,call_3602,var_3603,bop_3608,call_3618,call_3653,const_3654,var_3655,bop_3665,call_3679,])
output2 = relay.Tuple([call_3560,const_3558,const_3559,call_3594,call_3604,var_3603,bop_3611,call_3619,call_3656,const_3654,var_3655,bop_3668,call_3680,])
func_3694 = relay.Function([var_3603,var_3655,], output)
mod['func_3694'] = func_3694
mod = relay.transform.InferType()(mod)
var_3695 = relay.var("var_3695", dtype = "uint8", shape = (156, 20))#candidate|3695|(156, 20)|var|uint8
var_3696 = relay.var("var_3696", dtype = "float32", shape = (154, 6))#candidate|3696|(154, 6)|var|float32
output = func_3694(var_3695,var_3696,)
func_3697 = relay.Function([var_3695,var_3696,], output)
mutated_mod['func_3697'] = func_3697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3410_call = mod.get_global_var('func_3410')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_3716 = relay.TupleGetItem(func_3410_call(), 0)
call_3717 = relay.TupleGetItem(func_3412_call(), 0)
output = call_3716
output2 = call_3717
func_3729 = relay.Function([], output)
mod['func_3729'] = func_3729
mod = relay.transform.InferType()(mod)
output = func_3729()
func_3730 = relay.Function([], output)
mutated_mod['func_3730'] = func_3730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3729_call = mod.get_global_var('func_3729')
func_3730_call = mutated_mod.get_global_var('func_3730')
call_3756 = func_3729_call()
call_3757 = func_3729_call()
func_1649_call = mod.get_global_var('func_1649')
func_1654_call = mutated_mod.get_global_var('func_1654')
const_3764 = relay.const([5,7,-10,8,5,7,8,9,7,8,8,1,-10,10,10,-3,-3,-5,-7,4,-8,-3,-4,6,6,7,4,7,10,-1,-5,5,7,8,2,-6,-4,7,-3,-1,6,7,7,6,-1,8,-3,3,-3,-4,4,5,10,8,-6,-6,-9,4,7,3,-9,4,-4,-2,8,1,-7,-10,10,-10,-8,-1,-9,3,9,4,7,-9,-4,7,6,-4,6,-10,1,-5,8,6,-4,-3,-6,-10,4,-5,10,-10,4,9,-7,8,-9,-9,-10,-4,5,-9,6,-6,-9,-1,-5,-7,-7,8,-5,4,-9,3,-1,8,-6,-8,8,-5,7,8,-8,-2,1,-9,-6,2,-9,9,-2,7,-3,2,-9,10,4,-7,-5,7,8,-4,-10,-2,-1,-8,-5,3,-8,-1,4,2,-1,10,7,-4,3,1,-2,10,-3,8,-3,-10,-8,7,-4,9,9,3,-9,3,5,-5,9,2,-6,-2,3,-8,-2,-4,6,-6,-5,3,8,-3,-1,9,6,2,2,-8,5,-8,5,-5,-5,5,10,3,-3,-10,-7,-2,2,4,7,1,-10,-1,10,5,7,-7,-6,-6,7,3,6,-6,1,-2,-3,-2,-1,7,7,7,2,2,4,-8,3,-4,7,7,3,-6,-2,9,-1,3,10,1,-3,1,10,-8,-1,4,-6,7,10,-6,-2,-6,-3,1,10,-9,-7,-2,-2,-10,5,-2,-4,-2,2,9,-3,9,3,-3,-3,5,3,-9,-8,-7,-4,5,7,4,-5,5,7,6,-3,-4,1,10,-7,-8,-7,-9,3,-1,-1,-10,-10,-4,7,9,-1,10,-2,-8,9,-7,1,7,2,-4,5,-9,9,3,5,9,7,-2,10,-2,-3,5,-5,-8,2,-9,-6,-1,-4,-4,-8,-9,-2,6,8,-1,6,-5,-8,-9,-6,7,-9,-8,5,-1,5,-10,10,7,5,-9,3,6,-10,2,-3,8,7,4,10,-5,-7,9,4,-5,3,-1,-1,-8,4,-5,-8,1,-10,7,2,2,8,7,9,-10,8,-1,-10,10,-8,3,7,-9,-8,-7,-8,-10,-2,8,-10,6,-2,9,-7,-6,-3,10,2,6,-8,8,4,4,-6,-9,-1,-6,-3,6,3,4,-2,5,6,2,8,9,10,10,-6,-2,-6,-1,-3,-1,-9,-2,1,-5,-1,-8,8,1,-9,-4,1,-1,6,10,-8,-6,7,-10,-7,3,1,-9,9,7,-2,-2,-8,-2,6,4,2,-5,-9,-5,-9,4,-10,-8,-2,6,7,9,-4,2,10,7,7,10,6,-2,-4,6,-1,4,3,-9,1,-8,8,4,-7,9,3,-1,7,-8,2,-6,2,8,1,6,7,6,5,3,-2,-5,4,-6,1,-1,-9,6,8,-5,-3,-2,6,-4,-9,-2,-1,-6,4,3,5,8,2,5,10,-8,2,3,-7,8,6,-7,-8,-10,-4,-6,9,-2,8,1,-9,2,1,1,4,4,-9,7,-3,-10,3,5,-9,-5,6,6,-6,-9,4,5,-9,-8,-1,8,3,10,-3,8,-3,1,-8,9,5,-9,9,-7,-4,-9,-1,8,4,-9,-2,-10,-9,-6,-8,-9,4,2,-5,-2,-5,3,-9,-9,6,1,-5,4,-2,9,7,10,9,5,-10,-2,-7,8,-3,-8,-5,10,9,-3,6,8,-3,7,10,-5,-6,-3,9,8,10,-2,6,-6,6,6,3,-7,6,-10,5,-7,2,5,-5,5,10,2,-3,-1,-10,-3,4,-1,6,-7,9,-2,-5,-4,10,6,1,6,-8,3,5,-1,7,-1,5,2,1,-7,-2,9,-2,-2,4,-9,4,-10,-7,9,-5,7,-8,6,-4,8,-3,6,3,-10,-5,-1,10,-7,2,-3,8,-7,-8,8,3,5,-4,-1,10,-5,-2,-1,8,9,8,7,9,-2,6,-8,7,-6,4,-9,-1,-7,-3,-5,-10,10,-6,6,2,4,-8,-6,-6,8,-2,-4,3,5,-4,6,-5,-4,5,8,-7,-5,7,-2,4,2,-6,8,-10,7,3,9,-2,-1,-2,4,3,4,1,-4,-7,10,5,-5,2,10,-5,-5,2,4,7,3,5,2,5,-10,2,-8,-1,1,-4,1,10,6,2,-7,-8,-8,10,-9,-6,9,-3,5,1,7,7,-7,-4,2,-5,-2,1,-3,10,8,-5,3,4,-3,-4,-2,-8,1,-4,-7,-1,-1,9,-3,-8,-4,-6,2,-5,-8,-5,9,1,-7,-2,-5,3,3,-10,2,5,-2,5,4,-10,8,-3,1,6,3,2,8,2,9,10,-1,-1,10,10,5,-6,-3,9,-7,2,2,-5,-9,-4,2,-2,-10,7,-9,4,5,5,3,4,9,-9,9,-3,-3,-7,-2,-8,-1,2,2,-4,-10,-8,4,-2,-7,-6,-4,-3,6,2,10,-8,-4,1,-10,6,-3,-2,6,2,4,-10,-4,5,-6,8,6,-6,-8,-10,-1,8,-3,-1,-6,-4,8,9,8,4,1,-9,9,7,2,8,4,-5,8,-5,8,3,5,2,5,7,-9,3,2,7,-7,-5,-1,-9,-8,-3,6,-4,9,-4,3,10,-10,10,-3,5,-2,-5,3,-3,-8,7,6,5,-1,-2,10,6,7,1,-5,-1,7,3,10,8,4,-2,-1,8,5,6,-3,5,-2,-9,-3,7,8,9,-6,6,6,-2,4,-9,-9,-4,9,2,8,-10,4,2,-5,-10,9,3,-5,-10,-5,9,6,-8,-5,-6,-4,3,-4,-1,-7,2,-8,-9,1,3,-8,2,4,-9,-4,1,3,-7,-10,-8,9,10,6,-10,9,-5,-4,3,8,-8,-6,2,2,8,6,-8,9,-2,-9,4,-6,7,5,-9,-1,-7,5,-8,-7,-8,4,9,7,-8,6,4,-10,-5,8,-8,-10,-8,4,-1,-4,-7,-8,-4,10,9,6,1,4,-1,-9,-3,-3,5,9,-10,6,3,-4,8,1,-1,3,-2,-7,1,-1,-6,-9,4,6,3,3,-7,-5,10,-4,-2,2,-6,-5,4,5,-10,10,4,-10,-1,7,10,3,-7,-3,-8,2,-4,4,3,-10,4,9,-10,-7,1,-9,5,3,10,2,8,3,1,4,7,-10,-7,-10,-9,-8,-2,-3,10,10,9,10,-8,-3,-10,-4,10,7,3,6,8,-2,2,7,1,-6,3,-10,-8,-1,-8,5,-1,7,2,7,9,10,7,5,-9,8,6,-3,9,-5,1,6,2,7,9,6,3,9,-5,8,7,6,-4,-8,-4,-9,-2,-8,-8,-10,9,3,4,-4,8,3,-7,-9,-7,-3,9,-8,5,-5,1,10,-5,-3,-6,-8,-10,2,-1,10,7,10,3,6,2,-3,-1,4,-7,-5,-4,9,-5,1,3,3,-3,7,9,-8,-5,5,-3,1,5,-4,8,-3,8,6,-5,1,-2,-6,2,-5,4,-4,-10,-8,9,-4,-7,10,10,7,7,-3,-6,3,2,4,9,-2,1,5,-4,-8,5,6,-8,-1,1,-5,5,-5,-7,3,-7,6,-5,-1,-10,-9,9,-2,-10,-1,9,10,-7,8,-3,1,-6,-9,7,-1,9,2,9,4,-7,10,2,-7,-4,2,-8,9,-9,8,-6,-3,-10,2,10,-7,-10,2,-1,-10,8,4,4,-1,-10,1,7,-3,-2,6,-1,-9,-2,-1,-2,7,5,-5,5,-4,-4,-2,-10,7,10,-3,6,1,3,-2,5,2,-1,8,2,2,8,6,-1,-1,-6,-3,4,-2,-8,-1,-4,-2,9,-2,2,8,9,10,-9,-10,-3,9,7,-6,6,5,-10,6,8,2,-3,2,6,-10,2,10,-3,5,-2,4,-10,-7,-7,-2,2,-5,-6,-5,-8,7,-6,-5,8,10,3,-6,-4,-3,-10,8,-1,-5,9,-9,-6,6,3,-3,-5,9,-9,-1,1,-6,1,1,6,-8,7,-1,-4,-6,-2,8,-4,-5,3,7,-2,-3,4,4,1,4,-1,-2,4,2,9,-3,-6,-7,6,10,-7,-10,8,-3,-10,-6,4,6,6,-5,-9,-1,9,-3,-3,3,-10,3,9,-5,-4,9,-9,-7,-6,-1,1,9,1,2,-9,-6,-8,-4,-6,5,10,-10,-1,-5,7,2,-9,7,7,3,-4,6,9,-10,-1,-5,-1,1,1,-10,1,8,7,9,5,-1,-3,5,-6,-7,10,-9,8,-6,7,7,10,-9,9,10,-4,-6,-7,-8,-6,2,-6,10,5,3,1,-10,-3,9,-9,-9,9,9,-6,1,-2,9,-7,4,-4,4,6,8,4,-5,-6,5,10,3,3,-10,-10,4,10,9,-6,-3,6,-4,-9,-5,-3,-2,4,-1,-3,1,1,-1,7,9,3,-8,3,1,-2,9,-5,-8,-10,8,-1,-7,6,7,7,7,-6,-9,8,3,4,-7,4,-2,6,8,-8,-2,-2,-8,-5,-7,1,-1,7,10,7,2,5,-8,3,10,10,4,1,8,-6,-6,-2,5,-3,1,-4,-3,-7,2,6,9,-4,-5,6,2,10,-8,-6,-2,-2,1,7,5,-5,-4,-6,7,10,6,9,8,5,2,3,-2,-8,-10,-9,9,-9,6,-7,-7,7,3,-3,-5,-8,-4,2,7,9,3,10,1,-6,-7,10,-10,-1,-4,3,-5,-8,-4,-4,-8,-8,-2,-4,8,-10,1,-10,10,3,6,-5,8,9,-2,5,-8,3,-9,-3,-7,3,4,8,-3,-7,-8,9,6,10,-2,7,5,-8,-7,3,-3,-1,-10,-10,-1,-1,1,-2,9,-4,6,9,-1,10,-9,9,9,-8,8,-1,8,7,5,6,-3,5,2,-1,-2,-1,3,-2,10,3,-1,-9,10,8,-5,-9,5,-8,-7,-7,9,9,-8,8,2,-7,10,2,2,-5,-2,-7,-8,3,-3,4,10,6,6,-7,-7,-3,-2,7,5,-3,6,-6,-3,10,1,10,9,9,-9,-8,-3,-3,8,-1,2,3,-3,4,8,-4,10,-10,9,6,8,-8,7,-9,1,-1,5,-5,-5,-8,3,-3,7,3,3,-6,5,5,5,-10,-4,-3,7,7,7,4,-9,-4,-10,-2,6,5,4,-7,4,9,-8,-6,10,-6,1,6,7,-4,-7,-10,-6,6,9,-1,9,-10,10,-4,1,9,8,-2,7,1,-6,-7,-10,-2,-4,-1,-3,-4,6,7,-5,-1,-2,-9,-1,-3,5,-9,4,-3,8,-3,-2,-6,-4,8,-7,-4,2,-10,-8,-9,-4,6,-4,8,1,-1,-10,-3,-9,-4,8,7,-5,-2,-1,-4,3,-5,-10,-7,4,-8,-6,-9,-2,3,-2,9,-7,-8,3,-5,5,3,3,-8,1,-1,5,-4,-2,-8,-7,-2,9,3,4,-10,8,-4,-5,-7,-6,-3,-6,-9,-4,-3,-3,3,6,8,6,9,-1,-4,-5,3,7,6,3,-4,-2,5,-3,-9,-6,9,5,5,-2,4,-10,-1,-3,2,2,-2,-4,-10,-5,6,-6,-7,-4,8,-3,-5,9,8,5,-9,-6,1,-6,-7,-2,6,9,-2,6,-10,2,2,1,5,-1,-3,3,-9,7,-4,10,-10,3,-3,-1,10,8,5,3,5,4,1,4,-8,5,-1,-4,-5,4,-8,2,-10,-1,10,-7,-7,5,-8,-9,9,10,10,-4,1,-6,-4,-8,-9,-9,4,-5,7,-1,8,-1,6,10,3,3,-1,4,7,10,-2,6,5,9,3,6,1,-10,-1,3,2,10,6,1,-6,1,9,4,-1,7,2,-5,3,2,-6,9,-2,5,3,-1,-6,6,10,-3,-2,4,6,-1,-7,-4,-7,-4,4,-8,5,9,-10,9,7,-10,2,7,3,8,8,-4,-5,-7,-6,-9,2,2,-2,-1,-5,-8,-5,5,-2,10,5,6,-2,2,-7,1,-6,3,-6,-7,-5,7,1,-8,7,2,1,3,-2,-3,5,-10,7,-10,-10,-3,3,7,-6,-4,4,-6,-5,-8,5,6,5,2,1,-6,-9,8,-1,-6,1,-1,-8,-9,7,10,9,1,-3,-8,4,-7,-3,7,-1,2,-4,6,1,5,-3,9,10,-7,-2,9,-9,9,3,-7,-8,6,-3,4,-8,-1,5,-6,-9,-7,-10,-4,-5,10,-8,10,-7,10,1,-3,4,-1,-3,1,9,-2,6,-7,-1,-9,-3,5,-7,9,8,6,-7,10,-3,-1,-10,-1,-1,9,5,-10,-9,8,1,-2,1,-10,5,8,2,-10,6,-3,10,-6,-2,-5,3,-4,5,3,4,-4,-5,4,-6,2,-6,7,-6,2,1,-6,-5,9,8,3,7,-8,-2,10,9,-7,6,10,9,10,1,4,-8,-5,-5,6,-8,2,1,9,5,-2,2,-5,-5,-10,-10,-4,7,5,-8,4,9,7,10,-7,-1,-8,-2,3,7,-8,8,-7,1,-9,-5,4,-8,2,-4,3,-10,8,3,1,-5,-8,1,1,9,1,-2,-8,6,8,-10,7,3,4,-7,9,4,-8,-5,8,-7,-8,4,9,9,-3,-10,9,-8,-3,-7,-8,10,-7,4,-8,4,2,-3,9,-10,-1,3,-8,-4,-7,-3,-4,-2,9,8,-7,-5,-10,9,10,-4,-4,2,9,2,7,-2,10,3,9,7,4,4,10,-5,-7,-5,7,10,5,5,-9,4,10,1,9,-5,9,8,5,2,-4,2,4,1,-5,-1,3,6,-3,5,2,-6,1,10,7,9,-7,-7,4,10,4,4,7,1,6,3,-7,-8,-2,6,2,-5,8,-10,7,2,1,9,7,-9,7,10,2,-4,-8,-6,-8,9,-2,-2,1,10,-1,4,-10,-2,7,-1,-2,5,-7,-2,3,-5,-2,-4,1,9,-3,-2,7,10,-6,5,7,-9,1,1,3,-9,-1,2,-6,-3,-5,4,1,-6,-6,-6,-10,-9,-6,-7,4,-8,8,6,2,-3,-8,-10,10,5,-8,-8,6,1,8,3,-3,-7,-2,3,4,-4,10,1,-2,5,-7,-10,2,7,9,-10,-10,1,1,7,-1,-10,-6,2,-7,-10,2,7,9,-4,3,-1,2,-8,-10,-10,7,2,1,1,-3,-2,9,8,5,-10,-5,-3,5,-2,8,5,-4,-7,3,2,-9,10,8,-9,10,-1,-10,-4,8,9,-9,-9,3,7,6,-1,-6,4,-1,-6,10,-5,-4,5,-6,7,-1,6,4,10,-3,-4,4,-4,9,-5,5,-1,-1,-10,3,2,-4,9,-4,-6,2,9,-8,-2,-10,7,-8,-6,-7,10,4,5,2,3,-3,-6,-1,-2,7,7,2,5,-2,-1,-7,-8,-4,-8,7,4,-4,-6,5,-5,3,-2,-6,6,-9,-7,-9,9,2,-10,9,-10,6,8,-5,6,7,-4,4,-10,-7,9,-4,9,-6,-4,3,-7,-1,2,2,-3,-5,-9,-6,-2,-6,1,9,-7,-9,9,-6,-2,-5,-4,-10,5,5,-4,3,-6,-9,2,-8,-3,9,-8,-2,3,-5,-4,3,10,-3,8,10,-6,2,-7,4,-7,3,1,6,-3,-10,-5,6,10,-10,7,4,-1,9,7,7,8,9,-7,3,7,-7,-6,-8,4,9,-9,5,9,5,9,10,-4,-9,4,-1,5,3,-2,-2,-8,10,-3,-7,-10,10,6,9,9,-1,9,-3,-9,-10,9,1,-2,-5,7,9,4,-7,9,10,-3,2,4,-10,4,-6,-1,-10,-8,-10,-7,-2,-10,3,6,-9,8,-3,-7,-5,-3,3,6,9,-8,-8,-1,10,-1,1,10,-6,-1,9,4,-8,5,-2,-5,-6,1,-10,6,4,-2,-5,-6,1,2,5,5,4,5,10,7,10,10,2,9,3,2,-6,-1,-6,-8,-10,4,-5,-7,6,-1,-4,6,8,2,9,-9,2,3,-2,9,-3,5,-2,3,8,6,-8,8,10,-9,-5,5,8,-7,8,-6,1,-1,6,2,-1,-8,1,-6,7,1,4,1,-5,-6,-4,-5,2,9,3,1,-10,-2,-6,-5,4,5,3,1,4,-10,-8,5,-3,9,8,8,1,-10,-10,10,-10,-1,-10,-10,10,3,6,-1,2,3,-1,7,-4,-1,-1,-10,5,-5,-6,7,6,-5,8,9,5,10,-6,-10,-6,-7,-9,10,-8,8,2,1,7,-10,9,5,-3,10,1,-10,-10,-6,3,2,4,7,-7,-4,4,7,3,-9,-8,6,10,8,4,-8,1,10,4,-1,-6], dtype = "uint8")#candidate|3764|(3120,)|const|uint8
const_3765 = relay.const([-5.846101,3.161984,3.951413,-8.097402,-6.613860,-9.498533,-0.105881,8.375985,0.182168,-0.264165,7.314169,1.990233,2.837860,7.768364,-1.443704,-8.730798,0.820723,-4.583303,-8.782869,7.019162,7.313094,-5.353676,-2.467340,0.719382,6.153850,-1.348058,-6.825467,-7.566010,-4.524969,8.860425,-1.525982,3.141084,6.344241,2.159760,2.226596,-2.453516,-6.446830,-0.064123,6.767468,0.338334,6.628358,4.364647,6.725466,2.419641,0.748548,0.496603,-9.424922,0.357608,-4.156987,-0.403802,-6.537380,-5.499679,0.720181,5.531713,6.260751,9.047917,-2.082485,-9.055251,9.602357,-7.063239,-4.114268,-3.717346,-9.795282,1.345727,-4.959598,-1.380839,-8.696629,-0.475093,4.326374,-3.737906,-4.576901,2.362119,-9.375486,-6.723228,-8.635651,2.303540,-9.359467,0.410986,8.392610,5.924101,-2.529721,-8.274372,9.200888,1.684939,2.128793,6.560497,3.316089,-4.842681,-9.852448,8.735808,1.738182,-1.658959,4.553785,2.204828,-8.754965,-3.290628,-4.883433,9.070701,2.879801,3.515871,7.364082,-8.973183,5.130001,-4.353187,-3.418487,-0.982981,-9.394115,1.079733,9.836576,3.475495,-8.528841,-1.641665,-4.733225,-5.811914,-7.285331,-5.997103,-2.278824,5.434464,-5.946732,2.541437,2.644971,-3.471124,-4.035372,2.099974,-7.173917,3.543198,8.986762,-0.159952,-1.136414,6.133280,-7.846908,-3.704900,0.538216,-3.071143,0.122734,-6.407385,-0.906553,0.390987,-7.190559,-4.732155,9.224076,3.109025,3.578411,-0.208521,-7.390584,0.282939,-0.158116,4.007586,6.808545,7.887657,-7.802047,3.560854,-1.471245,9.291271,-9.832852,-5.926079,-6.961398,-8.500189,0.294928,9.397456,-6.333779,-8.446040,-7.620392,-6.551216,4.597334,-7.486169,9.286188,-1.445948,-0.125742,3.252100,3.368107,-1.959766,8.318921,-5.641416,-8.384762,7.613732,-9.899362,8.001793,1.908117,-2.660230,2.301304,-8.506549,-8.307283,-2.671843,9.754310,7.066687,8.694645,-2.934154,-3.499399,8.932347,-4.603903,-7.656804,-4.959391,7.339064,4.692485,3.087449,-2.759892,-4.714632,-2.374995,-9.856794,-9.215211,5.987993,7.591164,-9.915498,-3.677837,-9.215041,-4.261070,9.379585,-8.113868,4.473126,-7.843687,-3.394901,-3.255431,5.269593,-8.229303,-6.749802,-4.053378,-5.968801,9.614248,7.815180,9.270801,-5.356308,-3.864481,-9.275130,-2.664453,2.301371,-8.514625,-6.126002,-6.598032,-1.871308,5.867673,9.708738,-2.351348,6.627198,-6.563855,7.091029,7.166288,-3.311511,3.440023,-4.027211,-5.868899,-5.653884,-7.878497,0.179887,-0.051111,8.749498,7.260206,9.512636,-9.799959,3.083889,-7.488413,-2.703822,3.766806,5.321289,-2.875639,-3.581429,3.741307,1.496650,1.887914,-3.509255,-6.418194,6.012664,-3.058956,4.111953,-2.144191,-7.929621,2.009587,-5.584169,9.507050,4.772618,2.003147,-2.557432,-4.095062,-0.896547,-0.197533,-1.234133,-5.909359,-2.535716,-4.237311,-2.584994,0.854495,6.688992,2.879503,3.379378,-6.857976,-0.930138,-8.621421,-3.275607,5.358456,9.706732,-8.526786,-8.177966,8.721886,3.763553,8.415791,-5.887336,-2.001382,7.858630,4.098990,-8.261644,-8.570681,-0.921195,1.543882,0.840215,4.971675,4.148028,-3.399027,8.466342,-8.569383,-0.524065,-7.851916,-1.224558,-9.794997,-0.097825,-1.272673,8.028604,-8.305626,-9.168531,5.784152,-1.474793,-2.565666,-1.610080,0.327596,-1.147715,-2.462631,7.233278,-6.229874,-1.543219,-0.155076,-4.337021,1.447149,2.324436,8.186402,-6.677964,2.552596,-8.543819,-1.762450,6.459494,-6.029751,7.746970,-2.013104,4.201051,0.115809,0.641050,-2.418045,-4.977013,-0.118568,9.591484,7.388228,-9.878867,-6.624228,-8.883734,9.790070,2.281175,-8.877885,-4.348483,9.442495,5.908854,5.061315,-8.074736,-2.369957,-5.142766,-2.707887,7.324021,4.801299,1.998799,-1.266665,-5.151767,6.594623,1.639122,-0.417535,-2.031208,4.992415,-3.380972,-3.935108,-8.049985,-8.956564,7.062058,5.329455,-4.209112,-7.534573,-3.932174,-5.832311,-1.649714,-9.094171,3.845070,-0.962458,4.469537,5.436803,-9.456004,-0.663297,-6.566392,0.527585,-6.635395,-9.252435,1.060557,-2.758019,3.068050,-6.082765,-9.170970,1.524523,-0.222810,7.335925,1.825625,3.342321,-1.601419,5.961452,-7.812178,9.732867,2.549136,-1.711517,-4.012573,-2.607347,6.661458,-6.553067,-1.074115,7.337411,9.997470,-0.284500,1.300837,-8.216005,3.168334,-1.811345,3.935034,-4.140594,-5.096378,1.293470,3.875035,-1.129911,9.821791,-1.758030,6.725475,-8.491663,-5.718862,6.873644,-3.918753,-2.736491,3.648930,-9.946956,-5.357842,6.042327,4.962529,8.884805,8.104115,2.766730,-0.454621,-8.502176,7.295034,-6.806348,9.221773,4.837258,-8.736568,8.816280,-5.678042,-2.867776,3.540286,9.043031,-6.057874,0.567451,8.960368,-9.732228,0.188868,6.205626,9.777506,-2.861557,3.782704,6.148253,5.956051,-6.674106,-9.680452,-6.127680,-7.215436,-5.769732,2.488650,-1.325393,-2.157846,-7.406184,5.227126,-5.262359,-0.561079,4.565163,-2.046450,0.647754,-4.913971,2.431045,-2.265298,-8.479530,-3.272271,9.082683,-7.866373,-3.004497,6.778778,-0.304809,-9.387638,3.681526,-7.309433,-7.633088,4.442708,-1.102604,8.685886,-7.248641,-8.982546,3.980853,5.851912,-2.851505,-1.282484,-8.364167,3.721538,5.472624,1.296550,-2.801615,5.583990,-2.435297,-5.060423,-3.387753,1.786929,0.933820,1.477252,-2.479604,-1.367528,0.219506,1.371363,-7.336223,-8.480016,-9.646320,-4.839455,6.854409,9.781483,9.309940,2.717040,-3.699825,-1.378252,-7.498964,-8.210086,4.994190,7.854415,2.794912,-7.096281,7.719624,9.672164,6.188635,9.202186,-3.807411,-2.516569,-2.655874,4.454078,-4.162410,6.543931,-6.807939,2.533110,-1.147281,-7.173549,0.743157,2.613873,5.837727,-4.495866,-9.852428,-9.020996,8.369920,-8.129912,-4.687834,-8.883244,-0.535438,4.622338,2.043748,-2.555781,5.282837,2.512133,3.858964,3.088985,-0.556247,2.447076,1.824857,8.287666,0.897895,3.024152,8.355123,-0.335182,5.517228,-4.821870,5.399206,-7.894124,1.896297,8.882394,-1.945518,-4.120237,6.754024,8.895534,8.836312,0.395683,5.239798,-3.282268,-2.595226,-2.863777,-1.211867,-9.876600,1.840075,-7.782795,-3.219613,9.651293,-1.193350,9.955149,-1.853019,2.293493,4.347477,-2.117247,0.445485,-4.412446,1.183842,8.703394,0.300522,4.935646,-5.885621,-4.439217,-9.591296,5.745726,0.484159,-4.360488,4.774681,3.768250,-7.714814,8.725850,-7.000644,7.436835,-3.857691,9.548724,-8.498208,-8.141322,-1.905128,2.165332,4.563547,9.046744,-1.957955,-6.396544,3.980630,-5.952961,4.014824,3.983308,9.748449,2.032646,2.389048,-9.181187,-9.312571,-8.910631,8.991916,7.148260,-2.483406,6.090987,-5.343675,6.005587,4.348373,1.638803,5.314509,-8.910615,7.650533,1.997762,-7.761499,-9.272531,-9.136976,9.070528,-9.005286,-2.183097,5.494802,1.729171,9.905726,-6.225733,4.656477,7.375469,-6.025286,8.055787,-4.311861,9.570682,-6.137792,0.612080,-3.912926,-0.466616,6.807138,-9.611430,-5.683465,-6.253298,-1.505291,-3.765707,-0.160180,-9.951567,0.912091,-5.895817,-4.868819,-0.637751,1.316819,-0.637984,-9.815732,-7.498815,7.859227,0.253890,1.735981,-6.494029,-6.569402,5.865745,-1.889084,2.350232,7.590300,0.659810,8.428910,7.855016,9.305178,6.397273,-9.199624,8.265611,-2.633157,-1.973163,-9.428758,2.709853,7.943728,8.440626,-8.598471,-6.674431,-7.581110,-5.957562,8.632190,-5.390550,5.252534,6.103090,-7.501665,0.955901,3.422886,-0.375597,-5.445617,-9.645586,-7.671363,-4.399131,-0.253062,-6.409672,-5.882481,3.047722,-2.221224,0.702014,1.680726,-1.884139,6.220060,-5.015174,5.443086,9.911731,-7.143340,4.622568,5.897530,4.747741,-8.376014,4.117843,-1.205274,4.387033,-8.823003,-3.146689,4.115675,6.700323,9.041384,6.179247,-6.456880,-8.626000,-0.857396,2.675365,9.813527,5.201311,9.457136,3.486730,7.413205,-7.904000,9.588198,8.375364,1.828649,7.594058,-0.464327,7.004112,5.071830,2.734897,-2.550869,-2.641886,-8.599017,3.332560,-5.738627,4.392877,8.482784,0.872451,0.585915,3.478147,-4.265165,0.351057,1.118573,0.193011,-8.655967,-2.316806,-5.737184,4.449283,0.784417,-1.900655,1.741943,4.073622,7.101046,0.819499,-6.121900,-6.672037,0.305421,4.660890,-8.023695,-4.516647,-0.307717,3.618028,9.226310,7.011388,-7.695234,-9.005346,7.595905,-0.106873,-2.034066,2.014612,6.560188,3.131403,4.862335,1.069959,-9.115973,5.927603,5.317087,2.264692,8.410313,3.588313,-7.192504,9.575936,8.687404,-7.413107,0.372351,-1.602287,4.494440,9.676680,7.554244,9.584284,-1.201559,-1.806422,2.704785,-7.972227,-1.802265,-0.473424,2.847574,-4.475278,-2.848526,8.069114,8.590579,-2.433309,4.575090,0.646044,-9.295339,-6.834208,0.586000,-9.723113,-2.765239,6.509237,-5.652533,4.847340,3.170354,1.133843,0.534645,2.008357,-3.710910,5.488387,-9.121737,-2.102888,5.532172,9.040842,1.897883,-5.047418,7.057073,-6.675426,2.614999,9.162371,-5.510485,-5.754808,7.726476,-2.123639,8.853911,-2.014839,-3.951167,5.758309,5.435526,9.440472,-1.670436,6.065560,0.891386,-1.461498,7.650015,-4.133821,-6.557900,0.809150,-4.702764,9.456328,-3.811199,0.816874,4.387407,-6.350937,-5.798765,0.068155,4.447220,-4.279261,6.389670,-2.937511,-9.339962,-9.625031,8.684534,7.895325,4.878720,-0.029903,-6.763537,-9.993339,-2.600377,-4.024168,-7.486184,6.762337,-9.003287,9.841068,-1.912533,3.486890,-6.444787,9.074737,9.163075,1.953942,-5.456857,-0.303532,-0.874430,-4.332884,-1.371050,1.028469,-1.035704,-8.273261,-0.723504,-8.347328,2.257891,1.456270,0.785690,-7.764505], dtype = "float32")#candidate|3765|(936,)|const|float32
call_3763 = relay.TupleGetItem(func_1649_call(relay.reshape(const_3764.astype('uint8'), [15, 16, 13]), relay.reshape(const_3764.astype('uint8'), [15, 16, 13]), relay.reshape(const_3765.astype('float32'), [8, 13, 9]), ), 0)
call_3766 = relay.TupleGetItem(func_1654_call(relay.reshape(const_3764.astype('uint8'), [15, 16, 13]), relay.reshape(const_3764.astype('uint8'), [15, 16, 13]), relay.reshape(const_3765.astype('float32'), [8, 13, 9]), ), 0)
output = relay.Tuple([call_3756,call_3763,const_3764,const_3765,])
output2 = relay.Tuple([call_3757,call_3766,const_3764,const_3765,])
func_3769 = relay.Function([], output)
mod['func_3769'] = func_3769
mod = relay.transform.InferType()(mod)
mutated_mod['func_3769'] = func_3769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3769_call = mutated_mod.get_global_var('func_3769')
call_3770 = func_3769_call()
output = call_3770
func_3771 = relay.Function([], output)
mutated_mod['func_3771'] = func_3771
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3789 = relay.var("var_3789", dtype = "float64", shape = (4, 15, 5))#candidate|3789|(4, 15, 5)|var|float64
uop_3790 = relay.exp(var_3789.astype('float64')) # shape=(4, 15, 5)
output = relay.Tuple([uop_3790,])
output2 = relay.Tuple([uop_3790,])
func_3793 = relay.Function([var_3789,], output)
mod['func_3793'] = func_3793
mod = relay.transform.InferType()(mod)
mutated_mod['func_3793'] = func_3793
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3794 = relay.var("var_3794", dtype = "float64", shape = (4, 15, 5))#candidate|3794|(4, 15, 5)|var|float64
func_3793_call = mutated_mod.get_global_var('func_3793')
call_3795 = func_3793_call(var_3794)
output = call_3795
func_3796 = relay.Function([var_3794], output)
mutated_mod['func_3796'] = func_3796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3769_call = mod.get_global_var('func_3769')
func_3771_call = mutated_mod.get_global_var('func_3771')
call_3798 = relay.TupleGetItem(func_3769_call(), 3)
call_3799 = relay.TupleGetItem(func_3771_call(), 3)
output = relay.Tuple([call_3798,])
output2 = relay.Tuple([call_3799,])
func_3816 = relay.Function([], output)
mod['func_3816'] = func_3816
mod = relay.transform.InferType()(mod)
mutated_mod['func_3816'] = func_3816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3816_call = mutated_mod.get_global_var('func_3816')
call_3817 = func_3816_call()
output = call_3817
func_3818 = relay.Function([], output)
mutated_mod['func_3818'] = func_3818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3392_call = mod.get_global_var('func_3392')
func_3393_call = mutated_mod.get_global_var('func_3393')
call_3852 = func_3392_call()
call_3853 = func_3392_call()
output = relay.Tuple([call_3852,])
output2 = relay.Tuple([call_3853,])
func_3858 = relay.Function([], output)
mod['func_3858'] = func_3858
mod = relay.transform.InferType()(mod)
mutated_mod['func_3858'] = func_3858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3858_call = mutated_mod.get_global_var('func_3858')
call_3859 = func_3858_call()
output = call_3859
func_3860 = relay.Function([], output)
mutated_mod['func_3860'] = func_3860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3162_call = mod.get_global_var('func_3162')
func_3164_call = mutated_mod.get_global_var('func_3164')
call_4015 = func_3162_call()
call_4016 = func_3162_call()
func_929_call = mod.get_global_var('func_929')
func_932_call = mutated_mod.get_global_var('func_932')
var_4022 = relay.var("var_4022", dtype = "int8", shape = ())#candidate|4022|()|var|int8
call_4021 = relay.TupleGetItem(func_929_call(relay.reshape(var_4022.astype('int8'), [])), 1)
call_4023 = relay.TupleGetItem(func_932_call(relay.reshape(var_4022.astype('int8'), [])), 1)
bop_4027 = relay.greater(call_4015.astype('bool'), var_4022.astype('bool')) # shape=(10, 3, 14)
bop_4030 = relay.greater(call_4016.astype('bool'), var_4022.astype('bool')) # shape=(10, 3, 14)
func_3031_call = mod.get_global_var('func_3031')
func_3032_call = mutated_mod.get_global_var('func_3032')
call_4033 = relay.TupleGetItem(func_3031_call(), 0)
call_4034 = relay.TupleGetItem(func_3032_call(), 0)
uop_4042 = relay.asin(call_4033.astype('float64')) # shape=(10, 3, 14)
uop_4044 = relay.asin(call_4034.astype('float64')) # shape=(10, 3, 14)
output = relay.Tuple([call_4021,bop_4027,uop_4042,])
output2 = relay.Tuple([call_4023,bop_4030,uop_4044,])
func_4055 = relay.Function([var_4022,], output)
mod['func_4055'] = func_4055
mod = relay.transform.InferType()(mod)
var_4056 = relay.var("var_4056", dtype = "int8", shape = ())#candidate|4056|()|var|int8
output = func_4055(var_4056)
func_4057 = relay.Function([var_4056], output)
mutated_mod['func_4057'] = func_4057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3162_call = mod.get_global_var('func_3162')
func_3164_call = mutated_mod.get_global_var('func_3164')
call_4082 = func_3162_call()
call_4083 = func_3162_call()
output = call_4082
output2 = call_4083
func_4085 = relay.Function([], output)
mod['func_4085'] = func_4085
mod = relay.transform.InferType()(mod)
mutated_mod['func_4085'] = func_4085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4085_call = mutated_mod.get_global_var('func_4085')
call_4086 = func_4085_call()
output = call_4086
func_4087 = relay.Function([], output)
mutated_mod['func_4087'] = func_4087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4085_call = mod.get_global_var('func_4085')
func_4087_call = mutated_mod.get_global_var('func_4087')
call_4093 = func_4085_call()
call_4094 = func_4085_call()
output = relay.Tuple([call_4093,])
output2 = relay.Tuple([call_4094,])
func_4102 = relay.Function([], output)
mod['func_4102'] = func_4102
mod = relay.transform.InferType()(mod)
mutated_mod['func_4102'] = func_4102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4102_call = mutated_mod.get_global_var('func_4102')
call_4103 = func_4102_call()
output = call_4103
func_4104 = relay.Function([], output)
mutated_mod['func_4104'] = func_4104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4085_call = mod.get_global_var('func_4085')
func_4087_call = mutated_mod.get_global_var('func_4087')
call_4105 = func_4085_call()
call_4106 = func_4085_call()
output = relay.Tuple([call_4105,])
output2 = relay.Tuple([call_4106,])
func_4116 = relay.Function([], output)
mod['func_4116'] = func_4116
mod = relay.transform.InferType()(mod)
mutated_mod['func_4116'] = func_4116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4116_call = mutated_mod.get_global_var('func_4116')
call_4117 = func_4116_call()
output = call_4117
func_4118 = relay.Function([], output)
mutated_mod['func_4118'] = func_4118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3858_call = mod.get_global_var('func_3858')
func_3860_call = mutated_mod.get_global_var('func_3860')
call_4132 = relay.TupleGetItem(func_3858_call(), 0)
call_4133 = relay.TupleGetItem(func_3860_call(), 0)
func_2548_call = mod.get_global_var('func_2548')
func_2551_call = mutated_mod.get_global_var('func_2551')
const_4153 = relay.const([7.891781,7.612926,9.211594,6.932111,2.407351,4.577968,-0.660519,-8.030127,8.319797,5.373738,2.031976,-9.188489,-4.520669,4.963376,-7.492579,2.612059,-4.079219,3.383646,-8.509735,-0.680019,-5.304755,5.413931,-1.332055,-4.905741,-7.838429,3.659843,1.128288,8.972799,5.591367,-1.173030,7.056188,2.390876,-1.165840,2.819669,8.830497,-5.118204,6.351909,-8.032515,-8.784548,3.890362,1.724881,-0.166483,9.505354,-7.496814,-1.680028,-3.375985,7.266762,1.848934,-1.673131,-0.689601,-6.970562,-6.571144,-7.381406,9.742656,0.924491,-5.912791,-7.538716,-0.374417,-6.759247,-6.019639,9.241103,-8.689458,-6.005977,-8.077872,-4.157523,-4.123054,1.027085,-5.981153,7.782867,-7.738452,2.176577,4.875350,0.255684,1.151958,7.430978,-5.284267,-9.141230,3.049436,-1.875108,0.468871,-9.643314,-8.182327,-4.102738,-4.558281,-0.621219,2.262603,4.226984,8.347179,-5.118003,-0.892457,-9.533277,-9.856376,3.156652,8.939388,7.295559,-7.439988,-5.981547,0.848122,9.562080,6.076268,7.465569,6.723066,3.045816,0.754538,3.289902,7.253351,3.052144,-9.012700,5.004666,-7.667452,8.937670,2.186923,1.619665,-1.159213,-6.293532,7.409784,-2.325239,-3.627949,8.073558,5.858055,0.241984,3.029683,-2.004684,8.699156,9.005173,-6.447653,-9.216598,3.237309,6.983685,-1.349892,6.929332,3.183792,6.993464,8.520904,2.772630,4.363339,-0.542383,1.816584,0.472542,-3.207683,8.937531,5.159548,-4.204550,4.392470,-7.196654,1.426874,0.352112,-4.441867,-3.273498,-8.563242,-6.463571,-4.734061,-7.044934,-7.806598,-0.484185,-1.928321,8.169760,9.555859,-0.901176,4.137816,9.089856,-1.832217,1.547643,3.614310,1.146097,-9.701304,2.835083,-2.745789,-9.613624,9.231866,0.219837,-0.088760,4.432989,0.133993,9.741091,7.923084,2.521427,9.098266,-9.147483,6.646383,-5.635244,7.119849,-8.480831,3.649494,-2.822252,-6.328797,1.621814,3.201083,-7.058365,-4.680456,1.805564,-1.105533,-9.276640,-0.043392,-9.396570,-4.138563,7.188590,6.076381,2.574671,-4.946005,8.547803,9.024824,-9.422302,-1.757135,2.734128,-0.807820,-4.902984,-9.266632,-9.518482,8.507176,-1.228008,-3.490151,2.894523,8.864076,-3.888199,3.158255,-1.788931,-4.499832,2.507765,-1.201319,-7.402156,0.868178,3.414622,4.454612,-9.178138,0.980831,-5.656472,-7.663805,0.386156,-3.947439,-1.565848,9.268001,-6.717758,7.177884,-9.951508,1.260766,-0.746664,2.673445,-3.512562,9.739917,7.556000,5.376245,-4.615339,-4.459218,4.396690,-0.534737,-0.551278,3.430458,2.828316,-3.768456,-9.581705,-7.177732,-4.177054,-4.958732,-0.231971,-4.747019,-4.016207,0.779006,0.504210,-6.037638,-7.189119,-9.310955,9.810961,-9.690782,-1.662502,-7.438393,-4.400460,6.578022,9.399013,3.286438,-9.032118,3.870277,1.933270,9.605266,-8.152514,6.647204,-0.577449,7.437366,4.678307,3.237813,-0.755030,-8.600405,-4.774950,-2.925578,-8.612467,-6.140665,2.052206,4.852396,-4.528675,6.362331,3.576278,-6.615339,5.301466,2.500246,4.277096,-5.088372,-0.248259,-4.634160,2.528085,-0.842376,-9.399631,-6.781602,0.261288,-6.784976,-4.071943,-7.995841,-5.177430,-5.712589,2.323426,8.083283,-3.907863,-9.536900,-9.158952,0.427062,5.894828,3.039289,-4.299311,7.918274,-3.342897,-9.632814,-0.389370,-1.928151,1.843825,-4.482030,-1.144770,0.212587,0.872400,6.041805,-1.191245,9.053388,3.211315,5.430334,-4.129292,4.994060,-1.521796,-3.067352,-3.983749,2.588642,4.244278,-7.527015,5.255366,-8.434368,-3.875054,4.534704,-0.127473,-4.359456,4.190741,-6.602561,4.180455,-9.423628,5.205208,-1.146390,7.113775,3.493572,5.273710,-4.913047,0.384365,6.663581,6.799981,-3.040402,-4.513876,9.568622,-1.103408,5.581495,6.677005,9.025658,-7.393780,-9.481441,1.154280,-9.675281,-0.621776,-2.436120,2.209132,1.083470,-9.792025,9.863592,-3.353906,-5.851705,-7.756511,-2.015682,-9.111704,-3.113511,1.143269,-3.208796,-2.919418,9.321814,-6.847379,-2.879307,-1.088623,-4.829737,9.198335,4.807619,-5.261305,-7.995564,4.497719,-6.141794,-5.585243,2.562615,7.961137,-7.986574,-5.427487,-4.246890,8.791043,3.485725,-6.145917,-9.850999,0.390606,-2.080015,-6.208294,-3.913234,9.728931,0.923599,2.331100,-2.110076,-0.552744,-8.256474,-3.434836,4.986542,4.845690,6.618549,-1.781862,1.344184,7.548324,7.789659,-4.900455,-6.411313,-6.814486,5.545969,-4.995792,5.306344,-7.659215,2.916659,-8.013029,7.577831,6.362014,-7.620854,-7.888353,8.917804,3.563197,8.465686,-0.295179,2.065066,3.945147,-0.118372,-4.487114,6.559895,1.899066,-6.459033,8.478915,9.897172,-8.938215,7.759350,5.430563,2.328532,7.868224,-8.426002,-8.669788,0.840596,-0.773162,8.773884,0.863600,-6.578012,9.152012,-9.690732,-0.212487,-3.092326,7.079083,5.133427,-6.144438,4.080237,-6.277008,-5.714612,-8.950977,-4.767812,4.685347,6.560432,-2.543927,-4.932777,-9.527335,8.871401,-8.588979,-5.268847,5.814892,5.714143,-1.131780,4.552213,-1.445898,7.363403,0.972964,-9.699514,8.312197,4.564705,0.468809,7.722138,5.769922,-2.044996,-7.658395,8.922510,-5.337082,-6.573395,-0.936586,0.586609,6.430545,6.076178,2.967682,6.916287,0.533359,-7.898555,-6.589851,6.851841,-8.355438,-9.035349,-5.576267,-0.338682,-1.050905,0.789830,2.530849,9.555862,0.186320,4.957059,-8.430886,4.828087,-3.580088,-3.237668,9.538847,-4.867157,5.682256,8.288709,-6.562168,7.680135,-3.761736,4.450005,5.594930,-4.100271,7.190852,9.049894,-9.844326,-6.089043,7.782310,-6.032721,-6.872500,-4.239486,4.899716,7.951197,-5.418140,-9.929252,3.695965,-4.707912,-3.093730,6.210387,-4.587083,-9.108524,3.164871,6.915320,7.796395,4.599615,-9.938292,-1.666465,8.047987,-1.632895,-9.016755,-2.729743,-6.666816,-9.802674,0.463240,0.209315,0.897804,2.800967,-8.534234,6.090994,-4.338549,3.910194,-8.892425,-7.052159,6.926038,9.414155,3.709372,3.637463,-7.296601,-7.739791,4.949994,-6.596947,4.507786,2.291275,-5.479897,-8.524755,9.616182,-9.934152,8.858278,-6.551211,4.960509,-8.040619,3.028445,-2.617163,7.430159,-5.766153,-7.204058,8.643462,-1.419425,2.626233,7.082319,4.221415,8.401384,5.857418,-2.758235,4.693739,1.459328,-9.858407,8.300330,3.478199,8.318469,4.964886,-5.919359,-2.394217,2.769691,1.274539,3.085207,-1.288491,-8.437040,0.975156,4.344351,-3.987783,-9.207757,6.839880,-9.593025,-3.464626,-3.262903,1.398250,4.445460,9.878093,-2.726884,9.808306,7.833912,-2.437372,2.397481,-8.416014,5.718997,-3.634542,3.464725,0.493533,-2.498180,-0.210135,-8.179436,4.658487,1.810935,-1.728260,7.264587,2.558377,4.565960,4.101784,6.470701,0.885736,-6.288993,-3.105347,-4.598104,6.423628,3.222752,7.794471,-6.534743,7.473296,-2.384827,8.114853,-6.928928,-9.276405,-6.269636,-0.425097,-7.473505,-6.037850,3.753233,-4.094617,3.821871,-9.873352,2.416043,-3.656211,-6.604607,3.983008,2.666189,2.927361,2.700337,-6.519357,0.410692,7.967792,-8.376111,-3.795696,-9.712843,0.439805,3.271639,5.140844,-2.407929,-1.216689,0.600764,5.149416,-2.822469,-6.402697,-4.064058,3.054550,-7.773227,9.912215,1.812703,-6.883456,2.699922,1.586137,-6.842709,4.810170,-1.797231,2.772911,-3.880272,-9.709795,2.660852,-6.015667,7.123444,0.070113,7.571779,9.864401,0.252334,-3.010260,5.346738,1.747080,-5.082461,-4.381168,-6.839279,1.352251,-9.412494,6.896357,-9.675538,-1.537242,0.875271,4.980205,-7.187255,2.246123,8.775777,-4.457776,0.148899,-8.095684,4.624041,-7.456085,-7.169237,-6.597611,-2.787721,1.275551,1.943316,-9.881147,8.506985,7.062627,-7.417304,5.221125,1.848000,7.017068,4.483799,-4.962507,-3.177583,-7.640638,-7.072803,-2.652627,-2.673295,-7.394890,2.948863,7.149834,-4.015222,-4.882654,4.403096,-9.929236,-3.345146,-3.398117,3.579465,-8.662574,1.336409,5.182263,2.155085,-5.903734,2.601862,0.442267,-2.664442,5.014246,-2.203665,5.926207,-0.848337,-5.816899,7.443472,-6.208413,3.059555,7.267220,-4.949771,6.166196,-9.611409,1.820098,-1.288162,-1.559448,4.555178,6.939364,9.732870,-2.155613,2.496780,-0.009150,7.742828,3.416173,2.093311,0.959924,0.828467,4.224729,5.456213,0.942133,-2.337869,-7.452564,-4.907720,7.162639,-7.896699,6.326298,-7.831179,8.326600,-5.492019,-2.806616,1.177154,6.069125,-6.215140,-5.694385,-4.909096,6.711652,8.314765,-0.720378,-0.918892,5.465500,3.222178,-9.450172,1.034498,9.019566,-3.399205,5.805923,-0.250183,5.933786,-2.277772,-9.444930,7.991000,0.726404,4.893086,-3.059601,9.293550,-9.680845,-5.251967,-1.063734,-7.217912,-8.167573,0.127745,-8.706706,-0.904538,5.018429,0.343009,9.068372,6.666493,4.703312,9.923726,-4.794767,-9.418288,4.831437,7.391502,-2.301844,-9.143250,9.591962,-6.710254,7.854554,1.823805,5.305297,-7.917298,3.215164,8.888361,-1.026225,2.455908,5.765869,2.959814,-8.234697,-2.407408,4.521237,2.201739,7.242613,-8.562333,4.301651,1.532525,4.628298,6.114539,3.738169,2.253796,6.043292,9.560157,-3.553429,-8.491435,9.986881,0.046319,3.657924,5.269797,8.549678,7.801619,8.296382,0.466436,-3.146447,-3.660710,-1.121930], dtype = "float32")#candidate|4153|(896,)|const|float32
call_4152 = func_2548_call(relay.reshape(const_4153.astype('float32'), [16, 14, 4]))
call_4154 = func_2548_call(relay.reshape(const_4153.astype('float32'), [16, 14, 4]))
func_2803_call = mod.get_global_var('func_2803')
func_2807_call = mutated_mod.get_global_var('func_2807')
var_4157 = relay.var("var_4157", dtype = "int64", shape = (200,))#candidate|4157|(200,)|var|int64
var_4158 = relay.var("var_4158", dtype = "float32", shape = (462, 2))#candidate|4158|(462, 2)|var|float32
call_4156 = relay.TupleGetItem(func_2803_call(relay.reshape(var_4157.astype('int64'), [200,]), relay.reshape(var_4158.astype('float32'), [924,]), ), 1)
call_4159 = relay.TupleGetItem(func_2807_call(relay.reshape(var_4157.astype('int64'), [200,]), relay.reshape(var_4158.astype('float32'), [924,]), ), 1)
func_2331_call = mod.get_global_var('func_2331')
func_2333_call = mutated_mod.get_global_var('func_2333')
const_4161 = relay.const([[-8.334174],[8.796742],[5.804215],[-9.747547],[1.670522],[1.717005],[-1.133844],[-8.139634],[-9.040900],[7.633685],[4.736386],[1.307102],[5.591885],[-5.572942],[-0.789373],[6.385001],[-9.324748],[8.053588],[-1.490724],[6.148556],[-1.005278],[-5.330881],[-9.614186],[6.043125],[-8.377929],[-9.194609],[7.228643],[-0.493107],[-0.634634],[-1.092609],[-6.359494],[4.756485],[-7.731884],[9.834754],[-6.653375],[8.677118],[8.031690],[8.445102],[-0.716061],[-3.217471],[0.777417],[-0.794776],[-9.535783],[4.807265],[0.623728],[-8.788476],[0.874156],[-8.776636],[-5.146074],[-3.728412],[4.639301],[-5.645513],[2.366727],[-9.668749],[-8.090703],[-8.614682],[2.646018],[-9.567672],[-3.885404],[-3.579222],[-7.881093],[6.063420],[-1.562620],[0.932973],[7.199968],[2.814101],[3.105224],[-0.945962],[8.763125],[-7.483955],[1.521596],[7.599702],[9.132571],[7.632409],[0.566923],[2.644742],[-0.058487],[-3.796581],[7.800056],[5.733028],[3.398647],[1.058741],[-4.345822],[-8.711891],[-6.955989],[-9.591370],[3.799113],[2.706536],[8.216603],[-9.408980],[-7.279984],[-0.183805],[9.999914],[-7.994723],[3.501535],[9.915696],[-4.196886],[9.184667],[-9.545446],[5.784241],[5.339952],[3.616447],[2.052992],[7.858080],[8.211658],[-2.034795],[-8.312895],[-8.546452],[9.264594],[-7.964640],[-0.927443],[4.982768],[-1.348380],[-9.873905],[-9.928610],[9.241224],[3.206925],[7.254934],[3.577058],[6.624727],[-8.416295],[9.283825],[7.592009],[-9.200616],[-8.322248],[6.453788],[3.745457],[1.218124],[9.256761],[-9.018368],[7.156488],[2.813110],[-3.558663],[-5.709651],[-7.598878],[-0.346680],[8.723460],[0.492936],[5.438659],[8.889114],[-0.433751],[3.002924],[1.822150],[8.622929],[-3.235321],[6.119461],[9.177101],[-5.045941],[3.054969],[-9.493132],[-8.800041],[-7.998854],[-2.550209],[-2.985458],[-8.712662],[7.308821],[-3.465312],[-5.841211],[8.671041],[7.304933],[5.384931],[-7.846438],[3.436519],[4.781743],[9.495011],[-4.315417],[-1.334290],[8.715439],[-6.003519],[0.276731],[6.444768],[2.769656],[2.106343],[3.603406],[7.732932],[-1.073329],[3.052875],[-4.132252],[5.725697],[1.036028],[1.343353],[-8.636091],[9.426237],[-1.917968],[-0.124602],[-8.813036],[-4.044276],[3.437750],[4.278862],[-6.394579],[5.239423],[7.995714],[5.904743],[-0.175842],[7.367192],[9.683965],[0.336500],[5.230517],[6.657691],[5.946771],[3.401942],[9.623173],[9.075450],[7.600586],[-4.322576],[-8.969799],[-9.047236],[-5.742952],[9.457540],[-0.131181],[4.639121],[8.240597],[3.820171],[3.535619],[-4.133991],[-1.318774],[-3.648649],[0.059308],[0.349812],[-2.119129],[-1.934127],[1.258919],[-6.171510],[1.432472],[-5.529435],[9.073990],[9.807940],[1.125390],[6.785108],[-2.427732],[5.796573],[0.157018],[-4.136826],[5.396467],[2.618127],[1.367964],[-2.057441],[-4.281189],[7.006545],[-1.708235],[4.606711],[9.744974],[-0.324400],[4.078350],[5.848689],[5.634033],[7.030196],[-1.800354],[5.892201],[0.305360],[0.648181],[9.772484],[1.571916],[-4.897226],[7.580002],[2.911585],[-7.943833],[6.556701],[2.675840],[-6.460505],[-6.573042],[0.338246],[-8.031098],[-6.047888],[3.011146],[-6.995695],[-7.343620],[7.841735],[5.273905],[-5.739860],[-7.555482],[3.003610],[-6.821681],[-1.602094],[-6.344610],[-3.760986],[-7.954465],[-6.022422],[0.347107],[0.738235],[-9.215659],[8.164410],[2.395556],[-4.732639],[9.909265],[8.380487],[-9.537642],[-3.506167],[3.938088],[-6.786473],[-6.295932],[6.128391],[-3.629120],[7.088291],[-8.028395],[3.438526],[3.355075],[0.033983],[8.090700],[5.618902],[5.243316],[-9.312177],[-0.481149],[-5.504982],[1.431052],[9.957739],[-9.219499],[7.959506],[-6.518271],[-3.861963],[0.676032],[3.452539],[2.112296],[4.804853],[-3.203808],[9.604170],[5.145104],[-4.559669],[-4.404503],[3.294310],[7.541912],[6.488915],[7.083225],[7.942022],[-8.970166],[-7.667651],[1.774833],[-5.698781],[6.729228],[2.233705],[-5.996692],[1.412587],[-9.276708],[3.245221],[-9.512542],[0.255823],[9.824095],[9.747629],[0.371996],[-5.090110],[9.271170],[6.370791],[-9.592628],[6.665316],[6.070489],[-9.278162],[9.648097],[7.182399],[9.610934],[-4.672522],[5.083787],[8.188016],[8.993749],[-2.900220],[0.322259],[-8.261679],[3.914805],[1.439765],[6.123473],[3.711813],[3.524268],[-8.105555],[3.964943],[1.787083],[9.503697],[6.670147],[9.196589],[3.959280],[0.455878],[4.403386],[5.158185],[6.772024],[9.998692],[-7.409070],[9.885267],[1.925047],[4.473048],[7.669548],[5.847392],[7.070865],[7.291365],[1.746882],[-4.096057],[5.249073],[-6.884162],[-5.227190],[-9.646676],[5.880108],[2.449886],[-7.785328],[1.465502],[8.189226],[8.026240],[-5.208921],[1.763077],[2.664783],[-2.023974],[8.147972],[-5.464799],[-2.937451],[2.219759],[-7.784084],[6.292196],[1.078236],[1.544036],[7.973129],[3.265757],[-4.253650],[-8.017816],[4.744635],[-9.752258],[-3.611121],[-3.434350],[1.368303],[-4.602654],[5.823239],[5.878644],[8.470038],[0.362696],[5.250247],[-0.847749],[-9.513856],[6.452597],[-0.269511],[9.331634],[-8.551813],[9.288120],[-6.496156],[-2.370716],[-7.162293],[8.421252],[0.458922],[7.111305],[5.379959],[4.126694],[9.750113],[-5.037244],[-8.895064],[-4.198328],[2.319630],[-1.270038],[-9.709062],[-2.522915],[8.261611],[-4.961695],[3.699026],[-0.434314],[-2.959064],[3.219243],[-6.516856],[-7.514639],[-5.481683],[6.122560],[7.086041],[6.053112],[2.318323],[-3.596451],[8.836991],[-4.190031],[3.872511],[-8.805680],[0.509014],[3.457761],[-3.120849],[4.958835],[-9.333172],[4.018097],[-5.689095],[3.682199],[-7.152278],[-0.657926],[-7.785185],[3.643877],[5.186281],[4.266400],[9.292199],[9.394764],[-7.174799],[-9.430768],[0.175515],[1.235135],[-8.727334],[-8.145130],[-8.067817],[-6.277589],[5.232582],[-7.351111],[3.107229],[0.941408],[-5.431525],[7.719314],[3.646762],[-0.429424],[-1.453241],[-9.411491],[-0.460595],[3.930266],[-8.132255],[-6.164025],[8.354769],[-3.016700],[0.541068],[-6.590993],[-4.564296],[-5.681787],[-8.057274],[-2.632349],[-1.253906],[8.082478],[-1.236385],[3.758299],[-7.497530],[9.327802],[-0.832923],[4.160623],[-0.546804],[-2.123593],[-7.617305],[-2.741434],[4.599364],[6.990716],[-8.504689],[6.881931],[-0.364400],[1.969416],[-0.206381],[-5.695020],[1.224171],[-9.543852],[4.833275],[0.044884],[5.808211],[4.982668],[8.628993],[-4.125832],[-1.920013],[-6.728043],[-7.168348],[-6.200015],[7.781831],[7.736932],[-7.761800],[-7.753121],[0.300300],[2.005230],[-2.366958],[-5.187689],[1.364307],[8.149807],[4.359001],[1.743256],[-1.799351],[-2.070049],[5.172134],[8.570082],[9.382938],[-9.224879],[-2.664918],[1.707510],[4.970942],[-9.226798],[-3.730096],[9.690985],[8.238352],[-7.448722],[0.586985],[-1.350324],[2.517587],[-6.068937],[6.457057],[7.062718],[-0.320484],[-0.798480],[-2.936526],[-4.591905],[0.023572],[0.036285],[4.639044],[4.912522],[-6.369550],[4.814447],[7.542311],[7.052824],[-2.893847],[1.456555],[3.736943],[-6.067236],[-1.499149],[3.489136],[9.865033],[6.300471],[-8.606686],[-8.534185],[5.803078],[-4.097243],[0.625457],[3.949605],[-6.269669],[4.348058],[-2.009101],[-1.331612],[-1.681251],[5.509601],[-0.880968],[4.537890],[-3.527459],[-7.095472],[-4.388787],[-4.208829],[-1.429934],[4.439302],[-4.898969],[-3.378606],[8.179757],[-2.786918],[-3.774347],[3.098377],[7.519912],[5.757734],[8.452894],[2.774963],[5.907032],[2.531169],[-5.618107],[-2.261307],[-3.376584],[-6.024563],[-3.695572],[0.627078],[9.841555],[-4.704719],[5.881391],[-3.102779],[-6.851229],[-7.636569],[-2.849601],[-0.275388],[1.922794],[9.908475],[4.030784],[-5.382734],[2.413926],[0.605980],[7.134081],[9.307761],[-3.582627],[-3.929671],[-2.798216],[-1.273646],[-8.114592],[-8.679002],[3.026624],[7.016069],[-7.961619],[-2.852070],[-8.371328],[-9.716970],[-2.315001],[7.578744],[-9.019730],[-9.554441],[-0.381926],[-9.499146],[5.566856],[-5.025007],[0.843597],[-3.354062],[0.270056],[2.874110],[3.100990],[1.457196],[-2.854433],[3.980536],[5.128670],[-7.711658],[-7.946132],[-3.950741],[8.569006],[5.139718],[-1.900618],[3.288110],[-4.474837],[-0.341924],[0.058458],[-8.000695],[5.426563],[-3.233555],[0.444652],[-7.208111],[-2.293052],[-0.602809],[1.379483],[-1.844506],[-2.221043],[5.776625],[4.720005],[-9.966609],[2.263450],[0.768218],[4.891403],[5.679830],[9.912911],[-7.958326],[4.248232],[-3.470467],[-4.874475],[-9.483543],[4.173812],[-4.222241],[-9.383235],[-8.862442],[-5.518368],[-8.408126],[7.741429],[-9.998747],[0.427407],[-1.351144],[6.993063],[8.238474],[2.402952],[1.154618],[-9.152245],[-0.917968],[-7.404379],[7.629378],[-1.810983],[-8.275933],[9.167945],[-9.692217],[-4.053714],[9.982641],[-0.686288],[-4.817315],[-1.580713],[1.081563],[2.694695],[2.375122],[-3.036362],[-4.052929],[7.524176],[-1.103663],[4.148392],[-5.026982],[5.373694],[-1.308225],[-8.699241],[9.843617],[6.168099],[-1.398149],[7.698510],[8.221020],[-5.767030],[-7.453915],[-5.078379],[6.753462],[7.124096],[-6.674674],[-3.856513],[7.964777],[3.172528],[8.970216],[5.834777],[8.873628],[4.813222],[-9.712863],[0.861283],[2.477317],[1.471739],[-9.439265],[-5.544494],[4.741283],[9.544057],[3.907058],[-0.652666],[5.082537],[-3.226190],[1.494623],[0.567594],[-5.982295],[8.584344],[2.742258],[-1.079670],[-8.326045],[5.045123],[-7.329913],[5.611155],[1.858152],[9.421493],[-3.766414],[2.547493],[0.427850],[2.387110],[3.210037],[4.341591],[0.948482],[-0.985163],[1.072824],[8.734218],[-5.002525],[5.519213],[9.724818],[-2.549514],[0.041764],[6.628551],[-6.847790],[-0.276015],[-5.152978],[-2.289010],[-5.656226],[0.136012],[-9.478427],[6.797077],[-1.189946],[-1.881183],[9.484881],[9.343587],[-4.099152],[9.600599],[8.855075],[7.520792],[4.575203],[-9.834906],[0.133815],[7.129413],[-3.823904],[6.369993],[-3.841053],[3.187907],[-8.587176],[-7.634890],[2.201823],[-9.976799],[3.971727],[9.634007],[-1.166062],[-3.013104],[-4.545444],[1.445548],[-9.542642],[-3.155485],[1.732660],[6.928166],[-1.329295],[-0.606988],[-8.257177],[-1.015442],[9.789523],[4.042318],[-6.594731],[3.429584],[-9.858804],[-4.528578],[-9.361934],[-8.891716],[-6.143130],[-9.204681],[4.062578],[5.550295],[-0.624825],[-8.865090],[-9.244149],[-5.306345],[6.088533],[0.464577],[-5.714827],[-1.919856],[-7.848795],[-6.158416],[-9.896181],[6.202672],[7.188389],[-4.742125],[-8.537080],[-1.712990],[2.712357],[4.812040],[1.387859],[1.212232],[-0.951557],[-2.965610],[-3.924585],[7.501140],[2.307735],[3.505041],[-8.246792],[-4.181106],[-7.472590],[-4.258166],[-5.149340],[3.829494],[6.539581],[-3.989479],[-3.117391],[9.159805],[-6.253442],[-1.011101],[-3.569850],[8.229422],[6.829261],[5.758808],[-0.071207],[3.698357],[-8.210372],[5.851239],[-8.683059],[9.308780],[5.966488],[-3.310833],[8.297376],[-7.659634],[5.876914],[-1.211611],[-9.870760],[0.232602],[2.384224],[-8.919856],[-4.814823],[-8.093855],[8.454793],[7.086204],[3.797973],[-2.690315],[-8.465527],[-1.675887],[-1.287026],[2.373882],[1.857474],[-1.896782],[-0.072364],[0.770940],[-8.432447],[6.647884],[8.665088],[-3.477274],[9.685762],[-4.968556],[-6.936859],[2.063878],[5.613636],[-1.914294],[3.881119],[8.997694],[-5.617614],[-9.647310],[6.681176],[-0.905864],[9.662486],[-8.482676],[7.374937],[-1.760963],[0.305662],[6.892074],[2.329912],[-6.685340],[8.909465],[-1.248945],[2.965219],[0.213725],[5.240970],[-3.187402],[-7.018096],[0.777486],[-7.678024],[-4.840924],[-3.386262],[-0.409865],[-4.640852],[9.127170],[-7.009406],[-1.797399],[-4.350096],[-2.236239],[3.767673],[0.673757],[-5.005583],[7.991076],[-7.142507],[-1.326343],[3.868740],[6.090394],[9.333284],[1.271668],[8.172856],[8.186237],[-0.904078],[0.969406],[0.452580],[-0.424732],[-2.537445],[7.327290],[5.745550],[7.488002],[8.569497],[-7.927221],[-7.970621],[-5.733403],[0.533231],[3.426114],[-3.232335],[6.356352],[0.267960],[-9.944023],[-5.742738],[9.459753],[-9.273445],[7.939457],[2.182857],[-4.768229],[8.512086],[6.991974],[-6.892313],[1.667772],[7.274867],[-2.284868],[-4.446613],[5.995719],[5.858300],[-8.416019],[-7.900357],[-7.714124],[-1.059063],[4.043551],[-1.734169],[4.374846],[-3.449447],[3.043712],[-8.971390],[5.891527],[-5.467739],[-1.915358],[7.570900],[-7.728847],[6.796961],[-8.517927],[-0.154522],[-0.115626],[9.143824],[-1.047013],[9.339385],[3.236707],[2.051549],[-4.271729],[1.025296],[4.480800],[-0.908290],[-8.912101],[6.399705],[-4.501050],[7.710904],[5.167593],[0.286055],[5.597653],[9.778508],[-1.052727],[6.392841],[-7.184504],[-5.692544],[-8.634884],[-9.666055],[5.595550],[4.141518],[-4.211557],[-3.758778],[9.648022],[-4.482074],[7.502635],[8.611998],[-1.877338],[9.714106],[2.972820],[-1.950949],[4.237969],[1.517231],[-5.497192],[5.781173],[-7.865282],[-7.445550],[-7.267620],[5.011100],[-2.135368],[-5.474522],[2.229820],[-1.846210],[-7.379998],[-2.763465],[-8.701817],[3.207984],[8.167675],[-7.424615],[4.417865],[-0.228567],[-0.408478],[-1.598002],[6.221198],[7.865444],[1.952566],[-2.021678],[9.452699],[-8.631608],[-3.253701],[3.692215],[2.454724],[-4.778340],[4.429064],[0.293719],[-7.384915],[-9.115731],[-0.899112],[3.758879],[-0.020117],[8.723801],[-4.717047],[-2.246518],[2.117106],[6.975501],[0.918981],[-5.104496],[-3.088032],[-7.448503],[8.553016],[-3.722702],[8.500036],[4.502097],[4.919387],[2.122052],[0.617246],[-3.339122],[-8.327061],[4.200657],[6.885558],[3.869067],[0.600321],[-0.413485],[-8.359004],[-5.794871],[-2.013891],[-0.610377],[5.387047],[4.754593],[-3.185975],[6.769172],[8.199572],[-5.767411],[-4.468235],[5.798495],[-4.936344],[8.328743],[2.313950],[7.702297],[-7.977010],[1.424040],[-5.056916],[-4.951571],[1.350353],[0.637317],[-3.107366],[7.659202],[-9.058451],[-3.286751],[0.469059],[-1.617167],[-9.478455],[-5.577507],[7.600068],[-9.051468],[2.101201],[-9.518872],[2.397534],[6.408963],[-6.562126],[-6.333102],[5.136562],[0.015093],[0.704788],[0.164571],[6.047670],[2.642294],[1.730443],[0.138646],[0.334220],[-4.819695],[-4.775813],[2.105160],[7.477683],[-2.088393],[4.401724],[-9.885532],[5.195735],[-2.896372],[9.215369],[5.024292],[7.594535],[8.471213],[-6.362992],[-8.202268],[-2.889831],[-0.379121],[8.131452],[-2.573714],[9.966776],[1.759153],[6.989049],[3.142287],[9.698412],[-8.860179],[2.549765],[8.701001],[-1.166345],[2.560603],[-9.733360],[-4.082332],[-2.636935],[7.752057],[-3.340399],[-6.854365],[-5.977721],[-1.751622],[-5.244583],[-9.369508],[9.794983],[-8.157772],[1.769010],[-5.736943],[-5.464996],[-8.775384],[5.312563],[7.935911],[-0.499698],[1.636220],[-6.807183],[-3.495337],[8.556183],[2.004177],[-7.488742],[9.988526],[-4.242272],[6.047011],[-0.570222],[3.951274],[9.771980],[4.966737],[-0.812601],[3.084741],[2.726729],[-9.928508],[-6.334897],[-3.891272],[0.151632],[6.468121],[-6.156538],[-7.673518],[9.127061],[-1.354308],[4.891854],[-0.746064],[5.702722],[8.385018],[2.714129],[-4.107580],[4.264422],[-1.873068],[6.582173],[-7.306113],[-6.146691],[0.005728],[-2.273139],[7.103668],[9.778511],[7.466574],[9.352584],[4.259573],[2.645644],[3.186473],[6.393221],[0.030357],[-3.817978],[9.824960],[9.872488],[-7.041089],[5.227719],[-7.611370],[2.927838],[0.181388],[0.178478],[4.463842],[7.314821],[9.798247],[7.736182],[5.878313],[3.905000],[-4.510613],[-1.169956],[8.638643],[4.565372],[-4.498802],[8.502765],[-7.874094],[-7.818134],[0.051932],[5.630706],[4.856752],[-0.146414],[9.017705],[9.804627],[-6.323434],[-6.931021],[-1.161428],[-6.838817],[-5.711472],[2.819298],[1.693469],[0.964856],[-6.344635],[5.586537],[8.234184],[-9.006134],[2.556718],[7.978236],[6.466981],[7.676865],[5.482875],[-7.030779],[2.286304],[-7.608886],[-5.145354],[-2.932057],[-8.812615],[5.336707],[1.600702],[4.872066],[5.480168],[6.251679],[-8.895671],[-7.241420],[6.868358],[3.198372],[5.730631],[-5.740345],[2.591061],[-9.465774],[5.154140],[0.727086],[-9.300232],[-4.466914],[6.985360],[-1.894418],[4.803460],[-1.823498],[-1.592584],[7.920047],[-3.612898],[2.575636],[-8.742205],[-9.555648],[-8.119658],[2.471370],[5.430929],[6.594840],[-7.611929],[-4.096592],[6.632295],[-1.856513],[-7.784013],[-5.849022],[0.847901],[0.859103],[6.656595],[9.994022],[-8.873385],[7.700606],[-5.888870],[-2.268184],[5.456698],[3.824963],[4.260357],[9.991817],[-0.591877],[-7.183650],[-2.093209],[-7.193600],[-6.224837],[-5.586325],[-5.004996],[-2.853777],[8.132671],[5.605585],[-9.001442],[-0.188970],[0.128180],[6.238920],[7.492107],[-2.118338],[9.849529],[-7.569154],[0.192144],[1.089516],[-6.906491],[6.043663],[-8.875315],[-1.519725],[1.414856],[8.222093],[0.507079],[6.465152],[-3.181198],[-0.032650],[-3.819065],[0.497555],[2.366618],[7.447444],[-7.882673],[-8.592426],[-1.919399],[3.427203],[5.870294],[9.754962],[9.988576],[6.007908],[-9.632417],[-7.897873],[8.260455],[-0.201976],[7.202903],[7.443460],[4.370584],[8.279597],[-5.732784],[9.603455],[-2.961318],[6.950848],[-5.201671],[-5.008239],[4.676634],[-5.741187],[2.017695],[-8.548611],[0.630412],[-5.980917],[7.697816],[8.487803],[-0.519321],[-1.233524],[5.165274],[-7.505630],[3.762806],[7.009571],[-1.389863],[9.183386],[0.630780],[2.587590],[-9.907030],[-6.120511],[-6.478585],[-9.589765],[-1.472655],[-9.616698],[7.042781],[8.522142],[-5.375212],[-6.664586],[9.529932],[6.248297],[1.820959],[-8.505730],[5.328343],[6.237439],[8.215003],[9.432948],[-5.033907],[7.747927],[-7.454065],[-5.762005],[9.779450],[-2.834509],[7.709084],[6.177373],[-0.839060],[-6.971889],[8.619915],[4.045868],[-9.395965],[6.190248],[-2.776567],[9.188553],[-4.141703],[4.177129],[-5.879900],[-4.970463],[-6.188721],[-0.292377],[2.019403],[-4.672196],[-3.715988],[-0.257885],[6.888812],[-4.551255],[-8.851402],[-4.662673],[1.442140],[-7.081821],[-6.437418],[-1.651260],[2.795332],[-7.044010],[2.352963],[3.832128],[-0.975456],[-7.253289],[-1.504747],[0.097172],[-9.737394],[1.453868],[2.988948],[8.305254],[3.031943],[-9.382426],[-4.862961],[-6.550943],[-3.409996],[3.967505],[7.142245],[-6.169926],[-0.390985],[0.424309],[7.567721],[8.337058],[-8.358189],[0.292168],[-3.169118],[-6.069390],[-4.192302],[4.777583],[3.830773],[-0.815280],[7.940740],[2.881562],[-2.889129],[-8.100605],[5.575161],[4.828882],[-6.168927],[-1.330978],[0.915736],[-6.480989],[9.599374],[2.908089],[-4.313458],[-2.364128],[-6.136937],[2.506538],[-4.255708],[2.034740],[-0.521913],[7.947685],[2.645312],[5.680354],[0.079381],[-9.333991],[5.431295],[-0.239187],[-8.441081],[-3.879784],[6.032737],[-6.179624],[3.846418],[9.124966],[4.468945],[-9.280112],[-0.119844],[9.586914],[-2.904318],[-4.095395],[-6.168141],[-5.026531],[8.439072],[-3.781963],[-3.349368],[-8.111706],[1.550006],[5.004890],[-1.488580],[-4.995186],[4.728457],[-2.964141],[2.758816],[7.418798],[-3.919707],[0.711026],[0.643896],[-2.377238],[5.658473],[-5.825059],[0.073286],[5.512607],[7.543169],[8.796001],[9.498745],[7.406541],[-2.015256],[-8.072844],[9.982028],[1.485606],[0.181970],[8.975993],[-9.021112],[-5.635516],[-3.895196],[8.058493],[4.419563],[1.373975],[3.198500],[8.502567],[-8.160192],[-3.547863],[-4.624933],[-1.994231],[-9.913310],[6.554770],[7.938381],[-3.727234],[-1.463165],[0.076505],[6.207782],[-7.588298],[3.258523],[-5.796194],[-9.652343],[5.417794],[-5.507412],[1.176738],[-3.625254],[4.859944],[7.818113],[9.661792],[1.250481],[-9.046218],[-6.095789],[-4.366000],[-2.291929],[-7.192947],[-5.476316],[-3.525115],[-6.873114],[-0.475652],[9.084345],[6.409839],[3.417623],[6.707948],[1.187562],[2.299235],[-3.531607],[-7.721956],[8.272131],[7.736972],[0.974531],[0.107165],[-4.282260],[-4.477407],[2.572681],[9.456106],[-8.271297],[5.120318],[0.907342],[-7.308386],[5.823144],[7.578329],[7.863786],[-7.038094],[9.446307],[-0.181724],[5.383139],[-6.948865],[-6.045079],[7.759433],[5.174003],[-0.643571],[1.145000],[-2.334428],[-4.124658],[-9.126719],[-0.919679],[-9.602522],[9.292155],[5.422315],[-5.724049],[-8.330430],[3.158697],[7.961877],[0.704332],[-3.023217],[0.323533],[7.090096],[-5.356107],[-5.896997],[-0.198525],[-8.251109],[-6.791758],[7.378576],[7.692762],[-5.129964],[-2.915092],[2.173867],[-8.085023],[3.995890],[4.327609],[-3.691080],[1.333512],[-7.339933],[8.157167],[-1.790952],[2.113982],[5.093254],[7.679212],[8.655973],[0.397351],[-4.364327],[-0.660340],[8.052424],[-9.965638],[4.060227],[-0.363011],[9.625877],[7.526978],[6.057927],[-7.370048],[-8.604044],[-9.878843],[4.149940],[-5.755515],[-7.300992],[3.677114],[-4.251279],[0.534509],[-7.030550],[-7.631652],[6.433719],[7.768291],[-0.493382],[-6.854128],[-4.590462],[-9.521116],[-9.763906],[-2.724157],[-7.978959],[2.165596],[-8.000300],[-9.929378],[-3.846020],[-3.873585],[8.312588],[-4.125785],[-8.817970],[3.536110],[-9.145638],[-9.803806],[-7.974243],[-8.300884],[-0.566438],[7.943371],[0.280060],[9.893416],[7.628646],[-8.457702],[1.749648],[-5.338717],[-1.468336],[-3.076550],[-8.418538],[1.352328],[8.828670],[2.498208],[-7.765011],[4.912762],[-2.812822],[-2.732153],[3.119580],[3.935286],[3.995026],[-8.460027],[1.751279],[7.769276],[-7.053920],[-6.699959],[-4.018777],[5.060617],[3.226171],[5.176085],[-0.944876],[-2.455053],[5.470757],[9.841766],[3.782006],[3.647556],[-5.477612],[3.292399],[-7.707475],[9.609632],[-1.592861],[-7.422247],[-9.006452],[4.297993],[-3.555978],[9.050925],[4.946693],[-4.816454],[-3.213850],[1.248485],[-7.660987],[-6.933894],[-0.781268],[-5.795646],[7.507327],[8.081324],[0.841320],[-1.331595],[-0.236228],[-6.999432],[-9.086638],[1.327227],[5.611665],[5.095345],[9.895727],[3.621404],[0.066759],[8.946259],[-9.678811],[3.757229],[9.547892],[6.874492],[-2.821353],[-1.083772],[9.899866],[8.650206],[9.952179],[3.633949],[-3.776673],[-2.188972],[9.907184],[-6.477201],[-5.533629],[6.298614],[4.767060],[-5.711473],[5.595288],[-9.683100],[2.858397],[-1.164176],[4.320838],[-4.133857],[0.255481],[0.405983],[-3.603341],[0.329376],[-2.627593],[8.237701],[9.129788],[2.001298],[0.438694],[-5.470853],[4.422238],[-1.855986],[8.429699],[-6.341464],[-2.014327],[1.282025],[-7.631548],[-8.457892],[2.295255],[0.958304],[7.316318],[-1.125594],[6.353247],[4.090001],[1.839925],[1.450272],[-7.315055],[6.923964],[4.424100],[-0.588511],[-0.540807],[5.738143],[9.205590],[-6.612311],[2.401225],[-0.841061],[-8.852582],[-3.161148],[-4.275059],[-9.647536],[1.875446],[-0.782525],[6.472006],[7.320908],[1.553238],[-3.668676],[-2.751399],[6.662560],[4.128570],[-3.648822],[3.398459],[5.211887],[2.993945],[0.749196],[-7.032510],[5.366689],[1.440702],[8.149722],[1.500359],[6.516697],[7.911539],[-4.568607],[9.390205],[9.607258],[8.856253],[-1.370106],[-1.696582],[-6.513970],[1.461920],[9.094780],[3.490158],[6.362589],[-2.702587],[9.997206],[8.098769],[4.651739],[6.161928],[-5.179568],[0.109444],[0.999367],[6.271086],[2.702578],[-0.811680],[9.709905],[0.654565],[6.736484],[4.388715],[8.702599],[0.087261],[3.760527],[-7.953401],[9.177603],[8.236568],[-7.002621],[5.600823],[5.169456],[8.002972],[-8.108159],[5.699660],[8.757378],[-2.433208],[0.555412],[7.203485],[-2.136184],[-2.990709],[-0.568725],[-3.572327],[-3.493709],[4.340572],[-4.760432],[-8.123509],[-5.495244],[-4.189920],[5.122411],[-7.093695],[-2.588310],[5.631604],[3.241927],[-3.869900],[-9.474843],[8.118559],[3.182647],[-2.560262],[4.306039],[1.344374],[2.564620],[-7.916710],[4.117439],[-3.042424],[-9.712315],[-5.692283],[-8.460139],[-4.761127],[-0.561965],[3.269711],[1.010999],[2.445231],[-2.711225],[-3.916293],[-3.181597],[8.427515],[-9.942539],[5.979064],[-0.782004],[-5.656279],[-2.667876],[2.973392],[0.701953],[-5.883520],[-7.464747],[-6.900318],[7.142921],[9.640598],[1.448418],[4.383130],[4.795372],[8.651671],[-8.877988],[8.586193],[1.366957],[7.376572],[-8.599122],[-4.541066],[7.111002],[-2.129293],[-6.007569],[1.627844],[-8.503947],[2.596701],[2.368401],[2.046127],[4.718185],[-7.414016],[2.026715],[-3.260095],[9.154349],[3.054283],[-9.340103],[2.911710],[-5.860885],[1.733254],[-6.444545],[-4.425389],[0.798875],[2.032728],[1.470785],[8.177726],[6.397753],[-1.756291],[-9.083932],[9.066792],[7.419266],[7.790503],[-4.615184],[0.664084],[-3.873735],[4.617763],[9.953484],[-7.974156],[8.233753],[6.912018],[-2.920113],[5.497472],[-6.460865],[3.063013],[-3.237931],[7.292456],[7.458621],[0.946402],[8.156766],[-5.968299],[-1.194531],[8.307907],[-8.775591],[-8.567483],[8.239646],[-7.416802],[1.887102],[5.029127],[6.985284],[-2.650891],[-9.879837],[4.378780],[-0.717519],[3.858673],[6.738395],[-3.382554],[-5.297641],[-7.990055],[4.801915],[-3.481649],[-4.440642],[-2.793761],[7.432944],[-3.109793],[-1.856373],[-6.357681],[-2.149850],[-5.941435],[0.703556],[-3.789410],[-2.941332],[-4.633448],[-4.757584],[4.790291],[6.137655],[-6.404012],[-1.644375],[8.978693],[8.475324],[-6.886127],[-1.634630],[-5.734089],[4.197621],[-0.222216],[-4.937186],[9.391719],[0.403148],[8.638139],[-1.671361],[5.798480],[6.086860],[-1.304726],[-3.203658],[6.455360],[0.659012],[-9.529847],[-2.325093],[-3.419522],[1.018592],[-6.443217],[6.832543],[-9.285682],[1.536184],[3.161776],[-6.757710],[-7.044929],[-1.544675],[6.553708],[-5.085637],[-7.544247],[4.973788],[-2.660657],[8.591311],[9.980940],[1.535956],[7.150738],[3.078628],[5.787651],[8.556899],[3.548450],[4.482821],[4.647186],[-0.984170],[-9.116125],[6.631614],[-1.364997],[5.500099],[8.202141],[9.708629],[-8.923114],[-2.350778],[4.570903],[3.589852],[5.248824],[5.889295],[0.965831],[-9.374473],[6.636914],[1.583358],[7.024799],[-9.244157],[5.957425],[-2.900853],[9.024509],[7.883883],[-6.474221],[0.123363],[-4.895599],[-9.207249],[5.984571],[-1.276764],[-9.116775],[-0.746255],[0.262899],[-4.992788],[-5.223976],[-1.506894],[-7.160083],[-6.495982],[-6.035008],[8.989212],[-2.209810],[-3.291958],[-5.555365],[-8.429109],[5.369085],[-5.772023],[9.380333],[0.264741],[-6.492679],[8.060535],[-1.253144],[8.962644],[8.477980],[-6.765749],[1.059644],[-9.081457],[-1.431829],[-0.213179],[-6.330731],[8.567030],[7.196755],[8.639717],[-6.527707],[5.803504],[-1.393339],[4.382712],[-9.165144],[-5.953915],[9.514075],[9.750435],[-8.766491],[-9.780820],[7.254412],[1.688997],[5.799119],[8.145424],[-1.381473],[0.274957],[3.369973],[-4.089630],[7.861264],[-4.463891],[-4.292648],[0.686236],[-7.792717],[-5.814190],[0.992656],[3.406246],[-3.858082],[-7.662879],[0.606568],[-1.510752],[-2.849571],[-6.088192],[7.166890],[-7.343946],[2.897959],[-5.143046],[4.163333],[7.753456],[4.364359],[-5.387029],[-5.262599],[8.713167],[2.150754],[-6.738252],[9.916189],[-5.410433],[-1.865795],[9.133821],[6.764477],[-6.028663],[-7.535884],[-9.357354],[8.194815],[6.690003],[-3.230951],[6.116307],[-2.781956],[7.016970],[-6.581200],[-6.417871],[-4.387293],[6.935121],[-8.731736],[-6.901213],[-3.282337],[-1.092827],[-2.263846],[-9.535428],[-9.608253],[-7.722842],[-0.521002],[4.861249],[-6.310994],[-3.596134],[-7.892047],[-0.280660],[3.127376],[7.778857],[-6.639442],[-4.325156],[-4.867356],[7.959930],[9.202053],[-1.888663],[-8.112765],[-5.515563],[-2.989380],[1.042760],[-7.989365],[8.343956],[-5.549072],[-8.921998],[-0.291421],[8.583772],[7.203665],[2.504264],[-5.595364],[-9.144304],[1.822806],[6.032806],[7.755355],[-8.351536],[3.736494],[-4.408156],[8.925107],[-6.291834],[1.816879],[6.591242],[-6.174299],[-4.845066],[-8.557638],[-1.825933],[6.483871],[6.142092],[7.744478],[-0.713337],[-3.284306],[1.381201],[-0.699376],[-2.648728],[3.159100],[3.752125],[3.306783],[-4.001286],[-2.553838],[6.134349],[6.195806],[4.063425],[4.940456],[8.042488],[-2.238055],[0.792323],[-5.494327],[-6.334004],[3.133183],[-2.906719],[-6.133110],[2.756182],[-4.756207],[1.201818],[6.591940],[-2.724638],[-4.416657],[9.423685],[-5.514449],[2.221630],[-6.096983],[9.867917],[2.850437],[3.451869],[-6.536890],[1.986230],[3.368664],[-5.677880],[0.273578],[-9.323553],[1.368861],[6.139133],[3.649617],[6.804587],[5.584039],[-8.909830],[3.825375],[-9.364231],[4.060477],[4.395121],[0.458795],[-3.693212],[-5.924473],[-1.385590],[7.541046],[-6.361846],[7.260820],[-0.601938],[-1.288646],[-2.667578],[-7.599204],[5.861132],[9.031559],[-7.404578],[3.031080],[-2.260865],[5.319409],[1.241563],[-8.609852],[9.811856],[0.497449],[-0.189404],[8.917308],[4.029155],[-4.830372],[8.358947],[-8.001513],[-0.190750],[-0.552731],[-7.120763],[3.122781],[-5.928111],[-0.932753],[-4.012141],[4.821347],[-9.871130],[1.634598],[-6.328353],[7.337731],[-7.516725],[4.672190],[4.388206],[-1.953364],[3.663943],[-2.058138],[-0.411075],[6.304615],[-9.451568],[-6.660059],[-1.838452],[-7.330758],[-3.432238],[2.599339],[-0.841877],[-6.737032],[-8.200867],[-9.248080],[1.633143],[5.058484],[1.306271],[9.839182],[1.155744],[-8.874389],[-6.923810],[-4.164320],[8.930067],[7.809119],[-5.828120],[-4.876506],[7.931651],[2.002521],[-1.229831],[6.191719],[-1.526325],[4.913508],[7.057337],[1.876701],[9.170313],[-2.401324],[9.895619],[-3.469934],[-4.088604],[-9.635724],[-3.984296],[2.067009],[-6.111461],[9.778447],[5.097937],[-1.492114],[4.448348],[5.817851],[-6.737877],[-0.422023],[1.337468],[0.069316],[7.503259],[1.739078],[0.008299],[1.283158],[-0.075384],[-0.172051],[6.630985],[4.401467],[-9.499775],[6.472997],[3.111835],[-4.054048],[6.767710],[4.342805],[-2.646689],[4.650187],[-8.070884],[8.195561],[9.731336],[0.035472],[6.488503],[-5.941358],[5.567918],[5.264691],[0.029526],[-8.950504],[-6.864340],[0.337867],[5.112994],[-1.692246],[5.103933],[4.036822],[-5.884800],[-8.728840],[6.603860],[1.308189],[2.377766],[-9.078825],[3.179961],[-8.552528],[-5.102098],[-0.968965],[-4.077192],[-3.829945],[-4.642365],[8.580906],[8.010662],[-1.341234],[6.597740],[4.025882],[-4.910591],[7.531862],[-2.638943],[3.166910],[-6.043262],[-2.297317],[-5.226067],[4.883836],[-5.905239],[-2.274897],[-7.153896],[8.706812],[-1.870323],[5.609071],[-8.780518],[4.390722],[4.040661],[-3.196106],[-2.644067],[2.316443],[1.925292],[3.023890],[-7.170699],[-4.578170],[-3.161647],[-8.476839],[-0.811232],[-6.362206],[8.606473],[-0.687203],[-1.791548],[-0.285994],[9.642163],[2.036778],[-6.724638],[-7.961578],[0.442932],[9.579954],[-0.561942],[-8.525572],[-8.152456],[4.779400],[-6.703868],[-1.537205],[9.139686],[6.795007],[-2.110913],[6.566228],[-1.087275],[5.753054],[6.333656],[6.113074],[9.075503],[1.809443],[-1.037976],[-4.248788],[-0.462090],[-4.678411],[-2.971518],[-7.390632],[3.177860],[3.690934],[4.214922],[9.264126],[-2.901082],[1.430797],[-3.132228],[-8.147447],[5.502068],[9.754041],[6.247756],[8.045176],[7.752875],[7.012138],[-9.577216],[4.673818],[4.247685],[2.226301],[6.168139],[5.657398],[0.328619],[-8.922135],[4.079342],[6.840165],[-1.382839],[-1.370445],[-3.957761],[9.931702],[7.108092],[2.335729],[-5.555165],[-0.247082],[-9.000339],[-6.351590],[-5.079334],[3.583822],[-6.811053],[-0.731416],[-6.346339],[3.844152],[-3.583261],[-5.128629],[4.264002],[2.225358],[-5.884295],[-6.129890],[6.318988],[7.921357],[-3.710791],[-1.036939],[7.287647],[-2.285055],[2.683247],[7.935593],[-6.233763],[-8.207088],[-3.730879],[2.824394],[-3.256381],[6.308359],[-6.732999],[9.431751],[-3.026411],[0.511032],[-2.251702],[7.168661],[7.831289],[-0.364228],[-2.568414],[-2.749390],[-1.740216],[-0.275456],[9.273499],[-4.912190],[-9.545938],[9.624912],[1.974917],[-3.270609],[4.941306],[-8.727545],[0.750576],[3.364049],[6.865826],[6.772778],[2.636127],[-8.242514],[-5.851701],[-8.536974],[-9.748465],[1.760040],[-3.094980],[1.526813],[4.398651],[3.731990],[2.262379],[5.424555],[-3.377657],[8.473080],[-9.143687],[6.068821],[-4.491504],[7.436692],[-8.303347],[7.919968],[-0.714909],[9.273056],[1.448548],[-7.462267],[2.438656],[4.953708],[2.245526],[6.954714],[8.198315],[2.383287],[-2.734342],[2.219515],[-5.306676],[3.376592],[-1.227011],[4.524397],[-5.097991],[-2.595238],[-2.263666],[-9.070420],[-6.648451],[-0.001213],[-5.044795],[0.866213],[8.420551],[6.060945],[-9.111619],[-3.512262],[1.452631],[6.833780],[-6.062757],[-2.505780],[-3.442001],[-5.251520],[3.457070],[-7.200572],[-3.587748],[8.071009],[-9.343814],[-8.695587],[8.096871],[1.216057],[-6.781819],[-4.081265],[-6.758976],[-5.085227],[6.102880],[1.524153],[2.389901],[-0.390857],[-7.122377],[-9.951087],[5.149124],[-9.918359],[6.632164],[8.885430],[-6.270403],[-8.943415],[8.953153],[7.618468],[-1.330558],[-6.627837],[-8.082256],[2.488097],[-0.139691],[6.890000],[-8.813950],[2.239501],[9.452986],[-9.983634],[0.655749],[-8.225319],[-0.613258],[-9.573604],[5.866096],[9.511028],[3.641790],[9.861390],[2.243470],[7.090754],[-2.640929],[7.472479],[8.573378],[8.625438],[-4.109491],[4.708399],[6.887760],[9.479596],[-3.284770],[5.430886],[0.844319],[1.633001],[1.783046],[1.523813],[-1.173278],[-4.655371],[7.908796],[5.326570],[-5.012184],[5.760440],[-0.625793],[-5.792461],[-9.975735],[-3.601131],[-7.577050],[9.207073],[-9.837777],[-6.634878],[2.120619],[0.700967],[3.670347],[5.030503],[0.619582],[6.814885],[0.159580],[-4.176216],[4.289241],[1.086874],[-4.349488],[-5.522758],[-5.807214],[8.423021],[-9.318811],[-4.574479],[8.189755],[8.456098],[3.850364],[9.619608],[-4.666216],[-8.622959],[7.819591],[1.838457],[-3.918223],[3.031188],[-5.256792],[3.001318],[5.674859],[-4.296418],[-5.628383],[2.286973],[-4.804916],[-6.087219],[9.707695],[-5.006797],[-3.345820],[0.903593],[1.002541],[-7.521992],[-3.535422],[-6.126073],[1.902611],[4.586396],[-2.309333],[7.755593],[-2.826925],[-4.124199],[5.071968],[-6.193487],[-4.969772],[-2.547519],[0.259034],[1.887430],[3.984758],[-7.022271],[2.424105],[-6.458139],[-7.663835],[0.837229],[7.330849],[-1.028129],[1.955174],[-7.926931],[4.185074],[-5.270228],[6.225842],[3.913950],[-4.320064],[9.812687],[-5.251317],[6.487573],[0.220776],[0.490460],[6.676773],[-4.091943],[8.934709],[-6.130564],[-2.229905],[1.628406],[7.964612],[4.978125],[3.033265],[-6.528009],[1.945780],[3.532334],[6.739478],[2.963054],[-5.552850],[3.750219],[2.272720],[6.286482],[-7.916894],[-8.462412],[-8.828110],[-9.793043],[6.773377],[0.469593],[-2.150738],[-0.507303],[5.742909],[-2.580343],[7.003622],[5.933778],[-1.648266],[3.447432],[4.936598],[-2.106015],[2.442500],[-3.308708],[-7.380016],[6.842929],[-1.282703],[-8.499708],[-3.508332],[5.019139],[-4.866884],[4.567091],[9.919523],[-2.047169],[8.099697],[-9.548431],[-5.457395],[-2.163116],[6.467119],[8.435715],[5.387677],[9.055608],[7.037193],[1.907175],[-4.725175],[-8.470467],[-2.082278],[-6.511053],[-9.514598],[0.018155],[5.883095],[-1.668244],[-8.748187],[1.015375],[4.457584],[2.586483],[3.172677],[2.555269],[8.707576],[5.931301],[1.839600],[-1.948066],[7.170928],[0.535912],[5.980768],[4.165790],[-9.771403],[-4.420969],[-2.256707],[-1.609548],[7.172383],[-3.580680],[-8.144601],[6.979923],[-5.292821],[-4.652644],[-5.643640],[0.993090],[5.817329],[-4.932177],[1.477698],[2.795676],[8.219041],[-0.533788],[1.958191],[-4.588745],[3.031032],[-2.100838],[-5.061525],[7.569000],[-7.263004],[-3.073099],[-1.591927],[-3.549372],[-7.133067],[7.927355],[-6.241387],[-6.817805],[-6.692111],[3.059544],[5.315650],[-6.711121],[-3.386604],[1.466454],[3.132424],[-1.137989],[-4.830949],[-9.475774],[-0.261378],[-2.941869],[0.245415],[1.327484],[7.236404],[-6.892807],[-7.753138],[7.661797],[4.783243],[-4.367569],[-8.548133],[-3.572281],[-7.300068],[4.766506],[8.332323],[-5.234461],[-2.720043],[-6.054074],[-1.049959],[2.992355],[8.063864],[9.414775],[4.481334],[-6.215804],[5.467335],[8.171354],[-0.588637],[1.243026],[-7.576077],[7.671227],[-4.284665],[0.274231],[-0.003643],[4.973353],[0.379659],[-5.036367],[-2.804964],[8.560655],[4.375246],[-6.941208],[-7.593758],[-6.825602],[1.470199],[-3.210167],[9.061697],[8.444510],[6.508594],[-6.302375],[-5.808276],[-8.238719],[0.461146],[8.096510],[-2.606116],[5.032694],[-7.733690],[-9.060307],[0.613054],[0.746537],[-6.840502],[-6.996292],[5.391979],[-0.086533],[7.385451],[-5.585597],[-3.458188],[1.946698],[-3.177875],[3.049819],[2.536431],[-3.472861],[-0.040230],[8.189626],[1.760048],[-4.728359],[-4.253465],[4.227427],[-1.209011],[-4.858304],[8.836369],[5.178773],[6.295645],[9.194843],[3.106176],[-6.650118],[6.897931],[-1.773560],[-3.120481],[-7.369410],[-4.306876],[2.825077],[1.138772],[-1.463828],[-0.687011],[0.580943],[-4.491976],[5.035142],[-4.153883],[6.306455],[5.358061],[-1.070492],[-3.689488],[-4.730818],[-5.977516],[-8.434688],[1.975193],[5.598440],[5.671617],[-8.917527],[-4.051573],[7.835093],[0.368163],[-7.333238],[1.067843],[4.061824],[-5.891141],[9.163353],[9.209828],[4.266738],[-0.448167],[-0.290356],[2.378179],[2.267853],[-2.749325],[3.139575],[5.642086],[9.202429],[0.911291],[-1.118501],[6.096752],[-2.731803],[-5.167488],[-0.461271],[2.446431],[2.925485],[1.135041],[-4.364188],[-1.089578],[8.575926],[7.317239],[7.771138],[5.204156],[7.092897],[6.216955],[4.491562],[-0.294998],[-0.865634],[-9.953631],[-2.912767],[-6.209171],[6.370669],[6.915874],[-6.537426],[7.293096],[-2.759585],[-2.565703],[-2.900571],[-8.913849],[2.591166],[0.474115],[-0.316223],[-5.941605],[-5.047823],[0.663491],[-0.612039],[5.354470],[-8.136647],[6.918050],[-0.144760],[-8.171597],[-7.860347],[-8.462865],[4.895721],[-0.237755],[-8.224369],[7.058464],[6.244109],[3.648434],[-5.937874],[-8.976173],[-4.929745],[9.620427],[1.420605],[-3.920665],[8.497132],[-8.410362],[3.133648],[-8.579029],[-4.167970],[3.486164],[4.086414],[1.785798],[-6.776975],[-7.265256],[-8.109933],[-4.695562],[-4.674569],[9.808966],[-4.871809],[1.586247],[-6.957860],[6.430338],[5.269833],[-3.343456],[9.208816],[-6.993700],[2.574153],[9.607028],[3.407018],[-7.869020],[3.560916],[-5.845412],[-3.067729],[2.703404],[0.026313],[4.798010],[-1.464614],[-3.027522],[-6.882722],[0.374629],[-9.025867],[-5.799723],[-7.542788],[-8.731973],[-0.050712],[8.968883],[5.077463],[8.718406],[6.105711],[-0.356705],[-9.613745],[-2.628856],[6.346203],[-7.252420],[-2.954032],[6.777469],[1.904087],[-9.479983],[1.825052],[0.538558],[0.719074],[0.347642],[6.657133],[5.771029],[5.444994],[4.255816],[0.239149],[5.644698],[-5.173381],[-5.257669],[0.414211],[-6.972258],[-8.706669],[-5.188383],[8.236330],[8.987798],[-4.914713],[7.771427],[0.289754],[-4.484541],[-1.957007],[-5.985505],[-2.861362],[-9.923346],[7.114296],[4.365554],[-0.717629],[-0.724199],[-0.203193],[3.767300],[-5.818169],[-9.786340],[4.286245],[-0.210082],[-6.556398],[-1.656129],[4.492228],[-4.581221],[-3.452338],[-4.265716],[-8.070386],[-9.645453],[7.953207],[5.581401],[-1.817460],[7.035809],[6.223861],[1.925260],[3.079128],[7.808944],[6.868050],[7.251724],[4.791029],[-2.676635],[-8.331192],[1.574486],[-7.440297],[-8.007732],[-6.884736],[3.911717],[-8.227629],[-3.149144],[-0.102067],[-1.768501],[1.471017],[-0.171326],[3.834547],[4.625001],[0.747530],[-7.108975],[0.320128],[-9.336791],[-6.435238],[3.976396],[-9.490195],[8.918285],[-7.960064],[-3.027356],[8.701959],[-9.749300],[8.021265],[0.671985],[-8.815129],[3.944410],[-5.107310],[-5.605670],[6.918560],[0.165772],[3.790215],[7.477392],[0.963036],[-3.784771],[-5.495220],[9.981940],[6.872971],[-0.080306],[-4.356922],[-0.957602],[6.839619],[-5.562852],[1.072742],[8.259379],[-7.787087],[-8.450724],[1.354455],[3.853503],[-4.192464],[-5.243794],[4.991118],[7.749736],[-1.499193],[1.573704],[9.257345],[3.064077],[7.909199],[2.934098],[-1.056805],[6.984075],[7.322554],[-6.952004],[7.696752],[-9.643672],[8.904211],[-2.973068],[-8.040168],[-2.488818],[-5.156844],[7.577201],[2.275001],[-3.802275],[-8.795501],[5.381916],[-7.734743],[1.665910],[7.711708],[-2.879075],[-0.547514],[-0.826585],[-4.336172],[-3.476601],[-6.414456],[9.650242],[-8.511821],[6.028844],[8.024575],[-2.692665],[9.046771],[8.223497],[-7.620430],[8.900427],[-1.876054],[7.889568],[-0.066915],[9.398117],[-6.282092],[0.194756],[-7.689143],[6.334318],[4.439099],[-7.306640],[-9.004831],[6.872334],[-6.483860],[4.406013],[6.488733],[-0.531405],[5.083144],[-0.411834],[-4.131777],[-3.827538],[6.566907],[7.905523],[-3.474213],[-7.602786],[3.480289],[-6.451248],[7.289408],[9.051640],[-9.491856],[7.913767],[-0.292776],[-9.744876],[1.967831],[6.553397],[-5.743353],[-9.586275],[-8.200274],[5.162844],[2.130547],[-6.220513],[-5.173481],[-2.914423],[-6.144833],[4.102305],[5.485692],[1.968552],[1.615033],[8.026264],[-2.631843],[-2.031532],[-9.231682],[3.740844],[-1.289784],[9.363352],[-0.573189],[2.455314],[-4.950748],[6.732046],[0.347712],[-7.515575],[8.488264],[-9.167105],[9.794751],[7.134341],[3.776215],[-8.507959],[-9.194782],[-3.226025],[-3.489445],[-7.728725],[2.989777],[2.830611],[-0.521274],[6.328393],[0.299261],[-6.121275],[8.023866],[1.126534],[-6.115424],[-5.534031],[-0.543226],[7.105901],[-0.972430],[-1.345067],[6.819664],[-9.699459],[-3.683576],[-0.851561],[-1.807679],[-5.615612],[4.476704],[-7.249893],[-7.063338],[5.296200],[-8.770847],[-2.168632],[-8.018630],[2.748058],[0.999802],[6.119946],[8.804031],[7.063873],[9.535232],[-9.839421],[7.258628],[-7.567232],[4.770104],[6.729440],[-9.184684],[-5.703224],[4.047315],[-5.846696],[-6.381279],[-6.268895],[4.143521],[-4.990010],[9.040036],[-5.573277],[1.035351],[-0.888263],[5.705197],[-9.652788],[6.387825],[-0.781408],[-7.380374],[-6.111245],[5.196783],[-2.425280],[9.131448],[3.959110],[-1.883999],[6.350637],[-8.064719],[5.279173],[-4.255163],[-4.732339],[-3.881949],[-4.743152],[2.075356],[7.129355],[4.598232],[0.349010],[-2.869990],[-3.356112],[-2.991421],[-0.552338],[7.406098],[7.972711],[3.188409],[0.224810],[-2.966425],[-3.898819],[-9.794039],[2.825829],[8.832106],[-4.483276],[-4.487028],[-3.886669],[7.941954],[-7.767733],[-9.568136],[-1.050956],[-3.341380],[7.138476],[-4.352790],[3.987220],[8.755507],[5.663646],[-2.274006],[6.785073],[-3.041808],[-2.939103],[9.405393],[1.651843],[0.370460],[-4.878736],[0.820852],[4.766392],[-6.198398],[0.436484],[-7.402200],[-8.821172],[-9.933881],[6.044539],[-8.482108],[1.067237],[-7.933405],[6.022384],[-1.068458],[-5.519635],[7.166443],[5.311475],[-0.435926],[-1.454523],[-8.786562],[8.380906],[3.605162],[-3.384684],[-0.249823],[-3.161199],[-6.487851],[8.255938],[-6.052130],[-9.919805],[1.503978],[-7.776190],[9.611797],[7.669644],[0.050105],[4.310434],[-0.551337],[-7.490561],[-7.478577],[1.872489],[-6.993080],[4.081100],[5.523652],[-0.980620],[0.247884],[-4.311631],[3.219326],[5.252641],[1.048314],[-8.089550],[3.419179],[-3.340350],[6.333773],[2.080258],[0.212686],[-0.381337],[-0.483154]], dtype = "float32")#candidate|4161|(3600, 1)|const|float32
call_4160 = relay.TupleGetItem(func_2331_call(relay.reshape(const_4161.astype('float32'), [15, 16, 15])), 0)
call_4162 = relay.TupleGetItem(func_2333_call(relay.reshape(const_4161.astype('float32'), [15, 16, 15])), 0)
func_1124_call = mod.get_global_var('func_1124')
func_1126_call = mutated_mod.get_global_var('func_1126')
var_4182 = relay.var("var_4182", dtype = "float32", shape = (72,))#candidate|4182|(72,)|var|float32
call_4181 = func_1124_call(relay.reshape(var_4182.astype('float32'), [8, 1, 9]))
call_4183 = func_1124_call(relay.reshape(var_4182.astype('float32'), [8, 1, 9]))
func_3694_call = mod.get_global_var('func_3694')
func_3697_call = mutated_mod.get_global_var('func_3697')
var_4199 = relay.var("var_4199", dtype = "uint8", shape = (4, 780))#candidate|4199|(4, 780)|var|uint8
call_4198 = relay.TupleGetItem(func_3694_call(relay.reshape(var_4199.astype('uint8'), [156, 20]), relay.reshape(var_4158.astype('float32'), [154, 6]), ), 9)
call_4200 = relay.TupleGetItem(func_3697_call(relay.reshape(var_4199.astype('uint8'), [156, 20]), relay.reshape(var_4158.astype('float32'), [154, 6]), ), 9)
var_4208 = relay.var("var_4208", dtype = "uint8", shape = (4, 780))#candidate|4208|(4, 780)|var|uint8
bop_4209 = relay.logical_xor(var_4199.astype('int32'), relay.reshape(var_4208.astype('int32'), relay.shape_of(var_4199))) # shape=(4, 780)
func_3031_call = mod.get_global_var('func_3031')
func_3032_call = mutated_mod.get_global_var('func_3032')
call_4214 = relay.TupleGetItem(func_3031_call(), 0)
call_4215 = relay.TupleGetItem(func_3032_call(), 0)
func_4085_call = mod.get_global_var('func_4085')
func_4087_call = mutated_mod.get_global_var('func_4087')
call_4217 = func_4085_call()
call_4218 = func_4085_call()
var_4219 = relay.var("var_4219", dtype = "int64", shape = (10, 5, 4))#candidate|4219|(10, 5, 4)|var|int64
bop_4220 = relay.equal(call_4156.astype('bool'), relay.reshape(var_4219.astype('bool'), relay.shape_of(call_4156))) # shape=(10, 5, 4)
bop_4223 = relay.equal(call_4159.astype('bool'), relay.reshape(var_4219.astype('bool'), relay.shape_of(call_4159))) # shape=(10, 5, 4)
func_2803_call = mod.get_global_var('func_2803')
func_2807_call = mutated_mod.get_global_var('func_2807')
call_4229 = relay.TupleGetItem(func_2803_call(relay.reshape(call_4156.astype('int64'), [200,]), relay.reshape(var_4158.astype('float32'), [924,]), ), 5)
call_4230 = relay.TupleGetItem(func_2807_call(relay.reshape(call_4156.astype('int64'), [200,]), relay.reshape(var_4158.astype('float32'), [924,]), ), 5)
output = relay.Tuple([call_4132,call_4152,const_4153,var_4157,var_4158,call_4160,const_4161,call_4181,var_4182,call_4198,bop_4209,call_4214,call_4217,bop_4220,call_4229,])
output2 = relay.Tuple([call_4133,call_4154,const_4153,var_4157,var_4158,call_4162,const_4161,call_4183,var_4182,call_4200,bop_4209,call_4215,call_4218,bop_4223,call_4230,])
func_4233 = relay.Function([var_4157,var_4158,var_4182,var_4199,var_4208,var_4219,], output)
mod['func_4233'] = func_4233
mod = relay.transform.InferType()(mod)
mutated_mod['func_4233'] = func_4233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4233_call = mutated_mod.get_global_var('func_4233')
var_4235 = relay.var("var_4235", dtype = "int64", shape = (200,))#candidate|4235|(200,)|var|int64
var_4236 = relay.var("var_4236", dtype = "float32", shape = (462, 2))#candidate|4236|(462, 2)|var|float32
var_4237 = relay.var("var_4237", dtype = "float32", shape = (72,))#candidate|4237|(72,)|var|float32
var_4238 = relay.var("var_4238", dtype = "uint8", shape = (4, 780))#candidate|4238|(4, 780)|var|uint8
var_4239 = relay.var("var_4239", dtype = "uint8", shape = (4, 780))#candidate|4239|(4, 780)|var|uint8
var_4240 = relay.var("var_4240", dtype = "int64", shape = (10, 5, 4))#candidate|4240|(10, 5, 4)|var|int64
call_4234 = func_4233_call(var_4235,var_4236,var_4237,var_4238,var_4239,var_4240,)
output = call_4234
func_4241 = relay.Function([var_4235,var_4236,var_4237,var_4238,var_4239,var_4240,], output)
mutated_mod['func_4241'] = func_4241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3858_call = mod.get_global_var('func_3858')
func_3860_call = mutated_mod.get_global_var('func_3860')
call_4248 = relay.TupleGetItem(func_3858_call(), 0)
call_4249 = relay.TupleGetItem(func_3860_call(), 0)
output = relay.Tuple([call_4248,])
output2 = relay.Tuple([call_4249,])
func_4250 = relay.Function([], output)
mod['func_4250'] = func_4250
mod = relay.transform.InferType()(mod)
output = func_4250()
func_4251 = relay.Function([], output)
mutated_mod['func_4251'] = func_4251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2932_call = mod.get_global_var('func_2932')
func_2933_call = mutated_mod.get_global_var('func_2933')
call_4264 = relay.TupleGetItem(func_2932_call(), 0)
call_4265 = relay.TupleGetItem(func_2933_call(), 0)
func_811_call = mod.get_global_var('func_811')
func_816_call = mutated_mod.get_global_var('func_816')
var_4267 = relay.var("var_4267", dtype = "float64", shape = (72,))#candidate|4267|(72,)|var|float64
const_4268 = relay.const([[2.724913,-3.028457,-4.977521,-5.496514,-2.845310,-7.029399,-8.955850,9.307799,8.486740,-8.179966,-3.285989,8.979912,3.562525,4.809203,-4.299196,7.462528,1.069520,-0.894050,5.006420,6.395112,-2.221306,8.216897,-9.246168,2.857910,-1.395098,3.187605,-0.492837,-2.387545,-1.906380,-8.169831,-2.564431,-8.399284,5.697164,-9.769064,9.125070,-4.322496,3.986227,-7.978676,1.333810,2.876437,-9.693221,-7.902983,6.111834,-0.897553,0.669866,8.363346,1.424554,5.890009,-3.683320,0.755489,2.403748,8.499097,9.678074,-7.228930,2.438131,8.388212,4.159867,8.702273,-4.615354,-6.113797,-1.594223,5.462261,6.805136,-2.049164,-2.359942,9.341170,-3.104964,-0.993685,8.597751,-0.098790,3.236845,-3.421635,8.796649,0.166050,3.773646,8.793078,6.071044,9.272470],[3.867180,-9.864544,8.080762,1.876439,6.036827,-0.120702,7.016437,1.319947,-5.080390,1.310539,9.330354,1.306529,-1.944833,-4.702778,9.166905,-5.952260,-0.270791,8.670245,-5.687057,0.389476,-7.149117,-7.382650,-0.214006,-6.953893,9.843877,-5.906589,4.673438,-9.486418,1.909908,1.904956,-0.223941,8.716992,5.185754,4.817143,-0.151068,5.308446,-4.757200,-2.421785,1.936180,8.821647,-1.292965,-9.302215,3.928503,8.715992,2.726187,5.249123,-2.697672,-5.839204,7.451957,4.472747,-1.340413,2.191342,5.836991,9.223963,-3.093626,4.696919,4.077338,-3.825186,-8.163202,8.314184,8.721413,-9.440002,1.599409,7.167451,-4.159181,-7.105286,3.095692,4.597036,5.982288,8.709616,1.586261,-0.332486,-6.804346,7.583470,-9.289228,9.913590,0.154301,5.811098],[-1.591930,-3.812895,-2.206337,-9.866767,-8.436287,-6.221377,-3.705476,8.869260,-8.681448,-6.330753,0.213230,-2.227176,-9.817199,6.069887,5.862648,7.382032,6.100100,-4.195394,-6.385639,2.023725,-9.349665,8.054322,5.126566,-4.559984,-4.263913,2.899916,-0.762541,-3.780471,0.473343,-5.005659,-3.372456,-9.117658,0.156284,6.543562,7.929904,-7.112033,-2.897560,2.904428,1.636054,-4.659400,-3.494975,5.937837,9.688909,-2.055207,7.923097,6.605320,-6.150299,4.026863,-7.008108,5.118860,5.103122,6.089344,6.136096,9.088249,-3.138023,0.384610,9.958482,6.043483,-0.393928,5.518370,-9.501544,0.539065,8.215750,3.484766,-2.401186,6.812757,-3.873173,5.090003,8.432603,-4.443900,-7.836022,8.980218,-8.795090,-4.674371,-6.258076,-4.007907,-7.412963,4.490118],[-1.132067,6.546295,4.840389,-3.391940,0.520014,-7.995588,4.972820,-1.735527,-0.080635,2.472184,-2.366878,0.672077,-2.699438,-5.712412,6.086243,-7.852171,-1.490314,-1.743335,-9.304626,8.978549,6.888891,7.650629,1.598322,-7.107677,1.153154,-3.650249,-0.345174,-3.754553,-3.078921,5.537548,-6.270679,3.441293,-5.936717,-1.109188,1.710856,-0.012547,0.436524,4.379962,-8.855697,-4.974045,9.875364,9.920876,-8.517080,-4.830465,-0.944955,8.889385,4.498406,8.858849,-9.800483,6.669314,-7.236109,-7.823876,8.845718,-9.456452,-8.793429,1.340266,5.218075,8.088234,-0.751023,-8.036356,4.830063,2.047389,7.290969,-2.207814,-4.867091,6.490429,-1.338384,4.683838,3.075520,0.976605,-0.161995,9.662694,2.198346,-7.143490,3.086312,2.368222,-4.983376,5.930541],[4.864355,6.416078,5.621625,-6.106290,7.052630,9.462151,9.488777,-1.563013,0.690394,-3.047114,-5.382744,-2.683975,6.026096,-3.291214,-3.098955,6.048015,-7.295453,-1.822152,0.616580,4.289822,-6.175365,4.134082,7.217860,9.341492,-2.769542,9.288173,-2.207427,-6.843121,6.379742,5.136021,-0.931577,-2.581199,-4.945890,3.239019,6.678069,-4.662083,5.506156,-4.966928,4.889404,-6.536224,0.755908,-6.189360,9.705634,6.669929,7.665937,6.711599,-9.169744,-5.342268,-7.634831,-9.160592,-1.427103,2.442380,8.497733,-5.882598,6.808479,-4.121341,1.306212,1.529742,9.631344,6.283151,6.586375,-5.900425,-5.031181,-7.252409,-9.282044,1.514187,5.675252,4.253229,-7.173751,7.511505,-8.369071,-8.506452,-3.641942,-5.238660,-3.328074,4.032695,-3.585281,6.221178],[-6.147667,3.687520,8.781849,-6.466829,9.136348,6.603283,7.935273,-7.695186,-6.595654,0.175118,-0.725909,-5.739883,-2.256710,-4.592607,6.843092,5.600444,-9.707057,4.818872,8.186886,-6.997161,3.850969,-0.296533,7.463392,-7.062143,2.194645,-1.942255,7.841525,8.892159,-1.042231,0.152633,4.428235,-9.350599,2.125935,2.951741,5.644122,-1.943993,6.111826,7.780344,7.994446,-0.151291,-4.222685,-4.122567,1.308099,0.909619,5.836009,-4.785804,7.088537,-2.032473,-4.428624,-1.449525,-0.037697,-3.564754,1.338780,-9.534687,5.334334,-3.573157,6.685632,8.541520,-3.519496,4.742937,9.715081,-3.112885,-3.190961,-6.704996,0.215424,-0.569504,2.641614,3.713512,-9.724856,6.549181,0.061404,4.862554,-0.801455,7.929135,0.933644,-0.269391,-8.438793,-7.822259],[-9.454819,2.611652,9.107919,5.920344,-7.258914,8.404501,-5.833104,-7.755301,-4.236055,-9.641648,0.120116,7.327553,-1.125042,1.609894,4.085334,8.611438,-0.678886,8.464214,-0.395947,-6.383144,6.904273,-9.403676,-5.271600,7.279565,-0.045189,6.589149,-7.852916,6.714391,8.732507,7.079722,-5.234880,-1.835448,-4.908369,-1.696197,-8.376427,6.379721,-9.249123,0.112665,3.173530,-7.429585,-7.617740,6.458088,-1.303517,-3.566909,9.516725,-9.063302,-8.111591,2.078133,-8.390718,-9.658997,-7.671245,7.514413,6.230364,-3.440941,5.312702,-7.983830,-6.397534,-9.063607,-0.233822,-6.776525,0.912236,8.899651,5.646802,-9.370545,-1.084945,-7.894031,-6.643901,-4.369676,-1.251389,-9.510593,5.709460,-7.341265,-2.109856,-3.923143,0.188296,7.353593,-0.485417,-2.832319],[9.960712,1.185170,1.579279,-3.159258,7.397369,2.110191,0.442903,-7.699766,2.402123,2.158757,5.549360,-9.429684,-6.645033,8.830068,6.200352,9.623874,-9.045537,-0.383407,-2.526999,-0.491125,4.183002,-4.597911,2.237096,2.043775,2.056018,9.524062,5.895963,5.470700,8.078482,-1.070873,-3.699913,7.861092,-3.426413,9.364836,-4.325471,7.308325,9.656194,8.402084,-1.110220,8.683549,7.328539,-0.142677,8.014489,-2.139872,9.126735,6.897589,-0.142982,-3.602206,-3.918165,-4.238205,3.718642,6.889572,4.270799,-3.496245,0.334556,0.408004,-2.461842,6.264602,4.547380,-4.462536,-8.055256,-1.914836,-8.095025,-1.609807,-9.093614,0.858819,-0.434890,4.508762,4.573878,1.635313,5.421103,4.663929,-6.967874,7.030253,5.235619,-8.444229,6.242935,-9.405457],[-1.317490,4.077214,2.108844,-1.868611,5.180789,1.011563,1.607080,9.134384,3.702265,-8.612865,-5.623191,9.164737,1.239703,6.081351,6.887577,-6.997220,-7.940407,-1.487500,3.487387,1.348744,-7.218618,7.561062,7.459660,5.552445,-0.817293,9.340828,7.810956,-5.363051,-3.332540,-3.361430,9.590990,4.687694,-6.775068,-6.991059,4.178368,-0.713033,-2.294406,3.933073,-4.978536,1.295126,1.716279,5.316588,4.949943,0.440428,-4.396686,3.979109,1.981264,1.282673,8.988207,0.020672,-3.083307,-4.534210,6.908456,-3.480336,-9.536076,-8.812702,-4.792391,9.507871,3.386967,-0.052041,-4.509000,-4.064477,-3.407829,2.021155,7.290955,-8.773017,-5.169969,-2.329999,3.088082,2.982388,-5.304097,5.349189,-9.547846,1.802865,3.150577,6.263146,1.572924,3.488012],[2.915377,9.983092,2.157575,-0.521753,0.708766,-2.979021,-6.949478,-9.886753,4.650422,3.563845,-3.284529,-4.773731,-1.083751,4.602210,7.875736,-9.036563,3.144828,8.444622,7.722194,-9.532351,-0.453394,2.288866,9.402176,-2.903710,5.884027,-3.459589,-0.978741,-9.608855,-7.508926,-5.983304,-0.064280,-7.054846,8.471924,3.209016,-2.031155,5.873005,-7.576234,5.829439,-5.078993,-9.483609,9.924707,-7.154344,6.410613,0.695529,-9.683284,6.487053,-7.410414,6.610188,6.621000,-4.348847,-9.942417,4.710313,1.045685,-3.745893,-3.534724,7.682913,8.301009,4.100549,-9.171756,-8.993215,-7.465088,-5.332171,-3.339265,-3.916463,-4.802580,0.716688,-4.217871,3.072171,2.964579,-7.612020,-0.123501,4.407102,7.490306,6.446911,1.092949,-3.921134,2.663007,-9.511747],[-7.934165,-4.192234,-0.361559,-8.563255,-5.318530,-1.903688,6.124420,4.974669,-7.240853,-4.853347,4.730973,-1.617881,8.779217,-2.885169,5.334275,-2.997011,-0.199773,-7.328904,-8.144599,8.474230,-6.678940,-3.368796,-1.638897,3.193942,9.783522,-0.620839,8.453409,3.014574,-4.963182,-0.235670,2.297039,5.066913,1.115527,-5.287921,-8.666099,-2.085571,9.996034,4.812651,-6.715357,-6.785600,-4.153318,-8.429010,0.495960,-2.041152,6.220483,5.430818,-4.392537,-0.647573,-2.918856,5.818143,1.818275,6.797786,9.249705,-2.041819,-8.716231,3.192765,-7.507327,-4.422374,8.081258,0.328528,9.283340,5.832234,3.645359,7.035926,-3.152408,8.018625,-9.761267,-6.105683,6.776552,9.502444,-2.884321,-2.156418,-0.964228,-2.037386,7.361259,9.482320,9.302545,-3.543733],[-3.076914,-5.308351,0.694914,-7.190886,2.508603,0.075958,-0.993478,-3.058247,7.955799,8.740559,0.721445,9.343843,8.712630,-2.644394,-0.581810,7.408964,-2.542640,4.003235,4.302513,-1.312631,7.287416,6.694947,-2.891986,-7.142611,-4.047875,-5.538569,0.631781,3.026591,-0.731972,2.388859,-3.642968,2.081398,8.395315,-8.391066,7.064530,9.186649,-9.166204,-8.020259,-0.897507,-2.606465,-1.779639,-4.044779,3.501924,-3.790806,7.882369,-8.934225,-0.057463,8.374809,-1.643887,6.919181,-4.057922,-9.590935,8.270314,8.462288,0.408475,2.637295,-3.446958,-5.600892,2.283074,5.035679,-7.047161,-9.491684,-3.158511,-3.908436,-4.099247,-5.986779,-2.260239,3.794651,8.477666,4.138450,9.752269,-6.543446,4.263633,8.612598,7.430448,5.975372,-5.300190,-0.955569]], dtype = "float32")#candidate|4268|(12, 78)|const|float32
call_4266 = relay.TupleGetItem(func_811_call(relay.reshape(var_4267.astype('float64'), [4, 2, 9]), relay.reshape(var_4267.astype('float64'), [4, 2, 9]), relay.reshape(const_4268.astype('float32'), [8, 13, 9]), ), 1)
call_4269 = relay.TupleGetItem(func_816_call(relay.reshape(var_4267.astype('float64'), [4, 2, 9]), relay.reshape(var_4267.astype('float64'), [4, 2, 9]), relay.reshape(const_4268.astype('float32'), [8, 13, 9]), ), 1)
uop_4270 = relay.cos(call_4266.astype('float64')) # shape=(12, 11, 7)
uop_4272 = relay.cos(call_4269.astype('float64')) # shape=(12, 11, 7)
output = relay.Tuple([call_4264,var_4267,const_4268,uop_4270,])
output2 = relay.Tuple([call_4265,var_4267,const_4268,uop_4272,])
func_4281 = relay.Function([var_4267,], output)
mod['func_4281'] = func_4281
mod = relay.transform.InferType()(mod)
var_4282 = relay.var("var_4282", dtype = "float64", shape = (72,))#candidate|4282|(72,)|var|float64
output = func_4281(var_4282)
func_4283 = relay.Function([var_4282], output)
mutated_mod['func_4283'] = func_4283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3858_call = mod.get_global_var('func_3858')
func_3860_call = mutated_mod.get_global_var('func_3860')
call_4321 = relay.TupleGetItem(func_3858_call(), 0)
call_4322 = relay.TupleGetItem(func_3860_call(), 0)
func_3099_call = mod.get_global_var('func_3099')
func_3101_call = mutated_mod.get_global_var('func_3101')
call_4335 = relay.TupleGetItem(func_3099_call(), 0)
call_4336 = relay.TupleGetItem(func_3101_call(), 0)
func_929_call = mod.get_global_var('func_929')
func_932_call = mutated_mod.get_global_var('func_932')
var_4341 = relay.var("var_4341", dtype = "int8", shape = ())#candidate|4341|()|var|int8
call_4340 = relay.TupleGetItem(func_929_call(relay.reshape(var_4341.astype('int8'), [])), 1)
call_4342 = relay.TupleGetItem(func_932_call(relay.reshape(var_4341.astype('int8'), [])), 1)
func_2548_call = mod.get_global_var('func_2548')
func_2551_call = mutated_mod.get_global_var('func_2551')
const_4358 = relay.const([-3.513899,-1.677249,-8.182479,-6.711152,-5.358362,-6.160377,-0.641317,9.076586,2.109240,5.395845,-7.495383,-8.768308,-3.590992,-9.234931,-6.650359,3.142473,7.313999,7.959496,-1.251671,-3.156029,9.088894,-0.657991,-9.733196,-8.469776,2.096173,-0.674210,0.759965,-0.781567,8.837933,6.962818,-6.446173,-5.671726,7.212976,6.868206,2.585026,-4.686187,2.770001,-3.460812,2.411913,0.852239,-0.959139,-0.731732,-8.329305,2.744897,-8.080739,1.192040,1.914295,-7.098004,-9.312377,-2.445096,-6.353662,-4.156970,9.384479,0.705541,3.513352,-8.739834,-1.715145,5.815632,2.219553,-4.502041,-3.012905,6.717314,2.478337,-7.104719,5.963880,-5.454116,3.031533,6.259368,6.669583,6.718968,-9.367771,3.093049,2.288430,3.984447,3.611888,-9.654406,-3.046845,-4.184990,7.462658,0.704085,0.788776,-1.335849,-8.552148,-2.533571,-9.432195,-2.477474,3.580002,-6.866917,-9.552253,8.533745,5.867007,3.822774,6.647146,-3.242409,-3.423053,-3.994787,2.807534,4.143091,-9.205912,4.200100,7.729308,1.448009,5.185896,8.451300,-1.431132,-5.562361,-5.309225,0.443730,1.198787,5.208452,8.304371,0.137535,-0.064627,-9.538488,-8.367352,-1.871270,7.207280,-1.042261,1.452803,-6.580485,7.188151,2.143206,2.611182,0.843903,-4.357665,-9.318437,-8.159544,-6.342753,-7.551321,-2.424258,1.174570,4.338880,-7.552688,5.543971,9.119731,3.703094,-2.947018,7.983284,7.833125,-2.261795,0.547377,9.636927,3.028900,-1.456898,-6.292759,-9.963600,4.658411,-4.119676,-0.359083,5.582348,-8.409263,-5.888197,-5.316707,-9.315228,-7.785635,7.668621,1.318591,-3.798086,7.637493,3.754792,6.592698,1.270066,6.095597,-3.151786,8.877541,3.884203,8.545471,3.126366,1.651720,2.309975,-5.081654,9.283763,-6.440668,-1.183851,1.825344,5.656553,-8.572126,2.534701,9.240981,7.562602,-2.816087,-3.320756,-9.313908,6.929866,6.989489,4.423442,7.402893,8.816860,-2.314652,2.774573,4.182230,-3.083816,8.425186,2.096538,-3.241325,-8.626656,-7.225938,-5.275519,-3.115493,-8.430192,-7.834372,6.215451,3.674006,4.510471,8.102893,9.005301,-3.465046,-9.873456,5.316943,-3.576473,-0.044293,-0.924380,3.744675,6.981871,-1.242850,1.218945,4.698110,6.895485,5.236815,2.801197,9.942131,-7.817549,-5.745353,-2.381277,-9.577359,6.013465,5.614228,8.353371,-8.960378,-6.195203,7.462823,-3.602303,-8.022363,0.260837,-3.309946,-0.199241,0.263475,5.447669,9.445733,2.187734,-0.167171,-9.319103,6.995530,-1.639382,-5.152484,-3.728406,-2.180009,9.851758,-7.998559,1.945359,4.037853,0.019906,-2.612069,-6.014262,-3.969524,0.371900,1.351920,-0.369580,-2.813015,-9.977532,8.381072,-5.626855,6.755154,-9.052692,-7.430516,1.422549,-2.953915,-0.705868,5.985032,-9.454380,-5.473221,7.922675,-4.436799,-1.477907,-0.422520,0.611106,-0.159116,-1.312672,1.833926,2.812023,-7.884949,6.376572,8.649045,6.739298,2.419685,-9.641848,5.512196,7.669653,6.084858,-4.664546,-5.093941,9.149334,6.296013,8.666014,3.822314,-8.695047,0.135733,-4.843774,8.367672,2.646313,3.716593,9.449375,9.222770,-9.837812,-3.004117,2.158412,8.141802,8.439518,-0.627106,7.508648,-4.678079,8.878716,-7.774201,-5.745545,0.600816,-9.035855,-2.705705,3.510336,-1.354910,-8.071367,5.452233,8.817642,8.242626,3.686713,0.843097,0.975474,0.665799,2.611184,-6.370018,5.316414,-9.012053,-1.117929,2.668889,-7.763488,-1.202130,9.957018,-9.169430,-5.246900,9.219054,3.970366,-1.979048,-1.977821,9.498080,3.959396,-2.862382,6.606474,-9.902129,6.184480,-2.427851,7.610603,-6.137735,-9.487331,-1.725516,-1.781543,-7.137955,-5.202085,-3.904375,-2.244592,6.914674,6.240459,3.514798,-7.039363,1.739301,0.973353,8.005540,-8.820583,1.966378,7.534773,9.041808,-5.635178,5.388297,-1.159624,5.646208,-6.880202,3.796751,-6.653370,-2.173499,-4.709583,-7.047567,7.348806,2.785013,-0.162563,-3.558079,-8.166652,5.513883,-1.288843,9.243005,6.300327,7.157608,4.280211,5.574171,2.533283,-3.898097,9.655453,-4.170053,3.142478,-5.490032,-4.688523,1.628223,-1.603661,9.215420,5.182216,-9.972429,-2.751364,-0.061660,-6.200994,2.018068,-0.604984,7.466066,9.633972,-4.790530,1.795424,-6.955643,-6.948256,-5.249270,-1.598643,1.062201,7.700308,-5.999563,6.468366,1.044528,5.151075,-4.351916,2.281737,5.308150,3.234428,7.701013,5.234254,-0.989210,8.857701,-7.631115,6.869777,4.436736,7.265308,-1.734949,5.639558,-0.350684,-8.875780,-3.755129,4.937234,-1.583944,4.809204,6.850629,7.789049,-2.001212,7.295534,5.793058,-4.570021,1.861399,-3.170982,2.565481,2.441396,-3.312290,-2.622205,2.399139,1.831019,-6.325586,7.598638,6.004147,1.338751,8.152565,-4.330531,2.553581,-6.731729,2.458142,-9.224817,-9.102330,-1.546128,-2.030748,2.681711,-5.640105,3.230244,6.050586,0.473430,-1.292935,9.702284,7.089330,-8.485993,-6.537120,2.850539,8.009894,-3.024525,9.380268,3.944174,4.463158,-1.261312,2.888333,-0.219518,-6.559935,9.693523,6.292380,6.234301,-8.089199,7.808819,-2.365992,-5.102579,0.833885,8.843793,-7.943743,-2.051312,8.538873,6.116484,-8.286809,8.404981,1.297066,6.775799,3.814727,2.537660,-9.566574,9.505684,1.608752,3.568330,-4.935693,-0.168334,0.475679,7.314781,6.936424,8.993854,-3.783725,-4.521639,1.940689,-0.391499,-6.680381,-2.875479,7.359355,6.144860,-8.150992,0.910759,2.500482,0.491304,-5.416968,6.886093,1.919767,5.986980,-7.296911,-6.331292,-0.822080,-3.329717,-2.315928,1.459032,-7.430975,0.785193,0.970569,-1.616465,-2.763927,8.515488,-8.676711,-5.611805,4.358240,5.367835,5.151621,5.807287,6.282180,6.552162,6.872128,3.646815,4.119774,-0.189767,6.573094,-8.435558,-0.407885,-3.394053,-7.324303,-5.294021,-1.868547,4.826212,5.318014,9.211834,5.204513,9.153852,-0.856151,-0.018124,5.929226,-0.024217,4.005849,-4.934864,6.039329,-1.910283,0.633947,5.737784,4.554922,9.855754,-5.047596,7.072282,1.878488,-0.304891,5.249544,-0.632797,2.164943,2.901217,7.267443,-5.447101,-9.196258,-0.827892,8.360199,9.905420,3.597463,-9.811098,-6.918757,5.912840,-2.714858,0.604514,-9.030066,-0.760254,-9.539749,1.186421,3.822642,-9.243315,-9.475580,2.654071,3.654939,-2.555434,4.900472,-9.587665,-1.769521,-4.995582,2.434295,-8.186456,7.233417,0.875424,-8.239439,0.810200,-4.608519,1.287554,-4.988599,-1.984801,-5.737294,-4.084124,7.137667,2.489283,-8.794046,-8.965672,1.737069,-8.323246,7.219810,-4.210524,-4.316714,3.855664,-1.298359,3.954182,6.989270,-3.312804,2.517051,-0.173407,1.338306,-3.426263,6.138579,3.781710,-1.410326,2.012353,9.222418,2.630579,3.121231,-0.596192,-5.457371,-1.440337,1.473077,2.791496,-3.590045,-1.503809,1.248469,3.903479,1.308743,8.392066,-3.323394,-9.291053,-4.797113,5.239931,-2.262904,0.327225,-0.805432,0.521982,-0.382979,-2.680760,-2.556803,-6.483820,4.643136,-2.035000,-4.626572,-1.213473,-5.283360,-2.675138,5.800103,-6.723813,8.080075,-7.982126,1.404051,-6.762527,-6.970711,-5.908362,3.254792,-1.119609,3.898978,2.884965,-0.980109,-1.643398,-7.127665,1.878238,7.584517,-6.026689,-0.743663,-7.163177,-7.774093,1.932109,5.095006,3.638371,3.578097,9.881756,-0.591015,-7.490869,7.961189,1.242941,-6.954212,5.671703,-9.423069,-2.950495,-5.972112,-8.587018,6.348616,0.883474,-7.330757,2.397626,-4.288825,-9.083463,-2.210593,7.193314,4.550498,2.386001,3.624938,2.795276,-7.937372,-9.062389,-0.322352,6.792499,6.551777,-3.908233,2.362507,1.251310,3.185605,-1.846579,-1.668875,4.684354,-8.981244,5.209020,9.238642,0.607117,3.544398,-8.568796,9.116421,5.661285,-7.801407,-2.396302,-1.057797,1.142497,6.404732,2.640636,6.184165,3.214353,7.472698,3.199295,-1.859704,5.826349,3.567486,7.577724,6.181994,3.812864,7.741388,-8.297978,9.891287,5.841322,2.003663,-1.882349,5.398622,6.051287,6.037296,0.909123,0.274735,5.237404,-7.893915,3.748347,1.330401,8.639750,-1.760581,-8.619958,3.545333,-0.948770,-5.432239,8.981817,0.262878,8.379000,3.835443,-0.975216,7.789227,1.169575,-3.478477,8.286125,2.619440,-0.733724,-8.762432,3.557323,-9.663188,2.828561,4.715430,-0.099896,9.214943,6.827963,-6.334623,8.545025,3.890096,0.076363,-3.179634,1.069697,9.936491,9.883299,5.002517,7.013823,2.471900,-0.040725,3.442861,2.204501,-3.904500,-6.843439,-3.914360,-6.278017,-7.691375,7.743854,0.273914,2.860845,4.687841,-8.335772,9.461407,-0.666804,-9.459607,6.891225,-2.794937,-9.086100,8.245927,5.173936,6.796579,2.666267,-4.991429,-5.393511,-4.040732,-7.449275,-3.417965,-8.371906,9.209971,-1.195764,6.375958,7.734316,-8.362991,4.758996,-4.227024,3.014514,-0.517826,-9.990231,-5.942233,-8.066246,-3.978328,-3.915119,-5.790135,-6.094108,4.729341,7.308060,1.140637,-6.512560,0.132246,9.804159,7.091538,1.016214,-6.801731,-9.868608,-6.350910,1.616862,4.031270,4.995834,-4.893529,4.187486,5.032793,-9.886101,-1.760171,-7.649545,-9.815054,6.395165,5.391959,-1.599486,-4.294397,-5.634729,5.199653,4.230291,8.805990,-0.511391,1.272471,0.394443,9.771369,4.102357], dtype = "float32")#candidate|4358|(896,)|const|float32
call_4357 = func_2548_call(relay.reshape(const_4358.astype('float32'), [16, 14, 4]))
call_4359 = func_2548_call(relay.reshape(const_4358.astype('float32'), [16, 14, 4]))
output = relay.Tuple([call_4321,call_4335,call_4340,var_4341,call_4357,const_4358,])
output2 = relay.Tuple([call_4322,call_4336,call_4342,var_4341,call_4359,const_4358,])
func_4361 = relay.Function([var_4341,], output)
mod['func_4361'] = func_4361
mod = relay.transform.InferType()(mod)
var_4362 = relay.var("var_4362", dtype = "int8", shape = ())#candidate|4362|()|var|int8
output = func_4361(var_4362)
func_4363 = relay.Function([var_4362], output)
mutated_mod['func_4363'] = func_4363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3099_call = mod.get_global_var('func_3099')
func_3101_call = mutated_mod.get_global_var('func_3101')
call_4375 = relay.TupleGetItem(func_3099_call(), 0)
call_4376 = relay.TupleGetItem(func_3101_call(), 0)
var_4390 = relay.var("var_4390", dtype = "uint16", shape = (10, 3, 14))#candidate|4390|(10, 3, 14)|var|uint16
bop_4391 = relay.add(call_4375.astype('float64'), relay.reshape(var_4390.astype('float64'), relay.shape_of(call_4375))) # shape=(10, 3, 14)
bop_4394 = relay.add(call_4376.astype('float64'), relay.reshape(var_4390.astype('float64'), relay.shape_of(call_4376))) # shape=(10, 3, 14)
func_1649_call = mod.get_global_var('func_1649')
func_1654_call = mutated_mod.get_global_var('func_1654')
var_4401 = relay.var("var_4401", dtype = "uint8", shape = (3120,))#candidate|4401|(3120,)|var|uint8
var_4402 = relay.var("var_4402", dtype = "float32", shape = (936,))#candidate|4402|(936,)|var|float32
call_4400 = relay.TupleGetItem(func_1649_call(relay.reshape(var_4401.astype('uint8'), [15, 16, 13]), relay.reshape(var_4401.astype('uint8'), [15, 16, 13]), relay.reshape(var_4402.astype('float32'), [8, 13, 9]), ), 4)
call_4403 = relay.TupleGetItem(func_1654_call(relay.reshape(var_4401.astype('uint8'), [15, 16, 13]), relay.reshape(var_4401.astype('uint8'), [15, 16, 13]), relay.reshape(var_4402.astype('float32'), [8, 13, 9]), ), 4)
func_2932_call = mod.get_global_var('func_2932')
func_2933_call = mutated_mod.get_global_var('func_2933')
call_4405 = relay.TupleGetItem(func_2932_call(), 0)
call_4406 = relay.TupleGetItem(func_2933_call(), 0)
func_3015_call = mod.get_global_var('func_3015')
func_3018_call = mutated_mod.get_global_var('func_3018')
call_4414 = relay.TupleGetItem(func_3015_call(relay.reshape(var_4401.astype('uint8'), [3120,])), 3)
call_4415 = relay.TupleGetItem(func_3018_call(relay.reshape(var_4401.astype('uint8'), [3120,])), 3)
output = relay.Tuple([bop_4391,call_4400,var_4401,var_4402,call_4405,call_4414,])
output2 = relay.Tuple([bop_4394,call_4403,var_4401,var_4402,call_4406,call_4415,])
func_4418 = relay.Function([var_4390,var_4401,var_4402,], output)
mod['func_4418'] = func_4418
mod = relay.transform.InferType()(mod)
var_4419 = relay.var("var_4419", dtype = "uint16", shape = (10, 3, 14))#candidate|4419|(10, 3, 14)|var|uint16
var_4420 = relay.var("var_4420", dtype = "uint8", shape = (3120,))#candidate|4420|(3120,)|var|uint8
var_4421 = relay.var("var_4421", dtype = "float32", shape = (936,))#candidate|4421|(936,)|var|float32
output = func_4418(var_4419,var_4420,var_4421,)
func_4422 = relay.Function([var_4419,var_4420,var_4421,], output)
mutated_mod['func_4422'] = func_4422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4250_call = mod.get_global_var('func_4250')
func_4251_call = mutated_mod.get_global_var('func_4251')
call_4424 = relay.TupleGetItem(func_4250_call(), 0)
call_4425 = relay.TupleGetItem(func_4251_call(), 0)
func_3392_call = mod.get_global_var('func_3392')
func_3393_call = mutated_mod.get_global_var('func_3393')
call_4431 = func_3392_call()
call_4432 = func_3392_call()
func_4116_call = mod.get_global_var('func_4116')
func_4118_call = mutated_mod.get_global_var('func_4118')
call_4480 = relay.TupleGetItem(func_4116_call(), 0)
call_4481 = relay.TupleGetItem(func_4118_call(), 0)
func_4361_call = mod.get_global_var('func_4361')
func_4363_call = mutated_mod.get_global_var('func_4363')
const_4489 = relay.const(-1, dtype = "int8")#candidate|4489|()|const|int8
call_4488 = relay.TupleGetItem(func_4361_call(relay.reshape(const_4489.astype('int8'), [])), 5)
call_4490 = relay.TupleGetItem(func_4363_call(relay.reshape(const_4489.astype('int8'), [])), 5)
func_2932_call = mod.get_global_var('func_2932')
func_2933_call = mutated_mod.get_global_var('func_2933')
call_4498 = relay.TupleGetItem(func_2932_call(), 0)
call_4499 = relay.TupleGetItem(func_2933_call(), 0)
bop_4505 = relay.equal(call_4488.astype('bool'), const_4489.astype('bool')) # shape=(896,)
bop_4508 = relay.equal(call_4490.astype('bool'), const_4489.astype('bool')) # shape=(896,)
bop_4512 = relay.less_equal(call_4424.astype('bool'), relay.reshape(call_4431.astype('bool'), relay.shape_of(call_4424))) # shape=(10, 3, 14)
bop_4515 = relay.less_equal(call_4425.astype('bool'), relay.reshape(call_4432.astype('bool'), relay.shape_of(call_4425))) # shape=(10, 3, 14)
output = relay.Tuple([call_4480,call_4498,bop_4505,bop_4512,])
output2 = relay.Tuple([call_4481,call_4499,bop_4508,bop_4515,])
func_4516 = relay.Function([], output)
mod['func_4516'] = func_4516
mod = relay.transform.InferType()(mod)
output = func_4516()
func_4517 = relay.Function([], output)
mutated_mod['func_4517'] = func_4517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3319_call = mod.get_global_var('func_3319')
func_3321_call = mutated_mod.get_global_var('func_3321')
call_4561 = relay.TupleGetItem(func_3319_call(), 1)
call_4562 = relay.TupleGetItem(func_3321_call(), 1)
output = call_4561
output2 = call_4562
func_4575 = relay.Function([], output)
mod['func_4575'] = func_4575
mod = relay.transform.InferType()(mod)
output = func_4575()
func_4576 = relay.Function([], output)
mutated_mod['func_4576'] = func_4576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4116_call = mod.get_global_var('func_4116')
func_4118_call = mutated_mod.get_global_var('func_4118')
call_4577 = relay.TupleGetItem(func_4116_call(), 0)
call_4578 = relay.TupleGetItem(func_4118_call(), 0)
output = relay.Tuple([call_4577,])
output2 = relay.Tuple([call_4578,])
func_4602 = relay.Function([], output)
mod['func_4602'] = func_4602
mod = relay.transform.InferType()(mod)
mutated_mod['func_4602'] = func_4602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4602_call = mutated_mod.get_global_var('func_4602')
call_4603 = func_4602_call()
output = call_4603
func_4604 = relay.Function([], output)
mutated_mod['func_4604'] = func_4604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2932_call = mod.get_global_var('func_2932')
func_2933_call = mutated_mod.get_global_var('func_2933')
call_4637 = relay.TupleGetItem(func_2932_call(), 0)
call_4638 = relay.TupleGetItem(func_2933_call(), 0)
output = call_4637
output2 = call_4638
func_4661 = relay.Function([], output)
mod['func_4661'] = func_4661
mod = relay.transform.InferType()(mod)
mutated_mod['func_4661'] = func_4661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4661_call = mutated_mod.get_global_var('func_4661')
call_4662 = func_4661_call()
output = call_4662
func_4663 = relay.Function([], output)
mutated_mod['func_4663'] = func_4663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4666 = relay.var("var_4666", dtype = "float64", shape = (3, 14, 2))#candidate|4666|(3, 14, 2)|var|float64
var_4667 = relay.var("var_4667", dtype = "float64", shape = (3, 14, 2))#candidate|4667|(3, 14, 2)|var|float64
bop_4668 = relay.floor_mod(var_4666.astype('float64'), relay.reshape(var_4667.astype('float64'), relay.shape_of(var_4666))) # shape=(3, 14, 2)
func_3816_call = mod.get_global_var('func_3816')
func_3818_call = mutated_mod.get_global_var('func_3818')
call_4687 = relay.TupleGetItem(func_3816_call(), 0)
call_4688 = relay.TupleGetItem(func_3818_call(), 0)
func_1409_call = mod.get_global_var('func_1409')
func_1412_call = mutated_mod.get_global_var('func_1412')
const_4697 = relay.const([[1,-1,6,6,-4,7,1,-8,5,-8,3,7,-4,3,-6,-2,-3,-5,10,-7,8,8,5,10,2,-4,-1,-10,9,-1,-4,-1,-5,6,-8,10,6,-3,-5,-2,2,-4,10,-10,-9,5,3,2,10,5,-10,4,-10,8,2,4,9,-7,-2,-7,9,4,-8,1,-4,-6,1,2,-8,9,-2,4,-9,-10,1,3,9,-3,4,5,-10,4,-4,3,9,-2,4,-2,-8,-5,-10,-8,-6,6,-6,-9,3,-8,-2,-8,4,1,5,-3,4,3,-8,2,3,5,-8,-8,10,9,8,2,-7,-3,6,7,-6,3,3,-8,-3,8,1,-6,1,-4,3,4,-1,-2,1,-9,2,-10,7,-3,-5,4,6,-7,-5,7,-9,6,8,-8,-7,-7,-9,4,-9,8,10,9,4,-5,9,5,-5,-9,-10,1,4,-8,6,-10,-9,-6,10,4,-1,3,3,9,10,8,-7,-9,8,5,-1,9,-1,10,-2,7,5,5,-7,-5,-2,-1,3,-9,9,-7]], dtype = "int64")#candidate|4697|(1, 200)|const|int64
const_4698 = relay.const([-1.087132,2.998199,-3.075177,-2.353287,0.977114,-3.875756,1.562172,-7.037423,-3.838380,3.989630,-8.578291,-3.577460,-8.337457,9.708545,5.203292,-9.828293,-8.974025,3.764991,-2.411528,-6.508244,-5.650307,-9.779814,9.681694,8.552747,-0.532924,3.925234,9.529975,-8.569958,-1.164479,1.411513,-6.171092,-3.679826,-8.882791,6.023579,9.282635,-2.268317,-2.485521,7.366172,1.149451,8.765631,2.437141,1.047450,9.261855,-8.554150,3.623699,0.236879,-2.777107,-7.252182,0.900581,2.270477,-0.803808,1.356884,-4.717042,-1.820405,2.327882,1.560527,-5.429334,6.288089,-5.419519,-7.930213,-3.291199,0.371951,0.750876,9.915314,-2.307926,0.166721,-1.669565,2.906346,2.319215,8.135109,-6.313236,1.253503,7.995828,-5.828533,5.279115,2.160797,-6.377030,-6.978547,-2.599750,5.584009,-4.091580,5.308739,4.051370,7.326422,-6.000862,2.829670,-6.562914,-8.909884,4.199257,5.295020,6.122749,-5.207503,-3.256650,1.601553,-3.168570,4.375224,1.385535,-5.528939,7.204874,1.979658,-3.967925,-5.903968,3.996288,-6.598049,8.035520,7.008662,-7.912207,1.696717,-3.477330,1.394917,8.200672,4.015254,-7.321431,6.466754,-4.907280,2.461280,0.401572,7.597535,-6.866936,5.338116,5.119427,-6.155702,4.449084,-5.152108,-1.939222,-9.650951,-3.965618,-9.042340,7.792784,9.956584,-9.508476,-7.689846,-9.254368,6.328753,9.984809,4.624601,9.705645,-4.095757,9.268301,0.403919,0.953511,1.290938,7.492003,-9.559302,3.537656,-7.518519,-2.475369,9.462941,-6.377215,-9.509358,2.120902,9.293122,6.158638,5.533286,-5.267972,7.810549,7.357712,-3.518873,-9.521725,6.265975,-6.147270,-4.093743,0.718207,0.406952,-6.702345,7.169827,6.271110,-0.010629,6.814859,3.392368,-4.830831,7.080988,9.619538,3.921872,-4.339083,9.622987,-4.205166,6.675162,4.248150,-8.440476,-1.349475,-3.150688,-5.547201,3.099111,-5.083393,8.337097,9.267807,-5.803388,-0.241833,-2.769530,0.839487,4.883974,5.891729,6.880807,-3.191009,-6.934730,5.015936,-1.149193,-8.664756,1.128541,6.218753,4.501127,8.306347,0.504035,0.145674,-0.531983,-2.816591,7.669070,2.409851,-6.072485,-8.364455,-7.507213,3.979454,4.682218,-8.862025,9.722148,3.061996,-2.143079,-7.884125,4.571863,-5.077158,-8.636284,7.773768,-6.906511,-2.982229,-4.052182,-0.118963,3.785754,-4.829009,6.909473,6.308769,-0.267608,6.213876,-4.926256,-3.522443,-0.071102,4.194575,4.067675,-8.385367,1.912538,2.966664,0.979864,3.821045,5.606770,7.697856,-9.676998,7.468789,5.097974,-0.571844,1.590554,6.618166,1.443445,-0.693260,-7.326248,-5.618515,-5.604408,4.201785,1.283117,-6.871917,-7.565232,2.775131,-5.835222,7.936426,-2.969204,8.611415,2.453257,3.540494,-1.370477,9.906765,-4.001643,-9.556991,3.975281,-1.230377,-9.282580,-3.986589,-1.718672,-2.370028,-0.023233,-5.527402,5.148222,-7.888459,9.852853,7.083955,-3.087296,-2.254418,-7.325845,1.409673,-1.916245,9.208389,-9.268766,-1.478053,3.852490,9.297826,-5.669034,-1.548421,-8.831158,-5.418540,-4.089960,8.548179,6.279489,8.810550,-0.452931,9.336820,-8.608425,-6.303563,-3.582652,1.094846,9.765469,-0.193113,7.371745,6.030614,8.062199,5.265097,1.165097,-2.288885,-2.846897,-8.221881,-5.550233,1.343440,-3.647777,6.279593,-6.892441,3.134491,-1.011074,-4.007644,-8.410338,1.750986,8.298620,-4.806580,8.254821,8.684657,-4.870287,-8.436318,-5.729765,-9.839892,5.981451,6.199497,-5.416106,8.865817,-8.430228,-1.478841,8.259647,5.636049,-3.169835,0.606145,-5.824488,5.991299,9.702411,-3.143637,-0.983090,-1.520737,-9.754262,1.856133,-2.781010,6.577711,-9.548512,-8.323327,5.146159,9.374176,1.019292,8.194880,7.253806,-7.275844,7.106524,-1.529648,6.482444,8.395624,6.378376,6.268135,-6.314557,-2.429310,-9.417886,-3.021860,-5.144338,-8.951658,8.918207,-8.716609,-7.238244,6.324018,1.289619,4.498893,-3.153220,-6.718345,-3.464804,-8.494585,5.584488,4.786215,8.171897,0.068701,2.987284,5.662066,-2.682842,-2.428641,-3.638567,-3.109106,6.626141,0.743088,-8.763767,1.454795,2.077595,2.256612,5.956642,-8.914934,1.463984,-9.087438,2.169918,4.831539,2.174104,6.543492,1.855182,4.718041,9.519546,-1.495754,6.527102,-2.807755,4.894589,3.110476,1.300981,8.278748,8.727786,9.920761,6.595916,-8.079050,-3.766406,3.246849,5.385179,2.749277,9.279848,5.045854,2.443384,4.834526,7.972112,3.928755,-3.697594,4.399754,2.828376,6.566084,3.953389,0.402758,0.784727,1.038245,-8.725128,0.976728,7.441611,-3.860331,8.637886,3.541927,-3.361473,7.872170,-2.461318,-4.424472,1.116525,-6.196080,-3.074767,7.789611,-5.110875,-8.827011,9.291235,-6.881850,-8.698769,2.215528,-3.741645,7.958967,-8.157224,-9.614630,9.418210,-6.743335,-4.441744,-7.593013,-2.356101,-4.781904,-9.481276,4.885442,-5.680919,-8.320721,-7.225661,-1.512747,5.221832,3.003668,-4.387291,-9.754687,2.657648,7.807787,7.373256,-2.129239,1.253458,1.473625,8.514638,8.321189,-2.192471,9.816761,3.383911,-1.211572,7.659598,-1.495163,4.543374,6.765673,9.662009,-4.234618,-1.427470,6.649667,9.576635,-3.703280,9.624185,-6.708909,3.917401,4.070763,-3.608573,1.445161,9.750297,1.880777,-8.112733,4.760147,0.363181,0.917481,-2.992744,6.242837,9.026482,3.631713,5.575469,-9.792296,0.148412,-2.651199,5.529002,1.838474,3.396797,0.113711,2.251246,-1.290273,-2.334064,1.225227,-3.839673,-2.073469,-3.495553,-8.163352,-8.163677,-1.517530,-9.967787,5.264929,1.021647,3.523819,9.622003,-2.321798,1.816026,-5.767296,-8.558939,3.172086,-0.931831,-9.072641,6.301794,7.452635,-4.094832,0.840720,-3.828792,-7.334371,7.245835,-7.438764,6.369227,6.173418,5.147656,-8.393902,1.178672,-7.710609,-9.211739,-8.189445,-3.453203,2.630863,-7.927516,1.042985,6.502714,-0.211765,0.511064,2.082283,2.587553,-0.902595,-3.766748,3.475526,-5.910363,-8.189388,-1.387552,-0.599854,-5.585390,5.162059,-6.645653,4.986762,0.943805,-8.443490,-8.956781,6.275341,-2.066194,8.716539,-2.953952,2.739195,-1.315239,8.055920,-4.498970,6.496764,9.963640,8.130135,-6.487387,9.869392,-1.330044,-4.523680,-4.352892,3.419880,7.030220,5.557025,2.582865,-5.724929,-7.931533,-9.618959,0.876827,7.676822,3.442618,-5.167383,4.525014,0.878618,0.307606,8.694364,3.866294,3.422789,3.795786,-0.938121,9.127158,-6.598048,9.957924,-5.169304,9.741582,3.812120,8.900747,-6.519848,-2.228159,-4.768428,3.764669,1.259611,-8.259994,-5.151446,4.919830,-8.839829,8.794837,7.812245,-8.700165,-6.308189,8.081706,-7.926695,4.390802,-4.644134,-8.876586,-8.697530,-2.775873,-3.903608,-1.801578,-8.887221,1.666827,-6.188871,4.820129,0.897789,3.795513,9.009320,-0.916514,1.131096,-8.184022,7.235642,6.761771,7.806834,9.623811,-0.748058,-1.632435,2.316086,-2.268320,-9.796630,7.621475,5.659957,2.150584,-0.367404,-0.918707,-7.894009,5.587415,1.880324,2.377000,-2.423237,-7.667821,-4.210548,9.625128,-1.724393,3.279247,5.063204,0.912753,5.484723,-3.088352,-0.534471,-0.518995,8.154365,-8.546451,-8.045617,5.212716,-5.931917,6.554739,-2.850484,-9.956086,-8.458518,-7.252812,4.616980,-3.206428,-1.148454,-1.185937,2.853155,7.379106,-8.117822,2.527111,1.317050,2.525306,-5.972607,-0.467209,2.622095,-0.208689,-4.923855,5.151533,-2.993339,8.429287,-6.784389,4.882641,-0.349257,7.270926,-2.103332,8.161292,8.064935,3.677348,7.544078,0.710847,-0.789396,3.188528,-5.208673,-3.798044,-8.543977,8.670802,8.427616,4.820714,-4.885979,-3.771550,7.261300,-1.502721,-7.137143,0.467389,-0.438100,-1.858141,-9.599577,8.242372,9.936733,9.696919,2.697434,-0.692390,1.344012,-9.323380,-7.954771,-9.087579,-4.392617,6.456260,-1.986399,2.505580,5.362607,0.791331,3.968300,-6.882152,1.536601,-6.986835,-7.232363,8.043451,-4.117890,1.746507,6.062244,7.812547,3.353529,-6.414694,6.303450,-0.840325,-0.559505,-9.380760,-3.045314,-0.252991,-0.537387,4.069447,7.180163,-1.601316,-5.011892,1.907767,3.828502,-1.649752,6.641822,-1.953994,-9.495546,0.560273,-9.515440,-7.985758,-2.145519,-1.400375,7.013923,4.905405,7.934210,2.897196,-7.113350,3.319575,9.129297,-6.169866,-6.855260,8.702761,5.627262,7.709320,-1.258470,-9.161338,-6.214892,0.937428,-6.666955,0.730806,-8.921097,-2.616749,8.357707,-7.178808,1.042648,6.019820,1.051702,-1.071694,9.606687,-0.416903,5.991550,-2.752432,-5.305304,3.765462,-5.544134,-7.059586,9.445137,3.129745,-9.319578,0.541215,-9.351484,8.338626,7.478883,-2.238148,-5.687394,-4.009442,-1.617960,5.776501,-2.795623,9.881419,6.179296,7.429842,-7.858980,3.106182,-5.529052,-3.448255,8.552361,-1.580359,4.963421,7.975515,-2.758825,7.434414,-8.558584,0.941409,-5.477558,-2.879263,-6.559346,-4.966209,-2.443503,4.711692,6.626965,-3.572484,8.321570,8.232807,9.943742,-2.715193,4.534423,-3.192043,1.421834,-9.051483,8.146167,1.805894,4.998870,-4.966170,-3.761813,-2.691136,-6.480687,-6.923155,-5.625788,-5.682296,9.297927,6.023502,4.562256,-3.169383,9.922102,-5.428792,2.740571,-7.299839,3.659974,5.429305,-0.233334,4.574202,-7.071727,-2.602864,-6.096457,-8.650831,-1.120682,-9.342239,-3.508289,-5.423626,3.389062,-3.029800,-8.127703,4.873878,3.123299,0.412833,0.740529,-5.897034,3.961504,-3.879545,-5.364652,7.572664,-5.261727,-0.664926,-0.418891,-2.265475,2.325070,6.454869,2.253757,9.397932], dtype = "float32")#candidate|4698|(924,)|const|float32
call_4696 = relay.TupleGetItem(func_1409_call(relay.reshape(const_4697.astype('int64'), [10, 5, 4]), relay.reshape(const_4698.astype('float32'), [924,]), ), 2)
call_4699 = relay.TupleGetItem(func_1412_call(relay.reshape(const_4697.astype('int64'), [10, 5, 4]), relay.reshape(const_4698.astype('float32'), [924,]), ), 2)
output = relay.Tuple([bop_4668,call_4687,call_4696,const_4697,const_4698,])
output2 = relay.Tuple([bop_4668,call_4688,call_4699,const_4697,const_4698,])
func_4728 = relay.Function([var_4666,var_4667,], output)
mod['func_4728'] = func_4728
mod = relay.transform.InferType()(mod)
mutated_mod['func_4728'] = func_4728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4728_call = mutated_mod.get_global_var('func_4728')
var_4730 = relay.var("var_4730", dtype = "float64", shape = (3, 14, 2))#candidate|4730|(3, 14, 2)|var|float64
var_4731 = relay.var("var_4731", dtype = "float64", shape = (3, 14, 2))#candidate|4731|(3, 14, 2)|var|float64
call_4729 = func_4728_call(var_4730,var_4731,)
output = call_4729
func_4732 = relay.Function([var_4730,var_4731,], output)
mutated_mod['func_4732'] = func_4732
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4805 = relay.const([[[1,-10,-6,7,-6,-3,-7,-7,3,2,4,-3,-6,2,-10],[-7,-6,6,-3,-7,7,3,-8,-7,-8,1,4,3,-10,1]],[[5,3,-6,3,-1,6,2,-3,2,3,9,-2,-7,3,9],[7,4,3,-8,-7,9,-6,5,-1,-9,4,8,1,10,-5]],[[7,-3,4,9,4,-1,-9,4,-8,8,-1,5,10,-7,9],[-1,5,-5,10,1,8,-7,-2,-1,-9,-8,-3,2,-1,6]],[[-2,-4,1,-8,-1,-6,-4,8,-5,-6,7,-5,-9,6,7],[-9,10,-9,-5,3,7,-7,-2,5,-3,2,-7,2,5,9]],[[9,4,-3,10,8,-4,-1,-6,-5,10,3,9,10,-9,7],[-8,6,-6,5,-7,-9,9,-1,3,-5,-5,5,-10,5,-2]],[[7,-1,-2,-4,-2,1,9,3,3,7,9,8,-7,-10,10],[-7,2,2,4,2,-6,-9,-10,-6,-8,-3,-6,-4,-9,-3]],[[8,6,7,-5,-5,-9,9,7,-10,-4,-7,-7,8,-5,-6],[6,10,4,-1,8,-6,-8,-5,-6,-9,3,-7,-10,-2,4]],[[3,3,-3,1,-8,9,-6,-10,-3,7,-7,9,-1,-1,-3],[-10,-4,-10,-2,8,-1,-3,-7,9,-9,1,7,10,-8,-10]],[[5,-7,-4,3,-9,-3,1,9,-9,5,5,4,5,-9,-6],[-3,-10,9,7,-10,-4,-9,1,2,-8,-9,-4,-4,-10,3]],[[3,-6,-6,7,-6,4,-1,4,2,-5,-4,1,9,8,-10],[5,9,-6,-4,-10,9,-2,-8,-4,2,-9,6,-4,-9,6]],[[5,3,-3,-9,-10,-9,3,-1,6,1,7,-6,-2,-7,5],[10,-5,4,-2,4,1,2,5,-7,1,10,-8,10,-9,2]],[[-2,-3,-7,-4,-7,-10,-4,-2,-6,-9,-7,-6,5,8,6],[-5,-4,7,5,-10,-2,3,-5,-4,-6,-9,-9,-7,-4,8]],[[6,-8,4,-4,9,-3,6,-8,1,-1,2,-9,8,7,2],[2,1,-8,5,5,-8,6,4,-7,5,-1,10,10,-7,-10]],[[4,-9,-1,-1,-1,-2,-3,-4,-4,4,-9,-6,7,8,5],[-5,9,-6,-2,-7,-1,1,9,3,-6,-1,-1,3,5,6]],[[-9,-8,4,7,9,9,4,6,-7,5,5,6,4,-8,1],[8,-4,6,-8,-5,8,-9,-6,-6,-3,6,-8,5,-4,-1]],[[-6,4,-5,7,-5,2,-6,6,5,5,-2,7,-3,-3,5],[1,5,9,-8,-3,9,-8,6,7,5,-1,-10,8,1,2]]], dtype = "uint8")#candidate|4805|(16, 2, 15)|const|uint8
var_4806 = relay.var("var_4806", dtype = "uint8", shape = (16, 2, 15))#candidate|4806|(16, 2, 15)|var|uint8
bop_4807 = relay.bitwise_and(const_4805.astype('uint8'), relay.reshape(var_4806.astype('uint8'), relay.shape_of(const_4805))) # shape=(16, 2, 15)
bop_4811 = relay.logical_or(const_4805.astype('bool'), relay.reshape(bop_4807.astype('bool'), relay.shape_of(const_4805))) # shape=(16, 2, 15)
uop_4818 = relay.log2(bop_4807.astype('float32')) # shape=(16, 2, 15)
func_3235_call = mod.get_global_var('func_3235')
func_3239_call = mutated_mod.get_global_var('func_3239')
var_4824 = relay.var("var_4824", dtype = "uint16", shape = (420,))#candidate|4824|(420,)|var|uint16
call_4823 = relay.TupleGetItem(func_3235_call(relay.reshape(var_4824.astype('uint16'), [10, 3, 14]), relay.reshape(var_4824.astype('uint16'), [10, 3, 14]), ), 0)
call_4825 = relay.TupleGetItem(func_3239_call(relay.reshape(var_4824.astype('uint16'), [10, 3, 14]), relay.reshape(var_4824.astype('uint16'), [10, 3, 14]), ), 0)
bop_4827 = relay.floor_mod(uop_4818.astype('float64'), relay.reshape(var_4806.astype('float64'), relay.shape_of(uop_4818))) # shape=(16, 2, 15)
uop_4837 = relay.erf(uop_4818.astype('float32')) # shape=(16, 2, 15)
func_3410_call = mod.get_global_var('func_3410')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_4841 = relay.TupleGetItem(func_3410_call(), 0)
call_4842 = relay.TupleGetItem(func_3412_call(), 0)
uop_4843 = relay.sinh(var_4806.astype('float32')) # shape=(16, 2, 15)
output = relay.Tuple([bop_4811,call_4823,var_4824,bop_4827,uop_4837,call_4841,uop_4843,])
output2 = relay.Tuple([bop_4811,call_4825,var_4824,bop_4827,uop_4837,call_4842,uop_4843,])
func_4853 = relay.Function([var_4806,var_4824,], output)
mod['func_4853'] = func_4853
mod = relay.transform.InferType()(mod)
var_4854 = relay.var("var_4854", dtype = "uint8", shape = (16, 2, 15))#candidate|4854|(16, 2, 15)|var|uint8
var_4855 = relay.var("var_4855", dtype = "uint16", shape = (420,))#candidate|4855|(420,)|var|uint16
output = func_4853(var_4854,var_4855,)
func_4856 = relay.Function([var_4854,var_4855,], output)
mutated_mod['func_4856'] = func_4856
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4860 = relay.var("var_4860", dtype = "bool", shape = (1, 5, 1))#candidate|4860|(1, 5, 1)|var|bool
var_4861 = relay.var("var_4861", dtype = "bool", shape = (10, 5, 15))#candidate|4861|(10, 5, 15)|var|bool
bop_4862 = relay.logical_or(var_4860.astype('bool'), var_4861.astype('bool')) # shape=(10, 5, 15)
func_2331_call = mod.get_global_var('func_2331')
func_2333_call = mutated_mod.get_global_var('func_2333')
var_4874 = relay.var("var_4874", dtype = "float32", shape = (3600,))#candidate|4874|(3600,)|var|float32
call_4873 = relay.TupleGetItem(func_2331_call(relay.reshape(var_4874.astype('float32'), [15, 16, 15])), 0)
call_4875 = relay.TupleGetItem(func_2333_call(relay.reshape(var_4874.astype('float32'), [15, 16, 15])), 0)
uop_4877 = relay.rsqrt(var_4861.astype('float32')) # shape=(10, 5, 15)
uop_4884 = relay.sqrt(bop_4862.astype('float64')) # shape=(10, 5, 15)
uop_4888 = relay.sigmoid(uop_4877.astype('float32')) # shape=(10, 5, 15)
func_811_call = mod.get_global_var('func_811')
func_816_call = mutated_mod.get_global_var('func_816')
const_4894 = relay.const([[6.620928],[-7.537800],[4.473014],[-7.391479],[1.369507],[-3.263799],[2.168500],[-5.561006],[2.134186],[3.788924],[-9.607530],[4.277043],[2.814244],[3.786291],[9.526302],[8.683362],[5.623089],[3.739258],[-3.816982],[1.911632],[2.342436],[4.949857],[2.887151],[3.837616],[1.695975],[-2.332957],[-4.053557],[1.462386],[-9.251847],[6.266063],[-9.164388],[5.364583],[7.040137],[5.881799],[-4.683655],[3.735736],[-4.225926],[-2.773484],[-9.002737],[-0.657555],[3.978660],[5.425712],[-0.916008],[5.042446],[-8.949229],[-9.586140],[6.840108],[-6.118938],[-4.528434],[-3.798747],[-3.747601],[9.344622],[-5.861751],[-0.269960],[5.531931],[4.646907],[4.129426],[8.693530],[9.325902],[2.372821],[6.309285],[-5.222961],[5.618471],[9.564342],[-8.030409],[-4.341591],[3.442273],[4.916278],[-6.330086],[-3.225629],[-1.871698],[-2.225072]], dtype = "float64")#candidate|4894|(72, 1)|const|float64
const_4895 = relay.const([-2.084565,-0.882135,-5.581419,8.408850,-3.922151,9.375285,-8.673732,-3.249842,-9.987484,-3.224328,-2.401070,-4.775470,-8.180057,-3.261369,-9.601532,-4.219311,8.384876,-4.621454,-1.971501,7.493454,2.419465,-2.698852,-0.472033,-6.017275,3.960236,0.012046,0.865196,-0.318055,4.939728,-2.091851,7.327549,-5.311715,5.169586,-9.187735,-9.072444,-3.715508,-5.240963,-6.799684,1.739901,1.236146,5.553862,1.052522,9.496799,-0.575159,-8.842835,-4.668403,-1.858594,-0.293484,6.681414,7.985160,7.474356,-4.999141,-7.366628,-9.820177,9.689473,-4.637605,-4.391997,6.363414,5.596368,7.755784,-1.040935,3.476264,-0.566192,3.258688,-9.361144,-4.095954,-5.617637,1.890325,7.826449,1.304817,-4.793160,5.044759,0.928808,-1.084403,-6.415310,-8.175563,0.514260,9.732709,-3.095414,-6.293861,-4.789861,-1.589497,8.730473,9.656875,7.090882,1.935081,7.577540,-7.674713,3.643833,7.927866,-4.158383,2.279353,-4.372386,-6.423663,9.057570,5.659873,7.982990,-1.390610,-1.690125,1.390793,-6.789005,5.218135,0.724499,-4.237449,-6.711290,-2.499416,-7.479662,-5.207908,6.321190,8.464888,7.296513,-7.772989,-1.394430,4.448532,-4.610997,-6.649024,9.733385,-4.747392,0.227986,-4.378889,0.984665,1.863733,-9.459830,-5.331508,-3.703722,-8.663233,-5.116949,-5.574811,6.702002,6.084258,-3.320159,9.240589,1.898094,-5.772280,-7.278223,-0.968613,5.036767,9.729931,-1.979432,9.220997,1.725878,-8.531283,-6.415308,-5.330010,3.094340,-4.855268,9.025528,9.508912,2.906461,-1.843746,-0.563427,3.479584,-1.071387,8.905925,-3.225094,2.500953,-8.155775,-2.748924,-4.759549,3.554146,-2.491959,8.385294,1.368160,4.381670,-5.761020,-4.319801,-4.079252,-7.094622,4.103525,0.238634,4.446502,1.321518,6.078545,-6.200341,4.590978,9.023274,2.348596,6.159420,2.229965,-2.745090,-7.806062,3.860552,-2.511965,2.558413,3.199244,-9.254944,3.837248,2.638384,9.344447,-8.493989,7.895436,-5.417198,-5.238226,8.381517,-3.575765,4.362041,-6.505989,-1.206520,0.392679,-9.726329,-7.515964,9.058684,9.754616,-9.563734,-8.447441,8.532979,-4.270163,1.569539,7.907877,0.344115,-8.600258,1.593767,8.239072,8.183692,9.490920,3.369490,-6.178757,-4.627660,0.474001,-0.411482,7.728976,3.954553,-2.363874,1.159078,9.484001,5.936011,8.220743,6.015832,-5.717772,0.136036,-9.040207,-7.645350,4.704910,-4.837488,4.931285,4.721298,-5.799120,0.559741,0.479895,7.146885,8.582367,-7.233584,1.466386,2.567493,-3.797462,0.293152,2.742312,-7.846610,-0.392465,-6.776660,4.909268,5.261073,-6.690869,-6.350393,5.072457,8.683637,7.706189,6.496265,4.191370,-1.700845,-2.846249,-9.095170,5.721118,-0.629194,-4.000367,-0.913590,-6.748176,6.597384,-8.170914,-6.918269,6.794913,-4.729561,3.940246,1.054518,-6.181260,1.792086,-0.894914,-6.965772,-9.860773,8.753116,9.885052,-8.853867,7.894558,4.009035,-6.178761,7.106004,1.806699,-6.655623,-4.975171,5.582900,7.574646,0.750571,-2.617609,-1.367265,-0.975797,3.110718,3.966950,-9.700850,-1.632461,-0.991537,5.153028,-0.300559,0.408203,-0.924674,1.136374,-9.391751,-0.261873,-9.725051,3.950217,3.842268,-6.426648,-0.347626,-7.220411,7.462019,-1.655389,5.507041,7.905208,-8.960976,-5.088357,-9.244924,-8.039296,8.084065,-5.590673,5.125765,-3.512597,-9.636002,-6.572026,-2.877168,5.641311,9.007913,1.714599,0.029919,-0.703552,5.012357,-2.354280,-9.035456,-0.384017,3.005678,5.553549,-7.687748,0.204112,9.110485,9.609437,1.043939,1.777765,-3.153810,7.598519,5.249393,0.729423,9.850452,3.533017,-2.860177,4.162124,-0.039095,7.660051,-7.754144,6.770844,-0.507783,1.045666,5.773350,-7.048132,9.218182,-9.433225,9.630056,2.296457,3.239472,3.484444,-6.079645,-9.003810,0.097421,6.311755,-9.883232,1.425102,-9.902557,-5.795814,8.628277,2.870080,7.515512,-2.387557,-9.255246,9.804734,-1.225993,7.026110,5.670319,0.221347,5.932786,-6.708999,-3.384056,-7.828143,-8.489333,-0.492367,1.894898,-9.072028,7.941681,-4.853101,-9.769044,-8.051947,-0.903028,8.872633,2.502514,-5.020910,0.422320,-3.247012,6.652229,-0.515085,-7.610066,9.460859,3.407170,-5.645402,-8.424491,-6.839322,-8.891036,3.973307,-2.380864,-8.775450,-3.836469,4.818507,3.612494,4.455177,-9.969955,-9.795919,-5.483171,7.793029,6.556947,1.877913,-3.359463,-9.433727,-4.585460,5.137896,-3.267700,-7.019900,-2.386196,-4.648021,2.608411,-8.711514,-7.896163,-5.013861,8.655278,-1.290232,5.849647,-5.877869,6.836426,-9.463491,2.858257,-8.185029,1.838298,-5.473911,-8.647198,2.254304,-8.562902,-5.857701,-9.645671,6.973035,-5.404420,-5.622007,5.140995,7.916689,3.854568,-7.450314,1.584155,-4.301689,6.909302,-8.188167,-1.408796,-2.909618,-5.558080,9.848197,0.173662,-0.886756,-8.119166,-5.180802,0.003289,-6.322812,0.581043,8.601839,9.746451,-0.084884,-7.291952,6.789477,-1.338710,3.178381,-2.397145,-4.082236,-4.203348,9.663270,3.645712,-3.142917,1.762107,-0.503956,-9.378433,9.470882,8.813870,-2.092258,-3.744518,-1.126410,3.039960,4.618770,-7.458254,-9.317809,-9.344865,6.479277,5.332804,0.835401,-3.231501,4.166398,6.592516,8.760845,-2.773202,7.932338,3.615422,-0.535811,9.222644,-8.451042,9.397739,-7.792104,-1.489191,5.954274,-5.298907,-4.849648,-2.122766,2.195548,-4.575002,8.027038,-8.838293,8.941916,-9.211569,7.962644,-9.402640,-8.992458,-7.739697,2.229070,-3.835200,-9.050382,1.754706,-3.143389,-7.700845,-0.327821,-5.203749,-4.308943,-5.646462,-0.959116,7.098201,-6.607815,7.915448,6.427646,-6.534214,-7.156253,5.460582,1.786359,7.485295,7.943667,1.787898,-5.042559,9.372909,-8.678269,-4.719031,-3.478180,-6.608444,3.317324,8.226691,4.321283,-1.148936,2.384441,-0.202995,-8.585842,-5.408814,-6.037952,7.017653,2.029134,3.242959,-5.290602,-9.712883,0.905208,-8.103076,-1.468313,8.088608,2.361527,1.984510,5.074208,5.487240,7.291884,9.476570,0.315137,-7.820123,7.869799,-8.776112,5.753069,5.132843,-4.786450,-5.218357,1.194482,-8.322933,2.418694,1.823689,-6.090927,-8.526033,-4.464984,3.619058,7.696160,-1.269168,1.169928,-9.664351,5.888529,7.238320,2.618143,-8.968906,5.906874,8.807783,-8.675973,5.082187,0.430085,-5.618327,-8.911200,6.616983,4.822744,-6.831569,6.654869,-7.210393,-1.649776,-1.279259,9.097091,5.849097,7.854637,7.159426,7.950332,-8.892727,-9.386860,1.299620,-7.471396,-7.688901,-0.400534,-6.868067,-3.350546,8.210321,-4.105001,-5.100905,-4.163053,-1.704416,8.376036,-3.640727,3.383495,6.115087,1.562309,-6.341253,-5.900105,-8.658976,7.434223,-8.325465,1.102580,8.938231,1.939981,9.886593,7.656096,3.587453,4.127771,7.484255,1.607593,-6.681308,3.443409,-4.948555,-7.480704,2.382277,-9.014227,1.894226,0.646682,9.497334,-9.918318,-0.184335,7.955957,-0.424251,4.457186,5.087678,9.709878,-5.203804,-0.732640,-3.091353,3.941763,-7.883432,4.907997,3.327371,-9.652096,6.042805,3.504477,-7.748006,6.521572,7.847338,5.971850,4.394035,-8.217584,8.395893,0.463172,8.568230,8.203827,-8.381943,8.097346,6.931812,-5.141133,1.418697,7.302170,-9.969400,-5.842266,1.330754,-9.171289,-2.475762,-9.008880,9.688316,0.815530,-5.526669,3.525247,0.097217,-1.520563,-3.938653,3.666198,-6.214670,-7.926724,-4.660437,-0.186438,-2.221462,-2.369426,-3.017633,-0.227955,-5.943505,-7.876568,9.688687,3.034827,0.998622,1.486702,7.748878,2.011324,8.751489,-6.286295,-6.377267,-3.123331,-9.812086,-9.358569,3.254178,-9.420480,-8.275552,3.729653,-3.993743,3.286685,-0.585088,-3.602446,7.573013,-1.036135,9.758435,-9.000510,1.870923,-8.048423,-1.684787,-7.216159,6.416979,9.091672,-3.724052,8.662339,-9.463557,-5.718825,-2.955450,-5.020686,-3.924929,-3.933715,7.017777,9.280255,3.174805,-5.341704,-3.010026,-5.159722,-5.644404,-0.765371,-1.830663,2.428603,-9.053945,3.787074,-9.523180,-2.507529,-8.179503,-4.367907,-8.204760,5.222949,5.412617,1.427044,-3.246649,-2.063402,6.358546,1.659165,-9.974538,-0.862218,-1.387585,5.607005,4.135869,5.071435,7.136907,-9.520590,-1.315331,9.230806,4.959855,7.763184,-2.161114,-6.085078,-7.668167,3.675647,5.124654,9.680148,-9.010066,-0.522035,8.322207,5.055792,-5.886681,-2.382770,2.076703,-9.325357,-9.869323,2.712076,1.405784,-7.452208,7.591436,4.040439,-3.712776,4.796902,9.695889,-9.459042,8.032266,3.531113,1.302430,-4.133545,-5.954529,-2.155213,2.797885,7.987365,3.109255,-4.346759,-9.214072,7.004280,6.695154,2.768883,4.679835,9.721744,7.675241,-4.904433,-4.365212,-6.335391,8.016271,4.067880,-7.198246,-7.247928,-2.210377,-9.566963,-8.717642,5.975317,-8.002950,-0.833071,4.994458,8.187800,2.203667,3.608143,-5.802312,-2.068335,-6.397944,-7.213660,-6.738579,2.023195,-5.835270,0.710924,3.443628,-5.889116,5.322293,8.818402,-2.580342,-5.616635,-7.658704,8.575469,2.927945,1.550614,0.512820,-1.804649,-9.126795,-8.328119,8.002730,7.572797,6.994504,7.629881,-3.260604,5.109686,7.273370,-8.227676,3.449831,-4.275936,3.970962,6.421553,-4.560562,2.151284,5.825910,5.554031,3.761468,6.105499,-8.836541,-3.467960,-1.762630,0.353015,3.682375,8.954091,6.099252,9.161396,1.752027,4.120084,-0.864005,-8.298543,-8.302572,-1.581566,-6.225706,-1.578535,-2.732633,-2.568512,-6.999567,-4.837895,0.311555,2.317121,-5.740481,-7.501769,0.982331,2.656646,-1.353024,2.890803,9.161379,-2.304867,9.705572,-8.146243,8.841758,-2.781635,-5.403755,7.452624,5.087746,-2.380894,5.151991,0.017968,-1.719721], dtype = "float32")#candidate|4895|(936,)|const|float32
call_4893 = relay.TupleGetItem(func_811_call(relay.reshape(const_4894.astype('float64'), [4, 2, 9]), relay.reshape(const_4894.astype('float64'), [4, 2, 9]), relay.reshape(const_4895.astype('float32'), [8, 13, 9]), ), 1)
call_4896 = relay.TupleGetItem(func_816_call(relay.reshape(const_4894.astype('float64'), [4, 2, 9]), relay.reshape(const_4894.astype('float64'), [4, 2, 9]), relay.reshape(const_4895.astype('float32'), [8, 13, 9]), ), 1)
func_1124_call = mod.get_global_var('func_1124')
func_1126_call = mutated_mod.get_global_var('func_1126')
call_4905 = func_1124_call(relay.reshape(const_4894.astype('float32'), [8, 1, 9]))
call_4906 = func_1124_call(relay.reshape(const_4894.astype('float32'), [8, 1, 9]))
bop_4909 = relay.multiply(uop_4888.astype('int64'), relay.reshape(uop_4877.astype('int64'), relay.shape_of(uop_4888))) # shape=(10, 5, 15)
func_4085_call = mod.get_global_var('func_4085')
func_4087_call = mutated_mod.get_global_var('func_4087')
call_4915 = func_4085_call()
call_4916 = func_4085_call()
bop_4922 = relay.less(uop_4877.astype('bool'), relay.reshape(uop_4888.astype('bool'), relay.shape_of(uop_4877))) # shape=(10, 5, 15)
func_4575_call = mod.get_global_var('func_4575')
func_4576_call = mutated_mod.get_global_var('func_4576')
call_4925 = func_4575_call()
call_4926 = func_4575_call()
func_3729_call = mod.get_global_var('func_3729')
func_3730_call = mutated_mod.get_global_var('func_3730')
call_4927 = func_3729_call()
call_4928 = func_3729_call()
var_4935 = relay.var("var_4935", dtype = "float64", shape = (10, 5, 15))#candidate|4935|(10, 5, 15)|var|float64
bop_4936 = relay.subtract(uop_4884.astype('int8'), relay.reshape(var_4935.astype('int8'), relay.shape_of(uop_4884))) # shape=(10, 5, 15)
func_3858_call = mod.get_global_var('func_3858')
func_3860_call = mutated_mod.get_global_var('func_3860')
call_4943 = relay.TupleGetItem(func_3858_call(), 0)
call_4944 = relay.TupleGetItem(func_3860_call(), 0)
output = relay.Tuple([call_4873,var_4874,call_4893,const_4894,const_4895,call_4905,bop_4909,call_4915,bop_4922,call_4925,call_4927,bop_4936,call_4943,])
output2 = relay.Tuple([call_4875,var_4874,call_4896,const_4894,const_4895,call_4906,bop_4909,call_4916,bop_4922,call_4926,call_4928,bop_4936,call_4944,])
func_4958 = relay.Function([var_4860,var_4861,var_4874,var_4935,], output)
mod['func_4958'] = func_4958
mod = relay.transform.InferType()(mod)
var_4959 = relay.var("var_4959", dtype = "bool", shape = (1, 5, 1))#candidate|4959|(1, 5, 1)|var|bool
var_4960 = relay.var("var_4960", dtype = "bool", shape = (10, 5, 15))#candidate|4960|(10, 5, 15)|var|bool
var_4961 = relay.var("var_4961", dtype = "float32", shape = (3600,))#candidate|4961|(3600,)|var|float32
var_4962 = relay.var("var_4962", dtype = "float64", shape = (10, 5, 15))#candidate|4962|(10, 5, 15)|var|float64
output = func_4958(var_4959,var_4960,var_4961,var_4962,)
func_4963 = relay.Function([var_4959,var_4960,var_4961,var_4962,], output)
mutated_mod['func_4963'] = func_4963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_4968 = func_2681_call()
call_4969 = func_2681_call()
output = call_4968
output2 = call_4969
func_4987 = relay.Function([], output)
mod['func_4987'] = func_4987
mod = relay.transform.InferType()(mod)
mutated_mod['func_4987'] = func_4987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4987_call = mutated_mod.get_global_var('func_4987')
call_4988 = func_4987_call()
output = call_4988
func_4989 = relay.Function([], output)
mutated_mod['func_4989'] = func_4989
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4992 = relay.var("var_4992", dtype = "bool", shape = ())#candidate|4992|()|var|bool
var_4993 = relay.var("var_4993", dtype = "bool", shape = (14, 3, 10))#candidate|4993|(14, 3, 10)|var|bool
bop_4994 = relay.logical_or(var_4992.astype('bool'), var_4993.astype('bool')) # shape=(14, 3, 10)
bop_5004 = relay.bitwise_or(bop_4994.astype('uint64'), var_4992.astype('uint64')) # shape=(14, 3, 10)
output = bop_5004
output2 = bop_5004
func_5010 = relay.Function([var_4992,var_4993,], output)
mod['func_5010'] = func_5010
mod = relay.transform.InferType()(mod)
mutated_mod['func_5010'] = func_5010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mutated_mod.get_global_var('func_5010')
var_5012 = relay.var("var_5012", dtype = "bool", shape = ())#candidate|5012|()|var|bool
var_5013 = relay.var("var_5013", dtype = "bool", shape = (14, 3, 10))#candidate|5013|(14, 3, 10)|var|bool
call_5011 = func_5010_call(var_5012,var_5013,)
output = call_5011
func_5014 = relay.Function([var_5012,var_5013,], output)
mutated_mod['func_5014'] = func_5014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3816_call = mod.get_global_var('func_3816')
func_3818_call = mutated_mod.get_global_var('func_3818')
call_5057 = relay.TupleGetItem(func_3816_call(), 0)
call_5058 = relay.TupleGetItem(func_3818_call(), 0)
var_5077 = relay.var("var_5077", dtype = "float32", shape = (936,))#candidate|5077|(936,)|var|float32
bop_5078 = relay.bitwise_xor(call_5057.astype('int64'), relay.reshape(var_5077.astype('int64'), relay.shape_of(call_5057))) # shape=(936,)
bop_5081 = relay.bitwise_xor(call_5058.astype('int64'), relay.reshape(var_5077.astype('int64'), relay.shape_of(call_5058))) # shape=(936,)
output = bop_5078
output2 = bop_5081
func_5085 = relay.Function([var_5077,], output)
mod['func_5085'] = func_5085
mod = relay.transform.InferType()(mod)
mutated_mod['func_5085'] = func_5085
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5086 = relay.var("var_5086", dtype = "float32", shape = (936,))#candidate|5086|(936,)|var|float32
func_5085_call = mutated_mod.get_global_var('func_5085')
call_5087 = func_5085_call(var_5086)
output = call_5087
func_5088 = relay.Function([var_5086], output)
mutated_mod['func_5088'] = func_5088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3162_call = mod.get_global_var('func_3162')
func_3164_call = mutated_mod.get_global_var('func_3164')
call_5118 = func_3162_call()
call_5119 = func_3162_call()
var_5123 = relay.var("var_5123", dtype = "uint16", shape = (10, 3, 14))#candidate|5123|(10, 3, 14)|var|uint16
bop_5124 = relay.floor_mod(call_5118.astype('float32'), relay.reshape(var_5123.astype('float32'), relay.shape_of(call_5118))) # shape=(10, 3, 14)
bop_5127 = relay.floor_mod(call_5119.astype('float32'), relay.reshape(var_5123.astype('float32'), relay.shape_of(call_5119))) # shape=(10, 3, 14)
output = relay.Tuple([bop_5124,])
output2 = relay.Tuple([bop_5127,])
func_5160 = relay.Function([var_5123,], output)
mod['func_5160'] = func_5160
mod = relay.transform.InferType()(mod)
mutated_mod['func_5160'] = func_5160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5161 = relay.var("var_5161", dtype = "uint16", shape = (10, 3, 14))#candidate|5161|(10, 3, 14)|var|uint16
func_5160_call = mutated_mod.get_global_var('func_5160')
call_5162 = func_5160_call(var_5161)
output = call_5162
func_5163 = relay.Function([var_5161], output)
mutated_mod['func_5163'] = func_5163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3858_call = mod.get_global_var('func_3858')
func_3860_call = mutated_mod.get_global_var('func_3860')
call_5180 = relay.TupleGetItem(func_3858_call(), 0)
call_5181 = relay.TupleGetItem(func_3860_call(), 0)
output = call_5180
output2 = call_5181
func_5184 = relay.Function([], output)
mod['func_5184'] = func_5184
mod = relay.transform.InferType()(mod)
output = func_5184()
func_5185 = relay.Function([], output)
mutated_mod['func_5185'] = func_5185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3410_call = mod.get_global_var('func_3410')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_5212 = relay.TupleGetItem(func_3410_call(), 0)
call_5213 = relay.TupleGetItem(func_3412_call(), 0)
var_5214 = relay.var("var_5214", dtype = "uint16", shape = (10, 3, 14))#candidate|5214|(10, 3, 14)|var|uint16
bop_5215 = relay.not_equal(call_5212.astype('bool'), relay.reshape(var_5214.astype('bool'), relay.shape_of(call_5212))) # shape=(10, 3, 14)
bop_5218 = relay.not_equal(call_5213.astype('bool'), relay.reshape(var_5214.astype('bool'), relay.shape_of(call_5213))) # shape=(10, 3, 14)
func_3729_call = mod.get_global_var('func_3729')
func_3730_call = mutated_mod.get_global_var('func_3730')
call_5239 = func_3729_call()
call_5240 = func_3729_call()
output = relay.Tuple([bop_5215,call_5239,])
output2 = relay.Tuple([bop_5218,call_5240,])
func_5247 = relay.Function([var_5214,], output)
mod['func_5247'] = func_5247
mod = relay.transform.InferType()(mod)
mutated_mod['func_5247'] = func_5247
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5248 = relay.var("var_5248", dtype = "uint16", shape = (10, 3, 14))#candidate|5248|(10, 3, 14)|var|uint16
func_5247_call = mutated_mod.get_global_var('func_5247')
call_5249 = func_5247_call(var_5248)
output = call_5249
func_5250 = relay.Function([var_5248], output)
mutated_mod['func_5250'] = func_5250
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5263 = relay.var("var_5263", dtype = "bool", shape = (2, 1, 12))#candidate|5263|(2, 1, 12)|var|bool
var_5264 = relay.var("var_5264", dtype = "bool", shape = (2, 9, 12))#candidate|5264|(2, 9, 12)|var|bool
bop_5265 = relay.logical_or(var_5263.astype('bool'), var_5264.astype('bool')) # shape=(2, 9, 12)
func_4575_call = mod.get_global_var('func_4575')
func_4576_call = mutated_mod.get_global_var('func_4576')
call_5271 = func_4575_call()
call_5272 = func_4575_call()
func_4250_call = mod.get_global_var('func_4250')
func_4251_call = mutated_mod.get_global_var('func_4251')
call_5273 = relay.TupleGetItem(func_4250_call(), 0)
call_5274 = relay.TupleGetItem(func_4251_call(), 0)
func_4102_call = mod.get_global_var('func_4102')
func_4104_call = mutated_mod.get_global_var('func_4104')
call_5284 = relay.TupleGetItem(func_4102_call(), 0)
call_5285 = relay.TupleGetItem(func_4104_call(), 0)
uop_5288 = relay.asin(var_5264.astype('float32')) # shape=(2, 9, 12)
output = relay.Tuple([bop_5265,call_5271,call_5273,call_5284,uop_5288,])
output2 = relay.Tuple([bop_5265,call_5272,call_5274,call_5285,uop_5288,])
func_5293 = relay.Function([var_5263,var_5264,], output)
mod['func_5293'] = func_5293
mod = relay.transform.InferType()(mod)
var_5294 = relay.var("var_5294", dtype = "bool", shape = (2, 1, 12))#candidate|5294|(2, 1, 12)|var|bool
var_5295 = relay.var("var_5295", dtype = "bool", shape = (2, 9, 12))#candidate|5295|(2, 9, 12)|var|bool
output = func_5293(var_5294,var_5295,)
func_5296 = relay.Function([var_5294,var_5295,], output)
mutated_mod['func_5296'] = func_5296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3410_call = mod.get_global_var('func_3410')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_5333 = relay.TupleGetItem(func_3410_call(), 0)
call_5334 = relay.TupleGetItem(func_3412_call(), 0)
output = call_5333
output2 = call_5334
func_5355 = relay.Function([], output)
mod['func_5355'] = func_5355
mod = relay.transform.InferType()(mod)
mutated_mod['func_5355'] = func_5355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5355_call = mutated_mod.get_global_var('func_5355')
call_5356 = func_5355_call()
output = call_5356
func_5357 = relay.Function([], output)
mutated_mod['func_5357'] = func_5357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3392_call = mod.get_global_var('func_3392')
func_3393_call = mutated_mod.get_global_var('func_3393')
call_5386 = func_3392_call()
call_5387 = func_3392_call()
uop_5393 = relay.sigmoid(call_5386.astype('float32')) # shape=(10, 3, 14)
uop_5395 = relay.sigmoid(call_5387.astype('float32')) # shape=(10, 3, 14)
uop_5407 = relay.sin(uop_5393.astype('float32')) # shape=(10, 3, 14)
uop_5409 = relay.sin(uop_5395.astype('float32')) # shape=(10, 3, 14)
func_4661_call = mod.get_global_var('func_4661')
func_4663_call = mutated_mod.get_global_var('func_4663')
call_5418 = func_4661_call()
call_5419 = func_4661_call()
bop_5429 = relay.minimum(uop_5407.astype('uint32'), relay.reshape(call_5386.astype('uint32'), relay.shape_of(uop_5407))) # shape=(10, 3, 14)
bop_5432 = relay.minimum(uop_5409.astype('uint32'), relay.reshape(call_5387.astype('uint32'), relay.shape_of(uop_5409))) # shape=(10, 3, 14)
output = relay.Tuple([call_5418,bop_5429,])
output2 = relay.Tuple([call_5419,bop_5432,])
func_5446 = relay.Function([], output)
mod['func_5446'] = func_5446
mod = relay.transform.InferType()(mod)
output = func_5446()
func_5447 = relay.Function([], output)
mutated_mod['func_5447'] = func_5447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4987_call = mod.get_global_var('func_4987')
func_4989_call = mutated_mod.get_global_var('func_4989')
call_5448 = func_4987_call()
call_5449 = func_4987_call()
output = call_5448
output2 = call_5449
func_5461 = relay.Function([], output)
mod['func_5461'] = func_5461
mod = relay.transform.InferType()(mod)
mutated_mod['func_5461'] = func_5461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5461_call = mutated_mod.get_global_var('func_5461')
call_5462 = func_5461_call()
output = call_5462
func_5463 = relay.Function([], output)
mutated_mod['func_5463'] = func_5463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4575_call = mod.get_global_var('func_4575')
func_4576_call = mutated_mod.get_global_var('func_4576')
call_5469 = func_4575_call()
call_5470 = func_4575_call()
var_5477 = relay.var("var_5477", dtype = "float32", shape = (10, 3, 14))#candidate|5477|(10, 3, 14)|var|float32
bop_5478 = relay.multiply(call_5469.astype('int16'), relay.reshape(var_5477.astype('int16'), relay.shape_of(call_5469))) # shape=(10, 3, 14)
bop_5481 = relay.multiply(call_5470.astype('int16'), relay.reshape(var_5477.astype('int16'), relay.shape_of(call_5470))) # shape=(10, 3, 14)
uop_5488 = relay.sqrt(var_5477.astype('float64')) # shape=(10, 3, 14)
func_4250_call = mod.get_global_var('func_4250')
func_4251_call = mutated_mod.get_global_var('func_4251')
call_5491 = relay.TupleGetItem(func_4250_call(), 0)
call_5492 = relay.TupleGetItem(func_4251_call(), 0)
func_648_call = mod.get_global_var('func_648')
func_651_call = mutated_mod.get_global_var('func_651')
var_5499 = relay.var("var_5499", dtype = "float32", shape = (462, 2))#candidate|5499|(462, 2)|var|float32
call_5498 = relay.TupleGetItem(func_648_call(relay.reshape(var_5499.astype('float32'), [924,])), 1)
call_5500 = relay.TupleGetItem(func_651_call(relay.reshape(var_5499.astype('float32'), [924,])), 1)
func_3099_call = mod.get_global_var('func_3099')
func_3101_call = mutated_mod.get_global_var('func_3101')
call_5519 = relay.TupleGetItem(func_3099_call(), 0)
call_5520 = relay.TupleGetItem(func_3101_call(), 0)
output = relay.Tuple([bop_5478,uop_5488,call_5491,call_5498,var_5499,call_5519,])
output2 = relay.Tuple([bop_5481,uop_5488,call_5492,call_5500,var_5499,call_5520,])
func_5527 = relay.Function([var_5477,var_5499,], output)
mod['func_5527'] = func_5527
mod = relay.transform.InferType()(mod)
var_5528 = relay.var("var_5528", dtype = "float32", shape = (10, 3, 14))#candidate|5528|(10, 3, 14)|var|float32
var_5529 = relay.var("var_5529", dtype = "float32", shape = (462, 2))#candidate|5529|(462, 2)|var|float32
output = func_5527(var_5528,var_5529,)
func_5530 = relay.Function([var_5528,var_5529,], output)
mutated_mod['func_5530'] = func_5530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4085_call = mod.get_global_var('func_4085')
func_4087_call = mutated_mod.get_global_var('func_4087')
call_5553 = func_4085_call()
call_5554 = func_4085_call()
output = relay.Tuple([call_5553,])
output2 = relay.Tuple([call_5554,])
func_5557 = relay.Function([], output)
mod['func_5557'] = func_5557
mod = relay.transform.InferType()(mod)
output = func_5557()
func_5558 = relay.Function([], output)
mutated_mod['func_5558'] = func_5558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3099_call = mod.get_global_var('func_3099')
func_3101_call = mutated_mod.get_global_var('func_3101')
call_5574 = relay.TupleGetItem(func_3099_call(), 0)
call_5575 = relay.TupleGetItem(func_3101_call(), 0)
func_811_call = mod.get_global_var('func_811')
func_816_call = mutated_mod.get_global_var('func_816')
const_5580 = relay.const([3.402301,4.553081,3.684415,-8.486935,5.213644,2.697059,-7.166835,-3.277818,2.582170,0.036527,-9.591563,-7.055886,-9.817735,7.510505,-7.107672,-9.549451,-1.791560,5.093833,3.065131,1.472851,2.262451,0.174414,6.150538,-7.333977,-6.129729,-5.001079,8.411075,8.975685,-8.175374,3.659442,5.776800,9.608379,9.486530,-8.241433,-9.704106,-1.574785,-4.827540,6.976777,1.286423,-0.460708,5.797116,-6.502166,-8.118917,3.369922,-5.214281,1.398932,-9.346048,0.641142,3.651139,-8.347136,-5.693082,-2.301513,-5.002777,-4.483775,4.356034,-4.807735,6.615269,0.418584,-4.094962,1.454058,1.273206,1.000743,7.763119,-4.666506,-4.041432,-2.463063,5.486951,7.509912,5.795805,3.032756,-7.984455,9.838358], dtype = "float64")#candidate|5580|(72,)|const|float64
const_5581 = relay.const([2.493252,-3.114905,3.281318,8.374705,-8.894937,-0.187515,-5.741484,1.472769,-0.609899,8.840766,5.372808,2.500071,-1.948845,6.130610,-8.057579,-2.207826,-5.753394,-6.678565,-0.829461,4.865484,5.640105,1.316880,6.414866,8.382981,3.148978,1.478829,2.955410,-9.413783,-3.333465,2.293038,-3.691903,-3.506126,-8.589838,-9.366198,-9.905466,-8.119965,-6.746988,-3.309116,-3.931460,8.961235,-1.306355,1.614542,0.815678,3.393880,7.823099,-1.491604,-8.851126,-1.235625,-7.885001,6.261901,-7.581461,-4.172986,-8.475350,-4.226932,3.411292,-8.474221,-6.991334,3.251447,3.987132,4.923204,1.532810,9.606260,-6.981557,5.528493,-9.878316,-9.740913,-3.010387,0.409968,1.268802,8.609549,6.547579,-9.812152,0.075147,8.252150,8.019774,-9.724703,4.543841,-4.724482,1.922783,-7.959706,1.590239,0.885017,3.918139,-1.720061,-5.244728,9.507268,2.692990,-0.219094,4.168542,-0.687547,-4.060504,-9.143173,-3.868013,-1.910000,-8.955354,4.381310,1.156041,0.709240,-7.254068,3.240535,3.624362,-4.174321,-8.256882,-0.216290,3.546433,-7.919818,3.662400,1.073048,-2.251132,4.571139,-8.432210,-8.539323,1.700616,-6.434882,8.492823,4.471735,3.757660,3.467204,-0.729234,5.700372,-9.039021,6.602147,-0.036244,1.315021,-5.872087,1.960546,-0.368031,-9.038751,0.589247,1.609436,-3.647378,-1.760925,-8.127202,-2.993057,7.153722,-1.667423,4.922975,5.678189,-7.889060,-3.241870,0.554857,4.074470,8.790113,-7.120776,7.051753,3.147231,-6.085934,4.101426,-7.610860,1.752808,2.955512,3.266937,8.362539,6.221850,-2.817267,8.202856,4.276758,0.335008,-4.537293,-1.027157,3.807208,-1.265326,7.488815,-0.372769,0.010161,8.897754,-3.603552,0.328248,1.582447,2.005558,5.710657,9.047337,-1.239004,3.855674,-5.989274,-4.110137,-8.020042,4.562441,-9.401040,6.664653,8.233416,-8.884192,3.764534,-0.989978,-8.936268,-1.730838,-3.012373,4.598863,-2.570577,5.296161,-5.963393,-2.997480,-8.155343,-9.987744,-9.910629,-8.412872,-3.193900,9.492192,9.080119,-7.706816,4.711450,8.299496,-8.290523,-2.943267,8.767563,-4.013942,2.818138,-1.174648,-3.073925,-8.212124,-2.070566,3.156310,-7.030972,8.946873,-4.468364,8.723648,-8.410097,6.538727,0.163339,-3.344447,1.879464,-0.413741,7.789621,8.697502,4.466770,-6.802071,-6.016624,-3.790424,-1.680442,-4.409568,9.275442,0.718860,-0.144384,2.436770,-4.616464,7.609347,-2.193213,8.291410,-5.019713,2.445153,-9.093752,-4.553236,3.813387,3.276834,-7.466144,-3.675716,-9.683811,4.981895,-8.249198,-8.834102,-0.995482,0.646313,-4.116142,5.051873,1.383230,-7.584028,-7.531558,-7.261211,-9.782740,-1.728460,-3.563860,-3.518612,-6.001408,3.778105,-7.140057,7.360836,6.546931,1.641921,8.206831,6.841446,-6.245538,8.034594,-6.744845,-1.981382,4.604500,2.311138,-5.719760,-5.214710,9.284155,3.837691,-9.876599,5.801916,8.979213,1.702041,5.152525,0.083420,-7.583479,-7.480638,9.772524,6.755247,7.342427,-9.995848,3.221978,-2.453677,-4.220961,-3.427112,6.634727,0.932567,9.017612,6.078012,0.798027,-7.176090,2.784113,-8.459576,3.776600,-6.869403,-8.418839,-2.596263,2.253791,-6.221013,1.827372,-2.328706,-6.333682,9.064568,-9.658172,-3.794445,-7.951775,-2.653637,-8.135616,-7.841866,-1.379017,-3.919784,1.849405,-5.719018,-5.180736,-4.187826,-1.016281,-3.154407,-7.955085,-5.172215,-5.525997,-6.460448,6.131866,1.407167,3.090835,3.992170,-4.859209,-1.931396,7.768425,-4.807248,-8.334434,8.638477,-0.237923,7.451544,4.325261,5.326214,1.811892,-7.166763,-7.696580,-3.662629,0.217678,-4.207100,8.642618,3.376804,8.149247,-3.315133,4.090854,-7.083536,7.422885,-4.707753,3.284622,4.774117,-1.959438,2.012465,9.302553,-2.909793,-4.156822,-2.159449,-3.564365,-2.507839,2.024490,0.227310,-2.566889,-4.232199,7.994595,-1.127957,1.314663,9.847709,-1.641286,-4.411346,-5.360105,-9.522869,3.019787,8.582821,2.712996,-6.077058,-9.402368,0.289808,6.747995,2.861570,-8.867844,-3.224044,8.312881,3.831222,-9.525413,8.377562,4.123060,2.996745,-8.631402,-4.778057,-3.672856,-7.284444,-5.007290,1.712798,-5.536570,-6.242298,5.031475,-0.913154,4.866851,-1.049565,7.740929,-4.275735,4.844148,-1.698999,-8.270500,1.870944,4.272573,-4.474666,6.909440,1.845568,-0.113218,1.855352,-3.006140,-5.495629,6.738496,-4.221100,-0.948130,9.471755,-1.700353,7.584364,-3.908024,-8.629195,-0.680736,6.096048,-5.134251,8.670552,1.044420,-2.881864,-1.003868,6.718974,3.625297,2.136002,-5.281023,-5.414705,-5.607492,-1.710550,-3.954852,-5.164037,4.990201,7.831115,-9.382296,-9.600364,0.251674,-3.720597,3.963339,6.215694,9.038923,-2.524018,-4.241533,-2.856961,-4.243752,5.804708,9.289455,4.625592,-7.411214,7.096444,-0.027654,-2.177301,-9.759988,2.686573,-0.481309,1.910820,3.054988,5.548331,-7.638322,-6.694193,-3.969212,3.606929,2.742430,-9.783999,2.388383,5.414307,2.770506,5.869618,-5.236043,0.355346,-1.751482,-6.599041,-2.025799,5.415322,0.884577,7.560067,5.894474,-8.498968,-6.171885,-4.447017,-1.144513,3.755364,3.098380,7.587844,2.781034,-8.318667,2.245698,-7.444543,9.123411,-3.500395,3.486963,-3.748245,4.268751,-1.231529,-7.149480,9.193354,-5.407934,-7.033535,-5.963781,2.682640,6.408898,9.693215,-9.279319,-7.745743,0.689186,-8.087261,1.243457,7.485283,4.407752,-1.109842,5.650128,-5.598481,-2.848418,1.010035,7.693190,-5.485548,9.229552,2.602742,8.378416,9.749262,5.315505,-6.177037,-7.228775,1.244083,2.396023,4.704438,7.764470,-0.873302,9.493585,-7.004353,-3.116105,6.690612,-6.727840,1.568092,-3.282727,-5.389359,-6.117600,-7.381159,9.857561,1.242399,1.138512,5.747128,-2.457809,-8.443002,2.424741,-7.787688,-9.689772,2.663291,8.640831,-5.374996,3.016605,1.961177,4.175169,8.599244,1.531019,4.793849,8.571168,1.283783,-4.694174,2.006223,6.662798,9.636828,7.771464,-5.805716,4.197195,3.017333,-2.470500,3.459677,-3.931624,-1.224653,0.809356,1.716930,-1.969265,-4.559374,-2.135446,-1.845566,-7.673535,4.451869,7.495494,-2.070399,3.878213,7.965512,-8.290704,5.196096,2.773987,-3.324280,-3.969243,-6.209038,-6.147564,4.830935,-1.985796,-6.917285,-4.269137,4.397301,-0.935872,-0.983258,1.696210,6.053627,-2.055135,-2.245926,-7.380099,-2.907821,-4.470141,1.638152,-9.702099,-5.184842,-3.171127,3.149427,-0.155782,-3.068845,-0.495710,-0.308428,9.718407,5.034237,8.139487,8.028906,-1.141143,-5.811971,-7.773792,3.706982,-8.704002,-9.532645,6.393330,8.694387,-8.232972,-1.342699,3.006295,-9.242347,-3.835160,-3.707997,8.643628,2.510694,-0.203526,4.593018,3.172955,8.970994,-3.671172,-8.410521,9.702531,4.269989,-7.517997,-2.393295,3.013408,-2.441935,-5.360260,7.815122,-0.911931,0.189682,-4.167262,-0.313867,8.031267,4.900364,7.300884,4.747395,-3.360000,-4.285207,-5.806078,-5.421399,7.387485,8.786682,5.621588,8.094769,7.870500,-9.861204,4.401420,3.869011,-5.210987,-3.435310,2.331877,-6.404514,5.714772,-5.093312,5.599103,9.044921,5.467010,-1.431081,1.267971,-6.507835,-3.223884,-5.059040,1.958161,3.179671,-8.338951,4.341371,2.384462,4.616396,-1.114728,0.553621,-2.337900,-4.342537,6.668833,8.518734,0.681203,-6.525482,-2.491095,9.884651,-3.767041,-1.514336,7.574386,-4.374775,1.433721,1.505840,1.595480,-3.340781,0.102209,0.630553,4.231090,1.454266,1.900352,5.858652,-7.027691,8.906503,9.287822,8.613462,-3.851658,1.599699,-0.025295,3.881913,0.814512,0.295566,3.949319,-3.566926,0.522024,8.624139,4.547703,2.160262,1.486887,-7.360268,-2.962224,7.464160,-4.437973,-0.202028,1.968701,-9.233780,2.713000,6.142766,4.537694,-1.164372,9.916502,5.660562,-1.011703,-9.711391,4.586007,-4.490165,4.599879,-6.162247,-5.779253,-4.708584,2.181092,4.357782,-8.498854,6.581562,-4.515763,6.099191,0.773932,-3.949317,0.332005,5.482236,8.250466,-2.243040,-8.452165,-5.152099,0.618476,-3.392189,-9.822994,-5.520852,2.468741,-6.793046,3.048420,2.108352,-4.432294,-0.165410,8.877338,-7.125503,6.043627,5.336440,-4.756723,-0.629639,-9.601062,-9.808902,-0.798300,6.125824,-7.989514,2.870769,4.533907,-4.340040,-0.394405,3.978079,-9.837367,8.818173,-2.571473,1.900836,-0.482554,0.134392,7.802402,5.303154,-7.955481,5.763808,-7.660098,-7.658031,3.783233,4.573741,0.358217,0.243057,0.292636,0.815042,3.884649,-5.652021,-6.218301,-2.275264,1.402176,-4.916405,6.190253,-7.586144,-1.547773,7.293502,4.440370,-8.144160,-9.405578,-4.629472,-8.329244,9.060508,5.348069,5.101724,6.272131,0.661491,-8.500787,-4.335040,3.854671,4.487377,4.236962,4.133463,-0.001123,8.341993,-7.677149,-7.382970,5.688733,-3.939850,8.147163,6.560820,-2.073085,3.422185,-6.542387,-7.192524,-4.341562,1.136084,-9.801211,-1.661123,-4.216806,4.822645,5.332674,2.872453,-5.249875,2.686004,-4.484615,-1.806638,2.239014,1.079696,-1.524156,2.571789,7.874908,-3.703912,-4.630198,-2.644440,6.571504,2.061553,8.599328,1.141622,-1.880235,6.759845,6.159569,3.815418,9.144368,-2.138327,-1.550819,-5.791819,5.872744,-7.512332,3.777831,-4.722738,-7.884551,-3.813046,7.183460,9.832147,-5.460841,-5.347575,7.179680,6.721850,-3.158909,-7.699669,6.029911,-9.070770,0.021910,-7.325584,-4.372229,0.662535,-1.581453,-1.145592,-5.059030,-7.612534,1.789950,-6.797818,-8.851244,4.196010,-1.685752,-2.094538,7.447682,-8.908103,9.754141,3.489379,6.143047,-2.763229,-6.086424,3.917646,3.265344,-6.039941,-7.043327,5.422407,-7.077924,4.613355], dtype = "float32")#candidate|5581|(936,)|const|float32
call_5579 = relay.TupleGetItem(func_811_call(relay.reshape(const_5580.astype('float64'), [4, 2, 9]), relay.reshape(const_5580.astype('float64'), [4, 2, 9]), relay.reshape(const_5581.astype('float32'), [8, 13, 9]), ), 4)
call_5582 = relay.TupleGetItem(func_816_call(relay.reshape(const_5580.astype('float64'), [4, 2, 9]), relay.reshape(const_5580.astype('float64'), [4, 2, 9]), relay.reshape(const_5581.astype('float32'), [8, 13, 9]), ), 4)
output = relay.Tuple([call_5574,call_5579,const_5580,const_5581,])
output2 = relay.Tuple([call_5575,call_5582,const_5580,const_5581,])
func_5589 = relay.Function([], output)
mod['func_5589'] = func_5589
mod = relay.transform.InferType()(mod)
output = func_5589()
func_5590 = relay.Function([], output)
mutated_mod['func_5590'] = func_5590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3099_call = mod.get_global_var('func_3099')
func_3101_call = mutated_mod.get_global_var('func_3101')
call_5657 = relay.TupleGetItem(func_3099_call(), 0)
call_5658 = relay.TupleGetItem(func_3101_call(), 0)
output = call_5657
output2 = call_5658
func_5685 = relay.Function([], output)
mod['func_5685'] = func_5685
mod = relay.transform.InferType()(mod)
output = func_5685()
func_5686 = relay.Function([], output)
mutated_mod['func_5686'] = func_5686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3729_call = mod.get_global_var('func_3729')
func_3730_call = mutated_mod.get_global_var('func_3730')
call_5732 = func_3729_call()
call_5733 = func_3729_call()
func_4661_call = mod.get_global_var('func_4661')
func_4663_call = mutated_mod.get_global_var('func_4663')
call_5735 = func_4661_call()
call_5736 = func_4661_call()
output = relay.Tuple([call_5732,call_5735,])
output2 = relay.Tuple([call_5733,call_5736,])
func_5740 = relay.Function([], output)
mod['func_5740'] = func_5740
mod = relay.transform.InferType()(mod)
mutated_mod['func_5740'] = func_5740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5740_call = mutated_mod.get_global_var('func_5740')
call_5741 = func_5740_call()
output = call_5741
func_5742 = relay.Function([], output)
mutated_mod['func_5742'] = func_5742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3099_call = mod.get_global_var('func_3099')
func_3101_call = mutated_mod.get_global_var('func_3101')
call_5779 = relay.TupleGetItem(func_3099_call(), 0)
call_5780 = relay.TupleGetItem(func_3101_call(), 0)
func_4958_call = mod.get_global_var('func_4958')
func_4963_call = mutated_mod.get_global_var('func_4963')
const_5796 = relay.const([False,False,True,False,True], dtype = "bool")#candidate|5796|(5,)|const|bool
const_5797 = relay.const([[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[False],[False],[True],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[False],[True],[False],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[False],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[True],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[True],[True],[True],[False],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True]], dtype = "bool")#candidate|5797|(750, 1)|const|bool
var_5798 = relay.var("var_5798", dtype = "float32", shape = (3600,))#candidate|5798|(3600,)|var|float32
call_5795 = relay.TupleGetItem(func_4958_call(relay.reshape(const_5796.astype('bool'), [1, 5, 1]), relay.reshape(const_5797.astype('bool'), [10, 5, 15]), relay.reshape(var_5798.astype('float32'), [3600,]), relay.reshape(const_5797.astype('float64'), [10, 5, 15]), ), 0)
call_5799 = relay.TupleGetItem(func_4963_call(relay.reshape(const_5796.astype('bool'), [1, 5, 1]), relay.reshape(const_5797.astype('bool'), [10, 5, 15]), relay.reshape(var_5798.astype('float32'), [3600,]), relay.reshape(const_5797.astype('float64'), [10, 5, 15]), ), 0)
func_1649_call = mod.get_global_var('func_1649')
func_1654_call = mutated_mod.get_global_var('func_1654')
var_5802 = relay.var("var_5802", dtype = "uint8", shape = (3120,))#candidate|5802|(3120,)|var|uint8
const_5803 = relay.const([1.300191,8.265851,5.547025,-6.149599,5.217072,6.656883,-8.552528,9.634493,0.291316,2.554379,-9.125370,-5.603347,1.420228,-4.922831,-6.150065,-1.338194,-7.423227,9.914649,-9.003823,-4.747473,-1.747392,-1.575644,5.081443,-3.599694,8.186930,-4.043365,1.126367,-8.525163,8.984914,6.626789,6.049457,8.047515,-4.810610,6.219695,-9.174033,-9.723047,-1.377702,-3.566344,-3.964795,-0.724614,-1.825459,-7.330075,-4.291142,8.598549,6.012061,5.548157,-6.895039,-8.481242,5.453933,-4.415791,-0.406814,-9.606022,9.349600,-3.963167,2.906057,6.264488,6.090659,-2.166539,-7.166989,8.395988,-2.548071,-9.588103,-0.317323,7.264393,6.567407,0.373510,-0.759801,-1.056686,-2.771066,-5.405135,7.985934,-4.160869,0.446321,-7.344417,-1.588701,2.838811,-4.537877,9.792957,-0.453355,-4.728044,-0.879443,2.486820,0.043433,-6.357781,-0.688522,-4.334074,-0.976808,4.504033,4.591563,-9.995782,0.521727,-9.649188,3.370363,-5.009969,7.687428,5.092359,9.760728,-0.081256,-6.995057,-7.485267,8.839643,3.497329,5.847000,6.713032,-6.967578,-9.328895,2.698796,-3.614685,3.757087,3.561358,0.191213,-0.149463,6.025446,-9.954060,-2.980796,0.464835,1.344602,4.869711,1.781118,9.608692,-4.851788,4.635312,-6.663002,9.832134,4.589343,-6.658533,0.606507,6.985293,-9.963323,8.816015,-6.726111,-2.074964,1.895846,8.950794,5.465129,-4.703726,-4.296195,8.988768,4.138512,-2.684063,0.218966,-0.767593,-4.377871,-0.739414,5.537177,1.026178,-3.540878,8.321218,8.604957,-0.606093,1.185890,2.349290,-1.438896,-7.766810,6.659955,-2.210251,-1.504301,9.499137,-6.494810,0.129513,5.532104,-8.113841,-9.339138,1.542900,-3.525977,-6.900192,3.126835,7.815440,6.544828,5.235454,0.781781,9.777769,-2.026782,-8.550028,-6.852707,-3.683246,-9.873296,3.467995,-0.265096,-0.870922,-0.368634,-9.280845,-9.397043,-5.675785,-2.390531,-6.140610,3.081425,7.336674,2.514027,0.367805,4.624717,6.667975,-4.436138,-2.898572,-2.688393,7.755605,-2.895646,-9.324735,7.394884,-4.195645,-9.018849,5.496937,-6.790533,-8.096830,-6.601498,-9.140724,9.421468,5.919966,-4.437463,3.039921,1.599215,-0.273507,-6.148299,-7.259314,6.568380,2.189092,-6.429012,2.534677,9.784572,-8.113805,9.417442,4.150058,-5.197949,-4.607582,8.846966,2.763722,-6.745910,-0.338256,-2.367654,2.751699,5.454614,-2.741258,5.535239,-2.739962,5.632747,6.854200,0.577394,8.380193,1.674472,2.557828,0.680925,4.491568,-4.104912,0.564709,5.907502,-1.089472,2.861778,-8.203170,-4.401713,-1.511377,6.087155,4.817144,-2.228742,-0.821945,-7.345111,-1.479163,8.866061,-3.686394,6.730468,-5.320621,-3.927865,7.118982,5.211128,-0.346348,8.185148,6.575159,-8.880948,8.875852,-7.421093,7.151442,2.975443,-7.119212,6.836333,-2.504314,-2.799875,1.639253,6.285055,7.638592,-0.824020,8.447464,-6.262899,-1.149925,3.856252,0.666809,-2.267555,-4.740772,3.301051,-7.647659,9.226865,2.756037,1.944839,-9.659884,-7.218430,-3.797203,-7.413250,-7.192695,-5.011015,3.141836,-7.309675,3.066395,4.901665,4.879974,0.321201,-0.045418,-7.736446,-8.817367,-7.788503,2.689672,-7.685327,-1.829418,7.448765,3.978961,9.733235,0.155417,-7.070132,-9.648418,-5.468587,-7.091810,1.678673,6.526308,-3.582441,-0.478267,-0.425974,7.084120,4.708195,4.250370,-5.002004,-6.364018,-3.493531,-6.281671,0.803642,-3.979587,-5.605438,8.539695,9.440867,0.600551,-0.983938,4.029002,9.459372,-4.368848,-1.429256,2.073544,-3.923377,-3.412245,9.727261,3.846183,-2.013402,5.146656,-1.618230,-9.685448,2.341158,-4.406276,1.390923,-6.404177,-9.719060,6.687757,6.284798,-0.426200,2.017348,-1.331639,5.199162,9.917872,4.535356,-1.604373,0.298932,-6.208813,-2.727252,-8.442658,-3.222903,1.660922,2.236910,5.404212,9.096634,7.252953,-8.817584,-8.566023,2.910850,7.567278,-0.397818,2.242511,0.705044,-1.122008,-1.929906,2.419836,3.902432,1.000318,-7.094825,9.291631,-9.455688,-6.412268,-2.074171,-2.740355,-9.098585,1.516322,0.830247,-5.429339,-8.533832,9.317613,3.340206,8.131988,6.443524,-7.824620,7.830388,1.153304,-6.332717,-0.891144,-8.515386,-6.692059,2.674190,8.514314,-1.780405,1.609629,-0.535384,1.239150,9.676111,4.591304,-8.111994,-4.747856,8.031930,1.061188,4.431655,6.405736,4.942937,-2.883884,7.954823,1.321984,2.786567,-4.031848,3.791666,-7.915001,-4.652591,3.218436,6.132851,-1.161906,-8.922066,-8.039597,3.277424,9.652157,2.727258,5.785828,-8.233389,4.708618,5.760858,5.762051,0.447503,-2.744231,5.291254,-8.863678,8.135825,-6.905434,8.410980,-9.006182,-3.536978,3.599307,8.570382,-8.368467,6.863110,-9.470242,1.694806,-7.918938,7.493117,-7.126394,-1.937581,6.513677,9.354549,9.021107,-7.077776,3.107560,-3.035028,-5.537608,-8.157282,0.429084,-5.479023,-9.700342,8.677218,5.705011,3.098384,-3.498515,-8.408574,-9.317979,1.929499,-3.516175,3.510793,-1.870735,-0.789480,7.616048,1.876703,1.990425,-3.873409,1.586033,-6.129682,-0.607059,-9.912886,9.742347,-2.285036,-3.512108,-9.889404,8.234407,-3.077946,9.585926,1.681512,5.672587,7.155053,-1.202285,0.304641,7.111513,-1.505982,9.289163,-0.099197,-4.205669,-2.313343,-3.006191,3.778663,-2.409950,0.703454,0.655248,7.733819,9.091534,9.350320,-3.907730,4.751958,-2.568662,-9.056548,-1.798604,-4.608021,6.891727,9.049238,9.890411,-3.612207,7.609649,2.778549,-0.316903,3.263656,9.824153,0.698413,1.915589,-3.560888,7.561450,-6.764687,9.094357,-0.835395,9.871404,2.139252,-2.890552,0.911459,3.220446,-7.758447,8.813601,-7.609371,-3.143693,-8.369615,-8.845322,8.750782,3.368192,-7.186081,2.337631,-3.716682,-3.447721,3.794336,2.267642,-9.292437,-5.222322,-4.518887,3.087806,-2.117058,-2.129384,5.747376,9.266111,-6.314170,-7.100539,-1.783051,7.991312,7.805175,-3.584385,8.920216,3.094125,-9.593221,-7.419328,5.208952,2.824310,-3.571675,-9.361417,1.908867,-9.998488,8.443311,-5.427297,-4.570893,-5.499886,0.245389,1.381684,-3.743415,6.464891,-4.972372,9.712623,0.938858,8.041542,-6.483076,5.961656,-3.674654,-6.044630,0.583417,5.676027,-8.295329,7.669098,-0.934311,-9.808246,6.340861,9.204124,-0.499414,6.268776,-0.289309,4.295207,-7.790327,-0.467460,-9.630761,-5.100232,3.049519,-3.571849,9.166924,9.483409,-3.044683,-6.483347,5.743950,6.489082,-4.056039,2.976692,2.284175,-0.899939,-3.897855,-5.125532,9.552783,-3.850643,-0.213557,-0.799949,-4.781932,5.050808,-7.364798,-6.716999,-4.676575,8.432675,-4.829391,5.875291,2.838440,8.630638,-6.578246,-5.577451,8.637433,-0.958275,8.027204,1.515849,-7.485925,-2.116563,9.985243,7.292823,-1.517317,-1.522240,4.006016,0.491884,0.985699,-0.886470,-4.932325,4.001856,3.075024,-2.251605,1.520620,-0.725779,-8.769573,-1.555496,0.478705,2.886763,-0.939968,-3.644404,1.691622,-1.868852,7.254700,-2.676547,2.174340,2.462794,4.400264,-9.150807,6.497171,6.839635,2.863541,8.709817,5.032705,6.810036,3.269015,7.850419,0.350115,1.583041,4.210271,-7.237494,-2.766575,8.466998,0.120042,-7.045529,9.554067,3.167550,3.414645,7.992600,9.841186,-6.565660,5.871405,-2.507539,5.298535,6.912697,3.408413,4.940859,9.780273,-0.734191,-1.522577,4.180705,-5.226944,6.568127,-7.110220,-2.067693,6.764908,-1.348652,-8.914098,4.170250,-8.110583,-2.610140,-6.855081,4.501838,5.967022,8.754273,-8.794019,7.047083,3.076165,-8.636097,7.088154,7.087980,9.754609,2.219738,-2.704123,2.416319,0.772529,9.301551,-0.764606,6.643633,-2.544630,0.062181,-8.451087,6.021851,1.697464,6.994623,-8.582437,9.297916,-7.448521,7.745263,9.897566,4.407728,9.072555,2.421403,-9.709671,8.569494,6.735221,1.537507,1.829256,1.532184,3.276662,2.260608,2.205445,5.141737,-5.631419,6.581035,-1.732350,-4.569930,6.603433,8.346710,7.817196,-5.238130,4.241606,-5.550254,-3.363461,-5.973976,-2.297027,8.135031,-7.788571,1.713199,2.785159,0.039311,5.402685,5.481355,1.090891,-7.004405,9.703900,8.179433,5.025725,8.283559,1.577156,7.496933,-5.244896,8.582513,3.549671,8.841287,0.200110,-7.815502,-1.843974,0.029287,-0.211945,-0.766575,-7.669239,2.488498,7.249454,4.420806,-9.290203,-8.596760,2.751701,5.076419,-1.054055,-5.770115,5.570015,5.397099,-7.030057,4.824892,-4.721077,8.114697,2.991213,-6.216122,5.978368,1.645762,-5.658172,-8.069627,-3.420543,0.326760,-4.099777,-8.564039,-0.957902,-3.717234,1.821352,-5.759276,5.872917,-8.132318,-7.212184,-4.182266,9.965273,2.749067,8.384679,4.402993,2.809724,4.091705,-8.622601,-9.782554,7.243498,-1.753455,-0.103096,-0.811281,-6.097047,5.933227,-0.246646,-0.191114,4.948408,5.599013,-6.965230,-9.471995,2.269550,5.735512,-8.917084,4.146875,-8.883014,-7.904288,-0.456562,1.936780,0.713993,6.503248,-0.263444,7.822915,9.659130,-5.992748,-2.555976,4.107151,-5.152894,7.574957,-4.022815,-0.174246,-1.990729,-9.452983,-5.335220,3.588366,-1.265464,0.825461,0.787551,-6.337223,6.730680,-7.707296,-1.977929,-8.931108,-9.543776,8.031066,-4.231216,-7.468463,-6.357063,4.277690,-2.406411,-7.652666,0.954377,2.523975,1.492075,0.484987,-2.591782,-1.764220,4.162856,-5.902131,-2.842974,3.677660,7.089720,-2.699246,-3.455772,-3.249844,-7.160609,3.220947,-4.824668,-3.771857,-4.640992,1.895137,4.640459,6.463302,-3.578991,4.079037,9.990399,7.913834,-0.625271,-3.450921,5.071299,0.658048,-4.747069,3.193281,6.267887,-6.030043,2.684754,-1.695477,3.320737,4.003586,5.900652,-5.122633], dtype = "float32")#candidate|5803|(936,)|const|float32
call_5801 = relay.TupleGetItem(func_1649_call(relay.reshape(var_5802.astype('uint8'), [15, 16, 13]), relay.reshape(var_5802.astype('uint8'), [15, 16, 13]), relay.reshape(const_5803.astype('float32'), [8, 13, 9]), ), 2)
call_5804 = relay.TupleGetItem(func_1654_call(relay.reshape(var_5802.astype('uint8'), [15, 16, 13]), relay.reshape(var_5802.astype('uint8'), [15, 16, 13]), relay.reshape(const_5803.astype('float32'), [8, 13, 9]), ), 2)
output = relay.Tuple([call_5779,call_5795,const_5796,const_5797,var_5798,call_5801,var_5802,const_5803,])
output2 = relay.Tuple([call_5780,call_5799,const_5796,const_5797,var_5798,call_5804,var_5802,const_5803,])
func_5807 = relay.Function([var_5798,var_5802,], output)
mod['func_5807'] = func_5807
mod = relay.transform.InferType()(mod)
mutated_mod['func_5807'] = func_5807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5807_call = mutated_mod.get_global_var('func_5807')
var_5809 = relay.var("var_5809", dtype = "float32", shape = (3600,))#candidate|5809|(3600,)|var|float32
var_5810 = relay.var("var_5810", dtype = "uint8", shape = (3120,))#candidate|5810|(3120,)|var|uint8
call_5808 = func_5807_call(var_5809,var_5810,)
output = call_5808
func_5811 = relay.Function([var_5809,var_5810,], output)
mutated_mod['func_5811'] = func_5811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2853_call = mod.get_global_var('func_2853')
func_2855_call = mutated_mod.get_global_var('func_2855')
call_5824 = func_2853_call()
call_5825 = func_2853_call()
func_929_call = mod.get_global_var('func_929')
func_932_call = mutated_mod.get_global_var('func_932')
const_5838 = relay.const(8, dtype = "int8")#candidate|5838|()|const|int8
call_5837 = relay.TupleGetItem(func_929_call(relay.reshape(const_5838.astype('int8'), [])), 1)
call_5839 = relay.TupleGetItem(func_932_call(relay.reshape(const_5838.astype('int8'), [])), 1)
bop_5846 = relay.minimum(const_5838.astype('float64'), call_5837.astype('float64')) # shape=(13, 15, 5)
bop_5849 = relay.minimum(const_5838.astype('float64'), call_5839.astype('float64')) # shape=(13, 15, 5)
bop_5850 = relay.floor_mod(call_5837.astype('float64'), const_5838.astype('float64')) # shape=(13, 15, 5)
bop_5853 = relay.floor_mod(call_5839.astype('float64'), const_5838.astype('float64')) # shape=(13, 15, 5)
output = relay.Tuple([call_5824,bop_5846,bop_5850,])
output2 = relay.Tuple([call_5825,bop_5849,bop_5853,])
func_5854 = relay.Function([], output)
mod['func_5854'] = func_5854
mod = relay.transform.InferType()(mod)
mutated_mod['func_5854'] = func_5854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5854_call = mutated_mod.get_global_var('func_5854')
call_5855 = func_5854_call()
output = call_5855
func_5856 = relay.Function([], output)
mutated_mod['func_5856'] = func_5856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4085_call = mod.get_global_var('func_4085')
func_4087_call = mutated_mod.get_global_var('func_4087')
call_5875 = func_4085_call()
call_5876 = func_4085_call()
output = relay.Tuple([call_5875,])
output2 = relay.Tuple([call_5876,])
func_5902 = relay.Function([], output)
mod['func_5902'] = func_5902
mod = relay.transform.InferType()(mod)
mutated_mod['func_5902'] = func_5902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5902_call = mutated_mod.get_global_var('func_5902')
call_5903 = func_5902_call()
output = call_5903
func_5904 = relay.Function([], output)
mutated_mod['func_5904'] = func_5904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4575_call = mod.get_global_var('func_4575')
func_4576_call = mutated_mod.get_global_var('func_4576')
call_5930 = func_4575_call()
call_5931 = func_4575_call()
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
call_5936 = func_2681_call()
call_5937 = func_2681_call()
func_2803_call = mod.get_global_var('func_2803')
func_2807_call = mutated_mod.get_global_var('func_2807')
const_5940 = relay.const([-8,9,-7,-5,-4,-6,7,-1,-4,-3,-1,1,10,-1,10,6,4,-9,2,8,8,10,10,10,-6,-10,-5,-10,10,7,9,9,-9,-4,2,-9,-6,8,4,-9,-10,-7,1,-10,-9,10,-10,-3,7,4,-1,-4,1,4,-9,-6,-1,5,-10,-2,2,1,1,5,-3,-1,-9,1,6,-7,-10,3,-8,5,3,-1,9,9,5,-10,-2,-1,6,4,9,5,6,1,8,6,-3,-6,-6,-2,10,9,1,-4,-4,-8,-10,2,-3,-2,1,2,-4,6,-5,2,10,-9,1,-7,10,8,8,-5,-7,2,6,1,4,3,6,7,5,7,9,-1,-1,10,10,-2,6,-6,10,4,7,-7,1,10,-2,-5,3,2,4,-5,9,3,3,-8,7,1,9,8,2,7,-5,4,8,-3,-10,-1,8,-4,5,6,-2,-7,-2,3,3,7,4,-7,9,-7,8,8,3,-7,-4,2,9,-8,-6,-5,1,-6,-5,-7,5,-7,-3,-1,7,-7,-10,-8], dtype = "int64")#candidate|5940|(200,)|const|int64
var_5941 = relay.var("var_5941", dtype = "float32", shape = (924,))#candidate|5941|(924,)|var|float32
call_5939 = relay.TupleGetItem(func_2803_call(relay.reshape(const_5940.astype('int64'), [200,]), relay.reshape(var_5941.astype('float32'), [924,]), ), 1)
call_5942 = relay.TupleGetItem(func_2807_call(relay.reshape(const_5940.astype('int64'), [200,]), relay.reshape(var_5941.astype('float32'), [924,]), ), 1)
output = relay.Tuple([call_5930,call_5936,call_5939,const_5940,var_5941,])
output2 = relay.Tuple([call_5931,call_5937,call_5942,const_5940,var_5941,])
func_5949 = relay.Function([var_5941,], output)
mod['func_5949'] = func_5949
mod = relay.transform.InferType()(mod)
var_5950 = relay.var("var_5950", dtype = "float32", shape = (924,))#candidate|5950|(924,)|var|float32
output = func_5949(var_5950)
func_5951 = relay.Function([var_5950], output)
mutated_mod['func_5951'] = func_5951
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5975 = relay.var("var_5975", dtype = "int8", shape = (1, 10, 5))#candidate|5975|(1, 10, 5)|var|int8
var_5976 = relay.var("var_5976", dtype = "int8", shape = (9, 10, 5))#candidate|5976|(9, 10, 5)|var|int8
bop_5977 = relay.less(var_5975.astype('bool'), var_5976.astype('bool')) # shape=(9, 10, 5)
output = relay.Tuple([bop_5977,])
output2 = relay.Tuple([bop_5977,])
func_5988 = relay.Function([var_5975,var_5976,], output)
mod['func_5988'] = func_5988
mod = relay.transform.InferType()(mod)
mutated_mod['func_5988'] = func_5988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5988_call = mutated_mod.get_global_var('func_5988')
var_5990 = relay.var("var_5990", dtype = "int8", shape = (1, 10, 5))#candidate|5990|(1, 10, 5)|var|int8
var_5991 = relay.var("var_5991", dtype = "int8", shape = (9, 10, 5))#candidate|5991|(9, 10, 5)|var|int8
call_5989 = func_5988_call(var_5990,var_5991,)
output = call_5989
func_5992 = relay.Function([var_5990,var_5991,], output)
mutated_mod['func_5992'] = func_5992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3858_call = mod.get_global_var('func_3858')
func_3860_call = mutated_mod.get_global_var('func_3860')
call_6034 = relay.TupleGetItem(func_3858_call(), 0)
call_6035 = relay.TupleGetItem(func_3860_call(), 0)
output = relay.Tuple([call_6034,])
output2 = relay.Tuple([call_6035,])
func_6036 = relay.Function([], output)
mod['func_6036'] = func_6036
mod = relay.transform.InferType()(mod)
output = func_6036()
func_6037 = relay.Function([], output)
mutated_mod['func_6037'] = func_6037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2853_call = mod.get_global_var('func_2853')
func_2855_call = mutated_mod.get_global_var('func_2855')
call_6089 = func_2853_call()
call_6090 = func_2853_call()
func_2891_call = mod.get_global_var('func_2891')
func_2894_call = mutated_mod.get_global_var('func_2894')
const_6102 = relay.const([6,-6,-10,-3,10,-8,-8,-2,1,-8,6,10,-10,-10,8,4,-7,-8,-7,4,10,-8,10,9,-1,-10,-2,7,-1,-1,-10,5,-5,-4,6,2,2,4,-8,-5,1,8,-8,-5,1,9,1,9,-7,-10,1,-8,-10,6,7,-10,9,-2,-2,3,3,5,4,-1,4,-3,-3,-7,3,-2,-5,9,-8,-8,-7,4,-4,5,-2,10,-6,-1,6,-2,1,9,6,-1,-10,7,-1,7,-1,-5,9,-10,-2,3,-9,7,1,-8,-6,5,10,-3,-4,-8,5,1,3,-8,-10,-1,10,-1,-5,-9,-7,-9,6,-8,6,-7,-3,4,8,9,5,-9,9,3,8,-9,6,-4,1,3,9,-8,-8,8,-2,-8,-8,-1,6,3,8,10,1,6,-7,-1,1,-9,-10,7,-6,3,1,-1,8,2,5,9,8,-9,-6,-1,10,6,-9,-5,7,8,-10,4,2,-3,7,-4,9,8,-4,10,1,5,8,-4,8,2,1,-7,9,-10,3,-3,-9,-8,2,-8,-4,2,5,-9,-9,2,-5,3,-8,-2,8,3,-6,10,-9,-2,1,6,-1,-10,6,-2,-10,6,-7,1,4,3,-7,2,9,-10,8,-8,-3,-1,10,-9,-8,8,-5,-1,5,3,-6,7,-6,10,4,-3,6,-7,7,5,-3,1,6,-9,7,-4,-4,2,9,-6,-8,2,-4,10,-5,9,10,5,3,8,3,-4,-2,-9,-8,3,-5,-10,2,-10,-7,-4,-8,-2,3,2,-1,-5,5,-1,10,-9,-1,-1,10,-9,-10,-3,-3,9,6,-2,-10,-9,10,7,8,-2,-8,-1,6,-5,-4,-5,7,1,-5,-2,9,-1,-3,-8,6,-9,4,-3,1,-7,10,2,-5,-3,-7,7,-8,4,9,-4,1,-1,3,-5,4,9,-3,-1,5,9,9,-5,-4,-10,-10,-8,-10,-6,-3,-7,-5,10,7,-6,-5,4,1,-5,-8,-8,9,-9,-6,-2,-8,-7,7,-2,-1,9,-3,2,-2,-7,-1,-9,2,1,-5,-7,4,-7,-3,5,7,-8,7,-4,-6,-9,7,-9,-8,-7,3,-5,9,-8,-10,4,7,10,3,-2,7,8,-1,-5,7,-1,7,7,-7,8,-8,-9,-6,8,4,-2,3,-7,9,3,-3,8,10,5,10,7,6,2,6,5,10,-3,9,7,-1,6,7,-1,9,8,-9,-9,2,1,3,-6,-5,-8,-8,-4,7,10,-4,-5,-8,4,8,4,-5,8,3,3,-4,4,-7,-8,8,10,-2,5,-8,7,2,-5,-8,-9,8,1,-2,-1,-5,5,10,5,10,10,-1,-5,-10,-4,-3,3,2,3,-1,4,5,9,-5,-5,-6,-5,4,2,10,4,8,7,3,7,-2,2,-2,-3,5,4,-3,-10,6,-10,-9,-10,-4,-8,-4,-3,-8,6,-5,-7,-6,-4,7,-5,8,-9,-2,8,5,4,-1,-10,3,-6,-6,9,-3,9,8,3,1,-5,-3,8], dtype = "int8")#candidate|6102|(572,)|const|int8
call_6101 = relay.TupleGetItem(func_2891_call(relay.reshape(const_6102.astype('int8'), [572,])), 2)
call_6103 = relay.TupleGetItem(func_2894_call(relay.reshape(const_6102.astype('int8'), [572,])), 2)
output = relay.Tuple([call_6089,call_6101,const_6102,])
output2 = relay.Tuple([call_6090,call_6103,const_6102,])
func_6111 = relay.Function([], output)
mod['func_6111'] = func_6111
mod = relay.transform.InferType()(mod)
mutated_mod['func_6111'] = func_6111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6111_call = mutated_mod.get_global_var('func_6111')
call_6112 = func_6111_call()
output = call_6112
func_6113 = relay.Function([], output)
mutated_mod['func_6113'] = func_6113
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6119 = relay.const([[[-1.802729,-6.743645,-2.346785,0.444770,-9.917664,-9.824171,4.998995,-7.086634,-0.030583,-9.689219,4.491420,-5.913590,-8.746118],[7.054232,-6.453434,7.612947,-4.014711,3.472822,-5.789309,-3.147761,-5.172455,9.128340,-3.462859,-4.174502,6.056767,0.507947],[5.375284,-4.044610,-4.869141,-2.840661,-5.864620,-2.976156,4.212646,2.310689,-3.013579,-8.904813,-6.674301,-0.030716,-0.726338],[4.333847,-6.023451,-1.572453,-3.882060,8.159493,-4.897111,7.030963,1.444510,6.192724,5.743527,-3.333053,5.578034,-2.591485]],[[9.025255,-6.822429,-1.326326,4.772074,2.526112,-8.615242,-5.246319,-5.258149,5.244937,-6.758574,3.564410,6.788516,-1.451858],[7.260915,5.292013,-0.409817,-3.956821,-5.553198,-2.331751,3.431757,1.592988,-4.550723,8.133930,2.835474,-3.405907,2.493470],[7.189392,3.132574,3.585862,6.685657,-9.166067,7.981135,7.798406,9.742372,7.603195,1.117365,9.639045,-5.875409,-0.102935],[9.767674,0.786103,6.877681,-9.874758,8.232212,4.891750,-7.153131,-4.656413,-0.498413,3.865803,5.252107,7.496633,5.856923]],[[-1.608290,5.079546,5.206987,-2.954725,-2.232133,-4.397649,-6.940514,-2.393990,-4.247087,9.414282,-2.524738,-7.177503,-1.198981],[-7.150997,-0.742152,-6.274085,0.035443,-5.295564,-2.955864,-1.297230,-6.179313,2.463718,-8.645710,-8.931721,-8.567094,1.174509],[7.549621,-0.655419,6.651820,1.636829,5.331590,5.008700,-0.751597,0.937716,-4.176425,2.156386,-2.270528,9.489468,-7.149343],[-5.243847,2.955308,2.325872,1.376077,-1.385628,-4.427133,0.133878,9.928568,-9.817303,-0.545102,8.303316,9.335775,4.606345]],[[9.229431,-1.628145,-6.509516,2.115474,-0.520748,-9.449035,-6.686918,4.045291,9.497195,-7.274468,8.989816,-8.567741,2.944040],[-7.020994,-3.042062,-5.942691,-2.375818,8.833512,6.456622,-1.521354,1.707105,-6.820021,-8.033312,-0.162104,-0.608961,-2.293081],[3.414407,2.593885,-0.717660,-6.887562,4.853371,0.173438,8.229207,-5.699162,8.116818,9.559508,0.912591,-6.354147,8.215606],[1.586322,-8.101665,8.118936,-2.585099,-6.675401,-1.472509,5.568566,7.484701,2.671076,9.679096,-3.279603,-6.150917,9.317618]],[[0.261195,8.667453,-9.997339,-4.747496,8.452935,2.060005,-2.946377,-7.160795,-5.509742,-7.608376,-1.326703,-8.207283,8.921421],[-4.125909,-2.827342,8.856470,-0.186979,-9.026826,-4.665578,2.835189,-7.753545,0.514350,-0.596943,3.735563,-9.098008,-5.698946],[1.826677,-7.304342,5.972678,7.430970,8.772593,8.085312,2.624286,-6.884695,-8.043350,3.901542,-3.769517,0.930948,9.433622],[7.932211,-0.591842,-7.330269,0.421357,-7.376360,-0.957514,-1.978539,6.402751,5.491759,-6.980713,-0.843282,6.416530,1.399699]],[[-5.642038,-5.926967,-0.206835,1.489686,9.803786,-5.679532,9.451845,-5.955264,-3.515313,2.707074,-1.465881,2.598411,-1.976462],[-9.877760,2.026081,-1.370522,-1.965725,9.405185,-5.681891,-7.375626,6.166508,-0.267582,0.103800,-4.548406,-1.826612,5.791857],[-4.830420,5.214655,-4.527251,-9.933221,2.451315,-1.658388,0.569845,-9.231353,-5.336456,3.432994,-3.322422,-2.651301,-2.948959],[1.361470,-5.425154,-9.145105,4.812153,-2.428427,7.993030,-7.812815,0.025305,-0.272670,-4.616164,-5.725167,5.961173,-5.200313]],[[-5.635427,-0.881352,8.147396,1.525322,-6.100295,-8.319127,7.143325,-1.690140,0.759991,0.775009,3.038622,3.711981,0.712606],[-1.631359,-5.852493,-7.205740,-4.606191,7.911004,-5.333417,6.625145,-7.003547,5.225860,-9.902978,-5.921507,-0.284382,-7.469894],[-0.298800,3.824198,-3.598839,-8.862288,2.894700,4.624037,6.411811,5.012282,8.939548,8.257387,7.175158,6.266394,-7.650037],[2.135093,3.890352,-3.358019,-8.253965,2.749746,5.181652,4.886023,-1.412398,-7.680121,2.734365,-5.962584,6.996879,5.083391]],[[-9.115206,-4.275674,-7.303828,7.778030,-5.103087,5.649112,1.464558,7.285839,9.212831,1.546223,5.431935,6.797198,-8.805523],[4.566131,4.505549,-4.562505,2.578579,-4.065044,-7.880343,2.355424,7.816629,8.480459,-9.481720,-7.365679,8.632454,5.990238],[8.130596,-9.647591,-8.634845,3.718897,-8.706092,4.608968,7.625915,6.282423,7.999386,-9.474750,-0.748213,-2.639551,-3.561264],[-4.757037,-6.094581,-3.869755,-5.056299,5.895434,-7.857272,4.754648,-2.414588,-0.257724,-0.864407,-1.190490,-4.028684,6.657111]],[[-7.838115,5.429018,-4.186942,3.736331,-2.212274,-3.285187,-7.399148,7.918053,3.482734,8.933163,-1.578178,2.318749,4.335772],[-5.690496,-8.719081,-7.631728,3.169477,7.238468,2.366246,4.507221,-8.896421,7.402539,4.707346,1.230666,4.206476,2.438763],[-9.821449,-3.077092,-9.489646,7.777666,-4.844928,2.125383,-4.036950,9.945097,5.565754,4.384857,9.184454,-5.222850,3.797535],[7.633890,-0.886843,-9.380979,8.467097,0.145207,-3.943340,-0.164080,-0.725899,-8.020917,-9.139094,3.315874,-3.636030,8.707451]],[[4.580031,9.290780,7.360647,3.054700,3.760649,-2.466016,-2.356431,-7.788512,-3.078519,-8.300161,-8.318354,8.996423,-1.006347],[8.310255,1.244510,-6.001697,-7.979843,-0.565802,-9.954813,-2.597225,1.939968,-2.858899,-3.815804,-4.997063,6.105109,3.903982],[-9.417451,-0.380933,8.325319,7.413715,-9.485658,8.669967,0.752363,-7.470798,7.061084,9.781052,5.692041,9.493135,-7.046403],[0.995750,-7.080763,-9.562298,1.552707,9.999595,-7.317883,-4.084981,6.186988,8.386738,0.633617,-6.545954,-5.354073,5.718672]]], dtype = "float32")#candidate|6119|(10, 4, 13)|const|float32
var_6120 = relay.var("var_6120", dtype = "float32", shape = (10, 4, 13))#candidate|6120|(10, 4, 13)|var|float32
bop_6121 = relay.greater_equal(const_6119.astype('bool'), relay.reshape(var_6120.astype('bool'), relay.shape_of(const_6119))) # shape=(10, 4, 13)
output = bop_6121
output2 = bop_6121
func_6127 = relay.Function([var_6120,], output)
mod['func_6127'] = func_6127
mod = relay.transform.InferType()(mod)
mutated_mod['func_6127'] = func_6127
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6128 = relay.var("var_6128", dtype = "float32", shape = (10, 4, 13))#candidate|6128|(10, 4, 13)|var|float32
func_6127_call = mutated_mod.get_global_var('func_6127')
call_6129 = func_6127_call(var_6128)
output = call_6129
func_6130 = relay.Function([var_6128], output)
mutated_mod['func_6130'] = func_6130
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6134 = relay.var("var_6134", dtype = "uint64", shape = (8, 15, 9))#candidate|6134|(8, 15, 9)|var|uint64
var_6135 = relay.var("var_6135", dtype = "uint64", shape = (8, 15, 9))#candidate|6135|(8, 15, 9)|var|uint64
bop_6136 = relay.less_equal(var_6134.astype('bool'), relay.reshape(var_6135.astype('bool'), relay.shape_of(var_6134))) # shape=(8, 15, 9)
func_3858_call = mod.get_global_var('func_3858')
func_3860_call = mutated_mod.get_global_var('func_3860')
call_6144 = relay.TupleGetItem(func_3858_call(), 0)
call_6145 = relay.TupleGetItem(func_3860_call(), 0)
func_733_call = mod.get_global_var('func_733')
func_737_call = mutated_mod.get_global_var('func_737')
const_6159 = relay.const([[-2,-1],[-6,-6],[9,1],[3,-8],[-1,-7],[-10,-8],[-10,2],[8,4],[-5,-4],[3,8],[-6,-3],[-10,-5],[8,10],[10,-6],[6,-6],[2,-2],[-6,-9],[-8,2],[6,4],[-8,9],[-3,-2],[8,3],[6,6],[-1,6],[-7,-8],[-10,1],[-6,3],[4,-10],[2,9],[-1,-2],[2,-4],[8,-10],[-5,-2],[-9,-2],[-7,-10],[9,-1],[-1,-1],[-3,-9],[10,-9],[3,3],[-10,-4],[7,-7],[-5,9],[-7,4],[-1,10],[9,10],[-5,8],[-2,8],[8,-2],[-10,-1],[-8,-8],[1,2],[-9,7],[-4,-7],[-7,8],[8,3],[10,10],[6,6],[4,-6],[-7,8],[-3,-4],[-3,7],[-6,1],[-3,-1],[-10,4],[4,8],[3,4],[6,-6],[8,-7],[10,3],[1,1],[6,10],[5,-2],[3,9],[-5,7],[-7,-10],[2,-8],[-3,8],[2,-1],[-3,4],[2,-9],[7,-4],[4,-6],[4,-8],[5,-9],[-6,4],[6,8],[-6,-7],[10,5],[5,4],[1,-10],[7,-1],[5,-3],[-7,-1],[-4,-2],[3,9],[7,-5],[-5,2],[6,-3],[2,-5],[4,-8],[-7,-5],[7,-1],[7,6],[-6,-6],[7,-7],[2,5],[-3,-8],[10,-9],[-4,10],[-2,-2],[3,-4],[-6,-9],[2,7],[5,-5],[4,-7],[-9,3],[-3,-5],[-4,-7],[-2,5],[5,2],[-8,-9],[-10,-3],[-10,-9],[9,4],[-5,-10],[-3,-7],[9,-4],[3,-2],[-4,-6],[-7,-1],[1,8],[3,5],[-9,8],[-3,-9],[-6,7],[-1,-2],[1,-1],[9,7],[-3,-2],[-5,4],[-2,-7],[7,5],[1,3],[-4,8],[3,6],[-3,-1],[-6,-1],[-10,6],[-7,-4],[9,8],[-3,1],[-5,3],[-8,1],[-9,-6],[-7,-7],[-1,-6],[-6,-1],[-2,-2],[-9,2],[-9,6],[-5,-9],[-1,-1],[-3,5],[3,-10],[-4,1],[-1,10],[-5,-8],[1,-6],[-10,1],[1,2],[-4,5],[10,4],[8,9],[8,1],[-4,-2],[2,-1],[2,-4],[6,6],[-2,-7],[8,-4],[5,-8],[-5,-10],[8,3],[-1,-2],[8,7],[-1,6],[-6,6],[2,-10],[5,4],[7,-8],[8,-4],[-6,2],[-2,8],[2,7],[-4,-1],[2,5],[-1,7],[3,-4],[-7,-7],[-3,-6],[10,8],[-9,1],[5,2],[-7,-7],[6,-8],[-7,7],[9,6],[-5,-8],[-8,8],[-1,-3],[-2,6],[-1,-8],[4,5],[6,-7],[6,-10],[-8,7],[-7,7],[1,-4],[4,2],[4,-2],[4,2],[-9,-9],[-4,7],[9,2],[-8,-4],[9,-4],[2,8],[-6,4],[8,-1],[7,-4],[-3,7],[-7,-10],[7,6],[3,-9],[-5,-9],[-9,-10],[1,6],[5,10],[-2,-2],[5,-8],[5,10],[-5,1],[8,-1],[-4,-6],[6,2],[-3,-1],[-9,-8],[2,-1],[-9,5],[2,3],[7,-8],[7,-6],[7,6],[10,7],[-10,-6],[-10,-9],[9,-10],[-9,2],[-7,9],[-6,8],[-4,-3],[4,6],[6,6],[10,-2],[9,-2],[5,4],[-6,-7],[-9,8],[-3,-8],[3,-1],[-7,-3],[-2,7],[-9,10],[3,-5],[7,3],[-8,9],[-2,-8],[-10,-1],[8,5],[-1,1],[-1,3],[5,5],[1,-7],[-7,-2],[-3,1]], dtype = "int8")#candidate|6159|(286, 2)|const|int8
call_6158 = relay.TupleGetItem(func_733_call(relay.reshape(const_6159.astype('int8'), [4, 13, 11]), relay.reshape(const_6159.astype('int8'), [4, 13, 11]), ), 3)
call_6160 = relay.TupleGetItem(func_737_call(relay.reshape(const_6159.astype('int8'), [4, 13, 11]), relay.reshape(const_6159.astype('int8'), [4, 13, 11]), ), 3)
bop_6161 = relay.bitwise_or(var_6135.astype('uint64'), relay.reshape(var_6134.astype('uint64'), relay.shape_of(var_6135))) # shape=(8, 15, 9)
func_3235_call = mod.get_global_var('func_3235')
func_3239_call = mutated_mod.get_global_var('func_3239')
call_6166 = relay.TupleGetItem(func_3235_call(relay.reshape(call_6144.astype('uint16'), [10, 3, 14]), relay.reshape(call_6144.astype('uint16'), [10, 3, 14]), ), 2)
call_6167 = relay.TupleGetItem(func_3239_call(relay.reshape(call_6144.astype('uint16'), [10, 3, 14]), relay.reshape(call_6144.astype('uint16'), [10, 3, 14]), ), 2)
output = relay.Tuple([bop_6136,call_6144,call_6158,const_6159,bop_6161,call_6166,])
output2 = relay.Tuple([bop_6136,call_6145,call_6160,const_6159,bop_6161,call_6167,])
func_6169 = relay.Function([var_6134,var_6135,], output)
mod['func_6169'] = func_6169
mod = relay.transform.InferType()(mod)
var_6170 = relay.var("var_6170", dtype = "uint64", shape = (8, 15, 9))#candidate|6170|(8, 15, 9)|var|uint64
var_6171 = relay.var("var_6171", dtype = "uint64", shape = (8, 15, 9))#candidate|6171|(8, 15, 9)|var|uint64
output = func_6169(var_6170,var_6171,)
func_6172 = relay.Function([var_6170,var_6171,], output)
mutated_mod['func_6172'] = func_6172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3031_call = mod.get_global_var('func_3031')
func_3032_call = mutated_mod.get_global_var('func_3032')
call_6177 = relay.TupleGetItem(func_3031_call(), 0)
call_6178 = relay.TupleGetItem(func_3032_call(), 0)
func_4516_call = mod.get_global_var('func_4516')
func_4517_call = mutated_mod.get_global_var('func_4517')
call_6183 = relay.TupleGetItem(func_4516_call(), 3)
call_6184 = relay.TupleGetItem(func_4517_call(), 3)
func_3479_call = mod.get_global_var('func_3479')
func_3482_call = mutated_mod.get_global_var('func_3482')
const_6189 = relay.const([8,3,9,8,1,8,5,4,4,9,-10,10,3,-5,1,-6,-9,1,-4,-4,9,7,-1,1,-5,-7,-9,-2,-5,5,-8,5,9,-5,-6,-9,1,1,1,7,-2,4,-9,6,-5,2,-3,1,4,6,-5,7,5,7,-9,3,-9,3,-3,-4,1,10,-2,9,-6,-5,1,8,9,-1,2,-10,-9,8,3,10,7,-9,2,-4,4,-1,3,-1,5,-1,-8,-5,-5,10,-7,1,2,-5,-9,-3,10,7,1,6,-4,2,-9,10,2,-1,10,-4,-3,5,10,6,-1,-3,-3,-10,-7,8,9,-1,7,1,3,10,-6,1,-4,-6,-10,-9,10,-9,-2,-3,2,-4,-6,-8,10,-9,4,4,7,-5,1,-7,5,-5,2,10,4,4,-8,-10,-10,-9,-9,2,-3,10,-3,4,-4,7,-9,-9,-10,2,5,10,-1,10,10,-5,-1,8,5,-3,10,-4,-8,1,-9,-10,5,2,7,-9,5,1,-2,-1,-10,5,-6,-7,5,6,1,10,6,-5,3,-1,7,-4,2,5,2,9,10,-6,-4,-10,-10,2,-10,8,-8,-2,4,5,5,-7,-9,-9,-4,5,-7,2,5,3,10,9,-4,-4,-10,4,8,-4,-8,7,6,-10,9,2,8,9,9,-6,10,-1,9,-6,7,-6,-3,-6,9,5,2,1,-5,5,-8,-6,9,9,-3,6,6,-4,7,9,-8,3,2,-7,4,-2,3,1,5,1,-6,5,-9,3,9,-1,6,8,-7,8,8,-4,-6,-2,-4,9,10,-3,3,6,-10,2,2,-8,2,10,4,1,-8,2,-8,3,-5,8,4,3,-2,10,2,2,-3,-5,8,-6,-9,-2,9,6,4,3,9,-2,10,4,1,7,-10,-1,-8,-7,-5,-5,-4,8,4,-6,9,5,-1,1,-5,-7,1,-5,5,8,-1,-4,-4,3,-4,-3,8,-4,7,2,-4,-8,7,5,-3,1,6,9,8,1,10,6,-4,-6,6,4,6,-6,-5,-4,6,4,-9,-3,4,8,10,9,-4,4,2,-1,-9,-1,10,3,-9,9,8,6,7,-6,-9,10,2,5,-1,-4,5,-3,1,4,-2,9,-6,2,10,-10,-2,4,6,10,8,-8,-9,2,6,1,7,-8,6,6,-9,-7,-1,-5,-10,4,8,3,-4,7,-8,-10,8,-10,9,2,-6,-8,-10,4,9,10,-2,7,9,-8,2,-4,5,9,-3,3,-10,6,6,-1,-10,2,-5,9,-5,-3,-2,-1,2,-4,-1,-4,-8,10,-2,8,-4,-5,-1,5,1,3,4,2,-4,-2,-1,-3,-9,-2,-5,-5,1,10,-4,8,-10,9,-4,3,-7,-2,-5,9,9,-7,2,-3,-9,6,5,-9,4,-2,-8,8,-4,-6,-5,-3,6,9,9,2,-5,5,2,-9,-3,7,-8,9,-5,-10,-1,5,2,-7,5,3,10,2,-2,-10,-3,-6,-2,-4,-1,-9,7,10,-7,-10,-8,4,1,-10,10,7,7,-6,-10,7,-5,4,10,1,10,-2,4,-8,4,9,-6,-9,2,3,6,-5,-6,-2,2,-6,5,-3,-5,-8,-9,-5,5,-9,9,-1,1,5,7,-6,1,3,9,6,7,3,1,2,-1,-3,2,-3,-1,4,8,-7,1,4,6,-6,-4,-10,8,-10,-4,9,-8,10,-3,-7,4,9,-4,7,-2,4,3,-2,-5,-2,-7,6,3,5,10,-8,-6,2,-7,1,-6,-7,6,-2,4,-1,-2,4,-2,-5,1,-9,-8,8,-1,-7,3,-6,5,-1,9,-8,8,10,1,2,-7,-2,3,-2,-10,-1,-3,1,4,-5,-3,-6,4,-10,-1,10,7,-5,-1,-5,6,-1,3,-6,-3,10,5,8,-3,-6,-5,6,-8,10,-10,10,1,6,5,-10,3,6,-7,-9,7,9,-2,3,8,9,8,-5,-1,4,-10,-6,-6,3,9,6,-7,-7,1,-1,3,6,-9,2,-1,6,1,-6,-6,-10,3,10,-2,1,5,2,-1,-9,1,-10,8,-6,10,5,3,9,-1,5,6,-9,-9,-8,3,-1,-9,-9,-7,-7,8,-2,-7,-6,2,4,-1,-8,5,-1,1,3,2,-8,-8,7,7,7,-2,2,8,1,-10,10,-5,4,-2,8,10,5,1,3,1,9,5,-9,-9,4,1,5,-4,2,7,-2,-5,4,-6,1,-9,5,4,-8,-6,4,-6,-3,-7,6,4,10,2,-5,-1,10,-9,-3,-10,-7,3,6,-8,8,8,9,4,3,-3,8,5,5,4,-6,-9,5,-2,-9,-1,-8,-5,-3,8,4,-4,-7,-2,-2,10,-3,3,-1,8,-9,-9,10,-6,2,8,-7,-10,-1,9,-1,5,8,-9,-5,8,-7,-1,-4,9,2,4,2,-8,-8,-10,3,-2,-3,9,9,-2,-8,-5,-1,-6,4,6,6,10,-8,3,-4,-4,8,-5,-1,-3,-1,9,3,-6,-7,-4,6,-9,2,8,8,5,3,3,10,-3,4,-2,9,-7,-8,-1,5,-9,-5,5,8,9,3,-7,10,1,-2,-5,10,-9,-3,5,2,4,-10,1,2,-1,-4,7,6,9,10,-1,6,-1,10,-4,9,-8,-1,-8,8,6,-8,7,-1,-6,-10,3,6,-4,9,7,-8,-8,-3,-9,-8,3,10,-1,-6,-3,-1,4,-2,4,-6,9,5,4,6,10,-10,9,3,-2,7,7,4,7,-10,7,-1,2,6,7,9,5,10,-1,5,2,-1,-4,-10,8,2,-8,2,3,5,-7,7,8,-7,10,4,-6,3,-9,10,5,-3,-9,2,-2,-1,-5,-2,-6,4,2,8,-5,7,3,3,1,10,2,1,-1,4,1,-1,-6,-10,4,-8,8,7,5,1,6,6,-3,2,9,2,-4,8,-9,-10,-8,-6,-6,-8,-2,6,10,8,1,9,-5,-2,5,9,-8,-9,-7,-1,-7,-3,9,7,-3,5,4,-6,9,10,-5,10,-9,-10,-5,9,-3,8,-6,-3,9,-5,-6,-4,6,-8,4,-6,8,-1,-6,-2,-5,-1,9,-9,4,3,-4,4,2,3,-10,9,5,-1,-10,-2,-5,-5,-8,3,10,-3,-5,-4,-9,-3,8,-6,-1,7,-2,-8,3,1,10,5,-4,-2,-3,3,5,-10,-7,-7,-5,-2,1,-4,-5,-6,-3,-5,-9,-5,5,-6,-4,-5,-5,9,-5,9,-3,2,1,3,1,2,-6,2,-5,-4,-7,9,-9,3,1,2,8,2,-4,-5,10,4,-2,-7,-5,5,-10,-3,7,5,-10,2,2,7,-6,2,-8,3,-3,9,3,-1,10,-4,-1,-5,-7,-1,10,7,-10,3,5,2,-8,7,4,-6,1,-3,6,-5,4,4,-4,1,9,-4,2,2,6,5,7,-6,1,1,7,2,2,7,-4,1,-4,10,10,10,-3,-8,6,7,5,-5,-3,-6,-1,-10,1,2,6,-3,-4,-4,8,5,10,-1,1,-7,-3,9,6,-10,-9,-4,4,3,2,5,1,-6,-6,-6,-3,1,-8,1,-8,-2,-5,1,-6,7,2,-8,4,6,10,-6,6,2,-6,9,6,-10,-8,10,7,-1,-1,-4,2,-4,-3,-9,8,5,4,7,-3,-1,-9,-6,8,5,-6,-4,-10,-5,9,-4,-7,10,-10,1,3,8,-5,-6,2,4,-2,-8,-7,9,-9,4,1,7,-8,-9,-2,-2,-1,-2,10,3,-4,-8,6,-8,2,2,5,-7,10,3,2,1,-4,8,-8,-9,4,5,7,-6,5,-10,-9,-1,-2,-1,2,10,6,9,9,-8,5,2,7,9,-5,-10,8,3,10,6,9,-5,6,-1,-3,-5,-6,-10,-4,-5,-10,5,-8,1,6,9,5,-10,-9,-3,4,1,-6,3,2,3,2,-3,8,-10,1,-10,5,-7,-3,-9,10,-6,-2,8,-4,-7,1,-9,-4,-5,-10,1,-3,2,-1,-2,10,7,5,-8,-10,-7,7,-2,-7,-7,-2,-2,9,2,4,10,1,8,7,-7,4,-8,2,-3,-8,7,1,4,3,9,-9,-3,-8,-6,-8,-2,9,-3,-1,-1,7,9,-7,-7,9,10,-6,-6,-4,9,-5,4,2,-6,-6,-4,-7,2,-3,6,6,8,7,-6,6,4,-8,-9,10,3,-2,-10,9,-3,-2,6,5,1,10,6,7,-1,-8,5,-6,5,-7,-9,8,1,-2,-9,-1,-10,2,-8,6,3,-10,4,-9,3,4,2,-3,2,-10,-4,-3,-3,-10,5,-4,10,9,9,-2,5,4,6,2,7,-10,4,-5,10,2,1,-6,-8,-6,-4,-1,4,8,-7,9,2,-2,3,-5,-1,10,1,-5,-4,7,-9,9,-6,-3,-7,4,10,-8,-3,7,10,-8,-5,1,1,-7,8,4,-3,4,9,-9,-4,-1,-10,3,-6,-10,-3,2,10,-6,7,10,-7,2,-2,5,10,5,6,1,-8,-5,-3,-6,-8,9,2,-7,-4,5,10,6,-5,1,10,5,2,-10,9,-5,-8,-2,4,9,8,5,-3,-9,3,-2,-9,-2,9,5,-10,4,-5,-8,8,8,-3,-6,-6,-5,-5,4,3,7,10,9,10,-7,2,5,-5,7,-6,4,-8,-10,5,-8,-10,10,7,-7,5,-4,-1,6,-10,4,8,7,-7,10,1,-2,-3,10,-4,-8,2,5,-1,-9,-5,-6,-1,8,9,1,8,-10,6,2,8,-8,-10,-6,-5,1,-8,-3,-9,8,-3,-8,2,1,-10,7,-10,10,9,2,-1,-6,-1,9,-3,10,7,6,-7,-9,-9,5,-3,-1,1,8,8,2,-4,1,-9,3,10,7,-6,2,-3,5,4,-10,-1,8,4,-9,10,-8,-5,-4,2,-10,-6,-2,-3,-6,-4,3,-7,-5,10,1,-5,8,-4,5,-4,2,9,-10,2,-9,-2,-2,-1,2,-10,-1,6,7,2,3,6,5,-1,10,-10,-2,9,-1,-10,4,-8,8,-4,1,6,-9,9,-10,8,-6,6,1,1,-10,7,-2,10,-10,-3,-10,6,1,-3,8,10,-2,-9,6,8,-10,1,-1,-9,5,1,3,5,5,-7,-1,-4,-5,-9,2,6,-2,3,6,-6,6,-6,-7,6,-9,2,10,-5,8,6,1,1,7,-1,-7,-3,6,-3,10,-6,2,1,5,-7,-1,-2,-2,-8,-8,3,-5,8,6,8,-3,-5,2,7,1,10,-6,4,7,9,2,1,-8,3,-2,-10,-5,10,-2,-5,-10,6,-9,-3,4,-2,-4,6,-1,6,9,-8,4,2,-4,10,1,-9,-8,-9,-6,1,-3,2,7,9,5,-10,5,6,8,3,-1,2,-5,-4,-9,9,-3,7,-10,-5,2,-3,-7,8,4,-5,-4,-6,5,7,6,-7,8,10,8,2,-3,1,-5,-5,10,6,6,-10,4,6,-5,1,-9,-1,8,-9,10,3,8,-6,8,2,-8,5,-2,-3,6,-2,7,-3,9,-8,-1,6,-8,10,6,10,-6,5,-5,-9,-2,-7,-6,-4,2,8,2,5,-8,-6,8,-10,10,-6,-4,8,-6,7,-5,1,-4,1,10,-7,-4,5,-10,8,-10,7,-1,-2,-1,-1,1,-6,-10,10,-4,10,-10,9,10,10,-6,-6,3,4,-8,-2,8,3,-6,7,9,-9,-2,1,-8,2,9,10,5,-7,8,1,9,1,-6,-7,-6,6,-5,-10,9,8,7,1,2,4,-9,-6,-8,4,-7,-8,7,1,-2,-4,10,-8,-10,8,7,1,-6,4,4,-5,-1,4,-1,-10,5,-2,6,3,-9,9,2,9,7,-9,3,3,-10,-10,3,4,3,-4,-5,8,-7,-9,-5,6,-2,-4,-2,-7,-4,-5,-8,-5,-4,2,6,-5,-7,4,1,-3,-7,-7,3,-3,-4,4,-5,3,-9,-1,6,-10,8,-4,-3,3,-5,-9,8,-5,-8,2,-9,-3,1,3,-7,10,-4,8,1,-7,4,3,8,2,-7,9,1,-4,5,-2,2,-2,6,4,-9,-2,-7,-5,-2,-10,3,-9,-1,-1,-2,-1,-4,-1,-10,6,5,6,-4,8,-8,-9,8,-7,10,-7,10,-5,2,-5,-10,-6,10,1,-1,-9,9,-1,-5,8,-6,-6,-5,-1,8,1,-8,6,-7,1,6,-8,-10,-4,9,10,8,-2,-8,10,-10,5,8,-5,8,2,7,-1,-10,2,8,5,-8,7,-9,-4,-9,-6,-10,-1,-8,-6,-4,-2,3,-4,-5,-5,5,9,-2,-2,1,10,-10,2,6,10,7,6,5,-1,10,-3,1,-8,6,5,-9,-1,-6,4,-2,-1,8,9,1,6,-9,6,-3,-2,-6,8,-10,4,-3,7,3,-4,-7,-6,6,-2,1,2,4,-6,-1,-6,3,-8,-6,-2,2,2,3,-2,8,-4,9,6,2,-4,6,3,-9,6,5,-6,5,10,6,7,-3,-4,6,8,1,10,-1,7,-5,5,2,-7,-9,-7,9,8,6,6,1,-10,5,10,-5,8,-9,-10,-4,1,5,8,-3,-8,10,1,-8,-4,4,-3,-8,-1,-3,1,9,3,-10,-2,9,2,-3,-1,-7,-8,-6,10,-9,4,-9,9,4,5,-3,7,-6,1,5,2,4,10,10,-7,-8,-1,3,8,2,-3,8,-6,10,-6,7,4,-8,3,-4,-9,1,-1,9,-4,-3,-3,7,-7,-7,4,1,-7,-4,-8,-3,3,6,8,3,6,7,7,1,2,7,3,-4,6,3,6,-1,-7,5,2,-5,4,-8,-7,6,-6,-3,-10,9,5,-10,-5,-2,-7,8,-4,6,7,2,-2,3,-5,6,5,1,-7,-5,-9,-7,-5,-6,9,1,-5,-2,-3,-4,3,-4,-5,-10,-4,-5,3,1,-6,-7,8,-1,-10,9,-7,-4,5,9,-2,2,-6,-1,6,7,9,-7,3,-10,-10,-8,4,-5,1,8,-5,-9,7,9,4,-7,3,1,-1,-9,-2,6,-1,4,7,5,-4,2,-6,5,1,4,4,-8,-6,6,7,3,-6,-10,-1,-4,3,6,-7,1,1,-1,-1,-1,-7,-3,2,-2,5,9,1,2,-9,3,-7,5,-8,-4,5,-5,6,-9,-6,-7,7,8,9,-9,-8,6,5,-5,8,-3,7,-7,8,1,1,4,4,-3,3,1,4,-7,9,-5,1,1,-6,1,6,-7,-8,4,-4,-4,9,-10,-5,6,-9,2,-7,-8,-1,8,-8,6,-5,-7,7,7,7,3,-4,-7,-7,5,-9,-10,1,-10,2,-5,6,7,-3,1,4,3,10,3,6,3,8,-10,1,7,5,10,6,-7,4,9,2,5,2,3,-3,-7,-2,-1,-6,6,-10,5,4,5,1,-3,7,-9,8,-9,10,4,-3,-5,-3,10,-5,-1,10,6,-1,-6,-9,-9,9,-7,-4,-9,6,-5,4,4,2,-8,-3,-4,7,7,7,2,4,4,-2,6,-6,-1,-6,-10,2,1,-6,2,-6,-9,4,10,-3,-7,-5,7,2,4,2,-6,-5,10,3,3,10,4,-3,2,-7,5,2,7,-7,-1,6,3,-8,1,4,3,-5,-10,1,8,-2,2,-4,-7,-10,10,-8,5,6,7,9,-4,7,7,-5,-6,8,1,6,5,-8,2,-7,-4,-5,3,-1,2,-10,-3,-4,3,6,-7,4,10,6,8,1,6,-2,-9,5,-10,10,1,-4,-9,-8,5,-6,-2,7,8,3,-3,3,8,5,3,1,1,-6,-6,-5,-6,7,5,-9,1,7,7,-6,-9,10,6,6,9,-8,-8,-7,5,-4,8,-5,7,3,-3,-6,-1,4,2,-5,-2,5,5,8,-5,-10,8,-2,-9,-9,-5,3,-3,-3,7,-5,2,-10,-3,-7,-1,-1,-4,3,9,4,-7,10,-3,7,3,-10,-2,-10,-9,5,-5,10,-1,-3,-5,4,3,5,7,8,4,4,8,-2,2,10,4,-7,3,5,6,-1,1,6,8,9,4,9,-1,1,-8,3,1,7,1,-1,1,-5,-9,-2,7,-8,-7,2,-8,1,6,-10,-3,10,-8,10,-4,-2,8,-10,7,5,-7,-4,-2,2,9,4,8,-8,6,4,5,-4,9,-9,4,-2,2,5,-1,3,-9,-3,-10,1,-1,7,10,8,-5,-6,10,7,4,-8,-9,4,-8,4,10,-6,-10,-8,4,2], dtype = "uint8")#candidate|6189|(3120,)|const|uint8
call_6188 = relay.TupleGetItem(func_3479_call(relay.reshape(const_6189.astype('uint8'), [3120,])), 0)
call_6190 = relay.TupleGetItem(func_3482_call(relay.reshape(const_6189.astype('uint8'), [3120,])), 0)
var_6191 = relay.var("var_6191", dtype = "uint8", shape = (3120,))#candidate|6191|(3120,)|var|uint8
bop_6192 = relay.bitwise_or(const_6189.astype('int8'), relay.reshape(var_6191.astype('int8'), relay.shape_of(const_6189))) # shape=(3120,)
output = relay.Tuple([call_6177,call_6183,call_6188,bop_6192,])
output2 = relay.Tuple([call_6178,call_6184,call_6190,bop_6192,])
func_6198 = relay.Function([var_6191,], output)
mod['func_6198'] = func_6198
mod = relay.transform.InferType()(mod)
mutated_mod['func_6198'] = func_6198
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6199 = relay.var("var_6199", dtype = "uint8", shape = (3120,))#candidate|6199|(3120,)|var|uint8
func_6198_call = mutated_mod.get_global_var('func_6198')
call_6200 = func_6198_call(var_6199)
output = call_6200
func_6201 = relay.Function([var_6199], output)
mutated_mod['func_6201'] = func_6201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6036_call = mod.get_global_var('func_6036')
func_6037_call = mutated_mod.get_global_var('func_6037')
call_6203 = relay.TupleGetItem(func_6036_call(), 0)
call_6204 = relay.TupleGetItem(func_6037_call(), 0)
func_5446_call = mod.get_global_var('func_5446')
func_5447_call = mutated_mod.get_global_var('func_5447')
call_6208 = relay.TupleGetItem(func_5446_call(), 0)
call_6209 = relay.TupleGetItem(func_5447_call(), 0)
output = relay.Tuple([call_6203,call_6208,])
output2 = relay.Tuple([call_6204,call_6209,])
func_6216 = relay.Function([], output)
mod['func_6216'] = func_6216
mod = relay.transform.InferType()(mod)
mutated_mod['func_6216'] = func_6216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6216_call = mutated_mod.get_global_var('func_6216')
call_6217 = func_6216_call()
output = call_6217
func_6218 = relay.Function([], output)
mutated_mod['func_6218'] = func_6218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5184_call = mod.get_global_var('func_5184')
func_5185_call = mutated_mod.get_global_var('func_5185')
call_6221 = func_5184_call()
call_6222 = func_5184_call()
output = relay.Tuple([call_6221,])
output2 = relay.Tuple([call_6222,])
func_6231 = relay.Function([], output)
mod['func_6231'] = func_6231
mod = relay.transform.InferType()(mod)
mutated_mod['func_6231'] = func_6231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6231_call = mutated_mod.get_global_var('func_6231')
call_6232 = func_6231_call()
output = call_6232
func_6233 = relay.Function([], output)
mutated_mod['func_6233'] = func_6233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4661_call = mod.get_global_var('func_4661')
func_4663_call = mutated_mod.get_global_var('func_4663')
call_6240 = func_4661_call()
call_6241 = func_4661_call()
output = call_6240
output2 = call_6241
func_6260 = relay.Function([], output)
mod['func_6260'] = func_6260
mod = relay.transform.InferType()(mod)
mutated_mod['func_6260'] = func_6260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6260_call = mutated_mod.get_global_var('func_6260')
call_6261 = func_6260_call()
output = call_6261
func_6262 = relay.Function([], output)
mutated_mod['func_6262'] = func_6262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6260_call = mod.get_global_var('func_6260')
func_6262_call = mutated_mod.get_global_var('func_6262')
call_6372 = func_6260_call()
call_6373 = func_6260_call()
output = relay.Tuple([call_6372,])
output2 = relay.Tuple([call_6373,])
func_6376 = relay.Function([], output)
mod['func_6376'] = func_6376
mod = relay.transform.InferType()(mod)
output = func_6376()
func_6377 = relay.Function([], output)
mutated_mod['func_6377'] = func_6377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6385 = relay.var("var_6385", dtype = "float64", shape = (10, 1, 11))#candidate|6385|(10, 1, 11)|var|float64
uop_6386 = relay.atanh(var_6385.astype('float64')) # shape=(10, 1, 11)
var_6397 = relay.var("var_6397", dtype = "float64", shape = (10, 12, 11))#candidate|6397|(10, 12, 11)|var|float64
bop_6398 = relay.floor_divide(uop_6386.astype('float32'), var_6397.astype('float32')) # shape=(10, 12, 11)
output = relay.Tuple([bop_6398,])
output2 = relay.Tuple([bop_6398,])
func_6409 = relay.Function([var_6385,var_6397,], output)
mod['func_6409'] = func_6409
mod = relay.transform.InferType()(mod)
mutated_mod['func_6409'] = func_6409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6409_call = mutated_mod.get_global_var('func_6409')
var_6411 = relay.var("var_6411", dtype = "float64", shape = (10, 1, 11))#candidate|6411|(10, 1, 11)|var|float64
var_6412 = relay.var("var_6412", dtype = "float64", shape = (10, 12, 11))#candidate|6412|(10, 12, 11)|var|float64
call_6410 = func_6409_call(var_6411,var_6412,)
output = call_6410
func_6413 = relay.Function([var_6411,var_6412,], output)
mutated_mod['func_6413'] = func_6413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3031_call = mod.get_global_var('func_3031')
func_3032_call = mutated_mod.get_global_var('func_3032')
call_6473 = relay.TupleGetItem(func_3031_call(), 0)
call_6474 = relay.TupleGetItem(func_3032_call(), 0)
func_2932_call = mod.get_global_var('func_2932')
func_2933_call = mutated_mod.get_global_var('func_2933')
call_6485 = relay.TupleGetItem(func_2932_call(), 0)
call_6486 = relay.TupleGetItem(func_2933_call(), 0)
bop_6487 = relay.mod(call_6473.astype('float32'), relay.reshape(call_6485.astype('float32'), relay.shape_of(call_6473))) # shape=(10, 3, 14)
bop_6490 = relay.mod(call_6474.astype('float32'), relay.reshape(call_6486.astype('float32'), relay.shape_of(call_6474))) # shape=(10, 3, 14)
output = relay.Tuple([bop_6487,])
output2 = relay.Tuple([bop_6490,])
func_6492 = relay.Function([], output)
mod['func_6492'] = func_6492
mod = relay.transform.InferType()(mod)
mutated_mod['func_6492'] = func_6492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6492_call = mutated_mod.get_global_var('func_6492')
call_6493 = func_6492_call()
output = call_6493
func_6494 = relay.Function([], output)
mutated_mod['func_6494'] = func_6494
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6504 = relay.var("var_6504", dtype = "int16", shape = (6, 1, 14))#candidate|6504|(6, 1, 14)|var|int16
const_6505 = relay.const([[[6,-2,4,-3,-9,-9,2,-3,4,10,10,-2,2,-9],[-3,10,4,4,-7,7,6,10,5,9,-1,5,-10,-10],[-4,7,-10,1,-8,-4,-1,-3,-6,-9,8,10,-10,5],[-1,4,-6,7,7,-1,-2,-4,-5,-2,-1,2,8,3],[9,7,4,7,4,5,-1,-8,3,-6,10,9,-10,3],[5,5,5,-5,-7,9,6,3,-2,10,5,-4,-5,-8],[-6,-2,-8,-4,-3,2,-1,1,6,-5,-7,4,3,8],[-10,3,-7,8,4,-8,1,8,10,-9,3,5,-3,5],[6,5,10,-6,3,-4,-4,-7,-2,-6,2,1,3,7],[-4,1,-8,9,-4,-6,-7,-5,3,-7,-7,-9,2,6],[3,-1,-8,8,9,-3,-2,-10,-9,1,9,7,5,-4],[-6,-2,6,8,6,-9,5,5,-10,8,2,-1,9,4],[6,9,-8,2,4,7,8,-2,5,2,-2,7,10,-4],[8,1,6,5,-2,-8,-9,-6,-1,3,6,3,6,2]],[[6,4,-4,9,8,-5,-2,-7,-10,-9,-1,-6,8,7],[-7,-1,-6,10,-2,1,-2,-10,-1,-5,-2,-1,9,-2],[-7,4,-7,-9,-9,-3,8,3,-2,2,2,4,6,-6],[1,3,-6,-1,9,6,-1,-1,4,-8,-6,8,2,1],[5,2,-5,5,-1,4,8,-9,8,-1,5,9,-2,9],[-8,1,-8,-1,-7,6,-5,-7,2,-4,-8,-5,6,4],[2,1,4,5,-6,-8,-5,10,-7,-2,5,-1,5,-5],[1,-7,3,-3,4,10,6,-3,-2,-2,-2,-10,-2,-1],[9,6,-5,3,4,6,5,8,-2,4,-3,-5,-1,-3],[9,10,10,-10,-2,5,-10,-4,5,-8,-2,-2,-7,2],[-3,-10,1,-10,9,-7,4,9,-3,1,-4,6,9,2],[7,5,3,4,-9,-4,-6,-1,3,4,-2,5,-2,-3],[2,-9,3,1,-1,-9,-1,9,4,-6,8,4,-5,-8],[-3,-9,8,6,-6,-7,-3,-7,9,-2,6,1,-7,5]],[[-3,10,6,1,-1,-7,-3,4,-3,10,9,-7,9,-10],[-3,10,-10,4,-2,-1,-1,10,7,1,4,-5,5,-7],[-2,-3,-4,2,5,-1,10,-2,2,-8,5,-10,5,4],[-7,-4,-10,3,2,-7,9,8,1,2,-1,4,-2,-8],[10,-6,-3,-6,-9,-6,-4,2,10,-5,-9,4,-7,-7],[-3,-5,7,9,-2,-4,6,6,2,3,5,4,-5,5],[1,3,8,-6,-9,-6,2,4,9,-5,-5,6,-6,-5],[3,3,3,-7,-3,-4,9,-5,-2,-6,8,-6,2,6],[-4,-7,2,-2,-7,4,1,-4,9,-1,8,-4,1,-1],[1,2,-10,-4,-10,-5,-5,-7,-8,7,10,-10,7,7],[1,-2,-7,10,5,10,-2,2,-6,6,-2,1,2,2],[-5,-9,1,1,-6,-5,-4,-6,-10,4,9,-9,-2,5],[-2,-3,-8,-5,4,6,4,-2,-6,7,-9,9,-2,9],[1,-9,-2,1,-5,-8,-10,-2,8,5,6,-8,-4,3]],[[7,1,5,-10,4,-7,-6,9,-1,-2,-9,-3,-10,8],[-7,-1,2,-2,-4,5,4,7,9,7,1,1,8,-2],[4,-6,10,7,1,-2,2,3,1,7,7,2,-7,5],[6,8,9,10,1,-5,7,-7,5,6,-9,-6,10,4],[10,3,-9,3,-4,9,-8,-6,-2,-3,-3,2,3,10],[-5,-1,4,-10,-6,2,4,3,-6,9,4,-4,3,2],[-6,-9,5,-6,5,-5,-7,-1,8,6,-5,-3,-7,9],[-5,-5,-1,9,-6,6,-1,2,-8,10,7,2,-1,4],[-2,-7,3,-7,8,-2,-3,6,1,-1,-9,5,-6,-9],[-1,-4,-3,9,5,-10,-4,-7,-3,8,-9,3,9,-5],[4,-2,4,-10,-9,4,-5,-6,7,3,-6,-3,1,4],[-3,-4,10,4,4,-2,-2,-6,3,7,5,1,2,-8],[-10,-10,-9,2,2,7,1,-10,8,-2,-8,-10,-9,-6],[-4,4,7,9,-10,-7,-10,-2,-4,3,-8,2,4,-3]],[[-2,5,-5,4,-5,-8,-5,-1,9,-5,6,6,5,-4],[-9,-3,7,-1,-7,4,7,6,7,6,-1,-9,-10,-2],[3,5,2,5,6,-4,10,-6,10,-10,1,10,-8,8],[-4,-5,6,-8,-8,10,8,8,1,-6,7,-7,1,-8],[-8,9,7,-10,-3,-1,-1,4,6,1,7,-8,3,-1],[-5,-3,7,7,-5,-9,5,-7,3,-8,-7,-6,-6,9],[2,-4,-10,1,9,3,7,10,2,-8,1,5,7,-2],[-8,10,2,-10,-1,2,-1,1,9,-9,9,7,5,9],[5,-5,-6,-6,9,3,-7,9,1,7,1,2,-5,-3],[-3,4,-8,3,-4,-2,-3,4,-1,-9,2,2,-3,-7],[-5,1,-5,-6,-6,4,-5,6,3,-9,2,7,-3,-9],[-5,-5,7,8,4,4,2,1,-6,7,-4,4,-2,2],[-9,-2,-7,5,-4,5,-7,-8,-7,-8,4,2,10,8],[6,9,-10,2,-9,-1,-1,1,-7,9,-7,-9,-2,3]],[[-9,-6,-10,2,8,-7,-10,10,-9,9,1,2,-7,-9],[3,1,-2,9,-1,-1,-5,-6,9,6,8,-1,-5,6],[-3,-9,8,10,-6,-3,-10,-8,3,9,3,-7,1,9],[-3,10,-10,4,-10,10,-3,-4,7,7,-9,1,2,-2],[-10,-10,6,8,-8,7,-5,5,10,-3,3,-7,6,6],[-8,10,-9,-10,8,-4,8,-6,8,3,1,5,5,10],[-1,-7,3,8,8,1,-6,4,-6,-1,4,-2,-1,2],[-2,7,-7,4,-2,3,2,7,1,-4,-4,3,8,-4],[4,-4,6,-10,6,2,8,-9,1,8,9,-9,6,2],[7,4,-2,8,10,3,-3,5,2,2,1,-5,2,5],[6,-4,5,-4,8,7,1,-3,6,-6,5,-4,-7,-7],[5,-9,-1,-3,4,-3,3,-10,9,9,-3,-4,10,-5],[8,-6,-7,-3,-1,-3,8,-5,6,-5,1,8,6,2],[-1,3,-2,2,7,6,-6,2,6,6,5,5,-5,9]]], dtype = "int16")#candidate|6505|(6, 14, 14)|const|int16
bop_6506 = relay.greater_equal(var_6504.astype('bool'), const_6505.astype('bool')) # shape=(6, 14, 14)
output = relay.Tuple([bop_6506,])
output2 = relay.Tuple([bop_6506,])
func_6524 = relay.Function([var_6504,], output)
mod['func_6524'] = func_6524
mod = relay.transform.InferType()(mod)
var_6525 = relay.var("var_6525", dtype = "int16", shape = (6, 1, 14))#candidate|6525|(6, 1, 14)|var|int16
output = func_6524(var_6525)
func_6526 = relay.Function([var_6525], output)
mutated_mod['func_6526'] = func_6526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6260_call = mod.get_global_var('func_6260')
func_6262_call = mutated_mod.get_global_var('func_6262')
call_6534 = func_6260_call()
call_6535 = func_6260_call()
func_5527_call = mod.get_global_var('func_5527')
func_5530_call = mutated_mod.get_global_var('func_5530')
const_6538 = relay.const([1.631899,-2.751413,2.190566,-5.228731,7.401333,7.818860,5.234577,2.574858,-0.119953,-5.628777,6.170142,-8.723825,-4.888533,7.152342,0.170647,7.921922,-1.847383,-3.749470,7.220573,-2.922839,-9.389212,-0.358527,-4.578518,9.325095,9.376633,-0.286035,9.366069,5.182772,8.034617,0.798067,-3.204270,-8.736702,-6.236152,-4.464661,6.256607,1.407086,0.798222,6.020464,8.979987,-8.989378,-1.476112,0.671213,3.337838,-5.420953,-3.561804,-8.529992,-6.027134,1.832417,6.562828,-7.020540,-5.116430,-3.518144,-0.441707,4.906537,-6.764329,-2.676231,9.914383,0.905913,-6.540083,7.767723,6.547998,1.862405,-2.621900,6.122355,7.981879,-7.266248,4.178307,3.448670,9.212774,8.341054,-4.975843,-7.217943,-9.134780,1.057212,4.569718,5.222784,-2.686161,-1.216805,9.855092,-2.573419,-8.655993,-2.477627,4.889745,5.864890,-8.619097,7.172630,-9.373175,-8.298402,3.286180,-6.162461,6.100217,8.564678,-9.822566,-0.215144,3.856916,-0.733040,-1.069230,9.730708,-7.675662,-3.725677,-6.106287,-6.398791,5.207716,4.937277,-1.805761,-0.529218,0.772279,1.158988,2.971907,0.273153,-8.433690,-9.107238,-1.628968,-5.053511,-8.136653,2.188367,-0.056863,-6.534667,6.849491,-5.618417,7.048447,0.626010,3.345004,-6.364485,-3.342572,1.677699,-6.117239,7.327461,-7.115395,8.950610,-2.386096,0.840619,-4.973439,0.689191,4.803994,4.251419,-0.586622,0.655076,0.947800,-0.072837,2.188755,-2.439182,-0.919935,-0.573978,-1.650327,3.501437,-0.731310,1.991380,-3.240123,-1.820542,3.166256,-2.185951,-2.362699,9.184277,-6.337128,-6.070967,6.570484,7.084339,-2.566660,-0.348303,1.703091,-5.092573,-1.027504,3.418595,-0.070488,-0.235006,4.883554,8.310488,-9.923903,-1.060414,-0.236837,-4.027665,5.094293,9.356689,2.905470,-5.375779,-9.476712,1.825293,6.799759,3.655407,-5.396538,7.339166,3.358726,-9.682597,6.410331,-6.499250,2.425901,9.395981,-1.335966,-5.349414,1.478984,-8.759048,4.084456,-7.294616,-6.576261,-8.013081,-3.508536,6.147793,-3.541557,4.631487,-4.930166,-7.777644,6.980953,-2.584124,-5.210946,1.092766,-1.868214,8.989599,6.791268,-8.484600,-4.872855,1.468576,-8.254773,-2.674891,-8.675625,-5.293612,3.891686,-8.479257,-1.135739,-1.658257,9.215048,-5.340241,5.373586,-4.293537,-8.510536,4.667156,2.293790,6.911680,0.161880,0.839261,6.149484,-9.946838,-2.630588,1.596855,2.211728,8.461707,-8.093152,-1.077909,-4.145535,-8.568090,9.304213,7.006527,-5.255316,-4.231047,-6.316326,4.553027,6.122549,-6.001766,-0.282818,0.244304,5.662460,1.136637,-5.612138,4.694031,-4.271189,5.911288,7.160865,-8.725591,1.799987,9.898320,-2.244417,-0.316193,-7.214831,8.322643,-0.612975,1.792801,-2.228796,1.212742,-5.430071,5.567944,3.131075,2.624486,9.200356,-1.040905,-4.011644,-1.534109,4.073849,7.810239,1.128966,-9.038800,2.885337,5.588542,-3.999759,-7.732994,5.547736,5.440239,2.076384,-1.435497,5.665483,4.906755,-5.178926,-2.706242,-2.597323,-4.327665,8.086989,-7.172353,-5.741983,-2.168160,-5.912923,7.493240,-2.443679,-3.294814,6.426721,-9.573902,-9.976866,7.359908,6.444130,-7.059062,9.733560,5.482336,5.117214,3.699900,5.772705,8.818083,-9.050870,7.485074,9.604249,-0.553938,-7.256488,2.984483,5.742489,-5.271434,0.247977,-8.476950,8.993253,8.970655,6.640827,-4.779133,-9.953943,6.166570,-2.878603,8.473933,-6.156640,4.189503,-8.773177,0.939654,3.800334,-7.242803,-4.624060,0.957035,-7.225781,0.197242,4.961835,-5.919381,0.885822,-7.025202,-4.436119,2.729914,-2.028019,-5.731114,-4.255647,-6.659315,1.259230,-4.684382,1.364233,0.247538,-5.287180,-9.258742,-4.642075,9.494797,-0.911166,2.999842,7.822389,5.472157,1.973092,-0.242301,-5.631209,4.173111,6.641921,2.202834,9.482084,-5.043020,2.023615,9.569925,4.421491,4.795622,4.137212,-6.433226,-5.733296,-2.998816,1.194488,2.726331,2.359086,8.218792,-4.362165,6.831850,5.471621,4.070193,-0.399679,-6.770574,4.298998,3.252892,8.470220,3.050437,-5.877654,5.750970,-2.939997,9.452253,-0.923390,-7.929215,0.146686,-7.177587,2.970655,-3.987917,9.660092,8.666673,-0.186235,3.462547,-9.032512,1.537767,-8.526984,6.601126,0.055809,-7.531346,1.376926,-4.633486,-5.270632,-0.710424,-0.775048,-0.831472,6.593532,-7.387310,-0.538222,8.121838,-6.272382,4.329551,-9.659002,8.247534,8.028329,6.333006,-8.427220,-8.207511,-8.394836,-1.614889,4.868722,-3.810574,-9.617159,-1.244265,-6.955395,-9.917060,2.991554,8.710818,-7.291712,4.554703,-8.292482,-0.405857,5.275530,-2.681731,5.268989,-9.525178,0.981967,-4.792796,-5.375067,-0.814168,-1.895017,5.252401,3.108053,9.065998,-5.001160,4.471327,8.470358,2.934266,-0.990946,5.538599,6.078174,-1.161258,-2.393305,-9.609884,-0.197401,-8.864788,8.357886,-9.343911,-3.319899,-7.619283,-5.509700,-5.067949,-1.755784,-5.106656,9.165014,-4.794995,-7.578216,5.481834,2.349060,8.645654,-8.009887,6.557207,0.600073,-0.671756,0.396952,-1.872803,0.546436,-0.604055,6.774470,-1.108055,-8.629525,5.372344,-7.662034,8.651372,-3.315430,2.277763,-0.081565,9.953574,-3.326761,-8.346079,-8.525173,5.728402,2.986457,6.154963,2.339966,0.158930,3.118316,-6.421675,7.874929,4.637128,-8.639003,-5.459121,1.116465,-2.682207,-6.468943,-2.011460,-2.226826,-6.040777,6.420936,-7.663757,9.257577,-9.334343,-2.291995,-0.366322,-9.163352,1.288749,-4.794212,-2.916339,2.155777,8.426797,5.847014,3.009032,-6.585525,4.032789,0.294267,-7.748659,5.377297,9.010524,9.287511,1.392264,-1.897728,-7.373842,-3.550194,-8.354871,6.651719,9.806535,7.351810,-4.209693,-2.645112,1.505763,3.737075,2.713128,-2.942744,-3.213745,-9.694754,-4.495437,9.515625,-7.960738,1.550710,4.689702,-3.821609,4.408868,1.738781,5.017112,0.720370,-9.379494,-1.208897,1.779747,-2.844840,-7.241926,0.445751,5.310779,6.209609,-4.293623,4.432193,-4.973680,9.230227,0.258642,8.075895,-2.575657,-4.885087,-1.033649,-1.463673,9.044731,1.370423,-0.330730,-2.560760,6.980080,6.371963,-0.672311,-0.892637,-2.289444,-0.420636,-5.537613,6.704846,-1.252645,6.925603,-7.688214,-8.824381,9.208951,-8.022953,-5.179680,5.658128,-1.462608,-8.553127,2.495013,2.202332,-4.250741,-8.953161,-3.393866,8.840445,1.265066,8.464449,8.091260,5.882027,4.331135,-6.817897,3.054755,-2.663340,-8.297509,-2.454956,7.242144,7.177567,-2.066343,-8.387952,4.493926,4.229655,0.510219,4.030290,3.787997,4.784402,-1.236221,-8.302455,7.607683,0.161339,9.677155,-3.895816,-3.239837,-4.142193,0.498753,1.483936,2.063585,9.871744,6.342064,5.252679,0.268700,5.427447,-2.664235,1.168984,-3.383358,1.191555,1.494846,-7.297303,8.576032,-4.394295,-5.783253,-5.625737,-6.387930,-5.731072,-6.992509,-3.145272,-6.975133,8.544802,-3.455238,-3.885885,0.520684,-7.646742,5.877827,-1.063487,-9.787400,1.856369,-0.230236,-3.190474,9.370674,-6.663714,-4.744492,-1.981607,3.178349,2.875888,-0.660970,-5.148190,8.115737,-0.088815,-8.328567,9.145429,1.071470,4.462011,-1.192636,0.588418,-8.998081,9.477756,-5.414676,6.230105,1.127485,7.390296,-9.640667,-7.947981,8.893186,3.451279,4.697615,-6.580582,0.552962,3.912370,1.462308,-1.505251,-6.004284,-4.167389,1.989679,-7.907162,-9.966466,-8.106086,-6.623628,-6.423569,-9.171988,7.407802,-1.817976,-1.880315,7.520666,-5.105374,-8.203638,-0.383749,-0.838714,-4.498686,-9.186502,0.481459,-8.985404,0.909338,-7.309566,-2.073146,0.538274,-2.571788,3.022498,-2.197646,-5.236188,0.414783,0.839100,-4.457988,-9.262377,7.219510,4.911779,2.875165,-9.365681,-0.614759,-3.729350,5.481768,-4.805909,-4.621548,0.265066,-9.366127,0.334151,-8.555748,0.209286,-8.049646,9.375230,-8.714665,-3.728845,1.999796,2.291165,5.782175,-8.828620,8.082464,3.146713,8.856343,-1.651582,-9.179010,6.298497,-4.658942,0.604357,5.227295,-6.143357,-4.000283,3.806076,-2.731356,5.073703,4.057058,-6.727467,3.275381,-2.388514,-7.662214,-3.156145,-2.436874,-3.291107,1.529388,9.526301,-8.853221,-2.193584,3.853796,-0.548242,-7.478793,2.178553,-9.554745,2.536244,6.166055,-1.916017,-9.428808,0.627505,-3.944313,-6.244249,4.167991,-1.346721,9.364531,-8.684309,3.315294,-6.098167,5.064525,7.045734,-4.407078,0.736228,-7.720776,4.627571,-0.820345,3.826190,-2.682023,-5.859621,3.151019,-0.580273,-0.963104,7.756170,3.709455,5.989698,-1.752608,-2.813772,0.688362,-6.089632,8.547635,5.231632,-7.166932,2.795914,-8.290765,4.648825,-2.116923,-5.235638,-8.745625,-0.535215,-9.247791,-4.922722,-9.575717,2.244126,-6.073959,0.954152,9.766589,-8.708090,8.701101,8.665253,4.092836,-5.668395,-9.727816,-5.809534,-9.780205,-3.031956,1.495704,8.028320,-7.104656,0.223959,3.545254,-9.786645,5.694203,-2.235057,-0.708608,-7.495052,-5.265215,-6.108080,-1.576264,-5.741954,8.373685,7.061457,4.637217,7.217284,8.647238,8.866771,3.631022,1.783171,-8.785111,-7.910039,2.933194,-8.574895,6.987210,-5.161894,-4.420339,-7.807333,-6.705436,-0.325787,6.815436,5.005409,-4.390536,1.027477,-2.581077,4.835693,-1.034867,-6.974536,-0.282949,-8.809875,2.537070,9.316954,9.528783,1.995612,5.724424,6.421611,2.645364,7.685293,3.169132,-0.334925,-3.308734,-9.564783,4.560991,-5.375500,-8.261691,8.361574,-4.627009,5.810009,-9.387870,0.847053,-6.769587,-5.998319,3.946929,2.725317,-6.594601,-2.110098,2.444844,-2.244746], dtype = "float32")#candidate|6538|(924,)|const|float32
call_6537 = relay.TupleGetItem(func_5527_call(relay.reshape(call_6534.astype('float32'), [10, 3, 14]), relay.reshape(const_6538.astype('float32'), [462, 2]), ), 3)
call_6539 = relay.TupleGetItem(func_5530_call(relay.reshape(call_6534.astype('float32'), [10, 3, 14]), relay.reshape(const_6538.astype('float32'), [462, 2]), ), 3)
output = relay.Tuple([call_6534,call_6537,const_6538,])
output2 = relay.Tuple([call_6535,call_6539,const_6538,])
func_6543 = relay.Function([], output)
mod['func_6543'] = func_6543
mod = relay.transform.InferType()(mod)
mutated_mod['func_6543'] = func_6543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6543_call = mutated_mod.get_global_var('func_6543')
call_6544 = func_6543_call()
output = call_6544
func_6545 = relay.Function([], output)
mutated_mod['func_6545'] = func_6545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3099_call = mod.get_global_var('func_3099')
func_3101_call = mutated_mod.get_global_var('func_3101')
call_6566 = relay.TupleGetItem(func_3099_call(), 0)
call_6567 = relay.TupleGetItem(func_3101_call(), 0)
output = relay.Tuple([call_6566,])
output2 = relay.Tuple([call_6567,])
func_6576 = relay.Function([], output)
mod['func_6576'] = func_6576
mod = relay.transform.InferType()(mod)
mutated_mod['func_6576'] = func_6576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6576_call = mutated_mod.get_global_var('func_6576')
call_6577 = func_6576_call()
output = call_6577
func_6578 = relay.Function([], output)
mutated_mod['func_6578'] = func_6578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6492_call = mod.get_global_var('func_6492')
func_6494_call = mutated_mod.get_global_var('func_6494')
call_6582 = relay.TupleGetItem(func_6492_call(), 0)
call_6583 = relay.TupleGetItem(func_6494_call(), 0)
output = call_6582
output2 = call_6583
func_6587 = relay.Function([], output)
mod['func_6587'] = func_6587
mod = relay.transform.InferType()(mod)
output = func_6587()
func_6588 = relay.Function([], output)
mutated_mod['func_6588'] = func_6588
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6626 = relay.var("var_6626", dtype = "float64", shape = ())#candidate|6626|()|var|float64
const_6627 = relay.const([[[-9.613553,8.443052,9.056105,0.726402,9.776981,-2.781515,0.665776,4.322642,-8.127508,-3.641321,1.340912,6.531802,-4.931662,5.828053,0.100120],[9.936571,-6.126820,4.874612,6.219876,-6.141209,7.913479,7.704243,-8.846838,-5.723118,-9.632325,-5.928636,5.645680,1.437760,-7.745755,9.119657],[-5.507697,5.061564,7.892789,-4.710506,9.142536,-7.280897,8.906167,4.389422,-8.817899,-0.831477,-0.822715,-3.524412,3.197152,5.309953,-9.668545],[8.730983,-4.507968,7.706426,1.250347,-8.273803,-0.850009,-9.424510,1.930343,9.017803,8.239118,-3.070569,1.818055,5.509522,-2.449279,-1.033931],[0.607006,3.336968,-7.684388,9.682026,-5.992269,3.331530,-9.689656,1.174348,3.579553,4.289462,-7.080359,9.939026,-9.212986,-9.863574,5.115943],[-8.559613,-7.318736,-9.416875,-2.782249,5.381821,-5.043032,-4.004371,-6.008612,-4.748786,-9.859479,-2.983531,2.992348,-8.965471,-6.697231,-9.827778],[6.030824,-8.256109,9.374010,4.678721,-2.085609,-4.515838,6.072243,-5.354083,-8.537298,9.438790,-3.232031,-6.052281,8.626318,-1.189512,9.775950],[-4.677731,2.070970,2.601576,8.339907,-5.236827,2.828113,-7.316085,0.738100,-8.139539,2.205769,5.559501,2.336699,2.682121,-7.364313,-0.968213],[8.158936,9.682825,2.804860,8.974553,7.567076,-1.592718,-3.283163,6.573048,1.140043,-0.151161,4.514732,1.566960,9.531840,-2.455345,-3.208402],[9.608753,5.578801,-2.485678,9.392589,7.078103,6.118050,2.842847,4.569589,-3.531894,-9.978419,5.697578,-0.916766,-9.595701,-9.450672,9.609756]],[[5.011556,-5.146768,3.531011,6.296074,-6.314474,6.196633,2.630628,6.060206,2.726520,1.708680,-1.238521,-3.163321,0.520754,-4.336929,8.529696],[-4.760114,1.276282,2.630816,4.467134,2.240362,0.800146,-7.458680,-9.056275,4.474706,2.250445,2.393248,-8.147497,-0.152311,6.113531,6.414779],[-8.971091,7.940894,-9.873211,6.706735,-8.089725,2.126633,9.850809,-5.965190,9.724750,-8.230702,-8.951612,2.242318,9.896064,8.542029,-3.143325],[4.019134,-9.986218,-7.850811,6.766894,5.269806,0.966977,1.259870,-1.175729,-8.588200,-5.538403,-1.703141,-1.470247,1.309681,7.593834,-6.197874],[2.318012,-2.520132,4.793752,-3.947708,-4.321373,-8.607132,-2.285138,1.310400,0.803180,-9.974808,-6.145950,-1.789950,-1.300898,-1.981857,-9.031630],[-2.183172,-0.110031,-6.502011,9.928578,-4.976816,-3.528576,8.688655,-1.812607,2.200780,-4.609188,9.809161,-5.884043,-7.472699,4.686266,-5.818985],[5.784893,4.779854,6.829286,1.494711,-7.181313,9.425860,-3.426776,4.253584,7.942233,-1.525844,7.730359,-9.417141,-6.731632,-9.133960,8.017170],[2.459076,7.508738,-6.783870,-8.573209,-5.901110,7.287353,6.098399,-9.753443,-7.222414,4.942932,-9.338513,6.621674,-0.411494,1.606286,8.861834],[2.308717,4.063847,-3.501311,-2.793700,-5.312264,5.026892,-7.292692,8.529429,-7.991082,-9.686745,8.562779,-8.543799,8.897380,-7.280341,6.437361],[7.144702,-3.633916,-2.494464,-4.116450,-1.220874,3.959724,-6.960195,-1.529530,-7.941373,8.263655,8.016575,8.224428,2.607958,-3.063535,6.652674]],[[-3.018340,5.005745,-2.440055,5.243665,-6.146942,8.918714,6.519217,5.647658,2.545057,-6.477584,-8.093178,3.191667,7.262898,-1.559068,-7.163900],[-0.695720,-5.407966,-6.708961,0.801287,2.546823,7.092928,0.812900,-2.542779,-7.309585,-0.314112,-9.231789,-3.853039,0.359357,4.583692,-6.275249],[4.731796,-0.541568,-7.445270,-3.202792,-3.535744,2.219353,-9.646649,-8.164975,2.561915,3.796010,-8.961310,-4.890133,0.111331,-3.345961,0.668084],[7.193463,7.754120,-2.498189,-4.295253,9.632706,-4.985297,-1.716404,8.181308,3.684783,4.347272,6.707815,-6.511113,3.522625,3.490392,-4.788240],[-0.958517,5.689312,8.220627,5.509612,9.417753,-5.920418,0.876135,-7.270389,-0.092087,6.380893,-6.507643,7.359286,-6.458082,4.386662,-2.702289],[-5.176550,0.756418,2.520634,4.662776,-1.724089,7.588168,-2.361271,0.600198,-4.409087,-2.950227,5.320651,-5.069724,3.931860,1.297067,-7.809846],[2.093444,-7.561331,-5.385309,6.368753,-5.687097,-0.880856,0.792677,-8.988823,-9.636139,-7.369287,-4.799240,2.380554,-7.966144,8.563200,2.427888],[2.823143,-1.371301,8.226611,9.520809,-3.775029,-5.950108,-6.360399,6.396630,-3.895385,7.302237,-7.416158,0.643081,-8.096907,0.944462,0.110249],[4.321469,9.634797,1.398665,-3.422787,8.486344,-2.400819,-2.589309,3.739238,-8.770809,6.048230,-9.383976,1.832727,8.403529,7.418656,-0.444719],[-2.931836,-1.798170,2.396707,-7.172569,-5.351368,1.619324,-4.339462,6.318891,7.899252,1.508968,8.191805,8.623555,2.853976,-1.959888,6.821244]],[[-1.096079,-9.444036,2.916729,-1.240071,-6.055274,5.185518,6.365925,9.017109,-5.288801,-9.703948,3.232400,2.029109,4.602244,8.282373,-2.837288],[-4.524100,-1.101244,5.442888,-5.785623,-4.039140,-7.233262,-3.845862,3.495027,8.358205,0.608501,8.987053,0.447745,4.671466,-1.705940,3.443073],[1.123457,9.101455,-1.405759,9.762897,-4.583936,6.443310,5.796403,-8.604767,2.069682,-5.617380,-5.629919,9.306238,4.365464,-0.237746,-7.861409],[-4.245510,8.108981,9.719855,-6.616255,-7.409581,-2.693523,3.875157,-8.360504,-8.281009,2.635685,-9.365224,2.993766,-8.877002,-4.226140,-2.381588],[-7.177735,-8.603785,-9.972281,2.156810,-0.244405,0.160973,-8.495478,-8.315016,-1.691723,-4.482710,-8.821753,8.164712,2.325189,-1.329675,-2.727198],[-2.090287,3.619218,-1.348881,-4.900257,-8.945792,-1.402776,-9.043687,-4.786182,0.109360,6.268022,5.000499,-9.464331,1.999334,-9.364814,8.742608],[-9.975575,9.997848,-8.379559,6.493081,3.217344,5.311313,3.447613,-8.748296,-0.199690,4.119447,-5.617588,2.379132,8.325505,-4.289457,-0.932698],[0.182544,2.689781,-5.059042,-4.073101,-1.643380,7.638751,7.239154,0.969204,2.091016,6.283131,-3.579021,5.555493,-5.670904,-2.622362,-3.078992],[-1.268518,-6.921872,-1.642779,2.008758,-0.081328,-3.264373,8.076901,6.504711,-5.088957,6.407019,7.200844,0.475163,2.374110,2.066836,-2.167564],[0.787461,9.340007,-6.543676,-6.961767,5.400654,0.883391,1.898411,7.816700,-8.597495,9.520137,-6.275041,2.374621,6.447040,7.874144,-8.255587]],[[-8.412482,9.892703,3.180718,7.405777,8.752821,8.607574,-4.917560,-1.959923,9.521918,6.671494,-4.450072,0.061685,7.230279,-6.372976,9.515171],[-3.656459,-9.591986,-5.527333,4.650278,-0.872988,-1.929540,-9.028233,-5.582830,-4.332503,0.658268,-9.093909,6.209495,0.281101,-7.965287,-6.869431],[-1.133784,4.366674,-6.973192,4.059884,3.013983,-9.916564,7.996144,-0.850957,8.286251,5.754792,2.471046,-4.938251,6.448812,1.336874,-1.143217],[3.183864,3.236412,2.867168,-5.671852,3.863175,-7.776612,2.460838,-4.099019,6.437979,0.964675,-0.126541,-8.038850,7.036305,-2.913031,3.386933],[-0.110352,-9.878703,8.731051,5.846038,-1.925012,6.352793,9.296345,-9.229052,8.384021,7.718112,-2.834795,3.434759,5.566824,-0.941363,6.054286],[-2.882452,-8.492257,4.299234,-3.416446,-3.592332,-8.165934,-6.780234,-0.461286,4.450357,-5.317570,-5.664352,1.415507,-2.685745,1.508240,-4.596661],[-4.057975,-7.456764,3.735428,3.734537,4.889870,-2.949351,6.816880,4.472803,1.170823,5.962815,7.164217,-0.453652,2.413724,0.912821,1.626224],[-0.390336,-0.919026,5.272775,-4.920582,-4.623404,-7.894632,8.851714,2.046182,0.356269,-8.352285,-7.081563,4.778420,-5.153957,1.629752,2.116133],[8.204497,8.501722,-8.407275,-2.813221,6.470675,-9.168073,5.944477,1.629333,-7.547116,-7.499886,-6.043483,6.063182,2.145337,-1.627308,7.161063],[-0.152002,7.808027,5.693507,-5.377772,9.612446,-2.625897,8.647945,1.158771,-3.630260,9.073205,-1.693948,6.116822,1.204685,2.203210,-1.748145]],[[9.368469,-9.242796,-7.114594,4.460120,3.736482,-4.615027,-2.099748,2.388365,-5.475958,-0.207709,-7.896850,9.648243,-8.686963,8.685168,1.570815],[-6.337104,-0.116551,4.813844,-8.820647,6.252226,4.060158,3.181411,6.473882,-5.359572,-0.632417,3.314318,6.176166,5.731038,-8.853694,-7.962221],[-9.867492,-8.031705,2.391301,7.439048,-7.819840,2.317601,-7.447436,-6.782621,1.409094,9.249738,6.892450,5.275852,-2.763727,-7.918109,0.666923],[-1.073416,4.906760,-2.265995,-5.761484,0.249474,-8.600534,4.801082,3.817432,-4.478920,-2.278683,2.696055,-0.436910,-7.203799,4.079928,8.896362],[0.117342,-2.686465,1.574688,7.460034,-3.188386,-0.985571,0.492256,1.674704,9.452372,-2.021623,5.560354,7.375460,-2.757171,-3.820033,-2.024912],[-5.914109,9.611720,9.439856,8.647879,8.894883,0.081927,-2.628636,1.849624,8.474866,8.749930,-9.151544,2.845738,-6.925847,4.771912,7.290004],[3.130396,-9.960308,-4.986273,3.916141,-1.621209,9.554617,-3.932231,5.776357,4.831921,8.110714,-8.536848,-8.035033,6.687223,1.722499,6.621071],[5.459232,-2.809594,-9.039004,1.952526,-2.222390,-2.042157,5.647842,8.545521,-3.849822,1.635534,5.086539,0.355384,-3.213706,-6.960977,3.061597],[-0.544610,-2.505772,-8.076473,-0.107686,-9.094945,-7.479442,-5.151157,-2.550871,-6.635035,6.068899,-6.147647,5.042162,-0.964227,-5.984126,7.515054],[-0.958767,-4.382057,-2.146572,6.200965,-2.386608,7.980807,-1.388163,-8.397081,3.881569,3.362408,6.532717,4.743812,4.871006,-6.025058,-7.359983]],[[-9.708124,4.659867,-6.226941,6.497297,-7.968254,2.432825,-5.366161,-1.291281,-0.120805,3.823580,-7.662239,5.262575,2.275932,1.714829,4.506421],[7.049371,-9.323613,-4.262243,-7.471828,6.219202,-7.817660,-6.425368,-7.341391,7.889933,-0.615069,1.498828,9.133011,-5.774843,9.093570,-5.545631],[-3.386604,-1.090412,5.120938,6.569827,2.194110,-0.913424,8.341390,-9.780227,4.965381,4.657837,5.847397,-0.108719,4.577679,0.980428,-1.649591],[9.581878,-9.454442,-7.177570,3.512177,7.143940,-3.449767,-3.901664,2.128908,4.421079,-3.693789,-1.269925,5.624834,9.086002,-0.031289,-9.741042],[-8.728601,2.572042,5.501867,-2.892921,5.351329,8.829815,-8.594723,4.684120,2.021043,-1.371822,3.022200,8.579873,-3.346339,-3.701524,5.054535],[2.040157,-2.911500,-8.180562,-9.543949,-9.935583,0.369389,4.144262,0.664771,7.297650,-3.036054,4.218668,-4.401864,-6.355017,9.259531,7.699568],[0.757305,-4.973586,4.298653,-1.598296,-3.653367,8.885968,-5.154753,5.393487,-8.547105,-9.909376,-9.956192,-8.575246,-9.236221,5.551086,6.685384],[9.308231,-7.135840,7.474149,-9.591312,1.120624,-7.132049,-8.177304,-2.391877,0.344521,-4.370939,5.922968,4.973584,-1.582507,-7.112858,3.519935],[-4.683133,1.456574,-0.120458,9.021779,-7.340198,2.158542,3.962976,7.887833,5.375814,-0.812155,0.365034,9.802550,-4.385287,-5.744040,4.317947],[-5.810644,-2.184136,-8.768055,-3.742811,-6.372554,3.287341,-8.419907,2.583903,-9.759327,-6.760713,0.042534,-9.126987,-4.679216,-3.000153,4.064702]],[[-5.239283,0.752159,8.266118,4.558691,7.797847,-0.037888,-8.678465,-5.478177,1.555107,-9.367329,7.347274,5.350550,-5.282591,-2.769183,-3.670253],[4.431866,-6.596923,-0.606365,-1.516116,7.588500,7.543448,-0.867835,-8.279339,3.579006,9.032102,2.336601,7.789667,-3.372559,-5.053052,-0.512065],[6.776505,5.897814,5.354349,4.851551,-0.043145,8.133709,7.393671,4.034673,-5.763643,8.243278,-0.881237,8.437373,4.862648,-0.204489,-3.243674],[-6.045442,-4.946763,0.794284,8.389512,6.290440,-4.616205,1.923999,7.691362,4.855828,-1.967609,7.698609,-2.114010,-1.823099,5.566730,2.951700],[-6.833603,7.090850,-7.676091,-6.192004,1.365671,8.633402,-1.709361,8.859333,3.138269,-8.908857,0.961169,-9.146808,-3.002102,7.506284,9.909229],[0.288194,1.513238,-8.451346,-9.241406,5.290379,0.078468,4.972910,-7.948195,0.274646,1.510993,6.386828,0.362041,-6.078453,-0.881507,5.601382],[6.459267,0.676036,9.400681,-9.871547,-7.377367,-9.629606,-3.326264,-2.702369,-1.881593,-7.336365,3.355802,1.955881,2.773943,-4.575822,5.273055],[-5.878685,-5.132561,2.633516,8.532206,5.006833,-4.742687,1.658349,2.863627,9.435617,5.986795,-1.906065,3.275358,-6.914268,5.153641,-5.947146],[-4.468417,7.772274,8.527531,9.578611,-3.356492,-8.772508,-8.956295,8.611157,9.644852,7.704785,-8.557316,6.415002,8.896937,3.121411,-0.338515],[-1.929232,-5.223282,-5.690946,-3.426210,-5.751273,-9.771951,3.213505,7.904308,5.125965,3.146148,9.064287,-0.297006,1.446413,-3.529379,-8.958066]]], dtype = "float64")#candidate|6627|(8, 10, 15)|const|float64
bop_6628 = relay.floor_divide(var_6626.astype('float64'), const_6627.astype('float64')) # shape=(8, 10, 15)
output = bop_6628
output2 = bop_6628
func_6631 = relay.Function([var_6626,], output)
mod['func_6631'] = func_6631
mod = relay.transform.InferType()(mod)
mutated_mod['func_6631'] = func_6631
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6632 = relay.var("var_6632", dtype = "float64", shape = ())#candidate|6632|()|var|float64
func_6631_call = mutated_mod.get_global_var('func_6631')
call_6633 = func_6631_call(var_6632)
output = call_6633
func_6634 = relay.Function([var_6632], output)
mutated_mod['func_6634'] = func_6634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4987_call = mod.get_global_var('func_4987')
func_4989_call = mutated_mod.get_global_var('func_4989')
call_6695 = func_4987_call()
call_6696 = func_4987_call()
output = relay.Tuple([call_6695,])
output2 = relay.Tuple([call_6696,])
func_6697 = relay.Function([], output)
mod['func_6697'] = func_6697
mod = relay.transform.InferType()(mod)
output = func_6697()
func_6698 = relay.Function([], output)
mutated_mod['func_6698'] = func_6698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5902_call = mod.get_global_var('func_5902')
func_5904_call = mutated_mod.get_global_var('func_5904')
call_6735 = relay.TupleGetItem(func_5902_call(), 0)
call_6736 = relay.TupleGetItem(func_5904_call(), 0)
func_1409_call = mod.get_global_var('func_1409')
func_1412_call = mutated_mod.get_global_var('func_1412')
var_6763 = relay.var("var_6763", dtype = "int64", shape = (200,))#candidate|6763|(200,)|var|int64
const_6764 = relay.const([-3.629956,-5.174506,-3.977285,7.586585,7.004832,9.757729,3.827397,-8.721940,-6.381655,2.321908,-1.093523,-1.095225,-7.563709,7.884899,-0.968108,-2.915429,-9.604677,-9.178737,4.610776,-0.825089,-8.549529,3.614218,5.082146,-4.099019,6.443168,-8.048668,-0.378957,-1.936394,0.919933,-1.774536,-5.315413,-7.904912,1.105785,3.871713,1.266026,6.097305,-3.444032,6.652392,-2.625190,3.640107,-3.266329,-0.416738,7.538612,3.833292,-1.659229,-0.508254,-5.546696,6.611741,9.973455,1.197274,-2.079210,-7.060867,8.195080,9.961486,8.958159,2.850531,-6.882965,-5.241062,-2.024361,-7.786834,9.150153,5.744654,1.264832,-1.232346,-7.525901,4.860696,-3.507823,7.393756,-0.409765,-3.953315,4.849407,5.120124,3.689779,6.243354,3.019572,-6.234818,1.759353,2.119569,-3.389592,7.761496,4.547073,3.426888,7.091034,6.805342,1.775137,3.648600,6.542711,-2.416246,6.557174,-4.710028,9.606700,4.544370,4.879035,-0.592425,-0.970338,-7.251764,-1.837578,-8.041784,-4.631418,5.315104,6.615116,-6.550067,8.741213,7.782781,8.087898,-5.792442,-9.663338,3.214731,-3.193933,8.908316,3.747975,-4.467499,9.896454,9.031937,-6.087215,-3.918157,-9.626926,-4.644539,4.683791,-5.132942,3.225229,-4.329279,-6.446271,6.843851,9.690223,-8.064585,-5.926159,-8.719344,0.563300,8.230662,5.200762,5.512846,9.437772,5.356735,6.603523,0.293328,-4.041592,-7.698715,0.294800,2.891242,-5.666614,1.592535,-9.369131,-6.842804,-5.879141,0.229215,8.202625,6.542825,-8.802583,-4.618080,-3.604556,5.079708,9.181911,9.335235,2.607822,5.961628,-3.824387,7.507893,-6.157226,-4.118103,9.504816,-9.232367,-2.594673,7.018398,3.582867,-4.092049,6.377487,-3.329767,0.317594,5.821643,7.566478,-4.570199,-4.083197,-3.681570,-8.028645,4.840007,6.298580,-7.410706,8.069236,-1.590997,3.706416,-5.257106,-7.999560,2.470657,-7.451828,8.634708,8.825543,-0.367615,6.710331,1.416054,5.354385,9.158287,-2.429414,6.967405,-7.045930,-1.963637,-8.289563,-8.522628,-0.465276,4.313849,9.617568,-4.094534,-9.085651,-3.626043,7.119932,6.837764,-7.657784,4.816135,9.676290,-4.955518,9.436308,2.715939,0.984108,-9.516263,-5.377108,-2.653152,-6.875560,-4.516734,1.908085,-7.904965,-5.385738,-2.287427,7.771293,-3.624014,-2.647508,-5.507829,7.475345,8.749809,0.267479,-6.417796,3.563553,3.908856,5.794076,2.575762,-1.674976,-1.429365,6.678409,4.261105,-4.020568,0.160464,-4.159790,-3.206692,-8.472125,-6.195092,-3.677991,3.578397,-9.255097,5.434781,-4.454523,-3.366459,2.657000,-3.969474,9.402897,0.864742,4.695030,-2.498228,-3.168642,2.435768,2.451024,-0.623472,6.210752,3.337725,5.453189,2.121666,3.880819,-8.191081,-6.502212,-3.335479,9.776853,-2.959347,-1.011355,-3.409949,4.054539,6.721601,-6.060623,-9.118565,4.659002,0.493668,2.040049,6.611751,-1.630158,1.832654,-9.277363,0.177835,7.045217,-1.447138,-3.268535,-7.123094,-1.216897,-5.805435,9.469824,-3.769450,2.061720,7.422648,5.903533,2.846763,2.902891,-1.718923,-3.475930,8.663568,5.644660,-1.830849,-6.044568,-7.836886,-3.547449,1.672887,4.990729,3.429507,3.415500,5.229280,8.983811,2.178841,2.757727,-7.673555,2.527269,5.445128,5.814437,-9.059172,-8.394294,-7.765996,-0.152962,8.380649,-5.352356,-5.718235,0.995492,-0.757769,-9.310043,7.572049,8.571784,-2.478174,2.442991,-0.992691,7.172621,9.473853,1.539764,-6.736804,1.349944,6.440456,-5.158460,-4.725186,-5.532756,-9.248893,-3.463702,-0.220667,1.406651,-7.939665,5.903144,3.957506,4.597366,-5.021604,1.266415,-9.484664,-5.113656,-2.151485,4.442078,3.980121,4.629501,4.975697,2.519743,2.481762,-5.957984,-1.091638,-4.304050,-2.515975,-8.104077,-2.364816,0.157410,-7.324011,0.596812,8.894809,2.246882,-5.500789,-7.363145,-7.498694,5.650301,7.031714,7.937621,6.542134,3.994918,-3.549294,6.591219,4.161756,8.374073,-5.594217,-6.115821,-9.292819,-7.908608,-1.814925,-5.182374,4.044320,2.945929,9.896196,-9.495524,-0.481101,-4.734069,0.243957,-8.955098,-1.097081,-4.340109,-3.994711,-5.485481,5.061953,3.889982,-9.710002,-7.387434,3.528749,-3.792686,1.989760,-5.952006,-8.677483,-7.435011,-9.372175,8.197138,-4.878242,8.772482,-8.588885,1.794691,9.584675,-4.480640,-0.522145,8.228518,-7.001770,-8.954046,-7.324634,0.218958,1.633302,-8.303710,-4.700324,6.533956,7.366333,2.840854,-6.717149,7.115139,4.367078,8.062765,6.583743,-9.681869,-5.173940,3.118561,9.055011,-6.964475,-0.354783,-6.466102,-8.810934,3.968968,-7.338043,2.658629,-9.200632,-1.954890,-2.769840,2.553628,-4.181146,1.483890,4.794325,1.972820,-5.261237,7.206869,-6.421421,8.922553,4.644830,0.169810,-1.247512,5.599092,1.765670,-7.175365,5.883943,1.411719,3.099374,5.312022,3.370585,9.900979,-5.000776,-1.144989,-2.082298,7.616083,1.954919,-9.971907,4.086539,-3.897899,0.077227,3.823122,-8.559888,3.308094,2.890230,-3.615717,7.434910,-2.127396,1.512881,5.098116,1.487236,2.644198,2.534224,-2.822098,2.362556,5.862808,1.562729,-8.306019,-4.891976,-4.913737,-7.855742,-4.921109,-1.010297,5.720039,-5.492190,-5.236899,7.465516,-9.751126,8.862082,7.947024,5.538545,7.670390,3.710357,-3.264741,4.695163,-9.292560,-3.646046,-7.417110,4.807308,-7.934206,-6.541835,8.243953,-8.356347,-3.162460,-5.478596,4.877190,-1.274304,4.444537,-0.867642,1.121536,-9.371072,4.475630,6.963418,8.471984,6.902707,-7.103369,-3.656358,7.237905,2.672285,-6.062422,3.074418,2.867817,0.885362,-5.520417,-8.831995,1.920116,4.165767,3.996159,-4.428709,3.537259,-1.545886,5.476618,-9.264330,-0.427743,-8.552766,0.454791,-1.151876,-3.318963,4.415093,7.680391,-6.832941,-4.801707,3.816516,-2.300703,9.681678,6.419052,0.760122,-8.679318,2.611925,1.150478,-0.107978,2.764879,5.988814,-9.603990,-8.877365,2.247720,-1.770175,-9.738652,1.650674,-0.214352,4.541451,3.430010,-2.400009,-9.313696,-8.004644,-1.743204,-8.841105,3.456359,3.249524,6.935213,7.035579,-6.540078,-3.685651,6.754733,-7.815781,-7.804858,9.159886,-6.503564,-9.419235,3.438284,3.316507,3.908696,9.200984,5.331214,-8.064012,7.495293,8.770667,4.769451,-8.831232,-1.225780,-9.475781,-8.731382,-2.000875,-1.916707,1.277331,4.983010,7.717506,9.025698,6.526648,5.834656,7.972062,2.993418,-6.116568,-2.124321,3.268437,2.473841,-6.784102,4.478775,1.935510,2.824301,1.991030,6.632503,5.156381,6.507053,3.878344,-1.579257,2.070576,-4.510781,-6.960951,5.432271,2.179845,-1.406808,-8.144634,-7.282545,7.714699,8.517623,-5.008451,3.771530,1.919881,-7.052679,8.513440,9.372263,-5.245845,-8.370830,-4.544004,-7.833850,5.016041,4.930322,-1.852565,5.844665,9.266237,-5.269236,2.085149,6.916193,-4.884711,1.039549,-1.880231,9.198270,-0.722923,-3.637639,8.948996,-0.553164,7.548835,-8.441524,8.501261,0.897910,-0.483734,-8.030493,2.250581,-1.465684,9.599482,7.713044,-1.774644,-9.302266,-4.341794,-5.565049,4.067473,-4.066977,-4.786916,-0.378721,-8.511818,3.822223,7.559474,-0.497774,5.503889,6.410792,9.450061,4.540824,5.526129,-8.772829,-0.935975,3.678469,-8.980992,-7.391784,-2.057000,-5.449979,-9.847112,-2.127716,-7.701700,-5.148039,7.600626,-3.443109,-4.650455,2.860516,-5.221708,6.946971,-1.752094,-3.690311,8.645448,9.177738,-2.585305,-7.197054,5.263639,-9.224345,-6.731085,-7.425900,-3.652612,-2.592834,-2.010714,-7.650125,4.511507,2.777929,-3.349387,-2.020949,-4.852707,-8.800533,-5.471479,0.081736,0.052637,3.900997,-2.732112,2.493963,-2.654011,2.804555,9.648801,5.583546,6.343658,-6.549736,0.089986,2.499642,5.367761,-7.034660,1.824480,7.648071,5.515674,-4.771648,-7.310731,3.472259,3.330294,8.175590,-9.580146,5.170554,0.373094,-0.478487,3.296117,-1.016758,2.790637,-5.063789,-7.908028,7.797670,-7.498080,7.429655,1.952207,0.577709,9.379107,-5.840294,-8.947261,-0.284504,9.808160,-6.759399,-8.903449,0.430776,3.962445,-4.876754,-0.533604,7.314937,3.109647,3.547776,3.631787,0.067218,-4.124232,4.545779,-4.095903,-2.852946,-9.439588,-1.664922,-0.151564,-8.857423,0.770285,0.638889,-8.889156,-6.081325,-1.177595,-3.478736,-0.317182,-6.763224,1.728734,4.861568,0.440150,-7.972714,-1.438780,7.803809,-7.126556,-1.988146,-9.103234,9.719329,5.020512,7.489219,-4.860312,5.634492,4.538518,4.319986,5.485000,-6.268248,-4.291425,-6.068614,9.540138,4.338533,7.111939,0.703814,-6.546772,-0.304470,-9.788817,5.306844,-2.218941,-7.625670,-5.524369,-5.863767,-8.326833,3.651294,0.805397,-6.948223,2.956962,8.490376,5.281895,-5.653896,6.606173,0.922163,-8.416922,-2.340846,-2.416326,7.669043,-0.308533,-3.760645,-1.094292,-7.196047,-0.393618,4.473439,-4.087594,-8.281679,0.460025,6.634309,-8.666395,8.228016,4.384261,5.276489,-4.556053,0.269591,-1.427516,2.876526,6.013908,3.811646,-0.055534,3.630826,4.812903,0.900222,-7.378779,8.398577,2.296479,-5.705099,5.752845,-2.006514,-2.664828,-3.398231,-8.085929,4.782300,6.397101,7.241208,1.064151,3.919971,-3.582287,-7.303670,6.968206,9.972499,-8.869837,-4.910311,3.053860,1.667160,-3.055352,9.585879,8.946117,-9.891624,3.993834,7.873964,-4.055108,6.819485,8.400603,5.440025,7.481907,0.407539,-2.370880,6.166625,4.739263,9.998885,4.122927,-9.392865,-7.639325,5.158701,-7.458845,-5.635053,9.401082,7.250140,2.642707,-6.159271,-9.668753], dtype = "float32")#candidate|6764|(924,)|const|float32
call_6762 = relay.TupleGetItem(func_1409_call(relay.reshape(var_6763.astype('int64'), [10, 5, 4]), relay.reshape(const_6764.astype('float32'), [924,]), ), 2)
call_6765 = relay.TupleGetItem(func_1412_call(relay.reshape(var_6763.astype('int64'), [10, 5, 4]), relay.reshape(const_6764.astype('float32'), [924,]), ), 2)
func_5085_call = mod.get_global_var('func_5085')
func_5088_call = mutated_mod.get_global_var('func_5088')
const_6773 = relay.const([[4.760141,-1.340140,-8.936381,1.672992,2.859056,0.168034,4.214550,1.983909,-3.541064,-4.168083,-6.220588,-2.888312,-4.243308,-0.963362,2.346569,-5.236056,0.069386,7.786299,-2.171669,8.371563,7.130973,7.422198,-8.255964,5.149152,7.239812,6.886267,-9.966006,6.485661,-1.758831,8.479888,7.603397,-0.439846,-6.702312,-0.465941,-2.113108,9.924599,-5.954228,-2.984205,1.934229,-8.219632,-1.579453,7.902141,9.476190,1.097494,-3.378080,6.362878,2.727059,5.218655,1.877384,-9.979137,0.144396,9.822159,-3.197215,-2.891531,-4.811578,9.379417,-8.219939,0.214956,7.425861,5.346736,1.965723,0.966538,-6.999374,-5.623175,7.377897,-9.113469,-5.489427,-7.626400,6.072988,8.924949,7.691932,-3.346237,4.650186,2.569314,0.895066,-8.490265,-0.575091,1.879829,-4.256874,-8.636217,-9.146804,-2.369702,5.580456,-9.156978,2.181664,-7.096953,-6.898937,8.821102,-8.104245,-8.997750,7.303532,-3.377318,-6.672778,2.488140,6.302762,-8.771165,-5.033133,9.962336,-7.727728,-2.210946,6.592396,-0.749239,-7.367417,5.091865,6.868639,-5.827907,-5.054577,-9.937863,-2.270913,-4.315511,4.072936,2.431963,5.947168,6.454794,-8.546942,-7.711497,-9.711008,7.552825,-6.633335,5.192187,-9.957113,-8.737878,-4.058579,-4.088795,-9.002418,0.466481,0.746151,1.715076,4.939077,-7.054446,5.490955,0.699193,-8.092963,-7.696467,9.220712,-9.287829,0.976444,-8.305865,6.156367,-7.514948,1.175922,4.461663,-2.688002,-9.352360,-8.749258,-5.379127,2.657843,9.859258,-8.384167,-3.472230,-0.194949,-1.787489,6.418864,6.571984,7.338377,4.642229,2.108187,5.861471,9.766127,6.765655,5.891060,7.249013,8.462207,-8.571935,-6.000513,1.288822,7.591141,-9.709131,6.594295,0.008810,3.752742,0.883812,0.560994,0.203191,-6.036928,-5.760870,-4.532954,-9.477616,9.197405,3.593413,2.972190,-5.216646,-8.998786,-4.863101,-0.790879,-1.621287,-6.306314,7.235252,6.805775,-9.371037,2.507082,7.946137,6.701702,-7.514717,-8.611583,-5.670089,-9.403484,-3.145023,-8.272930,-5.366945,-8.133808,-4.045997,9.286458,-2.431497,-7.418814,-2.117344,-3.308725,4.395032,-6.427521,-8.061432,-5.368256,-7.220300,2.195409,1.158321,1.500277,-5.932013,1.067441,-8.565326,-9.726658,3.927097,-7.105110,5.008429,8.539316,-2.061284,-9.596310,-4.785044,3.258896,4.749848,9.135043,-5.121024,9.663005,-4.212179,-6.401377,3.005702,4.352901,7.360091,-2.820085,-6.163654,-2.794684,9.692280,3.408239,3.495034,4.098081,7.188879,9.492955,5.086498,6.203308,8.604289,5.641491,-6.164507,7.000037,-7.774769,-9.001545,2.922433,2.246376,0.602733,-6.609020,0.149726,-9.392832,-6.600229,9.774957,-5.695437,4.280621,-6.272414,-8.591232,-6.257827,-4.064857,0.848821,9.196555,5.024279,-6.054947,-3.050476,4.325210,-6.168852,-7.090876,-8.664790,-6.067625,-9.510760,-3.384530,-9.586830,-3.958357,5.716131,0.343923,3.419149,4.827601,4.475500,-0.858881,8.972105,-9.450892,2.015323,-4.790374,-3.104336,-8.657934,9.755738,4.381220,4.350675,-6.583863,-0.471819,3.117615,-4.506084,3.800480,-8.129519,1.697435,7.470818,3.747278,1.029717,-2.990785,9.521947,-4.786019,-0.233673,-3.826287,1.948926,-6.887565,8.968012,-6.294046,-5.171684,1.612125,1.512524,-6.812895,-5.029004,3.702755,-9.775905,7.384334,-3.999919,-3.235096,4.690431,-3.959041,3.952747,7.477905,-5.969765,-3.986332,5.557965,-0.108589,2.760107,3.034283,-1.343143,2.808142,4.724799,-3.649758,-0.107334,-9.319232,-7.472757,0.514408,0.046255,-5.508087,-0.752043,-5.826955,-0.367959,-7.256817,-8.575770,-0.640135,-5.572273,0.402714,-7.207435,6.445254,-0.055518,9.849313,-5.789037,-9.853639,1.163791,4.327609,6.608252,9.373449,-3.520246,0.517352,6.839335,-8.548817,1.202612,3.072618,4.732430,0.911498,-8.248711,-8.967778,3.843211,-1.319939,4.484473,-0.650561,-3.550813,3.987572,7.135250,7.047510,-4.183210,-1.175999,1.032554,0.284762,-3.316079,-7.394624,4.366046,1.092562,9.976808,1.082901,2.041904,8.302336,1.626675,7.405202,-8.853198,-9.964452,-5.816396,-9.038351,-8.952317,-9.753854,-2.909697,-3.259222,-5.884966,-2.171704,8.532263,-2.158139,9.954521,-9.793486,-9.074323,6.202423,-2.067486,0.487680,-1.223992,-9.861250,-6.453052,8.935421,1.163796,-6.410118,9.846335,1.524970,4.622693,-7.936767,-9.495686,2.918533,-6.737468,5.326809,-0.589953,3.599226,-3.502555,-9.999737,-1.262117,-2.895743,4.666853,2.164574,8.404010,8.296356,5.815342,-5.472677,4.184501,-7.598445,-3.488080,-6.956362,0.577822,-6.475084,-3.474286,-1.372465,-5.186774,-5.137891,5.847704,1.214345,0.932216,7.720030,-0.413465,-1.905496,-0.294398,9.168698,-9.681222,0.909644,0.558849,4.199131,-7.903437,-0.774502,-3.549574,-1.335723,3.985116,0.946543,2.986216,9.669268,-2.558027,8.518642,-6.107606,7.470135,-4.201513,-8.714491,-2.944381,8.409491,8.873929,-7.526300,7.763803,-0.150191,-9.187734,0.464601,-7.738063,7.527816,-9.996065,4.597823,8.776122,2.506973,-8.796844,0.381210,0.716031,7.666199,-2.442393,1.243867,4.456364,-1.358421,9.199485,2.774124,-3.606200,-5.704056,0.264131,-7.378245,-6.644972,-3.661317,7.244603,-2.589725,9.215058,-4.675376,8.506266,4.290835,5.193073,-5.928170,1.119010,-4.892990,-4.533872,-9.407410,0.721596,-4.094360,-1.845898,-7.700414,-8.884518,-2.875424,-6.602054,7.701095,-8.124898,-2.078509,1.312902,-7.012869,-4.731103,-0.809909,0.364447,-6.354991,2.462127,2.742836,-8.508646,-3.045087,-1.098430,-9.012354,7.854900,-4.554146,-5.395593,0.886801,8.762297,-0.938505,-8.460204,-8.109232,4.851314,-2.203526,7.416330,-9.781177,8.056962,-4.968825,9.326467,9.456149,-2.676472,5.155907,-2.040457,-0.820478,-3.424273,-6.348256,-0.845832,8.131257,4.021788,-2.783851,9.842737,-7.649783,5.113211,-8.482836,3.878986,3.302885,8.006114,-7.495187,7.244221,8.833298,5.640253,8.428609,-2.929683,9.370556,-3.565428,-5.699016,-5.665557,9.239875,1.745541,9.630820,4.962525,-5.764333,5.555777,-8.189485,-1.545867,-7.932479,4.313786,2.929685,-5.657380,-7.298756,-7.903943,-1.323524,0.570383,6.253360,3.601416,-2.759957,3.672058,8.284324,0.985717,-2.652089,8.580574,-7.382054,-7.462420,-0.950869,-3.278944,9.214707,5.617412,-0.464505,0.817606,7.534840,-5.642834,7.001984,6.145304,-8.730082,4.773681,-6.733825,9.104712,3.302882,-0.933889,3.163996,-5.508670,9.760130,-2.776095,9.386219,1.981964,8.652452,-5.253022,-9.634430,4.450591,-0.708214,1.852065,-7.457675,3.426711,-4.697434,8.424443,4.450829,-8.845417,-6.920752,-5.230791,0.032327,-7.391861,9.789988,3.575989,-5.895696,-4.882428,2.279354,6.385329,-9.525482,-2.357330,-1.595618,-9.947119,7.702512,2.934823,-1.528731,9.644950,5.962374,-4.664525,-4.982059,-5.821211,-9.608789,-1.367419,-6.226744,7.264141,-9.040913,6.157757,-2.906254,-2.450677,9.099090,5.485959,4.363025,2.660647,-7.515424,8.823333,4.663089,-7.596585,-1.217423,-7.328802,-4.194987,-5.884740,6.472865,-4.470687,9.995395,3.475511,-1.533462,-3.895237,-9.371849,-7.130686,7.775774,8.197551,-5.835996,6.083452,-0.898399,7.521550,8.218884,-0.018281,-2.184833,-2.906733,9.591597,-4.451941,-2.532462,-7.955737,-4.324884,-6.597248,-2.007680,-4.559713,3.394813,-5.956418,8.975923,-6.386511,4.680663,0.509881,7.674840,1.177131,-4.312718,-8.348074,7.015001,3.028379,-0.028568,4.701414,0.793088,5.963858,7.979324,5.611326,4.252470,-3.120862,-8.227903,-6.744383,4.534883,-1.888023,5.623913,1.864831,8.376204,-5.709916,-2.814504,3.204701,-1.497959,-8.048356,-7.915823,-0.620277,2.551849,-8.113228,8.398275,-2.650845,-4.430353,-8.257939,7.138586,-1.323250,-1.451460,-9.845160,4.618435,-9.115798,-6.752405,3.028327,-9.204279,2.766700,-1.801460,3.327274,-6.258825,8.104517,5.478875,3.753240,7.658576,6.235261,-2.257988,-0.975276,2.617291,0.618105,5.458718,-4.973478,2.689886,6.522463,6.142513,6.618471,-8.883466,6.246034,-1.691430,6.023827,-4.840365,1.980397,-2.796703,-5.081849,-6.888360,-0.792905,2.035287,-8.936418,-4.548185,-5.065385,-8.867356,9.002892,-6.437647,-3.724044,1.630638,-6.120994,3.523080,0.985068,8.042684,0.463498,4.911394,2.188206,5.052650,0.184033,-6.985598,2.252514,6.315059,4.388135,6.368336,-0.576671,3.139082,0.955765,-2.820999,1.961697,-4.611780,-8.319774,-9.058056,-9.832669,5.992019,1.567220,-0.358387,-6.188854,0.527854,3.364342,-2.705931,-0.698862,8.067516,-8.727701,-7.409653,5.084649,-0.036767,-7.718194,-7.166457,-3.327898,6.147573,1.331835,3.827466,3.694608,5.988515,8.779304,0.808408,-3.070588,2.753578,-6.162232,-1.298376,3.441251,3.428069,8.438650,-5.402206,3.329776,5.044571,8.203803,4.431187,9.209396,-0.047801,-0.214897,-2.277352,-7.727910,0.036699,8.692505,-0.301932,-7.995456,6.654316,9.488697,-1.283530,8.989702,1.808887,-3.927132,0.472963,-7.611795,-3.906010,4.955619,2.463454,0.841786,2.413880,-2.888510,7.467560,6.414791,-6.855715,-8.011786,-4.150545,-8.317368,6.239007,-9.303219,-5.548977,-8.098725,2.983283,-3.170089,9.395058,2.147145,-9.527142,-3.877792,-5.069390,-7.969489,3.877178,4.278200,-0.354034,5.641438,-8.908612,5.551048,-8.678670,-8.662155,1.183352,-5.266721,-6.263146,3.477566,6.828912,-7.127713,-5.983843,-8.953348,8.072427,6.682038,2.084761,9.921881,-2.897996,5.760039,-8.319096,-9.464537,-0.887839,-0.260472,-4.464699,1.484581,-3.447947,8.266561,6.281138,-3.890464,-4.250071,-8.008178,-4.448518,5.379034,-0.870392,-7.339886,-2.759118,4.669892]], dtype = "float32")#candidate|6773|(1, 936)|const|float32
call_6772 = func_5085_call(relay.reshape(const_6773.astype('float32'), [936,]))
call_6774 = func_5085_call(relay.reshape(const_6773.astype('float32'), [936,]))
uop_6785 = relay.log10(call_6772.astype('float32')) # shape=(936,)
uop_6787 = relay.log10(call_6774.astype('float32')) # shape=(936,)
func_5461_call = mod.get_global_var('func_5461')
func_5463_call = mutated_mod.get_global_var('func_5463')
call_6792 = func_5461_call()
call_6793 = func_5461_call()
output = relay.Tuple([call_6735,call_6762,var_6763,const_6764,const_6773,uop_6785,call_6792,])
output2 = relay.Tuple([call_6736,call_6765,var_6763,const_6764,const_6773,uop_6787,call_6793,])
func_6797 = relay.Function([var_6763,], output)
mod['func_6797'] = func_6797
mod = relay.transform.InferType()(mod)
var_6798 = relay.var("var_6798", dtype = "int64", shape = (200,))#candidate|6798|(200,)|var|int64
output = func_6797(var_6798)
func_6799 = relay.Function([var_6798], output)
mutated_mod['func_6799'] = func_6799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4116_call = mod.get_global_var('func_4116')
func_4118_call = mutated_mod.get_global_var('func_4118')
call_6818 = relay.TupleGetItem(func_4116_call(), 0)
call_6819 = relay.TupleGetItem(func_4118_call(), 0)
output = relay.Tuple([call_6818,])
output2 = relay.Tuple([call_6819,])
func_6823 = relay.Function([], output)
mod['func_6823'] = func_6823
mod = relay.transform.InferType()(mod)
output = func_6823()
func_6824 = relay.Function([], output)
mutated_mod['func_6824'] = func_6824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6543_call = mod.get_global_var('func_6543')
func_6545_call = mutated_mod.get_global_var('func_6545')
call_6868 = relay.TupleGetItem(func_6543_call(), 2)
call_6869 = relay.TupleGetItem(func_6545_call(), 2)
func_811_call = mod.get_global_var('func_811')
func_816_call = mutated_mod.get_global_var('func_816')
var_6873 = relay.var("var_6873", dtype = "float64", shape = (72,))#candidate|6873|(72,)|var|float64
const_6874 = relay.const([6.122147,-8.986545,8.740557,-3.116494,4.301313,-8.708835,-4.335441,-7.418812,5.304578,-0.680321,-4.824101,6.061487,6.686070,9.240614,9.434769,-7.377527,3.307016,-2.601633,-3.321040,3.758535,4.176144,-8.875081,-1.224322,-3.458717,0.206204,-7.758902,2.943145,2.625730,6.380188,9.295193,1.155079,-1.637392,-2.967852,2.511984,1.820219,-0.279938,3.914630,-7.417677,1.618640,0.601313,-6.206673,-8.762650,-6.839735,-1.878938,-4.145931,-8.781847,-7.608238,-0.168227,7.835550,1.238881,1.639867,-9.078463,-2.454108,-8.150267,9.316140,7.639508,0.893351,3.311421,2.750804,-0.505331,3.808965,5.243202,6.089034,-2.994515,6.343197,0.634560,7.188152,3.758620,7.036025,4.467738,-2.760143,-8.710005,-5.551347,0.364944,9.781505,7.357105,-4.273368,-0.151583,4.236598,-4.140384,-0.444548,5.896928,5.910194,-5.213454,-8.744757,1.187859,-2.597907,-1.167766,6.169183,-8.269209,9.115152,3.732016,-0.047616,1.486699,-3.716539,-8.160971,-9.145926,-7.901389,7.842969,-4.451919,-7.426486,-4.760694,7.520184,0.190341,-0.880639,0.495530,-8.461568,4.970153,9.628018,-3.677397,-0.077145,-8.913192,-6.538958,9.071773,1.885409,9.334585,6.484122,-6.153959,-4.909346,-4.931768,9.528227,9.269688,-6.070097,-9.572395,8.398871,-2.255186,-2.158595,-5.000320,5.440076,-5.300775,7.045818,8.370792,0.124905,7.765812,2.811275,-6.188437,-4.676010,-4.545499,-7.587233,-1.265950,7.717814,4.207114,5.927862,-0.271492,7.172867,-5.178410,-5.978151,-0.106003,7.563268,-5.388843,4.324816,-6.815927,-2.739392,-5.111298,4.682905,-2.002665,0.067241,-3.490969,-5.035539,-6.020385,7.539165,-6.962311,-1.630223,9.076408,9.396703,-1.867405,-5.713829,-0.092142,-1.157020,1.964986,4.951312,-0.036191,-8.413514,9.103651,-8.305755,-2.149668,-8.668603,2.305192,9.172295,2.049079,-0.789268,5.036855,-7.762947,7.039063,7.619465,-6.566829,1.220061,3.319824,-7.858599,-4.340820,-2.707098,-5.128726,1.692657,4.737464,4.768546,1.584037,8.385560,-6.421451,-7.250882,-4.612334,0.170938,-3.803639,8.397187,-0.457802,5.772541,-5.494375,3.207493,-2.709360,1.343963,-4.810599,-7.457235,-9.644741,-8.154505,7.267085,0.924461,-2.988430,0.781138,6.716431,1.341664,-4.682083,-4.712305,-8.838537,6.293877,-4.426069,6.566312,9.162098,8.510395,9.164767,9.319722,-7.644261,-9.898014,5.709941,-3.840415,-4.238794,-7.331566,-1.500354,-2.062589,-2.383294,0.931144,-2.179992,9.860742,8.921190,0.461167,9.305753,4.277923,8.866816,-9.678473,7.419157,2.099864,-6.987291,-5.984292,-9.299284,-8.105955,2.340995,-1.525884,-9.280328,3.033760,-5.419605,-8.297515,9.754135,6.417078,8.189655,7.624834,-5.029937,-3.015500,-4.449508,7.245190,7.435833,-9.876124,-5.909935,-5.497923,-8.707989,-4.952470,6.316255,-7.914342,-7.391091,1.204112,-8.921276,8.550871,-8.569935,5.683790,-6.226611,1.196153,-4.991767,-2.673622,-3.640932,7.819090,9.573531,4.304353,-4.573735,4.829386,-2.759930,-3.303512,-4.274433,7.246245,-1.821921,8.535990,-9.767114,-0.352148,-9.295905,0.889318,-0.702909,-7.532993,-7.939323,-5.536776,7.796570,8.558262,-6.866804,-6.896436,7.448535,0.823488,9.309721,4.708538,-1.775810,-1.053370,-6.715918,3.907839,2.686643,-3.479595,-1.984448,-2.223931,3.656066,4.579974,-6.661919,-5.622739,8.006548,4.213036,-4.843620,-1.136294,-8.727034,-7.506609,-0.292025,3.751472,0.352512,4.606814,-7.431581,7.696129,-1.549814,-2.912888,5.237809,-2.092775,-4.423008,3.028206,-8.875061,9.847746,-0.448819,-0.687792,-7.581438,-7.927060,0.949699,8.765791,-3.522006,3.987664,8.320267,0.654069,-4.956074,5.370299,2.606790,-2.074152,2.429990,-7.183045,9.108454,-3.428441,3.007000,9.459277,7.166928,-3.906111,3.347838,-2.451382,5.284373,8.857771,2.356021,1.602194,6.556128,6.473294,4.893604,7.369067,-2.899906,-5.271479,-5.941447,-1.866432,-8.581313,0.079927,3.891560,-9.387299,0.815083,-1.549254,5.098157,9.514902,5.057756,9.100919,5.481272,1.626603,-5.102071,7.391730,7.914507,-1.491859,-7.139411,-8.450838,3.373818,6.362941,-1.445382,-4.124300,7.915921,0.536168,-5.079540,5.577068,7.488605,2.393190,5.501898,-1.790126,-6.746031,-8.686782,6.297541,-5.243482,-3.894738,1.613050,-6.310880,-6.323558,-5.343985,-4.529150,-7.649892,-9.417719,5.081208,9.442923,-8.791252,4.460418,6.208591,3.197354,-4.926652,2.160636,9.639809,-3.954977,-4.931831,3.698445,-9.860608,8.199364,-5.910477,-9.765857,6.045939,-8.249148,0.558332,4.379613,1.378753,5.485690,-3.852153,-0.586095,-7.475959,2.706072,2.546140,9.287452,8.846053,-8.711099,-1.380465,9.815891,6.740834,0.699189,2.505671,4.039708,7.785904,6.894058,1.051142,-8.952087,-5.183877,6.076717,-6.985315,7.307876,3.393940,3.188546,-9.087729,-3.681961,-2.963388,-4.634257,-3.714086,2.493013,7.941245,7.478053,-5.813926,-8.233483,-8.644690,0.693639,-2.493734,-3.185680,-8.121988,3.640985,-0.455011,-5.431647,0.836304,-2.986031,-1.297076,3.085816,-0.673821,4.669499,-6.082559,9.002080,8.449054,-1.240647,5.086115,4.574036,-8.062741,-8.113847,-3.859968,-5.949436,-4.778734,9.038058,-8.906120,-9.892937,-9.607174,2.666593,1.577895,8.823994,9.916963,-4.240114,-7.578121,8.023904,-6.062683,6.947838,-0.829120,-8.965758,-5.741443,-1.778874,-4.085994,-4.888546,-4.948853,-4.135318,-1.677123,-1.967385,1.016810,2.909948,-1.820022,-1.814367,-0.599040,-4.456837,0.725839,4.662774,-2.997076,-1.958634,-6.596237,2.764657,4.164704,-2.718918,8.609639,4.934861,9.294244,-3.461540,8.999482,-3.757201,-4.537348,9.898759,4.338952,-3.469248,-0.701223,7.800993,2.085444,1.599581,-7.847454,-4.992049,-4.431140,-2.343660,-4.731274,2.655039,0.853426,-7.135414,-7.487515,-2.241636,-9.684813,-6.999222,3.332758,-0.779846,-6.711911,1.421028,2.032831,3.413664,-7.652055,-8.038586,-2.616353,-4.766156,5.864193,-9.219108,-0.077084,-0.139796,0.732968,2.797263,-4.597548,1.495924,6.923898,8.532944,-5.413002,-9.944703,-6.564614,-3.720284,5.488208,-3.151105,3.035759,-5.752877,6.657007,-4.924329,2.742819,-8.582691,5.367459,1.385359,-5.007896,-1.289576,4.144283,2.364501,9.676750,-9.175996,3.990354,0.184940,3.168248,-0.304681,-9.681858,7.678616,1.765746,0.143048,8.057446,2.191186,0.740821,2.241042,6.196567,-8.375695,-8.748753,3.810290,-2.777568,-7.139832,-1.262951,-4.315415,7.956546,5.482416,1.745304,-1.859381,3.872899,0.428782,2.047896,8.491612,4.510954,3.945168,-6.329252,7.716751,7.191880,2.639159,3.798707,4.953354,7.098318,7.816827,4.154865,-8.728845,9.599303,-0.238720,-5.320593,8.307847,3.745769,9.156159,5.110110,-1.262603,-3.491686,7.207719,-7.944696,-8.217049,7.922080,-0.926928,4.253091,5.920006,-7.333158,6.628916,3.855998,6.734377,0.011878,-0.961925,4.646317,-4.178163,-8.335295,2.349804,-6.037173,4.976318,5.769119,-0.352795,-5.801884,-8.377656,1.752872,3.909405,-1.101199,-2.641978,9.255302,2.885805,9.298326,-0.320969,2.150993,-0.452442,1.602691,4.343913,-2.730239,-3.500709,2.329407,7.589733,-0.831348,6.029175,2.223283,4.223436,-0.319406,-4.188079,-4.207516,-5.459696,-1.336480,7.655103,-6.224595,2.289631,-4.531997,4.796983,-6.126868,7.589920,4.769879,4.420912,-3.564648,0.275073,9.550031,-1.716679,-5.785212,8.810061,-7.067227,-6.340995,6.422552,2.969099,4.173703,6.305903,6.246946,5.184706,5.135356,-0.913929,5.641449,2.219444,2.821202,-2.778800,-2.467379,-7.945061,-3.854168,0.404035,-7.167081,4.476597,1.573509,9.463318,6.613180,6.280155,-5.155940,-5.936223,8.365690,-5.248474,-6.011230,-4.121076,8.352097,9.644689,8.407261,6.572368,3.645229,-3.629763,-8.685694,7.095411,-1.068758,-5.042429,-1.901163,-7.999411,-3.458161,-4.693366,8.695461,7.390312,-7.964143,-1.025067,7.826237,6.951539,-0.852042,0.291773,-2.486581,3.905929,4.235424,9.537713,-5.739245,0.340354,-5.469248,4.394141,-0.626523,-9.029767,1.521065,4.075337,0.233051,6.200488,-7.556320,-1.754969,-7.006352,7.104976,7.372620,5.010983,-8.090873,3.964687,4.541495,-3.685619,5.515516,-8.096449,3.526977,-4.377914,-6.190117,-5.347118,-0.634603,6.908159,-3.452410,9.491094,5.389114,-1.679521,7.815649,0.375543,-5.505510,5.222968,-4.570169,0.161207,2.909148,-6.508091,0.100348,-5.076004,9.454039,-1.211347,-7.110478,-0.001419,2.614185,0.757653,-1.426891,6.774347,-2.405350,-4.585775,-2.824744,-4.993241,1.938929,5.470522,2.511842,7.089718,-5.388588,8.768264,3.009721,-6.630950,-8.271447,9.652826,-1.882919,5.642530,8.754787,-5.488638,5.106672,8.409889,2.414683,-6.627636,-8.217317,-1.631708,4.704405,9.183756,0.660167,1.438774,7.888902,-4.055799,4.126390,-7.235593,3.412617,-3.973066,2.898782,-0.419926,0.946615,-4.901992,-3.356062,-4.006882,-0.255697,-2.891059,0.314562,6.908303,-7.765827,5.305071,8.881331,7.129764,-4.448442,-5.439636,7.001557,-1.992653,2.532646,2.047944,6.054474,8.614593,0.823665,5.919405,-8.289701,-0.949568,-2.180925,-9.356801,1.900009,7.879327,-0.971462,-5.642558,-4.135960,-8.743089,2.181335,9.850825,2.750157,-7.362468,-9.243155,1.019652,-6.043526,4.500610,7.969695,-1.618363,1.227598,-0.943339,7.119524,-8.907356,-9.870942,7.328893,-6.299374,-2.172141,-8.201541,-9.128144,3.399624,4.840275,6.649861,-0.222627,-9.772935,-2.359248,-8.346751,2.555230,5.328915,4.108986,-1.305336,9.863124,9.714305,-1.922795,-4.779214,-9.206524,9.074639,7.268977,3.034753,8.865421,-5.670259,1.687849,5.641624], dtype = "float32")#candidate|6874|(936,)|const|float32
call_6872 = relay.TupleGetItem(func_811_call(relay.reshape(var_6873.astype('float64'), [4, 2, 9]), relay.reshape(var_6873.astype('float64'), [4, 2, 9]), relay.reshape(const_6874.astype('float32'), [8, 13, 9]), ), 4)
call_6875 = relay.TupleGetItem(func_816_call(relay.reshape(var_6873.astype('float64'), [4, 2, 9]), relay.reshape(var_6873.astype('float64'), [4, 2, 9]), relay.reshape(const_6874.astype('float32'), [8, 13, 9]), ), 4)
output = relay.Tuple([call_6868,call_6872,var_6873,const_6874,])
output2 = relay.Tuple([call_6869,call_6875,var_6873,const_6874,])
func_6878 = relay.Function([var_6873,], output)
mod['func_6878'] = func_6878
mod = relay.transform.InferType()(mod)
var_6879 = relay.var("var_6879", dtype = "float64", shape = (72,))#candidate|6879|(72,)|var|float64
output = func_6878(var_6879)
func_6880 = relay.Function([var_6879], output)
mutated_mod['func_6880'] = func_6880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6260_call = mod.get_global_var('func_6260')
func_6262_call = mutated_mod.get_global_var('func_6262')
call_6899 = func_6260_call()
call_6900 = func_6260_call()
func_5685_call = mod.get_global_var('func_5685')
func_5686_call = mutated_mod.get_global_var('func_5686')
call_6901 = func_5685_call()
call_6902 = func_5685_call()
func_6169_call = mod.get_global_var('func_6169')
func_6172_call = mutated_mod.get_global_var('func_6172')
const_6920 = relay.const([-4,-5,-1,10,-3,10,-6,9,-3,5,9,5,1,2,-1,-9,-3,-7,-7,4,6,3,-6,-3,-7,6,-8,-9,1,8,8,8,-10,-6,1,-8,-5,8,1,10,-4,6,-7,10,8,-9,-3,-10,3,-9,-7,1,8,-5,5,-7,-2,-10,9,9,7,-6,9,3,-1,6,1,-1,-1,8,-2,2,1,6,-1,7,-5,10,8,-7,10,-8,3,10,6,9,-6,-5,-4,-8,8,-4,-8,-8,-10,7,8,-10,5,-4,-1,-10,-5,-5,7,-5,9,-7,-4,5,-8,3,-6,-9,-3,3,-8,-1,9,4,-9,9,8,7,1,-5,4,6,-1,2,-10,9,7,10,8,-2,-3,-5,6,-3,3,5,6,-9,8,4,-6,5,3,-1,-1,7,3,3,5,-6,3,-8,-5,-9,-8,-1,4,-10,-1,-9,4,-6,-2,-8,-6,7,-8,-2,2,5,4,6,2,-6,-7,-7,5,-1,6,-3,-4,4,5,-6,-7,7,-9,-9,9,5,-2,-8,-10,3,-8,8,9,5,-10,-9,4,-8,8,-3,5,-2,4,6,-1,-10,7,1,2,10,-9,-8,-6,5,4,-3,-7,3,-7,5,-8,-6,-3,-3,-7,6,3,-6,-10,4,-8,-10,2,-6,4,6,6,-9,1,5,-4,-3,-7,-7,-1,-1,-8,3,6,-8,3,-4,-7,8,-6,7,8,-8,-10,-3,6,9,-7,-1,-2,-7,4,-3,-6,-3,8,4,-2,10,-7,-3,9,4,-2,2,5,-10,1,-4,-6,9,6,7,-6,-8,-2,-6,10,-8,7,10,-9,5,-4,7,3,-4,-9,-5,-10,8,5,-4,5,9,3,-6,-10,2,-9,5,-7,10,-2,3,-9,5,-6,-9,10,-3,-9,-5,1,4,8,-1,-10,5,6,-3,10,7,6,8,-5,-9,1,3,1,1,9,-6,-3,-1,8,3,4,5,7,-6,-4,7,10,9,-9,3,-6,-7,2,9,-1,-10,-4,5,-10,-8,-5,-2,-6,6,-5,1,10,10,5,-5,-2,1,2,1,-6,-6,3,8,1,5,5,-7,4,-10,-7,-5,-10,8,2,-3,8,9,-9,3,1,8,-3,-2,10,-8,-4,5,1,5,-3,-10,-10,-4,-6,-9,-4,2,1,4,5,-8,7,3,7,1,-6,2,-2,5,5,4,2,-5,-1,2,-5,2,-6,-1,-3,-4,7,-5,6,8,5,-9,9,7,6,-3,4,4,2,-2,8,-4,-5,4,10,-3,4,-1,7,-3,9,-6,1,2,3,-8,1,-8,2,8,-3,-6,-2,-2,-5,3,-10,9,-7,7,-5,5,-7,-2,4,-1,-8,8,2,-8,4,2,-10,-5,10,-9,7,10,-6,4,-10,-8,2,8,-3,-2,10,1,5,-7,10,-1,-1,-2,3,6,3,-6,8,-2,2,8,-7,2,-8,8,-6,-4,10,-3,-4,-10,10,3,-10,1,-8,-4,9,-9,-6,5,-6,10,-9,-2,-1,-9,10,1,6,4,2,-8,-7,-7,4,6,3,9,-10,-4,-7,3,6,9,-7,-3,-2,-1,-10,1,-2,-7,2,8,8,2,6,1,1,-3,5,-9,-1,-6,-1,-4,-4,2,6,8,4,7,7,-4,-10,-9,7,1,-2,-6,6,8,2,7,-9,-1,-7,5,-8,2,-7,4,1,-1,-2,6,8,7,-3,5,-1,7,5,-10,4,-5,-3,7,2,-8,5,-4,7,1,8,-4,-4,-5,-6,4,-8,-2,-5,6,-9,6,8,6,-3,-7,-5,-2,-5,-8,3,-2,-10,-2,7,4,4,-9,2,-10,-2,-6,2,-6,6,-10,5,-9,-10,1,1,-1,-7,-7,-6,2,6,5,-7,-6,2,-1,2,3,1,9,-9,-4,3,-3,-10,6,-4,-5,1,-5,9,-1,6,-3,8,-8,2,-1,-5,3,1,3,-10,8,2,-4,9,-2,-9,-1,-6,-4,-1,5,-1,-3,-8,8,5,-9,1,-7,-1,7,-3,7,-7,8,-5,-8,-9,-9,-5,7,6,6,9,10,-2,2,-7,-3,-1,6,1,-4,-3,1,9,10,2,-3,-1,5,-1,-7,7,5,-10,-3,3,5,-10,5,-2,7,3,9,4,-7,10,-5,5,-4,-9,8,-4,-9,1,4,-9,1,10,7,-3,-10,8,9,-5,10,10,7,3,8,10,-9,-4,2,-10,7,1,8,3,7,-2,2,-5,8,7,-5,-10,5,-5,-6,-3,-8,-2,-8,-6,5,-1,2,7,5,-5,-10,-5,7,-1,-4,-9,1,-3,-8,-3,8,1,-10,-9,-4,-7,7,1,-3,8,7,2,-9,-6,-3,-4,-10,1,5,7,2,6,-6,-5,9,6,1,1,-2,-10,5,6,-9,7,6,-5,-6,2,-8,-2,-10,-3,6,-4,-3,5,-8,-3,-9,3,4,6,9,-3,4,-5,4,7,4,-8,8,2,4,3,8,9,-3,4,-2,2,2,10,7,-6,1,-7,9,4,-7,-7,2,8,10,1,9,-9,5,7,-9,3,6,8,1,9,9,-4,-1,-10,4,-6,-7,4,-4,-3,3,-2,8,-6,-4,-9,-2,-5,7,5,-7,6,6,5,2,-3,-4,8,9,-10,-1,-5,4,-6,-5,4,-4,5,2,-9,8,9,-1,3,-1,2,-4,4,8,8,-1,-5,-3,-6,-2,7,-9,1,5,1,-1,-9,1,-2,1,2,10,-8,10,6,-9,4,-1,-9,3,4,4,-6,7,7,7,2,9,-10,4,-2,1,2,-3,10,-2,9,-10,-2,-2,-4,8,-6,-6,7,4,-2,7,9,-4,7,7,-1,-2,3,3,5,-3,-10,9,10,9], dtype = "uint64")#candidate|6920|(1080,)|const|uint64
call_6919 = relay.TupleGetItem(func_6169_call(relay.reshape(const_6920.astype('uint64'), [8, 15, 9]), relay.reshape(const_6920.astype('uint64'), [8, 15, 9]), ), 3)
call_6921 = relay.TupleGetItem(func_6172_call(relay.reshape(const_6920.astype('uint64'), [8, 15, 9]), relay.reshape(const_6920.astype('uint64'), [8, 15, 9]), ), 3)
var_6927 = relay.var("var_6927", dtype = "uint64", shape = (1080,))#candidate|6927|(1080,)|var|uint64
bop_6928 = relay.left_shift(const_6920.astype('uint8'), relay.reshape(var_6927.astype('uint8'), relay.shape_of(const_6920))) # shape=(1080,)
output = relay.Tuple([call_6899,call_6901,call_6919,bop_6928,])
output2 = relay.Tuple([call_6900,call_6902,call_6921,bop_6928,])
F = relay.Function([var_6927,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6927,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

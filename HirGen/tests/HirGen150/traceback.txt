==========mod==========
#[version = "0.0.5"]
def @func_4419(%var_4410: Tensor[(1404), float32]) -> (Tensor[(2730), float32], Tensor[(2730), float64], Tensor[(16, 12, 2), uint16], Tensor[(1404), float32], Tensor[(180), float32]) {
  %0 = @func_3336() /* ty=(Tensor[(2730), float32],) */;
  %1 = @func_3586() /* ty=(Tensor[(2730), float32],) */;
  %2 = %1.0;
  %3 = cast(%2, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %4 = cast(%var_4410, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %5 = cast(%2, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %6 = reshape(%4, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
  %7 = reshape(%5, newshape=[2730]) /* ty=Tensor[(2730), float32] */;
  %8 = @func_4067(%6, %7) /* ty=(Tensor[(13, 9, 12), bool], Tensor[(180), float32], Tensor[(180), float32], Tensor[(2730), int64], Tensor[(16, 12, 2), uint16], Tensor[(3150), float64], Tensor[(2730), int8], Tensor[(15, 14, 13), float64]) */;
  %9 = %0.0;
  %10 = log(%3) /* ty=Tensor[(2730), float64] */;
  %11 = %8.4;
  %12 = @func_1429() /* ty=Tensor[(180), float32] */;
  (%9, %10, %11, %var_4410, %12)
}

def @func_1619() -> (Tensor[(15, 14, 13), float64], Tensor[(16, 12, 2), uint16]) {
  %13 = @func_1437() /* ty=Tensor[(15, 14, 13), float64] */;
  %14 = cast(%13, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
  %15 = reshape(%14, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
  %16 = @func_1538(%15) /* ty=(Tensor[(15, 14, 13), bool], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16]) */;
  %17 = %16.1;
  (%13, %17)
}

def @func_4214() -> Tensor[(15, 14, 13), float64] {
  @func_3144() /* ty=Tensor[(15, 14, 13), float64] */
}

def @func_2138() -> (Tensor[(2730), float32],) {
  %18 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
  %19 = %18.1;
  (%19,)
}

def @func_2547() -> (Tensor[(13, 9, 12), bool], Tensor[(180), float32], Tensor[(180), float32], Tensor[(13, 9, 12), int32]) {
  %20 = @func_2455() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %21 = %20.0;
  %22 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 9, 12), float32] */, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%21, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %26 = cast(meta[relay.Constant][1] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %27 = reshape(%26, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %28 = @func_1667(%27) /* ty=(Tensor[(16, 14, 11), float64], Tensor[(15, 14, 13), float32], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16]) */;
  %29 = cast(%21, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %30 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(13, 9, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %31 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 9, 12), float32] */, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %33 = logical_and(%31, %32) /* ty=Tensor[(13, 9, 12), bool] */;
  %34 = cast(%21, dtype="int32") /* ty=Tensor[(13, 9, 12), int32] */;
  %35 = shape_of(%33, dtype="int32") /* ty=Tensor[(3), int32] */;
  %36 = cast(%33, dtype="int32") /* ty=Tensor[(13, 9, 12), int32] */;
  %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %38 = logical_or(%24, %25) /* ty=Tensor[(13, 9, 12), bool] */;
  %39 = %28.3;
  %40 = left_shift(%36, %37) /* ty=Tensor[(13, 9, 12), int32] */;
  (%38, %39, meta[relay.Constant][1] /* ty=Tensor[(180), float32] */, %40)
}

def @func_2902(%var_2825: Tensor[(13, 9, 12), bool], %var_2874: Tensor[(1040), int64], %var_2889: Tensor[(15, 14, 13), float64]) -> (Tensor[(13, 9, 12), int64], Tensor[(16, 12, 2), uint16], Tensor[(15, 14, 13), float64], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(4, 300), int16], Tensor[(16, 13, 5), int64], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2730), float32], Tensor[(15, 14, 13), int16], Tensor[(15, 14, 13), float32]) {
  %41 = @func_2547() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(180), float32], Tensor[(180), float32], Tensor[(13, 9, 12), int32]) */;
  %42 = %41.0;
  %43 = cast(%var_2825, dtype="int64") /* ty=Tensor[(13, 9, 12), int64] */;
  %44 = shape_of(%42, dtype="int32") /* ty=Tensor[(3), int32] */;
  %45 = cast(%42, dtype="int64") /* ty=Tensor[(13, 9, 12), int64] */;
  %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %47 = @func_1619() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(16, 12, 2), uint16]) */;
  %48 = @func_1985() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64]) */;
  %49 = @func_2211() /* ty=(Tensor[(10, 7, 7), float32],) */;
  %50 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 300), int16] */, dtype="int16") /* ty=Tensor[(4, 300), int16] */;
  %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 300), int16] */, dtype="int16") /* ty=Tensor[(4, 300), int16] */;
  %52 = reshape(%50, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
  %53 = reshape(%51, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
  %54 = @func_2170(%52, %53) /* ty=(Tensor[(5, 16, 15), bool], Tensor[(2730), float32], Tensor[(180), float32]) */;
  %55 = cast(%var_2874, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %56 = cast(meta[relay.Constant][3] /* ty=Tensor[(3150), float64] */, dtype="float64") /* ty=Tensor[(3150), float64] */;
  %57 = reshape(%55, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
  %58 = reshape(%56, newshape=[1, 3150]) /* ty=Tensor[(1, 3150), float64] */;
  %59 = @func_295(%57, %58) /* ty=(Tensor[(16, 13, 5), int64], Tensor[(16, 12, 2), uint16], Tensor[(1, 3150), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(14, 15, 15), int64]) */;
  %60 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
  %61 = @func_2086() /* ty=Tensor[(15, 14, 13), float64] */;
  %62 = cast(%61, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
  %63 = sqrt(%62) /* ty=Tensor[(15, 14, 13), float64] */;
  %64 = cast(%var_2889, dtype="int16") /* ty=Tensor[(15, 14, 13), int16] */;
  %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%63, dtype="int16") /* ty=Tensor[(15, 14, 13), int16] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %68 = @func_2643() /* ty=Tensor[(15, 14, 13), float64] */;
  %69 = cast(%68, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
  %70 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%63, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %73 = bitwise_and(%45, %46) /* ty=Tensor[(13, 9, 12), int64] */;
  %74 = %47.1;
  %75 = %48.0;
  %76 = %49.0;
  %77 = @func_2643() /* ty=Tensor[(15, 14, 13), float64] */;
  %78 = %54.2;
  %79 = %59.0;
  %80 = %60.1;
  %81 = minimum(%66, %67) /* ty=Tensor[(15, 14, 13), int16] */;
  %82 = floor_mod(%71, %72) /* ty=Tensor[(15, 14, 13), float32] */;
  (%73, %74, %75, %76, %77, %78, meta[relay.Constant][2] /* ty=Tensor[(4, 300), int16] */, %79, %var_2874, meta[relay.Constant][3] /* ty=Tensor[(3150), float64] */, %80, %81, %82)
}

def @func_3923(%var_3900: Tensor[(13, 9, 12), float32], %var_3906: Tensor[(1040), int64]) -> (Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(13, 9, 12), float32]) {
  %83 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %84 = @func_2455() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %85 = %84.0;
  %86 = cast(%var_3900, dtype="int8") /* ty=Tensor[(13, 9, 12), int8] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%85, dtype="int8") /* ty=Tensor[(13, 9, 12), int8] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %90 = logical_xor(%88, %89) /* ty=Tensor[(13, 9, 12), int8] */;
  %91 = cast(%90, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %92 = cast(%var_3906, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %93 = reshape(%91, newshape=[1404]) /* ty=Tensor[(1404), bool] */;
  %94 = reshape(%92, newshape=[40, 26]) /* ty=Tensor[(40, 26), int64] */;
  %95 = @func_3296(%93, %94) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1404), bool], Tensor[(40, 26), int64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(?, 3150), uint16]) */;
  %96 = cast(%90, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %97 = %83.0;
  %98 = %95.0;
  %99 = acos(%96) /* ty=Tensor[(13, 9, 12), float32] */;
  (%97, %98, %var_3906, %99)
}

def @func_5024() -> Tensor[(13, 9, 12), float32] {
  %100 = @func_4569() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %100.0
}

def @func_3454() -> (Tensor[(8, 4, 5), float32],) {
  %101 = @func_3058() /* ty=(Tensor[(8, 4, 5), float32],) */;
  %102 = %101.0;
  (%102,)
}

def @main(%var_6204: Tensor[(8, 4, 4), uint8], %var_6212: Tensor[(1408), uint32]) -> (Tensor[(5, 16, 15), bool], Tensor[(8, 4, 4), uint32], Tensor[(1408), int64]) {
  %103 = cast(meta[relay.Constant][4] /* ty=Tensor[(1408), uint32] */, dtype="uint32") /* ty=Tensor[(1408), uint32] */;
  %104 = cast(meta[relay.Constant][4] /* ty=Tensor[(1408), uint32] */, dtype="uint32") /* ty=Tensor[(1408), uint32] */;
  %105 = reshape(%103, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), uint32] */;
  %106 = reshape(%104, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), uint32] */;
  %107 = @func_5474(%105, %106) /* ty=(Tensor[(8, 11, 16), bool], Tensor[(5, 16, 15), bool], Tensor[(12, 100), int16]) */;
  %108 = @func_3664() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(2730), float32], Tensor[(8, 4, 4), uint8], Tensor[(8, 16), float64], Tensor[(8, 4, 5), float64], Tensor[(15, 14, 13), float64]) */;
  %109 = %108.2;
  %110 = cast(%var_6204, dtype="uint32") /* ty=Tensor[(8, 4, 4), uint32] */;
  %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%109, dtype="uint32") /* ty=Tensor[(8, 4, 4), uint32] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %114 = cast(%var_6212, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %115 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(1408), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %116 = cast(meta[relay.Constant][4] /* ty=Tensor[(1408), uint32] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?), int64] */;
  %118 = %107.1;
  %119 = bitwise_or(%112, %113) /* ty=Tensor[(8, 4, 4), uint32] */;
  %120 = multiply(%116, %117) /* ty=Tensor[(1408), int64] */;
  (%118, %119, %120)
}

def @func_1437() -> Tensor[(15, 14, 13), float64] {
  %121 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
  %121.0
}

def @func_34(%var_26: Tensor[(16, 12, 2), uint16]) -> Tensor[(16, 12, 2), uint16] {
  %122 = cast(%var_26, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
  %123 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(16, 12, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %124 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 12, 2), uint16] */, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  logical_xor(%124, %125) /* ty=Tensor[(16, 12, 2), uint16] */
}

def @func_5551() -> Tensor[(8, 4, 5), float64] {
  %126 = @func_3232() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(8, 4, 5), float64]) */;
  %126.1
}

def @func_5313() -> (Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(180), float32]) {
  %127 = @func_3964() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %128 = @func_3232() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(8, 4, 5), float64]) */;
  %129 = %127.0;
  %130 = %128.0;
  %131 = @func_1429() /* ty=Tensor[(180), float32] */;
  (%129, %130, %131)
}

def @func_4947(%var_4918: Tensor[(3150), float64], %var_4919: Tensor[(30), int8], %var_4921: Tensor[(90, 2), float32]) -> (Tensor[(2730), float32], Tensor[(6, 30), float32], Tensor[(3150), float64], Tensor[(30), int8], Tensor[(1200), int16], Tensor[(90, 2), float32]) {
  %132 = @func_2587() /* ty=(Tensor[(16, 12, 2), uint16], Tensor[(2730), float32], Tensor[(180), float32]) */;
  %133 = %132.1;
  %134 = cast(%133, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %135 = cast(%var_4918, dtype="float64") /* ty=Tensor[(3150), float64] */;
  %136 = cast(%var_4919, dtype="int8") /* ty=Tensor[(30), int8] */;
  %137 = cast(meta[relay.Constant][6] /* ty=Tensor[(1200), int16] */, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %138 = cast(%var_4921, dtype="float32") /* ty=Tensor[(90, 2), float32] */;
  %139 = reshape(%134, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
  %140 = reshape(%135, newshape=[3150]) /* ty=Tensor[(3150), float64] */;
  %141 = reshape(%136, newshape=[30]) /* ty=Tensor[(30), int8] */;
  %142 = reshape(%137, newshape=[1200]) /* ty=Tensor[(1200), int16] */;
  %143 = reshape(%138, newshape=[6, 30]) /* ty=Tensor[(6, 30), float32] */;
  %144 = @func_4882(%139, %140, %141, %142, %143) /* ty=(Tensor[(15, 14, 13), bool], Tensor[(15, 14, 13), uint64], Tensor[(15, 14, 13), float32], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2, 600), int16], Tensor[(30), int8], Tensor[(1200), int16], Tensor[(8, 4, 5), float32], Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(6, 30), float32], Tensor[(14, 15, 15), bool], Tensor[(9, 6), uint64], Tensor[(14, 15, 15), uint16], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(1404), bool], Tensor[(14, 15, 15), float64]) */;
  %145 = %144.12;
  (%133, %145, %var_4918, %var_4919, meta[relay.Constant][6] /* ty=Tensor[(1200), int16] */, %var_4921)
}

def @func_4345(%var_4340: Tensor[(11, 15, 15), float32]) -> (Tensor[(11, 15, 15), float32],) {
  %146 = cast(meta[relay.Constant][7] /* ty=Tensor[(11, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %147 = shape_of(%var_4340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%var_4340, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %150 = floor_divide(%148, %149) /* ty=Tensor[(11, 15, 15), float32] */;
  (%150,)
}

def @func_2643() -> Tensor[(15, 14, 13), float64] {
  @func_2086() /* ty=Tensor[(15, 14, 13), float64] */
}

def @func_5052() -> (Tensor[(13, 9, 12), float32],) {
  %151 = @func_5024() /* ty=Tensor[(13, 9, 12), float32] */;
  %152 = cast(%151, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %153 = acosh(%152) /* ty=Tensor[(13, 9, 12), float32] */;
  (%153,)
}

def @func_620(%var_609: Tensor[(8, 4, 4), float64]) -> Tensor[(8, 4, 4), uint8] {
  %154 = cast(%var_609, dtype="float64") /* ty=Tensor[(8, 4, 4), float64] */;
  %155 = atanh(%154) /* ty=Tensor[(8, 4, 4), float64] */;
  %156 = cast(%var_609, dtype="uint8") /* ty=Tensor[(8, 4, 4), uint8] */;
  %157 = shape_of(%155, dtype="int32") /* ty=Tensor[(3), int32] */;
  %158 = cast(%155, dtype="uint8") /* ty=Tensor[(8, 4, 4), uint8] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  logical_xor(%158, %159) /* ty=Tensor[(8, 4, 4), uint8] */
}

def @func_6003(%var_5976: Tensor[(1404), bool], %var_5977: Tensor[(1040), int64]) -> (Tensor[(2730), float32], Tensor[(8, 4, 4), uint8], Tensor[(8, 4, 4), uint8], Tensor[(15, 14, 13), float64], Tensor[(1404), bool], Tensor[(1040), int64], Tensor[(1575, 2), float64], Tensor[(16, 12, 2), uint8], Tensor[(1200), int16], Tensor[(1200), int16], Tensor[(180), float32], Tensor[(72), bool]) {
  %160 = @func_2138() /* ty=(Tensor[(2730), float32],) */;
  %161 = @func_3664() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(2730), float32], Tensor[(8, 4, 4), uint8], Tensor[(8, 16), float64], Tensor[(8, 4, 5), float64], Tensor[(15, 14, 13), float64]) */;
  %162 = %161.2;
  %163 = cast(%162, dtype="float64") /* ty=Tensor[(8, 4, 4), float64] */;
  %164 = reshape(%163, newshape=[8, 4, 4]) /* ty=Tensor[(8, 4, 4), float64] */;
  %165 = cast(%var_5976, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %166 = cast(%var_5977, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %167 = reshape(%165, newshape=[1404]) /* ty=Tensor[(1404), bool] */;
  %168 = reshape(%166, newshape=[40, 26]) /* ty=Tensor[(40, 26), int64] */;
  %169 = @func_3296(%167, %168) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1404), bool], Tensor[(40, 26), int64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(?, 3150), uint16]) */;
  %170 = cast(meta[relay.Constant][8] /* ty=Tensor[(1575, 2), float64] */, dtype="float64") /* ty=Tensor[(1575, 2), float64] */;
  %171 = cast(meta[relay.Constant][8] /* ty=Tensor[(1575, 2), float64] */, dtype="float64") /* ty=Tensor[(1575, 2), float64] */;
  %172 = cast(meta[relay.Constant][8] /* ty=Tensor[(1575, 2), float64] */, dtype="float64") /* ty=Tensor[(1575, 2), float64] */;
  %173 = reshape(%170, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %174 = reshape(%171, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %175 = reshape(%172, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %176 = @func_136(%173, %174, %175) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */;
  %177 = %176.3;
  %178 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 12, 2), uint16] */, dtype="uint8") /* ty=Tensor[(16, 12, 2), uint8] */;
  %179 = shape_of(%177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %180 = cast(%177, dtype="uint8") /* ty=Tensor[(16, 12, 2), uint8] */;
  %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %182 = %160.0;
  %183 = cast(%182, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %184 = cast(meta[relay.Constant][10] /* ty=Tensor[(1200), int16] */, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %185 = cast(meta[relay.Constant][11] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %186 = cast(%var_5976, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %187 = cast(%var_5977, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %188 = cast(meta[relay.Constant][12] /* ty=Tensor[(72), bool] */, dtype="bool") /* ty=Tensor[(72), bool] */;
  %189 = reshape(%183, newshape=[2730]) /* ty=Tensor[(2730), float32] */;
  %190 = reshape(%184, newshape=[1200]) /* ty=Tensor[(1200), int16] */;
  %191 = reshape(%185, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %192 = reshape(%186, newshape=[1404]) /* ty=Tensor[(1404), bool] */;
  %193 = reshape(%187, newshape=[520, 2]) /* ty=Tensor[(520, 2), int64] */;
  %194 = reshape(%188, newshape=[3, 24]) /* ty=Tensor[(3, 24), bool] */;
  %195 = @func_5859(%189, %190, %191, %192, %193, %194) /* ty=(Tensor[(2730), uint64], Tensor[(1200), int16], Tensor[(1200), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(520, 2), int64], Tensor[(1404), float32], Tensor[(3, 6, 4), int64], Tensor[(12, 2), int32], Tensor[(3, 24), bool]) */;
  %196 = @func_620(%164) /* ty=Tensor[(8, 4, 4), uint8] */;
  %197 = %169.0;
  %198 = add(%180, %181) /* ty=Tensor[(16, 12, 2), uint8] */;
  %199 = %195.1;
  (%182, %162, %196, %197, %var_5976, %var_5977, meta[relay.Constant][8] /* ty=Tensor[(1575, 2), float64] */, %198, %199, meta[relay.Constant][10] /* ty=Tensor[(1200), int16] */, meta[relay.Constant][11] /* ty=Tensor[(180), float32] */, meta[relay.Constant][12] /* ty=Tensor[(72), bool] */)
}

def @func_3317(%var_3304: Tensor[(2730), float32]) -> Tensor[(2730), int8] {
  %200 = @func_2302() /* ty=Tensor[(2730), float32] */;
  %201 = cast(%var_3304, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(1), int32] */;
  %203 = cast(%200, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?), int8] */;
  bitwise_xor(%203, %204) /* ty=Tensor[(2730), int8] */
}

def @func_2016() -> Tensor[(180), float32] {
  %205 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
  %205.2
}

def @func_2587() -> (Tensor[(16, 12, 2), uint16], Tensor[(2730), float32], Tensor[(180), float32]) {
  %206 = @func_1619() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(16, 12, 2), uint16]) */;
  %207 = %206.1;
  %208 = @func_2302() /* ty=Tensor[(2730), float32] */;
  %209 = @func_2016() /* ty=Tensor[(180), float32] */;
  (%207, %208, %209)
}

def @func_2211() -> (Tensor[(10, 7, 7), float32],) {
  %210 = @func_1935() /* ty=(Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), uint16], Tensor[(2730), float64]) */;
  %211 = %210.0;
  (%211,)
}

def @func_4067(%var_4022: Tensor[(13, 9, 12), float32], %var_4044: Tensor[(2730), float32]) -> (Tensor[(13, 9, 12), bool], Tensor[(180), float32], Tensor[(180), float32], Tensor[(2730), int64], Tensor[(16, 12, 2), uint16], Tensor[(3150), float64], Tensor[(2730), int8], Tensor[(15, 14, 13), float64]) {
  %212 = @func_2455() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %213 = %212.0;
  %214 = cast(%var_4022, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %215 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%213, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %218 = cast(meta[relay.Constant][13] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %219 = reshape(%218, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %220 = @func_3690(%219) /* ty=(Tensor[(2730), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32]) */;
  %221 = cast(meta[relay.Constant][13] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %222 = reshape(%221, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %223 = @func_3690(%222) /* ty=(Tensor[(2730), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32]) */;
  %224 = %223.0;
  %225 = cast(%var_4044, dtype="int64") /* ty=Tensor[(2730), int64] */;
  %226 = shape_of(%224, dtype="int32") /* ty=Tensor[(1), int32] */;
  %227 = cast(%224, dtype="int64") /* ty=Tensor[(2730), int64] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?), int64] */;
  %229 = cast(meta[relay.Constant][14] /* ty=Tensor[(3150), float64] */, dtype="float64") /* ty=Tensor[(3150), float64] */;
  %230 = cast(meta[relay.Constant][14] /* ty=Tensor[(3150), float64] */, dtype="float64") /* ty=Tensor[(3150), float64] */;
  %231 = cast(meta[relay.Constant][14] /* ty=Tensor[(3150), float64] */, dtype="float64") /* ty=Tensor[(3150), float64] */;
  %232 = reshape(%229, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %233 = reshape(%230, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %234 = reshape(%231, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %235 = @func_136(%232, %233, %234) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */;
  %236 = cast(%var_4044, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %237 = reshape(%236, newshape=[2730]) /* ty=Tensor[(2730), float32] */;
  %238 = less(%216, %217) /* ty=Tensor[(13, 9, 12), bool] */;
  %239 = %220.2;
  %240 = subtract(%227, %228) /* ty=Tensor[(2730), int64] */;
  %241 = %235.4;
  %242 = @func_3317(%237) /* ty=Tensor[(2730), int8] */;
  %243 = @func_2086() /* ty=Tensor[(15, 14, 13), float64] */;
  (%238, %239, meta[relay.Constant][13] /* ty=Tensor[(180), float32] */, %240, %241, meta[relay.Constant][14] /* ty=Tensor[(3150), float64] */, %242, %243)
}

def @func_1744(%var_1711: Tensor[(1040), int64]) -> (Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(1, 3150), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32], Tensor[(?, 3150), uint16], Tensor[(15, 14, 13), float64]) {
  %244 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %245 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 3150), float64] */, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %246 = log(%245) /* ty=Tensor[(1, 3150), float64] */;
  %247 = cast(%246, dtype="float32") /* ty=Tensor[(1, 3150), float32] */;
  %248 = cast(meta[relay.Constant][16] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %249 = reshape(%248, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %250 = @func_1667(%249) /* ty=(Tensor[(16, 14, 11), float64], Tensor[(15, 14, 13), float32], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16]) */;
  %251 = cast(%var_1711, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %252 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 3150), float64] */, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %253 = reshape(%251, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
  %254 = reshape(%252, newshape=[1, 3150]) /* ty=Tensor[(1, 3150), float64] */;
  %255 = @func_295(%253, %254) /* ty=(Tensor[(16, 13, 5), int64], Tensor[(16, 12, 2), uint16], Tensor[(1, 3150), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(14, 15, 15), int64]) */;
  %256 = %255.4;
  %257 = cast(%256, dtype="uint16") /* ty=Tensor[(14, 15, 15), uint16] */;
  %258 = shape_of(%246, dtype="int32") /* ty=Tensor[(2), int32] */;
  %259 = cast(%246, dtype="uint16") /* ty=Tensor[(1, 3150), uint16] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %261 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %262 = %244.0;
  %263 = cosh(%247) /* ty=Tensor[(1, 3150), float32] */;
  %264 = %250.0;
  %265 = subtract(%259, %260) /* ty=Tensor[(?, 3150), uint16] */;
  %266 = %261.0;
  (%262, %var_1711, %263, %264, meta[relay.Constant][16] /* ty=Tensor[(180), float32] */, %265, %266)
}

def @func_3144() -> Tensor[(15, 14, 13), float64] {
  %267 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %267.0
}

def @func_4882(%var_4762: Tensor[(15, 14, 13), float64], %var_4789: Tensor[(3150), float64], %var_4793: Tensor[(30), int8], %var_4794: Tensor[(1200), int16], %var_4837: Tensor[(6, 30), float32]) -> (Tensor[(15, 14, 13), bool], Tensor[(15, 14, 13), uint64], Tensor[(15, 14, 13), float32], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2, 600), int16], Tensor[(30), int8], Tensor[(1200), int16], Tensor[(8, 4, 5), float32], Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(6, 30), float32], Tensor[(14, 15, 15), bool], Tensor[(9, 6), uint64], Tensor[(14, 15, 15), uint16], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(1404), bool], Tensor[(14, 15, 15), float64]) {
  %268 = @func_1437() /* ty=Tensor[(15, 14, 13), float64] */;
  %269 = cast(%var_4762, dtype="bool") /* ty=Tensor[(15, 14, 13), bool] */;
  %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%268, dtype="bool") /* ty=Tensor[(15, 14, 13), bool] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %273 = cast(%268, dtype="uint64") /* ty=Tensor[(15, 14, 13), uint64] */;
  %274 = shape_of(%var_4762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %275 = cast(%var_4762, dtype="uint64") /* ty=Tensor[(15, 14, 13), uint64] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %277 = cast(%268, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
  %278 = cast(%var_4793, dtype="int8") /* ty=Tensor[(30), int8] */;
  %279 = cast(%var_4794, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %280 = reshape(%278, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), int8] */;
  %281 = reshape(%279, newshape=[2, 600]) /* ty=Tensor[(2, 600), int16] */;
  %282 = @func_4461(%280, %281) /* ty=(Tensor[(3, 11, 10), int8], Tensor[(10, 7, 7), float32], Tensor[(180), float32], Tensor[(3, 1, 10), float32], Tensor[(1200), int16], Tensor[(2, 600), int16]) */;
  %283 = @func_3058() /* ty=(Tensor[(8, 4, 5), float32],) */;
  %284 = @func_1783() /* ty=(Tensor[(15, 14, 13), float32], Tensor[(15, 14, 13), float64]) */;
  %285 = @func_1783() /* ty=(Tensor[(15, 14, 13), float32], Tensor[(15, 14, 13), float64]) */;
  %286 = cast(%var_4837, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %287 = reshape(%286, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %288 = @func_3690(%287) /* ty=(Tensor[(2730), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32]) */;
  %289 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 6), uint64] */, dtype="uint64") /* ty=Tensor[(9, 6), uint64] */;
  %290 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 6), uint64] */, dtype="uint64") /* ty=Tensor[(9, 6), uint64] */;
  %291 = reshape(%289, newshape=[9, 2, 3]) /* ty=Tensor[(9, 2, 3), uint64] */;
  %292 = reshape(%290, newshape=[9, 2, 3]) /* ty=Tensor[(9, 2, 3), uint64] */;
  %293 = @func_1891(%291, %292) /* ty=(Tensor[(9, 2, 3), float32], Tensor[(14, 15, 15), bool], Tensor[(225, 14), float64]) */;
  %294 = cast(meta[relay.Constant][17] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %295 = cast(%var_4789, dtype="float64") /* ty=Tensor[(3150), float64] */;
  %296 = reshape(%294, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
  %297 = reshape(%295, newshape=[1, 3150]) /* ty=Tensor[(1, 3150), float64] */;
  %298 = @func_295(%296, %297) /* ty=(Tensor[(16, 13, 5), int64], Tensor[(16, 12, 2), uint16], Tensor[(1, 3150), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(14, 15, 15), int64]) */;
  %299 = %298.5;
  %300 = cast(%299, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
  %301 = log2(%300) /* ty=Tensor[(14, 15, 15), float64] */;
  %302 = cast(%301, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
  %303 = atanh(%302) /* ty=Tensor[(14, 15, 15), float64] */;
  %304 = cast(%303, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
  %305 = sigmoid(%304) /* ty=Tensor[(14, 15, 15), float64] */;
  %306 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 15, 15), float64] */, dtype="bool") /* ty=Tensor[(14, 15, 15), bool] */;
  %307 = shape_of(%305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%305, dtype="bool") /* ty=Tensor[(14, 15, 15), bool] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %310 = less(%308, %309) /* ty=Tensor[(14, 15, 15), bool] */;
  %311 = cast(%310, dtype="uint16") /* ty=Tensor[(14, 15, 15), uint16] */;
  %312 = shape_of(%303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%303, dtype="uint16") /* ty=Tensor[(14, 15, 15), uint16] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %315 = @func_1935() /* ty=(Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), uint16], Tensor[(2730), float64]) */;
  %316 = %315.0;
  %317 = cast(%316, dtype="float32") /* ty=Tensor[(10, 7, 7), float32] */;
  %318 = cast(meta[relay.Constant][20] /* ty=Tensor[(1404), bool] */, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %319 = cast(meta[relay.Constant][17] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %320 = reshape(%318, newshape=[1404]) /* ty=Tensor[(1404), bool] */;
  %321 = reshape(%319, newshape=[40, 26]) /* ty=Tensor[(40, 26), int64] */;
  %322 = @func_3296(%320, %321) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1404), bool], Tensor[(40, 26), int64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(?, 3150), uint16]) */;
  %323 = cast(%305, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
  %324 = greater_equal(%271, %272) /* ty=Tensor[(15, 14, 13), bool] */;
  %325 = maximum(%275, %276) /* ty=Tensor[(15, 14, 13), uint64] */;
  %326 = asin(%277) /* ty=Tensor[(15, 14, 13), float32] */;
  %327 = %282.5;
  %328 = %283.0;
  %329 = %284.1;
  %330 = %285.1;
  %331 = %288.0;
  %332 = %293.1;
  %333 = subtract(%313, %314) /* ty=Tensor[(14, 15, 15), uint16] */;
  %334 = sigmoid(%317) /* ty=Tensor[(10, 7, 7), float32] */;
  %335 = %322.5;
  %336 = sinh(%323) /* ty=Tensor[(14, 15, 15), float64] */;
  (%324, %325, %326, meta[relay.Constant][17] /* ty=Tensor[(1040), int64] */, %var_4789, %327, %var_4793, %var_4794, %328, %329, %330, %331, %var_4837, %332, meta[relay.Constant][18] /* ty=Tensor[(9, 6), uint64] */, %333, %334, %335, meta[relay.Constant][20] /* ty=Tensor[(1404), bool] */, %336)
}

def @func_4461(%var_4442: Tensor[(3, 1, 10), int8], %var_4459: Tensor[(2, 600), int16]) -> (Tensor[(3, 11, 10), int8], Tensor[(10, 7, 7), float32], Tensor[(180), float32], Tensor[(3, 1, 10), float32], Tensor[(1200), int16], Tensor[(2, 600), int16]) {
  %337 = cast(%var_4442, dtype="int8") /* ty=Tensor[(3, 1, 10), int8] */;
  %338 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 11, 10), int8] */, dtype="int8") /* ty=Tensor[(3, 11, 10), int8] */;
  %339 = @func_2211() /* ty=(Tensor[(10, 7, 7), float32],) */;
  %340 = @func_2966() /* ty=(Tensor[(180), float32], Tensor[(15, 14, 13), float32]) */;
  %341 = cast(%var_4442, dtype="float32") /* ty=Tensor[(3, 1, 10), float32] */;
  %342 = cast(%var_4459, dtype="int16") /* ty=Tensor[(2, 600), int16] */;
  %343 = reshape(%342, newshape=[1200]) /* ty=Tensor[(1200), int16] */;
  %344 = @func_3412(%343) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(15, 14, 13), uint16], Tensor[(5, 16, 15), float32]) */;
  %345 = bitwise_xor(%337, %338) /* ty=Tensor[(3, 11, 10), int8] */;
  %346 = %339.0;
  %347 = %340.0;
  %348 = exp(%341) /* ty=Tensor[(3, 1, 10), float32] */;
  %349 = %344.1;
  (%345, %346, %347, %348, %349, %var_4459)
}

def @func_5132(%var_5128: Tensor[(1, 30), int8], %var_5129: Tensor[(1200), int16]) -> (Tensor[(15, 14, 13), float64], Tensor[(3, 1, 10), float32], Tensor[(1, 30), int8], Tensor[(1200), int16]) {
  %350 = cast(%var_5128, dtype="int8") /* ty=Tensor[(1, 30), int8] */;
  %351 = cast(%var_5129, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %352 = reshape(%350, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), int8] */;
  %353 = reshape(%351, newshape=[2, 600]) /* ty=Tensor[(2, 600), int16] */;
  %354 = @func_4461(%352, %353) /* ty=(Tensor[(3, 11, 10), int8], Tensor[(10, 7, 7), float32], Tensor[(180), float32], Tensor[(3, 1, 10), float32], Tensor[(1200), int16], Tensor[(2, 600), int16]) */;
  %355 = @func_3144() /* ty=Tensor[(15, 14, 13), float64] */;
  %356 = %354.3;
  (%355, %356, %var_5128, %var_5129)
}

def @func_4718(%var_4678: Tensor[(12, 10, 11), int32], %var_4679: Tensor[(12, 10, 11), int32], %var_4699: Tensor[(180, 1), float32]) -> (Tensor[(12, 10, 11), uint32], Tensor[(12, 10, 11), float64], Tensor[(180), float32], Tensor[(180, 1), float32]) {
  %357 = cast(%var_4678, dtype="uint32") /* ty=Tensor[(12, 10, 11), uint32] */;
  %358 = shape_of(%var_4679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%var_4679, dtype="uint32") /* ty=Tensor[(12, 10, 11), uint32] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %361 = cast(%var_4679, dtype="int32") /* ty=Tensor[(12, 10, 11), int32] */;
  %362 = shape_of(%var_4678, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(%var_4678, dtype="int32") /* ty=Tensor[(12, 10, 11), int32] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %365 = multiply(%363, %364) /* ty=Tensor[(12, 10, 11), int32] */;
  %366 = cast(%365, dtype="float64") /* ty=Tensor[(12, 10, 11), float64] */;
  %367 = cast(%var_4699, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %368 = reshape(%367, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %369 = @func_3690(%368) /* ty=(Tensor[(2730), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32]) */;
  %370 = bitwise_xor(%359, %360) /* ty=Tensor[(12, 10, 11), uint32] */;
  %371 = asin(%366) /* ty=Tensor[(12, 10, 11), float64] */;
  %372 = %369.2;
  (%370, %371, %372, %var_4699)
}

def @func_2728(%var_2714: Tensor[(14, 195), float32], %var_2715: Tensor[(30, 6), float32]) -> (Tensor[(5, 2, 4), float64], Tensor[(15, 14, 13), float32], Tensor[(14, 195), float32], Tensor[(30, 6), float32], Tensor[(15, 14, 13), float64], Tensor[(2730), float32]) {
  %373 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(5, 2, 4), float64] */;
  %374 = cast(%var_2714, dtype="float32") /* ty=Tensor[(14, 195), float32] */;
  %375 = cast(%var_2714, dtype="float32") /* ty=Tensor[(14, 195), float32] */;
  %376 = cast(%var_2715, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
  %377 = reshape(%374, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float32] */;
  %378 = reshape(%375, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float32] */;
  %379 = reshape(%376, newshape=[90, 2]) /* ty=Tensor[(90, 2), float32] */;
  %380 = @func_794(%377, %378, %379) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), int32], Tensor[(5, 12, 3), float64], Tensor[(90, 2), float32], Tensor[(15, 14, 13), float32]) */;
  %381 = sinh(%373) /* ty=Tensor[(5, 2, 4), float64] */;
  %382 = %380.4;
  %383 = @func_2086() /* ty=Tensor[(15, 14, 13), float64] */;
  %384 = @func_2302() /* ty=Tensor[(2730), float32] */;
  (%381, %382, %var_2714, %var_2715, %383, %384)
}

def @func_5174() -> Tensor[(2730), float32] {
  @func_4137() /* ty=Tensor[(2730), float32] */
}

def @func_4300(%var_4240: Tensor[(180), float32], %var_4253: Tensor[(1200), int16], %var_4271: Tensor[(1040), int64]) -> (Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), uint16], Tensor[(1200), int16], Tensor[(15, 14, 13), float64], Tensor[(1404), float32], Tensor[(1040), int64], Tensor[(15, 14, 13), float64]) {
  %385 = @func_1783() /* ty=(Tensor[(15, 14, 13), float32], Tensor[(15, 14, 13), float64]) */;
  %386 = cast(%var_4240, dtype="float32") /* ty=Tensor[(180), float32] */;
  %387 = reshape(%386, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %388 = @func_3690(%387) /* ty=(Tensor[(2730), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32]) */;
  %389 = cast(%var_4253, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %390 = reshape(%389, newshape=[1200]) /* ty=Tensor[(1200), int16] */;
  %391 = @func_3412(%390) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(15, 14, 13), uint16], Tensor[(5, 16, 15), float32]) */;
  %392 = cast(meta[relay.Constant][23] /* ty=Tensor[(1404), float32] */, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %393 = cast(%var_4271, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %394 = reshape(%392, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
  %395 = reshape(%393, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %396 = @func_3923(%394, %395) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(13, 9, 12), float32]) */;
  %397 = %385.1;
  %398 = %388.0;
  %399 = %391.2;
  %400 = %396.1;
  %401 = @func_2643() /* ty=Tensor[(15, 14, 13), float64] */;
  (%397, %398, %var_4240, %399, %var_4253, %400, meta[relay.Constant][23] /* ty=Tensor[(1404), float32] */, %var_4271, %401)
}

def @func_3058() -> (Tensor[(8, 4, 5), float32],) {
  %402 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 4, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 4, 5), float32] */;
  %403 = tan(%402) /* ty=Tensor[(8, 4, 5), float32] */;
  (%403,)
}

def @func_295(%var_251: Tensor[(16, 13, 5), int64], %var_258: Tensor[(1, 3150), float64]) -> (Tensor[(16, 13, 5), int64], Tensor[(16, 12, 2), uint16], Tensor[(1, 3150), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(14, 15, 15), int64]) {
  %404 = cast(%var_251, dtype="int64") /* ty=Tensor[(16, 13, 5), int64] */;
  %405 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(16, 13, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %406 = cast(meta[relay.Constant][25] /* ty=Tensor[(16, 13, 5), int64] */, dtype="int64") /* ty=Tensor[(16, 13, 5), int64] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %408 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %409 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %410 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %411 = reshape(%408, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %412 = reshape(%409, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %413 = reshape(%410, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %414 = @func_136(%411, %412, %413) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */;
  %415 = %414.4;
  %416 = cast(%415, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
  %417 = reshape(%416, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
  %418 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %419 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %420 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %421 = reshape(%418, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %422 = reshape(%419, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %423 = reshape(%420, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %424 = @func_136(%421, %422, %423) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */;
  %425 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %426 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %427 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %428 = reshape(%425, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %429 = reshape(%426, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %430 = reshape(%427, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %431 = @func_136(%428, %429, %430) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */;
  %432 = right_shift(%406, %407) /* ty=Tensor[(16, 13, 5), int64] */;
  %433 = @func_34(%417) /* ty=Tensor[(16, 12, 2), uint16] */;
  %434 = %424.7;
  %435 = %431.5;
  (%432, %415, %var_258, %433, %434, %435)
}

def @func_136(%var_38: Tensor[(14, 15, 15), float64], %var_39: Tensor[(14, 15, 15), float64], %var_90: Tensor[(14, 15, 15), float64]) -> (Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) {
  %436 = cast(%var_39, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
  %437 = shape_of(%var_38, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%var_38, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %440 = cast(meta[relay.Constant][26] /* ty=Tensor[(384), uint16] */, dtype="uint16") /* ty=Tensor[(384), uint16] */;
  %441 = reshape(%440, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
  %442 = @func_34(%441) /* ty=Tensor[(16, 12, 2), uint16] */;
  %443 = cast(%442, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
  %444 = reshape(%443, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
  %445 = cast(%442, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
  %446 = reshape(%445, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
  %447 = cast(%var_38, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
  %448 = cos(%447) /* ty=Tensor[(14, 15, 15), float64] */;
  %449 = cast(%var_39, dtype="int64") /* ty=Tensor[(14, 15, 15), int64] */;
  %450 = shape_of(%448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(%448, dtype="int64") /* ty=Tensor[(14, 15, 15), int64] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %453 = cast(%442, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
  %454 = reshape(%453, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
  %455 = cast(%var_39, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
  %456 = cast(%442, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
  %457 = reshape(%456, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
  %458 = cast(%var_90, dtype="int8") /* ty=Tensor[(14, 15, 15), int8] */;
  %459 = shape_of(%448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%448, dtype="int8") /* ty=Tensor[(14, 15, 15), int8] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %462 = @func_34(%444) /* ty=Tensor[(16, 12, 2), uint16] */;
  %463 = cast(%462, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
  %464 = reshape(%463, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
  %465 = cast(%448, dtype="bool") /* ty=Tensor[(14, 15, 15), bool] */;
  %466 = shape_of(%var_90, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%var_90, dtype="bool") /* ty=Tensor[(14, 15, 15), bool] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %469 = @func_34(%464) /* ty=Tensor[(16, 12, 2), uint16] */;
  %470 = cast(%469, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
  %471 = reshape(%470, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
  %472 = mod(%438, %439) /* ty=Tensor[(14, 15, 15), float64] */;
  %473 = @func_34(%446) /* ty=Tensor[(16, 12, 2), uint16] */;
  %474 = logical_xor(%451, %452) /* ty=Tensor[(14, 15, 15), int64] */;
  %475 = @func_34(%454) /* ty=Tensor[(16, 12, 2), uint16] */;
  %476 = tan(%455) /* ty=Tensor[(14, 15, 15), float64] */;
  %477 = @func_34(%457) /* ty=Tensor[(16, 12, 2), uint16] */;
  %478 = bitwise_xor(%460, %461) /* ty=Tensor[(14, 15, 15), int8] */;
  %479 = greater(%467, %468) /* ty=Tensor[(14, 15, 15), bool] */;
  %480 = @func_34(%471) /* ty=Tensor[(16, 12, 2), uint16] */;
  (%472, %442, meta[relay.Constant][26] /* ty=Tensor[(384), uint16] */, %462, %473, %474, %475, %476, %477, %478, %469, %479, %480)
}

def @func_3336() -> (Tensor[(2730), float32],) {
  %481 = @func_3029() /* ty=(Tensor[(180), float32], Tensor[(180), float32], Tensor[(2730), float32]) */;
  %482 = %481.2;
  (%482,)
}

def @func_3232() -> (Tensor[(15, 14, 13), float64], Tensor[(8, 4, 5), float64]) {
  %483 = @func_3058() /* ty=(Tensor[(8, 4, 5), float32],) */;
  %484 = %483.0;
  %485 = cast(%484, dtype="float64") /* ty=Tensor[(8, 4, 5), float64] */;
  %486 = @func_1437() /* ty=Tensor[(15, 14, 13), float64] */;
  %487 = asin(%485) /* ty=Tensor[(8, 4, 5), float64] */;
  (%486, %487)
}

def @func_3664() -> (Tensor[(13, 9, 12), float32], Tensor[(2730), float32], Tensor[(8, 4, 4), uint8], Tensor[(8, 16), float64], Tensor[(8, 4, 5), float64], Tensor[(15, 14, 13), float64]) {
  %488 = @func_2455() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %489 = @func_3336() /* ty=(Tensor[(2730), float32],) */;
  %490 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 16), float64] */, dtype="float64") /* ty=Tensor[(8, 16), float64] */;
  %491 = reshape(%490, newshape=[8, 4, 4]) /* ty=Tensor[(8, 4, 4), float64] */;
  %492 = @func_3232() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(8, 4, 5), float64]) */;
  %493 = %488.0;
  %494 = %489.0;
  %495 = @func_620(%491) /* ty=Tensor[(8, 4, 4), uint8] */;
  %496 = %492.1;
  %497 = @func_2643() /* ty=Tensor[(15, 14, 13), float64] */;
  (%493, %494, %495, meta[relay.Constant][27] /* ty=Tensor[(8, 16), float64] */, %496, %497)
}

def @func_5256(%var_5215: Tensor[(180), float32], %var_5224: Tensor[(1404), bool], %var_5225: Tensor[(2, 520), int64], %var_5228: Tensor[(3, 14, 14), float32]) -> (Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1200), int16], Tensor[(180), float32], Tensor[(384), uint16], Tensor[(3150), float64], Tensor[(16, 13, 5), int64], Tensor[(1404), bool], Tensor[(2, 520), int64], Tensor[(3, 14, 14), bool]) {
  %498 = @func_3336() /* ty=(Tensor[(2730), float32],) */;
  %499 = cast(meta[relay.Constant][28] /* ty=Tensor[(1200), int16] */, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %500 = cast(%var_5215, dtype="float32") /* ty=Tensor[(180), float32] */;
  %501 = cast(meta[relay.Constant][29] /* ty=Tensor[(384), uint16] */, dtype="uint16") /* ty=Tensor[(384), uint16] */;
  %502 = cast(meta[relay.Constant][30] /* ty=Tensor[(3150), float64] */, dtype="float64") /* ty=Tensor[(3150), float64] */;
  %503 = reshape(%499, newshape=[2, 600]) /* ty=Tensor[(2, 600), int16] */;
  %504 = reshape(%500, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %505 = reshape(%501, newshape=[384]) /* ty=Tensor[(384), uint16] */;
  %506 = reshape(%502, newshape=[1575, 2]) /* ty=Tensor[(1575, 2), float64] */;
  %507 = @func_3571(%503, %504, %505, %506) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(2, 600), float32], Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1200), int16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(1575, 2), float64]) */;
  %508 = cast(%var_5224, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %509 = cast(%var_5225, dtype="int64") /* ty=Tensor[(2, 520), int64] */;
  %510 = %498.0;
  %511 = cast(%510, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %512 = reshape(%508, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), bool] */;
  %513 = reshape(%509, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %514 = reshape(%511, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
  %515 = @func_2902(%512, %513, %514) /* ty=(Tensor[(13, 9, 12), int64], Tensor[(16, 12, 2), uint16], Tensor[(15, 14, 13), float64], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(4, 300), int16], Tensor[(16, 13, 5), int64], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2730), float32], Tensor[(15, 14, 13), int16], Tensor[(15, 14, 13), float32]) */;
  %516 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 14, 14), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 14), float32] */;
  %517 = erf(%516) /* ty=Tensor[(3, 14, 14), float32] */;
  %518 = cast(%var_5228, dtype="bool") /* ty=Tensor[(3, 14, 14), bool] */;
  %519 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %520 = cast(%517, dtype="bool") /* ty=Tensor[(3, 14, 14), bool] */;
  %521 = dyn.reshape(%518, %519, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %522 = %507.5;
  %523 = %515.7;
  %524 = greater_equal(%520, %521) /* ty=Tensor[(3, 14, 14), bool] */;
  (%510, %522, meta[relay.Constant][28] /* ty=Tensor[(1200), int16] */, %var_5215, meta[relay.Constant][29] /* ty=Tensor[(384), uint16] */, meta[relay.Constant][30] /* ty=Tensor[(3150), float64] */, %523, %var_5224, %var_5225, %524)
}

def @func_1603(%var_1591: Tensor[(15, 14, 13), float64]) -> (Tensor[(15, 14, 13), uint16],) {
  %525 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %526 = %525.0;
  %527 = cast(%var_1591, dtype="uint16") /* ty=Tensor[(15, 14, 13), uint16] */;
  %528 = shape_of(%526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%526, dtype="uint16") /* ty=Tensor[(15, 14, 13), uint16] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %531 = left_shift(%529, %530) /* ty=Tensor[(15, 14, 13), uint16] */;
  (%531,)
}

def @func_3956() -> Tensor[(9, 4, 11), float64] {
  %532 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 11), float64] */;
  cos(%532) /* ty=Tensor[(9, 4, 11), float64] */
}

def @func_1667(%var_1647: Tensor[(180), float32]) -> (Tensor[(16, 14, 11), float64], Tensor[(15, 14, 13), float32], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16]) {
  %533 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
  %534 = cast(meta[relay.Constant][33] /* ty=Tensor[(2730), float32] */, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %535 = cast(meta[relay.Constant][33] /* ty=Tensor[(2730), float32] */, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %536 = cast(%var_1647, dtype="float32") /* ty=Tensor[(180), float32] */;
  %537 = reshape(%534, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float32] */;
  %538 = reshape(%535, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float32] */;
  %539 = reshape(%536, newshape=[90, 2]) /* ty=Tensor[(90, 2), float32] */;
  %540 = @func_794(%537, %538, %539) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), int32], Tensor[(5, 12, 3), float64], Tensor[(90, 2), float32], Tensor[(15, 14, 13), float32]) */;
  %541 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %542 = %540.4;
  %543 = cast(%542, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
  %544 = reshape(%543, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
  %545 = @func_1538(%544) /* ty=(Tensor[(15, 14, 13), bool], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16]) */;
  %546 = %545.2;
  %547 = cast(%546, dtype="uint16") /* ty=Tensor[(384), uint16] */;
  %548 = reshape(%547, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
  %549 = %533.3;
  %550 = %541.0;
  %551 = @func_34(%548) /* ty=Tensor[(16, 12, 2), uint16] */;
  (%549, %542, meta[relay.Constant][33] /* ty=Tensor[(2730), float32] */, %var_1647, %550, %546, %551)
}

def @func_3029() -> (Tensor[(180), float32], Tensor[(180), float32], Tensor[(2730), float32]) {
  %552 = @func_2966() /* ty=(Tensor[(180), float32], Tensor[(15, 14, 13), float32]) */;
  %553 = @func_2966() /* ty=(Tensor[(180), float32], Tensor[(15, 14, 13), float32]) */;
  %554 = @func_2138() /* ty=(Tensor[(2730), float32],) */;
  %555 = %554.0;
  %556 = cast(%555, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %557 = %552.0;
  %558 = %553.0;
  %559 = sigmoid(%556) /* ty=Tensor[(2730), float32] */;
  (%557, %558, %559)
}

def @func_5661() -> (Tensor[(15, 14, 13), float64],) {
  %560 = @func_4214() /* ty=Tensor[(15, 14, 13), float64] */;
  (%560,)
}

def @func_3571(%var_3534: Tensor[(2, 600), int16], %var_3548: Tensor[(180), float32], %var_3563: Tensor[(384), uint16], %var_3566: Tensor[(1575, 2), float64]) -> (Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(2, 600), float32], Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1200), int16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(1575, 2), float64]) {
  %561 = cast(%var_3534, dtype="int16") /* ty=Tensor[(2, 600), int16] */;
  %562 = reshape(%561, newshape=[1200]) /* ty=Tensor[(1200), int16] */;
  %563 = @func_3412(%562) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(15, 14, 13), uint16], Tensor[(5, 16, 15), float32]) */;
  %564 = cast(%var_3534, dtype="float32") /* ty=Tensor[(2, 600), float32] */;
  %565 = cast(%var_3548, dtype="float32") /* ty=Tensor[(180), float32] */;
  %566 = reshape(%565, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %567 = @func_1667(%566) /* ty=(Tensor[(16, 14, 11), float64], Tensor[(15, 14, 13), float32], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16]) */;
  %568 = cast(%var_3563, dtype="uint16") /* ty=Tensor[(384), uint16] */;
  %569 = reshape(%568, newshape=[192, 2]) /* ty=Tensor[(192, 2), uint16] */;
  %570 = @func_2418(%569) /* ty=(Tensor[(180), float32], Tensor[(10, 7, 7), float32], Tensor[(16, 12, 2), uint16], Tensor[(5, 16, 15), bool], Tensor[(1200), int16], Tensor[(192, 2), float64]) */;
  %571 = cast(%var_3566, dtype="float64") /* ty=Tensor[(1575, 2), float64] */;
  %572 = cast(%var_3566, dtype="float64") /* ty=Tensor[(1575, 2), float64] */;
  %573 = cast(%var_3566, dtype="float64") /* ty=Tensor[(1575, 2), float64] */;
  %574 = reshape(%571, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %575 = reshape(%572, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %576 = reshape(%573, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %577 = @func_136(%574, %575, %576) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */;
  %578 = @func_3144() /* ty=Tensor[(15, 14, 13), float64] */;
  %579 = %563.1;
  %580 = atanh(%564) /* ty=Tensor[(2, 600), float32] */;
  %581 = @func_2086() /* ty=Tensor[(15, 14, 13), float64] */;
  %582 = %567.2;
  %583 = %570.4;
  %584 = %577.12;
  (%578, %579, %580, %581, %582, %var_3548, %583, %var_3563, %584, %var_3566)
}

def @func_486(%var_455: Tensor[(5, 12, 3), float32]) -> (Tensor[(5, 12, 3), float64],) {
  %585 = cast(%var_455, dtype="float32") /* ty=Tensor[(5, 12, 3), float32] */;
  %586 = atanh(%585) /* ty=Tensor[(5, 12, 3), float32] */;
  %587 = cast(%586, dtype="float64") /* ty=Tensor[(5, 12, 3), float64] */;
  %588 = cos(%587) /* ty=Tensor[(5, 12, 3), float64] */;
  (%588,)
}

def @func_6149() -> (Tensor[(10, 7, 7), float32],) {
  %589 = @func_2211() /* ty=(Tensor[(10, 7, 7), float32],) */;
  %590 = %589.0;
  (%590,)
}

def @func_5406(%var_5385: Tensor[(8, 4, 5), float32]) -> (Tensor[(8, 4, 5), float64], Tensor[(15, 14, 13), float64], Tensor[(8, 4, 5), float32]) {
  %591 = @func_3058() /* ty=(Tensor[(8, 4, 5), float32],) */;
  %592 = %591.0;
  %593 = cast(%var_5385, dtype="float64") /* ty=Tensor[(8, 4, 5), float64] */;
  %594 = shape_of(%592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%592, dtype="float64") /* ty=Tensor[(8, 4, 5), float64] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %597 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %598 = @func_3058() /* ty=(Tensor[(8, 4, 5), float32],) */;
  %599 = divide(%595, %596) /* ty=Tensor[(8, 4, 5), float64] */;
  %600 = %597.0;
  %601 = %598.0;
  (%599, %600, %601)
}

def @func_4180(%var_4175: Tensor[(11, 16, 16), float64]) -> Tensor[(11, 16, 16), float64] {
  %602 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 16, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 16, 16), float64] */;
  %603 = shape_of(%var_4175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(%var_4175, dtype="float64") /* ty=Tensor[(11, 16, 16), float64] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%604, %605) /* ty=Tensor[(11, 16, 16), float64] */
}

def @func_4604(%var_4595: Tensor[(7, 3, 4), float32]) -> (Tensor[(7, 3, 4), float32],) {
  %606 = cast(meta[relay.Constant][35] /* ty=Tensor[(7, 3, 4), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
  %607 = shape_of(%var_4595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%var_4595, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %610 = mod(%608, %609) /* ty=Tensor[(7, 3, 4), float32] */;
  (%610,)
}

def @func_5859(%var_5800: Tensor[(2730), float32], %var_5817: Tensor[(1200), int16], %var_5824: Tensor[(180), float32], %var_5828: Tensor[(1404), bool], %var_5829: Tensor[(520, 2), int64], %var_5847: Tensor[(3, 24), bool]) -> (Tensor[(2730), uint64], Tensor[(1200), int16], Tensor[(1200), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(520, 2), int64], Tensor[(1404), float32], Tensor[(3, 6, 4), int64], Tensor[(12, 2), int32], Tensor[(3, 24), bool]) {
  %611 = @func_2302() /* ty=Tensor[(2730), float32] */;
  %612 = cast(%var_5800, dtype="uint64") /* ty=Tensor[(2730), uint64] */;
  %613 = shape_of(%611, dtype="int32") /* ty=Tensor[(1), int32] */;
  %614 = cast(%611, dtype="uint64") /* ty=Tensor[(2730), uint64] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %616 = cast(meta[relay.Constant][36] /* ty=Tensor[(1200), int16] */, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %617 = reshape(%616, newshape=[1200]) /* ty=Tensor[(1200), int16] */;
  %618 = @func_3412(%617) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(15, 14, 13), uint16], Tensor[(5, 16, 15), float32]) */;
  %619 = cast(%var_5817, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %620 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(1200), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %621 = cast(meta[relay.Constant][36] /* ty=Tensor[(1200), int16] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?), float32] */;
  %623 = cast(%var_5824, dtype="float32") /* ty=Tensor[(180), float32] */;
  %624 = reshape(%623, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %625 = @func_1667(%624) /* ty=(Tensor[(16, 14, 11), float64], Tensor[(15, 14, 13), float32], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16]) */;
  %626 = cast(%var_5828, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %627 = cast(%var_5829, dtype="int64") /* ty=Tensor[(520, 2), int64] */;
  %628 = reshape(%626, newshape=[1404]) /* ty=Tensor[(1404), bool] */;
  %629 = reshape(%627, newshape=[40, 26]) /* ty=Tensor[(40, 26), int64] */;
  %630 = @func_3296(%628, %629) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1404), bool], Tensor[(40, 26), int64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(?, 3150), uint16]) */;
  %631 = cast(meta[relay.Constant][37] /* ty=Tensor[(1404), bool] */, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %632 = shape_of(%var_5828, dtype="int32") /* ty=Tensor[(1), int32] */;
  %633 = cast(%var_5828, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?), float32] */;
  %635 = cast(meta[relay.Constant][38] /* ty=Tensor[(12, 2), int32] */, dtype="int32") /* ty=Tensor[(12, 2), int32] */;
  %636 = cast(meta[relay.Constant][38] /* ty=Tensor[(12, 2), int32] */, dtype="int32") /* ty=Tensor[(12, 2), int32] */;
  %637 = cast(%var_5847, dtype="bool") /* ty=Tensor[(3, 24), bool] */;
  %638 = reshape(%635, newshape=[1, 6, 4]) /* ty=Tensor[(1, 6, 4), int32] */;
  %639 = reshape(%636, newshape=[1, 6, 4]) /* ty=Tensor[(1, 6, 4), int32] */;
  %640 = reshape(%637, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), bool] */;
  %641 = bitwise_and(%614, %615) /* ty=Tensor[(2730), uint64] */;
  %642 = %618.1;
  %643 = divide(%621, %622) /* ty=Tensor[(1200), float32] */;
  %644 = %625.4;
  %645 = %630.5;
  %646 = divide(%633, %634) /* ty=Tensor[(1404), float32] */;
  %647 = @func_4555(%638, %639, %640) /* ty=Tensor[(3, 6, 4), int64] */;
  (%641, %642, %643, %644, %var_5824, %645, %var_5829, %646, %647, meta[relay.Constant][38] /* ty=Tensor[(12, 2), int32] */, %var_5847)
}

def @func_6101(%var_6072: Tensor[(8, 13, 9), uint16], %var_6093: Tensor[(60), float64]) -> (Tensor[(8, 13, 9), float32], Tensor[(3, 4, 5), float64], Tensor[(60), float64]) {
  %648 = cast(%var_6072, dtype="uint16") /* ty=Tensor[(8, 13, 9), uint16] */;
  %649 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(8, 13, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 13, 9), uint16] */, dtype="uint16") /* ty=Tensor[(8, 13, 9), uint16] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %652 = bitwise_xor(%650, %651) /* ty=Tensor[(8, 13, 9), uint16] */;
  %653 = cast(%652, dtype="float32") /* ty=Tensor[(8, 13, 9), float32] */;
  %654 = cast(%var_6093, dtype="float64") /* ty=Tensor[(60), float64] */;
  %655 = reshape(%654, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), float64] */;
  %656 = @func_511(%655) /* ty=(Tensor[(3, 4, 5), float64],) */;
  %657 = sqrt(%653) /* ty=Tensor[(8, 13, 9), float32] */;
  %658 = %656.0;
  (%657, %658, %var_6093)
}

def @func_1429() -> Tensor[(180), float32] {
  %659 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
  %659.2
}

def @func_2966() -> (Tensor[(180), float32], Tensor[(15, 14, 13), float32]) {
  %660 = @func_2587() /* ty=(Tensor[(16, 12, 2), uint16], Tensor[(2730), float32], Tensor[(180), float32]) */;
  %661 = @func_1985() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64]) */;
  %662 = %661.0;
  %663 = cast(%662, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
  %664 = log(%663) /* ty=Tensor[(15, 14, 13), float64] */;
  %665 = cast(%664, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
  %666 = %660.2;
  %667 = log2(%665) /* ty=Tensor[(15, 14, 13), float32] */;
  (%666, %667)
}

def @func_3761(%var_3751: Tensor[(2730), float32]) -> Tensor[(2730), float32] {
  %668 = @func_2302() /* ty=Tensor[(2730), float32] */;
  %669 = cast(%var_3751, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %670 = shape_of(%668, dtype="int32") /* ty=Tensor[(1), int32] */;
  %671 = cast(%668, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?), float32] */;
  maximum(%671, %672) /* ty=Tensor[(2730), float32] */
}

def @func_1783() -> (Tensor[(15, 14, 13), float32], Tensor[(15, 14, 13), float64]) {
  %673 = @func_1619() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(16, 12, 2), uint16]) */;
  %674 = %673.0;
  %675 = cast(%674, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
  %676 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %677 = tan(%675) /* ty=Tensor[(15, 14, 13), float32] */;
  %678 = %676.0;
  (%677, %678)
}

def @func_4637(%var_4629: Tensor[(10, 9, 7), uint16], %var_4630: Tensor[(10, 9, 7), uint16]) -> (Tensor[(10, 9, 7), uint16],) {
  %679 = cast(%var_4630, dtype="uint16") /* ty=Tensor[(10, 9, 7), uint16] */;
  %680 = shape_of(%var_4629, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%var_4629, dtype="uint16") /* ty=Tensor[(10, 9, 7), uint16] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %683 = logical_xor(%681, %682) /* ty=Tensor[(10, 9, 7), uint16] */;
  (%683,)
}

def @func_4137() -> Tensor[(2730), float32] {
  %684 = @func_2138() /* ty=(Tensor[(2730), float32],) */;
  %684.0
}

def @func_3964() -> (Tensor[(15, 14, 13), float64],) {
  %685 = @func_1619() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(16, 12, 2), uint16]) */;
  %686 = %685.0;
  (%686,)
}

def @func_794(%var_729: Tensor[(15, 14, 13), float32], %var_735: Tensor[(15, 14, 13), float32], %var_765: Tensor[(90, 2), float32]) -> (Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), int32], Tensor[(5, 12, 3), float64], Tensor[(90, 2), float32], Tensor[(15, 14, 13), float32]) {
  %687 = cast(%var_729, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
  %688 = sigmoid(%687) /* ty=Tensor[(15, 14, 13), float32] */;
  %689 = cast(%688, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
  %690 = cast(%var_735, dtype="int32") /* ty=Tensor[(15, 14, 13), int32] */;
  %691 = shape_of(%var_729, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%var_729, dtype="int32") /* ty=Tensor[(15, 14, 13), int32] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %694 = cast(%var_765, dtype="float32") /* ty=Tensor[(90, 2), float32] */;
  %695 = reshape(%694, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %696 = @func_486(%695) /* ty=(Tensor[(5, 12, 3), float64],) */;
  %697 = cast(%688, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
  %698 = cosh(%697) /* ty=Tensor[(15, 14, 13), float32] */;
  %699 = cast(%698, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
  %700 = log10(%689) /* ty=Tensor[(15, 14, 13), float64] */;
  %701 = right_shift(%692, %693) /* ty=Tensor[(15, 14, 13), int32] */;
  %702 = %696.0;
  %703 = sin(%699) /* ty=Tensor[(15, 14, 13), float32] */;
  (%700, %701, %702, %var_765, %703)
}

def @func_1935() -> (Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), uint16], Tensor[(2730), float64]) {
  %704 = cast(meta[relay.Constant][40] /* ty=Tensor[(10, 7, 7), float64] */, dtype="float64") /* ty=Tensor[(10, 7, 7), float64] */;
  %705 = log2(%704) /* ty=Tensor[(10, 7, 7), float64] */;
  %706 = cast(%705, dtype="float32") /* ty=Tensor[(10, 7, 7), float32] */;
  %707 = cast(meta[relay.Constant][41] /* ty=Tensor[(2730), float64] */, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %708 = reshape(%707, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
  %709 = @func_1603(%708) /* ty=(Tensor[(15, 14, 13), uint16],) */;
  %710 = acosh(%706) /* ty=Tensor[(10, 7, 7), float32] */;
  %711 = %709.0;
  (%710, %711, meta[relay.Constant][41] /* ty=Tensor[(2730), float64] */)
}

def @func_5630() -> (Tensor[(8, 4, 5), float32],) {
  %712 = @func_3058() /* ty=(Tensor[(8, 4, 5), float32],) */;
  %713 = %712.0;
  (%713,)
}

def @func_4569() -> (Tensor[(13, 9, 12), float32],) {
  %714 = @func_2455() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %715 = %714.0;
  (%715,)
}

def @func_5345() -> (Tensor[(15, 14, 13), float64],) {
  %716 = @func_3144() /* ty=Tensor[(15, 14, 13), float64] */;
  (%716,)
}

def @func_2418(%var_2413: Tensor[(192, 2), uint16]) -> (Tensor[(180), float32], Tensor[(10, 7, 7), float32], Tensor[(16, 12, 2), uint16], Tensor[(5, 16, 15), bool], Tensor[(1200), int16], Tensor[(192, 2), float64]) {
  %717 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
  %718 = @func_2211() /* ty=(Tensor[(10, 7, 7), float32],) */;
  %719 = cast(meta[relay.Constant][42] /* ty=Tensor[(192, 2), uint16] */, dtype="uint16") /* ty=Tensor[(192, 2), uint16] */;
  %720 = reshape(%719, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
  %721 = cast(meta[relay.Constant][43] /* ty=Tensor[(1200), int16] */, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %722 = cast(meta[relay.Constant][43] /* ty=Tensor[(1200), int16] */, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %723 = reshape(%721, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
  %724 = reshape(%722, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
  %725 = @func_2170(%723, %724) /* ty=(Tensor[(5, 16, 15), bool], Tensor[(2730), float32], Tensor[(180), float32]) */;
  %726 = cast(%var_2413, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
  %727 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(192, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %728 = cast(meta[relay.Constant][42] /* ty=Tensor[(192, 2), uint16] */, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
  %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %730 = %717.2;
  %731 = %718.0;
  %732 = @func_34(%720) /* ty=Tensor[(16, 12, 2), uint16] */;
  %733 = %725.0;
  %734 = floor_divide(%728, %729) /* ty=Tensor[(192, 2), float64] */;
  (%730, %731, %732, %733, meta[relay.Constant][43] /* ty=Tensor[(1200), int16] */, %734)
}

def @func_6141(%var_6136: Tensor[(2, 1, 15), float32], %var_6137: Tensor[(2, 1, 15), float32]) -> (Tensor[(2, ?, 15), float32],) {
  %735 = cast(%var_6137, dtype="float32") /* ty=Tensor[(2, 1, 15), float32] */;
  %736 = shape_of(%var_6136, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(%var_6136, dtype="float32") /* ty=Tensor[(2, 1, 15), float32] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %739 = power(%737, %738) /* ty=Tensor[(2, ?, 15), float32] */;
  (%739,)
}

def @func_1538(%var_1523: Tensor[(15, 14, 13), float64]) -> (Tensor[(15, 14, 13), bool], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16]) {
  %740 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %741 = %740.0;
  %742 = cast(%var_1523, dtype="bool") /* ty=Tensor[(15, 14, 13), bool] */;
  %743 = shape_of(%741, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%741, dtype="bool") /* ty=Tensor[(15, 14, 13), bool] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %746 = cast(meta[relay.Constant][44] /* ty=Tensor[(384), uint16] */, dtype="uint16") /* ty=Tensor[(384), uint16] */;
  %747 = reshape(%746, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
  %748 = logical_and(%744, %745) /* ty=Tensor[(15, 14, 13), bool] */;
  %749 = @func_34(%747) /* ty=Tensor[(16, 12, 2), uint16] */;
  (%748, %749, meta[relay.Constant][44] /* ty=Tensor[(384), uint16] */)
}

def @func_2455() -> (Tensor[(13, 9, 12), float32],) {
  %750 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 9, 12), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %751 = exp(%750) /* ty=Tensor[(13, 9, 12), float32] */;
  (%751,)
}

def @func_5474(%var_5436: Tensor[(8, 11, 16), uint32], %var_5437: Tensor[(8, 11, 16), uint32]) -> (Tensor[(8, 11, 16), bool], Tensor[(5, 16, 15), bool], Tensor[(12, 100), int16]) {
  %752 = cast(%var_5437, dtype="bool") /* ty=Tensor[(8, 11, 16), bool] */;
  %753 = shape_of(%var_5436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %754 = cast(%var_5436, dtype="bool") /* ty=Tensor[(8, 11, 16), bool] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %756 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 100), int16] */, dtype="int16") /* ty=Tensor[(12, 100), int16] */;
  %757 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 100), int16] */, dtype="int16") /* ty=Tensor[(12, 100), int16] */;
  %758 = reshape(%756, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
  %759 = reshape(%757, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
  %760 = @func_2170(%758, %759) /* ty=(Tensor[(5, 16, 15), bool], Tensor[(2730), float32], Tensor[(180), float32]) */;
  %761 = less(%754, %755) /* ty=Tensor[(8, 11, 16), bool] */;
  %762 = %760.0;
  (%761, %762, meta[relay.Constant][46] /* ty=Tensor[(12, 100), int16] */)
}

def @func_4097(%var_4091: Tensor[(6, 3, 14), int32]) -> Tensor[(6, 3, 14), int32] {
  %763 = cast(%var_4091, dtype="int32") /* ty=Tensor[(6, 3, 14), int32] */;
  %764 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(6, 3, 14), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(meta[relay.Constant][47] /* ty=Tensor[(6, 3, 14), int32] */, dtype="int32") /* ty=Tensor[(6, 3, 14), int32] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  minimum(%765, %766) /* ty=Tensor[(6, 3, 14), int32] */
}

def @func_1891(%var_1861: Tensor[(9, 2, 3), uint64], %var_1867: Tensor[(9, 2, 3), uint64]) -> (Tensor[(9, 2, 3), float32], Tensor[(14, 15, 15), bool], Tensor[(225, 14), float64]) {
  %767 = cast(meta[relay.Constant][48] /* ty=Tensor[(9, 2, 3), uint64] */, dtype="uint64") /* ty=Tensor[(9, 2, 3), uint64] */;
  %768 = shape_of(%var_1861, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%var_1861, dtype="uint64") /* ty=Tensor[(9, 2, 3), uint64] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %771 = logical_xor(%769, %770) /* ty=Tensor[(9, 2, 3), uint64] */;
  %772 = cast(%var_1867, dtype="float32") /* ty=Tensor[(9, 2, 3), float32] */;
  %773 = shape_of(%771, dtype="int32") /* ty=Tensor[(3), int32] */;
  %774 = cast(%771, dtype="float32") /* ty=Tensor[(9, 2, 3), float32] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %776 = cast(meta[relay.Constant][49] /* ty=Tensor[(225, 14), float64] */, dtype="float64") /* ty=Tensor[(225, 14), float64] */;
  %777 = cast(meta[relay.Constant][49] /* ty=Tensor[(225, 14), float64] */, dtype="float64") /* ty=Tensor[(225, 14), float64] */;
  %778 = cast(meta[relay.Constant][49] /* ty=Tensor[(225, 14), float64] */, dtype="float64") /* ty=Tensor[(225, 14), float64] */;
  %779 = reshape(%776, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %780 = reshape(%777, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %781 = reshape(%778, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %782 = @func_136(%779, %780, %781) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */;
  %783 = power(%774, %775) /* ty=Tensor[(9, 2, 3), float32] */;
  %784 = %782.11;
  (%783, %784, meta[relay.Constant][49] /* ty=Tensor[(225, 14), float64] */)
}

def @func_3412(%var_3381: Tensor[(1200), int16]) -> (Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(15, 14, 13), uint16], Tensor[(5, 16, 15), float32]) {
  %785 = @func_1437() /* ty=Tensor[(15, 14, 13), float64] */;
  %786 = cast(%785, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
  %787 = reshape(%786, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
  %788 = @func_1603(%787) /* ty=(Tensor[(15, 14, 13), uint16],) */;
  %789 = cast(%var_3381, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %790 = cast(%var_3381, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %791 = reshape(%789, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
  %792 = reshape(%790, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
  %793 = @func_2170(%791, %792) /* ty=(Tensor[(5, 16, 15), bool], Tensor[(2730), float32], Tensor[(180), float32]) */;
  %794 = %793.0;
  %795 = cast(%794, dtype="float32") /* ty=Tensor[(5, 16, 15), float32] */;
  %796 = asinh(%795) /* ty=Tensor[(5, 16, 15), float32] */;
  %797 = cast(%796, dtype="float32") /* ty=Tensor[(5, 16, 15), float32] */;
  %798 = %788.0;
  %799 = asin(%797) /* ty=Tensor[(5, 16, 15), float32] */;
  (%785, %var_3381, %798, %799)
}

def @func_2086() -> Tensor[(15, 14, 13), float64] {
  @func_1437() /* ty=Tensor[(15, 14, 13), float64] */
}

def @func_4368() -> Tensor[(180), float32] {
  %800 = @func_2966() /* ty=(Tensor[(180), float32], Tensor[(15, 14, 13), float32]) */;
  %800.0
}

def @func_1985() -> (Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64]) {
  %801 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %802 = @func_1437() /* ty=Tensor[(15, 14, 13), float64] */;
  %803 = %801.0;
  (%802, %803)
}

def @func_2170(%var_2149: Tensor[(5, 16, 15), int16], %var_2150: Tensor[(5, 16, 15), int16]) -> (Tensor[(5, 16, 15), bool], Tensor[(2730), float32], Tensor[(180), float32]) {
  %804 = cast(%var_2150, dtype="bool") /* ty=Tensor[(5, 16, 15), bool] */;
  %805 = shape_of(%var_2149, dtype="int32") /* ty=Tensor[(3), int32] */;
  %806 = cast(%var_2149, dtype="bool") /* ty=Tensor[(5, 16, 15), bool] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %808 = @func_2138() /* ty=(Tensor[(2730), float32],) */;
  %809 = equal(%806, %807) /* ty=Tensor[(5, 16, 15), bool] */;
  %810 = %808.0;
  %811 = @func_2016() /* ty=Tensor[(180), float32] */;
  (%809, %810, %811)
}

def @func_1446() -> (Tensor[(15, 14, 13), float64],) {
  %812 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
  %813 = %812.0;
  (%813,)
}

def @func_511(%var_506: Tensor[(3, 4, 5), float64]) -> (Tensor[(3, 4, 5), float64],) {
  %814 = cast(%var_506, dtype="float64") /* ty=Tensor[(3, 4, 5), float64] */;
  %815 = asin(%814) /* ty=Tensor[(3, 4, 5), float64] */;
  (%815,)
}

def @func_5725() -> Tensor[(13, 9, 12), float64] {
  %816 = @func_3664() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(2730), float32], Tensor[(8, 4, 4), uint8], Tensor[(8, 16), float64], Tensor[(8, 4, 5), float64], Tensor[(15, 14, 13), float64]) */;
  %817 = %816.0;
  %818 = cast(%817, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
  %819 = tan(%818) /* ty=Tensor[(13, 9, 12), float64] */;
  %820 = @func_4569() /* ty=(Tensor[(13, 9, 12), float32],) */;
  %821 = %820.0;
  %822 = cast(%821, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
  %823 = shape_of(%819, dtype="int32") /* ty=Tensor[(3), int32] */;
  %824 = cast(%819, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
  %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %826 = add(%824, %825) /* ty=Tensor[(13, 9, 12), float64] */;
  %827 = cast(%826, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
  %828 = shape_of(%819, dtype="int32") /* ty=Tensor[(3), int32] */;
  %829 = cast(%819, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
  %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%829, %830) /* ty=Tensor[(13, 9, 12), float64] */
}

def @func_5754() -> (Tensor[(13, 9, 12), float64],) {
  %831 = @func_5725() /* ty=Tensor[(13, 9, 12), float64] */;
  %832 = cast(%831, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
  %833 = cos(%832) /* ty=Tensor[(13, 9, 12), float64] */;
  (%833,)
}

def @func_3586() -> (Tensor[(2730), float32],) {
  %834 = @func_3336() /* ty=(Tensor[(2730), float32],) */;
  %835 = %834.0;
  (%835,)
}

def @func_3690(%var_3686: Tensor[(180), float32]) -> (Tensor[(2730), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32]) {
  %836 = @func_2138() /* ty=(Tensor[(2730), float32],) */;
  %837 = cast(%var_3686, dtype="float32") /* ty=Tensor[(180), float32] */;
  %838 = reshape(%837, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %839 = @func_1667(%838) /* ty=(Tensor[(16, 14, 11), float64], Tensor[(15, 14, 13), float32], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16]) */;
  %840 = %836.0;
  %841 = %839.0;
  (%840, %841, %var_3686)
}

def @func_4555(%var_4528: Tensor[(1, 6, 4), int32], %var_4529: Tensor[(1, 6, 4), int32], %var_4541: Tensor[(3, 6, 4), bool]) -> Tensor[(3, 6, 4), int64] {
  %842 = cast(%var_4529, dtype="bool") /* ty=Tensor[(1, 6, 4), bool] */;
  %843 = shape_of(%var_4528, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%var_4528, dtype="bool") /* ty=Tensor[(1, 6, 4), bool] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %846 = greater(%844, %845) /* ty=Tensor[(?, 6, 4), bool] */;
  %847 = cast(%846, dtype="int64") /* ty=Tensor[(?, 6, 4), int64] */;
  %848 = cast(%var_4541, dtype="int64") /* ty=Tensor[(3, 6, 4), int64] */;
  maximum(%847, %848) /* ty=Tensor[(3, 6, 4), int64] */
}

def @func_2769() -> (Tensor[(13, 9, 12), float32], Tensor[(10, 7, 7), float32]) {
  %849 = @func_2547() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(180), float32], Tensor[(180), float32], Tensor[(13, 9, 12), int32]) */;
  %850 = %849.3;
  %851 = cast(%850, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %852 = @func_2211() /* ty=(Tensor[(10, 7, 7), float32],) */;
  %853 = atanh(%851) /* ty=Tensor[(13, 9, 12), float32] */;
  %854 = %852.0;
  (%853, %854)
}

def @func_2302() -> Tensor[(2730), float32] {
  %855 = @func_2138() /* ty=(Tensor[(2730), float32],) */;
  %855.0
}

def @func_3296(%var_3281: Tensor[(1404), bool], %var_3282: Tensor[(40, 26), int64]) -> (Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1404), bool], Tensor[(40, 26), int64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(?, 3150), uint16]) {
  %856 = @func_1783() /* ty=(Tensor[(15, 14, 13), float32], Tensor[(15, 14, 13), float64]) */;
  %857 = %856.1;
  %858 = cast(%857, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
  %859 = cos(%858) /* ty=Tensor[(15, 14, 13), float64] */;
  %860 = cast(%859, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
  %861 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%857, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %864 = @func_2138() /* ty=(Tensor[(2730), float32],) */;
  %865 = cast(%var_3281, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %866 = cast(%var_3282, dtype="int64") /* ty=Tensor[(40, 26), int64] */;
  %867 = %864.0;
  %868 = cast(%867, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %869 = reshape(%865, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), bool] */;
  %870 = reshape(%866, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %871 = reshape(%868, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
  %872 = @func_2902(%869, %870, %871) /* ty=(Tensor[(13, 9, 12), int64], Tensor[(16, 12, 2), uint16], Tensor[(15, 14, 13), float64], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(4, 300), int16], Tensor[(16, 13, 5), int64], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2730), float32], Tensor[(15, 14, 13), int16], Tensor[(15, 14, 13), float32]) */;
  %873 = cast(%var_3281, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %874 = cast(%var_3282, dtype="int64") /* ty=Tensor[(40, 26), int64] */;
  %875 = cast(%857, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
  %876 = reshape(%873, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), bool] */;
  %877 = reshape(%874, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %878 = reshape(%875, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
  %879 = @func_2902(%876, %877, %878) /* ty=(Tensor[(13, 9, 12), int64], Tensor[(16, 12, 2), uint16], Tensor[(15, 14, 13), float64], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(4, 300), int16], Tensor[(16, 13, 5), int64], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2730), float32], Tensor[(15, 14, 13), int16], Tensor[(15, 14, 13), float32]) */;
  %880 = %879.8;
  %881 = cast(%880, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %882 = reshape(%881, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %883 = @func_1744(%882) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(1, 3150), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32], Tensor[(?, 3150), uint16], Tensor[(15, 14, 13), float64]) */;
  %884 = divide(%862, %863) /* ty=Tensor[(15, 14, 13), float64] */;
  %885 = %872.5;
  %886 = @func_1437() /* ty=Tensor[(15, 14, 13), float64] */;
  %887 = %883.5;
  (%884, %867, %885, %var_3281, %var_3282, %886, %880, %887)
}

def @func_1405() -> (Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) {
  %888 = cast(meta[relay.Constant][50] /* ty=Tensor[(2730), float32] */, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %889 = cast(meta[relay.Constant][50] /* ty=Tensor[(2730), float32] */, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %890 = cast(meta[relay.Constant][51] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %891 = reshape(%888, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float32] */;
  %892 = reshape(%889, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float32] */;
  %893 = reshape(%890, newshape=[90, 2]) /* ty=Tensor[(90, 2), float32] */;
  %894 = @func_794(%891, %892, %893) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), int32], Tensor[(5, 12, 3), float64], Tensor[(90, 2), float32], Tensor[(15, 14, 13), float32]) */;
  %895 = cast(meta[relay.Constant][52] /* ty=Tensor[(16, 14, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 14, 11), float64] */;
  %896 = atanh(%895) /* ty=Tensor[(16, 14, 11), float64] */;
  %897 = cast(%896, dtype="float64") /* ty=Tensor[(16, 14, 11), float64] */;
  %898 = %894.0;
  %899 = atan(%897) /* ty=Tensor[(16, 14, 11), float64] */;
  (%898, meta[relay.Constant][50] /* ty=Tensor[(2730), float32] */, meta[relay.Constant][51] /* ty=Tensor[(180), float32] */, %899)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2967() -> (Tensor[(180), float32], Tensor[(15, 14, 13), float32]) {
  %8 = fn () -> (Tensor[(180), float32], Tensor[(15, 14, 13), float32]) {
    %0 = @func_2587() /* ty=(Tensor[(16, 12, 2), uint16], Tensor[(2730), float32], Tensor[(180), float32]) */;
    %1 = @func_1985() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64]) */;
    %2 = %1.0;
    %3 = cast(%2, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
    %4 = log(%3) /* ty=Tensor[(15, 14, 13), float64] */;
    %5 = cast(%4, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
    %6 = %0.2;
    %7 = log2(%5) /* ty=Tensor[(15, 14, 13), float32] */;
    (%6, %7)
  };
  %8() /* ty=(Tensor[(180), float32], Tensor[(15, 14, 13), float32]) */
}

def @func_1783() -> (Tensor[(15, 14, 13), float32], Tensor[(15, 14, 13), float64]) {
  %9 = @func_1619() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(16, 12, 2), uint16]) */;
  %10 = %9.0;
  %11 = cast(%10, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
  %12 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %13 = tan(%11) /* ty=Tensor[(15, 14, 13), float32] */;
  %14 = %12.0;
  (%13, %14)
}

def @func_2420(%var_2419: Tensor[(192, 2), uint16]) -> (Tensor[(180), float32], Tensor[(10, 7, 7), float32], Tensor[(16, 12, 2), uint16], Tensor[(5, 16, 15), bool], Tensor[(1200), int16], Tensor[(192, 2), float64]) {
  %33 = fn (%var_2413: Tensor[(192, 2), uint16]) -> (Tensor[(180), float32], Tensor[(10, 7, 7), float32], Tensor[(16, 12, 2), uint16], Tensor[(5, 16, 15), bool], Tensor[(1200), int16], Tensor[(192, 2), float64]) {
    %15 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
    %16 = @func_2211() /* ty=(Tensor[(10, 7, 7), float32],) */;
    %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(192, 2), uint16] */, dtype="uint16") /* ty=Tensor[(192, 2), uint16] */;
    %18 = reshape(%17, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
    %19 = cast(meta[relay.Constant][1] /* ty=Tensor[(1200), int16] */, dtype="int16") /* ty=Tensor[(1200), int16] */;
    %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(1200), int16] */, dtype="int16") /* ty=Tensor[(1200), int16] */;
    %21 = reshape(%19, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
    %22 = reshape(%20, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
    %23 = @func_2170(%21, %22) /* ty=(Tensor[(5, 16, 15), bool], Tensor[(2730), float32], Tensor[(180), float32]) */;
    %24 = cast(%var_2413, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
    %25 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(192, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %26 = cast(meta[relay.Constant][0] /* ty=Tensor[(192, 2), uint16] */, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
    %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %28 = %15.2;
    %29 = %16.0;
    %30 = @func_34(%18) /* ty=Tensor[(16, 12, 2), uint16] */;
    %31 = %23.0;
    %32 = floor_divide(%26, %27) /* ty=Tensor[(192, 2), float64] */;
    (%28, %29, %30, %31, meta[relay.Constant][1] /* ty=Tensor[(1200), int16] */, %32)
  };
  %33(%var_2419) /* ty=(Tensor[(180), float32], Tensor[(10, 7, 7), float32], Tensor[(16, 12, 2), uint16], Tensor[(5, 16, 15), bool], Tensor[(1200), int16], Tensor[(192, 2), float64]) */
}

def @func_3761(%var_3751: Tensor[(2730), float32]) -> Tensor[(2730), float32] {
  %34 = @func_2302() /* ty=Tensor[(2730), float32] */;
  %35 = cast(%var_3751, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %36 = shape_of(%34, dtype="int32") /* ty=Tensor[(1), int32] */;
  %37 = cast(%34, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?), float32] */;
  maximum(%37, %38) /* ty=Tensor[(2730), float32] */
}

def @func_5136(%var_5134: Tensor[(1, 30), int8], %var_5135: Tensor[(1200), int16]) -> (Tensor[(15, 14, 13), float64], Tensor[(3, 1, 10), float32], Tensor[(1, 30), int8], Tensor[(1200), int16]) {
  @func_5132(%var_5134, %var_5135) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(3, 1, 10), float32], Tensor[(1, 30), int8], Tensor[(1200), int16]) */
}

def @func_6101(%var_6072: Tensor[(8, 13, 9), uint16], %var_6093: Tensor[(60), float64]) -> (Tensor[(8, 13, 9), float32], Tensor[(3, 4, 5), float64], Tensor[(60), float64]) {
  %39 = cast(%var_6072, dtype="uint16") /* ty=Tensor[(8, 13, 9), uint16] */;
  %40 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(8, 13, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 13, 9), uint16] */, dtype="uint16") /* ty=Tensor[(8, 13, 9), uint16] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %43 = bitwise_xor(%41, %42) /* ty=Tensor[(8, 13, 9), uint16] */;
  %44 = cast(%43, dtype="float32") /* ty=Tensor[(8, 13, 9), float32] */;
  %45 = cast(%var_6093, dtype="float64") /* ty=Tensor[(60), float64] */;
  %46 = reshape(%45, newshape=[3, 4, 5]) /* ty=Tensor[(3, 4, 5), float64] */;
  %47 = @func_511(%46) /* ty=(Tensor[(3, 4, 5), float64],) */;
  %48 = sqrt(%44) /* ty=Tensor[(8, 13, 9), float32] */;
  %49 = %47.0;
  (%48, %49, %var_6093)
}

def @func_5859(%var_5800: Tensor[(2730), float32], %var_5817: Tensor[(1200), int16], %var_5824: Tensor[(180), float32], %var_5828: Tensor[(1404), bool], %var_5829: Tensor[(520, 2), int64], %var_5847: Tensor[(3, 24), bool]) -> (Tensor[(2730), uint64], Tensor[(1200), int16], Tensor[(1200), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(520, 2), int64], Tensor[(1404), float32], Tensor[(3, 6, 4), int64], Tensor[(12, 2), int32], Tensor[(3, 24), bool]) {
  %50 = @func_2302() /* ty=Tensor[(2730), float32] */;
  %51 = cast(%var_5800, dtype="uint64") /* ty=Tensor[(2730), uint64] */;
  %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(1), int32] */;
  %53 = cast(%50, dtype="uint64") /* ty=Tensor[(2730), uint64] */;
  %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(1200), int16] */, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %56 = reshape(%55, newshape=[1200]) /* ty=Tensor[(1200), int16] */;
  %57 = @func_3412(%56) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(15, 14, 13), uint16], Tensor[(5, 16, 15), float32]) */;
  %58 = cast(%var_5817, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %59 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(1200), int16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %60 = cast(meta[relay.Constant][3] /* ty=Tensor[(1200), int16] */, dtype="float32") /* ty=Tensor[(1200), float32] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?), float32] */;
  %62 = cast(%var_5824, dtype="float32") /* ty=Tensor[(180), float32] */;
  %63 = reshape(%62, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %64 = @func_1667(%63) /* ty=(Tensor[(16, 14, 11), float64], Tensor[(15, 14, 13), float32], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16]) */;
  %65 = cast(%var_5828, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %66 = cast(%var_5829, dtype="int64") /* ty=Tensor[(520, 2), int64] */;
  %67 = reshape(%65, newshape=[1404]) /* ty=Tensor[(1404), bool] */;
  %68 = reshape(%66, newshape=[40, 26]) /* ty=Tensor[(40, 26), int64] */;
  %69 = @func_3296(%67, %68) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1404), bool], Tensor[(40, 26), int64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(?, 3150), uint16]) */;
  %70 = cast(meta[relay.Constant][4] /* ty=Tensor[(1404), bool] */, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %71 = shape_of(%var_5828, dtype="int32") /* ty=Tensor[(1), int32] */;
  %72 = cast(%var_5828, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?), float32] */;
  %74 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 2), int32] */, dtype="int32") /* ty=Tensor[(12, 2), int32] */;
  %75 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 2), int32] */, dtype="int32") /* ty=Tensor[(12, 2), int32] */;
  %76 = cast(%var_5847, dtype="bool") /* ty=Tensor[(3, 24), bool] */;
  %77 = reshape(%74, newshape=[1, 6, 4]) /* ty=Tensor[(1, 6, 4), int32] */;
  %78 = reshape(%75, newshape=[1, 6, 4]) /* ty=Tensor[(1, 6, 4), int32] */;
  %79 = reshape(%76, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), bool] */;
  %80 = bitwise_and(%53, %54) /* ty=Tensor[(2730), uint64] */;
  %81 = %57.1;
  %82 = divide(%60, %61) /* ty=Tensor[(1200), float32] */;
  %83 = %64.4;
  %84 = %69.5;
  %85 = divide(%72, %73) /* ty=Tensor[(1404), float32] */;
  %86 = @func_4555(%77, %78, %79) /* ty=Tensor[(3, 6, 4), int64] */;
  (%80, %81, %82, %83, %var_5824, %84, %var_5829, %85, %86, meta[relay.Constant][5] /* ty=Tensor[(12, 2), int32] */, %var_5847)
}

def @func_4070(%var_4068: Tensor[(13, 9, 12), float32], %var_4069: Tensor[(2730), float32]) -> (Tensor[(13, 9, 12), bool], Tensor[(180), float32], Tensor[(180), float32], Tensor[(2730), int64], Tensor[(16, 12, 2), uint16], Tensor[(3150), float64], Tensor[(2730), int8], Tensor[(15, 14, 13), float64]) {
  %119 = fn (%var_4022: Tensor[(13, 9, 12), float32], %var_4044: Tensor[(2730), float32]) -> (Tensor[(13, 9, 12), bool], Tensor[(180), float32], Tensor[(180), float32], Tensor[(2730), int64], Tensor[(16, 12, 2), uint16], Tensor[(3150), float64], Tensor[(2730), int8], Tensor[(15, 14, 13), float64]) {
    %87 = @func_2455() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %88 = %87.0;
    %89 = cast(%var_4022, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
    %90 = shape_of(%88, dtype="int32") /* ty=Tensor[(3), int32] */;
    %91 = cast(%88, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
    %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %93 = cast(meta[relay.Constant][6] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %94 = reshape(%93, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %95 = @func_3690(%94) /* ty=(Tensor[(2730), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32]) */;
    %96 = cast(meta[relay.Constant][6] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %97 = reshape(%96, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %98 = @func_3690(%97) /* ty=(Tensor[(2730), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32]) */;
    %99 = %98.0;
    %100 = cast(%var_4044, dtype="int64") /* ty=Tensor[(2730), int64] */;
    %101 = shape_of(%99, dtype="int32") /* ty=Tensor[(1), int32] */;
    %102 = cast(%99, dtype="int64") /* ty=Tensor[(2730), int64] */;
    %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?), int64] */;
    %104 = cast(meta[relay.Constant][7] /* ty=Tensor[(3150), float64] */, dtype="float64") /* ty=Tensor[(3150), float64] */;
    %105 = cast(meta[relay.Constant][7] /* ty=Tensor[(3150), float64] */, dtype="float64") /* ty=Tensor[(3150), float64] */;
    %106 = cast(meta[relay.Constant][7] /* ty=Tensor[(3150), float64] */, dtype="float64") /* ty=Tensor[(3150), float64] */;
    %107 = reshape(%104, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
    %108 = reshape(%105, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
    %109 = reshape(%106, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
    %110 = @func_136(%107, %108, %109) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */;
    %111 = cast(%var_4044, dtype="float32") /* ty=Tensor[(2730), float32] */;
    %112 = reshape(%111, newshape=[2730]) /* ty=Tensor[(2730), float32] */;
    %113 = less(%91, %92) /* ty=Tensor[(13, 9, 12), bool] */;
    %114 = %95.2;
    %115 = subtract(%102, %103) /* ty=Tensor[(2730), int64] */;
    %116 = %110.4;
    %117 = @func_3317(%112) /* ty=Tensor[(2730), int8] */;
    %118 = @func_2086() /* ty=Tensor[(15, 14, 13), float64] */;
    (%113, %114, meta[relay.Constant][6] /* ty=Tensor[(180), float32] */, %115, %116, meta[relay.Constant][7] /* ty=Tensor[(3150), float64] */, %117, %118)
  };
  %119(%var_4068, %var_4069) /* ty=(Tensor[(13, 9, 12), bool], Tensor[(180), float32], Tensor[(180), float32], Tensor[(2730), int64], Tensor[(16, 12, 2), uint16], Tensor[(3150), float64], Tensor[(2730), int8], Tensor[(15, 14, 13), float64]) */
}

def @func_1935() -> (Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), uint16], Tensor[(2730), float64]) {
  %120 = cast(meta[relay.Constant][8] /* ty=Tensor[(10, 7, 7), float64] */, dtype="float64") /* ty=Tensor[(10, 7, 7), float64] */;
  %121 = log2(%120) /* ty=Tensor[(10, 7, 7), float64] */;
  %122 = cast(%121, dtype="float32") /* ty=Tensor[(10, 7, 7), float32] */;
  %123 = cast(meta[relay.Constant][9] /* ty=Tensor[(2730), float64] */, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %124 = reshape(%123, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
  %125 = @func_1603(%124) /* ty=(Tensor[(15, 14, 13), uint16],) */;
  %126 = acosh(%122) /* ty=Tensor[(10, 7, 7), float32] */;
  %127 = %125.0;
  (%126, %127, meta[relay.Constant][9] /* ty=Tensor[(2730), float64] */)
}

def @func_3031() -> (Tensor[(180), float32], Tensor[(180), float32], Tensor[(2730), float32]) {
  @func_3029() /* ty=(Tensor[(180), float32], Tensor[(180), float32], Tensor[(2730), float32]) */
}

def @func_4461(%var_4442: Tensor[(3, 1, 10), int8], %var_4459: Tensor[(2, 600), int16]) -> (Tensor[(3, 11, 10), int8], Tensor[(10, 7, 7), float32], Tensor[(180), float32], Tensor[(3, 1, 10), float32], Tensor[(1200), int16], Tensor[(2, 600), int16]) {
  %128 = cast(%var_4442, dtype="int8") /* ty=Tensor[(3, 1, 10), int8] */;
  %129 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 11, 10), int8] */, dtype="int8") /* ty=Tensor[(3, 11, 10), int8] */;
  %130 = @func_2211() /* ty=(Tensor[(10, 7, 7), float32],) */;
  %131 = @func_2966() /* ty=(Tensor[(180), float32], Tensor[(15, 14, 13), float32]) */;
  %132 = cast(%var_4442, dtype="float32") /* ty=Tensor[(3, 1, 10), float32] */;
  %133 = cast(%var_4459, dtype="int16") /* ty=Tensor[(2, 600), int16] */;
  %134 = reshape(%133, newshape=[1200]) /* ty=Tensor[(1200), int16] */;
  %135 = @func_3412(%134) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(15, 14, 13), uint16], Tensor[(5, 16, 15), float32]) */;
  %136 = bitwise_xor(%128, %129) /* ty=Tensor[(3, 11, 10), int8] */;
  %137 = %130.0;
  %138 = %131.0;
  %139 = exp(%132) /* ty=Tensor[(3, 1, 10), float32] */;
  %140 = %135.1;
  (%136, %137, %138, %139, %140, %var_4459)
}

def @func_5345() -> (Tensor[(15, 14, 13), float64],) {
  %141 = @func_3144() /* ty=Tensor[(15, 14, 13), float64] */;
  (%141,)
}

def @func_6007(%var_6005: Tensor[(1404), bool], %var_6006: Tensor[(1040), int64]) -> (Tensor[(2730), float32], Tensor[(8, 4, 4), uint8], Tensor[(8, 4, 4), uint8], Tensor[(15, 14, 13), float64], Tensor[(1404), bool], Tensor[(1040), int64], Tensor[(1575, 2), float64], Tensor[(16, 12, 2), uint8], Tensor[(1200), int16], Tensor[(1200), int16], Tensor[(180), float32], Tensor[(72), bool]) {
  @func_6003(%var_6005, %var_6006) /* ty=(Tensor[(2730), float32], Tensor[(8, 4, 4), uint8], Tensor[(8, 4, 4), uint8], Tensor[(15, 14, 13), float64], Tensor[(1404), bool], Tensor[(1040), int64], Tensor[(1575, 2), float64], Tensor[(16, 12, 2), uint8], Tensor[(1200), int16], Tensor[(1200), int16], Tensor[(180), float32], Tensor[(72), bool]) */
}

def @func_3029() -> (Tensor[(180), float32], Tensor[(180), float32], Tensor[(2730), float32]) {
  %142 = @func_2966() /* ty=(Tensor[(180), float32], Tensor[(15, 14, 13), float32]) */;
  %143 = @func_2966() /* ty=(Tensor[(180), float32], Tensor[(15, 14, 13), float32]) */;
  %144 = @func_2138() /* ty=(Tensor[(2730), float32],) */;
  %145 = %144.0;
  %146 = cast(%145, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %147 = %142.0;
  %148 = %143.0;
  %149 = sigmoid(%146) /* ty=Tensor[(2730), float32] */;
  (%147, %148, %149)
}

def @func_4421(%var_4420: Tensor[(1404), float32]) -> (Tensor[(2730), float32], Tensor[(2730), float64], Tensor[(16, 12, 2), uint16], Tensor[(1404), float32], Tensor[(180), float32]) {
  %163 = fn (%var_4410: Tensor[(1404), float32]) -> (Tensor[(2730), float32], Tensor[(2730), float64], Tensor[(16, 12, 2), uint16], Tensor[(1404), float32], Tensor[(180), float32]) {
    %150 = @func_3336() /* ty=(Tensor[(2730), float32],) */;
    %151 = @func_3586() /* ty=(Tensor[(2730), float32],) */;
    %152 = %151.0;
    %153 = cast(%152, dtype="float64") /* ty=Tensor[(2730), float64] */;
    %154 = cast(%var_4410, dtype="float32") /* ty=Tensor[(1404), float32] */;
    %155 = cast(%152, dtype="float32") /* ty=Tensor[(2730), float32] */;
    %156 = reshape(%154, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
    %157 = reshape(%155, newshape=[2730]) /* ty=Tensor[(2730), float32] */;
    %158 = @func_4067(%156, %157) /* ty=(Tensor[(13, 9, 12), bool], Tensor[(180), float32], Tensor[(180), float32], Tensor[(2730), int64], Tensor[(16, 12, 2), uint16], Tensor[(3150), float64], Tensor[(2730), int8], Tensor[(15, 14, 13), float64]) */;
    %159 = %150.0;
    %160 = log(%153) /* ty=Tensor[(2730), float64] */;
    %161 = %158.4;
    %162 = @func_1429() /* ty=Tensor[(180), float32] */;
    (%159, %160, %161, %var_4410, %162)
  };
  %163(%var_4420) /* ty=(Tensor[(2730), float32], Tensor[(2730), float64], Tensor[(16, 12, 2), uint16], Tensor[(1404), float32], Tensor[(180), float32]) */
}

def @func_3571(%var_3534: Tensor[(2, 600), int16], %var_3548: Tensor[(180), float32], %var_3563: Tensor[(384), uint16], %var_3566: Tensor[(1575, 2), float64]) -> (Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(2, 600), float32], Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1200), int16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(1575, 2), float64]) {
  %164 = cast(%var_3534, dtype="int16") /* ty=Tensor[(2, 600), int16] */;
  %165 = reshape(%164, newshape=[1200]) /* ty=Tensor[(1200), int16] */;
  %166 = @func_3412(%165) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(15, 14, 13), uint16], Tensor[(5, 16, 15), float32]) */;
  %167 = cast(%var_3534, dtype="float32") /* ty=Tensor[(2, 600), float32] */;
  %168 = cast(%var_3548, dtype="float32") /* ty=Tensor[(180), float32] */;
  %169 = reshape(%168, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %170 = @func_1667(%169) /* ty=(Tensor[(16, 14, 11), float64], Tensor[(15, 14, 13), float32], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16]) */;
  %171 = cast(%var_3563, dtype="uint16") /* ty=Tensor[(384), uint16] */;
  %172 = reshape(%171, newshape=[192, 2]) /* ty=Tensor[(192, 2), uint16] */;
  %173 = @func_2418(%172) /* ty=(Tensor[(180), float32], Tensor[(10, 7, 7), float32], Tensor[(16, 12, 2), uint16], Tensor[(5, 16, 15), bool], Tensor[(1200), int16], Tensor[(192, 2), float64]) */;
  %174 = cast(%var_3566, dtype="float64") /* ty=Tensor[(1575, 2), float64] */;
  %175 = cast(%var_3566, dtype="float64") /* ty=Tensor[(1575, 2), float64] */;
  %176 = cast(%var_3566, dtype="float64") /* ty=Tensor[(1575, 2), float64] */;
  %177 = reshape(%174, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %178 = reshape(%175, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %179 = reshape(%176, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %180 = @func_136(%177, %178, %179) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */;
  %181 = @func_3144() /* ty=Tensor[(15, 14, 13), float64] */;
  %182 = %166.1;
  %183 = atanh(%167) /* ty=Tensor[(2, 600), float32] */;
  %184 = @func_2086() /* ty=Tensor[(15, 14, 13), float64] */;
  %185 = %170.2;
  %186 = %173.4;
  %187 = %180.12;
  (%181, %182, %183, %184, %185, %var_3548, %186, %var_3563, %187, %var_3566)
}

def @func_6003(%var_5976: Tensor[(1404), bool], %var_5977: Tensor[(1040), int64]) -> (Tensor[(2730), float32], Tensor[(8, 4, 4), uint8], Tensor[(8, 4, 4), uint8], Tensor[(15, 14, 13), float64], Tensor[(1404), bool], Tensor[(1040), int64], Tensor[(1575, 2), float64], Tensor[(16, 12, 2), uint8], Tensor[(1200), int16], Tensor[(1200), int16], Tensor[(180), float32], Tensor[(72), bool]) {
  %188 = @func_2138() /* ty=(Tensor[(2730), float32],) */;
  %189 = @func_3664() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(2730), float32], Tensor[(8, 4, 4), uint8], Tensor[(8, 16), float64], Tensor[(8, 4, 5), float64], Tensor[(15, 14, 13), float64]) */;
  %190 = %189.2;
  %191 = cast(%190, dtype="float64") /* ty=Tensor[(8, 4, 4), float64] */;
  %192 = reshape(%191, newshape=[8, 4, 4]) /* ty=Tensor[(8, 4, 4), float64] */;
  %193 = cast(%var_5976, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %194 = cast(%var_5977, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %195 = reshape(%193, newshape=[1404]) /* ty=Tensor[(1404), bool] */;
  %196 = reshape(%194, newshape=[40, 26]) /* ty=Tensor[(40, 26), int64] */;
  %197 = @func_3296(%195, %196) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1404), bool], Tensor[(40, 26), int64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(?, 3150), uint16]) */;
  %198 = cast(meta[relay.Constant][11] /* ty=Tensor[(1575, 2), float64] */, dtype="float64") /* ty=Tensor[(1575, 2), float64] */;
  %199 = cast(meta[relay.Constant][11] /* ty=Tensor[(1575, 2), float64] */, dtype="float64") /* ty=Tensor[(1575, 2), float64] */;
  %200 = cast(meta[relay.Constant][11] /* ty=Tensor[(1575, 2), float64] */, dtype="float64") /* ty=Tensor[(1575, 2), float64] */;
  %201 = reshape(%198, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %202 = reshape(%199, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %203 = reshape(%200, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %204 = @func_136(%201, %202, %203) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */;
  %205 = %204.3;
  %206 = cast(meta[relay.Constant][12] /* ty=Tensor[(16, 12, 2), uint16] */, dtype="uint8") /* ty=Tensor[(16, 12, 2), uint8] */;
  %207 = shape_of(%205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%205, dtype="uint8") /* ty=Tensor[(16, 12, 2), uint8] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %210 = %188.0;
  %211 = cast(%210, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %212 = cast(meta[relay.Constant][13] /* ty=Tensor[(1200), int16] */, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %213 = cast(meta[relay.Constant][14] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %214 = cast(%var_5976, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %215 = cast(%var_5977, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %216 = cast(meta[relay.Constant][15] /* ty=Tensor[(72), bool] */, dtype="bool") /* ty=Tensor[(72), bool] */;
  %217 = reshape(%211, newshape=[2730]) /* ty=Tensor[(2730), float32] */;
  %218 = reshape(%212, newshape=[1200]) /* ty=Tensor[(1200), int16] */;
  %219 = reshape(%213, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %220 = reshape(%214, newshape=[1404]) /* ty=Tensor[(1404), bool] */;
  %221 = reshape(%215, newshape=[520, 2]) /* ty=Tensor[(520, 2), int64] */;
  %222 = reshape(%216, newshape=[3, 24]) /* ty=Tensor[(3, 24), bool] */;
  %223 = @func_5859(%217, %218, %219, %220, %221, %222) /* ty=(Tensor[(2730), uint64], Tensor[(1200), int16], Tensor[(1200), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(520, 2), int64], Tensor[(1404), float32], Tensor[(3, 6, 4), int64], Tensor[(12, 2), int32], Tensor[(3, 24), bool]) */;
  %224 = @func_620(%192) /* ty=Tensor[(8, 4, 4), uint8] */;
  %225 = %197.0;
  %226 = add(%208, %209) /* ty=Tensor[(16, 12, 2), uint8] */;
  %227 = %223.1;
  (%210, %190, %224, %225, %var_5976, %var_5977, meta[relay.Constant][11] /* ty=Tensor[(1575, 2), float64] */, %226, %227, meta[relay.Constant][13] /* ty=Tensor[(1200), int16] */, meta[relay.Constant][14] /* ty=Tensor[(180), float32] */, meta[relay.Constant][15] /* ty=Tensor[(72), bool] */)
}

def @func_794(%var_729: Tensor[(15, 14, 13), float32], %var_735: Tensor[(15, 14, 13), float32], %var_765: Tensor[(90, 2), float32]) -> (Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), int32], Tensor[(5, 12, 3), float64], Tensor[(90, 2), float32], Tensor[(15, 14, 13), float32]) {
  %228 = cast(%var_729, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
  %229 = sigmoid(%228) /* ty=Tensor[(15, 14, 13), float32] */;
  %230 = cast(%229, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
  %231 = cast(%var_735, dtype="int32") /* ty=Tensor[(15, 14, 13), int32] */;
  %232 = shape_of(%var_729, dtype="int32") /* ty=Tensor[(3), int32] */;
  %233 = cast(%var_729, dtype="int32") /* ty=Tensor[(15, 14, 13), int32] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %235 = cast(%var_765, dtype="float32") /* ty=Tensor[(90, 2), float32] */;
  %236 = reshape(%235, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %237 = @func_486(%236) /* ty=(Tensor[(5, 12, 3), float64],) */;
  %238 = cast(%229, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
  %239 = cosh(%238) /* ty=Tensor[(15, 14, 13), float32] */;
  %240 = cast(%239, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
  %241 = log10(%230) /* ty=Tensor[(15, 14, 13), float64] */;
  %242 = right_shift(%233, %234) /* ty=Tensor[(15, 14, 13), int32] */;
  %243 = %237.0;
  %244 = sin(%240) /* ty=Tensor[(15, 14, 13), float32] */;
  (%241, %242, %243, %var_765, %244)
}

def @func_3456() -> (Tensor[(8, 4, 5), float32],) {
  @func_3454() /* ty=(Tensor[(8, 4, 5), float32],) */
}

def @func_799(%var_796: Tensor[(15, 14, 13), float32], %var_797: Tensor[(15, 14, 13), float32], %var_798: Tensor[(90, 2), float32]) -> (Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), int32], Tensor[(5, 12, 3), float64], Tensor[(90, 2), float32], Tensor[(15, 14, 13), float32]) {
  @func_794(%var_796, %var_797, %var_798) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), int32], Tensor[(5, 12, 3), float64], Tensor[(90, 2), float32], Tensor[(15, 14, 13), float32]) */
}

def @func_2170(%var_2149: Tensor[(5, 16, 15), int16], %var_2150: Tensor[(5, 16, 15), int16]) -> (Tensor[(5, 16, 15), bool], Tensor[(2730), float32], Tensor[(180), float32]) {
  %245 = cast(%var_2150, dtype="bool") /* ty=Tensor[(5, 16, 15), bool] */;
  %246 = shape_of(%var_2149, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%var_2149, dtype="bool") /* ty=Tensor[(5, 16, 15), bool] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %249 = @func_2138() /* ty=(Tensor[(2730), float32],) */;
  %250 = equal(%247, %248) /* ty=Tensor[(5, 16, 15), bool] */;
  %251 = %249.0;
  %252 = @func_2016() /* ty=Tensor[(180), float32] */;
  (%250, %251, %252)
}

def @func_5478(%var_5476: Tensor[(8, 11, 16), uint32], %var_5477: Tensor[(8, 11, 16), uint32]) -> (Tensor[(8, 11, 16), bool], Tensor[(5, 16, 15), bool], Tensor[(12, 100), int16]) {
  @func_5474(%var_5476, %var_5477) /* ty=(Tensor[(8, 11, 16), bool], Tensor[(5, 16, 15), bool], Tensor[(12, 100), int16]) */
}

def @func_6141(%var_6136: Tensor[(2, 1, 15), float32], %var_6137: Tensor[(2, 1, 15), float32]) -> (Tensor[(2, ?, 15), float32],) {
  %253 = cast(%var_6137, dtype="float32") /* ty=Tensor[(2, 1, 15), float32] */;
  %254 = shape_of(%var_6136, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%var_6136, dtype="float32") /* ty=Tensor[(2, 1, 15), float32] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %257 = power(%255, %256) /* ty=Tensor[(2, ?, 15), float32] */;
  (%257,)
}

def @func_3414(%var_3413: Tensor[(1200), int16]) -> (Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(15, 14, 13), uint16], Tensor[(5, 16, 15), float32]) {
  %273 = fn (%var_3381: Tensor[(1200), int16]) -> (Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(15, 14, 13), uint16], Tensor[(5, 16, 15), float32]) {
    %258 = @func_1437() /* ty=Tensor[(15, 14, 13), float64] */;
    %259 = cast(%258, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
    %260 = reshape(%259, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
    %261 = @func_1603(%260) /* ty=(Tensor[(15, 14, 13), uint16],) */;
    %262 = cast(%var_3381, dtype="int16") /* ty=Tensor[(1200), int16] */;
    %263 = cast(%var_3381, dtype="int16") /* ty=Tensor[(1200), int16] */;
    %264 = reshape(%262, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
    %265 = reshape(%263, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
    %266 = @func_2170(%264, %265) /* ty=(Tensor[(5, 16, 15), bool], Tensor[(2730), float32], Tensor[(180), float32]) */;
    %267 = %266.0;
    %268 = cast(%267, dtype="float32") /* ty=Tensor[(5, 16, 15), float32] */;
    %269 = asinh(%268) /* ty=Tensor[(5, 16, 15), float32] */;
    %270 = cast(%269, dtype="float32") /* ty=Tensor[(5, 16, 15), float32] */;
    %271 = %261.0;
    %272 = asin(%270) /* ty=Tensor[(5, 16, 15), float32] */;
    (%258, %var_3381, %271, %272)
  };
  %273(%var_3413) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(15, 14, 13), uint16], Tensor[(5, 16, 15), float32]) */
}

def @func_2211() -> (Tensor[(10, 7, 7), float32],) {
  %274 = @func_1935() /* ty=(Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), uint16], Tensor[(2730), float64]) */;
  %275 = %274.0;
  (%275,)
}

def @func_5314() -> (Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(180), float32]) {
  %281 = fn () -> (Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(180), float32]) {
    %276 = @func_3964() /* ty=(Tensor[(15, 14, 13), float64],) */;
    %277 = @func_3232() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(8, 4, 5), float64]) */;
    %278 = %276.0;
    %279 = %277.0;
    %280 = @func_1429() /* ty=Tensor[(180), float32] */;
    (%278, %279, %280)
  };
  %281() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(180), float32]) */
}

def @func_1430() -> Tensor[(180), float32] {
  %283 = fn () -> Tensor[(180), float32] {
    %282 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
    %282.2
  };
  %283() /* ty=Tensor[(180), float32] */
}

def @func_4882(%var_4762: Tensor[(15, 14, 13), float64], %var_4789: Tensor[(3150), float64], %var_4793: Tensor[(30), int8], %var_4794: Tensor[(1200), int16], %var_4837: Tensor[(6, 30), float32]) -> (Tensor[(15, 14, 13), bool], Tensor[(15, 14, 13), uint64], Tensor[(15, 14, 13), float32], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2, 600), int16], Tensor[(30), int8], Tensor[(1200), int16], Tensor[(8, 4, 5), float32], Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(6, 30), float32], Tensor[(14, 15, 15), bool], Tensor[(9, 6), uint64], Tensor[(14, 15, 15), uint16], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(1404), bool], Tensor[(14, 15, 15), float64]) {
  %284 = @func_1437() /* ty=Tensor[(15, 14, 13), float64] */;
  %285 = cast(%var_4762, dtype="bool") /* ty=Tensor[(15, 14, 13), bool] */;
  %286 = shape_of(%284, dtype="int32") /* ty=Tensor[(3), int32] */;
  %287 = cast(%284, dtype="bool") /* ty=Tensor[(15, 14, 13), bool] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %289 = cast(%284, dtype="uint64") /* ty=Tensor[(15, 14, 13), uint64] */;
  %290 = shape_of(%var_4762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%var_4762, dtype="uint64") /* ty=Tensor[(15, 14, 13), uint64] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %293 = cast(%284, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
  %294 = cast(%var_4793, dtype="int8") /* ty=Tensor[(30), int8] */;
  %295 = cast(%var_4794, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %296 = reshape(%294, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), int8] */;
  %297 = reshape(%295, newshape=[2, 600]) /* ty=Tensor[(2, 600), int16] */;
  %298 = @func_4461(%296, %297) /* ty=(Tensor[(3, 11, 10), int8], Tensor[(10, 7, 7), float32], Tensor[(180), float32], Tensor[(3, 1, 10), float32], Tensor[(1200), int16], Tensor[(2, 600), int16]) */;
  %299 = @func_3058() /* ty=(Tensor[(8, 4, 5), float32],) */;
  %300 = @func_1783() /* ty=(Tensor[(15, 14, 13), float32], Tensor[(15, 14, 13), float64]) */;
  %301 = @func_1783() /* ty=(Tensor[(15, 14, 13), float32], Tensor[(15, 14, 13), float64]) */;
  %302 = cast(%var_4837, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %303 = reshape(%302, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %304 = @func_3690(%303) /* ty=(Tensor[(2730), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32]) */;
  %305 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 6), uint64] */, dtype="uint64") /* ty=Tensor[(9, 6), uint64] */;
  %306 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 6), uint64] */, dtype="uint64") /* ty=Tensor[(9, 6), uint64] */;
  %307 = reshape(%305, newshape=[9, 2, 3]) /* ty=Tensor[(9, 2, 3), uint64] */;
  %308 = reshape(%306, newshape=[9, 2, 3]) /* ty=Tensor[(9, 2, 3), uint64] */;
  %309 = @func_1891(%307, %308) /* ty=(Tensor[(9, 2, 3), float32], Tensor[(14, 15, 15), bool], Tensor[(225, 14), float64]) */;
  %310 = cast(meta[relay.Constant][16] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %311 = cast(%var_4789, dtype="float64") /* ty=Tensor[(3150), float64] */;
  %312 = reshape(%310, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
  %313 = reshape(%311, newshape=[1, 3150]) /* ty=Tensor[(1, 3150), float64] */;
  %314 = @func_295(%312, %313) /* ty=(Tensor[(16, 13, 5), int64], Tensor[(16, 12, 2), uint16], Tensor[(1, 3150), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(14, 15, 15), int64]) */;
  %315 = %314.5;
  %316 = cast(%315, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
  %317 = log2(%316) /* ty=Tensor[(14, 15, 15), float64] */;
  %318 = cast(%317, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
  %319 = atanh(%318) /* ty=Tensor[(14, 15, 15), float64] */;
  %320 = cast(%319, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
  %321 = sigmoid(%320) /* ty=Tensor[(14, 15, 15), float64] */;
  %322 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 15, 15), float64] */, dtype="bool") /* ty=Tensor[(14, 15, 15), bool] */;
  %323 = shape_of(%321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%321, dtype="bool") /* ty=Tensor[(14, 15, 15), bool] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %326 = less(%324, %325) /* ty=Tensor[(14, 15, 15), bool] */;
  %327 = cast(%326, dtype="uint16") /* ty=Tensor[(14, 15, 15), uint16] */;
  %328 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%319, dtype="uint16") /* ty=Tensor[(14, 15, 15), uint16] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %331 = @func_1935() /* ty=(Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), uint16], Tensor[(2730), float64]) */;
  %332 = %331.0;
  %333 = cast(%332, dtype="float32") /* ty=Tensor[(10, 7, 7), float32] */;
  %334 = cast(meta[relay.Constant][19] /* ty=Tensor[(1404), bool] */, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %335 = cast(meta[relay.Constant][16] /* ty=Tensor[(1040), int64] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %336 = reshape(%334, newshape=[1404]) /* ty=Tensor[(1404), bool] */;
  %337 = reshape(%335, newshape=[40, 26]) /* ty=Tensor[(40, 26), int64] */;
  %338 = @func_3296(%336, %337) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1404), bool], Tensor[(40, 26), int64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(?, 3150), uint16]) */;
  %339 = cast(%321, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
  %340 = greater_equal(%287, %288) /* ty=Tensor[(15, 14, 13), bool] */;
  %341 = maximum(%291, %292) /* ty=Tensor[(15, 14, 13), uint64] */;
  %342 = asin(%293) /* ty=Tensor[(15, 14, 13), float32] */;
  %343 = %298.5;
  %344 = %299.0;
  %345 = %300.1;
  %346 = %301.1;
  %347 = %304.0;
  %348 = %309.1;
  %349 = subtract(%329, %330) /* ty=Tensor[(14, 15, 15), uint16] */;
  %350 = sigmoid(%333) /* ty=Tensor[(10, 7, 7), float32] */;
  %351 = %338.5;
  %352 = sinh(%339) /* ty=Tensor[(14, 15, 15), float64] */;
  (%340, %341, %342, meta[relay.Constant][16] /* ty=Tensor[(1040), int64] */, %var_4789, %343, %var_4793, %var_4794, %344, %345, %346, %347, %var_4837, %348, meta[relay.Constant][17] /* ty=Tensor[(9, 6), uint64] */, %349, %350, %351, meta[relay.Constant][19] /* ty=Tensor[(1404), bool] */, %352)
}

def @func_489(%var_487: Tensor[(5, 12, 3), float32]) -> (Tensor[(5, 12, 3), float64],) {
  @func_486(%var_487) /* ty=(Tensor[(5, 12, 3), float64],) */
}

def @func_299(%var_297: Tensor[(16, 13, 5), int64], %var_298: Tensor[(1, 3150), float64]) -> (Tensor[(16, 13, 5), int64], Tensor[(16, 12, 2), uint16], Tensor[(1, 3150), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(14, 15, 15), int64]) {
  @func_295(%var_297, %var_298) /* ty=(Tensor[(16, 13, 5), int64], Tensor[(16, 12, 2), uint16], Tensor[(1, 3150), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(14, 15, 15), int64]) */
}

def @func_2769() -> (Tensor[(13, 9, 12), float32], Tensor[(10, 7, 7), float32]) {
  %353 = @func_2547() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(180), float32], Tensor[(180), float32], Tensor[(13, 9, 12), int32]) */;
  %354 = %353.3;
  %355 = cast(%354, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %356 = @func_2211() /* ty=(Tensor[(10, 7, 7), float32],) */;
  %357 = atanh(%355) /* ty=Tensor[(13, 9, 12), float32] */;
  %358 = %356.0;
  (%357, %358)
}

def @func_5552() -> Tensor[(8, 4, 5), float64] {
  %360 = fn () -> Tensor[(8, 4, 5), float64] {
    %359 = @func_3232() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(8, 4, 5), float64]) */;
    %359.1
  };
  %360() /* ty=Tensor[(8, 4, 5), float64] */
}

def @func_5662() -> (Tensor[(15, 14, 13), float64],) {
  %362 = fn () -> (Tensor[(15, 14, 13), float64],) {
    %361 = @func_4214() /* ty=Tensor[(15, 14, 13), float64] */;
    (%361,)
  };
  %362() /* ty=(Tensor[(15, 14, 13), float64],) */
}

def @func_2643() -> Tensor[(15, 14, 13), float64] {
  @func_2086() /* ty=Tensor[(15, 14, 13), float64] */
}

def @func_1895(%var_1893: Tensor[(9, 2, 3), uint64], %var_1894: Tensor[(9, 2, 3), uint64]) -> (Tensor[(9, 2, 3), float32], Tensor[(14, 15, 15), bool], Tensor[(225, 14), float64]) {
  @func_1891(%var_1893, %var_1894) /* ty=(Tensor[(9, 2, 3), float32], Tensor[(14, 15, 15), bool], Tensor[(225, 14), float64]) */
}

def @func_623(%var_621: Tensor[(8, 4, 4), float64]) -> Tensor[(8, 4, 4), uint8] {
  @func_620(%var_621) /* ty=Tensor[(8, 4, 4), uint8] */
}

def @func_5176() -> Tensor[(2730), float32] {
  @func_5174() /* ty=Tensor[(2730), float32] */
}

def @func_2018() -> Tensor[(180), float32] {
  @func_2016() /* ty=Tensor[(180), float32] */
}

def @func_1667(%var_1647: Tensor[(180), float32]) -> (Tensor[(16, 14, 11), float64], Tensor[(15, 14, 13), float32], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16]) {
  %363 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
  %364 = cast(meta[relay.Constant][20] /* ty=Tensor[(2730), float32] */, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %365 = cast(meta[relay.Constant][20] /* ty=Tensor[(2730), float32] */, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %366 = cast(%var_1647, dtype="float32") /* ty=Tensor[(180), float32] */;
  %367 = reshape(%364, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float32] */;
  %368 = reshape(%365, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float32] */;
  %369 = reshape(%366, newshape=[90, 2]) /* ty=Tensor[(90, 2), float32] */;
  %370 = @func_794(%367, %368, %369) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), int32], Tensor[(5, 12, 3), float64], Tensor[(90, 2), float32], Tensor[(15, 14, 13), float32]) */;
  %371 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %372 = %370.4;
  %373 = cast(%372, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
  %374 = reshape(%373, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
  %375 = @func_1538(%374) /* ty=(Tensor[(15, 14, 13), bool], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16]) */;
  %376 = %375.2;
  %377 = cast(%376, dtype="uint16") /* ty=Tensor[(384), uint16] */;
  %378 = reshape(%377, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
  %379 = %363.3;
  %380 = %371.0;
  %381 = @func_34(%378) /* ty=Tensor[(16, 12, 2), uint16] */;
  (%379, %372, meta[relay.Constant][20] /* ty=Tensor[(2730), float32] */, %var_1647, %380, %376, %381)
}

def @func_4637(%var_4629: Tensor[(10, 9, 7), uint16], %var_4630: Tensor[(10, 9, 7), uint16]) -> (Tensor[(10, 9, 7), uint16],) {
  %382 = cast(%var_4630, dtype="uint16") /* ty=Tensor[(10, 9, 7), uint16] */;
  %383 = shape_of(%var_4629, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%var_4629, dtype="uint16") /* ty=Tensor[(10, 9, 7), uint16] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %386 = logical_xor(%384, %385) /* ty=Tensor[(10, 9, 7), uint16] */;
  (%386,)
}

def @func_3146() -> Tensor[(15, 14, 13), float64] {
  @func_3144() /* ty=Tensor[(15, 14, 13), float64] */
}

def @func_1785() -> (Tensor[(15, 14, 13), float32], Tensor[(15, 14, 13), float64]) {
  @func_1783() /* ty=(Tensor[(15, 14, 13), float32], Tensor[(15, 14, 13), float64]) */
}

def @func_4889(%var_4884: Tensor[(15, 14, 13), float64], %var_4885: Tensor[(3150), float64], %var_4886: Tensor[(30), int8], %var_4887: Tensor[(1200), int16], %var_4888: Tensor[(6, 30), float32]) -> (Tensor[(15, 14, 13), bool], Tensor[(15, 14, 13), uint64], Tensor[(15, 14, 13), float32], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2, 600), int16], Tensor[(30), int8], Tensor[(1200), int16], Tensor[(8, 4, 5), float32], Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(6, 30), float32], Tensor[(14, 15, 15), bool], Tensor[(9, 6), uint64], Tensor[(14, 15, 15), uint16], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(1404), bool], Tensor[(14, 15, 15), float64]) {
  @func_4882(%var_4884, %var_4885, %var_4886, %var_4887, %var_4888) /* ty=(Tensor[(15, 14, 13), bool], Tensor[(15, 14, 13), uint64], Tensor[(15, 14, 13), float32], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2, 600), int16], Tensor[(30), int8], Tensor[(1200), int16], Tensor[(8, 4, 5), float32], Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(6, 30), float32], Tensor[(14, 15, 15), bool], Tensor[(9, 6), uint64], Tensor[(14, 15, 15), uint16], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(1404), bool], Tensor[(14, 15, 15), float64]) */
}

def @func_4216() -> Tensor[(15, 14, 13), float64] {
  @func_4214() /* ty=Tensor[(15, 14, 13), float64] */
}

def @func_5174() -> Tensor[(2730), float32] {
  @func_4137() /* ty=Tensor[(2730), float32] */
}

def @func_3764(%var_3762: Tensor[(2730), float32]) -> Tensor[(2730), float32] {
  @func_3761(%var_3762) /* ty=Tensor[(2730), float32] */
}

def @func_295(%var_251: Tensor[(16, 13, 5), int64], %var_258: Tensor[(1, 3150), float64]) -> (Tensor[(16, 13, 5), int64], Tensor[(16, 12, 2), uint16], Tensor[(1, 3150), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(14, 15, 15), int64]) {
  %387 = cast(%var_251, dtype="int64") /* ty=Tensor[(16, 13, 5), int64] */;
  %388 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(16, 13, 5), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 13, 5), int64] */, dtype="int64") /* ty=Tensor[(16, 13, 5), int64] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %391 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %392 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %393 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %394 = reshape(%391, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %395 = reshape(%392, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %396 = reshape(%393, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %397 = @func_136(%394, %395, %396) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */;
  %398 = %397.4;
  %399 = cast(%398, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
  %400 = reshape(%399, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
  %401 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %402 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %403 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %404 = reshape(%401, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %405 = reshape(%402, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %406 = reshape(%403, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %407 = @func_136(%404, %405, %406) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */;
  %408 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %409 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %410 = cast(%var_258, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
  %411 = reshape(%408, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %412 = reshape(%409, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %413 = reshape(%410, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %414 = @func_136(%411, %412, %413) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */;
  %415 = right_shift(%389, %390) /* ty=Tensor[(16, 13, 5), int64] */;
  %416 = @func_34(%400) /* ty=Tensor[(16, 12, 2), uint16] */;
  %417 = %407.7;
  %418 = %414.5;
  (%415, %398, %var_258, %416, %417, %418)
}

def @func_1448() -> (Tensor[(15, 14, 13), float64],) {
  @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */
}

def @func_3059() -> (Tensor[(8, 4, 5), float32],) {
  %421 = fn () -> (Tensor[(8, 4, 5), float32],) {
    %419 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 4, 5), float32] */, dtype="float32") /* ty=Tensor[(8, 4, 5), float32] */;
    %420 = tan(%419) /* ty=Tensor[(8, 4, 5), float32] */;
    (%420,)
  };
  %421() /* ty=(Tensor[(8, 4, 5), float32],) */
}

def @func_5632() -> (Tensor[(8, 4, 5), float32],) {
  @func_5630() /* ty=(Tensor[(8, 4, 5), float32],) */
}

def @func_2548() -> (Tensor[(13, 9, 12), bool], Tensor[(180), float32], Tensor[(180), float32], Tensor[(13, 9, 12), int32]) {
  %443 = fn () -> (Tensor[(13, 9, 12), bool], Tensor[(180), float32], Tensor[(180), float32], Tensor[(13, 9, 12), int32]) {
    %422 = @func_2455() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %423 = %422.0;
    %424 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 9, 12), float32] */, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
    %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(3), int32] */;
    %426 = cast(%423, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
    %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %428 = cast(meta[relay.Constant][24] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %429 = reshape(%428, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %430 = @func_1667(%429) /* ty=(Tensor[(16, 14, 11), float64], Tensor[(15, 14, 13), float32], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16]) */;
    %431 = cast(%423, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
    %432 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(13, 9, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %433 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 9, 12), float32] */, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
    %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %435 = logical_and(%433, %434) /* ty=Tensor[(13, 9, 12), bool] */;
    %436 = cast(%423, dtype="int32") /* ty=Tensor[(13, 9, 12), int32] */;
    %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
    %438 = cast(%435, dtype="int32") /* ty=Tensor[(13, 9, 12), int32] */;
    %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %440 = logical_or(%426, %427) /* ty=Tensor[(13, 9, 12), bool] */;
    %441 = %430.3;
    %442 = left_shift(%438, %439) /* ty=Tensor[(13, 9, 12), int32] */;
    (%440, %441, meta[relay.Constant][24] /* ty=Tensor[(180), float32] */, %442)
  };
  %443() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(180), float32], Tensor[(180), float32], Tensor[(13, 9, 12), int32]) */
}

def @func_5025() -> Tensor[(13, 9, 12), float32] {
  %445 = fn () -> Tensor[(13, 9, 12), float32] {
    %444 = @func_4569() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %444.0
  };
  %445() /* ty=Tensor[(13, 9, 12), float32] */
}

def @func_511(%var_506: Tensor[(3, 4, 5), float64]) -> (Tensor[(3, 4, 5), float64],) {
  %446 = cast(%var_506, dtype="float64") /* ty=Tensor[(3, 4, 5), float64] */;
  %447 = asin(%446) /* ty=Tensor[(3, 4, 5), float64] */;
  (%447,)
}

def @func_140(%var_137: Tensor[(14, 15, 15), float64], %var_138: Tensor[(14, 15, 15), float64], %var_139: Tensor[(14, 15, 15), float64]) -> (Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) {
  %493 = fn (%var_38: Tensor[(14, 15, 15), float64], %var_39: Tensor[(14, 15, 15), float64], %var_90: Tensor[(14, 15, 15), float64]) -> (Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) {
    %448 = cast(%var_39, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
    %449 = shape_of(%var_38, dtype="int32") /* ty=Tensor[(3), int32] */;
    %450 = cast(%var_38, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
    %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %452 = cast(meta[relay.Constant][25] /* ty=Tensor[(384), uint16] */, dtype="uint16") /* ty=Tensor[(384), uint16] */;
    %453 = reshape(%452, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
    %454 = @func_34(%453) /* ty=Tensor[(16, 12, 2), uint16] */;
    %455 = cast(%454, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
    %456 = reshape(%455, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
    %457 = cast(%454, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
    %458 = reshape(%457, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
    %459 = cast(%var_38, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
    %460 = cos(%459) /* ty=Tensor[(14, 15, 15), float64] */;
    %461 = cast(%var_39, dtype="int64") /* ty=Tensor[(14, 15, 15), int64] */;
    %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(3), int32] */;
    %463 = cast(%460, dtype="int64") /* ty=Tensor[(14, 15, 15), int64] */;
    %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %465 = cast(%454, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
    %466 = reshape(%465, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
    %467 = cast(%var_39, dtype="float64") /* ty=Tensor[(14, 15, 15), float64] */;
    %468 = cast(%454, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
    %469 = reshape(%468, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
    %470 = cast(%var_90, dtype="int8") /* ty=Tensor[(14, 15, 15), int8] */;
    %471 = shape_of(%460, dtype="int32") /* ty=Tensor[(3), int32] */;
    %472 = cast(%460, dtype="int8") /* ty=Tensor[(14, 15, 15), int8] */;
    %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %474 = @func_34(%456) /* ty=Tensor[(16, 12, 2), uint16] */;
    %475 = cast(%474, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
    %476 = reshape(%475, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
    %477 = cast(%460, dtype="bool") /* ty=Tensor[(14, 15, 15), bool] */;
    %478 = shape_of(%var_90, dtype="int32") /* ty=Tensor[(3), int32] */;
    %479 = cast(%var_90, dtype="bool") /* ty=Tensor[(14, 15, 15), bool] */;
    %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %481 = @func_34(%476) /* ty=Tensor[(16, 12, 2), uint16] */;
    %482 = cast(%481, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
    %483 = reshape(%482, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
    %484 = mod(%450, %451) /* ty=Tensor[(14, 15, 15), float64] */;
    %485 = @func_34(%458) /* ty=Tensor[(16, 12, 2), uint16] */;
    %486 = logical_xor(%463, %464) /* ty=Tensor[(14, 15, 15), int64] */;
    %487 = @func_34(%466) /* ty=Tensor[(16, 12, 2), uint16] */;
    %488 = tan(%467) /* ty=Tensor[(14, 15, 15), float64] */;
    %489 = @func_34(%469) /* ty=Tensor[(16, 12, 2), uint16] */;
    %490 = bitwise_xor(%472, %473) /* ty=Tensor[(14, 15, 15), int8] */;
    %491 = greater(%479, %480) /* ty=Tensor[(14, 15, 15), bool] */;
    %492 = @func_34(%483) /* ty=Tensor[(16, 12, 2), uint16] */;
    (%484, %454, meta[relay.Constant][25] /* ty=Tensor[(384), uint16] */, %474, %485, %486, %487, %488, %489, %490, %481, %491, %492)
  };
  %493(%var_137, %var_138, %var_139) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */
}

def @func_3234() -> (Tensor[(15, 14, 13), float64], Tensor[(8, 4, 5), float64]) {
  @func_3232() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(8, 4, 5), float64]) */
}

def @func_36(%var_35: Tensor[(16, 12, 2), uint16]) -> Tensor[(16, 12, 2), uint16] {
  %498 = fn (%var_26: Tensor[(16, 12, 2), uint16]) -> Tensor[(16, 12, 2), uint16] {
    %494 = cast(%var_26, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
    %495 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(16, 12, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %496 = cast(meta[relay.Constant][26] /* ty=Tensor[(16, 12, 2), uint16] */, dtype="uint16") /* ty=Tensor[(16, 12, 2), uint16] */;
    %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    logical_xor(%496, %497) /* ty=Tensor[(16, 12, 2), uint16] */
  };
  %498(%var_35) /* ty=Tensor[(16, 12, 2), uint16] */
}

def @func_3319(%var_3318: Tensor[(2730), float32]) -> Tensor[(2730), int8] {
  %504 = fn (%var_3304: Tensor[(2730), float32]) -> Tensor[(2730), int8] {
    %499 = @func_2302() /* ty=Tensor[(2730), float32] */;
    %500 = cast(%var_3304, dtype="int8") /* ty=Tensor[(2730), int8] */;
    %501 = shape_of(%499, dtype="int32") /* ty=Tensor[(1), int32] */;
    %502 = cast(%499, dtype="int8") /* ty=Tensor[(2730), int8] */;
    %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?), int8] */;
    bitwise_xor(%502, %503) /* ty=Tensor[(2730), int8] */
  };
  %504(%var_3318) /* ty=Tensor[(2730), int8] */
}

def @func_1446() -> (Tensor[(15, 14, 13), float64],) {
  %505 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
  %506 = %505.0;
  (%506,)
}

def @func_3965() -> (Tensor[(15, 14, 13), float64],) {
  %509 = fn () -> (Tensor[(15, 14, 13), float64],) {
    %507 = @func_1619() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(16, 12, 2), uint16]) */;
    %508 = %507.0;
    (%508,)
  };
  %509() /* ty=(Tensor[(15, 14, 13), float64],) */
}

def @func_4300(%var_4240: Tensor[(180), float32], %var_4253: Tensor[(1200), int16], %var_4271: Tensor[(1040), int64]) -> (Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), uint16], Tensor[(1200), int16], Tensor[(15, 14, 13), float64], Tensor[(1404), float32], Tensor[(1040), int64], Tensor[(15, 14, 13), float64]) {
  %510 = @func_1783() /* ty=(Tensor[(15, 14, 13), float32], Tensor[(15, 14, 13), float64]) */;
  %511 = cast(%var_4240, dtype="float32") /* ty=Tensor[(180), float32] */;
  %512 = reshape(%511, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %513 = @func_3690(%512) /* ty=(Tensor[(2730), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32]) */;
  %514 = cast(%var_4253, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %515 = reshape(%514, newshape=[1200]) /* ty=Tensor[(1200), int16] */;
  %516 = @func_3412(%515) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(15, 14, 13), uint16], Tensor[(5, 16, 15), float32]) */;
  %517 = cast(meta[relay.Constant][27] /* ty=Tensor[(1404), float32] */, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %518 = cast(%var_4271, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %519 = reshape(%517, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), float32] */;
  %520 = reshape(%518, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
  %521 = @func_3923(%519, %520) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(13, 9, 12), float32]) */;
  %522 = %510.1;
  %523 = %513.0;
  %524 = %516.2;
  %525 = %521.1;
  %526 = @func_2643() /* ty=Tensor[(15, 14, 13), float64] */;
  (%522, %523, %var_4240, %524, %var_4253, %525, meta[relay.Constant][27] /* ty=Tensor[(1404), float32] */, %var_4271, %526)
}

def @func_4641(%var_4639: Tensor[(10, 9, 7), uint16], %var_4640: Tensor[(10, 9, 7), uint16]) -> (Tensor[(10, 9, 7), uint16],) {
  @func_4637(%var_4639, %var_4640) /* ty=(Tensor[(10, 9, 7), uint16],) */
}

def @func_4607(%var_4605: Tensor[(7, 3, 4), float32]) -> (Tensor[(7, 3, 4), float32],) {
  @func_4604(%var_4605) /* ty=(Tensor[(7, 3, 4), float32],) */
}

def @func_1437() -> Tensor[(15, 14, 13), float64] {
  %527 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
  %527.0
}

def @func_620(%var_609: Tensor[(8, 4, 4), float64]) -> Tensor[(8, 4, 4), uint8] {
  %528 = cast(%var_609, dtype="float64") /* ty=Tensor[(8, 4, 4), float64] */;
  %529 = atanh(%528) /* ty=Tensor[(8, 4, 4), float64] */;
  %530 = cast(%var_609, dtype="uint8") /* ty=Tensor[(8, 4, 4), uint8] */;
  %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(%529, dtype="uint8") /* ty=Tensor[(8, 4, 4), uint8] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  logical_xor(%532, %533) /* ty=Tensor[(8, 4, 4), uint8] */
}

def @func_5054() -> (Tensor[(13, 9, 12), float32],) {
  @func_5052() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_3692(%var_3691: Tensor[(180), float32]) -> (Tensor[(2730), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32]) {
  %540 = fn (%var_3686: Tensor[(180), float32]) -> (Tensor[(2730), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32]) {
    %534 = @func_2138() /* ty=(Tensor[(2730), float32],) */;
    %535 = cast(%var_3686, dtype="float32") /* ty=Tensor[(180), float32] */;
    %536 = reshape(%535, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %537 = @func_1667(%536) /* ty=(Tensor[(16, 14, 11), float64], Tensor[(15, 14, 13), float32], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16]) */;
    %538 = %534.0;
    %539 = %537.0;
    (%538, %539, %var_3686)
  };
  %540(%var_3691) /* ty=(Tensor[(2730), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32]) */
}

def @func_1891(%var_1861: Tensor[(9, 2, 3), uint64], %var_1867: Tensor[(9, 2, 3), uint64]) -> (Tensor[(9, 2, 3), float32], Tensor[(14, 15, 15), bool], Tensor[(225, 14), float64]) {
  %541 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 2, 3), uint64] */, dtype="uint64") /* ty=Tensor[(9, 2, 3), uint64] */;
  %542 = shape_of(%var_1861, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%var_1861, dtype="uint64") /* ty=Tensor[(9, 2, 3), uint64] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %545 = logical_xor(%543, %544) /* ty=Tensor[(9, 2, 3), uint64] */;
  %546 = cast(%var_1867, dtype="float32") /* ty=Tensor[(9, 2, 3), float32] */;
  %547 = shape_of(%545, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(%545, dtype="float32") /* ty=Tensor[(9, 2, 3), float32] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %550 = cast(meta[relay.Constant][29] /* ty=Tensor[(225, 14), float64] */, dtype="float64") /* ty=Tensor[(225, 14), float64] */;
  %551 = cast(meta[relay.Constant][29] /* ty=Tensor[(225, 14), float64] */, dtype="float64") /* ty=Tensor[(225, 14), float64] */;
  %552 = cast(meta[relay.Constant][29] /* ty=Tensor[(225, 14), float64] */, dtype="float64") /* ty=Tensor[(225, 14), float64] */;
  %553 = reshape(%550, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %554 = reshape(%551, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %555 = reshape(%552, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), float64] */;
  %556 = @func_136(%553, %554, %555) /* ty=(Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), int8], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), bool], Tensor[(16, 12, 2), uint16]) */;
  %557 = power(%548, %549) /* ty=Tensor[(9, 2, 3), float32] */;
  %558 = %556.11;
  (%557, %558, meta[relay.Constant][29] /* ty=Tensor[(225, 14), float64] */)
}

def @func_2213() -> (Tensor[(10, 7, 7), float32],) {
  @func_2211() /* ty=(Tensor[(10, 7, 7), float32],) */
}

def @func_1620() -> (Tensor[(15, 14, 13), float64], Tensor[(16, 12, 2), uint16]) {
  %564 = fn () -> (Tensor[(15, 14, 13), float64], Tensor[(16, 12, 2), uint16]) {
    %559 = @func_1437() /* ty=Tensor[(15, 14, 13), float64] */;
    %560 = cast(%559, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
    %561 = reshape(%560, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
    %562 = @func_1538(%561) /* ty=(Tensor[(15, 14, 13), bool], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16]) */;
    %563 = %562.1;
    (%559, %563)
  };
  %564() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(16, 12, 2), uint16]) */
}

def @func_2016() -> Tensor[(180), float32] {
  %565 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
  %565.2
}

def @func_514(%var_512: Tensor[(3, 4, 5), float64]) -> (Tensor[(3, 4, 5), float64],) {
  @func_511(%var_512) /* ty=(Tensor[(3, 4, 5), float64],) */
}

def @func_6150() -> (Tensor[(10, 7, 7), float32],) {
  %568 = fn () -> (Tensor[(10, 7, 7), float32],) {
    %566 = @func_2211() /* ty=(Tensor[(10, 7, 7), float32],) */;
    %567 = %566.0;
    (%567,)
  };
  %568() /* ty=(Tensor[(10, 7, 7), float32],) */
}

def @func_2589() -> (Tensor[(16, 12, 2), uint16], Tensor[(2730), float32], Tensor[(180), float32]) {
  @func_2587() /* ty=(Tensor[(16, 12, 2), uint16], Tensor[(2730), float32], Tensor[(180), float32]) */
}

def @func_1407() -> (Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) {
  @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */
}

def @func_5726() -> Tensor[(13, 9, 12), float64] {
  %584 = fn () -> Tensor[(13, 9, 12), float64] {
    %569 = @func_3664() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(2730), float32], Tensor[(8, 4, 4), uint8], Tensor[(8, 16), float64], Tensor[(8, 4, 5), float64], Tensor[(15, 14, 13), float64]) */;
    %570 = %569.0;
    %571 = cast(%570, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
    %572 = tan(%571) /* ty=Tensor[(13, 9, 12), float64] */;
    %573 = @func_4569() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %574 = %573.0;
    %575 = cast(%574, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
    %576 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
    %577 = cast(%572, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
    %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %579 = add(%577, %578) /* ty=Tensor[(13, 9, 12), float64] */;
    %580 = cast(%579, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
    %581 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
    %582 = cast(%572, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
    %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_divide(%582, %583) /* ty=Tensor[(13, 9, 12), float64] */
  };
  %584() /* ty=Tensor[(13, 9, 12), float64] */
}

def @func_1540(%var_1539: Tensor[(15, 14, 13), float64]) -> (Tensor[(15, 14, 13), bool], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16]) {
  %595 = fn (%var_1523: Tensor[(15, 14, 13), float64]) -> (Tensor[(15, 14, 13), bool], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16]) {
    %585 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
    %586 = %585.0;
    %587 = cast(%var_1523, dtype="bool") /* ty=Tensor[(15, 14, 13), bool] */;
    %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
    %589 = cast(%586, dtype="bool") /* ty=Tensor[(15, 14, 13), bool] */;
    %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %591 = cast(meta[relay.Constant][30] /* ty=Tensor[(384), uint16] */, dtype="uint16") /* ty=Tensor[(384), uint16] */;
    %592 = reshape(%591, newshape=[16, 12, 2]) /* ty=Tensor[(16, 12, 2), uint16] */;
    %593 = logical_and(%589, %590) /* ty=Tensor[(15, 14, 13), bool] */;
    %594 = @func_34(%592) /* ty=Tensor[(16, 12, 2), uint16] */;
    (%593, %594, meta[relay.Constant][30] /* ty=Tensor[(384), uint16] */)
  };
  %595(%var_1539) /* ty=(Tensor[(15, 14, 13), bool], Tensor[(16, 12, 2), uint16], Tensor[(384), uint16]) */
}

def @func_4570() -> (Tensor[(13, 9, 12), float32],) {
  %598 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %596 = @func_2455() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %597 = %596.0;
    (%597,)
  };
  %598() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_3299(%var_3297: Tensor[(1404), bool], %var_3298: Tensor[(40, 26), int64]) -> (Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1404), bool], Tensor[(40, 26), int64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(?, 3150), uint16]) {
  %631 = fn (%var_3281: Tensor[(1404), bool], %var_3282: Tensor[(40, 26), int64]) -> (Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1404), bool], Tensor[(40, 26), int64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(?, 3150), uint16]) {
    %599 = @func_1783() /* ty=(Tensor[(15, 14, 13), float32], Tensor[(15, 14, 13), float64]) */;
    %600 = %599.1;
    %601 = cast(%600, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
    %602 = cos(%601) /* ty=Tensor[(15, 14, 13), float64] */;
    %603 = cast(%602, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
    %604 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
    %605 = cast(%600, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
    %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %607 = @func_2138() /* ty=(Tensor[(2730), float32],) */;
    %608 = cast(%var_3281, dtype="bool") /* ty=Tensor[(1404), bool] */;
    %609 = cast(%var_3282, dtype="int64") /* ty=Tensor[(40, 26), int64] */;
    %610 = %607.0;
    %611 = cast(%610, dtype="float64") /* ty=Tensor[(2730), float64] */;
    %612 = reshape(%608, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), bool] */;
    %613 = reshape(%609, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
    %614 = reshape(%611, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
    %615 = @func_2902(%612, %613, %614) /* ty=(Tensor[(13, 9, 12), int64], Tensor[(16, 12, 2), uint16], Tensor[(15, 14, 13), float64], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(4, 300), int16], Tensor[(16, 13, 5), int64], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2730), float32], Tensor[(15, 14, 13), int16], Tensor[(15, 14, 13), float32]) */;
    %616 = cast(%var_3281, dtype="bool") /* ty=Tensor[(1404), bool] */;
    %617 = cast(%var_3282, dtype="int64") /* ty=Tensor[(40, 26), int64] */;
    %618 = cast(%600, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
    %619 = reshape(%616, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), bool] */;
    %620 = reshape(%617, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
    %621 = reshape(%618, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
    %622 = @func_2902(%619, %620, %621) /* ty=(Tensor[(13, 9, 12), int64], Tensor[(16, 12, 2), uint16], Tensor[(15, 14, 13), float64], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(4, 300), int16], Tensor[(16, 13, 5), int64], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2730), float32], Tensor[(15, 14, 13), int16], Tensor[(15, 14, 13), float32]) */;
    %623 = %622.8;
    %624 = cast(%623, dtype="int64") /* ty=Tensor[(1040), int64] */;
    %625 = reshape(%624, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
    %626 = @func_1744(%625) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(1, 3150), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32], Tensor[(?, 3150), uint16], Tensor[(15, 14, 13), float64]) */;
    %627 = divide(%605, %606) /* ty=Tensor[(15, 14, 13), float64] */;
    %628 = %615.5;
    %629 = @func_1437() /* ty=Tensor[(15, 14, 13), float64] */;
    %630 = %626.5;
    (%627, %610, %628, %var_3281, %var_3282, %629, %623, %630)
  };
  %631(%var_3297, %var_3298) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1404), bool], Tensor[(40, 26), int64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(?, 3150), uint16]) */
}

def @func_1937() -> (Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), uint16], Tensor[(2730), float64]) {
  @func_1935() /* ty=(Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), uint16], Tensor[(2730), float64]) */
}

def @func_4305(%var_4302: Tensor[(180), float32], %var_4303: Tensor[(1200), int16], %var_4304: Tensor[(1040), int64]) -> (Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), uint16], Tensor[(1200), int16], Tensor[(15, 14, 13), float64], Tensor[(1404), float32], Tensor[(1040), int64], Tensor[(15, 14, 13), float64]) {
  @func_4300(%var_4302, %var_4303, %var_4304) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), uint16], Tensor[(1200), int16], Tensor[(15, 14, 13), float64], Tensor[(1404), float32], Tensor[(1040), int64], Tensor[(15, 14, 13), float64]) */
}

def @func_2906(%var_2903: Tensor[(13, 9, 12), bool], %var_2904: Tensor[(1040), int64], %var_2905: Tensor[(15, 14, 13), float64]) -> (Tensor[(13, 9, 12), int64], Tensor[(16, 12, 2), uint16], Tensor[(15, 14, 13), float64], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(4, 300), int16], Tensor[(16, 13, 5), int64], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2730), float32], Tensor[(15, 14, 13), int16], Tensor[(15, 14, 13), float32]) {
  %674 = fn (%var_2825: Tensor[(13, 9, 12), bool], %var_2874: Tensor[(1040), int64], %var_2889: Tensor[(15, 14, 13), float64]) -> (Tensor[(13, 9, 12), int64], Tensor[(16, 12, 2), uint16], Tensor[(15, 14, 13), float64], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(4, 300), int16], Tensor[(16, 13, 5), int64], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2730), float32], Tensor[(15, 14, 13), int16], Tensor[(15, 14, 13), float32]) {
    %632 = @func_2547() /* ty=(Tensor[(13, 9, 12), bool], Tensor[(180), float32], Tensor[(180), float32], Tensor[(13, 9, 12), int32]) */;
    %633 = %632.0;
    %634 = cast(%var_2825, dtype="int64") /* ty=Tensor[(13, 9, 12), int64] */;
    %635 = shape_of(%633, dtype="int32") /* ty=Tensor[(3), int32] */;
    %636 = cast(%633, dtype="int64") /* ty=Tensor[(13, 9, 12), int64] */;
    %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %638 = @func_1619() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(16, 12, 2), uint16]) */;
    %639 = @func_1985() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64]) */;
    %640 = @func_2211() /* ty=(Tensor[(10, 7, 7), float32],) */;
    %641 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 300), int16] */, dtype="int16") /* ty=Tensor[(4, 300), int16] */;
    %642 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 300), int16] */, dtype="int16") /* ty=Tensor[(4, 300), int16] */;
    %643 = reshape(%641, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
    %644 = reshape(%642, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
    %645 = @func_2170(%643, %644) /* ty=(Tensor[(5, 16, 15), bool], Tensor[(2730), float32], Tensor[(180), float32]) */;
    %646 = cast(%var_2874, dtype="int64") /* ty=Tensor[(1040), int64] */;
    %647 = cast(meta[relay.Constant][32] /* ty=Tensor[(3150), float64] */, dtype="float64") /* ty=Tensor[(3150), float64] */;
    %648 = reshape(%646, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
    %649 = reshape(%647, newshape=[1, 3150]) /* ty=Tensor[(1, 3150), float64] */;
    %650 = @func_295(%648, %649) /* ty=(Tensor[(16, 13, 5), int64], Tensor[(16, 12, 2), uint16], Tensor[(1, 3150), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(14, 15, 15), int64]) */;
    %651 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
    %652 = @func_2086() /* ty=Tensor[(15, 14, 13), float64] */;
    %653 = cast(%652, dtype="float64") /* ty=Tensor[(15, 14, 13), float64] */;
    %654 = sqrt(%653) /* ty=Tensor[(15, 14, 13), float64] */;
    %655 = cast(%var_2889, dtype="int16") /* ty=Tensor[(15, 14, 13), int16] */;
    %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
    %657 = cast(%654, dtype="int16") /* ty=Tensor[(15, 14, 13), int16] */;
    %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %659 = @func_2643() /* ty=Tensor[(15, 14, 13), float64] */;
    %660 = cast(%659, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
    %661 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
    %662 = cast(%654, dtype="float32") /* ty=Tensor[(15, 14, 13), float32] */;
    %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %664 = bitwise_and(%636, %637) /* ty=Tensor[(13, 9, 12), int64] */;
    %665 = %638.1;
    %666 = %639.0;
    %667 = %640.0;
    %668 = @func_2643() /* ty=Tensor[(15, 14, 13), float64] */;
    %669 = %645.2;
    %670 = %650.0;
    %671 = %651.1;
    %672 = minimum(%657, %658) /* ty=Tensor[(15, 14, 13), int16] */;
    %673 = floor_mod(%662, %663) /* ty=Tensor[(15, 14, 13), float32] */;
    (%664, %665, %666, %667, %668, %669, meta[relay.Constant][31] /* ty=Tensor[(4, 300), int16] */, %670, %var_2874, meta[relay.Constant][32] /* ty=Tensor[(3150), float64] */, %671, %672, %673)
  };
  %674(%var_2903, %var_2904, %var_2905) /* ty=(Tensor[(13, 9, 12), int64], Tensor[(16, 12, 2), uint16], Tensor[(15, 14, 13), float64], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(4, 300), int16], Tensor[(16, 13, 5), int64], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2730), float32], Tensor[(15, 14, 13), int16], Tensor[(15, 14, 13), float32]) */
}

def @func_5347() -> (Tensor[(15, 14, 13), float64],) {
  @func_5345() /* ty=(Tensor[(15, 14, 13), float64],) */
}

def @func_2087() -> Tensor[(15, 14, 13), float64] {
  %675 = fn () -> Tensor[(15, 14, 13), float64] {
    @func_1437() /* ty=Tensor[(15, 14, 13), float64] */
  };
  %675() /* ty=Tensor[(15, 14, 13), float64] */
}

def @func_3665() -> (Tensor[(13, 9, 12), float32], Tensor[(2730), float32], Tensor[(8, 4, 4), uint8], Tensor[(8, 16), float64], Tensor[(8, 4, 5), float64], Tensor[(15, 14, 13), float64]) {
  %686 = fn () -> (Tensor[(13, 9, 12), float32], Tensor[(2730), float32], Tensor[(8, 4, 4), uint8], Tensor[(8, 16), float64], Tensor[(8, 4, 5), float64], Tensor[(15, 14, 13), float64]) {
    %676 = @func_2455() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %677 = @func_3336() /* ty=(Tensor[(2730), float32],) */;
    %678 = cast(meta[relay.Constant][33] /* ty=Tensor[(8, 16), float64] */, dtype="float64") /* ty=Tensor[(8, 16), float64] */;
    %679 = reshape(%678, newshape=[8, 4, 4]) /* ty=Tensor[(8, 4, 4), float64] */;
    %680 = @func_3232() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(8, 4, 5), float64]) */;
    %681 = %676.0;
    %682 = %677.0;
    %683 = @func_620(%679) /* ty=Tensor[(8, 4, 4), uint8] */;
    %684 = %680.1;
    %685 = @func_2643() /* ty=Tensor[(15, 14, 13), float64] */;
    (%681, %682, %683, meta[relay.Constant][33] /* ty=Tensor[(8, 16), float64] */, %684, %685)
  };
  %686() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(2730), float32], Tensor[(8, 4, 4), uint8], Tensor[(8, 16), float64], Tensor[(8, 4, 5), float64], Tensor[(15, 14, 13), float64]) */
}

def @func_4183(%var_4181: Tensor[(11, 16, 16), float64]) -> Tensor[(11, 16, 16), float64] {
  @func_4180(%var_4181) /* ty=Tensor[(11, 16, 16), float64] */
}

def @func_3232() -> (Tensor[(15, 14, 13), float64], Tensor[(8, 4, 5), float64]) {
  %687 = @func_3058() /* ty=(Tensor[(8, 4, 5), float32],) */;
  %688 = %687.0;
  %689 = cast(%688, dtype="float64") /* ty=Tensor[(8, 4, 5), float64] */;
  %690 = @func_1437() /* ty=Tensor[(15, 14, 13), float64] */;
  %691 = asin(%689) /* ty=Tensor[(8, 4, 5), float64] */;
  (%690, %691)
}

def @func_1603(%var_1591: Tensor[(15, 14, 13), float64]) -> (Tensor[(15, 14, 13), uint16],) {
  %692 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %693 = %692.0;
  %694 = cast(%var_1591, dtype="uint16") /* ty=Tensor[(15, 14, 13), uint16] */;
  %695 = shape_of(%693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %696 = cast(%693, dtype="uint16") /* ty=Tensor[(15, 14, 13), uint16] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %698 = left_shift(%696, %697) /* ty=Tensor[(15, 14, 13), uint16] */;
  (%698,)
}

def @func_4214() -> Tensor[(15, 14, 13), float64] {
  @func_3144() /* ty=Tensor[(15, 14, 13), float64] */
}

def @func_5261(%var_5257: Tensor[(180), float32], %var_5258: Tensor[(1404), bool], %var_5259: Tensor[(2, 520), int64], %var_5260: Tensor[(3, 14, 14), float32]) -> (Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1200), int16], Tensor[(180), float32], Tensor[(384), uint16], Tensor[(3150), float64], Tensor[(16, 13, 5), int64], Tensor[(1404), bool], Tensor[(2, 520), int64], Tensor[(3, 14, 14), bool]) {
  %726 = fn (%var_5215: Tensor[(180), float32], %var_5224: Tensor[(1404), bool], %var_5225: Tensor[(2, 520), int64], %var_5228: Tensor[(3, 14, 14), float32]) -> (Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1200), int16], Tensor[(180), float32], Tensor[(384), uint16], Tensor[(3150), float64], Tensor[(16, 13, 5), int64], Tensor[(1404), bool], Tensor[(2, 520), int64], Tensor[(3, 14, 14), bool]) {
    %699 = @func_3336() /* ty=(Tensor[(2730), float32],) */;
    %700 = cast(meta[relay.Constant][34] /* ty=Tensor[(1200), int16] */, dtype="int16") /* ty=Tensor[(1200), int16] */;
    %701 = cast(%var_5215, dtype="float32") /* ty=Tensor[(180), float32] */;
    %702 = cast(meta[relay.Constant][35] /* ty=Tensor[(384), uint16] */, dtype="uint16") /* ty=Tensor[(384), uint16] */;
    %703 = cast(meta[relay.Constant][36] /* ty=Tensor[(3150), float64] */, dtype="float64") /* ty=Tensor[(3150), float64] */;
    %704 = reshape(%700, newshape=[2, 600]) /* ty=Tensor[(2, 600), int16] */;
    %705 = reshape(%701, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %706 = reshape(%702, newshape=[384]) /* ty=Tensor[(384), uint16] */;
    %707 = reshape(%703, newshape=[1575, 2]) /* ty=Tensor[(1575, 2), float64] */;
    %708 = @func_3571(%704, %705, %706, %707) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(2, 600), float32], Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1200), int16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(1575, 2), float64]) */;
    %709 = cast(%var_5224, dtype="bool") /* ty=Tensor[(1404), bool] */;
    %710 = cast(%var_5225, dtype="int64") /* ty=Tensor[(2, 520), int64] */;
    %711 = %699.0;
    %712 = cast(%711, dtype="float64") /* ty=Tensor[(2730), float64] */;
    %713 = reshape(%709, newshape=[13, 9, 12]) /* ty=Tensor[(13, 9, 12), bool] */;
    %714 = reshape(%710, newshape=[1040]) /* ty=Tensor[(1040), int64] */;
    %715 = reshape(%712, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
    %716 = @func_2902(%713, %714, %715) /* ty=(Tensor[(13, 9, 12), int64], Tensor[(16, 12, 2), uint16], Tensor[(15, 14, 13), float64], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(4, 300), int16], Tensor[(16, 13, 5), int64], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2730), float32], Tensor[(15, 14, 13), int16], Tensor[(15, 14, 13), float32]) */;
    %717 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 14, 14), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 14), float32] */;
    %718 = erf(%717) /* ty=Tensor[(3, 14, 14), float32] */;
    %719 = cast(%var_5228, dtype="bool") /* ty=Tensor[(3, 14, 14), bool] */;
    %720 = shape_of(%718, dtype="int32") /* ty=Tensor[(3), int32] */;
    %721 = cast(%718, dtype="bool") /* ty=Tensor[(3, 14, 14), bool] */;
    %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %723 = %708.5;
    %724 = %716.7;
    %725 = greater_equal(%721, %722) /* ty=Tensor[(3, 14, 14), bool] */;
    (%711, %723, meta[relay.Constant][34] /* ty=Tensor[(1200), int16] */, %var_5215, meta[relay.Constant][35] /* ty=Tensor[(384), uint16] */, meta[relay.Constant][36] /* ty=Tensor[(3150), float64] */, %724, %var_5224, %var_5225, %725)
  };
  %726(%var_5257, %var_5258, %var_5259, %var_5260) /* ty=(Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1200), int16], Tensor[(180), float32], Tensor[(384), uint16], Tensor[(3150), float64], Tensor[(16, 13, 5), int64], Tensor[(1404), bool], Tensor[(2, 520), int64], Tensor[(3, 14, 14), bool]) */
}

def @func_2771() -> (Tensor[(13, 9, 12), float32], Tensor[(10, 7, 7), float32]) {
  @func_2769() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(10, 7, 7), float32]) */
}

def @func_3577(%var_3573: Tensor[(2, 600), int16], %var_3574: Tensor[(180), float32], %var_3575: Tensor[(384), uint16], %var_3576: Tensor[(1575, 2), float64]) -> (Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(2, 600), float32], Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1200), int16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(1575, 2), float64]) {
  @func_3571(%var_3573, %var_3574, %var_3575, %var_3576) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1200), int16], Tensor[(2, 600), float32], Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1200), int16], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16], Tensor[(1575, 2), float64]) */
}

def @func_5867(%var_5861: Tensor[(2730), float32], %var_5862: Tensor[(1200), int16], %var_5863: Tensor[(180), float32], %var_5864: Tensor[(1404), bool], %var_5865: Tensor[(520, 2), int64], %var_5866: Tensor[(3, 24), bool]) -> (Tensor[(2730), uint64], Tensor[(1200), int16], Tensor[(1200), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(520, 2), int64], Tensor[(1404), float32], Tensor[(3, 6, 4), int64], Tensor[(12, 2), int32], Tensor[(3, 24), bool]) {
  @func_5859(%var_5861, %var_5862, %var_5863, %var_5864, %var_5865, %var_5866) /* ty=(Tensor[(2730), uint64], Tensor[(1200), int16], Tensor[(1200), float32], Tensor[(15, 14, 13), float64], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(520, 2), int64], Tensor[(1404), float32], Tensor[(3, 6, 4), int64], Tensor[(12, 2), int32], Tensor[(3, 24), bool]) */
}

def @func_4951(%var_4948: Tensor[(3150), float64], %var_4949: Tensor[(30), int8], %var_4950: Tensor[(90, 2), float32]) -> (Tensor[(2730), float32], Tensor[(6, 30), float32], Tensor[(3150), float64], Tensor[(30), int8], Tensor[(1200), int16], Tensor[(90, 2), float32]) {
  %741 = fn (%var_4918: Tensor[(3150), float64], %var_4919: Tensor[(30), int8], %var_4921: Tensor[(90, 2), float32]) -> (Tensor[(2730), float32], Tensor[(6, 30), float32], Tensor[(3150), float64], Tensor[(30), int8], Tensor[(1200), int16], Tensor[(90, 2), float32]) {
    %727 = @func_2587() /* ty=(Tensor[(16, 12, 2), uint16], Tensor[(2730), float32], Tensor[(180), float32]) */;
    %728 = %727.1;
    %729 = cast(%728, dtype="float64") /* ty=Tensor[(2730), float64] */;
    %730 = cast(%var_4918, dtype="float64") /* ty=Tensor[(3150), float64] */;
    %731 = cast(%var_4919, dtype="int8") /* ty=Tensor[(30), int8] */;
    %732 = cast(meta[relay.Constant][38] /* ty=Tensor[(1200), int16] */, dtype="int16") /* ty=Tensor[(1200), int16] */;
    %733 = cast(%var_4921, dtype="float32") /* ty=Tensor[(90, 2), float32] */;
    %734 = reshape(%729, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float64] */;
    %735 = reshape(%730, newshape=[3150]) /* ty=Tensor[(3150), float64] */;
    %736 = reshape(%731, newshape=[30]) /* ty=Tensor[(30), int8] */;
    %737 = reshape(%732, newshape=[1200]) /* ty=Tensor[(1200), int16] */;
    %738 = reshape(%733, newshape=[6, 30]) /* ty=Tensor[(6, 30), float32] */;
    %739 = @func_4882(%734, %735, %736, %737, %738) /* ty=(Tensor[(15, 14, 13), bool], Tensor[(15, 14, 13), uint64], Tensor[(15, 14, 13), float32], Tensor[(1040), int64], Tensor[(3150), float64], Tensor[(2, 600), int16], Tensor[(30), int8], Tensor[(1200), int16], Tensor[(8, 4, 5), float32], Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(6, 30), float32], Tensor[(14, 15, 15), bool], Tensor[(9, 6), uint64], Tensor[(14, 15, 15), uint16], Tensor[(10, 7, 7), float32], Tensor[(15, 14, 13), float64], Tensor[(1404), bool], Tensor[(14, 15, 15), float64]) */;
    %740 = %739.12;
    (%728, %740, %var_4918, %var_4919, meta[relay.Constant][38] /* ty=Tensor[(1200), int16] */, %var_4921)
  };
  %741(%var_4948, %var_4949, %var_4950) /* ty=(Tensor[(2730), float32], Tensor[(6, 30), float32], Tensor[(3150), float64], Tensor[(30), int8], Tensor[(1200), int16], Tensor[(90, 2), float32]) */
}

def @func_1439() -> Tensor[(15, 14, 13), float64] {
  @func_1437() /* ty=Tensor[(15, 14, 13), float64] */
}

def @func_4368() -> Tensor[(180), float32] {
  %742 = @func_2966() /* ty=(Tensor[(180), float32], Tensor[(15, 14, 13), float32]) */;
  %742.0
}

def @func_3144() -> Tensor[(15, 14, 13), float64] {
  %743 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %743.0
}

def @func_3586() -> (Tensor[(2730), float32],) {
  %744 = @func_3336() /* ty=(Tensor[(2730), float32],) */;
  %745 = %744.0;
  (%745,)
}

def @func_1606(%var_1604: Tensor[(15, 14, 13), float64]) -> (Tensor[(15, 14, 13), uint16],) {
  @func_1603(%var_1604) /* ty=(Tensor[(15, 14, 13), uint16],) */
}

def @func_3957() -> Tensor[(9, 4, 11), float64] {
  %747 = fn () -> Tensor[(9, 4, 11), float64] {
    %746 = cast(meta[relay.Constant][39] /* ty=Tensor[(9, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 11), float64] */;
    cos(%746) /* ty=Tensor[(9, 4, 11), float64] */
  };
  %747() /* ty=Tensor[(9, 4, 11), float64] */
}

def @func_4722(%var_4719: Tensor[(12, 10, 11), int32], %var_4720: Tensor[(12, 10, 11), int32], %var_4721: Tensor[(180, 1), float32]) -> (Tensor[(12, 10, 11), uint32], Tensor[(12, 10, 11), float64], Tensor[(180), float32], Tensor[(180, 1), float32]) {
  %764 = fn (%var_4678: Tensor[(12, 10, 11), int32], %var_4679: Tensor[(12, 10, 11), int32], %var_4699: Tensor[(180, 1), float32]) -> (Tensor[(12, 10, 11), uint32], Tensor[(12, 10, 11), float64], Tensor[(180), float32], Tensor[(180, 1), float32]) {
    %748 = cast(%var_4678, dtype="uint32") /* ty=Tensor[(12, 10, 11), uint32] */;
    %749 = shape_of(%var_4679, dtype="int32") /* ty=Tensor[(3), int32] */;
    %750 = cast(%var_4679, dtype="uint32") /* ty=Tensor[(12, 10, 11), uint32] */;
    %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %752 = cast(%var_4679, dtype="int32") /* ty=Tensor[(12, 10, 11), int32] */;
    %753 = shape_of(%var_4678, dtype="int32") /* ty=Tensor[(3), int32] */;
    %754 = cast(%var_4678, dtype="int32") /* ty=Tensor[(12, 10, 11), int32] */;
    %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %756 = multiply(%754, %755) /* ty=Tensor[(12, 10, 11), int32] */;
    %757 = cast(%756, dtype="float64") /* ty=Tensor[(12, 10, 11), float64] */;
    %758 = cast(%var_4699, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
    %759 = reshape(%758, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %760 = @func_3690(%759) /* ty=(Tensor[(2730), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32]) */;
    %761 = bitwise_xor(%750, %751) /* ty=Tensor[(12, 10, 11), uint32] */;
    %762 = asin(%757) /* ty=Tensor[(12, 10, 11), float64] */;
    %763 = %760.2;
    (%761, %762, %763, %var_4699)
  };
  %764(%var_4719, %var_4720, %var_4721) /* ty=(Tensor[(12, 10, 11), uint32], Tensor[(12, 10, 11), float64], Tensor[(180), float32], Tensor[(180, 1), float32]) */
}

def @func_2731(%var_2729: Tensor[(14, 195), float32], %var_2730: Tensor[(30, 6), float32]) -> (Tensor[(5, 2, 4), float64], Tensor[(15, 14, 13), float32], Tensor[(14, 195), float32], Tensor[(30, 6), float32], Tensor[(15, 14, 13), float64], Tensor[(2730), float32]) {
  %777 = fn (%var_2714: Tensor[(14, 195), float32], %var_2715: Tensor[(30, 6), float32]) -> (Tensor[(5, 2, 4), float64], Tensor[(15, 14, 13), float32], Tensor[(14, 195), float32], Tensor[(30, 6), float32], Tensor[(15, 14, 13), float64], Tensor[(2730), float32]) {
    %765 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(5, 2, 4), float64] */;
    %766 = cast(%var_2714, dtype="float32") /* ty=Tensor[(14, 195), float32] */;
    %767 = cast(%var_2714, dtype="float32") /* ty=Tensor[(14, 195), float32] */;
    %768 = cast(%var_2715, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
    %769 = reshape(%766, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float32] */;
    %770 = reshape(%767, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float32] */;
    %771 = reshape(%768, newshape=[90, 2]) /* ty=Tensor[(90, 2), float32] */;
    %772 = @func_794(%769, %770, %771) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), int32], Tensor[(5, 12, 3), float64], Tensor[(90, 2), float32], Tensor[(15, 14, 13), float32]) */;
    %773 = sinh(%765) /* ty=Tensor[(5, 2, 4), float64] */;
    %774 = %772.4;
    %775 = @func_2086() /* ty=Tensor[(15, 14, 13), float64] */;
    %776 = @func_2302() /* ty=Tensor[(2730), float32] */;
    (%773, %774, %var_2714, %var_2715, %775, %776)
  };
  %777(%var_2729, %var_2730) /* ty=(Tensor[(5, 2, 4), float64], Tensor[(15, 14, 13), float32], Tensor[(14, 195), float32], Tensor[(30, 6), float32], Tensor[(15, 14, 13), float64], Tensor[(2730), float32]) */
}

def @func_4138() -> Tensor[(2730), float32] {
  %779 = fn () -> Tensor[(2730), float32] {
    %778 = @func_2138() /* ty=(Tensor[(2730), float32],) */;
    %778.0
  };
  %779() /* ty=Tensor[(2730), float32] */
}

def @main(%var_6204: Tensor[(8, 4, 4), uint8], %var_6212: Tensor[(1408), uint32]) -> (Tensor[(5, 16, 15), bool], Tensor[(8, 4, 4), uint32], Tensor[(1408), int64]) {
  %780 = cast(meta[relay.Constant][41] /* ty=Tensor[(1408), uint32] */, dtype="uint32") /* ty=Tensor[(1408), uint32] */;
  %781 = cast(meta[relay.Constant][41] /* ty=Tensor[(1408), uint32] */, dtype="uint32") /* ty=Tensor[(1408), uint32] */;
  %782 = reshape(%780, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), uint32] */;
  %783 = reshape(%781, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), uint32] */;
  %784 = @func_5478(%782, %783) /* ty=(Tensor[(8, 11, 16), bool], Tensor[(5, 16, 15), bool], Tensor[(12, 100), int16]) */;
  %785 = @func_3665() /* ty=(Tensor[(13, 9, 12), float32], Tensor[(2730), float32], Tensor[(8, 4, 4), uint8], Tensor[(8, 16), float64], Tensor[(8, 4, 5), float64], Tensor[(15, 14, 13), float64]) */;
  %786 = %785.2;
  %787 = cast(%var_6204, dtype="uint32") /* ty=Tensor[(8, 4, 4), uint32] */;
  %788 = shape_of(%786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%786, dtype="uint32") /* ty=Tensor[(8, 4, 4), uint32] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %791 = cast(%var_6212, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %792 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(1408), uint32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %793 = cast(meta[relay.Constant][41] /* ty=Tensor[(1408), uint32] */, dtype="int64") /* ty=Tensor[(1408), int64] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?), int64] */;
  %795 = %784.1;
  %796 = bitwise_or(%789, %790) /* ty=Tensor[(8, 4, 4), uint32] */;
  %797 = multiply(%793, %794) /* ty=Tensor[(1408), int64] */;
  (%795, %796, %797)
}

def @func_6145(%var_6143: Tensor[(2, 1, 15), float32], %var_6144: Tensor[(2, 1, 15), float32]) -> (Tensor[(2, ?, 15), float32],) {
  @func_6141(%var_6143, %var_6144) /* ty=(Tensor[(2, ?, 15), float32],) */
}

def @func_2139() -> (Tensor[(2730), float32],) {
  %800 = fn () -> (Tensor[(2730), float32],) {
    %798 = @func_1405() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) */;
    %799 = %798.1;
    (%799,)
  };
  %800() /* ty=(Tensor[(2730), float32],) */
}

def @func_3926(%var_3924: Tensor[(13, 9, 12), float32], %var_3925: Tensor[(1040), int64]) -> (Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(13, 9, 12), float32]) {
  %818 = fn (%var_3900: Tensor[(13, 9, 12), float32], %var_3906: Tensor[(1040), int64]) -> (Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(13, 9, 12), float32]) {
    %801 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
    %802 = @func_2455() /* ty=(Tensor[(13, 9, 12), float32],) */;
    %803 = %802.0;
    %804 = cast(%var_3900, dtype="int8") /* ty=Tensor[(13, 9, 12), int8] */;
    %805 = shape_of(%803, dtype="int32") /* ty=Tensor[(3), int32] */;
    %806 = cast(%803, dtype="int8") /* ty=Tensor[(13, 9, 12), int8] */;
    %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %808 = logical_xor(%806, %807) /* ty=Tensor[(13, 9, 12), int8] */;
    %809 = cast(%808, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
    %810 = cast(%var_3906, dtype="int64") /* ty=Tensor[(1040), int64] */;
    %811 = reshape(%809, newshape=[1404]) /* ty=Tensor[(1404), bool] */;
    %812 = reshape(%810, newshape=[40, 26]) /* ty=Tensor[(40, 26), int64] */;
    %813 = @func_3296(%811, %812) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(1404), bool], Tensor[(40, 26), int64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(?, 3150), uint16]) */;
    %814 = cast(%808, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
    %815 = %801.0;
    %816 = %813.0;
    %817 = acos(%814) /* ty=Tensor[(13, 9, 12), float32] */;
    (%815, %816, %var_3906, %817)
  };
  %818(%var_3924, %var_3925) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(13, 9, 12), float32]) */
}

def @func_3588() -> (Tensor[(2730), float32],) {
  @func_3586() /* ty=(Tensor[(2730), float32],) */
}

def @func_4559(%var_4556: Tensor[(1, 6, 4), int32], %var_4557: Tensor[(1, 6, 4), int32], %var_4558: Tensor[(3, 6, 4), bool]) -> Tensor[(3, 6, 4), int64] {
  %826 = fn (%var_4528: Tensor[(1, 6, 4), int32], %var_4529: Tensor[(1, 6, 4), int32], %var_4541: Tensor[(3, 6, 4), bool]) -> Tensor[(3, 6, 4), int64] {
    %819 = cast(%var_4529, dtype="bool") /* ty=Tensor[(1, 6, 4), bool] */;
    %820 = shape_of(%var_4528, dtype="int32") /* ty=Tensor[(3), int32] */;
    %821 = cast(%var_4528, dtype="bool") /* ty=Tensor[(1, 6, 4), bool] */;
    %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %823 = greater(%821, %822) /* ty=Tensor[(?, 6, 4), bool] */;
    %824 = cast(%823, dtype="int64") /* ty=Tensor[(?, 6, 4), int64] */;
    %825 = cast(%var_4541, dtype="int64") /* ty=Tensor[(3, 6, 4), int64] */;
    maximum(%824, %825) /* ty=Tensor[(3, 6, 4), int64] */
  };
  %826(%var_4556, %var_4557, %var_4558) /* ty=Tensor[(3, 6, 4), int64] */
}

def @func_5052() -> (Tensor[(13, 9, 12), float32],) {
  %827 = @func_5024() /* ty=Tensor[(13, 9, 12), float32] */;
  %828 = cast(%827, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
  %829 = acosh(%828) /* ty=Tensor[(13, 9, 12), float32] */;
  (%829,)
}

def @func_6105(%var_6103: Tensor[(8, 13, 9), uint16], %var_6104: Tensor[(60), float64]) -> (Tensor[(8, 13, 9), float32], Tensor[(3, 4, 5), float64], Tensor[(60), float64]) {
  @func_6101(%var_6103, %var_6104) /* ty=(Tensor[(8, 13, 9), float32], Tensor[(3, 4, 5), float64], Tensor[(60), float64]) */
}

def @func_5474(%var_5436: Tensor[(8, 11, 16), uint32], %var_5437: Tensor[(8, 11, 16), uint32]) -> (Tensor[(8, 11, 16), bool], Tensor[(5, 16, 15), bool], Tensor[(12, 100), int16]) {
  %830 = cast(%var_5437, dtype="bool") /* ty=Tensor[(8, 11, 16), bool] */;
  %831 = shape_of(%var_5436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %832 = cast(%var_5436, dtype="bool") /* ty=Tensor[(8, 11, 16), bool] */;
  %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %834 = cast(meta[relay.Constant][42] /* ty=Tensor[(12, 100), int16] */, dtype="int16") /* ty=Tensor[(12, 100), int16] */;
  %835 = cast(meta[relay.Constant][42] /* ty=Tensor[(12, 100), int16] */, dtype="int16") /* ty=Tensor[(12, 100), int16] */;
  %836 = reshape(%834, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
  %837 = reshape(%835, newshape=[5, 16, 15]) /* ty=Tensor[(5, 16, 15), int16] */;
  %838 = @func_2170(%836, %837) /* ty=(Tensor[(5, 16, 15), bool], Tensor[(2730), float32], Tensor[(180), float32]) */;
  %839 = less(%832, %833) /* ty=Tensor[(8, 11, 16), bool] */;
  %840 = %838.0;
  (%839, %840, meta[relay.Constant][42] /* ty=Tensor[(12, 100), int16] */)
}

def @func_4180(%var_4175: Tensor[(11, 16, 16), float64]) -> Tensor[(11, 16, 16), float64] {
  %841 = cast(meta[relay.Constant][43] /* ty=Tensor[(11, 16, 16), float64] */, dtype="float64") /* ty=Tensor[(11, 16, 16), float64] */;
  %842 = shape_of(%var_4175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%var_4175, dtype="float64") /* ty=Tensor[(11, 16, 16), float64] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%843, %844) /* ty=Tensor[(11, 16, 16), float64] */
}

def @func_4370() -> Tensor[(180), float32] {
  @func_4368() /* ty=Tensor[(180), float32] */
}

def @func_2645() -> Tensor[(15, 14, 13), float64] {
  @func_2643() /* ty=Tensor[(15, 14, 13), float64] */
}

def @func_3336() -> (Tensor[(2730), float32],) {
  %845 = @func_3029() /* ty=(Tensor[(180), float32], Tensor[(180), float32], Tensor[(2730), float32]) */;
  %846 = %845.2;
  (%846,)
}

def @func_5408(%var_5407: Tensor[(8, 4, 5), float32]) -> (Tensor[(8, 4, 5), float64], Tensor[(15, 14, 13), float64], Tensor[(8, 4, 5), float32]) {
  %858 = fn (%var_5385: Tensor[(8, 4, 5), float32]) -> (Tensor[(8, 4, 5), float64], Tensor[(15, 14, 13), float64], Tensor[(8, 4, 5), float32]) {
    %847 = @func_3058() /* ty=(Tensor[(8, 4, 5), float32],) */;
    %848 = %847.0;
    %849 = cast(%var_5385, dtype="float64") /* ty=Tensor[(8, 4, 5), float64] */;
    %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
    %851 = cast(%848, dtype="float64") /* ty=Tensor[(8, 4, 5), float64] */;
    %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %853 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
    %854 = @func_3058() /* ty=(Tensor[(8, 4, 5), float32],) */;
    %855 = divide(%851, %852) /* ty=Tensor[(8, 4, 5), float64] */;
    %856 = %853.0;
    %857 = %854.0;
    (%855, %856, %857)
  };
  %858(%var_5407) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(15, 14, 13), float64], Tensor[(8, 4, 5), float32]) */
}

def @func_2303() -> Tensor[(2730), float32] {
  %860 = fn () -> Tensor[(2730), float32] {
    %859 = @func_2138() /* ty=(Tensor[(2730), float32],) */;
    %859.0
  };
  %860() /* ty=Tensor[(2730), float32] */
}

def @func_4099(%var_4098: Tensor[(6, 3, 14), int32]) -> Tensor[(6, 3, 14), int32] {
  %865 = fn (%var_4091: Tensor[(6, 3, 14), int32]) -> Tensor[(6, 3, 14), int32] {
    %861 = cast(%var_4091, dtype="int32") /* ty=Tensor[(6, 3, 14), int32] */;
    %862 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(6, 3, 14), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %863 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 3, 14), int32] */, dtype="int32") /* ty=Tensor[(6, 3, 14), int32] */;
    %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    minimum(%863, %864) /* ty=Tensor[(6, 3, 14), int32] */
  };
  %865(%var_4098) /* ty=Tensor[(6, 3, 14), int32] */
}

def @func_3454() -> (Tensor[(8, 4, 5), float32],) {
  %866 = @func_3058() /* ty=(Tensor[(8, 4, 5), float32],) */;
  %867 = %866.0;
  (%867,)
}

def @func_1985() -> (Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64]) {
  %868 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
  %869 = @func_1437() /* ty=Tensor[(15, 14, 13), float64] */;
  %870 = %868.0;
  (%869, %870)
}

def @func_5132(%var_5128: Tensor[(1, 30), int8], %var_5129: Tensor[(1200), int16]) -> (Tensor[(15, 14, 13), float64], Tensor[(3, 1, 10), float32], Tensor[(1, 30), int8], Tensor[(1200), int16]) {
  %871 = cast(%var_5128, dtype="int8") /* ty=Tensor[(1, 30), int8] */;
  %872 = cast(%var_5129, dtype="int16") /* ty=Tensor[(1200), int16] */;
  %873 = reshape(%871, newshape=[3, 1, 10]) /* ty=Tensor[(3, 1, 10), int8] */;
  %874 = reshape(%872, newshape=[2, 600]) /* ty=Tensor[(2, 600), int16] */;
  %875 = @func_4461(%873, %874) /* ty=(Tensor[(3, 11, 10), int8], Tensor[(10, 7, 7), float32], Tensor[(180), float32], Tensor[(3, 1, 10), float32], Tensor[(1200), int16], Tensor[(2, 600), int16]) */;
  %876 = @func_3144() /* ty=Tensor[(15, 14, 13), float64] */;
  %877 = %875.3;
  (%876, %877, %var_5128, %var_5129)
}

def @func_486(%var_455: Tensor[(5, 12, 3), float32]) -> (Tensor[(5, 12, 3), float64],) {
  %878 = cast(%var_455, dtype="float32") /* ty=Tensor[(5, 12, 3), float32] */;
  %879 = atanh(%878) /* ty=Tensor[(5, 12, 3), float32] */;
  %880 = cast(%879, dtype="float64") /* ty=Tensor[(5, 12, 3), float64] */;
  %881 = cos(%880) /* ty=Tensor[(5, 12, 3), float64] */;
  (%881,)
}

def @func_3338() -> (Tensor[(2730), float32],) {
  @func_3336() /* ty=(Tensor[(2730), float32],) */
}

def @func_5630() -> (Tensor[(8, 4, 5), float32],) {
  %882 = @func_3058() /* ty=(Tensor[(8, 4, 5), float32],) */;
  %883 = %882.0;
  (%883,)
}

def @func_4348(%var_4346: Tensor[(11, 15, 15), float32]) -> (Tensor[(11, 15, 15), float32],) {
  @func_4345(%var_4346) /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_2456() -> (Tensor[(13, 9, 12), float32],) {
  %886 = fn () -> (Tensor[(13, 9, 12), float32],) {
    %884 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 9, 12), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 12), float32] */;
    %885 = exp(%884) /* ty=Tensor[(13, 9, 12), float32] */;
    (%885,)
  };
  %886() /* ty=(Tensor[(13, 9, 12), float32],) */
}

def @func_1987() -> (Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64]) {
  @func_1985() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), float64]) */
}

def @func_5755() -> (Tensor[(13, 9, 12), float64],) {
  %890 = fn () -> (Tensor[(13, 9, 12), float64],) {
    %887 = @func_5725() /* ty=Tensor[(13, 9, 12), float64] */;
    %888 = cast(%887, dtype="float64") /* ty=Tensor[(13, 9, 12), float64] */;
    %889 = cos(%888) /* ty=Tensor[(13, 9, 12), float64] */;
    (%889,)
  };
  %890() /* ty=(Tensor[(13, 9, 12), float64],) */
}

def @func_4465(%var_4463: Tensor[(3, 1, 10), int8], %var_4464: Tensor[(2, 600), int16]) -> (Tensor[(3, 11, 10), int8], Tensor[(10, 7, 7), float32], Tensor[(180), float32], Tensor[(3, 1, 10), float32], Tensor[(1200), int16], Tensor[(2, 600), int16]) {
  @func_4461(%var_4463, %var_4464) /* ty=(Tensor[(3, 11, 10), int8], Tensor[(10, 7, 7), float32], Tensor[(180), float32], Tensor[(3, 1, 10), float32], Tensor[(1200), int16], Tensor[(2, 600), int16]) */
}

def @func_1670(%var_1668: Tensor[(180), float32]) -> (Tensor[(16, 14, 11), float64], Tensor[(15, 14, 13), float32], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16]) {
  @func_1667(%var_1668) /* ty=(Tensor[(16, 14, 11), float64], Tensor[(15, 14, 13), float32], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16]) */
}

def @func_2587() -> (Tensor[(16, 12, 2), uint16], Tensor[(2730), float32], Tensor[(180), float32]) {
  %891 = @func_1619() /* ty=(Tensor[(15, 14, 13), float64], Tensor[(16, 12, 2), uint16]) */;
  %892 = %891.1;
  %893 = @func_2302() /* ty=Tensor[(2730), float32] */;
  %894 = @func_2016() /* ty=Tensor[(180), float32] */;
  (%892, %893, %894)
}

def @func_4345(%var_4340: Tensor[(11, 15, 15), float32]) -> (Tensor[(11, 15, 15), float32],) {
  %895 = cast(meta[relay.Constant][46] /* ty=Tensor[(11, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %896 = shape_of(%var_4340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %897 = cast(%var_4340, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %899 = floor_divide(%897, %898) /* ty=Tensor[(11, 15, 15), float32] */;
  (%899,)
}

def @func_4604(%var_4595: Tensor[(7, 3, 4), float32]) -> (Tensor[(7, 3, 4), float32],) {
  %900 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 3, 4), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
  %901 = shape_of(%var_4595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %902 = cast(%var_4595, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %904 = mod(%902, %903) /* ty=Tensor[(7, 3, 4), float32] */;
  (%904,)
}

def @func_2174(%var_2172: Tensor[(5, 16, 15), int16], %var_2173: Tensor[(5, 16, 15), int16]) -> (Tensor[(5, 16, 15), bool], Tensor[(2730), float32], Tensor[(180), float32]) {
  @func_2170(%var_2172, %var_2173) /* ty=(Tensor[(5, 16, 15), bool], Tensor[(2730), float32], Tensor[(180), float32]) */
}

def @func_1405() -> (Tensor[(15, 14, 13), float64], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(16, 14, 11), float64]) {
  %905 = cast(meta[relay.Constant][48] /* ty=Tensor[(2730), float32] */, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %906 = cast(meta[relay.Constant][48] /* ty=Tensor[(2730), float32] */, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %907 = cast(meta[relay.Constant][49] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %908 = reshape(%905, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float32] */;
  %909 = reshape(%906, newshape=[15, 14, 13]) /* ty=Tensor[(15, 14, 13), float32] */;
  %910 = reshape(%907, newshape=[90, 2]) /* ty=Tensor[(90, 2), float32] */;
  %911 = @func_794(%908, %909, %910) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(15, 14, 13), int32], Tensor[(5, 12, 3), float64], Tensor[(90, 2), float32], Tensor[(15, 14, 13), float32]) */;
  %912 = cast(meta[relay.Constant][50] /* ty=Tensor[(16, 14, 11), float64] */, dtype="float64") /* ty=Tensor[(16, 14, 11), float64] */;
  %913 = atanh(%912) /* ty=Tensor[(16, 14, 11), float64] */;
  %914 = cast(%913, dtype="float64") /* ty=Tensor[(16, 14, 11), float64] */;
  %915 = %911.0;
  %916 = atan(%914) /* ty=Tensor[(16, 14, 11), float64] */;
  (%915, meta[relay.Constant][48] /* ty=Tensor[(2730), float32] */, meta[relay.Constant][49] /* ty=Tensor[(180), float32] */, %916)
}

def @func_1746(%var_1745: Tensor[(1040), int64]) -> (Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(1, 3150), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32], Tensor[(?, 3150), uint16], Tensor[(15, 14, 13), float64]) {
  %940 = fn (%var_1711: Tensor[(1040), int64]) -> (Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(1, 3150), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32], Tensor[(?, 3150), uint16], Tensor[(15, 14, 13), float64]) {
    %917 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
    %918 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 3150), float64] */, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
    %919 = log(%918) /* ty=Tensor[(1, 3150), float64] */;
    %920 = cast(%919, dtype="float32") /* ty=Tensor[(1, 3150), float32] */;
    %921 = cast(meta[relay.Constant][52] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %922 = reshape(%921, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %923 = @func_1667(%922) /* ty=(Tensor[(16, 14, 11), float64], Tensor[(15, 14, 13), float32], Tensor[(2730), float32], Tensor[(180), float32], Tensor[(15, 14, 13), float64], Tensor[(384), uint16], Tensor[(16, 12, 2), uint16]) */;
    %924 = cast(%var_1711, dtype="int64") /* ty=Tensor[(1040), int64] */;
    %925 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 3150), float64] */, dtype="float64") /* ty=Tensor[(1, 3150), float64] */;
    %926 = reshape(%924, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), int64] */;
    %927 = reshape(%925, newshape=[1, 3150]) /* ty=Tensor[(1, 3150), float64] */;
    %928 = @func_295(%926, %927) /* ty=(Tensor[(16, 13, 5), int64], Tensor[(16, 12, 2), uint16], Tensor[(1, 3150), float64], Tensor[(16, 12, 2), uint16], Tensor[(14, 15, 15), float64], Tensor[(14, 15, 15), int64]) */;
    %929 = %928.4;
    %930 = cast(%929, dtype="uint16") /* ty=Tensor[(14, 15, 15), uint16] */;
    %931 = shape_of(%919, dtype="int32") /* ty=Tensor[(2), int32] */;
    %932 = cast(%919, dtype="uint16") /* ty=Tensor[(1, 3150), uint16] */;
    %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %934 = @func_1446() /* ty=(Tensor[(15, 14, 13), float64],) */;
    %935 = %917.0;
    %936 = cosh(%920) /* ty=Tensor[(1, 3150), float32] */;
    %937 = %923.0;
    %938 = subtract(%932, %933) /* ty=Tensor[(?, 3150), uint16] */;
    %939 = %934.0;
    (%935, %var_1711, %936, %937, meta[relay.Constant][52] /* ty=Tensor[(180), float32] */, %938, %939)
  };
  %940(%var_1745) /* ty=(Tensor[(15, 14, 13), float64], Tensor[(1040), int64], Tensor[(1, 3150), float32], Tensor[(16, 14, 11), float64], Tensor[(180), float32], Tensor[(?, 3150), uint16], Tensor[(15, 14, 13), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

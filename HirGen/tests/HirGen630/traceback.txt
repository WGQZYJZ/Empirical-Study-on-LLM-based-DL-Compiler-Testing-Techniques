==========mod==========
#[version = "0.0.5"]
def @func_971() -> Tensor[(14, 1, 15), float32] {
  %0 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %0.0
}

def @func_1452() -> (Tensor[(11, 10, 8), float32], Tensor[(14, 1, 15), float32]) {
  %1 = @func_947() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */;
  %2 = %1.1;
  %3 = cast(%2, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
  %4 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %5 = atan(%3) /* ty=Tensor[(11, 10, 8), float32] */;
  %6 = %4.0;
  (%5, %6)
}

def @func_2469() -> (Tensor[(14, 1, 15), float32],) {
  %7 = @func_782() /* ty=Tensor[(14, 1, 15), float32] */;
  (%7,)
}

def @func_9464() -> Tensor[(14, 1, 15), float32] {
  @func_4180() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_6433() -> (Tensor[(14, 1, 15), float32],) {
  %8 = @func_4095() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %9 = %8.0;
  (%9,)
}

def @func_2949() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %10 = @func_1171() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %11 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  %12 = %10.1;
  (%11, %12)
}

def @func_5496() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %13 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %14 = @func_4315() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %15 = %13.0;
  %16 = %14.0;
  (%15, %16)
}

def @func_1802() -> Tensor[(14, 1, 15), float32] {
  @func_971() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_1860() -> Tensor[(14, 1, 15), float32] {
  %17 = @func_947() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */;
  %17.3
}

def @func_7255() -> (Tensor[(7, 16, 5), bool], Tensor[(560), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 11, 15), float32], Tensor[(14, 1, 15), float32]) {
  %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %20 = reshape(%18, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), bool] */;
  %21 = reshape(%19, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), bool] */;
  %22 = @func_2249(%20, %21) /* ty=(Tensor[(7, 16, 5), bool], Tensor[(14, 1, 15), float32]) */;
  %23 = @func_5774() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %24 = @func_6127() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %25 = @func_3162() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(2310), float32]) */;
  %26 = %23.0;
  %27 = cast(%26, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %28 = reshape(%27, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), float32] */;
  %29 = @func_1590(%28) /* ty=(Tensor[(14, ?, 15), uint64], Tensor[(14, 1, 15), float32]) */;
  %30 = @func_3585() /* ty=(Tensor[(14, ?, 15), float64], Tensor[(14, 11, 15), float32]) */;
  %31 = %30.1;
  %32 = cast(%31, dtype="float32") /* ty=Tensor[(14, 11, 15), float32] */;
  %33 = sqrt(%32) /* ty=Tensor[(14, 11, 15), float32] */;
  %34 = cast(%33, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
  %35 = asin(%34) /* ty=Tensor[(14, 11, 15), float64] */;
  %36 = cast(%35, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
  %37 = atanh(%36) /* ty=Tensor[(14, 11, 15), float64] */;
  %38 = cast(%37, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
  %39 = rsqrt(%38) /* ty=Tensor[(14, 11, 15), float64] */;
  %40 = cast(%39, dtype="float32") /* ty=Tensor[(14, 11, 15), float32] */;
  %41 = %22.0;
  %42 = %24.0;
  %43 = %25.1;
  %44 = %29.1;
  %45 = erf(%40) /* ty=Tensor[(14, 11, 15), float32] */;
  %46 = @func_6578() /* ty=Tensor[(14, 1, 15), float32] */;
  (%41, meta[relay.Constant][0] /* ty=Tensor[(560), bool] */, %26, %42, %43, %44, %45, %46)
}

def @func_947() -> (Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) {
  %47 = cast(meta[relay.Constant][1] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %48 = cast(meta[relay.Constant][1] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %49 = reshape(%47, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %50 = reshape(%48, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %51 = @func_54(%49, %50) /* ty=(Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float64]) */;
  %52 = cast(meta[relay.Constant][2] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %53 = reshape(%52, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
  %54 = @func_674(%53) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
  %55 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  %56 = %51.1;
  %57 = %54.0;
  (%55, %56, meta[relay.Constant][1] /* ty=Tensor[(880), bool] */, %57, meta[relay.Constant][2] /* ty=Tensor[(3360), float64] */)
}

def @func_6578() -> Tensor[(14, 1, 15), float32] {
  %58 = @func_1171() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %58.1
}

def @func_7533() -> (Tensor[(14, ?, 15), float64],) {
  %59 = @func_3585() /* ty=(Tensor[(14, ?, 15), float64], Tensor[(14, 11, 15), float32]) */;
  %60 = %59.0;
  (%60,)
}

def @func_2648(%var_2611: Tensor[(14, 12, 15), float32]) -> (Tensor[(7, 16, 5), bool], Tensor[(560), bool], Tensor[(14, 12, 15), int8], Tensor[(14, 1, 15), float32], Tensor[(14, 12, 15), float64], Tensor[(14, 1, 15), float32]) {
  %61 = cast(meta[relay.Constant][3] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %62 = cast(meta[relay.Constant][3] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %63 = reshape(%61, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), bool] */;
  %64 = reshape(%62, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), bool] */;
  %65 = @func_2249(%63, %64) /* ty=(Tensor[(7, 16, 5), bool], Tensor[(14, 1, 15), float32]) */;
  %66 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %67 = %66.0;
  %68 = cast(%67, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %69 = cast(%var_2611, dtype="bool") /* ty=Tensor[(14, 12, 15), bool] */;
  %70 = equal(%68, %69) /* ty=Tensor[(14, 12, 15), bool] */;
  %71 = cast(%var_2611, dtype="int8") /* ty=Tensor[(14, 12, 15), int8] */;
  %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(%70, dtype="int8") /* ty=Tensor[(14, 12, 15), int8] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %75 = cast(%var_2611, dtype="float64") /* ty=Tensor[(14, 12, 15), float64] */;
  %76 = @func_2032() /* ty=(Tensor[(14, ?, 15), int8], Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32]) */;
  %77 = %65.0;
  %78 = bitwise_xor(%73, %74) /* ty=Tensor[(14, 12, 15), int8] */;
  %79 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
  %80 = cosh(%75) /* ty=Tensor[(14, 12, 15), float64] */;
  %81 = %76.3;
  (%77, meta[relay.Constant][3] /* ty=Tensor[(560), bool] */, %78, %79, %80, %81)
}

def @func_6274(%var_6264: Tensor[(14, 11, 15), float32]) -> (Tensor[(14, 11, 15), uint8],) {
  %82 = @func_3585() /* ty=(Tensor[(14, ?, 15), float64], Tensor[(14, 11, 15), float32]) */;
  %83 = %82.1;
  %84 = cast(%var_6264, dtype="uint8") /* ty=Tensor[(14, 11, 15), uint8] */;
  %85 = shape_of(%83, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%83, dtype="uint8") /* ty=Tensor[(14, 11, 15), uint8] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %88 = left_shift(%86, %87) /* ty=Tensor[(14, 11, 15), uint8] */;
  (%88,)
}

def @func_3689() -> (Tensor[(14, 1, 15), float32],) {
  %89 = @func_1827() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %90 = %89.0;
  (%90,)
}

def @func_3480(%var_3429: Tensor[(14, 8, 15), float32], %var_3447: Tensor[(14, 8, 15), int8]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(560), bool], Tensor[(3, 840), float32], Tensor[(14, 8, 15), uint16], Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) {
  %91 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %92 = @func_3273() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %93 = cast(meta[relay.Constant][4] /* ty=Tensor[(3, 840), float32] */, dtype="float32") /* ty=Tensor[(3, 840), float32] */;
  %94 = reshape(%93, newshape=[14, 12, 15]) /* ty=Tensor[(14, 12, 15), float32] */;
  %95 = @func_2648(%94) /* ty=(Tensor[(7, 16, 5), bool], Tensor[(560), bool], Tensor[(14, 12, 15), int8], Tensor[(14, 1, 15), float32], Tensor[(14, 12, 15), float64], Tensor[(14, 1, 15), float32]) */;
  %96 = @func_1171() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %97 = %96.1;
  %98 = cast(%97, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %99 = log10(%98) /* ty=Tensor[(14, 1, 15), float32] */;
  %100 = cast(%99, dtype="int8") /* ty=Tensor[(14, 1, 15), int8] */;
  %101 = cast(%var_3429, dtype="int8") /* ty=Tensor[(14, 8, 15), int8] */;
  %102 = right_shift(%100, %101) /* ty=Tensor[(14, 8, 15), int8] */;
  %103 = cast(%var_3447, dtype="uint16") /* ty=Tensor[(14, 8, 15), uint16] */;
  %104 = shape_of(%102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%102, dtype="uint16") /* ty=Tensor[(14, 8, 15), uint16] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %107 = cast(%var_3429, dtype="float64") /* ty=Tensor[(14, 8, 15), float64] */;
  %108 = cast(meta[relay.Constant][5] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %109 = reshape(%108, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
  %110 = @func_674(%109) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
  %111 = %91.0;
  %112 = %92.0;
  %113 = %95.1;
  %114 = bitwise_xor(%105, %106) /* ty=Tensor[(14, 8, 15), uint16] */;
  %115 = erf(%107) /* ty=Tensor[(14, 8, 15), float64] */;
  %116 = %110.0;
  (%111, %112, %113, meta[relay.Constant][4] /* ty=Tensor[(3, 840), float32] */, %114, %115, %116, meta[relay.Constant][5] /* ty=Tensor[(3360), float64] */)
}

def @func_6079() -> (Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %117 = @func_3055() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(2310), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) */;
  %118 = @func_3055() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(2310), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) */;
  %119 = @func_5774() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %120 = %117.0;
  %121 = %118.1;
  %122 = %119.0;
  %123 = @func_1860() /* ty=Tensor[(14, 1, 15), float32] */;
  (%120, %121, %122, %123)
}

def @func_9365(%var_9352: Tensor[(8, 2, 13), uint16], %var_9353: Tensor[(8, 2, 13), uint16]) -> (Tensor[(8, 2, 13), bool], Tensor[(8, 2, 13), float32]) {
  %124 = cast(%var_9353, dtype="bool") /* ty=Tensor[(8, 2, 13), bool] */;
  %125 = shape_of(%var_9352, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%var_9352, dtype="bool") /* ty=Tensor[(8, 2, 13), bool] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %128 = cast(%var_9353, dtype="float32") /* ty=Tensor[(8, 2, 13), float32] */;
  %129 = cosh(%128) /* ty=Tensor[(8, 2, 13), float32] */;
  %130 = cast(%129, dtype="float32") /* ty=Tensor[(8, 2, 13), float32] */;
  %131 = less(%126, %127) /* ty=Tensor[(8, 2, 13), bool] */;
  %132 = log2(%130) /* ty=Tensor[(8, 2, 13), float32] */;
  (%131, %132)
}

def @func_4622() -> Tensor[(14, 1, 15), float32] {
  %133 = @func_1171() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %133.1
}

def @func_2671() -> (Tensor[(14, 1, 15), float32],) {
  %134 = @func_1171() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %135 = %134.1;
  (%135,)
}

def @func_4898() -> (Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), uint64]) {
  %136 = @func_1860() /* ty=Tensor[(14, 1, 15), float32] */;
  %137 = cast(%136, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %138 = reshape(%137, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), float32] */;
  %139 = @func_1590(%138) /* ty=(Tensor[(14, ?, 15), uint64], Tensor[(14, 1, 15), float32]) */;
  %140 = %139.0;
  (%136, %140)
}

def @func_188() -> (Tensor[(14, 1, 15), float32],) {
  %141 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %142 = sin(%141) /* ty=Tensor[(14, 1, 15), float32] */;
  (%142,)
}

def @func_421() -> Tensor[(14, 1, 15), float32] {
  @func_335() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_1550() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %143 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %144 = %143.0;
  %145 = @func_971() /* ty=Tensor[(14, 1, 15), float32] */;
  (%144, %145)
}

def @func_8475() -> (Tensor[(14, 1, 15), float32], Tensor[(2310), float32]) {
  %146 = @func_3705() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %147 = @func_4958() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(880), bool], Tensor[(2310), float32], Tensor[(880), bool]) */;
  %148 = %146.0;
  %149 = %147.2;
  (%148, %149)
}

def @func_2374(%var_2332: Tensor[(1680, 1), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1680, 15), bool]) {
  %150 = @func_1452() /* ty=(Tensor[(11, 10, 8), float32], Tensor[(14, 1, 15), float32]) */;
  %151 = cast(%var_2332, dtype="float32") /* ty=Tensor[(1680, 1), float32] */;
  %152 = reshape(%151, newshape=[14, 8, 15]) /* ty=Tensor[(14, 8, 15), float32] */;
  %153 = @func_497(%152) /* ty=(Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %154 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %155 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  %156 = cast(%155, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %157 = cast(%var_2332, dtype="bool") /* ty=Tensor[(1680, 1), bool] */;
  %158 = not_equal(%156, %157) /* ty=Tensor[(14, 1680, 15), bool] */;
  %159 = cast(%155, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %160 = cast(%158, dtype="bool") /* ty=Tensor[(14, 1680, 15), bool] */;
  %161 = %150.1;
  %162 = %153.3;
  %163 = %154.3;
  %164 = equal(%159, %160) /* ty=Tensor[(14, 1680, 15), bool] */;
  (%161, %162, %163, %164)
}

def @func_7099(%var_7093: Tensor[(4, 1, 12), float32]) -> (Tensor[(4, 1, 12), float32],) {
  %165 = cast(%var_7093, dtype="float32") /* ty=Tensor[(4, 1, 12), float32] */;
  %166 = exp(%165) /* ty=Tensor[(4, 1, 12), float32] */;
  (%166,)
}

def @func_2098(%var_2058: Tensor[(3360), float64]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(3360), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) {
  %167 = @func_947() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */;
  %168 = cast(%var_2058, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %169 = reshape(%168, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
  %170 = @func_674(%169) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
  %171 = @func_1269() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %172 = %171.0;
  %173 = cast(%172, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %174 = cast(%var_2058, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %175 = reshape(%174, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
  %176 = @func_674(%175) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
  %177 = %167.0;
  %178 = %170.0;
  %179 = atan(%173) /* ty=Tensor[(14, 1, 15), float32] */;
  %180 = %176.2;
  (%177, %178, %var_2058, %179, %180)
}

def @func_7969(%var_7961: Tensor[(14, 11, 15), float32]) -> (Tensor[(14, 11, 15), uint32],) {
  %181 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %182 = %181.0;
  %183 = cast(%182, dtype="uint32") /* ty=Tensor[(14, 1, 15), uint32] */;
  %184 = cast(%var_7961, dtype="uint32") /* ty=Tensor[(14, 11, 15), uint32] */;
  %185 = bitwise_xor(%183, %184) /* ty=Tensor[(14, 11, 15), uint32] */;
  (%185,)
}

def @func_9293(%var_9281: Tensor[(3, 13, 13), uint16], %var_9282: Tensor[(3, 13, 13), uint16]) -> (Tensor[(3, 13, 13), uint16],) {
  %186 = cast(%var_9282, dtype="uint16") /* ty=Tensor[(3, 13, 13), uint16] */;
  %187 = shape_of(%var_9281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%var_9281, dtype="uint16") /* ty=Tensor[(3, 13, 13), uint16] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %190 = right_shift(%188, %189) /* ty=Tensor[(3, 13, 13), uint16] */;
  (%190,)
}

def @func_918() -> (Tensor[(14, 1, 15), float32],) {
  %191 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %192 = %191.0;
  (%192,)
}

def @func_9200() -> Tensor[(14, 1, 15), float32] {
  %193 = @func_1452() /* ty=(Tensor[(11, 10, 8), float32], Tensor[(14, 1, 15), float32]) */;
  %193.1
}

def @func_5827() -> (Tensor[(14, 1, 15), float32], Tensor[(9, 4, 1), float64], Tensor[(18, 2), float64]) {
  %194 = cast(meta[relay.Constant][7] /* ty=Tensor[(18, 2), float64] */, dtype="float64") /* ty=Tensor[(18, 2), float64] */;
  %195 = reshape(%194, newshape=[9, 4, 1]) /* ty=Tensor[(9, 4, 1), float64] */;
  %196 = @func_602(%195) /* ty=(Tensor[(9, 4, 1), float64], Tensor[(14, 1, 15), float32]) */;
  %197 = @func_630() /* ty=Tensor[(14, 1, 15), float32] */;
  %198 = %196.0;
  (%197, %198, meta[relay.Constant][7] /* ty=Tensor[(18, 2), float64] */)
}

def @func_5263(%var_5228: Tensor[(420, 1), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 420, 15), float32]) {
  %199 = cast(%var_5228, dtype="float32") /* ty=Tensor[(420, 1), float32] */;
  %200 = reshape(%199, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %201 = @func_2134(%200) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32], Tensor[(14, ?, 15), uint64]) */;
  %202 = @func_3796() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %203 = %202.2;
  %204 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 1, 15), float32] */, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %205 = shape_of(%203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %206 = cast(%203, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %208 = logical_or(%206, %207) /* ty=Tensor[(14, ?, 15), bool] */;
  %209 = cast(%var_5228, dtype="float32") /* ty=Tensor[(420, 1), float32] */;
  %210 = cast(%208, dtype="float32") /* ty=Tensor[(14, ?, 15), float32] */;
  %211 = %201.1;
  %212 = power(%209, %210) /* ty=Tensor[(14, 420, 15), float32] */;
  (%211, %212)
}

def @func_4339(%var_4331: Tensor[(4, 15, 11), uint32]) -> Tensor[(4, 15, 11), uint32] {
  %213 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 15, 11), uint32] */, dtype="uint32") /* ty=Tensor[(4, 15, 11), uint32] */;
  %214 = shape_of(%var_4331, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%var_4331, dtype="uint32") /* ty=Tensor[(4, 15, 11), uint32] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_xor(%215, %216) /* ty=Tensor[(4, 15, 11), uint32] */
}

def @func_8097() -> (Tensor[(3360), float64],) {
  %217 = @func_3663() /* ty=(Tensor[(11, 10, 8), float64], Tensor[(3360), float64], Tensor[(3360), float64]) */;
  %218 = %217.2;
  (%218,)
}

def @func_8029() -> (Tensor[(14, 1, 15), float32],) {
  %219 = @func_4180() /* ty=Tensor[(14, 1, 15), float32] */;
  (%219,)
}

def @func_7875() -> (Tensor[(40, 22), int16], Tensor[(40, 22), bool]) {
  %220 = @func_2548() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(40, 22), bool]) */;
  %221 = %220.3;
  %222 = cast(meta[relay.Constant][10] /* ty=Tensor[(40, 22), bool] */, dtype="int16") /* ty=Tensor[(40, 22), int16] */;
  %223 = shape_of(%221, dtype="int32") /* ty=Tensor[(2), int32] */;
  %224 = cast(%221, dtype="int16") /* ty=Tensor[(40, 22), int16] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %226 = cast(meta[relay.Constant][10] /* ty=Tensor[(40, 22), bool] */, dtype="bool") /* ty=Tensor[(40, 22), bool] */;
  %227 = shape_of(%221, dtype="int32") /* ty=Tensor[(2), int32] */;
  %228 = cast(%221, dtype="bool") /* ty=Tensor[(40, 22), bool] */;
  %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %230 = bitwise_or(%224, %225) /* ty=Tensor[(40, 22), int16] */;
  %231 = logical_or(%228, %229) /* ty=Tensor[(40, 22), bool] */;
  (%230, %231)
}

def @func_3216() -> (Tensor[(14, 1, 15), float32],) {
  %232 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
  (%232,)
}

def @func_7008() -> Tensor[(14, 1, 15), float32] {
  %233 = @func_6958() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %233.0
}

def @func_674(%var_668: Tensor[(14, 16, 15), float64]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) {
  %234 = @func_388() /* ty=Tensor[(14, 1, 15), float32] */;
  %235 = cast(%234, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
  %236 = sigmoid(%235) /* ty=Tensor[(14, 1, 15), float64] */;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
  %238 = cast(%var_668, dtype="float64") /* ty=Tensor[(14, 16, 15), float64] */;
  %239 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
  %240 = @func_388() /* ty=Tensor[(14, 1, 15), float32] */;
  %241 = subtract(%237, %238) /* ty=Tensor[(14, 16, 15), float64] */;
  (%239, %240, %241)
}

def @func_4315() -> (Tensor[(14, 1, 15), float32],) {
  %242 = @func_782() /* ty=Tensor[(14, 1, 15), float32] */;
  (%242,)
}

def @func_5617(%var_5602: Tensor[(11, 6, 3), float64]) -> Tensor[(11, 6, 3), float64] {
  %243 = cast(%var_5602, dtype="float64") /* ty=Tensor[(11, 6, 3), float64] */;
  %244 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(11, 6, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 6, 3), float64] */, dtype="float64") /* ty=Tensor[(11, 6, 3), float64] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%245, %246) /* ty=Tensor[(11, 6, 3), float64] */
}

def @func_3663() -> (Tensor[(11, 10, 8), float64], Tensor[(3360), float64], Tensor[(3360), float64]) {
  %247 = @func_2548() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(40, 22), bool]) */;
  %248 = cast(meta[relay.Constant][12] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %249 = reshape(%248, newshape=[3360]) /* ty=Tensor[(3360), float64] */;
  %250 = @func_2098(%249) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(3360), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
  %251 = %247.2;
  %252 = %250.2;
  (%251, %252, meta[relay.Constant][12] /* ty=Tensor[(3360), float64] */)
}

def @func_4778(%var_4775: Tensor[(420), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32], Tensor[(420), float32]) {
  %253 = @func_1269() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %254 = cast(%var_4775, dtype="float32") /* ty=Tensor[(420), float32] */;
  %255 = reshape(%254, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %256 = @func_2853(%255) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32]) */;
  %257 = %253.1;
  %258 = @func_4180() /* ty=Tensor[(14, 1, 15), float32] */;
  %259 = @func_1075() /* ty=Tensor[(14, 1, 15), float32] */;
  %260 = %256.3;
  (%257, %258, %259, %260, %var_4775)
}

def @func_7639(%var_7603: Tensor[(3360), float64]) -> (Tensor[(14, 1, 15), float32], float64, Tensor[(528), float64], Tensor[(3360), uint64], Tensor[(420, 8), bool]) {
  %261 = @func_2949() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %262 = cast(-3.90185f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %263 = cast(meta[relay.Constant][13] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %264 = cast(%var_7603, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %265 = reshape(%262, newshape=[]) /* ty=float64 */;
  %266 = reshape(%263, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float64] */;
  %267 = reshape(%264, newshape=[420, 8]) /* ty=Tensor[(420, 8), float64] */;
  %268 = @func_1004(%265, %266, %267) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420, 8), float64]) */;
  %269 = %268.3;
  %270 = cast(%269, dtype="uint64") /* ty=Tensor[(420, 8), uint64] */;
  %271 = shape_of(%var_7603, dtype="int32") /* ty=Tensor[(1), int32] */;
  %272 = cast(%var_7603, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %274 = cast(%269, dtype="float64") /* ty=Tensor[(420, 8), float64] */;
  %275 = sin(%274) /* ty=Tensor[(420, 8), float64] */;
  %276 = cast(%269, dtype="bool") /* ty=Tensor[(420, 8), bool] */;
  %277 = shape_of(%275, dtype="int32") /* ty=Tensor[(2), int32] */;
  %278 = cast(%275, dtype="bool") /* ty=Tensor[(420, 8), bool] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %280 = %261.0;
  %281 = right_shift(%272, %273) /* ty=Tensor[(3360), uint64] */;
  %282 = logical_and(%278, %279) /* ty=Tensor[(420, 8), bool] */;
  (%280, -3.90185f64 /* ty=float64 */, meta[relay.Constant][13] /* ty=Tensor[(528), float64] */, %281, %282)
}

def @func_7914() -> (Tensor[(13, 1, 5), float32],) {
  %283 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 1, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 1, 5), float32] */;
  %284 = exp(%283) /* ty=Tensor[(13, 1, 5), float32] */;
  (%284,)
}

def @func_4450(%var_4405: Tensor[(3360), float64]) -> (Tensor[(14, 1, 15), float32], Tensor[(3360), float64], Tensor[(14, ?, 15), bool], Tensor[(14, ?, 15), int8], Tensor[(14, 1, 15), float32]) {
  %285 = @func_1550() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %286 = %285.0;
  %287 = @func_782() /* ty=Tensor[(14, 1, 15), float32] */;
  %288 = cast(%287, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %289 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%286, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %292 = cast(%var_4405, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %293 = reshape(%292, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
  %294 = @func_674(%293) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
  %295 = %294.0;
  %296 = @func_335() /* ty=Tensor[(14, 1, 15), float32] */;
  %297 = cast(%296, dtype="int8") /* ty=Tensor[(14, 1, 15), int8] */;
  %298 = shape_of(%295, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%295, dtype="int8") /* ty=Tensor[(14, 1, 15), int8] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %301 = cast(%var_4405, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %302 = reshape(%301, newshape=[3360]) /* ty=Tensor[(3360), float64] */;
  %303 = @func_2098(%302) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(3360), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
  %304 = @func_4126() /* ty=Tensor[(14, 1, 15), float32] */;
  %305 = logical_and(%290, %291) /* ty=Tensor[(14, ?, 15), bool] */;
  %306 = maximum(%299, %300) /* ty=Tensor[(14, ?, 15), int8] */;
  %307 = %303.0;
  (%304, %var_4405, %305, %306, %307)
}

def @func_6548() -> (Tensor[(13, 6, 5), bool], Tensor[(14, 1, 15), float32], Tensor[(13, 6, 5), float64], Tensor[(14, 1, 15), float64]) {
  %308 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 6, 5), float32] */;
  %309 = asinh(%308) /* ty=Tensor[(13, 6, 5), float32] */;
  %310 = cast(%309, dtype="bool") /* ty=Tensor[(13, 6, 5), bool] */;
  %311 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(13, 6, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 6, 5), float32] */, dtype="bool") /* ty=Tensor[(13, 6, 5), bool] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %314 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 6, 5), float32] */;
  %315 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%309, dtype="float32") /* ty=Tensor[(13, 6, 5), float32] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %318 = divide(%316, %317) /* ty=Tensor[(13, 6, 5), float32] */;
  %319 = cast(%318, dtype="float64") /* ty=Tensor[(13, 6, 5), float64] */;
  %320 = not_equal(%312, %313) /* ty=Tensor[(13, 6, 5), bool] */;
  %321 = @func_1860() /* ty=Tensor[(14, 1, 15), float32] */;
  %322 = cos(%319) /* ty=Tensor[(13, 6, 5), float64] */;
  %323 = @func_3745() /* ty=Tensor[(14, 1, 15), float64] */;
  (%320, %321, %322, %323)
}

def @func_497(%var_451: Tensor[(14, 8, 15), float32]) -> (Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %324 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %325 = %324.0;
  %326 = cast(%325, dtype="int8") /* ty=Tensor[(14, 1, 15), int8] */;
  %327 = cast(%var_451, dtype="int8") /* ty=Tensor[(14, 8, 15), int8] */;
  %328 = minimum(%326, %327) /* ty=Tensor[(14, 8, 15), int8] */;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(14, 8, 15), float64] */;
  %330 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %331 = cast(meta[relay.Constant][17] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %332 = cast(meta[relay.Constant][17] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %333 = reshape(%331, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %334 = reshape(%332, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %335 = @func_54(%333, %334) /* ty=(Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float64]) */;
  %336 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %337 = acos(%329) /* ty=Tensor[(14, 8, 15), float64] */;
  %338 = %330.2;
  %339 = %335.1;
  %340 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  %341 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  %342 = %336.0;
  (%337, %338, %339, meta[relay.Constant][17] /* ty=Tensor[(880), bool] */, %340, %341, %342)
}

def @func_3745() -> Tensor[(14, 1, 15), float64] {
  %343 = @func_1860() /* ty=Tensor[(14, 1, 15), float32] */;
  %344 = cast(%343, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
  asinh(%344) /* ty=Tensor[(14, 1, 15), float64] */
}

def @func_4126() -> Tensor[(14, 1, 15), float32] {
  @func_782() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_4579(%var_4571: Tensor[(1680), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32]) {
  %345 = cast(%var_4571, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %346 = reshape(%345, newshape=[14, 8, 15]) /* ty=Tensor[(14, 8, 15), float32] */;
  %347 = @func_497(%346) /* ty=(Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %348 = @func_335() /* ty=Tensor[(14, 1, 15), float32] */;
  %349 = %347.1;
  (%348, %349, %var_4571)
}

def @func_864(%var_826: Tensor[(14, 11, 15), float32], %var_845: Tensor[(880), bool]) -> (Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 11, 15), float64]) {
  %350 = cast(%var_845, dtype="bool") /* ty=Tensor[(880), bool] */;
  %351 = cast(%var_845, dtype="bool") /* ty=Tensor[(880), bool] */;
  %352 = reshape(%350, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %353 = reshape(%351, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %354 = @func_54(%352, %353) /* ty=(Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float64]) */;
  %355 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %356 = %355.0;
  %357 = cast(%356, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %358 = cast(%var_826, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
  %359 = logical_and(%357, %358) /* ty=Tensor[(14, 11, 15), bool] */;
  %360 = cast(%359, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
  %361 = %354.1;
  %362 = cosh(%360) /* ty=Tensor[(14, 11, 15), float64] */;
  (%361, %var_845, %362)
}

def @func_8701() -> (Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32], Tensor[(1, 9, 3), float32], Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %363 = @func_7750() /* ty=(Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32]) */;
  %364 = @func_7328() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %365 = @func_5798() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %366 = @func_5744() /* ty=(Tensor[(3360), float64], Tensor[(14, ?, 15), bool], Tensor[(11, 10, 8), float64]) */;
  %367 = @func_5981() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %368 = @func_2053() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %369 = %363.0;
  %370 = %364.0;
  %371 = %365.0;
  %372 = %366.1;
  %373 = %367.0;
  %374 = %368.0;
  (%369, %370, %371, %372, %373, %374)
}

def @func_3273() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %375 = @func_947() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */;
  %376 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %377 = %375.0;
  %378 = %376.0;
  (%377, %378)
}

def @func_3796() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %379 = @func_1743() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %380 = @func_2949() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %381 = @func_2421() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %382 = %379.0;
  %383 = %380.0;
  %384 = @func_971() /* ty=Tensor[(14, 1, 15), float32] */;
  %385 = %381.0;
  (%382, %383, %384, %385)
}

def @func_3162() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(2310), float32]) {
  %386 = @func_2726() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %387 = @func_3055() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(2310), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) */;
  %388 = %387.2;
  %389 = cast(%388, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %390 = exp(%389) /* ty=Tensor[(2310), float32] */;
  %391 = cast(%388, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(1), int32] */;
  %393 = cast(%390, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?), float32] */;
  %395 = %386.0;
  %396 = @func_335() /* ty=Tensor[(14, 1, 15), float32] */;
  %397 = @func_1075() /* ty=Tensor[(14, 1, 15), float32] */;
  %398 = floor_divide(%393, %394) /* ty=Tensor[(2310), float32] */;
  (%395, %396, %397, %398)
}

def @func_1075() -> Tensor[(14, 1, 15), float32] {
  %399 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %399.0
}

def @func_9318() -> (Tensor[(1, 9, 3), float32],) {
  %400 = @func_5798() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %401 = %400.0;
  (%401,)
}

def @func_6014() -> Tensor[(14, 1, 15), float32] {
  %402 = @func_2688() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32]) */;
  %402.1
}

def @func_5455() -> (Tensor[(2310), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool]) {
  %403 = @func_3162() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(2310), float32]) */;
  %404 = cast(meta[relay.Constant][18] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %405 = cast(meta[relay.Constant][18] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %406 = reshape(%404, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %407 = reshape(%405, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %408 = @func_54(%406, %407) /* ty=(Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float64]) */;
  %409 = %403.3;
  %410 = %408.1;
  (%409, %410, meta[relay.Constant][18] /* ty=Tensor[(880), bool] */)
}

def @func_7665(%var_7658: Tensor[(210, 3), int64]) -> (Tensor[(2310), float32], Tensor[(6, 7, 15), uint32], int64, Tensor[(28), int64], Tensor[(210, 3), int64]) {
  %411 = @func_3162() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(2310), float32]) */;
  %412 = cast(2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %413 = cast(meta[relay.Constant][19] /* ty=Tensor[(28), int64] */, dtype="int64") /* ty=Tensor[(28), int64] */;
  %414 = cast(%var_7658, dtype="int64") /* ty=Tensor[(210, 3), int64] */;
  %415 = reshape(%412, newshape=[]) /* ty=int64 */;
  %416 = reshape(%413, newshape=[4, 7, 1]) /* ty=Tensor[(4, 7, 1), int64] */;
  %417 = reshape(%414, newshape=[6, 7, 15]) /* ty=Tensor[(6, 7, 15), int64] */;
  %418 = @func_4252(%415, %416, %417) /* ty=(Tensor[(4, 7, 1), int64], Tensor[(6, 7, 15), uint32]) */;
  %419 = %411.3;
  %420 = %418.1;
  (%419, %420, 2 /* ty=int64 */, meta[relay.Constant][19] /* ty=Tensor[(28), int64] */, %var_7658)
}

def @func_8951() -> (Tensor[(7, 16, 5), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %421 = @func_7255() /* ty=(Tensor[(7, 16, 5), bool], Tensor[(560), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 11, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %422 = %421.0;
  %423 = cast(%422, dtype="bool") /* ty=Tensor[(7, 16, 5), bool] */;
  %424 = cast(%422, dtype="bool") /* ty=Tensor[(7, 16, 5), bool] */;
  %425 = reshape(%423, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), bool] */;
  %426 = reshape(%424, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), bool] */;
  %427 = @func_2249(%425, %426) /* ty=(Tensor[(7, 16, 5), bool], Tensor[(14, 1, 15), float32]) */;
  %428 = @func_1550() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %429 = %427.1;
  %430 = %428.1;
  %431 = @func_4180() /* ty=Tensor[(14, 1, 15), float32] */;
  (%422, %429, %430, %431)
}

def @func_6958() -> (Tensor[(14, 1, 15), float32],) {
  %432 = @func_1550() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %433 = %432.1;
  (%433,)
}

def @func_388() -> Tensor[(14, 1, 15), float32] {
  @func_335() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_5018(%var_4992: int64) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], int64) {
  %434 = @func_3749() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %435 = @func_1269() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %436 = cast(%var_4992, dtype="int64") /* ty=int64 */;
  %437 = reshape(%436, newshape=[]) /* ty=int64 */;
  %438 = @func_1646(%437) /* ty=(Tensor[(4, 2, 9), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(36), float64], Tensor[(14, 1, 15), float32]) */;
  %439 = %434.0;
  %440 = %435.0;
  %441 = %438.2;
  (%439, %440, %441, %var_4992)
}

def @func_8772() -> Tensor[(14, 16, 15), uint16] {
  %442 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %443 = %442.0;
  %444 = cast(%443, dtype="uint16") /* ty=Tensor[(14, 1, 15), uint16] */;
  %445 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 16, 15), float32] */, dtype="uint16") /* ty=Tensor[(14, 16, 15), uint16] */;
  bitwise_or(%444, %445) /* ty=Tensor[(14, 16, 15), uint16] */
}

def @func_6186(%var_6171: Tensor[(14, 15, 15), float32]) -> (Tensor[(14, ?, 15), float32], Tensor[(14, 15, 15), uint8]) {
  %446 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %447 = %446.0;
  %448 = cast(meta[relay.Constant][21] /* ty=Tensor[(14, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%447, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %452 = cast(meta[relay.Constant][21] /* ty=Tensor[(14, 1, 15), float32] */, dtype="uint8") /* ty=Tensor[(14, 1, 15), uint8] */;
  %453 = cast(%var_6171, dtype="uint8") /* ty=Tensor[(14, 15, 15), uint8] */;
  %454 = power(%450, %451) /* ty=Tensor[(14, ?, 15), float32] */;
  %455 = multiply(%452, %453) /* ty=Tensor[(14, 15, 15), uint8] */;
  (%454, %455)
}

def @func_7498() -> (Tensor[(14, ?, 15), bool],) {
  %456 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
  %457 = @func_6127() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %458 = %457.0;
  %459 = cast(%458, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %460 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %461 = cast(%456, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %463 = not_equal(%461, %462) /* ty=Tensor[(14, ?, 15), bool] */;
  (%463,)
}

def @func_7750() -> (Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32]) {
  %464 = @func_7498() /* ty=(Tensor[(14, ?, 15), bool],) */;
  %465 = %464.0;
  %466 = @func_4553() /* ty=Tensor[(14, 1, 15), float32] */;
  (%465, %466)
}

def @func_209() -> (Tensor[(14, 1, 15), float32],) {
  %467 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %468 = %467.0;
  (%468,)
}

def @func_54(%var_24: Tensor[(11, 10, 8), bool], %var_25: Tensor[(11, 10, 8), bool]) -> (Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float64]) {
  %469 = cast(%var_25, dtype="bool") /* ty=Tensor[(11, 10, 8), bool] */;
  %470 = shape_of(%var_24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %471 = cast(%var_24, dtype="bool") /* ty=Tensor[(11, 10, 8), bool] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %473 = cast(%var_24, dtype="float64") /* ty=Tensor[(11, 10, 8), float64] */;
  %474 = logical_and(%471, %472) /* ty=Tensor[(11, 10, 8), bool] */;
  %475 = exp(%473) /* ty=Tensor[(11, 10, 8), float64] */;
  (%474, %475)
}

def @func_1171() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %476 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %477 = %476.0;
  %478 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
  (%477, %478)
}

def @func_5320() -> Tensor[(14, 1, 15), float32] {
  %479 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %479.0
}

def @func_6809() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %480 = @func_6714() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %481 = @func_2469() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %482 = %480.0;
  %483 = %481.0;
  (%482, %483)
}

def @func_602(%var_588: Tensor[(9, 4, 1), float64]) -> (Tensor[(9, 4, 1), float64], Tensor[(14, 1, 15), float32]) {
  %484 = cast(%var_588, dtype="float64") /* ty=Tensor[(9, 4, 1), float64] */;
  %485 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %486 = erf(%484) /* ty=Tensor[(9, 4, 1), float64] */;
  %487 = %485.0;
  (%486, %487)
}

def @func_1743() -> (Tensor[(14, 1, 15), float32],) {
  %488 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  (%488,)
}

def @func_2318(%var_2303: Tensor[(1680), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float32]) {
  %489 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %490 = @func_2053() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %491 = @func_947() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */;
  %492 = cast(%var_2303, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %493 = reshape(%492, newshape=[14, 8, 15]) /* ty=Tensor[(14, 8, 15), float32] */;
  %494 = @func_497(%493) /* ty=(Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %495 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %496 = @func_1452() /* ty=(Tensor[(11, 10, 8), float32], Tensor[(14, 1, 15), float32]) */;
  %497 = %489.0;
  %498 = %490.1;
  %499 = %491.3;
  %500 = %494.5;
  %501 = %495.3;
  %502 = %496.0;
  (%497, %498, %499, %500, %var_2303, %501, %502)
}

def @func_2853(%var_2851: Tensor[(420), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32]) {
  %503 = cast(%var_2851, dtype="float32") /* ty=Tensor[(420), float32] */;
  %504 = reshape(%503, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
  %505 = @func_1495(%504) /* ty=(Tensor[(14, 2, 15), uint8], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %506 = @func_388() /* ty=Tensor[(14, 1, 15), float32] */;
  %507 = @func_971() /* ty=Tensor[(14, 1, 15), float32] */;
  %508 = %505.2;
  (%506, %507, %508, %var_2851)
}

def @func_5357(%var_5349: Tensor[(13, 7, 3), float32], %var_5350: Tensor[(13, 7, 3), float32]) -> (Tensor[(13, 7, 3), int16],) {
  %509 = cast(%var_5350, dtype="bool") /* ty=Tensor[(13, 7, 3), bool] */;
  %510 = shape_of(%var_5349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %511 = cast(%var_5349, dtype="bool") /* ty=Tensor[(13, 7, 3), bool] */;
  %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %513 = less(%511, %512) /* ty=Tensor[(13, 7, 3), bool] */;
  %514 = cast(%var_5350, dtype="int16") /* ty=Tensor[(13, 7, 3), int16] */;
  %515 = shape_of(%513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%513, dtype="int16") /* ty=Tensor[(13, 7, 3), int16] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %518 = minimum(%516, %517) /* ty=Tensor[(13, 7, 3), int16] */;
  (%518,)
}

def @func_5798() -> (Tensor[(1, 9, 3), float32],) {
  %519 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 9, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %520 = sqrt(%519) /* ty=Tensor[(1, 9, 3), float64] */;
  %521 = cast(%520, dtype="float32") /* ty=Tensor[(1, 9, 3), float32] */;
  %522 = cosh(%521) /* ty=Tensor[(1, 9, 3), float32] */;
  (%522,)
}

def @func_1495(%var_1471: Tensor[(14, 2, 15), float32]) -> (Tensor[(14, 2, 15), uint8], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %523 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %524 = %523.0;
  %525 = cast(%524, dtype="uint8") /* ty=Tensor[(14, 1, 15), uint8] */;
  %526 = cast(%var_1471, dtype="uint8") /* ty=Tensor[(14, 2, 15), uint8] */;
  %527 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %528 = @func_1171() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %529 = minimum(%525, %526) /* ty=Tensor[(14, 2, 15), uint8] */;
  %530 = %527.0;
  %531 = %528.1;
  (%529, %530, %531)
}

def @func_6311() -> (Tensor[(14, 1, 15), float32],) {
  %532 = @func_2469() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %533 = %532.0;
  (%533,)
}

def @func_6594(%var_6586: Tensor[(12, 5, 16), float64]) -> (Tensor[(12, 5, 16), float64],) {
  %534 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 16), float64] */;
  %535 = shape_of(%var_6586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(%var_6586, dtype="float64") /* ty=Tensor[(12, 5, 16), float64] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %538 = power(%536, %537) /* ty=Tensor[(12, 5, 16), float64] */;
  (%538,)
}

def @func_5774() -> (Tensor[(14, 1, 15), float32],) {
  %539 = @func_3055() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(2310), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) */;
  %540 = %539.0;
  (%540,)
}

def @func_1827() -> (Tensor[(14, 1, 15), float32],) {
  %541 = @func_1743() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %542 = %541.0;
  (%542,)
}

def @func_9643() -> (Tensor[(14, 1, 15), float32],) {
  %543 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %544 = %543.0;
  (%544,)
}

def @func_4252(%var_4238: int64, %var_4239: Tensor[(4, 7, 1), int64], %var_4245: Tensor[(6, 7, 15), int64]) -> (Tensor[(4, 7, 1), int64], Tensor[(6, 7, 15), uint32]) {
  %545 = cast(%var_4238, dtype="int64") /* ty=int64 */;
  %546 = cast(%var_4239, dtype="int64") /* ty=Tensor[(4, 7, 1), int64] */;
  %547 = cast(%var_4238, dtype="uint32") /* ty=uint32 */;
  %548 = cast(%var_4245, dtype="uint32") /* ty=Tensor[(6, 7, 15), uint32] */;
  %549 = bitwise_and(%545, %546) /* ty=Tensor[(4, 7, 1), int64] */;
  %550 = logical_xor(%547, %548) /* ty=Tensor[(6, 7, 15), uint32] */;
  (%549, %550)
}

def @func_2421() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %551 = @func_1452() /* ty=(Tensor[(11, 10, 8), float32], Tensor[(14, 1, 15), float32]) */;
  %552 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %553 = %551.1;
  %554 = %552.0;
  (%553, %554)
}

def @func_303() -> (Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %555 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %556 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %557 = %556.0;
  %558 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %559 = %558.0;
  %560 = cast(%559, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %561 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %562 = cast(%557, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %564 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %565 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %566 = %555.0;
  %567 = divide(%562, %563) /* ty=Tensor[(14, ?, 15), float32] */;
  %568 = %564.0;
  %569 = %565.0;
  (%566, %567, %568, %569)
}

def @func_8559() -> (Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), int32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64], Tensor[(3360), float64]) {
  %570 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %571 = @func_4095() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %572 = %571.0;
  %573 = @func_2688() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32]) */;
  %574 = %573.1;
  %575 = cast(%574, dtype="int32") /* ty=Tensor[(14, 1, 15), int32] */;
  %576 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(%572, dtype="int32") /* ty=Tensor[(14, 1, 15), int32] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %579 = @func_3705() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %580 = cast(meta[relay.Constant][24] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %581 = reshape(%580, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
  %582 = @func_674(%581) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
  %583 = %570.0;
  %584 = logical_xor(%577, %578) /* ty=Tensor[(14, ?, 15), int32] */;
  %585 = %579.0;
  %586 = %582.2;
  (%583, %584, %585, %586, meta[relay.Constant][24] /* ty=Tensor[(3360), float64] */)
}

def @main(%var_9694: Tensor[(420), float32]) -> (Tensor[(1, 9, 3), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(420), float32], Tensor[(11, 10, 8), float64], Tensor[(14, ?, 15), bool]) {
  %587 = @func_5798() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %588 = cast(meta[relay.Constant][25] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %589 = reshape(%588, newshape=[1680, 1]) /* ty=Tensor[(1680, 1), float32] */;
  %590 = @func_2374(%589) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1680, 15), bool]) */;
  %591 = @func_5744() /* ty=(Tensor[(3360), float64], Tensor[(14, ?, 15), bool], Tensor[(11, 10, 8), float64]) */;
  %592 = @func_1269() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %593 = %592.2;
  %594 = cast(%var_9694, dtype="float32") /* ty=Tensor[(420), float32] */;
  %595 = reshape(%594, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %596 = @func_4778(%595) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32], Tensor[(420), float32]) */;
  %597 = %596.0;
  %598 = cast(%597, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %599 = shape_of(%593, dtype="int32") /* ty=Tensor[(3), int32] */;
  %600 = cast(%593, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %602 = %587.0;
  %603 = %590.0;
  %604 = %591.2;
  %605 = greater_equal(%600, %601) /* ty=Tensor[(14, ?, 15), bool] */;
  (%602, %603, meta[relay.Constant][25] /* ty=Tensor[(1680), float32] */, %var_9694, %604, %605)
}

def @func_1004(%var_979: float64, %var_980: Tensor[(3, 11, 16), float64], %var_1002: Tensor[(420, 8), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420, 8), float64]) {
  %606 = cast(%var_979, dtype="float64") /* ty=float64 */;
  %607 = cast(%var_980, dtype="float64") /* ty=Tensor[(3, 11, 16), float64] */;
  %608 = cast(%var_1002, dtype="float64") /* ty=Tensor[(420, 8), float64] */;
  %609 = reshape(%608, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
  %610 = @func_674(%609) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
  %611 = divide(%606, %607) /* ty=Tensor[(3, 11, 16), float64] */;
  %612 = @func_335() /* ty=Tensor[(14, 1, 15), float32] */;
  %613 = %610.0;
  (%611, %612, %613, %var_1002)
}

def @func_4958() -> (Tensor[(14, 1, 15), float64], Tensor[(880), bool], Tensor[(2310), float32], Tensor[(880), bool]) {
  %614 = @func_2688() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32]) */;
  %615 = cast(meta[relay.Constant][26] /* ty=Tensor[(2310), float32] */, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %616 = cast(meta[relay.Constant][27] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %617 = reshape(%615, newshape=[14, 11, 15]) /* ty=Tensor[(14, 11, 15), float32] */;
  %618 = reshape(%616, newshape=[880]) /* ty=Tensor[(880), bool] */;
  %619 = @func_864(%617, %618) /* ty=(Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 11, 15), float64]) */;
  %620 = %614.0;
  %621 = %619.1;
  (%620, %621, meta[relay.Constant][26] /* ty=Tensor[(2310), float32] */, meta[relay.Constant][27] /* ty=Tensor[(880), bool] */)
}

def @func_2134(%var_2130: Tensor[(420), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32], Tensor[(14, ?, 15), uint64]) {
  %622 = cast(%var_2130, dtype="float32") /* ty=Tensor[(420), float32] */;
  %623 = reshape(%622, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
  %624 = @func_1495(%623) /* ty=(Tensor[(14, 2, 15), uint8], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %625 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
  %626 = cast(%625, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %627 = reshape(%626, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), float32] */;
  %628 = @func_1590(%627) /* ty=(Tensor[(14, ?, 15), uint64], Tensor[(14, 1, 15), float32]) */;
  %629 = %624.2;
  %630 = %628.0;
  (%625, %629, %var_2130, %630)
}

def @func_8264(%var_8203: Tensor[(2730), float32], %var_8235: Tensor[(1680), float32]) -> (Tensor[(11, 10, 8), float64], Tensor[(14, 13, 15), float64], Tensor[(2730), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32]) {
  %631 = @func_6079() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %632 = cast(%var_8203, dtype="float32") /* ty=Tensor[(2730), float32] */;
  %633 = reshape(%632, newshape=[14, 13, 15]) /* ty=Tensor[(14, 13, 15), float32] */;
  %634 = cast(%var_8235, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %635 = cast(%var_8235, dtype="int8") /* ty=Tensor[(1680), int8] */;
  %636 = reshape(%634, newshape=[14, 8, 15]) /* ty=Tensor[(14, 8, 15), float32] */;
  %637 = reshape(%635, newshape=[14, 8, 15]) /* ty=Tensor[(14, 8, 15), int8] */;
  %638 = @func_3480(%636, %637) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(560), bool], Tensor[(3, 840), float32], Tensor[(14, 8, 15), uint16], Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */;
  %639 = %631.1;
  %640 = @func_8165(%633) /* ty=Tensor[(14, 13, 15), float64] */;
  %641 = %638.1;
  (%639, %640, %var_8203, %641, %var_8235)
}

def @func_5670(%var_5648: Tensor[(15, 7, 11), int64], %var_5649: Tensor[(15, 7, 11), int64]) -> (Tensor[(15, 7, 11), uint32],) {
  %642 = cast(%var_5649, dtype="int64") /* ty=Tensor[(15, 7, 11), int64] */;
  %643 = shape_of(%var_5648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %644 = cast(%var_5648, dtype="int64") /* ty=Tensor[(15, 7, 11), int64] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %646 = logical_xor(%644, %645) /* ty=Tensor[(15, 7, 11), int64] */;
  %647 = cast(%646, dtype="float32") /* ty=Tensor[(15, 7, 11), float32] */;
  %648 = acosh(%647) /* ty=Tensor[(15, 7, 11), float32] */;
  %649 = cast(%648, dtype="uint32") /* ty=Tensor[(15, 7, 11), uint32] */;
  %650 = shape_of(%646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%646, dtype="uint32") /* ty=Tensor[(15, 7, 11), uint32] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %653 = minimum(%651, %652) /* ty=Tensor[(15, 7, 11), uint32] */;
  (%653,)
}

def @func_5430() -> (Tensor[(4, 4, 11), float64], Tensor[(14, 11, 15), float64], Tensor[(2310), float32], Tensor[(2, 440), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %654 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(4, 4, 11), float64] */;
  %655 = cast(meta[relay.Constant][29] /* ty=Tensor[(2310), float32] */, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %656 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 440), bool] */, dtype="bool") /* ty=Tensor[(2, 440), bool] */;
  %657 = reshape(%655, newshape=[14, 11, 15]) /* ty=Tensor[(14, 11, 15), float32] */;
  %658 = reshape(%656, newshape=[880]) /* ty=Tensor[(880), bool] */;
  %659 = @func_864(%657, %658) /* ty=(Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 11, 15), float64]) */;
  %660 = @func_4315() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %661 = log(%654) /* ty=Tensor[(4, 4, 11), float64] */;
  %662 = %659.2;
  %663 = %660.0;
  %664 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  (%661, %662, meta[relay.Constant][29] /* ty=Tensor[(2310), float32] */, meta[relay.Constant][30] /* ty=Tensor[(2, 440), bool] */, %663, %664)
}

def @func_9121() -> (Tensor[(14, 1, 15), float32],) {
  %665 = @func_8701() /* ty=(Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32], Tensor[(1, 9, 3), float32], Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %666 = %665.4;
  (%666,)
}

def @func_4740(%var_4736: Tensor[(1, 12, 14), float32]) -> (Tensor[(1, 12, 14), float32],) {
  %667 = cast(%var_4736, dtype="float32") /* ty=Tensor[(1, 12, 14), float32] */;
  %668 = cos(%667) /* ty=Tensor[(1, 12, 14), float32] */;
  (%668,)
}

def @func_1269() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %669 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %670 = @func_1202() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %671 = @func_388() /* ty=Tensor[(14, 1, 15), float32] */;
  %672 = %669.0;
  %673 = %670.0;
  (%671, %672, %673)
}

def @func_7403(%var_7362: Tensor[(70, 6), float32], %var_7374: Tensor[(70, 6), uint16]) -> (Tensor[(14, 1, 15), float32], Tensor[(70, 6), bool], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) {
  %674 = cast(%var_7362, dtype="float32") /* ty=Tensor[(70, 6), float32] */;
  %675 = reshape(%674, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %676 = @func_2134(%675) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32], Tensor[(14, ?, 15), uint64]) */;
  %677 = %676.2;
  %678 = cast(%677, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %679 = shape_of(%var_7362, dtype="int32") /* ty=Tensor[(2), int32] */;
  %680 = cast(%var_7362, dtype="uint16") /* ty=Tensor[(70, 6), uint16] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %682 = multiply(%680, %681) /* ty=Tensor[(70, 6), uint16] */;
  %683 = cast(%var_7374, dtype="bool") /* ty=Tensor[(70, 6), bool] */;
  %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(2), int32] */;
  %685 = cast(%682, dtype="bool") /* ty=Tensor[(70, 6), bool] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %687 = @func_947() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */;
  %688 = @func_5320() /* ty=Tensor[(14, 1, 15), float32] */;
  %689 = less(%685, %686) /* ty=Tensor[(70, 6), bool] */;
  %690 = %687.2;
  %691 = @func_335() /* ty=Tensor[(14, 1, 15), float32] */;
  (%688, %689, %690, %691)
}

def @func_2548() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(40, 22), bool]) {
  %692 = @func_1827() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %693 = cast(meta[relay.Constant][31] /* ty=Tensor[(40, 22), bool] */, dtype="bool") /* ty=Tensor[(40, 22), bool] */;
  %694 = cast(meta[relay.Constant][31] /* ty=Tensor[(40, 22), bool] */, dtype="bool") /* ty=Tensor[(40, 22), bool] */;
  %695 = reshape(%693, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %696 = reshape(%694, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %697 = @func_54(%695, %696) /* ty=(Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float64]) */;
  %698 = @func_1802() /* ty=Tensor[(14, 1, 15), float32] */;
  %699 = %692.0;
  %700 = %697.1;
  (%698, %699, %700, meta[relay.Constant][31] /* ty=Tensor[(40, 22), bool] */)
}

def @func_2726() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %701 = @func_1550() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %702 = %701.0;
  %703 = @func_971() /* ty=Tensor[(14, 1, 15), float32] */;
  %704 = @func_335() /* ty=Tensor[(14, 1, 15), float32] */;
  (%702, %703, %704)
}

def @func_1202() -> (Tensor[(14, 1, 15), float32],) {
  %705 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %706 = %705.0;
  (%706,)
}

def @func_6127() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %707 = @func_1452() /* ty=(Tensor[(11, 10, 8), float32], Tensor[(14, 1, 15), float32]) */;
  %708 = @func_6014() /* ty=Tensor[(14, 1, 15), float32] */;
  %709 = %707.1;
  (%708, %709)
}

def @func_7037() -> Tensor[(14, 1, 15), float64] {
  %710 = @func_2688() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32]) */;
  %710.0
}

def @func_2688() -> (Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32]) {
  %711 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
  %712 = cast(%711, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
  %713 = @func_1827() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %714 = cos(%712) /* ty=Tensor[(14, 1, 15), float64] */;
  %715 = %713.0;
  (%714, %715)
}

def @func_335() -> Tensor[(14, 1, 15), float32] {
  %716 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %716.0
}

def @func_630() -> Tensor[(14, 1, 15), float32] {
  @func_579() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_782() -> Tensor[(14, 1, 15), float32] {
  @func_388() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_2032() -> (Tensor[(14, ?, 15), int8], Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32]) {
  %717 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  %718 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %719 = %718.1;
  %720 = cast(%719, dtype="int8") /* ty=Tensor[(14, ?, 15), int8] */;
  %721 = shape_of(%717, dtype="int32") /* ty=Tensor[(3), int32] */;
  %722 = cast(%717, dtype="int8") /* ty=Tensor[(14, 1, 15), int8] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %724 = @func_1743() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %725 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %726 = cast(%719, dtype="float32") /* ty=Tensor[(14, ?, 15), float32] */;
  %727 = bitwise_xor(%722, %723) /* ty=Tensor[(14, ?, 15), int8] */;
  %728 = %724.0;
  %729 = %725.1;
  %730 = @func_971() /* ty=Tensor[(14, 1, 15), float32] */;
  %731 = log2(%726) /* ty=Tensor[(14, ?, 15), float32] */;
  (%727, %728, %729, %730, %731)
}

def @func_4553() -> Tensor[(14, 1, 15), float32] {
  %732 = @func_2688() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32]) */;
  %732.1
}

def @func_3705() -> (Tensor[(14, 1, 15), float32],) {
  %733 = @func_1827() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %734 = %733.0;
  (%734,)
}

def @func_7087(%var_7071: Tensor[(3, 66), float64], %var_7073: Tensor[(3, 66), float64]) -> (Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 6, 3), float64], Tensor[(3, 66), uint16], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %735 = @func_1827() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %736 = cast(%var_7071, dtype="float64") /* ty=Tensor[(3, 66), float64] */;
  %737 = reshape(%736, newshape=[11, 6, 3]) /* ty=Tensor[(11, 6, 3), float64] */;
  %738 = cast(%var_7073, dtype="uint16") /* ty=Tensor[(3, 66), uint16] */;
  %739 = shape_of(%var_7071, dtype="int32") /* ty=Tensor[(2), int32] */;
  %740 = cast(%var_7071, dtype="uint16") /* ty=Tensor[(3, 66), uint16] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %742 = @func_5529() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %743 = @func_7037() /* ty=Tensor[(14, 1, 15), float64] */;
  %744 = %735.0;
  %745 = @func_5617(%737) /* ty=Tensor[(11, 6, 3), float64] */;
  %746 = bitwise_xor(%740, %741) /* ty=Tensor[(3, 66), uint16] */;
  %747 = %742.1;
  %748 = @func_782() /* ty=Tensor[(14, 1, 15), float32] */;
  (%743, %744, %745, %746, %747, %748)
}

def @func_9069() -> (Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(40, 22), uint16]) {
  %749 = cast(meta[relay.Constant][32] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %750 = reshape(%749, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %751 = @func_2318(%750) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float32]) */;
  %752 = @func_7875() /* ty=(Tensor[(40, 22), int16], Tensor[(40, 22), bool]) */;
  %753 = %752.0;
  %754 = cast(%753, dtype="float32") /* ty=Tensor[(40, 22), float32] */;
  %755 = atanh(%754) /* ty=Tensor[(40, 22), float32] */;
  %756 = cast(%753, dtype="uint16") /* ty=Tensor[(40, 22), uint16] */;
  %757 = shape_of(%755, dtype="int32") /* ty=Tensor[(2), int32] */;
  %758 = cast(%755, dtype="uint16") /* ty=Tensor[(40, 22), uint16] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %760 = %751.1;
  %761 = subtract(%758, %759) /* ty=Tensor[(40, 22), uint16] */;
  (%760, meta[relay.Constant][32] /* ty=Tensor[(1680), float32] */, %761)
}

def @func_9248() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %762 = @func_3705() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %763 = @func_6578() /* ty=Tensor[(14, 1, 15), float32] */;
  %764 = %762.0;
  (%763, %764)
}

def @func_5981() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %765 = @func_3216() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %766 = @func_4553() /* ty=Tensor[(14, 1, 15), float32] */;
  %767 = %765.0;
  (%766, %767)
}

def @func_9026(%var_8983: Tensor[(198), float64], %var_9010: Tensor[(10, 42), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(3, 66), uint16], Tensor[(198), float64], Tensor[(14, 1, 15), float32], Tensor[(10, 42), float32]) {
  %768 = cast(%var_8983, dtype="float64") /* ty=Tensor[(198), float64] */;
  %769 = cast(%var_8983, dtype="float64") /* ty=Tensor[(198), float64] */;
  %770 = reshape(%768, newshape=[3, 66]) /* ty=Tensor[(3, 66), float64] */;
  %771 = reshape(%769, newshape=[3, 66]) /* ty=Tensor[(3, 66), float64] */;
  %772 = @func_7087(%770, %771) /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 6, 3), float64], Tensor[(3, 66), uint16], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %773 = cast(%var_9010, dtype="float32") /* ty=Tensor[(10, 42), float32] */;
  %774 = reshape(%773, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %775 = @func_2853(%774) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32]) */;
  %776 = @func_3828() /* ty=Tensor[(14, 1, 15), float32] */;
  %777 = %772.3;
  %778 = %775.2;
  (%776, %777, %var_8983, %778, %var_9010)
}

def @func_6624(%var_6611: Tensor[(14, 12, 15), float32], %var_6617: Tensor[(14, 12, 15), bool]) -> (Tensor[(14, 12, 15), bool],) {
  %779 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %780 = %779.0;
  %781 = cast(%780, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %782 = cast(%var_6611, dtype="bool") /* ty=Tensor[(14, 12, 15), bool] */;
  %783 = not_equal(%781, %782) /* ty=Tensor[(14, 12, 15), bool] */;
  %784 = cast(%var_6617, dtype="bool") /* ty=Tensor[(14, 12, 15), bool] */;
  %785 = shape_of(%783, dtype="int32") /* ty=Tensor[(3), int32] */;
  %786 = cast(%783, dtype="bool") /* ty=Tensor[(14, 12, 15), bool] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %788 = less(%786, %787) /* ty=Tensor[(14, 12, 15), bool] */;
  (%788,)
}

def @func_6714() -> (Tensor[(14, 1, 15), float32],) {
  %789 = @func_6578() /* ty=Tensor[(14, 1, 15), float32] */;
  (%789,)
}

def @func_3954(%var_3939: Tensor[(1680), float32]) -> (Tensor[(14, ?, 15), int64], Tensor[(11, 10, 8), float64], Tensor[(14, 1, 15), float32], Tensor[(1680), float32]) {
  %790 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %791 = %790.0;
  %792 = @func_1075() /* ty=Tensor[(14, 1, 15), float32] */;
  %793 = cast(%792, dtype="int64") /* ty=Tensor[(14, 1, 15), int64] */;
  %794 = shape_of(%791, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(%791, dtype="int64") /* ty=Tensor[(14, 1, 15), int64] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %797 = @func_3663() /* ty=(Tensor[(11, 10, 8), float64], Tensor[(3360), float64], Tensor[(3360), float64]) */;
  %798 = cast(%var_3939, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %799 = reshape(%798, newshape=[1680, 1]) /* ty=Tensor[(1680, 1), float32] */;
  %800 = @func_2374(%799) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1680, 15), bool]) */;
  %801 = bitwise_or(%795, %796) /* ty=Tensor[(14, ?, 15), int64] */;
  %802 = %797.0;
  %803 = %800.0;
  (%801, %802, %803, %var_3939)
}

def @func_4180() -> Tensor[(14, 1, 15), float32] {
  @func_421() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_9113(%var_9111: Tensor[(1680), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(1680), float32]) {
  %804 = @func_3216() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %805 = cast(%var_9111, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %806 = reshape(%805, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %807 = @func_3954(%806) /* ty=(Tensor[(14, ?, 15), int64], Tensor[(11, 10, 8), float64], Tensor[(14, 1, 15), float32], Tensor[(1680), float32]) */;
  %808 = %804.0;
  %809 = %807.3;
  (%808, %809, %var_9111)
}

def @func_5529() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %810 = @func_1550() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %811 = @func_2053() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %812 = %810.0;
  %813 = %811.0;
  (%812, %813)
}

def @func_1646(%var_1625: int64) -> (Tensor[(4, 2, 9), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(36), float64], Tensor[(14, 1, 15), float32]) {
  %814 = cast(%var_1625, dtype="bool") /* ty=bool */;
  %815 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 2, 9), int64] */, dtype="bool") /* ty=Tensor[(4, 2, 9), bool] */;
  %816 = cast(meta[relay.Constant][34] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %817 = reshape(%816, newshape=[9, 4, 1]) /* ty=Tensor[(9, 4, 1), float64] */;
  %818 = @func_602(%817) /* ty=(Tensor[(9, 4, 1), float64], Tensor[(14, 1, 15), float32]) */;
  %819 = greater_equal(%814, %815) /* ty=Tensor[(4, 2, 9), bool] */;
  %820 = @func_630() /* ty=Tensor[(14, 1, 15), float32] */;
  %821 = %818.1;
  %822 = @func_630() /* ty=Tensor[(14, 1, 15), float32] */;
  (%819, %820, %821, meta[relay.Constant][34] /* ty=Tensor[(36), float64] */, %822)
}

def @func_6649() -> Tensor[(14, 1, 15), float32] {
  @func_6014() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_2249(%var_2203: Tensor[(7, 16, 5), bool], %var_2204: Tensor[(7, 16, 5), bool]) -> (Tensor[(7, 16, 5), bool], Tensor[(14, 1, 15), float32]) {
  %823 = cast(%var_2204, dtype="bool") /* ty=Tensor[(7, 16, 5), bool] */;
  %824 = shape_of(%var_2203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%var_2203, dtype="bool") /* ty=Tensor[(7, 16, 5), bool] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %827 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %828 = logical_and(%825, %826) /* ty=Tensor[(7, 16, 5), bool] */;
  %829 = %827.0;
  (%828, %829)
}

def @func_4095() -> (Tensor[(14, 1, 15), float32],) {
  %830 = @func_1550() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %831 = %830.0;
  (%831,)
}

def @func_3055() -> (Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(2310), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) {
  %832 = cast(meta[relay.Constant][35] /* ty=Tensor[(2310), float32] */, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %833 = cast(meta[relay.Constant][36] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %834 = reshape(%832, newshape=[14, 11, 15]) /* ty=Tensor[(14, 11, 15), float32] */;
  %835 = reshape(%833, newshape=[880]) /* ty=Tensor[(880), bool] */;
  %836 = @func_864(%834, %835) /* ty=(Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 11, 15), float64]) */;
  %837 = @func_1550() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %838 = @func_1075() /* ty=Tensor[(14, 1, 15), float32] */;
  %839 = %836.0;
  %840 = %837.1;
  (%838, %839, meta[relay.Constant][35] /* ty=Tensor[(2310), float32] */, meta[relay.Constant][36] /* ty=Tensor[(880), bool] */, %840)
}

def @func_579() -> Tensor[(14, 1, 15), float32] {
  %841 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %841.0
}

def @func_8165(%var_8152: Tensor[(14, 13, 15), float32]) -> Tensor[(14, 13, 15), float64] {
  %842 = @func_4315() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %843 = %842.0;
  %844 = cast(%843, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
  %845 = cast(%var_8152, dtype="float64") /* ty=Tensor[(14, 13, 15), float64] */;
  %846 = mod(%844, %845) /* ty=Tensor[(14, 13, 15), float64] */;
  %847 = cast(%846, dtype="float64") /* ty=Tensor[(14, 13, 15), float64] */;
  rsqrt(%847) /* ty=Tensor[(14, 13, 15), float64] */
}

def @func_8833(%var_8799: Tensor[(14, 4, 15), float32]) -> (Tensor[(14, 4, 15), uint16], Tensor[(14, 1, 15), float32]) {
  %848 = @func_6079() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %849 = %848.3;
  %850 = cast(%849, dtype="uint16") /* ty=Tensor[(14, 1, 15), uint16] */;
  %851 = cast(%var_8799, dtype="uint16") /* ty=Tensor[(14, 4, 15), uint16] */;
  %852 = maximum(%850, %851) /* ty=Tensor[(14, 4, 15), uint16] */;
  %853 = @func_5177() /* ty=Tensor[(14, 1, 15), float32] */;
  (%852, %853)
}

def @func_7792() -> Tensor[(14, 1, 15), float32] {
  %854 = @func_2548() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(40, 22), bool]) */;
  %854.0
}

def @func_3828() -> Tensor[(14, 1, 15), float32] {
  %855 = @func_2053() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %855.1
}

def @func_7328() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %856 = @func_6311() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %857 = %856.0;
  %858 = @func_1860() /* ty=Tensor[(14, 1, 15), float32] */;
  (%857, %858)
}

def @func_3585() -> (Tensor[(14, ?, 15), float64], Tensor[(14, 11, 15), float32]) {
  %859 = @func_2726() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %860 = %859.0;
  %861 = @func_3216() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %862 = %861.0;
  %863 = cast(%862, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %864 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %865 = cast(%860, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %867 = less_equal(%865, %866) /* ty=Tensor[(14, ?, 15), bool] */;
  %868 = cast(%867, dtype="float64") /* ty=Tensor[(14, ?, 15), float64] */;
  %869 = @func_1743() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %870 = %869.0;
  %871 = cast(%870, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %872 = cast(meta[relay.Constant][37] /* ty=Tensor[(14, 11, 15), float32] */, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
  %873 = less_equal(%871, %872) /* ty=Tensor[(14, 11, 15), bool] */;
  %874 = cast(%873, dtype="int16") /* ty=Tensor[(14, 11, 15), int16] */;
  %875 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(14, 11, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %876 = cast(meta[relay.Constant][37] /* ty=Tensor[(14, 11, 15), float32] */, dtype="int16") /* ty=Tensor[(14, 11, 15), int16] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %878 = subtract(%876, %877) /* ty=Tensor[(14, 11, 15), int16] */;
  %879 = cast(%878, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
  %880 = acosh(%879) /* ty=Tensor[(14, 11, 15), float64] */;
  %881 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 11, 15), float64] */, dtype="float32") /* ty=Tensor[(14, 11, 15), float32] */;
  %882 = shape_of(%880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%880, dtype="float32") /* ty=Tensor[(14, 11, 15), float32] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %885 = acos(%868) /* ty=Tensor[(14, ?, 15), float64] */;
  %886 = divide(%883, %884) /* ty=Tensor[(14, 11, 15), float32] */;
  (%885, %886)
}

def @func_7698() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %887 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
  %888 = @func_4722() /* ty=Tensor[(14, 1, 15), float32] */;
  (%887, %888)
}

def @func_8897() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %889 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %890 = @func_3705() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %891 = %889.0;
  %892 = %890.0;
  (%891, %892)
}

def @func_9614(%var_9568: Tensor[(14, 1, 15), float32]) -> (Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %893 = @func_3828() /* ty=Tensor[(14, 1, 15), float32] */;
  %894 = cast(%var_9568, dtype="int32") /* ty=Tensor[(14, 1, 15), int32] */;
  %895 = shape_of(%893, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%893, dtype="int32") /* ty=Tensor[(14, 1, 15), int32] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %898 = right_shift(%896, %897) /* ty=Tensor[(14, ?, 15), int32] */;
  %899 = cast(%var_9568, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %900 = shape_of(%898, dtype="int32") /* ty=Tensor[(3), int32] */;
  %901 = cast(%898, dtype="float32") /* ty=Tensor[(14, ?, 15), float32] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %903 = floor_divide(%901, %902) /* ty=Tensor[(14, ?, 15), float32] */;
  %904 = @func_5177() /* ty=Tensor[(14, 1, 15), float32] */;
  %905 = @func_388() /* ty=Tensor[(14, 1, 15), float32] */;
  (%903, %904, %905)
}

def @func_5177() -> Tensor[(14, 1, 15), float32] {
  %906 = @func_2671() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %906.0
}

def @func_1590(%var_1575: Tensor[(14, 1, 15), float32]) -> (Tensor[(14, ?, 15), uint64], Tensor[(14, 1, 15), float32]) {
  %907 = @func_971() /* ty=Tensor[(14, 1, 15), float32] */;
  %908 = cast(%var_1575, dtype="uint64") /* ty=Tensor[(14, 1, 15), uint64] */;
  %909 = shape_of(%907, dtype="int32") /* ty=Tensor[(3), int32] */;
  %910 = cast(%907, dtype="uint64") /* ty=Tensor[(14, 1, 15), uint64] */;
  %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %912 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  %913 = cast(%912, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %914 = bitwise_and(%910, %911) /* ty=Tensor[(14, ?, 15), uint64] */;
  %915 = sqrt(%913) /* ty=Tensor[(14, 1, 15), float32] */;
  (%914, %915)
}

def @func_5744() -> (Tensor[(3360), float64], Tensor[(14, ?, 15), bool], Tensor[(11, 10, 8), float64]) {
  %916 = @func_3663() /* ty=(Tensor[(11, 10, 8), float64], Tensor[(3360), float64], Tensor[(3360), float64]) */;
  %917 = %916.1;
  %918 = cast(%917, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %919 = reshape(%918, newshape=[3360]) /* ty=Tensor[(3360), float64] */;
  %920 = @func_4450(%919) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(3360), float64], Tensor[(14, ?, 15), bool], Tensor[(14, ?, 15), int8], Tensor[(14, 1, 15), float32]) */;
  %921 = @func_3663() /* ty=(Tensor[(11, 10, 8), float64], Tensor[(3360), float64], Tensor[(3360), float64]) */;
  %922 = %920.2;
  %923 = %921.0;
  (%917, %922, %923)
}

def @func_2053() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %924 = @func_1860() /* ty=Tensor[(14, 1, 15), float32] */;
  %925 = @func_388() /* ty=Tensor[(14, 1, 15), float32] */;
  (%924, %925)
}

def @func_4722() -> Tensor[(14, 1, 15), float32] {
  %926 = @func_1269() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %926.0
}

def @func_3749() -> (Tensor[(14, 1, 15), float32],) {
  %927 = @func_3273() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %928 = %927.1;
  (%928,)
}

def @func_6904(%var_6859: Tensor[(1680), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float64]) {
  %929 = cast(%var_6859, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %930 = reshape(%929, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %931 = @func_2318(%930) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float32]) */;
  %932 = cast(%var_6859, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %933 = @func_4553() /* ty=Tensor[(14, 1, 15), float32] */;
  %934 = %931.2;
  %935 = rsqrt(%932) /* ty=Tensor[(1680), float64] */;
  (%933, %934, %935)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2253(%var_2251: Tensor[(7, 16, 5), bool], %var_2252: Tensor[(7, 16, 5), bool]) -> (Tensor[(7, 16, 5), bool], Tensor[(14, 1, 15), float32]) {
  @func_2249(%var_2251, %var_2252) /* ty=(Tensor[(7, 16, 5), bool], Tensor[(14, 1, 15), float32]) */
}

def @func_5266(%var_5264: Tensor[(420, 1), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 420, 15), float32]) {
  @func_5263(%var_5264) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 420, 15), float32]) */
}

def @func_7876() -> (Tensor[(40, 22), int16], Tensor[(40, 22), bool]) {
  %12 = fn () -> (Tensor[(40, 22), int16], Tensor[(40, 22), bool]) {
    %0 = @func_2548() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(40, 22), bool]) */;
    %1 = %0.3;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(40, 22), bool] */, dtype="int16") /* ty=Tensor[(40, 22), int16] */;
    %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(2), int32] */;
    %4 = cast(%1, dtype="int16") /* ty=Tensor[(40, 22), int16] */;
    %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(40, 22), bool] */, dtype="bool") /* ty=Tensor[(40, 22), bool] */;
    %7 = shape_of(%1, dtype="int32") /* ty=Tensor[(2), int32] */;
    %8 = cast(%1, dtype="bool") /* ty=Tensor[(40, 22), bool] */;
    %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %10 = bitwise_or(%4, %5) /* ty=Tensor[(40, 22), int16] */;
    %11 = logical_or(%8, %9) /* ty=Tensor[(40, 22), bool] */;
    (%10, %11)
  };
  %12() /* ty=(Tensor[(40, 22), int16], Tensor[(40, 22), bool]) */
}

def @func_3274() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %17 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %13 = @func_947() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */;
    %14 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %15 = %13.0;
    %16 = %14.0;
    (%15, %16)
  };
  %17() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_3691() -> (Tensor[(14, 1, 15), float32],) {
  @func_3689() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_782() -> Tensor[(14, 1, 15), float32] {
  @func_388() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_7498() -> (Tensor[(14, ?, 15), bool],) {
  %18 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
  %19 = @func_6127() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %20 = %19.0;
  %21 = cast(%20, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %22 = shape_of(%18, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(%18, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %25 = not_equal(%23, %24) /* ty=Tensor[(14, ?, 15), bool] */;
  (%25,)
}

def @func_3954(%var_3939: Tensor[(1680), float32]) -> (Tensor[(14, ?, 15), int64], Tensor[(11, 10, 8), float64], Tensor[(14, 1, 15), float32], Tensor[(1680), float32]) {
  %26 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %27 = %26.0;
  %28 = @func_1075() /* ty=Tensor[(14, 1, 15), float32] */;
  %29 = cast(%28, dtype="int64") /* ty=Tensor[(14, 1, 15), int64] */;
  %30 = shape_of(%27, dtype="int32") /* ty=Tensor[(3), int32] */;
  %31 = cast(%27, dtype="int64") /* ty=Tensor[(14, 1, 15), int64] */;
  %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %33 = @func_3663() /* ty=(Tensor[(11, 10, 8), float64], Tensor[(3360), float64], Tensor[(3360), float64]) */;
  %34 = cast(%var_3939, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %35 = reshape(%34, newshape=[1680, 1]) /* ty=Tensor[(1680, 1), float32] */;
  %36 = @func_2374(%35) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1680, 15), bool]) */;
  %37 = bitwise_or(%31, %32) /* ty=Tensor[(14, ?, 15), int64] */;
  %38 = %33.0;
  %39 = %36.0;
  (%37, %38, %39, %var_3939)
}

def @func_422() -> Tensor[(14, 1, 15), float32] {
  %40 = fn () -> Tensor[(14, 1, 15), float32] {
    @func_335() /* ty=Tensor[(14, 1, 15), float32] */
  };
  %40() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_336() -> Tensor[(14, 1, 15), float32] {
  %42 = fn () -> Tensor[(14, 1, 15), float32] {
    %41 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %41.0
  };
  %42() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_7665(%var_7658: Tensor[(210, 3), int64]) -> (Tensor[(2310), float32], Tensor[(6, 7, 15), uint32], int64, Tensor[(28), int64], Tensor[(210, 3), int64]) {
  %43 = @func_3162() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(2310), float32]) */;
  %44 = cast(2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %45 = cast(meta[relay.Constant][1] /* ty=Tensor[(28), int64] */, dtype="int64") /* ty=Tensor[(28), int64] */;
  %46 = cast(%var_7658, dtype="int64") /* ty=Tensor[(210, 3), int64] */;
  %47 = reshape(%44, newshape=[]) /* ty=int64 */;
  %48 = reshape(%45, newshape=[4, 7, 1]) /* ty=Tensor[(4, 7, 1), int64] */;
  %49 = reshape(%46, newshape=[6, 7, 15]) /* ty=Tensor[(6, 7, 15), int64] */;
  %50 = @func_4252(%47, %48, %49) /* ty=(Tensor[(4, 7, 1), int64], Tensor[(6, 7, 15), uint32]) */;
  %51 = %43.3;
  %52 = %50.1;
  (%51, %52, 2 /* ty=int64 */, meta[relay.Constant][1] /* ty=Tensor[(28), int64] */, %var_7658)
}

def @func_4096() -> (Tensor[(14, 1, 15), float32],) {
  %55 = fn () -> (Tensor[(14, 1, 15), float32],) {
    %53 = @func_1550() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %54 = %53.0;
    (%54,)
  };
  %55() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_9069() -> (Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(40, 22), uint16]) {
  %56 = cast(meta[relay.Constant][2] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %57 = reshape(%56, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %58 = @func_2318(%57) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float32]) */;
  %59 = @func_7875() /* ty=(Tensor[(40, 22), int16], Tensor[(40, 22), bool]) */;
  %60 = %59.0;
  %61 = cast(%60, dtype="float32") /* ty=Tensor[(40, 22), float32] */;
  %62 = atanh(%61) /* ty=Tensor[(40, 22), float32] */;
  %63 = cast(%60, dtype="uint16") /* ty=Tensor[(40, 22), uint16] */;
  %64 = shape_of(%62, dtype="int32") /* ty=Tensor[(2), int32] */;
  %65 = cast(%62, dtype="uint16") /* ty=Tensor[(40, 22), uint16] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %67 = %58.1;
  %68 = subtract(%65, %66) /* ty=Tensor[(40, 22), uint16] */;
  (%67, meta[relay.Constant][2] /* ty=Tensor[(1680), float32] */, %68)
}

def @func_6186(%var_6171: Tensor[(14, 15, 15), float32]) -> (Tensor[(14, ?, 15), float32], Tensor[(14, 15, 15), uint8]) {
  %69 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %70 = %69.0;
  %71 = cast(meta[relay.Constant][3] /* ty=Tensor[(14, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(%70, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %75 = cast(meta[relay.Constant][3] /* ty=Tensor[(14, 1, 15), float32] */, dtype="uint8") /* ty=Tensor[(14, 1, 15), uint8] */;
  %76 = cast(%var_6171, dtype="uint8") /* ty=Tensor[(14, 15, 15), uint8] */;
  %77 = power(%73, %74) /* ty=Tensor[(14, ?, 15), float32] */;
  %78 = multiply(%75, %76) /* ty=Tensor[(14, 15, 15), uint8] */;
  (%77, %78)
}

def @func_5983() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  @func_5981() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_631() -> Tensor[(14, 1, 15), float32] {
  %79 = fn () -> Tensor[(14, 1, 15), float32] {
    @func_579() /* ty=Tensor[(14, 1, 15), float32] */
  };
  %79() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_6433() -> (Tensor[(14, 1, 15), float32],) {
  %80 = @func_4095() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %81 = %80.0;
  (%81,)
}

def @func_6596(%var_6595: Tensor[(12, 5, 16), float64]) -> (Tensor[(12, 5, 16), float64],) {
  %87 = fn (%var_6586: Tensor[(12, 5, 16), float64]) -> (Tensor[(12, 5, 16), float64],) {
    %82 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 16), float64] */;
    %83 = shape_of(%var_6586, dtype="int32") /* ty=Tensor[(3), int32] */;
    %84 = cast(%var_6586, dtype="float64") /* ty=Tensor[(12, 5, 16), float64] */;
    %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %86 = power(%84, %85) /* ty=Tensor[(12, 5, 16), float64] */;
    (%86,)
  };
  %87(%var_6595) /* ty=(Tensor[(12, 5, 16), float64],) */
}

def @func_604(%var_603: Tensor[(9, 4, 1), float64]) -> (Tensor[(9, 4, 1), float64], Tensor[(14, 1, 15), float32]) {
  %92 = fn (%var_588: Tensor[(9, 4, 1), float64]) -> (Tensor[(9, 4, 1), float64], Tensor[(14, 1, 15), float32]) {
    %88 = cast(%var_588, dtype="float64") /* ty=Tensor[(9, 4, 1), float64] */;
    %89 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %90 = erf(%88) /* ty=Tensor[(9, 4, 1), float64] */;
    %91 = %89.0;
    (%90, %91)
  };
  %92(%var_603) /* ty=(Tensor[(9, 4, 1), float64], Tensor[(14, 1, 15), float32]) */
}

def @func_5357(%var_5349: Tensor[(13, 7, 3), float32], %var_5350: Tensor[(13, 7, 3), float32]) -> (Tensor[(13, 7, 3), int16],) {
  %93 = cast(%var_5350, dtype="bool") /* ty=Tensor[(13, 7, 3), bool] */;
  %94 = shape_of(%var_5349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(%var_5349, dtype="bool") /* ty=Tensor[(13, 7, 3), bool] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %97 = less(%95, %96) /* ty=Tensor[(13, 7, 3), bool] */;
  %98 = cast(%var_5350, dtype="int16") /* ty=Tensor[(13, 7, 3), int16] */;
  %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%97, dtype="int16") /* ty=Tensor[(13, 7, 3), int16] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %102 = minimum(%100, %101) /* ty=Tensor[(13, 7, 3), int16] */;
  (%102,)
}

def @func_1452() -> (Tensor[(11, 10, 8), float32], Tensor[(14, 1, 15), float32]) {
  %103 = @func_947() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */;
  %104 = %103.1;
  %105 = cast(%104, dtype="float32") /* ty=Tensor[(11, 10, 8), float32] */;
  %106 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %107 = atan(%105) /* ty=Tensor[(11, 10, 8), float32] */;
  %108 = %106.0;
  (%107, %108)
}

def @func_1862() -> Tensor[(14, 1, 15), float32] {
  @func_1860() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_8899() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  @func_8897() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_6958() -> (Tensor[(14, 1, 15), float32],) {
  %109 = @func_1550() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %110 = %109.1;
  (%110,)
}

def @func_4452(%var_4451: Tensor[(3360), float64]) -> (Tensor[(14, 1, 15), float32], Tensor[(3360), float64], Tensor[(14, ?, 15), bool], Tensor[(14, ?, 15), int8], Tensor[(14, 1, 15), float32]) {
  %134 = fn (%var_4405: Tensor[(3360), float64]) -> (Tensor[(14, 1, 15), float32], Tensor[(3360), float64], Tensor[(14, ?, 15), bool], Tensor[(14, ?, 15), int8], Tensor[(14, 1, 15), float32]) {
    %111 = @func_1550() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %112 = %111.0;
    %113 = @func_782() /* ty=Tensor[(14, 1, 15), float32] */;
    %114 = cast(%113, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
    %115 = shape_of(%112, dtype="int32") /* ty=Tensor[(3), int32] */;
    %116 = cast(%112, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
    %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %118 = cast(%var_4405, dtype="float64") /* ty=Tensor[(3360), float64] */;
    %119 = reshape(%118, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
    %120 = @func_674(%119) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
    %121 = %120.0;
    %122 = @func_335() /* ty=Tensor[(14, 1, 15), float32] */;
    %123 = cast(%122, dtype="int8") /* ty=Tensor[(14, 1, 15), int8] */;
    %124 = shape_of(%121, dtype="int32") /* ty=Tensor[(3), int32] */;
    %125 = cast(%121, dtype="int8") /* ty=Tensor[(14, 1, 15), int8] */;
    %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %127 = cast(%var_4405, dtype="float64") /* ty=Tensor[(3360), float64] */;
    %128 = reshape(%127, newshape=[3360]) /* ty=Tensor[(3360), float64] */;
    %129 = @func_2098(%128) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(3360), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
    %130 = @func_4126() /* ty=Tensor[(14, 1, 15), float32] */;
    %131 = logical_and(%116, %117) /* ty=Tensor[(14, ?, 15), bool] */;
    %132 = maximum(%125, %126) /* ty=Tensor[(14, ?, 15), int8] */;
    %133 = %129.0;
    (%130, %var_4405, %131, %132, %133)
  };
  %134(%var_4451) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(3360), float64], Tensor[(14, ?, 15), bool], Tensor[(14, ?, 15), int8], Tensor[(14, 1, 15), float32]) */
}

def @func_7039() -> Tensor[(14, 1, 15), float64] {
  @func_7037() /* ty=Tensor[(14, 1, 15), float64] */
}

def @func_7010() -> Tensor[(14, 1, 15), float32] {
  @func_7008() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_7330() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  @func_7328() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_7699() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %137 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %135 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
    %136 = @func_4722() /* ty=Tensor[(14, 1, 15), float32] */;
    (%135, %136)
  };
  %137() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_2137(%var_2135: Tensor[(420), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32], Tensor[(14, ?, 15), uint64]) {
  @func_2134(%var_2135) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32], Tensor[(14, ?, 15), uint64]) */
}

def @func_1076() -> Tensor[(14, 1, 15), float32] {
  %139 = fn () -> Tensor[(14, 1, 15), float32] {
    %138 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %138.0
  };
  %139() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_5177() -> Tensor[(14, 1, 15), float32] {
  %140 = @func_2671() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %140.0
}

def @func_4317() -> (Tensor[(14, 1, 15), float32],) {
  @func_4315() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_1172() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %144 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %141 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %142 = %141.0;
    %143 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
    (%142, %143)
  };
  %144() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_7403(%var_7362: Tensor[(70, 6), float32], %var_7374: Tensor[(70, 6), uint16]) -> (Tensor[(14, 1, 15), float32], Tensor[(70, 6), bool], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) {
  %145 = cast(%var_7362, dtype="float32") /* ty=Tensor[(70, 6), float32] */;
  %146 = reshape(%145, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %147 = @func_2134(%146) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32], Tensor[(14, ?, 15), uint64]) */;
  %148 = %147.2;
  %149 = cast(%148, dtype="uint16") /* ty=Tensor[(420), uint16] */;
  %150 = shape_of(%var_7362, dtype="int32") /* ty=Tensor[(2), int32] */;
  %151 = cast(%var_7362, dtype="uint16") /* ty=Tensor[(70, 6), uint16] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %153 = multiply(%151, %152) /* ty=Tensor[(70, 6), uint16] */;
  %154 = cast(%var_7374, dtype="bool") /* ty=Tensor[(70, 6), bool] */;
  %155 = shape_of(%153, dtype="int32") /* ty=Tensor[(2), int32] */;
  %156 = cast(%153, dtype="bool") /* ty=Tensor[(70, 6), bool] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %158 = @func_947() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */;
  %159 = @func_5320() /* ty=Tensor[(14, 1, 15), float32] */;
  %160 = less(%156, %157) /* ty=Tensor[(70, 6), bool] */;
  %161 = %158.2;
  %162 = @func_335() /* ty=Tensor[(14, 1, 15), float32] */;
  (%159, %160, %161, %162)
}

def @func_971() -> Tensor[(14, 1, 15), float32] {
  %163 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %163.0
}

def @func_4582(%var_4580: Tensor[(1680), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32]) {
  @func_4579(%var_4580) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32]) */
}

def @func_2249(%var_2203: Tensor[(7, 16, 5), bool], %var_2204: Tensor[(7, 16, 5), bool]) -> (Tensor[(7, 16, 5), bool], Tensor[(14, 1, 15), float32]) {
  %164 = cast(%var_2204, dtype="bool") /* ty=Tensor[(7, 16, 5), bool] */;
  %165 = shape_of(%var_2203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(%var_2203, dtype="bool") /* ty=Tensor[(7, 16, 5), bool] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %168 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %169 = logical_and(%166, %167) /* ty=Tensor[(7, 16, 5), bool] */;
  %170 = %168.0;
  (%169, %170)
}

def @func_9614(%var_9568: Tensor[(14, 1, 15), float32]) -> (Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %171 = @func_3828() /* ty=Tensor[(14, 1, 15), float32] */;
  %172 = cast(%var_9568, dtype="int32") /* ty=Tensor[(14, 1, 15), int32] */;
  %173 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%171, dtype="int32") /* ty=Tensor[(14, 1, 15), int32] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %176 = right_shift(%174, %175) /* ty=Tensor[(14, ?, 15), int32] */;
  %177 = cast(%var_9568, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %178 = shape_of(%176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%176, dtype="float32") /* ty=Tensor[(14, ?, 15), float32] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %181 = floor_divide(%179, %180) /* ty=Tensor[(14, ?, 15), float32] */;
  %182 = @func_5177() /* ty=Tensor[(14, 1, 15), float32] */;
  %183 = @func_388() /* ty=Tensor[(14, 1, 15), float32] */;
  (%181, %182, %183)
}

def @main(%var_9694: Tensor[(420), float32]) -> (Tensor[(1, 9, 3), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(420), float32], Tensor[(11, 10, 8), float64], Tensor[(14, ?, 15), bool]) {
  %184 = @func_5799() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %185 = cast(meta[relay.Constant][5] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %186 = reshape(%185, newshape=[1680, 1]) /* ty=Tensor[(1680, 1), float32] */;
  %187 = @func_2377(%186) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1680, 15), bool]) */;
  %188 = @func_5746() /* ty=(Tensor[(3360), float64], Tensor[(14, ?, 15), bool], Tensor[(11, 10, 8), float64]) */;
  %189 = @func_1270() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %190 = %189.2;
  %191 = cast(%var_9694, dtype="float32") /* ty=Tensor[(420), float32] */;
  %192 = reshape(%191, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %193 = @func_4780(%192) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32], Tensor[(420), float32]) */;
  %194 = %193.0;
  %195 = cast(%194, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %196 = shape_of(%190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %197 = cast(%190, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %199 = %184.0;
  %200 = %187.0;
  %201 = %188.2;
  %202 = greater_equal(%197, %198) /* ty=Tensor[(14, ?, 15), bool] */;
  (%199, %200, meta[relay.Constant][5] /* ty=Tensor[(1680), float32] */, %var_9694, %201, %202)
}

def @func_4898() -> (Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), uint64]) {
  %203 = @func_1860() /* ty=Tensor[(14, 1, 15), float32] */;
  %204 = cast(%203, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %205 = reshape(%204, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), float32] */;
  %206 = @func_1590(%205) /* ty=(Tensor[(14, ?, 15), uint64], Tensor[(14, 1, 15), float32]) */;
  %207 = %206.0;
  (%203, %207)
}

def @func_7793() -> Tensor[(14, 1, 15), float32] {
  %209 = fn () -> Tensor[(14, 1, 15), float32] {
    %208 = @func_2548() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(40, 22), bool]) */;
    %208.0
  };
  %209() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_9115(%var_9114: Tensor[(1680), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(1680), float32]) {
  %216 = fn (%var_9111: Tensor[(1680), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(1680), float32]) {
    %210 = @func_3216() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %211 = cast(%var_9111, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %212 = reshape(%211, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
    %213 = @func_3954(%212) /* ty=(Tensor[(14, ?, 15), int64], Tensor[(11, 10, 8), float64], Tensor[(14, 1, 15), float32], Tensor[(1680), float32]) */;
    %214 = %210.0;
    %215 = %213.3;
    (%214, %215, %var_9111)
  };
  %216(%var_9114) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(1680), float32]) */
}

def @func_8952() -> (Tensor[(7, 16, 5), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %228 = fn () -> (Tensor[(7, 16, 5), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %217 = @func_7255() /* ty=(Tensor[(7, 16, 5), bool], Tensor[(560), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 11, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %218 = %217.0;
    %219 = cast(%218, dtype="bool") /* ty=Tensor[(7, 16, 5), bool] */;
    %220 = cast(%218, dtype="bool") /* ty=Tensor[(7, 16, 5), bool] */;
    %221 = reshape(%219, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), bool] */;
    %222 = reshape(%220, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), bool] */;
    %223 = @func_2249(%221, %222) /* ty=(Tensor[(7, 16, 5), bool], Tensor[(14, 1, 15), float32]) */;
    %224 = @func_1550() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %225 = %223.1;
    %226 = %224.1;
    %227 = @func_4180() /* ty=Tensor[(14, 1, 15), float32] */;
    (%218, %225, %226, %227)
  };
  %228() /* ty=(Tensor[(7, 16, 5), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_9071() -> (Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(40, 22), uint16]) {
  @func_9069() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(40, 22), uint16]) */
}

def @func_9200() -> Tensor[(14, 1, 15), float32] {
  %229 = @func_1452() /* ty=(Tensor[(11, 10, 8), float32], Tensor[(14, 1, 15), float32]) */;
  %229.1
}

def @func_6313() -> (Tensor[(14, 1, 15), float32],) {
  @func_6311() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_9644() -> (Tensor[(14, 1, 15), float32],) {
  %232 = fn () -> (Tensor[(14, 1, 15), float32],) {
    %230 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %231 = %230.0;
    (%231,)
  };
  %232() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_4780(%var_4779: Tensor[(420), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32], Tensor[(420), float32]) {
  %241 = fn (%var_4775: Tensor[(420), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32], Tensor[(420), float32]) {
    %233 = @func_1269() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %234 = cast(%var_4775, dtype="float32") /* ty=Tensor[(420), float32] */;
    %235 = reshape(%234, newshape=[420]) /* ty=Tensor[(420), float32] */;
    %236 = @func_2853(%235) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32]) */;
    %237 = %233.1;
    %238 = @func_4180() /* ty=Tensor[(14, 1, 15), float32] */;
    %239 = @func_1075() /* ty=Tensor[(14, 1, 15), float32] */;
    %240 = %236.3;
    (%237, %238, %239, %240, %var_4775)
  };
  %241(%var_4779) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32], Tensor[(420), float32]) */
}

def @func_784() -> Tensor[(14, 1, 15), float32] {
  @func_782() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_4181() -> Tensor[(14, 1, 15), float32] {
  %242 = fn () -> Tensor[(14, 1, 15), float32] {
    @func_421() /* ty=Tensor[(14, 1, 15), float32] */
  };
  %242() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_947() -> (Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) {
  %243 = cast(meta[relay.Constant][6] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %244 = cast(meta[relay.Constant][6] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %245 = reshape(%243, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %246 = reshape(%244, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %247 = @func_54(%245, %246) /* ty=(Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float64]) */;
  %248 = cast(meta[relay.Constant][7] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %249 = reshape(%248, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
  %250 = @func_674(%249) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
  %251 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  %252 = %247.1;
  %253 = %250.0;
  (%251, %252, meta[relay.Constant][6] /* ty=Tensor[(880), bool] */, %253, meta[relay.Constant][7] /* ty=Tensor[(3360), float64] */)
}

def @func_9293(%var_9281: Tensor[(3, 13, 13), uint16], %var_9282: Tensor[(3, 13, 13), uint16]) -> (Tensor[(3, 13, 13), uint16],) {
  %254 = cast(%var_9282, dtype="uint16") /* ty=Tensor[(3, 13, 13), uint16] */;
  %255 = shape_of(%var_9281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%var_9281, dtype="uint16") /* ty=Tensor[(3, 13, 13), uint16] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %258 = right_shift(%256, %257) /* ty=Tensor[(3, 13, 13), uint16] */;
  (%258,)
}

def @func_6311() -> (Tensor[(14, 1, 15), float32],) {
  %259 = @func_2469() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %260 = %259.0;
  (%260,)
}

def @func_210() -> (Tensor[(14, 1, 15), float32],) {
  %263 = fn () -> (Tensor[(14, 1, 15), float32],) {
    %261 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %262 = %261.0;
    (%262,)
  };
  %263() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_8029() -> (Tensor[(14, 1, 15), float32],) {
  %264 = @func_4180() /* ty=Tensor[(14, 1, 15), float32] */;
  (%264,)
}

def @func_3797() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %272 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %265 = @func_1743() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %266 = @func_2949() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %267 = @func_2421() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %268 = %265.0;
    %269 = %266.0;
    %270 = @func_971() /* ty=Tensor[(14, 1, 15), float32] */;
    %271 = %267.0;
    (%268, %269, %270, %271)
  };
  %272() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_6274(%var_6264: Tensor[(14, 11, 15), float32]) -> (Tensor[(14, 11, 15), uint8],) {
  %273 = @func_3585() /* ty=(Tensor[(14, ?, 15), float64], Tensor[(14, 11, 15), float32]) */;
  %274 = %273.1;
  %275 = cast(%var_6264, dtype="uint8") /* ty=Tensor[(14, 11, 15), uint8] */;
  %276 = shape_of(%274, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%274, dtype="uint8") /* ty=Tensor[(14, 11, 15), uint8] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %279 = left_shift(%277, %278) /* ty=Tensor[(14, 11, 15), uint8] */;
  (%279,)
}

def @func_3707() -> (Tensor[(14, 1, 15), float32],) {
  @func_3705() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_5746() -> (Tensor[(3360), float64], Tensor[(14, ?, 15), bool], Tensor[(11, 10, 8), float64]) {
  @func_5744() /* ty=(Tensor[(3360), float64], Tensor[(14, ?, 15), bool], Tensor[(11, 10, 8), float64]) */
}

def @func_1646(%var_1625: int64) -> (Tensor[(4, 2, 9), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(36), float64], Tensor[(14, 1, 15), float32]) {
  %280 = cast(%var_1625, dtype="bool") /* ty=bool */;
  %281 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 2, 9), int64] */, dtype="bool") /* ty=Tensor[(4, 2, 9), bool] */;
  %282 = cast(meta[relay.Constant][9] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %283 = reshape(%282, newshape=[9, 4, 1]) /* ty=Tensor[(9, 4, 1), float64] */;
  %284 = @func_602(%283) /* ty=(Tensor[(9, 4, 1), float64], Tensor[(14, 1, 15), float32]) */;
  %285 = greater_equal(%280, %281) /* ty=Tensor[(4, 2, 9), bool] */;
  %286 = @func_630() /* ty=Tensor[(14, 1, 15), float32] */;
  %287 = %284.1;
  %288 = @func_630() /* ty=Tensor[(14, 1, 15), float32] */;
  (%285, %286, %287, meta[relay.Constant][9] /* ty=Tensor[(36), float64] */, %288)
}

def @func_1860() -> Tensor[(14, 1, 15), float32] {
  %289 = @func_947() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */;
  %289.3
}

def @func_6550() -> (Tensor[(13, 6, 5), bool], Tensor[(14, 1, 15), float32], Tensor[(13, 6, 5), float64], Tensor[(14, 1, 15), float64]) {
  @func_6548() /* ty=(Tensor[(13, 6, 5), bool], Tensor[(14, 1, 15), float32], Tensor[(13, 6, 5), float64], Tensor[(14, 1, 15), float64]) */
}

def @func_189() -> (Tensor[(14, 1, 15), float32],) {
  %292 = fn () -> (Tensor[(14, 1, 15), float32],) {
    %290 = cast(meta[relay.Constant][10] /* ty=Tensor[(14, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
    %291 = sin(%290) /* ty=Tensor[(14, 1, 15), float32] */;
    (%291,)
  };
  %292() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_1270() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %298 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %293 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %294 = @func_1202() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %295 = @func_388() /* ty=Tensor[(14, 1, 15), float32] */;
    %296 = %293.0;
    %297 = %294.0;
    (%295, %296, %297)
  };
  %298() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_1495(%var_1471: Tensor[(14, 2, 15), float32]) -> (Tensor[(14, 2, 15), uint8], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %299 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %300 = %299.0;
  %301 = cast(%300, dtype="uint8") /* ty=Tensor[(14, 1, 15), uint8] */;
  %302 = cast(%var_1471, dtype="uint8") /* ty=Tensor[(14, 2, 15), uint8] */;
  %303 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %304 = @func_1171() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %305 = minimum(%301, %302) /* ty=Tensor[(14, 2, 15), uint8] */;
  %306 = %303.0;
  %307 = %304.1;
  (%305, %306, %307)
}

def @func_2727() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %312 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %308 = @func_1550() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %309 = %308.0;
    %310 = @func_971() /* ty=Tensor[(14, 1, 15), float32] */;
    %311 = @func_335() /* ty=Tensor[(14, 1, 15), float32] */;
    (%309, %310, %311)
  };
  %312() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_3746() -> Tensor[(14, 1, 15), float64] {
  %315 = fn () -> Tensor[(14, 1, 15), float64] {
    %313 = @func_1860() /* ty=Tensor[(14, 1, 15), float32] */;
    %314 = cast(%313, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
    asinh(%314) /* ty=Tensor[(14, 1, 15), float64] */
  };
  %315() /* ty=Tensor[(14, 1, 15), float64] */
}

def @func_6810() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %320 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %316 = @func_6714() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %317 = @func_2469() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %318 = %316.0;
    %319 = %317.0;
    (%318, %319)
  };
  %320() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_7256() -> (Tensor[(7, 16, 5), bool], Tensor[(560), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 11, 15), float32], Tensor[(14, 1, 15), float32]) {
  %350 = fn () -> (Tensor[(7, 16, 5), bool], Tensor[(560), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 11, 15), float32], Tensor[(14, 1, 15), float32]) {
    %321 = cast(meta[relay.Constant][11] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
    %322 = cast(meta[relay.Constant][11] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
    %323 = reshape(%321, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), bool] */;
    %324 = reshape(%322, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), bool] */;
    %325 = @func_2249(%323, %324) /* ty=(Tensor[(7, 16, 5), bool], Tensor[(14, 1, 15), float32]) */;
    %326 = @func_5774() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %327 = @func_6127() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %328 = @func_3162() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(2310), float32]) */;
    %329 = %326.0;
    %330 = cast(%329, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
    %331 = reshape(%330, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), float32] */;
    %332 = @func_1590(%331) /* ty=(Tensor[(14, ?, 15), uint64], Tensor[(14, 1, 15), float32]) */;
    %333 = @func_3585() /* ty=(Tensor[(14, ?, 15), float64], Tensor[(14, 11, 15), float32]) */;
    %334 = %333.1;
    %335 = cast(%334, dtype="float32") /* ty=Tensor[(14, 11, 15), float32] */;
    %336 = sqrt(%335) /* ty=Tensor[(14, 11, 15), float32] */;
    %337 = cast(%336, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
    %338 = asin(%337) /* ty=Tensor[(14, 11, 15), float64] */;
    %339 = cast(%338, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
    %340 = atanh(%339) /* ty=Tensor[(14, 11, 15), float64] */;
    %341 = cast(%340, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
    %342 = rsqrt(%341) /* ty=Tensor[(14, 11, 15), float64] */;
    %343 = cast(%342, dtype="float32") /* ty=Tensor[(14, 11, 15), float32] */;
    %344 = %325.0;
    %345 = %327.0;
    %346 = %328.1;
    %347 = %332.1;
    %348 = erf(%343) /* ty=Tensor[(14, 11, 15), float32] */;
    %349 = @func_6578() /* ty=Tensor[(14, 1, 15), float32] */;
    (%344, meta[relay.Constant][11] /* ty=Tensor[(560), bool] */, %329, %345, %346, %347, %348, %349)
  };
  %350() /* ty=(Tensor[(7, 16, 5), bool], Tensor[(560), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 11, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_5431() -> (Tensor[(4, 4, 11), float64], Tensor[(14, 11, 15), float64], Tensor[(2310), float32], Tensor[(2, 440), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %362 = fn () -> (Tensor[(4, 4, 11), float64], Tensor[(14, 11, 15), float64], Tensor[(2310), float32], Tensor[(2, 440), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %351 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(4, 4, 11), float64] */;
    %352 = cast(meta[relay.Constant][13] /* ty=Tensor[(2310), float32] */, dtype="float32") /* ty=Tensor[(2310), float32] */;
    %353 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 440), bool] */, dtype="bool") /* ty=Tensor[(2, 440), bool] */;
    %354 = reshape(%352, newshape=[14, 11, 15]) /* ty=Tensor[(14, 11, 15), float32] */;
    %355 = reshape(%353, newshape=[880]) /* ty=Tensor[(880), bool] */;
    %356 = @func_864(%354, %355) /* ty=(Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 11, 15), float64]) */;
    %357 = @func_4315() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %358 = log(%351) /* ty=Tensor[(4, 4, 11), float64] */;
    %359 = %356.2;
    %360 = %357.0;
    %361 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
    (%358, %359, meta[relay.Constant][13] /* ty=Tensor[(2310), float32] */, meta[relay.Constant][14] /* ty=Tensor[(2, 440), bool] */, %360, %361)
  };
  %362() /* ty=(Tensor[(4, 4, 11), float64], Tensor[(14, 11, 15), float64], Tensor[(2310), float32], Tensor[(2, 440), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_1828() -> (Tensor[(14, 1, 15), float32],) {
  %365 = fn () -> (Tensor[(14, 1, 15), float32],) {
    %363 = @func_1743() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %364 = %363.0;
    (%364,)
  };
  %365() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_8772() -> Tensor[(14, 16, 15), uint16] {
  %366 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %367 = %366.0;
  %368 = cast(%367, dtype="uint16") /* ty=Tensor[(14, 1, 15), uint16] */;
  %369 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 16, 15), float32] */, dtype="uint16") /* ty=Tensor[(14, 16, 15), uint16] */;
  bitwise_or(%368, %369) /* ty=Tensor[(14, 16, 15), uint16] */
}

def @func_868(%var_866: Tensor[(14, 11, 15), float32], %var_867: Tensor[(880), bool]) -> (Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 11, 15), float64]) {
  @func_864(%var_866, %var_867) /* ty=(Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 11, 15), float64]) */
}

def @func_2320(%var_2319: Tensor[(1680), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float32]) {
  %384 = fn (%var_2303: Tensor[(1680), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float32]) {
    %370 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %371 = @func_2053() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %372 = @func_947() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */;
    %373 = cast(%var_2303, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %374 = reshape(%373, newshape=[14, 8, 15]) /* ty=Tensor[(14, 8, 15), float32] */;
    %375 = @func_497(%374) /* ty=(Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %376 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %377 = @func_1452() /* ty=(Tensor[(11, 10, 8), float32], Tensor[(14, 1, 15), float32]) */;
    %378 = %370.0;
    %379 = %371.1;
    %380 = %372.3;
    %381 = %375.5;
    %382 = %376.3;
    %383 = %377.0;
    (%378, %379, %380, %381, %var_2303, %382, %383)
  };
  %384(%var_2319) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float32]) */
}

def @func_8097() -> (Tensor[(3360), float64],) {
  %385 = @func_3663() /* ty=(Tensor[(11, 10, 8), float64], Tensor[(3360), float64], Tensor[(3360), float64]) */;
  %386 = %385.2;
  (%386,)
}

def @func_7500() -> (Tensor[(14, ?, 15), bool],) {
  @func_7498() /* ty=(Tensor[(14, ?, 15), bool],) */
}

def @func_6128() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %390 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %387 = @func_1452() /* ty=(Tensor[(11, 10, 8), float32], Tensor[(14, 1, 15), float32]) */;
    %388 = @func_6014() /* ty=Tensor[(14, 1, 15), float32] */;
    %389 = %387.1;
    (%388, %389)
  };
  %390() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_7091(%var_7089: Tensor[(3, 66), float64], %var_7090: Tensor[(3, 66), float64]) -> (Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 6, 3), float64], Tensor[(3, 66), uint16], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  @func_7087(%var_7089, %var_7090) /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 6, 3), float64], Tensor[(3, 66), uint16], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_2471() -> (Tensor[(14, 1, 15), float32],) {
  @func_2469() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_1202() -> (Tensor[(14, 1, 15), float32],) {
  %391 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %392 = %391.0;
  (%392,)
}

def @func_3217() -> (Tensor[(14, 1, 15), float32],) {
  %394 = fn () -> (Tensor[(14, 1, 15), float32],) {
    %393 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
    (%393,)
  };
  %394() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_6627(%var_6625: Tensor[(14, 12, 15), float32], %var_6626: Tensor[(14, 12, 15), bool]) -> (Tensor[(14, 12, 15), bool],) {
  %405 = fn (%var_6611: Tensor[(14, 12, 15), float32], %var_6617: Tensor[(14, 12, 15), bool]) -> (Tensor[(14, 12, 15), bool],) {
    %395 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %396 = %395.0;
    %397 = cast(%396, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
    %398 = cast(%var_6611, dtype="bool") /* ty=Tensor[(14, 12, 15), bool] */;
    %399 = not_equal(%397, %398) /* ty=Tensor[(14, 12, 15), bool] */;
    %400 = cast(%var_6617, dtype="bool") /* ty=Tensor[(14, 12, 15), bool] */;
    %401 = shape_of(%399, dtype="int32") /* ty=Tensor[(3), int32] */;
    %402 = cast(%399, dtype="bool") /* ty=Tensor[(14, 12, 15), bool] */;
    %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %404 = less(%402, %403) /* ty=Tensor[(14, 12, 15), bool] */;
    (%404,)
  };
  %405(%var_6625, %var_6626) /* ty=(Tensor[(14, 12, 15), bool],) */
}

def @func_6906(%var_6905: Tensor[(1680), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float64]) {
  %413 = fn (%var_6859: Tensor[(1680), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float64]) {
    %406 = cast(%var_6859, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %407 = reshape(%406, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
    %408 = @func_2318(%407) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float32]) */;
    %409 = cast(%var_6859, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %410 = @func_4553() /* ty=Tensor[(14, 1, 15), float32] */;
    %411 = %408.2;
    %412 = rsqrt(%409) /* ty=Tensor[(1680), float64] */;
    (%410, %411, %412)
  };
  %413(%var_6905) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float64]) */
}

def @func_9365(%var_9352: Tensor[(8, 2, 13), uint16], %var_9353: Tensor[(8, 2, 13), uint16]) -> (Tensor[(8, 2, 13), bool], Tensor[(8, 2, 13), float32]) {
  %414 = cast(%var_9353, dtype="bool") /* ty=Tensor[(8, 2, 13), bool] */;
  %415 = shape_of(%var_9352, dtype="int32") /* ty=Tensor[(3), int32] */;
  %416 = cast(%var_9352, dtype="bool") /* ty=Tensor[(8, 2, 13), bool] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %418 = cast(%var_9353, dtype="float32") /* ty=Tensor[(8, 2, 13), float32] */;
  %419 = cosh(%418) /* ty=Tensor[(8, 2, 13), float32] */;
  %420 = cast(%419, dtype="float32") /* ty=Tensor[(8, 2, 13), float32] */;
  %421 = less(%416, %417) /* ty=Tensor[(8, 2, 13), bool] */;
  %422 = log2(%420) /* ty=Tensor[(8, 2, 13), float32] */;
  (%421, %422)
}

def @func_7101(%var_7100: Tensor[(4, 1, 12), float32]) -> (Tensor[(4, 1, 12), float32],) {
  %425 = fn (%var_7093: Tensor[(4, 1, 12), float32]) -> (Tensor[(4, 1, 12), float32],) {
    %423 = cast(%var_7093, dtype="float32") /* ty=Tensor[(4, 1, 12), float32] */;
    %424 = exp(%423) /* ty=Tensor[(4, 1, 12), float32] */;
    (%424,)
  };
  %425(%var_7100) /* ty=(Tensor[(4, 1, 12), float32],) */
}

def @func_9249() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %429 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %426 = @func_3705() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %427 = @func_6578() /* ty=Tensor[(14, 1, 15), float32] */;
    %428 = %426.0;
    (%427, %428)
  };
  %429() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_7751() -> (Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32]) {
  %433 = fn () -> (Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32]) {
    %430 = @func_7498() /* ty=(Tensor[(14, ?, 15), bool],) */;
    %431 = %430.0;
    %432 = @func_4553() /* ty=Tensor[(14, 1, 15), float32] */;
    (%431, %432)
  };
  %433() /* ty=(Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32]) */
}

def @func_5776() -> (Tensor[(14, 1, 15), float32],) {
  @func_5774() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_864(%var_826: Tensor[(14, 11, 15), float32], %var_845: Tensor[(880), bool]) -> (Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 11, 15), float64]) {
  %434 = cast(%var_845, dtype="bool") /* ty=Tensor[(880), bool] */;
  %435 = cast(%var_845, dtype="bool") /* ty=Tensor[(880), bool] */;
  %436 = reshape(%434, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %437 = reshape(%435, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %438 = @func_54(%436, %437) /* ty=(Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float64]) */;
  %439 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %440 = %439.0;
  %441 = cast(%440, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %442 = cast(%var_826, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
  %443 = logical_and(%441, %442) /* ty=Tensor[(14, 11, 15), bool] */;
  %444 = cast(%443, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
  %445 = %438.1;
  %446 = cosh(%444) /* ty=Tensor[(14, 11, 15), float64] */;
  (%445, %var_845, %446)
}

def @func_3957(%var_3955: Tensor[(1680), float32]) -> (Tensor[(14, ?, 15), int64], Tensor[(11, 10, 8), float64], Tensor[(14, 1, 15), float32], Tensor[(1680), float32]) {
  @func_3954(%var_3955) /* ty=(Tensor[(14, ?, 15), int64], Tensor[(11, 10, 8), float64], Tensor[(14, 1, 15), float32], Tensor[(1680), float32]) */
}

def @func_6650() -> Tensor[(14, 1, 15), float32] {
  %447 = fn () -> Tensor[(14, 1, 15), float32] {
    @func_6014() /* ty=Tensor[(14, 1, 15), float32] */
  };
  %447() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_9320() -> (Tensor[(1, 9, 3), float32],) {
  @func_9318() /* ty=(Tensor[(1, 9, 3), float32],) */
}

def @func_2054() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %450 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %448 = @func_1860() /* ty=Tensor[(14, 1, 15), float32] */;
    %449 = @func_388() /* ty=Tensor[(14, 1, 15), float32] */;
    (%448, %449)
  };
  %450() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_2688() -> (Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32]) {
  %451 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
  %452 = cast(%451, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
  %453 = @func_1827() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %454 = cos(%452) /* ty=Tensor[(14, 1, 15), float64] */;
  %455 = %453.0;
  (%454, %455)
}

def @func_500(%var_498: Tensor[(14, 8, 15), float32]) -> (Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  @func_497(%var_498) /* ty=(Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_5455() -> (Tensor[(2310), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool]) {
  %456 = @func_3162() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(2310), float32]) */;
  %457 = cast(meta[relay.Constant][16] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %458 = cast(meta[relay.Constant][16] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %459 = reshape(%457, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %460 = reshape(%458, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %461 = @func_54(%459, %460) /* ty=(Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float64]) */;
  %462 = %456.3;
  %463 = %461.1;
  (%462, %463, meta[relay.Constant][16] /* ty=Tensor[(880), bool] */)
}

def @func_5827() -> (Tensor[(14, 1, 15), float32], Tensor[(9, 4, 1), float64], Tensor[(18, 2), float64]) {
  %464 = cast(meta[relay.Constant][17] /* ty=Tensor[(18, 2), float64] */, dtype="float64") /* ty=Tensor[(18, 2), float64] */;
  %465 = reshape(%464, newshape=[9, 4, 1]) /* ty=Tensor[(9, 4, 1), float64] */;
  %466 = @func_602(%465) /* ty=(Tensor[(9, 4, 1), float64], Tensor[(14, 1, 15), float32]) */;
  %467 = @func_630() /* ty=Tensor[(14, 1, 15), float32] */;
  %468 = %466.0;
  (%467, %468, meta[relay.Constant][17] /* ty=Tensor[(18, 2), float64] */)
}

def @func_1008(%var_1005: float64, %var_1006: Tensor[(3, 11, 16), float64], %var_1007: Tensor[(420, 8), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420, 8), float64]) {
  %477 = fn (%var_979: float64, %var_980: Tensor[(3, 11, 16), float64], %var_1002: Tensor[(420, 8), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420, 8), float64]) {
    %469 = cast(%var_979, dtype="float64") /* ty=float64 */;
    %470 = cast(%var_980, dtype="float64") /* ty=Tensor[(3, 11, 16), float64] */;
    %471 = cast(%var_1002, dtype="float64") /* ty=Tensor[(420, 8), float64] */;
    %472 = reshape(%471, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
    %473 = @func_674(%472) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
    %474 = divide(%469, %470) /* ty=Tensor[(3, 11, 16), float64] */;
    %475 = @func_335() /* ty=Tensor[(14, 1, 15), float32] */;
    %476 = %473.0;
    (%474, %475, %476, %var_1002)
  };
  %477(%var_1005, %var_1006, %var_1007) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420, 8), float64]) */
}

def @func_5263(%var_5228: Tensor[(420, 1), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 420, 15), float32]) {
  %478 = cast(%var_5228, dtype="float32") /* ty=Tensor[(420, 1), float32] */;
  %479 = reshape(%478, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %480 = @func_2134(%479) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32], Tensor[(14, ?, 15), uint64]) */;
  %481 = @func_3796() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %482 = %481.2;
  %483 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 1, 15), float32] */, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %484 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%482, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %487 = logical_or(%485, %486) /* ty=Tensor[(14, ?, 15), bool] */;
  %488 = cast(%var_5228, dtype="float32") /* ty=Tensor[(420, 1), float32] */;
  %489 = cast(%487, dtype="float32") /* ty=Tensor[(14, ?, 15), float32] */;
  %490 = %480.1;
  %491 = power(%488, %489) /* ty=Tensor[(14, 420, 15), float32] */;
  (%490, %491)
}

def @func_4315() -> (Tensor[(14, 1, 15), float32],) {
  %492 = @func_782() /* ty=Tensor[(14, 1, 15), float32] */;
  (%492,)
}

def @func_57(%var_55: Tensor[(11, 10, 8), bool], %var_56: Tensor[(11, 10, 8), bool]) -> (Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float64]) {
  %500 = fn (%var_24: Tensor[(11, 10, 8), bool], %var_25: Tensor[(11, 10, 8), bool]) -> (Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float64]) {
    %493 = cast(%var_25, dtype="bool") /* ty=Tensor[(11, 10, 8), bool] */;
    %494 = shape_of(%var_24, dtype="int32") /* ty=Tensor[(3), int32] */;
    %495 = cast(%var_24, dtype="bool") /* ty=Tensor[(11, 10, 8), bool] */;
    %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %497 = cast(%var_24, dtype="float64") /* ty=Tensor[(11, 10, 8), float64] */;
    %498 = logical_and(%495, %496) /* ty=Tensor[(11, 10, 8), bool] */;
    %499 = exp(%497) /* ty=Tensor[(11, 10, 8), float64] */;
    (%498, %499)
  };
  %500(%var_55, %var_56) /* ty=(Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float64]) */
}

def @func_3829() -> Tensor[(14, 1, 15), float32] {
  %502 = fn () -> Tensor[(14, 1, 15), float32] {
    %501 = @func_2053() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %501.1
  };
  %502() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_1803() -> Tensor[(14, 1, 15), float32] {
  %503 = fn () -> Tensor[(14, 1, 15), float32] {
    @func_971() /* ty=Tensor[(14, 1, 15), float32] */
  };
  %503() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_8702() -> (Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32], Tensor[(1, 9, 3), float32], Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %516 = fn () -> (Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32], Tensor[(1, 9, 3), float32], Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %504 = @func_7750() /* ty=(Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32]) */;
    %505 = @func_7328() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %506 = @func_5798() /* ty=(Tensor[(1, 9, 3), float32],) */;
    %507 = @func_5744() /* ty=(Tensor[(3360), float64], Tensor[(14, ?, 15), bool], Tensor[(11, 10, 8), float64]) */;
    %508 = @func_5981() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %509 = @func_2053() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %510 = %504.0;
    %511 = %505.0;
    %512 = %506.0;
    %513 = %507.1;
    %514 = %508.0;
    %515 = %509.0;
    (%510, %511, %512, %513, %514, %515)
  };
  %516() /* ty=(Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32], Tensor[(1, 9, 3), float32], Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_390() -> Tensor[(14, 1, 15), float32] {
  @func_388() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_1204() -> (Tensor[(14, 1, 15), float32],) {
  @func_1202() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_7969(%var_7961: Tensor[(14, 11, 15), float32]) -> (Tensor[(14, 11, 15), uint32],) {
  %517 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %518 = %517.0;
  %519 = cast(%518, dtype="uint32") /* ty=Tensor[(14, 1, 15), uint32] */;
  %520 = cast(%var_7961, dtype="uint32") /* ty=Tensor[(14, 11, 15), uint32] */;
  %521 = bitwise_xor(%519, %520) /* ty=Tensor[(14, 11, 15), uint32] */;
  (%521,)
}

def @func_4722() -> Tensor[(14, 1, 15), float32] {
  %522 = @func_1269() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %522.0
}

def @func_1551() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %526 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %523 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %524 = %523.0;
    %525 = @func_971() /* ty=Tensor[(14, 1, 15), float32] */;
    (%524, %525)
  };
  %526() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_5497() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %531 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %527 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %528 = @func_4315() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %529 = %527.0;
    %530 = %528.0;
    (%529, %530)
  };
  %531() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_2469() -> (Tensor[(14, 1, 15), float32],) {
  %532 = @func_782() /* ty=Tensor[(14, 1, 15), float32] */;
  (%532,)
}

def @func_3750() -> (Tensor[(14, 1, 15), float32],) {
  %535 = fn () -> (Tensor[(14, 1, 15), float32],) {
    %533 = @func_3273() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %534 = %533.1;
    (%534,)
  };
  %535() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_7087(%var_7071: Tensor[(3, 66), float64], %var_7073: Tensor[(3, 66), float64]) -> (Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 6, 3), float64], Tensor[(3, 66), uint16], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %536 = @func_1827() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %537 = cast(%var_7071, dtype="float64") /* ty=Tensor[(3, 66), float64] */;
  %538 = reshape(%537, newshape=[11, 6, 3]) /* ty=Tensor[(11, 6, 3), float64] */;
  %539 = cast(%var_7073, dtype="uint16") /* ty=Tensor[(3, 66), uint16] */;
  %540 = shape_of(%var_7071, dtype="int32") /* ty=Tensor[(2), int32] */;
  %541 = cast(%var_7071, dtype="uint16") /* ty=Tensor[(3, 66), uint16] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %543 = @func_5529() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %544 = @func_7037() /* ty=Tensor[(14, 1, 15), float64] */;
  %545 = %536.0;
  %546 = @func_5617(%538) /* ty=Tensor[(11, 6, 3), float64] */;
  %547 = bitwise_xor(%541, %542) /* ty=Tensor[(3, 66), uint16] */;
  %548 = %543.1;
  %549 = @func_782() /* ty=Tensor[(14, 1, 15), float32] */;
  (%544, %545, %546, %547, %548, %549)
}

def @func_949() -> (Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) {
  @func_947() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */
}

def @func_676(%var_675: Tensor[(14, 16, 15), float64]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) {
  %558 = fn (%var_668: Tensor[(14, 16, 15), float64]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) {
    %550 = @func_388() /* ty=Tensor[(14, 1, 15), float32] */;
    %551 = cast(%550, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
    %552 = sigmoid(%551) /* ty=Tensor[(14, 1, 15), float64] */;
    %553 = cast(%552, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
    %554 = cast(%var_668, dtype="float64") /* ty=Tensor[(14, 16, 15), float64] */;
    %555 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
    %556 = @func_388() /* ty=Tensor[(14, 1, 15), float32] */;
    %557 = subtract(%553, %554) /* ty=Tensor[(14, 16, 15), float64] */;
    (%555, %556, %557)
  };
  %558(%var_675) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */
}

def @func_8031() -> (Tensor[(14, 1, 15), float32],) {
  @func_8029() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_5179() -> Tensor[(14, 1, 15), float32] {
  @func_5177() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_2034() -> (Tensor[(14, ?, 15), int8], Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32]) {
  @func_2032() /* ty=(Tensor[(14, ?, 15), int8], Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32]) */
}

def @func_6081() -> (Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  @func_6079() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_5320() -> Tensor[(14, 1, 15), float32] {
  %559 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %559.0
}

def @func_7037() -> Tensor[(14, 1, 15), float64] {
  %560 = @func_2688() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32]) */;
  %560.0
}

def @func_2949() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %561 = @func_1171() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %562 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  %563 = %561.1;
  (%562, %563)
}

def @func_6578() -> Tensor[(14, 1, 15), float32] {
  %564 = @func_1171() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %564.1
}

def @func_4743(%var_4741: Tensor[(1, 12, 14), float32]) -> (Tensor[(1, 12, 14), float32],) {
  @func_4740(%var_4741) /* ty=(Tensor[(1, 12, 14), float32],) */
}

def @func_5673(%var_5671: Tensor[(15, 7, 11), int64], %var_5672: Tensor[(15, 7, 11), int64]) -> (Tensor[(15, 7, 11), uint32],) {
  %577 = fn (%var_5648: Tensor[(15, 7, 11), int64], %var_5649: Tensor[(15, 7, 11), int64]) -> (Tensor[(15, 7, 11), uint32],) {
    %565 = cast(%var_5649, dtype="int64") /* ty=Tensor[(15, 7, 11), int64] */;
    %566 = shape_of(%var_5648, dtype="int32") /* ty=Tensor[(3), int32] */;
    %567 = cast(%var_5648, dtype="int64") /* ty=Tensor[(15, 7, 11), int64] */;
    %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %569 = logical_xor(%567, %568) /* ty=Tensor[(15, 7, 11), int64] */;
    %570 = cast(%569, dtype="float32") /* ty=Tensor[(15, 7, 11), float32] */;
    %571 = acosh(%570) /* ty=Tensor[(15, 7, 11), float32] */;
    %572 = cast(%571, dtype="uint32") /* ty=Tensor[(15, 7, 11), uint32] */;
    %573 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
    %574 = cast(%569, dtype="uint32") /* ty=Tensor[(15, 7, 11), uint32] */;
    %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %576 = minimum(%574, %575) /* ty=Tensor[(15, 7, 11), uint32] */;
    (%576,)
  };
  %577(%var_5671, %var_5672) /* ty=(Tensor[(15, 7, 11), uint32],) */
}

def @func_7972(%var_7970: Tensor[(14, 11, 15), float32]) -> (Tensor[(14, 11, 15), uint32],) {
  @func_7969(%var_7970) /* ty=(Tensor[(14, 11, 15), uint32],) */
}

def @func_8477() -> (Tensor[(14, 1, 15), float32], Tensor[(2310), float32]) {
  @func_8475() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(2310), float32]) */
}

def @func_7915() -> (Tensor[(13, 1, 5), float32],) {
  %580 = fn () -> (Tensor[(13, 1, 5), float32],) {
    %578 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 1, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 1, 5), float32] */;
    %579 = exp(%578) /* ty=Tensor[(13, 1, 5), float32] */;
    (%579,)
  };
  %580() /* ty=(Tensor[(13, 1, 5), float32],) */
}

def @func_4339(%var_4331: Tensor[(4, 15, 11), uint32]) -> Tensor[(4, 15, 11), uint32] {
  %581 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 15, 11), uint32] */, dtype="uint32") /* ty=Tensor[(4, 15, 11), uint32] */;
  %582 = shape_of(%var_4331, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%var_4331, dtype="uint32") /* ty=Tensor[(4, 15, 11), uint32] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_xor(%583, %584) /* ty=Tensor[(4, 15, 11), uint32] */
}

def @func_4959() -> (Tensor[(14, 1, 15), float64], Tensor[(880), bool], Tensor[(2310), float32], Tensor[(880), bool]) {
  %593 = fn () -> (Tensor[(14, 1, 15), float64], Tensor[(880), bool], Tensor[(2310), float32], Tensor[(880), bool]) {
    %585 = @func_2688() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32]) */;
    %586 = cast(meta[relay.Constant][21] /* ty=Tensor[(2310), float32] */, dtype="float32") /* ty=Tensor[(2310), float32] */;
    %587 = cast(meta[relay.Constant][22] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
    %588 = reshape(%586, newshape=[14, 11, 15]) /* ty=Tensor[(14, 11, 15), float32] */;
    %589 = reshape(%587, newshape=[880]) /* ty=Tensor[(880), bool] */;
    %590 = @func_864(%588, %589) /* ty=(Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 11, 15), float64]) */;
    %591 = %585.0;
    %592 = %590.1;
    (%591, %592, meta[relay.Constant][21] /* ty=Tensor[(2310), float32] */, meta[relay.Constant][22] /* ty=Tensor[(880), bool] */)
  };
  %593() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(880), bool], Tensor[(2310), float32], Tensor[(880), bool]) */
}

def @func_2032() -> (Tensor[(14, ?, 15), int8], Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32]) {
  %594 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  %595 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %596 = %595.1;
  %597 = cast(%596, dtype="int8") /* ty=Tensor[(14, ?, 15), int8] */;
  %598 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%594, dtype="int8") /* ty=Tensor[(14, 1, 15), int8] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %601 = @func_1743() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %602 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %603 = cast(%596, dtype="float32") /* ty=Tensor[(14, ?, 15), float32] */;
  %604 = bitwise_xor(%599, %600) /* ty=Tensor[(14, ?, 15), int8] */;
  %605 = %601.0;
  %606 = %602.1;
  %607 = @func_971() /* ty=Tensor[(14, 1, 15), float32] */;
  %608 = log2(%603) /* ty=Tensor[(14, ?, 15), float32] */;
  (%604, %605, %606, %607, %608)
}

def @func_2650(%var_2649: Tensor[(14, 12, 15), float32]) -> (Tensor[(7, 16, 5), bool], Tensor[(560), bool], Tensor[(14, 12, 15), int8], Tensor[(14, 1, 15), float32], Tensor[(14, 12, 15), float64], Tensor[(14, 1, 15), float32]) {
  %630 = fn (%var_2611: Tensor[(14, 12, 15), float32]) -> (Tensor[(7, 16, 5), bool], Tensor[(560), bool], Tensor[(14, 12, 15), int8], Tensor[(14, 1, 15), float32], Tensor[(14, 12, 15), float64], Tensor[(14, 1, 15), float32]) {
    %609 = cast(meta[relay.Constant][23] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
    %610 = cast(meta[relay.Constant][23] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
    %611 = reshape(%609, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), bool] */;
    %612 = reshape(%610, newshape=[7, 16, 5]) /* ty=Tensor[(7, 16, 5), bool] */;
    %613 = @func_2249(%611, %612) /* ty=(Tensor[(7, 16, 5), bool], Tensor[(14, 1, 15), float32]) */;
    %614 = @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %615 = %614.0;
    %616 = cast(%615, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
    %617 = cast(%var_2611, dtype="bool") /* ty=Tensor[(14, 12, 15), bool] */;
    %618 = equal(%616, %617) /* ty=Tensor[(14, 12, 15), bool] */;
    %619 = cast(%var_2611, dtype="int8") /* ty=Tensor[(14, 12, 15), int8] */;
    %620 = shape_of(%618, dtype="int32") /* ty=Tensor[(3), int32] */;
    %621 = cast(%618, dtype="int8") /* ty=Tensor[(14, 12, 15), int8] */;
    %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %623 = cast(%var_2611, dtype="float64") /* ty=Tensor[(14, 12, 15), float64] */;
    %624 = @func_2032() /* ty=(Tensor[(14, ?, 15), int8], Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32]) */;
    %625 = %613.0;
    %626 = bitwise_xor(%621, %622) /* ty=Tensor[(14, 12, 15), int8] */;
    %627 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
    %628 = cosh(%623) /* ty=Tensor[(14, 12, 15), float64] */;
    %629 = %624.3;
    (%625, meta[relay.Constant][23] /* ty=Tensor[(560), bool] */, %626, %627, %628, %629)
  };
  %630(%var_2649) /* ty=(Tensor[(7, 16, 5), bool], Tensor[(560), bool], Tensor[(14, 12, 15), int8], Tensor[(14, 1, 15), float32], Tensor[(14, 12, 15), float64], Tensor[(14, 1, 15), float32]) */
}

def @func_2374(%var_2332: Tensor[(1680, 1), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1680, 15), bool]) {
  %631 = @func_1452() /* ty=(Tensor[(11, 10, 8), float32], Tensor[(14, 1, 15), float32]) */;
  %632 = cast(%var_2332, dtype="float32") /* ty=Tensor[(1680, 1), float32] */;
  %633 = reshape(%632, newshape=[14, 8, 15]) /* ty=Tensor[(14, 8, 15), float32] */;
  %634 = @func_497(%633) /* ty=(Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %635 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %636 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  %637 = cast(%636, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %638 = cast(%var_2332, dtype="bool") /* ty=Tensor[(1680, 1), bool] */;
  %639 = not_equal(%637, %638) /* ty=Tensor[(14, 1680, 15), bool] */;
  %640 = cast(%636, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
  %641 = cast(%639, dtype="bool") /* ty=Tensor[(14, 1680, 15), bool] */;
  %642 = %631.1;
  %643 = %634.3;
  %644 = %635.3;
  %645 = equal(%640, %641) /* ty=Tensor[(14, 1680, 15), bool] */;
  (%642, %643, %644, %645)
}

def @func_2690() -> (Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32]) {
  @func_2688() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32]) */
}

def @func_3163() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(2310), float32]) {
  %659 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(2310), float32]) {
    %646 = @func_2726() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %647 = @func_3055() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(2310), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) */;
    %648 = %647.2;
    %649 = cast(%648, dtype="float32") /* ty=Tensor[(2310), float32] */;
    %650 = exp(%649) /* ty=Tensor[(2310), float32] */;
    %651 = cast(%648, dtype="float32") /* ty=Tensor[(2310), float32] */;
    %652 = shape_of(%650, dtype="int32") /* ty=Tensor[(1), int32] */;
    %653 = cast(%650, dtype="float32") /* ty=Tensor[(2310), float32] */;
    %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?), float32] */;
    %655 = %646.0;
    %656 = @func_335() /* ty=Tensor[(14, 1, 15), float32] */;
    %657 = @func_1075() /* ty=Tensor[(14, 1, 15), float32] */;
    %658 = floor_divide(%653, %654) /* ty=Tensor[(2310), float32] */;
    (%655, %656, %657, %658)
  };
  %659() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(2310), float32]) */
}

def @func_9123() -> (Tensor[(14, 1, 15), float32],) {
  @func_9121() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_8165(%var_8152: Tensor[(14, 13, 15), float32]) -> Tensor[(14, 13, 15), float64] {
  %660 = @func_4315() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %661 = %660.0;
  %662 = cast(%661, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
  %663 = cast(%var_8152, dtype="float64") /* ty=Tensor[(14, 13, 15), float64] */;
  %664 = mod(%662, %663) /* ty=Tensor[(14, 13, 15), float64] */;
  %665 = cast(%664, dtype="float64") /* ty=Tensor[(14, 13, 15), float64] */;
  rsqrt(%665) /* ty=Tensor[(14, 13, 15), float64] */
}

def @func_9318() -> (Tensor[(1, 9, 3), float32],) {
  %666 = @func_5798() /* ty=(Tensor[(1, 9, 3), float32],) */;
  %667 = %666.0;
  (%667,)
}

def @func_973() -> Tensor[(14, 1, 15), float32] {
  @func_971() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_3057() -> (Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(2310), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) {
  @func_3055() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(2310), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) */
}

def @func_4740(%var_4736: Tensor[(1, 12, 14), float32]) -> (Tensor[(1, 12, 14), float32],) {
  %668 = cast(%var_4736, dtype="float32") /* ty=Tensor[(1, 12, 14), float32] */;
  %669 = cos(%668) /* ty=Tensor[(1, 12, 14), float32] */;
  (%669,)
}

def @func_6277(%var_6275: Tensor[(14, 11, 15), float32]) -> (Tensor[(14, 11, 15), uint8],) {
  @func_6274(%var_6275) /* ty=(Tensor[(14, 11, 15), uint8],) */
}

def @func_9617(%var_9615: Tensor[(14, 1, 15), float32]) -> (Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  @func_9614(%var_9615) /* ty=(Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_6548() -> (Tensor[(13, 6, 5), bool], Tensor[(14, 1, 15), float32], Tensor[(13, 6, 5), float64], Tensor[(14, 1, 15), float64]) {
  %670 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 6, 5), float32] */;
  %671 = asinh(%670) /* ty=Tensor[(13, 6, 5), float32] */;
  %672 = cast(%671, dtype="bool") /* ty=Tensor[(13, 6, 5), bool] */;
  %673 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(13, 6, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %674 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 6, 5), float32] */, dtype="bool") /* ty=Tensor[(13, 6, 5), bool] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %676 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 6, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 6, 5), float32] */;
  %677 = shape_of(%671, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%671, dtype="float32") /* ty=Tensor[(13, 6, 5), float32] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %680 = divide(%678, %679) /* ty=Tensor[(13, 6, 5), float32] */;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(13, 6, 5), float64] */;
  %682 = not_equal(%674, %675) /* ty=Tensor[(13, 6, 5), bool] */;
  %683 = @func_1860() /* ty=Tensor[(14, 1, 15), float32] */;
  %684 = cos(%681) /* ty=Tensor[(13, 6, 5), float64] */;
  %685 = @func_3745() /* ty=Tensor[(14, 1, 15), float64] */;
  (%682, %683, %684, %685)
}

def @func_3664() -> (Tensor[(11, 10, 8), float64], Tensor[(3360), float64], Tensor[(3360), float64]) {
  %692 = fn () -> (Tensor[(11, 10, 8), float64], Tensor[(3360), float64], Tensor[(3360), float64]) {
    %686 = @func_2548() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(40, 22), bool]) */;
    %687 = cast(meta[relay.Constant][26] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
    %688 = reshape(%687, newshape=[3360]) /* ty=Tensor[(3360), float64] */;
    %689 = @func_2098(%688) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(3360), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
    %690 = %686.2;
    %691 = %689.2;
    (%690, %691, meta[relay.Constant][26] /* ty=Tensor[(3360), float64] */)
  };
  %692() /* ty=(Tensor[(11, 10, 8), float64], Tensor[(3360), float64], Tensor[(3360), float64]) */
}

def @func_5020(%var_5019: int64) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], int64) {
  %701 = fn (%var_4992: int64) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], int64) {
    %693 = @func_3749() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %694 = @func_1269() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %695 = cast(%var_4992, dtype="int64") /* ty=int64 */;
    %696 = reshape(%695, newshape=[]) /* ty=int64 */;
    %697 = @func_1646(%696) /* ty=(Tensor[(4, 2, 9), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(36), float64], Tensor[(14, 1, 15), float32]) */;
    %698 = %693.0;
    %699 = %694.0;
    %700 = %697.2;
    (%698, %699, %700, %var_4992)
  };
  %701(%var_5019) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], int64) */
}

def @func_6960() -> (Tensor[(14, 1, 15), float32],) {
  @func_6958() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_6715() -> (Tensor[(14, 1, 15), float32],) {
  %703 = fn () -> (Tensor[(14, 1, 15), float32],) {
    %702 = @func_6578() /* ty=Tensor[(14, 1, 15), float32] */;
    (%702,)
  };
  %703() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_6580() -> Tensor[(14, 1, 15), float32] {
  @func_6578() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_2549() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(40, 22), bool]) {
  %713 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(40, 22), bool]) {
    %704 = @func_1827() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %705 = cast(meta[relay.Constant][27] /* ty=Tensor[(40, 22), bool] */, dtype="bool") /* ty=Tensor[(40, 22), bool] */;
    %706 = cast(meta[relay.Constant][27] /* ty=Tensor[(40, 22), bool] */, dtype="bool") /* ty=Tensor[(40, 22), bool] */;
    %707 = reshape(%705, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
    %708 = reshape(%706, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
    %709 = @func_54(%707, %708) /* ty=(Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float64]) */;
    %710 = @func_1802() /* ty=Tensor[(14, 1, 15), float32] */;
    %711 = %704.0;
    %712 = %709.1;
    (%710, %711, %712, meta[relay.Constant][27] /* ty=Tensor[(40, 22), bool] */)
  };
  %713() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(40, 22), bool]) */
}

def @func_497(%var_451: Tensor[(14, 8, 15), float32]) -> (Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %714 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %715 = %714.0;
  %716 = cast(%715, dtype="int8") /* ty=Tensor[(14, 1, 15), int8] */;
  %717 = cast(%var_451, dtype="int8") /* ty=Tensor[(14, 8, 15), int8] */;
  %718 = minimum(%716, %717) /* ty=Tensor[(14, 8, 15), int8] */;
  %719 = cast(%718, dtype="float64") /* ty=Tensor[(14, 8, 15), float64] */;
  %720 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %721 = cast(meta[relay.Constant][28] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %722 = cast(meta[relay.Constant][28] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %723 = reshape(%721, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %724 = reshape(%722, newshape=[11, 10, 8]) /* ty=Tensor[(11, 10, 8), bool] */;
  %725 = @func_54(%723, %724) /* ty=(Tensor[(11, 10, 8), bool], Tensor[(11, 10, 8), float64]) */;
  %726 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %727 = acos(%719) /* ty=Tensor[(14, 8, 15), float64] */;
  %728 = %720.2;
  %729 = %725.1;
  %730 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  %731 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
  %732 = %726.0;
  (%727, %728, %729, meta[relay.Constant][28] /* ty=Tensor[(880), bool] */, %730, %731, %732)
}

def @func_4724() -> Tensor[(14, 1, 15), float32] {
  @func_4722() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_2377(%var_2375: Tensor[(1680, 1), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1680, 15), bool]) {
  @func_2374(%var_2375) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1680, 15), bool]) */
}

def @func_8835(%var_8834: Tensor[(14, 4, 15), float32]) -> (Tensor[(14, 4, 15), uint16], Tensor[(14, 1, 15), float32]) {
  %739 = fn (%var_8799: Tensor[(14, 4, 15), float32]) -> (Tensor[(14, 4, 15), uint16], Tensor[(14, 1, 15), float32]) {
    %733 = @func_6079() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %734 = %733.3;
    %735 = cast(%734, dtype="uint16") /* ty=Tensor[(14, 1, 15), uint16] */;
    %736 = cast(%var_8799, dtype="uint16") /* ty=Tensor[(14, 4, 15), uint16] */;
    %737 = maximum(%735, %736) /* ty=Tensor[(14, 4, 15), uint16] */;
    %738 = @func_5177() /* ty=Tensor[(14, 1, 15), float32] */;
    (%737, %738)
  };
  %739(%var_8834) /* ty=(Tensor[(14, 4, 15), uint16], Tensor[(14, 1, 15), float32]) */
}

def @func_5322() -> Tensor[(14, 1, 15), float32] {
  @func_5320() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_2855(%var_2854: Tensor[(420), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32]) {
  %746 = fn (%var_2851: Tensor[(420), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32]) {
    %740 = cast(%var_2851, dtype="float32") /* ty=Tensor[(420), float32] */;
    %741 = reshape(%740, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
    %742 = @func_1495(%741) /* ty=(Tensor[(14, 2, 15), uint8], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %743 = @func_388() /* ty=Tensor[(14, 1, 15), float32] */;
    %744 = @func_971() /* ty=Tensor[(14, 1, 15), float32] */;
    %745 = %742.2;
    (%743, %744, %745, %var_2851)
  };
  %746(%var_2854) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32]) */
}

def @func_7641(%var_7640: Tensor[(3360), float64]) -> (Tensor[(14, 1, 15), float32], float64, Tensor[(528), float64], Tensor[(3360), uint64], Tensor[(420, 8), bool]) {
  %769 = fn (%var_7603: Tensor[(3360), float64]) -> (Tensor[(14, 1, 15), float32], float64, Tensor[(528), float64], Tensor[(3360), uint64], Tensor[(420, 8), bool]) {
    %747 = @func_2949() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %748 = cast(-3.90185f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %749 = cast(meta[relay.Constant][29] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
    %750 = cast(%var_7603, dtype="float64") /* ty=Tensor[(3360), float64] */;
    %751 = reshape(%748, newshape=[]) /* ty=float64 */;
    %752 = reshape(%749, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float64] */;
    %753 = reshape(%750, newshape=[420, 8]) /* ty=Tensor[(420, 8), float64] */;
    %754 = @func_1004(%751, %752, %753) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420, 8), float64]) */;
    %755 = %754.3;
    %756 = cast(%755, dtype="uint64") /* ty=Tensor[(420, 8), uint64] */;
    %757 = shape_of(%var_7603, dtype="int32") /* ty=Tensor[(1), int32] */;
    %758 = cast(%var_7603, dtype="uint64") /* ty=Tensor[(3360), uint64] */;
    %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %760 = cast(%755, dtype="float64") /* ty=Tensor[(420, 8), float64] */;
    %761 = sin(%760) /* ty=Tensor[(420, 8), float64] */;
    %762 = cast(%755, dtype="bool") /* ty=Tensor[(420, 8), bool] */;
    %763 = shape_of(%761, dtype="int32") /* ty=Tensor[(2), int32] */;
    %764 = cast(%761, dtype="bool") /* ty=Tensor[(420, 8), bool] */;
    %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %766 = %747.0;
    %767 = right_shift(%758, %759) /* ty=Tensor[(3360), uint64] */;
    %768 = logical_and(%764, %765) /* ty=Tensor[(420, 8), bool] */;
    (%766, -3.90185f64 /* ty=float64 */, meta[relay.Constant][29] /* ty=Tensor[(528), float64] */, %767, %768)
  };
  %769(%var_7640) /* ty=(Tensor[(14, 1, 15), float32], float64, Tensor[(528), float64], Tensor[(3360), uint64], Tensor[(420, 8), bool]) */
}

def @func_9297(%var_9295: Tensor[(3, 13, 13), uint16], %var_9296: Tensor[(3, 13, 13), uint16]) -> (Tensor[(3, 13, 13), uint16],) {
  @func_9293(%var_9295, %var_9296) /* ty=(Tensor[(3, 13, 13), uint16],) */
}

def @func_5744() -> (Tensor[(3360), float64], Tensor[(14, ?, 15), bool], Tensor[(11, 10, 8), float64]) {
  %770 = @func_3663() /* ty=(Tensor[(11, 10, 8), float64], Tensor[(3360), float64], Tensor[(3360), float64]) */;
  %771 = %770.1;
  %772 = cast(%771, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %773 = reshape(%772, newshape=[3360]) /* ty=Tensor[(3360), float64] */;
  %774 = @func_4450(%773) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(3360), float64], Tensor[(14, ?, 15), bool], Tensor[(14, ?, 15), int8], Tensor[(14, 1, 15), float32]) */;
  %775 = @func_3663() /* ty=(Tensor[(11, 10, 8), float64], Tensor[(3360), float64], Tensor[(3360), float64]) */;
  %776 = %774.2;
  %777 = %775.0;
  (%771, %776, %777)
}

def @func_9202() -> Tensor[(14, 1, 15), float32] {
  @func_9200() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_3483(%var_3481: Tensor[(14, 8, 15), float32], %var_3482: Tensor[(14, 8, 15), int8]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(560), bool], Tensor[(3, 840), float32], Tensor[(14, 8, 15), uint16], Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) {
  %804 = fn (%var_3429: Tensor[(14, 8, 15), float32], %var_3447: Tensor[(14, 8, 15), int8]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(560), bool], Tensor[(3, 840), float32], Tensor[(14, 8, 15), uint16], Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) {
    %778 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %779 = @func_3273() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %780 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 840), float32] */, dtype="float32") /* ty=Tensor[(3, 840), float32] */;
    %781 = reshape(%780, newshape=[14, 12, 15]) /* ty=Tensor[(14, 12, 15), float32] */;
    %782 = @func_2648(%781) /* ty=(Tensor[(7, 16, 5), bool], Tensor[(560), bool], Tensor[(14, 12, 15), int8], Tensor[(14, 1, 15), float32], Tensor[(14, 12, 15), float64], Tensor[(14, 1, 15), float32]) */;
    %783 = @func_1171() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %784 = %783.1;
    %785 = cast(%784, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
    %786 = log10(%785) /* ty=Tensor[(14, 1, 15), float32] */;
    %787 = cast(%786, dtype="int8") /* ty=Tensor[(14, 1, 15), int8] */;
    %788 = cast(%var_3429, dtype="int8") /* ty=Tensor[(14, 8, 15), int8] */;
    %789 = right_shift(%787, %788) /* ty=Tensor[(14, 8, 15), int8] */;
    %790 = cast(%var_3447, dtype="uint16") /* ty=Tensor[(14, 8, 15), uint16] */;
    %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
    %792 = cast(%789, dtype="uint16") /* ty=Tensor[(14, 8, 15), uint16] */;
    %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %794 = cast(%var_3429, dtype="float64") /* ty=Tensor[(14, 8, 15), float64] */;
    %795 = cast(meta[relay.Constant][31] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
    %796 = reshape(%795, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
    %797 = @func_674(%796) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
    %798 = %778.0;
    %799 = %779.0;
    %800 = %782.1;
    %801 = bitwise_xor(%792, %793) /* ty=Tensor[(14, 8, 15), uint16] */;
    %802 = erf(%794) /* ty=Tensor[(14, 8, 15), float64] */;
    %803 = %797.0;
    (%798, %799, %800, meta[relay.Constant][30] /* ty=Tensor[(3, 840), float32] */, %801, %802, %803, meta[relay.Constant][31] /* ty=Tensor[(3360), float64] */)
  };
  %804(%var_3481, %var_3482) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(560), bool], Tensor[(3, 840), float32], Tensor[(14, 8, 15), uint16], Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */
}

def @func_5361(%var_5359: Tensor[(13, 7, 3), float32], %var_5360: Tensor[(13, 7, 3), float32]) -> (Tensor[(13, 7, 3), int16],) {
  @func_5357(%var_5359, %var_5360) /* ty=(Tensor[(13, 7, 3), int16],) */
}

def @func_1454() -> (Tensor[(11, 10, 8), float32], Tensor[(14, 1, 15), float32]) {
  @func_1452() /* ty=(Tensor[(11, 10, 8), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_6015() -> Tensor[(14, 1, 15), float32] {
  %806 = fn () -> Tensor[(14, 1, 15), float32] {
    %805 = @func_2688() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32]) */;
    %805.1
  };
  %806() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_9029(%var_9027: Tensor[(198), float64], %var_9028: Tensor[(10, 42), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(3, 66), uint16], Tensor[(198), float64], Tensor[(14, 1, 15), float32], Tensor[(10, 42), float32]) {
  %818 = fn (%var_8983: Tensor[(198), float64], %var_9010: Tensor[(10, 42), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(3, 66), uint16], Tensor[(198), float64], Tensor[(14, 1, 15), float32], Tensor[(10, 42), float32]) {
    %807 = cast(%var_8983, dtype="float64") /* ty=Tensor[(198), float64] */;
    %808 = cast(%var_8983, dtype="float64") /* ty=Tensor[(198), float64] */;
    %809 = reshape(%807, newshape=[3, 66]) /* ty=Tensor[(3, 66), float64] */;
    %810 = reshape(%808, newshape=[3, 66]) /* ty=Tensor[(3, 66), float64] */;
    %811 = @func_7087(%809, %810) /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 6, 3), float64], Tensor[(3, 66), uint16], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %812 = cast(%var_9010, dtype="float32") /* ty=Tensor[(10, 42), float32] */;
    %813 = reshape(%812, newshape=[420]) /* ty=Tensor[(420), float32] */;
    %814 = @func_2853(%813) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32]) */;
    %815 = @func_3828() /* ty=Tensor[(14, 1, 15), float32] */;
    %816 = %811.3;
    %817 = %814.2;
    (%815, %816, %var_8983, %817, %var_9010)
  };
  %818(%var_9027, %var_9028) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(3, 66), uint16], Tensor[(198), float64], Tensor[(14, 1, 15), float32], Tensor[(10, 42), float32]) */
}

def @func_6435() -> (Tensor[(14, 1, 15), float32],) {
  @func_6433() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_1498(%var_1496: Tensor[(14, 2, 15), float32]) -> (Tensor[(14, 2, 15), uint8], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  @func_1495(%var_1496) /* ty=(Tensor[(14, 2, 15), uint8], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_8267(%var_8265: Tensor[(2730), float32], %var_8266: Tensor[(1680), float32]) -> (Tensor[(11, 10, 8), float64], Tensor[(14, 13, 15), float64], Tensor[(2730), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32]) {
  %830 = fn (%var_8203: Tensor[(2730), float32], %var_8235: Tensor[(1680), float32]) -> (Tensor[(11, 10, 8), float64], Tensor[(14, 13, 15), float64], Tensor[(2730), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32]) {
    %819 = @func_6079() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %820 = cast(%var_8203, dtype="float32") /* ty=Tensor[(2730), float32] */;
    %821 = reshape(%820, newshape=[14, 13, 15]) /* ty=Tensor[(14, 13, 15), float32] */;
    %822 = cast(%var_8235, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %823 = cast(%var_8235, dtype="int8") /* ty=Tensor[(1680), int8] */;
    %824 = reshape(%822, newshape=[14, 8, 15]) /* ty=Tensor[(14, 8, 15), float32] */;
    %825 = reshape(%823, newshape=[14, 8, 15]) /* ty=Tensor[(14, 8, 15), int8] */;
    %826 = @func_3480(%824, %825) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(560), bool], Tensor[(3, 840), float32], Tensor[(14, 8, 15), uint16], Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */;
    %827 = %819.1;
    %828 = @func_8165(%821) /* ty=Tensor[(14, 13, 15), float64] */;
    %829 = %826.1;
    (%827, %828, %var_8203, %829, %var_8235)
  };
  %830(%var_8265, %var_8266) /* ty=(Tensor[(11, 10, 8), float64], Tensor[(14, 13, 15), float64], Tensor[(2730), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32]) */
}

def @func_2672() -> (Tensor[(14, 1, 15), float32],) {
  %833 = fn () -> (Tensor[(14, 1, 15), float32],) {
    %831 = @func_1171() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %832 = %831.1;
    (%832,)
  };
  %833() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_8774() -> Tensor[(14, 16, 15), uint16] {
  @func_8772() /* ty=Tensor[(14, 16, 15), uint16] */
}

def @func_2101(%var_2099: Tensor[(3360), float64]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(3360), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) {
  @func_2098(%var_2099) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(3360), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */
}

def @func_4342(%var_4340: Tensor[(4, 15, 11), uint32]) -> Tensor[(4, 15, 11), uint32] {
  @func_4339(%var_4340) /* ty=Tensor[(4, 15, 11), uint32] */
}

def @func_4623() -> Tensor[(14, 1, 15), float32] {
  %835 = fn () -> Tensor[(14, 1, 15), float32] {
    %834 = @func_1171() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %834.1
  };
  %835() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_5620(%var_5618: Tensor[(11, 6, 3), float64]) -> Tensor[(11, 6, 3), float64] {
  @func_5617(%var_5618) /* ty=Tensor[(11, 6, 3), float64] */
}

def @func_6189(%var_6187: Tensor[(14, 15, 15), float32]) -> (Tensor[(14, ?, 15), float32], Tensor[(14, 15, 15), uint8]) {
  @func_6186(%var_6187) /* ty=(Tensor[(14, ?, 15), float32], Tensor[(14, 15, 15), uint8]) */
}

def @func_8168(%var_8166: Tensor[(14, 13, 15), float32]) -> Tensor[(14, 13, 15), float64] {
  @func_8165(%var_8166) /* ty=Tensor[(14, 13, 15), float64] */
}

def @func_8897() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %836 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %837 = @func_3705() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %838 = %836.0;
  %839 = %837.0;
  (%838, %839)
}

def @func_4554() -> Tensor[(14, 1, 15), float32] {
  %841 = fn () -> Tensor[(14, 1, 15), float32] {
    %840 = @func_2688() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32]) */;
    %840.1
  };
  %841() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_4900() -> (Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), uint64]) {
  @func_4898() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), uint64]) */
}

def @func_4256(%var_4253: int64, %var_4254: Tensor[(4, 7, 1), int64], %var_4255: Tensor[(6, 7, 15), int64]) -> (Tensor[(4, 7, 1), int64], Tensor[(6, 7, 15), uint32]) {
  %848 = fn (%var_4238: int64, %var_4239: Tensor[(4, 7, 1), int64], %var_4245: Tensor[(6, 7, 15), int64]) -> (Tensor[(4, 7, 1), int64], Tensor[(6, 7, 15), uint32]) {
    %842 = cast(%var_4238, dtype="int64") /* ty=int64 */;
    %843 = cast(%var_4239, dtype="int64") /* ty=Tensor[(4, 7, 1), int64] */;
    %844 = cast(%var_4238, dtype="uint32") /* ty=uint32 */;
    %845 = cast(%var_4245, dtype="uint32") /* ty=Tensor[(6, 7, 15), uint32] */;
    %846 = bitwise_and(%842, %843) /* ty=Tensor[(4, 7, 1), int64] */;
    %847 = logical_xor(%844, %845) /* ty=Tensor[(6, 7, 15), uint32] */;
    (%846, %847)
  };
  %848(%var_4253, %var_4254, %var_4255) /* ty=(Tensor[(4, 7, 1), int64], Tensor[(6, 7, 15), uint32]) */
}

def @func_7534() -> (Tensor[(14, ?, 15), float64],) {
  %851 = fn () -> (Tensor[(14, ?, 15), float64],) {
    %849 = @func_3585() /* ty=(Tensor[(14, ?, 15), float64], Tensor[(14, 11, 15), float32]) */;
    %850 = %849.0;
    (%850,)
  };
  %851() /* ty=(Tensor[(14, ?, 15), float64],) */
}

def @func_8475() -> (Tensor[(14, 1, 15), float32], Tensor[(2310), float32]) {
  %852 = @func_3705() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %853 = @func_4958() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(880), bool], Tensor[(2310), float32], Tensor[(880), bool]) */;
  %854 = %852.0;
  %855 = %853.2;
  (%854, %855)
}

def @func_7008() -> Tensor[(14, 1, 15), float32] {
  %856 = @func_6958() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %856.0
}

def @func_2422() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %861 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %857 = @func_1452() /* ty=(Tensor[(11, 10, 8), float32], Tensor[(14, 1, 15), float32]) */;
    %858 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %859 = %857.1;
    %860 = %858.0;
    (%859, %860)
  };
  %861() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_7668(%var_7666: Tensor[(210, 3), int64]) -> (Tensor[(2310), float32], Tensor[(6, 7, 15), uint32], int64, Tensor[(28), int64], Tensor[(210, 3), int64]) {
  @func_7665(%var_7666) /* ty=(Tensor[(2310), float32], Tensor[(6, 7, 15), uint32], int64, Tensor[(28), int64], Tensor[(210, 3), int64]) */
}

def @func_8560() -> (Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), int32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64], Tensor[(3360), float64]) {
  %879 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), int32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64], Tensor[(3360), float64]) {
    %862 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %863 = @func_4095() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %864 = %863.0;
    %865 = @func_2688() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float32]) */;
    %866 = %865.1;
    %867 = cast(%866, dtype="int32") /* ty=Tensor[(14, 1, 15), int32] */;
    %868 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
    %869 = cast(%864, dtype="int32") /* ty=Tensor[(14, 1, 15), int32] */;
    %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %871 = @func_3705() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %872 = cast(meta[relay.Constant][32] /* ty=Tensor[(3360), float64] */, dtype="float64") /* ty=Tensor[(3360), float64] */;
    %873 = reshape(%872, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
    %874 = @func_674(%873) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
    %875 = %862.0;
    %876 = logical_xor(%869, %870) /* ty=Tensor[(14, ?, 15), int32] */;
    %877 = %871.0;
    %878 = %874.2;
    (%875, %876, %877, %878, meta[relay.Constant][32] /* ty=Tensor[(3360), float64] */)
  };
  %879() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), int32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64], Tensor[(3360), float64]) */
}

def @func_9121() -> (Tensor[(14, 1, 15), float32],) {
  %880 = @func_8701() /* ty=(Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32], Tensor[(1, 9, 3), float32], Tensor[(14, ?, 15), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %881 = %880.4;
  (%881,)
}

def @func_9369(%var_9367: Tensor[(8, 2, 13), uint16], %var_9368: Tensor[(8, 2, 13), uint16]) -> (Tensor[(8, 2, 13), bool], Tensor[(8, 2, 13), float32]) {
  @func_9365(%var_9367, %var_9368) /* ty=(Tensor[(8, 2, 13), bool], Tensor[(8, 2, 13), float32]) */
}

def @func_920() -> (Tensor[(14, 1, 15), float32],) {
  @func_918() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_1649(%var_1647: int64) -> (Tensor[(4, 2, 9), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(36), float64], Tensor[(14, 1, 15), float32]) {
  @func_1646(%var_1647) /* ty=(Tensor[(4, 2, 9), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(36), float64], Tensor[(14, 1, 15), float32]) */
}

def @func_5981() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %882 = @func_3216() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %883 = @func_4553() /* ty=Tensor[(14, 1, 15), float32] */;
  %884 = %882.0;
  (%883, %884)
}

def @func_7328() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %885 = @func_6311() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %886 = %885.0;
  %887 = @func_1860() /* ty=Tensor[(14, 1, 15), float32] */;
  (%886, %887)
}

def @func_9465() -> Tensor[(14, 1, 15), float32] {
  %888 = fn () -> Tensor[(14, 1, 15), float32] {
    @func_4180() /* ty=Tensor[(14, 1, 15), float32] */
  };
  %888() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_4127() -> Tensor[(14, 1, 15), float32] {
  %889 = fn () -> Tensor[(14, 1, 15), float32] {
    @func_782() /* ty=Tensor[(14, 1, 15), float32] */
  };
  %889() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_2098(%var_2058: Tensor[(3360), float64]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(3360), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) {
  %890 = @func_947() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(3360), float64]) */;
  %891 = cast(%var_2058, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %892 = reshape(%891, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
  %893 = @func_674(%892) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
  %894 = @func_1269() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %895 = %894.0;
  %896 = cast(%895, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %897 = cast(%var_2058, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %898 = reshape(%897, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
  %899 = @func_674(%898) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 16, 15), float64]) */;
  %900 = %890.0;
  %901 = %893.0;
  %902 = atan(%896) /* ty=Tensor[(14, 1, 15), float32] */;
  %903 = %899.2;
  (%900, %901, %var_2058, %902, %903)
}

def @func_1592(%var_1591: Tensor[(14, 1, 15), float32]) -> (Tensor[(14, ?, 15), uint64], Tensor[(14, 1, 15), float32]) {
  %913 = fn (%var_1575: Tensor[(14, 1, 15), float32]) -> (Tensor[(14, ?, 15), uint64], Tensor[(14, 1, 15), float32]) {
    %904 = @func_971() /* ty=Tensor[(14, 1, 15), float32] */;
    %905 = cast(%var_1575, dtype="uint64") /* ty=Tensor[(14, 1, 15), uint64] */;
    %906 = shape_of(%904, dtype="int32") /* ty=Tensor[(3), int32] */;
    %907 = cast(%904, dtype="uint64") /* ty=Tensor[(14, 1, 15), uint64] */;
    %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %909 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
    %910 = cast(%909, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
    %911 = bitwise_and(%907, %908) /* ty=Tensor[(14, ?, 15), uint64] */;
    %912 = sqrt(%910) /* ty=Tensor[(14, 1, 15), float32] */;
    (%911, %912)
  };
  %913(%var_1591) /* ty=(Tensor[(14, ?, 15), uint64], Tensor[(14, 1, 15), float32]) */
}

def @func_2134(%var_2130: Tensor[(420), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(420), float32], Tensor[(14, ?, 15), uint64]) {
  %914 = cast(%var_2130, dtype="float32") /* ty=Tensor[(420), float32] */;
  %915 = reshape(%914, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), float32] */;
  %916 = @func_1495(%915) /* ty=(Tensor[(14, 2, 15), uint8], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %917 = @func_579() /* ty=Tensor[(14, 1, 15), float32] */;
  %918 = cast(%917, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %919 = reshape(%918, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), float32] */;
  %920 = @func_1590(%919) /* ty=(Tensor[(14, ?, 15), uint64], Tensor[(14, 1, 15), float32]) */;
  %921 = %916.2;
  %922 = %920.0;
  (%917, %921, %var_2130, %922)
}

def @func_388() -> Tensor[(14, 1, 15), float32] {
  @func_335() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_6079() -> (Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %923 = @func_3055() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(2310), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) */;
  %924 = @func_3055() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(2310), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) */;
  %925 = @func_5774() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %926 = %923.0;
  %927 = %924.1;
  %928 = %925.0;
  %929 = @func_1860() /* ty=Tensor[(14, 1, 15), float32] */;
  (%926, %927, %928, %929)
}

def @func_7407(%var_7405: Tensor[(70, 6), float32], %var_7406: Tensor[(70, 6), uint16]) -> (Tensor[(14, 1, 15), float32], Tensor[(70, 6), bool], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) {
  @func_7403(%var_7405, %var_7406) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(70, 6), bool], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) */
}

def @func_5829() -> (Tensor[(14, 1, 15), float32], Tensor[(9, 4, 1), float64], Tensor[(18, 2), float64]) {
  @func_5827() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(9, 4, 1), float64], Tensor[(18, 2), float64]) */
}

def @func_3055() -> (Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(2310), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) {
  %930 = cast(meta[relay.Constant][33] /* ty=Tensor[(2310), float32] */, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %931 = cast(meta[relay.Constant][34] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %932 = reshape(%930, newshape=[14, 11, 15]) /* ty=Tensor[(14, 11, 15), float32] */;
  %933 = reshape(%931, newshape=[880]) /* ty=Tensor[(880), bool] */;
  %934 = @func_864(%932, %933) /* ty=(Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 11, 15), float64]) */;
  %935 = @func_1550() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %936 = @func_1075() /* ty=Tensor[(14, 1, 15), float32] */;
  %937 = %934.0;
  %938 = %935.1;
  (%936, %937, meta[relay.Constant][33] /* ty=Tensor[(2310), float32] */, meta[relay.Constant][34] /* ty=Tensor[(880), bool] */, %938)
}

def @func_5774() -> (Tensor[(14, 1, 15), float32],) {
  %939 = @func_3055() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(2310), float32], Tensor[(880), bool], Tensor[(14, 1, 15), float32]) */;
  %940 = %939.0;
  (%940,)
}

def @func_2951() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  @func_2949() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_580() -> Tensor[(14, 1, 15), float32] {
  %942 = fn () -> Tensor[(14, 1, 15), float32] {
    %941 = @func_303() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %941.0
  };
  %942() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_3689() -> (Tensor[(14, 1, 15), float32],) {
  %943 = @func_1827() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %944 = %943.0;
  (%944,)
}

def @func_1744() -> (Tensor[(14, 1, 15), float32],) {
  %946 = fn () -> (Tensor[(14, 1, 15), float32],) {
    %945 = @func_421() /* ty=Tensor[(14, 1, 15), float32] */;
    (%945,)
  };
  %946() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_3586() -> (Tensor[(14, ?, 15), float64], Tensor[(14, 11, 15), float32]) {
  %975 = fn () -> (Tensor[(14, ?, 15), float64], Tensor[(14, 11, 15), float32]) {
    %947 = @func_2726() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
    %948 = %947.0;
    %949 = @func_3216() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %950 = %949.0;
    %951 = cast(%950, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
    %952 = shape_of(%948, dtype="int32") /* ty=Tensor[(3), int32] */;
    %953 = cast(%948, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
    %954 = dyn.reshape(%951, %952, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %955 = less_equal(%953, %954) /* ty=Tensor[(14, ?, 15), bool] */;
    %956 = cast(%955, dtype="float64") /* ty=Tensor[(14, ?, 15), float64] */;
    %957 = @func_1743() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %958 = %957.0;
    %959 = cast(%958, dtype="bool") /* ty=Tensor[(14, 1, 15), bool] */;
    %960 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 11, 15), float32] */, dtype="bool") /* ty=Tensor[(14, 11, 15), bool] */;
    %961 = less_equal(%959, %960) /* ty=Tensor[(14, 11, 15), bool] */;
    %962 = cast(%961, dtype="int16") /* ty=Tensor[(14, 11, 15), int16] */;
    %963 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(14, 11, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %964 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 11, 15), float32] */, dtype="int16") /* ty=Tensor[(14, 11, 15), int16] */;
    %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %966 = subtract(%964, %965) /* ty=Tensor[(14, 11, 15), int16] */;
    %967 = cast(%966, dtype="float64") /* ty=Tensor[(14, 11, 15), float64] */;
    %968 = acosh(%967) /* ty=Tensor[(14, 11, 15), float64] */;
    %969 = cast(meta[relay.Constant][36] /* ty=Tensor[(14, 11, 15), float64] */, dtype="float32") /* ty=Tensor[(14, 11, 15), float32] */;
    %970 = shape_of(%968, dtype="int32") /* ty=Tensor[(3), int32] */;
    %971 = cast(%968, dtype="float32") /* ty=Tensor[(14, 11, 15), float32] */;
    %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %973 = acos(%956) /* ty=Tensor[(14, ?, 15), float64] */;
    %974 = divide(%971, %972) /* ty=Tensor[(14, 11, 15), float32] */;
    (%973, %974)
  };
  %975() /* ty=(Tensor[(14, ?, 15), float64], Tensor[(14, 11, 15), float32]) */
}

def @func_3705() -> (Tensor[(14, 1, 15), float32],) {
  %976 = @func_1827() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %977 = %976.0;
  (%977,)
}

def @func_5529() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %978 = @func_1550() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %979 = @func_2053() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %980 = %978.0;
  %981 = %979.0;
  (%980, %981)
}

def @func_304() -> (Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %997 = fn () -> (Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
    %982 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %983 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %984 = %983.0;
    %985 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %986 = %985.0;
    %987 = cast(%986, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
    %988 = shape_of(%984, dtype="int32") /* ty=Tensor[(3), int32] */;
    %989 = cast(%984, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
    %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %991 = @func_188() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %992 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %993 = %982.0;
    %994 = divide(%989, %990) /* ty=Tensor[(14, ?, 15), float32] */;
    %995 = %991.0;
    %996 = %992.0;
    (%993, %994, %995, %996)
  };
  %997() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, ?, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_5799() -> (Tensor[(1, 9, 3), float32],) {
  %1002 = fn () -> (Tensor[(1, 9, 3), float32],) {
    %998 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 9, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
    %999 = sqrt(%998) /* ty=Tensor[(1, 9, 3), float64] */;
    %1000 = cast(%999, dtype="float32") /* ty=Tensor[(1, 9, 3), float32] */;
    %1001 = cosh(%1000) /* ty=Tensor[(1, 9, 3), float32] */;
    (%1001,)
  };
  %1002() /* ty=(Tensor[(1, 9, 3), float32],) */
}

def @func_5531() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  @func_5529() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_5617(%var_5602: Tensor[(11, 6, 3), float64]) -> Tensor[(11, 6, 3), float64] {
  %1003 = cast(%var_5602, dtype="float64") /* ty=Tensor[(11, 6, 3), float64] */;
  %1004 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(11, 6, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1005 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 6, 3), float64] */, dtype="float64") /* ty=Tensor[(11, 6, 3), float64] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%1005, %1006) /* ty=Tensor[(11, 6, 3), float64] */
}

def @func_8099() -> (Tensor[(3360), float64],) {
  @func_8097() /* ty=(Tensor[(3360), float64],) */
}

def @func_4579(%var_4571: Tensor[(1680), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(1680), float32]) {
  %1007 = cast(%var_4571, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %1008 = reshape(%1007, newshape=[14, 8, 15]) /* ty=Tensor[(14, 8, 15), float32] */;
  %1009 = @func_497(%1008) /* ty=(Tensor[(14, 8, 15), float64], Tensor[(14, 1, 15), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */;
  %1010 = @func_335() /* ty=Tensor[(14, 1, 15), float32] */;
  %1011 = %1009.1;
  (%1010, %1011, %var_4571)
}

def @func_918() -> (Tensor[(14, 1, 15), float32],) {
  %1012 = @func_209() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %1013 = %1012.0;
  (%1013,)
}

def @func_5457() -> (Tensor[(2310), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool]) {
  @func_5455() /* ty=(Tensor[(2310), float32], Tensor[(11, 10, 8), float64], Tensor[(880), bool]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

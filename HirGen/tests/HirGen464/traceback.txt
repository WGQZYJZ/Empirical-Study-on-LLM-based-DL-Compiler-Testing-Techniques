==========mod==========
#[version = "0.0.5"]
def @func_8461() -> (Tensor[(10, 12, 7), bool],) {
  %0 = @func_6317() /* ty=Tensor[(10, 12, 7), bool] */;
  (%0,)
}

def @func_9288() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %1 = @func_3523() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %2 = %1.1;
  %3 = @func_3871() /* ty=Tensor[(10, 12, 7), bool] */;
  (%2, %3)
}

def @func_11236() -> (Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
  %4 = @func_9418() /* ty=(Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */;
  %5 = @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %6 = %4.0;
  %7 = %5.0;
  (%6, %7)
}

def @func_5033() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %8 = @func_1684() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %9 = @func_1684() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %10 = %8.0;
  %11 = %9.0;
  (%10, %11)
}

def @func_8508() -> (Tensor[(10, 12, 7), bool],) {
  %12 = @func_3711() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %13 = %12.0;
  (%13,)
}

def @func_6843() -> (Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
  %14 = @func_2749() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) */;
  %15 = @func_2749() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) */;
  %16 = %14.0;
  %17 = %15.2;
  %18 = @func_3374() /* ty=Tensor[(10, 12, 7), bool] */;
  (%16, %17, %18)
}

def @func_4449() -> Tensor[(10, 12, 7), bool] {
  @func_970() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_11017() -> (Tensor[(10, 12, 7), bool],) {
  %19 = @func_4108() /* ty=Tensor[(10, 12, 7), bool] */;
  (%19,)
}

def @func_2850(%var_2814: Tensor[(160), float64], %var_2815: Tensor[(1350), float64], %var_2816: Tensor[(576), float64], %var_2832: Tensor[(350), int64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64], Tensor[(5, 7, 10), bool], Tensor[(350), int64], Tensor[(10, 12, 7), bool]) {
  %20 = cast(%var_2814, dtype="float64") /* ty=Tensor[(160), float64] */;
  %21 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
  %22 = cast(%21, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %23 = cast(%var_2815, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %24 = cast(%var_2816, dtype="float64") /* ty=Tensor[(576), float64] */;
  %25 = reshape(%20, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
  %26 = reshape(%22, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %27 = reshape(%23, newshape=[135, 10]) /* ty=Tensor[(135, 10), float64] */;
  %28 = reshape(%24, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %29 = @func_1484(%25, %26, %27, %28) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint64], Tensor[(10, 12, 7), float64], Tensor[(135, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) */;
  %30 = cast(%var_2832, dtype="int64") /* ty=Tensor[(350), int64] */;
  %31 = cast(%var_2832, dtype="int64") /* ty=Tensor[(350), int64] */;
  %32 = reshape(%30, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), int64] */;
  %33 = reshape(%31, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), int64] */;
  %34 = @func_2238(%32, %33) /* ty=(Tensor[(5, 7, 10), bool],) */;
  %35 = @func_1375() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %36 = %29.6;
  %37 = %34.0;
  %38 = %35.0;
  (%21, %36, %var_2814, %var_2815, %var_2816, %37, %var_2832, %38)
}

def @func_6019() -> Tensor[(10, 12, 7), bool] {
  %39 = @func_1146() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %39.1
}

def @func_12194(%var_12165: Tensor[(924, 1), float64], %var_12185: Tensor[(756), float64]) -> (Tensor[(13, 3, 8), float32], Tensor[(9, 150), float64], Tensor[(924, 1), float64], Tensor[(576, 1), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(756), float64], Tensor[(3, 7, 7), bool]) {
  %40 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 3, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 3, 8), float32] */;
  %41 = cast(%var_12165, dtype="float64") /* ty=Tensor[(924, 1), float64] */;
  %42 = cast(meta[relay.Constant][1] /* ty=Tensor[(576, 1), float64] */, dtype="float64") /* ty=Tensor[(576, 1), float64] */;
  %43 = reshape(%41, newshape=[6, 11, 14]) /* ty=Tensor[(6, 11, 14), float64] */;
  %44 = reshape(%42, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %45 = @func_2516(%43, %44) /* ty=(Tensor[(9, 150), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(6, 11, 14), float32], Tensor[(6, 11, 14), float64], Tensor[(4, 40), int16]) */;
  %46 = @func_5158() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %47 = cast(%var_12185, dtype="float64") /* ty=Tensor[(756), float64] */;
  %48 = cast(%var_12185, dtype="float64") /* ty=Tensor[(756), float64] */;
  %49 = reshape(%47, newshape=[9, 14, 6]) /* ty=Tensor[(9, 14, 6), float64] */;
  %50 = reshape(%48, newshape=[9, 14, 6]) /* ty=Tensor[(9, 14, 6), float64] */;
  %51 = @func_10566(%49, %50) /* ty=(Tensor[(9, 14, 6), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(576), float64]) */;
  %52 = @func_11144() /* ty=(Tensor[(3, 7, 7), bool],) */;
  %53 = sinh(%40) /* ty=Tensor[(13, 3, 8), float32] */;
  %54 = %45.0;
  %55 = @func_2253() /* ty=Tensor[(10, 12, 7), bool] */;
  %56 = %46.0;
  %57 = %51.1;
  %58 = %52.0;
  (%53, %54, %var_12165, meta[relay.Constant][1] /* ty=Tensor[(576, 1), float64] */, %55, %56, %57, %var_12185, %58)
}

def @func_2253() -> Tensor[(10, 12, 7), bool] {
  %59 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %59.0
}

def @func_4646(%var_4547: Tensor[(576), float64], %var_4581: Tensor[(675, 2), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(1, 160), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), bool], Tensor[(675, 2), float64]) {
  %60 = @func_2404() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) */;
  %61 = @func_4213() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %62 = @func_2573() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %63 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 160), float64] */, dtype="float64") /* ty=Tensor[(1, 160), float64] */;
  %64 = cast(%var_4547, dtype="float64") /* ty=Tensor[(576), float64] */;
  %65 = reshape(%63, newshape=[1, 160]) /* ty=Tensor[(1, 160), float64] */;
  %66 = reshape(%64, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %67 = @func_3091(%65, %66) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(1, 160), float64], Tensor[(675, 2), float64], Tensor[(576), float64]) */;
  %68 = %67.3;
  %69 = cast(meta[relay.Constant][3] /* ty=Tensor[(675, 2), float64] */, dtype="int64") /* ty=Tensor[(675, 2), int64] */;
  %70 = shape_of(%68, dtype="int32") /* ty=Tensor[(2), int32] */;
  %71 = cast(%68, dtype="int64") /* ty=Tensor[(675, 2), int64] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %73 = bitwise_xor(%71, %72) /* ty=Tensor[(675, 2), int64] */;
  %74 = cast(%73, dtype="float64") /* ty=Tensor[(675, 2), float64] */;
  %75 = cos(%74) /* ty=Tensor[(675, 2), float64] */;
  %76 = cast(%var_4581, dtype="uint32") /* ty=Tensor[(675, 2), uint32] */;
  %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(2), int32] */;
  %78 = cast(%75, dtype="uint32") /* ty=Tensor[(675, 2), uint32] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %80 = logical_xor(%78, %79) /* ty=Tensor[(675, 2), uint32] */;
  %81 = cast(meta[relay.Constant][3] /* ty=Tensor[(675, 2), float64] */, dtype="bool") /* ty=Tensor[(675, 2), bool] */;
  %82 = shape_of(%80, dtype="int32") /* ty=Tensor[(2), int32] */;
  %83 = cast(%80, dtype="bool") /* ty=Tensor[(675, 2), bool] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %85 = cast(%68, dtype="float64") /* ty=Tensor[(675, 2), float64] */;
  %86 = %60.1;
  %87 = %61.1;
  %88 = %62.1;
  %89 = not_equal(%83, %84) /* ty=Tensor[(675, 2), bool] */;
  %90 = sin(%85) /* ty=Tensor[(675, 2), float64] */;
  (%86, meta[relay.Constant][2] /* ty=Tensor[(1, 160), float64] */, %var_4547, %87, %88, %89, %90)
}

def @func_1893() -> (Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) {
  %91 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
  %92 = cast(%91, dtype="float64") /* ty=Tensor[(10, 12, 7), float64] */;
  %93 = @func_1684() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %94 = @func_598() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %95 = cast(meta[relay.Constant][4] /* ty=Tensor[(135, 10), float64] */, dtype="float64") /* ty=Tensor[(135, 10), float64] */;
  %96 = reshape(%95, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %97 = @func_1787(%96) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */;
  %98 = cast(meta[relay.Constant][4] /* ty=Tensor[(135, 10), float64] */, dtype="float64") /* ty=Tensor[(135, 10), float64] */;
  %99 = acos(%92) /* ty=Tensor[(10, 12, 7), float64] */;
  %100 = %93.0;
  %101 = %94.0;
  %102 = %97.4;
  %103 = sqrt(%98) /* ty=Tensor[(135, 10), float64] */;
  (%99, %100, %101, %102, %103)
}

def @func_11617() -> Tensor[(10, 12, 7), bool] {
  %104 = @func_8999() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %104.0
}

def @func_3871() -> Tensor[(10, 12, 7), bool] {
  @func_3244() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_9730() -> (Tensor[(10, 12, 7), bool],) {
  %105 = @func_3871() /* ty=Tensor[(10, 12, 7), bool] */;
  (%105,)
}

def @func_5668(%var_5645: Tensor[(675, 2), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), float64]) {
  %106 = cast(%var_5645, dtype="float64") /* ty=Tensor[(675, 2), float64] */;
  %107 = reshape(%106, newshape=[1350, 1]) /* ty=Tensor[(1350, 1), float64] */;
  %108 = @func_5063(%107) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350, 1), float64]) */;
  %109 = @func_2253() /* ty=Tensor[(10, 12, 7), bool] */;
  %110 = %108.1;
  (%109, %110, %var_5645)
}

def @func_8843() -> (Tensor[(10, 12, 7), bool],) {
  %111 = @func_3394() /* ty=Tensor[(10, 12, 7), bool] */;
  (%111,)
}

def @func_2625() -> (Tensor[(10, 12, 7), bool],) {
  %112 = @func_1089() /* ty=Tensor[(10, 12, 7), bool] */;
  (%112,)
}

def @func_9657(%var_9650: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(1350), float32]) {
  %113 = @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %114 = cast(%var_9650, dtype="float64") /* ty=Tensor[(576), float64] */;
  %115 = reshape(%114, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %116 = @func_7543(%115) /* ty=(Tensor[(1350), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */;
  %117 = %116.0;
  %118 = cast(%117, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %119 = %113.0;
  %120 = sigmoid(%118) /* ty=Tensor[(1350), float32] */;
  (%119, %var_9650, %120)
}

def @func_7016() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %121 = @func_6751() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %122 = @func_3711() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %123 = %121.0;
  %124 = %122.0;
  (%123, %124)
}

def @func_4297(%var_4241: Tensor[(9, 5, 5), float64], %var_4280: Tensor[(9, 5, 5), float64]) -> (Tensor[(9, 5, 5), bool], Tensor[(9, 5, 5), bool], Tensor[(9, 5, 5), float64], Tensor[(9, 5, 5), float64]) {
  %125 = cast(%var_4241, dtype="float64") /* ty=Tensor[(9, 5, 5), float64] */;
  %126 = log10(%125) /* ty=Tensor[(9, 5, 5), float64] */;
  %127 = cast(%var_4241, dtype="float64") /* ty=Tensor[(9, 5, 5), float64] */;
  %128 = shape_of(%126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(%126, dtype="float64") /* ty=Tensor[(9, 5, 5), float64] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %131 = floor_mod(%129, %130) /* ty=Tensor[(9, 5, 5), float64] */;
  %132 = cast(%126, dtype="bool") /* ty=Tensor[(9, 5, 5), bool] */;
  %133 = shape_of(%131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(%131, dtype="bool") /* ty=Tensor[(9, 5, 5), bool] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %136 = cast(%var_4241, dtype="bool") /* ty=Tensor[(9, 5, 5), bool] */;
  %137 = shape_of(%var_4280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(%var_4280, dtype="bool") /* ty=Tensor[(9, 5, 5), bool] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %140 = cast(%var_4280, dtype="bool") /* ty=Tensor[(9, 5, 5), bool] */;
  %141 = shape_of(%var_4241, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(%var_4241, dtype="bool") /* ty=Tensor[(9, 5, 5), bool] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %144 = equal(%142, %143) /* ty=Tensor[(9, 5, 5), bool] */;
  %145 = cast(%144, dtype="float64") /* ty=Tensor[(9, 5, 5), float64] */;
  %146 = cast(%131, dtype="float64") /* ty=Tensor[(9, 5, 5), float64] */;
  %147 = less_equal(%134, %135) /* ty=Tensor[(9, 5, 5), bool] */;
  %148 = greater(%138, %139) /* ty=Tensor[(9, 5, 5), bool] */;
  %149 = atanh(%145) /* ty=Tensor[(9, 5, 5), float64] */;
  %150 = acos(%146) /* ty=Tensor[(9, 5, 5), float64] */;
  (%147, %148, %149, %150)
}

def @func_3995() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %151 = @func_3007() /* ty=(Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %152 = @func_3318() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %153 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
  %154 = %151.1;
  %155 = %152.1;
  (%153, %154, %155)
}

def @func_10192(%var_10173: Tensor[(5, 10, 16), uint16], %var_10174: Tensor[(5, 10, 16), uint16]) -> Tensor[(5, 10, 16), uint16] {
  %156 = cast(%var_10174, dtype="uint16") /* ty=Tensor[(5, 10, 16), uint16] */;
  %157 = shape_of(%var_10173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %158 = cast(%var_10173, dtype="uint16") /* ty=Tensor[(5, 10, 16), uint16] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_xor(%158, %159) /* ty=Tensor[(5, 10, 16), uint16] */
}

def @func_569() -> Tensor[(10, 12, 7), bool] {
  %160 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %160.1
}

def @func_4738() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) {
  %161 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %162 = @func_2749() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) */;
  %163 = %161.0;
  %164 = %162.1;
  (%163, %164)
}

def @func_5703() -> Tensor[(10, 12, 7), bool] {
  %165 = @func_598() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %165.0
}

def @func_3598(%var_3592: Tensor[(48), float64], %var_3593: Tensor[(576), float64]) -> (Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) {
  %166 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %167 = cast(%var_3592, dtype="float64") /* ty=Tensor[(48), float64] */;
  %168 = cast(%var_3593, dtype="float64") /* ty=Tensor[(576), float64] */;
  %169 = reshape(%167, newshape=[4, 1, 12]) /* ty=Tensor[(4, 1, 12), float64] */;
  %170 = reshape(%168, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %171 = @func_699(%169, %170) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
  %172 = %166.0;
  %173 = %171.1;
  (%172, %173, %var_3592, %var_3593)
}

def @func_7052() -> (Tensor[(10, 12, 7), bool],) {
  %174 = @func_6317() /* ty=Tensor[(10, 12, 7), bool] */;
  (%174,)
}

def @func_4921() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %175 = @func_3765() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %176 = @func_3711() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %177 = %175.0;
  %178 = %176.0;
  (%177, %178)
}

def @func_7354() -> (Tensor[(10, 12, 7), bool],) {
  %179 = @func_2625() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %180 = %179.0;
  (%180,)
}

def @func_970() -> Tensor[(10, 12, 7), bool] {
  %181 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %181.0
}

def @func_5389() -> (Tensor[(3, 7, 7), bool], Tensor[(11, 10, 15), uint8], Tensor[(1650), uint8]) {
  %182 = @func_3786() /* ty=(Tensor[(3, 7, 7), bool],) */;
  %183 = cast(meta[relay.Constant][5] /* ty=Tensor[(1650), uint8] */, dtype="uint8") /* ty=Tensor[(1650), uint8] */;
  %184 = cast(meta[relay.Constant][5] /* ty=Tensor[(1650), uint8] */, dtype="uint8") /* ty=Tensor[(1650), uint8] */;
  %185 = reshape(%183, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), uint8] */;
  %186 = reshape(%184, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), uint8] */;
  %187 = @func_3820(%185, %186) /* ty=(Tensor[(11, 10, 15), uint8],) */;
  %188 = %182.0;
  %189 = %187.0;
  (%188, %189, meta[relay.Constant][5] /* ty=Tensor[(1650), uint8] */)
}

def @func_7168() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), int64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %190 = @func_3023() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %191 = %190.0;
  %192 = @func_1684() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %193 = %192.0;
  %194 = cast(%193, dtype="int64") /* ty=Tensor[(10, 12, 7), int64] */;
  %195 = shape_of(%191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %196 = cast(%191, dtype="int64") /* ty=Tensor[(10, 12, 7), int64] */;
  %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %198 = @func_3318() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %199 = @func_1375() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %200 = @func_3576() /* ty=Tensor[(10, 12, 7), bool] */;
  %201 = bitwise_and(%196, %197) /* ty=Tensor[(10, 12, 7), int64] */;
  %202 = %198.1;
  %203 = %199.0;
  (%200, %201, %202, %203)
}

def @func_5611() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %204 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %205 = %204.0;
  %206 = @func_3244() /* ty=Tensor[(10, 12, 7), bool] */;
  (%205, %206)
}

def @func_10582() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %207 = @func_8135() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %208 = @func_10387() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %209 = %207.0;
  %210 = %208.0;
  (%209, %210)
}

def @func_10947() -> Tensor[(10, 12, 7), bool] {
  %211 = @func_3007() /* ty=(Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %211.2
}

def @func_7095() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) {
  %212 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %213 = @func_3711() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %214 = %213.0;
  %215 = cast(%214, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %216 = cast(meta[relay.Constant][6] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %217 = reshape(%215, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %218 = reshape(%216, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %219 = @func_526(%217, %218) /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), int16], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64]) */;
  %220 = %212.0;
  %221 = %219.5;
  (%220, %214, %221, meta[relay.Constant][6] /* ty=Tensor[(1350), float64] */)
}

def @func_311() -> (Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %222 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 7, 7), uint8] */, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
  %223 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(3, 7, 7), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 7, 7), uint8] */, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %226 = not_equal(%224, %225) /* ty=Tensor[(3, 7, 7), bool] */;
  %227 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 7, 7), uint8] */, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
  %228 = shape_of(%226, dtype="int32") /* ty=Tensor[(3), int32] */;
  %229 = cast(%226, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %231 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %232 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %233 = logical_and(%229, %230) /* ty=Tensor[(3, 7, 7), bool] */;
  %234 = %231.0;
  %235 = %232.0;
  (%233, %234, %235)
}

def @func_10735(%var_10688: Tensor[(5, 2, 5), uint16], %var_10689: Tensor[(5, 2, 5), uint16]) -> (Tensor[(5, 2, 5), float64],) {
  %236 = cast(%var_10689, dtype="uint16") /* ty=Tensor[(5, 2, 5), uint16] */;
  %237 = shape_of(%var_10688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%var_10688, dtype="uint16") /* ty=Tensor[(5, 2, 5), uint16] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %240 = minimum(%238, %239) /* ty=Tensor[(5, 2, 5), uint16] */;
  %241 = cast(%240, dtype="float64") /* ty=Tensor[(5, 2, 5), float64] */;
  %242 = log(%241) /* ty=Tensor[(5, 2, 5), float64] */;
  (%242,)
}

def @func_3523() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %243 = @func_1939() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %244 = @func_1031() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %245 = %243.0;
  %246 = %244.0;
  %247 = @func_2892() /* ty=Tensor[(10, 12, 7), bool] */;
  (%245, %246, %247)
}

def @func_5223() -> Tensor[(10, 12, 7), bool] {
  %248 = @func_3023() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %248.0
}

def @func_1787(%var_1731: Tensor[(1350), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) {
  %249 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %250 = cast(%var_1731, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %251 = reshape(%250, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %252 = @func_385(%251) /* ty=(Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) */;
  %253 = %252.1;
  %254 = cast(%253, dtype="float32") /* ty=Tensor[(10, 12, 7), float32] */;
  %255 = acosh(%254) /* ty=Tensor[(10, 12, 7), float32] */;
  %256 = cast(%255, dtype="float32") /* ty=Tensor[(10, 12, 7), float32] */;
  %257 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
  %258 = @func_1089() /* ty=Tensor[(10, 12, 7), bool] */;
  %259 = %249.0;
  %260 = atanh(%256) /* ty=Tensor[(10, 12, 7), float32] */;
  (%257, %var_1731, %258, %259, %260)
}

def @func_7897() -> Tensor[(10, 12, 7), bool] {
  %261 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %261.1
}

def @func_11906() -> Tensor[(10, 12, 7), bool] {
  %262 = @func_9957() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %262.1
}

def @func_9493(%var_9484: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(288, 2), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
  %263 = @func_598() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %264 = @func_1031() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %265 = cast(%var_9484, dtype="float64") /* ty=Tensor[(576), float64] */;
  %266 = reshape(%265, newshape=[288, 2]) /* ty=Tensor[(288, 2), float64] */;
  %267 = @func_1267(%266) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(288, 2), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */;
  %268 = @func_1031() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %269 = %263.0;
  %270 = %264.1;
  %271 = %267.2;
  %272 = %268.1;
  (%269, %270, %271, %var_9484, %272)
}

def @func_12315() -> Tensor[(10, 12, 7), bool] {
  %273 = @func_6950() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %273.1
}

def @func_6922() -> Tensor[(10, 12, 7), bool] {
  %274 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %274.1
}

def @func_4146() -> (Tensor[(10, 12, 7), bool],) {
  %275 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %276 = %275.0;
  (%276,)
}

def @func_3576() -> Tensor[(10, 12, 7), bool] {
  %277 = @func_2404() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) */;
  %277.1
}

def @func_6789(%var_6755: Tensor[(3, 10, 1), float32]) -> (Tensor[(3, 10, 10), bool], Tensor[(16, 12, 6), bool], Tensor[(1152), uint32]) {
  %278 = cast(%var_6755, dtype="bool") /* ty=Tensor[(3, 10, 1), bool] */;
  %279 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 10, 10), float32] */, dtype="bool") /* ty=Tensor[(3, 10, 10), bool] */;
  %280 = not_equal(%278, %279) /* ty=Tensor[(3, 10, 10), bool] */;
  %281 = cast(%280, dtype="float32") /* ty=Tensor[(3, 10, 10), float32] */;
  %282 = rsqrt(%281) /* ty=Tensor[(3, 10, 10), float32] */;
  %283 = cast(%280, dtype="bool") /* ty=Tensor[(3, 10, 10), bool] */;
  %284 = shape_of(%282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%282, dtype="bool") /* ty=Tensor[(3, 10, 10), bool] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %287 = cast(meta[relay.Constant][10] /* ty=Tensor[(1152), uint32] */, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
  %288 = cast(meta[relay.Constant][10] /* ty=Tensor[(1152), uint32] */, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
  %289 = reshape(%287, newshape=[16, 12, 6]) /* ty=Tensor[(16, 12, 6), uint32] */;
  %290 = reshape(%288, newshape=[16, 12, 6]) /* ty=Tensor[(16, 12, 6), uint32] */;
  %291 = @func_2432(%289, %290) /* ty=(Tensor[(16, 12, 6), bool], Tensor[(10, 12, 7), bool], Tensor[(135, 10), float64]) */;
  %292 = less(%285, %286) /* ty=Tensor[(3, 10, 10), bool] */;
  %293 = %291.0;
  (%292, %293, meta[relay.Constant][10] /* ty=Tensor[(1152), uint32] */)
}

def @func_10892() -> Tensor[(10, 12, 7), bool] {
  %294 = @func_7204() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %294.0
}

def @func_3267() -> (Tensor[(10, 12, 7), float32],) {
  %295 = @func_2749() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) */;
  %296 = %295.1;
  (%296,)
}

def @func_5370() -> Tensor[(10, 12, 7), bool] {
  @func_2610() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_1130() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %297 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %298 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %299 = %297.1;
  %300 = %298.0;
  (%299, %300)
}

def @func_7696() -> (Tensor[(10, 12, 7), bool], Tensor[(3, 7, 7), float64], Tensor[(10, 12, 7), bool]) {
  %301 = @func_3786() /* ty=(Tensor[(3, 7, 7), bool],) */;
  %302 = %301.0;
  %303 = cast(%302, dtype="float64") /* ty=Tensor[(3, 7, 7), float64] */;
  %304 = @func_5033() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %305 = @func_3394() /* ty=Tensor[(10, 12, 7), bool] */;
  %306 = cosh(%303) /* ty=Tensor[(3, 7, 7), float64] */;
  %307 = %304.0;
  (%305, %306, %307)
}

def @func_621() -> (Tensor[(10, 12, 7), bool],) {
  %308 = @func_598() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %309 = %308.0;
  (%309,)
}

def @func_2238(%var_2226: Tensor[(5, 7, 10), int64], %var_2227: Tensor[(5, 7, 10), int64]) -> (Tensor[(5, 7, 10), bool],) {
  %310 = cast(%var_2227, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %311 = shape_of(%var_2226, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(%var_2226, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %314 = greater(%312, %313) /* ty=Tensor[(5, 7, 10), bool] */;
  (%314,)
}

def @func_13049() -> (Tensor[(10, 12, 7), bool], Tensor[(1350), int32]) {
  %315 = @func_8937() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1350), int32]) */;
  %316 = @func_10923() /* ty=Tensor[(10, 12, 7), bool] */;
  %317 = %315.1;
  (%316, %317)
}

def @func_2586(%var_2579: Tensor[(13, 11, 1), float64]) -> Tensor[(13, 11, ?), bool] {
  %318 = cast(%var_2579, dtype="bool") /* ty=Tensor[(13, 11, 1), bool] */;
  %319 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(13, 11, 1), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 11, 1), float64] */, dtype="bool") /* ty=Tensor[(13, 11, 1), bool] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%320, %321) /* ty=Tensor[(13, 11, ?), bool] */
}

def @func_1975(%var_1968: Tensor[(7, 15, 12), float64]) -> (Tensor[(7, 15, 12), float64],) {
  %322 = cast(%var_1968, dtype="float64") /* ty=Tensor[(7, 15, 12), float64] */;
  %323 = exp(%322) /* ty=Tensor[(7, 15, 12), float64] */;
  (%323,)
}

def @func_3441() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %324 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %325 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
  %326 = %324.0;
  (%325, %326)
}

def @func_1966() -> (Tensor[(10, 12, 7), bool],) {
  %327 = @func_970() /* ty=Tensor[(10, 12, 7), bool] */;
  (%327,)
}

def @func_2183(%var_2153: Tensor[(48), float64], %var_2154: Tensor[(576), float64], %var_2159: Tensor[(160), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(4, 12, 12), float64], Tensor[(48), float64], Tensor[(576), float64], Tensor[(135, 10), float64], Tensor[(160), float64], Tensor[(9, 150), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool]) {
  %328 = @func_1966() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %329 = @func_1375() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %330 = cast(%var_2153, dtype="float64") /* ty=Tensor[(48), float64] */;
  %331 = cast(%var_2154, dtype="float64") /* ty=Tensor[(576), float64] */;
  %332 = reshape(%330, newshape=[4, 1, 12]) /* ty=Tensor[(4, 1, 12), float64] */;
  %333 = reshape(%331, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %334 = @func_699(%332, %333) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
  %335 = cast(%var_2159, dtype="float64") /* ty=Tensor[(160), float64] */;
  %336 = %328.0;
  %337 = cast(%336, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %338 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 150), float64] */, dtype="float64") /* ty=Tensor[(9, 150), float64] */;
  %339 = cast(%var_2154, dtype="float64") /* ty=Tensor[(576), float64] */;
  %340 = reshape(%335, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
  %341 = reshape(%337, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %342 = reshape(%338, newshape=[135, 10]) /* ty=Tensor[(135, 10), float64] */;
  %343 = reshape(%339, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %344 = @func_1484(%340, %341, %342, %343) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint64], Tensor[(10, 12, 7), float64], Tensor[(135, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) */;
  %345 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %346 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %347 = %346.1;
  %348 = cast(%347, dtype="float64") /* ty=Tensor[(10, 12, 7), float64] */;
  %349 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %350 = %329.0;
  %351 = %334.0;
  %352 = %344.5;
  %353 = %345.0;
  %354 = rsqrt(%348) /* ty=Tensor[(10, 12, 7), float64] */;
  %355 = %349.0;
  (%336, %350, %351, %var_2153, %var_2154, %352, %var_2159, meta[relay.Constant][12] /* ty=Tensor[(9, 150), float64] */, %353, %354, %355)
}

def @func_10848(%var_10825: Tensor[(1350), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), bool]) {
  %356 = cast(%var_10825, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %357 = reshape(%356, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %358 = @func_385(%357) /* ty=(Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) */;
  %359 = %358.0;
  %360 = cast(%var_10825, dtype="bool") /* ty=Tensor[(1350), bool] */;
  %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%359, dtype="bool") /* ty=Tensor[(15, 9, 10), bool] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %364 = @func_7897() /* ty=Tensor[(10, 12, 7), bool] */;
  %365 = equal(%362, %363) /* ty=Tensor[(15, 9, 10), bool] */;
  (%364, %365)
}

def @func_904(%var_844: int64, %var_845: Tensor[(13, 3, 12), int64], %var_888: Tensor[(13, 3, 12), float32]) -> (Tensor[(13, 3, 12), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(13, 3, 12), float32]) {
  %366 = cast(%var_844, dtype="bool") /* ty=bool */;
  %367 = cast(%var_845, dtype="bool") /* ty=Tensor[(13, 3, 12), bool] */;
  %368 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %369 = cast(%var_845, dtype="float32") /* ty=Tensor[(13, 3, 12), float32] */;
  %370 = sinh(%369) /* ty=Tensor[(13, 3, 12), float32] */;
  %371 = cast(%var_888, dtype="float32") /* ty=Tensor[(13, 3, 12), float32] */;
  %372 = shape_of(%370, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%370, dtype="float32") /* ty=Tensor[(13, 3, 12), float32] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %375 = not_equal(%366, %367) /* ty=Tensor[(13, 3, 12), bool] */;
  %376 = %368.0;
  %377 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
  %378 = floor_divide(%373, %374) /* ty=Tensor[(13, 3, 12), float32] */;
  (%375, %376, %377, %378)
}

def @func_1267(%var_1216: Tensor[(288, 2), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(288, 2), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) {
  %379 = cast(meta[relay.Constant][13] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %380 = cast(%var_1216, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
  %381 = reshape(%379, newshape=[4, 1, 12]) /* ty=Tensor[(4, 1, 12), float64] */;
  %382 = reshape(%380, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %383 = @func_699(%381, %382) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
  %384 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %385 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %386 = %385.0;
  %387 = cast(%386, dtype="float64") /* ty=Tensor[(10, 12, 7), float64] */;
  %388 = cos(%387) /* ty=Tensor[(10, 12, 7), float64] */;
  %389 = cast(%388, dtype="float32") /* ty=Tensor[(10, 12, 7), float32] */;
  %390 = %383.1;
  %391 = %384.0;
  %392 = @func_970() /* ty=Tensor[(10, 12, 7), bool] */;
  %393 = sinh(%389) /* ty=Tensor[(10, 12, 7), float32] */;
  (%390, meta[relay.Constant][13] /* ty=Tensor[(48), float64] */, %var_1216, %391, %392, %393)
}

def @func_5119() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %394 = @func_3995() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %395 = %394.2;
  %396 = @func_2892() /* ty=Tensor[(10, 12, 7), bool] */;
  (%395, %396)
}

def @func_4381() -> (Tensor[(10, 12, 7), bool],) {
  %397 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %398 = %397.0;
  (%398,)
}

def @func_8999() -> (Tensor[(10, 12, 7), bool],) {
  %399 = @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %400 = %399.0;
  (%400,)
}

def @func_12829() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %401 = @func_3576() /* ty=Tensor[(10, 12, 7), bool] */;
  %402 = @func_9529() /* ty=Tensor[(10, 12, 7), bool] */;
  (%401, %402)
}

def @func_7543(%var_7518: Tensor[(576), float64]) -> (Tensor[(1350), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
  %403 = @func_2404() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) */;
  %404 = cast(%var_7518, dtype="float64") /* ty=Tensor[(576), float64] */;
  %405 = reshape(%404, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %406 = @func_5773(%405) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1, 48), float64], Tensor[(576), float64]) */;
  %407 = %403.3;
  %408 = %406.2;
  %409 = @func_5703() /* ty=Tensor[(10, 12, 7), bool] */;
  (%407, %408, %var_7518, %409)
}

def @func_10748() -> (Tensor[(10, 12, 7), bool],) {
  %410 = @func_8472() /* ty=Tensor[(10, 12, 7), bool] */;
  (%410,)
}

def @func_11724() -> (Tensor[(10, 12, 7), bool],) {
  %411 = @func_3995() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %412 = %411.1;
  (%412,)
}

def @main(%var_13079: Tensor[(6, 12, 16), float32]) -> Tensor[(6, 12, 16), float32] {
  %413 = cast(%var_13079, dtype="float32") /* ty=Tensor[(6, 12, 16), float32] */;
  exp(%413) /* ty=Tensor[(6, 12, 16), float32] */
}

def @func_10142() -> (Tensor[(10, 12, 7), bool],) {
  %414 = @func_8843() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %415 = %414.0;
  (%415,)
}

def @func_12511() -> (Tensor[(10, 12, 7), bool],) {
  %416 = @func_6892() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %417 = %416.0;
  (%417,)
}

def @func_9957() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %418 = @func_2940() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %419 = %418.0;
  %420 = @func_3244() /* ty=Tensor[(10, 12, 7), bool] */;
  (%419, %420)
}

def @func_3318() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %421 = @func_1382() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %422 = %421.0;
  %423 = cast(%422, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %424 = reshape(%423, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %425 = @func_1599(%424) /* ty=(Tensor[(10, 12, 7), uint16], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %426 = %425.2;
  (%422, %426)
}

def @func_12930(%var_12843: Tensor[(13, 15, 5), float64]) -> (Tensor[(13, 15, 5), float64], Tensor[(13, 15, 5), float64], Tensor[(10, 12, 7), bool], Tensor[(96, 12), uint32], Tensor[(10, 12, 7), bool]) {
  %427 = cast(%var_12843, dtype="float64") /* ty=Tensor[(13, 15, 5), float64] */;
  %428 = cast(%var_12843, dtype="float64") /* ty=Tensor[(13, 15, 5), float64] */;
  %429 = @func_6122() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(96, 12), uint32], Tensor[(1350), float32]) */;
  %430 = log(%427) /* ty=Tensor[(13, 15, 5), float64] */;
  %431 = log10(%428) /* ty=Tensor[(13, 15, 5), float64] */;
  %432 = @func_2892() /* ty=Tensor[(10, 12, 7), bool] */;
  %433 = %429.2;
  %434 = @func_3871() /* ty=Tensor[(10, 12, 7), bool] */;
  (%430, %431, %432, %433, %434)
}

def @func_9375() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(3, 450), float64], Tensor[(10, 12, 7), bool]) {
  %435 = @func_6490() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %436 = @func_1031() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %437 = cast(meta[relay.Constant][14] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %438 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 450), float64] */, dtype="float64") /* ty=Tensor[(3, 450), float64] */;
  %439 = reshape(%437, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %440 = reshape(%438, newshape=[675, 2]) /* ty=Tensor[(675, 2), float64] */;
  %441 = @func_4646(%439, %440) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1, 160), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), bool], Tensor[(675, 2), float64]) */;
  %442 = cast(meta[relay.Constant][14] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %443 = reshape(%442, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %444 = @func_5773(%443) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1, 48), float64], Tensor[(576), float64]) */;
  %445 = %435.0;
  %446 = @func_5370() /* ty=Tensor[(10, 12, 7), bool] */;
  %447 = %436.0;
  %448 = %441.0;
  %449 = %444.0;
  (%445, %446, %447, %448, meta[relay.Constant][14] /* ty=Tensor[(576), float64] */, meta[relay.Constant][15] /* ty=Tensor[(3, 450), float64] */, %449)
}

def @func_6547(%var_6541: Tensor[(11, 16, 5), float32]) -> (Tensor[(11, 16, 5), float32],) {
  %450 = cast(%var_6541, dtype="float32") /* ty=Tensor[(11, 16, 5), float32] */;
  %451 = asinh(%450) /* ty=Tensor[(11, 16, 5), float32] */;
  (%451,)
}

def @func_10506(%var_10501: Tensor[(6, 14, 2), float32], %var_10502: Tensor[(6, 14, 2), float32]) -> (Tensor[(6, 14, 2), float32],) {
  %452 = cast(%var_10502, dtype="float32") /* ty=Tensor[(6, 14, 2), float32] */;
  %453 = shape_of(%var_10501, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%var_10501, dtype="float32") /* ty=Tensor[(6, 14, 2), float32] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %456 = multiply(%454, %455) /* ty=Tensor[(6, 14, 2), float32] */;
  (%456,)
}

def @func_2931() -> Tensor[(10, 12, 7), bool] {
  %457 = @func_1382() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %457.0
}

def @func_3023() -> (Tensor[(10, 12, 7), bool],) {
  %458 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
  (%458,)
}

def @func_7755() -> (Tensor[(10, 12, 7), bool],) {
  %459 = @func_3711() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %460 = %459.0;
  (%460,)
}

def @func_598() -> (Tensor[(10, 12, 7), bool],) {
  %461 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
  (%461,)
}

def @func_1684() -> (Tensor[(10, 12, 7), bool],) {
  %462 = @func_1297() /* ty=Tensor[(10, 12, 7), bool] */;
  (%462,)
}

def @func_1375() -> (Tensor[(10, 12, 7), bool],) {
  %463 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %464 = %463.0;
  (%464,)
}

def @func_6892() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %465 = @func_5033() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %466 = @func_5119() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %467 = %465.0;
  %468 = %466.1;
  (%467, %468)
}

def @func_8730() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %469 = @func_6454() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %470 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
  %471 = %469.0;
  %472 = @func_3394() /* ty=Tensor[(10, 12, 7), bool] */;
  (%470, %471, %472)
}

def @func_9244() -> (Tensor[(10, 12, 7), bool],) {
  %473 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
  (%473,)
}

def @func_9901() -> (Tensor[(10, 12, 7), bool], Tensor[(160), float64], Tensor[(576), float64]) {
  %474 = @func_4146() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %475 = cast(meta[relay.Constant][16] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %476 = reshape(%475, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %477 = @func_8308(%476) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64]) */;
  %478 = %474.0;
  %479 = %477.2;
  (%478, %479, meta[relay.Constant][16] /* ty=Tensor[(576), float64] */)
}

def @func_7378(%var_7368: Tensor[(14, 14, 6), float64], %var_7369: Tensor[(14, 14, 6), float64]) -> (Tensor[(14, 14, 6), float64], Tensor[(10, 12, 7), bool], Tensor[(14, 14, 6), float32]) {
  %480 = cast(%var_7369, dtype="float64") /* ty=Tensor[(14, 14, 6), float64] */;
  %481 = shape_of(%var_7368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(%var_7368, dtype="float64") /* ty=Tensor[(14, 14, 6), float64] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %484 = @func_2940() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %485 = cast(%var_7368, dtype="float32") /* ty=Tensor[(14, 14, 6), float32] */;
  %486 = minimum(%482, %483) /* ty=Tensor[(14, 14, 6), float64] */;
  %487 = %484.0;
  %488 = acosh(%485) /* ty=Tensor[(14, 14, 6), float32] */;
  (%486, %487, %488)
}

def @func_10242() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %489 = @func_10142() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %490 = @func_1684() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %491 = %489.0;
  %492 = %490.0;
  %493 = @func_5370() /* ty=Tensor[(10, 12, 7), bool] */;
  (%491, %492, %493)
}

def @func_10375() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint8], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
  %494 = @func_2625() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %495 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %496 = @func_6019() /* ty=Tensor[(10, 12, 7), bool] */;
  %497 = cast(%496, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %498 = reshape(%497, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %499 = @func_4410(%498) /* ty=(Tensor[(10, 12, 7), uint8],) */;
  %500 = @func_6843() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */;
  %501 = cast(meta[relay.Constant][17] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %502 = reshape(%501, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %503 = @func_8308(%502) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64]) */;
  %504 = %494.0;
  %505 = %495.2;
  %506 = %499.0;
  %507 = %500.2;
  %508 = %503.0;
  %509 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
  (%496, %504, %505, %506, %507, %508, meta[relay.Constant][17] /* ty=Tensor[(576), float64] */, %509)
}

def @func_12438() -> Tensor[(10, 12, 7), bool] {
  %510 = @func_5033() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %510.0
}

def @func_9072() -> (Tensor[(10, 12, 7), float64],) {
  %511 = @func_1893() /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) */;
  %512 = %511.0;
  (%512,)
}

def @func_9418() -> (Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
  %513 = @func_6843() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */;
  %514 = @func_1031() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %515 = %513.1;
  %516 = %514.0;
  (%515, %516)
}

def @func_6589(%var_6573: Tensor[(3, 7, 7), bool]) -> (Tensor[(10, 12, 7), bool], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool]) {
  %517 = @func_1382() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %518 = @func_5389() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(11, 10, 15), uint8], Tensor[(1650), uint8]) */;
  %519 = %518.0;
  %520 = cast(%var_6573, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
  %521 = shape_of(%519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%519, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %524 = %517.0;
  %525 = less(%522, %523) /* ty=Tensor[(3, 7, 7), bool] */;
  %526 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
  (%524, %525, %526)
}

def @func_3820(%var_3812: Tensor[(11, 10, 15), uint8], %var_3813: Tensor[(11, 10, 15), uint8]) -> (Tensor[(11, 10, 15), uint8],) {
  %527 = cast(%var_3813, dtype="uint8") /* ty=Tensor[(11, 10, 15), uint8] */;
  %528 = shape_of(%var_3812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%var_3812, dtype="uint8") /* ty=Tensor[(11, 10, 15), uint8] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %531 = multiply(%529, %530) /* ty=Tensor[(11, 10, 15), uint8] */;
  (%531,)
}

def @func_1146() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %532 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
  %533 = @func_970() /* ty=Tensor[(10, 12, 7), bool] */;
  (%532, %533)
}

def @func_2573() -> (Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool]) {
  %534 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %535 = %534.0;
  %536 = @func_2253() /* ty=Tensor[(10, 12, 7), bool] */;
  (%535, %536)
}

def @func_11860() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %537 = @func_5085() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %538 = @func_6122() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(96, 12), uint32], Tensor[(1350), float32]) */;
  %539 = @func_2749() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) */;
  %540 = %537.0;
  %541 = %538.0;
  %542 = @func_4449() /* ty=Tensor[(10, 12, 7), bool] */;
  %543 = @func_4963() /* ty=Tensor[(10, 12, 7), bool] */;
  %544 = %539.0;
  (%540, %541, %542, %543, %544)
}

def @func_11968() -> (Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(1350), float64], Tensor[(10, 12, 7), bool]) {
  %545 = @func_8999() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %546 = cast(meta[relay.Constant][18] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %547 = reshape(%546, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %548 = @func_1787(%547) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */;
  %549 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %550 = %545.0;
  %551 = %548.1;
  %552 = %549.0;
  (%550, %551, meta[relay.Constant][18] /* ty=Tensor[(1350), float64] */, %552)
}

def @func_12061() -> (Tensor[(10, 12, 7), bool],) {
  %553 = @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %554 = %553.0;
  (%554,)
}

def @func_1313() -> Tensor[(10, 12, 7), bool] {
  %555 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %555.1
}

def @func_8433() -> (Tensor[(10, 12, 7), bool],) {
  %556 = @func_3995() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %557 = %556.0;
  (%557,)
}

def @func_12785(%var_12731: Tensor[(15), float64], %var_12759: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(5, 10, 3), float64], Tensor[(150, 15), float64], Tensor[(576), float64], Tensor[(576), float64], Tensor[(150, 15), float32], Tensor[(150, 15), uint32]) {
  %558 = @func_1130() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %559 = cast(%var_12731, dtype="float64") /* ty=Tensor[(15), float64] */;
  %560 = cast(meta[relay.Constant][19] /* ty=Tensor[(150, 1), float64] */, dtype="float64") /* ty=Tensor[(150, 1), float64] */;
  %561 = reshape(%559, newshape=[5, 1, 3]) /* ty=Tensor[(5, 1, 3), float64] */;
  %562 = reshape(%560, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), float64] */;
  %563 = @func_6657(%561, %562) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(5, 10, 3), float64]) */;
  %564 = cast(%var_12731, dtype="bool") /* ty=Tensor[(15), bool] */;
  %565 = cast(meta[relay.Constant][19] /* ty=Tensor[(150, 1), float64] */, dtype="bool") /* ty=Tensor[(150, 1), bool] */;
  %566 = equal(%564, %565) /* ty=Tensor[(150, 15), bool] */;
  %567 = cast(%566, dtype="float64") /* ty=Tensor[(150, 15), float64] */;
  %568 = sigmoid(%567) /* ty=Tensor[(150, 15), float64] */;
  %569 = cast(%568, dtype="float64") /* ty=Tensor[(150, 15), float64] */;
  %570 = cast(%var_12759, dtype="float64") /* ty=Tensor[(576), float64] */;
  %571 = reshape(%570, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %572 = @func_9493(%571) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(288, 2), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */;
  %573 = cast(%566, dtype="float32") /* ty=Tensor[(150, 15), float32] */;
  %574 = shape_of(%568, dtype="int32") /* ty=Tensor[(2), int32] */;
  %575 = cast(%568, dtype="float32") /* ty=Tensor[(150, 15), float32] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %577 = cast(%568, dtype="float64") /* ty=Tensor[(150, 15), float64] */;
  %578 = erf(%577) /* ty=Tensor[(150, 15), float64] */;
  %579 = cast(%566, dtype="uint32") /* ty=Tensor[(150, 15), uint32] */;
  %580 = shape_of(%578, dtype="int32") /* ty=Tensor[(2), int32] */;
  %581 = cast(%578, dtype="uint32") /* ty=Tensor[(150, 15), uint32] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %583 = %558.0;
  %584 = %563.2;
  %585 = atanh(%569) /* ty=Tensor[(150, 15), float64] */;
  %586 = %572.3;
  %587 = floor_divide(%575, %576) /* ty=Tensor[(150, 15), float32] */;
  %588 = maximum(%581, %582) /* ty=Tensor[(150, 15), uint32] */;
  (%583, %584, %585, %586, %var_12759, %587, %588)
}

def @func_12498() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %589 = @func_9445() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %590 = @func_2693() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %591 = %589.0;
  %592 = %590.0;
  (%591, %592)
}

def @func_6454() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %593 = @func_1130() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %594 = @func_4449() /* ty=Tensor[(10, 12, 7), bool] */;
  %595 = %593.1;
  (%594, %595)
}

def @func_6950() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %596 = @func_2940() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %597 = %596.0;
  %598 = @func_3374() /* ty=Tensor[(10, 12, 7), bool] */;
  (%597, %598)
}

def @func_4213() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %599 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %600 = %599.0;
  %601 = @func_3576() /* ty=Tensor[(10, 12, 7), bool] */;
  (%600, %601)
}

def @func_12570() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %602 = @func_3765() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %603 = @func_7204() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %604 = %602.0;
  %605 = %603.0;
  %606 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
  (%604, %605, %606)
}

def @func_3091(%var_3076: Tensor[(1, 160), float64], %var_3078: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(1, 160), float64], Tensor[(675, 2), float64], Tensor[(576), float64]) {
  %607 = cast(%var_3076, dtype="float64") /* ty=Tensor[(1, 160), float64] */;
  %608 = @func_1297() /* ty=Tensor[(10, 12, 7), bool] */;
  %609 = cast(%608, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %610 = cast(meta[relay.Constant][20] /* ty=Tensor[(675, 2), float64] */, dtype="float64") /* ty=Tensor[(675, 2), float64] */;
  %611 = cast(%var_3078, dtype="float64") /* ty=Tensor[(576), float64] */;
  %612 = reshape(%607, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
  %613 = reshape(%609, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %614 = reshape(%610, newshape=[135, 10]) /* ty=Tensor[(135, 10), float64] */;
  %615 = reshape(%611, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %616 = @func_1484(%612, %613, %614, %615) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint64], Tensor[(10, 12, 7), float64], Tensor[(135, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) */;
  %617 = %616.8;
  (%608, %617, %var_3076, meta[relay.Constant][20] /* ty=Tensor[(675, 2), float64] */, %var_3078)
}

def @func_4053(%var_4034: Tensor[(160), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(135, 10), float64], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %618 = cast(%var_4034, dtype="float64") /* ty=Tensor[(160), float64] */;
  %619 = @func_3871() /* ty=Tensor[(10, 12, 7), bool] */;
  %620 = cast(%619, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %621 = cast(meta[relay.Constant][21] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %622 = cast(meta[relay.Constant][22] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %623 = reshape(%618, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
  %624 = reshape(%620, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %625 = reshape(%621, newshape=[135, 10]) /* ty=Tensor[(135, 10), float64] */;
  %626 = reshape(%622, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %627 = @func_1484(%623, %624, %625, %626) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint64], Tensor[(10, 12, 7), float64], Tensor[(135, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) */;
  %628 = @func_3666() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %629 = %627.5;
  %630 = @func_3374() /* ty=Tensor[(10, 12, 7), bool] */;
  %631 = %628.0;
  (%619, %629, %var_4034, meta[relay.Constant][21] /* ty=Tensor[(1350), float64] */, meta[relay.Constant][22] /* ty=Tensor[(576), float64] */, %630, %631)
}

def @func_1382() -> (Tensor[(10, 12, 7), bool],) {
  %632 = @func_1146() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %633 = %632.1;
  (%633,)
}

def @func_7264() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(4, 12, 12), float64], Tensor[(48), float64], Tensor[(576), float64]) {
  %634 = @func_1130() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %635 = @func_6751() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %636 = cast(meta[relay.Constant][23] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %637 = cast(meta[relay.Constant][24] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %638 = reshape(%636, newshape=[4, 1, 12]) /* ty=Tensor[(4, 1, 12), float64] */;
  %639 = reshape(%637, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %640 = @func_699(%638, %639) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
  %641 = %634.1;
  %642 = %635.0;
  %643 = %640.0;
  (%641, %642, %643, meta[relay.Constant][23] /* ty=Tensor[(48), float64] */, meta[relay.Constant][24] /* ty=Tensor[(576), float64] */)
}

def @func_6206() -> Tensor[(10, 12, 7), bool] {
  %644 = @func_1893() /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) */;
  %644.1
}

def @func_2892() -> Tensor[(10, 12, 7), bool] {
  %645 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %645.0
}

def @func_9134(%var_9112: Tensor[(12, 48), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(9, 150), float64], Tensor[(12, 48), float64], Tensor[(10, 12, 7), bool], Tensor[(7, 132), bool], Tensor[(10, 12, 7), bool]) {
  %646 = @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %647 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 132), float64] */, dtype="float64") /* ty=Tensor[(7, 132), float64] */;
  %648 = cast(%var_9112, dtype="float64") /* ty=Tensor[(12, 48), float64] */;
  %649 = reshape(%647, newshape=[6, 11, 14]) /* ty=Tensor[(6, 11, 14), float64] */;
  %650 = reshape(%648, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %651 = @func_2516(%649, %650) /* ty=(Tensor[(9, 150), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(6, 11, 14), float32], Tensor[(6, 11, 14), float64], Tensor[(4, 40), int16]) */;
  %652 = @func_2940() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %653 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 132), float64] */, dtype="float32") /* ty=Tensor[(7, 132), float32] */;
  %654 = log(%653) /* ty=Tensor[(7, 132), float32] */;
  %655 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 132), float64] */, dtype="bool") /* ty=Tensor[(7, 132), bool] */;
  %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(2), int32] */;
  %657 = cast(%654, dtype="bool") /* ty=Tensor[(7, 132), bool] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %659 = @func_2625() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %660 = %646.0;
  %661 = %651.0;
  %662 = %652.0;
  %663 = logical_or(%657, %658) /* ty=Tensor[(7, 132), bool] */;
  %664 = %659.0;
  (%660, %661, %var_9112, %662, %663, %664)
}

def @func_12095() -> (Tensor[(10, 12, 7), bool],) {
  %665 = @func_1297() /* ty=Tensor[(10, 12, 7), bool] */;
  (%665,)
}

def @func_3765() -> (Tensor[(10, 12, 7), bool],) {
  %666 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %667 = %666.0;
  (%667,)
}

def @func_2404() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) {
  %668 = @func_1375() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %669 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %670 = cast(meta[relay.Constant][26] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %671 = reshape(%670, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %672 = @func_1787(%671) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */;
  %673 = %668.0;
  %674 = %669.0;
  %675 = %672.2;
  (%673, %674, %675, meta[relay.Constant][26] /* ty=Tensor[(1350), float64] */)
}

def @func_2940() -> (Tensor[(10, 12, 7), bool],) {
  %676 = @func_2673() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %677 = %676.0;
  (%677,)
}

def @func_12702() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %678 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %679 = @func_4146() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %680 = %678.1;
  %681 = %679.0;
  %682 = @func_4963() /* ty=Tensor[(10, 12, 7), bool] */;
  (%680, %681, %682)
}

def @func_385(%var_379: Tensor[(15, 9, 10), float64]) -> (Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) {
  %683 = cast(%var_379, dtype="float64") /* ty=Tensor[(15, 9, 10), float64] */;
  %684 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %685 = asinh(%683) /* ty=Tensor[(15, 9, 10), float64] */;
  %686 = %684.1;
  (%685, %686)
}

def @func_2673() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %687 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %688 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
  %689 = %687.0;
  (%688, %689)
}

def @func_5063(%var_5059: Tensor[(1350, 1), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350, 1), float64]) {
  %690 = @func_2693() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %691 = cast(%var_5059, dtype="float64") /* ty=Tensor[(1350, 1), float64] */;
  %692 = reshape(%691, newshape=[9, 150]) /* ty=Tensor[(9, 150), float64] */;
  %693 = @func_3188(%692) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(9, 150), float64]) */;
  %694 = %690.0;
  %695 = @func_1297() /* ty=Tensor[(10, 12, 7), bool] */;
  %696 = %693.3;
  (%694, %695, %696, %var_5059)
}

def @func_12088() -> (Tensor[(10, 12, 7), bool], Tensor[(576), float64]) {
  %697 = @func_11381() /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
  %698 = @func_11236() /* ty=(Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */;
  %699 = %697.1;
  %700 = %698.0;
  (%699, %700)
}

def @func_231() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %701 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %702 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %703 = %701.0;
  %704 = %702.0;
  (%703, %704)
}

def @func_3007() -> (Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %705 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %706 = %705.0;
  %707 = cast(%706, dtype="float32") /* ty=Tensor[(10, 12, 7), float32] */;
  %708 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %709 = @func_1939() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %710 = atan(%707) /* ty=Tensor[(10, 12, 7), float32] */;
  %711 = %708.1;
  %712 = %709.1;
  (%710, %711, %712)
}

def @func_12205() -> Tensor[(10, 12, 7), bool] {
  @func_11574() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_4410(%var_4401: Tensor[(10, 12, 7), bool]) -> (Tensor[(10, 12, 7), uint8],) {
  %713 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %714 = %713.0;
  %715 = cast(%var_4401, dtype="uint8") /* ty=Tensor[(10, 12, 7), uint8] */;
  %716 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %717 = cast(%714, dtype="uint8") /* ty=Tensor[(10, 12, 7), uint8] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %719 = minimum(%717, %718) /* ty=Tensor[(10, 12, 7), uint8] */;
  (%719,)
}

def @func_11144() -> (Tensor[(3, 7, 7), bool],) {
  %720 = @func_2573() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %721 = %720.0;
  (%721,)
}

def @func_526(%var_428: Tensor[(10, 12, 7), bool], %var_451: Tensor[(1350), float64]) -> (Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), int16], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64]) {
  %722 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %723 = %722.0;
  %724 = cast(%var_428, dtype="float64") /* ty=Tensor[(10, 12, 7), float64] */;
  %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(3), int32] */;
  %726 = cast(%723, dtype="float64") /* ty=Tensor[(10, 12, 7), float64] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %728 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %729 = %728.2;
  %730 = cast(%729, dtype="float32") /* ty=Tensor[(10, 12, 7), float32] */;
  %731 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %732 = cast(%var_451, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %733 = reshape(%732, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %734 = @func_385(%733) /* ty=(Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) */;
  %735 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %736 = cast(%var_451, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %737 = reshape(%736, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %738 = @func_385(%737) /* ty=(Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) */;
  %739 = cast(meta[relay.Constant][27] /* ty=Tensor[(10, 12, 7), bool] */, dtype="int16") /* ty=Tensor[(10, 12, 7), int16] */;
  %740 = shape_of(%var_428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %741 = cast(%var_428, dtype="int16") /* ty=Tensor[(10, 12, 7), int16] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %743 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %744 = cast(%var_451, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %745 = reshape(%744, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %746 = @func_385(%745) /* ty=(Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) */;
  %747 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %748 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %749 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %750 = %746.0;
  %751 = cast(%750, dtype="float64") /* ty=Tensor[(15, 9, 10), float64] */;
  %752 = reshape(%751, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %753 = @func_385(%752) /* ty=(Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) */;
  %754 = floor_mod(%726, %727) /* ty=Tensor[(10, 12, 7), float64] */;
  %755 = log10(%730) /* ty=Tensor[(10, 12, 7), float32] */;
  %756 = %731.2;
  %757 = %734.1;
  %758 = %735.0;
  %759 = %738.1;
  %760 = bitwise_xor(%741, %742) /* ty=Tensor[(10, 12, 7), int16] */;
  %761 = %743.0;
  %762 = %747.0;
  %763 = %748.1;
  %764 = %749.0;
  %765 = %753.0;
  (%754, %755, %756, %757, %var_451, %758, %759, %760, %761, %750, %762, %763, %764, %765)
}

def @func_10566(%var_10544: Tensor[(9, 14, 6), float64], %var_10545: Tensor[(9, 14, 6), float64]) -> (Tensor[(9, 14, 6), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(576), float64]) {
  %766 = cast(%var_10545, dtype="float64") /* ty=Tensor[(9, 14, 6), float64] */;
  %767 = shape_of(%var_10544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%var_10544, dtype="float64") /* ty=Tensor[(9, 14, 6), float64] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %770 = cast(meta[relay.Constant][28] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %771 = reshape(%770, newshape=[288, 2]) /* ty=Tensor[(288, 2), float64] */;
  %772 = @func_1267(%771) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(288, 2), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */;
  %773 = power(%768, %769) /* ty=Tensor[(9, 14, 6), float64] */;
  %774 = @func_3244() /* ty=Tensor[(10, 12, 7), bool] */;
  %775 = %772.4;
  (%773, %774, %775, meta[relay.Constant][28] /* ty=Tensor[(576), float64] */)
}

def @func_5836(%var_5780: Tensor[(5, 16, 6), int8], %var_5809: Tensor[(5, 16, 6), float64], %var_5833: Tensor[(576), float64], %var_5834: Tensor[(1350), float64]) -> (Tensor[(5, 16, 6), bool], Tensor[(5, 16, 6), int32], Tensor[(10, 12, 7), float32], Tensor[(1, 160), float64], Tensor[(576), float64], Tensor[(1350), float64]) {
  %776 = cast(%var_5780, dtype="bool") /* ty=Tensor[(5, 16, 6), bool] */;
  %777 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(5, 16, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 16, 6), int8] */, dtype="bool") /* ty=Tensor[(5, 16, 6), bool] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %780 = cast(%var_5780, dtype="float64") /* ty=Tensor[(5, 16, 6), float64] */;
  %781 = erf(%780) /* ty=Tensor[(5, 16, 6), float64] */;
  %782 = cast(%var_5809, dtype="int64") /* ty=Tensor[(5, 16, 6), int64] */;
  %783 = shape_of(%781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(%781, dtype="int64") /* ty=Tensor[(5, 16, 6), int64] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %786 = bitwise_and(%784, %785) /* ty=Tensor[(5, 16, 6), int64] */;
  %787 = cast(%781, dtype="int32") /* ty=Tensor[(5, 16, 6), int32] */;
  %788 = shape_of(%786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%786, dtype="int32") /* ty=Tensor[(5, 16, 6), int32] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %791 = @func_2749() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) */;
  %792 = cast(%var_5833, dtype="float64") /* ty=Tensor[(576), float64] */;
  %793 = cast(%var_5834, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %794 = reshape(%792, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %795 = reshape(%793, newshape=[675, 2]) /* ty=Tensor[(675, 2), float64] */;
  %796 = @func_4646(%794, %795) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1, 160), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), bool], Tensor[(675, 2), float64]) */;
  %797 = less(%778, %779) /* ty=Tensor[(5, 16, 6), bool] */;
  %798 = minimum(%789, %790) /* ty=Tensor[(5, 16, 6), int32] */;
  %799 = %791.1;
  %800 = %796.1;
  (%797, %798, %799, %800, %var_5833, %var_5834)
}

def @func_10387() -> (Tensor[(10, 12, 7), bool],) {
  %801 = @func_5370() /* ty=Tensor[(10, 12, 7), bool] */;
  (%801,)
}

def @func_9445() -> (Tensor[(10, 12, 7), bool],) {
  %802 = @func_6751() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %803 = %802.0;
  (%803,)
}

def @func_12983() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %804 = @func_10452() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %805 = @func_12088() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(576), float64]) */;
  %806 = @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %807 = %804.0;
  %808 = %805.0;
  %809 = @func_10947() /* ty=Tensor[(10, 12, 7), bool] */;
  %810 = %806.0;
  (%807, %808, %809, %810)
}

def @func_4108() -> Tensor[(10, 12, 7), bool] {
  %811 = @func_3711() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %811.0
}

def @func_5279() -> Tensor[(10, 12, 7), bool] {
  %812 = @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %812.0
}

def @func_6317() -> Tensor[(10, 12, 7), bool] {
  @func_4449() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_10452() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %813 = @func_3023() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %814 = @func_2625() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %815 = %813.0;
  %816 = %814.0;
  (%815, %816)
}

def @func_11431(%var_11388: Tensor[(11, 4, 16), float32], %var_11389: Tensor[(11, 4, 16), float32]) -> (Tensor[(11, 4, 16), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %817 = cast(%var_11389, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
  %818 = shape_of(%var_11388, dtype="int32") /* ty=Tensor[(3), int32] */;
  %819 = cast(%var_11388, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
  %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %821 = @func_2940() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %822 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %823 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %824 = floor_mod(%819, %820) /* ty=Tensor[(11, 4, 16), float32] */;
  %825 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
  %826 = %821.0;
  %827 = %822.0;
  %828 = %823.0;
  (%824, %825, %826, %827, %828)
}

def @func_3929(%var_3890: Tensor[(48), float64], %var_3894: Tensor[(1260), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64], Tensor[(7, 15, 12), float64], Tensor[(1260), float64], Tensor[(9, 150), float64], Tensor[(154, 6), float64]) {
  %829 = cast(%var_3890, dtype="float64") /* ty=Tensor[(48), float64] */;
  %830 = cast(meta[relay.Constant][30] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %831 = reshape(%829, newshape=[4, 1, 12]) /* ty=Tensor[(4, 1, 12), float64] */;
  %832 = reshape(%830, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %833 = @func_699(%831, %832) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
  %834 = cast(%var_3894, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %835 = reshape(%834, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), float64] */;
  %836 = @func_1975(%835) /* ty=(Tensor[(7, 15, 12), float64],) */;
  %837 = cast(meta[relay.Constant][31] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %838 = cast(meta[relay.Constant][30] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %839 = reshape(%837, newshape=[6, 11, 14]) /* ty=Tensor[(6, 11, 14), float64] */;
  %840 = reshape(%838, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %841 = @func_2516(%839, %840) /* ty=(Tensor[(9, 150), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(6, 11, 14), float32], Tensor[(6, 11, 14), float64], Tensor[(4, 40), int16]) */;
  %842 = @func_3374() /* ty=Tensor[(10, 12, 7), bool] */;
  %843 = %833.1;
  %844 = %836.0;
  %845 = %841.0;
  (%842, %843, %var_3890, meta[relay.Constant][30] /* ty=Tensor[(576), float64] */, %844, %var_3894, %845, meta[relay.Constant][31] /* ty=Tensor[(154, 6), float64] */)
}

def @func_10461() -> Tensor[(10, 12, 7), bool] {
  @func_3374() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_10939(%var_10927: Tensor[(9, 16, 15), float32]) -> (Tensor[(9, 16, 15), float32],) {
  %846 = cast(%var_10927, dtype="float32") /* ty=Tensor[(9, 16, 15), float32] */;
  %847 = sqrt(%846) /* ty=Tensor[(9, 16, 15), float32] */;
  (%847,)
}

def @func_8472() -> Tensor[(10, 12, 7), bool] {
  %848 = @func_3441() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %848.1
}

def @func_3711() -> (Tensor[(10, 12, 7), bool],) {
  %849 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
  (%849,)
}

def @func_5085() -> (Tensor[(10, 12, 7), bool],) {
  %850 = @func_2940() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %851 = %850.0;
  (%851,)
}

def @func_9769() -> (Tensor[(10, 12, 7), bool], Tensor[(675, 2), float64], Tensor[(1350), float64], Tensor[(10, 12, 7), bool]) {
  %852 = @func_5033() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %853 = cast(meta[relay.Constant][32] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %854 = reshape(%853, newshape=[675, 2]) /* ty=Tensor[(675, 2), float64] */;
  %855 = @func_5668(%854) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), float64]) */;
  %856 = %852.1;
  %857 = %855.2;
  %858 = @func_2610() /* ty=Tensor[(10, 12, 7), bool] */;
  (%856, %857, meta[relay.Constant][32] /* ty=Tensor[(1350), float64] */, %858)
}

def @func_6490() -> (Tensor[(10, 12, 7), bool],) {
  %859 = @func_3666() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %860 = %859.0;
  (%860,)
}

def @func_7503(%var_7440: Tensor[(1350), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float32]) {
  %861 = cast(%var_7440, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %862 = reshape(%861, newshape=[675, 2]) /* ty=Tensor[(675, 2), float64] */;
  %863 = @func_5668(%862) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), float64]) */;
  %864 = cast(%var_7440, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %865 = @func_1297() /* ty=Tensor[(10, 12, 7), bool] */;
  %866 = %863.0;
  %867 = asin(%864) /* ty=Tensor[(1350), float32] */;
  (%865, %866, %867)
}

def @func_1484(%var_1399: Tensor[(8, 4, 5), float64], %var_1415: Tensor[(10, 12, 7), bool], %var_1433: Tensor[(135, 10), float64], %var_1455: Tensor[(576), float64]) -> (Tensor[(8, 4, 5), float64], Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint64], Tensor[(10, 12, 7), float64], Tensor[(135, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) {
  %868 = cast(meta[relay.Constant][33] /* ty=Tensor[(8, 4, 5), float64] */, dtype="float64") /* ty=Tensor[(8, 4, 5), float64] */;
  %869 = shape_of(%var_1399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %870 = cast(%var_1399, dtype="float64") /* ty=Tensor[(8, 4, 5), float64] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %872 = @func_598() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %873 = %872.0;
  %874 = cast(%var_1415, dtype="uint32") /* ty=Tensor[(10, 12, 7), uint32] */;
  %875 = shape_of(%873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %876 = cast(%873, dtype="uint32") /* ty=Tensor[(10, 12, 7), uint32] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %878 = cast(%var_1415, dtype="uint64") /* ty=Tensor[(10, 12, 7), uint64] */;
  %879 = shape_of(%873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(%873, dtype="uint64") /* ty=Tensor[(10, 12, 7), uint64] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %882 = maximum(%876, %877) /* ty=Tensor[(10, 12, 7), uint32] */;
  %883 = cast(%882, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %884 = cast(%var_1433, dtype="float64") /* ty=Tensor[(135, 10), float64] */;
  %885 = reshape(%883, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %886 = reshape(%884, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %887 = @func_526(%885, %886) /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), int16], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64]) */;
  %888 = cast(meta[relay.Constant][34] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %889 = cast(%var_1455, dtype="float64") /* ty=Tensor[(576), float64] */;
  %890 = reshape(%888, newshape=[4, 1, 12]) /* ty=Tensor[(4, 1, 12), float64] */;
  %891 = reshape(%889, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %892 = @func_699(%890, %891) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
  %893 = mod(%870, %871) /* ty=Tensor[(8, 4, 5), float64] */;
  %894 = @func_1089() /* ty=Tensor[(10, 12, 7), bool] */;
  %895 = logical_xor(%880, %881) /* ty=Tensor[(10, 12, 7), uint64] */;
  %896 = %887.0;
  %897 = %892.1;
  (%893, %882, %894, %895, %896, %var_1433, %897, meta[relay.Constant][34] /* ty=Tensor[(48), float64] */, %var_1455)
}

def @func_5917(%var_5872: Tensor[(1, 6, 9), bool], %var_5873: Tensor[(9, 6, 9), bool]) -> (Tensor[(9, 6, 9), int64], Tensor[(1, 6, 9), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %898 = cast(%var_5872, dtype="float64") /* ty=Tensor[(1, 6, 9), float64] */;
  %899 = exp(%898) /* ty=Tensor[(1, 6, 9), float64] */;
  %900 = cast(%var_5872, dtype="bool") /* ty=Tensor[(1, 6, 9), bool] */;
  %901 = cast(%var_5873, dtype="bool") /* ty=Tensor[(9, 6, 9), bool] */;
  %902 = logical_or(%900, %901) /* ty=Tensor[(9, 6, 9), bool] */;
  %903 = cast(%902, dtype="bool") /* ty=Tensor[(9, 6, 9), bool] */;
  %904 = cast(%var_5872, dtype="bool") /* ty=Tensor[(1, 6, 9), bool] */;
  %905 = greater_equal(%903, %904) /* ty=Tensor[(9, 6, 9), bool] */;
  %906 = cast(%899, dtype="int64") /* ty=Tensor[(1, 6, 9), int64] */;
  %907 = cast(%905, dtype="int64") /* ty=Tensor[(9, 6, 9), int64] */;
  %908 = cast(%899, dtype="float32") /* ty=Tensor[(1, 6, 9), float32] */;
  %909 = @func_1375() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %910 = @func_2625() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %911 = bitwise_xor(%906, %907) /* ty=Tensor[(9, 6, 9), int64] */;
  %912 = sin(%908) /* ty=Tensor[(1, 6, 9), float32] */;
  %913 = %909.0;
  %914 = %910.0;
  %915 = @func_3394() /* ty=Tensor[(10, 12, 7), bool] */;
  (%911, %912, %913, %914, %915)
}

def @func_6411(%var_6392: Tensor[(7, 3, 3), float32]) -> Tensor[(7, 3, 3), float32] {
  %916 = cast(meta[relay.Constant][35] /* ty=Tensor[(7, 3, 3), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 3), float32] */;
  %917 = shape_of(%var_6392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %918 = cast(%var_6392, dtype="float32") /* ty=Tensor[(7, 3, 3), float32] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%918, %919) /* ty=Tensor[(7, 3, 3), float32] */
}

def @func_699(%var_681: Tensor[(4, 1, 12), float64], %var_682: Tensor[(4, 12, 12), float64]) -> (Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) {
  %920 = cast(%var_681, dtype="float64") /* ty=Tensor[(4, 1, 12), float64] */;
  %921 = cast(%var_682, dtype="float64") /* ty=Tensor[(4, 12, 12), float64] */;
  %922 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %923 = mod(%920, %921) /* ty=Tensor[(4, 12, 12), float64] */;
  %924 = %922.0;
  (%923, %924)
}

def @func_9529() -> Tensor[(10, 12, 7), bool] {
  %925 = @func_5085() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %925.0
}

def @func_3244() -> Tensor[(10, 12, 7), bool] {
  @func_1313() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_10923() -> Tensor[(10, 12, 7), bool] {
  %926 = @func_10638() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %926.0
}

def @func_12379() -> Tensor[(10, 12, 7), bool] {
  %927 = @func_7204() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %927.0
}

def @func_1599(%var_1541: Tensor[(10, 12, 7), bool]) -> (Tensor[(10, 12, 7), uint16], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %928 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %929 = %928.0;
  %930 = cast(%var_1541, dtype="uint16") /* ty=Tensor[(10, 12, 7), uint16] */;
  %931 = shape_of(%929, dtype="int32") /* ty=Tensor[(3), int32] */;
  %932 = cast(%929, dtype="uint16") /* ty=Tensor[(10, 12, 7), uint16] */;
  %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %934 = @func_1130() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %935 = subtract(%932, %933) /* ty=Tensor[(10, 12, 7), uint16] */;
  %936 = @func_1089() /* ty=Tensor[(10, 12, 7), bool] */;
  %937 = %934.0;
  (%935, %936, %937)
}

def @func_11381() -> (Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) {
  %938 = @func_7264() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(4, 12, 12), float64], Tensor[(48), float64], Tensor[(576), float64]) */;
  %939 = @func_3711() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %940 = %938.2;
  %941 = %939.0;
  (%940, %941)
}

def @func_1939() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %942 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %943 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %944 = %942.0;
  %945 = %943.0;
  (%944, %945)
}

def @func_8872() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %946 = @func_3007() /* ty=(Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %947 = %946.2;
  %948 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
  (%947, %948)
}

def @func_6481() -> (Tensor[(6, 2, 7), float64], Tensor[(10, 12, 7), bool]) {
  %949 = cast(-9.863f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %950 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 2, 7), float64] */, dtype="float64") /* ty=Tensor[(6, 2, 7), float64] */;
  %951 = @func_1146() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %952 = divide(%949, %950) /* ty=Tensor[(6, 2, 7), float64] */;
  %953 = %951.1;
  (%952, %953)
}

def @func_3786() -> (Tensor[(3, 7, 7), bool],) {
  %954 = @func_2573() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %955 = %954.0;
  (%955,)
}

def @func_1297() -> Tensor[(10, 12, 7), bool] {
  %956 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %956.0
}

def @func_6657(%var_6602: Tensor[(5, 1, 3), float64], %var_6603: Tensor[(5, 10, 3), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(5, 10, 3), float64]) {
  %957 = @func_4146() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %958 = cast(%var_6602, dtype="bool") /* ty=Tensor[(5, 1, 3), bool] */;
  %959 = cast(%var_6603, dtype="bool") /* ty=Tensor[(5, 10, 3), bool] */;
  %960 = equal(%958, %959) /* ty=Tensor[(5, 10, 3), bool] */;
  %961 = cast(%var_6603, dtype="float64") /* ty=Tensor[(5, 10, 3), float64] */;
  %962 = shape_of(%960, dtype="int32") /* ty=Tensor[(3), int32] */;
  %963 = cast(%960, dtype="float64") /* ty=Tensor[(5, 10, 3), float64] */;
  %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %965 = @func_1297() /* ty=Tensor[(10, 12, 7), bool] */;
  %966 = %957.0;
  %967 = floor_divide(%963, %964) /* ty=Tensor[(5, 10, 3), float64] */;
  (%965, %966, %967)
}

def @func_8827(%var_8782: Tensor[(486), bool]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(54), bool], Tensor[(486), float64], Tensor[(486), float64], Tensor[(3, 7, 7), float64], Tensor[(13, 3, 12), bool], int64, Tensor[(468), int64]) {
  %968 = cast(meta[relay.Constant][37] /* ty=Tensor[(54), bool] */, dtype="bool") /* ty=Tensor[(54), bool] */;
  %969 = cast(%var_8782, dtype="bool") /* ty=Tensor[(486), bool] */;
  %970 = reshape(%968, newshape=[1, 6, 9]) /* ty=Tensor[(1, 6, 9), bool] */;
  %971 = reshape(%969, newshape=[9, 6, 9]) /* ty=Tensor[(9, 6, 9), bool] */;
  %972 = @func_5917(%970, %971) /* ty=(Tensor[(9, 6, 9), int64], Tensor[(1, 6, 9), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %973 = cast(%var_8782, dtype="float64") /* ty=Tensor[(486), float64] */;
  %974 = cast(%var_8782, dtype="float64") /* ty=Tensor[(486), float64] */;
  %975 = cos(%974) /* ty=Tensor[(486), float64] */;
  %976 = cast(%975, dtype="float64") /* ty=Tensor[(486), float64] */;
  %977 = shape_of(%var_8782, dtype="int32") /* ty=Tensor[(1), int32] */;
  %978 = cast(%var_8782, dtype="float64") /* ty=Tensor[(486), float64] */;
  %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?), float64] */;
  %980 = @func_7696() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(3, 7, 7), float64], Tensor[(10, 12, 7), bool]) */;
  %981 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %982 = cast(meta[relay.Constant][38] /* ty=Tensor[(468), int64] */, dtype="int64") /* ty=Tensor[(468), int64] */;
  %983 = cast(meta[relay.Constant][38] /* ty=Tensor[(468), int64] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %984 = reshape(%981, newshape=[]) /* ty=int64 */;
  %985 = reshape(%982, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), int64] */;
  %986 = reshape(%983, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), float32] */;
  %987 = @func_904(%984, %985, %986) /* ty=(Tensor[(13, 3, 12), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(13, 3, 12), float32]) */;
  %988 = @func_5279() /* ty=Tensor[(10, 12, 7), bool] */;
  %989 = %972.4;
  %990 = rsqrt(%973) /* ty=Tensor[(486), float64] */;
  %991 = divide(%978, %979) /* ty=Tensor[(486), float64] */;
  %992 = %980.1;
  %993 = %987.0;
  (%988, %989, meta[relay.Constant][37] /* ty=Tensor[(54), bool] */, %990, %991, %992, %993, 5 /* ty=int64 */, meta[relay.Constant][38] /* ty=Tensor[(468), int64] */)
}

def @func_10816(%var_10776: Tensor[(21, 3), float32], %var_10811: Tensor[(21, 3), float32]) -> (Tensor[(10, 12, 7), float32], Tensor[(7, 3, 3), float32], Tensor[(10, 12, 7), bool], Tensor[(21, 3), bool]) {
  %994 = @func_1893() /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) */;
  %995 = cast(%var_10776, dtype="float32") /* ty=Tensor[(21, 3), float32] */;
  %996 = reshape(%995, newshape=[7, 3, 3]) /* ty=Tensor[(7, 3, 3), float32] */;
  %997 = @func_9730() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %998 = cast(%var_10776, dtype="float32") /* ty=Tensor[(21, 3), float32] */;
  %999 = log(%998) /* ty=Tensor[(21, 3), float32] */;
  %1000 = cast(%var_10811, dtype="bool") /* ty=Tensor[(21, 3), bool] */;
  %1001 = shape_of(%999, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1002 = cast(%999, dtype="bool") /* ty=Tensor[(21, 3), bool] */;
  %1003 = dyn.reshape(%1000, %1001, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1004 = %994.3;
  %1005 = @func_6411(%996) /* ty=Tensor[(7, 3, 3), float32] */;
  %1006 = %997.0;
  %1007 = less(%1002, %1003) /* ty=Tensor[(21, 3), bool] */;
  (%1004, %1005, %1006, %1007)
}

def @func_213() -> (Tensor[(10, 12, 7), bool],) {
  %1008 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1009 = %1008.0;
  (%1009,)
}

def @func_3394() -> Tensor[(10, 12, 7), bool] {
  %1010 = @func_1130() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1010.1
}

def @func_2432(%var_2420: Tensor[(16, 12, 6), uint32], %var_2421: Tensor[(16, 12, 6), uint32]) -> (Tensor[(16, 12, 6), bool], Tensor[(10, 12, 7), bool], Tensor[(135, 10), float64]) {
  %1011 = cast(%var_2421, dtype="bool") /* ty=Tensor[(16, 12, 6), bool] */;
  %1012 = shape_of(%var_2420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1013 = cast(%var_2420, dtype="bool") /* ty=Tensor[(16, 12, 6), bool] */;
  %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1015 = @func_1893() /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) */;
  %1016 = equal(%1013, %1014) /* ty=Tensor[(16, 12, 6), bool] */;
  %1017 = @func_2253() /* ty=Tensor[(10, 12, 7), bool] */;
  %1018 = %1015.4;
  (%1016, %1017, %1018)
}

def @func_4963() -> Tensor[(10, 12, 7), bool] {
  %1019 = @func_598() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1019.0
}

def @func_3666() -> (Tensor[(10, 12, 7), bool],) {
  %1020 = @func_3523() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1021 = %1020.2;
  (%1021,)
}

def @func_11681() -> (Tensor[(10, 12, 7), bool],) {
  %1022 = @func_970() /* ty=Tensor[(10, 12, 7), bool] */;
  (%1022,)
}

def @func_2516(%var_2462: Tensor[(6, 11, 14), float64], %var_2472: Tensor[(576), float64]) -> (Tensor[(9, 150), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(6, 11, 14), float32], Tensor[(6, 11, 14), float64], Tensor[(4, 40), int16]) {
  %1023 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 48), float64] */, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
  %1024 = cast(%var_2472, dtype="float64") /* ty=Tensor[(576), float64] */;
  %1025 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 40), float64] */, dtype="float64") /* ty=Tensor[(4, 40), float64] */;
  %1026 = reshape(%1023, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1027 = reshape(%1024, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %1028 = reshape(%1025, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %1029 = @func_2183(%1026, %1027, %1028) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(4, 12, 12), float64], Tensor[(48), float64], Tensor[(576), float64], Tensor[(135, 10), float64], Tensor[(160), float64], Tensor[(9, 150), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool]) */;
  %1030 = cast(%var_2462, dtype="float64") /* ty=Tensor[(6, 11, 14), float64] */;
  %1031 = acosh(%1030) /* ty=Tensor[(6, 11, 14), float64] */;
  %1032 = cast(%1031, dtype="float32") /* ty=Tensor[(6, 11, 14), float32] */;
  %1033 = cast(%1031, dtype="float32") /* ty=Tensor[(6, 11, 14), float32] */;
  %1034 = tan(%1033) /* ty=Tensor[(6, 11, 14), float32] */;
  %1035 = cast(%1034, dtype="float64") /* ty=Tensor[(6, 11, 14), float64] */;
  %1036 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 40), float64] */, dtype="int16") /* ty=Tensor[(4, 40), int16] */;
  %1037 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(4, 40), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1038 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 40), float64] */, dtype="int16") /* ty=Tensor[(4, 40), int16] */;
  %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1040 = %1029.7;
  %1041 = exp(%1032) /* ty=Tensor[(6, 11, 14), float32] */;
  %1042 = sinh(%1035) /* ty=Tensor[(6, 11, 14), float64] */;
  %1043 = logical_xor(%1038, %1039) /* ty=Tensor[(4, 40), int16] */;
  (%1040, meta[relay.Constant][39] /* ty=Tensor[(1, 48), float64] */, %var_2472, %1041, %1042, %1043)
}

def @func_8937() -> (Tensor[(10, 12, 7), bool], Tensor[(1350), int32]) {
  %1044 = @func_6454() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1045 = @func_6122() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(96, 12), uint32], Tensor[(1350), float32]) */;
  %1046 = %1045.3;
  %1047 = cast(meta[relay.Constant][42] /* ty=Tensor[(1350), float32] */, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %1048 = shape_of(%1046, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1049 = cast(%1046, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1051 = %1044.0;
  %1052 = logical_xor(%1049, %1050) /* ty=Tensor[(1350), int32] */;
  (%1051, %1052)
}

def @func_7204() -> (Tensor[(10, 12, 7), bool],) {
  %1053 = @func_2931() /* ty=Tensor[(10, 12, 7), bool] */;
  (%1053,)
}

def @func_1089() -> Tensor[(10, 12, 7), bool] {
  @func_569() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_10025() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %1054 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1055 = @func_6490() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1056 = %1054.1;
  %1057 = %1055.0;
  (%1056, %1057)
}

def @func_2610() -> Tensor[(10, 12, 7), bool] {
  %1058 = @func_1031() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1058.1
}

def @func_10410() -> (Tensor[(10, 12, 7), bool],) {
  %1059 = @func_5279() /* ty=Tensor[(10, 12, 7), bool] */;
  (%1059,)
}

def @func_8041(%var_8033: Tensor[(14, 5, 9), int32]) -> Tensor[(14, 5, 9), bool] {
  %1060 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 5, 9), int32] */, dtype="bool") /* ty=Tensor[(14, 5, 9), bool] */;
  %1061 = shape_of(%var_8033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1062 = cast(%var_8033, dtype="bool") /* ty=Tensor[(14, 5, 9), bool] */;
  %1063 = dyn.reshape(%1060, %1061, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1062, %1063) /* ty=Tensor[(14, 5, 9), bool] */
}

def @func_6168() -> (Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(13, 11, ?), bool], Tensor[(143), float64]) {
  %1064 = @func_1893() /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) */;
  %1065 = @func_3995() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1066 = cast(meta[relay.Constant][44] /* ty=Tensor[(143), float64] */, dtype="float64") /* ty=Tensor[(143), float64] */;
  %1067 = reshape(%1066, newshape=[13, 11, 1]) /* ty=Tensor[(13, 11, 1), float64] */;
  %1068 = %1064.0;
  %1069 = @func_1089() /* ty=Tensor[(10, 12, 7), bool] */;
  %1070 = %1065.0;
  %1071 = @func_2586(%1067) /* ty=Tensor[(13, 11, ?), bool] */;
  (%1068, %1069, %1070, %1071, meta[relay.Constant][44] /* ty=Tensor[(143), float64] */)
}

def @func_10638() -> (Tensor[(10, 12, 7), bool],) {
  %1072 = @func_1375() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1073 = %1072.0;
  (%1073,)
}

def @func_6751() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %1074 = @func_3523() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1075 = @func_3007() /* ty=(Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1076 = %1074.2;
  %1077 = %1075.1;
  (%1076, %1077)
}

def @func_5158() -> (Tensor[(10, 12, 7), bool],) {
  %1078 = @func_3374() /* ty=Tensor[(10, 12, 7), bool] */;
  (%1078,)
}

def @func_8135() -> (Tensor[(10, 12, 7), bool],) {
  %1079 = @func_2693() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1080 = %1079.0;
  (%1080,)
}

def @func_8308(%var_8306: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64]) {
  %1081 = @func_4213() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1082 = cast(meta[relay.Constant][45] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %1083 = %1081.1;
  %1084 = cast(%1083, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %1085 = cast(meta[relay.Constant][46] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %1086 = cast(%var_8306, dtype="float64") /* ty=Tensor[(576), float64] */;
  %1087 = reshape(%1082, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
  %1088 = reshape(%1084, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %1089 = reshape(%1085, newshape=[135, 10]) /* ty=Tensor[(135, 10), float64] */;
  %1090 = reshape(%1086, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %1091 = @func_1484(%1087, %1088, %1089, %1090) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint64], Tensor[(10, 12, 7), float64], Tensor[(135, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) */;
  %1092 = %1091.7;
  (%1083, %1092, meta[relay.Constant][45] /* ty=Tensor[(160), float64] */, meta[relay.Constant][46] /* ty=Tensor[(1350), float64] */, %var_8306)
}

def @func_8226() -> (Tensor[(10, 12, 7), bool],) {
  %1093 = @func_2253() /* ty=Tensor[(10, 12, 7), bool] */;
  (%1093,)
}

def @func_7576() -> (Tensor[(10, 12, 7), bool],) {
  %1094 = @func_1031() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1095 = %1094.1;
  (%1095,)
}

def @func_6122() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(96, 12), uint32], Tensor[(1350), float32]) {
  %1096 = @func_3765() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1097 = cast(meta[relay.Constant][47] /* ty=Tensor[(96, 12), uint32] */, dtype="uint32") /* ty=Tensor[(96, 12), uint32] */;
  %1098 = cast(meta[relay.Constant][47] /* ty=Tensor[(96, 12), uint32] */, dtype="uint32") /* ty=Tensor[(96, 12), uint32] */;
  %1099 = reshape(%1097, newshape=[16, 12, 6]) /* ty=Tensor[(16, 12, 6), uint32] */;
  %1100 = reshape(%1098, newshape=[16, 12, 6]) /* ty=Tensor[(16, 12, 6), uint32] */;
  %1101 = @func_2432(%1099, %1100) /* ty=(Tensor[(16, 12, 6), bool], Tensor[(10, 12, 7), bool], Tensor[(135, 10), float64]) */;
  %1102 = @func_2404() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) */;
  %1103 = %1102.3;
  %1104 = cast(meta[relay.Constant][48] /* ty=Tensor[(1350), float64] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %1105 = shape_of(%1103, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1106 = cast(%1103, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %1107 = dyn.reshape(%1104, %1105, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1108 = %1096.0;
  %1109 = %1101.1;
  %1110 = divide(%1106, %1107) /* ty=Tensor[(1350), float32] */;
  (%1108, %1109, meta[relay.Constant][47] /* ty=Tensor[(96, 12), uint32] */, %1110)
}

def @func_5773(%var_5757: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1, 48), float64], Tensor[(576), float64]) {
  %1111 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 48), float64] */, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
  %1112 = cast(%var_5757, dtype="float64") /* ty=Tensor[(576), float64] */;
  %1113 = reshape(%1111, newshape=[4, 1, 12]) /* ty=Tensor[(4, 1, 12), float64] */;
  %1114 = reshape(%1112, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %1115 = @func_699(%1113, %1114) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
  %1116 = @func_1297() /* ty=Tensor[(10, 12, 7), bool] */;
  %1117 = %1115.1;
  (%1116, %1117, meta[relay.Constant][49] /* ty=Tensor[(1, 48), float64] */, %var_5757)
}

def @func_11005() -> (Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool]) {
  %1118 = @func_1893() /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) */;
  %1119 = @func_7016() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1120 = %1118.3;
  %1121 = %1119.0;
  (%1120, %1121)
}

def @func_2693() -> (Tensor[(10, 12, 7), bool],) {
  %1122 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1123 = %1122.0;
  (%1123,)
}

def @func_8118() -> (Tensor[(10, 12, 7), bool],) {
  %1124 = @func_1966() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1125 = %1124.0;
  (%1125,)
}

def @func_4809() -> (Tensor[(10, 12, 7), bool],) {
  %1126 = @func_4146() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1127 = %1126.0;
  (%1127,)
}

def @func_2749() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) {
  %1128 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1129 = cast(meta[relay.Constant][50] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %1130 = reshape(%1129, newshape=[288, 2]) /* ty=Tensor[(288, 2), float64] */;
  %1131 = @func_1267(%1130) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(288, 2), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */;
  %1132 = %1128.0;
  %1133 = %1131.5;
  (%1132, %1133, meta[relay.Constant][50] /* ty=Tensor[(576), float64] */)
}

def @func_3188(%var_3186: Tensor[(9, 150), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(9, 150), float64]) {
  %1134 = @func_2693() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1135 = %1134.0;
  %1136 = cast(%1135, dtype="float32") /* ty=Tensor[(10, 12, 7), float32] */;
  %1137 = @func_598() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1138 = %1137.0;
  %1139 = cast(%1138, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %1140 = cast(%var_3186, dtype="float64") /* ty=Tensor[(9, 150), float64] */;
  %1141 = reshape(%1139, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %1142 = reshape(%1140, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %1143 = @func_526(%1141, %1142) /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), int16], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64]) */;
  %1144 = @func_2892() /* ty=Tensor[(10, 12, 7), bool] */;
  %1145 = asin(%1136) /* ty=Tensor[(10, 12, 7), float32] */;
  %1146 = @func_970() /* ty=Tensor[(10, 12, 7), bool] */;
  %1147 = %1143.11;
  (%1144, %1145, %1138, %1146, %1147, %var_3186)
}

def @func_11574() -> Tensor[(10, 12, 7), bool] {
  %1148 = @func_11236() /* ty=(Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */;
  %1148.1
}

def @func_6284(%var_6235: Tensor[(10, 12, 7), bool]) -> (Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool]) {
  %1149 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1150 = %1149.0;
  %1151 = cast(%var_6235, dtype="uint32") /* ty=Tensor[(10, 12, 7), uint32] */;
  %1152 = shape_of(%1150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1153 = cast(%1150, dtype="uint32") /* ty=Tensor[(10, 12, 7), uint32] */;
  %1154 = dyn.reshape(%1151, %1152, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1155 = @func_5611() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1156 = right_shift(%1153, %1154) /* ty=Tensor[(10, 12, 7), uint32] */;
  %1157 = %1155.1;
  (%1156, %1157)
}

def @func_8394(%var_8384: Tensor[(160), float64], %var_8385: Tensor[(6, 96), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(1, 160), float64], Tensor[(160), float64], Tensor[(6, 96), float64]) {
  %1158 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1159 = cast(%var_8384, dtype="float64") /* ty=Tensor[(160), float64] */;
  %1160 = cast(%var_8385, dtype="float64") /* ty=Tensor[(6, 96), float64] */;
  %1161 = reshape(%1159, newshape=[1, 160]) /* ty=Tensor[(1, 160), float64] */;
  %1162 = reshape(%1160, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %1163 = @func_3091(%1161, %1162) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(1, 160), float64], Tensor[(675, 2), float64], Tensor[(576), float64]) */;
  %1164 = %1158.0;
  %1165 = %1163.2;
  (%1164, %1165, %var_8384, %var_8385)
}

def @func_3374() -> Tensor[(10, 12, 7), bool] {
  @func_970() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_179() -> (Tensor[(10, 12, 7), bool],) {
  %1166 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1167 = cast(meta[relay.Constant][51] /* ty=Tensor[(10, 12, 7), bool] */, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %1168 = logical_or(%1166, %1167) /* ty=Tensor[(10, 12, 7), bool] */;
  (%1168,)
}

def @func_1031() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %1169 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1170 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1171 = %1169.0;
  %1172 = %1170.0;
  (%1171, %1172)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7097() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) {
  @func_7095() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) */
}

def @func_12930(%var_12843: Tensor[(13, 15, 5), float64]) -> (Tensor[(13, 15, 5), float64], Tensor[(13, 15, 5), float64], Tensor[(10, 12, 7), bool], Tensor[(96, 12), uint32], Tensor[(10, 12, 7), bool]) {
  %0 = cast(%var_12843, dtype="float64") /* ty=Tensor[(13, 15, 5), float64] */;
  %1 = cast(%var_12843, dtype="float64") /* ty=Tensor[(13, 15, 5), float64] */;
  %2 = @func_6122() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(96, 12), uint32], Tensor[(1350), float32]) */;
  %3 = log(%0) /* ty=Tensor[(13, 15, 5), float64] */;
  %4 = log10(%1) /* ty=Tensor[(13, 15, 5), float64] */;
  %5 = @func_2892() /* ty=Tensor[(10, 12, 7), bool] */;
  %6 = %2.2;
  %7 = @func_3871() /* ty=Tensor[(10, 12, 7), bool] */;
  (%3, %4, %5, %6, %7)
}

def @func_4646(%var_4547: Tensor[(576), float64], %var_4581: Tensor[(675, 2), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(1, 160), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), bool], Tensor[(675, 2), float64]) {
  %8 = @func_2404() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) */;
  %9 = @func_4213() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %10 = @func_2573() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 160), float64] */, dtype="float64") /* ty=Tensor[(1, 160), float64] */;
  %12 = cast(%var_4547, dtype="float64") /* ty=Tensor[(576), float64] */;
  %13 = reshape(%11, newshape=[1, 160]) /* ty=Tensor[(1, 160), float64] */;
  %14 = reshape(%12, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %15 = @func_3091(%13, %14) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(1, 160), float64], Tensor[(675, 2), float64], Tensor[(576), float64]) */;
  %16 = %15.3;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(675, 2), float64] */, dtype="int64") /* ty=Tensor[(675, 2), int64] */;
  %18 = shape_of(%16, dtype="int32") /* ty=Tensor[(2), int32] */;
  %19 = cast(%16, dtype="int64") /* ty=Tensor[(675, 2), int64] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %21 = bitwise_xor(%19, %20) /* ty=Tensor[(675, 2), int64] */;
  %22 = cast(%21, dtype="float64") /* ty=Tensor[(675, 2), float64] */;
  %23 = cos(%22) /* ty=Tensor[(675, 2), float64] */;
  %24 = cast(%var_4581, dtype="uint32") /* ty=Tensor[(675, 2), uint32] */;
  %25 = shape_of(%23, dtype="int32") /* ty=Tensor[(2), int32] */;
  %26 = cast(%23, dtype="uint32") /* ty=Tensor[(675, 2), uint32] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %28 = logical_xor(%26, %27) /* ty=Tensor[(675, 2), uint32] */;
  %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(675, 2), float64] */, dtype="bool") /* ty=Tensor[(675, 2), bool] */;
  %30 = shape_of(%28, dtype="int32") /* ty=Tensor[(2), int32] */;
  %31 = cast(%28, dtype="bool") /* ty=Tensor[(675, 2), bool] */;
  %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %33 = cast(%16, dtype="float64") /* ty=Tensor[(675, 2), float64] */;
  %34 = %8.1;
  %35 = %9.1;
  %36 = %10.1;
  %37 = not_equal(%31, %32) /* ty=Tensor[(675, 2), bool] */;
  %38 = sin(%33) /* ty=Tensor[(675, 2), float64] */;
  (%34, meta[relay.Constant][0] /* ty=Tensor[(1, 160), float64] */, %var_4547, %35, %36, %37, %38)
}

def @func_5066(%var_5064: Tensor[(1350, 1), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350, 1), float64]) {
  @func_5063(%var_5064) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350, 1), float64]) */
}

def @func_1489(%var_1485: Tensor[(8, 4, 5), float64], %var_1486: Tensor[(10, 12, 7), bool], %var_1487: Tensor[(135, 10), float64], %var_1488: Tensor[(576), float64]) -> (Tensor[(8, 4, 5), float64], Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint64], Tensor[(10, 12, 7), float64], Tensor[(135, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) {
  %69 = fn (%var_1399: Tensor[(8, 4, 5), float64], %var_1415: Tensor[(10, 12, 7), bool], %var_1433: Tensor[(135, 10), float64], %var_1455: Tensor[(576), float64]) -> (Tensor[(8, 4, 5), float64], Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint64], Tensor[(10, 12, 7), float64], Tensor[(135, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) {
    %39 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 4, 5), float64] */, dtype="float64") /* ty=Tensor[(8, 4, 5), float64] */;
    %40 = shape_of(%var_1399, dtype="int32") /* ty=Tensor[(3), int32] */;
    %41 = cast(%var_1399, dtype="float64") /* ty=Tensor[(8, 4, 5), float64] */;
    %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %43 = @func_598() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %44 = %43.0;
    %45 = cast(%var_1415, dtype="uint32") /* ty=Tensor[(10, 12, 7), uint32] */;
    %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
    %47 = cast(%44, dtype="uint32") /* ty=Tensor[(10, 12, 7), uint32] */;
    %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %49 = cast(%var_1415, dtype="uint64") /* ty=Tensor[(10, 12, 7), uint64] */;
    %50 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
    %51 = cast(%44, dtype="uint64") /* ty=Tensor[(10, 12, 7), uint64] */;
    %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %53 = maximum(%47, %48) /* ty=Tensor[(10, 12, 7), uint32] */;
    %54 = cast(%53, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
    %55 = cast(%var_1433, dtype="float64") /* ty=Tensor[(135, 10), float64] */;
    %56 = reshape(%54, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
    %57 = reshape(%55, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
    %58 = @func_526(%56, %57) /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), int16], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64]) */;
    %59 = cast(meta[relay.Constant][3] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %60 = cast(%var_1455, dtype="float64") /* ty=Tensor[(576), float64] */;
    %61 = reshape(%59, newshape=[4, 1, 12]) /* ty=Tensor[(4, 1, 12), float64] */;
    %62 = reshape(%60, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
    %63 = @func_699(%61, %62) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
    %64 = mod(%41, %42) /* ty=Tensor[(8, 4, 5), float64] */;
    %65 = @func_1089() /* ty=Tensor[(10, 12, 7), bool] */;
    %66 = logical_xor(%51, %52) /* ty=Tensor[(10, 12, 7), uint64] */;
    %67 = %58.0;
    %68 = %63.1;
    (%64, %53, %65, %66, %67, %var_1433, %68, meta[relay.Constant][3] /* ty=Tensor[(48), float64] */, %var_1455)
  };
  %69(%var_1485, %var_1486, %var_1487, %var_1488) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint64], Tensor[(10, 12, 7), float64], Tensor[(135, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) */
}

def @func_8398(%var_8396: Tensor[(160), float64], %var_8397: Tensor[(6, 96), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(1, 160), float64], Tensor[(160), float64], Tensor[(6, 96), float64]) {
  @func_8394(%var_8396, %var_8397) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1, 160), float64], Tensor[(160), float64], Tensor[(6, 96), float64]) */
}

def @func_4740() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) {
  @func_4738() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */
}

def @func_8732() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_8730() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_7505(%var_7504: Tensor[(1350), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float32]) {
  %77 = fn (%var_7440: Tensor[(1350), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float32]) {
    %70 = cast(%var_7440, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %71 = reshape(%70, newshape=[675, 2]) /* ty=Tensor[(675, 2), float64] */;
    %72 = @func_5668(%71) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), float64]) */;
    %73 = cast(%var_7440, dtype="float32") /* ty=Tensor[(1350), float32] */;
    %74 = @func_1297() /* ty=Tensor[(10, 12, 7), bool] */;
    %75 = %72.0;
    %76 = asin(%73) /* ty=Tensor[(1350), float32] */;
    (%74, %75, %76)
  };
  %77(%var_7504) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float32]) */
}

def @func_9903() -> (Tensor[(10, 12, 7), bool], Tensor[(160), float64], Tensor[(576), float64]) {
  @func_9901() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(160), float64], Tensor[(576), float64]) */
}

def @func_2894() -> Tensor[(10, 12, 7), bool] {
  @func_2892() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_2519(%var_2517: Tensor[(6, 11, 14), float64], %var_2518: Tensor[(576), float64]) -> (Tensor[(9, 150), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(6, 11, 14), float32], Tensor[(6, 11, 14), float64], Tensor[(4, 40), int16]) {
  %99 = fn (%var_2462: Tensor[(6, 11, 14), float64], %var_2472: Tensor[(576), float64]) -> (Tensor[(9, 150), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(6, 11, 14), float32], Tensor[(6, 11, 14), float64], Tensor[(4, 40), int16]) {
    %78 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 48), float64] */, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
    %79 = cast(%var_2472, dtype="float64") /* ty=Tensor[(576), float64] */;
    %80 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 40), float64] */, dtype="float64") /* ty=Tensor[(4, 40), float64] */;
    %81 = reshape(%78, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %82 = reshape(%79, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %83 = reshape(%80, newshape=[160]) /* ty=Tensor[(160), float64] */;
    %84 = @func_2183(%81, %82, %83) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(4, 12, 12), float64], Tensor[(48), float64], Tensor[(576), float64], Tensor[(135, 10), float64], Tensor[(160), float64], Tensor[(9, 150), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool]) */;
    %85 = cast(%var_2462, dtype="float64") /* ty=Tensor[(6, 11, 14), float64] */;
    %86 = acosh(%85) /* ty=Tensor[(6, 11, 14), float64] */;
    %87 = cast(%86, dtype="float32") /* ty=Tensor[(6, 11, 14), float32] */;
    %88 = cast(%86, dtype="float32") /* ty=Tensor[(6, 11, 14), float32] */;
    %89 = tan(%88) /* ty=Tensor[(6, 11, 14), float32] */;
    %90 = cast(%89, dtype="float64") /* ty=Tensor[(6, 11, 14), float64] */;
    %91 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 40), float64] */, dtype="int16") /* ty=Tensor[(4, 40), int16] */;
    %92 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(4, 40), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %93 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 40), float64] */, dtype="int16") /* ty=Tensor[(4, 40), int16] */;
    %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %95 = %84.7;
    %96 = exp(%87) /* ty=Tensor[(6, 11, 14), float32] */;
    %97 = sinh(%90) /* ty=Tensor[(6, 11, 14), float64] */;
    %98 = logical_xor(%93, %94) /* ty=Tensor[(4, 40), int16] */;
    (%95, meta[relay.Constant][4] /* ty=Tensor[(1, 48), float64] */, %var_2472, %96, %97, %98)
  };
  %99(%var_2517, %var_2518) /* ty=(Tensor[(9, 150), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(6, 11, 14), float32], Tensor[(6, 11, 14), float64], Tensor[(4, 40), int16]) */
}

def @func_179() -> (Tensor[(10, 12, 7), bool],) {
  %100 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %101 = cast(meta[relay.Constant][7] /* ty=Tensor[(10, 12, 7), bool] */, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %102 = logical_or(%100, %101) /* ty=Tensor[(10, 12, 7), bool] */;
  (%102,)
}

def @func_2241(%var_2239: Tensor[(5, 7, 10), int64], %var_2240: Tensor[(5, 7, 10), int64]) -> (Tensor[(5, 7, 10), bool],) {
  %108 = fn (%var_2226: Tensor[(5, 7, 10), int64], %var_2227: Tensor[(5, 7, 10), int64]) -> (Tensor[(5, 7, 10), bool],) {
    %103 = cast(%var_2227, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
    %104 = shape_of(%var_2226, dtype="int32") /* ty=Tensor[(3), int32] */;
    %105 = cast(%var_2226, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
    %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %107 = greater(%105, %106) /* ty=Tensor[(5, 7, 10), bool] */;
    (%107,)
  };
  %108(%var_2239, %var_2240) /* ty=(Tensor[(5, 7, 10), bool],) */
}

def @func_6168() -> (Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(13, 11, ?), bool], Tensor[(143), float64]) {
  %109 = @func_1893() /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) */;
  %110 = @func_3995() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %111 = cast(meta[relay.Constant][8] /* ty=Tensor[(143), float64] */, dtype="float64") /* ty=Tensor[(143), float64] */;
  %112 = reshape(%111, newshape=[13, 11, 1]) /* ty=Tensor[(13, 11, 1), float64] */;
  %113 = %109.0;
  %114 = @func_1089() /* ty=Tensor[(10, 12, 7), bool] */;
  %115 = %110.0;
  %116 = @func_2586(%112) /* ty=Tensor[(13, 11, ?), bool] */;
  (%113, %114, %115, %116, meta[relay.Constant][8] /* ty=Tensor[(143), float64] */)
}

def @func_6455() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %120 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %117 = @func_1130() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %118 = @func_4449() /* ty=Tensor[(10, 12, 7), bool] */;
    %119 = %117.1;
    (%118, %119)
  };
  %120() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_570() -> Tensor[(10, 12, 7), bool] {
  %122 = fn () -> Tensor[(10, 12, 7), bool] {
    %121 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %121.1
  };
  %122() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_11019() -> (Tensor[(10, 12, 7), bool],) {
  @func_11017() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_6207() -> Tensor[(10, 12, 7), bool] {
  %124 = fn () -> Tensor[(10, 12, 7), bool] {
    %123 = @func_1893() /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) */;
    %123.1
  };
  %124() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_5281() -> Tensor[(10, 12, 7), bool] {
  @func_5279() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_599() -> (Tensor[(10, 12, 7), bool],) {
  %126 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %125 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
    (%125,)
  };
  %126() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_10242() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %127 = @func_10142() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %128 = @func_1684() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %129 = %127.0;
  %130 = %128.0;
  %131 = @func_5370() /* ty=Tensor[(10, 12, 7), bool] */;
  (%129, %130, %131)
}

def @func_213() -> (Tensor[(10, 12, 7), bool],) {
  %132 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %133 = %132.0;
  (%133,)
}

def @func_7757() -> (Tensor[(10, 12, 7), bool],) {
  @func_7755() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_388(%var_386: Tensor[(15, 9, 10), float64]) -> (Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) {
  @func_385(%var_386) /* ty=(Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_3929(%var_3890: Tensor[(48), float64], %var_3894: Tensor[(1260), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64], Tensor[(7, 15, 12), float64], Tensor[(1260), float64], Tensor[(9, 150), float64], Tensor[(154, 6), float64]) {
  %134 = cast(%var_3890, dtype="float64") /* ty=Tensor[(48), float64] */;
  %135 = cast(meta[relay.Constant][9] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %136 = reshape(%134, newshape=[4, 1, 12]) /* ty=Tensor[(4, 1, 12), float64] */;
  %137 = reshape(%135, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %138 = @func_699(%136, %137) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
  %139 = cast(%var_3894, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %140 = reshape(%139, newshape=[7, 15, 12]) /* ty=Tensor[(7, 15, 12), float64] */;
  %141 = @func_1975(%140) /* ty=(Tensor[(7, 15, 12), float64],) */;
  %142 = cast(meta[relay.Constant][10] /* ty=Tensor[(154, 6), float64] */, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %143 = cast(meta[relay.Constant][9] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %144 = reshape(%142, newshape=[6, 11, 14]) /* ty=Tensor[(6, 11, 14), float64] */;
  %145 = reshape(%143, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %146 = @func_2516(%144, %145) /* ty=(Tensor[(9, 150), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(6, 11, 14), float32], Tensor[(6, 11, 14), float64], Tensor[(4, 40), int16]) */;
  %147 = @func_3374() /* ty=Tensor[(10, 12, 7), bool] */;
  %148 = %138.1;
  %149 = %141.0;
  %150 = %146.0;
  (%147, %148, %var_3890, meta[relay.Constant][9] /* ty=Tensor[(576), float64] */, %149, %var_3894, %150, meta[relay.Constant][10] /* ty=Tensor[(154, 6), float64] */)
}

def @func_11007() -> (Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool]) {
  @func_11005() /* ty=(Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool]) */
}

def @func_1967() -> (Tensor[(10, 12, 7), bool],) {
  %152 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %151 = @func_970() /* ty=Tensor[(10, 12, 7), bool] */;
    (%151,)
  };
  %152() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_3598(%var_3592: Tensor[(48), float64], %var_3593: Tensor[(576), float64]) -> (Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) {
  %153 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %154 = cast(%var_3592, dtype="float64") /* ty=Tensor[(48), float64] */;
  %155 = cast(%var_3593, dtype="float64") /* ty=Tensor[(576), float64] */;
  %156 = reshape(%154, newshape=[4, 1, 12]) /* ty=Tensor[(4, 1, 12), float64] */;
  %157 = reshape(%155, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %158 = @func_699(%156, %157) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
  %159 = %153.0;
  %160 = %158.1;
  (%159, %160, %var_3592, %var_3593)
}

def @func_3996() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %166 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %161 = @func_3007() /* ty=(Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %162 = @func_3318() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %163 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
    %164 = %161.1;
    %165 = %162.1;
    (%163, %164, %165)
  };
  %166() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_6592(%var_6590: Tensor[(3, 7, 7), bool]) -> (Tensor[(10, 12, 7), bool], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_6589(%var_6590) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_10376() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint8], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
  %183 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint8], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
    %167 = @func_2625() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %168 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %169 = @func_6019() /* ty=Tensor[(10, 12, 7), bool] */;
    %170 = cast(%169, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
    %171 = reshape(%170, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
    %172 = @func_4410(%171) /* ty=(Tensor[(10, 12, 7), uint8],) */;
    %173 = @func_6843() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */;
    %174 = cast(meta[relay.Constant][11] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %175 = reshape(%174, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %176 = @func_8308(%175) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64]) */;
    %177 = %167.0;
    %178 = %168.2;
    %179 = %172.0;
    %180 = %173.2;
    %181 = %176.0;
    %182 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
    (%169, %177, %178, %179, %180, %181, meta[relay.Constant][11] /* ty=Tensor[(576), float64] */, %182)
  };
  %183() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint8], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_10461() -> Tensor[(10, 12, 7), bool] {
  @func_3374() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_3007() -> (Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %184 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %185 = %184.0;
  %186 = cast(%185, dtype="float32") /* ty=Tensor[(10, 12, 7), float32] */;
  %187 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %188 = @func_1939() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %189 = atan(%186) /* ty=Tensor[(10, 12, 7), float32] */;
  %190 = %187.1;
  %191 = %188.1;
  (%189, %190, %191)
}

def @func_11617() -> Tensor[(10, 12, 7), bool] {
  %192 = @func_8999() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %192.0
}

def @func_2892() -> Tensor[(10, 12, 7), bool] {
  %193 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %193.0
}

def @func_12789(%var_12787: Tensor[(15), float64], %var_12788: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(5, 10, 3), float64], Tensor[(150, 15), float64], Tensor[(576), float64], Tensor[(576), float64], Tensor[(150, 15), float32], Tensor[(150, 15), uint32]) {
  @func_12785(%var_12787, %var_12788) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(5, 10, 3), float64], Tensor[(150, 15), float64], Tensor[(576), float64], Tensor[(576), float64], Tensor[(150, 15), float32], Tensor[(150, 15), uint32]) */
}

def @func_11681() -> (Tensor[(10, 12, 7), bool],) {
  %194 = @func_970() /* ty=Tensor[(10, 12, 7), bool] */;
  (%194,)
}

def @func_12985() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_12983() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_6952() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_6950() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_908(%var_905: int64, %var_906: Tensor[(13, 3, 12), int64], %var_907: Tensor[(13, 3, 12), float32]) -> (Tensor[(13, 3, 12), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(13, 3, 12), float32]) {
  %208 = fn (%var_844: int64, %var_845: Tensor[(13, 3, 12), int64], %var_888: Tensor[(13, 3, 12), float32]) -> (Tensor[(13, 3, 12), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(13, 3, 12), float32]) {
    %195 = cast(%var_844, dtype="bool") /* ty=bool */;
    %196 = cast(%var_845, dtype="bool") /* ty=Tensor[(13, 3, 12), bool] */;
    %197 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %198 = cast(%var_845, dtype="float32") /* ty=Tensor[(13, 3, 12), float32] */;
    %199 = sinh(%198) /* ty=Tensor[(13, 3, 12), float32] */;
    %200 = cast(%var_888, dtype="float32") /* ty=Tensor[(13, 3, 12), float32] */;
    %201 = shape_of(%199, dtype="int32") /* ty=Tensor[(3), int32] */;
    %202 = cast(%199, dtype="float32") /* ty=Tensor[(13, 3, 12), float32] */;
    %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %204 = not_equal(%195, %196) /* ty=Tensor[(13, 3, 12), bool] */;
    %205 = %197.0;
    %206 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
    %207 = floor_divide(%202, %203) /* ty=Tensor[(13, 3, 12), float32] */;
    (%204, %205, %206, %207)
  };
  %208(%var_905, %var_906, %var_907) /* ty=(Tensor[(13, 3, 12), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(13, 3, 12), float32]) */
}

def @func_8874() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_8872() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_526(%var_428: Tensor[(10, 12, 7), bool], %var_451: Tensor[(1350), float64]) -> (Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), int16], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64]) {
  %209 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %210 = %209.0;
  %211 = cast(%var_428, dtype="float64") /* ty=Tensor[(10, 12, 7), float64] */;
  %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%210, dtype="float64") /* ty=Tensor[(10, 12, 7), float64] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %215 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %216 = %215.2;
  %217 = cast(%216, dtype="float32") /* ty=Tensor[(10, 12, 7), float32] */;
  %218 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %219 = cast(%var_451, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %220 = reshape(%219, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %221 = @func_385(%220) /* ty=(Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) */;
  %222 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %223 = cast(%var_451, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %224 = reshape(%223, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %225 = @func_385(%224) /* ty=(Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) */;
  %226 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 12, 7), bool] */, dtype="int16") /* ty=Tensor[(10, 12, 7), int16] */;
  %227 = shape_of(%var_428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %228 = cast(%var_428, dtype="int16") /* ty=Tensor[(10, 12, 7), int16] */;
  %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %230 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %231 = cast(%var_451, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %232 = reshape(%231, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %233 = @func_385(%232) /* ty=(Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) */;
  %234 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %235 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %236 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %237 = %233.0;
  %238 = cast(%237, dtype="float64") /* ty=Tensor[(15, 9, 10), float64] */;
  %239 = reshape(%238, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
  %240 = @func_385(%239) /* ty=(Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) */;
  %241 = floor_mod(%213, %214) /* ty=Tensor[(10, 12, 7), float64] */;
  %242 = log10(%217) /* ty=Tensor[(10, 12, 7), float32] */;
  %243 = %218.2;
  %244 = %221.1;
  %245 = %222.0;
  %246 = %225.1;
  %247 = bitwise_xor(%228, %229) /* ty=Tensor[(10, 12, 7), int16] */;
  %248 = %230.0;
  %249 = %234.0;
  %250 = %235.1;
  %251 = %236.0;
  %252 = %240.0;
  (%241, %242, %243, %244, %var_451, %245, %246, %247, %248, %237, %249, %250, %251, %252)
}

def @func_1383() -> (Tensor[(10, 12, 7), bool],) {
  %255 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %253 = @func_1146() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %254 = %253.1;
    (%254,)
  };
  %255() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_7054() -> (Tensor[(10, 12, 7), bool],) {
  @func_7052() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_312() -> (Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %270 = fn () -> (Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %256 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 7, 7), uint8] */, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
    %257 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(3, 7, 7), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %258 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 7, 7), uint8] */, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
    %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %260 = not_equal(%258, %259) /* ty=Tensor[(3, 7, 7), bool] */;
    %261 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 7, 7), uint8] */, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
    %262 = shape_of(%260, dtype="int32") /* ty=Tensor[(3), int32] */;
    %263 = cast(%260, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
    %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %265 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %266 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %267 = logical_and(%263, %264) /* ty=Tensor[(3, 7, 7), bool] */;
    %268 = %265.0;
    %269 = %266.0;
    (%267, %268, %269)
  };
  %270() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_5087() -> (Tensor[(10, 12, 7), bool],) {
  @func_5085() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_11724() -> (Tensor[(10, 12, 7), bool],) {
  %271 = @func_3995() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %272 = %271.1;
  (%272,)
}

def @func_8844() -> (Tensor[(10, 12, 7), bool],) {
  %274 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %273 = @func_3394() /* ty=Tensor[(10, 12, 7), bool] */;
    (%273,)
  };
  %274() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_4053(%var_4034: Tensor[(160), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(135, 10), float64], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %275 = cast(%var_4034, dtype="float64") /* ty=Tensor[(160), float64] */;
  %276 = @func_3871() /* ty=Tensor[(10, 12, 7), bool] */;
  %277 = cast(%276, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %278 = cast(meta[relay.Constant][15] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %279 = cast(meta[relay.Constant][16] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %280 = reshape(%275, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
  %281 = reshape(%277, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %282 = reshape(%278, newshape=[135, 10]) /* ty=Tensor[(135, 10), float64] */;
  %283 = reshape(%279, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %284 = @func_1484(%280, %281, %282, %283) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint64], Tensor[(10, 12, 7), float64], Tensor[(135, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) */;
  %285 = @func_3666() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %286 = %284.5;
  %287 = @func_3374() /* ty=Tensor[(10, 12, 7), bool] */;
  %288 = %285.0;
  (%276, %286, %var_4034, meta[relay.Constant][15] /* ty=Tensor[(1350), float64] */, meta[relay.Constant][16] /* ty=Tensor[(576), float64] */, %287, %288)
}

def @func_4809() -> (Tensor[(10, 12, 7), bool],) {
  %289 = @func_4146() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %290 = %289.0;
  (%290,)
}

def @func_1314() -> Tensor[(10, 12, 7), bool] {
  %292 = fn () -> Tensor[(10, 12, 7), bool] {
    %291 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %291.1
  };
  %292() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_3786() -> (Tensor[(3, 7, 7), bool],) {
  %293 = @func_2573() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %294 = %293.0;
  (%294,)
}

def @func_3933(%var_3931: Tensor[(48), float64], %var_3932: Tensor[(1260), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64], Tensor[(7, 15, 12), float64], Tensor[(1260), float64], Tensor[(9, 150), float64], Tensor[(154, 6), float64]) {
  @func_3929(%var_3931, %var_3932) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64], Tensor[(7, 15, 12), float64], Tensor[(1260), float64], Tensor[(9, 150), float64], Tensor[(154, 6), float64]) */
}

def @func_11574() -> Tensor[(10, 12, 7), bool] {
  %295 = @func_11236() /* ty=(Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */;
  %295.1
}

def @func_4410(%var_4401: Tensor[(10, 12, 7), bool]) -> (Tensor[(10, 12, 7), uint8],) {
  %296 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %297 = %296.0;
  %298 = cast(%var_4401, dtype="uint8") /* ty=Tensor[(10, 12, 7), uint8] */;
  %299 = shape_of(%297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%297, dtype="uint8") /* ty=Tensor[(10, 12, 7), uint8] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %302 = minimum(%300, %301) /* ty=Tensor[(10, 12, 7), uint8] */;
  (%302,)
}

def @func_11005() -> (Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool]) {
  %303 = @func_1893() /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) */;
  %304 = @func_7016() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %305 = %303.3;
  %306 = %304.0;
  (%305, %306)
}

def @func_7265() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(4, 12, 12), float64], Tensor[(48), float64], Tensor[(576), float64]) {
  %317 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(4, 12, 12), float64], Tensor[(48), float64], Tensor[(576), float64]) {
    %307 = @func_1130() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %308 = @func_6751() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %309 = cast(meta[relay.Constant][17] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %310 = cast(meta[relay.Constant][18] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %311 = reshape(%309, newshape=[4, 1, 12]) /* ty=Tensor[(4, 1, 12), float64] */;
    %312 = reshape(%310, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
    %313 = @func_699(%311, %312) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
    %314 = %307.1;
    %315 = %308.0;
    %316 = %313.0;
    (%314, %315, %316, meta[relay.Constant][17] /* ty=Tensor[(48), float64] */, meta[relay.Constant][18] /* ty=Tensor[(576), float64] */)
  };
  %317() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(4, 12, 12), float64], Tensor[(48), float64], Tensor[(576), float64]) */
}

def @func_5775(%var_5774: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1, 48), float64], Tensor[(576), float64]) {
  %325 = fn (%var_5757: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1, 48), float64], Tensor[(576), float64]) {
    %318 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 48), float64] */, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
    %319 = cast(%var_5757, dtype="float64") /* ty=Tensor[(576), float64] */;
    %320 = reshape(%318, newshape=[4, 1, 12]) /* ty=Tensor[(4, 1, 12), float64] */;
    %321 = reshape(%319, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
    %322 = @func_699(%320, %321) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
    %323 = @func_1297() /* ty=Tensor[(10, 12, 7), bool] */;
    %324 = %322.1;
    (%323, %324, meta[relay.Constant][19] /* ty=Tensor[(1, 48), float64] */, %var_5757)
  };
  %325(%var_5774) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1, 48), float64], Tensor[(576), float64]) */
}

def @func_11908() -> Tensor[(10, 12, 7), bool] {
  @func_11906() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_2612() -> Tensor[(10, 12, 7), bool] {
  @func_2610() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_6589(%var_6573: Tensor[(3, 7, 7), bool]) -> (Tensor[(10, 12, 7), bool], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool]) {
  %326 = @func_1382() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %327 = @func_5389() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(11, 10, 15), uint8], Tensor[(1650), uint8]) */;
  %328 = %327.0;
  %329 = cast(%var_6573, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
  %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%328, dtype="bool") /* ty=Tensor[(3, 7, 7), bool] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %333 = %326.0;
  %334 = less(%331, %332) /* ty=Tensor[(3, 7, 7), bool] */;
  %335 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
  (%333, %334, %335)
}

def @func_7170() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), int64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_7168() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), int64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_11969() -> (Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(1350), float64], Tensor[(10, 12, 7), bool]) {
  %344 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(1350), float64], Tensor[(10, 12, 7), bool]) {
    %336 = @func_8999() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %337 = cast(meta[relay.Constant][20] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %338 = reshape(%337, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
    %339 = @func_1787(%338) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */;
    %340 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %341 = %336.0;
    %342 = %339.1;
    %343 = %340.0;
    (%341, %342, meta[relay.Constant][20] /* ty=Tensor[(1350), float64] */, %343)
  };
  %344() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(1350), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_8463() -> (Tensor[(10, 12, 7), bool],) {
  @func_8461() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_10142() -> (Tensor[(10, 12, 7), bool],) {
  %345 = @func_8843() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %346 = %345.0;
  (%346,)
}

def @func_12316() -> Tensor[(10, 12, 7), bool] {
  %348 = fn () -> Tensor[(10, 12, 7), bool] {
    %347 = @func_6950() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %347.1
  };
  %348() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_3267() -> (Tensor[(10, 12, 7), float32],) {
  %349 = @func_2749() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) */;
  %350 = %349.1;
  (%350,)
}

def @func_5705() -> Tensor[(10, 12, 7), bool] {
  @func_5703() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_3246() -> Tensor[(10, 12, 7), bool] {
  @func_3244() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_5703() -> Tensor[(10, 12, 7), bool] {
  %351 = @func_598() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %351.0
}

def @func_7698() -> (Tensor[(10, 12, 7), bool], Tensor[(3, 7, 7), float64], Tensor[(10, 12, 7), bool]) {
  @func_7696() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(3, 7, 7), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_3788() -> (Tensor[(3, 7, 7), bool],) {
  @func_3786() /* ty=(Tensor[(3, 7, 7), bool],) */
}

def @func_4738() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) {
  %352 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %353 = @func_2749() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) */;
  %354 = %352.0;
  %355 = %353.1;
  (%354, %355)
}

def @func_6414(%var_6412: Tensor[(7, 3, 3), float32]) -> Tensor[(7, 3, 3), float32] {
  @func_6411(%var_6412) /* ty=Tensor[(7, 3, 3), float32] */
}

def @func_5159() -> (Tensor[(10, 12, 7), bool],) {
  %357 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %356 = @func_3374() /* ty=Tensor[(10, 12, 7), bool] */;
    (%356,)
  };
  %357() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_12499() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %362 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %358 = @func_9445() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %359 = @func_2693() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %360 = %358.0;
    %361 = %359.0;
    (%360, %361)
  };
  %362() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_8118() -> (Tensor[(10, 12, 7), bool],) {
  %363 = @func_1966() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %364 = %363.0;
  (%364,)
}

def @func_8041(%var_8033: Tensor[(14, 5, 9), int32]) -> Tensor[(14, 5, 9), bool] {
  %365 = cast(meta[relay.Constant][21] /* ty=Tensor[(14, 5, 9), int32] */, dtype="bool") /* ty=Tensor[(14, 5, 9), bool] */;
  %366 = shape_of(%var_8033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%var_8033, dtype="bool") /* ty=Tensor[(14, 5, 9), bool] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%367, %368) /* ty=Tensor[(14, 5, 9), bool] */
}

def @func_9496(%var_9494: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(288, 2), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
  @func_9493(%var_9494) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(288, 2), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_3442() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %372 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %369 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %370 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
    %371 = %369.0;
    (%370, %371)
  };
  %372() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_8434() -> (Tensor[(10, 12, 7), bool],) {
  %375 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %373 = @func_3995() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %374 = %373.0;
    (%374,)
  };
  %375() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_12572() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_12570() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_1269(%var_1268: Tensor[(288, 2), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(288, 2), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) {
  %391 = fn (%var_1216: Tensor[(288, 2), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(288, 2), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) {
    %376 = cast(meta[relay.Constant][22] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %377 = cast(%var_1216, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
    %378 = reshape(%376, newshape=[4, 1, 12]) /* ty=Tensor[(4, 1, 12), float64] */;
    %379 = reshape(%377, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
    %380 = @func_699(%378, %379) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
    %381 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %382 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %383 = %382.0;
    %384 = cast(%383, dtype="float64") /* ty=Tensor[(10, 12, 7), float64] */;
    %385 = cos(%384) /* ty=Tensor[(10, 12, 7), float64] */;
    %386 = cast(%385, dtype="float32") /* ty=Tensor[(10, 12, 7), float32] */;
    %387 = %380.1;
    %388 = %381.0;
    %389 = @func_970() /* ty=Tensor[(10, 12, 7), bool] */;
    %390 = sinh(%386) /* ty=Tensor[(10, 12, 7), float32] */;
    (%387, meta[relay.Constant][22] /* ty=Tensor[(48), float64] */, %var_1216, %388, %389, %390)
  };
  %391(%var_1268) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(288, 2), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */
}

def @func_1130() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %392 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %393 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %394 = %392.1;
  %395 = %393.0;
  (%394, %395)
}

def @func_3375() -> Tensor[(10, 12, 7), bool] {
  %396 = fn () -> Tensor[(10, 12, 7), bool] {
    @func_970() /* ty=Tensor[(10, 12, 7), bool] */
  };
  %396() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_11906() -> Tensor[(10, 12, 7), bool] {
  %397 = @func_9957() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %397.1
}

def @func_9771() -> (Tensor[(10, 12, 7), bool], Tensor[(675, 2), float64], Tensor[(1350), float64], Tensor[(10, 12, 7), bool]) {
  @func_9769() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(675, 2), float64], Tensor[(1350), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_3023() -> (Tensor[(10, 12, 7), bool],) {
  %398 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
  (%398,)
}

def @func_9288() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %399 = @func_3523() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %400 = %399.1;
  %401 = @func_3871() /* ty=Tensor[(10, 12, 7), bool] */;
  (%400, %401)
}

def @func_3767() -> (Tensor[(10, 12, 7), bool],) {
  @func_3765() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_1940() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %406 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %402 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %403 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %404 = %402.0;
    %405 = %403.0;
    (%404, %405)
  };
  %406() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_8829(%var_8828: Tensor[(486), bool]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(54), bool], Tensor[(486), float64], Tensor[(486), float64], Tensor[(3, 7, 7), float64], Tensor[(13, 3, 12), bool], int64, Tensor[(468), int64]) {
  %433 = fn (%var_8782: Tensor[(486), bool]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(54), bool], Tensor[(486), float64], Tensor[(486), float64], Tensor[(3, 7, 7), float64], Tensor[(13, 3, 12), bool], int64, Tensor[(468), int64]) {
    %407 = cast(meta[relay.Constant][23] /* ty=Tensor[(54), bool] */, dtype="bool") /* ty=Tensor[(54), bool] */;
    %408 = cast(%var_8782, dtype="bool") /* ty=Tensor[(486), bool] */;
    %409 = reshape(%407, newshape=[1, 6, 9]) /* ty=Tensor[(1, 6, 9), bool] */;
    %410 = reshape(%408, newshape=[9, 6, 9]) /* ty=Tensor[(9, 6, 9), bool] */;
    %411 = @func_5917(%409, %410) /* ty=(Tensor[(9, 6, 9), int64], Tensor[(1, 6, 9), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %412 = cast(%var_8782, dtype="float64") /* ty=Tensor[(486), float64] */;
    %413 = cast(%var_8782, dtype="float64") /* ty=Tensor[(486), float64] */;
    %414 = cos(%413) /* ty=Tensor[(486), float64] */;
    %415 = cast(%414, dtype="float64") /* ty=Tensor[(486), float64] */;
    %416 = shape_of(%var_8782, dtype="int32") /* ty=Tensor[(1), int32] */;
    %417 = cast(%var_8782, dtype="float64") /* ty=Tensor[(486), float64] */;
    %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?), float64] */;
    %419 = @func_7696() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(3, 7, 7), float64], Tensor[(10, 12, 7), bool]) */;
    %420 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %421 = cast(meta[relay.Constant][24] /* ty=Tensor[(468), int64] */, dtype="int64") /* ty=Tensor[(468), int64] */;
    %422 = cast(meta[relay.Constant][24] /* ty=Tensor[(468), int64] */, dtype="float32") /* ty=Tensor[(468), float32] */;
    %423 = reshape(%420, newshape=[]) /* ty=int64 */;
    %424 = reshape(%421, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), int64] */;
    %425 = reshape(%422, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), float32] */;
    %426 = @func_904(%423, %424, %425) /* ty=(Tensor[(13, 3, 12), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(13, 3, 12), float32]) */;
    %427 = @func_5279() /* ty=Tensor[(10, 12, 7), bool] */;
    %428 = %411.4;
    %429 = rsqrt(%412) /* ty=Tensor[(486), float64] */;
    %430 = divide(%417, %418) /* ty=Tensor[(486), float64] */;
    %431 = %419.1;
    %432 = %426.0;
    (%427, %428, meta[relay.Constant][23] /* ty=Tensor[(54), bool] */, %429, %430, %431, %432, 5 /* ty=int64 */, meta[relay.Constant][24] /* ty=Tensor[(468), int64] */)
  };
  %433(%var_8828) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(54), bool], Tensor[(486), float64], Tensor[(486), float64], Tensor[(3, 7, 7), float64], Tensor[(13, 3, 12), bool], int64, Tensor[(468), int64]) */
}

def @func_2627() -> (Tensor[(10, 12, 7), bool],) {
  @func_2625() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_11861() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %442 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %434 = @func_5085() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %435 = @func_6122() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(96, 12), uint32], Tensor[(1350), float32]) */;
    %436 = @func_2749() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) */;
    %437 = %434.0;
    %438 = %435.0;
    %439 = @func_4449() /* ty=Tensor[(10, 12, 7), bool] */;
    %440 = @func_4963() /* ty=Tensor[(10, 12, 7), bool] */;
    %441 = %436.0;
    (%437, %438, %439, %440, %441)
  };
  %442() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_233() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_11382() -> (Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) {
  %447 = fn () -> (Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) {
    %443 = @func_7264() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(4, 12, 12), float64], Tensor[(48), float64], Tensor[(576), float64]) */;
    %444 = @func_3711() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %445 = %443.2;
    %446 = %444.0;
    (%445, %446)
  };
  %447() /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_2188(%var_2185: Tensor[(48), float64], %var_2186: Tensor[(576), float64], %var_2187: Tensor[(160), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(4, 12, 12), float64], Tensor[(48), float64], Tensor[(576), float64], Tensor[(135, 10), float64], Tensor[(160), float64], Tensor[(9, 150), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool]) {
  @func_2183(%var_2185, %var_2186, %var_2187) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(4, 12, 12), float64], Tensor[(48), float64], Tensor[(576), float64], Tensor[(135, 10), float64], Tensor[(160), float64], Tensor[(9, 150), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_11576() -> Tensor[(10, 12, 7), bool] {
  @func_11574() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_3823(%var_3821: Tensor[(11, 10, 15), uint8], %var_3822: Tensor[(11, 10, 15), uint8]) -> (Tensor[(11, 10, 15), uint8],) {
  %453 = fn (%var_3812: Tensor[(11, 10, 15), uint8], %var_3813: Tensor[(11, 10, 15), uint8]) -> (Tensor[(11, 10, 15), uint8],) {
    %448 = cast(%var_3813, dtype="uint8") /* ty=Tensor[(11, 10, 15), uint8] */;
    %449 = shape_of(%var_3812, dtype="int32") /* ty=Tensor[(3), int32] */;
    %450 = cast(%var_3812, dtype="uint8") /* ty=Tensor[(11, 10, 15), uint8] */;
    %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %452 = multiply(%450, %451) /* ty=Tensor[(11, 10, 15), uint8] */;
    (%452,)
  };
  %453(%var_3821, %var_3822) /* ty=(Tensor[(11, 10, 15), uint8],) */
}

def @func_10410() -> (Tensor[(10, 12, 7), bool],) {
  %454 = @func_5279() /* ty=Tensor[(10, 12, 7), bool] */;
  (%454,)
}

def @func_4811() -> (Tensor[(10, 12, 7), bool],) {
  @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_530(%var_528: Tensor[(10, 12, 7), bool], %var_529: Tensor[(1350), float64]) -> (Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), int16], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64]) {
  @func_526(%var_528, %var_529) /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), int16], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64]) */
}

def @func_2183(%var_2153: Tensor[(48), float64], %var_2154: Tensor[(576), float64], %var_2159: Tensor[(160), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(4, 12, 12), float64], Tensor[(48), float64], Tensor[(576), float64], Tensor[(135, 10), float64], Tensor[(160), float64], Tensor[(9, 150), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool]) {
  %455 = @func_1966() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %456 = @func_1375() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %457 = cast(%var_2153, dtype="float64") /* ty=Tensor[(48), float64] */;
  %458 = cast(%var_2154, dtype="float64") /* ty=Tensor[(576), float64] */;
  %459 = reshape(%457, newshape=[4, 1, 12]) /* ty=Tensor[(4, 1, 12), float64] */;
  %460 = reshape(%458, newshape=[4, 12, 12]) /* ty=Tensor[(4, 12, 12), float64] */;
  %461 = @func_699(%459, %460) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
  %462 = cast(%var_2159, dtype="float64") /* ty=Tensor[(160), float64] */;
  %463 = %455.0;
  %464 = cast(%463, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %465 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 150), float64] */, dtype="float64") /* ty=Tensor[(9, 150), float64] */;
  %466 = cast(%var_2154, dtype="float64") /* ty=Tensor[(576), float64] */;
  %467 = reshape(%462, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
  %468 = reshape(%464, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %469 = reshape(%465, newshape=[135, 10]) /* ty=Tensor[(135, 10), float64] */;
  %470 = reshape(%466, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %471 = @func_1484(%467, %468, %469, %470) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint64], Tensor[(10, 12, 7), float64], Tensor[(135, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) */;
  %472 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %473 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %474 = %473.1;
  %475 = cast(%474, dtype="float64") /* ty=Tensor[(10, 12, 7), float64] */;
  %476 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %477 = %456.0;
  %478 = %461.0;
  %479 = %471.5;
  %480 = %472.0;
  %481 = rsqrt(%475) /* ty=Tensor[(10, 12, 7), float64] */;
  %482 = %476.0;
  (%463, %477, %478, %var_2153, %var_2154, %479, %var_2159, meta[relay.Constant][25] /* ty=Tensor[(9, 150), float64] */, %480, %481, %482)
}

def @func_6411(%var_6392: Tensor[(7, 3, 3), float32]) -> Tensor[(7, 3, 3), float32] {
  %483 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 3, 3), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 3), float32] */;
  %484 = shape_of(%var_6392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%var_6392, dtype="float32") /* ty=Tensor[(7, 3, 3), float32] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%485, %486) /* ty=Tensor[(7, 3, 3), float32] */
}

def @func_8308(%var_8306: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64]) {
  %487 = @func_4213() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %488 = cast(meta[relay.Constant][27] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %489 = %487.1;
  %490 = cast(%489, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %491 = cast(meta[relay.Constant][28] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %492 = cast(%var_8306, dtype="float64") /* ty=Tensor[(576), float64] */;
  %493 = reshape(%488, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
  %494 = reshape(%490, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %495 = reshape(%491, newshape=[135, 10]) /* ty=Tensor[(135, 10), float64] */;
  %496 = reshape(%492, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %497 = @func_1484(%493, %494, %495, %496) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint64], Tensor[(10, 12, 7), float64], Tensor[(135, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) */;
  %498 = %497.7;
  (%489, %498, meta[relay.Constant][27] /* ty=Tensor[(160), float64] */, meta[relay.Constant][28] /* ty=Tensor[(1350), float64] */, %var_8306)
}

def @func_12198(%var_12196: Tensor[(924, 1), float64], %var_12197: Tensor[(756), float64]) -> (Tensor[(13, 3, 8), float32], Tensor[(9, 150), float64], Tensor[(924, 1), float64], Tensor[(576, 1), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(756), float64], Tensor[(3, 7, 7), bool]) {
  @func_12194(%var_12196, %var_12197) /* ty=(Tensor[(13, 3, 8), float32], Tensor[(9, 150), float64], Tensor[(924, 1), float64], Tensor[(576, 1), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(756), float64], Tensor[(3, 7, 7), bool]) */
}

def @func_2941() -> (Tensor[(10, 12, 7), bool],) {
  %501 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %499 = @func_2673() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %500 = %499.0;
    (%500,)
  };
  %501() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_215() -> (Tensor[(10, 12, 7), bool],) {
  @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_10748() -> (Tensor[(10, 12, 7), bool],) {
  %502 = @func_8472() /* ty=Tensor[(10, 12, 7), bool] */;
  (%502,)
}

def @func_10509(%var_10507: Tensor[(6, 14, 2), float32], %var_10508: Tensor[(6, 14, 2), float32]) -> (Tensor[(6, 14, 2), float32],) {
  %508 = fn (%var_10501: Tensor[(6, 14, 2), float32], %var_10502: Tensor[(6, 14, 2), float32]) -> (Tensor[(6, 14, 2), float32],) {
    %503 = cast(%var_10502, dtype="float32") /* ty=Tensor[(6, 14, 2), float32] */;
    %504 = shape_of(%var_10501, dtype="int32") /* ty=Tensor[(3), int32] */;
    %505 = cast(%var_10501, dtype="float32") /* ty=Tensor[(6, 14, 2), float32] */;
    %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %507 = multiply(%505, %506) /* ty=Tensor[(6, 14, 2), float32] */;
    (%507,)
  };
  %508(%var_10507, %var_10508) /* ty=(Tensor[(6, 14, 2), float32],) */
}

def @func_3525() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_3523() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_11683() -> (Tensor[(10, 12, 7), bool],) {
  @func_11681() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_5920(%var_5918: Tensor[(1, 6, 9), bool], %var_5919: Tensor[(9, 6, 9), bool]) -> (Tensor[(9, 6, 9), int64], Tensor[(1, 6, 9), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %527 = fn (%var_5872: Tensor[(1, 6, 9), bool], %var_5873: Tensor[(9, 6, 9), bool]) -> (Tensor[(9, 6, 9), int64], Tensor[(1, 6, 9), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %509 = cast(%var_5872, dtype="float64") /* ty=Tensor[(1, 6, 9), float64] */;
    %510 = exp(%509) /* ty=Tensor[(1, 6, 9), float64] */;
    %511 = cast(%var_5872, dtype="bool") /* ty=Tensor[(1, 6, 9), bool] */;
    %512 = cast(%var_5873, dtype="bool") /* ty=Tensor[(9, 6, 9), bool] */;
    %513 = logical_or(%511, %512) /* ty=Tensor[(9, 6, 9), bool] */;
    %514 = cast(%513, dtype="bool") /* ty=Tensor[(9, 6, 9), bool] */;
    %515 = cast(%var_5872, dtype="bool") /* ty=Tensor[(1, 6, 9), bool] */;
    %516 = greater_equal(%514, %515) /* ty=Tensor[(9, 6, 9), bool] */;
    %517 = cast(%510, dtype="int64") /* ty=Tensor[(1, 6, 9), int64] */;
    %518 = cast(%516, dtype="int64") /* ty=Tensor[(9, 6, 9), int64] */;
    %519 = cast(%510, dtype="float32") /* ty=Tensor[(1, 6, 9), float32] */;
    %520 = @func_1375() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %521 = @func_2625() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %522 = bitwise_xor(%517, %518) /* ty=Tensor[(9, 6, 9), int64] */;
    %523 = sin(%519) /* ty=Tensor[(1, 6, 9), float32] */;
    %524 = %520.0;
    %525 = %521.0;
    %526 = @func_3394() /* ty=Tensor[(10, 12, 7), bool] */;
    (%522, %523, %524, %525, %526)
  };
  %527(%var_5918, %var_5919) /* ty=(Tensor[(9, 6, 9), int64], Tensor[(1, 6, 9), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_4056(%var_4054: Tensor[(160), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(135, 10), float64], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_4053(%var_4054) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(135, 10), float64], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_9901() -> (Tensor[(10, 12, 7), bool], Tensor[(160), float64], Tensor[(576), float64]) {
  %528 = @func_4146() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %529 = cast(meta[relay.Constant][29] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %530 = reshape(%529, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %531 = @func_8308(%530) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64]) */;
  %532 = %528.0;
  %533 = %531.2;
  (%532, %533, meta[relay.Constant][29] /* ty=Tensor[(576), float64] */)
}

def @func_2673() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %534 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %535 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
  %536 = %534.0;
  (%535, %536)
}

def @func_3395() -> Tensor[(10, 12, 7), bool] {
  %538 = fn () -> Tensor[(10, 12, 7), bool] {
    %537 = @func_1130() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %537.1
  };
  %538() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_6123() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(96, 12), uint32], Tensor[(1350), float32]) {
  %554 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(96, 12), uint32], Tensor[(1350), float32]) {
    %539 = @func_3765() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %540 = cast(meta[relay.Constant][30] /* ty=Tensor[(96, 12), uint32] */, dtype="uint32") /* ty=Tensor[(96, 12), uint32] */;
    %541 = cast(meta[relay.Constant][30] /* ty=Tensor[(96, 12), uint32] */, dtype="uint32") /* ty=Tensor[(96, 12), uint32] */;
    %542 = reshape(%540, newshape=[16, 12, 6]) /* ty=Tensor[(16, 12, 6), uint32] */;
    %543 = reshape(%541, newshape=[16, 12, 6]) /* ty=Tensor[(16, 12, 6), uint32] */;
    %544 = @func_2432(%542, %543) /* ty=(Tensor[(16, 12, 6), bool], Tensor[(10, 12, 7), bool], Tensor[(135, 10), float64]) */;
    %545 = @func_2404() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) */;
    %546 = %545.3;
    %547 = cast(meta[relay.Constant][31] /* ty=Tensor[(1350), float64] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
    %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(1), int32] */;
    %549 = cast(%546, dtype="float32") /* ty=Tensor[(1350), float32] */;
    %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?), float32] */;
    %551 = %539.0;
    %552 = %544.1;
    %553 = divide(%549, %550) /* ty=Tensor[(1350), float32] */;
    (%551, %552, meta[relay.Constant][30] /* ty=Tensor[(96, 12), uint32] */, %553)
  };
  %554() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(96, 12), uint32], Tensor[(1350), float32]) */
}

def @func_10453() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %559 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %555 = @func_3023() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %556 = @func_2625() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %557 = %555.0;
    %558 = %556.0;
    (%557, %558)
  };
  %559() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_5670(%var_5669: Tensor[(675, 2), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), float64]) {
  %565 = fn (%var_5645: Tensor[(675, 2), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), float64]) {
    %560 = cast(%var_5645, dtype="float64") /* ty=Tensor[(675, 2), float64] */;
    %561 = reshape(%560, newshape=[1350, 1]) /* ty=Tensor[(1350, 1), float64] */;
    %562 = @func_5063(%561) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350, 1), float64]) */;
    %563 = @func_2253() /* ty=Tensor[(10, 12, 7), bool] */;
    %564 = %562.1;
    (%563, %564, %var_5645)
  };
  %565(%var_5669) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), float64]) */
}

def @func_12379() -> Tensor[(10, 12, 7), bool] {
  %566 = @func_7204() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %566.0
}

def @func_2610() -> Tensor[(10, 12, 7), bool] {
  %567 = @func_1031() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %567.1
}

def @func_10584() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_10582() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_5611() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %568 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %569 = %568.0;
  %570 = @func_3244() /* ty=Tensor[(10, 12, 7), bool] */;
  (%569, %570)
}

def @func_8120() -> (Tensor[(10, 12, 7), bool],) {
  @func_8118() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_8474() -> Tensor[(10, 12, 7), bool] {
  @func_8472() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_7168() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), int64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %571 = @func_3023() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %572 = %571.0;
  %573 = @func_1684() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %574 = %573.0;
  %575 = cast(%574, dtype="int64") /* ty=Tensor[(10, 12, 7), int64] */;
  %576 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(%572, dtype="int64") /* ty=Tensor[(10, 12, 7), int64] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %579 = @func_3318() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %580 = @func_1375() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %581 = @func_3576() /* ty=Tensor[(10, 12, 7), bool] */;
  %582 = bitwise_and(%577, %578) /* ty=Tensor[(10, 12, 7), int64] */;
  %583 = %579.1;
  %584 = %580.0;
  (%581, %582, %583, %584)
}

def @func_9290() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_9288() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_11434(%var_11432: Tensor[(11, 4, 16), float32], %var_11433: Tensor[(11, 4, 16), float32]) -> (Tensor[(11, 4, 16), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %597 = fn (%var_11388: Tensor[(11, 4, 16), float32], %var_11389: Tensor[(11, 4, 16), float32]) -> (Tensor[(11, 4, 16), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %585 = cast(%var_11389, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
    %586 = shape_of(%var_11388, dtype="int32") /* ty=Tensor[(3), int32] */;
    %587 = cast(%var_11388, dtype="float32") /* ty=Tensor[(11, 4, 16), float32] */;
    %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %589 = @func_2940() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %590 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %591 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %592 = floor_mod(%587, %588) /* ty=Tensor[(11, 4, 16), float32] */;
    %593 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
    %594 = %589.0;
    %595 = %590.0;
    %596 = %591.0;
    (%592, %593, %594, %595, %596)
  };
  %597(%var_11432, %var_11433) /* ty=(Tensor[(11, 4, 16), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_1299() -> Tensor[(10, 12, 7), bool] {
  @func_1297() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_3191(%var_3189: Tensor[(9, 150), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(9, 150), float64]) {
  @func_3188(%var_3189) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(9, 150), float64]) */
}

def @func_10850(%var_10849: Tensor[(1350), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), bool]) {
  %608 = fn (%var_10825: Tensor[(1350), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), bool]) {
    %598 = cast(%var_10825, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %599 = reshape(%598, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
    %600 = @func_385(%599) /* ty=(Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) */;
    %601 = %600.0;
    %602 = cast(%var_10825, dtype="bool") /* ty=Tensor[(1350), bool] */;
    %603 = shape_of(%601, dtype="int32") /* ty=Tensor[(3), int32] */;
    %604 = cast(%601, dtype="bool") /* ty=Tensor[(15, 9, 10), bool] */;
    %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %606 = @func_7897() /* ty=Tensor[(10, 12, 7), bool] */;
    %607 = equal(%604, %605) /* ty=Tensor[(15, 9, 10), bool] */;
    (%606, %607)
  };
  %608(%var_10849) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), bool]) */
}

def @func_7576() -> (Tensor[(10, 12, 7), bool],) {
  %609 = @func_1031() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %610 = %609.1;
  (%610,)
}

def @func_10463() -> Tensor[(10, 12, 7), bool] {
  @func_10461() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_4213() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %611 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %612 = %611.0;
  %613 = @func_3576() /* ty=Tensor[(10, 12, 7), bool] */;
  (%612, %613)
}

def @func_385(%var_379: Tensor[(15, 9, 10), float64]) -> (Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) {
  %614 = cast(%var_379, dtype="float64") /* ty=Tensor[(15, 9, 10), float64] */;
  %615 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %616 = asinh(%614) /* ty=Tensor[(15, 9, 10), float64] */;
  %617 = %615.1;
  (%616, %617)
}

def @func_9000() -> (Tensor[(10, 12, 7), bool],) {
  %620 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %618 = @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %619 = %618.0;
    (%619,)
  };
  %620() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_12438() -> Tensor[(10, 12, 7), bool] {
  %621 = @func_5033() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %621.0
}

def @func_12440() -> Tensor[(10, 12, 7), bool] {
  @func_12438() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_2675() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_2673() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_7898() -> Tensor[(10, 12, 7), bool] {
  %623 = fn () -> Tensor[(10, 12, 7), bool] {
    %622 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %622.1
  };
  %623() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_8472() -> Tensor[(10, 12, 7), bool] {
  %624 = @func_3441() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %624.1
}

def @func_5371() -> Tensor[(10, 12, 7), bool] {
  %625 = fn () -> Tensor[(10, 12, 7), bool] {
    @func_2610() /* ty=Tensor[(10, 12, 7), bool] */
  };
  %625() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_4297(%var_4241: Tensor[(9, 5, 5), float64], %var_4280: Tensor[(9, 5, 5), float64]) -> (Tensor[(9, 5, 5), bool], Tensor[(9, 5, 5), bool], Tensor[(9, 5, 5), float64], Tensor[(9, 5, 5), float64]) {
  %626 = cast(%var_4241, dtype="float64") /* ty=Tensor[(9, 5, 5), float64] */;
  %627 = log10(%626) /* ty=Tensor[(9, 5, 5), float64] */;
  %628 = cast(%var_4241, dtype="float64") /* ty=Tensor[(9, 5, 5), float64] */;
  %629 = shape_of(%627, dtype="int32") /* ty=Tensor[(3), int32] */;
  %630 = cast(%627, dtype="float64") /* ty=Tensor[(9, 5, 5), float64] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %632 = floor_mod(%630, %631) /* ty=Tensor[(9, 5, 5), float64] */;
  %633 = cast(%627, dtype="bool") /* ty=Tensor[(9, 5, 5), bool] */;
  %634 = shape_of(%632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%632, dtype="bool") /* ty=Tensor[(9, 5, 5), bool] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %637 = cast(%var_4241, dtype="bool") /* ty=Tensor[(9, 5, 5), bool] */;
  %638 = shape_of(%var_4280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%var_4280, dtype="bool") /* ty=Tensor[(9, 5, 5), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = cast(%var_4280, dtype="bool") /* ty=Tensor[(9, 5, 5), bool] */;
  %642 = shape_of(%var_4241, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%var_4241, dtype="bool") /* ty=Tensor[(9, 5, 5), bool] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %645 = equal(%643, %644) /* ty=Tensor[(9, 5, 5), bool] */;
  %646 = cast(%645, dtype="float64") /* ty=Tensor[(9, 5, 5), float64] */;
  %647 = cast(%632, dtype="float64") /* ty=Tensor[(9, 5, 5), float64] */;
  %648 = less_equal(%635, %636) /* ty=Tensor[(9, 5, 5), bool] */;
  %649 = greater(%639, %640) /* ty=Tensor[(9, 5, 5), bool] */;
  %650 = atanh(%646) /* ty=Tensor[(9, 5, 5), float64] */;
  %651 = acos(%647) /* ty=Tensor[(9, 5, 5), float64] */;
  (%648, %649, %650, %651)
}

def @func_12062() -> (Tensor[(10, 12, 7), bool],) {
  %654 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %652 = @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %653 = %652.0;
    (%653,)
  };
  %654() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_231() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %655 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %656 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %657 = %655.0;
  %658 = %656.0;
  (%657, %658)
}

def @func_6923() -> Tensor[(10, 12, 7), bool] {
  %660 = fn () -> Tensor[(10, 12, 7), bool] {
    %659 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %659.1
  };
  %660() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_2253() -> Tensor[(10, 12, 7), bool] {
  %661 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %661.0
}

def @func_9445() -> (Tensor[(10, 12, 7), bool],) {
  %662 = @func_6751() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %663 = %662.0;
  (%663,)
}

def @func_10412() -> (Tensor[(10, 12, 7), bool],) {
  @func_10410() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_2406() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) {
  @func_2404() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) */
}

def @func_5225() -> Tensor[(10, 12, 7), bool] {
  @func_5223() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_8044(%var_8042: Tensor[(14, 5, 9), int32]) -> Tensor[(14, 5, 9), bool] {
  @func_8041(%var_8042) /* ty=Tensor[(14, 5, 9), bool] */
}

def @func_10892() -> Tensor[(10, 12, 7), bool] {
  %664 = @func_7204() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %664.0
}

def @func_7578() -> (Tensor[(10, 12, 7), bool],) {
  @func_7576() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_8226() -> (Tensor[(10, 12, 7), bool],) {
  %665 = @func_2253() /* ty=Tensor[(10, 12, 7), bool] */;
  (%665,)
}

def @func_7381(%var_7379: Tensor[(14, 14, 6), float64], %var_7380: Tensor[(14, 14, 6), float64]) -> (Tensor[(14, 14, 6), float64], Tensor[(10, 12, 7), bool], Tensor[(14, 14, 6), float32]) {
  %675 = fn (%var_7368: Tensor[(14, 14, 6), float64], %var_7369: Tensor[(14, 14, 6), float64]) -> (Tensor[(14, 14, 6), float64], Tensor[(10, 12, 7), bool], Tensor[(14, 14, 6), float32]) {
    %666 = cast(%var_7369, dtype="float64") /* ty=Tensor[(14, 14, 6), float64] */;
    %667 = shape_of(%var_7368, dtype="int32") /* ty=Tensor[(3), int32] */;
    %668 = cast(%var_7368, dtype="float64") /* ty=Tensor[(14, 14, 6), float64] */;
    %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %670 = @func_2940() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %671 = cast(%var_7368, dtype="float32") /* ty=Tensor[(14, 14, 6), float32] */;
    %672 = minimum(%668, %669) /* ty=Tensor[(14, 14, 6), float64] */;
    %673 = %670.0;
    %674 = acosh(%671) /* ty=Tensor[(14, 14, 6), float32] */;
    (%672, %673, %674)
  };
  %675(%var_7379, %var_7380) /* ty=(Tensor[(14, 14, 6), float64], Tensor[(10, 12, 7), bool], Tensor[(14, 14, 6), float32]) */
}

def @func_7205() -> (Tensor[(10, 12, 7), bool],) {
  %677 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %676 = @func_2931() /* ty=Tensor[(10, 12, 7), bool] */;
    (%676,)
  };
  %677() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_2625() -> (Tensor[(10, 12, 7), bool],) {
  %678 = @func_1089() /* ty=Tensor[(10, 12, 7), bool] */;
  (%678,)
}

def @func_7095() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) {
  %679 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %680 = @func_3711() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %681 = %680.0;
  %682 = cast(%681, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %683 = cast(meta[relay.Constant][32] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %684 = reshape(%682, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %685 = reshape(%683, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %686 = @func_526(%684, %685) /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), int16], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64]) */;
  %687 = %679.0;
  %688 = %686.5;
  (%687, %681, %688, meta[relay.Constant][32] /* ty=Tensor[(1350), float64] */)
}

def @func_10639() -> (Tensor[(10, 12, 7), bool],) {
  %691 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %689 = @func_1375() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %690 = %689.0;
    (%690,)
  };
  %691() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_6950() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %692 = @func_2940() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %693 = %692.0;
  %694 = @func_3374() /* ty=Tensor[(10, 12, 7), bool] */;
  (%693, %694)
}

def @func_2855(%var_2851: Tensor[(160), float64], %var_2852: Tensor[(1350), float64], %var_2853: Tensor[(576), float64], %var_2854: Tensor[(350), int64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64], Tensor[(5, 7, 10), bool], Tensor[(350), int64], Tensor[(10, 12, 7), bool]) {
  %714 = fn (%var_2814: Tensor[(160), float64], %var_2815: Tensor[(1350), float64], %var_2816: Tensor[(576), float64], %var_2832: Tensor[(350), int64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64], Tensor[(5, 7, 10), bool], Tensor[(350), int64], Tensor[(10, 12, 7), bool]) {
    %695 = cast(%var_2814, dtype="float64") /* ty=Tensor[(160), float64] */;
    %696 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
    %697 = cast(%696, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
    %698 = cast(%var_2815, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %699 = cast(%var_2816, dtype="float64") /* ty=Tensor[(576), float64] */;
    %700 = reshape(%695, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
    %701 = reshape(%697, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
    %702 = reshape(%698, newshape=[135, 10]) /* ty=Tensor[(135, 10), float64] */;
    %703 = reshape(%699, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %704 = @func_1484(%700, %701, %702, %703) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint64], Tensor[(10, 12, 7), float64], Tensor[(135, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) */;
    %705 = cast(%var_2832, dtype="int64") /* ty=Tensor[(350), int64] */;
    %706 = cast(%var_2832, dtype="int64") /* ty=Tensor[(350), int64] */;
    %707 = reshape(%705, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), int64] */;
    %708 = reshape(%706, newshape=[5, 7, 10]) /* ty=Tensor[(5, 7, 10), int64] */;
    %709 = @func_2238(%707, %708) /* ty=(Tensor[(5, 7, 10), bool],) */;
    %710 = @func_1375() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %711 = %704.6;
    %712 = %709.0;
    %713 = %710.0;
    (%696, %711, %var_2814, %var_2815, %var_2816, %712, %var_2832, %713)
  };
  %714(%var_2851, %var_2852, %var_2853, %var_2854) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64], Tensor[(5, 7, 10), bool], Tensor[(350), int64], Tensor[(10, 12, 7), bool]) */
}

def @func_702(%var_700: Tensor[(4, 1, 12), float64], %var_701: Tensor[(4, 12, 12), float64]) -> (Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) {
  %720 = fn (%var_681: Tensor[(4, 1, 12), float64], %var_682: Tensor[(4, 12, 12), float64]) -> (Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) {
    %715 = cast(%var_681, dtype="float64") /* ty=Tensor[(4, 1, 12), float64] */;
    %716 = cast(%var_682, dtype="float64") /* ty=Tensor[(4, 12, 12), float64] */;
    %717 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %718 = mod(%715, %716) /* ty=Tensor[(4, 12, 12), float64] */;
    %719 = %717.0;
    (%718, %719)
  };
  %720(%var_700, %var_701) /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_5120() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %724 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %721 = @func_3995() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %722 = %721.2;
    %723 = @func_2892() /* ty=Tensor[(10, 12, 7), bool] */;
    (%722, %723)
  };
  %724() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_4965() -> Tensor[(10, 12, 7), bool] {
  @func_4963() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_6170() -> (Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(13, 11, ?), bool], Tensor[(143), float64]) {
  @func_6168() /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(13, 11, ?), bool], Tensor[(143), float64]) */
}

def @func_6318() -> Tensor[(10, 12, 7), bool] {
  %725 = fn () -> Tensor[(10, 12, 7), bool] {
    @func_4449() /* ty=Tensor[(10, 12, 7), bool] */
  };
  %725() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_8509() -> (Tensor[(10, 12, 7), bool],) {
  %728 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %726 = @func_3711() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %727 = %726.0;
    (%727,)
  };
  %728() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_9659(%var_9658: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(1350), float32]) {
  %737 = fn (%var_9650: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(1350), float32]) {
    %729 = @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %730 = cast(%var_9650, dtype="float64") /* ty=Tensor[(576), float64] */;
    %731 = reshape(%730, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %732 = @func_7543(%731) /* ty=(Tensor[(1350), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */;
    %733 = %732.0;
    %734 = cast(%733, dtype="float32") /* ty=Tensor[(1350), float32] */;
    %735 = %729.0;
    %736 = sigmoid(%734) /* ty=Tensor[(1350), float32] */;
    (%735, %var_9650, %736)
  };
  %737(%var_9658) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(1350), float32]) */
}

def @func_6893() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %742 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %738 = @func_5033() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %739 = @func_5119() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %740 = %738.0;
    %741 = %739.1;
    (%740, %741)
  };
  %742() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_10244() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_10242() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_10894() -> Tensor[(10, 12, 7), bool] {
  @func_10892() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_3269() -> (Tensor[(10, 12, 7), float32],) {
  @func_3267() /* ty=(Tensor[(10, 12, 7), float32],) */
}

def @func_1147() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %745 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %743 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
    %744 = @func_970() /* ty=Tensor[(10, 12, 7), bool] */;
    (%743, %744)
  };
  %745() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_6752() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %750 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %746 = @func_3523() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %747 = @func_3007() /* ty=(Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %748 = %746.2;
    %749 = %747.1;
    (%748, %749)
  };
  %750() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_3091(%var_3076: Tensor[(1, 160), float64], %var_3078: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(1, 160), float64], Tensor[(675, 2), float64], Tensor[(576), float64]) {
  %751 = cast(%var_3076, dtype="float64") /* ty=Tensor[(1, 160), float64] */;
  %752 = @func_1297() /* ty=Tensor[(10, 12, 7), bool] */;
  %753 = cast(%752, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %754 = cast(meta[relay.Constant][33] /* ty=Tensor[(675, 2), float64] */, dtype="float64") /* ty=Tensor[(675, 2), float64] */;
  %755 = cast(%var_3078, dtype="float64") /* ty=Tensor[(576), float64] */;
  %756 = reshape(%751, newshape=[8, 4, 5]) /* ty=Tensor[(8, 4, 5), float64] */;
  %757 = reshape(%753, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %758 = reshape(%754, newshape=[135, 10]) /* ty=Tensor[(135, 10), float64] */;
  %759 = reshape(%755, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %760 = @func_1484(%756, %757, %758, %759) /* ty=(Tensor[(8, 4, 5), float64], Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), uint64], Tensor[(10, 12, 7), float64], Tensor[(135, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) */;
  %761 = %760.8;
  (%752, %761, %var_3076, meta[relay.Constant][33] /* ty=Tensor[(675, 2), float64] */, %var_3078)
}

def @func_7696() -> (Tensor[(10, 12, 7), bool], Tensor[(3, 7, 7), float64], Tensor[(10, 12, 7), bool]) {
  %762 = @func_3786() /* ty=(Tensor[(3, 7, 7), bool],) */;
  %763 = %762.0;
  %764 = cast(%763, dtype="float64") /* ty=Tensor[(3, 7, 7), float64] */;
  %765 = @func_5033() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %766 = @func_3394() /* ty=Tensor[(10, 12, 7), bool] */;
  %767 = cosh(%764) /* ty=Tensor[(3, 7, 7), float64] */;
  %768 = %765.0;
  (%766, %767, %768)
}

def @func_1297() -> Tensor[(10, 12, 7), bool] {
  %769 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %769.0
}

def @func_8938() -> (Tensor[(10, 12, 7), bool], Tensor[(1350), int32]) {
  %779 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(1350), int32]) {
    %770 = @func_6454() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %771 = @func_6122() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(96, 12), uint32], Tensor[(1350), float32]) */;
    %772 = %771.3;
    %773 = cast(meta[relay.Constant][34] /* ty=Tensor[(1350), float32] */, dtype="int32") /* ty=Tensor[(1350), int32] */;
    %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(1), int32] */;
    %775 = cast(%772, dtype="int32") /* ty=Tensor[(1350), int32] */;
    %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?), int32] */;
    %777 = %770.0;
    %778 = logical_xor(%775, %776) /* ty=Tensor[(1350), int32] */;
    (%777, %778)
  };
  %779() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1350), int32]) */
}

def @func_9447() -> (Tensor[(10, 12, 7), bool],) {
  @func_9445() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_4301(%var_4299: Tensor[(9, 5, 5), float64], %var_4300: Tensor[(9, 5, 5), float64]) -> (Tensor[(9, 5, 5), bool], Tensor[(9, 5, 5), bool], Tensor[(9, 5, 5), float64], Tensor[(9, 5, 5), float64]) {
  @func_4297(%var_4299, %var_4300) /* ty=(Tensor[(9, 5, 5), bool], Tensor[(9, 5, 5), bool], Tensor[(9, 5, 5), float64], Tensor[(9, 5, 5), float64]) */
}

def @func_10738(%var_10736: Tensor[(5, 2, 5), uint16], %var_10737: Tensor[(5, 2, 5), uint16]) -> (Tensor[(5, 2, 5), float64],) {
  %787 = fn (%var_10688: Tensor[(5, 2, 5), uint16], %var_10689: Tensor[(5, 2, 5), uint16]) -> (Tensor[(5, 2, 5), float64],) {
    %780 = cast(%var_10689, dtype="uint16") /* ty=Tensor[(5, 2, 5), uint16] */;
    %781 = shape_of(%var_10688, dtype="int32") /* ty=Tensor[(3), int32] */;
    %782 = cast(%var_10688, dtype="uint16") /* ty=Tensor[(5, 2, 5), uint16] */;
    %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %784 = minimum(%782, %783) /* ty=Tensor[(5, 2, 5), uint16] */;
    %785 = cast(%784, dtype="float64") /* ty=Tensor[(5, 2, 5), float64] */;
    %786 = log(%785) /* ty=Tensor[(5, 2, 5), float64] */;
    (%786,)
  };
  %787(%var_10736, %var_10737) /* ty=(Tensor[(5, 2, 5), float64],) */
}

def @func_8136() -> (Tensor[(10, 12, 7), bool],) {
  %790 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %788 = @func_2693() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %789 = %788.0;
    (%789,)
  };
  %790() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_10026() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %795 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %791 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %792 = @func_6490() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %793 = %791.1;
    %794 = %792.0;
    (%793, %794)
  };
  %795() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_5613() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_5611() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_2695() -> (Tensor[(10, 12, 7), bool],) {
  @func_2693() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_10750() -> (Tensor[(10, 12, 7), bool],) {
  @func_10748() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_12096() -> (Tensor[(10, 12, 7), bool],) {
  %797 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %796 = @func_1297() /* ty=Tensor[(10, 12, 7), bool] */;
    (%796,)
  };
  %797() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_1893() -> (Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) {
  %798 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
  %799 = cast(%798, dtype="float64") /* ty=Tensor[(10, 12, 7), float64] */;
  %800 = @func_1684() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %801 = @func_598() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %802 = cast(meta[relay.Constant][35] /* ty=Tensor[(135, 10), float64] */, dtype="float64") /* ty=Tensor[(135, 10), float64] */;
  %803 = reshape(%802, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %804 = @func_1787(%803) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */;
  %805 = cast(meta[relay.Constant][35] /* ty=Tensor[(135, 10), float64] */, dtype="float64") /* ty=Tensor[(135, 10), float64] */;
  %806 = acos(%799) /* ty=Tensor[(10, 12, 7), float64] */;
  %807 = %800.0;
  %808 = %801.0;
  %809 = %804.4;
  %810 = sqrt(%805) /* ty=Tensor[(135, 10), float64] */;
  (%806, %807, %808, %809, %810)
}

def @func_2693() -> (Tensor[(10, 12, 7), bool],) {
  %811 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %812 = %811.0;
  (%812,)
}

def @func_7355() -> (Tensor[(10, 12, 7), bool],) {
  %815 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %813 = @func_2625() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %814 = %813.0;
    (%814,)
  };
  %815() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_3765() -> (Tensor[(10, 12, 7), bool],) {
  %816 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %817 = %816.0;
  (%817,)
}

def @func_8311(%var_8309: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64]) {
  @func_8308(%var_8309) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(160), float64], Tensor[(1350), float64], Tensor[(576), float64]) */
}

def @func_13051() -> (Tensor[(10, 12, 7), bool], Tensor[(1350), int32]) {
  @func_13049() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1350), int32]) */
}

def @func_8461() -> (Tensor[(10, 12, 7), bool],) {
  %818 = @func_6317() /* ty=Tensor[(10, 12, 7), bool] */;
  (%818,)
}

def @func_6482() -> (Tensor[(6, 2, 7), float64], Tensor[(10, 12, 7), bool]) {
  %824 = fn () -> (Tensor[(6, 2, 7), float64], Tensor[(10, 12, 7), bool]) {
    %819 = cast(-9.863f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %820 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 2, 7), float64] */, dtype="float64") /* ty=Tensor[(6, 2, 7), float64] */;
    %821 = @func_1146() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %822 = divide(%819, %820) /* ty=Tensor[(6, 2, 7), float64] */;
    %823 = %821.1;
    (%822, %823)
  };
  %824() /* ty=(Tensor[(6, 2, 7), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_12983() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %825 = @func_10452() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %826 = @func_12088() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(576), float64]) */;
  %827 = @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %828 = %825.0;
  %829 = %826.0;
  %830 = @func_10947() /* ty=Tensor[(10, 12, 7), bool] */;
  %831 = %827.0;
  (%828, %829, %830, %831)
}

def @func_10388() -> (Tensor[(10, 12, 7), bool],) {
  %833 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %832 = @func_5370() /* ty=Tensor[(10, 12, 7), bool] */;
    (%832,)
  };
  %833() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_2432(%var_2420: Tensor[(16, 12, 6), uint32], %var_2421: Tensor[(16, 12, 6), uint32]) -> (Tensor[(16, 12, 6), bool], Tensor[(10, 12, 7), bool], Tensor[(135, 10), float64]) {
  %834 = cast(%var_2421, dtype="bool") /* ty=Tensor[(16, 12, 6), bool] */;
  %835 = shape_of(%var_2420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %836 = cast(%var_2420, dtype="bool") /* ty=Tensor[(16, 12, 6), bool] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %838 = @func_1893() /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) */;
  %839 = equal(%836, %837) /* ty=Tensor[(16, 12, 6), bool] */;
  %840 = @func_2253() /* ty=Tensor[(10, 12, 7), bool] */;
  %841 = %838.4;
  (%839, %840, %841)
}

def @func_8228() -> (Tensor[(10, 12, 7), bool],) {
  @func_8226() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_9245() -> (Tensor[(10, 12, 7), bool],) {
  %843 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %842 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
    (%842,)
  };
  %843() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_4963() -> Tensor[(10, 12, 7), bool] {
  %844 = @func_598() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %844.0
}

def @func_9418() -> (Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
  %845 = @func_6843() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */;
  %846 = @func_1031() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %847 = %845.1;
  %848 = %846.0;
  (%847, %848)
}

def @func_6844() -> (Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
  %854 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
    %849 = @func_2749() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) */;
    %850 = @func_2749() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) */;
    %851 = %849.0;
    %852 = %850.2;
    %853 = @func_3374() /* ty=Tensor[(10, 12, 7), bool] */;
    (%851, %852, %853)
  };
  %854() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_10924() -> Tensor[(10, 12, 7), bool] {
  %856 = fn () -> Tensor[(10, 12, 7), bool] {
    %855 = @func_10638() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %855.0
  };
  %856() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_2436(%var_2434: Tensor[(16, 12, 6), uint32], %var_2435: Tensor[(16, 12, 6), uint32]) -> (Tensor[(16, 12, 6), bool], Tensor[(10, 12, 7), bool], Tensor[(135, 10), float64]) {
  @func_2432(%var_2434, %var_2435) /* ty=(Tensor[(16, 12, 6), bool], Tensor[(10, 12, 7), bool], Tensor[(135, 10), float64]) */
}

def @func_5223() -> Tensor[(10, 12, 7), bool] {
  %857 = @func_3023() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %857.0
}

def @func_3009() -> (Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_3007() /* ty=(Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_13049() -> (Tensor[(10, 12, 7), bool], Tensor[(1350), int32]) {
  %858 = @func_8937() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1350), int32]) */;
  %859 = @func_10923() /* ty=Tensor[(10, 12, 7), bool] */;
  %860 = %858.1;
  (%859, %860)
}

def @func_7755() -> (Tensor[(10, 12, 7), bool],) {
  %861 = @func_3711() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %862 = %861.0;
  (%862,)
}

def @func_5836(%var_5780: Tensor[(5, 16, 6), int8], %var_5809: Tensor[(5, 16, 6), float64], %var_5833: Tensor[(576), float64], %var_5834: Tensor[(1350), float64]) -> (Tensor[(5, 16, 6), bool], Tensor[(5, 16, 6), int32], Tensor[(10, 12, 7), float32], Tensor[(1, 160), float64], Tensor[(576), float64], Tensor[(1350), float64]) {
  %863 = cast(%var_5780, dtype="bool") /* ty=Tensor[(5, 16, 6), bool] */;
  %864 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(5, 16, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %865 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 16, 6), int8] */, dtype="bool") /* ty=Tensor[(5, 16, 6), bool] */;
  %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %867 = cast(%var_5780, dtype="float64") /* ty=Tensor[(5, 16, 6), float64] */;
  %868 = erf(%867) /* ty=Tensor[(5, 16, 6), float64] */;
  %869 = cast(%var_5809, dtype="int64") /* ty=Tensor[(5, 16, 6), int64] */;
  %870 = shape_of(%868, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%868, dtype="int64") /* ty=Tensor[(5, 16, 6), int64] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %873 = bitwise_and(%871, %872) /* ty=Tensor[(5, 16, 6), int64] */;
  %874 = cast(%868, dtype="int32") /* ty=Tensor[(5, 16, 6), int32] */;
  %875 = shape_of(%873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %876 = cast(%873, dtype="int32") /* ty=Tensor[(5, 16, 6), int32] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %878 = @func_2749() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) */;
  %879 = cast(%var_5833, dtype="float64") /* ty=Tensor[(576), float64] */;
  %880 = cast(%var_5834, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %881 = reshape(%879, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %882 = reshape(%880, newshape=[675, 2]) /* ty=Tensor[(675, 2), float64] */;
  %883 = @func_4646(%881, %882) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1, 160), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), bool], Tensor[(675, 2), float64]) */;
  %884 = less(%865, %866) /* ty=Tensor[(5, 16, 6), bool] */;
  %885 = minimum(%876, %877) /* ty=Tensor[(5, 16, 6), int32] */;
  %886 = %878.1;
  %887 = %883.1;
  (%884, %885, %886, %887, %var_5833, %var_5834)
}

def @func_10195(%var_10193: Tensor[(5, 10, 16), uint16], %var_10194: Tensor[(5, 10, 16), uint16]) -> Tensor[(5, 10, 16), uint16] {
  %892 = fn (%var_10173: Tensor[(5, 10, 16), uint16], %var_10174: Tensor[(5, 10, 16), uint16]) -> Tensor[(5, 10, 16), uint16] {
    %888 = cast(%var_10174, dtype="uint16") /* ty=Tensor[(5, 10, 16), uint16] */;
    %889 = shape_of(%var_10173, dtype="int32") /* ty=Tensor[(3), int32] */;
    %890 = cast(%var_10173, dtype="uint16") /* ty=Tensor[(5, 10, 16), uint16] */;
    %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    bitwise_xor(%890, %891) /* ty=Tensor[(5, 10, 16), uint16] */
  };
  %892(%var_10193, %var_10194) /* ty=Tensor[(5, 10, 16), uint16] */
}

def @func_12570() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %893 = @func_3765() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %894 = @func_7204() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %895 = %893.0;
  %896 = %894.0;
  %897 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
  (%895, %896, %897)
}

def @func_4450() -> Tensor[(10, 12, 7), bool] {
  %898 = fn () -> Tensor[(10, 12, 7), bool] {
    @func_970() /* ty=Tensor[(10, 12, 7), bool] */
  };
  %898() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_1132() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_1130() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_3244() -> Tensor[(10, 12, 7), bool] {
  @func_1313() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_11619() -> Tensor[(10, 12, 7), bool] {
  @func_11617() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_4382() -> (Tensor[(10, 12, 7), bool],) {
  %901 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %899 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %900 = %899.0;
    (%900,)
  };
  %901() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_9376() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(3, 450), float64], Tensor[(10, 12, 7), bool]) {
  %917 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(3, 450), float64], Tensor[(10, 12, 7), bool]) {
    %902 = @func_6490() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %903 = @func_1031() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %904 = cast(meta[relay.Constant][38] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %905 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 450), float64] */, dtype="float64") /* ty=Tensor[(3, 450), float64] */;
    %906 = reshape(%904, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %907 = reshape(%905, newshape=[675, 2]) /* ty=Tensor[(675, 2), float64] */;
    %908 = @func_4646(%906, %907) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1, 160), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), bool], Tensor[(675, 2), float64]) */;
    %909 = cast(meta[relay.Constant][38] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %910 = reshape(%909, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %911 = @func_5773(%910) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1, 48), float64], Tensor[(576), float64]) */;
    %912 = %902.0;
    %913 = @func_5370() /* ty=Tensor[(10, 12, 7), bool] */;
    %914 = %903.0;
    %915 = %908.0;
    %916 = %911.0;
    (%912, %913, %914, %915, meta[relay.Constant][38] /* ty=Tensor[(576), float64] */, meta[relay.Constant][39] /* ty=Tensor[(3, 450), float64] */, %916)
  };
  %917() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(3, 450), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_7017() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %922 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %918 = @func_6751() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %919 = @func_3711() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %920 = %918.0;
    %921 = %919.0;
    (%920, %921)
  };
  %922() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_5034() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %927 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %923 = @func_1684() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %924 = @func_1684() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %925 = %923.0;
    %926 = %924.0;
    (%925, %926)
  };
  %927() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_4109() -> Tensor[(10, 12, 7), bool] {
  %929 = fn () -> Tensor[(10, 12, 7), bool] {
    %928 = @func_3711() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %928.0
  };
  %929() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_1895() -> (Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) {
  @func_1893() /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) */
}

def @func_3188(%var_3186: Tensor[(9, 150), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(9, 150), float64]) {
  %930 = @func_2693() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %931 = %930.0;
  %932 = cast(%931, dtype="float32") /* ty=Tensor[(10, 12, 7), float32] */;
  %933 = @func_598() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %934 = %933.0;
  %935 = cast(%934, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %936 = cast(%var_3186, dtype="float64") /* ty=Tensor[(9, 150), float64] */;
  %937 = reshape(%935, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %938 = reshape(%936, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %939 = @func_526(%937, %938) /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), int16], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(15, 9, 10), float64]) */;
  %940 = @func_2892() /* ty=Tensor[(10, 12, 7), bool] */;
  %941 = asin(%932) /* ty=Tensor[(10, 12, 7), float32] */;
  %942 = @func_970() /* ty=Tensor[(10, 12, 7), bool] */;
  %943 = %939.11;
  (%940, %941, %934, %942, %943, %var_3186)
}

def @func_3667() -> (Tensor[(10, 12, 7), bool],) {
  %946 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %944 = @func_3523() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %945 = %944.2;
    (%945,)
  };
  %946() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_3025() -> (Tensor[(10, 12, 7), bool],) {
  @func_3023() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_1032() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %951 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %947 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %948 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %949 = %947.0;
    %950 = %948.0;
    (%949, %950)
  };
  %951() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_3712() -> (Tensor[(10, 12, 7), bool],) {
  %953 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %952 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
    (%952,)
  };
  %953() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_2751() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) {
  @func_2749() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) */
}

def @func_6490() -> (Tensor[(10, 12, 7), bool],) {
  %954 = @func_3666() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %955 = %954.0;
  (%955,)
}

def @func_9493(%var_9484: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(288, 2), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
  %956 = @func_598() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %957 = @func_1031() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %958 = cast(%var_9484, dtype="float64") /* ty=Tensor[(576), float64] */;
  %959 = reshape(%958, newshape=[288, 2]) /* ty=Tensor[(288, 2), float64] */;
  %960 = @func_1267(%959) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(288, 2), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */;
  %961 = @func_1031() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %962 = %956.0;
  %963 = %957.1;
  %964 = %960.2;
  %965 = %961.1;
  (%962, %963, %964, %var_9484, %965)
}

def @func_10819(%var_10817: Tensor[(21, 3), float32], %var_10818: Tensor[(21, 3), float32]) -> (Tensor[(10, 12, 7), float32], Tensor[(7, 3, 3), float32], Tensor[(10, 12, 7), bool], Tensor[(21, 3), bool]) {
  %980 = fn (%var_10776: Tensor[(21, 3), float32], %var_10811: Tensor[(21, 3), float32]) -> (Tensor[(10, 12, 7), float32], Tensor[(7, 3, 3), float32], Tensor[(10, 12, 7), bool], Tensor[(21, 3), bool]) {
    %966 = @func_1893() /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) */;
    %967 = cast(%var_10776, dtype="float32") /* ty=Tensor[(21, 3), float32] */;
    %968 = reshape(%967, newshape=[7, 3, 3]) /* ty=Tensor[(7, 3, 3), float32] */;
    %969 = @func_9730() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %970 = cast(%var_10776, dtype="float32") /* ty=Tensor[(21, 3), float32] */;
    %971 = log(%970) /* ty=Tensor[(21, 3), float32] */;
    %972 = cast(%var_10811, dtype="bool") /* ty=Tensor[(21, 3), bool] */;
    %973 = shape_of(%971, dtype="int32") /* ty=Tensor[(2), int32] */;
    %974 = cast(%971, dtype="bool") /* ty=Tensor[(21, 3), bool] */;
    %975 = dyn.reshape(%972, %973, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %976 = %966.3;
    %977 = @func_6411(%968) /* ty=Tensor[(7, 3, 3), float32] */;
    %978 = %969.0;
    %979 = less(%974, %975) /* ty=Tensor[(21, 3), bool] */;
    (%976, %977, %978, %979)
  };
  %980(%var_10817, %var_10818) /* ty=(Tensor[(10, 12, 7), float32], Tensor[(7, 3, 3), float32], Tensor[(10, 12, 7), bool], Tensor[(21, 3), bool]) */
}

def @main(%var_13079: Tensor[(6, 12, 16), float32]) -> Tensor[(6, 12, 16), float32] {
  %981 = cast(%var_13079, dtype="float32") /* ty=Tensor[(6, 12, 16), float32] */;
  exp(%981) /* ty=Tensor[(6, 12, 16), float32] */
}

def @func_8872() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %982 = @func_3007() /* ty=(Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %983 = %982.2;
  %984 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
  (%983, %984)
}

def @func_12194(%var_12165: Tensor[(924, 1), float64], %var_12185: Tensor[(756), float64]) -> (Tensor[(13, 3, 8), float32], Tensor[(9, 150), float64], Tensor[(924, 1), float64], Tensor[(576, 1), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(756), float64], Tensor[(3, 7, 7), bool]) {
  %985 = cast(meta[relay.Constant][40] /* ty=Tensor[(13, 3, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 3, 8), float32] */;
  %986 = cast(%var_12165, dtype="float64") /* ty=Tensor[(924, 1), float64] */;
  %987 = cast(meta[relay.Constant][41] /* ty=Tensor[(576, 1), float64] */, dtype="float64") /* ty=Tensor[(576, 1), float64] */;
  %988 = reshape(%986, newshape=[6, 11, 14]) /* ty=Tensor[(6, 11, 14), float64] */;
  %989 = reshape(%987, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %990 = @func_2516(%988, %989) /* ty=(Tensor[(9, 150), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(6, 11, 14), float32], Tensor[(6, 11, 14), float64], Tensor[(4, 40), int16]) */;
  %991 = @func_5158() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %992 = cast(%var_12185, dtype="float64") /* ty=Tensor[(756), float64] */;
  %993 = cast(%var_12185, dtype="float64") /* ty=Tensor[(756), float64] */;
  %994 = reshape(%992, newshape=[9, 14, 6]) /* ty=Tensor[(9, 14, 6), float64] */;
  %995 = reshape(%993, newshape=[9, 14, 6]) /* ty=Tensor[(9, 14, 6), float64] */;
  %996 = @func_10566(%994, %995) /* ty=(Tensor[(9, 14, 6), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(576), float64]) */;
  %997 = @func_11144() /* ty=(Tensor[(3, 7, 7), bool],) */;
  %998 = sinh(%985) /* ty=Tensor[(13, 3, 8), float32] */;
  %999 = %990.0;
  %1000 = @func_2253() /* ty=Tensor[(10, 12, 7), bool] */;
  %1001 = %991.0;
  %1002 = %996.1;
  %1003 = %997.0;
  (%998, %999, %var_12165, meta[relay.Constant][41] /* ty=Tensor[(576, 1), float64] */, %1000, %1001, %1002, %var_12185, %1003)
}

def @func_10941(%var_10940: Tensor[(9, 16, 15), float32]) -> (Tensor[(9, 16, 15), float32],) {
  %1006 = fn (%var_10927: Tensor[(9, 16, 15), float32]) -> (Tensor[(9, 16, 15), float32],) {
    %1004 = cast(%var_10927, dtype="float32") /* ty=Tensor[(9, 16, 15), float32] */;
    %1005 = sqrt(%1004) /* ty=Tensor[(9, 16, 15), float32] */;
    (%1005,)
  };
  %1006(%var_10940) /* ty=(Tensor[(9, 16, 15), float32],) */
}

def @func_1089() -> Tensor[(10, 12, 7), bool] {
  @func_569() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_2932() -> Tensor[(10, 12, 7), bool] {
  %1008 = fn () -> Tensor[(10, 12, 7), bool] {
    %1007 = @func_1382() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %1007.0
  };
  %1008() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_5390() -> (Tensor[(3, 7, 7), bool], Tensor[(11, 10, 15), uint8], Tensor[(1650), uint8]) {
  %1017 = fn () -> (Tensor[(3, 7, 7), bool], Tensor[(11, 10, 15), uint8], Tensor[(1650), uint8]) {
    %1009 = @func_3786() /* ty=(Tensor[(3, 7, 7), bool],) */;
    %1010 = cast(meta[relay.Constant][42] /* ty=Tensor[(1650), uint8] */, dtype="uint8") /* ty=Tensor[(1650), uint8] */;
    %1011 = cast(meta[relay.Constant][42] /* ty=Tensor[(1650), uint8] */, dtype="uint8") /* ty=Tensor[(1650), uint8] */;
    %1012 = reshape(%1010, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), uint8] */;
    %1013 = reshape(%1011, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), uint8] */;
    %1014 = @func_3820(%1012, %1013) /* ty=(Tensor[(11, 10, 15), uint8],) */;
    %1015 = %1009.0;
    %1016 = %1014.0;
    (%1015, %1016, meta[relay.Constant][42] /* ty=Tensor[(1650), uint8] */)
  };
  %1017() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(11, 10, 15), uint8], Tensor[(1650), uint8]) */
}

def @func_12830() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %1020 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %1018 = @func_3576() /* ty=Tensor[(10, 12, 7), bool] */;
    %1019 = @func_9529() /* ty=Tensor[(10, 12, 7), bool] */;
    (%1018, %1019)
  };
  %1020() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_12933(%var_12931: Tensor[(13, 15, 5), float64]) -> (Tensor[(13, 15, 5), float64], Tensor[(13, 15, 5), float64], Tensor[(10, 12, 7), bool], Tensor[(96, 12), uint32], Tensor[(10, 12, 7), bool]) {
  @func_12930(%var_12931) /* ty=(Tensor[(13, 15, 5), float64], Tensor[(13, 15, 5), float64], Tensor[(10, 12, 7), bool], Tensor[(96, 12), uint32], Tensor[(10, 12, 7), bool]) */
}

def @func_2588(%var_2587: Tensor[(13, 11, 1), float64]) -> Tensor[(13, 11, ?), bool] {
  %1025 = fn (%var_2579: Tensor[(13, 11, 1), float64]) -> Tensor[(13, 11, ?), bool] {
    %1021 = cast(%var_2579, dtype="bool") /* ty=Tensor[(13, 11, 1), bool] */;
    %1022 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(13, 11, 1), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1023 = cast(meta[relay.Constant][43] /* ty=Tensor[(13, 11, 1), float64] */, dtype="bool") /* ty=Tensor[(13, 11, 1), bool] */;
    %1024 = dyn.reshape(%1021, %1022, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%1023, %1024) /* ty=Tensor[(13, 11, ?), bool] */
  };
  %1025(%var_2587) /* ty=Tensor[(13, 11, ?), bool] */
}

def @func_4922() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %1030 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %1026 = @func_3765() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %1027 = @func_3711() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %1028 = %1026.0;
    %1029 = %1027.0;
    (%1028, %1029)
  };
  %1030() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_12206() -> Tensor[(10, 12, 7), bool] {
  %1031 = fn () -> Tensor[(10, 12, 7), bool] {
    @func_11574() /* ty=Tensor[(10, 12, 7), bool] */
  };
  %1031() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_10566(%var_10544: Tensor[(9, 14, 6), float64], %var_10545: Tensor[(9, 14, 6), float64]) -> (Tensor[(9, 14, 6), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(576), float64]) {
  %1032 = cast(%var_10545, dtype="float64") /* ty=Tensor[(9, 14, 6), float64] */;
  %1033 = shape_of(%var_10544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1034 = cast(%var_10544, dtype="float64") /* ty=Tensor[(9, 14, 6), float64] */;
  %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1036 = cast(meta[relay.Constant][44] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %1037 = reshape(%1036, newshape=[288, 2]) /* ty=Tensor[(288, 2), float64] */;
  %1038 = @func_1267(%1037) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(288, 2), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */;
  %1039 = power(%1034, %1035) /* ty=Tensor[(9, 14, 6), float64] */;
  %1040 = @func_3244() /* ty=Tensor[(10, 12, 7), bool] */;
  %1041 = %1038.4;
  (%1039, %1040, %1041, meta[relay.Constant][44] /* ty=Tensor[(576), float64] */)
}

def @func_1376() -> (Tensor[(10, 12, 7), bool],) {
  %1044 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %1042 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %1043 = %1042.0;
    (%1043,)
  };
  %1044() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_9420() -> (Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
  @func_9418() /* ty=(Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_3320() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_3318() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_1686() -> (Tensor[(10, 12, 7), bool],) {
  @func_1684() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_4650(%var_4648: Tensor[(576), float64], %var_4649: Tensor[(675, 2), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(1, 160), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), bool], Tensor[(675, 2), float64]) {
  @func_4646(%var_4648, %var_4649) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1, 160), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), bool], Tensor[(675, 2), float64]) */
}

def @func_11145() -> (Tensor[(3, 7, 7), bool],) {
  %1047 = fn () -> (Tensor[(3, 7, 7), bool],) {
    %1045 = @func_2573() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %1046 = %1045.0;
    (%1046,)
  };
  %1047() /* ty=(Tensor[(3, 7, 7), bool],) */
}

def @func_3523() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %1048 = @func_1939() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1049 = @func_1031() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1050 = %1048.0;
  %1051 = %1049.0;
  %1052 = @func_2892() /* ty=Tensor[(10, 12, 7), bool] */;
  (%1050, %1051, %1052)
}

def @func_2404() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) {
  %1053 = @func_1375() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1054 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1055 = cast(meta[relay.Constant][45] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %1056 = reshape(%1055, newshape=[1350]) /* ty=Tensor[(1350), float64] */;
  %1057 = @func_1787(%1056) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */;
  %1058 = %1053.0;
  %1059 = %1054.0;
  %1060 = %1057.2;
  (%1058, %1059, %1060, meta[relay.Constant][45] /* ty=Tensor[(1350), float64] */)
}

def @func_971() -> Tensor[(10, 12, 7), bool] {
  %1062 = fn () -> Tensor[(10, 12, 7), bool] {
    %1061 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %1061.0
  };
  %1062() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_9137(%var_9135: Tensor[(12, 48), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(9, 150), float64], Tensor[(12, 48), float64], Tensor[(10, 12, 7), bool], Tensor[(7, 132), bool], Tensor[(10, 12, 7), bool]) {
  @func_9134(%var_9135) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(9, 150), float64], Tensor[(12, 48), float64], Tensor[(10, 12, 7), bool], Tensor[(7, 132), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_7052() -> (Tensor[(10, 12, 7), bool],) {
  %1063 = @func_6317() /* ty=Tensor[(10, 12, 7), bool] */;
  (%1063,)
}

def @func_10144() -> (Tensor[(10, 12, 7), bool],) {
  @func_10142() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_1789(%var_1788: Tensor[(1350), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) {
  %1076 = fn (%var_1731: Tensor[(1350), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) {
    %1064 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %1065 = cast(%var_1731, dtype="float64") /* ty=Tensor[(1350), float64] */;
    %1066 = reshape(%1065, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), float64] */;
    %1067 = @func_385(%1066) /* ty=(Tensor[(15, 9, 10), float64], Tensor[(10, 12, 7), bool]) */;
    %1068 = %1067.1;
    %1069 = cast(%1068, dtype="float32") /* ty=Tensor[(10, 12, 7), float32] */;
    %1070 = acosh(%1069) /* ty=Tensor[(10, 12, 7), float32] */;
    %1071 = cast(%1070, dtype="float32") /* ty=Tensor[(10, 12, 7), float32] */;
    %1072 = @func_569() /* ty=Tensor[(10, 12, 7), bool] */;
    %1073 = @func_1089() /* ty=Tensor[(10, 12, 7), bool] */;
    %1074 = %1064.0;
    %1075 = atanh(%1071) /* ty=Tensor[(10, 12, 7), float32] */;
    (%1072, %var_1731, %1073, %1074, %1075)
  };
  %1076(%var_1788) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(1350), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */
}

def @func_181() -> (Tensor[(10, 12, 7), bool],) {
  @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_9073() -> (Tensor[(10, 12, 7), float64],) {
  %1079 = fn () -> (Tensor[(10, 12, 7), float64],) {
    %1077 = @func_1893() /* ty=(Tensor[(10, 12, 7), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(135, 10), float64]) */;
    %1078 = %1077.0;
    (%1078,)
  };
  %1079() /* ty=(Tensor[(10, 12, 7), float64],) */
}

def @func_12512() -> (Tensor[(10, 12, 7), bool],) {
  %1082 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %1080 = @func_6892() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %1081 = %1080.0;
    (%1081,)
  };
  %1082() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_3577() -> Tensor[(10, 12, 7), bool] {
  %1084 = fn () -> Tensor[(10, 12, 7), bool] {
    %1083 = @func_2404() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) */;
    %1083.1
  };
  %1084() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_5842(%var_5838: Tensor[(5, 16, 6), int8], %var_5839: Tensor[(5, 16, 6), float64], %var_5840: Tensor[(576), float64], %var_5841: Tensor[(1350), float64]) -> (Tensor[(5, 16, 6), bool], Tensor[(5, 16, 6), int32], Tensor[(10, 12, 7), float32], Tensor[(1, 160), float64], Tensor[(576), float64], Tensor[(1350), float64]) {
  @func_5836(%var_5838, %var_5839, %var_5840, %var_5841) /* ty=(Tensor[(5, 16, 6), bool], Tensor[(5, 16, 6), int32], Tensor[(10, 12, 7), float32], Tensor[(1, 160), float64], Tensor[(576), float64], Tensor[(1350), float64]) */
}

def @func_3318() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %1085 = @func_1382() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1086 = %1085.0;
  %1087 = cast(%1086, dtype="bool") /* ty=Tensor[(10, 12, 7), bool] */;
  %1088 = reshape(%1087, newshape=[10, 12, 7]) /* ty=Tensor[(10, 12, 7), bool] */;
  %1089 = @func_1599(%1088) /* ty=(Tensor[(10, 12, 7), uint16], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1090 = %1089.2;
  (%1086, %1090)
}

def @func_8730() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %1091 = @func_6454() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1092 = @func_1313() /* ty=Tensor[(10, 12, 7), bool] */;
  %1093 = %1091.0;
  %1094 = @func_3394() /* ty=Tensor[(10, 12, 7), bool] */;
  (%1092, %1093, %1094)
}

def @func_10948() -> Tensor[(10, 12, 7), bool] {
  %1096 = fn () -> Tensor[(10, 12, 7), bool] {
    %1095 = @func_3007() /* ty=(Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %1095.2
  };
  %1096() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_6020() -> Tensor[(10, 12, 7), bool] {
  %1098 = fn () -> Tensor[(10, 12, 7), bool] {
    %1097 = @func_1146() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %1097.1
  };
  %1098() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_5085() -> (Tensor[(10, 12, 7), bool],) {
  %1099 = @func_2940() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1100 = %1099.0;
  (%1100,)
}

def @func_622() -> (Tensor[(10, 12, 7), bool],) {
  %1103 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %1101 = @func_598() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %1102 = %1101.0;
    (%1102,)
  };
  %1103() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_12089() -> (Tensor[(10, 12, 7), bool], Tensor[(576), float64]) {
  %1108 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(576), float64]) {
    %1104 = @func_11381() /* ty=(Tensor[(4, 12, 12), float64], Tensor[(10, 12, 7), bool]) */;
    %1105 = @func_11236() /* ty=(Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */;
    %1106 = %1104.1;
    %1107 = %1105.0;
    (%1106, %1107)
  };
  %1108() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(576), float64]) */
}

def @func_6286(%var_6285: Tensor[(10, 12, 7), bool]) -> (Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool]) {
  %1118 = fn (%var_6235: Tensor[(10, 12, 7), bool]) -> (Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool]) {
    %1109 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %1110 = %1109.0;
    %1111 = cast(%var_6235, dtype="uint32") /* ty=Tensor[(10, 12, 7), uint32] */;
    %1112 = shape_of(%1110, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1113 = cast(%1110, dtype="uint32") /* ty=Tensor[(10, 12, 7), uint32] */;
    %1114 = dyn.reshape(%1111, %1112, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1115 = @func_5611() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %1116 = right_shift(%1113, %1114) /* ty=Tensor[(10, 12, 7), uint32] */;
    %1117 = %1115.1;
    (%1116, %1117)
  };
  %1118(%var_6285) /* ty=(Tensor[(10, 12, 7), uint32], Tensor[(10, 12, 7), bool]) */
}

def @func_1977(%var_1976: Tensor[(7, 15, 12), float64]) -> (Tensor[(7, 15, 12), float64],) {
  %1121 = fn (%var_1968: Tensor[(7, 15, 12), float64]) -> (Tensor[(7, 15, 12), float64],) {
    %1119 = cast(%var_1968, dtype="float64") /* ty=Tensor[(7, 15, 12), float64] */;
    %1120 = exp(%1119) /* ty=Tensor[(7, 15, 12), float64] */;
    (%1120,)
  };
  %1121(%var_1976) /* ty=(Tensor[(7, 15, 12), float64],) */
}

def @func_7545(%var_7544: Tensor[(576), float64]) -> (Tensor[(1350), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
  %1129 = fn (%var_7518: Tensor[(576), float64]) -> (Tensor[(1350), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
    %1122 = @func_2404() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350), float64]) */;
    %1123 = cast(%var_7518, dtype="float64") /* ty=Tensor[(576), float64] */;
    %1124 = reshape(%1123, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %1125 = @func_5773(%1124) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1, 48), float64], Tensor[(576), float64]) */;
    %1126 = %1122.3;
    %1127 = %1125.2;
    %1128 = @func_5703() /* ty=Tensor[(10, 12, 7), bool] */;
    (%1126, %1127, %var_7518, %1128)
  };
  %1129(%var_7544) /* ty=(Tensor[(1350), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_2255() -> Tensor[(10, 12, 7), bool] {
  @func_2253() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_11237() -> (Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
  %1134 = fn () -> (Tensor[(576), float64], Tensor[(10, 12, 7), bool]) {
    %1130 = @func_9418() /* ty=(Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */;
    %1131 = @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %1132 = %1130.0;
    %1133 = %1131.0;
    (%1132, %1133)
  };
  %1134() /* ty=(Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */
}

def @func_10582() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %1135 = @func_8135() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1136 = @func_10387() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1137 = %1135.0;
  %1138 = %1136.0;
  (%1137, %1138)
}

def @func_1091() -> Tensor[(10, 12, 7), bool] {
  @func_1089() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_9769() -> (Tensor[(10, 12, 7), bool], Tensor[(675, 2), float64], Tensor[(1350), float64], Tensor[(10, 12, 7), bool]) {
  %1139 = @func_5033() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1140 = cast(meta[relay.Constant][46] /* ty=Tensor[(1350), float64] */, dtype="float64") /* ty=Tensor[(1350), float64] */;
  %1141 = reshape(%1140, newshape=[675, 2]) /* ty=Tensor[(675, 2), float64] */;
  %1142 = @func_5668(%1141) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(675, 2), float64]) */;
  %1143 = %1139.1;
  %1144 = %1142.2;
  %1145 = @func_2610() /* ty=Tensor[(10, 12, 7), bool] */;
  (%1143, %1144, meta[relay.Constant][46] /* ty=Tensor[(1350), float64] */, %1145)
}

def @func_1601(%var_1600: Tensor[(10, 12, 7), bool]) -> (Tensor[(10, 12, 7), uint16], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %1156 = fn (%var_1541: Tensor[(10, 12, 7), bool]) -> (Tensor[(10, 12, 7), uint16], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %1146 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %1147 = %1146.0;
    %1148 = cast(%var_1541, dtype="uint16") /* ty=Tensor[(10, 12, 7), uint16] */;
    %1149 = shape_of(%1147, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1150 = cast(%1147, dtype="uint16") /* ty=Tensor[(10, 12, 7), uint16] */;
    %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1152 = @func_1130() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %1153 = subtract(%1150, %1151) /* ty=Tensor[(10, 12, 7), uint16] */;
    %1154 = @func_1089() /* ty=Tensor[(10, 12, 7), bool] */;
    %1155 = %1152.0;
    (%1153, %1154, %1155)
  };
  %1156(%var_1600) /* ty=(Tensor[(10, 12, 7), uint16], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_9529() -> Tensor[(10, 12, 7), bool] {
  %1157 = @func_5085() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1157.0
}

def @func_3095(%var_3093: Tensor[(1, 160), float64], %var_3094: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(1, 160), float64], Tensor[(675, 2), float64], Tensor[(576), float64]) {
  @func_3091(%var_3093, %var_3094) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(1, 160), float64], Tensor[(675, 2), float64], Tensor[(576), float64]) */
}

def @func_12381() -> Tensor[(10, 12, 7), bool] {
  @func_12379() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_6549(%var_6548: Tensor[(11, 16, 5), float32]) -> (Tensor[(11, 16, 5), float32],) {
  %1160 = fn (%var_6541: Tensor[(11, 16, 5), float32]) -> (Tensor[(11, 16, 5), float32],) {
    %1158 = cast(%var_6541, dtype="float32") /* ty=Tensor[(11, 16, 5), float32] */;
    %1159 = asinh(%1158) /* ty=Tensor[(11, 16, 5), float32] */;
    (%1159,)
  };
  %1160(%var_6548) /* ty=(Tensor[(11, 16, 5), float32],) */
}

def @func_9134(%var_9112: Tensor[(12, 48), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(9, 150), float64], Tensor[(12, 48), float64], Tensor[(10, 12, 7), bool], Tensor[(7, 132), bool], Tensor[(10, 12, 7), bool]) {
  %1161 = @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1162 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 132), float64] */, dtype="float64") /* ty=Tensor[(7, 132), float64] */;
  %1163 = cast(%var_9112, dtype="float64") /* ty=Tensor[(12, 48), float64] */;
  %1164 = reshape(%1162, newshape=[6, 11, 14]) /* ty=Tensor[(6, 11, 14), float64] */;
  %1165 = reshape(%1163, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %1166 = @func_2516(%1164, %1165) /* ty=(Tensor[(9, 150), float64], Tensor[(1, 48), float64], Tensor[(576), float64], Tensor[(6, 11, 14), float32], Tensor[(6, 11, 14), float64], Tensor[(4, 40), int16]) */;
  %1167 = @func_2940() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1168 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 132), float64] */, dtype="float32") /* ty=Tensor[(7, 132), float32] */;
  %1169 = log(%1168) /* ty=Tensor[(7, 132), float32] */;
  %1170 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 132), float64] */, dtype="bool") /* ty=Tensor[(7, 132), bool] */;
  %1171 = shape_of(%1169, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1172 = cast(%1169, dtype="bool") /* ty=Tensor[(7, 132), bool] */;
  %1173 = dyn.reshape(%1170, %1171, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1174 = @func_2625() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1175 = %1161.0;
  %1176 = %1166.0;
  %1177 = %1167.0;
  %1178 = logical_or(%1172, %1173) /* ty=Tensor[(7, 132), bool] */;
  %1179 = %1174.0;
  (%1175, %1176, %var_9112, %1177, %1178, %1179)
}

def @func_4215() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  @func_4213() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_8394(%var_8384: Tensor[(160), float64], %var_8385: Tensor[(6, 96), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(1, 160), float64], Tensor[(160), float64], Tensor[(6, 96), float64]) {
  %1180 = @func_213() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1181 = cast(%var_8384, dtype="float64") /* ty=Tensor[(160), float64] */;
  %1182 = cast(%var_8385, dtype="float64") /* ty=Tensor[(6, 96), float64] */;
  %1183 = reshape(%1181, newshape=[1, 160]) /* ty=Tensor[(1, 160), float64] */;
  %1184 = reshape(%1182, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %1185 = @func_3091(%1183, %1184) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(576), float64], Tensor[(1, 160), float64], Tensor[(675, 2), float64], Tensor[(576), float64]) */;
  %1186 = %1180.0;
  %1187 = %1185.2;
  (%1186, %1187, %var_8384, %var_8385)
}

def @func_9531() -> Tensor[(10, 12, 7), bool] {
  @func_9529() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_12703() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %1193 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %1188 = @func_231() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %1189 = @func_4146() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %1190 = %1188.1;
    %1191 = %1189.0;
    %1192 = @func_4963() /* ty=Tensor[(10, 12, 7), bool] */;
    (%1190, %1191, %1192)
  };
  %1193() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_6660(%var_6658: Tensor[(5, 1, 3), float64], %var_6659: Tensor[(5, 10, 3), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(5, 10, 3), float64]) {
  %1205 = fn (%var_6602: Tensor[(5, 1, 3), float64], %var_6603: Tensor[(5, 10, 3), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(5, 10, 3), float64]) {
    %1194 = @func_4146() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %1195 = cast(%var_6602, dtype="bool") /* ty=Tensor[(5, 1, 3), bool] */;
    %1196 = cast(%var_6603, dtype="bool") /* ty=Tensor[(5, 10, 3), bool] */;
    %1197 = equal(%1195, %1196) /* ty=Tensor[(5, 10, 3), bool] */;
    %1198 = cast(%var_6603, dtype="float64") /* ty=Tensor[(5, 10, 3), float64] */;
    %1199 = shape_of(%1197, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1200 = cast(%1197, dtype="float64") /* ty=Tensor[(5, 10, 3), float64] */;
    %1201 = dyn.reshape(%1198, %1199, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1202 = @func_1297() /* ty=Tensor[(10, 12, 7), bool] */;
    %1203 = %1194.0;
    %1204 = floor_divide(%1200, %1201) /* ty=Tensor[(5, 10, 3), float64] */;
    (%1202, %1203, %1204)
  };
  %1205(%var_6658, %var_6659) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(5, 10, 3), float64]) */
}

def @func_2574() -> (Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool]) {
  %1209 = fn () -> (Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool]) {
    %1206 = @func_311() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
    %1207 = %1206.0;
    %1208 = @func_2253() /* ty=Tensor[(10, 12, 7), bool] */;
    (%1207, %1208)
  };
  %1209() /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_1684() -> (Tensor[(10, 12, 7), bool],) {
  %1210 = @func_1297() /* ty=Tensor[(10, 12, 7), bool] */;
  (%1210,)
}

def @func_12785(%var_12731: Tensor[(15), float64], %var_12759: Tensor[(576), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(5, 10, 3), float64], Tensor[(150, 15), float64], Tensor[(576), float64], Tensor[(576), float64], Tensor[(150, 15), float32], Tensor[(150, 15), uint32]) {
  %1211 = @func_1130() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */;
  %1212 = cast(%var_12731, dtype="float64") /* ty=Tensor[(15), float64] */;
  %1213 = cast(meta[relay.Constant][48] /* ty=Tensor[(150, 1), float64] */, dtype="float64") /* ty=Tensor[(150, 1), float64] */;
  %1214 = reshape(%1212, newshape=[5, 1, 3]) /* ty=Tensor[(5, 1, 3), float64] */;
  %1215 = reshape(%1213, newshape=[5, 10, 3]) /* ty=Tensor[(5, 10, 3), float64] */;
  %1216 = @func_6657(%1214, %1215) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(5, 10, 3), float64]) */;
  %1217 = cast(%var_12731, dtype="bool") /* ty=Tensor[(15), bool] */;
  %1218 = cast(meta[relay.Constant][48] /* ty=Tensor[(150, 1), float64] */, dtype="bool") /* ty=Tensor[(150, 1), bool] */;
  %1219 = equal(%1217, %1218) /* ty=Tensor[(150, 15), bool] */;
  %1220 = cast(%1219, dtype="float64") /* ty=Tensor[(150, 15), float64] */;
  %1221 = sigmoid(%1220) /* ty=Tensor[(150, 15), float64] */;
  %1222 = cast(%1221, dtype="float64") /* ty=Tensor[(150, 15), float64] */;
  %1223 = cast(%var_12759, dtype="float64") /* ty=Tensor[(576), float64] */;
  %1224 = reshape(%1223, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %1225 = @func_9493(%1224) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(288, 2), float64], Tensor[(576), float64], Tensor[(10, 12, 7), bool]) */;
  %1226 = cast(%1219, dtype="float32") /* ty=Tensor[(150, 15), float32] */;
  %1227 = shape_of(%1221, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1228 = cast(%1221, dtype="float32") /* ty=Tensor[(150, 15), float32] */;
  %1229 = dyn.reshape(%1226, %1227, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1230 = cast(%1221, dtype="float64") /* ty=Tensor[(150, 15), float64] */;
  %1231 = erf(%1230) /* ty=Tensor[(150, 15), float64] */;
  %1232 = cast(%1219, dtype="uint32") /* ty=Tensor[(150, 15), uint32] */;
  %1233 = shape_of(%1231, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1234 = cast(%1231, dtype="uint32") /* ty=Tensor[(150, 15), uint32] */;
  %1235 = dyn.reshape(%1232, %1233, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1236 = %1211.0;
  %1237 = %1216.2;
  %1238 = atanh(%1222) /* ty=Tensor[(150, 15), float64] */;
  %1239 = %1225.3;
  %1240 = floor_divide(%1228, %1229) /* ty=Tensor[(150, 15), float32] */;
  %1241 = maximum(%1234, %1235) /* ty=Tensor[(150, 15), uint32] */;
  (%1236, %1237, %1238, %1239, %var_12759, %1240, %1241)
}

def @func_11726() -> (Tensor[(10, 12, 7), bool],) {
  @func_11724() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_3872() -> Tensor[(10, 12, 7), bool] {
  %1242 = fn () -> Tensor[(10, 12, 7), bool] {
    @func_3244() /* ty=Tensor[(10, 12, 7), bool] */
  };
  %1242() /* ty=Tensor[(10, 12, 7), bool] */
}

def @func_2749() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(576), float64]) {
  %1243 = @func_621() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1244 = cast(meta[relay.Constant][49] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %1245 = reshape(%1244, newshape=[288, 2]) /* ty=Tensor[(288, 2), float64] */;
  %1246 = @func_1267(%1245) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(288, 2), float64], Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32]) */;
  %1247 = %1243.0;
  %1248 = %1246.5;
  (%1247, %1248, meta[relay.Constant][49] /* ty=Tensor[(576), float64] */)
}

def @func_10570(%var_10568: Tensor[(9, 14, 6), float64], %var_10569: Tensor[(9, 14, 6), float64]) -> (Tensor[(9, 14, 6), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(576), float64]) {
  @func_10566(%var_10568, %var_10569) /* ty=(Tensor[(9, 14, 6), float64], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(576), float64]) */
}

def @func_5279() -> Tensor[(10, 12, 7), bool] {
  %1249 = @func_4809() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1249.0
}

def @func_4413(%var_4411: Tensor[(10, 12, 7), bool]) -> (Tensor[(10, 12, 7), uint8],) {
  @func_4410(%var_4411) /* ty=(Tensor[(10, 12, 7), uint8],) */
}

def @func_6492() -> (Tensor[(10, 12, 7), bool],) {
  @func_6490() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_9958() -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
  %1253 = fn () -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) {
    %1250 = @func_2940() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %1251 = %1250.0;
    %1252 = @func_3244() /* ty=Tensor[(10, 12, 7), bool] */;
    (%1251, %1252)
  };
  %1253() /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool]) */
}

def @func_4147() -> (Tensor[(10, 12, 7), bool],) {
  %1256 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %1254 = @func_179() /* ty=(Tensor[(10, 12, 7), bool],) */;
    %1255 = %1254.0;
    (%1255,)
  };
  %1256() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_6791(%var_6790: Tensor[(3, 10, 1), float32]) -> (Tensor[(3, 10, 10), bool], Tensor[(16, 12, 6), bool], Tensor[(1152), uint32]) {
  %1273 = fn (%var_6755: Tensor[(3, 10, 1), float32]) -> (Tensor[(3, 10, 10), bool], Tensor[(16, 12, 6), bool], Tensor[(1152), uint32]) {
    %1257 = cast(%var_6755, dtype="bool") /* ty=Tensor[(3, 10, 1), bool] */;
    %1258 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 10, 10), float32] */, dtype="bool") /* ty=Tensor[(3, 10, 10), bool] */;
    %1259 = not_equal(%1257, %1258) /* ty=Tensor[(3, 10, 10), bool] */;
    %1260 = cast(%1259, dtype="float32") /* ty=Tensor[(3, 10, 10), float32] */;
    %1261 = rsqrt(%1260) /* ty=Tensor[(3, 10, 10), float32] */;
    %1262 = cast(%1259, dtype="bool") /* ty=Tensor[(3, 10, 10), bool] */;
    %1263 = shape_of(%1261, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1264 = cast(%1261, dtype="bool") /* ty=Tensor[(3, 10, 10), bool] */;
    %1265 = dyn.reshape(%1262, %1263, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1266 = cast(meta[relay.Constant][51] /* ty=Tensor[(1152), uint32] */, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
    %1267 = cast(meta[relay.Constant][51] /* ty=Tensor[(1152), uint32] */, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
    %1268 = reshape(%1266, newshape=[16, 12, 6]) /* ty=Tensor[(16, 12, 6), uint32] */;
    %1269 = reshape(%1267, newshape=[16, 12, 6]) /* ty=Tensor[(16, 12, 6), uint32] */;
    %1270 = @func_2432(%1268, %1269) /* ty=(Tensor[(16, 12, 6), bool], Tensor[(10, 12, 7), bool], Tensor[(135, 10), float64]) */;
    %1271 = less(%1264, %1265) /* ty=Tensor[(3, 10, 10), bool] */;
    %1272 = %1270.0;
    (%1271, %1272, meta[relay.Constant][51] /* ty=Tensor[(1152), uint32] */)
  };
  %1273(%var_6790) /* ty=(Tensor[(3, 10, 10), bool], Tensor[(16, 12, 6), bool], Tensor[(1152), uint32]) */
}

def @func_11017() -> (Tensor[(10, 12, 7), bool],) {
  %1274 = @func_4108() /* ty=Tensor[(10, 12, 7), bool] */;
  (%1274,)
}

def @func_3602(%var_3600: Tensor[(48), float64], %var_3601: Tensor[(576), float64]) -> (Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) {
  @func_3598(%var_3600, %var_3601) /* ty=(Tensor[(3, 7, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(48), float64], Tensor[(576), float64]) */
}

def @func_9731() -> (Tensor[(10, 12, 7), bool],) {
  %1276 = fn () -> (Tensor[(10, 12, 7), bool],) {
    %1275 = @func_3871() /* ty=Tensor[(10, 12, 7), bool] */;
    (%1275,)
  };
  %1276() /* ty=(Tensor[(10, 12, 7), bool],) */
}

def @func_5063(%var_5059: Tensor[(1350, 1), float64]) -> (Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(1350, 1), float64]) {
  %1277 = @func_2693() /* ty=(Tensor[(10, 12, 7), bool],) */;
  %1278 = cast(%var_5059, dtype="float64") /* ty=Tensor[(1350, 1), float64] */;
  %1279 = reshape(%1278, newshape=[9, 150]) /* ty=Tensor[(9, 150), float64] */;
  %1280 = @func_3188(%1279) /* ty=(Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), float32], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(10, 12, 7), bool], Tensor[(9, 150), float64]) */;
  %1281 = %1277.0;
  %1282 = @func_1297() /* ty=Tensor[(10, 12, 7), bool] */;
  %1283 = %1280.3;
  (%1281, %1282, %1283, %var_5059)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen464/build/output.py:4186: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen464/build/output.py", line 4191, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_exp_kernel0(float* __restrict__ T_exp, float* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 64) + (((int)threadIdx.x) >> 4)) < 72) {
    if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1152) {
      T_exp[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = __expf(placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
    }
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


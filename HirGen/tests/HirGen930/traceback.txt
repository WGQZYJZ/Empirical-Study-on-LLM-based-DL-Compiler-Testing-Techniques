==========mod==========
#[version = "0.0.5"]
def @func_22091(%var_22066: Tensor[(16, 11, 1), float32], %var_22067: Tensor[(16, 11, 16), float32]) -> (Tensor[(16, 11, 16), bool], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %0 = cast(%var_22066, dtype="bool") /* ty=Tensor[(16, 11, 1), bool] */;
  %1 = cast(%var_22067, dtype="bool") /* ty=Tensor[(16, 11, 16), bool] */;
  %2 = @func_7664() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), bool]) */;
  %3 = @func_11816() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) */;
  %4 = greater(%0, %1) /* ty=Tensor[(16, 11, 16), bool] */;
  %5 = %2.3;
  %6 = %3.0;
  (%4, %5, %6)
}

def @func_5437(%var_5358: Tensor[(1, 2, 4), int16], %var_5359: Tensor[(1, 2, 4), int16], %var_5379: Tensor[(8, 2, 4), bool], %var_5385: Tensor[(100), int64], %var_5386: Tensor[(320), uint16], %var_5428: Tensor[(240), float32]) -> (Tensor[(8, 2, 4), int64], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(2, 5, 10), float64], Tensor[(100), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32]) {
  %7 = cast(%var_5359, dtype="bool") /* ty=Tensor[(1, 2, 4), bool] */;
  %8 = shape_of(%var_5358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%var_5358, dtype="bool") /* ty=Tensor[(1, 2, 4), bool] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %11 = equal(%9, %10) /* ty=Tensor[(?, 2, 4), bool] */;
  %12 = cast(%11, dtype="int64") /* ty=Tensor[(?, 2, 4), int64] */;
  %13 = cast(%var_5379, dtype="int64") /* ty=Tensor[(8, 2, 4), int64] */;
  %14 = cast(%var_5385, dtype="int64") /* ty=Tensor[(100), int64] */;
  %15 = cast(%var_5386, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %17 = reshape(%14, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %18 = reshape(%15, newshape=[320]) /* ty=Tensor[(320), uint16] */;
  %19 = reshape(%16, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %20 = @func_4442(%17, %18, %19) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(8, 5, 8), bool], Tensor[(320), uint16], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %21 = %20.5;
  %22 = cast(%21, dtype="float64") /* ty=Tensor[(2, 5, 10), float64] */;
  %23 = cast(meta[relay.Constant][0] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %24 = reshape(%23, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint8] */;
  %25 = @func_2959(%24) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %26 = cast(%var_5428, dtype="float32") /* ty=Tensor[(240), float32] */;
  %27 = cast(%var_5428, dtype="float32") /* ty=Tensor[(240), float32] */;
  %28 = reshape(%26, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %29 = reshape(%27, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %30 = bitwise_xor(%12, %13) /* ty=Tensor[(8, 2, 4), int64] */;
  %31 = asin(%22) /* ty=Tensor[(2, 5, 10), float64] */;
  %32 = %25.2;
  %33 = @func_74(%28, %29) /* ty=Tensor[(2, 15, 8), float32] */;
  (%30, %var_5385, %var_5386, meta[relay.Constant][0] /* ty=Tensor[(144), uint8] */, %31, %32, %33, %var_5428)
}

def @func_10976() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %34 = @func_7074() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 15, 8), float32]) */;
  %35 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
  %36 = %34.0;
  (%35, %36)
}

def @func_12980(%var_12972: Tensor[(8, 30), float32]) -> (Tensor[(54), float32], Tensor[(9, 13, 54), float32], Tensor[(390), float32], Tensor[(8, 30), float32]) {
  %37 = @func_11816() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) */;
  %38 = @func_5209() /* ty=Tensor[(54), float32] */;
  %39 = @func_10747() /* ty=Tensor[(9, 13, 1), bool] */;
  %40 = cast(%38, dtype="float32") /* ty=Tensor[(54), float32] */;
  %41 = cast(%39, dtype="float32") /* ty=Tensor[(9, 13, 1), float32] */;
  %42 = cast(%var_12972, dtype="float32") /* ty=Tensor[(8, 30), float32] */;
  %43 = reshape(%42, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %44 = @func_5517(%43) /* ty=(Tensor[(14, 10, 15), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(240), float32], Tensor[(3, 13, 8), uint32], Tensor[(312), float32], Tensor[(126), float32]) */;
  %45 = %37.3;
  %46 = mod(%40, %41) /* ty=Tensor[(9, 13, 54), float32] */;
  %47 = %44.2;
  (%45, %46, %47, %var_12972)
}

def @func_13875() -> (Tensor[(3, 16, 14), float64], Tensor[(54), float32]) {
  %48 = @func_10702() /* ty=(Tensor[(3, 16, 14), float64],) */;
  %49 = @func_5275() /* ty=(Tensor[(54), float32],) */;
  %50 = %48.0;
  %51 = %49.0;
  (%50, %51)
}

def @func_2959(%var_2902: Tensor[(12, 6, 2), uint8]) -> (Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) {
  %52 = cast(meta[relay.Constant][1] /* ty=Tensor[(12, 6, 2), uint8] */, dtype="uint8") /* ty=Tensor[(12, 6, 2), uint8] */;
  %53 = shape_of(%var_2902, dtype="int32") /* ty=Tensor[(3), int32] */;
  %54 = cast(%var_2902, dtype="uint8") /* ty=Tensor[(12, 6, 2), uint8] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %56 = cast(meta[relay.Constant][2] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %57 = cast(meta[relay.Constant][2] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %58 = reshape(%56, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %59 = reshape(%57, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %60 = @func_1483(%58, %59) /* ty=(Tensor[(2, 5, 10), int64],) */;
  %61 = multiply(%54, %55) /* ty=Tensor[(12, 6, 2), uint8] */;
  %62 = %60.0;
  (%61, %62, meta[relay.Constant][2] /* ty=Tensor[(100), int64] */)
}

def @func_7378(%var_7376: Tensor[(672), int8]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), int8], Tensor[(672), int8]) {
  %63 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %64 = cast(%var_7376, dtype="int8") /* ty=Tensor[(672), int8] */;
  %65 = reshape(%64, newshape=[3, 16, 14]) /* ty=Tensor[(3, 16, 14), int8] */;
  %66 = @func_2099(%65) /* ty=(Tensor[(3, 16, 14), int8],) */;
  %67 = %63.0;
  %68 = %66.0;
  (%67, %68, %var_7376)
}

def @func_4550() -> (Tensor[(3, 13, 8), float32],) {
  %69 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
  (%69,)
}

def @func_18938() -> (Tensor[(3, 7, 6), float32], Tensor[(54), float32]) {
  %70 = @func_7074() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 15, 8), float32]) */;
  %71 = @func_7415() /* ty=(Tensor[(54), float32],) */;
  %72 = %70.0;
  %73 = %71.0;
  (%72, %73)
}

def @func_6311() -> (Tensor[(54), float32],) {
  %74 = @func_5209() /* ty=Tensor[(54), float32] */;
  (%74,)
}

def @func_15280(%var_15266: Tensor[(24, 6), uint8]) -> (Tensor[(9, 13, 1), bool], Tensor[(54), float32], Tensor[(64), bool], Tensor[(24, 6), uint8], Tensor[(240), float32]) {
  %75 = cast(meta[relay.Constant][3] /* ty=Tensor[(64), bool] */, dtype="bool") /* ty=Tensor[(64), bool] */;
  %76 = cast(%var_15266, dtype="uint8") /* ty=Tensor[(24, 6), uint8] */;
  %77 = cast(meta[relay.Constant][4] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %78 = reshape(%75, newshape=[64]) /* ty=Tensor[(64), bool] */;
  %79 = reshape(%76, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %80 = reshape(%77, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %81 = @func_10429(%78, %79, %80) /* ty=(Tensor[(54), float32], Tensor[(126), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(672), int8], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(8, 5, 8), bool], Tensor[(240), float32]) */;
  %82 = @func_10445() /* ty=Tensor[(9, 13, 1), bool] */;
  %83 = %81.0;
  (%82, %83, meta[relay.Constant][3] /* ty=Tensor[(64), bool] */, %var_15266, meta[relay.Constant][4] /* ty=Tensor[(240), float32] */)
}

def @func_17717() -> (Tensor[(3, 16, 14), float64],) {
  %84 = @func_14419() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), float64]) */;
  %85 = %84.1;
  (%85,)
}

def @func_5209() -> Tensor[(54), float32] {
  @func_4726() /* ty=Tensor[(54), float32] */
}

def @func_12434(%var_12425: Tensor[(8, 8), bool], %var_12426: Tensor[(100), int64], %var_12427: Tensor[(144), uint8]) -> (Tensor[(54), float32], Tensor[(144), uint8], Tensor[(8), int16], Tensor[(8, 8), bool], Tensor[(100), int64], Tensor[(144), uint8]) {
  %86 = @func_5337() /* ty=(Tensor[(54), float32],) */;
  %87 = cast(meta[relay.Constant][5] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
  %88 = cast(%var_12425, dtype="bool") /* ty=Tensor[(8, 8), bool] */;
  %89 = cast(%var_12426, dtype="int64") /* ty=Tensor[(100), int64] */;
  %90 = cast(%var_12427, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %91 = reshape(%87, newshape=[8, 1]) /* ty=Tensor[(8, 1), int16] */;
  %92 = reshape(%88, newshape=[64]) /* ty=Tensor[(64), bool] */;
  %93 = reshape(%89, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %94 = reshape(%90, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %95 = @func_7246(%91, %92, %93, %94) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 9), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(2, 5, 10), int64], Tensor[(8, 64), int32]) */;
  %96 = %86.0;
  %97 = %95.3;
  (%96, %97, meta[relay.Constant][5] /* ty=Tensor[(8), int16] */, %var_12425, %var_12426, %var_12427)
}

def @func_14471() -> (Tensor[(3, 7, 6), float32],) {
  %98 = @func_9585() /* ty=Tensor[(3, 7, 6), float32] */;
  (%98,)
}

def @func_19208() -> (Tensor[(3, 13, 8), float32],) {
  %99 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %100 = %99.0;
  (%100,)
}

def @func_10886() -> (Tensor[(3, 13, 8), float32],) {
  %101 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %102 = %101.0;
  (%102,)
}

def @func_18454() -> Tensor[(3, 13, 8), float32] {
  %103 = @func_12800() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %103.0
}

def @func_1991(%var_1985: Tensor[(8, 5, 8), uint16]) -> (Tensor[(8, 5, 8), bool],) {
  %104 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 5, 8), uint16] */, dtype="bool") /* ty=Tensor[(8, 5, 8), bool] */;
  %105 = shape_of(%var_1985, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%var_1985, dtype="bool") /* ty=Tensor[(8, 5, 8), bool] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %108 = less(%106, %107) /* ty=Tensor[(8, 5, 8), bool] */;
  (%108,)
}

def @func_6919() -> (Tensor[(2, 15, 8), float32],) {
  %109 = @func_5130() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) */;
  %110 = %109.5;
  (%110,)
}

def @func_14419() -> (Tensor[(54), float32], Tensor[(3, 16, 14), float64]) {
  %111 = @func_10995() /* ty=(Tensor[(54), float32],) */;
  %112 = @func_13875() /* ty=(Tensor[(3, 16, 14), float64], Tensor[(54), float32]) */;
  %113 = %111.0;
  %114 = %112.0;
  (%113, %114)
}

def @func_2099(%var_2087: Tensor[(3, 16, 14), int8]) -> (Tensor[(3, 16, 14), int8],) {
  %115 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 16, 14), int8] */, dtype="int8") /* ty=Tensor[(3, 16, 14), int8] */;
  %116 = shape_of(%var_2087, dtype="int32") /* ty=Tensor[(3), int32] */;
  %117 = cast(%var_2087, dtype="int8") /* ty=Tensor[(3, 16, 14), int8] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %119 = logical_xor(%117, %118) /* ty=Tensor[(3, 16, 14), int8] */;
  (%119,)
}

def @func_15664(%var_15622: Tensor[(54), float32]) -> (Tensor[(3, 7, 6), float64], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32], Tensor[(9, 13, 1), bool]) {
  %120 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %121 = %120.0;
  %122 = cast(%121, dtype="float64") /* ty=Tensor[(3, 7, 6), float64] */;
  %123 = cast(meta[relay.Constant][8] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %124 = cast(meta[relay.Constant][8] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %125 = reshape(%123, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %126 = reshape(%124, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %127 = cast(%var_15622, dtype="float32") /* ty=Tensor[(54), float32] */;
  %128 = reshape(%127, newshape=[2, 9, 3]) /* ty=Tensor[(2, 9, 3), float32] */;
  %129 = @func_664(%128) /* ty=(Tensor[(2, 9, 3), float32],) */;
  %130 = @func_7093() /* ty=(Tensor[(9, 13, 1), bool],) */;
  %131 = erf(%122) /* ty=Tensor[(3, 7, 6), float64] */;
  %132 = @func_74(%125, %126) /* ty=Tensor[(2, 15, 8), float32] */;
  %133 = %129.0;
  %134 = %130.0;
  (%131, %132, meta[relay.Constant][8] /* ty=Tensor[(240), float32] */, %133, %var_15622, %134)
}

def @func_13320(%var_13311: Tensor[(1, 54), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(1, 54), float32]) {
  %135 = @func_10976() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %136 = @func_8865() /* ty=Tensor[(3, 13, 8), float64] */;
  %137 = cast(%136, dtype="float64") /* ty=Tensor[(3, 13, 8), float64] */;
  %138 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %139 = %135.1;
  %140 = cast(%139, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %141 = cast(%var_13311, dtype="float32") /* ty=Tensor[(1, 54), float32] */;
  %142 = reshape(%140, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %143 = reshape(%141, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %144 = @func_4405(%142, %143) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32]) */;
  %145 = @func_10900() /* ty=Tensor[(3, 13, 8), float32] */;
  %146 = @func_11552() /* ty=Tensor[(3, 13, 8), float32] */;
  %147 = atanh(%137) /* ty=Tensor[(3, 13, 8), float64] */;
  %148 = %138.0;
  %149 = %144.1;
  (%139, %145, %146, %147, %148, %149, %var_13311)
}

def @func_15182() -> Tensor[(54), float32] {
  %150 = @func_12299() /* ty=(Tensor[(54), float32],) */;
  %150.0
}

def @func_9069() -> Tensor[(3, 13, 8), float32] {
  %151 = @func_4550() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %151.0
}

def @func_6064() -> (Tensor[(3, 13, 8), float64], Tensor[(100), int64], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32]) {
  %152 = @func_5183() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %153 = %152.0;
  %154 = cast(%153, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %155 = asinh(%154) /* ty=Tensor[(3, 13, 8), float32] */;
  %156 = cast(%155, dtype="float64") /* ty=Tensor[(3, 13, 8), float64] */;
  %157 = cast(meta[relay.Constant][9] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %158 = cast(meta[relay.Constant][10] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %159 = reshape(%157, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %160 = reshape(%158, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %161 = @func_5909(%159, %160) /* ty=(Tensor[(3, 7, 6), int16], Tensor[(100), int64], Tensor[(144), uint8]) */;
  %162 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %163 = sqrt(%156) /* ty=Tensor[(3, 13, 8), float64] */;
  %164 = %161.1;
  %165 = %162.0;
  (%163, %164, meta[relay.Constant][9] /* ty=Tensor[(126), float32] */, meta[relay.Constant][10] /* ty=Tensor[(144), uint8] */, %165)
}

def @func_18796() -> (Tensor[(3, 7, 6), float32], Tensor[(54), float32]) {
  %166 = @func_16007() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %167 = @func_7415() /* ty=(Tensor[(54), float32],) */;
  %168 = %166.1;
  %169 = %167.0;
  (%168, %169)
}

def @func_11318(%var_11253: Tensor[(126), float32]) -> (Tensor[(3, 7, 6), int64], Tensor[(126), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 13, 8), uint32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  %170 = cast(%var_11253, dtype="float32") /* ty=Tensor[(126), float32] */;
  %171 = reshape(%170, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %172 = @func_5015(%171) /* ty=(Tensor[(3, 7, 6), int64], Tensor[(3, 13, 8), float32]) */;
  %173 = @func_7756() /* ty=(Tensor[(54), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float64]) */;
  %174 = @func_11216() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %175 = %174.0;
  %176 = cast(%175, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %177 = reshape(%176, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %178 = @func_5677(%177) /* ty=(Tensor[(3, 13, 8), uint32],) */;
  %179 = %178.0;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %181 = reshape(%180, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %182 = @func_4943(%181) /* ty=(Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), bool]) */;
  %183 = cast(%175, dtype="float64") /* ty=Tensor[(3, 13, 8), float64] */;
  %184 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%179, dtype="float64") /* ty=Tensor[(3, 13, 8), float64] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %187 = %172.0;
  %188 = %173.4;
  %189 = %182.0;
  %190 = @func_9585() /* ty=Tensor[(3, 7, 6), float32] */;
  %191 = floor_divide(%185, %186) /* ty=Tensor[(3, 13, 8), float64] */;
  %192 = @func_10900() /* ty=Tensor[(3, 13, 8), float32] */;
  %193 = @func_10900() /* ty=Tensor[(3, 13, 8), float32] */;
  (%187, %var_11253, %188, %189, %190, %191, %192, %193)
}

def @func_6821(%var_6662: Tensor[(8), int16], %var_6663: Tensor[(1, 64), bool], %var_6664: Tensor[(100), int64], %var_6722: Tensor[(144), uint8], %var_6754: Tensor[(351), int64], %var_6803: Tensor[(672), int8]) -> (Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(8), int16], Tensor[(1, 64), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(120, 2), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), float32], Tensor[(351), int64], Tensor[(3, 16, 14), int8], Tensor[(672), int8], Tensor[(3, 13, 8), float32]) {
  %194 = @func_6311() /* ty=(Tensor[(54), float32],) */;
  %195 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %196 = cast(%var_6662, dtype="int16") /* ty=Tensor[(8), int16] */;
  %197 = cast(%var_6662, dtype="int16") /* ty=Tensor[(8), int16] */;
  %198 = cast(%var_6663, dtype="bool") /* ty=Tensor[(1, 64), bool] */;
  %199 = cast(%var_6664, dtype="int64") /* ty=Tensor[(100), int64] */;
  %200 = cast(meta[relay.Constant][11] /* ty=Tensor[(320), uint16] */, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %201 = cast(meta[relay.Constant][12] /* ty=Tensor[(120, 2), float32] */, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
  %202 = reshape(%196, newshape=[1, 2, 4]) /* ty=Tensor[(1, 2, 4), int16] */;
  %203 = reshape(%197, newshape=[1, 2, 4]) /* ty=Tensor[(1, 2, 4), int16] */;
  %204 = reshape(%198, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), bool] */;
  %205 = reshape(%199, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %206 = reshape(%200, newshape=[320]) /* ty=Tensor[(320), uint16] */;
  %207 = reshape(%201, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %208 = @func_5437(%202, %203, %204, %205, %206, %207) /* ty=(Tensor[(8, 2, 4), int64], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(2, 5, 10), float64], Tensor[(100), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32]) */;
  %209 = @func_5759() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %210 = cast(%var_6722, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %211 = reshape(%210, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint8] */;
  %212 = @func_2959(%211) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %213 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %214 = cast(%var_6754, dtype="int64") /* ty=Tensor[(351), int64] */;
  %215 = cast(%var_6754, dtype="int64") /* ty=Tensor[(351), int64] */;
  %216 = reshape(%214, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), int64] */;
  %217 = reshape(%215, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), int64] */;
  %218 = @func_2486(%216, %217) /* ty=(Tensor[(3, 13, 9), int64], Tensor[(3, 13, 9), float32]) */;
  %219 = cast(%var_6803, dtype="int8") /* ty=Tensor[(672), int8] */;
  %220 = reshape(%219, newshape=[3, 16, 14]) /* ty=Tensor[(3, 16, 14), int8] */;
  %221 = @func_2099(%220) /* ty=(Tensor[(3, 16, 14), int8],) */;
  %222 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %223 = %194.0;
  %224 = %195.1;
  %225 = %208.7;
  %226 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
  %227 = %209.0;
  %228 = %212.1;
  %229 = %213.0;
  %230 = %218.1;
  %231 = %221.0;
  %232 = %222.0;
  (%223, %224, %225, %var_6662, %var_6663, %var_6664, meta[relay.Constant][11] /* ty=Tensor[(320), uint16] */, meta[relay.Constant][12] /* ty=Tensor[(120, 2), float32] */, %226, %227, %228, %var_6722, %229, %230, %var_6754, %231, %var_6803, %232)
}

def @func_17857(%var_17847: Tensor[(2, 9, 3), float32]) -> (Tensor[(2, 9, 3), uint32],) {
  %233 = @func_8428() /* ty=(Tensor[(3, 13, 8), bool], Tensor[(2, 9, 3), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float64], Tensor[(3, 7, 6), float64]) */;
  %234 = %233.1;
  %235 = cast(%var_17847, dtype="uint32") /* ty=Tensor[(2, 9, 3), uint32] */;
  %236 = shape_of(%234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%234, dtype="uint32") /* ty=Tensor[(2, 9, 3), uint32] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %239 = bitwise_or(%237, %238) /* ty=Tensor[(2, 9, 3), uint32] */;
  (%239,)
}

def @func_11575() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32]) {
  %240 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
  %241 = cast(%240, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %242 = reshape(%241, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %243 = @func_4943(%242) /* ty=(Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), bool]) */;
  %244 = %243.0;
  (%240, %244)
}

def @func_7664() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), bool]) {
  %245 = @func_5183() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %246 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %247 = %246.0;
  %248 = cast(%247, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %249 = reshape(%248, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %250 = @func_4943(%249) /* ty=(Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), bool]) */;
  %251 = @func_7510() /* ty=Tensor[(3, 13, 8), float32] */;
  %252 = %245.0;
  %253 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
  %254 = %250.1;
  (%251, %252, %253, %247, %254)
}

def @func_20230(%var_20215: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(144), uint8], Tensor[(144), uint8]) {
  %255 = cast(%var_20215, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %256 = reshape(%255, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %257 = @func_18143(%256) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(312, 1), float32], Tensor[(144), uint8]) */;
  %258 = @func_9625() /* ty=Tensor[(3, 13, 8), float32] */;
  %259 = %257.2;
  (%258, %259, %var_20215)
}

def @func_10087() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) {
  %260 = @func_6222() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(8, 5, 5), bool], Tensor[(200), bool], Tensor[(3, 7, 6), float32]) */;
  %261 = @func_7664() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), bool]) */;
  %262 = @func_8097() /* ty=(Tensor[(54), float32], Tensor[(54), float32]) */;
  %263 = %260.1;
  %264 = %261.3;
  %265 = %262.0;
  (%263, %264, %265)
}

def @func_5337() -> (Tensor[(54), float32],) {
  %266 = @func_5209() /* ty=Tensor[(54), float32] */;
  (%266,)
}

def @func_664(%var_661: Tensor[(2, 9, 3), float32]) -> (Tensor[(2, 9, 3), float32],) {
  %267 = cast(%var_661, dtype="float32") /* ty=Tensor[(2, 9, 3), float32] */;
  %268 = log10(%267) /* ty=Tensor[(2, 9, 3), float32] */;
  (%268,)
}

def @func_10026(%var_10011: Tensor[(15, 2, 16), float32]) -> (Tensor[(15, 2, 16), float32], Tensor[(54), float32]) {
  %269 = cast(%var_10011, dtype="float32") /* ty=Tensor[(15, 2, 16), float32] */;
  %270 = @func_8097() /* ty=(Tensor[(54), float32], Tensor[(54), float32]) */;
  %271 = atanh(%269) /* ty=Tensor[(15, 2, 16), float32] */;
  %272 = %270.0;
  (%271, %272)
}

def @func_15047() -> Tensor[(3, 13, 8), float64] {
  %273 = @func_12880() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8]) */;
  %273.0
}

def @func_18305(%var_18285: Tensor[(3, 14, 5), float32]) -> (Tensor[(3, 14, 5), float32], Tensor[(3, 13, 8), float32]) {
  %274 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 5), float32] */;
  %275 = shape_of(%var_18285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%var_18285, dtype="float32") /* ty=Tensor[(3, 14, 5), float32] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %278 = @func_5130() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) */;
  %279 = power(%276, %277) /* ty=Tensor[(3, 14, 5), float32] */;
  %280 = %278.0;
  (%279, %280)
}

def @func_4679(%var_4669: uint32, %var_4670: Tensor[(8, 13, 12), uint32]) -> Tensor[(8, 13, 12), bool] {
  %281 = cast(%var_4669, dtype="bool") /* ty=bool */;
  %282 = cast(%var_4670, dtype="bool") /* ty=Tensor[(8, 13, 12), bool] */;
  less(%281, %282) /* ty=Tensor[(8, 13, 12), bool] */
}

def @func_21869() -> Tensor[(54), float32] {
  %283 = @func_5337() /* ty=(Tensor[(54), float32],) */;
  %283.0
}

def @func_4267() -> Tensor[(3, 13, 8), float32] {
  %284 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 13, 8), float32] */, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  log2(%284) /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_18777() -> (Tensor[(2, 5, 10), int64], Tensor[(144), uint8], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %285 = @func_15468() /* ty=(Tensor[(2, 5, 10), int64], Tensor[(3, 13, 8), float32]) */;
  %286 = cast(meta[relay.Constant][15] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %287 = cast(meta[relay.Constant][16] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %288 = reshape(%286, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %289 = reshape(%287, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %290 = @func_5909(%288, %289) /* ty=(Tensor[(3, 7, 6), int16], Tensor[(100), int64], Tensor[(144), uint8]) */;
  %291 = @func_11575() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32]) */;
  %292 = @func_13194() /* ty=(Tensor[(54), float32],) */;
  %293 = @func_18465() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %294 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %295 = %285.0;
  %296 = %290.2;
  %297 = @func_18454() /* ty=Tensor[(3, 13, 8), float32] */;
  %298 = %291.1;
  %299 = %292.0;
  %300 = %293.0;
  %301 = %294.0;
  (%295, %296, meta[relay.Constant][15] /* ty=Tensor[(126), float32] */, meta[relay.Constant][16] /* ty=Tensor[(144), uint8] */, %297, %298, %299, %300, %301)
}

def @func_16646() -> (Tensor[(3, 7, 6), float32], Tensor[(54), float32]) {
  %302 = @func_10976() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %303 = @func_10995() /* ty=(Tensor[(54), float32],) */;
  %304 = %302.1;
  %305 = %303.0;
  (%304, %305)
}

def @func_19030() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %306 = @func_11464() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
  %307 = %306.1;
  %308 = @func_18223() /* ty=Tensor[(3, 7, 6), float32] */;
  (%307, %308)
}

def @func_6598(%var_6557: Tensor[(3, 13, 8), float32]) -> (Tensor[(54), float32], Tensor[(3, 13, 8), float32]) {
  %309 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %310 = %309.0;
  %311 = cast(%var_6557, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %312 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%310, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %315 = @func_4726() /* ty=Tensor[(54), float32] */;
  %316 = divide(%313, %314) /* ty=Tensor[(3, 13, 8), float32] */;
  (%315, %316)
}

def @func_11150(%var_11105: Tensor[(240), float32], %var_11111: Tensor[(126), float32], %var_11118: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(672), int8], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float32], Tensor[(126), float32], Tensor[(54), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(3, 13, 8), float32], Tensor[(100), int64], Tensor[(54), float32]) {
  %317 = @func_7019() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
  %318 = cast(meta[relay.Constant][17] /* ty=Tensor[(672), int8] */, dtype="int8") /* ty=Tensor[(672), int8] */;
  %319 = reshape(%318, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %320 = @func_7378(%319) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), int8], Tensor[(672), int8]) */;
  %321 = cast(%var_11105, dtype="float32") /* ty=Tensor[(240), float32] */;
  %322 = cast(%var_11105, dtype="float32") /* ty=Tensor[(240), float32] */;
  %323 = reshape(%321, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %324 = reshape(%322, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %325 = cast(%var_11111, dtype="float32") /* ty=Tensor[(126), float32] */;
  %326 = cast(meta[relay.Constant][18] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %327 = reshape(%325, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %328 = reshape(%326, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %329 = @func_4405(%327, %328) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32]) */;
  %330 = cast(%var_11118, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %331 = reshape(%330, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %332 = @func_10274(%331) /* ty=(Tensor[(54), float32], Tensor[(100), int64], Tensor[(144), uint8]) */;
  %333 = cast(%var_11111, dtype="float32") /* ty=Tensor[(126), float32] */;
  %334 = cast(%var_11118, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %335 = reshape(%333, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %336 = reshape(%334, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %337 = @func_5909(%335, %336) /* ty=(Tensor[(3, 7, 6), int16], Tensor[(100), int64], Tensor[(144), uint8]) */;
  %338 = @func_10125() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32]) */;
  %339 = %317.1;
  %340 = %320.1;
  %341 = @func_74(%323, %324) /* ty=Tensor[(2, 15, 8), float32] */;
  %342 = %329.2;
  %343 = %332.1;
  %344 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
  %345 = %337.1;
  %346 = %338.0;
  (%339, %340, meta[relay.Constant][17] /* ty=Tensor[(672), int8] */, %341, %var_11105, %342, %var_11111, meta[relay.Constant][18] /* ty=Tensor[(54), float32] */, %343, %var_11118, %344, %345, %346)
}

def @func_12735() -> (Tensor[(3, 13, 8), float32],) {
  %347 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
  (%347,)
}

def @func_5275() -> (Tensor[(54), float32],) {
  %348 = @func_4726() /* ty=Tensor[(54), float32] */;
  (%348,)
}

def @func_21719() -> (Tensor[(3, 13, 8), float64],) {
  %349 = @func_8865() /* ty=Tensor[(3, 13, 8), float64] */;
  (%349,)
}

def @func_17945() -> (Tensor[(54), float32], Tensor[(144), uint8]) {
  %350 = @func_7415() /* ty=(Tensor[(54), float32],) */;
  %351 = @func_17830() /* ty=(Tensor[(144), uint8],) */;
  %352 = %350.0;
  %353 = %351.0;
  (%352, %353)
}

def @func_11910() -> Tensor[(9, 13, 1), float32] {
  %354 = @func_9118() /* ty=(Tensor[(9, 13, 1), bool], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %355 = %354.0;
  %356 = cast(%355, dtype="float32") /* ty=Tensor[(9, 13, 1), float32] */;
  atanh(%356) /* ty=Tensor[(9, 13, 1), float32] */
}

def @func_12632() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32]) {
  %357 = @func_10324() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %358 = cast(meta[relay.Constant][19] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %359 = cast(meta[relay.Constant][19] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %360 = reshape(%358, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %361 = reshape(%359, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %362 = @func_8006(%360, %361) /* ty=(Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) */;
  %363 = %357.0;
  %364 = @func_12021() /* ty=Tensor[(3, 13, 8), float32] */;
  %365 = %362.0;
  (%363, %364, %365, meta[relay.Constant][19] /* ty=Tensor[(648), int32] */)
}

def @func_4499() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) {
  %366 = cast(meta[relay.Constant][20] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %367 = cast(meta[relay.Constant][21] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %368 = reshape(%366, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %369 = reshape(%367, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %370 = @func_4405(%368, %369) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32]) */;
  %371 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
  %372 = %370.0;
  (%371, %372, meta[relay.Constant][20] /* ty=Tensor[(126), float32] */, meta[relay.Constant][21] /* ty=Tensor[(54), float32] */)
}

def @func_21367() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  %373 = @func_10886() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %374 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %375 = %373.0;
  %376 = %374.0;
  (%375, %376)
}

def @func_15147() -> (Tensor[(3, 13, 8), float32], Tensor[(390), float32], Tensor[(240), float32]) {
  %377 = @func_10976() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %378 = cast(meta[relay.Constant][22] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %379 = reshape(%378, newshape=[8, 30]) /* ty=Tensor[(8, 30), float32] */;
  %380 = @func_12980(%379) /* ty=(Tensor[(54), float32], Tensor[(9, 13, 54), float32], Tensor[(390), float32], Tensor[(8, 30), float32]) */;
  %381 = %377.0;
  %382 = %380.2;
  (%381, %382, meta[relay.Constant][22] /* ty=Tensor[(240), float32] */)
}

def @func_21979() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), float64], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float64]) {
  %383 = @func_14471() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %384 = @func_17510() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), float64]) */;
  %385 = @func_12632() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32]) */;
  %386 = @func_14577() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float64]) */;
  %387 = %383.0;
  %388 = %384.1;
  %389 = %385.0;
  %390 = %386.1;
  (%387, %388, %389, %390)
}

def @func_2486(%var_2466: Tensor[(3, 13, 9), int64], %var_2467: Tensor[(3, 13, 9), int64]) -> (Tensor[(3, 13, 9), int64], Tensor[(3, 13, 9), float32]) {
  %391 = cast(%var_2467, dtype="int64") /* ty=Tensor[(3, 13, 9), int64] */;
  %392 = shape_of(%var_2466, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%var_2466, dtype="int64") /* ty=Tensor[(3, 13, 9), int64] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %395 = cast(%var_2466, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
  %396 = sin(%395) /* ty=Tensor[(3, 13, 9), float32] */;
  %397 = cast(%396, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
  %398 = right_shift(%393, %394) /* ty=Tensor[(3, 13, 9), int64] */;
  %399 = tan(%397) /* ty=Tensor[(3, 13, 9), float32] */;
  (%398, %399)
}

def @func_22219() -> (Tensor[(54), float32], Tensor[(192), float32], Tensor[(240), float32]) {
  %400 = @func_20937() /* ty=(Tensor[(192), float32],) */;
  %401 = @func_15147() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(390), float32], Tensor[(240), float32]) */;
  %402 = @func_5209() /* ty=Tensor[(54), float32] */;
  %403 = %400.0;
  %404 = %401.2;
  (%402, %403, %404)
}

def @func_11476() -> (Tensor[(54), float32],) {
  %405 = @func_8269() /* ty=Tensor[(54), float32] */;
  (%405,)
}

def @func_14674(%var_14625: Tensor[(648), int32], %var_14635: Tensor[(104), float32], %var_14637: Tensor[(54, 16), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32], Tensor[(3, 13, 8), float32], Tensor[(104), float32], Tensor[(54, 16), float64], Tensor[(3, 13, 8), float32], Tensor[(54, 192), uint32]) {
  %406 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %407 = cast(%var_14625, dtype="int32") /* ty=Tensor[(648), int32] */;
  %408 = cast(%var_14625, dtype="int32") /* ty=Tensor[(648), int32] */;
  %409 = reshape(%407, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %410 = reshape(%408, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %411 = @func_8006(%409, %410) /* ty=(Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) */;
  %412 = cast(%var_14635, dtype="float32") /* ty=Tensor[(104), float32] */;
  %413 = reshape(%412, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float32] */;
  %414 = @func_8482(%413) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(126), float32], Tensor[(54, 1), float32], Tensor[(54), float32], Tensor[(4, 13, 2), float64], Tensor[(3, 13, 8), float32]) */;
  %415 = %414.2;
  %416 = cast(%415, dtype="float64") /* ty=Tensor[(54, 1), float64] */;
  %417 = cast(%var_14637, dtype="float64") /* ty=Tensor[(54, 16), float64] */;
  %418 = @func_11216() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %419 = @func_13381() /* ty=(Tensor[(9, 13, 1), bool], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) */;
  %420 = %419.2;
  %421 = cast(%420, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %422 = cast(%415, dtype="uint32") /* ty=Tensor[(54, 1), uint32] */;
  %423 = %406.0;
  %424 = %411.0;
  %425 = @func_9625() /* ty=Tensor[(3, 13, 8), float32] */;
  %426 = floor_mod(%416, %417) /* ty=Tensor[(54, 16), float64] */;
  %427 = %418.0;
  %428 = multiply(%421, %422) /* ty=Tensor[(54, 192), uint32] */;
  (%423, %424, %var_14625, %425, %var_14635, %426, %427, %428)
}

def @func_18108() -> (Tensor[(54), float32],) {
  %429 = @func_16148() /* ty=Tensor[(54), float32] */;
  (%429,)
}

def @func_18587() -> Tensor[(3, 7, 6), float32] {
  %430 = @func_14866() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
  %430.0
}

def @func_18465() -> (Tensor[(3, 13, 8), float32],) {
  %431 = @func_9895() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %432 = %431.1;
  (%432,)
}

def @func_4442(%var_4417: Tensor[(100), int64], %var_4426: Tensor[(320), uint16], %var_4440: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(8, 5, 8), bool], Tensor[(320), uint16], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) {
  %433 = cast(%var_4417, dtype="int64") /* ty=Tensor[(100), int64] */;
  %434 = cast(%var_4417, dtype="int64") /* ty=Tensor[(100), int64] */;
  %435 = reshape(%433, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %436 = reshape(%434, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %437 = @func_1483(%435, %436) /* ty=(Tensor[(2, 5, 10), int64],) */;
  %438 = cast(%var_4426, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %439 = reshape(%438, newshape=[8, 5, 8]) /* ty=Tensor[(8, 5, 8), uint16] */;
  %440 = @func_1991(%439) /* ty=(Tensor[(8, 5, 8), bool],) */;
  %441 = cast(%var_4440, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %442 = reshape(%441, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint8] */;
  %443 = @func_2959(%442) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %444 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
  %445 = %437.0;
  %446 = %440.0;
  %447 = %443.1;
  (%444, %445, %var_4417, %446, %var_4426, %447, %var_4440)
}

def @func_21882() -> (Tensor[(54), float32], Tensor[(54), float32]) {
  %448 = @func_21626() /* ty=Tensor[(54), float32] */;
  %449 = @func_13339() /* ty=Tensor[(54), float32] */;
  (%448, %449)
}

def @func_17911() -> (Tensor[(54), float32],) {
  %450 = @func_5337() /* ty=(Tensor[(54), float32],) */;
  %451 = %450.0;
  (%451,)
}

def @func_21582(%var_21562: Tensor[(240), float32]) -> (Tensor[(8, 8, 3), float32], Tensor[(54), float32], Tensor[(100), int64], Tensor[(4, 16), bool], Tensor[(144), uint8], Tensor[(240), float32]) {
  %452 = @func_16529() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), float64], Tensor[(8, 8, 3), float32]) */;
  %453 = @func_11476() /* ty=(Tensor[(54), float32],) */;
  %454 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 16), bool] */, dtype="bool") /* ty=Tensor[(4, 16), bool] */;
  %455 = cast(meta[relay.Constant][24] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %456 = cast(%var_21562, dtype="float32") /* ty=Tensor[(240), float32] */;
  %457 = reshape(%454, newshape=[64]) /* ty=Tensor[(64), bool] */;
  %458 = reshape(%455, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %459 = reshape(%456, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %460 = @func_10429(%457, %458, %459) /* ty=(Tensor[(54), float32], Tensor[(126), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(672), int8], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(8, 5, 8), bool], Tensor[(240), float32]) */;
  %461 = %452.2;
  %462 = %453.0;
  %463 = %460.8;
  (%461, %462, %463, meta[relay.Constant][23] /* ty=Tensor[(4, 16), bool] */, meta[relay.Constant][24] /* ty=Tensor[(144), uint8] */, %var_21562)
}

def @func_10445() -> Tensor[(9, 13, 1), bool] {
  @func_7407() /* ty=Tensor[(9, 13, 1), bool] */
}

def @func_12021() -> Tensor[(3, 13, 8), float32] {
  @func_10900() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_8006(%var_7959: Tensor[(9, 9, 8), int32], %var_7960: Tensor[(9, 9, 8), int32]) -> (Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) {
  %464 = cast(%var_7960, dtype="bool") /* ty=Tensor[(9, 9, 8), bool] */;
  %465 = shape_of(%var_7959, dtype="int32") /* ty=Tensor[(3), int32] */;
  %466 = cast(%var_7959, dtype="bool") /* ty=Tensor[(9, 9, 8), bool] */;
  %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %468 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %469 = greater_equal(%466, %467) /* ty=Tensor[(9, 9, 8), bool] */;
  %470 = %468.0;
  (%469, %470)
}

def @func_7391() -> (Tensor[(54), float32],) {
  %471 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %472 = %471.1;
  (%472,)
}

def @func_19785() -> (Tensor[(3, 16, 14), float64], Tensor[(3, 13, 8), float32]) {
  %473 = @func_14223() /* ty=(Tensor[(3, 16, 14), float64],) */;
  %474 = %473.0;
  %475 = @func_9069() /* ty=Tensor[(3, 13, 8), float32] */;
  (%474, %475)
}

def @func_17532() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %476 = @func_5772() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %477 = @func_8192() /* ty=Tensor[(3, 13, 8), float32] */;
  %478 = %476.0;
  (%477, %478)
}

def @func_19188(%var_19169: Tensor[(8, 1), int16], %var_19170: Tensor[(240), float32]) -> (Tensor[(3, 16, 14), int8], Tensor[(2, 5, 10), float64], Tensor[(8, 1), int16], Tensor[(240), float32]) {
  %479 = @func_16668() /* ty=(Tensor[(3, 16, 14), int8],) */;
  %480 = cast(%var_19169, dtype="int16") /* ty=Tensor[(8, 1), int16] */;
  %481 = cast(%var_19170, dtype="float32") /* ty=Tensor[(240), float32] */;
  %482 = reshape(%480, newshape=[8]) /* ty=Tensor[(8), int16] */;
  %483 = reshape(%481, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %484 = @func_13686(%482, %483) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), float64], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(160, 2), uint16], Tensor[(240), float32]) */;
  %485 = %479.0;
  %486 = %484.1;
  (%485, %486, %var_19169, %var_19170)
}

def @func_16707(%var_16674: Tensor[(7, 1, 15), float32]) -> (Tensor[(7, 1, 15), float32], Tensor[(9, 13, 1), bool], Tensor[(54), float32], Tensor[(3, 13, 8), float32]) {
  %487 = cast(%var_16674, dtype="float32") /* ty=Tensor[(7, 1, 15), float32] */;
  %488 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %489 = acosh(%487) /* ty=Tensor[(7, 1, 15), float32] */;
  %490 = @func_10747() /* ty=Tensor[(9, 13, 1), bool] */;
  %491 = @func_5209() /* ty=Tensor[(54), float32] */;
  %492 = %488.0;
  (%489, %490, %491, %492)
}

def @func_16995(%var_16897: Tensor[(12), float32]) -> (Tensor[(100), int64], Tensor[(9, 9, 8), bool], Tensor[(648), int32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(648), int32], Tensor[(3, 7, 6), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32], Tensor[(12), float32], Tensor[(132), float32], Tensor[(26, 4), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), float64]) {
  %493 = @func_15120() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(3, 16, 14), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(9, 13, 1), bool]) */;
  %494 = cast(meta[relay.Constant][25] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %495 = cast(meta[relay.Constant][25] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %496 = reshape(%494, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %497 = reshape(%495, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %498 = @func_8006(%496, %497) /* ty=(Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) */;
  %499 = @func_5772() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %500 = @func_12632() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32]) */;
  %501 = @func_5759() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %502 = cast(%var_16897, dtype="float32") /* ty=Tensor[(12), float32] */;
  %503 = cast(meta[relay.Constant][26] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
  %504 = cast(meta[relay.Constant][27] /* ty=Tensor[(26, 4), float32] */, dtype="float32") /* ty=Tensor[(26, 4), float32] */;
  %505 = reshape(%502, newshape=[6, 1, 2]) /* ty=Tensor[(6, 1, 2), float32] */;
  %506 = reshape(%503, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), float32] */;
  %507 = reshape(%504, newshape=[104]) /* ty=Tensor[(104), float32] */;
  %508 = @func_16603(%505, %506, %507) /* ty=(Tensor[(6, 11, 2), float32], Tensor[(3, 13, 8), float32], Tensor[(104), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %509 = @func_10702() /* ty=(Tensor[(3, 16, 14), float64],) */;
  %510 = %493.1;
  %511 = %498.0;
  %512 = %499.0;
  %513 = @func_10900() /* ty=Tensor[(3, 13, 8), float32] */;
  %514 = %500.3;
  %515 = %501.0;
  %516 = @func_12376() /* ty=Tensor[(144), uint8] */;
  %517 = %508.4;
  %518 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
  %519 = %509.0;
  (%510, %511, meta[relay.Constant][25] /* ty=Tensor[(648), int32] */, %512, %513, %514, %515, %516, %517, %var_16897, meta[relay.Constant][26] /* ty=Tensor[(132), float32] */, meta[relay.Constant][27] /* ty=Tensor[(26, 4), float32] */, %518, %519)
}

def @func_8809() -> (Tensor[(54), float32], Tensor[(3, 13, 8), float32]) {
  %520 = @func_5337() /* ty=(Tensor[(54), float32],) */;
  %521 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %522 = %520.0;
  %523 = %521.0;
  (%522, %523)
}

def @func_20026() -> Tensor[(3, 7, 6), float32] {
  %524 = @func_11039() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
  %524.0
}

def @func_4405(%var_4376: Tensor[(3, 7, 6), float32], %var_4382: Tensor[(54), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32]) {
  %525 = cast(%var_4376, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %526 = cast(%var_4382, dtype="float32") /* ty=Tensor[(54), float32] */;
  %527 = reshape(%526, newshape=[2, 9, 3]) /* ty=Tensor[(2, 9, 3), float32] */;
  %528 = @func_664(%527) /* ty=(Tensor[(2, 9, 3), float32],) */;
  %529 = cos(%525) /* ty=Tensor[(3, 7, 6), float32] */;
  %530 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
  %531 = %528.0;
  (%529, %530, %531, %var_4382)
}

def @func_1548(%var_1503: Tensor[(10, 3, 13), float32], %var_1518: Tensor[(240), float32]) -> (Tensor[(10, 3, 13), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(2, 5, 10), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 5, 10), int64], Tensor[(2, 5, 10), int64]) {
  %532 = cast(%var_1503, dtype="float32") /* ty=Tensor[(10, 3, 13), float32] */;
  %533 = cast(meta[relay.Constant][28] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %534 = cast(meta[relay.Constant][28] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %535 = reshape(%533, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %536 = reshape(%534, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %537 = @func_1483(%535, %536) /* ty=(Tensor[(2, 5, 10), int64],) */;
  %538 = %537.0;
  %539 = cast(%538, dtype="int64") /* ty=Tensor[(2, 5, 10), int64] */;
  %540 = cast(%538, dtype="int64") /* ty=Tensor[(2, 5, 10), int64] */;
  %541 = reshape(%539, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %542 = reshape(%540, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %543 = @func_1483(%541, %542) /* ty=(Tensor[(2, 5, 10), int64],) */;
  %544 = cast(%var_1518, dtype="float32") /* ty=Tensor[(240), float32] */;
  %545 = cast(%var_1518, dtype="float32") /* ty=Tensor[(240), float32] */;
  %546 = reshape(%544, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %547 = reshape(%545, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %548 = %543.0;
  %549 = cast(%548, dtype="int64") /* ty=Tensor[(2, 5, 10), int64] */;
  %550 = cast(%548, dtype="int64") /* ty=Tensor[(2, 5, 10), int64] */;
  %551 = reshape(%549, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %552 = reshape(%550, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %553 = @func_1483(%551, %552) /* ty=(Tensor[(2, 5, 10), int64],) */;
  %554 = cast(meta[relay.Constant][28] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %555 = cast(meta[relay.Constant][28] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %556 = reshape(%554, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %557 = reshape(%555, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %558 = @func_1483(%556, %557) /* ty=(Tensor[(2, 5, 10), int64],) */;
  %559 = acos(%532) /* ty=Tensor[(10, 3, 13), float32] */;
  %560 = @func_74(%546, %547) /* ty=Tensor[(2, 15, 8), float32] */;
  %561 = %553.0;
  %562 = %558.0;
  (%559, %538, meta[relay.Constant][28] /* ty=Tensor[(100), int64] */, %548, %560, %var_1518, %561, %562)
}

def @func_19680() -> (Tensor[(54), float32],) {
  %563 = @func_10532() /* ty=(Tensor[(54), float32], Tensor[(126), float32]) */;
  %564 = %563.0;
  (%564,)
}

def @func_17510() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), float64]) {
  %565 = @func_14223() /* ty=(Tensor[(3, 16, 14), float64],) */;
  %566 = @func_13487() /* ty=Tensor[(3, 13, 8), float32] */;
  %567 = %565.0;
  (%566, %567)
}

def @func_5645() -> (Tensor[(54), float32],) {
  %568 = @func_4726() /* ty=Tensor[(54), float32] */;
  (%568,)
}

def @func_13339() -> Tensor[(54), float32] {
  %569 = @func_5645() /* ty=(Tensor[(54), float32],) */;
  %569.0
}

def @func_16007() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %570 = @func_15741() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %571 = %570.0;
  %572 = cast(%571, dtype="bool") /* ty=Tensor[(3, 13, 8), bool] */;
  %573 = reshape(%572, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), bool] */;
  %574 = @func_10299(%573) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), uint64]) */;
  %575 = %574.0;
  (%571, %575)
}

def @func_14071() -> Tensor[(3, 7, 6), float32] {
  %576 = @func_6642() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(54), float32]) */;
  %576.0
}

def @func_10532() -> (Tensor[(54), float32], Tensor[(126), float32]) {
  %577 = @func_8097() /* ty=(Tensor[(54), float32], Tensor[(54), float32]) */;
  %578 = @func_6064() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(100), int64], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32]) */;
  %579 = %577.1;
  %580 = %578.2;
  (%579, %580)
}

def @func_16508(%var_16478: Tensor[(2, 4), int16], %var_16479: Tensor[(64, 1), bool]) -> (Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(5, 126), float64], Tensor[(648), int32], Tensor[(2, 4), int16], Tensor[(64, 1), bool], Tensor[(144), uint8], Tensor[(9, 13, 64), float32]) {
  %581 = @func_9283() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %582 = @func_10648() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), int8], Tensor[(2, 15, 8), float32], Tensor[(126), float32], Tensor[(378, 4), float32]) */;
  %583 = @func_7093() /* ty=(Tensor[(9, 13, 1), bool],) */;
  %584 = %583.0;
  %585 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 126), float64] */, dtype="float64") /* ty=Tensor[(5, 126), float64] */;
  %586 = cast(meta[relay.Constant][30] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
  %587 = cast(%var_16478, dtype="int16") /* ty=Tensor[(2, 4), int16] */;
  %588 = cast(%var_16479, dtype="bool") /* ty=Tensor[(64, 1), bool] */;
  %589 = cast(meta[relay.Constant][31] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %590 = reshape(%585, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), float64] */;
  %591 = reshape(%586, newshape=[648]) /* ty=Tensor[(648), int32] */;
  %592 = reshape(%587, newshape=[8, 1]) /* ty=Tensor[(8, 1), int16] */;
  %593 = reshape(%588, newshape=[64]) /* ty=Tensor[(64), bool] */;
  %594 = reshape(%589, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %595 = @func_9820(%590, %591, %592, %593, %594) /* ty=(Tensor[(9, 7, 10), int16], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32], Tensor[(8, 64), int32], Tensor[(8, 1), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(8, 5, 5), bool], Tensor[(200), bool]) */;
  %596 = %595.6;
  %597 = cast(%584, dtype="float32") /* ty=Tensor[(9, 13, 1), float32] */;
  %598 = cast(%596, dtype="float32") /* ty=Tensor[(64), float32] */;
  %599 = %581.1;
  %600 = %582.1;
  %601 = mod(%597, %598) /* ty=Tensor[(9, 13, 64), float32] */;
  (%599, %600, meta[relay.Constant][29] /* ty=Tensor[(5, 126), float64] */, meta[relay.Constant][30] /* ty=Tensor[(648), int32] */, %var_16478, %var_16479, meta[relay.Constant][31] /* ty=Tensor[(144), uint8] */, %601)
}

def @func_10125() -> (Tensor[(54), float32], Tensor[(3, 7, 6), float32]) {
  %602 = @func_5337() /* ty=(Tensor[(54), float32],) */;
  %603 = @func_7019() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
  %604 = %602.0;
  %605 = %603.0;
  (%604, %605)
}

def @func_19604(%var_19588: Tensor[(7, 10, 9), float32]) -> (Tensor[(7, 10, 9), float32],) {
  %606 = cast(%var_19588, dtype="float32") /* ty=Tensor[(7, 10, 9), float32] */;
  %607 = asin(%606) /* ty=Tensor[(7, 10, 9), float32] */;
  (%607,)
}

def @func_10663() -> (Tensor[(3, 13, 8), float32],) {
  %608 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %609 = %608.0;
  (%609,)
}

def @func_12597() -> (Tensor[(54), float32], Tensor[(3, 7, 6), float32]) {
  %610 = @func_6102() /* ty=(Tensor[(3, 7, 6), float64], Tensor[(54), float32]) */;
  %611 = %610.1;
  %612 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
  (%611, %612)
}

def @func_17314(%var_17267: Tensor[(12), float32], %var_17268: Tensor[(132), float32]) -> (Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8], Tensor[(3, 13, 8), bool], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(12), float32], Tensor[(132), float32], Tensor[(3, 7, 6), float32], Tensor[(1, 648), int32], Tensor[(26, 4), int16], Tensor[(26, 4), bool]) {
  %613 = @func_16668() /* ty=(Tensor[(3, 16, 14), int8],) */;
  %614 = @func_15047() /* ty=Tensor[(3, 13, 8), float64] */;
  %615 = cast(%614, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %616 = reshape(%615, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %617 = @func_4943(%616) /* ty=(Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), bool]) */;
  %618 = cast(%var_17267, dtype="float32") /* ty=Tensor[(12), float32] */;
  %619 = cast(%var_17268, dtype="float32") /* ty=Tensor[(132), float32] */;
  %620 = cast(meta[relay.Constant][32] /* ty=Tensor[(26, 4), float32] */, dtype="float32") /* ty=Tensor[(26, 4), float32] */;
  %621 = reshape(%618, newshape=[6, 1, 2]) /* ty=Tensor[(6, 1, 2), float32] */;
  %622 = reshape(%619, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), float32] */;
  %623 = reshape(%620, newshape=[104]) /* ty=Tensor[(104), float32] */;
  %624 = @func_16603(%621, %622, %623) /* ty=(Tensor[(6, 11, 2), float32], Tensor[(3, 13, 8), float32], Tensor[(104), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %625 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 648), int32] */, dtype="int32") /* ty=Tensor[(1, 648), int32] */;
  %626 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 648), int32] */, dtype="int32") /* ty=Tensor[(1, 648), int32] */;
  %627 = reshape(%625, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %628 = reshape(%626, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %629 = @func_8006(%627, %628) /* ty=(Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) */;
  %630 = cast(meta[relay.Constant][32] /* ty=Tensor[(26, 4), float32] */, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
  %631 = acosh(%630) /* ty=Tensor[(26, 4), float64] */;
  %632 = cast(meta[relay.Constant][32] /* ty=Tensor[(26, 4), float32] */, dtype="int16") /* ty=Tensor[(26, 4), int16] */;
  %633 = shape_of(%631, dtype="int32") /* ty=Tensor[(2), int32] */;
  %634 = cast(%631, dtype="int16") /* ty=Tensor[(26, 4), int16] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %636 = cast(meta[relay.Constant][34] /* ty=Tensor[(26, 4), float64] */, dtype="bool") /* ty=Tensor[(26, 4), bool] */;
  %637 = shape_of(%631, dtype="int32") /* ty=Tensor[(2), int32] */;
  %638 = cast(%631, dtype="bool") /* ty=Tensor[(26, 4), bool] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %640 = %613.0;
  %641 = %617.1;
  %642 = @func_13487() /* ty=Tensor[(3, 13, 8), float32] */;
  %643 = @func_16370() /* ty=Tensor[(3, 7, 6), float32] */;
  %644 = %624.4;
  %645 = %629.1;
  %646 = minimum(%634, %635) /* ty=Tensor[(26, 4), int16] */;
  %647 = less_equal(%638, %639) /* ty=Tensor[(26, 4), bool] */;
  (%614, %640, %641, %642, %643, %644, %var_17267, %var_17268, %645, meta[relay.Constant][33] /* ty=Tensor[(1, 648), int32] */, %646, %647)
}

def @func_20400() -> Tensor[(8, 5, 8), bool] {
  %648 = @func_20156() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(8, 5, 8), bool], Tensor[(320), uint16]) */;
  %648.1
}

def @func_21416() -> (Tensor[(54), float32],) {
  %649 = @func_8269() /* ty=Tensor[(54), float32] */;
  (%649,)
}

def @func_4028(%var_4020: Tensor[(100), int64]) -> (Tensor[(9, ?, 7), bool], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(2, 15, 8), float32], Tensor[(240, 1), float32]) {
  %650 = cast(meta[relay.Constant][35] /* ty=Tensor[(9, 1, 7), float64] */, dtype="float64") /* ty=Tensor[(9, 1, 7), float64] */;
  %651 = atanh(%650) /* ty=Tensor[(9, 1, 7), float64] */;
  %652 = cast(meta[relay.Constant][35] /* ty=Tensor[(9, 1, 7), float64] */, dtype="bool") /* ty=Tensor[(9, 1, 7), bool] */;
  %653 = shape_of(%651, dtype="int32") /* ty=Tensor[(3), int32] */;
  %654 = cast(%651, dtype="bool") /* ty=Tensor[(9, 1, 7), bool] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %656 = cast(%var_4020, dtype="int64") /* ty=Tensor[(100), int64] */;
  %657 = cast(%var_4020, dtype="int64") /* ty=Tensor[(100), int64] */;
  %658 = reshape(%656, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %659 = reshape(%657, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %660 = @func_1483(%658, %659) /* ty=(Tensor[(2, 5, 10), int64],) */;
  %661 = cast(meta[relay.Constant][36] /* ty=Tensor[(240, 1), float32] */, dtype="float32") /* ty=Tensor[(240, 1), float32] */;
  %662 = cast(meta[relay.Constant][36] /* ty=Tensor[(240, 1), float32] */, dtype="float32") /* ty=Tensor[(240, 1), float32] */;
  %663 = reshape(%661, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %664 = reshape(%662, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %665 = greater_equal(%654, %655) /* ty=Tensor[(9, ?, 7), bool] */;
  %666 = %660.0;
  %667 = @func_74(%663, %664) /* ty=Tensor[(2, 15, 8), float32] */;
  (%665, %666, %var_4020, %667, meta[relay.Constant][36] /* ty=Tensor[(240, 1), float32] */)
}

def @func_8482(%var_8431: Tensor[(4, 13, 2), float32]) -> (Tensor[(3, 13, 8), float32], Tensor[(126), float32], Tensor[(54, 1), float32], Tensor[(54), float32], Tensor[(4, 13, 2), float64], Tensor[(3, 13, 8), float32]) {
  %668 = cast(meta[relay.Constant][37] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %669 = cast(meta[relay.Constant][38] /* ty=Tensor[(54, 1), float32] */, dtype="float32") /* ty=Tensor[(54, 1), float32] */;
  %670 = reshape(%668, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %671 = reshape(%669, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %672 = @func_4405(%670, %671) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32]) */;
  %673 = @func_5337() /* ty=(Tensor[(54), float32],) */;
  %674 = cast(%var_8431, dtype="float32") /* ty=Tensor[(4, 13, 2), float32] */;
  %675 = log2(%674) /* ty=Tensor[(4, 13, 2), float32] */;
  %676 = cast(%675, dtype="float64") /* ty=Tensor[(4, 13, 2), float64] */;
  %677 = sqrt(%676) /* ty=Tensor[(4, 13, 2), float64] */;
  %678 = cast(%677, dtype="float64") /* ty=Tensor[(4, 13, 2), float64] */;
  %679 = @func_8035() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %680 = %672.1;
  %681 = %673.0;
  %682 = log10(%678) /* ty=Tensor[(4, 13, 2), float64] */;
  %683 = %679.0;
  (%680, meta[relay.Constant][37] /* ty=Tensor[(126), float32] */, meta[relay.Constant][38] /* ty=Tensor[(54, 1), float32] */, %681, %682, %683)
}

def @func_14223() -> (Tensor[(3, 16, 14), float64],) {
  %684 = @func_10702() /* ty=(Tensor[(3, 16, 14), float64],) */;
  %685 = %684.0;
  (%685,)
}

def @func_7019() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) {
  %686 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %687 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
  %688 = %686.0;
  (%687, %688)
}

def @func_7074() -> (Tensor[(3, 7, 6), float32], Tensor[(2, 15, 8), float32]) {
  %689 = @func_5759() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %690 = @func_6919() /* ty=(Tensor[(2, 15, 8), float32],) */;
  %691 = %689.0;
  %692 = %690.0;
  (%691, %692)
}

def @func_13487() -> Tensor[(3, 13, 8), float32] {
  %693 = @func_11575() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32]) */;
  %693.0
}

def @func_14843() -> Tensor[(3, 13, 8), float32] {
  %694 = @func_9283() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %694.1
}

def @func_21479() -> Tensor[(3, 13, 8), float32] {
  @func_18867() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_15868() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(52, 2), float32], Tensor[(3, 7, 6), float32]) {
  %695 = cast(meta[relay.Constant][39] /* ty=Tensor[(52, 2), float32] */, dtype="float32") /* ty=Tensor[(52, 2), float32] */;
  %696 = reshape(%695, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float32] */;
  %697 = @func_8482(%696) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(126), float32], Tensor[(54, 1), float32], Tensor[(54), float32], Tensor[(4, 13, 2), float64], Tensor[(3, 13, 8), float32]) */;
  %698 = @func_12279() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
  %699 = @func_8192() /* ty=Tensor[(3, 13, 8), float32] */;
  %700 = %697.5;
  %701 = %698.1;
  (%699, %700, meta[relay.Constant][39] /* ty=Tensor[(52, 2), float32] */, %701)
}

def @func_10499() -> (Tensor[(3, 7, 6), float32],) {
  %702 = @func_10125() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32]) */;
  %703 = %702.1;
  (%703,)
}

def @func_14778() -> (Tensor[(54), float32],) {
  %704 = @func_9549() /* ty=(Tensor[(54), float32],) */;
  %705 = %704.0;
  (%705,)
}

def @func_17693() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %706 = @func_12735() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %707 = @func_17120() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %708 = %706.0;
  %709 = %707.0;
  (%708, %709)
}

def @func_14148() -> (Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32]) {
  %710 = @func_8712() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(336, 2), int8]) */;
  %711 = @func_6919() /* ty=(Tensor[(2, 15, 8), float32],) */;
  %712 = %710.1;
  %713 = %711.0;
  (%712, %713)
}

def @func_18965() -> Tensor[(3, 13, 8), float32] {
  @func_13487() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_16148() -> Tensor[(54), float32] {
  @func_4726() /* ty=Tensor[(54), float32] */
}

def @func_11039() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  %714 = @func_10976() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %715 = @func_10324() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %716 = %714.1;
  %717 = %715.0;
  (%716, %717)
}

def @func_16603(%var_16559: Tensor[(6, 1, 2), float32], %var_16560: Tensor[(6, 11, 2), float32], %var_16579: Tensor[(104), float32]) -> (Tensor[(6, 11, 2), float32], Tensor[(3, 13, 8), float32], Tensor[(104), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  %718 = cast(%var_16559, dtype="float32") /* ty=Tensor[(6, 1, 2), float32] */;
  %719 = cast(%var_16560, dtype="float32") /* ty=Tensor[(6, 11, 2), float32] */;
  %720 = cast(%var_16579, dtype="float32") /* ty=Tensor[(104), float32] */;
  %721 = reshape(%720, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float32] */;
  %722 = @func_8482(%721) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(126), float32], Tensor[(54, 1), float32], Tensor[(54), float32], Tensor[(4, 13, 2), float64], Tensor[(3, 13, 8), float32]) */;
  %723 = @func_15752() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %724 = maximum(%718, %719) /* ty=Tensor[(6, 11, 2), float32] */;
  %725 = %722.5;
  %726 = @func_13487() /* ty=Tensor[(3, 13, 8), float32] */;
  %727 = %723.1;
  (%724, %725, %var_16579, %726, %727)
}

def @func_20156() -> (Tensor[(3, 7, 6), float32], Tensor[(8, 5, 8), bool], Tensor[(320), uint16]) {
  %728 = @func_10087() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %729 = cast(meta[relay.Constant][40] /* ty=Tensor[(320), uint16] */, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %730 = reshape(%729, newshape=[8, 5, 8]) /* ty=Tensor[(8, 5, 8), uint16] */;
  %731 = @func_1991(%730) /* ty=(Tensor[(8, 5, 8), bool],) */;
  %732 = %728.0;
  %733 = %731.0;
  (%732, %733, meta[relay.Constant][40] /* ty=Tensor[(320), uint16] */)
}

def @func_8865() -> Tensor[(3, 13, 8), float64] {
  %734 = @func_6064() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(100), int64], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32]) */;
  %734.0
}

def @func_20071() -> Tensor[(3, 13, 8), float32] {
  %735 = @func_18867() /* ty=Tensor[(3, 13, 8), float32] */;
  %736 = cast(%735, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  atan(%736) /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_10274(%var_10254: Tensor[(144), uint8]) -> (Tensor[(54), float32], Tensor[(100), int64], Tensor[(144), uint8]) {
  %737 = @func_7415() /* ty=(Tensor[(54), float32],) */;
  %738 = cast(%var_10254, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %739 = reshape(%738, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint8] */;
  %740 = @func_2959(%739) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %741 = %737.0;
  %742 = %740.2;
  (%741, %742, %var_10254)
}

def @func_17830() -> (Tensor[(144), uint8],) {
  %743 = @func_8290() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) */;
  %744 = %743.1;
  (%744,)
}

def @func_4726() -> Tensor[(54), float32] {
  %745 = @func_4499() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */;
  %745.3
}

def @func_9979() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 216), bool], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) {
  %746 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %747 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 216), int32] */, dtype="int32") /* ty=Tensor[(3, 216), int32] */;
  %748 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 216), int32] */, dtype="int32") /* ty=Tensor[(3, 216), int32] */;
  %749 = reshape(%747, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %750 = reshape(%748, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %751 = @func_8006(%749, %750) /* ty=(Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) */;
  %752 = %751.0;
  %753 = cast(%752, dtype="bool") /* ty=Tensor[(9, 9, 8), bool] */;
  %754 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(3, 216), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %755 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 216), int32] */, dtype="bool") /* ty=Tensor[(3, 216), bool] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %757 = @func_4499() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */;
  %758 = %757.1;
  %759 = cast(%758, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %760 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %761 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
  %762 = %746.0;
  %763 = less_equal(%755, %756) /* ty=Tensor[(3, 216), bool] */;
  %764 = atan(%759) /* ty=Tensor[(3, 7, 6), float32] */;
  %765 = %760.0;
  (%761, %762, %763, %764, %765)
}

def @func_16052(%var_16010: bool, %var_16011: Tensor[(7, 8, 13), bool]) -> (Tensor[(3, 13, 8), float32], Tensor[(7, 8, 13), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  %766 = cast(%var_16010, dtype="bool") /* ty=bool */;
  %767 = cast(%var_16011, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
  %768 = logical_or(%766, %767) /* ty=Tensor[(7, 8, 13), bool] */;
  %769 = cast(%var_16011, dtype="float64") /* ty=Tensor[(7, 8, 13), float64] */;
  %770 = shape_of(%768, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(%768, dtype="float64") /* ty=Tensor[(7, 8, 13), float64] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %773 = @func_12632() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32]) */;
  %774 = @func_14843() /* ty=Tensor[(3, 13, 8), float32] */;
  %775 = mod(%771, %772) /* ty=Tensor[(7, 8, 13), float64] */;
  %776 = @func_9625() /* ty=Tensor[(3, 13, 8), float32] */;
  %777 = %773.1;
  (%774, %775, %776, %777)
}

def @func_18321() -> (Tensor[(54), float32],) {
  %778 = @func_17411() /* ty=Tensor[(54), float32] */;
  (%778,)
}

def @func_13978() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) {
  %779 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %780 = @func_12021() /* ty=Tensor[(3, 13, 8), float32] */;
  %781 = @func_10575() /* ty=Tensor[(3, 13, 8), float32] */;
  %782 = %779.1;
  (%780, %781, %782)
}

def @func_15468() -> (Tensor[(2, 5, 10), int64], Tensor[(3, 13, 8), float32]) {
  %783 = @func_12263() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(2, 5, 10), int64], Tensor[(9, 13, 54), float32]) */;
  %784 = @func_9895() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %785 = %783.2;
  %786 = %784.0;
  (%785, %786)
}

def @func_7246(%var_7176: Tensor[(8, 1), int16], %var_7177: Tensor[(64), bool], %var_7178: Tensor[(100), int64], %var_7179: Tensor[(144), uint8]) -> (Tensor[(54), float32], Tensor[(3, 13, 9), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(2, 5, 10), int64], Tensor[(8, 64), int32]) {
  %787 = @func_5275() /* ty=(Tensor[(54), float32],) */;
  %788 = cast(%var_7176, dtype="int16") /* ty=Tensor[(8, 1), int16] */;
  %789 = cast(%var_7177, dtype="bool") /* ty=Tensor[(64), bool] */;
  %790 = cast(%var_7178, dtype="int64") /* ty=Tensor[(100), int64] */;
  %791 = cast(%var_7179, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %792 = cast(meta[relay.Constant][42] /* ty=Tensor[(351), int64] */, dtype="int64") /* ty=Tensor[(351), int64] */;
  %793 = cast(meta[relay.Constant][43] /* ty=Tensor[(672), int8] */, dtype="int8") /* ty=Tensor[(672), int8] */;
  %794 = reshape(%788, newshape=[8]) /* ty=Tensor[(8), int16] */;
  %795 = reshape(%789, newshape=[1, 64]) /* ty=Tensor[(1, 64), bool] */;
  %796 = reshape(%790, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %797 = reshape(%791, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %798 = reshape(%792, newshape=[351]) /* ty=Tensor[(351), int64] */;
  %799 = reshape(%793, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %800 = @func_6821(%794, %795, %796, %797, %798, %799) /* ty=(Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(8), int16], Tensor[(1, 64), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(120, 2), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), float32], Tensor[(351), int64], Tensor[(3, 16, 14), int8], Tensor[(672), int8], Tensor[(3, 13, 8), float32]) */;
  %801 = cast(%var_7179, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %802 = reshape(%801, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint8] */;
  %803 = @func_2959(%802) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %804 = cast(%var_7177, dtype="float32") /* ty=Tensor[(64), float32] */;
  %805 = cast(%var_7176, dtype="float32") /* ty=Tensor[(8, 1), float32] */;
  %806 = floor_divide(%804, %805) /* ty=Tensor[(8, 64), float32] */;
  %807 = cast(%806, dtype="int32") /* ty=Tensor[(8, 64), int32] */;
  %808 = cast(%var_7177, dtype="int32") /* ty=Tensor[(64), int32] */;
  %809 = %787.0;
  %810 = %800.13;
  %811 = %803.1;
  %812 = minimum(%807, %808) /* ty=Tensor[(8, 64), int32] */;
  (%809, %810, %var_7178, %var_7179, meta[relay.Constant][42] /* ty=Tensor[(351), int64] */, meta[relay.Constant][43] /* ty=Tensor[(672), int8] */, %811, %812)
}

def @func_10648() -> (Tensor[(54), float32], Tensor[(3, 16, 14), int8], Tensor[(2, 15, 8), float32], Tensor[(126), float32], Tensor[(378, 4), float32]) {
  %813 = @func_9648() /* ty=(Tensor[(3, 16, 14), int8],) */;
  %814 = cast(meta[relay.Constant][44] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %815 = cast(meta[relay.Constant][45] /* ty=Tensor[(378, 4), float32] */, dtype="float32") /* ty=Tensor[(378, 4), float32] */;
  %816 = reshape(%814, newshape=[1, 126]) /* ty=Tensor[(1, 126), float32] */;
  %817 = reshape(%815, newshape=[12, 126]) /* ty=Tensor[(12, 126), float32] */;
  %818 = @func_6004(%816, %817) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(12, 126), float64]) */;
  %819 = @func_5209() /* ty=Tensor[(54), float32] */;
  %820 = %813.0;
  %821 = %818.0;
  (%819, %820, %821, meta[relay.Constant][44] /* ty=Tensor[(126), float32] */, meta[relay.Constant][45] /* ty=Tensor[(378, 4), float32] */)
}

def @func_5772() -> (Tensor[(3, 7, 6), float32],) {
  %822 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %823 = %822.0;
  (%823,)
}

def @func_9648() -> (Tensor[(3, 16, 14), int8],) {
  %824 = @func_9213() /* ty=Tensor[(3, 16, 14), int8] */;
  (%824,)
}

def @func_9118() -> (Tensor[(9, 13, 1), bool], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  %825 = @func_6064() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(100), int64], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32]) */;
  %826 = @func_5130() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) */;
  %827 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %828 = @func_7407() /* ty=Tensor[(9, 13, 1), bool] */;
  %829 = %825.0;
  %830 = %826.0;
  %831 = %827.0;
  (%828, %829, %830, %831)
}

def @func_10702() -> (Tensor[(3, 16, 14), float64],) {
  %832 = @func_9213() /* ty=Tensor[(3, 16, 14), int8] */;
  %833 = cast(%832, dtype="float64") /* ty=Tensor[(3, 16, 14), float64] */;
  %834 = asin(%833) /* ty=Tensor[(3, 16, 14), float64] */;
  (%834,)
}

def @func_6004(%var_5988: Tensor[(1, 126), float32], %var_5994: Tensor[(12, 126), float32]) -> (Tensor[(2, 15, 8), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(12, 126), float64]) {
  %835 = @func_5130() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) */;
  %836 = cast(%var_5988, dtype="float32") /* ty=Tensor[(1, 126), float32] */;
  %837 = cast(meta[relay.Constant][46] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %838 = reshape(%836, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %839 = reshape(%837, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %840 = @func_4405(%838, %839) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32]) */;
  %841 = cast(%var_5988, dtype="float64") /* ty=Tensor[(1, 126), float64] */;
  %842 = cast(%var_5994, dtype="float64") /* ty=Tensor[(12, 126), float64] */;
  %843 = %835.5;
  %844 = %840.3;
  %845 = divide(%841, %842) /* ty=Tensor[(12, 126), float64] */;
  (%843, %844, meta[relay.Constant][46] /* ty=Tensor[(54), float32] */, %845)
}

def @func_13381() -> (Tensor[(9, 13, 1), bool], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) {
  %846 = cast(meta[relay.Constant][47] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %847 = reshape(%846, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), float32] */;
  %848 = @func_1608(%847) /* ty=(Tensor[(8, 8, 3), float32],) */;
  %849 = @func_10445() /* ty=Tensor[(9, 13, 1), bool] */;
  %850 = %848.0;
  (%849, %850, meta[relay.Constant][47] /* ty=Tensor[(192), float32] */)
}

def @func_11059() -> (Tensor[(3, 13, 8), float32],) {
  %851 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %852 = %851.0;
  (%852,)
}

def @func_16529() -> (Tensor[(54), float32], Tensor[(3, 16, 14), float64], Tensor[(8, 8, 3), float32]) {
  %853 = @func_10832() /* ty=(Tensor[(3, 16, 14), float64], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %854 = @func_13381() /* ty=(Tensor[(9, 13, 1), bool], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) */;
  %855 = @func_13339() /* ty=Tensor[(54), float32] */;
  %856 = %853.0;
  %857 = %854.1;
  (%855, %856, %857)
}

def @func_8290() -> (Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) {
  %858 = @func_5183() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %859 = @func_6064() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(100), int64], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32]) */;
  %860 = %858.0;
  %861 = %859.3;
  (%860, %861)
}

def @func_9181() -> Tensor[(9, 13, 1), bool] {
  @func_7407() /* ty=Tensor[(9, 13, 1), bool] */
}

def @func_11532() -> (Tensor[(126), float32],) {
  %862 = @func_10648() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), int8], Tensor[(2, 15, 8), float32], Tensor[(126), float32], Tensor[(378, 4), float32]) */;
  %863 = %862.3;
  (%863,)
}

def @func_10995() -> (Tensor[(54), float32],) {
  %864 = @func_5645() /* ty=(Tensor[(54), float32],) */;
  %865 = %864.0;
  (%865,)
}

def @func_12800() -> (Tensor[(3, 13, 8), float32],) {
  %866 = @func_10575() /* ty=Tensor[(3, 13, 8), float32] */;
  (%866,)
}

def @func_13120(%var_13107: Tensor[(240), float32]) -> (Tensor[(54), float32], Tensor[(9, 13, 1), bool], Tensor[(240), float32], Tensor[(9, 13, 312), float32]) {
  %867 = @func_8428() /* ty=(Tensor[(3, 13, 8), bool], Tensor[(2, 9, 3), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float64], Tensor[(3, 7, 6), float64]) */;
  %868 = cast(%var_13107, dtype="float32") /* ty=Tensor[(240), float32] */;
  %869 = reshape(%868, newshape=[24, 10]) /* ty=Tensor[(24, 10), float32] */;
  %870 = @func_7332(%869) /* ty=(Tensor[(24, 10), uint32], Tensor[(8, 5, 8), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(312), float32], Tensor[(2, 9, 3), float32]) */;
  %871 = %870.6;
  %872 = @func_10747() /* ty=Tensor[(9, 13, 1), bool] */;
  %873 = cast(%871, dtype="float32") /* ty=Tensor[(312), float32] */;
  %874 = cast(%872, dtype="float32") /* ty=Tensor[(9, 13, 1), float32] */;
  %875 = %867.2;
  %876 = @func_9181() /* ty=Tensor[(9, 13, 1), bool] */;
  %877 = floor_mod(%873, %874) /* ty=Tensor[(9, 13, 312), float32] */;
  (%875, %876, %var_13107, %877)
}

def @func_14050(%var_14020: Tensor[(72, 2), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(72, 2), uint8], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  %878 = @func_11059() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %879 = %878.0;
  %880 = cast(%879, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %881 = cast(%var_14020, dtype="uint8") /* ty=Tensor[(72, 2), uint8] */;
  %882 = reshape(%880, newshape=[312, 1]) /* ty=Tensor[(312, 1), float32] */;
  %883 = reshape(%881, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %884 = @func_7948(%882, %883) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), uint32], Tensor[(312, 1), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %885 = @func_6311() /* ty=(Tensor[(54), float32],) */;
  %886 = @func_12632() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32]) */;
  %887 = @func_5759() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %888 = %884.1;
  %889 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
  %890 = %885.0;
  %891 = %886.0;
  %892 = %887.0;
  (%879, %888, %var_14020, %889, %890, %891, %892)
}

def @func_20937() -> (Tensor[(192), float32],) {
  %893 = @func_13381() /* ty=(Tensor[(9, 13, 1), bool], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) */;
  %894 = %893.2;
  (%894,)
}

def @func_4943(%var_4931: Tensor[(3, 13, 8), float32]) -> (Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), bool]) {
  %895 = @func_4550() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %896 = %895.0;
  %897 = cast(%var_4931, dtype="uint32") /* ty=Tensor[(3, 13, 8), uint32] */;
  %898 = shape_of(%896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%896, dtype="uint32") /* ty=Tensor[(3, 13, 8), uint32] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %901 = cast(%var_4931, dtype="bool") /* ty=Tensor[(3, 13, 8), bool] */;
  %902 = shape_of(%896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%896, dtype="bool") /* ty=Tensor[(3, 13, 8), bool] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %905 = minimum(%899, %900) /* ty=Tensor[(3, 13, 8), uint32] */;
  %906 = not_equal(%903, %904) /* ty=Tensor[(3, 13, 8), bool] */;
  (%905, %906)
}

def @func_9470() -> (Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) {
  %907 = @func_8097() /* ty=(Tensor[(54), float32], Tensor[(54), float32]) */;
  %908 = @func_9118() /* ty=(Tensor[(9, 13, 1), bool], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %909 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %910 = %907.0;
  %911 = %908.1;
  %912 = %909.0;
  (%910, %911, %912)
}

def @func_18630() -> (Tensor[(3, 7, 6), float32],) {
  %913 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %914 = %913.0;
  (%914,)
}

def @func_11216() -> (Tensor[(3, 13, 8), float32],) {
  %915 = @func_7019() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
  %916 = %915.1;
  (%916,)
}

def @func_21343(%var_21328: Tensor[(4, 12, 10), int64]) -> (Tensor[(4, 12, 10), bool],) {
  %917 = cast(%var_21328, dtype="bool") /* ty=Tensor[(4, 12, 10), bool] */;
  %918 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(4, 12, 10), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(meta[relay.Constant][48] /* ty=Tensor[(4, 12, 10), int64] */, dtype="bool") /* ty=Tensor[(4, 12, 10), bool] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %921 = less_equal(%919, %920) /* ty=Tensor[(4, 12, 10), bool] */;
  (%921,)
}

def @func_8428() -> (Tensor[(3, 13, 8), bool], Tensor[(2, 9, 3), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float64], Tensor[(3, 7, 6), float64]) {
  %922 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
  %923 = cast(%922, dtype="float64") /* ty=Tensor[(3, 13, 8), float64] */;
  %924 = sigmoid(%923) /* ty=Tensor[(3, 13, 8), float64] */;
  %925 = @func_8290() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) */;
  %926 = %925.0;
  %927 = cast(%926, dtype="bool") /* ty=Tensor[(3, 13, 8), bool] */;
  %928 = shape_of(%924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(%924, dtype="bool") /* ty=Tensor[(3, 13, 8), bool] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %931 = cast(meta[relay.Constant][49] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %932 = reshape(%931, newshape=[2, 9, 3]) /* ty=Tensor[(2, 9, 3), float32] */;
  %933 = @func_664(%932) /* ty=(Tensor[(2, 9, 3), float32],) */;
  %934 = @func_4499() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */;
  %935 = %934.1;
  %936 = cast(%935, dtype="float64") /* ty=Tensor[(3, 7, 6), float64] */;
  %937 = @func_5759() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %938 = %937.0;
  %939 = cast(%938, dtype="float64") /* ty=Tensor[(3, 7, 6), float64] */;
  %940 = logical_and(%929, %930) /* ty=Tensor[(3, 13, 8), bool] */;
  %941 = %933.0;
  %942 = rsqrt(%936) /* ty=Tensor[(3, 7, 6), float64] */;
  %943 = atanh(%939) /* ty=Tensor[(3, 7, 6), float64] */;
  (%940, %941, meta[relay.Constant][49] /* ty=Tensor[(54), float32] */, %942, %943)
}

def @func_15752() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  %944 = @func_11059() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %945 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %946 = %944.0;
  %947 = %945.0;
  (%946, %947)
}

def @func_5130() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) {
  %948 = @func_4499() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */;
  %949 = %948.0;
  %950 = cast(%949, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %951 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %952 = cast(meta[relay.Constant][50] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
  %953 = cast(meta[relay.Constant][51] /* ty=Tensor[(24, 10), float32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
  %954 = reshape(%952, newshape=[10, 3, 13]) /* ty=Tensor[(10, 3, 13), float32] */;
  %955 = reshape(%953, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %956 = @func_1548(%954, %955) /* ty=(Tensor[(10, 3, 13), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(2, 5, 10), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 5, 10), int64], Tensor[(2, 5, 10), int64]) */;
  %957 = cast(meta[relay.Constant][51] /* ty=Tensor[(24, 10), float32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
  %958 = cast(meta[relay.Constant][51] /* ty=Tensor[(24, 10), float32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
  %959 = reshape(%957, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %960 = reshape(%958, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %961 = acos(%950) /* ty=Tensor[(3, 13, 8), float32] */;
  %962 = %951.0;
  %963 = %956.3;
  %964 = @func_74(%959, %960) /* ty=Tensor[(2, 15, 8), float32] */;
  (%961, %962, %963, meta[relay.Constant][50] /* ty=Tensor[(390), float32] */, meta[relay.Constant][51] /* ty=Tensor[(24, 10), float32] */, %964)
}

def @func_15494(%var_15473: Tensor[(5, 13, 6), float32]) -> (Tensor[(5, 13, 6), float32],) {
  %965 = cast(%var_15473, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %966 = erf(%965) /* ty=Tensor[(5, 13, 6), float32] */;
  (%966,)
}

def @func_16103(%var_16090: Tensor[(8), int16], %var_16091: Tensor[(64), bool], %var_16093: Tensor[(1, 144), uint8], %var_16095: Tensor[(672), int8]) -> (Tensor[(3, 13, 8), float32], Tensor[(144), uint8], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(1, 144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(3, 16, 14), float64]) {
  %967 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %968 = cast(%var_16090, dtype="int16") /* ty=Tensor[(8), int16] */;
  %969 = cast(%var_16091, dtype="bool") /* ty=Tensor[(64), bool] */;
  %970 = cast(meta[relay.Constant][52] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %971 = cast(%var_16093, dtype="uint8") /* ty=Tensor[(1, 144), uint8] */;
  %972 = cast(meta[relay.Constant][53] /* ty=Tensor[(351), int64] */, dtype="int64") /* ty=Tensor[(351), int64] */;
  %973 = cast(%var_16095, dtype="int8") /* ty=Tensor[(672), int8] */;
  %974 = reshape(%968, newshape=[8]) /* ty=Tensor[(8), int16] */;
  %975 = reshape(%969, newshape=[1, 64]) /* ty=Tensor[(1, 64), bool] */;
  %976 = reshape(%970, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %977 = reshape(%971, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %978 = reshape(%972, newshape=[351]) /* ty=Tensor[(351), int64] */;
  %979 = reshape(%973, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %980 = @func_6821(%974, %975, %976, %977, %978, %979) /* ty=(Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(8), int16], Tensor[(1, 64), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(120, 2), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), float32], Tensor[(351), int64], Tensor[(3, 16, 14), int8], Tensor[(672), int8], Tensor[(3, 13, 8), float32]) */;
  %981 = @func_10702() /* ty=(Tensor[(3, 16, 14), float64],) */;
  %982 = %967.0;
  %983 = %980.11;
  %984 = %981.0;
  (%982, %983, %var_16090, %var_16091, meta[relay.Constant][52] /* ty=Tensor[(100), int64] */, %var_16093, meta[relay.Constant][53] /* ty=Tensor[(351), int64] */, %var_16095, %984)
}

def @func_10429(%var_10416: Tensor[(64), bool], %var_10418: Tensor[(144), uint8], %var_10423: Tensor[(240), float32]) -> (Tensor[(54), float32], Tensor[(126), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(672), int8], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(8, 5, 8), bool], Tensor[(240), float32]) {
  %985 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %986 = @func_6975() /* ty=Tensor[(126), float32] */;
  %987 = cast(%986, dtype="float32") /* ty=Tensor[(126), float32] */;
  %988 = reshape(%987, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %989 = @func_5015(%988) /* ty=(Tensor[(3, 7, 6), int64], Tensor[(3, 13, 8), float32]) */;
  %990 = %989.1;
  %991 = cast(%990, dtype="bool") /* ty=Tensor[(3, 13, 8), bool] */;
  %992 = reshape(%991, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), bool] */;
  %993 = @func_10299(%992) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), uint64]) */;
  %994 = @func_10125() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32]) */;
  %995 = cast(meta[relay.Constant][54] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
  %996 = cast(%var_10416, dtype="bool") /* ty=Tensor[(64), bool] */;
  %997 = cast(meta[relay.Constant][55] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %998 = cast(%var_10418, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %999 = reshape(%995, newshape=[8, 1]) /* ty=Tensor[(8, 1), int16] */;
  %1000 = reshape(%996, newshape=[64]) /* ty=Tensor[(64), bool] */;
  %1001 = reshape(%997, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %1002 = reshape(%998, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1003 = @func_7246(%999, %1000, %1001, %1002) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 9), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(2, 5, 10), int64], Tensor[(8, 64), int32]) */;
  %1004 = cast(%var_10423, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1005 = reshape(%1004, newshape=[24, 10]) /* ty=Tensor[(24, 10), float32] */;
  %1006 = @func_7332(%1005) /* ty=(Tensor[(24, 10), uint32], Tensor[(8, 5, 8), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(312), float32], Tensor[(2, 9, 3), float32]) */;
  %1007 = %985.1;
  %1008 = %993.0;
  %1009 = %994.1;
  %1010 = %1003.5;
  %1011 = %1006.1;
  (%1007, %986, %990, %1008, %1009, %1010, meta[relay.Constant][54] /* ty=Tensor[(8), int16] */, %var_10416, meta[relay.Constant][55] /* ty=Tensor[(100), int64] */, %var_10418, %1011, %var_10423)
}

def @func_5828() -> (Tensor[(3, 7, 6), float32],) {
  %1012 = @func_5759() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1013 = %1012.0;
  (%1013,)
}

def @func_8712() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(336, 2), int8]) {
  %1014 = @func_5772() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1015 = %1014.0;
  %1016 = cast(%1015, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %1017 = reshape(%1016, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %1018 = @func_5015(%1017) /* ty=(Tensor[(3, 7, 6), int64], Tensor[(3, 13, 8), float32]) */;
  %1019 = cast(meta[relay.Constant][56] /* ty=Tensor[(336, 2), int8] */, dtype="int8") /* ty=Tensor[(336, 2), int8] */;
  %1020 = reshape(%1019, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %1021 = @func_7378(%1020) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), int8], Tensor[(672), int8]) */;
  %1022 = %1018.1;
  %1023 = %1021.1;
  (%1015, %1022, %1023, meta[relay.Constant][56] /* ty=Tensor[(336, 2), int8] */)
}

def @func_10324() -> (Tensor[(3, 7, 6), float32],) {
  %1024 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1025 = %1024.0;
  (%1025,)
}

def @func_19275() -> (Tensor[(54), float32],) {
  %1026 = @func_9470() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) */;
  %1027 = %1026.0;
  (%1027,)
}

def @func_20321() -> Tensor[(3, 7, 6), float32] {
  %1028 = @func_13911() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
  %1028.1
}

def @func_20719(%var_20706: Tensor[(10, 8, 4), float64]) -> (Tensor[(10, 8, 4), float64],) {
  %1029 = cast(%var_20706, dtype="float64") /* ty=Tensor[(10, 8, 4), float64] */;
  %1030 = log10(%1029) /* ty=Tensor[(10, 8, 4), float64] */;
  (%1030,)
}

def @func_10575() -> Tensor[(3, 13, 8), float32] {
  %1031 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1031.0
}

def @func_8192() -> Tensor[(3, 13, 8), float32] {
  @func_7510() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_17977() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %1032 = @func_15868() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(52, 2), float32], Tensor[(3, 7, 6), float32]) */;
  %1033 = %1032.1;
  %1034 = cast(%1033, dtype="bool") /* ty=Tensor[(3, 13, 8), bool] */;
  %1035 = reshape(%1034, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), bool] */;
  %1036 = @func_10299(%1035) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), uint64]) */;
  %1037 = %1036.0;
  (%1033, %1037)
}

def @func_8269() -> Tensor[(54), float32] {
  @func_4726() /* ty=Tensor[(54), float32] */
}

def @func_5677(%var_5665: Tensor[(3, 13, 8), float32]) -> (Tensor[(3, 13, 8), uint32],) {
  %1038 = @func_5183() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1039 = %1038.0;
  %1040 = cast(%var_5665, dtype="uint32") /* ty=Tensor[(3, 13, 8), uint32] */;
  %1041 = shape_of(%1039, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1042 = cast(%1039, dtype="uint32") /* ty=Tensor[(3, 13, 8), uint32] */;
  %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1044 = subtract(%1042, %1043) /* ty=Tensor[(3, 13, 8), uint32] */;
  (%1044,)
}

def @func_11816() -> (Tensor[(3, 7, 6), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) {
  %1045 = @func_7074() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 15, 8), float32]) */;
  %1046 = @func_7756() /* ty=(Tensor[(54), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float64]) */;
  %1047 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1048 = %1047.0;
  %1049 = cast(%1048, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %1050 = @func_10995() /* ty=(Tensor[(54), float32],) */;
  %1051 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
  %1052 = cast(%1051, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %1053 = reshape(%1052, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %1054 = @func_10225(%1053) /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) */;
  %1055 = %1045.0;
  %1056 = %1046.4;
  %1057 = cosh(%1049) /* ty=Tensor[(3, 7, 6), float32] */;
  %1058 = %1050.0;
  %1059 = %1054.3;
  (%1055, %1056, %1057, %1058, %1051, %1059)
}

def @func_15962() -> (Tensor[(54), float32],) {
  %1060 = @func_5275() /* ty=(Tensor[(54), float32],) */;
  %1061 = %1060.0;
  (%1061,)
}

def @func_18120() -> Tensor[(3, 13, 8), float32] {
  %1062 = @func_8035() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1062.0
}

def @func_12880() -> (Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8]) {
  %1063 = @func_12263() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(2, 5, 10), int64], Tensor[(9, 13, 54), float32]) */;
  %1064 = @func_8712() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(336, 2), int8]) */;
  %1065 = %1063.1;
  %1066 = %1064.2;
  (%1065, %1066)
}

def @func_10832() -> (Tensor[(3, 16, 14), float64], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) {
  %1067 = @func_10702() /* ty=(Tensor[(3, 16, 14), float64],) */;
  %1068 = cast(meta[relay.Constant][57] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %1069 = cast(meta[relay.Constant][57] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %1070 = reshape(%1068, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %1071 = reshape(%1069, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %1072 = @func_1483(%1070, %1071) /* ty=(Tensor[(2, 5, 10), int64],) */;
  %1073 = %1067.0;
  %1074 = %1072.0;
  (%1073, %1074, meta[relay.Constant][57] /* ty=Tensor[(100), int64] */)
}

def @func_17120() -> (Tensor[(3, 7, 6), float32],) {
  %1075 = @func_14471() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1076 = %1075.0;
  (%1076,)
}

def @func_13686(%var_13680: Tensor[(8), int16], %var_13684: Tensor[(240), float32]) -> (Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), float64], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(160, 2), uint16], Tensor[(240), float32]) {
  %1077 = @func_11502() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(126), float32]) */;
  %1078 = cast(%var_13680, dtype="int16") /* ty=Tensor[(8), int16] */;
  %1079 = cast(%var_13680, dtype="int16") /* ty=Tensor[(8), int16] */;
  %1080 = cast(meta[relay.Constant][58] /* ty=Tensor[(64), bool] */, dtype="bool") /* ty=Tensor[(64), bool] */;
  %1081 = cast(meta[relay.Constant][59] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %1082 = cast(meta[relay.Constant][60] /* ty=Tensor[(160, 2), uint16] */, dtype="uint16") /* ty=Tensor[(160, 2), uint16] */;
  %1083 = cast(%var_13684, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1084 = reshape(%1078, newshape=[1, 2, 4]) /* ty=Tensor[(1, 2, 4), int16] */;
  %1085 = reshape(%1079, newshape=[1, 2, 4]) /* ty=Tensor[(1, 2, 4), int16] */;
  %1086 = reshape(%1080, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), bool] */;
  %1087 = reshape(%1081, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %1088 = reshape(%1082, newshape=[320]) /* ty=Tensor[(320), uint16] */;
  %1089 = reshape(%1083, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %1090 = @func_5437(%1084, %1085, %1086, %1087, %1088, %1089) /* ty=(Tensor[(8, 2, 4), int64], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(2, 5, 10), float64], Tensor[(100), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32]) */;
  %1091 = %1077.0;
  %1092 = %1090.4;
  (%1091, %1092, %var_13680, meta[relay.Constant][58] /* ty=Tensor[(64), bool] */, meta[relay.Constant][59] /* ty=Tensor[(100), int64] */, meta[relay.Constant][60] /* ty=Tensor[(160, 2), uint16] */, %var_13684)
}

def @func_11918() -> Tensor[(3, 13, 8), uint32] {
  %1093 = @func_11575() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32]) */;
  %1093.1
}

def @func_18489() -> Tensor[(54), float32] {
  %1094 = @func_12299() /* ty=(Tensor[(54), float32],) */;
  %1094.0
}

def @func_14367() -> (Tensor[(54), float32], Tensor[(9, 13, 1), bool]) {
  %1095 = @func_9549() /* ty=(Tensor[(54), float32],) */;
  %1096 = %1095.0;
  %1097 = @func_7407() /* ty=Tensor[(9, 13, 1), bool] */;
  (%1096, %1097)
}

def @func_21626() -> Tensor[(54), float32] {
  %1098 = @func_15962() /* ty=(Tensor[(54), float32],) */;
  %1098.0
}

def @func_19058() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  %1099 = @func_10324() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1100 = @func_14471() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1101 = %1099.0;
  %1102 = %1100.0;
  (%1101, %1102)
}

def @func_9549() -> (Tensor[(54), float32],) {
  %1103 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %1104 = %1103.1;
  (%1104,)
}

def @func_5183() -> (Tensor[(3, 13, 8), float32],) {
  %1105 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1106 = %1105.0;
  (%1106,)
}

def @func_5759() -> (Tensor[(3, 7, 6), float32],) {
  %1107 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1108 = %1107.0;
  (%1108,)
}

def @func_7407() -> Tensor[(9, 13, 1), bool] {
  %1109 = @func_7093() /* ty=(Tensor[(9, 13, 1), bool],) */;
  %1109.0
}

def @func_16409(%var_16390: Tensor[(100), int64], %var_16392: Tensor[(144), uint8], %var_16407: Tensor[(728), bool]) -> (Tensor[(3, 7, 6), float32], Tensor[(144), uint8], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(312), float32], Tensor[(3, 13, 8), float32], bool, Tensor[(728), bool]) {
  %1110 = cast(%var_16390, dtype="int64") /* ty=Tensor[(100), int64] */;
  %1111 = cast(meta[relay.Constant][61] /* ty=Tensor[(320), uint16] */, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %1112 = cast(%var_16392, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1113 = reshape(%1110, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %1114 = reshape(%1111, newshape=[320]) /* ty=Tensor[(320), uint16] */;
  %1115 = reshape(%1112, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1116 = @func_4442(%1113, %1114, %1115) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(8, 5, 8), bool], Tensor[(320), uint16], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %1117 = cast(meta[relay.Constant][62] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %1118 = cast(%var_16392, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1119 = reshape(%1117, newshape=[312, 1]) /* ty=Tensor[(312, 1), float32] */;
  %1120 = reshape(%1118, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1121 = @func_7948(%1119, %1120) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), uint32], Tensor[(312, 1), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %1122 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1123 = cast(%var_16407, dtype="bool") /* ty=Tensor[(728), bool] */;
  %1124 = reshape(%1122, newshape=[]) /* ty=bool */;
  %1125 = reshape(%1123, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), bool] */;
  %1126 = @func_16052(%1124, %1125) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(7, 8, 13), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %1127 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
  %1128 = %1116.6;
  %1129 = %1121.0;
  %1130 = %1126.2;
  (%1127, %1128, %var_16390, meta[relay.Constant][61] /* ty=Tensor[(320), uint16] */, %var_16392, %1129, meta[relay.Constant][62] /* ty=Tensor[(312), float32] */, %1130, False /* ty=bool */, %var_16407)
}

def @func_18276() -> (Tensor[(3, 7, 6), float32],) {
  %1131 = @func_7664() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), bool]) */;
  %1132 = %1131.2;
  (%1132,)
}

def @func_21916() -> (Tensor[(3, 7, 6), float32],) {
  %1133 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
  (%1133,)
}

def @func_11338(%var_11333: Tensor[(126), float32]) -> (Tensor[(144), uint8], Tensor[(100), int64], Tensor[(126), float32]) {
  %1134 = @func_8290() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) */;
  %1135 = cast(%var_11333, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1136 = %1134.1;
  %1137 = cast(%1136, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1138 = reshape(%1135, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %1139 = reshape(%1137, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1140 = @func_5909(%1138, %1139) /* ty=(Tensor[(3, 7, 6), int16], Tensor[(100), int64], Tensor[(144), uint8]) */;
  %1141 = %1140.1;
  (%1136, %1141, %var_11333)
}

def @func_16668() -> (Tensor[(3, 16, 14), int8],) {
  %1142 = @func_9648() /* ty=(Tensor[(3, 16, 14), int8],) */;
  %1143 = %1142.0;
  (%1143,)
}

def @func_74(%var_65: Tensor[(2, 15, 8), float32], %var_66: Tensor[(2, 15, 8), float32]) -> Tensor[(2, 15, 8), float32] {
  %1144 = cast(%var_66, dtype="float32") /* ty=Tensor[(2, 15, 8), float32] */;
  %1145 = shape_of(%var_65, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1146 = cast(%var_65, dtype="float32") /* ty=Tensor[(2, 15, 8), float32] */;
  %1147 = dyn.reshape(%1144, %1145, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%1146, %1147) /* ty=Tensor[(2, 15, 8), float32] */
}

def @func_20797(%var_20795: Tensor[(312), float32]) -> (Tensor[(3, 16, 14), float64], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) {
  %1148 = @func_14419() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), float64]) */;
  %1149 = cast(%var_20795, dtype="float32") /* ty=Tensor[(312), float32] */;
  %1150 = reshape(%1149, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %1151 = @func_6598(%1150) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float32]) */;
  %1152 = %1148.1;
  %1153 = %1151.1;
  (%1152, %1153, %var_20795)
}

def @func_21258(%var_21203: Tensor[(16, 15, 16), float32], %var_21252: Tensor[(16, 15, 16), float32]) -> (Tensor[(2, 5, 10), int64], Tensor[(3, 13, 8), float32], Tensor[(3, 216), bool], Tensor[(3, 13, 8), float64], Tensor[(16, 15, 16), int16]) {
  %1154 = @func_14252() /* ty=(Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %1155 = @func_11575() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32]) */;
  %1156 = @func_9979() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 216), bool], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
  %1157 = cast(%var_21203, dtype="float32") /* ty=Tensor[(16, 15, 16), float32] */;
  %1158 = exp(%1157) /* ty=Tensor[(16, 15, 16), float32] */;
  %1159 = cast(%var_21252, dtype="int16") /* ty=Tensor[(16, 15, 16), int16] */;
  %1160 = shape_of(%1158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1161 = cast(%1158, dtype="int16") /* ty=Tensor[(16, 15, 16), int16] */;
  %1162 = dyn.reshape(%1159, %1160, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1163 = %1154.0;
  %1164 = %1155.0;
  %1165 = %1156.2;
  %1166 = @func_15047() /* ty=Tensor[(3, 13, 8), float64] */;
  %1167 = logical_xor(%1161, %1162) /* ty=Tensor[(16, 15, 16), int16] */;
  (%1163, %1164, %1165, %1166, %1167)
}

def @func_19739() -> (Tensor[(3, 13, 8), float32],) {
  %1168 = @func_17532() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %1169 = %1168.0;
  (%1169,)
}

def @func_18016() -> (Tensor[(54), float32],) {
  %1170 = @func_17411() /* ty=Tensor[(54), float32] */;
  (%1170,)
}

def @func_7093() -> (Tensor[(9, 13, 1), bool],) {
  %1171 = cast(meta[relay.Constant][63] /* ty=uint32 */, dtype="bool") /* ty=bool */;
  %1172 = cast(meta[relay.Constant][64] /* ty=Tensor[(9, 13, 1), uint32] */, dtype="bool") /* ty=Tensor[(9, 13, 1), bool] */;
  %1173 = equal(%1171, %1172) /* ty=Tensor[(9, 13, 1), bool] */;
  (%1173,)
}

def @func_17779() -> (Tensor[(54), float32], Tensor[(9, 13, 54), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) {
  %1174 = @func_6311() /* ty=(Tensor[(54), float32],) */;
  %1175 = @func_12263() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(2, 5, 10), int64], Tensor[(9, 13, 54), float32]) */;
  %1176 = %1174.0;
  %1177 = %1175.3;
  %1178 = @func_11552() /* ty=Tensor[(3, 13, 8), float32] */;
  %1179 = @func_10445() /* ty=Tensor[(9, 13, 1), bool] */;
  (%1176, %1177, %1178, %1179)
}

def @func_20547() -> Tensor[(3, 13, 8), float32] {
  @func_7564() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_10900() -> Tensor[(3, 13, 8), float32] {
  %1180 = @func_9895() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %1180.0
}

def @func_5909(%var_5890: Tensor[(3, 7, 6), float32], %var_5906: Tensor[(144), uint8]) -> (Tensor[(3, 7, 6), int16], Tensor[(100), int64], Tensor[(144), uint8]) {
  %1181 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1182 = %1181.0;
  %1183 = cast(%var_5890, dtype="int16") /* ty=Tensor[(3, 7, 6), int16] */;
  %1184 = shape_of(%1182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1185 = cast(%1182, dtype="int16") /* ty=Tensor[(3, 7, 6), int16] */;
  %1186 = dyn.reshape(%1183, %1184, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1187 = cast(%var_5906, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1188 = reshape(%1187, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint8] */;
  %1189 = @func_2959(%1188) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %1190 = right_shift(%1185, %1186) /* ty=Tensor[(3, 7, 6), int16] */;
  %1191 = %1189.2;
  (%1190, %1191, %var_5906)
}

def @func_19474(%var_19451: Tensor[(1512), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 7, 6), float64], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32], Tensor[(1512), float32], Tensor[(3, 13, 8), float32]) {
  %1192 = @func_18796() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(54), float32]) */;
  %1193 = @func_9895() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %1194 = @func_12880() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8]) */;
  %1195 = @func_14577() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float64]) */;
  %1196 = @func_19122() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1197 = @func_8809() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float32]) */;
  %1198 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1199 = @func_7664() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), bool]) */;
  %1200 = %1198.0;
  %1201 = cast(%1200, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %1202 = cast(%var_19451, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %1203 = reshape(%1201, newshape=[1, 126]) /* ty=Tensor[(1, 126), float32] */;
  %1204 = reshape(%1202, newshape=[12, 126]) /* ty=Tensor[(12, 126), float32] */;
  %1205 = @func_6004(%1203, %1204) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(12, 126), float64]) */;
  %1206 = @func_15398() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1207 = %1192.0;
  %1208 = %1193.0;
  %1209 = %1194.0;
  %1210 = %1195.1;
  %1211 = %1196.0;
  %1212 = %1197.0;
  %1213 = %1199.3;
  %1214 = %1205.0;
  %1215 = %1206.0;
  (%1207, %1208, %1209, %1210, %1211, %1212, %1200, %1213, %1214, %var_19451, %1215)
}

def @func_7415() -> (Tensor[(54), float32],) {
  %1216 = @func_5275() /* ty=(Tensor[(54), float32],) */;
  %1217 = %1216.0;
  (%1217,)
}

def @func_6642() -> (Tensor[(3, 7, 6), float32], Tensor[(54), float32]) {
  %1218 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1219 = %1218.0;
  %1220 = @func_5209() /* ty=Tensor[(54), float32] */;
  (%1219, %1220)
}

def @func_4647() -> (Tensor[(3, 7, 6), float32],) {
  %1221 = @func_4499() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */;
  %1222 = %1221.1;
  (%1222,)
}

def @func_18383() -> (Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) {
  %1223 = @func_10663() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1224 = %1223.0;
  %1225 = @func_10445() /* ty=Tensor[(9, 13, 1), bool] */;
  (%1224, %1225)
}

def @func_17411() -> Tensor[(54), float32] {
  %1226 = @func_7415() /* ty=(Tensor[(54), float32],) */;
  %1226.0
}

def @func_13911() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  %1227 = @func_6642() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(54), float32]) */;
  %1228 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1229 = %1227.0;
  %1230 = %1228.0;
  (%1229, %1230)
}

def @func_9820(%var_9747: Tensor[(9, 7, 10), float64], %var_9770: Tensor[(648), int32], %var_9773: Tensor[(8, 1), int16], %var_9774: Tensor[(64), bool], %var_9776: Tensor[(144), uint8]) -> (Tensor[(9, 7, 10), int16], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32], Tensor[(8, 64), int32], Tensor[(8, 1), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(8, 5, 5), bool], Tensor[(200), bool]) {
  %1231 = cast(%var_9747, dtype="float64") /* ty=Tensor[(9, 7, 10), float64] */;
  %1232 = atan(%1231) /* ty=Tensor[(9, 7, 10), float64] */;
  %1233 = cast(%var_9747, dtype="int16") /* ty=Tensor[(9, 7, 10), int16] */;
  %1234 = shape_of(%1232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1235 = cast(%1232, dtype="int16") /* ty=Tensor[(9, 7, 10), int16] */;
  %1236 = dyn.reshape(%1233, %1234, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1237 = @func_7019() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
  %1238 = cast(%var_9770, dtype="int32") /* ty=Tensor[(648), int32] */;
  %1239 = cast(%var_9770, dtype="int32") /* ty=Tensor[(648), int32] */;
  %1240 = reshape(%1238, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %1241 = reshape(%1239, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %1242 = @func_8006(%1240, %1241) /* ty=(Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) */;
  %1243 = cast(%var_9773, dtype="int16") /* ty=Tensor[(8, 1), int16] */;
  %1244 = cast(%var_9774, dtype="bool") /* ty=Tensor[(64), bool] */;
  %1245 = cast(meta[relay.Constant][65] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %1246 = cast(%var_9776, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1247 = reshape(%1243, newshape=[8, 1]) /* ty=Tensor[(8, 1), int16] */;
  %1248 = reshape(%1244, newshape=[64]) /* ty=Tensor[(64), bool] */;
  %1249 = reshape(%1245, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %1250 = reshape(%1246, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1251 = @func_7246(%1247, %1248, %1249, %1250) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 9), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(2, 5, 10), int64], Tensor[(8, 64), int32]) */;
  %1252 = @func_9283() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %1253 = cast(meta[relay.Constant][66] /* ty=Tensor[(200), bool] */, dtype="bool") /* ty=Tensor[(200), bool] */;
  %1254 = reshape(%1253, newshape=[8, 5, 5]) /* ty=Tensor[(8, 5, 5), bool] */;
  %1255 = bitwise_and(%1235, %1236) /* ty=Tensor[(9, 7, 10), int16] */;
  %1256 = %1237.1;
  %1257 = %1242.0;
  %1258 = %1251.7;
  %1259 = %1252.2;
  %1260 = @func_9625() /* ty=Tensor[(3, 13, 8), float32] */;
  %1261 = @func_3306(%1254) /* ty=Tensor[(8, 5, 5), bool] */;
  (%1255, %1256, %1257, %var_9770, %1258, %var_9773, %var_9774, meta[relay.Constant][65] /* ty=Tensor[(100), int64] */, %var_9776, %1259, %1260, %1261, meta[relay.Constant][66] /* ty=Tensor[(200), bool] */)
}

def @func_9585() -> Tensor[(3, 7, 6), float32] {
  %1262 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1262.0
}

def @func_21313() -> (Tensor[(54), float32],) {
  %1263 = @func_15033() /* ty=Tensor[(54), float32] */;
  (%1263,)
}

def @func_8097() -> (Tensor[(54), float32], Tensor[(54), float32]) {
  %1264 = @func_6311() /* ty=(Tensor[(54), float32],) */;
  %1265 = @func_5275() /* ty=(Tensor[(54), float32],) */;
  %1266 = %1264.0;
  %1267 = %1265.0;
  (%1266, %1267)
}

def @func_5047() -> (Tensor[(3, 13, 8), float32], Tensor[(54), float32]) {
  %1268 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
  %1269 = @func_4726() /* ty=Tensor[(54), float32] */;
  (%1268, %1269)
}

def @func_12263() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(2, 5, 10), int64], Tensor[(9, 13, 54), float32]) {
  %1270 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1271 = @func_9470() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) */;
  %1272 = @func_10832() /* ty=(Tensor[(3, 16, 14), float64], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %1273 = @func_9470() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) */;
  %1274 = %1273.0;
  %1275 = @func_11910() /* ty=Tensor[(9, 13, 1), float32] */;
  %1276 = cast(%1274, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1277 = cast(%1275, dtype="float32") /* ty=Tensor[(9, 13, 1), float32] */;
  %1278 = %1270.0;
  %1279 = %1271.1;
  %1280 = %1272.1;
  %1281 = divide(%1276, %1277) /* ty=Tensor[(9, 13, 54), float32] */;
  (%1278, %1279, %1280, %1281)
}

def @func_20632() -> Tensor[(8, 8, 3), float32] {
  %1282 = @func_13381() /* ty=(Tensor[(9, 13, 1), bool], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) */;
  %1282.1
}

def @func_12376() -> Tensor[(144), uint8] {
  %1283 = @func_8290() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) */;
  %1283.1
}

def @func_19253() -> Tensor[(3, 7, 6), float32] {
  %1284 = @func_17977() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %1284.1
}

def @func_6975() -> Tensor[(126), float32] {
  %1285 = @func_4499() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */;
  %1285.2
}

def @func_11464() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) {
  %1286 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1287 = @func_8035() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1288 = @func_10976() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %1289 = @func_9895() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %1290 = %1286.0;
  %1291 = %1287.0;
  %1292 = %1288.1;
  %1293 = %1289.1;
  (%1290, %1291, %1292, %1293)
}

def @func_14252() -> (Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) {
  %1294 = @func_12263() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(2, 5, 10), int64], Tensor[(9, 13, 54), float32]) */;
  %1295 = @func_8290() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) */;
  %1296 = %1294.2;
  %1297 = %1295.1;
  (%1296, %1297)
}

def @func_11552() -> Tensor[(3, 13, 8), float32] {
  %1298 = @func_7664() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), bool]) */;
  %1298.1
}

def @func_18529() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 9), int64], Tensor[(351), int64], Tensor[(3, 13, 8), float32]) {
  %1299 = cast(meta[relay.Constant][67] /* ty=Tensor[(351), int64] */, dtype="int64") /* ty=Tensor[(351), int64] */;
  %1300 = reshape(%1299, newshape=[351]) /* ty=Tensor[(351), int64] */;
  %1301 = @func_7785(%1300) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), int64], Tensor[(351), int64]) */;
  %1302 = @func_9069() /* ty=Tensor[(3, 13, 8), float32] */;
  %1303 = %1301.1;
  %1304 = @func_18454() /* ty=Tensor[(3, 13, 8), float32] */;
  (%1302, %1303, meta[relay.Constant][67] /* ty=Tensor[(351), int64] */, %1304)
}

def @main(%var_22321: Tensor[(728, 9), bool], %var_22326: Tensor[(2, 52), float32], %var_22333: Tensor[(2, 52), float64]) -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], bool, Tensor[(54), float32], Tensor[(728, 9), uint8], Tensor[(3, 13, 8), float32], Tensor[(2, 52), bool]) {
  %1305 = @func_14148() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32]) */;
  %1306 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1307 = cast(meta[relay.Constant][68] /* ty=Tensor[(728, 1), bool] */, dtype="bool") /* ty=Tensor[(728, 1), bool] */;
  %1308 = reshape(%1306, newshape=[]) /* ty=bool */;
  %1309 = reshape(%1307, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), bool] */;
  %1310 = @func_16052(%1308, %1309) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(7, 8, 13), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %1311 = @func_19680() /* ty=(Tensor[(54), float32],) */;
  %1312 = cast(meta[relay.Constant][68] /* ty=Tensor[(728, 1), bool] */, dtype="uint8") /* ty=Tensor[(728, 1), uint8] */;
  %1313 = cast(%var_22321, dtype="uint8") /* ty=Tensor[(728, 9), uint8] */;
  %1314 = cast(%var_22326, dtype="float32") /* ty=Tensor[(2, 52), float32] */;
  %1315 = reshape(%1314, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float32] */;
  %1316 = @func_8482(%1315) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(126), float32], Tensor[(54, 1), float32], Tensor[(54), float32], Tensor[(4, 13, 2), float64], Tensor[(3, 13, 8), float32]) */;
  %1317 = cast(%var_22326, dtype="float64") /* ty=Tensor[(2, 52), float64] */;
  %1318 = sigmoid(%1317) /* ty=Tensor[(2, 52), float64] */;
  %1319 = cast(%var_22333, dtype="bool") /* ty=Tensor[(2, 52), bool] */;
  %1320 = shape_of(%1318, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1321 = cast(%1318, dtype="bool") /* ty=Tensor[(2, 52), bool] */;
  %1322 = dyn.reshape(%1319, %1320, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1323 = %1305.0;
  %1324 = %1310.2;
  %1325 = %1311.0;
  %1326 = logical_xor(%1312, %1313) /* ty=Tensor[(728, 9), uint8] */;
  %1327 = %1316.0;
  %1328 = greater_equal(%1321, %1322) /* ty=Tensor[(2, 52), bool] */;
  (%1323, %1324, True /* ty=bool */, %1325, %1326, %1327, %1328)
}

def @func_12299() -> (Tensor[(54), float32],) {
  %1329 = @func_9283() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %1330 = %1329.2;
  (%1330,)
}

def @func_10299(%var_10294: Tensor[(3, 13, 8), bool]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), uint64]) {
  %1331 = @func_8428() /* ty=(Tensor[(3, 13, 8), bool], Tensor[(2, 9, 3), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float64], Tensor[(3, 7, 6), float64]) */;
  %1332 = %1331.0;
  %1333 = cast(%var_10294, dtype="uint64") /* ty=Tensor[(3, 13, 8), uint64] */;
  %1334 = shape_of(%1332, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1335 = cast(%1332, dtype="uint64") /* ty=Tensor[(3, 13, 8), uint64] */;
  %1336 = dyn.reshape(%1333, %1334, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1337 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
  %1338 = bitwise_or(%1335, %1336) /* ty=Tensor[(3, 13, 8), uint64] */;
  (%1337, %1338)
}

def @func_20915() -> Tensor[(3, 13, 8), uint32] {
  @func_20701() /* ty=Tensor[(3, 13, 8), uint32] */
}

def @func_7510() -> Tensor[(3, 13, 8), float32] {
  %1339 = @func_4550() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1339.0
}

def @func_19122() -> (Tensor[(3, 7, 6), float32],) {
  %1340 = @func_18276() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1341 = %1340.0;
  (%1341,)
}

def @func_19964() -> (Tensor[(126, 1), float32], Tensor[(54), float32]) {
  %1342 = @func_16335() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(126, 1), float32]) */;
  %1343 = @func_17911() /* ty=(Tensor[(54), float32],) */;
  %1344 = %1342.3;
  %1345 = %1343.0;
  (%1344, %1345)
}

def @func_21501() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) {
  %1346 = @func_11464() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
  %1347 = @func_15741() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1348 = %1346.1;
  %1349 = %1347.0;
  %1350 = @func_10445() /* ty=Tensor[(9, 13, 1), bool] */;
  (%1348, %1349, %1350)
}

def @func_7785(%var_7778: Tensor[(351), int64]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), int64], Tensor[(351), int64]) {
  %1351 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1352 = cast(%var_7778, dtype="int64") /* ty=Tensor[(351), int64] */;
  %1353 = cast(%var_7778, dtype="int64") /* ty=Tensor[(351), int64] */;
  %1354 = reshape(%1352, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), int64] */;
  %1355 = reshape(%1353, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), int64] */;
  %1356 = @func_2486(%1354, %1355) /* ty=(Tensor[(3, 13, 9), int64], Tensor[(3, 13, 9), float32]) */;
  %1357 = %1351.0;
  %1358 = %1356.0;
  (%1357, %1358, %var_7778)
}

def @func_5837() -> Tensor[(3, 7, 6), float32] {
  %1359 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1359.0
}

def @func_10225(%var_10211: Tensor[(312), float32]) -> (Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) {
  %1360 = cast(%var_10211, dtype="float32") /* ty=Tensor[(312), float32] */;
  %1361 = reshape(%1360, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %1362 = @func_6598(%1361) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float32]) */;
  %1363 = @func_8269() /* ty=Tensor[(54), float32] */;
  %1364 = @func_9585() /* ty=Tensor[(3, 7, 6), float32] */;
  %1365 = %1362.1;
  (%1363, %1364, %1365, %var_10211)
}

def @func_20701() -> Tensor[(3, 13, 8), uint32] {
  @func_11918() /* ty=Tensor[(3, 13, 8), uint32] */
}

def @func_9625() -> Tensor[(3, 13, 8), float32] {
  %1366 = @func_4550() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1366.0
}

def @func_9895() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  %1367 = @func_4550() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1368 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
  %1369 = %1367.0;
  (%1368, %1369)
}

def @func_13828(%var_13815: Tensor[(13, 15, 4), float32], %var_13816: Tensor[(13, 15, 4), float32]) -> Tensor[(13, 15, 4), float32] {
  %1370 = cast(%var_13816, dtype="float32") /* ty=Tensor[(13, 15, 4), float32] */;
  %1371 = shape_of(%var_13815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1372 = cast(%var_13815, dtype="float32") /* ty=Tensor[(13, 15, 4), float32] */;
  %1373 = dyn.reshape(%1370, %1371, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%1372, %1373) /* ty=Tensor[(13, 15, 4), float32] */
}

def @func_17640(%var_17637: Tensor[(132), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(26, 4), bool], Tensor[(6, 2), float32], Tensor[(132), float32]) {
  %1374 = @func_10324() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1375 = cast(meta[relay.Constant][69] /* ty=Tensor[(6, 2), float32] */, dtype="float32") /* ty=Tensor[(6, 2), float32] */;
  %1376 = cast(%var_17637, dtype="float32") /* ty=Tensor[(132), float32] */;
  %1377 = reshape(%1375, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %1378 = reshape(%1376, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %1379 = @func_17314(%1377, %1378) /* ty=(Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8], Tensor[(3, 13, 8), bool], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(12), float32], Tensor[(132), float32], Tensor[(3, 7, 6), float32], Tensor[(1, 648), int32], Tensor[(26, 4), int16], Tensor[(26, 4), bool]) */;
  %1380 = %1374.0;
  %1381 = %1379.11;
  (%1380, %1381, meta[relay.Constant][69] /* ty=Tensor[(6, 2), float32] */, %var_17637)
}

def @func_7756() -> (Tensor[(54), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float64]) {
  %1382 = @func_6311() /* ty=(Tensor[(54), float32],) */;
  %1383 = @func_7415() /* ty=(Tensor[(54), float32],) */;
  %1384 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %1385 = cast(meta[relay.Constant][70] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1386 = reshape(%1385, newshape=[24, 10]) /* ty=Tensor[(24, 10), float32] */;
  %1387 = @func_7332(%1386) /* ty=(Tensor[(24, 10), uint32], Tensor[(8, 5, 8), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(312), float32], Tensor[(2, 9, 3), float32]) */;
  %1388 = %1387.7;
  %1389 = cast(%1388, dtype="float64") /* ty=Tensor[(2, 9, 3), float64] */;
  %1390 = %1382.0;
  %1391 = %1383.0;
  %1392 = %1384.1;
  %1393 = log2(%1389) /* ty=Tensor[(2, 9, 3), float64] */;
  (%1390, %1391, %1392, meta[relay.Constant][70] /* ty=Tensor[(240), float32] */, %1393)
}

def @func_9213() -> Tensor[(3, 16, 14), int8] {
  %1394 = @func_8712() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(336, 2), int8]) */;
  %1394.2
}

def @func_5576() -> (Tensor[(3, 7, 6), float32],) {
  %1395 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1396 = %1395.0;
  (%1396,)
}

def @func_6102() -> (Tensor[(3, 7, 6), float64], Tensor[(54), float32]) {
  %1397 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1398 = %1397.0;
  %1399 = cast(%1398, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %1400 = tan(%1399) /* ty=Tensor[(3, 7, 6), float32] */;
  %1401 = cast(%1400, dtype="float64") /* ty=Tensor[(3, 7, 6), float64] */;
  %1402 = @func_5275() /* ty=(Tensor[(54), float32],) */;
  %1403 = acos(%1401) /* ty=Tensor[(3, 7, 6), float64] */;
  %1404 = %1402.0;
  (%1403, %1404)
}

def @func_12279() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  %1405 = @func_10499() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1406 = @func_11816() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) */;
  %1407 = %1405.0;
  %1408 = %1406.2;
  (%1407, %1408)
}

def @func_14577() -> (Tensor[(54), float32], Tensor[(3, 7, 6), float64]) {
  %1409 = @func_9470() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) */;
  %1410 = @func_11039() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
  %1411 = %1410.1;
  %1412 = cast(%1411, dtype="float64") /* ty=Tensor[(3, 7, 6), float64] */;
  %1413 = %1409.0;
  %1414 = log2(%1412) /* ty=Tensor[(3, 7, 6), float64] */;
  (%1413, %1414)
}

def @func_13194() -> (Tensor[(54), float32],) {
  %1415 = @func_10125() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32]) */;
  %1416 = %1415.0;
  (%1416,)
}

def @func_15033() -> Tensor[(54), float32] {
  %1417 = @func_9470() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) */;
  %1417.0
}

def @func_18223() -> Tensor[(3, 7, 6), float32] {
  %1418 = @func_17024() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(8, 5, 8), bool], Tensor[(320), uint16]) */;
  %1418.0
}

def @func_18910(%var_18883: Tensor[(100), int64], %var_18884: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(100), int64], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8]) {
  %1419 = @func_18383() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) */;
  %1420 = cast(meta[relay.Constant][71] /* ty=Tensor[(64), bool] */, dtype="bool") /* ty=Tensor[(64), bool] */;
  %1421 = cast(%var_18883, dtype="int64") /* ty=Tensor[(100), int64] */;
  %1422 = cast(%var_18884, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1423 = reshape(%1420, newshape=[8, 8]) /* ty=Tensor[(8, 8), bool] */;
  %1424 = reshape(%1421, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %1425 = reshape(%1422, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1426 = @func_12434(%1423, %1424, %1425) /* ty=(Tensor[(54), float32], Tensor[(144), uint8], Tensor[(8), int16], Tensor[(8, 8), bool], Tensor[(100), int64], Tensor[(144), uint8]) */;
  %1427 = %1419.0;
  %1428 = @func_11552() /* ty=Tensor[(3, 13, 8), float32] */;
  %1429 = %1426.4;
  (%1427, %1428, %1429, meta[relay.Constant][71] /* ty=Tensor[(64), bool] */, %var_18883, %var_18884)
}

def @func_5612() -> (Tensor[(3, 13, 8), float32],) {
  %1430 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1431 = %1430.0;
  (%1431,)
}

def @func_17024() -> (Tensor[(3, 7, 6), float32], Tensor[(8, 5, 8), bool], Tensor[(320), uint16]) {
  %1432 = @func_14866() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
  %1433 = cast(meta[relay.Constant][72] /* ty=Tensor[(320), uint16] */, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %1434 = reshape(%1433, newshape=[8, 5, 8]) /* ty=Tensor[(8, 5, 8), uint16] */;
  %1435 = @func_1991(%1434) /* ty=(Tensor[(8, 5, 8), bool],) */;
  %1436 = %1432.0;
  %1437 = %1435.0;
  (%1436, %1437, meta[relay.Constant][72] /* ty=Tensor[(320), uint16] */)
}

def @func_16189() -> Tensor[(2, 5, 10), int64] {
  %1438 = @func_14252() /* ty=(Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %1438.0
}

def @func_18867() -> Tensor[(3, 13, 8), float32] {
  @func_9069() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_14866() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  %1439 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1440 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1441 = %1439.0;
  %1442 = %1440.0;
  (%1441, %1442)
}

def @func_6222() -> (Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(8, 5, 5), bool], Tensor[(200), bool], Tensor[(3, 7, 6), float32]) {
  %1443 = @func_6102() /* ty=(Tensor[(3, 7, 6), float64], Tensor[(54), float32]) */;
  %1444 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1445 = cast(meta[relay.Constant][73] /* ty=Tensor[(200), bool] */, dtype="bool") /* ty=Tensor[(200), bool] */;
  %1446 = reshape(%1445, newshape=[8, 5, 5]) /* ty=Tensor[(8, 5, 5), bool] */;
  %1447 = @func_5772() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1448 = %1443.1;
  %1449 = %1444.0;
  %1450 = @func_3306(%1446) /* ty=Tensor[(8, 5, 5), bool] */;
  %1451 = %1447.0;
  (%1448, %1449, %1450, meta[relay.Constant][73] /* ty=Tensor[(200), bool] */, %1451)
}

def @func_12345() -> (Tensor[(3, 16, 14), int8], Tensor[(54), float32]) {
  %1452 = @func_10648() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), int8], Tensor[(2, 15, 8), float32], Tensor[(126), float32], Tensor[(378, 4), float32]) */;
  %1453 = @func_9470() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) */;
  %1454 = %1452.1;
  %1455 = %1453.0;
  (%1454, %1455)
}

def @func_21704() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), float32]) {
  %1456 = @func_19785() /* ty=(Tensor[(3, 16, 14), float64], Tensor[(3, 13, 8), float32]) */;
  %1457 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1458 = %1456.1;
  %1459 = @func_20701() /* ty=Tensor[(3, 13, 8), uint32] */;
  %1460 = %1457.0;
  (%1458, %1459, %1460)
}

def @func_9283() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) {
  %1461 = @func_8192() /* ty=Tensor[(3, 13, 8), float32] */;
  %1462 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
  %1463 = @func_8269() /* ty=Tensor[(54), float32] */;
  (%1461, %1462, %1463)
}

def @func_11502() -> (Tensor[(3, 13, 8), float32], Tensor[(126), float32]) {
  %1464 = @func_10532() /* ty=(Tensor[(54), float32], Tensor[(126), float32]) */;
  %1465 = @func_10900() /* ty=Tensor[(3, 13, 8), float32] */;
  %1466 = %1464.1;
  (%1465, %1466)
}

def @func_15398() -> (Tensor[(3, 13, 8), float32],) {
  %1467 = @func_7510() /* ty=Tensor[(3, 13, 8), float32] */;
  (%1467,)
}

def @func_9005(%var_8917: Tensor[(672), int8], %var_8922: Tensor[(100), int64], %var_8954: Tensor[(312), float32], %var_8997: Tensor[(32, 2), bool]) -> (Tensor[(54), float32], Tensor[(672), int8], Tensor[(672), int8], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(312), float32], Tensor[(2, 5, 10), float64], Tensor[(8, 5, 8), bool], Tensor[(100), int64], Tensor[(8), int16], Tensor[(32, 2), bool]) {
  %1468 = @func_7415() /* ty=(Tensor[(54), float32],) */;
  %1469 = cast(%var_8917, dtype="int8") /* ty=Tensor[(672), int8] */;
  %1470 = reshape(%1469, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %1471 = @func_7378(%1470) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), int8], Tensor[(672), int8]) */;
  %1472 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1473 = cast(%var_8954, dtype="float32") /* ty=Tensor[(312), float32] */;
  %1474 = cast(meta[relay.Constant][75] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1475 = reshape(%1473, newshape=[312, 1]) /* ty=Tensor[(312, 1), float32] */;
  %1476 = reshape(%1474, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1477 = @func_7948(%1475, %1476) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), uint32], Tensor[(312, 1), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %1478 = cast(%var_8922, dtype="int64") /* ty=Tensor[(100), int64] */;
  %1479 = cast(meta[relay.Constant][74] /* ty=Tensor[(320), uint16] */, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %1480 = cast(meta[relay.Constant][75] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1481 = reshape(%1478, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %1482 = reshape(%1479, newshape=[320]) /* ty=Tensor[(320), uint16] */;
  %1483 = reshape(%1480, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1484 = @func_4442(%1481, %1482, %1483) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(8, 5, 8), bool], Tensor[(320), uint16], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %1485 = %1484.1;
  %1486 = cast(%1485, dtype="float32") /* ty=Tensor[(2, 5, 10), float32] */;
  %1487 = sigmoid(%1486) /* ty=Tensor[(2, 5, 10), float32] */;
  %1488 = cast(%1485, dtype="float64") /* ty=Tensor[(2, 5, 10), float64] */;
  %1489 = shape_of(%1487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1490 = cast(%1487, dtype="float64") /* ty=Tensor[(2, 5, 10), float64] */;
  %1491 = dyn.reshape(%1488, %1489, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1492 = cast(meta[relay.Constant][74] /* ty=Tensor[(320), uint16] */, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %1493 = reshape(%1492, newshape=[8, 5, 8]) /* ty=Tensor[(8, 5, 8), uint16] */;
  %1494 = @func_1991(%1493) /* ty=(Tensor[(8, 5, 8), bool],) */;
  %1495 = cast(meta[relay.Constant][76] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
  %1496 = cast(%var_8997, dtype="bool") /* ty=Tensor[(32, 2), bool] */;
  %1497 = cast(%1485, dtype="int64") /* ty=Tensor[(2, 5, 10), int64] */;
  %1498 = cast(meta[relay.Constant][75] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1499 = reshape(%1495, newshape=[8, 1]) /* ty=Tensor[(8, 1), int16] */;
  %1500 = reshape(%1496, newshape=[64]) /* ty=Tensor[(64), bool] */;
  %1501 = reshape(%1497, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %1502 = reshape(%1498, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1503 = @func_7246(%1499, %1500, %1501, %1502) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 9), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(2, 5, 10), int64], Tensor[(8, 64), int32]) */;
  %1504 = %1468.0;
  %1505 = %1471.2;
  %1506 = %1472.0;
  %1507 = %1477.0;
  %1508 = floor_divide(%1490, %1491) /* ty=Tensor[(2, 5, 10), float64] */;
  %1509 = %1494.0;
  %1510 = %1503.2;
  (%1504, %1505, %var_8917, %var_8922, meta[relay.Constant][74] /* ty=Tensor[(320), uint16] */, meta[relay.Constant][75] /* ty=Tensor[(144), uint8] */, %1506, %1507, %var_8954, %1508, %1509, %1510, meta[relay.Constant][76] /* ty=Tensor[(8), int16] */, %var_8997)
}

def @func_10747() -> Tensor[(9, 13, 1), bool] {
  @func_10445() /* ty=Tensor[(9, 13, 1), bool] */
}

def @func_16335() -> (Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(126, 1), float32]) {
  %1511 = @func_11059() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1512 = @func_5130() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) */;
  %1513 = cast(meta[relay.Constant][77] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %1514 = reshape(%1513, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %1515 = @func_11318(%1514) /* ty=(Tensor[(3, 7, 6), int64], Tensor[(126), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 13, 8), uint32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %1516 = %1511.0;
  %1517 = %1512.5;
  %1518 = %1515.6;
  (%1516, %1517, %1518, meta[relay.Constant][77] /* ty=Tensor[(126, 1), float32] */)
}

def @func_5015(%var_4997: Tensor[(3, 7, 6), float32]) -> (Tensor[(3, 7, 6), int64], Tensor[(3, 13, 8), float32]) {
  %1519 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1520 = %1519.0;
  %1521 = cast(%var_4997, dtype="int64") /* ty=Tensor[(3, 7, 6), int64] */;
  %1522 = shape_of(%1520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1523 = cast(%1520, dtype="int64") /* ty=Tensor[(3, 7, 6), int64] */;
  %1524 = dyn.reshape(%1521, %1522, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1525 = @func_4550() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1526 = bitwise_xor(%1523, %1524) /* ty=Tensor[(3, 7, 6), int64] */;
  %1527 = %1525.0;
  (%1526, %1527)
}

def @func_20248() -> Tensor[(54), float32] {
  %1528 = @func_13978() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %1528.2
}

def @func_7564() -> Tensor[(3, 13, 8), float32] {
  %1529 = @func_5183() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1529.0
}

def @func_8035() -> (Tensor[(3, 13, 8), float32],) {
  %1530 = @func_7019() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
  %1531 = %1530.1;
  (%1531,)
}

def @func_7332(%var_7284: Tensor[(24, 10), float32]) -> (Tensor[(24, 10), uint32], Tensor[(8, 5, 8), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(312), float32], Tensor[(2, 9, 3), float32]) {
  %1532 = @func_5130() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) */;
  %1533 = %1532.4;
  %1534 = cast(%var_7284, dtype="uint32") /* ty=Tensor[(24, 10), uint32] */;
  %1535 = shape_of(%1533, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1536 = cast(%1533, dtype="uint32") /* ty=Tensor[(24, 10), uint32] */;
  %1537 = dyn.reshape(%1534, %1535, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1538 = cast(meta[relay.Constant][78] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %1539 = cast(meta[relay.Constant][79] /* ty=Tensor[(320), uint16] */, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %1540 = cast(meta[relay.Constant][80] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1541 = reshape(%1538, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %1542 = reshape(%1539, newshape=[320]) /* ty=Tensor[(320), uint16] */;
  %1543 = reshape(%1540, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1544 = @func_4442(%1541, %1542, %1543) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(8, 5, 8), bool], Tensor[(320), uint16], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %1545 = cast(meta[relay.Constant][81] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %1546 = reshape(%1545, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %1547 = @func_6598(%1546) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float32]) */;
  %1548 = %1547.0;
  %1549 = cast(%1548, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1550 = reshape(%1549, newshape=[2, 9, 3]) /* ty=Tensor[(2, 9, 3), float32] */;
  %1551 = @func_664(%1550) /* ty=(Tensor[(2, 9, 3), float32],) */;
  %1552 = subtract(%1536, %1537) /* ty=Tensor[(24, 10), uint32] */;
  %1553 = %1544.3;
  %1554 = %1551.0;
  (%1552, %1553, meta[relay.Constant][78] /* ty=Tensor[(100), int64] */, meta[relay.Constant][79] /* ty=Tensor[(320), uint16] */, meta[relay.Constant][80] /* ty=Tensor[(144), uint8] */, %1548, meta[relay.Constant][81] /* ty=Tensor[(312), float32] */, %1554)
}

def @func_1483(%var_1475: Tensor[(2, 5, 10), int64], %var_1476: Tensor[(2, 5, 10), int64]) -> (Tensor[(2, 5, 10), int64],) {
  %1555 = cast(%var_1476, dtype="int64") /* ty=Tensor[(2, 5, 10), int64] */;
  %1556 = shape_of(%var_1475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1557 = cast(%var_1475, dtype="int64") /* ty=Tensor[(2, 5, 10), int64] */;
  %1558 = dyn.reshape(%1555, %1556, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1559 = maximum(%1557, %1558) /* ty=Tensor[(2, 5, 10), int64] */;
  (%1559,)
}

def @func_15120() -> (Tensor[(3, 7, 6), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(3, 16, 14), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(9, 13, 1), bool]) {
  %1560 = @func_10976() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %1561 = cast(meta[relay.Constant][82] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1562 = reshape(%1561, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1563 = @func_10274(%1562) /* ty=(Tensor[(54), float32], Tensor[(100), int64], Tensor[(144), uint8]) */;
  %1564 = @func_12880() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8]) */;
  %1565 = %1564.1;
  %1566 = @func_9213() /* ty=Tensor[(3, 16, 14), int8] */;
  %1567 = cast(%1566, dtype="float32") /* ty=Tensor[(3, 16, 14), float32] */;
  %1568 = shape_of(%1565, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1569 = cast(%1565, dtype="float32") /* ty=Tensor[(3, 16, 14), float32] */;
  %1570 = dyn.reshape(%1567, %1568, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1571 = @func_11039() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
  %1572 = @func_12880() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8]) */;
  %1573 = %1560.1;
  %1574 = %1563.1;
  %1575 = mod(%1569, %1570) /* ty=Tensor[(3, 16, 14), float32] */;
  %1576 = %1571.0;
  %1577 = %1572.0;
  %1578 = @func_10445() /* ty=Tensor[(9, 13, 1), bool] */;
  (%1573, %1574, meta[relay.Constant][82] /* ty=Tensor[(144), uint8] */, %1575, %1576, %1577, %1578)
}

def @func_4480() -> (Tensor[(3, 13, 8), float32],) {
  %1579 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
  (%1579,)
}

def @func_16370() -> Tensor[(3, 7, 6), float32] {
  %1580 = @func_13911() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
  %1580.0
}

def @func_22163(%var_22124: Tensor[(351), int64], %var_22159: Tensor[(1512), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), float32], Tensor[(351), int64], Tensor[(12, 126), float64], Tensor[(1512), float32]) {
  %1581 = @func_17532() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %1582 = cast(%var_22124, dtype="int64") /* ty=Tensor[(351), int64] */;
  %1583 = cast(%var_22124, dtype="int64") /* ty=Tensor[(351), int64] */;
  %1584 = reshape(%1582, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), int64] */;
  %1585 = reshape(%1583, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), int64] */;
  %1586 = @func_2486(%1584, %1585) /* ty=(Tensor[(3, 13, 9), int64], Tensor[(3, 13, 9), float32]) */;
  %1587 = %1581.1;
  %1588 = cast(%1587, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %1589 = cast(%var_22159, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %1590 = reshape(%1588, newshape=[1, 126]) /* ty=Tensor[(1, 126), float32] */;
  %1591 = reshape(%1589, newshape=[12, 126]) /* ty=Tensor[(12, 126), float32] */;
  %1592 = @func_6004(%1590, %1591) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(12, 126), float64]) */;
  %1593 = %1586.1;
  %1594 = %1592.3;
  (%1587, %1593, %var_22124, %1594, %var_22159)
}

def @func_18143(%var_18136: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(312, 1), float32], Tensor[(144), uint8]) {
  %1595 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
  %1596 = cast(%1595, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %1597 = cast(%var_18136, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1598 = reshape(%1596, newshape=[312, 1]) /* ty=Tensor[(312, 1), float32] */;
  %1599 = reshape(%1597, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1600 = @func_7948(%1598, %1599) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), uint32], Tensor[(312, 1), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %1601 = %1600.2;
  (%1595, %1601, %var_18136)
}

def @func_3306(%var_3302: Tensor[(8, 5, 5), bool]) -> Tensor[(8, 5, 5), bool] {
  %1602 = cast(%var_3302, dtype="bool") /* ty=Tensor[(8, 5, 5), bool] */;
  %1603 = shape_of(meta[relay.Constant][83] /* ty=Tensor[(8, 5, 5), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1604 = cast(meta[relay.Constant][83] /* ty=Tensor[(8, 5, 5), bool] */, dtype="bool") /* ty=Tensor[(8, 5, 5), bool] */;
  %1605 = dyn.reshape(%1602, %1603, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%1604, %1605) /* ty=Tensor[(8, 5, 5), bool] */
}

def @func_7948(%var_7936: Tensor[(312, 1), float32], %var_7939: Tensor[(144), uint8]) -> (Tensor[(54), float32], Tensor[(3, 13, 8), uint32], Tensor[(312, 1), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) {
  %1606 = @func_6311() /* ty=(Tensor[(54), float32],) */;
  %1607 = cast(%var_7936, dtype="float32") /* ty=Tensor[(312, 1), float32] */;
  %1608 = reshape(%1607, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %1609 = @func_5677(%1608) /* ty=(Tensor[(3, 13, 8), uint32],) */;
  %1610 = cast(%var_7939, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1611 = reshape(%1610, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint8] */;
  %1612 = @func_2959(%1611) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %1613 = %1606.0;
  %1614 = %1609.0;
  %1615 = %1612.1;
  (%1613, %1614, %var_7936, %1615, %var_7939)
}

def @func_20468() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %1616 = @func_18777() /* ty=(Tensor[(2, 5, 10), int64], Tensor[(144), uint8], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %1617 = @func_5772() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1618 = %1616.7;
  %1619 = %1617.0;
  (%1618, %1619)
}

def @func_18043() -> (Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32], Tensor[(54), float32]) {
  %1620 = @func_17779() /* ty=(Tensor[(54), float32], Tensor[(9, 13, 54), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) */;
  %1621 = @func_7074() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 15, 8), float32]) */;
  %1622 = @func_17945() /* ty=(Tensor[(54), float32], Tensor[(144), uint8]) */;
  %1623 = %1620.2;
  %1624 = %1621.1;
  %1625 = %1622.0;
  (%1623, %1624, %1625)
}

def @func_20751() -> (Tensor[(54), float32], Tensor[(54), float32], Tensor[(3, 13, 8), float32]) {
  %1626 = @func_19680() /* ty=(Tensor[(54), float32],) */;
  %1627 = @func_8290() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) */;
  %1628 = @func_5209() /* ty=Tensor[(54), float32] */;
  %1629 = %1626.0;
  %1630 = %1627.0;
  (%1628, %1629, %1630)
}

def @func_1608(%var_1604: Tensor[(8, 8, 3), float32]) -> (Tensor[(8, 8, 3), float32],) {
  %1631 = cast(%var_1604, dtype="float32") /* ty=Tensor[(8, 8, 3), float32] */;
  %1632 = tan(%1631) /* ty=Tensor[(8, 8, 3), float32] */;
  (%1632,)
}

def @func_19941(%var_19884: Tensor[(25, 4), int64], %var_19892: Tensor[(25, 4), int64]) -> (Tensor[(9, 13, 54), float32], Tensor[(9, 13, 54), int64], Tensor[(3, 13, 8), float32], Tensor[(144, 1), uint8], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(3, 7, 6), float32], Tensor[(9, 13, 54), float64], Tensor[(25, 4), bool], Tensor[(25, 4), bool], Tensor[(9, 13, 54), float32]) {
  %1633 = @func_18016() /* ty=(Tensor[(54), float32],) */;
  %1634 = %1633.0;
  %1635 = @func_10747() /* ty=Tensor[(9, 13, 1), bool] */;
  %1636 = cast(%1635, dtype="int64") /* ty=Tensor[(9, 13, 1), int64] */;
  %1637 = cast(%1634, dtype="int64") /* ty=Tensor[(54), int64] */;
  %1638 = bitwise_xor(%1636, %1637) /* ty=Tensor[(9, 13, 54), int64] */;
  %1639 = cast(%1634, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1640 = cast(%1638, dtype="float32") /* ty=Tensor[(9, 13, 54), float32] */;
  %1641 = cast(%1635, dtype="bool") /* ty=Tensor[(9, 13, 1), bool] */;
  %1642 = cast(%1634, dtype="bool") /* ty=Tensor[(54), bool] */;
  %1643 = logical_and(%1641, %1642) /* ty=Tensor[(9, 13, 54), bool] */;
  %1644 = cast(%1643, dtype="int64") /* ty=Tensor[(9, 13, 54), int64] */;
  %1645 = cast(%1635, dtype="int64") /* ty=Tensor[(9, 13, 1), int64] */;
  %1646 = cast(%var_19884, dtype="int64") /* ty=Tensor[(25, 4), int64] */;
  %1647 = cast(meta[relay.Constant][84] /* ty=Tensor[(144, 1), uint8] */, dtype="uint8") /* ty=Tensor[(144, 1), uint8] */;
  %1648 = reshape(%1646, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %1649 = reshape(%1647, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1650 = @func_18910(%1648, %1649) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(100), int64], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8]) */;
  %1651 = @func_11575() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32]) */;
  %1652 = @func_10087() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %1653 = cast(%1643, dtype="float32") /* ty=Tensor[(9, 13, 54), float32] */;
  %1654 = acos(%1653) /* ty=Tensor[(9, 13, 54), float32] */;
  %1655 = cast(%1638, dtype="float64") /* ty=Tensor[(9, 13, 54), float64] */;
  %1656 = shape_of(%1654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1657 = cast(%1654, dtype="float64") /* ty=Tensor[(9, 13, 54), float64] */;
  %1658 = dyn.reshape(%1655, %1656, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1659 = cast(%var_19892, dtype="float64") /* ty=Tensor[(25, 4), float64] */;
  %1660 = atanh(%1659) /* ty=Tensor[(25, 4), float64] */;
  %1661 = cast(%var_19892, dtype="bool") /* ty=Tensor[(25, 4), bool] */;
  %1662 = shape_of(%1660, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1663 = cast(%1660, dtype="bool") /* ty=Tensor[(25, 4), bool] */;
  %1664 = dyn.reshape(%1661, %1662, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1665 = cast(%var_19892, dtype="float64") /* ty=Tensor[(25, 4), float64] */;
  %1666 = shape_of(%var_19884, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1667 = cast(%var_19884, dtype="float64") /* ty=Tensor[(25, 4), float64] */;
  %1668 = dyn.reshape(%1665, %1666, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1669 = floor_mod(%1667, %1668) /* ty=Tensor[(25, 4), float64] */;
  %1670 = cast(%1669, dtype="bool") /* ty=Tensor[(25, 4), bool] */;
  %1671 = shape_of(%1660, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1672 = cast(%1660, dtype="bool") /* ty=Tensor[(25, 4), bool] */;
  %1673 = dyn.reshape(%1670, %1671, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1674 = cast(%1643, dtype="float32") /* ty=Tensor[(9, 13, 54), float32] */;
  %1675 = floor_mod(%1639, %1640) /* ty=Tensor[(9, 13, 54), float32] */;
  %1676 = right_shift(%1644, %1645) /* ty=Tensor[(9, 13, 54), int64] */;
  %1677 = %1650.0;
  %1678 = @func_14843() /* ty=Tensor[(3, 13, 8), float32] */;
  %1679 = %1651.1;
  %1680 = %1652.0;
  %1681 = power(%1657, %1658) /* ty=Tensor[(9, 13, 54), float64] */;
  %1682 = equal(%1663, %1664) /* ty=Tensor[(25, 4), bool] */;
  %1683 = not_equal(%1672, %1673) /* ty=Tensor[(25, 4), bool] */;
  %1684 = asinh(%1674) /* ty=Tensor[(9, 13, 54), float32] */;
  (%1675, %1676, %1677, meta[relay.Constant][84] /* ty=Tensor[(144, 1), uint8] */, %1678, %1679, %1680, %1681, %1682, %1683, %1684)
}

def @func_5517(%var_5487: Tensor[(240), float32]) -> (Tensor[(14, 10, 15), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(240), float32], Tensor[(3, 13, 8), uint32], Tensor[(312), float32], Tensor[(126), float32]) {
  %1685 = cast(meta[relay.Constant][85] /* ty=Tensor[(14, 10, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 15), float32] */;
  %1686 = cast(meta[relay.Constant][86] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
  %1687 = cast(%var_5487, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1688 = reshape(%1686, newshape=[10, 3, 13]) /* ty=Tensor[(10, 3, 13), float32] */;
  %1689 = reshape(%1687, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %1690 = @func_1548(%1688, %1689) /* ty=(Tensor[(10, 3, 13), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(2, 5, 10), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 5, 10), int64], Tensor[(2, 5, 10), int64]) */;
  %1691 = cast(meta[relay.Constant][87] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %1692 = reshape(%1691, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %1693 = @func_4943(%1692) /* ty=(Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), bool]) */;
  %1694 = @func_4499() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */;
  %1695 = acos(%1685) /* ty=Tensor[(14, 10, 15), float32] */;
  %1696 = %1690.6;
  %1697 = %1693.0;
  %1698 = %1694.2;
  (%1695, %1696, meta[relay.Constant][86] /* ty=Tensor[(390), float32] */, %var_5487, %1697, meta[relay.Constant][87] /* ty=Tensor[(312), float32] */, %1698)
}

def @func_15741() -> (Tensor[(3, 13, 8), float32],) {
  %1699 = @func_8192() /* ty=Tensor[(3, 13, 8), float32] */;
  (%1699,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_13339() -> Tensor[(54), float32] {
  %0 = @func_5645() /* ty=(Tensor[(54), float32],) */;
  %0.0
}

def @func_7511() -> Tensor[(3, 13, 8), float32] {
  %2 = fn () -> Tensor[(3, 13, 8), float32] {
    %1 = @func_4550() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %1.0
  };
  %2() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_16150() -> Tensor[(54), float32] {
  @func_16148() /* ty=Tensor[(54), float32] */
}

def @func_5837() -> Tensor[(3, 7, 6), float32] {
  %3 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %3.0
}

def @func_16103(%var_16090: Tensor[(8), int16], %var_16091: Tensor[(64), bool], %var_16093: Tensor[(1, 144), uint8], %var_16095: Tensor[(672), int8]) -> (Tensor[(3, 13, 8), float32], Tensor[(144), uint8], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(1, 144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(3, 16, 14), float64]) {
  %4 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %5 = cast(%var_16090, dtype="int16") /* ty=Tensor[(8), int16] */;
  %6 = cast(%var_16091, dtype="bool") /* ty=Tensor[(64), bool] */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %8 = cast(%var_16093, dtype="uint8") /* ty=Tensor[(1, 144), uint8] */;
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(351), int64] */, dtype="int64") /* ty=Tensor[(351), int64] */;
  %10 = cast(%var_16095, dtype="int8") /* ty=Tensor[(672), int8] */;
  %11 = reshape(%5, newshape=[8]) /* ty=Tensor[(8), int16] */;
  %12 = reshape(%6, newshape=[1, 64]) /* ty=Tensor[(1, 64), bool] */;
  %13 = reshape(%7, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %14 = reshape(%8, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %15 = reshape(%9, newshape=[351]) /* ty=Tensor[(351), int64] */;
  %16 = reshape(%10, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %17 = @func_6821(%11, %12, %13, %14, %15, %16) /* ty=(Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(8), int16], Tensor[(1, 64), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(120, 2), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), float32], Tensor[(351), int64], Tensor[(3, 16, 14), int8], Tensor[(672), int8], Tensor[(3, 13, 8), float32]) */;
  %18 = @func_10702() /* ty=(Tensor[(3, 16, 14), float64],) */;
  %19 = %4.0;
  %20 = %17.11;
  %21 = %18.0;
  (%19, %20, %var_16090, %var_16091, meta[relay.Constant][0] /* ty=Tensor[(100), int64] */, %var_16093, meta[relay.Constant][1] /* ty=Tensor[(351), int64] */, %var_16095, %21)
}

def @func_12633() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32]) {
  %31 = fn () -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32]) {
    %22 = @func_10324() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %23 = cast(meta[relay.Constant][2] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
    %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
    %25 = reshape(%23, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
    %26 = reshape(%24, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
    %27 = @func_8006(%25, %26) /* ty=(Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) */;
    %28 = %22.0;
    %29 = @func_12021() /* ty=Tensor[(3, 13, 8), float32] */;
    %30 = %27.0;
    (%28, %29, %30, meta[relay.Constant][2] /* ty=Tensor[(648), int32] */)
  };
  %31() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32]) */
}

def @func_5337() -> (Tensor[(54), float32],) {
  %32 = @func_5209() /* ty=Tensor[(54), float32] */;
  (%32,)
}

def @func_18323() -> (Tensor[(54), float32],) {
  @func_18321() /* ty=(Tensor[(54), float32],) */
}

def @func_15122() -> (Tensor[(3, 7, 6), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(3, 16, 14), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(9, 13, 1), bool]) {
  @func_15120() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(3, 16, 14), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(9, 13, 1), bool]) */
}

def @func_9214() -> Tensor[(3, 16, 14), int8] {
  %34 = fn () -> Tensor[(3, 16, 14), int8] {
    %33 = @func_8712() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(336, 2), int8]) */;
    %33.2
  };
  %34() /* ty=Tensor[(3, 16, 14), int8] */
}

def @func_7757() -> (Tensor[(54), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float64]) {
  %47 = fn () -> (Tensor[(54), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float64]) {
    %35 = @func_6311() /* ty=(Tensor[(54), float32],) */;
    %36 = @func_7415() /* ty=(Tensor[(54), float32],) */;
    %37 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
    %38 = cast(meta[relay.Constant][3] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %39 = reshape(%38, newshape=[24, 10]) /* ty=Tensor[(24, 10), float32] */;
    %40 = @func_7332(%39) /* ty=(Tensor[(24, 10), uint32], Tensor[(8, 5, 8), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(312), float32], Tensor[(2, 9, 3), float32]) */;
    %41 = %40.7;
    %42 = cast(%41, dtype="float64") /* ty=Tensor[(2, 9, 3), float64] */;
    %43 = %35.0;
    %44 = %36.0;
    %45 = %37.1;
    %46 = log2(%42) /* ty=Tensor[(2, 9, 3), float64] */;
    (%43, %44, %45, meta[relay.Constant][3] /* ty=Tensor[(240), float32] */, %46)
  };
  %47() /* ty=(Tensor[(54), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float64]) */
}

def @func_12301() -> (Tensor[(54), float32],) {
  @func_12299() /* ty=(Tensor[(54), float32],) */
}

def @func_19124() -> (Tensor[(3, 7, 6), float32],) {
  @func_19122() /* ty=(Tensor[(3, 7, 6), float32],) */
}

def @func_18867() -> Tensor[(3, 13, 8), float32] {
  @func_9069() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_21871() -> Tensor[(54), float32] {
  @func_21869() /* ty=Tensor[(54), float32] */
}

def @func_19681() -> (Tensor[(54), float32],) {
  %50 = fn () -> (Tensor[(54), float32],) {
    %48 = @func_10532() /* ty=(Tensor[(54), float32], Tensor[(126), float32]) */;
    %49 = %48.0;
    (%49,)
  };
  %50() /* ty=(Tensor[(54), float32],) */
}

def @func_20468() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %51 = @func_18777() /* ty=(Tensor[(2, 5, 10), int64], Tensor[(144), uint8], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %52 = @func_5772() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %53 = %51.7;
  %54 = %52.0;
  (%53, %54)
}

def @func_15496(%var_15495: Tensor[(5, 13, 6), float32]) -> (Tensor[(5, 13, 6), float32],) {
  %57 = fn (%var_15473: Tensor[(5, 13, 6), float32]) -> (Tensor[(5, 13, 6), float32],) {
    %55 = cast(%var_15473, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
    %56 = erf(%55) /* ty=Tensor[(5, 13, 6), float32] */;
    (%56,)
  };
  %57(%var_15495) /* ty=(Tensor[(5, 13, 6), float32],) */
}

def @func_17640(%var_17637: Tensor[(132), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(26, 4), bool], Tensor[(6, 2), float32], Tensor[(132), float32]) {
  %58 = @func_10324() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %59 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 2), float32] */, dtype="float32") /* ty=Tensor[(6, 2), float32] */;
  %60 = cast(%var_17637, dtype="float32") /* ty=Tensor[(132), float32] */;
  %61 = reshape(%59, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %62 = reshape(%60, newshape=[132]) /* ty=Tensor[(132), float32] */;
  %63 = @func_17314(%61, %62) /* ty=(Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8], Tensor[(3, 13, 8), bool], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(12), float32], Tensor[(132), float32], Tensor[(3, 7, 6), float32], Tensor[(1, 648), int32], Tensor[(26, 4), int16], Tensor[(26, 4), bool]) */;
  %64 = %58.0;
  %65 = %63.11;
  (%64, %65, meta[relay.Constant][4] /* ty=Tensor[(6, 2), float32] */, %var_17637)
}

def @func_7335(%var_7333: Tensor[(24, 10), float32]) -> (Tensor[(24, 10), uint32], Tensor[(8, 5, 8), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(312), float32], Tensor[(2, 9, 3), float32]) {
  @func_7332(%var_7333) /* ty=(Tensor[(24, 10), uint32], Tensor[(8, 5, 8), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(312), float32], Tensor[(2, 9, 3), float32]) */
}

def @func_22163(%var_22124: Tensor[(351), int64], %var_22159: Tensor[(1512), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), float32], Tensor[(351), int64], Tensor[(12, 126), float64], Tensor[(1512), float32]) {
  %66 = @func_17532() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %67 = cast(%var_22124, dtype="int64") /* ty=Tensor[(351), int64] */;
  %68 = cast(%var_22124, dtype="int64") /* ty=Tensor[(351), int64] */;
  %69 = reshape(%67, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), int64] */;
  %70 = reshape(%68, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), int64] */;
  %71 = @func_2486(%69, %70) /* ty=(Tensor[(3, 13, 9), int64], Tensor[(3, 13, 9), float32]) */;
  %72 = %66.1;
  %73 = cast(%72, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %74 = cast(%var_22159, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %75 = reshape(%73, newshape=[1, 126]) /* ty=Tensor[(1, 126), float32] */;
  %76 = reshape(%74, newshape=[12, 126]) /* ty=Tensor[(12, 126), float32] */;
  %77 = @func_6004(%75, %76) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(12, 126), float64]) */;
  %78 = %71.1;
  %79 = %77.3;
  (%72, %78, %var_22124, %79, %var_22159)
}

def @func_19122() -> (Tensor[(3, 7, 6), float32],) {
  %80 = @func_18276() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %81 = %80.0;
  (%81,)
}

def @func_5445(%var_5439: Tensor[(1, 2, 4), int16], %var_5440: Tensor[(1, 2, 4), int16], %var_5441: Tensor[(8, 2, 4), bool], %var_5442: Tensor[(100), int64], %var_5443: Tensor[(320), uint16], %var_5444: Tensor[(240), float32]) -> (Tensor[(8, 2, 4), int64], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(2, 5, 10), float64], Tensor[(100), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32]) {
  @func_5437(%var_5439, %var_5440, %var_5441, %var_5442, %var_5443, %var_5444) /* ty=(Tensor[(8, 2, 4), int64], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(2, 5, 10), float64], Tensor[(100), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32]) */
}

def @func_7785(%var_7778: Tensor[(351), int64]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), int64], Tensor[(351), int64]) {
  %82 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %83 = cast(%var_7778, dtype="int64") /* ty=Tensor[(351), int64] */;
  %84 = cast(%var_7778, dtype="int64") /* ty=Tensor[(351), int64] */;
  %85 = reshape(%83, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), int64] */;
  %86 = reshape(%84, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), int64] */;
  %87 = @func_2486(%85, %86) /* ty=(Tensor[(3, 13, 9), int64], Tensor[(3, 13, 9), float32]) */;
  %88 = %82.0;
  %89 = %87.0;
  (%88, %89, %var_7778)
}

def @func_15868() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(52, 2), float32], Tensor[(3, 7, 6), float32]) {
  %90 = cast(meta[relay.Constant][5] /* ty=Tensor[(52, 2), float32] */, dtype="float32") /* ty=Tensor[(52, 2), float32] */;
  %91 = reshape(%90, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float32] */;
  %92 = @func_8482(%91) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(126), float32], Tensor[(54, 1), float32], Tensor[(54), float32], Tensor[(4, 13, 2), float64], Tensor[(3, 13, 8), float32]) */;
  %93 = @func_12279() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
  %94 = @func_8192() /* ty=Tensor[(3, 13, 8), float32] */;
  %95 = %92.5;
  %96 = %93.1;
  (%94, %95, meta[relay.Constant][5] /* ty=Tensor[(52, 2), float32] */, %96)
}

def @func_20702() -> Tensor[(3, 13, 8), uint32] {
  %97 = fn () -> Tensor[(3, 13, 8), uint32] {
    @func_11918() /* ty=Tensor[(3, 13, 8), uint32] */
  };
  %97() /* ty=Tensor[(3, 13, 8), uint32] */
}

def @func_10533() -> (Tensor[(54), float32], Tensor[(126), float32]) {
  %102 = fn () -> (Tensor[(54), float32], Tensor[(126), float32]) {
    %98 = @func_8097() /* ty=(Tensor[(54), float32], Tensor[(54), float32]) */;
    %99 = @func_6064() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(100), int64], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32]) */;
    %100 = %98.1;
    %101 = %99.2;
    (%100, %101)
  };
  %102() /* ty=(Tensor[(54), float32], Tensor[(126), float32]) */
}

def @func_14578() -> (Tensor[(54), float32], Tensor[(3, 7, 6), float64]) {
  %109 = fn () -> (Tensor[(54), float32], Tensor[(3, 7, 6), float64]) {
    %103 = @func_9470() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) */;
    %104 = @func_11039() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
    %105 = %104.1;
    %106 = cast(%105, dtype="float64") /* ty=Tensor[(3, 7, 6), float64] */;
    %107 = %103.0;
    %108 = log2(%106) /* ty=Tensor[(3, 7, 6), float64] */;
    (%107, %108)
  };
  %109() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float64]) */
}

def @func_21368() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  %114 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
    %110 = @func_10886() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %111 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %112 = %110.0;
    %113 = %111.0;
    (%112, %113)
  };
  %114() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_18910(%var_18883: Tensor[(100), int64], %var_18884: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(100), int64], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8]) {
  %115 = @func_18383() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) */;
  %116 = cast(meta[relay.Constant][6] /* ty=Tensor[(64), bool] */, dtype="bool") /* ty=Tensor[(64), bool] */;
  %117 = cast(%var_18883, dtype="int64") /* ty=Tensor[(100), int64] */;
  %118 = cast(%var_18884, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %119 = reshape(%116, newshape=[8, 8]) /* ty=Tensor[(8, 8), bool] */;
  %120 = reshape(%117, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %121 = reshape(%118, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %122 = @func_12434(%119, %120, %121) /* ty=(Tensor[(54), float32], Tensor[(144), uint8], Tensor[(8), int16], Tensor[(8, 8), bool], Tensor[(100), int64], Tensor[(144), uint8]) */;
  %123 = %115.0;
  %124 = @func_11552() /* ty=Tensor[(3, 13, 8), float32] */;
  %125 = %122.4;
  (%123, %124, %125, meta[relay.Constant][6] /* ty=Tensor[(64), bool] */, %var_18883, %var_18884)
}

def @func_7416() -> (Tensor[(54), float32],) {
  %128 = fn () -> (Tensor[(54), float32],) {
    %126 = @func_5275() /* ty=(Tensor[(54), float32],) */;
    %127 = %126.0;
    (%127,)
  };
  %128() /* ty=(Tensor[(54), float32],) */
}

def @func_8866() -> Tensor[(3, 13, 8), float64] {
  %130 = fn () -> Tensor[(3, 13, 8), float64] {
    %129 = @func_6064() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(100), int64], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32]) */;
    %129.0
  };
  %130() /* ty=Tensor[(3, 13, 8), float64] */
}

def @func_9650() -> (Tensor[(3, 16, 14), int8],) {
  @func_9648() /* ty=(Tensor[(3, 16, 14), int8],) */
}

def @func_17979() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  @func_17977() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_19741() -> (Tensor[(3, 13, 8), float32],) {
  @func_19739() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_9283() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) {
  %131 = @func_8192() /* ty=Tensor[(3, 13, 8), float32] */;
  %132 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
  %133 = @func_8269() /* ty=Tensor[(54), float32] */;
  (%131, %132, %133)
}

def @func_15147() -> (Tensor[(3, 13, 8), float32], Tensor[(390), float32], Tensor[(240), float32]) {
  %134 = @func_10976() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %135 = cast(meta[relay.Constant][7] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %136 = reshape(%135, newshape=[8, 30]) /* ty=Tensor[(8, 30), float32] */;
  %137 = @func_12980(%136) /* ty=(Tensor[(54), float32], Tensor[(9, 13, 54), float32], Tensor[(390), float32], Tensor[(8, 30), float32]) */;
  %138 = %134.0;
  %139 = %137.2;
  (%138, %139, meta[relay.Constant][7] /* ty=Tensor[(240), float32] */)
}

def @func_15964() -> (Tensor[(54), float32],) {
  @func_15962() /* ty=(Tensor[(54), float32],) */
}

def @func_13911() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  %140 = @func_6642() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(54), float32]) */;
  %141 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %142 = %140.0;
  %143 = %141.0;
  (%142, %143)
}

def @func_9550() -> (Tensor[(54), float32],) {
  %146 = fn () -> (Tensor[(54), float32],) {
    %144 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
    %145 = %144.1;
    (%145,)
  };
  %146() /* ty=(Tensor[(54), float32],) */
}

def @func_10324() -> (Tensor[(3, 7, 6), float32],) {
  %147 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %148 = %147.0;
  (%148,)
}

def @func_9627() -> Tensor[(3, 13, 8), float32] {
  @func_9625() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_20719(%var_20706: Tensor[(10, 8, 4), float64]) -> (Tensor[(10, 8, 4), float64],) {
  %149 = cast(%var_20706, dtype="float64") /* ty=Tensor[(10, 8, 4), float64] */;
  %150 = log10(%149) /* ty=Tensor[(10, 8, 4), float64] */;
  (%150,)
}

def @func_5645() -> (Tensor[(54), float32],) {
  %151 = @func_4726() /* ty=Tensor[(54), float32] */;
  (%151,)
}

def @func_12736() -> (Tensor[(3, 13, 8), float32],) {
  %153 = fn () -> (Tensor[(3, 13, 8), float32],) {
    %152 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
    (%152,)
  };
  %153() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_13913() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  @func_13911() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_7380(%var_7379: Tensor[(672), int8]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), int8], Tensor[(672), int8]) {
  %160 = fn (%var_7376: Tensor[(672), int8]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), int8], Tensor[(672), int8]) {
    %154 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %155 = cast(%var_7376, dtype="int8") /* ty=Tensor[(672), int8] */;
    %156 = reshape(%155, newshape=[3, 16, 14]) /* ty=Tensor[(3, 16, 14), int8] */;
    %157 = @func_2099(%156) /* ty=(Tensor[(3, 16, 14), int8],) */;
    %158 = %154.0;
    %159 = %157.0;
    (%158, %159, %var_7376)
  };
  %160(%var_7379) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), int8], Tensor[(672), int8]) */
}

def @func_13382() -> (Tensor[(9, 13, 1), bool], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) {
  %166 = fn () -> (Tensor[(9, 13, 1), bool], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) {
    %161 = cast(meta[relay.Constant][8] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %162 = reshape(%161, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), float32] */;
    %163 = @func_1608(%162) /* ty=(Tensor[(8, 8, 3), float32],) */;
    %164 = @func_10445() /* ty=Tensor[(9, 13, 1), bool] */;
    %165 = %163.0;
    (%164, %165, meta[relay.Constant][8] /* ty=Tensor[(192), float32] */)
  };
  %166() /* ty=(Tensor[(9, 13, 1), bool], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) */
}

def @func_14679(%var_14676: Tensor[(648), int32], %var_14677: Tensor[(104), float32], %var_14678: Tensor[(54, 16), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32], Tensor[(3, 13, 8), float32], Tensor[(104), float32], Tensor[(54, 16), float64], Tensor[(3, 13, 8), float32], Tensor[(54, 192), uint32]) {
  @func_14674(%var_14676, %var_14677, %var_14678) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32], Tensor[(3, 13, 8), float32], Tensor[(104), float32], Tensor[(54, 16), float64], Tensor[(3, 13, 8), float32], Tensor[(54, 192), uint32]) */
}

def @func_10126() -> (Tensor[(54), float32], Tensor[(3, 7, 6), float32]) {
  %171 = fn () -> (Tensor[(54), float32], Tensor[(3, 7, 6), float32]) {
    %167 = @func_5337() /* ty=(Tensor[(54), float32],) */;
    %168 = @func_7019() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
    %169 = %167.0;
    %170 = %168.0;
    (%169, %170)
  };
  %171() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_11576() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32]) {
  %177 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32]) {
    %172 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
    %173 = cast(%172, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
    %174 = reshape(%173, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
    %175 = @func_4943(%174) /* ty=(Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), bool]) */;
    %176 = %175.0;
    (%172, %176)
  };
  %177() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32]) */
}

def @func_17860(%var_17858: Tensor[(2, 9, 3), float32]) -> (Tensor[(2, 9, 3), uint32],) {
  @func_17857(%var_17858) /* ty=(Tensor[(2, 9, 3), uint32],) */
}

def @func_6313() -> (Tensor[(54), float32],) {
  @func_6311() /* ty=(Tensor[(54), float32],) */
}

def @func_17643(%var_17641: Tensor[(132), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(26, 4), bool], Tensor[(6, 2), float32], Tensor[(132), float32]) {
  @func_17640(%var_17641) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(26, 4), bool], Tensor[(6, 2), float32], Tensor[(132), float32]) */
}

def @func_5017(%var_5016: Tensor[(3, 7, 6), float32]) -> (Tensor[(3, 7, 6), int64], Tensor[(3, 13, 8), float32]) {
  %187 = fn (%var_4997: Tensor[(3, 7, 6), float32]) -> (Tensor[(3, 7, 6), int64], Tensor[(3, 13, 8), float32]) {
    %178 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %179 = %178.0;
    %180 = cast(%var_4997, dtype="int64") /* ty=Tensor[(3, 7, 6), int64] */;
    %181 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
    %182 = cast(%179, dtype="int64") /* ty=Tensor[(3, 7, 6), int64] */;
    %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %184 = @func_4550() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %185 = bitwise_xor(%182, %183) /* ty=Tensor[(3, 7, 6), int64] */;
    %186 = %184.0;
    (%185, %186)
  };
  %187(%var_5016) /* ty=(Tensor[(3, 7, 6), int64], Tensor[(3, 13, 8), float32]) */
}

def @func_18467() -> (Tensor[(3, 13, 8), float32],) {
  @func_18465() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_16009() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  @func_16007() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_20800(%var_20798: Tensor[(312), float32]) -> (Tensor[(3, 16, 14), float64], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) {
  @func_20797(%var_20798) /* ty=(Tensor[(3, 16, 14), float64], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) */
}

def @func_12377() -> Tensor[(144), uint8] {
  %189 = fn () -> Tensor[(144), uint8] {
    %188 = @func_8290() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) */;
    %188.1
  };
  %189() /* ty=Tensor[(144), uint8] */
}

def @func_11154(%var_11151: Tensor[(240), float32], %var_11152: Tensor[(126), float32], %var_11153: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(672), int8], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float32], Tensor[(126), float32], Tensor[(54), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(3, 13, 8), float32], Tensor[(100), int64], Tensor[(54), float32]) {
  %220 = fn (%var_11105: Tensor[(240), float32], %var_11111: Tensor[(126), float32], %var_11118: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(672), int8], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float32], Tensor[(126), float32], Tensor[(54), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(3, 13, 8), float32], Tensor[(100), int64], Tensor[(54), float32]) {
    %190 = @func_7019() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
    %191 = cast(meta[relay.Constant][9] /* ty=Tensor[(672), int8] */, dtype="int8") /* ty=Tensor[(672), int8] */;
    %192 = reshape(%191, newshape=[672]) /* ty=Tensor[(672), int8] */;
    %193 = @func_7378(%192) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), int8], Tensor[(672), int8]) */;
    %194 = cast(%var_11105, dtype="float32") /* ty=Tensor[(240), float32] */;
    %195 = cast(%var_11105, dtype="float32") /* ty=Tensor[(240), float32] */;
    %196 = reshape(%194, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
    %197 = reshape(%195, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
    %198 = cast(%var_11111, dtype="float32") /* ty=Tensor[(126), float32] */;
    %199 = cast(meta[relay.Constant][10] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
    %200 = reshape(%198, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
    %201 = reshape(%199, newshape=[54]) /* ty=Tensor[(54), float32] */;
    %202 = @func_4405(%200, %201) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32]) */;
    %203 = cast(%var_11118, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %204 = reshape(%203, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %205 = @func_10274(%204) /* ty=(Tensor[(54), float32], Tensor[(100), int64], Tensor[(144), uint8]) */;
    %206 = cast(%var_11111, dtype="float32") /* ty=Tensor[(126), float32] */;
    %207 = cast(%var_11118, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %208 = reshape(%206, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
    %209 = reshape(%207, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %210 = @func_5909(%208, %209) /* ty=(Tensor[(3, 7, 6), int16], Tensor[(100), int64], Tensor[(144), uint8]) */;
    %211 = @func_10125() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32]) */;
    %212 = %190.1;
    %213 = %193.1;
    %214 = @func_74(%196, %197) /* ty=Tensor[(2, 15, 8), float32] */;
    %215 = %202.2;
    %216 = %205.1;
    %217 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
    %218 = %210.1;
    %219 = %211.0;
    (%212, %213, meta[relay.Constant][9] /* ty=Tensor[(672), int8] */, %214, %var_11105, %215, %var_11111, meta[relay.Constant][10] /* ty=Tensor[(54), float32] */, %216, %var_11118, %217, %218, %219)
  };
  %220(%var_11151, %var_11152, %var_11153) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(672), int8], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float32], Tensor[(126), float32], Tensor[(54), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(3, 13, 8), float32], Tensor[(100), int64], Tensor[(54), float32]) */
}

def @func_12439(%var_12436: Tensor[(8, 8), bool], %var_12437: Tensor[(100), int64], %var_12438: Tensor[(144), uint8]) -> (Tensor[(54), float32], Tensor[(144), uint8], Tensor[(8), int16], Tensor[(8, 8), bool], Tensor[(100), int64], Tensor[(144), uint8]) {
  @func_12434(%var_12436, %var_12437, %var_12438) /* ty=(Tensor[(54), float32], Tensor[(144), uint8], Tensor[(8), int16], Tensor[(8, 8), bool], Tensor[(100), int64], Tensor[(144), uint8]) */
}

def @func_18146(%var_18144: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(312, 1), float32], Tensor[(144), uint8]) {
  @func_18143(%var_18144) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(312, 1), float32], Tensor[(144), uint8]) */
}

def @func_20722(%var_20720: Tensor[(10, 8, 4), float64]) -> (Tensor[(10, 8, 4), float64],) {
  @func_20719(%var_20720) /* ty=(Tensor[(10, 8, 4), float64],) */
}

def @func_12345() -> (Tensor[(3, 16, 14), int8], Tensor[(54), float32]) {
  %221 = @func_10648() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), int8], Tensor[(2, 15, 8), float32], Tensor[(126), float32], Tensor[(378, 4), float32]) */;
  %222 = @func_9470() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) */;
  %223 = %221.1;
  %224 = %222.0;
  (%223, %224)
}

def @func_20751() -> (Tensor[(54), float32], Tensor[(54), float32], Tensor[(3, 13, 8), float32]) {
  %225 = @func_19680() /* ty=(Tensor[(54), float32],) */;
  %226 = @func_8290() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) */;
  %227 = @func_5209() /* ty=Tensor[(54), float32] */;
  %228 = %225.0;
  %229 = %226.0;
  (%227, %228, %229)
}

def @func_7251(%var_7247: Tensor[(8, 1), int16], %var_7248: Tensor[(64), bool], %var_7249: Tensor[(100), int64], %var_7250: Tensor[(144), uint8]) -> (Tensor[(54), float32], Tensor[(3, 13, 9), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(2, 5, 10), int64], Tensor[(8, 64), int32]) {
  %256 = fn (%var_7176: Tensor[(8, 1), int16], %var_7177: Tensor[(64), bool], %var_7178: Tensor[(100), int64], %var_7179: Tensor[(144), uint8]) -> (Tensor[(54), float32], Tensor[(3, 13, 9), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(2, 5, 10), int64], Tensor[(8, 64), int32]) {
    %230 = @func_5275() /* ty=(Tensor[(54), float32],) */;
    %231 = cast(%var_7176, dtype="int16") /* ty=Tensor[(8, 1), int16] */;
    %232 = cast(%var_7177, dtype="bool") /* ty=Tensor[(64), bool] */;
    %233 = cast(%var_7178, dtype="int64") /* ty=Tensor[(100), int64] */;
    %234 = cast(%var_7179, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %235 = cast(meta[relay.Constant][11] /* ty=Tensor[(351), int64] */, dtype="int64") /* ty=Tensor[(351), int64] */;
    %236 = cast(meta[relay.Constant][12] /* ty=Tensor[(672), int8] */, dtype="int8") /* ty=Tensor[(672), int8] */;
    %237 = reshape(%231, newshape=[8]) /* ty=Tensor[(8), int16] */;
    %238 = reshape(%232, newshape=[1, 64]) /* ty=Tensor[(1, 64), bool] */;
    %239 = reshape(%233, newshape=[100]) /* ty=Tensor[(100), int64] */;
    %240 = reshape(%234, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %241 = reshape(%235, newshape=[351]) /* ty=Tensor[(351), int64] */;
    %242 = reshape(%236, newshape=[672]) /* ty=Tensor[(672), int8] */;
    %243 = @func_6821(%237, %238, %239, %240, %241, %242) /* ty=(Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(8), int16], Tensor[(1, 64), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(120, 2), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), float32], Tensor[(351), int64], Tensor[(3, 16, 14), int8], Tensor[(672), int8], Tensor[(3, 13, 8), float32]) */;
    %244 = cast(%var_7179, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %245 = reshape(%244, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint8] */;
    %246 = @func_2959(%245) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
    %247 = cast(%var_7177, dtype="float32") /* ty=Tensor[(64), float32] */;
    %248 = cast(%var_7176, dtype="float32") /* ty=Tensor[(8, 1), float32] */;
    %249 = floor_divide(%247, %248) /* ty=Tensor[(8, 64), float32] */;
    %250 = cast(%249, dtype="int32") /* ty=Tensor[(8, 64), int32] */;
    %251 = cast(%var_7177, dtype="int32") /* ty=Tensor[(64), int32] */;
    %252 = %230.0;
    %253 = %243.13;
    %254 = %246.1;
    %255 = minimum(%250, %251) /* ty=Tensor[(8, 64), int32] */;
    (%252, %253, %var_7178, %var_7179, meta[relay.Constant][11] /* ty=Tensor[(351), int64] */, meta[relay.Constant][12] /* ty=Tensor[(672), int8] */, %254, %255)
  };
  %256(%var_7247, %var_7248, %var_7249, %var_7250) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 9), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(2, 5, 10), int64], Tensor[(8, 64), int32]) */
}

def @func_14674(%var_14625: Tensor[(648), int32], %var_14635: Tensor[(104), float32], %var_14637: Tensor[(54, 16), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32], Tensor[(3, 13, 8), float32], Tensor[(104), float32], Tensor[(54, 16), float64], Tensor[(3, 13, 8), float32], Tensor[(54, 192), uint32]) {
  %257 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %258 = cast(%var_14625, dtype="int32") /* ty=Tensor[(648), int32] */;
  %259 = cast(%var_14625, dtype="int32") /* ty=Tensor[(648), int32] */;
  %260 = reshape(%258, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %261 = reshape(%259, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %262 = @func_8006(%260, %261) /* ty=(Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) */;
  %263 = cast(%var_14635, dtype="float32") /* ty=Tensor[(104), float32] */;
  %264 = reshape(%263, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float32] */;
  %265 = @func_8482(%264) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(126), float32], Tensor[(54, 1), float32], Tensor[(54), float32], Tensor[(4, 13, 2), float64], Tensor[(3, 13, 8), float32]) */;
  %266 = %265.2;
  %267 = cast(%266, dtype="float64") /* ty=Tensor[(54, 1), float64] */;
  %268 = cast(%var_14637, dtype="float64") /* ty=Tensor[(54, 16), float64] */;
  %269 = @func_11216() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %270 = @func_13381() /* ty=(Tensor[(9, 13, 1), bool], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) */;
  %271 = %270.2;
  %272 = cast(%271, dtype="uint32") /* ty=Tensor[(192), uint32] */;
  %273 = cast(%266, dtype="uint32") /* ty=Tensor[(54, 1), uint32] */;
  %274 = %257.0;
  %275 = %262.0;
  %276 = @func_9625() /* ty=Tensor[(3, 13, 8), float32] */;
  %277 = floor_mod(%267, %268) /* ty=Tensor[(54, 16), float64] */;
  %278 = %269.0;
  %279 = multiply(%272, %273) /* ty=Tensor[(54, 192), uint32] */;
  (%274, %275, %var_14625, %276, %var_14635, %277, %278, %279)
}

def @func_9285() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) {
  @func_9283() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */
}

def @func_19060() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  @func_19058() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_21916() -> (Tensor[(3, 7, 6), float32],) {
  %280 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
  (%280,)
}

def @func_14369() -> (Tensor[(54), float32], Tensor[(9, 13, 1), bool]) {
  @func_14367() /* ty=(Tensor[(54), float32], Tensor[(9, 13, 1), bool]) */
}

def @func_6829(%var_6823: Tensor[(8), int16], %var_6824: Tensor[(1, 64), bool], %var_6825: Tensor[(100), int64], %var_6826: Tensor[(144), uint8], %var_6827: Tensor[(351), int64], %var_6828: Tensor[(672), int8]) -> (Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(8), int16], Tensor[(1, 64), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(120, 2), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), float32], Tensor[(351), int64], Tensor[(3, 16, 14), int8], Tensor[(672), int8], Tensor[(3, 13, 8), float32]) {
  @func_6821(%var_6823, %var_6824, %var_6825, %var_6826, %var_6827, %var_6828) /* ty=(Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(8), int16], Tensor[(1, 64), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(120, 2), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), float32], Tensor[(351), int64], Tensor[(3, 16, 14), int8], Tensor[(672), int8], Tensor[(3, 13, 8), float32]) */
}

def @func_5773() -> (Tensor[(3, 7, 6), float32],) {
  %283 = fn () -> (Tensor[(3, 7, 6), float32],) {
    %281 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %282 = %281.0;
    (%282,)
  };
  %283() /* ty=(Tensor[(3, 7, 6), float32],) */
}

def @func_6065() -> (Tensor[(3, 13, 8), float64], Tensor[(100), int64], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32]) {
  %298 = fn () -> (Tensor[(3, 13, 8), float64], Tensor[(100), int64], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32]) {
    %284 = @func_5183() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %285 = %284.0;
    %286 = cast(%285, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
    %287 = asinh(%286) /* ty=Tensor[(3, 13, 8), float32] */;
    %288 = cast(%287, dtype="float64") /* ty=Tensor[(3, 13, 8), float64] */;
    %289 = cast(meta[relay.Constant][13] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %290 = cast(meta[relay.Constant][14] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %291 = reshape(%289, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
    %292 = reshape(%290, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %293 = @func_5909(%291, %292) /* ty=(Tensor[(3, 7, 6), int16], Tensor[(100), int64], Tensor[(144), uint8]) */;
    %294 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
    %295 = sqrt(%288) /* ty=Tensor[(3, 13, 8), float64] */;
    %296 = %293.1;
    %297 = %294.0;
    (%295, %296, meta[relay.Constant][13] /* ty=Tensor[(126), float32] */, meta[relay.Constant][14] /* ty=Tensor[(144), uint8] */, %297)
  };
  %298() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(100), int64], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32]) */
}

def @func_16409(%var_16390: Tensor[(100), int64], %var_16392: Tensor[(144), uint8], %var_16407: Tensor[(728), bool]) -> (Tensor[(3, 7, 6), float32], Tensor[(144), uint8], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(312), float32], Tensor[(3, 13, 8), float32], bool, Tensor[(728), bool]) {
  %299 = cast(%var_16390, dtype="int64") /* ty=Tensor[(100), int64] */;
  %300 = cast(meta[relay.Constant][15] /* ty=Tensor[(320), uint16] */, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %301 = cast(%var_16392, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %302 = reshape(%299, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %303 = reshape(%300, newshape=[320]) /* ty=Tensor[(320), uint16] */;
  %304 = reshape(%301, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %305 = @func_4442(%302, %303, %304) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(8, 5, 8), bool], Tensor[(320), uint16], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %306 = cast(meta[relay.Constant][16] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %307 = cast(%var_16392, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %308 = reshape(%306, newshape=[312, 1]) /* ty=Tensor[(312, 1), float32] */;
  %309 = reshape(%307, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %310 = @func_7948(%308, %309) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), uint32], Tensor[(312, 1), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %311 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %312 = cast(%var_16407, dtype="bool") /* ty=Tensor[(728), bool] */;
  %313 = reshape(%311, newshape=[]) /* ty=bool */;
  %314 = reshape(%312, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), bool] */;
  %315 = @func_16052(%313, %314) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(7, 8, 13), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %316 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
  %317 = %305.6;
  %318 = %310.0;
  %319 = %315.2;
  (%316, %317, %var_16390, meta[relay.Constant][15] /* ty=Tensor[(320), uint16] */, %var_16392, %318, meta[relay.Constant][16] /* ty=Tensor[(312), float32] */, %319, False /* ty=bool */, %var_16407)
}

def @func_9587() -> Tensor[(3, 7, 6), float32] {
  @func_9585() /* ty=Tensor[(3, 7, 6), float32] */
}

def @func_16997(%var_16996: Tensor[(12), float32]) -> (Tensor[(100), int64], Tensor[(9, 9, 8), bool], Tensor[(648), int32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(648), int32], Tensor[(3, 7, 6), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32], Tensor[(12), float32], Tensor[(132), float32], Tensor[(26, 4), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), float64]) {
  %347 = fn (%var_16897: Tensor[(12), float32]) -> (Tensor[(100), int64], Tensor[(9, 9, 8), bool], Tensor[(648), int32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(648), int32], Tensor[(3, 7, 6), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32], Tensor[(12), float32], Tensor[(132), float32], Tensor[(26, 4), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), float64]) {
    %320 = @func_15120() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(3, 16, 14), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(9, 13, 1), bool]) */;
    %321 = cast(meta[relay.Constant][17] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
    %322 = cast(meta[relay.Constant][17] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
    %323 = reshape(%321, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
    %324 = reshape(%322, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
    %325 = @func_8006(%323, %324) /* ty=(Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) */;
    %326 = @func_5772() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %327 = @func_12632() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32]) */;
    %328 = @func_5759() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %329 = cast(%var_16897, dtype="float32") /* ty=Tensor[(12), float32] */;
    %330 = cast(meta[relay.Constant][18] /* ty=Tensor[(132), float32] */, dtype="float32") /* ty=Tensor[(132), float32] */;
    %331 = cast(meta[relay.Constant][19] /* ty=Tensor[(26, 4), float32] */, dtype="float32") /* ty=Tensor[(26, 4), float32] */;
    %332 = reshape(%329, newshape=[6, 1, 2]) /* ty=Tensor[(6, 1, 2), float32] */;
    %333 = reshape(%330, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), float32] */;
    %334 = reshape(%331, newshape=[104]) /* ty=Tensor[(104), float32] */;
    %335 = @func_16603(%332, %333, %334) /* ty=(Tensor[(6, 11, 2), float32], Tensor[(3, 13, 8), float32], Tensor[(104), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
    %336 = @func_10702() /* ty=(Tensor[(3, 16, 14), float64],) */;
    %337 = %320.1;
    %338 = %325.0;
    %339 = %326.0;
    %340 = @func_10900() /* ty=Tensor[(3, 13, 8), float32] */;
    %341 = %327.3;
    %342 = %328.0;
    %343 = @func_12376() /* ty=Tensor[(144), uint8] */;
    %344 = %335.4;
    %345 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
    %346 = %336.0;
    (%337, %338, meta[relay.Constant][17] /* ty=Tensor[(648), int32] */, %339, %340, %341, %342, %343, %344, %var_16897, meta[relay.Constant][18] /* ty=Tensor[(132), float32] */, meta[relay.Constant][19] /* ty=Tensor[(26, 4), float32] */, %345, %346)
  };
  %347(%var_16996) /* ty=(Tensor[(100), int64], Tensor[(9, 9, 8), bool], Tensor[(648), int32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(648), int32], Tensor[(3, 7, 6), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32], Tensor[(12), float32], Tensor[(132), float32], Tensor[(26, 4), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), float64]) */
}

def @func_20402() -> Tensor[(8, 5, 8), bool] {
  @func_20400() /* ty=Tensor[(8, 5, 8), bool] */
}

def @func_9010(%var_9006: Tensor[(672), int8], %var_9007: Tensor[(100), int64], %var_9008: Tensor[(312), float32], %var_9009: Tensor[(32, 2), bool]) -> (Tensor[(54), float32], Tensor[(672), int8], Tensor[(672), int8], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(312), float32], Tensor[(2, 5, 10), float64], Tensor[(8, 5, 8), bool], Tensor[(100), int64], Tensor[(8), int16], Tensor[(32, 2), bool]) {
  %391 = fn (%var_8917: Tensor[(672), int8], %var_8922: Tensor[(100), int64], %var_8954: Tensor[(312), float32], %var_8997: Tensor[(32, 2), bool]) -> (Tensor[(54), float32], Tensor[(672), int8], Tensor[(672), int8], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(312), float32], Tensor[(2, 5, 10), float64], Tensor[(8, 5, 8), bool], Tensor[(100), int64], Tensor[(8), int16], Tensor[(32, 2), bool]) {
    %348 = @func_7415() /* ty=(Tensor[(54), float32],) */;
    %349 = cast(%var_8917, dtype="int8") /* ty=Tensor[(672), int8] */;
    %350 = reshape(%349, newshape=[672]) /* ty=Tensor[(672), int8] */;
    %351 = @func_7378(%350) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), int8], Tensor[(672), int8]) */;
    %352 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %353 = cast(%var_8954, dtype="float32") /* ty=Tensor[(312), float32] */;
    %354 = cast(meta[relay.Constant][21] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %355 = reshape(%353, newshape=[312, 1]) /* ty=Tensor[(312, 1), float32] */;
    %356 = reshape(%354, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %357 = @func_7948(%355, %356) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), uint32], Tensor[(312, 1), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
    %358 = cast(%var_8922, dtype="int64") /* ty=Tensor[(100), int64] */;
    %359 = cast(meta[relay.Constant][20] /* ty=Tensor[(320), uint16] */, dtype="uint16") /* ty=Tensor[(320), uint16] */;
    %360 = cast(meta[relay.Constant][21] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %361 = reshape(%358, newshape=[100]) /* ty=Tensor[(100), int64] */;
    %362 = reshape(%359, newshape=[320]) /* ty=Tensor[(320), uint16] */;
    %363 = reshape(%360, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %364 = @func_4442(%361, %362, %363) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(8, 5, 8), bool], Tensor[(320), uint16], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
    %365 = %364.1;
    %366 = cast(%365, dtype="float32") /* ty=Tensor[(2, 5, 10), float32] */;
    %367 = sigmoid(%366) /* ty=Tensor[(2, 5, 10), float32] */;
    %368 = cast(%365, dtype="float64") /* ty=Tensor[(2, 5, 10), float64] */;
    %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(3), int32] */;
    %370 = cast(%367, dtype="float64") /* ty=Tensor[(2, 5, 10), float64] */;
    %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %372 = cast(meta[relay.Constant][20] /* ty=Tensor[(320), uint16] */, dtype="uint16") /* ty=Tensor[(320), uint16] */;
    %373 = reshape(%372, newshape=[8, 5, 8]) /* ty=Tensor[(8, 5, 8), uint16] */;
    %374 = @func_1991(%373) /* ty=(Tensor[(8, 5, 8), bool],) */;
    %375 = cast(meta[relay.Constant][22] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
    %376 = cast(%var_8997, dtype="bool") /* ty=Tensor[(32, 2), bool] */;
    %377 = cast(%365, dtype="int64") /* ty=Tensor[(2, 5, 10), int64] */;
    %378 = cast(meta[relay.Constant][21] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %379 = reshape(%375, newshape=[8, 1]) /* ty=Tensor[(8, 1), int16] */;
    %380 = reshape(%376, newshape=[64]) /* ty=Tensor[(64), bool] */;
    %381 = reshape(%377, newshape=[100]) /* ty=Tensor[(100), int64] */;
    %382 = reshape(%378, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %383 = @func_7246(%379, %380, %381, %382) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 9), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(2, 5, 10), int64], Tensor[(8, 64), int32]) */;
    %384 = %348.0;
    %385 = %351.2;
    %386 = %352.0;
    %387 = %357.0;
    %388 = floor_divide(%370, %371) /* ty=Tensor[(2, 5, 10), float64] */;
    %389 = %374.0;
    %390 = %383.2;
    (%384, %385, %var_8917, %var_8922, meta[relay.Constant][20] /* ty=Tensor[(320), uint16] */, meta[relay.Constant][21] /* ty=Tensor[(144), uint8] */, %386, %387, %var_8954, %388, %389, %390, meta[relay.Constant][22] /* ty=Tensor[(8), int16] */, %var_8997)
  };
  %391(%var_9006, %var_9007, %var_9008, %var_9009) /* ty=(Tensor[(54), float32], Tensor[(672), int8], Tensor[(672), int8], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(312), float32], Tensor[(2, 5, 10), float64], Tensor[(8, 5, 8), bool], Tensor[(100), int64], Tensor[(8), int16], Tensor[(32, 2), bool]) */
}

def @func_15962() -> (Tensor[(54), float32],) {
  %392 = @func_5275() /* ty=(Tensor[(54), float32],) */;
  %393 = %392.0;
  (%393,)
}

def @func_12347() -> (Tensor[(3, 16, 14), int8], Tensor[(54), float32]) {
  @func_12345() /* ty=(Tensor[(3, 16, 14), int8], Tensor[(54), float32]) */
}

def @func_664(%var_661: Tensor[(2, 9, 3), float32]) -> (Tensor[(2, 9, 3), float32],) {
  %394 = cast(%var_661, dtype="float32") /* ty=Tensor[(2, 9, 3), float32] */;
  %395 = log10(%394) /* ty=Tensor[(2, 9, 3), float32] */;
  (%395,)
}

def @func_5131() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) {
  %413 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) {
    %396 = @func_4499() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */;
    %397 = %396.0;
    %398 = cast(%397, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
    %399 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %400 = cast(meta[relay.Constant][23] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
    %401 = cast(meta[relay.Constant][24] /* ty=Tensor[(24, 10), float32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
    %402 = reshape(%400, newshape=[10, 3, 13]) /* ty=Tensor[(10, 3, 13), float32] */;
    %403 = reshape(%401, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %404 = @func_1548(%402, %403) /* ty=(Tensor[(10, 3, 13), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(2, 5, 10), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 5, 10), int64], Tensor[(2, 5, 10), int64]) */;
    %405 = cast(meta[relay.Constant][24] /* ty=Tensor[(24, 10), float32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
    %406 = cast(meta[relay.Constant][24] /* ty=Tensor[(24, 10), float32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
    %407 = reshape(%405, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
    %408 = reshape(%406, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
    %409 = acos(%398) /* ty=Tensor[(3, 13, 8), float32] */;
    %410 = %399.0;
    %411 = %404.3;
    %412 = @func_74(%407, %408) /* ty=Tensor[(2, 15, 8), float32] */;
    (%409, %410, %411, meta[relay.Constant][23] /* ty=Tensor[(390), float32] */, meta[relay.Constant][24] /* ty=Tensor[(24, 10), float32] */, %412)
  };
  %413() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) */
}

def @func_7393() -> (Tensor[(54), float32],) {
  @func_7391() /* ty=(Tensor[(54), float32],) */
}

def @func_17780() -> (Tensor[(54), float32], Tensor[(9, 13, 54), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) {
  %420 = fn () -> (Tensor[(54), float32], Tensor[(9, 13, 54), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) {
    %414 = @func_6311() /* ty=(Tensor[(54), float32],) */;
    %415 = @func_12263() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(2, 5, 10), int64], Tensor[(9, 13, 54), float32]) */;
    %416 = %414.0;
    %417 = %415.3;
    %418 = @func_11552() /* ty=Tensor[(3, 13, 8), float32] */;
    %419 = @func_10445() /* ty=Tensor[(9, 13, 1), bool] */;
    (%416, %417, %418, %419)
  };
  %420() /* ty=(Tensor[(54), float32], Tensor[(9, 13, 54), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) */
}

def @func_18110() -> (Tensor[(54), float32],) {
  @func_18108() /* ty=(Tensor[(54), float32],) */
}

def @func_4683(%var_4681: uint32, %var_4682: Tensor[(8, 13, 12), uint32]) -> Tensor[(8, 13, 12), bool] {
  @func_4679(%var_4681, %var_4682) /* ty=Tensor[(8, 13, 12), bool] */
}

def @func_17830() -> (Tensor[(144), uint8],) {
  %421 = @func_8290() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) */;
  %422 = %421.1;
  (%422,)
}

def @func_20232(%var_20231: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(144), uint8], Tensor[(144), uint8]) {
  %428 = fn (%var_20215: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(144), uint8], Tensor[(144), uint8]) {
    %423 = cast(%var_20215, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %424 = reshape(%423, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %425 = @func_18143(%424) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(312, 1), float32], Tensor[(144), uint8]) */;
    %426 = @func_9625() /* ty=Tensor[(3, 13, 8), float32] */;
    %427 = %425.2;
    (%426, %427, %var_20215)
  };
  %428(%var_20231) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8], Tensor[(144), uint8]) */
}

def @func_5437(%var_5358: Tensor[(1, 2, 4), int16], %var_5359: Tensor[(1, 2, 4), int16], %var_5379: Tensor[(8, 2, 4), bool], %var_5385: Tensor[(100), int64], %var_5386: Tensor[(320), uint16], %var_5428: Tensor[(240), float32]) -> (Tensor[(8, 2, 4), int64], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(2, 5, 10), float64], Tensor[(100), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32]) {
  %429 = cast(%var_5359, dtype="bool") /* ty=Tensor[(1, 2, 4), bool] */;
  %430 = shape_of(%var_5358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%var_5358, dtype="bool") /* ty=Tensor[(1, 2, 4), bool] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %433 = equal(%431, %432) /* ty=Tensor[(?, 2, 4), bool] */;
  %434 = cast(%433, dtype="int64") /* ty=Tensor[(?, 2, 4), int64] */;
  %435 = cast(%var_5379, dtype="int64") /* ty=Tensor[(8, 2, 4), int64] */;
  %436 = cast(%var_5385, dtype="int64") /* ty=Tensor[(100), int64] */;
  %437 = cast(%var_5386, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %438 = cast(meta[relay.Constant][25] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %439 = reshape(%436, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %440 = reshape(%437, newshape=[320]) /* ty=Tensor[(320), uint16] */;
  %441 = reshape(%438, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %442 = @func_4442(%439, %440, %441) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(8, 5, 8), bool], Tensor[(320), uint16], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %443 = %442.5;
  %444 = cast(%443, dtype="float64") /* ty=Tensor[(2, 5, 10), float64] */;
  %445 = cast(meta[relay.Constant][25] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %446 = reshape(%445, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint8] */;
  %447 = @func_2959(%446) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %448 = cast(%var_5428, dtype="float32") /* ty=Tensor[(240), float32] */;
  %449 = cast(%var_5428, dtype="float32") /* ty=Tensor[(240), float32] */;
  %450 = reshape(%448, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %451 = reshape(%449, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %452 = bitwise_xor(%434, %435) /* ty=Tensor[(8, 2, 4), int64] */;
  %453 = asin(%444) /* ty=Tensor[(2, 5, 10), float64] */;
  %454 = %447.2;
  %455 = @func_74(%450, %451) /* ty=Tensor[(2, 15, 8), float32] */;
  (%452, %var_5385, %var_5386, meta[relay.Constant][25] /* ty=Tensor[(144), uint8] */, %453, %454, %455, %var_5428)
}

def @func_19032() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  @func_19030() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_16148() -> Tensor[(54), float32] {
  @func_4726() /* ty=Tensor[(54), float32] */
}

def @func_5519(%var_5518: Tensor[(240), float32]) -> (Tensor[(14, 10, 15), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(240), float32], Tensor[(3, 13, 8), uint32], Tensor[(312), float32], Tensor[(126), float32]) {
  %470 = fn (%var_5487: Tensor[(240), float32]) -> (Tensor[(14, 10, 15), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(240), float32], Tensor[(3, 13, 8), uint32], Tensor[(312), float32], Tensor[(126), float32]) {
    %456 = cast(meta[relay.Constant][26] /* ty=Tensor[(14, 10, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 15), float32] */;
    %457 = cast(meta[relay.Constant][27] /* ty=Tensor[(390), float32] */, dtype="float32") /* ty=Tensor[(390), float32] */;
    %458 = cast(%var_5487, dtype="float32") /* ty=Tensor[(240), float32] */;
    %459 = reshape(%457, newshape=[10, 3, 13]) /* ty=Tensor[(10, 3, 13), float32] */;
    %460 = reshape(%458, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %461 = @func_1548(%459, %460) /* ty=(Tensor[(10, 3, 13), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(2, 5, 10), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 5, 10), int64], Tensor[(2, 5, 10), int64]) */;
    %462 = cast(meta[relay.Constant][28] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
    %463 = reshape(%462, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
    %464 = @func_4943(%463) /* ty=(Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), bool]) */;
    %465 = @func_4499() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */;
    %466 = acos(%456) /* ty=Tensor[(14, 10, 15), float32] */;
    %467 = %461.6;
    %468 = %464.0;
    %469 = %465.2;
    (%466, %467, meta[relay.Constant][27] /* ty=Tensor[(390), float32] */, %var_5487, %468, meta[relay.Constant][28] /* ty=Tensor[(312), float32] */, %469)
  };
  %470(%var_5518) /* ty=(Tensor[(14, 10, 15), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(240), float32], Tensor[(3, 13, 8), uint32], Tensor[(312), float32], Tensor[(126), float32]) */
}

def @func_19276() -> (Tensor[(54), float32],) {
  %473 = fn () -> (Tensor[(54), float32],) {
    %471 = @func_9470() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) */;
    %472 = %471.0;
    (%472,)
  };
  %473() /* ty=(Tensor[(54), float32],) */
}

def @func_2102(%var_2100: Tensor[(3, 16, 14), int8]) -> (Tensor[(3, 16, 14), int8],) {
  @func_2099(%var_2100) /* ty=(Tensor[(3, 16, 14), int8],) */
}

def @func_15754() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  @func_15752() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_11918() -> Tensor[(3, 13, 8), uint32] {
  %474 = @func_11575() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32]) */;
  %474.1
}

def @func_10326() -> (Tensor[(3, 7, 6), float32],) {
  @func_10324() /* ty=(Tensor[(3, 7, 6), float32],) */
}

def @func_14472() -> (Tensor[(3, 7, 6), float32],) {
  %476 = fn () -> (Tensor[(3, 7, 6), float32],) {
    %475 = @func_9585() /* ty=Tensor[(3, 7, 6), float32] */;
    (%475,)
  };
  %476() /* ty=(Tensor[(3, 7, 6), float32],) */
}

def @func_16109(%var_16105: Tensor[(8), int16], %var_16106: Tensor[(64), bool], %var_16107: Tensor[(1, 144), uint8], %var_16108: Tensor[(672), int8]) -> (Tensor[(3, 13, 8), float32], Tensor[(144), uint8], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(1, 144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(3, 16, 14), float64]) {
  @func_16103(%var_16105, %var_16106, %var_16107, %var_16108) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(1, 144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(3, 16, 14), float64]) */
}

def @func_13875() -> (Tensor[(3, 16, 14), float64], Tensor[(54), float32]) {
  %477 = @func_10702() /* ty=(Tensor[(3, 16, 14), float64],) */;
  %478 = @func_5275() /* ty=(Tensor[(54), float32],) */;
  %479 = %477.0;
  %480 = %478.0;
  (%479, %480)
}

def @func_17912() -> (Tensor[(54), float32],) {
  %483 = fn () -> (Tensor[(54), float32],) {
    %481 = @func_5337() /* ty=(Tensor[(54), float32],) */;
    %482 = %481.0;
    (%482,)
  };
  %483() /* ty=(Tensor[(54), float32],) */
}

def @func_5839() -> Tensor[(3, 7, 6), float32] {
  @func_5837() /* ty=Tensor[(3, 7, 6), float32] */
}

def @func_21582(%var_21562: Tensor[(240), float32]) -> (Tensor[(8, 8, 3), float32], Tensor[(54), float32], Tensor[(100), int64], Tensor[(4, 16), bool], Tensor[(144), uint8], Tensor[(240), float32]) {
  %484 = @func_16529() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), float64], Tensor[(8, 8, 3), float32]) */;
  %485 = @func_11476() /* ty=(Tensor[(54), float32],) */;
  %486 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 16), bool] */, dtype="bool") /* ty=Tensor[(4, 16), bool] */;
  %487 = cast(meta[relay.Constant][30] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %488 = cast(%var_21562, dtype="float32") /* ty=Tensor[(240), float32] */;
  %489 = reshape(%486, newshape=[64]) /* ty=Tensor[(64), bool] */;
  %490 = reshape(%487, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %491 = reshape(%488, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %492 = @func_10429(%489, %490, %491) /* ty=(Tensor[(54), float32], Tensor[(126), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(672), int8], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(8, 5, 8), bool], Tensor[(240), float32]) */;
  %493 = %484.2;
  %494 = %485.0;
  %495 = %492.8;
  (%493, %494, %495, meta[relay.Constant][29] /* ty=Tensor[(4, 16), bool] */, meta[relay.Constant][30] /* ty=Tensor[(144), uint8] */, %var_21562)
}

def @func_6311() -> (Tensor[(54), float32],) {
  %496 = @func_5209() /* ty=Tensor[(54), float32] */;
  (%496,)
}

def @func_2489(%var_2487: Tensor[(3, 13, 9), int64], %var_2488: Tensor[(3, 13, 9), int64]) -> (Tensor[(3, 13, 9), int64], Tensor[(3, 13, 9), float32]) {
  %506 = fn (%var_2466: Tensor[(3, 13, 9), int64], %var_2467: Tensor[(3, 13, 9), int64]) -> (Tensor[(3, 13, 9), int64], Tensor[(3, 13, 9), float32]) {
    %497 = cast(%var_2467, dtype="int64") /* ty=Tensor[(3, 13, 9), int64] */;
    %498 = shape_of(%var_2466, dtype="int32") /* ty=Tensor[(3), int32] */;
    %499 = cast(%var_2466, dtype="int64") /* ty=Tensor[(3, 13, 9), int64] */;
    %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %501 = cast(%var_2466, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
    %502 = sin(%501) /* ty=Tensor[(3, 13, 9), float32] */;
    %503 = cast(%502, dtype="float32") /* ty=Tensor[(3, 13, 9), float32] */;
    %504 = right_shift(%499, %500) /* ty=Tensor[(3, 13, 9), int64] */;
    %505 = tan(%503) /* ty=Tensor[(3, 13, 9), float32] */;
    (%504, %505)
  };
  %506(%var_2487, %var_2488) /* ty=(Tensor[(3, 13, 9), int64], Tensor[(3, 13, 9), float32]) */
}

def @func_19964() -> (Tensor[(126, 1), float32], Tensor[(54), float32]) {
  %507 = @func_16335() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(126, 1), float32]) */;
  %508 = @func_17911() /* ty=(Tensor[(54), float32],) */;
  %509 = %507.3;
  %510 = %508.0;
  (%509, %510)
}

def @func_6921() -> (Tensor[(2, 15, 8), float32],) {
  @func_6919() /* ty=(Tensor[(2, 15, 8), float32],) */
}

def @func_20400() -> Tensor[(8, 5, 8), bool] {
  %511 = @func_20156() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(8, 5, 8), bool], Tensor[(320), uint16]) */;
  %511.1
}

def @func_21345(%var_21344: Tensor[(4, 12, 10), int64]) -> (Tensor[(4, 12, 10), bool],) {
  %517 = fn (%var_21328: Tensor[(4, 12, 10), int64]) -> (Tensor[(4, 12, 10), bool],) {
    %512 = cast(%var_21328, dtype="bool") /* ty=Tensor[(4, 12, 10), bool] */;
    %513 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(4, 12, 10), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %514 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 12, 10), int64] */, dtype="bool") /* ty=Tensor[(4, 12, 10), bool] */;
    %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %516 = less_equal(%514, %515) /* ty=Tensor[(4, 12, 10), bool] */;
    (%516,)
  };
  %517(%var_21344) /* ty=(Tensor[(4, 12, 10), bool],) */
}

def @func_19058() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  %518 = @func_10324() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %519 = @func_14471() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %520 = %518.0;
  %521 = %519.0;
  (%520, %521)
}

def @func_10026(%var_10011: Tensor[(15, 2, 16), float32]) -> (Tensor[(15, 2, 16), float32], Tensor[(54), float32]) {
  %522 = cast(%var_10011, dtype="float32") /* ty=Tensor[(15, 2, 16), float32] */;
  %523 = @func_8097() /* ty=(Tensor[(54), float32], Tensor[(54), float32]) */;
  %524 = atanh(%522) /* ty=Tensor[(15, 2, 16), float32] */;
  %525 = %523.0;
  (%524, %525)
}

def @func_21261(%var_21259: Tensor[(16, 15, 16), float32], %var_21260: Tensor[(16, 15, 16), float32]) -> (Tensor[(2, 5, 10), int64], Tensor[(3, 13, 8), float32], Tensor[(3, 216), bool], Tensor[(3, 13, 8), float64], Tensor[(16, 15, 16), int16]) {
  %540 = fn (%var_21203: Tensor[(16, 15, 16), float32], %var_21252: Tensor[(16, 15, 16), float32]) -> (Tensor[(2, 5, 10), int64], Tensor[(3, 13, 8), float32], Tensor[(3, 216), bool], Tensor[(3, 13, 8), float64], Tensor[(16, 15, 16), int16]) {
    %526 = @func_14252() /* ty=(Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
    %527 = @func_11575() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32]) */;
    %528 = @func_9979() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 216), bool], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
    %529 = cast(%var_21203, dtype="float32") /* ty=Tensor[(16, 15, 16), float32] */;
    %530 = exp(%529) /* ty=Tensor[(16, 15, 16), float32] */;
    %531 = cast(%var_21252, dtype="int16") /* ty=Tensor[(16, 15, 16), int16] */;
    %532 = shape_of(%530, dtype="int32") /* ty=Tensor[(3), int32] */;
    %533 = cast(%530, dtype="int16") /* ty=Tensor[(16, 15, 16), int16] */;
    %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %535 = %526.0;
    %536 = %527.0;
    %537 = %528.2;
    %538 = @func_15047() /* ty=Tensor[(3, 13, 8), float64] */;
    %539 = logical_xor(%533, %534) /* ty=Tensor[(16, 15, 16), int16] */;
    (%535, %536, %537, %538, %539)
  };
  %540(%var_21259, %var_21260) /* ty=(Tensor[(2, 5, 10), int64], Tensor[(3, 13, 8), float32], Tensor[(3, 216), bool], Tensor[(3, 13, 8), float64], Tensor[(16, 15, 16), int16]) */
}

def @func_21869() -> Tensor[(54), float32] {
  %541 = @func_5337() /* ty=(Tensor[(54), float32],) */;
  %541.0
}

def @func_12598() -> (Tensor[(54), float32], Tensor[(3, 7, 6), float32]) {
  %545 = fn () -> (Tensor[(54), float32], Tensor[(3, 7, 6), float32]) {
    %542 = @func_6102() /* ty=(Tensor[(3, 7, 6), float64], Tensor[(54), float32]) */;
    %543 = %542.1;
    %544 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
    (%543, %544)
  };
  %545() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_18630() -> (Tensor[(3, 7, 6), float32],) {
  %546 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %547 = %546.0;
  (%547,)
}

def @func_18587() -> Tensor[(3, 7, 6), float32] {
  %548 = @func_14866() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
  %548.0
}

def @func_16707(%var_16674: Tensor[(7, 1, 15), float32]) -> (Tensor[(7, 1, 15), float32], Tensor[(9, 13, 1), bool], Tensor[(54), float32], Tensor[(3, 13, 8), float32]) {
  %549 = cast(%var_16674, dtype="float32") /* ty=Tensor[(7, 1, 15), float32] */;
  %550 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %551 = acosh(%549) /* ty=Tensor[(7, 1, 15), float32] */;
  %552 = @func_10747() /* ty=Tensor[(9, 13, 1), bool] */;
  %553 = @func_5209() /* ty=Tensor[(54), float32] */;
  %554 = %550.0;
  (%551, %552, %553, %554)
}

def @func_10087() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) {
  %555 = @func_6222() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(8, 5, 5), bool], Tensor[(200), bool], Tensor[(3, 7, 6), float32]) */;
  %556 = @func_7664() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), bool]) */;
  %557 = @func_8097() /* ty=(Tensor[(54), float32], Tensor[(54), float32]) */;
  %558 = %555.1;
  %559 = %556.3;
  %560 = %557.0;
  (%558, %559, %560)
}

def @func_17510() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), float64]) {
  %561 = @func_14223() /* ty=(Tensor[(3, 16, 14), float64],) */;
  %562 = @func_13487() /* ty=Tensor[(3, 13, 8), float32] */;
  %563 = %561.0;
  (%562, %563)
}

def @func_22095(%var_22093: Tensor[(16, 11, 1), float32], %var_22094: Tensor[(16, 11, 16), float32]) -> (Tensor[(16, 11, 16), bool], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  @func_22091(%var_22093, %var_22094) /* ty=(Tensor[(16, 11, 16), bool], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_12279() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  %564 = @func_10499() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %565 = @func_11816() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) */;
  %566 = %564.0;
  %567 = %565.2;
  (%566, %567)
}

def @func_11553() -> Tensor[(3, 13, 8), float32] {
  %569 = fn () -> Tensor[(3, 13, 8), float32] {
    %568 = @func_7664() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), bool]) */;
    %568.1
  };
  %569() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_11911() -> Tensor[(9, 13, 1), float32] {
  %573 = fn () -> Tensor[(9, 13, 1), float32] {
    %570 = @func_9118() /* ty=(Tensor[(9, 13, 1), bool], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
    %571 = %570.0;
    %572 = cast(%571, dtype="float32") /* ty=Tensor[(9, 13, 1), float32] */;
    atanh(%572) /* ty=Tensor[(9, 13, 1), float32] */
  };
  %573() /* ty=Tensor[(9, 13, 1), float32] */
}

def @func_5679(%var_5678: Tensor[(3, 13, 8), float32]) -> (Tensor[(3, 13, 8), uint32],) {
  %581 = fn (%var_5665: Tensor[(3, 13, 8), float32]) -> (Tensor[(3, 13, 8), uint32],) {
    %574 = @func_5183() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %575 = %574.0;
    %576 = cast(%var_5665, dtype="uint32") /* ty=Tensor[(3, 13, 8), uint32] */;
    %577 = shape_of(%575, dtype="int32") /* ty=Tensor[(3), int32] */;
    %578 = cast(%575, dtype="uint32") /* ty=Tensor[(3, 13, 8), uint32] */;
    %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %580 = subtract(%578, %579) /* ty=Tensor[(3, 13, 8), uint32] */;
    (%580,)
  };
  %581(%var_5678) /* ty=(Tensor[(3, 13, 8), uint32],) */
}

def @func_77(%var_75: Tensor[(2, 15, 8), float32], %var_76: Tensor[(2, 15, 8), float32]) -> Tensor[(2, 15, 8), float32] {
  %586 = fn (%var_65: Tensor[(2, 15, 8), float32], %var_66: Tensor[(2, 15, 8), float32]) -> Tensor[(2, 15, 8), float32] {
    %582 = cast(%var_66, dtype="float32") /* ty=Tensor[(2, 15, 8), float32] */;
    %583 = shape_of(%var_65, dtype="int32") /* ty=Tensor[(3), int32] */;
    %584 = cast(%var_65, dtype="float32") /* ty=Tensor[(2, 15, 8), float32] */;
    %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    divide(%584, %585) /* ty=Tensor[(2, 15, 8), float32] */
  };
  %586(%var_75, %var_76) /* ty=Tensor[(2, 15, 8), float32] */
}

def @func_17533() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %590 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
    %587 = @func_5772() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %588 = @func_8192() /* ty=Tensor[(3, 13, 8), float32] */;
    %589 = %587.0;
    (%588, %589)
  };
  %590() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_18385() -> (Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) {
  @func_18383() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) */
}

def @func_3308(%var_3307: Tensor[(8, 5, 5), bool]) -> Tensor[(8, 5, 5), bool] {
  %595 = fn (%var_3302: Tensor[(8, 5, 5), bool]) -> Tensor[(8, 5, 5), bool] {
    %591 = cast(%var_3302, dtype="bool") /* ty=Tensor[(8, 5, 5), bool] */;
    %592 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(8, 5, 5), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %593 = cast(meta[relay.Constant][32] /* ty=Tensor[(8, 5, 5), bool] */, dtype="bool") /* ty=Tensor[(8, 5, 5), bool] */;
    %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%593, %594) /* ty=Tensor[(8, 5, 5), bool] */
  };
  %595(%var_3307) /* ty=Tensor[(8, 5, 5), bool] */
}

def @func_20797(%var_20795: Tensor[(312), float32]) -> (Tensor[(3, 16, 14), float64], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) {
  %596 = @func_14419() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), float64]) */;
  %597 = cast(%var_20795, dtype="float32") /* ty=Tensor[(312), float32] */;
  %598 = reshape(%597, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %599 = @func_6598(%598) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float32]) */;
  %600 = %596.1;
  %601 = %599.1;
  (%600, %601, %var_20795)
}

def @func_16056(%var_16054: bool, %var_16055: Tensor[(7, 8, 13), bool]) -> (Tensor[(3, 13, 8), float32], Tensor[(7, 8, 13), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  @func_16052(%var_16054, %var_16055) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(7, 8, 13), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_7788(%var_7786: Tensor[(351), int64]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), int64], Tensor[(351), int64]) {
  @func_7785(%var_7786) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), int64], Tensor[(351), int64]) */
}

def @func_9470() -> (Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) {
  %602 = @func_8097() /* ty=(Tensor[(54), float32], Tensor[(54), float32]) */;
  %603 = @func_9118() /* ty=(Tensor[(9, 13, 1), bool], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %604 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %605 = %602.0;
  %606 = %603.1;
  %607 = %604.0;
  (%605, %606, %607)
}

def @func_7019() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) {
  %608 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %609 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
  %610 = %608.0;
  (%609, %610)
}

def @func_10996() -> (Tensor[(54), float32],) {
  %613 = fn () -> (Tensor[(54), float32],) {
    %611 = @func_5645() /* ty=(Tensor[(54), float32],) */;
    %612 = %611.0;
    (%612,)
  };
  %613() /* ty=(Tensor[(54), float32],) */
}

def @func_10665() -> (Tensor[(3, 13, 8), float32],) {
  @func_10663() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_12880() -> (Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8]) {
  %614 = @func_12263() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(2, 5, 10), int64], Tensor[(9, 13, 54), float32]) */;
  %615 = @func_8712() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(336, 2), int8]) */;
  %616 = %614.1;
  %617 = %615.2;
  (%616, %617)
}

def @func_13828(%var_13815: Tensor[(13, 15, 4), float32], %var_13816: Tensor[(13, 15, 4), float32]) -> Tensor[(13, 15, 4), float32] {
  %618 = cast(%var_13816, dtype="float32") /* ty=Tensor[(13, 15, 4), float32] */;
  %619 = shape_of(%var_13815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%var_13815, dtype="float32") /* ty=Tensor[(13, 15, 4), float32] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%620, %621) /* ty=Tensor[(13, 15, 4), float32] */
}

def @func_11341(%var_11339: Tensor[(126), float32]) -> (Tensor[(144), uint8], Tensor[(100), int64], Tensor[(126), float32]) {
  @func_11338(%var_11339) /* ty=(Tensor[(144), uint8], Tensor[(100), int64], Tensor[(126), float32]) */
}

def @func_17120() -> (Tensor[(3, 7, 6), float32],) {
  %622 = @func_14471() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %623 = %622.0;
  (%623,)
}

def @func_15752() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  %624 = @func_11059() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %625 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %626 = %624.0;
  %627 = %625.0;
  (%626, %627)
}

def @func_9826(%var_9821: Tensor[(9, 7, 10), float64], %var_9822: Tensor[(648), int32], %var_9823: Tensor[(8, 1), int16], %var_9824: Tensor[(64), bool], %var_9825: Tensor[(144), uint8]) -> (Tensor[(9, 7, 10), int16], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32], Tensor[(8, 64), int32], Tensor[(8, 1), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(8, 5, 5), bool], Tensor[(200), bool]) {
  %659 = fn (%var_9747: Tensor[(9, 7, 10), float64], %var_9770: Tensor[(648), int32], %var_9773: Tensor[(8, 1), int16], %var_9774: Tensor[(64), bool], %var_9776: Tensor[(144), uint8]) -> (Tensor[(9, 7, 10), int16], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32], Tensor[(8, 64), int32], Tensor[(8, 1), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(8, 5, 5), bool], Tensor[(200), bool]) {
    %628 = cast(%var_9747, dtype="float64") /* ty=Tensor[(9, 7, 10), float64] */;
    %629 = atan(%628) /* ty=Tensor[(9, 7, 10), float64] */;
    %630 = cast(%var_9747, dtype="int16") /* ty=Tensor[(9, 7, 10), int16] */;
    %631 = shape_of(%629, dtype="int32") /* ty=Tensor[(3), int32] */;
    %632 = cast(%629, dtype="int16") /* ty=Tensor[(9, 7, 10), int16] */;
    %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %634 = @func_7019() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
    %635 = cast(%var_9770, dtype="int32") /* ty=Tensor[(648), int32] */;
    %636 = cast(%var_9770, dtype="int32") /* ty=Tensor[(648), int32] */;
    %637 = reshape(%635, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
    %638 = reshape(%636, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
    %639 = @func_8006(%637, %638) /* ty=(Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) */;
    %640 = cast(%var_9773, dtype="int16") /* ty=Tensor[(8, 1), int16] */;
    %641 = cast(%var_9774, dtype="bool") /* ty=Tensor[(64), bool] */;
    %642 = cast(meta[relay.Constant][33] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
    %643 = cast(%var_9776, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %644 = reshape(%640, newshape=[8, 1]) /* ty=Tensor[(8, 1), int16] */;
    %645 = reshape(%641, newshape=[64]) /* ty=Tensor[(64), bool] */;
    %646 = reshape(%642, newshape=[100]) /* ty=Tensor[(100), int64] */;
    %647 = reshape(%643, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %648 = @func_7246(%644, %645, %646, %647) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 9), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(2, 5, 10), int64], Tensor[(8, 64), int32]) */;
    %649 = @func_9283() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
    %650 = cast(meta[relay.Constant][34] /* ty=Tensor[(200), bool] */, dtype="bool") /* ty=Tensor[(200), bool] */;
    %651 = reshape(%650, newshape=[8, 5, 5]) /* ty=Tensor[(8, 5, 5), bool] */;
    %652 = bitwise_and(%632, %633) /* ty=Tensor[(9, 7, 10), int16] */;
    %653 = %634.1;
    %654 = %639.0;
    %655 = %648.7;
    %656 = %649.2;
    %657 = @func_9625() /* ty=Tensor[(3, 13, 8), float32] */;
    %658 = @func_3306(%651) /* ty=Tensor[(8, 5, 5), bool] */;
    (%652, %653, %654, %var_9770, %655, %var_9773, %var_9774, meta[relay.Constant][33] /* ty=Tensor[(100), int64] */, %var_9776, %656, %657, %658, meta[relay.Constant][34] /* ty=Tensor[(200), bool] */)
  };
  %659(%var_9821, %var_9822, %var_9823, %var_9824, %var_9825) /* ty=(Tensor[(9, 7, 10), int16], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32], Tensor[(8, 64), int32], Tensor[(8, 1), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(8, 5, 5), bool], Tensor[(200), bool]) */
}

def @func_14868() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  @func_14866() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_7409() -> Tensor[(9, 13, 1), bool] {
  @func_7407() /* ty=Tensor[(9, 13, 1), bool] */
}

def @func_4679(%var_4669: uint32, %var_4670: Tensor[(8, 13, 12), uint32]) -> Tensor[(8, 13, 12), bool] {
  %660 = cast(%var_4669, dtype="bool") /* ty=bool */;
  %661 = cast(%var_4670, dtype="bool") /* ty=Tensor[(8, 13, 12), bool] */;
  less(%660, %661) /* ty=Tensor[(8, 13, 12), bool] */
}

def @func_4945(%var_4944: Tensor[(3, 13, 8), float32]) -> (Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), bool]) {
  %674 = fn (%var_4931: Tensor[(3, 13, 8), float32]) -> (Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), bool]) {
    %662 = @func_4550() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %663 = %662.0;
    %664 = cast(%var_4931, dtype="uint32") /* ty=Tensor[(3, 13, 8), uint32] */;
    %665 = shape_of(%663, dtype="int32") /* ty=Tensor[(3), int32] */;
    %666 = cast(%663, dtype="uint32") /* ty=Tensor[(3, 13, 8), uint32] */;
    %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %668 = cast(%var_4931, dtype="bool") /* ty=Tensor[(3, 13, 8), bool] */;
    %669 = shape_of(%663, dtype="int32") /* ty=Tensor[(3), int32] */;
    %670 = cast(%663, dtype="bool") /* ty=Tensor[(3, 13, 8), bool] */;
    %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %672 = minimum(%666, %667) /* ty=Tensor[(3, 13, 8), uint32] */;
    %673 = not_equal(%670, %671) /* ty=Tensor[(3, 13, 8), bool] */;
    (%672, %673)
  };
  %674(%var_4944) /* ty=(Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), bool]) */
}

def @func_11817() -> (Tensor[(3, 7, 6), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) {
  %690 = fn () -> (Tensor[(3, 7, 6), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) {
    %675 = @func_7074() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 15, 8), float32]) */;
    %676 = @func_7756() /* ty=(Tensor[(54), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float64]) */;
    %677 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %678 = %677.0;
    %679 = cast(%678, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
    %680 = @func_10995() /* ty=(Tensor[(54), float32],) */;
    %681 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
    %682 = cast(%681, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
    %683 = reshape(%682, newshape=[312]) /* ty=Tensor[(312), float32] */;
    %684 = @func_10225(%683) /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) */;
    %685 = %675.0;
    %686 = %676.4;
    %687 = cosh(%679) /* ty=Tensor[(3, 7, 6), float32] */;
    %688 = %680.0;
    %689 = %684.3;
    (%685, %686, %687, %688, %681, %689)
  };
  %690() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) */
}

def @func_22167(%var_22165: Tensor[(351), int64], %var_22166: Tensor[(1512), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), float32], Tensor[(351), int64], Tensor[(12, 126), float64], Tensor[(1512), float32]) {
  @func_22163(%var_22165, %var_22166) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), float32], Tensor[(351), int64], Tensor[(12, 126), float64], Tensor[(1512), float32]) */
}

def @func_18307(%var_18306: Tensor[(3, 14, 5), float32]) -> (Tensor[(3, 14, 5), float32], Tensor[(3, 13, 8), float32]) {
  %698 = fn (%var_18285: Tensor[(3, 14, 5), float32]) -> (Tensor[(3, 14, 5), float32], Tensor[(3, 13, 8), float32]) {
    %691 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 14, 5), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 5), float32] */;
    %692 = shape_of(%var_18285, dtype="int32") /* ty=Tensor[(3), int32] */;
    %693 = cast(%var_18285, dtype="float32") /* ty=Tensor[(3, 14, 5), float32] */;
    %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %695 = @func_5130() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) */;
    %696 = power(%693, %694) /* ty=Tensor[(3, 14, 5), float32] */;
    %697 = %695.0;
    (%696, %697)
  };
  %698(%var_18306) /* ty=(Tensor[(3, 14, 5), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_17718() -> (Tensor[(3, 16, 14), float64],) {
  %701 = fn () -> (Tensor[(3, 16, 14), float64],) {
    %699 = @func_14419() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), float64]) */;
    %700 = %699.1;
    (%700,)
  };
  %701() /* ty=(Tensor[(3, 16, 14), float64],) */
}

def @func_18044() -> (Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32], Tensor[(54), float32]) {
  %708 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32], Tensor[(54), float32]) {
    %702 = @func_17779() /* ty=(Tensor[(54), float32], Tensor[(9, 13, 54), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) */;
    %703 = @func_7074() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 15, 8), float32]) */;
    %704 = @func_17945() /* ty=(Tensor[(54), float32], Tensor[(144), uint8]) */;
    %705 = %702.2;
    %706 = %703.1;
    %707 = %704.0;
    (%705, %706, %707)
  };
  %708() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32], Tensor[(54), float32]) */
}

def @func_9895() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  %709 = @func_4550() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %710 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
  %711 = %709.0;
  (%710, %711)
}

def @func_7952(%var_7950: Tensor[(312, 1), float32], %var_7951: Tensor[(144), uint8]) -> (Tensor[(54), float32], Tensor[(3, 13, 8), uint32], Tensor[(312, 1), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) {
  @func_7948(%var_7950, %var_7951) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), uint32], Tensor[(312, 1), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */
}

def @func_14866() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  %712 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %713 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %714 = %712.0;
  %715 = %713.0;
  (%714, %715)
}

def @func_5647() -> (Tensor[(54), float32],) {
  @func_5645() /* ty=(Tensor[(54), float32],) */
}

def @func_14073() -> Tensor[(3, 7, 6), float32] {
  @func_14071() /* ty=Tensor[(3, 7, 6), float32] */
}

def @main(%var_22321: Tensor[(728, 9), bool], %var_22326: Tensor[(2, 52), float32], %var_22333: Tensor[(2, 52), float64]) -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], bool, Tensor[(54), float32], Tensor[(728, 9), uint8], Tensor[(3, 13, 8), float32], Tensor[(2, 52), bool]) {
  %716 = @func_14150() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32]) */;
  %717 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %718 = cast(meta[relay.Constant][36] /* ty=Tensor[(728, 1), bool] */, dtype="bool") /* ty=Tensor[(728, 1), bool] */;
  %719 = reshape(%717, newshape=[]) /* ty=bool */;
  %720 = reshape(%718, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), bool] */;
  %721 = @func_16056(%719, %720) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(7, 8, 13), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %722 = @func_19681() /* ty=(Tensor[(54), float32],) */;
  %723 = cast(meta[relay.Constant][36] /* ty=Tensor[(728, 1), bool] */, dtype="uint8") /* ty=Tensor[(728, 1), uint8] */;
  %724 = cast(%var_22321, dtype="uint8") /* ty=Tensor[(728, 9), uint8] */;
  %725 = cast(%var_22326, dtype="float32") /* ty=Tensor[(2, 52), float32] */;
  %726 = reshape(%725, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float32] */;
  %727 = @func_8484(%726) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(126), float32], Tensor[(54, 1), float32], Tensor[(54), float32], Tensor[(4, 13, 2), float64], Tensor[(3, 13, 8), float32]) */;
  %728 = cast(%var_22326, dtype="float64") /* ty=Tensor[(2, 52), float64] */;
  %729 = sigmoid(%728) /* ty=Tensor[(2, 52), float64] */;
  %730 = cast(%var_22333, dtype="bool") /* ty=Tensor[(2, 52), bool] */;
  %731 = shape_of(%729, dtype="int32") /* ty=Tensor[(2), int32] */;
  %732 = cast(%729, dtype="bool") /* ty=Tensor[(2, 52), bool] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %734 = %716.0;
  %735 = %721.2;
  %736 = %722.0;
  %737 = logical_xor(%723, %724) /* ty=Tensor[(728, 9), uint8] */;
  %738 = %727.0;
  %739 = greater_equal(%732, %733) /* ty=Tensor[(2, 52), bool] */;
  (%734, %735, True /* ty=bool */, %736, %737, %738, %739)
}

def @func_2961(%var_2960: Tensor[(12, 6, 2), uint8]) -> (Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) {
  %751 = fn (%var_2902: Tensor[(12, 6, 2), uint8]) -> (Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) {
    %740 = cast(meta[relay.Constant][37] /* ty=Tensor[(12, 6, 2), uint8] */, dtype="uint8") /* ty=Tensor[(12, 6, 2), uint8] */;
    %741 = shape_of(%var_2902, dtype="int32") /* ty=Tensor[(3), int32] */;
    %742 = cast(%var_2902, dtype="uint8") /* ty=Tensor[(12, 6, 2), uint8] */;
    %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %744 = cast(meta[relay.Constant][38] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
    %745 = cast(meta[relay.Constant][38] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
    %746 = reshape(%744, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
    %747 = reshape(%745, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
    %748 = @func_1483(%746, %747) /* ty=(Tensor[(2, 5, 10), int64],) */;
    %749 = multiply(%742, %743) /* ty=Tensor[(12, 6, 2), uint8] */;
    %750 = %748.0;
    (%749, %750, meta[relay.Constant][38] /* ty=Tensor[(100), int64] */)
  };
  %751(%var_2960) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */
}

def @func_1610(%var_1609: Tensor[(8, 8, 3), float32]) -> (Tensor[(8, 8, 3), float32],) {
  %754 = fn (%var_1604: Tensor[(8, 8, 3), float32]) -> (Tensor[(8, 8, 3), float32],) {
    %752 = cast(%var_1604, dtype="float32") /* ty=Tensor[(8, 8, 3), float32] */;
    %753 = tan(%752) /* ty=Tensor[(8, 8, 3), float32] */;
    (%753,)
  };
  %754(%var_1609) /* ty=(Tensor[(8, 8, 3), float32],) */
}

def @func_13122(%var_13121: Tensor[(240), float32]) -> (Tensor[(54), float32], Tensor[(9, 13, 1), bool], Tensor[(240), float32], Tensor[(9, 13, 312), float32]) {
  %766 = fn (%var_13107: Tensor[(240), float32]) -> (Tensor[(54), float32], Tensor[(9, 13, 1), bool], Tensor[(240), float32], Tensor[(9, 13, 312), float32]) {
    %755 = @func_8428() /* ty=(Tensor[(3, 13, 8), bool], Tensor[(2, 9, 3), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float64], Tensor[(3, 7, 6), float64]) */;
    %756 = cast(%var_13107, dtype="float32") /* ty=Tensor[(240), float32] */;
    %757 = reshape(%756, newshape=[24, 10]) /* ty=Tensor[(24, 10), float32] */;
    %758 = @func_7332(%757) /* ty=(Tensor[(24, 10), uint32], Tensor[(8, 5, 8), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(312), float32], Tensor[(2, 9, 3), float32]) */;
    %759 = %758.6;
    %760 = @func_10747() /* ty=Tensor[(9, 13, 1), bool] */;
    %761 = cast(%759, dtype="float32") /* ty=Tensor[(312), float32] */;
    %762 = cast(%760, dtype="float32") /* ty=Tensor[(9, 13, 1), float32] */;
    %763 = %755.2;
    %764 = @func_9181() /* ty=Tensor[(9, 13, 1), bool] */;
    %765 = floor_mod(%761, %762) /* ty=Tensor[(9, 13, 312), float32] */;
    (%763, %764, %var_13107, %765)
  };
  %766(%var_13121) /* ty=(Tensor[(54), float32], Tensor[(9, 13, 1), bool], Tensor[(240), float32], Tensor[(9, 13, 312), float32]) */
}

def @func_13689(%var_13687: Tensor[(8), int16], %var_13688: Tensor[(240), float32]) -> (Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), float64], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(160, 2), uint16], Tensor[(240), float32]) {
  %783 = fn (%var_13680: Tensor[(8), int16], %var_13684: Tensor[(240), float32]) -> (Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), float64], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(160, 2), uint16], Tensor[(240), float32]) {
    %767 = @func_11502() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(126), float32]) */;
    %768 = cast(%var_13680, dtype="int16") /* ty=Tensor[(8), int16] */;
    %769 = cast(%var_13680, dtype="int16") /* ty=Tensor[(8), int16] */;
    %770 = cast(meta[relay.Constant][39] /* ty=Tensor[(64), bool] */, dtype="bool") /* ty=Tensor[(64), bool] */;
    %771 = cast(meta[relay.Constant][40] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
    %772 = cast(meta[relay.Constant][41] /* ty=Tensor[(160, 2), uint16] */, dtype="uint16") /* ty=Tensor[(160, 2), uint16] */;
    %773 = cast(%var_13684, dtype="float32") /* ty=Tensor[(240), float32] */;
    %774 = reshape(%768, newshape=[1, 2, 4]) /* ty=Tensor[(1, 2, 4), int16] */;
    %775 = reshape(%769, newshape=[1, 2, 4]) /* ty=Tensor[(1, 2, 4), int16] */;
    %776 = reshape(%770, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), bool] */;
    %777 = reshape(%771, newshape=[100]) /* ty=Tensor[(100), int64] */;
    %778 = reshape(%772, newshape=[320]) /* ty=Tensor[(320), uint16] */;
    %779 = reshape(%773, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %780 = @func_5437(%774, %775, %776, %777, %778, %779) /* ty=(Tensor[(8, 2, 4), int64], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(2, 5, 10), float64], Tensor[(100), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32]) */;
    %781 = %767.0;
    %782 = %780.4;
    (%781, %782, %var_13680, meta[relay.Constant][39] /* ty=Tensor[(64), bool] */, meta[relay.Constant][40] /* ty=Tensor[(100), int64] */, meta[relay.Constant][41] /* ty=Tensor[(160, 2), uint16] */, %var_13684)
  };
  %783(%var_13687, %var_13688) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), float64], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(160, 2), uint16], Tensor[(240), float32]) */
}

def @func_18454() -> Tensor[(3, 13, 8), float32] {
  %784 = @func_12800() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %784.0
}

def @func_16608(%var_16605: Tensor[(6, 1, 2), float32], %var_16606: Tensor[(6, 11, 2), float32], %var_16607: Tensor[(104), float32]) -> (Tensor[(6, 11, 2), float32], Tensor[(3, 13, 8), float32], Tensor[(104), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  @func_16603(%var_16605, %var_16606, %var_16607) /* ty=(Tensor[(6, 11, 2), float32], Tensor[(3, 13, 8), float32], Tensor[(104), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_20548() -> Tensor[(3, 13, 8), float32] {
  %785 = fn () -> Tensor[(3, 13, 8), float32] {
    @func_7564() /* ty=Tensor[(3, 13, 8), float32] */
  };
  %785() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_4727() -> Tensor[(54), float32] {
  %787 = fn () -> Tensor[(54), float32] {
    %786 = @func_4499() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */;
    %786.3
  };
  %787() /* ty=Tensor[(54), float32] */
}

def @func_19604(%var_19588: Tensor[(7, 10, 9), float32]) -> (Tensor[(7, 10, 9), float32],) {
  %788 = cast(%var_19588, dtype="float32") /* ty=Tensor[(7, 10, 9), float32] */;
  %789 = asin(%788) /* ty=Tensor[(7, 10, 9), float32] */;
  (%789,)
}

def @func_13195() -> (Tensor[(54), float32],) {
  %792 = fn () -> (Tensor[(54), float32],) {
    %790 = @func_10125() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32]) */;
    %791 = %790.0;
    (%791,)
  };
  %792() /* ty=(Tensor[(54), float32],) */
}

def @func_9625() -> Tensor[(3, 13, 8), float32] {
  %793 = @func_4550() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %793.0
}

def @func_12265() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(2, 5, 10), int64], Tensor[(9, 13, 54), float32]) {
  @func_12263() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(2, 5, 10), int64], Tensor[(9, 13, 54), float32]) */
}

def @func_18143(%var_18136: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(312, 1), float32], Tensor[(144), uint8]) {
  %794 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
  %795 = cast(%794, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %796 = cast(%var_18136, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %797 = reshape(%795, newshape=[312, 1]) /* ty=Tensor[(312, 1), float32] */;
  %798 = reshape(%796, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %799 = @func_7948(%797, %798) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), uint32], Tensor[(312, 1), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %800 = %799.2;
  (%794, %800, %var_18136)
}

def @func_5577() -> (Tensor[(3, 7, 6), float32],) {
  %803 = fn () -> (Tensor[(3, 7, 6), float32],) {
    %801 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %802 = %801.0;
    (%802,)
  };
  %803() /* ty=(Tensor[(3, 7, 6), float32],) */
}

def @func_15399() -> (Tensor[(3, 13, 8), float32],) {
  %805 = fn () -> (Tensor[(3, 13, 8), float32],) {
    %804 = @func_7510() /* ty=Tensor[(3, 13, 8), float32] */;
    (%804,)
  };
  %805() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_21503() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) {
  @func_21501() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) */
}

def @func_8484(%var_8483: Tensor[(4, 13, 2), float32]) -> (Tensor[(3, 13, 8), float32], Tensor[(126), float32], Tensor[(54, 1), float32], Tensor[(54), float32], Tensor[(4, 13, 2), float64], Tensor[(3, 13, 8), float32]) {
  %822 = fn (%var_8431: Tensor[(4, 13, 2), float32]) -> (Tensor[(3, 13, 8), float32], Tensor[(126), float32], Tensor[(54, 1), float32], Tensor[(54), float32], Tensor[(4, 13, 2), float64], Tensor[(3, 13, 8), float32]) {
    %806 = cast(meta[relay.Constant][42] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %807 = cast(meta[relay.Constant][43] /* ty=Tensor[(54, 1), float32] */, dtype="float32") /* ty=Tensor[(54, 1), float32] */;
    %808 = reshape(%806, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
    %809 = reshape(%807, newshape=[54]) /* ty=Tensor[(54), float32] */;
    %810 = @func_4405(%808, %809) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32]) */;
    %811 = @func_5337() /* ty=(Tensor[(54), float32],) */;
    %812 = cast(%var_8431, dtype="float32") /* ty=Tensor[(4, 13, 2), float32] */;
    %813 = log2(%812) /* ty=Tensor[(4, 13, 2), float32] */;
    %814 = cast(%813, dtype="float64") /* ty=Tensor[(4, 13, 2), float64] */;
    %815 = sqrt(%814) /* ty=Tensor[(4, 13, 2), float64] */;
    %816 = cast(%815, dtype="float64") /* ty=Tensor[(4, 13, 2), float64] */;
    %817 = @func_8035() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %818 = %810.1;
    %819 = %811.0;
    %820 = log10(%816) /* ty=Tensor[(4, 13, 2), float64] */;
    %821 = %817.0;
    (%818, meta[relay.Constant][42] /* ty=Tensor[(126), float32] */, meta[relay.Constant][43] /* ty=Tensor[(54, 1), float32] */, %819, %820, %821)
  };
  %822(%var_8483) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(126), float32], Tensor[(54, 1), float32], Tensor[(54), float32], Tensor[(4, 13, 2), float64], Tensor[(3, 13, 8), float32]) */
}

def @func_4480() -> (Tensor[(3, 13, 8), float32],) {
  %823 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
  (%823,)
}

def @func_13487() -> Tensor[(3, 13, 8), float32] {
  %824 = @func_11575() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32]) */;
  %824.0
}

def @func_5759() -> (Tensor[(3, 7, 6), float32],) {
  %825 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %826 = %825.0;
  (%826,)
}

def @func_17314(%var_17267: Tensor[(12), float32], %var_17268: Tensor[(132), float32]) -> (Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8], Tensor[(3, 13, 8), bool], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(12), float32], Tensor[(132), float32], Tensor[(3, 7, 6), float32], Tensor[(1, 648), int32], Tensor[(26, 4), int16], Tensor[(26, 4), bool]) {
  %827 = @func_16668() /* ty=(Tensor[(3, 16, 14), int8],) */;
  %828 = @func_15047() /* ty=Tensor[(3, 13, 8), float64] */;
  %829 = cast(%828, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %830 = reshape(%829, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %831 = @func_4943(%830) /* ty=(Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), bool]) */;
  %832 = cast(%var_17267, dtype="float32") /* ty=Tensor[(12), float32] */;
  %833 = cast(%var_17268, dtype="float32") /* ty=Tensor[(132), float32] */;
  %834 = cast(meta[relay.Constant][44] /* ty=Tensor[(26, 4), float32] */, dtype="float32") /* ty=Tensor[(26, 4), float32] */;
  %835 = reshape(%832, newshape=[6, 1, 2]) /* ty=Tensor[(6, 1, 2), float32] */;
  %836 = reshape(%833, newshape=[6, 11, 2]) /* ty=Tensor[(6, 11, 2), float32] */;
  %837 = reshape(%834, newshape=[104]) /* ty=Tensor[(104), float32] */;
  %838 = @func_16603(%835, %836, %837) /* ty=(Tensor[(6, 11, 2), float32], Tensor[(3, 13, 8), float32], Tensor[(104), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %839 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 648), int32] */, dtype="int32") /* ty=Tensor[(1, 648), int32] */;
  %840 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 648), int32] */, dtype="int32") /* ty=Tensor[(1, 648), int32] */;
  %841 = reshape(%839, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %842 = reshape(%840, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %843 = @func_8006(%841, %842) /* ty=(Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) */;
  %844 = cast(meta[relay.Constant][44] /* ty=Tensor[(26, 4), float32] */, dtype="float64") /* ty=Tensor[(26, 4), float64] */;
  %845 = acosh(%844) /* ty=Tensor[(26, 4), float64] */;
  %846 = cast(meta[relay.Constant][44] /* ty=Tensor[(26, 4), float32] */, dtype="int16") /* ty=Tensor[(26, 4), int16] */;
  %847 = shape_of(%845, dtype="int32") /* ty=Tensor[(2), int32] */;
  %848 = cast(%845, dtype="int16") /* ty=Tensor[(26, 4), int16] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %850 = cast(meta[relay.Constant][46] /* ty=Tensor[(26, 4), float64] */, dtype="bool") /* ty=Tensor[(26, 4), bool] */;
  %851 = shape_of(%845, dtype="int32") /* ty=Tensor[(2), int32] */;
  %852 = cast(%845, dtype="bool") /* ty=Tensor[(26, 4), bool] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %854 = %827.0;
  %855 = %831.1;
  %856 = @func_13487() /* ty=Tensor[(3, 13, 8), float32] */;
  %857 = @func_16370() /* ty=Tensor[(3, 7, 6), float32] */;
  %858 = %838.4;
  %859 = %843.1;
  %860 = minimum(%848, %849) /* ty=Tensor[(26, 4), int16] */;
  %861 = less_equal(%852, %853) /* ty=Tensor[(26, 4), bool] */;
  (%828, %854, %855, %856, %857, %858, %var_17267, %var_17268, %859, meta[relay.Constant][45] /* ty=Tensor[(1, 648), int32] */, %860, %861)
}

def @func_18465() -> (Tensor[(3, 13, 8), float32],) {
  %862 = @func_9895() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %863 = %862.1;
  (%863,)
}

def @func_11502() -> (Tensor[(3, 13, 8), float32], Tensor[(126), float32]) {
  %864 = @func_10532() /* ty=(Tensor[(54), float32], Tensor[(126), float32]) */;
  %865 = @func_10900() /* ty=Tensor[(3, 13, 8), float32] */;
  %866 = %864.1;
  (%865, %866)
}

def @func_14253() -> (Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) {
  %871 = fn () -> (Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) {
    %867 = @func_12263() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(2, 5, 10), int64], Tensor[(9, 13, 54), float32]) */;
    %868 = @func_8290() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) */;
    %869 = %867.2;
    %870 = %868.1;
    (%869, %870)
  };
  %871() /* ty=(Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */
}

def @func_4408(%var_4406: Tensor[(3, 7, 6), float32], %var_4407: Tensor[(54), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32]) {
  %879 = fn (%var_4376: Tensor[(3, 7, 6), float32], %var_4382: Tensor[(54), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32]) {
    %872 = cast(%var_4376, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
    %873 = cast(%var_4382, dtype="float32") /* ty=Tensor[(54), float32] */;
    %874 = reshape(%873, newshape=[2, 9, 3]) /* ty=Tensor[(2, 9, 3), float32] */;
    %875 = @func_664(%874) /* ty=(Tensor[(2, 9, 3), float32],) */;
    %876 = cos(%872) /* ty=Tensor[(3, 7, 6), float32] */;
    %877 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
    %878 = %875.0;
    (%876, %877, %878, %var_4382)
  };
  %879(%var_4406, %var_4407) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32]) */
}

def @func_18589() -> Tensor[(3, 7, 6), float32] {
  @func_18587() /* ty=Tensor[(3, 7, 6), float32] */
}

def @func_17024() -> (Tensor[(3, 7, 6), float32], Tensor[(8, 5, 8), bool], Tensor[(320), uint16]) {
  %880 = @func_14866() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
  %881 = cast(meta[relay.Constant][47] /* ty=Tensor[(320), uint16] */, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %882 = reshape(%881, newshape=[8, 5, 8]) /* ty=Tensor[(8, 5, 8), uint16] */;
  %883 = @func_1991(%882) /* ty=(Tensor[(8, 5, 8), bool],) */;
  %884 = %880.0;
  %885 = %883.0;
  (%884, %885, meta[relay.Constant][47] /* ty=Tensor[(320), uint16] */)
}

def @func_18869() -> Tensor[(3, 13, 8), float32] {
  @func_18867() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_10748() -> Tensor[(9, 13, 1), bool] {
  %886 = fn () -> Tensor[(9, 13, 1), bool] {
    @func_10445() /* ty=Tensor[(9, 13, 1), bool] */
  };
  %886() /* ty=Tensor[(9, 13, 1), bool] */
}

def @func_13323(%var_13321: Tensor[(1, 54), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(1, 54), float32]) {
  @func_13320(%var_13321) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(1, 54), float32]) */
}

def @func_8099() -> (Tensor[(54), float32], Tensor[(54), float32]) {
  @func_8097() /* ty=(Tensor[(54), float32], Tensor[(54), float32]) */
}

def @func_10301(%var_10300: Tensor[(3, 13, 8), bool]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), uint64]) {
  %895 = fn (%var_10294: Tensor[(3, 13, 8), bool]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), uint64]) {
    %887 = @func_8428() /* ty=(Tensor[(3, 13, 8), bool], Tensor[(2, 9, 3), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float64], Tensor[(3, 7, 6), float64]) */;
    %888 = %887.0;
    %889 = cast(%var_10294, dtype="uint64") /* ty=Tensor[(3, 13, 8), uint64] */;
    %890 = shape_of(%888, dtype="int32") /* ty=Tensor[(3), int32] */;
    %891 = cast(%888, dtype="uint64") /* ty=Tensor[(3, 13, 8), uint64] */;
    %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %893 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
    %894 = bitwise_or(%891, %892) /* ty=Tensor[(3, 13, 8), uint64] */;
    (%893, %894)
  };
  %895(%var_10300) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), uint64]) */
}

def @func_667(%var_665: Tensor[(2, 9, 3), float32]) -> (Tensor[(2, 9, 3), float32],) {
  @func_664(%var_665) /* ty=(Tensor[(2, 9, 3), float32],) */
}

def @func_11477() -> (Tensor[(54), float32],) {
  %897 = fn () -> (Tensor[(54), float32],) {
    %896 = @func_8269() /* ty=Tensor[(54), float32] */;
    (%896,)
  };
  %897() /* ty=(Tensor[(54), float32],) */
}

def @func_9070() -> Tensor[(3, 13, 8), float32] {
  %899 = fn () -> Tensor[(3, 13, 8), float32] {
    %898 = @func_4550() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %898.0
  };
  %899() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_16336() -> (Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(126, 1), float32]) {
  %908 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(126, 1), float32]) {
    %900 = @func_11059() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %901 = @func_5130() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) */;
    %902 = cast(meta[relay.Constant][48] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
    %903 = reshape(%902, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %904 = @func_11318(%903) /* ty=(Tensor[(3, 7, 6), int64], Tensor[(126), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 13, 8), uint32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
    %905 = %900.0;
    %906 = %901.5;
    %907 = %904.6;
    (%905, %906, %907, meta[relay.Constant][48] /* ty=Tensor[(126, 1), float32] */)
  };
  %908() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(126, 1), float32]) */
}

def @func_13341() -> Tensor[(54), float32] {
  @func_13339() /* ty=Tensor[(54), float32] */
}

def @func_8097() -> (Tensor[(54), float32], Tensor[(54), float32]) {
  %909 = @func_6311() /* ty=(Tensor[(54), float32],) */;
  %910 = @func_5275() /* ty=(Tensor[(54), float32],) */;
  %911 = %909.0;
  %912 = %910.0;
  (%911, %912)
}

def @func_5761() -> (Tensor[(3, 7, 6), float32],) {
  @func_5759() /* ty=(Tensor[(3, 7, 6), float32],) */
}

def @func_12801() -> (Tensor[(3, 13, 8), float32],) {
  %914 = fn () -> (Tensor[(3, 13, 8), float32],) {
    %913 = @func_10575() /* ty=Tensor[(3, 13, 8), float32] */;
    (%913,)
  };
  %914() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_21981() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), float64], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float64]) {
  @func_21979() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), float64], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float64]) */
}

def @func_21585(%var_21583: Tensor[(240), float32]) -> (Tensor[(8, 8, 3), float32], Tensor[(54), float32], Tensor[(100), int64], Tensor[(4, 16), bool], Tensor[(144), uint8], Tensor[(240), float32]) {
  @func_21582(%var_21583) /* ty=(Tensor[(8, 8, 3), float32], Tensor[(54), float32], Tensor[(100), int64], Tensor[(4, 16), bool], Tensor[(144), uint8], Tensor[(240), float32]) */
}

def @func_18530() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 9), int64], Tensor[(351), int64], Tensor[(3, 13, 8), float32]) {
  %921 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 9), int64], Tensor[(351), int64], Tensor[(3, 13, 8), float32]) {
    %915 = cast(meta[relay.Constant][49] /* ty=Tensor[(351), int64] */, dtype="int64") /* ty=Tensor[(351), int64] */;
    %916 = reshape(%915, newshape=[351]) /* ty=Tensor[(351), int64] */;
    %917 = @func_7785(%916) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), int64], Tensor[(351), int64]) */;
    %918 = @func_9069() /* ty=Tensor[(3, 13, 8), float32] */;
    %919 = %917.1;
    %920 = @func_18454() /* ty=Tensor[(3, 13, 8), float32] */;
    (%918, %919, meta[relay.Constant][49] /* ty=Tensor[(351), int64] */, %920)
  };
  %921() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 9), int64], Tensor[(351), int64], Tensor[(3, 13, 8), float32]) */
}

def @func_15741() -> (Tensor[(3, 13, 8), float32],) {
  %922 = @func_8192() /* ty=Tensor[(3, 13, 8), float32] */;
  (%922,)
}

def @func_9648() -> (Tensor[(3, 16, 14), int8],) {
  %923 = @func_9213() /* ty=Tensor[(3, 16, 14), int8] */;
  (%923,)
}

def @func_20753() -> (Tensor[(54), float32], Tensor[(54), float32], Tensor[(3, 13, 8), float32]) {
  @func_20751() /* ty=(Tensor[(54), float32], Tensor[(54), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_18914(%var_18912: Tensor[(100), int64], %var_18913: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(100), int64], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8]) {
  @func_18910(%var_18912, %var_18913) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(100), int64], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8]) */
}

def @func_18108() -> (Tensor[(54), float32],) {
  %924 = @func_16148() /* ty=Tensor[(54), float32] */;
  (%924,)
}

def @func_22219() -> (Tensor[(54), float32], Tensor[(192), float32], Tensor[(240), float32]) {
  %925 = @func_20937() /* ty=(Tensor[(192), float32],) */;
  %926 = @func_15147() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(390), float32], Tensor[(240), float32]) */;
  %927 = @func_5209() /* ty=Tensor[(54), float32] */;
  %928 = %925.0;
  %929 = %926.2;
  (%927, %928, %929)
}

def @func_16371() -> Tensor[(3, 7, 6), float32] {
  %931 = fn () -> Tensor[(3, 7, 6), float32] {
    %930 = @func_13911() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
    %930.0
  };
  %931() /* ty=Tensor[(3, 7, 6), float32] */
}

def @func_2099(%var_2087: Tensor[(3, 16, 14), int8]) -> (Tensor[(3, 16, 14), int8],) {
  %932 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 16, 14), int8] */, dtype="int8") /* ty=Tensor[(3, 16, 14), int8] */;
  %933 = shape_of(%var_2087, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%var_2087, dtype="int8") /* ty=Tensor[(3, 16, 14), int8] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %936 = logical_xor(%934, %935) /* ty=Tensor[(3, 16, 14), int8] */;
  (%936,)
}

def @func_1551(%var_1549: Tensor[(10, 3, 13), float32], %var_1550: Tensor[(240), float32]) -> (Tensor[(10, 3, 13), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(2, 5, 10), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 5, 10), int64], Tensor[(2, 5, 10), int64]) {
  %968 = fn (%var_1503: Tensor[(10, 3, 13), float32], %var_1518: Tensor[(240), float32]) -> (Tensor[(10, 3, 13), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(2, 5, 10), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 5, 10), int64], Tensor[(2, 5, 10), int64]) {
    %937 = cast(%var_1503, dtype="float32") /* ty=Tensor[(10, 3, 13), float32] */;
    %938 = cast(meta[relay.Constant][51] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
    %939 = cast(meta[relay.Constant][51] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
    %940 = reshape(%938, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
    %941 = reshape(%939, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
    %942 = @func_1483(%940, %941) /* ty=(Tensor[(2, 5, 10), int64],) */;
    %943 = %942.0;
    %944 = cast(%943, dtype="int64") /* ty=Tensor[(2, 5, 10), int64] */;
    %945 = cast(%943, dtype="int64") /* ty=Tensor[(2, 5, 10), int64] */;
    %946 = reshape(%944, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
    %947 = reshape(%945, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
    %948 = @func_1483(%946, %947) /* ty=(Tensor[(2, 5, 10), int64],) */;
    %949 = cast(%var_1518, dtype="float32") /* ty=Tensor[(240), float32] */;
    %950 = cast(%var_1518, dtype="float32") /* ty=Tensor[(240), float32] */;
    %951 = reshape(%949, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
    %952 = reshape(%950, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
    %953 = %948.0;
    %954 = cast(%953, dtype="int64") /* ty=Tensor[(2, 5, 10), int64] */;
    %955 = cast(%953, dtype="int64") /* ty=Tensor[(2, 5, 10), int64] */;
    %956 = reshape(%954, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
    %957 = reshape(%955, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
    %958 = @func_1483(%956, %957) /* ty=(Tensor[(2, 5, 10), int64],) */;
    %959 = cast(meta[relay.Constant][51] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
    %960 = cast(meta[relay.Constant][51] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
    %961 = reshape(%959, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
    %962 = reshape(%960, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
    %963 = @func_1483(%961, %962) /* ty=(Tensor[(2, 5, 10), int64],) */;
    %964 = acos(%937) /* ty=Tensor[(10, 3, 13), float32] */;
    %965 = @func_74(%951, %952) /* ty=Tensor[(2, 15, 8), float32] */;
    %966 = %958.0;
    %967 = %963.0;
    (%964, %943, meta[relay.Constant][51] /* ty=Tensor[(100), int64] */, %953, %965, %var_1518, %966, %967)
  };
  %968(%var_1549, %var_1550) /* ty=(Tensor[(10, 3, 13), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(2, 5, 10), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 5, 10), int64], Tensor[(2, 5, 10), int64]) */
}

def @func_7565() -> Tensor[(3, 13, 8), float32] {
  %970 = fn () -> Tensor[(3, 13, 8), float32] {
    %969 = @func_5183() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %969.0
  };
  %970() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_17857(%var_17847: Tensor[(2, 9, 3), float32]) -> (Tensor[(2, 9, 3), uint32],) {
  %971 = @func_8428() /* ty=(Tensor[(3, 13, 8), bool], Tensor[(2, 9, 3), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float64], Tensor[(3, 7, 6), float64]) */;
  %972 = %971.1;
  %973 = cast(%var_17847, dtype="uint32") /* ty=Tensor[(2, 9, 3), uint32] */;
  %974 = shape_of(%972, dtype="int32") /* ty=Tensor[(3), int32] */;
  %975 = cast(%972, dtype="uint32") /* ty=Tensor[(2, 9, 3), uint32] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %977 = bitwise_or(%975, %976) /* ty=Tensor[(2, 9, 3), uint32] */;
  (%977,)
}

def @func_19254() -> Tensor[(3, 7, 6), float32] {
  %979 = fn () -> Tensor[(3, 7, 6), float32] {
    %978 = @func_17977() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
    %978.1
  };
  %979() /* ty=Tensor[(3, 7, 6), float32] */
}

def @func_4551() -> (Tensor[(3, 13, 8), float32],) {
  %981 = fn () -> (Tensor[(3, 13, 8), float32],) {
    %980 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
    (%980,)
  };
  %981() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_19739() -> (Tensor[(3, 13, 8), float32],) {
  %982 = @func_17532() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %983 = %982.0;
  (%983,)
}

def @func_21315() -> (Tensor[(54), float32],) {
  @func_21313() /* ty=(Tensor[(54), float32],) */
}

def @func_21627() -> Tensor[(54), float32] {
  %985 = fn () -> Tensor[(54), float32] {
    %984 = @func_15962() /* ty=(Tensor[(54), float32],) */;
    %984.0
  };
  %985() /* ty=Tensor[(54), float32] */
}

def @func_8712() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(336, 2), int8]) {
  %986 = @func_5772() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %987 = %986.0;
  %988 = cast(%987, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %989 = reshape(%988, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %990 = @func_5015(%989) /* ty=(Tensor[(3, 7, 6), int64], Tensor[(3, 13, 8), float32]) */;
  %991 = cast(meta[relay.Constant][52] /* ty=Tensor[(336, 2), int8] */, dtype="int8") /* ty=Tensor[(336, 2), int8] */;
  %992 = reshape(%991, newshape=[672]) /* ty=Tensor[(672), int8] */;
  %993 = @func_7378(%992) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), int8], Tensor[(672), int8]) */;
  %994 = %990.1;
  %995 = %993.1;
  (%987, %994, %995, meta[relay.Constant][52] /* ty=Tensor[(336, 2), int8] */)
}

def @func_10901() -> Tensor[(3, 13, 8), float32] {
  %997 = fn () -> Tensor[(3, 13, 8), float32] {
    %996 = @func_9895() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
    %996.0
  };
  %997() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_19966() -> (Tensor[(126, 1), float32], Tensor[(54), float32]) {
  @func_19964() /* ty=(Tensor[(126, 1), float32], Tensor[(54), float32]) */
}

def @func_10276(%var_10275: Tensor[(144), uint8]) -> (Tensor[(54), float32], Tensor[(100), int64], Tensor[(144), uint8]) {
  %1004 = fn (%var_10254: Tensor[(144), uint8]) -> (Tensor[(54), float32], Tensor[(100), int64], Tensor[(144), uint8]) {
    %998 = @func_7415() /* ty=(Tensor[(54), float32],) */;
    %999 = cast(%var_10254, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %1000 = reshape(%999, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint8] */;
    %1001 = @func_2959(%1000) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
    %1002 = %998.0;
    %1003 = %1001.2;
    (%1002, %1003, %var_10254)
  };
  %1004(%var_10275) /* ty=(Tensor[(54), float32], Tensor[(100), int64], Tensor[(144), uint8]) */
}

def @func_17122() -> (Tensor[(3, 7, 6), float32],) {
  @func_17120() /* ty=(Tensor[(3, 7, 6), float32],) */
}

def @func_6821(%var_6662: Tensor[(8), int16], %var_6663: Tensor[(1, 64), bool], %var_6664: Tensor[(100), int64], %var_6722: Tensor[(144), uint8], %var_6754: Tensor[(351), int64], %var_6803: Tensor[(672), int8]) -> (Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(8), int16], Tensor[(1, 64), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(120, 2), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 9), float32], Tensor[(351), int64], Tensor[(3, 16, 14), int8], Tensor[(672), int8], Tensor[(3, 13, 8), float32]) {
  %1005 = @func_6311() /* ty=(Tensor[(54), float32],) */;
  %1006 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %1007 = cast(%var_6662, dtype="int16") /* ty=Tensor[(8), int16] */;
  %1008 = cast(%var_6662, dtype="int16") /* ty=Tensor[(8), int16] */;
  %1009 = cast(%var_6663, dtype="bool") /* ty=Tensor[(1, 64), bool] */;
  %1010 = cast(%var_6664, dtype="int64") /* ty=Tensor[(100), int64] */;
  %1011 = cast(meta[relay.Constant][53] /* ty=Tensor[(320), uint16] */, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %1012 = cast(meta[relay.Constant][54] /* ty=Tensor[(120, 2), float32] */, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
  %1013 = reshape(%1007, newshape=[1, 2, 4]) /* ty=Tensor[(1, 2, 4), int16] */;
  %1014 = reshape(%1008, newshape=[1, 2, 4]) /* ty=Tensor[(1, 2, 4), int16] */;
  %1015 = reshape(%1009, newshape=[8, 2, 4]) /* ty=Tensor[(8, 2, 4), bool] */;
  %1016 = reshape(%1010, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %1017 = reshape(%1011, newshape=[320]) /* ty=Tensor[(320), uint16] */;
  %1018 = reshape(%1012, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %1019 = @func_5437(%1013, %1014, %1015, %1016, %1017, %1018) /* ty=(Tensor[(8, 2, 4), int64], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(2, 5, 10), float64], Tensor[(100), int64], Tensor[(2, 15, 8), float32], Tensor[(240), float32]) */;
  %1020 = @func_5759() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1021 = cast(%var_6722, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1022 = reshape(%1021, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint8] */;
  %1023 = @func_2959(%1022) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %1024 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1025 = cast(%var_6754, dtype="int64") /* ty=Tensor[(351), int64] */;
  %1026 = cast(%var_6754, dtype="int64") /* ty=Tensor[(351), int64] */;
  %1027 = reshape(%1025, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), int64] */;
  %1028 = reshape(%1026, newshape=[3, 13, 9]) /* ty=Tensor[(3, 13, 9), int64] */;
  %1029 = @func_2486(%1027, %1028) /* ty=(Tensor[(3, 13, 9), int64], Tensor[(3, 13, 9), float32]) */;
  %1030 = cast(%var_6803, dtype="int8") /* ty=Tensor[(672), int8] */;
  %1031 = reshape(%1030, newshape=[3, 16, 14]) /* ty=Tensor[(3, 16, 14), int8] */;
  %1032 = @func_2099(%1031) /* ty=(Tensor[(3, 16, 14), int8],) */;
  %1033 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1034 = %1005.0;
  %1035 = %1006.1;
  %1036 = %1019.7;
  %1037 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
  %1038 = %1020.0;
  %1039 = %1023.1;
  %1040 = %1024.0;
  %1041 = %1029.1;
  %1042 = %1032.0;
  %1043 = %1033.0;
  (%1034, %1035, %1036, %var_6662, %var_6663, %var_6664, meta[relay.Constant][53] /* ty=Tensor[(320), uint16] */, meta[relay.Constant][54] /* ty=Tensor[(120, 2), float32] */, %1037, %1038, %1039, %var_6722, %1040, %1041, %var_6754, %1042, %var_6803, %1043)
}

def @func_1483(%var_1475: Tensor[(2, 5, 10), int64], %var_1476: Tensor[(2, 5, 10), int64]) -> (Tensor[(2, 5, 10), int64],) {
  %1044 = cast(%var_1476, dtype="int64") /* ty=Tensor[(2, 5, 10), int64] */;
  %1045 = shape_of(%var_1475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1046 = cast(%var_1475, dtype="int64") /* ty=Tensor[(2, 5, 10), int64] */;
  %1047 = dyn.reshape(%1044, %1045, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1048 = maximum(%1046, %1047) /* ty=Tensor[(2, 5, 10), int64] */;
  (%1048,)
}

def @func_12882() -> (Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8]) {
  @func_12880() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8]) */
}

def @func_8291() -> (Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) {
  %1053 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) {
    %1049 = @func_5183() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %1050 = @func_6064() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(100), int64], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32]) */;
    %1051 = %1049.0;
    %1052 = %1050.3;
    (%1051, %1052)
  };
  %1053() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) */
}

def @func_12281() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  @func_12279() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_16511(%var_16509: Tensor[(2, 4), int16], %var_16510: Tensor[(64, 1), bool]) -> (Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(5, 126), float64], Tensor[(648), int32], Tensor[(2, 4), int16], Tensor[(64, 1), bool], Tensor[(144), uint8], Tensor[(9, 13, 64), float32]) {
  %1075 = fn (%var_16478: Tensor[(2, 4), int16], %var_16479: Tensor[(64, 1), bool]) -> (Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(5, 126), float64], Tensor[(648), int32], Tensor[(2, 4), int16], Tensor[(64, 1), bool], Tensor[(144), uint8], Tensor[(9, 13, 64), float32]) {
    %1054 = @func_9283() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
    %1055 = @func_10648() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), int8], Tensor[(2, 15, 8), float32], Tensor[(126), float32], Tensor[(378, 4), float32]) */;
    %1056 = @func_7093() /* ty=(Tensor[(9, 13, 1), bool],) */;
    %1057 = %1056.0;
    %1058 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 126), float64] */, dtype="float64") /* ty=Tensor[(5, 126), float64] */;
    %1059 = cast(meta[relay.Constant][56] /* ty=Tensor[(648), int32] */, dtype="int32") /* ty=Tensor[(648), int32] */;
    %1060 = cast(%var_16478, dtype="int16") /* ty=Tensor[(2, 4), int16] */;
    %1061 = cast(%var_16479, dtype="bool") /* ty=Tensor[(64, 1), bool] */;
    %1062 = cast(meta[relay.Constant][57] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %1063 = reshape(%1058, newshape=[9, 7, 10]) /* ty=Tensor[(9, 7, 10), float64] */;
    %1064 = reshape(%1059, newshape=[648]) /* ty=Tensor[(648), int32] */;
    %1065 = reshape(%1060, newshape=[8, 1]) /* ty=Tensor[(8, 1), int16] */;
    %1066 = reshape(%1061, newshape=[64]) /* ty=Tensor[(64), bool] */;
    %1067 = reshape(%1062, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %1068 = @func_9820(%1063, %1064, %1065, %1066, %1067) /* ty=(Tensor[(9, 7, 10), int16], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32], Tensor[(8, 64), int32], Tensor[(8, 1), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(8, 5, 5), bool], Tensor[(200), bool]) */;
    %1069 = %1068.6;
    %1070 = cast(%1057, dtype="float32") /* ty=Tensor[(9, 13, 1), float32] */;
    %1071 = cast(%1069, dtype="float32") /* ty=Tensor[(64), float32] */;
    %1072 = %1054.1;
    %1073 = %1055.1;
    %1074 = mod(%1070, %1071) /* ty=Tensor[(9, 13, 64), float32] */;
    (%1072, %1073, meta[relay.Constant][55] /* ty=Tensor[(5, 126), float64] */, meta[relay.Constant][56] /* ty=Tensor[(648), int32] */, %var_16478, %var_16479, meta[relay.Constant][57] /* ty=Tensor[(144), uint8] */, %1074)
  };
  %1075(%var_16509, %var_16510) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(5, 126), float64], Tensor[(648), int32], Tensor[(2, 4), int16], Tensor[(64, 1), bool], Tensor[(144), uint8], Tensor[(9, 13, 64), float32]) */
}

def @func_4268() -> Tensor[(3, 13, 8), float32] {
  %1077 = fn () -> Tensor[(3, 13, 8), float32] {
    %1076 = cast(meta[relay.Constant][58] /* ty=Tensor[(3, 13, 8), float32] */, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
    log2(%1076) /* ty=Tensor[(3, 13, 8), float32] */
  };
  %1077() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_5828() -> (Tensor[(3, 7, 6), float32],) {
  %1078 = @func_5759() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1079 = %1078.0;
  (%1079,)
}

def @func_6007(%var_6005: Tensor[(1, 126), float32], %var_6006: Tensor[(12, 126), float32]) -> (Tensor[(2, 15, 8), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(12, 126), float64]) {
  %1091 = fn (%var_5988: Tensor[(1, 126), float32], %var_5994: Tensor[(12, 126), float32]) -> (Tensor[(2, 15, 8), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(12, 126), float64]) {
    %1080 = @func_5130() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) */;
    %1081 = cast(%var_5988, dtype="float32") /* ty=Tensor[(1, 126), float32] */;
    %1082 = cast(meta[relay.Constant][59] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
    %1083 = reshape(%1081, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
    %1084 = reshape(%1082, newshape=[54]) /* ty=Tensor[(54), float32] */;
    %1085 = @func_4405(%1083, %1084) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32]) */;
    %1086 = cast(%var_5988, dtype="float64") /* ty=Tensor[(1, 126), float64] */;
    %1087 = cast(%var_5994, dtype="float64") /* ty=Tensor[(12, 126), float64] */;
    %1088 = %1080.5;
    %1089 = %1085.3;
    %1090 = divide(%1086, %1087) /* ty=Tensor[(12, 126), float64] */;
    (%1088, %1089, meta[relay.Constant][59] /* ty=Tensor[(54), float32] */, %1090)
  };
  %1091(%var_6005, %var_6006) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(12, 126), float64]) */
}

def @func_18456() -> Tensor[(3, 13, 8), float32] {
  @func_18454() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_10089() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) {
  @func_10087() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */
}

def @func_14148() -> (Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32]) {
  %1092 = @func_8712() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(336, 2), int8]) */;
  %1093 = @func_6919() /* ty=(Tensor[(2, 15, 8), float32],) */;
  %1094 = %1092.1;
  %1095 = %1093.0;
  (%1094, %1095)
}

def @func_15183() -> Tensor[(54), float32] {
  %1097 = fn () -> Tensor[(54), float32] {
    %1096 = @func_12299() /* ty=(Tensor[(54), float32],) */;
    %1096.0
  };
  %1097() /* ty=Tensor[(54), float32] */
}

def @func_7407() -> Tensor[(9, 13, 1), bool] {
  %1098 = @func_7093() /* ty=(Tensor[(9, 13, 1), bool],) */;
  %1098.0
}

def @func_7074() -> (Tensor[(3, 7, 6), float32], Tensor[(2, 15, 8), float32]) {
  %1099 = @func_5759() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1100 = @func_6919() /* ty=(Tensor[(2, 15, 8), float32],) */;
  %1101 = %1099.0;
  %1102 = %1100.0;
  (%1101, %1102)
}

def @func_10833() -> (Tensor[(3, 16, 14), float64], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) {
  %1111 = fn () -> (Tensor[(3, 16, 14), float64], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) {
    %1103 = @func_10702() /* ty=(Tensor[(3, 16, 14), float64],) */;
    %1104 = cast(meta[relay.Constant][60] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
    %1105 = cast(meta[relay.Constant][60] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
    %1106 = reshape(%1104, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
    %1107 = reshape(%1105, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
    %1108 = @func_1483(%1106, %1107) /* ty=(Tensor[(2, 5, 10), int64],) */;
    %1109 = %1103.0;
    %1110 = %1108.0;
    (%1109, %1110, meta[relay.Constant][60] /* ty=Tensor[(100), int64] */)
  };
  %1111() /* ty=(Tensor[(3, 16, 14), float64], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */
}

def @func_12022() -> Tensor[(3, 13, 8), float32] {
  %1112 = fn () -> Tensor[(3, 13, 8), float32] {
    @func_10900() /* ty=Tensor[(3, 13, 8), float32] */
  };
  %1112() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_11321(%var_11319: Tensor[(126), float32]) -> (Tensor[(3, 7, 6), int64], Tensor[(126), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 13, 8), uint32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  @func_11318(%var_11319) /* ty=(Tensor[(3, 7, 6), int64], Tensor[(126), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 13, 8), uint32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_15047() -> Tensor[(3, 13, 8), float64] {
  %1113 = @func_12880() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8]) */;
  %1113.0
}

def @func_8430() -> (Tensor[(3, 13, 8), bool], Tensor[(2, 9, 3), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float64], Tensor[(3, 7, 6), float64]) {
  @func_8428() /* ty=(Tensor[(3, 13, 8), bool], Tensor[(2, 9, 3), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float64], Tensor[(3, 7, 6), float64]) */
}

def @func_15049() -> Tensor[(3, 13, 8), float64] {
  @func_15047() /* ty=Tensor[(3, 13, 8), float64] */
}

def @func_17412() -> Tensor[(54), float32] {
  %1115 = fn () -> Tensor[(54), float32] {
    %1114 = @func_7415() /* ty=(Tensor[(54), float32],) */;
    %1114.0
  };
  %1115() /* ty=Tensor[(54), float32] */
}

def @func_10227(%var_10226: Tensor[(312), float32]) -> (Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) {
  %1122 = fn (%var_10211: Tensor[(312), float32]) -> (Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) {
    %1116 = cast(%var_10211, dtype="float32") /* ty=Tensor[(312), float32] */;
    %1117 = reshape(%1116, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
    %1118 = @func_6598(%1117) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float32]) */;
    %1119 = @func_8269() /* ty=Tensor[(54), float32] */;
    %1120 = @func_9585() /* ty=Tensor[(3, 7, 6), float32] */;
    %1121 = %1118.1;
    (%1119, %1120, %1121, %var_10211)
  };
  %1122(%var_10226) /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) */
}

def @func_18276() -> (Tensor[(3, 7, 6), float32],) {
  %1123 = @func_7664() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), bool]) */;
  %1124 = %1123.2;
  (%1124,)
}

def @func_6601(%var_6599: Tensor[(3, 13, 8), float32]) -> (Tensor[(54), float32], Tensor[(3, 13, 8), float32]) {
  @func_6598(%var_6599) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_5048() -> (Tensor[(3, 13, 8), float32], Tensor[(54), float32]) {
  %1127 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(54), float32]) {
    %1125 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
    %1126 = @func_4726() /* ty=Tensor[(54), float32] */;
    (%1125, %1126)
  };
  %1127() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */
}

def @func_11504() -> (Tensor[(3, 13, 8), float32], Tensor[(126), float32]) {
  @func_11502() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(126), float32]) */
}

def @func_20158() -> (Tensor[(3, 7, 6), float32], Tensor[(8, 5, 8), bool], Tensor[(320), uint16]) {
  @func_20156() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(8, 5, 8), bool], Tensor[(320), uint16]) */
}

def @func_18224() -> Tensor[(3, 7, 6), float32] {
  %1129 = fn () -> Tensor[(3, 7, 6), float32] {
    %1128 = @func_17024() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(8, 5, 8), bool], Tensor[(320), uint16]) */;
    %1128.0
  };
  %1129() /* ty=Tensor[(3, 7, 6), float32] */
}

def @func_10887() -> (Tensor[(3, 13, 8), float32],) {
  %1132 = fn () -> (Tensor[(3, 13, 8), float32],) {
    %1130 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
    %1131 = %1130.0;
    (%1131,)
  };
  %1132() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_7391() -> (Tensor[(54), float32],) {
  %1133 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %1134 = %1133.1;
  (%1134,)
}

def @func_10649() -> (Tensor[(54), float32], Tensor[(3, 16, 14), int8], Tensor[(2, 15, 8), float32], Tensor[(126), float32], Tensor[(378, 4), float32]) {
  %1144 = fn () -> (Tensor[(54), float32], Tensor[(3, 16, 14), int8], Tensor[(2, 15, 8), float32], Tensor[(126), float32], Tensor[(378, 4), float32]) {
    %1135 = @func_9648() /* ty=(Tensor[(3, 16, 14), int8],) */;
    %1136 = cast(meta[relay.Constant][61] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %1137 = cast(meta[relay.Constant][62] /* ty=Tensor[(378, 4), float32] */, dtype="float32") /* ty=Tensor[(378, 4), float32] */;
    %1138 = reshape(%1136, newshape=[1, 126]) /* ty=Tensor[(1, 126), float32] */;
    %1139 = reshape(%1137, newshape=[12, 126]) /* ty=Tensor[(12, 126), float32] */;
    %1140 = @func_6004(%1138, %1139) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(12, 126), float64]) */;
    %1141 = @func_5209() /* ty=Tensor[(54), float32] */;
    %1142 = %1135.0;
    %1143 = %1140.0;
    (%1141, %1142, %1143, meta[relay.Constant][61] /* ty=Tensor[(126), float32] */, meta[relay.Constant][62] /* ty=Tensor[(378, 4), float32] */)
  };
  %1144() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), int8], Tensor[(2, 15, 8), float32], Tensor[(126), float32], Tensor[(378, 4), float32]) */
}

def @func_15666(%var_15665: Tensor[(54), float32]) -> (Tensor[(3, 7, 6), float64], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32], Tensor[(9, 13, 1), bool]) {
  %1160 = fn (%var_15622: Tensor[(54), float32]) -> (Tensor[(3, 7, 6), float64], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32], Tensor[(9, 13, 1), bool]) {
    %1145 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %1146 = %1145.0;
    %1147 = cast(%1146, dtype="float64") /* ty=Tensor[(3, 7, 6), float64] */;
    %1148 = cast(meta[relay.Constant][63] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1149 = cast(meta[relay.Constant][63] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1150 = reshape(%1148, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
    %1151 = reshape(%1149, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
    %1152 = cast(%var_15622, dtype="float32") /* ty=Tensor[(54), float32] */;
    %1153 = reshape(%1152, newshape=[2, 9, 3]) /* ty=Tensor[(2, 9, 3), float32] */;
    %1154 = @func_664(%1153) /* ty=(Tensor[(2, 9, 3), float32],) */;
    %1155 = @func_7093() /* ty=(Tensor[(9, 13, 1), bool],) */;
    %1156 = erf(%1147) /* ty=Tensor[(3, 7, 6), float64] */;
    %1157 = @func_74(%1150, %1151) /* ty=Tensor[(2, 15, 8), float32] */;
    %1158 = %1154.0;
    %1159 = %1155.0;
    (%1156, %1157, meta[relay.Constant][63] /* ty=Tensor[(240), float32] */, %1158, %var_15622, %1159)
  };
  %1160(%var_15665) /* ty=(Tensor[(3, 7, 6), float64], Tensor[(2, 15, 8), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32], Tensor[(9, 13, 1), bool]) */
}

def @func_12983(%var_12981: Tensor[(8, 30), float32]) -> (Tensor[(54), float32], Tensor[(9, 13, 54), float32], Tensor[(390), float32], Tensor[(8, 30), float32]) {
  @func_12980(%var_12981) /* ty=(Tensor[(54), float32], Tensor[(9, 13, 54), float32], Tensor[(390), float32], Tensor[(8, 30), float32]) */
}

def @func_20322() -> Tensor[(3, 7, 6), float32] {
  %1162 = fn () -> Tensor[(3, 7, 6), float32] {
    %1161 = @func_13911() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
    %1161.1
  };
  %1162() /* ty=Tensor[(3, 7, 6), float32] */
}

def @func_18121() -> Tensor[(3, 13, 8), float32] {
  %1164 = fn () -> Tensor[(3, 13, 8), float32] {
    %1163 = @func_8035() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %1163.0
  };
  %1164() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_11040() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  %1169 = fn () -> (Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
    %1165 = @func_10976() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
    %1166 = @func_10324() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %1167 = %1165.1;
    %1168 = %1166.0;
    (%1167, %1168)
  };
  %1169() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_17026() -> (Tensor[(3, 7, 6), float32], Tensor[(8, 5, 8), bool], Tensor[(320), uint16]) {
  @func_17024() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(8, 5, 8), bool], Tensor[(320), uint16]) */
}

def @func_19209() -> (Tensor[(3, 13, 8), float32],) {
  %1172 = fn () -> (Tensor[(3, 13, 8), float32],) {
    %1170 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %1171 = %1170.0;
    (%1171,)
  };
  %1172() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_21501() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) {
  %1173 = @func_11464() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
  %1174 = @func_15741() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1175 = %1173.1;
  %1176 = %1174.0;
  %1177 = @func_10445() /* ty=Tensor[(9, 13, 1), bool] */;
  (%1175, %1176, %1177)
}

def @func_11216() -> (Tensor[(3, 13, 8), float32],) {
  %1178 = @func_7019() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
  %1179 = %1178.1;
  (%1179,)
}

def @func_18779() -> (Tensor[(2, 5, 10), int64], Tensor[(144), uint8], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  @func_18777() /* ty=(Tensor[(2, 5, 10), int64], Tensor[(144), uint8], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_22091(%var_22066: Tensor[(16, 11, 1), float32], %var_22067: Tensor[(16, 11, 16), float32]) -> (Tensor[(16, 11, 16), bool], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %1180 = cast(%var_22066, dtype="bool") /* ty=Tensor[(16, 11, 1), bool] */;
  %1181 = cast(%var_22067, dtype="bool") /* ty=Tensor[(16, 11, 16), bool] */;
  %1182 = @func_7664() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), bool]) */;
  %1183 = @func_11816() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) */;
  %1184 = greater(%1180, %1181) /* ty=Tensor[(16, 11, 16), bool] */;
  %1185 = %1182.3;
  %1186 = %1183.0;
  (%1184, %1185, %1186)
}

def @func_5614() -> (Tensor[(3, 13, 8), float32],) {
  @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_6598(%var_6557: Tensor[(3, 13, 8), float32]) -> (Tensor[(54), float32], Tensor[(3, 13, 8), float32]) {
  %1187 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1188 = %1187.0;
  %1189 = cast(%var_6557, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %1190 = shape_of(%1188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1191 = cast(%1188, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %1192 = dyn.reshape(%1189, %1190, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1193 = @func_4726() /* ty=Tensor[(54), float32] */;
  %1194 = divide(%1191, %1192) /* ty=Tensor[(3, 13, 8), float32] */;
  (%1193, %1194)
}

def @func_14420() -> (Tensor[(54), float32], Tensor[(3, 16, 14), float64]) {
  %1199 = fn () -> (Tensor[(54), float32], Tensor[(3, 16, 14), float64]) {
    %1195 = @func_10995() /* ty=(Tensor[(54), float32],) */;
    %1196 = @func_13875() /* ty=(Tensor[(3, 16, 14), float64], Tensor[(54), float32]) */;
    %1197 = %1195.0;
    %1198 = %1196.0;
    (%1197, %1198)
  };
  %1199() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), float64]) */
}

def @func_16647() -> (Tensor[(3, 7, 6), float32], Tensor[(54), float32]) {
  %1204 = fn () -> (Tensor[(3, 7, 6), float32], Tensor[(54), float32]) {
    %1200 = @func_10976() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
    %1201 = @func_10995() /* ty=(Tensor[(54), float32],) */;
    %1202 = %1200.1;
    %1203 = %1201.0;
    (%1202, %1203)
  };
  %1204() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(54), float32]) */
}

def @func_4500() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) {
  %1212 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) {
    %1205 = cast(meta[relay.Constant][64] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %1206 = cast(meta[relay.Constant][65] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
    %1207 = reshape(%1205, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
    %1208 = reshape(%1206, newshape=[54]) /* ty=Tensor[(54), float32] */;
    %1209 = @func_4405(%1207, %1208) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32]) */;
    %1210 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
    %1211 = %1209.0;
    (%1210, %1211, meta[relay.Constant][64] /* ty=Tensor[(126), float32] */, meta[relay.Constant][65] /* ty=Tensor[(54), float32] */)
  };
  %1212() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */
}

def @func_6102() -> (Tensor[(3, 7, 6), float64], Tensor[(54), float32]) {
  %1213 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1214 = %1213.0;
  %1215 = cast(%1214, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %1216 = tan(%1215) /* ty=Tensor[(3, 7, 6), float32] */;
  %1217 = cast(%1216, dtype="float64") /* ty=Tensor[(3, 7, 6), float64] */;
  %1218 = @func_5275() /* ty=(Tensor[(54), float32],) */;
  %1219 = acos(%1217) /* ty=Tensor[(3, 7, 6), float64] */;
  %1220 = %1218.0;
  (%1219, %1220)
}

def @func_19030() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %1221 = @func_11464() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
  %1222 = %1221.1;
  %1223 = @func_18223() /* ty=Tensor[(3, 7, 6), float32] */;
  (%1222, %1223)
}

def @func_18383() -> (Tensor[(3, 13, 8), float32], Tensor[(9, 13, 1), bool]) {
  %1224 = @func_10663() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1225 = %1224.0;
  %1226 = @func_10445() /* ty=Tensor[(9, 13, 1), bool] */;
  (%1225, %1226)
}

def @func_8428() -> (Tensor[(3, 13, 8), bool], Tensor[(2, 9, 3), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float64], Tensor[(3, 7, 6), float64]) {
  %1227 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
  %1228 = cast(%1227, dtype="float64") /* ty=Tensor[(3, 13, 8), float64] */;
  %1229 = sigmoid(%1228) /* ty=Tensor[(3, 13, 8), float64] */;
  %1230 = @func_8290() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) */;
  %1231 = %1230.0;
  %1232 = cast(%1231, dtype="bool") /* ty=Tensor[(3, 13, 8), bool] */;
  %1233 = shape_of(%1229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1234 = cast(%1229, dtype="bool") /* ty=Tensor[(3, 13, 8), bool] */;
  %1235 = dyn.reshape(%1232, %1233, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1236 = cast(meta[relay.Constant][66] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1237 = reshape(%1236, newshape=[2, 9, 3]) /* ty=Tensor[(2, 9, 3), float32] */;
  %1238 = @func_664(%1237) /* ty=(Tensor[(2, 9, 3), float32],) */;
  %1239 = @func_4499() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */;
  %1240 = %1239.1;
  %1241 = cast(%1240, dtype="float64") /* ty=Tensor[(3, 7, 6), float64] */;
  %1242 = @func_5759() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1243 = %1242.0;
  %1244 = cast(%1243, dtype="float64") /* ty=Tensor[(3, 7, 6), float64] */;
  %1245 = logical_and(%1234, %1235) /* ty=Tensor[(3, 13, 8), bool] */;
  %1246 = %1238.0;
  %1247 = rsqrt(%1241) /* ty=Tensor[(3, 7, 6), float64] */;
  %1248 = atanh(%1244) /* ty=Tensor[(3, 7, 6), float64] */;
  (%1245, %1246, meta[relay.Constant][66] /* ty=Tensor[(54), float32] */, %1247, %1248)
}

def @func_22221() -> (Tensor[(54), float32], Tensor[(192), float32], Tensor[(240), float32]) {
  @func_22219() /* ty=(Tensor[(54), float32], Tensor[(192), float32], Tensor[(240), float32]) */
}

def @func_10500() -> (Tensor[(3, 7, 6), float32],) {
  %1251 = fn () -> (Tensor[(3, 7, 6), float32],) {
    %1249 = @func_10125() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32]) */;
    %1250 = %1249.1;
    (%1250,)
  };
  %1251() /* ty=(Tensor[(3, 7, 6), float32],) */
}

def @func_20938() -> (Tensor[(192), float32],) {
  %1254 = fn () -> (Tensor[(192), float32],) {
    %1252 = @func_13381() /* ty=(Tensor[(9, 13, 1), bool], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) */;
    %1253 = %1252.2;
    (%1253,)
  };
  %1254() /* ty=(Tensor[(192), float32],) */
}

def @func_12434(%var_12425: Tensor[(8, 8), bool], %var_12426: Tensor[(100), int64], %var_12427: Tensor[(144), uint8]) -> (Tensor[(54), float32], Tensor[(144), uint8], Tensor[(8), int16], Tensor[(8, 8), bool], Tensor[(100), int64], Tensor[(144), uint8]) {
  %1255 = @func_5337() /* ty=(Tensor[(54), float32],) */;
  %1256 = cast(meta[relay.Constant][67] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
  %1257 = cast(%var_12425, dtype="bool") /* ty=Tensor[(8, 8), bool] */;
  %1258 = cast(%var_12426, dtype="int64") /* ty=Tensor[(100), int64] */;
  %1259 = cast(%var_12427, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1260 = reshape(%1256, newshape=[8, 1]) /* ty=Tensor[(8, 1), int16] */;
  %1261 = reshape(%1257, newshape=[64]) /* ty=Tensor[(64), bool] */;
  %1262 = reshape(%1258, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %1263 = reshape(%1259, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1264 = @func_7246(%1260, %1261, %1262, %1263) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 9), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(2, 5, 10), int64], Tensor[(8, 64), int32]) */;
  %1265 = %1255.0;
  %1266 = %1264.3;
  (%1265, %1266, meta[relay.Constant][67] /* ty=Tensor[(8), int16] */, %var_12425, %var_12426, %var_12427)
}

def @func_5912(%var_5910: Tensor[(3, 7, 6), float32], %var_5911: Tensor[(144), uint8]) -> (Tensor[(3, 7, 6), int16], Tensor[(100), int64], Tensor[(144), uint8]) {
  %1278 = fn (%var_5890: Tensor[(3, 7, 6), float32], %var_5906: Tensor[(144), uint8]) -> (Tensor[(3, 7, 6), int16], Tensor[(100), int64], Tensor[(144), uint8]) {
    %1267 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %1268 = %1267.0;
    %1269 = cast(%var_5890, dtype="int16") /* ty=Tensor[(3, 7, 6), int16] */;
    %1270 = shape_of(%1268, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1271 = cast(%1268, dtype="int16") /* ty=Tensor[(3, 7, 6), int16] */;
    %1272 = dyn.reshape(%1269, %1270, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1273 = cast(%var_5906, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %1274 = reshape(%1273, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint8] */;
    %1275 = @func_2959(%1274) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
    %1276 = right_shift(%1271, %1272) /* ty=Tensor[(3, 7, 6), int16] */;
    %1277 = %1275.2;
    (%1276, %1277, %var_5906)
  };
  %1278(%var_5910, %var_5911) /* ty=(Tensor[(3, 7, 6), int16], Tensor[(100), int64], Tensor[(144), uint8]) */
}

def @func_8270() -> Tensor[(54), float32] {
  %1279 = fn () -> Tensor[(54), float32] {
    @func_4726() /* ty=Tensor[(54), float32] */
  };
  %1279() /* ty=Tensor[(54), float32] */
}

def @func_17946() -> (Tensor[(54), float32], Tensor[(144), uint8]) {
  %1284 = fn () -> (Tensor[(54), float32], Tensor[(144), uint8]) {
    %1280 = @func_7415() /* ty=(Tensor[(54), float32],) */;
    %1281 = @func_17830() /* ty=(Tensor[(144), uint8],) */;
    %1282 = %1280.0;
    %1283 = %1281.0;
    (%1282, %1283)
  };
  %1284() /* ty=(Tensor[(54), float32], Tensor[(144), uint8]) */
}

def @func_9897() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  @func_9895() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_17977() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %1285 = @func_15868() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(52, 2), float32], Tensor[(3, 7, 6), float32]) */;
  %1286 = %1285.1;
  %1287 = cast(%1286, dtype="bool") /* ty=Tensor[(3, 13, 8), bool] */;
  %1288 = reshape(%1287, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), bool] */;
  %1289 = @func_10299(%1288) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), uint64]) */;
  %1290 = %1289.0;
  (%1286, %1290)
}

def @func_7076() -> (Tensor[(3, 7, 6), float32], Tensor[(2, 15, 8), float32]) {
  @func_7074() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 15, 8), float32]) */
}

def @func_21883() -> (Tensor[(54), float32], Tensor[(54), float32]) {
  %1293 = fn () -> (Tensor[(54), float32], Tensor[(54), float32]) {
    %1291 = @func_21626() /* ty=Tensor[(54), float32] */;
    %1292 = @func_13339() /* ty=Tensor[(54), float32] */;
    (%1291, %1292)
  };
  %1293() /* ty=(Tensor[(54), float32], Tensor[(54), float32]) */
}

def @func_19191(%var_19189: Tensor[(8, 1), int16], %var_19190: Tensor[(240), float32]) -> (Tensor[(3, 16, 14), int8], Tensor[(2, 5, 10), float64], Tensor[(8, 1), int16], Tensor[(240), float32]) {
  %1302 = fn (%var_19169: Tensor[(8, 1), int16], %var_19170: Tensor[(240), float32]) -> (Tensor[(3, 16, 14), int8], Tensor[(2, 5, 10), float64], Tensor[(8, 1), int16], Tensor[(240), float32]) {
    %1294 = @func_16668() /* ty=(Tensor[(3, 16, 14), int8],) */;
    %1295 = cast(%var_19169, dtype="int16") /* ty=Tensor[(8, 1), int16] */;
    %1296 = cast(%var_19170, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1297 = reshape(%1295, newshape=[8]) /* ty=Tensor[(8), int16] */;
    %1298 = reshape(%1296, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %1299 = @func_13686(%1297, %1298) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), float64], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(160, 2), uint16], Tensor[(240), float32]) */;
    %1300 = %1294.0;
    %1301 = %1299.1;
    (%1300, %1301, %var_19169, %var_19170)
  };
  %1302(%var_19189, %var_19190) /* ty=(Tensor[(3, 16, 14), int8], Tensor[(2, 5, 10), float64], Tensor[(8, 1), int16], Tensor[(240), float32]) */
}

def @func_12263() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(2, 5, 10), int64], Tensor[(9, 13, 54), float32]) {
  %1303 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1304 = @func_9470() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) */;
  %1305 = @func_10832() /* ty=(Tensor[(3, 16, 14), float64], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %1306 = @func_9470() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) */;
  %1307 = %1306.0;
  %1308 = @func_11910() /* ty=Tensor[(9, 13, 1), float32] */;
  %1309 = cast(%1307, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1310 = cast(%1308, dtype="float32") /* ty=Tensor[(9, 13, 1), float32] */;
  %1311 = %1303.0;
  %1312 = %1304.1;
  %1313 = %1305.1;
  %1314 = divide(%1309, %1310) /* ty=Tensor[(9, 13, 54), float32] */;
  (%1311, %1312, %1313, %1314)
}

def @func_20027() -> Tensor[(3, 7, 6), float32] {
  %1316 = fn () -> Tensor[(3, 7, 6), float32] {
    %1315 = @func_11039() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
    %1315.0
  };
  %1316() /* ty=Tensor[(3, 7, 6), float32] */
}

def @func_18632() -> (Tensor[(3, 7, 6), float32],) {
  @func_18630() /* ty=(Tensor[(3, 7, 6), float32],) */
}

def @func_20915() -> Tensor[(3, 13, 8), uint32] {
  @func_20701() /* ty=Tensor[(3, 13, 8), uint32] */
}

def @func_20917() -> Tensor[(3, 13, 8), uint32] {
  @func_20915() /* ty=Tensor[(3, 13, 8), uint32] */
}

def @func_21705() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), float32]) {
  %1322 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), float32]) {
    %1317 = @func_19785() /* ty=(Tensor[(3, 16, 14), float64], Tensor[(3, 13, 8), float32]) */;
    %1318 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %1319 = %1317.1;
    %1320 = @func_20701() /* ty=Tensor[(3, 13, 8), uint32] */;
    %1321 = %1318.0;
    (%1319, %1320, %1321)
  };
  %1322() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), float32]) */
}

def @func_10433(%var_10430: Tensor[(64), bool], %var_10431: Tensor[(144), uint8], %var_10432: Tensor[(240), float32]) -> (Tensor[(54), float32], Tensor[(126), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(672), int8], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(8, 5, 8), bool], Tensor[(240), float32]) {
  %1350 = fn (%var_10416: Tensor[(64), bool], %var_10418: Tensor[(144), uint8], %var_10423: Tensor[(240), float32]) -> (Tensor[(54), float32], Tensor[(126), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(672), int8], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(8, 5, 8), bool], Tensor[(240), float32]) {
    %1323 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
    %1324 = @func_6975() /* ty=Tensor[(126), float32] */;
    %1325 = cast(%1324, dtype="float32") /* ty=Tensor[(126), float32] */;
    %1326 = reshape(%1325, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
    %1327 = @func_5015(%1326) /* ty=(Tensor[(3, 7, 6), int64], Tensor[(3, 13, 8), float32]) */;
    %1328 = %1327.1;
    %1329 = cast(%1328, dtype="bool") /* ty=Tensor[(3, 13, 8), bool] */;
    %1330 = reshape(%1329, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), bool] */;
    %1331 = @func_10299(%1330) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), uint64]) */;
    %1332 = @func_10125() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32]) */;
    %1333 = cast(meta[relay.Constant][68] /* ty=Tensor[(8), int16] */, dtype="int16") /* ty=Tensor[(8), int16] */;
    %1334 = cast(%var_10416, dtype="bool") /* ty=Tensor[(64), bool] */;
    %1335 = cast(meta[relay.Constant][69] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
    %1336 = cast(%var_10418, dtype="uint8") /* ty=Tensor[(144), uint8] */;
    %1337 = reshape(%1333, newshape=[8, 1]) /* ty=Tensor[(8, 1), int16] */;
    %1338 = reshape(%1334, newshape=[64]) /* ty=Tensor[(64), bool] */;
    %1339 = reshape(%1335, newshape=[100]) /* ty=Tensor[(100), int64] */;
    %1340 = reshape(%1336, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %1341 = @func_7246(%1337, %1338, %1339, %1340) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 9), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(351), int64], Tensor[(672), int8], Tensor[(2, 5, 10), int64], Tensor[(8, 64), int32]) */;
    %1342 = cast(%var_10423, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1343 = reshape(%1342, newshape=[24, 10]) /* ty=Tensor[(24, 10), float32] */;
    %1344 = @func_7332(%1343) /* ty=(Tensor[(24, 10), uint32], Tensor[(8, 5, 8), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(312), float32], Tensor[(2, 9, 3), float32]) */;
    %1345 = %1323.1;
    %1346 = %1331.0;
    %1347 = %1332.1;
    %1348 = %1341.5;
    %1349 = %1344.1;
    (%1345, %1324, %1328, %1346, %1347, %1348, meta[relay.Constant][68] /* ty=Tensor[(8), int16] */, %var_10416, meta[relay.Constant][69] /* ty=Tensor[(100), int64] */, %var_10418, %1349, %var_10423)
  };
  %1350(%var_10430, %var_10431, %var_10432) /* ty=(Tensor[(54), float32], Tensor[(126), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(672), int8], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(8, 5, 8), bool], Tensor[(240), float32]) */
}

def @func_10576() -> Tensor[(3, 13, 8), float32] {
  %1352 = fn () -> Tensor[(3, 13, 8), float32] {
    %1351 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %1351.0
  };
  %1352() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_11338(%var_11333: Tensor[(126), float32]) -> (Tensor[(144), uint8], Tensor[(100), int64], Tensor[(126), float32]) {
  %1353 = @func_8290() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(144), uint8]) */;
  %1354 = cast(%var_11333, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1355 = %1353.1;
  %1356 = cast(%1355, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1357 = reshape(%1354, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %1358 = reshape(%1356, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1359 = @func_5909(%1357, %1358) /* ty=(Tensor[(3, 7, 6), int16], Tensor[(100), int64], Tensor[(144), uint8]) */;
  %1360 = %1359.1;
  (%1355, %1360, %var_11333)
}

def @func_4482() -> (Tensor[(3, 13, 8), float32],) {
  @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_16529() -> (Tensor[(54), float32], Tensor[(3, 16, 14), float64], Tensor[(8, 8, 3), float32]) {
  %1361 = @func_10832() /* ty=(Tensor[(3, 16, 14), float64], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %1362 = @func_13381() /* ty=(Tensor[(9, 13, 1), bool], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) */;
  %1363 = @func_13339() /* ty=Tensor[(54), float32] */;
  %1364 = %1361.0;
  %1365 = %1362.1;
  (%1363, %1364, %1365)
}

def @func_8006(%var_7959: Tensor[(9, 9, 8), int32], %var_7960: Tensor[(9, 9, 8), int32]) -> (Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) {
  %1366 = cast(%var_7960, dtype="bool") /* ty=Tensor[(9, 9, 8), bool] */;
  %1367 = shape_of(%var_7959, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1368 = cast(%var_7959, dtype="bool") /* ty=Tensor[(9, 9, 8), bool] */;
  %1369 = dyn.reshape(%1366, %1367, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1370 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1371 = greater_equal(%1368, %1369) /* ty=Tensor[(9, 9, 8), bool] */;
  %1372 = %1370.0;
  (%1371, %1372)
}

def @func_5185() -> (Tensor[(3, 13, 8), float32],) {
  @func_5183() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_18278() -> (Tensor[(3, 7, 6), float32],) {
  @func_18276() /* ty=(Tensor[(3, 7, 6), float32],) */
}

def @func_11533() -> (Tensor[(126), float32],) {
  %1375 = fn () -> (Tensor[(126), float32],) {
    %1373 = @func_10648() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), int8], Tensor[(2, 15, 8), float32], Tensor[(126), float32], Tensor[(378, 4), float32]) */;
    %1374 = %1373.3;
    (%1374,)
  };
  %1375() /* ty=(Tensor[(126), float32],) */
}

def @func_6643() -> (Tensor[(3, 7, 6), float32], Tensor[(54), float32]) {
  %1379 = fn () -> (Tensor[(3, 7, 6), float32], Tensor[(54), float32]) {
    %1376 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %1377 = %1376.0;
    %1378 = @func_5209() /* ty=Tensor[(54), float32] */;
    (%1377, %1378)
  };
  %1379() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(54), float32]) */
}

def @func_18321() -> (Tensor[(54), float32],) {
  %1380 = @func_17411() /* ty=Tensor[(54), float32] */;
  (%1380,)
}

def @func_15870() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(52, 2), float32], Tensor[(3, 7, 6), float32]) {
  @func_15868() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(52, 2), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_20072() -> Tensor[(3, 13, 8), float32] {
  %1383 = fn () -> Tensor[(3, 13, 8), float32] {
    %1381 = @func_18867() /* ty=Tensor[(3, 13, 8), float32] */;
    %1382 = cast(%1381, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
    atan(%1382) /* ty=Tensor[(3, 13, 8), float32] */
  };
  %1383() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_20633() -> Tensor[(8, 8, 3), float32] {
  %1385 = fn () -> Tensor[(8, 8, 3), float32] {
    %1384 = @func_13381() /* ty=(Tensor[(9, 13, 1), bool], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) */;
    %1384.1
  };
  %1385() /* ty=Tensor[(8, 8, 3), float32] */
}

def @func_21479() -> Tensor[(3, 13, 8), float32] {
  @func_18867() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_9979() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 216), bool], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) {
  %1386 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1387 = cast(meta[relay.Constant][70] /* ty=Tensor[(3, 216), int32] */, dtype="int32") /* ty=Tensor[(3, 216), int32] */;
  %1388 = cast(meta[relay.Constant][70] /* ty=Tensor[(3, 216), int32] */, dtype="int32") /* ty=Tensor[(3, 216), int32] */;
  %1389 = reshape(%1387, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %1390 = reshape(%1388, newshape=[9, 9, 8]) /* ty=Tensor[(9, 9, 8), int32] */;
  %1391 = @func_8006(%1389, %1390) /* ty=(Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) */;
  %1392 = %1391.0;
  %1393 = cast(%1392, dtype="bool") /* ty=Tensor[(9, 9, 8), bool] */;
  %1394 = shape_of(meta[relay.Constant][70] /* ty=Tensor[(3, 216), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1395 = cast(meta[relay.Constant][70] /* ty=Tensor[(3, 216), int32] */, dtype="bool") /* ty=Tensor[(3, 216), bool] */;
  %1396 = dyn.reshape(%1393, %1394, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1397 = @func_4499() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */;
  %1398 = %1397.1;
  %1399 = cast(%1398, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %1400 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1401 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
  %1402 = %1386.0;
  %1403 = less_equal(%1395, %1396) /* ty=Tensor[(3, 216), bool] */;
  %1404 = atan(%1399) /* ty=Tensor[(3, 7, 6), float32] */;
  %1405 = %1400.0;
  (%1401, %1402, %1403, %1404, %1405)
}

def @func_6104() -> (Tensor[(3, 7, 6), float64], Tensor[(54), float32]) {
  @func_6102() /* ty=(Tensor[(3, 7, 6), float64], Tensor[(54), float32]) */
}

def @func_4648() -> (Tensor[(3, 7, 6), float32],) {
  %1408 = fn () -> (Tensor[(3, 7, 6), float32],) {
    %1406 = @func_4499() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */;
    %1407 = %1406.1;
    (%1407,)
  };
  %1408() /* ty=(Tensor[(3, 7, 6), float32],) */
}

def @func_11318(%var_11253: Tensor[(126), float32]) -> (Tensor[(3, 7, 6), int64], Tensor[(126), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 13, 8), uint32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  %1409 = cast(%var_11253, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1410 = reshape(%1409, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %1411 = @func_5015(%1410) /* ty=(Tensor[(3, 7, 6), int64], Tensor[(3, 13, 8), float32]) */;
  %1412 = @func_7756() /* ty=(Tensor[(54), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(240), float32], Tensor[(2, 9, 3), float64]) */;
  %1413 = @func_11216() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1414 = %1413.0;
  %1415 = cast(%1414, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %1416 = reshape(%1415, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %1417 = @func_5677(%1416) /* ty=(Tensor[(3, 13, 8), uint32],) */;
  %1418 = %1417.0;
  %1419 = cast(%1418, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
  %1420 = reshape(%1419, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %1421 = @func_4943(%1420) /* ty=(Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), bool]) */;
  %1422 = cast(%1414, dtype="float64") /* ty=Tensor[(3, 13, 8), float64] */;
  %1423 = shape_of(%1418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1424 = cast(%1418, dtype="float64") /* ty=Tensor[(3, 13, 8), float64] */;
  %1425 = dyn.reshape(%1422, %1423, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1426 = %1411.0;
  %1427 = %1412.4;
  %1428 = %1421.0;
  %1429 = @func_9585() /* ty=Tensor[(3, 7, 6), float32] */;
  %1430 = floor_divide(%1424, %1425) /* ty=Tensor[(3, 13, 8), float64] */;
  %1431 = @func_10900() /* ty=Tensor[(3, 13, 8), float32] */;
  %1432 = @func_10900() /* ty=Tensor[(3, 13, 8), float32] */;
  (%1426, %var_11253, %1427, %1428, %1429, %1430, %1431, %1432)
}

def @func_14052(%var_14051: Tensor[(72, 2), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(72, 2), uint8], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
  %1448 = fn (%var_14020: Tensor[(72, 2), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(72, 2), uint8], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) {
    %1433 = @func_11059() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %1434 = %1433.0;
    %1435 = cast(%1434, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
    %1436 = cast(%var_14020, dtype="uint8") /* ty=Tensor[(72, 2), uint8] */;
    %1437 = reshape(%1435, newshape=[312, 1]) /* ty=Tensor[(312, 1), float32] */;
    %1438 = reshape(%1436, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %1439 = @func_7948(%1437, %1438) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), uint32], Tensor[(312, 1), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
    %1440 = @func_6311() /* ty=(Tensor[(54), float32],) */;
    %1441 = @func_12632() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32]) */;
    %1442 = @func_5759() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %1443 = %1439.1;
    %1444 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
    %1445 = %1440.0;
    %1446 = %1441.0;
    %1447 = %1442.0;
    (%1434, %1443, %var_14020, %1444, %1445, %1446, %1447)
  };
  %1448(%var_14051) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(72, 2), uint8], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_16710(%var_16708: Tensor[(7, 1, 15), float32]) -> (Tensor[(7, 1, 15), float32], Tensor[(9, 13, 1), bool], Tensor[(54), float32], Tensor[(3, 13, 8), float32]) {
  @func_16707(%var_16708) /* ty=(Tensor[(7, 1, 15), float32], Tensor[(9, 13, 1), bool], Tensor[(54), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_21721() -> (Tensor[(3, 13, 8), float64],) {
  @func_21719() /* ty=(Tensor[(3, 13, 8), float64],) */
}

def @func_10977() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %1452 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
    %1449 = @func_7074() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 15, 8), float32]) */;
    %1450 = @func_7564() /* ty=Tensor[(3, 13, 8), float32] */;
    %1451 = %1449.0;
    (%1450, %1451)
  };
  %1452() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_8010(%var_8008: Tensor[(9, 9, 8), int32], %var_8009: Tensor[(9, 9, 8), int32]) -> (Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) {
  @func_8006(%var_8008, %var_8009) /* ty=(Tensor[(9, 9, 8), bool], Tensor[(3, 7, 6), float32]) */
}

def @func_14367() -> (Tensor[(54), float32], Tensor[(9, 13, 1), bool]) {
  %1453 = @func_9549() /* ty=(Tensor[(54), float32],) */;
  %1454 = %1453.0;
  %1455 = @func_7407() /* ty=Tensor[(9, 13, 1), bool] */;
  (%1454, %1455)
}

def @func_18939() -> (Tensor[(3, 7, 6), float32], Tensor[(54), float32]) {
  %1460 = fn () -> (Tensor[(3, 7, 6), float32], Tensor[(54), float32]) {
    %1456 = @func_7074() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 15, 8), float32]) */;
    %1457 = @func_7415() /* ty=(Tensor[(54), float32],) */;
    %1458 = %1456.0;
    %1459 = %1457.0;
    (%1458, %1459)
  };
  %1460() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(54), float32]) */
}

def @func_21719() -> (Tensor[(3, 13, 8), float64],) {
  %1461 = @func_8865() /* ty=Tensor[(3, 13, 8), float64] */;
  (%1461,)
}

def @func_6223() -> (Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(8, 5, 5), bool], Tensor[(200), bool], Tensor[(3, 7, 6), float32]) {
  %1471 = fn () -> (Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(8, 5, 5), bool], Tensor[(200), bool], Tensor[(3, 7, 6), float32]) {
    %1462 = @func_6102() /* ty=(Tensor[(3, 7, 6), float64], Tensor[(54), float32]) */;
    %1463 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %1464 = cast(meta[relay.Constant][71] /* ty=Tensor[(200), bool] */, dtype="bool") /* ty=Tensor[(200), bool] */;
    %1465 = reshape(%1464, newshape=[8, 5, 5]) /* ty=Tensor[(8, 5, 5), bool] */;
    %1466 = @func_5772() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %1467 = %1462.1;
    %1468 = %1463.0;
    %1469 = @func_3306(%1465) /* ty=Tensor[(8, 5, 5), bool] */;
    %1470 = %1466.0;
    (%1467, %1468, %1469, meta[relay.Constant][71] /* ty=Tensor[(200), bool] */, %1470)
  };
  %1471() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(8, 5, 5), bool], Tensor[(200), bool], Tensor[(3, 7, 6), float32]) */
}

def @func_15469() -> (Tensor[(2, 5, 10), int64], Tensor[(3, 13, 8), float32]) {
  %1476 = fn () -> (Tensor[(2, 5, 10), int64], Tensor[(3, 13, 8), float32]) {
    %1472 = @func_12263() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(2, 5, 10), int64], Tensor[(9, 13, 54), float32]) */;
    %1473 = @func_9895() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
    %1474 = %1472.2;
    %1475 = %1473.0;
    (%1474, %1475)
  };
  %1476() /* ty=(Tensor[(2, 5, 10), int64], Tensor[(3, 13, 8), float32]) */
}

def @func_13832(%var_13830: Tensor[(13, 15, 4), float32], %var_13831: Tensor[(13, 15, 4), float32]) -> Tensor[(13, 15, 4), float32] {
  @func_13828(%var_13830, %var_13831) /* ty=Tensor[(13, 15, 4), float32] */
}

def @func_16669() -> (Tensor[(3, 16, 14), int8],) {
  %1479 = fn () -> (Tensor[(3, 16, 14), int8],) {
    %1477 = @func_9648() /* ty=(Tensor[(3, 16, 14), int8],) */;
    %1478 = %1477.0;
    (%1478,)
  };
  %1479() /* ty=(Tensor[(3, 16, 14), int8],) */
}

def @func_15035() -> Tensor[(54), float32] {
  @func_15033() /* ty=Tensor[(54), float32] */
}

def @func_16052(%var_16010: bool, %var_16011: Tensor[(7, 8, 13), bool]) -> (Tensor[(3, 13, 8), float32], Tensor[(7, 8, 13), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  %1480 = cast(%var_16010, dtype="bool") /* ty=bool */;
  %1481 = cast(%var_16011, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
  %1482 = logical_or(%1480, %1481) /* ty=Tensor[(7, 8, 13), bool] */;
  %1483 = cast(%var_16011, dtype="float64") /* ty=Tensor[(7, 8, 13), float64] */;
  %1484 = shape_of(%1482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1485 = cast(%1482, dtype="float64") /* ty=Tensor[(7, 8, 13), float64] */;
  %1486 = dyn.reshape(%1483, %1484, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1487 = @func_12632() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32]) */;
  %1488 = @func_14843() /* ty=Tensor[(3, 13, 8), float32] */;
  %1489 = mod(%1485, %1486) /* ty=Tensor[(7, 8, 13), float64] */;
  %1490 = @func_9625() /* ty=Tensor[(3, 13, 8), float32] */;
  %1491 = %1487.1;
  (%1488, %1489, %1490, %1491)
}

def @func_7021() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) {
  @func_7019() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_21918() -> (Tensor[(3, 7, 6), float32],) {
  @func_21916() /* ty=(Tensor[(3, 7, 6), float32],) */
}

def @func_5612() -> (Tensor[(3, 13, 8), float32],) {
  %1492 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1493 = %1492.0;
  (%1493,)
}

def @func_19607(%var_19605: Tensor[(7, 10, 9), float32]) -> (Tensor[(7, 10, 9), float32],) {
  @func_19604(%var_19605) /* ty=(Tensor[(7, 10, 9), float32],) */
}

def @func_9183() -> Tensor[(9, 13, 1), bool] {
  @func_9181() /* ty=Tensor[(9, 13, 1), bool] */
}

def @func_14224() -> (Tensor[(3, 16, 14), float64],) {
  %1496 = fn () -> (Tensor[(3, 16, 14), float64],) {
    %1494 = @func_10702() /* ty=(Tensor[(3, 16, 14), float64],) */;
    %1495 = %1494.0;
    (%1495,)
  };
  %1496() /* ty=(Tensor[(3, 16, 14), float64],) */
}

def @func_20156() -> (Tensor[(3, 7, 6), float32], Tensor[(8, 5, 8), bool], Tensor[(320), uint16]) {
  %1497 = @func_10087() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %1498 = cast(meta[relay.Constant][72] /* ty=Tensor[(320), uint16] */, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %1499 = reshape(%1498, newshape=[8, 5, 8]) /* ty=Tensor[(8, 5, 8), uint16] */;
  %1500 = @func_1991(%1499) /* ty=(Tensor[(8, 5, 8), bool],) */;
  %1501 = %1497.0;
  %1502 = %1500.0;
  (%1501, %1502, meta[relay.Constant][72] /* ty=Tensor[(320), uint16] */)
}

def @func_20470() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  @func_20468() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_8714() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(336, 2), int8]) {
  @func_8712() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), int8], Tensor[(336, 2), int8]) */
}

def @func_18490() -> Tensor[(54), float32] {
  %1504 = fn () -> Tensor[(54), float32] {
    %1503 = @func_12299() /* ty=(Tensor[(54), float32],) */;
    %1503.0
  };
  %1504() /* ty=Tensor[(54), float32] */
}

def @func_1487(%var_1485: Tensor[(2, 5, 10), int64], %var_1486: Tensor[(2, 5, 10), int64]) -> (Tensor[(2, 5, 10), int64],) {
  @func_1483(%var_1485, %var_1486) /* ty=(Tensor[(2, 5, 10), int64],) */
}

def @func_13320(%var_13311: Tensor[(1, 54), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(1, 54), float32]) {
  %1505 = @func_10976() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %1506 = @func_8865() /* ty=Tensor[(3, 13, 8), float64] */;
  %1507 = cast(%1506, dtype="float64") /* ty=Tensor[(3, 13, 8), float64] */;
  %1508 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %1509 = %1505.1;
  %1510 = cast(%1509, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %1511 = cast(%var_13311, dtype="float32") /* ty=Tensor[(1, 54), float32] */;
  %1512 = reshape(%1510, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %1513 = reshape(%1511, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %1514 = @func_4405(%1512, %1513) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 9, 3), float32], Tensor[(54), float32]) */;
  %1515 = @func_10900() /* ty=Tensor[(3, 13, 8), float32] */;
  %1516 = @func_11552() /* ty=Tensor[(3, 13, 8), float32] */;
  %1517 = atanh(%1507) /* ty=Tensor[(3, 13, 8), float64] */;
  %1518 = %1508.0;
  %1519 = %1514.1;
  (%1509, %1515, %1516, %1517, %1518, %1519, %var_13311)
}

def @func_9119() -> (Tensor[(9, 13, 1), bool], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  %1527 = fn () -> (Tensor[(9, 13, 1), bool], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
    %1520 = @func_6064() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(100), int64], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32]) */;
    %1521 = @func_5130() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) */;
    %1522 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %1523 = @func_7407() /* ty=Tensor[(9, 13, 1), bool] */;
    %1524 = %1520.0;
    %1525 = %1521.0;
    %1526 = %1522.0;
    (%1523, %1524, %1525, %1526)
  };
  %1527() /* ty=(Tensor[(9, 13, 1), bool], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_19785() -> (Tensor[(3, 16, 14), float64], Tensor[(3, 13, 8), float32]) {
  %1528 = @func_14223() /* ty=(Tensor[(3, 16, 14), float64],) */;
  %1529 = %1528.0;
  %1530 = @func_9069() /* ty=Tensor[(3, 13, 8), float32] */;
  (%1529, %1530)
}

def @func_13877() -> (Tensor[(3, 16, 14), float64], Tensor[(54), float32]) {
  @func_13875() /* ty=(Tensor[(3, 16, 14), float64], Tensor[(54), float32]) */
}

def @func_9981() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 216), bool], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) {
  @func_9979() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 216), bool], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_21313() -> (Tensor[(54), float32],) {
  %1531 = @func_15033() /* ty=Tensor[(54), float32] */;
  (%1531,)
}

def @func_7665() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), bool]) {
  %1542 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), bool]) {
    %1532 = @func_5183() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %1533 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %1534 = %1533.0;
    %1535 = cast(%1534, dtype="float32") /* ty=Tensor[(3, 13, 8), float32] */;
    %1536 = reshape(%1535, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
    %1537 = @func_4943(%1536) /* ty=(Tensor[(3, 13, 8), uint32], Tensor[(3, 13, 8), bool]) */;
    %1538 = @func_7510() /* ty=Tensor[(3, 13, 8), float32] */;
    %1539 = %1532.0;
    %1540 = @func_5837() /* ty=Tensor[(3, 7, 6), float32] */;
    %1541 = %1537.1;
    (%1538, %1539, %1540, %1534, %1541)
  };
  %1542() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), bool]) */
}

def @func_9585() -> Tensor[(3, 7, 6), float32] {
  %1543 = @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1543.0
}

def @func_11465() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) {
  %1552 = fn () -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) {
    %1544 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %1545 = @func_8035() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %1546 = @func_10976() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
    %1547 = @func_9895() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
    %1548 = %1544.0;
    %1549 = %1545.0;
    %1550 = %1546.1;
    %1551 = %1547.1;
    (%1548, %1549, %1550, %1551)
  };
  %1552() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_10446() -> Tensor[(9, 13, 1), bool] {
  %1553 = fn () -> Tensor[(9, 13, 1), bool] {
    @func_7407() /* ty=Tensor[(9, 13, 1), bool] */
  };
  %1553() /* ty=Tensor[(9, 13, 1), bool] */
}

def @func_15033() -> Tensor[(54), float32] {
  %1554 = @func_9470() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) */;
  %1554.0
}

def @func_13489() -> Tensor[(3, 13, 8), float32] {
  @func_13487() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_12980(%var_12972: Tensor[(8, 30), float32]) -> (Tensor[(54), float32], Tensor[(9, 13, 54), float32], Tensor[(390), float32], Tensor[(8, 30), float32]) {
  %1555 = @func_11816() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(2, 9, 3), float64], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(312), float32]) */;
  %1556 = @func_5209() /* ty=Tensor[(54), float32] */;
  %1557 = @func_10747() /* ty=Tensor[(9, 13, 1), bool] */;
  %1558 = cast(%1556, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1559 = cast(%1557, dtype="float32") /* ty=Tensor[(9, 13, 1), float32] */;
  %1560 = cast(%var_12972, dtype="float32") /* ty=Tensor[(8, 30), float32] */;
  %1561 = reshape(%1560, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %1562 = @func_5517(%1561) /* ty=(Tensor[(14, 10, 15), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(240), float32], Tensor[(3, 13, 8), uint32], Tensor[(312), float32], Tensor[(126), float32]) */;
  %1563 = %1555.3;
  %1564 = mod(%1558, %1559) /* ty=Tensor[(9, 13, 54), float32] */;
  %1565 = %1562.2;
  (%1563, %1564, %1565, %var_12972)
}

def @func_5339() -> (Tensor[(54), float32],) {
  @func_5337() /* ty=(Tensor[(54), float32],) */
}

def @func_17318(%var_17316: Tensor[(12), float32], %var_17317: Tensor[(132), float32]) -> (Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8], Tensor[(3, 13, 8), bool], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(12), float32], Tensor[(132), float32], Tensor[(3, 7, 6), float32], Tensor[(1, 648), int32], Tensor[(26, 4), int16], Tensor[(26, 4), bool]) {
  @func_17314(%var_17316, %var_17317) /* ty=(Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8], Tensor[(3, 13, 8), bool], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(12), float32], Tensor[(132), float32], Tensor[(3, 7, 6), float32], Tensor[(1, 648), int32], Tensor[(26, 4), int16], Tensor[(26, 4), bool]) */
}

def @func_14844() -> Tensor[(3, 13, 8), float32] {
  %1567 = fn () -> Tensor[(3, 13, 8), float32] {
    %1566 = @func_9283() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
    %1566.1
  };
  %1567() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_4442(%var_4417: Tensor[(100), int64], %var_4426: Tensor[(320), uint16], %var_4440: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(8, 5, 8), bool], Tensor[(320), uint16], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) {
  %1568 = cast(%var_4417, dtype="int64") /* ty=Tensor[(100), int64] */;
  %1569 = cast(%var_4417, dtype="int64") /* ty=Tensor[(100), int64] */;
  %1570 = reshape(%1568, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %1571 = reshape(%1569, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
  %1572 = @func_1483(%1570, %1571) /* ty=(Tensor[(2, 5, 10), int64],) */;
  %1573 = cast(%var_4426, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %1574 = reshape(%1573, newshape=[8, 5, 8]) /* ty=Tensor[(8, 5, 8), uint16] */;
  %1575 = @func_1991(%1574) /* ty=(Tensor[(8, 5, 8), bool],) */;
  %1576 = cast(%var_4440, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1577 = reshape(%1576, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint8] */;
  %1578 = @func_2959(%1577) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %1579 = @func_4267() /* ty=Tensor[(3, 13, 8), float32] */;
  %1580 = %1572.0;
  %1581 = %1575.0;
  %1582 = %1578.1;
  (%1579, %1580, %var_4417, %1581, %var_4426, %1582, %var_4440)
}

def @func_5830() -> (Tensor[(3, 7, 6), float32],) {
  @func_5828() /* ty=(Tensor[(3, 7, 6), float32],) */
}

def @func_17832() -> (Tensor[(144), uint8],) {
  @func_17830() /* ty=(Tensor[(144), uint8],) */
}

def @func_19476(%var_19475: Tensor[(1512), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 7, 6), float64], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32], Tensor[(1512), float32], Tensor[(3, 13, 8), float32]) {
  %1607 = fn (%var_19451: Tensor[(1512), float32]) -> (Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 7, 6), float64], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32], Tensor[(1512), float32], Tensor[(3, 13, 8), float32]) {
    %1583 = @func_18796() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(54), float32]) */;
    %1584 = @func_9895() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
    %1585 = @func_12880() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8]) */;
    %1586 = @func_14577() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float64]) */;
    %1587 = @func_19122() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %1588 = @func_8809() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float32]) */;
    %1589 = @func_5576() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %1590 = @func_7664() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), bool]) */;
    %1591 = %1589.0;
    %1592 = cast(%1591, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
    %1593 = cast(%var_19451, dtype="float32") /* ty=Tensor[(1512), float32] */;
    %1594 = reshape(%1592, newshape=[1, 126]) /* ty=Tensor[(1, 126), float32] */;
    %1595 = reshape(%1593, newshape=[12, 126]) /* ty=Tensor[(12, 126), float32] */;
    %1596 = @func_6004(%1594, %1595) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(12, 126), float64]) */;
    %1597 = @func_15398() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %1598 = %1583.0;
    %1599 = %1584.0;
    %1600 = %1585.0;
    %1601 = %1586.1;
    %1602 = %1587.0;
    %1603 = %1588.0;
    %1604 = %1590.3;
    %1605 = %1596.0;
    %1606 = %1597.0;
    (%1598, %1599, %1600, %1601, %1602, %1603, %1591, %1604, %1605, %var_19451, %1606)
  };
  %1607(%var_19475) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 7, 6), float64], Tensor[(3, 7, 6), float32], Tensor[(54), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32], Tensor[(1512), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_4030(%var_4029: Tensor[(100), int64]) -> (Tensor[(9, ?, 7), bool], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(2, 15, 8), float32], Tensor[(240, 1), float32]) {
  %1626 = fn (%var_4020: Tensor[(100), int64]) -> (Tensor[(9, ?, 7), bool], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(2, 15, 8), float32], Tensor[(240, 1), float32]) {
    %1608 = cast(meta[relay.Constant][73] /* ty=Tensor[(9, 1, 7), float64] */, dtype="float64") /* ty=Tensor[(9, 1, 7), float64] */;
    %1609 = atanh(%1608) /* ty=Tensor[(9, 1, 7), float64] */;
    %1610 = cast(meta[relay.Constant][73] /* ty=Tensor[(9, 1, 7), float64] */, dtype="bool") /* ty=Tensor[(9, 1, 7), bool] */;
    %1611 = shape_of(%1609, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1612 = cast(%1609, dtype="bool") /* ty=Tensor[(9, 1, 7), bool] */;
    %1613 = dyn.reshape(%1610, %1611, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1614 = cast(%var_4020, dtype="int64") /* ty=Tensor[(100), int64] */;
    %1615 = cast(%var_4020, dtype="int64") /* ty=Tensor[(100), int64] */;
    %1616 = reshape(%1614, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
    %1617 = reshape(%1615, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), int64] */;
    %1618 = @func_1483(%1616, %1617) /* ty=(Tensor[(2, 5, 10), int64],) */;
    %1619 = cast(meta[relay.Constant][74] /* ty=Tensor[(240, 1), float32] */, dtype="float32") /* ty=Tensor[(240, 1), float32] */;
    %1620 = cast(meta[relay.Constant][74] /* ty=Tensor[(240, 1), float32] */, dtype="float32") /* ty=Tensor[(240, 1), float32] */;
    %1621 = reshape(%1619, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
    %1622 = reshape(%1620, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
    %1623 = greater_equal(%1612, %1613) /* ty=Tensor[(9, ?, 7), bool] */;
    %1624 = %1618.0;
    %1625 = @func_74(%1621, %1622) /* ty=Tensor[(2, 15, 8), float32] */;
    (%1623, %1624, %var_4020, %1625, meta[relay.Constant][74] /* ty=Tensor[(240, 1), float32] */)
  };
  %1626(%var_4029) /* ty=(Tensor[(9, ?, 7), bool], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(2, 15, 8), float32], Tensor[(240, 1), float32]) */
}

def @func_10029(%var_10027: Tensor[(15, 2, 16), float32]) -> (Tensor[(15, 2, 16), float32], Tensor[(54), float32]) {
  @func_10026(%var_10027) /* ty=(Tensor[(15, 2, 16), float32], Tensor[(54), float32]) */
}

def @func_8036() -> (Tensor[(3, 13, 8), float32],) {
  %1629 = fn () -> (Tensor[(3, 13, 8), float32],) {
    %1627 = @func_7019() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32]) */;
    %1628 = %1627.1;
    (%1628,)
  };
  %1629() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_16603(%var_16559: Tensor[(6, 1, 2), float32], %var_16560: Tensor[(6, 11, 2), float32], %var_16579: Tensor[(104), float32]) -> (Tensor[(6, 11, 2), float32], Tensor[(3, 13, 8), float32], Tensor[(104), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) {
  %1630 = cast(%var_16559, dtype="float32") /* ty=Tensor[(6, 1, 2), float32] */;
  %1631 = cast(%var_16560, dtype="float32") /* ty=Tensor[(6, 11, 2), float32] */;
  %1632 = cast(%var_16579, dtype="float32") /* ty=Tensor[(104), float32] */;
  %1633 = reshape(%1632, newshape=[4, 13, 2]) /* ty=Tensor[(4, 13, 2), float32] */;
  %1634 = @func_8482(%1633) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(126), float32], Tensor[(54, 1), float32], Tensor[(54), float32], Tensor[(4, 13, 2), float64], Tensor[(3, 13, 8), float32]) */;
  %1635 = @func_15752() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32]) */;
  %1636 = maximum(%1630, %1631) /* ty=Tensor[(6, 11, 2), float32] */;
  %1637 = %1634.5;
  %1638 = @func_13487() /* ty=Tensor[(3, 13, 8), float32] */;
  %1639 = %1635.1;
  (%1636, %1637, %var_16579, %1638, %1639)
}

def @func_19944(%var_19942: Tensor[(25, 4), int64], %var_19943: Tensor[(25, 4), int64]) -> (Tensor[(9, 13, 54), float32], Tensor[(9, 13, 54), int64], Tensor[(3, 13, 8), float32], Tensor[(144, 1), uint8], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(3, 7, 6), float32], Tensor[(9, 13, 54), float64], Tensor[(25, 4), bool], Tensor[(25, 4), bool], Tensor[(9, 13, 54), float32]) {
  %1692 = fn (%var_19884: Tensor[(25, 4), int64], %var_19892: Tensor[(25, 4), int64]) -> (Tensor[(9, 13, 54), float32], Tensor[(9, 13, 54), int64], Tensor[(3, 13, 8), float32], Tensor[(144, 1), uint8], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(3, 7, 6), float32], Tensor[(9, 13, 54), float64], Tensor[(25, 4), bool], Tensor[(25, 4), bool], Tensor[(9, 13, 54), float32]) {
    %1640 = @func_18016() /* ty=(Tensor[(54), float32],) */;
    %1641 = %1640.0;
    %1642 = @func_10747() /* ty=Tensor[(9, 13, 1), bool] */;
    %1643 = cast(%1642, dtype="int64") /* ty=Tensor[(9, 13, 1), int64] */;
    %1644 = cast(%1641, dtype="int64") /* ty=Tensor[(54), int64] */;
    %1645 = bitwise_xor(%1643, %1644) /* ty=Tensor[(9, 13, 54), int64] */;
    %1646 = cast(%1641, dtype="float32") /* ty=Tensor[(54), float32] */;
    %1647 = cast(%1645, dtype="float32") /* ty=Tensor[(9, 13, 54), float32] */;
    %1648 = cast(%1642, dtype="bool") /* ty=Tensor[(9, 13, 1), bool] */;
    %1649 = cast(%1641, dtype="bool") /* ty=Tensor[(54), bool] */;
    %1650 = logical_and(%1648, %1649) /* ty=Tensor[(9, 13, 54), bool] */;
    %1651 = cast(%1650, dtype="int64") /* ty=Tensor[(9, 13, 54), int64] */;
    %1652 = cast(%1642, dtype="int64") /* ty=Tensor[(9, 13, 1), int64] */;
    %1653 = cast(%var_19884, dtype="int64") /* ty=Tensor[(25, 4), int64] */;
    %1654 = cast(meta[relay.Constant][75] /* ty=Tensor[(144, 1), uint8] */, dtype="uint8") /* ty=Tensor[(144, 1), uint8] */;
    %1655 = reshape(%1653, newshape=[100]) /* ty=Tensor[(100), int64] */;
    %1656 = reshape(%1654, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %1657 = @func_18910(%1655, %1656) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(100), int64], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8]) */;
    %1658 = @func_11575() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32]) */;
    %1659 = @func_10087() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
    %1660 = cast(%1650, dtype="float32") /* ty=Tensor[(9, 13, 54), float32] */;
    %1661 = acos(%1660) /* ty=Tensor[(9, 13, 54), float32] */;
    %1662 = cast(%1645, dtype="float64") /* ty=Tensor[(9, 13, 54), float64] */;
    %1663 = shape_of(%1661, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1664 = cast(%1661, dtype="float64") /* ty=Tensor[(9, 13, 54), float64] */;
    %1665 = dyn.reshape(%1662, %1663, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1666 = cast(%var_19892, dtype="float64") /* ty=Tensor[(25, 4), float64] */;
    %1667 = atanh(%1666) /* ty=Tensor[(25, 4), float64] */;
    %1668 = cast(%var_19892, dtype="bool") /* ty=Tensor[(25, 4), bool] */;
    %1669 = shape_of(%1667, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1670 = cast(%1667, dtype="bool") /* ty=Tensor[(25, 4), bool] */;
    %1671 = dyn.reshape(%1668, %1669, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1672 = cast(%var_19892, dtype="float64") /* ty=Tensor[(25, 4), float64] */;
    %1673 = shape_of(%var_19884, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1674 = cast(%var_19884, dtype="float64") /* ty=Tensor[(25, 4), float64] */;
    %1675 = dyn.reshape(%1672, %1673, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1676 = floor_mod(%1674, %1675) /* ty=Tensor[(25, 4), float64] */;
    %1677 = cast(%1676, dtype="bool") /* ty=Tensor[(25, 4), bool] */;
    %1678 = shape_of(%1667, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1679 = cast(%1667, dtype="bool") /* ty=Tensor[(25, 4), bool] */;
    %1680 = dyn.reshape(%1677, %1678, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1681 = cast(%1650, dtype="float32") /* ty=Tensor[(9, 13, 54), float32] */;
    %1682 = floor_mod(%1646, %1647) /* ty=Tensor[(9, 13, 54), float32] */;
    %1683 = right_shift(%1651, %1652) /* ty=Tensor[(9, 13, 54), int64] */;
    %1684 = %1657.0;
    %1685 = @func_14843() /* ty=Tensor[(3, 13, 8), float32] */;
    %1686 = %1658.1;
    %1687 = %1659.0;
    %1688 = power(%1664, %1665) /* ty=Tensor[(9, 13, 54), float64] */;
    %1689 = equal(%1670, %1671) /* ty=Tensor[(25, 4), bool] */;
    %1690 = not_equal(%1679, %1680) /* ty=Tensor[(25, 4), bool] */;
    %1691 = asinh(%1681) /* ty=Tensor[(9, 13, 54), float32] */;
    (%1682, %1683, %1684, meta[relay.Constant][75] /* ty=Tensor[(144, 1), uint8] */, %1685, %1686, %1687, %1688, %1689, %1690, %1691)
  };
  %1692(%var_19942, %var_19943) /* ty=(Tensor[(9, 13, 54), float32], Tensor[(9, 13, 54), int64], Tensor[(3, 13, 8), float32], Tensor[(144, 1), uint8], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(3, 7, 6), float32], Tensor[(9, 13, 54), float64], Tensor[(25, 4), bool], Tensor[(25, 4), bool], Tensor[(9, 13, 54), float32]) */
}

def @func_5276() -> (Tensor[(54), float32],) {
  %1694 = fn () -> (Tensor[(54), float32],) {
    %1693 = @func_4726() /* ty=Tensor[(54), float32] */;
    (%1693,)
  };
  %1694() /* ty=(Tensor[(54), float32],) */
}

def @func_8810() -> (Tensor[(54), float32], Tensor[(3, 13, 8), float32]) {
  %1699 = fn () -> (Tensor[(54), float32], Tensor[(3, 13, 8), float32]) {
    %1695 = @func_5337() /* ty=(Tensor[(54), float32],) */;
    %1696 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
    %1697 = %1695.0;
    %1698 = %1696.0;
    (%1697, %1698)
  };
  %1699() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float32]) */
}

def @func_6919() -> (Tensor[(2, 15, 8), float32],) {
  %1700 = @func_5130() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) */;
  %1701 = %1700.5;
  (%1701,)
}

def @func_16190() -> Tensor[(2, 5, 10), int64] {
  %1703 = fn () -> Tensor[(2, 5, 10), int64] {
    %1702 = @func_14252() /* ty=(Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
    %1702.0
  };
  %1703() /* ty=Tensor[(2, 5, 10), int64] */
}

def @func_11060() -> (Tensor[(3, 13, 8), float32],) {
  %1706 = fn () -> (Tensor[(3, 13, 8), float32],) {
    %1704 = @func_5612() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %1705 = %1704.0;
    (%1705,)
  };
  %1706() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_4447(%var_4444: Tensor[(100), int64], %var_4445: Tensor[(320), uint16], %var_4446: Tensor[(144), uint8]) -> (Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(8, 5, 8), bool], Tensor[(320), uint16], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) {
  @func_4442(%var_4444, %var_4445, %var_4446) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(8, 5, 8), bool], Tensor[(320), uint16], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */
}

def @func_5183() -> (Tensor[(3, 13, 8), float32],) {
  %1707 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1708 = %1707.0;
  (%1708,)
}

def @func_13979() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) {
  %1713 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) {
    %1709 = @func_5047() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
    %1710 = @func_12021() /* ty=Tensor[(3, 13, 8), float32] */;
    %1711 = @func_10575() /* ty=Tensor[(3, 13, 8), float32] */;
    %1712 = %1709.1;
    (%1710, %1711, %1712)
  };
  %1713() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */
}

def @func_7332(%var_7284: Tensor[(24, 10), float32]) -> (Tensor[(24, 10), uint32], Tensor[(8, 5, 8), bool], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(312), float32], Tensor[(2, 9, 3), float32]) {
  %1714 = @func_5130() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(2, 5, 10), int64], Tensor[(390), float32], Tensor[(24, 10), float32], Tensor[(2, 15, 8), float32]) */;
  %1715 = %1714.4;
  %1716 = cast(%var_7284, dtype="uint32") /* ty=Tensor[(24, 10), uint32] */;
  %1717 = shape_of(%1715, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1718 = cast(%1715, dtype="uint32") /* ty=Tensor[(24, 10), uint32] */;
  %1719 = dyn.reshape(%1716, %1717, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1720 = cast(meta[relay.Constant][76] /* ty=Tensor[(100), int64] */, dtype="int64") /* ty=Tensor[(100), int64] */;
  %1721 = cast(meta[relay.Constant][77] /* ty=Tensor[(320), uint16] */, dtype="uint16") /* ty=Tensor[(320), uint16] */;
  %1722 = cast(meta[relay.Constant][78] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1723 = reshape(%1720, newshape=[100]) /* ty=Tensor[(100), int64] */;
  %1724 = reshape(%1721, newshape=[320]) /* ty=Tensor[(320), uint16] */;
  %1725 = reshape(%1722, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1726 = @func_4442(%1723, %1724, %1725) /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 5, 10), int64], Tensor[(100), int64], Tensor[(8, 5, 8), bool], Tensor[(320), uint16], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) */;
  %1727 = cast(meta[relay.Constant][79] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %1728 = reshape(%1727, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %1729 = @func_6598(%1728) /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float32]) */;
  %1730 = %1729.0;
  %1731 = cast(%1730, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1732 = reshape(%1731, newshape=[2, 9, 3]) /* ty=Tensor[(2, 9, 3), float32] */;
  %1733 = @func_664(%1732) /* ty=(Tensor[(2, 9, 3), float32],) */;
  %1734 = subtract(%1718, %1719) /* ty=Tensor[(24, 10), uint32] */;
  %1735 = %1726.3;
  %1736 = %1733.0;
  (%1734, %1735, meta[relay.Constant][76] /* ty=Tensor[(100), int64] */, meta[relay.Constant][77] /* ty=Tensor[(320), uint16] */, meta[relay.Constant][78] /* ty=Tensor[(144), uint8] */, %1730, meta[relay.Constant][79] /* ty=Tensor[(312), float32] */, %1736)
}

def @func_16414(%var_16411: Tensor[(100), int64], %var_16412: Tensor[(144), uint8], %var_16413: Tensor[(728), bool]) -> (Tensor[(3, 7, 6), float32], Tensor[(144), uint8], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(312), float32], Tensor[(3, 13, 8), float32], bool, Tensor[(728), bool]) {
  @func_16409(%var_16411, %var_16412, %var_16413) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(144), uint8], Tensor[(100), int64], Tensor[(320), uint16], Tensor[(144), uint8], Tensor[(54), float32], Tensor[(312), float32], Tensor[(3, 13, 8), float32], bool, Tensor[(728), bool]) */
}

def @func_17694() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %1741 = fn () -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
    %1737 = @func_12735() /* ty=(Tensor[(3, 13, 8), float32],) */;
    %1738 = @func_17120() /* ty=(Tensor[(3, 7, 6), float32],) */;
    %1739 = %1737.0;
    %1740 = %1738.0;
    (%1739, %1740)
  };
  %1741() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_17512() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), float64]) {
  @func_17510() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), float64]) */
}

def @func_18797() -> (Tensor[(3, 7, 6), float32], Tensor[(54), float32]) {
  %1746 = fn () -> (Tensor[(3, 7, 6), float32], Tensor[(54), float32]) {
    %1742 = @func_16007() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
    %1743 = @func_7415() /* ty=(Tensor[(54), float32],) */;
    %1744 = %1742.1;
    %1745 = %1743.0;
    (%1744, %1745)
  };
  %1746() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(54), float32]) */
}

def @func_14779() -> (Tensor[(54), float32],) {
  %1749 = fn () -> (Tensor[(54), float32],) {
    %1747 = @func_9549() /* ty=(Tensor[(54), float32],) */;
    %1748 = %1747.0;
    (%1748,)
  };
  %1749() /* ty=(Tensor[(54), float32],) */
}

def @func_20249() -> Tensor[(54), float32] {
  %1751 = fn () -> Tensor[(54), float32] {
    %1750 = @func_13978() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
    %1750.2
  };
  %1751() /* ty=Tensor[(54), float32] */
}

def @func_11920() -> Tensor[(3, 13, 8), uint32] {
  @func_11918() /* ty=Tensor[(3, 13, 8), uint32] */
}

def @func_15282(%var_15281: Tensor[(24, 6), uint8]) -> (Tensor[(9, 13, 1), bool], Tensor[(54), float32], Tensor[(64), bool], Tensor[(24, 6), uint8], Tensor[(240), float32]) {
  %1761 = fn (%var_15266: Tensor[(24, 6), uint8]) -> (Tensor[(9, 13, 1), bool], Tensor[(54), float32], Tensor[(64), bool], Tensor[(24, 6), uint8], Tensor[(240), float32]) {
    %1752 = cast(meta[relay.Constant][80] /* ty=Tensor[(64), bool] */, dtype="bool") /* ty=Tensor[(64), bool] */;
    %1753 = cast(%var_15266, dtype="uint8") /* ty=Tensor[(24, 6), uint8] */;
    %1754 = cast(meta[relay.Constant][81] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1755 = reshape(%1752, newshape=[64]) /* ty=Tensor[(64), bool] */;
    %1756 = reshape(%1753, newshape=[144]) /* ty=Tensor[(144), uint8] */;
    %1757 = reshape(%1754, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %1758 = @func_10429(%1755, %1756, %1757) /* ty=(Tensor[(54), float32], Tensor[(126), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32], Tensor[(672), int8], Tensor[(8), int16], Tensor[(64), bool], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(8, 5, 8), bool], Tensor[(240), float32]) */;
    %1759 = @func_10445() /* ty=Tensor[(9, 13, 1), bool] */;
    %1760 = %1758.0;
    (%1759, %1760, meta[relay.Constant][80] /* ty=Tensor[(64), bool] */, %var_15266, meta[relay.Constant][81] /* ty=Tensor[(240), float32] */)
  };
  %1761(%var_15281) /* ty=(Tensor[(9, 13, 1), bool], Tensor[(54), float32], Tensor[(64), bool], Tensor[(24, 6), uint8], Tensor[(240), float32]) */
}

def @func_6976() -> Tensor[(126), float32] {
  %1763 = fn () -> Tensor[(126), float32] {
    %1762 = @func_4499() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32], Tensor[(126), float32], Tensor[(54), float32]) */;
    %1762.2
  };
  %1763() /* ty=Tensor[(126), float32] */
}

def @func_5210() -> Tensor[(54), float32] {
  %1764 = fn () -> Tensor[(54), float32] {
    @func_4726() /* ty=Tensor[(54), float32] */
  };
  %1764() /* ty=Tensor[(54), float32] */
}

def @func_15120() -> (Tensor[(3, 7, 6), float32], Tensor[(100), int64], Tensor[(144), uint8], Tensor[(3, 16, 14), float32], Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float64], Tensor[(9, 13, 1), bool]) {
  %1765 = @func_10976() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) */;
  %1766 = cast(meta[relay.Constant][82] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1767 = reshape(%1766, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1768 = @func_10274(%1767) /* ty=(Tensor[(54), float32], Tensor[(100), int64], Tensor[(144), uint8]) */;
  %1769 = @func_12880() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8]) */;
  %1770 = %1769.1;
  %1771 = @func_9213() /* ty=Tensor[(3, 16, 14), int8] */;
  %1772 = cast(%1771, dtype="float32") /* ty=Tensor[(3, 16, 14), float32] */;
  %1773 = shape_of(%1770, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1774 = cast(%1770, dtype="float32") /* ty=Tensor[(3, 16, 14), float32] */;
  %1775 = dyn.reshape(%1772, %1773, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1776 = @func_11039() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float32]) */;
  %1777 = @func_12880() /* ty=(Tensor[(3, 13, 8), float64], Tensor[(3, 16, 14), int8]) */;
  %1778 = %1765.1;
  %1779 = %1768.1;
  %1780 = mod(%1774, %1775) /* ty=Tensor[(3, 16, 14), float32] */;
  %1781 = %1776.0;
  %1782 = %1777.0;
  %1783 = @func_10445() /* ty=Tensor[(9, 13, 1), bool] */;
  (%1778, %1779, meta[relay.Constant][82] /* ty=Tensor[(144), uint8] */, %1780, %1781, %1782, %1783)
}

def @func_9472() -> (Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) {
  @func_9470() /* ty=(Tensor[(54), float32], Tensor[(3, 13, 8), float64], Tensor[(3, 13, 8), float32]) */
}

def @func_14150() -> (Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32]) {
  @func_14148() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(2, 15, 8), float32]) */
}

def @func_19787() -> (Tensor[(3, 16, 14), float64], Tensor[(3, 13, 8), float32]) {
  @func_19785() /* ty=(Tensor[(3, 16, 14), float64], Tensor[(3, 13, 8), float32]) */
}

def @func_11218() -> (Tensor[(3, 13, 8), float32],) {
  @func_11216() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_21417() -> (Tensor[(54), float32],) {
  %1785 = fn () -> (Tensor[(54), float32],) {
    %1784 = @func_8269() /* ty=Tensor[(54), float32] */;
    (%1784,)
  };
  %1785() /* ty=(Tensor[(54), float32],) */
}

def @func_8193() -> Tensor[(3, 13, 8), float32] {
  %1786 = fn () -> Tensor[(3, 13, 8), float32] {
    @func_7510() /* ty=Tensor[(3, 13, 8), float32] */
  };
  %1786() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_9181() -> Tensor[(9, 13, 1), bool] {
  @func_7407() /* ty=Tensor[(9, 13, 1), bool] */
}

def @func_7948(%var_7936: Tensor[(312, 1), float32], %var_7939: Tensor[(144), uint8]) -> (Tensor[(54), float32], Tensor[(3, 13, 8), uint32], Tensor[(312, 1), float32], Tensor[(2, 5, 10), int64], Tensor[(144), uint8]) {
  %1787 = @func_6311() /* ty=(Tensor[(54), float32],) */;
  %1788 = cast(%var_7936, dtype="float32") /* ty=Tensor[(312, 1), float32] */;
  %1789 = reshape(%1788, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), float32] */;
  %1790 = @func_5677(%1789) /* ty=(Tensor[(3, 13, 8), uint32],) */;
  %1791 = cast(%var_7939, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1792 = reshape(%1791, newshape=[12, 6, 2]) /* ty=Tensor[(12, 6, 2), uint8] */;
  %1793 = @func_2959(%1792) /* ty=(Tensor[(12, 6, 2), uint8], Tensor[(2, 5, 10), int64], Tensor[(100), int64]) */;
  %1794 = %1787.0;
  %1795 = %1790.0;
  %1796 = %1793.1;
  (%1794, %1795, %var_7936, %1796, %var_7939)
}

def @func_10663() -> (Tensor[(3, 13, 8), float32],) {
  %1797 = @func_4480() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1798 = %1797.0;
  (%1798,)
}

def @func_16007() -> (Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %1799 = @func_15741() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1800 = %1799.0;
  %1801 = cast(%1800, dtype="bool") /* ty=Tensor[(3, 13, 8), bool] */;
  %1802 = reshape(%1801, newshape=[3, 13, 8]) /* ty=Tensor[(3, 13, 8), bool] */;
  %1803 = @func_10299(%1802) /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), uint64]) */;
  %1804 = %1803.0;
  (%1800, %1804)
}

def @func_18017() -> (Tensor[(54), float32],) {
  %1806 = fn () -> (Tensor[(54), float32],) {
    %1805 = @func_17411() /* ty=Tensor[(54), float32] */;
    (%1805,)
  };
  %1806() /* ty=(Tensor[(54), float32],) */
}

def @func_15743() -> (Tensor[(3, 13, 8), float32],) {
  @func_15741() /* ty=(Tensor[(3, 13, 8), float32],) */
}

def @func_10703() -> (Tensor[(3, 16, 14), float64],) {
  %1810 = fn () -> (Tensor[(3, 16, 14), float64],) {
    %1807 = @func_9213() /* ty=Tensor[(3, 16, 14), int8] */;
    %1808 = cast(%1807, dtype="float64") /* ty=Tensor[(3, 16, 14), float64] */;
    %1809 = asin(%1808) /* ty=Tensor[(3, 16, 14), float64] */;
    (%1809,)
  };
  %1810() /* ty=(Tensor[(3, 16, 14), float64],) */
}

def @func_16531() -> (Tensor[(54), float32], Tensor[(3, 16, 14), float64], Tensor[(8, 8, 3), float32]) {
  @func_16529() /* ty=(Tensor[(54), float32], Tensor[(3, 16, 14), float64], Tensor[(8, 8, 3), float32]) */
}

def @func_21979() -> (Tensor[(3, 7, 6), float32], Tensor[(3, 16, 14), float64], Tensor[(3, 7, 6), float32], Tensor[(3, 7, 6), float64]) {
  %1811 = @func_14471() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1812 = @func_17510() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 16, 14), float64]) */;
  %1813 = @func_12632() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(3, 13, 8), float32], Tensor[(9, 9, 8), bool], Tensor[(648), int32]) */;
  %1814 = @func_14577() /* ty=(Tensor[(54), float32], Tensor[(3, 7, 6), float64]) */;
  %1815 = %1811.0;
  %1816 = %1812.1;
  %1817 = %1813.0;
  %1818 = %1814.1;
  (%1815, %1816, %1817, %1818)
}

def @func_14071() -> Tensor[(3, 7, 6), float32] {
  %1819 = @func_6642() /* ty=(Tensor[(3, 7, 6), float32], Tensor[(54), float32]) */;
  %1819.0
}

def @func_18966() -> Tensor[(3, 13, 8), float32] {
  %1820 = fn () -> Tensor[(3, 13, 8), float32] {
    @func_13487() /* ty=Tensor[(3, 13, 8), float32] */
  };
  %1820() /* ty=Tensor[(3, 13, 8), float32] */
}

def @func_12299() -> (Tensor[(54), float32],) {
  %1821 = @func_9283() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), float32], Tensor[(54), float32]) */;
  %1822 = %1821.2;
  (%1822,)
}

def @func_15149() -> (Tensor[(3, 13, 8), float32], Tensor[(390), float32], Tensor[(240), float32]) {
  @func_15147() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(390), float32], Tensor[(240), float32]) */
}

def @func_1993(%var_1992: Tensor[(8, 5, 8), uint16]) -> (Tensor[(8, 5, 8), bool],) {
  %1828 = fn (%var_1985: Tensor[(8, 5, 8), uint16]) -> (Tensor[(8, 5, 8), bool],) {
    %1823 = cast(meta[relay.Constant][83] /* ty=Tensor[(8, 5, 8), uint16] */, dtype="bool") /* ty=Tensor[(8, 5, 8), bool] */;
    %1824 = shape_of(%var_1985, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1825 = cast(%var_1985, dtype="bool") /* ty=Tensor[(8, 5, 8), bool] */;
    %1826 = dyn.reshape(%1823, %1824, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1827 = less(%1825, %1826) /* ty=Tensor[(8, 5, 8), bool] */;
    (%1827,)
  };
  %1828(%var_1992) /* ty=(Tensor[(8, 5, 8), bool],) */
}

def @func_7094() -> (Tensor[(9, 13, 1), bool],) {
  %1832 = fn () -> (Tensor[(9, 13, 1), bool],) {
    %1829 = cast(meta[relay.Constant][84] /* ty=uint32 */, dtype="bool") /* ty=bool */;
    %1830 = cast(meta[relay.Constant][85] /* ty=Tensor[(9, 13, 1), uint32] */, dtype="bool") /* ty=Tensor[(9, 13, 1), bool] */;
    %1831 = equal(%1829, %1830) /* ty=Tensor[(9, 13, 1), bool] */;
    (%1831,)
  };
  %1832() /* ty=(Tensor[(9, 13, 1), bool],) */
}

def @func_18777() -> (Tensor[(2, 5, 10), int64], Tensor[(144), uint8], Tensor[(126), float32], Tensor[(144), uint8], Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32], Tensor[(54), float32], Tensor[(3, 13, 8), float32], Tensor[(3, 7, 6), float32]) {
  %1833 = @func_15468() /* ty=(Tensor[(2, 5, 10), int64], Tensor[(3, 13, 8), float32]) */;
  %1834 = cast(meta[relay.Constant][86] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1835 = cast(meta[relay.Constant][87] /* ty=Tensor[(144), uint8] */, dtype="uint8") /* ty=Tensor[(144), uint8] */;
  %1836 = reshape(%1834, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %1837 = reshape(%1835, newshape=[144]) /* ty=Tensor[(144), uint8] */;
  %1838 = @func_5909(%1836, %1837) /* ty=(Tensor[(3, 7, 6), int16], Tensor[(100), int64], Tensor[(144), uint8]) */;
  %1839 = @func_11575() /* ty=(Tensor[(3, 13, 8), float32], Tensor[(3, 13, 8), uint32]) */;
  %1840 = @func_13194() /* ty=(Tensor[(54), float32],) */;
  %1841 = @func_18465() /* ty=(Tensor[(3, 13, 8), float32],) */;
  %1842 = @func_4647() /* ty=(Tensor[(3, 7, 6), float32],) */;
  %1843 = %1833.0;
  %1844 = %1838.2;
  %1845 = @func_18454() /* ty=Tensor[(3, 13, 8), float32] */;
  %1846 = %1839.1;
  %1847 = %1840.0;
  %1848 = %1841.0;
  %1849 = %1842.0;
  (%1843, %1844, meta[relay.Constant][86] /* ty=Tensor[(126), float32] */, meta[relay.Constant][87] /* ty=Tensor[(144), uint8] */, %1845, %1846, %1847, %1848, %1849)
}

def @func_21481() -> Tensor[(3, 13, 8), float32] {
  @func_21479() /* ty=Tensor[(3, 13, 8), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen930/build/output.py", line 5765, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:51:37] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


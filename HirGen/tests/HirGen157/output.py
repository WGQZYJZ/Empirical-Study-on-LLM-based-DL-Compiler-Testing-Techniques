import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_19 = relay.var("var_19", dtype = "int16", shape = (3, 7, 5))#candidate|19|(3, 7, 5)|var|int16
var_20 = relay.var("var_20", dtype = "int16", shape = (3, 7, 5))#candidate|20|(3, 7, 5)|var|int16
bop_21 = relay.logical_xor(var_19.astype('int16'), relay.reshape(var_20.astype('int16'), relay.shape_of(var_19))) # shape=(3, 7, 5)
output = bop_21
output2 = bop_21
func_30 = relay.Function([var_19,var_20,], output)
mod['func_30'] = func_30
mod = relay.transform.InferType()(mod)
mutated_mod['func_30'] = func_30
mutated_mod = relay.transform.InferType()(mutated_mod)
func_30_call = mutated_mod.get_global_var('func_30')
var_32 = relay.var("var_32", dtype = "int16", shape = (3, 7, 5))#candidate|32|(3, 7, 5)|var|int16
var_33 = relay.var("var_33", dtype = "int16", shape = (3, 7, 5))#candidate|33|(3, 7, 5)|var|int16
call_31 = func_30_call(var_32,var_33,)
output = call_31
func_34 = relay.Function([var_32,var_33,], output)
mutated_mod['func_34'] = func_34
mutated_mod = relay.transform.InferType()(mutated_mod)
const_487 = relay.const([[[-7.465894,8.196576,4.462488,-6.247400,7.763886,-7.883941,-5.674629,0.601004,0.317841],[-0.714532,2.788394,1.964616,2.173605,-3.763198,-4.686938,-4.989482,0.309274,-1.367982],[-8.495254,-5.630112,-1.063216,8.740340,-4.387306,-9.867427,6.284189,-1.210220,-5.537553],[2.847827,2.192292,-9.642046,4.531625,-6.434146,6.304590,-8.366145,-4.034255,5.015200],[4.587033,6.981018,5.568957,-9.437440,-2.703533,8.763343,-8.068548,-7.440191,6.492679],[5.056852,0.676587,7.539879,-4.220203,-7.849450,-4.307283,6.741648,6.477912,7.153095],[6.486872,0.705734,-2.348312,-2.162616,5.509061,0.600924,2.419283,-5.027193,-1.565384],[8.045488,5.140166,8.532649,4.527690,9.376711,7.609799,7.828194,-0.979658,-6.353192]]], dtype = "float64")#candidate|487|(1, 8, 9)|const|float64
uop_488 = relay.atanh(const_487.astype('float64')) # shape=(1, 8, 9)
output = relay.Tuple([uop_488,])
output2 = relay.Tuple([uop_488,])
func_496 = relay.Function([], output)
mod['func_496'] = func_496
mod = relay.transform.InferType()(mod)
output = func_496()
func_497 = relay.Function([], output)
mutated_mod['func_497'] = func_497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_496_call = mod.get_global_var('func_496')
func_497_call = mutated_mod.get_global_var('func_497')
call_500 = relay.TupleGetItem(func_496_call(), 0)
call_501 = relay.TupleGetItem(func_497_call(), 0)
uop_502 = relay.sinh(call_500.astype('float32')) # shape=(1, 8, 9)
uop_504 = relay.sinh(call_501.astype('float32')) # shape=(1, 8, 9)
output = uop_502
output2 = uop_504
func_511 = relay.Function([], output)
mod['func_511'] = func_511
mod = relay.transform.InferType()(mod)
mutated_mod['func_511'] = func_511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_511_call = mutated_mod.get_global_var('func_511')
call_512 = func_511_call()
output = call_512
func_513 = relay.Function([], output)
mutated_mod['func_513'] = func_513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_511_call = mod.get_global_var('func_511')
func_513_call = mutated_mod.get_global_var('func_513')
call_562 = func_511_call()
call_563 = func_511_call()
var_564 = relay.var("var_564", dtype = "float32", shape = (7, 8, 9))#candidate|564|(7, 8, 9)|var|float32
bop_565 = relay.right_shift(call_562.astype('int32'), var_564.astype('int32')) # shape=(7, 8, 9)
bop_568 = relay.right_shift(call_563.astype('int32'), var_564.astype('int32')) # shape=(7, 8, 9)
output = relay.Tuple([bop_565,])
output2 = relay.Tuple([bop_568,])
func_573 = relay.Function([var_564,], output)
mod['func_573'] = func_573
mod = relay.transform.InferType()(mod)
var_574 = relay.var("var_574", dtype = "float32", shape = (7, 8, 9))#candidate|574|(7, 8, 9)|var|float32
output = func_573(var_574)
func_575 = relay.Function([var_574], output)
mutated_mod['func_575'] = func_575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_496_call = mod.get_global_var('func_496')
func_497_call = mutated_mod.get_global_var('func_497')
call_626 = relay.TupleGetItem(func_496_call(), 0)
call_627 = relay.TupleGetItem(func_497_call(), 0)
var_640 = relay.var("var_640", dtype = "float64", shape = (10, 8, 9))#candidate|640|(10, 8, 9)|var|float64
bop_641 = relay.bitwise_xor(call_626.astype('uint32'), var_640.astype('uint32')) # shape=(10, 8, 9)
bop_644 = relay.bitwise_xor(call_627.astype('uint32'), var_640.astype('uint32')) # shape=(10, 8, 9)
bop_649 = relay.minimum(call_626.astype('int64'), var_640.astype('int64')) # shape=(10, 8, 9)
bop_652 = relay.minimum(call_627.astype('int64'), var_640.astype('int64')) # shape=(10, 8, 9)
output = relay.Tuple([bop_641,bop_649,])
output2 = relay.Tuple([bop_644,bop_652,])
func_661 = relay.Function([var_640,], output)
mod['func_661'] = func_661
mod = relay.transform.InferType()(mod)
var_662 = relay.var("var_662", dtype = "float64", shape = (10, 8, 9))#candidate|662|(10, 8, 9)|var|float64
output = func_661(var_662)
func_663 = relay.Function([var_662], output)
mutated_mod['func_663'] = func_663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_511_call = mod.get_global_var('func_511')
func_513_call = mutated_mod.get_global_var('func_513')
call_736 = func_511_call()
call_737 = func_511_call()
output = relay.Tuple([call_736,])
output2 = relay.Tuple([call_737,])
func_738 = relay.Function([], output)
mod['func_738'] = func_738
mod = relay.transform.InferType()(mod)
output = func_738()
func_739 = relay.Function([], output)
mutated_mod['func_739'] = func_739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_511_call = mod.get_global_var('func_511')
func_513_call = mutated_mod.get_global_var('func_513')
call_766 = func_511_call()
call_767 = func_511_call()
func_661_call = mod.get_global_var('func_661')
func_663_call = mutated_mod.get_global_var('func_663')
const_773 = relay.const([9.573666,-2.715629,5.685107,-9.262147,-7.902672,-3.375646,-9.192026,4.903088,2.904253,-7.558420,6.649414,-9.251243,-6.424297,-5.371725,1.169977,4.441752,8.936809,-3.940732,1.568444,3.234566,-6.532703,5.469439,0.104572,-1.477830,-4.822419,-2.663600,-6.906893,3.997746,-4.478176,-6.305663,-1.634687,-4.353336,-0.024306,-2.304734,7.616814,3.062452,9.606488,-3.714484,-7.068787,3.408263,-2.503403,-5.379629,-7.693229,3.081556,0.196639,-5.152103,-1.092268,5.341060,-3.367638,-9.418859,-3.826292,6.776750,-8.861792,-3.057412,-5.722343,9.207160,-9.823262,8.496732,3.101902,1.963332,1.485286,-2.037984,6.229539,-7.818299,8.348376,0.182685,-1.095640,7.098669,5.694335,1.903122,-2.735497,-1.602666,4.461854,8.172637,-6.806808,9.000612,9.062718,6.677032,-7.692731,-1.354149,-5.122335,5.455027,-1.344823,0.220203,-9.822642,2.063239,-4.919243,0.807720,1.784310,-8.481850,-1.837487,0.390892,-1.082785,-1.315246,-5.453484,-2.415306,-8.310758,-2.737756,0.684028,-9.740781,-4.470977,-3.664723,0.805528,-1.970343,-3.516326,3.316486,4.246244,-6.550965,7.314740,-3.431588,6.273120,9.686332,-7.705551,-8.891605,7.423569,0.808175,-6.602092,-9.465718,-4.447245,6.817667,-9.535633,3.659152,1.757144,7.380644,-5.286490,2.236534,-3.079405,4.138869,-7.915194,-9.837527,2.464917,8.378548,6.675054,8.157350,2.844432,0.229883,6.360874,6.548813,-3.667047,-8.282480,-0.300080,0.056588,-2.259981,2.191148,-1.832195,-4.395574,8.368911,-2.263924,-4.006352,-6.942706,-0.054719,4.412160,-1.415785,-2.600152,7.621389,6.516138,-7.729707,-4.627145,-9.092976,5.123059,-3.190708,-7.452099,-3.545368,-7.528942,-3.452955,-6.359517,-9.479157,5.353382,-4.794729,-2.072368,-5.443277,4.347887,-9.968772,0.633930,1.220222,0.614441,-0.622945,4.374056,-0.374821,3.004532,4.330156,5.623642,1.034356,-2.626312,5.777063,4.575211,5.151426,-0.393822,6.672179,-1.958731,8.735479,-8.726919,8.130608,-2.589359,4.593032,-3.610717,6.732426,5.773254,-0.364275,-6.788887,-0.789899,5.248472,-3.874887,7.764978,8.255271,-0.458952,2.201934,3.177314,-2.072293,7.792638,5.618748,-3.736715,7.584202,-9.472946,-9.215989,6.824825,-5.119524,-2.029864,9.763474,-4.378268,0.788722,1.404204,9.619523,8.186841,-4.406217,-4.509358,-7.862547,-7.808330,-4.558528,-6.729738,8.724775,7.741233,-5.149891,-3.620658,2.892112,6.029609,8.264271,6.565867,4.371995,-5.231470,9.706693,1.127336,-4.993338,-5.223589,-8.634188,6.145669,-9.311651,-9.144639,-5.875717,-1.588385,6.166297,-1.501991,-8.449520,-4.376930,-2.919455,0.061079,5.000591,9.366548,-3.770516,-1.569933,-2.581642,-7.321537,-5.291312,-7.440496,5.134472,-6.837211,-3.675334,5.116707,-5.134799,-4.607504,9.365584,7.591988,-3.413130,-1.473694,-6.110753,-3.938931,-1.837547,1.276610,5.260220,9.274408,2.665894,6.706679,-9.962317,-0.395662,-3.997387,1.462631,7.615281,-7.426416,2.249896,-2.776030,9.284518,9.606158,-7.444664,-1.101690,-5.611385,-7.735203,5.621633,4.400300,2.324003,6.760221,-9.877669,7.273556,0.833136,3.011962,-1.554345,-2.575034,-9.593566,2.191086,-5.720804,-6.255700,7.301376,-5.336812,7.308822,-5.263010,-7.077210,-5.221150,-7.779340,-9.416448,-0.297732,-7.782913,9.109515,-5.905513,-1.478762,-9.215487,-9.221536,1.243508,-1.939244,-0.919405,2.107262,-4.578520,-3.804626,-5.210407,-2.263803,-3.552996,7.632534,9.738110,3.719332,-3.024575,8.264772,4.514921,-3.447074,7.035069,-4.822819,-5.848734,-7.250401,5.444999,5.684088,0.029448,-3.697241,-2.007828,-2.801188,3.326557,-8.432020,-6.750699,-3.141517,3.394051,-4.783489,5.924706,-4.286830,6.120116,-5.794895,-9.637237,-5.816749,9.337494,8.414214,-3.789867,8.005341,-1.218628,-7.611827,8.135063,-1.309263,9.566940,8.857073,1.260528,-2.456979,-4.996213,-5.092231,-3.768201,-3.453980,2.077006,-8.519011,-2.022742,2.415184,9.831405,4.757440,5.234187,0.297764,-4.461649,4.206105,-2.157770,-3.376040,1.942228,8.176946,-1.522145,1.867178,-4.627976,0.227584,-4.961523,0.122802,-9.501807,-4.613715,-6.219851,-8.655345,0.881573,-1.091358,8.850863,-6.204814,0.684883,2.579151,-6.671152,-1.344124,-4.922472,7.388312,-8.743605,-0.734572,2.608727,-8.458215,-6.098451,-6.462571,4.654642,6.959586,-0.247419,1.211665,-1.183102,1.488360,7.047925,2.917637,0.262209,-5.811432,2.548048,3.396244,-7.015490,-8.567029,-9.893466,-6.836260,3.813433,3.144695,9.651712,-4.154320,7.436782,-6.995424,0.100651,-6.000761,-0.270631,-1.964528,1.353127,-1.751894,-4.601124,-1.504583,-8.904539,-5.807280,-8.764044,8.236548,-3.223928,8.578623,4.274260,-0.864928,6.017494,9.821307,-9.255458,5.399761,1.283623,0.218050,-4.352351,7.385022,-5.314196,3.860400,5.311170,-4.335492,-7.322842,0.249991,-5.264886,-3.074360,-4.842033,9.309832,1.481991,-6.225224,6.329847,-2.065063,4.715330,-5.798459,7.206287,-6.045997,-2.868917,-7.382753,4.830336,-3.650315,-3.278856,1.355290,-6.295173,0.694835,-2.825603,3.615257,8.942394,5.152743,4.015797,-1.101025,2.045533,8.946810,6.068726,-2.264244,5.908390,-0.940527,8.816346,-3.880100,1.906804,-6.863083,0.004750,2.881165,2.635659,6.110304,-6.430064,-9.914248,-2.244714,3.817036,2.931875,-6.988290,-8.053116,-7.754641,0.870292,1.764204,-5.310698,-7.814379,4.648144,-4.419262,-3.310226,4.812501,3.267015,6.446570,0.315920,-1.579841,-4.313672,3.651717,8.767780,7.880214,-3.099569,6.432596,-7.008550,-7.536852,6.239325,-7.884735,-2.042346,-2.034610,9.025123,-0.978919,-3.153980,-7.476703,8.426142,9.624434,7.603271,1.846894,-8.254170,8.452221,-4.255601,-5.402714,-4.041693,-9.555564,7.830127,1.669555,-1.309044,5.465205,-4.238289,4.602410,-8.086900,-8.146669,2.382361,4.169953,0.514835,-5.935704,9.829387,9.413687,-0.238321,-0.066333,9.308165,-4.165131,0.986937,-2.910297,1.258165,-7.599071,7.435270,-7.638202,-9.207181,-1.671581,-6.200031,-7.907675,2.948649,4.557570,5.779152,9.798374,8.304688,-7.162011,-7.706475,-1.500924,-5.474258,9.303864,-4.983944,3.828598,5.376868,-5.495838,-3.821081,0.022052,-8.611472,3.827721,6.506512,-7.123405,5.487369,0.274193,-5.397466,9.461070,-4.817946,-9.159342,-3.535265,-7.136264,3.779276,1.139128,7.649293,4.017359,-5.476075,0.711024,-1.002360,-6.768868,-5.151814,2.818772,-2.675910,2.938997,2.788367,1.087092,7.521653,8.488532,-3.847182,0.928179,-5.086476,5.113147,2.008677,-2.816416,4.216496,3.501305,-0.259173,-8.187551,-7.251865,-3.635249,1.444758,8.839097,5.091517,3.753262,-2.577956,5.846964,2.620962,1.385566,5.766578,-5.093881,-1.001591,-1.879401,-2.141865,2.800754,-1.569073,-2.271875,4.553190,8.374642,1.494900,-1.678209,8.176449,-1.877564,7.869417,9.276602,5.603713,6.827199,-0.237589,-6.189965,-9.756852,2.797430,0.598230,-8.550631,7.854381,1.893523,-1.240755,-4.593807,6.142716,-4.994877,-4.317246,4.248765,-9.798170,-8.373568,-4.793212,7.753036,-1.081154,-8.451319,0.680414,7.710528,-9.248642,2.741703,-7.343047,-0.351719,-7.090140,-4.024737,-4.300048,-8.148290,-9.574046,3.977140,8.014042,5.622357,5.842692,-4.187103,-5.993073,-9.769149,-3.970412,0.650376,7.545498,2.504798,2.923710,3.218721,1.839628,-1.077026,-7.723292,8.836950,-7.043184,7.191286,-4.630170,-5.645147,0.985885], dtype = "float64")#candidate|773|(720,)|const|float64
call_772 = relay.TupleGetItem(func_661_call(relay.reshape(const_773.astype('float64'), [10, 8, 9])), 0)
call_774 = relay.TupleGetItem(func_663_call(relay.reshape(const_773.astype('float64'), [10, 8, 9])), 0)
uop_786 = relay.log10(call_772.astype('float32')) # shape=(10, 8, 9)
uop_788 = relay.log10(call_774.astype('float32')) # shape=(10, 8, 9)
bop_803 = relay.equal(uop_786.astype('bool'), relay.reshape(const_773.astype('bool'), relay.shape_of(uop_786))) # shape=(10, 8, 9)
bop_806 = relay.equal(uop_788.astype('bool'), relay.reshape(const_773.astype('bool'), relay.shape_of(uop_788))) # shape=(10, 8, 9)
func_738_call = mod.get_global_var('func_738')
func_739_call = mutated_mod.get_global_var('func_739')
call_823 = relay.TupleGetItem(func_738_call(), 0)
call_824 = relay.TupleGetItem(func_739_call(), 0)
func_30_call = mod.get_global_var('func_30')
func_34_call = mutated_mod.get_global_var('func_34')
var_830 = relay.var("var_830", dtype = "int16", shape = (105,))#candidate|830|(105,)|var|int16
call_829 = func_30_call(relay.reshape(var_830.astype('int16'), [3, 7, 5]), relay.reshape(var_830.astype('int16'), [3, 7, 5]), )
call_831 = func_30_call(relay.reshape(var_830.astype('int16'), [3, 7, 5]), relay.reshape(var_830.astype('int16'), [3, 7, 5]), )
func_738_call = mod.get_global_var('func_738')
func_739_call = mutated_mod.get_global_var('func_739')
call_840 = relay.TupleGetItem(func_738_call(), 0)
call_841 = relay.TupleGetItem(func_739_call(), 0)
bop_845 = relay.mod(uop_786.astype('float32'), call_840.astype('float32')) # shape=(10, 8, 9)
bop_848 = relay.mod(uop_788.astype('float32'), call_841.astype('float32')) # shape=(10, 8, 9)
func_30_call = mod.get_global_var('func_30')
func_34_call = mutated_mod.get_global_var('func_34')
call_855 = func_30_call(relay.reshape(call_829.astype('int16'), [3, 7, 5]), relay.reshape(var_830.astype('int16'), [3, 7, 5]), )
call_856 = func_30_call(relay.reshape(call_829.astype('int16'), [3, 7, 5]), relay.reshape(var_830.astype('int16'), [3, 7, 5]), )
bop_868 = relay.logical_and(bop_845.astype('bool'), relay.reshape(uop_786.astype('bool'), relay.shape_of(bop_845))) # shape=(10, 8, 9)
bop_871 = relay.logical_and(bop_848.astype('bool'), relay.reshape(uop_788.astype('bool'), relay.shape_of(bop_848))) # shape=(10, 8, 9)
output = relay.Tuple([call_766,bop_803,call_823,call_829,var_830,call_855,bop_868,])
output2 = relay.Tuple([call_767,bop_806,call_824,call_831,var_830,call_856,bop_871,])
func_872 = relay.Function([var_830,], output)
mod['func_872'] = func_872
mod = relay.transform.InferType()(mod)
var_873 = relay.var("var_873", dtype = "int16", shape = (105,))#candidate|873|(105,)|var|int16
output = func_872(var_873)
func_874 = relay.Function([var_873], output)
mutated_mod['func_874'] = func_874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_738_call = mod.get_global_var('func_738')
func_739_call = mutated_mod.get_global_var('func_739')
call_895 = relay.TupleGetItem(func_738_call(), 0)
call_896 = relay.TupleGetItem(func_739_call(), 0)
var_898 = relay.var("var_898", dtype = "float32", shape = (12, 8, 9))#candidate|898|(12, 8, 9)|var|float32
bop_899 = relay.greater_equal(call_895.astype('bool'), var_898.astype('bool')) # shape=(12, 8, 9)
bop_902 = relay.greater_equal(call_896.astype('bool'), var_898.astype('bool')) # shape=(12, 8, 9)
output = bop_899
output2 = bop_902
func_911 = relay.Function([var_898,], output)
mod['func_911'] = func_911
mod = relay.transform.InferType()(mod)
mutated_mod['func_911'] = func_911
mutated_mod = relay.transform.InferType()(mutated_mod)
var_912 = relay.var("var_912", dtype = "float32", shape = (12, 8, 9))#candidate|912|(12, 8, 9)|var|float32
func_911_call = mutated_mod.get_global_var('func_911')
call_913 = func_911_call(var_912)
output = call_913
func_914 = relay.Function([var_912], output)
mutated_mod['func_914'] = func_914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_496_call = mod.get_global_var('func_496')
func_497_call = mutated_mod.get_global_var('func_497')
call_1036 = relay.TupleGetItem(func_496_call(), 0)
call_1037 = relay.TupleGetItem(func_497_call(), 0)
output = relay.Tuple([call_1036,])
output2 = relay.Tuple([call_1037,])
func_1038 = relay.Function([], output)
mod['func_1038'] = func_1038
mod = relay.transform.InferType()(mod)
mutated_mod['func_1038'] = func_1038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1038_call = mutated_mod.get_global_var('func_1038')
call_1039 = func_1038_call()
output = call_1039
func_1040 = relay.Function([], output)
mutated_mod['func_1040'] = func_1040
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1129 = relay.const([[[-8.058502,-2.798688,8.092397,6.827173],[-6.741892,1.783534,-5.702782,0.505357],[-3.453130,0.948111,-8.696743,7.970186],[-2.684284,-3.741580,0.101887,-6.539353],[5.680174,4.326633,1.748971,-7.354773],[7.905621,6.186860,-1.021418,3.688486],[-7.866487,-6.887032,-1.298635,0.010791],[6.133414,1.847418,3.950562,-7.045195],[-2.784217,3.442556,9.575664,-2.641865],[6.826279,-8.819787,-3.162754,0.831334]],[[-7.085519,5.100400,1.709677,-5.300818],[-8.617243,4.204251,4.470582,0.102705],[-3.815208,8.273660,-7.386886,-1.249019],[9.147232,0.102331,-1.451597,-6.276987],[-7.093486,9.277873,5.791170,-8.107812],[-6.906247,9.825493,-9.566275,7.688333],[-3.581853,-2.142209,-9.725759,-8.332104],[1.614923,-6.952171,-2.436729,-2.211463],[-5.426368,-7.531767,8.968770,-7.747188],[5.667297,0.810962,-2.334207,-6.014016]],[[-9.756586,2.327525,8.357995,-1.719550],[0.090692,8.496685,-0.108082,0.666120],[3.602299,-2.254653,-5.532832,-2.224175],[-6.040016,0.816237,6.856477,8.531530],[-5.456306,-8.020362,4.613485,-2.256147],[4.658963,-3.156396,-0.686931,7.867939],[-3.989671,-8.992951,-7.674274,-9.707825],[7.409206,8.110205,9.960908,-6.396844],[3.977538,7.829660,0.296503,3.794350],[3.881055,-4.564844,6.962241,-1.095054]],[[5.285109,9.458971,5.788130,3.916440],[4.497995,8.664845,9.917576,4.292795],[0.529303,3.276186,-8.337413,9.423922],[9.269532,1.582319,4.993747,-8.840078],[3.408877,-3.895182,3.989381,4.090225],[-3.172466,2.851538,-2.754525,-9.588889],[1.347508,-0.971348,7.528639,-6.723720],[-7.146942,4.237716,2.079597,-2.166873],[6.847440,7.471642,-3.251976,-8.042025],[-5.077949,7.956103,-9.291370,-5.186925]],[[6.176666,2.067389,-0.470307,9.296832],[-1.840274,4.277622,-9.748575,-0.145695],[-4.209030,-3.034476,-8.040842,-2.561097],[-4.830681,2.907327,5.880336,2.185419],[-1.459314,3.222547,-1.704467,1.830060],[-3.612382,-0.057313,6.381756,-9.317707],[-8.092044,-0.626373,9.760216,8.597290],[-3.709455,-3.385924,-7.463671,0.497742],[2.873168,-6.201092,1.369390,-3.220796],[-8.962946,4.093220,7.444887,1.515175]],[[-9.208156,-7.659507,-0.992745,-9.515791],[-7.480735,3.836322,-8.538767,0.521521],[3.522167,2.645084,-5.124466,-0.002781],[-7.631715,-9.164952,-7.997478,0.217295],[7.613805,-8.052402,-6.986897,5.281003],[-7.177646,5.590684,2.429096,-1.322553],[-7.876473,8.557039,0.295297,8.728880],[7.242933,8.740959,-4.735327,7.543975],[-5.988572,6.940126,-5.424228,5.624889],[5.242130,2.766107,7.882011,-2.502368]],[[4.039069,-9.662328,8.654291,-7.034999],[9.168705,-4.698339,-5.541839,-0.409822],[-5.003725,8.990823,-8.938411,7.139621],[-9.638943,-1.034702,-1.875216,8.985203],[-2.384725,-1.966988,-9.975398,1.051439],[-8.498156,1.391949,3.611793,8.240912],[5.437976,-3.892522,3.609112,-5.259254],[-4.541127,2.134855,2.952716,-3.036396],[1.658067,4.594552,7.348949,7.619505],[6.056635,-3.532532,-5.889439,-5.419685]],[[8.642087,9.825837,-6.998077,-0.626732],[-3.439995,5.651224,-3.828908,-9.027605],[-9.418173,3.303678,-8.042588,2.147847],[6.529748,-6.454544,7.047798,-3.385551],[0.193889,8.432542,4.221909,-0.930431],[6.498153,2.628190,4.772088,2.689312],[9.426938,2.224580,-2.778730,7.090083],[-7.076346,8.563171,-6.854602,-8.640851],[-3.790712,1.586630,3.173458,7.593039],[5.663152,6.373070,-7.882871,-1.804291]]], dtype = "float32")#candidate|1129|(8, 10, 4)|const|float32
const_1130 = relay.const([[[2.627513,-8.074102,-6.682497,-9.490311],[-2.582923,9.535103,-2.301920,-0.709957],[2.235942,3.657933,6.886423,5.176800],[4.279489,8.391631,4.109820,4.235693],[-5.219571,-5.792177,4.751385,6.808702],[8.972853,-8.414416,-6.951379,-5.097286],[8.427530,-3.693673,-1.458475,1.386819],[-9.857556,-9.988652,9.241405,-8.566874],[9.670185,-2.578798,-5.165306,4.276635],[-2.787796,8.278722,-3.597320,-1.845512]],[[-1.115253,-2.892300,-3.457099,-9.937835],[9.730342,2.329622,2.747606,-9.764873],[-8.431180,1.522205,-6.129467,-9.026219],[-9.780896,3.135769,3.339217,-1.382968],[3.291539,8.570640,-7.894812,-5.263895],[-5.436725,9.950464,3.596965,-5.180283],[-1.277788,-0.616288,-0.066931,-3.195929],[1.784989,-0.965312,9.578040,-0.278660],[1.730885,6.869666,7.980821,3.788235],[8.994511,4.925394,7.839666,-9.055257]],[[8.288121,-5.372722,8.988663,7.106733],[2.376561,-9.003702,-8.321945,8.302813],[-5.814390,-8.869683,-6.763380,5.983251],[-6.922726,-6.759502,-6.704068,8.278713],[-7.759877,-1.340857,-3.360607,-7.494516],[6.688567,7.135223,0.469546,5.723368],[9.129986,8.422740,-9.379676,7.143143],[-6.771654,-5.269655,-1.942453,-2.207047],[1.997084,-6.199193,-9.095600,1.043581],[3.058964,-4.255569,3.512078,-2.817268]],[[1.941287,-1.861305,-0.148425,-2.099316],[-7.663285,-9.854101,-6.126969,2.715917],[0.868941,-0.898114,-2.548593,3.744591],[-2.968752,-0.032486,8.998474,-9.620267],[-7.943692,-5.342856,-8.245370,7.576416],[0.340293,6.627036,6.444396,-0.403695],[-3.043146,-7.177183,-5.536756,3.338887],[0.550788,7.302414,-1.098536,1.042883],[-8.585909,-7.293705,-9.998486,7.388587],[7.531467,-1.391463,5.215234,8.121418]],[[4.515876,-7.448778,2.445872,-4.860698],[4.892620,2.339699,0.448827,3.799325],[8.816400,-5.414818,9.360693,6.088660],[-5.366043,6.657226,-0.714449,3.387356],[1.539946,-8.378719,1.462473,8.469193],[-2.698891,0.845462,-7.724003,2.973028],[-8.081062,6.217981,-7.439652,-6.325058],[-0.360880,-5.048834,-6.944892,-4.407516],[-7.824575,-5.825793,5.268573,-3.585291],[-7.425447,4.260430,-1.397428,-6.058418]],[[-6.384346,2.221220,8.036327,0.416595],[4.635679,-2.173995,-2.474387,3.528561],[0.058230,-2.925696,-0.896820,-2.894897],[-9.173763,6.828116,5.962841,4.343822],[2.625419,-5.198619,-7.701011,8.823636],[0.608268,3.381414,-0.394214,-5.205599],[-6.289739,9.656187,-1.626723,-1.957767],[5.726407,2.476404,2.318254,1.728302],[0.192419,1.432138,1.361499,-3.297134],[0.354555,-1.387410,-6.751721,5.392928]],[[-6.295729,0.120449,5.357717,0.243941],[7.529723,9.883143,-8.535060,-5.970073],[-2.196020,4.908943,-8.598072,-9.401255],[-5.402080,4.148141,-2.814243,7.887461],[5.579891,3.269139,-1.206950,-2.361679],[1.731236,3.994593,-8.123147,-1.376839],[3.393000,-7.483335,6.357179,6.368792],[-2.337025,-8.063026,-8.005662,3.918218],[8.811548,-8.974155,3.282712,2.419381],[-0.340737,-3.229688,-0.057595,1.249637]],[[9.351486,3.794824,-1.631300,-7.163359],[-2.539684,6.454557,-1.617612,-7.079123],[5.332034,-9.552838,6.553745,-3.345490],[-8.306680,-1.003903,2.755586,-0.659360],[-7.308974,6.724277,7.930582,0.077170],[-3.284270,-3.309869,7.374215,-8.901083],[6.386111,4.317653,8.072804,-2.464007],[5.308225,-1.170578,-3.757281,8.333453],[3.363659,9.568189,-0.669651,-1.841399],[-1.001635,1.855513,3.358977,-0.244803]]], dtype = "float32")#candidate|1130|(8, 10, 4)|const|float32
bop_1131 = relay.minimum(const_1129.astype('float32'), relay.reshape(const_1130.astype('float32'), relay.shape_of(const_1129))) # shape=(8, 10, 4)
output = relay.Tuple([bop_1131,])
output2 = relay.Tuple([bop_1131,])
func_1140 = relay.Function([], output)
mod['func_1140'] = func_1140
mod = relay.transform.InferType()(mod)
mutated_mod['func_1140'] = func_1140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mutated_mod.get_global_var('func_1140')
call_1141 = func_1140_call()
output = call_1141
func_1142 = relay.Function([], output)
mutated_mod['func_1142'] = func_1142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_511_call = mod.get_global_var('func_511')
func_513_call = mutated_mod.get_global_var('func_513')
call_1148 = func_511_call()
call_1149 = func_511_call()
output = call_1148
output2 = call_1149
func_1157 = relay.Function([], output)
mod['func_1157'] = func_1157
mod = relay.transform.InferType()(mod)
mutated_mod['func_1157'] = func_1157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1157_call = mutated_mod.get_global_var('func_1157')
call_1158 = func_1157_call()
output = call_1158
func_1159 = relay.Function([], output)
mutated_mod['func_1159'] = func_1159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_1163 = relay.TupleGetItem(func_1140_call(), 0)
call_1164 = relay.TupleGetItem(func_1142_call(), 0)
func_30_call = mod.get_global_var('func_30')
func_34_call = mutated_mod.get_global_var('func_34')
const_1176 = relay.const([5,9,6,-9,9,-8,-10,-2,-10,-5,5,4,-1,-9,3,6,4,5,-7,10,-8,8,-3,-10,3,-1,-9,-10,-3,1,2,5,-5,6,5,-1,6,2,-8,-2,8,-1,-10,7,-1,9,-8,-1,-7,6,-7,-6,6,2,-10,9,8,7,1,1,-2,7,-9,4,7,9,-9,-9,-4,-3,5,-4,-1,3,5,-4,-8,-9,-1,-2,-7,4,-5,4,-4,-6,8,6,-3,9,-4,-6,-4,-7,10,-3,10,4,10,7,-5,-7,-2,-10,1], dtype = "int16")#candidate|1176|(105,)|const|int16
call_1175 = func_30_call(relay.reshape(const_1176.astype('int16'), [3, 7, 5]), relay.reshape(const_1176.astype('int16'), [3, 7, 5]), )
call_1177 = func_30_call(relay.reshape(const_1176.astype('int16'), [3, 7, 5]), relay.reshape(const_1176.astype('int16'), [3, 7, 5]), )
output = relay.Tuple([call_1163,call_1175,const_1176,])
output2 = relay.Tuple([call_1164,call_1177,const_1176,])
func_1185 = relay.Function([], output)
mod['func_1185'] = func_1185
mod = relay.transform.InferType()(mod)
mutated_mod['func_1185'] = func_1185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1185_call = mutated_mod.get_global_var('func_1185')
call_1186 = func_1185_call()
output = call_1186
func_1187 = relay.Function([], output)
mutated_mod['func_1187'] = func_1187
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1224 = relay.var("var_1224", dtype = "float64", shape = (5, 2, 4))#candidate|1224|(5, 2, 4)|var|float64
var_1225 = relay.var("var_1225", dtype = "float64", shape = (5, 2, 4))#candidate|1225|(5, 2, 4)|var|float64
bop_1226 = relay.multiply(var_1224.astype('float64'), relay.reshape(var_1225.astype('float64'), relay.shape_of(var_1224))) # shape=(5, 2, 4)
uop_1237 = relay.cosh(var_1225.astype('float64')) # shape=(5, 2, 4)
output = relay.Tuple([bop_1226,uop_1237,])
output2 = relay.Tuple([bop_1226,uop_1237,])
func_1246 = relay.Function([var_1224,var_1225,], output)
mod['func_1246'] = func_1246
mod = relay.transform.InferType()(mod)
var_1247 = relay.var("var_1247", dtype = "float64", shape = (5, 2, 4))#candidate|1247|(5, 2, 4)|var|float64
var_1248 = relay.var("var_1248", dtype = "float64", shape = (5, 2, 4))#candidate|1248|(5, 2, 4)|var|float64
output = func_1246(var_1247,var_1248,)
func_1249 = relay.Function([var_1247,var_1248,], output)
mutated_mod['func_1249'] = func_1249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1268 = relay.var("var_1268", dtype = "uint16", shape = (2, 10, 13))#candidate|1268|(2, 10, 13)|var|uint16
var_1269 = relay.var("var_1269", dtype = "uint16", shape = (2, 10, 13))#candidate|1269|(2, 10, 13)|var|uint16
bop_1270 = relay.not_equal(var_1268.astype('bool'), relay.reshape(var_1269.astype('bool'), relay.shape_of(var_1268))) # shape=(2, 10, 13)
var_1274 = relay.var("var_1274", dtype = "bool", shape = (2, 10, 13))#candidate|1274|(2, 10, 13)|var|bool
bop_1275 = relay.right_shift(bop_1270.astype('uint16'), relay.reshape(var_1274.astype('uint16'), relay.shape_of(bop_1270))) # shape=(2, 10, 13)
func_911_call = mod.get_global_var('func_911')
func_914_call = mutated_mod.get_global_var('func_914')
const_1288 = relay.const([-1.539934,-9.237081,-1.025213,9.871789,2.708400,6.515401,-1.145693,-8.282292,-4.324134,7.744187,9.107764,2.476652,3.449371,-8.687304,-9.479961,-4.391493,1.681370,-1.519472,7.212717,-6.747120,-4.823131,-2.450858,-1.146205,-6.072773,-9.583381,2.641585,-7.410636,-0.700042,-6.720851,-1.746709,6.189628,9.607727,1.614704,6.815879,2.676910,-5.677057,5.233709,4.667402,9.016772,-9.733087,0.638302,1.458330,-9.988273,2.525054,-9.244168,0.938390,5.264687,9.050533,3.524619,1.301426,-5.033006,-3.338531,-9.991127,6.865000,8.514892,3.079065,4.941595,-1.834389,-9.179577,-8.844025,-5.602990,8.531980,-7.879181,-3.737362,2.637398,4.526414,7.799655,7.932861,6.795674,5.671603,-9.139988,9.664798,0.952554,8.773056,8.982349,5.291660,5.914018,0.790575,7.744222,7.702728,4.050424,-0.656574,-6.513275,7.429746,9.291607,-2.890040,8.395006,1.813740,-5.784927,7.429763,2.329609,4.998568,0.849643,-6.160963,-3.505056,0.744841,-5.695675,5.917814,1.784188,-3.859874,2.152360,-7.354412,-0.822133,-3.938426,-8.241577,6.513521,-8.118778,-3.862548,2.959620,-5.168517,3.899226,-4.440958,4.511634,-0.215818,-0.394996,4.476729,-2.627337,-5.220846,-5.848589,9.524089,-8.349495,-8.823813,3.975958,-6.655809,7.444334,-6.644838,-4.855627,8.558445,-1.709994,-9.735679,-2.833697,5.293009,3.519238,-6.194882,-6.552366,-7.801755,-2.767668,8.206712,-0.785373,-9.525994,-1.818622,-1.703521,4.032135,-0.347833,6.019933,-0.483532,3.726079,-8.420477,-6.407536,-8.380532,-6.395710,5.911572,6.497261,-0.637214,1.862111,1.813674,-8.159559,-7.561526,5.615361,3.077323,-2.766173,4.132589,1.728301,-5.666195,-1.129448,-3.518081,-6.137957,0.839424,-0.349693,8.898907,-3.317911,5.777911,-7.475795,5.109813,5.199497,-0.191573,-4.700137,4.228827,-6.952654,8.244574,-8.650147,5.073502,-0.727790,-6.712605,0.729370,-4.119407,-7.628838,-5.970606,6.247846,3.605976,-9.934497,-4.382231,7.429745,0.002847,-9.623236,-0.823474,-3.821037,9.529557,-3.125523,-4.334474,9.439245,4.705855,-5.065809,-7.457887,6.567729,-6.206105,9.308081,5.399294,-4.383359,-5.306566,2.866537,8.308219,6.487181,-5.339675,-3.032052,9.444728,2.522181,-9.820508,-4.627164,-0.634270,-3.338155,5.325972,0.361243,-1.900203,4.375081,-6.328373,3.934049,2.291414,-2.447603,-5.380637,-1.527121,-5.323831,-4.056973,3.281135,1.182840,0.805061,2.041568,-8.733743,8.985801,-8.753685,9.154423,3.700227,9.882549,7.606221,1.287839,-7.960814,6.300840,1.644825,7.951861,-9.755310,-4.676106,-3.519531,7.733786,4.882201,7.168472,8.554281,-0.530728,6.907325,6.933060,-8.356491,-4.612626,-9.340243,0.115801,-1.847648,9.379395,-6.091114,-4.493438,9.502356,8.118899,-6.501959,-6.518581,2.410187,-8.833838,-1.981841,-8.394027,-4.826133,-5.446684,-7.022781,0.319476,-8.625988,-9.652556,-1.289815,-9.825185,-7.604244,-9.163792,-0.558306,-7.827310,-2.493196,6.098564,5.252691,1.887554,-5.478410,-3.874769,4.609075,9.075008,-2.688977,-5.951224,-4.035151,-5.632167,-8.576315,5.749616,-0.195046,5.443288,8.036319,5.066971,-6.695017,-4.129225,-9.763438,0.396101,-7.247997,-7.550278,-9.993281,-9.282191,8.987250,1.713958,0.816150,-9.605478,8.759499,-8.074509,-3.384910,6.846959,-9.844257,-0.993501,-0.281835,9.711133,-3.125539,-7.473599,-2.827304,-3.086222,9.545223,-0.495644,-6.662641,-3.966985,-5.631920,-5.508979,8.010172,8.469069,-6.479438,-8.246890,4.169574,7.036410,5.347593,3.354439,-2.636097,7.851926,7.040236,0.706738,3.300334,3.573231,-8.832218,-0.699379,5.186325,-2.014891,7.487722,0.405819,-0.935471,9.290586,-8.153724,2.104906,-8.073072,-7.858384,-3.601522,8.459299,-6.119814,6.059257,7.616138,-0.030782,5.024561,-4.186680,3.073196,-0.166449,-5.644294,-6.192360,-2.737552,-5.179076,-6.542714,-2.674475,-4.978640,-5.860321,5.435263,1.906537,-6.895530,0.788600,-4.216359,-8.839990,4.476682,5.375506,-6.525348,-9.316948,-9.031277,4.213869,-6.566639,3.068512,-5.804640,1.692425,-1.845909,-5.139900,-5.673114,-5.318083,3.229856,-4.513441,0.669863,-8.173715,7.088346,-1.847459,6.183002,2.599913,-0.970351,-1.738830,-5.638954,-1.017031,9.554656,4.730117,-2.893591,-5.497277,4.691993,8.875558,0.941371,-5.559861,-9.683743,-2.094283,8.315323,8.121233,-4.119058,-9.339097,2.872265,4.880449,1.259246,-9.235261,5.744513,9.789319,-5.898317,7.578485,-3.425737,-1.029069,7.756845,8.733623,-9.993968,-9.607733,-5.392231,-7.580299,2.234463,-6.624897,-3.430443,-5.467035,-7.488148,-9.914964,-0.466639,-3.965278,-4.619936,-2.082638,2.297202,-2.628596,-3.266681,-6.996437,0.840202,3.325581,0.770658,8.463284,-1.442850,3.101838,1.084508,7.192754,9.422060,-6.940274,7.079738,0.617108,-8.034887,-7.580783,-9.900368,-8.512866,4.016417,-3.067213,8.675640,7.247022,-7.897088,-6.331483,-0.898432,7.761184,8.501733,9.704015,-5.987672,3.737765,-6.922869,-5.436028,5.341794,-4.088152,-7.732611,1.896240,-3.642586,5.613171,5.170392,-3.041809,-9.527721,3.315817,-5.532212,-5.495312,-5.380792,3.269674,7.078777,6.116092,-3.801620,-6.747661,9.794855,0.755210,-5.345483,-1.234450,-9.316663,3.024737,-7.485754,2.436272,-5.914722,-2.822301,0.879916,4.182136,1.312558,6.942894,9.468417,-8.381229,6.204505,-4.594800,-7.095969,0.433779,-8.845184,6.893526,-7.027476,3.700842,-1.221067,7.157549,9.517680,4.125059,5.884582,3.917888,-3.931198,0.657319,2.955405,4.405860,-1.752787,-8.232702,2.091412,-5.931571,-6.299677,-4.082660,5.720195,1.091975,7.587077,8.180144,3.829797,1.779343,-0.221609,-0.951438,-4.509831,9.733581,-1.117316,8.361094,-6.956463,8.509963,2.073772,3.388909,6.780651,-2.146191,0.076437,-2.131010,-7.232600,-3.208156,-4.795617,-6.039349,-4.981016,-1.909940,3.511658,6.168612,2.587709,4.625586,-0.722345,5.452865,7.533317,-4.350768,4.248146,5.312830,-6.101598,-1.896348,-5.843933,-1.473759,-4.705835,-4.910417,-9.759831,5.597785,-9.506440,6.888139,-0.827922,8.354966,-6.072453,-9.747341,-6.983625,4.108953,-6.242661,7.186789,-7.009853,4.637128,-6.383383,-8.084379,2.003233,-3.555776,-7.672056,8.963640,-8.674501,-8.500321,-3.422232,-0.780985,6.210983,-6.977906,9.469553,-1.499073,5.932466,8.973087,8.600926,-1.634818,3.746335,0.112941,-1.556260,-1.994764,3.743285,8.146701,-5.491292,-6.750989,3.350715,0.840383,-0.642314,-8.848562,0.375228,-3.496587,-0.531705,-7.916795,2.214202,3.288596,-4.897561,2.580842,5.355419,3.435329,-0.227557,8.423453,-1.632557,5.111041,-5.068359,-7.378552,2.398486,9.930806,-4.511605,6.267968,6.959151,3.541124,9.371251,5.606404,-1.846402,-6.619988,-2.781405,-2.113556,-4.037997,9.167397,-1.384531,-0.481187,-6.573626,8.837435,6.808776,1.411645,5.193914,-1.125487,9.594035,2.763593,9.349241,-6.120716,5.958604,-6.109534,-0.061988,1.031705,-5.134751,-0.007268,1.219840,3.690109,4.954508,4.229663,3.871288,8.921312,2.437240,-2.914806,-4.398054,-4.576016,-1.539634,6.400860,-8.690811,2.288192,-5.416379,-7.792765,6.874074,6.272782,-4.372179,4.999187,-5.832060,-5.912362,-1.757278,-9.809764,3.339376,-1.581034,-4.585960,7.068401,-7.024246,4.574338,-6.916557,-6.692256,8.434049,-5.206639,-9.198612,9.570159,-3.387146,-2.403156,8.892997,1.206054,8.377126,-8.285515,6.611601,6.743038,-5.697095,1.708361,-8.010402,-1.606707,0.827427,6.124866,-5.168226,-3.804122,-9.989052,9.145027,-5.011594,-9.522511,8.712755,7.616905,-0.900466,-1.055774,7.801937,-5.569795,-8.947147,1.990419,1.584025,1.557796,4.596193,7.906597,2.671931,5.231313,5.729649,1.713249,-7.792278,-2.132628,5.726910,4.502915,-7.597799,-8.477437,-9.113650,-9.946112,-5.460591,-8.229917,8.926347,3.314360,-0.075174,-3.246237,9.149301,-4.059986,-7.849674,-8.312232,-3.190524,-2.894392,9.455310,2.684481,-4.403548,-1.703725,5.569354,0.367746,-6.643898,1.544933,0.098872,-0.969023,-2.540392,3.968970,0.976332,-2.333179,4.906440,-9.780480,-7.236316,0.708319,8.987050,4.255070,-9.600944,-5.546107,-6.851502,6.567545,6.984561,-5.384013,5.841043,0.718739,9.386147,-7.119942,-3.975009,-8.300852,-4.748645,-5.393633,2.057346,-9.489109,-8.230234,-7.135231,2.481137,-2.019588,4.024942,-9.047166,-4.687851,-1.553238,0.717112,0.158614,2.322720,-5.841319,3.296523,-6.485573,1.884211,-1.108933,5.026299,-6.945765,-8.272964,6.933801,4.898826,-9.070169,2.573671,4.033712,8.496841,4.088018,-4.249885,-9.974413,-1.062410,-7.507230,-4.101861,0.442362,6.581862,-2.085781,-2.053980,-1.997303,0.783287,-2.717065,6.712779,2.923476,-6.232469,3.871009,9.614981,-0.050022,-3.514075,9.327688,3.580681,-3.436990,-3.955587,-8.672227,3.147286,-9.795464,-0.432090,5.956803,-6.759322,-0.284453,7.798875,-0.913113,-7.189174], dtype = "float32")#candidate|1288|(864,)|const|float32
call_1287 = func_911_call(relay.reshape(const_1288.astype('float32'), [12, 8, 9]))
call_1289 = func_911_call(relay.reshape(const_1288.astype('float32'), [12, 8, 9]))
uop_1300 = relay.exp(call_1287.astype('float64')) # shape=(12, 8, 9)
uop_1302 = relay.exp(call_1289.astype('float64')) # shape=(12, 8, 9)
bop_1305 = relay.greater_equal(var_1268.astype('bool'), relay.reshape(bop_1275.astype('bool'), relay.shape_of(var_1268))) # shape=(2, 10, 13)
output = relay.Tuple([const_1288,uop_1300,bop_1305,])
output2 = relay.Tuple([const_1288,uop_1302,bop_1305,])
func_1317 = relay.Function([var_1268,var_1269,var_1274,], output)
mod['func_1317'] = func_1317
mod = relay.transform.InferType()(mod)
var_1318 = relay.var("var_1318", dtype = "uint16", shape = (2, 10, 13))#candidate|1318|(2, 10, 13)|var|uint16
var_1319 = relay.var("var_1319", dtype = "uint16", shape = (2, 10, 13))#candidate|1319|(2, 10, 13)|var|uint16
var_1320 = relay.var("var_1320", dtype = "bool", shape = (2, 10, 13))#candidate|1320|(2, 10, 13)|var|bool
output = func_1317(var_1318,var_1319,var_1320,)
func_1321 = relay.Function([var_1318,var_1319,var_1320,], output)
mutated_mod['func_1321'] = func_1321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_1336 = func_1157_call()
call_1337 = func_1157_call()
var_1343 = relay.var("var_1343", dtype = "float32", shape = (10, 8, 9))#candidate|1343|(10, 8, 9)|var|float32
bop_1344 = relay.logical_xor(call_1336.astype('int64'), var_1343.astype('int64')) # shape=(10, 8, 9)
bop_1347 = relay.logical_xor(call_1337.astype('int64'), var_1343.astype('int64')) # shape=(10, 8, 9)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_1365 = func_1157_call()
call_1366 = func_1157_call()
bop_1368 = relay.divide(call_1336.astype('float32'), relay.reshape(call_1365.astype('float32'), relay.shape_of(call_1336))) # shape=(1, 8, 9)
bop_1371 = relay.divide(call_1337.astype('float32'), relay.reshape(call_1366.astype('float32'), relay.shape_of(call_1337))) # shape=(1, 8, 9)
output = relay.Tuple([bop_1344,bop_1368,])
output2 = relay.Tuple([bop_1347,bop_1371,])
func_1372 = relay.Function([var_1343,], output)
mod['func_1372'] = func_1372
mod = relay.transform.InferType()(mod)
mutated_mod['func_1372'] = func_1372
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1373 = relay.var("var_1373", dtype = "float32", shape = (10, 8, 9))#candidate|1373|(10, 8, 9)|var|float32
func_1372_call = mutated_mod.get_global_var('func_1372')
call_1374 = func_1372_call(var_1373)
output = call_1374
func_1375 = relay.Function([var_1373], output)
mutated_mod['func_1375'] = func_1375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_1379 = relay.TupleGetItem(func_1140_call(), 0)
call_1380 = relay.TupleGetItem(func_1142_call(), 0)
func_1246_call = mod.get_global_var('func_1246')
func_1249_call = mutated_mod.get_global_var('func_1249')
var_1390 = relay.var("var_1390", dtype = "float64", shape = (40,))#candidate|1390|(40,)|var|float64
call_1389 = relay.TupleGetItem(func_1246_call(relay.reshape(var_1390.astype('float64'), [5, 2, 4]), relay.reshape(var_1390.astype('float64'), [5, 2, 4]), ), 1)
call_1391 = relay.TupleGetItem(func_1249_call(relay.reshape(var_1390.astype('float64'), [5, 2, 4]), relay.reshape(var_1390.astype('float64'), [5, 2, 4]), ), 1)
var_1406 = relay.var("var_1406", dtype = "float32", shape = (8, 10, 4))#candidate|1406|(8, 10, 4)|var|float32
bop_1407 = relay.logical_xor(call_1379.astype('uint32'), relay.reshape(var_1406.astype('uint32'), relay.shape_of(call_1379))) # shape=(8, 10, 4)
bop_1410 = relay.logical_xor(call_1380.astype('uint32'), relay.reshape(var_1406.astype('uint32'), relay.shape_of(call_1380))) # shape=(8, 10, 4)
output = relay.Tuple([call_1389,var_1390,bop_1407,])
output2 = relay.Tuple([call_1391,var_1390,bop_1410,])
func_1420 = relay.Function([var_1390,var_1406,], output)
mod['func_1420'] = func_1420
mod = relay.transform.InferType()(mod)
var_1421 = relay.var("var_1421", dtype = "float64", shape = (40,))#candidate|1421|(40,)|var|float64
var_1422 = relay.var("var_1422", dtype = "float32", shape = (8, 10, 4))#candidate|1422|(8, 10, 4)|var|float32
output = func_1420(var_1421,var_1422,)
func_1423 = relay.Function([var_1421,var_1422,], output)
mutated_mod['func_1423'] = func_1423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_1466 = relay.TupleGetItem(func_1140_call(), 0)
call_1467 = relay.TupleGetItem(func_1142_call(), 0)
output = call_1466
output2 = call_1467
func_1488 = relay.Function([], output)
mod['func_1488'] = func_1488
mod = relay.transform.InferType()(mod)
output = func_1488()
func_1489 = relay.Function([], output)
mutated_mod['func_1489'] = func_1489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_1492 = relay.TupleGetItem(func_1140_call(), 0)
call_1493 = relay.TupleGetItem(func_1142_call(), 0)
func_661_call = mod.get_global_var('func_661')
func_663_call = mutated_mod.get_global_var('func_663')
var_1513 = relay.var("var_1513", dtype = "float64", shape = (720,))#candidate|1513|(720,)|var|float64
call_1512 = relay.TupleGetItem(func_661_call(relay.reshape(var_1513.astype('float64'), [10, 8, 9])), 0)
call_1514 = relay.TupleGetItem(func_663_call(relay.reshape(var_1513.astype('float64'), [10, 8, 9])), 0)
output = relay.Tuple([call_1492,call_1512,var_1513,])
output2 = relay.Tuple([call_1493,call_1514,var_1513,])
func_1519 = relay.Function([var_1513,], output)
mod['func_1519'] = func_1519
mod = relay.transform.InferType()(mod)
var_1520 = relay.var("var_1520", dtype = "float64", shape = (720,))#candidate|1520|(720,)|var|float64
output = func_1519(var_1520)
func_1521 = relay.Function([var_1520], output)
mutated_mod['func_1521'] = func_1521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_1545 = func_1157_call()
call_1546 = func_1157_call()
output = relay.Tuple([call_1545,])
output2 = relay.Tuple([call_1546,])
func_1549 = relay.Function([], output)
mod['func_1549'] = func_1549
mod = relay.transform.InferType()(mod)
mutated_mod['func_1549'] = func_1549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1549_call = mutated_mod.get_global_var('func_1549')
call_1550 = func_1549_call()
output = call_1550
func_1551 = relay.Function([], output)
mutated_mod['func_1551'] = func_1551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_1557 = relay.TupleGetItem(func_1140_call(), 0)
call_1558 = relay.TupleGetItem(func_1142_call(), 0)
output = relay.Tuple([call_1557,])
output2 = relay.Tuple([call_1558,])
func_1576 = relay.Function([], output)
mod['func_1576'] = func_1576
mod = relay.transform.InferType()(mod)
output = func_1576()
func_1577 = relay.Function([], output)
mutated_mod['func_1577'] = func_1577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1549_call = mod.get_global_var('func_1549')
func_1551_call = mutated_mod.get_global_var('func_1551')
call_1594 = relay.TupleGetItem(func_1549_call(), 0)
call_1595 = relay.TupleGetItem(func_1551_call(), 0)
func_1185_call = mod.get_global_var('func_1185')
func_1187_call = mutated_mod.get_global_var('func_1187')
call_1597 = relay.TupleGetItem(func_1185_call(), 2)
call_1598 = relay.TupleGetItem(func_1187_call(), 2)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_1609 = func_1157_call()
call_1610 = func_1157_call()
uop_1620 = relay.acosh(call_1594.astype('float32')) # shape=(1, 8, 9)
uop_1622 = relay.acosh(call_1595.astype('float32')) # shape=(1, 8, 9)
func_1372_call = mod.get_global_var('func_1372')
func_1375_call = mutated_mod.get_global_var('func_1375')
const_1625 = relay.const([-0.589345,0.746959,-8.117621,4.945925,7.580893,4.759296,-4.697095,-0.798878,8.247113,-2.036746,9.672421,1.265294,8.174182,9.899138,3.551463,5.510853,0.416847,4.054301,8.276483,8.649954,-9.525448,-5.065540,3.556268,9.884567,-8.235914,4.100522,5.391185,-3.381331,7.789288,3.783887,2.227409,-8.759126,-8.540736,-8.464358,-9.576152,-2.010640,-2.962341,3.822866,4.414119,9.601466,-0.231196,8.744412,0.849113,-1.381426,-7.200684,4.496737,7.157033,-0.600796,7.888490,1.742269,-0.111862,3.790856,-4.497624,-2.354533,9.687329,1.660575,-7.352726,2.387896,-9.368739,-8.490944,-2.695807,-5.777699,8.435606,5.369642,-8.653144,-0.648139,-1.752119,6.151250,-3.271550,-4.264894,3.827029,6.033799,5.962685,-0.006019,0.400501,-4.363791,-7.963232,7.345657,6.167509,7.341110,0.206745,-2.372796,9.360278,-6.795427,0.088661,0.508399,-2.160093,2.187588,-1.340245,3.900095,-2.111935,7.931965,-8.263761,8.642034,7.889617,4.250241,-2.204466,-6.500259,-9.059940,-1.488361,7.641032,-8.395451,-3.158294,2.119226,0.473478,-8.377535,-0.585542,2.327319,-1.544453,-8.027194,1.381954,-1.514912,6.288189,2.509963,8.673175,-7.849301,9.076225,-3.610336,-5.046642,-3.287906,-5.634293,5.472430,-0.245346,-8.534632,6.816109,-2.721097,-2.846802,6.858710,3.161666,9.311422,-1.619778,-1.590758,3.843579,0.576908,-9.562349,6.528503,6.483173,-3.602898,7.826176,-6.671108,9.447075,1.648682,-0.739070,-2.576668,6.601290,-2.015747,9.078684,-0.509692,-0.351856,-5.866044,4.091321,5.718358,-9.128381,8.972076,-8.202595,1.819073,-8.403087,-5.588601,8.514989,3.138397,-2.218097,-0.610676,-6.736214,-8.354751,-7.561847,8.504441,9.717472,-7.651409,-6.069141,3.778109,-7.753863,3.477499,-7.279172,8.088061,-1.571083,-8.930912,-3.627830,-2.066915,5.382047,8.220106,5.993523,-6.820988,-4.547791,-1.582122,-2.583032,7.664224,-6.767714,5.792569,-7.036243,-8.930585,0.480803,-5.643813,4.294511,-4.928526,4.275204,4.692974,1.258812,5.066127,-2.823979,-9.230782,-5.205434,0.293720,-7.867121,6.536097,8.736450,6.696902,-6.016447,2.282736,-1.605072,2.782879,4.675299,-8.353116,-9.488535,-0.618247,-1.712226,0.485701,2.217936,9.412408,8.281554,-0.218384,6.179724,-5.016307,7.703131,5.791574,5.765794,-0.465515,3.358927,9.363008,-4.972562,5.137805,0.670113,4.409461,9.907438,-0.536412,3.675695,-4.130314,3.290687,3.908256,-3.946966,-6.082795,0.533374,-9.895028,-0.794879,-1.647177,-3.471849,3.626115,-2.949498,-5.302470,1.830824,-4.277267,4.367210,2.470301,6.570820,-0.323870,-4.951671,-0.997403,3.773759,-5.911551,-1.024348,-6.131642,-6.728056,-1.721128,9.758084,1.852711,-0.945393,9.852753,-2.799188,-0.899967,5.610943,0.920571,1.160931,2.373861,-6.089651,-6.141283,-0.909456,1.194273,-0.142500,8.486541,-2.940191,8.891101,9.382189,2.723267,4.235382,8.602798,-1.262968,-0.427156,-7.816329,-6.075979,-6.136738,-4.945175,3.181834,9.826017,8.202188,9.769461,0.289078,-1.522927,-2.628595,-7.105995,9.145665,-2.277794,-0.387655,-6.729462,4.024932,-9.306415,4.849418,-2.187856,-2.440810,6.321040,5.712586,-5.292785,3.420721,0.479352,-7.843853,0.708323,8.517852,2.222128,9.809267,0.732961,-8.896219,-9.434364,-5.664894,-0.638903,-4.948377,-4.223599,3.365349,0.459108,-4.750423,-9.406279,-3.510968,-9.014842,1.896835,-5.702476,2.092874,7.977180,9.042299,-9.737181,3.043002,-1.867803,-8.476048,6.118814,3.277872,-9.927407,4.919715,-3.816455,-6.908198,5.250840,-5.097479,-6.448144,6.966570,2.744972,6.609456,-7.713839,1.467417,0.883782,-8.274390,8.083808,3.720467,2.497116,-2.936636,-3.585792,-1.142279,-1.860738,7.923947,4.281639,8.687043,2.660273,-8.387754,5.121898,5.244890,4.747199,1.500838,8.070677,-9.598522,9.094666,1.426905,2.341610,3.146435,-2.303847,9.473342,-2.331160,3.996555,0.187871,7.273024,5.323614,0.792269,-4.286481,1.540640,8.107851,-4.261868,-2.982638,2.105467,-9.880838,0.417510,7.252169,-2.284952,8.521462,-5.560614,5.070950,3.135810,-9.095961,3.521163,0.441155,-4.041485,-6.474530,1.173984,-8.088796,-8.394794,-1.747262,-5.321735,-8.846518,2.684796,-8.942936,8.878842,6.262698,-9.953020,5.690592,3.213886,-1.503402,-2.150378,-5.437608,9.028059,-6.569038,8.590902,1.095399,-2.208331,-5.425352,-4.190118,4.822970,-7.712457,-9.120870,-0.087398,-3.627214,3.886519,-4.922863,5.008163,3.826249,3.219136,1.111335,-0.872496,-6.242190,-5.899634,-7.182468,7.151048,-6.199814,2.116788,-5.346759,9.205656,8.273362,6.504020,-9.409012,-1.451402,2.387242,9.401664,3.667254,-9.880070,-7.925779,-2.160769,2.357697,7.547474,-3.477009,-9.507344,-3.749650,7.026676,-1.530291,1.973638,-8.363465,8.656809,-7.854122,-1.860469,-4.379714,4.158584,1.208734,-0.960794,-7.484120,4.476686,-6.676671,8.496449,1.499073,-4.366330,-1.104518,-7.343266,4.979075,-4.816668,-0.420898,6.146951,8.369307,3.156426,2.598861,4.515268,4.411294,-1.694826,6.807141,5.056516,-8.702738,-1.145298,8.976455,1.963065,-3.660817,-1.874368,-8.151797,-3.998736,7.787434,7.951325,9.806839,-5.661605,9.672461,-9.992147,-9.273939,8.416276,3.914842,3.656568,-0.699175,6.333980,6.718610,6.317732,-7.655102,2.509587,9.019352,-8.658860,-4.496164,-0.903234,2.649638,-6.742010,-4.663603,-4.276347,3.006975,-9.764431,6.533815,9.323052,-7.959472,-7.235153,-2.368510,-6.661718,-8.256342,-6.799466,8.649054,-8.589081,5.883402,-8.221882,-1.699165,4.164021,7.979307,5.655966,8.790809,2.548277,7.603298,-8.736336,4.597547,-2.036689,1.761443,-0.781625,1.209078,3.754753,0.987022,-5.852175,5.281118,-7.801384,6.270555,9.288482,-6.242910,-2.801158,-2.952382,9.181394,4.686229,-9.373236,-2.634945,8.931516,8.912529,-0.104414,9.370497,2.529624,-6.841049,2.026140,7.733361,-1.164551,6.304340,-8.188383,-4.727464,4.942552,0.056862,-7.148670,1.533807,3.745952,1.867271,7.934936,-1.852942,6.654874,-9.783661,-4.721156,0.349638,8.049241,-3.466427,-2.726478,8.086442,-3.373180,7.995615,-8.883640,6.755115,-3.205242,5.830087,0.544957,-9.644361,-5.399795,3.684392,-5.821431,-4.779322,0.062813,5.102481,6.193756,8.520344,8.887983,-7.520915,1.955677,4.143990,-6.883878,-2.018352,-0.126676,-6.392968,6.979619,-1.408890,-7.290638,-3.677080,8.943928,-7.999310,-3.563436,-5.502480,-4.101453,-7.442342,-6.005903,3.336957,-9.813095,-9.185978,-3.108009,-6.177054,-5.220653,-4.359388,2.328775,-7.937337,-4.753791,5.844588,1.745650,8.768194,-0.246181,7.199104,6.628137,-8.433571,-4.543670,9.807156,3.584390,7.280285,-4.709230,6.823826,-7.815789,-5.019209,-1.678543,0.805354,4.910983,0.871644,-4.985135,5.071358,-0.658583,-2.685325,-8.094682,6.291456,2.637817,-8.469392,-2.772660,2.244174,4.873806,-0.636533,8.821649,0.180118,-6.888659,-3.779616,-7.042872,-1.488581,2.319073,2.330722,-7.973977,-0.836478,9.818585,0.253448,-0.645791,-0.259612,-8.671092,8.760950,0.275747,8.218305,5.823421,-2.368859,8.570209,-0.239573,1.093153,-8.523847,1.018529,2.002346,0.506555,-6.665588,1.128021,-9.934093,9.587161,3.919821,-4.686205,-2.327518,1.265552,7.547099,-3.001198,0.609434,-0.886584,2.192835,-8.442152,-0.432268,-6.805649,2.543360,-4.807264,2.511968,9.940803,-3.467617,8.359127,-1.531825], dtype = "float32")#candidate|1625|(720,)|const|float32
call_1624 = relay.TupleGetItem(func_1372_call(relay.reshape(const_1625.astype('float32'), [10, 8, 9])), 0)
call_1626 = relay.TupleGetItem(func_1375_call(relay.reshape(const_1625.astype('float32'), [10, 8, 9])), 0)
output = relay.Tuple([call_1597,call_1609,uop_1620,call_1624,const_1625,])
output2 = relay.Tuple([call_1598,call_1610,uop_1622,call_1626,const_1625,])
func_1636 = relay.Function([], output)
mod['func_1636'] = func_1636
mod = relay.transform.InferType()(mod)
output = func_1636()
func_1637 = relay.Function([], output)
mutated_mod['func_1637'] = func_1637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1646 = relay.var("var_1646", dtype = "float32", shape = (14, 5, 1))#candidate|1646|(14, 5, 1)|var|float32
var_1647 = relay.var("var_1647", dtype = "float32", shape = (14, 5, 7))#candidate|1647|(14, 5, 7)|var|float32
bop_1648 = relay.power(var_1646.astype('float32'), var_1647.astype('float32')) # shape=(14, 5, 7)
func_573_call = mod.get_global_var('func_573')
func_575_call = mutated_mod.get_global_var('func_575')
const_1662 = relay.const([4.210294,-7.601168,4.002385,-4.687908,-8.932413,-8.130920,9.836323,7.667061,8.567026,6.687922,2.035060,9.025842,5.239464,-2.098816,-8.495746,2.794349,2.329346,-1.061825,-8.057665,3.954473,8.747321,6.873355,8.099329,1.831961,0.338479,1.148619,-5.427452,-3.971408,3.810049,0.735408,7.726106,7.791199,-7.810902,3.268629,7.392022,3.637344,1.897798,0.566858,-7.789256,6.153529,8.836265,-0.420918,7.053462,4.582955,9.003454,-1.229130,8.882001,-5.152469,5.410778,-9.087218,-4.635222,-3.381249,-6.220130,-0.008241,-6.143107,-2.485538,0.569017,-1.922160,9.062186,2.342709,-8.629441,9.646339,5.881076,7.154425,-1.732778,9.120591,0.417566,-9.214948,-6.173330,-1.439011,-4.629368,-2.161947,-5.963148,1.708438,5.367113,-1.760803,-7.054846,4.552790,4.517907,2.579111,5.878372,-0.476051,-4.955720,-3.345399,-2.871059,3.407267,-5.663300,-4.737723,-0.757342,-4.063374,-6.416241,1.696577,5.841745,-8.002587,1.647818,-2.843927,4.336653,-4.205041,4.761833,-5.661327,3.110505,-2.717532,3.781250,-2.765944,-5.599718,1.898993,-1.026467,-1.400052,-3.095324,-9.654239,-1.182698,-8.715989,-4.357799,0.908965,2.146482,2.732519,9.756210,-6.481927,-5.311249,0.100612,-1.562788,2.640017,3.995990,-5.204532,-2.999887,-0.351504,3.442231,-7.657105,1.433584,2.568845,6.910591,2.820691,-7.869501,-1.507385,6.776139,-9.209534,-2.610520,-5.836681,1.521857,6.493425,7.785083,-8.624849,-9.378483,-7.475071,-1.083657,3.226123,-7.421903,-4.891615,-8.953894,8.903035,-5.263237,8.146482,1.879594,7.628015,-4.067598,1.345249,-3.319013,-7.953529,-5.498079,-4.414893,-9.065473,0.578248,-4.938445,-6.834431,-9.422381,-9.783154,6.003831,4.100393,7.132919,9.901035,-4.273731,-6.351746,-0.753544,3.966394,6.670938,1.817529,3.859316,5.444252,-1.078925,1.966725,0.727203,-0.354091,1.980227,-2.955549,-7.368811,0.607611,-5.036417,5.305177,-9.517043,9.764919,-7.208502,-9.916636,7.722018,9.770918,2.053976,-2.541763,6.140228,6.845156,8.488633,4.557070,8.525791,-8.508136,-1.975018,-7.408798,-3.026640,7.883504,-3.048706,4.467632,1.406847,7.821758,4.418227,6.052064,-8.885292,2.955985,-2.664231,6.939277,7.494195,2.813619,0.739839,1.086986,-5.170940,-4.589975,-9.946354,-5.145208,8.541881,-1.838138,-1.724845,0.316496,-3.967083,-1.349630,3.133148,-8.413624,5.922588,0.672368,8.742896,-7.395470,8.263538,-7.747789,-9.631926,1.473613,-1.503163,-4.977615,2.974823,-0.214812,5.104986,0.405535,-6.465885,5.263849,1.487660,1.729061,2.084537,-8.923078,-0.010158,-1.201911,-9.775648,-0.705517,1.946704,5.045833,-9.926572,-3.762071,-2.958097,5.474887,2.602213,-1.932562,4.067441,9.543923,2.236148,3.504668,-3.076533,9.231354,8.275564,-8.310754,-6.604532,2.707256,6.937959,-6.796045,0.200027,-9.908334,9.329874,-5.451527,-8.527889,4.418197,1.117753,-8.254791,8.717049,-8.039221,9.819387,3.847306,-5.620902,0.645261,9.424630,1.895832,3.592591,6.135035,-9.594254,7.506555,-4.501467,5.479254,3.083692,5.219816,4.688420,3.341129,-2.772870,-6.337580,8.979081,-9.104969,-5.928777,-5.777350,-9.774461,-1.744890,8.920887,1.076590,-2.925815,9.050979,-7.871046,-7.821018,0.595018,7.948557,4.544597,-2.565050,3.273720,7.019548,5.042265,1.435162,5.152153,-1.049406,5.596581,-9.300688,-1.091671,8.665860,0.791615,-3.569172,1.625992,-1.690378,-4.632848,4.180909,-8.065483,9.069973,-5.415138,9.224103,-7.194415,-7.883495,8.086028,0.327688,7.018176,2.886812,0.768085,2.124184,2.633792,3.873640,-2.120915,4.777283,9.973556,-2.449750,3.535098,3.061204,-7.370073,7.248248,7.319095,7.366913,0.225372,3.326256,1.559294,2.719208,-7.467551,-9.273717,0.148701,5.361048,-6.347835,5.065725,8.173725,7.186125,-1.593352,-6.202304,6.336733,-2.409284,-5.528080,3.846718,-3.117317,-4.550352,1.575695,-3.143540,-6.359339,5.758982,0.982302,-1.504228,-8.056375,-9.013644,-2.270727,-1.446480,1.589051,-7.826401,-4.132597,2.755401,-0.941776,3.180092,-2.755637,-8.667336,-8.063173,2.226880,-5.983652,-6.103732,2.410162,-5.194052,5.164861,3.968068,0.442744,-2.960913,-9.183983,5.995261,6.902359,-6.490543,-9.944638,-6.077448,5.982373,-9.836217,2.705885,-3.660657,-7.569035,-2.599626,5.206512,-1.568767,5.263260,-3.622397,-5.500896,-3.766263,-6.401390,4.366125,-7.391837,5.423688,3.323229,8.645231,7.413395,3.929249,-2.812768,4.473584,7.894307,4.587323,5.713277,-5.826394,3.193202,9.877741,-7.948079,-2.271703,6.429435,-3.017282,1.495440,3.909453,0.988543,-0.415491,8.908133,6.071841,7.522543,5.474938,-8.695024,-2.377790,3.741768,5.680984,-7.386174,-4.209884,-9.266857,-8.489353,-8.041189,-6.616050,-3.275123,-6.330575,-0.597006,9.367976,-3.287511,-6.337155,-1.050357,-0.170991,8.556264,7.186021,5.846880,0.734497,-7.777243,9.375909,6.231473,-9.451062,6.047237,5.058521,-3.761210,5.064797,-1.608435,3.626789,3.682682,-6.251638,-1.266170,-4.407539,5.940807,4.878179,-7.042047,-6.666542,-7.181311,7.868671,4.680361,5.569183,2.881903,-2.194539,1.002578,5.256827,2.394714,9.512611], dtype = "float32")#candidate|1662|(504,)|const|float32
call_1661 = relay.TupleGetItem(func_573_call(relay.reshape(const_1662.astype('float32'), [7, 8, 9])), 0)
call_1663 = relay.TupleGetItem(func_575_call(relay.reshape(const_1662.astype('float32'), [7, 8, 9])), 0)
output = relay.Tuple([bop_1648,call_1661,const_1662,])
output2 = relay.Tuple([bop_1648,call_1663,const_1662,])
func_1674 = relay.Function([var_1646,var_1647,], output)
mod['func_1674'] = func_1674
mod = relay.transform.InferType()(mod)
mutated_mod['func_1674'] = func_1674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1674_call = mutated_mod.get_global_var('func_1674')
var_1676 = relay.var("var_1676", dtype = "float32", shape = (14, 5, 1))#candidate|1676|(14, 5, 1)|var|float32
var_1677 = relay.var("var_1677", dtype = "float32", shape = (14, 5, 7))#candidate|1677|(14, 5, 7)|var|float32
call_1675 = func_1674_call(var_1676,var_1677,)
output = call_1675
func_1678 = relay.Function([var_1676,var_1677,], output)
mutated_mod['func_1678'] = func_1678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_1723 = relay.TupleGetItem(func_1140_call(), 0)
call_1724 = relay.TupleGetItem(func_1142_call(), 0)
func_1246_call = mod.get_global_var('func_1246')
func_1249_call = mutated_mod.get_global_var('func_1249')
const_1735 = relay.const([[-8.705500,-6.543617,-6.865983,3.927670,-4.064024,6.131343,3.069434,-3.651439,6.943644,-1.219156,-9.849963,9.883812,0.885747,-1.496211,0.536055,-6.396884,5.837652,1.948056,-6.330330,-6.631073],[9.396033,-3.292785,6.575943,4.985492,-8.725232,-4.322283,7.594274,3.258128,-0.412457,1.580292,-8.496488,-0.756262,-5.242185,-3.277846,-8.161154,-3.609701,-4.372327,0.756219,3.260061,-1.825539]], dtype = "float64")#candidate|1735|(2, 20)|const|float64
call_1734 = relay.TupleGetItem(func_1246_call(relay.reshape(const_1735.astype('float64'), [5, 2, 4]), relay.reshape(const_1735.astype('float64'), [5, 2, 4]), ), 1)
call_1736 = relay.TupleGetItem(func_1249_call(relay.reshape(const_1735.astype('float64'), [5, 2, 4]), relay.reshape(const_1735.astype('float64'), [5, 2, 4]), ), 1)
uop_1738 = relay.log10(call_1723.astype('float32')) # shape=(8, 10, 4)
uop_1740 = relay.log10(call_1724.astype('float32')) # shape=(8, 10, 4)
bop_1764 = relay.not_equal(uop_1738.astype('bool'), relay.reshape(call_1723.astype('bool'), relay.shape_of(uop_1738))) # shape=(8, 10, 4)
bop_1767 = relay.not_equal(uop_1740.astype('bool'), relay.reshape(call_1724.astype('bool'), relay.shape_of(uop_1740))) # shape=(8, 10, 4)
bop_1774 = relay.greater(const_1735.astype('bool'), relay.reshape(call_1734.astype('bool'), relay.shape_of(const_1735))) # shape=(2, 20)
bop_1777 = relay.greater(const_1735.astype('bool'), relay.reshape(call_1736.astype('bool'), relay.shape_of(const_1735))) # shape=(2, 20)
func_661_call = mod.get_global_var('func_661')
func_663_call = mutated_mod.get_global_var('func_663')
var_1785 = relay.var("var_1785", dtype = "float64", shape = (720,))#candidate|1785|(720,)|var|float64
call_1784 = relay.TupleGetItem(func_661_call(relay.reshape(var_1785.astype('float64'), [10, 8, 9])), 1)
call_1786 = relay.TupleGetItem(func_663_call(relay.reshape(var_1785.astype('float64'), [10, 8, 9])), 1)
output = relay.Tuple([bop_1764,bop_1774,call_1784,var_1785,])
output2 = relay.Tuple([bop_1767,bop_1777,call_1786,var_1785,])
func_1792 = relay.Function([var_1785,], output)
mod['func_1792'] = func_1792
mod = relay.transform.InferType()(mod)
var_1793 = relay.var("var_1793", dtype = "float64", shape = (720,))#candidate|1793|(720,)|var|float64
output = func_1792(var_1793)
func_1794 = relay.Function([var_1793], output)
mutated_mod['func_1794'] = func_1794
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1796 = relay.const([[[-8.757370,7.543218,-1.274943,7.293427,-8.179735],[-8.630743,-8.036592,3.705028,-2.262405,1.554435],[5.195521,0.352516,2.265111,7.288321,-8.825866]],[[2.149369,-6.437105,2.182927,8.109081,1.942456],[5.995098,0.474070,-2.621190,-6.166835,-2.596571],[-5.171241,4.313211,8.642318,0.099682,-9.496466]],[[-1.086748,-2.329041,-2.163007,0.718438,-4.017446],[3.559328,-7.632827,4.016349,-6.470051,8.236160],[-8.136843,-2.177977,9.133926,-5.977558,-0.860971]],[[-3.760450,0.850348,-8.722067,-2.258445,0.296811],[-8.992813,-8.940287,7.696495,5.793784,5.388096],[9.519276,1.333578,2.058284,0.247363,3.672022]],[[-9.754500,-5.667181,-4.342636,8.580938,-3.131208],[2.035658,-5.484295,7.830976,9.588600,4.762489],[7.019980,-5.592501,-1.977680,1.797418,-4.436532]],[[-4.560111,-6.391410,-3.870813,2.373465,0.785979],[-7.932294,-5.597536,-9.152180,-3.152384,5.310064],[-4.480482,-8.075177,5.513347,1.627857,0.095287]],[[5.199777,-6.176692,-6.630614,-5.372776,4.640835],[-4.564502,-1.006990,-0.727897,-8.705428,-8.001716],[-2.376429,9.093399,-4.275683,1.247046,9.097682]],[[5.928375,-6.292626,2.182329,-4.530135,-4.607570],[0.744263,6.993656,-1.562590,7.486397,-6.431174],[-1.837490,-9.168180,-4.303467,-6.097657,-8.328183]],[[-3.928507,-5.018107,-4.450024,0.905073,8.387297],[-0.516782,-7.781453,-7.200843,1.435594,-4.525390],[7.448708,-7.245052,-3.348267,-4.990857,-1.241138]],[[-4.697510,-9.245770,-9.030359,-4.397325,0.031054],[3.373716,9.853634,1.621286,-6.518226,2.705275],[7.340390,0.693849,-5.896208,-5.390901,-8.436821]],[[-1.035567,1.552871,4.983280,9.571476,0.089546],[0.576388,-3.621618,1.252184,-0.422540,-7.963481],[-8.657082,9.512604,9.327904,4.434945,-9.711655]],[[-3.783888,-7.223143,-1.819562,2.828565,-0.077992],[-0.956947,-6.166908,-7.437283,8.892536,9.619151],[-8.304284,7.355981,-0.257510,8.872149,-5.923907]]], dtype = "float64")#candidate|1796|(12, 3, 5)|const|float64
uop_1797 = relay.erf(const_1796.astype('float64')) # shape=(12, 3, 5)
output = uop_1797
output2 = uop_1797
func_1806 = relay.Function([], output)
mod['func_1806'] = func_1806
mod = relay.transform.InferType()(mod)
mutated_mod['func_1806'] = func_1806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1806_call = mutated_mod.get_global_var('func_1806')
call_1807 = func_1806_call()
output = call_1807
func_1808 = relay.Function([], output)
mutated_mod['func_1808'] = func_1808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_1815 = relay.TupleGetItem(func_1140_call(), 0)
call_1816 = relay.TupleGetItem(func_1142_call(), 0)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_1821 = func_1157_call()
call_1822 = func_1157_call()
output = relay.Tuple([call_1815,call_1821,])
output2 = relay.Tuple([call_1816,call_1822,])
func_1862 = relay.Function([], output)
mod['func_1862'] = func_1862
mod = relay.transform.InferType()(mod)
mutated_mod['func_1862'] = func_1862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1862_call = mutated_mod.get_global_var('func_1862')
call_1863 = func_1862_call()
output = call_1863
func_1864 = relay.Function([], output)
mutated_mod['func_1864'] = func_1864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_1895 = relay.TupleGetItem(func_1140_call(), 0)
call_1896 = relay.TupleGetItem(func_1142_call(), 0)
output = relay.Tuple([call_1895,])
output2 = relay.Tuple([call_1896,])
func_1902 = relay.Function([], output)
mod['func_1902'] = func_1902
mod = relay.transform.InferType()(mod)
output = func_1902()
func_1903 = relay.Function([], output)
mutated_mod['func_1903'] = func_1903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_1942 = relay.TupleGetItem(func_1140_call(), 0)
call_1943 = relay.TupleGetItem(func_1142_call(), 0)
output = call_1942
output2 = call_1943
func_1958 = relay.Function([], output)
mod['func_1958'] = func_1958
mod = relay.transform.InferType()(mod)
output = func_1958()
func_1959 = relay.Function([], output)
mutated_mod['func_1959'] = func_1959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1636_call = mod.get_global_var('func_1636')
func_1637_call = mutated_mod.get_global_var('func_1637')
call_1976 = relay.TupleGetItem(func_1636_call(), 0)
call_1977 = relay.TupleGetItem(func_1637_call(), 0)
func_1862_call = mod.get_global_var('func_1862')
func_1864_call = mutated_mod.get_global_var('func_1864')
call_1984 = relay.TupleGetItem(func_1862_call(), 1)
call_1985 = relay.TupleGetItem(func_1864_call(), 1)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_1996 = func_1157_call()
call_1997 = func_1157_call()
uop_2012 = relay.atan(call_1996.astype('float64')) # shape=(1, 8, 9)
uop_2014 = relay.atan(call_1997.astype('float64')) # shape=(1, 8, 9)
uop_2018 = relay.rsqrt(call_1996.astype('float64')) # shape=(1, 8, 9)
uop_2020 = relay.rsqrt(call_1997.astype('float64')) # shape=(1, 8, 9)
func_872_call = mod.get_global_var('func_872')
func_874_call = mutated_mod.get_global_var('func_874')
call_2021 = relay.TupleGetItem(func_872_call(relay.reshape(call_1976.astype('int16'), [105,])), 5)
call_2022 = relay.TupleGetItem(func_874_call(relay.reshape(call_1976.astype('int16'), [105,])), 5)
func_1549_call = mod.get_global_var('func_1549')
func_1551_call = mutated_mod.get_global_var('func_1551')
call_2024 = relay.TupleGetItem(func_1549_call(), 0)
call_2025 = relay.TupleGetItem(func_1551_call(), 0)
var_2026 = relay.var("var_2026", dtype = "float64", shape = (5, 8, 9))#candidate|2026|(5, 8, 9)|var|float64
bop_2027 = relay.bitwise_xor(uop_2018.astype('int64'), var_2026.astype('int64')) # shape=(5, 8, 9)
bop_2030 = relay.bitwise_xor(uop_2020.astype('int64'), var_2026.astype('int64')) # shape=(5, 8, 9)
func_573_call = mod.get_global_var('func_573')
func_575_call = mutated_mod.get_global_var('func_575')
var_2034 = relay.var("var_2034", dtype = "float32", shape = (504,))#candidate|2034|(504,)|var|float32
call_2033 = relay.TupleGetItem(func_573_call(relay.reshape(var_2034.astype('float32'), [7, 8, 9])), 0)
call_2035 = relay.TupleGetItem(func_575_call(relay.reshape(var_2034.astype('float32'), [7, 8, 9])), 0)
output = relay.Tuple([call_1976,call_1984,uop_2012,call_2021,call_2024,bop_2027,call_2033,var_2034,])
output2 = relay.Tuple([call_1977,call_1985,uop_2014,call_2022,call_2025,bop_2030,call_2035,var_2034,])
func_2046 = relay.Function([var_2026,var_2034,], output)
mod['func_2046'] = func_2046
mod = relay.transform.InferType()(mod)
mutated_mod['func_2046'] = func_2046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2046_call = mutated_mod.get_global_var('func_2046')
var_2048 = relay.var("var_2048", dtype = "float64", shape = (5, 8, 9))#candidate|2048|(5, 8, 9)|var|float64
var_2049 = relay.var("var_2049", dtype = "float32", shape = (504,))#candidate|2049|(504,)|var|float32
call_2047 = func_2046_call(var_2048,var_2049,)
output = call_2047
func_2050 = relay.Function([var_2048,var_2049,], output)
mutated_mod['func_2050'] = func_2050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_496_call = mod.get_global_var('func_496')
func_497_call = mutated_mod.get_global_var('func_497')
call_2052 = relay.TupleGetItem(func_496_call(), 0)
call_2053 = relay.TupleGetItem(func_497_call(), 0)
func_1246_call = mod.get_global_var('func_1246')
func_1249_call = mutated_mod.get_global_var('func_1249')
var_2059 = relay.var("var_2059", dtype = "float64", shape = (1, 40))#candidate|2059|(1, 40)|var|float64
call_2058 = relay.TupleGetItem(func_1246_call(relay.reshape(var_2059.astype('float64'), [5, 2, 4]), relay.reshape(var_2059.astype('float64'), [5, 2, 4]), ), 1)
call_2060 = relay.TupleGetItem(func_1249_call(relay.reshape(var_2059.astype('float64'), [5, 2, 4]), relay.reshape(var_2059.astype('float64'), [5, 2, 4]), ), 1)
bop_2066 = relay.less_equal(var_2059.astype('bool'), relay.reshape(call_2058.astype('bool'), relay.shape_of(var_2059))) # shape=(1, 40)
bop_2069 = relay.less_equal(var_2059.astype('bool'), relay.reshape(call_2060.astype('bool'), relay.shape_of(var_2059))) # shape=(1, 40)
func_1636_call = mod.get_global_var('func_1636')
func_1637_call = mutated_mod.get_global_var('func_1637')
call_2073 = relay.TupleGetItem(func_1636_call(), 1)
call_2074 = relay.TupleGetItem(func_1637_call(), 1)
output = relay.Tuple([call_2052,bop_2066,call_2073,])
output2 = relay.Tuple([call_2053,bop_2069,call_2074,])
func_2080 = relay.Function([var_2059,], output)
mod['func_2080'] = func_2080
mod = relay.transform.InferType()(mod)
mutated_mod['func_2080'] = func_2080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2081 = relay.var("var_2081", dtype = "float64", shape = (1, 40))#candidate|2081|(1, 40)|var|float64
func_2080_call = mutated_mod.get_global_var('func_2080')
call_2082 = func_2080_call(var_2081)
output = call_2082
func_2083 = relay.Function([var_2081], output)
mutated_mod['func_2083'] = func_2083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1862_call = mod.get_global_var('func_1862')
func_1864_call = mutated_mod.get_global_var('func_1864')
call_2113 = relay.TupleGetItem(func_1862_call(), 0)
call_2114 = relay.TupleGetItem(func_1864_call(), 0)
func_1862_call = mod.get_global_var('func_1862')
func_1864_call = mutated_mod.get_global_var('func_1864')
call_2118 = relay.TupleGetItem(func_1862_call(), 0)
call_2119 = relay.TupleGetItem(func_1864_call(), 0)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_2130 = relay.TupleGetItem(func_1140_call(), 0)
call_2131 = relay.TupleGetItem(func_1142_call(), 0)
output = relay.Tuple([call_2113,call_2118,call_2130,])
output2 = relay.Tuple([call_2114,call_2119,call_2131,])
func_2133 = relay.Function([], output)
mod['func_2133'] = func_2133
mod = relay.transform.InferType()(mod)
mutated_mod['func_2133'] = func_2133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2133_call = mutated_mod.get_global_var('func_2133')
call_2134 = func_2133_call()
output = call_2134
func_2135 = relay.Function([], output)
mutated_mod['func_2135'] = func_2135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_2160 = func_1157_call()
call_2161 = func_1157_call()
var_2164 = relay.var("var_2164", dtype = "float32", shape = (15, 8, 9))#candidate|2164|(15, 8, 9)|var|float32
bop_2165 = relay.bitwise_xor(call_2160.astype('uint16'), var_2164.astype('uint16')) # shape=(15, 8, 9)
bop_2168 = relay.bitwise_xor(call_2161.astype('uint16'), var_2164.astype('uint16')) # shape=(15, 8, 9)
func_1549_call = mod.get_global_var('func_1549')
func_1551_call = mutated_mod.get_global_var('func_1551')
call_2171 = relay.TupleGetItem(func_1549_call(), 0)
call_2172 = relay.TupleGetItem(func_1551_call(), 0)
output = relay.Tuple([bop_2165,call_2171,])
output2 = relay.Tuple([bop_2168,call_2172,])
func_2174 = relay.Function([var_2164,], output)
mod['func_2174'] = func_2174
mod = relay.transform.InferType()(mod)
mutated_mod['func_2174'] = func_2174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2175 = relay.var("var_2175", dtype = "float32", shape = (15, 8, 9))#candidate|2175|(15, 8, 9)|var|float32
func_2174_call = mutated_mod.get_global_var('func_2174')
call_2176 = func_2174_call(var_2175)
output = call_2176
func_2177 = relay.Function([var_2175], output)
mutated_mod['func_2177'] = func_2177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2209 = relay.var("var_2209", dtype = "int16", shape = ())#candidate|2209|()|var|int16
const_2210 = relay.const([[[-5,3,4,-7,-9,-6,8,-9,-8],[3,-2,-3,-4,10,-9,10,-9,3],[-10,-2,1,-1,9,-7,4,1,7]],[[-8,4,-9,-9,7,3,-3,10,3],[7,-2,5,-5,7,6,1,5,4],[-8,-2,-10,5,-1,1,8,-1,6]],[[10,-6,7,-3,7,-4,1,-3,7],[1,9,8,-7,9,7,-7,-7,3],[6,-4,3,4,-2,-8,-10,-2,2]],[[-10,8,-10,-7,1,-9,-9,10,6],[3,-9,6,-3,-8,-7,7,-3,7],[10,-8,9,5,2,3,-1,9,1]],[[-7,2,-1,8,-6,-3,-4,-8,-1],[-10,5,2,-2,-4,2,6,2,-7],[-7,-1,5,8,6,-2,3,5,-5]],[[-7,9,6,9,-3,10,-3,4,-1],[-9,-10,5,4,-5,-7,6,-5,-7],[10,-3,-6,2,1,7,-7,-3,3]],[[-1,7,8,4,7,-10,-2,-8,-3],[9,8,-3,6,-1,-9,6,-3,-5],[6,-6,-1,-7,7,8,-2,7,-9]],[[-4,10,-1,-2,-8,1,-8,3,1],[-10,-6,6,1,1,9,-8,-2,-10],[7,1,9,-1,2,-2,-9,-3,-1]],[[9,8,-10,7,-2,6,3,4,-3],[7,-1,-7,1,-7,-10,-1,2,8],[-8,10,5,10,1,1,8,-5,4]],[[3,-9,10,-1,-10,-2,-5,-5,-8],[10,8,3,-5,-7,1,-4,9,-7],[5,-9,2,-3,-2,3,9,-10,-7]]], dtype = "int16")#candidate|2210|(10, 3, 9)|const|int16
bop_2211 = relay.right_shift(var_2209.astype('int16'), const_2210.astype('int16')) # shape=(10, 3, 9)
output = bop_2211
output2 = bop_2211
func_2236 = relay.Function([var_2209,], output)
mod['func_2236'] = func_2236
mod = relay.transform.InferType()(mod)
var_2237 = relay.var("var_2237", dtype = "int16", shape = ())#candidate|2237|()|var|int16
output = func_2236(var_2237)
func_2238 = relay.Function([var_2237], output)
mutated_mod['func_2238'] = func_2238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1488_call = mod.get_global_var('func_1488')
func_1489_call = mutated_mod.get_global_var('func_1489')
call_2247 = func_1488_call()
call_2248 = func_1488_call()
output = call_2247
output2 = call_2248
func_2263 = relay.Function([], output)
mod['func_2263'] = func_2263
mod = relay.transform.InferType()(mod)
output = func_2263()
func_2264 = relay.Function([], output)
mutated_mod['func_2264'] = func_2264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1185_call = mod.get_global_var('func_1185')
func_1187_call = mutated_mod.get_global_var('func_1187')
call_2348 = relay.TupleGetItem(func_1185_call(), 2)
call_2349 = relay.TupleGetItem(func_1187_call(), 2)
output = call_2348
output2 = call_2349
func_2352 = relay.Function([], output)
mod['func_2352'] = func_2352
mod = relay.transform.InferType()(mod)
mutated_mod['func_2352'] = func_2352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2352_call = mutated_mod.get_global_var('func_2352')
call_2353 = func_2352_call()
output = call_2353
func_2354 = relay.Function([], output)
mutated_mod['func_2354'] = func_2354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1549_call = mod.get_global_var('func_1549')
func_1551_call = mutated_mod.get_global_var('func_1551')
call_2370 = relay.TupleGetItem(func_1549_call(), 0)
call_2371 = relay.TupleGetItem(func_1551_call(), 0)
output = relay.Tuple([call_2370,])
output2 = relay.Tuple([call_2371,])
func_2376 = relay.Function([], output)
mod['func_2376'] = func_2376
mod = relay.transform.InferType()(mod)
output = func_2376()
func_2377 = relay.Function([], output)
mutated_mod['func_2377'] = func_2377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1488_call = mod.get_global_var('func_1488')
func_1489_call = mutated_mod.get_global_var('func_1489')
call_2437 = func_1488_call()
call_2438 = func_1488_call()
uop_2439 = relay.asin(call_2437.astype('float64')) # shape=(8, 10, 4)
uop_2441 = relay.asin(call_2438.astype('float64')) # shape=(8, 10, 4)
output = uop_2439
output2 = uop_2441
func_2452 = relay.Function([], output)
mod['func_2452'] = func_2452
mod = relay.transform.InferType()(mod)
mutated_mod['func_2452'] = func_2452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2452_call = mutated_mod.get_global_var('func_2452')
call_2453 = func_2452_call()
output = call_2453
func_2454 = relay.Function([], output)
mutated_mod['func_2454'] = func_2454
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2460 = relay.var("var_2460", dtype = "int32", shape = (9, 11, 4))#candidate|2460|(9, 11, 4)|var|int32
const_2461 = relay.const([[[10,-5,8,10],[-2,-3,4,-9],[2,-1,4,-2],[8,-5,10,-8],[-7,7,2,7],[2,1,2,5],[6,6,1,-3],[6,7,-1,8],[9,-5,-5,-5],[2,6,-7,-7],[7,5,3,-7]],[[5,5,-1,5],[-8,-9,1,-1],[1,7,6,-1],[7,-1,3,9],[1,5,7,-2],[-8,-8,-6,-2],[-6,-4,-2,5],[2,-2,-3,-2],[-7,10,7,-10],[4,6,9,-8],[-8,9,-9,1]],[[-2,6,-8,-4],[5,8,6,1],[-8,-2,6,1],[-4,5,-5,-3],[-1,-4,7,-3],[-10,8,-1,-5],[-5,-3,9,-2],[4,-4,-4,-8],[8,-6,-8,9],[2,-5,6,9],[9,2,-9,10]],[[-2,4,5,-4],[4,8,-1,-1],[6,-3,7,6],[7,3,2,9],[10,-1,7,-8],[7,4,-4,-10],[-2,7,-6,-5],[-10,-9,4,6],[3,-10,5,3],[3,2,6,-10],[-5,-8,-9,-6]],[[-3,-9,2,2],[-7,8,-8,5],[-10,-1,-9,5],[-7,4,7,-6],[4,-9,3,4],[2,1,2,-3],[3,7,4,-5],[-4,-10,-9,-3],[-2,-9,-4,4],[-2,-7,-10,-7],[6,-6,-5,-5]],[[10,-3,-10,1],[-9,-8,3,10],[-6,2,-9,3],[-2,-6,-10,9],[6,2,-8,-9],[-3,-1,-6,2],[8,-10,-2,10],[1,-4,-7,-4],[4,-9,9,9],[-3,-8,1,-5],[-5,-6,7,2]],[[2,-1,-6,-1],[1,3,10,-1],[4,3,9,-4],[2,-3,4,9],[1,8,-6,-10],[-1,-8,4,-3],[9,4,6,4],[8,9,3,9],[-1,-1,-5,8],[3,6,-5,8],[9,-2,9,-4]],[[-3,10,-4,-10],[-5,-4,10,-10],[-5,-2,7,4],[1,-10,-6,-7],[9,5,-8,8],[5,-8,1,-10],[4,9,-10,-9],[3,-1,-6,-5],[8,8,-6,9],[-6,6,5,-6],[-6,2,9,6]],[[3,-8,8,5],[7,3,-10,3],[-1,3,-3,-5],[-3,-4,10,-4],[-9,-3,-8,-4],[2,6,-2,-7],[-8,-9,1,-9],[-2,-7,-4,9],[-5,-2,-3,-8],[6,8,-3,-10],[-5,-1,2,-1]]], dtype = "int32")#candidate|2461|(9, 11, 4)|const|int32
bop_2462 = relay.minimum(var_2460.astype('int32'), relay.reshape(const_2461.astype('int32'), relay.shape_of(var_2460))) # shape=(9, 11, 4)
bop_2468 = relay.left_shift(bop_2462.astype('uint64'), relay.reshape(const_2461.astype('uint64'), relay.shape_of(bop_2462))) # shape=(9, 11, 4)
uop_2487 = relay.asinh(bop_2468.astype('float64')) # shape=(9, 11, 4)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_2489 = relay.TupleGetItem(func_1140_call(), 0)
call_2490 = relay.TupleGetItem(func_1142_call(), 0)
output = relay.Tuple([uop_2487,call_2489,])
output2 = relay.Tuple([uop_2487,call_2490,])
func_2513 = relay.Function([var_2460,], output)
mod['func_2513'] = func_2513
mod = relay.transform.InferType()(mod)
mutated_mod['func_2513'] = func_2513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2514 = relay.var("var_2514", dtype = "int32", shape = (9, 11, 4))#candidate|2514|(9, 11, 4)|var|int32
func_2513_call = mutated_mod.get_global_var('func_2513')
call_2515 = func_2513_call(var_2514)
output = call_2515
func_2516 = relay.Function([var_2514], output)
mutated_mod['func_2516'] = func_2516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2452_call = mod.get_global_var('func_2452')
func_2454_call = mutated_mod.get_global_var('func_2454')
call_2566 = func_2452_call()
call_2567 = func_2452_call()
output = call_2566
output2 = call_2567
func_2617 = relay.Function([], output)
mod['func_2617'] = func_2617
mod = relay.transform.InferType()(mod)
output = func_2617()
func_2618 = relay.Function([], output)
mutated_mod['func_2618'] = func_2618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2617_call = mod.get_global_var('func_2617')
func_2618_call = mutated_mod.get_global_var('func_2618')
call_2697 = func_2617_call()
call_2698 = func_2617_call()
func_661_call = mod.get_global_var('func_661')
func_663_call = mutated_mod.get_global_var('func_663')
const_2706 = relay.const([2.601363,-4.662248,-8.081373,-4.058770,-6.019143,-3.322914,7.608547,-0.742204,-0.791208,7.746103,-5.176521,3.702261,-9.784168,-8.837089,5.635249,1.418194,-2.456925,-8.969282,-3.969019,-5.739491,-2.035439,-9.523096,-0.785000,0.921006,-5.817151,-9.307689,8.329550,-8.924439,-4.551609,3.135127,0.315817,-3.530738,-1.941731,6.507280,4.225420,0.504104,-0.152721,-4.453947,-0.054042,9.682028,-0.056922,-7.621275,-0.524262,4.252831,5.975960,-4.791842,-0.185309,-0.174300,0.907624,1.785838,2.041129,-9.785014,-5.533557,-7.435817,-8.923524,0.504914,-6.971580,-5.923627,8.087824,4.474386,-9.528056,3.492516,-4.025707,7.362787,2.667797,-4.082244,7.064318,3.499653,2.411162,0.057276,9.610852,5.168756,-2.029979,-6.714899,6.408076,-7.102145,8.460575,-7.363884,-1.496693,1.349419,4.971052,-6.698572,4.318397,-8.459775,-9.708478,-9.826913,9.733025,4.229652,-0.388342,6.270178,4.685256,4.060553,7.549946,-1.951505,-4.336004,-4.636173,7.875534,-0.901596,-1.310304,-6.945749,-8.953031,-6.515977,-6.841010,9.619436,-1.031943,-9.694596,0.289890,-7.914205,-4.153681,-8.951848,1.780187,-6.314473,6.787614,9.313413,1.144288,-7.649930,-5.836717,7.737472,-4.235372,9.197574,1.186901,-6.828473,-4.229895,-9.998068,2.703701,7.774695,9.935077,-9.557312,-6.560615,-4.598082,3.964176,-1.841098,2.779470,-0.576362,-8.525381,-3.878993,1.486012,-9.121396,-8.962097,-2.631695,2.059057,-9.674590,7.834966,-4.917082,-6.462466,-1.730266,8.725691,3.738736,-7.589641,5.553621,-3.725280,6.540242,-3.956760,4.646796,-8.687943,2.904523,2.732612,-2.282527,-0.989576,-8.951932,7.073117,-5.372850,5.294212,9.089551,9.089878,6.615754,6.134411,4.666642,-2.464202,-2.864096,6.479232,8.828007,4.707233,1.989694,-0.618435,-4.043642,-7.428996,-2.739967,-8.289264,-8.643039,-8.445403,4.228603,-8.789017,-5.897790,4.250074,4.153929,-7.636683,8.086218,-7.565534,0.396707,0.620342,-2.303364,-3.013824,2.456245,-0.581082,-9.183855,8.540465,-8.215065,-3.365754,1.096516,9.778617,-6.260014,6.898922,2.992569,2.988527,-1.654051,-7.440761,-2.372681,7.694459,-8.780223,1.645355,3.705931,-4.563605,-4.835840,-8.905599,9.481483,-7.779440,9.265801,4.469191,4.853333,3.524903,4.396040,-5.864398,-9.384385,-5.700228,-2.023314,1.713515,-9.174215,1.445315,-5.210724,-4.343937,-2.401323,-3.045118,-7.888353,-6.457840,-4.445434,2.931837,-7.522159,8.374577,-6.564870,9.324076,-4.839232,-8.610861,-2.382432,6.257721,5.181940,-4.708810,3.227434,4.926356,0.286827,8.287333,4.874073,8.616207,2.941174,-2.460343,-0.982062,-8.325240,-1.244538,-6.572586,-1.025001,5.513219,3.055197,5.448387,-6.296219,0.277935,5.895944,5.824016,8.403269,-3.235976,-7.462541,-2.446664,-6.175025,9.266354,7.944012,9.469535,2.931986,1.321617,6.957013,9.363165,4.940001,1.452673,-0.729873,7.428370,8.895215,-0.721170,-0.779254,0.341488,7.809303,3.070804,-2.318482,-1.015207,-1.627495,-9.399783,3.224745,1.713809,-8.273681,9.166889,-4.917020,4.603522,-9.400687,9.401185,-8.619832,6.619147,0.965256,3.607374,5.884807,7.364715,4.091765,6.025215,-2.824030,-3.445281,0.515313,4.243203,-2.893033,-2.648613,-3.602738,-1.057030,-5.387808,-2.959277,-2.677515,9.139182,5.891245,5.684500,-6.664956,3.604019,-0.707535,-2.834239,9.199772,0.312774,-2.432359,-8.278298,8.208675,7.173747,-6.198887,6.489152,0.207818,6.137658,3.522391,-9.425412,4.218218,-2.163064,4.429888,-2.986151,-8.243344,-7.972278,0.165844,8.847154,1.087856,-6.713220,-1.461673,2.909710,-6.289642,0.144936,3.154398,5.993967,5.778562,-9.485039,-7.048467,-6.464378,-3.008542,8.223195,1.013995,-2.419992,-1.194282,9.508870,-1.443662,-5.074783,5.333968,7.075580,0.802344,8.820511,-8.252322,3.161943,-0.556750,-9.999647,5.860320,-1.891858,-1.723288,0.821812,2.002353,-1.672053,9.217390,-9.234991,-8.491764,-9.088977,5.515687,-6.619678,4.677864,-8.154999,5.965782,3.290840,4.256841,-6.204667,-8.781285,-4.522618,-7.816183,-1.701484,4.756352,-1.948006,-2.219487,-9.639609,-2.024742,6.219443,-4.270739,-7.132386,-0.759664,-6.256937,1.985651,-1.993712,3.851916,-7.067765,3.264815,3.208783,7.214782,-6.272427,-7.329417,8.281573,5.297146,5.351432,3.362319,-4.999281,1.550998,2.755363,1.666640,-3.818795,-7.300246,-0.706165,8.027750,-0.017227,9.733317,-3.557271,5.713444,-1.457474,9.652792,5.587297,4.429657,-1.743547,-2.539886,-8.349114,8.336292,-7.464556,1.087372,1.631180,6.580673,1.530946,-8.461586,-1.533513,-5.593324,5.906511,-5.957903,-9.955101,-4.758000,-3.750854,-6.417471,-1.670514,-2.683096,9.851079,7.574549,-7.970360,-8.459631,8.726377,-2.695996,9.562211,-1.183719,-5.069261,9.845796,3.713286,1.455404,-3.882355,-7.028933,-9.739594,-3.753494,-1.227235,-9.742611,-8.699860,-6.767238,-9.340228,8.256060,5.792129,-4.847470,4.232607,-1.847552,1.219978,-8.397452,8.146305,-3.520676,3.695378,7.086093,-6.081377,5.043801,8.890648,-1.206976,-7.022214,3.278608,9.072570,7.210222,4.089071,5.907914,7.147695,-1.590522,-7.436043,-8.653077,3.872280,4.634388,-4.389130,-2.971273,4.056199,8.473029,8.105927,4.105022,-6.156558,6.809496,6.645778,-9.460354,-0.163124,9.109990,2.078217,1.543550,-9.966087,-4.810989,5.257264,-6.900491,6.341267,-0.471435,-0.525784,4.148059,-7.469005,-6.039541,-4.687394,-1.159390,6.196282,8.182396,-7.055444,-5.263413,-8.088785,2.154838,8.105046,-2.974227,7.914685,6.198073,-3.565440,-3.151970,1.910112,-4.753131,7.801549,9.479676,0.046133,5.942683,3.984105,-5.662260,-5.549892,7.313570,3.207985,-0.628781,-1.836421,-5.214944,-4.938037,4.905475,3.531146,5.029873,-5.582834,4.992709,-8.588585,5.544824,-1.391080,8.531372,9.145427,3.232256,-7.782077,7.434899,1.988898,9.696914,-6.524973,-5.706178,0.330522,-2.015790,-0.904743,3.923772,-2.063556,-9.720599,-3.844535,7.341845,-5.818285,-9.746534,-7.866223,7.899339,7.887516,-6.132349,3.260252,6.465915,-0.178089,-2.830614,4.101402,6.857899,2.798428,0.545341,6.051904,4.838352,7.287727,-4.822632,-1.723446,1.668474,0.549105,1.984971,-6.959794,1.392026,1.638591,6.991503,7.290154,-7.995480,-4.891537,-1.581470,6.137967,0.857319,3.768672,-3.319134,4.556264,5.779172,9.708306,1.423834,9.601804,6.771523,0.232649,9.291475,9.901741,7.400125,3.120180,-9.326224,5.697666,3.917127,5.681143,-2.434527,-2.620186,7.646054,2.467509,2.087976,3.853685,8.174453,-5.276801,6.768313,-5.564015,4.756308,-8.981873,-6.318429,-1.675924,-0.357367,-6.642179,-5.826450,-4.381975,-0.893507,1.509386,-9.313652,-5.805769,3.339664,9.176660,9.157086,3.129373,7.914971,-1.040478,8.580514,-4.311310,-0.457986,7.193898,8.797675,2.225720,2.257703,8.952028,7.708148,6.503985,-3.344478,-9.208865,-3.289707,6.756360,8.242565,-4.720317,-2.917171,5.871341,4.369681,1.082743,-7.158065,-5.917276,4.023672,-3.918435,-8.743555,2.691378,-6.909341,-7.463865,2.501672,-5.621043,3.104918,-2.052069,0.561057,-3.220940,-5.039089,9.830969,-8.492766,-6.304850,-7.894431,3.408605,-3.716119,2.181885,-7.884466,6.869548,2.451999,-6.209820,-0.201794,-8.162147,-2.824314,-3.569481,7.130381,-0.690827,-1.890237,0.524353,4.305525,6.316127,-1.065780,-9.486821,-5.222770,-6.395526,7.868963], dtype = "float64")#candidate|2706|(720,)|const|float64
call_2705 = relay.TupleGetItem(func_661_call(relay.reshape(const_2706.astype('float64'), [10, 8, 9])), 1)
call_2707 = relay.TupleGetItem(func_663_call(relay.reshape(const_2706.astype('float64'), [10, 8, 9])), 1)
output = relay.Tuple([call_2697,call_2705,const_2706,])
output2 = relay.Tuple([call_2698,call_2707,const_2706,])
func_2712 = relay.Function([], output)
mod['func_2712'] = func_2712
mod = relay.transform.InferType()(mod)
output = func_2712()
func_2713 = relay.Function([], output)
mutated_mod['func_2713'] = func_2713
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2797 = relay.var("var_2797", dtype = "float32", shape = (14, 14, 15))#candidate|2797|(14, 14, 15)|var|float32
var_2798 = relay.var("var_2798", dtype = "float32", shape = (14, 14, 15))#candidate|2798|(14, 14, 15)|var|float32
bop_2799 = relay.divide(var_2797.astype('float32'), relay.reshape(var_2798.astype('float32'), relay.shape_of(var_2797))) # shape=(14, 14, 15)
bop_2812 = relay.multiply(var_2798.astype('int64'), relay.reshape(var_2797.astype('int64'), relay.shape_of(var_2798))) # shape=(14, 14, 15)
output = relay.Tuple([bop_2799,bop_2812,])
output2 = relay.Tuple([bop_2799,bop_2812,])
func_2817 = relay.Function([var_2797,var_2798,], output)
mod['func_2817'] = func_2817
mod = relay.transform.InferType()(mod)
var_2818 = relay.var("var_2818", dtype = "float32", shape = (14, 14, 15))#candidate|2818|(14, 14, 15)|var|float32
var_2819 = relay.var("var_2819", dtype = "float32", shape = (14, 14, 15))#candidate|2819|(14, 14, 15)|var|float32
output = func_2817(var_2818,var_2819,)
func_2820 = relay.Function([var_2818,var_2819,], output)
mutated_mod['func_2820'] = func_2820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_496_call = mod.get_global_var('func_496')
func_497_call = mutated_mod.get_global_var('func_497')
call_2845 = relay.TupleGetItem(func_496_call(), 0)
call_2846 = relay.TupleGetItem(func_497_call(), 0)
output = relay.Tuple([call_2845,])
output2 = relay.Tuple([call_2846,])
func_2847 = relay.Function([], output)
mod['func_2847'] = func_2847
mod = relay.transform.InferType()(mod)
output = func_2847()
func_2848 = relay.Function([], output)
mutated_mod['func_2848'] = func_2848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_2888 = func_1157_call()
call_2889 = func_1157_call()
func_661_call = mod.get_global_var('func_661')
func_663_call = mutated_mod.get_global_var('func_663')
var_2895 = relay.var("var_2895", dtype = "float64", shape = (720,))#candidate|2895|(720,)|var|float64
call_2894 = relay.TupleGetItem(func_661_call(relay.reshape(var_2895.astype('float64'), [10, 8, 9])), 0)
call_2896 = relay.TupleGetItem(func_663_call(relay.reshape(var_2895.astype('float64'), [10, 8, 9])), 0)
output = relay.Tuple([call_2888,call_2894,var_2895,])
output2 = relay.Tuple([call_2889,call_2896,var_2895,])
func_2897 = relay.Function([var_2895,], output)
mod['func_2897'] = func_2897
mod = relay.transform.InferType()(mod)
mutated_mod['func_2897'] = func_2897
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2898 = relay.var("var_2898", dtype = "float64", shape = (720,))#candidate|2898|(720,)|var|float64
func_2897_call = mutated_mod.get_global_var('func_2897')
call_2899 = func_2897_call(var_2898)
output = call_2899
func_2900 = relay.Function([var_2898], output)
mutated_mod['func_2900'] = func_2900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1902_call = mod.get_global_var('func_1902')
func_1903_call = mutated_mod.get_global_var('func_1903')
call_2922 = relay.TupleGetItem(func_1902_call(), 0)
call_2923 = relay.TupleGetItem(func_1903_call(), 0)
output = relay.Tuple([call_2922,])
output2 = relay.Tuple([call_2923,])
func_2936 = relay.Function([], output)
mod['func_2936'] = func_2936
mod = relay.transform.InferType()(mod)
mutated_mod['func_2936'] = func_2936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2936_call = mutated_mod.get_global_var('func_2936')
call_2937 = func_2936_call()
output = call_2937
func_2938 = relay.Function([], output)
mutated_mod['func_2938'] = func_2938
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2939 = relay.const([[[-1,3],[7,-5],[7,6],[8,-5],[-3,4],[8,-4]],[[5,-7],[-9,2],[-4,-6],[-9,9],[2,3],[1,8]],[[-1,-3],[-8,-9],[3,2],[7,-3],[-3,5],[1,-7]],[[-1,6],[-8,-9],[9,-9],[7,8],[4,-5],[7,3]],[[9,1],[-1,-5],[-9,-6],[5,8],[-7,1],[-5,-7]],[[10,-9],[8,-9],[9,8],[-8,-4],[-6,-6],[10,-5]]], dtype = "uint64")#candidate|2939|(6, 6, 2)|const|uint64
var_2940 = relay.var("var_2940", dtype = "uint64", shape = (6, 6, 2))#candidate|2940|(6, 6, 2)|var|uint64
bop_2941 = relay.minimum(const_2939.astype('uint64'), relay.reshape(var_2940.astype('uint64'), relay.shape_of(const_2939))) # shape=(6, 6, 2)
bop_2944 = relay.subtract(var_2940.astype('float32'), relay.reshape(const_2939.astype('float32'), relay.shape_of(var_2940))) # shape=(6, 6, 2)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_2948 = relay.TupleGetItem(func_1140_call(), 0)
call_2949 = relay.TupleGetItem(func_1142_call(), 0)
uop_2956 = relay.log2(const_2939.astype('float64')) # shape=(6, 6, 2)
bop_2959 = relay.less_equal(uop_2956.astype('bool'), relay.reshape(bop_2944.astype('bool'), relay.shape_of(uop_2956))) # shape=(6, 6, 2)
func_2897_call = mod.get_global_var('func_2897')
func_2900_call = mutated_mod.get_global_var('func_2900')
const_2964 = relay.const([-9.234722,-3.784774,7.238458,-0.119684,0.486816,2.332869,7.073063,9.325907,-4.662114,4.042185,6.589599,7.371187,-3.904142,-2.445672,6.462979,-2.223072,6.253452,-7.785584,-6.934215,-7.666390,7.753671,8.386876,7.432850,-3.849365,2.772515,-2.061901,0.430678,-6.857887,2.940132,-7.952618,1.729379,-6.871897,6.498312,3.232008,-5.569910,9.674466,3.042210,-2.049541,-3.217460,3.561242,7.932934,-9.897692,5.723754,-8.893478,-3.942464,-5.871352,4.063218,-9.521212,1.884214,-6.482971,-1.448201,0.909628,-7.330020,-1.355795,-8.296213,8.282807,5.990404,4.029842,-5.856146,-6.748716,-9.742339,-3.264893,6.599247,-6.906950,-6.224129,-5.610935,4.390121,4.290255,-2.776519,-1.242405,1.277545,-5.342279,7.061662,5.907199,9.944756,-0.514750,-2.427243,4.849426,-7.381760,-0.008798,-4.513578,4.523862,-9.896328,-5.493562,-5.699292,-8.957384,-2.431099,-1.100568,-9.934787,7.268344,0.536320,4.728474,1.031069,-7.893189,-0.432435,-3.536818,8.642320,-9.213675,-1.052688,-3.193120,5.632671,-7.421641,0.840141,-1.164226,8.210524,6.604369,6.086618,-2.275435,8.452527,-0.345940,-7.795292,6.996196,-0.734322,1.676515,-7.332161,4.587472,-1.021855,7.078544,0.728843,9.691807,4.392111,9.361707,2.977805,4.250649,-7.604970,2.936951,1.225818,4.829757,-4.274107,-2.893144,-0.581143,0.196672,-2.404152,6.973239,-2.920742,-3.020847,7.649604,-6.786632,6.555900,-8.041406,-6.205493,-9.579433,-9.161634,0.473599,4.726285,4.679360,-9.517714,-4.292462,3.580718,-5.691250,9.918439,5.989874,-3.875686,5.409027,-6.747128,-8.026747,7.722954,-0.841322,-1.552363,0.033750,3.331513,0.218240,6.198594,-3.244724,7.104429,-9.645476,1.062761,-1.734037,4.060501,-5.418323,0.541781,-3.323897,7.375196,-7.581182,6.052986,1.170132,-4.020967,-8.092837,7.633168,-2.047227,0.605009,9.114291,-3.444796,-9.309843,4.553814,0.569341,6.074324,-4.350098,-7.475229,-1.705846,-7.527163,5.377526,5.346712,-5.752532,-2.259975,6.719042,6.934978,3.155334,-3.202088,2.069790,-3.107899,-6.704123,3.146054,-9.099427,4.208503,1.422210,5.208191,-1.454186,-3.006896,4.245014,0.252962,-2.807080,0.502083,4.745054,0.576575,9.780713,3.043645,-1.239871,-0.714601,4.030625,8.284914,4.323677,9.408417,7.338274,-5.118538,-3.494208,-0.481866,-8.271259,-1.668176,1.996909,8.494967,2.381858,0.962513,1.470190,1.429227,3.344445,8.970736,0.307943,3.219597,-1.495117,3.025782,0.743007,1.912032,6.340390,0.442832,0.413034,5.792127,-4.753012,-8.440660,8.032272,-9.351142,8.142690,2.505299,-5.376673,8.379359,3.144616,4.714141,-5.232056,-5.219295,3.138290,6.100366,-2.538154,9.069895,5.968655,-0.706951,1.854418,3.309593,-6.344272,5.056541,6.186349,7.546847,3.592193,-6.263476,8.466821,8.520155,-0.867075,-8.469357,-1.123232,7.274656,6.574414,-1.468276,-7.121763,7.040195,-8.561157,7.729371,-9.276474,-2.839382,-6.951383,8.973014,-5.478204,-7.105937,3.105796,4.941359,-9.287534,3.799537,9.895356,5.624430,-7.170137,-1.890816,7.287255,-3.305816,1.175192,-7.543918,7.121661,2.602144,-9.416179,4.458137,-0.740809,1.253593,1.199351,7.889716,-4.232537,7.318986,2.454958,-8.701656,9.594360,-3.209078,3.640838,-7.279721,5.151343,-6.946774,8.267158,7.335032,1.182495,5.357149,-1.397093,2.753206,6.273500,7.322090,-4.318361,4.712599,-5.121403,-2.309699,-0.228051,8.779659,9.470795,-5.097220,9.517730,-0.073309,-7.283988,6.952061,-9.467755,-2.639128,6.405412,4.515717,1.756751,-1.006505,-3.044091,2.295624,2.455962,-7.159802,7.519685,-2.830864,6.322498,5.199890,-4.357645,-7.782095,7.115838,-0.455086,-9.919795,-8.873162,-0.291426,2.799984,-5.593588,-4.563064,1.121875,-9.303764,9.536545,8.750461,0.676663,-3.798428,-7.037027,7.420532,2.899448,-5.329219,4.278100,1.385378,6.044508,-1.081546,-7.580176,-7.629833,-8.426993,-8.901501,5.564765,-8.016422,-4.329652,-3.386194,2.945122,-5.706909,5.313040,-3.845918,6.296439,-5.083323,-4.143116,-1.944628,8.966188,2.084916,6.822955,5.592214,9.579651,-3.683740,5.121846,-5.813994,-6.035364,6.827156,-7.268901,-8.614570,-5.746718,-1.455168,6.359027,0.346241,4.310369,-5.879869,-6.853845,5.107101,5.642519,2.857398,-9.286686,6.849811,-4.471246,-7.563239,-2.282771,-5.150961,-4.593511,-0.342849,-6.479709,-6.054035,-9.779793,-1.040615,2.744430,-9.061367,9.376690,4.952630,-9.199758,-6.125366,7.298339,4.419786,9.985076,-3.652489,-4.097490,-7.338325,-6.048341,2.556018,8.745674,1.405125,9.172704,-7.634221,3.440491,2.490209,-3.195605,-6.733763,-0.726664,-3.815123,-8.311057,8.186948,8.990761,1.379326,2.656524,-8.074356,-7.704684,9.439951,4.245793,2.430860,2.549774,-1.784260,-0.367606,2.992661,-3.760014,6.855775,9.037151,-9.914330,-8.355410,-8.947111,-8.983575,-9.854996,8.355366,-2.613846,3.382796,8.502060,-0.318447,2.210996,4.570028,-3.157518,-7.584662,-8.464476,-8.498846,-3.049109,-0.667874,-0.079448,4.794630,6.237154,-0.420202,6.031254,1.166660,-1.994052,4.156930,1.438169,5.656211,-6.835737,7.966084,6.475228,7.852003,-4.715690,-0.976294,-6.319729,2.066412,-3.681032,-2.415513,-0.550776,1.465482,5.448733,-8.033624,0.573509,-1.463373,6.605648,-6.870467,-1.296306,-1.881820,2.282343,5.878815,-2.063504,6.449619,0.444060,-7.813752,-7.146569,-9.231985,-5.440968,-1.403149,-3.016053,-2.183216,-7.509867,-0.726224,-3.300714,5.603447,-1.597841,-0.662037,8.072525,8.083477,9.736205,-5.611728,8.237920,0.584963,8.905120,4.754213,7.750939,7.831841,-1.361958,-2.172738,-6.020869,-0.845244,-7.487387,7.060120,0.117999,-7.624912,4.726843,-3.384319,-4.923615,-6.381268,1.445164,0.543115,0.361228,-9.942336,9.396038,5.036729,-4.891723,-6.417826,-6.787567,-6.429505,-1.150397,-7.930039,-8.946789,4.744273,-9.135086,-0.867431,6.498952,-3.439567,4.684863,1.721975,0.495164,-0.841427,-6.763679,3.438668,1.388578,-9.508578,-3.371819,3.652981,3.869574,8.578810,-6.279534,3.086018,-1.438153,8.211801,-2.702584,-6.137244,4.983385,5.957670,3.463343,-7.428104,5.474966,-5.237782,0.816058,-1.316503,-5.579334,-6.771106,3.427678,3.638864,-1.000051,7.933619,0.966852,-1.514160,4.790272,-9.281045,-7.129477,1.347198,-8.956461,-2.697125,3.991709,-4.619360,-2.606681,-1.308765,3.239003,4.560470,-5.252457,-5.585245,-4.518810,-2.796095,2.733505,-5.262429,6.477764,3.703102,-4.044435,1.491281,-9.743905,0.822096,9.513106,-7.894711,8.078967,-1.650708,7.668833,2.857189,5.034571,8.383761,3.023187,6.174078,4.265346,-9.559467,-8.158742,3.008964,6.797397,4.379909,-1.346569,6.453058,-8.556267,-8.557638,9.600385,1.066465,5.688212,4.222123,1.881519,-4.836915,7.610150,-7.960150,-0.409569,-9.096143,-5.557371,-5.696912,2.818469,2.351455,0.973229,6.053264,8.745611,-2.692355,4.613206,4.987537,-4.169302,2.406579,-2.277638,7.503430,5.472715,9.680119,0.465647,0.970648,0.259341,-4.214745,-3.945140,2.672157,4.310712,-0.848464,3.378598,5.516146,6.252459,5.078913,-2.642105,7.718284,-8.023615,1.181153,-0.104369,4.525497,3.718560,4.991012,7.713928,-4.537856,-6.561647,-9.468738,-0.134023,8.872046,-1.051752,-3.749077,3.283232,6.584281,-8.274451,7.607041,7.084604,-5.176903,2.010034,-4.537155,6.681128,5.964040,6.278568,7.314689], dtype = "float64")#candidate|2964|(720,)|const|float64
call_2963 = relay.TupleGetItem(func_2897_call(relay.reshape(const_2964.astype('float64'), [720,])), 2)
call_2965 = relay.TupleGetItem(func_2900_call(relay.reshape(const_2964.astype('float64'), [720,])), 2)
output = relay.Tuple([bop_2941,call_2948,bop_2959,call_2963,const_2964,])
output2 = relay.Tuple([bop_2941,call_2949,bop_2959,call_2965,const_2964,])
func_2970 = relay.Function([var_2940,], output)
mod['func_2970'] = func_2970
mod = relay.transform.InferType()(mod)
var_2971 = relay.var("var_2971", dtype = "uint64", shape = (6, 6, 2))#candidate|2971|(6, 6, 2)|var|uint64
output = func_2970(var_2971)
func_2972 = relay.Function([var_2971], output)
mutated_mod['func_2972'] = func_2972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1806_call = mod.get_global_var('func_1806')
func_1808_call = mutated_mod.get_global_var('func_1808')
call_2982 = func_1806_call()
call_2983 = func_1806_call()
func_2452_call = mod.get_global_var('func_2452')
func_2454_call = mutated_mod.get_global_var('func_2454')
call_3014 = func_2452_call()
call_3015 = func_2452_call()
func_496_call = mod.get_global_var('func_496')
func_497_call = mutated_mod.get_global_var('func_497')
call_3021 = relay.TupleGetItem(func_496_call(), 0)
call_3022 = relay.TupleGetItem(func_497_call(), 0)
uop_3023 = relay.sin(call_3014.astype('float64')) # shape=(8, 10, 4)
uop_3025 = relay.sin(call_3015.astype('float64')) # shape=(8, 10, 4)
output = relay.Tuple([call_2982,call_3021,uop_3023,])
output2 = relay.Tuple([call_2983,call_3022,uop_3025,])
func_3040 = relay.Function([], output)
mod['func_3040'] = func_3040
mod = relay.transform.InferType()(mod)
output = func_3040()
func_3041 = relay.Function([], output)
mutated_mod['func_3041'] = func_3041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2936_call = mod.get_global_var('func_2936')
func_2938_call = mutated_mod.get_global_var('func_2938')
call_3054 = relay.TupleGetItem(func_2936_call(), 0)
call_3055 = relay.TupleGetItem(func_2938_call(), 0)
func_1519_call = mod.get_global_var('func_1519')
func_1521_call = mutated_mod.get_global_var('func_1521')
var_3080 = relay.var("var_3080", dtype = "float64", shape = (720,))#candidate|3080|(720,)|var|float64
call_3079 = relay.TupleGetItem(func_1519_call(relay.reshape(var_3080.astype('float64'), [720,])), 2)
call_3081 = relay.TupleGetItem(func_1521_call(relay.reshape(var_3080.astype('float64'), [720,])), 2)
func_30_call = mod.get_global_var('func_30')
func_34_call = mutated_mod.get_global_var('func_34')
const_3089 = relay.const([-8,5,-4,-9,7,3,4,-8,-5,2,3,10,-4,4,-2,5,7,9,-5,8,-10,3,-1,6,4,-7,4,10,10,6,-2,-2,-3,2,-9,-9,-1,2,-7,-7,-6,7,-4,10,2,5,-6,-3,-8,-4,5,-8,10,-10,10,-8,-4,8,4,3,3,10,-7,-6,-7,-3,-8,1,-3,-6,10,1,3,-3,7,-2,6,-10,2,9,10,4,-5,7,7,10,1,1,-1,8,-4,10,2,-4,-8,6,7,6,-6,-9,-8,10,8,-3,8], dtype = "int16")#candidate|3089|(105,)|const|int16
call_3088 = func_30_call(relay.reshape(const_3089.astype('int16'), [3, 7, 5]), relay.reshape(const_3089.astype('int16'), [3, 7, 5]), )
call_3090 = func_30_call(relay.reshape(const_3089.astype('int16'), [3, 7, 5]), relay.reshape(const_3089.astype('int16'), [3, 7, 5]), )
output = relay.Tuple([call_3054,call_3079,var_3080,call_3088,const_3089,])
output2 = relay.Tuple([call_3055,call_3081,var_3080,call_3090,const_3089,])
func_3095 = relay.Function([var_3080,], output)
mod['func_3095'] = func_3095
mod = relay.transform.InferType()(mod)
mutated_mod['func_3095'] = func_3095
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3096 = relay.var("var_3096", dtype = "float64", shape = (720,))#candidate|3096|(720,)|var|float64
func_3095_call = mutated_mod.get_global_var('func_3095')
call_3097 = func_3095_call(var_3096)
output = call_3097
func_3098 = relay.Function([var_3096], output)
mutated_mod['func_3098'] = func_3098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1958_call = mod.get_global_var('func_1958')
func_1959_call = mutated_mod.get_global_var('func_1959')
call_3145 = func_1958_call()
call_3146 = func_1958_call()
output = relay.Tuple([call_3145,])
output2 = relay.Tuple([call_3146,])
func_3149 = relay.Function([], output)
mod['func_3149'] = func_3149
mod = relay.transform.InferType()(mod)
mutated_mod['func_3149'] = func_3149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3149_call = mutated_mod.get_global_var('func_3149')
call_3150 = func_3149_call()
output = call_3150
func_3151 = relay.Function([], output)
mutated_mod['func_3151'] = func_3151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2452_call = mod.get_global_var('func_2452')
func_2454_call = mutated_mod.get_global_var('func_2454')
call_3167 = func_2452_call()
call_3168 = func_2452_call()
output = relay.Tuple([call_3167,])
output2 = relay.Tuple([call_3168,])
func_3172 = relay.Function([], output)
mod['func_3172'] = func_3172
mod = relay.transform.InferType()(mod)
mutated_mod['func_3172'] = func_3172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3172_call = mutated_mod.get_global_var('func_3172')
call_3173 = func_3172_call()
output = call_3173
func_3174 = relay.Function([], output)
mutated_mod['func_3174'] = func_3174
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3184 = relay.const([[[8,9,1,-3,-7,10,1,7,-3,3,-8,5],[-1,10,-2,6,-10,-4,-1,9,8,-7,-1,3],[1,7,1,3,6,6,2,10,6,-7,2,4],[3,9,10,-9,-9,10,8,-6,7,-4,3,-2],[-7,8,5,9,5,-4,-1,-8,9,4,1,4],[9,8,-2,-5,-1,8,6,4,7,-8,10,1],[-2,-9,-3,3,-2,8,-3,-3,-5,-10,10,2],[-9,8,-6,9,5,3,10,4,8,6,-4,-4],[1,9,8,-3,-4,8,-1,8,-4,4,8,6],[9,-5,-10,-1,5,-4,-5,-9,7,9,-4,-4],[7,-10,5,10,7,-6,-6,-8,10,1,-9,2]],[[-8,4,7,10,-5,10,-8,3,-8,2,9,-3],[4,-2,-6,10,7,-8,1,10,-10,-7,3,-4],[10,-2,-6,6,3,-2,4,5,-6,-8,2,-5],[8,-1,-4,1,8,3,-2,-1,-10,-4,-5,-8],[1,-9,3,5,8,4,8,-7,1,-10,10,-6],[4,-7,-8,-1,-8,-3,-4,2,-2,-3,-2,-7],[-2,-7,-10,-5,4,5,-6,10,5,-6,-2,3],[7,-4,-8,-3,2,3,3,-6,9,-9,-8,-10],[2,3,4,-8,4,9,7,-2,-2,-8,-2,-3],[8,7,-1,-2,-1,-9,-3,-8,-10,-10,-1,-5],[7,9,10,2,4,-7,-6,-7,5,4,4,-6]],[[-10,-1,-7,5,2,5,8,1,9,-6,-8,-4],[1,-3,-1,-9,-3,2,-7,-8,-1,-2,-2,-2],[2,6,10,-4,-7,8,-6,-6,7,3,-5,4],[3,6,8,4,5,-1,9,10,4,3,2,3],[9,7,6,-3,-7,2,-8,-7,-8,10,8,5],[-7,-4,-2,-10,10,7,9,4,-1,-1,-5,-2],[9,-2,1,8,8,6,-6,10,-6,-5,9,10],[6,-6,2,-3,9,7,-3,-7,9,-10,2,5],[7,2,7,-5,-3,-5,-9,5,4,-10,-1,9],[-2,4,-6,-1,-7,2,-5,9,8,-3,2,4],[4,-4,-3,-2,9,9,5,2,-5,5,9,-7]],[[8,3,10,6,3,8,1,1,7,7,1,3],[-4,-7,-4,2,-4,2,4,9,-7,5,6,10],[-5,-5,-8,4,9,-9,-6,5,-7,6,-4,-1],[2,9,-10,-1,-7,3,7,9,9,-8,-8,4],[1,-9,5,-8,-3,-6,7,2,-8,-1,-2,-8],[10,-5,1,6,-1,9,-2,-6,-3,2,2,5],[-8,-2,9,-3,-9,7,-10,-4,-7,-1,-9,8],[9,-3,3,-10,4,-3,-5,-10,-5,-4,2,-9],[8,-8,7,10,-5,7,-1,-8,1,8,8,-8],[-6,1,10,-5,-10,-7,10,-2,-8,-2,6,-4],[1,-10,-9,-3,1,-1,2,1,-2,8,4,8]],[[9,-3,-1,-9,-6,-3,-7,9,10,1,9,-3],[-10,2,3,8,-1,-6,-7,-7,3,-9,8,-2],[-10,-10,7,-10,6,-1,-4,-10,1,7,10,2],[-8,8,10,2,-5,9,-6,8,-2,3,-9,3],[9,-9,-6,6,1,9,6,-9,4,4,8,-3],[1,10,-9,2,-3,-8,-10,-4,-2,2,4,10],[1,9,-4,-4,10,-6,7,6,-9,-2,3,-1],[8,-3,-5,2,7,-7,-8,7,-5,7,-5,3],[-9,4,-10,7,10,-2,-2,-3,10,9,1,5],[3,9,5,1,-6,8,-1,7,4,8,-6,5],[3,5,4,-1,4,-2,-3,-2,9,8,-4,3]],[[4,6,-4,-7,6,10,-4,6,2,-6,2,-5],[-10,1,6,4,5,10,-10,4,-1,-6,7,4],[2,4,9,-3,2,3,-9,-8,4,4,6,-9],[-4,5,-7,-1,-8,2,-6,-6,-10,6,7,-4],[3,6,7,8,10,-5,2,-7,4,-10,6,-9],[-7,8,1,5,-1,3,6,-3,3,-5,-5,5],[-4,10,-1,10,5,1,1,8,-7,-4,-10,-9],[-5,10,-9,-9,-2,-6,-9,-10,-4,8,7,9],[-7,-6,10,-4,2,-4,10,7,-4,2,9,8],[5,1,2,-5,-5,-7,-8,9,-4,-10,-8,-4],[-10,-8,2,-4,-1,-8,-5,1,-6,4,-1,2]],[[5,10,1,-8,4,-1,3,3,10,-7,6,4],[8,6,10,7,-1,9,-2,-6,4,-3,5,-10],[-7,2,5,-7,-4,4,-10,9,9,7,4,8],[-3,6,-6,2,1,9,2,3,-9,-9,-10,-2],[8,-10,3,2,-10,-5,-3,2,-3,-4,-6,-10],[-5,-4,9,6,7,2,6,7,2,-2,1,1],[-4,-8,3,7,-10,5,-9,9,-8,6,-2,-2],[7,9,10,1,-8,-6,8,1,6,-7,8,1],[-6,-2,1,3,9,-5,4,3,-4,3,2,-2],[-9,-3,5,-4,2,9,1,-3,-6,9,4,-3],[1,-4,9,3,-5,6,-2,-10,8,10,-1,-2]]], dtype = "uint16")#candidate|3184|(7, 11, 12)|const|uint16
const_3185 = relay.const([[[-2,9,-9,9,-3,-6,-5,-4,-2,3,-3,2],[-9,4,5,7,7,5,6,1,-4,-2,4,3],[-10,-9,-5,-5,-4,-10,-6,-8,-3,-10,6,-2],[10,1,-7,-9,1,10,-9,-2,3,-3,9,4],[4,-2,-5,3,6,1,-8,-2,8,-7,-6,-1],[-1,8,8,1,-5,-2,-7,8,-9,-9,-9,10],[-7,-6,5,2,4,3,3,3,7,2,10,-7],[1,8,1,7,4,-10,1,-5,5,6,-2,-8],[4,-2,2,-5,-9,2,2,9,3,5,3,-10],[9,-6,4,-1,6,5,5,10,3,-6,-9,3],[4,9,-9,6,4,-9,8,9,3,1,-3,6]],[[2,3,6,-5,-3,10,3,9,7,-8,-8,-8],[-2,-3,-1,1,10,5,1,8,4,7,3,-7],[-6,5,3,-6,-6,9,7,-9,3,5,-3,7],[3,5,2,8,6,-1,-9,-3,8,-2,-2,-6],[-6,1,5,9,4,8,5,-1,1,1,2,7],[-5,-7,-2,4,-5,7,2,10,9,9,5,-8],[-3,8,-2,5,4,6,6,-1,-4,-1,-6,2],[10,-1,5,-1,8,-4,-2,2,5,-1,-10,4],[-3,-2,-7,-6,10,-1,-9,-3,-2,1,-8,-2],[-3,-5,-7,10,-3,1,-9,-8,6,-1,-4,6],[-1,-9,-10,-3,-4,-7,-5,-1,9,10,-10,-6]],[[8,5,-4,-7,8,6,-7,-2,-5,-3,7,-1],[-7,6,-1,-8,-2,10,-4,2,3,9,-5,2],[-3,2,-1,6,-6,-9,-7,-6,10,6,3,3],[6,-5,-6,-10,-3,8,-5,-4,-9,10,10,6],[1,1,9,-7,9,-5,10,3,-6,-7,-5,4],[4,9,-9,3,6,4,-9,2,5,-2,-1,-8],[5,-1,-8,4,8,-7,8,-9,-5,4,1,3],[-3,1,-1,-2,6,-5,-8,-6,4,-5,5,-1],[-4,6,10,5,4,7,7,-2,-3,-5,7,9],[-7,4,-10,-2,-7,-4,-8,10,5,9,-9,4],[7,-4,3,4,2,1,2,-8,4,7,1,5]],[[-7,9,-5,-7,-2,-7,-6,4,8,10,3,-8],[-2,-8,-4,-10,-7,-6,-3,7,6,2,-2,2],[4,-1,-1,-3,-5,5,-5,-10,-7,-7,1,-6],[5,-1,-6,8,-6,-8,-9,10,-1,-3,2,-1],[10,-7,-1,8,-3,-4,3,-9,-2,-5,-8,-6],[10,7,3,-8,5,3,-10,-3,-1,10,-8,2],[7,-2,-2,8,-8,-1,5,3,5,-8,-7,6],[6,2,6,-8,1,10,8,5,-2,-6,-6,-7],[-5,5,-5,-9,-8,7,-5,9,-4,-1,-6,10],[-1,-5,5,7,8,-3,-5,-4,-3,1,5,-4],[-10,3,9,3,2,-8,-1,-9,9,10,2,8]],[[-4,-3,-6,1,-2,-1,-10,5,-4,8,-8,-6],[9,-10,9,-8,5,-5,-10,7,1,-7,6,-10],[2,8,7,6,10,-8,-2,-6,-10,7,7,4],[-4,8,10,10,8,-4,2,2,6,2,6,4],[-1,6,7,-8,10,2,-6,1,-2,10,5,-7],[1,8,9,5,-2,-10,10,1,3,-9,-4,4],[7,2,-5,-2,8,4,-1,1,-10,2,8,10],[-7,-10,-1,-6,8,10,-7,-8,2,6,10,7],[-6,-10,4,-6,2,1,2,-2,7,2,2,-1],[-3,-8,-4,-3,-3,7,-4,8,10,-9,-7,1],[-1,-8,-6,-9,-5,1,1,-10,-6,4,9,-6]],[[-1,1,4,-2,6,1,-8,-10,7,-2,3,5],[-6,-9,-10,4,-10,7,-7,-2,-10,5,-3,-1],[-6,1,5,-9,2,8,3,-3,-6,-8,1,8],[-10,9,9,6,-5,5,2,10,1,7,-9,8],[1,10,3,3,-2,1,-4,-7,5,-6,-5,2],[-2,2,9,7,-4,-4,-5,-4,-9,8,-1,2],[-6,-4,5,-7,-7,8,-6,8,4,-9,-8,7],[8,-3,-2,-7,-3,7,9,5,-10,-3,-10,8],[-4,-4,-10,2,-8,-8,-9,-9,6,-8,-10,10],[-6,8,-4,3,-1,-10,9,10,-6,10,-3,-8],[4,3,-9,-4,4,2,-8,5,3,2,-9,1]],[[-1,3,-9,3,6,-7,-9,-7,-5,-2,-5,2],[-4,10,-9,1,2,-3,4,4,4,-3,4,-5],[-3,2,3,4,8,-1,4,6,7,-9,-7,-10],[-6,-5,7,1,-6,7,-5,-7,4,-2,1,6],[-7,-8,10,9,-3,8,2,-9,2,-10,-9,-2],[6,-3,9,-4,6,5,1,2,8,-5,9,1],[-2,-8,9,-3,-3,-3,-8,3,10,-10,1,7],[1,-2,-10,2,3,2,-10,-6,-5,-7,5,-7],[-7,-5,8,-10,6,9,-2,-7,-1,-8,5,-3],[-2,-3,10,1,6,6,10,3,5,-9,1,3],[-4,-2,-4,1,-7,4,-6,-3,-2,8,-2,-5]]], dtype = "uint16")#candidate|3185|(7, 11, 12)|const|uint16
bop_3186 = relay.bitwise_xor(const_3184.astype('uint16'), relay.reshape(const_3185.astype('uint16'), relay.shape_of(const_3184))) # shape=(7, 11, 12)
uop_3202 = relay.sqrt(bop_3186.astype('float32')) # shape=(7, 11, 12)
output = relay.Tuple([uop_3202,])
output2 = relay.Tuple([uop_3202,])
func_3214 = relay.Function([], output)
mod['func_3214'] = func_3214
mod = relay.transform.InferType()(mod)
mutated_mod['func_3214'] = func_3214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3214_call = mutated_mod.get_global_var('func_3214')
call_3215 = func_3214_call()
output = call_3215
func_3216 = relay.Function([], output)
mutated_mod['func_3216'] = func_3216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_738_call = mod.get_global_var('func_738')
func_739_call = mutated_mod.get_global_var('func_739')
call_3224 = relay.TupleGetItem(func_738_call(), 0)
call_3225 = relay.TupleGetItem(func_739_call(), 0)
output = call_3224
output2 = call_3225
func_3234 = relay.Function([], output)
mod['func_3234'] = func_3234
mod = relay.transform.InferType()(mod)
mutated_mod['func_3234'] = func_3234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3234_call = mutated_mod.get_global_var('func_3234')
call_3235 = func_3234_call()
output = call_3235
func_3236 = relay.Function([], output)
mutated_mod['func_3236'] = func_3236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1488_call = mod.get_global_var('func_1488')
func_1489_call = mutated_mod.get_global_var('func_1489')
call_3276 = func_1488_call()
call_3277 = func_1488_call()
output = relay.Tuple([call_3276,])
output2 = relay.Tuple([call_3277,])
func_3305 = relay.Function([], output)
mod['func_3305'] = func_3305
mod = relay.transform.InferType()(mod)
mutated_mod['func_3305'] = func_3305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3305_call = mutated_mod.get_global_var('func_3305')
call_3306 = func_3305_call()
output = call_3306
func_3307 = relay.Function([], output)
mutated_mod['func_3307'] = func_3307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1902_call = mod.get_global_var('func_1902')
func_1903_call = mutated_mod.get_global_var('func_1903')
call_3329 = relay.TupleGetItem(func_1902_call(), 0)
call_3330 = relay.TupleGetItem(func_1903_call(), 0)
output = relay.Tuple([call_3329,])
output2 = relay.Tuple([call_3330,])
func_3337 = relay.Function([], output)
mod['func_3337'] = func_3337
mod = relay.transform.InferType()(mod)
mutated_mod['func_3337'] = func_3337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3337_call = mutated_mod.get_global_var('func_3337')
call_3338 = func_3337_call()
output = call_3338
func_3339 = relay.Function([], output)
mutated_mod['func_3339'] = func_3339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_511_call = mod.get_global_var('func_511')
func_513_call = mutated_mod.get_global_var('func_513')
call_3437 = func_511_call()
call_3438 = func_511_call()
func_1674_call = mod.get_global_var('func_1674')
func_1678_call = mutated_mod.get_global_var('func_1678')
const_3440 = relay.const([-9.263626,3.500563,-3.647360,-7.198703,-1.056906,4.064427,5.849515,-0.896794,-8.233793,2.750688,2.229288,-3.551028,-2.839535,-9.484685,8.514486,-6.662091,0.086279,-4.235242,0.676313,4.414378,5.673142,1.251638,-1.177926,6.435226,-3.060348,3.343307,5.671439,9.931123,-7.111797,7.265433,9.731757,-5.810060,-9.263159,5.822168,5.176076,0.840685,6.480339,4.650173,-3.901954,-7.444332,6.214245,6.707067,0.832390,7.249265,-4.958273,2.536656,-1.524071,-8.313340,7.812973,6.375915,-0.625822,8.506255,1.208888,3.959245,-3.244602,-7.862329,7.291278,-1.039535,6.970118,-7.140470,-5.995047,2.874274,7.676131,2.720636,9.906086,3.823424,-4.425228,6.454599,0.484444,8.301847], dtype = "float32")#candidate|3440|(70,)|const|float32
const_3441 = relay.const([4.729603,5.806969,-4.645382,-6.320828,-8.265153,5.455499,1.445146,-8.398632,2.073009,-1.046127,-6.635702,8.806863,-6.472279,9.491203,7.340959,-7.054834,-4.330444,5.884992,-2.897953,-3.919372,8.525807,-8.817463,-4.404837,-5.584187,3.663999,2.474738,-3.734104,4.715954,-7.802790,-0.892043,-6.279352,-5.863193,4.320993,8.287338,-3.629203,-6.922817,-5.153318,-3.848582,4.611447,-8.357680,-1.857516,-2.756186,8.925190,2.404645,1.723031,9.723122,7.474691,-6.316737,3.194407,-7.233888,4.335421,7.738909,5.778860,0.033848,-0.613138,6.502068,4.987810,-9.497941,-2.966440,-6.098411,4.672960,9.194443,-5.735526,1.694023,-7.538545,1.156648,-6.155624,4.768190,-3.988342,-4.176776,-6.868588,2.395989,-8.648122,-0.352209,-9.866336,-3.103544,-9.560100,-7.424231,3.824741,-7.736398,1.811493,-7.633975,0.443314,6.519544,-7.638965,-8.485649,-4.374183,-6.546984,8.873289,7.390224,-1.399325,-1.214030,2.042264,9.248997,-6.282524,-1.834863,0.302476,-4.520535,-2.324045,-8.014131,0.826890,-9.077844,8.968459,-7.397577,3.012708,-8.882853,0.357927,8.378778,7.498200,-6.601418,-6.501962,1.110142,9.844865,-6.505341,8.406872,-6.456507,-6.587081,-0.495258,4.558670,-7.698956,-1.819556,-3.273062,2.964086,2.070350,-3.048367,7.365710,-7.539925,-7.334134,-6.541826,-0.897337,-7.371682,-6.025077,0.672577,-2.948357,-1.959765,5.578994,7.516881,-3.281800,8.753565,4.344330,0.165420,3.736972,4.177584,9.445412,-0.121596,3.886474,-0.360304,0.513890,2.726516,4.603838,4.086664,-3.107727,-6.535825,0.972621,-2.988851,-2.290039,5.886867,-1.373327,2.404054,-2.472937,7.064726,-6.953287,-5.413057,7.565917,0.839806,9.823740,0.488941,5.612236,-8.358694,-8.260485,9.023693,3.197255,-2.097424,9.687662,5.598423,1.111826,-1.939334,8.895852,-4.932792,-4.873529,4.844655,-7.818050,4.666696,-1.647635,-8.785282,5.342285,7.705881,0.558270,-3.661787,-0.207335,-5.967316,-2.579071,0.372544,0.094877,-0.948722,-8.400260,9.594781,-9.617337,-5.935679,1.249394,2.271048,5.878011,4.765024,-9.368220,6.499273,9.692649,8.670847,-4.216424,7.322663,-9.588824,9.931793,3.826799,7.619576,-5.578719,2.768395,-7.603949,-4.676917,0.399248,-1.396360,9.039997,-4.156408,-2.684390,-5.710830,5.331293,-3.214443,4.167928,-8.821479,5.443142,-9.201161,8.793765,1.064149,4.274742,4.882767,2.478899,-9.398159,-9.800054,1.511436,-2.265732,2.496962,-2.602277,4.278837,-5.520340,-2.060112,1.581603,1.760047,-1.409085,3.844028,-0.846806,1.799962,-7.487248,-4.094554,-8.428325,9.353311,2.676974,-3.679726,9.252157,3.550269,5.165900,4.806664,-9.994660,-7.955741,1.621581,-3.286849,-5.596902,8.218866,-3.733545,8.824502,4.858428,2.080988,-5.845769,-1.638279,-7.319713,5.137934,-1.162615,-8.638484,5.680548,2.302079,-3.944700,-1.134923,5.521780,-3.880411,6.331729,8.943111,-4.544320,3.580999,-4.245742,-9.387711,9.736441,0.958342,-0.667080,-4.777521,-9.740803,-8.962050,-0.983442,8.761163,-7.602197,9.318138,-7.551878,9.321258,8.505007,8.292249,-6.679373,-7.679022,4.140506,5.789419,-4.049264,1.775799,-7.119279,3.411472,-9.076029,-0.634125,-2.560437,-7.054635,-5.510901,-5.577000,-8.152281,-7.745146,2.353989,-7.516858,-4.359393,6.116798,6.724774,3.930286,-4.053376,-3.343593,0.725070,-4.912023,-1.102225,-9.764675,-4.581676,5.196893,-6.732351,5.608528,-3.179276,-0.403621,-6.110505,8.270842,-4.090157,0.095802,-1.346378,6.284956,-7.254632,7.896737,-7.799150,-2.651411,-7.875902,6.184187,5.360525,6.016983,-8.112789,-7.012268,6.637589,0.861603,-8.251744,-2.843116,-6.255627,-6.367773,2.584628,-1.105079,-3.098091,-5.874250,-0.774940,1.189830,2.180472,6.293742,7.827533,-6.173004,-3.860215,-6.063548,-9.604726,4.077078,3.588986,3.501554,3.940906,-8.454874,-6.863430,6.912252,7.660368,-2.877606,2.244372,-2.365499,8.843504,4.965591,-4.653361,-2.815538,-3.564839,-2.881657,-4.130224,6.513126,3.922958,7.918372,-9.044397,-6.393901,3.007519,-4.311272,-2.121890,5.973057,4.196967,2.841044,5.345512,-1.655689,5.279604,2.763020,6.814435,-5.888515,-4.613474,-8.275471,-0.764129,-5.971125,-3.782994,-0.598153,-1.983910,-1.335186,-6.723698,2.351657,-7.498132,1.642554,-0.125072,1.147218,9.883266,-0.939175,4.204186,0.118235,1.678214,1.977049,-3.578199,5.767742,-9.705583,1.435447,7.586244,-9.746016,-4.931650,-6.668396,-2.876858,-9.354093,8.025206,2.771142,-4.250505,-3.125795,5.566784,6.619050,4.660132,-0.612565,-4.271129,-4.632743,-0.541102,1.220238,-3.179611,-6.508952,2.493878,2.550355,5.495060,9.518515,0.041792,-2.566462,-4.503942,-5.917705,-4.369079,8.075320,-0.578841,-2.217757,-2.197611,-0.964538,0.431819,8.242624,2.172840,6.778588,9.087781,-2.854964,-6.738733,8.703256,-9.067142,-0.680112,-1.303524,-2.555872,1.727983,-0.096365,-9.432669,1.413608,3.156220,6.423231,5.740072,2.246223,0.601807,2.927318,-0.257147,-6.640306,-3.465362,6.433126,-2.494880], dtype = "float32")#candidate|3441|(490,)|const|float32
call_3439 = relay.TupleGetItem(func_1674_call(relay.reshape(const_3440.astype('float32'), [14, 5, 1]), relay.reshape(const_3441.astype('float32'), [14, 5, 7]), ), 1)
call_3442 = relay.TupleGetItem(func_1678_call(relay.reshape(const_3440.astype('float32'), [14, 5, 1]), relay.reshape(const_3441.astype('float32'), [14, 5, 7]), ), 1)
bop_3456 = relay.divide(call_3437.astype('float32'), call_3439.astype('float32')) # shape=(7, 8, 9)
bop_3459 = relay.divide(call_3438.astype('float32'), call_3442.astype('float32')) # shape=(7, 8, 9)
output = relay.Tuple([const_3440,const_3441,bop_3456,])
output2 = relay.Tuple([const_3440,const_3441,bop_3459,])
func_3463 = relay.Function([], output)
mod['func_3463'] = func_3463
mod = relay.transform.InferType()(mod)
mutated_mod['func_3463'] = func_3463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3463_call = mutated_mod.get_global_var('func_3463')
call_3464 = func_3463_call()
output = call_3464
func_3465 = relay.Function([], output)
mutated_mod['func_3465'] = func_3465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1806_call = mod.get_global_var('func_1806')
func_1808_call = mutated_mod.get_global_var('func_1808')
call_3485 = func_1806_call()
call_3486 = func_1806_call()
output = call_3485
output2 = call_3486
func_3492 = relay.Function([], output)
mod['func_3492'] = func_3492
mod = relay.transform.InferType()(mod)
mutated_mod['func_3492'] = func_3492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3492_call = mutated_mod.get_global_var('func_3492')
call_3493 = func_3492_call()
output = call_3493
func_3494 = relay.Function([], output)
mutated_mod['func_3494'] = func_3494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3149_call = mod.get_global_var('func_3149')
func_3151_call = mutated_mod.get_global_var('func_3151')
call_3498 = relay.TupleGetItem(func_3149_call(), 0)
call_3499 = relay.TupleGetItem(func_3151_call(), 0)
func_511_call = mod.get_global_var('func_511')
func_513_call = mutated_mod.get_global_var('func_513')
call_3504 = func_511_call()
call_3505 = func_511_call()
output = relay.Tuple([call_3498,call_3504,])
output2 = relay.Tuple([call_3499,call_3505,])
func_3529 = relay.Function([], output)
mod['func_3529'] = func_3529
mod = relay.transform.InferType()(mod)
mutated_mod['func_3529'] = func_3529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3529_call = mutated_mod.get_global_var('func_3529')
call_3530 = func_3529_call()
output = call_3530
func_3531 = relay.Function([], output)
mutated_mod['func_3531'] = func_3531
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3612 = relay.var("var_3612", dtype = "float64", shape = (15, 2, 7))#candidate|3612|(15, 2, 7)|var|float64
uop_3613 = relay.cosh(var_3612.astype('float64')) # shape=(15, 2, 7)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_3616 = relay.TupleGetItem(func_3172_call(), 0)
call_3617 = relay.TupleGetItem(func_3174_call(), 0)
func_2897_call = mod.get_global_var('func_2897')
func_2900_call = mutated_mod.get_global_var('func_2900')
var_3622 = relay.var("var_3622", dtype = "float64", shape = (60, 12))#candidate|3622|(60, 12)|var|float64
call_3621 = relay.TupleGetItem(func_2897_call(relay.reshape(var_3622.astype('float64'), [720,])), 0)
call_3623 = relay.TupleGetItem(func_2900_call(relay.reshape(var_3622.astype('float64'), [720,])), 0)
output = relay.Tuple([uop_3613,call_3616,call_3621,var_3622,])
output2 = relay.Tuple([uop_3613,call_3617,call_3623,var_3622,])
func_3628 = relay.Function([var_3612,var_3622,], output)
mod['func_3628'] = func_3628
mod = relay.transform.InferType()(mod)
var_3629 = relay.var("var_3629", dtype = "float64", shape = (15, 2, 7))#candidate|3629|(15, 2, 7)|var|float64
var_3630 = relay.var("var_3630", dtype = "float64", shape = (60, 12))#candidate|3630|(60, 12)|var|float64
output = func_3628(var_3629,var_3630,)
func_3631 = relay.Function([var_3629,var_3630,], output)
mutated_mod['func_3631'] = func_3631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1862_call = mod.get_global_var('func_1862')
func_1864_call = mutated_mod.get_global_var('func_1864')
call_3639 = relay.TupleGetItem(func_1862_call(), 1)
call_3640 = relay.TupleGetItem(func_1864_call(), 1)
output = call_3639
output2 = call_3640
func_3649 = relay.Function([], output)
mod['func_3649'] = func_3649
mod = relay.transform.InferType()(mod)
mutated_mod['func_3649'] = func_3649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3649_call = mutated_mod.get_global_var('func_3649')
call_3650 = func_3649_call()
output = call_3650
func_3651 = relay.Function([], output)
mutated_mod['func_3651'] = func_3651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1862_call = mod.get_global_var('func_1862')
func_1864_call = mutated_mod.get_global_var('func_1864')
call_3727 = relay.TupleGetItem(func_1862_call(), 1)
call_3728 = relay.TupleGetItem(func_1864_call(), 1)
const_3729 = relay.const([[[5.177449,-8.319643,-3.463363,-6.120763,3.813045,0.496242,0.415251,8.325194,-4.680476],[-1.311067,-8.177954,-6.368532,1.926435,9.643634,4.003404,7.660144,4.881200,5.420112],[-4.700324,2.263055,2.530947,-9.858443,-2.243595,-7.088917,-8.791179,5.261328,-1.425487],[-1.007612,5.347541,4.116845,-1.420150,7.851830,-4.235251,9.938614,-8.823470,8.534907],[2.815690,2.273950,7.613246,-2.832265,-2.390421,-5.300807,-8.077471,-9.393222,-8.683057],[-7.978008,-0.021245,3.794048,-2.546152,0.385189,6.898731,-4.045717,7.379973,-4.459419],[4.753886,-4.402412,-2.547313,-7.362127,5.908320,-3.106020,-9.583381,-2.037904,8.846750],[-9.927243,-2.482579,-7.860304,-9.764670,-8.034774,-9.530725,-7.614054,-3.918187,1.238542]],[[4.425017,5.327387,-0.681838,-2.293536,-5.697220,2.262733,-9.214360,0.812547,-8.408328],[5.473566,-0.719195,-1.768077,-9.066543,-6.952935,8.741807,-6.914351,-9.752469,-5.931138],[6.140885,5.557977,7.392179,4.910674,-0.317732,2.636396,5.996532,9.828644,-7.814453],[-3.009097,-0.562670,3.020136,8.008168,-6.000158,6.011374,-2.799484,-8.423407,-5.123381],[7.825109,1.416805,-0.125189,-3.310067,7.114707,4.611035,9.051404,3.614834,9.392118],[1.904327,-6.238922,-8.609401,-6.416618,-6.029311,-0.853537,5.219528,2.809653,-7.991483],[1.936940,7.327613,-0.068196,-8.127077,-9.323965,-2.414277,4.896024,-7.914435,4.556479],[5.372503,-9.074931,-6.047238,9.999032,-3.690113,1.079687,-7.924360,8.534420,2.706744]],[[8.171014,2.283699,4.499904,4.341769,7.461855,-1.756911,-2.469695,0.048822,-5.151283],[6.422446,0.330995,-2.684381,-7.910390,6.389834,-9.363401,-0.014817,-8.891100,9.816551],[0.448023,-6.413441,3.784429,3.488863,9.462752,-6.598584,5.001461,8.432602,1.503587],[9.626165,-7.936480,5.686459,4.002404,-8.848816,2.295197,-7.459964,-9.251803,9.423160],[5.627102,1.806692,6.031723,-7.404654,-1.907365,8.540079,8.773310,6.492841,5.978438],[-8.573042,-8.441086,6.332550,8.252050,-1.201803,-8.667561,7.257059,1.114881,-8.391555],[-1.172522,7.986263,-8.608392,-9.997074,5.918959,-8.636855,-8.679429,1.165955,1.576198],[-8.883559,-1.340872,9.697793,-9.917943,7.406125,4.493668,7.946335,-1.184521,-7.059822]],[[6.627049,1.230227,9.226607,-5.122364,-4.592724,-5.429278,-6.412721,-9.088634,-8.840405],[8.427716,-8.216592,-1.320466,5.233604,6.668607,-0.249376,-5.914198,-6.889343,-3.940056],[3.700562,0.132455,-8.140775,-6.083810,-7.902753,-8.438729,-9.407290,-1.616825,-3.282858],[-3.433155,-9.566508,1.013669,-9.129958,-8.750193,8.315827,-1.243020,8.955484,2.582697],[5.775700,-8.430844,-4.908952,-1.980749,3.842673,-4.649526,6.382103,5.607569,-9.640704],[-0.765530,-0.712657,-5.370167,4.160167,0.466842,-1.280378,1.098453,-1.952250,-4.348343],[-7.884361,4.257936,6.387430,6.654398,-1.396235,-1.702033,1.111159,8.693634,8.765985],[-7.060885,-3.691204,-2.917761,-0.772219,2.417701,4.152327,4.810141,-4.716985,0.328764]],[[-9.096599,5.199863,2.913579,-4.548090,-6.729615,7.745226,2.672327,4.597428,7.472896],[-2.304990,5.084993,-2.611991,6.035889,-3.126365,-8.561730,7.204985,-9.113985,6.217363],[-5.727749,-8.616618,-2.882675,5.159601,9.232696,1.513749,-9.677648,-9.302127,6.008578],[-4.873136,6.762748,8.031084,8.522266,-0.019278,8.298475,5.151430,6.863398,-6.185771],[1.015339,8.980784,-1.517041,1.997547,0.465478,-5.107521,-3.486320,6.821098,1.989855],[6.441167,-4.623093,-5.780390,-1.196941,6.914173,-3.117468,7.027960,5.586984,-7.688481],[8.182533,-3.500644,-0.564304,-8.220824,-3.948827,-1.779936,-2.749996,-9.849123,8.249831],[-0.277851,-3.807313,-7.991196,7.831464,5.509862,-0.345235,0.081063,1.235291,-2.872441]],[[-6.583016,9.304386,3.559650,6.871631,7.157834,-7.060433,-3.371714,-4.078331,-4.585043],[9.480706,-3.094979,9.686354,4.681461,2.347762,-3.552586,-1.851448,-2.727581,8.080213],[5.155766,7.664536,-2.905382,2.333935,-2.104099,-5.576519,-8.270674,-6.557014,-9.041697],[-5.418228,-6.962322,-1.589059,7.233209,-2.454208,-5.677393,1.484155,-2.473722,5.625849],[-2.244964,0.810631,-1.184218,-6.038639,-0.764720,-9.357904,-3.324618,-3.701281,-1.259747],[7.320658,3.845309,8.849742,-5.714280,8.981556,0.716425,2.787563,6.653776,-9.962993],[-8.099684,5.827380,4.587771,1.014419,-5.811801,8.809560,2.299998,-1.505469,-1.925590],[-3.255074,5.003147,3.514023,-2.371233,-1.855170,0.066035,-6.397089,1.779319,-9.752512]],[[5.314175,-2.418306,8.545754,-9.470821,0.879602,5.793044,-0.484591,-5.708916,9.193023],[-2.555311,-7.828003,-8.530158,1.430044,-2.115964,-0.763847,7.292653,-3.533952,1.792768],[2.310210,-4.600134,-8.917032,-1.344130,-9.854535,-2.032293,-3.921506,0.451106,-4.064785],[5.863130,-1.437364,-8.657435,-1.435505,-2.990210,-6.210778,2.061685,0.991214,-7.561937],[7.217877,-2.112664,6.456562,-1.418523,9.585416,-8.727410,2.126922,4.085959,4.134524],[-8.111020,-4.872708,4.485058,-7.350011,-6.407320,-5.164859,1.723020,-3.186066,2.643335],[3.262880,9.752058,-4.040726,-0.980092,7.699726,1.271834,6.035156,8.125723,1.543069],[-3.250976,8.071150,7.918726,9.362022,9.100400,7.789040,6.471647,-7.376401,2.790753]],[[5.477102,-1.561502,-5.774320,3.586197,6.371232,5.291318,4.325969,-9.567755,-2.111836],[4.749922,0.827186,8.497334,0.600621,2.391084,-4.988496,-5.145907,-0.710534,-8.817377],[9.366621,-9.125392,-6.235913,0.025515,-0.259511,-6.112611,3.894011,-8.441502,6.702349],[6.998205,0.892460,-9.063933,-6.376843,8.090557,-5.568479,3.257844,5.745233,-0.256678],[9.778550,-9.743763,-3.413496,-2.673200,-9.776375,-2.169373,4.347413,-5.083707,-4.999709],[-0.790752,-3.908328,1.248746,9.196306,-1.047049,-9.186526,6.079617,-8.274350,1.233526],[-4.775750,-5.440203,4.840626,-7.652980,7.802384,6.040953,-2.210940,-4.000831,5.206495],[9.449286,-5.487936,0.602476,-3.399355,-8.316944,-1.743327,3.185307,4.037446,3.724186]],[[-4.810969,8.028951,5.447966,7.458975,-7.126342,-8.533917,4.421726,8.155787,0.677406],[6.650899,0.655483,-5.544274,0.985241,-5.378551,6.634105,5.085101,-0.240606,1.598471],[0.378352,1.248900,-5.960916,2.309378,3.991129,4.505243,-6.448790,-2.850861,-0.536399],[4.704639,4.052090,9.304584,-9.667826,-7.720417,0.211971,-5.699305,7.644907,1.909045],[9.678197,2.105442,2.886839,0.786754,8.856709,2.088675,-1.252872,-5.866318,-1.349916],[-6.412488,-1.167375,8.168436,3.199792,2.267798,8.588777,-8.396969,6.587621,2.782535],[0.644405,-5.279831,5.133076,-3.333097,0.833455,2.501493,-8.076154,-0.318170,-8.887489],[1.159744,0.344880,-2.818685,6.230312,7.378401,2.866119,2.373377,3.667983,7.321651]],[[8.863780,-6.298445,-0.640117,-1.917823,0.338206,-2.547305,4.693048,5.027987,-2.780228],[1.473021,6.224284,-2.941895,-5.450913,0.976062,-1.282830,-8.393232,-1.346069,-6.068929],[-7.343784,-4.752486,3.661914,0.227291,-1.020944,2.935167,8.998655,-9.266696,8.413333],[5.068211,-5.978383,5.062038,6.316785,-1.776565,-4.017471,5.604927,1.980509,-7.663653],[-5.636141,5.415091,2.558306,9.343570,-2.811966,0.180194,-2.229039,0.258732,8.134261],[0.879362,-9.791565,-2.490397,-7.187195,2.964414,3.457180,-8.845992,4.700998,-3.540795],[-8.117960,6.346927,3.234898,-4.000481,5.456044,-1.082617,-3.868362,-2.070853,0.660872],[6.938564,-8.120745,-6.749886,4.543087,2.879583,-4.066834,8.575465,7.562655,6.951557]],[[6.316468,-6.574831,7.978893,6.271745,8.539237,-7.310381,-0.625202,-5.263234,-2.961782],[7.291252,-6.855703,3.736254,-3.451653,9.940291,1.847983,0.240974,8.477247,-5.615071],[-2.887616,-1.661121,8.099726,0.070068,6.756925,-7.752170,-4.898190,4.743164,-4.960617],[9.443613,4.663295,-0.530741,-2.727319,2.193366,1.470753,-2.354436,9.117763,5.659823],[-6.512940,-5.722673,1.733840,7.659510,-6.229851,-3.153505,6.750176,-4.316405,-6.876100],[-7.533946,-8.323119,-4.521694,7.614286,2.640064,-5.359523,7.834598,2.906802,-8.272332],[-5.778008,-7.955734,-4.504522,9.041769,5.319475,-2.012051,-0.978174,-6.104018,-0.831751],[-6.744445,7.585149,-4.217289,9.327840,-2.082313,3.404126,4.352559,4.821722,5.494734]],[[-3.825246,2.863375,-3.956748,0.114583,-5.642547,2.201098,8.058584,-9.132380,5.752005],[-6.512910,-5.172304,-5.047357,4.610872,6.637792,7.146166,-8.221464,1.468364,2.987896],[7.245465,-1.468366,-0.475085,-2.047341,-3.422688,3.986935,1.156542,-5.724894,-1.494498],[9.149936,-4.777583,-0.057722,3.386340,6.852422,1.664277,-6.386067,6.810335,-2.063299],[-4.309673,4.552538,-9.070939,5.575446,-9.398312,4.271720,-1.378879,-4.657190,-1.362362],[-8.930696,5.726292,-1.034807,9.762652,8.551913,-4.094118,-8.698474,-4.160981,0.467250],[-6.761459,-0.411492,-8.111817,-2.228011,1.586460,7.168096,8.408396,0.416643,1.834192],[3.699525,9.132040,8.765942,4.517440,-3.959085,-1.094774,-2.932993,-4.244455,6.984263]]], dtype = "float32")#candidate|3729|(12, 8, 9)|const|float32
bop_3730 = relay.left_shift(call_3727.astype('uint32'), const_3729.astype('uint32')) # shape=(12, 8, 9)
bop_3733 = relay.left_shift(call_3728.astype('uint32'), const_3729.astype('uint32')) # shape=(12, 8, 9)
output = relay.Tuple([bop_3730,])
output2 = relay.Tuple([bop_3733,])
func_3745 = relay.Function([], output)
mod['func_3745'] = func_3745
mod = relay.transform.InferType()(mod)
output = func_3745()
func_3746 = relay.Function([], output)
mutated_mod['func_3746'] = func_3746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_3749 = relay.TupleGetItem(func_1140_call(), 0)
call_3750 = relay.TupleGetItem(func_1142_call(), 0)
func_1792_call = mod.get_global_var('func_1792')
func_1794_call = mutated_mod.get_global_var('func_1794')
const_3752 = relay.const([8.645734,0.854327,-0.755799,2.116037,8.001423,2.287115,-0.589620,-3.530383,-3.406663,1.357256,-7.926910,7.422796,-2.148049,1.222010,1.730397,5.444501,-0.499692,6.943134,-3.434058,-3.143631,-0.744730,-8.044391,1.082813,-4.531943,-3.641093,-0.158817,-0.444925,9.951045,-2.367121,6.097732,8.641737,2.772872,5.919294,-7.205207,4.153064,7.191731,-2.616389,-6.610267,4.050432,0.867393,-7.158811,-6.056772,2.512051,4.566520,-8.410701,-2.248220,4.208015,3.654921,-2.191279,-0.670405,8.083815,8.542179,5.467495,2.533693,8.191500,4.026439,2.861024,-9.707747,6.868187,-0.080395,-4.648315,0.826523,-6.593167,-8.348834,7.080574,-5.545832,6.720899,-6.411802,0.897626,9.261746,6.847694,0.202431,-4.530760,1.281751,0.132589,-9.986070,-9.004417,-3.329759,-3.545424,1.921897,6.896816,-9.781216,-1.349609,-1.935140,8.398041,-9.932026,-5.117544,9.176156,1.089790,-3.665491,-2.176318,7.118571,-9.312876,-9.588361,-2.385592,-7.012369,3.418229,-0.721968,-8.988997,-3.101979,-1.727030,-0.331664,-5.537750,-2.389708,-8.855180,-7.227107,4.303226,-5.527099,7.704192,-1.934893,-5.989328,-7.434360,-9.530257,5.759517,9.231364,-0.401671,-6.397346,-9.289462,-3.532825,3.618947,6.615143,5.072591,4.562904,-0.702104,-2.815908,-6.793383,-3.283946,7.432314,-6.605576,2.375490,-4.465734,8.042736,-9.306948,3.116480,-5.016269,2.555750,-1.802530,-1.347301,-2.282349,4.480259,-6.886234,-7.773332,-4.006039,3.335195,-1.760526,-8.727982,-6.063534,-9.591461,0.149680,6.132644,-6.856778,5.766916,5.968047,-0.479965,-2.719402,2.749192,0.527669,7.627545,7.094142,-8.861197,0.484504,-8.912562,9.488366,-8.225625,-1.409254,-4.289221,2.825416,9.024188,-6.833877,-7.506870,3.824176,2.953586,4.000359,-8.896116,7.610365,2.689951,1.153247,-7.323489,-7.024897,7.411875,-8.284409,7.987922,9.669541,-9.667522,-3.370183,6.545576,-6.438475,-8.832846,2.284714,-3.988972,-9.364655,-9.839221,2.559107,-6.041673,7.245792,-1.061608,8.204891,3.811207,8.936068,-1.140739,6.452167,1.273329,-3.162712,0.164197,9.873600,-9.941903,1.175666,0.366549,9.131636,-8.243438,-6.088647,-2.345733,-9.280931,-0.247721,-7.329421,3.071777,-2.158080,8.106492,8.944529,9.657384,4.636941,-3.490063,-9.217831,2.943375,7.214371,-0.891976,2.487717,9.095817,8.679704,7.468039,5.151417,1.185390,9.680861,-4.001665,0.725750,9.268118,-3.228122,-4.043967,-7.852832,-5.655706,0.446134,6.275420,-3.254915,9.504141,-4.266608,0.563919,8.349835,-3.134260,4.489649,5.346541,-4.109471,1.431063,-9.824347,1.752396,-5.744753,-4.945254,-1.071781,-3.289746,3.642008,-1.562364,-1.839737,7.261862,-6.460597,-3.132637,-9.703585,9.167801,7.533459,0.179576,-0.826539,-8.423575,8.470441,-2.113822,-4.601810,-1.534180,-4.881165,6.990029,-4.493607,0.295137,-9.035538,-6.352316,0.639639,4.973978,5.750947,9.682966,8.545813,-7.717098,-0.934464,3.961565,7.949421,-0.663869,-7.431919,-0.617506,-8.884743,-7.473078,6.026614,-6.210673,-8.623005,8.945305,-6.041313,1.075428,-7.030883,-2.713178,-2.313773,0.822497,9.090415,-6.814962,-2.228955,-1.371795,-0.180458,4.915533,-8.796223,-5.891799,-4.058560,-8.450264,-8.760980,-0.749678,7.722883,-2.071932,-7.786740,2.567540,9.391063,-0.445843,-6.160448,2.329348,7.607413,-0.374217,-2.493953,-0.499622,2.583313,7.229138,-1.221767,-7.490591,1.329157,9.019053,7.540881,8.177590,-8.563099,-2.892796,8.328854,9.425996,-9.401745,-6.594804,8.225784,0.530851,6.142320,-6.928821,6.751278,7.344948,4.469622,-5.042866,0.843100,-3.673892,1.569211,-7.333614,-4.274523,2.069074,8.210309,2.617598,-8.988363,7.062080,0.670855,4.504860,4.656289,6.588370,-6.525949,1.173885,-0.820277,3.564376,-4.201941,-0.539826,-0.269412,5.412827,8.414186,-6.844904,-9.443386,2.491129,3.660439,-8.617597,8.557034,-4.565607,2.696249,0.557906,0.486056,-3.204834,-3.228567,-2.731650,-8.111062,-9.100468,-6.317362,-7.218736,3.501534,-3.875336,-3.103765,3.270925,8.632187,3.228927,9.662188,-4.039322,-3.714251,-7.702714,4.519668,5.140773,-2.089697,3.345131,-7.954162,3.322082,7.434239,-6.530922,-6.372484,9.857251,3.967805,2.944172,0.849833,4.399965,-3.576275,-2.277354,-7.789833,3.551118,1.696468,2.544319,-0.534228,8.203850,4.108015,-1.814128,4.095790,6.169257,-0.796123,7.311010,-3.705073,1.772324,-1.681707,-2.996034,8.969633,-3.362269,-4.715832,-0.985568,-6.696155,-6.338588,-7.775751,-7.890053,-6.306849,-8.645143,-8.425552,-6.505604,7.513329,9.365587,5.229642,-6.552588,0.801035,7.132063,0.246454,2.325199,-3.688352,5.390602,-1.296793,-9.971501,9.289464,9.420611,0.527882,-9.659699,-2.505138,-6.925315,8.072139,-4.997968,2.941148,-5.737202,-0.835979,7.334072,5.101309,8.268982,-0.503242,-4.339767,-3.497187,3.403629,4.910566,-9.999650,8.502143,3.690532,-0.100011,4.174436,9.796267,-0.636543,6.382022,-6.248456,-5.648974,-0.797422,-3.490804,-5.605963,9.671295,-8.107907,2.420842,-8.363491,2.152912,2.298617,2.679870,-0.412657,-8.198861,-3.701196,-5.397284,-6.051911,-1.160044,1.138255,6.288319,-5.058087,5.362477,6.057739,4.323704,7.587455,3.116453,-8.516950,0.778266,0.440625,8.635008,-5.306345,6.915979,-0.001380,9.660417,-7.806199,2.518633,4.761506,1.898878,5.774886,-9.168526,3.818473,8.820435,3.448540,-3.330387,-5.549514,-9.886284,0.400496,2.483850,-2.799529,1.412140,7.989291,6.888833,7.930786,1.387712,3.168128,5.749360,2.833364,9.368347,-3.627908,-9.035605,2.777584,2.585160,-3.582865,3.213844,1.978672,6.033908,1.128901,-4.910718,5.554293,-1.299116,0.676438,1.351205,-1.999353,3.646327,2.326412,-4.593214,2.563891,7.739620,-2.472796,-2.884667,-0.366577,7.958982,-2.460037,-2.056597,6.517182,-9.463579,1.360380,-5.329909,-6.732007,-7.048344,1.079651,2.886787,-2.028912,-7.849430,1.150053,-5.912724,-5.637302,6.314924,1.816966,-2.069255,-8.948874,-8.902096,-6.293982,-9.639218,-7.271375,-2.277772,6.308993,-5.869518,9.676788,-9.571734,2.226368,-9.754428,-8.498842,-2.604614,0.360044,1.389123,-1.680928,3.999498,-0.567131,4.143361,-6.709333,-7.702067,6.110451,8.682945,4.303539,3.394768,7.146125,-4.000379,-2.318248,8.643862,1.332127,5.029244,-4.562260,-1.969854,-8.242526,-9.377848,-5.129792,-1.941599,1.920334,-3.332519,-4.197660,-5.995510,6.311327,1.728720,2.047204,3.990082,0.017617,-2.987290,-1.985492,-8.618559,0.015980,3.895311,6.211692,8.031492,-3.964768,7.551955,-4.461354,-5.280350,-4.540797,0.943553,-3.475788,-7.722732,9.198267,-4.595850,-7.612101,4.628569,3.201109,2.521160,-8.861963,3.944945,-8.250923,6.365623,-4.952242,-4.305354,-6.317907,8.261085,-4.990382,-8.583130,-8.606812,7.941639,-7.445666,-0.345720,-6.605973,-2.984245,3.739129,1.994664,8.954940,-7.712825,-6.187650,-7.349604,-3.466257,4.295015,-6.365961,-7.555347,-7.420786,0.515981,-9.570015,-5.045840,6.441114,-5.198412,1.441079,-8.567885,-2.608784,-1.484841,9.197860,4.834552,-0.904996,-8.961032,7.521727,-0.693324,3.986553,-8.969355,2.545542,-0.899885,2.873153,4.476323,-3.496476,9.089747,-4.780764,7.201177,9.041029,5.158267,4.721851,-1.254746,5.348475,7.588161,-1.194489,-3.109345,-9.007983,-1.424292,9.895955,-1.996020,9.380277,2.139116,-9.188916,8.178335,9.697294], dtype = "float64")#candidate|3752|(720,)|const|float64
call_3751 = relay.TupleGetItem(func_1792_call(relay.reshape(const_3752.astype('float64'), [720,])), 0)
call_3753 = relay.TupleGetItem(func_1794_call(relay.reshape(const_3752.astype('float64'), [720,])), 0)
output = relay.Tuple([call_3749,call_3751,const_3752,])
output2 = relay.Tuple([call_3750,call_3753,const_3752,])
func_3763 = relay.Function([], output)
mod['func_3763'] = func_3763
mod = relay.transform.InferType()(mod)
mutated_mod['func_3763'] = func_3763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3763_call = mutated_mod.get_global_var('func_3763')
call_3764 = func_3763_call()
output = call_3764
func_3765 = relay.Function([], output)
mutated_mod['func_3765'] = func_3765
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3786 = relay.const([[[False,False,True,True,True,True,True,False,False,True,True,True],[False,True,True,True,True,False,False,False,False,True,False,True],[False,True,False,True,True,False,True,True,False,True,False,True],[False,True,True,True,False,True,False,True,False,True,False,True],[True,False,True,True,True,True,False,False,False,True,True,True],[True,False,False,True,True,True,True,False,False,False,True,True],[True,True,False,False,False,False,True,True,False,True,False,False],[False,False,False,True,True,True,False,False,True,True,False,True],[False,True,True,False,True,False,True,True,True,True,True,True]],[[True,False,False,False,True,False,False,False,False,False,True,False],[True,True,False,False,False,False,True,False,True,False,True,True],[False,False,False,True,False,True,False,True,True,False,True,True],[False,True,True,True,True,False,True,False,True,True,True,False],[False,False,False,True,True,True,False,True,False,False,True,False],[True,True,True,True,False,True,False,False,False,True,True,False],[True,False,False,False,False,True,False,False,False,True,True,True],[False,False,False,False,False,True,False,False,True,False,True,True],[True,True,True,True,False,True,True,True,True,False,True,True]],[[True,False,True,True,True,True,False,True,True,True,False,True],[False,False,True,True,False,False,False,True,True,False,True,True],[True,False,False,False,False,False,False,False,False,True,True,True],[False,False,False,True,True,False,True,True,True,False,True,True],[True,True,True,False,True,False,False,False,False,False,True,True],[False,True,True,False,False,False,True,True,False,False,False,True],[False,True,True,True,False,False,True,True,True,False,True,True],[False,True,True,False,False,False,True,False,True,False,True,False],[True,False,True,True,False,True,True,True,True,False,False,True]]], dtype = "bool")#candidate|3786|(3, 9, 12)|const|bool
var_3787 = relay.var("var_3787", dtype = "bool", shape = (3, 9, 12))#candidate|3787|(3, 9, 12)|var|bool
bop_3788 = relay.logical_and(const_3786.astype('bool'), relay.reshape(var_3787.astype('bool'), relay.shape_of(const_3786))) # shape=(3, 9, 12)
func_2352_call = mod.get_global_var('func_2352')
func_2354_call = mutated_mod.get_global_var('func_2354')
call_3791 = func_2352_call()
call_3792 = func_2352_call()
output = relay.Tuple([bop_3788,call_3791,])
output2 = relay.Tuple([bop_3788,call_3792,])
func_3808 = relay.Function([var_3787,], output)
mod['func_3808'] = func_3808
mod = relay.transform.InferType()(mod)
mutated_mod['func_3808'] = func_3808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3809 = relay.var("var_3809", dtype = "bool", shape = (3, 9, 12))#candidate|3809|(3, 9, 12)|var|bool
func_3808_call = mutated_mod.get_global_var('func_3808')
call_3810 = func_3808_call(var_3809)
output = call_3810
func_3811 = relay.Function([var_3809], output)
mutated_mod['func_3811'] = func_3811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3745_call = mod.get_global_var('func_3745')
func_3746_call = mutated_mod.get_global_var('func_3746')
call_3823 = relay.TupleGetItem(func_3745_call(), 0)
call_3824 = relay.TupleGetItem(func_3746_call(), 0)
output = call_3823
output2 = call_3824
func_3825 = relay.Function([], output)
mod['func_3825'] = func_3825
mod = relay.transform.InferType()(mod)
output = func_3825()
func_3826 = relay.Function([], output)
mutated_mod['func_3826'] = func_3826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_3850 = relay.TupleGetItem(func_1140_call(), 0)
call_3851 = relay.TupleGetItem(func_1142_call(), 0)
output = relay.Tuple([call_3850,])
output2 = relay.Tuple([call_3851,])
func_3875 = relay.Function([], output)
mod['func_3875'] = func_3875
mod = relay.transform.InferType()(mod)
output = func_3875()
func_3876 = relay.Function([], output)
mutated_mod['func_3876'] = func_3876
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3948 = relay.var("var_3948", dtype = "float32", shape = (14, 16, 10))#candidate|3948|(14, 16, 10)|var|float32
uop_3949 = relay.log(var_3948.astype('float32')) # shape=(14, 16, 10)
var_3964 = relay.var("var_3964", dtype = "float32", shape = (14, 16, 10))#candidate|3964|(14, 16, 10)|var|float32
bop_3965 = relay.less(var_3948.astype('bool'), relay.reshape(var_3964.astype('bool'), relay.shape_of(var_3948))) # shape=(14, 16, 10)
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
const_3969 = relay.const(-4, dtype = "int16")#candidate|3969|()|const|int16
call_3968 = func_2236_call(relay.reshape(const_3969.astype('int16'), []))
call_3970 = func_2236_call(relay.reshape(const_3969.astype('int16'), []))
output = relay.Tuple([uop_3949,bop_3965,call_3968,const_3969,])
output2 = relay.Tuple([uop_3949,bop_3965,call_3970,const_3969,])
func_3981 = relay.Function([var_3948,var_3964,], output)
mod['func_3981'] = func_3981
mod = relay.transform.InferType()(mod)
mutated_mod['func_3981'] = func_3981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3981_call = mutated_mod.get_global_var('func_3981')
var_3983 = relay.var("var_3983", dtype = "float32", shape = (14, 16, 10))#candidate|3983|(14, 16, 10)|var|float32
var_3984 = relay.var("var_3984", dtype = "float32", shape = (14, 16, 10))#candidate|3984|(14, 16, 10)|var|float32
call_3982 = func_3981_call(var_3983,var_3984,)
output = call_3982
func_3985 = relay.Function([var_3983,var_3984,], output)
mutated_mod['func_3985'] = func_3985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2847_call = mod.get_global_var('func_2847')
func_2848_call = mutated_mod.get_global_var('func_2848')
call_4025 = relay.TupleGetItem(func_2847_call(), 0)
call_4026 = relay.TupleGetItem(func_2848_call(), 0)
func_3234_call = mod.get_global_var('func_3234')
func_3236_call = mutated_mod.get_global_var('func_3236')
call_4029 = func_3234_call()
call_4030 = func_3234_call()
output = relay.Tuple([call_4025,call_4029,])
output2 = relay.Tuple([call_4026,call_4030,])
func_4049 = relay.Function([], output)
mod['func_4049'] = func_4049
mod = relay.transform.InferType()(mod)
mutated_mod['func_4049'] = func_4049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4049_call = mutated_mod.get_global_var('func_4049')
call_4050 = func_4049_call()
output = call_4050
func_4051 = relay.Function([], output)
mutated_mod['func_4051'] = func_4051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1958_call = mod.get_global_var('func_1958')
func_1959_call = mutated_mod.get_global_var('func_1959')
call_4098 = func_1958_call()
call_4099 = func_1958_call()
func_1420_call = mod.get_global_var('func_1420')
func_1423_call = mutated_mod.get_global_var('func_1423')
const_4107 = relay.const([-7.571286,6.173441,4.042323,-6.588440,-1.116986,3.995230,-7.068002,4.667215,-0.144345,9.627703,-8.780953,-3.252377,-7.617663,8.622872,-3.104531,-1.364182,7.025610,9.688076,8.009900,-7.639748,-7.229576,9.423768,5.890455,-6.705656,-9.174440,2.846852,2.506098,7.470097,5.539265,4.151133,-2.511635,-9.284559,5.408390,-3.686969,7.776120,-4.359141,-4.105141,1.610293,-4.286262,-2.580482], dtype = "float64")#candidate|4107|(40,)|const|float64
call_4106 = relay.TupleGetItem(func_1420_call(relay.reshape(const_4107.astype('float64'), [40,]), relay.reshape(call_4098.astype('float32'), [8, 10, 4]), ), 1)
call_4108 = relay.TupleGetItem(func_1423_call(relay.reshape(const_4107.astype('float64'), [40,]), relay.reshape(call_4098.astype('float32'), [8, 10, 4]), ), 1)
output = relay.Tuple([call_4098,call_4106,const_4107,])
output2 = relay.Tuple([call_4099,call_4108,const_4107,])
func_4119 = relay.Function([], output)
mod['func_4119'] = func_4119
mod = relay.transform.InferType()(mod)
mutated_mod['func_4119'] = func_4119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4119_call = mutated_mod.get_global_var('func_4119')
call_4120 = func_4119_call()
output = call_4120
func_4121 = relay.Function([], output)
mutated_mod['func_4121'] = func_4121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_4126 = func_1157_call()
call_4127 = func_1157_call()
func_3875_call = mod.get_global_var('func_3875')
func_3876_call = mutated_mod.get_global_var('func_3876')
call_4145 = relay.TupleGetItem(func_3875_call(), 0)
call_4146 = relay.TupleGetItem(func_3876_call(), 0)
var_4161 = relay.var("var_4161", dtype = "float32", shape = (10, 8, 9))#candidate|4161|(10, 8, 9)|var|float32
bop_4162 = relay.divide(call_4126.astype('float32'), var_4161.astype('float32')) # shape=(10, 8, 9)
bop_4165 = relay.divide(call_4127.astype('float32'), var_4161.astype('float32')) # shape=(10, 8, 9)
output = relay.Tuple([call_4145,bop_4162,])
output2 = relay.Tuple([call_4146,bop_4165,])
func_4174 = relay.Function([var_4161,], output)
mod['func_4174'] = func_4174
mod = relay.transform.InferType()(mod)
var_4175 = relay.var("var_4175", dtype = "float32", shape = (10, 8, 9))#candidate|4175|(10, 8, 9)|var|float32
output = func_4174(var_4175)
func_4176 = relay.Function([var_4175], output)
mutated_mod['func_4176'] = func_4176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4205 = relay.var("var_4205", dtype = "bool", shape = (4, 13, 13))#candidate|4205|(4, 13, 13)|var|bool
var_4206 = relay.var("var_4206", dtype = "bool", shape = (4, 13, 13))#candidate|4206|(4, 13, 13)|var|bool
bop_4207 = relay.logical_and(var_4205.astype('bool'), relay.reshape(var_4206.astype('bool'), relay.shape_of(var_4205))) # shape=(4, 13, 13)
output = relay.Tuple([bop_4207,])
output2 = relay.Tuple([bop_4207,])
func_4210 = relay.Function([var_4205,var_4206,], output)
mod['func_4210'] = func_4210
mod = relay.transform.InferType()(mod)
mutated_mod['func_4210'] = func_4210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4210_call = mutated_mod.get_global_var('func_4210')
var_4212 = relay.var("var_4212", dtype = "bool", shape = (4, 13, 13))#candidate|4212|(4, 13, 13)|var|bool
var_4213 = relay.var("var_4213", dtype = "bool", shape = (4, 13, 13))#candidate|4213|(4, 13, 13)|var|bool
call_4211 = func_4210_call(var_4212,var_4213,)
output = call_4211
func_4214 = relay.Function([var_4212,var_4213,], output)
mutated_mod['func_4214'] = func_4214
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4256 = relay.var("var_4256", dtype = "float32", shape = (1, 16, 11))#candidate|4256|(1, 16, 11)|var|float32
uop_4257 = relay.asin(var_4256.astype('float32')) # shape=(1, 16, 11)
bop_4262 = relay.greater(var_4256.astype('bool'), relay.reshape(uop_4257.astype('bool'), relay.shape_of(var_4256))) # shape=(1, 16, 11)
uop_4270 = relay.sin(uop_4257.astype('float64')) # shape=(1, 16, 11)
func_1519_call = mod.get_global_var('func_1519')
func_1521_call = mutated_mod.get_global_var('func_1521')
var_4273 = relay.var("var_4273", dtype = "float64", shape = (720,))#candidate|4273|(720,)|var|float64
call_4272 = relay.TupleGetItem(func_1519_call(relay.reshape(var_4273.astype('float64'), [720,])), 1)
call_4274 = relay.TupleGetItem(func_1521_call(relay.reshape(var_4273.astype('float64'), [720,])), 1)
output = relay.Tuple([bop_4262,uop_4270,call_4272,var_4273,])
output2 = relay.Tuple([bop_4262,uop_4270,call_4274,var_4273,])
func_4275 = relay.Function([var_4256,var_4273,], output)
mod['func_4275'] = func_4275
mod = relay.transform.InferType()(mod)
var_4276 = relay.var("var_4276", dtype = "float32", shape = (1, 16, 11))#candidate|4276|(1, 16, 11)|var|float32
var_4277 = relay.var("var_4277", dtype = "float64", shape = (720,))#candidate|4277|(720,)|var|float64
output = func_4275(var_4276,var_4277,)
func_4278 = relay.Function([var_4276,var_4277,], output)
mutated_mod['func_4278'] = func_4278
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4366 = relay.var("var_4366", dtype = "int64", shape = (15, 11, 12))#candidate|4366|(15, 11, 12)|var|int64
var_4367 = relay.var("var_4367", dtype = "int64", shape = (15, 11, 12))#candidate|4367|(15, 11, 12)|var|int64
bop_4368 = relay.logical_xor(var_4366.astype('int64'), relay.reshape(var_4367.astype('int64'), relay.shape_of(var_4366))) # shape=(15, 11, 12)
output = relay.Tuple([bop_4368,])
output2 = relay.Tuple([bop_4368,])
func_4372 = relay.Function([var_4366,var_4367,], output)
mod['func_4372'] = func_4372
mod = relay.transform.InferType()(mod)
mutated_mod['func_4372'] = func_4372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4372_call = mutated_mod.get_global_var('func_4372')
var_4374 = relay.var("var_4374", dtype = "int64", shape = (15, 11, 12))#candidate|4374|(15, 11, 12)|var|int64
var_4375 = relay.var("var_4375", dtype = "int64", shape = (15, 11, 12))#candidate|4375|(15, 11, 12)|var|int64
call_4373 = func_4372_call(var_4374,var_4375,)
output = call_4373
func_4376 = relay.Function([var_4374,var_4375,], output)
mutated_mod['func_4376'] = func_4376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1958_call = mod.get_global_var('func_1958')
func_1959_call = mutated_mod.get_global_var('func_1959')
call_4387 = func_1958_call()
call_4388 = func_1958_call()
func_2376_call = mod.get_global_var('func_2376')
func_2377_call = mutated_mod.get_global_var('func_2377')
call_4389 = relay.TupleGetItem(func_2376_call(), 0)
call_4390 = relay.TupleGetItem(func_2377_call(), 0)
var_4399 = relay.var("var_4399", dtype = "float32", shape = (9, 8, 9))#candidate|4399|(9, 8, 9)|var|float32
bop_4400 = relay.floor_mod(call_4389.astype('float64'), var_4399.astype('float64')) # shape=(9, 8, 9)
bop_4403 = relay.floor_mod(call_4390.astype('float64'), var_4399.astype('float64')) # shape=(9, 8, 9)
func_3745_call = mod.get_global_var('func_3745')
func_3746_call = mutated_mod.get_global_var('func_3746')
call_4415 = relay.TupleGetItem(func_3745_call(), 0)
call_4416 = relay.TupleGetItem(func_3746_call(), 0)
bop_4419 = relay.not_equal(var_4399.astype('bool'), relay.reshape(bop_4400.astype('bool'), relay.shape_of(var_4399))) # shape=(9, 8, 9)
bop_4422 = relay.not_equal(var_4399.astype('bool'), relay.reshape(bop_4403.astype('bool'), relay.shape_of(var_4399))) # shape=(9, 8, 9)
func_2617_call = mod.get_global_var('func_2617')
func_2618_call = mutated_mod.get_global_var('func_2618')
call_4427 = func_2617_call()
call_4428 = func_2617_call()
output = relay.Tuple([call_4387,call_4415,bop_4419,call_4427,])
output2 = relay.Tuple([call_4388,call_4416,bop_4422,call_4428,])
func_4435 = relay.Function([var_4399,], output)
mod['func_4435'] = func_4435
mod = relay.transform.InferType()(mod)
var_4436 = relay.var("var_4436", dtype = "float32", shape = (9, 8, 9))#candidate|4436|(9, 8, 9)|var|float32
output = func_4435(var_4436)
func_4437 = relay.Function([var_4436], output)
mutated_mod['func_4437'] = func_4437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3492_call = mod.get_global_var('func_3492')
func_3494_call = mutated_mod.get_global_var('func_3494')
call_4445 = func_3492_call()
call_4446 = func_3492_call()
output = call_4445
output2 = call_4446
func_4450 = relay.Function([], output)
mod['func_4450'] = func_4450
mod = relay.transform.InferType()(mod)
output = func_4450()
func_4451 = relay.Function([], output)
mutated_mod['func_4451'] = func_4451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2352_call = mod.get_global_var('func_2352')
func_2354_call = mutated_mod.get_global_var('func_2354')
call_4461 = func_2352_call()
call_4462 = func_2352_call()
func_2936_call = mod.get_global_var('func_2936')
func_2938_call = mutated_mod.get_global_var('func_2938')
call_4466 = relay.TupleGetItem(func_2936_call(), 0)
call_4467 = relay.TupleGetItem(func_2938_call(), 0)
output = relay.Tuple([call_4461,call_4466,])
output2 = relay.Tuple([call_4462,call_4467,])
func_4468 = relay.Function([], output)
mod['func_4468'] = func_4468
mod = relay.transform.InferType()(mod)
output = func_4468()
func_4469 = relay.Function([], output)
mutated_mod['func_4469'] = func_4469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3234_call = mod.get_global_var('func_3234')
func_3236_call = mutated_mod.get_global_var('func_3236')
call_4522 = func_3234_call()
call_4523 = func_3234_call()
func_4468_call = mod.get_global_var('func_4468')
func_4469_call = mutated_mod.get_global_var('func_4469')
call_4543 = relay.TupleGetItem(func_4468_call(), 0)
call_4544 = relay.TupleGetItem(func_4469_call(), 0)
uop_4560 = relay.cos(call_4522.astype('float64')) # shape=(1, 8, 9)
uop_4562 = relay.cos(call_4523.astype('float64')) # shape=(1, 8, 9)
uop_4565 = relay.asin(uop_4560.astype('float32')) # shape=(1, 8, 9)
uop_4567 = relay.asin(uop_4562.astype('float32')) # shape=(1, 8, 9)
output = relay.Tuple([call_4543,uop_4565,])
output2 = relay.Tuple([call_4544,uop_4567,])
func_4575 = relay.Function([], output)
mod['func_4575'] = func_4575
mod = relay.transform.InferType()(mod)
output = func_4575()
func_4576 = relay.Function([], output)
mutated_mod['func_4576'] = func_4576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3234_call = mod.get_global_var('func_3234')
func_3236_call = mutated_mod.get_global_var('func_3236')
call_4580 = func_3234_call()
call_4581 = func_3234_call()
func_661_call = mod.get_global_var('func_661')
func_663_call = mutated_mod.get_global_var('func_663')
const_4583 = relay.const([-7.884588,-3.297200,0.052370,1.619214,7.359636,-2.545406,8.494744,-3.807840,-1.081593,7.175415,3.295106,6.183898,2.826509,7.332584,-6.938696,2.711861,8.028822,4.701990,4.674109,8.457350,1.912049,3.166504,2.507542,-2.226027,0.777182,-1.511681,-8.089579,6.812296,9.421387,-8.994207,4.784875,-5.958937,9.518362,9.233682,-2.469188,-9.283199,-0.385163,-4.302173,1.280062,0.859434,-8.682908,0.675729,-8.974078,2.229058,0.535985,6.408144,8.860375,-8.917030,9.825216,0.899291,-7.078478,-5.343514,-0.971645,-5.836933,6.118752,-3.409584,2.818483,7.397024,-7.702519,2.158644,-5.512125,-9.789029,-2.431466,7.740191,-9.436362,7.622864,-4.536376,3.143869,1.629104,-7.374595,4.108595,-6.181072,-1.987786,-6.334919,-8.561540,0.806862,-1.933036,-7.441312,-7.003064,5.905899,3.692489,0.619718,-9.221973,-0.122874,-1.486725,-0.603429,2.540874,2.272089,-5.093155,-7.687522,9.894575,-7.905129,3.969622,6.750044,-6.585296,-5.110365,2.632873,7.076941,-1.877600,8.503017,-2.366052,-2.694458,1.760154,7.360109,-5.321444,-2.318545,6.923397,2.778806,-7.090382,-1.476764,9.790644,-9.321085,-1.604207,-7.628283,8.929790,-7.019526,-3.949483,6.649474,-4.530898,2.072494,-4.574568,-9.061885,-8.092331,-8.609102,-5.210437,5.343414,2.450504,7.423608,3.376486,-1.416729,2.827064,-4.185216,8.931527,4.059098,6.606108,-2.329049,5.446350,6.172835,6.797976,-3.964293,3.005759,8.216656,8.015177,-1.260035,0.817733,1.334179,0.127299,-4.536968,2.745243,-6.303498,-7.133662,-5.503205,-6.294678,-0.916325,6.253727,1.432252,-6.226814,0.789245,3.860722,5.849505,-4.543278,-3.568653,-2.629124,-5.839192,-0.897252,-7.346122,-5.975527,-1.383642,4.204139,-2.018740,0.018839,6.150060,-9.188643,4.129781,-9.449340,-6.065150,6.212240,0.755566,4.391466,6.237099,-4.415078,0.660726,-7.819768,7.978502,-5.131513,-0.922582,-3.650795,8.072875,-5.655363,-6.537501,8.980009,0.882585,2.961044,0.756256,4.636924,8.181031,-3.695384,-3.238794,-7.095605,-7.669497,3.260513,9.678427,-6.171506,-1.799445,4.600430,-4.809010,-6.665102,-9.798023,-6.039889,-7.004294,-1.939743,8.725616,-3.788943,-3.516162,-6.152617,9.428311,9.882619,4.456405,-7.782424,8.969226,-7.052287,-8.704313,8.089473,7.457008,-4.744028,8.216209,8.431122,-5.697762,-4.094340,-1.601943,6.122527,-8.664748,-8.115978,1.368108,-9.614357,2.113616,-5.970861,4.319732,-1.331365,7.464252,-5.508294,6.713214,0.231896,-0.576564,-4.502072,-3.314155,-1.520799,2.036023,-5.579623,3.310987,4.420908,-2.431627,7.361331,9.138865,-6.394561,-1.989246,-2.521429,-4.964311,3.522985,0.310788,1.552243,-1.578485,5.886060,4.388552,-8.286455,-8.552019,0.045265,8.604015,-0.720818,-8.257086,4.873468,4.531601,-4.926497,5.308301,-7.193125,-8.919303,7.058474,-0.380080,-3.258105,-8.542749,-6.886662,-8.731635,0.694549,-3.474777,-1.206725,-8.367068,-5.290089,2.320957,1.171683,-7.344674,-7.896006,-3.156854,4.661773,-0.725725,-4.510171,-0.705756,1.586278,-2.828649,-9.745189,-7.845761,9.625775,-7.516140,-5.541216,-6.400006,0.989527,-5.635332,0.928051,4.463472,2.183936,-5.844536,-2.641889,-5.474183,2.250217,1.081460,-5.884830,1.301717,-4.774475,6.451259,3.353802,6.560828,-3.688521,-0.906043,-5.838624,0.137193,7.849182,9.786221,-9.237957,8.001125,-5.383034,-4.767567,-7.554174,-9.438813,4.442558,-0.351013,4.047994,4.136502,7.105522,-7.235249,6.714935,6.899030,4.760778,5.269203,-7.237459,-7.089337,1.397744,3.570184,-1.671052,-3.480520,1.154953,-3.210333,-6.008080,3.716082,-1.372301,3.172255,6.909157,-1.815472,7.951338,-0.151315,7.562106,-3.853245,7.160936,-2.694283,6.697922,-4.486178,6.877289,-9.586159,-7.075788,6.802583,9.025490,9.049408,5.593097,2.824774,1.698344,5.942331,-8.474203,7.191778,1.927435,5.721145,-1.988655,-6.248265,4.806998,-3.898860,-2.664719,-5.664959,-1.289672,-9.325216,7.654503,1.963578,4.065425,0.488760,-5.834253,-4.926036,6.043904,7.623563,2.885022,3.863084,-6.538286,-7.540545,-2.776271,-8.148254,-3.831535,-6.842502,-6.689895,-6.860100,-9.888594,-2.825582,-2.565001,0.171608,-6.458186,-9.893292,-1.996219,-4.932830,4.459638,8.374968,2.905837,-9.442728,-1.208654,-3.515254,-3.361862,-4.142258,-8.134128,-6.413216,2.620774,-8.822039,-5.435507,2.006291,1.882407,9.333467,2.594538,-4.302511,-9.864699,-9.170460,4.371147,6.248974,-5.562375,7.448168,-1.444518,3.223997,6.606966,-1.359265,-6.536909,-0.884495,8.512069,-0.820363,-2.234657,-9.429024,-8.014564,3.720526,9.855322,8.458528,-5.517335,-6.488752,-8.732497,1.585915,-8.925500,8.828022,7.544829,-3.840857,8.500098,2.030768,8.733487,-9.960392,1.182433,0.328721,4.266164,-5.047174,8.988055,-3.343560,-2.865344,2.725269,1.201678,-4.838520,-7.751564,-1.483896,9.835372,1.539600,2.733615,-8.766898,4.547349,7.437194,9.539148,9.938785,-8.907425,-0.936001,4.071185,9.569575,6.775777,6.886338,-7.367012,2.504573,-9.710869,-5.428148,5.959501,-8.887504,0.299995,0.593532,3.277951,9.432321,-9.049171,-7.158917,-3.050433,0.937840,2.876445,5.552497,-2.259458,-1.562755,-9.392179,-2.778811,9.262108,-3.830148,-3.578957,0.466989,-9.389044,2.042473,0.900276,-9.016961,-4.718760,1.650506,7.498218,9.415808,7.834028,-9.002731,4.251391,0.712805,1.727963,3.979140,2.856404,7.600083,0.662222,3.814246,-4.578111,-1.637313,8.068330,5.933796,6.361649,-0.612552,-7.284217,-9.211935,6.959031,-3.573163,8.991314,-2.606823,2.880744,4.406172,-4.757606,9.625527,-9.089317,7.504157,6.330534,-1.977997,-7.828279,0.735634,5.790144,-3.540695,-7.580266,8.178949,-7.760077,-1.232812,8.337940,-6.041485,-3.116711,4.878489,-4.340664,-1.302425,0.671333,-0.015412,1.188769,-4.868344,6.840122,7.771618,0.621032,7.536170,-8.219633,2.889023,7.414471,-2.736506,9.782345,4.278128,-7.842105,3.395051,-8.928499,6.036630,-8.816756,0.725174,-2.834277,0.906740,5.690406,8.035216,-8.722316,-4.010290,6.766788,-2.350730,-8.195471,-5.900259,7.795605,-5.902387,8.144342,-4.749846,2.581220,1.840503,-5.963636,6.828925,6.179111,-6.364862,-9.162422,-8.533811,5.862192,-3.983603,-7.924807,-8.528017,4.288587,4.598169,4.518427,-8.830675,2.566418,-5.191614,-0.566838,-2.895207,8.265731,4.503057,8.152780,5.210359,-5.987903,-7.764468,-6.731143,7.103922,5.429476,-6.430058,-1.825919,1.282055,-3.988147,5.615735,0.326541,-8.123434,-9.767871,-6.247133,3.659924,-4.648204,-1.378456,-4.606202,-9.472599,-2.171572,3.399489,-5.914280,2.969773,3.148500,5.988705,-3.778538,-2.141330,3.775884,-1.698158,-9.432358,0.648232,-3.887325,1.896586,-2.369087,-7.888941,0.053585,7.663311,9.476181,4.780438,-0.216841,8.221059,-3.904677,-7.356062,0.047310,2.150286,-7.564631,-5.619209,-7.512433,-9.321290,0.901154,0.294693,-0.484721,-1.084236,5.240473,-7.384846,2.994561,-0.949705,-7.937902,6.602166,-5.510411,9.079350,-5.971753,5.948271,-3.794933,5.254496,-2.229817,-7.344765,-4.981853,-0.439865,7.372883,1.425706,-1.317175,-9.149337,-4.565753,-6.511322,-5.495254,-3.810432,-1.276251,-0.652665,5.661094,-1.621342,-3.441214,-2.683221,-3.791970,5.154799,5.068698,-2.770348,-1.136049,-8.895730,-3.513819,8.035296,5.350314,7.372440,3.453248,-8.518277,-7.802027,-1.477641,6.065670], dtype = "float64")#candidate|4583|(720,)|const|float64
call_4582 = relay.TupleGetItem(func_661_call(relay.reshape(const_4583.astype('float64'), [10, 8, 9])), 1)
call_4584 = relay.TupleGetItem(func_663_call(relay.reshape(const_4583.astype('float64'), [10, 8, 9])), 1)
func_2970_call = mod.get_global_var('func_2970')
func_2972_call = mutated_mod.get_global_var('func_2972')
call_4588 = relay.TupleGetItem(func_2970_call(relay.reshape(call_4580.astype('uint64'), [6, 6, 2])), 3)
call_4589 = relay.TupleGetItem(func_2972_call(relay.reshape(call_4580.astype('uint64'), [6, 6, 2])), 3)
output = relay.Tuple([call_4580,call_4582,const_4583,call_4588,])
output2 = relay.Tuple([call_4581,call_4584,const_4583,call_4589,])
func_4592 = relay.Function([], output)
mod['func_4592'] = func_4592
mod = relay.transform.InferType()(mod)
output = func_4592()
func_4593 = relay.Function([], output)
mutated_mod['func_4593'] = func_4593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2352_call = mod.get_global_var('func_2352')
func_2354_call = mutated_mod.get_global_var('func_2354')
call_4631 = func_2352_call()
call_4632 = func_2352_call()
output = call_4631
output2 = call_4632
func_4641 = relay.Function([], output)
mod['func_4641'] = func_4641
mod = relay.transform.InferType()(mod)
output = func_4641()
func_4642 = relay.Function([], output)
mutated_mod['func_4642'] = func_4642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4468_call = mod.get_global_var('func_4468')
func_4469_call = mutated_mod.get_global_var('func_4469')
call_4674 = relay.TupleGetItem(func_4468_call(), 0)
call_4675 = relay.TupleGetItem(func_4469_call(), 0)
output = relay.Tuple([call_4674,])
output2 = relay.Tuple([call_4675,])
func_4677 = relay.Function([], output)
mod['func_4677'] = func_4677
mod = relay.transform.InferType()(mod)
mutated_mod['func_4677'] = func_4677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4677_call = mutated_mod.get_global_var('func_4677')
call_4678 = func_4677_call()
output = call_4678
func_4679 = relay.Function([], output)
mutated_mod['func_4679'] = func_4679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1636_call = mod.get_global_var('func_1636')
func_1637_call = mutated_mod.get_global_var('func_1637')
call_4781 = relay.TupleGetItem(func_1636_call(), 3)
call_4782 = relay.TupleGetItem(func_1637_call(), 3)
func_1576_call = mod.get_global_var('func_1576')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_4786 = relay.TupleGetItem(func_1576_call(), 0)
call_4787 = relay.TupleGetItem(func_1577_call(), 0)
const_4790 = relay.const([[[4.663991,-1.045364,6.527048,-2.979295],[-6.129420,7.253172,-0.037510,4.775285],[-4.091609,3.197863,2.954838,-1.528374],[-6.504579,-6.403760,-4.730467,6.418424],[-4.450455,5.058344,-7.461897,-6.116419],[9.123535,5.874187,6.963033,2.345830],[-0.625660,6.630963,8.358261,-2.346610],[-2.705848,-6.351771,-0.468323,-6.688175],[5.060717,-3.580568,-1.988437,5.308395],[7.358065,3.159768,5.494102,-2.835469]],[[7.658810,-5.379864,1.134627,-7.889036],[1.372016,-2.671338,8.537918,-5.457095],[2.933690,-6.539260,7.256128,4.087951],[-9.371710,5.821332,8.840797,1.562798],[8.225102,8.769836,8.682816,-2.062727],[-1.486991,-0.792618,-6.563056,9.341756],[-2.688351,7.354259,9.176788,-1.963074],[3.353416,3.520572,8.649644,-6.445581],[-6.128186,-9.594348,1.639168,-3.395200],[9.683100,6.528769,2.726062,3.581792]],[[-9.864880,-6.244159,2.985627,2.163629],[-0.282913,2.793618,-1.732373,4.347099],[-8.540257,-2.886604,-6.974461,2.695276],[1.550093,0.813173,3.891074,-4.970880],[9.458608,0.851423,7.753928,-2.969455],[-0.899594,-7.371701,3.018062,5.813698],[5.411544,9.290207,0.820225,7.844366],[-4.403556,6.768007,-0.660305,1.383805],[-4.565904,-5.064468,-3.867803,-9.223595],[8.495951,9.451539,-5.723740,-9.724973]],[[-1.849251,5.670960,-8.103357,-9.332035],[-1.926786,9.821310,-9.937437,-7.345905],[5.036961,-5.318555,6.123992,-5.817888],[8.770426,8.729661,4.610173,5.062582],[-2.382948,5.960102,-9.926702,4.116435],[9.764436,0.378456,6.183716,0.718028],[-7.452993,-6.829368,-8.989146,-7.225443],[-5.480309,2.154816,4.067806,3.727581],[8.015543,1.862452,2.392776,-8.944100],[3.949665,-2.801278,-6.837059,8.345922]],[[6.378382,-5.923656,2.600999,-2.480838],[9.815391,5.988768,-1.848305,-8.219771],[2.155969,8.268855,-3.175567,3.447839],[1.349741,-5.004962,4.036365,3.714448],[-9.961849,-5.607852,-8.434367,3.747792],[-4.587938,8.301394,-7.563467,9.202494],[6.062552,-2.297015,-9.551897,0.427088],[9.515269,5.498160,0.385832,5.188595],[5.934434,1.148857,-4.104941,1.066172],[0.004395,-0.417072,-0.843335,6.411386]],[[-0.529724,3.279072,-3.021378,2.860289],[-9.361485,-2.004132,6.160294,7.871518],[-0.076222,-1.101567,-6.364050,8.824406],[-1.419720,6.211263,8.081178,-0.763066],[-9.358714,7.508953,-6.954589,-3.277103],[1.255780,8.782507,-8.900643,6.780447],[8.983921,-6.369131,8.259340,-2.770702],[8.239587,-7.541059,-7.430118,-9.589590],[-3.502548,0.662043,-4.070362,-5.511109],[1.714734,-4.557987,-2.609598,-8.364782]],[[-2.436559,3.282696,-2.469111,4.571526],[0.127086,3.691599,1.482535,-2.945590],[5.579128,-2.802575,7.225401,9.131641],[-8.000306,2.397094,-1.757287,2.663701],[-5.058883,-9.993159,-9.131661,-8.828439],[-3.596955,2.334254,1.237888,7.433039],[-9.613425,3.106845,-2.113155,-3.344505],[-5.185168,-3.077144,7.920495,4.117613],[-0.848767,-3.795164,-9.225222,8.088796],[-5.728865,-6.557899,-6.725665,-9.575544]],[[0.660262,1.102027,6.920055,1.676909],[4.952382,-3.993883,9.877174,-1.614628],[4.161114,-9.313156,0.017506,-1.970395],[-7.962625,1.938386,8.554808,9.567165],[3.388226,-2.052752,-4.682565,9.118755],[7.202145,-3.528356,8.964399,0.509262],[-4.070747,-4.084288,7.003459,9.143891],[5.264675,-0.057002,9.050330,-7.694989],[-9.628807,6.583298,-0.661872,-7.613553],[-2.125939,-3.318143,5.961067,-9.554651]]], dtype = "float32")#candidate|4790|(8, 10, 4)|const|float32
bop_4791 = relay.maximum(call_4786.astype('int64'), relay.reshape(const_4790.astype('int64'), relay.shape_of(call_4786))) # shape=(8, 10, 4)
bop_4794 = relay.maximum(call_4787.astype('int64'), relay.reshape(const_4790.astype('int64'), relay.shape_of(call_4787))) # shape=(8, 10, 4)
output = relay.Tuple([call_4781,bop_4791,])
output2 = relay.Tuple([call_4782,bop_4794,])
func_4802 = relay.Function([], output)
mod['func_4802'] = func_4802
mod = relay.transform.InferType()(mod)
output = func_4802()
func_4803 = relay.Function([], output)
mutated_mod['func_4803'] = func_4803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3337_call = mod.get_global_var('func_3337')
func_3339_call = mutated_mod.get_global_var('func_3339')
call_4860 = relay.TupleGetItem(func_3337_call(), 0)
call_4861 = relay.TupleGetItem(func_3339_call(), 0)
func_4468_call = mod.get_global_var('func_4468')
func_4469_call = mutated_mod.get_global_var('func_4469')
call_4891 = relay.TupleGetItem(func_4468_call(), 1)
call_4892 = relay.TupleGetItem(func_4469_call(), 1)
bop_4893 = relay.less(call_4860.astype('bool'), relay.reshape(call_4891.astype('bool'), relay.shape_of(call_4860))) # shape=(8, 10, 4)
bop_4896 = relay.less(call_4861.astype('bool'), relay.reshape(call_4892.astype('bool'), relay.shape_of(call_4861))) # shape=(8, 10, 4)
bop_4897 = relay.right_shift(bop_4893.astype('uint16'), relay.reshape(call_4891.astype('uint16'), relay.shape_of(bop_4893))) # shape=(8, 10, 4)
bop_4900 = relay.right_shift(bop_4896.astype('uint16'), relay.reshape(call_4892.astype('uint16'), relay.shape_of(bop_4896))) # shape=(8, 10, 4)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_4904 = relay.TupleGetItem(func_1140_call(), 0)
call_4905 = relay.TupleGetItem(func_1142_call(), 0)
output = relay.Tuple([bop_4897,call_4904,])
output2 = relay.Tuple([bop_4900,call_4905,])
func_4920 = relay.Function([], output)
mod['func_4920'] = func_4920
mod = relay.transform.InferType()(mod)
output = func_4920()
func_4921 = relay.Function([], output)
mutated_mod['func_4921'] = func_4921
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5018 = relay.const([[[-5,10,3,-8,7,-7],[-8,-7,3,3,10,6],[-1,4,8,1,6,-7],[-3,5,1,-4,-6,-5],[-3,-9,-8,-4,9,-2],[-7,-10,-4,-2,-4,-9],[-9,-3,-6,-6,-7,-3],[1,3,-7,-6,-7,7],[-5,-10,-6,-3,-4,1],[-5,10,-1,6,-10,1],[5,2,-6,-5,8,10]],[[-4,8,-9,9,-6,-7],[-10,9,3,9,-7,-2],[-10,2,2,-9,-6,6],[7,-1,-2,10,-3,-4],[-6,6,4,4,5,-9],[9,3,6,-1,5,-4],[2,3,-2,4,9,-1],[8,-8,-1,-9,-6,6],[-4,-5,-8,-9,4,8],[8,1,-1,-2,-8,-3],[-7,1,-9,-5,5,3]],[[8,6,6,7,-7,3],[3,-9,8,-1,-6,-10],[1,-9,5,2,6,7],[-3,5,-3,7,4,6],[-10,8,-9,-3,4,-7],[-4,4,8,-1,6,-10],[-6,4,3,-1,6,10],[-8,8,-3,-8,-5,-8],[-4,3,-6,-8,9,2],[3,-6,-3,-6,7,10],[8,-10,2,5,6,-5]],[[-2,3,-8,-5,8,-10],[6,-1,-10,7,-3,-1],[3,-1,6,1,3,-1],[-9,-2,6,8,-9,-6],[-4,-5,10,-1,3,-3],[-10,-7,10,-3,-4,6],[6,1,4,4,-2,4],[6,4,7,-8,-4,1],[-3,-1,-9,7,2,3],[-7,6,8,1,5,-5],[7,-1,-8,-4,-5,10]],[[-3,-1,8,3,-1,-7],[8,4,5,8,-3,-2],[-1,6,3,-2,-4,1],[7,9,2,-10,4,-6],[5,3,-4,3,-3,-3],[-6,3,10,-3,-10,8],[6,4,1,-1,7,4],[-2,9,5,-2,-9,-10],[10,7,-6,4,10,-6],[-2,-7,2,10,-10,9],[-3,6,-7,2,-2,1]],[[-5,-3,-5,-7,-5,-5],[8,1,6,-5,3,2],[10,9,-6,-3,7,5],[-3,8,7,-5,9,-2],[7,6,9,-10,-6,2],[-1,-3,10,-10,-8,-1],[2,-9,1,7,-9,8],[3,-8,10,2,-4,2],[1,-7,10,4,-3,2],[6,-3,-4,-2,10,-7],[9,-4,4,-7,9,6]],[[1,1,4,-7,5,-5],[1,-8,-7,-1,-6,-1],[2,7,-3,1,2,-7],[7,7,4,-3,-9,-5],[-7,5,1,4,-6,-5],[2,5,7,-4,-8,8],[-3,6,-3,-10,-5,-4],[3,-2,-8,9,2,-8],[8,3,3,5,-2,9],[1,-6,4,-5,-9,-5],[-7,-9,-10,5,-6,-1]],[[10,4,8,9,-3,-6],[-6,-6,-1,2,-7,6],[-5,-5,-1,-10,4,-5],[9,4,9,-1,-2,-2],[9,-2,4,-6,-8,1],[-7,10,-7,8,7,8],[-1,-2,9,7,-7,-6],[4,9,-3,1,3,5],[-4,-6,2,-10,-6,-7],[6,2,-2,4,2,-10],[-6,-9,2,-9,-5,-1]],[[10,2,-2,2,3,-3],[4,-3,-1,-3,3,5],[4,-4,-8,9,-6,7],[-10,-8,-3,-7,6,-3],[-2,5,-8,3,-4,-2],[3,2,4,7,-6,-6],[4,6,-3,9,5,1],[4,-7,2,-1,-3,-4],[2,-1,-4,9,-8,10],[-4,-7,4,-4,3,-7],[1,1,10,-10,-5,-1]],[[8,7,-7,-9,7,-1],[5,1,7,4,5,3],[-9,8,-6,2,-10,-9],[-9,5,-4,9,4,-7],[6,-10,-7,6,7,-1],[-2,-6,4,-7,-6,9],[1,-9,-7,-5,-10,-6],[7,2,-6,9,-5,-10],[4,4,-2,-10,-10,-9],[7,-2,10,-1,-9,-2],[-7,-5,-10,3,-4,4]],[[9,-10,-2,8,6,6],[7,2,-2,3,9,-4],[-2,-3,-4,-2,-2,4],[5,5,1,5,9,-5],[6,-10,7,4,-3,-8],[7,-1,-4,2,8,-9],[7,6,3,-6,-1,-6],[2,-10,10,-3,-7,3],[-3,9,2,-10,-3,-8],[-10,-7,-3,-1,-4,2],[-8,10,-3,-7,8,10]]], dtype = "int64")#candidate|5018|(11, 11, 6)|const|int64
const_5019 = relay.const([[[9,-7,-10,7,3,-9],[1,2,-8,2,-6,10],[6,-6,6,-8,3,-2],[-2,-1,10,4,5,-7],[-2,9,-10,6,6,9],[-3,6,2,-1,1,-9],[-1,-4,-8,-9,4,8],[6,9,8,-3,5,-9],[1,1,-3,3,-3,10],[2,4,9,9,8,9],[-6,-8,-4,-7,-6,-7]],[[9,3,-8,7,-4,3],[5,-9,10,8,10,8],[-1,-7,5,8,-3,-10],[-1,1,10,-9,8,5],[-5,5,-8,-7,9,-10],[9,10,6,-3,7,-4],[-9,-9,10,4,-8,9],[5,-9,-2,-1,-4,5],[1,8,-3,4,-5,7],[-10,1,4,-7,7,-3],[4,2,-5,7,4,-5]],[[-8,-8,-3,-8,-8,2],[-10,10,5,-8,9,7],[8,1,1,-10,-6,-4],[5,-3,-3,-6,-6,-10],[-2,-7,2,-5,10,-6],[-4,10,7,1,7,7],[-3,-3,-9,-7,5,2],[-10,10,6,10,6,-2],[-5,-7,10,-2,-6,9],[2,-6,4,6,6,-5],[-4,2,7,3,8,-4]],[[-3,-1,-3,-4,-10,4],[10,-9,6,1,-1,1],[9,-9,3,7,-2,-7],[-1,-4,3,5,5,-2],[-10,-4,9,10,-9,-7],[4,10,-4,-5,-8,-4],[-4,-4,2,4,2,2],[1,-9,1,-5,-2,3],[2,9,-4,10,-1,-8],[2,-5,-8,-6,-9,9],[3,-4,-9,-2,-4,10]],[[5,5,4,-9,5,-1],[-10,-4,-3,8,-7,2],[-9,8,7,-1,-5,10],[-2,-6,-4,-10,3,3],[6,-4,4,-2,2,6],[7,-4,8,2,5,-6],[4,-1,-9,4,4,10],[-4,10,-2,7,-8,2],[5,5,-3,-8,7,5],[-4,1,7,-7,-6,6],[5,-7,-4,-10,-4,-10]],[[-4,-3,8,6,7,1],[1,-4,4,6,3,4],[-2,-8,-7,-3,-9,-3],[4,-8,-5,6,4,4],[8,-9,3,10,-8,-4],[-9,8,-3,4,8,-2],[-10,10,6,3,-4,-7],[-4,2,7,8,3,3],[-9,-7,8,2,6,1],[-8,8,-5,-8,-1,-4],[8,-4,10,-9,4,-5]],[[-3,-10,3,-1,-6,-4],[3,3,-6,-2,-8,5],[6,6,10,-2,-2,-4],[-6,7,-3,6,-5,-9],[5,-5,-2,3,-6,7],[2,-9,-4,9,-7,3],[-9,5,7,5,7,-6],[-2,-6,10,4,-5,-8],[7,2,-6,-3,3,9],[4,-3,-5,10,8,6],[1,1,5,8,7,-6]],[[-4,-7,7,-8,-9,-1],[-8,2,1,5,9,10],[5,8,10,6,2,-1],[-7,-1,-8,3,-7,5],[4,-2,7,-1,-1,-6],[-2,3,4,-5,4,1],[10,9,8,5,-5,-9],[8,3,-8,10,-1,-5],[8,-8,-10,6,1,-7],[-1,-3,9,7,1,-7],[-10,10,-10,6,9,-2]],[[-3,6,4,-6,-6,-9],[10,-2,-7,1,-6,9],[-8,-5,1,3,-4,9],[-2,2,4,5,-9,-9],[6,6,-1,-7,1,3],[9,-7,6,-10,-3,-8],[-6,-4,-10,1,-1,7],[3,-10,-5,-8,10,7],[3,4,-2,4,-7,-4],[1,2,-2,5,-4,10],[9,-4,-3,-7,-10,4]],[[-5,-1,7,1,1,-10],[-4,-10,10,-8,10,-2],[-4,-1,9,-6,4,-1],[5,8,5,10,-3,-8],[2,5,-7,-7,3,-5],[5,-1,3,9,1,-3],[-7,6,3,4,7,9],[6,6,6,-4,-7,10],[-6,-5,8,3,-10,7],[10,-9,3,-4,-4,8],[6,-10,8,2,-1,-1]],[[4,6,5,-7,7,6],[4,8,-2,7,-10,-10],[9,4,-6,10,-1,8],[-4,-10,3,-10,6,4],[-6,-6,9,7,-6,7],[6,-6,8,2,6,-2],[8,5,-9,1,-1,-4],[-1,-8,1,-10,7,-3],[-7,6,5,-4,7,6],[-10,3,-6,-2,9,-3],[-9,7,-9,10,3,9]]], dtype = "int64")#candidate|5019|(11, 11, 6)|const|int64
bop_5020 = relay.right_shift(const_5018.astype('int64'), relay.reshape(const_5019.astype('int64'), relay.shape_of(const_5018))) # shape=(11, 11, 6)
func_3337_call = mod.get_global_var('func_3337')
func_3339_call = mutated_mod.get_global_var('func_3339')
call_5030 = relay.TupleGetItem(func_3337_call(), 0)
call_5031 = relay.TupleGetItem(func_3339_call(), 0)
output = relay.Tuple([bop_5020,call_5030,])
output2 = relay.Tuple([bop_5020,call_5031,])
func_5048 = relay.Function([], output)
mod['func_5048'] = func_5048
mod = relay.transform.InferType()(mod)
mutated_mod['func_5048'] = func_5048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5048_call = mutated_mod.get_global_var('func_5048')
call_5049 = func_5048_call()
output = call_5049
func_5050 = relay.Function([], output)
mutated_mod['func_5050'] = func_5050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1862_call = mod.get_global_var('func_1862')
func_1864_call = mutated_mod.get_global_var('func_1864')
call_5070 = relay.TupleGetItem(func_1862_call(), 1)
call_5071 = relay.TupleGetItem(func_1864_call(), 1)
func_1372_call = mod.get_global_var('func_1372')
func_1375_call = mutated_mod.get_global_var('func_1375')
var_5076 = relay.var("var_5076", dtype = "float32", shape = (720,))#candidate|5076|(720,)|var|float32
call_5075 = relay.TupleGetItem(func_1372_call(relay.reshape(var_5076.astype('float32'), [10, 8, 9])), 1)
call_5077 = relay.TupleGetItem(func_1375_call(relay.reshape(var_5076.astype('float32'), [10, 8, 9])), 1)
uop_5091 = relay.log(call_5070.astype('float64')) # shape=(1, 8, 9)
uop_5093 = relay.log(call_5071.astype('float64')) # shape=(1, 8, 9)
bop_5097 = relay.greater(uop_5091.astype('bool'), relay.reshape(call_5070.astype('bool'), relay.shape_of(uop_5091))) # shape=(1, 8, 9)
bop_5100 = relay.greater(uop_5093.astype('bool'), relay.reshape(call_5071.astype('bool'), relay.shape_of(uop_5093))) # shape=(1, 8, 9)
bop_5108 = relay.not_equal(uop_5091.astype('bool'), relay.reshape(call_5070.astype('bool'), relay.shape_of(uop_5091))) # shape=(1, 8, 9)
bop_5111 = relay.not_equal(uop_5093.astype('bool'), relay.reshape(call_5071.astype('bool'), relay.shape_of(uop_5093))) # shape=(1, 8, 9)
bop_5112 = relay.subtract(uop_5091.astype('uint8'), relay.reshape(bop_5108.astype('uint8'), relay.shape_of(uop_5091))) # shape=(1, 8, 9)
bop_5115 = relay.subtract(uop_5093.astype('uint8'), relay.reshape(bop_5111.astype('uint8'), relay.shape_of(uop_5093))) # shape=(1, 8, 9)
func_4174_call = mod.get_global_var('func_4174')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_5117 = relay.TupleGetItem(func_4174_call(relay.reshape(var_5076.astype('float32'), [10, 8, 9])), 0)
call_5118 = relay.TupleGetItem(func_4176_call(relay.reshape(var_5076.astype('float32'), [10, 8, 9])), 0)
uop_5126 = relay.cosh(bop_5097.astype('float64')) # shape=(1, 8, 9)
uop_5128 = relay.cosh(bop_5100.astype('float64')) # shape=(1, 8, 9)
output = relay.Tuple([call_5075,var_5076,bop_5112,call_5117,uop_5126,])
output2 = relay.Tuple([call_5077,var_5076,bop_5115,call_5118,uop_5128,])
func_5132 = relay.Function([var_5076,], output)
mod['func_5132'] = func_5132
mod = relay.transform.InferType()(mod)
var_5133 = relay.var("var_5133", dtype = "float32", shape = (720,))#candidate|5133|(720,)|var|float32
output = func_5132(var_5133)
func_5134 = relay.Function([var_5133], output)
mutated_mod['func_5134'] = func_5134
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5158 = relay.const([[[-8,7,10,2],[-9,-10,4,5],[-8,-7,-1,-9],[9,-7,8,-4],[6,6,-3,3],[-1,10,-8,-7],[6,-7,1,1],[2,7,-7,-6],[-10,-10,3,6],[-4,-1,3,-1],[4,-5,3,-6],[-4,-7,-2,6],[5,7,-7,6],[-1,-6,-7,-3],[-6,-5,-6,6],[-4,3,-3,-7]],[[6,10,7,7],[-3,2,1,-2],[-6,7,-9,-4],[-3,-6,9,-9],[-9,8,-5,6],[9,9,-3,-8],[7,5,-8,9],[-9,10,-10,10],[-7,7,-5,-1],[1,8,-10,-7],[4,5,2,-3],[-8,-8,1,-2],[-8,10,2,-2],[9,8,-6,8],[-6,2,-6,-8],[10,-7,-6,9]],[[5,-9,-1,9],[1,-1,2,-9],[-4,-6,-7,-7],[2,8,-2,-2],[-6,-6,-2,-9],[4,-9,1,5],[-8,6,-9,10],[6,9,-7,-6],[2,2,-7,-4],[-10,9,1,-5],[-7,4,-3,-7],[-4,-8,7,-6],[6,-2,8,5],[-1,7,6,-2],[-2,-1,3,-5],[-6,8,7,-2]],[[-1,-5,2,-6],[2,-6,-5,5],[7,4,4,6],[4,-3,9,5],[2,10,-2,7],[-8,-6,3,2],[-7,-9,8,3],[3,-7,3,-4],[-4,1,9,-3],[2,1,1,7],[-10,3,4,-9],[3,-9,8,3],[6,-1,1,3],[3,1,7,-4],[-6,2,2,-7],[7,-1,-9,-10]],[[-6,3,7,1],[10,-4,9,4],[4,5,7,-10],[10,-3,4,8],[-6,-9,7,-3],[-3,-5,-4,8],[-3,5,-5,-8],[4,5,-7,-2],[-4,-8,-3,7],[7,-6,1,2],[-7,7,9,6],[-9,3,-6,10],[6,-10,-8,-2],[-10,-9,-2,-6],[5,-10,9,8],[-1,-3,-6,4]],[[3,-8,2,8],[-8,-3,-8,-1],[10,-7,-1,4],[-6,8,2,-3],[-7,-5,-10,-1],[4,1,2,-4],[5,-1,8,8],[-4,7,8,10],[8,-4,-2,7],[8,-7,9,-1],[5,-3,-9,9],[7,9,4,1],[-9,-10,-8,7],[6,4,-5,2],[-9,5,5,-1],[-9,-8,-2,-5]],[[-3,-1,6,9],[-2,-9,-2,-9],[7,-8,9,7],[-2,9,5,4],[-2,3,1,-8],[-6,1,10,-8],[-5,9,6,10],[-2,-1,-4,9],[9,4,1,-4],[10,5,-5,-5],[9,-2,4,2],[-2,5,9,-4],[3,8,-9,-2],[-8,-7,8,-5],[9,-2,1,9],[9,1,-9,6]],[[-10,-7,-9,-8],[-6,3,-10,-2],[6,-2,-10,-2],[8,-8,-6,-8],[-1,5,-5,-8],[-9,-8,-7,-8],[4,2,4,6],[-5,8,9,10],[-4,-7,-10,-2],[5,-8,8,-9],[-9,-10,-5,6],[9,5,-1,-5],[10,1,-10,-8],[3,-9,-5,5],[1,6,2,-8],[-5,8,-8,10]],[[8,7,-6,-2],[1,8,-2,-10],[10,9,-10,-2],[1,-1,-6,6],[-4,-1,6,-7],[-7,-4,10,9],[10,10,4,4],[-4,2,-8,4],[-1,-10,10,-7],[4,5,-5,-4],[10,-4,-7,-10],[7,-3,-2,7],[-5,4,4,-2],[1,2,2,1],[-1,-8,5,-1],[2,7,2,1]],[[1,-3,-5,5],[4,1,3,-8],[9,3,6,8],[10,3,-1,1],[8,-7,9,-10],[-9,-9,-5,9],[4,9,7,-7],[-5,1,5,-6],[-6,-7,-6,9],[7,2,-6,-5],[-4,-8,2,-10],[-6,-10,4,5],[2,-8,6,-8],[7,5,10,4],[2,4,7,-8],[-8,-7,6,-4]],[[-1,-9,-2,-2],[-4,2,4,-7],[-8,-10,-7,-2],[-9,-7,9,7],[6,9,-2,6],[-7,-1,4,7],[9,9,-8,-2],[9,5,-3,-10],[-8,-6,1,6],[2,-8,5,8],[-5,-1,9,-1],[5,6,8,-8],[6,-7,-7,4],[-8,8,8,-9],[-5,7,6,-2],[-5,8,6,-2]],[[-1,9,9,9],[-6,3,5,8],[-4,3,4,-10],[6,4,5,4],[2,6,-7,-3],[4,-6,9,8],[-8,3,6,10],[-1,-4,8,-4],[3,4,-9,-4],[4,-1,-5,-6],[9,2,-1,9],[-7,-10,-5,7],[-8,-10,9,-9],[6,-4,10,2],[9,7,8,-4],[1,10,-2,-3]],[[-8,-7,-9,-10],[6,-3,-5,-6],[-3,-4,10,-6],[4,6,2,6],[4,-9,-10,7],[-4,-2,7,3],[4,-9,-7,-5],[2,9,-5,-8],[-8,4,-5,-4],[1,-9,-8,8],[-10,-6,3,-10],[-7,1,-5,2],[5,1,-7,10],[-3,-6,-9,-2],[-3,-8,2,-1],[6,-2,10,-4]],[[8,-4,10,-4],[-1,5,7,1],[-8,6,6,10],[1,4,-3,-4],[-4,9,2,-9],[4,-3,3,-2],[-4,2,8,-1],[-3,-8,-3,-1],[-3,-3,4,6],[-7,-10,6,1],[10,7,7,-5],[-4,9,7,8],[-2,5,-2,5],[-1,-10,-9,-4],[-4,7,2,2],[-6,7,4,-5]]], dtype = "int8")#candidate|5158|(14, 16, 4)|const|int8
var_5159 = relay.var("var_5159", dtype = "int8", shape = (14, 16, 4))#candidate|5159|(14, 16, 4)|var|int8
bop_5160 = relay.logical_xor(const_5158.astype('int8'), relay.reshape(var_5159.astype('int8'), relay.shape_of(const_5158))) # shape=(14, 16, 4)
output = relay.Tuple([bop_5160,])
output2 = relay.Tuple([bop_5160,])
func_5163 = relay.Function([var_5159,], output)
mod['func_5163'] = func_5163
mod = relay.transform.InferType()(mod)
var_5164 = relay.var("var_5164", dtype = "int8", shape = (14, 16, 4))#candidate|5164|(14, 16, 4)|var|int8
output = func_5163(var_5164)
func_5165 = relay.Function([var_5164], output)
mutated_mod['func_5165'] = func_5165
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5170 = relay.var("var_5170", dtype = "float32", shape = (15, 12, 14))#candidate|5170|(15, 12, 14)|var|float32
var_5171 = relay.var("var_5171", dtype = "float32", shape = (15, 12, 14))#candidate|5171|(15, 12, 14)|var|float32
bop_5172 = relay.less_equal(var_5170.astype('bool'), relay.reshape(var_5171.astype('bool'), relay.shape_of(var_5170))) # shape=(15, 12, 14)
output = bop_5172
output2 = bop_5172
func_5179 = relay.Function([var_5170,var_5171,], output)
mod['func_5179'] = func_5179
mod = relay.transform.InferType()(mod)
var_5180 = relay.var("var_5180", dtype = "float32", shape = (15, 12, 14))#candidate|5180|(15, 12, 14)|var|float32
var_5181 = relay.var("var_5181", dtype = "float32", shape = (15, 12, 14))#candidate|5181|(15, 12, 14)|var|float32
output = func_5179(var_5180,var_5181,)
func_5182 = relay.Function([var_5180,var_5181,], output)
mutated_mod['func_5182'] = func_5182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4641_call = mod.get_global_var('func_4641')
func_4642_call = mutated_mod.get_global_var('func_4642')
call_5216 = func_4641_call()
call_5217 = func_4641_call()
func_2452_call = mod.get_global_var('func_2452')
func_2454_call = mutated_mod.get_global_var('func_2454')
call_5232 = func_2452_call()
call_5233 = func_2452_call()
func_1317_call = mod.get_global_var('func_1317')
func_1321_call = mutated_mod.get_global_var('func_1321')
const_5235 = relay.const([[8,6,-9,-4],[7,3,-1,-10],[-4,7,-1,-3],[7,3,-3,-8],[4,-8,-8,-10],[-8,-5,-3,-3],[1,-4,-1,9],[2,-7,7,-6],[1,4,6,4],[-6,-2,-2,-7],[-7,7,7,5],[-10,-4,8,-7],[-4,10,-2,4],[1,-10,-3,8],[-5,-9,5,-4],[6,1,10,5],[-7,-5,-9,-1],[-9,5,-6,-3],[2,-7,-7,1],[1,-7,7,6],[-7,7,4,-6],[8,6,-8,9],[2,-4,-7,2],[6,8,3,9],[6,6,3,4],[7,7,10,3],[2,-1,-4,-4],[4,6,-5,-7],[-1,5,-9,7],[-9,-9,-2,1],[2,10,6,-8],[5,8,-9,5],[10,-5,-6,-4],[9,-6,-8,3],[-10,7,9,8],[9,6,-1,-7],[-10,9,-7,3],[-6,6,-7,-5],[-4,-4,-10,-8],[8,-7,4,9],[8,-10,-1,-8],[-3,1,3,-6],[10,1,2,-1],[3,9,-3,1],[-6,-4,-5,4],[-9,7,-2,-1],[3,-4,-9,-7],[-4,10,-7,-1],[-6,-10,1,9],[10,2,-9,4],[-4,6,5,8],[10,-9,10,9],[-6,7,4,5],[-1,4,1,1],[6,1,-3,-1],[6,1,1,-2],[-1,-4,6,-7],[-8,9,10,-5],[9,10,-4,6],[-2,-5,-9,1],[5,-4,-7,-8],[-3,6,-6,10],[8,9,10,9],[-2,-6,-1,-10],[-2,-7,-5,-4]], dtype = "uint16")#candidate|5235|(65, 4)|const|uint16
call_5234 = relay.TupleGetItem(func_1317_call(relay.reshape(const_5235.astype('uint16'), [2, 10, 13]), relay.reshape(const_5235.astype('uint16'), [2, 10, 13]), relay.reshape(const_5235.astype('bool'), [2, 10, 13]), ), 2)
call_5236 = relay.TupleGetItem(func_1321_call(relay.reshape(const_5235.astype('uint16'), [2, 10, 13]), relay.reshape(const_5235.astype('uint16'), [2, 10, 13]), relay.reshape(const_5235.astype('bool'), [2, 10, 13]), ), 2)
output = relay.Tuple([call_5216,call_5232,call_5234,const_5235,])
output2 = relay.Tuple([call_5217,call_5233,call_5236,const_5235,])
func_5238 = relay.Function([], output)
mod['func_5238'] = func_5238
mod = relay.transform.InferType()(mod)
output = func_5238()
func_5239 = relay.Function([], output)
mutated_mod['func_5239'] = func_5239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_738_call = mod.get_global_var('func_738')
func_739_call = mutated_mod.get_global_var('func_739')
call_5271 = relay.TupleGetItem(func_738_call(), 0)
call_5272 = relay.TupleGetItem(func_739_call(), 0)
uop_5281 = relay.asinh(call_5271.astype('float64')) # shape=(1, 8, 9)
uop_5283 = relay.asinh(call_5272.astype('float64')) # shape=(1, 8, 9)
func_1157_call = mod.get_global_var('func_1157')
func_1159_call = mutated_mod.get_global_var('func_1159')
call_5284 = func_1157_call()
call_5285 = func_1157_call()
output = relay.Tuple([uop_5281,call_5284,])
output2 = relay.Tuple([uop_5283,call_5285,])
func_5286 = relay.Function([], output)
mod['func_5286'] = func_5286
mod = relay.transform.InferType()(mod)
mutated_mod['func_5286'] = func_5286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5286_call = mutated_mod.get_global_var('func_5286')
call_5287 = func_5286_call()
output = call_5287
func_5288 = relay.Function([], output)
mutated_mod['func_5288'] = func_5288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3337_call = mod.get_global_var('func_3337')
func_3339_call = mutated_mod.get_global_var('func_3339')
call_5292 = relay.TupleGetItem(func_3337_call(), 0)
call_5293 = relay.TupleGetItem(func_3339_call(), 0)
func_2936_call = mod.get_global_var('func_2936')
func_2938_call = mutated_mod.get_global_var('func_2938')
call_5355 = relay.TupleGetItem(func_2936_call(), 0)
call_5356 = relay.TupleGetItem(func_2938_call(), 0)
const_5374 = relay.const([[[4.102840,5.552054,-2.778327,8.753372],[8.256421,-7.985867,-4.089711,7.347724],[-2.490905,-7.411652,-0.474226,-7.744636],[-3.040124,-4.356120,-9.935578,3.234462],[-3.498158,-0.068162,-3.969510,-0.694360],[-6.785434,3.429142,-8.373322,-4.202598],[4.081795,-2.573882,-0.872065,4.212776],[-7.010336,7.741151,-7.932931,-8.927792],[1.242234,3.202418,-0.748551,4.599909],[9.669945,0.752231,1.262712,-7.544812]],[[-5.141980,-3.099506,9.384784,3.288935],[-3.086405,-1.846979,-0.681327,3.209412],[-5.964345,3.930776,-0.125555,8.052300],[9.404290,8.394434,-0.325600,3.142682],[0.703239,9.288304,-2.163159,-0.230632],[4.513427,2.337598,-5.814529,1.605516],[9.901490,5.987704,9.151467,7.892662],[-7.943138,9.565367,-4.497345,9.547620],[5.239785,4.969907,-4.142594,-8.051397],[-5.411434,0.629254,-5.045399,0.877114]],[[8.228572,8.459158,9.449877,-6.029879],[-0.430841,7.209091,-3.643001,-4.375646],[6.976489,9.227192,6.177125,-2.867258],[8.754379,-8.239841,-0.135712,-2.042994],[0.278981,8.487858,-8.158401,-1.341459],[2.594881,-0.327885,-2.407208,6.108975],[-8.677597,2.754582,-7.195416,1.317235],[2.150624,3.807002,-8.581257,-0.579939],[-8.574960,-9.881800,2.837803,7.119206],[-3.123005,-5.779998,-1.473235,9.730263]],[[7.512988,-7.518695,-8.497038,9.740356],[-5.734694,0.483585,-0.172228,-8.146991],[4.950044,-2.629030,4.497590,-6.226300],[6.878354,-6.515714,-8.746922,-1.088719],[3.292090,-9.635821,-7.181044,1.009355],[-4.439391,5.648730,-6.854288,8.432207],[2.248859,-7.897998,4.817463,-5.133597],[-2.264068,-1.891733,-8.070750,-5.597328],[-2.073001,7.955646,-3.090335,0.942259],[-3.831841,-9.464220,-9.937979,-3.253698]],[[2.926986,-1.734997,2.449411,4.043485],[2.861409,7.048271,-3.465717,7.978877],[-6.229732,6.733253,-6.973401,9.324461],[-9.446181,6.936246,-0.825163,-3.042365],[3.116974,-7.945405,1.719187,-6.841184],[-7.482089,4.833686,3.415446,5.502601],[5.760768,-8.596052,9.027100,-7.052634],[4.969229,-8.497564,-7.108389,7.371071],[3.895675,-0.059912,4.265238,1.732340],[-4.113416,-2.505446,-5.735867,1.165843]],[[4.263591,9.401090,-9.419867,-1.697310],[9.037493,1.666105,1.214498,8.444393],[-0.983839,5.639077,-0.705833,8.211820],[7.338117,-3.998421,5.418115,-6.170183],[-2.986576,3.160167,2.897025,-4.974429],[-3.787086,-7.701850,9.541721,-1.041000],[-5.165865,3.041539,2.019587,6.845356],[2.869872,-4.862661,-1.710508,9.075952],[-6.970364,6.856516,-0.289632,-9.122840],[2.248157,-1.525777,2.150400,-7.389810]],[[-1.756482,-0.314839,1.222466,0.201728],[-5.686349,5.847673,-1.856875,2.480239],[-6.037884,-0.498810,-3.841294,3.604073],[-3.781320,-0.016601,0.562236,6.608840],[5.013707,5.170205,5.510336,4.767373],[-9.722422,-8.072060,7.324160,2.838298],[-3.820497,-6.333773,-6.340684,-8.814579],[8.360442,-7.898637,-7.769263,-1.980997],[-8.865222,-2.970284,-9.716433,2.938901],[-7.397750,6.899575,0.682784,4.679479]],[[6.323867,-8.133271,-3.521197,-4.152431],[-3.845995,-5.711410,-3.321361,-5.770664],[-9.723020,-6.203852,-5.846552,7.110431],[-2.406858,-1.284951,6.648771,6.579363],[3.525391,-1.520820,2.892926,4.367631],[-5.547199,-2.146985,-1.213582,7.593398],[7.606182,-7.959532,5.521731,-4.941015],[-6.879431,8.614594,7.660781,-8.961802],[-6.481552,-9.292913,1.869806,8.023475],[1.097705,-6.091638,-2.601070,-8.106513]]], dtype = "float32")#candidate|5374|(8, 10, 4)|const|float32
bop_5375 = relay.power(call_5292.astype('float32'), relay.reshape(const_5374.astype('float32'), relay.shape_of(call_5292))) # shape=(8, 10, 4)
bop_5378 = relay.power(call_5293.astype('float32'), relay.reshape(const_5374.astype('float32'), relay.shape_of(call_5293))) # shape=(8, 10, 4)
output = relay.Tuple([call_5355,bop_5375,])
output2 = relay.Tuple([call_5356,bop_5378,])
func_5391 = relay.Function([], output)
mod['func_5391'] = func_5391
mod = relay.transform.InferType()(mod)
mutated_mod['func_5391'] = func_5391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5391_call = mutated_mod.get_global_var('func_5391')
call_5392 = func_5391_call()
output = call_5392
func_5393 = relay.Function([], output)
mutated_mod['func_5393'] = func_5393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4677_call = mod.get_global_var('func_4677')
func_4679_call = mutated_mod.get_global_var('func_4679')
call_5394 = relay.TupleGetItem(func_4677_call(), 0)
call_5395 = relay.TupleGetItem(func_4679_call(), 0)
func_511_call = mod.get_global_var('func_511')
func_513_call = mutated_mod.get_global_var('func_513')
call_5421 = func_511_call()
call_5422 = func_511_call()
output = relay.Tuple([call_5394,call_5421,])
output2 = relay.Tuple([call_5395,call_5422,])
func_5463 = relay.Function([], output)
mod['func_5463'] = func_5463
mod = relay.transform.InferType()(mod)
output = func_5463()
func_5464 = relay.Function([], output)
mutated_mod['func_5464'] = func_5464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2452_call = mod.get_global_var('func_2452')
func_2454_call = mutated_mod.get_global_var('func_2454')
call_5481 = func_2452_call()
call_5482 = func_2452_call()
func_2263_call = mod.get_global_var('func_2263')
func_2264_call = mutated_mod.get_global_var('func_2264')
call_5485 = func_2263_call()
call_5486 = func_2263_call()
output = relay.Tuple([call_5481,call_5485,])
output2 = relay.Tuple([call_5482,call_5486,])
func_5487 = relay.Function([], output)
mod['func_5487'] = func_5487
mod = relay.transform.InferType()(mod)
mutated_mod['func_5487'] = func_5487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5487_call = mutated_mod.get_global_var('func_5487')
call_5488 = func_5487_call()
output = call_5488
func_5489 = relay.Function([], output)
mutated_mod['func_5489'] = func_5489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2936_call = mod.get_global_var('func_2936')
func_2938_call = mutated_mod.get_global_var('func_2938')
call_5557 = relay.TupleGetItem(func_2936_call(), 0)
call_5558 = relay.TupleGetItem(func_2938_call(), 0)
output = call_5557
output2 = call_5558
func_5572 = relay.Function([], output)
mod['func_5572'] = func_5572
mod = relay.transform.InferType()(mod)
output = func_5572()
func_5573 = relay.Function([], output)
mutated_mod['func_5573'] = func_5573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3305_call = mod.get_global_var('func_3305')
func_3307_call = mutated_mod.get_global_var('func_3307')
call_5668 = relay.TupleGetItem(func_3305_call(), 0)
call_5669 = relay.TupleGetItem(func_3307_call(), 0)
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
var_5677 = relay.var("var_5677", dtype = "int16", shape = ())#candidate|5677|()|var|int16
call_5676 = func_2236_call(relay.reshape(var_5677.astype('int16'), []))
call_5678 = func_2236_call(relay.reshape(var_5677.astype('int16'), []))
func_5238_call = mod.get_global_var('func_5238')
func_5239_call = mutated_mod.get_global_var('func_5239')
call_5682 = relay.TupleGetItem(func_5238_call(), 0)
call_5683 = relay.TupleGetItem(func_5239_call(), 0)
func_2847_call = mod.get_global_var('func_2847')
func_2848_call = mutated_mod.get_global_var('func_2848')
call_5690 = relay.TupleGetItem(func_2847_call(), 0)
call_5691 = relay.TupleGetItem(func_2848_call(), 0)
func_3981_call = mod.get_global_var('func_3981')
func_3985_call = mutated_mod.get_global_var('func_3985')
const_5695 = relay.const([0.887341,6.342997,-3.012259,-7.700829,-9.406367,-4.690059,4.951682,2.518571,4.905537,-0.402176,-5.156772,-9.710864,-3.032835,6.787093,-6.613805,-7.019648,-0.498466,-1.332661,-3.258368,3.739308,7.069712,9.916498,-2.213770,1.425382,-8.232024,0.658700,-1.462304,-1.066905,-3.620438,-2.418503,8.962861,-4.425037,-1.435666,-9.578523,2.045995,3.604534,7.631300,2.854131,7.262049,5.352848,-3.825957,3.729942,-3.266066,-2.359258,6.730727,5.952055,0.704266,0.569890,8.859611,8.699644,1.206494,1.021818,9.328652,7.227889,-2.899124,0.887246,6.808554,6.660298,-4.051528,0.029320,-3.001914,-9.553954,-1.565613,8.301756,-3.702808,0.732241,9.548658,-9.739057,3.436943,-4.217345,0.522168,0.217220,-9.014216,-2.963603,-4.328324,-3.190674,1.861606,-4.530394,-9.355877,4.540323,-8.577702,9.564011,5.659920,7.867497,6.947840,-5.338896,9.066093,9.428990,-5.731799,-2.900850,7.793875,1.129857,-3.528267,5.201895,6.279790,9.332777,0.607731,-6.695133,-3.174689,7.336674,0.900343,-5.830866,1.639867,-4.879375,-1.185202,-1.713424,8.160487,-9.894619,-2.887297,3.243389,-8.717101,4.146108,9.247594,-1.354541,4.823143,2.134029,-9.210201,9.062584,5.826095,4.474312,6.597625,-2.701698,-2.198289,-6.208994,-9.430526,-0.081392,-5.356926,-4.299050,4.934515,6.626866,-8.563839,6.751580,9.797188,8.430621,-0.515763,-0.237973,-9.922001,9.680513,6.798222,0.213923,4.744553,-9.073621,-9.801745,7.664421,8.822775,-4.849188,0.207607,-6.471107,1.893612,5.235185,7.205291,9.741063,-8.317831,-9.018333,-9.410190,7.687517,4.940597,5.443111,-4.909854,-5.521872,6.952495,-7.801705,-6.854873,7.275001,-5.129389,-2.311554,-1.540191,5.981586,-0.215603,-5.218552,-3.077895,-4.228526,0.002872,1.545760,-7.049925,-4.388978,-5.468597,-0.854427,7.019607,-7.430297,-0.843459,9.517128,-3.980745,-1.790557,-2.904663,5.155645,-9.967840,1.078723,8.034894,-0.558354,-7.062913,-6.745072,7.643365,4.321771,-6.419841,-3.068964,-4.775801,-1.174209,-2.328611,3.451926,5.290036,0.178662,-6.310991,-2.177877,8.992911,0.621714,5.652915,0.349981,-3.435509,2.924155,-8.871878,-0.806490,-7.621874,-7.368736,6.209548,1.405880,-3.985358,-1.702302,7.325652,3.386696,9.481521,-8.717499,-3.135209,3.875871,4.959013,2.690719,-1.305418,-4.095143,-4.827187,-7.423645,7.355326,6.245845,-6.615595,-7.513787,-8.521178,1.276897,5.471392,-3.088636,2.368220,-3.712799,-0.024607,-8.065855,3.109093,2.735516,3.755666,8.176653,-9.319989,5.812893,7.135263,-2.928438,0.833605,9.555970,-7.877705,-5.797088,-0.839122,-4.444819,-4.605085,6.390597,5.525188,-0.961417,-7.600134,9.837485,-2.635477,-4.977820,5.912221,7.344704,-3.724630,7.607573,-1.682519,-4.360568,-4.903879,7.525943,9.825031,4.920752,-9.955346,-0.986293,0.182166,9.814846,-6.852682,1.232411,-4.154905,-3.344805,-2.678909,3.251044,8.667229,8.081394,-3.825563,-8.962790,2.821349,4.665343,5.404721,3.974209,4.830419,-7.142630,-8.402954,4.138055,-1.783553,3.972745,1.377958,1.649815,-3.138492,8.151736,-3.033883,-6.502986,1.837387,6.710737,2.184948,2.989996,5.938528,-9.909525,-9.459217,-8.384070,1.951017,1.214013,0.049801,0.707844,0.285162,-8.612538,4.636957,8.491866,-4.816917,8.622015,3.729771,5.049242,1.305794,-6.486342,1.877356,-5.589893,-0.941047,-7.060451,3.397957,8.220114,-8.166334,-4.689939,8.841165,-1.483267,-9.400535,7.046239,-1.606999,-2.844333,9.662197,8.789826,7.965683,4.133543,3.483067,0.283909,-4.360095,7.900947,5.219718,-7.002227,-1.290768,-3.045061,-8.321029,-1.482603,-7.560808,-1.771703,-1.994296,3.343537,-5.121495,2.745069,-6.773934,-1.769650,-5.197199,9.685631,6.811019,-1.243861,-6.866607,-0.029673,-9.163422,6.978401,0.352101,-5.311677,-7.876133,5.755923,3.901986,-7.795247,-8.973215,-0.661655,6.766298,-1.300288,0.559724,-9.043804,5.825154,-2.867932,6.940150,6.267676,-8.783020,-4.905584,8.895704,0.171690,6.515379,-5.114643,-2.389993,-6.419440,-4.501603,-4.763417,8.327593,6.068337,3.133831,-3.396578,3.469147,4.476111,-6.157054,-0.635653,3.864425,-3.335955,-0.826136,-3.296544,2.445849,-9.978970,8.193398,4.999511,8.598710,-5.862209,-3.600649,6.301344,-4.487345,3.029137,2.811219,-2.310593,0.282602,3.130014,9.513980,-2.188922,-6.051592,-7.602854,1.350866,-1.452530,-9.970408,4.929530,8.827629,-2.411121,5.800253,-8.570013,-2.188010,-0.309962,2.861642,9.145601,2.764717,0.893342,-9.041031,-9.018631,2.980370,-8.568316,9.823969,0.988036,-3.492372,-9.556921,8.021564,-2.961963,9.253883,-1.844944,-0.592864,8.626416,7.180635,2.200072,-2.925393,-8.114202,-0.822725,9.857867,-0.188117,4.875018,-4.981370,6.250433,-3.140000,4.076539,-7.486821,0.689015,2.992718,-8.538248,0.258957,-4.920702,2.821067,-4.519131,8.837782,0.748245,-3.750198,2.784650,-4.958051,-2.329995,-0.986484,-1.614138,1.337792,-2.387878,-5.239447,-2.550907,-2.070819,6.498422,5.728923,-8.034294,0.318594,-9.232520,-5.327963,3.128387,-0.241829,3.704869,9.710969,0.458386,4.976379,-7.388773,6.236646,-4.581478,5.374326,1.044851,8.159081,-6.751542,-8.810372,-2.072921,-8.362555,6.675941,3.874632,5.111699,7.516010,-6.083090,-3.900812,-8.433158,3.144744,-3.577456,3.279056,7.424276,9.232203,7.626870,-2.835389,-0.855125,3.848989,-8.421306,-3.709894,-7.009915,-9.835985,2.762045,4.173936,-1.994853,-3.376131,4.031631,7.994517,-1.666977,-3.292676,-4.668777,8.246486,6.438123,-1.164701,8.117402,-2.863716,-3.789601,-1.728520,1.247071,-3.686538,-1.958462,-7.555814,-8.531507,-3.708580,-1.558005,-8.309313,-3.271482,0.046384,4.227883,9.985685,2.013353,-4.378507,-3.460300,0.081123,-5.115096,-0.479742,-0.132293,-5.699390,-9.471131,2.408388,-5.599071,7.858505,7.117731,-6.810945,-5.533211,1.688987,2.704259,-6.053338,7.673535,-8.325264,4.559150,-8.839730,8.237581,-1.495164,-8.686290,9.762847,7.211568,9.158025,1.847887,5.382458,1.615762,3.221740,-1.366289,-5.232312,7.623326,2.303117,2.972571,-8.294110,4.048194,-6.154533,-3.428956,-8.929392,-0.807029,-4.247479,3.606592,-6.436363,3.353326,-0.927564,7.923128,3.003530,1.579452,7.067078,-7.978697,6.172124,-4.520521,2.973098,9.484258,-8.669575,0.341298,-4.630159,7.272550,7.105364,-9.643915,-4.162414,2.437393,6.233448,0.516673,8.484224,-3.390497,9.258313,3.363169,-8.160814,-3.892264,-2.300703,8.179954,-5.645819,9.060563,5.267398,1.410413,7.282054,1.453805,0.187942,3.989575,4.864274,-3.752550,-2.461056,8.140503,-6.960263,-6.541527,-4.662930,1.074798,-2.688656,-3.392986,4.863946,7.993494,-7.914611,9.292702,6.054010,8.085987,-4.247671,0.634999,2.585426,1.836935,-2.815800,-2.370960,-5.367580,-4.862531,1.154281,-3.667607,-3.216814,5.937062,0.146014,2.767134,-0.362035,0.284828,-3.186005,8.035463,1.670534,9.338290,-9.336601,-2.956949,-7.475010,4.421795,-3.412649,-4.262913,-5.589058,3.504062,-3.151966,-3.026574,0.805310,2.661754,6.413613,3.983441,-6.643581,-5.742115,3.762784,5.503651,6.342275,2.500183,-7.372479,9.485217,1.413489,-1.861197,4.857045,-2.855707,-9.745633,-6.395942,7.843723,3.754378,-6.522627,-5.902979,-5.441808,4.438772,4.671745,8.233575,-4.327168,-0.154197,-0.581366,7.056479,7.302859,-7.460433,-3.614166,8.814388,0.987359,6.828774,4.555859,0.269956,8.853065,0.851931,2.592616,-4.029002,0.389490,7.975973,-1.932552,1.293902,2.686990,0.130569,-9.541637,3.488907,5.112893,-7.209946,-7.905525,2.947832,-0.912386,-7.157397,0.082288,-0.426876,2.201396,-2.881600,-2.766162,-0.464061,-9.772960,8.123209,-9.737698,-0.424341,3.149291,-2.050270,-3.507909,6.710476,3.453322,-6.088687,4.389187,7.551822,-8.184427,-8.921694,-5.479029,-2.021101,-7.576505,8.435617,-0.142859,2.833845,-0.475587,-0.038716,9.795647,-7.887304,9.290864,6.173536,2.242375,-2.256183,5.801073,-0.272706,5.841318,-9.363303,7.078150,-4.407786,8.565198,6.709383,-9.973757,-2.099167,-8.761623,-5.554899,3.658677,-5.540043,-1.445698,-8.957603,7.249705,1.823438,-7.307210,-0.071708,-6.599404,3.242977,-0.443456,2.232349,-1.856852,-7.521702,-8.786648,8.373369,4.855503,-9.861187,-7.709987,9.416517,-6.661397,-7.147231,-0.588357,-6.401848,0.586351,-8.034790,-5.703564,-6.128131,3.439517,7.417671,5.496007,6.896656,-8.322384,8.771386,-1.788147,-8.189079,8.405868,5.903688,-3.353228,-8.116930,-5.050673,8.263014,8.518912,2.924445,3.392212,-8.650671,9.321084,9.847195,-4.941769,-3.520056,0.920593,4.766205,7.240135,-0.877609,-2.882848,-8.713278,7.008771,8.617256,2.966385,9.852740,-7.568367,-2.414483,1.520753,6.923066,-7.103794,-5.592120,4.670871,-8.015983,1.162697,-3.236640,-0.404466,-8.564358,-0.904251,-7.215619,-8.733880,-4.302046,3.908881,5.479503,-1.189359,-8.762201,-1.192438,-3.644222,-8.032678,7.408384,4.518420,2.670508,-5.867799,6.048205,-4.335747,-5.847274,8.405697,5.420688,1.855557,9.905030,3.018214,-7.225889,9.623579,7.470404,-6.645996,9.812123,-7.974798,8.242943,-5.748274,-9.898418,-6.514003,4.044696,6.073674,-2.703608,9.639699,2.821112,-0.755079,2.437855,-7.827727,0.390372,1.569720,4.281698,-1.514431,-8.125929,0.294187,1.328247,4.311901,-8.475522,1.818312,-7.824053,-8.666697,7.526819,7.417291,-2.070717,-8.235263,-7.752394,-8.322862,4.472044,-6.358703,8.222136,-6.161043,2.291429,-7.405245,5.111643,6.676818,-2.463924,3.537055,-9.390012,-3.485973,-2.903673,-4.254469,-9.008000,-5.754489,5.659077,9.735245,5.964175,5.144382,-3.653665,-6.359669,8.377830,2.844972,4.986767,-9.600471,2.145942,8.925959,1.257246,8.583442,-0.280359,5.688779,-3.255535,6.160368,1.209501,2.682308,-4.804624,6.743774,2.442669,8.879425,1.065032,-5.527887,5.836584,-5.191327,3.795597,-5.472535,-7.784767,-3.832630,8.804386,-9.690230,-7.149248,-7.518945,2.043128,2.146699,-0.540750,3.340530,-8.019939,-7.665723,0.484016,-5.024082,-0.865985,7.647928,-7.258656,-1.659728,2.595851,-5.956469,-2.634462,-4.294610,-2.797554,-7.333339,-5.658110,-5.092473,6.830978,-8.857178,-9.702373,5.918883,-8.022710,2.410169,-4.943457,-1.635654,-5.043130,-1.448691,5.771605,-2.978866,-5.012184,-1.764438,-7.531394,1.281971,1.432659,4.140931,-4.041879,3.115257,7.059659,7.716722,-0.630519,2.422764,0.268294,4.512402,-9.138896,-2.090152,-8.241176,9.428457,-3.129134,-5.554336,7.168300,9.909220,-7.198791,-5.983014,8.204523,-9.590317,1.254252,-4.857405,2.908363,7.383442,8.271517,-0.729850,-7.728425,-2.445279,-0.662553,-0.415679,-4.321680,3.442243,-5.237455,-9.321564,1.508154,6.248438,-1.294437,3.179333,3.570310,1.502648,7.335620,-7.422774,-2.432826,-0.748823,5.098193,-4.414033,-3.908111,6.722406,5.971337,-1.434816,-0.485870,2.935358,1.205727,-3.842447,5.647068,1.723619,1.065822,-2.505958,-4.653274,-3.722946,4.926885,-5.335998,-3.207909,6.008659,8.126278,-4.742396,1.408201,1.524101,6.470628,-8.891554,3.542995,8.283360,4.728248,-0.486739,-9.063652,-7.774594,7.126810,5.469457,-6.591386,0.171171,-7.295232,8.566641,3.433643,-5.952557,-1.638654,1.758291,-9.423809,-0.736440,-7.505358,0.969126,6.180879,1.706024,-9.763610,-3.388935,7.335621,3.057335,0.550619,2.893820,2.486678,8.249979,-2.010204,0.115829,7.999236,9.053074,3.190751,-4.236416,-2.728566,2.544929,-3.505550,2.522758,-0.203290,8.838648,1.313542,-5.552692,-9.238601,-9.815467,9.125297,1.602179,1.381239,-1.323285,-3.212598,2.367421,-1.131919,8.307019,-9.057117,-9.987253,8.054689,-2.104310,0.039450,6.934927,9.698330,-7.887008,-5.882437,4.574210,-4.454755,-9.537364,6.316457,5.574056,-0.280576,-4.481345,6.958093,9.906804,9.619011,5.591031,0.189849,-2.440028,-1.057792,1.855574,0.083902,-3.013632,-6.154865,-1.527333,-2.654313,-6.767246,-0.164394,4.087540,7.664985,4.019757,5.357073,7.939598,4.941849,0.620581,3.356822,-4.601725,7.083297,-1.247667,3.102407,2.989499,2.092683,1.605834,7.927782,1.185638,5.665880,0.608356,-2.932651,3.626552,-4.881582,7.646482,8.008798,-5.352411,5.174642,5.382138,0.990990,-0.716175,-3.194415,5.198632,3.539202,-4.474658,5.641625,6.078238,7.019931,6.331898,2.746103,2.743282,7.043873,6.131691,-2.081627,3.289108,-7.975632,-7.894704,4.591097,-7.892167,4.368842,-6.474800,-5.275387,-4.066902,-0.827395,4.808186,-6.959010,4.959338,1.859513,-9.375562,2.837612,7.565505,-8.862460,-9.282730,6.438088,-8.858960,6.826224,0.329485,-8.866337,5.949871,-7.635202,-0.314425,4.921481,-1.767494,-8.483042,5.078663,-7.423730,0.215145,-5.057231,6.930831,-8.000893,-6.101227,-0.408856,5.637215,1.302603,0.346450,-0.722135,4.133144,8.986078,-2.613034,-3.675194,7.010390,-2.084883,4.702519,-6.298583,4.006450,-4.630668,4.812454,5.650050,5.072367,4.418832,-6.305453,-4.260379,-6.423832,3.181934,-1.533851,-3.488046,4.858058,-9.445258,0.852877,3.074420,-0.204537,4.416824,-3.421035,-3.434812,1.371980,-6.063128,5.485767,6.139614,0.753729,-1.607793,8.048391,5.083653,-9.201782,2.415796,1.843243,-3.229508,9.358661,7.450265,-7.515530,1.143617,4.935188,-1.221749,1.430062,-9.452533,-0.600139,-1.995162,6.053601,-2.663324,5.378667,-1.473982,-5.685182,-2.020459,-2.040235,0.076567,-7.317676,-3.323790,2.780452,-1.413843,9.447623,4.277778,-2.127255,9.536708,0.709177,4.543426,7.719136,3.878391,-8.034932,9.004349,0.516794,8.121712,-3.668096,-1.704843,-1.648076,-1.100260,6.493978,-4.195623,3.354607,-7.070942,3.829023,1.846704,5.978960,2.568593,4.638017,-4.358425,1.662741,-8.244477,3.395559,5.275385,4.611776,7.207271,6.052733,-7.551584,0.146522,-1.974508,-9.474993,-3.995765,-2.408659,3.420304,-7.228667,2.176617,-2.639298,6.853454,-6.745760,3.609240,-4.024114,-8.085055,-3.772280,-5.139255,3.915712,5.491878,7.857786,1.206275,9.922917,5.934086,-0.335139,4.347738,-2.796344,5.356151,-4.889877,-3.735486,6.946197,-7.730910,-5.951113,-0.223188,3.086109,7.985427,2.344369,9.923295,-1.191010,-7.527394,3.763355,3.093322,6.826200,-2.306994,7.483811,-3.829702,2.928872,3.268652,-7.288874,-1.934489,1.829737,-7.140694,-5.004003,4.374955,-7.132189,-9.444808,9.314023,8.430661,-0.090784,-6.215984,-4.808267,-5.417957,-3.870276,3.473618,9.967084,-5.003798,-1.537361,0.349107,-0.422936,3.381979,2.058453,-1.851143,8.757448,1.334900,5.437248,6.151050,-9.067760,-2.398484,7.237860,3.407664,4.841534,3.899021,-4.303822,-2.393120,1.638021,0.499060,3.960714,-1.392876,1.840342,-7.996721,1.100779,0.385164,-6.859269,-7.744288,5.756278,-4.077723,-4.671941,-0.538145,5.907091,3.616040,-1.820747,2.631653,3.086506,-0.689752,6.862942,9.088353,3.032887,-2.725992,-9.212335,5.830354,8.830440,-7.219671,-5.160674,-3.691607,-1.041571,-5.399608,5.239251,-6.868922,3.649096,6.629429,-4.579554,-4.304566,7.475600,7.509146,2.318397,-6.879280,-8.104994,-4.905357,2.460297,-4.883023,3.554402,4.457176,-3.274640,8.569895,-9.856468,-1.218207,1.747961,-6.397932,-7.517896,2.212096,6.796408,-7.691770,-8.626943,-6.913620,4.071620,9.487133,0.988882,8.099269,3.804100,-3.324886,-3.132590,-8.342979,6.442741,-4.373177,-4.412928,1.533502,1.698621,1.992173,4.876499,-8.768576,8.974590,0.798951,-7.577713,-9.397012,3.192374,8.042339,-6.997951,7.746888,1.219601,9.718777,3.541817,0.396624,-8.803615,8.238772,-1.720470,-8.800923,6.518972,-9.736739,9.025122,0.190396,2.814102,-1.729196,-0.441086,7.176033,2.799018,5.083257,-8.829285,-1.250581,-9.204370,-7.718095,6.679009,-8.031273,-2.982067,-2.778694,3.413581,-6.290444,-8.443289,-4.669126,-0.035955,-2.856325,-4.444370,1.926012,-9.865658,3.345871,7.387566,8.289231,4.477161,4.802681,0.498458,4.719748,-4.151049,5.290841,-8.775646,1.954363,-2.056601,-5.298596,-6.493405,2.385754,8.779748,4.604532,-0.164217,3.795312,-1.582084,7.301466,-9.587655,-0.819573,-7.481258,-5.193871,-0.278291,6.445576,5.270212,4.929862,4.162768,8.384649,-5.705354,1.895836,2.646706,-8.718069,-6.801259,5.040019,-9.653067,7.062196,-4.475506,0.980156,3.695352,6.852349,-0.561759,-8.762520,8.904760,3.015556,-6.496616,-4.275247,9.686570,0.970251,-2.086904,0.433433,6.695451,4.343799,-0.088702,-5.522692,0.885639,-3.596350,-4.118082,-1.520645,-3.351672,1.427884,-9.420117,5.155159,-8.779360,9.305197,3.349802,3.930258,4.195747,-2.930819,4.511441,-2.543345,-4.444802,3.413894,5.276545,-2.185894,0.450541,2.447291,1.609444,7.199660,3.538097,-0.774895,8.986554,8.545034,-2.958652,-2.468260,-9.798130,4.551812,-9.841930,-1.694424,-5.649863,7.419491,-5.842847,9.834810,7.618620,-7.058657,-0.717799,-4.959861,-2.015249,-0.207001,3.070241,2.381191,5.036827,4.470991,2.734563,-7.145688,-5.050724,1.925117,-2.635882,9.750029,4.800449,-6.245715,-5.874276,-0.939000,2.866566,-8.242173,0.897956,-2.459347,-8.151693,-5.911188,5.947716,6.803834,9.951185,0.135157,1.302639,4.282604,-4.387531,-8.515689,-6.499191,6.451547,-7.292746,3.970455,1.948726,-5.859005,1.353620,3.351278,2.159018,-0.036237,7.300547,-3.468215,-3.210913,-5.114381,-1.399690,-1.766057,2.634876,-0.348312,4.732638,5.018145,0.341676,-1.952036,7.396654,-7.303406,-2.653298,3.785203,-1.202616,-8.038660,3.713553,7.414825,-6.166320,1.090591,6.009462,2.214134,1.287395,-8.070120,-9.817742,7.088937,-1.662992,1.579431,-3.207970,3.326493,-0.841471,-9.461687,-7.182163,5.109422,1.821840,-0.589453,-7.712258,3.442982,-3.990542,4.399628,-7.299360,-9.694886,-8.376882,5.628592,-0.633186,8.045176,-6.651831,2.067022,9.301882,9.058105,9.653857,8.573370,6.018140,1.383278,-3.738252,6.842769,1.615473,-6.986826,3.662849,-9.961988,-1.510167,-2.772398,6.747105,8.146388,7.308540,5.116564,-8.397077,-9.115652,3.313995,2.594767,-6.252698,-4.330890,3.005733,6.016562,-6.562485,-3.208237,1.493556,-0.586458,-4.241608,3.071857,-1.487034,-8.210801,-0.794599,2.843343,-2.236372,5.927561,7.855273,-3.270268,-8.355867,1.639130,-0.549036,1.590328,-3.083137,-9.801060,1.412479,-7.355679,4.769799,-4.735920,-5.881197,3.633014,4.883861,6.597943,9.203773,1.611646,-0.609507,-6.376378,-5.486635,-6.471477,1.027541,-8.711317,2.894382,1.164222,0.224246,-5.706106,4.527394,0.861298,-3.952141,8.279351,-0.454525,-2.289809,6.229945,0.163049,-4.549861,-1.673009,0.307729,0.667700,-1.439001,8.104738,-0.459995,0.863299,1.468689,-0.754843,3.111850,3.376493,-8.422831,-7.799152,9.863330,-1.691679,-4.855694,5.339095,5.645963,-4.414747,5.164757,7.274862,1.131260,9.891702,1.138059,-6.310419,7.019774,5.437275,5.387861,3.813600,8.372320,1.603603,8.363114,5.507891,9.651222,-8.732120,3.821019,-4.573359,-6.364782,-0.531239,-4.436143,-3.597318,-9.943600,7.838795,-2.557514,-4.433099,-1.372697,8.452063,0.789642,-3.000556,-3.551266,3.390810,7.708349,-3.347991,-8.759856,8.812055,6.506402,-8.429542,0.481752,-0.069270,2.646737,-7.044625,-2.711434,8.969176,-0.190626,-5.791964,-8.079427,3.921371,0.601170,5.943892,-3.877393,-1.739004,-5.842549,9.645594,9.970254,5.390722,3.302545,-1.030651,2.686195,5.637701,-8.716814,-7.167625,9.660119,-5.948773,2.950608,-8.453628,-2.271363,-4.600290,-2.184497,3.750144,7.170260,-0.240444,-1.023273,-6.741289,-6.907366,2.199485,5.758802,9.793228,9.840146,7.052744,9.628582,-7.946097,9.894448,-1.521178,3.956673,7.240527,8.259718,1.048103,-9.108692,8.200378,9.028907,9.688599,2.046449,4.531524,-6.430739,2.799227,1.257749,-1.872546,-1.554502,-8.559535,-2.806913,-2.614116,0.875645,9.707334,9.636148,-3.496138,9.581124,9.409097,-5.325631,-8.431434,-2.973461,-7.194467,2.689545,-8.952377,2.817911,8.261037,-9.166481,3.569216,7.552334,9.410399,-7.139672,7.796014,-8.354685,-1.074366,-2.251869,3.853167,-3.406521,-0.153064,-2.112416,-4.558919,8.800288,0.494961,9.915563,4.897426,4.415636,-0.946672,-7.955287,-1.291990,-9.944942,3.854750,7.718491,7.061170,-2.996615,7.297707,-6.337227,-2.306156,-0.118546,8.455750,2.656407,-3.012792,-3.628273,-5.893081,6.115618,5.881988,6.144207,-2.349811,0.370044,-0.614925,0.988475,8.736005,9.462627,0.717436,0.150392,-4.744388,0.352708,-4.281388,8.361758,-2.749758,4.059323,-6.370308,-1.221414,8.215372,4.002949,7.771860,0.955288,-0.844093,-1.809846,-2.605872,3.307164,-7.365422,-3.271446,-7.864689,6.838640,-4.943175,-4.879573,3.880804,2.712323,-7.664474,3.779428,5.994646,-4.736680,1.431658,2.052421,9.954319,-4.422328,9.376051,-7.578309,-5.434469,-9.186312,-2.632269,-4.472175,2.833946,-0.903232,-2.109691,2.814181,-9.539011,6.253151,-9.967852,-9.402980,5.808068,-5.062754,5.256485,-6.770164,-6.936312,-1.017462,9.314498,2.917004,-2.176396,7.955270,1.013629,-7.607350,-3.568967,5.164844,-4.493100,-5.242984,7.183269,-9.442831,5.764679,-8.193532,0.623451,-1.934304,9.679353,6.593586,2.948537,-6.443244,9.760365,5.255879,3.884410,-8.281015,-5.226038,2.238677,7.193263,-1.407974,0.089787,4.050960,9.343073,0.584456,1.469278,-8.920644,1.726074,8.336811,3.843114,6.780088,5.544969,-1.335225,-2.652437,6.742175,2.582950,2.965166,0.349625,9.543844,-5.845600,5.004953,2.185520,3.129706,0.969383,4.622833,0.574704,3.685667,-1.553783,-0.844244,5.187021,2.215511,7.182395,3.069548,7.040854,9.548074,-4.846145,6.921956,-2.417085,-6.644823,3.639202,-8.126715,-5.985457,5.761090,3.548788,-4.147034,-5.853105,9.989582,-2.315081,-7.439517,7.118182,3.894874,-0.460233,5.865040,5.549108,-6.280223,4.985718,9.979181,-2.515877,-4.344467,-5.869844,4.197765,-5.111937,-6.429168,1.355335,-9.453136,-0.348764,-1.449122,-1.029062,4.023805,-3.260953,-1.233055,-2.524997,6.523666,5.584769,-7.276620,-0.124046,-5.474885,-6.844202,0.758964,7.685371,-0.038502,-0.808935,-6.253704,-0.507184,-5.126433,-3.278005,-1.467398,6.562127,4.738117,-3.142803,-9.267038,3.801251,7.838115,-4.256238,-4.421677,3.486793,0.372247,0.640930,-0.740098,-1.453682,-4.806177,-8.855240,9.222228,3.727151,-4.159511,9.890931,-8.336355,9.646963,-7.490222,6.549092,7.508137,-0.549355,-1.228127,-3.112080,6.774205,1.277031,5.174126,8.739199,5.829086,-8.552432,-5.092675,7.319402,-3.586902,-7.835649,-5.445340,3.772988,-5.444758,-7.204727,-2.552748,-1.900705,2.619455,8.793469,9.171199,-5.185560,4.165703,-3.392941,-2.403100,0.588076,-4.099349,7.174768,1.213377,-8.490805,-9.591241,-1.196150,3.052948,1.110895,-1.251527,-4.730121,2.208882,1.667415,8.240092,-2.832409,6.748225,-0.123397,3.387396,-7.909915,9.018422,0.637661,6.970539,-1.728485,-1.670227,-7.038753,-7.219896,-7.482224,3.408601,2.086075,3.156804,-2.071663,3.825827,-9.345705], dtype = "float32")#candidate|5695|(2240,)|const|float32
call_5694 = relay.TupleGetItem(func_3981_call(relay.reshape(const_5695.astype('float32'), [14, 16, 10]), relay.reshape(const_5695.astype('float32'), [14, 16, 10]), ), 1)
call_5696 = relay.TupleGetItem(func_3985_call(relay.reshape(const_5695.astype('float32'), [14, 16, 10]), relay.reshape(const_5695.astype('float32'), [14, 16, 10]), ), 1)
uop_5721 = relay.sin(const_5695.astype('float32')) # shape=(2240,)
output = relay.Tuple([call_5668,call_5676,var_5677,call_5682,call_5690,call_5694,uop_5721,])
output2 = relay.Tuple([call_5669,call_5678,var_5677,call_5683,call_5691,call_5696,uop_5721,])
func_5737 = relay.Function([var_5677,], output)
mod['func_5737'] = func_5737
mod = relay.transform.InferType()(mod)
mutated_mod['func_5737'] = func_5737
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5738 = relay.var("var_5738", dtype = "int16", shape = ())#candidate|5738|()|var|int16
func_5737_call = mutated_mod.get_global_var('func_5737')
call_5739 = func_5737_call(var_5738)
output = call_5739
func_5740 = relay.Function([var_5738], output)
mutated_mod['func_5740'] = func_5740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4049_call = mod.get_global_var('func_4049')
func_4051_call = mutated_mod.get_global_var('func_4051')
call_5755 = relay.TupleGetItem(func_4049_call(), 1)
call_5756 = relay.TupleGetItem(func_4051_call(), 1)
var_5759 = relay.var("var_5759", dtype = "float32", shape = (10, 8, 9))#candidate|5759|(10, 8, 9)|var|float32
bop_5760 = relay.multiply(call_5755.astype('float64'), var_5759.astype('float64')) # shape=(10, 8, 9)
bop_5763 = relay.multiply(call_5756.astype('float64'), var_5759.astype('float64')) # shape=(10, 8, 9)
func_2897_call = mod.get_global_var('func_2897')
func_2900_call = mutated_mod.get_global_var('func_2900')
call_5777 = relay.TupleGetItem(func_2897_call(relay.reshape(bop_5760.astype('float64'), [720,])), 1)
call_5778 = relay.TupleGetItem(func_2900_call(relay.reshape(bop_5760.astype('float64'), [720,])), 1)
output = relay.Tuple([bop_5760,call_5777,])
output2 = relay.Tuple([bop_5763,call_5778,])
func_5798 = relay.Function([var_5759,], output)
mod['func_5798'] = func_5798
mod = relay.transform.InferType()(mod)
mutated_mod['func_5798'] = func_5798
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5799 = relay.var("var_5799", dtype = "float32", shape = (10, 8, 9))#candidate|5799|(10, 8, 9)|var|float32
func_5798_call = mutated_mod.get_global_var('func_5798')
call_5800 = func_5798_call(var_5799)
output = call_5800
func_5801 = relay.Function([var_5799], output)
mutated_mod['func_5801'] = func_5801
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5825 = relay.var("var_5825", dtype = "float64", shape = (3, 8, 12))#candidate|5825|(3, 8, 12)|var|float64
var_5826 = relay.var("var_5826", dtype = "float64", shape = (3, 8, 12))#candidate|5826|(3, 8, 12)|var|float64
bop_5827 = relay.divide(var_5825.astype('float64'), relay.reshape(var_5826.astype('float64'), relay.shape_of(var_5825))) # shape=(3, 8, 12)
func_2817_call = mod.get_global_var('func_2817')
func_2820_call = mutated_mod.get_global_var('func_2820')
var_5836 = relay.var("var_5836", dtype = "float32", shape = (2940,))#candidate|5836|(2940,)|var|float32
call_5835 = relay.TupleGetItem(func_2817_call(relay.reshape(var_5836.astype('float32'), [14, 14, 15]), relay.reshape(var_5836.astype('float32'), [14, 14, 15]), ), 1)
call_5837 = relay.TupleGetItem(func_2820_call(relay.reshape(var_5836.astype('float32'), [14, 14, 15]), relay.reshape(var_5836.astype('float32'), [14, 14, 15]), ), 1)
func_3745_call = mod.get_global_var('func_3745')
func_3746_call = mutated_mod.get_global_var('func_3746')
call_5851 = relay.TupleGetItem(func_3745_call(), 0)
call_5852 = relay.TupleGetItem(func_3746_call(), 0)
func_496_call = mod.get_global_var('func_496')
func_497_call = mutated_mod.get_global_var('func_497')
call_5882 = relay.TupleGetItem(func_496_call(), 0)
call_5883 = relay.TupleGetItem(func_497_call(), 0)
func_5463_call = mod.get_global_var('func_5463')
func_5464_call = mutated_mod.get_global_var('func_5464')
call_5885 = relay.TupleGetItem(func_5463_call(), 1)
call_5886 = relay.TupleGetItem(func_5464_call(), 1)
output = relay.Tuple([bop_5827,call_5835,var_5836,call_5851,call_5882,call_5885,])
output2 = relay.Tuple([bop_5827,call_5837,var_5836,call_5852,call_5883,call_5886,])
func_5888 = relay.Function([var_5825,var_5826,var_5836,], output)
mod['func_5888'] = func_5888
mod = relay.transform.InferType()(mod)
mutated_mod['func_5888'] = func_5888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5888_call = mutated_mod.get_global_var('func_5888')
var_5890 = relay.var("var_5890", dtype = "float64", shape = (3, 8, 12))#candidate|5890|(3, 8, 12)|var|float64
var_5891 = relay.var("var_5891", dtype = "float64", shape = (3, 8, 12))#candidate|5891|(3, 8, 12)|var|float64
var_5892 = relay.var("var_5892", dtype = "float32", shape = (2940,))#candidate|5892|(2940,)|var|float32
call_5889 = func_5888_call(var_5890,var_5891,var_5892,)
output = call_5889
func_5893 = relay.Function([var_5890,var_5891,var_5892,], output)
mutated_mod['func_5893'] = func_5893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3149_call = mod.get_global_var('func_3149')
func_3151_call = mutated_mod.get_global_var('func_3151')
call_5920 = relay.TupleGetItem(func_3149_call(), 0)
call_5921 = relay.TupleGetItem(func_3151_call(), 0)
func_3172_call = mod.get_global_var('func_3172')
func_3174_call = mutated_mod.get_global_var('func_3174')
call_5922 = relay.TupleGetItem(func_3172_call(), 0)
call_5923 = relay.TupleGetItem(func_3174_call(), 0)
output = relay.Tuple([call_5920,call_5922,])
output2 = relay.Tuple([call_5921,call_5923,])
func_5928 = relay.Function([], output)
mod['func_5928'] = func_5928
mod = relay.transform.InferType()(mod)
mutated_mod['func_5928'] = func_5928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5928_call = mutated_mod.get_global_var('func_5928')
call_5929 = func_5928_call()
output = call_5929
func_5930 = relay.Function([], output)
mutated_mod['func_5930'] = func_5930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3763_call = mod.get_global_var('func_3763')
func_3765_call = mutated_mod.get_global_var('func_3765')
call_5948 = relay.TupleGetItem(func_3763_call(), 0)
call_5949 = relay.TupleGetItem(func_3765_call(), 0)
output = call_5948
output2 = call_5949
func_5958 = relay.Function([], output)
mod['func_5958'] = func_5958
mod = relay.transform.InferType()(mod)
output = func_5958()
func_5959 = relay.Function([], output)
mutated_mod['func_5959'] = func_5959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1636_call = mod.get_global_var('func_1636')
func_1637_call = mutated_mod.get_global_var('func_1637')
call_5995 = relay.TupleGetItem(func_1636_call(), 4)
call_5996 = relay.TupleGetItem(func_1637_call(), 4)
func_4119_call = mod.get_global_var('func_4119')
func_4121_call = mutated_mod.get_global_var('func_4121')
call_6029 = relay.TupleGetItem(func_4119_call(), 0)
call_6030 = relay.TupleGetItem(func_4121_call(), 0)
func_1576_call = mod.get_global_var('func_1576')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_6043 = relay.TupleGetItem(func_1576_call(), 0)
call_6044 = relay.TupleGetItem(func_1577_call(), 0)
output = relay.Tuple([call_5995,call_6029,call_6043,])
output2 = relay.Tuple([call_5996,call_6030,call_6044,])
func_6089 = relay.Function([], output)
mod['func_6089'] = func_6089
mod = relay.transform.InferType()(mod)
mutated_mod['func_6089'] = func_6089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6089_call = mutated_mod.get_global_var('func_6089')
call_6090 = func_6089_call()
output = call_6090
func_6091 = relay.Function([], output)
mutated_mod['func_6091'] = func_6091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4641_call = mod.get_global_var('func_4641')
func_4642_call = mutated_mod.get_global_var('func_4642')
call_6121 = func_4641_call()
call_6122 = func_4641_call()
func_3095_call = mod.get_global_var('func_3095')
func_3098_call = mutated_mod.get_global_var('func_3098')
const_6126 = relay.const([[5.890115,-2.564255],[8.858130,-2.067974],[-2.513039,-8.770151],[6.657884,7.535707],[8.448215,-5.871972],[-0.382344,-3.757483],[7.462501,-6.972122],[6.960846,-7.979924],[8.666101,1.282886],[-7.823871,4.678361],[4.562890,0.834758],[8.395268,-6.965749],[-8.258078,-2.782814],[9.066216,2.363213],[-8.874393,4.900402],[-9.668887,-3.019055],[-9.789015,-5.664915],[6.431546,-5.151701],[-5.958527,-8.854550],[-4.346204,-2.025785],[9.629177,4.867273],[-9.166146,-8.779593],[-5.723620,-5.114288],[4.426983,4.798616],[-8.521102,-0.820923],[7.810125,7.955922],[-3.184616,-0.607170],[-7.849211,1.713483],[4.658697,-6.962782],[-8.290237,8.670705],[-6.611389,4.846571],[-2.577632,-2.493922],[-3.802214,7.248168],[2.289419,6.730035],[-5.687798,-7.319448],[5.034822,-4.439224],[-0.922277,-3.763044],[9.515440,6.843331],[6.044091,-6.814308],[4.878967,3.847861],[5.590547,-1.668658],[5.690028,5.148900],[1.809083,-3.588334],[2.124824,0.451313],[5.698418,-8.365688],[0.907485,9.552262],[-9.716201,3.646410],[-2.400707,-7.830442],[8.863987,-3.058344],[-6.070414,-0.089143],[8.219850,-6.541722],[5.930688,-3.149422],[5.260071,-0.610808],[-3.117082,-8.031138],[4.474773,7.899870],[-1.834911,2.471710],[-6.492260,-6.601843],[4.504031,-5.855621],[8.621113,-0.902217],[-5.861020,2.917431],[1.949696,2.193959],[5.605913,5.959629],[1.084625,-6.365327],[-2.247044,4.761847],[1.242507,2.254102],[-6.989070,5.643745],[4.196370,-1.453853],[-9.205073,3.633500],[2.255606,-1.429361],[-2.683319,8.016712],[-7.117871,6.098752],[-9.322646,1.813713],[-2.048407,-2.726873],[-0.608123,-5.712909],[3.170255,0.237455],[6.187008,-1.246369],[5.972453,0.435262],[-9.540273,8.333217],[0.580375,5.932809],[9.607056,4.761969],[7.957709,-6.549618],[-0.847003,1.033380],[-0.334752,2.499515],[-5.615297,-3.104008],[-7.382374,1.926663],[8.106351,7.645001],[-1.227988,-0.863383],[5.003834,3.424002],[2.487619,-8.479810],[0.574076,-1.836147],[9.854333,7.121429],[8.369938,6.695334],[9.679747,-5.425839],[-0.929005,3.745141],[-1.606926,-8.455969],[-1.225837,-2.544954],[-5.221418,6.783152],[3.687360,6.648036],[9.525123,-1.178783],[-0.195611,5.823474],[-6.230856,-7.031887],[6.139031,6.642865],[6.921355,-5.622012],[-1.969665,-0.468264],[9.197467,-4.046463],[6.439000,4.114099],[-2.330523,3.311219],[-0.213053,-9.268227],[-3.485550,2.385102],[7.849446,3.953651],[-8.528737,-7.968635],[-8.682091,2.124985],[-0.720142,-2.540142],[6.447119,-4.522361],[0.083462,0.871702],[-2.725023,6.403508],[-5.623674,6.546878],[8.694910,9.568639],[-7.300414,-2.712827],[-5.153919,-9.127679],[9.282303,-3.784317],[0.656254,-1.664002],[-2.971452,-0.542629],[-4.089655,0.807077],[-6.658168,-4.088696],[7.307967,9.018007],[4.823044,-3.704275],[-1.099109,-4.704703],[-3.482637,-8.760177],[2.786051,-6.528637],[-2.649074,8.731933],[-5.147309,-1.302694],[5.427051,0.346227],[-3.582185,-8.758331],[-7.939274,8.370120],[4.225414,7.460482],[-0.822120,4.915938],[-5.172412,1.672503],[-3.565737,1.207417],[2.810626,1.206883],[-5.285905,4.834670],[-5.341576,-9.531938],[-1.885090,0.551707],[5.211293,5.333268],[-9.414701,-6.415263],[4.527188,-8.367698],[-8.777762,-3.893260],[9.696137,-7.794560],[-7.034612,-2.913550],[3.838431,-9.169696],[-5.073685,4.454670],[-9.000029,1.246258],[-2.882917,3.312168],[5.034377,2.292892],[-9.601409,6.983644],[-1.912263,2.321373],[8.251699,6.227690],[5.731114,-8.071868],[5.202852,0.904239],[5.093622,-5.908415],[-6.464261,6.617338],[8.382399,1.390861],[-4.222808,6.241213],[-1.266512,-6.173497],[-8.617848,-5.302981],[5.672152,1.637592],[9.313217,-7.879526],[4.315165,-1.554236],[-9.913640,6.630160],[-3.923338,7.535893],[8.339330,6.324504],[-8.970094,4.150636],[1.572240,-1.861208],[0.156197,9.472804],[-4.283314,7.180223],[2.384405,-1.840480],[3.170825,2.219544],[-2.310532,-7.676623],[-1.389524,-1.028083],[3.514194,1.944483],[5.060206,1.476124],[-1.306528,2.923050],[-7.376588,-9.162699],[-6.844626,-0.919141],[1.697474,-9.284790],[-7.901903,9.741427],[-5.555831,2.090704],[-0.589233,9.363310],[-5.978653,-2.342711],[9.626841,-6.634806],[-1.036809,8.976980],[4.994712,-4.183608],[-9.732780,-3.508567],[5.933134,1.139410],[9.378542,-7.925220],[7.594444,-3.033081],[-7.262927,-1.224129],[-3.494424,-2.839812],[-2.102706,-3.153689],[4.254255,-8.669985],[0.848672,-4.328083],[-7.100794,-6.001618],[8.210724,3.751895],[-5.326992,-7.121761],[-2.396041,4.988604],[3.380529,3.607074],[7.632863,4.493906],[-4.616551,-8.299830],[8.821521,4.309640],[-3.627775,0.647157],[-8.539515,1.094731],[-5.004373,2.945841],[-2.404543,-5.365428],[-8.137038,8.426940],[2.308495,-9.029422],[-9.373714,1.798074],[-7.787384,-1.011295],[-0.544380,-6.799078],[-8.778412,-5.762638],[3.456836,-0.033211],[-8.783309,-5.451222],[-0.030785,-2.548930],[-9.635134,-6.762065],[-7.096793,-1.099096],[-1.158590,4.291217],[0.450350,5.432604],[5.923703,-3.112833],[7.576877,0.704442],[8.261311,0.689037],[9.765552,4.861134],[-9.193210,9.104725],[8.604042,6.554509],[-1.772363,5.454723],[-4.711714,6.544970],[-4.469783,1.572691],[-6.438843,7.271921],[-3.446240,-3.827652],[-4.953102,2.193629],[1.658304,8.806709],[1.978233,-1.784698],[-6.326848,3.211017],[-3.932069,-8.938091],[-2.292818,-9.881391],[-2.563124,4.030943],[-7.430438,6.171802],[6.314486,-2.578135],[6.909572,-0.723051],[-6.374352,-2.439359],[-6.296465,-8.368935],[-8.873448,5.114932],[-0.169300,-6.996217],[5.032275,9.853896],[3.427312,-0.771169],[6.205303,7.657005],[5.230386,2.761283],[-8.270038,-5.892546],[3.719251,5.436498],[4.753515,9.051050],[-2.677927,2.574358],[1.394140,-4.041824],[4.762675,1.937026],[8.095421,8.217986],[-6.776232,-0.052039],[-5.937571,6.382704],[5.421132,8.869676],[7.476842,-4.701999],[-2.535904,2.319920],[-5.215533,-4.147175],[6.811420,9.513209],[-6.901055,2.997156],[0.157859,3.414111],[-6.111332,-2.314912],[1.355356,-0.008552],[-0.587052,7.096035],[-0.984598,-8.995924],[-1.297979,-0.212855],[-0.324462,-1.264368],[-7.676380,-8.652037],[6.328714,2.132924],[-1.333056,-5.776002],[-0.741843,7.465915],[1.711365,4.109990],[5.349319,3.050841],[7.314923,4.938155],[0.724355,-4.972033],[6.611402,9.782950],[9.217825,-1.399837],[-9.964156,9.463203],[-7.838008,3.928615],[8.432912,8.428598],[-2.884996,-9.387063],[0.927641,-0.559918],[3.432849,-4.895761],[6.123399,-1.321939],[5.374102,-0.817546],[0.764603,-3.988333],[-7.411158,2.298112],[-1.968008,3.805322],[1.073473,-4.752138],[5.657265,1.025038],[-1.370405,-2.447269],[-5.982550,-9.338172],[1.468519,3.914429],[-8.818989,-7.771095],[-5.236448,6.695286],[1.334520,7.018869],[-0.435951,3.087052],[-9.036808,3.925482],[-0.662088,-3.775640],[-0.823088,-3.888200],[-2.166960,-2.756571],[1.445213,2.924206],[-8.339470,7.886535],[0.543262,3.999550],[-0.595028,-8.816505],[0.008508,2.036748],[2.942836,-8.756853],[-2.020232,7.283158],[4.264066,-8.665914],[2.082556,-4.350989],[-0.394513,9.370477],[-6.388992,0.933319],[7.237128,-8.556582],[4.501430,-0.456138],[1.465348,-4.286797],[-7.797995,-9.545456],[6.744629,-8.481780],[3.747349,2.237528],[-0.411993,8.890545],[9.021146,-4.079600],[-9.609849,8.411438],[-8.932572,-6.735169],[3.427521,-8.079026],[3.934381,4.822180],[2.073698,2.785273],[-8.802693,-2.748988],[0.507113,4.020256],[-1.784487,1.049608],[-9.194303,3.994881],[-7.420810,8.351129],[-3.395958,5.088658],[-9.060837,3.357156],[6.670602,-4.450907],[0.066140,-6.322395],[2.872952,6.294058],[8.983379,-9.961954],[3.498416,8.071039],[-3.052535,2.761976],[-5.163564,-1.717809],[5.950418,-0.450971],[-7.997959,-1.738122],[0.279602,-4.564101],[4.832613,-2.916921],[-1.610883,-3.668574],[-1.332394,5.973237],[-9.293169,-4.395124],[-0.291178,-1.477082],[-0.552071,-1.619508],[3.187867,-3.971282],[3.350643,6.858536]], dtype = "float64")#candidate|6126|(360, 2)|const|float64
call_6125 = relay.TupleGetItem(func_3095_call(relay.reshape(const_6126.astype('float64'), [720,])), 4)
call_6127 = relay.TupleGetItem(func_3098_call(relay.reshape(const_6126.astype('float64'), [720,])), 4)
func_5238_call = mod.get_global_var('func_5238')
func_5239_call = mutated_mod.get_global_var('func_5239')
call_6130 = relay.TupleGetItem(func_5238_call(), 0)
call_6131 = relay.TupleGetItem(func_5239_call(), 0)
output = relay.Tuple([call_6121,call_6125,const_6126,call_6130,])
output2 = relay.Tuple([call_6122,call_6127,const_6126,call_6131,])
func_6151 = relay.Function([], output)
mod['func_6151'] = func_6151
mod = relay.transform.InferType()(mod)
output = func_6151()
func_6152 = relay.Function([], output)
mutated_mod['func_6152'] = func_6152
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6216 = relay.var("var_6216", dtype = "float64", shape = (14, 1, 3))#candidate|6216|(14, 1, 3)|var|float64
uop_6217 = relay.asin(var_6216.astype('float64')) # shape=(14, 1, 3)
output = relay.Tuple([uop_6217,])
output2 = relay.Tuple([uop_6217,])
func_6229 = relay.Function([var_6216,], output)
mod['func_6229'] = func_6229
mod = relay.transform.InferType()(mod)
mutated_mod['func_6229'] = func_6229
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6230 = relay.var("var_6230", dtype = "float64", shape = (14, 1, 3))#candidate|6230|(14, 1, 3)|var|float64
func_6229_call = mutated_mod.get_global_var('func_6229')
call_6231 = func_6229_call(var_6230)
output = call_6231
func_6232 = relay.Function([var_6230], output)
mutated_mod['func_6232'] = func_6232
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6237 = relay.var("var_6237", dtype = "float32", shape = (6, 5, 3))#candidate|6237|(6, 5, 3)|var|float32
var_6238 = relay.var("var_6238", dtype = "float32", shape = (6, 5, 3))#candidate|6238|(6, 5, 3)|var|float32
bop_6239 = relay.mod(var_6237.astype('float32'), relay.reshape(var_6238.astype('float32'), relay.shape_of(var_6237))) # shape=(6, 5, 3)
uop_6250 = relay.log10(bop_6239.astype('float32')) # shape=(6, 5, 3)
output = relay.Tuple([uop_6250,])
output2 = relay.Tuple([uop_6250,])
func_6265 = relay.Function([var_6237,var_6238,], output)
mod['func_6265'] = func_6265
mod = relay.transform.InferType()(mod)
var_6266 = relay.var("var_6266", dtype = "float32", shape = (6, 5, 3))#candidate|6266|(6, 5, 3)|var|float32
var_6267 = relay.var("var_6267", dtype = "float32", shape = (6, 5, 3))#candidate|6267|(6, 5, 3)|var|float32
output = func_6265(var_6266,var_6267,)
func_6268 = relay.Function([var_6266,var_6267,], output)
mutated_mod['func_6268'] = func_6268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3463_call = mod.get_global_var('func_3463')
func_3465_call = mutated_mod.get_global_var('func_3465')
call_6288 = relay.TupleGetItem(func_3463_call(), 2)
call_6289 = relay.TupleGetItem(func_3465_call(), 2)
output = call_6288
output2 = call_6289
func_6298 = relay.Function([], output)
mod['func_6298'] = func_6298
mod = relay.transform.InferType()(mod)
output = func_6298()
func_6299 = relay.Function([], output)
mutated_mod['func_6299'] = func_6299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1549_call = mod.get_global_var('func_1549')
func_1551_call = mutated_mod.get_global_var('func_1551')
call_6341 = relay.TupleGetItem(func_1549_call(), 0)
call_6342 = relay.TupleGetItem(func_1551_call(), 0)
output = relay.Tuple([call_6341,])
output2 = relay.Tuple([call_6342,])
func_6391 = relay.Function([], output)
mod['func_6391'] = func_6391
mod = relay.transform.InferType()(mod)
output = func_6391()
func_6392 = relay.Function([], output)
mutated_mod['func_6392'] = func_6392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3337_call = mod.get_global_var('func_3337')
func_3339_call = mutated_mod.get_global_var('func_3339')
call_6410 = relay.TupleGetItem(func_3337_call(), 0)
call_6411 = relay.TupleGetItem(func_3339_call(), 0)
func_4802_call = mod.get_global_var('func_4802')
func_4803_call = mutated_mod.get_global_var('func_4803')
call_6412 = relay.TupleGetItem(func_4802_call(), 1)
call_6413 = relay.TupleGetItem(func_4803_call(), 1)
output = relay.Tuple([call_6410,call_6412,])
output2 = relay.Tuple([call_6411,call_6413,])
func_6414 = relay.Function([], output)
mod['func_6414'] = func_6414
mod = relay.transform.InferType()(mod)
mutated_mod['func_6414'] = func_6414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6414_call = mutated_mod.get_global_var('func_6414')
call_6415 = func_6414_call()
output = call_6415
func_6416 = relay.Function([], output)
mutated_mod['func_6416'] = func_6416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4802_call = mod.get_global_var('func_4802')
func_4803_call = mutated_mod.get_global_var('func_4803')
call_6437 = relay.TupleGetItem(func_4802_call(), 1)
call_6438 = relay.TupleGetItem(func_4803_call(), 1)
func_5572_call = mod.get_global_var('func_5572')
func_5573_call = mutated_mod.get_global_var('func_5573')
call_6457 = func_5572_call()
call_6458 = func_5572_call()
uop_6465 = relay.exp(call_6437.astype('float32')) # shape=(8, 10, 4)
uop_6467 = relay.exp(call_6438.astype('float32')) # shape=(8, 10, 4)
output = relay.Tuple([call_6457,uop_6465,])
output2 = relay.Tuple([call_6458,uop_6467,])
func_6473 = relay.Function([], output)
mod['func_6473'] = func_6473
mod = relay.transform.InferType()(mod)
mutated_mod['func_6473'] = func_6473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6473_call = mutated_mod.get_global_var('func_6473')
call_6474 = func_6473_call()
output = call_6474
func_6475 = relay.Function([], output)
mutated_mod['func_6475'] = func_6475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3763_call = mod.get_global_var('func_3763')
func_3765_call = mutated_mod.get_global_var('func_3765')
call_6506 = relay.TupleGetItem(func_3763_call(), 2)
call_6507 = relay.TupleGetItem(func_3765_call(), 2)
output = call_6506
output2 = call_6507
func_6517 = relay.Function([], output)
mod['func_6517'] = func_6517
mod = relay.transform.InferType()(mod)
output = func_6517()
func_6518 = relay.Function([], output)
mutated_mod['func_6518'] = func_6518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5238_call = mod.get_global_var('func_5238')
func_5239_call = mutated_mod.get_global_var('func_5239')
call_6556 = relay.TupleGetItem(func_5238_call(), 0)
call_6557 = relay.TupleGetItem(func_5239_call(), 0)
output = relay.Tuple([call_6556,])
output2 = relay.Tuple([call_6557,])
func_6570 = relay.Function([], output)
mod['func_6570'] = func_6570
mod = relay.transform.InferType()(mod)
output = func_6570()
func_6571 = relay.Function([], output)
mutated_mod['func_6571'] = func_6571
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6589 = relay.const([[[-7.855983,9.549816,7.594898,-1.132493,-8.302775,-2.529050,-2.262811,0.924405,9.012636,-3.192203,-8.580989,-8.896695],[5.328067,-6.203178,-4.133307,-1.157805,-1.004911,-5.032763,7.307442,-0.515218,-3.906336,5.793399,8.716801,4.945341],[8.949074,-9.574510,5.439171,4.233781,-7.565762,-6.774004,5.660056,4.124472,-4.300744,0.328031,0.436411,6.175470],[6.483444,-9.594612,6.290922,8.970711,7.448305,6.731712,-1.632100,-2.637071,-5.568121,-5.358206,3.097751,9.526387],[2.887878,9.966088,-3.131229,-6.668909,-4.756730,3.563787,-3.175514,-2.109970,-4.278172,-8.159634,-9.391015,0.852481],[1.641438,-5.918494,7.601136,0.850239,-4.862413,6.587693,1.107496,-1.596765,3.999084,-2.053716,7.267666,6.327347],[-7.830224,-7.951672,-6.787204,3.793773,4.980038,-8.220549,0.329735,8.641650,2.903575,9.790753,-6.978054,-1.613132]],[[3.796279,-1.332373,2.264202,-6.855458,7.296270,-5.678914,-7.304950,-8.106744,8.093672,-3.428059,-9.402306,-4.000545],[9.045683,-8.140938,-4.952697,1.229060,5.154798,-4.946581,0.778814,-4.967858,4.616076,0.942871,-5.988312,-5.933663],[-1.889763,9.543344,-2.091340,-1.343415,8.124691,-9.095063,8.357060,5.943518,0.037168,8.857117,-3.501272,8.102794],[-9.304024,2.468828,-7.365601,-4.352438,-8.133671,8.305070,-0.964748,-1.039086,1.145359,3.073662,-7.930386,4.922956],[-5.398664,1.484894,5.402480,-1.398746,1.880880,-7.342041,9.152314,-1.036979,-8.752568,6.988624,-2.132247,-8.238677],[-1.698575,-5.445532,-1.933073,-0.009437,5.149993,1.645855,-6.741433,-7.135359,1.199170,-5.873770,-0.861715,9.372679],[-4.077708,0.430798,-8.150757,-5.178683,6.478973,-0.005865,9.555937,-0.557530,-2.180632,6.825163,4.722001,-3.648565]],[[-8.192560,-0.575084,1.242814,-0.071185,-2.654513,-1.802051,7.742041,7.077768,-8.821742,3.616269,-5.106788,-2.121022],[3.935892,7.574607,4.191867,-6.848194,-8.683571,-3.456597,-6.219884,-7.807969,-7.315085,3.310417,7.777327,-2.810123],[-7.830379,0.919969,6.986523,5.669638,6.693029,-4.014103,-4.540973,5.823053,9.347137,3.083778,-9.204080,-2.471864],[-5.831889,-8.871635,-7.223400,4.520170,-5.908447,5.038182,-8.301275,9.968628,2.386474,2.198481,-7.400188,0.788892],[-2.795582,8.628916,-0.048295,-1.816332,8.467496,-0.061194,2.826868,9.643949,7.958780,-4.287481,8.182922,0.112701],[2.648995,6.384911,7.981077,1.561933,7.858148,-9.269559,-5.072128,-8.237748,-5.313359,7.925544,5.415521,0.110363],[1.541569,-4.470336,9.881183,5.646827,-4.528079,-8.609909,2.098568,-2.437765,-0.964377,-4.311746,3.594341,6.179914]],[[-6.986695,2.022570,5.539491,-4.203903,-8.999945,6.474546,-3.156595,-3.061870,0.730468,5.526993,-5.880452,6.621625],[-4.511186,9.044662,0.071568,0.863562,2.451993,7.415782,-4.189021,4.664715,-2.207402,-8.186408,-5.398662,-1.227083],[-0.347134,-8.441879,4.429986,1.894575,-5.694867,1.903969,2.877327,5.161220,6.768493,7.568785,-9.952171,1.967628],[-6.810082,6.804796,-4.443209,-0.987673,5.629088,-5.872919,1.328213,9.763366,-4.804919,3.355213,9.496179,2.730406],[9.769521,-5.387374,8.767370,-7.232054,-5.193831,-2.417163,2.797928,9.779779,-3.279394,9.937967,4.248836,3.478531],[1.472109,-3.604718,6.315548,-3.473606,-4.460215,-2.049722,-7.791033,7.159858,-2.647207,6.514687,4.054271,1.585253],[-8.390806,1.968223,9.917496,-6.479581,5.836269,9.403317,-9.314130,3.454037,7.395806,-7.946897,-1.171363,-2.110694]],[[-7.534441,0.046594,-5.648401,8.795488,1.474937,-0.441421,6.848453,-9.596517,9.889677,4.288874,7.555234,6.331145],[-8.317053,-8.267333,4.291495,8.188071,-5.398840,1.637655,2.229500,-7.373807,9.952082,0.260500,2.918460,4.656723],[-1.920654,-3.722753,6.028371,-9.219586,4.239660,2.916324,7.551296,-9.649383,9.296686,-3.619936,-4.317765,4.503821],[3.250580,-4.235757,-1.913648,-7.718861,-8.255074,-8.499967,-1.798614,5.307395,9.627136,-0.731523,-6.631193,7.420927],[7.659133,-1.552795,-7.008116,7.306117,6.340852,-5.803840,-5.343002,-1.872686,8.857323,-7.939761,0.315756,7.976027],[-6.087508,4.678173,5.343838,-6.891659,-2.166048,-5.233855,8.230657,-2.910376,-2.225702,-2.721870,4.591681,0.732849],[-3.284152,-7.565810,-4.564573,-6.012076,-7.311638,9.035934,-3.112292,-7.945879,-2.125921,8.267451,-0.039412,-4.176099]],[[-6.963170,3.213296,8.421386,-4.097719,0.400556,9.226015,0.278438,-5.545169,8.444383,7.679544,-1.717506,-6.959501],[-5.886113,-5.672001,-4.171851,1.003033,2.236789,-4.982397,-4.796003,-7.379105,-8.552567,7.518373,-2.112140,2.157096],[1.625087,0.867978,-5.356556,-0.551063,-6.297814,2.002250,-5.941019,0.983940,-4.018536,-3.061591,4.755696,-2.006249],[9.388011,8.341916,3.728795,5.936313,4.622526,-5.491062,5.823701,-3.056864,9.963657,-2.295816,5.688943,-4.063747],[6.468018,-9.676430,1.899026,-4.967017,-4.721678,-8.461911,-3.195578,-7.004214,8.749409,3.303732,9.422064,-6.827098],[-1.647596,-0.872829,-8.986124,5.444764,-2.705845,-6.004932,-3.007118,-7.232645,-5.166919,-9.275029,-1.695807,-4.027822],[-4.554846,-0.247241,-3.168443,-8.713115,3.784102,-2.875951,0.059067,-7.209921,4.930397,-3.872004,6.365574,-3.703798]],[[2.211565,4.997474,1.191973,1.316719,4.010769,7.876760,-3.652505,-0.261805,2.597859,-2.054229,-7.880084,-4.294111],[6.077282,7.322224,1.663278,2.533002,9.672408,-6.301529,-8.695768,-0.898910,-9.888216,7.380022,1.950815,-9.674627],[-9.336196,-8.926341,4.793273,-7.586803,5.652328,-8.442356,1.447934,4.931855,-9.723418,8.692258,-8.260835,-9.657563],[-5.823989,3.632035,-3.419173,-4.888420,-5.647934,4.336817,8.828748,8.394588,-1.728662,0.191750,2.694527,-7.777124],[-8.178398,-4.681415,5.545273,4.303080,8.631985,5.507427,4.801883,-8.279442,-7.600638,7.920276,-3.269210,-8.196100],[-0.527792,-8.572896,6.297884,0.272408,1.367988,-8.783649,7.311395,-3.378334,-4.389357,-5.387291,2.109696,-3.984973],[-4.966054,0.989782,-0.802053,9.339454,6.427162,-0.439706,-8.959371,-3.461672,5.406424,-4.749584,5.932269,2.527322]],[[5.152633,6.560993,5.020398,-8.689102,2.192540,-6.160629,-2.517214,3.099721,9.505006,-2.190529,9.973520,9.940142],[4.308154,4.564153,-5.226836,-5.515357,-4.868925,-5.357165,6.663068,-5.104407,-3.066277,-8.051463,-5.046089,-4.903965],[1.087543,-7.101214,-3.702706,-4.392800,6.440759,-6.016873,-8.984604,4.784769,-3.858812,-0.269245,5.396857,-9.810436],[5.784486,-1.919206,-8.209760,-8.529045,1.753006,1.748713,-3.686113,4.000035,5.375671,-2.663798,-6.698489,8.425973],[6.523151,8.678449,-1.189407,8.682050,-6.476685,1.125232,-8.736708,3.716943,-5.806291,1.581084,-1.557559,1.221647],[-0.579144,3.006616,4.555176,6.853357,3.046356,5.997929,2.822287,5.754272,-0.979256,-3.643158,-7.625273,-4.813588],[-2.383167,-4.827687,-0.798556,4.276475,5.123778,-6.446418,1.492087,2.817483,-3.031221,-1.315469,2.731945,2.611282]],[[-1.589621,0.796751,4.444377,-5.705540,7.482694,-3.144343,-5.687697,3.775484,4.272380,-6.649902,4.131739,1.327360],[9.824966,3.074799,9.022279,-7.069115,0.482257,5.404990,-4.298272,-1.578926,-5.883258,8.485707,-8.132519,-7.375718],[-7.258243,-8.996467,-4.340490,0.119856,6.321768,5.641507,-9.966764,4.962056,9.549671,-3.712748,-1.388363,8.899083],[-5.742289,8.691415,0.072862,-7.539111,-8.940689,-5.105507,-8.354858,-8.706337,-2.989800,-3.879147,-9.128624,-2.503331],[-0.235703,6.539061,-4.441922,5.484888,0.910542,0.105447,-9.071948,6.785928,2.636033,-0.800294,0.231095,4.347038],[-5.848158,-0.006629,6.399779,-6.708843,-2.884034,-2.569580,-1.633074,7.751061,-1.054569,4.337373,-3.277755,-1.511515],[-9.144275,2.258897,7.978903,2.778388,-4.937512,-2.951715,6.837671,-2.253405,-9.396068,-5.800605,-6.968318,8.431056]],[[-6.444822,-8.630927,6.829412,-1.881799,1.470377,9.368417,2.298914,-4.458846,0.720997,0.811746,2.992916,-3.900747],[7.946506,-9.107894,-0.798284,-7.168065,-5.640645,8.613414,3.232348,9.590851,8.527019,-5.341989,-0.463188,-6.865943],[2.859220,-3.191328,8.478957,2.592848,6.643123,4.009309,2.614253,-5.848765,-3.508076,5.411942,-2.823246,-6.373120],[4.501544,-1.742963,6.204019,5.796531,-3.174052,3.623318,-0.923150,-4.359217,-7.988162,8.309233,-0.314182,-5.575814],[2.475974,-4.261068,-9.356669,2.717770,4.172061,3.461107,9.117674,-7.425432,-2.488816,0.422795,-5.407996,-3.594497],[3.407077,-6.629715,-6.793043,-5.666688,-8.914676,6.557808,1.408412,-3.058830,-9.945997,3.248838,6.331832,3.219648],[6.857862,-5.011563,7.145036,4.877832,8.027362,-0.348699,-9.197109,9.522728,8.970530,6.214064,-1.672934,-0.046383]],[[-9.442882,-3.738284,1.266831,6.231518,-6.680854,-4.371815,1.484114,9.400188,5.492090,-7.640435,-1.900649,-0.962404],[-1.898101,0.949669,5.677935,8.488332,9.839580,4.995583,0.950851,-8.174958,2.940014,2.083851,-5.042491,7.000982],[-3.886371,7.317584,8.518101,8.677775,9.188890,-8.164884,-4.271734,-1.841676,5.641881,-5.007267,8.301038,8.174708],[4.713906,7.200719,0.010843,0.641373,-8.923198,-2.370473,-6.649182,4.504469,-5.698101,-7.742100,0.938731,4.876436],[3.904227,8.851032,-0.067674,0.917471,-0.158481,0.303004,5.936536,5.950617,0.197457,4.136727,5.851686,6.289947],[1.239888,-6.458966,7.664605,2.891841,1.701956,5.763824,6.442821,3.435565,4.042574,1.998641,2.801545,-7.869017],[8.198872,-9.175103,-9.452001,-3.089184,-7.403025,-8.665046,-1.520959,-6.420559,-6.985252,3.310809,-7.281931,6.720350]],[[2.419306,-7.149419,-3.834951,9.088274,-7.067030,-7.875877,-4.328099,-4.469464,-8.660280,-4.210817,8.745453,-5.795297],[-7.100081,5.268539,4.889823,-1.897158,-0.329760,4.841673,4.117743,-3.614482,8.701345,-1.633203,6.515922,-5.346498],[4.532653,0.589670,4.996246,-2.562821,2.671398,-3.557241,0.320520,-0.906631,5.159779,-1.346973,-3.527376,-1.844952],[5.596977,3.352414,-0.311486,-6.961964,-4.461925,-3.556264,-5.188153,2.234480,-9.402116,-4.860735,-4.747594,5.178265],[-5.757216,-7.804740,-8.431076,-7.433264,9.186383,5.276368,2.646514,6.384892,9.133992,2.511346,3.375524,4.067696],[-9.292590,9.565302,-1.976746,-8.744861,-2.679254,-4.040502,-2.433301,-5.248539,-5.675451,4.107833,-9.822678,-8.151641],[-8.986988,6.371754,-9.927781,3.576747,-9.806275,-2.718079,-4.347479,9.648564,9.763319,9.039867,5.279103,-9.078430]],[[6.702607,3.675752,-2.261620,4.152180,-4.687161,-8.852394,-2.298472,8.224597,-6.141378,8.868968,2.198359,8.051474],[-7.230540,-7.257966,9.667656,-7.745959,-9.719462,-4.504380,6.198531,1.086521,-9.572232,-9.762744,8.989807,7.614281],[8.879810,-1.027251,8.743456,-2.449219,0.485713,2.422789,5.176448,7.516861,-0.034050,-7.495670,-7.411487,3.171164],[-0.474956,2.051645,4.751256,6.118683,4.271726,1.190803,-7.393944,4.758950,-9.299784,-6.802328,-5.125402,9.469210],[1.196170,-8.985163,5.613191,-5.011036,6.006108,-2.811379,-5.720643,-3.470098,8.513377,-4.994040,6.829162,2.490394],[4.204834,6.254456,-3.881500,-9.097899,-6.780451,1.124871,-0.854459,7.382053,6.346087,-0.140588,-3.342765,3.353784],[1.500131,7.866681,6.804177,-7.486450,-6.494366,-8.689193,4.731676,-9.045149,0.450178,2.807753,6.818952,-0.278321]]], dtype = "float64")#candidate|6589|(13, 7, 12)|const|float64
uop_6590 = relay.erf(const_6589.astype('float64')) # shape=(13, 7, 12)
func_872_call = mod.get_global_var('func_872')
func_874_call = mutated_mod.get_global_var('func_874')
var_6600 = relay.var("var_6600", dtype = "int16", shape = (105,))#candidate|6600|(105,)|var|int16
call_6599 = relay.TupleGetItem(func_872_call(relay.reshape(var_6600.astype('int16'), [105,])), 2)
call_6601 = relay.TupleGetItem(func_874_call(relay.reshape(var_6600.astype('int16'), [105,])), 2)
output = relay.Tuple([uop_6590,call_6599,var_6600,])
output2 = relay.Tuple([uop_6590,call_6601,var_6600,])
func_6623 = relay.Function([var_6600,], output)
mod['func_6623'] = func_6623
mod = relay.transform.InferType()(mod)
mutated_mod['func_6623'] = func_6623
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6624 = relay.var("var_6624", dtype = "int16", shape = (105,))#candidate|6624|(105,)|var|int16
func_6623_call = mutated_mod.get_global_var('func_6623')
call_6625 = func_6623_call(var_6624)
output = call_6625
func_6626 = relay.Function([var_6624], output)
mutated_mod['func_6626'] = func_6626
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6636 = relay.var("var_6636", dtype = "int32", shape = (8, 4, 2))#candidate|6636|(8, 4, 2)|var|int32
var_6637 = relay.var("var_6637", dtype = "int32", shape = (8, 4, 2))#candidate|6637|(8, 4, 2)|var|int32
bop_6638 = relay.equal(var_6636.astype('bool'), relay.reshape(var_6637.astype('bool'), relay.shape_of(var_6636))) # shape=(8, 4, 2)
output = relay.Tuple([bop_6638,])
output2 = relay.Tuple([bop_6638,])
func_6665 = relay.Function([var_6636,var_6637,], output)
mod['func_6665'] = func_6665
mod = relay.transform.InferType()(mod)
var_6666 = relay.var("var_6666", dtype = "int32", shape = (8, 4, 2))#candidate|6666|(8, 4, 2)|var|int32
var_6667 = relay.var("var_6667", dtype = "int32", shape = (8, 4, 2))#candidate|6667|(8, 4, 2)|var|int32
output = func_6665(var_6666,var_6667,)
func_6668 = relay.Function([var_6666,var_6667,], output)
mutated_mod['func_6668'] = func_6668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3149_call = mod.get_global_var('func_3149')
func_3151_call = mutated_mod.get_global_var('func_3151')
call_6692 = relay.TupleGetItem(func_3149_call(), 0)
call_6693 = relay.TupleGetItem(func_3151_call(), 0)
func_4802_call = mod.get_global_var('func_4802')
func_4803_call = mutated_mod.get_global_var('func_4803')
call_6706 = relay.TupleGetItem(func_4802_call(), 1)
call_6707 = relay.TupleGetItem(func_4803_call(), 1)
func_4802_call = mod.get_global_var('func_4802')
func_4803_call = mutated_mod.get_global_var('func_4803')
call_6709 = relay.TupleGetItem(func_4802_call(), 1)
call_6710 = relay.TupleGetItem(func_4803_call(), 1)
output = relay.Tuple([call_6692,call_6706,call_6709,])
output2 = relay.Tuple([call_6693,call_6707,call_6710,])
func_6715 = relay.Function([], output)
mod['func_6715'] = func_6715
mod = relay.transform.InferType()(mod)
mutated_mod['func_6715'] = func_6715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6715_call = mutated_mod.get_global_var('func_6715')
call_6716 = func_6715_call()
output = call_6716
func_6717 = relay.Function([], output)
mutated_mod['func_6717'] = func_6717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5487_call = mod.get_global_var('func_5487')
func_5489_call = mutated_mod.get_global_var('func_5489')
call_6721 = relay.TupleGetItem(func_5487_call(), 1)
call_6722 = relay.TupleGetItem(func_5489_call(), 1)
output = call_6721
output2 = call_6722
func_6777 = relay.Function([], output)
mod['func_6777'] = func_6777
mod = relay.transform.InferType()(mod)
mutated_mod['func_6777'] = func_6777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6777_call = mutated_mod.get_global_var('func_6777')
call_6778 = func_6777_call()
output = call_6778
func_6779 = relay.Function([], output)
mutated_mod['func_6779'] = func_6779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2376_call = mod.get_global_var('func_2376')
func_2377_call = mutated_mod.get_global_var('func_2377')
call_6808 = relay.TupleGetItem(func_2376_call(), 0)
call_6809 = relay.TupleGetItem(func_2377_call(), 0)
func_2513_call = mod.get_global_var('func_2513')
func_2516_call = mutated_mod.get_global_var('func_2516')
var_6811 = relay.var("var_6811", dtype = "int32", shape = (396,))#candidate|6811|(396,)|var|int32
call_6810 = relay.TupleGetItem(func_2513_call(relay.reshape(var_6811.astype('int32'), [9, 11, 4])), 0)
call_6812 = relay.TupleGetItem(func_2516_call(relay.reshape(var_6811.astype('int32'), [9, 11, 4])), 0)
bop_6816 = relay.right_shift(var_6811.astype('int32'), relay.reshape(call_6810.astype('int32'), relay.shape_of(var_6811))) # shape=(396,)
bop_6819 = relay.right_shift(var_6811.astype('int32'), relay.reshape(call_6812.astype('int32'), relay.shape_of(var_6811))) # shape=(396,)
func_738_call = mod.get_global_var('func_738')
func_739_call = mutated_mod.get_global_var('func_739')
call_6822 = relay.TupleGetItem(func_738_call(), 0)
call_6823 = relay.TupleGetItem(func_739_call(), 0)
uop_6831 = relay.acos(call_6822.astype('float32')) # shape=(1, 8, 9)
uop_6833 = relay.acos(call_6823.astype('float32')) # shape=(1, 8, 9)
func_4174_call = mod.get_global_var('func_4174')
func_4176_call = mutated_mod.get_global_var('func_4176')
const_6836 = relay.const([[0.688769,6.513932,1.967920,-8.343779,0.195893,-8.563146,1.085549,7.946017,5.439112,-0.752366,-6.494483,8.421284],[-7.886274,-6.813268,-5.235614,9.031285,9.385143,-3.341198,-3.670026,-4.268740,8.786482,-0.559972,7.578597,1.642940],[8.788027,5.206599,0.131155,1.333111,7.126614,-8.548731,4.739634,-2.235897,-7.611311,-3.603930,4.974593,1.714701],[4.297147,6.557070,9.430107,0.538705,7.454331,-8.947883,1.926763,-1.652460,1.861288,9.723785,-5.507506,2.078658],[-1.990237,0.314658,3.967705,-7.022445,5.834855,5.708960,-3.429697,1.093303,8.347843,-2.471562,7.953416,-7.371136],[-2.870481,-9.494185,8.502828,2.132404,8.282388,8.970912,6.296782,7.674728,-5.177897,5.699806,1.205371,-9.623355],[-3.979985,2.657899,4.095198,0.851322,5.220703,-2.194196,9.565432,-1.497945,2.509838,1.650275,4.527547,1.931254],[8.533441,0.824401,4.480195,-3.290790,-4.167704,-2.138473,3.231753,6.141482,4.093303,0.220391,-6.892407,5.838229],[7.923292,-6.842992,4.762234,-1.941650,2.434817,2.671590,4.036367,-3.293388,3.901861,0.032572,-2.759820,-2.164925],[8.689526,6.017906,2.914770,1.260099,4.270079,-9.144563,2.963766,-9.422692,-4.964276,8.467766,0.061523,9.190488],[-3.808774,7.210763,-8.316119,-9.526016,2.085911,4.141715,-6.042442,8.588979,-3.603388,-8.539389,7.161676,-8.976779],[-1.012875,8.676599,-6.811826,9.851519,-6.813043,6.113971,-3.722387,-6.416376,1.325141,-6.975624,-3.157681,-4.197901],[3.423397,-4.389019,0.066495,-6.581943,-6.901155,7.222283,8.193534,-6.919141,0.084723,-5.876800,5.006375,4.802168],[-6.175966,4.548112,8.713567,9.769983,-9.214184,9.833719,7.969802,-3.340981,-7.768244,-8.447398,-2.917250,4.181301],[-0.621974,7.586559,-5.645158,3.496989,-5.703868,0.375266,-0.874318,3.930888,-0.261811,-7.736773,-2.404854,5.760991],[-5.900549,-7.337235,-6.812878,-1.844116,4.080181,9.774138,-8.560273,-7.280958,1.434421,-3.557890,9.397230,-5.134036],[9.363323,4.957090,0.082678,-3.945756,-2.389290,-1.909636,-5.382839,1.551973,-6.338500,3.112273,9.909790,-6.249866],[5.630045,-0.010405,-3.529675,-6.556390,8.220337,4.405754,-7.851721,-9.927464,4.520744,-9.774597,3.348603,8.164896],[-5.333762,-7.550568,7.809902,-8.598035,-8.574590,3.288386,8.001517,-3.620763,2.948755,-6.776479,0.139374,-8.145671],[6.626865,-1.497430,-6.338801,3.563954,-6.166529,1.451426,-3.648818,-2.047457,-7.623365,1.076405,9.746202,1.152116],[0.827147,-5.247579,-0.053376,1.769536,4.494038,9.322532,-1.643385,-6.860413,-2.557905,-1.280297,2.830438,7.166148],[-8.922796,-8.132423,-5.818110,-7.072814,1.537982,-4.655773,2.858374,6.131106,6.992122,-3.617851,6.960724,-8.105759],[-9.698837,-9.713263,6.660067,-3.467373,-5.302399,8.930555,-2.487262,1.717821,1.382031,2.511541,0.340932,3.613463],[9.562423,-1.156855,6.594601,1.456196,2.625392,3.276164,3.005268,-5.167787,-4.067448,1.994051,1.230519,-0.683688],[-3.432606,0.490372,2.112478,4.691530,4.004750,1.250870,-1.931045,-8.846204,9.739328,5.955115,7.854491,-5.945513],[7.004676,-1.617235,-2.488882,3.113376,9.824363,3.095418,-8.606547,6.601801,-7.076427,-0.919211,2.149313,8.110292],[-5.542625,-7.232796,-3.266843,-2.757050,-6.140138,8.349884,8.199405,3.914472,4.577181,8.761574,5.240772,4.705991],[-3.585191,4.739850,9.177387,-5.854658,1.665493,9.464246,6.388507,7.359539,1.318424,7.111705,-7.220650,0.478886],[4.232574,1.760023,9.838632,-7.254665,-0.175706,-3.695739,-2.240100,8.330846,2.490925,-3.845103,-3.233024,-2.858489],[-1.150269,5.606521,-1.445843,-3.426228,5.049126,1.304362,5.811586,-7.636286,0.140492,2.712611,5.522738,9.493229],[5.843142,-9.787505,1.994645,9.626853,-0.513165,-3.827881,5.841342,-6.089300,-4.021803,-5.132464,6.986561,2.078929],[8.335548,5.685163,-0.110068,0.985451,-9.709257,4.506298,-5.952253,2.966417,1.859044,5.008994,-7.617595,-9.710626],[7.556508,-1.225411,7.591379,2.162054,-2.571693,-9.491993,8.406777,0.647412,2.734855,-6.729569,9.878955,-0.902116],[3.244329,-1.193826,2.183017,0.670353,6.036501,6.171110,2.987908,6.753403,3.569523,-1.359739,9.672530,-3.462120],[1.931128,-2.556794,-4.491380,3.853216,-4.023774,-3.305078,-2.258646,3.997744,3.698945,8.708505,8.744030,4.529928],[-2.858951,-9.897960,0.212697,-6.732180,1.245607,0.902319,0.841135,3.390864,-9.126205,1.188597,6.750648,-2.521656],[7.877690,-7.110964,-1.806553,-5.353712,1.491487,-3.604630,3.964015,2.014350,0.364458,6.354476,-0.052108,7.003482],[-6.025346,4.841428,4.044751,-9.920800,2.656871,0.172733,-4.632331,-9.624275,-6.888365,-5.798818,3.132855,-8.550685],[4.505844,1.813954,6.116539,-3.941981,7.934880,2.169786,-8.528330,-0.033174,-4.527788,9.397712,2.201888,6.086333],[5.548481,8.409273,4.183881,5.176848,8.752281,-2.988269,1.548175,-4.094550,7.036298,7.222261,-9.139467,0.107098],[-4.539720,8.469035,4.394078,9.694452,0.691185,5.569935,1.928297,7.554507,-4.051481,1.860948,-5.069101,-4.644406],[5.015059,6.589970,0.604783,5.105478,-6.083975,8.452170,6.879581,-6.058757,-7.420757,7.869289,-3.747669,-3.813584],[9.177152,3.247539,-6.475245,6.053036,3.984646,1.612329,2.247783,-3.403392,3.290992,9.716491,1.939791,1.601420],[-8.397116,0.421469,5.602378,0.665477,5.466191,9.315599,-9.758764,1.686621,7.046587,6.256077,3.002402,-9.633223],[4.353291,4.685977,0.330298,-2.212477,-7.402748,6.702415,-5.210689,-7.386827,3.590811,8.104996,-1.938108,7.768436],[5.935344,-9.701932,9.055803,0.297805,5.377360,7.121729,-7.624885,-5.363387,9.414238,-5.492792,-6.720812,1.409140],[-3.702238,9.622216,9.824874,7.215691,7.877182,-9.048183,-7.962660,-2.560675,-6.777750,1.503046,2.209299,2.136884],[9.905482,-8.565592,-5.471743,3.328659,-6.430040,2.761713,5.252103,-9.131481,5.295546,7.308109,9.507284,5.643544],[0.496042,-1.299408,-6.051640,3.953201,2.166647,6.853061,2.089184,9.752986,0.991897,-1.171124,0.772885,-4.462415],[3.956233,-5.262691,8.391758,-9.018193,-7.886700,7.279391,8.567410,-7.594326,5.178011,-4.980529,-7.534276,-8.131298],[1.886558,4.016597,-9.294935,2.453534,0.207920,-6.384892,4.606871,-1.642351,9.204312,-8.028406,-1.509174,7.667354],[-9.396317,8.528011,9.876930,-3.780508,-6.882559,0.769072,4.042200,-0.087458,5.551755,1.104431,1.623504,-5.029993],[-2.040485,1.599656,-1.521145,-9.367817,1.428009,7.633189,5.723218,7.447537,4.630089,-3.018326,5.581056,-2.531401],[5.356693,5.385010,0.853627,5.859410,-4.214777,-8.838340,-5.720880,4.926874,-3.389307,-5.671767,-3.431588,2.580442],[8.596876,6.658655,-5.917382,8.840773,7.810380,7.989988,-7.719295,-6.697153,0.488455,4.415678,6.252774,1.836498],[-2.238919,-1.029765,0.416974,-6.997750,5.210849,8.732812,6.845967,-9.077319,1.036657,0.975150,-7.458561,-2.766629],[3.763112,8.050774,-2.333757,-3.188391,5.054258,-5.474537,0.482310,1.124705,-4.012005,-6.423501,3.334980,-6.122589],[-3.337320,-4.716626,-0.584484,3.692758,2.328467,-4.919225,0.214675,-2.118440,2.970911,-2.197725,1.057282,-0.954250],[-2.887728,-1.636993,7.378445,9.461629,-9.887738,-6.020011,-4.022312,-4.006104,8.756864,-9.281128,-6.663624,5.489259],[5.172309,-7.820168,2.862827,-3.050792,4.782308,3.211360,1.814418,0.187193,-3.205754,-0.557096,8.824718,-8.001695]], dtype = "float32")#candidate|6836|(60, 12)|const|float32
call_6835 = relay.TupleGetItem(func_4174_call(relay.reshape(const_6836.astype('float32'), [10, 8, 9])), 1)
call_6837 = relay.TupleGetItem(func_4176_call(relay.reshape(const_6836.astype('float32'), [10, 8, 9])), 1)
uop_6840 = relay.sin(call_6822.astype('float32')) # shape=(1, 8, 9)
uop_6842 = relay.sin(call_6823.astype('float32')) # shape=(1, 8, 9)
output = relay.Tuple([call_6808,bop_6816,uop_6831,call_6835,const_6836,uop_6840,])
output2 = relay.Tuple([call_6809,bop_6819,uop_6833,call_6837,const_6836,uop_6842,])
func_6848 = relay.Function([var_6811,], output)
mod['func_6848'] = func_6848
mod = relay.transform.InferType()(mod)
mutated_mod['func_6848'] = func_6848
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6849 = relay.var("var_6849", dtype = "int32", shape = (396,))#candidate|6849|(396,)|var|int32
func_6848_call = mutated_mod.get_global_var('func_6848')
call_6850 = func_6848_call(var_6849)
output = call_6850
func_6851 = relay.Function([var_6849], output)
mutated_mod['func_6851'] = func_6851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6391_call = mod.get_global_var('func_6391')
func_6392_call = mutated_mod.get_global_var('func_6392')
call_6906 = relay.TupleGetItem(func_6391_call(), 0)
call_6907 = relay.TupleGetItem(func_6392_call(), 0)
func_4275_call = mod.get_global_var('func_4275')
func_4278_call = mutated_mod.get_global_var('func_4278')
const_6921 = relay.const([-2.011819,8.678599,2.662104,8.784886,-6.322294,-6.573820,0.269341,-9.551909,-4.652119,5.875512,5.745499,4.623586,-8.384401,-2.964792,1.156803,-5.093797,-2.084604,-1.588625,5.037289,-6.169764,1.708314,8.272389,-1.640850,0.503189,6.165844,-4.502663,-3.168485,-8.661743,-2.677827,-7.728445,7.937582,-6.457647,-1.640646,3.291878,-3.917194,9.842848,-6.631492,-1.667536,4.605070,-4.139985,4.005364,8.747228,-7.382021,-4.692995,0.774095,4.549146,1.171533,-1.336468,-0.388142,6.597916,0.230127,8.901538,0.289714,-7.127713,3.002651,0.106668,-8.178645,2.329468,-1.097036,5.078995,-8.362174,6.041435,-6.093344,-8.318515,3.894378,-2.413587,-6.942606,9.499527,8.833119,-2.901683,-5.951671,8.301417,5.865640,5.003630,-4.282420,2.946728,1.561786,5.770325,-4.237275,1.145306,4.764531,4.160848,1.630899,-0.882273,-7.297846,4.967054,-9.199294,2.101539,6.702855,-2.329503,-8.055812,6.386561,-1.045898,1.394571,-7.921670,-4.150914,-9.535284,2.691774,-7.088444,7.073124,7.163559,1.861958,4.950096,5.329864,-7.955055,6.825023,0.356888,-4.548628,2.692736,-6.467986,-9.824936,1.421582,-9.007493,-0.350840,-8.629049,-5.239900,6.587517,-9.013530,-2.621306,8.151730,8.311441,4.063941,5.854272,-1.594321,-6.879812,-2.188879,8.893235,4.643609,8.436366,7.767967,4.879939,1.826439,0.370174,-8.074615,9.860697,-3.077267,-8.389543,4.899089,-8.167317,-9.110673,-1.626422,6.973354,-6.292472,-9.171076,2.584616,-7.261159,6.661294,1.938277,8.767236,-0.345370,4.145391,0.854325,7.564320,-6.560657,-2.791746,-7.935996,2.262479,-8.891213,-6.985416,3.231418,-0.813900,8.399339,4.815598,7.595841,-0.971551,3.170920,-5.419305,4.648358,6.314810,7.228995,-6.258835,1.913420,-4.305797,6.357421,-0.174314,-9.327279], dtype = "float32")#candidate|6921|(176,)|const|float32
var_6922 = relay.var("var_6922", dtype = "float64", shape = (12, 60))#candidate|6922|(12, 60)|var|float64
call_6920 = relay.TupleGetItem(func_4275_call(relay.reshape(const_6921.astype('float32'), [1, 16, 11]), relay.reshape(var_6922.astype('float64'), [720,]), ), 2)
call_6923 = relay.TupleGetItem(func_4278_call(relay.reshape(const_6921.astype('float32'), [1, 16, 11]), relay.reshape(var_6922.astype('float64'), [720,]), ), 2)
const_6959 = relay.const([-5.869020,9.236599,-4.334185,8.613636,2.269297,2.797912,-6.337793,1.841882,-3.043471,-8.279164,-0.265480,6.614226,4.991417,3.098167,9.796933,1.530282,0.114578,7.944357,-9.893120,0.776329,2.107380,7.916037,-2.615391,4.550621,-5.317481,-7.831199,-4.644030,-7.972297,7.796181,-2.118820,-6.580705,8.269494,-7.109397,6.923137,6.145826,-7.185484,-4.457957,-8.416923,8.242150,8.873869,6.732159,-0.845175,-2.692017,-3.263710,-2.911012,-8.880301,-8.754553,-9.977804,-5.678513,2.313959,6.183059,-2.914441,3.924991,-9.260878,-7.751351,2.416700,1.951265,-8.591204,-6.923605,-5.541089,0.816821,-4.689066,-2.379138,0.919204,-7.246369,-0.746477,-5.849454,1.736834,-9.614008,-3.142037,-0.468933,-6.312157,-6.051876,0.269442,2.822976,3.116465,-6.535474,-3.261563,8.511192,5.251283,-0.153743,9.727490,8.419904,8.325639,-4.093075,-4.288083,8.768271,9.841243,5.862066,-6.693749,-2.930779,-8.597763,7.899684,3.749217,-2.212766,3.133991,-2.322983,9.097643,1.396492,1.416844,7.031090,-3.408698,1.650811,-1.587543,-9.160999,6.130946,-9.390750,5.515435,3.710344,-3.052426,-0.819312,-4.533539,-7.472402,-9.011717,-3.892878,-3.790306,5.442198,-4.397578,-7.213873,-3.608591,-4.796709,0.842705,9.484004,-9.803855,9.643014,-0.852019,-4.900372,-0.589769,-8.088086,2.106046,7.377082,-7.015000,-6.211194,3.019481,4.726352,-4.125267,8.764653,9.361056,-5.385706,2.949752,-3.543209,8.647140,0.867246,-3.273733,-8.962889,-3.886426,8.020103,5.632172,-9.587972,-0.637758,-4.798929,8.475039,-1.782070,-6.078784,-2.282277,-9.499403,4.766909,-1.641513,9.970035,-0.226807,-2.301735,4.770018,-6.677842,3.630275,4.224415,-7.228592,-7.092538,-1.373805,-0.581254,-0.510705,-0.586387,-4.309866,-4.776779,-9.207819,4.281644,-2.089578], dtype = "float32")#candidate|6959|(176,)|const|float32
bop_6960 = relay.logical_xor(const_6921.astype('uint64'), relay.reshape(const_6959.astype('uint64'), relay.shape_of(const_6921))) # shape=(176,)
func_6151_call = mod.get_global_var('func_6151')
func_6152_call = mutated_mod.get_global_var('func_6152')
call_6968 = relay.TupleGetItem(func_6151_call(), 2)
call_6969 = relay.TupleGetItem(func_6152_call(), 2)
bop_6973 = relay.less(call_6920.astype('bool'), relay.reshape(call_6968.astype('bool'), relay.shape_of(call_6920))) # shape=(10, 8, 9)
bop_6976 = relay.less(call_6923.astype('bool'), relay.reshape(call_6969.astype('bool'), relay.shape_of(call_6923))) # shape=(10, 8, 9)
uop_6980 = relay.exp(var_6922.astype('float64')) # shape=(12, 60)
output = relay.Tuple([call_6906,bop_6960,bop_6973,uop_6980,])
output2 = relay.Tuple([call_6907,bop_6960,bop_6976,uop_6980,])
func_6982 = relay.Function([var_6922,], output)
mod['func_6982'] = func_6982
mod = relay.transform.InferType()(mod)
mutated_mod['func_6982'] = func_6982
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6983 = relay.var("var_6983", dtype = "float64", shape = (12, 60))#candidate|6983|(12, 60)|var|float64
func_6982_call = mutated_mod.get_global_var('func_6982')
call_6984 = func_6982_call(var_6983)
output = call_6984
func_6985 = relay.Function([var_6983], output)
mutated_mod['func_6985'] = func_6985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_738_call = mod.get_global_var('func_738')
func_739_call = mutated_mod.get_global_var('func_739')
call_6998 = relay.TupleGetItem(func_738_call(), 0)
call_6999 = relay.TupleGetItem(func_739_call(), 0)
func_6473_call = mod.get_global_var('func_6473')
func_6475_call = mutated_mod.get_global_var('func_6475')
call_7000 = relay.TupleGetItem(func_6473_call(), 1)
call_7001 = relay.TupleGetItem(func_6475_call(), 1)
func_3649_call = mod.get_global_var('func_3649')
func_3651_call = mutated_mod.get_global_var('func_3651')
call_7002 = func_3649_call()
call_7003 = func_3649_call()
func_2080_call = mod.get_global_var('func_2080')
func_2083_call = mutated_mod.get_global_var('func_2083')
var_7005 = relay.var("var_7005", dtype = "float64", shape = (40, 1))#candidate|7005|(40, 1)|var|float64
call_7004 = relay.TupleGetItem(func_2080_call(relay.reshape(var_7005.astype('float64'), [1, 40])), 2)
call_7006 = relay.TupleGetItem(func_2083_call(relay.reshape(var_7005.astype('float64'), [1, 40])), 2)
uop_7013 = relay.atanh(var_7005.astype('float64')) # shape=(40, 1)
output = relay.Tuple([call_6998,call_7000,call_7002,call_7004,uop_7013,])
output2 = relay.Tuple([call_6999,call_7001,call_7003,call_7006,uop_7013,])
func_7017 = relay.Function([var_7005,], output)
mod['func_7017'] = func_7017
mod = relay.transform.InferType()(mod)
mutated_mod['func_7017'] = func_7017
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7018 = relay.var("var_7018", dtype = "float64", shape = (40, 1))#candidate|7018|(40, 1)|var|float64
func_7017_call = mutated_mod.get_global_var('func_7017')
call_7019 = func_7017_call(var_7018)
output = call_7019
func_7020 = relay.Function([var_7018], output)
mutated_mod['func_7020'] = func_7020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4468_call = mod.get_global_var('func_4468')
func_4469_call = mutated_mod.get_global_var('func_4469')
call_7027 = relay.TupleGetItem(func_4468_call(), 0)
call_7028 = relay.TupleGetItem(func_4469_call(), 0)
func_3529_call = mod.get_global_var('func_3529')
func_3531_call = mutated_mod.get_global_var('func_3531')
call_7040 = relay.TupleGetItem(func_3529_call(), 0)
call_7041 = relay.TupleGetItem(func_3531_call(), 0)
func_2617_call = mod.get_global_var('func_2617')
func_2618_call = mutated_mod.get_global_var('func_2618')
call_7078 = func_2617_call()
call_7079 = func_2617_call()
func_6715_call = mod.get_global_var('func_6715')
func_6717_call = mutated_mod.get_global_var('func_6717')
call_7083 = relay.TupleGetItem(func_6715_call(), 1)
call_7084 = relay.TupleGetItem(func_6717_call(), 1)
output = relay.Tuple([call_7027,call_7040,call_7078,call_7083,])
output2 = relay.Tuple([call_7028,call_7041,call_7079,call_7084,])
func_7089 = relay.Function([], output)
mod['func_7089'] = func_7089
mod = relay.transform.InferType()(mod)
output = func_7089()
func_7090 = relay.Function([], output)
mutated_mod['func_7090'] = func_7090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_738_call = mod.get_global_var('func_738')
func_739_call = mutated_mod.get_global_var('func_739')
call_7117 = relay.TupleGetItem(func_738_call(), 0)
call_7118 = relay.TupleGetItem(func_739_call(), 0)
output = relay.Tuple([call_7117,])
output2 = relay.Tuple([call_7118,])
func_7127 = relay.Function([], output)
mod['func_7127'] = func_7127
mod = relay.transform.InferType()(mod)
mutated_mod['func_7127'] = func_7127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7127_call = mutated_mod.get_global_var('func_7127')
call_7128 = func_7127_call()
output = call_7128
func_7129 = relay.Function([], output)
mutated_mod['func_7129'] = func_7129
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7148 = relay.var("var_7148", dtype = "float64", shape = (2, 16, 3))#candidate|7148|(2, 16, 3)|var|float64
uop_7149 = relay.asinh(var_7148.astype('float64')) # shape=(2, 16, 3)
bop_7154 = relay.add(var_7148.astype('uint8'), relay.reshape(uop_7149.astype('uint8'), relay.shape_of(var_7148))) # shape=(2, 16, 3)
bop_7159 = relay.bitwise_xor(uop_7149.astype('uint8'), relay.reshape(bop_7154.astype('uint8'), relay.shape_of(uop_7149))) # shape=(2, 16, 3)
output = bop_7159
output2 = bop_7159
func_7168 = relay.Function([var_7148,], output)
mod['func_7168'] = func_7168
mod = relay.transform.InferType()(mod)
var_7169 = relay.var("var_7169", dtype = "float64", shape = (2, 16, 3))#candidate|7169|(2, 16, 3)|var|float64
output = func_7168(var_7169)
func_7170 = relay.Function([var_7169], output)
mutated_mod['func_7170'] = func_7170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1576_call = mod.get_global_var('func_1576')
func_1577_call = mutated_mod.get_global_var('func_1577')
call_7179 = relay.TupleGetItem(func_1576_call(), 0)
call_7180 = relay.TupleGetItem(func_1577_call(), 0)
func_1549_call = mod.get_global_var('func_1549')
func_1551_call = mutated_mod.get_global_var('func_1551')
call_7182 = relay.TupleGetItem(func_1549_call(), 0)
call_7183 = relay.TupleGetItem(func_1551_call(), 0)
output = relay.Tuple([call_7179,call_7182,])
output2 = relay.Tuple([call_7180,call_7183,])
func_7187 = relay.Function([], output)
mod['func_7187'] = func_7187
mod = relay.transform.InferType()(mod)
mutated_mod['func_7187'] = func_7187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7187_call = mutated_mod.get_global_var('func_7187')
call_7188 = func_7187_call()
output = call_7188
func_7189 = relay.Function([], output)
mutated_mod['func_7189'] = func_7189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6570_call = mod.get_global_var('func_6570')
func_6571_call = mutated_mod.get_global_var('func_6571')
call_7198 = relay.TupleGetItem(func_6570_call(), 0)
call_7199 = relay.TupleGetItem(func_6571_call(), 0)
func_4435_call = mod.get_global_var('func_4435')
func_4437_call = mutated_mod.get_global_var('func_4437')
const_7201 = relay.const([-5.063670,0.720515,3.268145,2.579822,-7.385553,8.961731,-5.717400,-5.173990,3.958685,-5.212025,6.670983,-6.735984,9.461636,-5.221945,8.425746,-5.663233,-7.002619,7.588398,1.261684,7.658661,1.434654,-9.260949,7.562437,7.920636,-1.159447,4.150969,6.799330,5.259175,-7.972467,-9.056701,0.729719,3.605384,-0.125428,2.756201,-4.861246,0.877285,9.941666,8.207135,0.771084,2.055772,7.050191,1.553529,9.835627,5.258662,3.406549,1.523276,-6.067530,-4.367053,1.858946,-6.284540,-8.048703,1.641693,9.719473,-5.103228,3.427884,-6.610770,1.429688,4.944255,-6.817663,-2.634442,-9.415140,-7.233139,-5.110770,9.103901,-1.565438,8.785319,-8.331573,-4.826429,-6.148741,-9.576841,-4.382396,-4.474363,-6.268987,-3.176515,-8.203855,-6.485457,-0.798498,3.810049,5.273598,-5.560104,-1.399947,-6.632260,-1.176698,-3.905870,-9.484175,-5.071321,0.686071,-1.530564,8.682328,-5.980069,4.554046,-8.493023,7.223236,-2.377625,8.324116,-2.270338,6.005422,-0.051889,6.396469,-5.462718,1.891845,-0.229370,8.359114,-7.959240,-3.236812,-6.262464,-4.429599,7.885915,-7.163032,-6.606925,1.536028,3.057305,-6.058712,-2.942822,-8.691218,7.493907,-4.749212,-5.963853,-9.764775,-5.372380,9.808757,-0.065615,7.810305,7.714791,0.453285,3.005116,-6.884799,9.789924,-9.391489,-9.498969,-4.135119,-6.702066,8.502656,-5.468394,-8.056468,-2.278107,4.120039,2.761358,5.079905,-5.235455,-0.534928,9.243068,-0.116865,3.536904,-7.843035,0.529909,6.560500,7.533369,-7.692913,-6.728371,-1.258511,-0.988260,7.088232,9.020330,-0.376448,-0.006326,2.096209,3.744552,-6.793857,5.470770,-8.223514,-3.415268,-7.331726,3.932115,1.135938,0.540502,-5.887815,-2.396430,3.076848,-4.390794,3.646689,2.525377,-1.249566,0.720996,7.704602,-0.558144,3.752977,-9.488668,-3.839108,5.797634,3.237408,-9.710652,-6.420860,-6.817879,-6.997214,-8.035855,5.120111,-8.208374,-0.034826,-7.402023,-5.501388,-9.666666,4.076092,-6.073208,-1.230566,-4.320362,-1.763254,8.861355,3.633281,2.990479,7.972011,6.738271,4.890924,-4.250270,6.058295,9.346091,9.824717,-5.519479,-1.354805,8.001014,-1.575402,4.400123,-8.288917,9.815338,-6.213087,5.788760,-8.469086,-2.239648,-5.443989,-6.889420,0.549962,-6.749775,6.114578,-9.419073,3.436682,-6.397052,2.588219,-7.626494,-0.328797,3.902357,-3.775978,-9.904231,6.592788,-8.573247,-1.865505,-3.976409,9.432834,-1.337819,9.017384,-1.478328,-7.842740,-8.430199,-5.784867,2.258118,-8.021263,2.229638,8.912347,-6.662499,-5.703168,2.186687,4.316914,6.760797,-1.281368,5.593418,-9.869653,-4.064595,-6.060373,-5.317200,0.578654,2.552329,-0.214203,2.380494,3.138794,-8.920002,-0.010014,-0.569685,6.341244,-5.364173,1.985124,6.234817,-6.279501,8.877073,-8.654906,6.442366,2.550446,-6.651917,-7.805616,-2.203726,5.138083,7.795994,-0.848129,1.746115,5.644314,3.536197,3.240936,-1.015156,-9.293859,-1.706139,0.856867,-1.252779,-8.958356,-0.910152,-9.808436,-1.445174,-8.733966,-0.044715,4.891466,-1.439003,7.870861,-5.093273,0.835395,-2.026527,-0.596930,-4.280928,3.803632,-5.596323,2.222336,-6.594058,8.860167,9.819559,-3.984454,-7.728621,8.376177,4.097781,-7.539283,6.789003,-6.913268,0.271287,-2.273507,8.903329,5.143605,-7.070858,-9.695703,-2.177224,4.635832,5.412916,8.041633,-3.180604,1.754116,-8.981345,8.201015,9.604159,1.620739,-4.482764,-1.982738,5.298990,8.575705,0.703219,-6.333716,-6.227561,8.124950,-6.288379,9.857976,-2.623412,-4.344175,0.912555,-8.231881,6.258064,2.631172,-2.264177,8.750240,1.125637,3.852356,7.570154,2.566094,9.643690,2.273392,2.527710,-2.793924,0.009376,-7.097481,-6.230270,7.714082,7.159103,0.535132,6.525700,7.688078,-3.046234,5.099795,7.773370,7.859502,6.824291,-1.731099,4.070622,-4.370300,8.744132,1.222592,-5.863231,3.888204,-9.280770,4.514332,-1.968492,-7.416753,3.795828,-3.761090,-3.850731,0.516076,-0.965086,7.525479,3.059639,5.140827,-3.823380,-4.522353,2.337513,-8.216287,9.916052,0.315056,8.030382,-4.657358,4.876517,5.140691,-8.952621,-6.472377,-0.879976,-6.384485,5.982368,-2.303498,9.428150,-8.730599,-5.818381,-9.450014,-4.301739,5.294936,9.747522,-3.402626,-4.996919,5.743612,5.915705,-3.265598,2.503592,2.882964,-1.476650,-3.569322,-6.164713,-8.639314,-4.538521,-4.610218,5.316986,-8.089155,1.417363,4.041176,-3.755330,-9.447565,-6.807705,3.442594,-3.849892,9.879034,-8.593129,-7.746665,-8.721530,4.898712,1.560876,-2.862961,-6.212786,2.740319,1.966450,7.832395,8.080133,0.338621,-5.668932,7.784744,8.383166,2.083349,7.328141,8.562581,1.022688,-5.876841,-6.364537,4.765369,9.436921,1.832030,5.106485,-8.896625,-3.476366,6.498038,-7.563230,4.690769,9.115426,5.625734,-9.779425,-9.642057,6.579373,-1.293647,8.666357,-7.772234,4.442969,-5.322273,4.566888,4.419656,-9.121592,-8.709789,-4.944893,7.710473,5.560161,-0.293501,3.625392,7.833657,0.200962,-4.428259,8.542290,6.092795,-8.028363,1.654353,-3.418084,-5.731665,5.420283,9.141666,-0.492194,5.018950,7.960804,-2.373683,0.957226,2.203709,4.679641,8.137299,6.087156,7.318830,-2.924831,6.136947,-8.465299,-8.805587,-6.796420,2.589504,-1.880951,-1.886820,-0.145608,-4.534056,-1.864518,-8.057269,2.505618,-2.026169,-9.993741,1.830194,6.255872,3.013587,-1.801490,0.241548,0.574398,8.135111,-3.660063,2.457361,-9.703138,-1.925370,4.970841,9.614819,-4.160151,3.948759,6.730331,-8.915971,7.825542,-6.217750,1.513759,7.759465,-5.944538,-6.133809,-4.563938,2.877091,3.020120,-2.637222,-6.583642,5.726028,2.806415,5.143011,3.626812,7.609533,5.195459,-7.682926,-5.355157,2.385214,7.884689,3.347839,0.885777,-3.228596,-1.851466,-4.828020,-3.002148,2.819941,-2.141396,2.771081,-9.388662,6.578078,-8.843461,-2.080051,9.195910,-0.077288,8.517262,-5.174371,-2.556483,9.266594,4.772808,-5.853449,-3.744042,-0.027383,-9.104718,-7.702240,-8.274297,7.074971,-1.487491,6.908553,2.547913,-5.465142,3.358645,-9.321826,3.313564,-5.990471,8.305810,7.481077,7.251552,-9.444265,8.226695,-8.134122,-4.232143,-1.127794,-9.340475,-2.982755,8.482232,-4.045184,-7.872485,0.989952,6.619097,-1.338058,-9.224480,-0.192772,1.479377,4.471514,1.220344,7.642243,5.015092,-7.812476,8.949808,-5.791781,7.728789,-4.853864,4.245811,-2.047524,9.568510,0.882724,-4.298586,6.652961,-4.307943,-8.510134,2.161330,-8.718612,8.221872,-4.344967,6.987764,-5.483086,9.539262,-8.822577,-1.712023,9.599042,-8.776389,4.256212,-7.693924,-8.477029,4.006595,9.421897,-0.264676], dtype = "float32")#candidate|7201|(648,)|const|float32
call_7200 = relay.TupleGetItem(func_4435_call(relay.reshape(const_7201.astype('float32'), [9, 8, 9])), 2)
call_7202 = relay.TupleGetItem(func_4437_call(relay.reshape(const_7201.astype('float32'), [9, 8, 9])), 2)
output = relay.Tuple([call_7198,call_7200,const_7201,])
output2 = relay.Tuple([call_7199,call_7202,const_7201,])
func_7208 = relay.Function([], output)
mod['func_7208'] = func_7208
mod = relay.transform.InferType()(mod)
output = func_7208()
func_7209 = relay.Function([], output)
mutated_mod['func_7209'] = func_7209
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7233 = relay.var("var_7233", dtype = "float32", shape = (9, 13, 4))#candidate|7233|(9, 13, 4)|var|float32
uop_7234 = relay.sinh(var_7233.astype('float32')) # shape=(9, 13, 4)
bop_7247 = relay.not_equal(uop_7234.astype('bool'), relay.reshape(var_7233.astype('bool'), relay.shape_of(uop_7234))) # shape=(9, 13, 4)
bop_7251 = relay.floor_mod(bop_7247.astype('float64'), relay.reshape(var_7233.astype('float64'), relay.shape_of(bop_7247))) # shape=(9, 13, 4)
uop_7258 = relay.log10(var_7233.astype('float64')) # shape=(9, 13, 4)
func_1140_call = mod.get_global_var('func_1140')
func_1142_call = mutated_mod.get_global_var('func_1142')
call_7261 = relay.TupleGetItem(func_1140_call(), 0)
call_7262 = relay.TupleGetItem(func_1142_call(), 0)
output = relay.Tuple([bop_7251,uop_7258,call_7261,])
output2 = relay.Tuple([bop_7251,uop_7258,call_7262,])
func_7268 = relay.Function([var_7233,], output)
mod['func_7268'] = func_7268
mod = relay.transform.InferType()(mod)
var_7269 = relay.var("var_7269", dtype = "float32", shape = (9, 13, 4))#candidate|7269|(9, 13, 4)|var|float32
output = func_7268(var_7269)
func_7270 = relay.Function([var_7269], output)
mutated_mod['func_7270'] = func_7270
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7308 = relay.const([[[-5.017604,2.392210,-9.807392,-4.529239,6.173490,-6.064601,-0.212295,5.094828,2.506054,7.025870,-9.183628,8.825809],[-4.109633,-3.047874,-3.721929,-3.868391,-5.153882,2.847670,2.790482,6.516507,-7.264684,-8.445937,-5.345585,-5.354377],[-5.024778,0.549895,-9.321449,8.781717,9.426870,6.025884,-1.109744,8.995078,6.594694,3.630895,-8.761401,6.614850],[0.391039,-3.177381,4.093827,3.383566,-1.368895,-8.922242,4.449828,0.798701,6.542877,-1.693546,-3.421301,-1.161922],[-3.992967,5.189235,7.081746,5.305839,-8.627056,-5.216221,4.437531,-5.211944,-2.203522,-3.187149,-2.487657,9.228897],[-7.083626,3.372096,0.830560,4.239122,-9.453308,-7.527900,2.160959,-3.367269,1.275833,-4.001179,-5.782850,-0.676915],[7.186780,-0.603341,-4.313339,-4.666175,-4.789549,-2.665776,3.300728,1.464125,-7.344242,6.262624,-6.153168,6.495411]],[[-9.761883,-7.693616,-0.261880,-0.765568,5.785188,-3.460928,-4.994113,-9.521893,-7.844139,-5.944168,-5.084874,6.438754],[3.860219,5.235021,-5.374780,-6.497477,-1.929756,4.200578,8.992183,-3.465553,9.078834,0.605993,3.828790,-3.356015],[-6.218496,-6.871499,-3.791076,9.695586,-1.275156,9.958281,3.788872,-1.276553,-8.081190,6.663446,7.451888,-8.531305],[-5.496772,-6.418766,-6.218790,5.017312,9.886949,1.527000,-3.524377,0.336417,8.855522,3.747475,-6.409079,-8.799642],[-3.743228,2.893700,-7.746550,-2.169759,9.482844,-9.756761,3.601758,-8.354496,3.460902,-1.284002,-9.944416,5.948871],[9.535823,-8.587008,-9.826445,-5.209656,-7.124067,-7.403655,-8.698621,8.912953,1.214727,1.010043,-1.403470,3.543107],[8.547694,5.960702,0.625538,-7.881639,0.614143,9.126787,6.784741,-6.884777,1.388289,-4.691316,3.974845,4.833855]],[[-3.330371,4.176641,-5.394153,-5.426778,6.002818,0.208167,-5.804954,9.801792,-1.121821,7.516012,-2.606352,-4.525650],[-3.267565,6.264500,-6.015606,-2.673021,7.395934,0.154679,-1.039067,-3.871727,8.728951,2.023280,6.606749,-4.956952],[9.051580,3.532780,5.214576,2.701598,2.668945,-6.830949,0.623110,-9.442802,-2.779251,-0.766836,6.157202,-5.658394],[-0.431623,2.682649,-8.096864,1.884246,3.908640,-6.299230,-7.786295,4.517723,-5.635329,-5.613145,-4.510100,9.607361],[-5.861961,-0.765169,-6.688735,8.077356,-1.105936,-7.627293,-4.011609,-8.906599,-5.001810,-6.179385,-0.791434,-3.305219],[9.677964,-4.112079,1.947181,5.159354,1.180839,-5.798635,-0.217728,-4.117967,-9.621510,-9.166718,-0.551021,-5.915036],[1.816099,-7.052603,-7.808216,-0.105958,2.278843,-7.259093,-6.825500,-4.686669,0.291501,6.657244,-7.155521,-4.052982]],[[-2.287356,3.652212,1.104333,-5.993598,0.619408,-0.078331,1.288187,9.537475,3.808351,-0.027527,8.421922,2.522095],[5.174296,0.329034,-5.338588,-9.198861,-7.283480,8.960857,7.126488,-6.705112,-3.658967,5.674381,2.537343,-9.614055],[-8.535026,7.511907,-8.009416,-2.316479,5.883101,2.508876,5.119041,6.223469,-3.705502,4.327092,-3.498183,-7.571398],[-5.490392,-5.785378,-1.268627,-1.687398,8.036507,2.414741,-6.430293,3.469558,9.095433,5.837457,-1.594989,-4.599846],[0.579333,7.704180,7.857176,5.446971,3.852170,9.938827,-1.440450,-0.004852,1.347870,4.413619,6.636784,-7.906365],[-1.978398,6.345850,-5.907910,6.156997,1.895709,4.394038,-9.547632,-6.912716,-4.268631,1.917932,4.132563,2.227967],[4.327466,-6.880200,6.981194,5.524608,-3.305057,0.183552,-7.110096,-0.667940,9.027915,-4.647538,-9.096492,3.186848]],[[5.986590,-0.734158,-7.289194,4.554635,-4.414510,-5.975045,-2.108550,3.313264,-6.174013,9.521228,1.026376,-7.375973],[1.164555,-9.300018,2.865090,5.586945,6.299571,1.656558,3.141569,2.193879,-4.255504,7.959893,-4.244781,2.993625],[6.196714,7.692893,-5.703441,0.627866,4.338067,-7.892193,5.154292,7.111478,8.840576,-8.187207,2.984849,-0.815252],[6.910646,8.367074,6.596969,-9.017148,5.737678,3.156226,7.760831,-8.529679,8.351177,4.767975,-7.085930,7.534982],[0.821736,-9.050751,3.740691,-1.974109,-2.513890,-4.494561,-9.990186,1.439855,9.740219,-2.079309,4.869149,8.110400],[0.797426,-3.997645,2.488858,7.480082,6.764875,9.053017,-9.551932,-8.415680,9.015624,-8.590583,8.502915,-4.516886],[5.794635,-8.369629,5.186820,0.512699,-4.899861,-4.175892,8.645838,4.588092,3.984438,5.163409,-6.203176,-7.922477]],[[6.836991,-9.990033,-9.456898,6.128316,0.981228,1.102541,6.169973,6.538338,-2.069689,6.358416,3.458460,-8.138756],[3.567607,-9.916217,6.552020,-1.026685,-4.157043,-2.676215,5.308853,-8.271090,1.821479,5.114937,-8.913966,-8.233637],[-2.086264,-4.256544,-9.402597,-0.941622,-3.674584,-8.668849,8.881072,-2.568637,4.338157,3.824502,-8.460273,6.644417],[6.178809,-4.970116,5.164166,-6.180652,-4.270341,0.712560,6.958891,3.074742,-6.405070,-1.070795,-7.942419,0.711369],[8.647066,-2.683343,-0.474680,0.713830,-1.432296,9.197351,-5.903095,8.404984,-5.025376,-1.870344,-7.938225,-9.702002],[2.505737,-7.073684,7.203877,5.595953,-3.116645,2.373186,3.761419,-9.650051,-1.075485,2.967421,6.365189,-6.708339],[1.122118,-4.644007,-2.070858,-7.198106,8.777036,6.697844,0.290147,1.699668,-3.291107,-2.341548,8.770026,1.425305]],[[7.484103,-3.795678,4.860564,-5.744755,9.167225,-8.873510,6.823977,6.228394,3.146453,-7.102835,5.291044,5.424956],[-4.671738,4.109977,-5.411397,4.455644,9.152237,3.901086,-3.837959,5.271057,-1.305206,9.786461,7.818616,-7.995403],[6.624208,8.459844,-3.648546,-4.840427,-4.705715,-1.418002,-8.150536,-1.951155,9.486244,-8.860328,-0.175705,-1.833334],[4.481038,-0.297567,-3.027614,-1.539015,3.042379,5.119623,-4.448694,-7.891940,6.891136,7.093047,7.136431,-4.480641],[3.415349,-0.934041,-3.301473,-4.203516,2.391229,-8.032011,6.615464,6.946718,-3.717655,-3.920895,4.775564,-9.898612],[3.332137,-9.209037,4.651897,-6.722346,-2.564078,-2.436603,1.730357,-6.160255,-0.616724,-3.082919,9.648966,-9.134417],[-2.670459,-5.031049,-4.946707,5.915640,0.565461,-7.475513,-4.255812,9.546185,5.964776,0.756675,9.882348,0.004528]],[[6.065105,8.980755,-7.366635,-1.512757,6.556632,-9.833510,6.638625,6.947089,5.822119,-8.322744,-7.238390,-3.373718],[6.207103,-5.966007,-5.032788,-6.059915,-3.790294,-1.456876,-4.079768,8.836848,-7.467407,4.241909,9.509554,-7.044086],[-9.931061,-2.116745,-8.692454,-4.195374,8.137761,-7.134948,0.741307,5.921616,2.683668,-2.494388,-2.132457,3.006058],[5.683520,6.652428,4.830642,0.550899,-3.764248,8.139100,7.052305,-9.514607,-4.218035,-3.380840,-9.370272,1.883664],[4.450940,3.453163,-9.846937,-8.468622,9.922695,-3.350146,6.600772,-7.558826,-1.650840,8.429755,6.217582,-7.997904],[-1.761911,5.323327,-4.700837,-8.424240,-8.958188,6.112858,-1.967184,-4.192790,8.375446,9.656719,8.786253,-3.058947],[0.227218,8.623791,-3.657213,-2.603685,-5.345440,0.807507,3.878902,-1.579581,1.920527,-2.672488,-7.073308,7.847260]],[[3.827342,-7.599556,-6.978758,-9.948656,-8.187888,-0.088930,8.162051,-6.470398,1.387212,-4.004811,9.855101,-7.472858],[9.937012,0.107900,-0.742258,9.118728,3.403412,-6.571959,8.108836,7.987105,-2.573347,-4.641988,-4.921671,2.834845],[-5.961260,-0.224027,-9.979028,-5.001144,2.694439,2.602156,-4.645939,-8.756528,4.739739,6.501599,7.437348,-8.918995],[-5.539174,-8.961976,8.569749,-8.031811,3.522891,-1.366874,-6.353558,0.145182,-3.730053,4.821423,-7.357116,-2.876330],[-2.746789,-8.772784,-3.619339,1.937412,2.038632,5.059499,4.064113,-1.693734,2.181127,-4.287423,2.585012,8.215515],[9.725100,-5.419331,-5.838652,6.976234,-8.862457,4.325818,-8.578575,5.921667,-7.327080,8.288188,6.836810,-3.405138],[-9.698897,-8.881316,9.059531,3.464958,-3.414018,-0.696884,-5.854910,6.007272,5.234046,4.130595,8.599189,0.058715]],[[7.652799,3.371657,-0.747799,7.931914,-3.223260,-2.243861,-6.773770,-8.658669,6.914308,2.773247,-9.130871,-4.036358],[2.061006,-6.121964,-5.105976,-7.965144,-7.265274,-1.949366,-4.638775,2.686016,0.346630,-2.618231,8.052420,-1.153266],[7.129791,-6.875887,-3.268752,5.473766,-8.455472,-0.431943,7.069846,-1.514131,-1.943337,-7.916041,9.294032,-7.341722],[9.861542,-9.308469,7.783758,7.949287,-8.072033,4.045760,-8.349950,8.631594,-1.968267,4.494135,-3.771411,1.154302],[1.355678,8.654826,7.995000,1.399541,-5.273897,8.784651,3.944277,-6.273286,-6.200018,-7.116864,-6.789656,7.616251],[-8.156187,-5.915247,-7.259625,4.732929,4.220661,-9.454077,-2.979582,4.790848,8.764237,1.365760,1.772177,8.075572],[4.156586,-0.066245,0.780787,-9.337203,8.578209,-1.083982,-1.294597,8.244368,9.978031,-2.199020,1.366406,-0.477238]],[[-3.206518,9.787932,-6.052510,2.835251,9.319773,1.453420,0.902367,-3.163959,5.659821,-9.975707,-3.171027,1.459462],[-1.844897,-3.065392,-1.456106,-1.466691,-1.214777,-2.800200,-3.532430,-5.520774,-4.730292,-6.443152,7.591458,-7.181900],[-7.879422,-2.845197,-6.806197,-3.598206,9.883292,-2.099092,1.176832,-8.450382,4.193379,-4.947902,-2.538443,3.207460],[5.826223,-7.513070,-9.035361,9.982860,8.471874,1.179957,2.678824,-9.417951,-5.951099,-6.605250,-6.471678,8.397994],[-0.518771,7.226806,-2.522208,4.324586,7.856394,-8.825162,-7.606706,-5.463300,4.003983,1.224911,4.647364,0.477162],[-6.213016,5.929761,-4.844358,-9.492282,0.663867,1.440706,-0.452240,8.150183,-0.957471,5.510937,4.197373,0.486811],[-7.204987,5.035673,-4.629988,9.492989,1.902134,2.613214,-6.882031,-9.846925,-8.719156,6.913832,-2.778212,-7.032473]],[[7.293200,5.217097,4.742554,1.621414,4.733363,1.118415,-9.008255,-5.863197,3.473892,7.954514,-1.868944,2.108201],[-9.489078,1.910272,7.667365,9.292421,-1.899510,3.508554,6.895162,0.604854,-9.002781,9.961478,0.886883,-1.549425],[3.807447,-2.163167,9.199736,-1.401220,9.444248,-8.244096,4.992839,0.143045,-8.534482,1.780226,0.554666,-3.789020],[2.612282,-5.353966,2.630010,-4.902786,8.065229,-7.600325,-1.350925,-8.170518,0.346691,3.730346,-7.389450,-1.030355],[2.985167,2.912660,-4.634262,-8.712419,1.546052,-6.251160,9.811778,1.915995,-9.268731,0.053744,7.172863,-8.756452],[-2.617224,2.987077,-5.107248,6.499488,-2.220908,-0.072164,-8.083729,-6.458846,-3.846845,3.240766,7.564983,-4.788835],[-6.657254,3.913293,7.650926,-4.142943,8.100083,-2.931825,8.681469,4.438550,-3.669560,-6.173440,7.031584,-6.739259]],[[-7.309110,7.666153,7.918948,4.214986,-2.633305,2.027465,-0.907378,0.441800,6.623522,1.109112,-9.591073,-8.101136],[-2.168977,1.915545,-3.262023,5.812806,6.531646,-7.526508,-7.733774,6.609119,-7.558638,-3.032278,-4.986270,-8.082097],[-4.874677,1.145127,5.215024,9.873791,-8.747199,8.134943,7.889324,4.189452,3.098816,1.491608,0.931043,-1.790967],[8.245819,-5.534079,5.077329,3.430522,-2.734812,-8.816223,5.592024,-2.599621,-4.867325,-7.102626,-2.840858,6.974342],[4.867658,-9.341992,7.167334,3.043223,2.659506,-7.662170,-6.342012,-2.442766,-0.561656,-0.310177,4.036299,-4.488586],[-4.131376,3.372193,-8.486576,2.439497,2.018357,0.371595,-2.165389,0.104492,-2.790248,-1.450584,5.197531,-0.127866],[2.296730,9.141917,3.300729,5.538963,-0.661259,-9.374386,6.790854,9.675186,9.282460,6.928394,5.598009,-3.835766]],[[-1.385914,-5.960965,4.099647,-0.571098,-5.543758,2.010819,0.239135,7.329519,3.374889,-8.494267,1.292669,3.139837],[-5.135836,5.744757,8.055954,-4.086260,-3.910851,-7.510203,3.511733,6.163838,-3.674492,4.806329,9.529345,-2.232267],[-0.176736,9.239294,-9.175671,6.334866,0.867145,-5.503477,-2.847174,-1.149756,3.059752,-6.239903,4.496311,-9.510792],[5.508610,1.981810,2.159583,9.367882,0.684945,6.801874,-4.433963,-2.275072,4.753673,-3.461054,9.153784,4.276321],[5.476837,2.778502,8.788254,5.902084,6.362695,8.402006,-2.844867,3.520750,1.124380,2.995380,2.180307,8.847070],[-9.784205,-8.759646,-3.396425,-1.303812,6.649737,0.743239,-0.400470,9.108854,0.414249,-9.022201,-9.566613,9.985755],[-8.883115,7.232734,4.096670,6.491993,-9.197846,2.652367,9.253194,5.204927,-9.605356,3.806840,7.907832,-1.595960]],[[1.650832,-1.947981,-2.548543,3.287127,-9.646433,-2.387341,5.409432,4.317633,7.334182,-0.605884,-4.331065,-7.739295],[-1.572394,1.771592,-7.510085,0.525463,-2.998148,5.535793,4.553828,-8.558606,1.984850,0.056028,-8.303948,2.061459],[-3.528690,-4.333478,7.821107,7.296772,-2.448141,6.426379,-1.153854,-1.343846,-4.576793,-6.546659,-2.794073,8.192678],[8.062457,-4.716160,2.909098,-0.795558,6.938016,-5.287423,4.570341,7.142446,4.907930,-7.296606,0.350368,-6.504781],[0.106312,9.903981,2.108045,9.868315,-9.723256,-2.282127,4.330236,6.200928,0.126000,4.026049,2.716902,-4.883316],[2.219181,-2.467975,5.038415,-2.518953,6.398291,-7.772927,-7.129389,-0.246053,2.082953,-2.697456,7.798313,-2.775697],[-6.735895,5.211677,-5.950870,-9.139673,-1.957722,-8.107988,1.497887,-8.342317,-4.589350,-2.839206,8.243485,4.337379]],[[6.175459,5.084702,5.847420,-2.251650,-6.418711,8.426118,7.442442,-5.027029,0.016672,-4.727704,-4.368435,7.557444],[6.453701,9.873661,-2.706588,-0.799128,7.047670,-1.507174,2.473988,-4.774515,-1.070717,-7.013744,6.028202,-3.234927],[5.000696,5.800841,7.826584,-7.963398,-4.358663,2.579366,1.352038,3.916350,-1.311383,8.744655,-4.142548,7.906840],[-2.616184,-4.474587,-2.016640,-4.262859,5.971040,7.184120,-5.862059,-9.454814,-0.994451,-8.539954,2.494058,-1.123784],[7.278608,3.266969,5.251001,8.007205,-7.386760,6.611714,-5.338430,-8.247494,8.059269,-3.135368,0.865715,7.248351],[4.350194,7.848769,5.956598,-0.784331,-3.730550,-0.393806,-9.624246,9.434968,8.963145,2.511687,-5.054833,-8.987505],[-3.109907,3.440601,4.429730,4.709849,-6.756522,8.363505,-6.110402,7.436188,5.456924,-7.384299,1.425518,-3.098404]]], dtype = "float32")#candidate|7308|(16, 7, 12)|const|float32
uop_7309 = relay.log(const_7308.astype('float32')) # shape=(16, 7, 12)
output = relay.Tuple([uop_7309,])
output2 = relay.Tuple([uop_7309,])
func_7323 = relay.Function([], output)
mod['func_7323'] = func_7323
mod = relay.transform.InferType()(mod)
output = func_7323()
func_7324 = relay.Function([], output)
mutated_mod['func_7324'] = func_7324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2617_call = mod.get_global_var('func_2617')
func_2618_call = mutated_mod.get_global_var('func_2618')
call_7384 = func_2617_call()
call_7385 = func_2617_call()
func_1185_call = mod.get_global_var('func_1185')
func_1187_call = mutated_mod.get_global_var('func_1187')
call_7387 = relay.TupleGetItem(func_1185_call(), 1)
call_7388 = relay.TupleGetItem(func_1187_call(), 1)
output = relay.Tuple([call_7384,call_7387,])
output2 = relay.Tuple([call_7385,call_7388,])
func_7396 = relay.Function([], output)
mod['func_7396'] = func_7396
mod = relay.transform.InferType()(mod)
output = func_7396()
func_7397 = relay.Function([], output)
mutated_mod['func_7397'] = func_7397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3649_call = mod.get_global_var('func_3649')
func_3651_call = mutated_mod.get_global_var('func_3651')
call_7404 = func_3649_call()
call_7405 = func_3649_call()
uop_7412 = relay.log2(call_7404.astype('float32')) # shape=(1, 8, 9)
uop_7414 = relay.log2(call_7405.astype('float32')) # shape=(1, 8, 9)
output = relay.Tuple([uop_7412,])
output2 = relay.Tuple([uop_7414,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

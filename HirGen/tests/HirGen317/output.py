import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_0 = relay.var("var_0", dtype = "float32", shape = (9, 2, 1))#candidate|0|(9, 2, 1)|var|float32
uop_1 = relay.sin(var_0.astype('float32')) # shape=(9, 2, 1)
bop_5 = relay.greater_equal(uop_1.astype('bool'), relay.reshape(var_0.astype('bool'), relay.shape_of(uop_1))) # shape=(9, 2, 1)
bop_10 = relay.less(bop_5.astype('bool'), relay.reshape(uop_1.astype('bool'), relay.shape_of(bop_5))) # shape=(9, 2, 1)
bop_14 = relay.logical_xor(uop_1.astype('int64'), relay.reshape(bop_5.astype('int64'), relay.shape_of(uop_1))) # shape=(9, 2, 1)
uop_22 = relay.atanh(var_0.astype('float32')) # shape=(9, 2, 1)
uop_48 = relay.cos(bop_14.astype('float64')) # shape=(9, 2, 1)
output = relay.Tuple([bop_10,uop_22,uop_48,])
output2 = relay.Tuple([bop_10,uop_22,uop_48,])
func_54 = relay.Function([var_0,], output)
mod['func_54'] = func_54
mod = relay.transform.InferType()(mod)
var_55 = relay.var("var_55", dtype = "float32", shape = (9, 2, 1))#candidate|55|(9, 2, 1)|var|float32
output = func_54(var_55)
func_56 = relay.Function([var_55], output)
mutated_mod['func_56'] = func_56
mutated_mod = relay.transform.InferType()(mutated_mod)
const_105 = relay.const(-4, dtype = "int64")#candidate|105|()|const|int64
var_106 = relay.var("var_106", dtype = "int64", shape = (11, 4, 8))#candidate|106|(11, 4, 8)|var|int64
bop_107 = relay.greater(const_105.astype('bool'), var_106.astype('bool')) # shape=(11, 4, 8)
output = bop_107
output2 = bop_107
func_116 = relay.Function([var_106,], output)
mod['func_116'] = func_116
mod = relay.transform.InferType()(mod)
var_117 = relay.var("var_117", dtype = "int64", shape = (11, 4, 8))#candidate|117|(11, 4, 8)|var|int64
output = func_116(var_117)
func_118 = relay.Function([var_117], output)
mutated_mod['func_118'] = func_118
mutated_mod = relay.transform.InferType()(mutated_mod)
var_165 = relay.var("var_165", dtype = "float32", shape = (15, 16, 4))#candidate|165|(15, 16, 4)|var|float32
uop_166 = relay.sin(var_165.astype('float32')) # shape=(15, 16, 4)
output = relay.Tuple([uop_166,])
output2 = relay.Tuple([uop_166,])
func_171 = relay.Function([var_165,], output)
mod['func_171'] = func_171
mod = relay.transform.InferType()(mod)
var_172 = relay.var("var_172", dtype = "float32", shape = (15, 16, 4))#candidate|172|(15, 16, 4)|var|float32
output = func_171(var_172)
func_173 = relay.Function([var_172], output)
mutated_mod['func_173'] = func_173
mutated_mod = relay.transform.InferType()(mutated_mod)
var_623 = relay.var("var_623", dtype = "float64", shape = (8, 2, 10))#candidate|623|(8, 2, 10)|var|float64
uop_624 = relay.asin(var_623.astype('float64')) # shape=(8, 2, 10)
uop_633 = relay.cosh(uop_624.astype('float32')) # shape=(8, 2, 10)
output = uop_633
output2 = uop_633
func_643 = relay.Function([var_623,], output)
mod['func_643'] = func_643
mod = relay.transform.InferType()(mod)
mutated_mod['func_643'] = func_643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_644 = relay.var("var_644", dtype = "float64", shape = (8, 2, 10))#candidate|644|(8, 2, 10)|var|float64
func_643_call = mutated_mod.get_global_var('func_643')
call_645 = func_643_call(var_644)
output = call_645
func_646 = relay.Function([var_644], output)
mutated_mod['func_646'] = func_646
mutated_mod = relay.transform.InferType()(mutated_mod)
const_909 = relay.const(True, dtype = "bool")#candidate|909|()|const|bool
var_910 = relay.var("var_910", dtype = "bool", shape = (8, 11, 10))#candidate|910|(8, 11, 10)|var|bool
bop_911 = relay.logical_or(const_909.astype('bool'), var_910.astype('bool')) # shape=(8, 11, 10)
output = bop_911
output2 = bop_911
func_920 = relay.Function([var_910,], output)
mod['func_920'] = func_920
mod = relay.transform.InferType()(mod)
mutated_mod['func_920'] = func_920
mutated_mod = relay.transform.InferType()(mutated_mod)
var_921 = relay.var("var_921", dtype = "bool", shape = (8, 11, 10))#candidate|921|(8, 11, 10)|var|bool
func_920_call = mutated_mod.get_global_var('func_920')
call_922 = func_920_call(var_921)
output = call_922
func_923 = relay.Function([var_921], output)
mutated_mod['func_923'] = func_923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1228 = relay.var("var_1228", dtype = "bool", shape = (3, 7, 16))#candidate|1228|(3, 7, 16)|var|bool
const_1229 = relay.const([[[False,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False],[True,False,False,False,True,False,False,False,False,True,False,True,False,True,True,True],[True,True,True,True,True,False,False,True,True,False,False,False,True,True,True,False],[True,True,False,False,True,False,False,False,False,False,True,False,True,False,True,False],[True,False,True,False,False,True,True,True,False,False,False,True,True,True,True,False],[False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True],[False,True,True,False,False,True,False,False,True,False,True,False,True,False,False,True]],[[True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,False],[False,False,False,True,True,False,True,False,False,True,False,True,True,False,False,True],[False,True,False,False,True,False,True,True,True,True,False,True,False,True,True,True],[True,True,False,False,False,True,False,False,False,False,False,False,False,False,True,False],[True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,False],[False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False],[False,True,True,True,True,True,False,True,True,True,False,True,False,False,True,False]],[[False,False,False,False,False,False,False,True,True,False,True,False,True,False,False,True],[False,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False],[False,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False],[True,False,True,False,True,True,False,True,False,True,True,False,True,True,False,False],[True,False,True,True,False,True,True,False,False,False,True,False,False,True,False,False],[True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,False],[True,True,False,True,False,True,True,True,True,False,True,False,True,False,False,True]]], dtype = "bool")#candidate|1229|(3, 7, 16)|const|bool
bop_1230 = relay.logical_or(var_1228.astype('bool'), relay.reshape(const_1229.astype('bool'), relay.shape_of(var_1228))) # shape=(3, 7, 16)
func_171_call = mod.get_global_var('func_171')
func_173_call = mutated_mod.get_global_var('func_173')
var_1236 = relay.var("var_1236", dtype = "float32", shape = (960,))#candidate|1236|(960,)|var|float32
call_1235 = relay.TupleGetItem(func_171_call(relay.reshape(var_1236.astype('float32'), [15, 16, 4])), 0)
call_1237 = relay.TupleGetItem(func_173_call(relay.reshape(var_1236.astype('float32'), [15, 16, 4])), 0)
uop_1270 = relay.cos(call_1235.astype('float32')) # shape=(15, 16, 4)
uop_1272 = relay.cos(call_1237.astype('float32')) # shape=(15, 16, 4)
func_171_call = mod.get_global_var('func_171')
func_173_call = mutated_mod.get_global_var('func_173')
call_1281 = relay.TupleGetItem(func_171_call(relay.reshape(call_1235.astype('float32'), [15, 16, 4])), 0)
call_1282 = relay.TupleGetItem(func_173_call(relay.reshape(call_1235.astype('float32'), [15, 16, 4])), 0)
bop_1290 = relay.bitwise_or(uop_1270.astype('uint8'), relay.reshape(call_1281.astype('uint8'), relay.shape_of(uop_1270))) # shape=(15, 16, 4)
bop_1293 = relay.bitwise_or(uop_1272.astype('uint8'), relay.reshape(call_1282.astype('uint8'), relay.shape_of(uop_1272))) # shape=(15, 16, 4)
uop_1296 = relay.atan(bop_1290.astype('float64')) # shape=(15, 16, 4)
uop_1298 = relay.atan(bop_1293.astype('float64')) # shape=(15, 16, 4)
output = relay.Tuple([bop_1230,var_1236,uop_1296,])
output2 = relay.Tuple([bop_1230,var_1236,uop_1298,])
func_1301 = relay.Function([var_1228,var_1236,], output)
mod['func_1301'] = func_1301
mod = relay.transform.InferType()(mod)
var_1302 = relay.var("var_1302", dtype = "bool", shape = (3, 7, 16))#candidate|1302|(3, 7, 16)|var|bool
var_1303 = relay.var("var_1303", dtype = "float32", shape = (960,))#candidate|1303|(960,)|var|float32
output = func_1301(var_1302,var_1303,)
func_1304 = relay.Function([var_1302,var_1303,], output)
mutated_mod['func_1304'] = func_1304
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1529 = relay.var("var_1529", dtype = "int64", shape = (7, 14, 16))#candidate|1529|(7, 14, 16)|var|int64
var_1530 = relay.var("var_1530", dtype = "int64", shape = (7, 14, 16))#candidate|1530|(7, 14, 16)|var|int64
bop_1531 = relay.add(var_1529.astype('int64'), relay.reshape(var_1530.astype('int64'), relay.shape_of(var_1529))) # shape=(7, 14, 16)
func_920_call = mod.get_global_var('func_920')
func_923_call = mutated_mod.get_global_var('func_923')
const_1537 = relay.const([[False,True],[False,False],[False,False],[False,True],[False,False],[False,False],[True,True],[False,False],[False,False],[True,True],[True,False],[False,True],[False,False],[True,False],[False,True],[True,True],[False,True],[True,False],[True,True],[False,True],[True,False],[False,False],[True,False],[False,False],[False,True],[True,False],[False,True],[True,False],[False,False],[True,False],[True,False],[True,False],[True,False],[False,False],[True,False],[False,False],[False,False],[True,False],[False,True],[False,False],[True,True],[False,True],[True,True],[True,True],[False,False],[True,True],[False,True],[True,True],[True,False],[False,True],[False,False],[True,True],[False,False],[True,False],[False,True],[False,True],[False,True],[False,True],[False,True],[False,False],[False,False],[False,False],[True,True],[False,False],[True,False],[True,False],[False,True],[True,False],[True,False],[False,True],[True,False],[False,True],[True,False],[True,False],[False,True],[False,False],[True,False],[False,False],[False,False],[True,True],[False,False],[True,False],[True,False],[False,True],[False,False],[False,True],[True,True],[True,False],[True,False],[False,True],[True,True],[True,True],[True,False],[True,True],[False,False],[True,True],[True,False],[True,False],[True,False],[True,True],[False,False],[True,True],[True,False],[False,False],[False,False],[False,True],[True,True],[False,True],[True,False],[False,False],[False,True],[True,True],[False,False],[False,True],[False,True],[False,True],[True,True],[False,False],[True,False],[True,True],[True,True],[True,False],[False,True],[True,False],[True,False],[False,False],[True,True],[True,True],[True,True],[False,False],[True,True],[True,False],[False,True],[True,False],[False,False],[True,True],[True,False],[True,True],[False,True],[True,True],[True,True],[True,False],[False,True],[False,False],[False,False],[False,True],[True,True],[False,False],[False,True],[False,False],[True,True],[True,False],[False,True],[True,False],[False,True],[True,True],[False,True],[True,True],[False,True],[True,False],[False,True],[False,True],[False,False],[True,False],[True,True],[True,False],[True,False],[False,True],[True,True],[True,True],[False,False],[False,True],[True,False],[False,True],[True,True],[False,True],[False,False],[True,False],[False,False],[False,True],[False,True],[True,True],[False,True],[False,True],[False,True],[True,True],[True,True],[False,True],[True,False],[False,True],[True,False],[False,True],[False,True],[True,False],[False,True],[True,False],[True,False],[True,True],[True,True],[False,False],[False,True],[True,True],[True,True],[False,False],[True,True],[True,False],[True,False],[True,False],[True,False],[False,True],[True,False],[True,False],[False,False],[True,False],[True,False],[False,True],[True,True],[True,False],[False,True],[True,True],[False,False],[True,False],[False,False],[False,False],[False,False],[True,True],[False,True],[False,True],[True,True],[True,True],[True,True],[False,True],[False,True],[True,False],[True,False],[True,True],[True,False],[True,True],[False,True],[True,False],[False,True],[True,False],[False,True],[True,True],[True,False],[False,False],[True,True],[True,True],[False,True],[True,True],[True,False],[True,False],[False,False],[False,False],[False,True],[False,False],[False,False],[False,False],[True,False],[False,False],[False,False],[True,False],[True,False],[True,False],[True,True],[True,True],[True,False],[True,False],[True,True],[False,True],[True,True],[True,True],[True,True],[False,False],[True,False],[True,False],[False,False],[False,False],[False,True],[False,False],[False,True],[True,False],[False,False],[False,True],[False,False],[False,True],[True,True],[False,False],[False,False],[True,False],[False,False],[False,True],[False,False],[True,False],[True,True],[False,False],[False,True],[False,False],[False,False],[True,False],[False,True],[True,False],[False,True],[False,True],[False,True],[True,False],[True,True],[True,True],[True,False],[False,False],[True,False],[False,False],[False,False],[False,False],[False,False],[False,True],[True,True],[True,False],[False,True],[True,False],[True,False],[True,False],[True,False],[False,False],[True,False],[False,False],[False,True],[False,False],[True,True],[False,False],[True,False],[True,False],[True,False],[False,False],[True,True],[False,False],[True,True],[True,False],[False,True],[False,True],[True,True],[True,True],[False,False],[False,True],[True,False],[True,False],[True,False],[False,False],[False,True],[False,False],[False,True],[False,False],[False,True],[False,False],[False,True],[True,True],[False,True],[True,False],[True,True],[True,False],[True,True],[False,False],[True,False],[True,False],[True,True],[False,False],[False,False],[False,True],[False,False],[True,False],[True,True],[False,True],[False,True],[True,True],[False,True],[True,True],[False,True],[False,True],[True,True],[True,True],[False,True],[True,True],[False,True],[False,False],[True,True],[False,True],[False,False],[False,False],[True,False],[True,True],[True,False],[True,True],[True,True],[False,True],[False,False],[False,False],[True,True],[True,True],[False,True],[True,True],[True,False],[False,True],[False,True],[False,False],[True,True],[True,False],[False,False],[True,True],[True,True],[False,True],[True,False],[False,True],[True,True],[False,True],[True,False],[True,False],[False,True],[True,False],[False,True],[False,True],[True,False],[True,True],[False,False],[False,False],[False,True],[True,True],[True,True],[False,True],[True,True],[False,False],[True,True],[False,True],[True,True],[True,True],[True,False],[True,False],[False,False],[True,False],[True,True],[False,True]], dtype = "bool")#candidate|1537|(440, 2)|const|bool
call_1536 = func_920_call(relay.reshape(const_1537.astype('bool'), [8, 11, 10]))
call_1538 = func_920_call(relay.reshape(const_1537.astype('bool'), [8, 11, 10]))
output = relay.Tuple([bop_1531,call_1536,const_1537,])
output2 = relay.Tuple([bop_1531,call_1538,const_1537,])
func_1541 = relay.Function([var_1529,var_1530,], output)
mod['func_1541'] = func_1541
mod = relay.transform.InferType()(mod)
mutated_mod['func_1541'] = func_1541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1541_call = mutated_mod.get_global_var('func_1541')
var_1543 = relay.var("var_1543", dtype = "int64", shape = (7, 14, 16))#candidate|1543|(7, 14, 16)|var|int64
var_1544 = relay.var("var_1544", dtype = "int64", shape = (7, 14, 16))#candidate|1544|(7, 14, 16)|var|int64
call_1542 = func_1541_call(var_1543,var_1544,)
output = call_1542
func_1545 = relay.Function([var_1543,var_1544,], output)
mutated_mod['func_1545'] = func_1545
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1628 = relay.var("var_1628", dtype = "float64", shape = (15, 8, 11))#candidate|1628|(15, 8, 11)|var|float64
const_1629 = relay.const([[[8.902627,0.118106,-0.567951,4.847800,3.615848,-6.477375,-1.683311,-5.513634,1.159342,-5.628080,4.719825],[3.662183,-4.018773,-2.470899,-1.630700,4.714673,0.444255,1.426969,3.838934,9.800387,7.198047,3.976272],[-9.409339,6.759268,-7.727049,9.138895,4.413509,2.359411,-8.094430,-0.971611,-8.175309,-5.975805,1.261721],[6.923841,-3.816556,8.167126,-0.809369,8.917077,-2.881434,1.117142,3.996450,-4.160374,2.249231,-0.682720],[2.970029,3.007876,-5.078291,0.742513,9.734359,-0.540994,-7.256094,0.144609,-9.666474,5.455733,5.832710],[7.721341,-9.758236,3.348048,-7.825132,6.497333,2.661496,7.621280,-8.762430,6.564090,3.556391,4.000038],[4.232427,-6.593644,-0.658813,-0.641231,-7.941797,-2.995088,2.856891,0.735989,2.131903,-2.545622,9.071310],[-4.581032,-1.036350,6.791267,1.983632,7.220479,2.563645,-1.542438,-8.225023,4.928851,6.823807,7.310156]],[[5.810510,-2.380308,9.526010,9.965718,-3.449580,-9.045863,8.472426,-0.635039,-0.847508,3.362748,6.523270],[4.378033,-6.213369,7.871668,-9.938740,2.853298,3.757465,-9.149092,-0.737361,0.030333,1.847621,9.943561],[9.425016,5.534614,-7.981504,0.469128,9.520983,7.126237,7.825003,2.140478,0.893858,5.583499,-7.933814],[8.957061,-7.872265,3.137668,-9.738850,-1.739165,-9.041655,9.831096,1.619372,-5.888332,-4.312634,-4.058585],[-6.701650,7.554202,-4.925782,-8.625590,6.153987,1.466341,-7.527847,1.168798,-6.237649,-5.733684,-5.033554],[7.667277,-0.433878,-3.299188,3.193351,-0.694219,-7.645355,5.481935,6.877711,2.465755,8.619056,-1.917708],[0.950243,-5.761539,2.055499,-8.518990,-4.701700,1.897724,6.117706,6.649248,2.162285,1.806018,-0.682223],[-2.033789,-8.745440,-7.902182,9.203134,-6.415897,-6.693090,-7.014765,2.926784,5.610927,-2.512425,5.398383]],[[-0.628247,-9.900223,-9.199892,8.144911,-1.128307,-4.749617,3.381547,-5.200327,5.367468,3.774572,0.682151],[-1.666554,-8.279314,-9.167633,-3.867441,9.170368,6.954588,-7.484750,4.321274,-1.525355,-4.044549,-4.561728],[1.335632,-0.518577,1.858933,-0.044258,9.711980,-0.842033,6.876135,-1.327476,-1.894746,-0.999185,1.912251],[3.262754,5.724271,-9.934496,1.160236,5.749163,4.534129,8.528321,-5.475876,0.181093,-4.216762,6.498326],[-5.424809,-1.055836,4.461983,-3.019838,4.449136,9.325744,5.940698,-4.792888,3.451584,7.027839,1.408895],[1.383537,9.301429,6.833496,-9.828892,6.210331,-0.197331,1.817130,-6.818842,-7.964156,-4.683882,-4.809490],[0.851981,-9.754122,3.523920,3.626670,-5.624296,-8.000071,2.595157,-9.572690,-0.154531,3.873228,6.390356],[7.138375,-4.928729,2.245719,8.678160,8.903516,8.715449,4.989630,2.505081,6.397904,-5.122942,1.958152]],[[-1.347290,9.291735,1.810418,8.489580,-9.010328,8.697311,5.487909,7.750555,-6.359926,2.104746,-7.128549],[-9.434172,-5.346326,7.190244,6.131004,-1.371652,-7.584644,7.541180,-4.224656,-8.059897,3.809196,-3.479269],[1.485482,4.704451,-9.950124,7.104000,-4.804678,-4.906841,8.152463,0.709835,4.522622,-3.380238,3.376490],[4.407511,0.286859,-3.661112,1.128138,8.222454,-9.602190,6.982875,6.694918,6.492572,-5.188324,-8.650276],[-7.767833,8.783139,-2.232789,9.658303,9.070811,9.613143,9.140727,3.449323,-7.561706,9.294760,6.254495],[5.831861,5.183283,-1.637548,2.262212,2.919203,-3.822735,5.047689,3.327794,4.806134,7.864628,0.822771],[-7.875429,-6.332841,9.042210,-9.345842,-8.599900,8.074945,-5.916317,5.526836,3.549096,9.983211,3.965285],[-2.937404,-8.369527,2.507026,-4.266795,-6.860862,8.930448,-7.282162,-8.661828,-9.040643,-9.850095,-0.328069]],[[8.615276,-4.999973,-8.487112,8.451334,-5.170756,-9.824567,4.492184,4.314323,-6.176612,-5.828895,-8.210022],[-1.417037,7.298400,7.841901,8.032147,3.900410,0.190030,9.194568,9.922535,-2.061786,-2.668956,-5.912606],[-6.544320,1.464915,4.452690,0.768884,-5.962417,-4.979480,-4.618403,-2.821462,9.154874,-1.080720,5.764581],[2.417148,-0.226111,2.297663,-9.111244,-5.926491,4.980320,-6.439912,-6.865745,-4.863294,0.568720,-6.528014],[-1.127635,0.865990,-8.757478,-7.601185,7.783360,8.100998,3.498147,-0.383251,-7.967899,8.064252,4.202479],[0.985699,7.870148,-5.671907,-6.525662,-5.722971,6.035725,1.739432,8.321799,-3.335267,7.386857,5.928884],[-8.054121,-8.728412,-3.138024,-5.384905,5.716063,3.718986,1.077323,-8.134307,1.997108,-8.341546,-9.726109],[-8.144712,4.987012,7.051407,-0.430967,-9.975459,-7.490732,-0.312336,-7.937815,-2.798645,-3.057050,-1.939035]],[[-4.661989,5.672145,4.341993,-8.628602,2.974386,7.794298,7.611037,0.456696,4.020350,-5.776901,2.732666],[0.834583,8.498687,4.412879,0.842807,3.687265,-8.847300,2.852667,-5.643759,-3.298887,6.641298,1.921976],[-7.628322,-6.575845,-1.120247,4.225705,6.318942,0.840835,3.502778,-2.443771,-4.783198,-0.427792,5.703248],[-5.785754,7.988134,5.097973,-1.472754,-4.377268,-3.019043,9.629098,2.422603,-8.225369,1.960948,-0.334455],[-0.519048,6.866350,-2.081717,-3.110181,-3.355610,-9.173473,4.297700,-9.865853,-7.594164,-1.891544,5.047659],[6.162840,-4.717638,-3.625763,6.379578,-1.428253,9.219943,-3.668394,2.232797,8.021075,3.909364,-3.905499],[-0.061818,-7.081966,0.925830,0.815935,-8.338158,5.417486,-5.578513,-9.162213,-9.091497,3.432431,8.770879],[-0.300315,-7.703662,-6.247372,5.708821,-2.477209,0.270587,-8.400741,3.460434,1.610736,-1.037573,2.098651]],[[-8.822586,-1.145273,-1.911990,6.796265,9.167247,5.301244,0.999219,1.450376,-5.250064,-3.555231,-5.210079],[-3.163571,-1.881611,-7.839052,-9.756312,6.395740,6.050468,-1.560191,-3.186336,1.337083,5.694624,4.971180],[-8.961739,5.197321,3.410652,-2.590725,-1.788679,8.348758,2.709086,6.605885,3.826260,-0.077788,-2.121368],[4.218078,-8.879392,-0.291102,4.075047,0.200782,-0.365008,-9.358411,-0.044006,8.208857,8.253419,-4.320809],[-6.543386,-0.139803,-7.227662,9.221304,5.281416,1.388811,4.890240,4.174802,-1.784733,7.964731,4.948571],[-0.495674,-9.517230,-3.019772,-3.617599,-0.163629,-7.056056,4.133384,-8.819100,3.760861,1.761218,5.815505],[-3.387257,0.327853,4.337103,5.489941,-4.993429,1.489503,-9.224565,-8.309459,-2.501274,5.875207,3.336161],[2.149257,2.348723,-8.584604,-9.969658,-3.095677,-5.549957,4.181528,-8.664267,1.178975,-9.329916,6.056387]],[[-7.383798,6.349533,9.217455,-3.889089,2.744138,-8.876585,-1.223621,6.086115,-7.022568,-0.698448,4.221314],[9.462627,-1.823567,-5.868119,0.225622,4.576666,6.847537,-5.371019,-8.567099,-1.997728,-3.226602,-4.207248],[9.739717,3.891187,3.229944,-8.547605,4.944198,-3.335929,-3.108894,-4.823876,1.972170,-6.641629,3.720834],[7.993026,8.141817,9.622455,-7.798796,-6.035834,-1.045389,7.096814,8.593426,-0.563466,1.887326,4.715627],[-3.490403,5.759449,0.175789,-5.008622,-4.563079,-1.823426,4.228693,-2.557336,-0.845024,2.574054,-1.939969],[-1.986776,7.485142,8.632168,-9.344253,-3.568795,-0.172314,-0.674364,7.248349,-7.773207,-6.397313,7.300487],[2.537664,8.280455,3.904332,-2.612306,8.933728,5.342713,8.979861,-3.393797,7.951308,-9.365369,-2.988802],[-9.352324,-8.689355,-3.504902,7.060727,-7.766965,0.579940,-4.720726,2.849089,-7.317582,-6.354755,2.118904]],[[-8.234808,0.027770,-5.451928,-0.770925,-0.615707,8.769896,2.736057,2.187471,4.511645,3.999774,6.751495],[9.042463,-7.381687,6.620093,-0.905103,1.329930,-0.193302,-2.503450,-8.951670,-0.105201,3.754459,0.388975],[5.175977,-7.453799,6.575099,9.815357,8.899053,5.651770,-2.517573,-2.659367,0.681656,-7.098206,-7.985945],[-2.389794,9.256330,5.274120,-4.280633,1.337209,1.821424,7.412377,-3.926355,5.396306,3.775340,4.835796],[-7.346178,-5.054212,0.652385,1.174565,-1.769099,6.115385,-4.220775,-6.756060,0.834214,-1.078996,8.366062],[5.608490,-7.652234,-6.935494,9.003995,-1.091868,4.928953,3.436969,2.042461,7.872867,5.972073,5.761451],[3.898931,-9.532689,5.189999,-6.400148,-5.426930,-2.496871,-9.271217,1.655120,3.373689,1.266690,-8.774228],[4.101530,-2.505476,7.177876,0.793981,4.396111,4.623462,-5.866270,9.033416,4.880614,-0.610537,-9.341172]],[[-7.422261,9.395069,1.219055,2.726411,3.581622,9.627570,6.126615,5.067116,0.860930,3.980949,6.918714],[-3.832027,-0.688728,-2.627983,1.360390,-4.255589,-2.625220,1.301972,-5.826115,-2.051707,-8.003811,8.790157],[-0.446782,-7.673621,-5.821874,-1.480157,0.032653,-7.932612,6.069600,8.603107,7.686918,-8.545340,4.058429],[-8.526631,-5.811549,5.242105,-0.330283,-7.542043,-3.774803,8.818676,8.035802,-5.988728,-6.528283,-7.202227],[8.614677,-1.675136,9.069253,0.900876,6.301905,1.089697,-1.740575,-9.096060,6.724021,1.103015,1.109865],[-9.886720,6.140282,-0.933213,7.994275,3.109235,-5.315875,-9.516792,-8.090916,-6.492407,1.866289,-7.231093],[-8.250780,-5.281380,7.487435,0.228277,-5.613969,8.581059,-8.992703,9.704614,9.291150,4.641982,6.756343],[4.224070,9.998484,4.197169,6.139790,-9.893490,-0.043605,-4.196169,-6.389779,-4.415499,4.979753,-9.191375]],[[3.127384,-9.278236,-0.770680,-7.192099,2.897116,-2.242633,7.918973,3.499023,5.957669,4.397383,-2.079659],[5.934957,2.011441,-5.668089,-1.447693,0.222321,-8.580338,-9.239527,8.577597,-9.097277,-9.154946,1.161733],[-6.669630,2.047280,-7.772319,6.997927,-4.398788,8.349462,2.965318,-8.005606,2.792398,9.561386,8.037696],[-0.454990,9.585486,8.622975,9.523647,8.081602,3.271760,7.143187,2.238546,1.884140,-7.981153,-0.608426],[-6.496339,7.611372,-6.217065,1.841496,-0.602755,-8.391998,4.909981,2.948498,-3.692013,-0.620049,4.726002],[2.961575,8.395679,-6.106979,6.401034,7.952676,-3.890392,6.553405,9.516114,-5.783521,6.639736,4.531136],[1.649515,8.188777,-8.852913,4.865954,-2.186244,-8.223870,4.735946,4.376543,1.831905,-7.334913,7.232070],[-0.309073,6.786419,-7.103064,7.174867,0.775785,-6.346548,-3.078631,-6.339220,1.794653,-0.366423,-0.954120]],[[-4.323928,8.361872,-4.499548,3.184039,0.645010,8.051528,7.632370,1.274421,2.301246,3.580841,-3.312017],[-8.728473,3.354670,5.274890,-3.001952,-5.836551,3.838025,-3.044840,1.752258,1.224816,-2.366616,1.634870],[-3.465208,-0.889192,0.643357,5.666504,-5.624088,0.311139,5.301220,0.457990,-0.857906,4.555653,3.675386],[-7.137762,3.173836,-4.564132,-1.548283,0.015936,-1.404815,-2.155951,9.603568,8.172844,-0.272228,-9.636447],[7.462466,0.982608,2.040148,0.359171,-7.981084,1.414284,4.568613,7.593878,-0.694279,-0.214736,1.087318],[-7.286107,9.648243,-4.650945,-0.057336,7.627392,-6.133537,-3.916307,7.451886,0.210488,5.363581,-7.964106],[-8.197534,-1.927778,-0.808909,5.583163,1.394485,7.632230,-6.607287,-2.946640,-1.821847,-9.583188,-2.839411],[-3.257755,6.521214,-3.695068,-9.446045,7.288857,-7.328931,1.348008,7.145413,-7.510925,3.569231,9.089535]],[[3.185747,-9.344170,4.484027,8.461677,0.158445,-3.623163,3.326690,8.202591,9.697764,-5.248088,-6.075999],[-2.678184,-3.696800,9.447653,-2.266547,2.994922,-7.192536,7.391904,6.366365,-7.803808,-2.382499,7.474723],[2.180094,-0.277884,8.113321,-1.415682,-7.180533,2.510304,-5.956421,-0.264003,1.139589,-5.360636,-8.330777],[-7.513189,-7.933921,-2.154964,7.367779,-1.502718,0.934708,6.444900,5.614352,-1.615633,-2.108858,7.669899],[-5.593233,-9.032146,8.795556,-6.104028,-9.362431,8.090479,4.495800,-2.868936,0.086991,4.021302,4.878810],[-9.330233,-2.440038,-2.905914,-9.771724,0.977010,-8.807827,9.219181,6.236479,9.206624,-1.871455,-9.877485],[-2.850823,-9.402118,-0.323611,-5.620937,-1.955115,-8.741413,-1.530687,9.095004,-8.332031,5.228476,-1.181766],[8.573963,-8.343906,-1.690811,5.775377,-2.988351,2.067772,-9.218875,-2.018954,7.206995,7.366837,-3.796555]],[[-4.742892,-8.679681,-2.850794,3.641140,-6.057645,-9.725530,6.012219,3.719574,-9.540700,1.881110,-6.256473],[9.384164,-4.791631,7.588810,-9.410223,8.487672,-0.263627,-6.223188,-6.632612,6.370919,-8.373628,2.896653],[-5.328101,-9.762101,5.673221,-7.582925,2.697743,-8.741679,-2.820609,3.574280,9.990677,-3.997293,7.352659],[0.651239,-0.762577,-9.203344,-2.039508,6.960885,2.858486,4.471824,1.668850,-3.166243,7.419206,-5.566710],[6.024608,6.581224,2.020864,-3.330362,-3.415741,-8.757018,-7.859044,9.543495,-9.864323,-4.428268,-3.453872],[-6.787339,8.645770,7.882180,-7.423921,2.359857,8.076959,-5.362401,-0.776350,6.449888,-9.989051,6.539082],[6.813910,-0.353644,1.661275,8.980900,-0.673753,1.808535,-4.228120,4.765558,2.028435,-0.750467,8.605808],[3.399552,8.506347,-5.847540,-7.444267,6.095422,-8.853368,8.819990,-8.838349,8.925024,0.065646,-1.585019]],[[0.474134,-3.741484,-1.944858,-9.659357,6.786506,6.915031,-9.986974,0.240234,-4.638345,-7.721130,-4.103472],[-2.712780,-1.579907,8.077897,5.407134,-1.761306,0.147925,1.701698,2.867925,1.149667,4.946217,-4.600444],[-0.312464,-4.226603,-3.629233,8.790200,-5.979088,7.139394,-6.485242,-1.554916,-8.738940,-9.899951,3.805665],[-9.040841,2.003850,-8.072240,-6.174085,6.321063,-5.680292,1.153661,-3.380332,5.555516,3.668426,-6.282940],[3.777238,6.269971,7.701946,-7.857845,7.994503,3.939050,-0.159454,2.675070,-4.281668,-0.347929,-8.798364],[2.409861,-8.896372,3.877348,1.120008,6.613739,4.695708,6.916514,6.906423,6.698540,-8.657093,5.274775],[-6.740156,2.423464,6.033125,8.645114,-7.724040,9.899638,2.700872,-8.430460,-2.803647,-9.120723,-4.548371],[-8.148541,2.181528,-3.907453,-1.926697,-1.330270,-2.866086,-8.916220,8.490755,8.209959,-3.290754,1.364371]]], dtype = "float64")#candidate|1629|(15, 8, 11)|const|float64
bop_1630 = relay.less_equal(var_1628.astype('bool'), relay.reshape(const_1629.astype('bool'), relay.shape_of(var_1628))) # shape=(15, 8, 11)
uop_1642 = relay.cosh(var_1628.astype('float64')) # shape=(15, 8, 11)
output = relay.Tuple([bop_1630,uop_1642,])
output2 = relay.Tuple([bop_1630,uop_1642,])
func_1662 = relay.Function([var_1628,], output)
mod['func_1662'] = func_1662
mod = relay.transform.InferType()(mod)
mutated_mod['func_1662'] = func_1662
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1663 = relay.var("var_1663", dtype = "float64", shape = (15, 8, 11))#candidate|1663|(15, 8, 11)|var|float64
func_1662_call = mutated_mod.get_global_var('func_1662')
call_1664 = func_1662_call(var_1663)
output = call_1664
func_1665 = relay.Function([var_1663], output)
mutated_mod['func_1665'] = func_1665
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1747 = relay.const([[[0.052718,9.002748,0.615771,-8.320757,-6.833727,2.012335,-2.555717,8.721007],[6.111577,-8.609383,6.495796,2.698622,-3.616249,9.836629,-4.374224,-5.835654],[-2.790391,8.438741,3.451111,-2.518964,1.058409,9.660763,-7.786489,-7.507711],[-7.161010,-5.236404,1.809470,6.650342,-0.819614,-5.772727,7.867010,9.538617],[4.054502,8.747933,-8.171329,-4.629729,-8.796377,2.877611,-0.793138,-0.821272],[3.597535,2.775070,-9.011932,-9.612577,1.004128,8.549738,4.962906,-4.594297],[-3.956925,0.333826,-3.568478,-8.930876,9.748452,5.792090,8.285942,6.006008],[-5.267813,-9.897432,6.949817,-5.153476,8.929883,9.248834,-7.552737,9.985529],[9.343052,6.312293,-9.728447,-6.295700,-6.131976,-2.943342,5.823213,-9.852116],[-3.677767,-5.131313,1.775180,-6.727912,2.254539,0.021793,5.684633,-9.455846],[2.462989,-4.991153,6.710438,0.696255,4.521242,4.021475,3.254615,-1.231038]],[[-6.970182,6.833080,5.788000,5.263306,6.699543,-4.694217,8.562803,-8.181788],[7.395967,5.575973,2.277702,-5.344008,-8.711991,-4.649857,4.307174,2.246843],[3.426436,9.934264,-8.041866,6.627288,6.621064,-2.607289,-8.582529,8.819339],[-2.068036,-4.276801,3.066730,-6.199740,7.144583,-8.050436,0.980234,-3.659008],[-7.566431,-7.556357,-1.510888,1.156014,6.733905,6.763359,-8.641556,1.424951],[4.814418,-2.026919,-4.140040,-5.612699,8.669171,-5.416500,-5.573201,-0.861365],[-2.549906,4.150266,-7.424615,-0.971343,-2.510711,-4.170717,-2.691600,5.836231],[6.647820,5.731954,-9.297731,5.568689,-3.776564,0.090784,3.954228,9.360778],[-3.663675,-4.137260,1.134916,-6.145085,-7.730922,-0.867145,1.736360,-0.916438],[-2.593629,-0.972301,6.147453,-7.126689,-1.754908,-9.876571,3.969449,1.217400],[-8.402029,1.365739,5.753472,-6.088314,-5.770611,-4.811258,-0.890262,-1.962155]],[[-9.608099,-1.486146,8.121032,2.347190,-2.899051,7.912417,-2.151398,9.990222],[-3.691177,-2.894035,-4.448140,-1.320863,-5.607372,-2.101752,7.291000,5.818258],[-8.446023,-6.533461,-6.483562,8.203205,8.066630,8.367275,4.289339,2.090293],[2.082923,2.439915,-1.029012,-8.799025,6.343153,2.377702,9.905898,-3.853969],[-1.525002,1.897347,6.294634,1.520622,2.877882,-3.094058,4.171194,8.733521],[8.916264,4.230287,-6.267171,-2.186068,-1.501281,-8.818150,-4.015520,8.178938],[1.984627,-9.532972,4.416474,-1.396943,-0.640506,-7.626310,-3.559697,-5.693323],[-6.186012,2.475505,4.787652,-9.980160,6.655717,2.764484,-0.251618,8.371228],[-0.614090,-9.607758,6.990597,-9.580510,7.197954,-4.291937,-7.882324,5.289013],[-3.374289,6.603443,0.433449,6.105560,0.145652,-5.799467,-1.902762,6.663810],[3.773833,-5.425052,-5.847573,-8.214380,3.181655,7.050305,4.815716,5.631045]],[[1.930737,4.632979,-1.140627,-0.647966,-0.612850,6.349581,-2.091497,5.471913],[-9.870571,-2.833369,-7.123880,-8.426405,1.979242,-1.145983,8.595932,-9.296205],[-3.908234,8.039860,2.377163,-3.469089,-6.560706,-6.464940,7.800607,9.926820],[7.189917,-9.197980,-5.977583,-4.046799,2.187264,7.354149,-2.559869,1.201426],[0.547292,1.237830,-0.020994,-9.217396,-9.109514,7.948076,-4.008432,7.604767],[1.773971,-6.784615,6.211643,6.664197,6.530524,2.565424,6.567455,-6.066307],[6.576144,1.758491,-1.002607,-4.990198,-4.515371,-7.601176,-7.644508,-5.063712],[9.269230,-6.032453,2.515120,3.744637,-2.194010,-8.135371,-3.409204,-7.959136],[1.203809,5.950740,-9.410110,-2.392273,-5.817083,8.882377,-4.431215,-0.980455],[-2.186493,-0.069036,-1.792353,-5.754408,-6.719823,-8.002101,-1.767358,-1.119652],[-8.045279,4.799385,-3.439154,3.360294,-0.911765,3.484981,3.551907,-2.410865]],[[-6.033074,7.116611,1.721966,8.330264,8.387368,-2.702112,2.039624,8.336012],[-9.091129,-5.236382,-6.371841,7.049410,-4.030892,7.646686,-5.780509,-9.694598],[6.273957,-1.075606,0.536459,-7.158968,6.792862,-8.422246,-7.693340,2.086478],[-4.644417,0.328236,6.346597,2.348483,2.170024,3.266702,2.395047,8.429469],[-7.288113,8.850699,9.019078,-0.495239,-7.095009,5.915634,-8.943374,5.510278],[-9.974508,8.095853,-5.770146,-1.637200,0.749510,2.856880,5.493509,7.129475],[-4.738778,8.854871,5.395187,0.464692,9.384398,-6.548037,7.012940,-4.364510],[-5.595043,5.710918,4.536835,-0.682045,-8.844107,2.001167,-2.946889,9.511446],[1.579228,6.114669,-3.646568,-6.573451,6.051568,8.747948,-7.100480,1.888347],[7.623068,3.833579,-5.965098,3.981884,-7.552728,-5.774349,-4.749188,7.137510],[-2.578860,-1.181191,1.461087,-2.976888,1.059684,3.053407,-6.574863,-3.850345]],[[-1.934324,-0.648264,8.705585,8.304221,-3.162474,7.182355,9.842306,-3.326302],[6.489928,-0.953099,0.138313,7.959186,-7.676654,-5.610026,6.604074,-5.870408],[1.263475,-7.675944,-9.197475,-6.554007,4.064946,0.496038,-3.709324,5.587764],[-8.654799,3.180483,-4.753539,-2.136656,2.755983,2.764314,0.546411,-4.148805],[-6.123065,-7.374492,-4.349793,0.365797,-1.707334,-6.230199,-3.072875,-8.001948],[8.263294,-5.405029,-7.628559,-8.607713,-0.501872,4.790233,8.326290,-5.954966],[-8.384479,5.100688,1.221755,7.223887,0.134726,-0.803306,6.885866,3.345712],[-9.674482,-9.427091,-4.776192,9.235552,0.319268,4.055907,-3.925939,-1.516263],[-6.567067,-8.892507,6.595791,4.006291,1.541658,-9.688226,-1.721791,-1.346135],[-6.029601,0.340188,3.402145,4.660510,5.468547,-3.394977,-9.711253,9.286777],[-8.844960,-0.938206,8.074601,-3.865531,4.326256,5.046111,-1.258125,7.614353]],[[-3.495883,-9.332306,0.543480,-3.682510,-7.293953,-8.775304,-4.171652,6.467542],[8.337890,-9.845615,7.727291,-0.503600,7.748935,-3.143787,4.229068,-5.792227],[-6.359243,4.320073,-6.644330,0.079728,-7.810922,4.895573,2.011168,1.275468],[-0.864813,4.158152,9.989964,2.332192,3.821171,-0.827738,4.725978,-4.150102],[8.513507,4.368754,-2.175695,-7.297429,-8.095233,4.757372,-0.030839,5.473761],[-2.400471,-3.995239,-8.407417,-3.805463,1.698861,-9.007591,-4.739488,9.558391],[-1.644118,7.350621,0.889732,-3.951962,-9.493536,2.942195,-7.673710,9.219202],[3.336981,-3.703004,6.970657,3.924205,-7.425272,3.345376,-6.567420,-3.082377],[4.732977,3.841508,-3.162318,4.063607,9.362270,2.674459,1.199018,-8.677491],[5.166475,-1.084374,-8.619901,9.371132,7.637972,8.136301,6.039729,-8.776010],[0.929277,0.359656,4.660243,-5.033396,8.102904,3.349663,9.583378,7.394167]],[[-0.134515,4.619894,9.267064,0.952663,-1.034807,8.284743,0.143547,-9.980095],[3.012925,-2.851336,-9.914082,-8.629865,-0.753671,-7.252293,1.562732,-7.898768],[5.238088,-0.031583,0.587754,7.588138,-8.929927,5.884400,1.455370,1.661713],[-3.542245,3.611533,-0.532265,-9.791036,5.943470,-5.654937,1.990007,1.478631],[3.983231,0.908682,8.417579,-0.512230,4.978618,1.067180,3.704968,-1.552894],[-2.235015,4.015536,2.392401,-5.544383,-0.119340,1.629714,2.063249,2.974552],[1.305206,1.805866,7.031790,-7.097164,-8.123884,2.387643,-3.638173,5.316666],[-2.641485,-3.510046,-1.390255,-5.816993,6.900254,-9.919750,-6.861471,5.598991],[1.806649,3.126262,-7.654259,7.539407,9.974880,6.829254,-5.298050,1.730619],[9.878118,-8.714487,-4.596973,-8.869453,3.262045,-9.741028,-3.143982,0.468804],[4.018010,5.374314,-3.227256,-8.927936,0.946870,-9.348198,-2.111183,-4.203015]],[[4.473085,6.485981,-8.772204,3.839373,1.205975,0.432531,-8.178028,6.788422],[7.567793,0.493995,9.110045,-5.571192,7.946628,9.728293,-3.818201,2.847957],[-1.628479,0.004990,6.617610,-5.653307,-7.258709,-0.460664,-8.490808,-4.898768],[-9.791279,-9.731847,8.257227,6.727026,5.058418,-2.261297,-6.340398,6.556652],[7.565942,3.648874,5.873336,0.677944,-2.014543,-9.408108,4.600549,-1.107480],[3.346768,6.384462,3.069508,8.293424,6.015280,-3.179470,-4.306796,5.460521],[-6.566541,-5.400147,-7.026684,-8.219021,1.273139,-7.948112,6.363026,3.734185],[1.251515,-0.421743,3.034533,0.099248,0.258397,-9.351272,7.450169,4.503230],[8.876771,5.647381,6.436106,-9.188993,5.834023,9.243309,8.414150,1.626566],[-4.523672,-5.618698,4.329069,-3.789598,7.402488,-2.311748,-4.548457,2.563941],[6.184767,-5.305001,-8.227567,-5.393039,7.202375,-4.344306,-8.913455,1.164683]]], dtype = "float32")#candidate|1747|(9, 11, 8)|const|float32
uop_1748 = relay.sqrt(const_1747.astype('float32')) # shape=(9, 11, 8)
func_1541_call = mod.get_global_var('func_1541')
func_1545_call = mutated_mod.get_global_var('func_1545')
var_1759 = relay.var("var_1759", dtype = "int64", shape = (2, 784))#candidate|1759|(2, 784)|var|int64
call_1758 = relay.TupleGetItem(func_1541_call(relay.reshape(var_1759.astype('int64'), [7, 14, 16]), relay.reshape(var_1759.astype('int64'), [7, 14, 16]), ), 0)
call_1760 = relay.TupleGetItem(func_1545_call(relay.reshape(var_1759.astype('int64'), [7, 14, 16]), relay.reshape(var_1759.astype('int64'), [7, 14, 16]), ), 0)
output = relay.Tuple([uop_1748,call_1758,var_1759,])
output2 = relay.Tuple([uop_1748,call_1760,var_1759,])
func_1763 = relay.Function([var_1759,], output)
mod['func_1763'] = func_1763
mod = relay.transform.InferType()(mod)
mutated_mod['func_1763'] = func_1763
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1764 = relay.var("var_1764", dtype = "int64", shape = (2, 784))#candidate|1764|(2, 784)|var|int64
func_1763_call = mutated_mod.get_global_var('func_1763')
call_1765 = func_1763_call(var_1764)
output = call_1765
func_1766 = relay.Function([var_1764], output)
mutated_mod['func_1766'] = func_1766
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2096 = relay.var("var_2096", dtype = "uint16", shape = (10, 1, 12))#candidate|2096|(10, 1, 12)|var|uint16
var_2097 = relay.var("var_2097", dtype = "uint16", shape = (10, 1, 12))#candidate|2097|(10, 1, 12)|var|uint16
bop_2098 = relay.left_shift(var_2096.astype('uint16'), relay.reshape(var_2097.astype('uint16'), relay.shape_of(var_2096))) # shape=(10, 1, 12)
bop_2108 = relay.bitwise_xor(var_2096.astype('int32'), relay.reshape(bop_2098.astype('int32'), relay.shape_of(var_2096))) # shape=(10, 1, 12)
func_171_call = mod.get_global_var('func_171')
func_173_call = mutated_mod.get_global_var('func_173')
const_2112 = relay.const([[-7.490442,-8.376601],[6.405581,-4.721777],[3.962798,4.701567],[-9.700408,-5.167073],[-0.462151,5.759034],[1.216423,4.961477],[-3.759510,1.989746],[-2.758450,-1.214571],[0.787288,8.206994],[2.651818,6.800310],[5.344967,-1.924111],[-6.194127,-2.022339],[3.049344,-4.614175],[-6.866958,-0.451485],[9.001319,0.999849],[-6.613960,-7.451358],[-2.854129,2.087462],[-0.471549,-9.988621],[9.280089,0.611284],[1.617003,5.679473],[8.343480,8.792287],[8.272064,-1.802304],[8.405592,-8.756984],[-9.952289,0.277617],[-1.044417,-2.177343],[7.878676,-4.650506],[-6.825945,-4.062974],[6.713966,-0.052285],[-9.801552,-8.954561],[3.363926,-5.600890],[-8.181673,7.784959],[0.287659,3.105517],[3.448404,-8.211269],[4.457925,7.306538],[8.653294,3.416231],[2.599129,8.239094],[-1.581980,-8.652441],[8.519904,-1.175659],[1.287258,-5.013703],[7.048450,4.803334],[2.933930,9.612009],[-2.454232,-7.978222],[5.020283,5.598849],[-0.456254,-1.164467],[-6.147746,-6.634246],[1.792120,-7.985255],[-7.451436,8.160906],[-8.894026,-6.496557],[9.175790,-0.282122],[8.184062,6.538775],[4.709822,4.454163],[0.096381,-2.665707],[-9.384792,6.563880],[2.854833,3.526197],[-1.896378,7.749158],[6.212325,7.163629],[-5.731879,-0.128051],[-1.248750,-3.942775],[-5.388718,2.178781],[9.119442,-8.923362],[2.164629,6.760985],[5.538150,-6.621369],[1.371041,-2.713030],[-6.029759,9.388422],[-1.128791,-0.625977],[3.392541,-6.804823],[-5.174505,-0.837877],[4.042142,-8.622010],[-5.499630,7.958779],[-6.725467,-7.746298],[-7.760055,-7.020882],[-9.947311,3.812630],[8.675057,6.403793],[-3.229236,8.963763],[-2.971269,-8.202223],[-6.765866,-9.600161],[-7.570690,-7.399772],[0.117766,-6.342169],[8.555614,-4.714655],[3.960067,-9.134289],[0.090958,0.829694],[0.457727,9.287880],[-8.705185,5.795655],[-1.623913,-5.478789],[-6.711539,8.907639],[3.115950,9.927400],[-4.525203,-4.492703],[7.138554,-6.596898],[-4.100744,-1.675353],[-9.606475,7.992564],[9.681559,2.012305],[-9.973596,-4.903287],[-2.732114,6.179708],[1.980048,6.530767],[-2.558985,8.830328],[-3.681164,4.863190],[-7.508147,8.162284],[5.673719,9.026516],[1.597870,-5.851853],[-6.263717,-7.409324],[-8.711405,-7.997342],[-9.414982,1.599818],[4.720374,-6.424145],[-7.675379,4.683997],[4.346299,-8.726882],[5.010809,6.331188],[-8.294471,9.410537],[-6.351638,-7.096648],[9.132620,1.396734],[-9.306517,-7.752791],[4.993607,1.685347],[-0.995085,-5.365925],[9.765595,-0.457413],[5.162356,-3.241814],[7.123456,-2.822531],[1.128626,-7.920295],[-6.653795,4.631658],[-2.409505,-8.228118],[-3.501565,-1.688272],[-3.185812,7.452505],[2.941483,4.578269],[8.872663,-9.215397],[9.542350,4.171204],[7.675259,9.656972],[4.036869,-3.070109],[-6.856657,1.755266],[2.551402,-7.802740],[4.668683,3.642979],[4.210817,7.865140],[-9.876176,-7.211126],[-5.414374,0.016790],[1.575645,3.412024],[8.916857,8.338713],[0.510331,-8.479722],[-1.543982,-2.485832],[-4.865143,-2.594627],[-1.067374,4.354180],[6.704050,-1.322484],[4.708053,-1.086854],[-7.831480,0.033391],[8.273796,-1.280976],[3.816238,6.713057],[3.485465,4.097374],[-9.149721,1.311550],[0.840668,4.804875],[-2.412952,8.143116],[7.963033,6.546242],[1.728059,3.530196],[0.330645,1.851998],[1.009576,-0.736752],[8.919468,-7.971664],[7.394466,-3.889954],[-6.518566,2.539336],[-4.453463,-5.006753],[-9.793632,5.389137],[-9.639592,3.100356],[-4.047626,6.008031],[6.903998,-5.778627],[5.091247,-6.691661],[4.637187,-4.289641],[0.999210,-6.578987],[-3.556013,6.484800],[-7.488614,-8.883999],[-7.625319,-5.209406],[9.550752,-9.949577],[8.715946,2.365452],[4.194694,7.018708],[-3.908987,1.240729],[-1.971723,7.934793],[-8.947321,1.715231],[-8.860874,-5.411493],[5.762818,6.384737],[-7.500510,-8.760817],[4.052842,-0.011314],[3.807813,9.942855],[8.794485,6.253132],[-4.131961,-7.998905],[-4.659279,-7.498539],[-8.190374,6.262204],[1.098273,-3.032935],[-4.898154,-9.709719],[-5.070734,-1.078370],[-8.288319,4.979353],[-0.012073,3.136236],[-7.366365,-9.640970],[-9.392061,1.426626],[9.078965,-4.178646],[2.920027,-9.280979],[5.554244,8.036862],[6.081080,-6.884433],[0.580043,-2.589287],[-3.007467,3.995075],[7.028030,1.673143],[-5.853938,-4.906524],[9.575307,-1.952848],[9.123458,-7.088349],[8.454264,-3.223701],[-8.983679,7.372661],[0.207850,1.419895],[6.846668,-6.090245],[-6.260930,-4.367743],[-7.318377,-2.986896],[-1.883333,-6.098234],[8.713459,-0.443686],[3.939014,-8.583078],[8.359370,5.193959],[0.631437,6.095767],[8.128947,5.408450],[8.247117,-9.456738],[4.694776,-8.144998],[-3.952956,2.982361],[6.549989,-8.769276],[2.389622,-6.893224],[-2.616825,6.218932],[6.138870,8.061471],[-3.166371,-0.847460],[-1.604774,3.284724],[-8.700384,9.187179],[-2.992893,-5.019894],[6.720935,-8.175942],[2.504083,9.930535],[8.828038,2.210803],[9.369981,0.225436],[-2.414024,-9.652568],[8.275673,-8.218546],[0.408917,-3.643227],[-2.818478,9.928312],[2.647674,-1.712056],[1.579716,0.190083],[-7.837830,1.137209],[8.885084,8.286264],[-8.345500,-2.645290],[5.389843,1.664049],[1.164327,4.183971],[8.275769,5.473813],[-1.907334,5.740842],[3.168468,-8.861403],[-4.607529,-8.915462],[6.018209,5.241018],[3.723135,0.689262],[-7.439664,9.377825],[-9.352101,8.514171],[2.960445,-5.418547],[3.798723,8.681179],[-6.677725,-9.811428],[2.892663,-6.091871],[7.964375,4.377809],[-9.430868,8.176081],[3.286968,-3.588345],[6.984284,7.950904],[-7.538328,5.035430],[-7.764559,-5.002373],[-9.254017,2.743193],[7.083342,-6.434166],[6.480639,0.709841],[-0.994476,-0.611674],[6.666396,6.801820],[-1.424812,-2.519642],[7.624196,-5.594300],[-3.135040,-2.548835],[-8.888069,5.836147],[-2.677393,-1.629596],[2.060249,1.036899],[-8.260390,9.358651],[-3.019499,2.882877],[-8.085693,0.759027],[4.559768,1.662543],[-5.720052,-8.408845],[1.816048,5.900999],[-9.700584,1.779765],[6.683450,4.445674],[-9.248316,-8.245453],[-0.895574,7.396155],[9.788128,-9.968312],[3.304596,-0.213243],[9.460038,-1.011208],[-0.817401,-4.062686],[1.993691,-6.413245],[-3.535627,-0.040766],[9.433921,2.351746],[-3.802050,-7.137352],[2.666645,-7.829940],[-9.288863,8.409157],[-8.252844,-4.284495],[3.974085,3.039327],[-8.467774,6.731969],[3.384199,3.266860],[-1.517269,-5.144837],[8.999882,-8.356643],[0.562985,1.796968],[-4.396012,-2.316182],[-2.187949,7.294540],[1.833023,-5.467090],[9.995713,5.134034],[-7.923200,3.213015],[0.794876,3.286284],[-2.407422,-5.016218],[4.703468,5.009806],[-5.644934,-5.602018],[-5.634173,-6.482583],[-4.405160,6.915195],[-2.768573,-1.522094],[0.996202,-4.237569],[-3.956029,7.666880],[6.796232,-9.962744],[-8.601361,-5.122027],[0.243873,2.840399],[6.977169,-8.630084],[6.661574,1.855456],[-4.705467,-8.318226],[1.014500,-8.331627],[-9.333699,-4.401370],[4.306011,-4.759752],[-3.292654,-0.091542],[0.501782,2.733190],[2.701130,-8.112446],[0.972536,0.933675],[-5.709020,1.340942],[-8.847296,8.603459],[9.378205,-9.977479],[-5.981747,-8.774009],[-9.358308,0.769442],[9.280626,-8.120469],[-9.401133,9.004097],[-3.280188,0.384083],[-5.675642,-1.702728],[-0.038522,8.268238],[4.057438,9.269117],[7.516617,-6.740844],[-2.252936,8.710105],[-0.252400,5.731216],[0.390079,-2.017612],[8.623509,-2.797300],[-5.397014,-2.445303],[-0.271642,-3.271602],[4.593223,0.275811],[-0.632919,-7.428857],[7.052808,-3.518844],[3.438741,-9.085058],[-1.766766,-9.558388],[-9.277450,3.777909],[1.638557,-2.202835],[7.856534,1.228967],[-6.015254,6.968030],[-1.922319,4.800302],[-1.680925,0.144273],[9.314777,-3.179618],[-3.136299,6.467347],[1.760194,8.525622],[-5.304837,-1.486725],[1.828138,9.978386],[-3.562335,-9.828167],[-3.477287,8.495642],[0.145112,1.277112],[-0.583809,-9.484847],[-8.909184,-6.751759],[-2.793508,8.856400],[9.001525,-1.216508],[3.306863,-5.036958],[3.942775,2.829112],[-1.214854,-9.791014],[8.117563,7.633045],[8.448006,5.241943],[3.896421,9.336427],[9.256708,8.417799],[-5.351025,1.466500],[3.781517,2.476170],[-6.183113,-2.912387],[7.714544,-6.740565],[-6.369263,1.251209],[7.843190,-4.586169],[-8.507980,-7.193950],[-3.236994,-4.081846],[-2.586258,-4.686059],[2.963843,-9.283781],[-5.286857,-1.376930],[4.948854,8.976176],[-4.268445,8.263957],[9.422836,4.940301],[4.016666,7.807829],[9.332634,-1.310480],[-7.680995,4.789815],[-3.805497,7.946302],[-2.035561,1.043478],[0.957769,-9.483592],[3.645254,7.290735],[8.412998,-1.563916],[1.127077,-1.220609],[4.293919,-1.221882],[8.326418,7.007454],[3.242961,1.498958],[-7.193390,0.611827],[2.597726,-2.415901],[2.375206,0.505846],[-8.044886,8.347841],[3.317062,-6.979868],[-3.861850,-4.091835],[-8.456690,7.194200],[1.289223,2.732989],[9.301922,7.293873],[-4.707324,2.576179],[1.380300,-7.369455],[-6.631845,2.694492],[0.405938,-5.599915],[-6.081111,-0.945818],[-6.516991,-1.937734],[-7.545795,-1.475151],[-7.847196,-4.155394],[4.356086,-8.631529],[-1.976837,-0.714040],[-6.437856,-5.197218],[9.484445,2.490110],[-3.602794,-4.625538],[-4.516340,-4.815097],[-4.971554,-0.465928],[-2.883297,-3.709557],[9.297941,-3.780543],[8.950706,-0.626921],[3.965447,-9.422714],[-9.368800,-7.584760],[3.731331,8.436700],[-9.016572,-1.881724],[-0.805971,0.835042],[1.599308,-3.667776],[6.205617,-6.130996],[0.419220,-7.370792],[2.578255,2.781472],[9.414368,-8.352314],[-3.435340,-1.048887],[3.884812,-5.670210],[6.053333,-8.924158],[5.696891,1.089743],[-9.903362,9.765990],[2.259149,-2.771029],[-5.811220,-5.785214],[7.004097,-2.530167],[-8.132693,-2.298646],[8.638903,-4.579817],[9.702834,8.272466],[2.890532,2.596455],[-4.426388,-0.585064],[-0.798863,2.939521],[-9.130238,-9.710755],[-4.586985,-8.845675],[1.493013,1.915792],[0.506837,-5.989653],[-9.175070,4.267808],[-5.196418,3.121456],[9.756578,-3.516517],[-0.878489,0.144425],[4.631919,5.436645],[-8.403561,5.312286],[-2.468234,9.109288],[-4.400783,-1.768800],[1.666466,-9.541110],[-4.734640,8.925129],[6.332974,-2.441057],[9.677161,0.706747],[6.002987,-5.259360],[-2.581523,-1.951390],[-0.498785,-2.079731],[8.828806,-8.805336],[-3.269253,-7.788214],[-7.996044,-6.356276],[-2.317320,-0.027713],[-5.862099,-6.177962],[-7.320184,-3.064475],[-5.260059,0.497375],[-8.954861,1.941235],[1.901490,-4.550428],[0.871641,-0.224563],[-7.953274,1.700515],[5.480625,-0.304551],[8.680873,-0.461637],[-3.318903,-6.488948],[5.269752,7.423812],[9.993516,9.516909],[-8.246562,-9.346353],[-0.382998,-3.907659],[-6.765170,2.148254]], dtype = "float32")#candidate|2112|(480, 2)|const|float32
call_2111 = relay.TupleGetItem(func_171_call(relay.reshape(const_2112.astype('float32'), [15, 16, 4])), 0)
call_2113 = relay.TupleGetItem(func_173_call(relay.reshape(const_2112.astype('float32'), [15, 16, 4])), 0)
uop_2126 = relay.log10(bop_2098.astype('float32')) # shape=(10, 1, 12)
func_643_call = mod.get_global_var('func_643')
func_646_call = mutated_mod.get_global_var('func_646')
const_2136 = relay.const([8.545634,-2.392269,-7.650838,-0.310358,2.848467,-4.776271,-9.159263,-9.251366,8.189151,6.991281,-8.417065,-8.383984,-5.606974,4.595936,4.631685,5.804958,-2.856984,5.376379,-6.281226,1.952557,-6.200835,4.248310,6.526458,2.064732,-8.535573,-9.510129,-4.004894,-4.296019,-3.656728,-0.511732,-4.263429,-9.795800,8.128127,8.359903,5.248510,9.192772,-9.150098,9.530340,1.991940,0.161540,7.155019,-6.148622,-1.154323,-6.474936,9.175503,-3.595467,-2.263820,-3.673556,3.186081,1.601312,-3.702492,-8.737950,8.313613,-1.820661,2.188417,1.198451,5.913119,-3.361758,-3.068012,-4.816275,1.050051,9.275892,-3.876835,1.221511,-1.339875,-2.326947,-2.560609,4.259669,-8.257631,-4.153279,6.478837,-0.146735,5.778996,8.189660,5.641190,7.065405,-1.546110,-8.618366,-1.811986,-4.155806,-8.930822,7.561994,-3.655699,7.025719,-2.902046,-4.462394,3.805278,5.866368,7.080314,-2.139986,-4.621448,8.017442,-4.959306,8.588423,6.469826,8.907266,1.779997,-7.406221,-1.685056,-5.684364,1.837546,-8.709876,-9.136712,-6.273005,-7.620285,-4.787041,-0.626682,-9.998485,-2.451252,-7.176586,4.678488,4.510385,-4.221804,-2.786417,3.429402,-6.017045,6.878037,6.513555,-2.533114,2.884100,-0.100768,7.186036,8.030305,-6.596272,-9.225222,-7.642137,-6.054299,-6.246503,3.292314,6.337068,8.808548,-0.273479,5.556044,-3.819364,4.310083,-8.546941,-2.023776,-8.342364,5.056997,6.100429,6.059839,-0.297495,7.729084,9.071646,8.006758,-6.148404,-5.066128,-0.424923,-9.083836,8.842591,-5.027339,-3.958455,5.446706,5.968037,3.567873,-4.276490,-3.617011,-2.541643,3.073614,-3.920441], dtype = "float64")#candidate|2136|(160,)|const|float64
call_2135 = func_643_call(relay.reshape(const_2136.astype('float64'), [8, 2, 10]))
call_2137 = func_643_call(relay.reshape(const_2136.astype('float64'), [8, 2, 10]))
func_920_call = mod.get_global_var('func_920')
func_923_call = mutated_mod.get_global_var('func_923')
const_2140 = relay.const([[True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,True,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,True,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,True,False,True,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,False,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,False,True,True,True,True,True,True,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,False,True,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,False,False,False,False,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,True,False,True,False,True,True,True,True,True,False,False,False,False,True,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,False,False,False]], dtype = "bool")#candidate|2140|(1, 880)|const|bool
call_2139 = func_920_call(relay.reshape(const_2140.astype('bool'), [8, 11, 10]))
call_2141 = func_920_call(relay.reshape(const_2140.astype('bool'), [8, 11, 10]))
bop_2150 = relay.minimum(uop_2126.astype('float64'), relay.reshape(bop_2108.astype('float64'), relay.shape_of(uop_2126))) # shape=(10, 1, 12)
uop_2154 = relay.atan(bop_2150.astype('float32')) # shape=(10, 1, 12)
output = relay.Tuple([call_2111,const_2112,call_2135,const_2136,call_2139,const_2140,uop_2154,])
output2 = relay.Tuple([call_2113,const_2112,call_2137,const_2136,call_2141,const_2140,uop_2154,])
func_2161 = relay.Function([var_2096,var_2097,], output)
mod['func_2161'] = func_2161
mod = relay.transform.InferType()(mod)
var_2162 = relay.var("var_2162", dtype = "uint16", shape = (10, 1, 12))#candidate|2162|(10, 1, 12)|var|uint16
var_2163 = relay.var("var_2163", dtype = "uint16", shape = (10, 1, 12))#candidate|2163|(10, 1, 12)|var|uint16
output = func_2161(var_2162,var_2163,)
func_2164 = relay.Function([var_2162,var_2163,], output)
mutated_mod['func_2164'] = func_2164
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2581 = relay.var("var_2581", dtype = "float32", shape = (15, 1, 2))#candidate|2581|(15, 1, 2)|var|float32
var_2582 = relay.var("var_2582", dtype = "float32", shape = (15, 2, 2))#candidate|2582|(15, 2, 2)|var|float32
bop_2583 = relay.mod(var_2581.astype('float32'), var_2582.astype('float32')) # shape=(15, 2, 2)
output = relay.Tuple([bop_2583,])
output2 = relay.Tuple([bop_2583,])
func_2597 = relay.Function([var_2581,var_2582,], output)
mod['func_2597'] = func_2597
mod = relay.transform.InferType()(mod)
mutated_mod['func_2597'] = func_2597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2597_call = mutated_mod.get_global_var('func_2597')
var_2599 = relay.var("var_2599", dtype = "float32", shape = (15, 1, 2))#candidate|2599|(15, 1, 2)|var|float32
var_2600 = relay.var("var_2600", dtype = "float32", shape = (15, 2, 2))#candidate|2600|(15, 2, 2)|var|float32
call_2598 = func_2597_call(var_2599,var_2600,)
output = call_2598
func_2601 = relay.Function([var_2599,var_2600,], output)
mutated_mod['func_2601'] = func_2601
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2651 = relay.var("var_2651", dtype = "int32", shape = (4, 8, 3))#candidate|2651|(4, 8, 3)|var|int32
const_2652 = relay.const([[[-2,-7,2],[8,3,-5],[1,-5,-3],[-3,3,-9],[-9,5,-7],[-9,1,-9],[9,8,-5],[3,10,-3]],[[4,-7,7],[7,3,5],[4,-10,2],[-1,-7,5],[1,-10,-5],[-6,-8,-5],[9,2,5],[1,-1,-6]],[[10,-4,-6],[1,-6,-10],[5,-1,1],[9,-9,1],[6,5,4],[-10,3,-3],[2,8,-6],[-10,-6,-5]],[[6,-6,-3],[-1,10,-6],[-1,9,10],[-3,-6,2],[-1,5,3],[4,-4,-6],[-9,7,5],[4,-2,2]]], dtype = "int32")#candidate|2652|(4, 8, 3)|const|int32
bop_2653 = relay.bitwise_and(var_2651.astype('int32'), relay.reshape(const_2652.astype('int32'), relay.shape_of(var_2651))) # shape=(4, 8, 3)
output = bop_2653
output2 = bop_2653
func_2658 = relay.Function([var_2651,], output)
mod['func_2658'] = func_2658
mod = relay.transform.InferType()(mod)
mutated_mod['func_2658'] = func_2658
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2659 = relay.var("var_2659", dtype = "int32", shape = (4, 8, 3))#candidate|2659|(4, 8, 3)|var|int32
func_2658_call = mutated_mod.get_global_var('func_2658')
call_2660 = func_2658_call(var_2659)
output = call_2660
func_2661 = relay.Function([var_2659], output)
mutated_mod['func_2661'] = func_2661
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2702 = relay.const(2, dtype = "uint16")#candidate|2702|()|const|uint16
var_2703 = relay.var("var_2703", dtype = "uint16", shape = (5, 5, 8))#candidate|2703|(5, 5, 8)|var|uint16
bop_2704 = relay.right_shift(const_2702.astype('uint16'), var_2703.astype('uint16')) # shape=(5, 5, 8)
output = relay.Tuple([bop_2704,])
output2 = relay.Tuple([bop_2704,])
func_2707 = relay.Function([var_2703,], output)
mod['func_2707'] = func_2707
mod = relay.transform.InferType()(mod)
var_2708 = relay.var("var_2708", dtype = "uint16", shape = (5, 5, 8))#candidate|2708|(5, 5, 8)|var|uint16
output = func_2707(var_2708)
func_2709 = relay.Function([var_2708], output)
mutated_mod['func_2709'] = func_2709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2880 = relay.var("var_2880", dtype = "bool", shape = (14, 13, 4))#candidate|2880|(14, 13, 4)|var|bool
var_2881 = relay.var("var_2881", dtype = "bool", shape = (14, 13, 4))#candidate|2881|(14, 13, 4)|var|bool
bop_2882 = relay.logical_or(var_2880.astype('bool'), relay.reshape(var_2881.astype('bool'), relay.shape_of(var_2880))) # shape=(14, 13, 4)
func_171_call = mod.get_global_var('func_171')
func_173_call = mutated_mod.get_global_var('func_173')
var_2890 = relay.var("var_2890", dtype = "float32", shape = (120, 8))#candidate|2890|(120, 8)|var|float32
call_2889 = relay.TupleGetItem(func_171_call(relay.reshape(var_2890.astype('float32'), [15, 16, 4])), 0)
call_2891 = relay.TupleGetItem(func_173_call(relay.reshape(var_2890.astype('float32'), [15, 16, 4])), 0)
const_2894 = relay.const([[[True,False,True,True],[True,True,False,True],[False,True,True,False],[True,True,False,False],[False,False,False,False],[True,True,False,False],[False,True,True,True],[False,True,True,False],[False,False,True,True],[True,True,False,True],[False,True,False,True],[False,False,False,False],[False,False,False,True]],[[True,False,False,True],[False,True,True,False],[True,False,False,True],[True,True,False,False],[False,True,False,False],[False,False,False,True],[False,False,True,True],[False,False,False,False],[False,False,True,False],[False,False,True,True],[True,True,False,False],[True,False,False,True],[True,False,False,False]],[[False,False,True,True],[False,False,False,False],[False,False,False,True],[True,False,True,True],[False,False,False,True],[False,False,True,True],[False,False,False,False],[False,False,False,True],[False,True,False,False],[True,False,True,False],[False,True,True,True],[True,False,False,False],[True,False,True,True]],[[False,True,False,True],[True,False,True,True],[True,True,False,True],[False,False,False,True],[False,True,True,True],[False,False,False,False],[True,True,False,False],[True,True,True,False],[False,True,True,True],[True,False,True,False],[True,True,False,True],[False,False,False,False],[True,False,True,True]],[[False,False,True,True],[True,True,True,False],[True,False,False,True],[True,True,True,True],[True,False,True,False],[True,True,True,True],[True,False,False,False],[False,True,False,False],[True,True,False,False],[True,True,True,False],[False,True,True,True],[True,False,False,False],[False,False,True,False]],[[True,False,True,True],[False,True,True,False],[True,True,True,False],[True,True,True,False],[False,False,False,False],[True,True,False,False],[False,False,True,False],[False,False,False,False],[False,False,True,True],[True,False,True,False],[False,False,True,True],[True,False,True,False],[False,True,False,True]],[[False,False,False,False],[True,True,True,True],[True,True,True,True],[True,False,False,True],[True,False,True,True],[False,False,False,False],[False,True,False,False],[False,False,False,False],[True,False,True,False],[True,False,True,False],[True,True,True,True],[True,False,False,False],[False,True,True,False]],[[False,True,False,False],[False,False,True,False],[True,True,True,False],[True,False,False,False],[False,True,False,True],[False,True,False,False],[True,False,False,True],[False,False,False,False],[True,False,False,False],[True,True,False,False],[False,True,False,True],[True,False,True,True],[True,True,True,False]],[[True,True,False,False],[False,False,False,False],[False,False,False,False],[False,False,False,True],[False,False,True,False],[False,True,False,True],[True,True,True,True],[True,False,True,False],[True,True,False,True],[True,False,True,False],[False,True,False,True],[False,False,False,False],[False,False,False,False]],[[True,False,False,True],[False,True,False,True],[True,True,True,False],[False,True,False,True],[False,True,True,False],[True,True,True,True],[True,False,True,False],[False,True,False,True],[False,False,False,False],[True,False,True,False],[True,False,True,True],[True,True,True,True],[False,False,False,True]],[[False,True,False,True],[True,True,True,True],[True,False,True,True],[False,True,True,False],[False,False,False,True],[False,True,True,True],[False,False,True,True],[False,True,False,False],[False,True,False,False],[False,True,True,True],[True,False,False,False],[False,True,False,False],[True,False,True,True]],[[False,False,True,False],[False,False,True,True],[True,False,True,True],[True,True,True,True],[True,True,True,False],[True,True,False,True],[True,False,True,False],[True,True,False,True],[True,True,True,False],[True,True,True,False],[True,False,True,False],[False,True,True,True],[False,False,True,True]],[[False,False,True,True],[False,False,True,True],[True,True,False,True],[False,False,True,True],[True,False,True,False],[False,True,False,False],[False,True,True,False],[False,True,True,False],[True,False,True,True],[True,False,True,False],[False,True,True,False],[True,False,False,False],[False,True,False,True]],[[False,False,True,False],[False,True,False,False],[False,False,False,True],[False,True,False,True],[True,True,False,True],[True,True,False,False],[False,False,True,False],[True,True,True,False],[False,True,False,False],[False,True,False,False],[True,False,True,True],[True,True,True,False],[True,True,False,False]]], dtype = "bool")#candidate|2894|(14, 13, 4)|const|bool
bop_2895 = relay.less(bop_2882.astype('bool'), relay.reshape(const_2894.astype('bool'), relay.shape_of(bop_2882))) # shape=(14, 13, 4)
uop_2900 = relay.sin(var_2881.astype('float32')) # shape=(14, 13, 4)
func_116_call = mod.get_global_var('func_116')
func_118_call = mutated_mod.get_global_var('func_118')
var_2903 = relay.var("var_2903", dtype = "int64", shape = (2, 176))#candidate|2903|(2, 176)|var|int64
call_2902 = func_116_call(relay.reshape(var_2903.astype('int64'), [11, 4, 8]))
call_2904 = func_116_call(relay.reshape(var_2903.astype('int64'), [11, 4, 8]))
uop_2912 = relay.sigmoid(var_2890.astype('float32')) # shape=(120, 8)
output = relay.Tuple([call_2889,bop_2895,uop_2900,call_2902,var_2903,uop_2912,])
output2 = relay.Tuple([call_2891,bop_2895,uop_2900,call_2904,var_2903,uop_2912,])
func_2914 = relay.Function([var_2880,var_2881,var_2890,var_2903,], output)
mod['func_2914'] = func_2914
mod = relay.transform.InferType()(mod)
var_2915 = relay.var("var_2915", dtype = "bool", shape = (14, 13, 4))#candidate|2915|(14, 13, 4)|var|bool
var_2916 = relay.var("var_2916", dtype = "bool", shape = (14, 13, 4))#candidate|2916|(14, 13, 4)|var|bool
var_2917 = relay.var("var_2917", dtype = "float32", shape = (120, 8))#candidate|2917|(120, 8)|var|float32
var_2918 = relay.var("var_2918", dtype = "int64", shape = (2, 176))#candidate|2918|(2, 176)|var|int64
output = func_2914(var_2915,var_2916,var_2917,var_2918,)
func_2919 = relay.Function([var_2915,var_2916,var_2917,var_2918,], output)
mutated_mod['func_2919'] = func_2919
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3056 = relay.var("var_3056", dtype = "float32", shape = (7, 1, 13))#candidate|3056|(7, 1, 13)|var|float32
uop_3057 = relay.rsqrt(var_3056.astype('float32')) # shape=(7, 1, 13)
output = uop_3057
output2 = uop_3057
func_3062 = relay.Function([var_3056,], output)
mod['func_3062'] = func_3062
mod = relay.transform.InferType()(mod)
mutated_mod['func_3062'] = func_3062
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3063 = relay.var("var_3063", dtype = "float32", shape = (7, 1, 13))#candidate|3063|(7, 1, 13)|var|float32
func_3062_call = mutated_mod.get_global_var('func_3062')
call_3064 = func_3062_call(var_3063)
output = call_3064
func_3065 = relay.Function([var_3063], output)
mutated_mod['func_3065'] = func_3065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3119 = relay.var("var_3119", dtype = "uint16", shape = (5, 9, 1))#candidate|3119|(5, 9, 1)|var|uint16
const_3120 = relay.const([[[-10],[-2],[1],[9],[-5],[2],[9],[1],[2]],[[-6],[-9],[-6],[-4],[-1],[1],[-10],[-8],[-1]],[[-8],[6],[9],[1],[-9],[10],[2],[-6],[-10]],[[10],[-9],[-1],[-10],[3],[-1],[6],[5],[3]],[[1],[-4],[6],[4],[1],[-1],[-2],[7],[9]]], dtype = "uint16")#candidate|3120|(5, 9, 1)|const|uint16
bop_3121 = relay.greater_equal(var_3119.astype('bool'), relay.reshape(const_3120.astype('bool'), relay.shape_of(var_3119))) # shape=(5, 9, 1)
output = relay.Tuple([bop_3121,])
output2 = relay.Tuple([bop_3121,])
func_3129 = relay.Function([var_3119,], output)
mod['func_3129'] = func_3129
mod = relay.transform.InferType()(mod)
var_3130 = relay.var("var_3130", dtype = "uint16", shape = (5, 9, 1))#candidate|3130|(5, 9, 1)|var|uint16
output = func_3129(var_3130)
func_3131 = relay.Function([var_3130], output)
mutated_mod['func_3131'] = func_3131
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3225 = relay.var("var_3225", dtype = "float64", shape = (8, 13, 8))#candidate|3225|(8, 13, 8)|var|float64
uop_3226 = relay.acos(var_3225.astype('float64')) # shape=(8, 13, 8)
func_116_call = mod.get_global_var('func_116')
func_118_call = mutated_mod.get_global_var('func_118')
const_3251 = relay.const([6,-10,10,-10,2,-4,-6,6,2,7,7,6,7,1,-3,-4,2,-7,-9,-9,-4,8,9,-9,1,5,-3,-2,-8,-10,3,1,7,-8,-4,-7,-7,10,9,10,-5,-10,7,1,-6,8,7,5,-9,10,9,2,2,-3,-3,-1,-10,-7,2,4,-8,-7,4,-9,-6,-6,8,-10,-2,-9,10,1,2,6,-5,4,-3,-10,-5,-9,10,6,3,-6,1,-10,-9,10,1,7,-6,-1,2,-7,-2,5,-2,-10,7,2,5,-8,2,-8,-3,9,4,8,1,2,-2,5,-8,-8,3,4,1,4,7,6,-7,-9,7,6,5,-1,-4,10,1,10,10,-4,5,4,-10,-2,-7,9,-2,-10,-4,5,-7,-2,5,-2,6,-3,6,3,-8,-4,-7,9,-9,-8,9,-10,8,-5,-6,9,-5,-2,-10,8,1,-4,-6,-10,1,-7,-9,7,3,-2,10,-10,4,5,-9,5,-6,8,4,-6,-4,-7,2,-4,-7,3,-10,2,6,-1,2,-3,-6,10,-9,-7,1,-9,10,-7,2,6,-2,-7,8,3,5,-6,-9,3,5,2,-3,-7,6,2,4,1,6,4,7,4,3,3,8,-9,-5,7,4,1,-9,-10,-10,-7,-1,10,8,8,-4,1,-8,-5,3,-8,-7,7,-1,7,9,6,6,-6,10,6,-8,5,7,-6,1,7,3,2,-2,5,-4,9,-9,-6,10,10,-9,1,-5,8,3,2,1,9,-4,5,7,9,9,-2,7,9,1,2,9,9,-5,-9,6,8,-4,7,-6,-7,4,-8,-5,5,-6,-9,-6,8,-1,8,5,-9,-10,10,5,-3,-7,9,7,-6,-2,-10,5,-2,5,8,-7,-10,-3,2,-8,-6,5,6,9,5,-1,10,4,-6,1,2,-9,4,3,-10,1,7], dtype = "int64")#candidate|3251|(352,)|const|int64
call_3250 = func_116_call(relay.reshape(const_3251.astype('int64'), [11, 4, 8]))
call_3252 = func_116_call(relay.reshape(const_3251.astype('int64'), [11, 4, 8]))
bop_3263 = relay.logical_or(const_3251.astype('bool'), relay.reshape(call_3250.astype('bool'), relay.shape_of(const_3251))) # shape=(352,)
bop_3266 = relay.logical_or(const_3251.astype('bool'), relay.reshape(call_3252.astype('bool'), relay.shape_of(const_3251))) # shape=(352,)
output = relay.Tuple([uop_3226,bop_3263,])
output2 = relay.Tuple([uop_3226,bop_3266,])
func_3270 = relay.Function([var_3225,], output)
mod['func_3270'] = func_3270
mod = relay.transform.InferType()(mod)
var_3271 = relay.var("var_3271", dtype = "float64", shape = (8, 13, 8))#candidate|3271|(8, 13, 8)|var|float64
output = func_3270(var_3271)
func_3272 = relay.Function([var_3271], output)
mutated_mod['func_3272'] = func_3272
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3508 = relay.var("var_3508", dtype = "float32", shape = (13, 3, 15))#candidate|3508|(13, 3, 15)|var|float32
var_3509 = relay.var("var_3509", dtype = "float32", shape = (13, 3, 15))#candidate|3509|(13, 3, 15)|var|float32
bop_3510 = relay.floor_divide(var_3508.astype('float32'), relay.reshape(var_3509.astype('float32'), relay.shape_of(var_3508))) # shape=(13, 3, 15)
output = bop_3510
output2 = bop_3510
func_3517 = relay.Function([var_3508,var_3509,], output)
mod['func_3517'] = func_3517
mod = relay.transform.InferType()(mod)
mutated_mod['func_3517'] = func_3517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3517_call = mutated_mod.get_global_var('func_3517')
var_3519 = relay.var("var_3519", dtype = "float32", shape = (13, 3, 15))#candidate|3519|(13, 3, 15)|var|float32
var_3520 = relay.var("var_3520", dtype = "float32", shape = (13, 3, 15))#candidate|3520|(13, 3, 15)|var|float32
call_3518 = func_3517_call(var_3519,var_3520,)
output = call_3518
func_3521 = relay.Function([var_3519,var_3520,], output)
mutated_mod['func_3521'] = func_3521
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3537 = relay.var("var_3537", dtype = "float32", shape = ())#candidate|3537|()|var|float32
var_3538 = relay.var("var_3538", dtype = "float32", shape = (6, 14, 14))#candidate|3538|(6, 14, 14)|var|float32
bop_3539 = relay.power(var_3537.astype('float32'), var_3538.astype('float32')) # shape=(6, 14, 14)
func_920_call = mod.get_global_var('func_920')
func_923_call = mutated_mod.get_global_var('func_923')
const_3545 = relay.const([True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,False,False,True,True,False,False,False,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,True,False,False,True,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,True,True,True,True,False,False,True,True,False,True,False,True,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,True,True,True,True,True,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,False,True,True,False,True,False,True,False,False,True,True,True,False,True,False,True,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,True,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,True,False,False,True,True,False,True,False,True,False,False,True,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,True,False,False,False,False,True,False,False,True,True,False,False,False,False,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,True,True,False,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,True,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,False,True,True,True,False,False,False,False,True,True], dtype = "bool")#candidate|3545|(880,)|const|bool
call_3544 = func_920_call(relay.reshape(const_3545.astype('bool'), [8, 11, 10]))
call_3546 = func_920_call(relay.reshape(const_3545.astype('bool'), [8, 11, 10]))
output = relay.Tuple([bop_3539,call_3544,const_3545,])
output2 = relay.Tuple([bop_3539,call_3546,const_3545,])
func_3548 = relay.Function([var_3537,var_3538,], output)
mod['func_3548'] = func_3548
mod = relay.transform.InferType()(mod)
mutated_mod['func_3548'] = func_3548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3548_call = mutated_mod.get_global_var('func_3548')
var_3550 = relay.var("var_3550", dtype = "float32", shape = ())#candidate|3550|()|var|float32
var_3551 = relay.var("var_3551", dtype = "float32", shape = (6, 14, 14))#candidate|3551|(6, 14, 14)|var|float32
call_3549 = func_3548_call(var_3550,var_3551,)
output = call_3549
func_3552 = relay.Function([var_3550,var_3551,], output)
mutated_mod['func_3552'] = func_3552
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3643 = relay.var("var_3643", dtype = "float64", shape = (1, 8, 15))#candidate|3643|(1, 8, 15)|var|float64
const_3644 = relay.const([[[6.968101,7.093794,7.942120,0.812410,8.872201,9.628808,-2.465808,0.870116,-1.472453,8.711497,-2.863618,-4.482632,8.575122,-4.290523,-2.080730],[8.623838,4.061198,-4.061723,0.782913,6.768513,9.470265,3.837665,-5.792845,3.042484,-6.205593,-2.370265,-4.712920,9.317775,-0.017398,-5.630825],[5.912503,-1.501062,-0.550511,2.643628,-9.460154,-9.865747,8.219341,-3.794029,7.640232,9.289858,-7.115406,-0.030808,-5.310634,7.932754,-6.151407],[4.259977,6.320449,-7.461914,2.333985,-7.057343,-6.459714,0.716891,-8.051378,3.164596,4.601087,9.060817,-1.892313,2.256709,1.976155,7.530911],[-1.123733,-3.339294,-6.838799,5.460441,-3.540853,9.327531,-2.479661,0.826656,-4.849797,-4.998420,2.649101,-9.421547,-2.622889,-6.806366,-2.701636],[0.236570,-2.908985,-3.137051,-4.023224,-9.047634,3.048934,3.663871,-2.346315,-1.179320,4.158993,2.599616,6.926299,-6.867225,5.332858,7.187854],[-8.468892,-4.867151,-6.598851,1.235273,-7.253790,-8.806109,8.538738,3.377526,-8.951841,5.142986,9.213298,-1.433416,-5.461014,-4.090660,2.365723],[8.237922,-4.926382,-2.144914,-4.892428,5.073636,-8.713201,4.461401,2.505544,9.573713,-2.845055,5.020220,5.895381,-1.505814,-4.590280,6.109719]],[[5.884914,1.319009,-7.692435,-2.908167,3.251907,2.299961,1.439077,8.240151,-4.732971,-7.442940,4.487225,-0.836188,8.008029,-9.988308,4.228385],[1.915917,-4.354749,-7.316206,3.013566,-6.868206,-6.615166,-1.742311,-0.276394,-5.684145,-5.295105,6.362128,-9.322927,2.158051,1.299042,4.023034],[2.173265,4.484743,2.010453,2.269516,-9.766708,2.109744,3.379469,2.892440,2.596617,-4.373841,-5.147684,-5.602827,5.336819,7.574477,8.030020],[9.998466,6.086523,0.309672,-8.122865,3.711365,-2.297778,2.868747,-0.091382,5.763424,-1.661575,-1.737160,2.858068,7.455194,-8.876602,3.639187],[8.502356,-9.430451,4.922500,8.014911,-9.319672,6.255915,9.300042,7.981171,3.824199,-4.938032,-8.456655,-7.933765,4.847771,6.199108,-7.795231],[5.815344,6.320254,6.761575,8.199621,6.373629,1.543081,-6.051435,5.917153,4.135338,-1.214089,2.768549,-0.909822,5.422161,5.697845,1.834583],[9.919796,-6.110121,-8.401132,-5.650652,-8.745343,-9.294959,-2.505228,9.208619,-2.275808,-4.812969,-7.059601,2.804062,6.357436,-4.891753,4.938622],[1.572556,-9.011784,-9.422466,6.684343,6.338439,-6.264373,4.610904,-3.926964,-3.774576,9.571829,-9.219134,-0.303365,-5.413998,-5.367845,9.276360]],[[-9.921162,-4.436514,-5.038299,-0.056653,8.642348,8.397694,5.979934,-9.227065,3.262044,-1.037421,7.101714,-4.990981,-3.080005,-1.133869,0.235887],[4.059448,-6.339036,7.124946,-9.096394,-2.703753,5.602615,6.611744,-1.673192,-2.160996,-8.965185,3.693759,3.512532,-4.555070,-9.359078,-7.329304],[-3.384327,-7.573812,-9.273747,5.366274,7.528842,-7.105865,7.658887,9.191351,-3.747530,-3.667282,-5.895792,-2.082151,0.491247,6.255112,5.196572],[-6.576370,8.332898,-3.110488,-0.301063,-3.625357,5.012897,-1.459936,-9.401792,2.213922,8.936751,-7.293375,6.702277,-4.051976,0.614345,-6.744104],[6.568377,-2.297979,7.804237,-0.641873,-7.251002,0.151177,-1.817541,-1.055515,9.611596,8.131999,4.658681,-7.601418,-8.183088,-0.034054,8.316527],[8.008718,1.882069,8.515312,-0.304097,-1.658653,7.041211,1.528179,3.605211,-5.451119,4.741101,6.028716,5.895614,6.954062,-6.212618,7.118977],[-0.118197,5.756314,-0.054469,1.456192,-8.235402,3.758486,5.946684,3.737827,2.991336,-4.871187,6.322589,1.199359,6.022160,7.356451,-2.459579],[3.963205,9.531015,-2.740681,-4.429128,-1.029897,3.541139,-3.111398,-0.073293,7.084011,9.331082,-8.147286,-1.077092,-0.257882,-8.267109,9.295059]],[[-0.263450,-4.804371,7.795002,-1.117221,-1.750542,3.232658,-8.497288,-3.889447,4.539935,-9.636476,3.604830,-6.285580,9.023371,-3.074978,-4.088821],[-8.186779,-4.117781,-8.290121,-2.039633,5.495888,4.844615,-4.126489,-0.245372,9.274064,8.031757,9.945848,-6.196114,-6.865189,-5.180398,-7.375288],[-5.410942,6.891884,8.032608,2.933695,-4.830079,-8.808782,0.562952,-8.251942,9.415701,2.516467,1.682899,-3.261778,-3.862368,9.323280,0.820630],[0.632149,6.377452,-6.387532,-7.452413,-8.255521,3.743814,6.118584,0.979593,-6.611139,3.334332,5.751602,-8.775339,-2.427420,-3.157378,2.472304],[1.317365,-7.764321,-9.350861,1.249136,-1.929108,5.188776,-5.360796,-2.221217,-4.867755,7.733057,-6.086651,8.544404,-9.476273,-0.224161,0.462428],[-2.809685,-4.759238,9.788247,8.203139,-5.247990,-2.597110,2.329656,-6.309837,7.526606,3.518064,-4.729304,4.300410,-5.193474,2.426842,1.258136],[0.021618,-0.298120,-4.668218,-3.867343,-9.925782,9.975883,-1.277528,-5.338395,-4.445109,-9.339828,-2.082307,3.454235,-9.883989,9.712535,-2.263134],[-7.568917,-7.448155,-4.453542,6.015021,-1.024668,9.235995,-3.673269,9.665469,-7.922090,-8.520240,5.235309,1.489917,9.016128,-9.375761,8.694261]]], dtype = "float64")#candidate|3644|(4, 8, 15)|const|float64
bop_3645 = relay.power(var_3643.astype('float64'), const_3644.astype('float64')) # shape=(4, 8, 15)
bop_3648 = relay.subtract(const_3644.astype('uint8'), relay.reshape(bop_3645.astype('uint8'), relay.shape_of(const_3644))) # shape=(4, 8, 15)
func_1763_call = mod.get_global_var('func_1763')
func_1766_call = mutated_mod.get_global_var('func_1766')
const_3656 = relay.const([-4,-1,2,1,6,-4,-2,-7,-1,5,4,-2,6,-10,-10,2,-9,-8,-1,-8,10,9,4,6,-8,5,-5,-8,5,-9,-1,10,6,-9,-8,5,3,-9,9,-2,-8,-8,4,-7,-1,5,-9,-10,-2,5,9,7,5,7,-3,2,8,6,3,-2,-10,-6,3,-8,-6,6,-3,7,10,2,7,-7,-4,-8,8,1,8,-9,-5,7,-7,9,7,-8,2,-2,-3,-3,-6,4,-10,2,-6,8,-9,5,9,8,9,-4,-5,1,7,-7,-6,7,-9,5,-1,7,9,5,-5,3,8,-9,6,-5,6,6,-4,-10,-3,10,-2,-3,10,-1,1,-1,3,-4,-1,-2,10,1,-2,-8,-7,-10,-5,10,-2,-10,-6,2,2,6,4,10,-7,-7,-3,-5,-3,-9,-7,4,9,2,7,-5,-1,-4,-9,8,-7,-5,10,-1,5,1,-9,3,1,5,1,-8,-1,7,1,5,2,10,-2,-5,1,10,5,1,-9,3,-8,-4,7,8,9,-8,7,-1,1,7,5,5,3,5,2,-3,1,9,9,8,3,6,-5,1,6,7,7,1,-8,1,-4,-2,2,-5,-9,8,10,-3,3,-9,2,-10,8,9,8,7,4,9,1,6,8,5,8,-2,-2,7,9,-4,-9,-4,-5,-10,-10,-5,-4,2,-3,-9,5,-1,2,-4,7,9,-3,4,-6,6,-3,7,-2,-9,-6,-7,10,9,-7,-7,10,-2,-9,-10,-3,10,-7,-1,-8,3,1,-6,-7,-6,-5,-9,-9,10,9,2,6,8,-1,-2,1,4,5,-2,-2,-7,1,5,-8,5,-5,-1,-1,6,-10,-10,6,-3,-3,-1,5,-5,5,4,5,5,8,-2,-7,-2,9,-9,5,3,-9,4,-4,8,-7,5,4,1,-7,5,-3,2,9,6,3,4,8,6,5,3,8,3,9,-6,-8,2,-5,3,4,-10,1,-9,-9,10,8,-5,5,-8,3,1,-4,3,7,-3,-7,10,-6,6,-5,-9,-4,-1,6,3,3,3,7,7,3,-5,-3,-8,-5,4,5,-4,2,5,-5,7,2,-5,5,-3,4,-9,-6,-5,3,2,7,-4,1,4,10,6,-3,-1,5,-7,3,-5,2,1,-3,3,8,8,-9,-7,-6,-8,-8,-7,4,-3,1,7,9,-1,8,-2,-1,8,-5,-8,-10,9,-7,2,-4,10,2,-1,5,5,5,-10,8,-8,-4,3,5,3,-2,-1,1,-2,-9,4,-4,-7,-6,9,6,-8,-6,-6,5,-10,8,1,-5,10,5,-7,-5,-10,-3,5,-8,2,4,-2,-1,3,-6,-7,-7,-6,-3,3,-9,-8,-2,6,8,4,9,-10,-10,8,-9,-8,3,1,9,5,7,-4,10,10,7,-9,-2,7,-2,-10,1,7,4,-4,-2,-10,-4,-7,-4,2,1,-10,-10,4,3,3,2,9,-10,8,4,8,-2,-2,-1,10,6,4,-6,-8,-2,4,-2,9,-8,3,-3,-1,7,-3,-10,2,-10,3,-5,-6,3,1,7,-9,-5,8,-5,-4,4,5,-10,-1,-3,10,-3,-3,8,-4,-3,9,-7,-7,6,9,1,-4,-8,3,9,-9,10,1,-7,-3,7,-8,1,-9,9,8,9,-2,9,8,1,-10,-1,-10,-5,-9,-7,7,4,-4,1,6,-4,-8,-6,-8,-6,-7,-9,-5,10,-7,3,-4,9,4,1,-1,-8,7,7,-8,-6,-10,-2,9,1,10,7,10,3,7,4,9,9,4,3,-1,-9,-6,-7,2,9,9,7,4,-5,-3,9,9,-8,-5,6,-2,6,5,-10,-9,-10,-7,-10,-6,3,2,-1,-1,-7,-2,10,-10,-9,-8,-4,2,-7,-3,-1,2,8,8,-8,-8,3,7,-1,2,4,3,-8,3,3,2,3,-7,-9,-8,-4,-9,-6,2,5,-1,3,6,8,-7,-3,6,3,7,-8,9,3,9,-6,9,7,10,-4,1,6,-5,-7,5,4,-5,8,4,-4,3,8,-3,3,-4,2,1,3,4,-6,-3,-2,-5,-2,6,-4,6,-2,-4,4,2,-3,-1,10,10,6,-8,-2,1,-2,10,5,-7,-6,-1,-10,8,7,-2,7,-5,-7,-3,8,3,-8,-7,10,9,-6,10,-3,-9,-10,-7,5,1,-7,-1,6,-4,-6,9,-6,3,7,5,-2,8,7,8,-9,2,-3,10,6,6,-6,9,1,1,-5,-8,3,8,5,-2,7,8,-8,3,-2,-5,4,-10,7,-5,-10,-9,2,2,7,10,9,-8,-6,-10,-8,7,-10,8,-10,10,-7,4,-8,5,-2,1,-4,-8,-10,9,3,1,-6,-1,-2,-6,-9,6,-9,-5,7,2,-7,-2,-7,4,-10,3,3,-10,-4,2,9,3,3,8,-5,3,-9,8,7,-7,-8,1,-6,-6,9,6,-10,-7,8,-2,6,-7,-10,2,-1,-4,-9,10,-6,-6,6,7,4,6,-9,-6,-6,1,-10,-5,2,-9,4,4,8,7,5,-8,7,-10,-6,3,-9,-10,-7,-1,-4,-10,4,8,-6,-3,-8,10,7,-4,-6,7,-1,-8,3,7,-4,6,1,-7,3,-1,-3,8,3,-6,-7,6,-9,-8,8,10,2,-9,3,3,-7,7,-7,1,7,9,-10,3,3,-2,7,-10,-9,6,-4,8,-5,-3,-1,2,-2,5,-8,-1,-10,-2,6,-9,-3,-7,-6,-10,1,5,8,2,-8,3,-5,-9,-1,3,-2,-10,-9,-4,3,8,-9,-6,10,-8,6,6,-10,-6,5,6,-4,-4,5,-10,4,-2,2,-10,7,3,-1,-3,-2,-10,10,4,-4,9,-8,10,10,3,-10,-6,-10,8,-6,2,2,6,-10,8,-1,-5,-7,-1,5,-8,-6,9,1,-7,10,8,-1,-4,7,5,8,-8,-3,3,-2,2,-5,-6,-10,-5,2,2,8,-4,-7,-4,9,3,1,-1,-7,3,-3,8,1,6,7,-7,-4,-1,-2,-10,-8,-4,-9,4,-5,5,5,5,-9,7,9,-2,-7,-7,-1,-9,-2,-10,7,6,-10,-3,-6,-10,9,2,3,2,8,-10,-8,10,3,10,3,-3,-7,-9,-5,10,8,4,6,5,7,5,-6,5,4,-9,-1,1,1,3,-2,-1,-2,4,-1,2,-4,-3,-1,-10,-2,-3,5,1,7,-3,-6,1,-9,6,6,8,-6,-10,7,-3,3,4,-1,4,-8,8,1,-1,-4,10,4,8,7,6,-2,-7,-6,-2,5,-6,-3,8,-2,2,-6,4,10,-10,3,-3,7,-9,10,-2,7,9,-10,2,5,-10,8,-3,-7,5,2,-5,7,-2,5,-1,1,10,6,5,-8,6,-8,-4,3,7,9,-4,5,-5,-1,-1,-8,-4,-5,-8,4,10,-3,1,6,-1,9,1,-1,-6,-5,-3,-10,-7,-7,-9,-9,5,5,-7,-3,6,-4,-7,5,7,10,3,8,6,-7,6,-8,-7,8,-6,4,2,10,1,5,-5,10,7,-10,-3,10,10,-4,-2,4,-3,9,4,-7,5,5,-8,-10,2,10,4,9,-9,-4,5,-9,4,-4,-7,3,2,4,4,-5,-3,-4,-4,-2,5,-5,1,9,-10,-4,-3,-1,-9,-4,-10,-9,-3,-9,-7,-3,-6,-5,10,4,4,-9,9,1,-6,10,4,-8,-2,8,-7,-4,-7,3,10,9,9,10,-9,-5,5,-2,5,-8,6,-8,6,7,-2,1,8,-7,-8,-5,7,-4,5,5,-4,1,-8,-3,3,-8,-8,7,8,3,1,3,-7,-2,2,6,-10,-8,-6,-5,-10,-5,1,-6,-6,-5,8,6,-6,10,8,8,3,-10,-6,1,9,4,-10,1,1,4,7,-5,-2,2,2,-2,5,-7,7,7,-6,8,-3,-1,-6,-4,-8,-5,-5,-2,9,4,-6,-5,9,-10,2,10,-8,2,9,-8,-6,-7,2,-9,-3,-6,-4,-1,2,-7,-1,2,7,3,9,-2,4,7,3,8,-9,-5,5,5,9,-2,8,-10,-7,2,4,-2,-7,8,-6,-6,-1,7,8,3,-3,-8,8,-9,-10,-2,7,5,-4,-4,9,5,-2,6,-4,9,-4,2,4,-9,-2,-1,7,-5,-8,1,-10], dtype = "int64")#candidate|3656|(1568,)|const|int64
call_3655 = relay.TupleGetItem(func_1763_call(relay.reshape(const_3656.astype('int64'), [2, 784])), 1)
call_3657 = relay.TupleGetItem(func_1766_call(relay.reshape(const_3656.astype('int64'), [2, 784])), 1)
func_1301_call = mod.get_global_var('func_1301')
func_1304_call = mutated_mod.get_global_var('func_1304')
var_3673 = relay.var("var_3673", dtype = "bool", shape = (168, 2))#candidate|3673|(168, 2)|var|bool
const_3674 = relay.const([-2.232230,6.025950,-2.769296,-4.398956,-3.946234,8.948751,3.380456,-4.213335,8.036502,9.879406,2.810959,-0.379889,-0.425083,7.851360,-6.299853,7.437227,2.321795,-2.029210,2.510291,-8.851459,5.518041,-4.324789,-3.422886,-0.807996,-2.426744,-5.713881,8.147425,-9.763625,5.286940,-9.365913,7.962859,-9.739014,-7.505168,1.384162,-2.104647,4.309841,0.553745,-8.633909,5.381219,-7.452627,-2.596601,0.257507,7.131667,8.201065,7.349080,-7.751025,-1.135857,4.044344,0.071792,-8.258248,-3.146856,4.153183,6.672454,5.864249,0.971259,8.471840,-5.244414,3.318430,-5.335288,-1.783596,-7.939756,-1.104953,-4.216971,-8.100941,-4.758464,1.932026,-7.376285,4.762473,-9.931510,-9.218744,-1.454914,6.170244,-3.192235,-5.393393,-5.275392,-3.014410,-1.295545,6.104499,-4.936692,-6.708619,-0.771194,6.672431,3.946175,-6.496694,0.836377,4.673283,-9.538934,2.225457,2.712121,8.030741,-6.326456,8.331305,3.753067,9.077324,-9.849797,-5.725136,0.730616,8.064828,-5.885020,-9.554722,3.730936,9.177363,3.477868,-1.655853,5.404145,-4.989830,-0.515050,-2.926147,-0.423005,8.402237,3.776773,9.130135,-8.144264,0.996914,-4.308869,-2.441179,3.457397,-6.273025,-1.570768,-4.558925,-6.383670,-1.853095,-2.107238,-2.950306,-0.662282,5.033043,-4.514201,9.532295,4.827025,9.003062,-7.762480,6.740675,-2.452121,-3.104131,2.703360,-0.106760,6.137360,-8.321427,9.880617,-6.480937,-1.120921,7.740623,-8.653054,3.775657,-8.091033,-2.123781,1.377312,-4.600682,0.237117,-9.230265,9.696942,-3.744469,9.695764,-9.803113,-6.533066,5.368295,-2.769354,0.397802,7.311957,1.484460,7.245804,-7.824611,9.187395,-8.203494,-0.149546,8.804116,4.227825,-5.202604,-1.399507,0.647127,-6.435732,-8.793820,-8.617905,3.359461,-6.896458,9.579414,-6.711735,-5.876572,-1.541548,-0.987879,-6.042357,6.081107,-8.205230,-8.840297,-3.954470,3.650811,-0.867864,-5.822086,3.277232,-5.798418,-3.143228,9.023540,-1.839041,-2.099254,5.072998,7.346776,1.901715,3.989309,-2.234434,-9.989156,-2.253386,3.761993,3.004992,1.839949,-4.615387,8.538702,0.585871,3.814451,-8.776532,-7.313801,3.541451,0.699101,-1.917435,-3.426295,9.472002,-8.010668,-2.320218,-4.847196,5.094729,-3.396122,-0.513521,-1.099025,-4.452403,1.204743,4.312538,-5.817944,2.145651,1.830488,7.929398,-6.162026,7.980128,-0.796692,6.821982,2.657287,-5.747915,-2.810865,3.117906,-2.202536,-9.683829,5.403624,3.630404,-3.293297,1.469768,1.704658,8.882579,9.497942,-0.056673,-5.851945,9.618597,-0.907475,9.590726,-2.232886,3.706686,1.045754,-0.892321,4.345072,-6.460984,-7.650221,-6.372630,-6.984237,7.988924,-1.883857,0.238867,2.167715,-0.724343,-7.251857,-6.429395,8.046036,7.392805,-6.930402,0.081749,-9.860382,5.450482,7.244946,-2.200910,-5.936075,-8.999184,8.221408,8.176402,-4.461307,-3.720645,-9.567913,1.466877,-5.391252,-6.174227,-7.860992,-3.970968,5.503031,2.682935,4.420137,2.282726,3.243616,-4.648868,6.498294,-2.180268,-0.188175,1.592584,4.067132,-5.011355,9.284069,-0.128697,-4.624323,-1.387311,5.088806,-7.471468,6.628548,-4.287238,2.911016,1.949405,-3.492177,-4.250299,-0.422963,1.490857,-7.287275,1.346390,-3.538512,8.325095,9.162222,2.539700,6.858919,3.769036,3.249716,-3.380171,6.682109,0.690202,5.173960,-5.090148,8.784159,1.274285,0.889058,-1.811038,3.020863,-1.339732,3.038433,9.303244,4.226645,-3.322854,-9.322896,-7.081904,-8.820680,2.055924,2.679539,-8.955681,-8.061920,0.854997,-7.310044,4.800334,6.522884,-3.145495,2.697173,-1.671081,0.082430,0.123035,0.486023,9.057337,-7.299808,8.319296,-4.774332,-8.170321,1.815418,-3.081043,5.011813,8.118843,5.749330,-2.736443,1.935531,5.452995,4.750972,-7.675955,-3.861904,-5.441956,6.943304,2.450356,3.577438,-4.972370,7.483121,2.267589,-7.299751,1.989235,-4.073118,1.140320,-4.153022,-6.080428,7.883745,-3.543647,-4.757359,-6.897791,-4.906016,7.659894,-1.471351,8.985089,-9.831426,-6.978031,4.300190,-3.202690,4.242909,-2.983517,3.826107,8.650926,7.761439,-3.287492,0.908371,4.016266,-5.497314,9.745557,-6.359121,-6.326750,9.081229,-4.502800,4.074689,3.343879,-3.315859,-1.277865,-6.186786,-6.689488,-0.384713,-1.639461,-7.970805,2.802002,-8.481820,5.833673,1.312914,-8.396099,-6.959716,-6.577223,1.862969,1.851525,1.866243,8.935973,6.737544,1.254811,1.355001,7.172159,-8.338477,-2.120584,-7.687859,3.701478,-8.048683,-7.159494,-6.902863,-7.061621,-8.054664,7.363563,0.689324,-7.800151,5.494905,-3.331718,4.706708,-9.466937,9.095120,-4.419098,-4.053998,8.876043,8.831802,5.971134,-7.054429,-4.190184,2.802386,-8.831670,-6.899416,-0.983949,9.459798,-5.743130,-1.588191,-7.159968,-3.541670,7.840198,-2.554396,8.323697,0.893590,-9.001160,-4.307180,-9.391734,-8.335534,-7.642486,1.507467,-6.193807,-0.904324,4.184356,2.907522,-7.128149,7.835340,-1.836649,-7.600752,6.753216,4.573205,-7.206751,-9.578103,2.542726,0.125576,-2.736704,-1.794813,6.962024,2.291406,-0.494614,-3.950886,-7.287627,-8.279727,-6.131385,-5.702440,-0.932197,3.603370,6.983540,-9.129843,-9.731966,9.899027,-9.615766,-1.263791,-4.590267,4.181942,-0.906257,3.529107,8.263672,-0.593414,-2.273621,4.317883,-2.528852,5.061086,4.920947,-2.263512,-7.283444,-7.240167,-5.953883,-6.393425,-6.385413,6.415044,-4.350836,-4.163215,-3.427709,4.462570,4.595125,-6.135183,0.037895,-9.452297,4.051763,-0.186983,-9.547857,-9.200489,0.482835,9.408323,-3.835633,8.481513,6.431379,-6.021073,-3.206233,-2.501630,9.317518,0.430416,2.715684,2.413118,-5.526382,-6.966492,-8.922266,8.457353,8.789689,0.421452,8.407215,-6.167546,-3.154033,0.451830,-3.474669,4.710764,-3.839003,-0.547063,-2.877005,-7.399347,-6.322356,5.359965,5.835747,-0.518242,0.634483,8.418372,-5.547513,0.727621,-9.338341,7.287449,-1.172528,-2.313827,2.827510,-0.598504,-8.151097,2.113464,4.789956,9.400817,6.060196,-9.258347,-2.549697,-1.175662,4.201735,2.749272,-0.467594,0.646920,5.732088,5.766853,-9.040998,-4.197431,-3.216613,6.305223,-8.078206,-6.285055,6.461367,-2.461047,-6.744228,-9.652970,-1.465911,-6.504531,7.706065,-3.122154,6.131558,2.246141,4.427319,9.040496,7.483577,-4.151706,9.002162,-6.712771,5.769632,-8.164688,4.944788,3.124567,5.082150,-7.399338,2.906432,6.399609,-8.376313,0.657191,5.738610,3.140725,4.419005,-8.065688,-5.536270,2.848136,-8.504310,-4.758206,6.220729,6.568051,6.276413,4.803734,-2.392345,3.201605,6.635470,3.708918,1.207760,-2.843860,-5.995800,-9.344904,3.150619,-6.906116,5.111367,5.826763,-0.739477,6.303258,-9.774446,3.593157,-6.604738,0.993824,3.939501,-7.048453,8.483244,6.298543,1.836867,-9.240237,-1.993699,-1.998083,2.763889,-1.526527,2.991924,7.096708,-4.979828,-3.794791,-4.714430,-7.593248,-4.635533,-7.851902,3.548698,0.608814,1.934991,5.753964,-9.665688,-5.010789,6.161678,-6.096114,-8.658664,-6.228606,-2.194346,3.283180,-7.198954,-5.853622,-3.279645,-2.062835,-7.906395,6.913901,-3.250409,3.850830,-0.249164,-2.456406,-0.939123,-3.099095,0.902291,3.111544,-8.868692,-6.354916,8.288554,8.215959,5.531647,1.667255,-4.365404,-6.995806,-5.335714,6.138602,3.808754,-7.195393,-8.420870,-8.249156,-2.620414,7.841919,3.479906,1.156159,-8.615691,-2.898477,3.924487,-7.095946,-7.688973,-4.830771,-7.708084,-8.969530,5.931837,-3.936509,4.203508,4.129673,-9.211137,-8.133387,-1.577762,-3.358910,1.536286,5.171257,2.549797,-1.305419,-8.646950,-5.597341,-6.370893,-6.423522,9.526091,-8.762714,3.295006,-8.606954,-1.781574,0.024301,2.072451,-8.853233,2.463950,8.595698,0.852107,-8.091903,-1.700658,-2.713799,1.125726,-4.609497,4.774189,-5.267009,4.887077,1.318820,5.311368,-4.186977,-4.039716,4.110049,-6.194502,-9.791581,-1.818357,4.647120,3.960937,-3.323920,-5.314527,-3.082461,7.246721,0.819150,8.696228,-6.595407,3.433911,7.287411,5.085875,4.161146,2.971309,6.622869,4.082435,-3.625896,3.940999,1.817577,-8.320404,7.701557,-6.595672,-5.792457,6.488438,2.847272,9.085058,2.902288,9.731386,2.282260,-9.592378,3.596537,9.094748,6.529054,-0.214778,7.743553,-1.002061,-6.643684,3.017804,-6.909310,7.135084,6.272983,2.310336,-7.628263,-7.849746,5.886046,-2.200341,-0.099038,1.579930,-8.958311,-7.457312,-9.529294,5.797734,-5.305039,8.620687,0.786109,-4.933648,1.973093,5.064102,-9.616063,9.888814,6.417874,-2.114487,-8.447955,3.515966,2.491162,-1.015995,-7.443583,-7.284912,-7.469299,0.709114,2.572732,-0.234986,6.429037,-3.570452,9.266291,-5.111145,1.077411,-9.149423,-0.315334,8.461679,-0.367531,2.356266,9.955673,1.893685,0.940706,9.434138,-4.955726,0.189246,-6.783222,3.541702,-6.766913,-1.999174,7.916069,2.996070,-4.675431,5.105056,-6.239981,2.102031,4.333474,1.426650,1.778072,0.485723,-1.962291,-9.461555,-9.560125,7.940592,9.427445,-2.639567,-1.494570,-2.508445,-9.894563,6.526835,-5.746493,-9.775900,2.589353,-7.865694,5.933721,-2.944135,-7.677456,-2.987098,4.318108,4.476975,6.028110,4.299452,8.742955,-6.895712,0.795530,-6.578576,-9.596771,7.679918,-4.543313,-3.199407,0.616194,-1.399707,8.392855,-7.691192,-2.087177,0.162609,-1.892513,7.370646,-4.681902,2.314872,-9.134839,8.254988,7.856240,-1.008930,-7.479995,3.427046,-9.667035,-4.317336,-5.950007,-1.243431,-7.089142,-0.909244,-5.622351,7.094977,4.646270,-5.205125,-3.630433,-5.030183,2.570499,-5.489061,7.569544,2.066539,6.704692,-9.862532,1.633136,-8.043903,-9.552069,-0.740700,-4.301574,-3.595158,-1.233857,3.190540,-1.708109,-7.438263,1.770548,-9.602541,-0.384688,-4.574773,2.840192,6.091708,3.224397,-6.537375,-6.229143,-7.849209,-0.471643,-9.464303,9.718881,-6.275730,7.781987], dtype = "float32")#candidate|3674|(960,)|const|float32
call_3672 = relay.TupleGetItem(func_1301_call(relay.reshape(var_3673.astype('bool'), [3, 7, 16]), relay.reshape(const_3674.astype('float32'), [960,]), ), 2)
call_3675 = relay.TupleGetItem(func_1304_call(relay.reshape(var_3673.astype('bool'), [3, 7, 16]), relay.reshape(const_3674.astype('float32'), [960,]), ), 2)
output = relay.Tuple([bop_3648,call_3655,const_3656,call_3672,var_3673,const_3674,])
output2 = relay.Tuple([bop_3648,call_3657,const_3656,call_3675,var_3673,const_3674,])
func_3677 = relay.Function([var_3643,var_3673,], output)
mod['func_3677'] = func_3677
mod = relay.transform.InferType()(mod)
var_3678 = relay.var("var_3678", dtype = "float64", shape = (1, 8, 15))#candidate|3678|(1, 8, 15)|var|float64
var_3679 = relay.var("var_3679", dtype = "bool", shape = (168, 2))#candidate|3679|(168, 2)|var|bool
output = func_3677(var_3678,var_3679,)
func_3680 = relay.Function([var_3678,var_3679,], output)
mutated_mod['func_3680'] = func_3680
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3696 = relay.var("var_3696", dtype = "float64", shape = (10, 13, 1))#candidate|3696|(10, 13, 1)|var|float64
uop_3697 = relay.sinh(var_3696.astype('float64')) # shape=(10, 13, 1)
bop_3701 = relay.maximum(var_3696.astype('uint8'), relay.reshape(uop_3697.astype('uint8'), relay.shape_of(var_3696))) # shape=(10, 13, 1)
bop_3715 = relay.power(bop_3701.astype('float32'), relay.reshape(uop_3697.astype('float32'), relay.shape_of(bop_3701))) # shape=(10, 13, 1)
uop_3723 = relay.acos(uop_3697.astype('float32')) # shape=(10, 13, 1)
output = relay.Tuple([bop_3715,uop_3723,])
output2 = relay.Tuple([bop_3715,uop_3723,])
func_3725 = relay.Function([var_3696,], output)
mod['func_3725'] = func_3725
mod = relay.transform.InferType()(mod)
mutated_mod['func_3725'] = func_3725
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3726 = relay.var("var_3726", dtype = "float64", shape = (10, 13, 1))#candidate|3726|(10, 13, 1)|var|float64
func_3725_call = mutated_mod.get_global_var('func_3725')
call_3727 = func_3725_call(var_3726)
output = call_3727
func_3728 = relay.Function([var_3726], output)
mutated_mod['func_3728'] = func_3728
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3771 = relay.const([[[9,-4,-2,5,-1,-1,9,3,-5,4,-9],[-2,-8,5,3,-1,-5,-9,-1,-4,9,3]],[[5,-5,6,-8,-6,7,3,-3,1,-3,8],[-3,4,1,1,5,-3,8,-10,4,9,1]],[[3,-10,-7,-1,5,-5,-9,4,4,10,10],[7,-8,-7,2,1,-3,10,-6,-6,-4,9]],[[9,7,-3,-1,7,-2,-8,-2,-10,-6,3],[-2,8,9,-8,7,-2,-3,1,7,-3,-3]],[[-1,-1,-7,1,-4,1,10,4,-10,7,5],[-8,-7,6,-5,1,3,6,-1,-2,-9,-7]],[[-4,-7,3,-6,-6,-7,-9,-3,2,-10,-7],[5,-1,-5,9,-9,4,-7,8,5,6,-6]],[[-5,-9,2,1,4,-1,4,-7,-9,-8,-10],[10,-6,3,7,9,8,-10,-7,-2,-9,-10]],[[-9,8,3,1,-8,-5,-5,8,-10,5,-5],[8,6,-7,-3,9,-3,-9,10,-4,-10,5]],[[-9,-9,-2,-7,-9,-10,-7,1,-3,-3,7],[5,-4,8,-7,-1,-5,-5,5,5,7,3]],[[4,3,6,4,-9,-3,-5,7,3,8,8],[-7,3,1,9,3,9,1,-5,-1,1,5]],[[4,-9,10,4,-1,3,5,4,-7,9,7],[3,4,-6,5,-2,5,-5,9,3,2,-3]],[[-9,3,8,-1,-2,6,-8,1,-6,-4,4],[-6,-1,-2,4,-2,-4,10,-8,8,-5,4]]], dtype = "int8")#candidate|3771|(12, 2, 11)|const|int8
var_3772 = relay.var("var_3772", dtype = "int8", shape = (12, 2, 11))#candidate|3772|(12, 2, 11)|var|int8
bop_3773 = relay.subtract(const_3771.astype('int8'), relay.reshape(var_3772.astype('int8'), relay.shape_of(const_3771))) # shape=(12, 2, 11)
func_3129_call = mod.get_global_var('func_3129')
func_3131_call = mutated_mod.get_global_var('func_3131')
var_3780 = relay.var("var_3780", dtype = "uint16", shape = (1, 45))#candidate|3780|(1, 45)|var|uint16
call_3779 = relay.TupleGetItem(func_3129_call(relay.reshape(var_3780.astype('uint16'), [5, 9, 1])), 0)
call_3781 = relay.TupleGetItem(func_3131_call(relay.reshape(var_3780.astype('uint16'), [5, 9, 1])), 0)
func_1763_call = mod.get_global_var('func_1763')
func_1766_call = mutated_mod.get_global_var('func_1766')
var_3785 = relay.var("var_3785", dtype = "int64", shape = (392, 4))#candidate|3785|(392, 4)|var|int64
call_3784 = relay.TupleGetItem(func_1763_call(relay.reshape(var_3785.astype('int64'), [2, 784])), 2)
call_3786 = relay.TupleGetItem(func_1766_call(relay.reshape(var_3785.astype('int64'), [2, 784])), 2)
func_1541_call = mod.get_global_var('func_1541')
func_1545_call = mutated_mod.get_global_var('func_1545')
call_3795 = relay.TupleGetItem(func_1541_call(relay.reshape(call_3784.astype('int64'), [7, 14, 16]), relay.reshape(call_3784.astype('int64'), [7, 14, 16]), ), 1)
call_3796 = relay.TupleGetItem(func_1545_call(relay.reshape(call_3784.astype('int64'), [7, 14, 16]), relay.reshape(call_3784.astype('int64'), [7, 14, 16]), ), 1)
func_2597_call = mod.get_global_var('func_2597')
func_2601_call = mutated_mod.get_global_var('func_2601')
const_3798 = relay.const([-0.795413,-5.520598,-4.306902,-3.492071,5.119298,-1.729149,-6.350459,2.715695,-4.826152,-1.926417,-7.883880,-2.806069,-8.065376,9.612397,-0.716603,-0.576962,3.383929,5.864246,3.075195,0.044127,-6.658384,-3.405825,7.373835,6.012795,4.597579,-4.378633,-3.628186,0.815953,-6.146090,-3.995527], dtype = "float32")#candidate|3798|(30,)|const|float32
const_3799 = relay.const([-9.713957,-9.741198,6.285979,-9.625460,9.972797,-7.659488,-8.426561,4.847231,-9.685224,9.588685,-5.396534,3.517401,1.686805,3.863068,-0.719390,7.184009,0.351002,-4.301518,-5.861720,-2.395585,-5.361582,-0.296568,-9.931966,-6.904197,1.692064,4.089119,-7.273735,8.437282,0.630358,5.460991,-3.710687,-6.761716,-2.005530,-9.221529,4.475698,8.333009,5.141247,-0.873320,5.552103,-7.881622,-0.913229,-5.713541,-1.721598,-3.854092,-6.901446,-9.214259,9.053675,-8.537415,8.305662,-2.002319,6.320231,-8.633471,5.512151,6.270351,-4.959148,2.646194,9.498312,3.193449,9.822395,8.563781], dtype = "float32")#candidate|3799|(60,)|const|float32
call_3797 = relay.TupleGetItem(func_2597_call(relay.reshape(const_3798.astype('float32'), [15, 1, 2]), relay.reshape(const_3799.astype('float32'), [15, 2, 2]), ), 0)
call_3800 = relay.TupleGetItem(func_2601_call(relay.reshape(const_3798.astype('float32'), [15, 1, 2]), relay.reshape(const_3799.astype('float32'), [15, 2, 2]), ), 0)
var_3805 = relay.var("var_3805", dtype = "bool", shape = (8, 11, 10))#candidate|3805|(8, 11, 10)|var|bool
bop_3806 = relay.left_shift(call_3795.astype('int8'), relay.reshape(var_3805.astype('int8'), relay.shape_of(call_3795))) # shape=(8, 11, 10)
bop_3809 = relay.left_shift(call_3796.astype('int8'), relay.reshape(var_3805.astype('int8'), relay.shape_of(call_3796))) # shape=(8, 11, 10)
func_2914_call = mod.get_global_var('func_2914')
func_2919_call = mutated_mod.get_global_var('func_2919')
var_3815 = relay.var("var_3815", dtype = "bool", shape = (728,))#candidate|3815|(728,)|var|bool
var_3816 = relay.var("var_3816", dtype = "float32", shape = (960,))#candidate|3816|(960,)|var|float32
const_3817 = relay.const([3,2,-8,9,5,4,3,-6,-1,7,-10,2,6,7,1,9,-3,7,-8,-7,8,-3,-7,-7,7,-2,-3,-10,-8,-10,8,2,-2,5,9,-5,3,-7,-6,-1,-8,-2,9,-9,9,-5,-1,-10,-10,-3,5,6,-5,-2,-7,5,-6,-10,7,2,-1,2,-8,6,-7,6,8,-2,3,5,-7,-9,7,9,-9,9,10,3,-6,-5,-10,5,-1,3,10,-7,-8,1,-6,-9,-1,-6,-2,8,-9,-10,-4,-9,3,10,-9,2,3,-3,2,-3,-10,6,7,-9,9,-7,4,9,-9,-1,-5,-6,-4,7,-10,-1,-1,-2,10,-7,3,-3,2,-4,-8,9,-8,4,-5,2,-3,-8,9,-7,3,10,-9,-3,-3,-4,-4,8,2,-7,-3,4,1,2,-2,-1,-4,3,3,6,2,1,-3,-9,-9,1,3,-9,7,-6,-2,-8,-7,-10,6,10,-6,-6,-10,-3,1,-4,-9,-1,-6,-7,-2,-7,-5,-3,2,9,-6,6,-9,-6,1,5,5,-8,2,1,10,7,6,-4,-3,6,-9,-5,1,1,5,4,3,-1,7,1,2,3,-5,-6,-4,-10,-5,3,10,10,1,5,5,-9,10,4,-7,7,5,-2,6,-4,-9,-8,3,4,1,-8,-5,-1,-8,-6,1,8,-9,-9,-6,-7,-1,6,3,8,9,-10,-4,9,7,10,1,8,-10,-4,-9,1,-3,4,7,10,7,-10,5,6,7,4,3,7,-8,-10,-9,8,6,-10,3,8,-3,2,10,-2,3,-6,-5,-8,3,1,-8,7,-1,8,-10,4,7,-1,-6,-5,-6,-3,-5,5,10,-1,7,4,-7,-3,-1,8,5,-6,-10,-9,-1,9,-7,3,10,-8,1,6,8,-3,-8,-6,10,-5,-2,-9,9,10,-2,-5,-6,1,9,-5], dtype = "int64")#candidate|3817|(352,)|const|int64
call_3814 = relay.TupleGetItem(func_2914_call(relay.reshape(var_3815.astype('bool'), [14, 13, 4]), relay.reshape(var_3815.astype('bool'), [14, 13, 4]), relay.reshape(var_3816.astype('float32'), [120, 8]), relay.reshape(const_3817.astype('int64'), [2, 176]), ), 1)
call_3818 = relay.TupleGetItem(func_2919_call(relay.reshape(var_3815.astype('bool'), [14, 13, 4]), relay.reshape(var_3815.astype('bool'), [14, 13, 4]), relay.reshape(var_3816.astype('float32'), [120, 8]), relay.reshape(const_3817.astype('int64'), [2, 176]), ), 1)
output = relay.Tuple([bop_3773,call_3779,var_3780,call_3784,var_3785,call_3797,const_3798,const_3799,bop_3806,call_3814,var_3815,var_3816,const_3817,])
output2 = relay.Tuple([bop_3773,call_3781,var_3780,call_3786,var_3785,call_3800,const_3798,const_3799,bop_3809,call_3818,var_3815,var_3816,const_3817,])
func_3826 = relay.Function([var_3772,var_3780,var_3785,var_3805,var_3815,var_3816,], output)
mod['func_3826'] = func_3826
mod = relay.transform.InferType()(mod)
mutated_mod['func_3826'] = func_3826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3826_call = mutated_mod.get_global_var('func_3826')
var_3828 = relay.var("var_3828", dtype = "int8", shape = (12, 2, 11))#candidate|3828|(12, 2, 11)|var|int8
var_3829 = relay.var("var_3829", dtype = "uint16", shape = (1, 45))#candidate|3829|(1, 45)|var|uint16
var_3830 = relay.var("var_3830", dtype = "int64", shape = (392, 4))#candidate|3830|(392, 4)|var|int64
var_3831 = relay.var("var_3831", dtype = "bool", shape = (8, 11, 10))#candidate|3831|(8, 11, 10)|var|bool
var_3832 = relay.var("var_3832", dtype = "bool", shape = (728,))#candidate|3832|(728,)|var|bool
var_3833 = relay.var("var_3833", dtype = "float32", shape = (960,))#candidate|3833|(960,)|var|float32
call_3827 = func_3826_call(var_3828,var_3829,var_3830,var_3831,var_3832,var_3833,)
output = call_3827
func_3834 = relay.Function([var_3828,var_3829,var_3830,var_3831,var_3832,var_3833,], output)
mutated_mod['func_3834'] = func_3834
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4139 = relay.var("var_4139", dtype = "float64", shape = (7, 4, 9))#candidate|4139|(7, 4, 9)|var|float64
const_4140 = relay.const([[[-8.189691,-2.706246,-5.884309,0.573643,6.094138,-9.752491,9.039087,6.737286,8.718709],[8.965445,-7.523201,-1.568154,7.970389,-9.742276,-4.674280,2.152314,-1.355792,4.201624],[6.709576,-8.431765,5.927900,3.189929,1.704585,7.685814,6.992114,-1.006112,4.214102],[-7.577512,-4.288475,-8.761274,3.331533,-5.149607,1.225841,-3.786487,-4.577483,2.727967]],[[9.139935,-7.577045,9.493793,-8.395062,-1.837203,-9.233727,1.792378,-2.526499,-6.043385],[-4.045128,-9.625290,3.550308,-3.981568,3.818060,-3.582666,-7.946581,1.225562,-3.078578],[7.983156,1.102019,-3.383136,2.985331,-4.531851,2.305138,6.430489,-8.145261,-6.698901],[2.920802,-1.440506,8.910280,-7.774596,-9.277850,-7.313048,-3.789914,8.632349,7.649702]],[[-6.525146,9.317734,-0.040501,8.355500,-9.596815,-5.921199,0.582653,6.251398,-4.252961],[7.675329,5.953008,-5.812775,-2.929108,8.920619,-0.229048,3.366690,5.338375,3.120549],[-8.522037,3.759878,4.523887,1.179792,-1.988014,-5.180906,-1.808256,3.687753,6.036346],[1.410022,-7.957551,-2.579511,-4.315292,2.735294,-9.277870,9.942409,0.485261,-9.455215]],[[-6.293285,-1.747056,-7.800741,6.984486,-3.376302,-3.655631,-2.446785,5.123108,-9.512134],[2.774863,-1.334181,2.050427,-4.416951,5.934511,3.589157,-9.363631,4.826625,-0.763250],[5.667296,-5.197465,-3.629567,8.562308,3.455528,-5.407374,-5.638982,-5.423542,-0.046614],[-8.265464,-5.878680,5.524909,7.033609,-0.808395,-2.488926,-1.226173,-3.507908,6.246700]],[[-6.501677,-5.606548,0.826707,0.209343,-6.676136,-4.291675,6.114324,7.641953,-6.308938],[-6.953232,-3.356868,6.159024,1.722451,-1.318669,-1.122950,3.793907,4.841926,-0.362462],[-2.162622,-8.405181,7.747616,4.016113,9.606136,2.765024,9.147131,1.027373,-3.755109],[-5.128886,2.786922,8.813565,-7.996008,-7.564767,-5.652014,7.831929,-2.125312,-0.800786]],[[-7.711782,3.550036,-8.493827,-5.766480,-0.608594,-9.393403,-5.012851,-2.339449,7.847681],[9.534222,-4.171200,8.234584,2.799242,3.287042,4.750886,3.313524,-5.325139,3.613856],[5.290855,-1.483295,-7.476247,-2.244044,-7.406714,-6.214657,1.404584,6.244516,1.285239],[-7.743826,9.630152,-0.831553,7.357458,6.439789,-9.324316,6.307953,-9.694326,6.415556]],[[-8.121709,3.066965,4.472539,-3.300483,6.638459,-7.155898,9.876875,6.218574,3.481748],[0.446953,-8.233675,-1.169278,0.542110,-5.408855,4.497923,-8.238641,-7.268589,-5.135630],[0.426360,-7.771757,8.616381,3.885826,8.123220,3.597810,0.162720,-9.795991,1.607368],[-8.244547,-2.226548,-2.391317,8.889649,7.455881,-7.152224,1.287307,-5.269746,1.652320]]], dtype = "float64")#candidate|4140|(7, 4, 9)|const|float64
bop_4141 = relay.floor_mod(var_4139.astype('float64'), relay.reshape(const_4140.astype('float64'), relay.shape_of(var_4139))) # shape=(7, 4, 9)
output = relay.Tuple([bop_4141,])
output2 = relay.Tuple([bop_4141,])
func_4158 = relay.Function([var_4139,], output)
mod['func_4158'] = func_4158
mod = relay.transform.InferType()(mod)
var_4159 = relay.var("var_4159", dtype = "float64", shape = (7, 4, 9))#candidate|4159|(7, 4, 9)|var|float64
output = func_4158(var_4159)
func_4160 = relay.Function([var_4159], output)
mutated_mod['func_4160'] = func_4160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4173 = relay.var("var_4173", dtype = "uint32", shape = (10, 5, 9))#candidate|4173|(10, 5, 9)|var|uint32
const_4174 = relay.const([[[-3,-5,-5,-6,6,-6,-8,-6,6],[8,-6,3,-8,6,-9,7,-7,-5],[-5,-7,-1,-2,8,7,7,4,-10],[3,3,7,-4,-4,-7,5,9,3],[-7,-10,4,-8,5,-4,8,6,9]],[[-3,-6,-5,-7,-4,-4,-10,-3,-5],[10,-6,5,1,-1,5,10,2,7],[8,-8,4,-7,-3,5,-7,-1,-9],[5,2,-8,-6,6,-4,-3,-1,-3],[5,9,2,3,-8,-2,-3,-10,-3]],[[-3,-5,-6,4,-1,2,-1,-4,4],[6,-5,4,-3,6,-1,2,-9,4],[7,-7,-4,10,8,6,2,-1,-8],[4,-3,5,-9,-9,5,6,-1,10],[-1,-1,-6,1,8,-5,-7,8,-1]],[[-4,-1,1,-4,9,7,3,10,7],[10,4,-7,6,9,-4,10,-1,8],[-8,8,-2,-7,-4,-8,2,10,7],[6,3,-1,6,-2,-4,-10,7,-2],[-4,3,-7,-1,-10,-7,-8,2,8]],[[6,-7,-2,3,7,-9,-10,-7,1],[5,-3,2,-1,2,-10,1,6,-8],[-10,10,10,6,4,-4,-9,8,-1],[-3,9,-8,-8,8,-6,4,-7,3],[6,9,5,5,-2,6,-3,6,4]],[[2,-10,6,7,1,-4,3,-4,-10],[-6,4,7,-1,-9,-2,-10,7,-7],[5,-4,-7,-3,-10,3,-7,-6,6],[1,6,4,-4,-4,-4,7,6,10],[-2,4,-9,4,7,-4,-5,-2,-6]],[[-1,-3,-5,-8,10,6,7,-10,-1],[-9,4,-9,3,-5,7,3,4,-2],[5,-1,-2,-3,-6,10,-2,6,-9],[6,9,6,5,-3,-7,9,-3,-7],[9,3,-6,5,-6,-6,4,-6,5]],[[10,-3,-10,5,4,-10,-2,4,-6],[-2,8,10,2,6,-10,2,-3,-10],[-5,10,5,-2,-1,-4,-5,-6,4],[-7,-1,-4,5,10,1,9,-4,-7],[1,8,4,-8,8,-1,1,9,-10]],[[4,1,3,1,7,-5,8,2,9],[-8,6,-1,8,-5,-6,4,-2,2],[-4,-1,2,-7,-1,6,6,5,10],[9,1,-7,-8,-7,-5,-8,-5,1],[-3,10,9,4,-10,7,8,-7,7]],[[6,-4,-8,5,9,-4,-9,-1,3],[-5,-5,-7,-2,-6,3,-3,-1,-3],[8,-4,8,-9,7,4,-10,-6,-3],[-5,7,3,9,9,5,-10,10,3],[-3,4,2,9,-8,-7,9,5,-7]]], dtype = "uint32")#candidate|4174|(10, 5, 9)|const|uint32
bop_4175 = relay.add(var_4173.astype('uint32'), relay.reshape(const_4174.astype('uint32'), relay.shape_of(var_4173))) # shape=(10, 5, 9)
var_4186 = relay.var("var_4186", dtype = "uint32", shape = (10, 5, 9))#candidate|4186|(10, 5, 9)|var|uint32
bop_4187 = relay.greater_equal(bop_4175.astype('bool'), relay.reshape(var_4186.astype('bool'), relay.shape_of(bop_4175))) # shape=(10, 5, 9)
output = relay.Tuple([bop_4187,])
output2 = relay.Tuple([bop_4187,])
func_4194 = relay.Function([var_4173,var_4186,], output)
mod['func_4194'] = func_4194
mod = relay.transform.InferType()(mod)
var_4195 = relay.var("var_4195", dtype = "uint32", shape = (10, 5, 9))#candidate|4195|(10, 5, 9)|var|uint32
var_4196 = relay.var("var_4196", dtype = "uint32", shape = (10, 5, 9))#candidate|4196|(10, 5, 9)|var|uint32
output = func_4194(var_4195,var_4196,)
func_4197 = relay.Function([var_4195,var_4196,], output)
mutated_mod['func_4197'] = func_4197
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4259 = relay.var("var_4259", dtype = "float64", shape = (2, 12, 15))#candidate|4259|(2, 12, 15)|var|float64
uop_4260 = relay.asin(var_4259.astype('float64')) # shape=(2, 12, 15)
func_3677_call = mod.get_global_var('func_3677')
func_3680_call = mutated_mod.get_global_var('func_3680')
var_4264 = relay.var("var_4264", dtype = "float64", shape = (120, 1))#candidate|4264|(120, 1)|var|float64
var_4265 = relay.var("var_4265", dtype = "bool", shape = (336,))#candidate|4265|(336,)|var|bool
call_4263 = relay.TupleGetItem(func_3677_call(relay.reshape(var_4264.astype('float64'), [1, 8, 15]), relay.reshape(var_4265.astype('bool'), [168, 2]), ), 3)
call_4266 = relay.TupleGetItem(func_3680_call(relay.reshape(var_4264.astype('float64'), [1, 8, 15]), relay.reshape(var_4265.astype('bool'), [168, 2]), ), 3)
func_2597_call = mod.get_global_var('func_2597')
func_2601_call = mutated_mod.get_global_var('func_2601')
var_4281 = relay.var("var_4281", dtype = "float32", shape = (30,))#candidate|4281|(30,)|var|float32
const_4282 = relay.const([-6.534713,-9.641209,-4.757367,-2.268962,-5.809911,-0.214425,3.171978,1.417218,0.145750,8.727651,-9.922214,4.209611,3.875956,-9.370991,6.695352,9.250173,-2.898381,-8.663853,4.028463,-9.471390,0.018746,1.395242,5.145154,-3.701979,-0.320981,-2.282697,9.168278,0.240547,-9.256745,7.318371,6.736736,5.922612,-7.891691,-3.508391,3.441718,6.678105,-4.165327,8.761446,-4.989094,-1.998913,4.438248,2.745243,-1.432379,7.199824,-5.943061,-0.136127,6.346289,0.691211,-8.015483,2.694947,3.380816,-5.406726,-3.270999,4.677399,4.133697,7.880912,-9.622366,-5.508933,0.108286,-4.120911], dtype = "float32")#candidate|4282|(60,)|const|float32
call_4280 = relay.TupleGetItem(func_2597_call(relay.reshape(var_4281.astype('float32'), [15, 1, 2]), relay.reshape(const_4282.astype('float32'), [15, 2, 2]), ), 0)
call_4283 = relay.TupleGetItem(func_2601_call(relay.reshape(var_4281.astype('float32'), [15, 1, 2]), relay.reshape(const_4282.astype('float32'), [15, 2, 2]), ), 0)
uop_4289 = relay.exp(uop_4260.astype('float32')) # shape=(2, 12, 15)
var_4296 = relay.var("var_4296", dtype = "float32", shape = (2, 12, 15))#candidate|4296|(2, 12, 15)|var|float32
bop_4297 = relay.logical_and(uop_4289.astype('bool'), relay.reshape(var_4296.astype('bool'), relay.shape_of(uop_4289))) # shape=(2, 12, 15)
func_3826_call = mod.get_global_var('func_3826')
func_3834_call = mutated_mod.get_global_var('func_3834')
const_4308 = relay.const([6,9,2,-4,-10,-5,-7,10,7,-2,-5,-3,4,5,5,-10,-7,4,-9,-6,3,7,-10,1,2,10,-4,10,-8,2,6,-4,-2,-2,-7,10,-4,10,-6,1,-6,-9,-5,2,5,-7,-7,4,1,2,6,8,9,-4,-8,-4,8,-7,-2,6,-3,10,6,-1,2,7,-3,10,2,8,-8,4,-8,1,-10,-9,2,4,5,-8,-7,7,-9,-4,10,1,-6,6,-8,4,-5,-2,2,8,-1,6,-1,-10,9,-1,7,7,-9,-7,-1,6,4,5,-3,-5,1,-2,4,3,5,-2,-8,-6,-3,7,-4,10,-10,-3,-9,-7,10,3,1,-7,1,-9,-10,9,9,-9,-6,8,5,-1,10,7,7,-3,-5,7,2,7,2,-7,-10,4,7,-4,-3,-9,2,2,3,10,-6,3,2,9,-6,6,5,1,-2,-4,-1,8,6,-5,-3,-8,1,-6,3,-8,6,-4,6,10,-2,2,5,9,10,-2,-8,-4,4,-3,-7,-4,8,1,3,9,8,-1,1,-6,-1,-4,1,-9,7,-1,-4,7,-5,4,-2,5,6,2,-5,6,9,6,-7,-4,-6,9,10,-4,4,4,2,-5,5,-4,6,-6,-2,-4,7,5,2,5,-2,8,-6,-4,-2,-7,-6,5,2,6,6,-7,7,8,8,1,2,-5,-2,9,8,10], dtype = "int8")#candidate|4308|(264,)|const|int8
var_4309 = relay.var("var_4309", dtype = "uint16", shape = (45,))#candidate|4309|(45,)|var|uint16
var_4310 = relay.var("var_4310", dtype = "int64", shape = (1568,))#candidate|4310|(1568,)|var|int64
const_4311 = relay.const([True,True,True,True,False,True,True,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,True,False,False,True,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,True,False,False,False,False,True,False,False,False,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,False,False,False,False,False,False,True,True,False,True,False,True,False,True,False,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False,True,False,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,True,False,True,False,True,True,True,False,False,True,False,True,True,False,False,False,True,False,False,False,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,True,False,False,True,True,False,True,True,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,True,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,False,True,False,False,True,True,False,False,False,False,True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True,True,False,False,False,False], dtype = "bool")#candidate|4311|(880,)|const|bool
const_4312 = relay.const([False,False,False,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True,False,False,False,False,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,True,True,True,True,True,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,False,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,False,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,False,True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,False,False,True,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,True,True,True,False,False,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,False,False,True,False,True,True,True,True,False,True,True,True,False,False,True,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,False,True,False,True], dtype = "bool")#candidate|4312|(728,)|const|bool
call_4307 = relay.TupleGetItem(func_3826_call(relay.reshape(const_4308.astype('int8'), [12, 2, 11]), relay.reshape(var_4309.astype('uint16'), [1, 45]), relay.reshape(var_4310.astype('int64'), [392, 4]), relay.reshape(const_4311.astype('bool'), [8, 11, 10]), relay.reshape(const_4312.astype('bool'), [728,]), relay.reshape(call_4263.astype('float32'), [960,]), ), 12)
call_4313 = relay.TupleGetItem(func_3834_call(relay.reshape(const_4308.astype('int8'), [12, 2, 11]), relay.reshape(var_4309.astype('uint16'), [1, 45]), relay.reshape(var_4310.astype('int64'), [392, 4]), relay.reshape(const_4311.astype('bool'), [8, 11, 10]), relay.reshape(const_4312.astype('bool'), [728,]), relay.reshape(call_4263.astype('float32'), [960,]), ), 12)
bop_4319 = relay.less(bop_4297.astype('bool'), relay.reshape(uop_4260.astype('bool'), relay.shape_of(bop_4297))) # shape=(2, 12, 15)
bop_4326 = relay.multiply(bop_4319.astype('int8'), relay.reshape(bop_4297.astype('int8'), relay.shape_of(bop_4319))) # shape=(2, 12, 15)
func_54_call = mod.get_global_var('func_54')
func_56_call = mutated_mod.get_global_var('func_56')
var_4330 = relay.var("var_4330", dtype = "float32", shape = (18,))#candidate|4330|(18,)|var|float32
call_4329 = relay.TupleGetItem(func_54_call(relay.reshape(var_4330.astype('float32'), [9, 2, 1])), 1)
call_4331 = relay.TupleGetItem(func_56_call(relay.reshape(var_4330.astype('float32'), [9, 2, 1])), 1)
bop_4334 = relay.minimum(uop_4260.astype('uint64'), relay.reshape(var_4259.astype('uint64'), relay.shape_of(uop_4260))) # shape=(2, 12, 15)
uop_4341 = relay.atan(bop_4326.astype('float32')) # shape=(2, 12, 15)
output = relay.Tuple([call_4263,var_4264,var_4265,call_4280,var_4281,const_4282,call_4307,const_4308,var_4309,var_4310,const_4311,const_4312,call_4329,var_4330,bop_4334,uop_4341,])
output2 = relay.Tuple([call_4266,var_4264,var_4265,call_4283,var_4281,const_4282,call_4313,const_4308,var_4309,var_4310,const_4311,const_4312,call_4331,var_4330,bop_4334,uop_4341,])
func_4343 = relay.Function([var_4259,var_4264,var_4265,var_4281,var_4296,var_4309,var_4310,var_4330,], output)
mod['func_4343'] = func_4343
mod = relay.transform.InferType()(mod)
var_4344 = relay.var("var_4344", dtype = "float64", shape = (2, 12, 15))#candidate|4344|(2, 12, 15)|var|float64
var_4345 = relay.var("var_4345", dtype = "float64", shape = (120, 1))#candidate|4345|(120, 1)|var|float64
var_4346 = relay.var("var_4346", dtype = "bool", shape = (336,))#candidate|4346|(336,)|var|bool
var_4347 = relay.var("var_4347", dtype = "float32", shape = (30,))#candidate|4347|(30,)|var|float32
var_4348 = relay.var("var_4348", dtype = "float32", shape = (2, 12, 15))#candidate|4348|(2, 12, 15)|var|float32
var_4349 = relay.var("var_4349", dtype = "uint16", shape = (45,))#candidate|4349|(45,)|var|uint16
var_4350 = relay.var("var_4350", dtype = "int64", shape = (1568,))#candidate|4350|(1568,)|var|int64
var_4351 = relay.var("var_4351", dtype = "float32", shape = (18,))#candidate|4351|(18,)|var|float32
output = func_4343(var_4344,var_4345,var_4346,var_4347,var_4348,var_4349,var_4350,var_4351,)
func_4352 = relay.Function([var_4344,var_4345,var_4346,var_4347,var_4348,var_4349,var_4350,var_4351,], output)
mutated_mod['func_4352'] = func_4352
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4697 = relay.const([[[-3.979454,-6.672150,-7.945717,3.120003,5.061201,-0.232682,6.627214,3.364855,-2.921860,-9.894110],[7.837533,9.211835,-7.217380,-8.902563,-1.554801,3.366260,-5.914699,-1.398758,5.321153,-1.973711],[-3.758662,5.761036,1.015915,9.033589,4.102377,6.386899,-4.539184,1.524403,2.607407,-1.611558],[-7.482902,-4.826569,2.338894,6.328374,-0.422717,-9.367049,-3.741130,9.678884,-6.460144,1.644608],[-3.599251,-7.133812,-7.972703,2.017447,0.878735,0.786494,5.028624,-4.828872,-7.878661,-4.092010],[-8.600482,5.973440,-0.646975,-7.790912,-9.950271,-5.398943,-0.319825,8.770819,5.396562,2.668148],[-5.133769,-0.940957,-9.107812,5.823345,-3.868385,-4.725716,-2.800048,-4.398358,-4.241689,9.743869],[-0.389005,6.160309,-1.539333,5.455106,-5.183576,1.952502,2.886000,-6.313548,-9.686421,9.481965],[8.232117,4.855703,5.749960,-0.386542,-4.610584,-5.055640,-0.230224,-1.318852,5.137174,-2.371638],[-0.687205,-4.955889,9.080177,8.547500,-4.201098,-8.494667,-8.223898,6.479208,5.174741,2.376895],[8.496293,2.503922,-3.348388,2.355865,5.605561,7.984434,6.201965,-8.859132,-1.668994,-0.588980],[-4.752074,2.700007,6.625993,-2.389421,-4.623815,-7.323474,-2.080750,3.504904,4.448576,-1.801034],[-7.374733,-9.891146,3.934770,-9.659972,2.592086,1.904693,-3.053781,-8.670291,9.231052,-4.217521]],[[1.658464,-0.588124,-7.468495,-5.511041,-4.320425,0.585042,-1.554109,-2.346376,-9.342375,2.642528],[8.793471,0.062020,3.195744,7.927204,-0.439700,1.549628,3.973991,1.795340,8.781659,8.241619],[-9.240408,0.663985,4.806939,2.377568,-3.883783,8.529504,0.838765,7.735331,-0.860425,3.687666],[0.098337,-5.649656,-8.938988,-9.867504,3.770928,4.722212,-0.050290,-8.593224,-5.627227,9.064254],[2.531992,6.244404,5.800958,6.848412,5.017455,2.027449,4.007269,1.703428,6.202590,-0.403746],[-0.657705,6.134003,-7.010739,-2.480958,0.712488,5.726744,-2.064302,8.651931,-2.008967,4.042918],[2.996926,-9.357604,4.162664,0.554278,2.130219,7.085122,3.268620,2.258973,8.319440,3.754409],[6.015811,3.607933,1.501024,-6.452250,9.615104,6.162830,-6.436137,-6.519116,-1.224506,-9.256555],[2.464705,1.377655,-4.976769,-1.065369,-2.702207,-9.068572,-3.433657,5.089618,-6.869636,3.470581],[4.000203,8.839548,-3.085739,9.541871,5.926182,9.287999,-5.902706,1.328351,6.483060,-0.861675],[1.441178,2.589838,-1.590844,3.929612,-1.250572,-5.598399,-3.124914,8.330171,8.620385,8.837214],[7.990300,4.995340,9.318375,-9.004541,-6.176160,-5.327488,-6.681514,-0.198403,-9.738405,8.462102],[-5.242623,-6.139076,9.659216,-1.003625,9.885857,2.141397,-8.520569,-3.648209,-6.973086,-9.890736]],[[0.801986,-8.120281,-6.528671,-4.923235,9.731269,-0.604225,8.716060,-0.290592,-6.725910,-5.671174],[-8.745600,-0.910086,-6.438929,-1.586719,-8.007983,-7.265783,4.271035,9.033050,6.922405,-1.475825],[1.890663,-3.542178,3.778708,-8.307228,0.966627,8.694815,-5.809676,-1.245068,-7.089612,1.001468],[9.512000,-2.783721,5.584552,7.173633,6.242401,7.458982,-5.423424,-9.647879,-0.510404,5.941655],[0.282235,7.482343,5.813161,-8.747468,-7.670460,-1.734724,1.918764,-1.351066,-7.866379,0.394871],[9.588020,-8.388282,7.260687,9.539907,6.198642,2.726879,-6.732614,8.425071,9.591003,5.964551],[8.348636,7.910310,9.971383,9.650375,4.573641,4.691434,0.432220,-1.349873,-7.069680,-5.972770],[6.162453,-5.066358,-4.187130,0.117337,-7.848352,1.934564,-2.470720,-7.738554,-7.427662,5.713880],[3.836937,-3.790872,-6.896965,6.296031,0.913637,4.624310,3.222811,-2.338393,6.147209,0.156908],[-3.784027,4.498352,-2.035219,-3.720240,-3.551137,-5.127758,7.551362,-6.829539,-3.631839,-6.949397],[-6.017748,-2.891502,-1.155927,1.015682,-4.847130,9.177660,-8.753512,4.131612,-7.745585,8.986022],[3.838436,-3.617820,7.466337,-0.589408,-9.289531,5.395507,-5.264159,4.374545,-3.684605,-8.174248],[3.223218,5.622633,5.590273,-7.505258,2.100904,-9.041501,-9.481611,5.542763,2.808333,3.693007]],[[-9.870388,-2.663743,-4.616810,1.921652,6.530229,1.724417,8.015784,-6.726923,3.871419,1.029766],[-3.335910,3.714063,-8.006735,-4.558288,-1.177633,-5.836417,-9.855059,-4.781538,-9.635045,3.453420],[1.426470,-8.654728,-9.860238,8.814755,-3.149427,-3.214556,-3.156694,6.526113,-3.817543,4.523508],[7.047479,7.291788,-5.597105,-2.311655,-1.963582,-7.561931,-6.445820,-0.183517,4.107018,-2.016041],[-5.499404,9.608947,-8.123424,-9.298567,-4.634402,7.162865,7.047341,-8.461483,-7.962290,-3.549557],[-1.443671,8.697638,0.772074,2.224268,6.434311,-4.909295,-7.307399,7.749377,-5.840590,4.224238],[3.825851,-8.575295,-7.416482,-7.925990,5.628888,1.336858,-8.482513,-0.855100,-2.491355,-4.365137],[9.820153,-2.613721,-4.217957,-3.371383,0.235986,-3.040551,1.428415,2.939288,1.703294,-7.826370],[-1.406050,-9.533722,-6.142978,-9.341941,2.878437,9.666583,-6.000533,-3.723205,5.107683,1.103641],[2.663822,5.481604,5.244136,-4.303438,-7.542310,6.445224,-2.648435,1.755854,0.012083,1.363650],[5.213401,1.986825,-8.933293,-4.559014,4.909090,-4.599542,9.297334,8.950986,-4.755922,6.767620],[-7.752708,8.227150,1.576616,-2.459163,7.462949,1.728053,-4.336506,-6.957106,-2.893547,-1.902418],[-0.865041,-2.565691,-1.832462,-7.122298,5.741819,1.134824,4.794928,-8.695287,-2.248119,0.638779]],[[1.927023,-2.801783,5.710222,-3.346736,1.885596,7.955305,-5.161099,-6.851713,2.886348,2.410834],[-0.471012,4.937732,-4.365342,-5.494681,-8.031142,-5.925126,-3.166817,9.398868,4.755462,-3.694460],[-3.512258,-2.602147,1.695188,7.842332,-8.437009,-5.901499,8.664138,-4.437060,9.726298,-8.057084],[-8.099909,3.761626,6.787009,-0.743901,2.118794,-2.943017,8.823757,-8.604907,7.166528,0.272210],[-9.259282,-4.643342,0.181387,9.727442,-2.554288,-7.666838,-6.748600,0.585815,-0.735678,-6.182739],[-2.306233,9.577551,-6.082980,9.606923,7.295285,8.112032,-5.165193,-6.722816,-1.110731,-9.582181],[8.616777,0.942267,1.723391,-0.259611,-9.494609,9.504872,3.473636,-7.579538,-2.412588,0.092398],[6.587017,8.911652,-4.677721,4.460364,-9.864651,0.669619,5.316910,4.985852,-9.303264,-0.131189],[6.298713,8.554724,0.325532,-3.052611,6.686270,8.798969,-9.603083,-2.840280,-1.776322,1.706755],[-6.053972,5.384255,3.268581,-8.830112,-4.436624,-3.481340,-9.542015,-9.463266,-4.676809,7.824221],[-3.058001,-0.556888,1.981304,7.760136,-2.851917,-9.721652,-5.761706,-8.695781,4.967766,0.430958],[-1.150079,2.860390,2.373534,-1.307305,-1.306711,-5.206427,-9.791928,2.985450,5.196231,-4.849475],[0.142781,-1.852918,-6.370651,8.621194,3.105686,5.253144,-9.610531,-1.602187,-1.114480,4.616539]],[[-8.777067,4.854132,-7.020515,6.388034,8.073393,-2.183863,-5.335850,-8.227863,3.603033,-5.788893],[-7.214417,-4.261092,-5.621883,6.349235,9.515775,1.031841,-3.341284,5.098431,1.484008,-8.446798],[-2.459284,6.503223,-6.288867,4.366169,7.128974,-3.896564,4.180549,3.576834,-0.465061,-8.343953],[0.016272,5.327370,-2.173896,3.890486,3.560740,-5.620990,-8.628568,1.700878,-4.625751,-8.791301],[-7.744699,7.353711,-4.660902,-6.846568,1.562180,-2.202573,-5.129739,-5.162666,-7.004994,7.425986],[-2.409081,5.007772,1.629443,1.979746,1.617982,-4.497867,-7.546566,3.718698,-3.494818,7.710860],[-7.982703,-9.510537,-2.208494,8.640635,-5.877505,-3.317933,1.285031,1.801432,-2.386654,-6.551930],[6.348600,-1.376762,-6.978628,-9.559171,8.597400,8.035396,4.603484,-9.853210,-9.978281,0.894908],[-9.110424,7.719003,1.871902,3.468085,2.134781,-9.262271,-5.053092,5.234114,-2.623788,6.962394],[2.630659,-9.787572,-5.313148,-0.265302,-7.011987,-8.283728,-0.811372,-0.083710,-1.859188,0.142437],[3.849737,-1.847276,-8.341063,2.609182,8.847109,-0.613379,0.996058,-5.297003,-2.699145,-7.975256],[-1.395189,8.611019,8.115645,-6.783890,1.320200,4.216486,1.468593,-2.019155,0.883009,8.075891],[-6.825416,-6.693249,-3.553793,-5.285696,0.531068,1.412308,1.564855,-9.689010,1.425803,-0.132909]],[[5.741484,4.057799,-8.047645,-5.014106,9.574786,-2.086092,-0.976025,1.165996,5.763673,3.946669],[7.491014,-2.140764,4.479052,0.637724,-2.635475,-0.712709,9.956710,-7.953580,5.882205,-4.856046],[-1.756248,6.276735,0.023840,1.453416,-2.733080,0.389532,-7.137299,-4.865224,4.778406,-5.564691],[9.728623,4.337042,-4.550985,-0.188699,-7.174985,8.484791,-0.425571,9.804531,6.426464,-6.672743],[7.162482,8.117778,-9.844352,-5.499397,0.954017,0.382702,7.789033,-9.773274,-5.744148,8.373601],[6.098268,-8.753509,4.735061,0.680487,-4.413426,-0.778111,0.116135,5.701383,9.070946,8.156957],[-3.006641,-1.149572,6.433423,-0.797376,7.098823,6.288767,-9.089499,-4.384437,9.374545,-8.974471],[-6.248524,-2.553952,6.244258,2.841013,8.639616,3.944803,5.671906,5.892204,-1.056479,-1.546007],[0.767415,-7.396367,0.732266,-3.973726,-5.025234,1.548734,4.648075,8.999157,0.470434,-3.986490],[6.082579,8.330486,5.443778,-7.572690,-7.878753,7.232052,-7.730498,8.751596,1.780614,-2.841876],[-5.774280,-2.019644,9.613543,-4.634229,-8.420968,2.220065,3.043052,-0.517815,6.820064,-2.972417],[2.935301,-3.058625,-9.075870,-4.678377,7.705901,6.607248,-6.526796,6.730110,6.693938,-2.353401],[-3.320881,-7.539214,-3.665155,-0.905169,6.021343,5.207054,8.348673,-2.730612,7.346711,1.510334]]], dtype = "float64")#candidate|4697|(7, 13, 10)|const|float64
const_4698 = relay.const([[[3.065967,-2.777358,-0.911115,-8.238009,7.155481,-1.968895,-8.223742,-1.011839,6.281356,-3.068604],[-0.265432,-0.522074,4.874459,8.645718,-0.433791,1.431472,-0.296932,-9.656188,-3.375480,-4.366034],[-1.039014,0.142802,9.794864,0.746258,8.654130,-1.141608,3.145630,-4.818375,-9.528656,1.705441],[-5.942411,-1.287695,-9.928557,9.154371,-7.971907,-3.848883,8.027981,1.837363,7.859537,2.813097],[-3.020632,9.878319,-6.750101,-4.396368,1.806635,5.535686,9.568813,5.548362,-4.140548,-6.839587],[-5.205595,6.983566,-8.084194,-7.701224,-2.720413,-8.869408,8.058800,-3.423089,2.663573,2.966144],[4.137659,-5.594273,-1.612812,-7.845149,1.705287,2.668705,-2.567398,9.552621,-2.301571,-8.291945],[9.126303,6.498199,-3.941275,-1.752282,8.133492,6.264098,-6.941348,5.024452,0.376340,9.479802],[-4.833374,-2.821448,-1.278793,3.833700,6.481323,0.089620,-4.699806,-1.818480,-7.776779,-9.060487],[-1.299970,-3.920121,5.146840,6.665908,-8.794233,7.725887,-9.421637,5.356164,7.612180,9.062600],[-3.891362,3.469320,4.059432,-8.112581,-7.523517,3.873307,-2.972338,3.179358,0.892129,-2.765854],[-7.290732,-3.601811,8.106308,9.629693,-8.402220,9.220148,9.964302,5.866521,-2.332141,-0.976119],[-6.168219,5.794922,-9.930931,6.737211,-1.715967,8.613615,9.776912,6.315155,4.513214,-7.370125]],[[6.346072,-9.551795,-6.787188,9.443428,2.870111,-5.153221,-4.051716,-8.497837,-3.386753,-0.624782],[0.124491,9.523189,-0.928201,8.675478,6.317705,6.038598,-2.493656,2.367956,-4.197946,4.755138],[1.185975,1.365543,-1.230353,-9.029638,5.906534,5.655587,-9.053904,-2.435340,5.864559,-5.145431],[1.350686,8.957448,3.483723,-6.585756,2.159882,-4.072985,2.360479,-8.829163,3.408132,5.868031],[-2.043700,-8.909001,7.834984,6.994557,-9.701815,-7.452097,8.393683,8.112118,-1.171619,-0.396103],[-4.979216,-5.610826,8.052286,0.459992,9.483669,3.215219,9.095828,-8.299337,-7.534867,4.248165],[0.519508,-7.947601,6.712615,-8.941390,-9.021042,4.754549,2.078461,-5.277411,7.663284,8.223102],[-4.361743,-4.595492,-8.643857,4.894882,-7.234879,-5.505044,-7.365957,-6.503014,-1.329387,1.152220],[-2.102660,3.490665,0.328702,-4.419338,1.059671,3.575489,-0.664530,0.386080,0.567567,-1.083944],[4.072307,5.134594,2.985024,7.118677,-1.084729,-6.741210,-5.591872,-6.664905,-9.054925,-0.427613],[8.459113,6.772822,0.391581,-5.988027,9.917524,-7.586933,7.818665,-1.988637,0.612501,1.176085],[6.659171,-7.716964,3.072693,5.540183,3.641828,-1.081453,6.925053,9.456666,-1.479633,6.530569],[-1.541572,3.921342,-1.408048,-6.539494,7.350583,1.041182,-5.901631,-5.762762,7.245549,7.600261]],[[9.741225,9.331380,6.852191,4.500735,-3.635736,-9.002616,-0.341721,4.404130,3.260517,2.523488],[3.857207,0.786671,-1.131869,6.419905,4.142573,0.231765,-2.249816,-2.012315,0.678696,-8.693581],[-4.959801,-1.839137,-3.924000,1.636945,9.437168,-2.460397,-1.902378,-8.761253,-7.613144,-9.876277],[-6.220758,-0.036280,-3.183163,3.306449,7.884747,9.514515,-5.072020,-5.035904,6.881946,-5.658804],[-9.922530,8.866284,1.469621,-8.258047,-5.252096,4.464632,-9.805509,7.558098,-6.739763,-7.808450],[-7.927663,-6.838649,2.758551,5.402246,-9.823945,8.810500,4.394471,0.063203,6.073577,-2.944872],[-1.738021,-9.317673,3.744027,2.394540,-2.746959,1.620504,-3.829195,1.824929,4.473297,-2.079308],[1.064401,-7.543286,1.055767,6.116056,1.004480,-7.295113,4.919079,-5.624494,-2.447384,0.550952],[3.354602,-9.124201,-6.107762,6.883403,-5.716858,2.454983,-4.142872,-2.993684,-7.512151,-2.532400],[1.971120,0.449413,5.860708,-9.367927,-7.146033,4.200389,-7.872669,0.647177,4.112078,-0.534768],[-1.188571,8.363545,-4.075179,-7.188645,0.517424,-1.733166,8.968243,-8.638800,-6.691959,1.706801],[-1.437808,-6.670359,-0.188555,9.619886,7.784196,9.712465,7.196537,-6.865767,6.076540,-7.660164],[6.739736,3.675158,9.665809,1.757926,-5.943428,-8.425653,4.429271,-5.112281,-2.215350,-2.127500]],[[1.569000,4.013142,-6.854475,-1.941528,0.441557,8.340666,-6.657041,4.207637,-6.692650,1.989348],[9.934375,8.835092,-1.549365,-9.362762,2.745771,-4.521764,9.921200,4.987549,9.159701,4.624833],[0.580846,7.915721,9.293585,2.215005,-4.425651,8.599013,-8.940147,-7.416213,-1.881910,6.377853],[7.927250,-6.597120,0.461030,8.972335,-3.896717,3.670784,6.557537,6.046089,-7.855112,-8.893198],[5.665297,-7.554271,-6.951792,-8.794560,-3.673023,-9.029608,-4.330479,-1.455103,-9.143684,-4.428202],[-8.168501,-4.611979,5.307418,-7.778591,-4.654383,-0.483254,-9.725820,0.271486,3.224069,0.837018],[8.377718,-7.323009,4.411469,-9.120245,-7.603073,-6.343718,-3.256999,-6.465926,-0.246363,0.240886],[9.122723,-0.223770,3.928924,-2.194682,2.577438,-8.521727,9.809946,-3.522545,5.287841,-9.186185],[-6.281752,-6.300692,-7.892355,-4.307464,9.428859,2.979737,2.944748,5.703987,-0.816176,6.142919],[1.760474,-0.335083,-3.828711,5.003394,8.079038,3.608516,-5.535071,4.564383,-0.107284,1.792008],[5.660715,-1.930362,-1.925826,0.825754,9.657496,6.107500,-7.740408,4.035890,-9.059499,-4.648680],[9.702999,6.672090,3.222283,-4.400646,-2.767441,-8.946843,-4.208037,-5.451337,-1.650633,7.785675],[8.012465,-0.300828,6.113319,-3.450339,0.292881,8.281668,8.025879,-3.029778,2.568952,-0.603257]],[[4.777846,-9.933147,-3.819078,-1.363787,-1.170945,-1.784523,-3.857065,-9.532125,1.328278,-7.848690],[3.732929,3.997696,-6.045674,-6.304735,-7.394773,-0.399527,2.821894,6.401231,3.941675,-7.980386],[-7.505404,5.446783,3.142072,-5.659963,1.249387,2.195250,-1.699101,3.518308,3.811815,3.064221],[-7.755093,1.619484,-4.215553,1.068317,-5.568178,3.075681,9.499087,-1.048752,-2.448307,5.973990],[4.139991,8.841642,4.030251,-5.297796,-6.314167,-5.825139,1.694257,-1.163164,-6.783832,-1.407344],[2.909091,1.625711,-1.207867,6.321688,-0.727413,-3.093300,-7.172536,-4.439055,-9.361378,-8.163982],[-2.014597,-8.348520,-7.299121,7.793248,-2.436709,3.909027,3.317054,-9.280916,-5.132086,8.240066],[-5.249827,-0.281041,0.619967,-4.532691,-5.452780,-3.259370,8.455410,-7.780484,9.965005,3.093324],[8.262381,3.651794,5.536204,2.200381,2.452109,1.989622,-3.667621,-2.601887,-3.480537,-3.022892],[2.459218,9.783811,9.672973,-5.953196,6.884778,-1.763912,7.634615,3.309583,-6.286734,-5.191673],[2.307680,2.180110,-8.616932,2.123930,1.955575,7.433999,-3.060633,2.453879,-2.550904,-0.064710],[8.951610,5.229567,-5.999021,-7.789984,8.251373,8.529540,-2.522436,-9.945976,-1.202955,8.629883],[2.723854,5.534241,5.792676,3.105533,-4.614520,1.749218,8.577587,-2.992060,4.889942,-0.779099]],[[-1.019466,-8.446746,-6.690280,9.851802,-7.216517,-8.955037,0.485963,-8.396806,0.105818,-2.611999],[5.190968,3.903349,-0.721779,8.196988,-2.629119,-8.177889,8.771126,1.634106,-7.830078,-6.085782],[1.616059,-5.092256,-3.963370,8.676480,2.841115,-1.889760,6.752190,6.348576,3.218431,-0.728721],[-8.540666,-0.846284,0.293939,5.883427,-7.371155,-5.700849,1.732788,-4.071572,2.953673,3.717731],[-3.181150,-8.752482,0.471392,7.019931,-4.819275,7.036647,3.364620,-7.238429,8.805463,-3.584051],[9.705429,-5.439601,7.916378,2.801583,-1.180081,8.773921,-7.187234,3.750412,6.130713,-6.792073],[-6.166601,-1.450999,-3.838130,-0.951476,9.978231,3.948906,9.166304,2.404582,2.774011,-5.034254],[7.124259,-2.525083,7.781298,0.570498,-0.123669,-7.695039,7.848099,-0.947826,0.713368,-7.193519],[2.181820,0.106595,1.155259,-5.142264,3.125525,-0.342318,-8.580936,-0.521345,-8.882259,4.585959],[-7.016470,8.565980,-3.708323,6.538254,-2.555741,-7.858781,7.652487,6.035159,-6.089771,1.690700],[-2.237952,-9.368399,-6.788654,-9.768497,9.758040,-4.511454,3.955120,5.011938,0.961582,1.274711],[-6.030630,-0.744826,1.086455,-6.429911,8.617420,-1.490443,-9.961592,-7.956022,2.953351,7.061937],[-4.384763,-2.821029,-2.086152,-4.000948,-0.547484,7.435314,2.415434,8.825785,1.162218,4.849585]],[[2.302232,-7.159141,-7.630746,9.748267,6.627450,-2.732837,-3.964457,0.431457,8.164945,-0.456435],[5.724356,-3.297482,9.486223,-6.113023,-0.974792,8.418437,6.693822,1.547634,1.954012,3.879870],[6.799588,-0.646091,7.271131,-6.023316,5.667277,-4.895953,1.317830,-2.291489,-6.617630,8.132275],[-4.872057,7.927640,2.939397,9.016395,7.904426,9.215414,3.329030,-1.204329,-5.053465,1.779293],[9.736328,-5.788639,-4.869465,-7.637530,1.946848,1.757652,-0.978903,1.709314,4.095827,-0.766681],[-1.805914,-6.513233,-5.933859,-9.321729,8.482771,-2.166815,7.694716,1.370130,1.325226,7.724940],[-5.960128,-0.181780,8.048599,-9.097327,5.279953,3.979511,-2.398740,9.595392,-9.874485,0.815895],[6.125720,-0.414680,6.013009,-6.658633,2.322808,6.988764,4.719438,2.826191,-9.149166,4.892684],[-5.146526,8.912202,-4.834988,5.578134,-5.399283,2.193345,2.312600,-0.965695,7.102232,8.248993],[-2.389254,-1.776005,2.747121,-7.188089,1.445436,5.897558,-1.444764,1.133306,8.819662,6.087479],[4.663272,2.642528,1.387820,6.066051,-4.230382,3.178809,-6.651198,-7.952847,4.415668,5.739516],[9.873431,7.638952,1.167661,-9.321099,4.619697,-3.258826,-2.166375,1.077396,0.165496,7.324089],[-1.678783,3.448633,-5.363192,-4.076655,-5.511971,2.727302,-1.245466,-3.695300,2.666746,-1.224518]]], dtype = "float64")#candidate|4698|(7, 13, 10)|const|float64
bop_4699 = relay.power(const_4697.astype('float64'), relay.reshape(const_4698.astype('float64'), relay.shape_of(const_4697))) # shape=(7, 13, 10)
uop_4715 = relay.exp(bop_4699.astype('float64')) # shape=(7, 13, 10)
func_2707_call = mod.get_global_var('func_2707')
func_2709_call = mutated_mod.get_global_var('func_2709')
var_4723 = relay.var("var_4723", dtype = "uint16", shape = (5, 40))#candidate|4723|(5, 40)|var|uint16
call_4722 = relay.TupleGetItem(func_2707_call(relay.reshape(var_4723.astype('uint16'), [5, 5, 8])), 0)
call_4724 = relay.TupleGetItem(func_2709_call(relay.reshape(var_4723.astype('uint16'), [5, 5, 8])), 0)
output = relay.Tuple([uop_4715,call_4722,var_4723,])
output2 = relay.Tuple([uop_4715,call_4724,var_4723,])
func_4727 = relay.Function([var_4723,], output)
mod['func_4727'] = func_4727
mod = relay.transform.InferType()(mod)
var_4728 = relay.var("var_4728", dtype = "uint16", shape = (5, 40))#candidate|4728|(5, 40)|var|uint16
output = func_4727(var_4728)
func_4729 = relay.Function([var_4728], output)
mutated_mod['func_4729'] = func_4729
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4859 = relay.const([[[-9.973069,-1.325341,9.481272,-3.651183,-0.624260,-7.396460,-1.760597,5.222319,5.863413,-9.833130],[-6.593256,-1.526286,9.120771,9.862452,7.007496,7.450638,8.317714,7.106822,9.892886,-4.293326],[-5.427739,-0.620086,5.471980,-4.291456,-3.992038,-4.694652,2.884941,-3.622787,-1.033261,-0.273041],[-6.623493,-8.218246,4.572888,-0.469638,7.426689,-2.038450,-3.670282,7.275469,8.857112,-8.748195],[-8.959829,-3.194750,3.035188,-6.264907,5.575827,3.860555,-8.086806,1.976436,0.753645,-5.958097],[-0.184690,3.917586,8.661691,-3.689573,-8.575736,7.966976,4.699663,-1.539676,-5.354082,3.895290],[1.753878,2.867026,-3.511511,4.569857,6.522608,-4.152248,2.961994,-9.723643,-4.822103,5.749585],[1.024330,6.619757,-0.248139,6.965690,-1.971826,-6.659077,9.748520,0.849215,6.627319,3.586954],[-6.899568,-2.651217,7.144058,3.362862,-8.694538,-0.542789,5.004485,-5.527162,3.126458,-2.194074],[-3.580059,2.526629,-8.008362,4.758269,-0.698757,-8.685942,6.545947,-0.054500,0.227174,-0.471793],[-8.932292,8.315189,3.447094,2.430400,9.805760,-7.102906,6.578368,4.849676,8.634313,1.763965],[-3.210479,-5.968539,-7.914526,-9.888871,-8.404647,4.102215,-3.738887,-3.314169,5.000421,-7.372619],[6.042018,-3.672832,7.395023,1.544619,0.636165,-3.650978,-6.381135,8.510725,6.278467,9.791479],[-1.315540,-7.419414,7.331123,-6.698561,-3.495792,-9.436032,-4.276458,-2.353938,-4.992671,-3.272150],[-6.056586,3.514852,8.977257,-7.167805,1.194123,1.324740,-7.186033,-0.345074,-2.472802,-3.559746]],[[2.821744,7.711711,-1.205515,8.086080,7.166962,-5.263869,-5.155803,-5.457597,-0.349491,-6.938028],[-3.279232,4.884294,5.501686,2.872277,4.976875,7.408720,-6.913882,-8.042035,-9.650443,8.943871],[6.636016,-4.583776,-7.253881,0.756094,8.653561,-9.408660,0.728274,-9.314722,3.236748,5.705931],[-6.305244,7.505635,8.932558,8.720590,-8.796041,1.223394,-1.547532,8.318263,-1.740085,9.841914],[3.618336,-9.529389,2.852753,5.709697,-4.824490,5.881712,5.126732,1.018559,-4.460612,3.813801],[0.468664,-4.217907,-4.401117,-4.491416,2.477012,-8.850376,5.695612,9.283629,1.558207,0.431275],[7.010025,-3.454501,-9.917337,2.796432,-2.045385,8.196526,7.873164,2.955195,9.082877,1.454971],[6.622256,1.596870,-6.428049,-5.568308,-4.979643,8.896247,-4.304127,-4.496923,2.462887,-2.239888],[-6.742619,8.652817,6.080965,8.602595,0.071283,5.467530,-9.168389,2.974469,-9.314402,9.507829],[-1.202351,-3.709739,-1.382807,6.017211,7.126253,-0.591006,4.195650,8.351674,-7.071072,7.377877],[5.218314,0.564001,-7.726367,-5.688869,-7.966701,6.152899,-6.064476,0.211016,-9.593024,-6.055463],[-3.174988,-8.469538,7.086785,8.593649,-4.477298,4.117197,5.774420,-5.434186,7.407080,-2.969760],[-9.437710,-2.162477,-1.064422,3.526561,-6.811661,-9.789153,-5.382271,-4.183564,-7.220093,-9.303547],[1.824962,6.778615,-0.747154,-2.265181,-0.911702,7.314288,-6.681751,-3.112745,0.602427,1.158523],[7.309280,1.382486,-8.657935,4.360933,8.542699,-5.195298,0.537962,6.521834,7.164418,-9.188155]],[[5.151574,-1.102586,3.314113,-5.362158,-3.614410,4.958691,1.897794,-1.972975,-0.558384,-5.516880],[0.891528,-3.054793,-2.382356,-5.851650,2.869229,-7.941273,-9.872583,-7.092025,9.779952,-7.762560],[6.824499,7.289600,-4.923657,-5.029084,-9.363506,-0.484434,5.204135,-2.876483,1.744369,6.041848],[3.934542,8.862761,-7.830988,-4.890903,-4.998319,-1.654469,-3.577857,-8.908852,2.949246,9.772031],[1.751737,5.691947,1.236443,3.771260,-5.128222,0.208892,-9.231816,3.400589,0.451824,-5.295341],[-0.794202,8.330781,-1.026685,-7.378646,-7.367003,3.205985,7.119431,0.849852,0.386349,0.200809],[0.072780,3.151109,1.904735,7.706051,-2.349193,-7.638010,-9.008430,6.142053,4.492246,-3.341040],[-0.699157,-2.499807,-3.747609,-9.080494,-6.665629,7.482451,-2.941907,4.159352,2.899484,-1.235889],[-8.288463,-8.143759,-8.900154,5.365645,0.044770,-2.646788,-7.834641,-9.184421,-7.720634,-4.638260],[-1.585532,-8.865663,-2.619930,3.247936,-8.091164,-2.191926,-6.408354,7.564247,-3.360777,9.806031],[-4.830673,6.880829,-0.616046,0.226608,-2.775558,3.817060,1.986892,-2.104997,0.455740,0.519376],[7.081436,-0.139645,7.788411,1.980679,-5.721239,2.155855,-8.359152,5.774697,-2.526514,4.015641],[-9.505191,-6.641225,-2.200184,-4.409055,-5.796275,-5.718070,9.471876,9.857915,-0.954466,-3.374461],[1.155681,-6.287594,6.053748,-1.026154,-8.465852,-3.226939,-4.095378,3.827682,7.171048,-2.757437],[2.540550,-1.703855,6.399287,2.343576,-3.554301,1.872629,-8.921508,1.147872,5.097497,3.815923]],[[2.922227,6.576076,-2.381383,-2.652695,-5.472450,0.128491,1.203300,-5.158339,-8.611555,5.484837],[1.577209,-1.975339,-4.231359,8.729567,-5.375833,7.640524,2.783783,0.681760,9.234500,6.803157],[4.409298,-1.492911,-2.891243,7.405973,-8.286095,7.298747,5.237723,5.996488,7.671600,-8.195240],[-2.562053,4.822320,-3.990444,2.266043,1.931895,7.739657,-4.184073,2.801271,-2.411218,8.143382],[4.292761,-9.179946,-1.390773,-7.197853,7.248194,0.237647,6.186256,8.875963,-0.495091,0.913412],[0.288660,-5.174911,-0.898515,0.313785,-4.288132,-7.629041,6.641352,7.060616,-4.175903,-7.064137],[-8.818715,7.950601,-8.514303,8.914006,-9.110136,-8.666310,7.413466,3.684162,3.057743,-3.372070],[9.033862,7.212480,0.643515,-8.318388,7.223766,0.484886,2.170736,8.483823,9.358632,-8.020035],[5.805815,-7.083978,1.762154,9.516912,-4.192930,-1.527409,-8.867831,-6.734549,-7.634185,5.618511],[4.867297,8.581994,-9.436203,3.955410,6.326744,7.921026,-1.699017,1.735929,1.911406,-2.698000],[-2.271005,6.897818,1.688037,3.650855,-4.446623,3.834160,0.415106,-4.322275,6.443605,-1.824526],[0.217472,4.653721,1.091533,7.836703,5.232363,-7.020952,9.357729,-2.675970,2.508516,-1.077121],[4.119602,-7.067862,0.503643,-8.015955,-0.945282,2.126235,-8.659735,0.464867,-4.049967,-0.061839],[6.616040,6.016227,-1.380389,3.838724,7.194885,3.214550,3.247366,-9.387344,4.678880,1.557727],[3.863826,0.773347,7.246160,3.766517,-6.511930,-3.619886,-3.593143,-4.814391,3.017994,-1.557900]]], dtype = "float32")#candidate|4859|(4, 15, 10)|const|float32
uop_4860 = relay.exp(const_4859.astype('float32')) # shape=(4, 15, 10)
func_1662_call = mod.get_global_var('func_1662')
func_1665_call = mutated_mod.get_global_var('func_1665')
const_4868 = relay.const([-0.719534,-6.614490,-7.797212,3.926629,3.565709,6.881069,4.273104,-0.497627,3.319477,6.984275,7.428623,-0.110642,2.781131,8.498236,-9.162683,6.771838,4.078884,8.573317,9.047984,3.365335,-7.816640,-9.368725,7.913994,-2.807522,7.322626,8.652990,-6.687929,3.025499,-9.276586,-0.236516,8.422663,4.239512,3.382298,4.166399,8.038687,9.146660,9.236883,-5.650317,-2.419699,6.790030,-5.709707,3.052730,1.563896,-3.528442,0.375595,-3.700666,-6.165257,-0.095198,-1.505369,2.466052,-6.350475,4.614986,-5.903627,8.992207,-0.746010,9.597497,7.536022,8.915613,7.692362,-4.011242,-1.371368,3.034074,5.837087,-5.764193,2.071286,0.447622,5.149734,8.310912,-1.150090,-4.037310,-8.367308,4.144710,-9.409759,-4.475820,8.184595,0.128056,0.951184,-9.647067,-9.391681,0.746583,-1.544165,8.205443,8.263177,-4.064302,0.017875,6.185270,-2.782317,-7.095070,3.373387,-1.322704,5.750002,2.814022,-6.950396,4.551588,-5.246481,3.571310,-7.140214,-8.972464,0.311837,6.149623,-6.890060,-1.475257,-0.366851,7.866864,7.590513,-9.898156,8.479776,-0.009773,9.352315,-2.609700,-8.914860,9.075878,0.400368,-1.810253,-4.782816,3.693877,-6.632691,4.328294,-4.997982,2.791846,-1.903071,9.012438,7.649754,5.542465,8.390955,-7.723785,0.609327,-1.834214,-6.777632,-1.580652,5.735040,6.440830,4.511304,-4.749129,6.379395,-8.136095,6.306520,-2.341518,2.533002,8.777734,9.698341,-3.664666,4.480935,1.431574,4.658821,-9.862334,-1.575503,0.038743,-0.268738,2.007187,0.407257,7.526055,6.335194,9.463426,-4.906277,-8.583495,-2.282895,-9.887067,2.630840,4.994681,5.014908,3.112547,1.025603,-2.368370,-5.289791,-4.851708,9.369973,-7.190479,9.852411,0.856088,2.009035,1.301191,-9.569655,7.397203,-3.949908,-8.861537,7.539052,2.464404,-9.290292,-1.026549,7.465353,-1.930331,6.814186,-3.145753,-2.554966,-8.741841,5.957247,-5.248646,4.538776,6.986860,-2.030459,-7.270571,-5.427621,4.605562,0.176170,4.373695,-9.542967,6.664915,4.518126,-5.119365,5.257354,9.017466,-3.466285,-8.722952,1.588502,2.158077,6.704736,6.264172,6.043690,6.697571,7.794140,-7.554540,-4.078927,7.385526,4.498214,-8.488025,-4.819782,2.693706,5.490468,-2.233595,8.004389,-1.310202,5.628365,-3.247363,-3.422747,7.053066,4.927624,8.326143,0.013071,8.566950,-7.314693,4.115226,8.878298,-6.943396,-6.523923,1.644638,-9.831085,4.003108,-8.672367,3.799164,0.146606,-7.691253,-5.893229,-1.156128,-1.810258,-0.434795,0.002215,2.330376,-8.987738,4.554845,-5.257800,-3.566247,8.560049,2.221236,-2.524683,-2.760157,6.672487,-1.394421,6.848044,-9.337801,-1.888018,-2.304335,-6.948873,-3.775247,8.626079,-6.731444,-7.317851,6.411872,-2.506301,0.319557,0.797644,-3.694509,-9.643750,-9.010671,6.765715,3.039650,8.238380,-7.753894,0.417719,-2.040614,-5.086617,6.981128,8.149789,-9.080416,1.286689,-6.660577,-7.143038,9.370456,9.956289,-3.288343,-2.752075,-3.971593,4.711957,-3.642439,3.764232,-7.250687,4.254503,4.508693,-9.910221,-9.998103,2.826744,-5.483913,0.988019,1.331158,3.333874,1.898897,0.930392,2.770503,-7.159186,-5.721899,-2.824546,-5.574241,-2.603569,-7.786482,8.344455,-0.706536,-2.347158,-9.421401,-0.963577,-8.339104,7.513357,-0.021942,-7.862391,-1.293137,6.616718,-6.469744,3.371102,9.993053,-2.059362,-2.388709,-7.308211,3.505496,7.021881,-5.282993,0.745317,8.648353,-3.206621,4.611000,4.792556,-5.641138,-6.102056,-5.254834,8.450001,3.540704,1.714023,9.112944,-5.643952,-0.680282,6.633046,-4.380462,-8.285154,7.341165,9.622682,2.539357,-1.578872,7.205983,-0.370748,-8.047750,5.498577,-7.854077,8.812609,-8.817913,-2.401598,6.302261,8.315536,-1.567684,1.999535,-0.697683,-8.115553,3.918206,8.114527,-0.164143,-0.953364,1.696446,-5.766604,1.162466,-8.022238,-0.882015,-2.857050,-0.176198,9.503176,7.788774,-5.235688,6.502289,8.943415,-7.080117,3.614574,4.378362,4.769156,1.017725,-2.230673,-1.146591,-3.364187,4.409144,-4.808416,-6.613302,-0.731783,8.378419,8.808515,0.141357,2.051504,-7.141689,-1.240013,9.445978,-8.657058,-4.755393,8.660742,3.203249,4.757873,-6.793212,-3.796513,3.919028,8.461367,-6.426731,6.510330,1.014168,9.187123,7.231406,0.712769,0.801275,6.184354,-1.047370,-9.725632,-5.854035,-8.416152,-9.764730,1.550950,4.757057,-2.952446,3.699048,-7.061041,-0.613722,-2.692486,1.070139,-5.808993,-8.511471,-1.143571,-1.318854,-5.179343,-0.512275,-6.775000,-0.414604,-3.493020,-5.345045,8.615697,-6.994318,-2.001380,5.577275,-5.463346,2.335136,8.022383,-9.006453,-7.581378,7.457697,2.911188,-0.381996,-4.990836,1.847017,-7.625003,8.859369,-8.538201,0.255900,-2.362076,1.263423,-9.962742,-1.115851,-5.342617,1.461395,0.810391,-6.448999,5.769636,-8.102209,2.901467,-4.314454,2.696297,4.044426,-2.529587,3.935802,2.218865,3.009139,5.884445,7.623156,8.191325,-5.934014,3.247233,3.199575,6.412167,-5.870385,-6.286771,0.178095,-7.352284,2.076382,5.382154,-5.915946,0.858938,-5.396500,6.483335,6.066867,1.157975,7.601438,-1.921394,3.974528,8.029811,-5.184758,-1.812050,6.356501,-5.404411,5.593293,3.665367,-2.607563,-4.101578,9.064862,-1.665982,-0.665009,8.769641,4.922658,-7.980377,9.725574,-2.181575,7.436740,2.209237,-3.722777,0.711195,-1.830548,9.048439,-7.197412,5.174709,4.322875,-0.566928,1.083651,4.634551,3.658960,8.428044,7.882346,-5.144763,2.480022,-0.862538,9.301572,5.991202,-7.413724,-9.397469,-7.265417,2.439177,4.177608,0.117878,2.699057,9.490771,1.778423,7.355434,6.520691,6.373261,-6.367816,-5.305199,-5.435568,2.098590,-7.649040,7.206123,3.850422,-6.625336,-0.444818,-0.018243,-8.588051,-4.274281,-0.050464,6.662939,4.176026,-0.092286,-8.791425,9.188520,9.731369,7.076000,-5.978141,-0.080795,7.884151,-0.964824,5.918784,8.922482,3.769292,5.009585,-3.177213,4.687401,7.791100,1.221178,-3.152023,-1.495035,1.561059,8.428246,-6.771323,9.679521,-1.723586,5.367204,-5.055054,5.636908,-7.109173,-9.621501,4.967654,-7.633736,7.049313,-2.516802,-5.895909,4.628942,4.689865,8.166030,2.732058,0.189039,7.063609,3.471375,-7.210909,1.128231,5.476241,7.408307,3.554332,0.074501,5.634936,-9.179381,3.281668,4.285365,-8.161400,-3.355369,1.993264,3.097601,4.797281,3.973247,0.865229,-3.050689,-0.229489,-5.747819,-2.543304,-5.207881,1.491899,6.338785,8.616650,9.725082,-8.034083,5.450871,-6.250886,-8.134813,5.146186,4.739824,-8.730262,3.180863,5.067461,-6.051586,4.015453,5.802094,8.321557,9.906529,4.008710,-0.556597,7.668907,3.070395,-1.399361,4.752315,0.753481,-0.989908,-3.225013,-4.018567,9.728519,3.073915,-8.279196,-8.993237,-3.183203,-9.802961,-7.993686,0.462688,-8.958097,5.942187,-8.378374,-1.792588,2.913043,9.705366,-9.012709,7.474268,-5.195615,-8.031083,6.194447,-1.767192,5.558426,3.288119,5.929586,0.453770,-6.061418,-0.711428,1.652846,-9.033495,3.126790,-8.442549,-4.529792,-8.251027,9.588551,0.401460,7.558053,-7.698916,-6.854005,-0.017522,-7.059436,3.776753,0.038847,4.094873,-4.482458,4.125904,9.534524,0.624265,-9.721445,-2.465156,-8.663900,-3.997388,0.571195,-2.434758,4.274249,2.486552,-8.403282,-0.761919,-8.116700,-1.527122,5.344049,-1.816564,-3.126493,-5.930054,6.477099,-9.509092,-5.852864,2.142282,9.156560,4.088017,1.294490,-4.563359,0.263519,0.703121,-9.171510,-9.206383,7.053003,-8.715494,-1.945343,-3.776628,9.281436,-8.486329,-3.912259,3.026235,1.443793,-4.794151,2.793940,1.452761,5.025054,-9.316514,-8.793055,5.466017,0.233314,9.239526,2.132826,-5.310730,-2.727627,-2.676232,-2.529048,-7.860849,6.503271,-9.200340,3.906199,5.250854,-9.517721,-2.106004,6.179665,7.717079,9.499812,-9.950886,-9.141054,7.543935,7.324887,8.040400,8.374739,-9.050653,-7.036718,1.254542,-2.669198,-7.104608,-0.150170,1.776080,9.990001,1.891827,-9.587285,2.516735,-8.643436,4.755370,-1.046818,8.029718,7.435249,-4.504809,2.584904,3.176912,4.556835,-1.317510,7.256699,2.951692,-6.361662,1.939449,-3.646045,-3.227456,-6.085924,4.597736,-5.759838,-2.947426,-9.382686,-2.114117,0.185202,8.872802,7.687977,-5.766534,7.781434,5.662088,-2.557503,-7.738025,2.954892,2.532470,5.763143,3.291762,-1.392127,9.072302,-7.506796,-6.544150,3.579819,-9.444167,5.227631,2.915588,-7.853830,6.879632,-7.611940,-5.972354,-9.199530,4.888183,-7.474222,9.685250,-6.711703,6.087705,-4.272146,-7.399480,8.479146,2.105811,-0.381307,9.094461,8.647758,7.508040,0.583044,-4.470286,-2.675898,0.366658,-3.494801,7.546932,0.114747,3.293142,-1.555952,9.531562,3.338424,-6.592831,-7.253428,-0.047248,-8.164667,1.153956,2.788092,1.562388,2.506256,-7.049071,-6.945001,-1.297000,-3.289407,7.713424,-8.165720,-9.257717,1.711014,8.014897,1.079407,-4.621630,9.836537,0.138137,2.920710,-7.295644,1.363008,-6.456311,-4.522130,3.113125,-5.273587,0.564254,3.774419,-3.237845,9.416975,-5.523741,-2.015749,-1.565072,-2.984087,-8.541393,1.263141,-7.898189,-4.327430,-7.452091,-0.170248,4.333858,-9.909908,9.304808,9.842964,7.225220,4.078169,3.427003,-3.838494,0.513939,9.242590,-2.995016,9.258652,1.007913,2.595065,-5.996152,3.266973,-6.692238,3.315122,1.477712,-0.640980,3.033476,0.228162,3.894446,-5.443118,-6.201525,-0.878384,-7.999409,-1.677143,4.431423,0.847347,3.363697,-1.179384,3.784309,0.482041,-6.623766,6.543530,4.710697,-8.431492,-2.685190,3.995919,-8.675892,5.856207,7.220670,-4.296223,9.380892,0.023555,-2.168832,-2.448114,4.136178,-2.812167,3.822940,3.032534,-4.032561,5.147032,-6.689084,-4.868582,8.582577,-6.611106,6.265662,3.015752,-0.534898,0.420130,-6.918611,-4.972702,2.298585,2.866002,-5.879706,6.845869,-9.917614,8.652863,4.198614,5.649386,2.528089,-3.088352,-7.153300,9.037811,-1.309127,5.000623,6.576673,-2.272868,8.703739,3.391280,-2.225667,-6.038991,-1.668238,2.022513,6.080215,-3.527261,-9.233801,0.642939,-1.622633,-4.641685,7.883104,-2.474650,8.713831,7.441642,-3.483581,1.903418,2.555691,-6.636766,6.926026,-1.600550,-2.235391,-6.194208,9.930176,-1.267943,-5.922559,-4.300649,-3.440621,-8.875731,3.746183,-1.000981,6.710611,-4.674012,-3.146832,-5.864288,-9.669211,-4.183419,3.230432,-4.526804,5.769440,-4.244904,9.652567,9.145893,0.719406,5.935332,-4.012293,8.845252,4.444845,-7.848792,-6.030363,-7.031383,6.377114,9.819468,9.495299,0.878439,-5.015675,-2.559579,-4.225764,-0.250618,-9.905820,-5.730764,0.136699,-5.414669,4.116731,-5.190346,4.879043,7.397421,-5.652938,8.743339,-6.942834,-9.790398,-6.692247,-9.028861,-6.789833,5.418594,-4.085509,3.380102,5.019482,1.407598,5.024362,-6.993537,-5.705503,2.688508,-7.791735,-7.676444,-4.760033,-0.963257,5.884678,5.070068,5.646738,-3.130205,0.164869,0.551069,4.289114,5.547154,6.598217,1.015838,2.420193,-7.412246,2.215053,-1.082798,5.620042,3.640860,1.213036,-6.652904,5.633257,4.790574,9.796390,4.438556,8.848886,3.831493,-3.700712,-5.758937,4.397378,4.910060,2.826182,-4.321037,-2.942568,8.072900,8.009909,-0.721647,6.451712,3.329434,0.058452,1.239146,4.223250,3.507949,-1.046301,-9.203435,-7.392528,-8.918407,9.201280,-8.785225,-4.986363,-9.823705,0.736732,-8.405914,-0.878422,2.834641,-9.934410,-2.293188,6.075772,6.799738,0.642596,-1.138280,-1.642710,1.749930,6.875602,2.853846,2.317521,1.661487,1.454016,4.164738,0.124525,0.010027,-2.122445,-9.308270,3.024670,6.977471,5.458556,-2.551707,-5.046876,8.428720,3.693463,-0.607467,-2.460865,4.187884,0.373274,1.234458,-1.629657,9.628521,-4.371342,-4.786979,7.534409,-2.753411,4.062278,-4.888697,-4.448714,-7.966407,8.012350,8.533372,-7.228030,1.546917,0.092166,5.856555,2.271119,-5.053543,-5.370887,8.036317,-3.351479,-5.221462,-2.702782,-1.772849,-1.741257,-0.123699,2.606454,-8.698196,-7.224663,0.100581,-3.630560,0.852358,0.585832,-8.751017,7.818420,-2.841623,6.306862,2.926630,2.054934,8.497120,-8.963060,7.917840,9.629563,-1.654556,2.289495,4.704262,-5.631072,4.460998,1.723620,8.312125,5.275707,-2.920179,-9.082653,-3.984245,8.177315,0.735730,4.727500,1.135420,-0.991758,4.016984,-5.153806,-5.336089,7.228607,-3.555117,0.729478,1.465344,7.443096,7.389424,-5.256184,-4.375103,7.113103,2.272484,-6.569504,5.288950,-0.752275,3.690764,-3.247273,2.272225,8.682927,-8.896804,3.792569,-7.775569,3.651082,-0.267341,3.339675,-4.867035,6.504861,-8.776237,-6.558142,-8.419637,-6.799969,7.172200,2.187387,-7.873305,4.723341,6.239937,6.704365,9.435028,-6.137973,-0.049000,-1.274144,-5.852888,-2.289624,-1.362122,9.068461,-6.999602,-6.334540,-6.767152,-3.013463,-3.218133,3.619226,4.329369,7.453075,2.863128,-0.874273,-7.562374,-7.371525,-8.275271,2.235236,-8.575934,-7.732349,-2.214032,-6.152370,-0.475882,1.487629,-0.296146,9.183437,2.987846,3.206249,-6.814905,-7.607929,-5.156532,8.853223,-3.720942,4.359575,9.404902,0.441222,-6.953992,-0.113080,-1.335278,-8.863418,-6.882887,-4.234770,-9.636215,1.885527,-7.133772,9.469175,-0.235024,9.268543,1.218710,0.151720,-9.887342,-2.565394,5.340966,-9.726278,5.950529,-6.570642,-3.385235,1.033817,-5.055528,4.058123,2.398083,-4.438439,5.473577,-2.398572,-8.817889,-4.849771,-1.902100,-3.231687,3.326587,5.309357,1.396787,1.993520,6.506593,-7.117601,1.295227], dtype = "float64")#candidate|4868|(1320,)|const|float64
call_4867 = relay.TupleGetItem(func_1662_call(relay.reshape(const_4868.astype('float64'), [15, 8, 11])), 0)
call_4869 = relay.TupleGetItem(func_1665_call(relay.reshape(const_4868.astype('float64'), [15, 8, 11])), 0)
var_4872 = relay.var("var_4872", dtype = "float32", shape = (4, 15, 10))#candidate|4872|(4, 15, 10)|var|float32
bop_4873 = relay.maximum(uop_4860.astype('int64'), relay.reshape(var_4872.astype('int64'), relay.shape_of(uop_4860))) # shape=(4, 15, 10)
uop_4889 = relay.atan(bop_4873.astype('float64')) # shape=(4, 15, 10)
uop_4896 = relay.asinh(const_4859.astype('float32')) # shape=(4, 15, 10)
func_54_call = mod.get_global_var('func_54')
func_56_call = mutated_mod.get_global_var('func_56')
const_4919 = relay.const([-5.531396,8.340343,9.308675,-4.045802,1.120231,7.883172,6.382162,-5.394640,-8.628132,2.010793,-9.078906,-7.252931,-6.110363,8.690402,1.502116,-7.059905,0.355808,-3.767420], dtype = "float32")#candidate|4919|(18,)|const|float32
call_4918 = relay.TupleGetItem(func_54_call(relay.reshape(const_4919.astype('float32'), [9, 2, 1])), 0)
call_4920 = relay.TupleGetItem(func_56_call(relay.reshape(const_4919.astype('float32'), [9, 2, 1])), 0)
bop_4923 = relay.floor_mod(uop_4889.astype('float32'), relay.reshape(const_4859.astype('float32'), relay.shape_of(uop_4889))) # shape=(4, 15, 10)
func_2914_call = mod.get_global_var('func_2914')
func_2919_call = mutated_mod.get_global_var('func_2919')
const_4930 = relay.const([True,False,False,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,True,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,False,True,True,False,True,False,False,False,False,False,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,False,False,False,True,False,False,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,False,True,True,True,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,True,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,True,False,False,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,False,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True], dtype = "bool")#candidate|4930|(728,)|const|bool
const_4931 = relay.const([2.100757,2.558092,-7.062283,2.718289,-2.990649,-1.586508,-4.312698,-1.039288,-3.953747,8.873518,-4.374948,-6.704851,4.029529,-8.716890,8.893469,4.402478,6.455276,3.614675,-2.373771,0.136833,6.437820,-9.390010,3.598811,-2.433626,7.830161,5.826142,4.642917,-5.166248,-8.345658,6.547056,1.169250,-1.446651,4.100645,-2.308499,9.346089,-2.969792,-4.857164,-3.681212,-5.237093,1.177842,-6.999141,7.647749,-9.750598,-1.748856,7.731300,9.889783,-1.711461,4.757200,5.762849,6.538587,2.269507,5.769623,-4.069485,2.324810,-8.124537,-2.945828,-7.200075,-4.505134,-4.228897,5.985643,8.993963,-5.833269,-9.677978,7.832907,-0.844827,-7.916280,5.400816,6.104584,5.110984,-3.982321,9.863169,-2.923772,-7.002111,6.055731,-6.121146,-1.978473,1.316338,2.646099,-3.933464,6.979402,-6.362985,-0.773618,-3.280612,8.317634,3.621271,6.139230,1.756785,-8.021789,4.937391,-2.063385,-4.713674,0.947377,2.088160,3.526389,3.499127,-4.773435,6.004354,8.935624,-9.518515,4.388446,-2.343873,6.898698,7.173512,-5.191630,2.217881,-1.956190,3.507673,8.800087,-5.275725,3.658907,3.898999,0.250108,-4.882564,-6.514803,-2.858656,-6.017702,2.356128,-6.580702,8.905488,3.233064,2.066082,-2.691411,3.039336,4.996108,2.715142,0.776119,5.415787,3.285799,-6.530888,-9.962371,7.189197,8.730787,-8.584697,1.984686,-3.520727,-6.870734,-1.618461,5.498669,-1.512706,-2.874700,8.159470,3.109506,-5.579970,-2.276608,-4.517491,9.994866,-2.498510,-5.227371,-1.986905,-7.794271,-4.400898,-6.049451,-2.168752,-4.776732,5.475497,-0.293288,4.422223,7.010623,-2.880384,-3.155624,-6.381197,-4.987425,-9.164663,-8.644651,9.080148,-3.829795,3.506096,-9.699094,-2.929018,8.307311,4.816941,-2.367667,6.039493,4.602790,8.249784,-3.077516,1.180779,-8.141283,-1.003189,6.690970,-7.227193,2.214537,-4.605352,9.271754,7.641801,-8.750284,-9.000215,8.675052,-5.826587,8.399402,-0.916143,-4.155523,-2.329692,6.938554,2.626057,-0.504064,-9.903836,2.332949,-9.216050,6.481186,5.990336,-0.136075,-9.302167,5.371039,-3.795632,4.195702,0.144170,3.071288,-5.823594,-5.919242,8.433270,0.652774,-9.264313,-6.878349,4.757409,-7.366165,-2.927012,-5.360468,-6.110110,0.241656,-7.645825,5.977214,-0.243455,-9.874187,-9.853240,-9.670010,8.627330,7.640561,0.938728,-1.319447,-9.299079,7.478175,-7.891521,0.928548,-9.090455,3.511977,9.261830,-1.212375,8.301223,6.004974,9.767070,9.447553,1.022611,-7.486536,4.086217,-9.969339,-4.127781,-3.727984,4.522877,8.646557,-5.678095,0.582057,-7.327099,-1.280997,-6.145918,2.743929,4.154883,-4.954049,6.921373,4.400031,-3.527804,-4.881115,-5.564815,4.041246,5.142589,2.516423,4.333677,3.744552,-3.423786,-8.651932,9.696305,-0.418122,-1.980271,-8.977509,1.731522,-8.543750,4.760671,-3.570509,8.488963,9.865247,7.797284,6.349252,9.480853,-5.436315,-6.381928,-9.410025,-4.969332,-9.156854,-9.517347,-4.510087,1.100923,7.567199,-0.666897,-0.728725,4.821208,-6.499808,-9.384968,4.348159,-6.877426,0.738067,-6.710688,7.024263,-5.156127,-6.191667,-9.484918,-6.555267,7.062177,-9.875469,-2.756772,-3.661132,-6.179909,-7.869583,-6.374035,5.072474,0.694709,2.390018,-0.117762,-3.332319,-3.157172,5.698142,5.315382,-3.827322,9.029086,-1.715229,6.217456,4.114686,6.323986,-2.571920,-4.509242,2.097879,-4.374218,9.678778,6.662009,0.524117,-2.286238,-1.128876,4.035870,4.060788,6.437736,-7.821308,-7.913796,-3.056315,7.925068,3.390620,-1.713134,3.367733,5.103568,-8.598347,-5.167342,-6.083890,-9.887762,-4.146602,-8.953603,5.859375,-7.660833,-2.989323,9.397311,-7.956834,-1.265774,-6.311637,-7.088367,2.087864,6.714027,-2.595602,-6.151448,-3.082202,6.102837,-3.395753,-4.035136,1.432999,9.439264,0.365351,9.952678,8.562228,5.481075,-2.573626,4.400534,4.556304,9.285709,-0.966156,1.845192,6.038323,9.814874,-9.580063,5.306734,-1.549699,2.363922,0.390845,-9.155719,-0.384166,5.445956,0.068377,1.714357,3.241767,5.059359,-3.700628,-7.429456,9.482488,2.795240,-6.760908,-9.856064,5.471004,-8.263407,-7.057216,9.998575,8.385471,7.791428,9.930826,2.120735,-0.383425,-4.111656,5.489825,-5.544968,-5.404883,-1.431817,-1.544482,-8.356244,1.105782,-2.301595,1.338151,-2.651908,-0.655217,8.770293,-8.605793,-1.089332,0.622277,1.021262,-5.974358,-6.472261,0.628668,8.584107,2.858546,7.825446,-7.579917,-4.844388,9.484377,-5.090995,-5.829159,4.187462,0.764888,1.367000,-5.491593,3.396456,-2.944745,-9.618416,4.103275,3.520457,1.285118,1.788195,4.202496,9.970660,-0.646043,-4.684608,8.984741,-7.593250,-1.374883,-0.999300,-3.748956,9.570837,5.476391,8.611390,4.316983,3.377993,5.066155,-7.231259,-5.416615,-8.526210,-9.925535,8.012064,-5.457817,-5.576549,-9.301274,-4.251257,-9.307748,7.601348,6.634867,-0.097922,-3.678834,5.553961,-0.473323,-4.088926,2.253887,-7.829336,0.751628,8.538229,3.519954,-1.893691,-7.266365,-2.409383,-5.211057,-1.711813,-8.978658,-7.769624,-5.260849,6.883065,-7.642549,6.745491,-4.994852,0.936267,-1.113250,5.703469,-0.029252,8.149060,-7.753991,0.581367,7.118023,-7.626863,2.150714,-2.259668,-9.235593,-3.802983,7.045390,-8.821021,2.452877,-1.321211,6.741888,4.624298,7.583655,-6.172136,0.550226,4.318876,-2.940959,-2.817396,-4.318218,7.635521,-2.600917,1.531549,-3.418465,6.443424,9.665867,4.500164,-1.892485,-4.907928,1.218212,8.837346,7.358848,9.113284,3.051758,0.283482,1.154626,-6.150957,-4.444335,8.680862,-2.226691,2.173118,-7.580286,-6.155911,8.052425,6.927947,7.173847,6.679349,7.120777,-7.311424,2.125537,-1.461083,2.435214,-7.098231,5.157472,-9.790363,7.171556,7.064315,-0.541470,-3.388366,0.183411,-2.916667,-2.249742,9.892211,-8.419920,-2.626725,9.435477,-0.678806,-1.355901,-9.080711,0.557075,2.633129,-4.751866,-1.806320,-0.623900,5.721771,-9.012769,-7.442322,4.159875,-2.122913,-3.172283,0.825254,-0.196892,-9.095111,7.683047,-4.588842,7.302820,6.176094,-9.616805,-1.944195,-1.738878,-1.691051,8.039900,0.531592,-6.505820,-7.634048,3.390409,-7.568651,-0.659063,-4.539146,-4.643446,-3.646904,-1.554235,1.592522,1.917924,6.367974,3.323994,7.909312,-0.105943,-8.087988,-0.849362,7.452778,-9.596881,7.912143,-0.605091,-5.852380,-2.247762,-9.904478,-6.362705,-2.504709,1.776701,1.624171,4.898407,9.084570,-0.260743,2.114123,0.628883,-1.588218,-1.982785,-2.976676,3.471366,3.946821,8.103451,-0.953814,-7.987312,1.011107,-1.259932,-1.749260,5.986588,1.993810,6.053418,7.094710,-3.859495,1.688814,7.117505,5.230477,-4.765810,7.746943,1.180083,-3.528453,-7.224068,6.867073,-3.972308,-0.500873,-9.491249,5.052814,-3.673032,-0.917997,-9.822396,-6.061836,3.151006,-8.551265,-9.974663,3.023454,9.775535,2.603956,4.606844,-3.259593,9.139204,-0.020059,2.138061,2.971636,-7.622930,-3.723692,5.493609,-4.285698,-1.886182,5.804352,-5.583346,-5.439917,-7.445920,0.044236,6.103125,1.157497,2.411496,-5.701246,-8.268804,-9.160378,5.435416,7.838441,6.850043,7.238777,8.866930,5.352883,6.089618,7.931626,7.699067,2.946938,1.190840,9.587312,-3.318203,3.712640,-7.531016,9.369674,-8.412966,-4.149743,1.097817,5.220921,-4.174333,-6.318041,9.394888,5.016082,5.140276,4.225373,-0.619887,6.935489,-6.590673,6.713335,-4.478480,-0.518644,7.208374,2.546984,-6.676638,3.754975,3.603927,-6.590439,-7.346133,3.600462,-0.371906,-7.176134,-2.672192,-0.757461,-4.141479,9.870064,-7.902540,0.829952,-1.276517,-5.708437,5.513778,-3.106865,-3.897311,5.786770,-5.425649,-6.025700,7.296743,7.926950,-2.808779,-2.016225,4.773108,2.418134,9.414586,-9.363854,9.888702,-5.370240,-5.398981,5.937578,5.165676,1.472157,-8.642287,9.103703,-9.937816,4.549826,-2.228203,7.780389,9.247448,6.925373,4.133135,-7.774421,5.409525,-1.427140,6.660048,-4.028890,-4.875103,5.908885,0.511925,2.779528,8.815021,-0.939668,-5.534262,-4.642607,-8.732186,4.061844,5.808172,5.637954,-3.680455,-6.075408,6.151433,8.992108,5.816780,-8.623367,4.453701,-5.064010,-7.343700,-1.429077,6.376317,-5.127544,-3.318537,6.257760,-4.704778,-6.619211,-5.222409,-7.107701,0.922802,-4.487509,-1.017907,9.548581,-7.084500,9.303598,-0.595196,0.313031,-2.322818,-6.851303,0.765029,-7.935139,-1.986568,6.860237,7.753544,-8.588165,8.016398,9.336863,-9.543323,2.048900,0.784652,7.002302,-0.782705,7.360094,5.925795,6.249759,3.359508,-7.980807,9.037857,2.407648,5.672327,0.964306,-8.176497,9.856099,-3.970675,6.132157,8.995347,1.410015,8.698474,-8.092813,-9.981547,-2.828905,5.642223,7.986059,-0.138508,6.921287,0.469589,-8.442189,-1.161566,-0.016075,-3.165288,-9.991810,-4.940435,8.650742,-3.714058,-4.217504,5.550437,-6.022167,2.944269,5.912383,-1.463104,-3.068702,-7.700401,6.699531,-2.483529,6.847839,9.199825,-5.799486,8.075705,-7.357259,7.919839,2.970774,3.268582,7.148458,2.101134,-1.739503,6.221710,2.004700,1.655520,-3.784264,-7.706121,-4.759494,3.296760,-0.283287,-4.835329,-6.021355,0.920591,-1.991235,-6.638190,-0.923084,5.500668,5.526173,1.096861,-8.674930,-2.477701,-4.805399,-9.708722,-5.555085,5.411100,-3.551346,7.842531,5.610156,-7.867388,3.719836,4.065680,4.408375,-1.737511,9.145109,5.655988,-3.196830,0.479670,5.381715,1.334437,4.185737,-0.419600,-5.788137,5.527638,-9.080684,-5.098335,-0.342881,6.686965,-5.362581,-3.729389,5.594589,8.812710,6.668084,-1.051914,-2.534067,0.382952,-8.939619,3.260328,6.411357,-9.183159,1.276568,-6.301391,-3.508642,2.643055,8.904163,9.292879,2.711237,8.525682,5.125908,4.568165,6.503195,7.474328,-8.268682,6.483935,0.912265,-1.030056,-8.809445,-3.087455,-0.278043,9.915075,-3.351027,3.843149], dtype = "float32")#candidate|4931|(960,)|const|float32
const_4932 = relay.const([-10,-2,2,-3,8,-2,1,2,7,1,-3,-10,3,-6,-1,4,1,-10,-7,-10,4,-10,7,-6,9,10,8,-2,3,-2,8,-6,3,-2,10,-7,-5,-9,9,7,-3,-10,6,-3,-10,3,-2,9,-6,-8,-4,-3,4,-1,7,2,4,2,4,9,2,-3,1,-2,4,5,6,7,10,-2,-6,7,-6,10,-4,-3,-10,-3,-10,-10,-8,2,-7,-4,7,-3,10,-4,9,-6,4,-1,8,7,-10,10,-6,-2,1,7,1,4,-2,-8,4,-3,-5,-3,8,-9,-7,-6,1,-5,5,-4,-1,-8,9,-3,-1,-1,3,-9,6,-1,7,7,7,-2,-1,9,-9,7,6,-10,10,-3,-7,-4,-10,-5,4,5,-1,4,-7,8,-1,-3,6,-3,-5,9,-9,-3,10,6,-10,-7,-9,-3,-3,2,5,-8,7,9,-10,-3,5,-9,-6,1,5,-8,-9,3,-1,6,10,-1,7,-10,2,5,-1,-4,-9,-4,-3,1,3,-1,-8,-4,-3,5,7,-5,1,8,-4,1,-7,10,-9,-1,-4,9,-1,2,10,-2,-5,7,6,-9,8,-6,5,5,6,8,-8,3,2,1,-7,10,-9,9,4,8,6,-7,9,-6,-7,4,-1,-5,6,-4,9,4,-3,-5,-1,-1,8,-9,-1,1,-1,-3,6,7,2,-3,-9,10,10,-1,2,-9,1,9,-4,9,-7,-2,-10,5,2,4,-4,3,2,6,-5,4,2,-7,-6,-6,1,-8,-6,-5,-8,8,-5,-8,5,1,-9,-8,-10,9,-3,1,-2,-5,9,-5,-8,10,5,10,-2,-2,10,3,-4,8,-7,1,5,8,-5,2,9,7,-10,4,10,4,-3,-1,-9,-4,5,6,1,-3,-10,-10,-7,-10,3,-10,9,4,8,9,-2,4,10,7,-7,-10], dtype = "int64")#candidate|4932|(352,)|const|int64
call_4929 = relay.TupleGetItem(func_2914_call(relay.reshape(const_4930.astype('bool'), [14, 13, 4]), relay.reshape(const_4930.astype('bool'), [14, 13, 4]), relay.reshape(const_4931.astype('float32'), [120, 8]), relay.reshape(const_4932.astype('int64'), [2, 176]), ), 4)
call_4933 = relay.TupleGetItem(func_2919_call(relay.reshape(const_4930.astype('bool'), [14, 13, 4]), relay.reshape(const_4930.astype('bool'), [14, 13, 4]), relay.reshape(const_4931.astype('float32'), [120, 8]), relay.reshape(const_4932.astype('int64'), [2, 176]), ), 4)
func_920_call = mod.get_global_var('func_920')
func_923_call = mutated_mod.get_global_var('func_923')
const_4945 = relay.const([True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,False,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,True,False,False,False,True,True,False,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,True], dtype = "bool")#candidate|4945|(880,)|const|bool
call_4944 = func_920_call(relay.reshape(const_4945.astype('bool'), [8, 11, 10]))
call_4946 = func_920_call(relay.reshape(const_4945.astype('bool'), [8, 11, 10]))
output = relay.Tuple([call_4867,const_4868,uop_4896,call_4918,const_4919,bop_4923,call_4929,const_4930,const_4931,const_4932,call_4944,const_4945,])
output2 = relay.Tuple([call_4869,const_4868,uop_4896,call_4920,const_4919,bop_4923,call_4933,const_4930,const_4931,const_4932,call_4946,const_4945,])
func_4949 = relay.Function([var_4872,], output)
mod['func_4949'] = func_4949
mod = relay.transform.InferType()(mod)
mutated_mod['func_4949'] = func_4949
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4950 = relay.var("var_4950", dtype = "float32", shape = (4, 15, 10))#candidate|4950|(4, 15, 10)|var|float32
func_4949_call = mutated_mod.get_global_var('func_4949')
call_4951 = func_4949_call(var_4950)
output = call_4951
func_4952 = relay.Function([var_4950], output)
mutated_mod['func_4952'] = func_4952
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5026 = relay.const([[[-2,-4,5,-9,9,-2,-7,-2,-1,5,4,10,7,2,7],[-1,4,-1,-3,1,10,-4,6,-5,-7,-10,6,-5,-2,-8],[4,9,-5,1,3,-7,-5,1,-7,10,-9,-6,-10,7,-8],[2,6,-4,-4,-8,-6,1,6,-5,-10,-8,5,1,5,-9]],[[7,-8,7,-4,6,-9,7,-4,-1,7,-5,-8,10,-8,-1],[9,2,-1,-9,9,6,-6,5,-7,2,-8,2,-7,-7,-7],[-4,4,-6,-5,1,10,2,-2,7,-5,-5,6,-9,10,-2],[2,-7,-1,3,-8,10,2,4,-10,3,-10,6,-8,10,9]],[[-6,7,-7,-4,6,5,-10,9,10,4,3,-6,9,4,-9],[-3,-5,-8,-1,-5,4,5,6,7,1,3,-5,-5,-10,-6],[-1,6,9,8,-6,-7,2,6,5,-6,-5,2,-8,6,3],[1,-1,2,10,-10,-3,-1,-10,-5,-2,-1,9,-9,-8,7]],[[7,7,-4,7,-9,4,-5,-10,-2,10,-5,-1,2,-3,2],[-4,-9,-6,10,-9,-2,2,8,2,7,1,3,-8,1,7],[-3,-4,-4,5,6,2,9,-5,7,6,-1,6,9,1,7],[-5,3,-3,2,8,4,-5,-7,9,-10,-6,1,5,7,-2]],[[-7,5,8,4,7,-7,-5,3,3,-4,6,3,5,9,-5],[-6,-10,2,-10,8,-10,10,7,7,-5,2,2,-1,3,-1],[-9,-1,-10,6,1,1,1,9,5,10,9,-3,9,-8,-2],[-1,7,-1,-6,9,3,9,9,3,-5,6,-7,3,-3,-8]],[[-3,9,2,-5,8,-8,-3,-8,6,-10,4,-3,5,7,-10],[-6,-4,10,-4,8,10,7,-2,10,6,-7,4,-1,7,-10],[5,-9,-8,6,-4,7,10,-1,-9,-8,-1,-7,-6,-5,-8],[-9,8,1,7,-1,4,8,2,-4,-10,-7,-9,5,3,-10]],[[4,4,-9,9,4,6,-8,10,4,10,-8,3,9,7,-8],[3,-8,4,-1,1,3,-1,-4,8,7,-9,6,4,-2,9],[8,9,-8,1,-6,-5,4,7,-1,5,4,2,-8,5,-9],[-7,8,-3,1,-6,-10,3,10,-9,8,6,-8,1,-9,5]],[[3,-5,9,7,-3,6,-5,5,-2,6,-8,9,-5,3,9],[9,3,-2,3,-2,-2,10,-9,7,-9,9,-7,7,-1,5],[-10,1,-10,6,2,-10,8,6,-2,9,5,-3,8,-4,10],[-10,-4,4,4,7,-9,4,4,-5,2,2,-1,8,6,-10]],[[-1,-9,-1,-9,4,-3,-3,-8,-7,-5,-8,6,3,1,-8],[-6,-1,-4,-7,-7,8,-1,9,8,-4,-6,-10,-2,-8,2],[3,-5,-10,-7,1,-7,-8,-10,10,4,2,8,4,-7,-6],[8,-5,-6,-1,2,-8,3,-9,-2,2,7,-8,6,-7,-6]],[[-1,2,9,-1,-10,-4,-3,-4,-1,-3,2,7,-5,4,7],[6,-6,4,-8,-6,9,9,-9,6,9,5,9,3,-8,-7],[7,-4,2,8,4,-10,-6,-7,-2,-8,-4,4,8,7,-6],[-2,-10,8,4,-3,2,3,2,6,5,-7,-7,-10,10,-1]],[[-4,3,-9,5,9,-4,-1,8,7,7,7,8,-7,-1,8],[5,-4,7,9,7,-1,-8,7,6,-1,-5,9,4,-4,2],[6,-7,6,-6,-5,3,-3,10,9,4,-1,10,-2,5,-9],[9,4,8,9,5,6,-2,10,-10,10,-1,-5,-4,-5,-5]]], dtype = "uint64")#candidate|5026|(11, 4, 15)|const|uint64
const_5027 = relay.const([[[-3,-3,9,8,7,8,8,-9,-8,1,-10,-7,-7,-6,8],[3,2,-2,7,-2,7,-2,-9,4,-2,1,10,-4,-4,-2],[-4,-6,2,-5,1,-5,9,-1,-10,6,-4,4,6,10,10],[-2,8,9,5,-7,3,-5,9,9,-5,-1,-3,-10,3,-8]],[[-2,7,8,10,-2,-2,-8,7,4,-9,2,-5,-5,3,7],[-2,2,10,9,-3,-6,-8,-1,6,-3,-4,6,-2,-8,-10],[-6,5,6,-8,-5,6,6,-8,10,-6,-8,2,2,7,-10],[-9,3,-6,1,-4,5,-10,5,-1,1,-10,8,6,-5,-3]],[[10,-3,6,-4,3,3,-9,10,10,-10,1,-3,1,10,-2],[3,3,-7,-5,-5,-8,-8,-1,2,2,-4,4,-1,-9,-5],[3,5,3,-6,2,9,-2,-8,3,-6,-3,-7,10,-6,-10],[9,6,-1,5,-9,3,-8,3,7,7,-5,4,1,-10,2]],[[-7,-5,-7,4,-6,-1,-3,3,7,5,1,-8,2,8,6],[3,-5,6,3,-3,5,9,5,3,9,-7,6,7,5,-9],[7,4,-8,-1,-2,-3,2,-4,-1,-10,3,-3,5,8,-7],[-4,-8,-6,1,-9,-4,2,4,5,-1,8,-6,-6,2,2]],[[-10,4,7,6,7,-2,10,1,10,-9,-2,-6,7,9,5],[-9,-10,-2,-4,6,6,4,-4,9,-10,-4,3,-9,1,2],[-1,-2,5,-9,-4,2,-5,-7,-1,4,3,4,-9,8,2],[7,-2,-6,2,-8,2,-8,6,7,-10,-9,-8,-10,-7,-6]],[[-8,-4,-1,9,-8,10,5,-7,1,-8,-5,-5,1,2,4],[9,-3,4,5,-9,-8,-3,7,6,3,3,1,5,-3,-10],[-6,-3,-3,-5,10,-3,3,5,-5,-9,3,6,-10,-7,-7],[2,-5,-4,-3,1,5,4,-10,-7,8,-3,8,8,-2,2]],[[10,-7,-10,7,2,-9,-2,4,-1,-6,8,1,-1,-5,4],[4,-3,10,2,9,5,-10,10,-8,-4,10,-4,-8,-2,5],[2,1,-10,1,10,3,-7,-2,-6,7,-5,-2,2,1,4],[-1,7,2,-2,-7,-4,-10,5,9,4,-1,-5,-9,10,-2]],[[-8,-1,-4,4,7,-2,4,-1,6,10,5,1,2,-6,10],[9,2,6,-4,-4,2,9,8,6,-7,3,6,2,4,2],[-8,5,-2,6,1,-4,-7,-10,-2,-8,3,-3,-7,-8,-2],[8,-3,10,4,-3,7,10,2,-9,-8,-5,2,9,2,-2]],[[-8,-4,1,-8,9,2,9,-2,-3,7,-9,10,10,-3,-7],[-9,-5,-5,7,3,-5,6,8,4,8,-3,-4,10,-4,-8],[-8,-3,-2,-9,-2,-8,9,10,9,-9,7,-6,4,-7,-1],[-9,-4,1,-3,-4,7,3,-6,-3,8,4,3,6,-7,8]],[[-8,6,1,7,-10,-10,-4,2,5,7,-9,-9,-10,-4,8],[5,-10,9,8,5,10,6,-8,6,-6,-9,1,-1,-4,7],[6,-9,3,-10,-5,-1,-2,-1,-7,-6,-7,10,-4,8,-6],[2,-7,10,3,10,-9,-5,8,-1,-10,-10,3,-4,10,9]],[[-6,-8,3,2,-10,-6,-5,-9,-4,10,9,-10,9,-1,7],[-5,-10,8,10,1,-4,10,5,-4,2,-4,3,3,-9,3],[4,-9,-8,10,-6,-2,10,-2,3,-6,2,-4,-6,-9,3],[1,7,-4,6,4,6,6,10,-3,-6,6,10,2,-8,3]]], dtype = "uint64")#candidate|5027|(11, 4, 15)|const|uint64
bop_5028 = relay.multiply(const_5026.astype('uint64'), relay.reshape(const_5027.astype('uint64'), relay.shape_of(const_5026))) # shape=(11, 4, 15)
func_2914_call = mod.get_global_var('func_2914')
func_2919_call = mutated_mod.get_global_var('func_2919')
const_5039 = relay.const([True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,True,True,True,True,True,True,True,True,False,True,False,False,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,True,True,True,False,True,True,True,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,True,True,False,False,True,False,False,True,True,False,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,True,False,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,True,False,False,True,True,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,True,True,False,False,True,False,False,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,True,False,False,False,True,True,False,False,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,False,False,True,False,False,False,False,False,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,True,True,False,True,False,False,False,False,True,False,False,False,True], dtype = "bool")#candidate|5039|(728,)|const|bool
var_5040 = relay.var("var_5040", dtype = "float32", shape = (960,))#candidate|5040|(960,)|var|float32
const_5041 = relay.const([7,-10,-6,-2,7,-1,4,-9,8,-6,4,-7,-5,-2,-1,-5,-10,-3,1,3,9,-6,-7,-3,7,-2,-7,-3,3,5,6,-10,4,7,7,5,3,-9,8,-7,-5,-5,-5,5,8,10,2,2,-3,5,-8,8,-4,2,-2,7,6,-8,-2,9,-6,4,2,6,-7,-7,-3,-6,3,9,5,-3,-7,1,5,-1,-2,-1,-3,8,-9,-4,-2,-9,8,-10,-3,-3,-5,10,-8,-3,8,-3,-10,-10,7,-3,-6,-6,2,7,-1,6,9,-6,-8,5,10,4,10,2,10,8,2,10,10,-9,-10,-6,2,-5,-10,4,-8,-3,4,6,3,-2,8,6,1,-10,10,-1,-10,3,-9,-10,-7,5,-8,-9,-7,-5,5,2,9,-1,9,-3,10,-9,-3,6,-3,5,-4,-4,5,5,-3,6,-2,-10,10,-10,-9,7,-1,4,-6,7,3,-10,-1,8,5,-5,-2,-7,-8,1,7,1,-3,-2,-4,-8,10,-5,4,-6,-7,3,6,10,-7,1,-10,-2,7,-9,-10,-10,-4,1,8,6,-8,5,-1,8,-7,-1,-1,-10,-6,-1,-8,9,8,2,7,1,9,9,-4,-7,4,-10,3,-5,-10,9,9,-10,8,-1,9,2,2,7,8,7,-6,-9,6,9,-10,2,6,6,-3,1,-1,-2,-4,-6,-5,-6,-9,-9,9,-1,-8,-10,-8,-10,-3,2,4,8,-3,2,-9,-8,-1,5,4,-1,-2,9,-7,-8,-8,6,-6,-1,9,8,2,-6,2,-3,9,1,6,9,8,4,10,9,-6,-7,-4,5,-1,-8,-4,1,6,-3,1,6,1,-5,-3,9,5,-6,-10,-4,2,4,-3,-9,9,3,-8,-1,-8,10,-1,1,-4,2,8,7,-7,5,-7,1,10,6,-1,-5,-3,2,-5,-9], dtype = "int64")#candidate|5041|(352,)|const|int64
call_5038 = relay.TupleGetItem(func_2914_call(relay.reshape(const_5039.astype('bool'), [14, 13, 4]), relay.reshape(const_5039.astype('bool'), [14, 13, 4]), relay.reshape(var_5040.astype('float32'), [120, 8]), relay.reshape(const_5041.astype('int64'), [2, 176]), ), 4)
call_5042 = relay.TupleGetItem(func_2919_call(relay.reshape(const_5039.astype('bool'), [14, 13, 4]), relay.reshape(const_5039.astype('bool'), [14, 13, 4]), relay.reshape(var_5040.astype('float32'), [120, 8]), relay.reshape(const_5041.astype('int64'), [2, 176]), ), 4)
func_3517_call = mod.get_global_var('func_3517')
func_3521_call = mutated_mod.get_global_var('func_3521')
const_5047 = relay.const([[-3.129931],[5.880452],[-2.043056],[-4.431076],[7.808780],[-6.773739],[7.966200],[6.804079],[5.933332],[8.955233],[-1.715706],[7.837844],[-9.325781],[-5.704096],[-2.547426],[3.302969],[-6.387163],[-1.269919],[2.645709],[2.809807],[9.570316],[1.351266],[6.591168],[-0.403559],[-0.177972],[-4.894779],[9.869843],[1.033180],[-2.890172],[-9.012631],[-2.172589],[7.432405],[8.701781],[-0.253736],[-5.599085],[9.965767],[2.927529],[9.699620],[0.901702],[-6.176171],[5.054841],[-7.853561],[-5.148442],[-1.026056],[-6.467341],[-1.912414],[2.025685],[8.863753],[7.645733],[4.646279],[8.845984],[9.380040],[-9.668325],[-2.929821],[-3.784093],[0.244478],[0.357813],[-8.913606],[5.195784],[-5.142359],[-9.582958],[8.563544],[3.019836],[-1.937054],[-7.073120],[-6.943931],[-0.220079],[-6.337282],[-9.668539],[-5.882170],[2.769373],[-5.369862],[-8.172035],[6.175683],[-9.360867],[6.695187],[-3.558890],[-1.604563],[1.601705],[-0.352085],[-9.998798],[0.624803],[-6.255805],[1.167584],[-8.778719],[-7.746844],[1.272636],[-3.026990],[3.272231],[-9.896964],[-1.625312],[-7.522823],[-4.955646],[-5.102791],[5.742022],[2.664179],[2.536471],[-4.555400],[-9.658563],[8.812514],[-5.830770],[6.485277],[-3.376023],[8.347894],[7.264688],[3.633567],[9.929265],[-6.526135],[-0.194309],[5.678768],[7.614276],[-9.867291],[6.661363],[-1.083754],[-0.469875],[4.863421],[8.570679],[5.910700],[-6.219105],[-0.666548],[-6.249254],[2.468314],[8.747483],[4.413733],[-1.978025],[-9.253315],[9.892674],[8.007551],[3.191105],[-7.311287],[3.565615],[-7.224845],[-0.763982],[-6.245435],[-1.459100],[-8.835668],[1.270201],[-9.550207],[6.823934],[-0.347640],[-9.343628],[8.630448],[9.402873],[8.271618],[1.617858],[5.819448],[4.243048],[7.483606],[5.442611],[-8.771068],[-8.460954],[-3.546884],[0.734007],[1.038752],[-3.911674],[-8.350858],[-3.337268],[-3.876060],[-7.217931],[-4.052693],[5.485062],[-2.619547],[-2.240295],[4.407059],[-3.799271],[6.083759],[-5.933148],[-4.109865],[8.697063],[7.705737],[0.158674],[-9.435459],[8.710270],[-5.596811],[-4.903855],[1.380315],[-3.673868],[-7.123433],[-8.824507],[-1.525734],[-9.528670],[9.082748],[3.140012],[-9.439978],[3.427436],[-9.084238],[4.108591],[-3.385012],[6.101207],[1.518891],[-5.648554],[9.842050],[-3.956847],[4.715012],[1.930278],[9.750573],[3.410704],[3.283952],[-7.276905],[9.519350],[9.104361],[2.893254],[1.327688],[7.740586],[-8.569441],[-9.276166],[-4.294847],[3.750565],[-4.815475],[1.803539],[-2.492635],[7.504675],[3.943158],[-5.658471],[-9.102293],[-3.880688],[3.841697],[-4.340234],[4.260665],[1.577952],[-6.466301],[-5.571752],[5.397471],[-4.536440],[-2.298276],[-9.555318],[-0.235649],[4.857975],[-1.097712],[-6.825285],[6.276065],[-1.611973],[-7.350373],[2.075356],[-2.084130],[8.995540],[1.175746],[2.512013],[1.713205],[-2.826476],[1.106677],[-1.295922],[-4.161334],[-3.959748],[6.983527],[7.292429],[1.449455],[0.537053],[-6.304654],[1.517254],[6.396844],[-6.698647],[7.176595],[9.687780],[7.107810],[-9.072772],[-0.472410],[-8.418160],[-3.948390],[9.341752],[1.090815],[2.941031],[-7.659305],[-8.208000],[1.161978],[-2.309020],[-7.064249],[8.493050],[-0.129965],[-4.336996],[-2.659047],[8.107330],[0.230379],[3.591472],[-9.406316],[6.011033],[4.467777],[-7.489166],[3.400797],[5.312858],[-4.375026],[7.099716],[-5.194775],[-3.838436],[-2.345140],[-1.076228],[-5.624718],[6.672649],[8.183538],[6.028863],[-1.090360],[-8.374297],[8.993559],[2.208154],[0.226268],[-0.544586],[-8.174979],[8.009771],[-7.700121],[-2.181486],[-5.714326],[-5.127646],[-7.021661],[6.714710],[-8.982036],[9.123257],[4.233368],[5.552171],[-1.070310],[-4.040286],[5.554210],[2.813369],[-8.267203],[-3.735081],[5.071778],[3.807472],[5.417782],[-5.184922],[-4.095792],[3.150815],[-0.800062],[9.469234],[-4.521956],[9.400739],[0.988850],[7.484744],[-3.193055],[9.065172],[7.830473],[7.486095],[-2.827054],[-0.188345],[-9.733156],[5.702892],[-9.168438],[-0.756175],[9.185392],[5.640551],[-1.548235],[-9.323377],[-7.209085],[-2.181593],[-5.971848],[8.994103],[7.873585],[-3.650647],[-0.269557],[6.646855],[8.824869],[0.764247],[7.587204],[7.378753],[5.844181],[2.150791],[1.826275],[7.514190],[5.095876],[-8.932930],[1.092304],[4.336750],[-9.104010],[-7.836650],[-9.058924],[-6.461737],[-8.116224],[-4.540433],[1.096406],[-8.297503],[-4.393448],[-4.374484],[0.031195],[2.915974],[6.216795],[8.130785],[2.509084],[7.192584],[-0.723618],[-8.765918],[2.807910],[1.028090],[-0.244678],[6.413747],[5.609727],[-2.225705],[5.122222],[5.441866],[8.265697],[7.627812],[-0.958284],[6.327294],[9.450026],[0.835240],[0.717641],[6.098639],[-3.802290],[-7.806865],[-9.472255],[-6.840376],[-1.704737],[1.295660],[7.923998],[-3.206881],[8.330069],[7.924505],[-4.896523],[8.920534],[7.024025],[-8.136831],[9.174308],[2.490124],[-6.894650],[-3.615922],[-7.882440],[-6.218375],[-0.573047],[-6.777742],[-2.541593],[-3.265758],[2.006659],[9.302382],[-5.663908],[6.036998],[0.748582],[-0.840037],[8.738369],[9.362998],[-3.662038],[-8.568497],[-6.170636],[6.348624],[-5.727862],[5.868810],[-1.055890],[-2.683620],[8.612459],[-1.708477],[9.188962],[-4.789937],[6.873155],[4.649062],[-0.845455],[-9.426300],[-1.815921],[6.743941],[5.414086],[2.575124],[1.721227],[-3.025595],[-2.604898],[4.250969],[-8.147025],[-8.682571],[2.135802],[-0.587616],[1.409001],[-4.413241],[-8.192901],[-6.987843],[2.700275],[-4.470138],[-9.626440],[1.000820],[-1.981497],[-3.722461],[-3.681538],[-6.230003],[6.815867],[-3.916287],[0.685710],[9.643864],[-2.889792],[5.626625],[-0.406573],[-8.011073],[7.648934],[-6.637855],[-8.337402],[4.143339],[2.457397],[-4.026450],[1.739598],[-6.825974],[5.388065],[-1.225589],[4.148757],[8.955511],[8.858110],[4.575191],[4.849333],[5.353816],[-6.881663],[-9.292441],[6.751023],[6.316412],[4.160547],[1.203392],[-0.785004],[3.598681],[-1.621034],[0.087081],[8.621491],[-5.921057],[0.736272],[-1.923149],[7.528927],[7.041200],[7.462055],[-5.365441],[-6.291421],[2.709690],[1.311290],[-5.435152],[-3.076268],[8.022950],[8.957449],[2.116367],[-3.264392],[3.201225],[5.037241],[-2.876397],[-4.630951],[-4.904477],[9.071963],[-2.383152],[-5.720453],[-6.188845],[-9.151256],[3.757024],[-7.364463],[-6.566337],[9.147744],[0.007250],[5.325484],[7.759672],[-0.918130],[1.593907],[-3.986592],[8.421419],[-9.685736],[9.632361],[9.016498],[3.642847],[-9.315734],[2.428213],[3.992851],[7.285161],[4.458724],[-6.153689],[3.339625],[1.689792],[7.101489],[-5.542602],[-0.190632],[-2.884688],[-6.039899],[2.024588],[4.709180],[2.800036],[9.050631],[-6.296524],[-0.068692],[-0.231369],[-6.364181],[-5.835373],[-0.143935],[-9.124119],[-6.145395],[9.938927],[-6.117143],[-2.975323],[3.168904],[-0.970777],[-7.185854],[4.956463],[-0.581177],[-5.066382],[7.507091],[-2.790562],[-3.355442],[1.307327],[-8.805261],[-3.506869],[7.127778],[5.014244],[3.829839]], dtype = "float32")#candidate|5047|(585, 1)|const|float32
call_5046 = func_3517_call(relay.reshape(const_5047.astype('float32'), [13, 3, 15]), relay.reshape(const_5047.astype('float32'), [13, 3, 15]), )
call_5048 = func_3517_call(relay.reshape(const_5047.astype('float32'), [13, 3, 15]), relay.reshape(const_5047.astype('float32'), [13, 3, 15]), )
output = relay.Tuple([bop_5028,call_5038,const_5039,var_5040,const_5041,call_5046,const_5047,])
output2 = relay.Tuple([bop_5028,call_5042,const_5039,var_5040,const_5041,call_5048,const_5047,])
func_5057 = relay.Function([var_5040,], output)
mod['func_5057'] = func_5057
mod = relay.transform.InferType()(mod)
mutated_mod['func_5057'] = func_5057
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5058 = relay.var("var_5058", dtype = "float32", shape = (960,))#candidate|5058|(960,)|var|float32
func_5057_call = mutated_mod.get_global_var('func_5057')
call_5059 = func_5057_call(var_5058)
output = call_5059
func_5060 = relay.Function([var_5058], output)
mutated_mod['func_5060'] = func_5060
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5224 = relay.var("var_5224", dtype = "float64", shape = (12, 1, 6))#candidate|5224|(12, 1, 6)|var|float64
uop_5225 = relay.atan(var_5224.astype('float64')) # shape=(12, 1, 6)
bop_5232 = relay.logical_and(uop_5225.astype('bool'), relay.reshape(var_5224.astype('bool'), relay.shape_of(uop_5225))) # shape=(12, 1, 6)
func_4194_call = mod.get_global_var('func_4194')
func_4197_call = mutated_mod.get_global_var('func_4197')
var_5236 = relay.var("var_5236", dtype = "uint32", shape = (450,))#candidate|5236|(450,)|var|uint32
call_5235 = relay.TupleGetItem(func_4194_call(relay.reshape(var_5236.astype('uint32'), [10, 5, 9]), relay.reshape(var_5236.astype('uint32'), [10, 5, 9]), ), 0)
call_5237 = relay.TupleGetItem(func_4197_call(relay.reshape(var_5236.astype('uint32'), [10, 5, 9]), relay.reshape(var_5236.astype('uint32'), [10, 5, 9]), ), 0)
func_3826_call = mod.get_global_var('func_3826')
func_3834_call = mutated_mod.get_global_var('func_3834')
const_5241 = relay.const([10,8,-1,-4,3,7,-6,2,-3,9,2,-6,-8,10,-9,-8,3,5,-3,6,6,-5,-8,-4,-6,4,-1,-8,5,3,-1,4,-8,-9,9,7,9,-10,7,-10,6,-2,6,-6,-8,-4,-3,-2,-7,-4,-6,-4,10,-2,7,-1,-5,10,3,-4,-6,-9,-7,1,-9,10,3,10,7,4,1,-7,-8,-8,2,3,10,-8,-10,3,-2,-7,-9,10,-7,10,-10,6,1,-1,8,4,4,7,8,5,2,-9,-9,7,-5,-5,3,3,7,-8,5,-1,1,-5,7,-3,4,-10,-10,2,-3,10,-10,9,-6,10,-8,-2,-10,-1,9,-6,5,7,-2,-3,-5,2,-8,1,-9,-7,2,7,8,-9,-2,-9,2,6,-2,10,4,3,4,-5,-2,9,6,8,-3,-3,3,-6,8,8,3,-9,1,-6,-5,7,5,-3,-1,5,9,3,-9,-6,2,-1,3,9,-2,-6,-6,-4,8,-4,-10,5,6,-3,6,4,-3,-3,4,10,-7,-3,-1,5,-8,-8,-5,-10,-2,8,2,8,-6,4,2,-6,-10,1,-7,1,-3,-6,4,1,-8,-6,2,10,6,8,5,5,4,-9,10,8,8,4,-9,2,6,10,3,-8,3,6,-9,-5,9,-5,3,4,5,-7,-5,-4,8,-10,5,1,3,5,-10,-6,6,8,3,3], dtype = "int8")#candidate|5241|(264,)|const|int8
var_5242 = relay.var("var_5242", dtype = "uint16", shape = (45,))#candidate|5242|(45,)|var|uint16
var_5243 = relay.var("var_5243", dtype = "int64", shape = (56, 28))#candidate|5243|(56, 28)|var|int64
const_5244 = relay.const([True,False,True,True,False,False,True,False,False,True,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,True,True,False,False,True,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,False,False,True,True,True,False,True,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,False,False,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,False,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,True,True,False,False,False,True,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,True,False,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True,False,True,True,True], dtype = "bool")#candidate|5244|(880,)|const|bool
var_5245 = relay.var("var_5245", dtype = "bool", shape = (728,))#candidate|5245|(728,)|var|bool
var_5246 = relay.var("var_5246", dtype = "float32", shape = (960,))#candidate|5246|(960,)|var|float32
call_5240 = relay.TupleGetItem(func_3826_call(relay.reshape(const_5241.astype('int8'), [12, 2, 11]), relay.reshape(var_5242.astype('uint16'), [1, 45]), relay.reshape(var_5243.astype('int64'), [392, 4]), relay.reshape(const_5244.astype('bool'), [8, 11, 10]), relay.reshape(var_5245.astype('bool'), [728,]), relay.reshape(var_5246.astype('float32'), [960,]), ), 7)
call_5247 = relay.TupleGetItem(func_3834_call(relay.reshape(const_5241.astype('int8'), [12, 2, 11]), relay.reshape(var_5242.astype('uint16'), [1, 45]), relay.reshape(var_5243.astype('int64'), [392, 4]), relay.reshape(const_5244.astype('bool'), [8, 11, 10]), relay.reshape(var_5245.astype('bool'), [728,]), relay.reshape(var_5246.astype('float32'), [960,]), ), 7)
func_1301_call = mod.get_global_var('func_1301')
func_1304_call = mutated_mod.get_global_var('func_1304')
var_5261 = relay.var("var_5261", dtype = "bool", shape = (336,))#candidate|5261|(336,)|var|bool
call_5260 = relay.TupleGetItem(func_1301_call(relay.reshape(var_5261.astype('bool'), [3, 7, 16]), relay.reshape(var_5246.astype('float32'), [960,]), ), 2)
call_5262 = relay.TupleGetItem(func_1304_call(relay.reshape(var_5261.astype('bool'), [3, 7, 16]), relay.reshape(var_5246.astype('float32'), [960,]), ), 2)
func_54_call = mod.get_global_var('func_54')
func_56_call = mutated_mod.get_global_var('func_56')
const_5265 = relay.const([-3.646636,6.002421,6.612555,-7.615842,-8.747847,2.476142,-5.187421,9.195460,7.488381,-6.406945,4.565046,-1.313231,2.833858,6.368031,2.131287,7.004090,-8.606044,4.088072], dtype = "float32")#candidate|5265|(18,)|const|float32
call_5264 = relay.TupleGetItem(func_54_call(relay.reshape(const_5265.astype('float32'), [9, 2, 1])), 1)
call_5266 = relay.TupleGetItem(func_56_call(relay.reshape(const_5265.astype('float32'), [9, 2, 1])), 1)
bop_5279 = relay.floor_divide(call_5264.astype('float32'), var_5242.astype('float32')) # shape=(9, 2, 45)
bop_5282 = relay.floor_divide(call_5266.astype('float32'), var_5242.astype('float32')) # shape=(9, 2, 45)
bop_5291 = relay.bitwise_and(var_5242.astype('uint16'), bop_5279.astype('uint16')) # shape=(9, 2, 45)
bop_5294 = relay.bitwise_and(var_5242.astype('uint16'), bop_5282.astype('uint16')) # shape=(9, 2, 45)
func_643_call = mod.get_global_var('func_643')
func_646_call = mutated_mod.get_global_var('func_646')
var_5305 = relay.var("var_5305", dtype = "float64", shape = (8, 20))#candidate|5305|(8, 20)|var|float64
call_5304 = func_643_call(relay.reshape(var_5305.astype('float64'), [8, 2, 10]))
call_5306 = func_643_call(relay.reshape(var_5305.astype('float64'), [8, 2, 10]))
func_3725_call = mod.get_global_var('func_3725')
func_3728_call = mutated_mod.get_global_var('func_3728')
const_5310 = relay.const([[-3.235130,5.026419,-5.464229,4.154535,-4.697572],[-7.740412,8.155045,-8.262611,-8.964063,-5.503783],[0.981289,9.255875,-0.431953,4.608799,5.841052],[0.331637,-2.331520,5.528601,-0.596835,-7.528512],[-2.208474,-3.269191,5.010065,0.811570,4.637654],[-0.123547,-0.999330,-2.935347,-1.228147,4.389181],[-4.510160,0.247384,8.470152,9.348832,4.510058],[-3.870028,9.563587,-5.807118,-8.336167,-4.126332],[9.313979,-9.435791,-8.687146,4.561205,-7.466738],[-5.873960,9.595917,8.967350,-8.579802,8.488190],[4.271349,2.144285,-3.049626,7.024062,-0.229712],[6.404624,-6.571960,6.996891,-8.697030,1.831449],[1.670420,-4.768015,0.133689,3.797680,-6.913932],[-5.498858,1.578757,-2.950640,3.123875,-7.220588],[8.399935,5.103007,6.687862,-0.338268,3.638594],[0.822190,-3.188792,-1.644820,3.496254,6.874787],[-6.470382,5.786003,-6.176968,3.116049,-2.524407],[6.290745,4.964648,0.410848,7.114723,9.437072],[-2.624953,1.568926,-6.876621,-4.529253,1.843130],[1.563743,8.293943,6.536921,8.633826,2.938844],[-6.402846,9.906940,-2.987847,3.830919,2.668273],[-5.125209,9.547547,-0.809342,6.798886,5.887851],[-9.044245,-9.750831,-7.382942,8.768591,1.664695],[8.798319,6.087463,0.931681,7.323169,6.514619],[6.413261,-8.486114,5.933125,-6.057406,-0.558979],[-9.772878,2.335137,-0.292051,-6.549364,6.195378]], dtype = "float64")#candidate|5310|(26, 5)|const|float64
call_5309 = relay.TupleGetItem(func_3725_call(relay.reshape(const_5310.astype('float64'), [10, 13, 1])), 1)
call_5311 = relay.TupleGetItem(func_3728_call(relay.reshape(const_5310.astype('float64'), [10, 13, 1])), 1)
output = relay.Tuple([bop_5232,call_5235,var_5236,call_5240,const_5241,var_5243,const_5244,var_5245,var_5246,call_5260,var_5261,const_5265,bop_5291,call_5304,var_5305,call_5309,const_5310,])
output2 = relay.Tuple([bop_5232,call_5237,var_5236,call_5247,const_5241,var_5243,const_5244,var_5245,var_5246,call_5262,var_5261,const_5265,bop_5294,call_5306,var_5305,call_5311,const_5310,])
func_5319 = relay.Function([var_5224,var_5236,var_5242,var_5243,var_5245,var_5246,var_5261,var_5305,], output)
mod['func_5319'] = func_5319
mod = relay.transform.InferType()(mod)
mutated_mod['func_5319'] = func_5319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5319_call = mutated_mod.get_global_var('func_5319')
var_5321 = relay.var("var_5321", dtype = "float64", shape = (12, 1, 6))#candidate|5321|(12, 1, 6)|var|float64
var_5322 = relay.var("var_5322", dtype = "uint32", shape = (450,))#candidate|5322|(450,)|var|uint32
var_5323 = relay.var("var_5323", dtype = "uint16", shape = (45,))#candidate|5323|(45,)|var|uint16
var_5324 = relay.var("var_5324", dtype = "int64", shape = (56, 28))#candidate|5324|(56, 28)|var|int64
var_5325 = relay.var("var_5325", dtype = "bool", shape = (728,))#candidate|5325|(728,)|var|bool
var_5326 = relay.var("var_5326", dtype = "float32", shape = (960,))#candidate|5326|(960,)|var|float32
var_5327 = relay.var("var_5327", dtype = "bool", shape = (336,))#candidate|5327|(336,)|var|bool
var_5328 = relay.var("var_5328", dtype = "float64", shape = (8, 20))#candidate|5328|(8, 20)|var|float64
call_5320 = func_5319_call(var_5321,var_5322,var_5323,var_5324,var_5325,var_5326,var_5327,var_5328,)
output = call_5320
func_5329 = relay.Function([var_5321,var_5322,var_5323,var_5324,var_5325,var_5326,var_5327,var_5328,], output)
mutated_mod['func_5329'] = func_5329
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5331 = relay.const([[[4.263815,7.156882,-5.324124,0.801859,-1.288960,8.031833,3.467901,-9.010854,2.625153,-9.885411,7.560773,5.371751,-5.747992,-3.689836,-7.561216],[-5.042846,5.399710,9.986239,-5.289314,-5.473881,7.552666,-7.171986,-0.584481,8.249083,-2.038310,-5.807151,1.533384,-7.184703,-6.946023,8.287187],[1.489792,-9.560105,4.312372,-0.001183,-6.524077,3.492533,-4.685866,0.156322,-5.195193,-9.678290,-7.393964,-9.632446,-2.107248,-6.950836,9.179694],[6.921687,9.672435,0.485996,1.545230,-3.510268,-8.359252,3.760969,1.953702,-8.910710,-4.417605,4.465147,1.841766,-9.697824,-1.134132,-4.765074],[-3.748247,-3.903101,-1.268692,-3.821957,5.855112,6.646434,-4.060734,-5.922665,6.174994,0.252561,-5.553346,3.732553,-0.654058,9.149137,-6.869750],[-0.393336,-9.690716,-9.907772,-5.353527,-4.984068,2.540299,-6.936868,0.551650,-1.273320,3.124775,-3.703276,-7.888760,7.039456,4.323973,5.313038],[-5.323328,-2.158543,3.495499,3.844859,4.063750,7.234675,-2.944223,8.112502,2.100309,-5.240142,1.400916,-8.802477,-3.951838,0.344063,-1.737344],[4.934782,-4.089779,2.734325,-2.299795,-8.848097,6.110938,4.001186,7.704576,5.466048,-9.608436,8.577897,-4.847552,0.768248,9.609961,-2.181705],[6.620027,-7.536240,2.663067,2.817114,9.417982,5.514673,-8.214925,-4.521371,1.861326,-0.377458,5.679353,-1.025644,5.225035,9.755874,-5.013802]],[[-6.065529,8.941422,4.895222,0.377010,2.462697,-3.944361,2.721188,9.943771,-2.588824,2.355849,-2.463167,-9.697845,-3.536898,-5.795094,-4.191752],[1.177312,-8.856274,-8.243773,4.114687,4.965825,-8.695461,9.140671,-3.961334,2.524702,-8.105050,5.493999,8.921445,1.708448,7.084403,7.499712],[-4.593588,-9.020968,-0.540828,-2.184395,-6.768328,-1.273317,-0.064182,-7.072539,-1.123555,4.647426,-1.756371,6.794775,6.936287,0.274201,-4.162248],[-4.428488,2.864833,8.741504,6.216241,2.466794,8.490965,-9.988356,-9.673142,-2.971429,-6.200391,5.937904,-8.066851,3.997875,0.300682,-2.681321],[5.563844,-4.795232,-7.353772,-1.937043,8.528268,1.014130,4.655986,-2.163885,8.583073,-4.921789,8.342897,-8.443230,-1.126596,5.422301,0.984102],[8.827324,-4.199154,0.773187,-8.105755,7.594718,-7.933872,-8.727940,-5.516837,2.301516,-6.521274,-4.277611,2.158523,8.961903,-9.939862,0.027977],[6.571226,-6.942328,-4.392109,-2.418439,-4.221859,-5.471730,-5.815959,-6.397300,-3.731614,-9.273492,-0.189598,-0.352252,-5.769711,5.671540,-9.804553],[-0.036258,-5.510582,6.156260,-7.696806,0.866993,2.797344,4.353250,-7.209319,7.793764,9.743064,7.022617,-0.510843,5.569113,-7.739098,5.451139],[5.320127,-5.990576,-8.789369,-2.303080,7.933288,5.695657,-6.001468,-4.810863,3.457011,0.206069,-0.295944,-0.498228,-2.131203,8.440474,-8.693161]],[[4.439353,-0.801692,1.202352,1.778305,1.202268,6.702536,-4.604194,-7.730854,9.962235,-6.085275,-8.704499,3.048658,0.042819,7.372654,-3.803105],[9.641860,9.799925,7.783578,-2.590579,7.919377,4.795672,7.478613,-1.450901,7.948984,4.757336,-5.681044,-7.208359,-0.329601,8.614285,-2.295093],[9.991247,0.901490,6.421383,-4.133686,7.841117,5.508439,-5.237545,-4.615296,-8.063998,-0.176219,1.805834,-6.502308,6.754428,7.754601,-8.363212],[-2.470401,3.665174,-7.296572,1.094413,3.143715,-1.000956,5.965107,6.493316,2.384060,4.961187,1.982812,-4.269905,-4.418434,-1.017244,-8.212336],[4.109712,-4.408315,-8.032831,8.014171,1.385017,8.943428,-7.767299,4.957623,-9.170338,7.065881,-5.743975,9.819569,-4.801590,-1.122974,0.319514],[7.438188,-7.185936,-7.194196,9.555619,-1.823434,-8.458367,-0.595324,-0.097458,-1.990131,6.086919,0.887893,-1.623124,-6.655391,-4.010244,2.619988],[-5.295567,5.317204,-4.298161,6.055013,4.986794,6.915242,0.329808,-2.711261,6.200505,8.900208,9.558718,-9.760624,0.482786,-1.893815,-2.082879],[1.330663,4.466897,8.210130,-2.148230,9.682525,-5.596863,6.498395,-4.478410,6.341372,-9.910276,-1.812323,6.029889,0.882128,-1.586413,3.503238],[0.087409,7.851040,0.324555,3.289449,6.465095,2.410211,0.173288,-8.784154,6.418393,3.348211,-0.598287,3.886816,-6.669639,-6.651424,-5.691180]],[[4.821731,-9.284694,-1.214432,1.931260,-0.558106,-4.513640,-1.592449,-0.955595,-4.916667,1.567574,-8.470146,9.370726,5.482269,-8.251302,-3.306218],[4.383804,8.259240,-3.342697,9.737000,7.633294,6.512444,-0.349519,6.565808,-4.226568,-1.753283,3.570690,1.510226,-4.094158,-1.094260,-0.157697],[6.302587,7.969055,8.720799,4.641570,3.356447,-3.733183,-2.822700,6.793584,-0.840908,9.909374,2.738531,7.021586,-0.017622,2.918613,-1.870701],[9.855516,-2.341653,-4.246146,5.592470,-7.498644,-8.028241,2.203227,8.662187,-9.627186,-1.384610,-8.202343,-0.200693,-1.415714,7.796601,-3.371599],[3.462446,-3.382914,-4.523572,8.457233,-8.495800,-2.631304,7.497119,2.494575,-2.331235,-2.070150,-2.291027,-7.836224,-2.810932,7.781984,3.959190],[6.341882,4.998389,-0.556553,2.382030,4.530821,9.944856,-7.535765,7.362543,-4.036971,-5.313373,-0.193472,2.654402,0.233796,6.529213,-3.071120],[-2.090327,7.979733,4.689303,7.414353,-1.950082,-2.185322,2.408759,-5.080143,-7.552433,-5.172380,3.937682,6.706258,-8.838638,-9.013515,4.384085],[-1.682495,-7.639612,-6.854926,5.084033,-5.436178,-0.542483,8.437888,-5.539740,9.513777,-0.868110,7.044143,-1.028791,6.798204,5.268672,7.757422],[-9.520184,5.013148,5.914835,-8.126486,6.239540,-6.296363,2.396345,2.898999,6.785820,-9.901714,3.742531,4.867268,1.141375,-4.477921,-0.880147]],[[6.820098,5.114179,-6.148578,-6.750330,8.399662,5.481850,-1.516128,5.786212,-3.232430,-9.265753,0.705692,-8.029030,2.397640,9.346682,7.267339],[3.998688,-7.940140,4.523260,-6.196056,8.973546,8.083050,3.961628,9.137714,-0.151586,-6.194262,-7.462826,-0.824132,-2.584592,-6.962424,3.899857],[-4.451942,4.211202,0.189398,2.460394,-5.825227,6.559499,8.685485,6.741675,7.609515,4.057753,-7.026644,5.974219,-8.893863,6.666295,2.736713],[-0.141157,7.914720,-9.342816,-4.022853,-0.801639,-3.621441,5.697574,2.623166,-2.193468,-4.963628,-8.388526,-5.328135,6.779212,3.018015,9.228451],[4.076378,-1.104313,5.157727,5.028584,-0.659502,5.718473,5.484931,9.917441,7.220024,1.379701,0.411628,7.367336,-1.329087,-6.303802,3.422804],[-7.895051,-4.817490,6.094595,-0.767051,4.551239,9.756651,4.311970,5.713043,3.855859,5.259538,-7.141262,-2.955934,-7.521973,-9.762794,-1.618499],[-2.996995,-8.837013,-7.527447,9.975591,-8.975995,3.636994,3.739637,-5.058296,8.397012,7.873178,3.531703,2.879475,5.636795,-7.083527,7.857641],[5.572087,2.072012,-5.098351,-9.270394,-6.869904,-3.317805,-2.334294,9.010929,5.943526,-2.826868,9.203221,-3.233465,4.435368,-6.334608,-8.958799],[-6.340986,6.818497,6.650262,2.522191,9.011703,2.025480,-9.746410,9.196355,-3.091244,-5.625453,-1.835920,-2.554756,7.216836,-4.972418,9.563029]],[[2.598096,2.987077,-7.555153,-4.849481,-3.879141,7.843644,5.390729,3.644232,8.142303,1.056927,-1.861317,0.414432,5.304461,-4.088461,-2.446967],[-1.519257,8.606049,5.824200,-3.901270,-7.418961,3.213754,-7.081563,7.253369,-7.082201,-7.439236,-6.840094,2.612358,0.621409,-6.096337,-8.535075],[-0.171132,-3.006085,-1.614906,7.640580,1.163994,5.904390,7.068690,-5.135911,9.340953,-1.257482,-2.603077,-2.688504,-0.608091,-8.205524,0.145296],[-6.491805,2.363223,-3.655207,-4.573120,4.698764,4.877211,-5.665938,-1.080693,0.375880,0.505045,9.076012,-1.581622,9.513532,-5.790742,-5.172979],[9.429409,9.851434,3.422765,-3.203184,8.107371,-0.755186,3.981039,7.219640,1.033959,4.078562,-5.259516,-5.344578,4.697638,-7.098254,-2.252172],[4.365626,3.543161,-1.101209,-7.617260,-0.226464,-6.239781,-4.087293,2.325401,-2.905427,-9.718512,-7.500162,-3.334602,-1.689344,-4.143505,9.301027],[1.931290,-0.237575,2.665439,8.061475,-6.586567,1.487788,-2.805776,-0.981386,-2.565607,-4.480282,-5.927004,9.677862,-2.124305,-7.133613,-8.687860],[8.396239,2.218601,-6.313190,-9.831860,-2.149386,3.611436,-4.590980,-0.626793,-2.052828,1.882711,7.575606,2.768890,-2.553365,-4.596118,-3.032792],[1.922434,-3.719529,-0.861364,1.034282,3.795787,8.549638,-7.294277,-2.022948,-9.667294,4.437924,-2.353423,3.014787,5.211075,4.402734,2.157853]],[[8.308541,3.857103,3.494572,-0.124811,-8.334741,-7.906561,6.310074,0.374534,4.034557,-7.778526,9.589916,-2.092513,-8.910361,9.656378,7.883257],[6.318476,3.843817,2.150948,-3.837153,2.992083,5.289709,-0.047422,-7.108459,-4.840081,4.279349,-2.032611,3.300627,-9.592755,5.535521,8.957116],[-2.813501,5.214525,5.862536,-5.667408,-1.121369,5.539098,8.671683,-4.396461,8.746162,-8.237321,2.527547,-9.712752,0.870279,-6.940218,-0.189782],[9.245327,5.106789,-5.495864,6.715208,-3.732185,-9.347956,9.651654,-7.185937,-6.344705,3.215091,-0.156583,5.085837,2.998753,7.217609,3.146712],[-8.966117,-3.566166,3.857116,-6.722770,1.428786,3.656182,-8.923292,-2.974438,-0.492928,2.264995,0.777751,0.600663,-5.457218,5.130266,-4.976284],[9.366866,6.564845,-4.984410,-3.527768,-0.952773,-9.285742,0.600684,-9.500819,0.931459,-5.959593,-6.942439,-8.070007,6.740719,5.460712,3.345460],[1.707951,-6.109248,-9.759982,-9.666270,0.875092,3.244050,-9.955651,8.582540,-1.081918,0.601062,9.394042,-1.235176,7.660184,-3.376869,-0.978689],[2.402359,-3.276927,-9.414898,-1.122741,3.988951,0.306140,3.748047,7.910062,5.813498,0.233521,2.600234,-3.107710,4.992705,1.828256,-6.028073],[7.642980,1.367348,0.861120,-7.046678,-0.160080,-2.107891,-2.999105,5.165426,-4.121482,4.349847,-3.281857,-9.417726,-9.692674,-0.367453,1.278825]]], dtype = "float32")#candidate|5331|(7, 9, 15)|const|float32
uop_5332 = relay.asin(const_5331.astype('float32')) # shape=(7, 9, 15)
output = uop_5332
output2 = uop_5332
func_5340 = relay.Function([], output)
mod['func_5340'] = func_5340
mod = relay.transform.InferType()(mod)
mutated_mod['func_5340'] = func_5340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5340_call = mutated_mod.get_global_var('func_5340')
call_5341 = func_5340_call()
output = call_5341
func_5342 = relay.Function([], output)
mutated_mod['func_5342'] = func_5342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5340_call = mod.get_global_var('func_5340')
func_5342_call = mutated_mod.get_global_var('func_5342')
call_5387 = func_5340_call()
call_5388 = func_5340_call()
func_171_call = mod.get_global_var('func_171')
func_173_call = mutated_mod.get_global_var('func_173')
const_5408 = relay.const([7.495357,-6.083982,3.754419,-7.011743,6.616757,9.439389,-1.679340,-9.590066,-0.952798,4.036533,-7.077602,2.561987,2.596121,0.077463,-2.606106,-9.850474,-7.337122,-9.970778,-3.393411,-3.119134,7.522969,-3.642801,9.650647,-4.611931,-8.138740,3.880917,-5.450977,-1.414021,1.343299,8.528990,-3.902742,4.395585,-2.033455,0.431442,-8.331686,-9.650736,6.526297,7.446747,2.297654,-6.116884,3.296301,0.977388,-8.741501,8.017762,4.941880,7.396737,-7.104183,-5.994472,-0.538929,-5.594358,6.821528,-4.221832,1.573456,-1.581195,-4.764751,-3.463074,-2.359895,9.438613,1.095647,-1.506132,4.906855,7.299314,-6.078283,-5.910285,5.091659,2.357625,-3.609768,6.382435,-3.252262,-7.913789,-6.932269,-7.862671,-1.908872,7.512037,3.250508,0.597266,-7.325647,-4.838083,-4.102750,6.586790,4.340105,0.474221,6.224847,-9.202245,-9.124240,-6.538469,7.773162,1.689104,-2.264417,-3.746537,-3.815007,7.740108,-9.230762,3.862424,-1.696930,-8.859717,9.298493,5.975984,-6.398583,-6.291414,7.421801,4.394652,-4.400096,-6.892707,9.419253,-3.451820,-5.222873,-1.502442,2.286372,-4.033168,7.712526,-1.758455,-0.031317,1.299367,3.081305,9.281518,-2.284783,9.172160,4.624985,0.375462,-1.366343,-1.698410,0.182739,5.045263,-9.442898,3.050732,-4.869820,-5.429855,5.595630,6.602204,-9.058169,1.606723,8.895185,0.144397,6.249065,-1.899705,-3.971548,-5.609876,9.071339,-7.902108,2.841908,3.902290,7.322824,-7.314057,8.475362,8.675776,-9.840766,-6.380133,-5.762888,-8.100815,8.724038,9.260581,6.517664,4.774454,-4.028374,-7.522700,7.876820,0.600114,-8.408920,-8.255663,-7.386700,1.835031,-5.804365,-6.937327,6.394360,-8.304754,9.109946,-6.800302,-5.589772,-6.173500,5.880118,-8.986811,-5.000718,-7.704796,-3.094003,3.583525,-3.778659,3.975915,-6.679334,6.337275,1.910165,-7.008547,-0.641068,0.417190,6.158876,6.915529,4.466949,4.206501,5.921935,-4.581983,-8.371815,-4.996939,-6.264472,-8.106846,-2.260558,-5.964978,1.891536,-9.624978,1.965178,-0.393644,2.980994,1.668888,-7.193838,0.574614,-8.559792,6.510667,4.633520,-2.999062,8.565084,-0.540776,-4.923206,8.181987,-3.793363,5.140971,-9.641313,-8.948619,1.066049,-5.031459,-0.745587,-6.022612,9.116558,-7.474221,0.475293,-0.613924,3.849638,-9.620965,3.317954,3.500774,-9.825014,9.825550,0.447273,-8.926426,1.680024,-1.635291,-2.378331,3.597224,-5.636041,-9.764641,-4.110123,-2.067271,-4.774728,8.207404,3.641268,9.601747,-4.746605,-3.326238,-3.633905,-1.914719,3.198925,6.227478,3.271460,1.994134,-2.819164,-1.217358,-3.934214,-7.186358,6.558736,-7.515723,9.349376,-5.033804,-2.044047,4.354016,-2.841335,-5.707725,-7.285908,0.714354,-7.587242,9.723042,0.519632,0.614438,-3.489017,-5.551123,-1.566042,-5.650841,-9.614318,4.580465,1.186954,6.209813,-6.408449,8.471148,2.564879,6.398431,8.695409,1.112433,-2.278387,-2.585923,-9.180431,-8.859155,7.948626,-3.603124,-4.460977,-1.238256,-6.040108,0.325625,-3.609700,4.765869,6.688821,1.252438,7.971244,9.376769,-5.913967,5.246245,-6.564055,2.417617,-5.984396,8.713442,6.210480,5.685470,0.550285,-9.465940,7.879213,-1.774809,-3.653216,-8.127301,-4.541459,5.823232,0.644609,1.840752,8.213100,-7.409694,3.932743,-9.865758,9.754791,-9.524627,-3.096568,-7.202878,5.279177,-2.911084,0.611239,5.243999,0.207591,-5.290893,2.578403,-2.507039,-6.206644,2.488222,2.803007,-1.107699,1.430703,8.116956,6.430972,9.176078,-1.643179,8.733886,-3.782001,4.899714,5.234995,2.620438,-2.113635,5.426560,-8.018733,-7.066750,-3.464577,-1.451741,0.147146,0.092873,-6.728099,5.171520,7.065785,-1.899812,-7.303807,4.752846,8.476150,-9.936147,-5.453922,-5.141131,-6.032546,-1.764352,0.064449,-2.451212,0.174110,4.008612,9.372304,-6.826508,4.427840,-8.542611,9.738090,-6.773790,-6.382451,-3.695140,-8.017356,9.977733,1.121090,-1.965726,4.532574,2.722509,-5.976783,-8.060752,-0.146039,-2.164515,8.933165,9.487221,-8.254487,8.532370,-9.006006,-8.195460,-7.370728,-9.988839,9.264870,-1.633023,7.834040,0.446288,-9.039868,1.609308,3.704941,4.865388,8.324145,5.536165,-7.988323,-7.166205,-5.901337,6.793126,3.384043,-3.293046,-9.958067,2.296480,-3.393792,-5.634367,-7.313100,8.820386,7.369711,-7.084248,6.343554,7.408636,-8.313195,1.533408,-9.608245,0.358639,-9.231270,-9.811212,-9.872193,-7.191025,7.596819,3.065267,5.872820,6.452378,5.925722,7.484793,0.748068,-3.769691,-5.044757,-1.257010,3.694239,-5.699768,4.190122,-7.459320,-2.248445,-5.953453,9.466759,2.889114,1.986052,-6.489771,-3.297905,0.945776,-7.880330,2.126997,3.440826,4.815011,9.251243,-0.476772,-8.382251,-0.148678,-5.816071,-0.582898,4.440570,-9.179274,-1.645502,2.305102,-5.184249,-9.918227,7.023893,4.261203,5.188611,0.233807,4.260820,5.436811,-5.085763,-2.374252,9.178466,2.119744,5.413347,8.962814,-3.332011,-8.852109,4.163284,0.078957,4.076471,-2.477125,5.175168,8.475793,3.627715,-4.183288,8.883631,-4.601549,-6.527345,2.191600,2.785418,6.835357,3.236016,-8.943098,9.713404,4.547810,1.643567,8.726539,3.852191,3.029695,-1.520766,8.930357,-6.727341,-5.377124,3.587858,-9.331821,-5.975924,-7.234095,-8.863593,-2.998357,-3.337362,-6.769588,7.095010,-3.274962,-1.084838,-0.783827,9.630536,-6.261398,5.490342,-0.046877,-4.288615,-7.705331,8.939775,2.407058,1.718427,6.672196,0.768287,1.738268,1.033717,-0.115366,5.015433,-0.791621,-9.762547,0.066987,1.642330,-4.171422,-8.421892,-4.110975,7.500175,3.333916,-3.165793,-3.356168,-7.222856,-5.608666,5.489757,-0.242811,1.096081,5.498680,6.545521,-6.253760,1.091799,3.481135,9.598752,3.162846,4.509488,4.749932,5.979616,7.562586,-2.604270,7.035809,-0.759054,-3.202890,7.709430,1.354362,-8.206537,6.525957,-7.157370,-6.177750,2.767629,-4.857054,-7.509703,-9.129414,0.054713,-0.468018,7.151716,4.019958,5.390003,-9.786152,-4.734265,7.282956,4.354393,-6.877397,0.426834,5.063329,-7.498369,8.437220,0.212518,-7.910746,-7.601328,-9.492531,-9.902198,4.282809,-1.365216,-3.575255,-2.561012,0.085522,7.029632,8.264117,-8.942808,0.424196,7.514015,-8.386934,-9.220131,6.623797,9.489420,-8.374884,-4.511591,5.866470,8.062044,5.616105,9.608076,8.038795,-4.278611,-2.345559,8.651427,3.341986,-2.475883,-9.135652,-4.496325,9.453245,4.406489,3.040273,-5.145297,-1.719835,3.321053,5.673094,2.216792,4.252763,8.155909,-7.430152,1.445159,5.268124,3.311311,-0.460131,-6.794173,0.994816,4.064890,8.248166,8.394692,-1.900198,9.333600,-0.566818,-7.323913,-2.883239,1.428284,8.672277,-8.478739,-9.220610,-8.611356,0.572625,4.677246,-4.276680,7.412648,-6.912635,-8.469277,8.976544,-1.337834,-5.169880,5.258610,-6.948928,6.929356,4.765552,5.617570,-9.343953,-9.533513,-8.543562,-4.542284,8.510146,-0.698441,3.487999,-3.166378,-8.240814,-7.992870,3.515389,8.884302,-1.493395,6.795760,-9.621667,4.464067,-1.728111,-0.145665,2.468233,-0.691495,-1.570329,-0.591976,0.095878,7.385183,6.636623,-7.316785,9.260950,1.653135,-2.831388,-0.882152,3.926457,8.540778,1.627289,-3.155554,3.031480,7.563365,9.230815,6.353155,-2.703697,-7.363100,-3.826302,7.275059,-7.062861,8.175556,1.833846,8.633148,5.741176,7.752217,-1.069125,-9.800805,-3.230539,0.005704,8.021058,-6.167119,4.773904,-6.132242,6.290617,-8.839999,-5.716223,-7.015464,4.413196,-8.376889,2.782220,3.965072,3.755600,8.527700,-2.961474,3.105247,2.021017,1.746786,-6.691936,-6.353474,2.100699,8.693137,-3.110203,-8.157792,0.479837,-5.700422,-1.510011,-7.217197,3.530876,7.218997,-2.940400,-1.346863,-6.006685,1.898520,2.686483,-1.529622,-1.734112,-4.288038,0.013686,-6.063096,2.867478,5.254938,-6.006168,3.388326,0.114441,4.801792,9.896040,6.633881,-7.929661,-4.543381,-7.167224,-7.034330,-4.674316,1.790762,2.333248,-1.736789,4.664181,-6.508728,9.500913,6.184177,-3.750137,-4.816313,-6.121027,9.127916,-2.361228,-5.990244,-3.779230,3.802808,6.452977,4.349952,-4.568132,6.670402,2.152436,-5.931689,6.693111,-4.815560,-6.720183,8.897137,-2.250988,3.959116,-9.673213,-9.108234,4.335638,1.402553,-4.849880,5.116878,-1.483500,-2.312227,0.179594,-1.724926,7.185685,-9.372721,-7.097976,-3.811565,8.007466,0.175023,-7.036674,-5.298054,-4.232780,-8.289266,-3.484384,7.290273,5.137647,4.293836,-2.728101,1.955741,-2.666754,-0.077393,-5.128455,3.228234,-7.130231,4.772047,-5.262597,-4.416131,-1.487903,-4.098367,1.034650,9.470797,7.409301,7.888863,1.158553,7.423120,-6.846124,-1.771157,5.354422,-4.187825,-1.074048,-1.613451,-3.784979,9.487074,7.500312,5.584973,-8.535705,7.505519,4.850273,1.146624,-2.108294,-8.885239,-0.116219,5.544753,3.450695,-1.652660,3.680217,-6.158111,8.568226,-8.952226,1.266927,4.288003,9.847559,-5.344283,7.195370,6.693585,-0.987539,8.273570,-4.715052,-8.433479,-0.530927,1.186890,5.328186,4.375738,-1.837405,-8.173568,-2.627849,3.777733,-2.089992,-9.490179,9.307920,0.537723,-4.828504,6.995957,6.465652,-5.015151,-6.533644,-6.749568,8.948810,-1.147545,6.900526,-4.431989,6.682214,4.416946,0.076662,9.815938,5.006515,-7.689280,0.107824,-2.828326,-4.426477,2.073025,1.120437,-9.016695,8.167951,-2.058335,1.358275,-3.177543,-6.146646,4.812891,-6.293566,-7.442109,8.259128,9.622003,-8.434317,-6.485669,-1.724956,7.289047,6.931129,-3.403948,4.844612,1.261133,6.189803,6.388210,-4.957336,4.767300,5.409132,-3.603179,8.376727,-4.441889,-2.624657,-8.741296,-9.427659,-9.264056,9.896210,-8.346651,8.749831,-4.919663,-1.631234,-4.608522,-5.413230,2.935021,9.691997,-5.339017,1.484477,8.858244,8.683549,-8.642977,2.667337,2.484189,1.498759,7.462611,-6.224902], dtype = "float32")#candidate|5408|(960,)|const|float32
call_5407 = relay.TupleGetItem(func_171_call(relay.reshape(const_5408.astype('float32'), [15, 16, 4])), 0)
call_5409 = relay.TupleGetItem(func_173_call(relay.reshape(const_5408.astype('float32'), [15, 16, 4])), 0)
output = relay.Tuple([call_5387,call_5407,const_5408,])
output2 = relay.Tuple([call_5388,call_5409,const_5408,])
func_5412 = relay.Function([], output)
mod['func_5412'] = func_5412
mod = relay.transform.InferType()(mod)
output = func_5412()
func_5413 = relay.Function([], output)
mutated_mod['func_5413'] = func_5413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5340_call = mod.get_global_var('func_5340')
func_5342_call = mutated_mod.get_global_var('func_5342')
call_5419 = func_5340_call()
call_5420 = func_5340_call()
func_54_call = mod.get_global_var('func_54')
func_56_call = mutated_mod.get_global_var('func_56')
const_5422 = relay.const([-3.907357,4.375406,-0.076749,7.902806,-7.935116,4.405697,-1.430858,2.445879,-9.325937,4.615751,-4.349169,-5.100079,-0.300053,-5.453228,0.951627,-6.493054,4.958820,-0.705457], dtype = "float32")#candidate|5422|(18,)|const|float32
call_5421 = relay.TupleGetItem(func_54_call(relay.reshape(const_5422.astype('float32'), [9, 2, 1])), 0)
call_5423 = relay.TupleGetItem(func_56_call(relay.reshape(const_5422.astype('float32'), [9, 2, 1])), 0)
uop_5438 = relay.log(call_5421.astype('float32')) # shape=(9, 2, 1)
uop_5440 = relay.log(call_5423.astype('float32')) # shape=(9, 2, 1)
output = relay.Tuple([call_5419,const_5422,uop_5438,])
output2 = relay.Tuple([call_5420,const_5422,uop_5440,])
func_5443 = relay.Function([], output)
mod['func_5443'] = func_5443
mod = relay.transform.InferType()(mod)
mutated_mod['func_5443'] = func_5443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5443_call = mutated_mod.get_global_var('func_5443')
call_5444 = func_5443_call()
output = call_5444
func_5445 = relay.Function([], output)
mutated_mod['func_5445'] = func_5445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5412_call = mod.get_global_var('func_5412')
func_5413_call = mutated_mod.get_global_var('func_5413')
call_5482 = relay.TupleGetItem(func_5412_call(), 1)
call_5483 = relay.TupleGetItem(func_5413_call(), 1)
uop_5497 = relay.cosh(call_5482.astype('float64')) # shape=(15, 16, 4)
uop_5499 = relay.cosh(call_5483.astype('float64')) # shape=(15, 16, 4)
func_54_call = mod.get_global_var('func_54')
func_56_call = mutated_mod.get_global_var('func_56')
const_5503 = relay.const([[-3.934070,2.021331,6.246797],[2.506176,4.417562,-3.100268],[8.442724,-1.344325,-2.698101],[-5.373391,-5.566576,-2.106045],[8.300152,-4.326217,7.344408],[2.933704,-0.595923,2.917475]], dtype = "float32")#candidate|5503|(6, 3)|const|float32
call_5502 = relay.TupleGetItem(func_54_call(relay.reshape(const_5503.astype('float32'), [9, 2, 1])), 2)
call_5504 = relay.TupleGetItem(func_56_call(relay.reshape(const_5503.astype('float32'), [9, 2, 1])), 2)
func_643_call = mod.get_global_var('func_643')
func_646_call = mutated_mod.get_global_var('func_646')
var_5508 = relay.var("var_5508", dtype = "float64", shape = (160,))#candidate|5508|(160,)|var|float64
call_5507 = func_643_call(relay.reshape(var_5508.astype('float64'), [8, 2, 10]))
call_5509 = func_643_call(relay.reshape(var_5508.astype('float64'), [8, 2, 10]))
output = relay.Tuple([uop_5497,call_5502,const_5503,call_5507,var_5508,])
output2 = relay.Tuple([uop_5499,call_5504,const_5503,call_5509,var_5508,])
func_5512 = relay.Function([var_5508,], output)
mod['func_5512'] = func_5512
mod = relay.transform.InferType()(mod)
var_5513 = relay.var("var_5513", dtype = "float64", shape = (160,))#candidate|5513|(160,)|var|float64
output = func_5512(var_5513)
func_5514 = relay.Function([var_5513], output)
mutated_mod['func_5514'] = func_5514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5340_call = mod.get_global_var('func_5340')
func_5342_call = mutated_mod.get_global_var('func_5342')
call_5531 = func_5340_call()
call_5532 = func_5340_call()
func_4949_call = mod.get_global_var('func_4949')
func_4952_call = mutated_mod.get_global_var('func_4952')
const_5538 = relay.const([1.066488,5.194341,-6.650058,-1.640303,-9.139305,1.475917,-0.019809,-2.587845,6.449092,3.420707,-1.230214,1.238389,3.751115,-8.736183,9.476471,6.147584,7.415936,-1.920443,2.063132,9.312059,-1.154083,-5.503680,-8.220702,4.669080,4.439157,4.251277,-1.006316,-0.399074,-7.521742,-8.789123,5.753264,4.274644,5.060225,-7.271303,-3.326282,-6.584081,6.776268,8.487214,3.365551,8.494705,-7.300953,-7.528405,-7.473458,-3.359092,0.747075,-6.844773,-6.469061,9.295070,-5.602110,4.070243,4.907667,1.060152,-7.452961,-9.291286,7.679694,-8.297918,-2.095084,-0.981672,2.391767,-1.953851,0.749452,0.839470,-9.503753,2.927890,0.104962,4.811333,-3.112790,3.876431,8.472290,-7.615573,0.073671,-0.396365,4.386590,-0.200485,-5.106282,-5.848764,-9.659922,5.125692,-2.234618,6.381488,0.415390,5.653558,4.227384,-9.559704,-0.113637,3.499461,-4.377045,-3.446210,-5.586229,-9.185423,3.153793,-7.352459,8.143021,-7.640929,4.387477,8.396432,-6.074722,-5.915739,9.973328,-4.738431,-1.154607,1.054334,-6.112524,-1.815083,7.746754,9.244563,4.121095,-5.834703,6.961908,5.501801,-4.164914,-1.661108,2.177700,-0.417181,0.972230,-5.263549,-5.574579,-5.965808,0.808425,1.675776,-9.808711,9.022898,-0.228090,-9.138119,-4.001609,-3.757631,-5.539833,3.800418,-5.967514,-7.497865,9.900531,6.221617,-5.112678,-7.659572,-7.077392,-9.731398,-1.712818,5.462490,5.908722,-5.362107,2.659524,-9.967096,5.535366,2.088353,8.277387,-1.492763,-0.250959,-5.583508,7.162993,4.810702,-8.251240,-7.275986,2.371434,-4.412810,3.119434,6.024175,4.915672,-9.380482,4.334430,-5.241241,8.074650,2.404408,-9.057151,5.589721,-2.957525,-8.679157,-5.815466,3.568786,-1.477670,0.531893,0.083034,-6.915145,-6.551348,0.625081,-3.829274,0.323752,-1.212209,5.753736,-7.927248,5.724617,4.212395,-8.358446,-6.043216,-2.088047,5.787904,8.186854,-5.412213,7.233776,-9.045746,-0.544237,7.357626,2.202648,5.051124,-1.949142,7.313978,-9.792921,1.720935,-0.755770,1.896349,-1.136550,-8.823783,1.671844,0.468534,-6.363993,8.373876,-6.834057,-0.259916,3.468328,3.886913,7.881953,5.578505,1.513449,-8.995965,-6.115844,-8.861627,-5.940518,-7.836182,8.582795,5.567687,-5.344259,0.351271,8.793844,-7.876004,9.972481,-6.650901,-1.330695,-8.156232,0.169290,0.636770,-8.442126,-7.315631,3.769578,-7.488030,9.874343,-5.593046,8.971911,-9.602991,3.561649,8.182113,-5.943074,3.771265,8.195793,1.612577,6.316147,-2.617762,-0.042217,-3.384096,-7.917894,1.908757,-4.787597,9.980323,3.817337,-2.181654,-1.274905,5.086084,-9.120630,5.655831,-2.882374,-3.177272,6.374797,-6.146676,3.808463,7.239369,7.931941,0.817935,-4.958818,9.788253,2.464657,-6.863698,6.837814,-0.147212,3.796370,2.936990,-1.722116,9.396779,6.128751,-4.309545,-3.951531,-0.810613,-8.490361,-2.643535,-7.102390,-8.773198,5.564303,5.461611,-3.148486,-9.696305,4.608725,7.097023,8.008585,2.856410,-0.510903,-2.063813,-6.731480,3.622676,-4.028512,6.721902,9.064002,-3.568046,5.912030,-6.647873,-0.236570,2.455182,-0.556572,1.952126,4.324651,-3.243925,-5.806918,-8.450779,0.641267,6.310067,4.419523,-2.259957,-8.029532,-9.313318,-1.266006,8.520042,0.282546,-2.611624,-9.149253,-5.071759,0.750424,3.076753,4.463967,-5.067212,6.720136,-6.866267,-0.446224,-1.003788,-0.197960,-2.663657,7.552269,3.511375,-3.057512,-4.503342,5.046717,-5.148765,-0.616187,3.208893,-1.350341,-5.240233,8.892146,-8.398743,-0.235345,3.747651,7.803763,4.546578,6.957122,-4.543158,7.701879,-1.327564,7.432677,6.956330,1.321603,2.261370,-5.225890,1.572064,-9.468660,8.487286,-1.273900,5.153873,2.128725,-5.011777,5.195043,-9.066243,-5.251430,-8.449348,-2.672378,6.171506,-4.335045,9.128211,-6.188479,-8.888750,-8.734141,6.738525,-1.726830,6.067435,-4.265194,8.269105,-9.902724,-5.318268,-2.393557,-8.032708,-8.694885,-8.726227,-8.225624,3.872378,3.755845,5.138945,4.012714,-1.980490,-6.886987,8.794768,-7.884729,-1.076974,8.878348,0.743926,1.762090,-7.466189,2.869045,-8.054059,-9.778251,-9.012268,-3.414629,2.525184,5.492504,7.958786,9.263350,-7.076411,3.293857,-1.595984,8.044034,3.768020,0.451172,-2.327903,-5.214815,-1.590588,-9.308586,-7.988388,6.128999,-4.509607,-3.892655,-3.016933,3.124538,9.946899,3.665854,3.802019,9.229732,-7.166916,-6.904738,4.674046,7.079797,7.419027,-1.686710,-0.685423,9.644615,-8.916068,5.040174,-2.594763,3.140328,4.069036,6.836460,3.087172,7.871732,-6.630418,-4.347246,7.663212,8.941986,5.755432,-2.337717,2.290552,1.414541,7.537762,-2.843062,2.025720,2.323418,4.654395,9.801519,0.038230,-6.511327,-8.031375,2.635020,-2.019377,-7.903897,7.828778,-7.612110,-0.412224,-0.986388,-4.009618,2.246973,6.072295,-6.321916,-9.033136,2.995486,4.994296,7.619958,2.471948,2.769196,5.011473,5.032722,-8.689309,-5.267576,6.010059,7.648940,4.431053,0.589740,2.126556,9.163478,5.956378,-6.466648,-2.828681,-9.762500,-5.839170,-4.743144,2.171802,-9.540574,5.611909,7.289979,-4.929167,-6.605355,4.444455,-6.097232,6.835712,-5.838330,-6.434884,1.648827,-4.113335,-0.328093,1.240288,9.476840,5.860996,1.079653,-7.522581,8.141618,6.066190,-5.906854,-7.958808,9.412016,8.208939,-3.588501,-4.472645,-3.766888,-9.970078,-1.361662,8.874299,-0.808606,7.271325,6.890215,-4.841189,-8.029389,-6.964523,3.538516,6.372517,1.104915,-0.659214,9.777413,6.132149,-8.969423,-0.602977,-7.689886,-2.963939,-7.429973,-4.588039,1.720322,2.310266,-9.859280,-6.410103,-4.239243,-7.023688,-0.524366,2.673036,-4.654787,-6.299322,-5.246080,3.536562,-7.137078,-6.905473,1.664056,7.708761,2.362627,7.557908,-1.590787,1.424864,0.789327,-3.154761,7.323520,6.736192,4.083520,-2.472928,4.282469,-5.794921,4.263484,-8.370674,1.771273,2.429927,-6.165099,-2.877838,-3.643170,1.656579,8.788892,-9.363159,-9.775132,-4.559854,9.669080,5.398405,-6.858474,-5.484014,-1.004425,7.305810,-2.919901,1.873351,5.597272,-2.489637,2.535900,1.062179,7.480794,6.007178,-2.109690,9.706807,-2.479455], dtype = "float32")#candidate|5538|(600,)|const|float32
call_5537 = relay.TupleGetItem(func_4949_call(relay.reshape(const_5538.astype('float32'), [4, 15, 10])), 11)
call_5539 = relay.TupleGetItem(func_4952_call(relay.reshape(const_5538.astype('float32'), [4, 15, 10])), 11)
output = relay.Tuple([call_5531,call_5537,const_5538,])
output2 = relay.Tuple([call_5532,call_5539,const_5538,])
func_5549 = relay.Function([], output)
mod['func_5549'] = func_5549
mod = relay.transform.InferType()(mod)
output = func_5549()
func_5550 = relay.Function([], output)
mutated_mod['func_5550'] = func_5550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5443_call = mod.get_global_var('func_5443')
func_5445_call = mutated_mod.get_global_var('func_5445')
call_5560 = relay.TupleGetItem(func_5443_call(), 1)
call_5561 = relay.TupleGetItem(func_5445_call(), 1)
output = relay.Tuple([call_5560,])
output2 = relay.Tuple([call_5561,])
func_5577 = relay.Function([], output)
mod['func_5577'] = func_5577
mod = relay.transform.InferType()(mod)
output = func_5577()
func_5578 = relay.Function([], output)
mutated_mod['func_5578'] = func_5578
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5628 = relay.var("var_5628", dtype = "int16", shape = (16, 9, 9))#candidate|5628|(16, 9, 9)|var|int16
var_5629 = relay.var("var_5629", dtype = "int16", shape = (16, 9, 9))#candidate|5629|(16, 9, 9)|var|int16
bop_5630 = relay.maximum(var_5628.astype('int16'), relay.reshape(var_5629.astype('int16'), relay.shape_of(var_5628))) # shape=(16, 9, 9)
output = bop_5630
output2 = bop_5630
func_5638 = relay.Function([var_5628,var_5629,], output)
mod['func_5638'] = func_5638
mod = relay.transform.InferType()(mod)
mutated_mod['func_5638'] = func_5638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5638_call = mutated_mod.get_global_var('func_5638')
var_5640 = relay.var("var_5640", dtype = "int16", shape = (16, 9, 9))#candidate|5640|(16, 9, 9)|var|int16
var_5641 = relay.var("var_5641", dtype = "int16", shape = (16, 9, 9))#candidate|5641|(16, 9, 9)|var|int16
call_5639 = func_5638_call(var_5640,var_5641,)
output = call_5639
func_5642 = relay.Function([var_5640,var_5641,], output)
mutated_mod['func_5642'] = func_5642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5412_call = mod.get_global_var('func_5412')
func_5413_call = mutated_mod.get_global_var('func_5413')
call_5677 = relay.TupleGetItem(func_5412_call(), 0)
call_5678 = relay.TupleGetItem(func_5413_call(), 0)
var_5680 = relay.var("var_5680", dtype = "float32", shape = (7, 9, 15))#candidate|5680|(7, 9, 15)|var|float32
bop_5681 = relay.floor_mod(call_5677.astype('float64'), relay.reshape(var_5680.astype('float64'), relay.shape_of(call_5677))) # shape=(7, 9, 15)
bop_5684 = relay.floor_mod(call_5678.astype('float64'), relay.reshape(var_5680.astype('float64'), relay.shape_of(call_5678))) # shape=(7, 9, 15)
func_5443_call = mod.get_global_var('func_5443')
func_5445_call = mutated_mod.get_global_var('func_5445')
call_5685 = relay.TupleGetItem(func_5443_call(), 1)
call_5686 = relay.TupleGetItem(func_5445_call(), 1)
func_2658_call = mod.get_global_var('func_2658')
func_2661_call = mutated_mod.get_global_var('func_2661')
var_5705 = relay.var("var_5705", dtype = "int32", shape = (96,))#candidate|5705|(96,)|var|int32
call_5704 = func_2658_call(relay.reshape(var_5705.astype('int32'), [4, 8, 3]))
call_5706 = func_2658_call(relay.reshape(var_5705.astype('int32'), [4, 8, 3]))
uop_5723 = relay.cos(call_5677.astype('float64')) # shape=(7, 9, 15)
uop_5725 = relay.cos(call_5678.astype('float64')) # shape=(7, 9, 15)
output = relay.Tuple([bop_5681,call_5685,call_5704,var_5705,uop_5723,])
output2 = relay.Tuple([bop_5684,call_5686,call_5706,var_5705,uop_5725,])
func_5736 = relay.Function([var_5680,var_5705,], output)
mod['func_5736'] = func_5736
mod = relay.transform.InferType()(mod)
mutated_mod['func_5736'] = func_5736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5736_call = mutated_mod.get_global_var('func_5736')
var_5738 = relay.var("var_5738", dtype = "float32", shape = (7, 9, 15))#candidate|5738|(7, 9, 15)|var|float32
var_5739 = relay.var("var_5739", dtype = "int32", shape = (96,))#candidate|5739|(96,)|var|int32
call_5737 = func_5736_call(var_5738,var_5739,)
output = call_5737
func_5740 = relay.Function([var_5738,var_5739,], output)
mutated_mod['func_5740'] = func_5740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5549_call = mod.get_global_var('func_5549')
func_5550_call = mutated_mod.get_global_var('func_5550')
call_5790 = relay.TupleGetItem(func_5549_call(), 0)
call_5791 = relay.TupleGetItem(func_5550_call(), 0)
output = call_5790
output2 = call_5791
func_5800 = relay.Function([], output)
mod['func_5800'] = func_5800
mod = relay.transform.InferType()(mod)
output = func_5800()
func_5801 = relay.Function([], output)
mutated_mod['func_5801'] = func_5801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5412_call = mod.get_global_var('func_5412')
func_5413_call = mutated_mod.get_global_var('func_5413')
call_5843 = relay.TupleGetItem(func_5412_call(), 1)
call_5844 = relay.TupleGetItem(func_5413_call(), 1)
output = call_5843
output2 = call_5844
func_5847 = relay.Function([], output)
mod['func_5847'] = func_5847
mod = relay.transform.InferType()(mod)
mutated_mod['func_5847'] = func_5847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5847_call = mutated_mod.get_global_var('func_5847')
call_5848 = func_5847_call()
output = call_5848
func_5849 = relay.Function([], output)
mutated_mod['func_5849'] = func_5849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5847_call = mod.get_global_var('func_5847')
func_5849_call = mutated_mod.get_global_var('func_5849')
call_5855 = func_5847_call()
call_5856 = func_5847_call()
var_5867 = relay.var("var_5867", dtype = "float32", shape = (15, 16, 4))#candidate|5867|(15, 16, 4)|var|float32
bop_5868 = relay.floor_divide(call_5855.astype('float32'), relay.reshape(var_5867.astype('float32'), relay.shape_of(call_5855))) # shape=(15, 16, 4)
bop_5871 = relay.floor_divide(call_5856.astype('float32'), relay.reshape(var_5867.astype('float32'), relay.shape_of(call_5856))) # shape=(15, 16, 4)
uop_5873 = relay.atanh(bop_5868.astype('float32')) # shape=(15, 16, 4)
uop_5875 = relay.atanh(bop_5871.astype('float32')) # shape=(15, 16, 4)
uop_5884 = relay.asin(uop_5873.astype('float64')) # shape=(15, 16, 4)
uop_5886 = relay.asin(uop_5875.astype('float64')) # shape=(15, 16, 4)
output = uop_5884
output2 = uop_5886
func_5890 = relay.Function([var_5867,], output)
mod['func_5890'] = func_5890
mod = relay.transform.InferType()(mod)
mutated_mod['func_5890'] = func_5890
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5891 = relay.var("var_5891", dtype = "float32", shape = (15, 16, 4))#candidate|5891|(15, 16, 4)|var|float32
func_5890_call = mutated_mod.get_global_var('func_5890')
call_5892 = func_5890_call(var_5891)
output = call_5892
func_5893 = relay.Function([var_5891], output)
mutated_mod['func_5893'] = func_5893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5549_call = mod.get_global_var('func_5549')
func_5550_call = mutated_mod.get_global_var('func_5550')
call_5917 = relay.TupleGetItem(func_5549_call(), 1)
call_5918 = relay.TupleGetItem(func_5550_call(), 1)
func_5800_call = mod.get_global_var('func_5800')
func_5801_call = mutated_mod.get_global_var('func_5801')
call_5919 = func_5800_call()
call_5920 = func_5800_call()
output = relay.Tuple([call_5917,call_5919,])
output2 = relay.Tuple([call_5918,call_5920,])
func_5921 = relay.Function([], output)
mod['func_5921'] = func_5921
mod = relay.transform.InferType()(mod)
mutated_mod['func_5921'] = func_5921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5921_call = mutated_mod.get_global_var('func_5921')
call_5922 = func_5921_call()
output = call_5922
func_5923 = relay.Function([], output)
mutated_mod['func_5923'] = func_5923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5443_call = mod.get_global_var('func_5443')
func_5445_call = mutated_mod.get_global_var('func_5445')
call_5932 = relay.TupleGetItem(func_5443_call(), 0)
call_5933 = relay.TupleGetItem(func_5445_call(), 0)
var_5938 = relay.var("var_5938", dtype = "float32", shape = (7, 9, 15))#candidate|5938|(7, 9, 15)|var|float32
bop_5939 = relay.left_shift(call_5932.astype('uint16'), relay.reshape(var_5938.astype('uint16'), relay.shape_of(call_5932))) # shape=(7, 9, 15)
bop_5942 = relay.left_shift(call_5933.astype('uint16'), relay.reshape(var_5938.astype('uint16'), relay.shape_of(call_5933))) # shape=(7, 9, 15)
func_1662_call = mod.get_global_var('func_1662')
func_1665_call = mutated_mod.get_global_var('func_1665')
const_5948 = relay.const([6.215140,8.390520,-2.920191,-6.748330,6.016779,6.402462,-4.111781,-7.329025,-5.522738,6.809139,0.812530,2.626595,-7.384847,7.090333,4.114927,3.628668,1.580088,8.714121,-6.409019,1.298927,-2.999050,-4.529193,-9.561601,3.794612,1.024267,-0.317591,-4.058561,4.778285,-2.445942,-6.673252,-8.880286,-7.509832,-7.931750,4.921167,0.543684,-3.823591,-0.844838,-3.058339,4.385617,2.475371,-3.762000,-0.874760,7.464600,9.091321,-7.118921,1.117094,-3.497518,-7.412442,6.720042,1.026396,-3.893219,-5.541667,-9.461107,2.385999,6.441130,-5.272248,6.778765,-0.443970,0.298767,-6.937204,4.800512,-7.136653,0.195981,-4.227215,-0.071847,7.138372,7.779403,0.398759,-4.849025,-1.083468,4.200750,-7.318820,3.984967,1.444890,-1.675815,-3.189908,2.406053,1.231910,1.629874,4.053290,2.459436,3.014178,9.597407,4.316875,7.870462,3.284352,-5.572918,0.944463,-9.117805,-0.044916,-4.422468,-2.132343,5.178766,-1.047613,1.295231,6.820856,-7.841575,0.663283,0.676770,-7.018825,-7.131165,-7.282806,7.941802,-6.769780,-1.960475,-2.003641,8.345142,2.765164,5.401506,-6.211471,5.626575,4.003155,-1.033162,3.015854,4.518622,-6.655242,1.704538,7.942255,6.918184,-0.598413,-2.667434,-8.632672,4.293022,8.914376,-5.611593,8.682461,4.409552,3.308415,-0.696957,5.522229,-2.454934,3.014600,-4.660536,-6.751142,9.967653,-3.817035,-9.597499,7.153963,-3.350289,-0.193020,-1.718540,-5.624433,-5.499406,8.095659,4.609476,3.750107,1.581206,7.945991,9.676045,6.673801,6.242126,-7.288732,-2.601821,8.405403,-1.807228,0.861485,-3.274777,-1.278037,-0.052386,3.683327,4.224132,3.482971,3.450629,-4.866348,1.229335,4.862588,8.962944,-1.829313,-2.567475,-1.841895,9.303323,4.788187,-4.772807,-7.542240,-8.248256,-8.025697,-6.450898,-0.722101,-8.639069,-6.743286,-6.895941,-7.070523,-0.676214,2.818341,4.390761,5.464960,-3.213612,-3.710610,0.042709,3.651177,-4.514270,4.448391,7.114078,-4.400469,-0.030874,6.213130,8.780980,8.679849,-4.386946,-8.343295,-3.716747,-9.562928,-2.729887,6.523352,-5.328300,9.214940,-0.059793,4.655574,-8.912672,-2.038421,8.049770,6.787298,7.204076,-0.483946,-1.214975,2.897253,-3.594550,1.331545,-6.456116,-4.185112,4.722359,5.001401,-3.405713,8.138236,3.694387,-0.768414,-3.826307,1.555601,-8.741161,9.465625,-3.590234,2.902891,6.597159,4.451062,-6.304373,-6.723338,-9.998794,5.810174,-4.417389,0.777163,-8.792660,-2.926552,-1.146441,7.593994,2.288953,9.823627,9.108921,4.182288,0.180121,2.791620,-5.684453,4.239390,7.875585,-7.363651,0.868377,5.710371,5.673745,-6.358553,1.818807,-2.384821,0.064335,-9.061608,-5.580086,1.121740,9.783962,7.048635,-2.079340,-2.330981,-2.997904,4.116225,-4.132585,6.239412,7.686096,1.340018,5.036768,6.405442,7.499052,-4.022771,5.600382,6.153318,-0.470720,5.195402,8.041045,-9.077936,-7.169772,-9.889495,8.925625,-6.418966,0.195307,2.162354,9.161768,3.861535,3.911960,-7.989819,6.695506,6.390262,5.605051,-8.175463,-1.271437,-8.705035,4.181794,1.284583,-7.054561,4.434049,-3.715499,1.911891,3.001312,-2.559253,-6.591759,-5.913582,1.298715,4.414027,-0.090619,9.265582,-2.115247,1.819509,-1.622311,-7.138343,-9.974328,3.152672,5.441065,-6.015120,9.209671,6.414941,3.937757,-5.337184,4.398358,4.034911,7.402630,-3.597706,-6.046651,5.865958,-4.381763,-5.390578,6.901282,1.024821,-7.313629,-8.353900,8.701957,7.879276,6.733174,1.262616,8.439436,-6.118432,5.349969,-1.009367,-5.062402,2.101175,-3.865916,0.664696,2.212125,-8.269493,-8.526564,9.586600,-9.900669,-0.619970,-5.004448,-3.935773,4.009120,9.751688,3.485456,-0.323251,8.146703,-1.895830,6.180458,-8.101108,6.111484,-5.109745,5.730528,0.110079,-5.823513,6.324661,6.265392,-3.332556,-6.454246,8.467026,-7.132926,6.748803,5.622698,4.166564,7.126336,0.580907,-1.678418,-2.708521,-8.841261,9.921466,0.869773,1.349704,-2.981399,6.606051,0.823645,-9.171465,0.213100,-1.458225,3.969353,6.928280,3.113420,9.575740,0.342900,2.386379,1.303713,-5.810772,0.013577,4.255261,-4.826339,-6.243261,-7.635722,6.393238,-4.291822,-3.845659,8.046271,-7.566648,5.094564,-2.678544,5.616713,-8.362425,-5.730898,1.992204,-0.195910,7.275650,-2.727771,5.181912,-9.323638,-4.337956,-4.389648,-3.388892,-3.049407,-1.329027,8.363544,-9.025991,-2.076403,6.664091,-0.352316,-5.860120,-6.014036,2.530424,8.832258,2.358797,1.845990,-9.959816,-8.629577,9.250547,3.894521,-5.050037,-8.856882,6.286470,8.701254,9.230320,5.214732,7.166610,3.902280,-9.496858,2.736734,-6.068903,9.629696,-2.281832,9.080181,5.790536,3.612526,5.088261,-9.613023,-9.503434,-1.098673,4.122324,5.252023,6.738635,6.599168,8.278610,2.951156,2.402497,-1.767620,-2.867921,3.700269,-0.516650,-7.255286,-7.662829,-9.839247,-3.111262,-2.653472,-0.769711,-5.317777,-7.327465,-5.322492,-3.844969,4.378958,-6.608012,2.816547,-3.908475,-7.175030,1.531760,-5.613237,-1.971329,-0.058691,1.939476,-0.482113,-2.475840,7.334783,4.686836,-0.098361,3.507106,5.950214,8.717582,9.649657,-1.277750,-1.265084,-9.914803,9.296145,5.927368,6.184303,5.073068,9.054111,2.380246,-0.556783,-1.124322,-2.209454,4.583018,3.847369,4.128237,-2.943514,3.872716,7.902457,6.324697,-6.453300,5.083432,-7.835216,6.804548,-3.552032,-0.755621,7.381897,-9.618629,1.541402,-3.794402,-8.482626,8.234599,0.679768,-2.183286,-2.914514,9.922914,-7.356770,-3.220306,4.783094,-4.599175,-4.457776,6.745133,3.161306,-4.740046,1.979533,-8.226654,-7.274199,-3.804961,-1.810454,-3.196686,-9.654034,0.891303,-8.712775,8.190107,0.203058,-9.904604,8.902896,-3.876207,7.936020,4.492473,3.189673,-6.427841,4.410869,8.882064,6.195204,-1.431616,4.460994,4.903674,2.949687,-1.100566,-3.749818,3.758687,-1.171749,0.681204,-8.903159,-7.775475,-2.984976,8.300841,1.968861,0.146228,-4.572665,-7.318290,4.118686,-5.401425,8.743983,8.198380,7.907239,9.464573,-8.381043,1.494512,6.767376,-3.073354,-6.382318,7.242773,-4.460109,1.264340,-0.561459,0.716929,2.892856,-3.937742,-0.798865,-2.252923,-5.099715,9.864369,-0.176869,7.792712,-7.841961,0.540622,4.341900,-4.871603,8.269529,5.128447,8.419766,3.781684,-1.055396,8.239075,-3.937635,-5.637147,4.767634,5.443691,-8.790357,8.031428,9.927726,1.222995,4.425234,-8.945635,7.350495,-4.671219,-4.461925,3.682090,-4.913837,2.633705,9.231325,5.816400,8.486915,-2.958889,-0.506296,-2.504367,7.800405,-8.682066,5.763147,4.931406,-2.366794,-4.551142,-4.061104,5.254371,-2.301304,9.717900,-5.528820,3.747492,6.119492,4.818329,9.839293,9.415633,-8.785110,-9.945130,6.254266,-3.427977,2.969239,-9.787148,1.385153,-8.330477,4.284086,4.380060,9.032218,4.960162,-8.962970,-2.683313,5.595920,-1.525787,8.623927,6.836110,6.416550,4.009597,-4.988623,-9.224283,0.967534,-1.253652,-8.067610,9.231861,-0.877285,-5.673545,1.154184,-2.488752,7.744453,-2.034310,9.389831,2.114962,-3.760519,-3.908490,-7.263347,-3.556306,5.631267,-8.240994,-9.046871,9.310030,6.071928,3.256890,-4.018614,5.562257,3.822831,9.231426,4.504008,6.917467,8.929834,4.666002,-0.753783,1.283219,-8.754914,2.802602,1.073069,0.521831,-3.383070,-7.383666,-8.876170,-7.135085,5.575233,1.239548,-3.235057,-6.959484,-4.417534,-4.388177,4.405958,-7.956283,5.068383,-8.280913,5.855246,3.537366,4.211731,-3.251252,3.759254,0.973385,-3.444694,-8.955764,9.178416,-3.482491,-7.222956,-7.918925,4.669255,7.626030,-2.121503,5.375083,5.166537,6.317873,-8.367086,-5.001945,9.370962,8.076309,-9.366615,-0.874331,-7.428274,5.014634,4.071635,8.419735,4.143814,-8.324196,-7.841803,8.338563,-6.201813,-3.479099,-8.945787,7.848001,-6.070782,-7.693417,-0.377047,-3.823925,8.196835,8.516105,4.743429,3.111774,1.934790,-1.691848,-0.019274,0.440510,8.621387,9.424706,-1.432855,8.473267,3.953023,-1.445123,-6.783686,0.776606,-0.302703,8.570074,1.072217,-2.586446,-0.814312,-7.425622,-9.722679,8.932255,-9.660667,-2.482765,8.126063,4.982088,4.834709,-1.796004,2.596211,1.416556,-0.924411,3.986019,-9.797030,-7.033695,6.804592,6.763582,-3.174880,7.772815,0.863638,-7.513873,0.726952,-8.203298,8.306047,-9.075969,-3.493270,-3.973607,-1.729975,-4.411534,-5.186353,2.600219,5.494510,1.202758,-6.410866,-9.463144,-7.858057,-2.144286,5.846265,-1.420657,-5.353936,9.537381,8.530088,4.670344,1.508292,-1.254804,0.837690,0.912181,-4.630755,-7.174502,4.216858,-8.600191,2.280287,7.026009,9.313130,0.912166,7.731240,-3.836935,1.147260,-0.151845,3.673265,-1.307193,3.282779,-4.991155,-8.303707,-8.467257,2.931273,-3.448247,3.103588,5.057233,3.819038,-2.270000,0.003938,9.956823,7.806773,-5.619046,-0.993044,5.246073,-1.071844,0.704368,-7.794252,4.316930,3.674004,9.599424,6.616132,0.601816,1.653874,1.191626,5.570634,0.524577,7.071111,7.990990,-4.494909,6.015948,-5.331260,-8.314667,-8.342654,5.152794,0.562053,-8.658648,0.954275,1.596518,-2.034161,-0.922406,-5.706101,-5.074050,8.002958,6.133253,-6.310410,-8.365495,-4.191879,5.801787,-7.025456,-1.461081,9.564489,9.351000,-4.082853,-9.492016,2.194739,-6.860270,-9.781975,2.299299,6.972130,-3.564271,7.525374,-5.762734,6.568372,-8.174369,-1.056820,1.872283,-5.811855,3.695123,3.276740,0.658609,-9.919131,-2.407100,-2.145617,-8.278977,5.047765,6.385827,7.292964,-1.262651,3.981506,7.534993,5.424379,-5.782372,4.161916,-5.548340,3.855943,8.785688,-9.403605,-9.993391,-6.651276,-2.154385,1.073037,-4.373787,3.677621,0.943952,-6.968856,4.691635,3.692515,2.907480,6.904705,-5.527375,2.601952,-5.832014,3.304773,-1.025465,8.677063,4.453913,-3.509243,0.920776,-1.423632,-3.743019,7.742213,-1.593059,5.850238,1.769200,-6.470263,8.159506,-8.618280,2.448933,9.999259,4.997939,-0.865164,5.227596,-1.034999,-6.101056,-2.271837,5.810470,-2.145608,-6.450542,8.929270,-8.697558,5.147054,9.955206,5.703422,-2.273546,-7.856021,2.420239,-0.307846,1.880218,-1.420900,-9.397640,7.649703,-6.500985,8.334936,2.554905,0.091176,-0.969433,-8.612525,-6.589199,-4.196801,-0.689517,-2.368357,5.068417,-8.269801,2.748477,5.927320,4.378424,-7.728985,-8.482428,4.720899,-8.798641,-6.148816,2.266382,0.599816,-2.014875,-6.964988,-0.893918,0.678143,-1.785637,0.401562,-2.342048,5.956397,3.403957,1.011048,4.685922,4.533439,9.438525,2.969273,-6.261510,-6.596062,-7.900622,5.835436,3.691709,2.072307,1.254041,-4.457039,7.310553,1.583798,0.167439,-9.169168,9.351756,-4.179809,0.842496,-1.136029,-2.785302,8.893399,7.136622,-9.985659,8.530367,-2.859485,-2.438651,-5.391163,-7.821842,-5.137988,-6.485741,5.534779,-0.771611,4.345885,7.942380,-3.710601,-6.019462,-2.120626,-2.856652,4.658473,-4.981096,-8.660180,-6.849482,-9.961963,1.429749,-9.869466,-1.313883,6.149614,5.368155,-9.179750,-5.371589,6.830287,-5.057240,9.360492,-7.939211,-3.522037,-3.119266,4.465260,4.760893,-1.126004,-9.173814,2.570690,-3.690540,9.985022,4.231682,-0.733001,-2.564288,-0.261665,0.989586,-5.438279,-7.149956,9.096422,2.160220,8.124169,-9.482954,5.306418,-2.731582,8.045478,-9.856214,0.099654,8.604777,5.458552,4.031590,-3.497233,2.305623,-3.442535,-7.752745,3.941273,-2.554859,-1.065905,-4.960020,2.316220,-1.250636,1.927631,7.369503,-8.524846,-5.701365,4.053178,-4.406920,-5.364093,-7.886957,0.466437,-0.327077,-9.322671,-9.236029,-3.377332,4.771613,6.797719,-9.498570,-4.279067,7.813252,-5.650981,-7.822791,5.893100,-7.138385,9.186938,-1.128550,7.513702,3.326643,0.188245,-0.706203,-2.640660,0.920800,-1.882333,-1.832445,-6.311698,0.740096,7.510572,-3.245075,-7.827447,-5.965903,3.942339,8.446965,-8.515031,-4.432022,-4.696860,9.836963,-6.517919,-7.827821,-4.627430,7.308838,8.166114,-1.552327,2.512843,7.687848,7.653905,0.411573,3.386469,3.951690,1.888498,3.293530,-1.502664,-6.012080,-0.130103,7.331613,3.118868,2.141483,-4.859125,5.633502,-1.683326,5.804507,-6.814195,-1.669942,4.804334,9.096716,2.827438,-4.347582,1.536381,6.344322,-3.984624,2.387391,7.128217,-2.473779,-9.607311,4.889339,-4.496599,-4.630411,2.099318,-5.730929,-0.872252,2.390953,9.365835,9.419494,-0.513709,-0.337288,-0.676808,-5.945743,-5.002599,0.571180,-3.941095,5.358683,8.179777,-8.021779,-1.149507,-3.166688,-7.373322,-4.301322,0.009899,5.445627,-2.668765,-2.923685,0.597288,6.356976,4.514794,-6.015576,7.589326,3.157312,1.802661,-6.176932,-3.482610,-3.260700,-7.651954,-5.534833,-1.870447,-9.734245,9.101821,5.224348,8.658695,-4.858147,7.934288,5.813637,-5.846344,-0.322019,-9.813756,9.480970,7.523058,6.685626,8.060307,3.638864,6.136284,-3.030901,8.925884,7.027844,-4.467837,3.702969,-6.982354,5.477969,6.317441,-8.628131,-8.880569,2.032691,2.917311,9.617244,-0.067020,0.950555,-8.472552,7.663844,1.923861,3.948534,-8.290447,-1.997172,0.717630,-1.371405,4.833540,-7.283172,-3.280136,8.896725,-4.434816,-2.106380,5.869286,4.979367,-2.267257,4.005820,6.248682,1.764430,-8.375467,8.477566,2.686572,-4.018620,-8.178378,-2.396270,-7.658131,9.328565,3.648032,-6.997534,5.277514,-5.087756,-4.564631,7.227848,-6.746053,8.633575,-0.302408,-4.450600,-4.730238,-6.841321,5.433430,-0.271036,-8.128172,6.806463,3.041445,4.138932,9.574399,-3.294850,5.550501,9.953866], dtype = "float64")#candidate|5948|(1320,)|const|float64
call_5947 = relay.TupleGetItem(func_1662_call(relay.reshape(const_5948.astype('float64'), [15, 8, 11])), 1)
call_5949 = relay.TupleGetItem(func_1665_call(relay.reshape(const_5948.astype('float64'), [15, 8, 11])), 1)
func_1301_call = mod.get_global_var('func_1301')
func_1304_call = mutated_mod.get_global_var('func_1304')
var_5957 = relay.var("var_5957", dtype = "bool", shape = (4, 84))#candidate|5957|(4, 84)|var|bool
var_5958 = relay.var("var_5958", dtype = "float32", shape = (960,))#candidate|5958|(960,)|var|float32
call_5956 = relay.TupleGetItem(func_1301_call(relay.reshape(var_5957.astype('bool'), [3, 7, 16]), relay.reshape(var_5958.astype('float32'), [960,]), ), 1)
call_5959 = relay.TupleGetItem(func_1304_call(relay.reshape(var_5957.astype('bool'), [3, 7, 16]), relay.reshape(var_5958.astype('float32'), [960,]), ), 1)
func_4343_call = mod.get_global_var('func_4343')
func_4352_call = mutated_mod.get_global_var('func_4352')
const_5962 = relay.const([4.325515,8.812325,1.700453,8.254292,-1.577601,-9.391806,-8.916801,-6.547451,5.266598,3.061873,-2.644462,8.770947,-5.171584,9.106687,8.579309,-0.012345,-5.462636,-6.673017,9.385540,8.846980,-8.335840,-0.494344,-1.739634,7.748246,-6.710610,-5.619986,-5.776151,3.422057,4.124364,2.605929,9.434667,1.376323,6.459783,6.101014,-3.121789,5.048727,4.405717,6.159416,-4.506638,8.719576,6.845960,4.089044,-3.960348,-5.195620,-0.413377,-6.403439,7.137340,8.013224,8.163070,-1.292444,5.397014,-9.635075,9.887699,4.341648,-2.797247,-0.036179,-0.763754,-8.502228,-1.123649,-2.372586,-0.601280,-4.339500,7.554613,-8.119005,-1.525290,-2.956192,-2.181819,-2.564211,-0.874669,6.450470,5.922365,-1.069184,-2.373392,-7.154823,8.019925,0.972975,1.213100,6.165525,8.401418,8.686007,-2.675600,-5.063345,8.994537,-2.423205,-6.961016,-9.506071,5.550690,3.136861,1.943529,-9.298907,8.935251,-3.087610,0.947561,6.345523,-7.455950,6.226644,-9.170758,9.778068,-9.011385,2.934227,-8.196098,-1.375140,-2.613971,3.953105,0.055465,-0.521256,7.640503,1.318045,-3.404347,0.974595,-8.218941,-9.056500,-5.403460,-1.940053,5.022117,9.470786,5.891020,-8.022637,-5.889754,-0.586113,2.195170,-0.530090,9.353023,-1.380169,-1.897090,-4.214274,-6.447887,6.475967,5.169931,5.689874,7.255163,-8.663663,4.434344,-2.560953,-1.295681,2.818065,2.742231,-1.102630,-3.202578,-6.404664,-6.474250,0.051521,4.586275,-1.124949,-9.980407,-9.567596,-4.191700,-1.995125,1.425217,4.658989,1.934018,1.757748,-3.824562,-1.403523,-7.650296,2.453572,6.081391,3.243547,4.395948,7.087347,-9.869316,3.281020,-7.865010,-1.989637,-1.980076,1.861097,-6.416901,-7.474619,-5.006091,8.871697,-2.114876,-4.066334,0.974801,-7.229905,4.095174,-5.562558,9.452324,-0.869328,-3.808946,5.304461,1.552414,-1.337212,-9.279095,-2.787486,1.283564,9.456258,0.125267,-9.368857,-9.853002,2.238231,-5.671181,7.747468,-7.082898,-1.773430,-6.234491,6.883383,-6.638930,3.840480,7.785214,-5.826517,-7.648650,-2.445408,5.346737,-4.935576,6.191917,4.716630,-7.280499,-7.571861,-2.913160,4.221016,-6.884573,-7.763142,-6.719299,6.254996,-1.615910,2.921054,-6.887937,-7.805288,-9.431056,8.382538,-0.875391,5.423261,0.284367,4.202937,-6.328792,-8.973008,-7.383791,-3.657364,-9.391711,-2.494673,3.657987,1.145479,6.283058,7.446359,9.863897,2.146712,1.836113,-7.633963,-9.501095,-8.531763,-4.374357,-0.607200,-4.746459,7.831922,-7.465975,8.693349,4.227194,2.618104,-2.561675,-8.486991,5.956680,0.210807,1.017862,6.056224,-1.416682,-1.947963,-3.634820,2.748925,0.603720,-7.759710,-8.435715,0.643999,-3.813366,-5.652361,8.417878,-1.521691,-2.142637,1.185813,6.676428,-9.380424,9.155644,-4.821277,9.227896,-9.118356,7.216370,-9.902258,-1.390636,6.081096,0.913608,8.533674,8.122509,6.980868,9.078730,3.927008,-7.654970,-9.824767,-3.253397,2.937301,-5.001921,1.573650,-8.895350,1.968429,5.937528,-2.466871,-5.884826,-8.163184,2.379526,-4.922704,-9.412437,-8.848842,2.662365,-1.602823,0.770972,6.133644,4.863094,6.648309,-4.960325,-3.532937,-2.576129,-1.795208,-3.345645,-8.588881,5.455330,2.264863,-9.692230,-8.718745,-5.339684,4.836956,-2.968341,-8.696213,1.336085,-4.029930,-9.635622,-1.751332,1.981596,-6.666918,3.652748,6.636498,8.211029,-1.381539,-2.301290,5.355205,-1.398478,5.919574,4.149096,-1.255892,8.860607,-9.251495,-6.618616,-1.097125,-5.255858,3.208839,4.233428,-2.715268,0.074702,-4.819511,5.054334,3.714215,0.386108,-3.940722,-3.480787,8.990501,2.600269,6.643722,-0.780681,6.649758,-1.029953,-3.610322,-5.830630,-4.237147], dtype = "float64")#candidate|5962|(360,)|const|float64
var_5963 = relay.var("var_5963", dtype = "float64", shape = (120,))#candidate|5963|(120,)|var|float64
const_5964 = relay.const([-8.356130,-0.851692,-0.765931,-4.537500,0.176109,2.398779,8.638108,-5.726840,-9.539703,-4.878237,-9.700662,9.453312,-0.747032,-1.167216,6.037971,1.795936,0.615111,-8.891946,-3.419874,-7.317416,7.856649,-2.342119,1.866219,3.404333,6.297047,2.055673,-3.735976,-6.152590,-8.052538,-9.935486], dtype = "float32")#candidate|5964|(30,)|const|float32
var_5965 = relay.var("var_5965", dtype = "uint16", shape = (45,))#candidate|5965|(45,)|var|uint16
const_5966 = relay.const([-4,1,-3,2,-7,4,6,4,-1,10,-2,10,3,-7,4,8,-6,-1,-7,3,-5,6,10,-1,-4,-9,-1,-8,-1,-3,1,-2,-2,8,-5,-5,-7,-4,-3,-7,8,-5,5,3,-8,-10,8,8,6,-1,-4,-3,-7,7,4,1,10,-10,7,10,2,4,3,-1,-7,-9,-7,3,1,-8,-6,8,-2,2,4,5,-3,7,1,4,-8,-1,7,-3,-6,7,7,-7,-6,8,-2,-7,2,-10,9,4,-8,4,-1,-8,-7,8,-10,5,-5,-5,8,1,-3,-4,6,2,5,3,-3,10,8,4,-2,-4,-1,-3,3,8,6,10,2,-9,-8,-10,5,-10,9,-1,-2,9,3,2,-5,-2,6,6,-6,6,9,-6,7,7,2,8,-10,9,8,-1,-6,5,-7,-10,6,-6,2,-9,-7,-7,-2,-3,2,10,-5,-3,6,-3,-1,-7,-8,1,-4,-1,7,-2,-4,3,-8,6,-4,6,-8,-4,-1,5,-5,-1,7,3,-9,4,9,9,-10,5,-3,5,-10,-10,1,10,2,-6,3,-4,2,6,-7,3,10,-3,-8,6,-1,-9,-2,8,-10,4,4,6,5,-1,6,10,-3,1,-5,-9,5,-7,-7,-10,1,-10,1,-5,7,9,-2,-3,5,-6,3,5,5,5,-10,1,-1,8,-7,10,-9,-1,-9,-3,8,-7,7,9,5,-4,-2,-6,-5,5,-7,8,-4,-6,3,1,1,2,-9,9,-6,-9,-7,-1,9,-6,1,-4,-5,1,-2,-1,10,2,-6,-3,6,-3,7,7,10,-2,-7,9,7,-2,-4,-1,-6,-6,-5,-7,9,4,-1,-1,4,5,2,-5,-6,7,10,6,4,-10,-9,8,4,5,4,-10,1,-10,-9,-1,4,5,-9,-9,3,2,4,-3,3,-8,5,-5,-3,-9,-4,7,2,9,5,6,9,1,7,4,3,7,1,-4,1,-7,8,10,-10,-3,10,4,-5,-3,-10,-2,-10,-8,-3,5,8,8,10,5,-8,4,8,-7,4,5,8,6,10,-1,8,8,2,1,-3,-9,-5,-1,2,5,-10,9,-10,8,-8,-3,-8,2,7,1,10,-3,4,7,3,-1,4,3,-2,-6,-1,-5,-1,1,10,10,-2,4,-8,-2,-3,-6,-3,-3,-1,5,9,2,-9,-8,5,-9,-10,2,4,-2,9,5,6,-6,8,-10,-1,5,-5,9,10,6,-10,9,-4,-2,1,-4,-7,6,2,-2,-6,5,9,-1,1,-10,-6,5,-2,-3,-6,9,-9,-9,-1,-6,-8,-8,4,-8,9,-3,7,-4,-7,-1,6,-6,-5,8,6,2,-6,2,2,-4,-6,-5,-7,3,6,6,-1,8,7,-1,3,-8,-4,10,10,6,-1,2,-9,-3,-6,8,-1,-5,-6,3,10,10,-6,1,-2,-4,9,4,-1,-5,-6,-8,3,5,-2,1,-4,9,1,5,-8,-8,-7,8,-9,-8,-10,-10,-10,4,-7,-5,8,-10,3,-2,-6,-1,-5,4,-4,7,-7,-6,-3,-10,-7,-1,8,-4,9,-3,6,-10,2,3,6,-9,8,-1,-10,-1,-7,-4,6,-5,1,9,-1,10,-3,-1,-4,2,-10,5,6,-6,10,10,-7,-8,3,8,6,-1,-3,-8,5,-9,4,2,1,5,-10,-5,9,5,-3,-10,-1,8,3,10,-7,-10,4,5,4,5,6,-10,7,1,-8,-9,-1,-4,-6,-2,-5,5,6,5,1,-3,1,-2,-9,-8,-3,8,7,-10,-6,5,-7,-1,10,5,7,8,3,8,-4,-3,-5,-3,-2,-3,-7,2,-9,-9,8,-2,-3,-2,-2,-10,-7,5,5,4,3,8,6,-4,-2,7,6,-4,10,5,8,-10,10,7,-5,3,-10,8,10,2,4,3,-1,-6,4,-4,-7,-7,10,-2,-7,-1,-7,-3,-2,8,-8,-3,-7,7,2,-6,-6,8,9,10,-7,4,-1,-9,-6,6,-10,-1,2,10,1,-5,-1,2,-2,-7,-3,-3,8,7,10,7,6,1,-8,-2,-9,6,9,-9,2,2,-6,2,-6,9,-4,-8,-4,8,1,1,-4,-9,6,-4,3,6,8,5,-6,-1,-1,-3,-9,-9,9,-10,8,8,7,-2,7,-10,-5,10,-9,4,-2,-7,7,1,5,-1,-1,6,-10,-8,6,1,-3,5,-3,-4,-5,8,-8,-10,-2,-5,-7,-1,-1,3,9,1,8,-5,-6,-8,3,-4,6,-3,2,-1,1,7,3,1,5,-3,7,-6,9,5,9,-3,1,3,-6,-6,8,-10,5,-2,-3,-5,-3,5,-2,-3,10,-8,-2,6,-7,6,8,-8,-9,-5,-3,7,9,7,-2,6,6,3,-7,7,-3,-1,1,4,-8,-6,-7,-7,3,-2,4,-7,2,-10,10,4,10,-4,5,-5,-7,5,4,-4,8,1,4,4,-7,6,2,1,-7,7,5,6,2,7,3,-2,7,-5,-3,-8,3,-10,-8,-9,7,7,-7,-3,-2,5,-2,-10,-2,10,6,-8,6,6,-10,-8,-10,-9,6,3,2,7,5,-3,-2,2,4,7,-9,-5,7,-6,-8,3,6,-6,-6,-2,-10,-9,9,10,-3,-3,-1,9,-2,6,-1,6,7,-6,4,-5,3,7,-5,-5,-6,-1,7,-7,-5,8,2,-3,-5,1,9,6,-9,-5,-1,-5,7,6,-5,2,5,-8,-4,-5,10,-10,3,-2,-8,1,5,8,1,9,-6,8,1,-8,6,7,3,-6,3,1,5,3,-9,4,-5,-7,-4,-4,-10,-1,8,-2,-5,-7,6,-2,-1,1,-5,9,-7,-5,-1,7,1,-8,8,-10,-8,-3,-5,3,9,-6,-8,6,-3,-8,10,-8,7,-10,5,8,-4,-8,-6,-7,-7,-1,9,-4,-8,7,-10,-9,-10,-2,6,8,10,3,9,1,2,-2,-1,3,9,-9,6,5,-6,3,-6,-6,-9,2,-8,3,-7,10,9,7,-5,8,4,-9,8,-4,3,1,-8,9,8,-5,6,10,1,7,6,9,-7,-2,-10,-1,8,-6,-5,-4,8,-7,-7,4,-8,3,-6,-6,3,-10,-6,-8,5,1,-3,-4,-4,-7,-9,8,4,9,-6,-3,-3,-1,-3,3,7,9,-1,-8,1,-8,8,8,-9,-10,-2,-3,-5,3,-7,8,-2,-1,8,-8,7,-1,-1,-9,-6,5,-1,2,-5,5,-3,4,-8,8,6,-6,1,-10,-6,3,7,9,-8,-5,6,-5,-1,-4,-3,6,8,2,9,2,-10,-7,-4,-4,-7,-5,9,2,8,10,8,-3,-9,-6,9,-6,-4,6,1,-2,9,3,-9,9,-3,-3,4,-7,-2,-3,-2,2,4,-6,9,3,-7,-7,1,6,-4,5,4,3,7,-7,-5,-5,-6,-3,-10,5,5,6,6,2,-2,10,-10,-3,10,-4,-10,5,-1,-3,7,8,7,-9,-9,-5,-9,8,9,-6,1,6,-10,-7,9,2,5,-9,-6,-7,9,-6,10,-8,5,-10,6,6,-6,7,-3,1,-8,2,9,9,-5,6,10,6,8,4,1,9,4,-3,4,-7,-6,-8,-10,3,-3,1,-1,-3,-3,2,-6,3,9,-7,2,7,2,-3,2,6,-4,-1,5,3,-10,4,-8,-5,5,-9,-5,6,-2,10,6,-9,6,-5,-5,-9,-3,-10,1,5,-9,-4,-1,-2,9,6,1,-6,-7,-5,7,-7,6,1,-5,3,3,8,8,-8,3,4,9,-10,1,9,9,10,7,3,2,-6,5,-10,4,-4,9,-3,-2,-7,8,2,-3,-3,8,2,3,-2,2,5,-9,6,-1,-8,-2,5,-8,7,9,-4,5,-6,6,1,9,5,-7,6,2,8,-7,-5,-9,-8,4,5,10,10,-9,-3,6,-8,2,8,8,-9,-8,1,1,-6,-3,-4,4,8,-4,-4,10,-1,6,6,7,8,-4,-3,-8,7,1,4,-7,9,-3,2,-4,6,4,3,-7,-9,10,5,-10,-1,6,-6,-8,-2,7,4,9,-5,-10,-4,-1,-10,-4,1,7,-5,-7,-6,6,-6,4,-6,10,3,2,-10,2,-4,-3,10,-6,3,-8,8,6,8,-6,2,8,9,-5,-10,9,5,10,-5,2,2], dtype = "int64")#candidate|5966|(1568,)|const|int64
var_5967 = relay.var("var_5967", dtype = "float32", shape = (18,))#candidate|5967|(18,)|var|float32
call_5961 = relay.TupleGetItem(func_4343_call(relay.reshape(const_5962.astype('float64'), [2, 12, 15]), relay.reshape(var_5963.astype('float64'), [120, 1]), relay.reshape(var_5957.astype('bool'), [336,]), relay.reshape(const_5964.astype('float32'), [30,]), relay.reshape(const_5962.astype('float32'), [2, 12, 15]), relay.reshape(var_5965.astype('uint16'), [45,]), relay.reshape(const_5966.astype('int64'), [1568,]), relay.reshape(var_5967.astype('float32'), [18,]), ), 12)
call_5968 = relay.TupleGetItem(func_4352_call(relay.reshape(const_5962.astype('float64'), [2, 12, 15]), relay.reshape(var_5963.astype('float64'), [120, 1]), relay.reshape(var_5957.astype('bool'), [336,]), relay.reshape(const_5964.astype('float32'), [30,]), relay.reshape(const_5962.astype('float32'), [2, 12, 15]), relay.reshape(var_5965.astype('uint16'), [45,]), relay.reshape(const_5966.astype('int64'), [1568,]), relay.reshape(var_5967.astype('float32'), [18,]), ), 12)
bop_5978 = relay.mod(call_5956.astype('float32'), call_5961.astype('float32')) # shape=(9, 2, 960)
bop_5981 = relay.mod(call_5959.astype('float32'), call_5968.astype('float32')) # shape=(9, 2, 960)
func_4194_call = mod.get_global_var('func_4194')
func_4197_call = mutated_mod.get_global_var('func_4197')
const_5983 = relay.const([7,7,-3,-2,-3,3,-7,2,-2,4,-5,-4,8,-4,2,6,-3,9,-1,8,-10,-5,2,6,6,-2,4,3,2,9,-7,3,9,5,-3,-1,4,1,-3,-1,-8,10,-1,-6,-10,-4,1,6,-1,7,4,8,-3,-5,5,-5,-9,5,-8,10,7,5,-3,-7,4,8,-3,7,3,-4,7,1,4,3,-8,-10,-7,4,-7,-4,-4,-10,-7,3,-6,8,6,-9,-7,4,5,2,-10,4,7,8,-10,-6,-5,7,-4,7,8,2,-6,3,-10,-7,-1,-8,9,-10,6,8,-3,-5,1,8,-5,7,5,-7,4,5,-5,6,1,-4,1,10,-6,10,-6,9,7,7,5,-8,7,6,8,-5,7,-10,1,2,-7,-7,1,6,-1,1,-6,4,-4,-5,-4,5,-10,-10,5,10,-4,-6,-10,-4,-5,8,-4,5,5,-2,10,10,2,-3,-2,2,-10,3,-1,3,-10,1,5,3,8,9,-5,-10,-9,-8,7,-8,-8,-9,6,9,4,1,6,9,9,1,-7,3,-5,-8,2,-1,5,-1,3,6,-8,9,10,9,8,-5,3,2,10,-2,3,3,3,-8,2,4,-2,-7,2,2,-7,4,9,-8,5,-3,1,-6,-10,1,-2,-5,1,-7,-7,3,-7,4,5,7,1,-8,-6,9,3,-9,6,-9,5,9,6,5,-3,1,10,9,8,4,-4,-9,2,1,-9,4,-6,-5,9,8,-9,-1,7,-8,7,-6,-2,7,-2,-1,-9,-4,-10,-7,-8,-2,-4,-4,10,3,-2,8,5,-8,-2,-7,-4,5,-1,-6,9,-6,8,1,1,-5,4,-7,-9,-5,3,-3,6,-2,2,6,5,-2,9,1,7,3,9,2,6,-10,-3,8,9,-6,10,-2,-1,8,-8,-2,-4,8,-8,3,10,-4,4,-2,-4,6,8,8,2,1,-2,-7,-1,-4,-5,-2,-10,-10,8,9,-8,-5,5,-8,-7,7,4,-10,10,4,10,-2,4,-5,4,4,1,8,3,2,-7,-3,-4,-5,-6,-10,5,-7,4,1,7,9,7,3,5,1,-4,-2,5,3,-4,-8,-6,8,-8,-7,-4,-3,6,-10,1,5,-6,-6,-2,-2,3,-5,-6,9,2,9,4,9,-9,-5,2,8,4,-1,-4,-3,3,-7,1,-3,4,2], dtype = "uint32")#candidate|5983|(450,)|const|uint32
call_5982 = relay.TupleGetItem(func_4194_call(relay.reshape(const_5983.astype('uint32'), [10, 5, 9]), relay.reshape(const_5983.astype('uint32'), [10, 5, 9]), ), 0)
call_5984 = relay.TupleGetItem(func_4197_call(relay.reshape(const_5983.astype('uint32'), [10, 5, 9]), relay.reshape(const_5983.astype('uint32'), [10, 5, 9]), ), 0)
output = relay.Tuple([bop_5939,call_5947,const_5948,var_5957,var_5958,const_5962,var_5963,const_5964,var_5965,const_5966,var_5967,bop_5978,call_5982,const_5983,])
output2 = relay.Tuple([bop_5942,call_5949,const_5948,var_5957,var_5958,const_5962,var_5963,const_5964,var_5965,const_5966,var_5967,bop_5981,call_5984,const_5983,])
func_6005 = relay.Function([var_5938,var_5957,var_5958,var_5963,var_5965,var_5967,], output)
mod['func_6005'] = func_6005
mod = relay.transform.InferType()(mod)
mutated_mod['func_6005'] = func_6005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6005_call = mutated_mod.get_global_var('func_6005')
var_6007 = relay.var("var_6007", dtype = "float32", shape = (7, 9, 15))#candidate|6007|(7, 9, 15)|var|float32
var_6008 = relay.var("var_6008", dtype = "bool", shape = (4, 84))#candidate|6008|(4, 84)|var|bool
var_6009 = relay.var("var_6009", dtype = "float32", shape = (960,))#candidate|6009|(960,)|var|float32
var_6010 = relay.var("var_6010", dtype = "float64", shape = (120,))#candidate|6010|(120,)|var|float64
var_6011 = relay.var("var_6011", dtype = "uint16", shape = (45,))#candidate|6011|(45,)|var|uint16
var_6012 = relay.var("var_6012", dtype = "float32", shape = (18,))#candidate|6012|(18,)|var|float32
call_6006 = func_6005_call(var_6007,var_6008,var_6009,var_6010,var_6011,var_6012,)
output = call_6006
func_6013 = relay.Function([var_6007,var_6008,var_6009,var_6010,var_6011,var_6012,], output)
mutated_mod['func_6013'] = func_6013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5921_call = mod.get_global_var('func_5921')
func_5923_call = mutated_mod.get_global_var('func_5923')
call_6059 = relay.TupleGetItem(func_5921_call(), 0)
call_6060 = relay.TupleGetItem(func_5923_call(), 0)
func_1763_call = mod.get_global_var('func_1763')
func_1766_call = mutated_mod.get_global_var('func_1766')
const_6076 = relay.const([[6,6,5,4,-6,-1,-7,-2,6,7,-5,-3,8,3,-5,-9,-8,5,-4,-5,7,-1,-2,9,10,3,-2,-8,-10,10,1,8,-6,-7,3,-1,6,7,4,-10,-1,2,9,6,3,9,-9,3,10,-8,-2,3,2,7,-5,-10,10,-10,2,-10,-1,-6,6,6,1,-10,4,10,5,-9,4,5,-1,-3,-10,-7,4,3,-5,7,-4,1,-2,3,-8,-8,-4,-6,-9,-10,-6,1,-10,-9,3,5,4,-5,-6,-6,3,-7,-8,-1,-4,5,8,9,8,5,5,-1,5,-7,-4,-5,8,3,-5,-10,-5,-8,-1,-1,4,-10,-5,9,-7,-8,1,10,-5,3,7,-8,8,-5,10,8,1,4,1,5,10,-10,9,8,3,2,7,-2,4,4,5,-10,3,4,7,-3,5,8,3,7,-9,8,9,-1,-9,-10,8,-5,-4,-5,2,-10,1,-2,5,-2,8,-10,-10,-3,7,-7,5,-6,-3,-2,8,2,1,6,3,2,-10,2,5,-10,1,7,-1,5,-3,9,-10,-3,-4,8,-10,9,-3,9,6,-8,9,3,8,4,-6,5,3,-6,10,2,-2,-8,-4,3,-8,-7,6,-9,-7,-6,-5,8,10,4,-7,9,-9,-8,-6,3,2,3,9,2,6,-10,8,10,3,7,-10,3,3,-2,-2,3,6,-2,9,-2,10,7,-1,8,-2,-8,-1,-4,2,-3,1,-8,3,4,2,8,-2,-3,-3,9,-6,-8,7,9,-7,4,8,7,-2,5,8,7,8,3,1,-7,-10,-1,-6,-8,5,-3,6,6,10,1,5,-8,-9,6,-2,8,9,-10,-2,-10,-10,1,2,3,9,9,-3,-6,-7,-6,-7,-2,-4,1,-1,-4,-3,-7,4,-6,6,-6,-4,5,7,4,-6,8,9,7,-2,2,-9,2,-9,-6,-8,5,-7,5,10,5,8,-7,5,-8,8,-6,-9,10,-1,-2,-1,2,7,-1,7,-4,-1,1,-8,7,-8,-3,-3,4,9,2,-5,7],[2,-1,-4,-5,8,1,6,2,-10,1,-7,-7,3,6,6,1,3,-10,-9,-2,-10,4,2,1,10,5,-9,4,6,1,5,-3,-4,-5,-5,-1,-9,-2,-1,-3,5,8,4,5,2,-3,7,-5,-6,-5,5,-7,-1,9,4,-4,-2,2,-4,8,-4,-5,7,-4,-8,6,-5,2,-6,9,-3,-8,5,2,8,7,1,2,2,10,5,7,-3,-7,10,-6,10,9,-5,-5,1,6,6,7,-6,-7,-5,2,-3,-6,8,7,7,3,9,4,2,9,9,-5,4,-5,-6,8,9,-4,5,5,1,1,-6,9,6,5,5,10,1,2,-6,1,-2,2,-8,7,-3,-9,-7,6,-8,1,-10,-5,-8,-10,-5,10,8,7,9,7,-4,10,7,-7,8,6,-8,-10,-8,-9,-3,-4,-10,-7,5,-8,2,-10,-5,-2,4,-2,-1,-9,3,5,6,7,8,-5,-9,2,3,10,1,-3,-2,-9,5,3,7,-4,-7,1,6,-10,8,-6,-6,-1,8,5,-8,2,-4,3,-3,6,-9,-9,10,-10,1,-9,2,-5,-1,10,-5,-5,7,2,-5,4,-3,9,-2,2,-4,-4,1,9,-10,-3,1,-5,6,-10,6,-4,-7,-4,1,4,-7,2,-8,1,-9,-4,-2,9,-8,6,-3,3,-5,-8,-3,2,9,-9,6,-6,4,-5,10,-2,-3,4,-3,3,-4,-4,3,8,-1,-2,6,-2,-7,5,-1,6,7,9,7,-8,4,9,-8,-3,5,-6,1,-1,6,-8,5,2,-5,4,4,-4,-3,-10,-1,10,8,7,3,-10,6,-8,1,4,1,-8,1,-3,-5,5,-6,4,-10,-5,-8,4,2,-4,-1,9,-6,7,10,-2,-5,-3,-2,6,5,-7,-8,-7,-4,-3,9,9,2,-3,-7,5,1,-4,-4,-5,4,4,-4,10,1,-4,-9,6,-8,2,-1,7,7,-5,4,2,1,-9,6,-2,5,7,-9,-5,-9,2,8,-4,-3,-7,-8,-6,-4,5,-4,-7],[4,-5,5,10,9,-6,3,1,10,6,7,-8,-7,-1,3,-10,-1,10,6,-10,3,-3,9,-4,-2,-6,2,-9,10,-10,7,-9,-8,2,10,9,1,10,6,6,6,-6,-9,-7,-5,1,-10,8,-9,10,-6,3,-2,7,8,-5,-7,-3,6,-7,-9,-2,-7,5,-5,-3,5,-8,10,-5,9,3,3,-4,5,1,-10,-3,5,2,4,-1,-3,5,2,-2,-4,-9,-8,-7,4,9,2,10,-1,-7,8,-5,5,-4,4,10,-8,4,-1,3,8,9,7,5,-2,4,-10,-2,-10,4,2,-1,-10,-10,-3,-6,6,-1,7,-2,10,-8,4,-5,-6,-10,10,3,-4,3,-8,10,-8,-7,-9,-1,-5,-9,-1,-7,3,7,7,-7,5,-10,-1,-4,-1,2,-2,-9,4,-7,-2,3,-2,-3,10,-1,10,-5,2,-1,-4,7,8,4,3,8,-8,3,1,8,-5,-6,8,9,-5,-7,3,-5,-9,4,10,9,1,7,-9,-3,2,3,-5,4,-1,8,-6,-5,-4,6,9,4,-7,-1,-6,3,6,-9,-8,-10,5,-3,5,-5,6,-4,7,6,9,-2,-4,4,-3,-2,8,-10,-1,4,-10,4,-10,-1,-8,-3,-4,3,-4,-1,-10,9,-6,10,3,-5,5,-9,10,4,-6,-7,5,-2,7,-7,-6,-6,9,-2,-2,-7,8,5,-7,6,-7,-6,2,-3,-3,7,-9,4,9,-10,2,-1,5,-8,5,6,8,-4,1,-1,-8,-6,9,4,-7,-2,-6,-1,7,1,-7,3,8,8,-5,-4,7,-1,-1,6,-3,-6,1,8,-9,9,-4,9,-10,-3,-6,-7,8,-1,2,4,-6,-4,10,-5,9,-2,6,8,10,10,-8,-1,4,-3,9,-4,10,4,-10,-8,4,-3,-1,6,-2,-9,3,7,2,-8,1,-8,1,-10,2,9,8,-6,-5,-2,7,9,1,-1,-8,-4,2,10,3,-2,10,10,-5,6,-7,9,8,-7,-4,2,7,8,9,1,-10,8],[6,7,-4,-3,9,-8,8,8,4,-3,-7,8,-1,-9,-4,2,-4,-1,-9,-1,6,9,-3,-7,8,-7,3,2,-4,8,7,6,-8,-10,-1,7,-8,-1,-3,9,-10,-6,-2,8,9,-4,5,-6,8,10,-6,-9,3,-7,-10,-8,3,-5,4,10,1,-8,3,9,-1,-3,8,-1,-1,9,-3,4,-3,-10,2,10,2,-10,-3,8,-8,1,2,8,10,-7,-6,-10,9,8,8,5,-6,-6,-3,-5,3,8,-9,9,6,4,-8,-5,-4,8,-10,3,5,-7,4,-9,7,4,-6,7,10,7,4,5,-4,-2,-4,-4,-4,7,-2,-5,-6,7,2,5,3,-10,-6,9,-5,-6,-3,10,-1,3,7,-4,-7,-6,-5,2,7,-9,6,2,-6,-2,9,6,3,5,9,3,-10,-6,-4,-7,10,-1,-3,-8,1,9,4,-2,-9,6,-6,-6,10,3,2,-4,-3,1,-9,-6,10,2,3,10,-1,-9,-7,-3,-1,-2,4,7,2,5,8,-4,9,4,-2,-5,3,9,-1,7,-9,-6,5,-2,1,10,3,10,4,5,10,-10,-3,1,3,9,6,-5,-9,8,6,-1,-4,10,-5,-3,-4,8,-1,-5,-8,6,-8,-3,-10,8,10,7,-10,-3,4,10,10,7,-6,8,7,-7,9,-3,-4,-6,-8,-10,2,3,-3,5,-2,7,-7,3,-2,-10,-2,-9,3,1,-10,2,-6,9,-2,5,7,2,-10,7,-7,3,1,6,-9,7,-9,3,-6,7,7,9,-3,-7,8,-4,-2,-4,9,6,6,7,-10,1,5,3,-9,7,5,-6,9,-8,7,5,-4,5,-2,-5,5,8,7,3,4,-9,-5,4,7,6,-5,-1,9,9,8,-6,4,-4,-7,-7,6,-2,3,4,7,3,10,1,9,1,-5,-4,-10,2,-5,8,6,-10,-5,10,-6,-4,-6,6,-4,-7,-5,-2,9,-4,-2,4,4,1,-2,-1,-2,5,-9,-7,1,4,5,2,-9,-6,3,-10]], dtype = "int64")#candidate|6076|(4, 392)|const|int64
call_6075 = relay.TupleGetItem(func_1763_call(relay.reshape(const_6076.astype('int64'), [2, 784])), 1)
call_6077 = relay.TupleGetItem(func_1766_call(relay.reshape(const_6076.astype('int64'), [2, 784])), 1)
uop_6081 = relay.erf(const_6076.astype('float32')) # shape=(4, 392)
bop_6085 = relay.add(uop_6081.astype('uint64'), relay.reshape(call_6075.astype('uint64'), relay.shape_of(uop_6081))) # shape=(4, 392)
bop_6088 = relay.add(uop_6081.astype('uint64'), relay.reshape(call_6077.astype('uint64'), relay.shape_of(uop_6081))) # shape=(4, 392)
output = relay.Tuple([call_6059,bop_6085,])
output2 = relay.Tuple([call_6060,bop_6088,])
func_6089 = relay.Function([], output)
mod['func_6089'] = func_6089
mod = relay.transform.InferType()(mod)
output = func_6089()
func_6090 = relay.Function([], output)
mutated_mod['func_6090'] = func_6090
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6222 = relay.const([[[False,True,False,True,True,False,False,True],[False,True,False,False,False,True,True,True],[False,False,True,True,False,True,False,False],[True,True,False,True,True,True,True,True]],[[True,True,False,False,False,False,True,False],[False,False,False,False,True,True,True,True],[True,True,False,True,False,False,False,True],[False,False,False,True,True,False,False,False]],[[True,False,True,True,False,False,True,False],[False,True,False,True,False,False,False,True],[True,True,True,True,True,True,False,True],[True,True,False,False,True,False,True,False]],[[False,False,False,True,False,True,True,True],[True,False,False,True,False,True,True,True],[False,False,False,True,True,False,True,False],[True,True,False,False,False,True,True,False]],[[True,True,True,False,False,True,True,True],[True,True,True,True,False,False,False,False],[False,False,False,True,False,True,True,False],[False,True,False,False,True,True,True,False]],[[False,False,False,True,True,True,False,False],[True,True,True,True,True,True,False,True],[True,False,False,False,True,True,False,True],[True,False,False,False,False,True,False,False]],[[True,True,True,True,False,False,True,True],[True,True,True,True,False,True,False,False],[True,True,False,False,False,False,True,True],[False,True,True,False,False,False,True,False]],[[True,False,True,True,False,False,True,False],[True,False,True,False,True,True,False,False],[False,False,False,True,False,True,False,False],[True,False,True,True,False,False,True,True]]], dtype = "bool")#candidate|6222|(8, 4, 8)|const|bool
const_6223 = relay.const([[[False,False,True,True,True,True,False,True],[False,False,False,True,False,False,False,False],[False,True,False,False,True,True,True,True],[False,False,True,False,False,False,False,False]],[[True,True,True,False,False,False,False,False],[False,False,False,True,True,False,True,True],[True,False,True,False,True,False,False,True],[True,True,True,True,False,True,True,True]],[[True,True,True,True,True,True,False,True],[False,False,False,True,False,False,False,True],[False,False,True,True,False,True,False,True],[True,True,False,True,False,False,False,True]],[[True,True,True,False,True,True,True,True],[True,False,False,True,False,False,False,False],[False,True,True,True,True,True,False,False],[False,True,True,False,True,True,False,False]],[[False,True,False,True,False,True,False,True],[True,False,False,True,True,False,True,True],[True,False,False,False,True,True,False,True],[False,True,False,True,False,False,True,True]],[[True,True,False,True,False,True,False,False],[True,False,True,False,False,True,False,True],[True,False,False,True,True,False,False,True],[False,False,False,False,False,True,True,True]],[[False,False,False,True,True,False,True,False],[False,False,True,False,True,True,False,True],[True,False,False,True,False,False,False,False],[True,True,True,True,False,False,True,True]],[[False,True,False,True,False,True,False,False],[True,True,True,True,False,True,False,True],[True,False,False,True,False,True,False,True],[False,True,True,False,True,False,True,False]]], dtype = "bool")#candidate|6223|(8, 4, 8)|const|bool
bop_6224 = relay.logical_and(const_6222.astype('bool'), relay.reshape(const_6223.astype('bool'), relay.shape_of(const_6222))) # shape=(8, 4, 8)
output = bop_6224
output2 = bop_6224
func_6234 = relay.Function([], output)
mod['func_6234'] = func_6234
mod = relay.transform.InferType()(mod)
output = func_6234()
func_6235 = relay.Function([], output)
mutated_mod['func_6235'] = func_6235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6234_call = mod.get_global_var('func_6234')
func_6235_call = mutated_mod.get_global_var('func_6235')
call_6241 = func_6234_call()
call_6242 = func_6234_call()
output = relay.Tuple([call_6241,])
output2 = relay.Tuple([call_6242,])
func_6243 = relay.Function([], output)
mod['func_6243'] = func_6243
mod = relay.transform.InferType()(mod)
output = func_6243()
func_6244 = relay.Function([], output)
mutated_mod['func_6244'] = func_6244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5443_call = mod.get_global_var('func_5443')
func_5445_call = mutated_mod.get_global_var('func_5445')
call_6250 = relay.TupleGetItem(func_5443_call(), 2)
call_6251 = relay.TupleGetItem(func_5445_call(), 2)
func_4194_call = mod.get_global_var('func_4194')
func_4197_call = mutated_mod.get_global_var('func_4197')
var_6257 = relay.var("var_6257", dtype = "uint32", shape = (450,))#candidate|6257|(450,)|var|uint32
call_6256 = relay.TupleGetItem(func_4194_call(relay.reshape(var_6257.astype('uint32'), [10, 5, 9]), relay.reshape(var_6257.astype('uint32'), [10, 5, 9]), ), 0)
call_6258 = relay.TupleGetItem(func_4197_call(relay.reshape(var_6257.astype('uint32'), [10, 5, 9]), relay.reshape(var_6257.astype('uint32'), [10, 5, 9]), ), 0)
func_3270_call = mod.get_global_var('func_3270')
func_3272_call = mutated_mod.get_global_var('func_3272')
var_6261 = relay.var("var_6261", dtype = "float64", shape = (832,))#candidate|6261|(832,)|var|float64
call_6260 = relay.TupleGetItem(func_3270_call(relay.reshape(var_6261.astype('float64'), [8, 13, 8])), 1)
call_6262 = relay.TupleGetItem(func_3272_call(relay.reshape(var_6261.astype('float64'), [8, 13, 8])), 1)
output = relay.Tuple([call_6250,call_6256,var_6257,call_6260,var_6261,])
output2 = relay.Tuple([call_6251,call_6258,var_6257,call_6262,var_6261,])
func_6267 = relay.Function([var_6257,var_6261,], output)
mod['func_6267'] = func_6267
mod = relay.transform.InferType()(mod)
var_6268 = relay.var("var_6268", dtype = "uint32", shape = (450,))#candidate|6268|(450,)|var|uint32
var_6269 = relay.var("var_6269", dtype = "float64", shape = (832,))#candidate|6269|(832,)|var|float64
output = func_6267(var_6268,var_6269,)
func_6270 = relay.Function([var_6268,var_6269,], output)
mutated_mod['func_6270'] = func_6270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5847_call = mod.get_global_var('func_5847')
func_5849_call = mutated_mod.get_global_var('func_5849')
call_6280 = func_5847_call()
call_6281 = func_5847_call()
const_6283 = relay.const([[[-0.469417,1.101327,7.264768,5.757590],[-6.350740,8.628259,-5.747477,-2.604323],[-8.165439,7.670210,5.617205,7.273156],[-3.110229,-8.202888,-8.330701,-9.670145],[1.498952,7.594699,-6.696731,-9.250667],[-5.916318,-3.387607,9.706180,9.065751],[6.369230,-9.944954,4.587121,-9.942267],[6.975512,-9.899768,-6.590183,-1.807975],[-5.652459,5.225160,-9.448082,5.438629],[1.776903,1.206553,-9.432687,-3.446691],[-7.173526,7.937578,5.792173,7.091636],[-7.138027,-5.622052,3.161872,-6.605630],[-8.768584,-6.950558,5.583358,-0.786313],[5.312811,-8.340046,-7.763924,7.616253],[2.732059,-7.427896,4.761556,4.076498],[0.421988,-5.004427,-2.990271,-7.640129]],[[-4.158772,8.716408,-9.768117,1.566685],[-3.783118,6.241028,-2.706746,0.860445],[0.953044,-5.736243,5.284908,-8.845357],[0.683909,5.095226,-7.469285,7.502886],[-4.317898,-2.188743,-6.377758,2.679185],[9.880056,6.944513,9.509716,1.250178],[-5.038595,8.748610,1.730225,-2.555088],[9.467479,-9.477550,6.993233,-4.869275],[1.169664,-0.153578,-2.229385,-0.205795],[-4.614814,-0.510191,-2.838743,0.129393],[1.825551,-4.377567,-0.843487,-9.074271],[4.859799,1.496923,-2.582103,-6.334191],[1.510686,9.600235,-6.302310,3.512518],[1.162393,4.202862,-8.359158,-2.351233],[6.401569,-0.829503,3.592598,4.035079],[-5.871867,2.689298,7.975824,-5.630193]],[[-1.595775,-8.556243,4.423987,3.193099],[7.397215,-8.373110,1.973113,-3.294512],[4.875354,9.196459,9.819458,2.082276],[9.714336,-0.583000,1.430355,2.193070],[-8.796238,-3.065092,-3.581841,-3.250939],[-0.991556,6.970328,4.384844,3.685028],[-8.104931,9.387542,3.331521,6.501746],[3.121309,7.220083,-5.977693,-8.763332],[6.394654,-8.956354,-6.238184,4.578295],[5.953280,9.153234,-3.634436,-0.044466],[0.963940,-3.458051,-9.473538,8.566245],[8.991902,-6.872231,-6.801433,-1.217749],[-3.991789,6.913755,8.729175,9.722719],[5.576465,7.794545,4.260168,-6.054896],[2.652371,-8.398633,4.835272,0.394241],[-1.275377,-9.646039,-2.963464,-2.225716]],[[-0.680123,-7.887655,0.895062,-9.847130],[-4.077295,-9.324038,2.567945,-6.439395],[-2.271493,7.725632,-0.942988,-2.462826],[-3.469411,8.218672,-5.316598,8.733085],[0.641610,-8.283070,-5.714794,0.763218],[6.271020,-7.682280,6.564562,0.896694],[5.797139,4.464827,-3.416686,8.490484],[-7.788225,2.208455,-4.731651,0.703930],[-2.761990,-2.792981,2.256061,8.178024],[-1.872485,4.537149,-3.228905,5.430632],[8.210980,-9.691039,-8.143449,9.040209],[-8.529706,9.622707,8.692611,3.727234],[1.226071,-0.981783,5.891669,8.703329],[-7.363498,0.429666,6.888317,-3.537890],[1.042768,-0.371814,-4.381305,9.852182],[9.662076,-1.560779,6.644657,-6.222348]],[[6.825571,3.995531,9.410956,-5.751179],[-1.987890,-0.806630,-5.885472,-8.569265],[9.184256,-9.191145,-0.129124,7.709215],[-1.206723,9.787550,4.192600,-2.037372],[-1.690739,5.698120,-0.502006,1.842438],[-9.452451,9.735025,6.927817,-3.134298],[-0.765993,-9.914892,-5.399726,-8.730163],[9.020019,1.908760,-7.059996,-1.808520],[5.263723,-9.155418,0.224965,-5.412911],[1.289708,6.605685,-6.219035,-8.944999],[-4.884378,8.085753,-0.432216,5.567886],[2.489311,-9.487031,2.131341,4.100769],[-4.372860,-1.736972,8.782727,1.707808],[-0.758263,3.330147,3.987515,-5.716805],[8.271798,-6.391841,7.482146,2.795894],[-2.481972,-0.063349,-5.882541,4.895155]],[[7.849416,6.042843,-3.798369,-9.565094],[2.590728,5.572565,1.310347,-4.776629],[-0.226450,-5.775665,-4.612521,-7.710360],[0.827755,-5.229721,-4.447521,-2.802322],[-6.867716,1.583276,3.220366,3.256546],[5.612961,8.362225,-7.167356,8.360245],[-7.917022,1.633844,-9.798588,-7.295595],[-0.548513,7.146004,-4.856320,5.641453],[7.867099,9.129543,-1.999196,5.057223],[-9.300841,-4.543402,-3.253342,9.352902],[3.456185,-7.601556,-5.617343,3.666902],[8.511415,-7.580925,-0.426097,-9.163581],[-6.362651,-0.452011,8.794117,-9.770448],[-1.070215,-4.633827,4.691578,-2.036821],[-5.858588,-0.305386,6.267562,-0.501781],[-7.228936,-1.690312,-2.714917,7.468223]],[[-0.918667,9.744913,7.847925,3.114917],[-1.544297,6.068725,1.028766,-9.778370],[-9.357382,1.535610,-2.024182,-6.166958],[-4.628469,0.163007,-7.127379,5.413480],[9.713654,-2.195192,-5.815967,-3.671643],[1.602079,-2.040183,8.985902,0.399534],[7.687435,9.857681,-7.581391,7.683419],[-0.698834,6.330748,6.661934,-6.832939],[8.654821,7.365959,-4.218983,-2.966144],[6.744773,3.698127,4.148146,-9.124658],[8.414074,-4.392145,-3.075122,-8.286554],[-8.139545,5.827984,-1.281250,-0.014250],[-5.783968,7.823263,-1.799349,-0.036054],[2.727953,-4.095446,-2.829862,1.730734],[7.878096,7.194462,9.217040,-9.848551],[1.053465,2.773165,3.138378,1.233204]],[[-9.720269,7.623039,-1.024947,-6.522759],[8.170829,-5.024396,-2.731056,9.838664],[2.925032,6.358117,-4.763402,4.097171],[0.845810,7.578311,-7.099810,-3.181743],[9.262313,0.755317,5.271141,7.924241],[8.340631,1.651371,-4.486035,3.925410],[6.996135,-5.775019,-9.213318,-5.142148],[9.578685,1.848019,-6.048591,-4.656242],[6.356458,-8.243938,5.700341,4.606000],[1.315517,-7.739259,4.303868,-9.435579],[-8.671635,-1.778938,-1.522239,-7.285812],[-2.926966,6.869442,5.335161,-4.546696],[-8.217828,-7.259826,2.361783,-8.033250],[-4.723184,-2.690486,-1.360893,-3.651888],[6.186383,5.405224,4.935697,4.033720],[4.373342,7.614383,-2.387725,2.076194]],[[-8.258367,9.756079,5.062365,-0.479757],[-7.709773,2.459938,4.166172,-8.229529],[-0.271914,-0.438672,6.343134,2.029816],[5.243781,-3.321616,8.230931,-1.868362],[4.941828,7.649365,5.686256,-0.616812],[-2.466792,-0.317313,4.097196,-1.594439],[-8.133051,-1.940796,9.681442,8.629783],[-6.175864,-3.246810,8.262236,3.093568],[-8.690032,-3.296988,-8.489196,-4.316287],[-3.087929,0.822014,9.890765,-8.465522],[-1.251688,2.562259,-9.979433,-2.228183],[-2.417757,-1.582207,8.564561,-4.346456],[-5.031474,4.593401,7.746917,5.015750],[-3.888156,-5.159369,5.961495,-3.604236],[9.367994,3.487979,-8.033028,-4.865585],[-6.804997,-2.775616,-5.378376,-0.640385]],[[4.208002,4.032801,9.907694,4.694792],[8.199619,8.340991,-2.360014,7.010172],[3.412916,0.622696,-3.034917,5.845136],[3.578185,7.517078,-4.178040,-4.869449],[0.020655,1.109448,2.812245,5.796295],[-2.754339,5.890955,-5.128627,-3.967467],[7.735468,3.495567,1.810540,-6.845454],[-5.044803,-4.646641,3.817773,4.482796],[-3.912672,6.740203,5.162238,4.075559],[6.103413,-0.511713,5.837872,-9.065122],[-9.003656,-8.492334,-9.264103,-9.667805],[-5.513767,6.453406,-8.269643,9.855151],[7.642916,-5.671531,9.403366,-8.195739],[-3.960663,-3.792366,2.873543,-6.869604],[-0.093851,8.393571,8.973595,4.950477],[-3.261253,-1.191309,5.667317,-6.761953]],[[-8.564196,2.049130,-0.549142,4.411550],[-3.826647,-0.105017,-9.311153,-2.411900],[3.676063,0.414468,2.524974,5.806639],[5.641193,-7.742121,6.695880,-9.783668],[7.374871,3.209179,8.946959,-5.805716],[-9.674809,-7.038751,8.898936,3.850153],[-2.326771,-6.794609,0.949300,-3.374918],[7.563465,-8.134882,1.205595,-3.810255],[-5.157086,-4.858725,-6.050463,-8.925340],[6.152602,2.247352,5.413739,8.162354],[8.207756,0.381216,0.310734,-6.677652],[3.408098,9.003755,9.036599,1.725746],[7.827130,8.451525,8.169779,-9.927495],[-2.570866,8.919496,-5.601321,-2.632246],[-6.835693,2.644553,1.613711,-7.727235],[-6.995443,9.667773,-9.088598,7.212877]],[[-6.182510,0.405639,-9.331764,-1.170522],[-8.952831,-0.929127,-2.570256,-9.432130],[7.760015,4.073365,2.375802,9.402306],[7.164386,6.636475,1.319978,-8.611567],[-7.731921,3.527099,6.030785,8.253225],[-7.510288,0.397145,-1.865065,0.068086],[7.428145,-2.676217,6.160964,-7.699760],[-3.997075,-4.408879,-3.251300,5.642680],[-9.926904,-4.075257,-0.471387,6.559778],[6.607882,-2.716717,1.882039,8.350218],[-7.833164,7.667271,9.817699,-9.600176],[-5.376578,-3.153825,7.498712,9.037024],[-2.711345,-8.644157,7.765997,3.293979],[-1.771248,2.928168,-9.251391,-1.137873],[-9.883192,-5.347967,7.189106,-9.492424],[9.974342,-9.646454,-3.167446,-0.547382]],[[4.306328,-3.459106,6.487122,-7.547097],[8.439385,4.756180,-7.143054,-2.036016],[2.802259,9.217874,3.762654,-7.865002],[-7.725816,-2.732063,-2.986644,1.430754],[0.604059,0.819671,-1.093307,-4.703461],[6.862497,0.394658,9.679542,-8.520487],[-5.655977,7.562515,5.633078,-8.456706],[-0.896647,2.796291,3.193552,9.448153],[-7.849508,8.630399,-9.869203,-7.037650],[0.609927,1.165738,3.451016,-6.465320],[6.944372,1.656551,4.615525,-1.959659],[-6.329875,7.862681,8.920736,-9.002171],[1.421119,-9.467020,1.974043,6.529184],[-8.610126,9.945604,-4.208288,2.334078],[4.365528,4.166895,-7.007989,3.470725],[9.545611,-9.313194,1.949742,-2.973155]],[[5.240082,-9.824568,5.845151,3.525263],[-9.200260,8.253948,-4.425911,5.989456],[1.232414,5.751462,-5.477027,0.807669],[8.183610,-1.199342,-5.843140,3.376496],[8.863279,9.408908,3.959768,-7.485306],[0.596373,-7.986151,-9.833424,-7.011316],[-9.497406,0.443869,-9.423074,-7.246052],[8.160146,-6.202746,2.424362,9.640646],[1.987590,7.218006,3.259692,-8.036305],[4.859647,7.015795,-1.943192,-5.865717],[5.122488,-8.722083,-6.715232,4.277371],[4.659952,2.781616,5.940139,-8.551282],[8.430282,1.467692,5.661446,-3.325896],[-1.355689,7.355740,7.697877,-3.385357],[1.458088,-7.856878,3.061764,3.883661],[5.233356,-1.450947,8.907935,4.304862]],[[-4.038071,-6.627332,-4.433481,5.544901],[-1.347161,-2.768993,-1.927765,-1.151860],[3.668120,1.048087,-1.644910,4.340678],[3.683878,-3.892741,-8.796226,-5.479438],[-9.989987,1.187992,7.631556,3.189174],[0.312200,7.184723,-3.354342,4.293783],[-3.092248,3.491528,-6.734657,-0.918691],[-3.704630,-3.107111,-9.266105,4.419253],[1.908078,9.323471,2.553806,-4.079328],[-1.368685,-9.561069,5.406638,-9.058698],[-9.970512,-3.107744,3.014001,1.224237],[5.851143,-8.638257,-9.840135,-1.944154],[-9.747867,-0.805843,5.088593,-4.005712],[-6.099078,-9.436622,2.161826,7.661901],[-0.294235,-5.477713,-1.049034,3.010775],[6.592086,3.827285,-2.114878,-1.284556]]], dtype = "float32")#candidate|6283|(15, 16, 4)|const|float32
bop_6284 = relay.logical_xor(call_6280.astype('int16'), relay.reshape(const_6283.astype('int16'), relay.shape_of(call_6280))) # shape=(15, 16, 4)
bop_6287 = relay.logical_xor(call_6281.astype('int16'), relay.reshape(const_6283.astype('int16'), relay.shape_of(call_6281))) # shape=(15, 16, 4)
func_5890_call = mod.get_global_var('func_5890')
func_5893_call = mutated_mod.get_global_var('func_5893')
call_6294 = func_5890_call(relay.reshape(call_6280.astype('float32'), [15, 16, 4]))
call_6295 = func_5890_call(relay.reshape(call_6280.astype('float32'), [15, 16, 4]))
output = relay.Tuple([bop_6284,call_6294,])
output2 = relay.Tuple([bop_6287,call_6295,])
func_6304 = relay.Function([], output)
mod['func_6304'] = func_6304
mod = relay.transform.InferType()(mod)
mutated_mod['func_6304'] = func_6304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6304_call = mutated_mod.get_global_var('func_6304')
call_6305 = func_6304_call()
output = call_6305
func_6306 = relay.Function([], output)
mutated_mod['func_6306'] = func_6306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5340_call = mod.get_global_var('func_5340')
func_5342_call = mutated_mod.get_global_var('func_5342')
call_6321 = func_5340_call()
call_6322 = func_5340_call()
output = call_6321
output2 = call_6322
func_6342 = relay.Function([], output)
mod['func_6342'] = func_6342
mod = relay.transform.InferType()(mod)
mutated_mod['func_6342'] = func_6342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6342_call = mutated_mod.get_global_var('func_6342')
call_6343 = func_6342_call()
output = call_6343
func_6344 = relay.Function([], output)
mutated_mod['func_6344'] = func_6344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6342_call = mod.get_global_var('func_6342')
func_6344_call = mutated_mod.get_global_var('func_6344')
call_6363 = func_6342_call()
call_6364 = func_6342_call()
output = relay.Tuple([call_6363,])
output2 = relay.Tuple([call_6364,])
func_6365 = relay.Function([], output)
mod['func_6365'] = func_6365
mod = relay.transform.InferType()(mod)
output = func_6365()
func_6366 = relay.Function([], output)
mutated_mod['func_6366'] = func_6366
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6369 = relay.const([[[3.424358,-2.866613,0.925405,9.770848,9.055552,3.235878,3.421365],[-5.518571,8.965681,-7.982017,-8.839306,0.544812,-4.006327,8.160561],[-6.312872,-0.943849,5.698018,6.069510,9.226845,-0.850625,-2.656291],[0.645637,-1.654592,3.003443,-8.056530,3.538478,-1.277957,-1.037742],[0.302815,5.076962,-5.349264,4.389167,-6.137519,5.399428,-3.400347],[-9.847954,3.382599,-2.586746,6.048481,0.935199,2.885697,1.444119],[1.223308,-3.857334,2.058816,8.177512,-4.381518,9.138348,3.964392],[-5.824467,-1.911509,-8.279005,-0.439548,4.335442,2.145931,5.104469],[-9.680744,-4.540819,-4.143273,-1.397762,-3.933120,-6.390633,-7.071946],[-0.025023,-9.688209,5.932469,9.335029,-8.865979,-2.192907,-0.564129],[-2.237810,9.481127,-2.199927,9.631184,-6.776278,-1.813796,2.568039],[6.709980,-5.009819,9.895883,7.019374,2.448409,-3.844097,-1.203620],[9.937011,-3.822242,8.030041,-8.534515,-7.224019,-0.958664,7.037645],[7.394785,9.218091,9.391476,-5.869793,-6.464016,1.186264,9.442311],[2.917056,5.036686,-6.072338,2.926552,1.645704,3.081818,1.988611],[-1.644856,-3.111021,2.837969,3.467667,9.512141,8.191784,5.264720]],[[9.321090,-1.683447,-0.979613,1.758738,-2.418637,-9.016602,6.990622],[6.285972,-0.268296,8.082280,2.477125,-4.431671,1.091247,9.394531],[-8.623624,-1.205088,8.958479,-4.086779,-3.397243,-1.072096,-7.587321],[-3.768779,-2.271053,-1.077852,6.560707,9.993872,-7.327869,7.952442],[7.683416,-7.140645,0.624249,3.192101,-7.968524,0.693664,7.831116],[3.175552,-4.626027,5.324293,6.343561,5.967838,-9.905886,3.574941],[9.571301,-1.874350,7.761206,-0.100765,2.255266,5.606530,5.345868],[-7.819314,-1.061731,3.878384,8.618440,2.755719,-8.814704,-1.753361],[0.767985,-3.613766,-8.785036,3.629485,3.625885,9.877601,6.491034],[-1.740062,6.151475,-7.607283,-9.387441,-0.636705,-2.915113,-6.172282],[8.206818,5.492560,8.053662,8.808911,9.625659,2.793230,-2.226624],[9.402186,-0.856220,-3.601091,2.922761,6.347902,-5.094015,7.202125],[-3.481033,-3.111992,-3.416919,-3.531581,4.708898,-1.549455,1.920090],[9.942616,-2.432460,4.217836,2.117339,-8.280486,-6.529240,-1.996157],[4.518019,-7.964193,-0.436278,4.747001,-5.555504,-4.758416,4.676157],[-4.043594,-3.293111,-4.701960,0.565851,5.601143,-4.851828,6.631222]],[[-1.977651,3.727996,8.635224,1.655877,-4.105734,6.054872,-5.969091],[-6.209215,-5.264838,-0.187525,7.281062,6.121621,3.611870,6.163964],[-9.666046,-0.770718,-9.159973,-5.857751,2.309070,4.288756,1.104425],[3.343205,-3.150309,1.773521,-1.933835,-3.216930,2.183260,-7.787322],[-3.346763,-1.819653,-0.806193,3.813545,-8.636203,6.491930,6.363980],[-4.159157,8.218900,6.672296,9.473375,-4.961143,-2.885989,2.877251],[-3.399247,-2.905904,8.366232,2.208921,-3.834444,2.368896,-3.670057],[-2.377345,4.309673,-7.628976,-9.165403,3.581404,1.596159,-5.551178],[-8.941511,5.311342,8.991001,9.360339,-3.383191,2.212127,-2.608600],[9.383958,5.937322,-2.316717,-9.122348,1.628482,-0.795499,1.316578],[-8.527675,-4.500507,0.106275,9.944967,7.939377,-3.536984,1.875732],[-4.701579,-7.154895,-1.616514,-4.431714,-3.526264,-5.995214,0.328621],[-5.524839,-4.964502,-8.139670,6.134852,-7.536371,8.573476,-6.900671],[3.831411,7.081419,0.214695,0.713784,7.429467,-4.024196,9.507709],[4.087053,-9.699179,3.758495,-8.252582,9.147197,8.541681,-1.277041],[1.910221,-0.703485,-5.380880,3.959420,7.249986,0.750886,-1.257376]],[[1.615855,-4.379641,-2.046429,-9.553120,3.813382,-2.980062,5.453394],[-4.481449,-6.487944,-8.172654,-0.427476,-1.538191,-0.112628,2.395720],[-2.710866,6.113707,8.895477,-6.681551,-0.032234,5.884250,5.090539],[-8.993767,2.807922,-4.430121,1.865666,5.941823,9.448495,5.677533],[7.805458,3.837703,-5.137531,9.027252,5.982422,0.836119,3.185128],[7.596973,-8.131368,9.654954,8.295789,0.566869,-4.593806,-4.077141],[-6.743858,7.231799,-6.235828,9.707681,4.460090,-8.646902,-4.379839],[6.117879,-6.036650,-4.263771,-9.439304,5.115115,4.427446,-9.908461],[5.631477,7.881723,-6.771980,1.198231,-4.890578,2.083824,-9.816656],[-2.974264,-5.550810,-9.601237,-2.073246,8.786659,-4.312583,-9.545466],[-9.173295,8.874411,-5.114135,4.389202,1.333485,6.712885,-7.086773],[4.108758,7.718016,6.841295,8.632278,-9.542353,5.768589,4.595771],[-6.973747,2.773823,-0.259728,-5.018582,-0.632610,-7.026830,5.111185],[6.899138,-5.448613,-7.245948,-7.235955,3.376729,9.586410,4.513306],[-7.958215,-7.421241,1.403643,6.096477,-0.304834,-0.840624,9.631850],[-1.359922,-0.138887,-4.821312,-2.423801,-8.425006,3.764036,0.114272]],[[-0.574343,1.240505,1.424181,2.513562,9.600622,-0.010016,3.728259],[-4.418616,6.549222,5.880294,-0.993520,6.653198,-0.044095,5.495170],[8.161090,-8.363496,-1.866223,-3.291732,8.889019,-5.539894,-4.724173],[-8.510125,3.541518,7.540184,2.985677,-9.868160,-2.652764,-7.826487],[-9.279412,-0.158045,-0.963282,8.550675,-8.306273,-0.170593,5.313241],[8.222561,-8.558809,1.101339,-1.214076,-9.954695,4.493473,-0.735643],[-8.149569,-4.927349,-3.594087,1.487615,6.396400,0.126744,-7.187938],[2.917246,-1.180086,-3.974002,-0.180388,-7.027961,-0.355925,-3.194774],[-3.441905,6.638040,-3.502946,0.834382,2.774912,8.290284,4.277693],[-6.447191,5.900758,5.339321,-1.706231,-1.051177,-0.897664,-8.297014],[9.775210,-0.152580,9.525360,4.996583,-9.394230,-6.543170,3.063565],[-1.663821,2.429345,-9.012058,3.173702,-1.339649,8.028742,-2.480553],[-6.973236,-9.343853,-1.033336,1.431323,0.972080,8.360292,4.840017],[5.905516,8.802087,5.879488,-9.407117,6.218777,4.473500,-8.498079],[-5.647583,-8.663639,5.388582,3.577820,-7.329122,9.076871,9.117741],[3.809905,-9.559336,6.825488,-1.802481,-4.514874,-7.446387,-7.118714]],[[-0.131192,7.633029,-1.038185,9.034792,-4.060321,2.081230,7.053717],[-6.275171,3.305003,5.130266,-0.113959,2.281919,3.611841,-6.019498],[-6.374637,7.158522,5.183345,9.957800,1.177437,2.544808,0.985404],[-5.468103,0.922564,8.812813,-0.372583,-9.050426,7.577604,2.696278],[-0.711686,6.660139,7.074176,4.323215,0.121983,-9.456649,6.523608],[-2.666967,-0.688737,3.316148,-1.391989,-6.355857,7.122858,3.481828],[-0.434017,1.561182,-7.726310,9.261819,6.919008,-5.158750,-9.320289],[8.684524,-8.013910,-8.155607,-4.310059,-1.285050,7.752636,9.198212],[-0.428184,3.611099,-3.358932,8.885723,4.777419,-3.009217,0.310565],[6.267906,9.307269,4.517344,8.266416,-1.829171,4.693934,-3.161416],[8.615922,2.180595,-3.633581,-8.433942,6.755505,-5.620438,5.747492],[0.860849,5.640162,-2.696895,-4.047993,6.512171,8.847395,7.387404],[-9.389440,9.670198,-6.324637,1.504437,-4.996085,3.132453,0.166318],[-6.025628,-7.189310,4.517351,3.866156,-1.859169,3.930914,2.473503],[3.610592,4.420251,-7.586337,6.371636,0.925165,0.232848,-7.062303],[1.002776,-8.533199,-4.656275,-5.895114,6.648943,0.024095,3.364019]],[[8.996916,-0.001131,1.624965,-6.564082,-4.466348,-1.964325,8.053107],[8.191737,-1.929367,7.141446,3.016788,4.883205,-3.894306,5.302157],[-4.218777,-8.278944,3.147493,-7.843232,2.986361,-3.584711,-9.259644],[2.538959,-1.579443,-8.313822,-7.607872,-5.705592,9.668632,0.490805],[-3.087544,-7.516416,9.568618,-4.055199,0.964341,2.526057,6.958964],[-0.744187,2.461016,5.022461,9.775399,-7.490453,-6.528534,3.800046],[4.769418,8.516887,6.012828,-3.263794,-3.730895,6.428155,-0.213826],[-4.285505,-1.452303,8.613082,0.573590,7.778963,-7.664120,-7.724895],[-3.997303,6.842913,-8.248526,1.373858,-8.183441,-5.665188,-5.690749],[-6.450400,-3.669775,2.309436,0.358561,-5.887844,1.034299,4.342269],[-3.501750,-8.489596,0.322479,-3.806096,-0.024792,7.811492,6.799747],[-8.111055,2.264724,-3.211574,4.230858,-9.870419,6.730793,5.306209],[6.230783,-4.617487,-9.062026,-5.096542,-9.475663,4.340347,2.585850],[9.392221,-6.708722,-4.107460,-1.740222,-7.537851,-6.787881,9.799103],[3.372023,9.549469,7.051998,-2.455223,-3.428618,-1.026268,6.496579],[-7.734652,-7.817036,-2.181504,5.223626,5.113133,4.826744,4.561077]],[[-2.178967,3.388056,-9.874220,-5.326104,4.232756,2.845641,-3.193897],[-1.676533,-0.081009,-1.282786,6.093168,4.852914,4.637148,-6.276612],[-3.748386,5.892346,-5.262239,6.542319,3.766381,9.441869,-6.330326],[-2.958699,-4.737282,9.395342,8.059421,6.354102,-5.575102,5.731071],[3.798099,-4.008859,-3.747833,4.348153,7.727837,8.540952,-5.508309],[5.604293,5.231925,5.614080,-6.732709,-5.290447,-9.539607,-2.574030],[2.861744,1.230544,-2.113113,-4.099185,9.901277,8.427713,-7.265557],[6.622501,8.677604,-7.204641,-9.048514,-2.507047,-7.753140,8.537224],[7.179057,6.324117,3.145662,8.606212,-2.564238,-9.052557,2.484084],[-8.748272,-8.519988,8.483694,-5.747626,9.625003,4.810088,-7.059533],[-2.938866,5.867681,2.151005,-2.707349,2.617805,-9.777276,-8.738129],[0.694209,1.051539,8.990859,0.495230,3.600240,-9.758528,-2.243115],[0.711439,9.960323,-4.985865,0.015514,8.294669,2.052728,0.546277],[2.243562,-4.999687,-0.090868,-6.740966,-8.174933,-2.029221,-5.925782],[-2.530790,-8.788321,4.870504,9.175157,-8.901814,3.209950,6.024760],[-5.407901,7.590149,-6.728562,-8.743055,8.894250,-1.019535,-9.507327]],[[0.942194,-7.123983,-3.500938,5.359698,-0.234167,5.378369,7.994883],[7.674923,1.248953,-2.901995,1.705951,0.651597,4.864228,-9.586054],[-6.341981,-8.144418,1.889943,5.682084,0.433150,3.447225,8.390904],[0.671659,-0.825050,1.911209,-7.666977,-3.139464,-6.980254,-4.137399],[-2.653522,-6.016975,8.404147,-0.580038,0.932688,-6.469519,2.747034],[-9.640676,4.076794,0.709152,-2.630384,1.156333,-9.137350,-6.566766],[4.543083,-8.407850,-1.178737,-2.375070,3.977276,-2.587587,-9.744933],[-4.211259,2.724278,7.020173,-5.792917,-9.904015,6.995100,3.749955],[8.921080,2.198509,-1.143154,-4.170882,-8.876412,2.719627,0.609340],[-7.433789,-2.500420,4.083514,1.913099,-2.728425,-7.427551,9.435083],[0.023923,8.981015,-7.430518,2.248373,6.769565,7.925915,4.290677],[8.247290,7.341652,-2.446163,-8.444760,5.106494,-8.171718,4.154582],[-3.662078,3.960639,-1.786743,-3.250664,1.541538,9.745753,8.714985],[-3.933069,1.434994,9.577047,9.129025,4.764944,-2.998845,0.871540],[-9.956250,7.784689,4.147518,-3.108492,5.665276,9.171520,0.992161],[1.423530,4.246371,4.885404,-7.680178,2.131313,-5.281688,7.526036]]], dtype = "float32")#candidate|6369|(9, 16, 7)|const|float32
uop_6370 = relay.atan(const_6369.astype('float32')) # shape=(9, 16, 7)
func_171_call = mod.get_global_var('func_171')
func_173_call = mutated_mod.get_global_var('func_173')
const_6375 = relay.const([5.116169,5.474683,-8.240827,3.321591,1.389163,-8.490494,7.527072,-3.190920,-6.281875,7.465081,2.644928,2.858415,-2.358021,7.290490,2.633391,3.903196,-2.069305,4.230744,-4.692394,-9.237616,9.464940,3.683166,3.681677,-8.341852,5.449883,-8.431401,1.176830,8.355282,8.045715,5.488762,-0.651359,2.099876,7.615848,3.840332,4.261973,9.061328,-9.075169,5.775139,-9.098855,3.333436,7.891732,-7.897619,5.970805,8.905776,8.904798,-6.345123,3.999826,-9.851170,-7.768460,3.499990,-7.065901,-0.004629,3.220362,-2.120507,4.664075,-1.893771,3.343309,9.443768,-3.726337,4.704071,1.020067,4.228969,7.423179,2.428007,8.994989,-6.991769,-9.414400,-1.700159,-5.195114,8.257341,7.259672,4.437870,3.794949,6.657267,7.421844,9.255175,-4.934086,0.870809,-8.617836,2.985243,8.943187,7.254642,2.551114,-1.104000,-0.200307,3.791060,9.556622,-4.257539,-7.039282,-5.612723,-3.957405,-2.817033,0.582673,3.480891,4.445394,1.451875,-4.209147,-7.405125,5.534178,3.065760,-2.645446,1.937635,0.767826,-4.769939,1.608740,3.112537,-6.595789,4.519218,-5.074595,-9.920320,7.146682,-6.777487,-8.189118,8.263729,7.841222,-9.732785,-3.998227,1.286434,6.673503,8.207119,1.803414,4.014542,-4.464445,2.748445,1.684483,-3.691403,9.176353,-9.699048,6.369777,6.111378,-1.115013,7.492865,2.241863,5.606344,-9.852750,-7.480029,4.860195,-0.236477,-3.581910,-7.333871,9.689765,-4.893322,-3.887372,-6.590586,7.721888,-9.761134,7.977059,-6.139881,1.953236,-4.128965,-3.076035,3.147310,-1.176410,8.324327,7.151484,-5.151690,5.319317,4.207144,6.845665,2.596509,-9.671078,-3.930054,8.364454,-0.325711,-4.455882,6.631661,8.024986,1.798300,-9.402147,-6.283401,-7.579071,-5.857139,-1.854685,8.173063,6.642823,-0.918040,1.174773,-3.961702,7.752801,1.662120,3.303588,-9.270160,3.793946,-7.221538,-4.834557,3.346317,0.821696,-0.088901,1.234993,1.668376,5.556726,-2.858956,-0.495602,2.783978,-1.959143,-0.659759,5.962873,-0.949778,-3.978350,-4.848970,-2.432010,2.546635,7.559863,1.960056,-3.441681,-7.952052,-9.749422,-5.339847,6.841046,-4.434950,-2.768892,9.908560,1.574670,-4.408428,-5.899228,-4.064056,-3.614102,-5.423789,-3.313971,-3.937402,-9.308167,-4.136980,-9.692921,0.577129,-3.958721,8.502360,-9.793541,3.392656,-4.878544,9.096578,-4.782963,6.828546,-3.267427,0.747856,0.845662,0.709549,-1.581142,-1.050410,-8.744646,-1.214103,8.440743,6.709372,-0.406112,1.072841,-8.961499,5.194114,7.073328,1.292461,-0.292904,-2.569018,-2.748861,4.252920,4.305360,7.875168,9.797483,-6.156689,5.867746,4.632621,-1.040323,7.912675,1.383804,-3.213381,2.097153,-6.458031,-0.223852,-9.564004,-8.540615,1.222594,0.865524,4.074958,-2.276277,-3.513847,5.508599,9.385394,-8.139109,-9.844583,8.672093,-0.478608,-5.241085,-2.522352,8.905038,-0.964513,-0.636250,7.093378,-8.482645,-6.057305,4.470016,0.668164,-3.423182,-1.499190,8.699189,4.063396,1.435530,5.793886,-9.488925,-3.699707,-7.769387,-3.512879,-3.338604,1.079734,-7.860205,1.155643,-1.181505,7.785574,2.865613,4.546371,-3.892883,1.164218,2.093254,-9.154387,-3.956864,7.925103,8.985330,0.320875,-8.882567,-9.760153,2.672058,-7.199997,-7.165360,-0.483322,0.385557,-1.316193,-1.261005,-0.136605,8.056024,-2.688592,1.290115,-0.415925,4.169503,8.167981,-3.315974,-4.018713,0.785179,5.654406,-3.563214,-7.429882,-4.798275,-4.457216,-4.637223,-3.219575,2.366203,-0.094958,-4.879793,3.976904,-3.502812,1.069730,-7.512941,-1.217828,-5.493788,-2.545898,-1.679725,1.514519,4.432890,6.391791,-2.315928,9.048168,-1.703830,-3.553165,6.825512,-9.025494,-0.958644,-0.045167,-9.610848,0.743121,7.567921,8.216076,-5.636878,-9.454827,-7.616325,5.360175,8.597024,-8.306418,-8.583351,-2.942645,-0.880679,-7.867574,4.919912,-3.532342,3.843156,-9.881224,7.144340,-8.310963,-2.509256,0.708078,0.101997,1.069826,-8.939484,-1.618620,6.481890,-5.057035,-4.975735,-2.344760,0.458689,4.216958,-7.512648,0.584065,6.485223,8.514575,-2.120596,8.062807,-5.571644,-7.731269,-5.375512,5.074874,-6.355413,-8.389870,-2.243143,-4.822492,1.459773,1.051158,0.862742,6.797024,-3.432414,0.803662,9.177685,-7.459122,2.076457,-0.477594,-5.752337,8.886315,4.213330,8.937599,9.415292,-1.122260,1.679994,-8.974724,-1.164129,9.795808,9.827562,-4.840845,6.947818,-6.038102,2.917706,1.764113,-4.966370,-9.439823,-6.256150,-1.046032,8.944672,-6.387535,-1.966254,-8.128149,-3.252955,0.737914,-5.777785,-4.934208,4.896994,-6.180303,-5.632936,-4.827142,4.339798,-8.777577,-9.923929,0.140083,0.616305,-2.439513,-6.362560,9.728657,-8.114925,-3.746880,-7.426910,6.289601,9.033510,-5.177497,7.009399,9.583979,-8.847833,-0.896280,-8.393017,-4.204109,0.089758,1.410039,5.072701,-3.699060,5.414474,-4.672065,6.789770,3.856070,-8.368044,-9.571379,-2.495353,-8.745786,-5.890949,7.509539,-1.497734,-1.079861,-8.233781,0.872476,-5.566394,-5.820347,4.046270,3.571432,-4.185875,4.848936,1.680857,-5.129276,9.730053,-3.910848,4.980270,-7.022822,1.342549,7.913046,-2.367173,-4.644228,-7.382013,6.902969,5.604127,-1.304674,4.611572,-6.145288,-5.293065,6.372724,1.272721,7.366364,1.963931,-4.426912,-3.259270,0.697045,0.422242,-2.906778,-5.839906,7.917882,-1.280440,7.026586,1.174456,-9.608646,-4.492087,-1.918412,3.493385,-3.577115,1.112112,-1.447714,-3.376964,3.442989,5.540433,8.942963,0.828818,9.880201,-0.755987,8.845890,9.679416,9.641157,5.580702,8.478720,9.922667,-0.617306,0.491692,6.454805,-4.310496,1.528318,-3.106710,6.789585,0.203404,1.175596,6.309906,2.077504,1.917047,-3.406764,-4.274729,1.448309,4.999736,5.902701,-1.427756,-3.954464,7.825515,-4.676454,-7.415222,8.487015,0.636443,9.828663,2.495800,2.628790,-6.642618,-4.650992,9.509424,-3.774308,7.481281,9.334092,-9.332526,-7.111031,9.772128,2.743400,-8.285759,9.371703,-4.497135,-8.635761,-1.388172,-3.399774,8.564568,1.918627,-7.658353,5.264067,6.652906,-8.121295,-4.948081,7.218775,1.194420,1.976164,0.139862,1.063204,6.223604,-1.806371,6.736035,-8.088868,3.239634,-8.330549,-5.082395,0.977167,-5.825982,5.975967,-6.492739,1.527710,-8.977831,2.972853,0.188535,7.847536,-2.283876,-7.660601,-5.507499,-1.607812,8.145648,7.312041,-7.006976,8.082985,-4.936897,8.168309,-5.589878,9.930161,2.227674,-5.401252,4.605222,9.936797,2.172371,-1.099425,4.609589,5.102845,0.125173,-0.177910,6.003187,-6.929693,-5.933773,-9.713390,-0.164858,1.568601,-5.749888,2.585865,0.919908,8.789599,-6.190926,-1.763213,-0.688523,-0.914981,9.585162,2.882957,7.996426,-8.106364,3.780679,-4.740972,-1.193678,0.104814,2.312445,4.291155,-8.199792,-5.558157,-9.435442,-5.439599,-9.583231,-1.660587,0.321402,7.814137,5.330572,-4.356551,-0.236002,2.073687,4.381702,-6.049106,9.845440,1.225125,-2.537621,-8.789140,4.220569,-0.965378,-2.936340,5.380195,-7.747486,-9.690474,-9.781153,6.686358,6.098636,-3.524354,4.288978,0.170437,-1.624192,-2.013578,-6.657831,2.341690,0.734968,-6.314283,-7.842905,9.457734,-8.123378,-5.000849,6.802001,0.794302,-5.738193,8.174815,-4.458755,-4.102686,7.602623,-3.038585,-8.951678,3.357216,7.857939,0.230555,7.487694,-9.283079,-4.587234,0.832584,-2.228411,-4.928616,-9.558345,5.970489,-1.514434,6.972758,-9.303817,-8.010626,8.958839,7.938284,3.699865,-8.875658,4.359165,-6.101957,6.322856,3.147197,-2.994399,4.713011,9.640841,-1.651073,-7.212460,-1.498000,6.759143,2.113612,-5.352517,4.600520,5.141624,7.843326,-4.139539,-4.900261,4.566919,-8.096476,4.086204,-2.021513,-3.948265,6.953631,-2.952901,1.126885,-8.735780,-9.174061,2.461255,-8.912674,4.817685,-3.726844,4.400750,6.595988,-0.510686,-1.894826,0.271911,7.972464,5.275893,9.040778,-7.784885,6.101280,3.839652,8.113644,1.965071,-7.219290,3.398158,2.829071,2.301435,3.455545,-9.584935,-1.927882,-7.075596,4.199782,-6.137196,4.370009,9.161469,6.267657,-5.777999,-9.562679,-2.155151,-5.845191,7.703062,-6.995877,3.806248,-4.740931,4.228442,0.458028,-8.628796,-1.269085,9.624284,4.129229,-3.938221,-3.905985,-1.952192,1.381472,3.326389,-5.739354,3.784676,4.861961,9.442803,-3.226137,-5.090425,-7.188938,-2.888613,4.696005,5.424352,-9.219185,5.754098,-1.505609,0.518946,-6.616974,-7.342844,2.134510,7.540107,-8.782894,8.734094,-9.598782,-1.635601,-9.944833,2.637271,9.575552,7.565652,-5.207990,-5.761125,-9.837371,-1.350460,-7.321206,3.175245,-1.338995,-3.499343,2.332885,4.165059,-2.325341,4.113372,-2.212498,-5.913591,6.465060,-4.173627,5.068172,-3.843587,-6.702472,-1.555766,6.393945,3.859176,9.997665,-2.280679,4.203397,-0.496089,-4.955507,-6.722795,-5.540674,-1.666256,-5.003484,3.243357,6.185933,9.930935,3.181530,-9.647205,-1.884745,-7.944078,8.093933,-6.671232,6.280132,-7.692699,-8.384149,-3.303477,-7.771102,-4.664417,3.739727,-5.068665,-7.063718,7.277817,6.718242,-8.594551,3.478887,8.233407,-0.771113,6.065443,-7.160444,8.856667,-9.294374,9.940115,-7.902815,-9.946354,-9.278462,-7.005912,-5.496796,-8.725113,5.357872,8.328606,9.419628,3.954035,6.132449,0.876374,7.406794,-4.743341,1.830941,-3.904585,-7.592669,3.150642,8.950218,9.706132,0.339522,1.120994,-8.584029,3.574672,-9.080607,9.221458,2.857797,7.858372,4.859806,6.590731,-7.561574,-9.022248,-6.618571,2.625600,1.562404,3.217970,-4.262055,2.576050,-1.489619,-3.877364,-9.568799,-3.685833,7.794710,-4.582766,2.168731,1.525461,1.783502,-0.967116,4.279717,0.428494,-0.950893,-2.589727,6.737886,-2.566777,-2.798264,-5.527391,-8.117019,1.542182,6.477950,3.310018,9.876259,-0.574511,-3.209600,-6.146463,-7.190551,4.693148,-2.800817], dtype = "float32")#candidate|6375|(960,)|const|float32
call_6374 = relay.TupleGetItem(func_171_call(relay.reshape(const_6375.astype('float32'), [15, 16, 4])), 0)
call_6376 = relay.TupleGetItem(func_173_call(relay.reshape(const_6375.astype('float32'), [15, 16, 4])), 0)
func_6234_call = mod.get_global_var('func_6234')
func_6235_call = mutated_mod.get_global_var('func_6235')
call_6379 = func_6234_call()
call_6380 = func_6234_call()
uop_6381 = relay.asinh(uop_6370.astype('float64')) # shape=(9, 16, 7)
bop_6390 = relay.add(uop_6370.astype('int8'), relay.reshape(uop_6381.astype('int8'), relay.shape_of(uop_6370))) # shape=(9, 16, 7)
output = relay.Tuple([call_6374,const_6375,call_6379,bop_6390,])
output2 = relay.Tuple([call_6376,const_6375,call_6380,bop_6390,])
func_6394 = relay.Function([], output)
mod['func_6394'] = func_6394
mod = relay.transform.InferType()(mod)
output = func_6394()
func_6395 = relay.Function([], output)
mutated_mod['func_6395'] = func_6395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5921_call = mod.get_global_var('func_5921')
func_5923_call = mutated_mod.get_global_var('func_5923')
call_6410 = relay.TupleGetItem(func_5921_call(), 1)
call_6411 = relay.TupleGetItem(func_5923_call(), 1)
func_2161_call = mod.get_global_var('func_2161')
func_2164_call = mutated_mod.get_global_var('func_2164')
var_6415 = relay.var("var_6415", dtype = "uint16", shape = (3, 40))#candidate|6415|(3, 40)|var|uint16
call_6414 = relay.TupleGetItem(func_2161_call(relay.reshape(var_6415.astype('uint16'), [10, 1, 12]), relay.reshape(var_6415.astype('uint16'), [10, 1, 12]), ), 2)
call_6416 = relay.TupleGetItem(func_2164_call(relay.reshape(var_6415.astype('uint16'), [10, 1, 12]), relay.reshape(var_6415.astype('uint16'), [10, 1, 12]), ), 2)
output = relay.Tuple([call_6410,call_6414,var_6415,])
output2 = relay.Tuple([call_6411,call_6416,var_6415,])
func_6424 = relay.Function([var_6415,], output)
mod['func_6424'] = func_6424
mod = relay.transform.InferType()(mod)
mutated_mod['func_6424'] = func_6424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6425 = relay.var("var_6425", dtype = "uint16", shape = (3, 40))#candidate|6425|(3, 40)|var|uint16
func_6424_call = mutated_mod.get_global_var('func_6424')
call_6426 = func_6424_call(var_6425)
output = call_6426
func_6427 = relay.Function([var_6425], output)
mutated_mod['func_6427'] = func_6427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6394_call = mod.get_global_var('func_6394')
func_6395_call = mutated_mod.get_global_var('func_6395')
call_6442 = relay.TupleGetItem(func_6394_call(), 3)
call_6443 = relay.TupleGetItem(func_6395_call(), 3)
func_6424_call = mod.get_global_var('func_6424')
func_6427_call = mutated_mod.get_global_var('func_6427')
const_6453 = relay.const([9,7,-8,-7,-1,3,-5,10,-8,-8,-7,-6,4,-7,5,3,7,5,5,10,-7,2,1,3,-5,6,4,6,2,-10,-5,-8,3,8,7,5,-1,5,-1,1,1,-9,-1,-2,-8,9,5,8,3,7,-5,6,-1,8,-1,-7,8,5,3,-4,2,-8,1,7,3,-5,-10,6,2,-3,-5,-5,-8,-4,-10,6,2,-10,-10,-8,-5,-5,4,4,5,8,10,3,-4,3,-5,-7,-10,9,-8,-5,10,5,1,-9,-1,-6,-2,10,-8,-1,1,10,-9,-1,8,7,6,-1,5,3,8,-6,-10,6], dtype = "uint16")#candidate|6453|(120,)|const|uint16
call_6452 = relay.TupleGetItem(func_6424_call(relay.reshape(const_6453.astype('uint16'), [3, 40])), 2)
call_6454 = relay.TupleGetItem(func_6427_call(relay.reshape(const_6453.astype('uint16'), [3, 40])), 2)
func_171_call = mod.get_global_var('func_171')
func_173_call = mutated_mod.get_global_var('func_173')
const_6469 = relay.const([[-2.222405,5.777186,-3.341791,6.860885],[8.503251,-8.787236,-8.394535,3.762730],[-0.769267,-1.887599,-5.710402,1.507193],[-1.304994,-9.876147,9.559732,2.866206],[4.218614,8.229669,-2.933555,6.374065],[-1.561773,2.982589,-1.526729,-1.463162],[-2.487627,-5.046966,5.585413,-5.282269],[-6.488612,-8.944769,0.654565,0.737637],[8.161266,-6.971773,9.840005,7.773656],[5.172597,-7.282570,1.718925,-2.311883],[0.363577,-1.000078,-5.585876,2.803041],[-6.748815,-8.971611,6.054642,-7.514534],[-4.207058,9.051735,-5.630853,2.610631],[9.924907,3.269396,-1.944612,-2.170629],[-3.807373,-4.603023,1.949282,5.994468],[-4.824391,2.635316,2.697069,-8.143645],[-4.159060,-0.066464,-6.541698,-6.925581],[7.959090,5.307508,-5.316393,-9.389546],[-7.781078,4.513589,-6.300982,3.915351],[7.655914,-6.279531,-2.428373,-7.248661],[-8.311973,-0.139388,4.589437,8.008577],[-3.166684,-0.917875,-3.667393,-7.306681],[-9.411318,5.142403,-4.065802,0.338512],[0.348098,0.956511,-0.303091,2.801007],[-0.562582,0.214521,-9.778642,-8.181184],[7.223530,1.048126,9.306709,4.152427],[-5.544570,-5.424922,2.396951,-8.358556],[-4.391533,5.608625,6.396141,3.988495],[-1.336039,8.466665,3.019404,5.653595],[1.298540,5.605392,-8.413445,-1.797281],[4.525675,-9.001996,-5.635948,5.306142],[-0.238984,6.311124,4.917605,0.128439],[7.290922,3.687628,-2.897930,-4.451475],[8.323642,9.083374,-9.587052,-1.995372],[-2.152275,-1.528777,7.012628,8.624731],[-3.723562,-7.596826,-9.734530,6.070060],[-0.322392,-8.195446,-6.677390,-8.911694],[-7.879740,7.433128,7.585975,-9.817344],[-9.741388,-7.586850,4.071873,2.320626],[-3.114083,6.700424,7.708120,0.594354],[0.889657,3.750869,-7.585945,-7.035412],[7.854704,5.022639,5.315523,-5.390887],[-7.200617,-7.123150,1.915813,-4.394513],[7.836692,-9.984329,-6.654516,-3.347518],[5.214437,8.737263,-1.339308,3.050503],[-8.880593,-1.415810,-3.434540,5.624562],[-0.874704,-8.754001,-2.317173,8.910345],[6.103086,-3.356576,3.730130,6.602202],[-1.026058,-3.583100,-4.836955,-1.759274],[-3.468656,3.279598,-5.570241,-8.345053],[-1.145846,-4.963986,9.905529,-4.450585],[2.017490,-5.184500,2.245924,0.391519],[7.947564,-0.496682,3.681859,-8.259855],[-1.851935,1.778540,-2.800289,4.013322],[-0.645004,6.259973,8.966417,-4.278619],[6.207925,-9.564078,5.796597,-5.312042],[8.216111,-6.932686,-3.847454,2.237513],[-1.592736,9.199881,-5.163297,5.374232],[-6.720724,-8.658622,-4.015938,-8.798175],[8.652995,1.829764,-1.646224,6.161397],[-5.035550,5.058017,-7.473872,3.998783],[0.090091,-0.294154,7.564524,-7.146872],[-7.611503,-3.191196,-8.786409,-2.805163],[9.428512,-8.525415,-3.787169,6.790300],[3.307487,8.093305,9.940892,6.526924],[2.992788,-8.513546,5.053251,-9.865927],[0.578712,1.584528,3.943457,-2.117914],[6.604904,-3.775392,-2.390891,-6.120049],[-1.527618,-3.701445,4.905644,-1.759808],[8.653131,1.872417,-6.100500,-9.622929],[-6.145245,1.554091,-9.524323,-4.584361],[-5.426901,8.573603,1.220879,-5.211809],[3.363805,8.158286,-2.507942,7.075335],[3.425878,0.731784,-0.297027,5.986957],[1.054134,-2.059498,-0.361231,3.127243],[3.117046,-9.595597,-5.204187,0.392310],[2.272094,-9.457173,-1.151709,7.050769],[5.170837,8.020387,-1.095255,-4.645106],[2.546373,9.980568,-7.890322,-0.798773],[9.455036,-7.311000,-9.906285,5.752583],[-7.195643,9.312248,8.568226,-0.913133],[6.954438,-1.528022,8.847630,0.023288],[7.985462,-2.606282,5.056998,-7.019169],[4.218548,2.638550,-4.617352,8.913998],[-2.063339,8.107816,2.342673,-7.700946],[-2.579848,0.948451,-3.804437,-7.477447],[7.030213,1.351986,-8.732226,-2.573139],[-3.104680,6.866846,-3.694335,5.308839],[7.831917,8.956976,2.887948,-6.955992],[-9.364025,0.007118,-6.341636,1.689070],[-5.734175,9.940647,-1.602450,4.518538],[4.652811,4.976279,1.153317,-4.763589],[8.174401,-8.691779,-0.594441,-3.653916],[-3.238030,1.762817,-3.042700,-0.620248],[4.889312,5.302208,1.064431,-4.344684],[4.755979,5.535123,-2.365440,6.847651],[4.817143,-5.464150,-5.439125,-4.351894],[-8.287158,-7.333374,-7.854930,-2.985119],[-1.749831,8.538327,-5.078960,-3.078837],[4.021717,-8.314034,2.335355,-8.003433],[4.710137,-2.232568,4.647428,-8.250395],[-4.557650,-8.040198,-0.318181,-5.045866],[-6.507561,-6.808683,1.649808,-4.087674],[-0.223919,4.363614,3.784828,-9.366072],[-4.165386,-2.116212,-6.953632,-9.538238],[7.160817,2.430563,4.296523,-9.382488],[-5.700181,-4.411861,5.437452,-5.595637],[8.757975,-7.868428,4.331888,-8.549108],[5.722932,-4.856048,0.737164,8.870094],[2.524121,-2.519874,-8.244561,7.695242],[-6.136580,1.952337,-7.030157,8.955812],[9.050496,-8.844589,4.542402,-0.804937],[-2.552361,-8.250041,4.476565,-2.943381],[-4.427822,5.797931,-0.856007,5.700227],[-7.585285,-1.800200,1.020271,4.469149],[2.903275,9.397200,-8.850732,-8.419632],[-0.743933,-6.066427,-4.424486,8.036884],[-3.149013,9.972696,2.957905,8.156878],[8.157514,-0.693610,7.017018,0.679930],[-2.133270,3.968368,9.062602,0.492213],[-4.202921,9.968098,-8.455657,-4.166811],[-1.503491,5.270544,-6.742707,3.269579],[3.139130,-3.849237,2.810195,4.935048],[4.368878,-2.183252,-0.771918,-1.298630],[-0.201147,4.308265,-9.031765,0.023357],[-1.088820,-5.829239,9.301956,-6.316165],[-9.301685,1.810526,8.460375,8.022984],[-3.854099,1.316955,1.367253,8.623010],[2.490426,-5.792933,-1.671105,-0.520261],[0.366228,-3.317242,4.487621,4.831105],[6.986881,0.476033,6.900020,8.016928],[0.303672,2.027180,1.219571,-3.901144],[4.519901,-5.786005,-6.343714,-5.877134],[-0.138386,-5.486104,-4.313955,7.827161],[-3.686741,-5.213294,6.851228,3.075396],[-0.497953,2.262950,-7.087337,-3.921184],[-6.594662,5.995656,-9.527805,-3.953828],[-5.407014,-9.268429,-8.855717,0.144626],[-8.343765,4.836193,1.228397,-8.198863],[2.712934,4.142870,0.109867,1.453381],[2.006524,-8.089219,5.444774,-7.174012],[6.511827,-3.021359,-7.625151,1.893141],[9.372124,-9.151951,5.598086,-5.138042],[-0.019900,-4.692187,5.132297,8.529392],[3.992241,-9.046353,1.495171,-4.299743],[2.128588,-1.873577,-0.398748,3.487877],[-4.590433,6.657251,-2.480816,-6.454360],[0.862220,3.660941,4.708181,8.869440],[-8.110176,3.979899,-8.430263,0.798281],[-7.834323,5.276172,0.129680,-9.918852],[-6.199849,7.947917,8.832487,7.028964],[5.519505,5.054490,-7.543070,0.608664],[3.778232,-0.004184,-1.667604,1.611953],[7.607133,-2.683357,7.983263,2.024614],[-0.143558,4.564555,-9.934814,-3.335157],[6.846068,-5.682612,8.997982,-5.241334],[-7.217808,-9.932085,-3.887828,3.536288],[7.226739,-8.035871,-5.945142,-4.738188],[3.711173,-4.918852,2.045601,1.023521],[0.226242,-9.177880,0.788553,8.200234],[5.963663,-5.777314,1.013553,8.523503],[5.189912,-0.274172,1.838377,-8.792804],[-9.128685,7.533006,-0.940135,-5.232103],[-3.400852,-9.711195,1.214553,-1.954277],[6.254810,0.355306,-9.461431,1.697982],[-3.521502,-1.980515,2.916018,-8.020016],[6.649943,1.382948,-3.836687,8.592838],[-1.346051,-3.741645,2.697407,-8.533607],[-5.086481,-6.221202,-6.303062,-8.742440],[4.360161,7.516545,-9.951321,-9.660030],[6.457008,0.870099,5.664882,-1.042479],[-7.243760,9.696839,4.430383,-3.026519],[5.959264,0.619267,0.791865,4.113401],[-6.504526,9.833152,-2.468557,-6.214150],[2.607232,-7.411080,4.779080,-8.185225],[2.588890,5.326157,5.633687,-7.526922],[-0.957971,-9.202354,-8.610918,-0.345767],[-3.889570,2.654145,0.542519,-2.991229],[1.166140,2.860982,-8.502791,-0.919058],[-6.260117,-7.067043,8.842688,-3.406804],[-5.425420,5.822707,-8.102000,2.361566],[5.840937,-3.774145,3.663217,3.359220],[1.312499,4.043116,-7.214765,1.350901],[7.549796,-5.799874,2.145509,8.285269],[-0.812272,-6.665710,-4.132390,1.774927],[-0.276307,5.869275,4.977899,-4.558743],[6.662869,-1.128311,6.758293,-0.483421],[1.195417,2.637598,-3.947950,9.196336],[-3.822585,4.408107,7.798566,-4.744373],[-9.593880,5.161384,9.862154,-9.642332],[0.218877,-0.693324,4.126800,-4.686030],[-0.403434,4.822041,-8.814996,0.460230],[-5.692121,0.153092,7.003154,7.071331],[2.036816,9.029854,-6.936857,-1.958204],[-3.157666,-2.037204,0.099168,2.039332],[-3.551373,-1.766197,4.705410,1.345595],[6.587356,6.305175,0.437261,-8.889048],[-4.714396,8.607821,-0.014895,-7.911403],[-9.196924,-4.837585,1.087168,1.286433],[-4.171899,-8.692128,5.949384,2.013717],[9.235297,-3.076228,8.152641,4.637817],[-8.081574,-8.237052,-7.471489,-1.354589],[7.699689,1.083121,-4.811745,-0.774843],[-2.546847,-1.320212,1.998163,-2.700174],[-7.943494,5.999298,-1.624920,6.069326],[7.592728,8.694075,0.982254,-2.279073],[-7.868807,2.084125,2.017397,8.024508],[0.267276,1.429718,5.019062,6.141379],[-9.540244,5.433565,6.614938,-6.147656],[-7.656644,4.553424,2.157791,-7.420340],[5.170333,-7.449820,6.186482,-0.050378],[1.681068,5.938751,-1.710829,-1.924731],[0.519421,7.387588,4.365777,8.069108],[2.271077,3.312175,1.387149,-3.781310],[4.704722,0.597116,-4.797589,2.325354],[4.686726,-8.168359,0.512132,4.269180],[-5.435322,-7.002672,-1.791938,4.021029],[-5.624238,-0.665130,-2.291747,-9.498579],[9.717666,-7.857971,5.600490,3.514582],[2.447893,-9.013212,-0.089332,6.566249],[-8.766689,-9.306323,-7.873299,-9.424123],[-3.312748,-7.223294,9.072707,1.953532],[-4.369826,-1.015013,0.854011,-6.726539],[7.279506,-3.570771,-9.032999,-1.007570],[2.357581,5.363658,-3.529688,-9.329807],[-3.253725,3.414008,2.360979,-2.230085],[4.515930,3.649000,-6.267307,4.323321],[1.315212,-2.430272,1.328053,-8.993223],[3.799154,-4.348852,-6.515985,5.447873],[4.283520,-2.934059,3.495875,-5.574837],[-0.823730,1.738055,-7.489713,-6.578494],[-9.854285,3.718937,-1.330748,-5.348629],[-3.466234,2.620773,6.725929,0.803104],[-4.862892,3.868280,5.734004,-8.973424],[-3.651266,-6.646801,-9.861132,-6.626818],[3.086772,-1.808432,4.027639,-4.361683],[-9.880010,-9.900177,-0.832077,-3.431718],[-8.476000,-1.555987,-7.871224,1.612178],[-6.381934,7.317090,-8.386436,-0.196888],[0.260988,1.557377,9.350563,-4.516206]], dtype = "float32")#candidate|6469|(240, 4)|const|float32
call_6468 = relay.TupleGetItem(func_171_call(relay.reshape(const_6469.astype('float32'), [15, 16, 4])), 0)
call_6470 = relay.TupleGetItem(func_173_call(relay.reshape(const_6469.astype('float32'), [15, 16, 4])), 0)
output = relay.Tuple([call_6442,call_6452,const_6453,call_6468,const_6469,])
output2 = relay.Tuple([call_6443,call_6454,const_6453,call_6470,const_6469,])
func_6477 = relay.Function([], output)
mod['func_6477'] = func_6477
mod = relay.transform.InferType()(mod)
output = func_6477()
func_6478 = relay.Function([], output)
mutated_mod['func_6478'] = func_6478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6477_call = mod.get_global_var('func_6477')
func_6478_call = mutated_mod.get_global_var('func_6478')
call_6623 = relay.TupleGetItem(func_6477_call(), 2)
call_6624 = relay.TupleGetItem(func_6478_call(), 2)
func_3517_call = mod.get_global_var('func_3517')
func_3521_call = mutated_mod.get_global_var('func_3521')
var_6626 = relay.var("var_6626", dtype = "float32", shape = (585,))#candidate|6626|(585,)|var|float32
call_6625 = func_3517_call(relay.reshape(var_6626.astype('float32'), [13, 3, 15]), relay.reshape(var_6626.astype('float32'), [13, 3, 15]), )
call_6627 = func_3517_call(relay.reshape(var_6626.astype('float32'), [13, 3, 15]), relay.reshape(var_6626.astype('float32'), [13, 3, 15]), )
uop_6633 = relay.sin(call_6625.astype('float64')) # shape=(13, 3, 15)
uop_6635 = relay.sin(call_6627.astype('float64')) # shape=(13, 3, 15)
bop_6636 = relay.bitwise_or(uop_6633.astype('uint32'), relay.reshape(var_6626.astype('uint32'), relay.shape_of(uop_6633))) # shape=(13, 3, 15)
bop_6639 = relay.bitwise_or(uop_6635.astype('uint32'), relay.reshape(var_6626.astype('uint32'), relay.shape_of(uop_6635))) # shape=(13, 3, 15)
func_2707_call = mod.get_global_var('func_2707')
func_2709_call = mutated_mod.get_global_var('func_2709')
const_6643 = relay.const([8,-4,5,-7,5,6,9,-9,-10,-9,-10,-7,-4,-10,-5,10,9,6,1,6,3,3,4,1,9,-3,2,2,3,2,-4,-1,8,8,3,5,-8,8,-2,-5,10,10,10,-6,1,-10,10,-2,1,8,-4,9,-3,3,5,-4,8,9,-3,8,4,-1,-1,1,-2,7,-1,-9,3,-10,2,5,8,-5,-10,-7,2,7,2,7,-8,-2,-1,5,-5,-2,9,-4,-3,9,1,-6,-5,-8,2,1,-10,-10,3,4,-8,-4,6,-3,-6,-10,6,2,8,8,-5,-9,1,-7,5,-4,-10,8,-6,-2,-3,9,-10,-3,-1,8,10,-3,9,9,3,-6,4,10,-7,2,7,-9,4,-5,3,-1,3,7,-5,-7,-10,3,9,3,6,-5,-9,-9,-6,-8,-8,-5,-4,-4,-9,-9,-5,4,-8,9,-4,-8,-9,-8,3,-8,-8,3,-5,2,1,-2,6,10,5,-1,-6,-4,7,-1,-1,-3,-2,-10,7,-9,-3,-3,-9,4,-4,2,3,-4], dtype = "uint16")#candidate|6643|(200,)|const|uint16
call_6642 = relay.TupleGetItem(func_2707_call(relay.reshape(const_6643.astype('uint16'), [5, 5, 8])), 0)
call_6644 = relay.TupleGetItem(func_2709_call(relay.reshape(const_6643.astype('uint16'), [5, 5, 8])), 0)
output = relay.Tuple([call_6623,bop_6636,call_6642,const_6643,])
output2 = relay.Tuple([call_6624,bop_6639,call_6644,const_6643,])
func_6651 = relay.Function([var_6626,], output)
mod['func_6651'] = func_6651
mod = relay.transform.InferType()(mod)
mutated_mod['func_6651'] = func_6651
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6652 = relay.var("var_6652", dtype = "float32", shape = (585,))#candidate|6652|(585,)|var|float32
func_6651_call = mutated_mod.get_global_var('func_6651')
call_6653 = func_6651_call(var_6652)
output = call_6653
func_6654 = relay.Function([var_6652], output)
mutated_mod['func_6654'] = func_6654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5412_call = mod.get_global_var('func_5412')
func_5413_call = mutated_mod.get_global_var('func_5413')
call_6796 = relay.TupleGetItem(func_5412_call(), 2)
call_6797 = relay.TupleGetItem(func_5413_call(), 2)
output = relay.Tuple([call_6796,])
output2 = relay.Tuple([call_6797,])
func_6798 = relay.Function([], output)
mod['func_6798'] = func_6798
mod = relay.transform.InferType()(mod)
output = func_6798()
func_6799 = relay.Function([], output)
mutated_mod['func_6799'] = func_6799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5340_call = mod.get_global_var('func_5340')
func_5342_call = mutated_mod.get_global_var('func_5342')
call_6826 = func_5340_call()
call_6827 = func_5340_call()
func_1662_call = mod.get_global_var('func_1662')
func_1665_call = mutated_mod.get_global_var('func_1665')
const_6829 = relay.const([-7.226870,-8.122113,-4.142265,1.057129,-2.748839,-4.281523,-8.753277,-5.315666,-1.025825,-3.423198,-0.609378,-6.091782,-4.959433,5.975248,4.972848,-1.418620,2.287978,-4.967504,-6.176915,-9.365187,1.864495,1.383670,5.178167,9.591785,2.237764,5.298926,-2.088380,-1.188196,1.937542,3.245140,3.542442,5.915477,-1.783616,-0.436748,7.464386,7.831424,7.839330,-7.588025,-5.450348,-6.561205,5.060862,7.727777,-5.142247,0.995612,2.883367,-8.799250,-0.675295,5.314434,3.911400,9.315869,-8.179506,-3.775444,9.648705,1.031092,-3.070294,3.907404,7.479644,9.805262,-5.405344,-6.816887,6.151025,-5.165605,-1.633201,-9.378516,-5.319727,-8.134117,-5.098682,-8.862726,9.286417,7.366586,-1.334679,-5.882870,1.976505,9.666559,-7.174871,1.531231,-6.919789,6.365159,6.166811,9.895044,1.474861,8.123831,-0.549687,5.618746,5.927625,3.495681,3.628769,0.937097,5.967826,-6.271200,-9.371258,-8.865294,4.383652,0.839330,4.077295,-2.525976,-5.896982,0.134988,-3.839243,0.173451,0.681180,6.549335,-1.403700,-5.956598,7.545660,7.513901,-2.600781,-2.975823,9.272183,4.365968,-5.393735,7.245422,3.524908,8.701233,7.216452,3.059989,2.827238,9.464633,1.315182,-1.838436,-0.367005,3.470274,3.630367,-7.588398,5.659080,2.420141,-1.678285,4.269717,9.906840,9.174053,5.294822,-5.318901,2.492908,-5.125518,1.403284,5.861290,-0.453566,-2.389029,-0.212682,-7.369768,-8.905267,-4.388491,-0.094106,-6.167680,-6.093048,-5.552615,-8.338588,6.918870,-7.053553,5.724080,-7.943816,6.789449,7.023253,-7.532638,-4.761723,3.717339,-6.541778,2.683761,9.717151,2.308898,4.488153,7.796255,-3.884033,8.331359,-1.760278,-6.104093,5.269064,4.095793,8.752619,2.031222,-7.263263,1.892478,-7.947828,6.505307,-1.054733,2.953931,-5.809837,-7.448633,0.834674,7.257957,-2.488862,-5.799642,5.885004,-7.679355,7.626180,0.360463,-3.333614,6.845353,4.837785,1.062240,3.991591,-3.380392,8.625474,-9.648807,-8.365802,9.848427,2.932405,4.629399,8.805768,0.784937,0.258710,0.195141,5.193383,-0.583552,9.413726,1.491389,-1.896962,3.840134,-2.436095,9.279947,6.714803,8.667458,-4.581310,-2.521292,-4.219619,6.718835,-6.066814,1.513816,2.759557,-5.592730,8.745150,2.014524,6.709865,-3.351956,-9.692769,4.127649,-4.299595,-6.786870,9.149222,-0.678046,-8.118779,9.987539,-1.878399,5.566191,-6.113148,4.070125,0.983971,7.345383,8.252512,-6.127858,6.189408,3.135163,-9.524064,0.565887,-8.844751,1.938841,5.017911,7.678335,8.867216,4.607869,4.840975,-3.884117,5.712416,2.500207,1.362386,-5.401779,7.927318,-3.099115,2.889758,4.410660,3.195972,-7.477208,5.919820,7.304089,-8.002775,-0.799983,7.914449,-5.490970,8.524492,8.305500,2.777447,3.808324,3.250030,-0.801070,9.253264,4.937084,-3.289200,6.507271,4.540377,9.785340,7.199660,8.549621,-1.788753,4.957462,-7.159685,-2.219856,-2.323675,-5.950789,1.524685,-5.581213,7.812416,3.830666,-0.482318,5.028023,2.084256,1.644158,3.518804,7.732637,8.752674,5.991823,9.325000,2.568443,6.042206,-4.837041,9.060459,-9.102915,-4.674247,-8.325853,-3.751975,-7.693875,-2.934785,5.040114,4.757870,1.531893,7.994149,-2.506725,-9.698314,7.895158,1.525969,-4.350413,-7.335053,7.545854,1.134906,8.323972,-7.540817,9.575372,-3.808799,-8.555686,-0.160054,-2.337318,-9.019307,-8.454559,-7.920366,-2.488007,3.375765,-1.094190,5.962540,-7.412349,-4.323996,1.570005,-1.111070,2.455289,6.240130,-9.441486,-3.547740,4.049339,0.028562,2.517248,2.880615,4.917333,5.584047,1.105758,-2.295630,4.636778,9.204988,7.470291,9.790198,-7.127365,-4.448239,-9.499750,4.408605,7.641018,-1.806432,1.461860,-3.714685,-2.782367,-7.477198,3.348259,-6.950570,8.087027,5.322479,7.491516,-7.091829,4.158797,-7.945547,2.320813,3.148275,-8.468926,7.259499,-9.304514,-6.243576,6.856049,-2.423783,6.490268,5.609647,-8.217789,0.523434,-9.383065,-4.524772,-0.769215,0.507216,-8.542042,-0.416218,-5.626624,-8.595483,-4.240140,-4.475288,-8.939951,-3.589566,8.115009,-5.273543,-5.405616,2.535004,5.210198,-4.587533,-8.461636,0.454848,-2.312200,2.588500,-0.465270,5.068971,-6.250078,-0.332583,-8.265331,8.775099,2.213199,-1.323471,8.167672,-7.732002,4.566536,9.778428,-6.301562,-5.282827,-3.127771,-2.281797,-0.814033,0.879691,3.063579,1.596131,-8.820304,3.405439,-8.900766,4.640065,6.624842,4.999782,-2.227774,-8.751343,9.252888,-6.235773,-4.902630,-3.452236,-1.961183,5.185866,-0.617428,-1.656664,3.592827,-9.954313,7.284572,-1.340900,5.714961,1.903669,-2.413167,-3.736135,-1.933895,8.185622,0.109931,5.912168,-0.154701,0.587272,0.926964,6.994318,5.186501,1.674922,-8.297251,1.421920,2.819240,7.139702,-9.452210,5.996644,-2.083487,1.846411,4.590476,-4.831953,-8.266393,-4.474075,8.972558,-6.501484,9.659331,6.940700,5.030628,9.872338,9.424589,-5.032106,-4.665233,-8.983053,1.649537,9.131386,3.101348,-1.449138,6.915343,1.655736,-5.382273,-4.628556,2.736701,6.473664,-2.270011,7.506589,-8.555753,-1.715895,-7.312713,1.722838,-6.862444,-9.323118,-6.550122,4.766925,8.015287,-5.982030,8.543208,9.304493,-9.107246,3.977071,6.843398,-1.833245,2.906261,-4.787737,-3.816018,2.420629,-4.025652,-0.661166,-3.055344,6.885489,-0.829029,8.701148,-2.904559,4.307328,-9.724068,1.757854,4.158221,9.254844,-6.529214,-2.848155,8.597581,-7.955602,4.681000,7.267959,-0.107011,7.758552,-3.301702,-8.774130,9.872667,-8.373369,6.691769,4.200788,0.631392,2.470009,3.475227,-4.445182,0.151029,-6.034378,3.954151,-4.534795,-6.153644,3.374914,-3.859744,7.964008,9.552277,8.893702,-6.987359,9.092016,9.945891,3.001362,0.625378,-8.475588,-1.837160,4.569016,-8.170365,-3.396102,-5.681203,4.127054,0.267773,-4.406475,-5.054730,1.021037,3.277074,7.261549,6.122024,4.084688,-9.380383,3.522323,-6.401800,8.416779,-0.738169,-4.617803,8.223227,-6.185878,-4.572246,2.324732,-8.277725,0.217694,3.864025,8.483604,-6.786843,2.391585,-9.260198,3.658317,-0.846518,0.666029,-7.068811,4.111663,5.031261,0.649669,-4.184894,8.578874,8.653446,-9.547524,9.496828,-3.237590,-6.919732,-8.157997,-9.501053,-4.546770,-4.277421,-6.115076,0.750314,-7.803583,5.528190,-4.754312,-2.843286,-5.811744,8.469739,9.804633,-9.997978,-3.942581,7.012997,3.400752,-7.724687,-3.295853,9.104647,-7.424248,-6.758478,-7.762752,-3.168881,-5.944792,-1.853227,-0.754272,4.497902,-6.071413,2.364422,3.081629,8.309073,0.258190,-6.806867,3.626108,-4.097195,-0.089480,-1.882089,-3.638550,1.893682,-3.331468,0.522699,2.922247,-2.143819,8.968072,-0.960294,-0.131700,8.436352,-5.444588,-8.193848,-4.745798,1.779789,8.588722,5.338051,-2.518603,-9.977555,-4.864806,0.912978,5.908396,1.848908,-0.281371,9.329759,4.510271,-5.595128,-1.500836,4.475551,5.614519,1.868663,0.039565,-3.284530,8.430358,-0.634160,-3.729736,-2.129839,0.620254,-9.759916,5.614169,-9.469130,0.855593,-3.741143,0.963673,-9.682946,-2.370510,-7.320646,-8.881511,0.634002,7.473028,5.686806,-0.470901,2.430069,2.030803,6.712221,1.905578,4.886595,-9.713388,-1.944058,-1.235883,-9.766341,-8.764414,-6.561689,8.898822,6.755407,9.164045,-6.547345,-6.899147,5.499428,-7.100228,-1.717825,-6.123117,-7.632648,-7.355116,6.124276,8.242919,3.453093,-0.848456,-7.460453,-5.129239,-6.701161,-8.049252,0.558578,0.006039,-4.767640,8.144025,8.935624,-8.277218,-4.853139,3.085085,1.989808,4.286977,-2.188804,-9.726835,2.417250,-7.034334,-8.585321,-3.480832,5.386143,-9.422589,8.280690,5.381808,-5.568737,-6.816555,-0.696100,-8.108792,-3.249236,-9.137678,6.193857,6.365349,0.801329,-3.502921,-4.196222,4.371042,-7.846842,0.314680,2.310271,9.650877,9.924096,-5.175123,3.162331,1.301385,-2.894731,-7.339646,9.590381,-6.606882,-4.576407,-7.782331,-4.844831,-3.677954,-7.580340,-4.619949,-5.074837,6.945749,-0.164195,6.621377,-0.038764,4.787719,9.061058,-3.388880,-2.253125,3.135853,1.643275,1.675366,-4.018974,2.558907,-6.372173,-8.235123,2.418852,-4.813496,-4.195094,3.714263,-1.523206,6.508789,-3.428848,-1.844341,6.072112,6.727449,-5.271370,-6.385930,2.558208,0.990546,6.291134,-5.055896,5.526675,-5.471884,7.275244,-1.644789,7.108701,6.650088,9.856842,-4.340122,8.637954,8.746407,-3.856233,-8.947246,8.665470,4.127653,-2.512024,9.156701,-3.223528,9.090287,7.571553,-1.907395,5.990070,5.605054,3.048986,9.365006,0.008717,-5.825865,-4.876023,7.019810,-9.825042,0.719692,5.205635,-6.450960,-2.004719,0.841018,5.632056,-9.642383,4.148809,0.760499,7.054872,0.349888,-6.146837,4.189206,1.971035,-2.600365,2.344156,-3.494298,9.327819,1.038391,-5.477149,1.312633,-2.378681,-0.225648,0.467368,-5.260125,0.401013,-0.889598,-1.319114,-5.551850,-5.886154,4.800902,-8.111960,-6.348813,3.109491,-6.821046,-7.312940,9.140122,3.140439,-0.759444,-8.975948,-4.781328,7.370881,5.672816,-6.560863,1.395605,-0.358938,-8.131176,-2.831655,-3.629958,-0.505175,0.647340,7.837598,6.962470,-9.981484,2.389562,5.141747,-6.947631,-5.630595,-6.316623,-5.146585,-1.575143,-1.496535,8.955538,3.051936,-2.553408,-3.608709,4.450345,7.764754,2.483257,-3.141482,-0.851558,-5.080152,-0.616576,-6.334936,8.764303,-0.082033,8.563838,-7.928221,1.056471,3.420330,-0.321643,0.267103,1.046850,-5.121127,2.072164,8.576471,-8.378906,-8.437669,1.631596,9.249950,6.815231,-0.469713,3.121063,-9.723028,-3.895287,-3.745481,7.147284,-9.003413,-0.582819,2.335390,-4.714207,8.650087,-9.305335,6.710235,-7.731613,-7.177916,4.480178,9.817855,-3.437073,6.726166,8.901900,5.466079,-6.561710,9.524410,-4.970615,-3.743908,2.297247,-0.622906,4.215005,8.286170,-6.848810,-0.426565,-7.333142,-8.518217,8.833224,-4.987137,-2.570350,2.267809,3.041938,8.188049,-7.888727,-6.821570,-8.591967,9.004469,9.082820,2.312684,0.055874,1.760765,7.378830,-2.637359,4.672632,6.764644,-5.703817,-8.021879,2.711879,3.244256,6.710000,-7.915478,-3.074576,-7.598389,-0.154993,-3.587454,6.614748,-8.127468,5.052173,9.275661,6.373785,-2.947534,5.724373,9.241231,9.359631,-9.903745,7.799971,-6.228879,7.935036,8.653230,-2.281848,8.122191,6.168654,4.159165,-7.094109,1.404159,5.650568,7.472617,1.621975,-7.578883,1.757240,3.145209,7.889421,5.169137,-9.320127,-9.860277,-0.667087,-9.857060,3.452060,-4.093806,-9.082772,5.569944,-6.855299,7.031209,-6.017834,-0.359935,-7.424243,-4.721567,7.990109,-5.724132,-1.500796,-5.595049,-7.203599,-6.116520,-0.484320,0.529102,-3.058149,4.466027,2.651157,-5.241915,-9.064140,-8.527298,7.928813,-0.390441,-4.363692,-6.906165,0.346339,5.062357,-9.606310,-6.268332,-6.366211,3.612585,-8.130860,5.435987,6.895626,4.007521,-0.353086,5.372550,-3.516812,-6.035077,-8.269930,0.983271,-2.101911,-0.010035,-6.539083,9.416527,-7.514252,-5.340059,6.949769,1.456249,3.891270,-9.575945,-5.049678,0.470353,7.606604,4.276619,5.935476,-3.625839,3.592712,-7.093862,4.937393,-4.926110,-0.141297,-7.956633,1.172828,0.375033,9.709026,-9.390671,4.928743,-0.144616,-6.031523,-1.641848,9.243072,5.765977,4.493599,-6.872819,1.523401,2.149339,2.090818,-6.357674,4.895741,-9.144881,5.785484,-8.521969,-8.340250,-4.127987,-1.836510,-5.865279,8.887367,-3.763176,0.575870,2.916496,4.149323,9.054734,-6.600164,0.115824,8.697006,-6.536890,5.846553,6.007589,-8.838701,-5.274689,-9.420100,-9.595282,-9.729385,6.576257,8.105020,-5.643701,5.843489,-4.115586,5.760611,4.043919,5.838916,-3.960034,-5.968815,-9.289563,6.484758,9.329174,-0.786352,6.272880,-7.330634,-5.981238,4.466696,-1.955418,-2.354244,-1.930629,3.848951,-6.164887,-7.679401,0.777311,-0.768060,9.047342,-5.345214,-5.925005,-7.220412,4.252056,-5.671922,-0.020309,-2.199087,-9.228089,8.160571,4.397125,-5.000471,8.639368,-7.762680,1.955169,4.583322,-6.255378,9.168388,-4.936999,-4.687570,-7.576310,9.236489,-7.057272,4.019374,6.546432,4.100241,4.501701,-0.758931,-8.767250,7.320585,-8.472064,-5.613228,-7.664266,6.339629,6.873635,-4.554390,-7.538168,0.240813,-6.263393,8.172001,5.647732,-5.558882,-3.591806,-3.318228,9.069890,-2.934821,-0.509956,-2.673428,-4.138138,8.435792,0.218989,1.577782,8.913104,-1.800852,2.273087,3.098796,-1.911111,-2.225580,4.175693,-8.331553,-7.066399,-5.540245,1.513414,-8.339012,-2.988648,-4.012070,1.478717,2.693283,-2.812365,-4.835542,1.370094,-1.415348,2.008089,-1.301348,4.022635,5.731402,2.824407,-9.410990,-4.562645,-7.971361,-1.292125,-3.393551,-7.035012,8.114587,4.085049,-9.154882,4.286686,5.622653,6.517306,0.994146,-2.931099,2.015730,-7.448688,-7.204022,-2.761612,5.160764,8.923246,-6.599006,6.329093,-3.541649,-4.324178,2.452775,-4.341127,-1.041500,-5.613514,-7.092416,0.899267,-4.096057,-2.066879,-0.323603,8.820360,2.660037,-4.322580,-6.544820,0.686807,-8.258497,-4.451034,-8.994178,-5.266361,-6.971143,-9.216432,9.043197,-9.142737,-0.378986,1.488667,1.041076,-4.980398,1.318007,9.288260,2.069062,3.473330,-8.190426,3.613431,-0.654409,8.585225,3.206577,6.987112,4.466367,-5.941618,-2.153279,4.463093,3.240963,8.008383,-8.727808,-5.555689,5.611366,1.132244,6.869193,-6.862253,7.739039,7.879712,-9.688186,4.004654,-9.727941,0.977164,9.738471,2.765432,-4.139253,-4.685224,6.779177,-4.293401,-7.199035,-6.764371,4.620163,7.451621], dtype = "float64")#candidate|6829|(1320,)|const|float64
call_6828 = relay.TupleGetItem(func_1662_call(relay.reshape(const_6829.astype('float64'), [15, 8, 11])), 0)
call_6830 = relay.TupleGetItem(func_1665_call(relay.reshape(const_6829.astype('float64'), [15, 8, 11])), 0)
output = relay.Tuple([call_6826,call_6828,const_6829,])
output2 = relay.Tuple([call_6827,call_6830,const_6829,])
func_6836 = relay.Function([], output)
mod['func_6836'] = func_6836
mod = relay.transform.InferType()(mod)
output = func_6836()
func_6837 = relay.Function([], output)
mutated_mod['func_6837'] = func_6837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6394_call = mod.get_global_var('func_6394')
func_6395_call = mutated_mod.get_global_var('func_6395')
call_6850 = relay.TupleGetItem(func_6394_call(), 0)
call_6851 = relay.TupleGetItem(func_6395_call(), 0)
output = call_6850
output2 = call_6851
func_6878 = relay.Function([], output)
mod['func_6878'] = func_6878
mod = relay.transform.InferType()(mod)
mutated_mod['func_6878'] = func_6878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6878_call = mutated_mod.get_global_var('func_6878')
call_6879 = func_6878_call()
output = call_6879
func_6880 = relay.Function([], output)
mutated_mod['func_6880'] = func_6880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5549_call = mod.get_global_var('func_5549')
func_5550_call = mutated_mod.get_global_var('func_5550')
call_6939 = relay.TupleGetItem(func_5549_call(), 0)
call_6940 = relay.TupleGetItem(func_5550_call(), 0)
output = relay.Tuple([call_6939,])
output2 = relay.Tuple([call_6940,])
func_6941 = relay.Function([], output)
mod['func_6941'] = func_6941
mod = relay.transform.InferType()(mod)
output = func_6941()
func_6942 = relay.Function([], output)
mutated_mod['func_6942'] = func_6942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5412_call = mod.get_global_var('func_5412')
func_5413_call = mutated_mod.get_global_var('func_5413')
call_6969 = relay.TupleGetItem(func_5412_call(), 0)
call_6970 = relay.TupleGetItem(func_5413_call(), 0)
func_643_call = mod.get_global_var('func_643')
func_646_call = mutated_mod.get_global_var('func_646')
var_6979 = relay.var("var_6979", dtype = "float64", shape = (160,))#candidate|6979|(160,)|var|float64
call_6978 = func_643_call(relay.reshape(var_6979.astype('float64'), [8, 2, 10]))
call_6980 = func_643_call(relay.reshape(var_6979.astype('float64'), [8, 2, 10]))
func_3548_call = mod.get_global_var('func_3548')
func_3552_call = mutated_mod.get_global_var('func_3552')
var_6984 = relay.var("var_6984", dtype = "float32", shape = ())#candidate|6984|()|var|float32
const_6985 = relay.const([-9.345113,7.350207,-5.189007,-8.660683,3.576266,-9.187278,-9.534983,-5.568805,-5.076125,-4.810420,-6.805712,1.348660,-6.699373,2.550915,7.983647,-7.579641,4.025103,-1.225933,-7.466378,-1.261724,-4.559045,4.250811,-8.775614,-6.607258,-5.827653,-3.044506,-0.286334,-9.587142,9.625196,-7.510924,-9.747716,-0.218161,1.309426,3.256735,1.642388,0.094420,-3.858092,3.025196,7.968162,-9.126010,-0.334077,-1.904754,-3.055651,1.972526,-2.938849,-7.735840,0.176562,-5.131928,6.871955,-3.201335,6.133148,-9.408597,4.062520,-0.424741,-8.345860,-3.923100,7.140939,9.730079,1.434283,6.539146,-5.331054,-4.881419,-9.326256,-6.808801,1.444467,5.501606,9.995345,-8.465512,5.521454,5.843827,0.021572,-6.269691,-5.304071,5.451720,7.936885,-5.270407,-2.894201,5.511687,7.166016,8.884429,-9.495557,-8.594400,-1.559009,-5.694871,9.896231,1.831334,0.783665,-3.313887,9.577479,9.490255,-6.072724,6.500417,6.051269,-3.870186,-7.942043,9.618181,-4.062815,-4.896792,-6.552977,-2.834076,-6.013803,4.830642,3.861753,-6.877559,6.217083,3.603394,3.353587,-2.419595,0.542790,3.897674,-0.746076,2.653347,-8.440546,-8.293087,-1.464243,5.379052,-3.431382,7.250159,-7.821758,0.455216,6.557743,8.643762,6.247879,6.319574,-2.775037,-0.504305,1.878415,0.281389,-9.898121,1.227047,-5.013268,6.402892,5.612435,5.119882,-8.177771,6.756861,7.917279,-4.167666,-7.779549,-5.984104,6.091840,-7.846082,-4.635528,-8.618725,3.473450,2.663227,-1.535724,-9.883531,7.859754,9.092498,-4.264563,-1.173634,-9.838629,-5.738595,-6.706557,2.353936,-2.038805,9.708908,-9.759394,0.048468,2.225246,7.242326,6.648479,6.574598,4.519681,6.006928,5.422467,-6.418988,-0.789054,-7.180645,7.546420,-2.150613,0.795453,-8.493156,-1.808535,2.032806,-5.364428,5.854960,6.737989,8.718661,-5.533779,-1.218000,-9.370361,6.353077,-2.746311,2.616224,8.240142,1.762357,8.938604,-1.027677,0.698040,3.192889,6.759979,3.637397,5.004480,4.566458,9.241826,3.969319,-5.467813,4.506152,4.378939,-1.686744,-7.829550,2.256240,0.431584,8.889842,-8.039420,2.226637,-0.821595,-8.481537,5.150522,8.699484,6.289716,-0.029049,5.137147,-5.049237,-5.871754,6.246642,-6.527718,6.120152,4.265479,-8.067522,9.256420,3.627412,4.443843,-9.453808,7.047732,2.157769,-0.203249,5.458873,3.674219,-1.786587,-9.364630,8.184435,7.815688,9.022349,2.945062,-8.833483,7.322048,-2.272479,2.089360,6.510273,-6.220648,7.695253,-7.355698,-3.823159,5.669544,9.586112,5.718495,-5.192419,0.574243,3.670218,-3.646090,-2.962061,3.723934,-5.973426,6.930645,9.553683,-5.350349,-1.262401,3.215424,7.369759,-2.705530,7.230474,8.106992,-7.876246,0.898041,8.212297,7.787156,1.318764,0.874208,0.988334,8.963975,-8.411647,6.912520,-5.354845,-9.689788,2.010382,-8.586094,-2.591643,4.429640,3.676443,-8.431305,-1.453705,-4.430204,-2.499581,5.141576,-4.378201,-5.188034,-4.572938,8.812669,1.144510,-9.122853,-6.483177,7.481257,-4.520840,4.527082,8.224908,7.403376,5.169117,8.714943,9.144662,5.468501,8.561876,-7.751332,-7.196985,-4.913564,8.621105,-5.391398,5.635487,-1.024122,-7.647640,0.642363,3.393281,4.503884,-8.889806,-5.809364,0.385220,9.297330,-6.098928,7.941082,-4.892366,-2.481118,-5.054441,6.279657,-5.893037,-1.853111,-6.640411,-6.790872,-9.521227,-8.071740,-5.228246,-6.289081,0.154152,-7.148708,1.451435,-5.382805,6.623985,-8.934866,0.339670,5.539311,7.997446,1.396984,-9.389246,-6.858961,3.365353,2.722112,0.736108,-3.180483,-0.462158,-3.321924,-0.687753,5.832136,1.886824,3.977142,0.353309,-2.674165,-7.358822,-7.160621,2.594303,1.932782,-5.344749,-5.103739,-6.224138,-4.104913,1.295438,8.366308,7.337744,1.059135,-3.722271,4.527167,-9.783773,-8.867007,4.298173,8.701797,9.228458,-1.212990,9.513466,-3.243766,0.587367,-7.999496,7.641413,-0.663158,-6.393314,-1.529422,-3.349583,8.582635,4.752727,-5.786278,-2.652291,-9.799488,-8.015124,8.219314,5.091308,-6.085123,-6.683045,-3.614859,-1.006849,-6.120012,-0.972185,0.623178,8.873493,2.609038,-0.523655,5.863521,8.934435,9.379124,-0.354434,-3.215494,-3.189633,-4.830547,7.702041,-7.551411,4.610727,6.485277,1.432118,0.910809,1.399406,-9.680468,-7.632983,-3.983208,0.535315,4.944254,6.091395,4.265927,-4.343964,-4.099296,-6.525815,6.327760,-4.703359,-2.340294,2.746195,-4.985782,-7.882394,1.315959,-0.229240,9.478248,7.485703,-8.610159,-2.172003,-2.664112,8.993828,-2.215606,8.596608,-9.809101,-5.452410,-0.221395,-5.900480,-7.665608,2.331982,2.376254,-8.878192,0.765456,4.921559,-4.967726,7.061199,4.614483,4.096805,8.555000,9.244574,-1.557467,-1.232575,-6.979845,0.657001,5.941629,-7.405176,1.630415,4.555184,-8.900202,-3.020772,-7.151765,9.252103,-4.209414,-2.482972,6.284946,4.997980,3.462411,-1.070269,-3.295138,5.824195,-1.386144,-8.453261,-8.720525,-1.642597,3.889785,1.335707,6.798764,9.171571,4.410522,1.843160,7.559594,4.894626,-0.620401,-7.026317,9.012809,-3.016059,4.133244,7.060389,6.558011,-6.621568,-8.162985,-6.159515,-1.334356,-7.126087,8.844173,8.416915,-2.224560,-4.703736,-6.616791,-4.482691,-0.875106,-4.418434,3.391492,7.257021,6.743721,3.958668,3.866195,2.385732,4.413379,2.957220,7.806693,-3.935052,6.293456,-6.083687,2.331946,-0.029536,-9.236730,-5.506457,-8.581337,-4.538051,6.724664,-9.258179,6.255889,0.617888,1.633700,-2.777823,7.784723,-8.332366,3.821481,-0.452340,0.978971,-3.059799,8.029418,-0.343918,-8.749953,-1.084240,-9.842388,-1.185057,-0.173314,0.775253,-2.315053,3.768285,-0.606741,9.104409,-7.016907,-3.970438,-8.807952,4.656689,0.598033,8.335760,-4.739727,-0.733719,-1.806861,3.414043,-2.906801,-0.983061,-4.421151,-4.807113,-5.491336,-5.134097,0.096174,-0.709138,8.520834,-2.039301,0.122995,-7.341921,2.907110,3.139864,7.254996,-2.195371,6.545371,-1.605110,-9.635756,-4.375174,-7.313951,-7.573853,7.955686,6.870565,-1.287840,-4.568694,-3.614832,-4.560679,7.668831,2.003962,-5.477101,-1.366839,0.516717,9.634814,8.467048,-4.092671,-1.078715,5.189915,3.327841,-5.921128,-0.972743,-2.080370,2.444907,-1.679628,-6.453986,5.228848,-8.088530,-2.329101,-4.603496,7.004904,1.073183,-8.248969,-8.295368,7.619016,-6.569815,-5.862662,-2.491891,2.521447,9.860393,-1.564022,-2.261685,-1.725026,2.169399,-0.815788,-0.517487,4.743609,2.848858,3.581926,-0.127503,4.798890,-6.315196,1.337520,-9.878095,-7.139964,4.777355,9.488163,-1.849208,-5.607221,-6.234477,9.881304,-9.716635,-1.589609,-2.369715,-0.197449,7.915758,-5.522686,5.096087,-9.661765,-1.465046,3.670137,-1.782157,6.856465,-4.669533,-2.203092,-6.266368,0.580003,4.829748,-5.588049,8.933336,-2.605743,4.063218,-5.349139,-1.304150,-2.131503,4.126765,-8.639568,1.635086,-7.682139,9.495502,-5.563956,-2.548268,0.391736,-5.934661,-7.543037,-1.720794,-4.187804,4.666317,-8.654001,0.948768,-0.102823,-5.727323,-4.411023,9.508531,6.680426,-7.279881,-2.743099,1.918828,-3.486871,-0.747564,9.368920,6.758981,-0.414277,-8.864463,-4.373688,7.558423,-5.101774,-7.701421,7.779869,6.626453,-9.079353,7.681833,-1.202910,-4.992219,-4.470765,5.042442,5.775265,0.367134,3.243792,-0.492619,4.933165,0.105614,4.350176,8.357298,7.543476,6.155939,-6.371523,-1.012152,6.306481,7.199981,5.321396,2.408567,1.525963,-1.439372,-4.380217,-4.864551,6.082719,5.462633,6.696929,6.224074,2.469145,8.180796,3.950697,5.285402,-6.798623,-5.782561,5.624008,3.922094,-4.137533,-9.542280,-5.615891,5.997392,-9.041932,0.638111,1.532594,-2.972171,4.498571,-2.315677,2.029072,-0.114631,-8.858767,-9.195205,-4.916437,-0.330863,8.731951,-7.103654,2.050227,8.187967,-2.254297,-7.704961,-3.103084,3.970834,-2.511030,-8.925329,7.513698,3.832821,-2.301559,0.982618,8.255366,7.974107,-2.402478,0.981196,2.476913,5.644232,2.480136,9.181949,-2.063356,0.488182,-7.856883,7.955581,-7.052613,7.720614,-4.095208,-0.385952,-0.833802,-1.819185,0.351130,5.466746,1.563957,-9.608037,-8.962749,-9.614633,-7.544619,6.318427,4.180519,-3.917637,3.898689,-3.002597,4.582824,-3.037533,4.553227,-3.879466,-9.094663,6.814361,0.870353,-1.631488,-8.669761,-7.297395,-5.941948,6.530820,-4.061706,-8.049946,-5.196831,3.449745,2.615350,9.117982,3.751667,8.083846,2.604740,2.184157,-0.497782,-1.677408,-8.220420,-3.993087,-3.912157,-6.994210,9.455825,9.634555,-5.575281,0.348076,-0.556094,-7.279744,2.821812,3.423883,-1.487113,9.905360,-5.997775,1.107679,-9.856299,0.953392,-9.471487,-8.250908,-8.690161,6.229662,-3.293072,-8.075308,2.639866,-8.173673,-4.967045,-6.902256,-9.103461,-1.113623,4.075782,0.879540,4.822928,9.202024,8.604891,8.592422,1.531731,-3.644958,-4.010842,-6.214667,1.111165,-1.478957,-2.770281,-1.137511,-0.102422,2.182656,7.439273,2.671433,7.365019,-2.523675,-2.595877,6.589625,-6.618818,-7.595449,-6.218553,-9.123783,0.571414,-0.288271,0.292567,3.001390,9.333173,-4.780799,2.451582,9.629100,-6.630412,5.647058,3.608936,-5.846467,-3.034662,-4.991446,8.232115,-1.957971,3.204955,-9.102372,-6.984085,-8.467965,-4.811058,-0.312562,5.740631,-7.396836,6.588831,-0.645716,-3.348858,-9.364846,7.286734,-1.322679,8.637053,-0.787230,0.786838,-0.553287,-6.647154,0.776978,2.539554,-7.625237,1.392910,-3.770123,5.919211,8.483987,3.427164,-5.536620,5.905890,9.668977,-9.323328,9.805863,-5.658440,5.255685,8.202617,7.812191,-4.591674,5.629506,-0.505215,-0.293775,-3.950875,-2.931874,6.939566,3.063573,7.541610,6.736699,-8.846656,7.943609,-4.823762,0.880170,0.652363,-9.122910,-3.441865,8.195050,3.720580,-6.199697,2.048066,6.887848,-4.144545,7.319804,7.419075,7.980895,-0.550981,-5.161618,0.919563,-7.294183,-6.524301,-7.546419,-9.487936,-4.036268,6.243346,1.810642,1.535782,6.953003,3.866817,0.743355,3.667409,-3.337763,6.994573,2.290865,-8.947769,5.309913,-1.586858,-2.660409,1.485914,7.844834,9.050466,3.853865,0.518639,-4.937328,-5.533697,-5.161233,-3.353983,4.621871,7.826536,-8.052248,-7.706250,3.431522,2.233732,1.360067,-3.617515,0.216597,4.517293,-3.183840,2.023846,-9.023754,-3.028147,-9.402346,1.561117,-3.593487,-6.788455,1.058156,-8.239001,5.347844,-6.332507,-2.326438,4.543561,-3.118218,-2.243272,-9.402759,-6.154355,4.801443,2.762449,4.089414,6.605157,2.274650,6.814982,-9.155239,9.394628,7.476470,-2.827589,-9.511347,-2.136624,9.407992,5.195176,-6.707230,-5.971700,-5.185817,9.792570,-4.351502,5.488366,-6.425414,-6.858396,-0.638758,8.887287,5.147071,0.597219,2.881992,4.874233,9.991229,-1.141510,-3.729124,4.523654,-0.679298,-2.109777,-2.991482,1.385326,-9.968018,9.104921,1.686189,5.961521,3.072889,5.533422,-0.277630,5.093572,6.344411,4.943189,-4.098583,1.892311,-1.147098,2.424673,1.831872,5.481973,2.599154,5.997478,2.061873,1.773350,4.885550,-7.148433,5.497989,0.256753,0.700382,-7.573223,-5.345437,2.317963,-5.228207,3.439051,4.002442,0.195623,3.707942,3.682461,9.432303,2.385703,6.592301,-1.983869,2.800896,-2.669098,7.103959,-6.207219,-8.007611,-8.268299,9.819266,-3.561366,-5.320792,9.182434,-7.559594,9.839096,5.313459,0.543004,-6.131455,-4.552560,0.602698,-0.787730,2.774613,-4.360911,-9.773178,-9.831119,-5.557476,-7.637229,4.220408,1.483039,6.801318,0.812208,4.165474,4.122014,9.753603,-7.765189,-0.169207,7.024076,3.166406,4.784620,-4.277176,8.197033,8.318381,6.577581,9.094436,-2.000694,0.931924,-4.247114,-2.213021,-1.078806,6.432000,5.882009,-8.959203,4.597287,-1.811788,0.338423,4.438618,-0.245460,8.580933,3.776478,-3.065493,8.253112,2.994610,-8.746403,9.859726,1.026282,4.608483,4.017283,2.648845,-3.241780,8.240307,-1.086656,-0.214319,5.787955,8.331056,6.930178,1.100960,9.319764,-1.383671,-0.190670,6.530313,-7.572288,-8.019198,-9.693781,-7.088597,-4.606043,-7.006833,-6.597420], dtype = "float32")#candidate|6985|(1176,)|const|float32
call_6983 = relay.TupleGetItem(func_3548_call(relay.reshape(var_6984.astype('float32'), []), relay.reshape(const_6985.astype('float32'), [6, 14, 14]), ), 2)
call_6986 = relay.TupleGetItem(func_3552_call(relay.reshape(var_6984.astype('float32'), []), relay.reshape(const_6985.astype('float32'), [6, 14, 14]), ), 2)
func_643_call = mod.get_global_var('func_643')
func_646_call = mutated_mod.get_global_var('func_646')
call_6989 = func_643_call(relay.reshape(var_6979.astype('float64'), [8, 2, 10]))
call_6990 = func_643_call(relay.reshape(var_6979.astype('float64'), [8, 2, 10]))
uop_6993 = relay.acos(call_6969.astype('float64')) # shape=(7, 9, 15)
uop_6995 = relay.acos(call_6970.astype('float64')) # shape=(7, 9, 15)
output = relay.Tuple([call_6978,var_6979,call_6983,var_6984,const_6985,call_6989,uop_6993,])
output2 = relay.Tuple([call_6980,var_6979,call_6986,var_6984,const_6985,call_6990,uop_6995,])
func_6997 = relay.Function([var_6979,var_6984,], output)
mod['func_6997'] = func_6997
mod = relay.transform.InferType()(mod)
var_6998 = relay.var("var_6998", dtype = "float64", shape = (160,))#candidate|6998|(160,)|var|float64
var_6999 = relay.var("var_6999", dtype = "float32", shape = ())#candidate|6999|()|var|float32
output = func_6997(var_6998,var_6999,)
func_7000 = relay.Function([var_6998,var_6999,], output)
mutated_mod['func_7000'] = func_7000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5340_call = mod.get_global_var('func_5340')
func_5342_call = mutated_mod.get_global_var('func_5342')
call_7005 = func_5340_call()
call_7006 = func_5340_call()
output = relay.Tuple([call_7005,])
output2 = relay.Tuple([call_7006,])
func_7008 = relay.Function([], output)
mod['func_7008'] = func_7008
mod = relay.transform.InferType()(mod)
mutated_mod['func_7008'] = func_7008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7008_call = mutated_mod.get_global_var('func_7008')
call_7009 = func_7008_call()
output = call_7009
func_7010 = relay.Function([], output)
mutated_mod['func_7010'] = func_7010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5921_call = mod.get_global_var('func_5921')
func_5923_call = mutated_mod.get_global_var('func_5923')
call_7011 = relay.TupleGetItem(func_5921_call(), 1)
call_7012 = relay.TupleGetItem(func_5923_call(), 1)
output = call_7011
output2 = call_7012
func_7021 = relay.Function([], output)
mod['func_7021'] = func_7021
mod = relay.transform.InferType()(mod)
output = func_7021()
func_7022 = relay.Function([], output)
mutated_mod['func_7022'] = func_7022
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7023 = relay.const([[[-2.361929,9.337963,7.548447,-9.941141,-0.358754,8.924037,-3.671780,5.361163,1.573362,5.040258],[4.323757,7.438271,7.588625,-2.488555,8.391523,-4.680478,-2.576923,-3.254452,-4.126682,2.882574],[4.722005,-3.865607,2.824162,-6.418812,-0.269784,3.138899,5.791815,6.802319,-5.453972,-1.080075],[3.427576,3.850747,-8.060112,-3.936769,1.668810,3.339377,-9.322299,-4.464523,5.755645,-0.140331],[8.544636,2.839327,4.413342,2.211237,1.959967,0.474544,-2.922817,-0.092615,-4.873904,-2.905963],[-6.801307,-1.776404,0.507296,-4.467650,0.352301,-0.758477,6.297342,-3.510591,-0.740840,-5.516141],[1.994536,1.349948,7.028932,8.531935,-9.991549,2.629989,2.382057,9.603701,-6.194142,-8.447506],[-0.923683,-9.129473,-4.951404,-1.140704,0.410332,-8.603462,-1.762969,-2.707763,-6.115174,-5.002610],[9.148506,1.435139,9.008470,0.145441,5.034329,-5.024113,5.270951,3.596700,3.269941,-2.658019],[-3.664030,6.272293,-9.097491,-5.399608,8.561762,7.287347,-9.290087,-8.221145,3.274958,-0.723115],[0.300738,2.279887,7.553590,-0.712789,-4.404465,0.311495,-0.943979,-9.578027,2.020707,7.889060],[5.120069,7.507443,8.576582,9.616752,-0.215500,2.903543,-4.178593,-0.674844,5.813600,-2.315637]],[[6.496690,9.018504,7.904110,6.318845,-8.863992,3.886552,6.641845,-3.785223,-9.593646,-1.755693],[2.567553,-9.080615,-7.499579,3.774925,-3.642232,3.072511,-4.117007,8.693401,-8.510729,-7.648221],[9.667769,-8.482930,-9.534315,9.964800,9.352925,6.688476,-0.844722,-4.787691,-7.398590,-1.222652],[-8.444014,5.023597,-7.765566,-5.737755,3.557322,-5.186486,-2.129555,4.497675,7.868490,-6.103388],[-0.533559,9.161624,7.177369,4.915716,6.750056,-9.397572,-6.019808,-5.718211,-0.859085,3.246462],[6.816416,-2.039459,8.682716,0.685110,6.841997,1.531672,0.319223,-7.820166,-6.269244,6.178007],[0.709033,3.879258,0.404665,0.678011,-6.779281,7.546693,-9.522382,-4.750918,7.844811,-6.134025],[7.182738,0.172143,-0.316294,0.857072,3.936017,-3.611241,3.589521,-7.828072,-1.852583,-6.113675],[6.929799,-8.331628,-8.487260,5.440119,-5.018830,-0.978355,7.444810,7.238518,4.921281,-9.959893],[3.528685,0.660550,9.729872,6.408159,6.292458,-4.986891,7.328604,-4.845183,2.214072,8.165664],[9.373533,3.512834,5.805297,-7.860218,-4.596063,-8.889656,-1.916017,-7.224473,1.229663,0.699487],[9.338824,4.742261,-0.362584,-8.640756,2.748230,-5.291710,4.627273,1.343740,-9.526213,7.966529]],[[5.698593,-1.972033,-4.484991,9.917132,-5.092355,-1.053946,-2.384507,-8.778970,-3.152558,0.526015],[-7.444242,-0.304992,7.758205,8.841564,-8.562934,-6.482256,-4.103368,4.770007,3.493889,-3.163625],[8.181507,-9.614694,9.473253,-8.253588,8.492939,0.106267,7.471478,-0.021820,-5.421362,-1.851112],[-4.904276,-0.297807,0.662391,9.179895,-4.645980,-8.807702,7.301587,1.421580,9.807427,-1.062980],[9.517095,9.798492,0.552066,-2.467753,3.516169,-2.878787,8.122393,-2.010931,-3.089887,-1.717632],[6.331828,-6.051041,3.549235,2.719456,-9.083622,5.118069,-5.063515,-7.397530,-3.120426,9.942758],[-4.451933,-5.755558,-3.938169,-2.723382,-9.424828,9.930476,-2.166031,-5.840622,9.023190,-5.545536],[3.261931,-7.890175,-6.150441,-0.278497,6.128218,-6.023127,9.976093,9.903246,9.182625,2.997811],[-4.713834,-4.481474,-6.213731,-9.804245,-2.001930,1.679933,0.879560,6.764981,5.257754,-0.608844],[8.721860,-1.859015,1.365819,-0.212220,6.848517,3.710892,-7.386344,-7.493365,-3.577891,7.598970],[-1.717170,5.386763,-8.668185,6.826062,-1.085503,-8.113854,4.156560,-3.656443,-3.910462,8.050009],[-1.343676,-5.512319,-5.570180,-1.712582,7.633734,-3.981282,-8.667035,2.305250,-0.889552,-2.095414]],[[8.478263,7.028741,6.504146,5.513902,-1.193060,-4.541414,5.594694,-9.382016,1.914823,1.813439],[-1.719299,-9.727154,0.651942,0.790153,4.852307,-8.654941,-7.265204,4.845041,2.872492,3.023997],[4.822756,2.891613,-5.491116,2.587465,-0.182411,3.084682,-7.498680,7.654975,7.617715,1.830016],[6.693829,1.924538,5.205480,6.235543,-4.867712,6.904800,-5.157133,-4.760943,-6.252007,4.489588],[-9.340290,1.402490,-9.827579,-3.260656,9.809947,-0.330092,3.642275,-8.648428,-4.395312,-5.140602],[-8.612417,3.414573,-4.584066,-0.327893,0.950166,0.585856,-0.357916,-9.207646,2.909827,-5.988503],[-9.715684,0.137438,1.955795,2.627418,-8.975188,-1.003391,8.375440,2.170487,2.542312,-8.907037],[3.431627,2.533941,-1.215626,9.827542,-1.239025,-0.044736,-2.734378,5.943362,8.083114,-6.213310],[-9.161155,-9.759244,-4.827131,4.543792,1.896119,-9.185747,9.300060,-6.962704,5.081478,9.795919],[-8.888143,-2.294629,-1.952061,-9.139534,-1.621963,3.183970,2.457271,-9.626624,7.285915,9.276152],[4.068420,-9.295144,0.627694,-9.831204,-6.640864,5.341473,1.978755,6.169902,1.915954,3.116822],[-6.026400,-9.529959,7.891832,8.648529,-2.843949,5.293314,-6.670540,-8.714058,1.191333,-4.251954]],[[-5.388025,-0.800630,-9.173776,6.666079,7.530468,9.596679,1.725484,6.946938,8.619179,-9.295096],[3.964226,6.642629,8.663933,-7.466163,1.289207,-1.870662,-7.540104,1.134444,-8.025093,-2.564396],[-2.494733,-3.457868,2.136078,-6.274381,-7.185378,-9.289648,-5.466795,-8.512155,9.828944,-8.352398],[2.455336,-5.082633,8.714068,-9.453527,6.060583,7.273481,9.521825,0.535415,4.704598,5.485697],[-8.078005,-8.250447,8.762816,-4.582401,7.241247,9.259361,9.392356,-2.171323,-0.910448,1.384640],[8.368949,4.571292,-2.078236,9.047148,-0.673081,1.222362,-4.289730,5.332623,-4.886797,-4.658248],[9.040138,4.447631,5.751275,8.897995,-2.461122,8.573748,-5.609555,-3.806938,-9.224217,-3.639407],[-4.126833,5.109370,0.634318,4.713454,0.891411,7.036049,5.692959,4.387789,-7.887149,-3.811687],[3.596224,-0.156240,-7.527198,-1.384333,-7.539086,4.287172,8.971667,2.341199,-2.518846,-5.658007],[-5.768323,-2.529877,-0.439813,1.427945,-4.628574,-0.524815,0.278150,4.251397,1.846299,-0.871179],[1.804215,5.223853,4.672052,0.156455,0.518537,9.499996,-5.083148,8.052845,4.816704,4.127275],[3.152433,-7.263114,7.462495,-7.163680,3.522280,-3.272843,4.875738,1.064356,9.251281,-4.116769]],[[2.893754,-8.653335,7.338545,-1.204827,-0.686155,-5.019515,5.126663,6.429902,9.124125,-9.125935],[-9.630440,8.021738,-3.434556,-5.732436,7.616522,-0.284323,-2.110928,-0.895599,-9.855929,3.977262],[2.048004,-8.593499,-3.390029,4.831615,-7.055358,-6.643865,-6.348702,-7.634320,9.814015,-6.542519],[1.900932,1.082276,-0.787719,9.050999,-8.031998,4.372626,-1.660621,2.742920,4.302374,-4.738077],[-9.771318,7.753394,-6.636913,9.429003,-8.313309,3.454039,-9.129473,-7.793987,-6.283861,7.583597],[-3.917425,-7.512026,6.068075,5.864981,-7.765329,-0.525740,-8.126357,-5.527427,6.737601,-5.171803],[6.623567,6.365711,-7.839603,-2.590996,8.098591,-5.050227,2.940115,-3.340901,-9.042197,6.332732],[-9.778649,1.522372,6.842106,1.531575,2.832194,2.992690,5.942867,-3.705179,-8.098511,0.369077],[-3.797570,7.781969,-6.881108,-5.050904,3.849353,-7.417227,3.585542,-0.825576,2.303133,7.981463],[-8.477311,7.723106,9.671799,9.210167,6.274963,6.920474,-0.950306,8.733719,7.888812,9.558440],[2.568557,-8.566160,7.161666,-7.422796,-6.803440,1.644570,-5.215376,4.280132,-1.694809,6.576099],[6.126839,-7.851840,5.911951,-9.054426,9.294911,0.506691,5.064282,-9.117091,-2.506780,6.513741]],[[-7.764650,3.106083,-5.824595,5.822288,-2.558901,-9.456643,1.074369,8.695669,-1.393785,2.706953],[-7.952503,-1.036536,-5.186653,-9.338473,2.917454,-8.402662,3.799018,-9.472489,-6.177440,-9.164273],[-8.442168,-9.753362,5.381292,-2.481124,6.799082,-5.614985,-1.426907,-0.633357,6.536220,-9.572720],[-2.751063,-0.977009,-9.864531,2.077784,-6.552446,2.150346,-5.587130,8.474632,-7.476797,0.484573],[4.139256,2.972587,3.055864,9.778522,-2.927279,7.526039,-5.178921,-5.607926,9.356183,1.608464],[-8.441392,-1.446191,-2.700022,-0.103440,-4.444532,-4.708547,6.640650,4.673780,9.658200,8.509948],[-1.921315,5.244111,3.150282,-3.154302,6.105792,-0.846139,-7.884573,2.223607,-1.368504,6.433512],[2.303539,7.684055,3.135653,3.826089,1.450057,9.110319,-7.556075,-9.546234,-6.094747,-0.432390],[-3.205089,0.709070,4.757992,7.670040,7.208743,-8.397025,-2.981852,3.071280,7.410525,2.637765],[-6.966174,-5.416795,7.577461,-6.742590,8.280893,4.335863,3.133595,6.693778,7.013953,2.533414],[3.143005,-3.770723,9.999949,-2.436666,-0.852161,6.664505,-7.177342,5.021511,-4.997943,6.796651],[-7.806133,0.270107,-5.683797,1.373794,6.767911,-0.671049,-8.807758,-8.956966,-2.855860,-6.883759]]], dtype = "float64")#candidate|7023|(7, 12, 10)|const|float64
uop_7024 = relay.asin(const_7023.astype('float64')) # shape=(7, 12, 10)
bop_7036 = relay.mod(const_7023.astype('float64'), relay.reshape(uop_7024.astype('float64'), relay.shape_of(const_7023))) # shape=(7, 12, 10)
func_171_call = mod.get_global_var('func_171')
func_173_call = mutated_mod.get_global_var('func_173')
const_7051 = relay.const([-4.388043,9.712477,6.422839,-3.719451,-1.971363,-3.495288,5.133666,3.225828,9.673492,7.647188,2.714413,3.604237,-5.431916,-0.053142,0.170166,-5.794743,0.427990,-1.869406,6.311741,-5.834715,8.735754,3.982376,-0.816225,-8.501770,3.765774,-2.972736,2.603068,7.204480,-2.679536,9.184296,3.500738,-7.998888,8.343937,9.134095,2.726967,-7.495132,3.522135,7.490860,9.191189,8.141948,2.763584,4.600718,7.109814,5.635333,-7.964428,-0.787179,-8.682088,8.295253,0.845559,-4.539610,-3.486699,-4.587136,-6.802927,8.284783,4.882258,-7.513410,6.425468,-4.864530,-5.633889,-6.106738,-2.737774,-4.063444,4.229000,6.367987,3.729916,7.275615,-5.455321,7.326904,5.467483,-3.994860,6.317215,-4.676394,1.839916,-5.837070,-9.799145,-5.738131,0.496111,1.200234,-9.448737,6.675759,-4.535415,4.748079,-8.172590,2.968472,-2.687570,1.705428,7.138428,-9.884238,-0.494719,-3.631667,8.566745,7.529298,-7.869498,-8.704147,4.460018,-0.959492,-3.552983,4.393959,-9.963722,3.088301,-8.918648,-0.988326,-0.672745,-9.003180,2.478162,8.550546,-5.818435,7.272412,4.160518,9.307014,-3.073836,-3.628408,-0.935725,1.820819,-4.435105,1.501307,1.003320,-0.797008,-7.418984,-3.863484,-9.750096,-3.313592,0.511374,8.859950,8.295868,5.689766,-7.892185,1.635138,8.590694,6.229967,0.785500,8.246176,-1.285657,-0.365907,-4.455295,8.835397,-1.904307,4.844787,2.676089,-7.261352,-0.074146,-8.265512,3.725093,2.975003,5.498392,-7.050516,8.755054,4.289102,-9.860116,-9.471199,2.717743,0.603576,4.681892,8.831766,0.410133,-0.332380,4.728420,-9.169929,-6.033036,-1.190866,-0.473791,-7.750214,-1.277976,2.898422,0.606850,1.174741,3.473231,-6.676592,-1.159674,-1.840433,7.134843,7.017018,0.836300,5.353282,8.464400,5.529792,-6.501755,4.111208,-1.664249,4.380646,-2.195013,-0.621162,1.293581,-7.774802,-2.382008,0.757196,0.016195,-4.348885,-3.512833,-8.166865,0.608343,6.401333,5.511752,-3.950735,-6.783476,7.586827,4.540944,-3.725851,-3.438720,-6.504770,9.589386,-8.750780,-6.051135,-1.398834,-4.326122,-8.310458,-9.887573,-0.712188,-2.916302,5.337127,-4.480918,6.752270,-7.992921,9.190954,-7.828088,7.502039,9.123413,7.856159,8.099741,4.299649,-7.430313,3.845680,5.095000,5.645381,6.848977,-2.204884,9.138397,7.174509,-3.277339,7.509106,-5.729532,-2.130981,-0.332677,6.731917,0.007656,-5.054249,-6.596265,2.741267,4.004335,5.320839,1.206586,-7.864080,6.968194,7.971115,-5.641294,-2.315642,6.399787,3.861491,-0.665941,9.324744,4.009785,-3.298001,-5.739201,7.299156,-5.859753,-0.272045,9.984680,-1.395744,-4.663810,-5.314713,-4.287424,1.048829,4.199178,-0.645996,9.609736,-0.622984,6.961754,-1.673383,-5.337189,1.033219,-8.583848,-4.774592,-2.321575,-4.909821,-5.436564,-6.712907,9.193494,0.421112,-5.842545,8.522659,8.584729,-1.876837,-5.612745,-9.461885,-2.877089,3.608354,3.511287,-7.769638,-9.279593,-8.253129,3.652482,-8.812991,-0.531196,-0.912666,6.265262,-1.703344,6.703220,6.866494,9.218489,-9.442634,7.794544,-1.688012,7.656537,-9.940574,2.601438,9.309257,8.690059,-9.848822,0.003026,-5.654281,-6.262712,4.202014,9.303974,4.515882,5.972741,0.929837,5.082342,9.714245,-6.406564,-1.123767,0.424659,5.617600,9.894344,-8.170829,-9.099801,3.427136,-1.773747,-8.369080,7.016039,-6.514245,3.924805,3.288940,-7.391905,8.621052,3.005122,-6.726330,4.165834,4.501737,6.379748,5.814481,8.281230,-5.977160,-1.732720,5.416672,-9.692194,-0.599002,3.157940,-3.777419,-5.932196,0.197382,-2.459959,-9.427873,2.152794,-7.366734,-5.572459,-4.987520,5.029124,3.982100,8.814128,3.794361,-6.990008,0.873238,-3.659961,4.946390,4.080308,-8.921663,7.787979,-1.722225,-5.680685,9.092749,-2.572894,-6.494591,3.743134,0.819710,9.085406,-4.227090,-8.547264,0.783482,-6.327838,-6.097807,4.894064,2.269310,7.424514,6.549302,-7.897612,-2.229516,-6.024227,-5.059617,-1.386762,-3.886802,7.932464,-1.198535,-1.347038,-7.967240,-2.409529,1.270923,2.416946,-2.801307,-7.985944,-1.942114,2.924773,6.561115,-6.248446,9.579406,-9.674064,-0.694697,-8.691708,5.042619,-9.057090,6.564019,-8.445563,7.051972,4.587282,0.433211,7.481968,7.369824,-0.307127,7.017751,-2.250295,-4.108812,-3.051083,-0.750077,4.266455,-6.023062,6.550641,-0.018663,-1.931288,9.298353,-7.788311,6.306570,7.240917,-1.026765,5.600836,-6.242268,-4.501953,-4.266639,5.568713,0.267493,7.553488,-9.097731,-3.601903,-2.409573,-0.634886,-1.973365,-7.659077,4.914811,-6.169597,-0.821696,8.706456,-3.228678,6.091431,-2.884181,1.536556,6.362427,2.140243,-8.619823,-3.089546,-3.004559,-7.691060,0.724514,-7.666452,-5.015872,-4.310372,7.683202,9.116626,4.742748,-7.191959,2.424171,-5.439485,-8.353053,9.567690,0.331285,-7.235242,-5.217634,-9.582225,5.476703,-6.222183,-5.133288,-4.065597,-0.574865,8.296594,-1.578146,-4.220866,4.479103,-8.796527,-0.780341,-2.751294,-5.310869,-3.248589,-4.657638,-1.877412,9.322162,4.018108,-7.352063,1.859233,-3.175096,-5.014060,9.372517,-9.308282,3.853817,-6.875452,-4.595963,3.893934,4.367268,-2.196454,8.488638,-6.827928,0.825191,-2.842377,7.959168,6.161784,-9.501538,5.777736,-5.642957,-2.194151,-6.686351,9.716289,-5.339754,6.118963,-5.977769,5.612466,5.385049,8.466209,7.604218,-2.552157,1.701730,-6.300145,2.741898,3.949576,-0.037128,-4.899570,8.656717,2.792815,-7.302472,8.699128,-9.529618,-0.597514,-2.043424,9.667094,4.858249,6.102786,9.599588,-2.553864,9.698750,-5.779051,-3.822558,-6.996342,-2.462500,3.242758,3.765691,-7.999332,3.338002,6.451981,-5.808285,3.404161,-0.913696,-6.446710,5.724386,-6.957873,7.829330,-6.732404,9.001787,3.632499,-6.556070,0.989179,2.455191,-5.145989,-8.680072,8.508263,-7.992244,5.559882,0.984521,-1.733735,-7.839458,2.531650,2.549907,7.485393,-1.644700,-8.241834,8.201380,-3.513503,9.951493,6.091960,-3.514691,-3.325059,-3.036483,3.660104,-8.502218,-1.111832,2.523224,-1.667745,1.873852,1.133363,-1.864212,-3.205125,5.307947,-3.136137,1.536230,2.352474,-0.970429,-0.502469,5.272195,-9.503217,9.717427,-5.959794,-8.004274,6.956357,6.185179,-0.394887,3.574106,6.824737,2.617267,2.513192,-6.880494,1.786573,8.924071,7.773500,6.704350,-4.796487,-7.899277,0.854033,5.896209,-5.622156,-1.311171,-2.417936,2.585722,-1.933726,0.675473,-9.357291,-5.469655,3.184107,3.232664,-1.303547,-5.069166,-1.138095,-7.835049,-7.247327,-7.097225,-5.375491,7.867653,-3.333177,-8.797064,4.940456,1.237109,7.827360,7.182299,5.001572,8.334761,-1.911118,-4.326258,-8.498004,-9.271581,-9.643082,5.483808,2.813313,9.835826,-5.664414,6.090719,3.915710,2.699504,-9.975161,6.800928,0.204339,-0.767518,8.875432,-8.711135,6.886122,-8.033366,-1.250320,-3.459552,-2.506794,8.759505,0.388308,-7.352108,9.361481,-2.932140,9.340784,0.769674,-0.188133,-9.477192,-8.734402,-0.302505,5.973271,7.418063,-8.214671,-3.665635,1.068855,0.066774,-2.709200,-3.700541,9.664123,5.099325,-1.304155,-9.310921,-0.146988,-4.442745,9.175414,-6.397545,2.694989,-1.845744,8.897173,-2.714873,8.964983,-7.140624,-8.182805,0.627243,2.308824,-3.857508,-4.504024,-5.885193,1.323520,7.769086,2.130933,4.926194,-4.738793,6.244642,-6.201828,-8.421515,6.353083,6.137721,3.082514,-2.690367,-2.514955,6.151517,0.546354,6.263170,-0.789791,2.037096,4.296367,7.071160,8.017282,9.915710,-0.679147,3.990915,-4.495565,2.614358,6.278306,-5.874114,-4.904384,-3.983387,-2.039223,-0.409241,9.807543,-6.553130,6.989361,-4.995878,-8.291373,-9.196783,1.980451,2.605972,4.358142,-8.483718,-5.518072,-1.454344,-3.750070,-9.665881,-9.433974,0.054289,-2.186792,-6.579150,3.562028,-9.529255,0.752056,8.005640,-0.966149,-9.413267,6.756052,1.431074,-9.913395,0.459915,-2.731624,4.967836,-4.264187,-8.684126,-2.051863,-1.830153,7.198661,-4.363686,-6.893030,-3.781091,-4.356711,-3.900343,3.710772,2.339214,2.355631,-8.230128,-7.862496,-3.078835,-2.432703,3.490477,-3.457034,4.168607,6.589159,-4.127494,0.952239,-7.156981,8.673600,9.214884,-3.231422,-1.797244,5.796597,-6.387837,-2.594098,1.242576,8.819513,-3.048490,-7.178557,-7.638881,7.419719,9.319936,6.724727,-7.471855,-3.847702,3.380238,-7.600221,-2.658495,-7.939489,1.556296,-9.102829,3.686388,0.873256,1.209645,3.458680,1.310244,-5.636103,8.533288,5.288811,-6.457107,-4.189840,-5.099527,-3.237000,-2.506282,8.900444,8.116743,-2.334110,-0.438427,-5.454476,-6.648192,6.726935,-5.375404,-3.345464,5.780824,4.939667,-9.803772,2.223623,-6.507989,9.846759,-3.971935,-5.153247,-5.184749,-4.417893,7.041663,-8.878488,0.569193,0.280583,5.675480,4.037800,4.968974,1.535467,-8.344673,0.232053,-6.742741,-0.024849,4.390364,-2.706569,9.179621,-1.637991,-7.389753,-0.871618,-3.141730,5.612613,-4.679823,-2.962761,-1.553647,7.461251,-5.222721,4.657395,5.499950,7.506700,3.783282,1.775712,9.828072,5.836266,-6.328227,6.249940,1.396738,6.611699,9.965545,-6.633719,3.518362,2.324127,-3.060984,-0.608155,-5.443788,-6.167791,2.507447,-9.191478,-0.887979,-5.537714,-6.302499,9.862405,1.472254,3.928932,0.477282,-0.796822,6.373993,-5.454940,-1.075412,7.776829,6.875651,-2.422384,3.263459,0.355357,-7.390645,4.845281,4.952951,9.889514,9.401885,0.004050,-0.974183,0.189393,5.748718,1.960332,-5.209419,-6.842442,-1.337483,-2.820434,-7.485839,3.365783,-3.615670,3.221323,-4.272666,-9.871346,5.928324,-7.139092,1.483192,6.226360,3.694284,-5.252996,4.184899,7.143833,-1.902843,-1.642132,9.398726,5.552059,-7.521919,4.591475,2.735328,-9.721086,-8.244676,-8.695040,-1.094548,-3.937516,-6.119507,9.266349,-7.502383,-2.894192,-4.773951,8.616682,-1.584016], dtype = "float32")#candidate|7051|(960,)|const|float32
call_7050 = relay.TupleGetItem(func_171_call(relay.reshape(const_7051.astype('float32'), [15, 16, 4])), 0)
call_7052 = relay.TupleGetItem(func_173_call(relay.reshape(const_7051.astype('float32'), [15, 16, 4])), 0)
output = relay.Tuple([bop_7036,call_7050,const_7051,])
output2 = relay.Tuple([bop_7036,call_7052,const_7051,])
func_7055 = relay.Function([], output)
mod['func_7055'] = func_7055
mod = relay.transform.InferType()(mod)
mutated_mod['func_7055'] = func_7055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7055_call = mutated_mod.get_global_var('func_7055')
call_7056 = func_7055_call()
output = call_7056
func_7057 = relay.Function([], output)
mutated_mod['func_7057'] = func_7057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5340_call = mod.get_global_var('func_5340')
func_5342_call = mutated_mod.get_global_var('func_5342')
call_7069 = func_5340_call()
call_7070 = func_5340_call()
output = relay.Tuple([call_7069,])
output2 = relay.Tuple([call_7070,])
func_7073 = relay.Function([], output)
mod['func_7073'] = func_7073
mod = relay.transform.InferType()(mod)
output = func_7073()
func_7074 = relay.Function([], output)
mutated_mod['func_7074'] = func_7074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5847_call = mod.get_global_var('func_5847')
func_5849_call = mutated_mod.get_global_var('func_5849')
call_7105 = func_5847_call()
call_7106 = func_5847_call()
output = call_7105
output2 = call_7106
func_7124 = relay.Function([], output)
mod['func_7124'] = func_7124
mod = relay.transform.InferType()(mod)
mutated_mod['func_7124'] = func_7124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7124_call = mutated_mod.get_global_var('func_7124')
call_7125 = func_7124_call()
output = call_7125
func_7126 = relay.Function([], output)
mutated_mod['func_7126'] = func_7126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5847_call = mod.get_global_var('func_5847')
func_5849_call = mutated_mod.get_global_var('func_5849')
call_7130 = func_5847_call()
call_7131 = func_5847_call()
var_7140 = relay.var("var_7140", dtype = "float32", shape = (15, 16, 4))#candidate|7140|(15, 16, 4)|var|float32
bop_7141 = relay.maximum(call_7130.astype('int32'), relay.reshape(var_7140.astype('int32'), relay.shape_of(call_7130))) # shape=(15, 16, 4)
bop_7144 = relay.maximum(call_7131.astype('int32'), relay.reshape(var_7140.astype('int32'), relay.shape_of(call_7131))) # shape=(15, 16, 4)
func_3270_call = mod.get_global_var('func_3270')
func_3272_call = mutated_mod.get_global_var('func_3272')
var_7154 = relay.var("var_7154", dtype = "float64", shape = (832,))#candidate|7154|(832,)|var|float64
call_7153 = relay.TupleGetItem(func_3270_call(relay.reshape(var_7154.astype('float64'), [8, 13, 8])), 0)
call_7155 = relay.TupleGetItem(func_3272_call(relay.reshape(var_7154.astype('float64'), [8, 13, 8])), 0)
uop_7157 = relay.asinh(var_7154.astype('float32')) # shape=(832,)
output = relay.Tuple([bop_7141,call_7153,uop_7157,])
output2 = relay.Tuple([bop_7144,call_7155,uop_7157,])
func_7159 = relay.Function([var_7140,var_7154,], output)
mod['func_7159'] = func_7159
mod = relay.transform.InferType()(mod)
var_7160 = relay.var("var_7160", dtype = "float32", shape = (15, 16, 4))#candidate|7160|(15, 16, 4)|var|float32
var_7161 = relay.var("var_7161", dtype = "float64", shape = (832,))#candidate|7161|(832,)|var|float64
output = func_7159(var_7160,var_7161,)
func_7162 = relay.Function([var_7160,var_7161,], output)
mutated_mod['func_7162'] = func_7162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7008_call = mod.get_global_var('func_7008')
func_7010_call = mutated_mod.get_global_var('func_7010')
call_7188 = relay.TupleGetItem(func_7008_call(), 0)
call_7189 = relay.TupleGetItem(func_7010_call(), 0)
output = relay.Tuple([call_7188,])
output2 = relay.Tuple([call_7189,])
func_7193 = relay.Function([], output)
mod['func_7193'] = func_7193
mod = relay.transform.InferType()(mod)
output = func_7193()
func_7194 = relay.Function([], output)
mutated_mod['func_7194'] = func_7194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5577_call = mod.get_global_var('func_5577')
func_5578_call = mutated_mod.get_global_var('func_5578')
call_7208 = relay.TupleGetItem(func_5577_call(), 0)
call_7209 = relay.TupleGetItem(func_5578_call(), 0)
func_5847_call = mod.get_global_var('func_5847')
func_5849_call = mutated_mod.get_global_var('func_5849')
call_7223 = func_5847_call()
call_7224 = func_5847_call()
func_6304_call = mod.get_global_var('func_6304')
func_6306_call = mutated_mod.get_global_var('func_6306')
call_7225 = relay.TupleGetItem(func_6304_call(), 1)
call_7226 = relay.TupleGetItem(func_6306_call(), 1)
uop_7227 = relay.asinh(call_7225.astype('float64')) # shape=(15, 16, 4)
uop_7229 = relay.asinh(call_7226.astype('float64')) # shape=(15, 16, 4)
func_2914_call = mod.get_global_var('func_2914')
func_2919_call = mutated_mod.get_global_var('func_2919')
const_7232 = relay.const([False,False,True,True,True,True,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,True,True,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,False,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,False,False,True,False,True,True,False,False,True,True,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,False,False,True,False,True,True,False,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,False,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,False,True,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,False,True,True,False,True,True,True,False,False,True,True,True,False,False,True,True,True,True,True,False,True,False,False,False,True,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,True,True,True,True,False], dtype = "bool")#candidate|7232|(728,)|const|bool
const_7233 = relay.const([-5,-9,1,1,-5,10,8,4,-8,-7,-6,-3,-8,-10,-7,5,1,9,8,-10,5,-6,5,-2,-9,-5,4,3,2,-4,-6,3,7,-3,-1,9,-2,-9,-6,-4,-2,10,-9,-9,-6,-2,-5,2,-6,-6,-8,3,1,1,-2,2,5,9,7,-5,-4,7,-1,-1,4,5,6,3,7,5,-8,3,-9,7,4,-10,8,-8,-6,9,-10,-3,-10,2,-10,-9,3,4,-8,-9,3,-1,-7,-2,-9,3,3,4,4,-3,4,-5,-7,1,9,8,-9,3,-7,9,5,-5,-1,4,-6,10,-2,-7,5,2,7,-6,-8,-4,-3,3,8,8,7,-3,-2,5,1,3,-9,1,-5,-4,-5,10,-3,8,10,-9,10,2,-8,-6,-8,-4,-3,2,-2,-3,-7,7,-7,-1,10,6,3,-4,6,9,-8,-10,10,1,10,-10,-8,-7,1,3,-8,-5,-10,4,-6,9,-8,5,5,-3,-1,-4,-2,-5,6,6,9,-7,-10,-5,3,-2,-7,10,-4,-8,6,3,10,-10,-8,-4,-10,5,9,-6,-6,-3,5,6,6,2,4,9,5,-4,-8,7,-7,-7,4,9,2,-6,7,6,-4,5,-6,-3,6,2,-4,-1,3,9,9,-1,10,-8,7,-2,2,8,4,9,-9,-1,1,-5,-7,-6,-10,9,-4,1,-9,-6,-10,1,8,-1,2,-9,5,-7,-8,-3,2,2,-7,9,4,8,-2,8,-10,6,-5,3,10,-4,-5,-7,-9,2,2,3,-9,-1,-2,10,2,-4,-10,8,-8,-6,-1,1,4,7,7,5,3,-8,7,-8,3,-7,-8,-2,-9,-1,-3,-2,6,-6,-9,2,7,8,-9,4,-6,-4,7,-1,4,9,-2,6,-10,2,3,3,3,5,-6,3,-1,-8,-3,-7,1,-6,-6,-3], dtype = "int64")#candidate|7233|(352,)|const|int64
call_7231 = relay.TupleGetItem(func_2914_call(relay.reshape(const_7232.astype('bool'), [14, 13, 4]), relay.reshape(const_7232.astype('bool'), [14, 13, 4]), relay.reshape(uop_7227.astype('float32'), [120, 8]), relay.reshape(const_7233.astype('int64'), [2, 176]), ), 2)
call_7234 = relay.TupleGetItem(func_2919_call(relay.reshape(const_7232.astype('bool'), [14, 13, 4]), relay.reshape(const_7232.astype('bool'), [14, 13, 4]), relay.reshape(uop_7227.astype('float32'), [120, 8]), relay.reshape(const_7233.astype('int64'), [2, 176]), ), 2)
func_4949_call = mod.get_global_var('func_4949')
func_4952_call = mutated_mod.get_global_var('func_4952')
var_7249 = relay.var("var_7249", dtype = "float32", shape = (600,))#candidate|7249|(600,)|var|float32
call_7248 = relay.TupleGetItem(func_4949_call(relay.reshape(var_7249.astype('float32'), [4, 15, 10])), 10)
call_7250 = relay.TupleGetItem(func_4952_call(relay.reshape(var_7249.astype('float32'), [4, 15, 10])), 10)
bop_7252 = relay.equal(call_7223.astype('bool'), relay.reshape(call_7225.astype('bool'), relay.shape_of(call_7223))) # shape=(15, 16, 4)
bop_7255 = relay.equal(call_7224.astype('bool'), relay.reshape(call_7226.astype('bool'), relay.shape_of(call_7224))) # shape=(15, 16, 4)
func_3677_call = mod.get_global_var('func_3677')
func_3680_call = mutated_mod.get_global_var('func_3680')
const_7257 = relay.const([[-4.843955,0.699298,6.836038,0.383210,6.258186,2.926600,-7.333877,8.754970,6.083401,6.200141,7.369525,-9.474087,3.499447,-5.352566,0.309860,5.741302,6.953709,-0.458302,4.487108,2.687821],[0.861462,-2.653166,-9.458802,8.879185,-6.891520,-5.612763,-2.794722,0.343146,-0.090709,9.975001,-9.139417,-9.476490,-0.116213,-0.086685,-7.339576,-3.444989,-9.923700,3.712686,-8.451060,7.598712],[8.735848,-0.037034,-0.946177,0.176245,1.636713,-0.846240,-1.828744,9.295779,8.066079,-7.129150,4.198971,6.523900,8.776049,8.526875,1.092094,3.598828,-1.948514,-5.002596,5.787293,4.561844],[5.176672,-4.410670,-4.878047,-0.672552,-9.582836,5.391979,5.882982,9.879999,-4.814869,-2.051910,2.472240,-2.444287,-1.760304,-3.638461,0.303804,-6.366340,-7.441845,-6.340304,4.136184,-4.789478],[4.585775,8.177366,1.103498,8.149259,2.866493,2.295775,1.418139,-3.176961,8.950203,-8.968130,8.897501,2.826271,3.054498,-9.675122,-7.857938,-0.563442,7.832536,-3.941826,1.762429,-0.620852],[2.561297,1.847857,9.084581,-9.998364,2.799706,8.193010,-5.742964,-1.549809,-2.958198,-5.716082,7.276471,-8.309344,-3.320356,7.452684,1.628620,6.041423,-6.424821,4.899301,-2.557967,-1.173711]], dtype = "float64")#candidate|7257|(6, 20)|const|float64
var_7258 = relay.var("var_7258", dtype = "bool", shape = (336,))#candidate|7258|(336,)|var|bool
call_7256 = relay.TupleGetItem(func_3677_call(relay.reshape(const_7257.astype('float64'), [1, 8, 15]), relay.reshape(var_7258.astype('bool'), [168, 2]), ), 3)
call_7259 = relay.TupleGetItem(func_3680_call(relay.reshape(const_7257.astype('float64'), [1, 8, 15]), relay.reshape(var_7258.astype('bool'), [168, 2]), ), 3)
output = relay.Tuple([call_7208,uop_7227,call_7231,const_7232,const_7233,call_7248,var_7249,bop_7252,call_7256,const_7257,var_7258,])
output2 = relay.Tuple([call_7209,uop_7229,call_7234,const_7232,const_7233,call_7250,var_7249,bop_7255,call_7259,const_7257,var_7258,])
func_7270 = relay.Function([var_7249,var_7258,], output)
mod['func_7270'] = func_7270
mod = relay.transform.InferType()(mod)
var_7271 = relay.var("var_7271", dtype = "float32", shape = (600,))#candidate|7271|(600,)|var|float32
var_7272 = relay.var("var_7272", dtype = "bool", shape = (336,))#candidate|7272|(336,)|var|bool
output = func_7270(var_7271,var_7272,)
func_7273 = relay.Function([var_7271,var_7272,], output)
mutated_mod['func_7273'] = func_7273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7008_call = mod.get_global_var('func_7008')
func_7010_call = mutated_mod.get_global_var('func_7010')
call_7330 = relay.TupleGetItem(func_7008_call(), 0)
call_7331 = relay.TupleGetItem(func_7010_call(), 0)
output = call_7330
output2 = call_7331
func_7339 = relay.Function([], output)
mod['func_7339'] = func_7339
mod = relay.transform.InferType()(mod)
output = func_7339()
func_7340 = relay.Function([], output)
mutated_mod['func_7340'] = func_7340
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7354 = relay.var("var_7354", dtype = "bool", shape = (6, 5, 12))#candidate|7354|(6, 5, 12)|var|bool
var_7355 = relay.var("var_7355", dtype = "bool", shape = (6, 5, 12))#candidate|7355|(6, 5, 12)|var|bool
bop_7356 = relay.logical_or(var_7354.astype('bool'), relay.reshape(var_7355.astype('bool'), relay.shape_of(var_7354))) # shape=(6, 5, 12)
func_6234_call = mod.get_global_var('func_6234')
func_6235_call = mutated_mod.get_global_var('func_6235')
call_7359 = func_6234_call()
call_7360 = func_6234_call()
func_5638_call = mod.get_global_var('func_5638')
func_5642_call = mutated_mod.get_global_var('func_5642')
const_7376 = relay.const([-10,-8,4,-5,-4,3,7,2,-2,1,5,-2,9,-9,-4,7,-1,-4,-9,-3,1,-8,1,8,-8,-3,-10,9,4,6,10,-3,-2,-5,-4,-3,-4,3,2,1,2,-2,-10,2,9,-3,5,10,-2,6,3,1,2,-3,7,4,-7,-4,7,4,-5,-3,-2,8,7,-10,-3,6,-8,10,2,-7,-10,7,-8,-1,7,-3,-6,2,5,4,6,-5,-8,10,-9,-8,-9,-6,3,9,-3,10,5,3,-6,8,-6,6,8,-3,-2,-7,5,5,-1,9,-9,3,2,4,2,10,6,3,2,2,6,-5,1,8,-6,-5,-5,9,-4,-5,-4,6,3,-6,5,10,-7,10,-7,-1,-7,-10,-3,-2,-1,-5,4,-6,1,3,-10,-5,10,-5,6,-1,-2,-5,-9,4,-4,8,-10,-6,-6,9,5,-3,1,-1,-3,10,-3,-10,4,6,-3,-7,-9,-6,-5,1,8,5,1,8,10,7,5,-8,1,8,-6,-9,-9,10,-9,-3,4,-6,-6,6,4,-9,-3,7,-1,-10,-9,4,1,3,-4,6,-6,10,9,-8,-1,2,-4,-10,6,-3,-6,-5,10,8,4,-1,-10,-2,1,2,7,-8,4,5,7,-5,5,-3,-7,1,6,-2,5,5,-4,-7,-4,-1,2,-8,-5,1,4,9,4,-1,-1,9,6,3,-5,-10,-5,7,8,4,2,-7,1,8,-3,-6,-1,-2,10,-7,-6,-2,-8,8,-6,-1,-10,-3,-2,6,9,2,8,-10,-1,-1,-4,8,4,9,-10,6,-9,-1,-1,8,3,-3,6,-9,-2,6,5,-9,-1,7,-9,1,6,-8,-1,1,8,4,9,3,-6,-7,-4,-8,-7,6,1,-5,-1,6,-1,7,4,5,7,-5,10,3,-10,-1,-7,-4,-6,7,-4,-1,-1,6,10,-9,1,9,7,5,3,6,-3,-10,1,-6,2,2,6,1,9,-2,-5,2,-2,-1,3,7,-2,-6,-6,-8,2,4,-7,-3,-6,-7,-5,-4,5,6,-5,-7,1,9,-8,8,8,7,8,2,-4,-4,7,7,-5,2,-5,-8,4,6,6,-1,7,-10,7,-10,10,-1,-3,-10,1,-10,-3,-7,-8,9,8,-8,8,-3,-1,-8,-8,-7,7,-1,1,9,10,1,10,1,9,-6,-1,-4,1,-3,-2,9,-8,-10,-2,3,6,9,3,5,-3,-1,-9,5,8,6,-8,9,-5,-7,9,-8,-7,2,-9,3,7,4,-8,5,-9,-8,-8,-5,6,-10,5,2,7,1,3,7,8,6,-4,-4,4,10,-8,6,8,-1,-6,-4,-8,-10,-8,3,-2,-2,1,-9,-7,-8,-5,-7,2,5,-2,2,5,3,1,-7,-4,-9,-4,-2,9,-4,-6,-7,-10,4,-5,-3,8,-2,-3,-10,-8,4,9,-3,-7,1,9,-2,4,4,-2,-8,5,1,-8,7,-2,-10,-8,-7,1,10,10,10,8,3,-10,-4,10,-5,6,6,2,7,10,-8,-6,10,10,9,-5,10,3,2,-7,2,6,9,6,9,4,7,-6,5,9,4,6,9,7,-3,-6,-10,-4,2,7,-4,-9,-10,-7,10,10,-2,-9,-8,-2,-3,-5,-3,-3,9,-8,-2,3,1,8,-10,7,-7,-2,-3,5,5,10,-10,-6,-5,-1,1,-1,-6,6,-9,7,-9,2,-5,1,-10,-9,6,-9,-2,-9,4,7,-1,7,8,-8,5,1,9,-2,-5,-9,-8,3,9,-3,4,-7,3,-6,10,-7,4,-4,2,-3,-9,-9,3,5,7,-6,-7,5,7,-2,5,-1,-9,-5,-1,9,3,6,-3,-7,-10,3,-6,-1,2,-7,3,8,-2,-7,1,4,-8,-7,3,3,-9,-5,5,-5,7,3,-1,-6,-4,-8,8,7,4,9,2,-3,8,-3,3,-1,-1,2,7,-4,10,-4,-8,6,-8,1,7,-8,-3,-10,-8,-7,-7,-10,-7,-3,-8,7,9,8,-10,-5,3,4,4,-2,-4,1,6,-6,-8,1,-6,-2,6,2,8,-3,-1,-9,-10,9,-8,7,-4,8,-2,5,-9,-2,-6,-1,4,-7,2,1,-5,-5,-1,-10,5,-4,-8,4,-8,4,-3,-8,10,1,9,1,-2,-10,1,7,-7,3,-4,3,-3,3,2,10,-7,4,-5,-2,5,10,-10,-2,-2,10,-1,-5,2,10,-1,7,-3,4,8,-5,-5,-9,-3,-2,7,10,-9,-2,-5,6,-3,4,8,2,-1,8,-1,3,-9,1,-8,-4,8,-7,-6,-8,10,5,-9,3,-3,10,-2,-9,7,-7,-5,-4,-6,-7,-8,3,9,5,6,-10,10,4,10,-3,7,5,-2,4,-2,4,6,-5,7,2,9,-2,-9,-1,2,-9,-5,-9,-3,-4,-2,2,-6,-10,8,-6,-4,-6,-5,-6,-10,-3,9,-9,-5,-7,3,-4,8,-2,7,-3,-8,-6,5,-9,-6,9,6,-10,-5,9,-8,-7,-8,3,8,-8,5,9,-7,5,3,-3,-4,-10,-9,6,-4,4,-1,7,2,-6,-1,-7,3,6,-7,-5,-1,9,5,-9,-8,1,1,1,-5,-2,-1,-7,-2,2,-3,10,3,-5,-7,-7,7,-4,-6,-4,1,-7,7,-9,-10,-8,-8,-6,10,-9,-4,-9,4,3,-8,1,3,2,-4,10,-1,-7,-9,-8,-2,5,5,1,9,1,1,7,-2,5,-7,9,3,7,-9,-10,-3,-7,9,10,-1,5,5,-5,8,-2,-5,5,9,10,8,-8,-3,1,-2,9,-4,-3,-6,-5,-10,-1,1,3,-9,-9,2,-8,-10,-8,2,6,-4,6,-7,6,1,2,-5,-4,-9,1,-8,-8,-8,3,-6,7,-7,-1,5,4,5,5,-3,6,2,5,6,10,-10,5,1,-5,6,-7,-1,4,8,-8,10,5,1,2,3,-3,-7,6,-2,-8,-7,7,7,8,3,-10,-1,-7,-5,10,-2,-1,-1,7,-8,-10,-4,-6,10,-8,-9,-8,-5,3,-5,-10,-3,-6,-7,-8,9,-1,6,-6,1,-1,-4,1,3,9,-6,-5,-9,-5,-5,1,-2,-9,-10,-5,8,-3,5,10,-7,-8,-10,-2,-5,3,-2,5,7,-10,-8,-9,-1,9,-6,5,-1,-6,7,8,-5,-3,-3,10,-2,-8,5,9,10,3,-10,-9,3,-10,3,4,8,6,-6,3,7,10,-1,-10,-8,8,3,-7,-5,1,-4,8,2,3,-10,-4,10,-1,-3,-3,-5,-9,10,-7,2,3,-2,-7,-4,-2,7,-3,2,-9,4,7,2,-8,-1,-7,4,10,10,-2,-10,-1,2,5,10,8,3,-3,-1,-7,-7,-9,4,-9,-7,-9,5,3,3,-1,1,7,7,10,1,2,4,1,1,10,-10,4,-8,3,6,-4,-3,2,3], dtype = "int16")#candidate|7376|(1296,)|const|int16
call_7375 = func_5638_call(relay.reshape(const_7376.astype('int16'), [16, 9, 9]), relay.reshape(const_7376.astype('int16'), [16, 9, 9]), )
call_7377 = func_5638_call(relay.reshape(const_7376.astype('int16'), [16, 9, 9]), relay.reshape(const_7376.astype('int16'), [16, 9, 9]), )
func_7073_call = mod.get_global_var('func_7073')
func_7074_call = mutated_mod.get_global_var('func_7074')
call_7386 = relay.TupleGetItem(func_7073_call(), 0)
call_7387 = relay.TupleGetItem(func_7074_call(), 0)
output = relay.Tuple([bop_7356,call_7359,call_7375,const_7376,call_7386,])
output2 = relay.Tuple([bop_7356,call_7360,call_7377,const_7376,call_7387,])
func_7393 = relay.Function([var_7354,var_7355,], output)
mod['func_7393'] = func_7393
mod = relay.transform.InferType()(mod)
var_7394 = relay.var("var_7394", dtype = "bool", shape = (6, 5, 12))#candidate|7394|(6, 5, 12)|var|bool
var_7395 = relay.var("var_7395", dtype = "bool", shape = (6, 5, 12))#candidate|7395|(6, 5, 12)|var|bool
output = func_7393(var_7394,var_7395,)
func_7396 = relay.Function([var_7394,var_7395,], output)
mutated_mod['func_7396'] = func_7396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7193_call = mod.get_global_var('func_7193')
func_7194_call = mutated_mod.get_global_var('func_7194')
call_7420 = relay.TupleGetItem(func_7193_call(), 0)
call_7421 = relay.TupleGetItem(func_7194_call(), 0)
func_6394_call = mod.get_global_var('func_6394')
func_6395_call = mutated_mod.get_global_var('func_6395')
call_7425 = relay.TupleGetItem(func_6394_call(), 0)
call_7426 = relay.TupleGetItem(func_6395_call(), 0)
uop_7434 = relay.log(call_7425.astype('float64')) # shape=(15, 16, 4)
uop_7436 = relay.log(call_7426.astype('float64')) # shape=(15, 16, 4)
func_7055_call = mod.get_global_var('func_7055')
func_7057_call = mutated_mod.get_global_var('func_7057')
call_7448 = relay.TupleGetItem(func_7055_call(), 2)
call_7449 = relay.TupleGetItem(func_7057_call(), 2)
bop_7464 = relay.less_equal(uop_7434.astype('bool'), relay.reshape(call_7448.astype('bool'), relay.shape_of(uop_7434))) # shape=(15, 16, 4)
bop_7467 = relay.less_equal(uop_7436.astype('bool'), relay.reshape(call_7449.astype('bool'), relay.shape_of(uop_7436))) # shape=(15, 16, 4)
var_7469 = relay.var("var_7469", dtype = "float32", shape = (15, 16, 4))#candidate|7469|(15, 16, 4)|var|float32
bop_7470 = relay.bitwise_and(call_7425.astype('uint64'), relay.reshape(var_7469.astype('uint64'), relay.shape_of(call_7425))) # shape=(15, 16, 4)
bop_7473 = relay.bitwise_and(call_7426.astype('uint64'), relay.reshape(var_7469.astype('uint64'), relay.shape_of(call_7426))) # shape=(15, 16, 4)
func_6243_call = mod.get_global_var('func_6243')
func_6244_call = mutated_mod.get_global_var('func_6244')
call_7478 = relay.TupleGetItem(func_6243_call(), 0)
call_7479 = relay.TupleGetItem(func_6244_call(), 0)
func_920_call = mod.get_global_var('func_920')
func_923_call = mutated_mod.get_global_var('func_923')
var_7481 = relay.var("var_7481", dtype = "bool", shape = (880,))#candidate|7481|(880,)|var|bool
call_7480 = func_920_call(relay.reshape(var_7481.astype('bool'), [8, 11, 10]))
call_7482 = func_920_call(relay.reshape(var_7481.astype('bool'), [8, 11, 10]))
output = relay.Tuple([call_7420,bop_7464,bop_7470,call_7478,call_7480,var_7481,])
output2 = relay.Tuple([call_7421,bop_7467,bop_7473,call_7479,call_7482,var_7481,])
func_7489 = relay.Function([var_7469,var_7481,], output)
mod['func_7489'] = func_7489
mod = relay.transform.InferType()(mod)
var_7490 = relay.var("var_7490", dtype = "float32", shape = (15, 16, 4))#candidate|7490|(15, 16, 4)|var|float32
var_7491 = relay.var("var_7491", dtype = "bool", shape = (880,))#candidate|7491|(880,)|var|bool
output = func_7489(var_7490,var_7491,)
func_7492 = relay.Function([var_7490,var_7491,], output)
mutated_mod['func_7492'] = func_7492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6878_call = mod.get_global_var('func_6878')
func_6880_call = mutated_mod.get_global_var('func_6880')
call_7502 = func_6878_call()
call_7503 = func_6878_call()
func_1763_call = mod.get_global_var('func_1763')
func_1766_call = mutated_mod.get_global_var('func_1766')
var_7507 = relay.var("var_7507", dtype = "int64", shape = (392, 4))#candidate|7507|(392, 4)|var|int64
call_7506 = relay.TupleGetItem(func_1763_call(relay.reshape(var_7507.astype('int64'), [2, 784])), 2)
call_7508 = relay.TupleGetItem(func_1766_call(relay.reshape(var_7507.astype('int64'), [2, 784])), 2)
uop_7517 = relay.log2(call_7506.astype('float32')) # shape=(2, 784)
uop_7519 = relay.log2(call_7508.astype('float32')) # shape=(2, 784)
output = relay.Tuple([call_7502,var_7507,uop_7517,])
output2 = relay.Tuple([call_7503,var_7507,uop_7519,])
func_7520 = relay.Function([var_7507,], output)
mod['func_7520'] = func_7520
mod = relay.transform.InferType()(mod)
mutated_mod['func_7520'] = func_7520
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7521 = relay.var("var_7521", dtype = "int64", shape = (392, 4))#candidate|7521|(392, 4)|var|int64
func_7520_call = mutated_mod.get_global_var('func_7520')
call_7522 = func_7520_call(var_7521)
output = call_7522
func_7523 = relay.Function([var_7521], output)
mutated_mod['func_7523'] = func_7523
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7527 = relay.var("var_7527", dtype = "int16", shape = (6, 6, 14))#candidate|7527|(6, 6, 14)|var|int16
var_7528 = relay.var("var_7528", dtype = "int16", shape = (6, 6, 14))#candidate|7528|(6, 6, 14)|var|int16
bop_7529 = relay.greater_equal(var_7527.astype('bool'), relay.reshape(var_7528.astype('bool'), relay.shape_of(var_7527))) # shape=(6, 6, 14)
output = relay.Tuple([bop_7529,])
output2 = relay.Tuple([bop_7529,])
F = relay.Function([var_7527,var_7528,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7527,var_7528,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_3418(%var_3402: Tensor[(11, 6, 11), float64]) -> (Tensor[(11, 6, 11), float64],) {
  %0 = cast(%var_3402, dtype="float64") /* ty=Tensor[(11, 6, 11), float64] */;
  %1 = cos(%0) /* ty=Tensor[(11, 6, 11), float64] */;
  (%1,)
}

def @func_5504(%var_5490: Tensor[(8, 12, 15), float32]) -> (Tensor[(8, 12, 15), uint16],) {
  %2 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %3 = %2.0;
  %4 = cast(%3, dtype="uint16") /* ty=Tensor[(1, 12, 15), uint16] */;
  %5 = cast(%var_5490, dtype="uint16") /* ty=Tensor[(8, 12, 15), uint16] */;
  %6 = logical_xor(%4, %5) /* ty=Tensor[(8, 12, 15), uint16] */;
  (%6,)
}

def @func_5156() -> Tensor[(1, 12, 15), float32] {
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 12, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  asinh(%7) /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_5971() -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) {
  %8 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %9 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %10 = %8.0;
  %11 = %9.0;
  (%10, %11)
}

def @func_9288(%var_9256: Tensor[(13, 12, 15), float32]) -> (Tensor[(13, 12, 15), float64], Tensor[(1, 12, 15), float64]) {
  %12 = @func_8301() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %13 = %12.0;
  %14 = cast(%13, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
  %15 = cast(%var_9256, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %16 = floor_divide(%14, %15) /* ty=Tensor[(13, 12, 15), float64] */;
  %17 = cast(%var_9256, dtype="int16") /* ty=Tensor[(13, 12, 15), int16] */;
  %18 = shape_of(%16, dtype="int32") /* ty=Tensor[(3), int32] */;
  %19 = cast(%16, dtype="int16") /* ty=Tensor[(13, 12, 15), int16] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %21 = right_shift(%19, %20) /* ty=Tensor[(13, 12, 15), int16] */;
  %22 = cast(%21, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
  %23 = cast(%13, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
  %24 = acos(%22) /* ty=Tensor[(13, 12, 15), float64] */;
  %25 = acosh(%23) /* ty=Tensor[(1, 12, 15), float64] */;
  (%24, %25)
}

def @func_8324() -> (Tensor[(1, 12, 15), float32], Tensor[(143), float64], Tensor[(36), int64]) {
  %26 = @func_6107() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(36), int64] */, dtype="int64") /* ty=Tensor[(36), int64] */;
  %28 = reshape(%27, newshape=[9, 4]) /* ty=Tensor[(9, 4), int64] */;
  %29 = @func_5699(%28) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(4, 9, 1), int64], int64, Tensor[(9, 4), int64], Tensor[(13, 11, 15), float64], Tensor[(143), float64], Tensor[(1, 2145), float64]) */;
  %30 = %26.1;
  %31 = %29.5;
  (%30, %31, meta[relay.Constant][1] /* ty=Tensor[(36), int64] */)
}

def @func_7879(%var_7867: Tensor[(12, 12, 15), float32]) -> Tensor[(12, 12, 15), bool] {
  %32 = @func_5418() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %33 = %32.0;
  %34 = cast(%33, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
  %35 = cast(%var_7867, dtype="bool") /* ty=Tensor[(12, 12, 15), bool] */;
  logical_or(%34, %35) /* ty=Tensor[(12, 12, 15), bool] */
}

def @func_1376(%var_1365: Tensor[(11, 12, 4), float32], %var_1366: Tensor[(11, 12, 4), float32], %var_1373: Tensor[(312), bool]) -> (Tensor[(11, 12, 4), float32], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) {
  %36 = cast(%var_1366, dtype="float32") /* ty=Tensor[(11, 12, 4), float32] */;
  %37 = shape_of(%var_1365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%var_1365, dtype="float32") /* ty=Tensor[(11, 12, 4), float32] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %40 = cast(%var_1373, dtype="bool") /* ty=Tensor[(312), bool] */;
  %41 = reshape(%40, newshape=[2, 12, 13]) /* ty=Tensor[(2, 12, 13), bool] */;
  %42 = power(%38, %39) /* ty=Tensor[(11, 12, 4), float32] */;
  %43 = @func_29(%41) /* ty=Tensor[(2, 12, 13), bool] */;
  (%42, %43, %var_1373)
}

def @func_8505() -> (Tensor[(15, 12, 15), int32], Tensor[(1, 12, 15), float32]) {
  %44 = @func_6739() /* ty=Tensor[(15, 12, 15), float32] */;
  %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 12, 15), float32] */, dtype="int32") /* ty=Tensor[(15, 12, 15), int32] */;
  %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
  %47 = cast(%44, dtype="int32") /* ty=Tensor[(15, 12, 15), int32] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %49 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %50 = subtract(%47, %48) /* ty=Tensor[(15, 12, 15), int32] */;
  %51 = %49.0;
  (%50, %51)
}

def @func_9388() -> (Tensor[(1, 12, 15), float32], Tensor[(11, 14, 2), uint32], Tensor[(7, 44), float32]) {
  %52 = @func_6604() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %53 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 44), float32] */, dtype="float32") /* ty=Tensor[(7, 44), float32] */;
  %54 = reshape(%53, newshape=[308, 1]) /* ty=Tensor[(308, 1), float32] */;
  %55 = @func_3501(%54) /* ty=(Tensor[(2, 7, 16), uint8], Tensor[(11, 14, 1), float32], Tensor[(22), float64], Tensor[(308, 1), float32], Tensor[(11, 14, 2), uint32]) */;
  %56 = %52.0;
  %57 = %55.4;
  (%56, %57, meta[relay.Constant][3] /* ty=Tensor[(7, 44), float32] */)
}

def @func_7023(%var_6995: Tensor[(495), uint16], %var_6996: Tensor[(308), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(12, 30), float32], Tensor[(495), uint16], Tensor[(308), float32], Tensor[(1, 36), int64], Tensor[(495), float64], Tensor[(?, 12, 15), float32]) {
  %58 = @func_5971() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %59 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 30), float32] */, dtype="float32") /* ty=Tensor[(12, 30), float32] */;
  %60 = cast(%var_6995, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %61 = cast(%var_6996, dtype="float32") /* ty=Tensor[(308), float32] */;
  %62 = reshape(%59, newshape=[9, 8, 5]) /* ty=Tensor[(9, 8, 5), float32] */;
  %63 = reshape(%60, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %64 = reshape(%61, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %65 = @func_4593(%62, %63, %64) /* ty=(Tensor[(2, 12, 13), bool], Tensor[(495), uint16], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(9, 8, 5), int64], Tensor[(11, 14, 1), float32], Tensor[(308), float32]) */;
  %66 = %65.1;
  %67 = cast(%66, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %68 = reshape(%67, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %69 = @func_6468(%68) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(36), int64], Tensor[(1, 36), int64], Tensor[(495), uint16]) */;
  %70 = cast(%66, dtype="float64") /* ty=Tensor[(495), float64] */;
  %71 = %58.0;
  %72 = %69.2;
  %73 = rsqrt(%70) /* ty=Tensor[(495), float64] */;
  %74 = @func_6347() /* ty=Tensor[(?, 12, 15), float32] */;
  (%71, meta[relay.Constant][4] /* ty=Tensor[(12, 30), float32] */, %var_6995, %var_6996, %72, %73, %74)
}

def @func_6347() -> Tensor[(?, 12, 15), float32] {
  %75 = @func_6300() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32]) */;
  %75.1
}

def @func_8998(%var_8956: Tensor[(8, 16, 5), int32], %var_8994: Tensor[(3, 104), bool]) -> (Tensor[(8, 16, 5), float64], Tensor[(2, 12, 13), bool], Tensor[(528), float32], Tensor[(3, 104), bool]) {
  %76 = cast(4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %77 = cast(%var_8956, dtype="int32") /* ty=Tensor[(8, 16, 5), int32] */;
  %78 = maximum(%76, %77) /* ty=Tensor[(8, 16, 5), int32] */;
  %79 = cast(%78, dtype="float64") /* ty=Tensor[(8, 16, 5), float64] */;
  %80 = cast(meta[relay.Constant][5] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %81 = cast(meta[relay.Constant][5] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %82 = cast(%var_8994, dtype="bool") /* ty=Tensor[(3, 104), bool] */;
  %83 = reshape(%80, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %84 = reshape(%81, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %85 = reshape(%82, newshape=[312]) /* ty=Tensor[(312), bool] */;
  %86 = @func_1376(%83, %84, %85) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) */;
  %87 = acos(%79) /* ty=Tensor[(8, 16, 5), float64] */;
  %88 = %86.1;
  (%87, %88, meta[relay.Constant][5] /* ty=Tensor[(528), float32] */, %var_8994)
}

def @func_5278(%var_5263: Tensor[(36), int64], %var_5274: Tensor[(495), uint16]) -> (Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(450), bool], int64, Tensor[(36), int64], Tensor[(2, 2, 10), float32], Tensor[(2, 264), float32], Tensor[(495), uint16]) {
  %89 = cast(meta[relay.Constant][6] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %90 = reshape(%89, newshape=[2, 2, 10]) /* ty=Tensor[(2, 2, 10), float32] */;
  %91 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  %92 = cast(%91, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
  %93 = cast(%91, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %94 = cast(-9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %95 = cast(%var_5263, dtype="int64") /* ty=Tensor[(36), int64] */;
  %96 = reshape(%94, newshape=[]) /* ty=int64 */;
  %97 = reshape(%95, newshape=[4, 9, 1]) /* ty=Tensor[(4, 9, 1), int64] */;
  %98 = @func_5128(%96, %97) /* ty=(Tensor[(4, 9, 1), int64], Tensor[(495), uint16], Tensor[(450), bool]) */;
  %99 = @func_1576(%90) /* ty=Tensor[(2, 2, 10), float32] */;
  %100 = cast(%99, dtype="float32") /* ty=Tensor[(2, 2, 10), float32] */;
  %101 = reshape(%100, newshape=[2, 2, 10]) /* ty=Tensor[(2, 2, 10), float32] */;
  %102 = cast(%var_5274, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %103 = reshape(%102, newshape=[11, 15, 3]) /* ty=Tensor[(11, 15, 3), uint16] */;
  %104 = @func_3856(%103) /* ty=(Tensor[(11, 15, 3), uint16], Tensor[(2, 12, 13), bool], Tensor[(450), float32], Tensor[(2, 264), float32]) */;
  %105 = atanh(%92) /* ty=Tensor[(1, 12, 15), float64] */;
  %106 = log2(%93) /* ty=Tensor[(1, 12, 15), float32] */;
  %107 = %98.2;
  %108 = @func_1576(%101) /* ty=Tensor[(2, 2, 10), float32] */;
  %109 = %104.3;
  (%99, meta[relay.Constant][6] /* ty=Tensor[(40), float32] */, %105, %106, %107, -9 /* ty=int64 */, %var_5263, %108, %109, %var_5274)
}

def @func_8135(%var_8116: Tensor[(1200, 1), int64]) -> (Tensor[(1, 12, 15), float32], Tensor[(13, 11, 15), float64], Tensor[(36), int64], Tensor[(16, 5, 15), int64], int64, Tensor[(1200, 1), int64]) {
  %110 = @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %111 = cast(meta[relay.Constant][7] /* ty=Tensor[(36), int64] */, dtype="int64") /* ty=Tensor[(36), int64] */;
  %112 = reshape(%111, newshape=[9, 4]) /* ty=Tensor[(9, 4), int64] */;
  %113 = @func_5699(%112) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(4, 9, 1), int64], int64, Tensor[(9, 4), int64], Tensor[(13, 11, 15), float64], Tensor[(143), float64], Tensor[(1, 2145), float64]) */;
  %114 = cast(-4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %115 = cast(%var_8116, dtype="int64") /* ty=Tensor[(1200, 1), int64] */;
  %116 = reshape(%114, newshape=[]) /* ty=int64 */;
  %117 = reshape(%115, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), int64] */;
  %118 = @func_4003(%116, %117) /* ty=(Tensor[(16, 5, 15), int64],) */;
  %119 = %110.0;
  %120 = %113.4;
  %121 = %118.0;
  (%119, %120, meta[relay.Constant][7] /* ty=Tensor[(36), int64] */, %121, -4 /* ty=int64 */, %var_8116)
}

def @func_3856(%var_3841: Tensor[(11, 15, 3), uint16]) -> (Tensor[(11, 15, 3), uint16], Tensor[(2, 12, 13), bool], Tensor[(450), float32], Tensor[(2, 264), float32]) {
  %122 = cast(%var_3841, dtype="uint16") /* ty=Tensor[(11, 15, 3), uint16] */;
  %123 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(11, 15, 3), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %124 = cast(meta[relay.Constant][8] /* ty=Tensor[(11, 15, 3), uint16] */, dtype="uint16") /* ty=Tensor[(11, 15, 3), uint16] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %126 = cast(meta[relay.Constant][9] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %127 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 264), float32] */, dtype="float32") /* ty=Tensor[(2, 264), float32] */;
  %128 = cast(meta[relay.Constant][9] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %129 = reshape(%126, newshape=[10, 5, 9]) /* ty=Tensor[(10, 5, 9), float32] */;
  %130 = reshape(%127, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %131 = reshape(%128, newshape=[10, 5, 9]) /* ty=Tensor[(10, 5, 9), float32] */;
  %132 = @func_2842(%129, %130, %131) /* ty=(Tensor[(2, 12, 13), bool], Tensor[(528), float32], Tensor[(6, 52), bool], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(10, 5, 9), float64], Tensor[(10, 5, 9), float64]) */;
  %133 = add(%124, %125) /* ty=Tensor[(11, 15, 3), uint16] */;
  %134 = %132.0;
  (%133, %134, meta[relay.Constant][9] /* ty=Tensor[(450), float32] */, meta[relay.Constant][10] /* ty=Tensor[(2, 264), float32] */)
}

def @func_5378(%var_5359: Tensor[(11, 5, 1), uint32], %var_5360: Tensor[(11, 5, 7), uint32], %var_5367: Tensor[(30, 6), float32]) -> (Tensor[(11, 5, 7), uint32], Tensor[(5, 12, 3), float32], Tensor[(30, 6), float32], Tensor[(16, 5, 15), int64], int64, Tensor[(1200), int64]) {
  %135 = cast(%var_5359, dtype="uint32") /* ty=Tensor[(11, 5, 1), uint32] */;
  %136 = cast(%var_5360, dtype="uint32") /* ty=Tensor[(11, 5, 7), uint32] */;
  %137 = cast(%var_5367, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
  %138 = cast(%var_5367, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
  %139 = reshape(%137, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %140 = reshape(%138, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %141 = cast(9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %142 = cast(meta[relay.Constant][11] /* ty=Tensor[(1200), int64] */, dtype="int64") /* ty=Tensor[(1200), int64] */;
  %143 = reshape(%141, newshape=[]) /* ty=int64 */;
  %144 = reshape(%142, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), int64] */;
  %145 = @func_4003(%143, %144) /* ty=(Tensor[(16, 5, 15), int64],) */;
  %146 = right_shift(%135, %136) /* ty=Tensor[(11, 5, 7), uint32] */;
  %147 = @func_4987(%139, %140) /* ty=Tensor[(5, 12, 3), float32] */;
  %148 = %145.0;
  (%146, %147, %var_5367, %148, 9 /* ty=int64 */, meta[relay.Constant][11] /* ty=Tensor[(1200), int64] */)
}

def @func_8830() -> (Tensor[(1, 12, 15), float32],) {
  %149 = @func_7471() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %150 = %149.1;
  (%150,)
}

def @func_4593(%var_4528: Tensor[(9, 8, 5), float32], %var_4552: Tensor[(495), uint16], %var_4590: Tensor[(308), float32]) -> (Tensor[(2, 12, 13), bool], Tensor[(495), uint16], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(9, 8, 5), int64], Tensor[(11, 14, 1), float32], Tensor[(308), float32]) {
  %151 = cast(%var_4552, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %152 = reshape(%151, newshape=[11, 15, 3]) /* ty=Tensor[(11, 15, 3), uint16] */;
  %153 = @func_3856(%152) /* ty=(Tensor[(11, 15, 3), uint16], Tensor[(2, 12, 13), bool], Tensor[(450), float32], Tensor[(2, 264), float32]) */;
  %154 = cast(meta[relay.Constant][12] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %155 = reshape(%154, newshape=[2, 2, 10]) /* ty=Tensor[(2, 2, 10), float32] */;
  %156 = cast(%var_4528, dtype="float32") /* ty=Tensor[(9, 8, 5), float32] */;
  %157 = log10(%156) /* ty=Tensor[(9, 8, 5), float32] */;
  %158 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 8, 5), float32] */, dtype="int64") /* ty=Tensor[(9, 8, 5), int64] */;
  %159 = shape_of(%157, dtype="int32") /* ty=Tensor[(3), int32] */;
  %160 = cast(%157, dtype="int64") /* ty=Tensor[(9, 8, 5), int64] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %162 = cast(%var_4590, dtype="float32") /* ty=Tensor[(308), float32] */;
  %163 = reshape(%162, newshape=[308, 1]) /* ty=Tensor[(308, 1), float32] */;
  %164 = @func_3501(%163) /* ty=(Tensor[(2, 7, 16), uint8], Tensor[(11, 14, 1), float32], Tensor[(22), float64], Tensor[(308, 1), float32], Tensor[(11, 14, 2), uint32]) */;
  %165 = %153.1;
  %166 = @func_1576(%155) /* ty=Tensor[(2, 2, 10), float32] */;
  %167 = minimum(%160, %161) /* ty=Tensor[(9, 8, 5), int64] */;
  %168 = %164.1;
  (%165, %var_4552, %166, meta[relay.Constant][12] /* ty=Tensor[(40), float32] */, %167, %168, %var_4590)
}

def @func_7610(%var_7595: Tensor[(495), uint16], %var_7596: Tensor[(77, 4), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(2, 2, 10), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(77, 4), float32]) {
  %169 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %170 = cast(meta[relay.Constant][14] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %171 = cast(%var_7595, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %172 = cast(%var_7596, dtype="float32") /* ty=Tensor[(77, 4), float32] */;
  %173 = reshape(%170, newshape=[9, 8, 5]) /* ty=Tensor[(9, 8, 5), float32] */;
  %174 = reshape(%171, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %175 = reshape(%172, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %176 = @func_4593(%173, %174, %175) /* ty=(Tensor[(2, 12, 13), bool], Tensor[(495), uint16], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(9, 8, 5), int64], Tensor[(11, 14, 1), float32], Tensor[(308), float32]) */;
  %177 = %169.0;
  %178 = %176.2;
  (%177, %178, meta[relay.Constant][14] /* ty=Tensor[(360), float32] */, %var_7595, %var_7596)
}

def @func_7912() -> (Tensor[(15, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(11, 6, 11), float64], Tensor[(392, 4), bool], Tensor[(726), float64]) {
  %179 = @func_7471() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %180 = cast(meta[relay.Constant][15] /* ty=Tensor[(392, 4), bool] */, dtype="bool") /* ty=Tensor[(392, 4), bool] */;
  %181 = cast(meta[relay.Constant][15] /* ty=Tensor[(392, 4), bool] */, dtype="bool") /* ty=Tensor[(392, 4), bool] */;
  %182 = cast(meta[relay.Constant][16] /* ty=Tensor[(726), float64] */, dtype="float64") /* ty=Tensor[(726), float64] */;
  %183 = reshape(%180, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), bool] */;
  %184 = reshape(%181, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), bool] */;
  %185 = reshape(%182, newshape=[726]) /* ty=Tensor[(726), float64] */;
  %186 = @func_6881(%183, %184, %185) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(14, 7, 16), float32], Tensor[(11, 6, 11), float64], Tensor[(726), float64]) */;
  %187 = @func_6739() /* ty=Tensor[(15, 12, 15), float32] */;
  %188 = %179.1;
  %189 = %186.2;
  (%187, %188, %189, meta[relay.Constant][15] /* ty=Tensor[(392, 4), bool] */, meta[relay.Constant][16] /* ty=Tensor[(726), float64] */)
}

def @func_9662() -> (Tensor[(1, 12, 15), float32],) {
  %190 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %191 = %190.0;
  (%191,)
}

def @func_7232(%var_7192: Tensor[(5, 4, 4), int64], %var_7193: Tensor[(5, 4, 4), int64]) -> (Tensor[(5, 4, 4), bool],) {
  %192 = cast(%var_7193, dtype="int64") /* ty=Tensor[(5, 4, 4), int64] */;
  %193 = shape_of(%var_7192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%var_7192, dtype="int64") /* ty=Tensor[(5, 4, 4), int64] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %196 = subtract(%194, %195) /* ty=Tensor[(5, 4, 4), int64] */;
  %197 = cast(%196, dtype="bool") /* ty=Tensor[(5, 4, 4), bool] */;
  %198 = shape_of(%var_7193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %199 = cast(%var_7193, dtype="bool") /* ty=Tensor[(5, 4, 4), bool] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %201 = less(%199, %200) /* ty=Tensor[(5, 4, 4), bool] */;
  (%201,)
}

def @func_7362(%var_7341: Tensor[(16, 12, 15), float32]) -> Tensor[(16, 12, 15), uint64] {
  %202 = @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %203 = %202.0;
  %204 = cast(%203, dtype="uint64") /* ty=Tensor[(1, 12, 15), uint64] */;
  %205 = cast(%var_7341, dtype="uint64") /* ty=Tensor[(16, 12, 15), uint64] */;
  multiply(%204, %205) /* ty=Tensor[(16, 12, 15), uint64] */
}

def @func_7526() -> Tensor[(1, 12, 15), float32] {
  %206 = @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %206.0
}

def @func_8143() -> (Tensor[(16, 8, 9), float32],) {
  %207 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 8, 9), float32] */, dtype="float32") /* ty=Tensor[(16, 8, 9), float32] */;
  %208 = cosh(%207) /* ty=Tensor[(16, 8, 9), float32] */;
  (%208,)
}

def @func_6739() -> Tensor[(15, 12, 15), float32] {
  %209 = @func_6231() /* ty=(Tensor[(15, 12, 15), float32],) */;
  %209.0
}

def @func_4406(%var_4402: Tensor[(3, 16, 2), float32]) -> Tensor[(3, 16, 2), float32] {
  %210 = cast(%var_4402, dtype="float32") /* ty=Tensor[(3, 16, 2), float32] */;
  acosh(%210) /* ty=Tensor[(3, 16, 2), float32] */
}

def @func_6138() -> (Tensor[(1, 12, 15), float32],) {
  %211 = @func_5971() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %212 = %211.1;
  (%212,)
}

def @func_2536(%var_2530: Tensor[(16, 1, 7), float64]) -> (Tensor[(16, 1, 7), float64],) {
  %213 = cast(%var_2530, dtype="float64") /* ty=Tensor[(16, 1, 7), float64] */;
  %214 = sigmoid(%213) /* ty=Tensor[(16, 1, 7), float64] */;
  (%214,)
}

def @func_1109(%var_1081: Tensor[(10, 1, 16), float32]) -> (Tensor[(10, 1, 16), float32], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) {
  %215 = cast(%var_1081, dtype="float32") /* ty=Tensor[(10, 1, 16), float32] */;
  %216 = cast(meta[relay.Constant][18] /* ty=Tensor[(312), bool] */, dtype="bool") /* ty=Tensor[(312), bool] */;
  %217 = reshape(%216, newshape=[2, 12, 13]) /* ty=Tensor[(2, 12, 13), bool] */;
  %218 = sigmoid(%215) /* ty=Tensor[(10, 1, 16), float32] */;
  %219 = @func_29(%217) /* ty=Tensor[(2, 12, 13), bool] */;
  (%218, %219, meta[relay.Constant][18] /* ty=Tensor[(312), bool] */)
}

def @func_7178(%var_7122: Tensor[(77, 4), float32], %var_7169: Tensor[(22), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(77, 4), float32], Tensor[(11, 14, 22), bool]) {
  %220 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %221 = cast(meta[relay.Constant][19] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %222 = atanh(%221) /* ty=Tensor[(22), float64] */;
  %223 = cast(%var_7169, dtype="int32") /* ty=Tensor[(22), int32] */;
  %224 = shape_of(%222, dtype="int32") /* ty=Tensor[(1), int32] */;
  %225 = cast(%222, dtype="int32") /* ty=Tensor[(22), int32] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?), int32] */;
  %227 = maximum(%225, %226) /* ty=Tensor[(22), int32] */;
  %228 = cast(meta[relay.Constant][19] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %229 = cast(%var_7122, dtype="float32") /* ty=Tensor[(77, 4), float32] */;
  %230 = reshape(%228, newshape=[22]) /* ty=Tensor[(22), float64] */;
  %231 = reshape(%229, newshape=[11, 14, 2]) /* ty=Tensor[(11, 14, 2), float32] */;
  %232 = @func_3179(%230, %231) /* ty=(Tensor[(11, 14, 1), float32], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(11, 14, 2), uint32], Tensor[(1, 2, 11), float64]) */;
  %233 = %232.0;
  %234 = cast(meta[relay.Constant][19] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %235 = cast(%233, dtype="float64") /* ty=Tensor[(11, 14, 1), float64] */;
  %236 = floor_mod(%234, %235) /* ty=Tensor[(11, 14, 22), float64] */;
  %237 = cast(%227, dtype="bool") /* ty=Tensor[(22), bool] */;
  %238 = cast(%236, dtype="bool") /* ty=Tensor[(11, 14, 22), bool] */;
  %239 = %220.0;
  %240 = logical_or(%237, %238) /* ty=Tensor[(11, 14, 22), bool] */;
  (%239, %var_7122, %240)
}

def @func_6726(%var_6695: Tensor[(308), float32], %var_6723: Tensor[(363, 2), float64]) -> (Tensor[(?, 12, 15), uint16], Tensor[(13, 11, 15), float64], Tensor[(13, 11), float64], Tensor[(2145), float64], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(308), float32], Tensor[(11, 6, 11), float64], Tensor[(363, 2), float64]) {
  %241 = @func_6107() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %242 = %241.0;
  %243 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 12, 15), float32] */, dtype="int64") /* ty=Tensor[(1, 12, 15), int64] */;
  %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%242, dtype="int64") /* ty=Tensor[(1, 12, 15), int64] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %247 = right_shift(%245, %246) /* ty=Tensor[(?, 12, 15), int64] */;
  %248 = cast(%247, dtype="uint16") /* ty=Tensor[(?, 12, 15), uint16] */;
  %249 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(1, 12, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 12, 15), float32] */, dtype="uint16") /* ty=Tensor[(1, 12, 15), uint16] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %252 = cast(meta[relay.Constant][21] /* ty=Tensor[(13, 11), float64] */, dtype="float64") /* ty=Tensor[(13, 11), float64] */;
  %253 = cast(meta[relay.Constant][22] /* ty=Tensor[(2145), float64] */, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %254 = reshape(%252, newshape=[13, 11, 1]) /* ty=Tensor[(13, 11, 1), float64] */;
  %255 = reshape(%253, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float64] */;
  %256 = @func_4631(%254, %255) /* ty=(Tensor[(13, 11, 15), float64],) */;
  %257 = cast(meta[relay.Constant][23] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %258 = cast(%var_6695, dtype="float32") /* ty=Tensor[(308), float32] */;
  %259 = reshape(%257, newshape=[22]) /* ty=Tensor[(22), float64] */;
  %260 = reshape(%258, newshape=[11, 14, 2]) /* ty=Tensor[(11, 14, 2), float32] */;
  %261 = @func_3179(%259, %260) /* ty=(Tensor[(11, 14, 1), float32], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(11, 14, 2), uint32], Tensor[(1, 2, 11), float64]) */;
  %262 = cast(%var_6723, dtype="float64") /* ty=Tensor[(363, 2), float64] */;
  %263 = reshape(%262, newshape=[11, 6, 11]) /* ty=Tensor[(11, 6, 11), float64] */;
  %264 = @func_3418(%263) /* ty=(Tensor[(11, 6, 11), float64],) */;
  %265 = bitwise_and(%250, %251) /* ty=Tensor[(?, 12, 15), uint16] */;
  %266 = %256.0;
  %267 = %261.4;
  %268 = %264.0;
  (%265, %266, meta[relay.Constant][21] /* ty=Tensor[(13, 11), float64] */, meta[relay.Constant][22] /* ty=Tensor[(2145), float64] */, %267, meta[relay.Constant][23] /* ty=Tensor[(22), float64] */, %var_6695, %268, %var_6723)
}

def @func_5185(%var_5182: Tensor[(1125), uint32]) -> (Tensor[(1, 12, 15), float32], Tensor[(15, 5, 15), uint32], Tensor[(1125), uint32]) {
  %269 = cast(%var_5182, dtype="uint32") /* ty=Tensor[(1125), uint32] */;
  %270 = reshape(%269, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), uint32] */;
  %271 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  %272 = @func_3213(%270) /* ty=Tensor[(15, 5, 15), uint32] */;
  (%271, %272, %var_5182)
}

def @func_6204(%var_6163: Tensor[(1, 55), uint32], %var_6164: Tensor[(385), uint32]) -> (Tensor[(1, 12, 15), float32], Tensor[(16, 5, 15), int64], Tensor[(1, 55), uint32], Tensor[(385), uint32], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64]) {
  %273 = cast(%var_6163, dtype="uint32") /* ty=Tensor[(1, 55), uint32] */;
  %274 = cast(%var_6164, dtype="uint32") /* ty=Tensor[(385), uint32] */;
  %275 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  %276 = cast(%275, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %277 = reshape(%273, newshape=[11, 5, 1]) /* ty=Tensor[(11, 5, 1), uint32] */;
  %278 = reshape(%274, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), uint32] */;
  %279 = reshape(%276, newshape=[30, 6]) /* ty=Tensor[(30, 6), float32] */;
  %280 = @func_5378(%277, %278, %279) /* ty=(Tensor[(11, 5, 7), uint32], Tensor[(5, 12, 3), float32], Tensor[(30, 6), float32], Tensor[(16, 5, 15), int64], int64, Tensor[(1200), int64]) */;
  %281 = cast(meta[relay.Constant][24] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %282 = reshape(%281, newshape=[16, 1, 7]) /* ty=Tensor[(16, 1, 7), float64] */;
  %283 = @func_2536(%282) /* ty=(Tensor[(16, 1, 7), float64],) */;
  %284 = %283.0;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(16, 1, 7), float64] */;
  %286 = reshape(%285, newshape=[112, 1]) /* ty=Tensor[(112, 1), float64] */;
  %287 = @func_5469(%286) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64], Tensor[(112, 1), float64]) */;
  %288 = cast(%284, dtype="float64") /* ty=Tensor[(16, 1, 7), float64] */;
  %289 = reshape(%288, newshape=[16, 1, 7]) /* ty=Tensor[(16, 1, 7), float64] */;
  %290 = @func_2536(%289) /* ty=(Tensor[(16, 1, 7), float64],) */;
  %291 = %280.3;
  %292 = %287.0;
  %293 = %290.0;
  (%275, %291, %var_6163, %var_6164, %284, meta[relay.Constant][24] /* ty=Tensor[(112), float64] */, %292, %293)
}

def @func_6764() -> (Tensor[(1, 12, 15), float32],) {
  %294 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %295 = %294.0;
  (%295,)
}

def @func_2842(%var_2805: Tensor[(10, 5, 9), float32], %var_2819: Tensor[(528), float32], %var_2835: Tensor[(10, 5, 9), float32]) -> (Tensor[(2, 12, 13), bool], Tensor[(528), float32], Tensor[(6, 52), bool], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(10, 5, 9), float64], Tensor[(10, 5, 9), float64]) {
  %296 = cast(%var_2819, dtype="float32") /* ty=Tensor[(528), float32] */;
  %297 = cast(%var_2819, dtype="float32") /* ty=Tensor[(528), float32] */;
  %298 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 52), bool] */, dtype="bool") /* ty=Tensor[(6, 52), bool] */;
  %299 = reshape(%296, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %300 = reshape(%297, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %301 = reshape(%298, newshape=[312]) /* ty=Tensor[(312), bool] */;
  %302 = @func_1376(%299, %300, %301) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) */;
  %303 = cast(meta[relay.Constant][26] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %304 = reshape(%303, newshape=[2, 2, 10]) /* ty=Tensor[(2, 2, 10), float32] */;
  %305 = cast(%var_2805, dtype="float32") /* ty=Tensor[(10, 5, 9), float32] */;
  %306 = atanh(%305) /* ty=Tensor[(10, 5, 9), float32] */;
  %307 = cast(%306, dtype="uint64") /* ty=Tensor[(10, 5, 9), uint64] */;
  %308 = shape_of(%var_2805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(%var_2805, dtype="uint64") /* ty=Tensor[(10, 5, 9), uint64] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %311 = right_shift(%309, %310) /* ty=Tensor[(10, 5, 9), uint64] */;
  %312 = cast(%311, dtype="float64") /* ty=Tensor[(10, 5, 9), float64] */;
  %313 = cast(%var_2835, dtype="float64") /* ty=Tensor[(10, 5, 9), float64] */;
  %314 = shape_of(%306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %315 = cast(%306, dtype="float64") /* ty=Tensor[(10, 5, 9), float64] */;
  %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %317 = %302.1;
  %318 = @func_1576(%304) /* ty=Tensor[(2, 2, 10), float32] */;
  %319 = asinh(%312) /* ty=Tensor[(10, 5, 9), float64] */;
  %320 = power(%315, %316) /* ty=Tensor[(10, 5, 9), float64] */;
  (%317, %var_2819, meta[relay.Constant][25] /* ty=Tensor[(6, 52), bool] */, %318, meta[relay.Constant][26] /* ty=Tensor[(40), float32] */, %319, %320)
}

def @func_5418() -> (Tensor[(1, 12, 15), float32],) {
  %321 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  (%321,)
}

def @func_8051() -> (Tensor[(1, 12, 15), float32],) {
  %322 = @func_7912() /* ty=(Tensor[(15, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(11, 6, 11), float64], Tensor[(392, 4), bool], Tensor[(726), float64]) */;
  %323 = %322.1;
  (%323,)
}

def @func_4631(%var_4624: Tensor[(13, 11, 1), float64], %var_4625: Tensor[(13, 11, 15), float64]) -> (Tensor[(13, 11, 15), float64],) {
  %324 = cast(%var_4624, dtype="float64") /* ty=Tensor[(13, 11, 1), float64] */;
  %325 = cast(%var_4625, dtype="float64") /* ty=Tensor[(13, 11, 15), float64] */;
  %326 = floor_divide(%324, %325) /* ty=Tensor[(13, 11, 15), float64] */;
  (%326,)
}

def @func_8793() -> Tensor[(1, 12, 15), float32] {
  %327 = @func_6604() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %327.0
}

def @func_6107() -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) {
  %328 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %329 = %328.0;
  %330 = cast(%329, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %331 = @func_5971() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %332 = sin(%330) /* ty=Tensor[(1, 12, 15), float32] */;
  %333 = %331.1;
  (%332, %333)
}

def @func_9175() -> (Tensor[(1, 12, 15), float32], Tensor[(15, 12, 15), float32], Tensor[(5, 12, 3), float32]) {
  %334 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %335 = %334.0;
  %336 = cast(%335, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %337 = cast(%335, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %338 = reshape(%336, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %339 = reshape(%337, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %340 = @func_6739() /* ty=Tensor[(15, 12, 15), float32] */;
  %341 = @func_4987(%338, %339) /* ty=Tensor[(5, 12, 3), float32] */;
  (%335, %340, %341)
}

def @func_6539(%var_6512: Tensor[(5, 99), uint16]) -> (Tensor[(?, 12, 15), float32], Tensor[(1, 12, 15), float64], Tensor[(5, 99), uint16], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(36), float64]) {
  %342 = @func_6300() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32]) */;
  %343 = cast(meta[relay.Constant][27] /* ty=Tensor[(36), int64] */, dtype="int64") /* ty=Tensor[(36), int64] */;
  %344 = cast(%var_6512, dtype="uint16") /* ty=Tensor[(5, 99), uint16] */;
  %345 = reshape(%343, newshape=[36]) /* ty=Tensor[(36), int64] */;
  %346 = reshape(%344, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %347 = @func_5278(%345, %346) /* ty=(Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(450), bool], int64, Tensor[(36), int64], Tensor[(2, 2, 10), float32], Tensor[(2, 264), float32], Tensor[(495), uint16]) */;
  %348 = cast(meta[relay.Constant][28] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %349 = reshape(%348, newshape=[16, 1, 7]) /* ty=Tensor[(16, 1, 7), float64] */;
  %350 = @func_2536(%349) /* ty=(Tensor[(16, 1, 7), float64],) */;
  %351 = cast(meta[relay.Constant][27] /* ty=Tensor[(36), int64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %352 = %342.1;
  %353 = %347.2;
  %354 = %350.0;
  %355 = acosh(%351) /* ty=Tensor[(36), float64] */;
  (%352, %353, %var_6512, %354, meta[relay.Constant][28] /* ty=Tensor[(112), float64] */, %355)
}

def @func_8377() -> (Tensor[(?, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(5, 12, 3), float32]) {
  %356 = @func_6300() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32]) */;
  %357 = @func_5971() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %358 = %356.1;
  %359 = cast(%358, dtype="float32") /* ty=Tensor[(?, 12, 15), float32] */;
  %360 = %357.0;
  %361 = cast(%360, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %362 = reshape(%359, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %363 = reshape(%361, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %364 = @func_4987(%362, %363) /* ty=Tensor[(5, 12, 3), float32] */;
  (%358, %360, %364)
}

def @func_3115(%var_3104: Tensor[(1, 2, 11), float64]) -> (Tensor[(1, 2, 11), float64],) {
  %365 = cast(%var_3104, dtype="float64") /* ty=Tensor[(1, 2, 11), float64] */;
  %366 = cos(%365) /* ty=Tensor[(1, 2, 11), float64] */;
  (%366,)
}

def @func_8213(%var_8200: float32, %var_8201: Tensor[(16, 8, 16), float32]) -> (Tensor[(16, 8, 16), float32],) {
  %367 = cast(%var_8200, dtype="float32") /* ty=float32 */;
  %368 = cast(%var_8201, dtype="float32") /* ty=Tensor[(16, 8, 16), float32] */;
  %369 = floor_divide(%367, %368) /* ty=Tensor[(16, 8, 16), float32] */;
  (%369,)
}

def @func_9908() -> (Tensor[(1, 12, 15), float32],) {
  %370 = @func_6604() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %371 = %370.0;
  (%371,)
}

def @func_6468(%var_6456: Tensor[(495), uint16]) -> (Tensor[(1, 12, 15), float32], Tensor[(36), int64], Tensor[(1, 36), int64], Tensor[(495), uint16]) {
  %372 = @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %373 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 36), int64] */, dtype="int64") /* ty=Tensor[(1, 36), int64] */;
  %374 = cast(%var_6456, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %375 = reshape(%373, newshape=[36]) /* ty=Tensor[(36), int64] */;
  %376 = reshape(%374, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %377 = @func_5278(%375, %376) /* ty=(Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(450), bool], int64, Tensor[(36), int64], Tensor[(2, 2, 10), float32], Tensor[(2, 264), float32], Tensor[(495), uint16]) */;
  %378 = %372.0;
  %379 = %377.6;
  (%378, %379, meta[relay.Constant][29] /* ty=Tensor[(1, 36), int64] */, %var_6456)
}

def @func_7066(%var_7053: Tensor[(55), uint32], %var_7060: Tensor[(1440), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(55), uint32], Tensor[(11, 35), uint32], Tensor[(8, 12, 15), uint16], Tensor[(1440), float32]) {
  %380 = @func_6604() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %381 = cast(%var_7053, dtype="uint32") /* ty=Tensor[(55), uint32] */;
  %382 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 35), uint32] */, dtype="uint32") /* ty=Tensor[(11, 35), uint32] */;
  %383 = reshape(%381, newshape=[1, 55]) /* ty=Tensor[(1, 55), uint32] */;
  %384 = reshape(%382, newshape=[385]) /* ty=Tensor[(385), uint32] */;
  %385 = @func_6204(%383, %384) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(16, 5, 15), int64], Tensor[(1, 55), uint32], Tensor[(385), uint32], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64]) */;
  %386 = cast(%var_7060, dtype="float32") /* ty=Tensor[(1440), float32] */;
  %387 = reshape(%386, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), float32] */;
  %388 = @func_5504(%387) /* ty=(Tensor[(8, 12, 15), uint16],) */;
  %389 = %380.0;
  %390 = %385.6;
  %391 = %388.0;
  (%389, %390, %var_7053, meta[relay.Constant][30] /* ty=Tensor[(11, 35), uint32] */, %391, %var_7060)
}

def @func_9942() -> Tensor[(11, 14, 2), uint32] {
  %392 = @func_9388() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(11, 14, 2), uint32], Tensor[(7, 44), float32]) */;
  %392.1
}

def @func_8782() -> (Tensor[(?, 12, 15), bool], Tensor[(392, 4), bool], int64, Tensor[(36), int64]) {
  %393 = @func_8051() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %394 = %393.0;
  %395 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 12, 15), float32] */, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
  %396 = shape_of(%394, dtype="int32") /* ty=Tensor[(3), int32] */;
  %397 = cast(%394, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
  %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %399 = @func_7912() /* ty=(Tensor[(15, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(11, 6, 11), float64], Tensor[(392, 4), bool], Tensor[(726), float64]) */;
  %400 = cast(meta[relay.Constant][32] /* ty=Tensor[(36), int64] */, dtype="int64") /* ty=Tensor[(36), int64] */;
  %401 = reshape(%400, newshape=[9, 4]) /* ty=Tensor[(9, 4), int64] */;
  %402 = @func_5699(%401) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(4, 9, 1), int64], int64, Tensor[(9, 4), int64], Tensor[(13, 11, 15), float64], Tensor[(143), float64], Tensor[(1, 2145), float64]) */;
  %403 = not_equal(%397, %398) /* ty=Tensor[(?, 12, 15), bool] */;
  %404 = %399.3;
  %405 = %402.2;
  (%403, %404, %405, meta[relay.Constant][32] /* ty=Tensor[(36), int64] */)
}

def @func_9963() -> (Tensor[(1, 12, 15), float32], Tensor[(5, 4, 4), bool], Tensor[(80), int64], Tensor[(13, 12, 15), float32]) {
  %406 = cast(meta[relay.Constant][33] /* ty=Tensor[(80), int64] */, dtype="int64") /* ty=Tensor[(80), int64] */;
  %407 = cast(meta[relay.Constant][33] /* ty=Tensor[(80), int64] */, dtype="int64") /* ty=Tensor[(80), int64] */;
  %408 = reshape(%406, newshape=[5, 4, 4]) /* ty=Tensor[(5, 4, 4), int64] */;
  %409 = reshape(%407, newshape=[5, 4, 4]) /* ty=Tensor[(5, 4, 4), int64] */;
  %410 = @func_7232(%408, %409) /* ty=(Tensor[(5, 4, 4), bool],) */;
  %411 = @func_9759() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(13, 12, 15), int64]) */;
  %412 = %411.2;
  %413 = cast(%412, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
  %414 = @func_9891() /* ty=Tensor[(1, 12, 15), float32] */;
  %415 = %410.0;
  %416 = erf(%413) /* ty=Tensor[(13, 12, 15), float32] */;
  (%414, %415, meta[relay.Constant][33] /* ty=Tensor[(80), int64] */, %416)
}

def @func_6077(%var_6032: Tensor[(495), uint16], %var_6033: Tensor[(308), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(40), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(308), float32], Tensor[(2, 12, 13), bool], Tensor[(1, 12, 15), float32]) {
  %417 = @func_5971() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %418 = cast(meta[relay.Constant][34] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %419 = cast(%var_6032, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %420 = cast(%var_6033, dtype="float32") /* ty=Tensor[(308), float32] */;
  %421 = reshape(%418, newshape=[9, 8, 5]) /* ty=Tensor[(9, 8, 5), float32] */;
  %422 = reshape(%419, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %423 = reshape(%420, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %424 = @func_4593(%421, %422, %423) /* ty=(Tensor[(2, 12, 13), bool], Tensor[(495), uint16], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(9, 8, 5), int64], Tensor[(11, 14, 1), float32], Tensor[(308), float32]) */;
  %425 = cast(%var_6032, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %426 = reshape(%425, newshape=[11, 15, 3]) /* ty=Tensor[(11, 15, 3), uint16] */;
  %427 = @func_3856(%426) /* ty=(Tensor[(11, 15, 3), uint16], Tensor[(2, 12, 13), bool], Tensor[(450), float32], Tensor[(2, 264), float32]) */;
  %428 = @func_5971() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %429 = %417.1;
  %430 = %424.3;
  %431 = %427.1;
  %432 = %428.0;
  (%429, %430, meta[relay.Constant][34] /* ty=Tensor[(360), float32] */, %var_6032, %var_6033, %431, %432)
}

def @func_5164() -> (Tensor[(1, 12, 15), float32],) {
  %433 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  (%433,)
}

def @func_29(%var_22: Tensor[(2, 12, 13), bool]) -> Tensor[(2, 12, 13), bool] {
  %434 = cast(%var_22, dtype="bool") /* ty=Tensor[(2, 12, 13), bool] */;
  %435 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(2, 12, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 12, 13), bool] */, dtype="bool") /* ty=Tensor[(2, 12, 13), bool] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%436, %437) /* ty=Tensor[(2, 12, 13), bool] */
}

def @func_6231() -> (Tensor[(15, 12, 15), float32],) {
  %438 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  %439 = cast(%438, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %440 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 12, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 12, 15), float32] */;
  %441 = mod(%439, %440) /* ty=Tensor[(15, 12, 15), float32] */;
  (%441,)
}

def @func_6604() -> (Tensor[(1, 12, 15), float32],) {
  %442 = @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %443 = %442.0;
  (%443,)
}

def @func_6881(%var_6845: Tensor[(14, 7, 16), bool], %var_6846: Tensor[(14, 7, 16), bool], %var_6879: Tensor[(726), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(14, 7, 16), float32], Tensor[(11, 6, 11), float64], Tensor[(726), float64]) {
  %444 = @func_5418() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %445 = cast(%var_6846, dtype="bool") /* ty=Tensor[(14, 7, 16), bool] */;
  %446 = shape_of(%var_6845, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%var_6845, dtype="bool") /* ty=Tensor[(14, 7, 16), bool] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %449 = logical_and(%447, %448) /* ty=Tensor[(14, 7, 16), bool] */;
  %450 = cast(%449, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  %451 = cast(%var_6879, dtype="float64") /* ty=Tensor[(726), float64] */;
  %452 = reshape(%451, newshape=[11, 6, 11]) /* ty=Tensor[(11, 6, 11), float64] */;
  %453 = @func_3418(%452) /* ty=(Tensor[(11, 6, 11), float64],) */;
  %454 = %444.0;
  %455 = asinh(%450) /* ty=Tensor[(14, 7, 16), float32] */;
  %456 = %453.0;
  (%454, %455, %456, %var_6879)
}

def @func_7639() -> (Tensor[(1, 12, 15), float32],) {
  %457 = @func_6802() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %458 = %457.0;
  (%458,)
}

def @func_3501(%var_3480: Tensor[(308, 1), float32]) -> (Tensor[(2, 7, 16), uint8], Tensor[(11, 14, 1), float32], Tensor[(22), float64], Tensor[(308, 1), float32], Tensor[(11, 14, 2), uint32]) {
  %459 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 7, 16), float64] */, dtype="float64") /* ty=Tensor[(2, 7, 16), float64] */;
  %460 = sinh(%459) /* ty=Tensor[(2, 7, 16), float64] */;
  %461 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 7, 16), float64] */, dtype="uint8") /* ty=Tensor[(2, 7, 16), uint8] */;
  %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%460, dtype="uint8") /* ty=Tensor[(2, 7, 16), uint8] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %465 = cast(meta[relay.Constant][38] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %466 = cast(%var_3480, dtype="float32") /* ty=Tensor[(308, 1), float32] */;
  %467 = reshape(%465, newshape=[22]) /* ty=Tensor[(22), float64] */;
  %468 = reshape(%466, newshape=[11, 14, 2]) /* ty=Tensor[(11, 14, 2), float32] */;
  %469 = @func_3179(%467, %468) /* ty=(Tensor[(11, 14, 1), float32], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(11, 14, 2), uint32], Tensor[(1, 2, 11), float64]) */;
  %470 = cast(meta[relay.Constant][38] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %471 = cast(%var_3480, dtype="float32") /* ty=Tensor[(308, 1), float32] */;
  %472 = reshape(%470, newshape=[22]) /* ty=Tensor[(22), float64] */;
  %473 = reshape(%471, newshape=[11, 14, 2]) /* ty=Tensor[(11, 14, 2), float32] */;
  %474 = @func_3179(%472, %473) /* ty=(Tensor[(11, 14, 1), float32], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(11, 14, 2), uint32], Tensor[(1, 2, 11), float64]) */;
  %475 = logical_xor(%463, %464) /* ty=Tensor[(2, 7, 16), uint8] */;
  %476 = %469.0;
  %477 = %474.3;
  (%475, %476, meta[relay.Constant][38] /* ty=Tensor[(22), float64] */, %var_3480, %477)
}

def @func_8154(%var_8147: Tensor[(13, 3, 7), uint8]) -> (Tensor[(13, 3, 7), bool],) {
  %478 = cast(meta[relay.Constant][39] /* ty=Tensor[(13, 3, 7), uint8] */, dtype="bool") /* ty=Tensor[(13, 3, 7), bool] */;
  %479 = shape_of(%var_8147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %480 = cast(%var_8147, dtype="bool") /* ty=Tensor[(13, 3, 7), bool] */;
  %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %482 = less(%480, %481) /* ty=Tensor[(13, 3, 7), bool] */;
  (%482,)
}

def @func_10061() -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(11, 14, 2), float32]) {
  %483 = @func_6300() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32]) */;
  %484 = @func_5418() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %485 = @func_9942() /* ty=Tensor[(11, 14, 2), uint32] */;
  %486 = cast(%485, dtype="float32") /* ty=Tensor[(11, 14, 2), float32] */;
  %487 = %483.0;
  %488 = %484.0;
  %489 = cos(%486) /* ty=Tensor[(11, 14, 2), float32] */;
  (%487, %488, %489)
}

def @func_7423(%var_7410: Tensor[(312), bool]) -> (Tensor[(1, 12, 15), float64], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) {
  %490 = @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %491 = %490.0;
  %492 = cast(%491, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
  %493 = cast(%var_7410, dtype="bool") /* ty=Tensor[(312), bool] */;
  %494 = reshape(%493, newshape=[2, 12, 13]) /* ty=Tensor[(2, 12, 13), bool] */;
  %495 = exp(%492) /* ty=Tensor[(1, 12, 15), float64] */;
  %496 = @func_29(%494) /* ty=Tensor[(2, 12, 13), bool] */;
  (%495, %496, %var_7410)
}

def @func_10024() -> Tensor[(13, 12, 15), bool] {
  %497 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %498 = %497.0;
  %499 = cast(%498, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
  %500 = cast(meta[relay.Constant][40] /* ty=Tensor[(13, 12, 15), float32] */, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  logical_and(%499, %500) /* ty=Tensor[(13, 12, 15), bool] */
}

def @func_9190() -> (Tensor[(1, 12, 15), float32],) {
  %501 = @func_6764() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %502 = %501.0;
  (%502,)
}

def @func_9366() -> (Tensor[(1, 12, 15), float32], Tensor[(495), uint16], Tensor[(495), uint16], Tensor[(308), float32]) {
  %503 = @func_7639() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %504 = cast(meta[relay.Constant][41] /* ty=Tensor[(495), uint16] */, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %505 = cast(meta[relay.Constant][42] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %506 = reshape(%504, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %507 = reshape(%505, newshape=[77, 4]) /* ty=Tensor[(77, 4), float32] */;
  %508 = @func_7610(%506, %507) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(2, 2, 10), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(77, 4), float32]) */;
  %509 = %503.0;
  %510 = %508.3;
  (%509, %510, meta[relay.Constant][41] /* ty=Tensor[(495), uint16] */, meta[relay.Constant][42] /* ty=Tensor[(308), float32] */)
}

def @func_1576(%var_1568: Tensor[(2, 2, 10), float32]) -> Tensor[(2, 2, 10), float32] {
  %511 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 2, 10), float32] */, dtype="float32") /* ty=Tensor[(2, 2, 10), float32] */;
  %512 = log2(%511) /* ty=Tensor[(2, 2, 10), float32] */;
  %513 = cast(%var_1568, dtype="float32") /* ty=Tensor[(2, 2, 10), float32] */;
  %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%512, dtype="float32") /* ty=Tensor[(2, 2, 10), float32] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%515, %516) /* ty=Tensor[(2, 2, 10), float32] */
}

def @func_9891() -> Tensor[(1, 12, 15), float32] {
  @func_8807() /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_9864(%var_9815: Tensor[(10, 13, 16), float32], %var_9858: Tensor[(10, 13, 16), float32]) -> (Tensor[(13, 12, 15), int64], Tensor[(10, 13, 16), int32], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(1, 12, 15), float32], Tensor[(10, 13, 16), bool]) {
  %517 = @func_9759() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(13, 12, 15), int64]) */;
  %518 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 80), float32] */, dtype="float32") /* ty=Tensor[(2, 80), float32] */;
  %519 = reshape(%518, newshape=[10, 1, 16]) /* ty=Tensor[(10, 1, 16), float32] */;
  %520 = @func_1109(%519) /* ty=(Tensor[(10, 1, 16), float32], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) */;
  %521 = %520.0;
  %522 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 80), float32] */, dtype="float32") /* ty=Tensor[(2, 80), float32] */;
  %523 = shape_of(%521, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(%521, dtype="float32") /* ty=Tensor[(10, 1, 16), float32] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %526 = floor_mod(%524, %525) /* ty=Tensor[(10, ?, 16), float32] */;
  %527 = cast(%526, dtype="int32") /* ty=Tensor[(10, ?, 16), int32] */;
  %528 = cast(%var_9815, dtype="int32") /* ty=Tensor[(10, 13, 16), int32] */;
  %529 = cast(meta[relay.Constant][45] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %530 = reshape(%529, newshape=[112, 1]) /* ty=Tensor[(112, 1), float64] */;
  %531 = @func_5469(%530) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64], Tensor[(112, 1), float64]) */;
  %532 = @func_9759() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(13, 12, 15), int64]) */;
  %533 = cast(%526, dtype="float64") /* ty=Tensor[(10, ?, 16), float64] */;
  %534 = cos(%533) /* ty=Tensor[(10, ?, 16), float64] */;
  %535 = cast(%var_9815, dtype="int8") /* ty=Tensor[(10, 13, 16), int8] */;
  %536 = cast(%534, dtype="int8") /* ty=Tensor[(10, ?, 16), int8] */;
  %537 = bitwise_xor(%535, %536) /* ty=Tensor[(10, 13, 16), int8] */;
  %538 = cast(%537, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %539 = atanh(%538) /* ty=Tensor[(10, 13, 16), float32] */;
  %540 = cast(%539, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %541 = sigmoid(%540) /* ty=Tensor[(10, 13, 16), float32] */;
  %542 = cast(%var_9858, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%541, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %546 = %517.2;
  %547 = right_shift(%527, %528) /* ty=Tensor[(10, 13, 16), int32] */;
  %548 = %531.1;
  %549 = %532.1;
  %550 = greater(%544, %545) /* ty=Tensor[(10, 13, 16), bool] */;
  (%546, %547, %548, meta[relay.Constant][45] /* ty=Tensor[(112), float64] */, %549, %550)
}

def @func_10142(%var_10136: Tensor[(308), float32]) -> (Tensor[(?, 12, 15), bool], Tensor[(40), float32], Tensor[(495), uint16], Tensor[(308), bool]) {
  %551 = @func_9190() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %552 = %551.0;
  %553 = @func_7801() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(5, 4, 4), bool], Tensor[(80), int64]) */;
  %554 = %553.0;
  %555 = cast(%554, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
  %556 = shape_of(%552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%552, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %559 = cast(meta[relay.Constant][46] /* ty=Tensor[(495), uint16] */, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %560 = cast(meta[relay.Constant][47] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %561 = reshape(%559, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %562 = reshape(%560, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %563 = @func_6077(%561, %562) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(40), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(308), float32], Tensor[(2, 12, 13), bool], Tensor[(1, 12, 15), float32]) */;
  %564 = cast(%var_10136, dtype="bool") /* ty=Tensor[(308), bool] */;
  %565 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(308), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %566 = cast(meta[relay.Constant][47] /* ty=Tensor[(308), float32] */, dtype="bool") /* ty=Tensor[(308), bool] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?), bool] */;
  %568 = logical_and(%557, %558) /* ty=Tensor[(?, 12, 15), bool] */;
  %569 = %563.1;
  %570 = greater(%566, %567) /* ty=Tensor[(308), bool] */;
  (%568, %569, meta[relay.Constant][46] /* ty=Tensor[(495), uint16] */, %570)
}

def @func_9970() -> (Tensor[(1, 12, 15), float32],) {
  %571 = @func_6107() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %572 = %571.1;
  (%572,)
}

def @func_9542() -> Tensor[(1, 12, 15), float32] {
  %573 = @func_7471() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %574 = %573.2;
  %575 = cast(%574, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  sinh(%575) /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_8896(%var_8885: Tensor[(1, 308), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(495), uint16], Tensor[(1, 308), float32], Tensor[(12, 12, 15), float32]) {
  %576 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %577 = cast(meta[relay.Constant][48] /* ty=Tensor[(495), uint16] */, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %578 = cast(%var_8885, dtype="float32") /* ty=Tensor[(1, 308), float32] */;
  %579 = reshape(%577, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %580 = reshape(%578, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %581 = @func_6077(%579, %580) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(40), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(308), float32], Tensor[(2, 12, 13), bool], Tensor[(1, 12, 15), float32]) */;
  %582 = %581.6;
  %583 = cast(%582, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %584 = cast(meta[relay.Constant][49] /* ty=Tensor[(12, 12, 15), float32] */, dtype="float32") /* ty=Tensor[(12, 12, 15), float32] */;
  %585 = %576.0;
  %586 = mod(%583, %584) /* ty=Tensor[(12, 12, 15), float32] */;
  (%585, meta[relay.Constant][48] /* ty=Tensor[(495), uint16] */, %var_8885, %586)
}

def @func_7801() -> (Tensor[(1, 12, 15), float32], Tensor[(5, 4, 4), bool], Tensor[(80), int64]) {
  %587 = @func_6802() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %588 = cast(meta[relay.Constant][50] /* ty=Tensor[(80), int64] */, dtype="int64") /* ty=Tensor[(80), int64] */;
  %589 = cast(meta[relay.Constant][50] /* ty=Tensor[(80), int64] */, dtype="int64") /* ty=Tensor[(80), int64] */;
  %590 = reshape(%588, newshape=[5, 4, 4]) /* ty=Tensor[(5, 4, 4), int64] */;
  %591 = reshape(%589, newshape=[5, 4, 4]) /* ty=Tensor[(5, 4, 4), int64] */;
  %592 = @func_7232(%590, %591) /* ty=(Tensor[(5, 4, 4), bool],) */;
  %593 = %587.0;
  %594 = %592.0;
  (%593, %594, meta[relay.Constant][50] /* ty=Tensor[(80), int64] */)
}

def @func_10294() -> Tensor[(15, 12, 15), float32] {
  %595 = @func_7501() /* ty=(Tensor[(15, 12, 15), float32], Tensor[(?, 12, 15), float32]) */;
  %595.0
}

def @func_8630(%var_8606: Tensor[(4, 2145), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(36), int64], Tensor[(4, 2145), bool], Tensor[(4, 2145), float32]) {
  %596 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %597 = cast(meta[relay.Constant][51] /* ty=Tensor[(36), int64] */, dtype="int64") /* ty=Tensor[(36), int64] */;
  %598 = reshape(%597, newshape=[9, 4]) /* ty=Tensor[(9, 4), int64] */;
  %599 = @func_5699(%598) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(4, 9, 1), int64], int64, Tensor[(9, 4), int64], Tensor[(13, 11, 15), float64], Tensor[(143), float64], Tensor[(1, 2145), float64]) */;
  %600 = %599.6;
  %601 = cast(%600, dtype="bool") /* ty=Tensor[(1, 2145), bool] */;
  %602 = cast(%var_8606, dtype="bool") /* ty=Tensor[(4, 2145), bool] */;
  %603 = cast(%var_8606, dtype="float64") /* ty=Tensor[(4, 2145), float64] */;
  %604 = erf(%603) /* ty=Tensor[(4, 2145), float64] */;
  %605 = cast(%604, dtype="float32") /* ty=Tensor[(4, 2145), float32] */;
  %606 = %596.0;
  %607 = not_equal(%601, %602) /* ty=Tensor[(4, 2145), bool] */;
  %608 = acosh(%605) /* ty=Tensor[(4, 2145), float32] */;
  (%606, meta[relay.Constant][51] /* ty=Tensor[(36), int64] */, %607, %608)
}

def @func_5699(%var_5686: Tensor[(9, 4), int64]) -> (Tensor[(1, 12, 15), float32], Tensor[(4, 9, 1), int64], int64, Tensor[(9, 4), int64], Tensor[(13, 11, 15), float64], Tensor[(143), float64], Tensor[(1, 2145), float64]) {
  %609 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %610 = cast(%var_5686, dtype="int64") /* ty=Tensor[(9, 4), int64] */;
  %611 = reshape(%609, newshape=[]) /* ty=int64 */;
  %612 = reshape(%610, newshape=[4, 9, 1]) /* ty=Tensor[(4, 9, 1), int64] */;
  %613 = @func_5128(%611, %612) /* ty=(Tensor[(4, 9, 1), int64], Tensor[(495), uint16], Tensor[(450), bool]) */;
  %614 = cast(meta[relay.Constant][52] /* ty=Tensor[(143), float64] */, dtype="float64") /* ty=Tensor[(143), float64] */;
  %615 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 2145), float64] */, dtype="float64") /* ty=Tensor[(1, 2145), float64] */;
  %616 = reshape(%614, newshape=[13, 11, 1]) /* ty=Tensor[(13, 11, 1), float64] */;
  %617 = reshape(%615, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float64] */;
  %618 = @func_4631(%616, %617) /* ty=(Tensor[(13, 11, 15), float64],) */;
  %619 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  %620 = %613.0;
  %621 = %618.0;
  (%619, %620, 8 /* ty=int64 */, %var_5686, %621, meta[relay.Constant][52] /* ty=Tensor[(143), float64] */, meta[relay.Constant][53] /* ty=Tensor[(1, 2145), float64] */)
}

def @func_3555(%var_3552: Tensor[(10, 4, 2), float64]) -> Tensor[(10, 4, 2), float64] {
  %622 = cast(%var_3552, dtype="float64") /* ty=Tensor[(10, 4, 2), float64] */;
  asin(%622) /* ty=Tensor[(10, 4, 2), float64] */
}

def @func_9198() -> Tensor[(1, 12, 15), float32] {
  %623 = @func_6107() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %623.1
}

def @func_5128(%var_5108: int64, %var_5109: Tensor[(4, 9, 1), int64]) -> (Tensor[(4, 9, 1), int64], Tensor[(495), uint16], Tensor[(450), bool]) {
  %624 = cast(%var_5108, dtype="int64") /* ty=int64 */;
  %625 = cast(%var_5109, dtype="int64") /* ty=Tensor[(4, 9, 1), int64] */;
  %626 = cast(meta[relay.Constant][54] /* ty=Tensor[(495), uint16] */, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %627 = reshape(%626, newshape=[11, 15, 3]) /* ty=Tensor[(11, 15, 3), uint16] */;
  %628 = @func_3856(%627) /* ty=(Tensor[(11, 15, 3), uint16], Tensor[(2, 12, 13), bool], Tensor[(450), float32], Tensor[(2, 264), float32]) */;
  %629 = %628.2;
  %630 = cast(%629, dtype="bool") /* ty=Tensor[(450), bool] */;
  %631 = cast(%var_5108, dtype="bool") /* ty=bool */;
  %632 = bitwise_and(%624, %625) /* ty=Tensor[(4, 9, 1), int64] */;
  %633 = logical_and(%630, %631) /* ty=Tensor[(450), bool] */;
  (%632, meta[relay.Constant][54] /* ty=Tensor[(495), uint16] */, %633)
}

def @func_5736() -> (Tensor[(1, 12, 15), float32],) {
  %634 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  (%634,)
}

def @func_3213(%var_3195: Tensor[(15, 5, 15), uint32]) -> Tensor[(15, 5, 15), uint32] {
  %635 = cast(%var_3195, dtype="uint32") /* ty=Tensor[(15, 5, 15), uint32] */;
  %636 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(15, 5, 15), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %637 = cast(meta[relay.Constant][55] /* ty=Tensor[(15, 5, 15), uint32] */, dtype="uint32") /* ty=Tensor[(15, 5, 15), uint32] */;
  %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_and(%637, %638) /* ty=Tensor[(15, 5, 15), uint32] */
}

def @func_8022(%var_8001: Tensor[(112), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(112), float64], Tensor[(1, 12, 15), float64]) {
  %639 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %640 = cast(%var_8001, dtype="float64") /* ty=Tensor[(112), float64] */;
  %641 = reshape(%640, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %642 = @func_7571(%641) /* ty=(Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(112), float64]) */;
  %643 = %642.0;
  %644 = cast(%643, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
  %645 = %639.0;
  %646 = sqrt(%644) /* ty=Tensor[(1, 12, 15), float64] */;
  (%645, %var_8001, %646)
}

def @func_4003(%var_3998: int64, %var_3999: Tensor[(16, 5, 15), int64]) -> (Tensor[(16, 5, 15), int64],) {
  %647 = cast(%var_3998, dtype="int64") /* ty=int64 */;
  %648 = cast(%var_3999, dtype="int64") /* ty=Tensor[(16, 5, 15), int64] */;
  %649 = bitwise_and(%647, %648) /* ty=Tensor[(16, 5, 15), int64] */;
  (%649,)
}

def @func_8659(%var_8651: Tensor[(1, 1200), int64]) -> (Tensor[(16, 12, 15), bool], Tensor[(16, 5, 15), int64], int64, Tensor[(1, 1200), int64]) {
  %650 = @func_8051() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %651 = %650.0;
  %652 = cast(%651, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
  %653 = cast(meta[relay.Constant][56] /* ty=Tensor[(16, 12, 15), float32] */, dtype="bool") /* ty=Tensor[(16, 12, 15), bool] */;
  %654 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %655 = cast(%var_8651, dtype="int64") /* ty=Tensor[(1, 1200), int64] */;
  %656 = reshape(%654, newshape=[]) /* ty=int64 */;
  %657 = reshape(%655, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), int64] */;
  %658 = @func_4003(%656, %657) /* ty=(Tensor[(16, 5, 15), int64],) */;
  %659 = less(%652, %653) /* ty=Tensor[(16, 12, 15), bool] */;
  %660 = %658.0;
  (%659, %660, 8 /* ty=int64 */, %var_8651)
}

def @func_8936(%var_8926: uint64) -> (Tensor[(10, 11, 7), uint64],) {
  %661 = cast(%var_8926, dtype="uint64") /* ty=uint64 */;
  %662 = cast(meta[relay.Constant][57] /* ty=Tensor[(10, 11, 7), uint64] */, dtype="uint64") /* ty=Tensor[(10, 11, 7), uint64] */;
  %663 = maximum(%661, %662) /* ty=Tensor[(10, 11, 7), uint64] */;
  (%663,)
}

def @func_7854() -> Tensor[(1, 12, 15), float32] {
  %664 = @func_6802() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %664.0
}

def @func_6300() -> (Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32]) {
  %665 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %666 = %665.0;
  %667 = cast(%666, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %668 = cast(%666, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %669 = cos(%668) /* ty=Tensor[(1, 12, 15), float32] */;
  %670 = cast(%666, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %671 = shape_of(%669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%669, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %674 = atan(%667) /* ty=Tensor[(1, 12, 15), float32] */;
  %675 = minimum(%672, %673) /* ty=Tensor[(?, 12, 15), float32] */;
  (%674, %675)
}

def @func_7571(%var_7569: Tensor[(112), float64]) -> (Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(112), float64]) {
  %676 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  %677 = cast(%676, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
  %678 = cast(%var_7569, dtype="float64") /* ty=Tensor[(112), float64] */;
  %679 = reshape(%678, newshape=[112, 1]) /* ty=Tensor[(112, 1), float64] */;
  %680 = @func_5469(%679) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64], Tensor[(112, 1), float64]) */;
  %681 = sigmoid(%677) /* ty=Tensor[(1, 12, 15), float64] */;
  %682 = %680.0;
  (%681, %682, %var_7569)
}

def @func_8458(%var_8434: Tensor[(5, 4, 16), uint32], %var_8446: Tensor[(5, 4, 16), uint32]) -> (Tensor[(15, 12, 15), float32], Tensor[(16, 12, 15), uint64], Tensor[(1440, 2), float32], Tensor[(5, 4, 16), bool], Tensor[(5, 4, 16), int16]) {
  %683 = @func_7501() /* ty=(Tensor[(15, 12, 15), float32], Tensor[(?, 12, 15), float32]) */;
  %684 = cast(meta[relay.Constant][58] /* ty=Tensor[(1440, 2), float32] */, dtype="float32") /* ty=Tensor[(1440, 2), float32] */;
  %685 = reshape(%684, newshape=[16, 12, 15]) /* ty=Tensor[(16, 12, 15), float32] */;
  %686 = cast(meta[relay.Constant][59] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %687 = cast(%var_8434, dtype="uint32") /* ty=Tensor[(5, 4, 16), uint32] */;
  %688 = bitwise_and(%686, %687) /* ty=Tensor[(5, 4, 16), uint32] */;
  %689 = cast(%var_8446, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%688, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %693 = cast(%688, dtype="int16") /* ty=Tensor[(5, 4, 16), int16] */;
  %694 = shape_of(%var_8446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%var_8446, dtype="int16") /* ty=Tensor[(5, 4, 16), int16] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %697 = %683.0;
  %698 = @func_7362(%685) /* ty=Tensor[(16, 12, 15), uint64] */;
  %699 = equal(%691, %692) /* ty=Tensor[(5, 4, 16), bool] */;
  %700 = maximum(%695, %696) /* ty=Tensor[(5, 4, 16), int16] */;
  (%697, %698, meta[relay.Constant][58] /* ty=Tensor[(1440, 2), float32] */, %699, %700)
}

def @func_5469(%var_5464: Tensor[(112, 1), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64], Tensor[(112, 1), float64]) {
  %701 = cast(%var_5464, dtype="float64") /* ty=Tensor[(112, 1), float64] */;
  %702 = reshape(%701, newshape=[16, 1, 7]) /* ty=Tensor[(16, 1, 7), float64] */;
  %703 = @func_2536(%702) /* ty=(Tensor[(16, 1, 7), float64],) */;
  %704 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  %705 = %703.0;
  (%704, %705, %var_5464)
}

def @func_8301() -> (Tensor[(1, 12, 15), float32],) {
  %706 = @func_7854() /* ty=Tensor[(1, 12, 15), float32] */;
  (%706,)
}

def @func_3179(%var_3148: Tensor[(22), float64], %var_3152: Tensor[(11, 14, 2), float32]) -> (Tensor[(11, 14, 1), float32], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(11, 14, 2), uint32], Tensor[(1, 2, 11), float64]) {
  %707 = cast(meta[relay.Constant][60] /* ty=Tensor[(11, 14, 1), float32] */, dtype="float32") /* ty=Tensor[(11, 14, 1), float32] */;
  %708 = cast(%var_3148, dtype="float64") /* ty=Tensor[(22), float64] */;
  %709 = reshape(%708, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), float64] */;
  %710 = @func_3115(%709) /* ty=(Tensor[(1, 2, 11), float64],) */;
  %711 = cast(meta[relay.Constant][60] /* ty=Tensor[(11, 14, 1), float32] */, dtype="uint32") /* ty=Tensor[(11, 14, 1), uint32] */;
  %712 = cast(%var_3152, dtype="uint32") /* ty=Tensor[(11, 14, 2), uint32] */;
  %713 = %710.0;
  %714 = cast(%713, dtype="float64") /* ty=Tensor[(1, 2, 11), float64] */;
  %715 = reshape(%714, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), float64] */;
  %716 = @func_3115(%715) /* ty=(Tensor[(1, 2, 11), float64],) */;
  %717 = atan(%707) /* ty=Tensor[(11, 14, 1), float32] */;
  %718 = subtract(%711, %712) /* ty=Tensor[(11, 14, 2), uint32] */;
  %719 = %716.0;
  (%717, %713, %var_3148, %718, %719)
}

def @func_7471() -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) {
  %720 = @func_6604() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %721 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %722 = %720.0;
  %723 = @func_7104() /* ty=Tensor[(1, 12, 15), float32] */;
  %724 = %721.0;
  (%722, %723, %724)
}

def @func_8671(%var_8667: Tensor[(8, 5, 2), float64]) -> Tensor[(8, 5, 2), float64] {
  %725 = cast(%var_8667, dtype="float64") /* ty=Tensor[(8, 5, 2), float64] */;
  atanh(%725) /* ty=Tensor[(8, 5, 2), float64] */
}

def @func_9301() -> Tensor[(2, 3, 7), float64] {
  %726 = cast(meta[relay.Constant][61] /* ty=Tensor[(2, 3, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 7), float64] */;
  rsqrt(%726) /* ty=Tensor[(2, 3, 7), float64] */
}

def @func_9646() -> Tensor[(1, 12, 15), float32] {
  %727 = @func_8830() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %727.0
}

def @func_7104() -> Tensor[(1, 12, 15), float32] {
  %728 = @func_5418() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %728.0
}

def @func_9759() -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(13, 12, 15), int64]) {
  %729 = @func_7526() /* ty=Tensor[(1, 12, 15), float32] */;
  %730 = cast(%729, dtype="int64") /* ty=Tensor[(1, 12, 15), int64] */;
  %731 = cast(meta[relay.Constant][62] /* ty=Tensor[(13, 12, 15), float32] */, dtype="int64") /* ty=Tensor[(13, 12, 15), int64] */;
  %732 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  %733 = @func_7526() /* ty=Tensor[(1, 12, 15), float32] */;
  %734 = bitwise_xor(%730, %731) /* ty=Tensor[(13, 12, 15), int64] */;
  (%732, %733, %734)
}

def @func_9038() -> (Tensor[(36), int64],) {
  %735 = @func_8782() /* ty=(Tensor[(?, 12, 15), bool], Tensor[(392, 4), bool], int64, Tensor[(36), int64]) */;
  %736 = %735.3;
  (%736,)
}

def @main(%var_10367: Tensor[(112), float64]) -> (Tensor[(112), float64], Tensor[(?, 12, 15), uint64]) {
  %737 = @func_8051() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %738 = %737.0;
  %739 = cast(%var_10367, dtype="float64") /* ty=Tensor[(112), float64] */;
  %740 = reshape(%739, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %741 = @func_7571(%740) /* ty=(Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(112), float64]) */;
  %742 = %741.1;
  %743 = cast(%742, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
  %744 = asin(%743) /* ty=Tensor[(1, 12, 15), float64] */;
  %745 = cast(%744, dtype="uint64") /* ty=Tensor[(1, 12, 15), uint64] */;
  %746 = shape_of(%738, dtype="int32") /* ty=Tensor[(3), int32] */;
  %747 = cast(%738, dtype="uint64") /* ty=Tensor[(1, 12, 15), uint64] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %749 = left_shift(%747, %748) /* ty=Tensor[(?, 12, 15), uint64] */;
  (%var_10367, %749)
}

def @func_9637(%var_9591: Tensor[(4, 4, 3), float64]) -> (Tensor[(4, 4, 3), bool], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32], Tensor[(4, 4, 3), float64], Tensor[(16, 8, 9), float32], Tensor[(4, 4, 3), float32], Tensor[(1, 2, 11), float64], Tensor[(1, 22), float64]) {
  %750 = cast(meta[relay.Constant][63] /* ty=Tensor[(4, 4, 3), float64] */, dtype="bool") /* ty=Tensor[(4, 4, 3), bool] */;
  %751 = shape_of(%var_9591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %752 = cast(%var_9591, dtype="bool") /* ty=Tensor[(4, 4, 3), bool] */;
  %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %754 = @func_5971() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %755 = @func_6802() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %756 = @func_7501() /* ty=(Tensor[(15, 12, 15), float32], Tensor[(?, 12, 15), float32]) */;
  %757 = cast(%var_9591, dtype="float64") /* ty=Tensor[(4, 4, 3), float64] */;
  %758 = rsqrt(%757) /* ty=Tensor[(4, 4, 3), float64] */;
  %759 = cast(%758, dtype="float64") /* ty=Tensor[(4, 4, 3), float64] */;
  %760 = @func_8143() /* ty=(Tensor[(16, 8, 9), float32],) */;
  %761 = cast(%758, dtype="float32") /* ty=Tensor[(4, 4, 3), float32] */;
  %762 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 22), float64] */, dtype="float64") /* ty=Tensor[(1, 22), float64] */;
  %763 = reshape(%762, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), float64] */;
  %764 = @func_3115(%763) /* ty=(Tensor[(1, 2, 11), float64],) */;
  %765 = less_equal(%752, %753) /* ty=Tensor[(4, 4, 3), bool] */;
  %766 = %754.1;
  %767 = %755.0;
  %768 = %756.1;
  %769 = tan(%759) /* ty=Tensor[(4, 4, 3), float64] */;
  %770 = %760.0;
  %771 = erf(%761) /* ty=Tensor[(4, 4, 3), float32] */;
  %772 = %764.0;
  (%765, %766, %767, %768, %769, %770, %771, %772, meta[relay.Constant][64] /* ty=Tensor[(1, 22), float64] */)
}

def @func_10256(%var_10220: Tensor[(2, 12, 15), float32], %var_10244: Tensor[(10, 12, 15), float32]) -> (Tensor[(2, 12, 15), bool], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(1, 12, 15), float32], Tensor[(10, 12, 15), float64]) {
  %773 = @func_9366() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(495), uint16], Tensor[(495), uint16], Tensor[(308), float32]) */;
  %774 = %773.0;
  %775 = cast(%774, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
  %776 = cast(%var_10220, dtype="bool") /* ty=Tensor[(2, 12, 15), bool] */;
  %777 = cast(meta[relay.Constant][65] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %778 = reshape(%777, newshape=[16, 1, 7]) /* ty=Tensor[(16, 1, 7), float64] */;
  %779 = @func_2536(%778) /* ty=(Tensor[(16, 1, 7), float64],) */;
  %780 = cast(%774, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
  %781 = cast(%var_10244, dtype="float64") /* ty=Tensor[(10, 12, 15), float64] */;
  %782 = logical_or(%775, %776) /* ty=Tensor[(2, 12, 15), bool] */;
  %783 = %779.0;
  %784 = @func_7104() /* ty=Tensor[(1, 12, 15), float32] */;
  %785 = floor_divide(%780, %781) /* ty=Tensor[(10, 12, 15), float64] */;
  (%782, %783, meta[relay.Constant][65] /* ty=Tensor[(112), float64] */, %784, %785)
}

def @func_10181(%var_10163: Tensor[(308), float32], %var_10174: Tensor[(11, 66), float64], %var_10177: Tensor[(640), int32], %var_10178: Tensor[(312), bool]) -> (Tensor[(1, 12, 15), float32], Tensor[(1, 308), float32], Tensor[(308), float32], Tensor[(1, 12, 15), float32], Tensor[(14, 7, 16), float32], Tensor[(1568), bool], Tensor[(11, 66), float64], Tensor[(528), float32], Tensor[(640), int32], Tensor[(312), bool]) {
  %786 = @func_8051() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %787 = cast(%var_10163, dtype="float32") /* ty=Tensor[(308), float32] */;
  %788 = reshape(%787, newshape=[1, 308]) /* ty=Tensor[(1, 308), float32] */;
  %789 = @func_8896(%788) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(495), uint16], Tensor[(1, 308), float32], Tensor[(12, 12, 15), float32]) */;
  %790 = @func_7471() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %791 = cast(meta[relay.Constant][66] /* ty=Tensor[(1568), bool] */, dtype="bool") /* ty=Tensor[(1568), bool] */;
  %792 = cast(meta[relay.Constant][66] /* ty=Tensor[(1568), bool] */, dtype="bool") /* ty=Tensor[(1568), bool] */;
  %793 = cast(%var_10174, dtype="float64") /* ty=Tensor[(11, 66), float64] */;
  %794 = reshape(%791, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), bool] */;
  %795 = reshape(%792, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), bool] */;
  %796 = reshape(%793, newshape=[726]) /* ty=Tensor[(726), float64] */;
  %797 = @func_6881(%794, %795, %796) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(14, 7, 16), float32], Tensor[(11, 6, 11), float64], Tensor[(726), float64]) */;
  %798 = cast(%var_10177, dtype="int32") /* ty=Tensor[(640), int32] */;
  %799 = cast(%var_10178, dtype="bool") /* ty=Tensor[(312), bool] */;
  %800 = reshape(%798, newshape=[8, 16, 5]) /* ty=Tensor[(8, 16, 5), int32] */;
  %801 = reshape(%799, newshape=[3, 104]) /* ty=Tensor[(3, 104), bool] */;
  %802 = @func_8998(%800, %801) /* ty=(Tensor[(8, 16, 5), float64], Tensor[(2, 12, 13), bool], Tensor[(528), float32], Tensor[(3, 104), bool]) */;
  %803 = %786.0;
  %804 = %789.2;
  %805 = %790.0;
  %806 = %797.1;
  %807 = %802.2;
  (%803, %804, %var_10163, %805, %806, meta[relay.Constant][66] /* ty=Tensor[(1568), bool] */, %var_10174, %807, %var_10177, %var_10178)
}

def @func_4987(%var_4970: Tensor[(5, 12, 3), float32], %var_4971: Tensor[(5, 12, 3), float32]) -> Tensor[(5, 12, 3), float32] {
  %808 = cast(%var_4971, dtype="float32") /* ty=Tensor[(5, 12, 3), float32] */;
  %809 = shape_of(%var_4970, dtype="int32") /* ty=Tensor[(3), int32] */;
  %810 = cast(%var_4970, dtype="float32") /* ty=Tensor[(5, 12, 3), float32] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%810, %811) /* ty=Tensor[(5, 12, 3), float32] */
}

def @func_6500(%var_6490: Tensor[(15, 12, 15), float32]) -> (Tensor[(15, 12, 15), float64],) {
  %812 = @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %813 = %812.0;
  %814 = cast(%813, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
  %815 = cast(%var_6490, dtype="float64") /* ty=Tensor[(15, 12, 15), float64] */;
  %816 = power(%814, %815) /* ty=Tensor[(15, 12, 15), float64] */;
  (%816,)
}

def @func_7501() -> (Tensor[(15, 12, 15), float32], Tensor[(?, 12, 15), float32]) {
  %817 = @func_6231() /* ty=(Tensor[(15, 12, 15), float32],) */;
  %818 = %817.0;
  %819 = @func_6347() /* ty=Tensor[(?, 12, 15), float32] */;
  (%818, %819)
}

def @func_5929() -> (Tensor[(1, 12, 15), float32],) {
  %820 = @func_5418() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %821 = %820.0;
  (%821,)
}

def @func_4325(%var_4295: uint32, %var_4296: Tensor[(10, 2, 15), uint32], %var_4313: Tensor[(450), float32]) -> (Tensor[(10, 2, 15), uint32], Tensor[(10, 5, 9), float64], Tensor[(450), float32], Tensor[(528), float32], Tensor[(16, 1, 7), float64], Tensor[(2, 56), float64]) {
  %822 = cast(%var_4295, dtype="uint32") /* ty=uint32 */;
  %823 = cast(%var_4296, dtype="uint32") /* ty=Tensor[(10, 2, 15), uint32] */;
  %824 = cast(%var_4313, dtype="float32") /* ty=Tensor[(450), float32] */;
  %825 = cast(meta[relay.Constant][67] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %826 = cast(%var_4313, dtype="float32") /* ty=Tensor[(450), float32] */;
  %827 = reshape(%824, newshape=[10, 5, 9]) /* ty=Tensor[(10, 5, 9), float32] */;
  %828 = reshape(%825, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %829 = reshape(%826, newshape=[10, 5, 9]) /* ty=Tensor[(10, 5, 9), float32] */;
  %830 = @func_2842(%827, %828, %829) /* ty=(Tensor[(2, 12, 13), bool], Tensor[(528), float32], Tensor[(6, 52), bool], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(10, 5, 9), float64], Tensor[(10, 5, 9), float64]) */;
  %831 = cast(meta[relay.Constant][68] /* ty=Tensor[(2, 56), float64] */, dtype="float64") /* ty=Tensor[(2, 56), float64] */;
  %832 = reshape(%831, newshape=[16, 1, 7]) /* ty=Tensor[(16, 1, 7), float64] */;
  %833 = @func_2536(%832) /* ty=(Tensor[(16, 1, 7), float64],) */;
  %834 = bitwise_xor(%822, %823) /* ty=Tensor[(10, 2, 15), uint32] */;
  %835 = %830.6;
  %836 = %833.0;
  (%834, %835, %var_4313, meta[relay.Constant][67] /* ty=Tensor[(528), float32] */, %836, meta[relay.Constant][68] /* ty=Tensor[(2, 56), float64] */)
}

def @func_6802() -> (Tensor[(1, 12, 15), float32],) {
  %837 = @func_6604() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %838 = %837.0;
  (%838,)
}

def @func_8807() -> Tensor[(1, 12, 15), float32] {
  %839 = @func_8301() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %839.0
}

def @func_9511(%var_9504: Tensor[(495, 1), uint16]) -> (Tensor[(143), float64], Tensor[(2, 12, 13), bool], Tensor[(495, 1), uint16], Tensor[(308), float32]) {
  %840 = @func_8324() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(143), float64], Tensor[(36), int64]) */;
  %841 = cast(%var_9504, dtype="uint16") /* ty=Tensor[(495, 1), uint16] */;
  %842 = cast(meta[relay.Constant][69] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %843 = reshape(%841, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %844 = reshape(%842, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %845 = @func_6077(%843, %844) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(40), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(308), float32], Tensor[(2, 12, 13), bool], Tensor[(1, 12, 15), float32]) */;
  %846 = %840.1;
  %847 = %845.5;
  (%846, %847, %var_9504, meta[relay.Constant][69] /* ty=Tensor[(308), float32] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5157() -> Tensor[(1, 12, 15), float32] {
  %1 = fn () -> Tensor[(1, 12, 15), float32] {
    %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 12, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
    asinh(%0) /* ty=Tensor[(1, 12, 15), float32] */
  };
  %1() /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_4991(%var_4989: Tensor[(5, 12, 3), float32], %var_4990: Tensor[(5, 12, 3), float32]) -> Tensor[(5, 12, 3), float32] {
  @func_4987(%var_4989, %var_4990) /* ty=Tensor[(5, 12, 3), float32] */
}

def @func_7854() -> Tensor[(1, 12, 15), float32] {
  %2 = @func_6802() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %2.0
}

def @func_4409(%var_4407: Tensor[(3, 16, 2), float32]) -> Tensor[(3, 16, 2), float32] {
  @func_4406(%var_4407) /* ty=Tensor[(3, 16, 2), float32] */
}

def @func_5931() -> (Tensor[(1, 12, 15), float32],) {
  @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_9972() -> (Tensor[(1, 12, 15), float32],) {
  @func_9970() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_8217(%var_8215: float32, %var_8216: Tensor[(16, 8, 16), float32]) -> (Tensor[(16, 8, 16), float32],) {
  @func_8213(%var_8215, %var_8216) /* ty=(Tensor[(16, 8, 16), float32],) */
}

def @func_8896(%var_8885: Tensor[(1, 308), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(495), uint16], Tensor[(1, 308), float32], Tensor[(12, 12, 15), float32]) {
  %3 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(495), uint16] */, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %5 = cast(%var_8885, dtype="float32") /* ty=Tensor[(1, 308), float32] */;
  %6 = reshape(%4, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %7 = reshape(%5, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %8 = @func_6077(%6, %7) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(40), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(308), float32], Tensor[(2, 12, 13), bool], Tensor[(1, 12, 15), float32]) */;
  %9 = %8.6;
  %10 = cast(%9, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %11 = cast(meta[relay.Constant][2] /* ty=Tensor[(12, 12, 15), float32] */, dtype="float32") /* ty=Tensor[(12, 12, 15), float32] */;
  %12 = %3.0;
  %13 = mod(%10, %11) /* ty=Tensor[(12, 12, 15), float32] */;
  (%12, meta[relay.Constant][1] /* ty=Tensor[(495), uint16] */, %var_8885, %13)
}

def @func_7639() -> (Tensor[(1, 12, 15), float32],) {
  %14 = @func_6802() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %15 = %14.0;
  (%15,)
}

def @func_8325() -> (Tensor[(1, 12, 15), float32], Tensor[(143), float64], Tensor[(36), int64]) {
  %22 = fn () -> (Tensor[(1, 12, 15), float32], Tensor[(143), float64], Tensor[(36), int64]) {
    %16 = @func_6107() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
    %17 = cast(meta[relay.Constant][3] /* ty=Tensor[(36), int64] */, dtype="int64") /* ty=Tensor[(36), int64] */;
    %18 = reshape(%17, newshape=[9, 4]) /* ty=Tensor[(9, 4), int64] */;
    %19 = @func_5699(%18) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(4, 9, 1), int64], int64, Tensor[(9, 4), int64], Tensor[(13, 11, 15), float64], Tensor[(143), float64], Tensor[(1, 2145), float64]) */;
    %20 = %16.1;
    %21 = %19.5;
    (%20, %21, meta[relay.Constant][3] /* ty=Tensor[(36), int64] */)
  };
  %22() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(143), float64], Tensor[(36), int64]) */
}

def @func_7803() -> (Tensor[(1, 12, 15), float32], Tensor[(5, 4, 4), bool], Tensor[(80), int64]) {
  @func_7801() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(5, 4, 4), bool], Tensor[(80), int64]) */
}

def @func_9301() -> Tensor[(2, 3, 7), float64] {
  %23 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 3, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 7), float64] */;
  rsqrt(%23) /* ty=Tensor[(2, 3, 7), float64] */
}

def @func_8632(%var_8631: Tensor[(4, 2145), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(36), int64], Tensor[(4, 2145), bool], Tensor[(4, 2145), float32]) {
  %37 = fn (%var_8606: Tensor[(4, 2145), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(36), int64], Tensor[(4, 2145), bool], Tensor[(4, 2145), float32]) {
    %24 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %25 = cast(meta[relay.Constant][5] /* ty=Tensor[(36), int64] */, dtype="int64") /* ty=Tensor[(36), int64] */;
    %26 = reshape(%25, newshape=[9, 4]) /* ty=Tensor[(9, 4), int64] */;
    %27 = @func_5699(%26) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(4, 9, 1), int64], int64, Tensor[(9, 4), int64], Tensor[(13, 11, 15), float64], Tensor[(143), float64], Tensor[(1, 2145), float64]) */;
    %28 = %27.6;
    %29 = cast(%28, dtype="bool") /* ty=Tensor[(1, 2145), bool] */;
    %30 = cast(%var_8606, dtype="bool") /* ty=Tensor[(4, 2145), bool] */;
    %31 = cast(%var_8606, dtype="float64") /* ty=Tensor[(4, 2145), float64] */;
    %32 = erf(%31) /* ty=Tensor[(4, 2145), float64] */;
    %33 = cast(%32, dtype="float32") /* ty=Tensor[(4, 2145), float32] */;
    %34 = %24.0;
    %35 = not_equal(%29, %30) /* ty=Tensor[(4, 2145), bool] */;
    %36 = acosh(%33) /* ty=Tensor[(4, 2145), float32] */;
    (%34, meta[relay.Constant][5] /* ty=Tensor[(36), int64] */, %35, %36)
  };
  %37(%var_8631) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(36), int64], Tensor[(4, 2145), bool], Tensor[(4, 2145), float32]) */
}

def @func_9511(%var_9504: Tensor[(495, 1), uint16]) -> (Tensor[(143), float64], Tensor[(2, 12, 13), bool], Tensor[(495, 1), uint16], Tensor[(308), float32]) {
  %38 = @func_8324() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(143), float64], Tensor[(36), int64]) */;
  %39 = cast(%var_9504, dtype="uint16") /* ty=Tensor[(495, 1), uint16] */;
  %40 = cast(meta[relay.Constant][6] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
  %41 = reshape(%39, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %42 = reshape(%40, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %43 = @func_6077(%41, %42) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(40), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(308), float32], Tensor[(2, 12, 13), bool], Tensor[(1, 12, 15), float32]) */;
  %44 = %38.1;
  %45 = %43.5;
  (%44, %45, %var_9504, meta[relay.Constant][6] /* ty=Tensor[(308), float32] */)
}

def @func_7027(%var_7025: Tensor[(495), uint16], %var_7026: Tensor[(308), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(12, 30), float32], Tensor[(495), uint16], Tensor[(308), float32], Tensor[(1, 36), int64], Tensor[(495), float64], Tensor[(?, 12, 15), float32]) {
  @func_7023(%var_7025, %var_7026) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(12, 30), float32], Tensor[(495), uint16], Tensor[(308), float32], Tensor[(1, 36), int64], Tensor[(495), float64], Tensor[(?, 12, 15), float32]) */
}

def @func_10295() -> Tensor[(15, 12, 15), float32] {
  %47 = fn () -> Tensor[(15, 12, 15), float32] {
    %46 = @func_7501() /* ty=(Tensor[(15, 12, 15), float32], Tensor[(?, 12, 15), float32]) */;
    %46.0
  };
  %47() /* ty=Tensor[(15, 12, 15), float32] */
}

def @func_10026() -> Tensor[(13, 12, 15), bool] {
  @func_10024() /* ty=Tensor[(13, 12, 15), bool] */
}

def @func_8659(%var_8651: Tensor[(1, 1200), int64]) -> (Tensor[(16, 12, 15), bool], Tensor[(16, 5, 15), int64], int64, Tensor[(1, 1200), int64]) {
  %48 = @func_8051() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %49 = %48.0;
  %50 = cast(%49, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
  %51 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 12, 15), float32] */, dtype="bool") /* ty=Tensor[(16, 12, 15), bool] */;
  %52 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %53 = cast(%var_8651, dtype="int64") /* ty=Tensor[(1, 1200), int64] */;
  %54 = reshape(%52, newshape=[]) /* ty=int64 */;
  %55 = reshape(%53, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), int64] */;
  %56 = @func_4003(%54, %55) /* ty=(Tensor[(16, 5, 15), int64],) */;
  %57 = less(%50, %51) /* ty=Tensor[(16, 12, 15), bool] */;
  %58 = %56.0;
  (%57, %58, 8 /* ty=int64 */, %var_8651)
}

def @main(%var_10367: Tensor[(112), float64]) -> (Tensor[(112), float64], Tensor[(?, 12, 15), uint64]) {
  %59 = @func_8052() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %60 = %59.0;
  %61 = cast(%var_10367, dtype="float64") /* ty=Tensor[(112), float64] */;
  %62 = reshape(%61, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %63 = @func_7573(%62) /* ty=(Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(112), float64]) */;
  %64 = %63.1;
  %65 = cast(%64, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
  %66 = asin(%65) /* ty=Tensor[(1, 12, 15), float64] */;
  %67 = cast(%66, dtype="uint64") /* ty=Tensor[(1, 12, 15), uint64] */;
  %68 = shape_of(%60, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%60, dtype="uint64") /* ty=Tensor[(1, 12, 15), uint64] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %71 = left_shift(%69, %70) /* ty=Tensor[(?, 12, 15), uint64] */;
  (%var_10367, %71)
}

def @func_6231() -> (Tensor[(15, 12, 15), float32],) {
  %72 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  %73 = cast(%72, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %74 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 12, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 12, 15), float32] */;
  %75 = mod(%73, %74) /* ty=Tensor[(15, 12, 15), float32] */;
  (%75,)
}

def @func_8674(%var_8672: Tensor[(8, 5, 2), float64]) -> Tensor[(8, 5, 2), float64] {
  @func_8671(%var_8672) /* ty=Tensor[(8, 5, 2), float64] */
}

def @func_7104() -> Tensor[(1, 12, 15), float32] {
  %76 = @func_5418() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %76.0
}

def @func_8831() -> (Tensor[(1, 12, 15), float32],) {
  %79 = fn () -> (Tensor[(1, 12, 15), float32],) {
    %77 = @func_7471() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
    %78 = %77.1;
    (%78,)
  };
  %79() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_7426(%var_7424: Tensor[(312), bool]) -> (Tensor[(1, 12, 15), float64], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) {
  @func_7423(%var_7424) /* ty=(Tensor[(1, 12, 15), float64], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) */
}

def @func_9646() -> Tensor[(1, 12, 15), float32] {
  %80 = @func_8830() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %80.0
}

def @func_9002(%var_9000: Tensor[(8, 16, 5), int32], %var_9001: Tensor[(3, 104), bool]) -> (Tensor[(8, 16, 5), float64], Tensor[(2, 12, 13), bool], Tensor[(528), float32], Tensor[(3, 104), bool]) {
  @func_8998(%var_9000, %var_9001) /* ty=(Tensor[(8, 16, 5), float64], Tensor[(2, 12, 13), bool], Tensor[(528), float32], Tensor[(3, 104), bool]) */
}

def @func_6080(%var_6078: Tensor[(495), uint16], %var_6079: Tensor[(308), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(40), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(308), float32], Tensor[(2, 12, 13), bool], Tensor[(1, 12, 15), float32]) {
  %97 = fn (%var_6032: Tensor[(495), uint16], %var_6033: Tensor[(308), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(40), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(308), float32], Tensor[(2, 12, 13), bool], Tensor[(1, 12, 15), float32]) {
    %81 = @func_5971() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
    %82 = cast(meta[relay.Constant][9] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %83 = cast(%var_6032, dtype="uint16") /* ty=Tensor[(495), uint16] */;
    %84 = cast(%var_6033, dtype="float32") /* ty=Tensor[(308), float32] */;
    %85 = reshape(%82, newshape=[9, 8, 5]) /* ty=Tensor[(9, 8, 5), float32] */;
    %86 = reshape(%83, newshape=[495]) /* ty=Tensor[(495), uint16] */;
    %87 = reshape(%84, newshape=[308]) /* ty=Tensor[(308), float32] */;
    %88 = @func_4593(%85, %86, %87) /* ty=(Tensor[(2, 12, 13), bool], Tensor[(495), uint16], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(9, 8, 5), int64], Tensor[(11, 14, 1), float32], Tensor[(308), float32]) */;
    %89 = cast(%var_6032, dtype="uint16") /* ty=Tensor[(495), uint16] */;
    %90 = reshape(%89, newshape=[11, 15, 3]) /* ty=Tensor[(11, 15, 3), uint16] */;
    %91 = @func_3856(%90) /* ty=(Tensor[(11, 15, 3), uint16], Tensor[(2, 12, 13), bool], Tensor[(450), float32], Tensor[(2, 264), float32]) */;
    %92 = @func_5971() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
    %93 = %81.1;
    %94 = %88.3;
    %95 = %91.1;
    %96 = %92.0;
    (%93, %94, meta[relay.Constant][9] /* ty=Tensor[(360), float32] */, %var_6032, %var_6033, %95, %96)
  };
  %97(%var_6078, %var_6079) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(40), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(308), float32], Tensor[(2, 12, 13), bool], Tensor[(1, 12, 15), float32]) */
}

def @func_5418() -> (Tensor[(1, 12, 15), float32],) {
  %98 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  (%98,)
}

def @func_7613(%var_7611: Tensor[(495), uint16], %var_7612: Tensor[(77, 4), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(2, 2, 10), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(77, 4), float32]) {
  %109 = fn (%var_7595: Tensor[(495), uint16], %var_7596: Tensor[(77, 4), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(2, 2, 10), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(77, 4), float32]) {
    %99 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %100 = cast(meta[relay.Constant][10] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %101 = cast(%var_7595, dtype="uint16") /* ty=Tensor[(495), uint16] */;
    %102 = cast(%var_7596, dtype="float32") /* ty=Tensor[(77, 4), float32] */;
    %103 = reshape(%100, newshape=[9, 8, 5]) /* ty=Tensor[(9, 8, 5), float32] */;
    %104 = reshape(%101, newshape=[495]) /* ty=Tensor[(495), uint16] */;
    %105 = reshape(%102, newshape=[308]) /* ty=Tensor[(308), float32] */;
    %106 = @func_4593(%103, %104, %105) /* ty=(Tensor[(2, 12, 13), bool], Tensor[(495), uint16], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(9, 8, 5), int64], Tensor[(11, 14, 1), float32], Tensor[(308), float32]) */;
    %107 = %99.0;
    %108 = %106.2;
    (%107, %108, meta[relay.Constant][10] /* ty=Tensor[(360), float32] */, %var_7595, %var_7596)
  };
  %109(%var_7611, %var_7612) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(2, 2, 10), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(77, 4), float32]) */
}

def @func_7023(%var_6995: Tensor[(495), uint16], %var_6996: Tensor[(308), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(12, 30), float32], Tensor[(495), uint16], Tensor[(308), float32], Tensor[(1, 36), int64], Tensor[(495), float64], Tensor[(?, 12, 15), float32]) {
  %110 = @func_5971() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %111 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 30), float32] */, dtype="float32") /* ty=Tensor[(12, 30), float32] */;
  %112 = cast(%var_6995, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %113 = cast(%var_6996, dtype="float32") /* ty=Tensor[(308), float32] */;
  %114 = reshape(%111, newshape=[9, 8, 5]) /* ty=Tensor[(9, 8, 5), float32] */;
  %115 = reshape(%112, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %116 = reshape(%113, newshape=[308]) /* ty=Tensor[(308), float32] */;
  %117 = @func_4593(%114, %115, %116) /* ty=(Tensor[(2, 12, 13), bool], Tensor[(495), uint16], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(9, 8, 5), int64], Tensor[(11, 14, 1), float32], Tensor[(308), float32]) */;
  %118 = %117.1;
  %119 = cast(%118, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %120 = reshape(%119, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %121 = @func_6468(%120) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(36), int64], Tensor[(1, 36), int64], Tensor[(495), uint16]) */;
  %122 = cast(%118, dtype="float64") /* ty=Tensor[(495), float64] */;
  %123 = %110.0;
  %124 = %121.2;
  %125 = rsqrt(%122) /* ty=Tensor[(495), float64] */;
  %126 = @func_6347() /* ty=Tensor[(?, 12, 15), float32] */;
  (%123, meta[relay.Constant][11] /* ty=Tensor[(12, 30), float32] */, %var_6995, %var_6996, %124, %125, %126)
}

def @func_3501(%var_3480: Tensor[(308, 1), float32]) -> (Tensor[(2, 7, 16), uint8], Tensor[(11, 14, 1), float32], Tensor[(22), float64], Tensor[(308, 1), float32], Tensor[(11, 14, 2), uint32]) {
  %127 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 7, 16), float64] */, dtype="float64") /* ty=Tensor[(2, 7, 16), float64] */;
  %128 = sinh(%127) /* ty=Tensor[(2, 7, 16), float64] */;
  %129 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 7, 16), float64] */, dtype="uint8") /* ty=Tensor[(2, 7, 16), uint8] */;
  %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(%128, dtype="uint8") /* ty=Tensor[(2, 7, 16), uint8] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %133 = cast(meta[relay.Constant][13] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %134 = cast(%var_3480, dtype="float32") /* ty=Tensor[(308, 1), float32] */;
  %135 = reshape(%133, newshape=[22]) /* ty=Tensor[(22), float64] */;
  %136 = reshape(%134, newshape=[11, 14, 2]) /* ty=Tensor[(11, 14, 2), float32] */;
  %137 = @func_3179(%135, %136) /* ty=(Tensor[(11, 14, 1), float32], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(11, 14, 2), uint32], Tensor[(1, 2, 11), float64]) */;
  %138 = cast(meta[relay.Constant][13] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %139 = cast(%var_3480, dtype="float32") /* ty=Tensor[(308, 1), float32] */;
  %140 = reshape(%138, newshape=[22]) /* ty=Tensor[(22), float64] */;
  %141 = reshape(%139, newshape=[11, 14, 2]) /* ty=Tensor[(11, 14, 2), float32] */;
  %142 = @func_3179(%140, %141) /* ty=(Tensor[(11, 14, 1), float32], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(11, 14, 2), uint32], Tensor[(1, 2, 11), float64]) */;
  %143 = logical_xor(%131, %132) /* ty=Tensor[(2, 7, 16), uint8] */;
  %144 = %137.0;
  %145 = %142.3;
  (%143, %144, meta[relay.Constant][13] /* ty=Tensor[(22), float64] */, %var_3480, %145)
}

def @func_7423(%var_7410: Tensor[(312), bool]) -> (Tensor[(1, 12, 15), float64], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) {
  %146 = @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %147 = %146.0;
  %148 = cast(%147, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
  %149 = cast(%var_7410, dtype="bool") /* ty=Tensor[(312), bool] */;
  %150 = reshape(%149, newshape=[2, 12, 13]) /* ty=Tensor[(2, 12, 13), bool] */;
  %151 = exp(%148) /* ty=Tensor[(1, 12, 15), float64] */;
  %152 = @func_29(%150) /* ty=Tensor[(2, 12, 13), bool] */;
  (%151, %152, %var_7410)
}

def @func_9648() -> Tensor[(1, 12, 15), float32] {
  @func_9646() /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_10144(%var_10143: Tensor[(308), float32]) -> (Tensor[(?, 12, 15), bool], Tensor[(40), float32], Tensor[(495), uint16], Tensor[(308), bool]) {
  %173 = fn (%var_10136: Tensor[(308), float32]) -> (Tensor[(?, 12, 15), bool], Tensor[(40), float32], Tensor[(495), uint16], Tensor[(308), bool]) {
    %153 = @func_9190() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %154 = %153.0;
    %155 = @func_7801() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(5, 4, 4), bool], Tensor[(80), int64]) */;
    %156 = %155.0;
    %157 = cast(%156, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
    %158 = shape_of(%154, dtype="int32") /* ty=Tensor[(3), int32] */;
    %159 = cast(%154, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
    %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %161 = cast(meta[relay.Constant][14] /* ty=Tensor[(495), uint16] */, dtype="uint16") /* ty=Tensor[(495), uint16] */;
    %162 = cast(meta[relay.Constant][15] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
    %163 = reshape(%161, newshape=[495]) /* ty=Tensor[(495), uint16] */;
    %164 = reshape(%162, newshape=[308]) /* ty=Tensor[(308), float32] */;
    %165 = @func_6077(%163, %164) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(40), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(308), float32], Tensor[(2, 12, 13), bool], Tensor[(1, 12, 15), float32]) */;
    %166 = cast(%var_10136, dtype="bool") /* ty=Tensor[(308), bool] */;
    %167 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(308), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %168 = cast(meta[relay.Constant][15] /* ty=Tensor[(308), float32] */, dtype="bool") /* ty=Tensor[(308), bool] */;
    %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?), bool] */;
    %170 = logical_and(%159, %160) /* ty=Tensor[(?, 12, 15), bool] */;
    %171 = %165.1;
    %172 = greater(%168, %169) /* ty=Tensor[(308), bool] */;
    (%170, %171, meta[relay.Constant][14] /* ty=Tensor[(495), uint16] */, %172)
  };
  %173(%var_10143) /* ty=(Tensor[(?, 12, 15), bool], Tensor[(40), float32], Tensor[(495), uint16], Tensor[(308), bool]) */
}

def @func_6804() -> (Tensor[(1, 12, 15), float32],) {
  @func_6802() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_9367() -> (Tensor[(1, 12, 15), float32], Tensor[(495), uint16], Tensor[(495), uint16], Tensor[(308), float32]) {
  %182 = fn () -> (Tensor[(1, 12, 15), float32], Tensor[(495), uint16], Tensor[(495), uint16], Tensor[(308), float32]) {
    %174 = @func_7639() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %175 = cast(meta[relay.Constant][16] /* ty=Tensor[(495), uint16] */, dtype="uint16") /* ty=Tensor[(495), uint16] */;
    %176 = cast(meta[relay.Constant][17] /* ty=Tensor[(308), float32] */, dtype="float32") /* ty=Tensor[(308), float32] */;
    %177 = reshape(%175, newshape=[495]) /* ty=Tensor[(495), uint16] */;
    %178 = reshape(%176, newshape=[77, 4]) /* ty=Tensor[(77, 4), float32] */;
    %179 = @func_7610(%177, %178) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(2, 2, 10), float32], Tensor[(360), float32], Tensor[(495), uint16], Tensor[(77, 4), float32]) */;
    %180 = %174.0;
    %181 = %179.3;
    (%180, %181, meta[relay.Constant][16] /* ty=Tensor[(495), uint16] */, meta[relay.Constant][17] /* ty=Tensor[(308), float32] */)
  };
  %182() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(495), uint16], Tensor[(495), uint16], Tensor[(308), float32]) */
}

def @func_6539(%var_6512: Tensor[(5, 99), uint16]) -> (Tensor[(?, 12, 15), float32], Tensor[(1, 12, 15), float64], Tensor[(5, 99), uint16], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(36), float64]) {
  %183 = @func_6300() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32]) */;
  %184 = cast(meta[relay.Constant][18] /* ty=Tensor[(36), int64] */, dtype="int64") /* ty=Tensor[(36), int64] */;
  %185 = cast(%var_6512, dtype="uint16") /* ty=Tensor[(5, 99), uint16] */;
  %186 = reshape(%184, newshape=[36]) /* ty=Tensor[(36), int64] */;
  %187 = reshape(%185, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %188 = @func_5278(%186, %187) /* ty=(Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(450), bool], int64, Tensor[(36), int64], Tensor[(2, 2, 10), float32], Tensor[(2, 264), float32], Tensor[(495), uint16]) */;
  %189 = cast(meta[relay.Constant][19] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %190 = reshape(%189, newshape=[16, 1, 7]) /* ty=Tensor[(16, 1, 7), float64] */;
  %191 = @func_2536(%190) /* ty=(Tensor[(16, 1, 7), float64],) */;
  %192 = cast(meta[relay.Constant][18] /* ty=Tensor[(36), int64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %193 = %183.1;
  %194 = %188.2;
  %195 = %191.0;
  %196 = acosh(%192) /* ty=Tensor[(36), float64] */;
  (%193, %194, %var_6512, %195, meta[relay.Constant][19] /* ty=Tensor[(112), float64] */, %196)
}

def @func_7881(%var_7880: Tensor[(12, 12, 15), float32]) -> Tensor[(12, 12, 15), bool] {
  %201 = fn (%var_7867: Tensor[(12, 12, 15), float32]) -> Tensor[(12, 12, 15), bool] {
    %197 = @func_5418() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %198 = %197.0;
    %199 = cast(%198, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
    %200 = cast(%var_7867, dtype="bool") /* ty=Tensor[(12, 12, 15), bool] */;
    logical_or(%199, %200) /* ty=Tensor[(12, 12, 15), bool] */
  };
  %201(%var_7880) /* ty=Tensor[(12, 12, 15), bool] */
}

def @func_7069(%var_7067: Tensor[(55), uint32], %var_7068: Tensor[(1440), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(55), uint32], Tensor[(11, 35), uint32], Tensor[(8, 12, 15), uint16], Tensor[(1440), float32]) {
  %214 = fn (%var_7053: Tensor[(55), uint32], %var_7060: Tensor[(1440), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(55), uint32], Tensor[(11, 35), uint32], Tensor[(8, 12, 15), uint16], Tensor[(1440), float32]) {
    %202 = @func_6604() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %203 = cast(%var_7053, dtype="uint32") /* ty=Tensor[(55), uint32] */;
    %204 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 35), uint32] */, dtype="uint32") /* ty=Tensor[(11, 35), uint32] */;
    %205 = reshape(%203, newshape=[1, 55]) /* ty=Tensor[(1, 55), uint32] */;
    %206 = reshape(%204, newshape=[385]) /* ty=Tensor[(385), uint32] */;
    %207 = @func_6204(%205, %206) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(16, 5, 15), int64], Tensor[(1, 55), uint32], Tensor[(385), uint32], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64]) */;
    %208 = cast(%var_7060, dtype="float32") /* ty=Tensor[(1440), float32] */;
    %209 = reshape(%208, newshape=[8, 12, 15]) /* ty=Tensor[(8, 12, 15), float32] */;
    %210 = @func_5504(%209) /* ty=(Tensor[(8, 12, 15), uint16],) */;
    %211 = %202.0;
    %212 = %207.6;
    %213 = %210.0;
    (%211, %212, %var_7053, meta[relay.Constant][20] /* ty=Tensor[(11, 35), uint32] */, %213, %var_7060)
  };
  %214(%var_7067, %var_7068) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(55), uint32], Tensor[(11, 35), uint32], Tensor[(8, 12, 15), uint16], Tensor[(1440), float32]) */
}

def @func_6739() -> Tensor[(15, 12, 15), float32] {
  %215 = @func_6231() /* ty=(Tensor[(15, 12, 15), float32],) */;
  %215.0
}

def @func_6886(%var_6883: Tensor[(14, 7, 16), bool], %var_6884: Tensor[(14, 7, 16), bool], %var_6885: Tensor[(726), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(14, 7, 16), float32], Tensor[(11, 6, 11), float64], Tensor[(726), float64]) {
  @func_6881(%var_6883, %var_6884, %var_6885) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(14, 7, 16), float32], Tensor[(11, 6, 11), float64], Tensor[(726), float64]) */
}

def @func_7502() -> (Tensor[(15, 12, 15), float32], Tensor[(?, 12, 15), float32]) {
  %219 = fn () -> (Tensor[(15, 12, 15), float32], Tensor[(?, 12, 15), float32]) {
    %216 = @func_6231() /* ty=(Tensor[(15, 12, 15), float32],) */;
    %217 = %216.0;
    %218 = @func_6347() /* ty=Tensor[(?, 12, 15), float32] */;
    (%217, %218)
  };
  %219() /* ty=(Tensor[(15, 12, 15), float32], Tensor[(?, 12, 15), float32]) */
}

def @func_1579(%var_1577: Tensor[(2, 2, 10), float32]) -> Tensor[(2, 2, 10), float32] {
  @func_1576(%var_1577) /* ty=Tensor[(2, 2, 10), float32] */
}

def @func_7182(%var_7180: Tensor[(77, 4), float32], %var_7181: Tensor[(22), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(77, 4), float32], Tensor[(11, 14, 22), bool]) {
  @func_7178(%var_7180, %var_7181) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(77, 4), float32], Tensor[(11, 14, 22), bool]) */
}

def @func_7473() -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) {
  @func_7471() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */
}

def @func_9970() -> (Tensor[(1, 12, 15), float32],) {
  %220 = @func_6107() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %221 = %220.1;
  (%221,)
}

def @func_7232(%var_7192: Tensor[(5, 4, 4), int64], %var_7193: Tensor[(5, 4, 4), int64]) -> (Tensor[(5, 4, 4), bool],) {
  %222 = cast(%var_7193, dtype="int64") /* ty=Tensor[(5, 4, 4), int64] */;
  %223 = shape_of(%var_7192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(%var_7192, dtype="int64") /* ty=Tensor[(5, 4, 4), int64] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %226 = subtract(%224, %225) /* ty=Tensor[(5, 4, 4), int64] */;
  %227 = cast(%226, dtype="bool") /* ty=Tensor[(5, 4, 4), bool] */;
  %228 = shape_of(%var_7193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %229 = cast(%var_7193, dtype="bool") /* ty=Tensor[(5, 4, 4), bool] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %231 = less(%229, %230) /* ty=Tensor[(5, 4, 4), bool] */;
  (%231,)
}

def @func_8462(%var_8460: Tensor[(5, 4, 16), uint32], %var_8461: Tensor[(5, 4, 16), uint32]) -> (Tensor[(15, 12, 15), float32], Tensor[(16, 12, 15), uint64], Tensor[(1440, 2), float32], Tensor[(5, 4, 16), bool], Tensor[(5, 4, 16), int16]) {
  @func_8458(%var_8460, %var_8461) /* ty=(Tensor[(15, 12, 15), float32], Tensor[(16, 12, 15), uint64], Tensor[(1440, 2), float32], Tensor[(5, 4, 16), bool], Tensor[(5, 4, 16), int16]) */
}

def @func_9868(%var_9866: Tensor[(10, 13, 16), float32], %var_9867: Tensor[(10, 13, 16), float32]) -> (Tensor[(13, 12, 15), int64], Tensor[(10, 13, 16), int32], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(1, 12, 15), float32], Tensor[(10, 13, 16), bool]) {
  @func_9864(%var_9866, %var_9867) /* ty=(Tensor[(13, 12, 15), int64], Tensor[(10, 13, 16), int32], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(1, 12, 15), float32], Tensor[(10, 13, 16), bool]) */
}

def @func_5164() -> (Tensor[(1, 12, 15), float32],) {
  %232 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  (%232,)
}

def @func_9943() -> Tensor[(11, 14, 2), uint32] {
  %234 = fn () -> Tensor[(11, 14, 2), uint32] {
    %233 = @func_9388() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(11, 14, 2), uint32], Tensor[(7, 44), float32]) */;
    %233.1
  };
  %234() /* ty=Tensor[(11, 14, 2), uint32] */
}

def @func_7573(%var_7572: Tensor[(112), float64]) -> (Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(112), float64]) {
  %242 = fn (%var_7569: Tensor[(112), float64]) -> (Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(112), float64]) {
    %235 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
    %236 = cast(%235, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
    %237 = cast(%var_7569, dtype="float64") /* ty=Tensor[(112), float64] */;
    %238 = reshape(%237, newshape=[112, 1]) /* ty=Tensor[(112, 1), float64] */;
    %239 = @func_5469(%238) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64], Tensor[(112, 1), float64]) */;
    %240 = sigmoid(%236) /* ty=Tensor[(1, 12, 15), float64] */;
    %241 = %239.0;
    (%240, %241, %var_7569)
  };
  %242(%var_7572) /* ty=(Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(112), float64]) */
}

def @func_2539(%var_2537: Tensor[(16, 1, 7), float64]) -> (Tensor[(16, 1, 7), float64],) {
  @func_2536(%var_2537) /* ty=(Tensor[(16, 1, 7), float64],) */
}

def @func_7856() -> Tensor[(1, 12, 15), float32] {
  @func_7854() /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_8302() -> (Tensor[(1, 12, 15), float32],) {
  %244 = fn () -> (Tensor[(1, 12, 15), float32],) {
    %243 = @func_7854() /* ty=Tensor[(1, 12, 15), float32] */;
    (%243,)
  };
  %244() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_3215(%var_3214: Tensor[(15, 5, 15), uint32]) -> Tensor[(15, 5, 15), uint32] {
  %249 = fn (%var_3195: Tensor[(15, 5, 15), uint32]) -> Tensor[(15, 5, 15), uint32] {
    %245 = cast(%var_3195, dtype="uint32") /* ty=Tensor[(15, 5, 15), uint32] */;
    %246 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(15, 5, 15), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %247 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 5, 15), uint32] */, dtype="uint32") /* ty=Tensor[(15, 5, 15), uint32] */;
    %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    bitwise_and(%247, %248) /* ty=Tensor[(15, 5, 15), uint32] */
  };
  %249(%var_3214) /* ty=Tensor[(15, 5, 15), uint32] */
}

def @func_8899(%var_8897: Tensor[(1, 308), float32]) -> (Tensor[(1, 12, 15), float32], Tensor[(495), uint16], Tensor[(1, 308), float32], Tensor[(12, 12, 15), float32]) {
  @func_8896(%var_8897) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(495), uint16], Tensor[(1, 308), float32], Tensor[(12, 12, 15), float32]) */
}

def @func_4987(%var_4970: Tensor[(5, 12, 3), float32], %var_4971: Tensor[(5, 12, 3), float32]) -> Tensor[(5, 12, 3), float32] {
  %250 = cast(%var_4971, dtype="float32") /* ty=Tensor[(5, 12, 3), float32] */;
  %251 = shape_of(%var_4970, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%var_4970, dtype="float32") /* ty=Tensor[(5, 12, 3), float32] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%252, %253) /* ty=Tensor[(5, 12, 3), float32] */
}

def @func_3856(%var_3841: Tensor[(11, 15, 3), uint16]) -> (Tensor[(11, 15, 3), uint16], Tensor[(2, 12, 13), bool], Tensor[(450), float32], Tensor[(2, 264), float32]) {
  %254 = cast(%var_3841, dtype="uint16") /* ty=Tensor[(11, 15, 3), uint16] */;
  %255 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(11, 15, 3), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 15, 3), uint16] */, dtype="uint16") /* ty=Tensor[(11, 15, 3), uint16] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %258 = cast(meta[relay.Constant][23] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %259 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 264), float32] */, dtype="float32") /* ty=Tensor[(2, 264), float32] */;
  %260 = cast(meta[relay.Constant][23] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %261 = reshape(%258, newshape=[10, 5, 9]) /* ty=Tensor[(10, 5, 9), float32] */;
  %262 = reshape(%259, newshape=[528]) /* ty=Tensor[(528), float32] */;
  %263 = reshape(%260, newshape=[10, 5, 9]) /* ty=Tensor[(10, 5, 9), float32] */;
  %264 = @func_2842(%261, %262, %263) /* ty=(Tensor[(2, 12, 13), bool], Tensor[(528), float32], Tensor[(6, 52), bool], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(10, 5, 9), float64], Tensor[(10, 5, 9), float64]) */;
  %265 = add(%256, %257) /* ty=Tensor[(11, 15, 3), uint16] */;
  %266 = %264.0;
  (%265, %266, meta[relay.Constant][23] /* ty=Tensor[(450), float32] */, meta[relay.Constant][24] /* ty=Tensor[(2, 264), float32] */)
}

def @func_6471(%var_6469: Tensor[(495), uint16]) -> (Tensor[(1, 12, 15), float32], Tensor[(36), int64], Tensor[(1, 36), int64], Tensor[(495), uint16]) {
  @func_6468(%var_6469) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(36), int64], Tensor[(1, 36), int64], Tensor[(495), uint16]) */
}

def @func_4329(%var_4326: uint32, %var_4327: Tensor[(10, 2, 15), uint32], %var_4328: Tensor[(450), float32]) -> (Tensor[(10, 2, 15), uint32], Tensor[(10, 5, 9), float64], Tensor[(450), float32], Tensor[(528), float32], Tensor[(16, 1, 7), float64], Tensor[(2, 56), float64]) {
  %282 = fn (%var_4295: uint32, %var_4296: Tensor[(10, 2, 15), uint32], %var_4313: Tensor[(450), float32]) -> (Tensor[(10, 2, 15), uint32], Tensor[(10, 5, 9), float64], Tensor[(450), float32], Tensor[(528), float32], Tensor[(16, 1, 7), float64], Tensor[(2, 56), float64]) {
    %267 = cast(%var_4295, dtype="uint32") /* ty=uint32 */;
    %268 = cast(%var_4296, dtype="uint32") /* ty=Tensor[(10, 2, 15), uint32] */;
    %269 = cast(%var_4313, dtype="float32") /* ty=Tensor[(450), float32] */;
    %270 = cast(meta[relay.Constant][25] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %271 = cast(%var_4313, dtype="float32") /* ty=Tensor[(450), float32] */;
    %272 = reshape(%269, newshape=[10, 5, 9]) /* ty=Tensor[(10, 5, 9), float32] */;
    %273 = reshape(%270, newshape=[528]) /* ty=Tensor[(528), float32] */;
    %274 = reshape(%271, newshape=[10, 5, 9]) /* ty=Tensor[(10, 5, 9), float32] */;
    %275 = @func_2842(%272, %273, %274) /* ty=(Tensor[(2, 12, 13), bool], Tensor[(528), float32], Tensor[(6, 52), bool], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(10, 5, 9), float64], Tensor[(10, 5, 9), float64]) */;
    %276 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 56), float64] */, dtype="float64") /* ty=Tensor[(2, 56), float64] */;
    %277 = reshape(%276, newshape=[16, 1, 7]) /* ty=Tensor[(16, 1, 7), float64] */;
    %278 = @func_2536(%277) /* ty=(Tensor[(16, 1, 7), float64],) */;
    %279 = bitwise_xor(%267, %268) /* ty=Tensor[(10, 2, 15), uint32] */;
    %280 = %275.6;
    %281 = %278.0;
    (%279, %280, %var_4313, meta[relay.Constant][25] /* ty=Tensor[(528), float32] */, %281, meta[relay.Constant][26] /* ty=Tensor[(2, 56), float64] */)
  };
  %282(%var_4326, %var_4327, %var_4328) /* ty=(Tensor[(10, 2, 15), uint32], Tensor[(10, 5, 9), float64], Tensor[(450), float32], Tensor[(528), float32], Tensor[(16, 1, 7), float64], Tensor[(2, 56), float64]) */
}

def @func_3421(%var_3419: Tensor[(11, 6, 11), float64]) -> (Tensor[(11, 6, 11), float64],) {
  @func_3418(%var_3419) /* ty=(Tensor[(11, 6, 11), float64],) */
}

def @func_6107() -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) {
  %283 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %284 = %283.0;
  %285 = cast(%284, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %286 = @func_5971() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %287 = sin(%285) /* ty=Tensor[(1, 12, 15), float32] */;
  %288 = %286.1;
  (%287, %288)
}

def @func_3182(%var_3180: Tensor[(22), float64], %var_3181: Tensor[(11, 14, 2), float32]) -> (Tensor[(11, 14, 1), float32], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(11, 14, 2), uint32], Tensor[(1, 2, 11), float64]) {
  %302 = fn (%var_3148: Tensor[(22), float64], %var_3152: Tensor[(11, 14, 2), float32]) -> (Tensor[(11, 14, 1), float32], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(11, 14, 2), uint32], Tensor[(1, 2, 11), float64]) {
    %289 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 14, 1), float32] */, dtype="float32") /* ty=Tensor[(11, 14, 1), float32] */;
    %290 = cast(%var_3148, dtype="float64") /* ty=Tensor[(22), float64] */;
    %291 = reshape(%290, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), float64] */;
    %292 = @func_3115(%291) /* ty=(Tensor[(1, 2, 11), float64],) */;
    %293 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 14, 1), float32] */, dtype="uint32") /* ty=Tensor[(11, 14, 1), uint32] */;
    %294 = cast(%var_3152, dtype="uint32") /* ty=Tensor[(11, 14, 2), uint32] */;
    %295 = %292.0;
    %296 = cast(%295, dtype="float64") /* ty=Tensor[(1, 2, 11), float64] */;
    %297 = reshape(%296, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), float64] */;
    %298 = @func_3115(%297) /* ty=(Tensor[(1, 2, 11), float64],) */;
    %299 = atan(%289) /* ty=Tensor[(11, 14, 1), float32] */;
    %300 = subtract(%293, %294) /* ty=Tensor[(11, 14, 2), uint32] */;
    %301 = %298.0;
    (%299, %295, %var_3148, %300, %301)
  };
  %302(%var_3180, %var_3181) /* ty=(Tensor[(11, 14, 1), float32], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(11, 14, 2), uint32], Tensor[(1, 2, 11), float64]) */
}

def @func_9038() -> (Tensor[(36), int64],) {
  %303 = @func_8782() /* ty=(Tensor[(?, 12, 15), bool], Tensor[(392, 4), bool], int64, Tensor[(36), int64]) */;
  %304 = %303.3;
  (%304,)
}

def @func_9040() -> (Tensor[(36), int64],) {
  @func_9038() /* ty=(Tensor[(36), int64],) */
}

def @func_9908() -> (Tensor[(1, 12, 15), float32],) {
  %305 = @func_6604() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %306 = %305.0;
  (%306,)
}

def @func_6138() -> (Tensor[(1, 12, 15), float32],) {
  %307 = @func_5971() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %308 = %307.1;
  (%308,)
}

def @func_8458(%var_8434: Tensor[(5, 4, 16), uint32], %var_8446: Tensor[(5, 4, 16), uint32]) -> (Tensor[(15, 12, 15), float32], Tensor[(16, 12, 15), uint64], Tensor[(1440, 2), float32], Tensor[(5, 4, 16), bool], Tensor[(5, 4, 16), int16]) {
  %309 = @func_7501() /* ty=(Tensor[(15, 12, 15), float32], Tensor[(?, 12, 15), float32]) */;
  %310 = cast(meta[relay.Constant][28] /* ty=Tensor[(1440, 2), float32] */, dtype="float32") /* ty=Tensor[(1440, 2), float32] */;
  %311 = reshape(%310, newshape=[16, 12, 15]) /* ty=Tensor[(16, 12, 15), float32] */;
  %312 = cast(meta[relay.Constant][29] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %313 = cast(%var_8434, dtype="uint32") /* ty=Tensor[(5, 4, 16), uint32] */;
  %314 = bitwise_and(%312, %313) /* ty=Tensor[(5, 4, 16), uint32] */;
  %315 = cast(%var_8446, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
  %316 = shape_of(%314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %317 = cast(%314, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
  %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %319 = cast(%314, dtype="int16") /* ty=Tensor[(5, 4, 16), int16] */;
  %320 = shape_of(%var_8446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%var_8446, dtype="int16") /* ty=Tensor[(5, 4, 16), int16] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %323 = %309.0;
  %324 = @func_7362(%311) /* ty=Tensor[(16, 12, 15), uint64] */;
  %325 = equal(%317, %318) /* ty=Tensor[(5, 4, 16), bool] */;
  %326 = maximum(%321, %322) /* ty=Tensor[(5, 4, 16), int16] */;
  (%323, %324, meta[relay.Constant][28] /* ty=Tensor[(1440, 2), float32] */, %325, %326)
}

def @func_6140() -> (Tensor[(1, 12, 15), float32],) {
  @func_6138() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_9175() -> (Tensor[(1, 12, 15), float32], Tensor[(15, 12, 15), float32], Tensor[(5, 12, 3), float32]) {
  %327 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %328 = %327.0;
  %329 = cast(%328, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %330 = cast(%328, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %331 = reshape(%329, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %332 = reshape(%330, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
  %333 = @func_6739() /* ty=Tensor[(15, 12, 15), float32] */;
  %334 = @func_4987(%331, %332) /* ty=Tensor[(5, 12, 3), float32] */;
  (%328, %333, %334)
}

def @func_6300() -> (Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32]) {
  %335 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %336 = %335.0;
  %337 = cast(%336, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %338 = cast(%336, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %339 = cos(%338) /* ty=Tensor[(1, 12, 15), float32] */;
  %340 = cast(%336, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %341 = shape_of(%339, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(%339, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %344 = atan(%337) /* ty=Tensor[(1, 12, 15), float32] */;
  %345 = minimum(%342, %343) /* ty=Tensor[(?, 12, 15), float32] */;
  (%344, %345)
}

def @func_2842(%var_2805: Tensor[(10, 5, 9), float32], %var_2819: Tensor[(528), float32], %var_2835: Tensor[(10, 5, 9), float32]) -> (Tensor[(2, 12, 13), bool], Tensor[(528), float32], Tensor[(6, 52), bool], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(10, 5, 9), float64], Tensor[(10, 5, 9), float64]) {
  %346 = cast(%var_2819, dtype="float32") /* ty=Tensor[(528), float32] */;
  %347 = cast(%var_2819, dtype="float32") /* ty=Tensor[(528), float32] */;
  %348 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 52), bool] */, dtype="bool") /* ty=Tensor[(6, 52), bool] */;
  %349 = reshape(%346, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %350 = reshape(%347, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %351 = reshape(%348, newshape=[312]) /* ty=Tensor[(312), bool] */;
  %352 = @func_1376(%349, %350, %351) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) */;
  %353 = cast(meta[relay.Constant][31] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %354 = reshape(%353, newshape=[2, 2, 10]) /* ty=Tensor[(2, 2, 10), float32] */;
  %355 = cast(%var_2805, dtype="float32") /* ty=Tensor[(10, 5, 9), float32] */;
  %356 = atanh(%355) /* ty=Tensor[(10, 5, 9), float32] */;
  %357 = cast(%356, dtype="uint64") /* ty=Tensor[(10, 5, 9), uint64] */;
  %358 = shape_of(%var_2805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%var_2805, dtype="uint64") /* ty=Tensor[(10, 5, 9), uint64] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %361 = right_shift(%359, %360) /* ty=Tensor[(10, 5, 9), uint64] */;
  %362 = cast(%361, dtype="float64") /* ty=Tensor[(10, 5, 9), float64] */;
  %363 = cast(%var_2835, dtype="float64") /* ty=Tensor[(10, 5, 9), float64] */;
  %364 = shape_of(%356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%356, dtype="float64") /* ty=Tensor[(10, 5, 9), float64] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %367 = %352.1;
  %368 = @func_1576(%354) /* ty=Tensor[(2, 2, 10), float32] */;
  %369 = asinh(%362) /* ty=Tensor[(10, 5, 9), float64] */;
  %370 = power(%365, %366) /* ty=Tensor[(10, 5, 9), float64] */;
  (%367, %var_2819, meta[relay.Constant][30] /* ty=Tensor[(6, 52), bool] */, %368, meta[relay.Constant][31] /* ty=Tensor[(40), float32] */, %369, %370)
}

def @func_5929() -> (Tensor[(1, 12, 15), float32],) {
  %371 = @func_5418() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %372 = %371.0;
  (%372,)
}

def @func_1112(%var_1110: Tensor[(10, 1, 16), float32]) -> (Tensor[(10, 1, 16), float32], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) {
  @func_1109(%var_1110) /* ty=(Tensor[(10, 1, 16), float32], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) */
}

def @func_10259(%var_10257: Tensor[(2, 12, 15), float32], %var_10258: Tensor[(10, 12, 15), float32]) -> (Tensor[(2, 12, 15), bool], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(1, 12, 15), float32], Tensor[(10, 12, 15), float64]) {
  %386 = fn (%var_10220: Tensor[(2, 12, 15), float32], %var_10244: Tensor[(10, 12, 15), float32]) -> (Tensor[(2, 12, 15), bool], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(1, 12, 15), float32], Tensor[(10, 12, 15), float64]) {
    %373 = @func_9366() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(495), uint16], Tensor[(495), uint16], Tensor[(308), float32]) */;
    %374 = %373.0;
    %375 = cast(%374, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
    %376 = cast(%var_10220, dtype="bool") /* ty=Tensor[(2, 12, 15), bool] */;
    %377 = cast(meta[relay.Constant][32] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %378 = reshape(%377, newshape=[16, 1, 7]) /* ty=Tensor[(16, 1, 7), float64] */;
    %379 = @func_2536(%378) /* ty=(Tensor[(16, 1, 7), float64],) */;
    %380 = cast(%374, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
    %381 = cast(%var_10244, dtype="float64") /* ty=Tensor[(10, 12, 15), float64] */;
    %382 = logical_or(%375, %376) /* ty=Tensor[(2, 12, 15), bool] */;
    %383 = %379.0;
    %384 = @func_7104() /* ty=Tensor[(1, 12, 15), float32] */;
    %385 = floor_divide(%380, %381) /* ty=Tensor[(10, 12, 15), float64] */;
    (%382, %383, meta[relay.Constant][32] /* ty=Tensor[(112), float64] */, %384, %385)
  };
  %386(%var_10257, %var_10258) /* ty=(Tensor[(2, 12, 15), bool], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(1, 12, 15), float32], Tensor[(10, 12, 15), float64]) */
}

def @func_6741() -> Tensor[(15, 12, 15), float32] {
  @func_6739() /* ty=Tensor[(15, 12, 15), float32] */
}

def @func_3504(%var_3502: Tensor[(308, 1), float32]) -> (Tensor[(2, 7, 16), uint8], Tensor[(11, 14, 1), float32], Tensor[(22), float64], Tensor[(308, 1), float32], Tensor[(11, 14, 2), uint32]) {
  @func_3501(%var_3502) /* ty=(Tensor[(2, 7, 16), uint8], Tensor[(11, 14, 1), float32], Tensor[(22), float64], Tensor[(308, 1), float32], Tensor[(11, 14, 2), uint32]) */
}

def @func_9177() -> (Tensor[(1, 12, 15), float32], Tensor[(15, 12, 15), float32], Tensor[(5, 12, 3), float32]) {
  @func_9175() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(15, 12, 15), float32], Tensor[(5, 12, 3), float32]) */
}

def @func_5699(%var_5686: Tensor[(9, 4), int64]) -> (Tensor[(1, 12, 15), float32], Tensor[(4, 9, 1), int64], int64, Tensor[(9, 4), int64], Tensor[(13, 11, 15), float64], Tensor[(143), float64], Tensor[(1, 2145), float64]) {
  %387 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %388 = cast(%var_5686, dtype="int64") /* ty=Tensor[(9, 4), int64] */;
  %389 = reshape(%387, newshape=[]) /* ty=int64 */;
  %390 = reshape(%388, newshape=[4, 9, 1]) /* ty=Tensor[(4, 9, 1), int64] */;
  %391 = @func_5128(%389, %390) /* ty=(Tensor[(4, 9, 1), int64], Tensor[(495), uint16], Tensor[(450), bool]) */;
  %392 = cast(meta[relay.Constant][33] /* ty=Tensor[(143), float64] */, dtype="float64") /* ty=Tensor[(143), float64] */;
  %393 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 2145), float64] */, dtype="float64") /* ty=Tensor[(1, 2145), float64] */;
  %394 = reshape(%392, newshape=[13, 11, 1]) /* ty=Tensor[(13, 11, 1), float64] */;
  %395 = reshape(%393, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float64] */;
  %396 = @func_4631(%394, %395) /* ty=(Tensor[(13, 11, 15), float64],) */;
  %397 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  %398 = %391.0;
  %399 = %396.0;
  (%397, %398, 8 /* ty=int64 */, %var_5686, %399, meta[relay.Constant][33] /* ty=Tensor[(143), float64] */, meta[relay.Constant][34] /* ty=Tensor[(1, 2145), float64] */)
}

def @func_9388() -> (Tensor[(1, 12, 15), float32], Tensor[(11, 14, 2), uint32], Tensor[(7, 44), float32]) {
  %400 = @func_6604() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %401 = cast(meta[relay.Constant][35] /* ty=Tensor[(7, 44), float32] */, dtype="float32") /* ty=Tensor[(7, 44), float32] */;
  %402 = reshape(%401, newshape=[308, 1]) /* ty=Tensor[(308, 1), float32] */;
  %403 = @func_3501(%402) /* ty=(Tensor[(2, 7, 16), uint8], Tensor[(11, 14, 1), float32], Tensor[(22), float64], Tensor[(308, 1), float32], Tensor[(11, 14, 2), uint32]) */;
  %404 = %400.0;
  %405 = %403.4;
  (%404, %405, meta[relay.Constant][35] /* ty=Tensor[(7, 44), float32] */)
}

def @func_5132(%var_5130: int64, %var_5131: Tensor[(4, 9, 1), int64]) -> (Tensor[(4, 9, 1), int64], Tensor[(495), uint16], Tensor[(450), bool]) {
  @func_5128(%var_5130, %var_5131) /* ty=(Tensor[(4, 9, 1), int64], Tensor[(495), uint16], Tensor[(450), bool]) */
}

def @func_10186(%var_10182: Tensor[(308), float32], %var_10183: Tensor[(11, 66), float64], %var_10184: Tensor[(640), int32], %var_10185: Tensor[(312), bool]) -> (Tensor[(1, 12, 15), float32], Tensor[(1, 308), float32], Tensor[(308), float32], Tensor[(1, 12, 15), float32], Tensor[(14, 7, 16), float32], Tensor[(1568), bool], Tensor[(11, 66), float64], Tensor[(528), float32], Tensor[(640), int32], Tensor[(312), bool]) {
  %428 = fn (%var_10163: Tensor[(308), float32], %var_10174: Tensor[(11, 66), float64], %var_10177: Tensor[(640), int32], %var_10178: Tensor[(312), bool]) -> (Tensor[(1, 12, 15), float32], Tensor[(1, 308), float32], Tensor[(308), float32], Tensor[(1, 12, 15), float32], Tensor[(14, 7, 16), float32], Tensor[(1568), bool], Tensor[(11, 66), float64], Tensor[(528), float32], Tensor[(640), int32], Tensor[(312), bool]) {
    %406 = @func_8051() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %407 = cast(%var_10163, dtype="float32") /* ty=Tensor[(308), float32] */;
    %408 = reshape(%407, newshape=[1, 308]) /* ty=Tensor[(1, 308), float32] */;
    %409 = @func_8896(%408) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(495), uint16], Tensor[(1, 308), float32], Tensor[(12, 12, 15), float32]) */;
    %410 = @func_7471() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
    %411 = cast(meta[relay.Constant][36] /* ty=Tensor[(1568), bool] */, dtype="bool") /* ty=Tensor[(1568), bool] */;
    %412 = cast(meta[relay.Constant][36] /* ty=Tensor[(1568), bool] */, dtype="bool") /* ty=Tensor[(1568), bool] */;
    %413 = cast(%var_10174, dtype="float64") /* ty=Tensor[(11, 66), float64] */;
    %414 = reshape(%411, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), bool] */;
    %415 = reshape(%412, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), bool] */;
    %416 = reshape(%413, newshape=[726]) /* ty=Tensor[(726), float64] */;
    %417 = @func_6881(%414, %415, %416) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(14, 7, 16), float32], Tensor[(11, 6, 11), float64], Tensor[(726), float64]) */;
    %418 = cast(%var_10177, dtype="int32") /* ty=Tensor[(640), int32] */;
    %419 = cast(%var_10178, dtype="bool") /* ty=Tensor[(312), bool] */;
    %420 = reshape(%418, newshape=[8, 16, 5]) /* ty=Tensor[(8, 16, 5), int32] */;
    %421 = reshape(%419, newshape=[3, 104]) /* ty=Tensor[(3, 104), bool] */;
    %422 = @func_8998(%420, %421) /* ty=(Tensor[(8, 16, 5), float64], Tensor[(2, 12, 13), bool], Tensor[(528), float32], Tensor[(3, 104), bool]) */;
    %423 = %406.0;
    %424 = %409.2;
    %425 = %410.0;
    %426 = %417.1;
    %427 = %422.2;
    (%423, %424, %var_10163, %425, %426, meta[relay.Constant][36] /* ty=Tensor[(1568), bool] */, %var_10174, %427, %var_10177, %var_10178)
  };
  %428(%var_10182, %var_10183, %var_10184, %var_10185) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 308), float32], Tensor[(308), float32], Tensor[(1, 12, 15), float32], Tensor[(14, 7, 16), float32], Tensor[(1568), bool], Tensor[(11, 66), float64], Tensor[(528), float32], Tensor[(640), int32], Tensor[(312), bool]) */
}

def @func_6502(%var_6501: Tensor[(15, 12, 15), float32]) -> (Tensor[(15, 12, 15), float64],) {
  %434 = fn (%var_6490: Tensor[(15, 12, 15), float32]) -> (Tensor[(15, 12, 15), float64],) {
    %429 = @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %430 = %429.0;
    %431 = cast(%430, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
    %432 = cast(%var_6490, dtype="float64") /* ty=Tensor[(15, 12, 15), float64] */;
    %433 = power(%431, %432) /* ty=Tensor[(15, 12, 15), float64] */;
    (%433,)
  };
  %434(%var_6501) /* ty=(Tensor[(15, 12, 15), float64],) */
}

def @func_9891() -> Tensor[(1, 12, 15), float32] {
  @func_8807() /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_3418(%var_3402: Tensor[(11, 6, 11), float64]) -> (Tensor[(11, 6, 11), float64],) {
  %435 = cast(%var_3402, dtype="float64") /* ty=Tensor[(11, 6, 11), float64] */;
  %436 = cos(%435) /* ty=Tensor[(11, 6, 11), float64] */;
  (%436,)
}

def @func_7801() -> (Tensor[(1, 12, 15), float32], Tensor[(5, 4, 4), bool], Tensor[(80), int64]) {
  %437 = @func_6802() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %438 = cast(meta[relay.Constant][37] /* ty=Tensor[(80), int64] */, dtype="int64") /* ty=Tensor[(80), int64] */;
  %439 = cast(meta[relay.Constant][37] /* ty=Tensor[(80), int64] */, dtype="int64") /* ty=Tensor[(80), int64] */;
  %440 = reshape(%438, newshape=[5, 4, 4]) /* ty=Tensor[(5, 4, 4), int64] */;
  %441 = reshape(%439, newshape=[5, 4, 4]) /* ty=Tensor[(5, 4, 4), int64] */;
  %442 = @func_7232(%440, %441) /* ty=(Tensor[(5, 4, 4), bool],) */;
  %443 = %437.0;
  %444 = %442.0;
  (%443, %444, meta[relay.Constant][37] /* ty=Tensor[(80), int64] */)
}

def @func_5187(%var_5186: Tensor[(1125), uint32]) -> (Tensor[(1, 12, 15), float32], Tensor[(15, 5, 15), uint32], Tensor[(1125), uint32]) {
  %449 = fn (%var_5182: Tensor[(1125), uint32]) -> (Tensor[(1, 12, 15), float32], Tensor[(15, 5, 15), uint32], Tensor[(1125), uint32]) {
    %445 = cast(%var_5182, dtype="uint32") /* ty=Tensor[(1125), uint32] */;
    %446 = reshape(%445, newshape=[15, 5, 15]) /* ty=Tensor[(15, 5, 15), uint32] */;
    %447 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
    %448 = @func_3213(%446) /* ty=Tensor[(15, 5, 15), uint32] */;
    (%447, %448, %var_5182)
  };
  %449(%var_5186) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(15, 5, 15), uint32], Tensor[(1125), uint32]) */
}

def @func_29(%var_22: Tensor[(2, 12, 13), bool]) -> Tensor[(2, 12, 13), bool] {
  %450 = cast(%var_22, dtype="bool") /* ty=Tensor[(2, 12, 13), bool] */;
  %451 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(2, 12, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(meta[relay.Constant][38] /* ty=Tensor[(2, 12, 13), bool] */, dtype="bool") /* ty=Tensor[(2, 12, 13), bool] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%452, %453) /* ty=Tensor[(2, 12, 13), bool] */
}

def @func_4593(%var_4528: Tensor[(9, 8, 5), float32], %var_4552: Tensor[(495), uint16], %var_4590: Tensor[(308), float32]) -> (Tensor[(2, 12, 13), bool], Tensor[(495), uint16], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(9, 8, 5), int64], Tensor[(11, 14, 1), float32], Tensor[(308), float32]) {
  %454 = cast(%var_4552, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %455 = reshape(%454, newshape=[11, 15, 3]) /* ty=Tensor[(11, 15, 3), uint16] */;
  %456 = @func_3856(%455) /* ty=(Tensor[(11, 15, 3), uint16], Tensor[(2, 12, 13), bool], Tensor[(450), float32], Tensor[(2, 264), float32]) */;
  %457 = cast(meta[relay.Constant][39] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %458 = reshape(%457, newshape=[2, 2, 10]) /* ty=Tensor[(2, 2, 10), float32] */;
  %459 = cast(%var_4528, dtype="float32") /* ty=Tensor[(9, 8, 5), float32] */;
  %460 = log10(%459) /* ty=Tensor[(9, 8, 5), float32] */;
  %461 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 8, 5), float32] */, dtype="int64") /* ty=Tensor[(9, 8, 5), int64] */;
  %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%460, dtype="int64") /* ty=Tensor[(9, 8, 5), int64] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %465 = cast(%var_4590, dtype="float32") /* ty=Tensor[(308), float32] */;
  %466 = reshape(%465, newshape=[308, 1]) /* ty=Tensor[(308, 1), float32] */;
  %467 = @func_3501(%466) /* ty=(Tensor[(2, 7, 16), uint8], Tensor[(11, 14, 1), float32], Tensor[(22), float64], Tensor[(308, 1), float32], Tensor[(11, 14, 2), uint32]) */;
  %468 = %456.1;
  %469 = @func_1576(%458) /* ty=Tensor[(2, 2, 10), float32] */;
  %470 = minimum(%463, %464) /* ty=Tensor[(9, 8, 5), int64] */;
  %471 = %467.1;
  (%468, %var_4552, %469, meta[relay.Constant][39] /* ty=Tensor[(40), float32] */, %470, %471, %var_4590)
}

def @func_8662(%var_8660: Tensor[(1, 1200), int64]) -> (Tensor[(16, 12, 15), bool], Tensor[(16, 5, 15), int64], int64, Tensor[(1, 1200), int64]) {
  @func_8659(%var_8660) /* ty=(Tensor[(16, 12, 15), bool], Tensor[(16, 5, 15), int64], int64, Tensor[(1, 1200), int64]) */
}

def @func_9864(%var_9815: Tensor[(10, 13, 16), float32], %var_9858: Tensor[(10, 13, 16), float32]) -> (Tensor[(13, 12, 15), int64], Tensor[(10, 13, 16), int32], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(1, 12, 15), float32], Tensor[(10, 13, 16), bool]) {
  %472 = @func_9759() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(13, 12, 15), int64]) */;
  %473 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 80), float32] */, dtype="float32") /* ty=Tensor[(2, 80), float32] */;
  %474 = reshape(%473, newshape=[10, 1, 16]) /* ty=Tensor[(10, 1, 16), float32] */;
  %475 = @func_1109(%474) /* ty=(Tensor[(10, 1, 16), float32], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) */;
  %476 = %475.0;
  %477 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 80), float32] */, dtype="float32") /* ty=Tensor[(2, 80), float32] */;
  %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%476, dtype="float32") /* ty=Tensor[(10, 1, 16), float32] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %481 = floor_mod(%479, %480) /* ty=Tensor[(10, ?, 16), float32] */;
  %482 = cast(%481, dtype="int32") /* ty=Tensor[(10, ?, 16), int32] */;
  %483 = cast(%var_9815, dtype="int32") /* ty=Tensor[(10, 13, 16), int32] */;
  %484 = cast(meta[relay.Constant][42] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %485 = reshape(%484, newshape=[112, 1]) /* ty=Tensor[(112, 1), float64] */;
  %486 = @func_5469(%485) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64], Tensor[(112, 1), float64]) */;
  %487 = @func_9759() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(13, 12, 15), int64]) */;
  %488 = cast(%481, dtype="float64") /* ty=Tensor[(10, ?, 16), float64] */;
  %489 = cos(%488) /* ty=Tensor[(10, ?, 16), float64] */;
  %490 = cast(%var_9815, dtype="int8") /* ty=Tensor[(10, 13, 16), int8] */;
  %491 = cast(%489, dtype="int8") /* ty=Tensor[(10, ?, 16), int8] */;
  %492 = bitwise_xor(%490, %491) /* ty=Tensor[(10, 13, 16), int8] */;
  %493 = cast(%492, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %494 = atanh(%493) /* ty=Tensor[(10, 13, 16), float32] */;
  %495 = cast(%494, dtype="float32") /* ty=Tensor[(10, 13, 16), float32] */;
  %496 = sigmoid(%495) /* ty=Tensor[(10, 13, 16), float32] */;
  %497 = cast(%var_9858, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %498 = shape_of(%496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %499 = cast(%496, dtype="bool") /* ty=Tensor[(10, 13, 16), bool] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %501 = %472.2;
  %502 = right_shift(%482, %483) /* ty=Tensor[(10, 13, 16), int32] */;
  %503 = %486.1;
  %504 = %487.1;
  %505 = greater(%499, %500) /* ty=Tensor[(10, 13, 16), bool] */;
  (%501, %502, %503, meta[relay.Constant][42] /* ty=Tensor[(112), float64] */, %504, %505)
}

def @func_3558(%var_3556: Tensor[(10, 4, 2), float64]) -> Tensor[(10, 4, 2), float64] {
  @func_3555(%var_3556) /* ty=Tensor[(10, 4, 2), float64] */
}

def @func_2536(%var_2530: Tensor[(16, 1, 7), float64]) -> (Tensor[(16, 1, 7), float64],) {
  %506 = cast(%var_2530, dtype="float64") /* ty=Tensor[(16, 1, 7), float64] */;
  %507 = sigmoid(%506) /* ty=Tensor[(16, 1, 7), float64] */;
  (%507,)
}

def @func_8784() -> (Tensor[(?, 12, 15), bool], Tensor[(392, 4), bool], int64, Tensor[(36), int64]) {
  @func_8782() /* ty=(Tensor[(?, 12, 15), bool], Tensor[(392, 4), bool], int64, Tensor[(36), int64]) */
}

def @func_9664() -> (Tensor[(1, 12, 15), float32],) {
  @func_9662() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_8144() -> (Tensor[(16, 8, 9), float32],) {
  %510 = fn () -> (Tensor[(16, 8, 9), float32],) {
    %508 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 8, 9), float32] */, dtype="float32") /* ty=Tensor[(16, 8, 9), float32] */;
    %509 = cosh(%508) /* ty=Tensor[(16, 8, 9), float32] */;
    (%509,)
  };
  %510() /* ty=(Tensor[(16, 8, 9), float32],) */
}

def @func_10063() -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(11, 14, 2), float32]) {
  @func_10061() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(11, 14, 2), float32]) */
}

def @func_4406(%var_4402: Tensor[(3, 16, 2), float32]) -> Tensor[(3, 16, 2), float32] {
  %511 = cast(%var_4402, dtype="float32") /* ty=Tensor[(3, 16, 2), float32] */;
  acosh(%511) /* ty=Tensor[(3, 16, 2), float32] */
}

def @func_7365(%var_7363: Tensor[(16, 12, 15), float32]) -> Tensor[(16, 12, 15), uint64] {
  @func_7362(%var_7363) /* ty=Tensor[(16, 12, 15), uint64] */
}

def @func_8052() -> (Tensor[(1, 12, 15), float32],) {
  %514 = fn () -> (Tensor[(1, 12, 15), float32],) {
    %512 = @func_7912() /* ty=(Tensor[(15, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(11, 6, 11), float64], Tensor[(392, 4), bool], Tensor[(726), float64]) */;
    %513 = %512.1;
    (%513,)
  };
  %514() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_9303() -> Tensor[(2, 3, 7), float64] {
  @func_9301() /* ty=Tensor[(2, 3, 7), float64] */
}

def @func_8505() -> (Tensor[(15, 12, 15), int32], Tensor[(1, 12, 15), float32]) {
  %515 = @func_6739() /* ty=Tensor[(15, 12, 15), float32] */;
  %516 = cast(meta[relay.Constant][44] /* ty=Tensor[(15, 12, 15), float32] */, dtype="int32") /* ty=Tensor[(15, 12, 15), int32] */;
  %517 = shape_of(%515, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(%515, dtype="int32") /* ty=Tensor[(15, 12, 15), int32] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %520 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %521 = subtract(%518, %519) /* ty=Tensor[(15, 12, 15), int32] */;
  %522 = %520.0;
  (%521, %522)
}

def @func_3859(%var_3857: Tensor[(11, 15, 3), uint16]) -> (Tensor[(11, 15, 3), uint16], Tensor[(2, 12, 13), bool], Tensor[(450), float32], Tensor[(2, 264), float32]) {
  @func_3856(%var_3857) /* ty=(Tensor[(11, 15, 3), uint16], Tensor[(2, 12, 13), bool], Tensor[(450), float32], Tensor[(2, 264), float32]) */
}

def @func_4634(%var_4632: Tensor[(13, 11, 1), float64], %var_4633: Tensor[(13, 11, 15), float64]) -> (Tensor[(13, 11, 15), float64],) {
  %526 = fn (%var_4624: Tensor[(13, 11, 1), float64], %var_4625: Tensor[(13, 11, 15), float64]) -> (Tensor[(13, 11, 15), float64],) {
    %523 = cast(%var_4624, dtype="float64") /* ty=Tensor[(13, 11, 1), float64] */;
    %524 = cast(%var_4625, dtype="float64") /* ty=Tensor[(13, 11, 15), float64] */;
    %525 = floor_divide(%523, %524) /* ty=Tensor[(13, 11, 15), float64] */;
    (%525,)
  };
  %526(%var_4632, %var_4633) /* ty=(Tensor[(13, 11, 15), float64],) */
}

def @func_6233() -> (Tensor[(15, 12, 15), float32],) {
  @func_6231() /* ty=(Tensor[(15, 12, 15), float32],) */
}

def @func_8938(%var_8937: uint64) -> (Tensor[(10, 11, 7), uint64],) {
  %530 = fn (%var_8926: uint64) -> (Tensor[(10, 11, 7), uint64],) {
    %527 = cast(%var_8926, dtype="uint64") /* ty=uint64 */;
    %528 = cast(meta[relay.Constant][45] /* ty=Tensor[(10, 11, 7), uint64] */, dtype="uint64") /* ty=Tensor[(10, 11, 7), uint64] */;
    %529 = maximum(%527, %528) /* ty=Tensor[(10, 11, 7), uint64] */;
    (%529,)
  };
  %530(%var_8937) /* ty=(Tensor[(10, 11, 7), uint64],) */
}

def @func_5972() -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) {
  %535 = fn () -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) {
    %531 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %532 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %533 = %531.0;
    %534 = %532.0;
    (%533, %534)
  };
  %535() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */
}

def @func_5420() -> (Tensor[(1, 12, 15), float32],) {
  @func_5418() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_6207(%var_6205: Tensor[(1, 55), uint32], %var_6206: Tensor[(385), uint32]) -> (Tensor[(1, 12, 15), float32], Tensor[(16, 5, 15), int64], Tensor[(1, 55), uint32], Tensor[(385), uint32], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64]) {
  %557 = fn (%var_6163: Tensor[(1, 55), uint32], %var_6164: Tensor[(385), uint32]) -> (Tensor[(1, 12, 15), float32], Tensor[(16, 5, 15), int64], Tensor[(1, 55), uint32], Tensor[(385), uint32], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64]) {
    %536 = cast(%var_6163, dtype="uint32") /* ty=Tensor[(1, 55), uint32] */;
    %537 = cast(%var_6164, dtype="uint32") /* ty=Tensor[(385), uint32] */;
    %538 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
    %539 = cast(%538, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
    %540 = reshape(%536, newshape=[11, 5, 1]) /* ty=Tensor[(11, 5, 1), uint32] */;
    %541 = reshape(%537, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), uint32] */;
    %542 = reshape(%539, newshape=[30, 6]) /* ty=Tensor[(30, 6), float32] */;
    %543 = @func_5378(%540, %541, %542) /* ty=(Tensor[(11, 5, 7), uint32], Tensor[(5, 12, 3), float32], Tensor[(30, 6), float32], Tensor[(16, 5, 15), int64], int64, Tensor[(1200), int64]) */;
    %544 = cast(meta[relay.Constant][46] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %545 = reshape(%544, newshape=[16, 1, 7]) /* ty=Tensor[(16, 1, 7), float64] */;
    %546 = @func_2536(%545) /* ty=(Tensor[(16, 1, 7), float64],) */;
    %547 = %546.0;
    %548 = cast(%547, dtype="float64") /* ty=Tensor[(16, 1, 7), float64] */;
    %549 = reshape(%548, newshape=[112, 1]) /* ty=Tensor[(112, 1), float64] */;
    %550 = @func_5469(%549) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64], Tensor[(112, 1), float64]) */;
    %551 = cast(%547, dtype="float64") /* ty=Tensor[(16, 1, 7), float64] */;
    %552 = reshape(%551, newshape=[16, 1, 7]) /* ty=Tensor[(16, 1, 7), float64] */;
    %553 = @func_2536(%552) /* ty=(Tensor[(16, 1, 7), float64],) */;
    %554 = %543.3;
    %555 = %550.0;
    %556 = %553.0;
    (%538, %554, %var_6163, %var_6164, %547, meta[relay.Constant][46] /* ty=Tensor[(112), float64] */, %555, %556)
  };
  %557(%var_6205, %var_6206) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(16, 5, 15), int64], Tensor[(1, 55), uint32], Tensor[(385), uint32], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64]) */
}

def @func_8137(%var_8136: Tensor[(1200, 1), int64]) -> (Tensor[(1, 12, 15), float32], Tensor[(13, 11, 15), float64], Tensor[(36), int64], Tensor[(16, 5, 15), int64], int64, Tensor[(1200, 1), int64]) {
  %570 = fn (%var_8116: Tensor[(1200, 1), int64]) -> (Tensor[(1, 12, 15), float32], Tensor[(13, 11, 15), float64], Tensor[(36), int64], Tensor[(16, 5, 15), int64], int64, Tensor[(1200, 1), int64]) {
    %558 = @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %559 = cast(meta[relay.Constant][47] /* ty=Tensor[(36), int64] */, dtype="int64") /* ty=Tensor[(36), int64] */;
    %560 = reshape(%559, newshape=[9, 4]) /* ty=Tensor[(9, 4), int64] */;
    %561 = @func_5699(%560) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(4, 9, 1), int64], int64, Tensor[(9, 4), int64], Tensor[(13, 11, 15), float64], Tensor[(143), float64], Tensor[(1, 2145), float64]) */;
    %562 = cast(-4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %563 = cast(%var_8116, dtype="int64") /* ty=Tensor[(1200, 1), int64] */;
    %564 = reshape(%562, newshape=[]) /* ty=int64 */;
    %565 = reshape(%563, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), int64] */;
    %566 = @func_4003(%564, %565) /* ty=(Tensor[(16, 5, 15), int64],) */;
    %567 = %558.0;
    %568 = %561.4;
    %569 = %566.0;
    (%567, %568, meta[relay.Constant][47] /* ty=Tensor[(36), int64] */, %569, -4 /* ty=int64 */, %var_8116)
  };
  %570(%var_8136) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(13, 11, 15), float64], Tensor[(36), int64], Tensor[(16, 5, 15), int64], int64, Tensor[(1200, 1), int64]) */
}

def @func_9760() -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(13, 12, 15), int64]) {
  %577 = fn () -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(13, 12, 15), int64]) {
    %571 = @func_7526() /* ty=Tensor[(1, 12, 15), float32] */;
    %572 = cast(%571, dtype="int64") /* ty=Tensor[(1, 12, 15), int64] */;
    %573 = cast(meta[relay.Constant][48] /* ty=Tensor[(13, 12, 15), float32] */, dtype="int64") /* ty=Tensor[(13, 12, 15), int64] */;
    %574 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
    %575 = @func_7526() /* ty=Tensor[(1, 12, 15), float32] */;
    %576 = bitwise_xor(%572, %573) /* ty=Tensor[(13, 12, 15), int64] */;
    (%574, %575, %576)
  };
  %577() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(13, 12, 15), int64]) */
}

def @func_9662() -> (Tensor[(1, 12, 15), float32],) {
  %578 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %579 = %578.0;
  (%579,)
}

def @func_9910() -> (Tensor[(1, 12, 15), float32],) {
  @func_9908() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_9199() -> Tensor[(1, 12, 15), float32] {
  %581 = fn () -> Tensor[(1, 12, 15), float32] {
    %580 = @func_6107() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
    %580.1
  };
  %581() /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_10061() -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(11, 14, 2), float32]) {
  %582 = @func_6300() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32]) */;
  %583 = @func_5418() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %584 = @func_9942() /* ty=Tensor[(11, 14, 2), uint32] */;
  %585 = cast(%584, dtype="float32") /* ty=Tensor[(11, 14, 2), float32] */;
  %586 = %582.0;
  %587 = %583.0;
  %588 = cos(%585) /* ty=Tensor[(11, 14, 2), float32] */;
  (%586, %587, %588)
}

def @func_5282(%var_5280: Tensor[(36), int64], %var_5281: Tensor[(495), uint16]) -> (Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(450), bool], int64, Tensor[(36), int64], Tensor[(2, 2, 10), float32], Tensor[(2, 264), float32], Tensor[(495), uint16]) {
  @func_5278(%var_5280, %var_5281) /* ty=(Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(450), bool], int64, Tensor[(36), int64], Tensor[(2, 2, 10), float32], Tensor[(2, 264), float32], Tensor[(495), uint16]) */
}

def @func_6730(%var_6728: Tensor[(308), float32], %var_6729: Tensor[(363, 2), float64]) -> (Tensor[(?, 12, 15), uint16], Tensor[(13, 11, 15), float64], Tensor[(13, 11), float64], Tensor[(2145), float64], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(308), float32], Tensor[(11, 6, 11), float64], Tensor[(363, 2), float64]) {
  @func_6726(%var_6728, %var_6729) /* ty=(Tensor[(?, 12, 15), uint16], Tensor[(13, 11, 15), float64], Tensor[(13, 11), float64], Tensor[(2145), float64], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(308), float32], Tensor[(11, 6, 11), float64], Tensor[(363, 2), float64]) */
}

def @func_5506(%var_5505: Tensor[(8, 12, 15), float32]) -> (Tensor[(8, 12, 15), uint16],) {
  %594 = fn (%var_5490: Tensor[(8, 12, 15), float32]) -> (Tensor[(8, 12, 15), uint16],) {
    %589 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %590 = %589.0;
    %591 = cast(%590, dtype="uint16") /* ty=Tensor[(1, 12, 15), uint16] */;
    %592 = cast(%var_5490, dtype="uint16") /* ty=Tensor[(8, 12, 15), uint16] */;
    %593 = logical_xor(%591, %592) /* ty=Tensor[(8, 12, 15), uint16] */;
    (%593,)
  };
  %594(%var_5505) /* ty=(Tensor[(8, 12, 15), uint16],) */
}

def @func_5382(%var_5379: Tensor[(11, 5, 1), uint32], %var_5380: Tensor[(11, 5, 7), uint32], %var_5381: Tensor[(30, 6), float32]) -> (Tensor[(11, 5, 7), uint32], Tensor[(5, 12, 3), float32], Tensor[(30, 6), float32], Tensor[(16, 5, 15), int64], int64, Tensor[(1200), int64]) {
  %609 = fn (%var_5359: Tensor[(11, 5, 1), uint32], %var_5360: Tensor[(11, 5, 7), uint32], %var_5367: Tensor[(30, 6), float32]) -> (Tensor[(11, 5, 7), uint32], Tensor[(5, 12, 3), float32], Tensor[(30, 6), float32], Tensor[(16, 5, 15), int64], int64, Tensor[(1200), int64]) {
    %595 = cast(%var_5359, dtype="uint32") /* ty=Tensor[(11, 5, 1), uint32] */;
    %596 = cast(%var_5360, dtype="uint32") /* ty=Tensor[(11, 5, 7), uint32] */;
    %597 = cast(%var_5367, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
    %598 = cast(%var_5367, dtype="float32") /* ty=Tensor[(30, 6), float32] */;
    %599 = reshape(%597, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
    %600 = reshape(%598, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
    %601 = cast(9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %602 = cast(meta[relay.Constant][49] /* ty=Tensor[(1200), int64] */, dtype="int64") /* ty=Tensor[(1200), int64] */;
    %603 = reshape(%601, newshape=[]) /* ty=int64 */;
    %604 = reshape(%602, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), int64] */;
    %605 = @func_4003(%603, %604) /* ty=(Tensor[(16, 5, 15), int64],) */;
    %606 = right_shift(%595, %596) /* ty=Tensor[(11, 5, 7), uint32] */;
    %607 = @func_4987(%599, %600) /* ty=Tensor[(5, 12, 3), float32] */;
    %608 = %605.0;
    (%606, %607, %var_5367, %608, 9 /* ty=int64 */, meta[relay.Constant][49] /* ty=Tensor[(1200), int64] */)
  };
  %609(%var_5379, %var_5380, %var_5381) /* ty=(Tensor[(11, 5, 7), uint32], Tensor[(5, 12, 3), float32], Tensor[(30, 6), float32], Tensor[(16, 5, 15), int64], int64, Tensor[(1200), int64]) */
}

def @func_7913() -> (Tensor[(15, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(11, 6, 11), float64], Tensor[(392, 4), bool], Tensor[(726), float64]) {
  %621 = fn () -> (Tensor[(15, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(11, 6, 11), float64], Tensor[(392, 4), bool], Tensor[(726), float64]) {
    %610 = @func_7471() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
    %611 = cast(meta[relay.Constant][50] /* ty=Tensor[(392, 4), bool] */, dtype="bool") /* ty=Tensor[(392, 4), bool] */;
    %612 = cast(meta[relay.Constant][50] /* ty=Tensor[(392, 4), bool] */, dtype="bool") /* ty=Tensor[(392, 4), bool] */;
    %613 = cast(meta[relay.Constant][51] /* ty=Tensor[(726), float64] */, dtype="float64") /* ty=Tensor[(726), float64] */;
    %614 = reshape(%611, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), bool] */;
    %615 = reshape(%612, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), bool] */;
    %616 = reshape(%613, newshape=[726]) /* ty=Tensor[(726), float64] */;
    %617 = @func_6881(%614, %615, %616) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(14, 7, 16), float32], Tensor[(11, 6, 11), float64], Tensor[(726), float64]) */;
    %618 = @func_6739() /* ty=Tensor[(15, 12, 15), float32] */;
    %619 = %610.1;
    %620 = %617.2;
    (%618, %619, %620, meta[relay.Constant][50] /* ty=Tensor[(392, 4), bool] */, meta[relay.Constant][51] /* ty=Tensor[(726), float64] */)
  };
  %621() /* ty=(Tensor[(15, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(11, 6, 11), float64], Tensor[(392, 4), bool], Tensor[(726), float64]) */
}

def @func_7178(%var_7122: Tensor[(77, 4), float32], %var_7169: Tensor[(22), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(77, 4), float32], Tensor[(11, 14, 22), bool]) {
  %622 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %623 = cast(meta[relay.Constant][52] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %624 = atanh(%623) /* ty=Tensor[(22), float64] */;
  %625 = cast(%var_7169, dtype="int32") /* ty=Tensor[(22), int32] */;
  %626 = shape_of(%624, dtype="int32") /* ty=Tensor[(1), int32] */;
  %627 = cast(%624, dtype="int32") /* ty=Tensor[(22), int32] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?), int32] */;
  %629 = maximum(%627, %628) /* ty=Tensor[(22), int32] */;
  %630 = cast(meta[relay.Constant][52] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %631 = cast(%var_7122, dtype="float32") /* ty=Tensor[(77, 4), float32] */;
  %632 = reshape(%630, newshape=[22]) /* ty=Tensor[(22), float64] */;
  %633 = reshape(%631, newshape=[11, 14, 2]) /* ty=Tensor[(11, 14, 2), float32] */;
  %634 = @func_3179(%632, %633) /* ty=(Tensor[(11, 14, 1), float32], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(11, 14, 2), uint32], Tensor[(1, 2, 11), float64]) */;
  %635 = %634.0;
  %636 = cast(meta[relay.Constant][52] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %637 = cast(%635, dtype="float64") /* ty=Tensor[(11, 14, 1), float64] */;
  %638 = floor_mod(%636, %637) /* ty=Tensor[(11, 14, 22), float64] */;
  %639 = cast(%629, dtype="bool") /* ty=Tensor[(22), bool] */;
  %640 = cast(%638, dtype="bool") /* ty=Tensor[(11, 14, 22), bool] */;
  %641 = %622.0;
  %642 = logical_or(%639, %640) /* ty=Tensor[(11, 14, 22), bool] */;
  (%641, %var_7122, %642)
}

def @func_9390() -> (Tensor[(1, 12, 15), float32], Tensor[(11, 14, 2), uint32], Tensor[(7, 44), float32]) {
  @func_9388() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(11, 14, 2), uint32], Tensor[(7, 44), float32]) */
}

def @func_5166() -> (Tensor[(1, 12, 15), float32],) {
  @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_8156(%var_8155: Tensor[(13, 3, 7), uint8]) -> (Tensor[(13, 3, 7), bool],) {
  %648 = fn (%var_8147: Tensor[(13, 3, 7), uint8]) -> (Tensor[(13, 3, 7), bool],) {
    %643 = cast(meta[relay.Constant][53] /* ty=Tensor[(13, 3, 7), uint8] */, dtype="bool") /* ty=Tensor[(13, 3, 7), bool] */;
    %644 = shape_of(%var_8147, dtype="int32") /* ty=Tensor[(3), int32] */;
    %645 = cast(%var_8147, dtype="bool") /* ty=Tensor[(13, 3, 7), bool] */;
    %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %647 = less(%645, %646) /* ty=Tensor[(13, 3, 7), bool] */;
    (%647,)
  };
  %648(%var_8155) /* ty=(Tensor[(13, 3, 7), bool],) */
}

def @func_9290(%var_9289: Tensor[(13, 12, 15), float32]) -> (Tensor[(13, 12, 15), float64], Tensor[(1, 12, 15), float64]) {
  %663 = fn (%var_9256: Tensor[(13, 12, 15), float32]) -> (Tensor[(13, 12, 15), float64], Tensor[(1, 12, 15), float64]) {
    %649 = @func_8301() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %650 = %649.0;
    %651 = cast(%650, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
    %652 = cast(%var_9256, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
    %653 = floor_divide(%651, %652) /* ty=Tensor[(13, 12, 15), float64] */;
    %654 = cast(%var_9256, dtype="int16") /* ty=Tensor[(13, 12, 15), int16] */;
    %655 = shape_of(%653, dtype="int32") /* ty=Tensor[(3), int32] */;
    %656 = cast(%653, dtype="int16") /* ty=Tensor[(13, 12, 15), int16] */;
    %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %658 = right_shift(%656, %657) /* ty=Tensor[(13, 12, 15), int16] */;
    %659 = cast(%658, dtype="float64") /* ty=Tensor[(13, 12, 15), float64] */;
    %660 = cast(%650, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
    %661 = acos(%659) /* ty=Tensor[(13, 12, 15), float64] */;
    %662 = acosh(%660) /* ty=Tensor[(1, 12, 15), float64] */;
    (%661, %662)
  };
  %663(%var_9289) /* ty=(Tensor[(13, 12, 15), float64], Tensor[(1, 12, 15), float64]) */
}

def @func_6765() -> (Tensor[(1, 12, 15), float32],) {
  %666 = fn () -> (Tensor[(1, 12, 15), float32],) {
    %664 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %665 = %664.0;
    (%665,)
  };
  %666() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_7236(%var_7234: Tensor[(5, 4, 4), int64], %var_7235: Tensor[(5, 4, 4), int64]) -> (Tensor[(5, 4, 4), bool],) {
  @func_7232(%var_7234, %var_7235) /* ty=(Tensor[(5, 4, 4), bool],) */
}

def @func_7471() -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) {
  %667 = @func_6604() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %668 = @func_5164() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %669 = %667.0;
  %670 = @func_7104() /* ty=Tensor[(1, 12, 15), float32] */;
  %671 = %668.0;
  (%669, %670, %671)
}

def @func_8782() -> (Tensor[(?, 12, 15), bool], Tensor[(392, 4), bool], int64, Tensor[(36), int64]) {
  %672 = @func_8051() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %673 = %672.0;
  %674 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 12, 15), float32] */, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
  %675 = shape_of(%673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%673, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %678 = @func_7912() /* ty=(Tensor[(15, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(11, 6, 11), float64], Tensor[(392, 4), bool], Tensor[(726), float64]) */;
  %679 = cast(meta[relay.Constant][55] /* ty=Tensor[(36), int64] */, dtype="int64") /* ty=Tensor[(36), int64] */;
  %680 = reshape(%679, newshape=[9, 4]) /* ty=Tensor[(9, 4), int64] */;
  %681 = @func_5699(%680) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(4, 9, 1), int64], int64, Tensor[(9, 4), int64], Tensor[(13, 11, 15), float64], Tensor[(143), float64], Tensor[(1, 2145), float64]) */;
  %682 = not_equal(%676, %677) /* ty=Tensor[(?, 12, 15), bool] */;
  %683 = %678.3;
  %684 = %681.2;
  (%682, %683, %684, meta[relay.Constant][55] /* ty=Tensor[(36), int64] */)
}

def @func_6542(%var_6540: Tensor[(5, 99), uint16]) -> (Tensor[(?, 12, 15), float32], Tensor[(1, 12, 15), float64], Tensor[(5, 99), uint16], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(36), float64]) {
  @func_6539(%var_6540) /* ty=(Tensor[(?, 12, 15), float32], Tensor[(1, 12, 15), float64], Tensor[(5, 99), uint16], Tensor[(16, 1, 7), float64], Tensor[(112), float64], Tensor[(36), float64]) */
}

def @func_8378() -> (Tensor[(?, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(5, 12, 3), float32]) {
  %694 = fn () -> (Tensor[(?, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(5, 12, 3), float32]) {
    %685 = @func_6300() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32]) */;
    %686 = @func_5971() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
    %687 = %685.1;
    %688 = cast(%687, dtype="float32") /* ty=Tensor[(?, 12, 15), float32] */;
    %689 = %686.0;
    %690 = cast(%689, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
    %691 = reshape(%688, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
    %692 = reshape(%690, newshape=[5, 12, 3]) /* ty=Tensor[(5, 12, 3), float32] */;
    %693 = @func_4987(%691, %692) /* ty=Tensor[(5, 12, 3), float32] */;
    (%687, %689, %693)
  };
  %694() /* ty=(Tensor[(?, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(5, 12, 3), float32]) */
}

def @func_9893() -> Tensor[(1, 12, 15), float32] {
  @func_9891() /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_4598(%var_4595: Tensor[(9, 8, 5), float32], %var_4596: Tensor[(495), uint16], %var_4597: Tensor[(308), float32]) -> (Tensor[(2, 12, 13), bool], Tensor[(495), uint16], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(9, 8, 5), int64], Tensor[(11, 14, 1), float32], Tensor[(308), float32]) {
  @func_4593(%var_4595, %var_4596, %var_4597) /* ty=(Tensor[(2, 12, 13), bool], Tensor[(495), uint16], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(9, 8, 5), int64], Tensor[(11, 14, 1), float32], Tensor[(308), float32]) */
}

def @func_6302() -> (Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32]) {
  @func_6300() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32]) */
}

def @func_6802() -> (Tensor[(1, 12, 15), float32],) {
  %695 = @func_6604() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %696 = %695.0;
  (%696,)
}

def @func_9191() -> (Tensor[(1, 12, 15), float32],) {
  %699 = fn () -> (Tensor[(1, 12, 15), float32],) {
    %697 = @func_6764() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %698 = %697.0;
    (%698,)
  };
  %699() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_9639(%var_9638: Tensor[(4, 4, 3), float64]) -> (Tensor[(4, 4, 3), bool], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32], Tensor[(4, 4, 3), float64], Tensor[(16, 8, 9), float32], Tensor[(4, 4, 3), float32], Tensor[(1, 2, 11), float64], Tensor[(1, 22), float64]) {
  %723 = fn (%var_9591: Tensor[(4, 4, 3), float64]) -> (Tensor[(4, 4, 3), bool], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32], Tensor[(4, 4, 3), float64], Tensor[(16, 8, 9), float32], Tensor[(4, 4, 3), float32], Tensor[(1, 2, 11), float64], Tensor[(1, 22), float64]) {
    %700 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 4, 3), float64] */, dtype="bool") /* ty=Tensor[(4, 4, 3), bool] */;
    %701 = shape_of(%var_9591, dtype="int32") /* ty=Tensor[(3), int32] */;
    %702 = cast(%var_9591, dtype="bool") /* ty=Tensor[(4, 4, 3), bool] */;
    %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %704 = @func_5971() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
    %705 = @func_6802() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %706 = @func_7501() /* ty=(Tensor[(15, 12, 15), float32], Tensor[(?, 12, 15), float32]) */;
    %707 = cast(%var_9591, dtype="float64") /* ty=Tensor[(4, 4, 3), float64] */;
    %708 = rsqrt(%707) /* ty=Tensor[(4, 4, 3), float64] */;
    %709 = cast(%708, dtype="float64") /* ty=Tensor[(4, 4, 3), float64] */;
    %710 = @func_8143() /* ty=(Tensor[(16, 8, 9), float32],) */;
    %711 = cast(%708, dtype="float32") /* ty=Tensor[(4, 4, 3), float32] */;
    %712 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 22), float64] */, dtype="float64") /* ty=Tensor[(1, 22), float64] */;
    %713 = reshape(%712, newshape=[1, 2, 11]) /* ty=Tensor[(1, 2, 11), float64] */;
    %714 = @func_3115(%713) /* ty=(Tensor[(1, 2, 11), float64],) */;
    %715 = less_equal(%702, %703) /* ty=Tensor[(4, 4, 3), bool] */;
    %716 = %704.1;
    %717 = %705.0;
    %718 = %706.1;
    %719 = tan(%709) /* ty=Tensor[(4, 4, 3), float64] */;
    %720 = %710.0;
    %721 = erf(%711) /* ty=Tensor[(4, 4, 3), float32] */;
    %722 = %714.0;
    (%715, %716, %717, %718, %719, %720, %721, %722, meta[relay.Constant][57] /* ty=Tensor[(1, 22), float64] */)
  };
  %723(%var_9638) /* ty=(Tensor[(4, 4, 3), bool], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32], Tensor[(4, 4, 3), float64], Tensor[(16, 8, 9), float32], Tensor[(4, 4, 3), float32], Tensor[(1, 2, 11), float64], Tensor[(1, 22), float64]) */
}

def @func_8022(%var_8001: Tensor[(112), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(112), float64], Tensor[(1, 12, 15), float64]) {
  %724 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %725 = cast(%var_8001, dtype="float64") /* ty=Tensor[(112), float64] */;
  %726 = reshape(%725, newshape=[112]) /* ty=Tensor[(112), float64] */;
  %727 = @func_7571(%726) /* ty=(Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(112), float64]) */;
  %728 = %727.0;
  %729 = cast(%728, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
  %730 = %724.0;
  %731 = sqrt(%729) /* ty=Tensor[(1, 12, 15), float64] */;
  (%730, %var_8001, %731)
}

def @func_7528() -> Tensor[(1, 12, 15), float32] {
  @func_7526() /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_3115(%var_3104: Tensor[(1, 2, 11), float64]) -> (Tensor[(1, 2, 11), float64],) {
  %732 = cast(%var_3104, dtype="float64") /* ty=Tensor[(1, 2, 11), float64] */;
  %733 = cos(%732) /* ty=Tensor[(1, 2, 11), float64] */;
  (%733,)
}

def @func_2847(%var_2844: Tensor[(10, 5, 9), float32], %var_2845: Tensor[(528), float32], %var_2846: Tensor[(10, 5, 9), float32]) -> (Tensor[(2, 12, 13), bool], Tensor[(528), float32], Tensor[(6, 52), bool], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(10, 5, 9), float64], Tensor[(10, 5, 9), float64]) {
  @func_2842(%var_2844, %var_2845, %var_2846) /* ty=(Tensor[(2, 12, 13), bool], Tensor[(528), float32], Tensor[(6, 52), bool], Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(10, 5, 9), float64], Tensor[(10, 5, 9), float64]) */
}

def @func_5471(%var_5470: Tensor[(112, 1), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64], Tensor[(112, 1), float64]) {
  %739 = fn (%var_5464: Tensor[(112, 1), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64], Tensor[(112, 1), float64]) {
    %734 = cast(%var_5464, dtype="float64") /* ty=Tensor[(112, 1), float64] */;
    %735 = reshape(%734, newshape=[16, 1, 7]) /* ty=Tensor[(16, 1, 7), float64] */;
    %736 = @func_2536(%735) /* ty=(Tensor[(16, 1, 7), float64],) */;
    %737 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
    %738 = %736.0;
    (%737, %738, %var_5464)
  };
  %739(%var_5470) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(16, 1, 7), float64], Tensor[(112, 1), float64]) */
}

def @func_5278(%var_5263: Tensor[(36), int64], %var_5274: Tensor[(495), uint16]) -> (Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(450), bool], int64, Tensor[(36), int64], Tensor[(2, 2, 10), float32], Tensor[(2, 264), float32], Tensor[(495), uint16]) {
  %740 = cast(meta[relay.Constant][58] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %741 = reshape(%740, newshape=[2, 2, 10]) /* ty=Tensor[(2, 2, 10), float32] */;
  %742 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
  %743 = cast(%742, dtype="float64") /* ty=Tensor[(1, 12, 15), float64] */;
  %744 = cast(%742, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  %745 = cast(-9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %746 = cast(%var_5263, dtype="int64") /* ty=Tensor[(36), int64] */;
  %747 = reshape(%745, newshape=[]) /* ty=int64 */;
  %748 = reshape(%746, newshape=[4, 9, 1]) /* ty=Tensor[(4, 9, 1), int64] */;
  %749 = @func_5128(%747, %748) /* ty=(Tensor[(4, 9, 1), int64], Tensor[(495), uint16], Tensor[(450), bool]) */;
  %750 = @func_1576(%741) /* ty=Tensor[(2, 2, 10), float32] */;
  %751 = cast(%750, dtype="float32") /* ty=Tensor[(2, 2, 10), float32] */;
  %752 = reshape(%751, newshape=[2, 2, 10]) /* ty=Tensor[(2, 2, 10), float32] */;
  %753 = cast(%var_5274, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %754 = reshape(%753, newshape=[11, 15, 3]) /* ty=Tensor[(11, 15, 3), uint16] */;
  %755 = @func_3856(%754) /* ty=(Tensor[(11, 15, 3), uint16], Tensor[(2, 12, 13), bool], Tensor[(450), float32], Tensor[(2, 264), float32]) */;
  %756 = atanh(%743) /* ty=Tensor[(1, 12, 15), float64] */;
  %757 = log2(%744) /* ty=Tensor[(1, 12, 15), float32] */;
  %758 = %749.2;
  %759 = @func_1576(%752) /* ty=Tensor[(2, 2, 10), float32] */;
  %760 = %755.3;
  (%750, meta[relay.Constant][58] /* ty=Tensor[(40), float32] */, %756, %757, %758, -9 /* ty=int64 */, %var_5263, %759, %760, %var_5274)
}

def @func_9544() -> Tensor[(1, 12, 15), float32] {
  @func_9542() /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_8507() -> (Tensor[(15, 12, 15), int32], Tensor[(1, 12, 15), float32]) {
  @func_8505() /* ty=(Tensor[(15, 12, 15), int32], Tensor[(1, 12, 15), float32]) */
}

def @func_6726(%var_6695: Tensor[(308), float32], %var_6723: Tensor[(363, 2), float64]) -> (Tensor[(?, 12, 15), uint16], Tensor[(13, 11, 15), float64], Tensor[(13, 11), float64], Tensor[(2145), float64], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(308), float32], Tensor[(11, 6, 11), float64], Tensor[(363, 2), float64]) {
  %761 = @func_6107() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %762 = %761.0;
  %763 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 12, 15), float32] */, dtype="int64") /* ty=Tensor[(1, 12, 15), int64] */;
  %764 = shape_of(%762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(%762, dtype="int64") /* ty=Tensor[(1, 12, 15), int64] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %767 = right_shift(%765, %766) /* ty=Tensor[(?, 12, 15), int64] */;
  %768 = cast(%767, dtype="uint16") /* ty=Tensor[(?, 12, 15), uint16] */;
  %769 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(1, 12, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 12, 15), float32] */, dtype="uint16") /* ty=Tensor[(1, 12, 15), uint16] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %772 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 11), float64] */, dtype="float64") /* ty=Tensor[(13, 11), float64] */;
  %773 = cast(meta[relay.Constant][61] /* ty=Tensor[(2145), float64] */, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %774 = reshape(%772, newshape=[13, 11, 1]) /* ty=Tensor[(13, 11, 1), float64] */;
  %775 = reshape(%773, newshape=[13, 11, 15]) /* ty=Tensor[(13, 11, 15), float64] */;
  %776 = @func_4631(%774, %775) /* ty=(Tensor[(13, 11, 15), float64],) */;
  %777 = cast(meta[relay.Constant][62] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %778 = cast(%var_6695, dtype="float32") /* ty=Tensor[(308), float32] */;
  %779 = reshape(%777, newshape=[22]) /* ty=Tensor[(22), float64] */;
  %780 = reshape(%778, newshape=[11, 14, 2]) /* ty=Tensor[(11, 14, 2), float32] */;
  %781 = @func_3179(%779, %780) /* ty=(Tensor[(11, 14, 1), float32], Tensor[(1, 2, 11), float64], Tensor[(22), float64], Tensor[(11, 14, 2), uint32], Tensor[(1, 2, 11), float64]) */;
  %782 = cast(%var_6723, dtype="float64") /* ty=Tensor[(363, 2), float64] */;
  %783 = reshape(%782, newshape=[11, 6, 11]) /* ty=Tensor[(11, 6, 11), float64] */;
  %784 = @func_3418(%783) /* ty=(Tensor[(11, 6, 11), float64],) */;
  %785 = bitwise_and(%770, %771) /* ty=Tensor[(?, 12, 15), uint16] */;
  %786 = %776.0;
  %787 = %781.4;
  %788 = %784.0;
  (%785, %786, meta[relay.Constant][60] /* ty=Tensor[(13, 11), float64] */, meta[relay.Constant][61] /* ty=Tensor[(2145), float64] */, %787, meta[relay.Constant][62] /* ty=Tensor[(22), float64] */, %var_6695, %788, %var_6723)
}

def @func_8025(%var_8023: Tensor[(112), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(112), float64], Tensor[(1, 12, 15), float64]) {
  @func_8022(%var_8023) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(112), float64], Tensor[(1, 12, 15), float64]) */
}

def @func_3118(%var_3116: Tensor[(1, 2, 11), float64]) -> (Tensor[(1, 2, 11), float64],) {
  @func_3115(%var_3116) /* ty=(Tensor[(1, 2, 11), float64],) */
}

def @func_32(%var_30: Tensor[(2, 12, 13), bool]) -> Tensor[(2, 12, 13), bool] {
  @func_29(%var_30) /* ty=Tensor[(2, 12, 13), bool] */
}

def @func_6109() -> (Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) {
  @func_6107() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */
}

def @func_7641() -> (Tensor[(1, 12, 15), float32],) {
  @func_7639() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_9542() -> Tensor[(1, 12, 15), float32] {
  %789 = @func_7471() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32]) */;
  %790 = %789.2;
  %791 = cast(%790, dtype="float32") /* ty=Tensor[(1, 12, 15), float32] */;
  sinh(%791) /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_6881(%var_6845: Tensor[(14, 7, 16), bool], %var_6846: Tensor[(14, 7, 16), bool], %var_6879: Tensor[(726), float64]) -> (Tensor[(1, 12, 15), float32], Tensor[(14, 7, 16), float32], Tensor[(11, 6, 11), float64], Tensor[(726), float64]) {
  %792 = @func_5418() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %793 = cast(%var_6846, dtype="bool") /* ty=Tensor[(14, 7, 16), bool] */;
  %794 = shape_of(%var_6845, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(%var_6845, dtype="bool") /* ty=Tensor[(14, 7, 16), bool] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %797 = logical_and(%795, %796) /* ty=Tensor[(14, 7, 16), bool] */;
  %798 = cast(%797, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  %799 = cast(%var_6879, dtype="float64") /* ty=Tensor[(726), float64] */;
  %800 = reshape(%799, newshape=[11, 6, 11]) /* ty=Tensor[(11, 6, 11), float64] */;
  %801 = @func_3418(%800) /* ty=(Tensor[(11, 6, 11), float64],) */;
  %802 = %792.0;
  %803 = asinh(%798) /* ty=Tensor[(14, 7, 16), float32] */;
  %804 = %801.0;
  (%802, %803, %804, %var_6879)
}

def @func_5737() -> (Tensor[(1, 12, 15), float32],) {
  %806 = fn () -> (Tensor[(1, 12, 15), float32],) {
    %805 = @func_5156() /* ty=Tensor[(1, 12, 15), float32] */;
    (%805,)
  };
  %806() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_1380(%var_1377: Tensor[(11, 12, 4), float32], %var_1378: Tensor[(11, 12, 4), float32], %var_1379: Tensor[(312), bool]) -> (Tensor[(11, 12, 4), float32], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) {
  %815 = fn (%var_1365: Tensor[(11, 12, 4), float32], %var_1366: Tensor[(11, 12, 4), float32], %var_1373: Tensor[(312), bool]) -> (Tensor[(11, 12, 4), float32], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) {
    %807 = cast(%var_1366, dtype="float32") /* ty=Tensor[(11, 12, 4), float32] */;
    %808 = shape_of(%var_1365, dtype="int32") /* ty=Tensor[(3), int32] */;
    %809 = cast(%var_1365, dtype="float32") /* ty=Tensor[(11, 12, 4), float32] */;
    %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %811 = cast(%var_1373, dtype="bool") /* ty=Tensor[(312), bool] */;
    %812 = reshape(%811, newshape=[2, 12, 13]) /* ty=Tensor[(2, 12, 13), bool] */;
    %813 = power(%809, %810) /* ty=Tensor[(11, 12, 4), float32] */;
    %814 = @func_29(%812) /* ty=Tensor[(2, 12, 13), bool] */;
    (%813, %814, %var_1373)
  };
  %815(%var_1377, %var_1378, %var_1379) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) */
}

def @func_6347() -> Tensor[(?, 12, 15), float32] {
  %816 = @func_6300() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(?, 12, 15), float32]) */;
  %816.1
}

def @func_10024() -> Tensor[(13, 12, 15), bool] {
  %817 = @func_5736() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %818 = %817.0;
  %819 = cast(%818, dtype="bool") /* ty=Tensor[(1, 12, 15), bool] */;
  %820 = cast(meta[relay.Constant][63] /* ty=Tensor[(13, 12, 15), float32] */, dtype="bool") /* ty=Tensor[(13, 12, 15), bool] */;
  logical_and(%819, %820) /* ty=Tensor[(13, 12, 15), bool] */
}

def @func_7526() -> Tensor[(1, 12, 15), float32] {
  %821 = @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %821.0
}

def @func_9514(%var_9512: Tensor[(495, 1), uint16]) -> (Tensor[(143), float64], Tensor[(2, 12, 13), bool], Tensor[(495, 1), uint16], Tensor[(308), float32]) {
  @func_9511(%var_9512) /* ty=(Tensor[(143), float64], Tensor[(2, 12, 13), bool], Tensor[(495, 1), uint16], Tensor[(308), float32]) */
}

def @func_1576(%var_1568: Tensor[(2, 2, 10), float32]) -> Tensor[(2, 2, 10), float32] {
  %822 = cast(meta[relay.Constant][64] /* ty=Tensor[(2, 2, 10), float32] */, dtype="float32") /* ty=Tensor[(2, 2, 10), float32] */;
  %823 = log2(%822) /* ty=Tensor[(2, 2, 10), float32] */;
  %824 = cast(%var_1568, dtype="float32") /* ty=Tensor[(2, 2, 10), float32] */;
  %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%823, dtype="float32") /* ty=Tensor[(2, 2, 10), float32] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%826, %827) /* ty=Tensor[(2, 2, 10), float32] */
}

def @func_8794() -> Tensor[(1, 12, 15), float32] {
  %829 = fn () -> Tensor[(1, 12, 15), float32] {
    %828 = @func_6604() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %828.0
  };
  %829() /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_6349() -> Tensor[(?, 12, 15), float32] {
  @func_6347() /* ty=Tensor[(?, 12, 15), float32] */
}

def @func_8213(%var_8200: float32, %var_8201: Tensor[(16, 8, 16), float32]) -> (Tensor[(16, 8, 16), float32],) {
  %830 = cast(%var_8200, dtype="float32") /* ty=float32 */;
  %831 = cast(%var_8201, dtype="float32") /* ty=Tensor[(16, 8, 16), float32] */;
  %832 = floor_divide(%830, %831) /* ty=Tensor[(16, 8, 16), float32] */;
  (%832,)
}

def @func_6606() -> (Tensor[(1, 12, 15), float32],) {
  @func_6604() /* ty=(Tensor[(1, 12, 15), float32],) */
}

def @func_8808() -> Tensor[(1, 12, 15), float32] {
  %834 = fn () -> Tensor[(1, 12, 15), float32] {
    %833 = @func_8301() /* ty=(Tensor[(1, 12, 15), float32],) */;
    %833.0
  };
  %834() /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_5128(%var_5108: int64, %var_5109: Tensor[(4, 9, 1), int64]) -> (Tensor[(4, 9, 1), int64], Tensor[(495), uint16], Tensor[(450), bool]) {
  %835 = cast(%var_5108, dtype="int64") /* ty=int64 */;
  %836 = cast(%var_5109, dtype="int64") /* ty=Tensor[(4, 9, 1), int64] */;
  %837 = cast(meta[relay.Constant][65] /* ty=Tensor[(495), uint16] */, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %838 = reshape(%837, newshape=[11, 15, 3]) /* ty=Tensor[(11, 15, 3), uint16] */;
  %839 = @func_3856(%838) /* ty=(Tensor[(11, 15, 3), uint16], Tensor[(2, 12, 13), bool], Tensor[(450), float32], Tensor[(2, 264), float32]) */;
  %840 = %839.2;
  %841 = cast(%840, dtype="bool") /* ty=Tensor[(450), bool] */;
  %842 = cast(%var_5108, dtype="bool") /* ty=bool */;
  %843 = bitwise_and(%835, %836) /* ty=Tensor[(4, 9, 1), int64] */;
  %844 = logical_and(%841, %842) /* ty=Tensor[(450), bool] */;
  (%843, meta[relay.Constant][65] /* ty=Tensor[(495), uint16] */, %844)
}

def @func_8671(%var_8667: Tensor[(8, 5, 2), float64]) -> Tensor[(8, 5, 2), float64] {
  %845 = cast(%var_8667, dtype="float64") /* ty=Tensor[(8, 5, 2), float64] */;
  atanh(%845) /* ty=Tensor[(8, 5, 2), float64] */
}

def @func_6468(%var_6456: Tensor[(495), uint16]) -> (Tensor[(1, 12, 15), float32], Tensor[(36), int64], Tensor[(1, 36), int64], Tensor[(495), uint16]) {
  %846 = @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %847 = cast(meta[relay.Constant][66] /* ty=Tensor[(1, 36), int64] */, dtype="int64") /* ty=Tensor[(1, 36), int64] */;
  %848 = cast(%var_6456, dtype="uint16") /* ty=Tensor[(495), uint16] */;
  %849 = reshape(%847, newshape=[36]) /* ty=Tensor[(36), int64] */;
  %850 = reshape(%848, newshape=[495]) /* ty=Tensor[(495), uint16] */;
  %851 = @func_5278(%849, %850) /* ty=(Tensor[(2, 2, 10), float32], Tensor[(40), float32], Tensor[(1, 12, 15), float64], Tensor[(1, 12, 15), float32], Tensor[(450), bool], int64, Tensor[(36), int64], Tensor[(2, 2, 10), float32], Tensor[(2, 264), float32], Tensor[(495), uint16]) */;
  %852 = %846.0;
  %853 = %851.6;
  (%852, %853, meta[relay.Constant][66] /* ty=Tensor[(1, 36), int64] */, %var_6456)
}

def @func_1109(%var_1081: Tensor[(10, 1, 16), float32]) -> (Tensor[(10, 1, 16), float32], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) {
  %854 = cast(%var_1081, dtype="float32") /* ty=Tensor[(10, 1, 16), float32] */;
  %855 = cast(meta[relay.Constant][67] /* ty=Tensor[(312), bool] */, dtype="bool") /* ty=Tensor[(312), bool] */;
  %856 = reshape(%855, newshape=[2, 12, 13]) /* ty=Tensor[(2, 12, 13), bool] */;
  %857 = sigmoid(%854) /* ty=Tensor[(10, 1, 16), float32] */;
  %858 = @func_29(%856) /* ty=Tensor[(2, 12, 13), bool] */;
  (%857, %858, meta[relay.Constant][67] /* ty=Tensor[(312), bool] */)
}

def @func_5702(%var_5700: Tensor[(9, 4), int64]) -> (Tensor[(1, 12, 15), float32], Tensor[(4, 9, 1), int64], int64, Tensor[(9, 4), int64], Tensor[(13, 11, 15), float64], Tensor[(143), float64], Tensor[(1, 2145), float64]) {
  @func_5699(%var_5700) /* ty=(Tensor[(1, 12, 15), float32], Tensor[(4, 9, 1), int64], int64, Tensor[(9, 4), int64], Tensor[(13, 11, 15), float64], Tensor[(143), float64], Tensor[(1, 2145), float64]) */
}

def @func_9964() -> (Tensor[(1, 12, 15), float32], Tensor[(5, 4, 4), bool], Tensor[(80), int64], Tensor[(13, 12, 15), float32]) {
  %870 = fn () -> (Tensor[(1, 12, 15), float32], Tensor[(5, 4, 4), bool], Tensor[(80), int64], Tensor[(13, 12, 15), float32]) {
    %859 = cast(meta[relay.Constant][68] /* ty=Tensor[(80), int64] */, dtype="int64") /* ty=Tensor[(80), int64] */;
    %860 = cast(meta[relay.Constant][68] /* ty=Tensor[(80), int64] */, dtype="int64") /* ty=Tensor[(80), int64] */;
    %861 = reshape(%859, newshape=[5, 4, 4]) /* ty=Tensor[(5, 4, 4), int64] */;
    %862 = reshape(%860, newshape=[5, 4, 4]) /* ty=Tensor[(5, 4, 4), int64] */;
    %863 = @func_7232(%861, %862) /* ty=(Tensor[(5, 4, 4), bool],) */;
    %864 = @func_9759() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(1, 12, 15), float32], Tensor[(13, 12, 15), int64]) */;
    %865 = %864.2;
    %866 = cast(%865, dtype="float32") /* ty=Tensor[(13, 12, 15), float32] */;
    %867 = @func_9891() /* ty=Tensor[(1, 12, 15), float32] */;
    %868 = %863.0;
    %869 = erf(%866) /* ty=Tensor[(13, 12, 15), float32] */;
    (%867, %868, meta[relay.Constant][68] /* ty=Tensor[(80), int64] */, %869)
  };
  %870() /* ty=(Tensor[(1, 12, 15), float32], Tensor[(5, 4, 4), bool], Tensor[(80), int64], Tensor[(13, 12, 15), float32]) */
}

def @func_3555(%var_3552: Tensor[(10, 4, 2), float64]) -> Tensor[(10, 4, 2), float64] {
  %871 = cast(%var_3552, dtype="float64") /* ty=Tensor[(10, 4, 2), float64] */;
  asin(%871) /* ty=Tensor[(10, 4, 2), float64] */
}

def @func_6604() -> (Tensor[(1, 12, 15), float32],) {
  %872 = @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %873 = %872.0;
  (%873,)
}

def @func_7106() -> Tensor[(1, 12, 15), float32] {
  @func_7104() /* ty=Tensor[(1, 12, 15), float32] */
}

def @func_4006(%var_4004: int64, %var_4005: Tensor[(16, 5, 15), int64]) -> (Tensor[(16, 5, 15), int64],) {
  %877 = fn (%var_3998: int64, %var_3999: Tensor[(16, 5, 15), int64]) -> (Tensor[(16, 5, 15), int64],) {
    %874 = cast(%var_3998, dtype="int64") /* ty=int64 */;
    %875 = cast(%var_3999, dtype="int64") /* ty=Tensor[(16, 5, 15), int64] */;
    %876 = bitwise_and(%874, %875) /* ty=Tensor[(16, 5, 15), int64] */;
    (%876,)
  };
  %877(%var_4004, %var_4005) /* ty=(Tensor[(16, 5, 15), int64],) */
}

def @func_8998(%var_8956: Tensor[(8, 16, 5), int32], %var_8994: Tensor[(3, 104), bool]) -> (Tensor[(8, 16, 5), float64], Tensor[(2, 12, 13), bool], Tensor[(528), float32], Tensor[(3, 104), bool]) {
  %878 = cast(4 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %879 = cast(%var_8956, dtype="int32") /* ty=Tensor[(8, 16, 5), int32] */;
  %880 = maximum(%878, %879) /* ty=Tensor[(8, 16, 5), int32] */;
  %881 = cast(%880, dtype="float64") /* ty=Tensor[(8, 16, 5), float64] */;
  %882 = cast(meta[relay.Constant][69] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %883 = cast(meta[relay.Constant][69] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %884 = cast(%var_8994, dtype="bool") /* ty=Tensor[(3, 104), bool] */;
  %885 = reshape(%882, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %886 = reshape(%883, newshape=[11, 12, 4]) /* ty=Tensor[(11, 12, 4), float32] */;
  %887 = reshape(%884, newshape=[312]) /* ty=Tensor[(312), bool] */;
  %888 = @func_1376(%885, %886, %887) /* ty=(Tensor[(11, 12, 4), float32], Tensor[(2, 12, 13), bool], Tensor[(312), bool]) */;
  %889 = acos(%881) /* ty=Tensor[(8, 16, 5), float64] */;
  %890 = %888.1;
  (%889, %890, meta[relay.Constant][69] /* ty=Tensor[(528), float32] */, %var_8994)
}

def @func_7362(%var_7341: Tensor[(16, 12, 15), float32]) -> Tensor[(16, 12, 15), uint64] {
  %891 = @func_5929() /* ty=(Tensor[(1, 12, 15), float32],) */;
  %892 = %891.0;
  %893 = cast(%892, dtype="uint64") /* ty=Tensor[(1, 12, 15), uint64] */;
  %894 = cast(%var_7341, dtype="uint64") /* ty=Tensor[(16, 12, 15), uint64] */;
  multiply(%893, %894) /* ty=Tensor[(16, 12, 15), uint64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

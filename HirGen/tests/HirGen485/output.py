import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_255 = relay.var("var_255", dtype = "float64", shape = (4, 16, 16))#candidate|255|(4, 16, 16)|var|float64
uop_256 = relay.atanh(var_255.astype('float64')) # shape=(4, 16, 16)
output = uop_256
output2 = uop_256
func_275 = relay.Function([var_255,], output)
mod['func_275'] = func_275
mod = relay.transform.InferType()(mod)
mutated_mod['func_275'] = func_275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_276 = relay.var("var_276", dtype = "float64", shape = (4, 16, 16))#candidate|276|(4, 16, 16)|var|float64
func_275_call = mutated_mod.get_global_var('func_275')
call_277 = func_275_call(var_276)
output = call_277
func_278 = relay.Function([var_276], output)
mutated_mod['func_278'] = func_278
mutated_mod = relay.transform.InferType()(mutated_mod)
var_442 = relay.var("var_442", dtype = "uint32", shape = (15, 10, 15))#candidate|442|(15, 10, 15)|var|uint32
var_443 = relay.var("var_443", dtype = "uint32", shape = (15, 10, 15))#candidate|443|(15, 10, 15)|var|uint32
bop_444 = relay.not_equal(var_442.astype('bool'), relay.reshape(var_443.astype('bool'), relay.shape_of(var_442))) # shape=(15, 10, 15)
output = relay.Tuple([bop_444,])
output2 = relay.Tuple([bop_444,])
func_448 = relay.Function([var_442,var_443,], output)
mod['func_448'] = func_448
mod = relay.transform.InferType()(mod)
mutated_mod['func_448'] = func_448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_448_call = mutated_mod.get_global_var('func_448')
var_450 = relay.var("var_450", dtype = "uint32", shape = (15, 10, 15))#candidate|450|(15, 10, 15)|var|uint32
var_451 = relay.var("var_451", dtype = "uint32", shape = (15, 10, 15))#candidate|451|(15, 10, 15)|var|uint32
call_449 = func_448_call(var_450,var_451,)
output = call_449
func_452 = relay.Function([var_450,var_451,], output)
mutated_mod['func_452'] = func_452
mutated_mod = relay.transform.InferType()(mutated_mod)
const_471 = relay.const([[[1.792653,-2.522165,6.568109,9.519206,-6.488548,-4.569813,3.193269,-1.753889,-5.416406,-5.981942,-0.127896,-6.374497,-6.155761],[-1.833829,-5.623581,-6.643706,-6.489289,-6.881958,6.352346,-8.021051,0.933761,-3.985686,-5.276661,3.011289,-8.587850,3.439433],[-9.261920,8.812964,-7.448496,6.989257,-3.947736,-9.553882,-1.118157,-7.002707,3.944438,1.497586,1.066384,4.139050,-0.543965],[-9.588917,-0.002088,-3.985231,2.250845,7.728082,7.119962,-6.613614,3.266250,-0.795890,-8.229757,4.826318,-7.032388,-7.683431],[-3.017727,7.448784,-1.302323,3.356957,0.631585,7.003818,-8.430182,-3.648960,8.358812,2.939932,-6.728869,4.911656,-2.720702],[-5.601509,0.770425,-9.862511,-0.707254,6.514415,0.494543,1.068743,-7.807843,8.380161,5.034321,-2.974589,-9.740841,6.104243],[-3.181189,3.497696,9.757909,9.228340,-4.679112,-2.769884,1.063173,1.794522,8.854735,-0.347504,-0.950095,-9.594031,3.169878],[-1.623486,-8.573447,-5.790245,-9.764822,3.800841,5.789804,9.394145,-9.838964,-8.475792,9.226440,-1.143938,-9.118560,-0.916802],[-3.935535,7.979409,2.518571,4.588570,0.920801,-4.153532,-8.672972,-7.766845,-4.486985,5.419678,8.064761,5.201682,-8.194976],[7.936971,-3.350769,3.740113,-7.527574,-5.240016,-0.038997,0.539798,-1.239747,-2.876880,3.942131,-0.766181,-6.324308,-8.451575],[-7.558939,-2.445992,6.601857,5.429290,5.286376,-7.296301,7.219233,5.235039,0.231069,-5.709061,2.045236,-8.165144,1.337926],[-6.805178,-9.657429,9.176530,-7.455696,3.587478,-7.302629,5.681302,5.207637,5.004073,1.602929,0.043153,-1.330946,-5.054794],[-9.915106,-9.055668,6.154416,7.479237,-1.816953,-2.517134,-4.415579,-1.350192,5.203493,-1.690843,-1.322304,5.563501,-2.654173],[-9.492144,-2.202170,-0.268823,5.254378,-0.128726,-8.651095,-4.918697,0.244159,3.515410,1.215439,-9.434697,-5.930443,8.534570],[-5.814959,-2.992688,6.827778,3.383711,4.627548,-1.671788,2.049638,7.282294,-9.076993,-3.042372,2.817670,0.275199,1.690038],[9.663410,-5.619259,-4.175979,1.019252,-3.115477,2.178529,9.528350,4.183571,8.756231,-1.007194,-8.936816,2.201779,-0.835665]],[[8.941647,4.454233,6.420353,-6.141216,1.972708,1.130496,3.658276,-7.819648,4.035207,2.634049,2.046694,8.839283,8.131787],[7.568406,-1.213928,3.502908,4.823251,5.306686,1.924688,8.406344,-8.723789,-7.328793,-9.099009,0.973744,-9.075940,-7.899035],[4.866707,8.266270,-3.048103,4.981060,6.259985,-9.946013,8.059459,3.961766,4.997797,-1.491126,2.711611,8.830858,1.856578],[-9.119492,2.516198,7.844135,-6.641598,8.165806,5.944581,-7.666524,-4.653065,-5.255516,-6.733562,-2.385544,-6.716256,6.150803],[5.088701,6.787698,7.935352,-8.573746,-3.015247,-3.995302,5.064062,9.136668,-6.872508,4.756014,-3.563623,2.070749,4.667112],[-7.550080,-0.082812,-6.431469,-8.601433,-7.235483,2.992588,-5.473160,-8.781212,-5.146453,9.887736,6.514045,1.344915,-3.918860],[-6.870734,-0.863177,6.373033,8.610848,0.851875,-9.714748,5.823540,0.617600,6.189971,-3.552371,-5.558211,4.147844,7.572752],[-1.828525,5.674557,-0.507103,-9.832294,-7.163592,-4.109318,0.247762,0.638099,7.291812,-8.665361,3.621329,9.397516,0.761377],[-7.720758,6.473319,9.965307,9.579984,-5.357772,-6.247095,-8.396219,-7.881491,-0.446893,-2.906837,4.604993,-1.018426,8.143720],[-5.607056,-3.593123,-6.545634,-1.568690,-2.017430,4.438634,1.618984,9.892547,-4.814634,-3.883284,-4.405929,-2.725532,-4.848379],[6.896790,4.100881,-8.735878,8.135313,-0.570247,9.476768,0.316806,-8.224429,4.826818,-2.576558,-3.484660,9.276446,1.790927],[9.935026,-4.492915,-4.947942,1.375683,-8.374102,5.623446,-9.793622,-2.748228,-4.346914,2.945131,-5.449933,-6.176474,3.502754],[-2.723520,6.866156,9.745690,8.319128,-1.943948,1.914610,-4.864748,4.231050,0.470996,7.694903,-1.638764,8.117371,-0.564335],[-1.664804,-8.956145,6.174674,-9.899550,-8.131764,-3.479914,-9.703540,4.733881,-9.502469,3.866624,9.231278,8.815400,-0.046305],[0.146424,8.123298,-2.391813,-3.073565,3.011017,2.297642,1.631801,6.522589,1.598140,-9.209211,4.253179,-7.278173,2.363415],[4.056652,-6.107093,-4.366144,6.046603,-6.758711,8.892166,-4.050207,-8.482818,9.021261,-5.213387,8.006161,-5.272023,-3.038630]],[[-7.217400,-9.656995,0.272438,-4.024579,-1.374953,4.234759,-3.644487,6.696747,-6.724885,5.939456,9.359535,-4.750112,5.598903],[7.660533,-1.405511,-3.422665,2.070827,-3.851050,-1.329162,-8.974565,7.387377,5.350191,7.688447,2.108771,-6.396296,5.092060],[2.242860,4.214804,4.255287,-0.636966,3.775840,3.086061,-2.345740,3.180868,-3.919484,9.724105,5.483149,-4.268971,3.163112],[-3.025039,-0.741989,8.429543,-4.354413,-1.474327,6.921438,0.552718,1.287120,2.731484,-9.543077,5.351036,5.761078,-7.316994],[4.756699,0.611472,-3.768551,-9.436481,5.570663,6.802399,2.016622,-0.875260,-4.993550,2.037375,-0.929324,0.086042,1.950893],[6.918835,4.844396,0.309341,-5.629622,6.952593,-8.368315,2.748125,7.600954,4.782487,8.914407,-8.063402,2.118604,7.687650],[-8.152974,-3.898326,7.290991,-2.064428,2.423942,6.223064,3.214274,5.284288,5.105292,5.738755,0.120398,0.584814,-5.439381],[-4.075390,5.888541,3.989077,8.377612,3.920310,-0.917111,5.838030,1.356107,5.397892,-3.613756,-5.982136,-8.245972,-8.719351],[0.642109,-7.982953,8.981269,1.302004,-9.400193,0.173161,0.393965,6.180332,-3.704674,6.322353,4.557709,-7.044859,2.435364],[4.384129,7.528715,9.546961,4.220507,-0.077945,1.625224,0.351417,2.306523,9.023024,1.529905,-0.050819,9.665454,4.031813],[-8.187103,-7.029220,0.856827,6.711121,-3.715283,8.364970,-9.408157,-9.791888,4.236740,-4.942976,-7.668260,1.617031,-0.518948],[-2.219575,-7.500911,-4.768819,2.478710,-5.299726,7.720436,6.872775,6.422151,9.140704,5.324065,8.013523,-7.922992,1.095557],[5.435260,-4.770379,-1.902057,4.873937,7.040635,7.020332,1.530435,9.471605,-9.586339,-6.779566,9.280279,3.228230,6.554069],[8.132814,-4.401722,9.839304,-6.244691,6.415600,-6.914656,7.627725,4.703011,-4.963224,-8.566851,9.981806,7.461920,-7.789495],[6.669149,9.082416,-3.729498,-0.428908,7.598100,-6.443102,-5.027407,-7.143860,8.098856,-3.369321,-1.470940,0.509922,-7.652942],[6.583182,-0.112035,-2.775127,-3.718107,-2.398089,-1.261271,6.236679,-7.137701,5.695852,-3.462283,1.470531,6.383781,-9.588537]],[[2.348064,4.866662,-0.702433,1.799760,-4.293377,-1.568309,6.970304,-1.633562,-7.082877,8.852279,2.771053,5.483630,-6.131046],[4.812078,-9.643350,3.868964,0.213107,9.519460,-4.075819,-9.788906,-6.196749,9.659482,-5.815087,2.853910,4.569792,8.563292],[-9.571387,-7.547142,-1.156945,-4.859289,6.079954,-5.998860,-4.319699,-7.629587,-9.909164,-6.330596,-3.519500,-0.388132,5.486944],[9.020620,-7.369425,6.872785,8.098497,8.170574,-7.409491,-5.625583,1.070016,-5.280283,-7.091876,-1.018874,-9.004106,0.615597],[-5.897648,2.785141,6.159517,3.902002,3.000387,-5.532138,-1.577570,-6.525500,-2.572816,9.307558,7.430327,1.426386,-2.983948],[-7.249592,-7.798198,5.208135,1.000787,-3.559771,3.472278,-5.507004,0.604035,2.910537,-8.610500,-4.750265,-3.559172,8.354877],[6.342073,6.525695,-7.381414,-2.181708,8.066749,-1.541504,-4.882879,-4.142964,-9.396358,0.004999,0.131732,1.077902,-7.564718],[-2.139910,9.950807,6.466128,6.543615,1.322935,-3.899209,-3.912901,7.413325,4.970883,-5.931219,-4.850809,-8.994732,-6.186564],[-4.711270,-8.460874,9.391919,-0.313533,-2.449963,8.423596,-6.167846,6.102141,2.453622,1.094737,-6.947811,-4.671167,-1.935399],[9.842585,-9.234892,-8.306016,-2.100827,-7.570597,-7.129860,-5.197876,-3.332197,-2.212851,-9.975621,0.838969,9.580339,1.563454],[0.258279,-1.645573,-0.513123,7.810048,7.918162,0.420115,-7.867901,3.065513,-3.748512,0.865993,-3.895753,-1.678924,5.856690],[-0.455271,-7.184967,8.435163,4.813282,4.180498,6.169225,7.871424,-3.247719,-8.727518,-6.052400,9.130419,-9.404995,0.309437],[-9.381105,4.693748,0.050044,5.837982,1.150184,-2.459053,-2.630389,-0.690284,-5.312583,9.209012,1.326143,9.714980,4.602633],[-9.243111,3.347646,-6.938019,4.529360,9.043074,3.370053,-1.729258,5.224932,-1.086231,-7.879954,-0.252333,-9.779030,-4.349026],[4.156187,5.842684,-0.745080,-7.180566,9.243727,-3.697779,9.871848,9.672718,-4.921956,1.934297,-5.542192,4.448103,0.711026],[9.534376,9.182889,4.879314,9.620740,-0.775287,-3.527387,3.584080,5.965834,3.139580,-9.383114,-7.155011,-4.686544,-0.532750]],[[5.300343,-6.653083,5.235008,-7.216578,8.848508,-7.250158,-6.690334,-8.324560,2.006295,-2.568453,1.163937,0.950232,-3.104993],[-3.069557,-3.449632,-1.181114,3.602216,-5.158351,-4.322826,5.175896,-0.708166,6.245675,-8.716891,9.131425,4.219319,5.832747],[1.084218,-1.341658,-4.787107,2.665169,-3.264007,-9.590881,-0.609506,-3.046475,4.465215,-4.605293,5.977192,-9.764144,7.899094],[-0.065672,3.267297,-6.825633,-0.357708,-8.005897,0.817950,4.203498,3.031285,0.728213,-8.571183,2.663383,-6.469809,6.122425],[7.330704,8.669951,-0.460746,1.244449,8.575138,-5.277135,5.599116,-3.158029,-8.205806,-7.106347,5.377546,3.299954,3.124790],[3.453600,-7.953117,-3.555949,-6.358225,4.929577,0.428299,-5.897178,-9.794304,-3.958347,-6.248468,-0.837359,2.576257,-9.288909],[1.382286,-5.778285,-8.218443,-6.822875,6.389170,-9.360639,-9.684125,-8.996358,3.234585,3.345461,2.282627,9.228723,-1.520437],[0.054331,-7.715432,4.844981,1.977464,-4.162581,1.122270,9.220097,6.668472,7.804647,6.181860,1.049401,-3.867964,-4.357206],[6.418853,8.816212,8.271033,8.486771,6.240420,1.036515,-0.211158,-7.186917,-4.143134,-1.890247,-9.673640,-3.735295,6.392411],[-9.068930,-6.107989,-8.228353,-5.570643,6.686340,-4.286433,9.753627,9.700532,-4.203428,-8.928903,-0.286729,-7.870398,8.887153],[-3.320179,-4.928426,3.797503,0.652091,4.639559,2.982317,-6.506574,-5.607669,6.891198,-4.093918,-1.730113,9.695900,8.363426],[-6.323990,-8.331744,-9.529298,3.711605,8.721880,8.532768,-3.135124,-0.097345,-7.774182,-6.755150,2.666735,-3.217482,6.540143],[-9.396218,-7.922869,-6.371666,-3.588643,-4.011582,7.254481,5.442102,-2.018193,5.865037,-2.412651,5.713719,-7.213646,6.987983],[0.831673,1.310333,-9.164438,8.891077,-2.371633,3.399649,1.199168,8.183928,8.784082,3.115582,-6.801464,-6.425502,-2.275465],[3.795966,-0.708608,-5.951941,0.486772,-3.596435,7.784882,-1.674785,5.044179,-2.986750,0.796063,5.281164,3.458865,-4.947616],[4.829312,-6.711363,-7.471284,2.729935,-1.489411,2.061680,7.625190,7.140161,4.219700,-5.876071,-7.639503,4.949002,7.469122]],[[-0.930461,4.158923,-9.434282,-3.739497,-0.706701,-1.475494,0.784686,1.202432,-0.440401,-2.745587,-6.544491,9.676532,-1.072905],[5.622330,1.412453,-2.476063,3.672102,7.265411,-6.558663,-2.829706,-9.649985,-7.518208,6.399430,-7.696487,7.726966,-2.612395],[0.257317,-7.021145,7.811981,0.578264,-9.334388,-1.259353,-4.915175,3.265920,6.823415,8.220613,2.075452,1.159514,-5.785823],[-9.032015,-2.117432,9.344298,3.986538,2.597118,2.399143,8.644081,-5.751962,-9.929978,9.100922,-1.120842,6.469514,7.717002],[7.220919,-0.926420,-8.062749,1.793624,0.917490,-6.720268,6.459396,9.419422,9.489209,-0.430675,-8.675236,-1.306110,7.540542],[0.045374,-5.376076,1.671088,1.534298,7.202563,-5.146517,3.708812,7.218873,-3.542020,7.098233,-9.565757,9.828684,0.632608],[4.238711,9.812868,-9.423839,7.820411,9.013434,-9.577716,-4.936252,5.742328,2.284282,-5.254463,-2.892487,9.192119,-2.669180],[-0.539265,-2.666572,-1.719955,3.564661,-2.323265,-1.468116,2.940298,-0.831935,-1.805245,1.816165,-6.067259,-5.602272,-0.687618],[1.889262,4.305868,9.337377,5.069625,7.685494,6.688998,-4.434157,-2.572318,0.622945,-8.711829,4.312712,9.352663,-7.749606],[1.802324,-6.868085,-5.132451,2.376594,-1.654230,5.300002,6.094377,6.887271,-4.767502,-4.458105,-1.188014,-7.608986,-4.893715],[5.113631,-0.008013,0.217039,2.300267,5.100600,3.362382,8.549288,9.713971,-9.372415,2.807318,0.080774,2.116566,-5.094351],[-9.366270,-1.465099,-4.657876,-8.007623,-3.632662,1.745892,9.224056,4.477685,4.958744,-9.163061,1.292387,1.486854,-6.361189],[-6.066214,8.965900,7.269920,5.179456,-3.009329,-5.973415,7.450120,-9.653578,-5.549743,1.536069,-6.471014,-5.440869,-8.609509],[3.950127,-7.832086,-7.680527,0.034845,3.230243,1.979003,4.344017,-3.644437,-4.924940,-0.898771,-7.851172,6.983891,-8.829978],[1.856249,-4.507812,-3.233552,3.417868,-2.668977,-9.342340,6.138197,-7.710580,-1.414985,-5.949775,8.019550,-8.303524,9.770138],[-0.690634,9.778205,2.333023,8.347772,-3.377993,8.233504,-7.916343,3.142911,-5.935989,-1.847925,-8.511398,-0.699733,-2.721791]],[[6.557727,8.809576,1.699796,8.343578,-0.250261,5.120643,9.142655,4.839536,-6.648925,-9.396478,-4.915931,-1.109800,2.939131],[-0.621970,-6.207634,-2.617869,7.477629,-3.108913,5.610957,0.269373,-5.237746,-9.115382,-1.542455,7.657923,6.248034,0.192836],[-1.240879,5.981736,-3.504758,4.174947,-4.710973,-9.601190,9.158253,-8.680876,2.888433,-2.275418,4.969231,4.870464,-2.812310],[-2.059822,-2.782506,-0.915452,4.922345,-9.545182,2.449224,-8.324154,9.875715,9.862238,-3.082437,-4.135940,-8.907498,6.032078],[5.494601,5.141957,7.550478,4.670005,8.103938,-3.893457,3.361766,-5.594027,-8.808354,-5.607758,-8.305295,-8.362008,-2.367985],[-4.221572,9.764509,-7.826254,-0.105204,3.405259,6.145532,0.829033,-7.973545,8.954753,-8.379953,-0.092666,1.337311,8.925922],[-9.500440,-1.280033,-3.971867,2.765760,-1.344105,-1.449361,-9.965150,2.127586,-3.390367,-2.314754,-4.442450,0.051258,-4.497192],[-6.217900,-5.101683,9.581231,3.173660,4.198760,-3.892258,-2.442737,-4.839996,0.012719,-5.488686,-0.210612,9.879511,2.863372],[2.096680,-7.362404,-9.608319,4.465492,-9.129336,7.166594,-2.629115,9.610096,-1.209040,0.082084,-0.024940,8.551151,9.536840],[-8.090147,-6.279529,5.963131,-9.165465,1.803775,-6.122102,2.866901,8.779675,-3.827608,-8.238725,-7.219097,0.190452,9.591328],[-2.492395,-9.762561,3.218736,-4.291189,-0.485085,2.517188,-8.612913,9.580746,2.961266,0.582241,-9.352682,-0.013084,-6.705643],[2.829685,-7.802713,2.367124,2.995438,7.228773,-3.847058,-3.234066,0.342260,7.509816,5.309007,-0.371320,-0.536425,9.602395],[6.702866,2.950587,1.620757,-1.383427,2.811873,-8.415538,4.342944,5.257431,-0.396809,9.527990,6.533959,7.603719,4.619928],[4.631799,3.516199,-3.452582,-4.829526,-7.347097,-3.966757,-8.049358,7.080626,-0.846460,-8.690681,-2.101253,-1.126947,-5.077453],[3.504188,-0.817049,4.985238,-5.875900,-3.766847,8.796895,-8.889184,-9.160246,-8.514611,-4.498990,-2.748252,8.702800,4.618310],[4.342324,8.467856,9.104770,2.004036,9.889430,-0.622016,2.228547,4.095335,2.291602,7.590287,-0.222151,-4.313981,2.908410]],[[-5.416234,6.596244,-0.746525,5.075294,-5.908566,-6.342668,-1.686579,-8.798121,7.699232,2.643026,3.431426,-2.969525,8.545406],[-9.171704,-5.422215,-6.236577,-9.630592,-9.662882,-1.016364,-3.937731,-5.352459,-8.324623,7.916299,6.579587,-2.284364,2.717328],[-8.885737,-1.512860,-3.458353,5.779746,-0.151565,1.603524,-4.631004,-3.864452,1.958690,3.259288,2.078153,-9.888912,3.146386],[-5.449043,1.524954,4.212589,3.800766,6.188565,-1.189183,-1.617561,-8.398291,-2.334631,2.071485,3.407008,9.623608,1.350464],[-5.534381,5.181902,3.876147,1.343365,0.462941,-4.042808,8.696155,0.816545,5.520234,-3.459681,2.546491,-0.525694,1.731693],[-3.018901,-9.968634,-2.496721,2.073355,-9.120898,6.050387,8.586055,-3.575209,1.796441,3.261604,-1.361638,9.750997,-4.287914],[5.746429,5.821871,-1.773521,2.883205,9.192453,8.567896,-9.405393,-0.421414,-0.962878,-1.977297,4.188659,-8.336066,-9.470434],[5.747144,9.921741,7.467410,-9.142442,-8.081764,-8.423219,-5.971831,9.571623,-1.466753,2.146141,4.050843,5.065498,8.397037],[5.404925,5.918206,-2.813371,9.607031,3.693886,-8.436326,-2.309321,-2.428749,-0.385085,-1.846703,7.430352,9.030452,9.360597],[-2.023212,1.885709,-7.890585,4.093679,-3.140767,-7.065834,2.278644,-8.316797,-5.775466,-5.298503,4.748966,7.624098,-0.249019],[4.247155,8.554457,-0.036468,2.245158,2.055033,8.471494,5.976150,-6.624267,0.295389,6.408866,5.149200,-3.706602,2.960256],[1.659466,-8.400092,1.062851,8.637763,-5.354345,-7.240249,6.360362,6.893412,-5.565527,1.554545,1.081609,-1.695733,-4.404380],[-4.226316,-1.236562,1.670944,-7.857156,4.750585,7.129253,-7.103981,4.639993,4.184481,8.811629,4.716770,6.096752,-7.843435],[5.074692,-2.109763,7.242640,0.534862,-4.944287,2.291391,-2.954215,-8.052207,8.249401,1.694067,7.176870,-9.573007,-8.628207],[-1.654306,-8.659215,-8.789877,3.460996,4.866352,9.984696,-9.701795,8.091515,-6.313381,3.171811,3.732094,2.217698,8.097208],[8.383999,8.510111,1.725645,-7.577047,9.490375,2.506986,0.914013,9.012110,2.851860,-5.939641,4.419124,-4.370562,7.460248]],[[3.557738,2.927758,1.715529,-2.293340,-9.798168,-6.339922,1.799391,2.326120,-1.357180,-6.658861,9.164584,-8.827000,-5.370896],[-2.242179,-3.487408,5.675869,-7.099919,-0.283249,6.142446,2.501500,-9.578501,-4.485024,0.948074,-1.935133,-5.443862,2.533268],[3.353820,7.537700,7.660560,-5.858038,1.669206,1.245679,-5.327379,1.841131,2.499478,1.731486,-9.655020,8.995128,7.253843],[-9.965322,-1.859520,0.233749,6.042929,-5.386381,-3.070467,-6.998906,-3.344449,-2.384314,7.051569,-0.409966,-0.663036,-2.614572],[-3.190241,-0.511647,2.561460,0.870648,-3.843984,5.422932,-3.619806,-5.209648,0.686129,-7.755507,-7.511672,-4.268492,9.335488],[-1.761716,6.106210,-9.592895,9.145807,6.320289,4.454984,-3.665188,-1.940281,2.393509,2.009256,3.575054,-8.498785,-4.691178],[-3.089048,-0.490565,-9.235445,5.591938,9.714326,0.402228,-1.799063,-7.776536,0.081919,2.264075,-8.046665,-7.138116,-5.216713],[-2.217832,-7.073626,-4.308155,-2.548085,-1.300116,4.760405,-6.810329,7.188576,2.099253,-1.051472,-1.512222,0.851123,2.446731],[-4.352063,8.110605,-0.604253,-3.029279,2.915347,0.306180,9.149211,-5.306164,-3.173581,-8.405802,-2.276494,1.666851,9.476003],[-6.317270,-4.500141,-2.801066,-2.866894,6.536700,-5.285850,5.079055,-0.080879,3.223142,-7.381410,8.999157,-1.622950,-8.119711],[0.673549,6.103583,6.543066,3.489737,-3.867637,0.201597,-8.409987,2.024999,-0.110816,-2.678637,9.029714,-4.040425,9.706670],[-9.707012,6.370598,-5.219251,9.882329,7.114907,7.714953,-4.403047,1.968173,-9.539697,-4.675503,-4.327274,-9.974928,-0.930953],[-8.695180,5.907926,-1.139709,3.484223,8.196649,-7.955986,4.740727,1.385588,8.914469,-0.067806,7.649165,-2.517791,-1.133043],[-3.747682,5.465100,7.425311,-8.958648,1.677456,-5.757750,-2.600499,-4.660555,-0.126508,6.226274,-2.041433,7.819879,5.485427],[-6.363184,5.936097,-5.247341,9.312910,-2.919645,3.150268,-0.264256,8.162028,6.112321,-1.118349,-1.538224,1.465779,-6.012726],[-7.074884,9.505802,9.472113,4.815292,-3.387570,-5.765251,5.306641,-5.281756,4.294566,5.305155,-4.353748,1.633844,-9.917885]],[[2.395102,3.426242,-5.847241,-1.532485,4.512637,1.309822,-1.351701,-8.709604,4.541859,1.478948,-3.888769,-3.557685,4.623999],[-5.003592,0.019972,-2.024406,-7.524005,5.449818,-0.480404,-3.149930,7.021451,-8.482617,-0.211161,-6.687107,5.418999,4.734177],[3.736527,8.512028,-0.981778,2.749122,4.558755,9.456660,8.181789,-6.467449,-7.898939,9.788727,-8.255518,5.940431,-2.973142],[-2.517988,9.078181,4.771437,-1.898104,5.133207,-8.146482,-4.779243,-5.737957,0.606341,-7.812164,0.109138,6.088720,-3.191401],[6.505449,-1.689379,-6.280111,9.542971,-2.550021,-9.719836,9.912239,-4.559610,-5.549174,7.511050,-4.640472,-0.564171,-3.821873],[8.512796,-4.732929,2.522383,8.699535,8.868077,2.268054,4.610897,8.049980,-7.108386,8.673068,-4.845444,5.011348,-4.247270],[-0.532306,4.810764,4.148101,-5.167684,-7.678066,3.351699,3.723783,1.844077,5.170711,9.794907,-1.797483,4.110029,-7.575122],[9.344939,-5.502136,6.253539,-6.157886,3.094213,0.681029,3.230282,-2.421123,4.802596,4.719181,-4.981126,1.555834,6.641693],[3.632688,0.097793,-4.234551,0.224545,-8.047268,-4.528744,1.282320,-1.301055,3.041498,8.780336,-9.257790,-1.403503,3.891063],[-9.914047,-4.318235,8.073749,6.440879,1.361754,1.009716,-5.669301,3.655895,7.232736,-1.527608,7.556613,7.288465,4.555996],[8.678381,-3.038862,-1.953801,4.654155,-1.218089,-2.585445,7.070320,-4.523997,3.638020,-1.663772,7.029347,4.610663,-8.938601],[6.478367,9.113465,7.118877,-5.957365,-2.081265,9.660479,6.958638,-7.373119,0.656228,2.295927,-5.425880,-2.347526,0.908001],[-8.019647,7.698448,9.107353,9.060702,-7.051517,3.402811,-8.091784,5.553589,3.584937,9.873327,1.245091,9.695090,-9.843565],[7.692151,7.032714,-7.568168,0.332386,-9.082476,6.597910,-7.567914,-6.516939,-2.977925,7.137268,-7.015385,2.596000,-7.134337],[-5.534872,7.864056,5.144163,9.351111,-7.416844,6.453820,-5.525853,-3.600140,3.423099,8.440683,7.288433,-4.324543,9.851503],[0.411086,-7.083121,2.516801,-5.442045,-7.444698,0.635149,-2.983066,3.275775,-0.575941,0.301640,9.955972,9.031156,-7.284201]],[[7.005144,5.984851,-7.771070,9.908591,-7.137156,6.336391,4.589849,-8.435732,-5.655993,-7.056204,-2.161134,1.766610,-0.455265],[-1.735277,1.337441,-1.371283,7.634938,3.078481,-6.552108,6.039606,-3.160739,2.070305,-8.072019,-2.992425,-6.480193,-9.045206],[8.826980,-6.279230,4.340582,9.847513,-9.979614,2.965314,4.506012,6.127082,4.511044,-8.854830,8.714266,7.278178,-0.261914],[-9.899758,7.004694,6.692137,-8.950216,-9.682966,1.100555,-0.111646,8.318118,6.656194,8.480016,-2.912892,9.395760,-3.008938],[2.763341,-2.794439,5.083865,-7.986428,-7.106483,-7.663243,-9.317659,-9.550777,-1.830501,7.971897,-1.723649,5.309616,3.676150],[-8.653743,-3.556894,6.003624,-0.065368,4.004049,6.363749,-3.295037,-6.392016,-0.215413,6.971792,-7.542352,-3.985091,9.024110],[-5.441588,-8.510106,0.042667,6.247184,4.404181,4.048673,-9.775653,4.032149,-0.268454,1.259159,-3.391001,3.015168,-2.918205],[-0.259774,9.804138,5.271113,-8.368478,3.196314,-0.950250,3.175786,-6.799301,-7.894217,-6.318692,-1.150087,9.390540,7.556604],[3.301105,-8.296714,-1.464487,-8.216063,-6.955396,8.952791,7.270757,-5.952123,8.460643,5.720794,-3.619766,9.226709,-5.333484],[-1.238191,7.631253,2.735996,-3.320130,4.285016,-9.973561,8.353142,4.632072,8.147956,1.964846,1.655753,-6.189358,-1.666653],[-1.792394,0.941927,8.688558,-5.105616,5.795246,-9.503609,6.488967,-0.596593,2.543352,2.199268,-3.955238,-8.305225,-2.706580],[8.715730,-4.306033,-4.091880,5.701939,5.691350,4.116685,3.253044,-4.290296,-4.539361,2.232181,4.508232,-8.806972,-6.848338],[-3.000118,4.394740,-5.188542,5.704404,-9.317766,1.179164,8.980625,9.948794,-2.508301,5.701164,-3.509822,4.042080,-7.970684],[-3.402406,6.986970,5.394184,7.739850,-6.960515,4.543248,9.788082,9.554189,4.562978,7.439365,5.301467,-8.233702,-3.004753],[1.629013,-9.240961,8.035049,-1.109576,3.244127,-7.332847,-0.729148,-0.730689,-5.739276,-5.537812,-0.079305,-0.045509,-5.552161],[-4.527173,-2.794668,9.932453,-6.212705,0.720481,-1.220412,-8.312742,2.432120,2.131932,6.719741,-6.504377,2.084022,-8.724216]],[[-5.653864,6.341170,-3.108765,5.524609,0.101426,-4.733289,3.513535,5.052683,-0.238102,9.548956,-9.396064,7.426883,0.056258],[0.600457,-2.203541,-7.260683,-5.539897,1.558248,5.820227,8.018063,6.635153,-8.321225,2.365750,2.411513,3.794036,4.343091],[4.398588,-8.386878,-2.065189,8.208597,2.340213,-4.162585,1.827925,-2.756417,-0.834101,7.576858,-7.332127,-4.469933,3.071976],[8.647821,9.067588,-5.452907,5.305671,4.561122,-1.112784,2.541542,-4.151720,1.746794,7.885809,6.791083,1.357545,-5.658577],[-8.298791,9.292934,-3.378953,5.144048,-2.036837,-6.211005,-1.099662,9.504611,-0.829274,-3.673434,-8.342580,-7.563783,4.309148],[-4.124418,3.960427,-2.614594,6.815235,0.444798,-8.878327,3.820866,7.325552,3.581450,9.028842,-7.231947,5.879940,6.162958],[8.444183,5.249831,6.411344,9.416275,-3.636179,-0.211641,-6.324940,6.288669,-1.315802,6.908402,-3.781407,2.722928,4.496718],[1.377107,-7.406199,5.702542,6.053550,1.968570,-8.799503,1.148309,-0.944031,-1.238127,0.162959,-4.275789,3.429375,2.812442],[-7.918067,9.543272,7.188044,-1.886554,0.218529,9.683732,-4.601001,2.740731,2.938692,-1.142063,7.195677,-3.798687,-1.058848],[-0.082377,-7.520026,-0.179507,2.395423,1.988361,-5.522017,-4.666404,9.215935,-9.102798,-5.054030,-1.333182,-2.360895,-5.190514],[7.449177,2.150061,1.924903,6.544253,1.647732,-7.471861,-9.610676,5.535745,1.768515,-4.144891,1.154773,-6.245455,8.777408],[-8.158395,4.187039,3.335361,3.920301,7.627770,-2.667212,5.770288,-5.902831,-3.040773,5.963773,5.635161,-4.699348,6.801230],[8.649731,8.364426,-6.731574,-5.428195,-4.308817,-8.381117,-3.630992,-1.195769,9.845507,5.322554,5.705622,-2.414561,9.494560],[1.338237,1.757604,-4.359476,0.210003,2.505887,2.103640,9.724554,7.674187,6.799455,2.498608,9.786572,9.124388,-0.608662],[-6.915470,6.171804,1.990919,6.609811,1.296860,7.370436,-0.678808,-3.974310,-5.291146,7.842785,-2.128233,-0.082078,7.990975],[-1.044933,-4.546385,2.154919,0.615271,-7.681104,-5.026267,8.506871,9.587870,-3.704605,-2.963434,7.924757,-5.212007,-3.697078]],[[-7.340885,7.410530,-5.758829,-6.428069,-5.306687,-2.142016,5.188128,-4.681512,-1.402335,9.534663,-3.566557,7.567278,3.845630],[-7.349079,-7.094846,-5.166303,3.227897,-4.558120,5.311377,-8.669844,-9.934936,6.469472,8.306313,1.695008,5.279767,-2.711094],[-2.462583,-6.972216,-5.536387,-4.029688,-7.670954,9.780525,-5.505628,0.108549,3.951446,5.317885,-0.358539,0.066285,6.226436],[-9.141100,0.725226,-1.418608,-1.653196,2.489917,2.225858,9.774003,-9.291067,6.087635,-0.513779,-4.630209,-4.376089,-2.080841],[-6.656735,8.186113,-9.271879,6.074180,-3.747188,-8.500137,-5.686348,4.184541,0.854415,7.001704,-8.189719,-1.378519,-4.082940],[-5.589894,-7.611511,0.052542,-9.962409,-7.665604,-9.629730,-9.469800,-6.057220,-0.209706,7.465988,-6.167502,-5.309485,-0.904232],[7.747671,-3.438316,-6.370177,-5.381154,7.447267,6.605381,-4.650288,-2.049622,1.644167,0.206677,5.718329,4.530523,-7.425377],[7.577768,6.988652,5.123329,-4.584799,-9.397906,-3.793728,-1.828146,7.483448,6.924623,3.724594,-8.314005,-5.978720,-6.349084],[2.744313,-7.178591,-5.702127,7.074419,-2.865807,-1.884450,-3.238199,3.145857,5.510237,-6.441884,9.758698,7.225118,4.900108],[-9.034081,2.618429,-1.803104,-3.897148,-4.597215,-1.905961,-1.159234,-3.236138,-9.861274,-3.832411,0.224829,0.560113,-5.728912],[4.817547,9.458904,9.439842,3.091147,4.654067,-7.091751,-7.547936,-4.762143,-6.954647,4.856896,1.386820,9.891198,2.868381],[8.698999,-6.677183,-2.598747,8.619731,-5.535457,2.469462,-9.716679,3.707811,-9.780297,6.995898,9.911035,3.624042,0.105017],[-7.860689,-8.088075,3.576638,-3.524773,6.885224,-0.440285,-8.534853,-0.327360,-1.431222,-5.511912,3.237343,7.013625,9.390667],[-4.631569,-5.443226,1.166838,-5.980476,-5.254929,-9.835818,8.499482,1.643531,-0.189858,-8.939266,1.463566,7.751545,4.276468],[-9.937675,-1.982042,7.516176,6.106311,-6.883119,-8.211310,-8.819931,-2.692927,5.890323,7.741321,4.801031,-4.227191,-8.991777],[-0.073243,-3.771264,-0.233955,7.979343,-8.114868,3.033673,-2.290342,3.864464,-6.198519,0.871553,-9.371282,-8.625326,-2.128453]],[[5.051694,3.354295,-4.982779,-6.931985,4.651264,-8.431403,2.802875,8.649845,-5.861884,-7.524819,-3.565579,5.240076,7.611232],[-3.896622,1.012294,-8.928108,-2.220492,-5.789307,7.383934,6.062273,7.108316,0.401027,-6.081142,5.200581,-3.331872,-2.008695],[-4.211544,0.505518,5.813125,1.469331,-5.335529,-9.988887,-1.837002,4.137353,8.515480,-9.912653,-6.374999,9.490242,8.871081],[5.245395,-1.459726,-7.251116,-8.008431,-7.664577,-7.642358,-7.692280,2.132416,5.183123,-1.974114,-8.661350,7.840843,-8.148037],[-0.756141,-1.945039,2.356169,-2.088020,-1.547188,-3.236098,-7.356127,-6.986447,4.139665,5.058733,8.121894,-9.545287,9.020947],[0.011368,3.534335,5.586766,6.462472,2.388511,2.791122,-1.743260,2.198014,-0.021022,-5.674923,-7.187909,-9.122219,-2.893530],[-0.280545,6.961635,9.069005,-7.559019,-6.517252,9.177672,1.408226,-8.650772,-9.849820,-0.246799,-7.322064,7.869298,-7.213460],[-7.982006,1.891393,-2.055851,6.210982,1.969620,0.296503,0.788653,8.660061,5.197518,-8.253043,-7.985089,3.930884,-6.249316],[3.248601,-5.225600,6.361541,-9.557474,3.241293,-5.927479,-2.867321,-8.806823,7.347800,-8.512269,-5.570506,0.302945,4.169743],[5.838378,9.980183,-1.314567,6.927067,-1.990915,5.383631,5.790863,4.334191,3.140001,3.424277,2.913577,-1.928559,-5.778368],[-8.081687,4.632927,4.205139,-7.843558,-2.689055,2.525116,2.194590,-5.485092,6.622872,8.619794,9.468773,-6.482999,-2.372229],[4.493747,6.008032,1.242031,8.343541,-4.634762,0.886425,6.595358,8.865934,6.464412,-7.964646,-8.711196,7.623505,9.269582],[-1.638992,-3.759249,1.658665,1.065958,3.536377,-0.772705,7.941391,6.945197,2.822240,-9.068901,6.221426,0.337868,0.498150],[6.229175,-6.717481,0.694343,3.329139,4.300289,7.128882,6.381881,-6.950293,-7.699768,-3.189338,-1.716735,-3.595990,6.748170],[2.242831,-0.472258,-8.015152,2.951682,-7.517777,3.744719,-5.333263,-3.978075,-3.895443,-0.106382,-7.346856,-8.379363,-7.520064],[-6.053691,-5.996128,1.785749,6.441436,-8.526834,7.718247,-8.794284,1.307470,8.485530,-9.283871,2.360700,-3.539792,4.601300]],[[-6.285695,3.998137,4.926672,-1.609522,2.429374,6.427864,7.104943,-7.728759,8.999650,-7.076639,5.101532,4.188309,6.187080],[-7.595743,-7.768644,-8.659207,4.208379,-7.656968,-4.110415,-6.792062,-2.524146,-6.308663,-8.716123,-8.403211,7.099265,-7.195422],[6.061586,-1.437216,-4.612360,-0.666394,7.545602,-1.497443,-3.559404,9.435775,4.230546,0.468028,9.649946,2.473785,-9.550972],[6.200858,-5.533044,-9.311954,1.875302,-1.825451,3.847174,1.714694,-0.559999,-2.389554,-9.145495,2.455793,8.225376,6.189080],[-2.544412,-9.394500,-9.911352,-7.902116,4.191479,-2.676309,5.277189,3.122742,6.350876,8.627404,-6.483590,2.462187,4.620322],[-9.644863,4.605666,0.155831,-5.194599,-9.917494,-7.538957,6.718648,-1.825524,-8.862862,-6.581502,-0.845530,-8.643718,5.018871],[0.860839,1.407148,8.725922,-6.297764,7.526881,-0.712797,9.627062,7.317696,1.961623,-6.583934,-2.610030,-2.980219,-2.845443],[5.729293,-4.970578,9.527197,9.522223,1.974343,-2.360863,5.389902,6.391058,5.173731,-1.071954,-1.907279,9.011951,3.151320],[-8.008979,-3.038242,2.330473,5.864338,5.781135,0.036703,-0.214528,5.023363,-4.519585,-2.856719,5.993539,0.587397,-3.857574],[1.336437,-0.559793,-8.615200,-7.833856,7.475288,-5.928422,-7.130124,3.334704,-8.651178,-8.055050,-3.259920,-1.308664,-0.235519],[-8.903402,6.548041,-3.491192,-7.521991,-7.175426,7.415123,0.306750,-8.361491,5.929044,2.604453,-2.139627,-8.529022,-1.630039],[-1.115261,-1.081770,-7.447258,-7.994688,9.384274,-4.255413,3.323322,-6.780019,-1.011786,0.339852,2.537623,1.873968,5.883104],[-7.536577,-6.118942,-2.118498,2.580720,1.329314,4.714716,-9.282446,-5.925976,-6.851745,2.327688,-8.491623,-0.441703,-0.083589],[8.013187,7.960711,8.349634,-8.693255,-5.508290,-7.663164,2.883651,9.802487,9.914180,-2.468783,-9.079367,4.068029,4.511403],[0.872482,8.480259,-5.951153,9.677221,5.134643,8.765862,-3.329573,-6.345977,-8.243944,6.923414,-4.125452,0.151735,-6.304776],[5.701421,9.232823,-8.573413,7.974629,-0.465528,-0.790551,1.784470,-3.677775,5.544938,-1.053699,-4.280575,-1.511187,-4.744382]],[[-4.322506,3.999617,6.134258,8.379064,2.367775,-7.383010,8.901677,-4.078992,-2.827925,-1.625400,2.499267,-9.380276,1.273568],[-3.725107,-4.670268,4.819104,-3.056346,5.034921,2.130255,-5.103717,-7.337306,3.117452,5.149417,3.533449,8.657916,-2.158042],[-1.481695,-7.273461,2.666070,2.453071,6.443743,2.316567,5.237998,-7.952916,0.638588,9.725908,5.873862,3.259535,8.632524],[-6.186730,-5.801444,2.561942,0.683929,4.968545,-9.821938,-6.193511,3.864969,0.334068,5.777357,0.428945,-8.077013,-3.992265],[-9.037599,-5.218330,6.163795,-8.405384,8.880286,-3.969734,-6.658896,-3.818834,-1.797421,-0.553271,-9.429323,-6.214529,4.161246],[-3.558539,-9.553272,0.401483,-1.867766,-9.864783,6.431087,-8.894598,-8.687594,2.889862,-1.562773,9.633630,7.350434,-8.420274],[9.535926,7.443963,-4.122979,-8.829740,-9.276409,9.141152,1.443326,-0.821752,2.667922,-9.723616,1.461934,-5.128122,3.565420],[-1.743254,6.360709,-6.139391,4.622596,-9.610470,4.902432,5.371485,-0.867654,-5.237626,-8.039115,-1.965977,4.158480,-9.782256],[0.953965,-2.115231,-7.207974,0.743876,3.154639,0.516066,5.503846,7.463485,-1.291664,-5.670251,8.025774,9.937449,-6.716293],[7.293323,-4.949028,-7.543562,-4.200982,-6.742080,-5.756410,9.662674,2.911578,-5.762580,-9.441428,1.639465,-0.500953,6.989791],[-9.766319,-4.961881,7.584530,0.591429,9.335290,2.810187,-5.075874,-5.292390,8.220052,4.351476,-4.812238,8.029968,5.894699],[-0.622925,-8.167006,5.446240,-9.213613,0.689176,-5.933882,5.056423,5.669054,6.917468,-2.410992,-0.016136,4.061855,-7.119270],[6.715652,-7.325778,-2.257506,0.965459,4.551687,2.287274,-1.834170,7.801073,3.051448,-6.836027,5.349859,3.621585,8.241707],[0.901113,0.570784,0.604068,7.413867,9.257444,-7.992335,-0.600466,3.955797,4.549332,4.614326,-2.854561,9.852511,3.283924],[9.220659,-5.674352,-2.003586,8.252752,9.472613,-0.534005,8.834408,-8.873021,-3.026066,1.801745,-0.902765,6.386974,8.826389],[7.763397,-3.257274,5.542111,4.275340,2.517029,9.619139,2.705200,7.128373,2.766161,7.409413,-7.142910,-3.915704,3.618162]]], dtype = "float64")#candidate|471|(16, 16, 13)|const|float64
uop_472 = relay.log10(const_471.astype('float64')) # shape=(16, 16, 13)
func_448_call = mod.get_global_var('func_448')
func_452_call = mutated_mod.get_global_var('func_452')
var_479 = relay.var("var_479", dtype = "uint32", shape = (2250,))#candidate|479|(2250,)|var|uint32
call_478 = relay.TupleGetItem(func_448_call(relay.reshape(var_479.astype('uint32'), [15, 10, 15]), relay.reshape(var_479.astype('uint32'), [15, 10, 15]), ), 0)
call_480 = relay.TupleGetItem(func_452_call(relay.reshape(var_479.astype('uint32'), [15, 10, 15]), relay.reshape(var_479.astype('uint32'), [15, 10, 15]), ), 0)
bop_495 = relay.add(call_478.astype('int16'), relay.reshape(var_479.astype('int16'), relay.shape_of(call_478))) # shape=(15, 10, 15)
bop_498 = relay.add(call_480.astype('int16'), relay.reshape(var_479.astype('int16'), relay.shape_of(call_480))) # shape=(15, 10, 15)
func_275_call = mod.get_global_var('func_275')
func_278_call = mutated_mod.get_global_var('func_278')
const_515 = relay.const([[6.805864,-6.350037,5.882935,5.385037,3.870927,-1.095633,-5.965222,6.496371,-0.456992,5.762206,-9.804581,8.252595,-0.441962,4.415598,-0.782403,3.427813,-1.528497,9.722267,2.065489,-9.207557,8.560968,-2.722552,-1.276904,-6.748910,-7.841165,-2.493803,7.063601,-8.077851,0.181190,-1.658276,-5.957326,4.824721,8.112665,2.303485,5.916465,2.799255,-6.609661,-2.448740,-7.177386,6.215044,-7.410645,2.791817,5.504494,-8.497516,-5.772003,-5.810261,-0.359318,4.998258,4.442304,-6.219518,-1.559667,7.902114,-2.440798,5.209933,3.161394,6.523471,2.119059,0.043907,-1.559122,3.722991,-2.182035,3.202256,5.004200,-9.277361,7.927508,-8.354221,-1.193549,-8.642349,4.514484,3.552350,2.284945,3.556612,-8.569790,1.702488,-9.945656,6.434779,6.986739,8.091171,3.222899,1.922945,-3.426332,-2.605489,8.739088,3.034455,-0.712198,7.623185,8.605241,-9.422830,4.370722,-7.815003,-0.198679,-6.967137,4.743292,0.109780,4.618719,3.043951,-8.849696,0.570342,5.008844,-2.575508,6.690689,2.740704,-6.157249,-7.739409,2.852125,9.863419,-8.513089,0.992526,4.084930,-5.864021,5.101880,9.348022,3.793239,-8.172731,8.982550,7.150143,-2.549760,-2.812291,-4.822274,2.453502,5.275855,-8.576738,-7.938396,8.584493,-4.158610,3.059512,-9.053486,6.211817,6.015813,-5.497369,-2.653362,8.170969,-3.570180,-3.214449,2.847880,-5.820403,-7.797179,-9.549250,0.787009,0.067387,-8.787480,9.252489,7.203071,-8.549477,-7.188482,8.817810,-8.515164,-5.243872,-5.067161,-6.164480,-6.813805,3.144707,6.619703,2.060469,2.890486,-7.996256,1.586691,-0.163619,-7.095416,7.176284,8.360425,0.451108,-4.432437,-1.030769,-5.898629,-7.493946,-1.116142,-1.988066,2.601229,-4.133495,-2.694039,-2.147661,-4.760817,-2.410889,-1.223422,-2.909043,-1.278773,3.013378,1.966525,-0.403731,-9.604696,-9.081592,-2.676193,-1.208846,-4.268231,-0.778057,8.358641,8.211509,-7.513230,-8.997786,4.156528,-7.188390,9.880365,-6.756904,-6.539418,-1.314294,0.400722,4.697626,2.164441,-6.417177,-6.395877,-1.169188,5.804241,1.781420,1.976654,-2.915138,-3.353288,4.774960,8.971829,-9.576058,-2.704029,-3.274147,2.248460,4.653798,-8.413792,0.517782,-0.434009,-6.263279,6.219797,0.442630,-2.290796,5.058042,7.477701,-3.722580,3.090276,-6.081191,2.744609,9.693512,-4.089565,-4.508221,-4.946233,2.379752,0.278884,7.645575,1.825234,-3.272201,-7.395445,7.185926,-5.096435,-3.577129,-7.227745,7.787133,-5.599662,8.155434,3.820158,7.625707,2.645879,-9.232542,-3.000379,0.238265,1.520068,9.806689,3.380899,2.686569,-6.539513,2.474360,-5.307961,0.937460,-8.122498,9.926468,-1.707588,9.786155,2.561322,-0.860840,6.508601,3.970958,1.066483,3.556206,6.800526,-8.800662,-5.079770,0.218788,-7.609144,8.048798,5.494500,-7.049648,9.723333,9.627132,-8.585587,7.209298,9.233496,-8.808062,6.331773,9.109535,-0.606466,1.762262,-2.446192,3.721999,9.693223,0.829786,2.118075,-8.385902,8.799687,9.255063,0.029192,-4.217996,1.324305,-3.556055,-5.880899,-1.892761,9.149810,1.721812,-0.013149,2.147294,-0.662297,-9.237092,-6.446547,-4.576199,-1.101277,7.734229,-7.182410,-3.813591,-5.582973,1.059161,-3.295446,3.821133,4.726225,5.458148,3.144390,3.715836,9.447861,2.265475,-3.581182,-6.232556,6.531137,-8.798195,6.842606,-3.077349,6.787324,-1.211451,7.688994,-8.922065,-6.906383,-0.104515,-0.977802,4.812286,2.325608,0.949988,1.801771,-2.614767,-6.975693,-0.746616,9.071437,3.998186,-8.321577,-5.196779,-2.294721,-1.991712,6.307199,-4.571982,-4.199268,4.669441,5.190925,5.440994,-8.971984,0.325830,8.410997,-4.514454,-6.198002,5.886980,4.697751,-2.457625,-3.249258,9.425515,9.903920,7.361828,1.312383,5.580293,-0.283192,6.752491,-7.898254,1.003987,0.378080,-2.493987,4.168271,-8.538258,-1.494232,-1.539267,-2.431527,-4.472148,-8.808365,8.535140,-4.571642,-0.722402,-2.439875,-3.715927,-1.659113,-1.249598,2.925068,-4.375924,-8.881300,-7.280217,3.401489,-3.494363,-9.384623,-9.648766,-7.681751,-5.091131,-0.147247,3.253884,6.881045,-9.774818,2.188285,6.727447,0.697035,-1.243655,-9.254212,-4.968831,9.161550,4.032982,4.173918,-0.322888,-7.286375,8.902939,3.348830,3.468698,-0.272782,0.144418,-9.054088,-4.962596,-1.253906,8.983754,5.013001,-8.613616,-9.260749,-9.972046,7.193288,-2.832921,-5.286755,1.973720,-7.285072,-7.362600,-7.071152,6.175953,-4.526438,-9.917144,-8.880691,6.085626,-7.296897,-4.195883,-1.417519,-5.237675,-1.703476,4.354550,-0.069952,-3.217663,8.839516,4.916338,-3.041649,-9.440183,5.450668,4.257210,-9.011965,5.042251,1.040081,-5.438236,3.673973,3.903668,4.712228,-3.136602,2.095788,-3.729515,0.661414,-3.085608,-6.511432,-4.108626,-0.376738,2.706946,-0.939185,1.263828,5.958440,1.369177,-7.305206,-1.386505,6.933958,-0.834703,8.253039,6.423184,-9.714696,0.906630,-0.574133,-7.693863,3.396105,-7.690464,5.697225,7.864996,9.887927,1.467011,-7.323370,3.316674,-5.709960,-6.214522,-5.518144,-1.184673,-2.590052,-3.873433,8.472359,0.517598,-2.177558,-4.478215,0.521377,-1.332241,7.757940,-8.599839,9.817172,6.685200,6.378061,-9.027685,-7.545451,1.288670,-2.637770,9.940803],[-7.818434,-0.545987,-3.327897,-9.972725,3.632881,-5.444562,-6.485030,-7.966472,-2.078899,2.925274,0.207760,-8.173882,-1.526317,-8.539921,0.513119,-7.514818,-2.198787,-2.800841,-5.256761,-9.618256,-4.979247,-0.927798,-1.668415,-8.668902,-7.257159,-1.354851,1.676320,8.074782,-2.323028,-7.052925,-4.175841,-9.062703,-2.005633,2.916969,2.168508,-6.966011,2.002265,1.022573,4.435721,-0.464285,5.409778,5.506548,3.307280,9.656934,9.716886,9.894941,-5.649449,-8.734233,8.291656,7.755904,-9.594744,-5.488713,-9.658967,8.531463,9.621127,-3.081115,-0.570536,-1.198619,-7.980129,-2.238360,8.869045,0.976744,8.359302,-9.292793,-8.005725,5.526277,1.300323,-1.916810,8.034526,4.830163,4.936827,-3.725116,-5.398425,-7.676908,-6.905799,-0.482308,-6.259846,3.637601,3.438203,-0.390096,-8.184958,-4.876300,8.483332,2.927945,-3.160336,-2.888417,-4.488872,-9.816660,1.246517,-6.970777,2.139613,3.002404,-7.508119,1.602445,1.570548,4.057583,1.176849,6.281574,-2.423370,-2.192191,-2.978604,6.356348,1.353552,8.775674,-3.364500,-6.916017,-5.566995,5.810719,-4.285012,-5.884355,2.693738,4.230543,-0.979623,3.855975,-5.190355,4.605454,-7.572324,5.161118,-0.928295,-7.250804,-0.131640,-3.215847,4.998895,-8.767174,-9.706207,2.247227,-1.982673,2.637041,4.324346,-6.184595,-5.039006,-0.515332,-7.909530,-0.692028,-3.868286,7.627546,6.496897,7.671134,8.135257,-8.528939,5.849816,4.655296,4.032055,-5.924131,-5.572021,-5.982755,-2.092876,2.330644,-5.528592,-5.324582,3.365012,-7.997070,0.451961,9.505086,4.275713,0.414341,2.628559,-7.833774,2.405481,0.530698,0.345599,-7.036181,2.585534,-7.358324,4.980541,-3.754727,-1.575727,7.534560,1.494913,9.249797,-3.847879,7.504617,3.495411,-6.605045,-1.135488,-4.851908,3.453322,1.743172,8.226969,0.589950,-4.977865,2.157213,-3.245447,9.469041,2.233648,-6.110088,4.255412,7.293656,9.668795,5.393545,4.110291,-5.210122,-9.575290,3.384579,5.843202,-1.372755,1.437489,5.396232,-7.669466,1.268671,8.196483,6.697865,7.380248,3.328316,3.641397,-9.370031,7.556741,5.549346,-8.864893,8.605991,9.380612,-1.441480,1.302087,-4.026972,-9.885308,0.677302,1.850191,-7.643745,5.845376,-6.319199,-9.364200,1.744049,1.223342,5.228910,-2.645149,4.444137,-3.178027,-9.142704,4.745908,4.690709,-5.828760,9.270458,8.476401,-8.793755,-8.301864,8.201307,4.731456,-2.994552,-1.715301,-0.498311,-3.664661,-7.235108,7.078821,-5.686055,-1.466486,-1.053274,-4.984167,-9.806538,7.333356,-7.391982,4.365036,-6.076532,-8.928489,9.990343,-2.132130,7.027110,-2.055560,0.078022,-9.531929,-5.246124,1.155603,5.911982,5.960300,-1.964944,-7.763151,-2.340161,-1.059782,-0.066571,3.181407,6.184362,-2.353831,-8.179419,8.993625,-2.007884,8.175755,-7.662570,-1.726921,-1.559294,2.714212,-0.867400,2.669117,-5.153403,-7.826233,-4.746849,-4.510504,0.242836,2.929792,2.056175,-7.945853,-5.729656,5.096253,-8.254781,8.097579,3.806672,3.559923,-1.057424,-2.308183,1.549622,-9.768412,-7.929306,3.255035,0.888144,7.046570,6.510625,-7.401523,0.876622,-0.568563,2.424883,-8.294935,0.505337,2.961026,-3.206963,-5.162834,-1.440936,9.681721,7.128787,-4.005953,1.632217,-5.643450,6.420092,7.834043,-1.058991,4.302397,3.792684,-3.787831,0.031445,-0.798703,8.555052,7.112748,6.223531,-3.894620,-3.469852,7.107372,-4.108005,-5.412710,2.290225,-8.731141,-1.586613,0.786856,6.156047,-3.217564,5.620004,-2.390060,0.841614,-5.215867,-0.660028,2.995419,-2.808966,4.708687,-5.322855,-4.479450,1.506800,4.949089,-4.346423,6.139243,-0.748418,1.963462,-9.343980,-9.723613,8.382607,8.096693,2.721544,-8.025772,4.608419,-9.770898,-8.335892,3.524659,2.830882,1.228960,-8.391499,1.212663,-5.735780,-1.760314,-5.907543,-0.662637,-6.940414,-1.469186,-4.812323,4.801552,-0.339664,-7.615988,-3.752608,-6.986547,-7.313495,-1.256147,-5.170505,-4.722225,-5.146708,8.345017,0.779764,-7.130678,1.335670,-5.207512,-2.006167,-9.576809,2.439370,4.047810,-9.340990,-2.040189,1.316772,2.579409,-2.395430,-4.224878,8.826935,-9.285003,7.224927,-4.917483,2.352181,-6.209312,-7.738165,-6.838624,9.267176,7.512348,5.016821,0.337129,-0.081559,-0.236251,-4.399990,5.708766,-3.084624,-6.787593,6.859189,9.650724,7.457075,-8.726623,-4.704638,-0.532888,-8.473730,3.547683,7.688009,-5.313587,-3.214035,-5.422739,1.751712,-8.255441,9.740334,6.863677,9.257884,0.318906,-4.851377,-9.536808,-4.938430,6.337224,-0.830514,-1.698403,0.879045,-1.845355,3.626943,-4.727056,-2.974937,3.690328,7.927298,-6.069193,1.902738,-8.807509,0.346896,-8.154063,3.203885,-6.562104,-8.716101,7.307179,5.826445,9.791093,-4.325002,1.647815,-5.962138,9.978936,5.677253,-7.538235,6.430971,9.954909,8.667134,8.222571,4.342062,7.379214,-8.905801,7.398451,-7.259508,9.630013,-5.404649,3.420944,1.545306,-2.495420,8.529152,3.219478,9.756962,0.326221,-2.407764,2.187769,9.324218,3.375744,2.234669,1.235777,-6.085569,2.845208,-4.047294,1.206455,4.443161,-4.991822,4.052130,5.434401,-4.301070,6.081359,6.125625,-6.767600,4.622091,3.806535,-0.238195,-1.086554,6.768856,7.504306,1.951864]], dtype = "float64")#candidate|515|(2, 512)|const|float64
call_514 = func_275_call(relay.reshape(const_515.astype('float64'), [4, 16, 16]))
call_516 = func_275_call(relay.reshape(const_515.astype('float64'), [4, 16, 16]))
bop_518 = relay.right_shift(uop_472.astype('uint16'), relay.reshape(const_471.astype('uint16'), relay.shape_of(uop_472))) # shape=(16, 16, 13)
bop_551 = relay.multiply(bop_518.astype('int64'), relay.reshape(uop_472.astype('int64'), relay.shape_of(bop_518))) # shape=(16, 16, 13)
func_448_call = mod.get_global_var('func_448')
func_452_call = mutated_mod.get_global_var('func_452')
call_554 = relay.TupleGetItem(func_448_call(relay.reshape(call_478.astype('uint32'), [15, 10, 15]), relay.reshape(call_478.astype('uint32'), [15, 10, 15]), ), 0)
call_555 = relay.TupleGetItem(func_452_call(relay.reshape(call_478.astype('uint32'), [15, 10, 15]), relay.reshape(call_478.astype('uint32'), [15, 10, 15]), ), 0)
func_275_call = mod.get_global_var('func_275')
func_278_call = mutated_mod.get_global_var('func_278')
call_567 = func_275_call(relay.reshape(call_514.astype('float64'), [4, 16, 16]))
call_568 = func_275_call(relay.reshape(call_514.astype('float64'), [4, 16, 16]))
func_448_call = mod.get_global_var('func_448')
func_452_call = mutated_mod.get_global_var('func_452')
call_572 = relay.TupleGetItem(func_448_call(relay.reshape(call_478.astype('uint32'), [15, 10, 15]), relay.reshape(bop_495.astype('uint32'), [15, 10, 15]), ), 0)
call_573 = relay.TupleGetItem(func_452_call(relay.reshape(call_478.astype('uint32'), [15, 10, 15]), relay.reshape(bop_495.astype('uint32'), [15, 10, 15]), ), 0)
uop_577 = relay.tan(bop_551.astype('float32')) # shape=(16, 16, 13)
output = relay.Tuple([bop_495,call_514,const_515,call_554,call_567,call_572,uop_577,])
output2 = relay.Tuple([bop_498,call_516,const_515,call_555,call_568,call_573,uop_577,])
func_583 = relay.Function([var_479,], output)
mod['func_583'] = func_583
mod = relay.transform.InferType()(mod)
mutated_mod['func_583'] = func_583
mutated_mod = relay.transform.InferType()(mutated_mod)
var_584 = relay.var("var_584", dtype = "uint32", shape = (2250,))#candidate|584|(2250,)|var|uint32
func_583_call = mutated_mod.get_global_var('func_583')
call_585 = func_583_call(var_584)
output = call_585
func_586 = relay.Function([var_584], output)
mutated_mod['func_586'] = func_586
mutated_mod = relay.transform.InferType()(mutated_mod)
var_619 = relay.var("var_619", dtype = "float32", shape = (7, 10, 13))#candidate|619|(7, 10, 13)|var|float32
var_620 = relay.var("var_620", dtype = "float32", shape = (7, 10, 13))#candidate|620|(7, 10, 13)|var|float32
bop_621 = relay.power(var_619.astype('float32'), relay.reshape(var_620.astype('float32'), relay.shape_of(var_619))) # shape=(7, 10, 13)
func_583_call = mod.get_global_var('func_583')
func_586_call = mutated_mod.get_global_var('func_586')
var_629 = relay.var("var_629", dtype = "uint32", shape = (1, 2250))#candidate|629|(1, 2250)|var|uint32
call_628 = relay.TupleGetItem(func_583_call(relay.reshape(var_629.astype('uint32'), [2250,])), 3)
call_630 = relay.TupleGetItem(func_586_call(relay.reshape(var_629.astype('uint32'), [2250,])), 3)
output = relay.Tuple([bop_621,call_628,var_629,])
output2 = relay.Tuple([bop_621,call_630,var_629,])
func_633 = relay.Function([var_619,var_620,var_629,], output)
mod['func_633'] = func_633
mod = relay.transform.InferType()(mod)
mutated_mod['func_633'] = func_633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_633_call = mutated_mod.get_global_var('func_633')
var_635 = relay.var("var_635", dtype = "float32", shape = (7, 10, 13))#candidate|635|(7, 10, 13)|var|float32
var_636 = relay.var("var_636", dtype = "float32", shape = (7, 10, 13))#candidate|636|(7, 10, 13)|var|float32
var_637 = relay.var("var_637", dtype = "uint32", shape = (1, 2250))#candidate|637|(1, 2250)|var|uint32
call_634 = func_633_call(var_635,var_636,var_637,)
output = call_634
func_638 = relay.Function([var_635,var_636,var_637,], output)
mutated_mod['func_638'] = func_638
mutated_mod = relay.transform.InferType()(mutated_mod)
const_646 = relay.const([[[0.768238,-6.738132,5.141496,5.999774,1.065557,8.100176,-7.978247,-6.726783,-4.943147,6.448924,-7.120060],[-5.677621,-8.928553,4.197958,0.677802,-8.339412,7.151815,1.605339,5.228229,9.085258,-4.177877,3.509651],[-3.021352,6.330487,8.813107,-8.345613,-4.176248,-5.756159,6.151370,3.955610,-9.548281,0.220195,-2.285965],[-0.847924,-1.885584,-2.644187,5.967941,5.639205,0.002900,-6.192800,6.523515,-1.827194,5.111757,3.303228],[9.620870,-3.919797,-2.727250,9.451573,-8.806576,-7.837907,5.620615,6.445932,-9.338011,8.179680,-1.585822],[-2.991688,-6.920634,9.510814,9.755116,-3.607461,0.379721,7.820289,9.794900,-0.699002,-9.999814,-1.061938],[2.679799,-2.177923,-9.436187,3.234433,-9.594971,0.928621,3.553145,-0.668165,5.626046,3.866279,0.700978],[-9.187355,1.711184,-5.774812,2.427628,1.888035,3.613723,-3.789887,6.436030,-0.222248,-5.794627,0.854268],[-7.809355,-9.971143,-7.397372,6.464082,-4.422516,-6.062261,-2.393144,-1.412153,8.833738,4.584140,2.579061],[8.413044,5.353593,-0.382554,3.040468,2.192743,-7.658732,0.382405,5.589222,-5.853765,-5.944754,4.863621],[-6.900689,-1.160156,-9.238010,-2.666528,5.036410,-0.755586,8.607060,-3.734680,-3.886108,-3.885492,-9.482105],[-6.577380,-4.647059,2.255468,6.194046,-5.203513,-2.751078,-4.592903,-5.386212,3.842718,-3.064584,-2.772285],[-5.239089,-8.869076,5.893770,8.545164,-1.606101,1.141559,8.848997,7.321864,-7.649548,-9.080795,-6.561872],[3.348949,6.207994,-3.665183,-4.913071,6.339822,-6.820294,-4.589748,-1.472828,3.354953,6.210843,-8.072169],[3.800406,7.116800,8.299655,5.404152,-9.705626,-3.260377,9.344767,8.198956,4.663398,-5.914054,-4.653511]],[[7.320990,5.804945,9.217716,-8.075023,6.695928,4.847196,6.521726,-8.387088,-2.398794,8.220023,-6.922046],[-6.130078,-4.650893,-3.351528,0.256384,6.690361,0.183752,9.729071,7.609642,-7.076912,8.213995,-6.055892],[-8.729745,4.698149,4.184695,6.091748,0.502633,-0.014995,-1.479900,6.584648,1.761184,-0.594600,4.964807],[-1.005121,5.971516,7.866317,-5.064191,7.982461,-8.298980,-5.309615,7.852076,6.785094,6.416414,2.515171],[-1.023713,1.279199,5.436707,-9.304158,9.481309,-0.968588,-9.773923,5.121422,3.889540,9.577033,-4.140637],[4.424755,-6.257232,-6.321713,-5.118459,2.058465,-9.589478,1.813466,-8.713302,-5.427190,-3.409476,1.264050],[-2.429505,2.275317,3.854290,4.729335,-6.695885,-3.397169,8.884401,-7.296799,-0.313746,-1.299283,-5.497072],[-5.189657,-1.321589,-4.182351,5.487845,8.643998,5.659484,7.361717,1.286879,-8.771126,-7.534286,-4.507680],[1.874660,8.954445,-5.437056,8.197254,0.740852,-3.910293,-4.638651,-7.197245,-2.613034,-3.653529,6.846106],[-7.097901,-5.228750,-7.214498,3.939202,9.704924,-6.172863,-6.080243,-7.599950,6.826715,-0.248401,4.645516],[8.074995,-3.824801,7.029633,4.077045,1.460895,-4.585537,-8.850810,-4.620175,3.710546,-3.836341,-5.743507],[4.192682,-0.285245,4.254891,-7.866756,-5.161291,-6.839003,7.276855,7.550970,-4.222263,-3.855525,-3.860804],[-4.601933,2.999557,-0.334034,8.275062,-7.312165,-5.366179,0.194294,2.854426,-9.812731,6.683560,0.166473],[1.002125,9.167018,7.189430,-0.770801,-0.413408,-1.489042,-7.767433,-2.078098,7.802993,-2.428545,1.155248],[8.798031,5.447722,-5.169418,0.750371,0.328211,-1.492456,-6.196081,2.157996,-4.452302,8.548898,0.066628]]], dtype = "float64")#candidate|646|(2, 15, 11)|const|float64
uop_647 = relay.cos(const_646.astype('float64')) # shape=(2, 15, 11)
func_583_call = mod.get_global_var('func_583')
func_586_call = mutated_mod.get_global_var('func_586')
const_651 = relay.const([-5,-8,-1,-8,-7,1,1,4,6,-1,-7,-4,6,-8,-4,-6,3,-5,-1,5,8,-5,-7,-4,-6,2,7,8,1,-2,-10,5,2,-10,-5,-4,-2,3,-8,4,3,7,1,3,1,6,-4,7,-5,3,-1,-4,-6,4,-3,5,-2,5,-8,-5,6,2,-4,-7,5,8,9,-9,-6,-8,-1,6,5,-7,2,2,3,7,5,8,-8,-6,-6,-1,-9,-5,1,-2,-5,-1,-2,4,-9,5,-8,3,-7,2,-3,-10,-3,-1,-4,-3,3,-5,-9,10,-1,3,8,-5,3,10,2,8,-3,-8,-3,8,-6,-1,-2,-2,-6,4,1,8,-7,-9,8,-2,8,10,2,-7,10,3,1,-9,-10,-2,10,-4,10,-6,3,-1,-2,2,10,-4,1,6,-3,-10,6,4,2,5,-3,2,10,7,-6,-8,2,9,-7,7,8,3,-7,-1,6,3,-6,-5,8,-10,5,-1,10,-2,4,7,5,7,-10,3,4,-7,-8,-1,-8,-3,1,-10,3,-7,9,1,5,-6,-6,-3,4,5,2,-10,-8,-3,-8,-9,-5,10,-10,8,8,-2,-4,9,3,-9,9,-7,-4,-4,-3,3,-9,4,3,7,-7,-8,-2,-8,-10,-1,-8,-3,-9,5,10,-2,3,10,-9,7,-4,8,3,-10,-4,-9,-1,9,9,-4,3,2,3,2,-7,-7,-6,-8,10,2,-10,8,-3,-1,-10,5,-2,-9,-7,6,-10,6,7,-6,1,-3,-9,2,10,6,8,-3,-8,-7,5,-2,6,2,-1,10,-6,-5,-4,9,-8,-3,-8,-9,1,3,1,3,-3,-1,-3,10,-2,6,-10,9,10,8,-8,-4,5,7,5,3,4,4,-3,-9,-9,-2,-10,9,-10,-9,4,-9,3,4,3,7,9,5,8,-8,8,6,-8,-1,-1,-9,6,-3,2,-8,-5,2,-8,8,10,-1,-6,8,1,2,-2,5,9,-8,7,5,2,-6,4,-4,-1,-3,-3,1,-2,4,-6,-1,-10,3,4,-9,-5,7,-10,6,-8,-8,-1,3,-2,7,-9,-2,-5,6,4,8,-2,-3,-5,-4,7,4,-1,-1,-5,2,7,4,-8,3,-8,5,5,-4,4,-3,-10,-9,1,5,-10,-3,10,9,10,1,-5,9,4,-8,1,-9,6,3,8,7,-4,5,8,1,-7,5,1,-10,7,-1,-1,1,-8,7,2,-6,-4,10,6,-9,6,-5,-8,-9,-4,5,-3,-3,1,-1,-3,9,9,-9,-3,-7,2,5,8,-7,8,-10,-8,-4,-2,-2,-1,2,2,-4,-10,5,7,-4,-6,9,-4,-5,-3,-1,-3,2,4,3,-7,-3,9,9,-8,3,5,-9,3,1,-4,-1,-5,-8,-6,5,7,-10,-3,-4,-3,8,9,9,3,7,2,2,-8,-4,-3,-8,4,9,-9,2,-10,-2,-8,-2,-8,-8,-5,-8,3,1,-1,-6,-7,4,-8,9,-5,-10,9,5,8,-8,4,-10,-7,10,-10,-3,-9,-4,-5,8,2,-4,7,10,1,-10,3,-1,-1,-8,-5,-7,-2,-5,3,-9,-1,-8,2,-6,6,-9,8,-1,9,1,4,10,8,-3,9,8,4,-10,3,-1,-4,10,-8,-2,-10,-3,-10,10,-8,-10,4,-9,-3,-7,5,-7,-6,-2,8,3,8,4,-7,-7,-9,4,-5,4,-1,8,6,-8,2,9,7,-10,6,-2,-8,9,-6,-3,-7,-10,-7,-6,-4,7,6,8,10,8,-1,10,-1,-9,2,-9,8,-7,10,9,-2,1,-4,3,6,9,-6,-9,8,6,-7,-8,6,1,3,-1,-6,-2,3,6,9,-9,4,1,-5,3,2,8,-9,4,-8,-8,9,-7,-7,4,-10,-10,2,-8,8,2,3,8,8,7,-6,10,-4,10,2,7,10,6,-1,-10,4,-9,-1,-2,-10,4,-3,-3,-5,-8,8,9,-7,1,-7,-6,-2,-1,-5,-3,3,3,6,-3,-1,-8,-8,-7,1,-2,-9,-1,-7,-4,-9,-5,6,8,-4,-1,-4,3,5,9,-10,-4,9,-9,-2,-9,2,3,2,10,-2,2,-9,10,-7,-9,9,-5,1,-5,1,-1,-7,-2,6,8,4,-6,5,8,2,-10,-3,9,2,-4,-9,-7,1,-9,5,5,-7,4,-6,5,-2,-8,1,8,3,-8,8,1,7,8,-5,-1,5,-6,10,8,-8,6,4,-5,-5,-9,10,-6,-10,-1,7,-9,9,-1,9,-10,6,8,-9,8,8,9,-9,-7,9,-6,-9,-1,2,-9,3,-10,3,-10,-3,-8,-8,-10,-4,-8,4,1,10,-4,-4,-5,-10,6,7,8,6,2,3,-1,-9,-9,-10,6,10,4,3,-3,-6,-8,6,-2,10,-6,-8,-9,3,-7,8,-5,-3,4,-10,-9,-9,1,3,-10,9,-7,1,3,-3,9,8,-10,6,-7,5,5,4,-1,-9,-7,5,9,-9,-3,5,-4,7,3,1,10,-9,10,-10,8,10,-2,-1,-4,-3,3,-9,10,4,-1,-7,-9,-5,8,9,-7,-3,-5,-7,-5,6,-8,-8,4,4,-4,-8,7,-3,-9,1,3,-4,-8,-7,-1,2,1,10,9,1,-6,8,2,-8,-4,-8,3,-5,-5,4,9,-7,-4,-4,-4,-6,-1,4,6,6,-3,8,6,-8,8,-7,6,7,-3,-4,-5,-7,-7,-2,5,6,2,-5,-9,-9,5,-4,-2,-2,2,-1,-8,-3,-1,9,-5,-5,1,7,-3,7,-4,8,1,-2,5,10,-2,-10,2,-9,6,-3,-4,-7,7,-4,2,-9,-9,8,6,9,4,1,3,-2,5,-8,-6,-5,-6,7,10,-4,9,-5,1,3,7,3,5,9,-1,-1,1,-1,7,-6,6,-6,-2,-9,6,10,7,3,7,4,-10,-6,-10,-9,-6,4,5,-6,10,1,7,-1,-5,6,10,-1,-4,-5,-5,-1,-1,1,-4,4,2,4,-7,4,1,5,2,6,-2,-2,5,-7,8,-2,-5,-8,2,-8,7,2,-6,3,-2,5,10,-2,-1,-1,7,3,2,10,-3,4,4,10,-4,7,-2,3,-10,-6,3,1,-3,-3,6,-8,4,1,-9,-8,-5,-2,-7,-8,-9,7,-6,-2,-3,-3,-8,9,4,-2,10,7,-2,2,-3,8,7,-3,-6,-1,2,7,6,4,6,4,-3,-3,1,6,-6,-5,10,7,5,-4,-3,-6,8,8,5,4,-4,-5,-2,8,-5,-4,-2,-10,8,-3,8,-1,-9,-4,2,4,-5,-10,8,-7,-2,-8,2,1,-6,3,6,-2,-3,-1,2,-1,-2,6,-1,-5,-1,-7,-4,5,5,-4,9,5,-10,-7,2,1,-10,-6,-7,-2,-5,-3,7,9,-5,-2,6,-8,-4,9,4,-9,-7,3,-9,4,6,-3,9,-5,-4,9,-4,4,-4,3,-5,2,1,-5,2,4,-1,3,10,4,-6,-2,2,10,1,3,10,-7,3,-1,3,5,4,-4,5,-8,1,-1,10,-8,-7,-6,-8,-7,-6,8,-4,5,-10,-4,-5,7,-6,8,2,-6,8,-5,8,-5,-8,4,-7,-4,8,-3,-2,-10,1,-4,-3,-1,4,-7,-7,7,-7,-9,-1,-1,-1,-1,-5,3,6,-10,-10,2,-6,-8,-1,-8,7,-3,10,-5,-8,-6,-5,10,8,4,10,4,7,1,-7,6,-8,-2,5,-1,-4,-8,8,4,-8,4,4,-6,-7,9,-5,10,8,-4,-1,-5,-4,6,1,-7,-8,-8,6,5,8,1,-1,-9,-5,9,9,-9,-7,6,4,-6,4,-5,8,8,-4,-9,10,-3,10,10,-7,4,-5,1,-4,2,-3,-2,6,6,9,-6,-5,5,-10,7,-4,-1,-1,-8,1,7,-6,-4,-7,4,-8,-4,-7,10,-3,-7,10,-6,2,10,-4,9,3,4,-6,7,-7,10,-9,-3,9,-9,-10,10,9,-5,-6,-2,-8,3,5,9,-1,5,-9,-2,10,7,-6,-2,-8,7,9,-5,6,-10,-5,10,-10,-8,7,5,-1,7,-1,4,6,-3,1,-2,5,-5,-5,-8,3,-1,-6,-8,-1,8,-4,1,-2,-4,4,9,2,-2,2,-1,6,5,-10,-2,-10,5,3,-5,-10,-9,7,-4,3,-5,5,-9,-9,6,-9,-2,-9,4,-1,-8,-8,-5,-6,-5,4,3,7,2,-10,5,9,10,-2,-1,-3,-6,-7,-7,2,1,3,7,7,6,-10,-7,-8,-8,-1,-3,-7,5,-2,4,-4,1,-8,-9,-2,2,-6,2,8,-4,6,-1,-8,4,1,-7,-2,4,9,-6,-8,4,9,-10,3,-6,-1,1,-5,1,-2,3,-7,5,-10,-8,9,-6,5,7,-8,-8,-2,-10,3,-7,2,-10,-6,-6,5,-7,-5,5,7,-1,-7,-7,5,9,9,-4,3,9,-8,-6,-10,-7,5,6,-6,-8,5,3,3,9,-6,-2,-6,8,9,-8,8,5,-1,-5,9,9,9,3,4,3,-4,2,-9,7,-6,-6,-2,8,-1,10,6,-1,3,-6,-7,-8,-5,4,-1,-1,-5,3,-5,1,-2,5,10,3,-3,10,-10,-10,1,7,2,10,5,5,2,8,-4,-4,-3,8,7,-4,6,-10,-8,8,-6,-9,2,3,-1,10,5,2,2,-2,5,6,1,-10,-6,1,1,-5,6,-8,8,-4,1,-1,-3,-4,8,-4,7,-8,-6,-4,-10,7,6,5,-3,-9,3,9,-10,8,2,-8,8,1,4,-9,4,-10,-3,-8,-2,-3,4,4,-5,-3,4,4,-5,6,-10,-6,10,9,-1,-10,-2,1,-4,-10,-7,4,4,5,-4,-1,-3,3,2,-9,-8,5,3,-8,1,6,2,-9,-1,-8,-5,-1,7,-6,-7,2,-5,7,-5,4,4,-3,-1,3,-9,9,1,2,4,-6,2,-8,7,4,-2,-9,2,1,4,-7,6,-7,-6,6,7,-2,-2,-6,8,2,-2,-4,-2,-10,-2,9,1,-6,5,6,4,10,10,6,8,8,8,6,9,-6,1,9,-1,10,5,-7,7,4,3,-5,-7,-3,-5,2,-5,4,-4,-1,-10,-1,8,-3,-7,-2,8,-3,10,-9,-7,10,-1,-1,9,-2,-2,3,2,6,-6,10,-8,6,-3,5,-6,-3,9,-4,5,-9,-8,10,10,-9,-6,10,-6,-4,-1,-8,-3,-6,4,-5,5,-7,-8,-2,4,-5,-4,8,3,-6,10,3,-4,8,-10,-8,-6,-7,3,3,3,-2,4,7,-2,2,-9,-5,-6,3,-7,1,8,-8,-7,10,10,9,2,3,-8,-3,-2,10,-5,-5,3,-6,2,-2,6,9,6,1,-3,-9,9,-10,4,10,4,-10,9,-8,1,-10,-5,-2,-8,-8,-7,-5,-1,-7,6,4,3,5,-1,3,-4,-8,5,-10,5,5,5,10,3,-10,-7,9,8,1,8,3,8,-10,5,5,8,-4,10,-10,1,3,4,-7,-5,-6,-4,-4,-2,7,-6,7,-4,8,7,6,8,8,-9,-8,5,7,5,-4,-6,4,5,6,6,-1,2,1,-9,3,3,-2,7,2,1,-7,-8,8,6,-3,10,3,3,3,2,2,9,-6,5,6,-3,-2,-8,4,-8,4,3,1,1,10,2,-9,-5,-5,4,-4,-8,9,1,-8,2,-9,1,-3,-4,6,-4,-6,1,-9,7,-3,2,-9,-9,1,10,8,-10,4,3,-1,-4,-8,-10,-1,10,2,-7,-4,9,-8,7,-2,7,10,-3,-9,-10,3,1,7,-7,-3,1,1,-5,10,-2,-7,-6,9,10,8,2,-1,3,-4,8,-5,5,8,-2,1,1,-3,7,-8,-1,-8,-8,-7,7,-3,9,4,3,-7,2,-3,6,-8,9,1,-2,2,-7,1,10,-9,-2,-6,-6,-4,-9,-9,-2], dtype = "uint32")#candidate|651|(2250,)|const|uint32
call_650 = relay.TupleGetItem(func_583_call(relay.reshape(const_651.astype('uint32'), [2250,])), 0)
call_652 = relay.TupleGetItem(func_586_call(relay.reshape(const_651.astype('uint32'), [2250,])), 0)
output = relay.Tuple([uop_647,call_650,const_651,])
output2 = relay.Tuple([uop_647,call_652,const_651,])
func_653 = relay.Function([], output)
mod['func_653'] = func_653
mod = relay.transform.InferType()(mod)
output = func_653()
func_654 = relay.Function([], output)
mutated_mod['func_654'] = func_654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_653_call = mod.get_global_var('func_653')
func_654_call = mutated_mod.get_global_var('func_654')
call_717 = relay.TupleGetItem(func_653_call(), 2)
call_718 = relay.TupleGetItem(func_654_call(), 2)
output = call_717
output2 = call_718
func_723 = relay.Function([], output)
mod['func_723'] = func_723
mod = relay.transform.InferType()(mod)
output = func_723()
func_724 = relay.Function([], output)
mutated_mod['func_724'] = func_724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_653_call = mod.get_global_var('func_653')
func_654_call = mutated_mod.get_global_var('func_654')
call_725 = relay.TupleGetItem(func_653_call(), 2)
call_726 = relay.TupleGetItem(func_654_call(), 2)
func_275_call = mod.get_global_var('func_275')
func_278_call = mutated_mod.get_global_var('func_278')
const_731 = relay.const([[5.199279,2.882122,2.523256,-6.407969,4.214292,-6.467437,-7.494304,6.081014,5.420254,-3.331490,-3.534128,3.174721,8.617193,-7.092912,2.489083,-4.973360,5.641874,-8.137330,-6.345066,-0.198522,-3.697413,-3.157098,7.446593,1.531634,7.965647,-3.736345,8.605161,6.043044,-8.399671,-2.760266,-3.393949,3.680077,-2.907267,-7.729161,-9.892785,7.866445,8.239108,5.266490,8.347951,5.547107,-5.066027,-3.569360,7.686603,-3.928167,3.931281,5.607561,0.920184,9.462951,-2.521464,-5.749936,4.548953,5.099397,2.382080,0.945440,-0.611067,9.679775,8.405783,-3.121145,-9.542898,-5.805901,9.139405,3.423394,-5.610264,-5.709990,-3.308515,9.330911,-4.848462,-1.210293,2.779226,-6.521390,0.870207,-5.648352,1.167059,2.512070,4.564643,-7.447037,-5.406858,1.480615,-8.254207,3.169261,-9.843647,-4.602998,-2.943192,-6.230743,2.503022,2.953742,5.003459,5.075669,-4.946359,-4.233912,-1.939883,-5.915581,-5.940636,-9.569356,5.880082,9.863947,-7.984777,1.007495,-7.989992,3.833958,-3.328022,-7.669911,-4.144201,2.060731,6.412001,3.587527,-0.959325,-8.338116,5.800988,3.893719,-4.452994,7.150143,5.872787,7.053813,-5.209219,6.556283,3.508055,-4.005553,7.031429,-8.705979,4.059197,-8.873789,2.263292,-1.119126,9.861874,-2.619601,-9.902470,8.889134],[-4.652924,-4.688431,1.276634,6.379308,7.474402,-1.204785,7.739058,6.613830,-4.309047,-9.360855,-5.409897,0.081484,8.304839,-7.663650,8.303368,8.525645,-4.387252,-1.456945,5.200357,6.632428,-9.450358,5.923419,-7.489908,-9.623797,-6.102787,8.882796,-8.723343,6.713812,-1.132451,6.991083,1.345320,3.518224,-0.493417,4.799588,7.413452,7.477746,-1.006159,-0.330753,1.017337,-1.629107,8.017803,6.943837,-2.235512,0.396497,-2.651234,-0.317754,5.657043,6.171517,8.731669,2.130194,5.591343,-7.198940,7.306387,3.352158,-7.122257,4.195949,7.988837,2.735644,2.060921,-1.837458,4.155719,2.317505,-3.507357,1.391567,7.743260,-8.441051,2.382639,-7.076216,5.003637,9.128232,4.876005,-3.621140,6.669460,-1.032816,-5.859650,-3.978410,2.524004,7.333355,8.861423,-5.599159,7.800523,1.189616,4.973165,-8.593723,5.811014,-7.630337,-4.051299,1.781448,-3.135156,-2.674069,-6.443275,4.814150,-7.365763,2.580594,1.898240,-5.657077,4.055215,2.729399,1.761629,3.864650,2.228071,-1.760612,-0.027304,-0.078486,9.270725,-7.393662,4.307046,-5.391115,-7.167062,1.693152,5.566870,-4.806935,-2.034558,7.397939,2.375967,-0.463800,7.670189,-3.159787,2.528914,-5.106153,7.274964,-9.210201,-0.770399,-9.748535,4.464022,-5.862347,0.427866,0.779449],[-1.641964,-7.363647,5.502427,6.061769,0.848229,6.984678,-4.384337,0.728529,-9.843116,-8.738988,-0.056224,9.089349,7.035297,-6.404271,-7.618469,-4.558061,7.700313,3.381460,7.312806,4.762344,-3.139150,1.885914,-4.630395,8.847525,9.114764,-6.352328,-9.835720,7.548021,4.185593,0.482612,8.890160,3.339198,-2.562997,9.589716,6.609689,-1.977192,1.272447,-8.092885,-8.600397,-6.568115,1.958235,-6.659843,-0.311801,8.535547,7.048491,-5.073527,-1.056129,7.735426,-1.912629,9.838157,2.800174,5.101876,3.752070,0.348027,2.810307,5.055226,-1.656134,2.508277,4.326530,-8.503670,9.485906,0.394493,-4.062275,-3.810251,-6.206681,-2.024007,0.818263,-1.533680,3.258555,-2.651752,-6.805047,-0.155406,9.530430,9.196741,-1.836397,-7.203465,-5.659848,-3.460211,-4.745802,5.960003,-5.868720,4.181039,-7.844415,-6.844286,4.432142,-5.808669,0.417052,-2.078064,-0.395290,9.186581,5.854023,-6.805675,-1.171350,4.187538,2.535237,7.054951,-0.295911,6.432573,-4.488579,0.598403,0.062795,4.308885,-2.257498,8.363781,-0.925866,2.862269,-6.472696,7.563825,-3.507536,-3.744499,-6.798170,4.000621,-8.019328,7.456529,6.242275,-1.553771,-1.792111,6.450696,2.847404,-5.256163,4.225688,8.759716,9.621177,-8.798647,4.714859,-9.764468,-5.537494,2.644955],[-8.543270,-1.682240,7.063015,-6.464027,-8.574637,-3.907200,4.408444,0.404810,-7.171619,-5.354293,-7.444305,-5.171787,3.799889,9.529577,-1.852501,-9.248736,6.900159,-2.620564,4.691499,-6.946833,-4.855084,2.924493,5.694041,5.672568,-2.734591,-0.811673,-3.821678,-4.688661,7.739012,-1.346587,-2.378935,-8.217663,8.600504,-4.239878,-9.255165,-4.664255,1.459024,-7.859704,2.591115,4.354876,0.907896,-2.318753,-1.623214,-8.640462,-8.766275,6.549204,7.080603,-7.532950,6.839363,-9.414720,7.413297,-2.101604,-7.183949,-3.185008,-8.803934,1.568717,5.550084,-7.626287,7.213487,2.010746,5.429495,-0.585619,-1.594015,9.482528,-0.540594,8.054489,-3.572329,-9.044643,-5.695651,-6.033101,-8.020219,2.163561,7.699990,9.404011,-0.136544,-8.766668,-6.714116,-4.075374,2.576459,-6.546270,9.294435,-0.968846,6.769269,0.344701,7.018231,8.407299,4.265750,4.892095,-6.200296,2.050476,6.068533,-9.656785,2.535494,-7.324510,-0.360480,-4.236674,9.197658,2.668591,4.603675,-2.103923,7.881762,8.749589,-0.430253,2.171737,7.604783,0.471785,9.170231,-8.827233,5.971489,0.376391,3.401295,2.440438,-3.203732,-7.899758,1.075577,-3.611315,-1.115122,-2.954668,-6.857658,1.774545,-2.268910,-1.840614,-7.281969,-3.990034,-9.189092,0.050292,0.497077,-5.146528],[9.092648,-4.381157,1.322479,6.554014,-7.772024,1.332293,-5.538487,-4.013108,6.895512,-1.311900,-0.704526,5.344303,-5.715837,-0.076531,-0.027394,-3.590212,3.226657,-7.324887,9.857690,-4.347064,2.719767,0.801368,-0.373801,5.697112,-0.963278,0.268595,-8.220605,8.235853,4.801271,3.461080,-2.023117,-4.424097,-5.692414,8.200462,-5.299505,6.778433,7.108155,6.222108,-3.289303,7.242147,-6.433738,0.403429,-5.164268,-7.733601,3.132363,7.522284,6.106539,7.965088,-6.615329,2.012771,6.179192,2.827329,5.841430,-4.975976,9.142173,4.935721,3.393258,-3.605691,4.439227,0.883722,-2.941328,5.339394,-3.688849,4.597738,0.031865,-5.499176,1.727468,7.411409,-9.860452,5.500453,3.279186,-4.579405,0.898814,-6.485999,1.733211,8.743071,-4.983021,1.271095,-4.584919,-1.555091,0.048421,-0.597569,-7.033815,-5.545711,1.971043,-2.335091,-7.229072,8.483608,8.687434,-1.056351,-6.406329,7.527698,-7.529097,5.039570,5.501479,-7.326391,-3.253285,-8.882898,-0.165134,-2.905992,-2.099159,2.265564,8.696572,-4.717909,-6.162495,2.675705,7.919228,-6.276951,7.704538,-4.619862,6.285471,2.996930,7.129272,-4.989135,-1.949656,4.184804,5.335795,5.665759,-8.535511,8.984642,4.662914,9.604655,6.498249,-4.520175,1.593022,-4.102573,-4.676532,2.945291],[7.862069,6.357181,-1.311467,-6.190097,0.993082,-2.153444,1.382477,0.168194,-4.257225,3.440809,-6.368818,-9.320877,-0.958405,-0.441488,-0.153074,-8.910261,7.304199,-6.134021,6.959445,6.457364,-9.554508,-4.491428,4.549957,-2.464646,-8.309040,-0.980196,-0.186035,-2.400386,3.372514,7.221924,-7.745025,4.894990,8.543888,8.635562,-1.700205,-2.966035,-1.965818,-6.930844,-5.598327,4.108652,2.322205,3.480960,-7.690685,-0.017469,-5.126826,-8.072528,-0.855046,-6.369002,4.376068,-0.178386,-1.625262,-0.881503,1.024122,-6.413643,-5.844850,-0.060902,8.466478,9.457501,3.023279,6.673072,3.605416,4.806406,1.426532,0.900394,4.174431,-1.140291,-0.478668,6.759369,-9.365902,4.282687,7.343365,-2.935097,4.478222,4.435009,0.101221,-3.396084,-4.227404,-1.490328,2.040904,-6.129313,0.018065,-5.583020,9.831806,4.923033,-5.392754,-3.936685,-4.167733,-5.964731,-6.071134,1.967343,4.248808,-6.046649,0.895503,9.356934,0.866065,0.816019,3.163292,-2.965323,4.524136,-3.283883,0.805102,-8.807076,1.533362,1.507874,-0.345844,8.174360,1.161334,9.656057,6.122427,5.966306,-0.239327,2.523525,6.887307,-5.191575,-6.406667,-6.996436,-8.224436,2.414310,2.274248,7.191554,7.463394,3.958382,0.409240,4.951314,-4.772622,2.847484,-9.202081,-5.127632],[-5.904421,-6.469684,8.648156,-1.991594,9.198840,8.353220,0.437478,-2.190700,5.766763,2.752611,-0.631952,1.849336,4.714291,8.295249,-8.497099,3.901237,9.978175,1.507697,-5.278892,-2.624916,6.573442,9.963166,-4.184571,-2.410953,0.456230,-8.827969,-6.032519,-8.070540,-1.426429,1.141729,5.688963,-9.118430,9.918160,7.328487,4.456918,9.127292,1.760666,4.220349,8.499316,-3.807969,3.745833,-9.085765,-1.641359,-6.929135,8.453268,5.369683,-1.971650,5.694613,5.279926,-4.034599,-5.579771,-2.028281,-3.234704,2.407769,3.712490,-1.846570,5.883215,-0.947921,-6.069116,-2.839312,1.557111,-9.322399,2.163560,3.656934,2.869651,-4.136993,3.138806,7.720453,-1.576710,8.227764,-2.789559,6.572155,6.382694,-2.613521,-1.350065,3.711094,-2.558292,9.560368,0.801544,0.738034,-1.400033,-3.534570,-1.392866,8.923451,-4.894325,-1.948272,7.694503,-5.438016,4.667854,-7.728117,-1.245822,0.917324,3.222288,-4.022512,7.014238,7.365467,1.127284,-7.111434,-2.418923,5.414165,-3.431123,3.486416,4.417336,-2.650764,-2.167535,-7.009092,-0.588467,-0.957550,-6.531125,-0.222856,-1.124019,-3.318968,9.681697,1.228582,-4.471843,9.364264,-5.097582,-2.425709,-6.790689,-2.878979,0.366209,6.127362,2.471025,-1.127668,3.102916,8.134976,-9.598673,1.609781],[-7.994423,0.843529,2.232114,-5.004651,-0.716336,7.341525,5.083864,6.479118,-3.148689,8.089664,-9.676851,-1.157429,-0.385499,1.337090,7.121120,3.845934,7.574081,-7.762036,1.336830,-8.002189,-5.684264,-6.929282,-2.710562,-4.839283,2.295525,-9.156670,6.352844,7.637029,-4.127595,3.704711,2.857463,-0.802861,5.333931,-9.030818,8.065466,-4.736154,-4.188935,5.342348,0.195336,-2.741091,0.023338,-3.293506,2.407199,4.964741,4.593257,6.657234,1.426674,6.619131,-4.499537,0.005606,5.440595,2.920279,-0.560403,-4.487262,5.765456,-0.863879,0.349399,9.168455,-7.670696,-3.931490,9.889297,2.603990,4.248405,-6.342375,-2.810758,8.969332,9.711085,3.582704,-4.486126,1.797866,-9.001437,-8.716734,1.506398,-1.979203,-7.934009,5.116291,-5.872454,-5.227721,1.924593,-6.492838,-7.541471,3.068379,-6.415896,-2.684917,-2.107420,-4.964695,5.218002,-9.648725,6.074196,1.481701,-1.143438,5.343230,1.125899,-0.324188,-1.779301,-7.101889,8.480701,4.898714,-1.524332,-6.032013,1.463430,-2.440872,2.702560,9.282452,9.497445,1.892339,4.441309,7.533426,-4.222430,-0.158993,-2.380663,-5.176988,-2.706804,3.903958,9.492638,-2.737310,5.148344,7.430426,3.176289,7.625318,5.462181,-2.177364,0.523218,5.834179,-1.444206,9.274081,-4.167553,-5.603992]], dtype = "float64")#candidate|731|(8, 128)|const|float64
call_730 = func_275_call(relay.reshape(const_731.astype('float64'), [4, 16, 16]))
call_732 = func_275_call(relay.reshape(const_731.astype('float64'), [4, 16, 16]))
output = relay.Tuple([call_725,call_730,const_731,])
output2 = relay.Tuple([call_726,call_732,const_731,])
func_763 = relay.Function([], output)
mod['func_763'] = func_763
mod = relay.transform.InferType()(mod)
mutated_mod['func_763'] = func_763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_763_call = mutated_mod.get_global_var('func_763')
call_764 = func_763_call()
output = call_764
func_765 = relay.Function([], output)
mutated_mod['func_765'] = func_765
mutated_mod = relay.transform.InferType()(mutated_mod)
var_778 = relay.var("var_778", dtype = "int64", shape = (15, 7, 11))#candidate|778|(15, 7, 11)|var|int64
var_779 = relay.var("var_779", dtype = "int64", shape = (15, 7, 11))#candidate|779|(15, 7, 11)|var|int64
bop_780 = relay.bitwise_and(var_778.astype('int64'), relay.reshape(var_779.astype('int64'), relay.shape_of(var_778))) # shape=(15, 7, 11)
uop_788 = relay.sigmoid(var_779.astype('float64')) # shape=(15, 7, 11)
output = relay.Tuple([bop_780,uop_788,])
output2 = relay.Tuple([bop_780,uop_788,])
func_790 = relay.Function([var_778,var_779,], output)
mod['func_790'] = func_790
mod = relay.transform.InferType()(mod)
mutated_mod['func_790'] = func_790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_790_call = mutated_mod.get_global_var('func_790')
var_792 = relay.var("var_792", dtype = "int64", shape = (15, 7, 11))#candidate|792|(15, 7, 11)|var|int64
var_793 = relay.var("var_793", dtype = "int64", shape = (15, 7, 11))#candidate|793|(15, 7, 11)|var|int64
call_791 = func_790_call(var_792,var_793,)
output = call_791
func_794 = relay.Function([var_792,var_793,], output)
mutated_mod['func_794'] = func_794
mutated_mod = relay.transform.InferType()(mutated_mod)
var_814 = relay.var("var_814", dtype = "float32", shape = (4, 10, 11))#candidate|814|(4, 10, 11)|var|float32
var_815 = relay.var("var_815", dtype = "float32", shape = (4, 10, 11))#candidate|815|(4, 10, 11)|var|float32
bop_816 = relay.greater_equal(var_814.astype('bool'), relay.reshape(var_815.astype('bool'), relay.shape_of(var_814))) # shape=(4, 10, 11)
func_633_call = mod.get_global_var('func_633')
func_638_call = mutated_mod.get_global_var('func_638')
const_820 = relay.const([[3.726412,3.068380],[8.275652,-2.487786],[-6.795266,3.159349],[-5.124783,-3.075989],[5.328487,7.334428],[-6.132589,2.810859],[-6.518984,-6.261777],[-8.013841,5.743065],[7.193182,0.109817],[-4.644670,-0.546361],[-8.105707,-3.985114],[-3.317276,9.643257],[9.169224,7.976240],[-1.195354,-1.331631],[0.342836,-6.825734],[9.315690,2.058108],[-5.034196,8.024578],[3.256390,7.276775],[0.076699,-2.762959],[-7.775419,-6.618790],[-6.026711,7.120915],[-9.778844,5.128486],[-2.010124,-9.869319],[9.561576,-4.292660],[-5.800024,2.788414],[-4.479674,-3.804875],[-4.323785,2.683978],[-9.863032,9.745620],[2.034279,2.237888],[-1.070970,-9.058245],[-1.628436,9.209381],[-1.690830,2.264283],[8.142971,-5.327750],[8.282113,-4.098190],[6.351784,7.202115],[5.289311,6.537035],[3.568512,-1.179203],[3.233174,8.466078],[8.311047,-7.095626],[-5.211081,9.437592],[-8.367951,9.556302],[-9.285711,6.519664],[0.256890,9.602261],[2.182873,-6.951248],[7.461908,9.612334],[0.310174,5.786262],[3.665513,-1.058108],[1.112627,2.532483],[-4.552819,-8.003133],[-3.090241,-6.545283],[-9.953063,-2.615202],[-2.557812,-8.831057],[-7.910080,0.430935],[-4.246459,-4.843568],[-6.533632,-9.154393],[-3.410873,9.376030],[-6.227485,7.379399],[3.484281,9.904133],[5.409803,-4.869540],[-6.551308,-4.570651],[-8.604851,-9.778037],[-5.507760,-5.746196],[7.254012,-2.510404],[-4.008814,-5.870771],[7.371879,-0.533025],[-0.167165,-8.485538],[8.478699,5.845523],[-2.828559,-6.280794],[5.568568,8.532111],[-0.965182,-5.495613],[-2.555850,7.802777],[-3.992468,-0.655340],[-5.991775,8.757974],[-7.768264,-6.806099],[-1.800595,8.548490],[8.053398,6.664042],[-4.447400,-3.605900],[-1.400779,-1.984726],[-5.719820,5.306823],[-5.166728,-9.646102],[-7.718753,5.474481],[-0.125668,1.454745],[3.118507,0.261918],[-1.591983,-0.806832],[1.936388,5.822717],[6.488590,4.869154],[-1.350081,8.777581],[-1.200039,2.994874],[6.591536,1.498659],[-3.122532,-3.685888],[3.670657,3.035107],[-4.278059,-2.191881],[-6.998626,9.340707],[7.960067,9.036773],[0.315759,-2.678641],[0.686726,1.140349],[-8.114538,-8.593060],[8.328682,6.748409],[-3.200564,-2.669766],[-9.919569,-5.960551],[3.431542,-2.383599],[-2.279110,-8.070750],[-3.480836,0.460038],[-7.616087,-9.721349],[1.030297,8.963681],[2.532877,9.817256],[6.030570,-4.245865],[-1.180324,6.115315],[-7.679921,7.044544],[8.331809,5.401160],[-5.315580,2.585350],[6.051844,-0.706782],[-3.726741,5.919609],[-7.430094,8.398101],[-7.345828,6.463209],[5.025152,-6.021776],[-9.438684,-6.420673],[8.249912,-9.004896],[8.800653,-4.229620],[1.803665,3.455786],[1.406334,-1.488609],[-4.651236,4.083661],[9.516617,6.366354],[4.229348,1.815812],[0.230841,-9.013604],[4.724183,4.247475],[-1.245754,7.352955],[-2.208237,-0.584946],[2.489258,4.812190],[-5.541873,-7.210208],[3.282871,-2.484568],[-0.308356,-9.906918],[-4.026727,-7.027428],[9.179584,-6.981421],[-3.965918,-8.460199],[-1.001510,-2.263465],[2.504766,1.558227],[-8.850166,7.212686],[-5.805542,6.049909],[3.783907,-9.928994],[-6.209332,6.527320],[-4.726395,9.541973],[4.805126,8.326455],[-7.978952,6.588862],[3.677084,-9.598011],[7.432998,4.515621],[0.891181,-0.739325],[9.521988,-0.056065],[9.713297,9.886407],[4.792935,-6.512317],[-7.587285,6.563424],[9.964445,-0.105332],[9.127000,7.869543],[3.391626,-5.347041],[4.346168,0.588711],[-9.953358,-2.203737],[-2.252785,1.654631],[-9.043929,-5.561187],[-4.495585,-2.331947],[5.151159,-9.286010],[2.481844,9.753668],[1.004614,1.106656],[-6.357257,1.734042],[5.813426,-0.016622],[0.431212,3.337867],[-5.710829,5.693499],[6.968799,-8.758076],[-4.485092,-8.572986],[-3.522121,-0.894184],[4.851174,-8.961693],[2.702960,-9.371949],[0.370593,-8.004133],[1.925459,7.345783],[5.408871,-8.517972],[-1.136032,4.239266],[2.778910,-8.585750],[4.172069,4.955049],[-3.360064,-2.201031],[9.999153,-5.699251],[-7.693331,-1.773678],[7.421325,1.510184],[-3.714611,4.827805],[-2.543687,5.743963],[-4.515956,-2.166974],[9.895206,7.349010],[2.604206,9.625113],[-0.153830,-8.091926],[-3.630946,-1.707641],[-5.669564,-5.064727],[0.414076,6.020506],[5.213885,-4.688492],[-3.318105,4.144827],[-5.684568,7.388519],[2.877814,3.740788],[9.814185,-5.694519],[-3.900072,6.364992],[-2.289239,0.267263],[3.337305,7.908052],[2.836904,9.676108],[-8.086117,0.437712],[5.975607,5.627058],[2.084847,-2.946384],[-0.367795,-4.952924],[-6.294941,7.379352],[-7.901136,-3.551709],[4.325339,-7.871844],[1.163870,-8.829741],[-0.392130,9.137607],[-9.309159,-5.040817],[4.903972,-2.351267],[5.025810,-9.194654],[-2.222661,-2.294886],[-1.672080,5.565796],[0.138290,-5.855018],[4.832470,-3.032302],[3.634826,8.971896],[-9.703917,3.112456],[-3.953137,0.423118],[1.769815,9.176598],[8.569137,-2.986962],[2.884100,9.636551],[7.749827,2.124661],[-9.904738,-1.053287],[6.292463,-0.295979],[-7.981815,3.101433],[8.032666,-7.369969],[-8.800844,2.163360],[-5.888347,1.252202],[1.867372,-0.014428],[8.383281,9.845408],[0.548278,5.913543],[7.714713,4.031224],[8.158676,-3.047315],[7.151374,0.078024],[7.517590,-4.387467],[-5.216802,9.444563],[-6.033527,-2.336766],[6.108893,-9.293702],[-0.794989,-9.822673],[9.032403,5.138382],[-9.441203,0.543251],[-8.275349,-6.772727],[9.075568,3.302007],[-1.422737,5.775848],[-2.362877,-6.100903],[7.139614,8.469245],[-8.993810,8.879802],[3.089191,3.540765],[8.754013,0.449584],[1.741999,8.390265],[-8.998541,8.430641],[6.009157,-2.617278],[-7.884290,4.705108],[2.113269,4.146524],[-6.785235,7.302149],[9.111869,-3.110437],[9.448124,2.019490],[2.081176,-9.894097],[1.031061,-8.202869],[-8.846442,7.284552],[-7.017881,0.897482],[6.583709,1.134317],[5.865371,6.339459],[8.324806,0.392994],[5.598713,-9.001647],[8.168333,9.863865],[-6.986252,1.104329],[-6.814807,9.951370],[-9.629766,-1.222004],[-8.942091,8.370862],[-0.623931,-4.613836],[-2.828495,-5.453173],[-1.702275,-8.295496],[2.203334,4.224519],[-6.748139,9.773759],[4.039370,3.467763],[1.823382,0.467688],[4.670428,9.207867],[8.280835,-4.603547],[-4.181118,0.776396],[6.182154,-5.297629],[2.723488,-8.896433],[1.239666,-8.586810],[-2.471451,-7.316775],[5.019764,2.913467],[-1.564237,-2.169297],[9.558702,-2.829041],[-1.647888,-9.370371],[0.143546,-7.131694],[-1.960115,-7.018429],[-1.388316,-1.164901],[-5.879231,-8.631613],[-7.435560,0.814821],[4.252951,-7.092733],[-5.428841,-5.293332],[4.864479,-2.209406],[9.320068,8.240377],[0.570616,5.774805],[4.933154,-9.356876],[-9.313036,5.718362],[7.590180,-3.499502],[0.034842,7.965636],[1.303610,-2.320502],[-4.990567,7.870076],[0.622236,-8.218605],[2.114384,9.470886],[7.371345,-3.334096],[-3.278433,7.665543],[-0.446331,-5.481303],[-5.101407,0.174281],[0.826951,-5.398309],[-3.673617,-7.523855],[4.410472,-7.814976],[-6.500795,6.289140],[-6.556548,-6.674317],[9.627546,-9.616307],[6.442753,2.306117],[-6.468870,9.921994],[-0.788794,4.114965],[9.861897,8.607288],[-1.005805,8.077252],[6.921065,4.980940],[0.156481,-5.082505],[8.124057,-0.176194],[-0.356504,-1.707027],[6.871222,-7.873868],[-4.562925,-3.152104],[9.405793,-9.729567],[-6.724740,7.385152],[-8.355013,9.529619],[-5.573324,-2.362236],[-2.369834,-8.947485],[6.588268,8.052408],[-6.168532,-3.869987],[0.490543,-7.448683],[-7.218640,9.310456],[8.498526,-7.060506],[2.869797,8.220455],[-5.435495,2.090002],[-4.080294,7.728656],[-4.111130,-6.569051],[-9.010293,3.807149],[-8.789502,3.734968],[-8.765570,1.982020],[7.455611,3.307935],[7.687772,-2.384205],[0.066677,-1.422172],[5.678337,5.219336],[-2.622852,-7.621813],[-6.812945,-8.555417],[3.380888,-1.761230],[-1.277497,3.752443],[2.136911,-2.320006],[3.987528,-2.019853],[-2.342421,0.049566],[-7.280922,-6.330955],[-2.406135,-5.885125],[-2.971630,7.413103],[-8.746691,-9.083120],[8.293392,-8.876374],[-6.390365,9.254111],[0.170527,-8.401532],[-0.702424,3.087796],[-5.414605,8.356418],[-9.104623,-7.098518],[5.417358,-6.844758],[8.609490,-8.440976],[5.230727,5.548025],[-5.093410,0.140263],[6.766130,7.166907],[9.870040,-8.199888],[-2.679802,3.689053],[1.794427,-7.061339],[3.285030,-3.051839],[6.981095,-0.850879],[8.482063,-9.330381],[-1.109683,4.510079],[-7.875222,-8.897746],[6.055780,0.508571],[-7.252556,-5.292549],[-6.267062,-7.580262],[-2.755642,-3.443116],[-6.713061,-2.968679],[6.036489,2.029588],[-4.540395,8.912248],[8.140997,3.793654],[-5.089026,6.316829],[3.207970,6.940767],[-3.308584,8.632690],[-0.415061,-9.276236],[-4.223442,6.792582],[0.960410,-0.652528],[9.962305,-0.519974],[1.596704,-7.493369],[3.787081,-1.778032],[3.583716,-3.516939],[-7.135190,-2.838642],[-1.545045,0.789696],[0.307318,-0.966025],[3.943262,9.601317],[-1.828537,9.878897],[7.052424,6.994151],[5.442493,8.035240],[9.938778,-7.482273],[0.793286,8.297289],[8.229559,4.975803],[9.787300,-0.466584],[-4.923046,6.882393],[9.044144,-4.913814],[-6.482122,5.350467],[9.775649,1.452376],[0.051970,-1.114132],[-8.000703,-1.575560],[-6.612468,4.517089],[4.914678,-8.528527],[1.117366,-2.246423],[9.573511,4.208511],[-2.811774,2.713610],[4.182553,8.351516],[7.635738,4.655032],[9.252437,3.007696],[5.231347,4.261770],[-8.035536,-3.772221],[0.407787,8.989599],[7.725907,2.790710],[2.221836,-2.310187],[9.107422,1.519122],[3.367006,-0.330246],[-2.268700,3.426859],[-4.611831,-0.781174],[-6.839075,-0.178369],[9.209194,-3.432877],[-4.267011,2.124730],[3.939223,-3.909954],[9.197597,9.335858],[3.460093,0.215363],[0.493613,6.956043],[1.395147,7.116934],[5.479654,2.475714],[7.811113,5.779791],[8.696272,9.058512],[-8.673461,7.951335],[-3.312282,7.462863],[4.632291,4.129403],[3.774800,-0.983662],[8.487425,-6.630835],[-0.158577,2.162633],[-3.353599,7.806475],[0.495576,-7.015980],[4.971569,1.125323],[-4.081417,7.590923],[2.655537,-9.894606],[8.000186,1.875566],[-9.333978,3.589716],[-9.723711,-5.571556]], dtype = "float32")#candidate|820|(455, 2)|const|float32
var_821 = relay.var("var_821", dtype = "uint32", shape = (2250,))#candidate|821|(2250,)|var|uint32
call_819 = relay.TupleGetItem(func_633_call(relay.reshape(const_820.astype('float32'), [7, 10, 13]), relay.reshape(const_820.astype('float32'), [7, 10, 13]), relay.reshape(var_821.astype('uint32'), [1, 2250]), ), 1)
call_822 = relay.TupleGetItem(func_638_call(relay.reshape(const_820.astype('float32'), [7, 10, 13]), relay.reshape(const_820.astype('float32'), [7, 10, 13]), relay.reshape(var_821.astype('uint32'), [1, 2250]), ), 1)
func_653_call = mod.get_global_var('func_653')
func_654_call = mutated_mod.get_global_var('func_654')
call_829 = relay.TupleGetItem(func_653_call(), 1)
call_830 = relay.TupleGetItem(func_654_call(), 1)
func_275_call = mod.get_global_var('func_275')
func_278_call = mutated_mod.get_global_var('func_278')
var_835 = relay.var("var_835", dtype = "float64", shape = (1024,))#candidate|835|(1024,)|var|float64
call_834 = func_275_call(relay.reshape(var_835.astype('float64'), [4, 16, 16]))
call_836 = func_275_call(relay.reshape(var_835.astype('float64'), [4, 16, 16]))
uop_840 = relay.acos(const_820.astype('float32')) # shape=(455, 2)
output = relay.Tuple([bop_816,call_819,var_821,call_829,call_834,var_835,uop_840,])
output2 = relay.Tuple([bop_816,call_822,var_821,call_830,call_836,var_835,uop_840,])
func_842 = relay.Function([var_814,var_815,var_821,var_835,], output)
mod['func_842'] = func_842
mod = relay.transform.InferType()(mod)
mutated_mod['func_842'] = func_842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_842_call = mutated_mod.get_global_var('func_842')
var_844 = relay.var("var_844", dtype = "float32", shape = (4, 10, 11))#candidate|844|(4, 10, 11)|var|float32
var_845 = relay.var("var_845", dtype = "float32", shape = (4, 10, 11))#candidate|845|(4, 10, 11)|var|float32
var_846 = relay.var("var_846", dtype = "uint32", shape = (2250,))#candidate|846|(2250,)|var|uint32
var_847 = relay.var("var_847", dtype = "float64", shape = (1024,))#candidate|847|(1024,)|var|float64
call_843 = func_842_call(var_844,var_845,var_846,var_847,)
output = call_843
func_848 = relay.Function([var_844,var_845,var_846,var_847,], output)
mutated_mod['func_848'] = func_848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_763_call = mod.get_global_var('func_763')
func_765_call = mutated_mod.get_global_var('func_765')
call_880 = relay.TupleGetItem(func_763_call(), 0)
call_881 = relay.TupleGetItem(func_765_call(), 0)
func_448_call = mod.get_global_var('func_448')
func_452_call = mutated_mod.get_global_var('func_452')
call_882 = relay.TupleGetItem(func_448_call(relay.reshape(call_880.astype('uint32'), [15, 10, 15]), relay.reshape(call_880.astype('uint32'), [15, 10, 15]), ), 0)
call_883 = relay.TupleGetItem(func_452_call(relay.reshape(call_880.astype('uint32'), [15, 10, 15]), relay.reshape(call_880.astype('uint32'), [15, 10, 15]), ), 0)
output = relay.Tuple([call_880,call_882,])
output2 = relay.Tuple([call_881,call_883,])
func_889 = relay.Function([], output)
mod['func_889'] = func_889
mod = relay.transform.InferType()(mod)
mutated_mod['func_889'] = func_889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_889_call = mutated_mod.get_global_var('func_889')
call_890 = func_889_call()
output = call_890
func_891 = relay.Function([], output)
mutated_mod['func_891'] = func_891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_763_call = mod.get_global_var('func_763')
func_765_call = mutated_mod.get_global_var('func_765')
call_969 = relay.TupleGetItem(func_763_call(), 2)
call_970 = relay.TupleGetItem(func_765_call(), 2)
output = call_969
output2 = call_970
func_971 = relay.Function([], output)
mod['func_971'] = func_971
mod = relay.transform.InferType()(mod)
mutated_mod['func_971'] = func_971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_971_call = mutated_mod.get_global_var('func_971')
call_972 = func_971_call()
output = call_972
func_973 = relay.Function([], output)
mutated_mod['func_973'] = func_973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
call_976 = func_971_call()
call_977 = func_971_call()
const_984 = relay.const([[-1.574824,3.477505,2.502145,-1.091566,3.379834,-1.479794,3.288818,-0.449744,9.328694,7.167064,7.105645,3.176234,1.250100,6.448479,-4.349409,4.197058,-2.479936,6.575747,-4.985544,-3.480873,8.764405,-7.816403,5.061343,-9.400118,-5.871893,-4.570556,-8.494782,6.329101,-2.752972,-0.162447,7.946496,6.821647,-8.019425,-9.970958,-3.988721,-2.816262,3.571910,-1.044329,3.909360,1.965528,-8.098692,5.051691,6.345238,-0.552946,3.507975,9.698682,-2.625662,-2.851720,7.165138,-1.352457,6.259864,3.007922,3.260971,-1.212472,8.942704,-3.330643,9.308274,-2.814636,5.398125,-3.509817,1.127923,1.464159,-4.202034,-7.144495,-6.721598,-3.198571,-6.853915,-1.704917,5.025922,-9.934380,9.997484,0.291971,4.588129,5.454969,-9.415630,5.448023,0.902574,-1.620224,0.956348,0.273031,2.551052,0.600383,-4.174505,3.878173,-6.279325,-2.955592,1.285633,-2.932635,3.819034,4.755123,6.837341,-8.319576,2.341791,3.456007,5.716973,5.388397,-8.802134,-4.337340,-2.024661,-9.317579,-2.977539,-2.781578,-3.402253,-8.616747,5.719455,-3.000043,-4.155669,9.464017,9.093774,-6.542495,-5.520224,5.227661,4.717520,0.262873,6.048273,-6.796561,-8.619827,9.507693,-3.732074,-2.088029,1.872386,-6.807161,8.046103,-8.524387,-2.402430,-8.288816,-9.554365,3.589556],[6.164798,4.266355,9.602433,-2.405883,7.211957,-2.107646,6.142890,4.260741,7.732433,9.182289,9.171046,0.838395,-0.864580,-2.561280,6.136273,-6.572226,-3.949223,-7.966093,-0.963908,6.491798,-5.382021,4.843926,4.043212,9.354628,-1.764410,5.894562,-5.709548,-2.064020,-2.936958,3.030000,-5.507802,6.818589,5.562615,-9.804163,-9.648993,2.190597,-0.615985,1.374493,5.486681,-2.927921,5.705744,-2.449208,8.828082,-1.256199,0.160087,0.907591,-3.019478,3.439358,-4.549631,9.978598,9.826091,-4.481416,2.544183,3.697241,-3.457430,-6.932084,-6.337533,1.432988,5.378030,6.952750,2.655742,2.912382,9.876491,7.747772,-9.689590,9.481683,-1.156987,9.118885,7.054154,-9.205319,4.018755,4.763466,3.409342,8.146827,-1.976719,-9.410498,7.976364,8.765283,-9.440500,0.549301,1.826696,-6.409213,-1.399367,3.963359,7.428431,9.220655,0.555115,-1.019699,5.124691,2.021860,-0.261985,6.519480,0.576762,0.637548,2.628665,9.843728,8.624322,-1.257158,4.039573,7.324088,-8.291798,5.089842,0.228423,-8.427925,7.492206,-5.288013,7.727362,-4.461379,2.813409,-5.130229,-7.938102,2.405410,-0.087233,6.019777,-4.819727,-4.266485,2.976145,-3.867208,3.582677,7.143489,-6.719378,-9.921843,0.403796,0.444628,-7.117290,7.728037,7.955763,-2.623970],[0.182429,9.168872,-4.840549,-5.511841,-6.867733,-2.854996,4.048754,-6.447421,-5.062154,-0.452490,1.497785,-6.852751,8.047927,-9.903227,-9.099517,-9.291834,-9.994750,0.545984,2.255000,-1.753175,-2.767144,8.093271,-6.509567,-2.242022,5.363299,-8.187322,-4.215208,-6.347205,3.832881,-6.198973,-8.764130,5.108922,-0.937609,0.706695,-3.305697,9.512010,2.441132,-6.135681,0.116162,-1.741713,5.927360,1.193970,9.483213,-1.468162,1.487896,-4.741988,4.242607,-6.518503,5.452595,-8.444993,-5.794782,-8.437905,-1.944157,7.602830,8.629120,-2.949849,6.675033,-9.033334,-4.020912,0.869160,5.268203,0.079764,9.557979,9.680511,8.697814,-0.684774,6.626966,8.284367,4.938945,2.459406,-7.174610,-5.473132,-0.365370,-4.989776,9.034248,-6.151790,-9.874196,3.744846,0.253227,-3.172634,-7.098762,-6.870190,3.203960,-3.809424,3.749770,-4.577272,9.620443,6.797013,6.588649,-5.813372,2.462267,-9.852444,-1.231005,7.812332,-1.584116,3.832155,-2.259062,-3.670437,9.851680,-8.757996,3.350704,4.252771,3.731859,-1.384879,-7.994236,8.602743,6.633902,9.818724,-0.717444,2.160072,-7.200150,6.910140,3.382655,3.935695,-7.138957,2.120737,-4.193356,1.221113,4.671469,-1.253585,-3.743641,2.757162,4.947380,-7.265865,3.318386,-2.549875,-9.406828,-0.765065],[-4.624184,-9.324138,6.371814,-2.199007,-6.630436,-7.849671,9.652004,-4.767088,-0.080745,0.607009,-7.069564,1.140073,8.275909,-9.812655,-9.909683,1.477753,-0.502700,4.415452,3.659816,5.400546,7.613569,1.764885,-4.456401,0.543925,5.746278,9.047645,-6.188535,9.081647,-0.119276,2.677728,-5.291807,8.308719,-6.369109,4.568475,-2.516363,-0.277718,-7.531399,-8.594650,1.092906,3.566240,-4.845669,-2.690418,-9.075336,6.610802,1.324439,5.828830,1.291521,-2.290403,7.440213,-5.313135,-1.286170,-2.853108,-7.944746,-4.542498,-9.928702,0.383028,-1.803711,4.997702,6.568000,3.465318,1.936877,9.090272,-6.113918,-5.769834,2.535820,7.983023,9.582350,-3.378771,8.260003,0.482350,-7.343645,-5.860613,2.214479,8.616698,-5.708102,3.001014,5.586560,2.205664,9.445017,-9.567895,-0.906948,-7.207913,8.064545,6.127723,0.532551,-9.701342,7.309531,-5.650090,-0.938100,-7.015851,0.206589,-6.905129,-7.380395,-0.597228,5.902682,-3.764351,-8.476523,-3.810838,4.142034,-7.437424,-0.901407,-8.002282,-6.925540,-5.518767,9.625153,2.297973,4.919298,4.713086,5.202448,7.224367,-2.126393,-7.240417,-3.808688,-2.148422,3.118210,7.987090,1.302215,9.396462,-1.010239,-3.153032,-1.559974,-1.789350,7.937225,2.364804,8.596680,-0.907365,-7.995623,3.790486],[1.763912,-7.188394,-4.129843,-7.006443,-0.776630,5.204829,-6.078474,-4.683163,-1.656833,-9.578069,-7.487771,-1.986656,-3.787601,-7.176442,-7.023494,1.497610,3.026692,-3.475976,6.378616,-9.951321,-1.560403,9.086536,1.251167,-4.665424,-4.181367,-1.331275,-2.645366,5.411928,3.145362,-1.154727,0.518006,1.639801,0.944028,-2.352659,-9.259444,-2.973814,4.579388,6.835611,7.859671,-4.884624,-4.882754,4.059451,1.530850,7.447117,-2.774358,-7.501367,-0.868122,-0.383047,3.708304,-7.158403,0.543574,6.112296,-6.137461,-8.308312,-7.620626,-3.380800,8.534183,2.751332,-0.285241,2.222359,-2.014587,-3.423560,5.665385,2.220060,2.083980,-0.197361,-8.468458,7.129446,3.474951,5.793056,-9.081476,-7.835551,9.219923,2.081818,3.882658,-5.387641,-9.920432,-1.671917,3.803661,3.975285,9.789636,-0.686033,5.523048,0.404727,9.420616,-5.114300,-9.995691,4.500932,-0.304427,9.611590,2.458724,-0.050749,-1.008564,7.131684,-6.841987,-2.579955,-2.693381,4.435758,5.313777,-7.057765,1.335682,-9.355757,-8.964857,9.897429,-3.924069,-0.720574,-3.211927,-6.232611,6.527106,3.079681,-4.399140,8.112780,-5.460679,-3.612690,0.410109,-6.090300,0.397814,-9.561293,-5.344677,-8.142175,-6.743614,-9.688172,8.785679,5.233620,-1.083384,-6.948041,6.571158,4.113180],[7.758636,1.210078,1.689851,6.469963,-4.060262,-8.866055,-4.315732,-4.653947,1.962894,6.618286,5.714632,7.826188,6.384249,-2.901160,7.142449,-3.730996,9.595096,-5.258037,0.018818,7.953376,7.895926,-5.924758,-9.604469,7.945946,7.549816,4.843210,6.948347,-6.293601,-6.912473,7.352684,5.184644,-1.325248,8.550494,0.930473,0.073946,7.786322,-4.771010,-3.339609,-3.159636,-1.101382,-4.412614,-1.677274,-0.304658,7.066828,9.672964,-2.329384,-2.811119,7.294241,3.682747,3.322311,4.162426,-5.579526,-9.543596,-7.725330,-3.742934,1.282494,-3.172821,-4.566630,-1.170896,-7.031854,4.616174,-9.077140,6.036378,6.156184,-2.132200,5.706767,9.994959,4.487238,-4.041996,-1.151197,-5.400670,-3.710084,8.484649,4.633408,-1.567311,3.385478,0.255215,9.595408,7.510268,6.336303,5.810832,7.702637,-4.518406,0.526111,0.994350,0.275915,4.998091,-8.153637,0.949539,-1.545001,3.776790,7.972177,-8.301241,-3.295814,7.981533,3.112709,-0.651909,-3.492436,-2.453926,-7.510086,6.082764,7.375841,1.718827,-9.907318,-3.506156,-8.483575,-4.509546,-0.619193,-3.591727,2.738351,-1.006324,9.268303,5.664355,-2.240649,7.028609,0.248058,-7.449161,7.941218,0.155664,-1.140978,-5.460999,4.089323,-4.732384,3.763006,-7.707694,2.525289,-5.974677,-4.891409],[-4.123266,8.167010,5.400386,-4.857299,2.219464,4.200586,2.453547,-6.674953,-0.270181,9.184659,7.367983,6.796054,3.825168,3.261034,0.155820,6.816958,-8.028673,9.049319,-7.995542,6.756823,9.127628,-8.837137,1.436116,6.375480,-3.981861,-4.385446,5.070378,-4.465816,-5.453520,-8.950183,7.507655,2.327823,-1.252088,3.317288,9.835013,4.592759,4.074161,0.540771,-6.142814,-1.474412,0.401082,5.057768,-6.209887,2.177336,2.847335,9.844390,-3.227629,-8.412794,3.475921,9.359609,-0.521435,-5.224195,-9.064135,-2.032844,-1.256743,8.104681,-4.250544,-8.664747,-3.225107,6.250678,-7.993009,-1.590561,-6.940130,7.306789,-8.503647,-6.143306,3.283114,-1.086575,-9.893010,6.392921,5.098855,4.326197,9.080690,2.802190,6.217164,6.954668,4.409910,-8.261386,-7.032273,3.834543,-8.108317,0.479793,-8.356118,0.590018,8.163746,4.217031,-3.121268,-4.454247,6.474639,3.262045,-9.247979,-0.566043,1.577588,1.618899,-3.856711,-7.699205,-5.893639,2.590073,-4.480021,-8.600708,9.516337,-6.753162,-2.497002,1.442319,-0.044750,-4.901131,8.366748,-0.541755,-8.530900,-7.433819,8.095960,1.154973,-1.143711,-4.038746,-4.111712,-3.722125,5.977360,1.167330,9.756544,4.086361,3.609618,0.739964,-4.260384,8.707279,1.431770,3.392830,8.627914,5.115756],[9.005862,-4.336268,-0.827352,4.526588,8.831324,4.974195,8.396191,3.506449,-8.887073,8.304913,-3.564832,5.952835,-8.216868,-1.939956,-2.990429,-8.167241,-8.583316,6.842628,8.890687,-1.356081,7.985791,-5.354867,-9.695649,6.480162,-8.397716,1.760652,-9.590447,-7.665843,5.138565,-0.023911,-4.255233,-3.321106,7.725067,0.672811,-5.512719,3.177197,7.459292,3.939080,4.938735,6.602045,4.163959,9.805171,0.266935,0.531772,-8.887064,-0.150658,-2.819653,0.495942,-0.617311,-9.373611,-2.450239,-4.359675,5.829317,8.428830,2.728348,-1.678387,0.034658,-6.436894,-0.112873,-7.713546,7.166403,1.590730,8.598581,8.678266,-1.710269,-6.853321,1.506236,-9.683471,-8.424437,-6.372791,-3.158108,4.411232,-1.855733,7.328041,2.168530,6.879487,-3.570652,-4.786019,-7.149715,-4.380616,6.987691,8.960694,5.848577,-9.795865,-2.186363,3.904064,0.131802,-5.160829,-3.062080,-9.273643,1.137189,-1.602774,5.582363,9.337167,-6.422370,-3.602367,4.982673,3.896031,7.566366,-9.955564,-2.352773,9.038999,-1.184489,2.871520,3.636113,-9.456000,4.274560,-4.924248,7.368488,-3.759106,3.868035,-1.218618,9.424916,-3.657250,0.705415,-0.093019,-8.449689,3.768156,8.579626,-4.941275,2.478546,-2.094210,5.137206,3.270697,-9.764775,1.351524,-2.572039,-0.125221]], dtype = "float64")#candidate|984|(8, 128)|const|float64
bop_985 = relay.bitwise_xor(call_976.astype('int8'), relay.reshape(const_984.astype('int8'), relay.shape_of(call_976))) # shape=(8, 128)
bop_988 = relay.bitwise_xor(call_977.astype('int8'), relay.reshape(const_984.astype('int8'), relay.shape_of(call_977))) # shape=(8, 128)
bop_989 = relay.logical_or(call_976.astype('bool'), relay.reshape(bop_985.astype('bool'), relay.shape_of(call_976))) # shape=(8, 128)
bop_992 = relay.logical_or(call_977.astype('bool'), relay.reshape(bop_988.astype('bool'), relay.shape_of(call_977))) # shape=(8, 128)
output = bop_989
output2 = bop_992
func_993 = relay.Function([], output)
mod['func_993'] = func_993
mod = relay.transform.InferType()(mod)
output = func_993()
func_994 = relay.Function([], output)
mutated_mod['func_994'] = func_994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_763_call = mod.get_global_var('func_763')
func_765_call = mutated_mod.get_global_var('func_765')
call_1041 = relay.TupleGetItem(func_763_call(), 1)
call_1042 = relay.TupleGetItem(func_765_call(), 1)
uop_1050 = relay.rsqrt(call_1041.astype('float64')) # shape=(4, 16, 16)
uop_1052 = relay.rsqrt(call_1042.astype('float64')) # shape=(4, 16, 16)
output = uop_1050
output2 = uop_1052
func_1054 = relay.Function([], output)
mod['func_1054'] = func_1054
mod = relay.transform.InferType()(mod)
output = func_1054()
func_1055 = relay.Function([], output)
mutated_mod['func_1055'] = func_1055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_653_call = mod.get_global_var('func_653')
func_654_call = mutated_mod.get_global_var('func_654')
call_1198 = relay.TupleGetItem(func_653_call(), 2)
call_1199 = relay.TupleGetItem(func_654_call(), 2)
func_583_call = mod.get_global_var('func_583')
func_586_call = mutated_mod.get_global_var('func_586')
call_1206 = relay.TupleGetItem(func_583_call(relay.reshape(call_1198.astype('uint32'), [2250,])), 2)
call_1207 = relay.TupleGetItem(func_586_call(relay.reshape(call_1198.astype('uint32'), [2250,])), 2)
uop_1215 = relay.log(call_1198.astype('float32')) # shape=(2250,)
uop_1217 = relay.log(call_1199.astype('float32')) # shape=(2250,)
uop_1220 = relay.log2(uop_1215.astype('float64')) # shape=(2250,)
uop_1222 = relay.log2(uop_1217.astype('float64')) # shape=(2250,)
bop_1226 = relay.multiply(uop_1220.astype('float32'), relay.reshape(call_1198.astype('float32'), relay.shape_of(uop_1220))) # shape=(2250,)
bop_1229 = relay.multiply(uop_1222.astype('float32'), relay.reshape(call_1199.astype('float32'), relay.shape_of(uop_1222))) # shape=(2250,)
var_1239 = relay.var("var_1239", dtype = "float64", shape = (2, 512))#candidate|1239|(2, 512)|var|float64
bop_1240 = relay.floor_divide(call_1206.astype('float64'), relay.reshape(var_1239.astype('float64'), relay.shape_of(call_1206))) # shape=(2, 512)
bop_1243 = relay.floor_divide(call_1207.astype('float64'), relay.reshape(var_1239.astype('float64'), relay.shape_of(call_1207))) # shape=(2, 512)
bop_1263 = relay.floor_divide(uop_1215.astype('float64'), relay.reshape(bop_1226.astype('float64'), relay.shape_of(uop_1215))) # shape=(2250,)
bop_1266 = relay.floor_divide(uop_1217.astype('float64'), relay.reshape(bop_1229.astype('float64'), relay.shape_of(uop_1217))) # shape=(2250,)
output = relay.Tuple([bop_1240,bop_1263,])
output2 = relay.Tuple([bop_1243,bop_1266,])
func_1268 = relay.Function([var_1239,], output)
mod['func_1268'] = func_1268
mod = relay.transform.InferType()(mod)
mutated_mod['func_1268'] = func_1268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1269 = relay.var("var_1269", dtype = "float64", shape = (2, 512))#candidate|1269|(2, 512)|var|float64
func_1268_call = mutated_mod.get_global_var('func_1268')
call_1270 = func_1268_call(var_1269)
output = call_1270
func_1271 = relay.Function([var_1269], output)
mutated_mod['func_1271'] = func_1271
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1285 = relay.const([[[-5,10,10,8,-9,8,-10,-10,-1,10],[-3,2,2,8,4,-5,-6,-3,-7,2],[2,3,-9,4,5,-3,-2,4,6,-9],[-5,-1,1,9,-5,-5,-9,10,9,-7],[8,5,-4,-6,-2,-3,1,-7,-8,-2],[5,1,-4,-1,6,1,9,6,4,8]],[[-8,10,2,2,4,-4,-9,-3,7,10],[-4,-7,-7,-8,6,-5,-6,-4,4,10],[-7,-7,3,-3,-3,-4,-4,-2,8,9],[8,8,1,-4,-7,-5,1,3,1,4],[7,-3,-3,-1,8,4,-6,-2,4,3],[10,-6,-9,7,-2,-4,-1,1,3,-2]],[[2,7,-8,-6,-2,-4,7,7,6,4],[5,9,4,-9,-2,5,8,-3,-10,-9],[-5,7,2,8,8,-7,9,-8,-8,9],[9,-5,6,5,4,-8,-6,3,-9,-7],[-4,-9,-10,7,5,7,9,-2,7,-1],[-3,4,-6,-9,-9,-3,1,-7,10,-1]],[[9,10,10,-5,1,-2,8,4,-2,-8],[-1,3,2,5,5,6,3,-5,10,-2],[7,7,-9,-9,6,-1,8,-9,5,2],[-7,5,8,5,-10,-1,2,-2,1,-1],[9,-1,7,9,3,1,4,2,-5,-10],[-7,-2,8,-1,7,5,-5,3,6,3]]], dtype = "int32")#candidate|1285|(4, 6, 10)|const|int32
const_1286 = relay.const([[[3,8,4,5,8,7,-4,-8,-6,-7],[2,2,-5,-7,6,-4,-7,10,2,3],[-9,-1,-7,3,5,4,-2,-7,9,7],[1,-6,-4,10,-2,-9,5,-5,8,10],[8,3,8,8,4,-5,-7,-5,-7,-10],[-10,-1,10,9,-4,5,3,-1,-10,10]],[[-6,-10,8,-7,-10,4,-7,-7,3,-7],[7,6,-10,2,-9,5,-9,-10,8,-2],[6,10,-2,-2,-5,9,-9,-1,-5,-8],[-5,-10,7,1,-1,6,8,-3,-3,5],[-2,-9,1,-1,-2,1,-1,2,-4,3],[-4,3,7,2,8,9,2,-10,-7,-1]],[[9,6,4,-8,-9,-2,-2,-4,-10,10],[-4,8,6,-8,1,1,1,10,7,4],[10,10,-2,2,3,-9,-2,2,5,10],[9,-5,-1,8,4,-6,9,-8,-10,-2],[-6,-9,-8,-4,-1,8,-8,-4,8,8],[3,8,-10,6,9,-5,9,-3,5,9]],[[-6,7,7,-4,3,-7,-8,2,-1,1],[6,-9,10,-1,1,-2,-6,2,2,10],[-10,2,2,-7,2,-7,4,3,-9,-2],[4,-9,2,-6,7,-10,3,-6,-7,9],[3,-8,-3,-4,5,3,9,-10,3,-7],[-1,9,10,8,10,-7,-5,-1,-3,-1]]], dtype = "int32")#candidate|1286|(4, 6, 10)|const|int32
bop_1287 = relay.logical_xor(const_1285.astype('int32'), relay.reshape(const_1286.astype('int32'), relay.shape_of(const_1285))) # shape=(4, 6, 10)
output = bop_1287
output2 = bop_1287
func_1301 = relay.Function([], output)
mod['func_1301'] = func_1301
mod = relay.transform.InferType()(mod)
output = func_1301()
func_1302 = relay.Function([], output)
mutated_mod['func_1302'] = func_1302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_889_call = mod.get_global_var('func_889')
func_891_call = mutated_mod.get_global_var('func_891')
call_1324 = relay.TupleGetItem(func_889_call(), 0)
call_1325 = relay.TupleGetItem(func_891_call(), 0)
var_1327 = relay.var("var_1327", dtype = "uint32", shape = (2250,))#candidate|1327|(2250,)|var|uint32
bop_1328 = relay.not_equal(call_1324.astype('bool'), relay.reshape(var_1327.astype('bool'), relay.shape_of(call_1324))) # shape=(2250,)
bop_1331 = relay.not_equal(call_1325.astype('bool'), relay.reshape(var_1327.astype('bool'), relay.shape_of(call_1325))) # shape=(2250,)
func_653_call = mod.get_global_var('func_653')
func_654_call = mutated_mod.get_global_var('func_654')
call_1336 = relay.TupleGetItem(func_653_call(), 1)
call_1337 = relay.TupleGetItem(func_654_call(), 1)
output = relay.Tuple([bop_1328,call_1336,])
output2 = relay.Tuple([bop_1331,call_1337,])
func_1343 = relay.Function([var_1327,], output)
mod['func_1343'] = func_1343
mod = relay.transform.InferType()(mod)
var_1344 = relay.var("var_1344", dtype = "uint32", shape = (2250,))#candidate|1344|(2250,)|var|uint32
output = func_1343(var_1344)
func_1345 = relay.Function([var_1344], output)
mutated_mod['func_1345'] = func_1345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_993_call = mod.get_global_var('func_993')
func_994_call = mutated_mod.get_global_var('func_994')
call_1349 = func_993_call()
call_1350 = func_993_call()
uop_1359 = relay.rsqrt(call_1349.astype('float64')) # shape=(8, 128)
uop_1361 = relay.rsqrt(call_1350.astype('float64')) # shape=(8, 128)
output = relay.Tuple([uop_1359,])
output2 = relay.Tuple([uop_1361,])
func_1368 = relay.Function([], output)
mod['func_1368'] = func_1368
mod = relay.transform.InferType()(mod)
output = func_1368()
func_1369 = relay.Function([], output)
mutated_mod['func_1369'] = func_1369
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1378 = relay.var("var_1378", dtype = "int32", shape = (13, 2, 8))#candidate|1378|(13, 2, 8)|var|int32
var_1379 = relay.var("var_1379", dtype = "int32", shape = (13, 2, 8))#candidate|1379|(13, 2, 8)|var|int32
bop_1380 = relay.right_shift(var_1378.astype('int32'), relay.reshape(var_1379.astype('int32'), relay.shape_of(var_1378))) # shape=(13, 2, 8)
func_1343_call = mod.get_global_var('func_1343')
func_1345_call = mutated_mod.get_global_var('func_1345')
const_1388 = relay.const([[-6,-3,-8,-5,1,1,8,-5,2,10,3,10,5,10,-1,4,-7,-6,-1,4,-2,4,-4,7,-6,-4,10,-10,1,-3,-4,-2,5,8,1,-8,10,3,2,10,6,4,9,3,5,4,4,-2,6,-6,5,-1,7,-9,-5,-4,2,-9,3,-10,-9,-8,2,1,-2,-4,1,2,-9,-7,-9,-5,1,1,-5,2,7,6,-2,7,6,-2,7,6,-4,-2,6,-1,1,-4,-5,2,-8,1,-9,-3,10,-3,7,4,-2,4,6,-8,-7,7,9,-4,-10,-5,3,-4,-3,-1,6,-2,6,10,-1,-8,3,10,5,-8,-9,5,-3,7,8,6,5,-4,-6,-10,-5,5,6,-9,-1,7,2,-2,-3,-2,-6,4,-8,2,-7,1,5,-1,3,-3,8,4,1,6,-6,-4,-7,-6,1,9,2,-1,5,-7,9,-5,-9,-9,-9,-6,-3,7,-3,5,1,-1,3,10,-1,8,-9,10,-4,-10,-4,-7,-9,7,5,5,3,9,-9,5,9,3,-6,6,10,4,2,-8,-4,-2,-6,-7,4,-6,8,-2,-5,-5,-6,3,-6,-9,-8,9,4,5,8,-1,-9,-5,8,-3,2,4,-10,-5,5,7,5,-7,9,10,-3,2,-8,8,2,-9,-3,4,3,10,-3,1,-4,8,-10,3,-9,-5,9,5,7,8,8,-3,-1,-8,1,4,-8,1,9,1,-8,-5,2,-2,5,-8,4,-5,-6,9,2,5,4,-10,-9,-2,-9,-7,8,-9,1,-5,3,-10,-3,-6,-2,7,-6,-10,-9,-5,-9,9,-2,-8,10,-8,5,9,6,-5,8,-6,-10,-1,-9,7,-9,-5,7,-3,-9,9,8,-4,-5,3,-2,8,-5,8,5,2,-2,-4,2,-7,8,-7,-1,-1,1,-2,2,4,8,1,-7,-9,10,1,9,-3,1,-3,2,-1,-9,7,-2,9,2,5,-5,-2,8,-8,-9,-5,-2,5,2,8,-8,3,5,1,-5,9,-3,-6,-4,9,7,6,-2,-5,6,8,-8,7,6,-3,6,-1,-2,-1,5,-2,4,2,-8,10,2,-9,10,6,-3,5,10,10,6,10,3,-4,9,-3,-4,-10,-1,-7,-4,7,1,-9,-1,-6,-2,8,10,2,-9,6,-8,-2,-7,1,3,1,9,6,8,-7,-8,-6,1,8,1,-5,-2,9,7,3,6,-5,-5,-7,3,-5,-2,-1,-9,3,5,-10,-7,6,-8,6,-4,-1,2,-4,-5,-7,-10,-8,-7,10,10,-7,-8,3,-6,10,-9,-1,-2,-5,-1,-3,-9,1,-3,6,-8,4,-7,-2,7,-3,6,5,-8,-4,-3,2,-8,-7,-2,6,-7,-8,7,-9,5,-1,7,-8,8,-6,8,2,10,1,-2,6,7,-6,-5,1,7,8,9,1,-9,-6,-2,5,8,8,2,9,-7,6,-10,-1,-10,-2,-6,-6,-7,-1,1,-5,-9,8,4,-3,-2,2,-7,-10,-1,-5,7,-1,4,-7,8,-5,-4,10,-2,-8,1,8,-2,-6,5,1,5,-8,8,5,5,4,-2,-7,7,-9,-5,10,-7,2,10,-4,9,-3,5,-2,-7,-2,-3,3,6,10,-1,1,-7,-10,10,1,5,-6,-1,5,-7,6,9,9,1,9,2,-10,4,-7,5,4,3,4,-8,-3,-7,-4,8,2,-3,-1,-10,3,2,-10,7,9,-4,5,2,-9,-4,-7,-4,-4,-1,-1,6,7,-3,5,1,-1,6,8,-3,9,10,2,7,3,8,9,8,-4,-2,-3,4,9,10,-2,-4,10,8,-10,-7,3,6,3,-9,-5,7,-6,-1,-5,-2,-4,9,-10,8,-2,-2,-4,8,-2,-4,7,-4,4,-10,6,5,6,-8,1,-6,-2,-9,-7,-4,3,6,9,5,-5,2,6,-3,-3,1,-6,-8,-7,7,-3,5,-6,6,-10,9,-5,-9,10,3,5,-9,3,1,4],[4,-8,-1,-9,-2,-7,6,-3,5,9,9,4,-6,3,4,7,5,6,-10,3,4,4,-4,-5,10,-6,9,-7,4,-2,9,8,-5,-8,-7,-8,2,1,6,-4,-1,7,10,-2,-6,-5,-6,-9,-5,-7,-9,-5,4,7,-3,10,1,3,3,-8,-2,6,-5,-6,-3,7,7,-2,-10,-4,-2,-9,4,-6,9,-8,6,6,8,-6,-6,-2,4,5,7,-1,4,1,3,-4,1,3,5,-3,-3,3,-9,-4,3,9,1,-6,-1,2,6,8,10,-7,1,8,-6,-5,8,-9,1,8,9,4,2,-8,5,-6,-7,8,2,2,-8,4,-6,-4,1,6,7,4,9,-10,7,-7,-10,10,2,-9,-9,-6,-5,4,4,10,4,-3,-3,7,-8,4,-1,9,6,-4,4,-4,2,-7,-7,-6,-8,-4,-1,-2,-5,-8,-1,-2,6,4,7,8,-7,4,9,-5,-10,-1,1,-1,-10,-3,-5,-7,-2,-2,2,-6,5,3,1,-5,8,-3,9,-7,10,-9,-6,7,-1,5,-1,10,-3,1,2,9,2,-1,6,10,-8,3,7,-10,-1,2,7,9,7,-6,-8,9,6,2,7,-8,-1,9,-2,-6,5,6,-2,-4,7,-7,6,6,5,-4,8,-9,4,8,-8,-3,-4,7,-6,-4,2,7,-5,-9,-10,7,4,8,-6,8,-3,-9,1,-3,-8,9,6,7,10,-6,-9,-8,-8,5,-5,8,-3,4,-4,9,4,3,6,3,-7,6,-1,1,1,1,-8,-3,-5,-2,-4,10,-1,-9,-2,2,-3,-5,3,4,-1,-9,4,-7,6,8,2,-9,-9,-9,1,10,2,-8,1,-8,-7,-1,-8,9,-10,6,-3,7,5,2,-9,-10,10,-7,-8,-5,-1,-5,9,-3,-9,2,-5,-5,-5,6,1,-7,4,4,-9,8,-7,9,8,-4,-4,-10,-5,1,4,-6,-5,-8,6,-4,10,5,6,-3,9,-1,6,-1,-6,5,-2,-5,-3,-6,4,4,-2,1,-4,-2,4,5,5,-4,-10,1,9,9,-8,3,-6,5,-7,-8,3,-5,3,8,7,9,1,1,7,-4,-8,-8,-3,4,1,2,-2,-10,8,-5,10,-4,5,10,7,8,10,-10,8,4,6,1,4,4,-9,-7,-6,-9,8,4,5,3,-5,10,-6,3,8,-1,5,-4,-6,-3,-4,3,6,-1,9,-8,-8,-8,-1,-8,4,3,5,-4,-8,1,-3,-6,-2,-10,1,-5,-6,-5,3,8,-1,9,-8,-4,1,-10,10,1,-5,4,1,-6,4,6,3,7,6,-9,-8,-3,-10,1,-1,3,7,3,-7,-9,-10,-10,-10,8,-2,10,-2,9,6,-4,-4,2,-6,-1,3,6,4,8,-3,-2,7,-3,5,-3,-1,7,-5,1,3,6,4,1,8,-4,10,-5,7,8,-1,-4,-9,10,-9,9,4,10,-7,-6,2,7,-5,9,-10,6,7,6,3,3,-6,6,8,-8,6,-2,-3,8,-1,1,-3,5,-9,7,-6,3,-3,-3,-4,-5,-4,-9,-8,-4,6,-10,-2,-1,5,-4,10,-4,8,-3,-8,-5,7,-7,2,4,7,-7,9,4,5,5,-5,8,6,-6,-2,-7,6,4,7,6,-1,7,-10,-6,-8,10,-1,7,-10,4,-5,-2,4,6,5,-7,6,8,6,-3,-6,6,-3,-7,-7,6,-9,-10,6,8,10,8,1,2,-4,10,1,-7,10,-9,4,-6,6,8,3,-3,-3,-7,-1,-10,7,4,9,-2,7,5,-7,-4,8,-4,8,-4,-10,-5,-1,5,6,-5,3,3,7,9,10,8,7,-1,-1,8,-5,4,10,3,9,1,5,1,-4,9,-6,-4,-1,10,9,7,10,9,1,8,-1,-1,4,2,4,4,8,-5,-4,-5,4,4,-3,6,6,-5,2,3,10,4,7,-6,-7,-6,-7,-3],[-4,6,9,-3,-5,-1,-6,1,-2,-2,4,-5,-10,-9,3,9,-8,-7,9,3,8,-1,10,10,8,2,9,-10,-10,7,2,1,3,8,-7,5,6,-8,7,-2,-10,-6,2,8,-6,5,3,9,-3,-7,9,4,10,-4,1,-2,10,10,4,4,-2,-10,-5,10,-6,-8,3,-10,5,-9,-2,5,-1,-4,2,-6,8,-9,5,-3,-8,-5,3,1,-3,-2,3,7,-4,-8,-10,3,10,-5,1,5,-8,-10,10,-7,-4,-6,-10,-1,-3,-1,3,2,-5,-10,4,-8,10,1,3,-10,9,-6,-6,-3,5,-3,9,-4,4,-3,-1,-3,10,8,-4,-10,2,-3,-2,1,-2,6,2,8,-3,-8,-1,-5,5,-2,-10,3,8,-4,2,-8,10,6,3,1,2,-10,10,-3,9,-3,10,4,-2,8,4,6,9,7,5,-8,7,1,-3,2,2,2,-1,-9,5,-5,-3,-2,-5,4,8,7,8,-5,-2,5,-2,5,-3,6,-4,-4,4,-9,8,-6,-3,-4,-3,-6,-5,9,5,-1,-10,6,-10,1,8,-10,5,-5,-1,1,-9,8,-7,-3,3,-3,-3,-9,9,6,1,-6,-3,5,1,7,3,7,-2,-4,-6,-10,-4,-3,-8,-10,4,5,8,-1,-6,-10,2,10,-8,1,-9,-5,1,-6,9,-7,-4,10,2,3,-8,10,-10,7,5,4,-10,-9,-8,-9,-4,8,3,-2,-9,-5,-7,8,5,5,-3,6,-7,4,1,-2,4,-5,-10,-1,1,6,1,5,-9,-8,1,-6,10,-6,7,-7,10,7,-8,-6,6,-9,6,-5,-6,7,-8,8,5,8,-1,-3,7,-8,-10,-6,-6,7,8,-7,6,2,7,1,-3,3,6,-5,-6,9,-9,4,9,1,5,2,4,-5,-3,2,-7,-1,9,-7,-1,2,-1,-7,-8,-10,6,4,5,10,8,-7,7,10,-6,-2,3,-6,2,9,-4,5,-10,-2,10,6,-6,-7,-10,2,5,-2,-9,5,6,3,2,1,-7,-8,7,-9,6,7,-2,-2,4,-5,4,6,5,-9,-5,10,5,3,3,-6,-7,-7,-3,-7,-4,-2,6,10,7,-10,-2,-6,-2,1,-10,-4,-2,-5,-1,4,7,-6,5,-4,-5,-5,-7,-8,-2,6,-7,-7,1,-6,8,-8,7,8,7,-4,-8,-3,-2,6,9,-5,2,7,-6,6,4,-9,-7,5,-8,-10,10,1,-4,5,9,-2,-2,4,4,3,5,1,10,-10,4,7,3,5,7,3,-10,6,-5,-1,10,9,8,9,-3,-8,-7,1,3,9,8,3,-8,1,9,2,-7,-7,8,-3,-5,10,-6,-3,-8,6,-4,-3,9,-6,5,-10,-9,-7,2,-10,1,-8,2,5,-4,8,-1,10,7,10,4,-6,6,-9,-3,5,10,2,-5,-4,7,6,-4,-2,4,3,-4,10,2,10,10,-3,9,4,2,2,9,1,-6,-2,-7,-6,-6,2,-8,7,-10,-8,-6,4,10,1,-3,3,-5,8,2,4,-2,9,-3,-10,7,-3,-2,-2,2,-2,-6,-4,9,-5,-8,10,7,2,6,-2,-1,7,-3,-6,6,10,2,-5,6,4,10,3,-5,-5,8,7,4,5,-5,-2,10,3,6,4,9,-5,4,-6,5,-2,-1,-4,-3,4,-1,-10,-10,2,-2,-9,4,2,6,-9,-9,5,9,9,-10,3,1,10,-8,-1,-9,-3,-6,1,5,2,2,-6,-9,-5,9,-8,-3,4,-1,4,-5,4,-4,-5,6,2,7,9,4,2,-3,-4,9,10,2,1,-10,1,10,4,-5,2,-6,-7,4,-4,10,-5,-5,-10,-8,-4,-3,-4,-3,9,-7,-2,-1,-3,-8,5,-6,-8,5,10,8,4,1,4,-8,-3,-5,8,-4,2,2,10,8,-1,-6,8,6,-5,10,2,4,1,-10,5,1,-6]], dtype = "uint32")#candidate|1388|(3, 750)|const|uint32
call_1387 = relay.TupleGetItem(func_1343_call(relay.reshape(const_1388.astype('uint32'), [2250,])), 0)
call_1389 = relay.TupleGetItem(func_1345_call(relay.reshape(const_1388.astype('uint32'), [2250,])), 0)
uop_1391 = relay.rsqrt(call_1387.astype('float64')) # shape=(2250,)
uop_1393 = relay.rsqrt(call_1389.astype('float64')) # shape=(2250,)
var_1396 = relay.var("var_1396", dtype = "float64", shape = (2250,))#candidate|1396|(2250,)|var|float64
bop_1397 = relay.power(uop_1391.astype('float64'), relay.reshape(var_1396.astype('float64'), relay.shape_of(uop_1391))) # shape=(2250,)
bop_1400 = relay.power(uop_1393.astype('float64'), relay.reshape(var_1396.astype('float64'), relay.shape_of(uop_1393))) # shape=(2250,)
func_723_call = mod.get_global_var('func_723')
func_724_call = mutated_mod.get_global_var('func_724')
call_1417 = func_723_call()
call_1418 = func_723_call()
func_993_call = mod.get_global_var('func_993')
func_994_call = mutated_mod.get_global_var('func_994')
call_1419 = func_993_call()
call_1420 = func_993_call()
bop_1432 = relay.logical_and(bop_1397.astype('bool'), relay.reshape(call_1387.astype('bool'), relay.shape_of(bop_1397))) # shape=(2250,)
bop_1435 = relay.logical_and(bop_1400.astype('bool'), relay.reshape(call_1389.astype('bool'), relay.shape_of(bop_1400))) # shape=(2250,)
output = relay.Tuple([bop_1380,const_1388,call_1417,call_1419,bop_1432,])
output2 = relay.Tuple([bop_1380,const_1388,call_1418,call_1420,bop_1435,])
func_1438 = relay.Function([var_1378,var_1379,var_1396,], output)
mod['func_1438'] = func_1438
mod = relay.transform.InferType()(mod)
var_1439 = relay.var("var_1439", dtype = "int32", shape = (13, 2, 8))#candidate|1439|(13, 2, 8)|var|int32
var_1440 = relay.var("var_1440", dtype = "int32", shape = (13, 2, 8))#candidate|1440|(13, 2, 8)|var|int32
var_1441 = relay.var("var_1441", dtype = "float64", shape = (2250,))#candidate|1441|(2250,)|var|float64
output = func_1438(var_1439,var_1440,var_1441,)
func_1442 = relay.Function([var_1439,var_1440,var_1441,], output)
mutated_mod['func_1442'] = func_1442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1368_call = mod.get_global_var('func_1368')
func_1369_call = mutated_mod.get_global_var('func_1369')
call_1451 = relay.TupleGetItem(func_1368_call(), 0)
call_1452 = relay.TupleGetItem(func_1369_call(), 0)
var_1454 = relay.var("var_1454", dtype = "float64", shape = (8, 128))#candidate|1454|(8, 128)|var|float64
bop_1455 = relay.logical_xor(call_1451.astype('uint32'), relay.reshape(var_1454.astype('uint32'), relay.shape_of(call_1451))) # shape=(8, 128)
bop_1458 = relay.logical_xor(call_1452.astype('uint32'), relay.reshape(var_1454.astype('uint32'), relay.shape_of(call_1452))) # shape=(8, 128)
output = relay.Tuple([bop_1455,])
output2 = relay.Tuple([bop_1458,])
func_1466 = relay.Function([var_1454,], output)
mod['func_1466'] = func_1466
mod = relay.transform.InferType()(mod)
var_1467 = relay.var("var_1467", dtype = "float64", shape = (8, 128))#candidate|1467|(8, 128)|var|float64
output = func_1466(var_1467)
func_1468 = relay.Function([var_1467], output)
mutated_mod['func_1468'] = func_1468
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1470 = relay.constdtype = "float32")#candidate|1470|(13, 13, 13)|const|float32
const_1471 = relay.const([[[8.319695,2.651263,1.118444,4.332002,-8.901035,6.649434,7.549312,3.106329,5.417831,-6.262752,9.555329,8.424708,1.881990],[4.017074,9.777597,-5.505253,8.207572,4.586592,8.209868,-0.666388,1.524380,8.191961,9.643311,-7.620121,4.168053,0.629302],[6.760772,7.860951,-6.238749,0.280876,4.209059,9.203927,8.881806,3.110160,4.908168,-3.011791,3.315085,2.642955,-8.074409],[0.042606,-6.316491,-1.564500,-0.068603,9.049200,0.629684,-0.954413,-8.862559,2.295440,-3.894623,-8.928026,-2.848685,-0.404964],[-0.121969,9.275241,3.755364,-9.588141,4.753983,-4.616490,-7.410863,-2.284243,-0.973743,8.554954,-6.596805,-8.450279,8.759098],[-1.428218,2.800002,-5.348182,8.090160,8.485341,-7.662262,-4.100347,-6.653029,1.346629,-0.907991,-0.312825,-0.979374,0.671196],[-4.731439,4.226512,-4.437745,-7.820686,4.635115,-8.004323,-2.848748,0.348421,2.610175,-1.965140,-4.688984,5.558019,1.470417],[8.921468,0.218629,4.899392,-1.330825,0.863928,-6.250399,7.679362,-4.262121,-8.237582,2.556021,-4.432452,-3.212870,-8.868132],[-7.548817,2.120903,-6.618587,-9.396756,-3.579881,7.922457,-9.397872,1.598524,-5.785002,-3.535383,-2.993463,3.188523,0.392061],[8.440949,-7.056105,-5.169061,2.585523,2.656707,7.866671,9.344530,5.565474,-1.464850,2.678192,-4.559814,-4.372897,6.581711],[-6.748686,-2.844440,-1.280241,0.104851,-1.225211,5.773652,6.889768,2.598960,-7.243334,-7.302008,0.071206,-2.178565,6.263621],[9.583330,9.455753,-8.739612,5.458187,2.020266,-1.312158,8.650388,6.085826,-6.371925,6.385709,2.608081,-3.798003,6.173255],[-3.157364,5.178393,-5.799222,-3.201265,1.731952,1.808502,6.845698,-8.265589,5.702864,-5.290212,-0.854650,-8.473824,-4.638728]],[[-5.899968,5.389965,9.315510,9.726519,8.549449,4.273678,2.860439,2.293892,3.749979,-1.557654,-5.364112,7.920876,-4.107232],[-1.365350,0.948902,-9.346768,6.080101,2.807687,9.829593,6.590421,7.241597,-5.135656,9.632780,8.407811,6.518046,-3.012180],[-8.984554,-2.999391,-6.542578,7.765150,-4.757905,1.895369,8.091760,-0.294312,7.463594,-1.069839,-2.687060,3.903523,-3.366214],[-5.742332,-0.868400,0.494931,7.862787,0.041919,-2.119694,7.280805,-2.527851,9.638822,-2.399798,4.418230,2.434209,-9.645028],[-2.187026,-5.262182,-3.972359,-7.280555,6.689522,6.736385,-8.230851,-5.287681,1.223493,6.241718,-3.259008,-7.617711,-7.781203],[-3.591940,8.742605,0.318995,8.178207,-9.590710,-3.721630,-2.693130,-7.264147,-9.715694,6.802048,-1.601786,9.227522,-5.512849],[-8.911401,-3.135328,-1.275468,-3.374510,9.770962,-4.978717,7.754225,-9.450247,2.737390,-8.938443,7.139852,-7.182053,2.540017],[0.248635,-3.833115,7.988768,-8.374555,9.207205,-2.321557,-4.410512,9.419335,-9.561135,4.809662,8.870497,-9.528902,0.940661],[-7.743105,-1.027020,-3.252495,-1.818938,7.366306,2.247944,5.440762,4.329347,-1.673185,2.996770,-0.249991,6.469069,1.632913],[-9.262547,-2.836411,2.658045,-1.183459,-5.260114,3.742188,8.028793,-4.091790,2.909548,-3.113163,-7.320868,-0.267811,-7.317706],[7.304127,4.579037,-5.611573,-2.257670,2.041261,-6.518088,5.016456,-9.763959,9.712423,-2.583185,-9.451976,-7.370471,-6.914467],[9.452397,-8.653913,7.349651,3.244180,-2.360045,-4.098471,-6.701798,-4.335134,3.939682,-8.388534,5.226633,-3.853580,3.266510],[3.423509,5.132593,-1.699595,-8.362723,-2.007608,3.062814,-4.056849,-6.063958,-4.811456,-4.049407,9.470353,0.092544,6.900006]],[[9.304799,-2.518348,-7.984605,-1.125043,7.183669,5.043524,-2.147779,4.040460,0.104087,7.246190,-1.926596,2.518899,8.838451],[0.566168,-3.771783,5.082907,-0.771546,-9.086846,1.467685,-3.467598,-5.319226,-8.611451,8.836711,-6.378710,-3.021436,-2.964611],[2.039205,4.861101,-6.267243,3.206675,-4.563852,1.704252,-0.602873,0.691247,-1.533178,-3.841128,9.296957,9.391075,-1.436341],[-6.134564,-8.729706,-9.289987,-7.173111,-8.664651,-2.234017,9.899011,-4.304242,8.631496,-2.699613,-0.205106,-4.802557,6.656041],[8.488826,-6.185880,-6.961112,-9.107887,-2.480802,1.926562,1.876552,0.438501,7.051195,-0.452904,7.196246,6.006486,-5.267889],[9.957364,-5.727173,3.746497,8.305887,-0.047483,-7.789009,-2.130493,8.305895,7.204481,5.681767,-3.563636,9.077508,-1.566848],[-5.976273,-3.085280,4.523296,4.778144,0.023557,-0.359094,-3.834798,-7.331225,4.557850,1.244489,-0.450594,7.997653,-0.613369],[4.722124,-7.943176,-5.459339,7.468843,-4.101124,-5.283142,-5.503716,-6.904451,1.322340,1.340339,1.877399,-5.925842,6.801356],[7.188367,7.750323,-9.223890,9.228294,-3.183715,9.541676,-4.860915,3.071022,9.466326,-4.649892,-4.665886,5.952035,-1.305715],[-1.055546,5.527496,5.780356,4.598354,-7.289172,5.381203,-9.985623,-4.629572,4.917837,3.973020,7.188330,1.507172,-3.979390],[5.826381,0.566890,-4.371001,8.485257,-8.330884,-8.384417,8.710381,5.349120,-6.365796,-2.172672,-4.499747,-2.626173,-0.558783],[-5.338579,0.112367,3.490594,-3.775714,-7.824439,6.295773,6.563258,0.852540,6.454978,-5.359570,0.769810,-6.004298,2.585369],[-1.351747,9.276607,-0.776678,-4.625091,-2.965719,-0.970570,-4.374395,-6.051394,-1.029113,4.274000,0.055650,-0.452079,-6.557393]],[[6.398712,-3.021726,2.237484,-3.477755,7.487790,-7.241541,-9.597855,-6.914901,-1.235478,-1.890279,-3.897849,-9.520902,-0.416913],[-9.003501,1.564739,-8.640532,3.053007,-6.673565,4.637920,8.828665,1.862515,-8.363541,0.300444,-3.143260,-3.945081,-9.960216],[-7.787458,-8.992739,-5.439178,3.374372,7.409243,-2.389199,-1.924887,3.340705,9.359612,2.603436,6.158658,2.488335,-7.480625],[-1.010766,-3.828432,2.391972,4.401837,0.307041,-0.932795,7.422743,-4.295024,-3.036866,-5.286570,2.539921,6.637135,-8.550440],[-6.925254,0.285948,-7.675078,9.384390,-2.386238,7.261691,7.078125,0.182613,0.628389,9.899362,2.557270,2.345680,-9.221945],[0.583574,2.479712,-3.505704,2.204366,-7.968194,4.814899,-2.105368,-9.443145,8.805292,-1.585099,9.228215,6.941022,-1.112953],[-5.468917,6.332380,-1.119982,-0.351015,-2.789945,3.998899,-6.482221,5.450970,-9.041358,7.242108,0.681044,-6.799350,-4.930964],[-9.463484,-4.877919,-7.936874,-7.595239,9.889096,-3.077179,-3.338733,-1.858078,1.279393,6.374755,-4.332317,-8.501876,-6.548733],[-3.887119,-2.436880,-0.140410,1.524596,4.545252,3.747318,6.806965,-6.741675,1.329767,-9.997720,-3.794568,-4.778955,8.647041],[3.525306,3.381456,1.704200,-7.599274,-0.561258,-7.884229,-5.278770,5.253374,0.878994,-4.091837,-2.875309,-3.397427,-5.990991],[-2.127578,-4.417737,3.853580,-3.971478,4.765800,4.620169,6.892024,-4.469678,8.442077,6.746266,1.473149,8.730840,-0.458570],[1.568943,-1.812624,0.654700,-3.266779,-7.585096,-7.903686,-3.626361,4.310294,3.935727,3.873540,-9.107074,-0.490543,1.690773],[7.937796,-6.286958,1.470838,-3.731039,1.319304,-4.143835,-9.518720,0.009442,7.139060,-1.517414,6.876922,5.139149,-1.319854]],[[1.601686,8.643521,-9.981176,1.533811,-6.302157,-4.497377,5.179059,7.067673,0.014520,-6.383450,-7.557261,7.390435,-4.573079],[-9.821703,0.413402,-6.216767,-4.400158,-6.994756,-8.277107,0.444467,-7.853015,0.240912,0.701667,7.975145,-0.689365,7.370392],[-5.271524,-5.008984,-7.062522,-1.105628,7.486502,-6.084133,0.516345,-9.517922,9.303128,-3.746686,5.520841,5.717585,-2.239939],[5.862212,-2.164957,3.471172,1.102716,-5.708152,1.245730,-9.188960,8.899736,-4.432899,6.180493,-7.079350,-3.132115,-9.904562],[-1.782656,-1.598032,-3.687913,-7.737960,-4.818371,2.692277,8.240223,6.986298,9.059330,0.767193,2.337858,0.424643,-4.426505],[7.946967,-5.256363,-9.490550,4.170031,-4.336070,-1.295069,-1.462718,-4.069357,7.309166,2.156033,-0.874385,-8.168043,4.769886],[8.992527,-7.331442,-8.062237,-7.741717,7.291816,-0.653465,3.273552,-7.130302,1.632160,1.645535,6.152411,1.133042,5.308965],[1.042330,0.295689,9.900479,4.193893,-8.603227,5.267667,-9.026713,2.445152,8.366074,9.798634,-6.947045,0.630112,7.762901],[-1.311471,2.438256,-8.816732,9.445818,-7.550572,0.099643,-6.970518,1.013718,-1.333051,-0.742063,-7.055850,9.603680,-1.865151],[-4.652263,9.726318,-0.040282,-5.648416,6.927807,-4.635699,-1.387518,-3.524591,-6.317078,3.921589,-0.390408,7.389339,0.109135],[3.326395,-4.871126,7.883532,9.031744,-9.996639,-4.883566,5.195222,1.327695,6.839404,-6.744440,2.991590,-7.607862,9.544356],[6.307618,-9.186984,-6.707515,7.053872,5.508573,-6.896269,8.130979,-1.318299,3.406168,4.888284,5.743098,4.375975,-3.486235],[-1.901049,4.997298,-2.041250,-6.105040,-2.211589,-7.217455,1.772061,-0.461486,-7.419818,-8.266999,2.889249,-3.095975,1.644379]],[[6.371064,-0.157412,4.593661,6.708111,-0.859360,6.910451,-4.196911,9.934726,0.052365,-5.050710,-2.989714,4.608245,4.282400],[2.190194,-7.619319,6.416156,1.012814,0.192289,-4.423602,7.151817,-2.109465,4.454285,-1.650999,0.492308,-0.512242,4.880625],[-4.052421,9.782817,-1.478396,-1.470933,3.279945,-9.077440,5.078131,-5.575534,-9.001779,-0.116232,-1.701961,0.990652,-4.313552],[6.744443,-6.900924,-6.976913,8.013773,-2.999905,-8.001136,-9.760746,-4.903913,-9.949010,0.579943,7.212068,-8.602797,-1.435842],[-0.891125,-2.329611,1.148195,7.981801,-3.928116,-1.526899,5.950428,6.985819,8.349672,-0.889575,8.756780,2.441318,7.353512],[-2.487507,-5.636297,-5.263769,7.612151,-9.216511,-6.934480,-0.789956,2.838679,8.668689,-6.536894,-6.695906,-9.851305,6.495083],[9.807969,-9.493016,-4.742103,-0.467941,-2.577963,8.149173,1.059361,-1.660691,4.684381,6.736501,1.220161,7.730621,3.809029],[-7.115201,-3.684027,5.348566,-4.329608,-1.371761,7.875946,-1.743962,-8.741205,4.906381,1.438827,9.680191,-5.263410,8.702892],[6.021652,7.677877,-5.881680,4.631450,-5.374969,-9.870117,-7.343313,4.589653,5.919313,4.541615,8.748568,-0.934461,-4.058400],[0.964824,-7.887466,2.023983,8.838548,-4.782676,-7.346857,3.478261,7.680670,8.116473,-4.470825,2.304299,-3.432589,1.900335],[5.125237,-6.614444,-1.487057,-9.965604,-5.409103,-8.080917,7.602899,1.130559,-2.277898,-2.033654,-8.581849,-4.807225,-7.182583],[0.957393,-7.607734,-2.819229,-3.596707,-0.778729,-2.992387,6.470157,-6.176589,-7.637804,-8.989828,3.597024,-7.825594,-8.538108],[8.978854,-1.466582,-7.946135,1.305741,-6.626024,-4.294583,-2.816138,8.875338,-0.057095,-8.089541,9.883556,-7.460378,-6.562280]],[[-5.382011,9.382322,-6.920472,5.943707,-8.716730,-8.873281,7.845963,4.809476,1.669696,-3.393494,-5.834409,9.643849,5.737503],[1.994255,-5.351728,0.953985,3.437986,-8.372405,1.471475,-3.986006,3.220138,8.736788,4.717430,2.065274,1.549019,-2.949284],[-5.502741,-6.564995,-6.870721,7.516747,3.627606,8.143386,0.243191,-5.907938,-7.998585,-4.140127,6.277171,-1.265945,-7.236583],[3.147250,0.316926,5.744437,1.683057,5.137467,9.756403,4.577465,9.027133,5.816552,-7.342504,5.208964,-6.660887,-5.349534],[-9.840542,1.014592,-9.910790,-8.912496,-8.716591,4.507627,3.461029,7.818090,2.100339,5.901864,4.646540,3.529517,2.128774],[-6.760402,-7.028355,1.943781,9.572431,8.809784,-0.694718,3.868413,0.389261,-5.684691,7.907521,-9.475712,-1.487129,0.756599],[-4.127086,0.041079,-9.335940,-7.727190,3.091827,3.386037,-2.313954,-8.639813,-7.904999,1.693660,7.419459,-4.813891,4.432347],[6.922999,-3.346313,2.721292,-6.445702,-6.456463,8.133499,7.932624,3.517893,8.807196,-3.429022,-1.010890,-2.460532,-7.764254],[2.889626,-3.246383,6.400358,7.783551,3.491659,3.040924,1.938330,-6.956988,-3.878687,3.943441,-4.915930,3.043989,2.882679],[3.297598,6.677339,3.618963,-8.448889,4.739358,4.925261,5.482165,2.835252,-8.231025,7.955200,8.862952,2.126234,3.153983],[-3.631277,-4.275283,-1.086033,9.885810,0.856641,-7.608465,-8.484303,-6.500293,-8.315100,-6.217107,-2.063312,5.284461,3.650085],[1.316473,4.780472,-2.557420,6.277166,5.166930,-4.310753,2.979667,0.168016,0.530582,2.467052,-6.654317,-3.158522,8.044934],[6.618268,-8.826159,-3.915676,6.242206,-7.600613,9.249406,-3.319779,2.477940,4.758355,7.962936,-8.663810,-6.614716,-4.964461]],[[-5.369419,-4.199605,4.575197,-3.022698,-9.261496,6.717090,-0.765688,-0.866324,8.387968,2.796121,0.061285,9.185382,2.271536],[-4.753553,4.605349,-7.774196,4.686998,8.512626,0.891734,-9.110867,-5.697258,4.846499,9.279669,-2.233145,9.322393,7.343233],[-9.171726,2.676611,-4.152728,-8.435157,-4.551749,0.686356,8.741766,-2.983635,-5.102750,-5.300910,-8.228850,-6.620177,8.720935],[-8.910654,-2.320302,-9.100252,-1.424085,-1.184368,8.159868,-8.121406,-5.917941,3.688167,-7.163726,-2.080068,-6.253032,-4.281208],[-1.352628,-7.201845,7.066585,-5.429906,-5.417290,5.268085,-1.596096,6.521253,-1.033684,4.763739,-0.375910,-7.999353,-0.615580],[6.816136,6.417820,4.348445,-4.736843,-3.241942,-7.862023,7.161550,8.523879,9.210983,0.152735,0.713671,-2.476507,-7.922148],[6.898663,-4.667988,1.282035,-3.079322,3.928044,-0.324832,6.392364,3.452277,-5.391985,-6.747150,1.442722,7.755407,-1.348110],[-5.371972,-2.512427,6.320372,5.461696,1.152619,-5.603319,-6.969927,-3.407177,9.250806,7.264361,8.098752,-5.970500,4.507454],[-1.670497,-7.180731,8.035684,5.098640,2.237140,3.438670,-1.010926,2.001393,-3.832976,-9.533656,-1.977463,-7.657694,5.581942],[9.632802,6.125260,0.039347,-4.232937,-5.555118,0.232923,8.590139,9.031213,3.395954,5.229755,-8.931304,-6.978246,-3.256796],[-2.259856,-7.419087,1.414039,0.892308,-8.691336,-4.426531,-6.289056,-7.365375,-8.354619,-7.180468,-2.588692,-5.943283,-4.978500],[6.685039,2.629988,-9.303638,-1.224897,1.231879,-6.213411,-7.899781,-0.498858,0.188416,-5.088285,-4.337224,2.543789,-6.989143],[-4.599541,-6.775029,3.665120,-2.546601,6.159921,-0.452533,3.830362,4.393475,8.470832,5.619552,-6.608240,-2.131721,-2.527401]],[[-6.707821,-2.411919,-6.391903,4.096628,2.624033,-3.948647,4.427694,-8.968670,-2.795198,-7.375613,-9.362678,5.587155,0.517917],[-2.001373,-8.863327,-4.705410,9.369654,8.051765,6.992432,-1.851854,6.110178,-6.000668,-2.581418,3.509039,4.331823,4.427457],[3.537353,4.158163,-0.479463,-3.090783,-2.246232,7.194893,1.310698,7.907905,2.522500,-4.757511,3.122952,-2.356512,8.296180],[-9.105092,0.409132,-4.546877,-4.571693,5.999952,-2.861937,-4.430817,-7.759885,-7.871612,-8.521769,-1.343808,8.355670,6.579043],[-8.880712,-0.116413,4.870285,-1.796655,-5.893327,6.852571,-4.689000,-5.524090,-0.872082,8.947487,-4.506865,7.052180,-9.000707],[2.672333,-8.436215,-9.194111,-8.985466,-4.527866,4.237590,-6.298420,-4.393549,-5.793923,-8.247616,1.354711,3.953008,9.220968],[-7.988222,4.664569,-7.391987,-2.894614,4.944998,0.196306,4.490556,3.191147,-6.996416,1.552043,4.278484,0.831496,-7.260746],[-7.085774,-6.967555,3.406545,-4.303816,6.497718,8.678339,9.705872,-7.417938,-8.941441,8.848311,-4.003510,7.065715,-0.395024],[8.324199,-5.274018,-7.728597,-9.725924,-2.785130,5.068362,-9.218554,-2.361740,-2.764344,-0.699935,-6.870136,-2.472995,-9.850086],[-5.250722,-6.001959,-3.807771,-0.979366,3.611615,9.562166,9.695298,-7.672403,9.561689,9.493901,-8.976695,3.305379,-6.027584],[-0.620967,9.965300,9.106713,-6.466781,-2.934349,-3.334559,-5.545439,7.876818,3.490263,9.713087,9.197005,-6.472745,-1.361687],[-4.276046,1.005031,-6.711729,-1.664231,-4.661092,5.942723,0.262891,5.233038,-7.042516,-8.631839,1.206516,6.524469,3.185377],[0.618593,8.853259,-0.252410,-1.029778,4.141553,8.225176,-1.521951,0.499746,1.691369,-6.821396,-4.996393,-2.410322,-9.135343]],[[-7.937189,-3.755216,1.542400,5.032845,-8.108222,-9.306729,4.111764,8.112576,9.779406,-0.829998,0.500637,-7.750468,-5.267758],[-1.627702,1.683182,8.789894,-1.411384,7.407715,4.452076,7.937940,-2.392906,-6.694649,0.246675,5.793715,-4.031834,7.328384],[5.437782,3.160595,9.636124,-9.578205,-2.758457,-8.608076,7.171957,-6.599228,0.508602,-6.545630,-3.494887,1.189365,-5.619801],[-2.772814,0.015823,-8.027598,6.657114,-9.112341,-0.343699,3.683017,-7.222147,8.694147,5.681918,1.593514,3.739762,2.827268],[-5.983252,4.564528,6.970931,2.089417,-6.818350,6.409253,7.130050,-8.124114,-4.895339,3.231932,6.152383,-6.137474,-8.257451],[9.840081,-3.184660,2.261002,-4.921891,1.156583,8.689488,-5.272693,5.612972,5.856436,4.127630,-4.004745,-7.394709,2.845159],[-3.460529,-2.222196,4.357237,7.263819,-7.263440,-7.575136,2.438938,-9.341088,8.520781,-1.386009,-0.447829,3.168038,2.350953],[4.270347,9.077397,-3.771681,7.715418,8.869400,-5.332924,-8.487230,7.576412,4.769493,-8.352360,8.149598,-8.250626,-7.243562],[-5.590290,9.503983,9.667321,5.727445,7.374855,5.046636,-6.278013,8.660884,7.797519,-9.180719,-1.421108,7.788358,4.844406],[-6.928992,7.611498,4.768195,0.566648,1.138593,3.964989,8.560295,-2.021727,8.632232,1.255705,-3.609566,-5.554722,-3.835943],[-6.235005,-6.205169,-7.167064,-9.293637,8.185400,7.899440,-0.472801,-9.614503,6.036983,-7.794230,-0.649674,5.468984,-1.785029],[-8.026579,-8.471442,9.869600,-4.549814,-8.837373,8.431453,-1.338731,-3.640745,2.574770,4.751614,2.899534,6.860931,-2.402822],[2.515624,-9.609849,8.201703,8.080416,5.393753,4.078456,-2.472401,-4.656672,-5.379099,-5.029948,9.030545,8.635798,6.542390]],[[6.460455,-5.951753,-8.036740,1.871409,0.385848,0.638735,-8.946995,5.181854,1.175163,-2.035400,8.615915,-1.028639,4.330852],[9.347471,-8.865500,2.703578,-0.536113,-3.344638,-9.852429,4.429999,-9.633940,-0.376911,5.084650,-4.347987,2.339228,-9.066849],[7.136714,-5.144047,-7.283354,4.463107,1.428763,9.380563,-6.722234,-1.214634,3.376228,-4.168881,4.809777,2.586508,0.279002],[9.306219,-4.475237,2.559776,-0.599848,-9.397030,-5.060492,-7.434679,2.283271,8.384298,5.155895,-0.236796,2.763514,-2.019572],[2.375691,2.934531,-9.377016,7.452210,-1.500364,-2.262308,-3.319617,-9.628021,0.857676,-5.942659,-9.459846,-1.149824,-8.733463],[-0.029571,-0.180739,-9.198186,-0.067122,-5.592064,-3.502068,7.618418,-0.053159,0.029522,7.008086,5.756843,-5.366161,5.800790],[3.636031,-9.564258,-1.114924,9.285225,-5.894209,-7.183889,2.499356,4.777354,-1.045834,0.336659,-6.266050,1.444082,-0.234601],[-5.859885,0.068460,3.834672,-5.502636,-4.441067,-8.058390,6.735455,4.725317,-9.886878,-3.739985,-9.174891,-9.906565,2.276434],[-1.640801,-4.085873,-0.602611,-0.661860,-9.687913,-4.096266,3.177278,7.177811,8.566755,-4.262525,-7.253674,8.077943,-1.232599],[8.271636,9.469488,-8.811935,-0.471614,-5.088965,5.622577,-2.952233,-4.294869,-7.270311,0.766980,-9.572302,-7.755750,2.946820],[3.911000,5.047972,-5.383884,-2.471654,-0.119189,1.600356,-7.214609,5.750596,-0.441974,0.248052,-8.597940,2.474767,-0.542106],[-5.781209,-8.096636,9.044850,1.774391,-3.261281,-4.831051,1.177829,8.479872,3.021797,3.432226,2.239408,-8.448443,-1.096804],[6.813696,-0.594578,9.543287,-7.002624,-1.821119,4.109650,4.470453,1.708040,5.854325,-4.831089,8.004863,-2.716226,-4.807930]],[[2.613466,-0.619807,2.358757,8.492361,9.177600,9.186416,-2.715958,-8.903071,7.259014,6.144603,8.470150,3.998506,1.789908],[4.280826,0.770446,-5.868111,-5.880111,3.157325,-4.032215,5.288122,7.272480,2.319804,-7.474147,-5.687822,7.600611,-3.809870],[-8.649663,-7.731498,-4.108123,6.001886,1.637029,-5.440659,-4.287549,-4.616671,-8.539299,2.755287,-1.840536,-3.724312,-4.391048],[-7.919765,-1.723532,-6.104983,-8.949124,9.154932,-8.169268,6.545318,-5.627084,2.383752,4.894556,3.894260,0.677661,2.125302],[7.904797,-7.706919,-4.279022,-2.714421,5.542219,3.042208,2.318515,-0.269234,0.654997,-3.225462,-5.189567,7.466906,4.579204],[0.275747,0.891192,-5.984894,-6.307201,-2.413128,4.906367,-8.371483,4.180079,-1.337941,-3.657613,-1.192029,-3.912545,9.151718],[-2.931032,-9.402748,9.169505,-3.537907,8.720908,3.845193,8.850593,-1.938525,-1.708190,4.425863,8.969550,5.036699,-1.577028],[7.736751,-4.239195,6.123356,1.804668,-3.078723,-0.885185,6.397524,3.952897,4.394394,-2.331237,3.454361,-4.620698,-7.815098],[-4.558884,2.377666,1.172714,-6.676006,4.580098,-7.198616,3.700965,4.943367,1.436911,6.161164,-9.158098,1.823568,4.982449],[4.423320,0.528372,3.411260,5.701453,7.870967,7.944155,-7.660472,4.323452,-2.665188,9.135127,-4.624482,-2.910599,5.476984],[4.731838,-2.979896,5.935954,-5.747087,1.751558,2.973967,1.186736,-7.842635,-0.933991,3.352842,5.417659,-9.898317,-5.692376],[-9.146254,1.498841,2.548657,-7.791507,0.988696,9.035856,5.962878,1.864845,-9.073668,3.859394,5.717054,2.964176,7.251058],[-3.680274,-2.024934,8.698180,-0.545249,-4.238521,9.323910,1.526698,3.911973,-9.141300,5.313629,0.399227,-0.009637,-0.757240]],[[-0.546691,1.715399,8.626485,7.618343,-7.046753,-3.762812,6.250408,-5.613854,3.261088,8.078634,-7.865826,5.823094,4.035817],[4.329960,1.989889,-2.309767,-9.938409,-9.733942,2.982722,2.906928,-9.402543,-5.063494,-8.204224,-5.463686,-5.828419,-9.750983],[3.350474,5.791182,-7.300657,8.830429,-1.252918,6.844986,5.241783,-1.591187,-4.514920,-0.635834,7.511408,-1.521071,0.244606],[-4.681521,8.280062,-8.226283,-6.206354,5.881639,9.166390,5.646507,-0.313007,-7.331987,-8.096503,0.691678,-2.375614,0.585804],[-0.556274,4.575881,-6.040295,-3.718791,6.303606,-3.918038,-0.771794,-0.228105,-5.151778,1.941141,6.512858,-4.330675,0.651389],[-2.881052,3.674646,6.791964,9.141917,3.253730,-1.381734,7.932812,8.593289,-4.515779,-2.059201,9.150323,-7.576830,0.551625],[-5.133448,0.447843,6.361991,5.113105,9.490146,8.381957,2.849342,-7.346728,-0.817940,7.008469,7.167982,1.999963,4.221462],[6.282059,8.747819,7.758075,-4.215718,8.366537,-2.493828,8.314546,-2.382286,-6.833024,8.977946,6.417360,1.118874,9.505729],[-7.266898,-1.879707,3.115055,2.589694,-0.872160,-6.689331,3.964299,9.886424,-1.819631,7.084045,2.195798,3.762721,-6.593891],[-1.408315,7.076256,4.874428,-0.930631,6.337114,5.784247,-5.663251,5.053541,-2.923656,7.772436,-6.893778,-6.430123,-9.557849],[-4.477556,8.207628,-7.521519,-0.209993,6.062211,-7.425795,0.654017,-4.420100,-7.387207,-8.789928,0.667203,5.679023,-7.404395],[0.168444,7.335785,-5.682900,2.391349,4.632978,2.512104,9.255833,5.234930,-1.615892,-0.283238,7.987929,-0.171675,-7.742787],[-8.798818,-8.872746,-5.256724,-2.826784,4.612631,5.375832,-2.086658,-8.381559,-2.886216,-6.529212,2.117005,-2.202992,7.112339]]], dtype = "float32")#candidate|1471|(13, 13, 13)|const|float32
bop_1472 = relay.power(const_1470.astype('float32'), relay.reshape(const_1471.astype('float32'), relay.shape_of(const_1470))) # shape=(13, 13, 13)
func_583_call = mod.get_global_var('func_583')
func_586_call = mutated_mod.get_global_var('func_586')
var_1477 = relay.var("var_1477", dtype = "uint32", shape = (2250,))#candidate|1477|(2250,)|var|uint32
call_1476 = relay.TupleGetItem(func_583_call(relay.reshape(var_1477.astype('uint32'), [2250,])), 5)
call_1478 = relay.TupleGetItem(func_586_call(relay.reshape(var_1477.astype('uint32'), [2250,])), 5)
uop_1480 = relay.atan(var_1477.astype('float32')) # shape=(2250,)
bop_1488 = relay.bitwise_and(bop_1472.astype('int32'), relay.reshape(const_1470.astype('int32'), relay.shape_of(bop_1472))) # shape=(13, 13, 13)
func_633_call = mod.get_global_var('func_633')
func_638_call = mutated_mod.get_global_var('func_638')
const_1493 = relay.const([[-8.199229,-0.402062,-8.840230,9.037906,8.647642,3.136000,2.337291,-2.371372,7.319376,5.863979],[-1.263438,-3.384152,-4.130493,4.377302,7.897104,-3.346712,1.829993,5.119290,-2.126151,3.128465],[7.908564,5.253393,4.605076,-8.472325,-8.625868,-9.327843,-9.359787,-4.073169,-4.542604,9.009122],[-2.898115,5.023983,-9.918507,-1.748435,-3.533515,5.041543,-3.015631,-4.714937,-9.269513,7.479470],[-6.262218,2.637006,-3.508070,7.532049,9.050105,5.836457,-6.962749,0.903387,1.706377,8.482534],[-2.572293,5.723706,0.689493,-1.605168,-5.325963,-6.370708,4.735565,2.374039,3.035660,3.503803],[7.670725,7.745212,4.117204,6.144567,-3.049168,-5.323861,3.139372,1.277024,9.118636,-1.894091],[9.074639,0.712589,-6.590003,1.672321,0.274235,-9.465993,8.893554,3.843882,-0.939336,4.721968],[7.117541,7.470219,-4.162734,-4.073854,-7.358289,7.656980,6.737258,9.725039,-1.147413,-1.821182],[6.297472,-6.594462,-5.280385,8.127830,-3.152114,3.044328,0.627964,-5.630347,8.319410,5.608469],[9.890000,-4.907854,8.893832,-2.479416,-6.923074,-4.368688,0.963641,-8.217243,-1.684387,9.578281],[-1.821020,-7.827690,5.669585,4.015061,3.421120,2.150680,-5.026334,-2.119455,7.596429,1.981352],[5.719988,6.348325,-0.797937,-7.720912,3.923173,-4.932939,-0.799132,6.350632,9.878039,-7.199603],[-9.902238,-1.172589,0.628965,-2.264236,7.878945,-0.532694,3.681713,-6.705529,5.447516,-9.075977],[-2.443089,7.961215,-8.581563,-5.791776,7.258729,-9.583313,-4.438446,-1.677600,3.464690,-1.537650],[-9.603316,5.795610,-4.872381,-4.539622,-6.599297,5.800403,1.299533,9.634675,3.611306,5.454463],[6.824796,-6.451531,-0.962154,2.625059,-3.164385,4.172962,8.195966,-1.848015,-0.451893,5.955865],[-9.726837,2.260104,8.623812,3.783224,-4.002417,-2.467310,-5.174443,-4.543794,8.706993,5.103930],[0.718895,4.562379,5.657061,9.886632,-7.490109,8.237384,5.428144,-4.240047,3.449687,5.531930],[-4.236069,1.843696,5.155287,-7.180314,-5.029827,-1.974387,-7.818344,-1.944963,4.970103,1.301436],[-8.685701,-0.361737,2.065765,0.523616,-8.107824,-9.243595,-0.860329,-7.000179,1.475075,-6.494100],[-8.239594,-2.543009,-3.801782,-0.098789,-1.825583,3.933351,-9.027302,-1.005233,-8.281628,6.850409],[-0.419904,-2.560055,9.027934,-2.085241,8.821802,-4.407949,8.164615,-4.805065,9.243228,-4.941334],[-1.451425,8.066530,8.355920,-9.852676,0.635233,1.444474,4.931238,-3.057706,-2.250698,-7.704629],[7.260258,6.923668,9.648259,5.453767,-8.106520,-5.321641,3.590548,-0.545708,2.377123,7.123333],[-9.873712,-4.425859,-5.574663,-4.043222,-8.444106,-6.600201,-0.732034,-4.765377,8.307646,-3.337256],[1.698791,-1.167270,-6.913728,-6.629163,7.476498,-8.793736,-2.132481,8.122250,3.375452,3.949682],[-5.202719,-0.941824,2.295817,-5.760533,-6.821820,-1.092407,1.738725,-6.932104,6.017464,3.345481],[-7.296799,-3.990266,8.835152,7.549472,-2.058921,-4.661653,-6.733699,5.932997,8.284403,-7.024224],[-4.783606,-1.940793,6.860341,-0.338141,9.829602,2.209480,1.454540,-6.251122,-2.085475,-8.945182],[-3.719235,1.712932,4.312887,-1.922329,1.157171,-3.335367,9.632286,4.448786,1.190305,-6.992776],[-9.331349,3.561585,2.543180,-0.573562,9.983577,-6.767824,8.187102,6.117685,-3.484900,0.718625],[-1.697670,-5.231086,-3.674132,4.537957,6.199756,-4.555627,1.375415,5.187937,2.343282,-2.797356],[-0.931993,-8.863851,4.424952,-9.695288,3.896474,9.882698,4.832837,-4.658446,9.069508,-2.531302],[3.167637,-7.484595,-2.392042,9.510925,4.704820,-4.242725,1.820240,6.349312,-8.091645,-3.769443],[-9.064639,-7.742746,8.300666,2.838487,-1.859757,5.874365,5.890309,-3.475041,-8.521357,4.039811],[-4.133976,0.026672,5.192473,-1.745428,6.979063,4.810978,-5.220036,6.028713,-5.387803,-5.156529],[-8.811949,-5.242834,-7.834893,8.390181,4.856778,-8.684623,4.119019,3.485491,3.139086,-0.301411],[-5.703003,-0.527527,7.595927,1.992297,-4.889280,-4.017557,1.377381,-2.255600,-4.014009,-1.903275],[4.804961,1.625886,5.973019,9.406986,-1.893276,4.670487,2.998332,0.560518,2.731486,7.844080],[-1.801968,7.000333,-5.273272,5.217060,8.320114,-7.630935,4.050974,0.783166,-6.910623,7.087416],[2.679323,-4.514758,-3.149431,7.559970,-8.420741,7.585118,0.447913,-9.456463,6.067153,-8.599341],[-1.458144,0.589998,-7.074841,-4.735695,6.143223,2.718406,-7.483144,7.314398,3.982271,-9.163905],[2.329261,-1.581159,-7.733278,1.467769,9.921487,8.391564,-0.562924,4.018958,7.221198,-9.416168],[6.478473,4.874415,2.584565,-5.268790,-8.201639,-3.832274,-7.980931,-5.903107,8.109740,-0.394267],[0.917068,-4.421881,-4.687601,-7.663876,2.111421,-0.835100,-2.445408,-5.869083,0.315824,-6.893272],[-6.917241,8.591400,2.647334,2.384741,3.104892,3.388414,6.198015,4.852476,9.561607,-2.981011],[-8.107296,6.229989,-2.677566,-4.684649,-3.429631,4.919747,4.945808,-7.827054,-2.838796,9.028643],[3.394381,-5.923743,9.594389,7.239511,2.466207,2.196331,-6.683032,-6.365707,4.318004,-8.284332],[3.302739,-4.076669,4.352277,-7.902446,-5.193321,5.573199,-3.305598,6.574846,0.028099,6.892102],[-6.157309,-4.194991,6.140357,7.923155,2.607155,4.057471,-6.641842,9.970157,-0.447294,8.572768],[-0.017648,-1.695029,4.024671,-4.867483,-2.142685,6.467602,-9.611653,-6.835695,9.048304,-1.355822],[8.043411,9.298154,9.520462,9.252220,-6.690904,7.709715,-0.649014,-1.094032,1.630559,-1.505439],[-8.225082,-3.725490,-9.709158,-2.162114,-1.850432,-6.655390,-8.208156,7.384739,6.488238,0.801229],[-9.745949,-1.796592,5.102733,-4.956838,6.374353,-3.433253,-4.610035,-5.659923,3.425682,-3.007869],[-3.040370,-5.326481,8.518370,-7.232454,-3.643823,-3.168594,-2.674280,5.406617,8.888777,-8.557081],[4.037633,-4.105662,0.693026,-7.106227,-3.976595,3.876204,1.880787,8.363598,7.308311,8.987423],[-2.590131,-5.254735,-3.274420,-3.019490,6.200928,-0.968775,6.705247,5.531067,-1.641573,-2.934857],[-3.526090,4.049121,4.854702,-7.913239,-6.813097,-4.620272,-0.340535,-7.666878,3.989452,-8.674439],[2.051622,9.422623,-7.389879,-8.242323,-0.834493,4.336064,-5.414967,-0.269030,2.037869,-6.668110],[5.678256,-1.620706,-1.925552,-0.262904,6.699422,-0.596897,-7.503961,-7.200058,-4.157784,4.139451],[6.051550,-8.062498,5.848508,4.402286,3.037976,-3.218804,-3.492008,-0.162303,5.863998,-5.745345],[-1.445505,-2.395043,-4.452118,8.730466,0.789351,9.674536,7.775255,-5.448455,1.455290,5.884466],[6.643965,6.580906,5.245640,-5.602183,-8.113029,2.935709,-6.470168,0.816113,-6.758610,4.826550],[9.907230,-7.638291,-6.172893,3.321212,-6.493388,9.305351,7.583051,-6.713360,-5.567080,0.568197],[6.350075,0.323214,-5.954883,9.537549,6.683415,-2.794908,3.445261,9.568588,4.177872,6.113214],[-3.727420,-2.681749,1.321629,-5.906682,6.915788,2.323680,-3.304513,-2.130046,3.552903,-1.607114],[1.286847,-2.947648,6.399551,-9.952660,-4.013991,2.805564,-1.268655,-8.879671,-1.286504,-1.522246],[6.106190,-7.227187,-3.282807,-7.311518,-3.660420,2.913905,-4.890546,9.804945,9.529949,-2.502981],[6.254222,-7.513394,8.859469,-1.853328,7.505406,-7.483351,-0.667341,7.512611,6.082270,-3.258557],[-6.717842,9.544815,9.818329,-1.720616,8.972492,1.816090,-7.017027,-7.153464,-2.309816,3.958003],[8.670755,-2.755014,0.025739,6.156638,-4.768375,-3.329930,8.117918,4.397363,-1.719326,3.011715],[-0.611054,7.853736,0.757937,6.223110,-7.193750,9.009701,-0.147803,0.729277,8.412248,-2.633104],[-0.504998,-8.492592,3.804000,1.644901,-9.683466,2.472593,0.677860,6.908280,-7.514381,-8.355221],[-7.985474,9.649812,-8.455441,-1.871417,0.655257,6.467020,2.573068,7.291217,6.801301,8.201203],[5.172142,-7.198406,1.937731,7.312978,-7.131561,-4.209911,-5.712406,0.183630,-0.544435,-8.225700],[7.642972,0.113672,-9.572273,3.086141,1.967213,3.457762,6.012899,6.442139,7.969670,-1.264430],[2.040474,-5.411599,-2.059002,-5.088126,3.159828,-5.030775,-0.197002,-3.458736,-8.763066,-6.876863],[-6.341567,3.231664,7.348981,-4.111009,0.949394,1.547532,1.051194,-5.904529,3.567497,-7.182676],[-7.970636,9.537165,-5.350102,8.704497,5.971183,2.504904,8.083097,6.999454,2.549037,2.739187],[0.464254,4.315666,7.093405,-9.229463,-2.521767,8.410883,-3.502189,8.733444,-4.140385,6.577813],[-6.072302,0.995352,1.842944,0.871586,-8.109309,-4.243226,2.256261,-8.406565,4.385018,3.477839],[0.539271,-9.924731,-6.413507,7.967965,-9.357437,-7.259277,3.259005,-3.909192,3.421612,3.195669],[0.188161,0.570300,-1.957506,4.853044,-4.413027,7.041932,9.993554,5.757597,-5.575309,3.228347],[-7.302895,5.863854,6.625709,-5.514316,1.611992,9.102172,3.927473,5.606321,-3.993844,-3.407729],[-6.811681,1.192281,7.137979,5.942267,2.743529,3.274206,-6.008978,7.728335,-3.514701,-5.386341],[3.363452,-8.267668,-4.318595,-7.852052,-1.363828,-3.718204,9.516046,2.232632,-4.396463,-5.280709],[4.805630,6.716402,-1.394683,0.108034,4.889789,9.627891,4.040100,1.288407,2.367885,6.682666],[-3.465559,-3.144057,6.620498,8.802662,-0.299226,1.956472,3.133382,-7.566617,8.576322,-0.288104],[3.677139,2.225033,-8.217222,5.787312,1.884505,9.485548,-9.045030,9.257199,6.880936,3.152920],[-8.158384,8.208641,-7.243711,2.548864,-8.957316,-5.900423,3.613713,-7.568465,-2.318093,-0.702923]], dtype = "float32")#candidate|1493|(91, 10)|const|float32
call_1492 = relay.TupleGetItem(func_633_call(relay.reshape(const_1493.astype('float32'), [7, 10, 13]), relay.reshape(const_1493.astype('float32'), [7, 10, 13]), relay.reshape(call_1476.astype('uint32'), [1, 2250]), ), 2)
call_1494 = relay.TupleGetItem(func_638_call(relay.reshape(const_1493.astype('float32'), [7, 10, 13]), relay.reshape(const_1493.astype('float32'), [7, 10, 13]), relay.reshape(call_1476.astype('uint32'), [1, 2250]), ), 2)
output = relay.Tuple([call_1476,uop_1480,bop_1488,call_1492,const_1493,])
output2 = relay.Tuple([call_1478,uop_1480,bop_1488,call_1494,const_1493,])
func_1503 = relay.Function([var_1477,], output)
mod['func_1503'] = func_1503
mod = relay.transform.InferType()(mod)
var_1504 = relay.var("var_1504", dtype = "uint32", shape = (2250,))#candidate|1504|(2250,)|var|uint32
output = func_1503(var_1504)
func_1505 = relay.Function([var_1504], output)
mutated_mod['func_1505'] = func_1505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_763_call = mod.get_global_var('func_763')
func_765_call = mutated_mod.get_global_var('func_765')
call_1510 = relay.TupleGetItem(func_763_call(), 2)
call_1511 = relay.TupleGetItem(func_765_call(), 2)
output = call_1510
output2 = call_1511
func_1537 = relay.Function([], output)
mod['func_1537'] = func_1537
mod = relay.transform.InferType()(mod)
output = func_1537()
func_1538 = relay.Function([], output)
mutated_mod['func_1538'] = func_1538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
call_1581 = func_971_call()
call_1582 = func_971_call()
output = call_1581
output2 = call_1582
func_1593 = relay.Function([], output)
mod['func_1593'] = func_1593
mod = relay.transform.InferType()(mod)
output = func_1593()
func_1594 = relay.Function([], output)
mutated_mod['func_1594'] = func_1594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
call_1601 = func_971_call()
call_1602 = func_971_call()
func_1466_call = mod.get_global_var('func_1466')
func_1468_call = mutated_mod.get_global_var('func_1468')
call_1605 = relay.TupleGetItem(func_1466_call(relay.reshape(call_1601.astype('float64'), [8, 128])), 0)
call_1606 = relay.TupleGetItem(func_1468_call(relay.reshape(call_1601.astype('float64'), [8, 128])), 0)
bop_1607 = relay.greater_equal(call_1605.astype('bool'), relay.reshape(call_1601.astype('bool'), relay.shape_of(call_1605))) # shape=(8, 128)
bop_1610 = relay.greater_equal(call_1606.astype('bool'), relay.reshape(call_1602.astype('bool'), relay.shape_of(call_1606))) # shape=(8, 128)
var_1615 = relay.var("var_1615", dtype = "bool", shape = (8, 128))#candidate|1615|(8, 128)|var|bool
bop_1616 = relay.bitwise_and(bop_1607.astype('uint64'), relay.reshape(var_1615.astype('uint64'), relay.shape_of(bop_1607))) # shape=(8, 128)
bop_1619 = relay.bitwise_and(bop_1610.astype('uint64'), relay.reshape(var_1615.astype('uint64'), relay.shape_of(bop_1610))) # shape=(8, 128)
uop_1625 = relay.cosh(var_1615.astype('float64')) # shape=(8, 128)
output = relay.Tuple([bop_1616,uop_1625,])
output2 = relay.Tuple([bop_1619,uop_1625,])
func_1635 = relay.Function([var_1615,], output)
mod['func_1635'] = func_1635
mod = relay.transform.InferType()(mod)
mutated_mod['func_1635'] = func_1635
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1636 = relay.var("var_1636", dtype = "bool", shape = (8, 128))#candidate|1636|(8, 128)|var|bool
func_1635_call = mutated_mod.get_global_var('func_1635')
call_1637 = func_1635_call(var_1636)
output = call_1637
func_1638 = relay.Function([var_1636], output)
mutated_mod['func_1638'] = func_1638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_653_call = mod.get_global_var('func_653')
func_654_call = mutated_mod.get_global_var('func_654')
call_1728 = relay.TupleGetItem(func_653_call(), 0)
call_1729 = relay.TupleGetItem(func_654_call(), 0)
func_1054_call = mod.get_global_var('func_1054')
func_1055_call = mutated_mod.get_global_var('func_1055')
call_1732 = func_1054_call()
call_1733 = func_1054_call()
func_448_call = mod.get_global_var('func_448')
func_452_call = mutated_mod.get_global_var('func_452')
var_1735 = relay.var("var_1735", dtype = "uint32", shape = (2250,))#candidate|1735|(2250,)|var|uint32
call_1734 = relay.TupleGetItem(func_448_call(relay.reshape(var_1735.astype('uint32'), [15, 10, 15]), relay.reshape(var_1735.astype('uint32'), [15, 10, 15]), ), 0)
call_1736 = relay.TupleGetItem(func_452_call(relay.reshape(var_1735.astype('uint32'), [15, 10, 15]), relay.reshape(var_1735.astype('uint32'), [15, 10, 15]), ), 0)
output = relay.Tuple([call_1728,call_1732,call_1734,var_1735,])
output2 = relay.Tuple([call_1729,call_1733,call_1736,var_1735,])
func_1739 = relay.Function([var_1735,], output)
mod['func_1739'] = func_1739
mod = relay.transform.InferType()(mod)
mutated_mod['func_1739'] = func_1739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1740 = relay.var("var_1740", dtype = "uint32", shape = (2250,))#candidate|1740|(2250,)|var|uint32
func_1739_call = mutated_mod.get_global_var('func_1739')
call_1741 = func_1739_call(var_1740)
output = call_1741
func_1742 = relay.Function([var_1740], output)
mutated_mod['func_1742'] = func_1742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1054_call = mod.get_global_var('func_1054')
func_1055_call = mutated_mod.get_global_var('func_1055')
call_1744 = func_1054_call()
call_1745 = func_1054_call()
func_1268_call = mod.get_global_var('func_1268')
func_1271_call = mutated_mod.get_global_var('func_1271')
call_1758 = relay.TupleGetItem(func_1268_call(relay.reshape(call_1744.astype('float64'), [2, 512])), 0)
call_1759 = relay.TupleGetItem(func_1271_call(relay.reshape(call_1744.astype('float64'), [2, 512])), 0)
uop_1763 = relay.tan(call_1744.astype('float64')) # shape=(4, 16, 16)
uop_1765 = relay.tan(call_1745.astype('float64')) # shape=(4, 16, 16)
bop_1773 = relay.mod(uop_1763.astype('float32'), relay.reshape(call_1758.astype('float32'), relay.shape_of(uop_1763))) # shape=(4, 16, 16)
bop_1776 = relay.mod(uop_1765.astype('float32'), relay.reshape(call_1759.astype('float32'), relay.shape_of(uop_1765))) # shape=(4, 16, 16)
func_842_call = mod.get_global_var('func_842')
func_848_call = mutated_mod.get_global_var('func_848')
var_1797 = relay.var("var_1797", dtype = "float32", shape = (440,))#candidate|1797|(440,)|var|float32
const_1798 = relay.const([3,8,7,-8,8,-7,-3,-10,8,-5,4,2,1,-2,7,-8,9,6,7,-10,-4,-4,9,-4,-5,-4,6,10,-9,6,-6,-4,-2,2,6,6,3,7,-5,1,-9,3,-4,-5,-5,-6,-5,7,-3,-9,-3,9,7,7,8,-4,-4,4,-9,-10,-8,-7,-7,2,-5,8,-6,-3,-4,6,10,-9,-6,4,-2,2,-1,2,-7,-7,-5,-2,6,5,8,2,-1,4,-5,-5,-3,6,-9,-1,1,9,-6,9,4,2,5,-2,8,-6,-6,-10,1,4,-2,-4,-4,-3,2,2,7,-10,9,-1,-9,10,9,6,-5,7,7,4,-4,4,8,4,4,-8,-9,2,5,5,3,1,4,-7,1,6,6,-3,-8,10,4,-6,4,-1,9,2,-9,-10,-2,6,8,-1,2,1,-3,-3,-6,10,-7,10,6,10,4,8,8,-1,6,3,8,-1,6,7,-2,-3,-5,7,-4,9,-8,7,-3,-2,-2,8,-10,8,2,9,2,7,4,1,2,7,-6,-3,3,-7,-2,-3,-3,-2,8,-1,3,10,-1,-7,-10,10,-1,5,10,-10,-9,9,-6,9,10,4,7,3,4,10,6,-2,-6,-2,-2,-1,5,-5,10,-7,-3,6,-7,-7,-10,-7,-10,5,7,-2,-2,-10,-2,-8,-8,-5,-7,10,-1,-5,7,-9,-10,-10,-4,5,-5,10,1,-4,-6,1,-1,5,1,2,1,-2,-6,7,-5,5,-1,-1,-7,-3,-3,4,7,-3,1,-4,-9,-3,-1,4,-7,9,-3,2,3,-3,-2,-8,6,5,1,10,-8,-4,5,8,-6,-2,7,-1,1,-7,-10,-2,-10,-6,8,10,10,8,1,-9,-3,10,-7,10,-6,1,-4,2,1,5,-3,7,9,9,1,9,-9,6,1,-3,5,-10,-6,4,-10,9,6,-7,1,-4,-3,8,3,7,-2,-8,-4,-5,-3,-10,-10,8,-4,10,2,2,9,1,-6,4,9,-2,-2,-7,-7,-10,7,4,7,-9,-10,-8,2,8,6,-5,-6,1,-5,-3,-5,-3,2,-6,-1,-10,7,-7,5,-7,9,-7,-1,1,7,10,6,6,1,7,-6,-1,2,10,-3,-10,10,-7,6,-7,-1,-6,-2,-7,4,-3,2,1,-1,-3,9,9,1,-10,-6,-3,-6,6,-3,1,10,8,-9,7,-10,-6,-6,-10,-3,-7,7,-7,-10,3,7,-1,-7,10,5,-5,2,6,10,-6,-6,3,-2,8,-3,-5,4,-1,2,6,3,-4,7,-2,8,2,-2,7,5,-5,-6,-3,4,-1,7,6,1,4,4,4,3,-7,-9,8,2,6,-4,8,3,8,9,10,6,7,-10,-3,5,8,4,1,1,-4,6,-5,-5,9,-7,-3,2,4,-1,5,-6,-1,10,8,9,8,-6,-4,-4,-5,1,7,-10,-3,9,-8,-2,-7,4,4,7,-9,-5,-6,-6,-1,10,10,8,-2,3,3,-2,-8,6,-10,-3,8,9,-8,-4,2,6,4,7,-2,10,6,6,6,5,4,4,8,3,-10,5,-9,-6,-9,-2,3,-6,2,10,-3,6,5,-7,-3,10,-7,5,-8,-2,-4,-9,4,6,7,-6,3,8,-1,-2,5,-8,-7,-10,-6,5,7,-6,9,-7,-8,-9,-2,-8,1,-7,-1,1,-10,6,-5,5,-3,3,3,-10,-10,1,-5,-4,10,-3,6,1,-6,3,8,-3,9,4,-5,-10,-5,-6,-9,-5,2,1,3,-6,-1,-10,5,9,-1,-5,-9,-9,5,5,4,4,-7,3,-7,8,-8,-6,-4,-8,-1,-9,-7,5,6,7,-9,7,5,7,-1,-9,-3,-3,-3,-2,-3,5,3,-3,1,8,-2,-7,5,7,8,6,-5,8,9,2,-5,3,8,-7,-9,-10,-10,-5,8,-4,2,-8,6,-4,-10,-8,-5,2,-10,-4,-4,7,1,2,6,8,3,-4,3,-5,-6,9,5,-5,-10,1,3,-1,-1,-4,6,-6,9,9,10,7,8,-5,7,7,1,3,-7,-8,5,9,5,4,7,-8,-9,1,8,10,10,-5,5,-4,-10,3,8,1,-7,-7,-8,1,9,7,-10,5,6,10,5,6,-8,-5,2,10,-10,-4,-4,-10,-7,-10,-5,8,4,7,-1,7,3,-8,9,-4,6,9,-1,3,-5,-6,8,4,-9,1,3,3,-1,10,-10,-9,2,-6,-7,2,2,4,9,3,-10,-2,-4,8,-8,5,5,-4,-2,-2,1,-2,-10,-6,6,-1,-4,9,7,-3,-10,-5,-2,1,-1,-6,-7,-9,7,-7,3,-1,-10,4,10,4,-6,4,-8,-4,10,-5,-8,-5,8,-10,-2,7,-1,-1,8,10,4,2,3,-5,7,1,2,10,9,-2,-1,3,10,3,-9,2,1,9,1,8,-4,3,6,-8,5,6,-7,-8,-2,6,5,7,1,9,-2,10,-7,-1,-6,8,9,9,-4,4,7,-9,8,-8,4,1,-6,1,1,8,3,3,1,-9,-7,3,2,6,-8,9,4,9,8,-5,3,10,-9,-9,3,7,10,-3,2,2,-6,3,8,1,-1,9,-10,-10,-10,-1,-7,-2,-10,9,8,3,10,-5,-7,8,-3,-2,4,3,-10,-6,5,-4,-4,-1,2,-6,10,-5,-8,-5,-10,5,8,9,-2,-9,-2,4,-5,10,-8,2,-10,7,3,-10,-10,6,-10,-9,9,-1,-8,1,-1,1,-7,-9,3,4,9,-9,-8,-6,2,-1,1,4,-9,5,5,-7,-10,-9,4,8,-7,2,-2,4,-6,-4,8,-8,-4,5,10,2,-10,-4,-4,10,9,-5,-2,6,-3,-7,-10,-8,-10,6,4,-10,10,-1,-6,4,-4,-6,-7,6,-5,-2,10,1,-10,-9,-6,-3,3,-9,-6,4,-1,8,-5,9,-9,-2,1,-8,2,-7,8,-5,5,-2,6,-1,-6,-8,-3,-8,-7,1,6,1,9,-8,-10,-10,4,4,-7,10,3,-4,-4,1,7,-9,3,2,-10,3,-1,2,4,-7,2,6,-5,6,-5,1,8,6,10,7,8,9,-10,7,1,-7,-3,-10,5,6,-2,-3,-6,4,-7,-7,9,-4,-1,7,5,4,-8,6,10,-5,-8,-3,-7,2,9,7,-7,9,2,-7,1,-4,-8,4,2,-10,-10,-7,-1,-1,8,8,-10,3,-4,-10,-4,6,7,-9,1,-1,2,10,-9,-4,10,4,1,-4,10,2,8,-5,9,-6,-3,1,-7,1,-1,-4,-8,-1,-8,4,6,-3,3,3,-3,-2,8,-4,-6,2,9,-8,-6,6,1,1,5,6,-3,-1,8,5,-9,-2,3,2,-3,8,7,-3,-3,10,10,9,-2,2,-4,-7,-7,7,4,1,-8,-7,3,7,-4,-6,-10,-6,5,-2,6,-1,-8,-10,-8,2,-1,2,6,-10,4,-3,-10,7,-8,4,10,-6,6,3,-8,-1,-1,-3,-4,-7,10,3,10,5,2,-3,-7,-3,8,8,-10,-5,1,9,-2,4,-8,-1,-10,8,6,-4,-4,-7,-2,8,-3,2,2,9,-10,7,-1,-8,-5,-3,-2,5,4,6,-6,-8,9,2,1,-7,-4,1,-1,8,-5,-6,-8,3,-2,9,-3,-4,5,6,-7,9,5,9,-8,1,-8,10,-7,-1,2,-6,5,9,-6,-7,6,-4,-7,9,10,9,-7,5,2,3,-5,10,9,-9,-4,5,6,3,2,9,1,9,8,2,-1,-3,5,4,5,-6,4,1,3,-5,5,9,3,6,4,-9,-4,-1,8,-1,-1,-1,2,-6,5,2,-5,-8,8,8,-1,-9,3,-3,7,3,-5,-4,-6,2,2,-3,-4,7,-6,-6,-4,-3,-6,10,-2,-1,9,6,8,9,1,-8,7,-8,10,10,-2,-5,-9,2,-7,-10,10,4,-3,9,8,-2,-3,-6,6,-1,10,7,-10,-3,-1,3,-1,7,-1,2,4,-2,4,-3,7,9,9,-7,2,-6,-2,-4,8,-9,-10,8,-2,-4,-2,9,1,5,3,-9,-1,-9,5,-6,-5,-4,5,-10,6,-3,8,-8,-9,9,4,-8,4,-7,-1,4,9,2,3,1,3,-8,8,-2,-8,1,-10,6,-6,-4,8,-4,9,-1,7,2,7,-3,-7,-4,-7,-6,3,2,8,8,-6,-5,10,9,-9,7,2,-3,-6,-3,-3,3,-2,-9,3,-6,-2,5,-8,-7,-7,5,6,-8,6,-9,-10,-6,7,5,-3,-2,4,6,4,-9,10,10,-3,-10,10,1,-10,-6,-4,-1,-4,1,2,9,3,-7,-5,8,-5,-8,-8,7,-8,8,-4,9,4,5,9,4,-6,-6,-7,-9,-5,-9,8,2,9,-7,1,-2,-8,-10,2,3,-4,9,5,6,-8,6,5,3,-10,-8,8,5,-8,5,9,-10,-6,6,8,3,9,2,-7,-9,-7,7,6,3,7,3,-5,8,-1,-5,8,-7,-7,-2,-5,-3,-5,-10,-2,-4,3,4,-2,3,9,-4,-8,-6,1,-1,-7,1,-5,-5,-5,8,8,-10,-6,-6,1,-4,1,3,-5,8,-1,6,-1,-4,1,8,4,10,1,7,-5,2,-10,-10,1,9,-9,7,5,6,-3,-7,-2,-9,2,6,10,5,-5,4,-5,10,-7,1,8,10,-4,10,-4,1,-8,7,-7,7,9,7,-4,7,-4,7,-8,7,4,7,10,-5,-5,6,7,3,5,-10,-9,-2,5,-6,6,4,3,-9,-1,9,7,7,9,9,-2,-2,-4,-3,-4,2,2,-2,-1,-8,-5,10,4,-5,-9,-4,-1,-9,1,-6,1,-6,7,-2,7,1,-8,-4,-8,5,3,-8,6,-1,-9,1,-6,7,-5,2,-8,3,-5,8,8,-3,-3,-3,-8,7,3,1,4,-3,-6,2,9,10,4,9,1,1,3,-4,-2,10,8,-3,7,3,2,-7,-3,-4,5,9,5,10,7,9,-3,-3,10,5,-3,-3,4,-5,-7,5,4,5,-5,-9,9,2,-9,-6,2,-6,-10,9,1,2,-2,-7,1,6,-9,10,3,3,-6,10,-10,2,-7,5,-4,-5,4,-3,-6,-2,-5,6,-2,-9,7,6,-8,-7,-9,5,1,-10,-2,1,3,4,6,6,-8,-8,-6,4,3,1,6,-5,-5,-4,-7,4,10,10,9,-6,2,-4,8,-4,-9,-5,2,4,7,4,-2,-6,8,8,1,-4,8,1,6,-9,10,-2,7,10,3,-8,4,-9,9,10,3,-4,4,9,1,-4,3,5,-1,4,9,-1,5,5,-9,-7,-1,-5,6,-4,1,8,-6,-6,8,-1,1,9,-3,-1,1,7,8,-6,6,-9,-8,3,-2,10,-8,-6,-4,6,-9,-4,-6,2,-2,8,8,7,6,9,8,5,-10,-6,6,-6,10,7,10,9,8,10,-5,-2,-6,9,10,-3,-7,-7,-2,9,-2,7,8,3,-3,1,-1,-1,4,2,-3,6,-3,-2,5,-6,-2,8,1,7,6,4,-3,-6,-4,-2,-3,-7,-1,-3,4,5,6,-5,7,-3,-10,-10,-3,-1,-5,3,9,-6,1,-9,3,-1,7,6,-8,7,-7,2,-3,8,-5,-10,3,5,7,10,-7,-7,-9,-6,-3,8,10,-9,-2,-5,-9,1,10,7,1,-7,2,-3,-8,-9,-4,10,-6,10,-7,-7,7,10,6,-5,7,-7,6,10,-1,-5,-8,10,6,-4,-3,9,8,9,9,3,8,6,10,-9,7,-7,-1,-8,4,-7,-2,-1,8,-4,-6,2,5,-7,4,-7,10,-5,-8,5,5,-3,10,7,3,-4,6,-10,-4,7,3,-8,-7,-1,5,9,1,9,5,1,5,7,-3,-6,4,-2,9,-9,4,3,9,1,5,1,-4,-8,-8,-4,-3], dtype = "uint32")#candidate|1798|(2250,)|const|uint32
call_1796 = relay.TupleGetItem(func_842_call(relay.reshape(var_1797.astype('float32'), [4, 10, 11]), relay.reshape(var_1797.astype('float32'), [4, 10, 11]), relay.reshape(const_1798.astype('uint32'), [2250,]), relay.reshape(bop_1773.astype('float64'), [1024,]), ), 1)
call_1799 = relay.TupleGetItem(func_848_call(relay.reshape(var_1797.astype('float32'), [4, 10, 11]), relay.reshape(var_1797.astype('float32'), [4, 10, 11]), relay.reshape(const_1798.astype('uint32'), [2250,]), relay.reshape(bop_1773.astype('float64'), [1024,]), ), 1)
func_1635_call = mod.get_global_var('func_1635')
func_1638_call = mutated_mod.get_global_var('func_1638')
call_1807 = relay.TupleGetItem(func_1635_call(relay.reshape(call_1744.astype('bool'), [8, 128])), 1)
call_1808 = relay.TupleGetItem(func_1638_call(relay.reshape(call_1744.astype('bool'), [8, 128])), 1)
output = relay.Tuple([bop_1773,call_1796,var_1797,const_1798,call_1807,])
output2 = relay.Tuple([bop_1776,call_1799,var_1797,const_1798,call_1808,])
func_1813 = relay.Function([var_1797,], output)
mod['func_1813'] = func_1813
mod = relay.transform.InferType()(mod)
var_1814 = relay.var("var_1814", dtype = "float32", shape = (440,))#candidate|1814|(440,)|var|float32
output = func_1813(var_1814)
func_1815 = relay.Function([var_1814], output)
mutated_mod['func_1815'] = func_1815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_889_call = mod.get_global_var('func_889')
func_891_call = mutated_mod.get_global_var('func_891')
call_1835 = relay.TupleGetItem(func_889_call(), 1)
call_1836 = relay.TupleGetItem(func_891_call(), 1)
func_1438_call = mod.get_global_var('func_1438')
func_1442_call = mutated_mod.get_global_var('func_1442')
var_1840 = relay.var("var_1840", dtype = "int32", shape = (208,))#candidate|1840|(208,)|var|int32
call_1839 = relay.TupleGetItem(func_1438_call(relay.reshape(var_1840.astype('int32'), [13, 2, 8]), relay.reshape(var_1840.astype('int32'), [13, 2, 8]), relay.reshape(call_1835.astype('float64'), [2250,]), ), 2)
call_1841 = relay.TupleGetItem(func_1442_call(relay.reshape(var_1840.astype('int32'), [13, 2, 8]), relay.reshape(var_1840.astype('int32'), [13, 2, 8]), relay.reshape(call_1835.astype('float64'), [2250,]), ), 2)
output = relay.Tuple([call_1835,call_1839,var_1840,])
output2 = relay.Tuple([call_1836,call_1841,var_1840,])
func_1843 = relay.Function([var_1840,], output)
mod['func_1843'] = func_1843
mod = relay.transform.InferType()(mod)
mutated_mod['func_1843'] = func_1843
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1844 = relay.var("var_1844", dtype = "int32", shape = (208,))#candidate|1844|(208,)|var|int32
func_1843_call = mutated_mod.get_global_var('func_1843')
call_1845 = func_1843_call(var_1844)
output = call_1845
func_1846 = relay.Function([var_1844], output)
mutated_mod['func_1846'] = func_1846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_653_call = mod.get_global_var('func_653')
func_654_call = mutated_mod.get_global_var('func_654')
call_1899 = relay.TupleGetItem(func_653_call(), 0)
call_1900 = relay.TupleGetItem(func_654_call(), 0)
output = relay.Tuple([call_1899,])
output2 = relay.Tuple([call_1900,])
func_1911 = relay.Function([], output)
mod['func_1911'] = func_1911
mod = relay.transform.InferType()(mod)
output = func_1911()
func_1912 = relay.Function([], output)
mutated_mod['func_1912'] = func_1912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_1952 = relay.TupleGetItem(func_1911_call(), 0)
call_1953 = relay.TupleGetItem(func_1912_call(), 0)
output = call_1952
output2 = call_1953
func_1964 = relay.Function([], output)
mod['func_1964'] = func_1964
mod = relay.transform.InferType()(mod)
mutated_mod['func_1964'] = func_1964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1964_call = mutated_mod.get_global_var('func_1964')
call_1965 = func_1964_call()
output = call_1965
func_1966 = relay.Function([], output)
mutated_mod['func_1966'] = func_1966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1301_call = mod.get_global_var('func_1301')
func_1302_call = mutated_mod.get_global_var('func_1302')
call_1987 = func_1301_call()
call_1988 = func_1301_call()
output = relay.Tuple([call_1987,])
output2 = relay.Tuple([call_1988,])
func_1995 = relay.Function([], output)
mod['func_1995'] = func_1995
mod = relay.transform.InferType()(mod)
output = func_1995()
func_1996 = relay.Function([], output)
mutated_mod['func_1996'] = func_1996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_653_call = mod.get_global_var('func_653')
func_654_call = mutated_mod.get_global_var('func_654')
call_2022 = relay.TupleGetItem(func_653_call(), 1)
call_2023 = relay.TupleGetItem(func_654_call(), 1)
output = call_2022
output2 = call_2023
func_2028 = relay.Function([], output)
mod['func_2028'] = func_2028
mod = relay.transform.InferType()(mod)
mutated_mod['func_2028'] = func_2028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2028_call = mutated_mod.get_global_var('func_2028')
call_2029 = func_2028_call()
output = call_2029
func_2030 = relay.Function([], output)
mutated_mod['func_2030'] = func_2030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1054_call = mod.get_global_var('func_1054')
func_1055_call = mutated_mod.get_global_var('func_1055')
call_2035 = func_1054_call()
call_2036 = func_1054_call()
func_763_call = mod.get_global_var('func_763')
func_765_call = mutated_mod.get_global_var('func_765')
call_2070 = relay.TupleGetItem(func_763_call(), 2)
call_2071 = relay.TupleGetItem(func_765_call(), 2)
uop_2076 = relay.atanh(call_2070.astype('float32')) # shape=(8, 128)
uop_2078 = relay.atanh(call_2071.astype('float32')) # shape=(8, 128)
func_275_call = mod.get_global_var('func_275')
func_278_call = mutated_mod.get_global_var('func_278')
call_2084 = func_275_call(relay.reshape(call_2070.astype('float64'), [4, 16, 16]))
call_2085 = func_275_call(relay.reshape(call_2070.astype('float64'), [4, 16, 16]))
output = relay.Tuple([call_2035,uop_2076,call_2084,])
output2 = relay.Tuple([call_2036,uop_2078,call_2085,])
func_2090 = relay.Function([], output)
mod['func_2090'] = func_2090
mod = relay.transform.InferType()(mod)
output = func_2090()
func_2091 = relay.Function([], output)
mutated_mod['func_2091'] = func_2091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1964_call = mod.get_global_var('func_1964')
func_1966_call = mutated_mod.get_global_var('func_1966')
call_2099 = func_1964_call()
call_2100 = func_1964_call()
func_763_call = mod.get_global_var('func_763')
func_765_call = mutated_mod.get_global_var('func_765')
call_2121 = relay.TupleGetItem(func_763_call(), 1)
call_2122 = relay.TupleGetItem(func_765_call(), 1)
func_842_call = mod.get_global_var('func_842')
func_848_call = mutated_mod.get_global_var('func_848')
var_2130 = relay.var("var_2130", dtype = "float32", shape = (440,))#candidate|2130|(440,)|var|float32
const_2131 = relay.const([[6,-2,-10,2,1,2,-3,-1,4,-5,-2,-8,3,4,-4,4,8,-8,-3,8,6,-5,-10,7,-4,-10,-5,7,-8,8,5,6,10,-4,4,8,-4,7,9,8,8,8,-6,-1,-9,-10,1,-2,10,3,-9,-4,-3,-7,-6,-6,2,-10,-10,-7,-10,-5,-3,-1,4,8,4,-4,-4,-9,-5,9,-10,8,-1,-1,9,1,5,-6,-5,-10,-6,-8,-7,-3,4,10,10,-4,-2,-2,-2,-5,-7,6,7,3,-2,6,-7,-4,10,5,-3,-10,5,-7,7,4,5,7,7,7,-10,1,-3,-10,-8,-2,-5,7,4,-7,-4,-4,2,-10,1,10,-2,1,-5,-8,-6,-5,3,-3,6,8,2,10,5,-4,-9,10,-5,-7,-1,-5,-5,10,-4,5,-2,1,-6,9,-3,10,7,-5,10,-5,5,2,2,-8,-6,6,7,-3,8,-6,6,5,7,-8,-10,-2,2,-6,5,-1,-8,-10,-4,-10,6,5,6,-7,-10,2,7,6,7,4,-8,4,1,3,-8,10,-10,5,-7,-1,-7,-4,8,-4,3,-8,2,-1,7,-10,8,8,-9,6,-3,-10,9,-5,-5,1,-6,3,2,-4,-7,-3,-8,-2,1,-10,4,-7,3,7,10,8,-8,7,-4,-8,-7,3,-9,-10,-5,-9,2,10,-7,-5,-7,-4,-5,-5,-3,-9,4,-6,9,7,10,-10,1,6,-9,6,6,-2,-2,10,-10,8,3,8,1,5,-9,-2,7,8,-2,5,-4,-9,-4,2,1,7,-5,5,10,7,-5,10,8,-1,10,-8,-10,1,-9,-7,4,-2,1,-4,7,8,10,-5,6,1,-9,2,-6,-5,-7,-5,6,-1,7,8,7,-6,-4,7,7,5,7,-7,-10,9,-3,-10,4,-8,9,4,1,-4,1,4,1,3,-9,-2,3,8,-8,6,4,-4,9,-8,8,-5,3,-6,-3,2,-1,2,-8,9,1,-1,-1,-7,-2,3,4,10,9,4,9,3,2,4,-6,-7,10,3,2,-4,-2,6,-2,5,-2,-3,-7,-1,-2,9,9,4,-4,3,-4,10,-1,-5,-3,-8,1,8,-10,5,5,7,-9,-5,7,-9,-4,-10,-7,2,7,-7,-1,-6,-5,2,-6,5,-1,8,-8,-2,8,-1,-9,5,1,6,-8,-3,-5,2,-4,-7,-5,5,-4,10,-1,6,-2,-5,2,6,-4,-2,6,10,-9,6,-4,9,-10,-9,-10,10,-6,8,8,10,5,-3,-6,-10,10,8,7,-1,8,7,-6,3,-1,2,5,1,3,-2,7,-3,7,10,-3,-10,-2,1,3,-10,5,4,-3,1,-1,7,4,-6,5,7,-8,9,6,-9,-5,3,-10,-1,4,-3,8,4,3,-5,5,-4,-10,4,-6,5,2,3,-5,-7,10,-5,-9,10,-8,-10,-6,-5,-9,2,-1,-9,5,5,8,-8,-1,5,-3,-3,10,1,8,-4,-6,-4,-3,2,-5,-5,-10,-9,7,10,-1,-10,-6,6,-10,1,-7,5,-8,-8,-5,-5,-8,-5,-10,-7,-9,1,10,7,10,-6,-5,-6,9,7,7,-10,-6,-3,9,7,-7,-3,-6,4,10,-4,10,-7,4,-4,6,9,6,-8,2,-5,4,5,-8,-5,-1,-3,-8,10,8,6,-6,6,7,-9,9,-7,3,2,-2,-2,-7,4,7,9,9,-9,-2,-9,1,7,3,5,-9,9,-8,-6,6,-10,5,-10,7,-1,6,-8,-9,9,1,10,-2,3,8,3,-9,-8,-4,-9,8,8,10,-9,10,-3,-1,-3,1,-1,7,-4,-8,-1,9,-1,-1,-8,-4,-2,-6,-9,7,10,-10,-7,-6,5,3,6,7,-10,-8,-3,-7,1,9,10,4,2,-2,2,1,-4,3,-8,-1,1,7,4,-9,7,6,4,7,3,6,-9,-3,3,5,6,-10,-5,-3,2,5,9,-7,1,-8,5,-10,-3],[5,8,-7,-6,-3,5,10,-9,-7,8,3,9,-2,7,7,6,6,-4,8,4,-10,7,-4,-7,-7,4,2,1,-8,-9,-10,6,9,-3,-9,8,3,9,4,-10,-1,-2,10,1,4,2,5,2,-10,-8,-9,10,4,1,7,8,10,3,5,-7,-3,3,-8,9,9,7,-4,1,-6,5,-8,3,4,5,9,-6,-10,8,5,6,-5,-1,-1,6,-9,-3,5,-2,-2,-8,-10,1,5,-9,-7,4,1,-10,10,-4,-6,-5,-4,9,5,-7,2,-8,-7,7,6,-3,-7,-1,-8,7,3,2,10,-5,9,-1,-10,-7,-7,-1,6,-2,-9,-1,10,-1,-9,-2,6,-5,9,-3,-6,-6,-5,-8,10,-3,2,6,-1,7,-9,10,-8,10,10,6,4,-10,8,-9,7,9,-5,3,3,-7,-1,-10,1,-6,-3,-6,6,-7,6,-7,9,2,5,1,5,10,6,-5,-2,-5,-5,2,-9,-10,-7,7,4,-2,-7,5,-3,-8,-9,-6,-3,-3,-4,-4,8,-9,8,10,7,1,7,6,2,-10,6,-9,-7,-9,-1,-5,6,1,1,-8,-7,2,4,5,1,-7,9,8,-10,6,-2,8,4,2,5,6,6,6,-6,-5,6,6,8,1,2,9,8,-2,9,10,3,-5,-3,-8,-4,8,7,-5,-9,-4,4,7,-3,4,2,-7,9,-3,-5,-1,-7,8,4,-8,-2,8,-8,-7,5,-2,-7,-1,10,-9,8,-5,1,-9,-1,-2,9,-8,-4,-7,-10,7,7,6,-3,-6,8,-7,7,6,3,10,7,-1,4,-1,7,4,5,5,8,2,-3,5,-3,9,-8,-9,6,7,8,-8,5,10,3,-1,-5,7,9,9,2,9,-4,6,-8,3,2,-10,-3,-10,-6,-9,1,10,-5,-2,-4,8,1,1,8,5,5,-10,6,7,8,-4,10,-9,-2,4,3,-7,8,4,-1,-8,2,7,6,3,-9,-3,10,8,4,-9,5,-3,-3,-1,-4,3,4,8,-5,6,-8,5,-2,4,-4,-6,9,4,-6,8,-1,-8,2,-7,-6,1,3,-6,8,2,4,-4,7,7,-10,-3,-6,8,-6,-5,9,10,1,-8,5,4,7,-4,-6,8,-6,9,-10,9,3,10,-9,5,-6,2,2,-3,-6,5,-6,7,4,5,4,-1,10,-10,-2,3,-7,-1,3,-10,-9,-10,-8,8,-3,-5,8,4,7,-9,9,9,6,-3,-2,-7,-7,-7,-4,-6,-7,-5,-7,3,3,5,3,-5,1,-8,-4,5,4,6,-6,-6,-1,10,-2,-4,-6,-6,-2,-7,-3,-6,-2,8,-3,-3,-5,6,3,-6,2,9,-8,4,-8,-2,6,7,9,1,10,-4,6,-10,5,-2,-5,-4,8,2,-9,-8,-2,-2,-10,4,-10,4,-8,4,10,2,-9,-8,-4,-2,5,-9,-4,-10,5,-6,-4,-10,-3,-8,10,-8,-6,-3,-9,5,-4,-2,7,-5,-8,7,9,6,2,7,-4,9,5,10,9,-7,4,-3,3,-5,-9,5,-2,2,-3,-5,7,-6,-8,-6,4,1,-5,8,2,-1,8,9,-6,-3,1,7,2,10,-10,8,-10,-3,-3,2,-6,6,-10,-5,7,5,-6,8,6,9,-2,3,5,-6,-8,-4,3,10,7,8,-3,-4,7,-10,-7,10,-5,-1,8,-9,-8,-3,-4,-4,8,7,-7,4,-2,-9,-3,-10,2,1,3,-6,-6,1,2,3,9,5,2,2,-4,-6,-9,-7,10,-1,-9,-5,8,7,3,-1,-1,-8,6,10,8,8,2,10,-5,-6,-10,1,7,7,7,2,-6,10,8,-1,6,6,5,2,7,-6,3,6,-5,-1,2,-8,-4,10,10,10,1,4,4,-7,7,9,-3,9,-7,-8,-4,9,7,-9,3,1,-7,-1,4,-3,3,1,6,-4,2,4,-8,-1,-4,-10],[-2,-10,-9,-10,-1,5,3,-2,8,4,5,6,-2,-8,9,-3,10,-10,4,-3,-2,-9,-4,6,6,-4,9,-6,-10,7,-2,-2,2,3,-1,1,5,-10,2,3,-7,10,-10,7,9,-9,4,5,-3,-4,-5,10,6,10,-8,-7,-1,-1,3,1,3,3,3,-5,-6,-5,-7,-10,-6,2,-5,-9,6,-9,9,1,2,-9,-1,3,7,-8,-2,-7,1,2,-10,4,4,-5,1,-5,1,8,-10,9,7,-10,-8,-7,8,-6,-4,-4,-2,-1,6,-8,10,9,8,-7,-7,-6,-6,5,6,-2,-2,9,7,10,8,10,-5,7,-9,10,1,-1,9,-1,-9,-5,9,-6,-6,2,8,1,3,7,-10,7,3,8,-4,-6,2,-4,7,-9,-8,-6,-7,10,-5,-3,5,6,-6,9,3,-10,7,8,-6,7,-2,-10,10,-8,-8,9,8,9,-2,-5,4,-2,1,-2,-8,9,-2,6,9,-4,-4,-10,10,10,8,9,-1,10,2,7,3,-10,6,-6,2,2,4,-2,-1,-6,-8,-8,5,-10,-4,-7,-4,-3,-4,5,-10,4,1,10,-6,1,-1,-2,-9,-5,9,1,8,-4,-2,8,6,-7,8,8,-4,-10,10,-5,-4,3,2,-7,-5,-5,-7,-10,-7,-1,6,8,10,9,10,10,-4,-9,4,-9,4,7,-10,-8,8,1,3,-8,-7,-5,-10,-5,8,3,8,1,7,-7,7,-2,-9,8,2,4,-10,-10,-6,7,7,-3,1,8,2,-4,3,3,-9,-3,-5,-4,-8,7,9,7,3,2,-6,1,8,-8,-1,4,-9,3,-3,-1,1,-6,-4,-8,-5,-3,1,-8,7,-3,-6,-8,-3,1,10,-9,-1,-3,10,-6,-2,-5,-10,3,8,8,2,-8,-9,-10,-10,1,-8,10,8,2,-4,-4,-9,-4,4,10,7,10,5,-6,1,-10,-4,6,6,-3,-6,-7,-5,-1,-10,-4,8,-5,-5,10,8,4,10,-5,9,-7,4,-9,4,9,-10,-2,-8,1,-8,9,1,-10,-5,-9,3,-1,-9,-8,-8,-8,-2,7,7,-3,-9,3,-10,-4,7,1,-9,-9,-3,-1,7,-1,10,-9,6,-4,-8,8,9,3,3,-8,-8,-1,5,4,-3,-1,5,-2,5,7,-10,-3,4,4,2,2,-8,-1,-4,7,1,2,1,8,-7,-1,-9,5,10,3,-1,2,-7,-4,-1,10,-10,-10,6,9,3,2,6,-5,9,10,2,-9,6,-10,6,-1,-4,-1,8,-4,2,3,5,6,-8,2,-8,-1,-6,-3,2,-1,6,-7,-2,7,10,3,10,7,-8,7,4,2,8,-2,-1,9,7,-6,-8,4,-5,-3,-8,2,-1,-2,7,-3,-1,-7,2,-4,1,-7,-2,-9,9,9,-2,3,-2,-6,-3,5,-8,8,10,8,-1,2,-5,10,3,-1,-2,6,-1,2,3,-10,2,10,2,-3,2,-8,-6,-9,2,4,6,10,4,3,-9,-8,-1,-3,6,-5,1,5,4,8,6,9,-4,1,-3,5,5,3,6,8,1,-10,9,-10,1,-8,-10,1,8,-1,-6,2,-2,7,2,9,1,6,9,10,3,-9,6,8,1,4,-6,9,3,5,3,9,-7,3,-10,-6,-2,-8,4,-4,-5,-2,-5,10,-9,3,3,8,-6,6,6,9,-6,10,-4,2,-3,2,-5,7,-9,8,2,-2,8,2,-7,-4,1,2,8,-5,-8,8,1,-7,-6,10,10,-4,-9,2,9,-10,2,6,-4,1,-1,-7,-6,1,-1,10,7,10,2,2,10,4,2,1,2,-9,-5,-5,3,3,-1,5,-6,-1,-9,-10,7,-10,-3,-6,-7,9,-3,10,-2,-10,-5,10,10,-2,6,-5,-7,1,-9,8,-4,-5,3,3,-10,10,-7,-1,-4,3,6,-5,6,4,3,-1,-8,5,4,9,-2,1]], dtype = "uint32")#candidate|2131|(3, 750)|const|uint32
call_2129 = relay.TupleGetItem(func_842_call(relay.reshape(var_2130.astype('float32'), [4, 10, 11]), relay.reshape(var_2130.astype('float32'), [4, 10, 11]), relay.reshape(const_2131.astype('uint32'), [2250,]), relay.reshape(call_2121.astype('float64'), [1024,]), ), 2)
call_2132 = relay.TupleGetItem(func_848_call(relay.reshape(var_2130.astype('float32'), [4, 10, 11]), relay.reshape(var_2130.astype('float32'), [4, 10, 11]), relay.reshape(const_2131.astype('uint32'), [2250,]), relay.reshape(call_2121.astype('float64'), [1024,]), ), 2)
bop_2133 = relay.greater(const_2131.astype('bool'), relay.reshape(call_2129.astype('bool'), relay.shape_of(const_2131))) # shape=(3, 750)
bop_2136 = relay.greater(const_2131.astype('bool'), relay.reshape(call_2132.astype('bool'), relay.shape_of(const_2131))) # shape=(3, 750)
var_2138 = relay.var("var_2138", dtype = "float64", shape = (2, 15, 11))#candidate|2138|(2, 15, 11)|var|float64
bop_2139 = relay.maximum(call_2099.astype('float64'), relay.reshape(var_2138.astype('float64'), relay.shape_of(call_2099))) # shape=(2, 15, 11)
bop_2142 = relay.maximum(call_2100.astype('float64'), relay.reshape(var_2138.astype('float64'), relay.shape_of(call_2100))) # shape=(2, 15, 11)
var_2160 = relay.var("var_2160", dtype = "uint32", shape = (3, 750))#candidate|2160|(3, 750)|var|uint32
bop_2161 = relay.power(const_2131.astype('float64'), relay.reshape(var_2160.astype('float64'), relay.shape_of(const_2131))) # shape=(3, 750)
output = relay.Tuple([call_2121,var_2130,bop_2133,bop_2139,bop_2161,])
output2 = relay.Tuple([call_2122,var_2130,bop_2136,bop_2142,bop_2161,])
func_2164 = relay.Function([var_2130,var_2138,var_2160,], output)
mod['func_2164'] = func_2164
mod = relay.transform.InferType()(mod)
mutated_mod['func_2164'] = func_2164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2164_call = mutated_mod.get_global_var('func_2164')
var_2166 = relay.var("var_2166", dtype = "float32", shape = (440,))#candidate|2166|(440,)|var|float32
var_2167 = relay.var("var_2167", dtype = "float64", shape = (2, 15, 11))#candidate|2167|(2, 15, 11)|var|float64
var_2168 = relay.var("var_2168", dtype = "uint32", shape = (3, 750))#candidate|2168|(3, 750)|var|uint32
call_2165 = func_2164_call(var_2166,var_2167,var_2168,)
output = call_2165
func_2169 = relay.Function([var_2166,var_2167,var_2168,], output)
mutated_mod['func_2169'] = func_2169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_2181 = relay.TupleGetItem(func_1911_call(), 0)
call_2182 = relay.TupleGetItem(func_1912_call(), 0)
output = call_2181
output2 = call_2182
func_2184 = relay.Function([], output)
mod['func_2184'] = func_2184
mod = relay.transform.InferType()(mod)
output = func_2184()
func_2185 = relay.Function([], output)
mutated_mod['func_2185'] = func_2185
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2189 = relay.var("var_2189", dtype = "float64", shape = ())#candidate|2189|()|var|float64
const_2190 = relay.const([[[-4.268859],[1.095865],[-0.006222],[-9.016031],[2.263696],[7.780358],[-8.883296],[7.722737]],[[-1.909080],[3.768819],[3.219831],[-7.670121],[5.253012],[3.778002],[-0.512178],[2.016709]],[[-2.745406],[-3.021102],[9.338505],[-1.807876],[4.047018],[-2.679902],[-4.211867],[-9.500523]],[[-8.316808],[4.027839],[2.070318],[6.206880],[3.386426],[2.883765],[1.968865],[-1.486860]],[[6.444454],[7.669156],[1.340712],[-6.727662],[2.862551],[-4.418832],[-8.808597],[-2.181469]],[[-7.602797],[-5.926709],[6.306387],[-2.185821],[-1.636901],[7.654138],[-2.808726],[9.803387]],[[-5.870146],[-6.976228],[-8.878247],[0.467772],[1.345645],[2.987160],[-5.927679],[6.829244]],[[-8.595856],[-6.329558],[5.427955],[-3.119199],[-8.330783],[0.605176],[1.895560],[-1.490635]],[[1.701124],[0.833537],[8.346212],[6.064770],[-9.814669],[-1.835777],[-2.921649],[8.907676]],[[8.247772],[8.629206],[-6.539474],[-2.228540],[1.771338],[2.726828],[5.297926],[-9.949192]],[[9.472435],[-4.623987],[-8.565616],[5.828154],[8.863259],[1.555120],[4.172420],[-5.432793]]], dtype = "float64")#candidate|2190|(11, 8, 1)|const|float64
bop_2191 = relay.mod(var_2189.astype('float64'), const_2190.astype('float64')) # shape=(11, 8, 1)
func_723_call = mod.get_global_var('func_723')
func_724_call = mutated_mod.get_global_var('func_724')
call_2196 = func_723_call()
call_2197 = func_723_call()
func_1635_call = mod.get_global_var('func_1635')
func_1638_call = mutated_mod.get_global_var('func_1638')
const_2204 = relay.const([False,True,True,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,False,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,False,True,False,True,True,True,True,True,True,True,False,False,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,False,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,False,False,True,True,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,False,False,True,True,True,False,False,False,False,True,False,False,True,True,True,True,False,False,True,False,False,False,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,True,True,False,True,False,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,True,True,False,True,False,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,True,False,False,True,True,True,False,False,True,True,False], dtype = "bool")#candidate|2204|(1024,)|const|bool
call_2203 = relay.TupleGetItem(func_1635_call(relay.reshape(const_2204.astype('bool'), [8, 128])), 0)
call_2205 = relay.TupleGetItem(func_1638_call(relay.reshape(const_2204.astype('bool'), [8, 128])), 0)
func_653_call = mod.get_global_var('func_653')
func_654_call = mutated_mod.get_global_var('func_654')
call_2208 = relay.TupleGetItem(func_653_call(), 0)
call_2209 = relay.TupleGetItem(func_654_call(), 0)
output = relay.Tuple([bop_2191,call_2196,call_2203,const_2204,call_2208,])
output2 = relay.Tuple([bop_2191,call_2197,call_2205,const_2204,call_2209,])
func_2222 = relay.Function([var_2189,], output)
mod['func_2222'] = func_2222
mod = relay.transform.InferType()(mod)
mutated_mod['func_2222'] = func_2222
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2223 = relay.var("var_2223", dtype = "float64", shape = ())#candidate|2223|()|var|float64
func_2222_call = mutated_mod.get_global_var('func_2222')
call_2224 = func_2222_call(var_2223)
output = call_2224
func_2225 = relay.Function([var_2223], output)
mutated_mod['func_2225'] = func_2225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_763_call = mod.get_global_var('func_763')
func_765_call = mutated_mod.get_global_var('func_765')
call_2278 = relay.TupleGetItem(func_763_call(), 2)
call_2279 = relay.TupleGetItem(func_765_call(), 2)
output = call_2278
output2 = call_2279
func_2283 = relay.Function([], output)
mod['func_2283'] = func_2283
mod = relay.transform.InferType()(mod)
mutated_mod['func_2283'] = func_2283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2283_call = mutated_mod.get_global_var('func_2283')
call_2284 = func_2283_call()
output = call_2284
func_2285 = relay.Function([], output)
mutated_mod['func_2285'] = func_2285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1995_call = mod.get_global_var('func_1995')
func_1996_call = mutated_mod.get_global_var('func_1996')
call_2321 = relay.TupleGetItem(func_1995_call(), 0)
call_2322 = relay.TupleGetItem(func_1996_call(), 0)
output = call_2321
output2 = call_2322
func_2328 = relay.Function([], output)
mod['func_2328'] = func_2328
mod = relay.transform.InferType()(mod)
output = func_2328()
func_2329 = relay.Function([], output)
mutated_mod['func_2329'] = func_2329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_723_call = mod.get_global_var('func_723')
func_724_call = mutated_mod.get_global_var('func_724')
call_2330 = func_723_call()
call_2331 = func_723_call()
func_275_call = mod.get_global_var('func_275')
func_278_call = mutated_mod.get_global_var('func_278')
const_2337 = relay.const([7.894062,-8.773606,-0.861177,8.193651,-6.521022,9.038164,-5.887691,7.695001,-4.201510,5.713654,5.050656,5.734261,-7.894917,-5.328185,1.511410,7.981507,-8.837022,4.272295,8.474971,-3.279926,-8.048242,-8.871241,4.083665,3.767812,7.724944,-5.625518,-2.551665,-8.634118,-0.752957,4.656384,-6.396478,-0.770210,-2.798038,-0.366811,-6.094272,8.075830,-5.164905,-1.436830,3.552984,-1.022917,-7.567433,5.477246,-4.202151,0.695097,-4.829168,-5.864830,5.791284,0.930856,-4.345087,0.902554,-4.165406,8.472996,8.560041,4.439731,0.598001,9.688777,-1.711747,8.662134,0.218310,3.396228,1.310589,-1.430187,4.668402,-5.964614,1.271882,-7.502057,-4.129636,2.965964,1.276213,7.125395,-9.395080,1.516710,7.326882,6.951364,0.025211,7.157749,4.989802,-8.197331,8.468817,-3.796508,-7.408600,5.692520,9.959630,-9.004729,8.876927,1.446791,9.656745,-1.729737,7.217658,4.192985,-2.110834,1.407436,-9.955091,-0.849087,-4.730496,0.280900,-6.406092,-0.629549,5.632963,-8.822739,-1.253496,-8.393837,-2.178546,-4.448643,-6.080091,7.633513,-7.247925,-1.896888,-5.948609,8.068538,-7.227749,0.628206,7.335718,-2.793719,7.301141,2.433295,-3.802547,4.176748,-0.354124,1.183125,3.621472,4.941789,4.859186,-0.007494,2.651215,4.437805,-4.150521,-4.019636,-0.419829,-8.111613,0.321322,8.709123,1.659042,1.323515,-0.711954,2.282511,2.454716,-3.141318,-2.327625,-8.071562,-4.872789,2.197862,-4.397752,-9.144707,-9.543332,-3.896310,-9.174668,-6.239117,-2.594965,6.700860,-8.529919,-8.207958,5.001174,-7.885465,-5.128655,0.799924,-6.846868,1.161914,-8.041574,6.560421,7.280280,5.487215,3.452012,1.877610,9.098743,2.482509,2.742916,9.541458,-4.715234,1.986900,-4.735320,5.354668,5.749956,4.309821,-1.561905,1.065936,6.270182,1.888671,-4.207369,-1.249526,1.517176,3.858524,-2.477771,8.416230,-1.976844,4.464642,-1.651665,-8.632525,8.268291,4.951122,-6.842808,5.662503,7.405135,0.389861,-2.591493,9.437487,6.149501,-6.270842,3.235520,-2.240996,-1.098048,-4.391988,-8.391807,6.235506,7.239664,6.911105,8.919348,0.918721,3.639209,-6.762324,-1.912846,2.891895,-6.350994,4.181118,9.910671,4.111879,8.930369,-3.896048,-4.604777,-9.439763,1.387321,-3.545665,-5.727090,4.110568,-0.915799,0.459195,-5.113182,-3.164562,4.731261,-7.059730,3.444757,-2.018394,-6.182922,-1.383319,-4.432231,-8.799526,-3.995951,-4.805667,-3.572243,-7.471466,6.186458,5.131783,-5.276613,-9.712059,-6.551553,-1.628019,1.118473,-2.039835,-1.211537,-9.836803,0.602990,-7.584620,4.067443,1.598812,-2.121892,-3.436740,0.605416,7.167291,0.360772,4.985695,8.405349,7.017957,6.528749,-4.254722,-4.506300,-1.378769,3.421432,3.129182,-3.063725,-0.078155,-5.252370,-3.342339,-3.850146,2.507119,-4.054687,4.961514,6.792038,-3.245244,8.344076,-8.853029,8.078772,4.151728,2.263858,-7.561277,3.272030,-8.466525,7.806972,-6.986968,6.541894,-5.755862,-4.684236,2.348613,-5.928665,-4.917984,-1.780443,-1.505350,-4.676012,-6.103110,-6.200987,4.757811,2.778047,-7.229392,-7.339184,-1.105330,-1.309617,8.575432,7.008218,-2.602487,-1.981804,4.054313,3.493768,9.646757,0.170105,9.833762,-5.250145,-1.568651,9.621825,-6.677544,3.634646,6.066950,1.489399,-8.165200,9.107976,2.010544,-4.705294,-1.595146,-3.994575,5.125936,4.948700,6.524016,4.338887,8.518028,-1.432057,-1.869016,-8.394864,-1.043506,1.606469,-6.966666,2.523792,-3.912715,-1.691801,-3.457613,-6.004953,8.674850,-9.623174,9.123271,-0.960694,-4.103424,8.829090,-3.242227,-7.975896,8.953170,9.283003,-1.822292,2.055464,-5.780987,8.534154,-5.180396,-1.955419,8.546398,2.762471,-8.370623,1.006599,-5.175746,-4.459067,1.928173,6.826205,-5.341717,-6.779394,-4.702343,5.338962,-0.212793,2.878961,7.477381,-0.167530,-3.716412,2.898222,8.262693,-2.543869,9.148406,-0.948774,0.320001,-7.212974,-6.646982,7.056650,-7.437743,-5.228936,3.065767,-1.824145,3.205119,-1.453660,-0.908610,8.907123,-0.887181,1.494026,-2.899318,-7.851058,-1.214562,3.864733,-4.232063,2.099937,1.668788,9.995228,2.348567,4.353109,-1.318497,-8.792069,-8.135314,-7.245469,5.581160,-7.013012,8.254031,-7.566634,8.288333,-4.011422,-4.337279,8.357934,4.698492,-5.553628,-3.086108,-5.806430,2.366509,4.495481,-0.586507,0.272282,3.077282,3.364654,-8.730617,-1.879839,2.897979,3.873868,-1.677764,9.463794,7.624293,-8.245229,-3.807991,-7.780557,-2.658567,5.518096,4.648468,-5.125750,-5.177372,4.287406,8.994073,2.256601,3.276115,-1.322985,2.529332,2.454629,-8.723024,-4.898577,-9.967857,-7.837413,-6.985961,2.480456,-3.711898,-4.234023,4.778099,-3.575589,-9.419617,0.793800,-6.933014,6.102578,-3.394683,3.684237,6.936737,7.993959,-9.814269,-6.816783,8.917579,5.566134,9.787468,-6.878949,4.572263,-5.919813,-2.311648,9.536827,5.877488,-5.500514,-9.250371,-8.174649,1.417033,6.640100,-5.235042,-3.726039,-8.457973,1.242840,-2.169541,-5.173136,-7.540339,7.536306,0.864770,-7.116790,3.492889,-4.280518,-1.389589,8.604076,-4.926997,2.519483,-8.993362,-7.224505,0.631679,5.947093,6.826428,-9.301984,-3.190370,5.216429,-8.603012,-8.047557,-7.053501,0.736505,-5.102335,0.974568,-2.448032,3.275443,-1.171549,4.787897,1.774667,7.437089,-3.134558,8.251299,7.042917,-4.427619,-7.904777,-6.777952,9.230323,0.416062,-6.325546,-5.650384,8.736267,-2.979471,5.680133,-5.445367,-2.517086,-3.005149,5.134892,2.729956,-8.214528,-5.109079,-9.261687,1.797006,2.242657,8.134579,4.120874,-8.594103,5.161631,3.051097,-8.722409,-1.549149,8.904781,4.959159,-7.411463,-4.728882,5.359619,0.071934,3.219202,3.915234,7.596181,-2.053296,1.258145,5.338356,5.763180,6.853199,-0.608828,-8.620187,-3.589844,-5.771451,-6.318925,7.454416,-8.555619,-3.214493,-7.868071,-6.497590,-8.905709,-0.105139,3.201247,8.359385,-2.039180,-3.919114,-3.264459,7.875291,-5.047413,8.674277,-8.919070,-5.666490,5.054049,-2.762828,6.396770,7.905368,6.933985,1.150242,9.312187,-9.167852,2.969871,5.211771,4.549985,6.040290,-9.257704,0.136651,6.505432,0.915656,-6.611440,-9.082095,-0.761734,4.445871,-5.112677,-1.118885,1.894154,1.332705,9.023316,-2.830578,1.549664,6.483538,-5.524228,-8.622520,-9.071820,-7.642781,1.439119,-8.650214,-4.357164,-3.037387,-7.823481,5.782106,4.295113,5.309337,9.838817,4.243852,9.383164,-1.248934,7.393490,6.372121,5.021929,-0.958814,8.256154,-7.651375,3.115980,-7.017450,-2.912193,5.604554,-6.047032,-2.427339,1.612029,6.485595,-9.945081,-3.606556,-3.070984,-7.717567,-3.301932,3.347459,9.321046,8.622475,-2.049041,7.311878,9.899437,-8.466652,6.050724,5.403717,-8.389131,0.984083,2.751969,8.926825,0.160326,9.682293,-5.332127,1.842753,-6.667931,-6.856490,-6.834866,8.930314,6.779569,-1.812424,9.870291,2.201054,-8.877514,-1.432675,-0.256359,1.667541,3.405227,2.433039,7.411186,-4.236344,-1.758554,-2.881550,-5.545268,-3.990277,5.936019,-8.715294,5.189706,3.552401,-7.666588,7.955636,8.346679,-2.432196,4.782709,-5.821154,7.889089,-7.608741,-3.113425,-6.158052,3.861453,-1.286011,6.792528,8.398200,-1.194091,-8.816045,-3.203875,5.498634,4.594754,9.865094,-1.079329,8.695100,-3.076080,0.169304,9.248685,5.308981,-9.668670,5.803392,-5.712965,-0.322680,4.699125,3.918140,-3.182732,5.883569,-6.965833,-8.712507,0.830977,-1.169994,-2.435456,-6.141510,-0.946342,-1.598171,8.037699,-2.647995,-0.219951,-5.736942,-5.161489,6.802911,-9.879785,-1.177761,3.231662,1.650828,-9.108906,-2.667165,4.114602,-7.397883,-2.559369,1.891952,1.577143,5.627264,-7.456372,3.986283,9.207131,-8.755900,-1.709247,3.309101,8.859915,-7.695133,-2.594127,-5.646360,1.369789,3.319463,7.376521,2.281798,0.566627,-9.597036,-1.891700,-4.177531,2.783912,7.927059,9.335843,8.207398,-9.510266,-7.048442,1.471152,-7.797663,-3.670445,-5.742458,-0.208163,-1.970098,9.514206,-5.971625,-1.309071,8.868714,4.436466,0.274711,2.816342,3.777071,-2.909649,6.515002,4.774592,-2.993977,4.962953,2.391142,-0.600310,8.619116,7.268994,0.678496,-8.911957,8.704431,-7.427866,-9.161548,1.059808,9.123451,-1.172219,6.292590,-4.727802,2.681018,0.620922,-4.956431,-4.703078,1.360176,5.138600,1.200090,2.602333,9.903914,-8.171108,-0.428341,9.201041,1.299426,-1.805673,5.433440,5.529038,-0.901329,-9.006653,-3.509250,3.887303,-8.796746,3.808724,-3.347217,-4.819272,-0.966691,-6.062724,-9.637725,-8.216502,0.525758,6.777394,6.479624,6.862869,1.359184,-2.285117,-2.491540,6.953315,-7.540501,-2.644480,4.765837,-3.529278,8.602247,-4.830950,1.625886,-1.742466,8.656088,7.365965,-0.365018,2.655435,-2.489161,5.185355,0.316713,9.623129,0.275244,-0.824970,-6.427037,-6.362351,2.769590,-4.064065,3.648041,2.118708,-1.975699,-7.869036,4.675405,-5.986921,3.495160,-5.119054,-2.034796,9.932023,-6.062036,-0.152696,-9.730776,-8.065010,-9.522580,-6.030672,8.521304,-6.830289,2.170358,-1.532471,-5.552166,-7.503870,0.590271,-3.102050,6.951410,8.250126,-0.833789,-7.482946,3.760420,-5.391220,0.998432,1.146011,5.437734,-2.512798,-0.680361,2.501214,0.206021,5.231185,4.639808,-7.620587,0.661303,-2.786057,-6.870513,-7.820124,9.801338,0.360615,-1.329593,-2.950622,-4.630348,-1.314399,0.938859,-1.134181,4.436099,2.603751,2.907996,9.955880,-0.553865,-5.612217,3.794518,-9.148002,-5.416004,9.159773,-5.220411,-8.220667,0.682078,-5.505352,-2.203933,7.423290,-8.233454,-2.844406,9.228466,-7.558138,6.819494,-1.502505,5.521045,-1.950721,-4.728905,-8.110953,4.004413,3.095799,9.837057,8.785769,-9.981242,-5.668935,-2.712475,3.194728,-4.412784,8.150170,-1.598099,-1.109157,-0.987873,5.100494,2.684637,6.281615,-5.773614,9.620034,-3.231713,-0.116641,7.520796,0.937627,9.663370,6.530897,-1.463032,-6.138333,-7.278889,3.077749,0.484506,7.017489,-2.734132,2.579663,-1.752170,9.683435,8.166166,6.664951,-9.168919,-7.774365,1.960756,6.430700,-9.625842,4.617781,9.162199,7.284267,9.611553,8.485485,-4.084500,2.148222,7.916638,2.809423,-5.293364,5.285194,-1.264602,-6.746932,-2.286106,6.108906,3.256762,4.876303,0.497987,6.160165,-2.927802,8.215527,4.447932,6.049134,3.617858,-4.939637,8.059537,-2.175972,9.142736,-4.819192,-0.550484,1.778152,-2.336307,-4.311486,4.636888,-2.485108,-1.166649,-0.675746,-0.925708,-8.752587,4.006118,8.315180], dtype = "float64")#candidate|2337|(1024,)|const|float64
call_2336 = func_275_call(relay.reshape(const_2337.astype('float64'), [4, 16, 16]))
call_2338 = func_275_call(relay.reshape(const_2337.astype('float64'), [4, 16, 16]))
bop_2340 = relay.logical_and(const_2337.astype('bool'), relay.reshape(call_2336.astype('bool'), relay.shape_of(const_2337))) # shape=(1024,)
bop_2343 = relay.logical_and(const_2337.astype('bool'), relay.reshape(call_2338.astype('bool'), relay.shape_of(const_2337))) # shape=(1024,)
func_842_call = mod.get_global_var('func_842')
func_848_call = mutated_mod.get_global_var('func_848')
var_2347 = relay.var("var_2347", dtype = "float32", shape = (440,))#candidate|2347|(440,)|var|float32
call_2346 = relay.TupleGetItem(func_842_call(relay.reshape(var_2347.astype('float32'), [4, 10, 11]), relay.reshape(var_2347.astype('float32'), [4, 10, 11]), relay.reshape(call_2330.astype('uint32'), [2250,]), relay.reshape(call_2336.astype('float64'), [1024,]), ), 2)
call_2348 = relay.TupleGetItem(func_848_call(relay.reshape(var_2347.astype('float32'), [4, 10, 11]), relay.reshape(var_2347.astype('float32'), [4, 10, 11]), relay.reshape(call_2330.astype('uint32'), [2250,]), relay.reshape(call_2336.astype('float64'), [1024,]), ), 2)
func_1593_call = mod.get_global_var('func_1593')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_2355 = func_1593_call()
call_2356 = func_1593_call()
output = relay.Tuple([call_2330,bop_2340,call_2346,var_2347,call_2355,])
output2 = relay.Tuple([call_2331,bop_2343,call_2348,var_2347,call_2356,])
func_2370 = relay.Function([var_2347,], output)
mod['func_2370'] = func_2370
mod = relay.transform.InferType()(mod)
mutated_mod['func_2370'] = func_2370
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2371 = relay.var("var_2371", dtype = "float32", shape = (440,))#candidate|2371|(440,)|var|float32
func_2370_call = mutated_mod.get_global_var('func_2370')
call_2372 = func_2370_call(var_2371)
output = call_2372
func_2373 = relay.Function([var_2371], output)
mutated_mod['func_2373'] = func_2373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2283_call = mod.get_global_var('func_2283')
func_2285_call = mutated_mod.get_global_var('func_2285')
call_2393 = func_2283_call()
call_2394 = func_2283_call()
func_763_call = mod.get_global_var('func_763')
func_765_call = mutated_mod.get_global_var('func_765')
call_2404 = relay.TupleGetItem(func_763_call(), 1)
call_2405 = relay.TupleGetItem(func_765_call(), 1)
func_1964_call = mod.get_global_var('func_1964')
func_1966_call = mutated_mod.get_global_var('func_1966')
call_2406 = func_1964_call()
call_2407 = func_1964_call()
bop_2410 = relay.minimum(call_2393.astype('uint32'), relay.reshape(call_2404.astype('uint32'), relay.shape_of(call_2393))) # shape=(8, 128)
bop_2413 = relay.minimum(call_2394.astype('uint32'), relay.reshape(call_2405.astype('uint32'), relay.shape_of(call_2394))) # shape=(8, 128)
func_1466_call = mod.get_global_var('func_1466')
func_1468_call = mutated_mod.get_global_var('func_1468')
call_2414 = relay.TupleGetItem(func_1466_call(relay.reshape(call_2404.astype('float64'), [8, 128])), 0)
call_2415 = relay.TupleGetItem(func_1468_call(relay.reshape(call_2404.astype('float64'), [8, 128])), 0)
output = relay.Tuple([call_2406,bop_2410,call_2414,])
output2 = relay.Tuple([call_2407,bop_2413,call_2415,])
func_2420 = relay.Function([], output)
mod['func_2420'] = func_2420
mod = relay.transform.InferType()(mod)
mutated_mod['func_2420'] = func_2420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2420_call = mutated_mod.get_global_var('func_2420')
call_2421 = func_2420_call()
output = call_2421
func_2422 = relay.Function([], output)
mutated_mod['func_2422'] = func_2422
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2426 = relay.const([[[-1.236594,-4.540810,-9.136034,-9.533357,8.005232,-1.686157,-5.298108,4.276919,9.378004,-7.698563],[5.483517,9.013438,8.317890,8.275868,7.346710,-5.753915,5.847775,-6.881630,6.161082,-6.792904],[3.380268,-7.227122,-6.135594,-7.449714,8.673067,-1.035709,-6.459989,2.254559,-7.886909,1.808486],[-6.410055,-5.570691,-4.906779,9.780026,8.048960,-2.120681,-7.291104,-6.050495,-2.562218,9.270039],[0.091037,-6.294206,0.243468,8.138458,7.128564,2.617518,-4.589792,8.017600,-5.593304,-0.241855]],[[-5.233853,3.250127,5.891585,-9.030153,-0.255246,-1.224413,9.591830,5.041613,-6.943029,7.126926],[1.466268,5.171876,-5.400013,-5.947982,-9.486220,-2.733976,0.764898,5.513189,5.267230,1.719175],[4.132270,6.324006,-2.079023,7.357002,2.501990,-3.357070,-3.966693,1.066929,4.611279,1.886431],[-2.656841,-1.960351,8.325938,3.564187,8.662995,6.120785,-6.270365,-9.378049,0.599792,6.784071],[-1.116227,-6.941563,-2.361101,6.974789,3.239448,7.178268,-5.552152,-0.529320,7.897835,-5.656616]],[[-2.630346,-8.887557,-8.701103,0.677767,-0.387979,-0.235747,5.506397,8.312487,-3.908744,2.750298],[-1.740248,-5.175387,-4.808035,-1.236513,-4.920816,1.261603,-7.707399,2.631950,-0.565314,9.025772],[6.743545,0.661884,-4.570363,-0.208812,1.484213,-5.729493,-8.887903,-5.888449,6.726623,2.320729],[5.862207,-5.154257,-0.883740,-8.906777,7.597794,8.504418,2.648425,3.775710,-2.396180,1.487696],[7.553187,2.079255,-6.975047,-4.739694,-5.326080,1.113508,-7.202649,-0.376366,8.448341,4.448206]],[[-2.190028,4.532619,2.672998,9.164679,5.387117,0.029680,-4.399547,-3.490506,-0.119097,4.516584],[-3.496055,-6.966397,-5.250191,0.929610,8.908715,-2.767456,-9.549423,-2.786946,-7.010988,4.177801],[-1.249038,-9.037281,5.599905,8.514006,-7.665935,-7.511012,6.183429,5.058055,9.845621,0.690447],[-7.196802,-0.957700,2.049535,-6.845854,-7.546935,4.972637,7.888215,-5.272917,0.643370,-9.993993],[-0.207860,-8.553986,-7.574537,3.059724,1.714773,-6.338331,3.240531,-5.663138,2.032184,-0.558005]],[[-2.179171,-5.548837,-2.455073,-0.727666,-1.445361,2.403598,7.722787,-6.878668,8.314282,-1.755854],[-2.672708,-7.442248,8.578320,7.698808,-2.977870,7.423996,5.659094,-7.650190,-4.778593,8.435583],[1.216158,4.929218,1.652442,-2.747851,2.877516,3.942464,-3.921570,9.705554,-8.256716,-7.463979],[1.936186,3.785709,-6.287664,-2.069765,-0.386183,4.697277,-5.695155,-6.704937,4.823628,-6.197615],[3.637726,-6.672977,-5.855882,-2.278137,-6.726012,8.373359,-1.259330,0.520046,-9.611178,0.905764]]], dtype = "float64")#candidate|2426|(5, 5, 10)|const|float64
const_2427 = relay.const([[[-2.391736,1.000574,9.326679,-0.744379,7.685822,3.242512,6.472115,-2.139264,-7.659527,-2.569263],[-4.126285,-7.208406,8.407929,8.160245,1.582959,-6.223117,-1.079740,6.184519,-6.155096,6.606880],[1.507604,6.789051,-8.842305,-0.263825,6.133876,-8.195714,1.475101,2.423319,2.029112,6.557754],[7.319812,7.282725,0.519856,-0.339064,-6.973140,-7.993773,-4.737636,-6.971750,7.823120,-5.447395],[8.240341,-6.935047,4.986985,-9.779147,-3.545651,-9.358557,1.930551,3.300617,-2.263597,-4.436529]],[[4.809971,-6.234087,-2.963507,7.474966,-6.453337,-5.208021,-2.189501,-7.239981,-6.246020,1.982478],[5.524537,6.148050,5.837037,0.796153,-9.075579,-2.114253,-6.530852,7.096399,5.210250,-7.721865],[-7.425705,9.690118,6.895277,1.788969,-7.771253,-3.553045,-2.426312,-5.664895,-0.485020,5.532129],[8.566918,1.902300,-4.604928,1.096792,1.776998,4.080229,-4.940479,-5.706183,5.032034,-1.841032],[-8.711180,2.814074,-2.201548,-7.615947,0.795223,1.395861,8.724293,6.724646,9.247332,3.325406]],[[-5.101076,8.874321,-2.742299,6.118098,6.920097,9.052953,-8.077161,-7.720739,6.596524,-8.883494],[-4.522381,0.578166,-2.328742,1.616732,2.542110,-6.817956,-0.295552,4.469126,4.439688,-7.840097],[-0.865038,3.693642,-0.383594,0.847616,-5.061763,-4.977039,4.411659,2.820995,-3.107548,3.908427],[5.327752,-1.012625,8.661019,-8.205776,-7.910279,0.254031,2.571150,7.439399,-8.231100,8.481134],[-3.836302,1.458067,1.549263,2.251816,-3.102265,-5.164791,-7.836766,9.280401,-8.885737,8.808584]],[[-5.813423,8.852207,5.351724,2.842236,3.156053,-7.862542,-8.497586,3.343584,-7.340032,-4.906526],[9.040018,6.128143,2.584265,-6.419268,-5.099074,-3.388512,-6.793217,-7.676813,-1.168268,-2.938668],[-7.345098,-6.716834,-1.259028,8.554101,-9.934244,2.776271,-8.429594,-1.201957,9.438720,7.581276],[-7.604672,-6.214768,1.880444,-3.135645,-1.042610,4.272706,7.024315,-6.634775,3.778299,8.966599],[3.870708,4.902135,7.459898,0.640294,-7.670318,-3.231609,-5.035590,-0.443877,-1.549161,6.456544]],[[5.266522,9.712249,-3.958185,-4.363306,2.734304,-0.503292,4.032025,-8.187144,9.613835,2.929861],[-5.020770,-1.238279,2.186796,-7.239191,8.660531,-0.115703,-2.138062,1.384329,7.733259,-7.732674],[9.390985,0.176929,4.519543,4.267564,2.417877,-2.178086,1.965112,-4.425470,5.133301,-5.051537],[7.804431,1.132743,-5.528818,-1.232343,7.999411,9.179853,4.841805,7.365603,-2.860221,0.855921],[7.114875,-7.697754,-5.922670,5.889103,1.225469,-8.039125,2.719260,2.170252,4.286842,9.204951]]], dtype = "float64")#candidate|2427|(5, 5, 10)|const|float64
bop_2428 = relay.minimum(const_2426.astype('float64'), relay.reshape(const_2427.astype('float64'), relay.shape_of(const_2426))) # shape=(5, 5, 10)
func_1995_call = mod.get_global_var('func_1995')
func_1996_call = mutated_mod.get_global_var('func_1996')
call_2434 = relay.TupleGetItem(func_1995_call(), 0)
call_2435 = relay.TupleGetItem(func_1996_call(), 0)
uop_2440 = relay.cosh(const_2426.astype('float32')) # shape=(5, 5, 10)
var_2442 = relay.var("var_2442", dtype = "float32", shape = (5, 5, 10))#candidate|2442|(5, 5, 10)|var|float32
bop_2443 = relay.greater_equal(uop_2440.astype('bool'), relay.reshape(var_2442.astype('bool'), relay.shape_of(uop_2440))) # shape=(5, 5, 10)
output = relay.Tuple([bop_2428,call_2434,bop_2443,])
output2 = relay.Tuple([bop_2428,call_2435,bop_2443,])
func_2455 = relay.Function([var_2442,], output)
mod['func_2455'] = func_2455
mod = relay.transform.InferType()(mod)
mutated_mod['func_2455'] = func_2455
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2456 = relay.var("var_2456", dtype = "float32", shape = (5, 5, 10))#candidate|2456|(5, 5, 10)|var|float32
func_2455_call = mutated_mod.get_global_var('func_2455')
call_2457 = func_2455_call(var_2456)
output = call_2457
func_2458 = relay.Function([var_2456], output)
mutated_mod['func_2458'] = func_2458
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2552 = relay.var("var_2552", dtype = "float64", shape = (13, 11, 8))#candidate|2552|(13, 11, 8)|var|float64
uop_2553 = relay.log10(var_2552.astype('float64')) # shape=(13, 11, 8)
func_842_call = mod.get_global_var('func_842')
func_848_call = mutated_mod.get_global_var('func_848')
var_2567 = relay.var("var_2567", dtype = "float32", shape = (5, 88))#candidate|2567|(5, 88)|var|float32
const_2568 = relay.const([9,8,-6,-2,-9,-10,-8,9,-6,2,-8,3,-2,-5,6,-1,-3,2,-4,-6,7,-9,-4,-2,-5,-10,-1,-3,9,5,-3,-10,-7,-6,1,6,-10,2,-1,8,-9,9,1,-2,9,6,4,-8,10,-2,8,8,-10,3,7,9,2,-5,-9,3,-4,10,7,-9,-2,8,8,7,8,-1,-3,-2,-8,8,-6,7,-2,-10,-7,-5,-1,-10,-3,-6,8,8,10,8,9,-7,-7,-6,1,7,6,-8,9,5,4,-2,3,-6,2,-10,2,-5,-10,-7,9,-1,-9,4,-5,-9,2,-1,-5,-5,3,-7,3,-3,5,5,7,10,3,4,-3,-8,8,10,-8,-8,2,-7,7,9,-1,7,10,-6,9,2,-4,-7,-2,4,3,3,9,-10,2,-10,4,3,-3,9,-8,8,-3,-2,3,7,10,-9,1,-7,7,-6,-5,6,-7,-3,-8,-6,-5,8,-6,2,-6,-7,10,-10,5,9,6,-9,-10,7,-5,-9,-3,8,1,-7,3,-3,-10,-2,-10,5,8,-8,-8,6,-10,-4,1,2,6,-6,3,-3,-4,-10,-8,10,-10,-4,-7,-4,5,-10,1,-6,-1,-5,-4,9,-3,-2,-3,5,-3,2,9,-7,-3,9,-10,1,9,-6,-4,3,-4,-6,-9,8,10,-4,-7,3,7,-6,-9,8,2,-3,1,-4,4,1,1,-7,-1,-1,-1,8,8,-7,-10,-5,1,1,-5,-6,-2,-4,8,5,-2,8,5,-5,10,10,-9,4,-2,-3,-7,7,7,4,3,-5,-10,-2,10,7,-9,2,1,-7,3,1,-10,1,10,-3,9,-9,10,3,9,2,7,6,-9,1,3,-2,-2,10,-2,-6,2,9,7,4,2,-3,-9,8,-2,-10,3,-7,8,-9,-2,-9,-2,-8,10,6,5,4,-8,2,1,4,7,-1,3,-3,-4,-1,1,-7,1,-7,-3,-10,3,-1,-7,10,-10,-7,10,-8,-4,-3,8,8,-1,6,7,-7,2,-5,-4,-3,4,7,-1,10,-6,10,1,5,-2,8,-9,-10,-2,9,9,-10,3,-9,-4,8,10,-6,-6,4,4,-7,-6,5,3,-4,8,-5,3,3,-5,-1,-1,-7,-10,4,3,-6,-10,7,-6,6,-4,5,7,7,1,8,-5,-6,5,8,3,9,6,7,-6,4,-3,9,6,-3,-6,-8,5,-7,-6,-10,-10,4,-6,5,-3,-4,-7,10,9,-2,-4,5,4,10,8,1,-1,-1,4,-1,-7,5,5,9,9,-8,-10,2,6,6,-4,-1,9,-3,10,-2,-6,10,4,-5,1,-6,10,-4,10,2,6,8,-7,-8,3,-5,9,-10,5,6,9,-6,9,-7,2,10,3,3,9,7,1,10,-7,3,-4,-9,-10,-3,-7,-6,8,-8,6,-10,-3,6,9,6,-4,2,-7,-2,8,-5,-8,5,-9,-8,4,-9,-5,1,-8,-1,-3,10,-6,8,-10,10,-4,-5,-7,7,8,-8,-8,8,3,8,-4,7,-3,-1,-6,2,-5,-2,-9,-6,2,2,3,5,9,4,-4,-1,-6,1,-5,-3,-1,5,-3,-6,6,-6,-8,-7,-6,10,3,-8,-6,-2,-3,1,9,3,8,-8,9,-5,9,-4,4,7,-7,-6,-6,-6,-3,-5,3,-6,-1,-7,-2,-7,-4,-6,-5,6,7,-7,-10,4,-1,8,8,7,10,-10,-6,-1,-8,-1,-9,-6,-8,-1,-7,-4,5,2,-5,5,-5,-8,-1,-3,8,-1,2,-7,-2,1,-3,-8,6,-2,-1,6,1,6,7,-1,5,5,-9,10,-1,9,-5,-2,8,-1,2,-2,-5,7,10,-8,9,-6,6,-8,-8,-10,-5,-5,-10,-2,8,-7,4,5,-1,-1,-8,9,-3,-2,-5,4,-7,-2,7,-9,-8,6,-2,6,-7,4,-5,1,7,1,-6,-3,-5,-9,-9,-5,-7,-8,5,-2,4,10,-8,-9,6,8,-8,4,6,-8,-6,-1,-6,-1,5,-5,-1,8,8,4,-1,6,3,-3,-5,-1,3,-5,-3,4,-2,-4,-6,2,-4,-7,-1,4,-3,1,7,-1,8,-3,-4,6,6,1,-6,5,9,3,-3,4,-4,-7,10,5,-6,6,5,-6,-6,2,-9,-10,-7,10,9,-7,10,-6,-4,6,-1,-7,-6,9,9,-2,10,-9,-6,-8,-3,-8,1,-3,6,2,-2,6,-4,-2,8,-5,7,-5,3,5,-10,-10,10,-7,-3,-4,10,4,6,-10,9,3,9,8,1,1,8,-4,5,5,-2,2,10,7,2,-10,-3,9,-1,6,-10,-5,8,-7,3,-8,2,7,8,1,3,2,-4,-8,8,9,8,-8,-5,9,8,3,9,-5,-5,-6,-8,2,9,-9,3,5,-1,-8,-10,4,-4,8,-10,10,-9,-4,7,9,6,-5,3,2,4,2,-7,-10,5,6,-2,1,-5,8,-10,9,2,-7,-5,1,-9,3,-1,-10,-2,-4,-5,8,9,-3,1,-5,8,-10,-2,-2,7,-10,-8,-5,-7,9,-3,3,10,-10,-9,-6,8,-10,10,-3,7,5,4,-10,-8,-6,-3,-4,-6,-6,1,2,9,-2,-3,-5,-10,8,10,-8,4,-3,2,1,-2,-3,-10,-4,6,-9,-3,-9,-7,-9,-4,7,-9,-6,10,9,8,-6,-8,9,-8,-2,7,4,-10,-10,7,4,-10,9,2,1,-3,-8,9,4,8,-6,9,8,2,6,7,-9,4,8,-9,6,8,-2,1,-4,-4,-5,-2,-4,1,6,-2,9,-5,10,8,6,9,-4,-4,3,-9,-10,-9,5,-6,10,-8,-2,5,-6,9,8,-2,2,1,3,-4,-2,9,7,-10,3,-5,2,-8,-3,-2,9,-5,9,10,7,7,9,7,-1,-2,-5,-9,8,-5,8,-4,-1,-2,5,2,-6,-9,5,2,1,2,2,4,1,-1,-9,8,3,2,-9,-8,-5,9,-3,8,6,1,-1,8,-4,-3,-5,3,-10,-6,1,-6,-2,-6,8,8,-4,-2,4,7,2,-1,2,6,2,2,5,10,5,-2,-10,6,9,-10,-1,-3,8,1,1,-9,9,-4,9,4,10,6,-6,7,-2,10,-4,8,10,-10,-5,2,2,10,2,5,10,5,8,3,8,5,8,-2,1,9,-10,-1,1,-4,-7,-6,-4,5,4,2,-1,2,8,-10,-5,-6,2,-9,-3,7,-4,9,5,-10,9,-10,8,-4,7,7,4,1,3,8,-5,-7,7,8,7,-2,-9,1,-6,2,-6,7,4,-6,8,-4,1,3,-7,-4,9,3,8,-3,-6,10,-6,3,-5,-7,-5,7,10,5,-10,-4,-5,-5,2,9,-5,-1,6,-10,-5,5,8,7,9,-7,-3,8,-9,-2,2,-8,-2,9,3,8,-8,1,4,-6,-1,2,4,-3,4,4,1,-3,1,1,-3,3,4,7,-1,1,-8,8,-4,6,10,-3,10,-4,-2,-4,-5,-6,2,-7,10,6,4,9,7,-7,5,-10,8,5,-6,-6,-9,-2,-8,1,8,6,-3,9,2,9,-7,-2,10,6,-10,8,5,-8,8,2,7,7,5,-10,-3,-2,-7,-7,4,4,6,-1,2,5,-9,6,-5,7,-1,4,-7,4,3,-2,7,-8,8,3,1,1,-2,-9,2,-6,-5,6,-9,6,4,-6,4,3,7,5,1,-9,5,-2,2,-9,-10,-8,9,-10,4,3,2,-3,1,7,3,7,-4,6,-6,-2,2,-7,6,4,-3,-9,5,6,-9,8,-10,4,1,-9,-7,-7,-5,-1,-2,-2,-2,-2,4,-2,2,8,2,-6,-2,-4,-8,-7,3,-5,-3,-10,9,-3,-9,-5,-3,-10,5,-10,3,-5,2,5,9,2,6,-8,-3,5,6,-10,-4,-5,-8,-3,10,-3,9,-10,7,-4,-6,-5,5,-9,-1,3,-3,4,5,4,5,-8,7,-7,-3,-5,-5,-6,-4,3,-5,-1,-5,2,4,5,-5,-6,-4,7,5,-4,4,-1,6,4,-10,-2,3,5,1,-5,-7,-1,7,8,-9,2,-4,-4,9,-4,6,-6,-1,4,-2,-2,-1,2,10,10,4,-7,-7,1,-10,6,10,-2,-2,-4,-7,-5,-9,8,9,-1,2,-3,8,4,8,1,-2,8,-1,-8,9,9,-2,-7,7,-4,-5,-5,-1,-8,-10,5,-4,-6,7,5,9,4,-3,2,9,6,-3,5,-3,-2,-2,3,-2,-2,4,5,-3,7,-7,5,-7,10,-5,3,-7,-9,2,6,-2,2,-8,-9,5,-7,7,10,7,3,2,10,-10,8,-2,7,5,-9,-8,3,6,-8,6,-6,-6,4,4,-9,2,8,4,-7,-7,-3,7,-10,10,8,6,8,1,-1,-6,9,8,2,-3,2,-5,4,-2,7,-2,7,-6,-9,-9,-2,-1,-4,6,-2,5,8,-10,4,-7,-6,-3,-5,10,-8,2,-3,-10,-1,-5,7,8,1,-8,-2,5,1,2,9,-10,8,-6,7,10,-2,3,-4,-5,-1,-10,-5,2,5,2,4,10,5,5,-3,10,-7,-5,1,7,-2,-6,4,-2,2,4,7,-9,1,2,8,-9,2,9,-3,-7,3,-1,1,-5,-9,-10,2,-7,-3,7,1,-10,10,-6,4,-8,-7,2,-4,3,-6,8,-10,1,5,9,-3,-7,-6,8,8,-7,-6,-5,7,-4,8,-1,10,-6,-1,9,1,9,-10,-7,2,3,4,10,7,4,-7,-8,8,-2,-8,-5,6,6,8,2,9,9,7,-5,-3,-2,4,9,-1,-3,1,-7,9,-1,-1,8,-2,5,4,4,9,-8,-5,6,-8,-4,-4,-6,-8,-1,-3,1,6,7,-6,-7,-6,-9,-4,6,4,2,4,-3,4,1,5,-5,8,10,2,10,-6,10,3,-3,7,-5,1,3,-1,5,8,6,-1,-1,-6,2,9,-2,-9,7,8,8,9,-9,8,6,-5,2,-9,-8,4,-6,3,5,-1,-7,-6,10,-6,4,2,-10,2,-2,4,5,3,3,9,5,2,-9,-5,-4,8,5,-9,9,-6,2,3,2,-1,2,-4,-10,-9,5,-7,-6,-8,-5,5,-8,-6,-3,-2,-7,-9,-2,5,9,10,9,4,2,-8,1,-2,-6,-3,-7,3,9,10,5,3,9,-10,1,-6,10,-2,7,9,-2,2,9,-3,7,10,-1,8,8,-10,3,-4,8,-3,-9,8,-7,1,6,-2,7,9,-5,-10,4,-4,6,2,-3,10,-7,5,9,-10,10,-1,4,-7,-6,3,-8,9,-4,-7,7,-3,8,-10,4,3,10,4,-4,2,-9,10,-2,1,-1,7,10,2,-9,-2,-10,8,-10,5,-5,-4,4,2,-2,-5,5,-10,-3,-10,7,-5,10,-9,8,-4,3,-7,-1,-4,-4,-7,3,6,4,-8,10,7,9,-10,-2,-9,-2,3,-5,-10,9,10,7,-8,1,-1,1,3,-4,8,7,4,-4,-5,-7,10,2,-8,5,1,3,-9,10,8,-4,1,-6,3,3,8,4,-3,-7,9,-8,8,-2,10,10,7,6,7,4,-1,9,6,7,-2,-2,-4,1,6,2,7,-5,8,-4,-3,-7,5,6,-1,-1,-5,6,-5,-5,4,8,9,-6,7,2,-6,6,6,3,3,4,8,9,-1,-8,-10,-6,10,-6,2,6,-8,1,2,-5,9,5,9,5,-8,5,-9,-9,-5,-3,6,4,2,9,-1,-1,2,-2,-9,3,9,-5,10,-7,-10,1,2,9,-3,9,3,-6,7,-7,6,4,-9,6,-5,-6,5,-3,3,4,2,-9,5,-9,-3,9,-6,7,-3,7,-5,-5,10,-9,1,8,9,6,3,6,-2,7,9,-5,6,10,-7,-2,-4,10,6,-7,-5,9,-10,6,-2,-10,-7,-3], dtype = "uint32")#candidate|2568|(2250,)|const|uint32
const_2569 = relay.const([-2.316711,4.367852,-6.267883,6.136399,-2.523985,-9.215500,2.322623,2.819628,-2.187793,-4.096798,-4.605494,-0.555179,-6.731288,-2.730884,5.920853,-9.151132,6.630655,3.532686,7.826928,-4.174591,9.004073,-4.934986,8.627651,-2.907596,-3.164226,4.362287,-3.912199,-8.077395,8.669877,-3.733402,-9.162627,-1.285326,-8.818777,-8.191524,9.457078,3.217589,5.852972,9.913639,-3.471546,-5.011838,-2.027190,8.157694,2.331675,9.926424,-8.541722,2.793106,-1.405044,-7.383443,7.149677,5.071268,2.722929,-7.760130,-9.530642,-0.029142,3.666861,6.774329,-4.549727,-0.162460,1.405991,-9.737383,5.704518,-3.588640,-2.627059,-6.457106,4.547090,-2.418023,7.558627,5.485632,-8.887025,-1.331997,-7.713397,9.452830,-5.703479,-2.725846,-2.472708,6.546098,5.703063,5.560956,0.014017,4.731818,7.407882,7.952820,-9.696576,9.643529,-0.418768,4.620150,6.121468,-5.871863,-2.905129,8.135039,0.899331,7.773547,3.657902,-9.703378,-8.981541,8.905847,2.524465,-6.575750,-5.212975,-6.198938,1.272902,6.243760,0.295724,-3.734495,5.044771,-1.053009,4.649076,1.144006,-3.345960,8.478931,9.668284,9.629708,9.481969,4.339710,9.551430,7.929194,8.190255,8.424736,-4.715606,-8.915975,-6.693305,-3.290833,-9.130516,-7.538038,-4.073159,-6.844789,-4.096180,-5.945243,9.861657,7.461047,-7.720696,-0.449197,-0.466454,-4.408515,2.086149,-6.246169,0.081162,2.255485,-7.841762,-1.585294,2.808201,-3.781247,-6.647647,-4.908145,-4.228415,-4.865522,-9.152299,-2.219715,7.264516,2.613493,-1.712780,-1.093558,-2.576662,2.652296,5.385624,7.331283,-4.837749,-4.943975,0.171986,7.747232,0.155842,-7.041205,-9.036372,-1.003392,7.514733,-9.014758,8.176830,6.831283,0.981367,-5.422418,-5.560255,3.650251,4.151104,-3.185657,-2.771606,6.621719,9.553972,9.507823,-0.230774,5.999956,1.630503,5.942835,-0.984402,3.778694,-9.285452,-4.696731,4.804591,0.560147,-5.643501,3.102677,9.013046,-5.001274,-8.570310,-4.833665,5.979308,-3.244011,-5.184070,1.202948,-4.064131,-5.969478,-8.009614,-8.211837,-6.237396,-5.734640,0.946229,-0.147808,-2.892738,3.650197,-5.074005,-3.679433,-4.514621,9.888372,-1.432088,4.266749,7.595204,1.532785,7.390462,0.315664,-4.904687,-7.453499,-1.384008,-7.947911,8.423418,4.846756,-1.305585,7.353596,6.062919,4.169066,3.841670,-2.735708,-4.071406,-6.828507,6.818107,0.133664,8.191240,6.782851,-0.776829,2.522311,-5.472601,-3.130658,-4.069645,9.557630,-2.989600,3.601265,5.197379,-7.718753,-5.386384,9.057063,-7.117651,9.420821,-7.775634,4.943059,-1.744701,-8.952685,-6.203238,6.364085,-1.028174,-3.568613,5.025795,-6.778303,1.945450,-3.984821,1.822845,-4.231197,2.202635,-0.038706,-0.090983,-2.868464,-7.383692,0.859849,6.217126,3.600760,5.773755,-0.368885,0.370480,-3.302362,5.950950,-3.108338,-6.867965,5.938114,-3.934871,-1.726210,1.616443,-9.602448,7.085913,-5.701832,-4.149207,4.684690,9.448114,2.265301,-5.593855,-9.542771,-5.386677,2.216159,1.086856,-6.694945,-6.358324,-9.494059,-0.037657,1.683600,1.975626,-0.978984,5.028970,6.424459,-5.111139,9.272954,-1.019401,-6.671498,0.497276,-4.250767,-9.501780,-7.695388,6.025766,5.694662,1.961790,7.073824,-2.047893,5.605283,8.689727,6.723251,8.831680,3.615292,-8.396883,-0.773807,0.141314,-3.015378,-0.130131,-2.981005,3.113231,7.569061,-3.485591,2.711594,-8.145538,-2.191036,-9.754160,8.378598,-9.013226,6.126424,8.360474,-0.414730,-0.996858,-5.194343,-8.739542,-8.321547,-8.152237,-9.496349,2.154094,-2.112911,-3.280854,9.235798,-3.628055,-1.997034,3.620502,8.097631,-9.377271,0.571510,-9.495915,0.148197,-7.887608,-9.456636,9.008519,4.271528,7.572745,-7.866708,-1.466469,-0.917932,9.226899,-6.972402,-4.108681,5.809370,8.972759,-4.222714,-8.197139,-2.271301,9.846164,-2.230954,-7.708025,9.036245,7.878176,0.001368,-6.153736,-4.632604,4.692627,-4.751935,-2.495571,-9.249299,2.367007,6.322048,-7.207789,-8.815448,-1.763316,-4.960326,9.701918,-4.166677,8.140479,-1.823452,5.219075,0.891194,3.113140,1.009636,8.251619,-5.539593,-9.837009,5.221669,6.585290,-2.778671,-4.887011,-8.937397,4.036812,-8.392596,2.629937,-8.860032,7.960015,4.553148,6.263658,-6.706625,-4.715884,4.815692,-8.779285,1.723617,9.348667,4.665663,-6.966324,3.507185,0.137443,-0.852174,-0.801080,8.026734,1.833568,4.236704,8.687266,6.073185,-7.558062,-3.410792,0.220226,-3.468581,-2.368050,-5.296981,-3.197812,-5.385435,3.751220,-5.966565,9.857885,2.356839,-0.448428,9.056493,-2.112461,9.754107,-7.736719,2.107807,5.265247,-7.640338,-6.213714,-2.980075,-7.693827,-1.744393,5.419643,7.724597,-8.217675,4.720411,6.566890,8.840060,-4.688387,-1.781927,-7.637698,-2.324268,-5.809425,8.086034,-7.766971,3.891498,-0.002607,-6.940443,-0.503423,-2.549507,9.978105,5.184050,2.904451,-5.483635,9.292307,-7.556686,3.736827,1.477611,9.461502,-1.305652,-9.749383,-9.346147,9.874959,-7.997027,-5.028398,-6.423455,4.657958,0.412039,-6.276420,-7.468027,-3.419485,-8.448483,1.521582,8.627835,-0.603518,-8.502060,1.209097,-9.892908,-7.659132,-8.466753,5.752235,-3.641524,-5.852058,4.472658,8.246825,-8.470302,-3.618447,3.296360,-6.689670,-7.018545,-8.003129,9.463039,8.804858,-0.649095,2.314625,2.363395,-1.896554,0.779399,8.639155,0.289189,-7.646944,-2.466339,-1.383866,-9.604938,3.731929,-2.568830,-3.853356,2.295574,7.587288,5.209690,1.869150,9.932667,-6.190029,-8.396554,-8.389907,-0.152900,-0.287194,7.122412,5.256865,3.424637,5.993299,-5.488466,-0.451838,5.373113,-4.656746,-6.436957,8.888045,8.965980,-6.121358,8.890420,6.311197,1.138703,5.414774,2.184897,-2.637839,2.560213,-0.932396,0.274958,8.813915,-2.477244,7.255981,2.333110,-7.556461,-0.341958,0.974435,2.048025,-9.602491,-3.463819,-4.175652,-2.821984,-6.253404,-6.111103,0.652510,2.231040,-0.572081,-2.282293,-0.139857,3.828308,-8.321795,7.045570,0.242451,8.534028,0.449082,9.068065,2.667682,0.130658,7.203438,-2.965396,6.606811,-6.966841,9.288158,-7.534805,-1.133670,-3.048041,1.642161,-2.973487,0.925863,-1.256638,8.468237,-8.283159,2.898263,2.384860,8.422196,-4.162508,2.965117,-4.709325,7.422475,0.755071,-1.894665,8.116355,1.075639,0.553828,1.996464,-4.116674,5.563411,2.019758,-0.405582,-8.414498,-6.087966,-7.239955,6.791149,-9.526689,1.225647,-5.927795,1.057894,-2.976808,-1.665996,7.947204,8.050132,-0.037682,-1.944021,-8.455945,-8.928748,-5.381697,1.298822,6.108023,-6.388283,6.554943,7.667546,5.402234,4.920752,8.711226,0.411323,4.979824,-0.617051,-6.147202,4.644906,4.391901,7.489671,-6.184094,6.867303,2.649131,4.267654,2.732189,-2.297116,-3.816089,-8.248508,7.151307,-6.790259,8.403087,3.784860,-4.257265,-0.874515,-3.424535,0.264961,-2.002199,-3.075278,-2.876397,-9.699581,-6.249642,7.288868,8.531776,3.749508,2.414456,1.626470,-4.346610,-3.192359,-2.313331,8.866141,-5.810434,6.987926,2.407327,-6.604546,-9.786856,2.068191,-6.192728,9.692064,6.216176,-9.406930,-9.566495,9.645622,-6.473425,0.375938,-9.311119,-9.434311,-2.177421,0.802840,1.663963,4.325741,-0.598049,6.772651,4.057778,-5.534557,2.412247,-6.817385,6.200789,-6.591790,5.149690,-6.859768,-0.936617,3.677443,-9.454376,-6.076907,-0.532240,8.915559,8.584284,9.406008,5.905308,6.442603,0.143505,4.014962,3.607930,-1.058687,9.466575,-8.541044,2.693863,-0.868504,-7.384960,-8.617887,7.500404,7.905623,-5.550360,2.262334,7.146035,-9.773230,-1.229619,9.447504,1.330241,1.166465,-3.901361,8.556030,6.094128,7.956266,-2.611359,-9.189586,-1.738547,-3.017391,4.783297,-1.739804,-1.279299,6.941107,-6.239420,-0.086176,-0.151026,5.385470,9.416279,9.785286,-5.457275,-1.628796,-8.996600,-0.226356,3.909760,8.405839,7.449405,3.816532,-9.101149,-2.960581,5.799004,-6.335861,-0.952891,-6.134081,-8.456127,-3.963696,-1.878343,-9.492704,-6.193731,4.018710,8.083800,-5.230973,2.160057,6.325508,-8.532983,-9.841651,-9.141448,5.486256,-9.710536,3.457229,7.801336,-8.242630,-8.798012,-4.005538,7.375970,-0.329644,-9.768923,8.269872,-8.469608,8.586984,9.140995,-1.724039,3.254707,-4.414488,3.515427,-4.576052,-4.701957,6.088094,7.601674,8.057077,6.280479,-8.733746,-0.204552,4.515630,-4.122552,7.937052,9.727412,5.917964,0.209721,-2.152499,8.889251,-8.508920,9.335852,3.493380,2.599966,-2.442972,-8.409417,8.862021,-1.476036,-2.926728,7.864413,-3.805714,8.497463,7.824742,-0.530084,-2.930510,8.097592,4.364774,-3.249842,8.393775,3.699382,-3.858503,-6.004780,-3.977346,5.454572,1.284319,-8.007327,7.980665,-1.926954,-4.830615,-6.788364,-2.509574,5.356351,9.292312,-8.041807,-6.933501,-9.929867,-5.808837,-7.399412,5.510082,8.931367,-5.895180,2.015885,7.855252,9.774565,-0.719958,-7.539396,4.832048,-0.178485,5.153625,1.503791,-7.139681,6.221161,0.189398,4.581158,4.445193,7.836567,-6.686725,5.212946,-8.446782,5.216562,-5.804230,-2.490307,-5.281491,-5.850059,4.647839,7.635664,2.866036,-1.224569,-5.956154,-6.911201,-5.982040,4.987479,-3.023958,8.308159,8.043621,9.720971,-9.551073,4.627267,-9.803322,0.958221,-4.730770,5.698036,5.145844,-8.722443,1.505971,6.626344,-1.849111,-0.244462,5.319168,-8.943039,-4.393858,-2.355809,0.620517,7.080276,-0.497287,9.852638,6.949154,-9.542693,9.119140,-5.069210,0.606026,-2.393172,9.311197,-4.869016,-1.156769,3.756779,-2.191962,-4.951828,-3.852522,0.896645,-4.492535,4.520073,2.872054,-4.806817,-6.741743,6.438080,-3.630634,6.291046,-2.476833,-2.081582,-1.930061,-3.972123,5.174560,-1.202256,-0.233059,-3.914636,6.074349,7.842352,-2.768445,5.577986,-1.929045,-1.939695,-2.551983,-6.839542,-9.786570,-0.696635,2.247872,8.396763,5.858824,-9.310336,-5.324718,-1.457867,-4.739562,-7.810516,2.057899,9.364604,9.726557,-8.672229,6.314709,-8.817678,3.169503,0.756812,2.607400,9.908718,-6.800414,2.311779,7.690080,-0.954108,7.383553,-3.173372,-6.286599,-9.198076,5.348132,-9.376491,-2.246782,-3.334624,2.591184,-1.210867,9.229544,6.342965,7.609777,-5.868136,-0.057807,-8.301990,9.635763,-0.707956,-1.798519,6.535455,9.519086,-6.743219,2.163835,5.702897,-1.677786,1.533397,6.320260,-5.518160,1.117037,5.667282,6.665462,7.531109,-3.531713,6.136726,4.973917,4.429112,-5.622696,-2.286202,-4.369885,-4.134115,2.991143,-5.395597,-9.901788,5.321163], dtype = "float64")#candidate|2569|(1024,)|const|float64
call_2566 = relay.TupleGetItem(func_842_call(relay.reshape(var_2567.astype('float32'), [4, 10, 11]), relay.reshape(var_2567.astype('float32'), [4, 10, 11]), relay.reshape(const_2568.astype('uint32'), [2250,]), relay.reshape(const_2569.astype('float64'), [1024,]), ), 0)
call_2570 = relay.TupleGetItem(func_848_call(relay.reshape(var_2567.astype('float32'), [4, 10, 11]), relay.reshape(var_2567.astype('float32'), [4, 10, 11]), relay.reshape(const_2568.astype('uint32'), [2250,]), relay.reshape(const_2569.astype('float64'), [1024,]), ), 0)
func_1813_call = mod.get_global_var('func_1813')
func_1815_call = mutated_mod.get_global_var('func_1815')
call_2576 = relay.TupleGetItem(func_1813_call(relay.reshape(var_2567.astype('float32'), [440,])), 3)
call_2577 = relay.TupleGetItem(func_1815_call(relay.reshape(var_2567.astype('float32'), [440,])), 3)
output = relay.Tuple([uop_2553,call_2566,var_2567,const_2568,const_2569,call_2576,])
output2 = relay.Tuple([uop_2553,call_2570,var_2567,const_2568,const_2569,call_2577,])
func_2578 = relay.Function([var_2552,var_2567,], output)
mod['func_2578'] = func_2578
mod = relay.transform.InferType()(mod)
var_2579 = relay.var("var_2579", dtype = "float64", shape = (13, 11, 8))#candidate|2579|(13, 11, 8)|var|float64
var_2580 = relay.var("var_2580", dtype = "float32", shape = (5, 88))#candidate|2580|(5, 88)|var|float32
output = func_2578(var_2579,var_2580,)
func_2581 = relay.Function([var_2579,var_2580,], output)
mutated_mod['func_2581'] = func_2581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1537_call = mod.get_global_var('func_1537')
func_1538_call = mutated_mod.get_global_var('func_1538')
call_2619 = func_1537_call()
call_2620 = func_1537_call()
uop_2621 = relay.exp(call_2619.astype('float64')) # shape=(8, 128)
uop_2623 = relay.exp(call_2620.astype('float64')) # shape=(8, 128)
func_993_call = mod.get_global_var('func_993')
func_994_call = mutated_mod.get_global_var('func_994')
call_2626 = func_993_call()
call_2627 = func_993_call()
func_2222_call = mod.get_global_var('func_2222')
func_2225_call = mutated_mod.get_global_var('func_2225')
var_2629 = relay.var("var_2629", dtype = "float64", shape = ())#candidate|2629|()|var|float64
call_2628 = relay.TupleGetItem(func_2222_call(relay.reshape(var_2629.astype('float64'), [])), 0)
call_2630 = relay.TupleGetItem(func_2225_call(relay.reshape(var_2629.astype('float64'), [])), 0)
func_2420_call = mod.get_global_var('func_2420')
func_2422_call = mutated_mod.get_global_var('func_2422')
call_2635 = relay.TupleGetItem(func_2420_call(), 2)
call_2636 = relay.TupleGetItem(func_2422_call(), 2)
output = relay.Tuple([uop_2621,call_2626,call_2628,var_2629,call_2635,])
output2 = relay.Tuple([uop_2623,call_2627,call_2630,var_2629,call_2636,])
func_2644 = relay.Function([var_2629,], output)
mod['func_2644'] = func_2644
mod = relay.transform.InferType()(mod)
var_2645 = relay.var("var_2645", dtype = "float64", shape = ())#candidate|2645|()|var|float64
output = func_2644(var_2645)
func_2646 = relay.Function([var_2645], output)
mutated_mod['func_2646'] = func_2646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1301_call = mod.get_global_var('func_1301')
func_1302_call = mutated_mod.get_global_var('func_1302')
call_2660 = func_1301_call()
call_2661 = func_1301_call()
uop_2662 = relay.asin(call_2660.astype('float32')) # shape=(4, 6, 10)
uop_2664 = relay.asin(call_2661.astype('float32')) # shape=(4, 6, 10)
const_2666 = relay.const([[[-3,-8,4,2,3,-2,-9,-1,7,5],[10,-10,-3,1,-4,5,-1,4,-10,-3],[-2,5,-9,2,-6,-4,3,3,-3,-5],[9,4,-5,-5,5,-10,-3,10,-1,10],[9,8,-9,5,7,9,-2,-6,-3,3],[-9,7,-8,-5,-1,-10,8,2,1,9]],[[1,-6,5,1,-2,-6,-7,-4,1,-8],[4,-3,-8,-8,-6,8,7,2,5,9],[-8,-2,-9,-4,6,1,1,-2,2,-9],[1,6,1,-9,1,-8,5,6,8,2],[-3,6,10,-3,10,-1,-9,-8,-4,9],[-6,-4,8,-3,-3,10,10,10,-6,2]],[[-4,6,9,6,-2,9,-3,-9,5,7],[8,4,5,-8,8,6,3,7,-9,-5],[7,9,7,3,9,-1,-9,-5,-8,5],[10,-10,-7,-5,10,-5,6,-1,1,8],[-3,-9,4,9,4,10,7,-9,6,1],[7,-5,2,-7,-7,5,4,4,-7,-9]],[[-7,6,-6,-8,-10,8,-5,-10,8,-1],[2,7,-1,1,-4,-8,-9,4,-9,10],[3,7,-3,-6,6,-6,-5,-2,5,-6],[-6,-9,1,10,8,-1,8,-1,-7,-1],[-6,9,1,-2,9,-3,-2,-7,8,5],[9,-8,-6,-9,-8,5,-7,-7,-10,-3]]], dtype = "int32")#candidate|2666|(4, 6, 10)|const|int32
bop_2667 = relay.logical_and(call_2660.astype('bool'), relay.reshape(const_2666.astype('bool'), relay.shape_of(call_2660))) # shape=(4, 6, 10)
bop_2670 = relay.logical_and(call_2661.astype('bool'), relay.reshape(const_2666.astype('bool'), relay.shape_of(call_2661))) # shape=(4, 6, 10)
output = relay.Tuple([uop_2662,bop_2667,])
output2 = relay.Tuple([uop_2664,bop_2670,])
func_2677 = relay.Function([], output)
mod['func_2677'] = func_2677
mod = relay.transform.InferType()(mod)
output = func_2677()
func_2678 = relay.Function([], output)
mutated_mod['func_2678'] = func_2678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_763_call = mod.get_global_var('func_763')
func_765_call = mutated_mod.get_global_var('func_765')
call_2689 = relay.TupleGetItem(func_763_call(), 1)
call_2690 = relay.TupleGetItem(func_765_call(), 1)
uop_2699 = relay.cosh(call_2689.astype('float64')) # shape=(4, 16, 16)
uop_2701 = relay.cosh(call_2690.astype('float64')) # shape=(4, 16, 16)
output = relay.Tuple([uop_2699,])
output2 = relay.Tuple([uop_2701,])
func_2722 = relay.Function([], output)
mod['func_2722'] = func_2722
mod = relay.transform.InferType()(mod)
output = func_2722()
func_2723 = relay.Function([], output)
mutated_mod['func_2723'] = func_2723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2283_call = mod.get_global_var('func_2283')
func_2285_call = mutated_mod.get_global_var('func_2285')
call_2732 = func_2283_call()
call_2733 = func_2283_call()
func_2090_call = mod.get_global_var('func_2090')
func_2091_call = mutated_mod.get_global_var('func_2091')
call_2750 = relay.TupleGetItem(func_2090_call(), 2)
call_2751 = relay.TupleGetItem(func_2091_call(), 2)
bop_2752 = relay.left_shift(call_2732.astype('uint8'), relay.reshape(call_2750.astype('uint8'), relay.shape_of(call_2732))) # shape=(8, 128)
bop_2755 = relay.left_shift(call_2733.astype('uint8'), relay.reshape(call_2751.astype('uint8'), relay.shape_of(call_2733))) # shape=(8, 128)
func_448_call = mod.get_global_var('func_448')
func_452_call = mutated_mod.get_global_var('func_452')
var_2759 = relay.var("var_2759", dtype = "uint32", shape = (2250,))#candidate|2759|(2250,)|var|uint32
call_2758 = relay.TupleGetItem(func_448_call(relay.reshape(var_2759.astype('uint32'), [15, 10, 15]), relay.reshape(var_2759.astype('uint32'), [15, 10, 15]), ), 0)
call_2760 = relay.TupleGetItem(func_452_call(relay.reshape(var_2759.astype('uint32'), [15, 10, 15]), relay.reshape(var_2759.astype('uint32'), [15, 10, 15]), ), 0)
output = relay.Tuple([bop_2752,call_2758,var_2759,])
output2 = relay.Tuple([bop_2755,call_2760,var_2759,])
func_2765 = relay.Function([var_2759,], output)
mod['func_2765'] = func_2765
mod = relay.transform.InferType()(mod)
mutated_mod['func_2765'] = func_2765
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2766 = relay.var("var_2766", dtype = "uint32", shape = (2250,))#candidate|2766|(2250,)|var|uint32
func_2765_call = mutated_mod.get_global_var('func_2765')
call_2767 = func_2765_call(var_2766)
output = call_2767
func_2768 = relay.Function([var_2766], output)
mutated_mod['func_2768'] = func_2768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2328_call = mod.get_global_var('func_2328')
func_2329_call = mutated_mod.get_global_var('func_2329')
call_2787 = func_2328_call()
call_2788 = func_2328_call()
func_889_call = mod.get_global_var('func_889')
func_891_call = mutated_mod.get_global_var('func_891')
call_2798 = relay.TupleGetItem(func_889_call(), 0)
call_2799 = relay.TupleGetItem(func_891_call(), 0)
output = relay.Tuple([call_2787,call_2798,])
output2 = relay.Tuple([call_2788,call_2799,])
func_2836 = relay.Function([], output)
mod['func_2836'] = func_2836
mod = relay.transform.InferType()(mod)
mutated_mod['func_2836'] = func_2836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2836_call = mutated_mod.get_global_var('func_2836')
call_2837 = func_2836_call()
output = call_2837
func_2838 = relay.Function([], output)
mutated_mod['func_2838'] = func_2838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2283_call = mod.get_global_var('func_2283')
func_2285_call = mutated_mod.get_global_var('func_2285')
call_2898 = func_2283_call()
call_2899 = func_2283_call()
func_2420_call = mod.get_global_var('func_2420')
func_2422_call = mutated_mod.get_global_var('func_2422')
call_2901 = relay.TupleGetItem(func_2420_call(), 2)
call_2902 = relay.TupleGetItem(func_2422_call(), 2)
output = relay.Tuple([call_2898,call_2901,])
output2 = relay.Tuple([call_2899,call_2902,])
func_2905 = relay.Function([], output)
mod['func_2905'] = func_2905
mod = relay.transform.InferType()(mod)
output = func_2905()
func_2906 = relay.Function([], output)
mutated_mod['func_2906'] = func_2906
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2994 = relay.const(5.522043, dtype = "float64")#candidate|2994|()|const|float64
const_2995 = relay.const([[[-9.864919,-2.900679,-4.475320,3.497198,-0.461781,-6.138733,8.386106,-3.911637,-8.313503,3.979176,-5.029307],[5.877229,4.597468,-0.799614,1.839307,-4.677143,1.540360,-2.436707,-7.904648,-3.824790,9.169858,-1.698566],[-9.003889,5.915833,2.180059,-2.724990,-7.439251,-3.853251,-0.817934,-7.294575,-5.195340,0.664720,-1.048796],[-5.750898,-3.050775,0.558298,7.300484,-5.271944,-4.011098,-2.853618,-4.502579,-4.303404,3.678177,-8.593678]],[[9.079966,9.370074,-8.728992,6.651155,5.747003,7.640736,-3.544205,1.598988,-6.176105,-1.975880,1.023020],[-9.389721,1.506725,7.217297,-3.269302,-7.444399,-5.581004,4.129735,4.371537,0.472214,-0.012150,-1.949832],[1.976559,6.783093,6.540790,5.113922,-3.896544,-6.240409,-3.200115,-3.364347,-0.852204,-1.078387,4.154128],[5.990241,5.312239,8.279209,7.268162,-1.589291,7.007399,-0.115246,1.463232,9.612445,-7.971664,-1.785984]],[[4.034434,5.830209,5.339924,5.545865,7.004723,7.653037,0.257550,0.492549,-2.835568,-0.886677,2.469843],[-9.383627,-0.605299,-8.246707,-6.327726,8.483484,-0.854975,3.979463,-7.561112,-4.941383,0.637133,-4.213259],[-7.774501,8.302888,-8.909636,-8.879489,-0.867785,-4.408162,-8.632909,2.903707,8.174731,0.116446,7.476394],[-1.189433,8.454389,-8.668486,-4.809486,8.418127,-9.908729,-2.561988,-7.569125,-9.016824,3.415851,4.489489]],[[5.808772,-7.642247,6.482579,-8.443589,-7.659520,4.096581,9.819371,-0.315156,-4.056981,-3.886984,-4.473704],[8.502882,5.605226,-8.652683,4.601704,7.579017,-8.560649,2.819110,5.160600,2.259750,-5.125103,1.202626],[-9.492817,-4.891286,5.204758,8.552229,7.258377,3.633831,-3.637930,2.887333,7.753335,-2.158479,8.816247],[-8.600846,-7.806316,-4.063027,-9.161772,-5.748443,-8.710819,0.368411,-1.772090,3.738810,-7.116102,-6.875312]],[[-1.497542,-9.487690,-0.164565,-0.856508,-4.937859,-9.207402,-3.101716,-8.771727,-4.642916,4.828792,6.560213],[6.280224,3.592480,8.592742,8.662351,-9.380045,9.042574,7.490685,6.334066,0.811023,-6.395442,-7.344248],[0.314076,2.825689,-3.950963,-1.636406,-9.444613,6.947304,-6.356378,3.901446,-6.611577,-1.911152,-8.737288],[-7.934455,6.140493,7.515880,4.843908,-7.074504,-4.355181,4.356358,-8.956410,-9.174274,7.243448,-1.685845]],[[-1.693037,7.914599,1.653195,2.674464,2.746247,2.731848,9.538881,8.506432,6.535414,1.269078,8.912608],[-5.361922,-6.570971,-4.692170,-4.839592,-0.125810,-4.116254,2.250361,2.972900,6.269894,-0.250514,5.332642],[-5.547363,0.089466,-9.898544,6.948292,5.520319,5.245553,3.894030,2.972552,-2.768532,-9.133536,2.241568],[-2.102910,-8.519097,4.349687,-3.057777,5.866941,2.183818,-4.478324,5.674933,-7.333838,7.285179,6.735022]]], dtype = "float64")#candidate|2995|(6, 4, 11)|const|float64
bop_2996 = relay.divide(const_2994.astype('float64'), const_2995.astype('float64')) # shape=(6, 4, 11)
func_653_call = mod.get_global_var('func_653')
func_654_call = mutated_mod.get_global_var('func_654')
call_3004 = relay.TupleGetItem(func_653_call(), 0)
call_3005 = relay.TupleGetItem(func_654_call(), 0)
output = relay.Tuple([bop_2996,call_3004,])
output2 = relay.Tuple([bop_2996,call_3005,])
func_3014 = relay.Function([], output)
mod['func_3014'] = func_3014
mod = relay.transform.InferType()(mod)
output = func_3014()
func_3015 = relay.Function([], output)
mutated_mod['func_3015'] = func_3015
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3076 = relay.var("var_3076", dtype = "float32", shape = (15, 2, 2))#candidate|3076|(15, 2, 2)|var|float32
var_3077 = relay.var("var_3077", dtype = "float32", shape = (15, 2, 2))#candidate|3077|(15, 2, 2)|var|float32
bop_3078 = relay.power(var_3076.astype('float32'), relay.reshape(var_3077.astype('float32'), relay.shape_of(var_3076))) # shape=(15, 2, 2)
output = relay.Tuple([bop_3078,])
output2 = relay.Tuple([bop_3078,])
func_3081 = relay.Function([var_3076,var_3077,], output)
mod['func_3081'] = func_3081
mod = relay.transform.InferType()(mod)
mutated_mod['func_3081'] = func_3081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3081_call = mutated_mod.get_global_var('func_3081')
var_3083 = relay.var("var_3083", dtype = "float32", shape = (15, 2, 2))#candidate|3083|(15, 2, 2)|var|float32
var_3084 = relay.var("var_3084", dtype = "float32", shape = (15, 2, 2))#candidate|3084|(15, 2, 2)|var|float32
call_3082 = func_3081_call(var_3083,var_3084,)
output = call_3082
func_3085 = relay.Function([var_3083,var_3084,], output)
mutated_mod['func_3085'] = func_3085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2677_call = mod.get_global_var('func_2677')
func_2678_call = mutated_mod.get_global_var('func_2678')
call_3087 = relay.TupleGetItem(func_2677_call(), 1)
call_3088 = relay.TupleGetItem(func_2678_call(), 1)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_3097 = relay.TupleGetItem(func_1911_call(), 0)
call_3098 = relay.TupleGetItem(func_1912_call(), 0)
output = relay.Tuple([call_3087,call_3097,])
output2 = relay.Tuple([call_3088,call_3098,])
func_3108 = relay.Function([], output)
mod['func_3108'] = func_3108
mod = relay.transform.InferType()(mod)
output = func_3108()
func_3109 = relay.Function([], output)
mutated_mod['func_3109'] = func_3109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3108_call = mod.get_global_var('func_3108')
func_3109_call = mutated_mod.get_global_var('func_3109')
call_3161 = relay.TupleGetItem(func_3108_call(), 0)
call_3162 = relay.TupleGetItem(func_3109_call(), 0)
output = relay.Tuple([call_3161,])
output2 = relay.Tuple([call_3162,])
func_3186 = relay.Function([], output)
mod['func_3186'] = func_3186
mod = relay.transform.InferType()(mod)
output = func_3186()
func_3187 = relay.Function([], output)
mutated_mod['func_3187'] = func_3187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1054_call = mod.get_global_var('func_1054')
func_1055_call = mutated_mod.get_global_var('func_1055')
call_3212 = func_1054_call()
call_3213 = func_1054_call()
func_1995_call = mod.get_global_var('func_1995')
func_1996_call = mutated_mod.get_global_var('func_1996')
call_3228 = relay.TupleGetItem(func_1995_call(), 0)
call_3229 = relay.TupleGetItem(func_1996_call(), 0)
output = relay.Tuple([call_3212,call_3228,])
output2 = relay.Tuple([call_3213,call_3229,])
func_3240 = relay.Function([], output)
mod['func_3240'] = func_3240
mod = relay.transform.InferType()(mod)
output = func_3240()
func_3241 = relay.Function([], output)
mutated_mod['func_3241'] = func_3241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1593_call = mod.get_global_var('func_1593')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_3380 = func_1593_call()
call_3381 = func_1593_call()
func_1739_call = mod.get_global_var('func_1739')
func_1742_call = mutated_mod.get_global_var('func_1742')
const_3388 = relay.const([-1,1,2,-8,7,9,4,-7,-8,5,1,-2,-10,1,1,6,-7,-4,10,-7,10,8,7,3,10,-3,9,-6,-6,7,-9,1,-1,-6,-5,-9,9,8,-3,-5,-2,-6,6,2,-10,-1,-3,8,5,8,-7,4,-4,-5,-7,2,1,-8,1,-10,10,-4,2,-10,4,-9,-3,-10,-7,-4,5,2,3,2,-2,8,4,7,-4,4,-5,10,8,-6,4,9,-5,5,3,-3,10,8,-3,-1,-6,-6,8,10,5,10,6,-9,2,-1,1,-1,9,-6,-8,9,10,4,1,-5,-10,8,-6,-8,-8,5,-5,2,-6,6,3,-8,3,4,-6,4,6,1,-6,-2,8,-6,4,8,-6,3,-4,-4,-5,-2,-9,-4,-6,-9,-3,-9,-10,7,2,-3,-2,8,9,2,2,4,10,-8,-2,1,10,10,4,2,-3,-2,3,-8,4,8,-5,9,10,-4,-4,10,6,4,7,3,4,2,9,-2,3,-1,2,-4,9,5,-2,1,-4,7,2,-1,7,-4,7,-9,7,7,-4,-10,-8,10,1,-7,6,-6,3,-7,-3,7,8,-8,-10,2,7,-6,-10,-4,-8,6,4,4,-1,10,-1,-4,6,4,9,7,10,1,-2,1,-6,7,10,9,-2,5,-7,4,3,7,-4,7,2,3,3,-5,10,-8,5,2,-6,3,-8,-9,5,-2,-2,2,-9,7,9,-8,6,-7,-5,8,-8,7,2,-6,1,5,-8,-5,-3,8,4,9,4,-1,-7,-10,-4,10,2,2,-3,-7,5,10,6,-8,-4,2,-6,-6,-6,9,-3,5,-2,-3,3,8,3,3,-3,-4,1,6,-1,-2,9,6,-8,-1,5,7,-3,-5,2,8,1,4,-7,1,3,6,5,-5,-4,-5,-10,8,-9,2,3,7,-1,5,-1,10,10,-5,-10,7,-9,-5,-7,4,6,-7,5,2,-5,4,5,-10,-9,-9,-7,5,1,9,-2,5,-9,8,8,-8,1,9,-5,3,5,-7,2,-2,-1,-2,4,-5,-10,4,7,3,5,5,2,-8,-4,3,4,-7,-8,9,6,4,-7,6,-2,1,2,9,-6,2,1,-3,3,-1,-1,-3,-4,-5,-5,6,-1,-5,5,-8,3,10,-7,9,5,3,2,-4,-2,9,1,5,4,-6,5,7,-4,-10,-2,-5,10,-2,3,-1,7,2,-9,2,8,10,4,9,-6,10,-9,4,2,-4,-4,-2,8,8,3,-9,-2,4,8,-3,-2,4,-10,3,-6,7,-3,-10,-2,-6,-2,8,6,7,3,2,-7,-1,7,-8,-2,-3,-5,5,5,4,8,9,-2,-10,8,-4,-8,-1,8,8,-6,4,7,-9,-1,-10,-3,-5,-7,3,6,-2,10,-1,-3,-8,-1,-8,-10,-3,-10,-3,3,-9,2,-8,7,5,5,8,5,7,-8,6,-4,10,1,-6,-1,5,-6,4,-4,3,-4,-7,8,-5,-1,-4,-2,-8,2,-7,8,8,6,-9,10,-2,-4,-3,5,1,-1,-2,3,-5,-5,-8,4,-8,6,3,-1,10,5,10,-1,9,-7,-4,2,-3,-2,1,5,-8,-9,8,-7,-7,-10,-4,7,-3,-4,-5,8,5,-9,10,8,-6,1,8,10,2,-2,3,10,6,-4,-4,6,-4,8,8,2,-2,6,2,-5,8,-3,-7,-8,10,-1,-4,-4,4,4,7,-6,10,-10,9,-9,1,9,-6,2,-9,-2,1,-3,7,7,-3,4,-6,-6,-8,-6,-6,10,2,-1,4,-3,-7,-10,-4,-8,-9,-10,7,-1,-10,5,-2,1,-6,4,-4,-4,5,-9,2,-8,10,-7,-4,1,5,-2,-4,10,5,-1,-1,2,-1,-9,-8,4,-4,6,-9,-4,6,9,6,1,3,10,7,4,-5,-10,7,-5,-5,1,-10,8,10,6,-7,7,7,6,1,3,-10,-3,9,1,6,9,8,2,5,2,-4,-3,-8,6,-8,9,6,-6,7,10,-1,1,-8,-5,-2,-4,8,7,6,-7,-4,10,-6,6,6,-9,7,-4,5,-8,6,1,-9,10,-4,8,3,2,8,5,4,-9,-5,7,-2,-7,7,2,8,3,-1,4,1,-7,3,-3,9,-9,-4,-4,-1,5,-1,-6,-3,5,-10,-9,-4,-1,2,4,-5,6,9,-6,-3,10,1,2,-5,-7,-5,-7,5,-8,10,-6,4,4,2,-6,2,8,2,-5,-7,1,9,3,-5,-10,-2,10,10,1,-4,6,5,-9,-4,-3,9,2,-3,3,-5,-1,-1,5,4,3,7,4,-3,-8,-9,5,6,-9,6,4,-7,10,-5,1,-3,7,-6,-1,-6,-4,-9,-5,10,-1,-6,-10,2,-2,5,6,10,9,4,4,8,-5,9,-1,3,-7,-8,3,7,7,-9,-1,6,-4,1,-10,-6,-7,4,7,-3,-10,1,3,9,1,2,-8,5,1,-1,-6,-6,3,-2,-1,7,8,-5,8,-10,3,-3,4,-4,-4,6,2,-3,-5,-7,10,8,-2,8,8,-6,-1,3,-7,-10,1,-8,-9,-10,-6,1,-9,-3,-3,-10,10,-1,7,6,-10,-4,4,6,3,-10,-2,-6,-1,3,-1,-4,-9,3,6,9,-8,8,4,-5,-9,9,-7,4,3,1,-8,-4,9,-2,-7,-2,-5,6,4,8,8,5,-2,3,-4,-1,1,-1,5,7,6,8,2,1,-7,9,8,-3,1,-8,-10,1,-6,-4,-8,2,2,5,4,-10,-9,-8,-3,9,-5,-2,8,10,6,5,-7,-7,-9,-5,-2,-3,3,8,-2,-1,6,6,5,-7,10,-4,-1,5,7,2,-2,8,8,-3,-3,-9,-6,-2,-1,-1,-5,7,7,-5,-10,2,3,9,-6,-6,-7,-9,-10,-3,1,3,10,-1,9,-1,-4,3,5,-3,-6,-3,3,-7,2,-5,5,-9,5,-4,-8,5,10,-1,2,7,2,3,1,-8,2,-5,9,-4,6,9,10,7,-2,4,-4,-1,10,-2,6,3,-3,-6,4,7,5,5,-9,-7,3,-4,2,-5,-1,-5,-7,8,-7,-2,-4,3,6,7,2,-6,-5,6,-8,-4,-8,-10,5,6,-10,-5,9,6,-7,1,-6,8,7,-3,-5,-6,5,-9,-3,4,-5,-10,6,8,-8,5,-5,-7,9,9,-8,6,-2,4,9,-3,-7,-7,-10,8,-5,3,-10,-2,2,-10,8,-4,10,-8,-5,3,5,-7,-6,-10,-2,9,-5,8,4,-8,5,-5,-9,3,-7,10,-6,-4,3,-3,8,6,7,-1,-5,5,2,-4,6,-6,6,2,4,6,1,4,-3,3,8,1,4,3,6,6,5,-3,-10,2,-1,3,8,-1,8,1,9,-9,-5,-8,8,-5,8,5,-4,-1,-7,-9,2,8,-6,-7,-8,-8,9,-8,-10,3,10,5,6,1,2,10,9,-5,-4,10,1,9,-5,-8,-9,-2,-8,2,-3,-9,2,1,7,6,2,-5,5,-4,10,-5,2,7,4,-6,-2,-4,-4,6,2,-3,10,-9,4,7,-3,1,2,7,-7,5,-8,6,5,-5,5,-3,-8,2,-6,-5,3,-6,6,-3,6,6,6,-8,-5,-9,-1,-5,-7,-2,-8,-1,7,-8,-9,-7,6,1,-7,-4,-9,3,7,2,7,-4,5,7,-3,4,-3,-8,-6,4,7,-6,-1,8,-8,-2,6,-1,-5,2,3,-1,7,-9,10,6,1,6,4,-2,6,-9,-3,-5,1,6,3,2,1,-5,-5,10,7,-10,2,3,-7,2,7,8,-7,3,4,-4,-9,7,1,1,-3,-7,10,-3,-4,-7,-6,-10,9,-5,-1,9,-7,3,2,-6,-5,-10,-4,-4,-9,1,5,-8,-5,9,-3,5,3,-10,1,1,-8,3,-3,-2,7,10,7,8,5,9,8,-10,1,7,5,-10,-1,4,-9,8,4,-7,6,-2,-7,-8,4,-5,7,8,3,4,-10,-8,7,-4,6,1,-9,4,5,-10,-2,-3,-10,-1,-9,-7,-5,10,2,4,-7,9,-9,3,-5,-2,-1,-5,8,-4,-3,7,-7,-10,3,7,9,8,-1,2,4,-4,-3,-6,7,7,2,-5,-5,7,9,7,-2,-7,-6,10,5,6,4,-8,-3,-8,10,-3,-10,-2,4,6,2,10,2,-7,7,6,5,-10,-8,-3,-4,3,7,-3,-3,-9,-4,-5,3,5,5,-9,5,9,10,2,-8,-7,10,-6,-9,-10,-5,1,-6,8,-8,-2,-8,6,4,-3,-5,-7,-10,-10,9,-2,-6,4,9,-5,-1,-2,9,1,6,-6,-4,-5,-6,-1,-6,9,6,-4,-7,4,6,-9,3,-8,3,1,-7,-2,-3,5,-8,1,-8,-10,4,3,9,-6,-1,3,-10,-3,-5,7,-10,7,-7,-1,-5,-9,7,2,-5,10,5,-2,-2,-10,-2,4,9,7,2,-2,2,-6,5,-7,-6,-8,2,6,9,-10,-2,10,-6,7,8,4,3,1,10,10,-4,-9,-10,-2,-10,9,-7,-1,-7,-10,10,-9,4,10,-7,-1,9,-9,2,8,-6,-4,-8,-5,-3,-4,-10,5,10,-9,-8,-9,-10,-7,-2,4,4,8,-3,6,1,-1,10,5,3,-8,4,-7,-8,7,-9,-7,-1,4,-9,3,10,-10,-2,-2,-9,-6,-10,9,7,-7,9,1,8,-5,6,8,2,6,-1,8,9,-4,9,8,-9,6,8,9,3,-4,2,2,-7,7,-7,9,1,6,7,7,8,4,-9,1,-7,-10,4,-2,-2,-9,3,8,1,3,-9,-4,4,-2,-10,-6,7,-7,-9,4,-7,-2,-10,6,4,9,-10,10,-2,-6,7,-1,-7,9,-5,-7,5,5,-10,9,10,9,3,-3,-6,-7,-2,-9,-7,7,1,-6,-5,-4,-2,1,10,-2,-1,-8,-6,10,-5,7,9,-6,7,-9,-3,-9,3,-6,10,-6,3,-8,10,6,-8,7,-8,10,-7,10,-9,4,9,-4,8,-1,-5,1,-8,-3,2,6,5,5,-2,-1,-6,-4,4,3,10,-4,-3,-2,-2,7,-5,3,-6,1,7,-2,6,5,6,4,2,-2,-5,-5,-9,2,-5,5,5,-3,7,-5,-1,-5,-10,2,-8,-8,7,9,-6,-10,-6,-6,1,5,-5,3,1,-3,-4,3,-9,5,4,4,7,-5,-10,-5,-10,-1,3,1,9,-4,-8,6,-10,3,-7,8,-10,-6,-3,1,3,6,-5,9,10,-10,-4,6,-9,10,6,7,-10,-8,8,-4,-3,-9,9,6,-3,8,3,3,-2,6,-10,6,10,3,-5,-8,-9,-1,-5,8,1,7,-7,-6,3,7,-8,3,8,3,5,4,-8,-2,1,-3,3,8,10,9,7,7,10,3,-8,-3,-10,6,-1,-3,10,5,-7,5,7,3,1,-9,-1,-1,9,-1,1,6,-10,4,-4,3,-10,-9,2,10,1,6,-2,-3,1,7,-3,-3,2,3,6,9,4,-4,-1,2,6,6,-5,6,-2,9,7,-10,-1,9,9,-5,8,-1,-4,1,-1,5,-5,-3,7,4,-7,-5,7,8,-1,-1,10,8,-5,3,5,9,2,-6,-7,3,3,4,1,8,-3,-3,-2,-9,9,10,-2,5,-4,-3,9,5,-3,4,1,7,4,8,-2,-3,-1,-6,-4,6,-2,-9,4,-5,-2,-2,4,8,-1,3,5,6,-9,-10,-3,-10,-7,6,-2,-8,-1,-1,10,-10,-8,-6,-1,1,-5,2,7,-5,-1,-6,1,9,-2,6,10,5,-10,-10,-5,10,2,-10,-6,-3,-7,1,-1,-1,-3,-7,2,10,4,1,-3,-1,-3,-3,-7,5,3,1,6,-9,6,3,-9,-10,-5,4,1,2,-6,2,-9,-7,-3,-6,-10,-10,-2,-6,8,-6,6,2], dtype = "uint32")#candidate|3388|(2250,)|const|uint32
call_3387 = relay.TupleGetItem(func_1739_call(relay.reshape(const_3388.astype('uint32'), [2250,])), 3)
call_3389 = relay.TupleGetItem(func_1742_call(relay.reshape(const_3388.astype('uint32'), [2250,])), 3)
func_583_call = mod.get_global_var('func_583')
func_586_call = mutated_mod.get_global_var('func_586')
call_3392 = relay.TupleGetItem(func_583_call(relay.reshape(const_3388.astype('uint32'), [2250,])), 5)
call_3393 = relay.TupleGetItem(func_586_call(relay.reshape(const_3388.astype('uint32'), [2250,])), 5)
uop_3394 = relay.acosh(call_3387.astype('float32')) # shape=(2250,)
uop_3396 = relay.acosh(call_3389.astype('float32')) # shape=(2250,)
func_1343_call = mod.get_global_var('func_1343')
func_1345_call = mutated_mod.get_global_var('func_1345')
call_3398 = relay.TupleGetItem(func_1343_call(relay.reshape(uop_3394.astype('uint32'), [2250,])), 1)
call_3399 = relay.TupleGetItem(func_1345_call(relay.reshape(uop_3394.astype('uint32'), [2250,])), 1)
output = relay.Tuple([call_3380,const_3388,call_3392,uop_3394,call_3398,])
output2 = relay.Tuple([call_3381,const_3388,call_3393,uop_3396,call_3399,])
func_3403 = relay.Function([], output)
mod['func_3403'] = func_3403
mod = relay.transform.InferType()(mod)
output = func_3403()
func_3404 = relay.Function([], output)
mutated_mod['func_3404'] = func_3404
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3409 = relay.var("var_3409", dtype = "float64", shape = (11, 7, 14))#candidate|3409|(11, 7, 14)|var|float64
uop_3410 = relay.atanh(var_3409.astype('float64')) # shape=(11, 7, 14)
func_3014_call = mod.get_global_var('func_3014')
func_3015_call = mutated_mod.get_global_var('func_3015')
call_3415 = relay.TupleGetItem(func_3014_call(), 1)
call_3416 = relay.TupleGetItem(func_3015_call(), 1)
output = relay.Tuple([uop_3410,call_3415,])
output2 = relay.Tuple([uop_3410,call_3416,])
func_3438 = relay.Function([var_3409,], output)
mod['func_3438'] = func_3438
mod = relay.transform.InferType()(mod)
mutated_mod['func_3438'] = func_3438
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3439 = relay.var("var_3439", dtype = "float64", shape = (11, 7, 14))#candidate|3439|(11, 7, 14)|var|float64
func_3438_call = mutated_mod.get_global_var('func_3438')
call_3440 = func_3438_call(var_3439)
output = call_3440
func_3441 = relay.Function([var_3439], output)
mutated_mod['func_3441'] = func_3441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2836_call = mod.get_global_var('func_2836')
func_2838_call = mutated_mod.get_global_var('func_2838')
call_3457 = relay.TupleGetItem(func_2836_call(), 1)
call_3458 = relay.TupleGetItem(func_2838_call(), 1)
output = call_3457
output2 = call_3458
func_3461 = relay.Function([], output)
mod['func_3461'] = func_3461
mod = relay.transform.InferType()(mod)
output = func_3461()
func_3462 = relay.Function([], output)
mutated_mod['func_3462'] = func_3462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2028_call = mod.get_global_var('func_2028')
func_2030_call = mutated_mod.get_global_var('func_2030')
call_3463 = func_2028_call()
call_3464 = func_2028_call()
func_3186_call = mod.get_global_var('func_3186')
func_3187_call = mutated_mod.get_global_var('func_3187')
call_3465 = relay.TupleGetItem(func_3186_call(), 0)
call_3466 = relay.TupleGetItem(func_3187_call(), 0)
output = relay.Tuple([call_3463,call_3465,])
output2 = relay.Tuple([call_3464,call_3466,])
func_3471 = relay.Function([], output)
mod['func_3471'] = func_3471
mod = relay.transform.InferType()(mod)
output = func_3471()
func_3472 = relay.Function([], output)
mutated_mod['func_3472'] = func_3472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2328_call = mod.get_global_var('func_2328')
func_2329_call = mutated_mod.get_global_var('func_2329')
call_3631 = func_2328_call()
call_3632 = func_2328_call()
func_3403_call = mod.get_global_var('func_3403')
func_3404_call = mutated_mod.get_global_var('func_3404')
call_3641 = relay.TupleGetItem(func_3403_call(), 4)
call_3642 = relay.TupleGetItem(func_3404_call(), 4)
uop_3644 = relay.sigmoid(call_3631.astype('float64')) # shape=(4, 6, 10)
uop_3646 = relay.sigmoid(call_3632.astype('float64')) # shape=(4, 6, 10)
output = relay.Tuple([call_3641,uop_3644,])
output2 = relay.Tuple([call_3642,uop_3646,])
func_3657 = relay.Function([], output)
mod['func_3657'] = func_3657
mod = relay.transform.InferType()(mod)
output = func_3657()
func_3658 = relay.Function([], output)
mutated_mod['func_3658'] = func_3658
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3664 = relay.var("var_3664", dtype = "uint64", shape = ())#candidate|3664|()|var|uint64
var_3665 = relay.var("var_3665", dtype = "uint64", shape = (7, 10, 7))#candidate|3665|(7, 10, 7)|var|uint64
bop_3666 = relay.greater(var_3664.astype('bool'), var_3665.astype('bool')) # shape=(7, 10, 7)
output = bop_3666
output2 = bop_3666
func_3676 = relay.Function([var_3664,var_3665,], output)
mod['func_3676'] = func_3676
mod = relay.transform.InferType()(mod)
mutated_mod['func_3676'] = func_3676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3676_call = mutated_mod.get_global_var('func_3676')
var_3678 = relay.var("var_3678", dtype = "uint64", shape = ())#candidate|3678|()|var|uint64
var_3679 = relay.var("var_3679", dtype = "uint64", shape = (7, 10, 7))#candidate|3679|(7, 10, 7)|var|uint64
call_3677 = func_3676_call(var_3678,var_3679,)
output = call_3677
func_3680 = relay.Function([var_3678,var_3679,], output)
mutated_mod['func_3680'] = func_3680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_723_call = mod.get_global_var('func_723')
func_724_call = mutated_mod.get_global_var('func_724')
call_3695 = func_723_call()
call_3696 = func_723_call()
output = call_3695
output2 = call_3696
func_3747 = relay.Function([], output)
mod['func_3747'] = func_3747
mod = relay.transform.InferType()(mod)
output = func_3747()
func_3748 = relay.Function([], output)
mutated_mod['func_3748'] = func_3748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_653_call = mod.get_global_var('func_653')
func_654_call = mutated_mod.get_global_var('func_654')
call_3763 = relay.TupleGetItem(func_653_call(), 1)
call_3764 = relay.TupleGetItem(func_654_call(), 1)
const_3769 = relay.const([[[-3,5,-9,2,7,-2,10,-3,-10,8,-4,8,3,6,1],[8,-10,-7,1,1,-5,7,4,4,5,-3,2,-2,1,7],[-2,8,-9,1,6,8,-6,9,-6,-3,-4,2,10,-10,-2],[5,-3,7,9,2,1,-7,8,4,10,7,-6,9,-10,8],[-8,-7,-5,-3,-2,10,-8,10,-6,1,4,1,4,-5,-10],[8,6,-9,2,7,-10,7,7,-5,4,10,-2,7,2,-2],[-6,2,-6,5,4,1,-9,3,8,9,-2,9,10,9,7],[-6,-2,5,9,7,1,9,-8,8,-10,7,5,-5,-1,9],[-8,3,3,-7,9,8,-1,2,1,7,-6,-5,-2,10,-7],[-3,5,-2,-5,3,-4,-6,7,-6,7,-2,-8,7,-7,3]],[[-7,-8,2,3,2,1,-6,-1,-4,-3,-10,7,-2,-6,-3],[-3,-5,5,3,-3,3,-9,1,-3,-8,-8,-3,-4,9,-4],[-1,3,9,1,5,7,10,-8,-7,-5,-9,-1,8,-7,-7],[7,9,-4,-9,10,-1,-1,-2,-1,10,-4,-1,-1,-2,5],[-9,-9,-4,7,-2,-5,-4,5,5,-5,-3,4,-3,2,1],[-7,10,1,1,-7,-6,5,1,6,-5,1,-1,2,9,-9],[9,-3,2,-5,3,-5,6,-9,-7,3,5,7,-10,-9,-3],[1,8,5,9,4,-1,3,6,-4,-6,-4,2,8,-2,-3],[9,1,8,-7,3,3,8,-1,7,-9,2,-5,-7,-8,-1],[-6,-3,-8,-10,-9,4,-8,7,9,7,-8,-9,5,7,-5]],[[-2,-1,-5,-7,-1,9,-10,10,-8,-3,4,6,-6,1,2],[-4,-6,-9,-3,7,3,-1,-5,-2,9,10,9,-1,6,-8],[8,3,8,-7,10,-5,4,-8,9,3,-5,5,10,-9,-8],[5,1,-1,1,10,-6,6,2,-8,-4,-9,6,3,10,2],[-10,-3,6,10,6,1,-4,1,-9,-7,9,-3,9,-1,-9],[6,-10,2,5,-3,3,-2,-9,5,1,2,-9,7,3,7],[-10,3,4,-6,-1,-9,-1,3,3,1,-1,3,9,8,-7],[6,-7,-7,-6,9,2,-4,-10,-4,-7,8,7,8,1,-8],[8,-6,-2,-8,-8,8,9,-2,8,-4,10,-3,-3,-4,4],[5,-7,10,5,-10,7,10,1,-4,7,-4,-2,-5,9,-3]],[[3,-6,8,10,6,-4,-9,8,8,8,2,4,10,-10,3],[1,-1,6,5,-3,-5,1,-3,5,2,9,-5,9,6,-4],[5,3,-2,-3,5,7,5,6,-8,-1,4,6,5,-5,-5],[8,-4,-3,-9,7,-4,-6,4,-9,4,-5,-2,-8,-4,-7],[-3,8,7,-8,-10,2,9,7,9,8,-7,-2,3,5,-6],[-8,-9,-8,10,3,-1,7,1,3,-9,-5,-3,-5,-8,8],[5,3,-4,10,-7,5,-8,-7,-6,10,1,-2,-4,-5,-1],[6,-8,-10,2,-6,3,-6,-4,1,-1,-7,-8,-9,10,-5],[-6,5,-2,4,-6,-10,4,1,8,9,-5,-4,-7,-5,8],[8,-1,-7,9,-6,4,6,-3,-5,1,10,2,8,10,8]],[[3,1,-8,-6,2,4,7,1,10,-1,-9,8,-7,-3,-10],[-5,5,-7,-4,4,5,1,9,-4,-7,-2,3,10,-4,7],[3,7,7,3,-6,-9,-4,-5,-2,5,-1,10,5,-6,-4],[-5,4,-5,5,-2,4,4,-2,4,-5,5,-6,-9,-6,1],[9,-7,9,4,9,-7,-9,-2,9,7,4,7,9,-10,3],[7,7,-5,-3,4,-4,4,3,4,-1,-3,5,5,-8,-10],[-4,2,-10,-2,3,6,7,1,-7,10,-10,-5,3,-10,4],[-1,-1,-2,10,-4,1,2,-4,-8,2,1,2,-6,5,-7],[9,7,-3,-1,-4,7,8,3,-6,3,10,-9,-9,1,-2],[2,8,-3,10,-5,-10,-2,-6,10,-8,8,-4,-2,2,8]],[[-2,9,-10,3,8,-6,2,7,-5,-10,10,10,-4,7,-6],[2,-5,-9,3,9,-2,2,-5,2,5,-10,9,-9,2,9],[-2,9,-1,-6,-2,10,10,-8,10,-4,1,2,-3,2,-8],[7,-3,-9,7,-3,-10,3,-2,4,2,-8,1,-4,8,2],[-9,8,-5,8,-2,-1,3,-2,-4,8,-4,8,4,-2,7],[2,2,10,5,-1,1,9,5,-1,-6,4,3,7,-3,-4],[2,-8,4,-6,-10,-7,-9,4,-6,3,-4,-3,-9,6,1],[2,-6,2,2,10,-4,-2,-3,-7,3,-2,8,-4,8,-7],[-2,6,1,1,-5,5,7,-2,-4,-1,2,-4,9,-7,7],[-9,5,10,-1,-1,-1,-6,4,1,1,-4,5,3,-5,-2]],[[4,-5,7,7,4,4,4,6,-10,-7,8,3,-9,-7,7],[-9,1,2,-7,5,8,-9,-3,-2,1,-5,-1,10,7,4],[-7,6,9,7,8,-9,5,-1,-4,-1,-2,-2,7,3,-1],[7,-2,-7,3,-6,8,-9,5,9,-3,-4,9,6,-10,-7],[7,-9,8,-9,10,4,-3,10,1,9,10,-8,9,-4,-4],[8,-6,10,10,7,-7,7,1,9,-7,-7,10,-7,-9,6],[1,-5,-10,10,-4,-10,-7,-10,6,-2,8,1,3,6,8],[-5,5,-5,5,-5,-4,10,3,2,1,-4,1,6,-3,8],[-4,10,3,4,-3,-8,3,-2,2,-8,6,-2,7,-3,-10],[-4,5,2,3,7,3,5,-5,-4,1,-10,4,-5,9,3]],[[-10,2,3,3,-9,4,-6,-10,5,6,6,4,7,10,9],[3,-10,-7,10,9,-10,3,-1,7,-9,-4,10,-6,9,-2],[7,10,-2,-10,-8,-4,-1,6,-2,-10,7,-9,-1,-5,10],[1,-5,-5,-1,-9,-2,-7,2,5,-8,6,-8,-4,1,-1],[9,6,-6,-10,6,4,-2,2,-6,-7,-1,-10,1,10,-3],[1,-5,-5,8,8,5,-1,-4,-1,10,-3,-5,2,6,6],[-4,-3,-3,-2,4,-4,-3,-5,8,9,8,-8,4,-6,1],[4,-10,4,5,-4,-5,7,-3,-7,8,8,-8,8,-6,4],[10,-3,-5,4,3,1,8,10,-8,-4,-2,4,-1,-4,9],[-6,-8,-9,-8,-4,-1,-2,1,-2,-8,-9,1,2,8,-10]],[[-6,7,-7,-8,7,7,7,9,-9,8,7,8,1,-9,8],[7,8,-9,-10,10,-8,-9,4,2,-9,1,-6,-6,-10,9],[6,3,1,7,-6,-9,3,7,6,-1,10,2,4,6,-5],[-4,-10,-3,9,-2,-6,-9,-9,-6,-8,1,-2,3,-3,2],[3,-8,-4,-3,10,8,-6,-7,-3,-1,2,8,-5,2,1],[5,-1,-6,4,8,5,-2,-2,8,-3,-6,-1,3,-9,-5],[8,-4,-2,5,-10,-2,10,-9,-6,-8,6,-6,-10,4,-1],[-10,10,1,4,10,3,-10,7,-5,-8,1,-7,-2,5,8],[4,6,-2,6,5,10,9,10,1,10,-6,-3,8,-2,1],[9,-10,1,-4,-5,-4,-8,7,10,3,7,-3,-4,6,-5]],[[10,4,1,-9,2,-7,-9,1,2,3,-3,7,-1,-10,1],[-3,9,8,-3,-8,-10,-1,-9,6,6,-9,2,-7,-8,-1],[2,9,-1,3,3,9,8,4,-2,9,2,9,5,-8,-2],[-4,-4,6,-10,-9,4,-6,-10,10,-3,-2,-8,-10,6,7],[-8,2,4,7,-9,-6,-8,5,-5,10,3,-2,10,5,-1],[-3,3,-10,3,10,-8,7,1,4,7,3,-5,-1,8,-2],[-10,7,-10,2,-8,9,1,4,8,-7,3,2,-4,2,1],[-10,-8,-6,-7,4,-1,5,-9,-5,8,-1,-1,-6,10,-8],[1,3,6,-8,8,-10,6,-2,-6,-3,8,-5,1,-5,-1],[-1,10,2,5,-10,-3,-1,-8,8,-1,-10,7,7,9,8]],[[-4,2,4,9,7,2,10,1,-8,3,1,8,9,5,-1],[9,1,9,-7,-7,-8,6,-4,-9,5,-2,5,4,9,-3],[-2,6,-6,-3,3,-9,10,-2,-2,7,-5,4,2,6,-9],[2,3,-9,2,4,-1,-10,-6,-5,5,6,2,-10,9,-6],[6,10,-5,-8,10,-6,-3,-1,-9,9,-8,-6,4,5,-3],[-2,8,-8,-10,3,8,-2,-4,-2,-1,10,6,10,-3,3],[-5,-3,-6,7,9,7,-9,-10,4,-7,3,-4,5,-8,8],[-2,-6,-5,8,-8,2,-4,-6,4,-8,-7,-10,9,5,-4],[1,-6,-5,-9,3,-1,5,-5,-2,3,2,1,10,-1,-9],[8,3,7,4,-10,-3,3,-8,1,9,-10,-3,-5,10,10]],[[1,1,3,-1,-4,-6,-5,7,9,-3,-1,9,5,10,2],[-7,9,8,-8,1,-3,10,-5,-1,-2,-3,9,-8,-8,10],[-8,4,6,9,4,-5,6,4,2,-8,-2,-9,2,7,-6],[1,-5,1,-8,7,-2,-10,-10,10,2,8,8,6,5,-10],[-10,4,8,9,8,10,10,8,6,2,5,-1,5,3,-1],[-10,-5,-6,-2,1,-1,-9,2,-9,-5,-6,10,5,5,7],[2,6,-4,2,-5,5,5,7,1,-8,8,9,1,5,-2],[3,10,1,10,-9,6,3,9,-3,-5,-9,4,10,1,-3],[-6,7,6,9,1,2,-1,1,2,-2,-4,9,8,3,-5],[-4,-5,-8,-9,6,4,-7,1,-4,-3,-2,-7,3,2,-9]],[[-6,-9,-6,-1,-3,-6,5,1,3,-10,2,-1,7,-6,-2],[8,-10,9,2,-10,5,10,-9,-7,-6,7,3,9,-4,8],[2,5,1,-9,-2,-7,-4,8,-10,8,-3,8,-4,5,5],[-5,-9,10,-2,6,7,2,2,9,-6,2,3,-5,-8,-7],[4,-10,2,-5,-1,2,-4,-1,6,-2,6,-2,-5,-8,-7],[-6,8,-4,-7,7,-9,6,-3,4,7,-4,10,-4,2,8],[8,8,9,8,-2,2,4,-7,-4,-10,4,6,9,1,-3],[-1,-10,-8,-3,-4,1,-6,-3,6,1,8,8,-3,5,8],[-2,10,-10,-10,-5,7,2,3,-4,5,-2,3,9,9,-10],[4,8,4,2,-10,-10,-3,10,-10,-4,2,-9,8,-10,4]],[[3,-2,1,8,7,8,-7,-2,8,1,-6,-8,9,5,-4],[-9,-8,-8,4,10,-6,-1,-1,9,-4,1,-5,-4,-6,4],[-1,-7,-4,8,2,3,8,10,6,9,4,-9,9,-3,-6],[7,2,6,10,7,-2,2,4,-9,5,-2,6,-8,-9,-3],[10,10,-5,-1,10,9,-8,-10,-6,7,-5,-8,4,-9,9],[-6,2,-2,-4,-4,-10,-4,5,-5,5,10,-10,-4,-6,-5],[-4,5,-1,-3,-9,9,1,2,-9,6,-6,5,-9,-10,1],[2,-10,-1,4,-6,-2,-6,10,8,-4,5,-3,8,9,-8],[7,4,-7,-10,9,-7,3,-4,1,2,8,-7,-8,-4,-5],[7,-2,-1,6,-1,-9,5,-2,-5,-3,-10,4,2,4,-9]],[[6,-1,7,-9,-5,-7,1,-6,-3,7,8,4,7,-6,-10],[10,-2,-6,4,1,10,-4,2,-5,1,-10,1,2,10,9],[-6,-9,9,-5,-3,-2,4,5,6,-10,1,-7,-4,2,-1],[-7,9,3,-1,3,-5,-8,-1,-7,-2,5,9,-8,2,-10],[-3,8,-10,2,-9,7,1,5,10,-10,-2,-8,6,-5,-7],[1,-9,2,10,-3,10,-5,9,3,-3,-4,8,6,-7,4],[6,-4,4,6,-1,-5,1,3,9,1,-9,-8,4,-2,-7],[-7,-2,1,6,-10,-8,-1,4,-1,10,-8,7,-7,-2,-4],[-3,-5,9,-1,-3,5,7,-10,-9,-5,-3,7,10,10,1],[4,-4,-1,5,9,2,-9,7,-9,10,-5,-8,4,-6,-10]]], dtype = "int16")#candidate|3769|(15, 10, 15)|const|int16
bop_3770 = relay.equal(call_3763.astype('bool'), relay.reshape(const_3769.astype('bool'), relay.shape_of(call_3763))) # shape=(15, 10, 15)
bop_3773 = relay.equal(call_3764.astype('bool'), relay.reshape(const_3769.astype('bool'), relay.shape_of(call_3764))) # shape=(15, 10, 15)
func_1593_call = mod.get_global_var('func_1593')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_3781 = func_1593_call()
call_3782 = func_1593_call()
func_1964_call = mod.get_global_var('func_1964')
func_1966_call = mutated_mod.get_global_var('func_1966')
call_3800 = func_1964_call()
call_3801 = func_1964_call()
func_2090_call = mod.get_global_var('func_2090')
func_2091_call = mutated_mod.get_global_var('func_2091')
call_3811 = relay.TupleGetItem(func_2090_call(), 0)
call_3812 = relay.TupleGetItem(func_2091_call(), 0)
var_3816 = relay.var("var_3816", dtype = "float64", shape = (2, 15, 11))#candidate|3816|(2, 15, 11)|var|float64
bop_3817 = relay.divide(call_3800.astype('float64'), relay.reshape(var_3816.astype('float64'), relay.shape_of(call_3800))) # shape=(2, 15, 11)
bop_3820 = relay.divide(call_3801.astype('float64'), relay.reshape(var_3816.astype('float64'), relay.shape_of(call_3801))) # shape=(2, 15, 11)
output = relay.Tuple([bop_3770,call_3781,call_3811,bop_3817,])
output2 = relay.Tuple([bop_3773,call_3782,call_3812,bop_3820,])
func_3842 = relay.Function([var_3816,], output)
mod['func_3842'] = func_3842
mod = relay.transform.InferType()(mod)
var_3843 = relay.var("var_3843", dtype = "float64", shape = (2, 15, 11))#candidate|3843|(2, 15, 11)|var|float64
output = func_3842(var_3843)
func_3844 = relay.Function([var_3843], output)
mutated_mod['func_3844'] = func_3844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_993_call = mod.get_global_var('func_993')
func_994_call = mutated_mod.get_global_var('func_994')
call_3875 = func_993_call()
call_3876 = func_993_call()
output = call_3875
output2 = call_3876
func_3894 = relay.Function([], output)
mod['func_3894'] = func_3894
mod = relay.transform.InferType()(mod)
mutated_mod['func_3894'] = func_3894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3894_call = mutated_mod.get_global_var('func_3894')
call_3895 = func_3894_call()
output = call_3895
func_3896 = relay.Function([], output)
mutated_mod['func_3896'] = func_3896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3471_call = mod.get_global_var('func_3471')
func_3472_call = mutated_mod.get_global_var('func_3472')
call_3963 = relay.TupleGetItem(func_3471_call(), 1)
call_3964 = relay.TupleGetItem(func_3472_call(), 1)
output = relay.Tuple([call_3963,])
output2 = relay.Tuple([call_3964,])
func_3979 = relay.Function([], output)
mod['func_3979'] = func_3979
mod = relay.transform.InferType()(mod)
output = func_3979()
func_3980 = relay.Function([], output)
mutated_mod['func_3980'] = func_3980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3186_call = mod.get_global_var('func_3186')
func_3187_call = mutated_mod.get_global_var('func_3187')
call_3987 = relay.TupleGetItem(func_3186_call(), 0)
call_3988 = relay.TupleGetItem(func_3187_call(), 0)
func_275_call = mod.get_global_var('func_275')
func_278_call = mutated_mod.get_global_var('func_278')
const_3992 = relay.const([-7.632855,-6.802300,-2.316441,7.850058,-8.208060,5.767372,-2.796126,-6.693283,-8.605461,-5.586162,-8.471009,-1.568744,6.861443,-0.493978,-9.782947,3.668049,-1.847983,1.213036,5.302924,-0.196221,-4.074370,1.182841,-4.310015,-1.128719,-0.161418,9.277533,6.630951,9.734823,-8.300931,4.623868,-1.475485,6.117258,5.947744,7.035826,-0.119298,-1.940629,5.882835,2.347034,1.199945,-1.384868,-7.863231,-4.686413,4.934192,-3.879035,9.811401,2.205866,-1.747397,6.404824,5.626891,6.906224,-5.018190,-7.533325,2.864570,5.135349,8.991171,-7.741771,9.661017,-2.686125,5.707434,-0.577679,-4.550044,-2.681110,-6.297557,-0.399355,-7.624457,5.590698,7.519857,-7.690545,1.978065,3.608763,3.586858,4.705458,-9.391541,9.303043,-9.082307,5.899301,3.849695,-5.885896,5.298167,9.325691,-9.478485,-0.938738,-9.758022,-5.832068,-8.247354,0.296250,-2.383163,-7.553701,-3.181583,-9.279102,2.472939,3.342811,3.491314,-8.250659,3.101671,-2.998113,8.980648,7.455091,2.109421,9.958593,-3.870336,3.496465,0.277984,1.416652,9.682335,4.961106,4.453256,-6.334853,-1.130600,1.144771,-1.602139,6.098110,-8.549897,-8.240100,-8.365634,7.885121,-5.602928,8.309419,-8.036519,3.162565,-9.583543,-4.291611,2.640285,-6.876990,-9.188349,3.594247,7.179041,-1.968677,-2.746897,9.498823,-9.632655,5.898592,4.855558,6.620024,3.460107,-2.675061,3.580871,-8.922093,8.251005,-2.222887,-4.350001,-0.336938,-5.859462,-2.203651,4.116543,1.405200,-3.024504,-2.084602,-7.358066,-3.807194,-7.283099,0.528235,9.924978,4.322365,9.135804,-0.116593,8.323277,8.855972,7.205980,-7.796883,-7.122600,2.477345,-4.705333,-6.191006,8.351378,4.113172,6.485859,3.874420,-1.391412,3.252661,-6.717225,1.170051,6.763381,5.237389,-3.285596,6.854689,4.528336,-0.922574,5.021318,-9.889704,7.383210,-6.417738,0.147450,3.185940,-6.459447,2.298835,1.889995,6.093415,4.086145,0.685917,-0.281079,-9.220613,4.353107,-4.409082,-1.546035,2.022188,-2.044921,-3.984939,3.128599,6.929592,0.179505,-2.197510,0.886165,4.193720,-1.927289,4.303320,1.449135,0.030392,-3.401009,8.855219,-7.130491,-1.900698,0.183998,-4.692990,-7.212846,-0.359533,-6.250957,-3.550032,-8.467289,3.189780,9.654919,-9.142281,-3.927226,5.011281,6.509066,5.432543,-2.725000,-0.725319,4.134719,-1.954036,-0.673601,4.462366,-8.633062,-1.979285,9.030542,6.465838,-1.935219,3.914962,1.753097,2.679817,-2.786080,2.146956,-6.079771,-9.534373,-7.773344,-8.232550,0.227522,-6.488309,2.173656,5.943339,-5.142137,8.413147,-9.926596,6.234086,-7.721152,-1.170109,-4.732584,9.466996,1.260909,-0.694733,-4.010850,-7.176335,-4.045619,5.767306,3.292730,-3.728014,-9.315246,5.757971,-4.588156,-0.631082,7.260957,3.841632,-7.910085,7.566878,-2.232394,-6.385151,-3.026526,6.892327,4.634355,-6.175845,5.967834,-4.767652,7.246244,-8.358611,-5.848328,-1.823833,4.590987,2.813658,-8.934612,8.601809,-1.980073,7.297326,-2.969202,9.011502,-0.658499,-7.195230,-5.032922,4.524109,-4.261468,-7.204521,-4.631224,3.675569,-8.728653,-1.409288,4.709575,-1.624059,6.093264,-2.833279,-5.591739,1.557447,8.700352,-0.557059,-1.516450,0.036847,6.128168,5.612384,-1.100093,9.671952,-9.456220,9.638585,0.404946,8.461717,-7.307861,-7.562194,-7.605865,1.106118,2.780258,7.357363,3.009135,3.536786,-2.115854,-5.387269,6.235763,-0.898397,6.033049,0.374404,1.276302,3.531073,-6.812792,-1.840869,4.629095,-2.915081,3.201405,-6.640517,4.012465,5.734899,2.886723,-4.020039,1.706119,-6.483150,9.796907,3.974217,-0.388227,-4.081932,-5.898674,7.013190,-4.889478,-8.333953,-9.398630,-8.058208,-8.063049,0.172384,8.651798,-9.816332,-6.124994,-7.789889,-7.787674,-1.204447,-4.943655,2.461842,6.504754,2.841343,3.721035,0.319144,-2.458914,4.839537,2.818545,-8.597701,-7.681802,5.194282,6.409369,-7.642520,5.700767,6.545335,4.107437,-2.533842,6.927838,-9.300355,-3.735101,-8.015231,1.226621,4.118865,0.639713,-5.029323,0.587445,-6.064630,2.245481,-0.406442,-3.067694,-4.352357,6.832554,-6.077540,-8.394383,7.534338,4.083659,-1.950950,5.745440,4.975875,9.734757,-2.765901,-8.883921,-2.761292,-2.229949,-1.354784,-1.554818,-5.758486,-0.387699,-1.234781,-7.687096,8.716879,-3.283140,-0.666140,8.988620,-6.948422,0.657754,2.101485,4.604798,5.493619,6.606053,-8.893717,3.365592,2.061529,-8.215624,-7.003992,7.021775,-3.429313,3.927871,0.318243,-3.435049,-2.722847,-2.399190,2.662663,3.695380,0.292217,4.553963,-0.460093,2.823433,-2.153908,1.533620,-9.734644,-0.054309,-5.301136,0.828686,-1.528948,1.118456,-9.771227,2.305827,-8.625707,-8.658603,4.060911,6.078359,-6.442624,5.935373,-6.644007,-2.769003,0.322897,1.007293,-8.430219,8.809059,5.305407,2.899942,-2.993347,2.433535,5.450965,2.207750,5.076766,-8.778285,7.587498,-2.674582,7.013073,-5.333183,1.036374,-3.295867,-4.422783,3.580074,4.465563,8.902354,3.545801,-6.061739,5.893170,1.699278,-5.492844,-1.957087,9.334534,-4.306995,4.535285,8.966147,-6.510709,5.538325,3.069185,-1.037094,7.549863,-7.802039,3.941799,-1.515984,-3.172378,4.410815,7.556220,-9.478347,4.020850,7.090481,3.866876,2.963084,9.058515,6.691625,4.108592,1.794704,1.851699,2.456195,-5.645375,3.827506,6.077721,0.146494,7.786885,0.994837,-7.928961,4.752112,3.139812,-8.574011,6.379946,1.271075,4.193489,-2.213711,9.387510,0.756694,6.470943,-2.278145,-1.854577,5.000101,-1.786433,-3.116055,-3.147709,-9.476462,-2.709370,-9.667633,-4.826814,8.062764,-1.513031,2.425356,7.429092,8.584205,1.013123,-9.555779,1.785416,6.369300,-0.827740,6.739381,-3.065908,7.392807,-4.194197,-8.398777,7.718066,-2.929681,5.617463,3.652813,0.368126,5.999986,7.372958,-2.913496,-8.753438,-2.075907,3.022833,4.982766,2.474181,-2.901147,-2.237383,9.153264,-8.685988,0.686686,8.789856,7.872969,5.442920,0.508630,-5.058969,9.283425,-7.835140,4.948379,9.414254,5.989055,6.499944,-6.366077,-6.966722,-8.620686,-0.546025,4.730427,-9.821315,-5.875578,5.815528,-9.953529,8.021228,-2.968204,9.635490,9.703151,-6.101676,-9.183745,-5.504828,2.010570,-2.852439,-2.468329,5.376334,-5.273582,-1.470499,7.606244,-6.248552,7.951014,-7.612259,3.723705,9.190497,-1.252057,1.418022,-0.773726,-5.846510,2.231740,7.283844,3.512392,7.669710,-2.177199,-1.000743,6.572968,-6.577485,-4.919730,4.168563,-0.619783,-0.845289,-2.692822,4.510034,0.506681,5.889760,-9.466653,-6.569889,2.195116,9.248053,3.230851,-8.085336,1.194957,6.036296,6.860398,8.079779,-5.319202,-8.974065,-7.639012,0.162209,3.317628,-8.597045,5.658382,2.475222,-5.504899,-6.004531,-6.680908,-5.229761,6.909059,0.403895,-4.516578,1.716181,-8.996589,-3.513494,8.053138,5.585151,-7.855602,5.831488,-7.566410,-2.778918,7.880866,7.816498,4.613250,0.173988,3.521136,5.390486,-1.507533,-5.067950,8.851850,1.829146,-4.058822,2.637877,-1.563011,-2.696054,-4.834478,7.317679,-1.524161,2.399608,-8.348568,-9.564328,-7.629967,-7.018208,-1.189646,3.593075,5.438199,8.944380,9.720642,-5.125657,4.261353,8.495285,2.531738,0.519960,4.132744,-2.756100,-8.572279,9.870005,-9.343381,4.698300,7.767658,-9.542870,9.442237,-7.574207,8.633193,-9.235989,-1.282100,-7.031554,-1.916988,1.116737,-3.209746,3.064510,-1.380632,2.870515,-1.653027,-6.667035,-5.657840,-4.088509,-4.079344,-6.896836,9.352363,-8.175110,-7.641563,-1.536200,-0.390523,-6.038430,2.017979,1.310066,0.757154,-4.917744,6.789393,2.775324,-7.888212,0.002847,-9.601386,-8.993108,-0.489316,5.101444,3.741230,6.829308,4.286953,-1.134812,-8.443825,3.469896,6.640266,1.779136,-4.204763,-7.049471,8.123184,2.676260,3.005726,5.493327,-4.346460,9.990610,-6.871460,8.444340,-3.789236,-2.460079,-2.031639,-7.440157,-9.051146,-5.691358,-1.719057,7.222860,3.051973,-9.451890,-7.121880,-1.491138,-4.633622,-1.868856,3.693063,7.175278,0.222617,-5.449556,3.327642,5.770887,-7.331171,-4.905231,-9.753073,-7.163280,-7.243749,7.978807,4.265572,2.322718,0.907463,-4.970924,9.313660,-0.364872,-7.270853,-7.712116,-2.326913,4.811294,-2.361053,1.802051,1.105409,-3.354108,-5.212516,-1.868269,8.850449,-8.564869,7.019280,2.534012,-7.852524,8.334837,-0.542254,-3.668413,-9.986974,-5.046380,0.835200,3.959455,5.425952,-5.600404,9.602080,8.314403,-2.896112,2.992714,4.046583,-7.104552,7.460556,-5.153045,-7.879634,-0.249331,-6.786503,8.739256,-3.161020,-0.364519,-8.948855,-1.019880,8.641616,-7.200433,9.560947,3.490926,7.247198,-6.034938,3.425082,-7.373629,1.268705,-6.468859,8.031368,2.899824,3.427284,-2.391620,-5.004518,7.196059,-7.092729,7.301399,-9.734444,-7.992178,-6.960178,-7.619167,7.920494,5.483146,2.284206,-0.343347,9.742733,-7.007072,9.042154,-5.931557,1.415151,5.111109,-9.060387,2.091574,9.655173,-5.044782,-9.059179,-6.807593,5.505954,-7.792408,8.526446,-8.319348,-4.374998,7.580415,2.397412,0.725297,-1.089166,-5.963958,4.260501,6.147373,-1.706978,5.923413,-5.636362,-0.430603,4.076705,-1.018956,-7.115350,-8.054070,2.002057,-5.859350,0.919340,-9.658745,8.987806,-5.501231,-2.113224,1.897743,5.360278,-3.572644,-3.000011,-6.112016,4.147753,6.229304,9.251897,2.966709,4.562967,9.403143,0.340045,-3.003680,-8.166624,-3.576015,-9.069410,9.795152,-2.495166,3.073497,3.366198,-7.348810,-8.741316,-8.430359,4.625749,7.348703,6.683163,-0.251208,-0.203337,4.109760,5.999552,6.100907,-9.646764,-2.445107,-4.264073,5.836308,2.484043,3.345883,3.784766,9.368218,7.751319,-7.501328,6.383836,7.101176,2.897637,-3.892216,-0.418449,6.510334,1.666858,3.760931,9.943691,5.567902,6.339496,0.255575,-9.748315,2.654685,1.968483,-6.766677,-4.071483,-0.456714,5.421009,6.300655,-4.915766,-2.669095,-0.824672,-7.361941,-6.479009,-2.137335,-3.309746,8.655046,-4.799763,-1.210009,-3.013496,-9.138435,-9.826874,-9.884300,9.742001,-8.442474,-1.861164,6.771320,-7.321834,7.357101,5.877557,-6.697283,1.290170,-8.613177,6.986804,3.394527,-3.884006,-9.149051,-8.466450,-4.140413,-0.591578,0.926251,9.020608,7.180437,-2.330439,-0.013887,-8.288178,0.581826,-6.808425,3.462929,-0.920482,6.416170,-1.032963,-8.160501,2.770919,2.678370,0.495971,-7.891225,2.036417,-0.552807,-0.988108,-1.194089,-6.591312,-1.003303,4.549977,-3.591697,-1.604001,-4.366958,7.492258,4.284574], dtype = "float64")#candidate|3992|(1024,)|const|float64
call_3991 = func_275_call(relay.reshape(const_3992.astype('float64'), [4, 16, 16]))
call_3993 = func_275_call(relay.reshape(const_3992.astype('float64'), [4, 16, 16]))
output = relay.Tuple([call_3987,call_3991,const_3992,])
output2 = relay.Tuple([call_3988,call_3993,const_3992,])
func_3997 = relay.Function([], output)
mod['func_3997'] = func_3997
mod = relay.transform.InferType()(mod)
mutated_mod['func_3997'] = func_3997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3997_call = mutated_mod.get_global_var('func_3997')
call_3998 = func_3997_call()
output = call_3998
func_3999 = relay.Function([], output)
mutated_mod['func_3999'] = func_3999
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4013 = relay.const([[[-8.723883,9.635449,-1.521494,-6.897193,9.583520,0.698923,-9.544534,2.674991,-4.999224,1.720988,-1.641331,7.340657,0.778995],[4.918571,-2.592805,-6.372419,5.900369,-8.447936,5.994094,9.960858,4.304025,-3.632109,-1.265963,3.076755,7.087483,-8.714437],[0.185487,-0.695306,8.636697,0.828040,7.202447,-9.482769,-3.729718,-4.178832,9.311784,-6.086146,7.975144,5.237796,-0.281471],[-8.798533,8.172793,-8.323642,-2.466573,-2.066570,-8.566471,5.565879,5.597539,-2.531549,-1.065974,4.806091,-0.723988,-2.065953],[-4.470094,0.333216,1.918558,-2.650022,-8.878093,5.171947,7.683739,5.436481,8.358481,9.834920,-1.432788,-7.955305,9.060047],[1.088408,7.858570,4.081970,5.591256,5.435154,-1.572104,7.699870,-0.896263,-6.731148,-4.881412,2.228374,-9.484553,-3.533093]],[[-2.917800,-3.730199,-9.203501,8.711106,0.633755,0.487174,-1.926273,6.186982,-6.622113,5.411219,1.360633,8.559251,1.224855],[-4.314740,5.385632,9.592584,9.388155,8.991819,1.473043,-4.909822,3.331400,6.853196,-4.190970,6.546437,7.722137,5.782374],[-1.215334,6.098316,8.558626,8.839173,-1.759180,-8.551936,-2.423418,-9.432825,-7.308817,7.695721,-0.886723,7.887696,5.742753],[-3.343396,-6.714393,-7.013356,-3.658389,-9.824884,0.179157,-8.942160,-8.219437,2.465721,5.581003,-9.796712,-2.599206,8.362879],[-1.752115,1.586814,3.547450,0.043117,0.078750,-3.929601,0.497671,4.728941,8.316049,-5.790637,-9.578601,-1.161641,3.122260],[-3.356857,-5.953870,8.033632,-1.966294,6.517510,-6.993865,4.207369,-7.719045,0.653419,5.103719,-9.995191,-9.138843,-9.364103]]], dtype = "float64")#candidate|4013|(2, 6, 13)|const|float64
uop_4014 = relay.cos(const_4013.astype('float64')) # shape=(2, 6, 13)
uop_4018 = relay.asinh(const_4013.astype('float64')) # shape=(2, 6, 13)
func_2905_call = mod.get_global_var('func_2905')
func_2906_call = mutated_mod.get_global_var('func_2906')
call_4023 = relay.TupleGetItem(func_2905_call(), 1)
call_4024 = relay.TupleGetItem(func_2906_call(), 1)
func_2028_call = mod.get_global_var('func_2028')
func_2030_call = mutated_mod.get_global_var('func_2030')
call_4038 = func_2028_call()
call_4039 = func_2028_call()
output = relay.Tuple([uop_4014,uop_4018,call_4023,call_4038,])
output2 = relay.Tuple([uop_4014,uop_4018,call_4024,call_4039,])
func_4049 = relay.Function([], output)
mod['func_4049'] = func_4049
mod = relay.transform.InferType()(mod)
mutated_mod['func_4049'] = func_4049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4049_call = mutated_mod.get_global_var('func_4049')
call_4050 = func_4049_call()
output = call_4050
func_4051 = relay.Function([], output)
mutated_mod['func_4051'] = func_4051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_723_call = mod.get_global_var('func_723')
func_724_call = mutated_mod.get_global_var('func_724')
call_4078 = func_723_call()
call_4079 = func_723_call()
func_448_call = mod.get_global_var('func_448')
func_452_call = mutated_mod.get_global_var('func_452')
call_4080 = relay.TupleGetItem(func_448_call(relay.reshape(call_4078.astype('uint32'), [15, 10, 15]), relay.reshape(call_4078.astype('uint32'), [15, 10, 15]), ), 0)
call_4081 = relay.TupleGetItem(func_452_call(relay.reshape(call_4078.astype('uint32'), [15, 10, 15]), relay.reshape(call_4078.astype('uint32'), [15, 10, 15]), ), 0)
output = relay.Tuple([call_4078,call_4080,])
output2 = relay.Tuple([call_4079,call_4081,])
func_4090 = relay.Function([], output)
mod['func_4090'] = func_4090
mod = relay.transform.InferType()(mod)
output = func_4090()
func_4091 = relay.Function([], output)
mutated_mod['func_4091'] = func_4091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_993_call = mod.get_global_var('func_993')
func_994_call = mutated_mod.get_global_var('func_994')
call_4128 = func_993_call()
call_4129 = func_993_call()
var_4131 = relay.var("var_4131", dtype = "bool", shape = (8, 128))#candidate|4131|(8, 128)|var|bool
bop_4132 = relay.floor_divide(call_4128.astype('float32'), relay.reshape(var_4131.astype('float32'), relay.shape_of(call_4128))) # shape=(8, 128)
bop_4135 = relay.floor_divide(call_4129.astype('float32'), relay.reshape(var_4131.astype('float32'), relay.shape_of(call_4129))) # shape=(8, 128)
output = bop_4132
output2 = bop_4135
func_4142 = relay.Function([var_4131,], output)
mod['func_4142'] = func_4142
mod = relay.transform.InferType()(mod)
mutated_mod['func_4142'] = func_4142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4143 = relay.var("var_4143", dtype = "bool", shape = (8, 128))#candidate|4143|(8, 128)|var|bool
func_4142_call = mutated_mod.get_global_var('func_4142')
call_4144 = func_4142_call(var_4143)
output = call_4144
func_4145 = relay.Function([var_4143], output)
mutated_mod['func_4145'] = func_4145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2090_call = mod.get_global_var('func_2090')
func_2091_call = mutated_mod.get_global_var('func_2091')
call_4212 = relay.TupleGetItem(func_2090_call(), 0)
call_4213 = relay.TupleGetItem(func_2091_call(), 0)
func_1054_call = mod.get_global_var('func_1054')
func_1055_call = mutated_mod.get_global_var('func_1055')
call_4214 = func_1054_call()
call_4215 = func_1054_call()
output = relay.Tuple([call_4212,call_4214,])
output2 = relay.Tuple([call_4213,call_4215,])
func_4219 = relay.Function([], output)
mod['func_4219'] = func_4219
mod = relay.transform.InferType()(mod)
mutated_mod['func_4219'] = func_4219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4219_call = mutated_mod.get_global_var('func_4219')
call_4220 = func_4219_call()
output = call_4220
func_4221 = relay.Function([], output)
mutated_mod['func_4221'] = func_4221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3657_call = mod.get_global_var('func_3657')
func_3658_call = mutated_mod.get_global_var('func_3658')
call_4229 = relay.TupleGetItem(func_3657_call(), 0)
call_4230 = relay.TupleGetItem(func_3658_call(), 0)
func_1268_call = mod.get_global_var('func_1268')
func_1271_call = mutated_mod.get_global_var('func_1271')
const_4236 = relay.const([[-0.858904,5.074271,-8.258361,-4.099400,1.759702,8.748158,-1.848871,7.339590,8.739228,7.243050,-9.362848,-6.157673,9.027187,3.742496,-3.412362,-0.401435,-0.980321,5.171339,-8.840321,4.702862,-2.223460,4.986639,9.753454,3.267577,9.686855,8.636138,-8.950354,-5.134149,6.956528,5.040666,0.854535,-0.604218,6.560054,-1.153345,-7.629725,1.009529,-3.340104,8.124778,4.965690,9.030147,3.387654,-2.560155,-1.068118,-8.311810,0.065376,5.589240,7.415867,-3.933711,2.162464,-2.344315,6.419551,7.917363,-2.259388,2.826052,2.938648,9.983461,-4.203852,-5.045951,-7.177283,-5.538974,-7.297445,0.440092,-8.025669,9.383749,-7.288555,3.202194,3.794959,-4.058452,1.602883,-2.815024,-8.423762,-6.386284,4.860694,0.733365,9.322542,3.402634,6.800860,1.825198,1.263388,-6.303470,1.783486,8.133160,-4.317040,-9.461660,6.978057,-7.125977,-9.951241,-0.247073,8.229952,-4.441097,-2.170024,-5.691419,-9.475215,2.323167,-7.905692,2.503956,7.588078,2.442800,-7.773606,4.323782,-2.447349,7.597773,-6.936283,-7.473907,8.264388,-7.896036,5.696528,-2.800184,2.834190,5.928794,9.300957,9.521189,5.749701,-7.960493,-9.015969,8.757146,9.594949,-1.131684,6.159297,2.757029,7.677591,-9.102977,-5.585059,-9.530058,-3.986322,-3.570125,-0.557164,-1.427507,-9.164877,-4.359918,-9.823786,6.723736,-3.139933,-9.133182,-0.948304,6.313406,0.940900,-5.190997,-7.722971,1.161081,-4.250850,-9.232252,1.236649,-0.791613,2.806049,5.317047,8.676847,5.286544,-1.872004,7.669500,4.701862,-5.930612,-7.565414,-8.756615,3.745134,7.768010,8.823228,-3.130363,-3.949118,-5.240515,7.698075,3.129843,-7.616858,4.003105,-2.058864,-4.827491,1.955864,1.776924,6.147474,-3.301338,0.462503,9.035516,5.537921,-0.047016,-3.472279,6.125773,-6.340956,-2.325020,3.939686,1.640738,-5.776271,5.130238,-8.776713,9.090485,-3.580384,-3.416875,1.561303,0.814206,6.669933,-9.303372,-9.900860,-8.268985,2.696121,-1.728183,-0.685155,-2.274612,6.739837,-4.753011,-5.507928,4.700128,5.542222,0.750848,9.311258,7.369582,-1.518685,6.300203,3.282763,6.799311,-5.588753,0.586871,0.218360,-5.307136,9.995826,-7.668858,-2.968016,-1.243154,2.180925,0.166494,-5.410358,1.664348,-2.929757,-3.685465,-3.988851,-8.018143,3.318360,9.324731,-3.050208,0.067750,-0.478004,4.394040,0.573652,-2.532692,5.107851,-7.363697,-2.343083,-2.948210,-0.154721,-4.283217,-7.560428,3.989315,-3.370058,-5.535240,-3.411720,-2.589582,2.272034,-7.184226,-4.278633,6.639627,-8.603238,1.120579,-1.062205,9.119262,-3.829738,8.050207,0.088950,-6.084759],[-7.539412,-8.235911,-9.703097,4.089311,-7.763320,3.424797,6.391142,3.711297,-9.374743,-0.150644,-8.950918,6.231007,-6.826322,-5.725440,1.535436,1.906285,8.542570,8.494129,4.850424,-9.419576,-2.297414,-7.361761,-1.817867,0.935771,-4.678702,0.952761,0.369057,-8.443452,-9.451817,8.488133,4.128120,9.387809,-8.592110,5.167677,6.673599,-3.057027,1.428817,2.113617,-9.023043,-4.076303,9.834211,8.145651,-8.729761,-9.274536,-4.434880,-6.995100,-2.495628,2.684116,-5.430609,-4.118329,-1.315872,8.147341,5.694518,7.075720,3.375050,8.549877,-3.532013,-8.861773,-0.593823,8.892194,-7.382044,-2.380837,5.881092,-2.188761,-3.522008,1.670370,8.247771,-7.557035,-1.950006,-3.839837,6.838098,-4.428805,-2.152686,-4.412536,0.389274,-3.658704,-2.940016,-3.379382,-6.729766,1.898624,-0.643060,6.458647,-1.723145,-8.568690,8.952435,-8.069238,-8.069988,-9.413286,3.484259,0.420237,-0.667501,2.742974,6.434598,-3.399629,-5.053203,-0.777150,1.624844,-1.951585,-3.387654,-7.274439,9.905087,-6.361599,7.928722,-1.501394,-6.910096,0.090044,6.171328,6.746754,-7.569819,-0.667903,7.836147,9.122987,-7.903457,-7.947923,0.311647,4.221483,-0.119441,-8.684520,-6.752267,-2.740910,4.416184,-0.640771,-1.535775,2.165402,1.116380,1.179578,-8.690537,3.367242,-3.806338,4.472944,-2.206393,-0.243018,5.061774,-6.966616,-2.389559,-4.939615,-7.687875,-6.187435,-9.548946,-4.967123,-6.811830,-7.026460,-3.518511,6.809481,-5.909496,-9.845604,4.883402,9.723528,-3.363309,9.895688,-8.584295,-5.484952,-0.508558,-2.156901,-2.568319,-0.381837,-6.869363,6.942659,7.052982,-8.845202,-9.455379,-8.772414,5.144848,-4.353216,-6.778443,-8.757992,7.667203,9.888744,-7.352129,-0.551242,-6.565036,1.933045,5.268561,-1.767666,4.271563,-3.099004,4.370314,-0.694708,-5.191434,-4.363255,-4.599621,-6.590781,1.119456,6.713812,9.082936,-6.194768,-7.751858,-6.089184,6.926203,-3.095812,4.136010,-4.217183,-9.172048,-6.288965,9.025422,4.583190,1.274561,3.856129,4.856588,-9.503137,-9.792082,3.695765,-4.212250,-0.970773,-7.913401,9.899903,-4.746625,-4.395272,-1.820675,3.144651,-7.780946,5.494534,-7.607457,-0.819293,6.871511,-9.392354,-3.362407,-8.869174,-9.070848,-1.251778,-5.696212,-9.518449,4.347097,4.557323,6.335865,9.365561,2.162836,-0.214304,3.012959,4.008624,4.113958,-9.338108,8.579371,9.393082,0.576589,-2.862743,0.551477,-3.613659,-5.533835,-3.500876,0.866817,4.356799,-4.943775,-3.542798,-0.424637,-6.693511,-2.791616,9.458044,1.707873,7.043349,-8.987796,-6.110358,-9.037269,-7.818868,-3.112679,4.770639],[-6.639774,-4.433742,-8.389179,-1.435826,0.170848,-7.301701,1.544450,3.330615,-3.368033,-0.745531,3.923128,-2.316296,7.125884,-4.226588,6.290730,2.120935,-3.126752,-3.532443,8.859406,4.465300,7.016993,-0.095170,-6.466205,-1.915538,-7.829157,7.272824,3.587015,1.359811,3.689225,6.300186,7.744313,-3.712065,-0.680398,-8.924932,-8.528457,-2.695743,-4.054473,-3.935020,1.503189,2.296448,5.409546,4.968016,9.921472,-8.980476,-0.578605,2.862643,-7.134427,3.996034,6.035796,-4.567644,8.544537,3.336386,3.790585,-7.674339,-8.507461,-6.739199,2.837149,4.008448,0.467218,7.790285,3.208934,4.239540,-0.984141,-3.548053,9.074670,3.491947,-9.889530,-7.341593,1.269003,-7.470664,-4.427726,3.678701,-1.847073,-2.490431,-9.217042,7.874655,0.975765,-2.866291,1.929403,7.202785,4.854617,5.534277,2.435567,-5.381600,1.891351,0.733642,0.672871,7.144340,4.326626,3.969629,2.972345,3.873152,-4.297449,-5.039281,-3.629802,-5.681632,9.314803,4.345548,3.085404,5.774423,-2.837776,-3.597493,7.064051,2.849349,-8.802074,4.432027,0.696849,-2.235453,-0.531441,8.868054,-0.648869,-6.231294,-9.672401,-4.931448,9.451358,-8.320798,-9.007001,-9.381610,-7.294642,-7.958164,-1.424008,-7.800066,-4.650676,1.829086,5.755873,-1.011781,-7.119113,0.679691,-3.023027,-1.914139,5.820062,-8.326773,-7.667950,-1.690006,-1.787494,6.757951,-5.378312,8.215326,-6.600845,4.065550,5.674003,8.464940,-7.264016,-3.334601,-5.342125,5.164049,5.978233,-1.626976,-8.210662,-2.859743,5.768651,8.829424,4.157857,9.023458,-3.179256,-8.212715,-3.916615,6.663404,-7.080385,0.040797,5.615532,1.080126,-1.004118,-8.666296,-1.468892,-6.877353,-6.757539,2.530670,-4.759038,8.352143,7.054218,-4.487523,8.679899,-7.840538,-9.462737,-5.366886,-7.937706,-1.861881,9.105356,5.228946,-8.867531,-9.963149,-6.764160,-4.407268,-9.451813,2.972156,5.279648,8.746362,7.040663,8.282996,1.575089,4.935739,6.091576,1.342738,-7.364558,-7.812412,-8.804173,8.249202,-1.471590,1.831747,1.705209,-8.392768,-6.740957,5.285389,4.442529,5.392621,2.315305,8.338103,5.895340,5.919857,6.802985,-5.137371,-9.510467,-9.720907,8.944596,7.180033,-8.106648,-9.640974,6.563034,3.590156,-4.248805,-4.946302,2.267963,-1.629078,-6.410152,5.681149,8.012864,2.791967,0.818571,-0.915969,2.095528,-4.069261,9.528369,-7.200068,-4.919702,2.773674,8.257338,-6.911891,4.090955,0.301528,6.064348,-2.779346,-8.284576,-8.241640,6.312454,-1.475718,5.280371,1.749074,8.861115,2.416718,9.762130,-5.943543,-1.794230,0.874717,6.461116,4.974083],[0.362009,8.961075,5.656912,-0.006041,-6.926514,7.467168,4.256050,-3.836790,6.461736,-8.569469,7.246434,7.904858,-3.864480,5.882320,9.561967,-8.218456,-8.961345,-6.196448,1.119337,6.660846,6.728445,7.432036,5.709092,-9.012950,-6.379905,9.830056,9.342707,3.845322,4.650724,-1.409965,-2.191921,-3.490877,-2.497245,-3.787193,0.254405,-5.082956,7.054311,5.820389,3.994981,5.139590,-2.322137,0.616091,0.016991,4.464532,-8.529516,6.667800,-5.962427,9.803834,-9.905322,7.888279,0.314235,-0.623042,3.331946,2.201938,1.453655,-2.107626,7.983433,-9.181854,7.880387,-3.132015,7.926571,-9.534360,8.002408,-1.124479,9.173066,7.608996,2.258481,0.368264,1.196100,-6.185502,0.263341,-9.142628,-0.104895,2.797223,9.940710,2.073922,7.516861,-7.026384,-5.713947,-3.850458,-9.066552,-4.768598,-7.385975,3.591526,9.000415,-4.653119,-4.891049,4.611599,9.035309,-2.891077,-6.344739,4.478151,5.264242,-4.738352,9.614111,-2.634531,-2.534765,2.384234,-8.352313,-0.524538,-3.434804,3.315470,-4.264991,-0.829166,1.753605,-2.355142,-0.578171,-3.476381,9.868581,6.628454,9.509178,5.187150,5.422779,-2.586437,5.154229,3.118667,-6.372896,-6.499592,2.353787,-2.059587,-1.656216,7.750451,4.381431,-5.907229,-6.350576,5.798162,3.766765,-6.354045,1.394427,3.277757,4.878020,7.966353,3.358347,-3.124316,-5.994144,2.617392,7.726677,2.704144,-1.083104,-8.768162,-5.894696,1.608338,-4.792659,-8.939967,-1.608111,-8.407836,-6.699428,8.659966,2.938824,-8.316898,4.855936,-4.932829,-4.543638,9.745507,-8.734930,-6.341215,9.574467,-4.993603,9.845966,6.371920,-8.459195,8.279835,3.312521,-4.689929,0.277262,-0.324622,7.100014,7.784462,3.014402,-8.056595,-8.408554,-1.245738,-2.379623,9.449722,3.627500,-9.171978,-5.700489,-2.858571,-1.498271,4.328856,2.463027,-0.617922,-6.325444,6.220615,-0.809135,7.278384,-8.252249,-9.818512,6.420109,-3.856446,0.426050,-5.528582,-1.076334,6.215115,-3.069746,-3.005443,4.303495,-2.156463,3.608212,2.367021,4.063585,-2.740109,-3.922917,4.333503,7.083174,-3.715751,-1.450287,-2.123845,8.750849,2.375052,-6.177653,1.918080,4.972871,-1.145418,0.331774,-2.370464,-1.608462,-2.409948,-1.126421,-8.352230,5.708819,-5.610987,-6.676006,9.604039,-1.879826,0.657232,-1.991229,-8.798924,-6.773555,-8.326900,-9.303833,-6.933093,-2.568995,3.745863,-5.621980,-2.388653,-2.289342,6.011664,1.255763,-9.726662,-7.017887,5.831127,5.589087,-6.841112,-3.834387,7.688574,8.881532,4.239991,8.740824,-8.724808,3.920553,3.544186,4.493188,-0.126926,0.499946,3.767715]], dtype = "float64")#candidate|4236|(4, 256)|const|float64
call_4235 = relay.TupleGetItem(func_1268_call(relay.reshape(const_4236.astype('float64'), [2, 512])), 1)
call_4237 = relay.TupleGetItem(func_1271_call(relay.reshape(const_4236.astype('float64'), [2, 512])), 1)
func_2578_call = mod.get_global_var('func_2578')
func_2581_call = mutated_mod.get_global_var('func_2581')
const_4244 = relay.const([[-3.803823],[-0.493718],[-9.393342],[0.541187],[3.189854],[2.576350],[5.011198],[-2.680875],[2.025775],[-1.828573],[-7.850128],[-7.805878],[8.625942],[-1.145620],[0.716984],[7.332044],[5.167621],[-3.466805],[-1.114308],[-7.743745],[-0.402420],[-3.610730],[7.341592],[-9.206752],[9.093018],[-9.366853],[3.244589],[-3.211796],[-7.458938],[8.979445],[7.608283],[-6.466134],[-6.750255],[-3.978036],[-9.810818],[5.160844],[-7.497935],[-8.421720],[-1.723074],[-0.098588],[4.627711],[-9.024251],[-2.977055],[-0.618119],[8.129039],[-5.642243],[-9.685995],[9.810134],[4.581400],[6.497496],[-5.362021],[7.590096],[-3.546418],[-8.942952],[-8.074724],[-3.285090],[-3.269256],[4.741935],[5.416504],[1.194746],[7.925277],[9.997902],[-3.818266],[-1.530826],[5.402691],[7.934331],[-1.671898],[-5.048683],[-6.051539],[-4.911717],[-6.573409],[8.864187],[4.064757],[1.823635],[-0.746832],[3.538585],[-9.926955],[2.341658],[1.398075],[-6.670190],[7.597080],[-6.939034],[-8.108973],[-4.910428],[-9.506039],[-5.093523],[-4.285463],[2.906986],[-9.239676],[-7.367744],[0.311347],[-8.532934],[7.194417],[7.498813],[6.093234],[8.946320],[5.039667],[4.232367],[-7.507621],[2.683156],[-8.755123],[2.939529],[6.278796],[-8.694138],[9.406386],[-7.521654],[-7.136123],[-8.707558],[-4.372141],[-7.509525],[-1.265142],[-3.719702],[8.777638],[0.242630],[5.566334],[-0.544356],[-0.829611],[-1.124015],[-4.138951],[5.790690],[-6.131520],[0.387351],[-3.431503],[-7.681993],[0.536085],[2.923591],[-7.959766],[8.505996],[4.620242],[3.976879],[0.135080],[-8.260438],[-3.827502],[5.496472],[7.153989],[-2.229129],[-5.396129],[-3.423168],[-3.589102],[0.312930],[7.324516],[7.728785],[-2.263270],[6.777132],[2.307542],[6.170877],[2.257245],[9.477773],[-3.812480],[-7.759136],[5.083590],[9.315922],[-8.071687],[5.338690],[-9.891587],[-0.551614],[2.140105],[1.063923],[1.380927],[4.036048],[-7.177663],[9.017441],[-4.641337],[5.056978],[-3.109603],[-5.681277],[-6.036755],[1.584139],[4.354767],[6.437553],[-4.505119],[6.162909],[8.100440],[1.421413],[4.940074],[-1.375046],[6.490358],[7.014482],[-7.809349],[8.337412],[0.491842],[-1.418069],[2.450397],[-2.789557],[-2.387712],[7.637573],[-1.805999],[-4.629696],[2.419124],[-7.350451],[-8.560117],[-2.961413],[-7.248758],[8.805996],[-7.704751],[0.288158],[-4.913502],[-6.641048],[-6.595214],[-4.538987],[-1.842328],[2.020906],[-3.946422],[1.558848],[8.236698],[6.630092],[-9.402260],[-6.380677],[7.564300],[1.369236],[-3.098927],[2.632273],[-8.224099],[-8.361165],[3.650182],[-3.118345],[-5.433266],[-8.768202],[5.190398],[0.523930],[6.980852],[7.424285],[-6.309820],[-9.523787],[5.273788],[-0.608252],[6.527135],[0.389643],[7.423017],[-5.041537],[-0.131018],[-2.037489],[-8.617557],[-6.694461],[-0.558743],[-3.850006],[-1.208557],[0.803862],[5.422728],[-8.257221],[0.665497],[-1.661968],[9.235135],[0.686647],[-8.200829],[3.266778],[-1.899382],[3.361279],[-2.450846],[-3.159931],[6.651332],[-8.528146],[-1.157873],[0.798297],[4.296987],[5.385439],[-3.506433],[5.378404],[3.419583],[-8.770100],[-4.108669],[-3.429055],[5.111620],[2.700557],[6.694460],[9.201676],[9.026025],[-4.200065],[5.724344],[1.825672],[-4.450381],[-4.940139],[3.608570],[-3.392342],[-4.778233],[-4.797598],[-4.559029],[5.317654],[-7.328524],[0.144553],[-0.482261],[7.936143],[-2.081437],[-4.715902],[6.428964],[-1.141121],[-2.393377],[-2.099196],[5.556589],[-2.453391],[4.055169],[-0.911154],[5.051806],[2.226233],[2.923517],[-0.936628],[9.842639],[8.223477],[8.635055],[-1.784447],[3.668125],[-4.041767],[9.354706],[3.645059],[2.964001],[-7.728399],[-2.104117],[-5.187304],[-0.594170],[-7.904713],[-4.803890],[4.920035],[-1.017866],[6.332749],[-6.911051],[-7.704645],[2.526903],[8.326049],[1.660620],[6.689308],[-3.473139],[5.934430],[-5.601493],[6.345461],[3.559103],[-8.371502],[-0.582782],[-5.798817],[-4.665449],[-5.513655],[0.302875],[7.619105],[-3.968058],[7.343536],[2.466027],[-3.432552],[-3.284820],[4.911099],[-4.959544],[3.627826],[-1.502539],[2.664724],[2.102537],[0.735924],[-0.700323],[1.135778],[-7.779270],[-9.762013],[5.939039],[-1.924369],[-3.479536],[4.861872],[-8.893170],[2.729205],[1.560786],[-2.984512],[1.735911],[-1.136532],[9.506172],[-2.172591],[7.333696],[6.627092],[-4.589574],[-1.011134],[5.438075],[3.812590],[-2.519485],[-5.017518],[1.192580],[3.792305],[-0.695857],[-6.874235],[7.119545],[9.074414],[-5.006786],[-6.521527],[3.346263],[5.519141],[0.691985],[8.680513],[-9.224918],[-0.723573],[5.216752],[2.220228],[2.112985],[5.393544],[-1.680186],[1.269601],[-5.511639],[8.577420],[-5.228390],[8.625336],[4.626399],[-8.016467],[-4.031433],[-2.015053],[-9.046496],[3.548654],[0.793613],[-6.340206],[7.384388],[7.965205],[4.073976],[-1.692335],[8.194199],[-3.546086],[3.382738],[5.368297],[-5.010172],[-5.491643],[7.751927],[3.211345],[0.701407],[-5.092278],[8.032952],[0.480199],[-3.253293],[-3.112157],[2.948381],[-2.949974],[-8.293626],[2.732706],[-7.465398],[8.681488],[-2.758863],[6.323249],[-4.556860],[5.996745],[-4.042521],[-3.164647],[-7.766137],[-5.528295],[-3.190721],[-6.299011],[0.289752],[-4.037883],[8.229834],[-4.126906],[-6.628597],[-2.184651],[1.793480],[9.166169],[-2.609139],[5.121419],[-7.572267],[-9.335192],[-0.375574],[0.139500],[4.893104],[-4.266613],[-9.387239],[2.308450],[-5.862276],[8.589542],[0.469976],[5.527164],[-3.511865],[-1.186533],[0.714567],[3.237514],[4.535263],[-2.573229],[-6.860197],[0.150574],[9.339422],[9.389606],[-3.395808],[8.851874],[-1.067847],[-1.274932],[-4.796364],[-6.429904],[-6.862427],[5.419159],[-7.182352],[1.673656],[-3.083151],[2.400953],[4.759021],[5.580207],[8.578070],[6.353114],[6.162534],[-8.240152],[4.520185],[7.780029],[0.187149],[-8.239035],[-1.281587],[0.273958],[-9.036250],[-4.772191],[5.659918],[-5.693983],[-2.751721],[4.719609],[-6.157424],[-4.476080],[-9.983054],[7.069551],[1.359363],[6.968771],[-2.545507],[-3.785685],[-0.100107],[3.746167],[-1.613603],[6.820860],[-2.155980],[-3.949349],[2.841339],[-6.078375],[-4.593807],[2.409616],[9.949899],[2.637770],[2.821164],[8.582655],[-2.253422],[-9.321327],[-7.549991],[-2.360163],[-1.296399],[-3.064397],[9.343463],[1.088342],[-6.573661],[-3.923304],[-3.209760],[0.887484],[-4.837600],[-1.486617],[-1.585015],[9.136596],[6.110578],[0.063162],[8.810991],[-5.409377],[3.614028],[-0.219724],[-4.931419],[-3.851640],[5.517411],[1.744644],[-3.769055],[-2.138612],[9.825081],[8.428761],[-0.215299],[5.903665],[-2.818196],[9.608836],[-2.261737],[0.407118],[-4.317836],[-1.500090],[-2.607418],[-6.830865],[5.912085],[7.711279],[-4.466537],[-8.493108],[8.558460],[4.665604],[-0.940069],[6.292474],[5.531847],[-5.780691],[0.901362],[-6.426275],[-2.466709],[-3.972491],[8.944026],[-5.127967],[-1.414094],[-3.356380],[4.966302],[1.815781],[-6.182589],[2.540311],[9.745035],[-9.094172],[0.167972],[-3.535387],[-6.321968],[2.552957],[7.135095],[2.470804],[-2.628751],[4.625722],[-5.708236],[3.014101],[-9.871024],[-4.985763],[-1.494206],[3.675816],[-5.527812],[-4.418687],[-8.180108],[-7.172864],[9.746946],[5.641666],[2.698405],[0.527319],[7.299299],[3.251948],[6.959160],[8.895603],[7.960403],[-9.083654],[2.124324],[6.139138],[2.301272],[-4.144083],[-1.235940],[1.146683],[-2.424121],[-1.638041],[6.325893],[2.464631],[-8.567389],[-1.279455],[6.852066],[7.605606],[2.321341],[-5.523621],[2.061259],[6.129428],[-0.107269],[-1.894588],[-2.459440],[-6.002827],[8.825812],[6.477700],[0.662282],[4.773119],[8.331363],[5.512194],[8.451426],[0.544664],[-9.067945],[-9.707377],[1.429229],[2.020833],[8.655735],[-8.386290],[7.832050],[-6.269817],[3.463086],[8.770094],[-6.678096],[-6.855964],[1.862271],[-8.451034],[-5.367148],[6.683230],[-9.190803],[-6.266773],[7.315941],[9.702064],[7.863285],[5.051532],[-1.979332],[4.348143],[8.634501],[-7.312793],[1.081750],[7.082016],[-6.656795],[-0.735470],[7.834640],[-0.958232],[6.907730],[8.362971],[-8.980539],[3.951858],[-1.862576],[-2.176039],[-2.703951],[-0.623360],[-8.882316],[8.904802],[0.362904],[-6.619685],[-7.661187],[-4.691985],[9.660464],[5.435149],[2.554006],[4.927898],[8.314162],[2.870356],[8.837052],[2.218919],[-1.708356],[6.658109],[-0.851809],[-3.906315],[8.276339],[-6.015322],[6.919868],[9.208200],[1.753613],[0.937659],[0.038351],[-2.074984],[3.492746],[-8.763196],[4.802537],[-8.716153],[8.011266],[-3.823043],[-3.463996],[9.549930],[-0.844580],[-9.656440],[-3.337023],[-8.002540],[-7.284601],[-6.546485],[-6.948152],[5.939768],[3.432918],[6.936122],[7.447527],[-1.389788],[8.836438],[-4.495391],[1.305981],[-1.094117],[5.517340],[-8.423262],[-5.223400],[5.655977],[-4.613592],[8.020221],[-2.054868],[0.525322],[-5.311824],[-6.270005],[-0.646414],[9.706884],[-5.979007],[-7.780211],[2.124392],[8.251152],[1.599118],[1.241650],[-2.143504],[-6.162470],[-5.315537],[0.888730],[-4.561286],[-7.602522],[7.760458],[-4.306738],[7.346752],[-9.726561],[-9.358301],[-8.422685],[2.307986],[-8.630560],[0.772856],[-3.263567],[7.508687],[-2.238916],[-8.179743],[-5.992816],[-7.220376],[-7.073773],[-5.300193],[-4.381996],[-3.256495],[6.340043],[6.523816],[-7.775756],[7.240911],[7.689690],[-7.284193],[-8.542680],[-3.938013],[-8.214470],[-4.649867],[-1.063993],[0.342975],[5.628546],[0.184406],[-0.298051],[-1.754486],[-8.634455],[0.577900],[-6.465322],[-2.528215],[1.101160],[4.491916],[-6.617816],[-1.067295],[6.487545],[5.816435],[-4.146369],[-3.291827],[-6.208592],[6.591148],[2.721408],[-0.866990],[7.736467],[-5.017455],[-6.733161],[4.961286],[-5.184464],[6.635044],[-2.402379],[9.137444],[4.066680],[1.826741],[2.853459],[8.664139],[-5.930502],[-2.656028],[-4.168887],[6.951715],[-6.025689],[4.362267],[-4.101844],[-5.217134],[9.544190],[6.683645],[-3.189160],[6.268778],[-5.890938],[8.000464],[-9.621676],[1.265745],[6.870591],[-1.482830],[3.579424],[6.173608],[-9.982210],[-1.247817],[2.426143],[8.303116],[1.129798],[-8.249619],[8.427059],[9.185704],[0.156731],[0.080404],[8.911679],[-5.004351],[6.603323],[-9.396465],[-7.289006],[-2.651460],[-2.201500],[-0.720939],[-5.394268],[-8.762521],[-6.795649],[6.001484],[6.349602],[2.913197],[0.635414],[-8.350911],[-4.523125],[8.796760],[-1.511914],[-4.577721],[2.023583],[4.124998],[2.727039],[0.758793],[1.829752],[6.488471],[-3.445119],[3.749601],[6.466775],[-8.043203],[8.092419],[8.502435],[4.052732],[3.445039],[-5.245756],[0.699969],[5.913794],[2.325692],[-2.916442],[-3.609365],[0.972133],[5.396683],[-8.321289],[8.755592],[-5.121471],[-4.002240],[-8.354273],[9.630363],[-4.727289],[8.630073],[-3.174286],[-2.676784],[0.594887],[-2.707278],[-4.825353],[8.226610],[4.077156],[8.218825],[8.125951],[4.659472],[3.882290],[-7.724141],[-3.354001],[3.493722],[-2.734197],[6.250958],[4.744389],[-1.795368],[-8.785416],[-3.896254],[6.810514],[-1.512896],[2.205023],[-3.065023],[-7.015544],[-5.185511],[6.117366],[1.438078],[-1.334859],[-5.511538],[-6.814624],[1.969275],[5.278693],[-7.454503],[-1.511519],[-7.199196],[0.788391],[-4.662306],[7.921631],[3.776720],[6.884797],[1.119541],[-4.350579],[-7.770302],[9.706370],[-0.362735],[-6.443923],[-1.899972],[9.747272],[2.697104],[3.138361],[-1.897810],[-2.406104],[6.433343],[7.881459],[2.843982],[-4.948211],[-6.166481],[-1.395525],[9.320242],[4.807360],[3.676130],[5.079138],[-7.584349],[-9.856144],[7.727314],[6.570779],[-8.419271],[-4.861012],[3.373897],[2.075584],[-2.023733],[9.151598],[-4.355249],[0.038302],[-7.202147],[4.901269],[4.031324],[0.373923],[-4.892658],[8.123088],[2.439217],[8.033052],[1.302607],[-5.561685],[5.992800],[6.072163],[4.342931],[-0.003152],[-8.040818],[-5.143462],[2.952153],[-3.918338],[-5.558112],[-6.643241],[-4.240173],[-5.261109],[-2.714754],[6.620589],[-3.352366],[4.613230],[8.952292],[4.925148],[9.380275],[6.831350],[-9.601026],[-9.545313],[7.169131],[-7.413864],[-9.006649],[-1.440735],[-7.935862],[0.050081],[-3.675087],[-3.037470],[-0.444107],[8.923639],[1.257254],[-5.569366],[-4.589399],[-9.959405],[8.890544],[-0.681541],[-7.383812],[1.908021],[8.889994],[6.943430],[-5.284976],[5.272062],[8.551521],[5.063925],[1.348812],[-0.804191],[-2.062625],[0.089797],[-6.268745],[8.999498],[2.028821],[-9.568839],[-9.691859],[-6.583900],[-8.419486],[1.680457],[-2.278930],[0.444413],[0.634250],[3.030393],[8.180996],[6.723218],[5.020258],[4.172504],[-1.110952],[4.970055],[-0.786646],[6.524087],[0.774892],[4.958242],[1.471272],[9.464025],[2.609125],[-3.428110],[6.080570],[6.297295],[0.457910],[-1.322646],[0.579233],[-5.226493],[-0.105597],[6.468649],[7.385160],[4.801393],[4.551509],[-6.125919],[-2.095282],[-8.330742],[7.541219],[-7.619863],[2.440419],[9.907868],[-9.791392],[7.953919],[9.601950],[5.727701],[4.958329],[7.541824],[-0.281030],[-2.919707],[4.070384],[-4.852760],[-2.614539],[0.256723],[3.891623],[-6.596722],[6.326524],[6.220055],[-1.205932],[0.602710],[-2.969952],[6.649684],[-4.154435],[5.275941],[-9.188188],[-9.581428],[-5.698952],[1.245983],[5.693718],[-6.630279],[-5.090860],[3.549300],[0.195303],[8.635313],[7.151334],[8.208092],[0.036930],[-4.827262],[1.008116],[-9.697632],[8.759783],[3.849819],[-9.594172],[-1.659979],[6.530623],[-1.073907],[9.425673],[9.921136],[1.312369],[-5.997002],[-5.568463],[-3.850965],[6.643435],[5.256953],[-2.134984],[-9.738424],[-8.307385],[-3.668785],[-9.116717],[-9.331790],[3.395118],[6.412566],[0.922972],[8.422412],[2.916092],[8.812581],[-5.504327],[8.267224],[-1.799729],[-3.972781]], dtype = "float64")#candidate|4244|(1144, 1)|const|float64
const_4245 = relay.const([4.040523,-9.583814,0.939598,1.145885,1.555017,-7.031822,-0.430752,1.124539,9.356750,1.213383,5.710810,0.130801,3.589596,-8.143866,-9.428845,-9.236820,1.568617,3.832693,0.382327,-6.374394,0.041642,4.329189,-5.022520,5.046583,-7.525371,1.445048,-9.683415,8.949755,4.808006,-9.483959,9.246725,9.202384,2.885210,9.341380,8.898066,3.172131,-9.310787,-4.972458,-4.786044,5.613868,-0.796911,-3.503482,2.110213,-0.591197,2.358799,5.635792,4.372687,-5.716496,6.817541,-5.693469,4.117677,-8.398966,-0.765843,-4.383804,-6.400580,5.947793,2.771339,8.091029,-6.214861,4.066747,-6.319341,-1.528553,3.747340,-0.422158,-5.576564,6.911431,2.082614,-6.779436,3.321850,-2.494861,-9.895141,-6.263930,5.295233,-7.025115,-7.174541,0.413718,-7.707898,-4.486494,-7.010850,2.142134,9.764691,-2.058231,-8.232516,3.808710,-2.098722,6.135746,5.713153,-3.554609,-6.824561,-6.459822,-0.229749,4.142427,2.172414,-3.666404,5.931706,5.825419,-0.805270,1.752928,-9.629334,-0.015725,-0.212376,8.248737,-3.575490,-7.570191,-0.875074,0.881985,-1.298204,-0.407966,-2.836900,-2.693194,-8.064057,3.121968,9.019596,3.445139,1.298679,-4.061761,0.949676,5.274711,8.957236,-3.932727,2.169416,-0.799622,9.799693,0.790900,0.628160,3.933074,2.039254,3.450659,5.077142,-7.161477,-6.260506,-1.080876,-0.933774,9.174026,2.364525,-2.195291,5.577554,-8.798806,3.018660,3.543435,2.776227,-6.477835,7.047837,-4.157593,-0.524638,4.010027,7.792327,-2.928678,6.460447,-3.747975,-3.487319,8.701184,8.901328,-9.210415,-3.967894,-1.051773,-4.233735,-2.892367,-7.521815,-1.176596,-9.159586,8.868818,1.885088,6.520291,-0.996430,7.888176,-5.449089,-0.647795,-6.855787,-7.804161,-3.123950,1.953326,9.134107,-1.204924,-4.680178,-1.012579,-5.262983,-5.532007,-9.005674,8.240748,3.363478,1.729496,1.159642,-1.689688,-7.573357,-7.011983,5.565025,9.887976,-0.279565,-0.884635,-3.969951,8.775038,-8.724864,-2.074297,9.992260,7.426903,-1.379066,0.579998,5.864820,0.949390,-0.633544,-0.293241,8.985523,3.482851,-0.245630,-1.173345,-9.665195,9.976681,-7.699455,4.250314,1.760776,-8.631695,8.139660,-9.643069,3.532852,-1.111520,3.664095,5.908170,-6.323146,-8.178600,-4.792227,3.774127,-3.228517,-2.624257,-6.440415,9.673453,-7.489867,7.627974,0.765818,-9.747432,-5.880310,-0.600785,-0.795693,-2.017820,-1.546877,9.496224,-4.355440,-7.873641,9.282085,9.082901,-8.788923,-7.185971,-4.375475,9.064976,8.476871,7.266406,-5.897175,5.547528,2.341396,-5.797227,1.953979,4.390571,-4.063926,-3.959577,-8.609346,-6.879758,-2.494581,4.654809,-5.190669,-4.732586,5.211108,0.197242,-1.871640,-1.077072,6.747926,0.845076,-5.109526,-1.566323,-8.235423,-1.760218,-8.038131,-9.793657,6.643518,3.219716,-2.964297,7.706135,0.126620,8.034476,-0.961010,-9.444417,-4.650463,-2.667953,-5.822475,-6.905739,6.277790,0.168236,9.930087,2.816716,4.492324,-6.644716,-6.213709,8.761098,5.379150,0.795802,-4.005150,8.983987,-3.686396,6.441931,-7.425638,5.111561,4.475596,1.732314,-0.966313,1.101468,2.520433,0.362828,-1.740586,-2.564638,-0.708634,9.485118,1.768762,1.525591,-4.704450,-5.211559,-2.459651,-4.235117,-0.265148,-0.067076,-0.661143,-0.662811,-2.850347,-3.725660,4.164890,-8.280775,-8.857000,-8.445445,-1.560247,2.677840,7.422522,9.019746,-4.606655,8.897522,6.003373,7.046632,7.620469,8.855381,-8.510329,-8.411671,-7.097945,8.867570,-2.186728,-3.559371,3.276451,0.958604,3.733564,8.060032,5.172499,-8.910169,-6.635556,-1.323722,-5.696020,9.487444,5.085861,-2.382381,-8.916536,1.632685,3.835735,9.848985,4.351057,5.594551,5.568986,-3.588407,5.547547,1.607421,3.249658,-5.614106,-8.380185,-0.194727,0.335662,4.151384,-8.508439,4.679220,8.076577,-8.064287,0.883553,6.039644,-8.579420,6.533704,5.143038,-0.161789,8.956678,-5.347625,-0.814644,5.173031,2.793814,-8.303598,5.826048,5.906887,-1.231407,-0.625239,-5.333106,3.828154,4.447606,-6.204654,6.727789,1.313840,5.953027,-1.214271,-4.399560,-9.409106,8.620193,1.431787,-0.180225,8.600107,8.838580,-3.223236,9.393367,-1.597724,6.304430,2.446083,3.145155,1.434765,-6.147416,9.028916,3.740259,-0.355200,-9.839588,-6.660722,0.802383,3.538361,3.075534,-2.234859,8.183676,6.608695,8.025341,-8.943407,-1.859135,-5.551602,2.199498,2.370498,2.158745,4.286870,-3.272159,-2.739420,0.401544,-2.681941,0.448725,-6.164479,2.199610,2.092399], dtype = "float32")#candidate|4245|(440,)|const|float32
call_4243 = relay.TupleGetItem(func_2578_call(relay.reshape(const_4244.astype('float64'), [13, 11, 8]), relay.reshape(const_4245.astype('float32'), [5, 88]), ), 3)
call_4246 = relay.TupleGetItem(func_2581_call(relay.reshape(const_4244.astype('float64'), [13, 11, 8]), relay.reshape(const_4245.astype('float32'), [5, 88]), ), 3)
func_2420_call = mod.get_global_var('func_2420')
func_2422_call = mutated_mod.get_global_var('func_2422')
call_4252 = relay.TupleGetItem(func_2420_call(), 2)
call_4253 = relay.TupleGetItem(func_2422_call(), 2)
output = relay.Tuple([call_4229,call_4235,const_4236,call_4243,const_4244,const_4245,call_4252,])
output2 = relay.Tuple([call_4230,call_4237,const_4236,call_4246,const_4244,const_4245,call_4253,])
func_4270 = relay.Function([], output)
mod['func_4270'] = func_4270
mod = relay.transform.InferType()(mod)
mutated_mod['func_4270'] = func_4270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4270_call = mutated_mod.get_global_var('func_4270')
call_4271 = func_4270_call()
output = call_4271
func_4272 = relay.Function([], output)
mutated_mod['func_4272'] = func_4272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3657_call = mod.get_global_var('func_3657')
func_3658_call = mutated_mod.get_global_var('func_3658')
call_4286 = relay.TupleGetItem(func_3657_call(), 0)
call_4287 = relay.TupleGetItem(func_3658_call(), 0)
output = relay.Tuple([call_4286,])
output2 = relay.Tuple([call_4287,])
func_4292 = relay.Function([], output)
mod['func_4292'] = func_4292
mod = relay.transform.InferType()(mod)
output = func_4292()
func_4293 = relay.Function([], output)
mutated_mod['func_4293'] = func_4293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
call_4370 = func_971_call()
call_4371 = func_971_call()
output = call_4370
output2 = call_4371
func_4377 = relay.Function([], output)
mod['func_4377'] = func_4377
mod = relay.transform.InferType()(mod)
output = func_4377()
func_4378 = relay.Function([], output)
mutated_mod['func_4378'] = func_4378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2028_call = mod.get_global_var('func_2028')
func_2030_call = mutated_mod.get_global_var('func_2030')
call_4459 = func_2028_call()
call_4460 = func_2028_call()
uop_4464 = relay.log2(call_4459.astype('float64')) # shape=(15, 10, 15)
uop_4466 = relay.log2(call_4460.astype('float64')) # shape=(15, 10, 15)
output = relay.Tuple([uop_4464,])
output2 = relay.Tuple([uop_4466,])
func_4476 = relay.Function([], output)
mod['func_4476'] = func_4476
mod = relay.transform.InferType()(mod)
mutated_mod['func_4476'] = func_4476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4476_call = mutated_mod.get_global_var('func_4476')
call_4477 = func_4476_call()
output = call_4477
func_4478 = relay.Function([], output)
mutated_mod['func_4478'] = func_4478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3997_call = mod.get_global_var('func_3997')
func_3999_call = mutated_mod.get_global_var('func_3999')
call_4533 = relay.TupleGetItem(func_3997_call(), 1)
call_4534 = relay.TupleGetItem(func_3999_call(), 1)
func_4090_call = mod.get_global_var('func_4090')
func_4091_call = mutated_mod.get_global_var('func_4091')
call_4542 = relay.TupleGetItem(func_4090_call(), 0)
call_4543 = relay.TupleGetItem(func_4091_call(), 0)
output = relay.Tuple([call_4533,call_4542,])
output2 = relay.Tuple([call_4534,call_4543,])
func_4545 = relay.Function([], output)
mod['func_4545'] = func_4545
mod = relay.transform.InferType()(mod)
output = func_4545()
func_4546 = relay.Function([], output)
mutated_mod['func_4546'] = func_4546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4049_call = mod.get_global_var('func_4049')
func_4051_call = mutated_mod.get_global_var('func_4051')
call_4588 = relay.TupleGetItem(func_4049_call(), 1)
call_4589 = relay.TupleGetItem(func_4051_call(), 1)
func_3081_call = mod.get_global_var('func_3081')
func_3085_call = mutated_mod.get_global_var('func_3085')
var_4597 = relay.var("var_4597", dtype = "float32", shape = (60,))#candidate|4597|(60,)|var|float32
call_4596 = relay.TupleGetItem(func_3081_call(relay.reshape(var_4597.astype('float32'), [15, 2, 2]), relay.reshape(var_4597.astype('float32'), [15, 2, 2]), ), 0)
call_4598 = relay.TupleGetItem(func_3085_call(relay.reshape(var_4597.astype('float32'), [15, 2, 2]), relay.reshape(var_4597.astype('float32'), [15, 2, 2]), ), 0)
func_3108_call = mod.get_global_var('func_3108')
func_3109_call = mutated_mod.get_global_var('func_3109')
call_4599 = relay.TupleGetItem(func_3108_call(), 1)
call_4600 = relay.TupleGetItem(func_3109_call(), 1)
output = relay.Tuple([call_4588,call_4596,var_4597,call_4599,])
output2 = relay.Tuple([call_4589,call_4598,var_4597,call_4600,])
func_4630 = relay.Function([var_4597,], output)
mod['func_4630'] = func_4630
mod = relay.transform.InferType()(mod)
var_4631 = relay.var("var_4631", dtype = "float32", shape = (60,))#candidate|4631|(60,)|var|float32
output = func_4630(var_4631)
func_4632 = relay.Function([var_4631], output)
mutated_mod['func_4632'] = func_4632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2028_call = mod.get_global_var('func_2028')
func_2030_call = mutated_mod.get_global_var('func_2030')
call_4634 = func_2028_call()
call_4635 = func_2028_call()
output = relay.Tuple([call_4634,])
output2 = relay.Tuple([call_4635,])
func_4644 = relay.Function([], output)
mod['func_4644'] = func_4644
mod = relay.transform.InferType()(mod)
output = func_4644()
func_4645 = relay.Function([], output)
mutated_mod['func_4645'] = func_4645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_4677 = relay.TupleGetItem(func_1911_call(), 0)
call_4678 = relay.TupleGetItem(func_1912_call(), 0)
func_3081_call = mod.get_global_var('func_3081')
func_3085_call = mutated_mod.get_global_var('func_3085')
const_4682 = relay.const([6.615342,-8.214523,3.143661,-4.174506,5.570198,0.385612,1.189912,0.449709,8.480553,8.351956,6.433466,-0.942331,-9.953757,2.869866,-6.994952,3.108273,-4.659045,-7.038242,8.721259,-9.501327,6.625464,-6.281473,0.141449,1.293495,5.864031,-2.878775,1.260676,1.179844,-0.352081,8.496604,0.184597,-4.181427,-3.026134,4.420159,-2.853921,-8.803173,0.291971,-5.017879,-9.008871,1.536424,-1.809880,5.336323,6.653347,3.988988,0.195359,-2.949840,9.934354,-1.371541,1.622393,-0.642931,-7.620333,-4.785685,6.814329,-1.324767,-1.698318,-9.019552,-8.350182,9.890318,-5.230492,1.478821], dtype = "float32")#candidate|4682|(60,)|const|float32
call_4681 = relay.TupleGetItem(func_3081_call(relay.reshape(const_4682.astype('float32'), [15, 2, 2]), relay.reshape(const_4682.astype('float32'), [15, 2, 2]), ), 0)
call_4683 = relay.TupleGetItem(func_3085_call(relay.reshape(const_4682.astype('float32'), [15, 2, 2]), relay.reshape(const_4682.astype('float32'), [15, 2, 2]), ), 0)
var_4721 = relay.var("var_4721", dtype = "float32", shape = (15, 2, 2))#candidate|4721|(15, 2, 2)|var|float32
bop_4722 = relay.bitwise_and(call_4681.astype('int8'), relay.reshape(var_4721.astype('int8'), relay.shape_of(call_4681))) # shape=(15, 2, 2)
bop_4725 = relay.bitwise_and(call_4683.astype('int8'), relay.reshape(var_4721.astype('int8'), relay.shape_of(call_4683))) # shape=(15, 2, 2)
uop_4731 = relay.log2(var_4721.astype('float32')) # shape=(15, 2, 2)
func_4476_call = mod.get_global_var('func_4476')
func_4478_call = mutated_mod.get_global_var('func_4478')
call_4733 = relay.TupleGetItem(func_4476_call(), 0)
call_4734 = relay.TupleGetItem(func_4478_call(), 0)
output = relay.Tuple([call_4677,const_4682,bop_4722,uop_4731,call_4733,])
output2 = relay.Tuple([call_4678,const_4682,bop_4725,uop_4731,call_4734,])
func_4745 = relay.Function([var_4721,], output)
mod['func_4745'] = func_4745
mod = relay.transform.InferType()(mod)
mutated_mod['func_4745'] = func_4745
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4746 = relay.var("var_4746", dtype = "float32", shape = (15, 2, 2))#candidate|4746|(15, 2, 2)|var|float32
func_4745_call = mutated_mod.get_global_var('func_4745')
call_4747 = func_4745_call(var_4746)
output = call_4747
func_4748 = relay.Function([var_4746], output)
mutated_mod['func_4748'] = func_4748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3108_call = mod.get_global_var('func_3108')
func_3109_call = mutated_mod.get_global_var('func_3109')
call_4757 = relay.TupleGetItem(func_3108_call(), 0)
call_4758 = relay.TupleGetItem(func_3109_call(), 0)
output = relay.Tuple([call_4757,])
output2 = relay.Tuple([call_4758,])
func_4764 = relay.Function([], output)
mod['func_4764'] = func_4764
mod = relay.transform.InferType()(mod)
output = func_4764()
func_4765 = relay.Function([], output)
mutated_mod['func_4765'] = func_4765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1964_call = mod.get_global_var('func_1964')
func_1966_call = mutated_mod.get_global_var('func_1966')
call_4794 = func_1964_call()
call_4795 = func_1964_call()
output = call_4794
output2 = call_4795
func_4828 = relay.Function([], output)
mod['func_4828'] = func_4828
mod = relay.transform.InferType()(mod)
mutated_mod['func_4828'] = func_4828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4828_call = mutated_mod.get_global_var('func_4828')
call_4829 = func_4828_call()
output = call_4829
func_4830 = relay.Function([], output)
mutated_mod['func_4830'] = func_4830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2184_call = mod.get_global_var('func_2184')
func_2185_call = mutated_mod.get_global_var('func_2185')
call_4851 = func_2184_call()
call_4852 = func_2184_call()
uop_4854 = relay.asinh(call_4851.astype('float64')) # shape=(2, 15, 11)
uop_4856 = relay.asinh(call_4852.astype('float64')) # shape=(2, 15, 11)
func_1466_call = mod.get_global_var('func_1466')
func_1468_call = mutated_mod.get_global_var('func_1468')
const_4861 = relay.const([5.522797,4.557978,0.953791,-7.011647,7.151094,7.473230,-1.102079,-1.788825,-5.502250,8.446954,-4.415530,-8.374823,4.528020,-8.560669,8.930379,3.790741,-4.793990,0.626180,8.207181,0.353584,-6.834245,-9.521245,-6.295699,-7.369600,7.689640,-0.723448,5.658391,2.992964,-3.825002,1.569258,3.559691,-5.956522,-9.553119,1.522236,4.006416,-6.382839,4.777885,9.039333,4.180748,4.674155,1.782853,5.496518,-7.838169,-5.071951,-7.120022,-5.936327,-3.349576,3.518977,-4.730149,-9.452962,7.087643,4.630407,7.629749,-1.690517,-0.462518,-2.827095,5.408139,7.491811,-7.975332,-6.968977,5.677214,5.439621,4.446474,-3.085368,9.201152,-2.932435,-0.111088,-1.865953,-3.359020,-1.997917,-6.282205,-6.578310,-7.229674,2.084151,9.842604,-5.690081,0.440784,6.393192,-3.433593,-4.647107,-5.802168,4.967093,8.185932,8.645952,-4.943642,-8.808855,-6.052384,6.865852,-5.109651,1.561297,-1.546267,4.598468,0.437247,6.216119,-4.324267,-8.317327,-2.798207,2.205289,5.884883,8.448346,2.487062,-8.689607,-9.299605,-6.248236,-3.980242,3.782487,2.984358,-0.718184,2.497332,2.545762,-2.823745,-7.128577,8.034355,-3.396638,-4.999029,-4.683909,1.523224,8.531602,-7.750577,6.279797,-7.731807,-3.299227,3.848925,-8.364862,-4.878645,-7.822580,0.508901,9.651454,8.960108,2.050689,3.002093,3.732421,-7.053564,-0.952073,-8.272950,-3.055240,-1.844675,7.369363,9.544578,-8.707741,9.770759,-0.038239,-1.229253,3.231133,7.510761,6.437911,-8.715494,-4.851504,-3.179999,-0.780490,-3.304611,7.188426,9.520587,-0.903964,-0.283985,-0.898433,9.989305,0.576773,-2.337615,0.597412,0.227299,-4.579017,6.772397,3.375685,6.981983,4.346718,-2.524618,7.180573,4.465121,-8.141386,-1.124587,5.246018,-9.701389,5.984624,4.210006,-6.198953,-1.930536,-1.159571,4.825224,3.452407,9.222091,-1.977491,2.329910,2.981224,9.780232,-4.667327,-9.245938,-7.523222,-3.661038,7.217625,-1.548813,4.696749,-9.856537,7.324143,1.516989,4.586289,1.627532,-4.485413,8.927108,5.010347,3.210502,-3.832749,1.592546,-1.556827,6.316393,2.294039,-8.525736,-3.701253,-1.598245,-4.642780,-5.546321,0.598524,-3.008238,-9.018239,4.603327,-8.991720,1.207439,9.937493,1.546640,7.441515,2.109883,8.615728,6.735730,3.080514,9.979429,5.148568,0.500525,6.530306,-2.349234,8.978195,5.070958,-8.441568,-6.135308,9.038783,-7.491820,-1.822784,3.076187,3.420543,5.679912,-2.246933,-4.569665,-4.296244,-5.526329,1.850104,3.711377,9.381206,8.539347,-6.199906,6.364077,5.457152,-8.322498,9.193093,0.982263,-1.181669,5.280948,5.257618,-2.279185,5.938281,9.553489,6.395529,9.997343,8.766233,-6.506854,7.283522,8.423777,5.526851,-1.648538,4.826341,0.562608,3.739853,3.338455,9.777706,-8.272383,-8.421214,4.658370,2.026429,-5.162155,0.004935,-9.665320,-6.649269,-3.331658,7.951506,2.084055,-4.852506,-0.472918,5.347633,2.761483,8.026027,-4.633598,2.907301,9.641053,-8.001321,-6.371262,-2.159278,-0.872879,-9.603688,0.936542,-2.667949,4.668003,4.504221,-5.685883,8.914940,9.243018,8.123441,-8.761240,-0.302018,1.299223,-1.488870,-5.868673,-8.211977,4.228947,5.562121,-8.267245,5.494106,0.946308,5.661999,-2.049907,6.445917,8.011525,6.853414,6.905694,3.167104,-9.193484,-0.251187,3.276718,-6.308690,-1.737378,7.344210,9.720909,-3.083098,2.444894,-7.842931,-5.634654,-2.651705,-8.621694,4.888415,9.470121,6.105470,-5.193152,-9.782945,-3.415015,3.413137,0.460185,-8.191266,4.370353,9.740350,-7.303559,-6.968096,9.873633,1.442233,-6.441968,9.675093,4.519841,-4.593409,2.967786,1.514644,8.985086,-4.429841,9.446098,6.601557,9.982045,-7.782693,-2.180559,-3.742765,6.485488,3.470197,-3.910636,1.479149,9.876111,-3.609211,-6.296275,2.951079,-2.226082,-6.715370,-1.463557,-2.498274,-0.515378,4.354694,-2.749870,-1.390100,5.483615,4.630551,9.284265,-0.600745,-0.599666,3.494945,-6.104134,-0.398227,-3.709070,6.520034,-3.644781,-1.160620,-4.867177,7.760056,8.223686,-6.148638,-0.123569,-3.269134,-6.551035,-1.779130,6.679502,8.373244,-2.251429,-4.636402,3.556120,1.529651,-9.147172,-6.741223,-5.779838,8.892773,-2.498566,-8.655570,5.987380,-3.617896,8.369777,5.572539,-9.725143,8.919320,-3.525109,8.540834,8.438607,-8.183544,-3.453552,-3.229328,-6.186958,-9.266779,9.822280,1.212851,9.915294,-3.579095,0.504991,-4.803747,-4.710099,-9.705538,6.315068,-5.344979,4.409138,-7.564265,-1.806582,-6.348413,-2.880585,2.974839,9.651704,0.187634,-4.550725,-8.309177,6.797343,8.515748,-4.259068,-1.412230,9.290548,-0.099338,8.385946,-0.268875,5.553369,0.878027,4.131491,0.841099,1.732573,2.832475,-9.188268,7.944256,-3.115398,1.902109,3.834048,5.940501,8.603975,3.381915,-0.306869,-0.495987,-1.837399,-3.212836,-2.789042,-4.122360,-7.784369,1.278031,9.230589,-0.747656,0.989508,-0.517739,3.362271,1.612301,4.573767,-8.833359,-4.381222,2.335367,-9.883778,-6.714356,7.991326,-6.621922,-6.352233,-5.809461,5.733651,-1.951900,0.260625,1.406567,-6.812342,1.621376,6.973128,5.462709,-3.157251,-6.057326,-9.100208,8.798400,3.236179,2.249396,0.230134,-0.118177,-7.774941,9.122748,6.949794,4.371829,5.507031,-0.866283,-0.163076,-8.934321,-8.355638,4.101860,9.594435,5.277499,-2.758749,-6.890335,-3.445591,-5.951022,0.668390,-3.399467,-6.928827,-0.769639,-0.488016,-4.383484,8.824702,9.572780,0.056763,-5.060322,9.262109,-0.742095,5.197089,9.266045,0.091515,-1.694897,5.349866,5.122695,-6.192590,8.837264,-8.150918,1.344444,-1.899401,-4.597500,2.395569,-1.101891,-8.968225,7.205269,-8.598446,1.495737,-7.688168,-9.843446,7.589262,-3.417617,-9.263556,-5.140859,2.375800,-0.940656,1.045959,-3.224918,1.405756,1.285577,3.538267,7.360205,-6.274886,9.234090,0.412764,-7.411429,7.059929,-9.621286,9.765784,0.369437,9.766231,-6.405650,-8.122957,3.423553,-0.696000,1.598949,7.474257,2.663830,6.808972,7.070810,-7.851358,0.317338,-5.809779,3.063678,3.613148,-5.493171,-3.342527,2.295847,5.240760,1.000762,5.305547,3.849359,1.827784,-0.259135,0.084435,3.816482,-5.100315,-0.753784,5.267140,-6.733377,-4.589778,5.544882,4.200599,2.194337,9.711848,-6.349716,1.990692,-0.086716,-9.201962,8.229886,-0.755503,-8.952736,-4.337596,7.738581,-5.332064,-7.763425,-8.048222,-1.757105,-1.837854,4.670054,-5.176632,-6.753276,6.646941,-6.532701,-6.874095,-5.591138,6.829571,9.119119,7.434645,9.597246,-3.523409,-1.454446,7.600145,-3.919722,-2.966407,0.459291,-1.086056,-1.228091,-5.367059,4.148605,-1.062107,3.148783,-2.562165,7.444169,2.375079,-0.259885,-1.675900,3.418333,1.397952,6.073560,7.000500,-8.812050,0.021239,8.805355,4.005430,-4.112067,-6.719028,1.997776,-8.301885,-2.066621,5.762490,4.171705,7.464945,0.767837,-5.045032,-6.962615,-6.267738,1.653375,0.261090,4.296812,-7.575358,0.122575,-2.960585,0.463575,7.613545,-9.179651,-4.509820,2.878094,-3.118331,-7.278339,5.961767,-9.673586,8.494610,4.462640,1.672012,-4.423585,-7.141551,-9.989422,-3.979734,2.140853,-8.893804,2.679802,2.300408,-6.961595,0.020924,3.842334,-2.644410,-4.391573,6.405917,-6.237259,1.036947,-6.485911,-6.837858,-6.030484,2.083155,7.226681,9.436286,-1.372977,4.268752,5.398707,-0.532468,2.227465,-7.908778,-8.689981,-9.957604,-1.246800,2.795801,6.287419,-4.698689,7.502856,-8.872436,8.685052,7.137613,-0.518447,-6.842850,4.797157,-3.953637,8.799951,1.248304,9.941001,7.799440,7.248328,-1.124230,-5.999137,-8.191324,-9.062267,-8.608745,-4.965967,-9.009127,-9.143856,-5.475749,5.761116,9.171774,-2.658239,-8.256882,-2.937024,5.025549,9.514843,-7.085369,-3.637837,7.353963,5.461613,-5.134507,4.547070,3.178410,-1.812668,1.061382,-9.782986,-3.922994,6.541011,-9.626255,-2.387036,2.313466,-5.137008,-0.157848,-0.729367,6.328417,3.527508,-9.095885,-7.802909,2.235725,3.355585,-6.381664,0.894179,-2.563702,-7.574772,-5.357539,3.879786,-8.812056,4.400272,-2.016676,-2.708568,-9.045058,-5.540457,-7.144109,-8.207396,8.736632,-2.424830,1.139949,-0.236274,3.912494,0.907599,-4.308265,9.661979,-0.237765,3.820579,8.653061,-3.171361,2.896262,-4.072493,-8.547840,4.852765,-5.431607,0.776823,6.792074,-7.261223,-6.316500,-1.944986,-9.301090,8.499315,7.330038,8.924036,-2.608098,-0.449029,-8.686069,5.678570,5.977506,-3.676294,5.769109,9.371909,-1.026948,1.321799,7.084595,7.851259,6.692415,-6.368583,8.208776,4.125924,-5.305278,5.450750,-1.546833,4.683292,-7.302479,-5.490221,2.421266,-9.007533,8.951628,6.629610,-5.517105,-3.268906,1.791292,-9.300085,-1.353852,0.885121,5.203299,-3.997747,5.735753,2.418490,1.465275,3.480116,9.241956,-7.341670,2.666837,-6.638601,-6.560881,-7.873162,9.038026,-8.908935,-8.323689,-6.303491,5.348209,-7.415491,-8.032354,-3.230262,9.764591,8.534361,6.105042,8.696522,4.605113,-2.624504,-3.149804,9.034057,7.656477,1.262921,9.008912,4.266035,-8.347397,-2.154844,8.141853,3.994106,-8.495154,-0.322067,-0.404346,9.979848,7.105818,-5.317821,-4.730279,5.465324,3.806432,4.714462,6.509409,4.891128,-9.816020,-1.620221,-1.585156,-0.522996,-7.234885,0.209745,-0.726561,-5.720369,-5.416957,1.784949,7.952895,4.712716,-4.515213,0.607934,1.075470,5.185946,-3.592510,-4.142760,3.480281,-8.513380,3.354784,2.890242,-2.106086,7.916631,-0.009064,3.661824,3.574533,-6.028001,7.452804,4.137551,7.138619,8.732655,5.201140,-2.128881,-5.687301,-9.621490,-7.713359,-6.426899,-1.248170,-6.336883,-7.406445,-4.018085,-6.383603,5.302407,-9.335414,-5.560955,-9.056323,-2.903657,9.041136,-3.576879,6.244243,8.425251,-2.466554,-0.035092,5.307911,1.793434,-6.427056,-6.392547,3.458471,-5.475730,-1.768214,8.623404,-9.359847,-9.956250,-9.752237,-7.252693,-6.887125,-7.365124,0.657627,7.300023,2.891687,-3.582870,-4.312636,-9.042653,3.733603,2.970019,7.129250,-1.989051,-7.472834,-9.014380,4.024441,-1.125570,-4.894137,5.413065,4.179237,8.121016,5.172468,-1.720730,-8.822199,4.479058,-4.830736,6.423873,1.437820,9.070747,6.734758,5.082227,-7.852595,-5.821976,-2.978960,-1.738477,-5.427899,-1.581641,-8.107322,8.837341,7.116723,-5.030715,0.043070,9.317664,4.110949,8.279118,-9.527833,2.426947,-3.746452,-9.244522,3.016000,3.872302,-3.420916,-4.612896,-1.963665,1.307917,-3.120903,5.912215,5.595612,5.481553,-8.464434,7.019113], dtype = "float64")#candidate|4861|(1024,)|const|float64
call_4860 = relay.TupleGetItem(func_1466_call(relay.reshape(const_4861.astype('float64'), [8, 128])), 0)
call_4862 = relay.TupleGetItem(func_1468_call(relay.reshape(const_4861.astype('float64'), [8, 128])), 0)
func_3676_call = mod.get_global_var('func_3676')
func_3680_call = mutated_mod.get_global_var('func_3680')
var_4864 = relay.var("var_4864", dtype = "uint64", shape = ())#candidate|4864|()|var|uint64
var_4865 = relay.var("var_4865", dtype = "uint64", shape = (490,))#candidate|4865|(490,)|var|uint64
call_4863 = func_3676_call(relay.reshape(var_4864.astype('uint64'), []), relay.reshape(var_4865.astype('uint64'), [7, 10, 7]), )
call_4866 = func_3676_call(relay.reshape(var_4864.astype('uint64'), []), relay.reshape(var_4865.astype('uint64'), [7, 10, 7]), )
output = relay.Tuple([uop_4854,call_4860,const_4861,call_4863,var_4864,var_4865,])
output2 = relay.Tuple([uop_4856,call_4862,const_4861,call_4866,var_4864,var_4865,])
func_4867 = relay.Function([var_4864,var_4865,], output)
mod['func_4867'] = func_4867
mod = relay.transform.InferType()(mod)
mutated_mod['func_4867'] = func_4867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4867_call = mutated_mod.get_global_var('func_4867')
var_4869 = relay.var("var_4869", dtype = "uint64", shape = ())#candidate|4869|()|var|uint64
var_4870 = relay.var("var_4870", dtype = "uint64", shape = (490,))#candidate|4870|(490,)|var|uint64
call_4868 = func_4867_call(var_4869,var_4870,)
output = call_4868
func_4871 = relay.Function([var_4869,var_4870,], output)
mutated_mod['func_4871'] = func_4871
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4905 = relay.var("var_4905", dtype = "float32", shape = ())#candidate|4905|()|var|float32
var_4906 = relay.var("var_4906", dtype = "float32", shape = (6, 16, 15))#candidate|4906|(6, 16, 15)|var|float32
bop_4907 = relay.power(var_4905.astype('float32'), var_4906.astype('float32')) # shape=(6, 16, 15)
func_2578_call = mod.get_global_var('func_2578')
func_2581_call = mutated_mod.get_global_var('func_2581')
const_4913 = relay.const([-6.603258,-0.924833,8.441387,6.358392,6.484720,-0.228819,-3.282071,-7.191264,-1.514923,7.871036,8.908404,1.573103,-2.362434,3.483745,-9.965402,-8.850602,2.240782,-0.655260,2.199478,1.553571,0.913897,-9.747969,8.367066,1.963504,-8.862271,-8.573357,-3.422172,-3.962105,-5.424050,2.054302,2.982383,5.253369,-6.830848,-7.729805,-0.818976,-5.051587,6.123757,4.605371,4.334026,2.452027,0.425793,-3.179978,3.029712,-9.894083,-8.784738,1.628130,-2.849877,-2.415291,-8.736686,-9.221702,2.803599,9.747444,-8.255179,8.251337,2.866874,4.188749,5.862463,-5.071902,1.338074,-6.395869,-6.053491,8.936492,1.022588,-4.906288,-0.637991,-7.014593,6.875669,9.825773,-5.945924,-4.172620,5.074862,0.044547,4.138235,7.583258,-6.934615,-8.696634,7.247526,7.088217,-7.301759,3.098968,7.657776,-0.012477,2.922348,-7.256007,-9.075409,4.974266,-8.471911,-4.884604,-4.362089,-1.422243,-9.773500,-7.006477,9.884227,-1.927782,9.804113,-7.304676,7.898566,5.722216,-6.745422,-3.735796,-3.973702,-4.068651,-8.261752,-9.020241,6.147935,-8.710756,-1.705087,3.526436,-7.608560,6.212672,1.272252,-3.337609,-9.119954,6.445704,0.887188,9.405651,9.077952,5.710553,0.283589,5.397941,-3.097692,-7.795871,-6.711974,-3.002169,1.133425,-3.406525,-4.157473,1.398363,-9.806329,0.111168,-8.410525,-1.231526,6.564298,-9.318065,4.303522,0.688520,1.658586,-2.284809,4.878213,-5.023223,-3.383437,-0.334341,-7.614874,9.363775,-1.444076,-2.394375,-8.404540,3.237435,-3.572435,-6.556558,5.002489,-5.664264,3.779122,-4.637351,8.838217,7.957503,3.780677,-8.250750,6.609465,-7.437396,8.075805,-7.634594,0.786739,9.295441,7.265953,-4.466492,0.929956,4.659975,3.613122,6.390800,5.946098,7.820293,-8.493473,-6.218529,3.658637,-2.224090,3.175648,-9.475131,-4.578647,1.396926,0.116035,-2.116145,-7.077975,8.077290,6.951049,-1.259709,8.020432,4.495902,-5.681540,3.039516,-7.235354,-9.134803,0.642720,1.400738,-1.813119,7.962340,-0.334607,-4.096998,-4.041410,-9.191004,-2.292148,-8.812618,-6.055279,-5.983190,5.113255,0.494225,4.947210,2.780133,-3.183460,-0.053167,4.382273,7.817426,8.455146,-2.676905,2.601504,4.465789,-1.658545,-7.802230,1.356947,6.437824,-5.854220,-4.108937,-1.966451,-4.718308,-2.431797,4.254230,0.574651,1.305752,-1.432555,-1.508763,3.241192,6.403294,8.069921,-2.473527,-9.001949,4.172289,-4.686207,-2.705575,3.716702,-1.607852,7.424514,-6.487673,-1.091910,2.957701,1.526785,-2.353509,3.573896,-8.170024,2.405886,5.718584,-4.622379,1.675596,5.598065,1.340682,-5.402003,-4.229203,6.747076,-5.087716,4.758643,-6.732067,0.240828,5.422613,2.798895,2.088018,-8.233821,-6.029315,7.029217,-7.853449,-5.523712,-3.229272,9.137864,-8.276860,4.519726,-8.655091,8.910956,0.265388,7.474053,0.518234,0.546963,-1.191551,-5.342998,-7.186545,-0.205335,-3.958397,5.296915,3.123489,7.080437,5.817423,7.461322,2.529955,3.593015,5.624499,1.562119,3.802538,-9.784046,9.016736,-8.127523,-6.266856,-9.664245,2.053004,6.966346,-8.944184,6.642366,8.152951,6.486498,0.858280,-3.300743,5.932251,4.486164,-9.288970,-5.821392,-8.364207,1.218999,6.262449,2.310006,5.321667,-5.177779,-1.148396,-1.460739,-1.608602,-0.180870,-4.961989,-0.076084,1.175743,-0.571350,6.082841,9.994679,3.249080,8.855481,-8.891570,-7.673786,3.267370,0.026237,-2.297830,-2.943840,1.934379,-3.103923,6.580743,2.093750,-2.237504,-4.623062,8.961480,-3.254956,-3.379166,9.771949,-1.229783,8.773627,-7.007409,5.971397,-1.376034,6.005137,6.299764,1.388459,4.632803,6.934222,-1.570241,0.483416,9.646087,-6.538581,1.529506,-5.246626,1.357756,-7.533258,-0.437295,-1.887904,1.123146,-2.938127,7.370896,7.006200,-5.258855,8.397755,-6.663535,-3.734788,-7.896290,8.736563,0.001470,6.117229,8.418286,-7.813637,-7.818695,-6.600969,3.419051,-7.695138,-8.201225,9.127483,-0.355258,4.172562,3.315826,-7.699698,4.305788,-7.253528,8.273108,3.438277,7.521275,-1.971393,7.873965,7.641862,0.506088,4.062645,1.772124,-3.305605,8.049408,-1.415678,-5.924246,-0.266077,-5.481759,-9.299947,1.178314,7.203265,0.290253,-1.662289,-6.165756,5.264307,2.730922,-2.724773,8.011427,-5.603527,-2.490146,-1.163403,7.200045,-2.395068,4.069145,0.792700,3.377959,2.134091,-1.677392,0.881800,1.957831,-4.406457,2.407969,0.972759,3.377109,-5.415791,-5.802825,-0.724683,2.088317,1.959967,4.743885,1.536878,6.373720,-2.659138,-4.567351,6.785434,-3.705397,-5.961835,-6.161610,1.232293,2.188074,7.356716,-2.950149,1.720478,9.694684,-1.830404,2.845057,9.121272,-1.437789,-9.544888,2.349028,-3.793178,4.074122,8.958461,-2.314545,-2.369908,-8.584516,3.119671,4.195712,6.805253,4.418792,-3.603495,3.820314,-8.092487,8.831357,6.786416,-8.644101,-0.619482,-1.563180,1.822367,-9.035836,7.594351,9.052618,9.706086,3.527650,5.578938,-6.308080,-5.980921,4.524166,3.303195,4.522411,2.843367,-7.662632,-2.903931,-1.638547,9.355686,5.284243,6.861423,6.946892,8.062350,1.738529,-5.369172,-4.685955,-8.788702,3.374162,-1.807887,-3.215686,-0.519322,-0.693171,0.441026,-6.359275,1.368074,8.003999,-3.908766,-5.678229,-1.522888,3.460920,5.795356,6.870791,0.601701,-3.556685,8.048016,-7.187769,9.824124,-6.545773,0.460582,-9.387219,-8.200557,6.272498,-4.910839,1.734450,-6.027412,6.105651,-5.586522,3.904825,5.829220,-1.781158,-4.752501,-7.569858,0.009235,-5.124526,2.786153,7.858092,5.734840,3.637622,-9.469786,-1.588708,4.829263,9.660906,-2.508882,2.280251,-9.582271,-8.366711,-0.745756,-6.285141,-1.116294,-4.289200,0.611562,4.767579,1.423252,7.676602,0.743010,-3.255952,0.567691,8.087114,-5.070029,-2.817850,-6.478564,0.399871,0.151143,-7.912822,-4.190764,-4.168649,-7.714598,-0.594274,-4.505435,-7.310517,3.566520,-1.105482,-2.973551,-5.680260,-9.733771,3.502376,-8.924977,-5.537122,-9.181428,9.519902,6.366510,5.793024,7.747933,2.279682,1.790767,-9.637842,-4.721527,3.628019,-6.092864,0.931808,-6.934884,0.764329,5.495303,3.137475,-8.067507,3.119780,-8.802118,4.676324,-1.743234,1.468509,-5.707500,7.637166,-2.340439,0.206896,-2.773311,1.371920,9.679809,7.085083,-2.931822,2.239552,0.785012,3.627762,2.863293,-9.688716,7.645882,0.451154,8.852311,8.904650,3.593282,-5.000134,0.882472,9.624801,-1.429248,-7.356051,8.847885,5.391166,-1.280470,-1.968123,7.078689,2.825982,-3.892455,0.569287,2.715931,8.926560,1.004036,6.448483,6.514168,-1.747004,6.877856,9.326904,-0.488762,-8.076343,5.813426,-1.955684,0.001307,1.702885,-2.811437,8.869050,9.842669,-8.332437,-9.195990,-3.872063,-4.087954,1.381795,5.704707,-5.198954,1.303410,-8.802564,4.337031,9.462499,-0.320910,-5.737738,0.167070,4.682238,-1.362254,-2.981117,4.910613,7.052919,6.920585,0.235534,8.630360,-8.242561,-9.137054,0.832752,0.664883,-3.174680,6.111115,-8.342416,-3.066050,-3.457033,3.886527,3.888502,0.851707,1.519131,5.737044,9.506515,-6.299763,5.172880,-0.948203,9.521779,-1.520530,3.430287,-3.732478,-2.776522,1.509109,-1.087580,9.040120,8.308846,-8.566095,0.532699,-4.235430,-1.284414,-5.973745,1.322533,-2.095209,-7.333090,5.261689,-1.717216,6.473252,-1.116797,0.743206,-8.384058,5.777581,7.124668,-4.256572,2.144597,5.568157,4.521559,-2.602749,-2.261937,1.051120,3.762638,0.936992,9.605441,-0.720415,7.393838,-8.636849,1.470728,-7.590618,8.773828,0.302475,8.871385,-7.259738,3.836883,6.792431,3.082587,-0.539009,4.710225,-5.339200,7.687925,9.303365,3.778805,-1.081065,5.903842,5.511509,3.009961,9.683055,-4.039149,3.665844,-6.991562,2.008580,-5.569895,-4.001495,5.379589,-0.273524,-3.292545,-0.826844,6.094290,-2.245123,7.424983,9.087742,-1.396562,2.539084,-9.815556,-5.746004,6.894642,-7.489801,-0.133617,-4.910589,0.819006,-4.057497,-9.014266,4.242083,8.760342,-5.872030,-0.043530,3.133701,-0.356130,2.954663,0.833568,-3.860901,9.972650,-0.930092,1.475914,-3.071619,0.914222,-1.788656,9.627848,8.372922,3.747307,1.294669,0.241459,1.204569,6.030943,-5.063128,-7.594220,5.687793,4.928948,9.157214,-7.629570,-9.048120,-5.530718,1.342510,-0.653732,-5.199221,-2.331299,6.076684,-9.633220,-3.715806,0.006643,3.005447,7.634452,-2.234393,-6.884291,0.040859,1.321731,6.458218,3.861064,6.024630,4.686076,0.687075,9.359323,-2.273979,9.450076,7.511936,8.851918,9.864123,3.892248,-2.542833,8.691843,9.888772,3.137174,6.468623,6.412837,-3.671687,-7.938417,4.780827,6.335728,-6.159724,-4.203147,6.895537,-5.153192,-4.043694,-0.035035,5.814784,-3.375741,-4.524498,3.078933,-1.334750,-5.500937,-1.348675,7.054274,-9.095510,9.776459,0.853970,-8.331493,4.037157,3.595839,0.385253,-8.363047,-1.489006,1.328273,-2.133826,-3.774764,9.424473,-1.973959,4.057216,2.001403,-9.267210,-2.777918,-8.140104,-8.102458,8.143640,2.354783,-5.561080,-0.095746,2.118526,7.378241,-8.479675,-4.066177,0.908963,1.378161,-9.764338,-6.170337,4.020647,2.097952,-3.559246,-2.196685,6.003986,-5.421645,5.273768,-1.874153,-8.116768,1.590209,8.906535,-5.984674,-4.953021,-0.738415,6.596806,6.401040,3.623225,-6.822812,-1.594633,-4.206573,9.041191,9.242421,7.781818,1.790647,-2.961459,-6.406609,-8.975383,-2.758779,5.869527,-0.538262,0.199150,4.857289,-4.266443,-3.849717,-6.038754,-9.359758,3.735598,8.509518,-1.628269,-6.184340,7.807963,-6.412367,-0.680221,-5.922961,4.079561,-8.084598,-8.121574,-6.196433,3.185726,2.022333,1.251229,7.196859,-1.500421,6.084437,1.641674,1.990676,-6.207325,2.205182,-4.076055,-9.096160,-3.058416,-5.124876,8.390021,8.089630,-2.926817,-9.139410,-2.529412,-9.108700,-0.493399,6.419362,-2.179054,-7.067657,6.124079,1.485557,8.533257,8.996979,-6.746359,-5.306458,-3.828968,-4.766576,7.500090,-5.386037,6.868055,-4.960845,-9.021751,3.567487,-2.153253,-6.247980,2.845236,0.014809,7.495353,-5.351578,-4.503900,0.124725,-7.153583,9.638746,2.095187,-9.513901,1.418233,-6.492645,-3.863494,-6.217604,-5.321054,-0.372329,-7.177214,-5.962070,3.897949,1.970950,-7.425064,-1.302671,-3.581121,-5.775834,-2.895417,-0.216528,1.551108,1.074985,5.434297,-3.614865,-2.429557,4.777227,-3.500678,1.688461,2.431292,1.001487,9.687273,-0.803236,-3.286185,1.151772,0.643494,-1.376870,5.385458,7.618255,0.797634,-3.097233,-9.490112,-7.888009,4.016173,-7.051452,-2.754730,-4.850984,-4.232573,1.970928,0.382225,1.294971,8.452174,1.278079,8.513996,1.866192,-1.935196,5.598816,1.632476,7.407660,0.953046,9.443414,-0.918039,6.977941,3.965251,2.473415,-7.762767,2.852068,-1.619830,-4.812700,7.534642,-4.506086,7.100703,7.063868,7.029990,0.775185,-0.043724,-0.827593,0.946703,4.390981,-7.257558,9.767537,4.830101,-7.975053,-5.006434,-5.191033,-1.753467,5.102820,-0.738772,4.823138,-7.736333,-0.314977,1.589796,4.985939,-5.887412,4.894470,0.048907,9.413868,-5.521238,-3.417267,-5.749953,-2.869935,0.943751,-9.767284,-5.075841,3.689437,6.018550,-1.194377,-2.871576,2.638681,-2.665024,1.611381,5.376932,2.435612,6.567533,-0.165630,-4.440180,-9.955826,5.718315,0.729427,-3.786970,-2.397117,-7.888174,3.103634,-6.120132,7.214237,4.095676,-2.938641,-1.611728,-7.741679,6.608142,1.739809,-3.468716,9.511948,3.602008,5.560647,5.948937,1.759328,-2.386062,-0.076493,2.778593,-2.213507,-5.042814,9.916497,-6.083047,-1.799491,8.408026,6.754095,-3.977344,6.831114,5.980312,1.096189,-6.864702,-2.183429,1.994676,7.031930,-6.189414,-9.964638,-6.345001,1.736155,8.144912,-3.075186,-8.974666,-8.327266], dtype = "float64")#candidate|4913|(1144,)|const|float64
var_4914 = relay.var("var_4914", dtype = "float32", shape = (10, 44))#candidate|4914|(10, 44)|var|float32
call_4912 = relay.TupleGetItem(func_2578_call(relay.reshape(const_4913.astype('float64'), [13, 11, 8]), relay.reshape(var_4914.astype('float32'), [5, 88]), ), 4)
call_4915 = relay.TupleGetItem(func_2581_call(relay.reshape(const_4913.astype('float64'), [13, 11, 8]), relay.reshape(var_4914.astype('float32'), [5, 88]), ), 4)
func_790_call = mod.get_global_var('func_790')
func_794_call = mutated_mod.get_global_var('func_794')
var_4924 = relay.var("var_4924", dtype = "int64", shape = (77, 15))#candidate|4924|(77, 15)|var|int64
call_4923 = relay.TupleGetItem(func_790_call(relay.reshape(var_4924.astype('int64'), [15, 7, 11]), relay.reshape(var_4924.astype('int64'), [15, 7, 11]), ), 1)
call_4925 = relay.TupleGetItem(func_794_call(relay.reshape(var_4924.astype('int64'), [15, 7, 11]), relay.reshape(var_4924.astype('int64'), [15, 7, 11]), ), 1)
output = relay.Tuple([bop_4907,call_4912,const_4913,var_4914,call_4923,var_4924,])
output2 = relay.Tuple([bop_4907,call_4915,const_4913,var_4914,call_4925,var_4924,])
func_4926 = relay.Function([var_4905,var_4906,var_4914,var_4924,], output)
mod['func_4926'] = func_4926
mod = relay.transform.InferType()(mod)
var_4927 = relay.var("var_4927", dtype = "float32", shape = ())#candidate|4927|()|var|float32
var_4928 = relay.var("var_4928", dtype = "float32", shape = (6, 16, 15))#candidate|4928|(6, 16, 15)|var|float32
var_4929 = relay.var("var_4929", dtype = "float32", shape = (10, 44))#candidate|4929|(10, 44)|var|float32
var_4930 = relay.var("var_4930", dtype = "int64", shape = (77, 15))#candidate|4930|(77, 15)|var|int64
output = func_4926(var_4927,var_4928,var_4929,var_4930,)
func_4931 = relay.Function([var_4927,var_4928,var_4929,var_4930,], output)
mutated_mod['func_4931'] = func_4931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1368_call = mod.get_global_var('func_1368')
func_1369_call = mutated_mod.get_global_var('func_1369')
call_4990 = relay.TupleGetItem(func_1368_call(), 0)
call_4991 = relay.TupleGetItem(func_1369_call(), 0)
output = relay.Tuple([call_4990,])
output2 = relay.Tuple([call_4991,])
func_5029 = relay.Function([], output)
mod['func_5029'] = func_5029
mod = relay.transform.InferType()(mod)
output = func_5029()
func_5030 = relay.Function([], output)
mutated_mod['func_5030'] = func_5030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5034 = relay.var("var_5034", dtype = "uint16", shape = (1, 14))#candidate|5034|(1, 14)|var|uint16
var_5035 = relay.var("var_5035", dtype = "uint16", shape = (1, 14))#candidate|5035|(1, 14)|var|uint16
bop_5036 = relay.right_shift(var_5034.astype('uint16'), relay.reshape(var_5035.astype('uint16'), relay.shape_of(var_5034))) # shape=(1, 14)
output = relay.Tuple([bop_5036,])
output2 = relay.Tuple([bop_5036,])
func_5049 = relay.Function([var_5034,var_5035,], output)
mod['func_5049'] = func_5049
mod = relay.transform.InferType()(mod)
mutated_mod['func_5049'] = func_5049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5049_call = mutated_mod.get_global_var('func_5049')
var_5051 = relay.var("var_5051", dtype = "uint16", shape = (1, 14))#candidate|5051|(1, 14)|var|uint16
var_5052 = relay.var("var_5052", dtype = "uint16", shape = (1, 14))#candidate|5052|(1, 14)|var|uint16
call_5050 = func_5049_call(var_5051,var_5052,)
output = call_5050
func_5053 = relay.Function([var_5051,var_5052,], output)
mutated_mod['func_5053'] = func_5053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2905_call = mod.get_global_var('func_2905')
func_2906_call = mutated_mod.get_global_var('func_2906')
call_5075 = relay.TupleGetItem(func_2905_call(), 1)
call_5076 = relay.TupleGetItem(func_2906_call(), 1)
var_5083 = relay.var("var_5083", dtype = "uint32", shape = (8, 128))#candidate|5083|(8, 128)|var|uint32
bop_5084 = relay.less(call_5075.astype('bool'), relay.reshape(var_5083.astype('bool'), relay.shape_of(call_5075))) # shape=(8, 128)
bop_5087 = relay.less(call_5076.astype('bool'), relay.reshape(var_5083.astype('bool'), relay.shape_of(call_5076))) # shape=(8, 128)
func_842_call = mod.get_global_var('func_842')
func_848_call = mutated_mod.get_global_var('func_848')
const_5090 = relay.const([[6.202914,8.627239,-7.258537,-3.147331],[-1.473383,-8.819076,-1.775306,-5.641784],[-0.262629,0.471606,8.294619,-3.721131],[1.410691,-0.767235,-2.728043,4.144190],[-0.874612,3.591127,7.153910,1.902317],[-4.409523,3.538088,-5.662823,-4.185242],[-7.883948,-1.749706,-0.637609,3.240943],[4.346297,7.689211,-1.599415,5.278295],[3.342657,3.337197,-9.930279,4.615650],[-8.969618,7.629816,-6.075836,1.371477],[-9.460653,-8.960909,3.064365,-9.054510],[7.393446,-1.436920,0.828935,-4.079446],[-2.739530,0.485438,-3.920429,4.870884],[9.593156,-1.929511,-1.977283,-0.864862],[6.694883,6.373967,-4.807894,2.558379],[-5.687562,-8.587424,5.610463,-9.092561],[-5.539846,6.561092,-9.659024,-1.225245],[5.827277,7.562218,-9.562436,-2.716939],[-9.351195,-5.707498,-1.201350,-7.063155],[0.835928,-9.583557,-2.403918,2.069512],[-5.331405,0.375647,4.388496,-6.272246],[-8.551173,9.267394,-9.135196,3.137427],[0.444949,8.696063,4.229212,-9.637846],[-1.227769,-4.062469,-1.825222,-0.293839],[-6.502776,8.906149,0.184399,-8.405451],[-0.182629,-1.294136,-5.752657,8.691884],[-0.295592,2.351458,5.236955,-9.343047],[-5.448343,-2.520482,-9.709536,2.496668],[-4.153187,0.628187,-8.568981,-2.523211],[1.179733,0.533097,-7.630871,9.198436],[-2.704794,-6.703687,3.481665,9.667150],[0.369106,-5.177958,-3.858823,-2.645023],[-2.615912,-6.425898,-1.650587,3.877935],[-0.469244,4.759032,-4.256703,3.095189],[5.115314,-9.334927,-1.644161,-4.482979],[1.760070,-0.339420,-2.106345,-7.698119],[-8.427843,0.911248,2.525016,-3.607274],[-6.529486,-5.391587,-4.222517,2.640773],[-9.472779,-9.145841,1.491965,-0.471935],[9.158449,1.821939,-6.835377,1.361568],[-0.546353,1.274677,5.439774,1.027853],[8.643945,-3.798297,0.450711,1.039510],[2.230194,4.642984,-6.865725,4.714694],[-7.815966,8.410774,6.645062,4.667309],[7.722321,8.400656,-6.367642,-9.102938],[6.827904,4.590830,-5.857193,-6.581689],[7.116342,6.170335,4.110663,3.433958],[9.859875,-8.829007,2.371411,-1.949969],[-2.921138,-0.111521,5.362131,-4.712886],[2.218421,6.730136,-0.885307,-4.291140],[3.873779,0.032447,-5.730746,-3.795243],[3.399564,-3.832593,-6.524287,-3.986571],[6.515080,2.871106,3.996232,4.706524],[-0.916163,2.994401,-9.504909,-8.233203],[2.149021,-8.600375,-6.353431,6.035368],[-2.536751,1.428144,-3.165542,6.005133],[-4.921287,-5.868843,6.407510,-3.435999],[5.983717,-7.564285,3.189113,5.721517],[0.976591,0.902057,9.284871,0.246471],[-8.409139,-9.146864,-9.503294,-9.256905],[8.819768,7.412468,-4.396098,-0.643932],[2.561069,7.855690,1.933415,7.332655],[6.166124,-1.841784,9.591746,-6.936100],[-2.400921,-8.633133,-5.128853,2.070106],[-9.188464,-8.889953,3.719455,-0.256736],[-2.140776,5.890007,-7.034040,-0.943641],[0.314483,-4.919397,-7.642122,4.854113],[-8.273112,-1.255888,-8.792908,-2.761903],[-6.379675,-6.610256,4.334851,-8.021259],[-3.619290,9.678127,-9.797162,-6.678852],[-1.070093,-9.771285,9.972831,-2.788962],[6.942847,8.204520,-3.362220,-1.462011],[-1.052776,-6.289081,5.243297,4.620677],[1.313765,3.808092,-5.853089,9.459961],[-1.672351,-2.684086,6.593259,0.305121],[8.406624,4.250138,-8.919536,-5.932974],[-0.956284,-1.758602,2.824145,5.437358],[-0.658710,-8.135208,2.105287,-4.870776],[5.213019,8.416123,4.042679,1.343457],[9.726927,-7.673385,9.936128,9.105788],[-1.753902,9.622443,8.488615,-8.342764],[8.858311,0.719803,-2.524084,0.534600],[-8.743273,4.296644,5.419794,-2.817665],[1.165154,0.389987,1.533620,-0.764553],[-3.598289,9.537450,-2.066226,-9.855542],[-1.305225,-5.640016,8.196804,-3.865114],[6.178676,1.137396,-1.986282,0.987342],[-5.516550,-6.939723,5.854111,7.808813],[8.954467,-9.418863,-5.834271,0.310916],[-9.530144,-6.421860,4.363874,7.746408],[-6.542060,-6.765842,-1.529606,-9.484449],[-9.468940,-2.593119,4.007324,4.555674],[-3.195138,-9.259725,-2.875276,4.451548],[-0.942636,-1.041840,-9.957999,-3.939175],[-9.629384,9.142849,-8.997408,-2.658966],[1.774350,2.709524,-9.000388,4.633613],[-6.233493,-7.877642,4.192959,0.903314],[0.640500,-9.851791,6.048587,-9.788644],[3.818980,-7.834990,7.146270,-3.072677],[8.338474,9.906864,-5.505246,-4.620810],[-3.770878,-4.285161,-9.217639,4.938182],[6.931884,5.051683,-4.775527,2.431212],[1.907704,-6.352051,-5.739552,9.730204],[-5.668780,4.667473,8.221689,5.684117],[-8.842479,-5.232180,6.740608,-0.316130],[3.343458,7.133822,1.535403,4.118405],[-1.125272,5.828099,-4.729456,-8.426340],[8.418064,1.763676,0.549384,3.020597],[-9.550067,-4.587100,4.337619,9.647236],[-0.244953,1.669377,7.211952,-6.628085]], dtype = "float32")#candidate|5090|(110, 4)|const|float32
var_5091 = relay.var("var_5091", dtype = "uint32", shape = (2250,))#candidate|5091|(2250,)|var|uint32
call_5089 = relay.TupleGetItem(func_842_call(relay.reshape(const_5090.astype('float32'), [4, 10, 11]), relay.reshape(const_5090.astype('float32'), [4, 10, 11]), relay.reshape(var_5091.astype('uint32'), [2250,]), relay.reshape(call_5075.astype('float64'), [1024,]), ), 2)
call_5092 = relay.TupleGetItem(func_848_call(relay.reshape(const_5090.astype('float32'), [4, 10, 11]), relay.reshape(const_5090.astype('float32'), [4, 10, 11]), relay.reshape(var_5091.astype('uint32'), [2250,]), relay.reshape(call_5075.astype('float64'), [1024,]), ), 2)
var_5095 = relay.var("var_5095", dtype = "float32", shape = (110, 4))#candidate|5095|(110, 4)|var|float32
bop_5096 = relay.equal(const_5090.astype('bool'), relay.reshape(var_5095.astype('bool'), relay.shape_of(const_5090))) # shape=(110, 4)
func_2455_call = mod.get_global_var('func_2455')
func_2458_call = mutated_mod.get_global_var('func_2458')
var_5114 = relay.var("var_5114", dtype = "float32", shape = (250,))#candidate|5114|(250,)|var|float32
call_5113 = relay.TupleGetItem(func_2455_call(relay.reshape(var_5114.astype('float32'), [5, 5, 10])), 2)
call_5115 = relay.TupleGetItem(func_2458_call(relay.reshape(var_5114.astype('float32'), [5, 5, 10])), 2)
output = relay.Tuple([bop_5084,call_5089,var_5091,bop_5096,call_5113,var_5114,])
output2 = relay.Tuple([bop_5087,call_5092,var_5091,bop_5096,call_5115,var_5114,])
func_5120 = relay.Function([var_5083,var_5091,var_5095,var_5114,], output)
mod['func_5120'] = func_5120
mod = relay.transform.InferType()(mod)
mutated_mod['func_5120'] = func_5120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5120_call = mutated_mod.get_global_var('func_5120')
var_5122 = relay.var("var_5122", dtype = "uint32", shape = (8, 128))#candidate|5122|(8, 128)|var|uint32
var_5123 = relay.var("var_5123", dtype = "uint32", shape = (2250,))#candidate|5123|(2250,)|var|uint32
var_5124 = relay.var("var_5124", dtype = "float32", shape = (110, 4))#candidate|5124|(110, 4)|var|float32
var_5125 = relay.var("var_5125", dtype = "float32", shape = (250,))#candidate|5125|(250,)|var|float32
call_5121 = func_5120_call(var_5122,var_5123,var_5124,var_5125,)
output = call_5121
func_5126 = relay.Function([var_5122,var_5123,var_5124,var_5125,], output)
mutated_mod['func_5126'] = func_5126
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5136 = relay.var("var_5136", dtype = "float32", shape = (13, 10, 1))#candidate|5136|(13, 10, 1)|var|float32
uop_5137 = relay.asinh(var_5136.astype('float32')) # shape=(13, 10, 1)
func_4476_call = mod.get_global_var('func_4476')
func_4478_call = mutated_mod.get_global_var('func_4478')
call_5139 = relay.TupleGetItem(func_4476_call(), 0)
call_5140 = relay.TupleGetItem(func_4478_call(), 0)
bop_5152 = relay.divide(uop_5137.astype('float64'), relay.reshape(var_5136.astype('float64'), relay.shape_of(uop_5137))) # shape=(13, 10, 1)
bop_5159 = relay.floor_mod(uop_5137.astype('float64'), relay.reshape(bop_5152.astype('float64'), relay.shape_of(uop_5137))) # shape=(13, 10, 1)
func_1593_call = mod.get_global_var('func_1593')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_5168 = func_1593_call()
call_5169 = func_1593_call()
func_3842_call = mod.get_global_var('func_3842')
func_3844_call = mutated_mod.get_global_var('func_3844')
const_5171 = relay.const([8.740284,-0.192004,9.377199,2.420635,-0.540179,-9.070370,-6.266681,9.899105,-7.849127,-6.555375,-9.512452,7.322944,-2.213930,8.836945,1.417545,4.840858,2.856560,2.778248,-7.910567,-0.877028,8.826518,7.766155,-6.246073,-0.848149,4.247261,3.634847,3.818613,1.571271,-8.415532,8.498103,3.168574,-6.801218,6.574703,-6.130479,-5.973959,-2.962222,2.326130,4.213331,-2.485895,-9.242004,3.403636,8.615323,2.345863,-0.090178,-4.447327,6.362005,-2.122572,-3.436930,4.743321,3.126510,1.735638,4.676145,5.665080,4.483543,-5.452138,5.745196,6.351426,-8.629448,-6.084939,-8.446812,7.924420,-5.379262,3.000603,9.347525,5.421338,-5.066446,-7.651915,0.939691,4.827307,5.300256,2.095973,2.212144,9.162848,8.761518,-0.344404,-5.765440,3.264969,8.348030,4.653304,3.656176,7.063198,-7.453967,6.285245,6.050581,-5.012838,4.841002,2.660342,-2.766794,-7.679836,-1.598594,-5.993221,-9.342884,-8.446100,-0.502887,-6.243554,-0.924686,-3.762347,8.603502,3.125981,-7.198688,4.860289,1.721925,-7.113444,-7.215923,4.498978,0.974099,4.791486,6.442536,2.767798,-9.385330,6.387753,8.351202,2.798798,6.233685,8.419932,-3.564165,8.206426,3.261742,0.311094,3.243085,1.917938,-3.753357,-0.336504,-3.555929,-1.235256,-4.703471,0.093332,3.867418,-2.422405,3.951496,-1.862284,1.574910,8.244550,8.498823,-9.118671,1.342788,9.298722,-5.793441,8.054518,0.194938,8.402045,6.318813,6.295463,8.948119,-6.723645,6.938298,-9.514346,-3.386854,2.045608,8.525108,-2.826009,1.550224,-4.739394,-8.511992,-5.594245,5.242032,9.830456,6.636889,7.881495,-4.277530,5.729578,-3.135883,-5.417651,-1.709680,-2.185695,0.553166,-9.910059,-9.287740,6.016177,3.904306,-3.727659,6.454487,0.263464,-6.808458,-7.437614,-1.003736,-7.229114,2.540700,-6.697514,0.619363,7.746510,9.787530,2.550283,5.771274,-5.550555,0.386748,2.777949,-7.668892,0.573826,-7.799773,-6.759985,2.197532,9.736467,4.008829,-0.934603,7.458107,-3.890831,-8.128287,-5.880572,-4.836949,-5.950448,-2.502701,-9.337777,-0.971918,7.099697,5.903098,-3.609995,8.486608,-4.296137,9.528512,3.755612,-3.241526,6.387595,9.435905,-0.789088,8.057009,9.625703,0.417812,-5.781280,0.740930,-0.560804,2.593859,-2.575414,-8.933795,-3.522780,2.792061,-2.368051,2.679585,-7.989935,-9.317001,-9.684998,7.506396,9.237789,5.058040,7.184506,3.922387,-6.456022,-8.049266,9.568111,5.147415,-7.617524,1.408322,-7.874211,-8.082262,-0.784228,-4.940305,-0.545545,-0.598730,-4.327863,-8.067565,1.339291,9.666248,-8.491523,-5.051282,-6.438487,2.961027,-3.092704,-8.422015,8.486613,-0.377276,0.810121,-3.025927,-3.637594,5.624226,2.823852,-0.476835,2.052076,-2.993137,7.668907,-5.540286,-9.604155,-1.021999,-6.217322,0.161203,-6.519472,9.801418,-5.968930,8.982223,5.883819,2.650127,-9.237305,6.626342,7.071192,-3.067473,-7.342823,4.403762,-6.463362,4.462148,-5.657457,3.013834,-7.656869,-8.973045,-3.048717,-7.841523,-5.807795,-5.706516,1.619074,-9.964282,3.429896,-9.867925,0.644336,-0.278961,1.999130,5.810439,1.053759,-0.794708,7.834829,-2.885805,7.054504,4.638118,1.805556,-2.449547,6.969764,2.982586,3.231228,-6.300798,4.916907,4.633436,8.810848,-5.405534,4.187297,-6.090558,7.703326,-1.607806,4.616424,-2.953153,-8.557408,-8.663587,-1.734666,-2.536213], dtype = "float64")#candidate|5171|(330,)|const|float64
call_5170 = relay.TupleGetItem(func_3842_call(relay.reshape(const_5171.astype('float64'), [2, 15, 11])), 2)
call_5172 = relay.TupleGetItem(func_3844_call(relay.reshape(const_5171.astype('float64'), [2, 15, 11])), 2)
output = relay.Tuple([call_5139,bop_5159,call_5168,call_5170,const_5171,])
output2 = relay.Tuple([call_5140,bop_5159,call_5169,call_5172,const_5171,])
func_5174 = relay.Function([var_5136,], output)
mod['func_5174'] = func_5174
mod = relay.transform.InferType()(mod)
mutated_mod['func_5174'] = func_5174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5175 = relay.var("var_5175", dtype = "float32", shape = (13, 10, 1))#candidate|5175|(13, 10, 1)|var|float32
func_5174_call = mutated_mod.get_global_var('func_5174')
call_5176 = func_5174_call(var_5175)
output = call_5176
func_5177 = relay.Function([var_5175], output)
mutated_mod['func_5177'] = func_5177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4764_call = mod.get_global_var('func_4764')
func_4765_call = mutated_mod.get_global_var('func_4765')
call_5202 = relay.TupleGetItem(func_4764_call(), 0)
call_5203 = relay.TupleGetItem(func_4765_call(), 0)
func_3471_call = mod.get_global_var('func_3471')
func_3472_call = mutated_mod.get_global_var('func_3472')
call_5213 = relay.TupleGetItem(func_3471_call(), 0)
call_5214 = relay.TupleGetItem(func_3472_call(), 0)
var_5242 = relay.var("var_5242", dtype = "bool", shape = (4, 6, 10))#candidate|5242|(4, 6, 10)|var|bool
bop_5243 = relay.floor_mod(call_5202.astype('float64'), relay.reshape(var_5242.astype('float64'), relay.shape_of(call_5202))) # shape=(4, 6, 10)
bop_5246 = relay.floor_mod(call_5203.astype('float64'), relay.reshape(var_5242.astype('float64'), relay.shape_of(call_5203))) # shape=(4, 6, 10)
output = relay.Tuple([call_5213,bop_5243,])
output2 = relay.Tuple([call_5214,bop_5246,])
func_5256 = relay.Function([var_5242,], output)
mod['func_5256'] = func_5256
mod = relay.transform.InferType()(mod)
mutated_mod['func_5256'] = func_5256
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5257 = relay.var("var_5257", dtype = "bool", shape = (4, 6, 10))#candidate|5257|(4, 6, 10)|var|bool
func_5256_call = mutated_mod.get_global_var('func_5256')
call_5258 = func_5256_call(var_5257)
output = call_5258
func_5259 = relay.Function([var_5257], output)
mutated_mod['func_5259'] = func_5259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1911_call = mod.get_global_var('func_1911')
func_1912_call = mutated_mod.get_global_var('func_1912')
call_5322 = relay.TupleGetItem(func_1911_call(), 0)
call_5323 = relay.TupleGetItem(func_1912_call(), 0)
output = call_5322
output2 = call_5323
func_5325 = relay.Function([], output)
mod['func_5325'] = func_5325
mod = relay.transform.InferType()(mod)
output = func_5325()
func_5326 = relay.Function([], output)
mutated_mod['func_5326'] = func_5326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5029_call = mod.get_global_var('func_5029')
func_5030_call = mutated_mod.get_global_var('func_5030')
call_5364 = relay.TupleGetItem(func_5029_call(), 0)
call_5365 = relay.TupleGetItem(func_5030_call(), 0)
uop_5388 = relay.asin(call_5364.astype('float64')) # shape=(8, 128)
uop_5390 = relay.asin(call_5365.astype('float64')) # shape=(8, 128)
func_4270_call = mod.get_global_var('func_4270')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_5393 = relay.TupleGetItem(func_4270_call(), 6)
call_5394 = relay.TupleGetItem(func_4272_call(), 6)
func_763_call = mod.get_global_var('func_763')
func_765_call = mutated_mod.get_global_var('func_765')
call_5395 = relay.TupleGetItem(func_763_call(), 2)
call_5396 = relay.TupleGetItem(func_765_call(), 2)
output = relay.Tuple([uop_5388,call_5393,call_5395,])
output2 = relay.Tuple([uop_5390,call_5394,call_5396,])
func_5404 = relay.Function([], output)
mod['func_5404'] = func_5404
mod = relay.transform.InferType()(mod)
mutated_mod['func_5404'] = func_5404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5404_call = mutated_mod.get_global_var('func_5404')
call_5405 = func_5404_call()
output = call_5405
func_5406 = relay.Function([], output)
mutated_mod['func_5406'] = func_5406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1593_call = mod.get_global_var('func_1593')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_5465 = func_1593_call()
call_5466 = func_1593_call()
func_1343_call = mod.get_global_var('func_1343')
func_1345_call = mutated_mod.get_global_var('func_1345')
var_5478 = relay.var("var_5478", dtype = "uint32", shape = (2250,))#candidate|5478|(2250,)|var|uint32
call_5477 = relay.TupleGetItem(func_1343_call(relay.reshape(var_5478.astype('uint32'), [2250,])), 0)
call_5479 = relay.TupleGetItem(func_1345_call(relay.reshape(var_5478.astype('uint32'), [2250,])), 0)
output = relay.Tuple([call_5465,call_5477,var_5478,])
output2 = relay.Tuple([call_5466,call_5479,var_5478,])
func_5484 = relay.Function([var_5478,], output)
mod['func_5484'] = func_5484
mod = relay.transform.InferType()(mod)
mutated_mod['func_5484'] = func_5484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5485 = relay.var("var_5485", dtype = "uint32", shape = (2250,))#candidate|5485|(2250,)|var|uint32
func_5484_call = mutated_mod.get_global_var('func_5484')
call_5486 = func_5484_call(var_5485)
output = call_5486
func_5487 = relay.Function([var_5485], output)
mutated_mod['func_5487'] = func_5487
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5503 = relay.var("var_5503", dtype = "float64", shape = (3, 12, 11))#candidate|5503|(3, 12, 11)|var|float64
uop_5504 = relay.tan(var_5503.astype('float64')) # shape=(3, 12, 11)
bop_5506 = relay.not_equal(var_5503.astype('bool'), relay.reshape(uop_5504.astype('bool'), relay.shape_of(var_5503))) # shape=(3, 12, 11)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
call_5510 = func_971_call()
call_5511 = func_971_call()
output = relay.Tuple([bop_5506,call_5510,])
output2 = relay.Tuple([bop_5506,call_5511,])
func_5517 = relay.Function([var_5503,], output)
mod['func_5517'] = func_5517
mod = relay.transform.InferType()(mod)
var_5518 = relay.var("var_5518", dtype = "float64", shape = (3, 12, 11))#candidate|5518|(3, 12, 11)|var|float64
output = func_5517(var_5518)
func_5519 = relay.Function([var_5518], output)
mutated_mod['func_5519'] = func_5519
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5580 = relay.const(7, dtype = "uint8")#candidate|5580|()|const|uint8
var_5581 = relay.var("var_5581", dtype = "uint8", shape = (5, 1, 8))#candidate|5581|(5, 1, 8)|var|uint8
bop_5582 = relay.bitwise_xor(const_5580.astype('uint8'), var_5581.astype('uint8')) # shape=(5, 1, 8)
func_4828_call = mod.get_global_var('func_4828')
func_4830_call = mutated_mod.get_global_var('func_4830')
call_5587 = func_4828_call()
call_5588 = func_4828_call()
var_5592 = relay.var("var_5592", dtype = "uint8", shape = (5, 14, 8))#candidate|5592|(5, 14, 8)|var|uint8
bop_5593 = relay.floor_mod(bop_5582.astype('float64'), var_5592.astype('float64')) # shape=(5, 14, 8)
func_5404_call = mod.get_global_var('func_5404')
func_5406_call = mutated_mod.get_global_var('func_5406')
call_5598 = relay.TupleGetItem(func_5404_call(), 1)
call_5599 = relay.TupleGetItem(func_5406_call(), 1)
uop_5600 = relay.log2(var_5581.astype('float64')) # shape=(5, 1, 8)
func_4090_call = mod.get_global_var('func_4090')
func_4091_call = mutated_mod.get_global_var('func_4091')
call_5605 = relay.TupleGetItem(func_4090_call(), 0)
call_5606 = relay.TupleGetItem(func_4091_call(), 0)
bop_5609 = relay.logical_and(uop_5600.astype('bool'), relay.reshape(var_5581.astype('bool'), relay.shape_of(uop_5600))) # shape=(5, 1, 8)
func_4219_call = mod.get_global_var('func_4219')
func_4221_call = mutated_mod.get_global_var('func_4221')
call_5628 = relay.TupleGetItem(func_4219_call(), 1)
call_5629 = relay.TupleGetItem(func_4221_call(), 1)
bop_5648 = relay.multiply(bop_5609.astype('int32'), var_5592.astype('int32')) # shape=(5, 14, 8)
output = relay.Tuple([call_5587,bop_5593,call_5598,call_5605,call_5628,bop_5648,])
output2 = relay.Tuple([call_5588,bop_5593,call_5599,call_5606,call_5629,bop_5648,])
func_5667 = relay.Function([var_5581,var_5592,], output)
mod['func_5667'] = func_5667
mod = relay.transform.InferType()(mod)
mutated_mod['func_5667'] = func_5667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5667_call = mutated_mod.get_global_var('func_5667')
var_5669 = relay.var("var_5669", dtype = "uint8", shape = (5, 1, 8))#candidate|5669|(5, 1, 8)|var|uint8
var_5670 = relay.var("var_5670", dtype = "uint8", shape = (5, 14, 8))#candidate|5670|(5, 14, 8)|var|uint8
call_5668 = func_5667_call(var_5669,var_5670,)
output = call_5668
func_5671 = relay.Function([var_5669,var_5670,], output)
mutated_mod['func_5671'] = func_5671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3894_call = mod.get_global_var('func_3894')
func_3896_call = mutated_mod.get_global_var('func_3896')
call_5679 = func_3894_call()
call_5680 = func_3894_call()
output = call_5679
output2 = call_5680
func_5682 = relay.Function([], output)
mod['func_5682'] = func_5682
mod = relay.transform.InferType()(mod)
output = func_5682()
func_5683 = relay.Function([], output)
mutated_mod['func_5683'] = func_5683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1995_call = mod.get_global_var('func_1995')
func_1996_call = mutated_mod.get_global_var('func_1996')
call_5686 = relay.TupleGetItem(func_1995_call(), 0)
call_5687 = relay.TupleGetItem(func_1996_call(), 0)
func_3747_call = mod.get_global_var('func_3747')
func_3748_call = mutated_mod.get_global_var('func_3748')
call_5703 = func_3747_call()
call_5704 = func_3747_call()
output = relay.Tuple([call_5686,call_5703,])
output2 = relay.Tuple([call_5687,call_5704,])
func_5734 = relay.Function([], output)
mod['func_5734'] = func_5734
mod = relay.transform.InferType()(mod)
mutated_mod['func_5734'] = func_5734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5734_call = mutated_mod.get_global_var('func_5734')
call_5735 = func_5734_call()
output = call_5735
func_5736 = relay.Function([], output)
mutated_mod['func_5736'] = func_5736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4476_call = mod.get_global_var('func_4476')
func_4478_call = mutated_mod.get_global_var('func_4478')
call_5747 = relay.TupleGetItem(func_4476_call(), 0)
call_5748 = relay.TupleGetItem(func_4478_call(), 0)
output = relay.Tuple([call_5747,])
output2 = relay.Tuple([call_5748,])
func_5751 = relay.Function([], output)
mod['func_5751'] = func_5751
mod = relay.transform.InferType()(mod)
output = func_5751()
func_5752 = relay.Function([], output)
mutated_mod['func_5752'] = func_5752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
call_5843 = func_971_call()
call_5844 = func_971_call()
output = call_5843
output2 = call_5844
func_5853 = relay.Function([], output)
mod['func_5853'] = func_5853
mod = relay.transform.InferType()(mod)
mutated_mod['func_5853'] = func_5853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5853_call = mutated_mod.get_global_var('func_5853')
call_5854 = func_5853_call()
output = call_5854
func_5855 = relay.Function([], output)
mutated_mod['func_5855'] = func_5855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5325_call = mod.get_global_var('func_5325')
func_5326_call = mutated_mod.get_global_var('func_5326')
call_5856 = func_5325_call()
call_5857 = func_5325_call()
output = call_5856
output2 = call_5857
func_5861 = relay.Function([], output)
mod['func_5861'] = func_5861
mod = relay.transform.InferType()(mod)
mutated_mod['func_5861'] = func_5861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5861_call = mutated_mod.get_global_var('func_5861')
call_5862 = func_5861_call()
output = call_5862
func_5863 = relay.Function([], output)
mutated_mod['func_5863'] = func_5863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_723_call = mod.get_global_var('func_723')
func_724_call = mutated_mod.get_global_var('func_724')
call_5870 = func_723_call()
call_5871 = func_723_call()
var_5879 = relay.var("var_5879", dtype = "uint32", shape = (2250,))#candidate|5879|(2250,)|var|uint32
bop_5880 = relay.equal(call_5870.astype('bool'), relay.reshape(var_5879.astype('bool'), relay.shape_of(call_5870))) # shape=(2250,)
bop_5883 = relay.equal(call_5871.astype('bool'), relay.reshape(var_5879.astype('bool'), relay.shape_of(call_5871))) # shape=(2250,)
output = bop_5880
output2 = bop_5883
func_5885 = relay.Function([var_5879,], output)
mod['func_5885'] = func_5885
mod = relay.transform.InferType()(mod)
var_5886 = relay.var("var_5886", dtype = "uint32", shape = (2250,))#candidate|5886|(2250,)|var|uint32
output = func_5885(var_5886)
func_5887 = relay.Function([var_5886], output)
mutated_mod['func_5887'] = func_5887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4270_call = mod.get_global_var('func_4270')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_5892 = relay.TupleGetItem(func_4270_call(), 6)
call_5893 = relay.TupleGetItem(func_4272_call(), 6)
uop_5895 = relay.atan(call_5892.astype('float64')) # shape=(8, 128)
uop_5897 = relay.atan(call_5893.astype('float64')) # shape=(8, 128)
output = uop_5895
output2 = uop_5897
func_5899 = relay.Function([], output)
mod['func_5899'] = func_5899
mod = relay.transform.InferType()(mod)
mutated_mod['func_5899'] = func_5899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5899_call = mutated_mod.get_global_var('func_5899')
call_5900 = func_5899_call()
output = call_5900
func_5901 = relay.Function([], output)
mutated_mod['func_5901'] = func_5901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4292_call = mod.get_global_var('func_4292')
func_4293_call = mutated_mod.get_global_var('func_4293')
call_5922 = relay.TupleGetItem(func_4292_call(), 0)
call_5923 = relay.TupleGetItem(func_4293_call(), 0)
output = call_5922
output2 = call_5923
func_5927 = relay.Function([], output)
mod['func_5927'] = func_5927
mod = relay.transform.InferType()(mod)
output = func_5927()
func_5928 = relay.Function([], output)
mutated_mod['func_5928'] = func_5928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5927_call = mod.get_global_var('func_5927')
func_5928_call = mutated_mod.get_global_var('func_5928')
call_5936 = func_5927_call()
call_5937 = func_5927_call()
output = relay.Tuple([call_5936,])
output2 = relay.Tuple([call_5937,])
func_5938 = relay.Function([], output)
mod['func_5938'] = func_5938
mod = relay.transform.InferType()(mod)
mutated_mod['func_5938'] = func_5938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mutated_mod.get_global_var('func_5938')
call_5939 = func_5938_call()
output = call_5939
func_5940 = relay.Function([], output)
mutated_mod['func_5940'] = func_5940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5938_call = mod.get_global_var('func_5938')
func_5940_call = mutated_mod.get_global_var('func_5940')
call_5986 = relay.TupleGetItem(func_5938_call(), 0)
call_5987 = relay.TupleGetItem(func_5940_call(), 0)
func_723_call = mod.get_global_var('func_723')
func_724_call = mutated_mod.get_global_var('func_724')
call_5996 = func_723_call()
call_5997 = func_723_call()
uop_5998 = relay.asin(call_5986.astype('float64')) # shape=(15, 10, 15)
uop_6000 = relay.asin(call_5987.astype('float64')) # shape=(15, 10, 15)
func_993_call = mod.get_global_var('func_993')
func_994_call = mutated_mod.get_global_var('func_994')
call_6001 = func_993_call()
call_6002 = func_993_call()
output = relay.Tuple([call_5996,uop_5998,call_6001,])
output2 = relay.Tuple([call_5997,uop_6000,call_6002,])
func_6040 = relay.Function([], output)
mod['func_6040'] = func_6040
mod = relay.transform.InferType()(mod)
output = func_6040()
func_6041 = relay.Function([], output)
mutated_mod['func_6041'] = func_6041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5853_call = mod.get_global_var('func_5853')
func_5855_call = mutated_mod.get_global_var('func_5855')
call_6049 = func_5853_call()
call_6050 = func_5853_call()
func_4867_call = mod.get_global_var('func_4867')
func_4871_call = mutated_mod.get_global_var('func_4871')
const_6059 = relay.const(10, dtype = "uint64")#candidate|6059|()|const|uint64
var_6060 = relay.var("var_6060", dtype = "uint64", shape = (490,))#candidate|6060|(490,)|var|uint64
call_6058 = relay.TupleGetItem(func_4867_call(relay.reshape(const_6059.astype('uint64'), []), relay.reshape(var_6060.astype('uint64'), [490,]), ), 0)
call_6061 = relay.TupleGetItem(func_4871_call(relay.reshape(const_6059.astype('uint64'), []), relay.reshape(var_6060.astype('uint64'), [490,]), ), 0)
output = relay.Tuple([call_6049,call_6058,const_6059,var_6060,])
output2 = relay.Tuple([call_6050,call_6061,const_6059,var_6060,])
func_6068 = relay.Function([var_6060,], output)
mod['func_6068'] = func_6068
mod = relay.transform.InferType()(mod)
mutated_mod['func_6068'] = func_6068
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6069 = relay.var("var_6069", dtype = "uint64", shape = (490,))#candidate|6069|(490,)|var|uint64
func_6068_call = mutated_mod.get_global_var('func_6068')
call_6070 = func_6068_call(var_6069)
output = call_6070
func_6071 = relay.Function([var_6069], output)
mutated_mod['func_6071'] = func_6071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1593_call = mod.get_global_var('func_1593')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_6135 = func_1593_call()
call_6136 = func_1593_call()
func_275_call = mod.get_global_var('func_275')
func_278_call = mutated_mod.get_global_var('func_278')
call_6152 = func_275_call(relay.reshape(call_6135.astype('float64'), [4, 16, 16]))
call_6153 = func_275_call(relay.reshape(call_6135.astype('float64'), [4, 16, 16]))
output = relay.Tuple([call_6135,call_6152,])
output2 = relay.Tuple([call_6136,call_6153,])
func_6156 = relay.Function([], output)
mod['func_6156'] = func_6156
mod = relay.transform.InferType()(mod)
output = func_6156()
func_6157 = relay.Function([], output)
mutated_mod['func_6157'] = func_6157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1995_call = mod.get_global_var('func_1995')
func_1996_call = mutated_mod.get_global_var('func_1996')
call_6158 = relay.TupleGetItem(func_1995_call(), 0)
call_6159 = relay.TupleGetItem(func_1996_call(), 0)
func_5853_call = mod.get_global_var('func_5853')
func_5855_call = mutated_mod.get_global_var('func_5855')
call_6167 = func_5853_call()
call_6168 = func_5853_call()
output = relay.Tuple([call_6158,call_6167,])
output2 = relay.Tuple([call_6159,call_6168,])
func_6169 = relay.Function([], output)
mod['func_6169'] = func_6169
mod = relay.transform.InferType()(mod)
output = func_6169()
func_6170 = relay.Function([], output)
mutated_mod['func_6170'] = func_6170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6156_call = mod.get_global_var('func_6156')
func_6157_call = mutated_mod.get_global_var('func_6157')
call_6194 = relay.TupleGetItem(func_6156_call(), 0)
call_6195 = relay.TupleGetItem(func_6157_call(), 0)
output = relay.Tuple([call_6194,])
output2 = relay.Tuple([call_6195,])
func_6202 = relay.Function([], output)
mod['func_6202'] = func_6202
mod = relay.transform.InferType()(mod)
output = func_6202()
func_6203 = relay.Function([], output)
mutated_mod['func_6203'] = func_6203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5899_call = mod.get_global_var('func_5899')
func_5901_call = mutated_mod.get_global_var('func_5901')
call_6319 = func_5899_call()
call_6320 = func_5899_call()
output = call_6319
output2 = call_6320
func_6321 = relay.Function([], output)
mod['func_6321'] = func_6321
mod = relay.transform.InferType()(mod)
mutated_mod['func_6321'] = func_6321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6321_call = mutated_mod.get_global_var('func_6321')
call_6322 = func_6321_call()
output = call_6322
func_6323 = relay.Function([], output)
mutated_mod['func_6323'] = func_6323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2283_call = mod.get_global_var('func_2283')
func_2285_call = mutated_mod.get_global_var('func_2285')
call_6327 = func_2283_call()
call_6328 = func_2283_call()
output = call_6327
output2 = call_6328
func_6341 = relay.Function([], output)
mod['func_6341'] = func_6341
mod = relay.transform.InferType()(mod)
output = func_6341()
func_6342 = relay.Function([], output)
mutated_mod['func_6342'] = func_6342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_723_call = mod.get_global_var('func_723')
func_724_call = mutated_mod.get_global_var('func_724')
call_6355 = func_723_call()
call_6356 = func_723_call()
output = call_6355
output2 = call_6356
func_6365 = relay.Function([], output)
mod['func_6365'] = func_6365
mod = relay.transform.InferType()(mod)
mutated_mod['func_6365'] = func_6365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6365_call = mutated_mod.get_global_var('func_6365')
call_6366 = func_6365_call()
output = call_6366
func_6367 = relay.Function([], output)
mutated_mod['func_6367'] = func_6367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6386 = relay.var("var_6386", dtype = "int64", shape = ())#candidate|6386|()|var|int64
var_6387 = relay.var("var_6387", dtype = "int64", shape = (2, 12, 16))#candidate|6387|(2, 12, 16)|var|int64
bop_6388 = relay.left_shift(var_6386.astype('int64'), var_6387.astype('int64')) # shape=(2, 12, 16)
const_6398 = relay.const([[[8,9,-9,5,-10,1,1,-5,-6,2,10,-1,-7,6,-2,3],[8,-1,8,-4,-8,2,8,-10,10,4,-2,-3,-4,4,-5,-5],[10,-9,-1,9,-8,1,-10,2,-7,-8,-1,-7,1,-10,-2,-9],[-10,3,3,-3,2,-1,-6,-10,9,-1,-2,7,2,2,-4,-6],[-1,-8,-10,-7,6,5,-1,5,7,-10,4,4,7,-10,7,7],[-5,-4,5,-9,1,3,3,2,5,10,-1,7,-8,-1,1,5],[-1,2,4,9,7,9,-1,1,5,7,-6,6,-9,1,2,-9],[6,-1,5,6,-3,4,-8,-1,-8,10,5,6,-2,-6,-4,9],[8,-10,1,5,-3,-9,-5,5,-1,7,-1,-9,-1,-7,-2,3],[-8,3,1,5,-10,-6,-7,8,3,3,10,7,1,-4,-2,-4],[-2,-2,-6,8,3,1,-4,-7,6,-3,6,-8,5,9,-1,-8],[10,7,-6,2,-8,1,-3,8,-10,8,10,2,-5,3,-4,8]],[[-2,1,-9,-9,-7,-8,-9,-2,9,5,-3,7,8,6,2,7],[1,3,-3,7,-3,10,5,-10,-1,6,-4,2,4,3,3,1],[1,4,-8,-4,7,-2,-8,-9,-1,-1,-7,-4,-2,-8,-10,9],[-2,-5,-3,1,3,-4,-10,-9,5,4,6,4,9,-5,10,-10],[6,-5,4,-8,-1,-9,-5,-10,10,-4,-3,6,-10,-3,-4,7],[8,-8,-7,-1,-9,9,-9,-6,-4,7,9,-1,2,-3,5,-6],[-1,-5,-1,9,7,5,7,-6,2,-8,5,-1,-3,3,6,3],[2,-6,-6,-2,-2,-10,-8,10,8,-2,9,-1,-10,2,-4,3],[-7,-10,5,6,10,-4,10,10,-4,-2,8,5,10,5,-4,-3],[-9,-4,6,10,5,6,-10,5,1,-6,5,-10,-1,-10,-3,-8],[3,-7,-1,4,-2,3,-9,5,10,-10,5,9,-6,10,9,4],[-9,2,7,-8,-6,-1,1,-4,7,5,5,7,2,-3,-5,-6]]], dtype = "int64")#candidate|6398|(2, 12, 16)|const|int64
bop_6399 = relay.logical_or(var_6387.astype('bool'), relay.reshape(const_6398.astype('bool'), relay.shape_of(var_6387))) # shape=(2, 12, 16)
uop_6402 = relay.atanh(const_6398.astype('float32')) # shape=(2, 12, 16)
output = relay.Tuple([bop_6388,bop_6399,uop_6402,])
output2 = relay.Tuple([bop_6388,bop_6399,uop_6402,])
func_6406 = relay.Function([var_6386,var_6387,], output)
mod['func_6406'] = func_6406
mod = relay.transform.InferType()(mod)
mutated_mod['func_6406'] = func_6406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6406_call = mutated_mod.get_global_var('func_6406')
var_6408 = relay.var("var_6408", dtype = "int64", shape = ())#candidate|6408|()|var|int64
var_6409 = relay.var("var_6409", dtype = "int64", shape = (2, 12, 16))#candidate|6409|(2, 12, 16)|var|int64
call_6407 = func_6406_call(var_6408,var_6409,)
output = call_6407
func_6410 = relay.Function([var_6408,var_6409,], output)
mutated_mod['func_6410'] = func_6410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_889_call = mod.get_global_var('func_889')
func_891_call = mutated_mod.get_global_var('func_891')
call_6412 = relay.TupleGetItem(func_889_call(), 1)
call_6413 = relay.TupleGetItem(func_891_call(), 1)
output = relay.Tuple([call_6412,])
output2 = relay.Tuple([call_6413,])
func_6421 = relay.Function([], output)
mod['func_6421'] = func_6421
mod = relay.transform.InferType()(mod)
mutated_mod['func_6421'] = func_6421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6421_call = mutated_mod.get_global_var('func_6421')
call_6422 = func_6421_call()
output = call_6422
func_6423 = relay.Function([], output)
mutated_mod['func_6423'] = func_6423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3403_call = mod.get_global_var('func_3403')
func_3404_call = mutated_mod.get_global_var('func_3404')
call_6445 = relay.TupleGetItem(func_3403_call(), 3)
call_6446 = relay.TupleGetItem(func_3404_call(), 3)
func_4049_call = mod.get_global_var('func_4049')
func_4051_call = mutated_mod.get_global_var('func_4051')
call_6448 = relay.TupleGetItem(func_4049_call(), 3)
call_6449 = relay.TupleGetItem(func_4051_call(), 3)
uop_6455 = relay.sin(call_6445.astype('float64')) # shape=(2250,)
uop_6457 = relay.sin(call_6446.astype('float64')) # shape=(2250,)
func_5938_call = mod.get_global_var('func_5938')
func_5940_call = mutated_mod.get_global_var('func_5940')
call_6464 = relay.TupleGetItem(func_5938_call(), 0)
call_6465 = relay.TupleGetItem(func_5940_call(), 0)
func_4270_call = mod.get_global_var('func_4270')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_6497 = relay.TupleGetItem(func_4270_call(), 6)
call_6498 = relay.TupleGetItem(func_4272_call(), 6)
var_6499 = relay.var("var_6499", dtype = "float64", shape = (2250,))#candidate|6499|(2250,)|var|float64
bop_6500 = relay.left_shift(uop_6455.astype('uint32'), relay.reshape(var_6499.astype('uint32'), relay.shape_of(uop_6455))) # shape=(2250,)
bop_6503 = relay.left_shift(uop_6457.astype('uint32'), relay.reshape(var_6499.astype('uint32'), relay.shape_of(uop_6457))) # shape=(2250,)
uop_6516 = relay.cos(uop_6455.astype('float64')) # shape=(2250,)
uop_6518 = relay.cos(uop_6457.astype('float64')) # shape=(2250,)
output = relay.Tuple([call_6448,call_6464,call_6497,bop_6500,uop_6516,])
output2 = relay.Tuple([call_6449,call_6465,call_6498,bop_6503,uop_6518,])
func_6520 = relay.Function([var_6499,], output)
mod['func_6520'] = func_6520
mod = relay.transform.InferType()(mod)
mutated_mod['func_6520'] = func_6520
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6521 = relay.var("var_6521", dtype = "float64", shape = (2250,))#candidate|6521|(2250,)|var|float64
func_6520_call = mutated_mod.get_global_var('func_6520')
call_6522 = func_6520_call(var_6521)
output = call_6522
func_6523 = relay.Function([var_6521], output)
mutated_mod['func_6523'] = func_6523
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6548 = relay.const(10, dtype = "int32")#candidate|6548|()|const|int32
const_6549 = relay.const([[[-1],[-4],[-9],[1],[7],[-1],[4],[-4]],[[2],[7],[10],[-6],[-6],[-4],[-1],[6]],[[7],[-1],[10],[6],[10],[4],[-5],[-10]],[[-8],[5],[-4],[5],[-5],[-6],[9],[-6]],[[-2],[5],[-9],[-9],[6],[2],[-2],[10]],[[-1],[9],[5],[-7],[2],[5],[-3],[-10]],[[-10],[-9],[3],[9],[-1],[-3],[-3],[-4]],[[6],[-10],[-9],[3],[10],[5],[-1],[-2]],[[-7],[1],[9],[1],[10],[5],[-7],[-10]],[[4],[5],[-8],[-7],[6],[-4],[6],[-7]],[[7],[6],[5],[5],[1],[9],[-1],[-10]],[[8],[8],[-4],[6],[8],[9],[6],[-8]],[[-4],[-8],[-2],[-6],[-5],[1],[-5],[-8]],[[-8],[1],[-3],[4],[-7],[-5],[8],[7]],[[-10],[3],[-7],[4],[-6],[-7],[8],[4]]], dtype = "int32")#candidate|6549|(15, 8, 1)|const|int32
bop_6550 = relay.bitwise_and(const_6548.astype('int32'), const_6549.astype('int32')) # shape=(15, 8, 1)
func_2184_call = mod.get_global_var('func_2184')
func_2185_call = mutated_mod.get_global_var('func_2185')
call_6564 = func_2184_call()
call_6565 = func_2184_call()
var_6569 = relay.var("var_6569", dtype = "int32", shape = (15, 8, 2))#candidate|6569|(15, 8, 2)|var|int32
bop_6570 = relay.greater(const_6549.astype('bool'), var_6569.astype('bool')) # shape=(15, 8, 2)
var_6574 = relay.var("var_6574", dtype = "int32", shape = (15, 8, 12))#candidate|6574|(15, 8, 12)|var|int32
bop_6575 = relay.floor_divide(const_6549.astype('float64'), var_6574.astype('float64')) # shape=(15, 8, 12)
output = relay.Tuple([bop_6550,call_6564,bop_6570,bop_6575,])
output2 = relay.Tuple([bop_6550,call_6565,bop_6570,bop_6575,])
func_6583 = relay.Function([var_6569,var_6574,], output)
mod['func_6583'] = func_6583
mod = relay.transform.InferType()(mod)
var_6584 = relay.var("var_6584", dtype = "int32", shape = (15, 8, 2))#candidate|6584|(15, 8, 2)|var|int32
var_6585 = relay.var("var_6585", dtype = "int32", shape = (15, 8, 12))#candidate|6585|(15, 8, 12)|var|int32
output = func_6583(var_6584,var_6585,)
func_6586 = relay.Function([var_6584,var_6585,], output)
mutated_mod['func_6586'] = func_6586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3471_call = mod.get_global_var('func_3471')
func_3472_call = mutated_mod.get_global_var('func_3472')
call_6640 = relay.TupleGetItem(func_3471_call(), 1)
call_6641 = relay.TupleGetItem(func_3472_call(), 1)
func_5885_call = mod.get_global_var('func_5885')
func_5887_call = mutated_mod.get_global_var('func_5887')
var_6650 = relay.var("var_6650", dtype = "uint32", shape = (2250,))#candidate|6650|(2250,)|var|uint32
call_6649 = func_5885_call(relay.reshape(var_6650.astype('uint32'), [2250,]))
call_6651 = func_5885_call(relay.reshape(var_6650.astype('uint32'), [2250,]))
func_3081_call = mod.get_global_var('func_3081')
func_3085_call = mutated_mod.get_global_var('func_3085')
const_6660 = relay.const([[-8.795943,-5.451137,-5.069637,-4.698181,1.902853,7.889379,1.707665,-8.574311,2.496691,-2.119115,-4.029206,3.774976,6.512848,4.186132,0.383826,9.164245,-4.964249,5.734894,-9.490858,0.669277],[3.173109,0.701049,4.606156,1.062141,8.896453,-3.898736,-2.207561,-2.626698,3.965202,-4.695544,-3.371905,-4.559741,2.848773,0.459092,1.454613,5.176983,-1.655907,0.144759,-3.076839,-4.674229],[-2.201046,4.746684,-6.078698,-9.191444,1.626777,-0.181543,-2.102549,-9.891879,5.693278,6.076297,-1.289947,2.838089,-9.367085,7.871616,0.424650,-2.593163,-5.145241,8.895379,3.170002,-3.888714]], dtype = "float32")#candidate|6660|(3, 20)|const|float32
call_6659 = relay.TupleGetItem(func_3081_call(relay.reshape(const_6660.astype('float32'), [15, 2, 2]), relay.reshape(const_6660.astype('float32'), [15, 2, 2]), ), 0)
call_6661 = relay.TupleGetItem(func_3085_call(relay.reshape(const_6660.astype('float32'), [15, 2, 2]), relay.reshape(const_6660.astype('float32'), [15, 2, 2]), ), 0)
func_5120_call = mod.get_global_var('func_5120')
func_5126_call = mutated_mod.get_global_var('func_5126')
const_6664 = relay.const([8,-1,-7,7,-6,2,-3,-7,4,9,10,2,-9,6,-7,-3,8,1,-7,-1,-7,4,4,10,-5,3,-2,3,6,-7,8,-7,-2,-10,-7,3,3,-3,-1,6,6,3,-6,1,4,4,6,8,10,-8,-8,2,-10,-8,-9,-7,4,3,4,2,2,2,7,-7,-6,7,-7,5,3,-6,-8,7,3,-1,-8,7,-9,9,8,5,2,-10,-1,4,-10,8,3,9,-7,-5,3,4,-4,10,-10,8,8,-9,-2,-5,-5,-10,8,6,-10,-10,-6,7,-7,2,3,-9,5,-2,-3,1,9,6,-1,-3,-5,5,7,-9,-8,-4,-8,-4,3,4,-2,-1,6,-6,-2,-9,-2,-6,6,-7,-8,-7,-6,-1,-6,2,-10,9,-2,5,6,9,-10,-10,2,-3,10,7,9,-2,5,-3,1,-2,-8,7,3,-3,4,-1,3,-7,2,-7,-3,5,7,2,-1,10,-1,5,-6,-9,4,-7,4,7,9,8,-5,2,3,9,-10,5,-8,7,1,-4,-8,1,4,-9,-6,-9,-1,4,-6,-10,-3,-10,-9,5,-5,-6,-10,6,-9,-9,1,5,-8,6,1,10,2,5,9,1,10,8,6,-4,-6,-7,10,8,10,-9,9,5,1,1,3,-3,-1,3,-4,2,1,-6,-3,6,-8,6,-6,9,4,-7,-3,-2,-3,4,3,7,9,-4,10,8,8,-5,7,-2,-3,-10,3,-3,-6,-2,-4,4,2,6,1,-10,-9,1,-7,1,-6,-6,-10,5,-3,8,6,1,-1,10,2,-8,2,-1,6,9,-10,1,4,-9,-3,-6,-8,-6,3,-8,7,8,-7,10,-10,5,4,1,2,-4,-4,3,-7,-10,7,7,-3,-5,5,-4,-4,2,-5,-5,2,3,10,-7,-6,-7,-4,9,1,-10,7,9,4,-9,-6,-7,4,4,5,2,8,-6,-4,-10,9,1,-5,-7,-2,6,-3,-6,-3,4,2,7,5,-2,8,-6,-3,3,5,-5,-10,-7,-5,1,-5,-6,-9,7,-8,-5,-5,3,5,-6,-8,1,5,1,3,8,7,5,8,-3,4,-3,6,7,-4,4,-5,1,5,9,-6,-7,2,-2,-7,7,1,-10,-7,-10,9,4,9,3,-7,-3,9,7,-4,-10,-4,-2,-8,-3,9,-8,7,2,5,-1,8,-9,-6,6,7,-10,-4,7,-3,7,-2,-2,-6,7,10,6,-2,4,-1,-7,-6,-1,-7,2,-7,-4,3,9,10,1,-2,7,3,-1,2,5,2,8,-4,-1,-1,-1,-1,-4,-6,1,5,3,9,-4,-1,9,-7,-7,7,-4,-3,3,-3,4,-5,7,-1,7,6,1,4,-3,6,4,7,4,-2,5,5,7,2,-9,4,-5,1,10,-7,-8,4,-8,1,3,10,-9,7,4,-9,4,-1,6,4,-7,8,4,9,-2,-6,2,-5,1,-6,-1,10,-10,4,-4,3,-9,-9,2,-7,-8,1,8,-2,8,-6,5,-6,-8,3,9,7,7,-1,4,5,-10,4,4,7,-4,-3,-8,3,1,9,-4,-8,-2,9,-8,10,3,-5,7,-9,6,9,-4,1,-10,3,-7,-2,9,-7,-10,-4,10,-9,3,10,-3,3,-1,1,5,5,5,2,-1,-3,-5,-3,8,6,2,-3,4,10,-2,-9,7,10,-1,7,1,-4,-7,-5,-1,-6,-6,-7,5,-8,-10,-4,2,8,8,5,5,8,-8,-7,-6,3,-2,-4,8,3,-10,-3,-3,-6,-6,10,2,-3,3,-1,-5,-10,-3,-5,6,-8,-7,1,-4,10,-7,3,-10,-2,-10,-3,7,1,10,2,-4,-6,-5,-2,1,-1,6,-10,4,-1,-4,7,-2,3,4,9,8,-10,10,2,-6,2,8,-8,3,-7,8,8,2,-3,7,-6,-7,7,-10,3,-1,10,6,-4,-9,-5,2,-6,-7,5,-1,10,-9,7,6,-7,-4,10,5,8,2,-1,-9,1,8,-1,-6,8,7,-5,5,4,9,1,8,7,3,4,-9,-9,2,-7,-10,-6,-2,4,4,-9,3,-8,7,1,-7,3,2,4,-3,-4,8,2,2,-7,7,1,6,-9,7,7,4,2,4,-2,9,-10,6,6,1,6,1,-5,9,4,-5,1,-10,7,-9,1,-3,-2,4,-8,-3,-2,-2,-3,-1,8,-7,7,-2,-3,1,6,6,2,-7,-6,5,-7,3,9,-9,1,-5,-7,-3,7,-6,-8,10,6,-10,-8,-10,-3,4,-8,10,1,10,-2,10,-6,2,-1,-6,10,9,3,2,2,-8,1,2,3,9,8,7,-6,-10,1,-1,-1,8,10,10,6,-2,5,-8,-9,-6,-6,1,-3,-8,4,-7,2,9,-5,-1,6,-7,-7,-1,-2,3,1,-10,4,9,9,-5,1,-10,4,7,-5,2,9,-10,10,1,-7,6,-10,1,10,8,-1,-8,-2,-6,-1,-10,-4,3,4,-5,-4,-2,7,4,9,-1,-2,7,5,-10,-2,5,1,-9,-2,7,7,-2,5,4,-10,6,5,8,7,-4,-10,-4,-9,-7,-9,-8,-6,-3,-10,4,-1,4,4,-5,1,9,-10,-4,5,-1,8,1,4,4,10,-4,8,8,-9,2,-2,-1,3,-3,-9,-3,4,10,9,-9,-1,3,-10,-3,5,9,6,2,-5,10,-9,-10,8,-10], dtype = "uint32")#candidate|6664|(1024,)|const|uint32
const_6665 = relay.const([-4.913847,-0.983521,9.063650,-3.970010,-4.942034,-1.470437,-2.637169,1.683763,-1.658461,-8.271595,7.723957,-1.366268,-1.434844,-3.985438,9.701268,-0.629396,-5.000079,8.134076,9.018260,2.798414,7.637592,-3.616789,-8.922649,9.914127,6.028166,9.354848,-8.439325,-4.322551,9.445727,-0.388484,-2.082136,-8.823739,-1.009864,-2.278920,5.307798,3.972756,5.828864,9.360034,7.170061,-2.368551,-9.885805,-6.199144,-4.454001,4.831452,8.066750,-3.149663,-3.732537,-7.278099,-5.016470,-6.428281,-8.093945,8.864354,0.177318,-3.089289,5.588639,5.917247,-2.572427,-3.538696,-0.434781,-6.041134,-1.082863,4.706332,-2.355625,7.035912,-6.689128,-5.353070,5.192044,-3.703130,-0.131751,7.477631,-7.107781,-9.564499,-8.735529,2.594403,-0.294201,-9.577823,-7.872358,-7.062489,-4.036555,-7.461402,9.856522,4.632982,-6.088247,-5.245808,-5.702249,-5.044983,-7.560265,7.096656,9.862442,-6.482914,3.465879,-8.326529,-8.923829,-1.433578,-4.399485,-2.478725,8.903250,-0.313173,8.890001,9.461511,3.344522,-2.697258,-6.335376,-2.678160,-3.997539,0.843228,-6.841967,-1.834827,-6.908563,1.478371,7.141129,8.736683,8.730490,-9.411672,-0.154168,9.360061,7.572240,6.892912,3.321097,7.878690,-5.823263,0.131965,6.850922,-5.273276,-2.844756,-0.625268,5.013227,5.628038,-1.669109,7.931132,8.013397,-1.892576,8.674811,-7.512932,6.953609,-7.487055,-3.945466,-5.163345,6.751513,-6.417938,-4.916969,9.645261,-7.850171,3.641359,-7.134699,9.219586,6.775272,-0.157533,4.119151,9.283165,9.711794,6.352916,-2.476066,4.047544,-7.393767,2.058762,-0.888584,-7.089004,3.249033,8.991332,-7.510278,5.417759,-5.466812,-9.346990,-0.109906,9.010208,-3.868552,-8.844115,-0.428663,-5.185816,2.171936,-9.449694,6.270027,-4.471868,-0.594517,-6.939024,-5.214503,-9.541110,-2.748817,-8.622178,-4.831169,-2.843706,-0.818640,0.501644,-6.380829,4.436077,-3.791240,5.966476,-1.339716,-1.674716,-1.513425,-1.083398,5.470030,5.721867,7.218892,-5.316040,7.845707,-3.978589,4.965150,7.998588,-7.396817,7.748116,-0.118788,-3.899113,-5.049178,3.284290,9.822564,4.749203,-2.811323,-7.421463,5.162700,1.086342,9.968546,-3.204747,-4.518515,-8.658268,6.285416,2.948819,8.169803,-5.647538,-5.480013,-9.643751,1.140563,-9.870917,-5.809689,-0.192020,-2.311103,2.622098,9.017169,-3.457918,7.704708,-3.367087,6.289759,-1.308330,1.342613,-0.988693,-9.969252,-3.414283,1.949946,5.182445,2.299765,4.292778,2.980543,-6.564974,-6.028350,-8.765806,7.093894,-4.410813,-2.447829,6.301496,-8.176520,-6.356136,-1.969226,-2.018504,8.984769,-6.418151,7.135076,-5.330901,-7.366991,-5.050315,-1.699678,-8.912544,1.539907,-4.872981,8.585464,-4.201119,5.870816,-6.530519,1.280914,7.278622,-3.909850,3.997986,1.811572,-6.960578,-9.324450,3.050354,-3.796088,4.549320,-5.364442,6.669074,0.973013,6.671967,-5.654835,3.579638,1.140535,8.113322,-7.178945,8.443514,-7.350327,0.664643,-4.811715,1.931677,-3.083399,8.240449,-8.735380,-6.253050,-8.537101,5.600457,2.069154,-5.575524,5.339823,-4.660243,-1.328870,-4.350675,3.087321,-1.731501,-5.696936,-2.671321,-3.097620,3.190649,7.109416,-0.171743,-5.317675,-3.361571,-4.108613,-1.481115,-0.274715,8.306345,-9.119129,-5.777175,8.779030,-3.377536,-8.055163,-4.130755,-3.675192,-3.767274,2.676591,0.529186,-8.991854,0.689298,-8.397389,-0.901537,-7.544317,9.445225,8.604359,2.212646,-2.403286,-5.275094,-9.417197,5.185780,5.956472,-0.132245,6.581639,-8.512315,-5.328478,-7.704690,2.570363,6.938921,0.708357,-4.753220,-6.030323,6.754108,1.698137,-3.168676,9.498146,-5.634254,7.119091,3.701077,-3.439641,-0.772220,-6.309918,6.080469,0.831563,8.179542,-3.205980,-3.233502,5.430722,0.589896,4.404253,5.264100,-8.302982,3.753263,-7.566070,-3.115103,-7.309550,7.932537,6.715184,-6.689736,-6.611917,6.338622,-2.571012,7.251243,-8.583166,-2.143094,-9.980082,-7.204245,-5.304242,-1.198997,-1.941165,1.936107,2.772854,7.307377,-1.838874,-2.066377,-5.122562,9.865282,8.226170,-9.259222,4.460490,0.506402,-3.137329,-2.222067,-5.767005,-7.569087,6.172941,9.109173,-4.151199,-9.161026,8.753233,5.511083,-9.027885,-5.008019,-7.348145,8.888056,8.325584,7.017824,-5.093579,-3.936065,2.600389,-1.661497,1.457151,1.000912,-2.317846,-3.084159,-7.693049,6.501469,-7.552053,-5.775724,0.864861,-5.194605,8.930992,-2.379745,-8.492772,-7.626020,8.077202,-5.474884,-3.569305,4.777532,8.761836,-5.055815], dtype = "float32")#candidate|6665|(440,)|const|float32
const_6666 = relay.const([8.343057,-4.928635,0.029242,-3.644510,1.385277,7.446759,5.119926,6.679483,-1.491746,7.441147,8.456004,4.552155,-0.475494,0.698048,-7.381030,4.673044,-1.471848,-0.556075,5.838037,-2.492433,1.792605,-4.443737,3.284717,-5.651862,8.538878,8.957902,-5.309985,-7.075971,-6.215478,-1.707157,-6.446670,4.178440,-5.936707,-2.007422,-8.026989,-0.368797,-2.599112,-9.229587,-1.909655,5.563448,4.933972,-3.685187,-3.593010,-9.431079,-7.605044,6.794830,4.823597,-7.679419,-9.271666,1.902651,2.545020,-5.505282,-5.481395,-4.150442,0.130544,-2.663767,-6.198440,-1.319044,1.976837,0.308707,-5.544212,-7.102773,0.660420,2.181406,-6.650549,-8.597491,-1.745497,8.102867,-9.649090,3.085280,-1.265375,-3.374674,-2.562594,7.416222,6.844259,-7.369064,3.164567,7.809580,9.570932,-7.858670,4.025677,1.316322,6.466171,-0.406071,-5.982695,-3.172479,-3.744292,4.012437,8.617596,-6.708118,-5.398232,-8.767068,-1.173892,-4.065189,-6.691464,2.551559,-2.505569,0.579097,1.490363,9.748310,6.152953,-7.408937,-7.773505,6.610885,-5.969699,-6.853859,-5.546950,-7.342392,7.202065,-8.475152,5.087043,5.485130,-9.640071,-3.888548,2.481797,-0.994045,4.570933,-3.884355,-8.340907,1.860042,4.763936,6.432427,8.661652,-0.406757,6.185850,-7.031406,-6.036465,-7.589415,2.995776,7.805580,-2.531788,4.023300,-1.066173,3.063795,7.401880,-2.084508,-5.847517,-1.911511,3.886492,-5.298010,7.369023,-9.233942,1.513053,5.223152,5.136828,8.240400,-3.700960,6.520759,-8.663436,4.589460,7.230735,-8.467517,-8.741866,7.147921,-6.345181,-1.970357,6.270234,2.403198,3.550420,9.144567,1.750044,-0.477288,1.449413,4.114059,-1.274069,-0.110441,-8.858155,1.778232,9.038532,-1.458117,3.811294,-3.508998,1.832131,0.789122,-1.112307,7.072667,6.713849,9.335552,2.487782,-0.018799,8.961079,-5.790073,0.121936,-9.097499,-2.549656,-2.280875,3.903652,-9.726179,2.199260,5.478158,-3.597430,4.733877,-5.964536,9.982615,3.715099,5.624498,-5.991839,-4.514700,-8.634243,-1.617542,-1.532909,-5.463598,5.404251,-3.391566,-2.218465,-1.661891,5.270702,-6.229150,-4.162865,8.492909,6.465957,6.484499,-4.378385,7.722225,-1.867738,-9.231438,3.628633,1.730241,6.497533,2.813854,8.675990,9.185778,3.130295,1.076165,4.578963,-2.134198,9.792925,-6.132677,7.818406,-2.482128,3.498119,-2.267483,3.311159,-8.873506,-9.144329,-2.632750,3.487025,-3.661435,0.075256,3.058671,-4.509909,6.844733,0.732712,-9.701243,-3.280108,-6.055194,3.633755,-4.618193,-2.550805,6.914031], dtype = "float32")#candidate|6666|(250,)|const|float32
call_6663 = relay.TupleGetItem(func_5120_call(relay.reshape(const_6664.astype('uint32'), [8, 128]), relay.reshape(var_6650.astype('uint32'), [2250,]), relay.reshape(const_6665.astype('float32'), [110, 4]), relay.reshape(const_6666.astype('float32'), [250,]), ), 2)
call_6667 = relay.TupleGetItem(func_5126_call(relay.reshape(const_6664.astype('uint32'), [8, 128]), relay.reshape(var_6650.astype('uint32'), [2250,]), relay.reshape(const_6665.astype('float32'), [110, 4]), relay.reshape(const_6666.astype('float32'), [250,]), ), 2)
func_2722_call = mod.get_global_var('func_2722')
func_2723_call = mutated_mod.get_global_var('func_2723')
call_6684 = relay.TupleGetItem(func_2722_call(), 0)
call_6685 = relay.TupleGetItem(func_2723_call(), 0)
const_6692 = relay.const([2.233429,7.599506,-7.335839,-1.469672,0.760740,7.624646,8.697811,-3.177508,3.501114,-9.442739,-3.260612,5.092027,4.135587,3.047420,-8.118202,-3.899306,3.383626,-9.180340,-6.044655,-8.154450,7.964336,-4.272550,-6.223615,8.230837,9.365966,-3.391123,-3.187592,5.326420,8.187735,-6.616291,4.408108,-6.320979,5.315533,4.512221,6.532376,5.673541,1.562105,7.800891,-4.979640,1.743335,-6.539393,2.059423,7.612117,-5.329666,-3.561273,-2.101400,3.189379,-4.141047,9.122946,1.103746,8.150742,-6.542731,-2.979352,4.237732,-7.949163,-8.253985,-0.471317,0.715539,8.863419,-0.996843,5.146759,3.365107,3.097363,5.035910,7.824974,7.914775,8.783417,2.356174,9.559219,4.680038,-5.566519,6.323705,4.040518,-7.771685,-4.369869,-0.793762,-1.780101,1.073158,-5.479446,-0.844698,5.247875,-1.291026,2.162187,-7.053904,-9.013246,2.535343,-0.319826,7.884077,0.030539,-2.101989,8.199310,5.823261,-8.641031,8.498387,0.128315,0.870732,-0.077090,-3.806990,3.538676,-2.292019,-4.799514,-2.679946,-3.883605,-6.857519,-2.868578,-6.065400,-3.149254,3.809330,-3.176577,9.479427,-3.734690,-5.716425,-5.066050,6.312989,8.985931,-1.520078,3.520967,-7.602344,-3.675113,4.679262,9.660345,-2.104644,-0.849511,1.896695,6.162387,-3.182021,7.184924,-0.089848,9.841213,7.167718,8.352734,-3.513219,6.351770,2.542393,-0.381899,-6.766495,-5.856203,5.298642,-3.107697,8.764409,0.640080,8.582084,-7.676978,-5.359961,2.918750,-3.458862,3.170196,5.593369,-5.765860,3.920617,-9.906446,-9.750765,-2.200747,4.601368,-8.873979,-2.614188,-2.220228,-5.845071,9.044846,3.230714,8.470135,-7.806817,-2.728431,4.390800,-2.025365,8.939751,-1.002927,4.668723,2.956089,3.646109,0.057259,3.370055,7.017242,-7.243359,8.141329,-3.712838,7.337109,7.265612,-1.133265,-0.155316,0.383467,6.331822,-5.541476,3.556547,6.662334,8.446566,-0.536222,2.662814,3.611198,5.645851,8.337347,9.213996,-4.581802,-2.286396,5.840157,3.858491,1.454084,-5.900867,2.533033,4.256070,-7.917737,9.245689,-8.343145,-8.248181,-6.549149,-9.476610,0.851743,-2.291127,-4.985942,1.449468,-8.003820,0.344446,5.021754,1.288349,2.915366,-6.435692,2.631226,-8.907646,-4.343259,7.563739,-0.716115,-2.368233,7.074812,4.500739,3.553344,5.658473,6.716760,4.414977,-1.497883,8.131913,-4.432402,2.055563,6.511253,5.032291,5.128961,-9.168365,-0.460902,7.344266,-6.074594,2.097156,5.676676,6.725463,0.345234,-9.878347,6.591763,8.363731,5.603752,6.884714,1.224839,-1.348304], dtype = "float32")#candidate|6692|(250,)|const|float32
bop_6693 = relay.bitwise_and(const_6666.astype('int64'), relay.reshape(const_6692.astype('int64'), relay.shape_of(const_6666))) # shape=(250,)
output = relay.Tuple([call_6640,call_6649,var_6650,call_6659,const_6660,call_6663,const_6664,const_6665,call_6684,bop_6693,])
output2 = relay.Tuple([call_6641,call_6651,var_6650,call_6661,const_6660,call_6667,const_6664,const_6665,call_6685,bop_6693,])
func_6700 = relay.Function([var_6650,], output)
mod['func_6700'] = func_6700
mod = relay.transform.InferType()(mod)
var_6701 = relay.var("var_6701", dtype = "uint32", shape = (2250,))#candidate|6701|(2250,)|var|uint32
output = func_6700(var_6701)
func_6702 = relay.Function([var_6701], output)
mutated_mod['func_6702'] = func_6702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4270_call = mod.get_global_var('func_4270')
func_4272_call = mutated_mod.get_global_var('func_4272')
call_6734 = relay.TupleGetItem(func_4270_call(), 4)
call_6735 = relay.TupleGetItem(func_4272_call(), 4)
uop_6746 = relay.cosh(call_6734.astype('float32')) # shape=(1144, 1)
uop_6748 = relay.cosh(call_6735.astype('float32')) # shape=(1144, 1)
func_4764_call = mod.get_global_var('func_4764')
func_4765_call = mutated_mod.get_global_var('func_4765')
call_6749 = relay.TupleGetItem(func_4764_call(), 0)
call_6750 = relay.TupleGetItem(func_4765_call(), 0)
output = relay.Tuple([uop_6746,call_6749,])
output2 = relay.Tuple([uop_6748,call_6750,])
func_6753 = relay.Function([], output)
mod['func_6753'] = func_6753
mod = relay.transform.InferType()(mod)
mutated_mod['func_6753'] = func_6753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6753_call = mutated_mod.get_global_var('func_6753')
call_6754 = func_6753_call()
output = call_6754
func_6755 = relay.Function([], output)
mutated_mod['func_6755'] = func_6755
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6826 = relay.const([[[-2.681403,-4.098290,-5.443396,-7.993831],[-6.413095,-2.108336,6.601139,-9.186718],[-6.399902,7.719699,-2.710761,-4.316276],[-1.298763,2.008665,-1.195735,-3.430407],[-0.687916,8.307279,-8.397488,1.672873],[-8.675664,2.093152,0.933177,-9.671393]],[[-8.881365,-5.936446,4.325845,9.159319],[2.087471,-5.651148,5.279741,-0.915313],[7.356297,6.854820,-3.709158,8.458002],[-1.176320,-9.026326,-2.705850,4.982260],[-5.344091,-9.314779,-0.403830,7.827734],[-6.310701,-1.200434,-6.216208,0.790287]],[[-5.972131,4.815047,-2.548562,8.816683],[0.754433,-3.247416,-2.468463,4.406702],[9.249280,0.973259,0.605361,-2.756083],[-0.923046,-5.752724,9.231470,7.105019],[-1.234918,-3.485108,6.761994,7.885866],[2.731432,-7.295898,6.070486,0.396567]],[[3.918960,-7.814275,8.600500,-9.479829],[8.033069,9.950760,6.910825,-6.891766],[4.828355,-4.640020,-3.811649,-1.452589],[4.731597,-2.656621,-2.582389,-8.024579],[-5.633624,-0.012485,5.754377,3.454428],[8.629663,7.431859,7.696726,-4.194859]],[[1.121001,6.029782,-2.929831,3.124028],[5.807792,-2.470970,6.453152,5.453194],[-6.351692,-1.149731,8.121811,-6.471085],[-8.592375,8.327621,-7.634369,-0.781120],[-6.806759,2.465820,4.671763,-4.670943],[-5.820263,-9.385317,3.720814,5.347340]],[[-0.752923,5.149897,-6.028600,-3.801875],[-3.716913,-5.530185,-4.576390,-3.898181],[5.239342,9.687196,-5.685661,2.563259],[6.309940,1.662615,2.353740,-0.037130],[-4.681880,1.458208,8.280360,1.264969],[5.950101,-8.651326,-8.668198,-1.301085]],[[5.534714,4.312905,-0.923854,-7.413002],[-9.463152,-0.492361,9.582624,3.949560],[2.098612,-9.873184,0.298934,-1.341621],[4.110618,-8.833260,7.332218,5.655921],[-2.204850,-8.034268,5.406025,-8.997770],[-4.443175,-5.314300,0.455107,4.477336]],[[-6.802882,-2.359237,9.653258,1.050010],[0.538941,1.351371,-5.623260,0.390691],[2.424958,3.338366,7.610784,-5.901572],[1.091648,5.817750,2.955738,6.704980],[-8.199226,4.835802,-3.964876,-3.765453],[-1.547926,-4.916110,6.731615,4.471212]]], dtype = "float64")#candidate|6826|(8, 6, 4)|const|float64
uop_6827 = relay.erf(const_6826.astype('float64')) # shape=(8, 6, 4)
uop_6845 = relay.asinh(uop_6827.astype('float32')) # shape=(8, 6, 4)
output = relay.Tuple([uop_6845,])
output2 = relay.Tuple([uop_6845,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

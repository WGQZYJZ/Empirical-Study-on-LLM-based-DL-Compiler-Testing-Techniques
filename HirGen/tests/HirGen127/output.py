import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_167 = relay.var("var_167", dtype = "int16", shape = (6, 12, 14))#candidate|167|(6, 12, 14)|var|int16
const_168 = relay.const([[[5,10,5,10,5,9,4,5,1,-9,6,5,-5,-10],[-4,-4,-5,3,-8,-3,-4,-4,-8,-2,10,9,3,6],[10,2,-3,5,1,-9,-8,-1,-5,-3,-6,3,6,-4],[5,-10,-7,1,9,7,-3,-8,-9,5,3,-8,-3,-7],[-2,-2,2,-3,4,-7,9,2,10,-3,10,4,6,-4],[-4,1,-3,-4,5,-2,-1,-4,4,-2,-8,5,5,-3],[1,3,10,3,7,6,5,4,8,-8,-6,9,7,3],[-3,-4,-4,2,-1,7,4,-3,-3,7,-5,-6,-5,-6],[-8,4,-5,-10,7,5,8,-9,5,-3,9,2,5,6],[4,2,-8,7,-7,4,-8,-2,-1,9,3,6,2,-7],[-9,-4,-4,7,3,7,3,-3,-10,-7,8,-7,-10,2],[-3,8,1,-5,10,-6,7,2,7,-1,2,6,-6,8]],[[7,9,-10,-2,-8,-7,8,-1,9,5,1,-2,3,-1],[-2,6,-3,-9,-1,6,-5,-6,-6,-10,-2,-10,-10,-4],[-10,-6,7,4,-7,3,-2,-7,-1,2,2,4,-6,5],[-9,-2,7,3,-10,-2,-8,6,3,10,8,1,5,-4],[-10,-8,-1,7,-8,9,-7,-8,-9,8,-10,8,-10,2],[4,6,-8,-4,7,-4,-4,-7,-8,-8,1,-9,-4,-3],[-5,8,10,7,2,-6,5,-6,-4,1,-9,-9,5,-3],[4,-3,-10,2,9,-9,-1,10,4,-4,-8,-2,-6,-7],[-10,9,-6,-5,-5,8,6,-5,-2,-10,10,7,-1,-4],[10,7,4,6,-10,8,-9,1,4,10,-8,2,-8,-5],[6,3,5,-7,-8,10,-5,-5,-7,-10,2,-8,-4,-10],[7,-9,-9,2,6,4,4,2,-6,-4,5,5,3,2]],[[2,-10,-1,4,5,5,-7,5,-5,-1,-6,-4,-8,-10],[10,10,6,-3,-9,9,4,5,-3,3,7,-8,8,6],[1,-8,-10,5,8,-4,-6,3,5,1,6,7,-7,-6],[9,10,-8,2,-9,-5,-4,4,-2,-2,-4,-6,-7,4],[7,9,-4,5,9,1,4,-3,-4,10,5,-2,5,1],[-10,5,7,-3,-3,4,-6,8,-2,10,-9,4,2,-4],[6,8,10,-5,-5,9,-7,-8,9,-2,-6,-9,-3,-10],[8,2,9,10,-3,-8,3,4,2,4,-9,-4,-1,1],[-3,10,7,5,-2,-5,10,-3,5,-5,-3,-10,-5,7],[-5,-9,9,2,-1,-10,-2,10,-2,-4,-4,4,10,-8],[-8,3,1,-4,3,-4,10,9,-3,-3,6,2,10,5],[-9,5,8,-3,-9,-9,2,7,1,6,-7,-1,-8,-10]],[[8,-8,-8,6,-10,5,5,-2,-9,-9,-6,-4,-3,5],[7,-2,3,-4,5,-9,9,4,9,-1,6,-7,-2,-5],[-6,-8,8,-8,4,-3,3,3,7,-6,-5,3,6,4],[-2,4,-1,-3,-4,1,-4,-6,8,1,-9,2,-3,-7],[-8,8,2,-10,-4,-4,-5,-8,-1,7,4,-7,-4,-4],[7,-7,-2,4,5,-9,-8,-9,9,-1,-2,2,-6,-6],[1,7,-3,10,7,1,10,3,4,3,9,-4,2,-6],[6,-9,2,-2,8,10,7,-9,3,7,6,-1,-3,8],[2,6,-4,4,8,-2,-9,4,-6,-5,5,-6,-1,5],[-1,-1,-7,-10,1,10,1,8,4,8,-6,-9,-6,-3],[-2,-10,3,6,8,2,10,-1,-4,3,-2,8,-3,-1],[1,-5,-2,6,8,-7,7,-8,-1,-10,-9,-3,-1,8]],[[-9,4,-3,-5,-5,2,4,-2,9,8,10,-5,10,-1],[-10,-6,8,-2,-8,-5,9,-6,7,4,9,-5,1,-1],[7,-1,-9,-9,6,7,10,4,-1,2,10,3,-9,2],[8,2,-3,4,1,-10,-5,-8,-1,4,-5,-2,-4,6],[-3,5,10,-7,-10,7,-4,-8,-4,-4,1,8,4,-4],[-5,4,-9,-9,8,-3,5,-2,7,-8,8,-5,-9,6],[-5,4,1,7,-10,-10,-10,-7,-5,6,8,-2,-7,5],[1,1,-4,-5,-6,-4,7,-3,6,-4,10,2,5,6],[10,7,-5,-9,-5,1,-7,6,-8,2,8,7,-7,7],[3,-3,-5,8,9,6,-2,-3,-3,-4,7,-6,-4,-4],[2,-3,3,9,4,-5,-5,-7,9,5,-9,4,4,1],[-3,-9,4,-1,7,4,-9,6,-3,10,-3,5,-5,7]],[[9,9,3,-8,-1,-6,10,4,1,3,5,8,-10,9],[2,-7,4,-2,6,-3,-10,7,-9,1,-1,5,-8,3],[6,5,9,-8,10,9,-3,-4,1,4,4,-1,-2,2],[-9,-9,-8,4,8,2,3,5,4,-10,-5,-5,2,6],[2,5,5,-6,-10,-2,-2,8,4,1,5,2,-6,10],[3,-3,4,-6,-3,1,3,-4,6,2,5,9,-7,-3],[8,-4,-9,-7,4,-3,-8,-10,8,7,6,-7,5,5],[6,6,1,-6,6,5,-9,-8,-3,-7,2,6,-3,1],[6,1,-5,-8,8,7,7,5,8,-10,-2,1,-1,4],[-1,-4,-2,-1,-6,3,10,8,-2,5,4,3,4,-10],[3,1,-10,3,1,-8,10,1,-3,-1,-3,9,2,3],[-7,1,8,6,-8,-1,2,8,-3,3,-9,5,9,-9]]], dtype = "int16")#candidate|168|(6, 12, 14)|const|int16
bop_169 = relay.left_shift(var_167.astype('int16'), relay.reshape(const_168.astype('int16'), relay.shape_of(var_167))) # shape=(6, 12, 14)
uop_172 = relay.atan(bop_169.astype('float32')) # shape=(6, 12, 14)
output = relay.Tuple([uop_172,])
output2 = relay.Tuple([uop_172,])
func_181 = relay.Function([var_167,], output)
mod['func_181'] = func_181
mod = relay.transform.InferType()(mod)
var_182 = relay.var("var_182", dtype = "int16", shape = (6, 12, 14))#candidate|182|(6, 12, 14)|var|int16
output = func_181(var_182)
func_183 = relay.Function([var_182], output)
mutated_mod['func_183'] = func_183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_552 = relay.var("var_552", dtype = "uint8", shape = ())#candidate|552|()|var|uint8
var_553 = relay.var("var_553", dtype = "uint8", shape = (12, 3, 9))#candidate|553|(12, 3, 9)|var|uint8
bop_554 = relay.bitwise_and(var_552.astype('uint8'), var_553.astype('uint8')) # shape=(12, 3, 9)
output = bop_554
output2 = bop_554
func_560 = relay.Function([var_552,var_553,], output)
mod['func_560'] = func_560
mod = relay.transform.InferType()(mod)
var_561 = relay.var("var_561", dtype = "uint8", shape = ())#candidate|561|()|var|uint8
var_562 = relay.var("var_562", dtype = "uint8", shape = (12, 3, 9))#candidate|562|(12, 3, 9)|var|uint8
output = func_560(var_561,var_562,)
func_563 = relay.Function([var_561,var_562,], output)
mutated_mod['func_563'] = func_563
mutated_mod = relay.transform.InferType()(mutated_mod)
var_911 = relay.var("var_911", dtype = "int64", shape = (8, 9, 15))#candidate|911|(8, 9, 15)|var|int64
var_912 = relay.var("var_912", dtype = "int64", shape = (8, 9, 15))#candidate|912|(8, 9, 15)|var|int64
bop_913 = relay.not_equal(var_911.astype('bool'), relay.reshape(var_912.astype('bool'), relay.shape_of(var_911))) # shape=(8, 9, 15)
output = bop_913
output2 = bop_913
func_921 = relay.Function([var_911,var_912,], output)
mod['func_921'] = func_921
mod = relay.transform.InferType()(mod)
mutated_mod['func_921'] = func_921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_921_call = mutated_mod.get_global_var('func_921')
var_923 = relay.var("var_923", dtype = "int64", shape = (8, 9, 15))#candidate|923|(8, 9, 15)|var|int64
var_924 = relay.var("var_924", dtype = "int64", shape = (8, 9, 15))#candidate|924|(8, 9, 15)|var|int64
call_922 = func_921_call(var_923,var_924,)
output = call_922
func_925 = relay.Function([var_923,var_924,], output)
mutated_mod['func_925'] = func_925
mutated_mod = relay.transform.InferType()(mutated_mod)
const_931 = relay.const(4, dtype = "uint16")#candidate|931|()|const|uint16
var_932 = relay.var("var_932", dtype = "uint16", shape = (15, 8, 8))#candidate|932|(15, 8, 8)|var|uint16
bop_933 = relay.not_equal(const_931.astype('bool'), var_932.astype('bool')) # shape=(15, 8, 8)
func_921_call = mod.get_global_var('func_921')
func_925_call = mutated_mod.get_global_var('func_925')
var_977 = relay.var("var_977", dtype = "int64", shape = (90, 12))#candidate|977|(90, 12)|var|int64
call_976 = func_921_call(relay.reshape(var_977.astype('int64'), [8, 9, 15]), relay.reshape(var_977.astype('int64'), [8, 9, 15]), )
call_978 = func_921_call(relay.reshape(var_977.astype('int64'), [8, 9, 15]), relay.reshape(var_977.astype('int64'), [8, 9, 15]), )
bop_990 = relay.greater(const_931.astype('bool'), var_932.astype('bool')) # shape=(15, 8, 8)
output = relay.Tuple([bop_933,call_976,var_977,bop_990,])
output2 = relay.Tuple([bop_933,call_978,var_977,bop_990,])
func_995 = relay.Function([var_932,var_977,], output)
mod['func_995'] = func_995
mod = relay.transform.InferType()(mod)
mutated_mod['func_995'] = func_995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_995_call = mutated_mod.get_global_var('func_995')
var_997 = relay.var("var_997", dtype = "uint16", shape = (15, 8, 8))#candidate|997|(15, 8, 8)|var|uint16
var_998 = relay.var("var_998", dtype = "int64", shape = (90, 12))#candidate|998|(90, 12)|var|int64
call_996 = func_995_call(var_997,var_998,)
output = call_996
func_999 = relay.Function([var_997,var_998,], output)
mutated_mod['func_999'] = func_999
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1020 = relay.const([[[2.206947,3.824960,-3.017433,-6.837104,2.874887,-2.503880,8.857297,4.511863,-9.238385,6.560855,0.710100],[-9.501905,9.151403,5.945853,1.644019,6.115767,3.886676,4.872033,9.852422,-5.927230,9.194848,-8.211674],[-7.270879,-9.564810,7.956510,8.872841,6.862281,0.808494,8.331128,8.890019,8.831108,-4.664018,-7.539862],[2.706100,9.209308,-6.515730,-1.758171,2.841806,-5.212532,4.819438,4.765494,0.295287,3.695157,7.084830],[4.509274,7.966247,-9.920300,5.721125,-7.949730,-4.815733,3.518388,-4.263821,8.498374,-1.450242,1.402465],[-6.459662,-3.151764,1.257940,-7.991689,9.029672,-5.262002,4.405444,-2.253474,1.806760,9.924971,-2.946582],[-1.663959,-7.922889,-8.878038,5.827681,-2.578711,-1.634625,4.947228,-4.311408,-8.923454,-1.609205,0.538452],[2.297163,-1.396694,-1.345746,-0.290482,-0.147831,7.497127,9.884194,1.712045,-4.868292,-6.457510,3.978742],[-8.662152,1.893207,9.206996,9.958987,5.313840,-0.885048,9.630828,0.024106,1.565100,-9.554699,-3.468413]],[[-3.498115,7.470015,-3.795285,7.342790,8.989547,7.997558,-1.003790,-5.277732,1.692865,6.724726,-5.300671],[-0.128147,-7.792161,0.233957,4.420133,-0.178182,-0.563446,-1.769541,6.128275,-0.016487,6.513755,-4.231595],[-1.248591,-2.613934,-0.280324,1.460101,-9.766032,5.563127,3.669689,-1.438690,-0.311408,-6.006363,-9.291840],[8.804202,-6.922136,-2.497330,-3.156982,0.299911,-2.580939,-6.032556,0.466034,3.263028,-7.354151,2.463077],[7.914696,-4.227474,-7.280729,-6.682263,3.570521,7.225781,3.223884,0.006489,-1.408490,-8.799927,-2.691501],[1.756620,-5.892911,-0.643543,4.341168,-4.769603,4.384993,8.338774,0.415854,-5.959621,6.217000,-8.043460],[5.840246,-1.641119,8.042263,-5.087814,-0.550848,8.660365,-7.154125,3.426370,6.766401,0.946836,-9.038899],[7.042868,-8.120458,-6.781847,0.772922,8.308644,-1.568271,-5.821884,-2.769350,-1.200502,-0.737146,-9.275013],[9.615062,2.900446,6.948022,1.458181,4.770445,-5.252145,-2.110199,1.611268,5.767513,-6.966309,4.919877]],[[6.049059,-6.323201,-8.411535,-3.904542,2.777002,-7.515115,-5.317970,4.064227,3.576968,-3.403771,9.269600],[-0.996023,-5.063529,8.739821,3.214222,2.803298,-6.504841,-1.286496,6.969299,9.213201,-3.473955,7.606860],[-6.706609,-8.670739,7.811607,4.937251,1.960602,5.185771,8.741653,3.929943,7.994263,-6.014884,-1.915440],[-5.159980,1.774656,-1.519547,0.141820,-6.390223,5.562820,7.059923,-2.892472,8.633018,-1.137180,8.769682],[1.850798,4.711560,-9.747820,-5.410191,-7.267556,-5.012215,4.603616,-5.853728,-9.672872,-4.309897,3.441539],[-6.978557,-1.633147,-7.984257,-1.706629,-0.103386,-9.955179,3.419158,2.868640,3.165907,-7.083703,8.772166],[-4.547996,9.534256,7.424068,-0.769656,7.763047,-3.721409,-6.629847,1.166603,-8.069752,-8.732982,2.300299],[5.650179,-4.838414,-8.945679,-0.471112,-6.826894,6.953297,1.221071,6.523912,-9.826145,-3.915317,-9.776791],[7.448011,-1.772749,0.657553,-3.157826,-8.808666,-2.185013,-1.956849,1.652702,-4.544625,0.663887,5.141198]],[[-7.397151,3.166006,-4.718725,6.140272,-8.837693,-5.911892,9.515929,-8.378039,-9.423280,0.102586,6.758981],[4.636130,0.888890,-5.390373,-5.866152,7.122823,-9.605742,0.327871,2.377002,8.993143,8.903167,-9.268175],[4.442651,-9.994316,7.335083,-4.305199,6.955740,0.577206,-1.098569,3.341520,-5.976812,8.541835,7.277297],[7.669972,-5.104964,5.680287,-5.519024,-9.418862,-3.055463,2.358343,-5.224391,-7.751966,8.594870,-9.146280],[1.372425,-2.700326,2.566592,-8.951530,-5.998138,3.826513,-1.437328,-6.955544,-3.174380,-4.808110,6.751454],[-8.272784,-2.388549,2.273040,-2.924860,6.510091,-8.236703,1.483578,0.092501,-3.107281,1.567627,-9.586077],[-3.732646,-4.402631,8.307531,1.998125,-4.959129,1.786292,-4.947720,0.333433,-2.023187,-0.898043,-7.274286],[-6.495391,9.302631,-9.308594,-9.345871,-8.380743,9.034727,6.315201,-2.952131,-3.970478,-5.402882,0.969889],[-5.588849,-6.058249,7.470380,8.770856,-0.625066,2.723102,3.396700,9.656516,9.820788,-5.920376,-4.917893]],[[4.747275,6.440148,-6.438502,2.763809,-2.767524,-7.118067,7.251349,-5.304939,0.748623,-8.918807,-6.809659],[-7.085123,-3.601197,-9.139014,4.628008,-5.940170,8.157596,-6.211182,-0.031503,2.462934,1.150885,2.563236],[1.885794,-2.358060,-2.823747,9.343583,-3.589221,-5.654409,3.419525,4.568241,-0.012170,-8.323629,2.622357],[6.074224,-9.585119,9.297662,-9.000287,-0.249278,-8.556810,-2.601752,-7.731218,0.189521,-2.037448,8.088768],[-9.419499,-1.594846,-6.217304,-5.233609,8.012155,8.945676,-0.464242,2.770134,9.562643,-4.830311,-5.691895],[6.572756,2.458131,7.981251,-6.466088,6.944203,-4.832543,4.019835,-5.285836,-6.766483,8.083175,-1.968432],[-7.262871,-8.680369,6.405794,3.069234,-3.708970,-3.525223,-3.710883,4.856013,-7.466782,0.461598,-4.870633],[-1.615873,8.158131,-1.929402,-3.393221,-0.036857,-5.985663,4.820343,-8.154966,-5.978739,5.315349,-6.247819],[-6.596793,-5.098276,-5.198580,9.404295,6.384758,-1.647181,3.826619,7.555449,9.532894,-5.138130,1.065796]],[[0.891069,2.822468,-5.858860,6.201251,-8.892239,-0.961762,-0.053848,-1.855894,0.480232,7.253265,-9.474891],[-4.434959,5.922039,-9.585392,1.115219,9.476079,8.349324,-5.463105,5.158320,-2.927765,-0.509305,-8.104406],[1.725604,-7.055966,-2.681658,-5.925290,-1.849555,2.606392,-6.972655,-0.015472,7.585124,5.680987,-4.709585],[-3.519860,4.644746,8.620855,5.358102,-7.264918,-7.477783,3.315323,6.824430,-0.926236,-0.936714,3.644949],[8.876614,-5.554352,3.841371,6.637764,-5.834356,2.632129,-3.064462,8.875554,-6.902450,-3.027705,-0.139475],[-8.802166,-7.357002,-6.572412,-6.550395,3.617236,9.138502,-2.450976,5.078434,-1.175503,0.778469,6.443604],[-6.753997,5.653484,1.683348,5.215630,6.764618,1.571247,-7.450042,-8.624924,3.857337,-2.792054,2.595015],[7.080458,-1.540250,-6.642883,3.719666,2.833025,-2.295601,-9.622391,1.928534,-2.494275,1.056862,-6.454379],[1.230618,-3.955564,-5.746555,6.782537,9.984134,9.495489,-1.205427,5.433025,7.737274,7.221714,6.729248]],[[4.897615,3.184030,1.830457,6.018215,3.961922,-7.281977,8.263135,-8.961606,0.268539,2.591881,-2.754333],[-4.572687,8.657706,-3.006057,-8.102649,0.949405,-8.419986,4.429194,1.386976,6.499604,0.525059,4.113936],[9.065659,3.696936,4.339665,8.036307,-6.014926,-9.200579,6.432324,-6.262763,-7.778337,-2.321107,-6.170477],[1.222443,-5.105539,-9.958800,-0.848515,9.003936,-9.287897,-9.201763,8.188666,5.440492,-0.275004,-2.143532],[-6.563461,8.186224,-2.165610,-3.826001,9.251265,-6.192039,-8.318326,2.710263,-0.460672,-6.265291,5.647582],[7.633327,-7.845364,-3.488403,-1.268963,9.422931,7.878136,3.030269,-7.767428,-5.263704,5.271832,2.498507],[-0.913589,1.943841,9.532407,0.797370,-7.729971,-0.980610,3.332992,2.969542,3.933685,-8.495037,6.792768],[-0.478034,1.158428,9.949252,7.443036,7.171476,4.574372,4.070750,-2.677867,2.332819,3.076942,-1.054254],[-5.391693,-9.297746,-7.611623,-8.159148,-7.426467,0.723305,-5.380032,7.504275,8.698062,5.008633,1.354482]],[[-5.187809,4.170161,-2.174881,1.729158,9.661484,2.480638,9.957616,-5.427504,4.475100,-2.537132,1.205661],[-6.329394,-8.363545,2.285642,-9.534834,-0.545185,-7.956162,4.954269,-9.366755,7.388331,-5.892009,5.951299],[-3.213327,-3.934278,5.527270,-9.574435,0.417260,8.131596,1.224495,2.629005,7.733213,-5.805824,7.484828],[-7.963271,-6.796810,5.643229,-2.294675,-5.915006,-7.374402,9.842039,8.363603,-8.679141,-3.610618,-2.365450],[-3.029233,3.195297,-1.784782,-0.931682,5.232588,2.257220,-3.955235,1.951694,-0.743791,-4.977203,-5.951177],[-6.909600,3.724825,-6.574312,-1.798064,9.275163,-3.849268,-5.063101,-3.509403,-0.720431,5.274626,4.136691],[-5.749059,2.691807,-3.728158,8.633413,6.540822,-0.696590,1.299857,-0.049914,-1.359664,-6.427839,-0.461474],[8.751272,5.638331,8.424185,6.177925,2.593611,7.168979,-7.190732,-0.278130,-3.109878,3.940481,-9.991852],[2.000310,-9.016476,4.185010,-9.945609,3.187373,-3.425818,5.736193,-1.682585,1.938353,-4.423018,-3.792921]],[[-5.799761,-6.483689,-7.122025,-5.295558,-5.176939,7.587255,9.430116,-7.923090,-0.332690,3.319276,-1.746449],[-6.037485,7.655975,-8.537398,-5.794032,5.490691,9.002373,8.740821,2.949893,7.687321,5.563148,9.278122],[9.342950,-0.162941,0.240607,-0.822149,-5.232185,-4.992727,-6.728682,0.045250,5.901877,-3.434022,7.658384],[-7.628246,3.124391,-4.105825,-8.099095,9.340206,5.844950,-4.487515,7.608460,5.691546,3.790137,5.311826],[-3.939651,7.155233,2.995862,5.308659,8.054731,-4.616685,3.083705,-1.384665,-9.541647,1.311145,5.574273],[-0.601220,-5.542121,6.610617,-5.489656,-6.751104,2.959506,-9.585917,5.465805,7.978940,-2.139025,5.684394],[1.029017,9.081924,5.965579,7.701311,-8.636058,9.729027,1.114271,1.756041,2.900048,2.748676,2.581662],[-6.726917,3.318978,3.349779,9.252998,8.162055,-9.898910,-4.971727,3.397025,4.585262,5.801675,-8.906084],[5.653399,-9.499220,9.519355,9.675251,-7.868627,3.285505,-4.402265,9.204344,7.998610,-6.290287,9.654316]],[[1.356303,-4.181758,3.731383,5.918954,0.099218,4.182053,-3.467117,6.153809,6.973121,6.670555,1.212491],[8.609216,5.880603,9.307316,7.424241,-8.687947,9.009994,2.757933,-7.264989,-4.531245,7.697205,-2.819921],[6.218939,1.150778,5.891457,9.278177,-3.328697,2.735115,-7.079964,6.616396,2.545370,-2.902146,6.997646],[3.245837,4.690378,9.195479,0.743744,-7.239103,0.498700,7.486698,-8.776951,0.957633,-2.883187,-6.955230],[7.158359,-9.440726,3.059169,8.519655,-3.221872,-8.517056,-8.809981,-6.980526,8.069194,-3.088607,-5.657280],[9.344101,4.548573,-6.567155,6.176212,-3.607343,-4.842879,-2.351425,3.012861,-8.935362,-4.886207,5.751070],[-3.573608,1.261988,-4.636130,-8.337406,4.452020,3.694942,-9.926921,-3.764109,-0.229607,-0.109398,3.494801],[-5.098361,-4.601425,-9.171244,-4.809661,-2.129739,5.059970,-5.522306,7.867432,2.110029,5.372518,7.766726],[-8.015806,6.420240,-7.160514,9.415003,-9.852008,3.474089,1.632237,-4.677594,2.062533,-7.955855,-5.548701]],[[3.633732,-3.084041,-9.051163,0.076962,0.096419,-4.013446,3.105836,0.779144,-5.430921,-7.068956,-1.236939],[-4.109054,5.941925,2.042340,-6.637505,4.821922,-0.440347,-0.506477,6.267973,-0.424965,4.196164,9.848527],[-0.349639,-6.500781,8.102843,-2.827841,-7.693862,-1.338840,-5.043931,5.550413,3.162849,-8.505588,-6.946380],[-7.417814,7.878997,5.077222,9.060980,4.130831,7.808200,8.755863,-6.902898,-4.644096,-3.045924,1.726838],[8.452728,3.313892,0.881618,-3.999185,8.454353,3.865219,5.646135,7.357555,8.764617,-6.063340,-9.373814],[1.265981,4.780302,3.426329,-6.552147,6.276971,-1.758955,-4.516052,-9.018438,9.478907,-0.626587,-9.695811],[5.302983,-1.301836,-3.504756,2.235514,-2.721625,-6.889641,0.962098,3.286326,-5.783762,5.920418,-9.701447],[-3.589305,-6.777898,-2.769015,-7.449706,-9.716654,-6.253296,-8.804729,-0.427027,-7.338276,7.076687,-6.357792],[-5.275812,-7.441063,-4.865974,4.563242,-4.595881,-6.200265,-5.212801,5.064371,0.946860,-9.282229,-3.630460]],[[6.934216,4.308539,-0.823853,-6.774789,9.347063,-6.429501,1.653547,6.907624,5.880542,-0.526432,-2.726851],[-3.000844,2.223434,6.030082,-8.619515,-3.561473,-7.953162,1.216174,-7.231407,-8.765356,-9.634981,-0.747617],[4.448557,1.049329,7.258869,-4.907487,-4.503582,0.975045,7.224846,6.123894,-6.225124,0.480348,0.766304],[3.708988,-6.660979,9.363766,2.531662,-2.464683,7.227226,5.069922,6.523255,-0.265461,1.457931,3.448145],[3.159404,-2.835659,-2.413300,-6.991478,-8.524224,-3.946897,2.653941,5.338381,3.307335,-1.106193,1.389606],[8.972067,5.233523,-3.632955,3.537944,5.183060,6.962066,-0.542088,5.876349,2.979356,9.287998,-0.474737],[-4.687944,1.201130,4.879007,-9.371288,8.079049,1.127950,-2.491632,4.720207,9.390641,-6.321410,-8.240735],[5.477705,7.568971,4.640656,-0.773215,-1.528431,-8.869998,-4.598675,2.201008,-1.996480,-2.634714,0.179216],[-7.298719,-5.257295,-1.866776,-3.996110,8.762558,-7.047636,-1.201801,4.717704,-7.152098,6.006152,6.345844]],[[-9.761387,4.965956,-3.249224,6.925530,-5.672044,-0.780782,5.010202,7.955768,-7.311658,3.912942,8.303406],[-5.440628,-4.849196,-2.440319,2.957466,4.662368,-3.757038,4.953295,-3.271669,6.684048,-9.884348,4.585536],[-7.654897,7.542754,-5.197872,6.266538,-0.100486,-0.465902,-6.642369,7.033369,5.030365,-5.699066,5.789104],[-9.870804,-3.033049,-8.941118,9.579080,-3.611139,-7.229989,-1.130279,5.315465,-5.082915,-8.567059,-8.235120],[-5.491852,-1.994914,4.720563,3.016425,-3.771522,-5.806090,6.617654,3.272710,8.298181,-5.439757,6.360551],[-5.360403,6.149816,6.482248,8.063035,-1.644381,0.546333,8.113877,5.144194,5.898496,-3.970177,-3.493093],[-2.237698,9.784162,-5.646418,0.836277,-0.033160,-5.805001,-7.212157,4.801737,2.137831,9.311719,7.098077],[3.611604,-4.760210,-2.943801,7.949102,-9.530352,5.023600,6.089139,-4.591294,7.880071,-3.526451,-5.762740],[6.765283,-8.590244,3.732726,0.733594,8.599752,-0.068531,0.623602,-7.418800,9.820195,-5.808049,-2.135450]],[[-0.338302,-3.373506,-2.630126,0.249883,-2.343821,-4.307366,-0.741213,-2.032541,-2.556953,-4.646968,2.396675],[-2.336028,-8.380593,2.311455,-2.900339,-2.847166,-9.892468,-8.074848,4.008816,8.253264,6.425190,3.083108],[1.833985,5.830912,5.356462,-3.854247,-6.087749,-9.707256,5.659119,7.753484,-1.327724,-5.380259,8.999580],[5.384956,1.610732,-7.261636,-8.576060,-5.217904,0.547215,-7.319402,0.679525,-0.994269,7.197236,5.957557],[-6.902563,-8.304348,-6.367084,1.984574,7.076179,6.198969,2.627944,7.037039,4.736740,0.428656,-0.472106],[4.305537,2.885426,6.806848,-6.652981,5.710803,7.892482,4.819206,-4.192849,8.606813,7.856834,-2.216184],[-1.994579,7.015682,0.897128,0.049906,-5.840682,-8.449461,-4.345167,-7.196087,-4.043297,2.324781,6.744557],[4.585480,2.586550,8.945820,1.907802,7.295720,-8.363206,9.371395,8.385610,7.260141,4.690939,1.681272],[0.631439,6.922574,0.241238,4.471071,0.433453,5.235639,-7.242770,-0.573660,-5.614141,1.142856,-6.526927]],[[6.203369,1.843119,9.522314,-7.568429,-3.264664,-8.988443,7.245805,-4.362287,-6.031684,6.072055,-8.799422],[-6.988367,-5.363055,-8.081529,2.559710,-4.364426,7.470768,9.932042,5.619060,7.536865,0.735570,2.667729],[-5.979359,-0.832641,1.089819,-5.826020,0.149334,-4.644859,3.320361,8.886727,5.274457,1.660030,-9.635983],[3.923995,-0.493896,4.094452,-5.181226,-4.005136,9.283713,8.448331,9.573461,-2.705686,2.523349,-5.286717],[-8.878619,9.131480,7.709773,-5.175802,-4.691274,2.120917,-1.228106,-7.957964,9.655113,8.730625,2.400293],[-7.104485,-5.665597,1.326876,3.707919,7.899449,-4.485759,-5.995678,7.342278,8.546840,-6.061921,8.456444],[2.502535,-8.456302,-7.512151,1.614816,-9.607041,-9.905496,2.459440,-4.591018,7.519207,-2.473945,8.881107],[-3.591808,6.148803,-7.740114,-8.487560,-1.934096,6.359158,1.181138,5.711828,-3.377991,-8.564312,-6.423901],[-2.803628,-1.846839,-1.882701,3.599078,4.555475,7.415403,4.950236,0.842880,4.948849,-6.101513,-1.154034]]], dtype = "float32")#candidate|1020|(15, 9, 11)|const|float32
var_1021 = relay.var("var_1021", dtype = "float32", shape = (15, 9, 11))#candidate|1021|(15, 9, 11)|var|float32
bop_1022 = relay.floor_mod(const_1020.astype('float32'), relay.reshape(var_1021.astype('float32'), relay.shape_of(const_1020))) # shape=(15, 9, 11)
output = relay.Tuple([bop_1022,])
output2 = relay.Tuple([bop_1022,])
func_1031 = relay.Function([var_1021,], output)
mod['func_1031'] = func_1031
mod = relay.transform.InferType()(mod)
var_1032 = relay.var("var_1032", dtype = "float32", shape = (15, 9, 11))#candidate|1032|(15, 9, 11)|var|float32
output = func_1031(var_1032)
func_1033 = relay.Function([var_1032], output)
mutated_mod['func_1033'] = func_1033
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1416 = relay.var("var_1416", dtype = "uint16", shape = ())#candidate|1416|()|var|uint16
var_1417 = relay.var("var_1417", dtype = "uint16", shape = (5, 5, 5))#candidate|1417|(5, 5, 5)|var|uint16
bop_1418 = relay.maximum(var_1416.astype('uint16'), var_1417.astype('uint16')) # shape=(5, 5, 5)
func_921_call = mod.get_global_var('func_921')
func_925_call = mutated_mod.get_global_var('func_925')
var_1440 = relay.var("var_1440", dtype = "int64", shape = (1080,))#candidate|1440|(1080,)|var|int64
call_1439 = func_921_call(relay.reshape(var_1440.astype('int64'), [8, 9, 15]), relay.reshape(var_1440.astype('int64'), [8, 9, 15]), )
call_1441 = func_921_call(relay.reshape(var_1440.astype('int64'), [8, 9, 15]), relay.reshape(var_1440.astype('int64'), [8, 9, 15]), )
output = relay.Tuple([bop_1418,call_1439,var_1440,])
output2 = relay.Tuple([bop_1418,call_1441,var_1440,])
func_1446 = relay.Function([var_1416,var_1417,var_1440,], output)
mod['func_1446'] = func_1446
mod = relay.transform.InferType()(mod)
mutated_mod['func_1446'] = func_1446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1446_call = mutated_mod.get_global_var('func_1446')
var_1448 = relay.var("var_1448", dtype = "uint16", shape = ())#candidate|1448|()|var|uint16
var_1449 = relay.var("var_1449", dtype = "uint16", shape = (5, 5, 5))#candidate|1449|(5, 5, 5)|var|uint16
var_1450 = relay.var("var_1450", dtype = "int64", shape = (1080,))#candidate|1450|(1080,)|var|int64
call_1447 = func_1446_call(var_1448,var_1449,var_1450,)
output = call_1447
func_1451 = relay.Function([var_1448,var_1449,var_1450,], output)
mutated_mod['func_1451'] = func_1451
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1520 = relay.var("var_1520", dtype = "float64", shape = (12, 13, 9))#candidate|1520|(12, 13, 9)|var|float64
uop_1521 = relay.tan(var_1520.astype('float64')) # shape=(12, 13, 9)
uop_1526 = relay.sinh(var_1520.astype('float64')) # shape=(12, 13, 9)
output = relay.Tuple([uop_1521,uop_1526,])
output2 = relay.Tuple([uop_1521,uop_1526,])
func_1546 = relay.Function([var_1520,], output)
mod['func_1546'] = func_1546
mod = relay.transform.InferType()(mod)
mutated_mod['func_1546'] = func_1546
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1547 = relay.var("var_1547", dtype = "float64", shape = (12, 13, 9))#candidate|1547|(12, 13, 9)|var|float64
func_1546_call = mutated_mod.get_global_var('func_1546')
call_1548 = func_1546_call(var_1547)
output = call_1548
func_1549 = relay.Function([var_1547], output)
mutated_mod['func_1549'] = func_1549
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1556 = relay.var("var_1556", dtype = "float64", shape = (14, 11, 10))#candidate|1556|(14, 11, 10)|var|float64
uop_1557 = relay.atan(var_1556.astype('float64')) # shape=(14, 11, 10)
func_560_call = mod.get_global_var('func_560')
func_563_call = mutated_mod.get_global_var('func_563')
var_1570 = relay.var("var_1570", dtype = "uint8", shape = ())#candidate|1570|()|var|uint8
var_1571 = relay.var("var_1571", dtype = "uint8", shape = (324,))#candidate|1571|(324,)|var|uint8
call_1569 = func_560_call(relay.reshape(var_1570.astype('uint8'), []), relay.reshape(var_1571.astype('uint8'), [12, 3, 9]), )
call_1572 = func_560_call(relay.reshape(var_1570.astype('uint8'), []), relay.reshape(var_1571.astype('uint8'), [12, 3, 9]), )
func_560_call = mod.get_global_var('func_560')
func_563_call = mutated_mod.get_global_var('func_563')
call_1573 = func_560_call(relay.reshape(var_1570.astype('uint8'), []), relay.reshape(call_1569.astype('uint8'), [12, 3, 9]), )
call_1574 = func_560_call(relay.reshape(var_1570.astype('uint8'), []), relay.reshape(call_1569.astype('uint8'), [12, 3, 9]), )
output = relay.Tuple([uop_1557,call_1569,var_1570,var_1571,call_1573,])
output2 = relay.Tuple([uop_1557,call_1572,var_1570,var_1571,call_1574,])
func_1584 = relay.Function([var_1556,var_1570,var_1571,], output)
mod['func_1584'] = func_1584
mod = relay.transform.InferType()(mod)
var_1585 = relay.var("var_1585", dtype = "float64", shape = (14, 11, 10))#candidate|1585|(14, 11, 10)|var|float64
var_1586 = relay.var("var_1586", dtype = "uint8", shape = ())#candidate|1586|()|var|uint8
var_1587 = relay.var("var_1587", dtype = "uint8", shape = (324,))#candidate|1587|(324,)|var|uint8
output = func_1584(var_1585,var_1586,var_1587,)
func_1588 = relay.Function([var_1585,var_1586,var_1587,], output)
mutated_mod['func_1588'] = func_1588
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1595 = relay.var("var_1595", dtype = "uint8", shape = (8, 5, 13))#candidate|1595|(8, 5, 13)|var|uint8
var_1596 = relay.var("var_1596", dtype = "uint8", shape = (8, 5, 13))#candidate|1596|(8, 5, 13)|var|uint8
bop_1597 = relay.not_equal(var_1595.astype('bool'), relay.reshape(var_1596.astype('bool'), relay.shape_of(var_1595))) # shape=(8, 5, 13)
bop_1603 = relay.left_shift(var_1595.astype('uint16'), relay.reshape(var_1596.astype('uint16'), relay.shape_of(var_1595))) # shape=(8, 5, 13)
uop_1610 = relay.sqrt(bop_1597.astype('float64')) # shape=(8, 5, 13)
bop_1615 = relay.power(uop_1610.astype('float32'), relay.reshape(bop_1603.astype('float32'), relay.shape_of(uop_1610))) # shape=(8, 5, 13)
output = relay.Tuple([bop_1615,])
output2 = relay.Tuple([bop_1615,])
func_1648 = relay.Function([var_1595,var_1596,], output)
mod['func_1648'] = func_1648
mod = relay.transform.InferType()(mod)
mutated_mod['func_1648'] = func_1648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1648_call = mutated_mod.get_global_var('func_1648')
var_1650 = relay.var("var_1650", dtype = "uint8", shape = (8, 5, 13))#candidate|1650|(8, 5, 13)|var|uint8
var_1651 = relay.var("var_1651", dtype = "uint8", shape = (8, 5, 13))#candidate|1651|(8, 5, 13)|var|uint8
call_1649 = func_1648_call(var_1650,var_1651,)
output = call_1649
func_1652 = relay.Function([var_1650,var_1651,], output)
mutated_mod['func_1652'] = func_1652
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1686 = relay.var("var_1686", dtype = "float32", shape = (10, 3, 8))#candidate|1686|(10, 3, 8)|var|float32
uop_1687 = relay.asinh(var_1686.astype('float32')) # shape=(10, 3, 8)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
var_1698 = relay.var("var_1698", dtype = "int16", shape = (84, 12))#candidate|1698|(84, 12)|var|int16
call_1697 = relay.TupleGetItem(func_181_call(relay.reshape(var_1698.astype('int16'), [6, 12, 14])), 0)
call_1699 = relay.TupleGetItem(func_183_call(relay.reshape(var_1698.astype('int16'), [6, 12, 14])), 0)
output = relay.Tuple([uop_1687,call_1697,var_1698,])
output2 = relay.Tuple([uop_1687,call_1699,var_1698,])
func_1701 = relay.Function([var_1686,var_1698,], output)
mod['func_1701'] = func_1701
mod = relay.transform.InferType()(mod)
var_1702 = relay.var("var_1702", dtype = "float32", shape = (10, 3, 8))#candidate|1702|(10, 3, 8)|var|float32
var_1703 = relay.var("var_1703", dtype = "int16", shape = (84, 12))#candidate|1703|(84, 12)|var|int16
output = func_1701(var_1702,var_1703,)
func_1704 = relay.Function([var_1702,var_1703,], output)
mutated_mod['func_1704'] = func_1704
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1752 = relay.var("var_1752", dtype = "float64", shape = (6, 2, 16))#candidate|1752|(6, 2, 16)|var|float64
uop_1753 = relay.cosh(var_1752.astype('float64')) # shape=(6, 2, 16)
uop_1763 = relay.acos(uop_1753.astype('float64')) # shape=(6, 2, 16)
output = uop_1763
output2 = uop_1763
func_1767 = relay.Function([var_1752,], output)
mod['func_1767'] = func_1767
mod = relay.transform.InferType()(mod)
mutated_mod['func_1767'] = func_1767
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1768 = relay.var("var_1768", dtype = "float64", shape = (6, 2, 16))#candidate|1768|(6, 2, 16)|var|float64
func_1767_call = mutated_mod.get_global_var('func_1767')
call_1769 = func_1767_call(var_1768)
output = call_1769
func_1770 = relay.Function([var_1768], output)
mutated_mod['func_1770'] = func_1770
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2191 = relay.var("var_2191", dtype = "float32", shape = (12, 14))#candidate|2191|(12, 14)|var|float32
uop_2192 = relay.erf(var_2191.astype('float32')) # shape=(12, 14)
func_1767_call = mod.get_global_var('func_1767')
func_1770_call = mutated_mod.get_global_var('func_1770')
var_2195 = relay.var("var_2195", dtype = "float64", shape = (192,))#candidate|2195|(192,)|var|float64
call_2194 = func_1767_call(relay.reshape(var_2195.astype('float64'), [6, 2, 16]))
call_2196 = func_1767_call(relay.reshape(var_2195.astype('float64'), [6, 2, 16]))
output = relay.Tuple([uop_2192,call_2194,var_2195,])
output2 = relay.Tuple([uop_2192,call_2196,var_2195,])
func_2220 = relay.Function([var_2191,var_2195,], output)
mod['func_2220'] = func_2220
mod = relay.transform.InferType()(mod)
mutated_mod['func_2220'] = func_2220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2220_call = mutated_mod.get_global_var('func_2220')
var_2222 = relay.var("var_2222", dtype = "float32", shape = (12, 14))#candidate|2222|(12, 14)|var|float32
var_2223 = relay.var("var_2223", dtype = "float64", shape = (192,))#candidate|2223|(192,)|var|float64
call_2221 = func_2220_call(var_2222,var_2223,)
output = call_2221
func_2224 = relay.Function([var_2222,var_2223,], output)
mutated_mod['func_2224'] = func_2224
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2326 = relay.const([[[-7.774056,9.370385,-1.512482,4.504751,-7.062723,7.032475,7.438991,9.997896],[4.547293,5.678878,2.258666,-9.436055,-6.259656,3.003720,-0.796334,0.034688],[0.092551,-7.107220,0.519103,9.213938,3.644134,-3.104383,-6.190799,-3.342611],[0.187662,1.397404,2.108034,-6.508460,7.773108,-2.917145,5.796653,-9.745676],[6.320441,-7.562732,-6.249065,-3.747415,-9.748339,-9.022246,-9.431511,6.843647],[-4.618009,1.322259,-9.896731,-7.631210,0.947557,4.508823,-7.640102,3.593734],[4.243744,-7.249904,-1.085115,3.276805,5.409327,9.140543,-8.869052,-0.415451]],[[5.834429,-0.144934,7.704754,-1.500644,-3.561301,9.612472,3.324283,-5.024415],[-5.126861,4.445441,5.777329,-0.841605,-2.872219,-7.824478,-8.743554,-6.139792],[-6.445666,3.034921,4.896344,9.493638,2.712422,-9.853899,6.777177,6.881567],[-7.360780,-2.783169,-2.669382,-9.591337,-0.540532,5.795261,6.818724,2.991730],[3.565384,-7.256943,-4.836194,-9.569842,-6.072242,-9.200880,8.557849,-2.893992],[-0.451016,2.169686,5.586510,-7.729706,-1.402906,-4.710825,3.617577,-0.449558],[-0.940463,0.309916,-1.265015,-9.932035,-2.748164,-9.804624,5.245960,6.067744]],[[-3.103191,-8.220883,1.629757,6.107129,-9.438893,0.179400,9.679446,-5.913141],[-6.510908,-4.815921,6.486221,-6.004537,-2.324135,0.267987,8.850164,2.225502],[1.076378,9.518051,-0.160142,7.850273,-3.773902,-2.787525,-5.251122,3.277944],[-4.854439,0.112628,-4.408868,-4.030825,-0.985878,-2.049011,-1.187180,4.662116],[8.093244,-3.912912,-0.988570,5.507461,0.086149,-4.819944,-5.230438,-4.321031],[-0.915455,7.953828,2.803568,0.121765,7.140355,4.805013,0.595792,-4.601043],[8.718865,0.729244,-9.652862,-1.605120,-2.379442,7.655768,-3.834341,-0.748989]],[[2.026871,-4.553536,2.822942,-4.625347,9.653586,-1.903892,0.137783,-0.607754],[-7.170065,-7.503595,-5.548299,-9.487596,5.202512,2.051656,7.460668,-9.698817],[8.829376,-7.264517,-0.154862,-0.416941,-9.605260,7.446391,0.839259,6.018913],[2.557529,-8.698740,-5.046595,-2.916131,-7.212820,-0.080431,2.709079,-3.350021],[1.982227,5.400939,9.029576,3.442009,1.253627,8.596688,-3.878241,-0.822497],[-9.349404,7.340843,9.719585,0.195643,-6.840386,9.854290,-0.457004,-4.064119],[-6.972521,-5.431230,5.029995,-1.660333,-2.209293,6.456445,-2.229624,-6.869079]],[[-9.842158,3.019462,8.561632,5.086415,-3.322030,-6.553259,-8.373760,-9.050825],[-4.538944,6.147206,6.871745,-0.638250,4.345988,-6.021875,5.321163,2.331147],[7.236039,5.518165,5.021983,-9.324620,-3.234163,-2.864808,4.258137,1.885289],[7.541924,-1.869701,-3.361442,-5.059102,-7.432792,5.090146,9.760075,-0.353967],[-3.680878,-6.778126,-0.973350,9.805342,6.178403,-8.701451,1.636234,-1.023138],[-2.924051,2.700264,-3.079117,-7.650605,-2.818134,-0.696368,-3.944900,-0.022174],[4.326604,-9.168158,5.077909,-2.894900,-1.913286,-1.107468,-6.315925,-1.007730]],[[3.983430,-2.625259,-4.181641,-5.591100,-9.779486,-2.755808,3.039644,9.566242],[7.672038,1.042770,-3.573161,1.706563,-3.545186,-8.349284,9.931947,7.283184],[-0.136002,-2.210789,-8.485260,3.107439,2.987545,-7.788277,3.145564,1.661164],[5.933118,2.774976,-2.021924,-2.559905,-7.041109,-9.945493,-6.500344,-3.487120],[0.619193,5.472707,-1.843485,-3.626416,-1.150071,-4.676506,4.796975,3.212991],[-8.985176,-4.724803,6.136181,2.694981,0.902403,5.053972,5.294949,-5.440372],[-1.914517,8.702411,-0.190530,0.432926,-6.272497,-3.493222,2.309126,-1.148813]],[[8.924376,2.907074,-7.732871,-0.604472,-6.594789,2.876860,-5.389094,-8.394058],[2.200225,0.035627,8.600216,-7.764288,-4.878120,1.138754,-6.444053,-6.131852],[-2.976508,6.408642,-0.158046,-6.227657,7.622242,7.213441,6.756056,4.655656],[1.668446,4.201890,4.567252,-4.204763,-4.960274,8.001987,3.632927,-1.163781],[5.714571,-3.473280,-1.353116,-3.021200,-3.685197,4.490041,2.448606,-6.705672],[9.984291,-4.505631,-7.630807,-9.206841,-8.012971,9.217171,6.963495,-1.772684],[4.493594,1.667562,1.401945,-9.318033,2.227548,-5.729483,-3.997813,0.266249]],[[-6.272573,-7.500526,-4.426233,1.896173,-3.212266,-4.274529,5.748212,8.184282],[-4.163632,-8.044511,-0.593132,1.235866,-1.533636,6.155959,8.065666,-8.063739],[-6.994384,-0.242392,1.150249,9.512266,-8.619028,-1.335537,-8.008522,2.201690],[-7.466301,5.027896,-0.630710,-4.655139,-3.745655,1.616707,-7.403042,8.641070],[-6.152109,4.340990,4.276297,7.478465,-2.417734,6.105977,7.480894,5.640738],[-9.943695,8.092974,-6.882679,2.549802,8.048331,-4.655216,-8.893932,-9.895342],[2.735093,8.345117,-8.580244,-6.872928,-9.699012,-9.229854,-8.223116,3.445011]],[[-0.216362,3.388627,-1.927739,4.770424,4.506928,4.469518,6.616615,-0.847046],[7.525659,6.689050,5.851441,-2.122451,-5.850468,7.468237,6.686522,9.474426],[7.211324,-7.765490,-6.336604,0.394626,8.138987,3.359575,-0.128390,0.630998],[4.413866,-8.524069,-0.045424,-3.816684,1.833017,-2.628244,-9.012477,-8.469848],[-3.430792,7.812340,-8.672896,2.584283,4.060641,-0.630559,-5.577339,8.492732],[-0.174541,-5.992864,7.939376,1.263236,1.913069,5.418102,-1.458909,3.763630],[-7.757227,6.307274,-1.371734,-1.683404,0.522182,2.731101,-3.988502,-9.710946]],[[-3.601148,5.214271,6.421560,-2.114626,-5.443787,2.387156,9.770877,-5.329689],[7.095349,-6.613118,-6.172117,-9.480850,3.639446,9.229283,-9.139913,6.645204],[3.571960,-0.627536,5.466452,7.075410,-6.643195,-8.325527,9.597386,3.050613],[-3.901676,-0.697831,-7.377262,5.165396,2.277147,6.449846,-0.446051,-7.360852],[-0.747961,-6.407631,-0.374862,8.929489,-8.653091,-9.114683,-3.287829,3.208072],[-0.641595,4.887552,-3.070102,-1.705069,-0.073229,2.172345,-0.467287,-7.309676],[1.852488,9.101452,-2.971537,-1.332526,-8.471428,-7.292055,7.117267,-9.059040]],[[-4.583714,-1.507208,-9.202542,-7.431720,2.845801,0.366728,7.940646,-7.629512],[-6.455119,-6.303466,-1.305600,-7.224838,-5.795048,-1.853444,-0.966726,3.815823],[-6.788130,3.399374,-3.380484,6.862870,4.189717,-1.414545,-5.237558,1.566617],[-7.391871,0.726889,4.783915,1.384837,7.358105,7.909132,-4.814371,-6.387299],[-8.363390,0.373385,9.691561,-2.759621,1.087622,0.674219,8.668927,7.421687],[9.507794,5.320079,-4.537813,-7.604906,-4.364268,4.330234,-6.075739,1.121720],[2.328781,9.636250,-6.231659,6.778213,-1.771157,5.810052,-9.952201,8.237387]],[[-3.712896,-5.149683,-9.840537,-1.780023,-4.395473,4.575534,4.203055,5.152360],[-7.631667,8.076412,9.689129,-3.913118,1.441884,5.000457,-0.505356,9.556230],[9.318444,6.397963,-9.658248,-7.567020,5.551429,9.886850,0.627364,5.701443],[-4.178102,-7.332179,-9.996574,2.738764,-2.246742,4.959961,-2.927644,2.536661],[-5.978689,9.548759,-7.235149,8.644574,4.824181,-5.480376,7.049707,-9.221380],[-3.379147,9.188291,-2.426630,5.581471,-8.616358,3.505763,3.942912,-1.023339],[-8.394259,9.928709,-5.597523,-2.863665,3.759867,-9.620365,7.401357,-2.515973]]], dtype = "float32")#candidate|2326|(12, 7, 8)|const|float32
uop_2327 = relay.rsqrt(const_2326.astype('float32')) # shape=(12, 7, 8)
uop_2329 = relay.log10(uop_2327.astype('float64')) # shape=(12, 7, 8)
bop_2343 = relay.not_equal(uop_2329.astype('bool'), relay.reshape(const_2326.astype('bool'), relay.shape_of(uop_2329))) # shape=(12, 7, 8)
func_1031_call = mod.get_global_var('func_1031')
func_1033_call = mutated_mod.get_global_var('func_1033')
var_2352 = relay.var("var_2352", dtype = "float32", shape = (1485,))#candidate|2352|(1485,)|var|float32
call_2351 = relay.TupleGetItem(func_1031_call(relay.reshape(var_2352.astype('float32'), [15, 9, 11])), 0)
call_2353 = relay.TupleGetItem(func_1033_call(relay.reshape(var_2352.astype('float32'), [15, 9, 11])), 0)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
const_2358 = relay.const([-10,1,-6,-1,4,6,-10,-3,8,-9,9,10,10,-3,10,9,-4,7,7,-4,-7,-1,5,-1,9,7,-5,-4,-8,3,-9,-7,3,5,-6,-1,3,-8,-7,-9,-1,4,7,1,9,5,-6,-10,-8,1,6,-5,-5,7,-3,8,-5,10,-4,-9,-4,-8,-5,-3,5,-7,5,2,-8,-10,7,5,-2,-6,-7,-7,7,3,-6,-7,10,4,7,-5,-4,5,3,-3,-8,-1,-2,-8,-4,3,7,10,5,3,1,6,-5,7,5,-4,1,-8,2,3,4,7,-5,1,3,1,-3,7,10,-5,6,-5,-5,-1,8,-4,-10,-6,-7,5,2,-2,-5,-5,5,-9,9,9,9,-2,3,-9,-6,10,-3,-1,-2,-2,-4,-3,6,3,10,-3,3,5,-9,1,-1,-9,5,-1,-5,-6,-1,9,3,-5,7,3,3,-5,4,8,-6,-2,-8,-8,8,-1,2,-6,-5,9,1,9,-10,6,2,-3,-2,-7,-10,3,-10,-6,-8,9,-5,5,-10,10,1,-6,-2,1,-4,4,5,1,-4,8,-3,-3,-5,6,3,5,-4,6,8,1,8,-3,3,-6,4,6,9,6,10,-9,-10,6,3,-1,3,-10,-7,2,10,-6,-10,-2,6,4,1,-8,6,-4,-7,-10,7,9,-5,-6,9,-1,-6,9,-2,7,-6,4,-8,1,-7,6,-10,-10,8,-2,-7,7,6,7,-10,-3,9,10,-8,-3,-1,9,-7,-8,4,-3,3,-8,7,6,10,-8,7,-6,-9,1,7,-3,2,9,-1,9,-4,4,-2,3,-2,-3,-8,-5,10,-1,10,1,-7,-8,-5,-4,-3,2,-9,-1,5,9,5,-2,-1,-1,-7,3,-7,4,-7,4,-5,7,-1,-2,-4,-2,4,-5,-7,8,-3,9,1,3,-2,-9,-3,-10,7,-1,-2,2,-6,-4,5,8,2,-5,3,-2,5,1,-10,-2,-2,9,-5,1,-10,-6,-7,-1,6,-2,6,-3,7,-10,-2,3,-5,-7,3,-4,4,-8,-8,10,8,2,-7,-6,-8,9,-9,3,5,4,1,3,-2,6,1,-2,9,-3,-1,-1,5,9,4,-8,6,-9,4,2,-4,-3,-6,3,1,10,-7,10,-10,-8,3,-3,9,-7,5,-6,10,3,-6,-9,-2,-10,-1,3,-1,8,-6,-4,5,8,3,-7,5,6,8,-10,-6,1,1,9,-2,8,7,3,-3,2,-6,8,-10,-3,-10,1,5,3,4,10,10,6,-9,-1,-9,-10,-1,6,-3,-2,-4,-10,2,9,-5,6,6,-5,10,-9,7,3,8,-3,-8,5,-7,3,6,9,-2,9,4,4,9,4,5,-6,-7,-5,4,-9,2,-2,5,-4,-4,-2,8,-6,-1,5,-6,-8,-9,-7,2,-6,7,7,-9,8,5,-6,8,-1,10,5,-6,10,8,2,1,-8,-8,-2,-7,4,10,6,2,7,3,10,4,7,-5,-6,7,-9,-9,3,1,10,5,-9,5,-1,-7,10,-8,7,-3,2,-5,4,1,-1,-5,4,-9,9,9,2,8,1,-8,1,-9,3,5,-9,-7,9,-3,3,5,6,1,-4,-10,9,1,-1,-5,6,2,-6,-8,-2,-9,-5,-7,2,10,1,9,10,-9,10,-3,-6,2,5,-9,2,-10,-4,-9,6,-2,-9,-8,1,-8,-3,-9,-8,-3,2,-8,1,3,-6,4,2,-3,-7,8,8,10,8,10,-10,-9,-4,9,6,3,-6,7,4,-9,-9,-10,-4,10,-2,8,-3,4,-5,-7,7,-4,-8,1,9,3,-6,8,-5,-3,-9,9,-9,1,10,-4,9,-7,7,7,7,-7,-4,4,1,8,-8,4,-2,1,5,8,-3,9,5,9,7,-5,-1,2,-4,-4,7,-4,-2,-2,2,9,7,5,-5,3,10,-2,-5,-3,-5,5,-4,1,-4,1,3,1,-9,1,1,-3,-10,-4,-1,5,-3,-6,-9,-2,-9,9,4,-3,8,-4,-6,2,4,-2,-2,-9,-9,-1,-3,1,6,6,-2,1,-1,-9,-4,4,6,2,-2,2,-9,10,-5,-4,3,-1,8,-6,-8,7,-7,-9,6,-10,4,10,6,5,-2,-4,-8,-1,8,-7,-2,6,7,4,-7,-4,8,-4,3,-10,8,-10,-9,-5,8,-1,10,2,3,1,-2,-2,-8,-7,-4,7,-10,-8,-10,8,-7,-10,8,-6,-10,2,-1,-2,-9,-3,-7,4,-9,-8,7,7,-5,-3,-9,-4,6,-10,-10,-10,-3,-5,3,-8,4,-9,10,-9,3,7,-2,2,9,-7,-4,2,-9,-8,6,5,1,-3,2,-7,-3,-8,5,5,3,5,-8,-7,-3,1,2,-9,10,4,-3,6,7,-3,5,8,-9,-9,9,-5,-10,2,-10,5,-5,1,-1,-8,-10,-1,-8,-5,4,-5,10,7,-6,-4,-2,-8,9,6,6,-10,-6,3,2,10,-2,8,5,-3,-4,9,5,4,-9,-6,6,-1,-7,-6,-2,4,1,5,-5,9,5,-7,7,4,2,1,4,-10,-4,-1,-3,10,6,2,-4,-1,8,7,9,-1,1,-1,-4,7,9,6,-2,-8,2,10,-10,4,10,5,-3,2,-8,1,6,-2,8,9,-2,8,4,9,10,-3,-5,2,5], dtype = "int16")#candidate|2358|(1008,)|const|int16
call_2357 = relay.TupleGetItem(func_181_call(relay.reshape(const_2358.astype('int16'), [6, 12, 14])), 0)
call_2359 = relay.TupleGetItem(func_183_call(relay.reshape(const_2358.astype('int16'), [6, 12, 14])), 0)
output = relay.Tuple([bop_2343,call_2351,var_2352,call_2357,const_2358,])
output2 = relay.Tuple([bop_2343,call_2353,var_2352,call_2359,const_2358,])
func_2367 = relay.Function([var_2352,], output)
mod['func_2367'] = func_2367
mod = relay.transform.InferType()(mod)
var_2368 = relay.var("var_2368", dtype = "float32", shape = (1485,))#candidate|2368|(1485,)|var|float32
output = func_2367(var_2368)
func_2369 = relay.Function([var_2368], output)
mutated_mod['func_2369'] = func_2369
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2403 = relay.var("var_2403", dtype = "float32", shape = (1, 13, 5))#candidate|2403|(1, 13, 5)|var|float32
uop_2404 = relay.cos(var_2403.astype('float32')) # shape=(1, 13, 5)
func_1701_call = mod.get_global_var('func_1701')
func_1704_call = mutated_mod.get_global_var('func_1704')
var_2407 = relay.var("var_2407", dtype = "float32", shape = (240,))#candidate|2407|(240,)|var|float32
var_2408 = relay.var("var_2408", dtype = "int16", shape = (1008,))#candidate|2408|(1008,)|var|int16
call_2406 = relay.TupleGetItem(func_1701_call(relay.reshape(var_2407.astype('float32'), [10, 3, 8]), relay.reshape(var_2408.astype('int16'), [84, 12]), ), 2)
call_2409 = relay.TupleGetItem(func_1704_call(relay.reshape(var_2407.astype('float32'), [10, 3, 8]), relay.reshape(var_2408.astype('int16'), [84, 12]), ), 2)
bop_2412 = relay.add(uop_2404.astype('int64'), relay.reshape(var_2403.astype('int64'), relay.shape_of(uop_2404))) # shape=(1, 13, 5)
uop_2423 = relay.sinh(call_2406.astype('float32')) # shape=(84, 12)
uop_2425 = relay.sinh(call_2409.astype('float32')) # shape=(84, 12)
output = relay.Tuple([var_2407,var_2408,bop_2412,uop_2423,])
output2 = relay.Tuple([var_2407,var_2408,bop_2412,uop_2425,])
func_2430 = relay.Function([var_2403,var_2407,var_2408,], output)
mod['func_2430'] = func_2430
mod = relay.transform.InferType()(mod)
mutated_mod['func_2430'] = func_2430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2430_call = mutated_mod.get_global_var('func_2430')
var_2432 = relay.var("var_2432", dtype = "float32", shape = (1, 13, 5))#candidate|2432|(1, 13, 5)|var|float32
var_2433 = relay.var("var_2433", dtype = "float32", shape = (240,))#candidate|2433|(240,)|var|float32
var_2434 = relay.var("var_2434", dtype = "int16", shape = (1008,))#candidate|2434|(1008,)|var|int16
call_2431 = func_2430_call(var_2432,var_2433,var_2434,)
output = call_2431
func_2435 = relay.Function([var_2432,var_2433,var_2434,], output)
mutated_mod['func_2435'] = func_2435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2548 = relay.var("var_2548", dtype = "uint64", shape = ())#candidate|2548|()|var|uint64
var_2549 = relay.var("var_2549", dtype = "uint64", shape = (3, 7, 14))#candidate|2549|(3, 7, 14)|var|uint64
bop_2550 = relay.bitwise_xor(var_2548.astype('uint64'), var_2549.astype('uint64')) # shape=(3, 7, 14)
output = relay.Tuple([bop_2550,])
output2 = relay.Tuple([bop_2550,])
func_2556 = relay.Function([var_2548,var_2549,], output)
mod['func_2556'] = func_2556
mod = relay.transform.InferType()(mod)
var_2557 = relay.var("var_2557", dtype = "uint64", shape = ())#candidate|2557|()|var|uint64
var_2558 = relay.var("var_2558", dtype = "uint64", shape = (3, 7, 14))#candidate|2558|(3, 7, 14)|var|uint64
output = func_2556(var_2557,var_2558,)
func_2559 = relay.Function([var_2557,var_2558,], output)
mutated_mod['func_2559'] = func_2559
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2738 = relay.const([[[-1],[3],[9],[-2],[1],[-9],[-1],[-1],[5]],[[-4],[4],[7],[-5],[1],[10],[-5],[-6],[-6]],[[4],[7],[-9],[8],[-1],[6],[5],[-2],[4]],[[-7],[6],[-8],[7],[-1],[2],[7],[7],[-1]],[[-10],[-8],[-10],[-8],[-4],[3],[8],[6],[-7]]], dtype = "uint8")#candidate|2738|(5, 9, 1)|const|uint8
var_2739 = relay.var("var_2739", dtype = "uint8", shape = (5, 9, 14))#candidate|2739|(5, 9, 14)|var|uint8
bop_2740 = relay.left_shift(const_2738.astype('uint8'), var_2739.astype('uint8')) # shape=(5, 9, 14)
func_2430_call = mod.get_global_var('func_2430')
func_2435_call = mutated_mod.get_global_var('func_2435')
const_2744 = relay.const([[4.780887],[3.875250],[-1.745276],[-9.332197],[-1.595227],[7.014319],[-2.127630],[-1.723160],[-1.602288],[3.907198],[9.978404],[0.733531],[-8.506471],[-6.845325],[-2.628973],[8.803251],[9.248213],[-0.493706],[-7.790568],[-6.633884],[2.357069],[2.245596],[2.000576],[3.251957],[-2.310369],[5.057697],[2.751735],[-5.735591],[1.527999],[-0.664918],[1.860210],[-8.138531],[-4.124579],[-1.591668],[0.383675],[-6.798879],[-0.397392],[-5.339439],[8.289989],[-3.938699],[-1.512115],[1.739151],[-1.603987],[-7.740122],[9.801448],[1.363742],[-3.785364],[1.271083],[1.975192],[7.835153],[-4.834484],[2.331822],[-0.731876],[8.159638],[6.271891],[0.299622],[1.345834],[8.368937],[8.950741],[-8.426800],[7.950469],[0.804054],[2.176731],[-3.286295],[-4.924221]], dtype = "float32")#candidate|2744|(65, 1)|const|float32
const_2745 = relay.const([5.770373,0.531581,9.485659,-5.084722,-8.439392,-0.677054,-1.154664,7.402141,-1.639671,-5.026451,-3.645702,-0.668026,-1.344722,4.997788,-6.716649,-5.102778,-0.691636,-5.286898,4.943188,-4.245868,-8.102758,2.720183,-1.613607,9.050762,7.143194,-4.307463,9.354396,5.415306,9.432148,-5.187809,6.488748,-0.602802,-7.078385,-3.950154,2.831649,9.988309,5.958752,-5.806089,-1.384072,-0.256342,-4.268962,2.005506,1.288281,7.457949,0.284649,-6.982503,1.604648,-6.935726,7.030404,7.302236,-9.082892,5.079817,9.684062,8.444778,2.255074,-4.544156,3.510905,-6.014394,-9.757348,0.537403,6.285368,-6.290624,-1.873218,-0.037458,0.075203,4.675496,-9.954568,9.145488,-4.961179,8.667383,-8.142260,1.815806,-7.626416,1.641809,-1.294262,-7.344621,-0.086117,-2.960362,-9.486938,9.765517,-4.828397,2.215405,0.743547,-4.702634,9.920246,8.874090,5.060687,3.910816,-0.483662,-0.118996,-3.489852,-7.195628,-8.050081,0.123390,1.372562,-7.527861,8.823721,0.872355,3.166322,7.357557,3.635059,-5.103073,1.297301,-0.771112,-1.808687,-3.938438,-3.167498,-0.934300,1.998458,1.190836,-0.024148,-0.021473,0.542983,-3.685708,-3.847702,6.847673,-4.809325,-8.139161,-7.230704,-5.747327,-0.816189,1.808544,4.361973,8.576087,7.232380,-1.596263,-1.153868,-2.528019,-4.126129,-2.524115,-6.515346,-8.713865,-3.159005,-0.246502,-8.234100,5.623013,-8.412653,3.584969,-5.028480,-6.659714,0.050897,8.632521,-3.042131,0.092819,-2.993366,8.894210,3.312315,-2.100972,-1.897243,-8.512263,5.194175,8.225582,-2.702119,8.255191,7.280033,3.106044,-1.340328,0.010319,-1.132776,3.069878,-1.159740,3.288375,2.437707,2.428449,-1.352128,-2.169050,-5.857213,5.147337,-0.341192,6.180676,4.636548,-8.178595,-5.802424,-6.754573,-4.665758,6.947508,-1.255216,-4.766848,-4.524321,3.713773,-9.459981,-8.580952,-3.573769,8.911325,7.681978,-4.750412,9.552643,-5.529110,-5.138179,-7.466613,6.199207,-8.101911,-7.761409,9.072173,-3.016276,-5.736794,-3.110171,5.281654,-5.053953,3.196283,-6.908125,-1.534348,-0.779018,9.073024,5.427431,6.412261,7.610712,-8.787885,-3.334625,8.025151,5.175412,0.739396,-1.050435,-4.768823,-0.985145,-3.481770,4.806291,-0.818631,-2.448259,4.809900,-4.886145,-5.496545,-0.456461,1.395913,-3.831606,2.351122,-1.298530,3.801504,-6.128995,-9.622151,2.330805,7.645197,0.942307,-0.814439,4.087933,-1.996735,-2.234826,1.810559,0.279690,8.526636], dtype = "float32")#candidate|2745|(240,)|const|float32
const_2746 = relay.const([2,8,6,6,3,-6,8,6,3,6,9,6,10,-4,-4,1,-10,-1,-4,-10,-5,-3,6,4,-5,-9,2,10,3,-8,-7,-2,-8,3,2,-9,2,9,-3,-9,-5,-5,-4,-10,-3,4,9,-6,3,-1,5,-1,3,-4,4,7,2,8,-8,-2,1,10,-6,-7,8,-1,9,7,-1,-10,-4,6,-10,-1,7,1,1,-7,10,5,3,8,-7,6,7,7,-5,-5,-9,7,-2,-3,-4,10,-6,1,-1,3,-5,8,-7,3,-7,-10,7,-4,8,1,-10,5,8,-7,-4,-8,1,2,10,3,6,-8,1,-1,9,-10,-7,-7,10,5,-6,6,9,-7,-3,-10,2,-1,8,-3,-8,-8,-9,-1,8,-4,6,-2,-7,-6,7,-9,-2,3,6,8,8,-10,-10,-7,-6,-5,-10,9,-3,-8,-3,-9,-9,6,8,-1,2,5,-2,-2,-3,5,3,-9,-1,7,3,-10,8,-10,-1,-5,2,-5,-2,5,6,-9,3,5,6,-9,-8,3,-4,4,-2,8,-1,-10,-4,10,-4,8,6,5,-3,-3,5,9,-9,-7,-2,-6,-10,7,3,3,-4,-9,2,6,-10,8,-5,7,10,8,8,4,-2,9,6,-3,1,-5,-5,2,-10,-1,9,-2,9,-10,3,5,5,-1,4,-3,5,1,1,-7,4,-7,-5,2,6,-3,4,-6,-1,-1,-10,-3,-4,-7,8,5,4,-6,8,5,8,7,-7,4,-8,3,9,5,10,8,7,-1,5,10,-3,-9,4,-6,9,-8,-3,6,-9,-7,2,7,1,10,3,-9,-4,1,6,-10,-7,3,1,4,-8,-9,8,-2,5,-5,2,7,6,-6,5,-9,-6,4,10,7,1,-10,3,-8,-4,9,8,-1,-3,-7,5,-3,-8,8,5,6,5,-4,8,9,6,-7,3,9,7,4,-3,2,-4,-7,-10,-2,1,-3,10,2,-9,10,-6,-6,8,4,-9,-1,9,-9,-3,3,-8,6,8,4,8,9,-7,-9,-9,4,-9,10,-5,8,1,-5,-8,7,-10,5,-4,-3,1,6,3,5,-7,2,5,1,1,-5,8,7,10,5,6,7,-10,-7,-2,-8,9,-2,-10,-8,-10,2,-2,5,2,-10,-10,6,-9,-6,5,-2,4,9,-9,-6,10,7,8,-8,4,9,-2,-7,-9,-3,-4,9,9,3,4,8,-9,8,7,-8,-3,-6,-1,5,5,-4,-5,9,2,-3,-3,-2,4,-10,7,3,-4,-4,-3,6,-9,8,-5,9,1,4,10,8,8,-8,-7,-5,-1,7,2,-1,4,-6,-8,-6,4,5,-8,10,1,2,-9,9,8,4,-7,-10,4,-2,10,3,2,9,-9,7,-7,7,6,7,-2,-3,-4,2,10,2,3,-3,3,4,-1,3,-8,5,6,5,3,-9,-2,6,-4,-9,4,-2,3,9,7,-3,2,-8,-2,-8,-2,9,-5,-3,5,-8,5,4,-5,2,-4,-6,5,-7,-6,9,2,-9,4,10,5,8,7,8,6,-6,6,-1,6,5,4,10,-5,5,-3,1,-2,-8,3,-2,5,-1,10,2,-9,9,-3,1,10,-9,2,2,9,2,-5,10,4,3,-3,-1,-3,8,-7,-6,-9,-1,5,5,-3,-5,-3,10,-4,1,-9,-2,1,8,10,-7,9,10,-9,-7,1,-1,-4,-2,-6,-8,3,7,1,-4,-9,10,6,1,4,-10,-9,1,-3,-4,6,-6,-3,5,-8,4,1,-5,-3,-4,4,4,-4,7,-8,6,4,-4,-5,-10,1,10,8,-9,-10,10,7,-7,10,8,-6,3,8,-8,8,8,2,1,1,-10,3,7,5,2,-8,3,-7,-6,6,10,2,5,-5,-1,-6,-9,3,10,-10,3,-5,3,-7,-6,3,-8,5,-6,-2,9,9,9,-4,10,-3,3,3,9,5,2,-3,-2,6,1,6,-5,7,-9,-5,6,-3,-6,-5,4,-2,9,-9,-6,-10,10,-8,-4,-1,8,9,-5,-3,9,-8,9,1,5,-8,4,9,-7,-1,4,2,-9,7,5,9,-9,1,6,3,-4,4,2,-2,-10,8,6,-7,-4,2,-6,5,5,1,-10,5,-7,9,-2,-8,7,-10,7,9,2,1,10,3,-4,9,1,7,2,-9,1,9,-3,-1,6,4,-1,6,-4,9,3,1,3,-4,-6,-9,10,2,-9,-6,3,5,-6,5,9,-8,-1,8,9,-9,7,-1,-10,-10,8,-5,9,-2,2,5,-3,-6,5,8,-8,-10,-9,-1,6,9,1,-2,4,5,5,-7,-4,3,-1,-5,10,-5,6,7,9,-5,-9,-9,5,1,6,6,-3,9,-2,2,-10,2,-2,10,-6,-2,-2,-8,-6,6,-8,-2,-3,-6,5,-8,6,-3,-10,10,7,-9,-2,7,7,-10,6,-8,2,6,2,4,-4,6,9,-8,-7,-7,-5,9,-6,8,10,2,8,9,2,7,2,7,-9,-10,-3,9,9,-1,6,8,-5,-6,-10,4,10,-7,-7,6,1,-4,2,2,1,6,-3,3,-9,-3,-6,3,8,-8,6,3,-9,6,10,3,-3,9,7,4,-3,-5,3,6,-7,8,-10,5,-8,3,10,9,6,9,-2,-7,1,-3,-1], dtype = "int16")#candidate|2746|(1008,)|const|int16
call_2743 = relay.TupleGetItem(func_2430_call(relay.reshape(const_2744.astype('float32'), [1, 13, 5]), relay.reshape(const_2745.astype('float32'), [240,]), relay.reshape(const_2746.astype('int16'), [1008,]), ), 0)
call_2747 = relay.TupleGetItem(func_2435_call(relay.reshape(const_2744.astype('float32'), [1, 13, 5]), relay.reshape(const_2745.astype('float32'), [240,]), relay.reshape(const_2746.astype('int16'), [1008,]), ), 0)
uop_2748 = relay.asin(bop_2740.astype('float32')) # shape=(5, 9, 14)
uop_2754 = relay.cosh(uop_2748.astype('float64')) # shape=(5, 9, 14)
bop_2767 = relay.minimum(call_2743.astype('int64'), const_2744.astype('int64')) # shape=(65, 240)
bop_2770 = relay.minimum(call_2747.astype('int64'), const_2744.astype('int64')) # shape=(65, 240)
output = relay.Tuple([const_2745,const_2746,uop_2754,bop_2767,])
output2 = relay.Tuple([const_2745,const_2746,uop_2754,bop_2770,])
func_2771 = relay.Function([var_2739,], output)
mod['func_2771'] = func_2771
mod = relay.transform.InferType()(mod)
mutated_mod['func_2771'] = func_2771
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2772 = relay.var("var_2772", dtype = "uint8", shape = (5, 9, 14))#candidate|2772|(5, 9, 14)|var|uint8
func_2771_call = mutated_mod.get_global_var('func_2771')
call_2773 = func_2771_call(var_2772)
output = call_2773
func_2774 = relay.Function([var_2772], output)
mutated_mod['func_2774'] = func_2774
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2916 = relay.var("var_2916", dtype = "int16", shape = (16, 8, 9))#candidate|2916|(16, 8, 9)|var|int16
var_2917 = relay.var("var_2917", dtype = "int16", shape = (16, 8, 9))#candidate|2917|(16, 8, 9)|var|int16
bop_2918 = relay.add(var_2916.astype('int16'), relay.reshape(var_2917.astype('int16'), relay.shape_of(var_2916))) # shape=(16, 8, 9)
uop_2923 = relay.rsqrt(var_2916.astype('float32')) # shape=(16, 8, 9)
output = relay.Tuple([bop_2918,uop_2923,])
output2 = relay.Tuple([bop_2918,uop_2923,])
func_2936 = relay.Function([var_2916,var_2917,], output)
mod['func_2936'] = func_2936
mod = relay.transform.InferType()(mod)
var_2937 = relay.var("var_2937", dtype = "int16", shape = (16, 8, 9))#candidate|2937|(16, 8, 9)|var|int16
var_2938 = relay.var("var_2938", dtype = "int16", shape = (16, 8, 9))#candidate|2938|(16, 8, 9)|var|int16
output = func_2936(var_2937,var_2938,)
func_2939 = relay.Function([var_2937,var_2938,], output)
mutated_mod['func_2939'] = func_2939
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2949 = relay.const([[[3,3,-10,4,-3,5,-1,6,-5,10,2,-4],[-2,2,10,-5,1,-3,-7,8,-5,-3,-9,2],[8,3,10,10,10,3,-1,5,6,-5,-2,-7],[6,-7,9,-9,1,-4,1,-3,6,-3,4,-1],[3,-5,10,5,-2,-3,2,-7,-3,-4,-4,7],[4,-9,7,9,7,-8,6,5,6,8,-9,10],[5,-8,2,-1,7,-5,1,6,-9,-6,-10,4],[10,-5,-6,-3,-1,-4,-8,9,6,-2,9,-4],[6,5,1,-3,1,10,-3,10,5,8,8,3]],[[-1,-10,4,-1,4,-6,5,-5,-7,4,1,-5],[8,4,-1,10,1,-4,-4,5,1,2,-1,2],[6,-8,-10,5,-6,-5,-3,1,-5,-1,2,-8],[7,8,-8,6,6,3,8,-5,-7,1,5,6],[-9,-10,2,1,-7,7,-1,3,8,-7,-4,-1],[5,2,4,-2,6,-3,2,-6,-4,6,6,5],[5,-10,-6,-1,1,-1,-3,9,8,6,5,-1],[-6,6,-6,8,5,-10,7,2,-7,6,-7,-7],[-6,-7,6,-3,4,-6,10,-2,10,-6,3,6]],[[10,-10,-6,3,2,4,-7,2,-6,-10,2,3],[-5,-10,4,10,7,-2,7,-6,7,-10,-9,-6],[3,-1,-9,9,-3,2,-7,5,2,-9,-5,9],[7,6,4,-8,7,1,8,-10,3,10,4,-5],[3,5,-9,9,4,1,-5,-4,-10,10,9,9],[-4,3,6,-4,2,-6,4,8,-9,7,-9,8],[-9,9,10,9,9,-2,10,4,5,-6,5,10],[-4,-10,9,-4,8,-6,1,4,7,-5,-2,-10],[10,10,9,-1,-7,8,1,-6,-3,-1,8,-4]],[[-1,-4,1,2,10,-7,9,4,1,4,1,-2],[2,1,-7,5,-6,-1,-2,8,-4,-1,-5,1],[-8,-9,-4,-5,4,-8,-1,-1,1,5,6,5],[10,-2,-4,2,-9,9,10,2,10,-7,3,7],[1,-9,-7,6,4,-2,-3,8,-3,-7,-3,-9],[1,1,5,9,-1,-2,7,-6,7,9,2,4],[-6,-10,-2,-9,6,-8,-1,-6,7,1,-5,-7],[6,-2,3,4,7,-8,7,-3,-9,-6,7,-5],[2,-10,-4,1,3,6,9,5,8,-8,-1,7]],[[-9,-2,-7,-1,-2,5,-6,-6,10,-4,6,9],[-3,8,-6,-5,8,-1,6,-5,1,-6,6,3],[-6,9,6,-3,-2,2,5,-5,7,-1,6,-3],[4,1,1,-10,-2,-8,-4,7,1,-6,-9,3],[-4,8,8,6,-1,6,2,-1,-2,3,10,-5],[-9,9,-1,3,7,-7,5,9,-10,-9,8,5],[7,-7,7,-9,-3,6,1,3,-3,2,-4,5],[3,-6,-4,-2,-10,7,3,6,4,-1,-1,2],[-5,-3,5,-2,-2,1,9,6,-4,-7,-10,-2]],[[4,9,8,-1,-8,-1,-10,3,-9,-7,-8,6],[-7,9,-7,-2,-4,6,4,4,-2,7,8,-6],[-6,5,-6,-8,-5,10,7,3,-3,-5,8,1],[4,2,9,9,10,1,-5,1,-5,-10,-1,6],[-1,10,-10,-9,-10,6,-8,-5,9,8,-7,1],[-8,-8,3,-4,5,-6,-7,-1,6,4,-4,-6],[-9,4,1,-9,8,9,-1,8,7,5,6,10],[-5,8,5,4,-6,1,-6,8,10,-5,-10,-9],[4,-2,-9,-4,7,6,4,8,-8,9,1,-6]],[[-5,-2,-4,2,4,-10,-6,-7,-6,5,-3,-4],[-3,-5,-8,-5,-3,-8,7,-7,-5,4,-1,4],[-4,-1,-3,-7,6,3,6,9,-7,6,-8,-5],[-10,-6,-7,-2,1,-9,-8,5,10,-2,-5,6],[7,-6,-7,-9,7,9,8,-9,7,-5,4,-1],[-7,-3,-3,4,2,-6,-10,-5,-2,5,10,-1],[1,1,8,-4,-4,-7,5,-6,3,6,-7,-4],[-9,-1,2,5,-9,-1,-8,-2,-1,9,2,4],[7,3,-3,5,6,1,7,3,10,-3,-8,-3]]], dtype = "uint16")#candidate|2949|(7, 9, 12)|const|uint16
const_2950 = relay.const([[[-1,5,10,-4,-5,-4,2,-7,-5,6,10,1],[-7,-2,-4,-4,-7,-3,-2,-6,5,10,-5,8],[-3,2,-8,-7,-3,-7,-9,-3,4,1,-2,5],[-9,7,-1,-4,1,-6,-8,-5,1,-9,7,-7],[10,6,-9,1,5,-1,-5,1,-2,5,1,4],[-4,-4,-7,-1,-3,8,8,-9,9,1,5,-10],[-2,-9,-6,7,-6,-10,-4,-1,-8,8,-10,10],[6,-5,-7,10,-1,4,-1,-7,2,3,8,4],[3,-3,8,2,9,5,-4,5,5,3,10,5]],[[9,9,-2,-5,-6,7,4,-8,-1,-8,9,10],[-3,-9,7,5,4,5,-9,-2,-9,-1,-2,-5],[-3,8,6,-7,5,2,-2,7,-2,-3,-3,8],[-7,8,-9,4,5,5,4,-10,7,-10,-6,-4],[-9,1,-5,-5,-7,4,5,-7,2,2,3,-2],[2,9,8,8,4,9,-8,2,9,-3,-5,-7],[-2,10,8,8,-5,10,10,-3,9,4,8,3],[3,6,-6,-5,-9,-8,9,9,-10,-9,8,7],[-4,5,6,-3,-5,6,-9,2,6,-7,5,-10]],[[6,9,1,-1,6,9,3,-2,-1,10,9,-10],[-3,1,4,2,1,3,-7,9,8,5,1,8],[6,-6,9,2,-4,9,-4,-7,4,9,2,-5],[5,2,7,-10,7,8,1,-9,2,-2,-10,-3],[6,-6,-7,9,-2,10,2,-2,7,6,-1,2],[2,2,-2,8,7,6,-6,-8,7,-10,9,7],[-4,-3,-9,-2,10,5,-1,9,7,-1,-4,3],[-6,-2,5,-2,-4,5,1,-4,-3,4,2,-9],[-3,-3,-9,10,-9,4,-6,4,1,-5,9,7]],[[10,4,-7,2,5,-8,-4,-4,5,-9,-4,10],[4,-2,-5,-5,-10,-9,-3,-10,-8,7,-9,9],[8,-4,2,-8,1,9,8,-3,4,7,2,-8],[-6,-6,-5,-10,4,-5,-1,-5,2,-8,-10,9],[2,-3,-5,-9,-7,7,-2,5,4,2,-3,-6],[3,-5,7,-6,2,-5,2,8,-1,-1,4,6],[-6,-3,-7,3,-5,2,-2,2,10,1,-3,1],[-5,-4,-8,9,3,10,1,10,2,7,-2,10],[-6,6,-1,3,9,7,2,-1,7,4,7,-5]],[[6,4,1,-2,8,-8,4,7,3,-3,1,7],[-5,6,-5,-2,-3,10,2,-4,-1,9,6,-1],[1,1,7,-8,10,-6,-6,-5,7,-4,-9,-1],[-1,-8,-8,7,2,-1,-9,-3,4,-2,-10,-9],[6,7,-2,-8,9,-3,6,6,9,6,8,-4],[1,-3,7,-9,7,-10,4,-3,5,-10,5,8],[-5,1,8,-6,-3,1,10,5,-5,6,7,2],[5,-3,-2,-6,9,-10,3,5,6,-10,-5,-6],[1,10,1,-2,-4,9,-7,-4,-10,-1,-2,-1]],[[-2,5,-7,6,2,8,7,-2,-4,-8,-3,7],[-7,-8,-7,-5,1,4,10,-6,7,-8,3,-5],[10,-7,-6,-8,-5,9,-7,-8,-6,-8,6,3],[-9,8,-10,8,6,2,-10,-4,7,6,10,6],[-8,-6,-8,8,9,-9,8,-6,-3,-6,-1,7],[-4,3,8,-1,4,1,-6,9,-4,2,-8,-6],[-1,3,3,-9,4,10,-1,-8,-8,-5,9,-8],[6,7,-2,-2,-7,2,-6,8,3,10,1,-7],[9,3,-9,3,5,-7,4,10,6,-3,5,2]],[[1,1,2,-5,1,-8,-1,6,-10,-4,4,-6],[-6,-5,-2,8,-1,-7,5,5,-2,-8,6,10],[7,-10,6,1,7,-4,3,2,8,-8,-5,-1],[-7,-9,-3,9,-3,-8,7,2,5,2,-5,-5],[-8,-8,-7,-8,-7,7,8,-9,5,9,-9,5],[-6,-6,-5,-5,-4,-4,1,-5,-10,8,6,-8],[-7,4,-7,-1,-8,-5,-8,6,3,-2,5,-3],[-10,5,-2,-9,-10,-4,4,2,-4,6,7,-3],[3,5,3,-5,10,-10,-2,1,2,9,-5,-7]]], dtype = "uint16")#candidate|2950|(7, 9, 12)|const|uint16
bop_2951 = relay.multiply(const_2949.astype('uint16'), relay.reshape(const_2950.astype('uint16'), relay.shape_of(const_2949))) # shape=(7, 9, 12)
func_2556_call = mod.get_global_var('func_2556')
func_2559_call = mutated_mod.get_global_var('func_2559')
const_2956 = relay.const(-7, dtype = "uint64")#candidate|2956|()|const|uint64
var_2957 = relay.var("var_2957", dtype = "uint64", shape = (294, 1))#candidate|2957|(294, 1)|var|uint64
call_2955 = relay.TupleGetItem(func_2556_call(relay.reshape(const_2956.astype('uint64'), []), relay.reshape(var_2957.astype('uint64'), [3, 7, 14]), ), 0)
call_2958 = relay.TupleGetItem(func_2559_call(relay.reshape(const_2956.astype('uint64'), []), relay.reshape(var_2957.astype('uint64'), [3, 7, 14]), ), 0)
func_1648_call = mod.get_global_var('func_1648')
func_1652_call = mutated_mod.get_global_var('func_1652')
var_2962 = relay.var("var_2962", dtype = "uint8", shape = (520,))#candidate|2962|(520,)|var|uint8
call_2961 = relay.TupleGetItem(func_1648_call(relay.reshape(var_2962.astype('uint8'), [8, 5, 13]), relay.reshape(var_2962.astype('uint8'), [8, 5, 13]), ), 0)
call_2963 = relay.TupleGetItem(func_1652_call(relay.reshape(var_2962.astype('uint8'), [8, 5, 13]), relay.reshape(var_2962.astype('uint8'), [8, 5, 13]), ), 0)
func_2220_call = mod.get_global_var('func_2220')
func_2224_call = mutated_mod.get_global_var('func_2224')
const_2978 = relay.const([-7.930636,-8.034307,4.342782,7.663013,-2.511786,5.255365,-0.449811,2.629517,1.085376,-6.117343,-6.371518,-6.310015,2.794329,6.127413,8.913747,-3.944913,2.542829,8.529163,-8.735327,5.651940,-5.964023,9.788787,5.271992,5.247729,-4.300538,4.364090,-8.791483,-2.311870,-2.814731,-0.549816,-6.665681,0.891337,-6.337919,-2.505519,2.981124,0.926302,-7.410978,-8.257361,3.480040,-4.286518,2.664951,-8.787079,4.442895,3.254851,3.661220,-8.784872,5.584490,9.660840,-0.022154,-2.299838,2.706082,1.821295,-2.306028,-0.150430,-0.738209,7.818348,-7.787818,5.560389,-3.092216,2.443024,7.281060,7.311842,3.733112,-5.649299,-3.963883,-5.595281,-5.493877,-3.794513,2.188167,-1.409297,6.141008,-5.023128,8.113846,-4.889432,-1.266861,9.428560,5.751284,-9.497059,-9.288948,-2.552253,8.633011,-7.559983,-4.945529,-9.117121,5.129035,5.463658,3.701564,1.426652,-4.133196,-6.249599,9.458369,-8.154230,7.157099,-2.489104,6.174777,-0.566625,6.173995,-7.852707,7.949394,8.225418,4.853685,-1.510846,-0.702092,9.088149,9.767885,-5.738605,-3.455338,0.457948,4.887584,0.222866,-5.462644,-7.208351,-1.167847,4.247018,7.701820,3.786270,-3.994914,1.376260,4.453536,3.073695,4.393163,2.271504,-2.681259,3.081024,-7.146426,-4.068062,-1.413607,-5.648742,1.226098,6.962193,0.256609,6.411217,-4.461926,-2.348266,6.453577,-5.247774,6.641097,-3.982166,-2.909991,-4.949191,-4.604511,7.515522,0.675701,-3.483834,0.781098,2.559617,-9.364896,-2.161858,-3.227652,-6.563782,-7.466416,-1.028714,-6.824882,0.827962,-1.522301,-2.257660,-0.561435,4.811596,0.143927,-8.830011,3.839565,9.403467,-6.693095,-7.248792,2.627191,8.600580,9.717937,2.072889], dtype = "float32")#candidate|2978|(168,)|const|float32
var_2979 = relay.var("var_2979", dtype = "float64", shape = (192,))#candidate|2979|(192,)|var|float64
call_2977 = relay.TupleGetItem(func_2220_call(relay.reshape(const_2978.astype('float32'), [12, 14]), relay.reshape(var_2979.astype('float64'), [192,]), ), 0)
call_2980 = relay.TupleGetItem(func_2224_call(relay.reshape(const_2978.astype('float32'), [12, 14]), relay.reshape(var_2979.astype('float64'), [192,]), ), 0)
bop_2988 = relay.less(call_2961.astype('bool'), relay.reshape(var_2962.astype('bool'), relay.shape_of(call_2961))) # shape=(8, 5, 13)
bop_2991 = relay.less(call_2963.astype('bool'), relay.reshape(var_2962.astype('bool'), relay.shape_of(call_2963))) # shape=(8, 5, 13)
func_2771_call = mod.get_global_var('func_2771')
func_2774_call = mutated_mod.get_global_var('func_2774')
const_2995 = relay.const([[-10,9,-3],[-6,7,8],[-6,8,5],[5,-10,-8],[-8,9,10],[7,4,-8],[6,5,-9],[1,-7,9],[-6,7,-3],[-6,3,-2],[-7,-5,-3],[-9,6,4],[-8,-9,3],[8,-4,-5],[10,-6,7],[6,-7,4],[-3,-10,-10],[2,-1,-2],[3,-6,-4],[2,6,-9],[-7,6,5],[3,4,6],[-2,-1,-1],[9,-4,-1],[-10,4,-2],[-9,-7,3],[5,-1,1],[-5,6,-6],[-3,-3,4],[5,8,7],[10,8,-1],[1,-7,8],[-10,1,-1],[6,-5,-10],[4,2,3],[-1,5,2],[8,-3,8],[3,6,-5],[-4,-2,-10],[8,8,-6],[-1,-5,6],[-4,3,-1],[1,-8,-9],[-4,3,-4],[10,9,-5],[-8,3,3],[-5,4,-6],[-10,9,6],[10,-5,-7],[8,-2,-3],[1,3,9],[3,-5,-3],[-2,-10,10],[10,-5,2],[5,-9,-4],[-4,-6,-1],[5,10,-3],[-2,7,-7],[-7,4,4],[-6,-4,6],[7,-7,8],[-1,-3,4],[-5,2,-8],[6,8,9],[-6,10,8],[-1,7,10],[-5,-10,-4],[-4,-1,-1],[-5,-6,9],[-6,-10,8],[-2,5,-7],[7,-7,-8],[-1,10,-1],[3,-9,1],[-4,-6,3],[2,-5,7],[3,-1,10],[1,-6,-5],[3,-2,-7],[-4,-10,-3],[6,-8,-2],[2,6,-6],[-5,-10,-8],[-5,-3,7],[2,10,2],[4,-9,-1],[-7,4,6],[-2,7,-1],[6,-9,-5],[-8,-8,8],[10,-9,2],[9,5,-3],[-5,2,-6],[8,9,1],[-4,10,7],[-3,9,7],[-4,-1,10],[-9,-8,9],[-4,-5,6],[10,5,3],[9,1,10],[9,2,2],[-3,-1,4],[6,6,-4],[9,4,3],[6,-5,-7],[-4,-8,6],[10,-5,-2],[-10,-8,2],[-1,-3,5],[-6,5,9],[-6,-10,-9],[6,-6,2],[-1,-8,1],[8,-3,8],[-6,-10,-6],[7,-1,-6],[-3,-4,5],[-9,-10,-5],[1,4,-6],[-1,-9,-5],[9,6,-9],[2,7,3],[4,10,2],[-7,-9,-4],[-5,9,-5],[8,-6,-4],[7,9,4],[7,3,-3],[3,8,3],[8,7,4],[2,6,6],[-7,9,-6],[5,10,1],[4,3,5],[-4,-6,2],[2,1,4],[-1,-10,-4],[-1,2,-8],[5,6,-4],[6,5,8],[1,1,-10],[-9,5,-1],[-10,9,-6],[-4,1,-10],[10,-2,9],[10,9,-2],[-6,2,-4],[10,5,-5],[-8,-1,8],[1,-9,-5],[-2,8,6],[-2,3,-6],[5,9,5],[9,3,-2],[3,-1,6],[-1,-10,-2],[9,1,-6],[-6,-2,10],[-9,1,-3],[4,-8,-6],[-10,-5,-6],[-9,8,4],[6,6,-7],[5,9,9],[-1,-6,8],[3,1,-8],[-4,-1,-6],[8,-6,-2],[-3,10,-5],[4,10,4],[5,7,5],[4,-4,-4],[1,6,8],[-2,-5,3],[-1,-5,-8],[-10,6,9],[-5,-1,-10],[-3,8,-10],[-5,7,7],[9,8,1],[-1,-9,10],[-8,-10,8],[-5,1,-8],[10,-7,5],[-9,-2,-6],[-3,5,4],[9,-2,3],[1,1,-3],[-4,6,4],[-5,-6,9],[1,-1,-3],[2,8,-3],[6,-1,5],[-7,1,-2],[5,-7,4],[2,-6,-2],[7,3,9],[-8,-9,3],[-7,4,-4],[-2,-2,7],[-4,1,-10],[-1,8,4],[-7,4,3],[1,-8,7],[-9,-10,-9],[9,5,-3],[7,-4,7],[2,-10,1],[4,3,-7]], dtype = "uint8")#candidate|2995|(210, 3)|const|uint8
call_2994 = relay.TupleGetItem(func_2771_call(relay.reshape(const_2995.astype('uint8'), [5, 9, 14])), 2)
call_2996 = relay.TupleGetItem(func_2774_call(relay.reshape(const_2995.astype('uint8'), [5, 9, 14])), 2)
output = relay.Tuple([bop_2951,call_2955,const_2956,var_2957,call_2977,const_2978,var_2979,bop_2988,call_2994,const_2995,])
output2 = relay.Tuple([bop_2951,call_2958,const_2956,var_2957,call_2980,const_2978,var_2979,bop_2991,call_2996,const_2995,])
func_2999 = relay.Function([var_2957,var_2962,var_2979,], output)
mod['func_2999'] = func_2999
mod = relay.transform.InferType()(mod)
var_3000 = relay.var("var_3000", dtype = "uint64", shape = (294, 1))#candidate|3000|(294, 1)|var|uint64
var_3001 = relay.var("var_3001", dtype = "uint8", shape = (520,))#candidate|3001|(520,)|var|uint8
var_3002 = relay.var("var_3002", dtype = "float64", shape = (192,))#candidate|3002|(192,)|var|float64
output = func_2999(var_3000,var_3001,var_3002,)
func_3003 = relay.Function([var_3000,var_3001,var_3002,], output)
mutated_mod['func_3003'] = func_3003
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3008 = relay.var("var_3008", dtype = "uint64", shape = (1, 4, 6))#candidate|3008|(1, 4, 6)|var|uint64
var_3009 = relay.var("var_3009", dtype = "uint64", shape = (16, 4, 6))#candidate|3009|(16, 4, 6)|var|uint64
bop_3010 = relay.bitwise_xor(var_3008.astype('uint64'), var_3009.astype('uint64')) # shape=(16, 4, 6)
uop_3013 = relay.cosh(var_3009.astype('float32')) # shape=(16, 4, 6)
bop_3017 = relay.maximum(uop_3013.astype('int8'), var_3008.astype('int8')) # shape=(16, 4, 6)
func_2367_call = mod.get_global_var('func_2367')
func_2369_call = mutated_mod.get_global_var('func_2369')
const_3030 = relay.const([[3.886913,5.708038,-5.004968,-5.115241,-8.744457,-7.765612,1.886980,6.747693,-0.626839,4.070205,-9.928376,8.443632,9.748780,-4.497917,0.944577,3.126747,-3.242813,8.571996,8.783369,6.435357,8.086739,-7.804616,-2.881744,0.602860,-6.397535,-2.773454,4.470974,7.793871,4.393396,-5.038118,6.951170,2.996615,-2.146155,0.537231,-3.469653,-4.299138,-4.264696,5.704680,-3.006166,-1.640966,7.872611,-4.830100,-5.737124,2.451246,3.230429,6.503656,0.927091,2.386108,9.593060,2.541764,7.358630,3.778214,5.656712,6.372369,7.261798,-3.848574,-1.261678,9.483012,-5.768553,-9.774847,-6.866273,9.507540,4.497134,-7.922577,5.255143,-3.581041,9.063276,-5.315268,-9.024640,-6.416756,5.080154,-9.785465,1.428493,2.680031,-1.233452,-8.222022,8.547182,2.912427,-0.610188,7.929994,6.793639,-0.599550,-1.058683,2.893181,-1.465376,-5.175746,-4.367150,-3.093491,1.362293,-7.835969,7.613900,-6.282117,-3.257968,7.354041,4.129697,-2.178040,1.309643,6.512331,4.923179,-1.789518,9.692093,-8.212427,-9.405003,3.571923,-8.328193,5.582413,-0.726707,-8.879490,4.481814,2.872714,-3.620592,-3.890382,4.089980,1.288340,-7.046038,-0.118431,7.574495,-0.179311,7.287245,2.019406,2.461311,-7.886902,-4.323228,-3.702196,-1.100432,7.501300,6.625594,-4.284745,0.841199,7.070139,-0.460658,0.223511,-1.563666,3.016416,-0.243365,1.543647,2.701058,3.031534,-8.636738,-6.823739,-0.593649,-5.488706,9.917233,-5.706120,-1.133274,-8.596109,4.046116,-1.539212,0.544010,-8.535720,-8.755335,6.280203,9.957770,-1.746033,-1.029380,-4.788362,-9.183268,-5.590114,-8.137988,-5.363206,7.595602,7.210924,1.948213,-6.002168,2.123211,-1.195267,3.752866,0.666955,-8.445632,-1.831196,-0.721811,6.042296,7.157629,-9.478148,-7.749316,5.183190,-5.968401,3.085424,-9.832488,-0.938234,-6.634773,-7.292399,4.547233,-5.783395,5.349006,-0.997296,3.309512,-7.235526,-9.121347,-7.454390,1.409500,-1.055668,-9.806562,4.850743,4.502719,-1.115747,-5.551430,6.333093,4.737777,-0.611430,5.908213,-8.286230,-5.377857,0.885597,-1.543199,-4.589528,3.580287,0.277177,-8.028287,0.344561,-1.480005,4.698286,-8.121963,-3.875666,-8.564668,-5.379686,-6.859842,-7.169902,2.613037,6.979143,-6.778087,4.000590,-4.427066,2.681943,-0.788886,-2.271152,5.120094,9.321866,6.564282,2.814492,-8.968966,0.662460,-5.449341,-4.113026,9.272095,0.209183,9.077133,-8.356499,0.101500,-8.613051,-9.280901,6.415187,-2.248602,7.853738,-5.831365,0.192487,-3.329103,0.406190,-0.798155,-9.768543,5.949392,5.983227,-0.852322,-5.941236,-4.730280,6.724601,-7.373220,-6.182865,-1.223215,-1.373121,-1.764240,6.636355,-3.564875,5.120105,-3.975799,-3.204340,-5.429214,-7.292978,7.846932,-4.797388,1.250013,-1.869876,-5.131744,-9.944499,-0.335911,-4.102847,-7.786419,7.385017,-8.643754,-0.858471,-4.679930,5.349744,-0.968254,-4.770755,-9.048639,3.191242,-7.366698,7.070192,-1.740892,2.012499,-0.210400,7.800155,-3.736576,9.618024,-8.205948,3.633283,2.345011,8.501022,4.380005,2.160824,-7.231863,7.164635,4.248410,-1.634604,0.091122,-0.052724,6.605977,-0.995402,6.399031,-8.477578,5.530139,-9.418987,-2.885182,7.829018,0.704873,-8.896133,4.018817,8.661841,-0.758526,9.781329,2.331011,-4.331548,0.328925,-4.114068,-7.396331,-3.084141,9.135733,-9.758806,-1.029438,9.992876,7.757048,-5.774029,6.529082,2.694717,8.521792,5.256745,-7.357453,3.388487,2.747635,-1.385195,-4.092017,8.001716,-9.235800,-4.116928,0.223070,-8.080860,1.351418,-0.265571,-5.882573,-1.244856,-2.606174,8.046055,1.058910,-3.647555,-7.002399,3.505032,-1.346889,-3.912888,-0.080853,4.242282,-5.025497,-9.654059,-6.926251,1.526175,-0.190155,-3.051234,3.685756,-5.698776,-7.589633,5.036937,0.907639,-5.719546,-1.156393,-6.036457,0.633834,-6.447770,-0.034346,1.531889,5.083768,6.541352,-9.149503,-6.868000,5.457417,9.324281,-2.370068,9.267968,4.033087,0.112842,-0.923379,-5.923472,2.492715,-3.802249,-5.395995,0.277854,-9.968673,7.189155,-5.148770,-0.615340,-6.918662,-6.976725,4.110618,6.485126,0.099890,-8.500246,-3.598844,4.640962,8.455878,4.972565,7.457883,-6.981025,-5.184002,-3.081198,6.570520,-3.078477,-7.844905,-3.570446,-9.963115,-2.413381,-5.557389,-1.624509,-4.164792,9.205437,3.164282,6.682418,3.631750,-4.305329,6.063406,-5.390569,0.433298,9.119158,2.965593,1.754222,9.296983,1.190311,-0.197318,-1.025418,1.918547,6.059800,7.657006,4.464357,-7.253713,-6.661255,7.241688,-1.578300,0.217611,-4.680317,-5.310611,2.929752,-3.066420,0.763114,-6.871820,4.613272,4.756226,-5.939042,4.821807,6.832027,8.791147,1.215699,2.589368,1.800094,2.109052,4.470305,-2.094126,4.674224,-3.761668,9.780931,4.400798,-6.711699,9.355942,0.724378,8.803157,-6.772390,-6.913253,6.570450,-1.964840,-0.019045,-9.768928,3.435150,-3.567923,4.991650,5.066301,3.340251,8.577865,-7.766603,-2.605089,2.138506,-5.065382,-1.362172,-0.146282,-1.100846,3.184564,-0.966837,1.998488,-1.267400,0.974338,-5.497837,-3.672962,1.069397,8.911623,1.498266,5.966536,3.135736,-0.739977,-4.296907,4.971246,9.299678,4.884268,3.637371,4.558023,0.302340,3.707987,-8.572176,3.106640,-7.988630,5.041322,2.797157,-2.987418,-8.971719,-9.078523,5.293452,-4.507280,-3.929479,0.417284,-2.923238,3.650681,4.014149,1.438749,7.983338,9.211739,8.887703,4.432420,2.966659,-0.954397,-0.201532,-4.038902,-6.307016,4.041975,-4.215494,-5.267926,0.659037,-9.165369,3.634821,-9.492631,0.422273,-2.167644,-1.490774,2.872432,0.314007,-6.530752,-4.585770,-2.164794,9.158976,-9.575598,-8.961255,-3.073849,-8.350834,-0.303523,-0.657652,-5.024184,-0.668642,-1.443938,-4.806497,-1.670279,4.193538,-2.412573,6.860106,9.629538,-5.905368,-8.185595,-8.717958,-9.444296,-6.658885,-5.691377,-2.722093,-6.171288,4.746651,4.913582,-0.042142,-6.729570,-5.994834,9.441870,5.392337,-4.570351,-1.535173,-8.907188,2.579326,-3.508636,6.975594,-7.216244,5.358009,-6.491543,-7.760004,3.160176,3.394082,-4.075095,-0.623573,4.741130,-5.737937,1.473318,-0.567225,-6.876118,-2.192983,7.512893,2.871230,1.465575,-3.781276,-2.177205,-5.827779,0.690674,7.048617,4.753709,-7.237531,4.754077,2.143819,1.247574,-7.006649,7.127595,-2.667864,-0.236092,7.470621,7.574823,4.772422,-9.616969,4.902699,3.344651,5.933836,-1.827535,9.914059,3.154393,-3.318122,-0.247034,-8.892370,1.481073,0.929739,-8.754229,-5.424996,-0.571810,1.017688,7.187333,7.858588,2.497827,1.924551,-5.804236,5.482163,4.526839,-0.069917,-4.344178,-6.695927,-1.869006,8.714363,-1.638686,-2.945630,7.490525,2.875830,-1.640991,2.002881,8.659709,0.978032,8.379108,5.012082,-3.312548,1.295690,-8.721165,-5.731199,3.058469,-0.808316,8.341342,-8.301618,-9.796668,6.865411,-8.052482,3.287954,-2.724466,1.318308,8.203734,-6.412070,8.277735,2.118078,0.921602,-8.032769,4.477589,-3.614624,8.282638,-3.203968,-2.239509,-7.521417,-2.757674,2.577993,-9.712306,2.348171,6.342916,9.966992,8.079677,4.055568,-3.202574,3.292155,-8.812266,0.680649,-9.530802,0.527910,0.017035,-3.736226,2.299958,-1.849162,-2.377330,-5.271854,-8.191342,-2.239907,-3.736794,-6.766048,0.989521,-1.963639,-2.948218,1.774796,2.292118,3.207549,-2.207287,1.405720,0.814677,3.905981,6.353800,-2.241799,6.396647,5.902090,-6.018774,9.144369,3.019118,0.888096,8.914094,-8.234806,4.831301,1.636149,5.221255,-9.454897,0.065203,4.944298,2.838679,-2.041098,-2.893069,-0.535793,9.177218,4.315215,3.842791,-7.531162,4.000796,-5.394687,5.898353,7.961175,-5.303590,1.213195,6.159541,-0.050147,-1.966661,-2.182555,-0.466502,1.672872,-1.974682,-7.315025,3.595728,-1.720299,8.514473,-7.112176,-2.576463,-6.809077,4.935144,-0.502490,-3.465086,5.388448,7.485756,9.457231,-8.425365,-5.291141,8.456502,-4.438018,6.093609,-0.053809,4.906093,2.697441,-0.068043,-7.351734,-6.362765,-3.368299,5.862953,1.297240,0.468858,-8.499570,-4.786256,-7.732732,4.820996,-1.168409,6.202785,-7.548257,6.360559,5.226972,5.443349,3.258338,-4.452952,-9.334242,0.703831,3.354784,-0.204899,-1.512701,-1.678294,6.516003,-9.828335,-4.404490,-3.770348,-6.684408,3.411384,4.859981,-6.334690,-0.185920,-6.919516,-8.526921,-9.974819,0.187040,-4.245865,0.243907,-0.301410,-7.340475,3.884426,1.942805,1.144738,1.908858,1.439850,5.310982,-1.658713,-5.939593,-0.484423,-5.489285,-8.627526,-6.277368,-0.711436,2.115837,-1.942876,4.252003,2.430706,5.260801,-6.542419,1.017252,1.398299,2.650193,-8.381732,-6.262748,5.403130,1.047683,-4.778541,-2.301262,-4.462003,-6.839059,2.621237,-4.810589,-9.714063,-1.549905,-4.319738,-5.236074,-0.070871,0.558016,1.680707,-4.894643,6.117198,7.766975,2.094174,-5.740622,3.557307,-3.057050,-6.208071,6.207133,-7.314437,0.713021,4.978371,-6.872415,-4.326982,-7.569079,9.186086,-1.777562,9.035229,9.570579,1.595496,-4.208044,-8.979720,6.833691,4.449041,6.776047,-0.023635,-3.099558,-2.929919,-0.056709,6.364466,-2.160031,1.939597,8.985618,-0.723380,7.123939,-8.417669,1.940041,-0.587434,6.323538,8.931083,4.478687,5.484221,-4.256378,-4.162921,-1.469451,2.583707,-3.674002,4.106037,3.415837,-4.198642,8.334855,-0.384133,5.108908,-0.436472,-6.748526,6.859228,8.445416,-8.845221,-0.712774,-2.186516,-2.558674,-6.376969,-0.858107,-4.029698,6.369708,-6.927633,1.595114,3.764402,9.813769,1.913437,-5.310665,1.737512,5.383318,3.536494,-5.387704,4.165901,8.395918,-8.028095,9.048640,-8.788649,7.473259,-5.554390,1.208980,-4.230278,2.224951,1.926246,-2.205679,1.804469,-8.787138,-6.762525,7.078301,2.756644,9.661589,-8.652483,-7.864436,5.256423,-8.690231,-4.418321,-4.680864,-7.896270,-6.006739,2.020470,1.561541,-1.865920,5.745068,-9.475881,-6.353811,5.597752,3.097672,3.520774,-8.789461,-0.032355,-4.736439,4.129251,0.490908,-9.490177,5.853184,-0.384605,-1.851409,-6.447534,1.384018,-1.048349,-4.010037,6.743080,-0.035533,8.598604,-3.937476,2.795637,-0.308591,2.109378,-1.379897,6.365294,3.156539,-9.231661,-0.050673,3.129635,-4.433741,-3.697255,2.502952,-5.710711,-2.609500,4.774064,3.057064,4.065875,2.557802,3.818760,-5.519389,1.814489,1.068523,5.851163,-6.120622,6.081183,5.694527,5.531611,-7.638387,-0.796509,7.289207,1.352338,-9.880537,-5.193230,2.799987,0.556265,-0.712208,9.612881,8.291792,0.245360,6.036324,-5.104334,-3.024650,7.642695,5.176957,2.544104,5.893208,-3.328619,2.638370,6.989923,-4.158999,-1.983840,0.666142,-6.131478,0.182643,-1.142522,5.214182,4.900960,-3.051085,-6.859011,-6.234356,-5.386684,-4.838136,9.771600,9.737273,-5.314037,3.823206,-7.870847,-6.805908,2.103046,8.218241,-0.997016,-3.288202,-9.071999,-4.547001,7.983536,1.396157,2.851686,-8.310758,1.183625,9.673633,6.031429,6.111023,-5.652939,0.536170,5.986394,4.195068,5.966718,8.170466,4.066956,-9.028695,-6.938551,-5.960461,1.585140,-3.317248,1.010679,-4.296922,-9.121623,-0.694445,9.335963,6.671591,-9.750619,-0.957309,-1.018903,-0.114792,1.747135,-3.692191,-5.413478,1.391298,8.280642,-1.454620,-9.686611,-3.301607,-0.560904,8.089847,-1.067197,-6.013611,8.609276,-7.364286,-2.605071,8.186324,2.588954,4.266857,5.918215,9.627749,-6.739747,2.485268,-6.319188,-3.063974,-5.035629,-6.592433,-7.096582,-0.310102,2.344435,0.806277,7.699787,6.024198,3.651070,-5.102023,-9.555585,0.279828,8.645071,2.494374,-3.463420,6.544652,6.462199,6.759930,-6.610051,9.384381,-9.706322,-4.548993,-6.253176,-1.043496,-4.949181,-4.574556,-6.602864,-9.352733,-1.888245,5.428622,4.794755,7.007276,-6.370573,-6.722959,-3.115015,-5.056824,-1.385289,-0.039338,2.826937,-8.693141,3.738312,-4.579646,1.013973,-4.290681,-9.718691,-8.579754,-9.637573,-6.547663,0.419645,3.869416,-1.706990,-9.427490,-5.669699,0.961472,-0.427205,-2.713316,-2.080597,9.333047,3.846855,9.229486,-1.864255,7.051422,-7.664817,5.109987,-0.110128,5.071308,4.547495,2.606273,2.971357,4.893659,3.123247,8.977207,-1.330449,7.284508,-6.695417,8.968537,-5.871555,7.110376,-4.666928,-1.794964,-2.338746,4.761130,-2.463828,9.088630,-1.916052,9.847076,-7.860254,3.808898,8.055669,-1.993275,-2.979870,-6.353696,-6.244967,5.491777,9.256960,9.387837,5.243712,0.882977,-0.340659,8.760477,4.860502,-6.934914,-3.416652,-2.150973,-7.933734,9.571287,-3.332993,2.118758,-2.772433,7.666229,1.197714,0.093951,5.967983,-4.743309,5.965818,-5.051175,-4.998106,5.728546,0.643069,-0.963955,-9.289797,-4.583060,-3.757620,-3.781659,-0.225462,-5.278814,-2.420568,-5.816926,-9.623922,9.381171,1.075095,-2.128563,-5.806290,-3.751856,1.278976,1.925985,-7.397981,-3.792822,-7.700560,1.347525,-3.259163,-0.748033,2.048691,-3.163283,3.301813,-0.174858,-5.298316,-9.921533,-8.207325,-9.385936,3.997624,3.048888,0.899932,-2.972559,-9.920156,-4.284112,4.716963,-5.137243,1.875726,-6.764146,-2.334818,2.619380,2.646560,-6.431643,-8.941957,8.810464,-0.581000,-6.235086,-0.501649,8.818403,-1.961378,7.420141,-2.531763,9.106746,5.469282,-2.555962,-7.384732,-0.094027,7.567616,6.607417,1.834856,-8.371061,0.457055,4.093650,8.213865,1.655388,-0.851676,-1.417178,-5.256872,-6.207356,9.185606,4.850702,0.481136,-0.986973,-1.572831,-6.530119,-3.870976,-5.345909,5.135640,-1.123924,-4.697143,6.667578,-5.002720,-0.623643,4.301932,-3.901064,0.794672,-7.146156,6.339117,-1.312230,-5.618589,7.443054,5.969229,-5.598894,1.740329,0.848174,-1.473357,-3.766350,-4.719238,6.946474,-3.734923,8.897894,-6.588999,-5.134692,-6.862389,4.611182,8.176956,8.381877,-6.187913,-7.322806,-8.609734,-6.605260,-8.685054,-6.281403,8.697486,-9.312580,3.513709,3.803006,5.036371,-1.365728,-4.468754,-0.566907,-8.896626,-4.973184,6.357433,2.751838,4.353662,5.261748,-6.665068,-4.123621,1.902825,2.534006,-0.467381,-6.452844,-7.672039,6.638461,1.355887,6.852436,-3.405557,-3.181224,-8.710628,6.576210,5.232020,7.017083,-1.921533,8.275894,-8.956705,5.866396,-6.296014,-7.750349,-2.009749,0.634703,8.270080,6.267926,6.420307,2.008273,4.118439,3.347049,6.055161,9.939790,-2.941413,-7.315210,3.609122,-1.175318,8.159018,3.165922,-1.353987,4.250789,3.302543,7.214608,1.746800,-3.396982,-1.624774,2.744242,-2.303634,3.557099,-1.450211,6.441961,3.704859,3.518359,-0.750736,-9.728290,4.059469,-0.633167,6.775597,3.431966,-9.656865,1.088140,8.212307,2.846589,3.900362,0.227683,-4.140670,-7.669197,-7.974108,-9.991331,-8.932908,6.110838,2.977675,-3.320167,-3.687581,9.908196,1.153039,8.989773,6.574302,-4.232911,1.977610,-8.015677,-8.504508,-8.981599,-8.597823,9.388414,2.086459,8.350716,-5.291320,7.478467,9.955122,3.200263,-1.408760,-9.186592,1.391312,-2.073047,-6.376685,-8.916261,8.172194,0.979286,-8.011211,-7.662444,7.334282,-5.865817,9.115709,-8.003989,-1.538601,4.383339,-3.132029,-8.226172,-1.994077,6.927973,-5.034613,3.070929,-2.619122,2.846701,2.163704,-0.519217,0.304876,-6.905258,0.754671,-6.715878,4.916506,-1.954036,3.998644]], dtype = "float32")#candidate|3030|(1, 1485)|const|float32
call_3029 = relay.TupleGetItem(func_2367_call(relay.reshape(const_3030.astype('float32'), [1485,])), 1)
call_3031 = relay.TupleGetItem(func_2369_call(relay.reshape(const_3030.astype('float32'), [1485,])), 1)
uop_3037 = relay.sigmoid(bop_3017.astype('float32')) # shape=(16, 4, 6)
uop_3041 = relay.rsqrt(uop_3013.astype('float32')) # shape=(16, 4, 6)
bop_3046 = relay.bitwise_and(bop_3010.astype('int16'), relay.reshape(uop_3013.astype('int16'), relay.shape_of(bop_3010))) # shape=(16, 4, 6)
uop_3049 = relay.acosh(uop_3037.astype('float32')) # shape=(16, 4, 6)
func_2936_call = mod.get_global_var('func_2936')
func_2939_call = mutated_mod.get_global_var('func_2939')
var_3054 = relay.var("var_3054", dtype = "int16", shape = (1152,))#candidate|3054|(1152,)|var|int16
call_3053 = relay.TupleGetItem(func_2936_call(relay.reshape(var_3054.astype('int16'), [16, 8, 9]), relay.reshape(var_3054.astype('int16'), [16, 8, 9]), ), 0)
call_3055 = relay.TupleGetItem(func_2939_call(relay.reshape(var_3054.astype('int16'), [16, 8, 9]), relay.reshape(var_3054.astype('int16'), [16, 8, 9]), ), 0)
func_2936_call = mod.get_global_var('func_2936')
func_2939_call = mutated_mod.get_global_var('func_2939')
call_3057 = relay.TupleGetItem(func_2936_call(relay.reshape(var_3054.astype('int16'), [16, 8, 9]), relay.reshape(var_3054.astype('int16'), [16, 8, 9]), ), 1)
call_3058 = relay.TupleGetItem(func_2939_call(relay.reshape(var_3054.astype('int16'), [16, 8, 9]), relay.reshape(var_3054.astype('int16'), [16, 8, 9]), ), 1)
func_1648_call = mod.get_global_var('func_1648')
func_1652_call = mutated_mod.get_global_var('func_1652')
var_3072 = relay.var("var_3072", dtype = "uint8", shape = (520,))#candidate|3072|(520,)|var|uint8
call_3071 = relay.TupleGetItem(func_1648_call(relay.reshape(var_3072.astype('uint8'), [8, 5, 13]), relay.reshape(var_3072.astype('uint8'), [8, 5, 13]), ), 0)
call_3073 = relay.TupleGetItem(func_1652_call(relay.reshape(var_3072.astype('uint8'), [8, 5, 13]), relay.reshape(var_3072.astype('uint8'), [8, 5, 13]), ), 0)
uop_3105 = relay.tan(uop_3041.astype('float64')) # shape=(16, 4, 6)
output = relay.Tuple([call_3029,const_3030,bop_3046,uop_3049,call_3053,var_3054,call_3057,call_3071,var_3072,uop_3105,])
output2 = relay.Tuple([call_3031,const_3030,bop_3046,uop_3049,call_3055,var_3054,call_3058,call_3073,var_3072,uop_3105,])
func_3110 = relay.Function([var_3008,var_3009,var_3054,var_3072,], output)
mod['func_3110'] = func_3110
mod = relay.transform.InferType()(mod)
var_3111 = relay.var("var_3111", dtype = "uint64", shape = (1, 4, 6))#candidate|3111|(1, 4, 6)|var|uint64
var_3112 = relay.var("var_3112", dtype = "uint64", shape = (16, 4, 6))#candidate|3112|(16, 4, 6)|var|uint64
var_3113 = relay.var("var_3113", dtype = "int16", shape = (1152,))#candidate|3113|(1152,)|var|int16
var_3114 = relay.var("var_3114", dtype = "uint8", shape = (520,))#candidate|3114|(520,)|var|uint8
output = func_3110(var_3111,var_3112,var_3113,var_3114,)
func_3115 = relay.Function([var_3111,var_3112,var_3113,var_3114,], output)
mutated_mod['func_3115'] = func_3115
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3134 = relay.const([[[1.547424,3.666232,2.071695,-4.273732,-3.112265],[-1.101928,0.547240,-9.983334,7.145403,9.482917],[-3.698704,8.772177,2.292340,-0.396203,-0.688187],[8.807966,2.838736,-8.739418,1.237314,3.840439],[8.569879,-8.173770,3.660621,7.630007,7.844303],[-4.258115,3.240559,7.309285,6.483317,5.339613],[7.061101,-9.626065,1.376469,8.968298,5.587146],[-9.555941,2.472752,-3.032626,-0.496028,6.148553]],[[-0.790333,7.958165,6.880896,-0.404922,-6.501254],[-2.046392,-4.845805,-8.551402,-6.410213,-9.065457],[-8.764505,-6.591629,7.063222,8.892434,9.107432],[9.111943,-0.805075,1.917295,7.220271,-9.522591],[9.739626,0.422018,1.071749,4.891349,-0.970092],[-8.497537,1.398358,-5.008668,1.774124,-7.019162],[-5.185564,-1.902791,-3.870292,-3.897767,-3.580087],[8.454104,4.049948,4.435881,9.083486,-9.666866]],[[5.990443,-7.931864,-4.627988,7.607331,-8.531915],[-0.773682,-2.515101,6.420893,-7.584958,-2.716481],[0.461299,-5.324435,0.305044,3.351288,-3.603348],[-0.830873,-5.421245,-5.972440,5.629461,-2.588468],[0.224946,-1.493394,-3.205523,-2.981196,6.087484],[5.271026,1.881261,4.236530,9.022495,6.331727],[1.964191,7.805119,-3.975783,-9.879381,-0.725956],[-6.977740,4.284733,1.383082,-9.700426,-3.280998]],[[-3.552860,-1.177912,8.603599,-3.706045,3.319454],[-7.647982,5.048393,-6.256507,-7.507893,0.054796],[-9.180156,-7.480912,-1.282214,6.974739,-7.393883],[-9.304540,6.746563,-8.144320,5.028167,6.196954],[-2.260341,8.155324,-8.944046,5.152030,-3.506492],[1.373073,-1.613305,-6.799149,3.612169,-2.898906],[2.296218,-5.529466,9.817443,2.786119,-3.399746],[7.649796,-4.518275,-6.865915,0.751241,0.239619]],[[7.412845,-1.925993,3.322213,-9.094764,-2.972445],[-9.133783,-0.870972,-9.795335,1.422771,-8.105429],[-7.614857,-7.791330,-7.928650,3.402730,-7.338820],[5.920873,0.320993,-6.086375,-2.187403,6.754296],[8.735773,-1.951639,7.816167,4.512117,-3.752046],[-2.413546,-8.243572,8.789577,1.613807,-8.342368],[-7.913656,5.007184,8.587111,-8.384228,4.510370],[-7.280199,8.167212,-7.584161,7.619737,2.335243]]], dtype = "float64")#candidate|3134|(5, 8, 5)|const|float64
uop_3135 = relay.log(const_3134.astype('float64')) # shape=(5, 8, 5)
uop_3146 = relay.rsqrt(uop_3135.astype('float64')) # shape=(5, 8, 5)
uop_3155 = relay.asin(uop_3146.astype('float64')) # shape=(5, 8, 5)
func_1648_call = mod.get_global_var('func_1648')
func_1652_call = mutated_mod.get_global_var('func_1652')
var_3166 = relay.var("var_3166", dtype = "uint8", shape = (520,))#candidate|3166|(520,)|var|uint8
call_3165 = relay.TupleGetItem(func_1648_call(relay.reshape(var_3166.astype('uint8'), [8, 5, 13]), relay.reshape(var_3166.astype('uint8'), [8, 5, 13]), ), 0)
call_3167 = relay.TupleGetItem(func_1652_call(relay.reshape(var_3166.astype('uint8'), [8, 5, 13]), relay.reshape(var_3166.astype('uint8'), [8, 5, 13]), ), 0)
func_921_call = mod.get_global_var('func_921')
func_925_call = mutated_mod.get_global_var('func_925')
var_3176 = relay.var("var_3176", dtype = "int64", shape = (1080,))#candidate|3176|(1080,)|var|int64
call_3175 = func_921_call(relay.reshape(var_3176.astype('int64'), [8, 9, 15]), relay.reshape(var_3176.astype('int64'), [8, 9, 15]), )
call_3177 = func_921_call(relay.reshape(var_3176.astype('int64'), [8, 9, 15]), relay.reshape(var_3176.astype('int64'), [8, 9, 15]), )
output = relay.Tuple([uop_3155,call_3165,var_3166,call_3175,var_3176,])
output2 = relay.Tuple([uop_3155,call_3167,var_3166,call_3177,var_3176,])
func_3178 = relay.Function([var_3166,var_3176,], output)
mod['func_3178'] = func_3178
mod = relay.transform.InferType()(mod)
mutated_mod['func_3178'] = func_3178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3178_call = mutated_mod.get_global_var('func_3178')
var_3180 = relay.var("var_3180", dtype = "uint8", shape = (520,))#candidate|3180|(520,)|var|uint8
var_3181 = relay.var("var_3181", dtype = "int64", shape = (1080,))#candidate|3181|(1080,)|var|int64
call_3179 = func_3178_call(var_3180,var_3181,)
output = call_3179
func_3182 = relay.Function([var_3180,var_3181,], output)
mutated_mod['func_3182'] = func_3182
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3242 = relay.const(4.546868, dtype = "float64")#candidate|3242|()|const|float64
var_3243 = relay.var("var_3243", dtype = "float64", shape = (7, 2, 6))#candidate|3243|(7, 2, 6)|var|float64
bop_3244 = relay.power(const_3242.astype('float64'), var_3243.astype('float64')) # shape=(7, 2, 6)
func_2556_call = mod.get_global_var('func_2556')
func_2559_call = mutated_mod.get_global_var('func_2559')
const_3281 = relay.const([-9,-2,-1,9,-3,3,-2,-3,3,-2,-6,6,-7,-1,3,8,-2,-7,9,4,-8,-7,-5,-5,-6,7,-2,-7,9,6,7,-6,-4,1,-2,-5,-3,-3,3,-7,5,-10,6,7,-7,-7,-9,-5,-7,6,3,-10,-4,-3,2,-5,-3,-3,-6,4,5,8,-4,5,-1,-3,-4,9,7,-4,-3,6,-6,6,-1,-5,-2,8,-8,-9,8,3,6,-10,5,2,3,-5,8,10,2,6,10,1,-1,-9,4,-10,6,-1,-4,-1,10,-5,-7,-10,2,-2,1,2,-4,10,-3,-8,2,1,2,-2,-10,-3,-6,6,8,-10,-3,-1,-3,7,-3,6,6,-9,9,-3,2,6,8,6,1,-4,-10,5,8,-1,9,-4,3,3,9,-1,-3,-7,-8,-8,-8,-7,-9,-2,-6,-8,10,-10,-9,7,1,9,4,7,-8,4,9,-4,4,7,-1,-5,-7,4,-9,4,-10,6,-8,5,-1,-1,10,1,5,4,-3,7,-3,7,-3,-2,5,-6,-2,-8,9,3,7,5,-4,-8,-7,8,-5,4,8,-10,5,-6,6,-9,-3,6,10,2,10,10,2,-9,-3,-6,8,-5,-1,-9,-5,1,5,-8,9,-9,-9,-6,7,7,-8,-2,-8,-9,-8,-5,1,10,5,2,-7,3,-8,-4,-4,-6,5,-9,6,1,8,-6,-2,-4,-4,1,7,-5,2,-1,-4,9,4,-4,5,4,-1,-2,-9,-10,-5,4,4,7,3,-2,-3,-8,-6,7,6,-5,-4,-2], dtype = "uint64")#candidate|3281|(294,)|const|uint64
call_3280 = relay.TupleGetItem(func_2556_call(relay.reshape(const_3242.astype('uint64'), []), relay.reshape(const_3281.astype('uint64'), [3, 7, 14]), ), 0)
call_3282 = relay.TupleGetItem(func_2559_call(relay.reshape(const_3242.astype('uint64'), []), relay.reshape(const_3281.astype('uint64'), [3, 7, 14]), ), 0)
func_921_call = mod.get_global_var('func_921')
func_925_call = mutated_mod.get_global_var('func_925')
var_3292 = relay.var("var_3292", dtype = "int64", shape = (1080,))#candidate|3292|(1080,)|var|int64
call_3291 = func_921_call(relay.reshape(var_3292.astype('int64'), [8, 9, 15]), relay.reshape(var_3292.astype('int64'), [8, 9, 15]), )
call_3293 = func_921_call(relay.reshape(var_3292.astype('int64'), [8, 9, 15]), relay.reshape(var_3292.astype('int64'), [8, 9, 15]), )
uop_3295 = relay.acosh(call_3291.astype('float64')) # shape=(8, 9, 15)
uop_3297 = relay.acosh(call_3293.astype('float64')) # shape=(8, 9, 15)
func_1767_call = mod.get_global_var('func_1767')
func_1770_call = mutated_mod.get_global_var('func_1770')
var_3301 = relay.var("var_3301", dtype = "float64", shape = (8, 24))#candidate|3301|(8, 24)|var|float64
call_3300 = func_1767_call(relay.reshape(var_3301.astype('float64'), [6, 2, 16]))
call_3302 = func_1767_call(relay.reshape(var_3301.astype('float64'), [6, 2, 16]))
var_3303 = relay.var("var_3303", dtype = "float64", shape = (8, 9, 15))#candidate|3303|(8, 9, 15)|var|float64
bop_3304 = relay.floor_divide(uop_3295.astype('float32'), relay.reshape(var_3303.astype('float32'), relay.shape_of(uop_3295))) # shape=(8, 9, 15)
bop_3307 = relay.floor_divide(uop_3297.astype('float32'), relay.reshape(var_3303.astype('float32'), relay.shape_of(uop_3297))) # shape=(8, 9, 15)
bop_3313 = relay.subtract(uop_3295.astype('float32'), relay.reshape(call_3291.astype('float32'), relay.shape_of(uop_3295))) # shape=(8, 9, 15)
bop_3316 = relay.subtract(uop_3297.astype('float32'), relay.reshape(call_3293.astype('float32'), relay.shape_of(uop_3297))) # shape=(8, 9, 15)
func_995_call = mod.get_global_var('func_995')
func_999_call = mutated_mod.get_global_var('func_999')
var_3326 = relay.var("var_3326", dtype = "uint16", shape = (960,))#candidate|3326|(960,)|var|uint16
call_3325 = relay.TupleGetItem(func_995_call(relay.reshape(var_3326.astype('uint16'), [15, 8, 8]), relay.reshape(bop_3313.astype('int64'), [90, 12]), ), 1)
call_3327 = relay.TupleGetItem(func_999_call(relay.reshape(var_3326.astype('uint16'), [15, 8, 8]), relay.reshape(bop_3313.astype('int64'), [90, 12]), ), 1)
uop_3332 = relay.atanh(bop_3304.astype('float32')) # shape=(8, 9, 15)
uop_3334 = relay.atanh(bop_3307.astype('float32')) # shape=(8, 9, 15)
output = relay.Tuple([bop_3244,call_3280,const_3281,var_3292,call_3300,var_3301,bop_3313,call_3325,var_3326,uop_3332,])
output2 = relay.Tuple([bop_3244,call_3282,const_3281,var_3292,call_3302,var_3301,bop_3316,call_3327,var_3326,uop_3334,])
func_3340 = relay.Function([var_3243,var_3292,var_3301,var_3303,var_3326,], output)
mod['func_3340'] = func_3340
mod = relay.transform.InferType()(mod)
mutated_mod['func_3340'] = func_3340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3340_call = mutated_mod.get_global_var('func_3340')
var_3342 = relay.var("var_3342", dtype = "float64", shape = (7, 2, 6))#candidate|3342|(7, 2, 6)|var|float64
var_3343 = relay.var("var_3343", dtype = "int64", shape = (1080,))#candidate|3343|(1080,)|var|int64
var_3344 = relay.var("var_3344", dtype = "float64", shape = (8, 24))#candidate|3344|(8, 24)|var|float64
var_3345 = relay.var("var_3345", dtype = "float64", shape = (8, 9, 15))#candidate|3345|(8, 9, 15)|var|float64
var_3346 = relay.var("var_3346", dtype = "uint16", shape = (960,))#candidate|3346|(960,)|var|uint16
call_3341 = func_3340_call(var_3342,var_3343,var_3344,var_3345,var_3346,)
output = call_3341
func_3347 = relay.Function([var_3342,var_3343,var_3344,var_3345,var_3346,], output)
mutated_mod['func_3347'] = func_3347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3459 = relay.var("var_3459", dtype = "float32", shape = (4, 13, 1))#candidate|3459|(4, 13, 1)|var|float32
uop_3460 = relay.sin(var_3459.astype('float32')) # shape=(4, 13, 1)
bop_3463 = relay.not_equal(var_3459.astype('bool'), relay.reshape(uop_3460.astype('bool'), relay.shape_of(var_3459))) # shape=(4, 13, 1)
output = relay.Tuple([bop_3463,])
output2 = relay.Tuple([bop_3463,])
func_3478 = relay.Function([var_3459,], output)
mod['func_3478'] = func_3478
mod = relay.transform.InferType()(mod)
mutated_mod['func_3478'] = func_3478
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3479 = relay.var("var_3479", dtype = "float32", shape = (4, 13, 1))#candidate|3479|(4, 13, 1)|var|float32
func_3478_call = mutated_mod.get_global_var('func_3478')
call_3480 = func_3478_call(var_3479)
output = call_3480
func_3481 = relay.Function([var_3479], output)
mutated_mod['func_3481'] = func_3481
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3539 = relay.var("var_3539", dtype = "int16", shape = (9, 11, 11))#candidate|3539|(9, 11, 11)|var|int16
var_3540 = relay.var("var_3540", dtype = "int16", shape = (9, 11, 11))#candidate|3540|(9, 11, 11)|var|int16
bop_3541 = relay.less_equal(var_3539.astype('bool'), relay.reshape(var_3540.astype('bool'), relay.shape_of(var_3539))) # shape=(9, 11, 11)
output = relay.Tuple([bop_3541,])
output2 = relay.Tuple([bop_3541,])
func_3547 = relay.Function([var_3539,var_3540,], output)
mod['func_3547'] = func_3547
mod = relay.transform.InferType()(mod)
var_3548 = relay.var("var_3548", dtype = "int16", shape = (9, 11, 11))#candidate|3548|(9, 11, 11)|var|int16
var_3549 = relay.var("var_3549", dtype = "int16", shape = (9, 11, 11))#candidate|3549|(9, 11, 11)|var|int16
output = func_3547(var_3548,var_3549,)
func_3550 = relay.Function([var_3548,var_3549,], output)
mutated_mod['func_3550'] = func_3550
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3552 = relay.const([[[-7,-8,-3,8,5,9,-7,-7,6,-8],[4,4,-1,9,-2,-3,-5,8,7,-3],[8,-6,-2,-3,-7,-9,-8,4,-3,7],[-2,-6,3,-5,2,3,-10,2,-4,-10],[7,3,-4,7,10,5,-6,8,-7,-2]],[[-1,-6,3,-4,-6,-9,6,8,-7,-7],[9,-10,5,6,3,10,10,6,7,-4],[4,5,3,8,-10,-8,9,6,8,-7],[-8,4,4,-5,9,3,1,3,-3,4],[10,-4,2,4,-10,2,9,-5,-7,3]],[[8,-3,-5,-2,9,-4,10,7,-8,5],[-3,5,4,-6,-2,8,6,10,-10,-10],[8,8,-3,-1,8,-6,-2,5,-3,-6],[-10,5,-8,7,-5,6,4,3,-1,-6],[-2,-1,5,10,-9,-1,5,-6,8,2]]], dtype = "int16")#candidate|3552|(3, 5, 10)|const|int16
var_3553 = relay.var("var_3553", dtype = "int16", shape = (3, 5, 10))#candidate|3553|(3, 5, 10)|var|int16
bop_3554 = relay.subtract(const_3552.astype('int16'), relay.reshape(var_3553.astype('int16'), relay.shape_of(const_3552))) # shape=(3, 5, 10)
func_1701_call = mod.get_global_var('func_1701')
func_1704_call = mutated_mod.get_global_var('func_1704')
const_3561 = relay.const([6.402133,4.294332,-5.995847,-4.593943,4.254362,-9.681577,8.379486,5.673193,-7.290108,-1.222077,2.130343,4.594353,9.711210,4.125660,-7.736120,-9.174007,1.108673,-1.010242,-1.366629,-3.029789,-3.315267,-2.861529,-3.506070,-3.278602,5.355004,6.487290,-6.349128,-2.346288,-3.465429,3.888149,-7.797245,-7.990841,6.086491,-4.883941,-5.619727,0.099649,9.897368,-6.865504,3.765734,-6.518352,6.547871,5.742718,-8.284604,2.529950,-5.408693,1.386692,-0.200070,-4.734694,2.044129,8.365982,6.857067,-9.533487,8.991194,-3.276125,6.689219,8.541232,-8.857146,-4.891045,2.385640,4.041590,-3.529063,-7.063823,4.677416,0.777792,6.401380,-5.335493,5.807875,-7.642762,7.780508,-9.233482,1.219484,-3.107989,-0.583061,3.976228,-3.474693,7.398933,7.059831,-3.515057,-6.156348,8.427954,-7.616263,-8.686462,-2.134296,-2.215849,2.879326,-3.134184,4.345192,1.465175,-0.574756,7.972415,4.905138,1.931741,-4.889875,9.585196,6.526650,8.849344,-0.666596,-0.337861,-5.064574,1.535027,6.543159,-3.735221,-7.895767,-4.242419,-2.278844,1.491038,3.983729,0.170344,-5.043766,-6.353692,9.872762,-0.556658,-8.232593,0.221760,4.528052,-2.523684,-0.709232,8.339448,-7.239482,5.417308,4.227224,7.168893,-4.062074,4.617911,5.487646,-2.841370,8.091751,5.734998,4.162619,-7.282273,8.216102,4.434321,1.111399,-6.435150,4.552286,0.692647,-9.251090,9.420419,0.947533,-0.603871,-7.871485,1.875215,7.246886,5.767803,1.126360,4.505723,5.424473,9.399298,-8.049929,-0.849200,9.066794,-1.135382,-7.470069,-0.446606,-5.928317,2.060262,-9.779438,-5.919918,8.923239,-2.703003,0.642011,5.744260,8.264907,-5.254728,-9.086271,1.667603,-7.062653,9.944929,9.980383,-5.355191,-5.838235,-3.297107,-7.514720,-6.542956,6.962629,9.626054,8.531560,7.905765,4.257959,-8.982413,-5.930389,6.163850,8.870226,-1.298177,8.049344,9.130625,-7.734080,-1.729021,-2.802227,-0.991175,6.924432,9.721479,-8.938463,5.221183,-7.690184,0.851718,9.286612,2.315767,4.208670,5.065817,-0.516113,3.875491,6.198275,7.346712,-1.350142,8.096449,1.292367,-5.900996,4.333666,1.612614,3.349276,-0.947460,-4.085344,-7.772840,8.388036,-6.684404,-5.203159,-5.849356,6.440059,2.826595,1.561283,4.164642,4.715504,-6.150300,-1.926904,-5.748286,-5.007590,-7.405567,-4.814121,6.470110,6.368711,1.336725,2.624650,8.417771,-7.656301,-9.017205,0.252502,-8.559058,-7.137652,0.581584], dtype = "float32")#candidate|3561|(240,)|const|float32
const_3562 = relay.const([-10,5,-9,2,9,5,-10,-7,-4,-10,-3,-6,-1,-5,10,6,-8,-3,2,-6,3,-10,-4,9,-8,-4,3,-1,8,7,-6,2,-2,1,-10,-6,6,-8,-3,-10,-6,-1,4,-3,-9,-2,3,-7,9,-10,2,-6,10,-1,-10,5,3,7,9,2,10,1,10,-10,-5,-9,-4,7,6,-10,-7,4,-2,-9,-1,-1,7,-6,-1,5,5,-4,9,-7,-9,3,2,8,-8,-7,2,-10,9,5,2,-7,-5,8,-10,1,9,-7,-3,7,4,10,3,4,-6,3,8,-5,-8,-9,7,10,-3,-1,2,8,3,1,-8,9,3,-3,1,-5,2,-1,-3,-5,8,5,-3,5,10,3,10,-5,-5,5,6,-8,6,-7,8,7,9,5,4,-9,5,-4,7,9,8,9,6,2,7,-10,1,-1,9,4,8,-10,7,-10,-3,-8,5,-7,-7,2,8,6,-1,-2,5,-4,9,-5,-7,-3,-6,-3,10,-3,-9,-8,-10,6,3,2,4,-2,1,1,4,2,7,-4,-7,4,3,3,-8,5,-9,-1,4,-5,-1,-4,-2,-7,-2,-6,8,-3,1,4,-6,-1,5,-5,-5,3,9,-1,2,10,6,2,-9,5,-2,-1,8,-1,-6,-2,-9,7,2,8,5,-9,7,5,8,-6,-8,9,9,-9,-8,-3,7,4,-7,5,-10,3,8,3,-9,-8,-4,-5,9,-5,8,-4,10,-4,8,-9,6,10,-9,1,10,6,-6,-6,-6,10,10,9,-9,7,4,10,5,5,-2,5,-6,5,-4,7,-1,4,-10,-3,5,10,3,1,-1,5,5,-3,-1,-2,-9,-4,5,-6,-10,6,7,7,6,-10,-6,-8,5,1,2,-10,4,5,-2,4,10,-7,4,8,2,8,-5,1,2,7,-9,6,10,1,-4,4,-5,-10,-5,-2,6,-8,-6,10,-3,1,3,5,1,-9,-3,9,-6,-8,9,1,-7,8,-8,-3,-7,-2,4,-6,-3,1,10,3,-1,8,-10,7,5,-3,6,-3,10,3,-5,8,6,4,-9,3,-10,2,-7,7,6,7,6,5,9,8,9,-2,3,-2,-4,2,5,2,-5,-5,1,-3,4,-10,7,7,-4,-4,4,1,2,-2,9,10,4,-5,9,-9,7,8,-9,-2,3,-4,-4,4,8,3,-1,1,10,8,3,4,9,4,8,-3,-3,-9,1,3,1,-9,10,-8,6,-10,3,9,-8,2,-10,-1,3,10,-5,-5,10,1,-4,10,2,10,-6,1,-3,-1,9,6,2,-8,-10,5,9,-7,2,-4,7,-4,-3,8,8,-9,-3,-1,-2,4,-3,1,5,-4,7,-3,-2,-7,10,10,-7,6,-3,-5,-5,-8,-9,10,-9,1,2,10,9,-8,-5,8,7,-1,1,7,6,4,-6,-9,9,-3,-2,-7,-2,-1,-5,-10,2,-5,1,9,-9,5,9,4,-2,9,10,8,-10,3,-9,-10,-6,6,-6,7,9,-5,-3,-6,-6,2,10,-1,8,-8,7,-8,2,10,-10,-7,6,7,3,-8,-8,-6,-8,-9,-1,3,-6,10,-6,7,-7,7,6,-7,-7,7,-3,4,-10,-10,-3,-8,6,6,-10,10,-5,3,10,10,2,3,-10,9,-3,10,3,-4,8,3,-2,5,9,-9,-5,4,-6,-5,7,6,-4,-5,-6,8,-8,-2,-5,8,-5,10,-7,7,5,-10,5,-4,2,-8,10,-4,8,-1,-5,6,7,9,-4,7,-8,2,1,-4,5,5,7,-4,-7,7,-5,1,-1,-3,-7,-4,7,8,-4,-5,4,4,7,-8,4,-6,10,-10,8,-4,6,-9,6,3,2,8,-5,-1,2,-9,-5,-7,4,4,1,-6,7,-9,5,-2,-7,-4,3,-7,5,3,-4,-4,8,-10,-7,-3,4,-9,4,-7,-2,-5,8,-1,-9,2,-7,-2,4,1,10,10,-5,-4,-2,10,-4,2,9,5,-10,-1,-3,9,7,-1,-3,5,-1,9,-2,9,5,9,5,-2,-1,9,8,-3,7,3,4,7,7,-1,6,6,-3,5,-9,2,-2,5,-8,-4,-2,-4,5,4,-9,10,6,9,10,-7,3,-8,10,-2,2,5,4,-10,3,8,8,-9,3,4,-2,-2,-10,-9,-6,1,8,1,5,1,-5,10,-9,10,5,-7,6,-3,2,7,4,7,3,-5,9,-4,7,2,1,1,-7,-6,-10,7,10,1,3,-7,7,-3,-10,-5,-1,2,-8,-9,-1,-5,-5,-4,-8,10,-4,8,-10,10,-7,4,1,-9,9,1,4,-3,-10,-3,-2,2,1,1,-8,-9,5,3,1,4,-4,2,-3,-9,1,-5,-7,3,6,9,-5,1,4,-8,7,-5,-9,9,3,8,1,9,10,-6,-3,2,-3,-8,6,2,-7,4,-5,1,2,1,3,-1,-9,-3,4,-8,8,-4,1,-10,2,-6,9,-4,-7,6,5,6,6,6,-5,-7,-10,9,-8,10,3,8,5,6,-8,-3,4,9,-9,2,-9,6,1,-3,-4,-8,10,2,-9,-7,-1,-2,-10,-4,5,-2,4,-4,-3,3,-1,-6,-8,-6,7,8,2,4,2,-10,6,1,-1,-7,3,4,3,-5,-8,-2,4,2,9,-9], dtype = "int16")#candidate|3562|(1008,)|const|int16
call_3560 = relay.TupleGetItem(func_1701_call(relay.reshape(const_3561.astype('float32'), [10, 3, 8]), relay.reshape(const_3562.astype('int16'), [84, 12]), ), 2)
call_3563 = relay.TupleGetItem(func_1704_call(relay.reshape(const_3561.astype('float32'), [10, 3, 8]), relay.reshape(const_3562.astype('int16'), [84, 12]), ), 2)
uop_3571 = relay.log2(var_3553.astype('float64')) # shape=(3, 5, 10)
output = relay.Tuple([bop_3554,call_3560,const_3561,const_3562,uop_3571,])
output2 = relay.Tuple([bop_3554,call_3563,const_3561,const_3562,uop_3571,])
func_3578 = relay.Function([var_3553,], output)
mod['func_3578'] = func_3578
mod = relay.transform.InferType()(mod)
mutated_mod['func_3578'] = func_3578
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3579 = relay.var("var_3579", dtype = "int16", shape = (3, 5, 10))#candidate|3579|(3, 5, 10)|var|int16
func_3578_call = mutated_mod.get_global_var('func_3578')
call_3580 = func_3578_call(var_3579)
output = call_3580
func_3581 = relay.Function([var_3579], output)
mutated_mod['func_3581'] = func_3581
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3658 = relay.var("var_3658", dtype = "uint8", shape = (4, 12, 2))#candidate|3658|(4, 12, 2)|var|uint8
const_3659 = relay.const([[[-9,3],[1,2],[4,1],[-1,-4],[-8,-10],[-6,-7],[-3,7],[-1,-1],[10,-8],[4,8],[5,10],[8,2]],[[-10,6],[-1,-1],[3,-2],[-1,-5],[-9,-1],[-2,-8],[10,-5],[-5,6],[-3,-1],[5,-9],[-4,-3],[5,7]],[[10,4],[-6,-2],[-4,7],[-6,-5],[3,-3],[2,7],[2,2],[-7,-1],[4,2],[10,8],[-9,-3],[6,-3]],[[-6,9],[8,-1],[-7,10],[-1,-2],[6,6],[-6,-10],[-9,-1],[1,-8],[-2,-2],[-5,1],[-7,6],[1,4]]], dtype = "uint8")#candidate|3659|(4, 12, 2)|const|uint8
bop_3660 = relay.bitwise_or(var_3658.astype('uint8'), relay.reshape(const_3659.astype('uint8'), relay.shape_of(var_3658))) # shape=(4, 12, 2)
uop_3668 = relay.cos(const_3659.astype('float32')) # shape=(4, 12, 2)
bop_3671 = relay.left_shift(uop_3668.astype('int8'), relay.reshape(var_3658.astype('int8'), relay.shape_of(uop_3668))) # shape=(4, 12, 2)
bop_3675 = relay.minimum(bop_3671.astype('float64'), relay.reshape(bop_3660.astype('float64'), relay.shape_of(bop_3671))) # shape=(4, 12, 2)
output = relay.Tuple([bop_3675,])
output2 = relay.Tuple([bop_3675,])
func_3680 = relay.Function([var_3658,], output)
mod['func_3680'] = func_3680
mod = relay.transform.InferType()(mod)
var_3681 = relay.var("var_3681", dtype = "uint8", shape = (4, 12, 2))#candidate|3681|(4, 12, 2)|var|uint8
output = func_3680(var_3681)
func_3682 = relay.Function([var_3681], output)
mutated_mod['func_3682'] = func_3682
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3871 = relay.var("var_3871", dtype = "int16", shape = ())#candidate|3871|()|var|int16
var_3872 = relay.var("var_3872", dtype = "int16", shape = (6, 8, 2))#candidate|3872|(6, 8, 2)|var|int16
bop_3873 = relay.greater_equal(var_3871.astype('bool'), var_3872.astype('bool')) # shape=(6, 8, 2)
output = relay.Tuple([bop_3873,])
output2 = relay.Tuple([bop_3873,])
func_3880 = relay.Function([var_3871,var_3872,], output)
mod['func_3880'] = func_3880
mod = relay.transform.InferType()(mod)
var_3881 = relay.var("var_3881", dtype = "int16", shape = ())#candidate|3881|()|var|int16
var_3882 = relay.var("var_3882", dtype = "int16", shape = (6, 8, 2))#candidate|3882|(6, 8, 2)|var|int16
output = func_3880(var_3881,var_3882,)
func_3883 = relay.Function([var_3881,var_3882,], output)
mutated_mod['func_3883'] = func_3883
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4317 = relay.var("var_4317", dtype = "float32", shape = (8, 5, 7))#candidate|4317|(8, 5, 7)|var|float32
uop_4318 = relay.sqrt(var_4317.astype('float32')) # shape=(8, 5, 7)
const_4323 = relay.const([[[7.374091,7.702859,9.515941,-5.412901,6.101558,8.875616,-2.443103],[6.841792,-7.803769,1.706946,-3.322561,1.664145,-3.034209,8.698433],[-1.538570,8.907541,-8.054619,-4.343999,-8.853182,-0.547060,-3.103551],[1.383317,-8.186053,-9.787414,-1.804373,-2.975444,-9.308496,2.029538],[-7.609502,-0.482048,5.327972,-4.121927,-6.995075,-9.762810,-6.306673]],[[-5.338542,-8.699016,5.212871,-2.935881,1.141535,3.818180,8.274850],[3.219392,-5.541680,1.645318,1.650712,-4.065916,6.577755,-5.197207],[-7.559542,-2.958889,-6.091838,-7.854434,1.048502,8.552459,0.141537],[-6.171592,-3.566760,-5.963601,-9.418909,7.725961,-5.783380,8.305418],[9.949016,3.330629,-5.188033,-1.711792,-1.379228,7.457030,-7.902355]],[[-4.793278,7.725581,-7.436258,8.778467,5.659078,7.844091,0.303132],[-2.308459,5.201373,-3.572872,2.370953,-3.923569,7.070992,-1.409486],[0.486325,3.677135,4.949994,-0.176359,1.860337,-2.956694,0.191910],[3.318959,7.024402,-9.415089,9.380538,-1.973726,4.779997,9.577593],[2.322410,0.995561,-6.778556,1.261678,-0.425096,1.064730,5.203019]],[[-9.533808,0.964433,7.649950,0.778491,7.081916,-9.700074,-3.726534],[6.120403,9.366160,4.933072,1.234436,2.804039,6.170573,-5.362381],[2.930778,-5.580709,1.491916,-8.645813,6.673615,-1.622834,-9.710955],[-7.276729,-3.672207,-8.241987,-3.023163,6.777025,7.200673,-9.832513],[-4.779126,-3.016810,-5.368953,0.561993,-4.184816,-8.849998,7.093411]],[[1.885777,-9.319563,-0.191843,9.713864,-6.719101,2.433847,8.729642],[-1.904739,4.468185,-5.361581,9.218207,2.173531,-5.532835,-7.045075],[6.111218,3.522393,3.246358,-3.990966,0.508788,1.626028,8.729083],[3.974685,3.523158,6.712296,-9.772256,-5.864493,-9.969042,-7.088088],[-0.275777,-8.803160,-9.771934,-5.955285,3.612859,-9.345625,-5.225236]],[[-1.957961,-6.137473,-8.159536,8.827373,-4.089247,6.546121,8.105995],[-8.477047,0.357834,-2.366076,-6.391074,8.609651,3.983322,1.822861],[9.153676,0.079970,-3.827955,6.044643,7.237712,-8.837844,-9.073100],[4.287754,6.662618,0.901766,-2.713372,-8.383975,6.898873,7.258005],[-3.942274,-4.882641,-8.199095,0.046168,7.702840,8.657100,-5.241117]],[[-2.462399,3.145970,-6.719642,-6.337234,0.739791,-5.785199,6.542824],[-7.093215,-4.164800,-9.347300,-4.138604,-2.172847,2.894994,0.732001],[-0.502192,-2.809549,-6.170127,-4.770339,-3.334218,4.491706,5.434507],[-0.800943,5.548570,6.471503,7.342064,-4.341961,-3.221773,-9.727125],[-1.958857,-3.210199,1.423422,9.938210,3.287600,-4.693205,-3.024505]],[[4.507716,9.905887,4.622803,-7.672150,-9.949848,-4.653201,-9.547497],[9.818279,-9.288689,-8.832404,6.832077,8.339057,2.215838,-1.053148],[-8.647238,6.374705,6.464665,8.811860,7.061875,7.410089,-3.819776],[-8.616704,4.983014,8.508843,1.590647,-8.049459,7.172205,-0.094578],[-7.452184,-2.701913,0.841012,3.326397,9.523261,4.426485,-6.377445]]], dtype = "float32")#candidate|4323|(8, 5, 7)|const|float32
bop_4324 = relay.multiply(uop_4318.astype('int64'), relay.reshape(const_4323.astype('int64'), relay.shape_of(uop_4318))) # shape=(8, 5, 7)
func_3340_call = mod.get_global_var('func_3340')
func_3347_call = mutated_mod.get_global_var('func_3347')
var_4329 = relay.var("var_4329", dtype = "float64", shape = (84,))#candidate|4329|(84,)|var|float64
const_4330 = relay.const([-3,-3,1,-8,-4,-5,8,-6,10,1,10,2,-5,5,-2,4,-1,8,-6,-10,-7,-7,-1,-7,-6,4,2,10,-7,-9,-9,4,-2,4,1,6,-1,3,7,2,10,-3,-2,-10,-8,-7,3,-9,-6,-5,-8,-4,-6,-10,9,-10,6,1,-6,6,-1,-3,8,1,6,2,-7,-3,-3,7,5,-1,1,-10,3,3,10,-8,1,-2,-3,10,-1,4,6,-8,-9,1,-2,-8,-6,9,-10,-4,-8,5,3,3,10,1,-9,6,-9,9,-7,-8,-10,9,-6,9,1,5,-3,7,-6,-9,7,-2,-2,10,9,-10,-5,-9,4,-4,5,-9,8,2,-4,8,6,-10,10,-6,7,10,-7,-4,-8,-7,8,3,-2,1,-6,1,-10,10,2,10,4,-3,10,3,4,3,4,1,1,-5,-2,10,-7,3,-6,1,5,-10,-9,-3,3,-8,-1,4,-2,8,-5,-7,1,-4,-5,9,-8,2,-2,-2,-10,3,-7,3,5,-3,-2,-5,-2,-1,3,-6,-9,-8,-5,7,9,7,4,-7,-1,-1,3,-5,-2,-2,6,-8,6,5,6,-7,9,-5,3,-6,-4,-9,-1,-4,3,-10,3,2,-5,3,9,8,-7,5,-7,-4,5,10,8,-1,-7,9,-8,-3,8,-6,-7,6,-9,4,9,-7,-1,-2,-8,-1,-3,-8,1,-6,7,-7,6,10,4,3,4,-10,6,6,-5,2,-7,-1,-2,-7,-8,-7,8,10,-3,-5,-3,-4,5,5,-6,7,9,-4,-4,-4,-5,-7,-10,3,9,10,1,3,3,7,6,7,-4,6,9,-10,-3,-7,3,-6,-8,-6,-2,6,-6,-7,10,8,4,-2,6,-9,-1,9,4,8,-4,10,3,3,10,-2,3,-4,5,-2,-2,-9,-5,6,-6,3,9,7,-1,1,-10,4,4,2,8,10,3,2,10,9,-2,-7,6,-3,4,-10,9,-8,4,2,-2,-1,-4,2,10,-1,4,5,1,10,-4,-10,6,5,7,-3,4,7,6,-3,3,-1,1,8,2,9,-10,-8,-8,8,4,6,5,5,5,8,-1,4,2,6,-1,1,-4,8,4,7,7,-6,-9,6,1,9,-2,6,6,-2,-4,10,4,10,-6,-7,-2,-7,-6,-4,-6,10,7,-4,5,2,10,1,-10,1,-8,10,3,-3,-10,-5,2,-6,9,-4,7,8,-7,-9,-10,4,-3,7,4,3,9,-2,-1,-9,-8,9,-10,3,5,-6,-4,-2,7,-1,1,6,-1,-10,5,-7,2,-10,-2,-2,3,-2,10,-6,-5,-9,2,-6,-2,-9,6,1,9,-2,2,-10,2,6,7,-1,10,9,-5,-6,3,-3,-1,-9,-6,3,-5,-5,-6,10,-2,6,-1,5,-1,-3,8,5,2,2,-5,6,-10,8,3,-9,-1,8,-3,-9,7,1,10,7,-10,-10,3,-6,8,-9,5,7,-7,9,-1,6,-4,5,3,-6,10,7,-1,-6,-8,-1,7,9,4,-5,10,-2,6,-8,9,1,9,3,-2,2,-6,-3,2,8,-9,10,-4,-4,2,-1,-6,-10,-4,-7,-2,6,-2,4,8,10,4,-9,-2,1,4,5,-6,-7,8,7,-4,9,-2,2,4,9,1,8,-2,-9,1,-8,-1,-7,2,-10,-7,-4,3,-8,7,-6,-7,6,-5,6,1,7,3,-2,8,-1,10,-1,-1,-1,-6,9,-3,-3,-1,8,-6,-5,-9,-2,-8,9,6,2,-10,-6,-10,-2,-1,5,5,-4,-8,-8,8,3,4,-6,3,10,1,-2,2,-7,-8,-4,6,3,-9,-1,2,-4,6,-7,-10,-4,4,3,9,-6,2,1,-10,-2,-5,7,-4,6,-1,-1,-1,-1,3,8,3,1,5,-3,-6,3,7,1,-1,3,9,2,-1,2,6,-7,5,6,10,7,6,7,10,-5,4,-2,4,-2,4,10,-5,10,-7,-4,-6,4,8,5,9,8,10,6,-3,-8,4,8,-4,-3,-5,-9,5,4,7,3,1,-9,5,-2,8,7,7,3,-6,-6,5,-3,-1,6,-10,1,-4,2,-10,8,-6,9,-2,7,-1,10,-8,-6,2,6,3,-3,2,6,4,7,9,-3,10,-9,-5,-7,-4,4,5,7,-9,-6,-10,2,-6,-1,-7,-6,-8,-8,-5,-10,7,4,5,-1,6,5,10,7,6,-1,-6,-10,3,9,-2,-9,-2,1,6,4,-9,-7,6,-3,4,7,-2,-6,4,4,-4,-3,6,6,5,-6,-8,-1,9,-9,9,-6,-3,-7,6,1,4,8,7,4,3,6,6,-8,-3,-9,2,-5,-8,2,-4,3,8,-10,5,-6,-5,-2,10,-6,-8,9,-2,7,-9,-3,-1,-10,10,-3,-3,5,-1,-9,-6,8,-1,6,-3,3,-9,4,-5,-8,-6,9,-9,-9,1,3,-2,3,-8,-9,1,1,-8,-3,-1,7,-1,-9,1,1,6,1,-7,-3,5,-5,4,10,3,3,2,3,6,-4,-10,3,2,-5,-10,1,-2,6,2,-6,-7,1,10,-5,-8,7,5,-5,4,6,-10,-3,-3,8,3,2,-4,-1,9,-3,6,-4,-10,10,10,-9,-2,5,-9,3,-7,-4,-10,-5,1,-5,-6,8,9,-9,3,-1,10,10,-9,5,-10,6,4,-10,-7,-3,-7,10,-10,-6,9,-6,3,2,9,-7,6,10,5,8,6,-9,-2,-8,10,-5,-3,-9,7,10,9,-6,3,7,-7,-3,6,-5,-1,-3,10,9,9,10,9,3,-1,3,4,-3,-6,-3,8,-3,2,7,1,5,-4,-5,7,9,6,4,-3,-10,-3,1], dtype = "int64")#candidate|4330|(1080,)|const|int64
var_4331 = relay.var("var_4331", dtype = "float64", shape = (192,))#candidate|4331|(192,)|var|float64
const_4332 = relay.const([-7,10,-8,-6,-7,10,-8,-1,3,4,1,-5,6,-2,-7,9,-7,9,1,8,4,4,-8,4,6,-1,1,-10,4,-10,-6,6,-1,9,-10,2,6,7,-10,5,8,3,-4,8,4,10,10,-3,10,-3,-8,8,10,10,-6,-5,1,-4,10,2,4,2,-7,-3,9,-9,2,3,-3,-3,7,1,-8,10,9,-10,1,6,-10,-5,6,6,-3,1,3,3,2,6,1,5,-8,-4,8,-9,1,-7,-9,-5,3,8,-10,6,7,9,1,-1,-1,-10,-6,-9,-4,-4,-1,-5,6,2,4,-7,3,-10,-2,-5,-7,5,-5,-10,3,10,-6,-10,-8,-8,4,3,1,-4,-4,7,-4,-7,-9,8,3,-5,2,-1,2,3,7,3,-9,3,4,7,4,-6,10,-6,1,4,-9,-6,-6,-6,4,1,6,7,5,9,9,-4,-1,-4,2,-8,6,-1,-4,7,6,-3,3,-2,5,10,9,3,-4,2,8,8,-5,-6,8,9,3,-6,-2,-7,-2,-1,2,-8,-2,4,-10,3,3,-6,-5,5,-5,-6,-1,-5,9,3,1,-8,4,4,4,1,9,10,-2,-3,8,-5,-2,4,-8,5,-8,4,-4,-8,-6,-8,6,-10,-5,-7,-4,-3,-5,-10,-2,4,-7,-4,9,-1,-10,-9,-1,7,5,10,-8,-8,10,8,4,-3,-2,-3,-10,-5,7,9,6,3,-9,9,-4,10,4,5,2,8,-9,-5,7,-9,8,2,1,-3,6,6,10,5,4,3,-2,-9,6,-7,-8,7,2,9,-5,-6,6,-5,9,-4,2,8,2,2,-5,-1,5,8,7,3,-10,7,2,-4,-1,-4,8,6,3,-8,-7,1,6,1,5,-7,4,2,-7,-9,-7,-1,8,6,5,8,-10,-6,-8,-10,-3,-9,5,5,8,-8,8,1,-9,5,-9,-8,2,7,-10,-5,6,-10,-5,-10,-8,1,2,-9,-9,6,9,-8,9,3,2,4,1,-10,-8,3,-1,-1,-6,-5,-7,4,-5,7,10,3,7,2,1,8,2,-7,-8,5,1,1,-1,5,9,-1,-1,9,-4,-8,2,-6,7,-7,-4,-9,4,-4,-4,2,1,10,-8,10,1,8,-1,-8,-8,5,9,8,3,8,-2,-3,-4,5,-4,-5,-2,-2,7,-3,-5,8,2,7,9,5,6,4,-10,1,3,-3,-10,8,-5,6,-9,3,-2,7,6,3,-9,-9,6,-5,9,-2,2,-8,-2,6,9,-5,10,4,-5,5,4,2,-7,8,4,-4,-1,3,9,7,9,-10,-5,6,-9,-1,-6,-4,-10,8,4,10,4,-3,3,2,-3,4,5,7,10,1,-10,8,7,4,7,1,9,6,-3,7,-1,5,10,1,7,-7,-7,9,-2,7,8,5,-1,1,-1,1,9,7,-5,1,-10,-1,5,1,2,9,8,-7,-6,7,7,1,-6,-5,-9,-5,7,6,-7,-9,8,8,3,7,6,-1,3,-8,10,-10,-2,-8,2,-10,10,9,-9,-6,-4,4,-8,-2,-6,-10,8,5,-6,10,6,8,-9,-6,5,1,-4,1,1,-2,6,3,-3,-5,-3,6,2,5,-2,10,-4,7,7,1,1,-2,7,-10,-6,-7,7,8,9,3,-6,-9,3,10,3,-5,-5,3,4,2,8,1,-5,9,4,-7,2,-1,-3,-2,-2,-3,5,1,-9,1,4,-7,3,-7,5,-7,2,-1,-1,-1,1,2,-10,-7,-7,8,-2,-2,-10,-2,-3,-3,7,9,-8,-10,6,9,6,7,-6,-5,-10,3,-8,-7,2,-7,4,6,8,-5,8,2,-9,7,6,4,-3,-7,2,3,2,2,7,9,5,-4,5,-9,7,-10,10,-10,-8,5,9,-3,-9,6,-6,5,-9,4,-7,10,9,-6,3,3,10,-3,-7,9,-3,5,-2,-1,-9,8,-10,-9,-10,9,10,-5,1,1,-4,5,9,-9,10,3,6,7,-2,6,-3,3,6,-4,-8,6,-7,-1,1,-7,-1,2,4,5,6,-7,-6,-2,2,1,3,2,-8,-8,3,2,8,5,-3,-9,2,10,10,-2,10,-2,1,-6,-7,10,10,5,-5,-1,1,-1,-9,10,-5,-4,6,-9,-10,-9,-9,-6,-2,6,-1,8,-10,6,-10,-1,-1,-9,10,5,4,4,3,-10,-3,2,7,8,1,-9,2,-7,4,9,5,-4,8,-2,-10,-7,1,6,1,7,8,2,-5,-1,6,-5,-6,2,8,6,-6,-10,-2,9,2,3,2,-10,-6,-6,-2,5,-1,-1,-3,-9,-10,8,-7,3,-2,9,-4,1,-9,4,9,9,-8,-8,-7,-10,8,-9,6,4,10,2,-2,4,1,5,9,1,-4,8,8,2,-5,-10,-3,-9,-8,7,-5,3,10,7,4,9,-10,3,3,3,4,-1,8,2,-10,-7,-1,-2,-10,2,-8,2,-8,-6,-8,-8,-2,3,-8,5,-3,4,5,-7,-4,9,-2,10,5,10], dtype = "uint16")#candidate|4332|(960,)|const|uint16
call_4328 = relay.TupleGetItem(func_3340_call(relay.reshape(var_4329.astype('float64'), [7, 2, 6]), relay.reshape(const_4330.astype('int64'), [1080,]), relay.reshape(var_4331.astype('float64'), [8, 24]), relay.reshape(const_4330.astype('float64'), [8, 9, 15]), relay.reshape(const_4332.astype('uint16'), [960,]), ), 2)
call_4333 = relay.TupleGetItem(func_3347_call(relay.reshape(var_4329.astype('float64'), [7, 2, 6]), relay.reshape(const_4330.astype('int64'), [1080,]), relay.reshape(var_4331.astype('float64'), [8, 24]), relay.reshape(const_4330.astype('float64'), [8, 9, 15]), relay.reshape(const_4332.astype('uint16'), [960,]), ), 2)
uop_4339 = relay.cosh(uop_4318.astype('float32')) # shape=(8, 5, 7)
func_2999_call = mod.get_global_var('func_2999')
func_3003_call = mutated_mod.get_global_var('func_3003')
var_4344 = relay.var("var_4344", dtype = "uint8", shape = (520,))#candidate|4344|(520,)|var|uint8
call_4343 = relay.TupleGetItem(func_2999_call(relay.reshape(call_4328.astype('uint64'), [294, 1]), relay.reshape(var_4344.astype('uint8'), [520,]), relay.reshape(var_4331.astype('float64'), [192,]), ), 8)
call_4345 = relay.TupleGetItem(func_3003_call(relay.reshape(call_4328.astype('uint64'), [294, 1]), relay.reshape(var_4344.astype('uint8'), [520,]), relay.reshape(var_4331.astype('float64'), [192,]), ), 8)
func_2936_call = mod.get_global_var('func_2936')
func_2939_call = mutated_mod.get_global_var('func_2939')
var_4350 = relay.var("var_4350", dtype = "int16", shape = (1152,))#candidate|4350|(1152,)|var|int16
call_4349 = relay.TupleGetItem(func_2936_call(relay.reshape(var_4350.astype('int16'), [16, 8, 9]), relay.reshape(var_4350.astype('int16'), [16, 8, 9]), ), 1)
call_4351 = relay.TupleGetItem(func_2939_call(relay.reshape(var_4350.astype('int16'), [16, 8, 9]), relay.reshape(var_4350.astype('int16'), [16, 8, 9]), ), 1)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
var_4353 = relay.var("var_4353", dtype = "int16", shape = (1008,))#candidate|4353|(1008,)|var|int16
call_4352 = relay.TupleGetItem(func_181_call(relay.reshape(var_4353.astype('int16'), [6, 12, 14])), 0)
call_4354 = relay.TupleGetItem(func_183_call(relay.reshape(var_4353.astype('int16'), [6, 12, 14])), 0)
var_4367 = relay.var("var_4367", dtype = "float32", shape = (8, 5, 7))#candidate|4367|(8, 5, 7)|var|float32
bop_4368 = relay.not_equal(uop_4339.astype('bool'), relay.reshape(var_4367.astype('bool'), relay.shape_of(uop_4339))) # shape=(8, 5, 7)
func_995_call = mod.get_global_var('func_995')
func_999_call = mutated_mod.get_global_var('func_999')
call_4379 = relay.TupleGetItem(func_995_call(relay.reshape(const_4332.astype('uint16'), [15, 8, 8]), relay.reshape(const_4330.astype('int64'), [90, 12]), ), 2)
call_4380 = relay.TupleGetItem(func_999_call(relay.reshape(const_4332.astype('uint16'), [15, 8, 8]), relay.reshape(const_4330.astype('int64'), [90, 12]), ), 2)
output = relay.Tuple([bop_4324,call_4328,var_4329,const_4330,var_4331,const_4332,call_4343,var_4344,call_4349,var_4350,call_4352,var_4353,bop_4368,call_4379,])
output2 = relay.Tuple([bop_4324,call_4333,var_4329,const_4330,var_4331,const_4332,call_4345,var_4344,call_4351,var_4350,call_4354,var_4353,bop_4368,call_4380,])
func_4395 = relay.Function([var_4317,var_4329,var_4331,var_4344,var_4350,var_4353,var_4367,], output)
mod['func_4395'] = func_4395
mod = relay.transform.InferType()(mod)
mutated_mod['func_4395'] = func_4395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4395_call = mutated_mod.get_global_var('func_4395')
var_4397 = relay.var("var_4397", dtype = "float32", shape = (8, 5, 7))#candidate|4397|(8, 5, 7)|var|float32
var_4398 = relay.var("var_4398", dtype = "float64", shape = (84,))#candidate|4398|(84,)|var|float64
var_4399 = relay.var("var_4399", dtype = "float64", shape = (192,))#candidate|4399|(192,)|var|float64
var_4400 = relay.var("var_4400", dtype = "uint8", shape = (520,))#candidate|4400|(520,)|var|uint8
var_4401 = relay.var("var_4401", dtype = "int16", shape = (1152,))#candidate|4401|(1152,)|var|int16
var_4402 = relay.var("var_4402", dtype = "int16", shape = (1008,))#candidate|4402|(1008,)|var|int16
var_4403 = relay.var("var_4403", dtype = "float32", shape = (8, 5, 7))#candidate|4403|(8, 5, 7)|var|float32
call_4396 = func_4395_call(var_4397,var_4398,var_4399,var_4400,var_4401,var_4402,var_4403,)
output = call_4396
func_4404 = relay.Function([var_4397,var_4398,var_4399,var_4400,var_4401,var_4402,var_4403,], output)
mutated_mod['func_4404'] = func_4404
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4578 = relay.var("var_4578", dtype = "uint16", shape = (4, 15, 11))#candidate|4578|(4, 15, 11)|var|uint16
var_4579 = relay.var("var_4579", dtype = "uint16", shape = (4, 15, 11))#candidate|4579|(4, 15, 11)|var|uint16
bop_4580 = relay.logical_xor(var_4578.astype('uint16'), relay.reshape(var_4579.astype('uint16'), relay.shape_of(var_4578))) # shape=(4, 15, 11)
uop_4585 = relay.cosh(var_4578.astype('float32')) # shape=(4, 15, 11)
output = relay.Tuple([bop_4580,uop_4585,])
output2 = relay.Tuple([bop_4580,uop_4585,])
func_4592 = relay.Function([var_4578,var_4579,], output)
mod['func_4592'] = func_4592
mod = relay.transform.InferType()(mod)
var_4593 = relay.var("var_4593", dtype = "uint16", shape = (4, 15, 11))#candidate|4593|(4, 15, 11)|var|uint16
var_4594 = relay.var("var_4594", dtype = "uint16", shape = (4, 15, 11))#candidate|4594|(4, 15, 11)|var|uint16
output = func_4592(var_4593,var_4594,)
func_4595 = relay.Function([var_4593,var_4594,], output)
mutated_mod['func_4595'] = func_4595
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4599 = relay.var("var_4599", dtype = "int8", shape = (15, 2, 10))#candidate|4599|(15, 2, 10)|var|int8
var_4600 = relay.var("var_4600", dtype = "int8", shape = (15, 2, 10))#candidate|4600|(15, 2, 10)|var|int8
bop_4601 = relay.add(var_4599.astype('int8'), relay.reshape(var_4600.astype('int8'), relay.shape_of(var_4599))) # shape=(15, 2, 10)
bop_4604 = relay.left_shift(bop_4601.astype('uint64'), relay.reshape(var_4599.astype('uint64'), relay.shape_of(bop_4601))) # shape=(15, 2, 10)
uop_4613 = relay.log2(var_4599.astype('float64')) # shape=(15, 2, 10)
output = relay.Tuple([bop_4604,uop_4613,])
output2 = relay.Tuple([bop_4604,uop_4613,])
func_4626 = relay.Function([var_4599,var_4600,], output)
mod['func_4626'] = func_4626
mod = relay.transform.InferType()(mod)
mutated_mod['func_4626'] = func_4626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4626_call = mutated_mod.get_global_var('func_4626')
var_4628 = relay.var("var_4628", dtype = "int8", shape = (15, 2, 10))#candidate|4628|(15, 2, 10)|var|int8
var_4629 = relay.var("var_4629", dtype = "int8", shape = (15, 2, 10))#candidate|4629|(15, 2, 10)|var|int8
call_4627 = func_4626_call(var_4628,var_4629,)
output = call_4627
func_4630 = relay.Function([var_4628,var_4629,], output)
mutated_mod['func_4630'] = func_4630
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4676 = relay.const([[[-1.914173,0.603734,-0.290367,-4.007108,-9.142022,-3.107260,8.887603,2.224077,4.173457,-9.316250,-1.231894,6.549370],[-3.041143,-6.617892,-4.288994,-9.160561,-7.875486,-9.097514,1.644933,-9.447857,9.182070,1.889620,9.187158,-4.265210],[3.485035,0.337686,0.241485,-9.283580,2.234563,-1.355485,-8.345008,4.735244,-5.001565,1.972235,-2.337078,5.898722]],[[-0.613068,-5.275006,5.026576,1.858054,5.558264,5.121833,5.282716,-7.696389,-3.940232,-5.805799,-3.601442,6.979237],[-6.237346,-8.956489,-2.853354,-7.907689,-1.414970,2.543221,6.725587,-2.361954,3.895511,0.540158,0.875590,-7.140421],[2.833111,-2.657633,-9.355341,-8.149186,4.850753,7.349437,1.106061,-5.943672,-2.547964,4.011950,-9.292907,-5.833652]],[[9.435803,5.491310,-7.678231,-9.828107,-3.493195,7.332416,-1.456731,5.473607,-4.231314,-5.381292,-0.956544,9.960933],[-2.940204,-8.530900,-6.676051,-8.207254,1.497804,4.223128,8.828710,7.296875,-9.324120,-5.070407,-8.008101,-2.780905],[-5.396453,-7.204635,-6.787116,4.487220,2.467902,8.936382,3.815969,0.248428,2.470968,-1.459705,4.444092,2.101430]],[[-8.028610,-0.582716,3.853874,1.644197,9.752298,5.829072,4.669588,-3.224899,-9.573710,-7.994313,-9.095580,-4.284919],[-5.245379,-7.308906,-9.323024,-4.828362,-3.484974,-6.420322,0.892896,0.871936,0.938959,-8.467113,-8.694635,0.391202],[5.707158,-2.708239,-8.812436,7.091176,0.509696,-7.426055,9.194167,-1.859520,2.806414,-1.345508,-5.262739,-4.749373]],[[-8.816905,-6.829148,4.117472,1.664370,5.688854,-0.492871,7.908280,8.661267,-7.404216,-4.685355,-7.744999,8.049460],[5.987655,-8.388053,4.040866,-5.512221,-1.745862,-5.250659,-4.270448,-3.548233,1.972186,8.247789,-0.878682,2.059465],[-0.381818,5.301415,-1.950732,5.040997,-4.563572,2.704132,-7.273886,1.833564,-7.560563,-4.923817,8.899767,1.219917]]], dtype = "float64")#candidate|4676|(5, 3, 12)|const|float64
var_4677 = relay.var("var_4677", dtype = "float64", shape = (5, 3, 12))#candidate|4677|(5, 3, 12)|var|float64
bop_4678 = relay.mod(const_4676.astype('float64'), relay.reshape(var_4677.astype('float64'), relay.shape_of(const_4676))) # shape=(5, 3, 12)
output = relay.Tuple([bop_4678,])
output2 = relay.Tuple([bop_4678,])
func_4686 = relay.Function([var_4677,], output)
mod['func_4686'] = func_4686
mod = relay.transform.InferType()(mod)
var_4687 = relay.var("var_4687", dtype = "float64", shape = (5, 3, 12))#candidate|4687|(5, 3, 12)|var|float64
output = func_4686(var_4687)
func_4688 = relay.Function([var_4687], output)
mutated_mod['func_4688'] = func_4688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4792 = relay.var("var_4792", dtype = "float32", shape = (2, 16, 1))#candidate|4792|(2, 16, 1)|var|float32
var_4793 = relay.var("var_4793", dtype = "float32", shape = (2, 16, 1))#candidate|4793|(2, 16, 1)|var|float32
bop_4794 = relay.less(var_4792.astype('bool'), relay.reshape(var_4793.astype('bool'), relay.shape_of(var_4792))) # shape=(2, 16, 1)
bop_4797 = relay.mod(var_4792.astype('float32'), relay.reshape(bop_4794.astype('float32'), relay.shape_of(var_4792))) # shape=(2, 16, 1)
func_4592_call = mod.get_global_var('func_4592')
func_4595_call = mutated_mod.get_global_var('func_4595')
var_4801 = relay.var("var_4801", dtype = "uint16", shape = (660,))#candidate|4801|(660,)|var|uint16
call_4800 = relay.TupleGetItem(func_4592_call(relay.reshape(var_4801.astype('uint16'), [4, 15, 11]), relay.reshape(var_4801.astype('uint16'), [4, 15, 11]), ), 0)
call_4802 = relay.TupleGetItem(func_4595_call(relay.reshape(var_4801.astype('uint16'), [4, 15, 11]), relay.reshape(var_4801.astype('uint16'), [4, 15, 11]), ), 0)
func_4592_call = mod.get_global_var('func_4592')
func_4595_call = mutated_mod.get_global_var('func_4595')
call_4803 = relay.TupleGetItem(func_4592_call(relay.reshape(call_4800.astype('uint16'), [4, 15, 11]), relay.reshape(var_4801.astype('uint16'), [4, 15, 11]), ), 1)
call_4804 = relay.TupleGetItem(func_4595_call(relay.reshape(call_4800.astype('uint16'), [4, 15, 11]), relay.reshape(var_4801.astype('uint16'), [4, 15, 11]), ), 1)
bop_4805 = relay.floor_mod(bop_4794.astype('float64'), var_4801.astype('float64')) # shape=(2, 16, 660)
output = relay.Tuple([bop_4797,call_4800,call_4803,bop_4805,])
output2 = relay.Tuple([bop_4797,call_4802,call_4804,bop_4805,])
func_4813 = relay.Function([var_4792,var_4793,var_4801,], output)
mod['func_4813'] = func_4813
mod = relay.transform.InferType()(mod)
var_4814 = relay.var("var_4814", dtype = "float32", shape = (2, 16, 1))#candidate|4814|(2, 16, 1)|var|float32
var_4815 = relay.var("var_4815", dtype = "float32", shape = (2, 16, 1))#candidate|4815|(2, 16, 1)|var|float32
var_4816 = relay.var("var_4816", dtype = "uint16", shape = (660,))#candidate|4816|(660,)|var|uint16
output = func_4813(var_4814,var_4815,var_4816,)
func_4817 = relay.Function([var_4814,var_4815,var_4816,], output)
mutated_mod['func_4817'] = func_4817
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4855 = relay.var("var_4855", dtype = "float64", shape = (10, 4, 4))#candidate|4855|(10, 4, 4)|var|float64
const_4856 = relay.const([[[-9.687852,-8.628075,-4.099853,-4.837624],[-4.970500,6.683222,-1.548949,9.432854],[3.966703,-7.002349,9.953338,0.604681],[4.157880,7.379635,3.466783,0.549746]],[[-2.917256,7.449316,-9.093545,-2.501246],[-5.897684,5.727989,8.765706,0.763041],[7.663819,-6.289800,-6.234373,9.334605],[3.435090,-0.686191,7.957757,5.742666]],[[7.552032,-0.213288,-3.793995,-1.836928],[5.740287,8.951875,1.661409,9.330920],[-0.672879,1.332121,5.487049,-6.735678],[1.354012,5.041559,7.944141,5.273966]],[[-5.264370,-7.329608,-4.364300,3.566016],[2.953884,8.205990,6.754564,8.839411],[-0.762929,-7.382020,8.080840,7.216470],[8.273116,5.417744,0.086460,6.822095]],[[9.983723,-6.133881,4.145334,0.323889],[5.174228,9.316841,5.390989,-4.328807],[1.540606,8.933189,-1.197035,-8.727330],[6.465009,-9.049739,-1.796828,-3.022642]],[[7.367510,7.427951,-0.383790,0.605101],[2.096358,-4.079236,-6.467023,2.518683],[4.349233,-5.721895,5.019499,6.340594],[8.901644,5.287359,-5.727075,6.144168]],[[-9.884620,-1.298492,0.760406,-0.020175],[-6.898179,6.200122,-5.124425,-7.221646],[7.281945,6.425748,4.738411,7.978199],[-6.537324,-7.944057,0.773749,-7.489775]],[[0.200308,-7.506855,7.998546,0.533669],[-2.772792,-9.022643,9.435072,-8.218400],[1.369238,8.841113,2.619329,7.082191],[6.680113,-1.464817,2.349147,0.383359]],[[1.743174,1.322901,-5.707027,-3.648942],[7.346253,2.674334,4.189435,1.261146],[1.902388,-4.387252,-8.053858,-7.210075],[8.779387,-9.480953,-2.234078,5.065306]],[[4.201880,-8.312684,-8.064199,-3.257039],[4.163824,-0.551330,-5.330833,0.112309],[2.159952,-2.464297,-8.856063,2.173020],[9.478056,-5.740572,8.778730,1.601228]]], dtype = "float64")#candidate|4856|(10, 4, 4)|const|float64
bop_4857 = relay.floor_divide(var_4855.astype('float64'), relay.reshape(const_4856.astype('float64'), relay.shape_of(var_4855))) # shape=(10, 4, 4)
uop_4863 = relay.erf(bop_4857.astype('float64')) # shape=(10, 4, 4)
output = relay.Tuple([uop_4863,])
output2 = relay.Tuple([uop_4863,])
func_4867 = relay.Function([var_4855,], output)
mod['func_4867'] = func_4867
mod = relay.transform.InferType()(mod)
var_4868 = relay.var("var_4868", dtype = "float64", shape = (10, 4, 4))#candidate|4868|(10, 4, 4)|var|float64
output = func_4867(var_4868)
func_4869 = relay.Function([var_4868], output)
mutated_mod['func_4869'] = func_4869
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5365 = relay.const([[[0.108161,9.561505,2.306403,4.502045,-4.998411,2.230544,-9.981738,-1.977805,-8.003195,8.143608],[-2.059375,-7.926599,9.829459,2.610791,-8.911304,0.119603,1.479359,8.757244,5.580115,2.442545],[-9.599846,-3.037096,-4.446222,-4.967830,-9.762252,6.567704,-1.510879,5.314894,8.484504,9.365785]],[[5.086708,3.425752,6.400763,-6.353798,-3.382538,1.519656,-4.832737,1.456640,-4.720439,8.508325],[7.244542,0.493784,-4.079838,4.777663,0.769187,3.902511,9.682759,4.778582,-5.622248,-9.901704],[-5.524221,7.296463,9.857207,2.300896,3.185546,-4.466025,2.631695,-5.793930,-5.925034,4.742409]],[[-2.743508,1.131805,-4.352712,6.775523,-4.378909,0.998357,3.703462,7.267184,6.630715,-8.660120],[5.420202,9.992551,3.700541,7.935986,1.447638,0.448214,8.931419,9.321388,-7.492557,-2.482937],[-9.645328,2.564511,9.889019,-9.055844,2.885037,8.281815,7.076212,-1.163169,-3.754540,7.524602]],[[-1.245561,1.517638,5.328511,1.941576,2.778339,-0.737720,1.766563,0.519475,-7.266046,9.025783],[5.539090,-7.552766,4.282895,1.208577,-9.015404,6.528097,6.618390,2.143720,-0.742242,-3.680368],[-3.088751,3.339180,-9.961702,-5.685802,5.229084,4.004432,-2.076770,9.364433,-1.326687,5.158415]]], dtype = "float64")#candidate|5365|(4, 3, 10)|const|float64
uop_5366 = relay.asin(const_5365.astype('float64')) # shape=(4, 3, 10)
uop_5373 = relay.log2(const_5365.astype('float32')) # shape=(4, 3, 10)
output = relay.Tuple([uop_5366,uop_5373,])
output2 = relay.Tuple([uop_5366,uop_5373,])
func_5379 = relay.Function([], output)
mod['func_5379'] = func_5379
mod = relay.transform.InferType()(mod)
mutated_mod['func_5379'] = func_5379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mutated_mod.get_global_var('func_5379')
call_5380 = func_5379_call()
output = call_5380
func_5381 = relay.Function([], output)
mutated_mod['func_5381'] = func_5381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mod.get_global_var('func_5379')
func_5381_call = mutated_mod.get_global_var('func_5381')
call_5402 = relay.TupleGetItem(func_5379_call(), 1)
call_5403 = relay.TupleGetItem(func_5381_call(), 1)
output = call_5402
output2 = call_5403
func_5411 = relay.Function([], output)
mod['func_5411'] = func_5411
mod = relay.transform.InferType()(mod)
mutated_mod['func_5411'] = func_5411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5411_call = mutated_mod.get_global_var('func_5411')
call_5412 = func_5411_call()
output = call_5412
func_5413 = relay.Function([], output)
mutated_mod['func_5413'] = func_5413
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mod.get_global_var('func_5379')
func_5381_call = mutated_mod.get_global_var('func_5381')
call_5414 = relay.TupleGetItem(func_5379_call(), 0)
call_5415 = relay.TupleGetItem(func_5381_call(), 0)
output = relay.Tuple([call_5414,])
output2 = relay.Tuple([call_5415,])
func_5419 = relay.Function([], output)
mod['func_5419'] = func_5419
mod = relay.transform.InferType()(mod)
output = func_5419()
func_5420 = relay.Function([], output)
mutated_mod['func_5420'] = func_5420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mod.get_global_var('func_5379')
func_5381_call = mutated_mod.get_global_var('func_5381')
call_5505 = relay.TupleGetItem(func_5379_call(), 0)
call_5506 = relay.TupleGetItem(func_5381_call(), 0)
func_3880_call = mod.get_global_var('func_3880')
func_3883_call = mutated_mod.get_global_var('func_3883')
var_5511 = relay.var("var_5511", dtype = "int16", shape = ())#candidate|5511|()|var|int16
const_5512 = relay.const([[5,10,-5,2,1,-1,5,-4,9,8,-10,-4,9,1,-9,-8,10,2,10,-3,-1,6,6,-9],[-9,-2,3,-3,5,8,5,-6,4,2,5,7,-8,4,-2,-8,9,7,7,8,6,-5,2,7],[1,-9,3,-4,10,6,8,-4,-3,3,-3,-1,7,-1,7,-4,-7,7,-3,-2,7,-7,-9,6],[-2,-1,9,5,8,-4,3,-7,3,2,-5,8,-10,8,6,3,-2,10,-8,7,10,-3,9,5]], dtype = "int16")#candidate|5512|(4, 24)|const|int16
call_5510 = relay.TupleGetItem(func_3880_call(relay.reshape(var_5511.astype('int16'), []), relay.reshape(const_5512.astype('int16'), [6, 8, 2]), ), 0)
call_5513 = relay.TupleGetItem(func_3883_call(relay.reshape(var_5511.astype('int16'), []), relay.reshape(const_5512.astype('int16'), [6, 8, 2]), ), 0)
uop_5522 = relay.sinh(const_5512.astype('float64')) # shape=(4, 24)
bop_5540 = relay.divide(uop_5522.astype('float32'), var_5511.astype('float32')) # shape=(4, 24)
var_5545 = relay.var("var_5545", dtype = "float64", shape = (4, 24))#candidate|5545|(4, 24)|var|float64
bop_5546 = relay.mod(uop_5522.astype('float32'), relay.reshape(var_5545.astype('float32'), relay.shape_of(uop_5522))) # shape=(4, 24)
uop_5568 = relay.cosh(var_5545.astype('float32')) # shape=(4, 24)
var_5571 = relay.var("var_5571", dtype = "float64", shape = (4, 24))#candidate|5571|(4, 24)|var|float64
bop_5572 = relay.right_shift(uop_5522.astype('int16'), relay.reshape(var_5571.astype('int16'), relay.shape_of(uop_5522))) # shape=(4, 24)
output = relay.Tuple([call_5505,call_5510,bop_5540,bop_5546,uop_5568,bop_5572,])
output2 = relay.Tuple([call_5506,call_5513,bop_5540,bop_5546,uop_5568,bop_5572,])
func_5575 = relay.Function([var_5511,var_5545,var_5571,], output)
mod['func_5575'] = func_5575
mod = relay.transform.InferType()(mod)
mutated_mod['func_5575'] = func_5575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5575_call = mutated_mod.get_global_var('func_5575')
var_5577 = relay.var("var_5577", dtype = "int16", shape = ())#candidate|5577|()|var|int16
var_5578 = relay.var("var_5578", dtype = "float64", shape = (4, 24))#candidate|5578|(4, 24)|var|float64
var_5579 = relay.var("var_5579", dtype = "float64", shape = (4, 24))#candidate|5579|(4, 24)|var|float64
call_5576 = func_5575_call(var_5577,var_5578,var_5579,)
output = call_5576
func_5580 = relay.Function([var_5577,var_5578,var_5579,], output)
mutated_mod['func_5580'] = func_5580
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5608 = relay.var("var_5608", dtype = "uint64", shape = (5, 10, 12))#candidate|5608|(5, 10, 12)|var|uint64
var_5609 = relay.var("var_5609", dtype = "uint64", shape = (5, 10, 12))#candidate|5609|(5, 10, 12)|var|uint64
bop_5610 = relay.not_equal(var_5608.astype('bool'), relay.reshape(var_5609.astype('bool'), relay.shape_of(var_5608))) # shape=(5, 10, 12)
uop_5614 = relay.rsqrt(bop_5610.astype('float32')) # shape=(5, 10, 12)
func_1648_call = mod.get_global_var('func_1648')
func_1652_call = mutated_mod.get_global_var('func_1652')
var_5622 = relay.var("var_5622", dtype = "uint8", shape = (520,))#candidate|5622|(520,)|var|uint8
call_5621 = relay.TupleGetItem(func_1648_call(relay.reshape(var_5622.astype('uint8'), [8, 5, 13]), relay.reshape(var_5622.astype('uint8'), [8, 5, 13]), ), 0)
call_5623 = relay.TupleGetItem(func_1652_call(relay.reshape(var_5622.astype('uint8'), [8, 5, 13]), relay.reshape(var_5622.astype('uint8'), [8, 5, 13]), ), 0)
func_4686_call = mod.get_global_var('func_4686')
func_4688_call = mutated_mod.get_global_var('func_4688')
var_5642 = relay.var("var_5642", dtype = "float64", shape = (180,))#candidate|5642|(180,)|var|float64
call_5641 = relay.TupleGetItem(func_4686_call(relay.reshape(var_5642.astype('float64'), [5, 3, 12])), 0)
call_5643 = relay.TupleGetItem(func_4688_call(relay.reshape(var_5642.astype('float64'), [5, 3, 12])), 0)
func_2936_call = mod.get_global_var('func_2936')
func_2939_call = mutated_mod.get_global_var('func_2939')
var_5650 = relay.var("var_5650", dtype = "int16", shape = (1152,))#candidate|5650|(1152,)|var|int16
call_5649 = relay.TupleGetItem(func_2936_call(relay.reshape(var_5650.astype('int16'), [16, 8, 9]), relay.reshape(var_5650.astype('int16'), [16, 8, 9]), ), 1)
call_5651 = relay.TupleGetItem(func_2939_call(relay.reshape(var_5650.astype('int16'), [16, 8, 9]), relay.reshape(var_5650.astype('int16'), [16, 8, 9]), ), 1)
output = relay.Tuple([uop_5614,call_5621,var_5622,call_5641,var_5642,call_5649,var_5650,])
output2 = relay.Tuple([uop_5614,call_5623,var_5622,call_5643,var_5642,call_5651,var_5650,])
func_5653 = relay.Function([var_5608,var_5609,var_5622,var_5642,var_5650,], output)
mod['func_5653'] = func_5653
mod = relay.transform.InferType()(mod)
mutated_mod['func_5653'] = func_5653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5653_call = mutated_mod.get_global_var('func_5653')
var_5655 = relay.var("var_5655", dtype = "uint64", shape = (5, 10, 12))#candidate|5655|(5, 10, 12)|var|uint64
var_5656 = relay.var("var_5656", dtype = "uint64", shape = (5, 10, 12))#candidate|5656|(5, 10, 12)|var|uint64
var_5657 = relay.var("var_5657", dtype = "uint8", shape = (520,))#candidate|5657|(520,)|var|uint8
var_5658 = relay.var("var_5658", dtype = "float64", shape = (180,))#candidate|5658|(180,)|var|float64
var_5659 = relay.var("var_5659", dtype = "int16", shape = (1152,))#candidate|5659|(1152,)|var|int16
call_5654 = func_5653_call(var_5655,var_5656,var_5657,var_5658,var_5659,)
output = call_5654
func_5660 = relay.Function([var_5655,var_5656,var_5657,var_5658,var_5659,], output)
mutated_mod['func_5660'] = func_5660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mod.get_global_var('func_5379')
func_5381_call = mutated_mod.get_global_var('func_5381')
call_5683 = relay.TupleGetItem(func_5379_call(), 0)
call_5684 = relay.TupleGetItem(func_5381_call(), 0)
output = call_5683
output2 = call_5684
func_5691 = relay.Function([], output)
mod['func_5691'] = func_5691
mod = relay.transform.InferType()(mod)
mutated_mod['func_5691'] = func_5691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5691_call = mutated_mod.get_global_var('func_5691')
call_5692 = func_5691_call()
output = call_5692
func_5693 = relay.Function([], output)
mutated_mod['func_5693'] = func_5693
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5702 = relay.var("var_5702", dtype = "uint64", shape = (7, 14, 10))#candidate|5702|(7, 14, 10)|var|uint64
const_5703 = relay.const([[[4,10,2,8,6,8,7,-1,2,-9],[-6,-1,-2,8,7,1,3,9,-1,-5],[-4,7,3,-2,1,5,-2,2,5,-8],[-3,-6,-10,-4,-1,-8,-1,10,-2,10],[6,1,-10,-10,2,-9,-10,-5,-1,3],[-7,-1,-5,4,-3,-3,10,5,-8,8],[6,6,4,8,2,7,10,10,9,5],[10,9,3,-3,2,10,1,-5,9,10],[3,-1,-7,2,-4,-6,-6,-6,10,7],[-3,1,5,8,-9,5,10,-9,-6,-3],[-10,7,-3,-5,4,-6,-1,2,-2,9],[-1,-3,10,-7,5,-7,6,-10,-8,-3],[-7,1,5,5,4,-9,8,-5,6,-3],[2,5,-3,-9,10,-7,-3,6,-2,5]],[[2,-2,-6,9,10,2,-1,10,-1,-8],[2,-7,-4,3,3,3,-2,8,-3,-9],[-8,-5,-5,4,5,-7,7,-2,-9,6],[-2,9,-5,1,3,-3,8,-3,-4,-1],[9,5,-1,7,-1,2,-4,-9,-8,-9],[10,-6,-3,-3,6,-5,1,-2,-5,2],[2,1,-5,-4,-1,-5,-6,-1,-10,5],[8,2,10,-4,3,-2,10,-10,6,-9],[7,-9,-7,-2,-7,-2,7,-6,7,1],[-6,4,8,2,-8,-4,8,-9,-6,-1],[-10,-9,6,5,5,-1,10,-8,9,-6],[-2,-3,-4,5,-5,-2,-1,3,6,9],[3,2,-9,-4,10,-7,-10,5,5,3],[-8,7,8,7,8,-7,9,-6,2,7]],[[10,6,-8,-4,-3,-5,4,2,-3,-7],[-6,2,6,4,-8,9,6,-7,-8,-7],[10,4,5,-5,7,-9,-10,10,9,-5],[-6,-6,-2,9,6,1,-10,-9,4,-3],[-9,6,3,5,-2,10,7,-2,-1,-8],[-9,-4,-5,5,-6,-2,9,4,6,4],[2,-5,10,-9,-2,-9,-6,-1,-3,-2],[-5,3,2,3,-9,-3,-1,-3,10,1],[6,5,10,-7,-4,-3,3,2,7,3],[-2,-8,-9,-5,10,-2,-5,-2,-5,-9],[8,-8,2,-8,3,5,-8,-2,4,7],[-1,-4,-6,-3,-5,-7,-8,6,3,7],[5,-5,4,1,5,4,7,-4,4,1],[2,4,3,10,-6,-5,-10,6,-10,-4]],[[7,10,-5,4,-2,1,-2,-5,-5,-4],[5,-3,-2,9,-8,-6,10,-8,8,6],[-6,7,-2,-7,-9,-9,10,7,3,-3],[-10,7,-5,-7,-8,5,2,3,4,10],[-9,-8,-10,-3,3,-5,7,3,8,6],[-4,9,-5,-9,-2,-2,7,2,-5,2],[4,-10,-9,4,-4,-1,-3,6,3,-7],[-4,8,9,1,-6,1,-10,1,-4,5],[7,-8,-8,-6,-2,6,2,-9,3,-4],[-3,-8,-7,-10,-6,-1,-3,-3,5,-4],[2,3,3,6,2,-6,6,7,5,-6],[-4,-5,-6,-8,8,8,-1,6,4,1],[-4,10,2,-5,5,-9,-8,6,3,-7],[-5,8,7,-1,8,7,-10,1,-4,-1]],[[10,8,6,-2,-7,7,3,9,1,-10],[-3,-10,4,6,-2,9,-9,-7,-10,-4],[-7,10,-8,7,8,-10,-4,5,-4,10],[-8,-5,7,-3,-1,5,-8,8,-1,-7],[4,-1,8,10,4,5,10,-2,3,5],[2,4,2,-8,-8,-3,2,3,-7,9],[3,-5,5,-10,-3,-2,5,-7,-7,2],[-3,8,-1,5,-3,1,-10,1,-6,-4],[7,3,2,-1,-8,4,1,7,4,8],[-6,-5,7,-6,10,9,-7,-1,6,-10],[6,6,-8,7,-4,-1,-6,-9,-4,-6],[-4,-2,-9,4,5,-2,9,-10,10,1],[4,4,-10,-5,-9,-1,-5,-6,7,2],[3,5,-1,-1,2,-2,-3,8,-1,-10]],[[-3,-3,-5,3,-8,-6,-8,-5,5,9],[-7,4,9,-5,-7,1,9,6,-5,-8],[5,-6,-4,-1,6,-4,1,4,2,-2],[-8,8,-9,3,-5,-8,2,5,-6,5],[-6,-8,-9,-9,-6,1,-4,-1,-5,-8],[5,3,2,3,4,-4,9,7,4,10],[-7,-4,-1,-3,-1,-9,6,4,-1,8],[7,8,-1,3,-1,7,-3,8,-6,-2],[-1,-3,-6,5,-6,-5,-2,-8,-9,2],[1,7,-10,9,5,3,2,-3,5,-6],[-10,1,-5,6,-9,4,-8,5,6,-6],[-7,7,6,-10,7,-9,8,-8,10,-8],[4,10,-3,-2,1,1,8,7,-7,5],[2,10,8,4,-2,7,-4,-8,4,-9]],[[-9,-10,10,10,-6,-3,1,-10,-9,-6],[-9,-7,-2,2,-6,-8,1,3,-9,1],[10,-4,7,-7,-8,-7,8,10,10,3],[-4,4,-2,7,10,5,-3,-8,-2,-7],[9,-9,-10,6,-4,-10,1,4,-9,-3],[10,-6,8,3,10,-4,4,8,6,-5],[-3,7,-7,7,1,-4,9,-3,-5,-9],[-6,7,-8,-5,-9,3,7,5,-10,-1],[-2,3,6,-10,-4,-9,-6,10,9,8],[-10,-9,-2,1,7,-4,-9,-4,-5,-10],[-5,-7,3,-5,-7,-2,4,1,6,-8],[6,-5,1,3,-4,-2,2,-2,-9,9],[9,-10,-3,-1,-5,-5,2,-7,9,-8],[-3,-4,10,-1,-2,-4,4,-8,-8,-7]]], dtype = "uint64")#candidate|5703|(7, 14, 10)|const|uint64
bop_5704 = relay.greater_equal(var_5702.astype('bool'), relay.reshape(const_5703.astype('bool'), relay.shape_of(var_5702))) # shape=(7, 14, 10)
output = bop_5704
output2 = bop_5704
func_5707 = relay.Function([var_5702,], output)
mod['func_5707'] = func_5707
mod = relay.transform.InferType()(mod)
var_5708 = relay.var("var_5708", dtype = "uint64", shape = (7, 14, 10))#candidate|5708|(7, 14, 10)|var|uint64
output = func_5707(var_5708)
func_5709 = relay.Function([var_5708], output)
mutated_mod['func_5709'] = func_5709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5411_call = mod.get_global_var('func_5411')
func_5413_call = mutated_mod.get_global_var('func_5413')
call_5725 = func_5411_call()
call_5726 = func_5411_call()
func_1767_call = mod.get_global_var('func_1767')
func_1770_call = mutated_mod.get_global_var('func_1770')
const_5737 = relay.const([8.883121,-4.331730,8.370528,0.098048,-2.976120,-4.388830,1.581719,9.143800,1.344047,-3.527427,-9.001251,-6.590738,2.551830,4.384940,-7.791304,-1.946200,-2.071867,8.834036,-0.704503,-9.348292,4.005537,5.068657,3.220177,-4.184757,-1.939131,3.109594,9.038035,-6.972127,-7.853857,8.722263,8.772385,1.210928,2.429641,8.505282,1.627520,-7.341856,-8.821986,-1.926946,-3.373349,-2.238735,3.032941,0.707902,5.413591,9.972344,8.162689,-0.298957,0.982604,9.843334,-3.897453,-7.817479,-0.104739,1.361062,7.832899,3.801465,-8.213116,-4.739190,3.637070,-7.616582,8.933798,-9.857407,2.417904,-2.097354,-2.939131,6.731194,-3.309320,5.445160,-5.548166,-0.425269,-0.388430,7.888229,5.072146,-9.095333,2.526005,-7.656845,4.282977,-4.478038,1.935783,1.459103,-8.933786,4.276081,-6.791782,3.157501,0.267406,-0.603455,4.237517,-0.873263,-0.315353,1.233760,3.055372,-1.658373,6.217329,9.754227,7.490261,-9.356668,3.733270,1.301119,-0.266411,-5.602240,-6.581495,0.385663,-9.599324,-0.093911,8.909957,2.573836,9.648382,8.751071,-8.808083,-3.636364,7.638424,1.849623,-5.827952,-0.607590,2.167443,-5.798012,-7.090035,-1.510441,2.179222,5.598165,-8.605426,6.733428,-5.118083,-9.848563,-4.163741,0.503851,-0.044180,-4.824105,4.292115,0.603456,-3.480345,-6.906738,-6.058755,7.996282,4.209325,-0.339646,9.470811,-3.587474,-3.970596,-9.905077,5.187672,-6.749460,-4.086873,-7.341466,7.532508,2.219109,4.217932,-4.726967,-8.121071,1.498513,-5.393182,7.107001,2.248645,-0.457394,1.553954,-1.032068,-4.680281,-5.617296,-2.178850,-9.346301,-7.441587,1.397180,7.608604,3.548200,4.108447,3.301099,-3.580592,-3.555070,-7.091375,6.933119,5.285617,-8.461260,-6.975874,0.521488,8.304204,9.706092,8.959088,8.231370,-4.808633,-3.036112,8.887814,-9.200467,-2.555212,-0.176606,2.332872,-1.688321,6.981546,-3.630306,5.419533,-1.979908,5.341883,4.448626,-6.213407,1.602994], dtype = "float64")#candidate|5737|(192,)|const|float64
call_5736 = func_1767_call(relay.reshape(const_5737.astype('float64'), [6, 2, 16]))
call_5738 = func_1767_call(relay.reshape(const_5737.astype('float64'), [6, 2, 16]))
var_5749 = relay.var("var_5749", dtype = "float64", shape = (6, 2, 16))#candidate|5749|(6, 2, 16)|var|float64
bop_5750 = relay.not_equal(call_5736.astype('bool'), relay.reshape(var_5749.astype('bool'), relay.shape_of(call_5736))) # shape=(6, 2, 16)
bop_5753 = relay.not_equal(call_5738.astype('bool'), relay.reshape(var_5749.astype('bool'), relay.shape_of(call_5738))) # shape=(6, 2, 16)
const_5756 = relay.const([[[True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,False],[True,False,True,False,False,True,True,True,True,True,True,True,True,False,True,False]],[[True,True,False,False,False,True,True,True,False,False,True,True,True,False,True,False],[False,False,True,False,True,False,True,True,True,True,False,False,True,False,False,True]],[[True,False,True,True,True,False,False,False,True,True,True,False,True,False,False,True],[False,True,False,True,False,True,False,True,False,True,False,False,True,False,True,False]],[[True,False,True,False,False,True,False,True,False,True,True,True,True,False,False,True],[True,False,True,True,False,True,True,False,False,True,False,True,True,True,True,False]],[[True,False,True,False,True,True,True,True,True,True,False,False,True,True,False,False],[True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True]],[[False,True,True,False,False,True,True,True,False,False,False,True,True,False,True,False],[True,True,False,True,False,False,False,False,False,True,False,False,True,False,False,True]]], dtype = "bool")#candidate|5756|(6, 2, 16)|const|bool
bop_5757 = relay.logical_xor(bop_5750.astype('int64'), relay.reshape(const_5756.astype('int64'), relay.shape_of(bop_5750))) # shape=(6, 2, 16)
bop_5760 = relay.logical_xor(bop_5753.astype('int64'), relay.reshape(const_5756.astype('int64'), relay.shape_of(bop_5753))) # shape=(6, 2, 16)
output = relay.Tuple([call_5725,const_5737,bop_5757,])
output2 = relay.Tuple([call_5726,const_5737,bop_5760,])
func_5763 = relay.Function([var_5749,], output)
mod['func_5763'] = func_5763
mod = relay.transform.InferType()(mod)
var_5764 = relay.var("var_5764", dtype = "float64", shape = (6, 2, 16))#candidate|5764|(6, 2, 16)|var|float64
output = func_5763(var_5764)
func_5765 = relay.Function([var_5764], output)
mutated_mod['func_5765'] = func_5765
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5786 = relay.var("var_5786", dtype = "float32", shape = (5, 9, 4))#candidate|5786|(5, 9, 4)|var|float32
uop_5787 = relay.sinh(var_5786.astype('float32')) # shape=(5, 9, 4)
uop_5793 = relay.acosh(uop_5787.astype('float32')) # shape=(5, 9, 4)
output = relay.Tuple([uop_5793,])
output2 = relay.Tuple([uop_5793,])
func_5802 = relay.Function([var_5786,], output)
mod['func_5802'] = func_5802
mod = relay.transform.InferType()(mod)
mutated_mod['func_5802'] = func_5802
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5803 = relay.var("var_5803", dtype = "float32", shape = (5, 9, 4))#candidate|5803|(5, 9, 4)|var|float32
func_5802_call = mutated_mod.get_global_var('func_5802')
call_5804 = func_5802_call(var_5803)
output = call_5804
func_5805 = relay.Function([var_5803], output)
mutated_mod['func_5805'] = func_5805
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5816 = relay.const([[[-8.323192,4.204352,3.088033,-4.621843,-9.773517,-7.076532],[7.263360,-7.636939,-8.843452,2.683681,6.216751,4.387998],[-6.456346,2.252960,6.549174,-4.951765,-8.506384,-8.752048],[6.393741,-6.244002,-1.314569,-7.495420,1.712898,3.194823],[8.892205,-2.806675,-1.717227,-3.075504,-2.508173,-8.580915]],[[-7.964168,2.887290,-3.025932,2.748550,-4.615661,1.765534],[-3.922952,-6.572237,8.215804,3.709210,1.952225,1.851698],[-6.607159,-4.400512,8.025942,-9.546787,3.678570,-8.378553],[5.369790,-3.486610,0.132950,-6.891350,9.049759,-9.404336],[9.006434,8.903626,8.193791,-3.946231,-3.617451,-4.654544]],[[7.899857,-3.600514,-3.455957,-2.376441,-6.339892,4.610847],[0.245199,4.522136,-5.692041,9.220314,2.847497,-2.085832],[2.783354,-2.743963,5.769639,7.524802,9.708688,-6.956506],[1.960894,9.708568,2.098116,3.352572,3.473267,6.149097],[-6.551133,3.130939,0.848143,-3.048273,-6.519374,3.797716]],[[1.435892,8.027883,-3.604916,-6.485149,-5.160908,3.980375],[-7.847983,-1.778998,4.998496,-8.972462,-2.765427,8.761040],[3.331277,-7.989316,1.086697,-9.569899,0.261829,7.535258],[1.199142,7.107366,-4.723504,0.729271,1.701587,-0.544298],[1.101696,1.158105,-0.993295,2.674654,-2.138522,7.894125]],[[6.780487,8.725895,2.087603,-3.359145,-4.994653,6.054768],[-3.282118,-7.871113,-1.229084,-2.895577,7.716816,-1.173765],[4.604494,4.019156,4.834176,4.292786,-3.435305,8.623419],[0.761014,-8.571831,3.635608,-9.663599,-3.493955,-5.218690],[6.626900,-6.575103,-9.534903,-1.047668,5.955355,0.103283]],[[1.532079,9.675277,9.423685,8.022956,5.553666,7.248407],[9.582716,-6.468541,-9.687926,8.063605,-4.558312,-5.270270],[-2.423998,-3.507512,-5.195135,-4.316609,-5.977819,-5.870692],[6.361637,-9.558756,5.560391,5.006111,-4.820699,7.998749],[-7.348151,-4.959124,-1.288797,0.541469,-2.807307,-6.873934]],[[-6.191899,-9.632196,5.831150,-9.284899,-1.447389,8.154600],[-7.913872,0.145851,-7.807117,7.994069,4.172656,8.808057],[-5.300554,-1.741244,-6.085593,-2.414575,2.163244,3.836999],[0.258282,9.434151,8.281803,3.920491,-2.349808,-6.986456],[0.427609,9.292305,6.784372,9.918501,-0.241421,-5.586700]]], dtype = "float64")#candidate|5816|(7, 5, 6)|const|float64
var_5817 = relay.var("var_5817", dtype = "float64", shape = (7, 5, 6))#candidate|5817|(7, 5, 6)|var|float64
bop_5818 = relay.floor_mod(const_5816.astype('float64'), relay.reshape(var_5817.astype('float64'), relay.shape_of(const_5816))) # shape=(7, 5, 6)
func_5653_call = mod.get_global_var('func_5653')
func_5660_call = mutated_mod.get_global_var('func_5660')
var_5839 = relay.var("var_5839", dtype = "uint64", shape = (600,))#candidate|5839|(600,)|var|uint64
const_5840 = relay.const([-4,2,-4,-9,5,-10,-6,-10,-5,-8,-10,7,6,-4,-2,5,9,-6,-2,1,-10,4,2,-10,-3,-7,3,-10,7,1,8,-7,-5,10,-5,-7,-2,1,-6,-2,-1,4,4,2,-8,3,3,5,-1,7,5,-3,4,-2,6,1,-4,-1,7,-10,-10,-2,-10,-1,1,-1,4,5,9,-10,3,4,4,-6,1,-9,10,4,-8,3,6,8,-7,10,2,10,-1,5,-2,-8,8,3,-9,-7,5,6,3,1,-7,-7,1,4,-4,7,1,-6,-5,6,10,-10,-3,-6,10,-8,10,-6,5,-3,1,2,9,1,-8,7,10,5,-6,2,2,-5,-7,3,2,-8,8,-5,9,1,10,-7,9,-6,5,-3,9,-1,-8,8,-2,3,8,9,1,-5,9,-3,-6,-3,6,1,-5,-4,7,-3,10,-1,3,6,-9,6,4,8,8,-4,9,-2,6,-7,7,1,5,6,1,1,2,10,7,-10,9,-1,-9,-1,10,9,-8,-5,-4,3,4,5,-3,3,-1,5,7,8,-3,-5,9,-10,-6,-1,7,-6,-10,-6,4,-3,2,-6,-7,9,3,1,-9,8,8,-6,7,-8,2,2,-5,2,-2,-8,-1,9,2,8,2,7,-7,-7,-6,3,-8,4,7,-1,-2,-10,-8,9,-10,1,4,2,-2,8,-3,-6,4,-6,-3,4,8,10,-4,7,-7,5,-8,-3,-5,8,1,-1,-3,-8,6,4,9,-3,5,8,-2,-3,10,-3,-6,7,5,2,6,4,5,9,4,-8,4,10,1,-6,-1,7,10,-5,-1,4,-1,1,-8,10,2,8,-4,-2,4,-5,7,-2,-6,-5,-6,-4,7,2,6,7,8,4,6,6,-5,4,-2,2,-7,-7,-4,-1,8,8,3,-4,1,-6,5,8,4,-4,10,6,-1,-10,4,7,5,8,1,1,-1,10,9,-7,-9,9,9,7,-10,6,-10,-8,10,-3,9,4,2,-7,1,-6,-9,2,-2,-7,-7,6,7,4,-1,10,-2,-1,8,7,-4,-2,8,10,-2,-2,-9,8,-4,5,9,5,-10,8,-4,1,-6,2,4,5,8,-7,-8,5,7,-7,-7,-8,7,-9,8,1,-1,-1,-7,-1,6,6,-2,7,-2,4,5,8,-9,-4,-5,3,10,-10,-2,3,-10,-3,-1,2,3,3,-9,1,-8,-4,-10,8,3,-8,-3,-3,2,-5,-6,-6,-4,-8,-10,10,-2,10,3,3,-9,3,3,-5,3,8,9,-10,-3,-8,7,-2,4,10,-3,5,3,-4,-5,-1,-10,-10,3,4,8,10,7,6,-5,9,1,-7,-4,-1,9,9,-9,10,1,-9,-3,-6,-10,-4], dtype = "uint8")#candidate|5840|(520,)|const|uint8
const_5841 = relay.const([[9.222659,-8.187755,-0.002663,-2.274367,9.598516,-5.848309],[-6.595873,8.469367,-4.125513,8.446297,0.634305,-3.072741],[4.361075,6.568746,-6.617949,1.293985,5.298779,-7.716896],[2.131466,-7.830852,2.348556,-2.157287,-4.968392,-6.334839],[5.797738,4.341845,8.982033,-8.492117,7.263764,-1.332438],[0.095042,6.504832,7.653987,-1.355747,0.224888,-8.057263],[2.956483,-5.170904,-8.243302,4.835540,-1.370834,-4.374225],[-0.425904,-3.075673,-4.226879,6.710538,-6.923785,-5.272806],[3.167000,-5.573164,-0.968293,2.943601,7.394380,8.108786],[-7.613290,9.945241,0.103496,-7.954827,-2.070976,6.108773],[9.946236,-3.480122,1.516266,8.222531,-4.669279,1.039202],[-6.771620,-3.061833,4.035321,2.438416,-3.453495,-7.675586],[3.245599,-3.550123,-4.668978,-3.437107,-1.232593,5.693858],[-7.452600,-0.822282,7.781942,4.837054,-4.505233,3.124777],[7.876367,9.042854,-0.325789,3.876495,-9.358460,4.908468],[8.578458,-0.795187,9.896204,0.689443,0.906586,-1.985409],[-7.612961,-4.618138,2.732922,-0.773254,0.655354,0.625365],[2.472319,1.702389,-6.566410,-1.711892,-4.971174,9.921766],[2.622991,8.721939,3.674403,4.190780,4.185512,-2.357063],[2.581050,8.766207,4.192311,-5.057856,7.286847,-1.377209],[3.002270,9.405438,-0.478793,7.549390,-5.417060,-0.880251],[-3.291832,1.034856,8.056596,-2.941282,-3.192667,2.469190],[-4.874941,-3.501003,9.338261,2.092747,-8.121280,4.946353],[-1.207671,-7.479155,9.739248,-6.148718,-1.453739,-8.053447],[1.052757,-0.510214,-2.546111,1.253021,-0.635107,5.687810],[3.390693,-4.172174,1.657140,-0.444386,-0.754693,-3.582412],[6.510012,7.580828,-0.230551,8.475474,-1.540722,6.659929],[-0.027884,-0.319614,7.921813,-6.588253,-6.426832,-5.045448],[-6.088554,6.882260,2.289995,2.475274,-3.882472,-5.184570],[-3.492597,0.191519,1.768875,2.614446,1.790340,-4.532049]], dtype = "float64")#candidate|5841|(30, 6)|const|float64
const_5842 = relay.const([-3,-4,-9,10,-7,-3,1,-7,4,-3,-5,-5,-2,10,7,-5,6,-9,10,-8,2,-1,-5,7,10,-8,9,-3,-2,-2,4,7,-9,-9,-10,6,-6,4,-5,-3,-3,9,6,2,-5,-5,4,-1,10,3,-6,-1,-8,-4,-8,-8,-7,2,9,9,8,6,-8,6,8,-10,-10,7,-8,3,-7,8,7,5,-5,3,8,9,8,-6,7,-1,8,7,8,-3,-10,-6,4,5,6,7,9,2,1,4,-3,-7,2,9,3,-4,5,-1,3,-10,-6,-5,-1,2,4,-2,-2,9,4,-5,-10,-9,1,3,6,5,10,-8,-8,5,-8,-8,-7,-4,5,-7,10,-9,5,-7,7,4,-1,-10,-5,-10,3,3,6,-10,-1,-5,2,2,-8,-10,-10,-4,-9,1,-9,-6,8,2,-1,7,9,10,6,1,-10,10,-5,2,-7,7,3,-8,-3,7,7,5,-5,-9,7,-6,-9,9,-9,10,-6,-1,10,-2,-4,-6,-4,-6,6,-10,5,1,2,-10,5,-6,6,-1,-1,-9,1,-5,-8,4,6,8,1,5,-3,4,-6,-10,2,-9,2,5,3,8,10,-7,7,-8,-7,2,10,8,8,8,-7,2,-3,5,-6,-1,-7,5,-4,-10,5,-10,10,9,-6,-10,2,-4,-9,-4,4,-3,4,4,-8,8,8,8,-8,8,2,8,-9,2,3,-5,1,-9,6,2,8,9,8,6,4,9,-3,1,-1,-2,-9,3,-6,5,-6,10,-7,-9,-6,-2,-10,-8,7,-9,-2,-5,9,-3,10,9,-2,-9,-7,5,-5,4,7,-2,-1,5,1,8,-9,7,6,-5,-2,-9,-7,2,1,-9,10,-5,2,6,-9,5,5,7,-5,-2,-1,8,7,-9,-10,9,2,10,-3,9,-1,9,-4,7,-3,10,2,-9,10,9,8,9,-1,4,-7,5,-5,4,-3,3,-2,7,3,-4,7,4,-3,-5,-3,-8,2,-8,8,-8,-7,-6,-6,-4,2,-3,-3,-2,9,3,-8,2,-4,7,-4,-4,8,9,-2,4,-3,1,-3,4,-4,-5,8,10,-10,6,4,5,10,9,-9,6,-9,7,3,5,6,10,9,-8,9,-3,3,-6,-1,7,-7,1,-1,9,8,1,-3,-10,3,1,3,4,1,-1,6,-4,10,-8,-2,4,10,-5,-8,-7,-4,-2,10,5,7,-6,1,-3,-3,-1,-7,-8,2,-2,-10,-1,7,1,9,-1,-1,7,-4,4,-3,-4,-10,7,-6,4,6,-10,7,2,-9,-2,7,2,-2,-9,-1,-5,-5,-5,-1,-7,-4,-2,10,9,-5,10,2,3,8,1,5,10,-8,1,6,6,6,-1,2,-6,2,-8,5,2,-3,3,-9,-10,-2,6,-10,7,2,10,9,8,-1,-10,8,-2,-3,1,-9,-8,-3,-6,9,-6,-3,-3,-4,6,9,-2,5,8,-8,-1,9,6,4,-4,7,-3,8,-5,-7,10,6,-3,-7,-3,1,1,-3,-1,-1,1,-6,-10,-10,-9,-7,-5,2,-6,-10,-1,2,2,-1,2,9,-1,10,9,8,1,8,8,5,-8,-2,-5,-3,10,9,5,9,-2,1,1,1,7,-7,1,1,-6,-10,-9,-7,8,-3,5,-3,1,10,5,3,5,7,1,-7,4,7,2,-4,-3,3,1,8,-10,-5,2,-7,7,4,3,-4,-9,-10,-8,-1,-1,10,2,3,6,7,5,8,-9,1,-4,-8,-7,-5,-1,7,-5,-4,-7,-1,5,5,-3,4,-5,-1,-2,-1,-7,8,-5,2,4,-8,-2,-5,6,-1,-3,10,-1,-7,2,-4,6,-9,-6,2,-4,2,9,5,9,6,-10,-2,-1,-4,10,-2,-9,-9,9,-5,-4,-10,-6,2,-2,9,-7,5,-1,9,-8,-10,-1,3,2,6,7,-1,-3,-8,1,9,10,6,-4,5,-9,10,-3,1,-1,1,2,-10,-7,2,-8,8,6,1,10,-5,-8,8,-7,5,5,-9,2,-2,10,6,6,7,-7,-3,2,-5,-4,-10,-1,3,4,5,-1,-4,-2,10,4,9,4,10,1,-6,10,7,2,-9,10,-4,-10,4,9,-7,9,-4,-1,9,-2,8,1,-3,-5,-1,6,-8,2,-6,5,-3,3,-7,4,6,-1,5,-10,-6,1,-10,3,-3,9,7,5,10,9,-2,-5,8,3,-9,4,-7,-5,1,-6,-4,-4,-1,-2,6,-8,4,-7,1,-8,4,-8,-6,-10,2,1,-1,6,3,2,-1,8,-6,-10,4,1,-9,-8,3,-1,-4,-10,7,-8,6,-10,2,4,2,9,1,5,-9,6,1,-9,-2,-1,-7,-9,-8,-1,4,10,-9,-1,7,2,-9,1,8,8,-9,8,7,-10,-6,-5,8,6,2,-8,5,8,8,5,-9,7,1,5,-5,-3,10,1,3,3,-7,6,-1,-6,-6,-9,4,-3,3,3,7,-9,3,-2,9,4,8,-10,6,2,-8,5,6,9,9,5,9,10,-6,-10,8,1,-4,7,-8,2,-9,-8,-8,-2,2,-1,-3,-2,-3,-2,-8,9,5,-4,4,-6,4,7,4,6,-7,6,-8,-7,-3,-4,-3,3,-10,8,10,8,-2,5,-4,-2,10,1,6,-10,6,-8,-8,6,7,-5,-1,-10,-8,1,-7,-3,10,-4,-1,-7,-10,-7,-7,8,6,-10,6,10,-6,8,-3,-8,-6,-3,-7,-5,7,-5,4,6,-7,-6,6,-1,-6,-6,1,-6,-8,-7,9,-4,-3,-9,-2,-6,1,6,-10,10,7,7,-1,6,-1,-4,4,-7,7,-5,-2,2,2,1,-4,-10,-8,-10,1,8,-10,4,-2,-2,-10,-2,7,-8,-1,-3,-1,-7,-1,9,2,5,4,5,-2,-7,-3,7,-2,-8,-3,1,3,6,-4,5,-2,9,2,4,-4,-8,-1,-6,1,7,7,1,-5,-6,-10,8,-3,-10,4,1,-6,-2,8,-1,5,3,7,4,9,-2,2,4,8,2,-9,-7,-6,3,8,-10], dtype = "int16")#candidate|5842|(1152,)|const|int16
call_5838 = relay.TupleGetItem(func_5653_call(relay.reshape(var_5839.astype('uint64'), [5, 10, 12]), relay.reshape(var_5839.astype('uint64'), [5, 10, 12]), relay.reshape(const_5840.astype('uint8'), [520,]), relay.reshape(const_5841.astype('float64'), [180,]), relay.reshape(const_5842.astype('int16'), [1152,]), ), 1)
call_5843 = relay.TupleGetItem(func_5660_call(relay.reshape(var_5839.astype('uint64'), [5, 10, 12]), relay.reshape(var_5839.astype('uint64'), [5, 10, 12]), relay.reshape(const_5840.astype('uint8'), [520,]), relay.reshape(const_5841.astype('float64'), [180,]), relay.reshape(const_5842.astype('int16'), [1152,]), ), 1)
func_4867_call = mod.get_global_var('func_4867')
func_4869_call = mutated_mod.get_global_var('func_4869')
var_5848 = relay.var("var_5848", dtype = "float64", shape = (160,))#candidate|5848|(160,)|var|float64
call_5847 = relay.TupleGetItem(func_4867_call(relay.reshape(var_5848.astype('float64'), [10, 4, 4])), 0)
call_5849 = relay.TupleGetItem(func_4869_call(relay.reshape(var_5848.astype('float64'), [10, 4, 4])), 0)
func_921_call = mod.get_global_var('func_921')
func_925_call = mutated_mod.get_global_var('func_925')
const_5856 = relay.const([[-4,10,6,3,10,-4,-7,-9,6,9,-8,-7],[8,4,-9,-8,1,-3,5,-8,5,-1,-7,-7],[8,7,2,-9,-7,-6,3,-1,1,-3,1,-3],[-3,7,3,-5,9,10,-5,2,2,-10,4,-9],[-7,-1,-6,-3,9,1,5,6,7,5,-5,-3],[7,-1,-9,5,-5,-4,-3,9,8,-5,-7,7],[8,-5,-9,1,-4,-4,-7,8,-5,4,-1,9],[5,2,-8,-6,-1,1,-1,-3,-7,9,7,-5],[-2,-10,1,2,-7,10,3,2,-6,3,5,2],[4,5,1,-2,8,3,5,-7,-10,-8,2,-5],[2,6,6,9,-9,9,-2,-10,7,2,-9,-4],[8,1,1,8,6,1,2,-9,-2,-3,-1,7],[-8,-10,1,-7,-6,-1,-4,8,-3,-1,-9,-7],[9,7,5,-10,4,2,-3,-4,-7,4,4,-3],[-3,3,5,4,2,-5,-5,1,-4,7,-2,-4],[8,2,2,-10,-8,-8,4,8,-3,-4,8,10],[-10,9,7,-3,-3,-8,10,3,-10,-2,3,4],[-3,-6,6,2,2,8,-9,6,-5,9,10,-3],[3,9,-5,1,1,-8,-3,1,-4,-5,-9,4],[-5,9,-5,10,-8,-3,9,-1,-1,-7,9,-10],[-8,-3,7,-1,10,-2,4,2,-8,-7,9,9],[-6,6,6,-10,2,1,3,-6,4,8,9,-10],[-7,5,-4,7,3,-9,1,5,-3,5,-10,8],[8,-4,8,-3,2,2,-4,-7,-6,8,-6,-1],[1,4,8,7,-8,2,-6,2,4,-5,-6,-7],[-1,-10,-10,-5,-8,2,10,3,-2,-5,-9,-8],[2,-3,-8,-1,-5,-5,3,-6,8,8,-9,6],[-5,2,10,8,5,-2,-2,-3,5,4,7,-10],[9,-5,-8,-10,3,-10,-3,-5,-10,3,-2,-10],[4,7,-3,-8,-5,-1,-5,-8,4,-1,8,7],[-5,-9,7,-5,3,-4,-9,1,7,-8,2,3],[6,4,10,-2,-4,-1,2,5,10,-4,-2,-2],[6,3,8,5,-8,7,-4,4,-10,10,2,7],[-5,-10,5,-7,-4,10,-6,5,6,3,-1,-8],[1,2,5,7,2,6,1,-10,-2,8,-5,-2],[-5,3,-2,-8,8,8,1,3,5,1,-1,-1],[-1,-2,2,-9,9,-4,10,-5,1,-4,-1,4],[-6,-1,5,-9,1,-3,5,3,-4,6,8,-6],[7,9,-7,-5,9,-10,-8,-3,10,3,9,-1],[2,9,-1,6,5,7,10,4,7,-6,-5,-3],[4,-10,3,-6,-9,6,-9,9,10,5,9,1],[-5,1,5,-5,-4,-2,8,-4,2,-8,-4,5],[4,-6,-3,-1,4,-10,-7,-8,2,8,9,-7],[-5,5,4,3,-2,-3,8,5,5,10,2,3],[-1,4,-6,-2,5,-10,7,-7,4,8,-3,1],[10,-1,3,-4,6,4,-8,3,-6,-4,-6,-4],[2,-2,4,-4,7,7,-9,4,-1,-9,5,-4],[-5,-3,-3,3,10,-2,-1,9,4,-7,8,-10],[10,-8,3,7,2,1,1,-1,-1,5,9,-9],[-1,6,8,6,7,-4,-8,8,-2,-5,7,2],[-9,10,-5,1,-5,-5,4,2,7,-2,8,-7],[3,3,-8,-7,-4,-6,-6,-4,3,8,3,1],[-6,7,4,-4,3,-6,2,9,10,6,-2,9],[-10,-5,6,2,-10,8,10,3,-1,8,10,-1],[3,-6,-8,2,-1,2,4,1,-3,-2,-3,10],[-1,7,-6,-4,8,5,7,5,-4,-7,-2,-4],[7,2,8,4,-10,5,-9,-8,10,-2,-1,-7],[5,3,4,2,3,3,-6,5,8,-4,10,6],[5,9,7,3,3,9,5,-9,7,-2,-9,-9],[-8,5,-6,9,9,9,5,-9,-10,-6,-2,-3],[-8,-10,-3,-7,-5,-2,3,6,9,-9,-9,-5],[-7,-2,-7,-7,-2,-6,-7,10,5,-5,-3,-2],[6,1,10,-2,8,-7,1,-3,-1,1,-2,-2],[-3,5,7,10,-9,-9,-6,9,7,10,9,4],[-2,2,8,-3,2,-8,-7,4,-9,6,-6,-1],[2,4,7,-5,-4,7,2,2,-7,-3,-9,2],[-2,5,-5,2,10,-1,3,-9,3,-7,-5,-9],[9,9,-10,8,-9,-7,-9,-4,-4,-7,-2,-4],[-2,10,-9,-10,-10,8,9,-10,-9,5,-8,9],[5,-9,-4,-2,3,6,8,4,-6,-5,-10,-5],[4,9,10,-5,5,2,8,-8,3,-7,-1,-8],[-5,3,-2,4,-10,-9,10,5,-2,5,-10,-3],[8,-5,-10,9,10,1,-2,-9,8,3,3,-3],[7,-5,2,4,-7,-10,-6,2,-3,-7,8,7],[5,3,-2,-5,4,-7,-7,6,-10,10,-5,1],[7,-3,7,10,2,1,2,2,-5,2,-10,5],[5,5,10,-10,-7,2,4,5,7,-9,-2,-5],[-10,9,3,9,9,-2,3,4,4,3,7,-4],[-3,-3,2,10,-3,1,10,8,7,8,9,-9],[9,-2,9,1,9,-5,-2,-4,-3,-4,6,-4],[-1,2,-6,4,-2,-2,-4,-10,-8,3,-9,6],[-3,-7,-4,3,-5,5,5,-7,-8,7,3,-5],[4,1,-7,7,7,3,7,7,1,3,3,-5],[10,-5,3,2,-9,3,9,-8,-6,-8,-6,-4],[8,5,7,4,-3,-8,8,4,-2,5,-6,8],[5,4,-2,8,-6,-1,2,10,-4,-2,10,-2],[-2,4,2,-2,9,-8,-6,2,1,7,-1,-1],[-7,9,-10,2,10,1,-9,10,-1,-10,7,1],[5,1,4,1,6,1,-3,-7,-10,-8,1,6],[6,-9,5,-1,9,-6,-6,6,-9,6,-9,-6]], dtype = "int64")#candidate|5856|(90, 12)|const|int64
call_5855 = func_921_call(relay.reshape(const_5856.astype('int64'), [8, 9, 15]), relay.reshape(const_5856.astype('int64'), [8, 9, 15]), )
call_5857 = func_921_call(relay.reshape(const_5856.astype('int64'), [8, 9, 15]), relay.reshape(const_5856.astype('int64'), [8, 9, 15]), )
func_5763_call = mod.get_global_var('func_5763')
func_5765_call = mutated_mod.get_global_var('func_5765')
const_5887 = relay.const([-7.693399,-5.458765,9.460008,2.684227,6.193128,3.887136,-1.627675,-7.918940,0.415349,-9.018012,3.380433,7.476295,-0.480056,6.347447,7.818600,-4.241844,-3.471295,2.268638,-4.066332,-4.177717,-9.999974,9.776160,8.821308,-0.854642,-3.254752,-2.062545,-6.051793,-6.025239,-6.631842,-6.613478,-9.901960,9.945147,-2.170700,4.978167,6.348011,-1.202665,0.088325,9.177309,0.655961,-7.597936,-2.597656,5.631418,-8.587555,5.533284,4.146409,-5.991622,-6.063674,-8.369877,2.968449,2.811724,8.654628,-9.514797,6.405898,5.112673,1.865188,-3.998468,1.549292,-8.840772,1.067046,-6.539847,-7.273680,1.772775,-5.988789,9.049069,0.979856,-7.923556,-4.880716,5.070854,-0.658102,-5.943647,-2.870842,3.867467,-4.895726,7.099568,-8.339098,-3.193954,4.404511,6.330653,9.909037,8.513274,-4.406460,-8.838078,-2.079621,-9.965187,-2.716313,-6.904723,-6.672241,-6.098802,5.393713,-4.158803,2.456944,-6.743362,-9.951301,-3.251368,-4.081295,-7.699032,-8.914817,2.843794,8.341946,6.549133,-7.624841,-6.650395,-1.661921,6.308406,6.924749,6.607312,-4.801078,5.729423,8.304705,3.920238,7.271937,-2.047723,-9.354602,-0.397857,-1.399483,7.854767,5.228014,8.533677,1.404697,5.007154,-2.043668,6.160350,8.251263,-4.366525,0.607732,-5.424729,4.687288,-2.673505,0.973081,3.942573,-9.545045,-9.502471,6.317416,6.154534,1.287037,3.050363,1.148905,-8.903241,0.297292,-5.558741,-2.584121,3.742962,1.563796,4.407140,-7.966550,-3.500701,-2.571464,-5.114548,-9.046450,-3.856499,-1.066716,-8.073316,-9.470088,-4.124424,0.552595,-0.714359,-7.884131,4.734551,8.753296,-3.109279,-2.883930,2.503453,7.659995,-5.571121,6.648971,8.626630,-5.035387,-0.672584,1.113996,-6.862023,2.938780,-7.691666,-8.404222,7.618705,4.275573,2.373653,3.393038,-2.979160,-2.366244,-8.038817,3.230236,2.986608,4.728408,-3.314122,4.784767,8.889806,-2.415520,-8.060499,-1.694831,-6.928086,6.400928,0.198266], dtype = "float64")#candidate|5887|(192,)|const|float64
call_5886 = relay.TupleGetItem(func_5763_call(relay.reshape(const_5887.astype('float64'), [6, 2, 16])), 0)
call_5888 = relay.TupleGetItem(func_5765_call(relay.reshape(const_5887.astype('float64'), [6, 2, 16])), 0)
uop_5896 = relay.atan(var_5848.astype('float32')) # shape=(160,)
output = relay.Tuple([bop_5818,call_5838,var_5839,const_5840,const_5841,const_5842,call_5847,call_5855,const_5856,call_5886,const_5887,uop_5896,])
output2 = relay.Tuple([bop_5818,call_5843,var_5839,const_5840,const_5841,const_5842,call_5849,call_5857,const_5856,call_5888,const_5887,uop_5896,])
func_5905 = relay.Function([var_5817,var_5839,var_5848,], output)
mod['func_5905'] = func_5905
mod = relay.transform.InferType()(mod)
var_5906 = relay.var("var_5906", dtype = "float64", shape = (7, 5, 6))#candidate|5906|(7, 5, 6)|var|float64
var_5907 = relay.var("var_5907", dtype = "uint64", shape = (600,))#candidate|5907|(600,)|var|uint64
var_5908 = relay.var("var_5908", dtype = "float64", shape = (160,))#candidate|5908|(160,)|var|float64
output = func_5905(var_5906,var_5907,var_5908,)
func_5909 = relay.Function([var_5906,var_5907,var_5908,], output)
mutated_mod['func_5909'] = func_5909
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5948 = relay.const(-3.032123, dtype = "float32")#candidate|5948|()|const|float32
var_5949 = relay.var("var_5949", dtype = "float32", shape = (11, 10, 7))#candidate|5949|(11, 10, 7)|var|float32
bop_5950 = relay.mod(const_5948.astype('float32'), var_5949.astype('float32')) # shape=(11, 10, 7)
output = bop_5950
output2 = bop_5950
func_5954 = relay.Function([var_5949,], output)
mod['func_5954'] = func_5954
mod = relay.transform.InferType()(mod)
var_5955 = relay.var("var_5955", dtype = "float32", shape = (11, 10, 7))#candidate|5955|(11, 10, 7)|var|float32
output = func_5954(var_5955)
func_5956 = relay.Function([var_5955], output)
mutated_mod['func_5956'] = func_5956
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5985 = relay.var("var_5985", dtype = "uint8", shape = (15, 6, 4))#candidate|5985|(15, 6, 4)|var|uint8
var_5986 = relay.var("var_5986", dtype = "uint8", shape = (15, 6, 4))#candidate|5986|(15, 6, 4)|var|uint8
bop_5987 = relay.right_shift(var_5985.astype('uint8'), relay.reshape(var_5986.astype('uint8'), relay.shape_of(var_5985))) # shape=(15, 6, 4)
func_2771_call = mod.get_global_var('func_2771')
func_2774_call = mutated_mod.get_global_var('func_2774')
var_6001 = relay.var("var_6001", dtype = "uint8", shape = (1, 630))#candidate|6001|(1, 630)|var|uint8
call_6000 = relay.TupleGetItem(func_2771_call(relay.reshape(var_6001.astype('uint8'), [5, 9, 14])), 3)
call_6002 = relay.TupleGetItem(func_2774_call(relay.reshape(var_6001.astype('uint8'), [5, 9, 14])), 3)
func_4686_call = mod.get_global_var('func_4686')
func_4688_call = mutated_mod.get_global_var('func_4688')
var_6004 = relay.var("var_6004", dtype = "float64", shape = (180,))#candidate|6004|(180,)|var|float64
call_6003 = relay.TupleGetItem(func_4686_call(relay.reshape(var_6004.astype('float64'), [5, 3, 12])), 0)
call_6005 = relay.TupleGetItem(func_4688_call(relay.reshape(var_6004.astype('float64'), [5, 3, 12])), 0)
bop_6010 = relay.divide(bop_5987.astype('float64'), relay.reshape(var_5986.astype('float64'), relay.shape_of(bop_5987))) # shape=(15, 6, 4)
uop_6029 = relay.asinh(bop_6010.astype('float64')) # shape=(15, 6, 4)
func_1701_call = mod.get_global_var('func_1701')
func_1704_call = mutated_mod.get_global_var('func_1704')
const_6036 = relay.const([[-2.644874,3.423963,-1.398836,-1.213427,3.163351,7.986000,-0.634284,-3.578433,-0.398784,-1.464073,7.868100,-7.540142,1.103997,9.855458,9.487732,-1.230127,8.535913,9.769117,0.857205,1.436477,-8.855820,8.739773,8.834784,-8.970415,6.563196,-0.744085,8.734861,1.631944,9.907005,-6.501578,3.002069,-6.144895,-1.958502,-2.288909,9.976164,-1.218479,-7.661672,-6.557167,4.026133,-7.440905,-7.302814,-8.638272,0.570252,-2.618663,-3.517832,8.511548,4.303749,-2.580018,4.604323,-4.834373,-7.251516,7.209022,-9.950393,5.792046,-4.621525,-6.424733,-8.448869,-4.985814,6.621621,-0.365431,-3.448506,5.482101,9.631602,9.485044,2.862549,-7.716721,3.616386,-6.486109,8.021956,2.404168,9.133743,-7.075006,-2.122585,9.343953,8.014339,3.250803,7.216468,-4.300585,-3.037089,-2.794881,5.078066,-3.706683,-8.103938,-4.868673,-0.231262,8.320399,-5.985078,7.868743,-0.411951,-5.485152,4.200459,9.875490,-5.676630,6.709455,-2.293792,-0.520765,-5.905254,-9.308591,-3.274621,2.248736,-8.184660,-7.078330,-5.512129,-0.501999,4.170756,5.246595,-5.768907,5.275666,-3.288093,-9.026988,-3.819639,-5.289212,4.924705,9.436101,0.215518,-3.853177,5.770366,-1.080535,-7.100248,1.333513],[6.954701,-1.033118,9.510797,2.852096,8.677376,-2.527174,-9.568520,-9.780040,4.487400,2.260743,-8.459281,4.208573,2.085355,-3.866971,-5.462002,8.649586,-2.250924,7.659312,5.305607,7.588164,-1.015494,1.972203,-6.461732,-1.926859,3.293182,-2.393177,4.171873,-1.572554,-7.119263,7.656097,-5.311013,-2.434701,-1.348208,-8.468103,-2.576823,-2.215676,-8.749473,-8.850232,-2.282960,-0.494939,-7.294129,6.449037,-6.079777,-9.068607,-3.978877,3.302052,-8.975661,4.386589,-0.723671,8.708513,3.212705,5.244415,1.616048,-1.264798,0.599373,2.516438,-1.820787,0.704497,-9.960351,3.006570,3.663046,2.792621,-1.243945,2.582499,4.520316,-1.392998,-6.589738,-8.843794,5.122147,6.619064,7.111655,-8.267673,-0.883333,3.683245,-3.965393,8.195731,1.012386,9.447143,-5.365090,-0.540026,0.222327,-6.502062,7.455209,3.160324,-9.175478,3.671404,-5.635888,7.102060,5.153069,7.084434,3.345786,-8.867348,-5.146398,-8.826118,-5.483780,-2.275940,7.095927,0.017032,2.541871,0.431518,-5.463969,2.856352,3.722872,1.237343,2.746835,-5.747055,2.132706,-8.614114,-4.989781,-9.301431,3.958159,5.264179,-0.669143,6.557254,9.060821,8.113595,6.453896,-8.135232,6.871072,-1.676710]], dtype = "float32")#candidate|6036|(2, 120)|const|float32
const_6037 = relay.const([-1,-8,7,6,3,7,-5,-8,-1,5,-10,-2,-6,-2,-1,2,-1,4,-4,-3,4,3,-4,-10,-1,-3,-6,6,3,-9,-6,-10,-1,-4,-3,-4,-6,-10,7,-5,5,-1,-2,4,-6,2,4,-6,6,-2,6,-8,10,-1,8,-7,-4,5,-7,1,-10,5,7,-10,3,4,7,-2,-9,-6,-10,1,5,-10,-3,-8,-8,-8,4,9,-10,-9,-4,6,5,-2,6,9,-7,4,1,-4,4,-3,-2,6,-3,10,5,3,-7,6,-8,5,-3,-5,2,3,-3,-4,9,6,-4,-1,10,10,-9,-1,1,-2,6,3,9,3,4,-7,-7,7,9,4,-4,-9,3,9,5,-10,-9,8,-9,-9,8,8,-9,9,-4,9,7,10,9,4,1,6,9,9,5,-2,4,-10,-6,-2,2,-10,-1,-1,-2,-4,-8,-4,-2,-6,-8,2,8,-6,-1,-7,-10,-3,1,-9,6,-7,-2,3,3,3,-8,5,6,-2,-10,9,-10,-8,4,-4,-1,-9,4,-8,-3,-8,5,9,-5,-10,2,2,2,2,9,10,-9,-4,-3,7,3,-9,9,4,10,8,5,-3,1,-5,-1,4,-6,-4,1,8,-9,4,6,-1,-4,-8,10,-6,-7,5,7,-10,6,-5,5,2,-2,-3,6,7,-4,7,-4,-7,5,9,-1,-7,4,5,7,5,-6,10,-2,-10,-9,2,-1,6,-1,9,5,1,8,-1,5,-4,4,-1,-10,3,-1,5,-4,-9,6,-10,-4,4,-9,8,-3,-5,8,-3,10,-8,-3,-4,-1,-5,-10,2,6,-5,1,2,-8,10,4,2,1,6,10,4,-2,-2,4,4,10,-8,3,-6,7,-6,-9,-7,-10,-8,-3,-4,9,-7,10,4,3,2,10,-8,3,-9,4,-5,-1,5,-3,-10,6,7,1,7,-1,-3,-6,9,-6,-10,-4,-7,7,-8,-10,5,8,-2,-1,-6,-8,7,-1,-3,-5,-1,9,-4,7,-7,2,7,-1,-10,7,-9,6,-1,2,-6,-7,6,5,2,-5,3,8,1,8,-6,-9,2,-8,-2,6,-7,-7,9,-6,3,10,1,5,-9,-3,-10,9,6,4,10,-8,-5,2,6,-4,9,7,2,-2,-5,-6,-5,-6,4,3,-1,1,-5,-9,10,1,5,-1,-2,-8,6,-9,-10,-6,-6,-8,-9,3,1,8,-3,-5,9,-7,-9,-5,2,-9,-10,7,-3,2,-4,-7,-7,10,-4,-10,1,1,4,-4,-3,-9,8,-8,8,1,5,9,-1,-1,2,-7,9,-2,5,9,8,10,3,5,9,3,5,7,-1,-10,-10,-5,-6,-5,-2,8,2,8,-5,-7,10,-10,4,-1,-6,7,2,6,-8,9,-5,3,-5,5,3,-6,-3,-8,-4,9,3,-5,-7,-1,3,-8,6,-6,-10,1,-2,-6,5,-10,-4,8,-5,2,-5,-9,-2,-7,-8,-9,5,-4,1,3,-6,5,-4,-7,8,-2,-4,-3,10,7,6,-6,8,-9,-10,4,-5,-5,-2,9,2,6,4,4,-1,10,7,-10,6,3,-10,-1,6,4,-8,9,-4,-10,6,2,3,7,-10,6,-6,3,5,-1,-1,10,-7,3,-6,2,5,1,8,9,-7,-5,5,9,3,1,-4,-5,-2,4,1,9,-2,5,10,-7,2,-10,-3,7,8,1,-10,2,-7,7,-4,6,-9,-3,7,-6,5,6,-4,3,-10,3,-1,10,-3,5,-5,1,-2,-3,-8,7,-6,9,-5,-1,7,5,-8,5,5,-9,9,-4,-6,-9,7,-8,-1,2,-9,3,6,-3,4,-8,-8,-1,6,-5,4,9,-1,2,-3,-8,-7,10,8,10,1,-4,6,5,1,-6,-3,-4,-1,-6,1,9,-4,3,-2,7,2,4,5,2,9,-2,-3,7,-5,10,-9,-5,-6,7,3,3,3,5,-7,7,3,8,-6,-1,10,-6,-10,1,1,-6,-2,-2,-6,-5,2,-7,-1,-4,-2,5,-8,-10,-4,-4,9,-9,-9,-5,8,8,-4,-6,9,-10,-4,-4,8,9,-5,6,3,4,-8,6,3,-5,-8,9,-8,-10,-6,5,8,-7,-8,-6,10,-2,-3,4,2,-2,-10,-10,2,1,4,-3,9,-3,4,-8,3,3,-10,-1,-6,-5,-6,5,2,-7,3,9,1,-10,5,-9,10,4,9,-4,-2,3,3,5,5,4,-1,1,6,7,9,-10,8,-1,-1,3,-6,-1,-6,6,6,1,-4,-1,4,-2,4,4,-5,-8,-1,-2,-9,8,7,9,8,3,4,4,2,3,-7,-7,-3,1,-7,-3,-3,-2,-6,6,-10,-6,2,4,-6,-1,5,7,4,2,-2,6,7,-6,8,7,-10,4,-4,8,-7,-7,9,-8,4,4,6,-1,-7,-6,-8,5,-7,-2,9,-3,10,-7,-3,-4,9,-3,8,-8,9,-4,-8,-7,-7,-7,10,3,1,-1,-6,-1,2,10,8,-9,-3,-5,1,7,2,4,-6,-2,-6,-3,-7,-5,-10,1,4,-4,2,-7,1,10,-10,5,-1,4,9,10,-4,5,2,2,5,-3,5,-9,-4,2,-3,-9,-4,-6,10,9,2,8,9,2,-5,-10,-4,7,-7,-1,5,-7,-5,-2,-8,1,-2,-6,8,-4,2], dtype = "int16")#candidate|6037|(1008,)|const|int16
call_6035 = relay.TupleGetItem(func_1701_call(relay.reshape(const_6036.astype('float32'), [10, 3, 8]), relay.reshape(const_6037.astype('int16'), [84, 12]), ), 0)
call_6038 = relay.TupleGetItem(func_1704_call(relay.reshape(const_6036.astype('float32'), [10, 3, 8]), relay.reshape(const_6037.astype('int16'), [84, 12]), ), 0)
bop_6042 = relay.mod(var_5986.astype('float32'), relay.reshape(bop_6010.astype('float32'), relay.shape_of(var_5986))) # shape=(15, 6, 4)
uop_6063 = relay.exp(uop_6029.astype('float64')) # shape=(15, 6, 4)
uop_6069 = relay.log10(bop_5987.astype('float32')) # shape=(15, 6, 4)
func_4813_call = mod.get_global_var('func_4813')
func_4817_call = mutated_mod.get_global_var('func_4817')
const_6080 = relay.const([-2.845309,0.479825,-2.889485,-6.714046,9.821654,-4.084108,-8.311415,0.092929,-9.374204,-3.131240,9.780009,0.437491,-3.865221,-4.373946,5.438067,6.326729,-4.356270,2.213271,-6.016204,8.460706,-8.877013,7.103611,4.007149,-6.018111,0.091128,7.385294,3.272610,-6.401379,9.138692,7.460417,2.488440,-4.271998], dtype = "float32")#candidate|6080|(32,)|const|float32
const_6081 = relay.const([-6,8,3,9,-2,5,-3,-4,-3,-2,-4,4,9,-4,-6,1,-9,7,5,-10,-6,10,-3,8,5,7,-2,-3,-8,4,-3,6,-3,4,9,-5,-8,4,9,-7,3,6,-5,-10,8,-7,-10,3,-7,1,10,3,-1,7,-1,6,8,-3,3,-8,-9,1,9,3,10,2,-10,-10,-3,4,-3,10,-4,-6,6,9,-8,-5,4,-3,-1,-8,9,5,5,6,10,9,8,-3,1,4,-2,-8,-6,-5,-5,2,-1,8,4,5,-1,-8,-2,-5,-2,-2,-7,-5,1,-4,2,-2,2,-10,3,10,2,5,8,-6,-9,7,1,3,-1,-8,-2,10,10,2,-7,-9,10,-10,-4,-3,7,2,-1,9,1,-8,8,7,-8,-3,-1,2,8,4,-10,-6,-6,-4,3,-2,1,-7,8,6,3,10,4,9,-6,4,9,-5,-10,3,-2,-8,-3,-1,9,6,9,-9,-8,4,1,-1,2,5,-5,-7,-1,10,-8,-6,8,-10,-8,1,5,-1,7,-7,8,-3,8,9,-3,-7,10,7,-3,-7,5,-8,-5,-7,3,-1,5,3,4,-5,9,-7,5,-6,-2,-1,3,7,10,-8,9,-3,5,-8,-6,-5,6,5,-7,-10,-6,-8,-2,-4,-1,3,-6,-2,2,10,-4,-4,-7,2,10,5,-2,-6,5,5,4,4,6,-1,-8,6,-5,4,9,-8,-5,8,3,2,-4,6,8,-10,-7,-3,-3,1,-1,-2,9,1,2,-3,-1,-6,5,3,-1,-6,-5,7,1,-5,-3,3,10,7,-5,-8,-9,-3,6,6,10,-8,-2,-10,3,5,6,-7,4,-10,-6,7,-3,-8,6,-6,7,-1,1,3,-1,-9,6,5,9,1,2,-1,-6,-3,4,-1,5,9,5,9,10,-5,1,-8,-5,-8,-7,-3,-9,-9,8,-1,4,-9,3,9,4,-2,3,-9,-1,5,-5,2,7,-6,-3,-9,8,8,-6,5,-10,-8,8,-1,-2,6,-7,1,10,-10,-4,-10,7,-6,-6,4,9,-10,7,4,10,-9,8,10,7,1,-6,-6,2,7,-2,-5,-1,7,-6,9,9,-10,8,-7,9,8,10,8,5,-1,6,-9,-8,-7,7,8,-4,5,10,6,-9,-5,-10,2,-10,-4,6,5,2,-8,-10,7,7,-7,-3,6,-9,2,6,5,-4,2,4,3,9,-7,8,-2,-5,3,4,-1,-10,2,-4,2,8,7,9,-10,-1,-7,10,-3,-8,6,-6,5,-9,-4,4,10,-7,-3,-6,5,1,-6,1,7,-8,3,1,1,-7,-2,8,4,-10,-2,-2,-6,8,4,-1,-1,6,-4,4,-7,-2,-3,-5,-8,3,-3,-8,8,9,7,4,3,-2,9,4,-6,-6,-7,-3,6,-6,3,-8,-9,-2,10,-4,10,-10,1,-8,2,-5,7,-5,-4,-3,-2,7,-9,10,8,2,10,-8,10,8,-10,-1,1,-9,5,-1,5,10,10,5,4,6,1,-4,2,1,3,8,-7,8,-10,-3,-10,9,5,-7,-1,-2,9,-5,8,-4,9,-6,2,2,-4,9,10,-3,1,-3,-5,9,2,6,10,-10,5,-9,1,-8,-6,10,-4,10,-5,10,-9,3,-2,1,2,-5,9,-1,-3,7,6,5,10,-5,-10,4,-5,3,7,-1,7,-5,10,-9,5,-4,3,8,7,-8,-10,8,-1,-3,5,9,-2,8,-10,-8,-1,5,4], dtype = "uint16")#candidate|6081|(660,)|const|uint16
call_6079 = relay.TupleGetItem(func_4813_call(relay.reshape(const_6080.astype('float32'), [2, 16, 1]), relay.reshape(const_6080.astype('float32'), [2, 16, 1]), relay.reshape(const_6081.astype('uint16'), [660,]), ), 2)
call_6082 = relay.TupleGetItem(func_4817_call(relay.reshape(const_6080.astype('float32'), [2, 16, 1]), relay.reshape(const_6080.astype('float32'), [2, 16, 1]), relay.reshape(const_6081.astype('uint16'), [660,]), ), 2)
output = relay.Tuple([call_6000,var_6001,call_6003,var_6004,call_6035,const_6036,const_6037,bop_6042,uop_6063,uop_6069,call_6079,const_6080,const_6081,])
output2 = relay.Tuple([call_6002,var_6001,call_6005,var_6004,call_6038,const_6036,const_6037,bop_6042,uop_6063,uop_6069,call_6082,const_6080,const_6081,])
func_6090 = relay.Function([var_5985,var_5986,var_6001,var_6004,], output)
mod['func_6090'] = func_6090
mod = relay.transform.InferType()(mod)
var_6091 = relay.var("var_6091", dtype = "uint8", shape = (15, 6, 4))#candidate|6091|(15, 6, 4)|var|uint8
var_6092 = relay.var("var_6092", dtype = "uint8", shape = (15, 6, 4))#candidate|6092|(15, 6, 4)|var|uint8
var_6093 = relay.var("var_6093", dtype = "uint8", shape = (1, 630))#candidate|6093|(1, 630)|var|uint8
var_6094 = relay.var("var_6094", dtype = "float64", shape = (180,))#candidate|6094|(180,)|var|float64
output = func_6090(var_6091,var_6092,var_6093,var_6094,)
func_6095 = relay.Function([var_6091,var_6092,var_6093,var_6094,], output)
mutated_mod['func_6095'] = func_6095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mod.get_global_var('func_5379')
func_5381_call = mutated_mod.get_global_var('func_5381')
call_6131 = relay.TupleGetItem(func_5379_call(), 0)
call_6132 = relay.TupleGetItem(func_5381_call(), 0)
output = call_6131
output2 = call_6132
func_6136 = relay.Function([], output)
mod['func_6136'] = func_6136
mod = relay.transform.InferType()(mod)
mutated_mod['func_6136'] = func_6136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6136_call = mutated_mod.get_global_var('func_6136')
call_6137 = func_6136_call()
output = call_6137
func_6138 = relay.Function([], output)
mutated_mod['func_6138'] = func_6138
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6163 = relay.const([[[4.157245,-5.901712,-6.266339,6.126499,5.312792,-9.080232,3.621560,6.479510,-2.737593,6.161272,-6.037256],[-1.744757,5.458555,8.185048,6.376489,1.415308,-1.276602,9.957494,1.632248,-7.195883,0.379922,7.176472],[-6.943266,-1.504911,-7.027168,-9.983611,0.383358,5.545032,-6.699277,7.984510,0.822400,-5.101224,-5.122943],[-5.971901,-9.936866,6.895948,-9.080300,-0.507014,5.743314,6.135096,7.495733,6.429804,-6.356869,3.193452],[3.750723,-8.867887,5.231129,6.242271,-7.405801,4.275005,-1.816502,-7.571699,2.209397,1.765272,0.698703]],[[-8.900145,-3.631548,3.542838,-3.703092,8.789613,4.182850,-1.861636,-2.061159,1.983259,-0.569304,-7.348209],[9.753760,7.016773,0.662687,7.249463,6.314063,8.019980,2.277152,-0.072325,1.538439,-4.503399,7.799062],[-1.456973,-3.603494,-7.792942,-3.709805,3.286344,2.458566,3.328453,4.108026,-9.150113,-3.251050,3.364148],[-7.690483,-9.947540,1.331547,5.854608,3.061623,0.613317,7.045608,-0.308301,-1.853972,5.232580,-1.996297],[-7.433799,6.982395,-7.011939,5.046722,-0.901305,4.174210,7.749551,8.373524,9.855876,-9.602844,-2.472073]]], dtype = "float32")#candidate|6163|(2, 5, 11)|const|float32
var_6164 = relay.var("var_6164", dtype = "float32", shape = (2, 5, 11))#candidate|6164|(2, 5, 11)|var|float32
bop_6165 = relay.power(const_6163.astype('float32'), relay.reshape(var_6164.astype('float32'), relay.shape_of(const_6163))) # shape=(2, 5, 11)
output = bop_6165
output2 = bop_6165
func_6168 = relay.Function([var_6164,], output)
mod['func_6168'] = func_6168
mod = relay.transform.InferType()(mod)
var_6169 = relay.var("var_6169", dtype = "float32", shape = (2, 5, 11))#candidate|6169|(2, 5, 11)|var|float32
output = func_6168(var_6169)
func_6170 = relay.Function([var_6169], output)
mutated_mod['func_6170'] = func_6170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5379_call = mod.get_global_var('func_5379')
func_5381_call = mutated_mod.get_global_var('func_5381')
call_6206 = relay.TupleGetItem(func_5379_call(), 1)
call_6207 = relay.TupleGetItem(func_5381_call(), 1)
func_5575_call = mod.get_global_var('func_5575')
func_5580_call = mutated_mod.get_global_var('func_5580')
const_6216 = relay.const(10, dtype = "int16")#candidate|6216|()|const|int16
const_6217 = relay.const([-1.821669,7.915978,-0.817463,-6.587646,5.877976,-9.712799,-2.597887,4.594659,-1.458205,7.329299,-3.699812,-3.638598,-7.352903,6.530047,9.600536,-8.032877,5.231372,-7.050813,6.282925,-2.204688,3.689984,-1.103852,-6.927309,0.879899,2.874090,-9.541981,-4.563356,4.596668,3.646048,-6.463562,0.041828,-3.278819,7.707081,-7.782182,-3.364137,5.002298,8.137692,4.229683,-0.235167,3.690244,5.973477,3.999961,-6.912545,-4.872463,-7.021362,-1.749783,2.499221,-5.752544,4.758383,3.618202,6.437891,5.504803,-3.703044,1.332289,9.127104,-2.587858,-0.317916,-8.467717,-8.039402,-7.309377,-5.718194,-2.343096,-2.379047,-5.282250,3.669240,4.183864,-3.007270,-7.394243,8.400233,3.837443,-6.788103,4.110751,-6.707442,6.983045,-9.475457,4.811252,-7.681167,-1.509251,-3.203333,-6.129034,-6.839070,-9.891284,-5.352191,2.365648,-8.673681,-2.016033,-2.537911,-3.814695,-7.560138,-4.383833,7.315470,6.853758,7.094688,-8.086915,-4.684555,-5.371283], dtype = "float64")#candidate|6217|(96,)|const|float64
call_6215 = relay.TupleGetItem(func_5575_call(relay.reshape(const_6216.astype('int16'), []), relay.reshape(const_6217.astype('float64'), [4, 24]), relay.reshape(const_6217.astype('float64'), [4, 24]), ), 2)
call_6218 = relay.TupleGetItem(func_5580_call(relay.reshape(const_6216.astype('int16'), []), relay.reshape(const_6217.astype('float64'), [4, 24]), relay.reshape(const_6217.astype('float64'), [4, 24]), ), 2)
bop_6225 = relay.left_shift(const_6217.astype('int32'), relay.reshape(call_6215.astype('int32'), relay.shape_of(const_6217))) # shape=(96,)
bop_6228 = relay.left_shift(const_6217.astype('int32'), relay.reshape(call_6218.astype('int32'), relay.shape_of(const_6217))) # shape=(96,)
output = relay.Tuple([call_6206,const_6216,bop_6225,])
output2 = relay.Tuple([call_6207,const_6216,bop_6228,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_252 = relay.var("var_252", dtype = "float64", shape = (16, 9, 9))#candidate|252|(16, 9, 9)|var|float64
uop_253 = relay.atanh(var_252.astype('float64')) # shape=(16, 9, 9)
bop_271 = relay.less(var_252.astype('bool'), relay.reshape(uop_253.astype('bool'), relay.shape_of(var_252))) # shape=(16, 9, 9)
bop_286 = relay.less_equal(uop_253.astype('bool'), relay.reshape(bop_271.astype('bool'), relay.shape_of(uop_253))) # shape=(16, 9, 9)
output = relay.Tuple([bop_286,])
output2 = relay.Tuple([bop_286,])
func_308 = relay.Function([var_252,], output)
mod['func_308'] = func_308
mod = relay.transform.InferType()(mod)
mutated_mod['func_308'] = func_308
mutated_mod = relay.transform.InferType()(mutated_mod)
var_309 = relay.var("var_309", dtype = "float64", shape = (16, 9, 9))#candidate|309|(16, 9, 9)|var|float64
func_308_call = mutated_mod.get_global_var('func_308')
call_310 = func_308_call(var_309)
output = call_310
func_311 = relay.Function([var_309], output)
mutated_mod['func_311'] = func_311
mutated_mod = relay.transform.InferType()(mutated_mod)
var_634 = relay.var("var_634", dtype = "float32", shape = (16, 8, 9))#candidate|634|(16, 8, 9)|var|float32
var_635 = relay.var("var_635", dtype = "float32", shape = (16, 8, 9))#candidate|635|(16, 8, 9)|var|float32
bop_636 = relay.floor_divide(var_634.astype('float32'), relay.reshape(var_635.astype('float32'), relay.shape_of(var_634))) # shape=(16, 8, 9)
output = relay.Tuple([bop_636,])
output2 = relay.Tuple([bop_636,])
func_648 = relay.Function([var_634,var_635,], output)
mod['func_648'] = func_648
mod = relay.transform.InferType()(mod)
mutated_mod['func_648'] = func_648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_648_call = mutated_mod.get_global_var('func_648')
var_650 = relay.var("var_650", dtype = "float32", shape = (16, 8, 9))#candidate|650|(16, 8, 9)|var|float32
var_651 = relay.var("var_651", dtype = "float32", shape = (16, 8, 9))#candidate|651|(16, 8, 9)|var|float32
call_649 = func_648_call(var_650,var_651,)
output = call_649
func_652 = relay.Function([var_650,var_651,], output)
mutated_mod['func_652'] = func_652
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1150 = relay.var("var_1150", dtype = "float64", shape = (14, 8, 9))#candidate|1150|(14, 8, 9)|var|float64
uop_1151 = relay.erf(var_1150.astype('float64')) # shape=(14, 8, 9)
func_648_call = mod.get_global_var('func_648')
func_652_call = mutated_mod.get_global_var('func_652')
const_1160 = relay.const([1.315053,-8.327535,0.422356,6.314478,-1.788987,9.336340,9.152266,6.005120,3.741629,-3.503445,-1.294372,-9.194513,3.621191,5.853761,-5.889054,0.283109,3.156608,3.622466,2.690753,5.501425,3.236854,6.017624,2.110802,1.331359,-9.142464,3.415791,3.831358,4.704775,-4.821482,-6.331132,6.178689,-2.270241,0.230276,0.333667,-4.538012,3.586486,-0.560684,-8.017711,4.005606,-5.966759,1.273369,-6.348002,1.062774,4.442670,-5.009019,1.535107,-1.623928,-7.115076,3.317720,-7.496392,9.097349,4.384968,-2.462997,0.288565,0.949135,6.014872,1.581522,-2.698420,-4.241474,-9.254373,2.792928,-0.155261,1.268593,5.720209,-2.505201,6.065223,9.945874,2.930851,-0.248477,1.919663,-9.412779,5.294195,-2.638285,4.972672,2.062229,2.964601,1.659858,-8.290793,0.103278,8.108425,1.724339,6.296783,3.306931,6.547374,9.867762,6.117892,6.048229,6.071076,-4.837972,-3.178640,-1.141588,-9.163984,3.529459,-2.508706,2.685341,3.604221,-7.472444,9.270210,3.486359,-4.235504,-0.734097,4.406618,-7.439038,4.703901,8.153705,-2.077964,-4.390925,7.708872,-1.141741,-4.225893,5.830622,-9.712275,-5.995146,5.074720,-3.286131,-4.170112,7.418863,2.052933,-1.158744,6.563406,-5.598171,7.783875,-5.983083,0.136801,-0.976740,-6.634468,8.459690,-2.327892,9.012409,9.616576,9.788847,-6.762977,5.256095,-4.504081,-8.585793,7.434874,0.353423,4.342929,4.561571,-9.776494,-7.618464,5.989492,-4.431360,8.063000,1.591249,1.435641,-7.176477,-7.394379,3.596939,6.334965,-1.011997,1.122671,0.652975,3.563217,7.403647,6.507681,8.772785,1.611376,-9.888883,6.957602,1.135940,-7.728467,-4.628383,-4.607083,5.835277,2.070433,-8.581470,3.338256,-7.527239,0.524956,0.930852,8.782683,8.190504,-6.883075,-8.254689,-6.236353,-4.744104,8.649654,7.264429,3.803376,-6.173575,-2.908036,9.969734,-6.555650,-3.906576,9.088310,-8.239228,-1.842801,9.302765,5.902012,-7.196138,7.369821,-7.670479,9.124083,-5.078986,-4.645981,-5.281845,-4.785665,1.228366,8.059116,-2.170669,8.798299,0.049883,-8.701403,-2.121480,-1.017402,5.132751,5.121674,2.974130,9.027365,6.291059,-9.764070,-2.496766,5.141452,1.472202,-7.502851,6.554214,5.551007,8.304925,8.758357,3.304266,0.962231,-6.201090,9.394354,2.693584,4.281266,-8.038508,-3.356201,-1.531364,-5.593267,-6.349227,5.037177,-5.798060,1.925397,0.502689,2.829824,-3.511232,8.928720,-5.216585,-8.335093,-1.382110,-8.994366,2.195303,4.126834,5.467781,-9.311902,-8.707851,7.992938,-2.313907,5.487270,-4.131790,-7.072010,2.554003,3.428093,-5.898954,8.826816,9.499554,-9.152013,9.917092,6.906455,4.535768,-2.375959,0.993354,0.708227,-3.637782,7.857685,9.732071,-0.023490,-5.250251,-0.451694,5.061492,0.800369,-7.252803,-4.039922,0.004566,-0.449274,8.234405,8.796467,-9.415368,-6.368594,1.236661,1.148809,6.991129,1.466573,2.825028,9.435384,5.259390,-6.539494,-1.607822,9.463400,-8.229529,-1.347081,8.086703,-8.218347,-2.050908,-3.167730,2.766788,8.641544,2.381524,-0.612369,-8.577823,-8.362311,-7.982167,0.803622,0.621369,-0.368588,-9.471119,2.944367,-1.171691,-4.815552,-0.539739,-2.204518,-8.078275,-2.778684,-4.328072,7.413267,-4.347597,8.180038,-6.458618,1.024466,8.569397,4.924507,1.050252,9.362567,-6.393291,-7.400138,7.549630,-4.551753,-8.935217,4.316435,3.497253,-6.151521,-2.178211,-7.230049,-6.201443,-2.883798,-9.184119,-5.655698,-1.714259,3.274409,3.773484,6.702112,0.870889,-5.937871,6.069212,-6.154861,-6.508328,-0.899072,-7.619463,5.888479,6.128246,3.929102,2.430046,1.306051,0.463401,5.698119,-5.930538,6.002501,-5.528584,-6.049183,-1.967516,9.098496,9.332225,8.297384,-9.708797,-7.908221,1.031268,2.260240,1.614128,-9.814059,-0.652199,1.829360,5.010043,-8.572578,9.373598,0.266718,9.386100,-1.741876,-1.173884,1.194314,7.809667,-3.725413,7.415552,8.161515,-6.341098,7.865474,3.678310,-9.909330,-7.137463,4.354294,4.125919,1.608768,4.238028,0.269335,3.078122,-7.249833,-9.808724,6.124994,6.403516,6.536163,1.179683,-9.138260,1.941238,4.725774,1.499499,0.055575,4.508688,1.435091,4.334365,-9.777032,1.795850,0.686258,-1.323474,1.303574,0.095993,9.459906,-2.081088,-7.823379,-7.961515,3.260764,-7.838720,-4.629835,7.676733,-6.768613,-1.025164,5.258845,1.389250,-9.283407,-4.303251,0.568826,-2.155012,-8.088522,-6.335474,-8.268763,-5.975886,-9.085457,8.621789,-0.280645,7.727226,9.883302,2.383252,7.293699,8.064970,-1.027018,-8.043351,2.635305,2.206379,2.191762,-0.829470,-7.743852,0.469180,5.325878,-2.532575,0.768130,-0.897910,2.736636,1.205313,3.739026,-3.917495,-5.843390,1.328598,7.389622,4.411909,9.244195,2.423019,-8.478331,-4.579643,6.638702,0.834047,-1.520741,5.296235,-0.391361,0.845675,6.050231,4.194402,-1.093465,7.829873,7.630535,-4.696469,2.635892,3.258932,-6.721922,9.087752,-1.242116,-9.991620,5.178042,-8.198422,-0.537692,1.695575,-8.456893,-2.767713,0.060283,-0.655067,-9.736045,1.521160,-7.975512,-2.526123,5.407197,-4.848169,-6.308437,-7.251676,-0.248633,1.466243,-5.388641,-4.823854,-7.327073,9.581024,6.756919,-3.785531,-3.290968,7.178716,-8.376836,7.413420,8.921880,3.383576,-7.586809,1.994134,7.718200,-0.069614,6.843485,-8.129014,2.039160,-0.574434,1.183644,-5.912712,-8.343457,9.013927,1.745201,-8.277249,-0.099232,5.834566,-7.583233,-9.251127,1.488595,9.040666,0.741572,-3.941110,-8.004873,8.903185,-7.983861,1.805071,8.738594,6.498933,-6.693407,-6.087546,-0.701597,7.375033,-4.730129,-8.092650,-9.756972,8.977675,1.824795,-0.991525,-7.027350,1.370587,-0.446592,8.943984,6.451313,-4.960644,2.420164,0.706108,-8.819781,-2.411066,-9.395750,9.782843,-7.985355,-8.118062,-4.162192,9.409079,4.891158,6.462015,-5.265313,0.274550,-5.191920,0.564816,-5.700864,9.215567,4.585367,-3.658175,-8.159599,6.973418,-5.365470,-5.580163,-1.701489,4.347782,-7.999187,3.070834,3.845066,6.903982,9.842911,1.543605,4.603708,-5.461604,-4.329855,-7.053661,-3.096833,-1.951267,3.686211,-5.985871,-2.283034,8.945412,-1.861493,9.206473,-5.367021,5.245960,5.388633,6.676090,3.437978,-5.152458,-8.547838,-8.685634,-0.879879,8.876642,8.954921,0.100834,4.010641,0.473667,-4.800061,-6.613592,4.987902,-6.413603,-6.446198,3.640081,4.577669,-0.904933,-8.155718,2.548589,7.081068,-0.326718,-6.698205,-7.437381,7.070081,1.258787,5.795743,-0.960950,-7.206110,8.974984,-2.403280,-1.428825,-1.605093,-2.611008,-9.538231,1.349989,-2.679345,-5.788304,-8.575318,0.963243,-7.306824,1.375281,-1.104975,-0.642382,-4.413407,6.333692,-6.191011,-1.064487,-1.350499,4.072256,-7.830264,-3.673817,2.798121,3.577809,-8.875873,2.750158,-2.760657,-6.074152,-6.246056,0.275056,-5.777739,4.833097,-1.644458,-9.918583,-9.541684,6.709933,-6.913765,-1.531117,9.436762,8.159267,-9.722522,-5.242942,7.758998,3.229257,-8.603080,-9.813065,4.072382,5.458189,-3.530859,3.292930,-6.342944,0.604984,-0.225807,-7.207315,-3.382424,4.348293,-7.854570,7.016955,-6.207513,0.369697,7.256582,-3.677284,7.899951,-1.140344,2.878201,9.954295,6.750062,-5.377497,-5.760943,2.028148,0.301638,9.435390,-4.793199,0.829745,6.570896,4.324665,0.773477,9.714975,-0.883857,-5.474119,5.648788,4.941522,-6.080094,7.702803,-8.657323,6.019674,3.988050,5.948392,4.728587,2.601941,3.863950,2.024384,-6.842971,9.933277,8.735828,-7.696235,0.912108,3.557357,3.187043,-5.148123,9.639915,4.639833,-4.761679,-9.707031,-0.720370,-2.713153,7.899395,-2.777674,8.176933,-7.959648,5.303073,7.686323,-1.026490,-6.857461,5.036859,2.605975,1.880867,-7.124317,1.102219,9.752617,-2.096543,9.060912,-1.122417,0.157615,9.320686,-7.624055,-6.780815,-0.194935,-6.132949,-1.625961,5.353579,-4.329118,6.852454,2.995975,8.179566,-8.876498,-6.459193,5.597692,2.498259,-1.996994,-9.155494,0.269832,1.040054,8.252053,-0.190096,8.215851,2.158132,-3.836850,-5.574572,0.815024,2.423596,3.325936,4.333403,-8.175245,7.282741,-6.855302,2.382312,-2.086039,0.068416,-0.226337,-4.398883,4.791922,2.755689,-0.147618,2.106161,0.786996,4.352481,5.737740,-8.625367,6.373241,-0.778079,4.255897,6.943162,-1.270249,-7.769371,-2.895754,0.060686,-7.984988,-8.505927,-0.227782,2.458154,-4.565484,9.361864,3.452023,6.026440,5.985083,-1.976286,6.595562,7.980624,-1.827385,-1.274753,-6.808603,5.112437,-8.192918,7.193260,9.827042,-9.714785,9.830978,3.974206,1.061980,9.589784,7.345761,-4.527385,2.171323,-5.402570,0.853413,-4.347192,-4.954037,-7.353751,1.499027,-5.439113,-1.096768,-3.064866,-9.491683,6.260111,-2.297697,-5.889091,-7.848218,-3.521219,-5.419857,-1.676632,4.740674,6.350744,-4.865939,-2.644731,4.345626,-8.794465,-1.542742,2.481594,1.364618,-7.531109,8.828417,5.531603,2.852021,3.502529,-7.793104,5.926745,8.318949,-9.869448,2.529159,2.516991,4.494579,-4.820074,8.153998,-7.727041,-5.754910,-3.796054,6.634484,-4.064495,-0.650445,3.481048,9.523153,-2.731018,6.677609,-0.170712,-6.287092,-9.788405,5.030133,8.491945,-8.459735,5.181301,-4.209388,2.703867,9.097827,8.386193,4.524822,7.100000,3.924455,3.118034,-7.691609,2.279087,-7.736941,-7.074528,9.717302,-3.820624,0.872577,-5.908721,8.067647,0.005446,2.335210,-6.445399,7.517720,2.957672,-9.259579,-9.305728,-4.122642,0.846411,3.224775,3.232674,3.794460,-5.850667,3.688005,-6.218037,-4.619291,-2.994894,-9.522270,3.924939,-3.029444,5.438194,0.688833,0.001509,6.888022,-9.537835,-6.772452,8.754631,5.672912,-3.893329,3.906196,-8.590100,-7.690680,8.426463,1.430501,5.150567,-3.436588,-4.043899,-0.190697,1.620996,-3.436912,-0.012284,5.366681,-9.095103,0.784959,-8.235140,-4.534373,2.165358,9.224820,3.787397,8.044104,-6.528129,2.778175,8.114058,-7.748906,-5.453699,7.074971,6.117912,-7.720656,0.678477,-7.841085,-3.299695,-1.646183,7.821499,1.145937,2.674272,8.984169,-8.903679,-5.130498,-1.103946,-3.985725,-7.203456,9.239326,3.896478,0.435071,-1.027125,-6.539460,-8.898037,-9.443400,-0.876684,1.585892,-8.092436,5.552982,7.042890,-2.129560,-5.251936,-0.539256,-2.652421,-5.103640,-0.525728,3.700375,6.013481,1.808030,-9.602028,4.836897,3.092033,-7.129262,-7.248084,-5.102897,-5.995547,0.381919,-6.786860,1.815762,-8.809066,-7.313943,7.144744,8.304664,5.380288,0.273157,-0.803890,-8.802447,7.076757,1.664366,-8.703281,6.678923,-2.323262,7.052087,0.221485,-4.045556,-3.742674,-2.396447,-6.680025,-2.358341,-3.829750,0.304483,-5.412826,6.257453,5.628955,5.290450,-4.303408,-0.431759,-5.902049,2.464917,-1.239689,6.170840,-4.949224,-0.606157,2.526172,-7.146047,-2.802374,-3.029554,7.067422,-1.224528,-6.792009,-4.158355,0.978397,6.067249,-6.775232,7.232340,-2.718553,1.684736,-5.028568,2.504751,-7.618233,1.217661,-9.418291,-3.468839,7.629274,-1.599535,-1.947121,8.722717,1.763859,8.580979,9.449463,-5.613859,3.916928,0.346194,3.160150,0.888536,-9.837762,1.158878,-6.952648,5.779574,-3.358304,4.075565,-2.333092,-8.611758,-9.570295,-0.058067,-9.688329,9.842616,-6.844898,9.087424,-7.057461,-5.361913,-6.564803,2.993995,9.841673,-6.981010,-0.306639,-0.365767,-3.098702,-1.667175,8.579688,0.042903,0.929181,0.659695,8.427984,0.081659,-0.749027,-8.758141,2.860597,0.434078,-6.473662,1.889378,-1.392455,-4.797354,-9.550304,6.860491,9.023789,-4.118532,1.827812,-7.346155,-2.633233,-7.312326,9.599429,7.625604,-7.725132,4.848790,1.751368,5.695138,2.797718,-8.886797,-9.853142,1.296454,-8.002185,-4.983518,5.696119,-9.625272,6.170713,-2.807852,-3.166841,0.475397,7.076241,0.395445,0.216388,-5.720638,-7.859415], dtype = "float32")#candidate|1160|(1152,)|const|float32
call_1159 = relay.TupleGetItem(func_648_call(relay.reshape(const_1160.astype('float32'), [16, 8, 9]), relay.reshape(const_1160.astype('float32'), [16, 8, 9]), ), 0)
call_1161 = relay.TupleGetItem(func_652_call(relay.reshape(const_1160.astype('float32'), [16, 8, 9]), relay.reshape(const_1160.astype('float32'), [16, 8, 9]), ), 0)
output = relay.Tuple([uop_1151,call_1159,const_1160,])
output2 = relay.Tuple([uop_1151,call_1161,const_1160,])
func_1167 = relay.Function([var_1150,], output)
mod['func_1167'] = func_1167
mod = relay.transform.InferType()(mod)
var_1168 = relay.var("var_1168", dtype = "float64", shape = (14, 8, 9))#candidate|1168|(14, 8, 9)|var|float64
output = func_1167(var_1168)
func_1169 = relay.Function([var_1168], output)
mutated_mod['func_1169'] = func_1169
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1439 = relay.var("var_1439", dtype = "int32", shape = (10, 13, 3))#candidate|1439|(10, 13, 3)|var|int32
const_1440 = relay.const([[[-3,4,-9],[-6,9,6],[-10,1,3],[-5,6,-6],[1,1,10],[-9,-10,-8],[7,-1,-7],[-8,-6,-9],[5,-7,2],[-10,-1,-10],[-6,5,2],[-6,9,-9],[6,5,6]],[[-9,10,4],[1,-6,6],[-7,-4,2],[-8,-9,8],[3,-7,6],[-6,6,2],[9,-5,10],[-10,-6,9],[-2,-6,4],[-1,6,7],[3,6,1],[-1,-5,-5],[8,2,-2]],[[9,6,7],[9,-8,7],[-8,9,2],[-6,-10,9],[-6,1,-10],[8,6,-7],[5,4,3],[-9,4,7],[-7,10,3],[-1,8,-6],[-4,2,-10],[7,-4,-9],[2,10,-3]],[[5,9,7],[7,-3,-1],[-5,-5,9],[5,1,6],[-8,5,6],[4,-1,-9],[5,8,2],[6,8,-6],[7,10,-3],[-7,7,-9],[-3,6,-6],[-2,-10,-8],[10,2,5]],[[5,-9,1],[3,3,1],[3,-4,8],[4,10,10],[6,4,-10],[-6,-3,1],[-7,4,-4],[-1,-1,-6],[3,-10,-5],[3,-10,9],[-5,4,10],[-4,10,6],[-4,-1,-9]],[[7,8,-9],[6,4,6],[-8,8,1],[-9,-2,4],[5,4,5],[2,9,9],[-4,-7,-3],[-10,8,-6],[4,3,-8],[-8,6,-6],[7,-3,9],[2,9,2],[6,4,9]],[[-2,-7,3],[-3,8,-10],[10,-4,4],[7,7,-9],[7,-10,-9],[2,4,-8],[7,-5,-1],[-7,4,6],[-5,6,-8],[-2,10,5],[-10,3,-8],[-10,-4,-8],[-10,8,8]],[[-4,6,8],[4,-10,-1],[4,-1,7],[9,4,10],[8,9,-8],[9,-4,1],[-10,2,-9],[-4,6,1],[-7,-1,-4],[3,3,-6],[-2,2,-10],[8,7,-2],[4,-1,-3]],[[4,-5,-1],[7,10,9],[-2,1,-7],[-6,2,4],[2,-10,-8],[9,1,8],[4,-7,7],[10,-4,-5],[3,5,-7],[-1,-9,-1],[-4,-1,-4],[-8,-6,3],[-10,7,6]],[[-7,3,6],[3,6,10],[8,-10,8],[8,2,-2],[1,10,6],[-10,-4,-6],[-3,-10,10],[-8,4,7],[-2,10,1],[1,-2,10],[4,2,4],[-10,9,-6],[2,7,-2]]], dtype = "int32")#candidate|1440|(10, 13, 3)|const|int32
bop_1441 = relay.equal(var_1439.astype('bool'), relay.reshape(const_1440.astype('bool'), relay.shape_of(var_1439))) # shape=(10, 13, 3)
func_648_call = mod.get_global_var('func_648')
func_652_call = mutated_mod.get_global_var('func_652')
var_1455 = relay.var("var_1455", dtype = "float32", shape = (576, 2))#candidate|1455|(576, 2)|var|float32
call_1454 = relay.TupleGetItem(func_648_call(relay.reshape(var_1455.astype('float32'), [16, 8, 9]), relay.reshape(var_1455.astype('float32'), [16, 8, 9]), ), 0)
call_1456 = relay.TupleGetItem(func_652_call(relay.reshape(var_1455.astype('float32'), [16, 8, 9]), relay.reshape(var_1455.astype('float32'), [16, 8, 9]), ), 0)
func_648_call = mod.get_global_var('func_648')
func_652_call = mutated_mod.get_global_var('func_652')
call_1457 = relay.TupleGetItem(func_648_call(relay.reshape(var_1455.astype('float32'), [16, 8, 9]), relay.reshape(call_1454.astype('float32'), [16, 8, 9]), ), 0)
call_1458 = relay.TupleGetItem(func_652_call(relay.reshape(var_1455.astype('float32'), [16, 8, 9]), relay.reshape(call_1454.astype('float32'), [16, 8, 9]), ), 0)
func_308_call = mod.get_global_var('func_308')
func_311_call = mutated_mod.get_global_var('func_311')
const_1469 = relay.const([[9.414158,0.275228,7.157048,-9.170589,4.426310,0.634247,-1.104725,-9.488823,4.690224,-5.407101,2.617689,-9.072224,2.233385,-8.363504,-7.482373,-0.446827,-7.996613,-1.533128,-9.892869,7.892438,-4.210162,-4.776232,4.166217,-3.287712,-7.585618,-8.046701,7.990178,-1.566681,5.492941,-8.572932,-1.345345,6.474901,3.173880,-2.879603,-7.266812,3.578593,1.049073,9.074950,-1.643393,8.180358,5.790603,4.609291,-6.500195,0.360850,-9.049315,2.471022,0.853270,5.342030,-6.763202,-2.551099,4.974054,-2.933971,4.397391,0.879603,6.899370,-9.292983,8.657570,2.223160,5.333293,5.107465,5.646342,-0.329372,0.688169,5.440574,-6.986336,9.182369,7.465459,-9.283357,6.913079,-5.779907,-9.933924,4.723092,-0.041341,-1.159172,-2.379245,-2.232170,-8.142153,-1.620758,-7.978219,-0.799562,5.293920,3.157271,6.511037,-8.222537,5.557617,1.688839,4.094541,8.385539,9.973564,-4.866307,3.909204,8.008083,0.784608,-8.189135,5.476590,-0.234138,-6.194683,9.277196,4.823460,-1.588485,1.421714,4.018527,0.733159,-4.896440,-5.267056,-8.718188,2.030240,4.120468,5.905381,7.731577,-6.642108,2.549577,8.966329,-7.527764,-9.004254,2.226517,-2.974491,4.774021,-2.885426,8.524798,-5.906138,-9.827137,5.126358,-2.738486,3.984003,-7.056513,-3.737061,-0.797256,-6.472858,-3.116872,-1.884149,-8.227735,-0.120340,-7.769734,-7.173079,6.007253,7.788369,-5.027372,-3.653803,4.305121,-4.516011,9.390957,6.335984,-2.984488,9.017951,0.490323,8.225331,-2.258553,5.264944,-9.839552,-1.755991,-7.588155,0.065283,1.334666,8.221245,-6.500197,-2.001288,-7.980012,3.559849,0.873253,-0.455994,-1.473937,2.921355,0.689239,4.986623,-7.585415,-0.172757,7.176580,7.646565,3.666644,4.023645,4.814916,4.898624,-8.148624,-2.965126,5.944966,-6.701457,-5.288386,7.262314,-3.989751,3.226989,-3.807557,9.121670,-6.095578,-5.497051,1.200777,4.782169,9.316216,3.233963,8.283981,-4.098729,-5.734560,9.343290,-3.129114,-6.146405,6.680187,8.920566,2.346565,-2.102728,0.651437,6.076716,-2.324264,4.133641,-9.488132,4.090221,4.234425,-9.793144,-1.304315,-5.005955,-8.254209,4.976081,1.480347,-6.284938,7.189391,-0.800103,2.774454,-3.595141,-2.899642,-4.799874,-6.847921,-8.221852,5.583478,5.685779,-2.281396,-6.095931,-9.224161,4.255895,-3.673495,8.265352,-1.454477,-1.263101,7.071223,3.402247,6.563416,-7.854100,-3.814637,2.928687,-3.104621,4.594822,-6.898424,5.306185,-1.985132,-9.976062,-7.802844,-6.752735,5.542004,5.291605,6.236207,-1.456533,-1.831742,-8.828970,-6.201249,-7.932911,-0.226488,1.985920,6.590414,-0.756399,6.680548,-7.777418,-2.804646,-4.287332,8.716714,-1.146145,5.477041,1.361952,-9.669598,-4.590745,1.773981,4.641062,-0.487095,1.848457,6.259488,2.868154,-0.509761,5.916325,1.416994,9.832419,4.087902,9.031999,-2.563595,-1.690326,2.757089,8.127426,1.822469,-4.290737,-9.051176,0.101387,1.522553,-1.222361,-3.541618,-1.361025,-7.561069,-4.563412,-5.807343,-4.993610,4.815878,2.757348,3.317389,0.174541,1.755706,-9.012252,3.433398,3.447333,8.060506,9.371726,2.487773,2.489575,8.840170,9.418712,6.912708,-4.322386,-1.779345,5.819558,7.398169,-3.664093,5.006215,-6.490547,-2.036122,9.226357,9.396521,2.983448,7.898131,-2.439996,4.680610,-7.422311,2.886693,6.858204,-7.469758,1.695043,8.873339,-8.814454,1.288932,-3.777884,-8.203908,4.626935,-7.771017,6.683814,4.149800,-5.502660,7.339749,8.313171,2.415399,3.219024,-3.302215,6.918350,-6.366997,-7.624411,-8.970508,-6.645160,-1.900305,7.344434,-0.603642,-2.140322,-1.726835,-4.330093,3.914348,7.557987,-4.366107,-1.636377,4.646540,3.428797,3.001691,0.229137,-5.704571,8.023528,7.000504,7.763223,5.741494,8.954258,-8.643063,2.819630,-5.057768,-8.008104,3.333829,0.391641,2.954360,1.428681,-7.908088,-8.065335,-7.778410,4.052812,-9.205385,2.499857,4.467962,-5.582828,8.607261,6.891452,-9.778542,-4.029867,0.401157,-2.924633,-1.444070,0.938367,2.289323,2.114420,4.865112,6.524840,0.901495,0.339192,-2.917152,-5.032113,-5.734407,2.236436,-8.619882,-4.550700,2.012857,-2.896197,-0.424425,-8.940663,1.260397,9.978337,-2.921995,3.265780,-8.970436,-3.800034,-6.335619,-3.172457,3.129955,5.312912,7.709790,4.760558,-4.136873,0.492989,8.132098,-1.704116,2.068851,-3.278267,3.169316,-2.280030,-0.733775,-0.318636,7.936075,9.741763,-2.437081,-3.130293,9.240242,-0.106648,7.928904,-8.163794,0.879898,-6.494290,3.322857,-3.139240,-8.944749,-8.306322,-6.706670,2.674985,5.420840,-0.048911,2.999912,9.798336,-9.259946,-1.715310,3.305235,-2.335059,-3.971502,-1.389973,1.461337,-0.621231,2.930643,8.442147,2.407940,0.632946,2.478796,-3.326967,6.396428,7.361778,4.493097,4.426542,8.985969,0.291324,-1.307958,9.568605,-8.963098,2.100672,-9.019534,0.799163,0.495864,-3.636686,-4.794363,9.524294,-7.298298,7.457756,3.211862,8.224802,6.663514,-7.566358,-1.655614,0.789125,6.933496,-2.939163,6.149336,0.507873,-6.985088,-8.651259,-3.648605,-9.037969,-0.156979,-6.380611,5.938737,-5.990902,-5.400600,-2.158329,-1.745826,9.658481,8.348688,3.989978,-8.445659,4.301302,-8.639377,4.992973,-8.296694,-1.052055,-8.231551,-5.940544,-8.692904,-4.330929,9.473852,3.504222,-7.664533,6.289921,-5.499987,9.311260,7.055055,3.704516,-5.484025,-5.871164,0.309046,8.568641,9.601581,7.344340,8.060651,-1.854400,-1.721007,-6.746287,-4.829231,-0.085900,8.289198,1.046882,5.335444,-8.939527,-0.291585,-6.438435,9.547771,8.653701,4.882034,-0.526667,-4.450454,4.798098,-2.267389,0.529608,3.436247,8.511346,3.645143,7.727473,-0.756819,-9.232306,-2.808098,-7.522361,2.580647,-9.740242,-6.694095,8.283640,8.205854,5.200820,-7.549286,-1.683333,5.218685,-8.906953,7.223319,5.873446,-1.816667,-4.026947,-9.287529,-9.732525,-2.878391,-3.546343,-8.914741,4.138914,-5.138824,0.993276,4.221796,-2.320486,-1.306959,-9.138966,-5.627457,0.756409,1.667748,9.301701,-2.013429,7.939899,-8.023382,2.621895,9.483904,-5.181293,2.200706,3.897679,2.570035,4.063334,-6.031277,0.339930,0.187740,5.022855,-5.163414,-5.069257,7.731752,0.812889,4.610659,-8.453232,5.364793,-3.903831,-0.165157,-2.113254,8.614505,9.848656,5.727274,-4.641690,8.519073,5.813596,-7.885763,-7.959602,-2.039726,6.106241,-9.310450,-2.740888,-8.638217,7.362558,-8.916746,3.137423,3.688328,-3.910966,1.638045,-7.051537,-5.519823,3.126140,6.144826,-0.801189,3.232259,-6.374936,0.413601,-5.133997,8.686798,2.910688,0.932464,-2.812674,6.355784,2.928366,4.129175,-9.530756,1.409623,8.457027,3.823385,-2.041135,2.677422,7.670859,-4.113773,5.650907,1.772756,3.163580,2.019884,8.937814,-5.898706,0.876382,-8.792895,-4.808679,0.191140,7.335967,1.792176,-5.287227,-5.257090,-5.015901,1.005072,-6.749202,-9.543839,5.017207,9.534209,-4.608930,0.510162,-5.111700,7.648700,2.771153,-2.085785,-8.436697,6.472232,-8.522110,-2.119131,-8.548694,-2.726501,-7.322126,-6.582512,-1.627430,-4.348161,-6.529953,3.240652,-6.250174,3.904455,1.689791,-5.847641,3.366647,-3.042266,9.424755,-4.676057,-1.813986,-4.230493,2.263825,-2.518109,9.173336,2.233632,-2.473147,-3.958195,0.887151,5.571375,9.829385,-1.902003,6.002265,-2.219352,5.660326,-3.953206,-5.728140,-0.377142,9.820814,2.077237,-4.264059,-8.864324,5.456074,3.625849,-2.277243,-8.437060,-2.718581,4.640786,5.439078,-3.949404,-0.641441,7.358636,1.267714,2.903839,-3.420656,5.430234,0.226680,-8.608290,-4.414551,4.678153,-7.564773,-8.844797,1.154915,-0.041859,-4.148368,2.591611,3.127806,0.845018,8.961758,0.036796,5.064915,-0.642002,1.581071,-8.824801,-8.127972,-5.269548,3.982310,0.472247,-1.461675,2.678187,-7.774959,-3.178784,5.052225,-8.995684,-5.770059,6.030789,7.591330,-9.526764,-2.088867,-4.105478,-8.686184,3.376021,-3.492503,-9.161095,-1.939495,1.943968,6.416163,-5.687190,3.072490,7.612634,-7.716509,9.014277,-2.691169,-8.090038,-2.821504,1.928913,-2.718725,-8.354462,4.342754,5.955617,0.275332,-6.194047,-3.711225,5.526208,8.576214,4.474772,7.087458,7.761891,-5.032639,-0.842965,2.247407,-9.061077,-5.981844,-5.271219,0.082290,3.101182,-9.015816,3.497945,-9.237721,-6.846512,5.211661,-0.300977,-0.240183,-0.714395,3.499071,-9.947317,-2.890427,-6.229438,3.142577,-4.656616,8.246597,8.393672,0.735376,-2.640341,-1.110092,-2.974443,6.322150,-8.331220,-5.942861,-4.152836,-5.936457,-7.113063,0.647428,7.050682,2.676434,-9.981717,-1.707390,-2.827059,-4.461443,5.005008,9.866624,9.643523,-0.941337,8.618190,-0.623463,3.509424,-0.155933,-2.538095,-1.537935,-1.266861,0.482774,-2.325901,7.856441,-2.120216,-0.588505,-9.753950,4.387481,-8.172975,3.876747,-1.389880,0.305727,-8.344722,-7.482930,-6.467448,0.050033,-0.888443,0.479633,-0.052868,-7.398802,-8.774396,-3.682498,-3.077921,-0.336965,-5.199842,-2.200056,-4.046068,-7.194739,6.748831,9.965027,2.859221,6.825246,4.796288,2.102257,5.637335,-7.837020,-6.503015,-3.808260,-7.566424,6.281018,-7.041670,-9.965100,7.600466,-3.707678,5.745778,-7.853708,-3.222273,-0.158088,-5.819598,5.301463,3.211818,-6.972870,-0.468335,4.134899,6.707213,7.418725,-0.714493,-7.105386,-1.640258,1.361591,-7.357363,3.440324,9.287265,6.268881,3.799602,3.532317,-8.699372,-7.722074,-7.611752,-8.765261,-7.067991,4.587122,9.734900,-1.194093,-8.651264,3.026602,-0.434914,8.130319,-6.931731,6.855609,9.662783,1.153750,-5.174153,6.468225,3.762944,1.578988,5.556187,-6.156686,-8.836542,4.076637,-0.430125,-9.828840,5.257947,-8.661285,-4.967093,3.358670,-7.472105,1.769345,-5.237641,2.428451,-0.795941,5.197617,-5.681480,-7.579151,-6.914005,4.114398,-0.707821,0.793456,-0.276590,-4.199219,-6.817999,-4.376347,-1.958917,0.507628,-6.175561,-0.029752,2.260298,9.793710,7.402634,7.155824,1.393843,8.107078,-0.495412,1.378858,-1.192608,4.729623,9.043728,-4.431417,0.990098,-1.480588,-4.862483,6.798919,-8.576299,1.543672,-1.985710,2.351058,-9.350675,-3.111564,-6.610106,7.703053,7.157493,4.974443,-3.081783,-2.117613,2.701062,-0.661785,6.219225,-2.139355,-9.249229,5.130537,-5.303775,-3.311478,1.298954,9.977974,-0.858734,0.528754,6.661385,-7.639375,-1.535138,8.623292,3.745965,3.713830,9.346093,-5.534730,-2.803483,3.664003,-0.867115,2.503920,-0.033428,2.607981,7.217303,-0.735049,5.081080,-4.149037,1.233244,-3.705785,6.897349,8.997611,0.881591,-3.881072,3.955709,-4.474638,8.423081,-8.549983,-9.215277,-2.042179,-5.474002,-1.792279,8.131742,6.479706,-9.372312,8.182147,1.038766,4.692159,-7.069199,-8.713573,1.716006,-3.234022,-2.273695,-7.774492,-5.039454,-6.991237,2.911261,3.138447,-9.829778,8.168606,-4.159870,-0.909924,1.566312,-1.748319,-1.713703,1.021923,6.098167,-8.132656,-9.385209,-9.904366,-2.125240,3.608073,2.396093,-9.511724,5.154181,-8.041478,1.772086,-0.056267,-8.771728,-2.066769,0.842353,-2.818389,1.670736,0.795398,2.310742,1.646360,-7.971790,4.624328,5.927558,0.033207,9.662138,-3.187725,9.338256,4.013678,1.705904,-3.728575,-3.882192,6.667534,4.782907,8.767163,-7.965243,-5.701498,-1.237971,-5.811748,-9.164582,-7.891716,0.165233,-7.634570,7.672148,1.371853,0.254307,-1.687398,-7.101188,-9.058793,-7.027596,2.925306,-0.021130,9.481242,4.858291,-2.546035,-6.215837,-9.184184,2.281860,-7.501911,-5.950055,1.386865,5.394613,8.797132,3.866948,8.492267,-0.260903,-6.116412,1.806016,8.297112,5.317771,-9.796448,-3.533431,8.920444,5.421436,6.033760,0.752409,1.752713,-4.672326,5.871405,-2.783400,9.826343,2.243035,9.648410,8.774366,6.858307,-1.133898,-1.764943,-5.702057,-7.770481,3.882196,-1.771240,-0.271859,9.050490,-3.073900,-3.436153,-4.537615,1.311983,4.997287,-3.314372,1.868048,8.842433,2.074721,2.959657,-0.854913,5.767584,6.279935,-9.830903,9.484013,-3.731155,-4.609512,6.614226,-8.929020,-9.436882,5.814618,-6.926412,2.063595,7.639581,-5.744417,-8.664183,-1.015393,-6.137002,2.479240,-2.185488,1.360269,2.193966,1.137464,-4.461824,3.110467,-9.999429,2.168034,-4.038547,-6.501193,3.734008,-5.176458,1.822998,4.814990,-6.710006,9.979838,9.114157,4.078449,-0.629567,4.442607,-1.321652,-2.005665,-0.877135,2.193997,-3.200766,-0.084866,-0.106630,1.008743,0.397856,-7.330664,-2.143185,-8.999797,-5.815656,-1.584611,2.969780,1.903054,-0.316245,-7.544019,6.097923,7.997456,8.549688,4.719600,-5.040148,-3.371470,3.840382,0.292927,-7.695751,5.195092,1.739952,6.662214,-7.995080,-8.958085,-6.964519,1.488155,5.351527,9.955162,-4.727322,-0.245868,-8.135837,-3.036028,0.987979,7.051050,-6.911635,-1.742756,-5.436865,-6.771509,-2.264487,7.607276,9.724974,-3.504535,-0.476726,6.272356,-9.862569,8.675409,-2.480158,-0.807696,-2.733662,3.615111,3.270891,-1.268068,-8.899329,-8.695173,-5.396170,9.941278,-5.566640,-4.792487,-6.879332,3.509513,9.439848,2.014382,-2.582554,-5.662361,0.749439,0.565662,5.501610,-7.495463,-2.750396,7.533353,-4.218999,-6.283600,-7.040054,5.821553,4.911430,-0.187185,-3.215012,-2.191726,3.132219,8.973153,2.881580,0.207619,-5.269060,-1.203021]], dtype = "float64")#candidate|1469|(1, 1296)|const|float64
call_1468 = relay.TupleGetItem(func_308_call(relay.reshape(const_1469.astype('float64'), [16, 9, 9])), 0)
call_1470 = relay.TupleGetItem(func_311_call(relay.reshape(const_1469.astype('float64'), [16, 9, 9])), 0)
uop_1471 = relay.erf(var_1439.astype('float64')) # shape=(10, 13, 3)
output = relay.Tuple([bop_1441,call_1454,var_1455,call_1457,call_1468,const_1469,uop_1471,])
output2 = relay.Tuple([bop_1441,call_1456,var_1455,call_1458,call_1470,const_1469,uop_1471,])
func_1476 = relay.Function([var_1439,var_1455,], output)
mod['func_1476'] = func_1476
mod = relay.transform.InferType()(mod)
mutated_mod['func_1476'] = func_1476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1476_call = mutated_mod.get_global_var('func_1476')
var_1478 = relay.var("var_1478", dtype = "int32", shape = (10, 13, 3))#candidate|1478|(10, 13, 3)|var|int32
var_1479 = relay.var("var_1479", dtype = "float32", shape = (576, 2))#candidate|1479|(576, 2)|var|float32
call_1477 = func_1476_call(var_1478,var_1479,)
output = call_1477
func_1480 = relay.Function([var_1478,var_1479,], output)
mutated_mod['func_1480'] = func_1480
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1524 = relay.const([[[-1.425718,6.476077,3.203203,6.280517,-2.368604,7.994171],[-6.241498,-9.423201,1.833085,5.275939,-3.460840,2.702654],[-1.439166,4.550900,1.131073,1.274594,6.417805,8.107729],[-4.480906,-9.209936,9.062035,-2.242440,3.094212,4.794693],[-8.369286,-1.928879,-0.234649,3.010268,-4.209733,1.904309],[3.315644,9.959809,6.683104,-3.426640,7.975989,8.757270],[-5.291649,-0.052634,-3.259812,-6.935827,-5.620634,4.846990],[-4.844339,-9.421103,-4.220717,-5.722320,-5.553352,-3.399180],[6.062904,6.754493,5.733782,1.539990,-4.775921,7.517023],[9.931727,9.448356,8.445213,9.857260,-1.074942,-6.113906],[2.898257,-3.553240,-0.197373,-2.851308,3.676148,-9.599226],[-9.135725,-6.661427,9.598593,8.749203,1.318968,-9.384357],[-9.886642,5.294920,0.316541,6.431664,-7.376604,-5.881551],[-8.342923,-7.214316,-6.705000,-1.007631,-0.347242,6.741762],[-6.893295,3.383780,-6.538111,-4.836937,6.412977,4.750388],[5.761994,7.412568,-9.389327,-0.213548,-3.323861,7.731941]],[[3.043458,8.887827,-4.891478,3.607287,-8.741944,7.469144],[7.455615,7.673745,2.833273,3.816394,1.191312,-0.030937],[0.917299,-4.762730,-6.504796,-4.133967,4.996479,4.236011],[0.725231,-5.812334,0.814522,-2.623818,-5.729782,3.157381],[-4.070817,-1.293739,-0.012077,5.719066,-6.989767,6.881904],[2.948777,-6.834283,-2.504750,4.046882,9.815676,4.812324],[5.891911,8.397111,7.193822,0.626741,2.128594,5.928399],[-5.715494,5.872743,-8.701697,4.401512,5.482607,-9.976522],[-2.698254,4.666832,6.362731,-7.006197,-5.471037,-7.753772],[5.330518,9.377105,-0.643203,-4.302697,7.006122,1.941202],[-6.288650,-7.215348,-4.857162,8.739397,-9.636334,-8.429510],[0.596945,-6.652369,-6.737360,7.869300,-3.424254,9.229009],[2.381947,1.603660,9.939924,-1.405621,-4.212174,2.593288],[4.966770,8.603777,8.310001,-1.815647,-1.398090,-0.301940],[9.985999,-8.689738,-3.319281,-5.632488,9.781793,6.003782],[-7.879308,8.443606,-6.002507,-6.098775,5.860611,4.580811]],[[6.373261,-0.615054,-2.663980,0.530833,-8.397089,3.541648],[8.745486,1.185139,3.209417,6.162096,-9.670641,-3.718081],[-1.128057,4.172601,-1.529825,-6.609142,-6.561271,-6.457431],[-5.401846,-5.155430,0.650285,5.916824,-5.282590,-2.329438],[5.752933,2.758113,-9.455138,-2.166652,-2.703581,-9.060435],[-9.814796,0.237607,2.371964,2.687611,0.147269,9.750243],[5.702293,2.398200,7.502277,-2.393847,3.520115,-2.919954],[7.322729,-5.851463,-8.904384,8.239225,-5.796391,8.595491],[-6.070710,8.146073,5.223838,-8.197267,8.716460,-4.343626],[6.271344,-6.873721,-8.611884,-4.320511,8.895429,-9.209295],[-3.095800,2.571164,-9.860324,-5.107772,6.916732,-4.046537],[-5.415300,-8.307003,-2.432093,-1.312801,4.298570,-5.953522],[-8.860941,0.752096,-6.713265,6.573925,0.660891,9.742978],[-4.804291,-5.895396,1.640518,-3.966707,-0.463650,7.411654],[9.526260,-0.006885,-5.422424,-1.582131,-2.619704,8.253806],[0.686847,5.418891,1.763549,-4.193876,-4.215073,2.146966]],[[6.705768,-4.612962,-9.796013,-2.538157,0.111330,-0.580513],[-4.259934,-6.045834,2.159479,7.684088,4.045471,6.289028],[4.634463,-1.430931,0.012749,9.063749,8.692752,-1.900738],[8.245705,4.314615,0.345118,8.062299,-8.144825,-4.566346],[3.356035,2.162800,-1.308962,6.012652,-1.704940,-8.817980],[2.935722,7.642353,9.514170,0.029849,-8.026747,9.563193],[-5.236131,7.175881,4.026960,-8.077515,2.421761,2.752915],[1.473777,4.309637,-5.807245,2.714715,9.464253,-4.329134],[-9.981722,-3.383984,-2.931269,-5.681787,-6.701324,9.945474],[-6.482582,-6.304717,4.394267,6.380979,-9.329523,3.653513],[-9.260255,-4.904897,9.459563,-5.343500,-9.928363,-4.440382],[6.158711,-7.581170,0.674595,2.152757,1.342602,3.624111],[1.947638,4.762689,-1.558558,-6.011902,2.160531,-5.667206],[0.294492,-4.197744,9.613385,-5.293797,-7.834651,-1.904237],[-7.190469,1.988095,3.541624,5.090367,3.507890,-0.209329],[1.229206,6.388885,-7.974864,3.244997,-3.416397,1.011487]],[[-8.186110,-4.929769,-5.955312,-6.017703,-7.277173,5.159892],[4.425567,-0.565957,9.263341,-3.248532,7.171146,-7.061425],[8.686472,4.618012,6.397568,-4.476252,-6.728336,-1.858479],[0.839005,-5.879896,-2.347432,-4.335470,-0.864122,9.079743],[4.446404,-8.407923,9.764701,-4.970350,-3.445832,-0.439982],[6.472839,9.078081,-4.546725,-7.997899,9.171333,0.432810],[-5.959101,6.126267,6.689177,3.324997,-1.870075,2.071155],[-5.619358,-8.478717,-1.916162,-4.238120,2.811306,8.499944],[-9.600878,-6.261178,-8.505435,7.766453,8.955217,6.982806],[6.626617,8.310760,-6.435084,7.199825,2.547051,5.801160],[2.603925,6.884003,-4.891381,-8.659449,-6.139795,-8.097900],[-0.086935,-7.234380,-9.628637,-0.494900,-0.350600,5.167204],[6.781433,2.076355,-9.799352,-1.038172,-9.217649,6.946913],[-5.795056,1.801887,-8.057755,-6.814139,-9.087863,-2.244818],[-2.744840,-4.691907,-4.387450,-9.226715,3.094104,-0.575592],[-5.889308,0.082754,-6.644596,4.778033,-4.060595,-9.095317]],[[-6.015863,3.845262,9.951766,2.783617,4.836324,-4.554504],[7.355942,1.708414,-5.055201,8.562516,-2.294823,8.930277],[7.332665,9.650128,-3.725486,-0.315029,-3.666234,5.770055],[3.379826,-9.295428,-2.072102,-4.522750,1.383234,-1.168790],[-2.765940,-8.117332,-6.494572,9.048044,6.079935,5.094316],[-7.986442,-3.620313,-5.496548,-6.774735,1.475298,-0.481468],[6.589097,0.782968,-2.864387,-8.014684,6.839501,3.588355],[3.977319,5.253509,7.449523,-5.209565,-9.320886,0.293219],[-3.168932,-1.680732,-1.963561,9.617620,-4.079355,-3.768578],[8.584056,8.617479,1.785919,-1.413280,7.263447,5.010835],[7.521955,1.701320,8.582548,-9.070291,-3.728181,7.397811],[6.363370,5.531019,3.373151,-7.161957,-1.992700,-1.453510],[-0.879714,-3.466117,-7.550009,-2.593699,3.488076,-3.348308],[-4.966169,-9.995590,0.932892,1.935119,4.519894,-0.439865],[-5.538997,7.946564,-9.943369,3.592664,-5.799717,1.446408],[1.176975,-7.484356,4.502293,7.154952,1.205355,-3.179480]],[[6.412262,6.397437,-9.042178,-2.195889,-4.203216,-5.477962],[3.507237,5.794006,0.292250,-7.039430,3.917648,-1.410298],[9.121556,-2.670708,3.291381,-5.587727,6.632306,1.395365],[3.319996,-5.184587,4.471051,5.075983,-8.184497,4.754113],[2.663091,1.289270,-0.087406,7.736348,6.218413,1.944268],[-5.467924,-4.328480,1.546501,-1.357214,1.480948,5.808767],[7.336242,4.461893,0.247338,0.933822,-3.838146,3.511603],[-9.254327,7.632253,5.808310,7.768057,-7.456350,5.676191],[4.190899,-4.732719,-5.573483,-6.357995,-2.725774,-9.163689],[-8.142643,-4.924098,-5.640139,4.585991,-3.195509,-8.318170],[0.738286,-5.000513,2.640676,-8.912289,0.872429,8.317894],[-1.599726,7.774196,6.693284,-1.331990,4.525776,6.542091],[2.343269,0.749645,8.516124,0.719721,0.520675,-4.941626],[1.313125,3.209769,6.396810,-7.401844,-9.993622,8.780827],[8.823092,8.531422,-0.848086,-4.256559,-8.960904,-0.217203],[-2.040325,-2.095308,9.672221,-2.106536,1.783240,8.670453]],[[7.390252,-9.536338,5.410013,4.637115,-5.517972,5.199980],[8.782276,-6.395923,4.613194,9.903311,-8.437369,6.588745],[-4.213931,-7.606792,-9.736921,8.139084,4.678648,8.736704],[0.014660,-9.883373,-9.028651,-8.698804,8.475927,5.266454],[5.301640,-1.887614,-8.515509,0.050063,-9.752623,8.559580],[5.607251,-3.450624,-8.645093,7.840473,-9.441005,6.526252],[-2.175656,4.685136,-5.127642,-4.543170,4.469800,8.991400],[6.960849,9.249543,-1.447971,-1.225277,2.478783,0.612964],[-3.238919,2.561632,-6.312845,9.807253,-3.017165,-2.647407],[2.623880,1.328666,-2.216125,0.604818,6.391338,0.674726],[3.973211,-1.109235,-3.015696,-0.351700,-2.010167,1.170046],[6.853200,0.648079,4.357068,-8.368651,4.407442,-7.216118],[6.645215,7.258816,-8.930400,-1.017798,-2.711552,-9.203920],[-1.652348,8.745879,-7.015929,7.841126,-2.526013,3.570616],[4.659358,-8.259462,4.169624,-7.210400,-8.129060,-0.926803],[-6.079570,-5.172934,2.890099,3.440642,-8.393976,-2.939059]],[[6.508347,-3.207699,6.472207,-9.229564,2.430255,2.264934],[8.023907,7.102929,8.008836,-0.572940,5.594976,-1.963892],[4.878855,-3.786346,-3.433774,-6.636128,6.860422,3.913636],[-0.241004,9.049361,3.432305,8.857579,-7.738917,-4.776378],[-4.498995,4.469098,-4.689548,-1.503996,8.646656,7.195653],[0.294381,5.130012,-7.312785,6.412837,-0.136109,-6.923691],[9.456924,-6.403467,1.441648,7.265787,9.889728,1.688190],[-1.485821,2.383309,-0.354781,-8.094629,-6.882759,-6.807664],[-0.783964,-6.369787,-4.998014,-9.997711,-1.138726,2.425869],[-4.119102,4.237548,4.281459,2.725838,-3.568117,5.398297],[9.214647,-6.009246,-5.599901,-4.208321,8.739100,4.037722],[6.350868,6.894189,6.520313,5.648366,-1.526713,0.437299],[0.803970,9.690127,-2.819079,0.041056,-8.913088,3.776462],[-5.710924,-9.935290,-1.828017,-5.441509,2.757738,5.897842],[-0.710991,-4.778135,5.045496,3.074570,-6.183698,-9.970156],[3.419034,-0.184571,-7.262023,-3.463488,5.298878,-0.169292]],[[0.367273,-6.490810,-8.488376,7.575801,-8.383053,7.030294],[2.349609,1.916864,-1.850567,-7.032290,5.170066,7.053915],[1.559482,-5.318716,-6.987022,-8.243741,1.145692,4.866402],[7.533668,5.179805,-6.649805,9.687424,8.288948,-5.245630],[0.181633,0.954949,9.508640,-5.958616,3.502686,-9.417271],[0.170272,2.429026,7.925871,-8.081653,3.084632,-4.310948],[2.768168,2.214827,-6.912832,-1.257522,7.281596,-4.991858],[-1.878924,0.246175,-2.601034,-7.713635,-4.576770,-6.465854],[-5.426379,-9.800553,-0.310955,5.528458,6.595147,-3.582485],[-4.961061,6.202122,6.874599,6.567454,-9.718282,3.064458],[-9.347128,-3.836847,0.518115,-3.969659,7.299345,7.565099],[5.586385,0.419315,2.573519,3.720737,-9.427844,9.559873],[-9.895189,-5.438733,4.505302,0.909719,6.199879,4.667351],[1.062433,-4.315987,-5.047517,-0.730754,-0.299932,-9.702525],[-2.573122,-3.441165,-4.019449,-9.709600,-7.757263,8.184412],[-5.190625,4.368182,-8.359171,-1.551396,-3.940523,7.111389]]], dtype = "float32")#candidate|1524|(10, 16, 6)|const|float32
var_1525 = relay.var("var_1525", dtype = "float32", shape = (10, 16, 6))#candidate|1525|(10, 16, 6)|var|float32
bop_1526 = relay.divide(const_1524.astype('float32'), relay.reshape(var_1525.astype('float32'), relay.shape_of(const_1524))) # shape=(10, 16, 6)
bop_1532 = relay.mod(bop_1526.astype('float64'), relay.reshape(var_1525.astype('float64'), relay.shape_of(bop_1526))) # shape=(10, 16, 6)
output = relay.Tuple([bop_1532,])
output2 = relay.Tuple([bop_1532,])
func_1552 = relay.Function([var_1525,], output)
mod['func_1552'] = func_1552
mod = relay.transform.InferType()(mod)
mutated_mod['func_1552'] = func_1552
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1553 = relay.var("var_1553", dtype = "float32", shape = (10, 16, 6))#candidate|1553|(10, 16, 6)|var|float32
func_1552_call = mutated_mod.get_global_var('func_1552')
call_1554 = func_1552_call(var_1553)
output = call_1554
func_1555 = relay.Function([var_1553], output)
mutated_mod['func_1555'] = func_1555
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1877 = relay.const([[[-1,6,-7,-10,-7,3,-7,-10,4,7,-10,-7]],[[-8,5,5,8,2,-2,4,-1,3,4,4,7]],[[2,3,10,10,7,5,-1,-7,-6,-3,5,1]],[[9,-9,9,-2,-1,-5,-7,10,2,-5,8,-7]],[[5,7,5,5,5,-8,10,-5,5,4,9,-5]],[[7,6,-3,2,-3,5,8,2,6,8,-10,-6]],[[7,6,-4,-8,2,-8,7,3,10,-7,-10,2]],[[1,-1,-6,-7,-9,-10,-5,-3,2,-1,3,6]]], dtype = "uint16")#candidate|1877|(8, 1, 12)|const|uint16
const_1878 = relay.const([[[2,6,-7,5,-9,6,-6,10,-7,-4,-1,-4],[-3,4,10,5,-7,5,10,-1,3,-5,-2,4],[-10,-10,5,1,2,-9,3,-4,7,-6,1,5],[5,-4,-5,-4,9,5,-1,1,-4,-8,4,-9],[1,-7,-1,8,-4,-2,-3,5,-2,5,7,-9],[-6,-7,-8,3,-10,-6,5,-8,8,-8,-8,-2],[-1,6,-5,-8,3,-5,-2,2,9,6,2,10],[5,1,-1,4,4,-2,4,-1,-7,-7,5,2],[7,-7,-1,-9,7,10,2,1,-3,-6,5,5],[4,-3,-1,-2,-3,7,5,2,3,9,-3,3]],[[7,4,-7,-6,-1,9,-3,10,7,2,3,-4],[-4,-6,-7,-3,-10,-6,6,-7,2,8,-8,-1],[-8,-7,-5,-9,-5,-7,4,7,-7,-1,9,-9],[-8,6,5,-1,8,-2,-10,-3,-6,9,10,-5],[3,1,8,2,-7,1,6,3,-9,-9,7,-8],[-2,-6,5,9,-9,-1,-10,-2,1,-9,5,-1],[8,-7,-1,10,2,-6,-7,-6,-7,3,9,-6],[-1,7,6,4,9,-1,-6,4,4,4,6,8],[-8,5,-8,-10,-6,7,-7,10,-10,-4,9,-4],[-9,4,10,-1,3,-6,6,10,-4,-8,5,5]],[[-8,-4,9,9,8,-5,7,7,-3,1,-10,5],[-7,5,2,9,-10,-6,1,-9,3,7,4,-2],[-8,10,3,4,-10,-3,-10,2,-3,1,6,-3],[5,-6,4,8,10,-4,3,6,10,6,10,-9],[6,9,7,-8,-1,-3,-4,-1,-7,1,4,3],[-5,-3,5,-9,10,-3,-9,-1,-7,5,5,8],[-2,4,-6,-9,4,-5,-4,1,2,2,7,10],[-10,-7,-3,-9,-4,1,9,-1,4,3,-2,-1],[-10,-6,8,3,4,-5,5,-2,-6,-10,-6,8],[-9,-9,7,7,-5,-8,-10,-1,1,1,-9,-6]],[[9,1,-7,5,-2,-10,6,-8,-2,-4,-7,7],[2,-5,-3,7,7,7,-7,-1,-9,-9,10,-6],[6,-5,6,3,1,10,-9,8,-4,-9,9,9],[-2,-3,-6,5,10,4,-3,5,-3,2,1,-7],[4,6,-7,-3,3,-3,4,10,-9,1,1,8],[10,-7,9,-6,1,8,4,9,7,8,-10,-7],[-3,1,-4,-2,-6,-5,-5,9,2,-4,-7,6],[4,7,-10,-3,1,-1,-2,1,-1,4,-7,2],[8,-6,8,1,3,6,-2,-10,-10,10,-1,-9],[-7,-10,5,2,7,-10,-9,7,-1,-7,9,-8]],[[6,10,-8,4,3,8,6,-1,9,8,-4,-1],[-7,8,6,4,3,-3,-4,-6,1,-6,5,1],[-9,-3,-5,10,3,-5,-5,2,4,10,-2,-6],[-10,9,-10,-9,-9,-3,-9,6,4,-2,10,-10],[-1,4,-5,-6,3,-10,6,-1,6,-1,1,-6],[9,-8,3,-3,6,-8,8,-8,9,-3,1,-2],[-9,9,-10,-9,-4,8,-2,-6,10,1,-7,-6],[-9,3,-4,7,10,5,3,-1,-10,-8,1,1],[7,-7,3,3,4,-3,5,-2,-8,-6,-1,-9],[5,-3,1,-8,-6,-3,10,-2,-5,1,-7,-4]],[[-1,7,7,-5,5,-1,-2,5,3,6,5,8],[-4,-10,3,5,4,8,-10,-8,-10,3,9,9],[-7,5,-4,-4,5,9,-7,4,8,5,-4,3],[3,4,-4,-3,-8,3,-5,-10,10,-8,4,10],[-3,-10,-9,3,-6,3,-9,-1,9,1,-2,2],[-10,10,-4,8,7,-6,-10,8,5,-8,-2,-3],[4,4,-7,-9,-9,-5,-9,-2,-2,3,-9,-9],[-6,1,5,-8,-2,-6,-9,7,4,-2,-4,9],[5,7,-5,-10,-1,-7,-7,-9,7,7,10,5],[4,9,4,-6,-2,-4,-7,-5,7,9,9,10]],[[-1,4,-1,-9,8,4,6,2,-1,4,-3,8],[-1,4,5,7,-3,9,-2,8,6,4,2,-1],[-6,-4,-2,-9,-1,4,-6,-2,-4,2,9,5],[-4,7,-7,-2,3,-2,-8,9,-3,-5,-6,10],[8,-5,2,2,1,3,-10,-10,10,-10,-4,-10],[-6,8,10,3,9,-6,-7,8,-2,7,7,6],[1,6,7,-4,8,4,-1,-9,4,-5,4,1],[6,7,-7,-9,-9,6,10,8,4,-10,-8,7],[-4,2,-8,3,3,7,5,10,2,1,-8,4],[10,8,10,-9,-8,2,6,-9,-9,8,-4,-9]],[[6,10,10,7,5,9,1,-2,3,-6,-1,-7],[-1,6,5,2,7,5,-6,-9,-8,-8,10,-9],[-6,-1,9,-9,5,6,1,3,-1,-5,-3,-8],[7,-9,8,8,-2,-2,7,3,-5,5,-10,3],[-9,8,7,4,-6,10,2,7,-9,6,10,-9],[10,-10,2,-2,6,-4,10,6,2,7,6,-9],[4,-2,-7,-7,4,-9,-5,-1,3,-3,-5,8],[-6,1,-10,8,10,-6,10,-5,-3,3,9,8],[-9,-4,3,-2,-6,3,-5,-8,1,-3,-9,5],[5,9,-2,-6,1,7,-2,3,2,-4,8,-4]]], dtype = "uint16")#candidate|1878|(8, 10, 12)|const|uint16
bop_1879 = relay.subtract(const_1877.astype('uint16'), const_1878.astype('uint16')) # shape=(8, 10, 12)
output = bop_1879
output2 = bop_1879
func_1883 = relay.Function([], output)
mod['func_1883'] = func_1883
mod = relay.transform.InferType()(mod)
mutated_mod['func_1883'] = func_1883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1883_call = mutated_mod.get_global_var('func_1883')
call_1884 = func_1883_call()
output = call_1884
func_1885 = relay.Function([], output)
mutated_mod['func_1885'] = func_1885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1898 = relay.var("var_1898", dtype = "int16", shape = (13, 10, 1))#candidate|1898|(13, 10, 1)|var|int16
var_1899 = relay.var("var_1899", dtype = "int16", shape = (13, 10, 4))#candidate|1899|(13, 10, 4)|var|int16
bop_1900 = relay.bitwise_and(var_1898.astype('int16'), var_1899.astype('int16')) # shape=(13, 10, 4)
uop_1908 = relay.acosh(var_1899.astype('float64')) # shape=(13, 10, 4)
func_1883_call = mod.get_global_var('func_1883')
func_1885_call = mutated_mod.get_global_var('func_1885')
call_1927 = func_1883_call()
call_1928 = func_1883_call()
output = relay.Tuple([bop_1900,uop_1908,call_1927,])
output2 = relay.Tuple([bop_1900,uop_1908,call_1928,])
func_1931 = relay.Function([var_1898,var_1899,], output)
mod['func_1931'] = func_1931
mod = relay.transform.InferType()(mod)
var_1932 = relay.var("var_1932", dtype = "int16", shape = (13, 10, 1))#candidate|1932|(13, 10, 1)|var|int16
var_1933 = relay.var("var_1933", dtype = "int16", shape = (13, 10, 4))#candidate|1933|(13, 10, 4)|var|int16
output = func_1931(var_1932,var_1933,)
func_1934 = relay.Function([var_1932,var_1933,], output)
mutated_mod['func_1934'] = func_1934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1883_call = mod.get_global_var('func_1883')
func_1885_call = mutated_mod.get_global_var('func_1885')
call_1938 = func_1883_call()
call_1939 = func_1883_call()
output = call_1938
output2 = call_1939
func_1940 = relay.Function([], output)
mod['func_1940'] = func_1940
mod = relay.transform.InferType()(mod)
mutated_mod['func_1940'] = func_1940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1940_call = mutated_mod.get_global_var('func_1940')
call_1941 = func_1940_call()
output = call_1941
func_1942 = relay.Function([], output)
mutated_mod['func_1942'] = func_1942
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1955 = relay.var("var_1955", dtype = "float64", shape = (9, 8, 16))#candidate|1955|(9, 8, 16)|var|float64
uop_1956 = relay.sinh(var_1955.astype('float64')) # shape=(9, 8, 16)
func_1940_call = mod.get_global_var('func_1940')
func_1942_call = mutated_mod.get_global_var('func_1942')
call_1968 = func_1940_call()
call_1969 = func_1940_call()
output = relay.Tuple([uop_1956,call_1968,])
output2 = relay.Tuple([uop_1956,call_1969,])
func_1971 = relay.Function([var_1955,], output)
mod['func_1971'] = func_1971
mod = relay.transform.InferType()(mod)
mutated_mod['func_1971'] = func_1971
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1972 = relay.var("var_1972", dtype = "float64", shape = (9, 8, 16))#candidate|1972|(9, 8, 16)|var|float64
func_1971_call = mutated_mod.get_global_var('func_1971')
call_1973 = func_1971_call(var_1972)
output = call_1973
func_1974 = relay.Function([var_1972], output)
mutated_mod['func_1974'] = func_1974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1940_call = mod.get_global_var('func_1940')
func_1942_call = mutated_mod.get_global_var('func_1942')
call_1989 = func_1940_call()
call_1990 = func_1940_call()
uop_1993 = relay.log(call_1989.astype('float32')) # shape=(8, 10, 12)
uop_1995 = relay.log(call_1990.astype('float32')) # shape=(8, 10, 12)
output = uop_1993
output2 = uop_1995
func_2013 = relay.Function([], output)
mod['func_2013'] = func_2013
mod = relay.transform.InferType()(mod)
mutated_mod['func_2013'] = func_2013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2013_call = mutated_mod.get_global_var('func_2013')
call_2014 = func_2013_call()
output = call_2014
func_2015 = relay.Function([], output)
mutated_mod['func_2015'] = func_2015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_2018 = func_2013_call()
call_2019 = func_2013_call()
func_1476_call = mod.get_global_var('func_1476')
func_1480_call = mutated_mod.get_global_var('func_1480')
var_2021 = relay.var("var_2021", dtype = "int32", shape = (390,))#candidate|2021|(390,)|var|int32
const_2022 = relay.const([2.703491,8.863944,-6.410187,-9.514466,1.771589,-5.331636,-8.350866,-3.103178,1.402889,7.162092,9.167069,2.783309,6.421846,1.504109,8.877330,-0.685650,-6.273051,9.933062,0.958370,-4.235446,0.352013,6.794898,-2.895815,1.799335,7.283243,0.804667,-1.960274,9.664532,-7.034985,-8.244959,7.566322,0.836930,-2.991646,-5.366463,-3.566765,5.085917,8.910082,1.691206,-0.066571,-4.515024,4.619079,-5.406291,-3.322702,8.587902,-5.255332,9.180236,8.701658,2.770856,8.264664,5.847918,-2.168679,4.643169,8.541107,1.540982,6.498954,-1.906211,3.193604,-1.591492,-6.272771,6.944174,-2.980435,-3.203167,0.824679,7.236867,1.850230,-6.276701,0.148147,-6.524966,-7.289855,-3.353831,9.304388,-6.710559,2.382004,-2.631885,-2.526540,-5.683425,-8.615978,-7.938496,-1.599481,-6.115511,6.744735,-1.799247,-5.064088,5.111537,-5.151876,9.421207,-6.205498,6.954588,-8.997939,7.303427,5.903329,7.864578,-3.204560,4.813906,-4.181211,8.170703,-0.718475,-7.495416,-1.270593,4.758079,-8.104755,-2.996622,-3.204543,-0.335156,8.308095,5.030123,-0.484576,0.875347,2.700835,6.568682,-8.293635,9.050649,-0.464496,-9.158907,7.989876,-6.689066,-8.137865,2.143727,-5.423888,2.249981,0.161460,-4.705228,-8.663461,9.042473,-9.309093,0.136906,3.748283,1.968815,-4.368683,-0.508515,4.126061,7.019871,2.685475,-2.974099,5.535007,0.572115,-2.489651,-7.651394,7.295017,-7.093670,-9.604640,6.770540,-5.513259,-6.282678,-6.590950,3.340388,3.106197,3.001863,1.199546,-7.048547,1.894521,0.245953,5.276535,-9.597131,5.474744,-8.231918,-7.867960,9.869910,-9.253486,-1.174626,-4.305214,-2.762214,-4.690214,-4.872256,3.599825,-0.718115,7.054743,-3.696385,8.567911,7.547472,-1.036391,1.793869,6.898470,4.194870,-7.445063,-3.147539,6.888826,-9.534607,-5.007550,4.120927,7.539442,9.397765,-0.133103,3.973654,-2.715318,-2.077714,-6.615927,-4.990477,1.958480,2.791866,1.390925,-7.225567,-5.406472,-2.562546,-1.835159,-0.202903,-9.257893,-6.248853,9.572831,-6.940637,-5.701575,-7.359497,-9.214791,0.688022,0.720301,4.494807,-0.087014,8.348197,-8.828165,-6.695743,-5.436814,-5.498400,-6.041189,9.910324,-8.040133,8.026909,-8.620170,1.833795,-6.891804,-3.671771,7.502688,-2.189615,-2.285169,-9.977652,-6.555501,0.532844,4.283255,5.317849,-0.098371,-8.148643,-9.236518,7.131626,2.839787,-7.108322,5.604054,2.200650,-1.117800,9.572675,-8.049952,-7.456168,-4.709120,4.409393,4.948091,6.172376,2.317194,8.905401,2.423340,-3.422222,7.457889,5.328695,-1.380240,-9.812043,-6.934170,8.778015,7.397928,1.282752,3.886943,-4.943373,6.051438,-9.566350,2.391525,9.076238,-9.673291,9.506888,-5.865106,5.750030,-6.052141,5.094864,5.240601,9.048658,-9.505949,-0.956681,7.466561,8.255675,-4.782663,5.852365,3.706250,-4.767658,-7.755550,3.421689,-1.288478,3.405269,-8.491637,-8.502524,0.916867,2.535046,-9.813993,7.998322,-0.208676,8.074399,-2.518511,-9.727570,0.403060,-5.362253,-7.131082,-9.756645,-3.250028,9.731170,-0.946373,-6.012136,7.347338,-2.126590,5.894963,2.651062,-8.637671,-6.781504,4.809170,-4.632991,3.704667,6.160186,-3.612722,8.929087,9.182204,-5.682720,-5.223397,-5.410862,-8.297853,6.771995,-0.056357,4.004488,5.924376,-8.143762,-8.957273,7.079762,3.809607,5.363255,-9.075972,-1.742633,-4.604609,-0.654671,0.595401,-9.722497,6.413118,3.482012,6.018163,-0.320003,-3.699146,7.426552,6.628671,-2.982455,7.058150,-1.505080,-3.831205,-1.888187,0.924099,7.632322,6.257318,-0.849826,-3.908978,-2.895848,-3.769067,-1.527749,3.597802,0.936138,4.723725,5.371447,-8.589298,-0.952939,-4.152014,0.743964,2.841383,-9.310763,-5.537979,9.298721,-3.804906,-3.374739,-3.887524,3.260593,0.501409,-7.588666,5.516733,3.569399,-7.538935,-6.176889,-1.736313,-9.238095,5.598570,-1.791637,-8.875829,-5.699153,-5.892461,9.841932,3.111598,-4.695401,-3.146766,6.217838,1.253564,0.054082,7.673449,-9.692927,5.259580,9.373705,-5.507462,-8.339464,-5.625986,4.664325,-4.956360,3.198339,-3.758099,-7.035735,6.147385,-2.667883,-5.223052,-1.186039,1.913276,-1.670540,3.732479,3.170352,1.495774,-5.146950,-5.889575,-3.776037,1.812443,7.243317,-6.990802,-3.067596,2.075741,-5.535127,-8.663249,4.320146,6.178574,-5.679709,-3.036748,-1.148254,3.401507,3.789083,2.649200,-7.385276,8.676329,-9.273783,9.552280,5.396932,9.273512,5.361256,-1.586798,4.017499,-2.044658,9.429028,-3.604455,-9.091969,-4.801674,0.185012,-7.428693,-3.707893,6.488078,3.059578,3.901670,-9.563087,-2.873154,-9.535677,-1.428865,-3.858616,8.808917,1.691516,-4.104628,-5.872100,9.899977,-3.192644,9.233699,-7.133238,6.998584,-1.423184,-7.690195,1.868931,-0.483067,-6.108936,0.900246,3.385104,-4.981801,-9.331037,-2.961522,1.405087,4.525051,8.740428,7.847464,4.830197,5.983627,7.180462,-9.770287,-1.638096,4.206549,-2.322400,-8.871354,7.375164,-9.602317,3.595149,-2.414176,0.055703,-6.511808,7.024631,-8.188957,-9.286071,-6.258718,0.523430,-2.497914,8.429396,-5.289698,-7.609858,0.614177,9.122877,-4.746575,-1.723745,-1.739017,-5.355168,6.059615,-2.408106,-1.734485,9.783842,-1.512884,-9.026298,6.179723,-9.444989,1.680222,-0.187743,6.228185,-6.125180,-9.792245,-8.392363,-2.532627,5.755630,-5.435457,3.316742,-7.507699,0.743765,-7.269497,0.669339,6.128450,3.273826,-1.543791,6.396038,-3.313885,6.569316,1.600346,0.018725,-3.844113,9.196277,-4.996451,-6.980060,2.157444,9.003270,9.763219,9.667472,2.744855,1.009844,-9.972069,0.898918,-6.884271,4.359610,-1.564126,-5.356623,9.353533,-1.191253,-3.846666,-5.568615,-2.782841,1.415365,-5.724226,9.164275,-8.407783,-4.498417,2.398511,3.804850,-3.819899,8.242426,7.792624,-3.437550,1.423487,-3.387811,4.811533,-6.951451,-7.472793,2.382468,-5.807326,-7.781209,0.218704,-3.184247,-4.767531,-1.970955,-8.465025,-7.276613,1.453693,4.942544,7.372514,8.505545,-3.674265,-9.777839,8.077178,-9.762176,-5.191516,-4.585232,1.642432,5.013155,-2.003619,-3.925213,1.108273,-0.960436,9.445078,-6.531996,1.245287,7.442155,4.013019,3.958118,6.960913,-8.350251,-0.491732,2.512049,5.077444,-5.525345,0.875295,7.032917,1.811867,5.983474,8.729171,0.056960,4.005579,-0.688375,-1.693334,-6.690698,5.507937,-8.683325,9.398420,1.827937,-6.360174,4.925790,2.975376,-3.111685,-1.088976,1.262204,1.868961,5.266157,-3.813687,5.202742,4.976810,-3.438159,6.897632,-0.812373,0.963309,2.120785,1.113205,9.355459,2.600248,6.446605,8.521898,7.584537,4.598107,-8.395929,8.272378,0.115302,4.585185,0.887155,-6.734835,1.063494,-1.466121,4.610845,2.163882,-0.393286,-0.740156,3.483944,-8.112692,8.624254,0.474719,9.450791,9.777305,8.521904,5.206800,7.078648,-8.100411,3.023299,-7.637141,2.320135,5.213860,-1.740259,8.952915,8.319712,7.095167,-5.327098,-0.343149,0.906123,-2.730625,-4.196981,2.170861,2.286083,6.823778,-0.551227,6.646158,6.921469,9.026202,-8.994841,4.060560,8.146163,-5.219519,0.961044,8.765740,3.398500,8.685910,7.863225,4.171855,9.947973,9.998581,-3.475212,6.177207,5.963064,-4.106743,6.239062,-5.203430,-5.272396,-9.969190,6.079363,-9.945627,2.958738,4.916875,-6.145778,0.923629,9.831170,-9.577606,7.058233,5.153798,-0.642796,3.402990,-7.249219,-1.267949,-3.608489,-0.539653,0.194404,-7.278443,5.313420,4.433625,9.206129,2.270232,-8.555173,-9.185977,7.310760,-8.091206,1.625279,7.505234,4.794584,-0.502425,4.519888,-2.427760,3.420194,7.871756,-1.693660,7.733831,-2.315808,-7.604828,-2.644136,-5.458240,-8.638456,1.789583,-3.130323,4.311411,1.213625,-2.433925,5.667542,2.127867,9.706135,9.316997,9.187232,3.060333,2.157359,-3.532396,6.756013,9.074274,-5.454103,0.289649,9.404856,-1.692182,6.266877,0.162428,5.512003,0.804190,-2.289753,-5.462358,4.902358,2.086920,9.569451,-3.138223,-0.313026,7.773238,6.913588,-6.847513,0.318643,1.267518,2.801626,6.385592,1.885503,3.847375,9.350205,1.706113,-3.321403,8.357305,6.061715,-9.191514,1.127367,-2.206193,-3.407244,-2.658826,5.780124,-4.111693,-6.248990,-2.754255,0.922149,0.930706,3.375012,9.176487,0.487947,-6.776385,2.460132,8.676826,-4.188800,1.080940,-3.273027,-5.114760,7.840239,-5.021291,2.606789,6.822304,-7.676381,0.317739,0.884015,8.826130,-9.442655,7.596380,-4.917697,-4.446081,-4.601566,-7.009006,1.365049,2.499073,4.776429,2.243133,-4.454546,5.797567,5.040568,-9.883412,-3.190730,-5.845065,2.883105,-1.960273,-4.291286,-3.609209,-2.180614,6.876727,-4.469531,-2.128792,-9.211247,-1.603819,-7.083972,7.865347,-8.401093,-3.408962,-0.825093,0.301465,2.243704,3.018430,9.497805,-1.410126,-9.152587,4.222870,-7.473720,3.547073,5.691128,4.701003,1.928150,-1.838428,0.450928,-5.850841,6.794487,1.125963,1.520948,-8.831810,2.866058,-3.419013,-9.894540,-5.315735,8.976386,2.332413,3.734367,-8.072457,4.534692,-4.665941,-3.857707,-8.600847,5.372411,-7.191512,6.635937,1.928101,3.350988,-4.688607,8.204226,6.921880,-7.396313,-1.674356,8.611112,2.844338,2.477247,5.589702,-3.092098,5.886061,-8.888791,7.342366,-3.395452,-5.833042,-3.465372,9.250670,6.265098,8.871423,1.902464,8.638425,-8.036412,9.041527,-5.574548,3.539704,2.557455,-5.820630,-5.947621,6.885050,-0.575757,5.782332,-5.592469,2.106362,4.614325,-7.218353,-7.013503,0.231412,-0.652765,-0.191130,-6.812237,1.866867,-3.146318,6.705749,7.101347,8.228155,-4.439259,1.451866,2.958725,-5.555938,2.730484,5.126260,-0.910763,-6.728540,8.717215,5.583658,0.620761,7.388513,7.030519,-6.166340,3.144276,-5.251189,-7.873853,4.324957,-0.613438,-9.382841,-3.020223,5.018582,3.319073,0.842006,-4.743148,-5.556754,0.870228,8.733322,-5.227167,-0.151610,5.169132,8.137835,-7.138456,0.410431,-3.405271,-4.542982,3.288159,6.170654,1.791594,-9.292434,5.034261,6.670273,-0.849280,8.593063,8.745451,8.723226,8.840754,-8.596211,4.461037,-3.657082,-2.972124,-1.627588,6.002354,-5.128301,-5.275067,-5.901860,7.123087,-1.684687,0.916393,-1.697572,2.373916,7.979111,-6.527249,-0.194932,-2.018831,5.528331,6.563901,-0.849049,7.599576,-4.841348,3.796802,9.887803,-0.798255,3.126806,-4.720729,-9.759037,5.828204,-3.044668,-4.151906,0.493549,3.927604,2.295207,-0.444264,6.921219,-5.144110,6.447752,1.601572,-5.017762,-2.663092,5.967518,9.945887,5.369026,8.211108,-9.919602,-4.878366,-3.178891,-2.292575,3.693475,-6.483449,-3.888566,-1.140886,-8.737462,-3.791017,9.767704,-4.993495,4.760123,1.370783,-9.099427,-4.037552,-9.380924,-3.146754,2.708419,-7.924171,1.932033,6.829189,2.380222,6.130482,0.904785,-6.753311,1.006680,1.536043,-4.895120,0.013162,-5.447114,6.867925,-4.914370,8.204583,-1.403401,-7.675423,-5.092238,1.298912,4.170282,-5.396105,-7.115715,-2.254017,5.605649,2.645647,-1.947461,8.629645,-9.839049,6.939353,-3.494924,-3.836071,-3.753275,9.557249,5.831609,-8.021848,3.468351,9.165140,0.840176,2.202474,-5.638583,-4.374823,5.931226,6.567044,-0.820221,6.672457,5.773385,3.014002,-3.034573,7.980892,3.751961,5.156353,-1.527469,-2.799991,-3.143530,-8.017266,-8.674060,5.237653,-9.146915,-6.151226,4.608348,-1.548009,8.090863,-9.856653,-0.484528,1.857370,4.820568,-7.273080,-0.509937,4.518206,9.260007,4.640159,-8.936270,2.482163,8.084655,3.424265,0.598395,8.614038,3.464933,1.037873,0.519147,6.121781,9.299728,-5.102561,-7.321966,-4.461288,-1.611550,-4.591167,-3.659162,5.170109,1.675802,-6.391639,-4.372540,8.825984,0.094433,6.879471,-1.378908,1.609664,7.314261,1.776378,9.818020,4.065022,3.272209,-2.811584,0.266333,7.891194,-3.741337,-1.226088], dtype = "float32")#candidate|2022|(1152,)|const|float32
call_2020 = relay.TupleGetItem(func_1476_call(relay.reshape(var_2021.astype('int32'), [10, 13, 3]), relay.reshape(const_2022.astype('float32'), [576, 2]), ), 4)
call_2023 = relay.TupleGetItem(func_1480_call(relay.reshape(var_2021.astype('int32'), [10, 13, 3]), relay.reshape(const_2022.astype('float32'), [576, 2]), ), 4)
var_2024 = relay.var("var_2024", dtype = "bool", shape = (16, 9, 9))#candidate|2024|(16, 9, 9)|var|bool
bop_2025 = relay.divide(call_2020.astype('float32'), relay.reshape(var_2024.astype('float32'), relay.shape_of(call_2020))) # shape=(16, 9, 9)
bop_2028 = relay.divide(call_2023.astype('float32'), relay.reshape(var_2024.astype('float32'), relay.shape_of(call_2023))) # shape=(16, 9, 9)
func_1476_call = mod.get_global_var('func_1476')
func_1480_call = mutated_mod.get_global_var('func_1480')
call_2030 = relay.TupleGetItem(func_1476_call(relay.reshape(var_2021.astype('int32'), [10, 13, 3]), relay.reshape(const_2022.astype('float32'), [576, 2]), ), 1)
call_2031 = relay.TupleGetItem(func_1480_call(relay.reshape(var_2021.astype('int32'), [10, 13, 3]), relay.reshape(const_2022.astype('float32'), [576, 2]), ), 1)
func_1552_call = mod.get_global_var('func_1552')
func_1555_call = mutated_mod.get_global_var('func_1555')
call_2032 = relay.TupleGetItem(func_1552_call(relay.reshape(call_2018.astype('float32'), [10, 16, 6])), 0)
call_2033 = relay.TupleGetItem(func_1555_call(relay.reshape(call_2018.astype('float32'), [10, 16, 6])), 0)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_2043 = func_2013_call()
call_2044 = func_2013_call()
func_1931_call = mod.get_global_var('func_1931')
func_1934_call = mutated_mod.get_global_var('func_1934')
var_2059 = relay.var("var_2059", dtype = "int16", shape = (130, 1))#candidate|2059|(130, 1)|var|int16
const_2060 = relay.const([[-8,-7,-3,10],[9,1,5,4],[6,10,4,-4],[10,3,2,9],[2,-2,10,-5],[3,10,-6,2],[4,7,7,-8],[5,-8,-7,-1],[-5,-4,-5,6],[4,8,10,-1],[-1,4,-10,-6],[4,-4,-1,1],[-7,10,5,10],[2,9,-7,8],[-9,-7,-5,-3],[-8,-1,3,-6],[-9,10,4,3],[-7,10,3,3],[2,-8,-2,-5],[10,-9,8,-3],[2,10,5,-2],[6,-6,3,8],[9,10,8,2],[-3,-1,6,7],[7,-4,1,-5],[-1,5,-2,9],[10,3,-7,8],[-5,1,4,9],[-5,6,-10,-2],[-3,5,9,-9],[3,9,-6,-10],[-9,-10,8,6],[2,-9,2,3],[6,3,2,-4],[-3,-5,-9,7],[5,-3,-9,-8],[9,-5,-9,-8],[-8,10,-2,-5],[5,-3,-6,-4],[-10,-5,6,-1],[-1,7,7,-4],[-6,-5,7,5],[-9,-10,-9,-5],[3,-7,5,3],[-4,-7,8,4],[-6,-4,10,-8],[-8,-3,3,5],[1,-7,9,4],[10,4,3,-2],[8,3,-7,-6],[-7,3,10,10],[-3,-8,4,-8],[3,4,2,4],[-6,-8,6,-10],[-5,-7,-5,6],[1,-10,8,-1],[10,7,-5,-3],[-8,6,5,8],[-10,-6,-1,5],[-8,7,5,-7],[5,-8,-6,3],[-10,-9,4,-6],[4,1,4,-5],[3,10,-2,-2],[10,-9,-8,10],[9,6,9,-8],[-6,6,7,4],[-5,-5,-1,4],[-6,10,5,-6],[1,8,4,3],[-8,-1,10,4],[-10,-2,7,-2],[1,1,-4,-10],[8,7,7,3],[-8,-10,-10,6],[3,-8,-4,-5],[4,10,-2,-5],[2,4,1,-5],[-2,9,-9,-9],[-3,-5,9,3],[-8,3,5,2],[-1,7,4,3],[6,9,7,8],[-6,6,-4,1],[3,-4,6,-6],[-10,1,4,3],[7,5,-9,3],[-7,3,7,-5],[-9,-9,-5,-4],[-9,-1,10,-4],[6,-1,4,10],[-3,7,6,10],[-3,10,5,2],[-10,6,-7,-1],[2,7,5,1],[8,-8,2,-10],[1,2,6,10],[9,10,-8,10],[-10,-10,-4,-5],[-9,-7,-4,-7],[-8,1,-2,-2],[8,-6,2,8],[3,-8,-9,9],[5,10,-4,-4],[-5,-8,5,8],[1,-2,2,-4],[-10,-1,-5,-8],[8,-10,6,-7],[-9,7,-5,7],[-3,-1,-9,-9],[9,-7,-10,-7],[-4,1,10,-10],[-2,-3,4,-5],[9,1,2,6],[-9,6,-9,-8],[-7,-2,8,8],[-8,9,2,-10],[-1,-8,2,2],[6,-3,-10,-7],[-1,-6,8,-8],[-8,8,-2,-1],[-1,6,1,-5],[8,4,-8,-5],[-10,7,-8,4],[-4,3,3,1],[-3,5,8,2],[7,-4,-7,-1],[3,-4,-3,-4],[-5,2,-3,1],[-1,9,-10,5]], dtype = "int16")#candidate|2060|(130, 4)|const|int16
call_2058 = relay.TupleGetItem(func_1931_call(relay.reshape(var_2059.astype('int16'), [13, 10, 1]), relay.reshape(const_2060.astype('int16'), [13, 10, 4]), ), 1)
call_2061 = relay.TupleGetItem(func_1934_call(relay.reshape(var_2059.astype('int16'), [13, 10, 1]), relay.reshape(const_2060.astype('int16'), [13, 10, 4]), ), 1)
const_2065 = relay.const([[-5,2,8,-6,-9,2,-8,5,3],[-8,4,1,7,-2,7,2,10,7],[-6,-2,10,4,-7,10,5,-6,-3],[4,-4,-9,-8,4,-5,-7,-6,3],[3,3,-6,-1,-10,1,4,3,2],[1,-3,9,6,8,-4,-5,10,-8],[-9,-1,-4,2,10,5,7,3,1],[-7,-7,-6,-8,10,8,-6,7,-8],[2,10,-3,-3,3,10,7,10,4],[4,6,2,2,-3,-7,-3,-8,10],[-9,4,10,-7,-3,10,-4,1,-8],[6,-5,10,-7,-3,-5,-8,6,10],[6,-3,-6,-6,5,2,2,-3,6],[-1,8,10,6,10,10,8,-1,6],[-3,-10,2,2,-10,3,2,-9,-7],[-4,6,5,-7,-3,5,6,4,6],[7,-1,7,-5,9,9,-2,9,8],[4,-8,-4,10,10,-5,9,-8,-3],[8,6,-9,-3,8,8,7,-3,-3],[-9,6,-7,10,5,8,-5,-3,4],[-3,-4,3,1,6,-7,1,-9,9],[-8,-2,9,10,-8,4,-6,3,10],[-1,-5,6,-3,-10,-4,10,2,-4],[4,4,6,8,-4,1,4,-8,-9],[3,-9,-6,-5,-4,10,5,-1,-8],[8,-8,-6,10,-1,10,-1,1,7],[-5,-4,9,-7,8,5,3,-3,-6],[10,-8,4,-10,-3,7,8,2,10],[-6,6,-3,1,4,8,2,8,8],[7,7,9,-10,7,-1,-3,-4,-2],[-2,4,6,8,10,7,9,8,-4],[1,5,7,-5,-2,9,-3,-8,9],[-8,3,4,-8,6,9,2,-5,10],[-3,-2,1,1,-4,-2,5,7,-10],[10,4,-1,-5,4,1,1,6,-3],[5,-4,4,-10,-6,1,-10,3,6],[-6,8,-10,-4,5,4,-1,-3,-8],[9,-8,-4,2,-9,-9,-10,7,-7],[-8,-9,2,-2,-2,6,-4,7,3],[-10,-7,-1,-5,1,10,8,-10,-3],[-10,-5,-10,2,9,5,-3,8,-5],[8,1,-1,-9,9,5,2,-8,10],[10,-3,3,1,-4,-8,8,-2,-5],[-10,-1,-4,2,2,4,10,-5,-3],[3,-4,2,8,8,-1,-3,9,-1],[-10,10,-4,5,-8,-7,9,-4,-6],[5,-10,-6,-9,-1,2,-5,4,-6],[10,2,-2,-9,-8,-3,3,8,4],[2,2,-6,-5,9,-6,10,6,4],[-3,-2,7,-7,5,2,1,7,-9],[-8,-3,8,1,5,-3,9,1,-9],[7,9,-1,-3,8,6,2,4,10],[-5,3,8,9,2,-9,10,-6,7],[-1,2,2,-7,-1,-10,-6,-1,2],[-4,9,3,-8,-3,2,-4,4,-2],[-1,1,-1,-2,-3,-3,4,-8,-3],[10,-1,-6,5,-8,5,3,7,9],[-4,-5,3,2,5,-10,-8,-2,3],[6,9,7,1,9,6,8,-10,-5],[-10,2,-6,8,3,6,7,6,-3],[-9,2,4,7,-6,-4,-9,9,-2],[4,-10,9,4,6,-3,2,-5,1],[2,1,6,-10,-10,8,5,-1,10],[-9,-5,6,-7,-9,3,-4,-9,-7],[-10,9,8,-3,1,6,-1,8,3],[3,2,-2,1,4,-1,-4,7,-5],[3,6,10,-7,-10,-7,9,-2,-4],[-8,10,-7,-2,-4,-6,-2,6,3],[3,-7,5,7,-7,-4,3,6,-5],[-6,3,6,10,-8,-7,2,-1,4],[-4,9,-7,-2,9,6,8,1,-4],[3,-4,-10,-2,-4,3,10,-6,-9],[-3,7,-9,-6,-7,-10,-3,-6,-2],[1,-1,8,10,1,6,-2,1,9],[-4,-8,-1,3,9,-2,-6,-8,5],[-2,3,-4,3,6,-5,5,1,10],[2,-5,-3,-4,9,7,-8,-2,2],[8,9,-1,-2,-4,10,4,-7,2],[7,10,-10,3,-6,8,8,-3,-3],[-3,-1,-7,-3,4,9,2,6,3],[9,-5,-10,2,1,5,10,-9,7],[3,-7,9,-4,4,-3,5,5,-6],[3,3,1,-7,7,3,4,-3,-2],[-8,5,6,1,9,-9,10,-3,5],[-4,5,10,5,-4,4,-5,4,-4],[-10,-10,-10,-6,-1,5,2,-8,-1],[7,-2,-8,-8,-7,-3,-3,-6,3],[-1,10,5,10,5,6,-8,-5,3],[5,6,-4,-4,3,-9,10,5,-4],[5,10,3,9,-7,2,-8,3,-2],[3,3,10,4,4,9,-4,3,6],[9,9,-10,10,-9,-9,10,-9,-2],[5,-8,-7,-8,-1,6,8,3,-5],[-8,8,-6,8,-1,-8,-5,-10,1],[-10,-10,-9,8,-4,-5,-5,-4,10],[-2,-5,-5,-7,-6,-3,-4,-8,-4],[1,-4,-7,5,-2,5,-6,-10,9],[4,6,-2,-8,4,3,3,-1,10],[-8,10,-4,1,1,3,-7,-7,-8],[3,-7,4,-6,5,-7,-5,-2,4],[1,5,5,1,6,6,-9,4,6],[8,-6,-9,-8,8,1,-5,7,4],[10,5,-5,2,2,2,5,-9,-10],[3,-5,9,5,2,-6,6,-2,-3],[-6,3,-2,-5,2,7,-4,-4,-3],[9,-9,-10,5,-2,-10,8,-10,1],[5,-9,10,10,4,3,9,5,-2],[2,2,-8,8,8,6,-2,-5,-7],[4,-9,1,8,-5,-7,-8,6,-4],[-4,-8,-2,10,-5,-2,-2,-8,-7],[-4,-9,7,-7,5,-5,-8,1,1],[-2,7,8,8,8,-10,6,-9,6],[-1,9,8,4,4,4,1,8,3],[-7,-5,-10,-9,10,1,2,-9,-7],[8,3,-9,9,4,7,-3,-10,-9],[-5,7,6,3,10,-10,9,10,-10],[-10,10,8,1,2,-2,-2,-1,4],[6,5,9,5,-3,-1,-6,4,5],[3,-3,-7,-6,-2,7,2,3,-1],[3,2,3,-9,-6,-4,4,7,2],[4,1,5,-2,-3,-4,-9,2,-3],[7,-3,4,6,-7,-7,4,-7,7],[-5,8,-6,-4,-1,8,-1,-5,-10],[4,-9,8,9,7,-7,7,3,-9],[10,-4,10,-5,9,-5,-1,4,1],[-5,-3,8,7,1,-3,-9,-6,3],[4,-6,10,-1,-2,10,-8,6,7],[1,-1,6,-7,-6,7,-8,9,-6],[-5,7,-4,1,-4,-5,-10,7,-3],[5,5,2,1,4,3,-7,7,-6]], dtype = "int16")#candidate|2065|(130, 9)|const|int16
bop_2066 = relay.mod(var_2059.astype('float64'), const_2065.astype('float64')) # shape=(130, 9)
func_1552_call = mod.get_global_var('func_1552')
func_1555_call = mutated_mod.get_global_var('func_1555')
call_2073 = relay.TupleGetItem(func_1552_call(relay.reshape(call_2043.astype('float32'), [10, 16, 6])), 0)
call_2074 = relay.TupleGetItem(func_1555_call(relay.reshape(call_2043.astype('float32'), [10, 16, 6])), 0)
func_308_call = mod.get_global_var('func_308')
func_311_call = mutated_mod.get_global_var('func_311')
call_2077 = relay.TupleGetItem(func_308_call(relay.reshape(var_2024.astype('float64'), [16, 9, 9])), 0)
call_2078 = relay.TupleGetItem(func_311_call(relay.reshape(var_2024.astype('float64'), [16, 9, 9])), 0)
func_1552_call = mod.get_global_var('func_1552')
func_1555_call = mutated_mod.get_global_var('func_1555')
call_2079 = relay.TupleGetItem(func_1552_call(relay.reshape(call_2032.astype('float32'), [10, 16, 6])), 0)
call_2080 = relay.TupleGetItem(func_1555_call(relay.reshape(call_2032.astype('float32'), [10, 16, 6])), 0)
uop_2082 = relay.asin(var_2059.astype('float32')) # shape=(130, 1)
uop_2094 = relay.atanh(const_2022.astype('float64')) # shape=(1152,)
const_2097 = relay.const([-7.258002,7.604912,4.834976,-2.159734,-5.925523,7.967040,2.854524,0.908527,6.144577,-0.159496,8.902155,-1.051374,2.594120,4.162724,-3.617028,-9.271836,-8.565832,-3.824384,1.182563,-9.245953,-9.034690,9.986706,9.367113,0.835337,-5.270713,1.236301,-8.175416,-4.740278,-2.771402,6.462724,-9.589843,1.658104,8.522280,-6.759898,-5.322519,-1.804262,-8.491665,9.713781,-3.668587,-6.389205,-4.848703,-6.299933,8.748237,-3.499641,-4.026952,1.794519,3.239052,0.078657,-7.095196,-4.788075,-7.015208,2.035420,-0.608382,-9.762738,1.779958,6.458818,-1.691706,-4.157516,-3.062357,-6.651310,-9.933522,9.409960,-3.316252,-4.217150,-7.047712,-6.504914,2.590899,7.634474,-1.617924,-3.939507,-4.010112,2.704895,-3.775522,3.379436,4.105893,6.150881,3.609316,9.853274,-9.339470,-2.094208,-5.592901,7.468259,9.333933,-5.806018,8.708115,4.389980,-4.608238,-3.628712,0.326522,-2.377398,5.721764,-2.847952,-4.291226,5.854035,-9.456803,-4.841579,-0.356184,-1.709384,-5.282186,8.448065,-3.471766,-0.701476,2.028089,6.110143,-9.700848,5.165962,1.644447,-6.885102,-2.364470,-4.441532,8.755191,9.354205,4.484795,1.535737,-4.770150,2.640359,-4.755881,-5.139766,-8.641656,-3.711705,1.337491,6.563163,5.377615,-2.026086,4.967429,-0.465238,7.767877,-7.115150,-0.127370,5.507225,-7.274423,1.168845,-7.001592,-8.023673,4.211577,4.939788,7.791638,7.889731,-4.730742,-5.604755,0.230867,-5.726046,-4.952150,0.639914,3.592653,-8.550076,1.074285,-3.471737,2.208217,-4.563177,1.677129,8.634914,-8.911826,9.304771,-4.043355,-0.979896,8.142050,5.616541,6.623489,-5.113466,8.710207,-3.817603,-4.129783,-6.919532,-6.693351,-6.682198,-7.022973,-9.087859,-6.007010,9.804731,2.289063,-5.557836,-6.794476,-6.839325,-7.744509,-2.860969,1.987630,-9.675506,6.586182,1.618443,-2.457017,9.373952,0.625985,4.906385,-7.997578,8.571090,5.861090,-3.169085,9.364633,7.171044,6.532638,6.203527,1.899961,-3.111341,-9.104824,-7.417993,8.536340,8.939113,3.418669,-1.817360,1.437325,7.585935,-1.456044,-0.975835,-7.431238,5.383347,-6.325780,5.586116,3.115005,-8.800224,5.580766,-5.313132,5.769019,-2.727720,-1.733683,-4.464118,-5.515124,-3.271577,0.611687,-8.688973,9.276401,7.665753,-2.495682,3.726122,-9.193013,5.263640,-6.957130,-2.564683,3.672051,-6.154445,4.965894,4.954327,-3.502098,-7.485926,-5.222294,7.716755,9.220400,1.965704,4.030667,3.578221,7.584405,-7.402705,-1.812620,1.466342,7.802032,7.092520,-3.246744,-3.536349,6.194495,-5.951118,6.328791,7.934465,-7.120079,-9.400380,5.532889,3.893243,-6.299018,-2.587937,-3.040164,-5.203715,7.451077,-0.071742,-2.182150,-8.601832,-0.027111,5.231814,-7.689622,-2.223941,-7.657895,3.114123,-7.495396,-8.281093,-2.445183,0.884246,-3.752516,-3.455807,9.257472,7.612102,9.407619,7.564268,-0.640958,7.505326,8.492586,0.368409,-2.855655,9.443073,1.294279,9.104877,-6.157833,-8.084101,-2.112986,-1.947791,7.245366,0.549778,1.032794,-6.935463,7.505325,2.313419,4.812016,-6.368132,5.815255,-4.739281,0.045517,-5.849661,-5.827778,-0.235121,7.684645,2.960260,-0.576103,8.557751,5.943679,7.642054,4.464299,-3.958270,9.890382,-4.543556,-4.270920,7.303170,-1.121667,-7.395639,-6.073936,6.639644,6.671088,2.894668,2.011316,-5.349647,-6.203920,0.344963,-7.803776,0.181108,8.476404,-9.595801,-2.869904,5.413041,5.566052,-3.925253,2.770173,3.039556,-6.424722,-8.825726,8.247047,-1.609859,3.279256,2.284223,0.752615,4.778808,-4.119751,0.869443,-5.803127,9.047567,-8.498817,6.739423,2.349808,-9.372095,0.228134,1.273194,2.424443,1.474587,0.167912,-0.811755,9.588818,7.076344,9.299956,-4.080867,-6.073504,1.760455,4.694464,-1.740167,0.567279,-0.601245,4.204885,7.450577,-0.341051,9.221411,1.149019,-4.893854,-1.033504,-2.804962,-7.071084,6.082796,-6.672922,4.935937,1.537816,-8.367371,5.825809,-0.767557,-1.262853,1.917433,-1.181621,1.477911,5.248657,-2.915376,6.869385,1.032776,6.088642,-5.211266,-3.096022,-5.384765,9.039004,-5.477850,4.160894,-8.295438,0.266498,-4.726632,-1.003765,6.779447,-5.520414,3.712932,6.472578,9.635880,0.432893,-6.932851,-9.448919,-2.638531,-8.014926,-1.713728,3.138690,8.661846,-4.480224,-2.722108,0.450177,-0.575088,0.560769,-7.912197,0.568411,5.624423,9.152227,-3.340858,-7.335259,-8.375317,1.571976,2.820519,3.826388,9.263018,-8.138965,-4.277391,-1.148646,2.599142,7.360222,-7.747029,-8.419707,0.348759,3.178275,8.583283,-9.948201,-5.005025,-8.264719,-8.093798,6.650915,5.097650,0.572619,0.108140,9.505772,9.066565,-1.930561,5.228445,-7.398959,1.891398,-9.332633,1.282579,-4.910446,-7.924138,5.054148,-4.761647,9.152364,3.064032,1.816685,-4.349257,1.165950,8.726816,4.246234,-2.457535,-7.790375,3.709259,-8.522001,8.472441,2.092904,9.367189,3.169417,8.336528,-3.057612,6.741506,5.407908,-9.623185,-1.729425,4.016055,-4.234489,2.808818,4.155268,8.171172,2.396508,-1.061889,-4.400060,-5.132183,6.815324,-0.648846,-5.489142,0.368998,0.503893,-6.834280,-5.030270,0.892440,-2.775681,5.900828,-7.208758,1.521407,1.297935,-2.262217,-1.359678,3.272011,-3.015241,7.483993,-1.969732,-1.541589,-4.531820,7.774479,-6.511155,7.853107,9.805482,-5.247774,2.427697,9.893797,1.584118,-3.079055,-4.262895,8.958335,-0.534584,6.170005,-0.438721,-9.228953,4.204768,7.182390,2.804116,-8.032431,3.141514,-0.936997,-0.240284,0.509073,3.358868,2.084710,-0.097787,-6.203771,3.207923,3.317681,5.228701,-5.248341,0.605022,4.790781,-1.065964,5.006590,-6.518869,-5.192051,8.297598,7.469428,-6.228398,4.940091,1.851979,1.016936,1.724318,-7.297488,-7.308440,8.720855,-5.065053,-0.672425,-5.588685,-4.356596,8.514047,-3.497359,4.249763,0.557908,-2.992260,-4.264241,-8.759097,2.882688,-5.581240,8.824359,-9.250139,-2.088214,5.498604,-5.328039,-4.488972,-9.875158,5.579200,-0.009384,-4.880087,-4.185051,-1.830526,8.523230,-3.852185,4.795787,-0.178772,-4.793055,0.749686,-5.989676,6.596243,3.600860,3.122187,-1.419035,-5.970210,7.257987,-9.540102,2.044460,-9.366001,-0.751765,2.175462,1.279289,-1.970495,7.381304,-3.490671,-0.135706,-2.933356,7.936965,7.774145,-3.854460,5.787912,1.057110,-3.918929,-7.804629,0.835378,8.952036,-5.607945,-3.424230,-1.020594,1.144343,3.960172,7.469728,3.371928,-3.036097,-0.685122,-5.485638,-6.275978,8.593067,-1.990769,-5.619842,-4.225655,8.960098,-1.917566,7.669010,8.345194,-9.386197,-0.712681,-0.435074,-6.317199,3.444612,9.217268,-2.588633,3.268627,-1.491599,-9.615611,8.192589,2.081686,5.339404,-6.557551,-2.780033,6.668503,4.848676,-8.222709,3.876237,-2.733619,0.512133,-1.486726,1.607548,-9.564496,-6.046108,-4.834658,5.710530,-8.994797,-6.867622,-1.055986,-7.157806,1.141634,9.222738,5.516304,-9.495671,2.932246,5.869319,-8.658754,1.653738,3.252557,8.760325,9.098895,5.311349,1.770650,0.078684,-3.205666,-1.924226,4.406105,-3.809812,-0.169543,-8.754234,-4.076882,-5.209818,-3.166664,2.070133,8.563144,-1.411561,-4.339565,-1.470586,1.200660,1.833668,9.472234,0.733073,8.576910,7.310813,-2.938719,-1.989263,4.942374,3.139551,-6.106317,9.274504,8.518765,7.076890,4.166350,-4.422648,2.207252,3.022568,6.958394,4.103547,-9.273026,-8.325483,-0.548524,0.367611,3.843239,9.659834,-9.650184,4.602045,-4.311732,3.727618,-0.415189,-6.113635,8.690479,-3.955291,-3.113045,4.984941,-5.339501,-5.740585,-8.918787,5.983654,-4.966714,-0.515237,3.840910,5.797952,-4.243734,-2.554442,-5.680639,-3.485984,-4.360204,-1.258425,-9.029729,6.997123,9.063769,1.538101,2.862040,-4.868748,5.319269,-1.956408,-2.232066,7.305597,-0.523673,-6.967568,-4.671096,-6.931259,6.369412,-9.340719,1.534141,8.579449,5.500507,-1.306458,5.462972,-4.697198,6.318143,3.742779,-8.786475,-3.936718,-2.876377,4.278468,1.919115,2.158281,-0.696829,-3.496315,8.284149,8.989102,-8.187096,-4.533362,-9.419859,8.518613,8.624694,1.864129,3.056565,6.703385,-3.797041,-2.593354,-3.635540,7.416727,9.654603,-7.325828,9.276090,6.820436,-1.386736,4.454437,4.085669,-8.913809,7.732065,-1.952767,-7.549856,1.503015,1.108944,-0.444815,3.164748,-0.681055,-6.600028,-2.067146,-0.491394,5.986848,5.918559,2.127163,8.796591,9.683618,-2.935753,5.526058,0.244420,4.748429,7.763577,5.546645,7.577227,6.418735,-2.254104,1.526968,-1.362504,6.772273,0.223108,-6.964942,6.217402,-0.955594,7.004626,-5.953373,-3.397005,8.852971,1.055139,-0.029630,6.883789,-5.923305,2.575672,-6.706240,8.779127,6.029172,2.116784,9.056342,-6.280736,-5.059229,-8.117433,-6.638976,-7.095827,-2.864603,-4.292499,4.866291,-1.836974,-3.054443,8.686090,4.704460,-6.637047,-4.795418,-7.704025,-6.586145,7.715823,1.386989,4.972969,-4.619755,3.341006,-8.329014,5.943890,5.864694,8.998654,-2.069651,6.041170,9.105630,-2.011427,0.263157,-5.870816,4.432522,-7.219320,2.482108,1.977233,5.996406,-8.564784,-5.555545,4.920502,1.375759,4.410585,-5.791585,-9.000217,8.593652,9.470704,0.701372,-8.870279,6.558365,7.104428,5.436262,-6.753323,-6.814066,-8.391618,-4.472988,-8.659747,-1.222890,1.840211,-3.060173,8.590796,4.726698,-9.760648,-9.255958,3.269225,3.904248,-5.536669,2.344398,-6.391379,3.374210,0.630233,-7.302693,8.801367,3.746767,3.983329,-0.116438,9.680854,1.423005,4.127887,6.084488,5.515973,3.228769,7.990512,-5.870850,-1.739567,-9.412710,-7.145925,-8.603841,3.822695,-1.960036,5.645216,9.527694,-3.639964,0.059826,-9.078598,2.176747,5.188937,9.610851,5.422661,-4.531191,7.385138,0.040490,-2.789631,-2.908463,-3.827189,-7.682165,4.736000,-8.419016,7.444988,7.446887,-2.880564,6.141813,-8.124591,-0.522606,6.565872,6.957947,6.014182,-3.976356,-5.099262,-9.243970,2.379252,4.779568,-3.732536,4.448176,7.115804,-1.745490,5.450717,3.982134,-4.454317,4.381565,8.094511,6.131983,-2.425717,-4.089759,-6.532638,2.454950,8.580119,-9.670934,-6.151862,5.108531,6.542861,-8.639487,-8.035039,-8.909379,8.933479,-5.131427,-0.088669,-2.903431,5.314652,-3.639653,4.053595,8.279138,-5.147174,-8.813054,7.286680,-2.351368,9.031731,8.524874,-7.084975,0.424281,-9.191499,-4.433365,1.831425,1.411426,9.621322,-1.985117,3.830142,-8.188514,1.563471,-2.719135,-1.398918,9.551919,7.424998,1.302019,-4.213775,-3.817638,-2.395520,-4.269076,3.837948,-2.895964,8.736692,5.814393,3.782869,-1.699721,-9.085134,6.088630,4.504661,0.943108,-7.187909,-0.219479,1.340620,3.298526,-6.442462,0.592928,5.000899,-0.638959,-0.461718,4.906927,8.275039,-2.903387,-9.030769,1.629097,1.804272,3.777218,9.732718,-7.245318,-2.379507,9.453227,4.249810,-7.206752,-3.171689,1.145967,-7.477463,-1.240379,-0.366155,2.821353,4.284788,-2.180430,2.999698,-8.723843,-4.628273,9.449324,-6.230101,3.371188,1.120827,-8.255807,-6.416173,-4.908057,-9.381321,6.084235,-8.527913,2.983152,5.452489,-6.536120,7.125474,3.560319,2.063754,-4.725396,9.376545,-0.698101,2.715936,7.865263,-8.066841,-0.841393,-3.332545,-2.864636,7.522990,-7.445822,2.048952,5.064831,1.782888,-9.817147,-5.531713,-8.775328,-4.158860,-8.848882,8.616720,-9.785056,-6.118532,-7.479319,-8.977448,6.375681,4.547697,-3.484919,-7.764667,9.948613,-2.401588,-0.025823,8.327123,0.439454,6.680989,9.715687,4.243214,6.343643,1.271241,-8.650134,-6.887379,4.453032,-8.119371,-2.914744,9.116961,-7.558534,-6.324491,-3.348618,-3.872581,9.438136,-3.372648,-6.265874,-9.918958,0.387525,-7.824938,9.402620,4.056656,-7.099458,-7.426597,-1.287260,-4.905490,-5.202817,6.291199,-8.205584,-0.744738,-6.284650,7.830975,-8.618415,-1.688883,4.900397], dtype = "float64")#candidate|2097|(1152,)|const|float64
bop_2098 = relay.logical_and(uop_2094.astype('bool'), relay.reshape(const_2097.astype('bool'), relay.shape_of(uop_2094))) # shape=(1152,)
func_1971_call = mod.get_global_var('func_1971')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_2101 = relay.TupleGetItem(func_1971_call(relay.reshape(const_2022.astype('float64'), [9, 8, 16])), 1)
call_2102 = relay.TupleGetItem(func_1974_call(relay.reshape(const_2022.astype('float64'), [9, 8, 16])), 1)
output = relay.Tuple([call_2018,var_2021,bop_2025,call_2030,call_2032,call_2043,call_2058,const_2060,bop_2066,call_2073,call_2077,call_2079,uop_2082,bop_2098,call_2101,])
output2 = relay.Tuple([call_2019,var_2021,bop_2028,call_2031,call_2033,call_2044,call_2061,const_2060,bop_2066,call_2074,call_2078,call_2080,uop_2082,bop_2098,call_2102,])
func_2103 = relay.Function([var_2021,var_2024,var_2059,], output)
mod['func_2103'] = func_2103
mod = relay.transform.InferType()(mod)
var_2104 = relay.var("var_2104", dtype = "int32", shape = (390,))#candidate|2104|(390,)|var|int32
var_2105 = relay.var("var_2105", dtype = "bool", shape = (16, 9, 9))#candidate|2105|(16, 9, 9)|var|bool
var_2106 = relay.var("var_2106", dtype = "int16", shape = (130, 1))#candidate|2106|(130, 1)|var|int16
output = func_2103(var_2104,var_2105,var_2106,)
func_2107 = relay.Function([var_2104,var_2105,var_2106,], output)
mutated_mod['func_2107'] = func_2107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1883_call = mod.get_global_var('func_1883')
func_1885_call = mutated_mod.get_global_var('func_1885')
call_2115 = func_1883_call()
call_2116 = func_1883_call()
output = call_2115
output2 = call_2116
func_2120 = relay.Function([], output)
mod['func_2120'] = func_2120
mod = relay.transform.InferType()(mod)
output = func_2120()
func_2121 = relay.Function([], output)
mutated_mod['func_2121'] = func_2121
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2161 = relay.var("var_2161", dtype = "int64", shape = (1, 13, 7))#candidate|2161|(1, 13, 7)|var|int64
const_2162 = relay.const([[[5,-2,3,-7,-3,-4,-7],[-10,-9,-7,-6,-2,5,2],[4,-7,-5,-5,1,3,-8],[-5,-4,-5,2,1,8,6],[-1,-7,-4,-6,-5,1,1],[-10,-3,-6,-9,-9,5,-10],[-3,8,5,-1,-2,-9,-7],[3,-6,-9,-7,5,9,7],[-4,-9,-3,3,2,6,10],[-1,8,5,8,-3,2,-2],[-2,3,6,-4,-8,-5,-2],[4,-8,9,10,10,-1,-4],[-10,1,5,-9,5,10,-4]],[[-4,7,8,-3,-3,-2,-1],[-7,3,-3,-1,-10,9,-6],[9,-5,-6,-10,-10,-3,6],[-6,-10,3,-2,10,5,4],[5,5,9,8,-2,10,-3],[-5,-10,-7,-5,6,9,1],[-5,-1,4,-6,-6,8,5],[2,-1,-7,1,3,-6,-3],[4,10,10,10,7,-9,-2],[-1,-5,5,1,10,7,9],[-2,-8,-8,-6,10,-4,-3],[10,-2,-2,-5,4,10,9],[7,3,-10,-6,1,-9,-7]],[[10,8,3,10,-8,4,-4],[-7,-4,-10,-4,9,-3,9],[3,-6,5,-2,5,-8,8],[6,6,4,-10,8,7,3],[10,-1,-9,8,1,6,2],[1,-4,10,10,2,6,-3],[7,-2,-7,2,10,-2,7],[-6,-10,7,-4,5,-10,-4],[-9,1,3,5,-8,8,4],[-8,-5,-2,-3,-10,7,-3],[-4,-3,-5,7,8,10,8],[2,5,4,6,7,-6,-8],[-2,-8,-7,-9,3,-2,7]],[[-7,-7,8,-2,-6,-10,-8],[9,7,-7,10,-4,-6,-5],[10,-10,9,-9,-1,-9,9],[-9,-6,-3,4,8,3,2],[-10,8,1,10,-5,-8,8],[-5,-9,-4,-5,-5,-6,-2],[4,-10,3,8,-8,-5,-5],[-1,-2,-10,1,5,-2,2],[3,8,-7,6,8,5,10],[1,5,-10,10,-8,-5,-6],[3,-6,-3,-6,3,-10,5],[9,7,3,-3,9,-5,4],[-9,-7,-8,1,-5,2,8]],[[-3,9,-10,-3,8,-8,-9],[5,-10,-4,7,10,-5,-4],[7,1,8,-3,8,-3,-1],[-3,-3,4,3,2,1,-9],[-7,3,6,3,6,4,9],[8,10,2,2,-9,-3,-4],[-3,3,7,-3,2,8,-9],[9,2,9,1,-7,7,-7],[-7,7,5,9,5,-4,7],[4,4,5,3,8,-5,-8],[-1,3,7,9,1,5,-9],[5,-10,-1,2,-2,9,-8],[7,5,2,-7,9,2,-5]],[[7,5,9,1,-2,5,8],[6,-8,-4,2,-4,-7,-6],[-4,6,-2,-3,8,2,-7],[-6,2,-2,6,7,4,-6],[4,-7,-2,10,-6,6,7],[6,6,8,5,-2,8,10],[1,-10,-9,-3,-10,6,6],[-9,-1,-6,6,-6,-5,-3],[-8,-2,10,-3,-9,-9,-1],[-6,-6,-9,-10,5,10,9],[2,6,-7,-8,-8,-6,-9],[-7,-10,5,-6,3,1,3],[9,-5,-8,-10,9,1,-9]],[[4,2,8,2,7,10,-7],[-8,-10,-4,8,8,-6,8],[-2,-6,6,-10,9,-6,4],[-8,6,-1,3,-5,-9,10],[8,7,-4,-10,1,5,-4],[8,-8,8,2,-2,7,7],[10,5,7,10,5,4,-10],[7,9,-9,-2,10,-6,-3],[10,3,9,-8,10,-8,7],[-2,-8,-8,-4,3,-4,4],[-7,-5,6,9,-7,-10,4],[-3,-1,-8,4,7,5,-6],[4,2,-4,10,-6,5,-7]],[[-10,4,-4,8,5,1,8],[3,8,-3,-1,-7,8,2],[-7,-8,-2,8,-9,-9,8],[6,8,1,7,4,2,-2],[5,4,5,-8,-4,4,-3],[-8,4,9,3,8,4,9],[5,8,5,1,4,6,6],[-3,-4,-1,5,10,8,8],[-2,-1,10,7,3,-5,7],[-7,3,3,-1,6,2,3],[-6,5,-2,4,-8,-7,-9],[8,-6,-9,6,-8,6,-4],[4,10,2,7,-2,4,-2]],[[-10,5,-8,-4,-2,1,-7],[8,5,1,-1,3,-7,-10],[6,3,-4,-6,9,-9,8],[5,-7,9,6,-1,2,-6],[10,9,-8,4,1,4,7],[5,5,3,4,6,-1,-6],[1,-10,-5,-9,-1,7,-2],[-4,-6,6,-8,3,-10,-1],[-6,-4,6,-9,10,8,-10],[3,-5,1,-5,-1,8,4],[-5,-1,-9,-9,6,10,6],[9,-2,-6,-1,-8,-5,-9],[5,3,6,10,-8,2,6]],[[1,-7,-8,7,6,4,-6],[3,4,-9,-7,-10,2,-5],[-1,4,7,-4,-10,10,1],[-10,-4,10,-8,-4,6,1],[3,10,-10,-10,8,1,-7],[4,8,-2,-6,10,-3,-10],[-2,7,-8,3,-1,-5,7],[9,-1,-1,-6,1,7,-7],[-8,1,7,-7,-5,4,-3],[7,9,5,8,8,9,9],[3,-8,2,-10,7,7,-8],[-2,-2,-1,4,10,2,-9],[9,8,-1,-2,-6,-5,10]],[[9,-2,6,-9,-2,3,-6],[-2,-5,-10,-3,-9,-5,9],[-2,-1,-6,-9,5,-1,10],[1,-8,-10,3,6,-10,-1],[2,6,-9,-2,-9,1,-8],[3,6,-5,-6,-9,-2,5],[10,10,7,5,-2,-3,9],[-7,6,-8,-3,-9,7,-9],[3,-2,9,-8,-7,-4,-1],[1,1,-8,7,1,8,-2],[8,-5,-3,-7,-8,-1,-7],[3,2,-9,-2,-9,-4,1],[-2,8,-4,2,-7,-10,-5]],[[9,5,-9,5,-9,-4,6],[-1,-1,-1,3,-9,3,-8],[-2,-5,3,4,7,10,6],[8,-4,-2,2,-4,-7,3],[-1,-4,-2,-8,8,-10,3],[5,-6,3,2,4,9,10],[-1,7,-4,8,9,-2,8],[-4,-2,10,1,-9,-1,6],[1,7,9,-5,-6,-8,9],[-1,-1,-7,5,-4,-1,9],[6,-1,3,10,-3,-4,7],[3,3,-2,1,1,7,2],[8,1,7,10,1,2,4]],[[4,-10,-9,10,-9,-3,7],[-6,9,10,-6,1,9,-6],[7,-8,5,-7,-3,10,-8],[-2,4,-5,2,2,-6,-3],[-4,-7,3,1,5,2,4],[2,4,8,2,10,1,-1],[4,2,-7,10,-4,7,8],[-9,-3,6,-5,-7,10,-2],[-7,7,-8,-1,8,2,2],[-5,-1,5,-7,1,-7,-10],[4,-7,-6,-4,5,-7,7],[-7,1,9,6,5,-7,7],[3,-1,1,1,4,10,-1]]], dtype = "int64")#candidate|2162|(13, 13, 7)|const|int64
bop_2163 = relay.less(var_2161.astype('bool'), const_2162.astype('bool')) # shape=(13, 13, 7)
func_1931_call = mod.get_global_var('func_1931')
func_1934_call = mutated_mod.get_global_var('func_1934')
const_2178 = relay.const([-7,-9,-9,-6,-6,-6,10,9,-1,6,-5,-3,-9,4,-2,7,1,-4,10,3,-7,-4,4,-4,6,9,8,-8,10,-9,6,4,1,8,-9,7,1,-7,-5,-2,-1,-4,-4,6,-2,-8,10,-6,3,-4,6,-10,-3,3,-8,-10,-7,-9,-9,-5,-9,-1,-9,10,2,4,-5,6,1,-7,4,9,-6,-2,-3,-5,-2,-9,-3,2,-5,3,1,10,-9,-3,8,4,-2,8,5,-6,-2,-9,8,-2,8,-2,5,2,-3,-8,-1,-5,-1,6,8,5,1,-5,-7,-9,-2,-5,7,2,-4,-10,-5,6,8,3,8,-8,-4,-5,9,8,-8,-10], dtype = "int16")#candidate|2178|(130,)|const|int16
var_2179 = relay.var("var_2179", dtype = "int16", shape = (520,))#candidate|2179|(520,)|var|int16
call_2177 = relay.TupleGetItem(func_1931_call(relay.reshape(const_2178.astype('int16'), [13, 10, 1]), relay.reshape(var_2179.astype('int16'), [13, 10, 4]), ), 0)
call_2180 = relay.TupleGetItem(func_1934_call(relay.reshape(const_2178.astype('int16'), [13, 10, 1]), relay.reshape(var_2179.astype('int16'), [13, 10, 4]), ), 0)
func_1883_call = mod.get_global_var('func_1883')
func_1885_call = mutated_mod.get_global_var('func_1885')
call_2190 = func_1883_call()
call_2191 = func_1883_call()
func_1476_call = mod.get_global_var('func_1476')
func_1480_call = mutated_mod.get_global_var('func_1480')
const_2196 = relay.const([5,4,-9,10,10,-6,-8,3,-1,9,-4,-2,9,-8,-5,2,3,2,1,-1,-3,-7,6,-1,9,-5,-2,-9,-9,10,8,-6,9,10,-9,10,-1,-3,7,6,-5,8,-5,8,6,8,1,-4,1,2,-8,-1,1,8,7,-5,-2,-8,10,1,-4,-1,-4,-7,10,4,-4,-6,7,5,5,-6,3,-4,-2,10,-5,-4,5,-3,-1,-4,1,1,4,-4,6,-6,8,9,-6,-9,-9,9,2,-10,10,-9,-3,-1,-6,8,6,8,-5,-5,7,1,5,-1,-5,-2,-6,5,1,8,10,-9,9,2,6,4,-1,3,-6,-5,-7,5,-9,-5,-6,-8,-9,5,-4,-2,4,6,-3,-3,3,-10,-8,6,-5,8,5,8,-2,-4,9,9,-3,1,5,-5,-6,1,-9,-1,-1,6,4,-4,8,-5,5,2,-8,-6,-9,-3,7,8,4,-10,6,-3,-1,-9,4,-6,7,-10,1,9,-6,-4,8,-9,-1,7,7,10,-6,7,-2,-2,-10,-3,8,-10,4,-7,6,-7,7,4,6,3,2,6,2,-10,-10,-3,5,-5,7,-3,10,-8,6,2,-6,5,-3,-2,1,-9,-5,9,6,-6,8,4,9,-4,7,-6,8,-1,-6,-10,-4,-8,-1,-8,-3,-10,6,-6,9,2,7,-9,1,8,4,4,6,9,-1,4,3,-4,9,4,1,4,-3,-2,4,6,7,7,4,-1,-5,10,1,7,-5,10,6,-5,-8,7,-9,9,5,-1,4,-5,-9,6,-8,-1,-3,-2,-4,2,-5,3,4,-2,-10,5,5,2,4,3,3,8,5,-7,-6,-1,7,-5,-6,7,9,1,-3,-7,2,-2,2,-1,9,-5,4,-6,-2,2,-7,5,5,8,-8,7,-5,-7,9,5,3,-1,-8,9,-7,7,4,-9,-7,-8,-2,-6,-4,-5,10,-10,-9,-1,-9,6,-5,-9,-6,-7,7,-9,10,5,10,-6,-9,-3,-7,-7,9,2,8,-3,2,-9,-5,8,-4,9], dtype = "int32")#candidate|2196|(390,)|const|int32
const_2197 = relay.const([-3.743873,6.144367,-1.347338,6.874583,-0.304841,-6.007333,-8.793653,3.403864,0.471617,-6.234243,5.489422,5.727824,-7.799398,-7.865225,6.275847,-3.826029,6.736294,-6.763062,3.187841,-3.311945,1.083112,9.631997,5.399512,-0.421921,9.057519,-6.416556,-3.910260,-5.145863,-6.104198,-2.343321,-2.861169,-5.077777,-5.870215,6.102012,-0.217601,-8.196142,-1.011822,0.412756,-8.026029,6.327948,-0.296863,-9.647281,6.177960,8.960190,6.636683,2.038699,5.135279,-1.631884,-7.856412,8.328799,4.504084,-4.138115,4.426886,4.190079,-8.530892,-4.404853,-2.920293,4.846287,5.268360,8.101900,-5.836958,-3.565112,-0.215106,3.699640,-7.072700,9.880324,-6.989363,9.669825,8.113863,5.413982,5.500531,-6.346530,-4.095709,8.402622,0.130370,3.028779,7.582453,8.899225,-6.088250,-7.921565,2.934969,-4.815082,-4.412994,0.625044,-1.240267,8.097736,-5.194324,6.506194,7.569243,-6.730139,0.122924,-4.519928,9.161500,4.351398,-2.641991,-8.789326,2.001901,-8.162315,9.408779,-7.987308,-8.114677,6.614928,5.673730,-0.304620,-3.823859,6.364344,-4.602469,-1.680837,2.996738,7.612021,-4.389917,1.570526,-6.321622,3.083112,-4.338945,6.533099,4.968825,7.723224,4.991536,9.421297,3.355776,5.933507,-5.241111,5.419753,1.524193,8.444209,6.603843,-9.240620,-8.128470,6.683240,6.445314,-6.111310,6.023771,0.975735,7.686314,-4.476365,-7.706396,-5.589666,-8.519498,-2.182650,-2.502649,1.456621,5.229467,9.559541,7.917495,-7.557535,5.398356,1.215506,-0.771070,6.556250,8.968655,-7.961023,9.897425,-8.140602,7.323091,-9.247971,-7.687275,5.657263,5.681807,-7.951911,1.220906,9.057129,7.218334,8.251713,8.570785,4.012271,5.299167,-0.938193,-8.157688,-1.563711,-3.809010,4.199847,-5.603782,-6.150560,0.119541,-7.588432,3.165034,0.920183,-9.001754,-7.021210,8.523490,-9.816615,-5.756432,2.531185,4.791518,-1.970841,-2.337118,-2.586843,-3.804394,-4.627984,8.582693,-7.941540,-2.541355,6.267416,-6.444816,9.175356,0.075595,-0.356032,-7.918832,-4.794864,4.513566,8.276271,-8.487242,-7.100155,-2.857271,-4.140206,1.074792,-3.835120,-5.650729,-4.008218,-6.382585,-7.575123,4.842112,5.094760,4.156268,7.926735,-2.164616,-8.015907,5.022823,7.896747,-8.828871,4.391321,-1.185645,2.096018,-1.721848,4.345445,3.908381,-7.217878,5.509400,6.503996,-9.581593,8.423500,8.693859,8.643476,9.830017,9.611768,9.822316,1.363453,-8.803227,-1.739503,6.824434,9.231227,-9.674505,5.336215,3.513835,-2.814898,-5.503578,-6.951373,6.249559,-4.494876,-4.968624,-7.290160,-3.349122,1.801053,5.117332,0.515806,-9.287699,0.274766,9.593686,-3.419229,5.016736,-7.751819,-7.392936,-3.634311,-4.723523,-6.463695,-2.496518,-7.102826,2.955432,2.621699,-3.078367,7.458115,-2.944989,0.999368,2.425358,-5.771213,-3.784955,-5.905105,-9.821104,-7.663427,5.199893,0.090190,-5.306649,9.943618,-6.204633,-9.885672,4.269964,8.900976,-0.075746,7.379470,-9.535628,4.347188,-0.575808,5.174153,-0.379117,-7.043698,7.900639,1.806361,5.695052,7.314439,5.645917,-4.541529,2.516996,-3.199362,-0.873629,5.730406,-3.337794,7.419102,1.704101,3.069698,3.673754,1.777877,8.241856,-4.535367,9.475286,-6.138237,5.853851,-4.490443,-7.057817,-5.245760,-7.243991,3.334161,-1.671315,-2.927052,-2.594459,9.460664,0.036339,-4.055660,4.789718,1.841021,-8.133450,-7.801096,5.478166,-5.667283,1.360275,-1.402844,-4.025856,-7.238662,9.139333,-8.867874,-6.736042,4.423695,5.493044,5.666417,-0.354292,7.943531,-2.059009,-5.082722,-4.405553,-2.349167,7.256029,-5.679097,-8.255279,5.131115,1.729770,0.730650,5.986854,7.203603,-2.279315,-9.172919,9.018555,5.903597,7.878831,1.773102,-7.152034,6.592236,0.383300,-3.361237,8.786850,0.014577,3.538990,-2.441076,4.895468,5.276596,-4.309368,-4.059458,-5.540071,-8.565896,5.416048,0.335666,7.518374,4.297603,-8.497812,-5.421482,7.648593,-2.885491,6.707792,-7.241688,-0.355778,-2.450771,8.367859,7.505174,1.069176,6.878781,0.081032,-0.153381,4.013051,0.782525,0.341828,6.698186,8.149267,-1.992611,4.648011,0.993329,-3.402185,-3.531754,-0.898464,5.970519,5.735525,-8.335768,-4.328480,6.653309,1.538273,0.535059,7.735428,8.856812,5.231466,1.770677,-2.562732,-1.854074,-8.782661,-5.502960,-6.322050,-0.307700,-7.372737,8.882423,-0.882978,9.505814,8.489120,-5.644055,2.554063,-8.403626,0.541820,0.247835,-6.930078,8.052130,1.335917,-7.007810,5.307836,9.301884,2.219530,-5.841775,-6.345363,5.828115,6.102193,-1.292471,-0.114650,7.193866,-4.041021,7.530447,-4.993374,3.017328,8.585678,-3.670673,8.490371,-4.491479,-4.380259,-2.553488,-3.596986,-9.053580,0.523900,2.537992,7.755581,-2.176585,3.094637,2.769392,-8.135821,2.207581,-6.702816,-6.204497,-8.301837,-0.302981,-6.629635,2.616853,7.056560,-7.932985,-8.846166,-8.113673,-7.385109,5.064681,-4.486720,0.448465,2.194171,-5.338728,-4.800262,7.727463,-5.040899,9.702260,-4.562825,2.946630,7.956079,1.352554,3.817211,2.975065,-6.741593,-2.255538,8.229169,5.530506,-2.042851,-8.297017,-1.189101,1.120411,-3.107259,5.242759,5.438268,-9.436588,-4.479871,-9.099714,9.007414,6.536352,-0.721014,-6.394149,-8.332150,3.851029,-4.114005,4.856309,4.568632,2.677906,-0.235468,7.683089,5.623120,-8.033404,2.640234,-0.292462,-0.910460,-1.560584,7.206333,3.533036,-0.506597,-8.063687,-2.239958,9.301290,3.997486,4.922895,-1.979688,6.870285,-4.340672,5.344830,6.687070,-2.045810,-0.901521,-4.290928,-9.229263,9.130957,-6.762757,9.759007,8.793713,2.380436,7.741089,-9.526590,5.612634,3.919767,5.645647,5.126173,-0.546619,2.439422,-6.927519,-8.628855,6.557432,7.616049,-2.327914,-8.981186,8.209311,-5.206647,1.736299,-9.478084,-6.366569,-9.321900,2.048200,-9.500323,-7.022978,-4.734216,-9.461851,3.518154,-1.228820,3.615768,4.596892,-5.132997,5.581206,5.813001,-8.169462,3.580349,1.230170,-3.124601,2.150593,9.822196,-3.760960,-2.794553,-7.135621,-4.324567,-8.516869,8.450217,-9.410490,8.261218,-9.955927,-0.929873,-7.483229,-5.501948,5.999027,-6.367272,9.388268,-7.863701,7.353151,-3.335828,-6.152227,-8.751550,7.114411,-1.718444,-6.236965,0.166535,-2.137018,6.236830,-6.072700,0.751341,-4.575262,-5.661814,2.464987,-1.867654,-8.730256,-4.551680,6.965168,1.644121,1.303216,-9.790402,4.147449,-5.634653,3.330667,4.823223,5.241518,-1.056557,-8.884656,-2.089877,1.078274,0.288763,5.138736,4.413831,-9.826497,2.264633,-2.982173,8.907885,-7.775638,-3.608764,2.321489,6.823710,-9.059484,5.024370,-8.166028,-0.692226,-0.799323,2.683716,5.920321,-2.439185,-2.301099,3.776378,-2.790762,-3.229767,7.441210,-1.167602,-7.384728,3.762576,7.596389,-4.074667,-8.398181,-5.275472,-9.824764,7.017276,-5.328207,1.261510,5.677916,0.216013,-8.100913,-1.338705,-3.561811,-4.362799,-9.990369,5.962444,-4.210138,-8.498257,-7.966316,1.234570,-4.044215,4.318239,2.689060,8.980200,5.522691,-0.924064,9.251934,9.399899,5.577187,-4.428375,-4.011092,-4.133746,9.928256,6.379961,9.194743,-6.330036,9.558783,-5.316095,6.608167,-5.311303,-3.656704,-9.427971,0.106491,-8.485452,8.061895,0.960033,-9.647922,4.042644,-1.381340,-0.657254,0.194340,0.141959,-0.655367,7.618679,-2.483832,-5.650962,-7.116233,-4.702281,4.223856,0.908651,4.010935,-6.642682,-1.664703,-2.137542,-0.752006,-6.877366,2.196309,4.496732,4.976142,8.846464,-7.431868,-3.228203,-8.721857,-3.595556,1.640323,7.811182,-3.397786,8.132808,7.355762,4.153212,-3.816299,2.840509,-5.988278,4.139391,-0.454084,5.203672,-6.377942,0.913896,-2.206140,-9.186914,3.678211,-5.901349,3.656795,-1.368973,6.798063,4.165573,9.282003,-0.854895,5.656369,4.945560,-4.849082,-1.839064,4.727376,-9.043778,1.504141,7.312646,-0.198344,4.679331,2.805472,-9.047423,7.750751,-3.754065,-2.631583,-6.896884,-3.499111,7.124504,-2.225054,-3.855984,-7.539490,3.048308,6.685485,-8.450108,7.879208,-4.338003,-6.612944,7.303113,-7.143175,-0.149593,-6.887163,-1.887433,2.989804,-8.046033,6.592879,6.369350,0.030866,1.369962,6.186461,-4.584669,9.544400,-4.863418,9.990613,-9.852689,5.201854,-4.037872,7.368566,6.464014,1.502786,8.411424,-6.239563,-1.566344,1.740759,-4.306870,8.214102,2.614598,0.447238,-4.474973,-9.334894,-6.795803,-2.257824,5.919371,3.479810,-9.664747,-4.856117,9.421501,-4.266974,-9.129501,-2.694049,-7.280236,1.495856,-0.512723,1.287158,6.049398,3.954129,-0.425924,9.051431,-3.081527,-8.247061,1.757352,-4.755238,8.505082,-2.795647,-8.908673,-1.429288,-2.569820,8.388651,6.268302,-7.142828,-7.526062,-9.327163,2.884706,-8.889443,6.188396,-6.100411,-8.202908,4.698590,4.189932,8.783023,-7.960654,-2.875265,-4.012344,-1.895735,1.825689,-3.122683,-5.442659,-5.028407,-2.302295,8.873135,6.223998,-3.725927,-2.365927,8.540766,5.664180,-7.441716,-2.421052,5.804030,-1.910725,-5.152005,-4.769414,2.725521,-1.551461,-2.910070,-2.259503,-2.898288,6.957824,1.275060,-5.598725,5.047731,-9.901956,-6.506596,-5.467661,7.644060,0.453134,-4.883431,-6.694108,-5.701153,3.218330,-5.106025,0.483472,0.529083,2.393706,-3.959301,1.350211,-0.011663,3.837144,7.803587,-9.734350,-5.891392,-1.549733,5.696786,-5.073206,2.244192,-1.198529,-1.107266,-3.352323,-2.267314,-0.475270,-8.950737,-5.293504,3.304608,4.552174,8.619146,6.281782,2.109071,6.696117,5.354082,-2.081920,8.000713,-7.877069,-6.999090,-6.302621,-7.420246,-4.512648,-5.317461,2.661112,-6.982024,-6.398316,-3.082093,-0.293160,-1.568189,-2.004750,4.393067,-7.238130,1.622765,-1.042038,-4.884649,-9.281041,-9.426013,3.541603,6.682958,-0.317619,3.246990,-3.445325,0.919143,2.456975,-8.917692,7.334509,-5.462602,-4.709611,-1.592958,-1.744699,8.217289,9.316491,5.032830,4.829207,-8.204232,-2.270716,-6.648024,6.073992,2.700541,1.035396,6.744202,-1.913317,8.923083,1.770158,3.557760,-2.909110,8.188331,-4.538897,-1.819461,5.682514,-8.195598,-4.369007,-2.304396,-7.104725,-4.648409,6.934532,-9.471724,5.221812,9.321675,5.768901,-2.725713,2.282094,3.701802,-1.183943,2.455988,-1.582453,-9.628017,5.057293,9.736119,-0.987382,2.000078,8.604539,2.449305,7.567311,1.713146,-8.050697,-6.196061,9.274141,2.621776,9.289901,-6.008207,-8.871269,-4.851645,5.097885,8.766664,8.098068,-4.516704,-0.644979,-6.374002,-7.245091,-3.972956,2.943208,-2.901354,5.028730,2.813143,0.435636,-5.720469,-7.525751,1.052581,-3.371045,1.834733,8.926124,-7.562756,-8.734988,-8.440884,1.127840,2.285718,3.158636,8.276456,1.217863,-9.906487,-4.804401,8.490267,8.287690,2.976970,2.185732,-2.036190,-9.227338,4.787220,8.694096,0.441481,-6.729210,8.863717,-2.637620,-1.292494,2.496110,-0.753242,-9.625418,-1.118612,-7.171364,5.516431,5.989943,8.738782,4.511301,-1.007373,-3.431716,5.437014,-1.381351,-5.360086,6.953046,-2.988001,2.131700,0.060375,-7.663084,-9.813501,7.939753,6.621094,6.043380,-1.564077,0.582267,2.498836,-7.933590,-8.634807,2.269553,2.143506,-0.906632,-1.929895,2.637204,8.795563,8.363015,-5.955084,5.910218,7.128320,-9.943979,0.375355,-0.073777,3.670764,1.804752,7.071514,2.488841,-3.628930,5.193586,0.633688,-6.883190,-6.579439,-7.435619,-0.720520,-1.653096,-5.774145,1.402024,-9.551722,-3.945490,-6.768875,-0.368175,2.444485,-6.773829,7.251893,-0.100329,-8.324613,8.875735,-6.131821,-0.464661,4.944297,6.910347,4.876457,-0.092483,-5.459837,-3.104544,-1.536744,7.019440,-9.678515,7.570410,1.242212,-3.112027,-0.051672,-8.513364,-7.980581,7.308001,-2.340154,3.608728,1.836979,1.658421,8.646045,-7.318057,-3.291153,3.724268,-1.791438,-9.131796,-0.295687,7.364487,-8.347388,9.125403], dtype = "float32")#candidate|2197|(1152,)|const|float32
call_2195 = relay.TupleGetItem(func_1476_call(relay.reshape(const_2196.astype('int32'), [10, 13, 3]), relay.reshape(const_2197.astype('float32'), [576, 2]), ), 2)
call_2198 = relay.TupleGetItem(func_1480_call(relay.reshape(const_2196.astype('int32'), [10, 13, 3]), relay.reshape(const_2197.astype('float32'), [576, 2]), ), 2)
output = relay.Tuple([bop_2163,call_2177,const_2178,var_2179,call_2190,call_2195,const_2196,const_2197,])
output2 = relay.Tuple([bop_2163,call_2180,const_2178,var_2179,call_2191,call_2198,const_2196,const_2197,])
func_2208 = relay.Function([var_2161,var_2179,], output)
mod['func_2208'] = func_2208
mod = relay.transform.InferType()(mod)
mutated_mod['func_2208'] = func_2208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2208_call = mutated_mod.get_global_var('func_2208')
var_2210 = relay.var("var_2210", dtype = "int64", shape = (1, 13, 7))#candidate|2210|(1, 13, 7)|var|int64
var_2211 = relay.var("var_2211", dtype = "int16", shape = (520,))#candidate|2211|(520,)|var|int16
call_2209 = func_2208_call(var_2210,var_2211,)
output = call_2209
func_2212 = relay.Function([var_2210,var_2211,], output)
mutated_mod['func_2212'] = func_2212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1940_call = mod.get_global_var('func_1940')
func_1942_call = mutated_mod.get_global_var('func_1942')
call_2261 = func_1940_call()
call_2262 = func_1940_call()
func_1167_call = mod.get_global_var('func_1167')
func_1169_call = mutated_mod.get_global_var('func_1169')
const_2264 = relay.const([-3.125761,5.349061,2.208678,8.880766,-0.940518,-1.535184,-3.669460,-8.413770,-8.809211,1.772578,2.341080,-1.666068,5.767411,-1.025678,-3.401206,-2.018046,-8.259006,2.212956,-4.673766,-1.500162,-8.273340,-3.996351,-9.117137,6.875565,3.098434,0.091792,-8.237749,8.162563,-0.915302,-3.130119,-9.475946,9.252199,-5.536093,-7.382159,-7.807644,2.471549,2.047021,4.696470,-8.321250,-9.987194,8.428171,-6.921541,-9.495989,-0.445317,1.372679,0.089691,2.236720,-8.466581,1.116950,3.845872,9.877292,7.867392,-9.757328,-5.330680,5.495086,-3.822190,4.137850,-6.674436,4.079603,-1.529075,3.352830,-7.963563,-8.460224,-7.245862,8.817416,8.754786,-0.989515,4.642938,-2.975547,7.399680,-6.911088,-6.383991,-7.296580,3.782399,5.087273,-1.582984,5.339276,-6.996160,-7.849809,-5.664915,-8.657671,-4.109098,-3.508631,0.604615,-6.588833,-1.167385,-7.029930,-5.435435,-3.830446,-7.523875,9.281501,-0.249306,7.489445,-0.439577,-0.262929,6.041334,4.807227,6.182441,0.341943,-9.975827,-4.028699,4.603019,0.922782,3.361883,3.354338,-0.801297,1.227675,-3.630186,3.804010,-9.989707,6.137277,-0.343241,1.016293,-5.410098,-7.201180,-5.670269,5.958559,0.800446,4.650647,-8.418978,3.507850,3.131160,-7.042973,9.651028,6.413091,6.917248,-1.052299,4.548280,6.525735,-8.702739,-1.611757,-5.945012,-3.505413,-7.874977,4.540663,3.951480,7.699025,2.698136,-8.948486,9.052515,-5.146376,-5.278600,-4.691911,-9.596153,2.180148,1.748900,-6.466448,3.293703,-6.642941,-4.514256,0.139554,-2.493666,0.377344,-4.175743,-0.932397,9.542592,-1.990571,8.562251,3.181674,-6.012073,1.560837,-4.722462,-4.855554,-6.292375,8.336027,-7.313022,-4.569805,-5.829086,-9.040430,4.711839,-8.674236,9.493149,-6.404212,-2.142302,-8.826557,-2.901849,-1.327001,9.722893,0.409140,8.626141,5.895921,9.768608,-2.768925,5.430865,-5.123796,-9.290817,4.022186,5.972266,-5.412398,6.056644,-9.381742,-5.322697,-0.619379,1.327378,-0.618252,-9.320135,-3.483222,2.347014,8.472579,2.443655,-7.944361,7.250941,6.559915,9.648687,-7.977563,7.890017,0.240915,6.247259,6.124591,8.534578,-7.116692,8.718991,5.065110,5.782673,6.178169,-1.937963,-1.505566,5.302688,-9.099365,-4.142281,7.241076,8.306502,8.203403,-5.011563,-3.557916,-4.460368,-9.169865,9.462268,1.693138,-3.263605,-0.481473,-1.768745,-6.026244,-3.952134,-5.842904,5.704850,-4.918754,-3.750355,-1.516290,0.243020,-0.408726,0.946734,8.074915,-2.779270,8.451828,-3.037422,2.986511,9.974599,-7.806453,-7.831165,-6.477681,8.513711,9.006526,-8.198930,-6.521019,-5.032053,-0.901068,1.432269,-7.836595,-6.103034,4.904457,1.712322,7.146834,-7.471863,7.267112,-5.510687,6.874781,-6.760192,-7.383847,-3.050518,-6.378402,2.532731,-3.484169,7.575157,8.089060,-8.813547,-1.463564,7.498427,-9.062322,6.742367,2.925420,9.083257,1.460714,0.488078,5.299918,9.676661,-2.710514,-9.220208,0.477204,1.182349,3.465182,8.410012,-8.744463,3.550820,4.241173,-3.385482,-0.231080,6.018502,5.329068,2.379232,-3.387592,1.285745,-3.416164,2.129106,9.664774,-4.142039,-7.619739,-2.598402,-0.846594,-1.783121,-7.648520,-8.198873,-7.356714,4.425674,-4.511982,-2.055836,6.977018,0.940745,8.868981,4.338417,-9.565718,4.202082,-1.149619,3.773217,4.401587,-2.668266,-2.660688,7.688565,-6.660184,-9.874243,9.985109,7.656730,-0.335311,-7.998782,3.132805,-2.895785,1.088261,-6.130939,3.798936,2.597758,7.206986,5.783761,-2.519905,7.477890,9.108731,-3.040471,-3.257648,1.784657,-0.290191,3.616971,4.251760,7.524420,3.257230,-9.662752,9.243727,-2.982075,6.688702,-9.375307,-7.649843,-0.777018,-3.682486,-5.155549,-8.492525,5.606207,-6.770571,-5.453649,0.637186,-4.768624,-1.197448,4.433835,-7.963062,-0.842415,6.401104,-7.987704,-8.136218,3.439359,5.461003,-6.528600,8.348509,-5.402821,-3.371364,-5.461080,3.779551,-1.907229,7.021617,9.680300,4.688609,-3.684757,0.458674,-7.961106,6.915150,-5.976086,-6.933183,9.483726,-6.416541,1.155456,-5.443424,-6.635753,-1.804390,1.813435,5.938250,-1.859167,9.643994,7.943931,3.309698,-9.821507,-3.523472,3.568994,2.064236,-9.005561,-1.705506,-3.534345,8.383272,-3.237630,-1.072854,-4.504216,4.299125,-2.540453,3.471689,5.390689,-1.083961,4.732009,-4.718323,8.796772,2.060357,1.969405,7.618655,0.028003,5.962154,-2.735335,6.365846,4.362031,1.197322,9.210590,8.537319,7.324963,8.878636,-3.762339,4.544264,2.150399,-5.304088,7.681367,7.276617,-4.399582,-7.109023,-5.675205,1.470349,-7.951268,3.039781,1.292897,-6.930575,-7.785489,-9.353788,1.790522,-6.187658,-7.743465,-2.678158,-5.396641,-7.575008,-6.284729,-3.549943,0.007127,-9.996814,-3.397835,5.698951,-5.199530,5.816312,0.322460,-1.134210,7.352793,-9.478222,1.557568,1.368859,-0.316040,-3.504026,6.322897,2.928739,4.771083,-5.887123,2.607710,5.544934,-0.081479,8.095003,-7.032032,-0.632291,-5.361216,-1.712242,8.608678,-4.435320,9.483888,-7.331477,6.633555,6.072892,4.877999,-7.124795,-8.980051,7.182921,-8.548212,-1.223120,-9.764694,7.387263,4.452548,-5.986778,9.066405,-7.310634,2.932981,0.356670,-1.708035,5.193961,5.154705,1.574476,-1.418275,-4.332205,9.060674,6.888392,7.856231,-5.920993,-1.424859,-0.549378,2.094954,0.494326,5.097419,3.780455,7.416605,-9.785302,2.907114,-6.238467,-6.267234,-6.123963,-5.232069,9.559810,-1.799470,-1.457658,-0.203146,6.243231,-1.645355,-6.877641,3.754015,2.983380,2.841719,1.975533,3.488836,-1.625165,-0.014062,9.043371,-4.041514,4.018459,7.453165,-6.972339,-0.873003,6.768234,-4.862847,-0.449821,-4.994216,-7.425110,1.741522,-4.408341,-7.801732,-8.351741,3.458862,5.758294,-8.264132,2.952389,-4.077949,6.529248,6.338791,5.523978,7.733751,8.162390,-4.448268,3.754139,-6.724181,-0.672821,-5.120076,5.842989,6.944228,2.713050,4.873023,2.442128,-6.194458,-5.128843,7.038804,0.657970,-9.068975,-7.729714,6.620176,-9.975458,0.844249,-9.786261,-2.049725,-0.586541,-3.392699,1.629228,-3.302715,1.853473,-3.598361,-6.204538,-7.653436,-8.573518,-4.841501,3.177523,-3.032210,6.207808,-9.607826,3.607880,-3.375239,-4.722710,2.098426,-3.285045,-5.246251,8.956483,-6.059387,2.907555,5.852134,9.269623,-5.752065,3.043154,-5.704554,4.263571,-2.631287,3.545942,-2.979150,1.063876,-5.353537,0.405575,-8.455966,0.654032,-7.570475,9.722188,-0.935006,3.864826,7.042034,5.288614,-1.337184,-6.656163,5.133663,2.246929,-7.943440,7.725267,-3.732669,7.313444,0.664249,4.066589,7.020222,-6.679745,2.516940,1.899281,-4.082336,3.134864,9.547722,-8.725769,4.091042,-2.792855,-2.767218,-2.268545,-4.977338,5.986048,-0.166105,5.793085,6.839650,0.162417,9.991173,7.338644,1.832847,-3.499076,9.124702,7.453761,-3.468334,-7.904763,-1.463322,-3.784968,-2.073312,-9.059484,-6.327494,7.755100,2.943293,4.353999,2.457934,4.673989,8.261678,8.575381,-0.428946,7.034763,-2.407085,3.176038,9.650212,0.191062,-5.631591,-5.277964,2.511403,-3.661423,0.753664,5.243996,6.756748,0.304753,8.955070,2.612187,-1.687697,-5.765943,-7.364777,6.170474,5.035465,3.535294,-3.515031,4.148997,1.534966,9.726608,5.974909,0.938988,7.547025,6.918879,2.327419,-2.267046,6.923717,-8.739943,-6.988913,0.705794,-1.651228,6.335697,1.967285,-2.976329,1.544794,9.202602,1.965256,5.901348,3.745411,3.872809,9.131544,-4.073426,-7.279119,-2.477295,-5.280050,2.219660,-7.162248,-2.458059,1.579824,6.118848,-7.923686,5.419629,9.221751,-2.556468,8.251718,-9.886598,5.562597,6.168724,3.829196,-6.396228,-2.630104,7.122600,0.064376,-8.080056,-0.591299,4.379580,-2.193306,-1.059748,4.262722,-1.595870,-2.181846,5.542630,-7.433084,-4.904921,-1.204012,6.888800,-0.539072,7.503102,-0.694920,-7.954151,7.735973,9.444628,-3.071873,-9.566596,-6.477289,-9.231972,7.302488,-6.631347,-0.184897,2.060386,-4.710412,6.582689,1.881496,-9.747001,-8.034497,8.537927,-9.553497,0.134744,-7.946221,-3.879550,6.345284,-8.148885,-9.248269,-0.686158,9.674102,9.862950,-1.905607,-5.570531,0.548126,-0.903973,3.543570,-5.030424,-0.928122,-2.980779,5.149045,-9.431566,4.260742,8.403639,5.044100,-6.661087,7.332817,-1.970705,2.073934,-8.578169,2.605147,-0.419293,-4.158766,-5.389128,4.694754,2.535541,4.170888,4.793546,-8.651066,-1.138054,-8.294265,-4.898371,-1.890701,4.257003,3.356737,5.281580,-0.282239,5.665693,-6.179919,-4.947040,-9.743484,-5.376293,9.078412,-2.902277,-0.236172,2.706479,-7.988999,-5.693308,6.468189,-8.950396,1.122226,1.426440,6.168326,-4.854836,3.807562,7.817259,2.745070,1.036154,0.706234,-5.217470,3.647278,-5.164636,-3.777093,-3.124767,8.678086,-2.919707,-2.667947,-1.461338,1.736787,8.627090,0.045810,-8.585637,-0.994830,1.390273,-6.991726,0.581311,-7.978366,7.086623,5.716373,-6.175102,-3.850631,6.603770,-4.477857,-2.478339,8.350871,-6.206703,1.213159,4.292536,5.005077,9.965956,-2.034704,4.769965,3.719435,2.400373,-2.912264,6.489003,1.629988,-8.427307,-1.969766,0.010162,-0.317659,3.465034,-1.280079,-0.110170,6.949188,5.819812,-6.960240,-1.521438,4.313971,-3.621089,5.944612,-5.671974,8.892622,1.650961,-8.961890,9.361038,-4.832780,-0.300024,4.881856,-3.510781,-9.459810,-9.268570,-7.634163,-0.304321,3.178742,-3.982360,-4.697501,9.095129,2.729980,-9.857728,0.296696,-3.849229,-6.188570,-9.715105,5.845522,-0.328216,9.620615,5.407513,-1.803284,3.981626,-8.335097,-0.027278,5.017205,-6.289658,-0.315968,-3.035325,-2.553527,-6.456467,4.710114,-3.246121,5.930786,-6.521516,-7.393448,1.548566,-9.691969,-5.045009,-3.468430,1.600806,-3.327009,-3.173173,-4.066525,-9.558400,1.862133,7.399780,8.418239,-1.585492,5.936858,5.302010,-5.637290,-3.837317,-0.339294,7.703001,2.821429,-0.921659,1.452611,4.241343,0.186010,-7.483272,-3.212903,7.097935,-8.823333,-6.775373,-5.584479,3.611676,-3.852868,2.653781,-6.242423,3.954582,-8.485616,2.644835,-8.039533,9.753413,-3.937242,1.560484,-7.780298,-1.451887,-8.516783,-8.542146,3.460000,5.157753,1.040575,-0.212666,9.088656,4.409528,7.540799,3.922518,2.262304,5.915330,4.480681,-2.635051,0.922731,-2.245118,-3.844793,-1.402694,-7.429084,9.434575,2.191499], dtype = "float64")#candidate|2264|(1008,)|const|float64
call_2263 = relay.TupleGetItem(func_1167_call(relay.reshape(const_2264.astype('float64'), [14, 8, 9])), 1)
call_2265 = relay.TupleGetItem(func_1169_call(relay.reshape(const_2264.astype('float64'), [14, 8, 9])), 1)
output = relay.Tuple([call_2261,call_2263,const_2264,])
output2 = relay.Tuple([call_2262,call_2265,const_2264,])
func_2289 = relay.Function([], output)
mod['func_2289'] = func_2289
mod = relay.transform.InferType()(mod)
output = func_2289()
func_2290 = relay.Function([], output)
mutated_mod['func_2290'] = func_2290
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2320 = relay.var("var_2320", dtype = "float32", shape = (14, 1, 15))#candidate|2320|(14, 1, 15)|var|float32
uop_2321 = relay.rsqrt(var_2320.astype('float32')) # shape=(14, 1, 15)
output = relay.Tuple([uop_2321,])
output2 = relay.Tuple([uop_2321,])
func_2323 = relay.Function([var_2320,], output)
mod['func_2323'] = func_2323
mod = relay.transform.InferType()(mod)
mutated_mod['func_2323'] = func_2323
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2324 = relay.var("var_2324", dtype = "float32", shape = (14, 1, 15))#candidate|2324|(14, 1, 15)|var|float32
func_2323_call = mutated_mod.get_global_var('func_2323')
call_2325 = func_2323_call(var_2324)
output = call_2325
func_2326 = relay.Function([var_2324], output)
mutated_mod['func_2326'] = func_2326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2120_call = mod.get_global_var('func_2120')
func_2121_call = mutated_mod.get_global_var('func_2121')
call_2348 = func_2120_call()
call_2349 = func_2120_call()
output = relay.Tuple([call_2348,])
output2 = relay.Tuple([call_2349,])
func_2356 = relay.Function([], output)
mod['func_2356'] = func_2356
mod = relay.transform.InferType()(mod)
mutated_mod['func_2356'] = func_2356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mutated_mod.get_global_var('func_2356')
call_2357 = func_2356_call()
output = call_2357
func_2358 = relay.Function([], output)
mutated_mod['func_2358'] = func_2358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_2381 = relay.TupleGetItem(func_2356_call(), 0)
call_2382 = relay.TupleGetItem(func_2358_call(), 0)
func_2323_call = mod.get_global_var('func_2323')
func_2326_call = mutated_mod.get_global_var('func_2326')
var_2417 = relay.var("var_2417", dtype = "float32", shape = (210,))#candidate|2417|(210,)|var|float32
call_2416 = relay.TupleGetItem(func_2323_call(relay.reshape(var_2417.astype('float32'), [14, 1, 15])), 0)
call_2418 = relay.TupleGetItem(func_2326_call(relay.reshape(var_2417.astype('float32'), [14, 1, 15])), 0)
bop_2423 = relay.floor_mod(call_2416.astype('float64'), relay.reshape(var_2417.astype('float64'), relay.shape_of(call_2416))) # shape=(14, 1, 15)
bop_2426 = relay.floor_mod(call_2418.astype('float64'), relay.reshape(var_2417.astype('float64'), relay.shape_of(call_2418))) # shape=(14, 1, 15)
uop_2434 = relay.log(call_2416.astype('float32')) # shape=(14, 1, 15)
uop_2436 = relay.log(call_2418.astype('float32')) # shape=(14, 1, 15)
output = relay.Tuple([call_2381,bop_2423,uop_2434,])
output2 = relay.Tuple([call_2382,bop_2426,uop_2436,])
func_2437 = relay.Function([var_2417,], output)
mod['func_2437'] = func_2437
mod = relay.transform.InferType()(mod)
mutated_mod['func_2437'] = func_2437
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2438 = relay.var("var_2438", dtype = "float32", shape = (210,))#candidate|2438|(210,)|var|float32
func_2437_call = mutated_mod.get_global_var('func_2437')
call_2439 = func_2437_call(var_2438)
output = call_2439
func_2440 = relay.Function([var_2438], output)
mutated_mod['func_2440'] = func_2440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_2463 = func_2013_call()
call_2464 = func_2013_call()
func_2437_call = mod.get_global_var('func_2437')
func_2440_call = mutated_mod.get_global_var('func_2440')
const_2466 = relay.const([7.481000,1.979295,7.272152,-8.307713,-9.899456,-0.515255,3.509152,9.689561,-5.636706,-4.856059,6.255864,-8.078071,0.624936,6.675895,1.821175,-3.778635,1.849233,8.465793,-1.922810,-8.979951,-8.226563,-7.468565,8.872312,-4.638593,3.729180,8.860004,8.825010,5.050032,-0.399284,8.767673,-9.623802,-5.905729,5.133467,9.726305,1.126372,-4.856408,-7.845112,4.728257,-8.687706,3.260575,-4.894788,-7.016676,2.738313,2.982035,-7.426306,6.456599,-9.034970,-6.433726,6.595464,0.833569,5.222511,4.523887,-1.908796,2.366981,-4.922536,-2.874324,-1.185749,-3.096174,3.709454,6.575813,-0.800311,-0.237956,-4.209224,-6.870980,-0.845470,-5.225794,1.958077,-8.296226,-8.841350,-6.058752,-4.423865,8.649356,2.225714,-9.909552,8.540454,-9.097492,8.471631,-2.571921,5.617686,5.670312,-5.335566,-6.585876,8.768048,-8.924505,-4.120908,-4.954102,1.941022,5.750917,2.160578,2.372805,4.618236,-9.602922,3.700298,-8.971522,6.023095,-7.018181,7.438546,6.789845,3.119129,-7.254874,-5.694057,4.200176,0.296029,-2.676694,-7.037363,1.266317,3.461589,-6.537577,2.455212,-1.182616,0.797304,-1.048160,1.985691,3.549250,0.853281,-2.472546,4.456725,-2.112066,9.237648,9.812478,-3.570226,0.279182,1.985068,-8.804069,5.498819,8.608549,-8.258895,7.758573,-6.562529,-6.160566,6.294734,0.657296,-7.067612,0.351997,3.211595,-1.569345,2.332452,9.779730,7.886297,5.140848,-5.145551,1.141157,6.552286,-9.718982,-3.503139,6.029391,-4.524453,-1.328609,-1.690818,-8.084909,-4.633750,-9.005991,-8.857472,-6.627280,8.987799,-0.109155,3.737569,-5.618330,6.149672,-0.141641,-9.634971,9.143797,-1.349695,4.082228,0.615708,-4.370953,-3.710040,6.626855,6.834700,2.191608,-5.186245,-3.824514,8.339531,-7.166610,-0.685137,-8.953258,-1.157872,3.472526,0.184087,-1.407996,-5.929896,0.568250,2.850729,8.490465,-6.699905,7.291164,5.995965,-8.340353,8.914846,7.764449,1.406570,-0.188963,2.008432,1.575027,-0.597711,2.604240,-3.215544,-9.215978,2.531625,-2.037131,-6.785371,-7.327960,-5.300980,-4.860333,9.997310,4.604399,-2.903620,0.578189,1.132992,-9.996089], dtype = "float32")#candidate|2466|(210,)|const|float32
call_2465 = relay.TupleGetItem(func_2437_call(relay.reshape(const_2466.astype('float32'), [210,])), 2)
call_2467 = relay.TupleGetItem(func_2440_call(relay.reshape(const_2466.astype('float32'), [210,])), 2)
output = relay.Tuple([call_2463,call_2465,const_2466,])
output2 = relay.Tuple([call_2464,call_2467,const_2466,])
func_2469 = relay.Function([], output)
mod['func_2469'] = func_2469
mod = relay.transform.InferType()(mod)
mutated_mod['func_2469'] = func_2469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2469_call = mutated_mod.get_global_var('func_2469')
call_2470 = func_2469_call()
output = call_2470
func_2471 = relay.Function([], output)
mutated_mod['func_2471'] = func_2471
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2533 = relay.var("var_2533", dtype = "float32", shape = ())#candidate|2533|()|var|float32
const_2534 = relay.const([[[-6.553186],[-8.356878],[4.137180],[9.320583],[-5.215189],[-1.797020],[-7.581184],[-6.867870],[-1.164010],[-9.681361],[5.429619],[-4.063848],[0.878182],[9.981020],[3.787765],[8.330218]],[[-5.547269],[-4.028707],[0.636758],[1.133186],[2.947233],[7.736081],[-8.315045],[9.187609],[4.152299],[-1.365148],[-8.577341],[-2.705209],[-6.710190],[4.133565],[-7.681851],[0.907821]],[[-7.742892],[-7.729205],[3.229559],[9.115061],[-3.728954],[2.997508],[5.282053],[7.274092],[-1.194893],[8.618813],[-2.585404],[-3.681580],[0.919583],[-7.316782],[1.489228],[-4.525402]],[[8.300254],[3.690605],[-8.131442],[-0.432208],[-0.046976],[7.814893],[-7.912489],[-0.690411],[0.176970],[3.213917],[2.509280],[-3.498539],[4.306658],[7.342104],[-1.974200],[9.784529]],[[-0.392629],[8.358324],[7.025943],[0.657745],[9.364641],[4.068776],[-7.261649],[-9.751288],[5.272253],[4.314573],[-3.832435],[-1.139230],[3.073956],[-6.812708],[5.138223],[8.825883]],[[-8.083444],[4.999248],[-8.285941],[7.798694],[4.680418],[3.170626],[8.174824],[7.713010],[-4.698292],[9.530304],[-7.061292],[-0.540841],[6.543416],[-8.783905],[-3.325026],[6.891958]],[[-3.448671],[9.443816],[3.556828],[-5.804203],[2.246699],[-7.866827],[3.271829],[-7.170663],[9.088417],[-1.529479],[4.693160],[8.393611],[0.625693],[8.123090],[6.264026],[9.416638]],[[4.356497],[4.343846],[1.792036],[-9.004270],[3.321136],[1.767443],[-9.889051],[-4.079232],[-1.797142],[-9.557961],[-5.423755],[-6.209065],[7.621002],[1.978862],[-3.166485],[-4.936501]],[[9.011246],[9.993626],[5.080478],[-0.346031],[-2.469632],[0.464464],[5.633399],[-7.688079],[1.550784],[5.477927],[-9.728049],[8.206142],[3.643064],[4.704352],[6.776820],[-1.097494]],[[4.749095],[-4.200124],[1.399192],[8.970394],[-6.839111],[-5.270818],[3.778144],[6.222036],[2.561835],[-0.489709],[6.118611],[8.912264],[-3.142758],[-2.877083],[-2.812930],[9.809853]],[[-6.503782],[-9.660074],[-4.004613],[-2.454958],[1.399810],[-2.970739],[9.657714],[6.103341],[-2.614238],[8.755482],[0.628163],[-1.981569],[1.933804],[-6.811714],[9.125251],[4.019573]],[[5.990838],[5.578427],[4.028809],[-2.998000],[0.802420],[2.693291],[6.028080],[0.632112],[-7.706715],[0.922342],[-8.404747],[-3.850807],[-1.742974],[6.071599],[-2.078880],[-7.305575]],[[6.707620],[8.740562],[8.070592],[6.665987],[-9.229197],[9.721488],[8.732507],[7.831368],[6.998332],[5.704115],[-4.239033],[4.465828],[-6.447828],[9.989512],[3.850476],[-8.703537]],[[6.673707],[-7.372792],[-0.550652],[7.960308],[-6.064098],[-4.098291],[-5.613595],[-9.728374],[-7.759097],[8.679451],[2.218579],[8.267013],[3.176914],[-2.744405],[-3.090789],[4.550420]],[[-2.248293],[-0.030786],[7.162804],[8.042522],[7.321299],[5.011592],[8.107783],[1.398015],[-5.297135],[-3.032819],[-6.054396],[8.170630],[-6.327810],[-3.741795],[7.162416],[0.923587]]], dtype = "float32")#candidate|2534|(15, 16, 1)|const|float32
bop_2535 = relay.power(var_2533.astype('float32'), const_2534.astype('float32')) # shape=(15, 16, 1)
output = bop_2535
output2 = bop_2535
func_2544 = relay.Function([var_2533,], output)
mod['func_2544'] = func_2544
mod = relay.transform.InferType()(mod)
mutated_mod['func_2544'] = func_2544
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2545 = relay.var("var_2545", dtype = "float32", shape = ())#candidate|2545|()|var|float32
func_2544_call = mutated_mod.get_global_var('func_2544')
call_2546 = func_2544_call(var_2545)
output = call_2546
func_2547 = relay.Function([var_2545], output)
mutated_mod['func_2547'] = func_2547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_2578 = relay.TupleGetItem(func_2356_call(), 0)
call_2579 = relay.TupleGetItem(func_2358_call(), 0)
const_2608 = relay.const([[[9,2,-6,-10,5,5,9,6,1,-9,1,-10],[-6,-7,7,7,-1,-6,9,10,-4,-1,-1,8],[-9,4,1,-7,10,-4,-2,-3,-9,10,6,1],[6,-6,10,-9,-5,9,9,-10,1,-6,-4,-6],[7,-2,-7,-5,-4,-10,-7,5,3,5,-9,-9],[-9,-3,-5,6,6,-6,-1,-6,2,-1,-6,-10],[-10,9,9,2,-4,-1,-4,10,4,-5,-7,-2],[-8,9,-1,10,-5,3,-10,4,-1,-4,3,-7],[10,-4,2,9,8,3,-8,-3,4,10,10,-8],[10,-8,-6,2,4,4,-1,-5,2,10,-10,4]],[[8,8,8,9,-9,-3,-1,-2,10,-10,-8,1],[2,9,-4,-6,7,-10,-3,2,-7,7,-9,-4],[7,-9,-10,5,2,4,9,8,-5,2,9,-9],[1,6,-7,9,6,-8,-8,6,9,8,1,5],[-6,5,-10,-6,4,-1,2,-4,-7,5,-7,7],[-1,7,3,-10,-8,-6,1,1,4,6,-1,-6],[-5,6,-2,-10,-10,-6,9,-1,1,7,-7,-7],[10,7,-4,-2,2,10,2,8,7,6,10,-2],[5,2,8,3,3,-9,-2,7,-8,-9,-7,2],[-1,-9,-6,-1,-10,2,-4,-6,-6,-5,4,4]],[[9,2,-2,-9,5,-3,10,-3,-9,-8,10,10],[-9,-4,-7,4,-6,3,5,3,1,-2,-2,-3],[7,-3,-5,5,-10,-6,-9,-4,-1,5,8,-5],[-5,-1,-1,7,-6,-7,5,-7,-10,1,-5,6],[-1,-1,8,7,-2,-10,3,-3,8,-1,3,-6],[-3,4,-4,-4,-1,4,-3,-5,-1,10,-10,4],[6,-1,-5,1,3,-6,8,-4,8,-10,-10,6],[10,5,2,10,-7,4,-5,10,2,9,-7,-1],[-8,6,8,9,-9,-9,-4,-6,9,2,8,-4],[-9,2,-5,-1,-4,2,10,-1,6,9,-9,2]],[[8,4,8,-6,-2,-3,1,-1,-2,8,-2,2],[-1,9,-9,-9,-5,-2,-10,9,9,10,-9,-5],[-2,2,4,-2,-6,-4,-2,-1,6,1,4,-10],[4,-2,-9,-4,2,4,2,10,7,-3,8,5],[7,-2,7,-1,3,6,10,4,-7,-9,-6,-9],[4,-1,5,-8,3,-3,-3,-3,-10,8,-10,4],[-1,-8,-2,2,-10,10,-1,2,-10,6,1,-10],[10,-1,-10,-10,7,-2,7,-5,-4,-4,5,1],[-1,9,-8,-3,6,-9,-8,-1,-8,-2,-4,-2],[5,-5,2,-6,-3,-4,-3,-9,10,7,-8,-1]],[[-1,1,-1,6,-9,-6,7,3,-6,-10,6,10],[-9,2,-5,-6,-7,2,10,-3,8,-9,1,4],[-2,8,6,-4,5,4,10,-8,7,-4,-7,5],[8,10,-7,-9,-1,-7,-5,3,6,1,9,2],[1,-4,-2,-4,4,-10,-2,-2,-5,1,-9,-3],[-4,-10,6,-1,-7,-3,-6,9,-5,-3,-9,-10],[-5,6,5,-8,4,2,-1,6,9,-8,8,-7],[8,2,8,-2,10,6,7,-4,3,2,-8,1],[-8,2,-6,-3,-2,2,4,2,1,-1,1,1],[1,5,2,5,-7,-7,10,9,-4,4,4,6]],[[-4,-4,-4,7,6,3,2,-7,-8,3,-6,-2],[3,8,1,-3,-1,-10,-9,10,-2,5,-4,-2],[9,-2,8,-7,9,-10,-1,5,-9,-7,-5,8],[-2,1,7,8,-1,-3,4,1,5,-4,-6,8],[-6,-8,4,10,8,3,7,3,2,8,-6,-9],[-2,-7,4,4,2,2,-7,-3,-6,-2,10,2],[9,-9,-10,-6,-1,-1,-8,-6,-8,-6,1,-9],[8,9,-7,9,10,3,-6,2,-3,4,-7,-2],[9,9,-9,-8,-2,-2,-9,-6,-7,-8,-9,-2],[-3,-2,5,7,-3,-7,-7,-7,1,9,-10,-8]],[[6,-10,6,7,-8,-2,-4,8,-7,8,-9,4],[-4,-1,-10,1,-5,-10,5,-2,6,-8,5,8],[1,8,10,-2,-5,-1,2,-2,7,7,1,6],[7,8,10,-6,1,-2,7,9,7,-8,4,-5],[4,-4,5,-2,4,6,7,8,7,-3,6,-6],[-2,3,6,8,9,-5,-3,-7,-1,4,5,10],[-2,6,-4,2,-9,-3,-10,-5,2,5,10,-4],[-5,1,-8,3,3,-9,-4,-3,3,-9,5,-4],[-5,4,-1,6,-7,-7,7,7,1,-5,7,9],[-1,5,-2,5,-7,3,-7,5,8,-1,2,-5]],[[5,8,-7,4,-3,6,-9,3,1,-6,-6,4],[-1,-7,4,5,-1,5,-10,-9,-9,10,-7,-6],[10,-9,-2,-10,-10,7,-10,-5,-5,-10,1,-8],[6,10,1,-2,-7,9,3,-6,6,-7,6,-9],[2,4,1,-4,7,10,10,-1,2,10,-7,8],[-8,4,-7,-2,4,-2,7,-4,2,4,-6,10],[-3,3,5,-7,-4,-6,4,10,6,-5,-2,7],[2,5,-6,-6,-3,1,8,-10,9,-5,-8,10],[-9,-6,3,4,-7,-5,-3,-4,-10,4,-4,-2],[4,5,4,-5,2,5,-7,3,9,-10,9,-9]]], dtype = "uint16")#candidate|2608|(8, 10, 12)|const|uint16
bop_2609 = relay.bitwise_xor(call_2578.astype('uint16'), relay.reshape(const_2608.astype('uint16'), relay.shape_of(call_2578))) # shape=(8, 10, 12)
bop_2612 = relay.bitwise_xor(call_2579.astype('uint16'), relay.reshape(const_2608.astype('uint16'), relay.shape_of(call_2579))) # shape=(8, 10, 12)
func_2544_call = mod.get_global_var('func_2544')
func_2547_call = mutated_mod.get_global_var('func_2547')
const_2615 = relay.const(-2.979626, dtype = "float32")#candidate|2615|()|const|float32
call_2614 = func_2544_call(relay.reshape(const_2615.astype('float32'), []))
call_2616 = func_2544_call(relay.reshape(const_2615.astype('float32'), []))
output = relay.Tuple([bop_2609,call_2614,const_2615,])
output2 = relay.Tuple([bop_2612,call_2616,const_2615,])
func_2617 = relay.Function([], output)
mod['func_2617'] = func_2617
mod = relay.transform.InferType()(mod)
mutated_mod['func_2617'] = func_2617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2617_call = mutated_mod.get_global_var('func_2617')
call_2618 = func_2617_call()
output = call_2618
func_2619 = relay.Function([], output)
mutated_mod['func_2619'] = func_2619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2469_call = mod.get_global_var('func_2469')
func_2471_call = mutated_mod.get_global_var('func_2471')
call_2625 = relay.TupleGetItem(func_2469_call(), 1)
call_2626 = relay.TupleGetItem(func_2471_call(), 1)
output = relay.Tuple([call_2625,])
output2 = relay.Tuple([call_2626,])
func_2649 = relay.Function([], output)
mod['func_2649'] = func_2649
mod = relay.transform.InferType()(mod)
mutated_mod['func_2649'] = func_2649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2649_call = mutated_mod.get_global_var('func_2649')
call_2650 = func_2649_call()
output = call_2650
func_2651 = relay.Function([], output)
mutated_mod['func_2651'] = func_2651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2120_call = mod.get_global_var('func_2120')
func_2121_call = mutated_mod.get_global_var('func_2121')
call_2663 = func_2120_call()
call_2664 = func_2120_call()
var_2680 = relay.var("var_2680", dtype = "uint16", shape = (8, 10, 12))#candidate|2680|(8, 10, 12)|var|uint16
bop_2681 = relay.greater_equal(call_2663.astype('bool'), relay.reshape(var_2680.astype('bool'), relay.shape_of(call_2663))) # shape=(8, 10, 12)
bop_2684 = relay.greater_equal(call_2664.astype('bool'), relay.reshape(var_2680.astype('bool'), relay.shape_of(call_2664))) # shape=(8, 10, 12)
var_2704 = relay.var("var_2704", dtype = "uint16", shape = (8, 10, 12))#candidate|2704|(8, 10, 12)|var|uint16
bop_2705 = relay.logical_or(var_2680.astype('bool'), relay.reshape(var_2704.astype('bool'), relay.shape_of(var_2680))) # shape=(8, 10, 12)
output = relay.Tuple([bop_2681,bop_2705,])
output2 = relay.Tuple([bop_2684,bop_2705,])
func_2708 = relay.Function([var_2680,var_2704,], output)
mod['func_2708'] = func_2708
mod = relay.transform.InferType()(mod)
mutated_mod['func_2708'] = func_2708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mutated_mod.get_global_var('func_2708')
var_2710 = relay.var("var_2710", dtype = "uint16", shape = (8, 10, 12))#candidate|2710|(8, 10, 12)|var|uint16
var_2711 = relay.var("var_2711", dtype = "uint16", shape = (8, 10, 12))#candidate|2711|(8, 10, 12)|var|uint16
call_2709 = func_2708_call(var_2710,var_2711,)
output = call_2709
func_2712 = relay.Function([var_2710,var_2711,], output)
mutated_mod['func_2712'] = func_2712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_2727 = relay.TupleGetItem(func_2289_call(), 2)
call_2728 = relay.TupleGetItem(func_2290_call(), 2)
func_1931_call = mod.get_global_var('func_1931')
func_1934_call = mutated_mod.get_global_var('func_1934')
var_2754 = relay.var("var_2754", dtype = "int16", shape = (130,))#candidate|2754|(130,)|var|int16
const_2755 = relay.const([-5,-1,-6,8,7,8,9,-10,-10,-8,-8,-9,10,10,-7,3,-9,-10,-1,-10,-4,-2,4,3,-1,-3,1,-3,-5,2,9,-5,2,-3,4,1,4,10,-7,3,4,-1,7,-8,9,6,5,-8,7,-2,-7,-8,10,6,-8,7,5,7,-2,-6,-4,10,-4,-8,2,-1,-5,-7,-6,2,3,8,-7,-4,1,-1,2,4,-2,6,-2,-2,-5,-2,5,9,-1,-8,3,9,-1,10,-4,7,7,-1,-10,8,5,8,-3,-7,-5,5,8,3,2,1,10,-3,3,7,-10,-1,-6,4,8,-4,-8,-3,10,-6,-1,-10,8,7,-1,7,1,6,-10,7,-2,3,9,-8,3,-3,10,-5,-1,10,-9,3,6,9,10,6,-6,-5,4,-6,-5,9,-6,-4,7,1,10,7,-3,-3,-2,-6,5,-5,-5,6,-4,5,-9,7,10,1,-1,-7,-5,-9,7,-9,-7,3,-7,-1,-2,-1,5,9,5,7,-10,-10,5,6,-5,6,9,-5,8,9,2,3,7,5,3,8,6,-10,7,5,-9,5,2,-6,6,10,-5,-7,6,4,4,1,-10,-3,7,1,2,-7,6,5,-1,1,-10,8,-2,3,4,6,-9,5,10,3,9,-6,-3,6,8,10,6,3,-10,-4,4,-10,-10,8,-8,1,1,2,-8,8,6,5,-3,1,-7,-8,6,4,5,-7,-3,2,-6,7,-3,-2,-2,2,-3,1,-8,1,-10,-2,-6,-8,7,-2,4,-9,-4,-7,-5,-6,-4,10,-7,-9,-7,10,10,-2,-7,2,-4,10,1,6,10,6,-8,-9,-9,-10,7,-10,9,6,4,7,10,-6,9,-6,-4,5,1,7,-10,8,6,-6,8,10,1,-2,7,1,9,-4,-10,-7,3,-2,-8,10,-8,10,10,10,7,4,9,1,3,-1,6,-5,-1,-2,9,4,10,-3,-1,-6,4,-6,5,1,5,-10,-1,2,6,-10,7,2,5,2,10,-6,-7,-9,10,-10,-3,7,-7,-5,-4,8,6,-3,-7,9,-2,-4,-9,-3,3,5,-8,-10,-3,8,10,3,7,-9,10,4,4,4,2,-2,3,-3,-2,-5,-9,-6,-10,5,2,2,1,-5,5,-6,-7,2,-8,10,-9,8,-10,7,3,9,-3,9,-8,-8,-4,-8,5,-10,6,-4,6,2,-8,8,-10,-9,8,8,-2,9,-1,4,8,10,5,10,7,7,-3,-7,2,6,3,5,8,-9,2,6,9,-5,-1,-4,-9,6,-6,4,10,-7,4,8,8,3,-3,10,-5,6,2,-4,3,-4,4,8,-10,7,-8,5,2,-4,7,9,-8,7,7,10,1,10,4,9], dtype = "int16")#candidate|2755|(520,)|const|int16
call_2753 = relay.TupleGetItem(func_1931_call(relay.reshape(var_2754.astype('int16'), [13, 10, 1]), relay.reshape(const_2755.astype('int16'), [13, 10, 4]), ), 0)
call_2756 = relay.TupleGetItem(func_1934_call(relay.reshape(var_2754.astype('int16'), [13, 10, 1]), relay.reshape(const_2755.astype('int16'), [13, 10, 4]), ), 0)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_2766 = func_2013_call()
call_2767 = func_2013_call()
func_2120_call = mod.get_global_var('func_2120')
func_2121_call = mutated_mod.get_global_var('func_2121')
call_2771 = func_2120_call()
call_2772 = func_2120_call()
func_2708_call = mod.get_global_var('func_2708')
func_2712_call = mutated_mod.get_global_var('func_2712')
call_2778 = relay.TupleGetItem(func_2708_call(relay.reshape(call_2766.astype('uint16'), [8, 10, 12]), relay.reshape(call_2766.astype('uint16'), [8, 10, 12]), ), 1)
call_2779 = relay.TupleGetItem(func_2712_call(relay.reshape(call_2766.astype('uint16'), [8, 10, 12]), relay.reshape(call_2766.astype('uint16'), [8, 10, 12]), ), 1)
uop_2790 = relay.erf(const_2755.astype('float64')) # shape=(520,)
output = relay.Tuple([call_2727,call_2753,var_2754,call_2766,call_2771,call_2778,uop_2790,])
output2 = relay.Tuple([call_2728,call_2756,var_2754,call_2767,call_2772,call_2779,uop_2790,])
func_2804 = relay.Function([var_2754,], output)
mod['func_2804'] = func_2804
mod = relay.transform.InferType()(mod)
mutated_mod['func_2804'] = func_2804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2805 = relay.var("var_2805", dtype = "int16", shape = (130,))#candidate|2805|(130,)|var|int16
func_2804_call = mutated_mod.get_global_var('func_2804')
call_2806 = func_2804_call(var_2805)
output = call_2806
func_2807 = relay.Function([var_2805], output)
mutated_mod['func_2807'] = func_2807
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2823 = relay.var("var_2823", dtype = "int32", shape = ())#candidate|2823|()|var|int32
const_2824 = relay.const([[[-9,-10,-1,-7,-8,-8,3,8,-3],[-1,-6,6,8,1,9,-2,4,1],[7,-10,2,5,-3,9,4,10,4]],[[-2,-8,-4,4,-7,6,-4,5,9],[1,-1,1,-10,-2,6,8,6,-10],[-5,6,1,-10,-6,-10,-10,-1,5]],[[3,-6,10,8,-8,4,-7,-2,-10],[5,-1,-3,-8,-10,-4,-2,10,9],[-7,-8,5,5,-2,3,4,-2,-10]],[[4,7,-8,8,-7,7,-10,7,1],[1,-2,-7,-7,-6,3,-5,6,10],[-5,4,-7,-2,-5,-5,8,4,-3]],[[8,1,-10,-2,1,6,-1,-8,-5],[-6,-1,3,-7,6,-5,-4,8,9],[-10,-2,8,-2,9,2,4,10,-8]],[[5,-7,9,-9,-7,8,4,6,9],[-4,-10,1,-8,1,4,2,-7,2],[1,8,-8,-3,-4,-10,2,6,-6]],[[8,-3,3,-10,-9,-6,-2,-4,-6],[-7,-7,-9,-6,1,-4,8,-3,3],[-10,-3,-2,4,7,-8,-10,-9,6]],[[4,-8,3,-1,6,-5,10,-3,-6],[3,3,-8,10,-4,5,-8,5,3],[9,-10,-8,1,-10,-2,-1,8,4]],[[3,-2,-2,10,-5,7,2,3,-9],[8,-10,6,9,-8,1,3,-3,-2],[3,6,-4,7,9,1,1,-9,10]],[[-3,-3,5,1,10,2,-3,-2,4],[-4,-6,-1,10,-6,2,-4,-4,6],[-3,-7,4,-2,6,-6,4,3,2]],[[8,-7,8,-4,-4,9,10,-8,-4],[-8,-9,-4,7,4,9,4,-7,4],[2,-8,-6,8,-9,-3,-1,1,5]],[[5,-1,-2,7,10,8,-9,-3,9],[-6,-5,5,9,-1,6,-4,-8,1],[7,-9,-10,-2,9,8,7,5,10]]], dtype = "int32")#candidate|2824|(12, 3, 9)|const|int32
bop_2825 = relay.not_equal(var_2823.astype('bool'), const_2824.astype('bool')) # shape=(12, 3, 9)
output = relay.Tuple([bop_2825,])
output2 = relay.Tuple([bop_2825,])
func_2830 = relay.Function([var_2823,], output)
mod['func_2830'] = func_2830
mod = relay.transform.InferType()(mod)
mutated_mod['func_2830'] = func_2830
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2831 = relay.var("var_2831", dtype = "int32", shape = ())#candidate|2831|()|var|int32
func_2830_call = mutated_mod.get_global_var('func_2830')
call_2832 = func_2830_call(var_2831)
output = call_2832
func_2833 = relay.Function([var_2831], output)
mutated_mod['func_2833'] = func_2833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2649_call = mod.get_global_var('func_2649')
func_2651_call = mutated_mod.get_global_var('func_2651')
call_2859 = relay.TupleGetItem(func_2649_call(), 0)
call_2860 = relay.TupleGetItem(func_2651_call(), 0)
output = relay.Tuple([call_2859,])
output2 = relay.Tuple([call_2860,])
func_2874 = relay.Function([], output)
mod['func_2874'] = func_2874
mod = relay.transform.InferType()(mod)
mutated_mod['func_2874'] = func_2874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mutated_mod.get_global_var('func_2874')
call_2875 = func_2874_call()
output = call_2875
func_2876 = relay.Function([], output)
mutated_mod['func_2876'] = func_2876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_2964 = func_2013_call()
call_2965 = func_2013_call()
output = relay.Tuple([call_2964,])
output2 = relay.Tuple([call_2965,])
func_2976 = relay.Function([], output)
mod['func_2976'] = func_2976
mod = relay.transform.InferType()(mod)
mutated_mod['func_2976'] = func_2976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2976_call = mutated_mod.get_global_var('func_2976')
call_2977 = func_2976_call()
output = call_2977
func_2978 = relay.Function([], output)
mutated_mod['func_2978'] = func_2978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2976_call = mod.get_global_var('func_2976')
func_2978_call = mutated_mod.get_global_var('func_2978')
call_3003 = relay.TupleGetItem(func_2976_call(), 0)
call_3004 = relay.TupleGetItem(func_2978_call(), 0)
func_2830_call = mod.get_global_var('func_2830')
func_2833_call = mutated_mod.get_global_var('func_2833')
var_3011 = relay.var("var_3011", dtype = "int32", shape = ())#candidate|3011|()|var|int32
call_3010 = relay.TupleGetItem(func_2830_call(relay.reshape(var_3011.astype('int32'), [])), 0)
call_3012 = relay.TupleGetItem(func_2833_call(relay.reshape(var_3011.astype('int32'), [])), 0)
uop_3016 = relay.log10(call_3003.astype('float32')) # shape=(8, 10, 12)
uop_3018 = relay.log10(call_3004.astype('float32')) # shape=(8, 10, 12)
bop_3020 = relay.minimum(var_3011.astype('int16'), call_3010.astype('int16')) # shape=(12, 3, 9)
bop_3023 = relay.minimum(var_3011.astype('int16'), call_3012.astype('int16')) # shape=(12, 3, 9)
uop_3028 = relay.atan(call_3010.astype('float32')) # shape=(12, 3, 9)
uop_3030 = relay.atan(call_3012.astype('float32')) # shape=(12, 3, 9)
func_2830_call = mod.get_global_var('func_2830')
func_2833_call = mutated_mod.get_global_var('func_2833')
call_3031 = relay.TupleGetItem(func_2830_call(relay.reshape(var_3011.astype('int32'), [])), 0)
call_3032 = relay.TupleGetItem(func_2833_call(relay.reshape(var_3011.astype('int32'), [])), 0)
output = relay.Tuple([uop_3016,bop_3020,uop_3028,call_3031,])
output2 = relay.Tuple([uop_3018,bop_3023,uop_3030,call_3032,])
func_3039 = relay.Function([var_3011,], output)
mod['func_3039'] = func_3039
mod = relay.transform.InferType()(mod)
var_3040 = relay.var("var_3040", dtype = "int32", shape = ())#candidate|3040|()|var|int32
output = func_3039(var_3040)
func_3041 = relay.Function([var_3040], output)
mutated_mod['func_3041'] = func_3041
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3203 = relay.var("var_3203", dtype = "float32", shape = (3, 11, 1))#candidate|3203|(3, 11, 1)|var|float32
uop_3204 = relay.exp(var_3203.astype('float32')) # shape=(3, 11, 1)
func_308_call = mod.get_global_var('func_308')
func_311_call = mutated_mod.get_global_var('func_311')
const_3217 = relay.const([2.362941,7.779568,1.208401,-9.464814,1.045988,1.455423,-5.643313,-6.468357,-0.539704,-0.988051,-6.048868,-4.744040,0.926726,-2.427240,-0.513813,4.751948,9.048497,7.051617,6.422234,-6.008657,-9.995956,-6.499822,-4.477397,6.389618,7.811233,-3.346720,0.921786,-0.135579,8.185838,1.057394,1.360329,-4.162917,7.784848,3.662202,8.106937,1.339766,3.342778,-0.690942,-2.432809,-3.453297,6.319926,-6.578497,9.482832,5.782687,9.895719,7.924221,9.738642,4.369995,5.440378,8.807829,-4.896390,-1.391068,-1.909374,-2.600693,-0.354386,-0.110221,2.607056,-2.481678,-9.926219,2.112669,-8.484342,-7.692793,-6.700629,-2.000285,3.345369,-6.091600,2.959164,3.893372,1.994211,-7.881958,3.387422,6.314497,6.913729,6.577481,0.804608,8.580471,1.312088,6.995517,6.344898,9.438082,-3.578908,9.740824,6.915675,5.039991,-5.830139,-1.027099,9.969999,-1.267814,-9.716823,-2.551586,-4.732894,2.770613,4.142726,-6.964903,0.390843,1.585243,0.483244,5.973214,-9.591867,-1.324999,-1.720217,-7.214308,-9.979841,3.586075,-6.086309,2.497284,5.442748,6.863878,9.331429,-4.864210,8.998290,-8.729543,-9.189504,3.489291,3.173411,8.380089,8.142350,3.960612,-1.088107,-2.608006,-9.821508,2.360114,-0.843052,-6.725111,-8.386003,-0.132208,9.277911,6.661287,-0.171303,-5.201698,-4.375997,-9.543982,3.149149,1.844326,-7.874619,-8.692363,3.153045,-7.852838,-1.592981,-2.811194,0.729092,3.466736,3.966604,-2.910502,8.283475,2.828659,-7.189483,2.695063,8.795003,9.176410,-0.606056,-8.976660,-9.321927,-9.309147,-6.455650,6.819778,5.420255,-5.118423,8.231698,5.914754,6.337869,-6.115984,-7.322653,4.598440,4.773334,9.195093,-1.826136,9.557530,-6.312146,-6.809159,-4.806383,6.429195,-1.751701,6.326829,-5.373455,-5.121496,6.842493,-9.770119,3.155816,-3.877632,-9.853001,-3.107841,0.877340,6.633431,0.313748,-0.908518,-1.325634,-3.595102,8.031708,-4.241087,-0.487962,3.748470,-9.466321,8.764559,8.902719,-2.372796,5.891220,3.349564,-8.119232,-2.027523,-7.883651,-1.839096,-5.013261,9.389147,-6.968505,-4.993910,-0.911483,-7.973477,3.107422,-5.345821,3.415584,-0.312742,-3.419802,-3.065786,7.657767,-8.856801,3.784296,-6.305347,3.301327,-4.407968,4.239466,-4.953969,-1.829841,-1.834159,-4.260800,3.751828,8.111660,-5.487618,8.246200,0.777682,-4.272261,-0.150574,-2.608453,8.222565,-6.120350,1.992293,-7.569586,3.351344,-3.400221,-7.802677,0.077315,7.485824,-0.267223,-0.723306,-8.099017,-7.277140,1.022123,-5.510131,5.834108,-4.745634,4.355422,3.165485,7.682256,5.754617,5.266761,2.776324,2.742355,6.336968,-9.497965,2.422207,4.747126,8.683099,-8.398305,-3.334099,-2.986480,3.464791,-4.318873,3.108202,3.954802,-7.602642,0.316771,1.186052,-4.206804,-4.592033,-0.639867,6.561805,7.699984,5.728618,-8.353095,3.394659,-9.480296,3.226139,4.953139,-8.692025,5.504875,6.617015,-9.043192,3.251743,-8.035454,-5.073129,7.905018,-0.299942,-5.645559,-5.473687,-4.171452,2.254814,-2.820947,5.908416,-1.750311,-7.438947,-4.955861,-3.663623,3.828690,2.954858,1.022279,-6.838730,2.680671,4.160204,-1.708157,0.219024,9.774973,0.248538,8.944939,7.507692,4.511905,0.009745,-4.784999,-5.833072,7.779590,2.773415,6.177171,4.031241,-4.004121,8.640278,-7.358229,4.914112,2.573215,3.459361,-7.750767,-8.890739,-1.168773,4.221930,4.565328,-7.962409,-9.929740,1.987124,-8.762447,-1.680059,9.174075,3.967169,-8.821471,8.924618,-2.226387,-4.095300,-2.970271,-3.422821,-6.267521,2.758507,8.540805,-5.043515,3.697482,-2.773883,-6.941889,-9.116992,-8.134540,9.739118,4.407298,-3.942759,5.535856,-5.359812,-6.276859,8.489746,-1.314838,-2.432128,-7.382117,4.985728,0.629030,2.955664,8.321509,7.590454,-9.621935,-3.775885,-0.700157,4.900065,-6.677913,8.122119,-3.828712,8.794940,8.366459,-9.447290,3.316528,7.602469,8.230703,-2.016777,-1.106167,-2.457684,9.564857,-7.975328,-5.315122,3.364470,0.852851,5.838768,4.962198,3.344522,-8.950098,9.617128,0.571855,-7.374319,0.773914,4.185163,3.149784,-4.162139,3.356616,-5.877079,-6.646213,-6.485030,-1.851459,3.957020,-7.506161,-9.959712,3.766487,-6.729962,-9.654820,9.676400,-5.019706,6.681605,9.885656,-8.638747,4.432860,-4.078422,-8.351417,8.798210,-1.723882,4.464582,1.938838,8.724941,1.515331,-2.727413,5.960507,7.339555,-3.236853,0.440170,1.445951,-9.916155,-7.131877,-6.382633,6.437606,0.520563,3.568961,2.281272,-3.032688,4.597592,-0.932216,9.035268,2.255184,3.185205,5.976594,7.938472,-4.587415,2.557177,-9.228885,-8.809459,-2.677986,9.362765,-0.589354,-7.303404,-6.186170,-4.066385,7.223259,-1.875026,-8.622840,8.239268,-9.904315,-0.379910,-8.546711,8.264263,-3.978482,9.365758,1.803294,-9.392139,7.359346,-0.426988,-4.164854,-4.966530,-6.606699,-4.772909,9.439610,-9.774622,5.079769,-6.605542,9.890851,-5.452963,6.379032,-7.457731,3.670581,-3.830999,2.851463,-6.435219,6.102319,-4.807655,2.588156,7.706430,-2.795192,-9.264771,-8.499484,5.151433,-9.669223,4.125789,1.911754,-0.922735,-0.250796,5.062816,5.236789,1.359633,3.167039,-1.134524,4.789328,0.789293,5.665837,7.032503,-6.636468,2.101057,-5.076112,3.085562,-2.442461,-9.146882,-1.017196,3.680189,9.925363,9.997751,-5.308989,8.263650,6.630504,6.485359,-9.730968,-0.642961,3.447395,5.033135,1.731738,-5.369420,-8.198551,-3.625211,-9.063292,-0.786695,2.976738,-8.759889,0.959406,2.240217,-8.232240,-4.619475,5.149272,-3.349769,-5.965776,-5.635426,-2.722691,-5.479895,-0.573070,4.167820,-9.840624,-3.793153,0.707159,3.803566,4.226784,1.914308,8.309004,-2.170347,8.292003,7.237187,7.046042,8.451561,-4.484355,-7.141646,-7.253936,-0.898400,-8.364668,-9.162034,4.604053,-1.077970,-3.537055,1.523612,3.640803,-3.599374,-8.097847,1.134232,-1.745125,6.053269,-2.103668,7.757406,9.898795,0.051905,-6.048897,-2.628487,6.889169,-4.841282,-9.890432,8.165931,-0.654328,-8.674299,1.493862,-9.951627,-9.860620,2.357889,6.983905,-7.581364,-0.533816,-2.715010,5.151198,-5.981034,-6.687246,2.247461,-1.770277,-5.025090,-3.427990,8.590700,-5.026142,1.623486,9.928981,1.889021,2.929483,-2.056914,9.451949,7.758631,4.621816,1.996548,-1.023641,-3.011135,9.819922,9.588872,-1.531108,-0.763260,-7.844908,0.721172,-0.837726,2.279456,-0.657785,5.090409,-6.843552,5.814447,-4.898178,0.294322,8.201642,-0.173586,0.160411,-9.645770,-0.663029,-8.495052,1.881129,0.520799,9.649960,7.580518,-4.925531,9.494227,9.259949,-7.084475,-7.856629,2.472331,4.272037,-9.765131,2.586576,-0.322289,5.724315,5.223995,9.862522,-9.742525,0.299154,-4.115762,-7.215326,-6.983609,-3.833427,-9.536037,8.948281,-6.121974,3.444139,0.712672,-0.276885,-5.129758,-6.819582,-0.232060,-4.821147,-9.930191,-4.072241,8.018394,9.314079,4.141098,-1.406090,-1.679203,7.793376,7.984768,8.159234,4.330636,-3.151809,-0.756204,0.063952,-2.294093,6.702430,9.924141,-8.303675,0.281295,6.431923,6.858146,-4.552835,8.751188,3.428856,-5.668386,0.356762,-4.060261,1.404709,-0.595686,0.059911,6.322659,-0.900865,-3.714246,4.458916,-5.481148,-6.746039,0.340673,1.712645,-7.669093,3.439090,8.065760,4.234113,-8.758509,-8.955454,3.831484,-3.952319,0.055846,-5.168546,5.769293,5.192775,-3.173500,9.276249,-6.146535,-4.241672,4.586799,8.878839,-4.001302,-3.272676,0.353450,3.867289,-4.987717,0.357062,-7.003934,-8.706815,-7.243222,7.348887,6.129511,-9.352234,3.420246,1.016377,-6.007584,-8.163717,1.494673,5.120640,5.397275,7.644729,-6.253464,3.925785,-1.938312,-6.198702,4.871687,6.982110,1.841834,-1.497546,-5.275003,4.424311,-4.270023,1.877970,9.652041,5.334813,-5.087648,-4.655540,7.995180,7.065309,5.986205,-8.009483,-7.582343,-8.652350,4.707509,-4.418106,-0.113826,-4.491355,3.793985,-2.453384,1.920990,-3.026679,-7.221901,-9.265089,-2.188702,-3.172244,-8.201197,2.573371,-5.774121,-2.244634,-8.254807,-7.836618,-0.290707,-0.998704,-7.151764,-5.957731,-1.620335,3.337703,-1.749682,-6.359562,-8.142681,-0.358582,-8.753651,7.577393,9.828490,-4.114586,-7.692011,-9.322724,-1.424891,8.634844,4.762810,-6.278977,-2.227253,9.514269,3.495445,9.832350,-5.421087,-9.722668,7.520860,1.243748,8.335215,7.102792,-3.772689,6.624795,-8.629791,-9.355361,-1.415251,4.859014,-4.798889,6.974628,-2.790103,6.701748,0.418728,4.441754,7.511872,5.920452,0.343100,8.137713,2.729196,-8.664224,8.052623,4.231114,4.508206,-5.224258,0.599265,5.264335,-1.541602,-8.310689,8.661798,8.322768,2.162643,8.203467,9.705136,-8.073724,3.571562,-4.838735,6.278784,3.420635,-3.555300,9.946430,7.512304,5.217028,8.451115,3.766340,-1.589766,-5.923668,-9.623246,-9.377389,-7.907396,-6.632804,9.881223,-7.616121,-4.962737,5.988738,9.054633,9.380483,0.326296,-2.332558,-1.837510,3.779905,-4.165227,-9.600858,-3.053907,-9.812679,-2.042758,-7.854671,0.381208,-5.370258,-1.079309,-3.840234,-0.894839,0.758674,9.269992,7.971381,8.779071,-5.689721,-6.145467,-7.192243,6.938579,9.257996,8.285325,9.619918,-7.349453,2.306049,4.228929,-7.996845,5.476840,4.609018,3.969416,-8.192252,-4.670485,9.216946,-3.061094,5.774048,-3.250453,3.997865,-6.717040,3.232272,-3.463012,-8.059428,-0.493684,-5.176027,-5.803823,-9.499172,-4.137612,-3.066645,9.223664,2.001877,-9.357843,4.335022,2.575032,-9.644576,2.627441,-9.251643,-6.610036,0.576755,9.211697,-3.263762,-9.876264,4.542358,-9.147263,0.486007,5.840636,6.722023,7.849812,2.239040,7.293290,-7.970058,1.459338,-9.437573,3.665388,-3.341237,8.989396,-4.898777,-5.861920,-3.909448,-7.943000,-1.206762,-5.918116,4.344802,7.625388,-8.775585,-3.000487,4.894444,1.142341,-7.476979,-1.203574,2.409965,5.279073,3.144710,-8.680007,-2.840013,0.577343,-5.218073,-0.478773,6.698946,-5.271042,-3.217410,-3.766954,-7.666897,-5.827599,0.266213,-4.034588,-8.623633,-7.052101,8.067658,-7.231420,4.548327,-3.588296,1.040836,7.740894,-9.448327,1.602247,5.012587,7.993426,0.729718,-3.999828,-1.362848,-8.606984,-8.265625,-8.546494,5.997862,-0.570112,-1.046519,-9.921085,5.566056,-4.236456,-8.261098,1.961870,2.997226,3.617497,-2.318525,7.573474,-1.032797,0.799991,1.245388,-2.942955,-8.283910,2.752177,-0.714115,3.521821,-1.406231,1.796862,0.766493,-2.811688,3.002042,2.080966,7.050947,-2.861190,-0.452274,-8.443017,2.814882,-6.200114,8.362174,-6.752206,-0.821551,-9.690366,8.146578,9.228948,-2.810638,-4.725291,7.905510,7.408776,-7.187360,4.949595,1.476306,-9.389047,-6.908662,1.520559,8.858326,6.166124,5.544876,-0.301483,-6.511111,6.391675,8.393813,-8.210340,4.891571,9.890859,-1.836892,1.905046,-1.095869,-3.993665,-4.220150,9.165124,-2.178121,5.701341,-4.100388,-3.556308,6.605070,4.006753,3.743672,-7.111221,5.803760,9.991937,-5.399220,4.871665,-0.319923,9.928563,9.856453,-1.415939,-9.751013,8.590495,8.996690,5.993305,7.509332,3.612938,-3.880214,-0.977950,5.269859,1.803347,-9.989535,3.818001,2.071040,0.179908,8.338188,-5.159296,-5.993127,-1.446624,4.168589,-2.322453,-5.470225,-0.243094,4.025360,-0.018831,-2.492912,-3.906715,-5.975224,6.982089,6.512632,4.211063,4.946263,-7.332248,4.919281,2.701917,-5.060626,-2.918013,-7.417048,8.744616,5.049024,-5.535455,-8.390471,-5.006378,-8.680427,-1.174981,-2.427072,-5.303548,9.698678,9.222280,1.201733,7.154099,0.946096,-0.491576,-9.293792,5.215965,3.788011,6.059337,0.783870,7.529211,-9.675717,0.817764,0.545088,-2.349306,-5.208776,2.755586,-8.938965,3.637164,-8.172462,9.585166,9.247703,-0.372688,4.902524,-0.142176,0.188895,-1.145656,4.228943,8.677504,-0.669747,4.484196,2.145289,-0.121642,-1.019289,5.537005,-1.486105,2.156805,-8.307035,-8.538408,-3.785301,-7.296224,-0.907021,5.707912,-1.705362,-7.075996,-1.554734,8.508233,8.106373,9.253686,4.882978,-9.977237,-4.359418,1.949484,-5.949009,-8.071456,5.132103,-2.124315,2.788752,8.762114,-2.959167,-4.047249,-6.090162,4.687808,-8.503724,9.664705,1.876396,7.455367,8.642236,-8.388103,-4.236178,-2.452215,9.929903,-1.824160,-9.326518,-8.799254,5.182016,1.234895,-5.393151,8.591105,-8.414895,-4.519198,6.293915,4.566001,3.227942,-0.166982,-8.816349,1.130246,8.300226,-4.376412,4.779813,4.706840,-0.856355,-0.967715,5.435922,7.428514,-3.249332,4.497189,5.240808,5.316914,0.266101,-1.255033,-7.913110,2.366358,6.148967,-5.689540,7.345604,-4.811666,-0.342629,-8.629770,-5.485729,4.523753,-1.547527,-9.222762,5.802270,-8.016390,8.947935,-1.492500,-8.600942,-4.790534,-1.382784,-9.534836,-7.543480,8.573893,-6.105317,-4.350764,5.907390,0.238564,-9.634193,2.904627,1.450019,-4.548817,-5.358666,6.853209,3.184090,2.337725,-2.970346,8.110371,-5.304050,1.427057,-1.602273,3.560393,-2.646958,7.257017,8.070463,-2.575001,-0.735034,9.859541,-0.538984,7.411222,-5.192846,3.539615,8.708329,6.921239,3.432326,-4.278457,-1.794407,5.669612,-3.668764,-6.493230,5.067189,4.464429,3.563492,-4.669286,1.976990,7.703478,-6.388335,-1.520444,3.486788,7.805392,-3.863685,7.274878,-7.930004,3.083374,7.404135,-6.377405], dtype = "float64")#candidate|3217|(1296,)|const|float64
call_3216 = relay.TupleGetItem(func_308_call(relay.reshape(const_3217.astype('float64'), [16, 9, 9])), 0)
call_3218 = relay.TupleGetItem(func_311_call(relay.reshape(const_3217.astype('float64'), [16, 9, 9])), 0)
output = relay.Tuple([uop_3204,call_3216,const_3217,])
output2 = relay.Tuple([uop_3204,call_3218,const_3217,])
func_3220 = relay.Function([var_3203,], output)
mod['func_3220'] = func_3220
mod = relay.transform.InferType()(mod)
var_3221 = relay.var("var_3221", dtype = "float32", shape = (3, 11, 1))#candidate|3221|(3, 11, 1)|var|float32
output = func_3220(var_3221)
func_3222 = relay.Function([var_3221], output)
mutated_mod['func_3222'] = func_3222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2617_call = mod.get_global_var('func_2617')
func_2619_call = mutated_mod.get_global_var('func_2619')
call_3228 = relay.TupleGetItem(func_2617_call(), 2)
call_3229 = relay.TupleGetItem(func_2619_call(), 2)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_3231 = func_2013_call()
call_3232 = func_2013_call()
output = relay.Tuple([call_3228,call_3231,])
output2 = relay.Tuple([call_3229,call_3232,])
func_3235 = relay.Function([], output)
mod['func_3235'] = func_3235
mod = relay.transform.InferType()(mod)
output = func_3235()
func_3236 = relay.Function([], output)
mutated_mod['func_3236'] = func_3236
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3266 = relay.var("var_3266", dtype = "float32", shape = (9, 2, 12))#candidate|3266|(9, 2, 12)|var|float32
uop_3267 = relay.log(var_3266.astype('float32')) # shape=(9, 2, 12)
uop_3270 = relay.atan(uop_3267.astype('float32')) # shape=(9, 2, 12)
output = relay.Tuple([uop_3270,])
output2 = relay.Tuple([uop_3270,])
func_3275 = relay.Function([var_3266,], output)
mod['func_3275'] = func_3275
mod = relay.transform.InferType()(mod)
mutated_mod['func_3275'] = func_3275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3276 = relay.var("var_3276", dtype = "float32", shape = (9, 2, 12))#candidate|3276|(9, 2, 12)|var|float32
func_3275_call = mutated_mod.get_global_var('func_3275')
call_3277 = func_3275_call(var_3276)
output = call_3277
func_3278 = relay.Function([var_3276], output)
mutated_mod['func_3278'] = func_3278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1883_call = mod.get_global_var('func_1883')
func_1885_call = mutated_mod.get_global_var('func_1885')
call_3327 = func_1883_call()
call_3328 = func_1883_call()
func_2804_call = mod.get_global_var('func_2804')
func_2807_call = mutated_mod.get_global_var('func_2807')
const_3330 = relay.const([7,4,8,-8,3,-1,4,9,10,3,1,-1,-9,6,5,9,-3,-6,2,1,-7,-4,-4,3,6,-6,-3,-4,5,4,5,4,6,-8,5,4,4,2,-3,-2,2,4,6,8,9,-1,-5,2,-6,-10,10,4,-1,1,-1,1,-2,-9,-6,-10,-8,9,10,3,-10,9,-6,-3,9,-3,9,-4,-10,1,-9,-8,4,10,-9,-9,7,-8,-3,4,-6,-2,8,6,-8,-3,-8,4,10,-7,9,5,-6,-1,-5,10,-9,-6,8,-6,-9,-3,-1,10,-3,10,4,9,10,10,-4,-7,-3,-3,-5,7,-9,-10,7,4,10,3,-9,4,2,-7], dtype = "int16")#candidate|3330|(130,)|const|int16
call_3329 = relay.TupleGetItem(func_2804_call(relay.reshape(const_3330.astype('int16'), [130,])), 5)
call_3331 = relay.TupleGetItem(func_2807_call(relay.reshape(const_3330.astype('int16'), [130,])), 5)
output = relay.Tuple([call_3327,call_3329,const_3330,])
output2 = relay.Tuple([call_3328,call_3331,const_3330,])
func_3333 = relay.Function([], output)
mod['func_3333'] = func_3333
mod = relay.transform.InferType()(mod)
output = func_3333()
func_3334 = relay.Function([], output)
mutated_mod['func_3334'] = func_3334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2649_call = mod.get_global_var('func_2649')
func_2651_call = mutated_mod.get_global_var('func_2651')
call_3335 = relay.TupleGetItem(func_2649_call(), 0)
call_3336 = relay.TupleGetItem(func_2651_call(), 0)
uop_3341 = relay.sinh(call_3335.astype('float64')) # shape=(14, 1, 15)
uop_3343 = relay.sinh(call_3336.astype('float64')) # shape=(14, 1, 15)
output = relay.Tuple([uop_3341,])
output2 = relay.Tuple([uop_3343,])
func_3355 = relay.Function([], output)
mod['func_3355'] = func_3355
mod = relay.transform.InferType()(mod)
output = func_3355()
func_3356 = relay.Function([], output)
mutated_mod['func_3356'] = func_3356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mod.get_global_var('func_2874')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_3396 = relay.TupleGetItem(func_2874_call(), 0)
call_3397 = relay.TupleGetItem(func_2876_call(), 0)
func_2804_call = mod.get_global_var('func_2804')
func_2807_call = mutated_mod.get_global_var('func_2807')
const_3408 = relay.const([[6],[-5],[-2],[-10],[9],[9],[5],[-4],[-9],[-5],[1],[-7],[-1],[-1],[-2],[5],[8],[-8],[-2],[1],[4],[5],[-6],[-6],[-9],[-5],[4],[3],[2],[-2],[10],[-6],[-9],[1],[5],[-3],[1],[-10],[7],[1],[-9],[-6],[10],[-8],[-3],[9],[-8],[-2],[-9],[6],[-4],[-7],[-7],[2],[-5],[1],[9],[8],[-9],[2],[-7],[-7],[-5],[-1],[3],[-10],[-8],[-4],[6],[-10],[10],[8],[1],[9],[-10],[-3],[-1],[3],[-9],[-10],[-4],[1],[-9],[-7],[-2],[-7],[-8],[-2],[-9],[-10],[3],[10],[-4],[-9],[7],[-7],[-10],[-1],[7],[4],[-6],[-4],[8],[-5],[8],[-7],[-3],[-4],[-10],[-1],[-10],[6],[-1],[1],[-8],[7],[-7],[-8],[6],[1],[-3],[4],[7],[-2],[-9],[-4],[3],[3],[10],[10]], dtype = "int16")#candidate|3408|(130, 1)|const|int16
call_3407 = relay.TupleGetItem(func_2804_call(relay.reshape(const_3408.astype('int16'), [130,])), 2)
call_3409 = relay.TupleGetItem(func_2807_call(relay.reshape(const_3408.astype('int16'), [130,])), 2)
bop_3410 = relay.bitwise_or(call_3396.astype('uint64'), const_3408.astype('uint64')) # shape=(14, 130, 15)
bop_3413 = relay.bitwise_or(call_3397.astype('uint64'), const_3408.astype('uint64')) # shape=(14, 130, 15)
uop_3421 = relay.acosh(call_3396.astype('float32')) # shape=(14, 1, 15)
uop_3423 = relay.acosh(call_3397.astype('float32')) # shape=(14, 1, 15)
output = relay.Tuple([call_3407,bop_3410,uop_3421,])
output2 = relay.Tuple([call_3409,bop_3413,uop_3423,])
func_3428 = relay.Function([], output)
mod['func_3428'] = func_3428
mod = relay.transform.InferType()(mod)
output = func_3428()
func_3429 = relay.Function([], output)
mutated_mod['func_3429'] = func_3429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2120_call = mod.get_global_var('func_2120')
func_2121_call = mutated_mod.get_global_var('func_2121')
call_3448 = func_2120_call()
call_3449 = func_2120_call()
func_2976_call = mod.get_global_var('func_2976')
func_2978_call = mutated_mod.get_global_var('func_2978')
call_3450 = relay.TupleGetItem(func_2976_call(), 0)
call_3451 = relay.TupleGetItem(func_2978_call(), 0)
uop_3457 = relay.cos(call_3448.astype('float32')) # shape=(8, 10, 12)
uop_3459 = relay.cos(call_3449.astype('float32')) # shape=(8, 10, 12)
var_3462 = relay.var("var_3462", dtype = "float32", shape = (8, 10, 12))#candidate|3462|(8, 10, 12)|var|float32
bop_3463 = relay.logical_and(call_3450.astype('bool'), relay.reshape(var_3462.astype('bool'), relay.shape_of(call_3450))) # shape=(8, 10, 12)
bop_3466 = relay.logical_and(call_3451.astype('bool'), relay.reshape(var_3462.astype('bool'), relay.shape_of(call_3451))) # shape=(8, 10, 12)
output = relay.Tuple([uop_3457,bop_3463,])
output2 = relay.Tuple([uop_3459,bop_3466,])
func_3473 = relay.Function([var_3462,], output)
mod['func_3473'] = func_3473
mod = relay.transform.InferType()(mod)
var_3474 = relay.var("var_3474", dtype = "float32", shape = (8, 10, 12))#candidate|3474|(8, 10, 12)|var|float32
output = func_3473(var_3474)
func_3475 = relay.Function([var_3474], output)
mutated_mod['func_3475'] = func_3475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2617_call = mod.get_global_var('func_2617')
func_2619_call = mutated_mod.get_global_var('func_2619')
call_3546 = relay.TupleGetItem(func_2617_call(), 2)
call_3547 = relay.TupleGetItem(func_2619_call(), 2)
output = relay.Tuple([call_3546,])
output2 = relay.Tuple([call_3547,])
func_3559 = relay.Function([], output)
mod['func_3559'] = func_3559
mod = relay.transform.InferType()(mod)
mutated_mod['func_3559'] = func_3559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3559_call = mutated_mod.get_global_var('func_3559')
call_3560 = func_3559_call()
output = call_3560
func_3561 = relay.Function([], output)
mutated_mod['func_3561'] = func_3561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3235_call = mod.get_global_var('func_3235')
func_3236_call = mutated_mod.get_global_var('func_3236')
call_3564 = relay.TupleGetItem(func_3235_call(), 1)
call_3565 = relay.TupleGetItem(func_3236_call(), 1)
output = call_3564
output2 = call_3565
func_3571 = relay.Function([], output)
mod['func_3571'] = func_3571
mod = relay.transform.InferType()(mod)
output = func_3571()
func_3572 = relay.Function([], output)
mutated_mod['func_3572'] = func_3572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mod.get_global_var('func_2874')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_3630 = relay.TupleGetItem(func_2874_call(), 0)
call_3631 = relay.TupleGetItem(func_2876_call(), 0)
func_3571_call = mod.get_global_var('func_3571')
func_3572_call = mutated_mod.get_global_var('func_3572')
call_3638 = func_3571_call()
call_3639 = func_3571_call()
const_3651 = relay.const([[[-2.597205,1.920821,4.523157,-3.818017,-3.626876,-4.226408,-7.441612,-5.246804,5.690363,-1.298403,9.971364,7.202910],[-9.111583,-4.639342,-4.259996,-8.306571,2.685033,-4.657862,0.316539,8.940429,-5.573929,2.232915,-5.441976,-7.889614],[5.242328,-8.215707,0.502639,-8.776681,8.773087,2.784425,-3.928449,-4.510940,-0.609760,-2.688228,4.116541,3.341610],[9.301882,-6.637442,-4.038670,8.659654,3.035411,-7.382358,-3.196462,1.757727,8.554598,5.241997,-8.121276,1.260207],[-8.374723,-3.481402,-2.120416,5.777464,-2.710283,6.339324,-8.422204,8.399826,-0.139995,-9.965164,-3.084229,-1.736302],[3.711550,0.146993,-9.534670,-9.509256,-1.717422,-5.395402,-6.889069,-0.258785,-9.917716,1.847386,-1.655334,-3.213364],[-0.366092,7.032117,-1.863183,-7.087622,-5.459818,0.840182,4.976506,0.659324,-0.337898,-8.020814,-3.194184,-7.669511],[-3.185442,5.438292,-8.037243,-0.081025,2.022701,7.648719,8.236752,5.036796,6.188266,-8.599433,-8.370241,-8.164676],[-8.784047,7.215895,4.532792,0.657687,1.218447,-3.476838,-6.102661,-8.888224,7.358862,-3.426467,2.802150,-9.125883],[-1.513026,0.204307,-7.670294,-4.499556,-0.714968,5.382404,2.314459,-9.556603,-8.888301,-5.391714,1.855486,-9.688375]],[[-8.186536,6.049184,-0.647440,-4.754213,7.530637,6.050453,4.074868,-5.387708,2.606649,1.607365,-8.329477,6.617512],[-0.797932,1.771238,-9.533390,-1.011867,-6.539598,-7.480005,0.952826,-4.283296,3.750719,4.367068,5.307558,-7.511663],[5.607970,3.799110,3.324821,-9.881284,-0.552123,9.205553,4.704596,0.544840,-9.999247,-0.265028,-7.199183,-2.863534],[-0.992393,-8.809947,2.548935,-5.889771,-2.380317,-5.313842,-7.167651,6.700514,-4.147422,1.501499,6.446920,-1.513234],[0.871874,7.827548,0.082859,6.514341,5.344940,1.237495,-8.754970,-3.381548,8.439010,5.728018,9.561263,-1.607313],[3.548016,-4.387925,-1.522753,-7.410954,3.591344,6.207082,4.601192,0.347640,-4.765328,0.702499,-5.481493,6.365548],[-2.972834,-3.406362,5.866199,-0.127031,-8.787342,8.364746,9.623908,-1.194708,-4.582747,6.448658,-3.033485,-7.502773],[0.199683,-3.015186,7.167905,7.326785,-5.195321,-4.467986,-0.130079,-5.843326,2.030333,2.801077,-6.611261,7.682528],[1.096262,-6.376110,4.609138,-1.088189,6.183786,0.806579,-7.633469,-8.235887,-9.111345,-5.130205,2.902620,0.466233],[5.678416,7.448051,5.788475,-8.859443,6.348732,-7.465311,1.981335,9.806391,4.801785,-6.558535,1.493284,-5.655850]],[[8.000906,-3.568055,-2.709287,2.383769,-5.463655,1.071423,9.142872,-6.504507,-9.537272,-4.791668,9.266556,-2.237155],[-7.308296,-2.899621,-6.026749,8.509661,-0.020663,-7.091073,8.801448,-8.898009,1.688244,3.844961,3.318839,2.533604],[8.641035,3.526349,-4.112171,9.050270,-0.607588,-0.981245,1.185473,-7.405974,-9.678574,-6.041692,-6.771562,7.234623],[-7.213856,0.162790,5.357210,5.960600,-4.337958,3.669486,4.407049,9.760273,7.331088,-7.500548,3.324354,-4.558443],[6.602790,4.914575,3.654395,1.087495,-7.861046,7.772770,-0.427771,-6.470761,7.251860,0.688370,-4.757933,0.865867],[-1.802196,-2.772599,-9.642247,9.870464,3.245389,-1.975390,-1.126094,-0.510076,-9.358375,-3.937937,6.193972,4.215080],[-3.659809,0.720583,7.319433,-5.759189,-2.346533,4.421082,1.354108,-9.831010,2.215187,0.619830,8.004391,-8.283940],[7.582257,-8.450531,7.006287,-7.091775,-8.182398,4.874932,-8.674944,9.261650,-0.137156,9.307618,-5.117566,9.648571],[-5.895452,8.860827,-7.265232,4.575195,-2.006455,-3.385583,0.429430,6.223494,-4.519364,9.681115,7.185770,3.591378],[4.621913,4.245168,9.622508,-0.381665,-3.613810,3.126776,9.776878,-5.238913,-9.877214,-6.094487,7.761424,1.983723]],[[-9.099723,-7.509804,3.483755,5.885222,0.562400,-7.805366,5.567755,-9.737475,-0.053662,0.818360,2.772996,4.044804],[-3.890799,9.762846,-6.557757,-7.666573,-8.379490,-5.912547,-6.649730,-4.359574,-5.537305,-4.597026,0.895667,3.065024],[-8.057997,-9.159669,5.384567,2.614681,5.376289,1.363867,9.029958,-9.446117,0.793409,-4.057212,-6.613812,5.363823],[7.377727,3.985834,-4.585998,1.627528,9.293367,-1.325661,0.928120,-2.722366,4.632081,-5.113062,0.366583,-4.502871],[7.087418,4.048744,6.782498,8.890896,-5.047194,-1.843221,7.029107,-4.768369,4.602080,8.720667,-1.272223,5.028276],[-2.902259,8.868735,-1.617251,-6.217617,-7.459222,3.560811,-9.213563,-7.253828,7.821087,5.757628,-6.142779,6.999866],[6.741482,5.223681,9.048649,9.195607,-0.439565,0.226473,-2.443565,1.994835,2.697114,-9.108165,9.206277,6.759150],[0.944130,6.313166,-4.840168,5.384049,-9.676560,9.111812,1.182885,6.310742,7.765055,-7.810570,-7.601428,-3.614245],[3.007144,4.870907,-5.169164,8.964615,1.485564,1.408320,-7.119524,0.594530,7.013956,-5.910897,5.071824,7.369629],[-0.648824,-7.678171,4.744176,3.315930,-2.387392,4.888462,0.850729,-0.972683,2.750325,-0.181331,9.998339,-0.357143]],[[-2.878301,4.614499,-3.135660,5.037384,9.001987,4.284516,-0.564783,7.010126,2.974475,4.299270,7.166577,-4.381956],[-7.030297,-5.813404,-9.175790,-8.605005,7.004230,3.321067,-5.625613,5.341365,-6.817296,-2.065350,9.661629,0.833241],[-2.796577,8.718628,0.289632,5.686395,-4.994372,4.215327,-9.672213,7.506633,7.531174,-5.905060,3.782780,6.026931],[-5.999149,7.251941,3.466306,8.845492,8.767354,-3.004432,-3.862289,-0.342212,0.689028,7.378054,-8.357509,-5.529815],[8.349403,5.582253,-5.371862,9.500428,0.674063,-0.393444,0.845786,-9.747254,-9.094474,2.911466,-6.594527,3.533212],[7.781012,-6.472425,9.033042,-6.719459,5.719948,-3.150979,-8.536063,-7.197859,-8.047622,4.786420,-6.188691,-6.826191],[-3.642110,2.350406,-2.479255,-0.658526,-3.600725,5.090864,8.029859,-7.425191,5.322851,-3.047352,-0.178567,9.220170],[0.540177,6.159351,3.658558,-0.579128,7.186928,-5.402778,-1.615487,-3.396918,8.055610,9.266718,8.367179,8.049365],[-2.504932,-4.901781,5.541352,2.070963,-4.344669,-7.571246,-8.524526,4.309497,0.398602,7.289361,4.591770,-0.904888],[6.993076,6.786277,6.267747,-1.168218,9.641298,4.842755,-4.684337,8.918050,2.868482,-0.973997,1.048075,4.486403]],[[-9.992277,-2.345149,-1.057464,-9.149013,-0.466504,-7.231219,4.891865,6.290351,-5.894855,3.875246,1.579995,7.974664],[-6.482676,4.963337,-1.174633,-3.560074,9.865639,-8.975746,5.138023,-9.686847,-8.468099,-2.547301,7.426962,-3.087640],[-3.934876,-0.949257,0.270861,-1.950451,-4.629096,5.360273,-0.871273,2.113293,-8.899864,-3.957626,-2.894270,-1.043975],[2.265047,-7.404964,-8.560825,-1.846457,-7.474701,2.021092,5.969215,-9.258061,4.536947,-9.071178,4.465786,0.678997],[3.141118,-3.074619,-2.439635,-9.684099,5.497426,-1.898434,-6.990382,-2.877379,-0.535445,-8.388694,9.791334,2.853769],[-4.934170,-8.482530,1.991669,9.095452,0.140525,-2.142675,-6.064202,-5.156383,-3.189843,-5.102637,5.130425,0.952422],[-6.691606,2.520839,-2.119563,-2.288668,-5.151604,3.618254,-5.797797,-1.615431,-7.238876,-9.137306,-3.406056,-5.742660],[3.469984,7.454572,8.060499,-6.442872,-9.515389,9.653709,-6.583376,9.043241,-7.813222,-7.039131,5.566524,3.895656],[-4.830321,6.281104,-2.857708,4.406757,-7.019589,-4.663792,4.315086,7.812519,1.159121,5.487552,-2.246296,-8.549486],[7.067680,9.600912,-2.831861,-9.446933,-0.270550,3.527165,7.951471,5.163739,3.276115,4.950137,-2.795566,-8.600237]],[[2.591691,-2.600102,-4.920007,-6.286627,2.761061,-8.499229,-1.294898,-2.140048,-1.076792,8.050337,-0.336035,2.395612],[1.457823,2.786502,6.745513,6.287188,2.690515,-3.930116,-5.919420,6.481404,0.615874,8.401614,-6.293887,-4.518439],[8.357549,-4.357137,-5.411820,0.647641,-6.954430,-0.102266,-9.438239,-7.216966,4.240754,0.843069,5.219242,4.958202],[2.471224,9.712795,6.144010,-3.413222,9.791909,-1.197504,9.800187,1.283049,-4.520586,7.843738,9.142167,-6.970054],[3.828594,4.500279,-4.259034,0.162883,4.848045,6.745720,-9.764560,-9.860624,-3.658382,-8.607291,-0.782060,4.278799],[3.528812,-7.492085,-2.698356,1.821353,-8.710178,9.699400,5.614099,-4.993517,9.331530,3.405391,-9.592412,1.087014],[5.320882,-8.903195,-7.312975,-7.798907,-7.099185,-8.934190,-6.150682,-9.509960,-1.840280,5.259826,-1.937414,7.568874],[-7.510179,-1.076058,-1.895161,9.951371,5.888544,4.103386,-6.942379,8.715146,-6.529892,0.113099,7.105827,-5.021688],[8.643701,4.374325,2.950058,6.004369,-8.230215,-6.495093,-2.264006,-1.056438,2.193951,1.730378,4.722802,1.971769],[-5.080717,-7.949565,-9.898726,-1.527391,2.114799,-4.201557,-0.108454,-2.833188,3.078359,3.053321,-9.486024,3.480483]],[[1.902331,8.545458,8.066402,1.201329,-4.437835,2.030699,-3.207904,-4.833290,6.709787,-6.062793,4.319177,-2.444520],[-2.369060,-3.119710,0.967243,-0.983621,-3.925247,-4.781031,-9.533624,4.902481,9.801259,-1.866533,-0.298162,5.693175],[2.221613,9.996040,-5.991441,8.798745,7.762908,-0.924738,3.861862,-3.335206,-9.353372,8.976876,-9.422482,8.056246],[7.579585,3.186202,9.614345,9.814133,-7.649145,5.986822,2.427302,2.905617,-1.367531,6.228726,8.541988,9.787658],[-4.713787,-9.411933,2.379809,5.371094,0.731220,7.178317,6.674644,7.287635,0.613546,8.209226,3.046143,-4.278278],[-8.052534,2.966927,3.230306,6.718985,4.135280,-4.359483,-5.597521,0.711686,-4.870830,-3.853376,-6.205781,3.642922],[-3.853576,-4.041707,-5.877463,4.642316,-6.824363,-4.460977,9.092896,-6.675237,1.045951,8.039813,-1.114641,-4.889932],[6.032693,-7.296961,-4.640379,-6.117774,-1.250163,0.197383,1.315471,2.196878,0.105053,5.385750,-1.652413,-8.353593],[-5.689427,2.394322,-0.483367,2.103475,-6.561725,0.492561,2.449770,1.207757,-4.415218,-9.233237,0.754884,-1.108844],[6.522321,5.025101,2.638479,-3.733053,7.477264,-8.347230,3.246861,-7.105263,3.133082,-1.521774,6.363560,6.771216]]], dtype = "float32")#candidate|3651|(8, 10, 12)|const|float32
bop_3652 = relay.less(call_3638.astype('bool'), relay.reshape(const_3651.astype('bool'), relay.shape_of(call_3638))) # shape=(8, 10, 12)
bop_3655 = relay.less(call_3639.astype('bool'), relay.reshape(const_3651.astype('bool'), relay.shape_of(call_3639))) # shape=(8, 10, 12)
output = relay.Tuple([call_3630,bop_3652,])
output2 = relay.Tuple([call_3631,bop_3655,])
func_3661 = relay.Function([], output)
mod['func_3661'] = func_3661
mod = relay.transform.InferType()(mod)
mutated_mod['func_3661'] = func_3661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3661_call = mutated_mod.get_global_var('func_3661')
call_3662 = func_3661_call()
output = call_3662
func_3663 = relay.Function([], output)
mutated_mod['func_3663'] = func_3663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2469_call = mod.get_global_var('func_2469')
func_2471_call = mutated_mod.get_global_var('func_2471')
call_3672 = relay.TupleGetItem(func_2469_call(), 2)
call_3673 = relay.TupleGetItem(func_2471_call(), 2)
output = call_3672
output2 = call_3673
func_3677 = relay.Function([], output)
mod['func_3677'] = func_3677
mod = relay.transform.InferType()(mod)
mutated_mod['func_3677'] = func_3677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3677_call = mutated_mod.get_global_var('func_3677')
call_3678 = func_3677_call()
output = call_3678
func_3679 = relay.Function([], output)
mutated_mod['func_3679'] = func_3679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_3732 = relay.TupleGetItem(func_2356_call(), 0)
call_3733 = relay.TupleGetItem(func_2358_call(), 0)
func_3333_call = mod.get_global_var('func_3333')
func_3334_call = mutated_mod.get_global_var('func_3334')
call_3734 = relay.TupleGetItem(func_3333_call(), 0)
call_3735 = relay.TupleGetItem(func_3334_call(), 0)
uop_3742 = relay.erf(call_3734.astype('float32')) # shape=(8, 10, 12)
uop_3744 = relay.erf(call_3735.astype('float32')) # shape=(8, 10, 12)
func_2649_call = mod.get_global_var('func_2649')
func_2651_call = mutated_mod.get_global_var('func_2651')
call_3751 = relay.TupleGetItem(func_2649_call(), 0)
call_3752 = relay.TupleGetItem(func_2651_call(), 0)
func_1931_call = mod.get_global_var('func_1931')
func_1934_call = mutated_mod.get_global_var('func_1934')
var_3760 = relay.var("var_3760", dtype = "int16", shape = (130, 1))#candidate|3760|(130, 1)|var|int16
const_3761 = relay.const([-8,-1,5,-7,-7,-2,7,10,-10,10,-8,-10,-7,-5,10,6,7,4,-1,-2,-3,-1,-8,4,9,-4,1,7,2,8,-8,-1,-2,-6,-7,-3,7,-1,-6,-3,-1,2,-2,9,-1,-6,-1,-3,-4,-6,-1,1,5,-3,9,6,4,3,6,-1,-10,5,6,2,7,8,7,6,-3,2,4,3,3,3,9,6,3,-9,-7,6,9,6,7,-9,-10,4,7,1,5,-9,9,4,-5,10,5,10,2,-1,7,-9,1,2,-3,7,-8,-4,2,-1,-2,10,9,-1,-5,9,-4,-8,4,-2,2,8,-6,1,10,-4,2,-10,-6,-1,-5,5,-1,-6,-3,-5,-10,9,5,3,-1,-10,2,6,-10,3,9,7,-10,-8,-3,-2,-8,-8,-10,-2,7,5,-9,1,10,-7,1,3,-8,6,6,4,-10,10,-3,-2,2,2,-10,5,7,9,7,-9,2,8,-5,3,7,5,4,10,5,-1,5,5,9,9,-7,-1,-4,-9,3,4,5,-8,7,7,10,-6,-6,-6,-6,-9,1,-2,-10,6,10,1,-9,4,-9,-1,1,-3,-8,-3,3,-7,-3,1,-7,7,7,3,-1,6,-2,-6,-4,-1,9,9,6,-8,3,4,-8,-7,3,3,-1,-1,-5,5,7,4,-1,-9,8,-8,9,-1,5,4,-2,-1,7,5,8,-3,-7,2,-1,5,-8,-10,-4,-4,1,-8,-4,-7,8,4,1,4,4,3,5,-5,-10,-10,10,-5,3,-5,2,-9,-1,8,-10,-9,8,-2,-10,8,3,-6,3,3,7,-2,-9,9,3,1,2,8,2,3,-8,-3,10,-4,-3,8,9,8,10,-8,-7,-4,1,-8,-1,-6,-3,-10,10,-5,-4,-2,-2,1,-10,-3,-1,5,-9,6,4,-1,-3,-10,-6,6,8,3,10,2,-4,-4,-1,7,-2,4,-7,10,7,-2,7,-4,-6,6,2,4,10,9,9,-3,-8,-4,9,4,-8,-8,-4,1,-1,8,3,-9,1,6,5,10,4,8,-2,1,1,-4,-4,-7,-1,10,6,-7,-7,-9,-2,-6,5,-4,-8,-8,6,4,-8,-7,-5,-3,6,7,4,-6,5,5,-9,8,3,8,9,-9,2,-5,3,-7,-9,2,10,-2,-1,-6,7,8,1,9,-10,6,6,-1,3,-8,4,-8,10,-1,8,-1,-3,-6,7,-4,-6,8,-4,-1,-7,-9,-8,7,-8,9,6,-4,-1,3,6,4,8,3,1,10,2,-10,8,-10,-8,6,-9,2,1,-9,-3,-8,-6,-4,3,-6,-5,7,8,2,6,-7,-8,-8,-6,-5,-1,9,-2,-4,-9,3,-1,-7,-8,2,-9,-3,-1,8], dtype = "int16")#candidate|3761|(520,)|const|int16
call_3759 = relay.TupleGetItem(func_1931_call(relay.reshape(var_3760.astype('int16'), [13, 10, 1]), relay.reshape(const_3761.astype('int16'), [13, 10, 4]), ), 0)
call_3762 = relay.TupleGetItem(func_1934_call(relay.reshape(var_3760.astype('int16'), [13, 10, 1]), relay.reshape(const_3761.astype('int16'), [13, 10, 4]), ), 0)
func_2617_call = mod.get_global_var('func_2617')
func_2619_call = mutated_mod.get_global_var('func_2619')
call_3767 = relay.TupleGetItem(func_2617_call(), 1)
call_3768 = relay.TupleGetItem(func_2619_call(), 1)
output = relay.Tuple([call_3732,uop_3742,call_3751,call_3759,var_3760,const_3761,call_3767,])
output2 = relay.Tuple([call_3733,uop_3744,call_3752,call_3762,var_3760,const_3761,call_3768,])
func_3812 = relay.Function([var_3760,], output)
mod['func_3812'] = func_3812
mod = relay.transform.InferType()(mod)
var_3813 = relay.var("var_3813", dtype = "int16", shape = (130, 1))#candidate|3813|(130, 1)|var|int16
output = func_3812(var_3813)
func_3814 = relay.Function([var_3813], output)
mutated_mod['func_3814'] = func_3814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2976_call = mod.get_global_var('func_2976')
func_2978_call = mutated_mod.get_global_var('func_2978')
call_3911 = relay.TupleGetItem(func_2976_call(), 0)
call_3912 = relay.TupleGetItem(func_2978_call(), 0)
func_2323_call = mod.get_global_var('func_2323')
func_2326_call = mutated_mod.get_global_var('func_2326')
const_3915 = relay.const([7.430854,6.721283,7.523033,5.779525,-7.068217,-7.423142,9.478553,-2.040326,5.076741,6.419283,6.414711,-3.228998,-1.333237,-0.432014,5.036029,-7.076721,6.734883,-3.473484,-5.371178,3.304831,-7.278172,-1.213060,-4.074930,-2.102739,-0.120650,-8.132061,2.156857,2.589886,2.960992,8.103669,-0.987554,-9.846582,-5.680649,6.273980,-1.047451,7.242907,-7.687800,-9.972594,-9.387223,6.517729,-8.219847,-6.638284,-5.002735,-2.907101,0.482455,-2.976042,6.281949,6.794395,-2.363839,3.970218,2.543642,1.815064,-8.930104,7.834652,-8.574374,6.488442,-3.196179,-2.314670,9.020555,9.313715,2.840556,8.381893,-6.954298,-4.242201,5.489599,1.471755,-8.244120,-6.546610,6.242876,2.511414,-2.201230,-1.273023,-1.834475,-6.135007,9.478865,0.597043,5.902892,-6.496932,6.255021,-9.473955,-3.307409,-2.744624,-2.270382,8.649033,-8.237990,-3.361095,9.054033,6.990386,2.442707,9.616258,7.087325,5.217906,8.511966,-1.234625,-2.997626,3.517290,9.438783,1.521838,9.552180,8.149402,4.146233,-8.202891,-0.303445,2.932672,9.965645,1.486517,8.405660,-7.530290,-5.740340,2.955031,1.023273,1.697578,-2.452171,1.615916,0.377527,8.528219,-8.374997,5.911588,-1.417655,-5.440684,6.512846,-6.738720,6.332821,-6.854098,-9.314649,-4.357317,-4.881561,-6.196430,9.034544,-8.456754,-5.149666,8.085522,-0.209417,5.555401,2.547582,-5.636647,2.102380,5.814986,4.038814,-9.158659,-8.239178,-9.172382,-0.424914,6.114513,-4.198261,-8.983336,-9.091475,8.244314,-2.001292,0.746676,-0.084287,6.568635,-3.916672,-7.344567,-3.416672,5.654768,-6.977550,1.545981,-8.842786,-3.071125,5.157452,5.303569,-0.358728,-6.751976,-5.361825,8.231560,1.517707,-8.486497,6.365024,-1.312581,-9.098127,-0.578874,5.815306,8.087784,0.755778,-6.800488,5.042342,-3.172977,-2.245674,-9.807788,-5.698464,9.024762,-1.879389,8.086687,7.282627,6.667131,-4.361265,-6.116022,-8.080210,6.849758,8.926420,-7.423073,-1.503734,-4.498053,5.813128,5.372920,-4.029095,1.076918,-4.904079,6.922553,-9.657406,3.828494,-3.822166,-4.083529,-9.419414,-4.790700,4.445190,-9.242172,7.499342,-2.058393], dtype = "float32")#candidate|3915|(210,)|const|float32
call_3914 = relay.TupleGetItem(func_2323_call(relay.reshape(const_3915.astype('float32'), [14, 1, 15])), 0)
call_3916 = relay.TupleGetItem(func_2326_call(relay.reshape(const_3915.astype('float32'), [14, 1, 15])), 0)
func_2103_call = mod.get_global_var('func_2103')
func_2107_call = mutated_mod.get_global_var('func_2107')
var_3936 = relay.var("var_3936", dtype = "int32", shape = (390,))#candidate|3936|(390,)|var|int32
var_3937 = relay.var("var_3937", dtype = "bool", shape = (6, 216))#candidate|3937|(6, 216)|var|bool
const_3938 = relay.const([-9,9,2,-7,1,-3,-2,7,-5,-3,-1,8,1,-6,-2,-8,6,6,-5,8,-4,10,-4,-5,-4,-7,-5,10,10,6,4,1,-1,9,2,2,8,4,-3,-3,5,3,-7,-5,-10,9,5,4,-10,2,8,-8,9,10,-8,8,-5,5,-5,-8,-1,9,-10,-4,5,2,9,2,1,10,7,5,3,3,-2,3,10,3,-6,-10,-10,-4,2,9,-10,-5,8,-8,-1,9,1,-1,5,-3,-9,-1,7,8,-3,-3,5,-1,-9,4,-7,-5,6,-1,8,-1,7,3,-9,-5,9,9,-5,9,-7,-4,-7,-3,3,-5,8,-5,9,-10,1,3], dtype = "int16")#candidate|3938|(130,)|const|int16
call_3935 = relay.TupleGetItem(func_2103_call(relay.reshape(var_3936.astype('int32'), [390,]), relay.reshape(var_3937.astype('bool'), [16, 9, 9]), relay.reshape(const_3938.astype('int16'), [130, 1]), ), 12)
call_3939 = relay.TupleGetItem(func_2107_call(relay.reshape(var_3936.astype('int32'), [390,]), relay.reshape(var_3937.astype('bool'), [16, 9, 9]), relay.reshape(const_3938.astype('int16'), [130, 1]), ), 12)
func_2469_call = mod.get_global_var('func_2469')
func_2471_call = mutated_mod.get_global_var('func_2471')
call_3943 = relay.TupleGetItem(func_2469_call(), 1)
call_3944 = relay.TupleGetItem(func_2471_call(), 1)
output = relay.Tuple([call_3911,call_3914,const_3915,call_3935,var_3936,var_3937,const_3938,call_3943,])
output2 = relay.Tuple([call_3912,call_3916,const_3915,call_3939,var_3936,var_3937,const_3938,call_3944,])
func_3946 = relay.Function([var_3936,var_3937,], output)
mod['func_3946'] = func_3946
mod = relay.transform.InferType()(mod)
var_3947 = relay.var("var_3947", dtype = "int32", shape = (390,))#candidate|3947|(390,)|var|int32
var_3948 = relay.var("var_3948", dtype = "bool", shape = (6, 216))#candidate|3948|(6, 216)|var|bool
output = func_3946(var_3947,var_3948,)
func_3949 = relay.Function([var_3947,var_3948,], output)
mutated_mod['func_3949'] = func_3949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2469_call = mod.get_global_var('func_2469')
func_2471_call = mutated_mod.get_global_var('func_2471')
call_3976 = relay.TupleGetItem(func_2469_call(), 0)
call_3977 = relay.TupleGetItem(func_2471_call(), 0)
const_3985 = relay.const([[[-8.544996,-9.648280,1.788254,-1.258918,2.433386,0.551092,2.660040,2.343749,-4.737968,-1.380957,-9.753931,-1.817880],[-7.122910,1.941742,9.822965,-1.962566,9.971806,3.455404,-9.134321,-5.792566,2.277287,-6.175802,4.031468,2.108024],[-9.989749,-7.593674,2.799320,2.083797,5.019222,4.440661,3.307953,-2.010288,-7.153210,3.560985,3.530284,-8.566618],[8.634135,8.890640,6.384094,1.062804,4.336929,-7.611767,-1.377995,-5.408452,8.439794,-6.235497,2.542292,9.415343],[-3.534735,5.324672,-6.296991,0.915918,-0.172694,5.013221,4.741551,5.964325,-0.128729,7.423049,-8.979051,-3.500511],[7.459479,-1.628802,0.044567,3.241166,5.789315,-7.177879,-0.213532,9.564344,-7.192533,-6.765196,4.771269,-5.827018],[-5.963208,1.681236,1.645767,-8.660731,-6.748160,-1.205859,-5.272066,-3.775025,-6.331815,-6.822245,-6.789105,8.434194],[-1.515915,-0.797681,-8.279245,1.027382,0.516226,3.026329,-3.523597,9.248290,-9.380713,-0.144424,6.945002,-2.879660],[6.684994,8.483085,2.597461,2.413631,-9.215431,0.454530,-2.088371,3.613732,5.202998,7.299453,-0.341906,2.183285],[-3.839794,-2.861962,-1.858860,0.099892,9.538226,7.581348,5.554102,-0.821774,-7.917696,-2.338530,-0.287094,-4.614039]],[[-7.161786,1.381870,2.498937,-9.536426,-5.060361,2.935574,0.335527,3.015939,5.096674,1.396941,7.503350,5.075436],[-3.392493,-7.616690,6.443361,-4.211859,-6.346198,9.315124,-4.049634,5.386435,-9.248578,8.653201,8.648613,-1.383516],[8.599908,-8.154060,3.697169,0.146602,6.970300,-1.114590,-3.636101,9.608780,-2.823382,-4.460052,-5.009586,3.085132],[1.558411,-5.392927,0.952702,1.755792,7.259690,7.462126,3.670548,-1.337664,1.497871,-6.794680,7.872097,-7.604458],[-1.472213,3.166444,9.731783,0.907266,8.400352,2.196232,-3.816718,-8.020941,-7.977400,-4.412030,-1.536696,7.122328],[1.645002,5.511634,9.590002,-4.527373,0.865540,-7.634663,-8.137111,1.522659,7.512041,7.668200,8.813580,6.326395],[3.192300,-7.974754,-1.771082,9.423579,1.116955,2.420706,4.370694,-8.825934,9.739452,5.224965,-6.525041,3.892553],[1.530174,7.124061,-4.882666,9.459533,-1.683961,1.346709,5.810708,-5.275730,-6.955386,0.350715,1.728489,-2.344460],[-6.209874,-5.512461,-3.524172,-1.568752,-7.507149,-1.860861,6.257776,9.504860,7.393924,-6.797952,0.725603,9.523083],[-2.230849,1.598926,-4.944019,-4.441863,5.327513,9.552550,3.012396,-5.228139,2.461545,-8.744438,-8.149871,-2.966594]],[[8.980851,-1.788316,9.468701,-8.293728,-2.685468,2.176203,8.083762,5.479381,9.707199,-7.992354,-3.596409,-7.842450],[6.470260,-0.210912,-0.801614,-0.564909,-4.782488,2.958840,-3.746394,5.812104,3.348837,-8.241677,7.381675,-8.103613],[-3.055486,3.751775,9.331874,4.823162,-9.199464,-3.978230,-9.034809,-3.871743,4.348197,4.909519,8.564522,-8.741993],[1.219291,7.295398,-4.271359,0.646872,-8.110089,8.369919,0.111593,3.606475,3.531318,-8.937687,-7.929935,-2.052424],[-2.519938,5.253237,-9.172065,0.963987,-8.709481,-9.373678,-7.250873,-7.406499,-5.561680,-6.815103,-6.518230,-5.824392],[5.260627,4.761495,1.870246,3.251619,2.920419,-5.805107,-5.900600,-8.673395,-1.551541,3.682592,-7.992653,-7.706962],[5.445965,-8.323483,-3.943700,1.761327,-8.272753,3.740992,-6.923914,3.945955,3.415770,-3.086776,2.964755,4.989437],[9.868751,-3.274120,-1.018535,5.692326,1.262164,7.450386,-9.836130,0.579537,0.465131,-4.555699,9.197488,-2.520494],[1.274772,-8.966714,6.034682,3.612978,-1.436506,-8.939008,-3.690275,2.816062,-2.404761,9.460478,8.097446,0.224600],[9.958298,7.961405,8.405038,8.618668,-8.406308,-0.053905,4.500025,-2.922454,2.858035,-7.387030,-6.932698,-1.450952]],[[-1.854011,8.921130,-7.649293,4.716853,5.222909,5.802689,-6.907841,9.246475,-8.594924,-5.930440,1.475055,-8.171982],[4.058329,-4.230388,-2.954411,-8.201734,-7.668556,-1.639943,-1.297906,-6.466372,-7.036145,9.384856,7.073526,5.245473],[-4.402306,1.754448,1.956804,-2.266472,1.505150,-8.332176,0.852622,-5.548993,7.745451,7.973884,-2.374396,7.744904],[5.718560,8.900109,5.403636,-5.984333,-9.385580,-0.089683,9.167441,0.137388,2.548812,-4.795336,-8.417849,4.218893],[-1.589282,-3.797187,-1.696428,7.217389,-5.038784,-7.601915,-0.948552,0.993847,5.206913,-3.077570,-4.317373,7.536320],[9.457347,8.500582,-5.365214,8.075900,4.377493,-2.607815,9.963448,3.101745,-9.537298,-5.987876,-0.187154,-3.279853],[5.238788,0.888563,-3.178161,7.043939,-4.930521,9.582577,8.055262,1.831341,-3.017468,3.100140,-7.231997,4.466211],[-2.090528,3.126178,4.170227,-8.881731,-5.073137,5.264815,-0.878102,-2.134967,9.541496,-1.450547,4.070529,3.276242],[7.265742,7.428015,9.120819,-1.999554,-2.614007,-4.302724,0.006927,-8.992278,-2.327742,-8.293937,7.548305,-4.353096],[9.845799,5.449508,-2.156188,-7.791711,1.067732,4.397620,0.197545,3.169412,3.456843,0.897259,-5.559758,-9.548776]],[[5.617213,-1.789394,-1.386894,1.952811,4.802313,-9.332604,8.221367,4.058865,-4.352354,6.299606,-3.573839,-9.183749],[7.594200,1.891670,0.537657,-7.423454,-7.122625,9.124214,9.268692,-1.812114,-7.046094,5.490384,-4.297407,-6.022164],[6.255823,-1.990221,-5.609815,-1.297763,-9.264833,-8.815845,6.060508,8.574116,0.327819,-9.304087,9.269404,7.775482],[8.846594,-6.326600,7.062903,2.828136,-4.965245,-4.385741,-1.586899,-6.586478,-2.091182,-7.570154,-8.218578,-3.692732],[0.902562,-1.535390,1.634253,-4.758336,-3.214361,-7.032867,3.495919,5.420369,5.466043,1.897460,-6.019370,4.244078],[-6.111713,-9.752209,0.264915,-7.355525,-0.428807,3.431365,-5.772685,-3.281426,-0.567331,-4.475951,-0.752700,-3.714540],[5.793722,2.080875,9.590200,0.208262,8.004180,-0.586591,-4.430766,6.170730,-3.447642,-3.851749,-3.301456,2.707417],[-0.985277,-3.145188,2.928872,-6.187909,-2.616506,-0.298159,-5.116307,4.827463,-9.959759,-3.613477,-6.251297,5.345751],[3.813786,0.891928,-0.440444,-1.688688,-5.185261,-5.984376,4.166230,8.885357,-3.099629,-2.471799,9.174298,-1.366025],[7.909023,-2.851663,-3.267219,-0.155818,5.047818,3.331917,3.579309,-6.469574,3.125085,0.949790,-8.907198,-4.957757]],[[2.418033,0.987733,4.549540,-0.015399,0.038129,-4.537110,-6.543221,2.536929,4.394334,0.638251,-5.930025,-0.160827],[-2.273305,9.617757,-4.435934,-5.067037,-4.647009,-1.603535,1.940026,-8.182514,8.192345,6.594938,-7.115147,-4.066651],[0.394791,-3.345069,7.653772,1.574977,-8.784516,-7.555325,6.973620,-9.229571,5.291966,0.489783,1.228681,4.258772],[-4.653437,-9.777218,7.216352,-3.342830,4.152722,-9.862138,-2.914280,-4.904900,-9.269365,6.211431,2.086153,8.378231],[7.160304,-0.288191,1.095200,1.333672,-5.395046,-3.074671,-8.165269,-7.127829,6.668223,4.206775,0.834424,-4.169309],[-1.454347,6.957662,-5.785758,-7.095078,0.098847,-9.330210,-8.542463,-5.998859,-9.088780,-5.307236,-1.607995,-9.792629],[-9.312337,1.893635,7.556828,5.337903,5.019086,-4.698105,-8.105863,8.258771,8.324906,-7.128283,-1.075958,-5.701233],[3.125256,2.761721,8.402439,4.688840,6.037344,2.098065,-3.430945,6.115592,8.780076,6.047695,-6.710443,8.096211],[3.010719,-3.433435,8.211198,-7.635306,7.517765,-0.092583,8.995874,-2.863231,-6.280246,9.605208,0.359429,-5.285470],[-7.226835,-8.788217,8.857369,-3.818241,8.072068,-1.566266,8.712742,8.053338,-4.718244,-6.027850,4.588571,3.110440]],[[-2.324263,-2.236897,2.006321,1.678749,5.449455,-3.248747,5.852298,9.043094,7.292294,0.364148,-8.725327,-0.731483],[-5.601360,-5.282759,1.187886,6.416117,-4.315525,8.603949,7.178714,-0.651459,-0.407279,7.105928,3.370037,-0.166394],[-6.502433,-7.352227,-3.998131,6.970227,8.136528,-4.261227,2.159310,-5.271102,-6.125619,8.685624,-0.144578,-2.164658],[8.132273,0.519397,-0.505969,9.552446,8.519303,1.129549,-2.582834,7.714994,-0.305327,6.293904,7.640746,8.745798],[7.483344,9.534687,-6.646797,2.541101,5.789336,5.896694,-3.415120,-4.658057,-8.713160,-3.863776,3.927531,-9.903441],[8.132098,4.785394,9.714821,-8.556990,-7.557226,1.816036,5.539247,-2.396747,7.629219,-0.343790,-0.289683,0.707651],[-1.485966,-8.977164,7.307517,1.203659,-4.800317,-5.749378,-6.602597,-1.797244,-6.501570,9.066658,-7.924307,6.594444],[0.668851,-4.835613,-6.145492,-6.118628,7.242200,-8.607133,7.440387,9.884548,3.203923,-9.110284,2.308289,-2.669094],[-7.181930,3.650891,7.460482,-3.256377,8.954080,-6.036357,-8.775439,-0.423647,2.985772,7.956290,3.992932,-6.544225],[-4.485760,-5.354413,-6.651235,7.942085,-7.536939,5.427112,3.959682,5.330164,-8.190469,6.497270,-7.580872,-1.287720]],[[-0.284946,3.239348,4.606252,-9.382297,-1.872964,6.839067,0.504812,5.729183,3.717103,3.974428,-7.155801,7.876804],[5.003302,0.570214,0.350154,6.359826,0.399876,4.055108,8.641300,-5.964707,-9.282903,-7.046534,0.624838,9.477550],[-8.370474,7.035169,4.372126,-2.775420,9.070671,7.570862,8.343690,7.834268,3.574526,4.247964,-7.978648,-8.807836],[7.037767,5.360343,-0.667262,-0.070445,0.926548,9.319136,-3.222135,6.124653,5.383188,-9.800477,-9.065401,-7.454037],[-3.775881,-0.327035,1.797451,5.571081,7.851791,8.632520,-6.893650,-9.340278,-7.660708,-0.335610,2.207946,-5.511985],[-5.343178,-8.109067,-1.887149,-7.132875,-3.472931,-4.011761,2.475028,5.561424,-6.707436,-2.617404,-3.248767,-2.363673],[-5.667654,5.934744,5.935638,6.871750,5.943997,-1.530793,-1.692146,-8.244053,0.671722,-5.211410,8.838720,0.660370],[1.099532,-7.067181,-5.656966,-6.990116,7.469241,8.056775,1.441096,7.358957,-9.243336,6.674027,-4.224336,0.333733],[-2.902971,6.784781,7.303226,4.131529,-3.228274,-5.515882,-2.442512,-8.509112,8.894151,-4.218691,-3.575904,9.130414],[8.681276,2.187522,-6.995917,5.043776,-3.540663,-8.862014,7.794739,-7.348018,7.537489,6.187908,0.281090,-9.314105]]], dtype = "float32")#candidate|3985|(8, 10, 12)|const|float32
bop_3986 = relay.left_shift(call_3976.astype('uint32'), relay.reshape(const_3985.astype('uint32'), relay.shape_of(call_3976))) # shape=(8, 10, 12)
bop_3989 = relay.left_shift(call_3977.astype('uint32'), relay.reshape(const_3985.astype('uint32'), relay.shape_of(call_3977))) # shape=(8, 10, 12)
output = relay.Tuple([bop_3986,])
output2 = relay.Tuple([bop_3989,])
func_3990 = relay.Function([], output)
mod['func_3990'] = func_3990
mod = relay.transform.InferType()(mod)
output = func_3990()
func_3991 = relay.Function([], output)
mutated_mod['func_3991'] = func_3991
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4064 = relay.var("var_4064", dtype = "float32", shape = (2, 16, 13))#candidate|4064|(2, 16, 13)|var|float32
var_4065 = relay.var("var_4065", dtype = "float32", shape = (2, 16, 13))#candidate|4065|(2, 16, 13)|var|float32
bop_4066 = relay.subtract(var_4064.astype('float32'), relay.reshape(var_4065.astype('float32'), relay.shape_of(var_4064))) # shape=(2, 16, 13)
output = bop_4066
output2 = bop_4066
func_4082 = relay.Function([var_4064,var_4065,], output)
mod['func_4082'] = func_4082
mod = relay.transform.InferType()(mod)
var_4083 = relay.var("var_4083", dtype = "float32", shape = (2, 16, 13))#candidate|4083|(2, 16, 13)|var|float32
var_4084 = relay.var("var_4084", dtype = "float32", shape = (2, 16, 13))#candidate|4084|(2, 16, 13)|var|float32
output = func_4082(var_4083,var_4084,)
func_4085 = relay.Function([var_4083,var_4084,], output)
mutated_mod['func_4085'] = func_4085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mod.get_global_var('func_2874')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_4097 = relay.TupleGetItem(func_2874_call(), 0)
call_4098 = relay.TupleGetItem(func_2876_call(), 0)
output = call_4097
output2 = call_4098
func_4100 = relay.Function([], output)
mod['func_4100'] = func_4100
mod = relay.transform.InferType()(mod)
mutated_mod['func_4100'] = func_4100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4100_call = mutated_mod.get_global_var('func_4100')
call_4101 = func_4100_call()
output = call_4101
func_4102 = relay.Function([], output)
mutated_mod['func_4102'] = func_4102
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4135 = relay.const([[[-9,10,1,3,9],[-6,7,-7,5,2],[-9,-9,-6,-3,-6],[-5,-9,5,4,-2],[3,10,-10,-7,-7],[4,-4,2,9,-9],[8,-9,2,-9,-1]],[[9,-10,4,-6,-6],[7,-8,2,-3,9],[-5,-9,-6,-10,5],[-5,-5,-5,-5,-7],[-5,-9,-7,5,2],[-3,1,-5,3,1],[7,4,8,-9,2]],[[4,-4,2,-5,-3],[-1,8,-10,-8,-8],[-3,-4,5,8,-5],[-3,10,3,1,9],[7,-4,-3,-5,9],[9,-6,-9,-4,-8],[9,-9,1,3,2]],[[-9,3,1,10,-6],[-9,3,9,-10,-10],[6,-2,-10,-9,-8],[-4,-7,2,2,3],[-3,4,-10,9,-8],[8,10,-8,-6,3],[7,3,-6,-1,-9]],[[6,-9,-9,7,-8],[-6,-8,-10,-7,5],[-10,-7,8,10,-10],[6,-2,-10,5,-8],[2,-1,10,-1,10],[5,10,-5,-5,-8],[3,-3,-10,-5,-2]],[[-9,-6,-7,4,5],[3,5,4,-2,2],[-4,-7,-9,1,3],[6,-8,-4,1,2],[-1,-6,10,6,-8],[3,3,-10,6,-6],[-7,-1,-5,1,-3]],[[1,-9,2,-10,-1],[-7,2,-4,-2,-6],[-1,1,9,7,3],[4,-5,5,-4,6],[-1,10,2,-8,4],[3,8,-7,1,10],[7,-9,8,-2,7]],[[8,10,3,-9,6],[-4,9,4,-10,2],[-8,5,3,-1,6],[10,8,-9,2,2],[3,7,-10,10,6],[2,-2,3,-10,8],[-4,7,10,1,-6]],[[-10,-8,3,-7,-10],[6,1,6,-3,2],[-2,2,6,-7,-4],[9,4,-2,-5,-1],[-6,-6,-6,2,-1],[-1,-9,-10,6,2],[-2,5,-10,2,-6]],[[2,-9,10,1,5],[6,-4,-2,2,4],[8,-6,-10,2,2],[5,1,-2,-3,2],[-6,-5,-5,-5,-5],[-2,-2,7,-3,-6],[-6,-8,-8,7,3]],[[9,-8,-10,-3,10],[3,-2,10,-9,-10],[-7,7,-5,-4,-6],[2,6,2,-2,10],[-3,-6,8,-6,-9],[1,3,9,-4,-10],[2,6,1,6,2]],[[-7,-9,-10,9,3],[10,-3,-5,-1,-5],[-7,-1,7,-10,-7],[-8,-7,-9,3,1],[-7,-3,4,-3,5],[3,7,7,-8,-6],[1,-9,-9,3,8]],[[8,-7,-4,-9,5],[4,-7,6,4,3],[8,2,-10,8,2],[1,9,-3,8,-9],[5,3,-4,-6,-4],[6,2,-1,-10,-10],[-5,2,-7,-9,6]],[[-10,-3,3,-3,-8],[9,-8,4,7,-10],[-6,-8,-1,5,1],[-1,-4,-5,4,7],[4,-5,-9,4,3],[-5,-1,7,-9,5],[4,3,10,5,6]],[[3,-8,-4,7,4],[-2,-9,1,6,-8],[10,-4,-10,-2,8],[6,10,10,-2,-2],[9,5,-8,1,4],[4,1,-10,-4,-7],[10,4,9,4,4]]], dtype = "uint16")#candidate|4135|(15, 7, 5)|const|uint16
var_4136 = relay.var("var_4136", dtype = "uint16", shape = (15, 7, 5))#candidate|4136|(15, 7, 5)|var|uint16
bop_4137 = relay.greater_equal(const_4135.astype('bool'), relay.reshape(var_4136.astype('bool'), relay.shape_of(const_4135))) # shape=(15, 7, 5)
uop_4143 = relay.log(const_4135.astype('float64')) # shape=(15, 7, 5)
func_4100_call = mod.get_global_var('func_4100')
func_4102_call = mutated_mod.get_global_var('func_4102')
call_4147 = func_4100_call()
call_4148 = func_4100_call()
bop_4158 = relay.bitwise_or(bop_4137.astype('int16'), relay.reshape(var_4136.astype('int16'), relay.shape_of(bop_4137))) # shape=(15, 7, 5)
func_1167_call = mod.get_global_var('func_1167')
func_1169_call = mutated_mod.get_global_var('func_1169')
var_4192 = relay.var("var_4192", dtype = "float64", shape = (1008,))#candidate|4192|(1008,)|var|float64
call_4191 = relay.TupleGetItem(func_1167_call(relay.reshape(var_4192.astype('float64'), [14, 8, 9])), 0)
call_4193 = relay.TupleGetItem(func_1169_call(relay.reshape(var_4192.astype('float64'), [14, 8, 9])), 0)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_4196 = func_2013_call()
call_4197 = func_2013_call()
output = relay.Tuple([uop_4143,call_4147,bop_4158,call_4191,var_4192,call_4196,])
output2 = relay.Tuple([uop_4143,call_4148,bop_4158,call_4193,var_4192,call_4197,])
func_4209 = relay.Function([var_4136,var_4192,], output)
mod['func_4209'] = func_4209
mod = relay.transform.InferType()(mod)
mutated_mod['func_4209'] = func_4209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4209_call = mutated_mod.get_global_var('func_4209')
var_4211 = relay.var("var_4211", dtype = "uint16", shape = (15, 7, 5))#candidate|4211|(15, 7, 5)|var|uint16
var_4212 = relay.var("var_4212", dtype = "float64", shape = (1008,))#candidate|4212|(1008,)|var|float64
call_4210 = func_4209_call(var_4211,var_4212,)
output = call_4210
func_4213 = relay.Function([var_4211,var_4212,], output)
mutated_mod['func_4213'] = func_4213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3559_call = mod.get_global_var('func_3559')
func_3561_call = mutated_mod.get_global_var('func_3561')
call_4234 = relay.TupleGetItem(func_3559_call(), 0)
call_4235 = relay.TupleGetItem(func_3561_call(), 0)
output = call_4234
output2 = call_4235
func_4240 = relay.Function([], output)
mod['func_4240'] = func_4240
mod = relay.transform.InferType()(mod)
output = func_4240()
func_4241 = relay.Function([], output)
mutated_mod['func_4241'] = func_4241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1940_call = mod.get_global_var('func_1940')
func_1942_call = mutated_mod.get_global_var('func_1942')
call_4328 = func_1940_call()
call_4329 = func_1940_call()
uop_4333 = relay.rsqrt(call_4328.astype('float64')) # shape=(8, 10, 12)
uop_4335 = relay.rsqrt(call_4329.astype('float64')) # shape=(8, 10, 12)
func_2649_call = mod.get_global_var('func_2649')
func_2651_call = mutated_mod.get_global_var('func_2651')
call_4353 = relay.TupleGetItem(func_2649_call(), 0)
call_4354 = relay.TupleGetItem(func_2651_call(), 0)
func_3571_call = mod.get_global_var('func_3571')
func_3572_call = mutated_mod.get_global_var('func_3572')
call_4357 = func_3571_call()
call_4358 = func_3571_call()
func_3812_call = mod.get_global_var('func_3812')
func_3814_call = mutated_mod.get_global_var('func_3814')
const_4363 = relay.const([-2,5,-5,4,-9,4,-8,6,6,1,-4,7,-3,-3,9,-9,2,-4,-5,6,1,-8,7,-8,-3,2,-8,-9,8,-1,3,-10,5,6,4,-4,10,-3,7,-3,-2,10,-1,-4,-1,8,4,1,-3,7,-8,4,2,6,-9,-10,1,-3,-10,-3,-2,9,10,3,-6,3,-3,4,2,-5,-9,4,-6,4,5,-1,10,-5,9,-4,-10,10,3,9,4,-8,10,2,-2,3,6,6,-3,8,9,-6,-10,2,-10,1,-6,6,-5,-3,-9,-6,-2,2,-3,7,4,-3,-2,10,-8,8,1,10,-4,-3,-1,9,9,-9,4,6,-9,-4,6,5], dtype = "int16")#candidate|4363|(130,)|const|int16
call_4362 = relay.TupleGetItem(func_3812_call(relay.reshape(const_4363.astype('int16'), [130, 1])), 4)
call_4364 = relay.TupleGetItem(func_3814_call(relay.reshape(const_4363.astype('int16'), [130, 1])), 4)
func_1552_call = mod.get_global_var('func_1552')
func_1555_call = mutated_mod.get_global_var('func_1555')
call_4371 = relay.TupleGetItem(func_1552_call(relay.reshape(uop_4333.astype('float32'), [10, 16, 6])), 0)
call_4372 = relay.TupleGetItem(func_1555_call(relay.reshape(uop_4333.astype('float32'), [10, 16, 6])), 0)
output = relay.Tuple([uop_4333,call_4353,call_4357,call_4362,const_4363,call_4371,])
output2 = relay.Tuple([uop_4335,call_4354,call_4358,call_4364,const_4363,call_4372,])
func_4384 = relay.Function([], output)
mod['func_4384'] = func_4384
mod = relay.transform.InferType()(mod)
mutated_mod['func_4384'] = func_4384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4384_call = mutated_mod.get_global_var('func_4384')
call_4385 = func_4384_call()
output = call_4385
func_4386 = relay.Function([], output)
mutated_mod['func_4386'] = func_4386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2617_call = mod.get_global_var('func_2617')
func_2619_call = mutated_mod.get_global_var('func_2619')
call_4396 = relay.TupleGetItem(func_2617_call(), 0)
call_4397 = relay.TupleGetItem(func_2619_call(), 0)
uop_4410 = relay.acos(call_4396.astype('float32')) # shape=(8, 10, 12)
uop_4412 = relay.acos(call_4397.astype('float32')) # shape=(8, 10, 12)
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_4420 = relay.TupleGetItem(func_2289_call(), 2)
call_4421 = relay.TupleGetItem(func_2290_call(), 2)
output = relay.Tuple([uop_4410,call_4420,])
output2 = relay.Tuple([uop_4412,call_4421,])
func_4422 = relay.Function([], output)
mod['func_4422'] = func_4422
mod = relay.transform.InferType()(mod)
mutated_mod['func_4422'] = func_4422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4422_call = mutated_mod.get_global_var('func_4422')
call_4423 = func_4422_call()
output = call_4423
func_4424 = relay.Function([], output)
mutated_mod['func_4424'] = func_4424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2976_call = mod.get_global_var('func_2976')
func_2978_call = mutated_mod.get_global_var('func_2978')
call_4442 = relay.TupleGetItem(func_2976_call(), 0)
call_4443 = relay.TupleGetItem(func_2978_call(), 0)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_4473 = relay.TupleGetItem(func_2356_call(), 0)
call_4474 = relay.TupleGetItem(func_2358_call(), 0)
output = relay.Tuple([call_4442,call_4473,])
output2 = relay.Tuple([call_4443,call_4474,])
func_4486 = relay.Function([], output)
mod['func_4486'] = func_4486
mod = relay.transform.InferType()(mod)
mutated_mod['func_4486'] = func_4486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4486_call = mutated_mod.get_global_var('func_4486')
call_4487 = func_4486_call()
output = call_4487
func_4488 = relay.Function([], output)
mutated_mod['func_4488'] = func_4488
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4492 = relay.var("var_4492", dtype = "uint64", shape = (10, 9, 4))#candidate|4492|(10, 9, 4)|var|uint64
var_4493 = relay.var("var_4493", dtype = "uint64", shape = (10, 9, 4))#candidate|4493|(10, 9, 4)|var|uint64
bop_4494 = relay.less(var_4492.astype('bool'), relay.reshape(var_4493.astype('bool'), relay.shape_of(var_4492))) # shape=(10, 9, 4)
output = bop_4494
output2 = bop_4494
func_4499 = relay.Function([var_4492,var_4493,], output)
mod['func_4499'] = func_4499
mod = relay.transform.InferType()(mod)
mutated_mod['func_4499'] = func_4499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4499_call = mutated_mod.get_global_var('func_4499')
var_4501 = relay.var("var_4501", dtype = "uint64", shape = (10, 9, 4))#candidate|4501|(10, 9, 4)|var|uint64
var_4502 = relay.var("var_4502", dtype = "uint64", shape = (10, 9, 4))#candidate|4502|(10, 9, 4)|var|uint64
call_4500 = func_4499_call(var_4501,var_4502,)
output = call_4500
func_4503 = relay.Function([var_4501,var_4502,], output)
mutated_mod['func_4503'] = func_4503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3990_call = mod.get_global_var('func_3990')
func_3991_call = mutated_mod.get_global_var('func_3991')
call_4516 = relay.TupleGetItem(func_3990_call(), 0)
call_4517 = relay.TupleGetItem(func_3991_call(), 0)
func_3473_call = mod.get_global_var('func_3473')
func_3475_call = mutated_mod.get_global_var('func_3475')
call_4518 = relay.TupleGetItem(func_3473_call(relay.reshape(call_4516.astype('float32'), [8, 10, 12])), 1)
call_4519 = relay.TupleGetItem(func_3475_call(relay.reshape(call_4516.astype('float32'), [8, 10, 12])), 1)
bop_4543 = relay.greater(call_4518.astype('bool'), relay.reshape(call_4516.astype('bool'), relay.shape_of(call_4518))) # shape=(8, 10, 12)
bop_4546 = relay.greater(call_4519.astype('bool'), relay.reshape(call_4517.astype('bool'), relay.shape_of(call_4519))) # shape=(8, 10, 12)
var_4547 = relay.var("var_4547", dtype = "bool", shape = (8, 10, 12))#candidate|4547|(8, 10, 12)|var|bool
bop_4548 = relay.bitwise_and(call_4518.astype('int16'), relay.reshape(var_4547.astype('int16'), relay.shape_of(call_4518))) # shape=(8, 10, 12)
bop_4551 = relay.bitwise_and(call_4519.astype('int16'), relay.reshape(var_4547.astype('int16'), relay.shape_of(call_4519))) # shape=(8, 10, 12)
output = relay.Tuple([bop_4543,bop_4548,])
output2 = relay.Tuple([bop_4546,bop_4551,])
func_4556 = relay.Function([var_4547,], output)
mod['func_4556'] = func_4556
mod = relay.transform.InferType()(mod)
var_4557 = relay.var("var_4557", dtype = "bool", shape = (8, 10, 12))#candidate|4557|(8, 10, 12)|var|bool
output = func_4556(var_4557)
func_4558 = relay.Function([var_4557], output)
mutated_mod['func_4558'] = func_4558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3571_call = mod.get_global_var('func_3571')
func_3572_call = mutated_mod.get_global_var('func_3572')
call_4590 = func_3571_call()
call_4591 = func_3571_call()
output = relay.Tuple([call_4590,])
output2 = relay.Tuple([call_4591,])
func_4613 = relay.Function([], output)
mod['func_4613'] = func_4613
mod = relay.transform.InferType()(mod)
output = func_4613()
func_4614 = relay.Function([], output)
mutated_mod['func_4614'] = func_4614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4422_call = mod.get_global_var('func_4422')
func_4424_call = mutated_mod.get_global_var('func_4424')
call_4662 = relay.TupleGetItem(func_4422_call(), 1)
call_4663 = relay.TupleGetItem(func_4424_call(), 1)
func_2874_call = mod.get_global_var('func_2874')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_4674 = relay.TupleGetItem(func_2874_call(), 0)
call_4675 = relay.TupleGetItem(func_2876_call(), 0)
func_2804_call = mod.get_global_var('func_2804')
func_2807_call = mutated_mod.get_global_var('func_2807')
const_4677 = relay.const([-8,-2,1,3,9,3,-10,8,-2,4,-4,-1,-1,-6,-3,-2,-7,2,-6,-9,-10,-2,3,-10,7,-7,2,-3,-4,-1,5,-8,10,4,4,-10,8,-7,-4,-5,3,-9,2,10,-2,-3,-6,1,10,9,-9,-8,-3,-9,4,-7,6,1,-9,-3,4,9,-6,4,-8,-8,6,-5,3,-7,5,-3,1,10,5,-4,-7,8,5,-9,-7,-9,5,1,7,-4,-1,5,10,-5,-7,5,3,-9,-5,1,-5,4,-6,7,-4,-8,-7,8,-8,-6,1,-3,7,5,2,6,8,-7,-7,-10,5,-6,2,-4,7,7,3,6,-4,2,7,-3,-7,9], dtype = "int16")#candidate|4677|(130,)|const|int16
call_4676 = relay.TupleGetItem(func_2804_call(relay.reshape(const_4677.astype('int16'), [130,])), 6)
call_4678 = relay.TupleGetItem(func_2807_call(relay.reshape(const_4677.astype('int16'), [130,])), 6)
uop_4680 = relay.erf(call_4674.astype('float32')) # shape=(14, 1, 15)
uop_4682 = relay.erf(call_4675.astype('float32')) # shape=(14, 1, 15)
output = relay.Tuple([call_4662,call_4676,const_4677,uop_4680,])
output2 = relay.Tuple([call_4663,call_4678,const_4677,uop_4682,])
func_4693 = relay.Function([], output)
mod['func_4693'] = func_4693
mod = relay.transform.InferType()(mod)
mutated_mod['func_4693'] = func_4693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4693_call = mutated_mod.get_global_var('func_4693')
call_4694 = func_4693_call()
output = call_4694
func_4695 = relay.Function([], output)
mutated_mod['func_4695'] = func_4695
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4710 = relay.var("var_4710", dtype = "float32", shape = (14, 5, 16))#candidate|4710|(14, 5, 16)|var|float32
uop_4711 = relay.sqrt(var_4710.astype('float32')) # shape=(14, 5, 16)
uop_4713 = relay.exp(uop_4711.astype('float64')) # shape=(14, 5, 16)
output = uop_4713
output2 = uop_4713
func_4723 = relay.Function([var_4710,], output)
mod['func_4723'] = func_4723
mod = relay.transform.InferType()(mod)
mutated_mod['func_4723'] = func_4723
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4724 = relay.var("var_4724", dtype = "float32", shape = (14, 5, 16))#candidate|4724|(14, 5, 16)|var|float32
func_4723_call = mutated_mod.get_global_var('func_4723')
call_4725 = func_4723_call(var_4724)
output = call_4725
func_4726 = relay.Function([var_4724], output)
mutated_mod['func_4726'] = func_4726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4746 = relay.var("var_4746", dtype = "uint64", shape = (14, 2, 15))#candidate|4746|(14, 2, 15)|var|uint64
var_4747 = relay.var("var_4747", dtype = "uint64", shape = (14, 2, 15))#candidate|4747|(14, 2, 15)|var|uint64
bop_4748 = relay.bitwise_and(var_4746.astype('uint64'), relay.reshape(var_4747.astype('uint64'), relay.shape_of(var_4746))) # shape=(14, 2, 15)
bop_4752 = relay.not_equal(var_4747.astype('bool'), relay.reshape(var_4746.astype('bool'), relay.shape_of(var_4747))) # shape=(14, 2, 15)
output = relay.Tuple([bop_4748,bop_4752,])
output2 = relay.Tuple([bop_4748,bop_4752,])
func_4763 = relay.Function([var_4746,var_4747,], output)
mod['func_4763'] = func_4763
mod = relay.transform.InferType()(mod)
mutated_mod['func_4763'] = func_4763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4763_call = mutated_mod.get_global_var('func_4763')
var_4765 = relay.var("var_4765", dtype = "uint64", shape = (14, 2, 15))#candidate|4765|(14, 2, 15)|var|uint64
var_4766 = relay.var("var_4766", dtype = "uint64", shape = (14, 2, 15))#candidate|4766|(14, 2, 15)|var|uint64
call_4764 = func_4763_call(var_4765,var_4766,)
output = call_4764
func_4767 = relay.Function([var_4765,var_4766,], output)
mutated_mod['func_4767'] = func_4767
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4801 = relay.const([[[-8.733282,2.885295,-8.289903,-6.211169,6.735124,-9.129323,-4.465806,-1.924081],[-4.619232,1.024572,3.474612,4.345541,6.224567,5.493589,5.958043,2.422937],[0.646327,-1.794062,-9.339661,2.229663,-2.823735,-7.978877,-1.879821,-4.095085],[-0.389995,-4.448063,2.838184,6.913395,7.166299,-8.091443,-0.410622,-7.488095],[-2.098215,5.174111,0.692850,-7.944197,8.391071,6.279499,0.656027,-3.132644],[7.437577,2.467442,-5.431788,0.196140,7.865426,-5.861854,-7.718885,9.618043],[1.296583,2.464102,-0.779624,-6.130844,-9.872676,1.996805,7.488078,-0.526829],[-8.477103,-1.719638,-1.141469,4.497326,3.829660,5.153828,-6.225328,3.210828]],[[-7.904906,1.218404,-6.117956,-6.755053,1.818006,0.797149,7.166317,1.562275],[2.157284,7.945604,-8.060027,-1.685190,-9.424535,9.142741,-1.107933,5.575278],[1.087590,3.753710,-9.726865,3.753032,1.403416,3.103155,-4.693535,5.866023],[-4.557819,3.404633,5.825984,-8.666373,-0.198308,-5.719577,-0.522775,0.793457],[-9.147487,-5.783800,-9.836715,-2.004024,-1.259315,-7.353518,4.518715,-3.776852],[-0.315825,-6.961667,1.828941,-3.281295,-0.149007,1.156562,-7.749139,-6.957562],[1.310109,4.568154,-0.099839,-8.344571,3.541783,9.371452,-7.094652,-7.088792],[-2.529883,-3.881967,-0.301241,4.151329,2.020736,2.580280,0.272405,2.051079]],[[-3.019259,-2.078853,-3.192183,4.263086,7.929783,-6.573725,9.492282,4.141069],[9.097249,3.670612,-0.855969,-0.432632,3.429475,6.018134,-9.491014,-5.268493],[6.108762,0.904618,0.664381,-6.639807,-8.148203,-5.243265,8.448072,7.026708],[9.114939,-3.426160,3.639422,5.943095,5.211478,7.472131,8.645877,-3.902203],[-3.186011,4.271226,5.250535,-5.745082,-7.607765,2.577647,-3.077147,8.870899],[1.422753,6.721865,-0.410488,-9.924297,9.099221,1.000121,1.694193,-7.433815],[-2.198998,7.872624,8.883781,5.112339,-8.902188,3.943538,9.408749,-3.023553],[2.594268,4.400370,-3.672167,2.426062,3.514269,9.915306,-4.141000,-9.709576]],[[0.961749,-6.014950,5.943267,-5.020400,-5.088592,8.695157,-0.893719,5.296144],[6.530073,-7.985661,-2.555521,-3.915602,-4.522895,-7.205550,7.222583,2.282781],[-3.403800,4.042437,9.575152,4.462456,1.214000,4.703258,-8.299958,7.817779],[6.761777,0.667822,6.184510,5.091121,8.071004,7.457816,-3.185508,3.510087],[-6.968239,0.287540,5.221058,-9.747983,8.009146,-4.477652,-1.470947,6.606515],[2.160684,1.084187,-2.996934,3.619467,-9.669122,-5.227373,1.943449,5.381330],[-7.474360,-7.614594,7.597069,4.841411,-6.685532,-8.410656,0.217442,9.049163],[-2.256472,-6.372688,1.013744,7.440680,-4.951220,8.737208,1.771924,3.902964]],[[7.012617,7.450667,-6.521464,1.428254,0.936369,5.462749,9.947732,8.590342],[4.585303,5.547320,1.115919,-4.870429,-6.514389,-3.208617,-9.639870,-7.108734],[9.224175,-3.827395,-2.418960,-1.742877,3.003324,-6.646061,-7.529862,2.994675],[9.198121,2.673120,8.159492,-5.016326,7.512349,1.159035,5.841220,5.720449],[-0.297344,-2.651903,0.250693,-2.159401,7.959608,3.444809,-8.829299,1.452723],[7.484892,2.209821,0.587349,0.040384,-5.490683,-4.673272,-5.164023,-3.714726],[-1.906702,2.422464,7.216534,-1.072205,-5.789184,6.255549,-5.363330,9.982076],[2.465486,-8.652741,-8.245568,4.685203,4.164447,-0.709371,7.638010,-8.800295]],[[-5.530474,7.085369,3.211441,-7.057327,1.420964,-4.164759,-1.175008,-7.672248],[-7.011898,-5.455114,-4.558285,9.849774,-9.731169,9.061490,-8.987140,2.680211],[0.752720,1.450440,-6.312628,-4.730557,0.146167,-1.095155,-2.323096,1.211426],[7.723086,-0.992079,2.073424,9.610737,0.290593,0.680863,-0.984700,-3.366844],[8.461974,-8.160367,7.362757,7.262173,-0.706819,1.482128,-6.396503,4.906943],[-0.556446,2.542561,-9.930414,1.213075,8.501718,0.551529,7.875374,9.948203],[6.703442,4.333376,0.455599,3.848809,-2.448790,-1.260069,6.634798,-6.469645],[0.501695,5.102939,6.327316,-1.999535,7.187439,-0.205862,9.522973,5.362356]],[[-2.284802,-4.068723,-8.785677,8.436434,-3.533742,1.500749,8.408997,6.249634],[-9.058774,-3.242479,-6.770344,-5.696454,5.983813,-5.940989,2.174447,2.192431],[-7.228695,7.408487,-3.469782,9.312035,-9.637630,-2.661170,3.501611,0.653989],[1.284833,3.942514,-0.223139,0.287887,-1.616128,-1.942239,-6.126768,0.667502],[7.214583,8.743418,8.768472,-4.498166,9.972427,-1.786995,9.193607,-7.706162],[2.553768,-3.028100,-2.410907,3.752561,0.953868,-4.739178,-7.279796,0.324819],[-0.244716,0.366723,3.412622,9.836061,-7.163533,4.041780,6.447536,-4.461789],[3.101681,-3.589168,8.283098,2.153222,-9.164052,-5.541217,2.364391,-6.386914]],[[-3.180020,-9.764771,-1.146897,-9.672758,7.043085,-5.166578,-9.049267,4.179521],[8.654661,8.121699,-0.283201,2.696741,-6.809781,8.179629,6.065783,3.757942],[7.272535,-8.706557,8.550336,-2.392054,-5.598003,-5.568864,-9.481736,0.350782],[8.162577,-5.656517,1.018932,-6.165573,5.308114,3.256748,-7.681575,-7.147814],[-4.849729,7.035319,5.719393,-5.680376,-7.942762,-4.221746,3.643126,-1.646093],[-2.530013,-5.501914,-2.942557,3.757018,-2.334139,5.183916,0.968841,-2.498226],[-4.156468,-8.607706,6.855939,0.480058,8.211643,-8.336745,4.946905,6.218012],[7.357454,9.979577,9.411230,0.640652,-2.845092,-3.379942,-4.651079,0.922739]],[[-9.757554,4.063841,2.830264,2.488902,-4.338303,6.652328,-3.713666,-0.727101],[-2.040922,0.049962,-3.676442,1.899337,0.092633,8.603344,-6.721566,-9.234422],[-6.488798,-9.114628,7.088737,-2.549357,-1.899501,5.231461,-0.051892,-0.100388],[-3.025721,-5.617081,3.501491,2.046923,4.678020,-5.031486,0.856024,-6.808572],[-1.777989,3.098477,-0.469495,-4.582818,4.443662,2.811928,3.216900,-3.539209],[-7.515573,-0.868120,-8.558836,-8.113088,-7.414997,6.328172,-1.477191,9.363545],[8.435244,-7.820112,-5.706496,-8.999231,-3.347851,-5.912661,3.049938,9.204005],[7.320960,2.280673,7.370374,-6.657466,9.048343,-1.989668,1.398453,-8.057429]],[[-8.075344,7.668531,3.597730,4.353149,5.191409,9.934607,-3.807387,-2.742186],[3.153564,-6.436088,-0.911119,-3.127298,-4.845352,4.512205,0.688476,-0.535462],[-7.148604,-0.144560,9.691177,3.860733,5.819832,-1.809016,-9.201207,-5.300217],[-9.415851,-7.068431,7.479691,-4.713889,2.497073,7.497506,-8.638503,1.822693],[0.180894,-4.535308,6.246510,-7.273552,6.660464,-7.096097,8.376196,6.044617],[1.062693,-2.579922,-8.139913,5.001970,-8.834199,-9.194194,-6.965587,7.366418],[-4.387184,4.572757,-8.329237,-3.909284,-9.577542,2.275908,2.170770,9.620798],[-8.991090,1.156700,7.954746,1.442450,-7.543966,-4.699699,9.961836,-0.599378]]], dtype = "float64")#candidate|4801|(10, 8, 8)|const|float64
uop_4802 = relay.cosh(const_4801.astype('float64')) # shape=(10, 8, 8)
output = relay.Tuple([uop_4802,])
output2 = relay.Tuple([uop_4802,])
func_4815 = relay.Function([], output)
mod['func_4815'] = func_4815
mod = relay.transform.InferType()(mod)
output = func_4815()
func_4816 = relay.Function([], output)
mutated_mod['func_4816'] = func_4816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4815_call = mod.get_global_var('func_4815')
func_4816_call = mutated_mod.get_global_var('func_4816')
call_4830 = relay.TupleGetItem(func_4815_call(), 0)
call_4831 = relay.TupleGetItem(func_4816_call(), 0)
output = call_4830
output2 = call_4831
func_4841 = relay.Function([], output)
mod['func_4841'] = func_4841
mod = relay.transform.InferType()(mod)
mutated_mod['func_4841'] = func_4841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4841_call = mutated_mod.get_global_var('func_4841')
call_4842 = func_4841_call()
output = call_4842
func_4843 = relay.Function([], output)
mutated_mod['func_4843'] = func_4843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_4887 = relay.TupleGetItem(func_2356_call(), 0)
call_4888 = relay.TupleGetItem(func_2358_call(), 0)
func_2323_call = mod.get_global_var('func_2323')
func_2326_call = mutated_mod.get_global_var('func_2326')
const_4890 = relay.const([5.178574,4.798708,-3.161382,1.279806,7.113779,1.733287,-4.326774,9.903517,0.345980,-2.896757,-9.315500,-3.526971,9.919147,-0.217106,5.797763,8.099158,-4.980338,-0.925327,2.177978,-3.061836,-5.387266,3.822477,-3.148283,1.248933,4.438318,-1.683824,3.301592,-9.436578,3.154820,9.244643,-8.209477,4.796786,-2.293390,2.873664,1.295772,-0.797214,-4.444571,-2.121640,-7.652581,-0.565881,-0.639857,-3.704893,-4.045391,-6.219521,7.496905,-1.520237,-5.016586,-9.273538,5.317718,-7.513025,7.869932,4.106821,9.738092,-5.081547,4.250953,5.905270,9.005905,-7.222635,-7.973729,-2.652884,-6.699799,-6.572021,-0.924191,5.181795,-1.736560,7.445248,0.346145,5.572446,-6.990583,-1.569660,6.054774,6.010001,5.548840,-9.546732,-0.766492,6.719858,0.359161,-9.528168,-3.701971,-9.843012,0.386097,8.163970,-9.405271,0.613694,-9.030383,-7.729711,-8.953071,1.429475,9.096954,2.484947,-8.316300,8.897764,-5.658804,5.297859,3.595589,-9.397072,4.246217,6.820110,-5.284869,1.873803,9.191816,-4.177006,5.066223,1.717563,4.501315,8.228892,-6.212589,-6.657762,-5.131327,7.635958,9.411992,-0.967840,3.663487,-5.516367,3.853621,4.141048,9.341459,-7.309779,6.128739,-3.485391,-0.860948,-7.048868,-5.609315,-0.402125,-6.663094,-9.042121,4.811662,0.638135,1.392023,-2.464492,3.294896,6.395189,-4.769548,8.068855,0.115360,-1.725952,1.748385,-5.931705,1.012764,-1.014376,4.801357,7.484298,-3.457603,0.599854,-6.284445,-2.544287,8.999449,5.013378,0.533487,3.564517,-7.823427,-9.250608,-7.998282,3.168328,3.582447,-4.525288,-3.859265,9.690589,-1.495434,-8.428883,4.108468,-3.929116,-4.323431,-5.118464,-9.045094,6.523863,2.535642,1.938177,-5.571017,-3.843688,-5.592334,-6.356508,-5.054904,6.721201,7.822790,-7.738310,-0.209067,3.239954,-5.609723,-7.968238,-7.321510,5.200675,-2.505394,9.859730,3.132784,-0.442498,-1.251853,-4.583243,8.021280,2.403049,-7.262667,8.125031,-8.018874,8.069567,-6.071002,-2.320491,3.046538,-9.129799,-1.517036,4.590385,4.288112,7.362035,-5.584762,1.421025,-6.238667,-5.135767,-9.489420,7.074243,4.970525,2.785593], dtype = "float32")#candidate|4890|(210,)|const|float32
call_4889 = relay.TupleGetItem(func_2323_call(relay.reshape(const_4890.astype('float32'), [14, 1, 15])), 0)
call_4891 = relay.TupleGetItem(func_2326_call(relay.reshape(const_4890.astype('float32'), [14, 1, 15])), 0)
output = relay.Tuple([call_4887,call_4889,const_4890,])
output2 = relay.Tuple([call_4888,call_4891,const_4890,])
func_4893 = relay.Function([], output)
mod['func_4893'] = func_4893
mod = relay.transform.InferType()(mod)
mutated_mod['func_4893'] = func_4893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4893_call = mutated_mod.get_global_var('func_4893')
call_4894 = func_4893_call()
output = call_4894
func_4895 = relay.Function([], output)
mutated_mod['func_4895'] = func_4895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4613_call = mod.get_global_var('func_4613')
func_4614_call = mutated_mod.get_global_var('func_4614')
call_4904 = relay.TupleGetItem(func_4613_call(), 0)
call_4905 = relay.TupleGetItem(func_4614_call(), 0)
output = relay.Tuple([call_4904,])
output2 = relay.Tuple([call_4905,])
func_4930 = relay.Function([], output)
mod['func_4930'] = func_4930
mod = relay.transform.InferType()(mod)
mutated_mod['func_4930'] = func_4930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4930_call = mutated_mod.get_global_var('func_4930')
call_4931 = func_4930_call()
output = call_4931
func_4932 = relay.Function([], output)
mutated_mod['func_4932'] = func_4932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4930_call = mod.get_global_var('func_4930')
func_4932_call = mutated_mod.get_global_var('func_4932')
call_4947 = relay.TupleGetItem(func_4930_call(), 0)
call_4948 = relay.TupleGetItem(func_4932_call(), 0)
output = relay.Tuple([call_4947,])
output2 = relay.Tuple([call_4948,])
func_4969 = relay.Function([], output)
mod['func_4969'] = func_4969
mod = relay.transform.InferType()(mod)
mutated_mod['func_4969'] = func_4969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4969_call = mutated_mod.get_global_var('func_4969')
call_4970 = func_4969_call()
output = call_4970
func_4971 = relay.Function([], output)
mutated_mod['func_4971'] = func_4971
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5010 = relay.var("var_5010", dtype = "float64", shape = ())#candidate|5010|()|var|float64
const_5011 = relay.const([[[-5.476021,-9.706067],[-3.755864,-8.130701]],[[8.793034,9.919689],[3.695380,9.049656]],[[-3.268352,-4.061182],[0.187389,2.708978]],[[6.457056,3.522763],[-8.162245,-4.789979]],[[8.090731,2.471228],[-9.592873,-2.851704]],[[-8.005212,8.935348],[-7.165812,4.311393]],[[3.810491,-1.661899],[-0.643095,9.160952]],[[3.513286,0.787776],[-5.565386,-3.847026]],[[1.257856,9.947152],[-4.320912,1.065324]],[[3.563532,-8.219593],[-8.014846,-0.570370]],[[3.222569,-8.220932],[-8.581683,8.266865]],[[9.940191,4.758807],[6.521831,6.327987]],[[-3.247472,-7.331365],[9.902297,4.416192]]], dtype = "float64")#candidate|5011|(13, 2, 2)|const|float64
bop_5012 = relay.mod(var_5010.astype('float64'), const_5011.astype('float64')) # shape=(13, 2, 2)
func_3220_call = mod.get_global_var('func_3220')
func_3222_call = mutated_mod.get_global_var('func_3222')
const_5018 = relay.const([-9.381017,-6.444223,6.642913,-8.707569,0.368203,4.866867,1.111203,-3.947421,1.902507,1.300780,-0.889673,3.217796,-9.412112,3.619615,3.389653,5.796212,5.260866,-0.191656,9.753467,5.862593,-2.748791,1.557065,-8.930076,-4.205293,-6.587677,1.215424,2.062848,-7.458411,9.886460,5.850329,-5.970373,-4.416185,-6.682311], dtype = "float32")#candidate|5018|(33,)|const|float32
call_5017 = relay.TupleGetItem(func_3220_call(relay.reshape(const_5018.astype('float32'), [3, 11, 1])), 1)
call_5019 = relay.TupleGetItem(func_3222_call(relay.reshape(const_5018.astype('float32'), [3, 11, 1])), 1)
output = relay.Tuple([bop_5012,call_5017,const_5018,])
output2 = relay.Tuple([bop_5012,call_5019,const_5018,])
func_5029 = relay.Function([var_5010,], output)
mod['func_5029'] = func_5029
mod = relay.transform.InferType()(mod)
mutated_mod['func_5029'] = func_5029
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5030 = relay.var("var_5030", dtype = "float64", shape = ())#candidate|5030|()|var|float64
func_5029_call = mutated_mod.get_global_var('func_5029')
call_5031 = func_5029_call(var_5030)
output = call_5031
func_5032 = relay.Function([var_5030], output)
mutated_mod['func_5032'] = func_5032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4930_call = mod.get_global_var('func_4930')
func_4932_call = mutated_mod.get_global_var('func_4932')
call_5060 = relay.TupleGetItem(func_4930_call(), 0)
call_5061 = relay.TupleGetItem(func_4932_call(), 0)
output = relay.Tuple([call_5060,])
output2 = relay.Tuple([call_5061,])
func_5078 = relay.Function([], output)
mod['func_5078'] = func_5078
mod = relay.transform.InferType()(mod)
output = func_5078()
func_5079 = relay.Function([], output)
mutated_mod['func_5079'] = func_5079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4100_call = mod.get_global_var('func_4100')
func_4102_call = mutated_mod.get_global_var('func_4102')
call_5082 = func_4100_call()
call_5083 = func_4100_call()
output = call_5082
output2 = call_5083
func_5089 = relay.Function([], output)
mod['func_5089'] = func_5089
mod = relay.transform.InferType()(mod)
mutated_mod['func_5089'] = func_5089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5089_call = mutated_mod.get_global_var('func_5089')
call_5090 = func_5089_call()
output = call_5090
func_5091 = relay.Function([], output)
mutated_mod['func_5091'] = func_5091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2976_call = mod.get_global_var('func_2976')
func_2978_call = mutated_mod.get_global_var('func_2978')
call_5143 = relay.TupleGetItem(func_2976_call(), 0)
call_5144 = relay.TupleGetItem(func_2978_call(), 0)
var_5150 = relay.var("var_5150", dtype = "float32", shape = (8, 10, 12))#candidate|5150|(8, 10, 12)|var|float32
bop_5151 = relay.floor_divide(call_5143.astype('float32'), relay.reshape(var_5150.astype('float32'), relay.shape_of(call_5143))) # shape=(8, 10, 12)
bop_5154 = relay.floor_divide(call_5144.astype('float32'), relay.reshape(var_5150.astype('float32'), relay.shape_of(call_5144))) # shape=(8, 10, 12)
output = relay.Tuple([bop_5151,])
output2 = relay.Tuple([bop_5154,])
func_5172 = relay.Function([var_5150,], output)
mod['func_5172'] = func_5172
mod = relay.transform.InferType()(mod)
mutated_mod['func_5172'] = func_5172
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5173 = relay.var("var_5173", dtype = "float32", shape = (8, 10, 12))#candidate|5173|(8, 10, 12)|var|float32
func_5172_call = mutated_mod.get_global_var('func_5172')
call_5174 = func_5172_call(var_5173)
output = call_5174
func_5175 = relay.Function([var_5173], output)
mutated_mod['func_5175'] = func_5175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1883_call = mod.get_global_var('func_1883')
func_1885_call = mutated_mod.get_global_var('func_1885')
call_5177 = func_1883_call()
call_5178 = func_1883_call()
func_3235_call = mod.get_global_var('func_3235')
func_3236_call = mutated_mod.get_global_var('func_3236')
call_5184 = relay.TupleGetItem(func_3235_call(), 0)
call_5185 = relay.TupleGetItem(func_3236_call(), 0)
func_308_call = mod.get_global_var('func_308')
func_311_call = mutated_mod.get_global_var('func_311')
var_5205 = relay.var("var_5205", dtype = "float64", shape = (1296,))#candidate|5205|(1296,)|var|float64
call_5204 = relay.TupleGetItem(func_308_call(relay.reshape(var_5205.astype('float64'), [16, 9, 9])), 0)
call_5206 = relay.TupleGetItem(func_311_call(relay.reshape(var_5205.astype('float64'), [16, 9, 9])), 0)
uop_5211 = relay.exp(call_5204.astype('float32')) # shape=(16, 9, 9)
uop_5213 = relay.exp(call_5206.astype('float32')) # shape=(16, 9, 9)
func_2804_call = mod.get_global_var('func_2804')
func_2807_call = mutated_mod.get_global_var('func_2807')
const_5218 = relay.const([[9,4,8,9,-4,10,8,1,4,9],[-8,-6,-9,8,9,6,2,5,3,-3],[-5,-6,-8,6,8,3,10,8,-10,-9],[2,7,7,-3,-10,-5,9,7,10,-3],[-9,-6,-4,10,5,-3,5,1,5,-2],[8,9,-1,-7,2,-1,6,1,4,-6],[-1,5,10,-7,8,2,-9,5,9,-2],[4,3,-1,-10,6,-3,4,4,-2,2],[2,-7,-7,10,-6,9,6,-10,6,3],[7,-10,3,-6,7,-6,2,-2,6,4],[-6,4,7,-10,-5,7,-6,2,5,6],[-5,-2,4,5,10,3,-4,-8,2,-4],[-9,-6,1,6,-7,-7,5,-9,-5,-10]], dtype = "int16")#candidate|5218|(13, 10)|const|int16
call_5217 = relay.TupleGetItem(func_2804_call(relay.reshape(const_5218.astype('int16'), [130,])), 2)
call_5219 = relay.TupleGetItem(func_2807_call(relay.reshape(const_5218.astype('int16'), [130,])), 2)
uop_5235 = relay.sin(uop_5211.astype('float32')) # shape=(16, 9, 9)
uop_5237 = relay.sin(uop_5213.astype('float32')) # shape=(16, 9, 9)
func_4422_call = mod.get_global_var('func_4422')
func_4424_call = mutated_mod.get_global_var('func_4424')
call_5240 = relay.TupleGetItem(func_4422_call(), 0)
call_5241 = relay.TupleGetItem(func_4424_call(), 0)
func_3812_call = mod.get_global_var('func_3812')
func_3814_call = mutated_mod.get_global_var('func_3814')
call_5247 = relay.TupleGetItem(func_3812_call(relay.reshape(call_5217.astype('int16'), [130, 1])), 5)
call_5248 = relay.TupleGetItem(func_3814_call(relay.reshape(call_5217.astype('int16'), [130, 1])), 5)
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_5266 = relay.TupleGetItem(func_2289_call(), 2)
call_5267 = relay.TupleGetItem(func_2290_call(), 2)
func_4556_call = mod.get_global_var('func_4556')
func_4558_call = mutated_mod.get_global_var('func_4558')
call_5271 = relay.TupleGetItem(func_4556_call(relay.reshape(call_5177.astype('bool'), [8, 10, 12])), 0)
call_5272 = relay.TupleGetItem(func_4558_call(relay.reshape(call_5177.astype('bool'), [8, 10, 12])), 0)
func_2356_call = mod.get_global_var('func_2356')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_5289 = relay.TupleGetItem(func_2356_call(), 0)
call_5290 = relay.TupleGetItem(func_2358_call(), 0)
func_2544_call = mod.get_global_var('func_2544')
func_2547_call = mutated_mod.get_global_var('func_2547')
call_5297 = func_2544_call(relay.reshape(call_5184.astype('float32'), []))
call_5298 = func_2544_call(relay.reshape(call_5184.astype('float32'), []))
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_5304 = relay.TupleGetItem(func_2289_call(), 0)
call_5305 = relay.TupleGetItem(func_2290_call(), 0)
output = relay.Tuple([call_5177,call_5184,var_5205,call_5217,const_5218,uop_5235,call_5240,call_5247,call_5266,call_5271,call_5289,call_5297,call_5304,])
output2 = relay.Tuple([call_5178,call_5185,var_5205,call_5219,const_5218,uop_5237,call_5241,call_5248,call_5267,call_5272,call_5290,call_5298,call_5305,])
func_5329 = relay.Function([var_5205,], output)
mod['func_5329'] = func_5329
mod = relay.transform.InferType()(mod)
var_5330 = relay.var("var_5330", dtype = "float64", shape = (1296,))#candidate|5330|(1296,)|var|float64
output = func_5329(var_5330)
func_5331 = relay.Function([var_5330], output)
mutated_mod['func_5331'] = func_5331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3677_call = mod.get_global_var('func_3677')
func_3679_call = mutated_mod.get_global_var('func_3679')
call_5363 = func_3677_call()
call_5364 = func_3677_call()
output = relay.Tuple([call_5363,])
output2 = relay.Tuple([call_5364,])
func_5365 = relay.Function([], output)
mod['func_5365'] = func_5365
mod = relay.transform.InferType()(mod)
mutated_mod['func_5365'] = func_5365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5365_call = mutated_mod.get_global_var('func_5365')
call_5366 = func_5365_call()
output = call_5366
func_5367 = relay.Function([], output)
mutated_mod['func_5367'] = func_5367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4384_call = mod.get_global_var('func_4384')
func_4386_call = mutated_mod.get_global_var('func_4386')
call_5413 = relay.TupleGetItem(func_4384_call(), 4)
call_5414 = relay.TupleGetItem(func_4386_call(), 4)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_5417 = func_4240_call()
call_5418 = func_4240_call()
output = relay.Tuple([call_5413,call_5417,])
output2 = relay.Tuple([call_5414,call_5418,])
func_5425 = relay.Function([], output)
mod['func_5425'] = func_5425
mod = relay.transform.InferType()(mod)
mutated_mod['func_5425'] = func_5425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5425_call = mutated_mod.get_global_var('func_5425')
call_5426 = func_5425_call()
output = call_5426
func_5427 = relay.Function([], output)
mutated_mod['func_5427'] = func_5427
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5449 = relay.var("var_5449", dtype = "int64", shape = (14, 11, 9))#candidate|5449|(14, 11, 9)|var|int64
var_5450 = relay.var("var_5450", dtype = "int64", shape = (14, 11, 9))#candidate|5450|(14, 11, 9)|var|int64
bop_5451 = relay.subtract(var_5449.astype('int64'), relay.reshape(var_5450.astype('int64'), relay.shape_of(var_5449))) # shape=(14, 11, 9)
var_5455 = relay.var("var_5455", dtype = "int64", shape = (14, 11, 9))#candidate|5455|(14, 11, 9)|var|int64
bop_5456 = relay.greater_equal(bop_5451.astype('bool'), relay.reshape(var_5455.astype('bool'), relay.shape_of(bop_5451))) # shape=(14, 11, 9)
func_4209_call = mod.get_global_var('func_4209')
func_4213_call = mutated_mod.get_global_var('func_4213')
const_5467 = relay.const([-8,-5,2,2,-9,1,2,-5,2,1,5,3,1,-9,-10,8,-5,-10,-6,-1,1,-9,1,-1,-8,-3,4,-8,-9,-3,-3,8,-5,5,1,6,-1,4,-9,-6,-1,-1,-3,9,5,-3,-4,6,-9,9,-6,-9,-2,-8,-10,-7,1,6,-6,-10,-9,-9,3,-2,-6,-2,8,9,8,10,-2,-9,-6,1,-1,4,3,3,-9,-10,-6,7,-6,5,-6,2,-5,-2,-7,2,3,10,-1,4,5,-7,6,8,-2,6,9,7,8,-4,4,4,4,-5,-6,5,3,-4,-7,1,-5,-9,-2,8,-8,6,8,9,-4,7,3,1,5,3,10,-3,-8,9,1,-1,-8,10,6,8,-4,-10,-6,-1,8,2,7,-3,10,-6,-7,-9,-3,-3,-8,1,-5,-9,5,3,-3,3,2,8,8,-2,-2,-2,-8,7,5,8,-10,2,-6,-1,1,2,10,7,5,-2,10,3,10,-6,8,6,8,5,4,4,8,3,5,5,-9,6,-3,-7,-8,8,6,8,-4,9,-7,-5,6,-4,-8,-10,7,6,4,-3,-8,-2,6,8,1,8,-10,-6,1,-9,10,-3,3,7,5,-4,2,5,4,-8,3,-6,8,-9,-3,-7,-6,-7,2,-10,3,-9,-10,3,-10,-10,6,3,-9,5,1,-2,-2,9,3,2,3,-1,6,6,6,8,-1,9,5,1,-6,4,2,-4,3,10,-5,-9,-8,8,1,7,-7,4,-8,8,8,2,5,6,1,-6,-9,-9,9,1,3,6,2,-2,6,6,3,-5,-5,-6,7,5,6,4,-1,-7,-5,-6,6,-9,1,-8,3,-1,-4,-5,9,-8,-3,-10,9,1,-2,-1,9,1,-5,-4,-2,-7,4,-7,3,7,8,-10,-7,-1,2,-9,1,-10,-9,-7,1,-5,-7,7,-8,5,2,-4,-8,9,-6,10,-8,-6,-9,8,-6,-3,7,-2,-6,2,-2,-8,1,10,-6,7,-5,3,-3,-1,3,-9,-8,7,7,2,8,-8,9,-6,-2,-1,5,10,4,-6,-9,-9,-5,-1,-6,2,4,2,-9,10,-3,-10,-6,8,-4,-7,9,-8,-2,7,-1,-1,10,-8,-4,-2,-1,7,1,-7,10,-7,-10,3,5,10,-10,1,-4,9,-9,-7,1,8,-1,-8,9,-10,-2,8,3,-3,9,-3,7,3,10,8,7,-7,1,9,-1,-8,2,-10,6,-7,9,7,1,2,1,-5,6,-9,7,10,9,-1,-5,-5,4,3,-4,-9,-2,6,-1,-4,-5,7,-2,-8,-4,-1,9,10,-10,5,5,8,-7,3,-9,6,-1,-4,9,-4,-2,-1,-9,-4,-4,-4,5,8,-8,9,-1,1,-9,5,-8,10,-1], dtype = "uint16")#candidate|5467|(525,)|const|uint16
const_5468 = relay.const([-4.195893,-3.705158,-9.941129,2.878329,-2.123716,2.104353,-0.869818,-8.137895,-2.066105,-8.496922,-0.555603,4.008303,6.309012,-2.436262,6.790556,-3.172039,8.066332,-9.778257,-0.512871,1.883639,5.334898,-4.056203,1.799092,7.163364,8.524726,-3.211848,5.692494,-6.088412,8.692024,6.847624,-8.726708,-7.156594,4.624445,-3.626469,-6.974681,-2.582691,-0.897438,-8.005298,7.590505,3.962103,1.993861,-6.620804,-7.689182,3.330076,3.611305,-4.088310,-1.990543,3.165230,1.594318,-1.667765,1.185239,-8.880937,3.827094,8.761979,-6.531359,-3.682379,-4.640868,-7.736431,5.767711,-6.692535,0.366464,-0.706066,-1.526033,5.335404,9.862315,6.329452,-3.302204,7.362749,-4.028692,-0.074175,1.230503,-4.141361,2.436706,-9.077893,8.762019,5.973193,-9.943801,-3.110837,2.162062,-6.222188,0.147889,7.896452,8.814447,-5.882201,9.083464,-2.619921,9.566012,-0.032812,-1.176028,9.379228,4.777144,-3.905800,-4.138109,-4.975840,-1.223331,2.900303,6.988666,0.247711,0.570920,-5.535596,-9.560176,5.039764,-9.849780,-5.938340,7.899274,-1.588641,-7.121942,-1.908916,6.782440,-6.846540,9.474127,-6.404165,-5.998303,-8.893429,1.427302,-6.100548,4.450722,3.502600,4.184913,-9.162328,9.317461,5.389468,0.229498,-5.057422,6.455139,-4.357499,-8.626288,7.732861,-4.229936,-6.298957,-7.091316,3.342981,5.176530,2.294800,-9.178377,4.710448,-4.694683,4.265596,-2.768844,3.338056,-9.844448,-4.848841,-0.616676,3.806506,3.048434,-7.453214,-1.273023,-9.693127,-2.581642,-1.506383,2.941789,-2.296595,3.492849,-1.972200,1.752983,8.134722,8.106868,0.685491,0.311301,3.140478,-5.473592,-9.578665,4.978763,-9.436431,7.893834,9.396428,-8.041653,-6.378516,9.967846,2.510609,-3.805067,2.576311,4.863790,3.349656,7.876898,0.674585,-2.872028,4.404144,-5.724392,3.244400,-8.271137,5.824201,-8.447761,-9.344697,-8.520198,6.457307,-5.291117,-7.962041,3.129291,-4.229780,-8.447861,-5.420557,-8.120104,7.014440,-7.008728,-9.093131,2.453297,9.487613,3.709073,6.737552,-7.871558,6.719401,5.482291,-2.233391,2.734011,-5.032674,-4.647179,9.994981,-5.417471,-9.398915,6.647591,8.010898,-8.778660,9.979797,7.158400,4.783152,5.192828,-0.806370,-1.840317,0.014909,-6.613431,-4.588944,-6.408296,1.581531,-2.245582,8.406952,-3.213473,-5.762804,-0.884328,-4.529524,-8.637874,3.248362,-1.387615,8.764403,-8.623755,5.738185,-1.314778,8.632318,7.132256,4.102162,-9.238941,9.208709,1.193923,8.913779,0.824893,9.517172,2.304055,0.914223,8.284320,2.382702,4.690508,-2.364424,-9.586023,0.992816,-2.719427,7.826079,4.420753,8.855372,-1.051581,-3.947889,-6.777409,2.291762,-1.164122,-8.800971,7.542496,8.300549,-2.066509,-8.592938,-3.279278,-2.098663,-1.787575,6.911562,-5.403744,9.446309,-4.237309,7.386342,9.753967,-1.082766,0.057217,0.365494,-7.145357,-8.165220,-6.048455,2.171503,-1.316583,0.851085,4.527619,-3.181607,4.467719,-5.526272,-1.400958,3.393229,6.444907,9.032750,-5.219876,4.385295,-6.654936,6.845223,1.362716,5.639763,-6.025247,-3.426302,9.681900,8.625109,-5.602344,-1.764385,7.106483,7.502652,-6.934751,-8.150943,9.520920,4.511103,6.821245,2.281507,-1.113894,-7.779478,5.197620,-6.200223,9.980885,-2.001063,-4.189527,-1.296437,-0.182802,-4.953035,0.624903,8.234852,-2.668728,-5.222104,0.984333,-8.488944,-2.822615,-6.581705,-8.460135,-8.898547,-2.301807,6.848882,-4.222720,0.309935,5.907174,3.202773,-4.737099,-1.552215,0.279565,-7.822371,-3.956724,-9.767189,4.861329,-1.233425,-9.115292,5.733823,2.081478,7.495395,1.561857,-5.203080,-0.315437,7.925624,-7.109838,4.087013,-6.458009,-9.189805,8.494406,3.276827,3.311534,-3.808696,-3.690770,4.951640,-8.518972,5.802649,9.607188,3.914128,2.637158,-1.467276,-7.418432,-3.724481,8.277008,3.526524,9.055322,2.857502,-5.113179,-9.867660,6.521373,0.169271,-6.185045,0.499692,-5.363605,9.370956,1.443916,-8.331174,-6.056819,-0.110384,0.317716,-0.679785,-6.188367,-6.563444,3.951239,-9.643046,-2.307035,-1.827739,-8.836443,-7.213942,-6.119467,7.780751,6.934525,5.754185,-0.605012,8.890922,5.344329,-8.774471,4.967822,9.040626,-9.294796,3.708222,2.563133,8.751157,-2.268059,-9.401821,-7.973869,-1.070643,1.297195,7.587538,-5.245153,-7.190114,-9.302065,4.666529,6.496103,-1.441703,-7.189438,-5.464614,8.919071,-0.438916,2.768421,6.376619,-7.777891,1.866767,8.877445,4.599259,5.257030,-0.352138,-8.315273,7.935468,-6.562282,4.829570,5.120082,-5.289045,-4.001836,-6.867588,8.734632,0.717446,-6.970139,-8.221929,0.558177,0.912589,8.335289,-5.484449,5.324369,8.546107,7.315322,4.555228,-4.346111,0.572492,-1.272996,-9.446698,8.267953,9.656363,-4.325482,-8.215671,9.840796,-1.008110,0.037311,-8.862766,-0.915809,-4.431081,7.296084,-1.543655,3.709112,-5.036235,-4.364079,0.852070,-1.143909,1.754673,-7.610730,-3.975366,2.510269,-7.454045,2.480507,8.626005,-3.912955,0.224557,0.859139,2.554467,1.335079,-9.722305,-0.972812,-9.397428,-4.038421,3.830738,5.026805,-5.058459,-0.420466,7.686728,-6.139397,2.851786,-5.087384,-0.847265,4.583323,-2.981686,9.778725,-5.685742,-5.296286,-7.343159,-7.239618,-5.827722,8.772735,-1.037093,1.491271,0.740360,-8.260396,4.303336,1.676798,4.523805,9.608962,7.107114,-5.291740,3.464654,-7.393923,-3.259012,3.353194,-9.850533,8.885606,3.698307,-5.097974,-0.555983,4.869736,1.085651,6.563667,4.902551,-5.608803,0.653456,-0.091303,-3.705696,-3.429641,4.710541,1.638157,-5.181115,-2.381939,6.593387,-3.343981,-8.252426,7.038121,-3.845373,-0.442900,-6.392002,6.372711,6.715057,-8.091038,-7.906207,-8.062241,-0.346235,-8.989421,5.530683,-8.206886,7.736887,-5.306548,6.908761,-7.016358,7.239249,2.086221,7.429140,6.164176,6.571615,-4.405284,8.043617,2.508847,-5.966229,-0.363828,3.815329,3.577032,-1.303262,-9.136891,3.546271,1.734338,1.722110,-2.497684,5.264960,7.924181,6.647283,1.564488,6.771007,5.932835,-8.386604,1.871596,-4.349970,-6.572293,-2.387855,-7.061413,1.469554,-9.221120,2.484733,-3.981335,0.482167,5.031426,4.778540,6.048230,2.489527,0.545822,-9.486972,9.398051,2.868202,1.612689,-0.327785,9.121804,-5.827048,-2.155126,8.910673,-6.125319,5.988074,6.050340,-7.701127,8.630654,9.012755,2.487511,8.068566,7.111332,2.867336,-9.147199,-1.016208,2.398981,-0.803161,-0.218373,-8.037692,-2.558359,-6.342972,5.425778,-9.444580,8.864752,9.892601,8.814674,2.594648,1.091215,-2.484031,8.764700,4.271590,8.049733,-9.576752,1.760549,-5.950740,-6.849735,-0.859833,-3.771996,-4.889477,-8.407431,-3.899808,-5.362684,-9.402013,-4.618934,-8.729957,-2.785288,9.316516,3.253209,9.093826,-2.296702,-5.717905,2.023807,-7.696962,9.065730,7.670701,-1.393108,2.599536,9.790635,-3.029766,-0.192823,1.906476,4.403264,-5.529787,8.398491,7.747627,-7.123225,-4.285393,-8.281678,6.244202,-2.921034,-2.909804,-1.880731,0.983128,8.878863,-8.699614,-8.494872,-8.291673,-6.669865,-9.798935,7.989426,2.718943,1.715322,1.966951,1.299491,6.531438,8.812835,-9.552654,-4.406525,5.002121,-9.667610,7.287478,-6.004231,-7.024896,5.778592,-0.589163,-1.600984,-0.046292,1.214261,-5.773519,-0.260423,-1.045348,8.102527,4.648650,2.031539,8.447567,-3.509674,-2.050735,4.774519,3.828934,-0.196900,9.984521,-3.365948,-4.037130,6.424733,-4.276282,6.262433,3.252554,3.221908,-6.613943,5.478284,-4.488816,-4.033424,-4.150084,3.115551,-1.514623,5.903953,1.886122,5.211976,-4.616984,-0.330999,-2.249822,9.449130,-4.440951,4.454313,7.652160,-4.422868,-8.957316,0.017512,-7.425703,9.969903,-4.212664,-7.828860,-9.391457,0.704829,-6.866978,4.288392,1.577499,-3.091153,7.429978,-6.120160,7.116062,6.123478,-2.321646,-5.289742,3.324244,4.803852,1.916377,8.401870,-5.527834,-3.348629,-1.778905,6.596826,-8.729907,4.791647,0.045127,8.246395,3.658761,1.655232,2.169554,-6.788008,8.822921,-3.367905,-1.833579,-5.595348,-5.067539,0.617007,-1.014283,6.140999,2.453310,-5.764938,-6.476489,9.789232,-0.467146,9.915300,-3.623714,2.028989,-1.776041,-7.911070,2.915807,3.645044,8.933768,1.688030,4.367253,2.833332,5.750297,-0.903074,1.232268,8.450380,-0.015250,8.893693,9.014521,-6.085466,-1.201354,-7.021648,7.926529,6.864659,-0.191311,-5.719578,0.903752,-7.639502,3.796494,9.774936,-9.401360,8.202884,7.323479,-7.146869,5.198537,-5.306953,1.670827,3.473632,-8.538043,-4.357867,6.615770,9.396169,-3.631899,-4.130400,-6.507143,-8.798183,-3.628819,4.884210,-1.601314,-0.224140,-9.965179,8.767916,0.805153,-3.514284,3.244405,3.464212,2.920290,-5.882774,-0.827845,8.743911,-6.203256,-4.126136,0.593886,-9.762601,8.898256,7.327511,-6.859213,5.691869,-0.060295,7.733741,-5.363541,-2.779938,8.247631,5.341349,4.104860,-8.642785,-0.126892,4.474843,-3.940741,6.597040,-0.524413,9.914228,7.129212,2.539514,-8.094076,-4.251221,7.675304,-1.657432,6.026327,-9.643416,3.971938,-1.480614,1.699336,3.214574,8.193385,1.029342,-2.248470,-6.053270,-7.578674,9.099189,5.330511,1.560179,-6.066728,8.334382,-3.831481,3.059240,5.461493,5.351430,0.611629,-5.088889,-8.837399,-4.965638,1.175471,-5.914272,-6.889291,-2.831841,3.868786,-3.408880,-8.060338,3.949918,-3.814610,-0.197367,-5.095575,-0.978829,-1.690740,7.340220,7.906212,5.025314,-5.233263,-0.605238,6.751885,-8.954366,-0.714414,9.127033,0.755020,3.451065,9.969922,9.723386,-4.442788,7.745473,-9.148457,2.948991,-3.009927,-5.012392,-0.182704,-6.856222,-8.381334,7.308935,3.458770,3.947033,7.821240,-2.031126,-8.755907,5.965680,-5.981989,1.215738,1.902732,-6.930941,-1.781813,-4.678923,0.822788,-4.106675,-7.254193,-6.151963,-1.707621,-2.180349,0.444739,-4.863049,-3.116970,-5.394456,-9.175267,9.109418,-1.259552,-7.404938,3.174231,7.134551,4.661585,-3.345082,9.373522,7.935723,-8.120750,-8.455516,6.809635,9.647138,-4.848721,-5.073837,9.785324,-2.716861,6.224204,-0.165377,5.242164,5.934347,-4.786287,-9.675614,-3.767772,6.813591,3.383340,-2.159666,4.821979,-1.593208,9.712834,-3.826163,5.994841,-7.148264,2.915406,2.238865,1.464716,9.057442,-9.835196,8.578734,-2.394663,3.607866,-9.381662,-3.750784,7.319034], dtype = "float64")#candidate|5468|(1008,)|const|float64
call_5466 = relay.TupleGetItem(func_4209_call(relay.reshape(const_5467.astype('uint16'), [15, 7, 5]), relay.reshape(const_5468.astype('float64'), [1008,]), ), 1)
call_5469 = relay.TupleGetItem(func_4213_call(relay.reshape(const_5467.astype('uint16'), [15, 7, 5]), relay.reshape(const_5468.astype('float64'), [1008,]), ), 1)
output = relay.Tuple([bop_5456,call_5466,const_5467,const_5468,])
output2 = relay.Tuple([bop_5456,call_5469,const_5467,const_5468,])
func_5471 = relay.Function([var_5449,var_5450,var_5455,], output)
mod['func_5471'] = func_5471
mod = relay.transform.InferType()(mod)
mutated_mod['func_5471'] = func_5471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5471_call = mutated_mod.get_global_var('func_5471')
var_5473 = relay.var("var_5473", dtype = "int64", shape = (14, 11, 9))#candidate|5473|(14, 11, 9)|var|int64
var_5474 = relay.var("var_5474", dtype = "int64", shape = (14, 11, 9))#candidate|5474|(14, 11, 9)|var|int64
var_5475 = relay.var("var_5475", dtype = "int64", shape = (14, 11, 9))#candidate|5475|(14, 11, 9)|var|int64
call_5472 = func_5471_call(var_5473,var_5474,var_5475,)
output = call_5472
func_5476 = relay.Function([var_5473,var_5474,var_5475,], output)
mutated_mod['func_5476'] = func_5476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5365_call = mod.get_global_var('func_5365')
func_5367_call = mutated_mod.get_global_var('func_5367')
call_5509 = relay.TupleGetItem(func_5365_call(), 0)
call_5510 = relay.TupleGetItem(func_5367_call(), 0)
output = relay.Tuple([call_5509,])
output2 = relay.Tuple([call_5510,])
func_5521 = relay.Function([], output)
mod['func_5521'] = func_5521
mod = relay.transform.InferType()(mod)
mutated_mod['func_5521'] = func_5521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5521_call = mutated_mod.get_global_var('func_5521')
call_5522 = func_5521_call()
output = call_5522
func_5523 = relay.Function([], output)
mutated_mod['func_5523'] = func_5523
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5552 = relay.const([[[6.812842,-1.974667,7.026494,5.484323,-6.343234],[-3.353767,0.958996,9.132982,-8.846506,1.692846],[2.088117,-6.724952,7.178410,9.820169,-0.388199],[2.059849,7.291454,-5.026146,-8.708003,1.765148],[-0.095328,4.913588,-8.415538,6.529451,0.078051],[4.075757,-7.060204,6.743560,-8.936407,-2.681384],[4.697208,-2.826461,3.922921,0.899682,-9.895990],[-3.023913,-6.550326,5.225161,6.831294,-6.698891],[0.827834,4.653602,5.125288,8.808185,6.652371],[9.241905,-7.600395,-9.986797,-5.199574,6.767837],[-1.301479,-4.363396,7.861122,9.131306,-5.974065],[0.736271,-4.928178,-3.022270,1.651287,6.465371],[1.592072,2.281549,-3.737035,-0.185255,0.560475]],[[-2.180169,5.437433,1.557966,-2.967540,0.109500],[-8.049367,-6.978161,-8.303434,-9.971875,5.431499],[-2.068087,-7.860947,-9.359265,8.643078,-9.278034],[-7.344367,5.380940,0.771863,-5.739675,3.918919],[-8.509947,-4.003376,-9.172287,5.874646,-8.708858],[-7.420974,-5.439744,-5.614825,-3.329744,4.217473],[-9.722859,1.457401,8.241453,-2.498051,-8.178286],[-7.677893,3.208291,8.463900,1.956761,3.732174],[9.737394,-9.289826,-5.633173,-3.052793,7.250238],[4.616933,2.132883,5.379969,5.389806,-9.665261],[6.414197,1.553907,2.336914,1.475653,0.399053],[-7.029844,-6.998527,-4.263445,6.169711,0.042713],[-7.081092,9.964435,9.199894,2.697959,-1.657643]],[[-0.521060,-5.478222,3.971956,0.158874,-8.702073],[6.254789,3.730423,3.901482,-0.913662,9.838618],[8.502079,8.812187,9.757452,8.880299,5.190437],[4.102195,-7.832990,8.250190,5.811353,-0.206385],[-3.703221,9.619507,4.292401,0.540009,6.542578],[-4.151716,0.672746,7.362056,-6.359888,8.717272],[8.647098,-9.841533,-2.562024,6.910186,-9.546896],[0.358213,7.809496,-8.857722,6.979837,-9.123772],[-3.799532,-5.704053,-5.862370,1.911291,-0.524568],[0.456425,0.958103,4.971279,8.974145,9.230246],[-6.099626,-5.838942,6.185621,2.618430,5.785742],[-7.111343,-9.622560,0.247418,-0.507176,6.232596],[2.253568,-9.573706,-4.937544,-7.564292,-8.566545]],[[6.329756,-6.905418,-1.045237,2.494544,-2.347870],[-5.391598,-1.724966,5.324365,1.410952,-8.453661],[3.101358,7.732288,-9.917384,6.278291,-5.687602],[4.680244,2.947669,6.574500,2.121190,3.592505],[3.642094,-3.000291,-8.272964,7.092723,-7.184130],[-1.715172,4.756887,9.507186,-3.594327,-6.883938],[8.549973,-2.359803,9.118918,-6.931811,-6.418451],[1.404731,8.303678,-0.832224,1.467906,-4.628438],[3.050424,5.436340,-6.978828,8.873128,-4.054499],[6.952373,9.415503,-2.823505,-3.634556,5.009996],[-5.744837,-3.241885,6.349651,5.073926,9.400807],[-1.071467,-4.189775,6.269954,-6.640498,6.326246],[9.863902,-1.729273,3.637135,7.646597,-7.974610]],[[-9.570772,9.913530,-1.910352,1.026918,-0.363489],[8.103938,-3.290207,-7.507421,0.245910,-8.075640],[9.879451,8.735921,-7.925838,-0.077943,-2.150390],[-8.557009,5.228793,-2.919817,-2.855687,8.690055],[-0.276455,8.681911,0.989690,-6.347714,4.596316],[7.134046,-7.243489,-8.497265,8.914604,1.625893],[1.716518,7.383877,0.813658,7.446647,8.735844],[-2.548748,1.549380,-2.713404,-2.103700,8.689899],[5.995956,-9.399887,-5.615276,-3.062608,-3.727368],[9.499112,-5.582242,-2.550574,-4.640123,2.053769],[5.543739,2.489674,-6.277360,3.045401,5.118871],[-2.587907,4.554509,-0.270813,4.649349,-3.296293],[-7.848218,-6.166931,-9.835823,9.153961,-7.718494]],[[-4.153486,-2.334678,-5.845579,-6.801741,8.926922],[4.962740,-2.908042,8.513159,-7.374774,-2.927877],[-6.584648,-1.117745,0.809030,2.769040,-8.850683],[0.619202,7.666225,-2.935039,-5.329655,7.437151],[-1.051277,5.816940,-0.383370,-7.045955,-1.854886],[3.045845,0.737041,4.569353,-8.056334,3.348840],[-2.573397,7.972944,4.929163,9.225375,-6.907623],[6.295440,1.302688,-3.553312,2.214672,-9.398154],[8.142942,-3.580078,-0.441012,7.971976,3.856538],[2.753412,8.703043,1.785073,-1.174178,9.513181],[-9.812858,-6.990124,1.575250,9.731363,0.398393],[-6.749193,7.286851,6.422816,-3.982633,-4.299644],[-4.321557,9.756206,-8.977262,-5.439253,-8.664265]],[[-9.628347,-9.264945,-4.290561,5.661291,1.510497],[-6.696868,5.147830,-9.701592,9.078671,4.276748],[-8.234661,8.484764,6.606482,0.743378,-0.357118],[2.716149,-9.916487,4.715160,-6.465187,-8.083370],[6.713906,0.595226,-9.753384,-6.543158,2.401860],[6.241542,1.782383,3.659716,-5.846555,-0.842404],[-1.762948,0.769931,7.156687,-4.100134,2.388960],[4.229298,2.307053,6.918330,2.593344,7.118611],[8.677463,-1.580605,9.777201,-0.928069,-9.558319],[-0.192138,-6.577450,0.899990,2.234470,2.185657],[-8.481183,4.160611,-4.773469,4.101075,-5.134971],[-9.011238,3.447457,-8.419645,-8.328000,9.139154],[8.555996,-3.022743,0.028630,-4.093580,6.207846]],[[-7.387933,-4.914851,0.982378,-0.527347,-1.208025],[1.552688,2.841287,-0.528620,9.028748,-6.991951],[3.282887,-4.493889,9.151293,-3.716650,-4.497497],[-8.003974,7.167780,4.506916,4.494153,-1.885833],[-4.430020,-6.712118,-1.517763,-5.312584,5.923680],[-3.890493,-2.287540,-3.148964,4.761422,8.177780],[-7.270836,-2.956648,2.944286,-4.180030,1.126743],[-8.859024,-9.051591,4.136486,2.940888,-0.332836],[-7.237471,-4.820661,-9.333502,4.977636,4.840787],[0.161349,-7.973688,2.033880,7.901724,-6.368939],[-9.474696,0.826906,5.646510,-8.685270,-4.164375],[1.734422,4.914211,2.387172,9.290241,8.489736],[-3.441349,-5.304798,-0.958081,-2.182634,-4.352291]],[[5.207933,4.666884,0.660280,2.349782,-0.595328],[7.289133,6.729943,4.617065,-1.808964,0.978161],[3.058436,-0.648016,-6.308407,8.995865,7.939770],[9.217150,2.789939,1.917028,0.880265,-1.845609],[-1.214833,7.914697,-0.396575,-3.974128,4.188234],[8.154658,3.516236,7.351648,-9.078794,-6.884113],[-6.529070,-0.105899,0.438737,-1.303894,4.143077],[-5.539852,-8.950287,4.319780,-4.292851,9.320478],[0.146067,-8.935430,0.161016,-6.567884,-7.004973],[0.454598,-3.748731,-9.448327,8.386832,-7.668441],[8.931665,-9.344253,-1.005267,5.039643,0.033435],[1.388223,7.731489,-3.502513,8.225930,-7.899488],[3.111715,-8.899796,-5.136466,1.605195,6.215466]]], dtype = "float32")#candidate|5552|(9, 13, 5)|const|float32
uop_5553 = relay.sqrt(const_5552.astype('float32')) # shape=(9, 13, 5)
output = uop_5553
output2 = uop_5553
func_5560 = relay.Function([], output)
mod['func_5560'] = func_5560
mod = relay.transform.InferType()(mod)
output = func_5560()
func_5561 = relay.Function([], output)
mutated_mod['func_5561'] = func_5561
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5576 = relay.var("var_5576", dtype = "float64", shape = ())#candidate|5576|()|var|float64
var_5577 = relay.var("var_5577", dtype = "float64", shape = (14, 6, 5))#candidate|5577|(14, 6, 5)|var|float64
bop_5578 = relay.divide(var_5576.astype('float64'), var_5577.astype('float64')) # shape=(14, 6, 5)
func_5172_call = mod.get_global_var('func_5172')
func_5175_call = mutated_mod.get_global_var('func_5175')
var_5583 = relay.var("var_5583", dtype = "float32", shape = (960,))#candidate|5583|(960,)|var|float32
call_5582 = relay.TupleGetItem(func_5172_call(relay.reshape(var_5583.astype('float32'), [8, 10, 12])), 0)
call_5584 = relay.TupleGetItem(func_5175_call(relay.reshape(var_5583.astype('float32'), [8, 10, 12])), 0)
output = relay.Tuple([bop_5578,call_5582,var_5583,])
output2 = relay.Tuple([bop_5578,call_5584,var_5583,])
func_5597 = relay.Function([var_5576,var_5577,var_5583,], output)
mod['func_5597'] = func_5597
mod = relay.transform.InferType()(mod)
mutated_mod['func_5597'] = func_5597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5597_call = mutated_mod.get_global_var('func_5597')
var_5599 = relay.var("var_5599", dtype = "float64", shape = ())#candidate|5599|()|var|float64
var_5600 = relay.var("var_5600", dtype = "float64", shape = (14, 6, 5))#candidate|5600|(14, 6, 5)|var|float64
var_5601 = relay.var("var_5601", dtype = "float32", shape = (960,))#candidate|5601|(960,)|var|float32
call_5598 = func_5597_call(var_5599,var_5600,var_5601,)
output = call_5598
func_5602 = relay.Function([var_5599,var_5600,var_5601,], output)
mutated_mod['func_5602'] = func_5602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3235_call = mod.get_global_var('func_3235')
func_3236_call = mutated_mod.get_global_var('func_3236')
call_5669 = relay.TupleGetItem(func_3235_call(), 0)
call_5670 = relay.TupleGetItem(func_3236_call(), 0)
output = call_5669
output2 = call_5670
func_5678 = relay.Function([], output)
mod['func_5678'] = func_5678
mod = relay.transform.InferType()(mod)
mutated_mod['func_5678'] = func_5678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5678_call = mutated_mod.get_global_var('func_5678')
call_5679 = func_5678_call()
output = call_5679
func_5680 = relay.Function([], output)
mutated_mod['func_5680'] = func_5680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5365_call = mod.get_global_var('func_5365')
func_5367_call = mutated_mod.get_global_var('func_5367')
call_5687 = relay.TupleGetItem(func_5365_call(), 0)
call_5688 = relay.TupleGetItem(func_5367_call(), 0)
func_3039_call = mod.get_global_var('func_3039')
func_3041_call = mutated_mod.get_global_var('func_3041')
var_5703 = relay.var("var_5703", dtype = "int32", shape = ())#candidate|5703|()|var|int32
call_5702 = relay.TupleGetItem(func_3039_call(relay.reshape(var_5703.astype('int32'), [])), 0)
call_5704 = relay.TupleGetItem(func_3041_call(relay.reshape(var_5703.astype('int32'), [])), 0)
output = relay.Tuple([call_5687,call_5702,var_5703,])
output2 = relay.Tuple([call_5688,call_5704,var_5703,])
func_5708 = relay.Function([var_5703,], output)
mod['func_5708'] = func_5708
mod = relay.transform.InferType()(mod)
var_5709 = relay.var("var_5709", dtype = "int32", shape = ())#candidate|5709|()|var|int32
output = func_5708(var_5709)
func_5710 = relay.Function([var_5709], output)
mutated_mod['func_5710'] = func_5710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_5724 = func_2013_call()
call_5725 = func_2013_call()
func_4499_call = mod.get_global_var('func_4499')
func_4503_call = mutated_mod.get_global_var('func_4503')
const_5733 = relay.const([-6,-3,1,5,2,6,3,-3,-10,-5,-3,-4,7,10,-4,1,4,-9,3,-6,9,7,9,-2,4,1,-4,-10,-6,2,-9,-2,-6,9,-6,-8,-6,-6,-5,-5,6,8,-2,-5,-1,10,10,7,4,7,3,-4,-10,-6,-9,-6,1,-6,-4,-1,6,7,3,3,-9,9,6,1,-6,-1,-1,1,-2,-3,6,3,7,-1,3,-10,-4,6,-2,6,-5,-2,-5,-8,-10,7,-7,1,10,8,3,8,7,-7,-3,9,-1,4,-4,5,5,1,2,-8,1,6,4,-3,-7,9,5,-8,9,-2,-6,8,-9,-3,-10,-3,-7,-8,2,1,4,-9,-8,-5,1,-3,-6,-10,1,-8,-6,-3,-10,5,2,3,-6,7,1,4,-1,1,-7,2,6,-6,-1,-5,-9,6,6,7,4,-7,-6,-9,5,4,-10,-9,-8,-9,3,-3,4,-4,-9,-2,7,-5,10,1,5,7,-4,4,-1,-3,6,-9,-5,3,-5,4,4,-4,5,-10,-1,-6,5,-6,-2,3,7,10,-6,-4,6,1,-9,-4,8,-7,-3,3,2,4,-10,-1,8,9,-4,5,2,4,10,-8,-2,-9,-7,-10,-2,4,-1,1,8,-5,2,6,5,7,-8,4,-1,4,5,-8,10,1,9,-3,1,-1,8,-8,5,-8,4,2,5,5,2,9,7,3,1,3,4,6,1,-4,-3,1,4,-5,1,-1,5,-3,9,10,-2,3,-9,9,-4,8,7,7,7,2,-1,-9,2,-1,-9,-10,-6,-8,-1,4,-2,-7,6,-10,-5,10,-7,2,-2,2,-4,2,-5,-4,9,-6,-2,8,6,-10,-2,4,-9,1,-1,-3,-5,-4,7,-9,-6,7,-5,-8,3,-1,-8,4,-3,-7,8,-1,6,1,3,-10,-4,-9,-2,-1,2,-1,9,8,-2,8,6,1,5,3], dtype = "uint64")#candidate|5733|(360,)|const|uint64
call_5732 = func_4499_call(relay.reshape(const_5733.astype('uint64'), [10, 9, 4]), relay.reshape(const_5733.astype('uint64'), [10, 9, 4]), )
call_5734 = func_4499_call(relay.reshape(const_5733.astype('uint64'), [10, 9, 4]), relay.reshape(const_5733.astype('uint64'), [10, 9, 4]), )
uop_5747 = relay.asin(call_5732.astype('float32')) # shape=(10, 9, 4)
uop_5749 = relay.asin(call_5734.astype('float32')) # shape=(10, 9, 4)
output = relay.Tuple([call_5724,const_5733,uop_5747,])
output2 = relay.Tuple([call_5725,const_5733,uop_5749,])
func_5755 = relay.Function([], output)
mod['func_5755'] = func_5755
mod = relay.transform.InferType()(mod)
mutated_mod['func_5755'] = func_5755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5755_call = mutated_mod.get_global_var('func_5755')
call_5756 = func_5755_call()
output = call_5756
func_5757 = relay.Function([], output)
mutated_mod['func_5757'] = func_5757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5763 = relay.var("var_5763", dtype = "float64", shape = (15, 12, 5))#candidate|5763|(15, 12, 5)|var|float64
uop_5764 = relay.atan(var_5763.astype('float64')) # shape=(15, 12, 5)
func_3812_call = mod.get_global_var('func_3812')
func_3814_call = mutated_mod.get_global_var('func_3814')
const_5767 = relay.const([[5,6,-5,-2,1,-5,3,-3,-4,9,-2,-1,-1,-1,-4,-4,5,2,6,6,7,8,-3,-7,9,-2,6,-3,6,3,-3,10,8,7,7,3,-5,6,-9,6,10,1,1,-4,-10,-8,5,-2,-1,6,10,-2,10,2,2,9,6,-9,-6,6,1,2,4,-8,10,-3,-5,5,4,7,7,-9,8,2,2,-3,-1,-8,6,8,-1,-6,5,-6,-1,6,-10,1,-4,3,10,-8,8,4,3,10,4,-4,7,9,-2,-6,-9,-10,1,-8,9,1,-3,3,-8,9,7,10,-3,2,1,8,6,-2,3,-7,5,2,-3,-3,-8,-3,-6,-10]], dtype = "int16")#candidate|5767|(1, 130)|const|int16
call_5766 = relay.TupleGetItem(func_3812_call(relay.reshape(const_5767.astype('int16'), [130, 1])), 4)
call_5768 = relay.TupleGetItem(func_3814_call(relay.reshape(const_5767.astype('int16'), [130, 1])), 4)
output = relay.Tuple([uop_5764,call_5766,const_5767,])
output2 = relay.Tuple([uop_5764,call_5768,const_5767,])
func_5771 = relay.Function([var_5763,], output)
mod['func_5771'] = func_5771
mod = relay.transform.InferType()(mod)
var_5772 = relay.var("var_5772", dtype = "float64", shape = (15, 12, 5))#candidate|5772|(15, 12, 5)|var|float64
output = func_5771(var_5772)
func_5773 = relay.Function([var_5772], output)
mutated_mod['func_5773'] = func_5773
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5808 = relay.var("var_5808", dtype = "float64", shape = (15, 14, 4))#candidate|5808|(15, 14, 4)|var|float64
uop_5809 = relay.log2(var_5808.astype('float64')) # shape=(15, 14, 4)
output = uop_5809
output2 = uop_5809
func_5813 = relay.Function([var_5808,], output)
mod['func_5813'] = func_5813
mod = relay.transform.InferType()(mod)
var_5814 = relay.var("var_5814", dtype = "float64", shape = (15, 14, 4))#candidate|5814|(15, 14, 4)|var|float64
output = func_5813(var_5814)
func_5815 = relay.Function([var_5814], output)
mutated_mod['func_5815'] = func_5815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4613_call = mod.get_global_var('func_4613')
func_4614_call = mutated_mod.get_global_var('func_4614')
call_5844 = relay.TupleGetItem(func_4613_call(), 0)
call_5845 = relay.TupleGetItem(func_4614_call(), 0)
func_1940_call = mod.get_global_var('func_1940')
func_1942_call = mutated_mod.get_global_var('func_1942')
call_5846 = func_1940_call()
call_5847 = func_1940_call()
func_4422_call = mod.get_global_var('func_4422')
func_4424_call = mutated_mod.get_global_var('func_4424')
call_5852 = relay.TupleGetItem(func_4422_call(), 0)
call_5853 = relay.TupleGetItem(func_4424_call(), 0)
output = relay.Tuple([call_5844,call_5846,call_5852,])
output2 = relay.Tuple([call_5845,call_5847,call_5853,])
func_5854 = relay.Function([], output)
mod['func_5854'] = func_5854
mod = relay.transform.InferType()(mod)
output = func_5854()
func_5855 = relay.Function([], output)
mutated_mod['func_5855'] = func_5855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4384_call = mod.get_global_var('func_4384')
func_4386_call = mutated_mod.get_global_var('func_4386')
call_5886 = relay.TupleGetItem(func_4384_call(), 4)
call_5887 = relay.TupleGetItem(func_4386_call(), 4)
output = relay.Tuple([call_5886,])
output2 = relay.Tuple([call_5887,])
func_5893 = relay.Function([], output)
mod['func_5893'] = func_5893
mod = relay.transform.InferType()(mod)
output = func_5893()
func_5894 = relay.Function([], output)
mutated_mod['func_5894'] = func_5894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4969_call = mod.get_global_var('func_4969')
func_4971_call = mutated_mod.get_global_var('func_4971')
call_5993 = relay.TupleGetItem(func_4969_call(), 0)
call_5994 = relay.TupleGetItem(func_4971_call(), 0)
output = call_5993
output2 = call_5994
func_6001 = relay.Function([], output)
mod['func_6001'] = func_6001
mod = relay.transform.InferType()(mod)
mutated_mod['func_6001'] = func_6001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6001_call = mutated_mod.get_global_var('func_6001')
call_6002 = func_6001_call()
output = call_6002
func_6003 = relay.Function([], output)
mutated_mod['func_6003'] = func_6003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mod.get_global_var('func_2874')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_6024 = relay.TupleGetItem(func_2874_call(), 0)
call_6025 = relay.TupleGetItem(func_2876_call(), 0)
func_5078_call = mod.get_global_var('func_5078')
func_5079_call = mutated_mod.get_global_var('func_5079')
call_6029 = relay.TupleGetItem(func_5078_call(), 0)
call_6030 = relay.TupleGetItem(func_5079_call(), 0)
var_6048 = relay.var("var_6048", dtype = "float32", shape = (8, 10, 12))#candidate|6048|(8, 10, 12)|var|float32
bop_6049 = relay.power(call_6029.astype('float32'), relay.reshape(var_6048.astype('float32'), relay.shape_of(call_6029))) # shape=(8, 10, 12)
bop_6052 = relay.power(call_6030.astype('float32'), relay.reshape(var_6048.astype('float32'), relay.shape_of(call_6030))) # shape=(8, 10, 12)
output = relay.Tuple([call_6024,bop_6049,])
output2 = relay.Tuple([call_6025,bop_6052,])
func_6065 = relay.Function([var_6048,], output)
mod['func_6065'] = func_6065
mod = relay.transform.InferType()(mod)
mutated_mod['func_6065'] = func_6065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6066 = relay.var("var_6066", dtype = "float32", shape = (8, 10, 12))#candidate|6066|(8, 10, 12)|var|float32
func_6065_call = mutated_mod.get_global_var('func_6065')
call_6067 = func_6065_call(var_6066)
output = call_6067
func_6068 = relay.Function([var_6066], output)
mutated_mod['func_6068'] = func_6068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2617_call = mod.get_global_var('func_2617')
func_2619_call = mutated_mod.get_global_var('func_2619')
call_6081 = relay.TupleGetItem(func_2617_call(), 0)
call_6082 = relay.TupleGetItem(func_2619_call(), 0)
output = relay.Tuple([call_6081,])
output2 = relay.Tuple([call_6082,])
func_6089 = relay.Function([], output)
mod['func_6089'] = func_6089
mod = relay.transform.InferType()(mod)
output = func_6089()
func_6090 = relay.Function([], output)
mutated_mod['func_6090'] = func_6090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3355_call = mod.get_global_var('func_3355')
func_3356_call = mutated_mod.get_global_var('func_3356')
call_6161 = relay.TupleGetItem(func_3355_call(), 0)
call_6162 = relay.TupleGetItem(func_3356_call(), 0)
output = call_6161
output2 = call_6162
func_6164 = relay.Function([], output)
mod['func_6164'] = func_6164
mod = relay.transform.InferType()(mod)
mutated_mod['func_6164'] = func_6164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6164_call = mutated_mod.get_global_var('func_6164')
call_6165 = func_6164_call()
output = call_6165
func_6166 = relay.Function([], output)
mutated_mod['func_6166'] = func_6166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4893_call = mod.get_global_var('func_4893')
func_4895_call = mutated_mod.get_global_var('func_4895')
call_6194 = relay.TupleGetItem(func_4893_call(), 2)
call_6195 = relay.TupleGetItem(func_4895_call(), 2)
output = call_6194
output2 = call_6195
func_6202 = relay.Function([], output)
mod['func_6202'] = func_6202
mod = relay.transform.InferType()(mod)
output = func_6202()
func_6203 = relay.Function([], output)
mutated_mod['func_6203'] = func_6203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5078_call = mod.get_global_var('func_5078')
func_5079_call = mutated_mod.get_global_var('func_5079')
call_6270 = relay.TupleGetItem(func_5078_call(), 0)
call_6271 = relay.TupleGetItem(func_5079_call(), 0)
func_2437_call = mod.get_global_var('func_2437')
func_2440_call = mutated_mod.get_global_var('func_2440')
var_6295 = relay.var("var_6295", dtype = "float32", shape = (210,))#candidate|6295|(210,)|var|float32
call_6294 = relay.TupleGetItem(func_2437_call(relay.reshape(var_6295.astype('float32'), [210,])), 0)
call_6296 = relay.TupleGetItem(func_2440_call(relay.reshape(var_6295.astype('float32'), [210,])), 0)
func_4693_call = mod.get_global_var('func_4693')
func_4695_call = mutated_mod.get_global_var('func_4695')
call_6302 = relay.TupleGetItem(func_4693_call(), 2)
call_6303 = relay.TupleGetItem(func_4695_call(), 2)
func_1883_call = mod.get_global_var('func_1883')
func_1885_call = mutated_mod.get_global_var('func_1885')
call_6318 = func_1883_call()
call_6319 = func_1883_call()
func_4723_call = mod.get_global_var('func_4723')
func_4726_call = mutated_mod.get_global_var('func_4726')
const_6322 = relay.const([-0.588591,3.278507,9.326029,9.820769,2.472362,4.826306,0.695876,1.558883,-9.778277,-1.024279,-6.032792,5.937392,-8.831357,-2.766164,-8.641756,-0.922557,-4.609798,-4.194155,2.734962,8.335216,-8.889588,6.973710,2.533491,0.094920,9.240589,8.500075,-2.667242,3.328027,9.837357,-3.247381,-5.370038,1.799246,-3.042974,-8.630165,1.814058,6.613044,-3.202621,-1.597642,3.309064,0.663529,7.019500,-8.975296,-3.538644,-7.911144,8.710470,1.002984,7.904288,-0.875660,-4.186230,5.892676,1.245777,9.351068,-6.783444,8.379508,0.535369,-5.534116,8.504687,-8.877866,-9.719138,5.089898,2.292095,1.726621,7.260218,1.441620,-7.120666,-2.430541,8.898891,-6.377234,2.575428,8.544691,-8.956360,1.646122,-2.339316,1.056109,3.695288,-7.041589,1.088622,9.867257,1.341175,0.822662,-0.658405,2.445108,5.667499,4.375307,4.255920,-1.382782,-0.056921,9.447328,5.293313,-4.787790,-3.737273,-6.742060,-5.715536,-8.665750,-1.330949,-3.974994,8.058332,-3.465285,0.061394,0.397478,-0.119826,-5.756789,-6.072522,3.856845,7.967297,-1.804834,-0.992292,3.629547,-7.943207,-1.994025,9.453276,0.264983,1.264852,-1.530132,5.789420,8.480795,7.643929,1.596598,-7.857644,3.900778,-1.465597,3.819699,-5.459801,6.547222,-8.575442,1.944944,-5.597697,6.756900,-8.210477,-8.825448,4.293863,3.781215,-4.504267,-7.760673,6.123197,-8.659872,6.319228,-7.028450,-1.827291,4.385277,-5.906933,7.011577,0.369808,-6.545342,-0.670760,-8.860356,-9.780067,-6.539146,-3.911575,7.184490,-3.508817,0.346414,1.398211,-2.249816,1.101322,6.334327,-4.174559,4.029661,5.604889,-5.116898,-8.063569,2.385768,-1.433141,3.340855,4.686068,1.554024,-4.985073,6.003998,-4.310921,-5.249269,8.281557,6.474509,-7.449722,-4.829522,-2.563193,5.808496,1.626753,-0.545634,-0.471716,-6.575475,-7.232188,8.923955,-1.981647,7.981562,-5.703057,-7.406287,0.139102,-8.848976,-4.263144,5.891568,1.967842,-3.666686,2.382812,-8.418439,-3.191105,5.370444,-0.439357,-7.215910,-0.460987,-0.836110,7.531077,-3.578824,-5.757253,-9.261748,4.588581,-5.169575,-9.056364,8.148142,4.961976,6.536180,-0.183079,-0.899862,5.737573,6.600111,-7.674235,3.512499,3.711027,-4.553085,-4.950277,-3.619198,-2.293957,-1.929957,5.187309,5.954924,8.328430,4.427476,5.037043,0.139991,-3.160791,-3.008516,-4.356764,-7.692374,-6.896519,7.696683,0.341309,-4.286260,-7.992443,-2.387093,2.166432,-0.598412,-8.785396,-0.341749,-3.643227,-8.343841,8.051351,6.938586,-3.482440,7.001004,1.036544,7.487672,-3.050213,-8.326285,-4.291213,0.552564,-4.654119,6.419387,4.885276,5.258459,6.843540,-2.386474,-2.749891,-1.006425,9.342770,5.006889,-0.167759,6.969623,0.673407,-6.028230,-0.628128,8.696511,9.056133,6.879080,-3.218679,-1.258098,-7.202166,-7.506536,2.829992,-2.070328,-2.725838,2.438384,-6.510623,-2.936759,-6.446758,-3.959152,-4.501184,-5.273616,-4.343049,-6.018217,-8.538967,-2.992773,5.984105,7.993701,0.515940,6.668343,-4.619879,-3.175188,4.652502,-8.739851,1.797302,-1.645310,-0.788060,-3.384819,-4.976056,7.687314,0.744880,4.312788,2.111921,2.990410,-9.843291,-4.736629,3.108311,-1.108482,9.813713,7.237479,2.699747,-2.687681,-1.823549,-2.810876,8.952984,7.245461,7.576479,6.429046,7.723190,4.367565,0.320970,-4.434155,-1.038626,1.026109,9.689997,5.913438,-9.919822,-2.553314,-2.845321,4.881712,5.983107,-8.550597,-1.580930,2.928819,6.827629,6.653807,-7.044226,3.500670,-2.998101,6.933522,1.309924,-7.247147,-8.941614,-7.264278,0.058578,7.282538,-8.426633,4.144442,6.402012,3.389807,6.757109,-4.161271,-2.053811,8.144029,-8.636492,4.376344,8.423329,-1.089002,-9.467918,-9.647161,-6.624344,-1.123681,5.957295,1.416101,-2.341232,7.379873,-1.406593,-4.916356,-3.398261,6.828470,-3.694476,-2.999100,7.864186,3.659622,-9.649157,1.772335,0.551614,4.821813,-7.920383,-4.367426,9.342238,-4.288873,2.719326,4.123254,-8.565421,-6.386496,4.463889,-1.490599,6.994667,-8.115965,5.881685,0.547409,-8.747477,-6.577690,2.333944,3.347420,-9.082196,-4.168753,-7.182533,1.981527,0.185319,6.238478,0.726978,3.017579,-8.642162,-2.494471,0.753337,-3.105161,-6.899205,-1.314831,3.047884,6.844126,-1.303027,4.204945,4.757199,9.221527,0.226577,3.877462,3.734350,6.909295,-6.199636,7.987509,3.953261,6.104064,-3.577476,-4.302372,-3.898053,-9.160219,2.524848,4.109781,-8.663070,4.339366,-0.891682,-4.571396,8.333374,8.428681,4.995059,-1.967950,-4.046890,8.775779,3.765874,5.017406,2.950127,-2.137325,1.449246,5.045845,5.110919,4.515032,7.761556,5.643917,-3.721885,-5.577167,8.683147,-0.045301,2.103399,2.852326,6.247384,-9.173495,-3.830683,-3.780891,-6.805812,9.723687,-3.211025,0.340768,9.225436,4.543557,3.879571,6.103450,-3.979274,2.731773,1.548287,-7.852807,9.069170,8.982337,-0.449563,1.300240,2.651693,-5.995351,-7.805383,0.782440,-9.124629,8.734870,1.205013,-9.066332,-5.032829,3.950817,-8.792490,9.023702,-2.272998,1.695865,-2.694808,6.765238,-2.213162,1.816009,-3.708560,-3.197511,3.736004,-9.392026,-7.104439,-4.865330,-9.285014,6.867881,-2.472567,-3.060408,3.764073,2.697866,1.425529,-7.340471,-4.262614,-9.469643,-5.602444,2.612051,-1.575030,-6.719964,-9.981484,7.777567,-2.424036,-4.365635,6.424022,8.418214,-4.407617,-1.816903,-8.153332,5.076208,9.731730,5.480306,-0.449405,1.196891,-1.372339,-0.299191,6.932903,-9.952690,-3.707015,-5.682598,2.600865,-9.860212,-2.720356,2.689679,2.437610,0.049176,-4.748912,9.352843,5.579661,8.088865,-5.227394,-7.518845,-9.110947,-2.754911,7.834165,-6.987976,-9.263084,3.493027,-7.580417,6.744476,1.939729,-4.938242,2.860247,3.267480,-8.276944,1.020528,-6.312642,-9.569207,-0.374130,9.664674,9.338047,-5.307572,-4.866665,-3.787658,8.365002,3.372351,-9.730758,-0.244861,9.017236,-7.640962,2.818511,-2.961713,-0.105614,-1.121806,1.195138,-3.474327,4.863231,1.427099,-0.673466,-1.928632,4.692820,4.366034,2.772565,-1.583654,0.137065,9.727577,-8.926188,-5.652745,-2.457088,1.325856,-9.823280,3.520296,-2.769814,1.110165,-5.382598,-2.908303,0.413070,-1.113858,-4.108014,2.910578,9.445930,-3.498955,9.826690,-6.038761,5.940876,5.657826,-0.673062,5.197716,6.776103,6.939962,8.894976,-7.973260,7.734534,5.157303,2.757649,7.013555,3.376194,-4.345715,-4.684144,6.401411,-5.090153,0.122791,6.467356,1.917543,-0.144988,-5.770749,5.117525,-6.338866,3.569915,-7.578567,8.487173,-7.051058,8.966163,5.689787,0.432057,6.328040,0.795443,-8.805652,8.551267,-0.941930,7.845311,2.839712,2.381508,7.442559,-6.887911,4.532445,-3.345781,-6.250089,-9.929049,0.131671,-8.583404,0.208718,-3.813525,-0.870534,6.079514,6.030281,-4.484580,1.334920,-1.591504,-3.593174,-9.501452,-9.251897,6.803163,-3.834985,-9.951326,-3.318266,-0.730983,5.444315,9.055857,2.332411,-9.304661,7.384250,3.812531,-8.590500,-9.604450,-5.101831,-7.418652,2.227384,-3.875705,2.696433,1.745290,9.540006,5.522318,-9.113682,2.884371,2.836827,-7.477715,-8.549606,-9.346310,-0.648692,9.193016,2.930496,8.880610,-6.621507,5.536559,5.998509,9.614338,-6.763082,9.468550,8.021991,-4.957581,-4.523479,-5.046370,0.228864,6.514393,0.180081,-8.970862,-8.296415,0.809357,9.601978,-2.804541,6.899435,-1.532111,-5.988987,3.658431,-7.864478,-1.158793,-5.024163,8.945251,6.439685,4.550528,8.697846,-7.537210,-3.508959,-0.928574,-9.452943,-9.533216,-2.614111,5.692719,-0.387332,0.069057,3.122338,0.908216,-7.986507,5.374104,3.343661,-0.457970,-9.727681,-0.343121,-6.677335,7.732858,6.577718,-8.534687,-3.443772,-4.388196,-6.745360,5.832852,9.601200,-4.607862,6.472055,-3.851780,-6.435626,4.139830,1.328237,0.695934,3.281962,-3.386740,-9.163937,-1.764185,-6.357646,4.698019,-6.152121,-8.698816,4.562738,7.404896,-4.707601,9.548781,-0.332999,-6.766447,-1.686332,7.978181,-9.305936,-4.691211,4.080797,3.044847,6.407869,-5.337671,4.571969,-7.705997,1.897815,6.415096,9.522151,0.564281,8.125453,4.944660,4.064762,3.645232,-8.941078,6.815209,4.313935,0.666718,3.223650,-5.011516,3.631816,-8.106419,1.826680,-3.244156,-6.433597,-1.803655,7.927238,-7.298426,6.220938,-7.269557,2.497621,7.990175,-2.295914,-4.102625,-9.671985,-1.575706,9.913886,1.685433,-1.923421,6.181861,6.423657,5.862878,9.241661,3.348259,9.782502,-4.268183,3.613706,3.482610,-0.092112,-0.688110,7.948690,-7.064174,6.832648,6.765699,-0.031900,-1.640409,-2.512209,-8.732486,0.703761,-8.287965,-7.152173,-4.888460,-3.358519,5.302630,1.860693,-9.907573,4.006999,2.974636,-9.201551,-0.064349,3.740218,-4.819442,-1.309109,1.669860,-3.453430,6.506997,-6.473984,0.555087,0.879860,0.721142,-5.528763,3.118297,1.608313,-0.424224,9.652753,-5.429821,3.994035,4.767339,0.793169,-6.483763,-1.001463,-8.313761,5.800442,-4.310116,1.984178,8.491490,1.085451,1.165475,9.146764,-1.067219,-3.363482,1.206183,5.445192,-2.133888,0.431684,-3.230643,-0.978221,-4.554891,-5.894640,-7.663145,-5.444855,7.191406,7.914197,-1.697350,-5.267165,3.701492,9.248571,6.363416,6.390413,-7.900481,-9.600509,6.721289,6.562390,-2.419407,-7.850549,4.777941,-6.047313,-5.414869,0.975701,-4.307724,7.260849,8.592234,-2.781580,3.730983,-1.220138,-1.613907,-7.353708,7.614477,2.110224,-2.956001,-4.882519,-8.756998,-6.875664,-7.420752,-7.132265,-7.549605,3.390448,-8.314284,-8.767966,8.609129,9.056959,0.388516,8.331505,-2.008755,-2.707114,-0.669624,-8.693680,9.556804,7.769342,8.414329,-4.643235,1.934327,1.038679,6.961190,6.240429,-9.581299,-3.602996,1.033826,-1.095808,-9.413382,-9.287653,8.636393,0.461192,6.260331,0.960529,-1.717224,-6.923361,2.331735,-1.881788,2.766031,9.802193,-8.773889,0.995485,-8.296060,5.029053,-6.950102,7.408069,3.879658,-4.165467,-9.665594,3.909444,7.990301,-6.505331,0.025584,0.603843,1.311594,-3.790645,-1.787401,6.048729,1.924587,1.024902,-1.349985,7.948806,-4.811597,-2.419014,2.287186,7.024114,-1.291455,1.523296,-0.576359,-9.908376,-8.158357,-6.292113,6.921692,4.981517,-5.841019,-6.499647,7.815206,-5.035750,-0.270230,-3.042608,-6.379229,-8.106571,-2.285429,-2.516004,6.661643,-4.298222,9.572377,-4.482418,-2.359837,0.849654,8.752928,6.904807,-6.681266,-8.214910,-6.030714,-6.681734,-4.682411,9.346607,4.851131,-5.701403,0.684174,-3.359115,5.162442,7.111169,-7.615506,-9.451725,-6.181587,-2.826379,-3.864952,9.421312,-2.871497,8.670451,8.989310,2.307870,5.286280,5.784905,-8.757165,8.326917,-8.288071,0.274950,-7.710160,-3.088713,1.586914,6.674457,9.005692,-6.827682,-0.056684,0.089323,8.706675,-2.989644,-6.880122,7.887521,8.542212,-4.694233,3.093482,-7.357392,8.476117,-7.054982,-2.012156,-5.263883,0.421015,3.571749,7.955596,7.467183,7.643505,3.791244,6.343310,-7.038481,9.971482,-1.855775,-0.380494,-5.926036,-5.638738,-3.840180,-0.852920,-8.089672,2.164350,-5.929362,-3.075447,7.555640,2.933622,3.866873,1.453244,-1.042260,-5.973924,3.922949,0.204471,3.935614,0.906921,-9.518668,-5.270430,8.873355,-3.007291,-7.163696,9.705833,-6.273990,-5.930227,7.839109,1.918114,8.441375,-3.782717,-1.602405,-2.786000,9.773558,6.819734,-7.170200,9.910785,-6.330263,6.736293,-4.921987,-2.375744,5.044520,6.859417,5.024273,-0.207400,-0.864670,4.345507,0.924702], dtype = "float32")#candidate|6322|(1120,)|const|float32
call_6321 = func_4723_call(relay.reshape(const_6322.astype('float32'), [14, 5, 16]))
call_6323 = func_4723_call(relay.reshape(const_6322.astype('float32'), [14, 5, 16]))
func_5172_call = mod.get_global_var('func_5172')
func_5175_call = mutated_mod.get_global_var('func_5175')
call_6331 = relay.TupleGetItem(func_5172_call(relay.reshape(call_6270.astype('float32'), [8, 10, 12])), 0)
call_6332 = relay.TupleGetItem(func_5175_call(relay.reshape(call_6270.astype('float32'), [8, 10, 12])), 0)
func_2830_call = mod.get_global_var('func_2830')
func_2833_call = mutated_mod.get_global_var('func_2833')
const_6342 = relay.const(-3, dtype = "int32")#candidate|6342|()|const|int32
call_6341 = relay.TupleGetItem(func_2830_call(relay.reshape(const_6342.astype('int32'), [])), 0)
call_6343 = relay.TupleGetItem(func_2833_call(relay.reshape(const_6342.astype('int32'), [])), 0)
output = relay.Tuple([call_6270,call_6294,var_6295,call_6302,call_6318,call_6321,const_6322,call_6331,call_6341,const_6342,])
output2 = relay.Tuple([call_6271,call_6296,var_6295,call_6303,call_6319,call_6323,const_6322,call_6332,call_6343,const_6342,])
func_6344 = relay.Function([var_6295,], output)
mod['func_6344'] = func_6344
mod = relay.transform.InferType()(mod)
var_6345 = relay.var("var_6345", dtype = "float32", shape = (210,))#candidate|6345|(210,)|var|float32
output = func_6344(var_6345)
func_6346 = relay.Function([var_6345], output)
mutated_mod['func_6346'] = func_6346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_6348 = func_2013_call()
call_6349 = func_2013_call()
func_4384_call = mod.get_global_var('func_4384')
func_4386_call = mutated_mod.get_global_var('func_4386')
call_6362 = relay.TupleGetItem(func_4384_call(), 1)
call_6363 = relay.TupleGetItem(func_4386_call(), 1)
func_4893_call = mod.get_global_var('func_4893')
func_4895_call = mutated_mod.get_global_var('func_4895')
call_6368 = relay.TupleGetItem(func_4893_call(), 1)
call_6369 = relay.TupleGetItem(func_4895_call(), 1)
output = relay.Tuple([call_6348,call_6362,call_6368,])
output2 = relay.Tuple([call_6349,call_6363,call_6369,])
func_6370 = relay.Function([], output)
mod['func_6370'] = func_6370
mod = relay.transform.InferType()(mod)
mutated_mod['func_6370'] = func_6370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6370_call = mutated_mod.get_global_var('func_6370')
call_6371 = func_6370_call()
output = call_6371
func_6372 = relay.Function([], output)
mutated_mod['func_6372'] = func_6372
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6386 = relay.var("var_6386", dtype = "uint16", shape = ())#candidate|6386|()|var|uint16
var_6387 = relay.var("var_6387", dtype = "uint16", shape = (15, 8, 3))#candidate|6387|(15, 8, 3)|var|uint16
bop_6388 = relay.logical_xor(var_6386.astype('uint16'), var_6387.astype('uint16')) # shape=(15, 8, 3)
func_2804_call = mod.get_global_var('func_2804')
func_2807_call = mutated_mod.get_global_var('func_2807')
const_6392 = relay.const([-1,-5,6,-5,5,-9,9,-1,-4,2,-9,7,-3,1,5,10,2,-4,3,1,1,4,-1,-6,1,5,8,-7,2,-9,-10,2,4,-8,-9,8,9,2,4,-5,8,6,-3,-7,1,-9,-6,-2,-8,7,1,7,-5,10,-7,-8,-6,-8,-7,1,2,-10,-4,9,5,9,-1,-8,7,10,4,8,-2,8,-5,9,10,6,-2,-5,-2,4,5,2,1,-6,9,6,4,1,2,7,-9,-7,-9,-1,9,4,9,-5,-7,-5,7,-8,-5,10,-10,3,-1,2,3,3,-9,7,5,8,3,10,7,2,-8,-1,-1,-10,5,4,-5,3,4,-2], dtype = "int16")#candidate|6392|(130,)|const|int16
call_6391 = relay.TupleGetItem(func_2804_call(relay.reshape(const_6392.astype('int16'), [130,])), 0)
call_6393 = relay.TupleGetItem(func_2807_call(relay.reshape(const_6392.astype('int16'), [130,])), 0)
output = relay.Tuple([bop_6388,call_6391,const_6392,])
output2 = relay.Tuple([bop_6388,call_6393,const_6392,])
func_6445 = relay.Function([var_6386,var_6387,], output)
mod['func_6445'] = func_6445
mod = relay.transform.InferType()(mod)
var_6446 = relay.var("var_6446", dtype = "uint16", shape = ())#candidate|6446|()|var|uint16
var_6447 = relay.var("var_6447", dtype = "uint16", shape = (15, 8, 3))#candidate|6447|(15, 8, 3)|var|uint16
output = func_6445(var_6446,var_6447,)
func_6448 = relay.Function([var_6446,var_6447,], output)
mutated_mod['func_6448'] = func_6448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_6478 = func_4240_call()
call_6479 = func_4240_call()
output = call_6478
output2 = call_6479
func_6497 = relay.Function([], output)
mod['func_6497'] = func_6497
mod = relay.transform.InferType()(mod)
mutated_mod['func_6497'] = func_6497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6497_call = mutated_mod.get_global_var('func_6497')
call_6498 = func_6497_call()
output = call_6498
func_6499 = relay.Function([], output)
mutated_mod['func_6499'] = func_6499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4384_call = mod.get_global_var('func_4384')
func_4386_call = mutated_mod.get_global_var('func_4386')
call_6515 = relay.TupleGetItem(func_4384_call(), 4)
call_6516 = relay.TupleGetItem(func_4386_call(), 4)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_6519 = func_2013_call()
call_6520 = func_2013_call()
func_3990_call = mod.get_global_var('func_3990')
func_3991_call = mutated_mod.get_global_var('func_3991')
call_6531 = relay.TupleGetItem(func_3990_call(), 0)
call_6532 = relay.TupleGetItem(func_3991_call(), 0)
func_4723_call = mod.get_global_var('func_4723')
func_4726_call = mutated_mod.get_global_var('func_4726')
var_6534 = relay.var("var_6534", dtype = "float32", shape = (1120,))#candidate|6534|(1120,)|var|float32
call_6533 = func_4723_call(relay.reshape(var_6534.astype('float32'), [14, 5, 16]))
call_6535 = func_4723_call(relay.reshape(var_6534.astype('float32'), [14, 5, 16]))
output = relay.Tuple([call_6515,call_6519,call_6531,call_6533,var_6534,])
output2 = relay.Tuple([call_6516,call_6520,call_6532,call_6535,var_6534,])
func_6537 = relay.Function([var_6534,], output)
mod['func_6537'] = func_6537
mod = relay.transform.InferType()(mod)
mutated_mod['func_6537'] = func_6537
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6538 = relay.var("var_6538", dtype = "float32", shape = (1120,))#candidate|6538|(1120,)|var|float32
func_6537_call = mutated_mod.get_global_var('func_6537')
call_6539 = func_6537_call(var_6538)
output = call_6539
func_6540 = relay.Function([var_6538], output)
mutated_mod['func_6540'] = func_6540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6089_call = mod.get_global_var('func_6089')
func_6090_call = mutated_mod.get_global_var('func_6090')
call_6546 = relay.TupleGetItem(func_6089_call(), 0)
call_6547 = relay.TupleGetItem(func_6090_call(), 0)
uop_6549 = relay.log2(call_6546.astype('float64')) # shape=(8, 10, 12)
uop_6551 = relay.log2(call_6547.astype('float64')) # shape=(8, 10, 12)
output = uop_6549
output2 = uop_6551
func_6552 = relay.Function([], output)
mod['func_6552'] = func_6552
mod = relay.transform.InferType()(mod)
output = func_6552()
func_6553 = relay.Function([], output)
mutated_mod['func_6553'] = func_6553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3677_call = mod.get_global_var('func_3677')
func_3679_call = mutated_mod.get_global_var('func_3679')
call_6646 = func_3677_call()
call_6647 = func_3677_call()
output = relay.Tuple([call_6646,])
output2 = relay.Tuple([call_6647,])
func_6652 = relay.Function([], output)
mod['func_6652'] = func_6652
mod = relay.transform.InferType()(mod)
output = func_6652()
func_6653 = relay.Function([], output)
mutated_mod['func_6653'] = func_6653
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6654 = relay.var("var_6654", dtype = "float64", shape = (9, 4, 11))#candidate|6654|(9, 4, 11)|var|float64
uop_6655 = relay.sigmoid(var_6654.astype('float64')) # shape=(9, 4, 11)
const_6706 = relay.const([[[6.198422,-4.648074,-3.734113,-1.722516,-0.803129,-2.094245,-0.993072,1.768240,-9.824932,8.920966,-5.158215],[-6.812973,6.793491,6.755113,-6.264187,-6.805028,8.583562,9.321727,3.935483,9.515585,4.680565,-0.479896],[-0.967071,3.059330,7.485866,7.040237,-2.059036,0.946148,6.419510,-1.497152,-2.426354,-5.066004,6.196326],[8.903385,1.354916,-7.955260,-8.025890,-4.560330,-0.007522,2.350068,6.928722,-0.997370,-1.129076,3.605971]],[[-6.763452,3.452034,8.560512,4.753952,9.861156,6.900312,8.479259,3.679595,-3.632956,5.166462,-6.270661],[-0.115584,4.788875,9.893626,2.925628,-6.333924,5.125122,-7.165363,3.326445,2.114969,-9.336772,6.341866],[5.510760,4.376237,-2.011623,-6.076552,8.266446,-1.415166,1.170327,-5.201112,6.568351,1.918408,-1.991436],[2.958216,0.778039,6.061800,8.960479,3.725410,1.005662,6.592788,5.597101,-3.187802,-6.045234,-1.429249]],[[3.377343,-2.625565,2.891410,1.896796,9.744725,3.248479,5.387763,-3.822281,7.726698,8.362872,-1.807433],[-8.346301,8.372724,-8.514919,-7.481518,9.031435,0.910823,-7.506643,4.510339,5.360369,-8.943204,4.391222],[3.781488,-4.137710,-2.942117,2.559266,-2.245957,-8.897390,2.824863,-2.680826,9.780329,7.679464,0.391358],[4.601887,3.908347,-3.807179,1.918675,0.681415,9.524353,8.575841,-5.893185,8.415946,8.410725,-9.684824]],[[-8.134041,-4.388769,-6.698690,1.822988,2.845908,1.641986,8.590564,-1.179364,4.810369,7.548128,3.160350],[-8.658449,2.982965,9.841266,-8.374629,7.086239,-6.206681,-1.875212,4.964973,-2.238732,7.499215,2.356233],[5.180322,7.226486,-6.754589,-7.701550,-4.507017,2.590767,-2.059004,-6.455230,-0.229431,5.067948,6.147038],[8.081630,8.141280,2.522637,0.179384,5.886606,-5.312772,-5.644875,4.924465,-6.467833,3.879157,-2.959883]],[[-5.603921,-4.605894,-3.813740,9.851179,-6.716611,7.518743,4.198762,-9.704499,5.603414,0.559986,-0.415063],[-4.473234,-8.990759,3.971082,-0.284700,2.619585,-3.014367,1.390555,-1.409352,-9.134916,-4.976509,-5.875694],[-5.681274,-8.769212,8.449871,7.165624,3.827423,5.617032,8.958602,-0.904703,-0.496199,-7.910775,7.542371],[-4.514348,7.160993,-3.905215,-9.116708,6.421003,9.621971,-6.648348,7.534120,9.212206,-0.060569,8.096093]],[[1.344019,9.279192,0.385666,6.659044,-4.764959,-0.255755,-7.441550,1.411127,-5.070586,-6.855107,-9.291238],[-4.772155,-2.767735,7.942083,-1.984789,-8.398460,-8.957481,-4.689419,-7.782524,-0.842100,9.172407,-7.517752],[-9.090680,-6.402989,-5.118987,-9.464880,3.608648,-9.585072,-1.231985,-6.119087,-7.207386,2.995956,3.327875],[0.604306,1.335895,-8.610066,-2.939033,-9.222218,-9.621157,8.257395,6.496611,8.187322,-4.091350,9.777068]],[[4.467618,-9.541497,-7.425565,-0.960509,3.951491,9.213880,-6.716438,9.459930,-7.231941,9.020234,-2.865882],[0.235508,-9.208446,-0.886896,6.914168,-0.815947,-4.208601,-5.172316,-2.127859,-6.612814,-7.290351,-8.843448],[1.032630,-2.386812,8.566735,-3.602449,-6.582827,-4.337121,-5.086618,-3.664722,-7.460945,7.025029,2.612464],[2.250452,-3.205079,0.357465,-9.981659,5.673355,9.429373,2.186409,6.871370,-0.756755,-6.447927,6.370471]],[[1.946432,-1.359446,-7.017737,-2.393485,8.151234,8.465871,0.354827,6.581524,-7.068947,7.474255,-3.062438],[-2.846954,-9.955030,3.038780,0.113729,-7.884079,-4.418269,-2.036412,-5.502834,-3.351364,1.370433,7.267419],[-8.970464,-8.216847,-4.391004,-8.326619,-9.944149,-1.799898,0.623418,9.685104,-9.935614,-3.637443,-3.602320],[8.519531,5.243514,6.069763,5.766428,-5.049864,9.265424,-7.660491,-4.305316,-3.720212,-7.817223,-9.633718]],[[-1.509463,-1.310596,1.413829,-4.342925,-5.384362,-8.548473,1.273851,-6.711762,-1.311976,0.703341,3.807262],[7.763362,-7.842988,-6.629550,6.202026,1.217319,8.661341,-3.035218,-1.987331,-8.459015,7.127103,-7.718079],[-6.301021,1.990955,2.148797,-0.530139,0.468447,1.484704,4.809296,-3.487710,-9.298309,4.171169,3.125361],[-2.330169,-5.762944,-5.530174,4.792416,-7.763296,3.257851,-9.704162,-0.576485,4.727917,2.198477,-0.102780]]], dtype = "float64")#candidate|6706|(9, 4, 11)|const|float64
bop_6707 = relay.logical_or(var_6654.astype('bool'), relay.reshape(const_6706.astype('bool'), relay.shape_of(var_6654))) # shape=(9, 4, 11)
output = relay.Tuple([uop_6655,bop_6707,])
output2 = relay.Tuple([uop_6655,bop_6707,])
func_6720 = relay.Function([var_6654,], output)
mod['func_6720'] = func_6720
mod = relay.transform.InferType()(mod)
var_6721 = relay.var("var_6721", dtype = "float64", shape = (9, 4, 11))#candidate|6721|(9, 4, 11)|var|float64
output = func_6720(var_6721)
func_6722 = relay.Function([var_6721], output)
mutated_mod['func_6722'] = func_6722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2469_call = mod.get_global_var('func_2469')
func_2471_call = mutated_mod.get_global_var('func_2471')
call_6747 = relay.TupleGetItem(func_2469_call(), 2)
call_6748 = relay.TupleGetItem(func_2471_call(), 2)
func_6720_call = mod.get_global_var('func_6720')
func_6722_call = mutated_mod.get_global_var('func_6722')
const_6758 = relay.const([-5.847678,-8.603704,5.108247,-4.131242,-9.017576,3.696767,6.232491,0.315388,5.521990,3.957522,9.615654,9.739358,-7.703459,-8.841116,-4.118452,7.238653,3.192898,8.112161,2.706874,-0.056045,0.926440,7.035724,-0.456156,-9.961360,3.177493,0.252350,-6.055292,-7.913315,2.117146,-8.773103,-3.465851,-2.507745,2.033346,0.083840,-4.145446,-3.457340,0.865221,-5.045594,2.384691,9.768671,4.310656,5.032650,9.849096,-3.322083,-1.490733,-5.875798,-2.336370,-8.474094,-2.951314,-1.406516,5.321094,-6.302773,-4.477427,3.575576,-3.227975,-9.932859,8.287771,1.722118,-2.085859,6.294584,-7.340192,5.911503,9.313898,-7.782034,4.034851,-6.451013,1.761584,7.739303,7.762093,7.548862,5.249294,4.539356,1.348671,4.963701,0.560583,-9.322665,-6.730235,-1.651319,7.569712,3.346255,-2.371076,-8.302968,8.821012,6.113958,-3.878275,-8.833245,4.119430,-8.869603,-5.247989,-3.841348,-2.172339,6.983151,-3.425642,-1.478209,-1.334264,5.628844,6.188608,-6.681466,8.996793,-8.960478,6.903643,-9.394941,-7.619315,9.643775,-5.090740,-5.582620,8.598425,-2.269767,-8.568464,1.182570,-2.062441,8.933756,-9.960850,-8.639343,7.271516,0.247360,0.820341,8.272108,-8.041260,-5.303424,-9.551753,-1.139785,-4.047667,-7.420490,1.447874,9.200968,-4.268209,-6.810557,2.718787,-1.078501,2.736790,8.314637,0.129767,-9.117176,3.950657,8.341087,-2.988496,8.113044,-9.372953,2.999020,-9.384819,6.855777,0.731501,9.908029,9.362091,8.230210,-3.478719,0.467341,-6.315245,6.915585,9.071837,7.880849,-3.522552,-5.709707,-2.369369,0.707022,7.461450,9.141740,-1.317375,3.048255,6.472310,-3.125269,0.750609,5.473877,5.428866,1.157324,9.522550,-8.874033,-1.433115,-9.383183,-4.779097,8.029967,5.782736,-8.074616,8.438520,9.753771,9.570156,-1.513995,3.819964,-8.594582,6.335873,0.477158,-9.267315,-3.741721,1.935507,-6.392527,-5.917932,7.619140,-4.322409,4.235324,8.738130,-5.063203,-3.767136,4.071011,5.759178,7.396559,8.310648,9.312216,-0.016901,-2.325042,0.712925,-6.953852,-7.203780,8.740265,9.951377,2.136597,7.892095,1.416488,-8.240605,4.296067,-4.630282,-8.311821,-5.484448,-7.851783,-5.096428,-6.135113,0.162369,5.788559,-1.198138,-0.208729,-8.010315,-3.932923,-0.876860,5.243936,-7.320848,-7.864947,8.658012,-5.824996,-5.507869,8.779893,-1.022157,-2.203311,-2.675845,6.851935,-3.134708,-3.490327,1.913915,-4.630590,8.028915,9.758999,7.400531,-7.268646,-3.380837,-8.860643,5.748963,6.599991,1.836547,5.267715,-1.221000,-0.363683,8.337092,9.396930,8.277533,-0.407458,1.294080,-3.671898,4.138994,-6.682906,4.324490,-5.993768,-8.593644,-6.509226,-8.645056,6.887860,9.935546,8.892572,-4.202114,0.953574,7.546864,-9.159825,8.847519,6.650866,-3.141507,0.090478,-7.775709,-9.016633,7.697560,-1.608107,4.023067,-8.452003,1.223428,5.920100,-6.287806,6.569871,-2.446593,2.590396,-8.789505,-9.764596,-4.011138,-3.168549,1.651094,3.591930,-0.009031,-3.004819,0.738466,-0.813383,5.995618,-5.883741,-8.766519,3.793914,-1.740805,1.387252,9.015820,0.434763,1.946285,-7.353854,-2.167614,0.047865,5.810618,-5.911198,5.483269,9.698403,-3.060076,-8.155992,5.388795,4.729409,-7.242703,-9.863269,-4.816032,4.703121,2.944480,7.738823,0.379497,-2.215501,-3.744990,1.323283,0.231395,-8.151058,2.617757,5.381675,-2.125718,-8.373969,2.642568,-9.120073,-5.312062,6.819573,4.625999,1.022648,4.827809,3.257338,1.833495,9.347363,6.835890,-1.370349,2.954125,5.706969,1.117159,-6.904828,-4.522548,-3.422502,1.849819,6.337178,-4.123603,4.623649,-5.263471,-6.111022,-1.141015,1.199510,3.594833,-5.195124,4.716333,5.505703,3.966505,5.266141,-6.255274,-7.706679,0.207753,3.085616,-1.989776,2.912291,4.564194,-5.579664,-7.808424,-7.783403,-1.150714,-5.926989,-5.523006,-1.054820,3.714370,-0.093053,3.675925,6.378515,-9.426422,0.594925,-3.324014,1.524263,-9.125057,1.314081,3.623541,-8.782225,-4.376496,8.687424,-0.315747,-1.448177,3.000422,-3.865885], dtype = "float64")#candidate|6758|(396,)|const|float64
call_6757 = relay.TupleGetItem(func_6720_call(relay.reshape(const_6758.astype('float64'), [9, 4, 11])), 0)
call_6759 = relay.TupleGetItem(func_6722_call(relay.reshape(const_6758.astype('float64'), [9, 4, 11])), 0)
output = relay.Tuple([call_6747,call_6757,const_6758,])
output2 = relay.Tuple([call_6748,call_6759,const_6758,])
func_6788 = relay.Function([], output)
mod['func_6788'] = func_6788
mod = relay.transform.InferType()(mod)
mutated_mod['func_6788'] = func_6788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6788_call = mutated_mod.get_global_var('func_6788')
call_6789 = func_6788_call()
output = call_6789
func_6790 = relay.Function([], output)
mutated_mod['func_6790'] = func_6790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6001_call = mod.get_global_var('func_6001')
func_6003_call = mutated_mod.get_global_var('func_6003')
call_6793 = func_6001_call()
call_6794 = func_6001_call()
output = call_6793
output2 = call_6794
func_6798 = relay.Function([], output)
mod['func_6798'] = func_6798
mod = relay.transform.InferType()(mod)
mutated_mod['func_6798'] = func_6798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6798_call = mutated_mod.get_global_var('func_6798')
call_6799 = func_6798_call()
output = call_6799
func_6800 = relay.Function([], output)
mutated_mod['func_6800'] = func_6800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5078_call = mod.get_global_var('func_5078')
func_5079_call = mutated_mod.get_global_var('func_5079')
call_6863 = relay.TupleGetItem(func_5078_call(), 0)
call_6864 = relay.TupleGetItem(func_5079_call(), 0)
output = relay.Tuple([call_6863,])
output2 = relay.Tuple([call_6864,])
func_6867 = relay.Function([], output)
mod['func_6867'] = func_6867
mod = relay.transform.InferType()(mod)
output = func_6867()
func_6868 = relay.Function([], output)
mutated_mod['func_6868'] = func_6868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3559_call = mod.get_global_var('func_3559')
func_3561_call = mutated_mod.get_global_var('func_3561')
call_6878 = relay.TupleGetItem(func_3559_call(), 0)
call_6879 = relay.TupleGetItem(func_3561_call(), 0)
func_2649_call = mod.get_global_var('func_2649')
func_2651_call = mutated_mod.get_global_var('func_2651')
call_6894 = relay.TupleGetItem(func_2649_call(), 0)
call_6895 = relay.TupleGetItem(func_2651_call(), 0)
output = relay.Tuple([call_6878,call_6894,])
output2 = relay.Tuple([call_6879,call_6895,])
func_6898 = relay.Function([], output)
mod['func_6898'] = func_6898
mod = relay.transform.InferType()(mod)
output = func_6898()
func_6899 = relay.Function([], output)
mutated_mod['func_6899'] = func_6899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6898_call = mod.get_global_var('func_6898')
func_6899_call = mutated_mod.get_global_var('func_6899')
call_6922 = relay.TupleGetItem(func_6898_call(), 1)
call_6923 = relay.TupleGetItem(func_6899_call(), 1)
func_5678_call = mod.get_global_var('func_5678')
func_5680_call = mutated_mod.get_global_var('func_5680')
call_6924 = func_5678_call()
call_6925 = func_5678_call()
output = relay.Tuple([call_6922,call_6924,])
output2 = relay.Tuple([call_6923,call_6925,])
func_6934 = relay.Function([], output)
mod['func_6934'] = func_6934
mod = relay.transform.InferType()(mod)
output = func_6934()
func_6935 = relay.Function([], output)
mutated_mod['func_6935'] = func_6935
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6996 = relay.var("var_6996", dtype = "float64", shape = (9, 9, 10))#candidate|6996|(9, 9, 10)|var|float64
const_6997 = relay.const([[[-5.957730,-6.855679,9.409612,8.072200,8.450444,-3.380138,0.593096,-1.732680,7.865237,-6.252537],[9.841658,-6.637648,-5.491002,0.157676,3.950723,3.004787,9.789359,3.273311,9.894346,-5.736873],[8.427147,5.210971,-9.649129,-0.484653,5.569669,7.751228,-9.904816,-6.094761,-8.571028,8.009828],[-3.537334,-8.768720,-2.864932,-6.313982,-0.746101,8.343588,4.039465,9.225524,-1.671426,8.733086],[-4.218648,4.493451,-4.444086,-7.880082,1.636659,5.343635,-3.586745,-8.121181,8.444703,-9.698344],[3.474794,-4.417163,-9.347802,-1.040704,9.248148,-7.877047,-2.870960,-3.946856,6.641989,1.694938],[2.181090,-7.688187,-3.966780,-2.500520,-2.269292,-3.442206,-1.119612,-6.686716,-5.381003,-8.610113],[9.867123,4.026636,-5.832653,-8.620416,-3.002489,-7.967571,-6.700470,9.141920,0.033524,8.594764],[-5.835703,2.628749,-2.094147,9.209225,-2.582313,-9.919565,9.832973,9.746314,7.451418,1.225212]],[[-6.451792,7.795793,1.243836,6.866761,0.647205,-4.163104,-2.761022,-7.532154,0.401644,2.700909],[9.202514,4.358022,-8.770365,-2.167781,0.427473,6.099329,-5.821884,-4.701416,-1.404997,-6.548054],[-9.508244,3.238370,3.260964,1.325952,-3.659083,-0.503138,-7.894631,-6.593602,2.440431,8.785661],[-0.315086,-4.282496,1.806549,-4.615753,-3.451227,1.657675,7.129027,-4.153133,1.500834,-4.280214],[-2.922925,9.257351,-7.315690,4.701656,2.658987,-9.300652,-4.368723,-6.082389,-3.153774,3.521102],[0.596488,2.674141,9.048814,9.499839,-5.349613,-5.035215,2.944741,4.450955,3.154795,7.443547],[0.088206,6.246071,-8.458782,-9.227020,-0.933719,9.776018,-1.859783,6.846260,-9.566553,-7.134697],[-1.663592,-6.402976,5.020508,2.284331,-4.164168,5.547541,9.866880,6.332934,-6.884461,-6.119776],[2.719798,-4.180425,-6.280300,-8.867701,5.613492,3.132095,9.648009,6.287960,-6.391271,-7.251471]],[[1.434818,-9.647622,-5.476211,-6.176111,7.381389,5.374948,-8.684966,5.881213,0.747511,-5.885587],[-0.937549,-1.064979,6.919514,-2.269192,2.611700,-2.313216,-0.602511,8.596300,2.024740,6.861753],[-6.633603,7.508576,6.452336,9.888581,-4.406268,2.353581,-1.010804,0.020689,7.931312,3.765086],[-3.336144,1.194490,-3.206018,7.675813,-3.618591,0.868839,5.703781,8.270485,1.721487,-3.520531],[-7.895210,-2.928711,8.637647,-1.561094,-5.854604,4.955633,-4.110806,8.088978,6.309676,-1.938688],[-5.835165,-1.563809,-1.514898,-1.361512,3.845687,-6.973517,-5.579420,-3.603787,-9.902070,-5.241547],[-5.722146,9.749672,-6.399157,3.693106,8.949812,7.788990,9.135366,7.728600,9.685215,5.269474],[-6.228476,4.414508,9.103668,2.798001,-2.318522,-0.857800,2.030222,2.884534,-5.271047,-4.012419],[-9.951168,0.727073,4.137151,-3.505148,-0.524384,0.390073,0.548198,0.307565,-1.531153,-6.195653]],[[-1.919031,6.535628,-4.400231,4.704198,-1.729069,-5.013129,0.463816,-8.268794,-7.185549,-0.257415],[6.447249,-6.626233,-5.680461,2.346260,-6.577947,7.769065,-4.920027,-5.441911,-4.396194,4.880208],[8.974936,8.206505,-4.405447,-9.465767,-5.544033,7.474109,-1.608951,-3.696294,-4.032183,-1.605740],[9.974028,9.120292,-2.812947,-1.348342,-2.390840,4.586511,3.374314,-4.737970,0.356999,4.242079],[1.788129,0.561306,-8.096625,-4.932684,6.699758,4.968112,8.517496,-7.221265,-6.191673,-0.845392],[-7.483253,6.582963,-0.295987,3.279913,-6.237179,-7.752543,-5.574468,8.188633,6.099235,4.093771],[-3.502969,-7.995949,0.888324,-0.346914,2.339482,-9.658660,-0.764268,-6.815569,-0.862387,-1.112572],[-7.034407,-6.351504,-4.039141,8.201567,-2.090169,-9.356793,7.833036,-7.452892,9.144858,-8.255921],[9.524879,1.761581,-6.168142,-6.948793,7.448053,5.008305,9.020176,-3.669859,-8.053802,-8.247216]],[[-2.386865,2.161928,0.371872,6.148762,-8.998871,2.082635,-4.138724,-0.846345,-2.324675,2.300361],[3.506852,6.626703,2.109990,2.655554,7.650694,-3.089036,-1.842860,4.242069,9.537359,9.841698],[4.458761,3.945007,7.765146,-2.411289,-3.590450,7.738104,6.346211,8.953065,5.306318,-8.647671],[-6.192587,-4.113875,-1.187197,-4.114092,-4.376539,-4.226715,-8.160139,-5.533580,0.091878,-7.111995],[-3.834000,3.954631,-0.259376,-9.685060,1.042673,7.637552,3.064774,2.649253,6.003202,3.879894],[2.387200,0.551297,7.162472,4.234950,6.446615,5.114301,9.660846,7.290940,9.246477,9.132548],[-4.405999,-6.075068,6.818618,6.276433,0.281103,-4.076315,-9.677581,-5.139394,3.925209,-6.193197],[2.141392,3.299922,1.104254,4.540816,-6.149256,0.380382,7.205091,6.540195,8.070789,6.534828],[0.140978,4.502282,-4.057109,-2.383161,8.494994,-5.291556,-7.920917,-3.443525,-9.800693,-6.446668]],[[-5.579436,4.991351,5.233717,-6.007162,3.132077,1.136934,-4.394071,9.437288,-8.173276,-6.742364],[-6.626645,4.006484,-7.429915,-9.782893,8.572472,-9.869886,1.016766,3.773887,-8.065588,1.613130],[5.174517,-2.417595,-9.996522,-8.603735,7.877251,-2.880919,8.241364,-5.394048,7.851786,-4.991559],[3.464450,6.923672,-7.163130,1.486149,-4.495829,1.589421,8.312587,7.688441,3.974066,1.669469],[9.598671,-1.289481,1.084985,-8.130521,-6.556947,5.162629,4.872412,-7.793734,5.888869,-4.986832],[-7.390351,0.622283,-8.454572,8.168112,1.488017,-9.355998,0.708553,8.215412,-5.009632,9.309997],[5.914042,-8.306790,0.026407,-5.012141,5.067360,8.261579,-7.474985,2.298301,1.905878,-5.739669],[6.879385,1.733442,-9.810810,4.576450,0.470033,6.526501,5.298100,9.608846,-1.287068,2.600489],[5.766892,7.207935,-2.649997,-6.121993,-3.213138,-2.509137,2.457857,-2.026909,-4.281221,-8.678030]],[[-8.118095,-0.667782,-1.320578,2.481905,-2.618550,-7.279539,1.110309,1.129715,-5.855474,7.542728],[4.771942,9.207253,-6.353494,-6.080066,6.810593,-4.000486,-7.098105,-8.432245,-5.572280,4.017207],[-6.889507,-4.796411,3.561437,2.126829,2.924144,-3.400517,-0.725248,-4.518094,3.827877,-5.928618],[6.645793,4.643779,6.630247,-8.427250,2.395420,-7.359931,7.051751,5.402829,7.846690,1.631070],[2.426486,0.242560,7.317370,-4.969528,-5.844266,7.337891,2.812573,1.238833,-6.027944,1.229123],[8.972994,-2.723471,-1.996171,6.301331,-7.607383,8.842614,0.048012,-4.246866,-7.755177,9.807998],[0.562314,-0.590891,3.383194,5.805012,-8.533796,6.679458,6.827052,-5.962466,2.105442,7.389786],[-9.993095,-8.441812,0.589423,-6.046075,9.931994,-9.611614,0.914209,-3.167950,-4.715360,-0.382218],[-1.847177,-3.568252,4.556941,4.205782,-3.792299,1.353870,9.379831,-0.703278,-9.842562,-3.411910]],[[7.580096,-2.354443,-1.606165,0.819873,-2.420072,9.340956,-4.211165,-2.685305,-8.208807,-3.484911],[-9.704331,-7.071598,6.390309,-3.992318,8.273715,-1.034979,3.722752,3.394276,3.124055,-9.292122],[8.296147,-3.814388,3.014918,4.441572,-9.936016,5.587915,0.883988,4.340972,-8.875876,-1.614811],[-3.955243,-8.229845,5.152015,4.461926,1.756294,2.897870,6.962561,-3.813470,-1.091520,5.645469],[0.959557,-8.665497,-9.317348,-5.870002,5.378987,-0.995502,4.660139,-4.453395,6.085715,2.131053],[2.312646,3.805980,-8.212653,-7.958200,7.204535,8.077683,-6.906150,-0.276488,1.963375,5.497162],[3.415993,3.071717,4.975177,-8.344951,3.435876,2.739915,-7.018704,-2.622708,-0.641099,7.165014],[-2.462441,-6.930823,-3.617193,0.590430,9.791400,2.519101,-5.388557,9.173072,-7.841498,-5.535177],[3.373178,-3.484021,-8.770573,-9.432956,8.010786,3.128028,2.830742,-1.487744,-3.562346,9.851136]],[[2.318020,-5.646469,8.393184,1.970529,4.380093,-3.692880,6.230001,-2.239158,0.473746,-4.828847],[5.642167,-6.677497,4.564410,-1.550593,-1.128410,-6.878397,-9.186053,7.264544,-9.702102,1.927999],[0.462852,1.522464,9.490347,-4.858850,-2.516383,9.766895,-5.247924,-4.036295,2.659399,6.326408],[4.089337,9.348664,0.688803,5.470880,1.023253,9.383626,-4.715563,3.101836,9.776787,-4.804828],[-2.122515,8.246842,4.338998,-1.595243,-8.759164,-9.559514,0.649185,-2.999491,0.621473,8.707997],[-6.036700,7.032772,4.082401,-9.880753,-2.112297,-2.957938,2.792124,-7.306232,-6.853190,4.097676],[-5.895477,-0.231735,7.552239,-8.321894,-2.744771,7.096598,8.886578,-6.587030,9.920762,1.046061],[1.122099,-3.309132,9.889170,-9.274475,9.731465,-3.552123,2.861691,-4.707055,8.504209,3.720537],[-0.507249,0.613681,8.166855,-5.118555,-1.007756,5.248448,9.341019,-9.821621,-7.877060,-1.118083]]], dtype = "float64")#candidate|6997|(9, 9, 10)|const|float64
bop_6998 = relay.divide(var_6996.astype('float64'), relay.reshape(const_6997.astype('float64'), relay.shape_of(var_6996))) # shape=(9, 9, 10)
output = bop_6998
output2 = bop_6998
func_7001 = relay.Function([var_6996,], output)
mod['func_7001'] = func_7001
mod = relay.transform.InferType()(mod)
var_7002 = relay.var("var_7002", dtype = "float64", shape = (9, 9, 10))#candidate|7002|(9, 9, 10)|var|float64
output = func_7001(var_7002)
func_7003 = relay.Function([var_7002], output)
mutated_mod['func_7003'] = func_7003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3571_call = mod.get_global_var('func_3571')
func_3572_call = mutated_mod.get_global_var('func_3572')
call_7019 = func_3571_call()
call_7020 = func_3571_call()
output = call_7019
output2 = call_7020
func_7033 = relay.Function([], output)
mod['func_7033'] = func_7033
mod = relay.transform.InferType()(mod)
output = func_7033()
func_7034 = relay.Function([], output)
mutated_mod['func_7034'] = func_7034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4930_call = mod.get_global_var('func_4930')
func_4932_call = mutated_mod.get_global_var('func_4932')
call_7057 = relay.TupleGetItem(func_4930_call(), 0)
call_7058 = relay.TupleGetItem(func_4932_call(), 0)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_7067 = func_4240_call()
call_7068 = func_4240_call()
func_4930_call = mod.get_global_var('func_4930')
func_4932_call = mutated_mod.get_global_var('func_4932')
call_7087 = relay.TupleGetItem(func_4930_call(), 0)
call_7088 = relay.TupleGetItem(func_4932_call(), 0)
output = relay.Tuple([call_7057,call_7067,call_7087,])
output2 = relay.Tuple([call_7058,call_7068,call_7088,])
func_7092 = relay.Function([], output)
mod['func_7092'] = func_7092
mod = relay.transform.InferType()(mod)
output = func_7092()
func_7093 = relay.Function([], output)
mutated_mod['func_7093'] = func_7093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5560_call = mod.get_global_var('func_5560')
func_5561_call = mutated_mod.get_global_var('func_5561')
call_7121 = func_5560_call()
call_7122 = func_5560_call()
output = relay.Tuple([call_7121,])
output2 = relay.Tuple([call_7122,])
func_7128 = relay.Function([], output)
mod['func_7128'] = func_7128
mod = relay.transform.InferType()(mod)
output = func_7128()
func_7129 = relay.Function([], output)
mutated_mod['func_7129'] = func_7129
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7163 = relay.var("var_7163", dtype = "float64", shape = ())#candidate|7163|()|var|float64
var_7164 = relay.var("var_7164", dtype = "float64", shape = (12, 5, 2))#candidate|7164|(12, 5, 2)|var|float64
bop_7165 = relay.greater(var_7163.astype('bool'), var_7164.astype('bool')) # shape=(12, 5, 2)
output = relay.Tuple([bop_7165,])
output2 = relay.Tuple([bop_7165,])
func_7172 = relay.Function([var_7163,var_7164,], output)
mod['func_7172'] = func_7172
mod = relay.transform.InferType()(mod)
mutated_mod['func_7172'] = func_7172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7172_call = mutated_mod.get_global_var('func_7172')
var_7174 = relay.var("var_7174", dtype = "float64", shape = ())#candidate|7174|()|var|float64
var_7175 = relay.var("var_7175", dtype = "float64", shape = (12, 5, 2))#candidate|7175|(12, 5, 2)|var|float64
call_7173 = func_7172_call(var_7174,var_7175,)
output = call_7173
func_7176 = relay.Function([var_7174,var_7175,], output)
mutated_mod['func_7176'] = func_7176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7224 = relay.var("var_7224", dtype = "float64", shape = (7, 16, 3))#candidate|7224|(7, 16, 3)|var|float64
uop_7225 = relay.exp(var_7224.astype('float64')) # shape=(7, 16, 3)
output = uop_7225
output2 = uop_7225
func_7231 = relay.Function([var_7224,], output)
mod['func_7231'] = func_7231
mod = relay.transform.InferType()(mod)
var_7232 = relay.var("var_7232", dtype = "float64", shape = (7, 16, 3))#candidate|7232|(7, 16, 3)|var|float64
output = func_7231(var_7232)
func_7233 = relay.Function([var_7232], output)
mutated_mod['func_7233'] = func_7233
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7260 = relay.var("var_7260", dtype = "float64", shape = (1, 10, 14))#candidate|7260|(1, 10, 14)|var|float64
var_7261 = relay.var("var_7261", dtype = "float64", shape = (15, 10, 14))#candidate|7261|(15, 10, 14)|var|float64
bop_7262 = relay.mod(var_7260.astype('float64'), var_7261.astype('float64')) # shape=(15, 10, 14)
func_2323_call = mod.get_global_var('func_2323')
func_2326_call = mutated_mod.get_global_var('func_2326')
const_7268 = relay.const([1.000805,7.253797,-1.026768,-6.048472,3.413522,3.295859,-0.972067,3.451729,8.021494,3.655143,5.177079,1.668356,-3.705528,-4.161767,0.155729,-6.065654,5.683465,6.779229,8.523531,2.070822,-9.726244,-4.664413,-3.778328,-1.091680,3.374992,2.067463,0.116479,-9.377584,9.809459,3.818771,-6.632491,5.074198,8.966054,-0.824856,-0.130907,-6.093884,-8.606234,0.988190,-4.326863,-1.903850,-7.058023,-7.514708,0.083649,4.085056,-1.236996,8.754086,-1.269893,-1.590545,5.050229,-6.309527,6.977914,3.663995,9.544475,-1.085195,-8.386235,-0.916570,0.100196,4.313101,8.486985,1.530786,4.806121,2.937278,-1.223362,-7.965586,-1.903676,1.888009,5.893416,2.963370,-8.310323,-3.188275,3.502894,5.858105,8.281345,0.408318,7.119311,-1.625622,3.883600,-0.332678,-5.881283,0.823483,7.242979,-8.731627,2.331510,-1.754444,8.566804,6.997220,1.974823,7.636830,5.927672,2.752983,-7.012751,4.431151,4.079418,9.558447,-7.110234,-6.255036,5.409398,-2.075725,3.601355,-3.608477,5.077110,2.601571,-8.496519,-4.057054,5.747317,-6.810455,8.995842,6.447964,1.065690,-0.958678,4.805746,-6.353177,3.423327,-2.681832,9.443058,-8.596695,-1.430107,3.879594,-6.706985,-0.984569,7.683011,3.791720,-7.386186,-6.367288,0.705665,-3.945821,8.114769,-3.879269,8.835358,2.119926,2.910047,-8.313841,8.008639,7.253192,8.360331,2.276043,-1.760102,0.872225,3.481977,8.477149,4.773850,-6.681545,-9.876911,2.069582,3.486679,-7.456429,-9.542037,-1.487876,-0.612690,-0.504971,6.281645,-5.038359,-5.594152,-8.892927,2.212709,9.441370,6.002524,-8.958129,-9.637521,-3.728956,-7.637721,-1.217917,5.551794,5.324825,-5.976927,2.593925,4.178667,-1.105774,9.734757,-1.339988,-8.864924,5.474521,8.154538,8.502647,-9.652733,9.689484,-9.340889,9.306499,-1.959920,3.155698,-9.050753,-9.982420,-5.766283,-8.960711,8.293665,9.858655,-4.663294,-4.378462,-7.079865,4.323485,1.785408,2.347208,-8.855063,5.499546,6.618477,-3.205761,0.359124,-2.121260,1.690729,7.549591,8.461981,-3.149064,-9.766255,7.703652,-1.767167,2.629766,9.848683,1.457566,1.044027,-1.599401], dtype = "float32")#candidate|7268|(210,)|const|float32
call_7267 = relay.TupleGetItem(func_2323_call(relay.reshape(const_7268.astype('float32'), [14, 1, 15])), 0)
call_7269 = relay.TupleGetItem(func_2326_call(relay.reshape(const_7268.astype('float32'), [14, 1, 15])), 0)
func_6898_call = mod.get_global_var('func_6898')
func_6899_call = mutated_mod.get_global_var('func_6899')
call_7271 = relay.TupleGetItem(func_6898_call(), 1)
call_7272 = relay.TupleGetItem(func_6899_call(), 1)
output = relay.Tuple([bop_7262,call_7267,const_7268,call_7271,])
output2 = relay.Tuple([bop_7262,call_7269,const_7268,call_7272,])
func_7277 = relay.Function([var_7260,var_7261,], output)
mod['func_7277'] = func_7277
mod = relay.transform.InferType()(mod)
mutated_mod['func_7277'] = func_7277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7277_call = mutated_mod.get_global_var('func_7277')
var_7279 = relay.var("var_7279", dtype = "float64", shape = (1, 10, 14))#candidate|7279|(1, 10, 14)|var|float64
var_7280 = relay.var("var_7280", dtype = "float64", shape = (15, 10, 14))#candidate|7280|(15, 10, 14)|var|float64
call_7278 = func_7277_call(var_7279,var_7280,)
output = call_7278
func_7281 = relay.Function([var_7279,var_7280,], output)
mutated_mod['func_7281'] = func_7281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5365_call = mod.get_global_var('func_5365')
func_5367_call = mutated_mod.get_global_var('func_5367')
call_7309 = relay.TupleGetItem(func_5365_call(), 0)
call_7310 = relay.TupleGetItem(func_5367_call(), 0)
func_4209_call = mod.get_global_var('func_4209')
func_4213_call = mutated_mod.get_global_var('func_4213')
var_7313 = relay.var("var_7313", dtype = "uint16", shape = (525,))#candidate|7313|(525,)|var|uint16
var_7314 = relay.var("var_7314", dtype = "float64", shape = (1008,))#candidate|7314|(1008,)|var|float64
call_7312 = relay.TupleGetItem(func_4209_call(relay.reshape(var_7313.astype('uint16'), [15, 7, 5]), relay.reshape(var_7314.astype('float64'), [1008,]), ), 5)
call_7315 = relay.TupleGetItem(func_4213_call(relay.reshape(var_7313.astype('uint16'), [15, 7, 5]), relay.reshape(var_7314.astype('float64'), [1008,]), ), 5)
func_3946_call = mod.get_global_var('func_3946')
func_3949_call = mutated_mod.get_global_var('func_3949')
var_7317 = relay.var("var_7317", dtype = "int32", shape = (390, 1))#candidate|7317|(390, 1)|var|int32
const_7318 = relay.const([False,False,False,True,False,True,False,True,True,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,True,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,False,True,True,False,False,False,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,True,False,False,False,False,True,False,False,True,True,True,False,False,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,False,False,True,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,False,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,True,False,False,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,True,True,True,False,False,False,False,True,False,False,False,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,False,True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,False,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,False,True,False,True,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,False,False,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,False,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,False,True,True,False,False,True,False,False,True,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,False,True,False,False,False,False,False], dtype = "bool")#candidate|7318|(1296,)|const|bool
call_7316 = relay.TupleGetItem(func_3946_call(relay.reshape(var_7317.astype('int32'), [390,]), relay.reshape(const_7318.astype('bool'), [6, 216]), ), 7)
call_7319 = relay.TupleGetItem(func_3949_call(relay.reshape(var_7317.astype('int32'), [390,]), relay.reshape(const_7318.astype('bool'), [6, 216]), ), 7)
bop_7336 = relay.left_shift(call_7316.astype('int32'), var_7317.astype('int32')) # shape=(14, 390, 15)
bop_7339 = relay.left_shift(call_7319.astype('int32'), var_7317.astype('int32')) # shape=(14, 390, 15)
output = relay.Tuple([call_7309,call_7312,var_7313,var_7314,const_7318,bop_7336,])
output2 = relay.Tuple([call_7310,call_7315,var_7313,var_7314,const_7318,bop_7339,])
func_7343 = relay.Function([var_7313,var_7314,var_7317,], output)
mod['func_7343'] = func_7343
mod = relay.transform.InferType()(mod)
mutated_mod['func_7343'] = func_7343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7343_call = mutated_mod.get_global_var('func_7343')
var_7345 = relay.var("var_7345", dtype = "uint16", shape = (525,))#candidate|7345|(525,)|var|uint16
var_7346 = relay.var("var_7346", dtype = "float64", shape = (1008,))#candidate|7346|(1008,)|var|float64
var_7347 = relay.var("var_7347", dtype = "int32", shape = (390, 1))#candidate|7347|(390, 1)|var|int32
call_7344 = func_7343_call(var_7345,var_7346,var_7347,)
output = call_7344
func_7348 = relay.Function([var_7345,var_7346,var_7347,], output)
mutated_mod['func_7348'] = func_7348
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7352 = relay.var("var_7352", dtype = "float64", shape = (13, 11, 14))#candidate|7352|(13, 11, 14)|var|float64
uop_7353 = relay.tan(var_7352.astype('float64')) # shape=(13, 11, 14)
output = relay.Tuple([uop_7353,])
output2 = relay.Tuple([uop_7353,])
func_7380 = relay.Function([var_7352,], output)
mod['func_7380'] = func_7380
mod = relay.transform.InferType()(mod)
var_7381 = relay.var("var_7381", dtype = "float64", shape = (13, 11, 14))#candidate|7381|(13, 11, 14)|var|float64
output = func_7380(var_7381)
func_7382 = relay.Function([var_7381], output)
mutated_mod['func_7382'] = func_7382
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7410 = relay.var("var_7410", dtype = "uint32", shape = (11, 12, 3))#candidate|7410|(11, 12, 3)|var|uint32
var_7411 = relay.var("var_7411", dtype = "uint32", shape = (11, 12, 3))#candidate|7411|(11, 12, 3)|var|uint32
bop_7412 = relay.multiply(var_7410.astype('uint32'), relay.reshape(var_7411.astype('uint32'), relay.shape_of(var_7410))) # shape=(11, 12, 3)
func_5755_call = mod.get_global_var('func_5755')
func_5757_call = mutated_mod.get_global_var('func_5757')
call_7428 = relay.TupleGetItem(func_5755_call(), 1)
call_7429 = relay.TupleGetItem(func_5757_call(), 1)
func_6497_call = mod.get_global_var('func_6497')
func_6499_call = mutated_mod.get_global_var('func_6499')
call_7434 = func_6497_call()
call_7435 = func_6497_call()
output = relay.Tuple([bop_7412,call_7428,call_7434,])
output2 = relay.Tuple([bop_7412,call_7429,call_7435,])
func_7436 = relay.Function([var_7410,var_7411,], output)
mod['func_7436'] = func_7436
mod = relay.transform.InferType()(mod)
var_7437 = relay.var("var_7437", dtype = "uint32", shape = (11, 12, 3))#candidate|7437|(11, 12, 3)|var|uint32
var_7438 = relay.var("var_7438", dtype = "uint32", shape = (11, 12, 3))#candidate|7438|(11, 12, 3)|var|uint32
output = func_7436(var_7437,var_7438,)
func_7439 = relay.Function([var_7437,var_7438,], output)
mutated_mod['func_7439'] = func_7439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5089_call = mod.get_global_var('func_5089')
func_5091_call = mutated_mod.get_global_var('func_5091')
call_7536 = func_5089_call()
call_7537 = func_5089_call()
var_7543 = relay.var("var_7543", dtype = "float32", shape = (14, 5, 15))#candidate|7543|(14, 5, 15)|var|float32
bop_7544 = relay.bitwise_xor(call_7536.astype('int32'), var_7543.astype('int32')) # shape=(14, 5, 15)
bop_7547 = relay.bitwise_xor(call_7537.astype('int32'), var_7543.astype('int32')) # shape=(14, 5, 15)
func_2289_call = mod.get_global_var('func_2289')
func_2290_call = mutated_mod.get_global_var('func_2290')
call_7554 = relay.TupleGetItem(func_2289_call(), 0)
call_7555 = relay.TupleGetItem(func_2290_call(), 0)
output = relay.Tuple([bop_7544,call_7554,])
output2 = relay.Tuple([bop_7547,call_7555,])
func_7557 = relay.Function([var_7543,], output)
mod['func_7557'] = func_7557
mod = relay.transform.InferType()(mod)
var_7558 = relay.var("var_7558", dtype = "float32", shape = (14, 5, 15))#candidate|7558|(14, 5, 15)|var|float32
output = func_7557(var_7558)
func_7559 = relay.Function([var_7558], output)
mutated_mod['func_7559'] = func_7559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4841_call = mod.get_global_var('func_4841')
func_4843_call = mutated_mod.get_global_var('func_4843')
call_7574 = func_4841_call()
call_7575 = func_4841_call()
uop_7583 = relay.rsqrt(call_7574.astype('float32')) # shape=(10, 8, 8)
uop_7585 = relay.rsqrt(call_7575.astype('float32')) # shape=(10, 8, 8)
output = relay.Tuple([uop_7583,])
output2 = relay.Tuple([uop_7585,])
func_7587 = relay.Function([], output)
mod['func_7587'] = func_7587
mod = relay.transform.InferType()(mod)
mutated_mod['func_7587'] = func_7587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7587_call = mutated_mod.get_global_var('func_7587')
call_7588 = func_7587_call()
output = call_7588
func_7589 = relay.Function([], output)
mutated_mod['func_7589'] = func_7589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_7595 = func_4240_call()
call_7596 = func_4240_call()
output = call_7595
output2 = call_7596
func_7611 = relay.Function([], output)
mod['func_7611'] = func_7611
mod = relay.transform.InferType()(mod)
output = func_7611()
func_7612 = relay.Function([], output)
mutated_mod['func_7612'] = func_7612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7128_call = mod.get_global_var('func_7128')
func_7129_call = mutated_mod.get_global_var('func_7129')
call_7616 = relay.TupleGetItem(func_7128_call(), 0)
call_7617 = relay.TupleGetItem(func_7129_call(), 0)
uop_7626 = relay.cos(call_7616.astype('float32')) # shape=(9, 13, 5)
uop_7628 = relay.cos(call_7617.astype('float32')) # shape=(9, 13, 5)
output = uop_7626
output2 = uop_7628
func_7630 = relay.Function([], output)
mod['func_7630'] = func_7630
mod = relay.transform.InferType()(mod)
mutated_mod['func_7630'] = func_7630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7630_call = mutated_mod.get_global_var('func_7630')
call_7631 = func_7630_call()
output = call_7631
func_7632 = relay.Function([], output)
mutated_mod['func_7632'] = func_7632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6089_call = mod.get_global_var('func_6089')
func_6090_call = mutated_mod.get_global_var('func_6090')
call_7633 = relay.TupleGetItem(func_6089_call(), 0)
call_7634 = relay.TupleGetItem(func_6090_call(), 0)
func_3220_call = mod.get_global_var('func_3220')
func_3222_call = mutated_mod.get_global_var('func_3222')
var_7639 = relay.var("var_7639", dtype = "float32", shape = (1, 33))#candidate|7639|(1, 33)|var|float32
call_7638 = relay.TupleGetItem(func_3220_call(relay.reshape(var_7639.astype('float32'), [3, 11, 1])), 2)
call_7640 = relay.TupleGetItem(func_3222_call(relay.reshape(var_7639.astype('float32'), [3, 11, 1])), 2)
uop_7641 = relay.log2(call_7638.astype('float64')) # shape=(1296,)
uop_7643 = relay.log2(call_7640.astype('float64')) # shape=(1296,)
uop_7648 = relay.atan(uop_7641.astype('float32')) # shape=(1296,)
uop_7650 = relay.atan(uop_7643.astype('float32')) # shape=(1296,)
output = relay.Tuple([call_7633,var_7639,uop_7648,])
output2 = relay.Tuple([call_7634,var_7639,uop_7650,])
func_7657 = relay.Function([var_7639,], output)
mod['func_7657'] = func_7657
mod = relay.transform.InferType()(mod)
mutated_mod['func_7657'] = func_7657
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7658 = relay.var("var_7658", dtype = "float32", shape = (1, 33))#candidate|7658|(1, 33)|var|float32
func_7657_call = mutated_mod.get_global_var('func_7657')
call_7659 = func_7657_call(var_7658)
output = call_7659
func_7660 = relay.Function([var_7658], output)
mutated_mod['func_7660'] = func_7660
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7672 = relay.const([[[5.355380,-8.316749,3.762829,-1.356970,2.998634],[5.418014,-9.675986,-4.134771,9.572169,9.906191],[-7.070913,-8.506838,0.454027,0.837307,-4.185355],[-0.474981,6.248467,-4.502352,6.186923,9.486617],[0.202498,-0.350366,3.462102,8.354753,4.556112],[3.870631,-8.484937,0.296642,-0.104563,-8.192498],[8.638680,8.960197,-0.298046,7.236002,-9.458223],[-3.868719,-7.015855,-2.286651,6.541406,-0.175417],[-5.130477,-2.243238,7.201262,7.090736,6.635705],[-0.760396,-0.310112,9.172922,7.338707,6.095596],[1.109445,0.986416,-9.743790,5.031242,-3.335693],[6.413816,-1.173062,1.607344,5.408459,1.787901],[6.345987,-2.897549,1.351790,-9.021284,-2.628273],[3.278783,4.815521,0.054140,-8.186245,-9.689934]],[[-9.442972,1.355923,3.739365,-6.148005,6.446646],[8.469092,9.742700,3.494167,1.009055,4.623200],[2.954453,-1.014746,-5.623055,-0.214794,-1.970133],[4.912407,-5.676492,9.966661,7.623380,1.707814],[-6.082459,4.353641,-6.720079,-0.173889,-7.803695],[9.236867,-5.329709,7.536270,-8.955927,0.593800],[-6.288162,5.443409,-2.545298,-6.193899,2.934581],[-0.180498,4.009127,2.687220,-6.973642,0.137665],[-4.037363,-6.317920,-5.764941,4.097305,-3.670517],[-4.148883,6.877421,5.936935,-2.327090,6.259595],[4.126727,2.162065,-7.010449,-9.256157,1.403901],[7.287252,1.453921,-3.764274,4.818836,-8.851087],[3.049661,-3.008099,-7.852919,-1.827348,-8.655544],[-7.555786,6.880023,-2.901820,0.161503,0.107610]],[[-4.276926,-1.840690,-7.383836,-4.592591,-2.634010],[2.044837,4.208253,-4.417131,-4.242490,-9.375152],[-1.980426,-0.780074,0.981430,7.794332,-9.568489],[3.948079,-4.646583,-4.223182,-3.489700,-1.427251],[3.943236,-3.513683,-9.491120,-2.274009,2.522736],[0.720799,-9.041086,-4.676957,-1.375108,-5.688121],[-1.624124,3.685995,6.588447,9.789152,-5.974367],[-2.668916,-7.692067,-3.306240,9.086825,9.359849],[-9.122457,-7.030566,-7.681113,-0.457951,0.675200],[1.148177,-4.714944,-4.243767,-4.937362,5.932919],[4.155440,-4.456478,0.340587,-9.240047,-5.528308],[3.693459,-8.795880,6.939472,-0.290286,8.824718],[-8.670560,9.994084,-3.619913,-8.254767,-4.095458],[1.322753,1.409860,9.106321,9.030452,9.786064]],[[8.797784,-5.331544,-0.322511,-8.426585,4.164423],[-9.692705,8.438825,-1.898090,1.124998,-8.646665],[-7.912395,-3.925022,-3.404540,-1.362466,2.644814],[8.533332,7.324787,6.773817,4.139308,-1.215240],[0.997437,-8.012025,9.729754,-8.733515,5.296137],[-9.459545,9.728416,7.322526,-9.598872,4.313871],[2.872630,-2.281050,-5.086982,-1.989493,9.341022],[-9.844128,-2.776650,2.398119,0.735688,-3.554538],[1.721918,-9.377469,1.821427,-8.867882,-8.967131],[-4.432442,-3.990314,-2.014723,-9.554500,-8.355533],[4.493167,-4.604565,9.985976,8.737863,-0.674501],[7.163196,-4.908858,-3.631458,8.532074,3.846348],[-3.696665,2.036448,-5.046922,0.414179,-4.676855],[4.671274,-9.578209,2.886392,5.925068,-4.785397]],[[4.075534,6.642030,1.003028,1.096224,-2.672539],[-1.731191,-9.248717,4.466324,2.548099,4.060884],[-7.216738,-9.270137,6.417491,-7.789665,-6.267177],[-0.557465,-1.248797,-7.499504,4.091801,-7.620873],[-7.434570,-4.376821,-9.206284,-3.237834,-5.924827],[-1.552610,-5.582856,0.286527,-1.649568,-9.401271],[-3.209026,-5.288328,1.029487,-8.305069,4.353360],[-0.735150,-9.140987,-8.968120,8.412124,-1.043039],[7.759798,-4.449834,8.991222,3.198156,-7.786712],[6.063540,-4.946518,2.071015,-8.945328,-8.391854],[4.242376,0.854545,4.133661,-9.096406,-2.913267],[-6.652622,3.210108,3.460771,-9.854146,0.527628],[6.576724,0.136790,-4.063860,6.924664,-8.178031],[-1.224412,-1.988256,2.630842,-5.334747,-7.034037]]], dtype = "float64")#candidate|7672|(5, 14, 5)|const|float64
uop_7673 = relay.exp(const_7672.astype('float64')) # shape=(5, 14, 5)
uop_7680 = relay.atanh(uop_7673.astype('float32')) # shape=(5, 14, 5)
output = relay.Tuple([uop_7680,])
output2 = relay.Tuple([uop_7680,])
func_7685 = relay.Function([], output)
mod['func_7685'] = func_7685
mod = relay.transform.InferType()(mod)
mutated_mod['func_7685'] = func_7685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7685_call = mutated_mod.get_global_var('func_7685')
call_7686 = func_7685_call()
output = call_7686
func_7687 = relay.Function([], output)
mutated_mod['func_7687'] = func_7687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7033_call = mod.get_global_var('func_7033')
func_7034_call = mutated_mod.get_global_var('func_7034')
call_7693 = func_7033_call()
call_7694 = func_7033_call()
func_2830_call = mod.get_global_var('func_2830')
func_2833_call = mutated_mod.get_global_var('func_2833')
var_7698 = relay.var("var_7698", dtype = "int32", shape = ())#candidate|7698|()|var|int32
call_7697 = relay.TupleGetItem(func_2830_call(relay.reshape(var_7698.astype('int32'), [])), 0)
call_7699 = relay.TupleGetItem(func_2833_call(relay.reshape(var_7698.astype('int32'), [])), 0)
output = relay.Tuple([call_7693,call_7697,var_7698,])
output2 = relay.Tuple([call_7694,call_7699,var_7698,])
func_7703 = relay.Function([var_7698,], output)
mod['func_7703'] = func_7703
mod = relay.transform.InferType()(mod)
var_7704 = relay.var("var_7704", dtype = "int32", shape = ())#candidate|7704|()|var|int32
output = func_7703(var_7704)
func_7705 = relay.Function([var_7704], output)
mutated_mod['func_7705'] = func_7705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4841_call = mod.get_global_var('func_4841')
func_4843_call = mutated_mod.get_global_var('func_4843')
call_7707 = func_4841_call()
call_7708 = func_4841_call()
func_4499_call = mod.get_global_var('func_4499')
func_4503_call = mutated_mod.get_global_var('func_4503')
var_7714 = relay.var("var_7714", dtype = "uint64", shape = (360,))#candidate|7714|(360,)|var|uint64
call_7713 = func_4499_call(relay.reshape(var_7714.astype('uint64'), [10, 9, 4]), relay.reshape(var_7714.astype('uint64'), [10, 9, 4]), )
call_7715 = func_4499_call(relay.reshape(var_7714.astype('uint64'), [10, 9, 4]), relay.reshape(var_7714.astype('uint64'), [10, 9, 4]), )
func_2437_call = mod.get_global_var('func_2437')
func_2440_call = mutated_mod.get_global_var('func_2440')
const_7717 = relay.const([[2.431269,9.215828],[6.798589,8.994941],[2.509995,3.271480],[2.346293,-5.319220],[-2.464159,3.223834],[3.373287,-6.969737],[0.601318,1.881276],[1.759691,3.315253],[8.434054,-2.356458],[-4.495157,2.906527],[4.538508,-2.071306],[-8.092226,0.470280],[0.887285,8.412987],[6.730939,-0.508139],[-2.627801,7.431012],[-8.046742,-4.059090],[9.318659,-6.742111],[-0.035242,7.279706],[6.255050,-6.812970],[6.390032,-2.498987],[3.211276,7.315079],[0.646425,8.007046],[2.828028,3.851623],[3.811327,0.119908],[8.716669,4.641405],[-2.722942,7.818334],[-6.951664,1.078435],[-3.217799,-0.903194],[-9.145262,-8.038459],[-7.183328,6.917064],[-0.708643,6.848315],[-2.682879,8.043514],[-7.948074,-9.029412],[1.633421,-9.345297],[0.037848,6.017239],[8.140165,2.677336],[4.111983,1.139692],[6.495551,4.747253],[-5.345115,-5.954244],[-9.860797,-9.573484],[-3.259157,4.286801],[-0.429411,5.629909],[1.430738,1.659092],[2.245944,-5.468743],[0.224774,-9.623941],[-0.760110,-7.244009],[-1.530683,-2.953553],[-9.710612,3.518859],[4.423281,3.306647],[2.081707,7.986429],[5.039212,4.338716],[-2.486652,-0.612454],[-9.314534,-0.453227],[-3.770972,2.540791],[5.351203,1.992517],[-0.347246,-5.693164],[0.207638,2.220616],[7.267487,-0.647553],[-6.564377,6.221165],[3.803791,-1.326214],[-3.500471,6.381140],[9.179392,9.978937],[-7.300297,1.062946],[3.402045,-3.707500],[2.662634,0.930570],[-3.872649,9.006962],[-5.294955,4.788830],[-3.015310,2.887189],[2.436433,-2.166364],[3.911961,1.996105],[-1.784535,-3.839441],[4.412168,2.079712],[-9.452732,6.785072],[-9.322768,8.543243],[7.475538,-5.844117],[-1.265165,-0.698748],[-7.512007,7.203220],[-1.345189,1.845843],[4.412515,-9.916525],[-3.617130,8.229951],[2.081039,-2.006552],[1.198328,-3.422465],[-4.078525,0.273463],[-6.873103,-7.871302],[-6.530767,-5.305998],[8.346215,7.295911],[9.786049,3.636300],[7.380130,-3.409066],[8.656323,-1.651623],[9.010048,3.599150],[-3.490531,-1.489864],[-3.733960,3.847918],[-4.065066,1.342135],[-4.304335,-6.894788],[-2.404133,0.145649],[-9.852121,-9.039324],[-8.264251,6.424278],[8.346767,-2.961301],[9.605030,-7.298765],[3.914957,-0.008091],[5.184501,7.839211],[-2.904791,8.571471],[6.564651,7.726791],[1.983547,4.358359],[-1.607442,1.923545]], dtype = "float32")#candidate|7717|(105, 2)|const|float32
call_7716 = relay.TupleGetItem(func_2437_call(relay.reshape(const_7717.astype('float32'), [210,])), 1)
call_7718 = relay.TupleGetItem(func_2440_call(relay.reshape(const_7717.astype('float32'), [210,])), 1)
output = relay.Tuple([call_7707,call_7713,var_7714,call_7716,const_7717,])
output2 = relay.Tuple([call_7708,call_7715,var_7714,call_7718,const_7717,])
func_7741 = relay.Function([var_7714,], output)
mod['func_7741'] = func_7741
mod = relay.transform.InferType()(mod)
var_7742 = relay.var("var_7742", dtype = "uint64", shape = (360,))#candidate|7742|(360,)|var|uint64
output = func_7741(var_7742)
func_7743 = relay.Function([var_7742], output)
mutated_mod['func_7743'] = func_7743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2617_call = mod.get_global_var('func_2617')
func_2619_call = mutated_mod.get_global_var('func_2619')
call_7754 = relay.TupleGetItem(func_2617_call(), 2)
call_7755 = relay.TupleGetItem(func_2619_call(), 2)
output = relay.Tuple([call_7754,])
output2 = relay.Tuple([call_7755,])
func_7758 = relay.Function([], output)
mod['func_7758'] = func_7758
mod = relay.transform.InferType()(mod)
output = func_7758()
func_7759 = relay.Function([], output)
mutated_mod['func_7759'] = func_7759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_7793 = func_2013_call()
call_7794 = func_2013_call()
func_6445_call = mod.get_global_var('func_6445')
func_6448_call = mutated_mod.get_global_var('func_6448')
const_7796 = relay.const(10, dtype = "uint16")#candidate|7796|()|const|uint16
const_7797 = relay.const([4,10,3,8,-6,-1,-4,-7,4,6,2,3,1,-8,-1,-6,8,-8,5,1,2,10,-10,-1,-2,-8,-2,-8,4,-3,-10,1,-4,3,7,-1,-5,-5,7,9,2,-6,2,-7,-10,3,-9,10,-7,3,6,-3,4,-5,-5,-2,4,3,-2,4,1,1,-4,-5,5,-5,1,-3,-9,8,5,-2,8,4,-6,-9,8,8,3,4,-1,-9,8,-9,-10,-2,-7,-3,10,2,-8,4,2,-7,-5,-5,2,9,5,9,-7,2,5,-8,3,-2,2,6,-10,-1,5,-3,9,7,2,-1,4,2,7,6,-9,-2,8,6,-10,-5,10,-10,-10,5,2,10,9,7,1,7,-4,10,6,10,-3,-1,-2,4,-9,-5,-4,8,6,-9,-9,-4,5,4,10,-9,10,-5,-2,-6,7,3,6,-3,7,7,8,10,7,-7,10,1,-8,2,-7,-5,10,4,-1,6,8,-5,-7,4,-9,-5,8,8,-2,8,-9,-2,10,4,-4,9,-6,-2,1,8,-8,-10,-7,-2,9,8,10,-10,9,-2,-4,7,-7,-2,-5,-10,-1,9,9,1,-1,9,-1,4,10,-3,6,4,-6,-4,7,4,-2,-8,-4,10,-7,9,-5,10,-8,10,10,9,-10,-9,-7,-5,-7,2,3,9,1,10,10,1,-2,1,-7,-9,5,6,-4,3,-5,3,8,-7,-7,-5,6,4,-1,9,-9,-6,10,-8,-2,-4,-7,6,8,-6,-2,-3,-9,6,3,-9,-6,7,-9,-10,8,-10,2,2,-1,4,-7,2,5,-7,5,-1,3,9,-2,4,3,-5,-2,-5,-3,-4,8,-8,4,-1,1,2,-9,5,9,9,5,-9,1,10,4,4,-10,5,8,-4,8,-3,4,6,9,-7,3,1,-9,8,7,-5,6,2,8,5,2,2,-9,-1,-8,-3,4,3], dtype = "uint16")#candidate|7797|(360,)|const|uint16
call_7795 = relay.TupleGetItem(func_6445_call(relay.reshape(const_7796.astype('uint16'), []), relay.reshape(const_7797.astype('uint16'), [15, 8, 3]), ), 0)
call_7798 = relay.TupleGetItem(func_6448_call(relay.reshape(const_7796.astype('uint16'), []), relay.reshape(const_7797.astype('uint16'), [15, 8, 3]), ), 0)
output = relay.Tuple([call_7793,call_7795,const_7796,const_7797,])
output2 = relay.Tuple([call_7794,call_7798,const_7796,const_7797,])
func_7799 = relay.Function([], output)
mod['func_7799'] = func_7799
mod = relay.transform.InferType()(mod)
output = func_7799()
func_7800 = relay.Function([], output)
mutated_mod['func_7800'] = func_7800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2976_call = mod.get_global_var('func_2976')
func_2978_call = mutated_mod.get_global_var('func_2978')
call_7824 = relay.TupleGetItem(func_2976_call(), 0)
call_7825 = relay.TupleGetItem(func_2978_call(), 0)
output = call_7824
output2 = call_7825
func_7835 = relay.Function([], output)
mod['func_7835'] = func_7835
mod = relay.transform.InferType()(mod)
mutated_mod['func_7835'] = func_7835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7835_call = mutated_mod.get_global_var('func_7835')
call_7836 = func_7835_call()
output = call_7836
func_7837 = relay.Function([], output)
mutated_mod['func_7837'] = func_7837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7835_call = mod.get_global_var('func_7835')
func_7837_call = mutated_mod.get_global_var('func_7837')
call_7838 = func_7835_call()
call_7839 = func_7835_call()
func_3812_call = mod.get_global_var('func_3812')
func_3814_call = mutated_mod.get_global_var('func_3814')
var_7844 = relay.var("var_7844", dtype = "int16", shape = (130,))#candidate|7844|(130,)|var|int16
call_7843 = relay.TupleGetItem(func_3812_call(relay.reshape(var_7844.astype('int16'), [130, 1])), 4)
call_7845 = relay.TupleGetItem(func_3814_call(relay.reshape(var_7844.astype('int16'), [130, 1])), 4)
func_7799_call = mod.get_global_var('func_7799')
func_7800_call = mutated_mod.get_global_var('func_7800')
call_7870 = relay.TupleGetItem(func_7799_call(), 0)
call_7871 = relay.TupleGetItem(func_7800_call(), 0)
output = relay.Tuple([call_7838,call_7843,var_7844,call_7870,])
output2 = relay.Tuple([call_7839,call_7845,var_7844,call_7871,])
func_7887 = relay.Function([var_7844,], output)
mod['func_7887'] = func_7887
mod = relay.transform.InferType()(mod)
mutated_mod['func_7887'] = func_7887
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7888 = relay.var("var_7888", dtype = "int16", shape = (130,))#candidate|7888|(130,)|var|int16
func_7887_call = mutated_mod.get_global_var('func_7887')
call_7889 = func_7887_call(var_7888)
output = call_7889
func_7890 = relay.Function([var_7888], output)
mutated_mod['func_7890'] = func_7890
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7892 = relay.var("var_7892", dtype = "int32", shape = (2, 11, 2))#candidate|7892|(2, 11, 2)|var|int32
const_7893 = relay.const([[[10,2],[-2,-2],[-7,-9],[-1,9],[9,4],[-6,3],[-7,10],[-5,-9],[6,-2],[6,-9],[8,-7]],[[3,7],[-1,-3],[5,7],[-4,-3],[7,5],[-1,-2],[-1,-3],[1,10],[-8,-7],[9,8],[-5,-5]]], dtype = "int32")#candidate|7893|(2, 11, 2)|const|int32
bop_7894 = relay.subtract(var_7892.astype('int32'), relay.reshape(const_7893.astype('int32'), relay.shape_of(var_7892))) # shape=(2, 11, 2)
func_6445_call = mod.get_global_var('func_6445')
func_6448_call = mutated_mod.get_global_var('func_6448')
var_7899 = relay.var("var_7899", dtype = "uint16", shape = ())#candidate|7899|()|var|uint16
const_7900 = relay.const([-4,-4,-10,-7,-5,2,-2,-4,6,10,-9,-7,10,1,5,-4,5,-5,4,10,4,5,-5,-2,6,-9,2,-6,-8,-4,5,3,-5,6,8,-1,10,-10,-6,5,6,-8,10,3,-3,2,-5,9,-3,3,3,-6,1,-7,10,-8,-6,9,2,-5,-10,-4,-3,-9,10,-10,6,-7,3,4,7,-4,-8,-10,-6,7,5,-3,4,5,-3,-6,-2,-6,6,2,1,6,-10,2,-3,-4,-10,-7,10,-8,-8,2,9,8,-7,9,-8,-9,-5,-6,4,9,10,10,-9,-3,-5,8,2,-9,8,-8,7,5,-10,10,-5,-8,4,-5,6,-9,-10,7,5,-10,6,-9,5,4,-7,9,-3,6,-5,-2,6,6,-10,-7,-6,10,-7,4,-3,9,-3,1,-7,5,6,5,-9,-10,-1,-8,8,-1,-8,-8,5,2,-6,-6,-10,5,10,-9,-2,-2,6,3,9,-8,1,10,3,-6,3,-2,-6,-8,-8,7,-6,4,-10,-7,-9,6,2,7,-5,2,6,-2,10,9,9,-9,-5,-6,-8,-4,9,-8,-5,4,-8,10,2,-4,-4,-2,9,7,-2,10,7,6,3,6,-9,-10,9,-10,-3,-5,9,1,9,-5,10,-3,-9,-4,-5,2,1,2,3,-10,10,7,-5,1,-6,-6,-2,-5,10,-7,10,-2,3,-10,7,5,5,9,2,-5,6,7,2,1,3,-10,5,-1,-5,-7,1,2,-5,8,-10,-6,-4,-2,-6,10,-9,10,10,4,-4,-10,2,3,-2,5,-3,6,-1,-4,3,6,-4,-8,10,2,5,-9,5,-4,-2,-8,-7,2,5,7,-2,2,9,-2,3,3,5,5,-3,-6,-10,-9,1,7,9,-5,-8,7,-6,6,-3,7,10,-8,3,-9,-2,-9,2,-10,1,2,-2,-5,-7,8,-2,10,7,7,5,10], dtype = "uint16")#candidate|7900|(360,)|const|uint16
call_7898 = relay.TupleGetItem(func_6445_call(relay.reshape(var_7899.astype('uint16'), []), relay.reshape(const_7900.astype('uint16'), [15, 8, 3]), ), 1)
call_7901 = relay.TupleGetItem(func_6448_call(relay.reshape(var_7899.astype('uint16'), []), relay.reshape(const_7900.astype('uint16'), [15, 8, 3]), ), 1)
func_4209_call = mod.get_global_var('func_4209')
func_4213_call = mutated_mod.get_global_var('func_4213')
const_7906 = relay.const([-6,9,6,-5,7,-7,-5,5,7,4,6,-10,-7,1,2,7,6,3,5,5,8,-6,4,-8,3,-2,1,-10,-8,-2,-2,10,9,1,3,-4,7,6,3,-2,-6,-7,-6,-7,-5,-7,-2,-6,2,4,3,-6,10,-10,6,1,-6,-10,5,-1,8,9,6,-2,-5,2,4,6,10,9,10,9,-10,2,-8,-8,-2,-8,-4,-5,-5,-5,-6,5,9,-3,7,6,-1,-5,-1,5,1,2,-4,-4,-5,-9,2,-1,1,-1,-6,-8,-7,-5,-7,4,6,1,2,-8,-4,9,5,6,-4,4,6,-8,-6,-3,-5,-1,2,10,7,10,7,9,7,-7,4,2,7,5,5,6,-7,-1,-1,1,-1,1,-8,1,8,8,-3,-6,-2,-4,10,-5,9,4,-8,-7,-5,8,-1,-1,-1,2,1,4,8,-8,-8,-5,-2,-6,-3,-1,1,2,-2,-10,-3,-5,-10,-8,7,-9,1,-3,-3,5,-1,-4,6,4,-8,1,9,-6,4,-9,1,7,4,-7,8,2,-8,2,2,-4,-2,-2,10,2,-1,7,3,-8,-6,1,-6,-3,-9,10,5,-2,6,10,1,10,-4,-5,-2,3,7,4,-9,10,4,-9,-2,5,-4,-4,6,-6,2,9,-4,4,6,-7,-4,3,6,8,3,-8,8,-10,9,-7,7,6,6,-5,9,7,8,3,2,-4,5,-1,-5,7,9,4,10,1,2,-10,7,-6,5,-9,-1,1,-4,-8,7,2,1,-6,-7,-9,-1,2,4,1,7,8,4,5,4,-6,9,9,-5,1,9,3,-8,-8,-4,4,10,1,-1,-1,-10,-6,-6,-10,-9,2,-2,-8,1,5,-6,7,8,9,6,4,8,8,-4,-4,1,1,-3,6,-6,9,9,-7,6,6,-7,-2,2,-8,8,1,7,5,-2,4,-1,1,9,-8,-5,10,5,-6,10,3,-5,-7,8,-10,4,-10,7,6,-9,-2,9,6,-2,2,8,1,-2,6,2,-2,-10,-1,4,-4,10,-9,5,-4,10,2,1,-1,-2,5,-3,-8,9,-1,-7,-6,-10,-7,-10,6,6,10,-1,-2,-10,-7,-4,-9,6,-4,6,1,6,-2,8,-8,6,-4,3,-10,-5,-7,5,1,-7,-6,6,-10,7,1,-10,2,9,2,5,6,-10,8,2,-7,-4,-3,-2,5,2,5,-4,-7,4,-6,1,9,-6,7,6,-6,-10,-3,1,2,-3,-5,-5,-10,2,-9,10,6,-7,-6,8,-5,3,1,-7,5,-1,9,-5,-4,-4,1,3,2,2,-2,1,1,9,-6,-6,-8,-5,2,5,8,10,-7,-9,-10,-8,3,4,-3,-5,-1,4,-7,-6,9,-4,-5,8], dtype = "uint16")#candidate|7906|(525,)|const|uint16
call_7905 = relay.TupleGetItem(func_4209_call(relay.reshape(const_7906.astype('uint16'), [15, 7, 5]), relay.reshape(call_7898.astype('float64'), [1008,]), ), 4)
call_7907 = relay.TupleGetItem(func_4213_call(relay.reshape(const_7906.astype('uint16'), [15, 7, 5]), relay.reshape(call_7898.astype('float64'), [1008,]), ), 4)
uop_7918 = relay.log(const_7893.astype('float32')) # shape=(2, 11, 2)
output = relay.Tuple([bop_7894,call_7898,var_7899,const_7900,call_7905,const_7906,uop_7918,])
output2 = relay.Tuple([bop_7894,call_7901,var_7899,const_7900,call_7907,const_7906,uop_7918,])
func_7921 = relay.Function([var_7892,var_7899,], output)
mod['func_7921'] = func_7921
mod = relay.transform.InferType()(mod)
mutated_mod['func_7921'] = func_7921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7921_call = mutated_mod.get_global_var('func_7921')
var_7923 = relay.var("var_7923", dtype = "int32", shape = (2, 11, 2))#candidate|7923|(2, 11, 2)|var|int32
var_7924 = relay.var("var_7924", dtype = "uint16", shape = ())#candidate|7924|()|var|uint16
call_7922 = func_7921_call(var_7923,var_7924,)
output = call_7922
func_7925 = relay.Function([var_7923,var_7924,], output)
mutated_mod['func_7925'] = func_7925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4930_call = mod.get_global_var('func_4930')
func_4932_call = mutated_mod.get_global_var('func_4932')
call_7967 = relay.TupleGetItem(func_4930_call(), 0)
call_7968 = relay.TupleGetItem(func_4932_call(), 0)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_7969 = func_4240_call()
call_7970 = func_4240_call()
func_4763_call = mod.get_global_var('func_4763')
func_4767_call = mutated_mod.get_global_var('func_4767')
var_7972 = relay.var("var_7972", dtype = "uint64", shape = (420,))#candidate|7972|(420,)|var|uint64
call_7971 = relay.TupleGetItem(func_4763_call(relay.reshape(var_7972.astype('uint64'), [14, 2, 15]), relay.reshape(var_7972.astype('uint64'), [14, 2, 15]), ), 1)
call_7973 = relay.TupleGetItem(func_4767_call(relay.reshape(var_7972.astype('uint64'), [14, 2, 15]), relay.reshape(var_7972.astype('uint64'), [14, 2, 15]), ), 1)
func_2804_call = mod.get_global_var('func_2804')
func_2807_call = mutated_mod.get_global_var('func_2807')
var_7982 = relay.var("var_7982", dtype = "int16", shape = (130,))#candidate|7982|(130,)|var|int16
call_7981 = relay.TupleGetItem(func_2804_call(relay.reshape(var_7982.astype('int16'), [130,])), 3)
call_7983 = relay.TupleGetItem(func_2807_call(relay.reshape(var_7982.astype('int16'), [130,])), 3)
output = relay.Tuple([call_7967,call_7969,call_7971,var_7972,call_7981,var_7982,])
output2 = relay.Tuple([call_7968,call_7970,call_7973,var_7972,call_7983,var_7982,])
func_7993 = relay.Function([var_7972,var_7982,], output)
mod['func_7993'] = func_7993
mod = relay.transform.InferType()(mod)
var_7994 = relay.var("var_7994", dtype = "uint64", shape = (420,))#candidate|7994|(420,)|var|uint64
var_7995 = relay.var("var_7995", dtype = "int16", shape = (130,))#candidate|7995|(130,)|var|int16
output = func_7993(var_7994,var_7995,)
func_7996 = relay.Function([var_7994,var_7995,], output)
mutated_mod['func_7996'] = func_7996
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8010 = relay.const([[[3.559223,3.945806,9.577290,-3.491586,5.113751,3.702042,-8.527663,4.759598,4.258318],[3.008763,0.673975,6.975551,8.025293,-1.675887,-3.145656,-9.302414,3.189417,6.990990],[5.872424,-7.582064,-0.708807,8.335794,9.472353,-9.521597,-9.152684,-5.632108,4.429132],[-3.392068,2.159414,6.083453,4.762177,5.031988,-7.847064,5.092527,3.610202,-0.660339],[-6.257425,-5.732618,-1.092320,-6.879753,1.155983,-8.270091,-7.627863,7.241844,9.381776],[6.058845,2.454690,-4.966283,5.882252,5.912838,0.872001,7.641472,4.129125,5.775005],[-5.268929,-0.671364,-9.303803,-7.007411,1.482189,0.468811,-3.628320,7.722557,4.576390],[1.904606,-1.718101,1.642712,-3.971773,2.415769,1.477992,-2.736315,-9.071508,8.774517],[3.073727,8.605759,1.515904,-8.720056,-6.898945,4.773911,0.632056,-4.845809,2.873407],[1.900106,-6.148059,1.057542,9.939729,4.083193,-9.851497,-1.215250,-5.024111,8.241748],[-9.301552,-7.135846,3.393919,5.140888,-2.628678,-4.495804,1.455442,-2.362010,-2.766269],[4.288817,8.195515,0.361380,7.273358,9.630249,-4.604234,-2.167557,-7.644218,5.261546],[-0.868637,-2.305417,-7.172934,6.370949,-1.405267,-6.884742,0.899452,-8.127064,-0.856194],[2.992249,-6.162867,-1.957818,8.438682,7.409251,8.865172,5.275952,4.491441,-2.161169]],[[2.474627,-5.706752,9.641929,-3.927501,-1.659273,9.090851,7.714928,0.142403,-0.150379],[-0.774521,-1.644761,7.237555,-5.922767,7.006435,6.478428,2.440761,2.566104,-9.856833],[-9.132576,-5.854482,-3.546079,-6.084921,-3.837378,8.057537,1.219194,-6.320356,1.930481],[5.420561,-6.649991,-5.956702,-4.589187,-9.750250,4.015961,1.689046,-2.325782,-5.586119],[1.704419,-6.738732,-1.043758,-0.615039,4.739419,1.354492,8.833126,-2.859689,-5.167306],[9.670888,-3.557160,-1.323083,-7.428480,-5.824352,5.316424,6.428561,8.668991,-4.221505],[6.997824,2.072558,2.108441,-7.870348,8.821830,6.821630,4.467063,-8.406926,-1.983982],[0.008202,-7.621370,7.268209,-9.841425,1.514126,-5.219254,-8.406642,-7.090616,-6.881597],[-7.830537,-8.416392,8.594203,8.544013,-3.805231,7.606827,7.450393,-3.085536,-0.070579],[5.160520,-9.287409,-4.472058,1.974385,4.252262,-6.117518,2.382424,-4.701727,-1.922237],[7.637167,-0.031138,4.774248,6.233088,-4.389332,5.026456,9.821242,1.564256,1.204834],[7.067108,-3.687787,-5.764785,-8.726863,-4.879228,-5.298808,3.719829,-7.824604,9.256225],[3.772164,-7.205248,-7.072188,-4.683106,1.664182,-3.703602,4.505726,6.736358,-7.219441],[-2.803858,2.644169,7.196874,6.925083,-1.436789,-1.446708,2.045963,-7.225900,6.733949]],[[8.737347,-3.270030,8.613945,1.522431,-7.574854,4.235254,4.424219,-8.624906,-7.505282],[-6.886588,-6.365738,9.714032,-4.116391,-1.337276,5.174041,-7.921475,6.126580,7.921276],[2.019216,5.249146,0.546067,-8.631894,-0.458491,3.659717,-6.655187,-3.172472,-3.997071],[5.366637,-8.546249,2.999955,1.048858,5.016560,0.243106,6.017712,0.325518,-5.672310],[1.882588,8.001894,2.705334,-6.302466,-6.662788,-9.827133,6.787346,-3.914839,0.361516],[7.337125,9.822467,9.600437,6.924745,8.208365,5.428728,9.439460,-2.186903,-1.814128],[2.979271,5.209484,4.317517,7.975633,0.432236,4.613392,7.049205,5.864793,3.061970],[9.845500,0.756004,8.086196,1.385175,-4.828931,-1.291533,8.433551,4.335234,8.013105],[7.147404,4.589547,-9.770453,8.559605,9.685534,-8.304710,-0.966197,3.701710,-2.481280],[-9.823931,6.086001,4.419863,-0.940843,-8.712747,0.554218,-3.277843,-0.967473,3.342618],[-6.254416,-3.803360,6.911279,-5.410279,5.395852,-1.476479,1.065362,0.981477,1.271019],[-5.227882,3.486405,2.694653,-6.348170,8.797988,-3.259549,-2.990968,-7.369616,-4.315988],[6.572474,4.017299,3.267960,6.925402,-8.874669,4.542003,0.280416,0.885784,-2.873173],[-8.491344,5.558821,0.272645,-7.944820,-1.346089,3.581887,8.493899,-6.108720,1.563131]],[[-1.178470,-1.107651,2.893283,-8.796505,2.666852,4.511161,-9.197773,-2.316625,-3.159841],[7.531603,3.979624,4.324027,6.436828,-1.667897,5.735751,3.199422,-7.583521,-6.344141],[8.010293,-7.385941,3.990285,7.989360,8.592309,3.297771,2.878075,9.156714,-5.940968],[0.076040,7.151771,0.157380,4.411850,-5.862500,-0.718414,3.049168,1.941143,-3.398598],[-6.567063,-1.762806,-3.061796,5.302761,9.389916,-5.736274,9.861353,0.260421,3.989433],[2.987379,0.559031,-9.264486,-1.926160,7.512920,-2.904567,-8.693350,2.474045,-6.142118],[-0.516213,-1.891240,-0.388228,-8.296190,-5.045236,-1.713630,-8.700851,9.275338,4.425565],[-2.409421,5.830694,0.876091,3.014620,-1.835640,6.225924,-0.550067,-6.109905,9.241558],[-8.191875,-9.202881,5.619957,-5.625768,-4.980109,9.052252,-6.744016,-2.646772,7.796168],[1.458269,3.707819,-0.131800,-4.147454,2.146540,7.969223,-2.030649,-0.903408,-9.569557],[7.531490,9.337151,-3.464050,-4.325096,-2.405563,8.825510,-9.502777,9.678192,-2.344066],[-9.045015,-9.429285,-9.823488,-5.767756,9.482478,7.939906,-4.695060,0.374579,6.767087],[-6.033026,-0.029628,-8.573585,8.672310,-3.220753,-2.689292,-7.335103,1.837907,-3.876981],[-8.761238,-3.743396,3.301171,3.189274,1.860066,-0.263828,7.467389,-9.327370,3.186876]],[[7.441194,0.571446,2.243596,-9.380269,6.960462,1.583537,7.845245,-9.550006,7.540058],[-9.156130,-9.304805,8.018098,-0.412919,0.349170,-5.160086,9.602330,8.645400,5.018687],[-7.244114,-0.452316,-7.813231,-7.566208,7.767075,8.574989,-4.528242,-3.829948,1.238603],[4.834854,-1.715597,-7.322893,-2.254030,-9.414708,9.856669,-7.797540,5.895533,9.999572],[-1.034505,-8.267501,-9.902967,6.741515,5.854927,2.670889,2.905191,-5.622770,-4.024665],[3.912055,-7.240765,-8.500774,6.357989,3.059963,-4.229659,-2.239925,-9.329444,-4.141079],[6.047738,-2.706575,0.673277,5.616119,-9.551317,-6.908793,9.601872,9.723199,6.247905],[5.280769,1.484018,-7.718477,9.915401,-5.578225,6.795371,-9.757994,-6.893505,7.949142],[4.268470,3.470415,-8.393576,-5.595158,4.395183,7.870443,7.250166,8.947672,2.148363],[-7.930695,3.929801,6.215406,-5.136010,9.893064,-6.047334,-8.961608,9.832126,3.491710],[-4.003837,7.510974,-9.082405,-2.477381,2.867240,-3.308681,5.890738,9.913569,5.272583],[6.235635,4.794196,5.275595,2.410571,8.712402,1.232048,-5.460289,-7.293551,7.158360],[-7.598226,-3.034633,6.518802,2.805647,-2.976045,3.671482,6.921849,2.739647,5.797314],[-6.779768,-6.720216,-4.067945,-0.694249,3.902658,-0.075320,5.088834,6.045524,4.426099]]], dtype = "float32")#candidate|8010|(5, 14, 9)|const|float32
uop_8011 = relay.asinh(const_8010.astype('float32')) # shape=(5, 14, 9)
func_6497_call = mod.get_global_var('func_6497')
func_6499_call = mutated_mod.get_global_var('func_6499')
call_8013 = func_6497_call()
call_8014 = func_6497_call()
func_2469_call = mod.get_global_var('func_2469')
func_2471_call = mutated_mod.get_global_var('func_2471')
call_8015 = relay.TupleGetItem(func_2469_call(), 0)
call_8016 = relay.TupleGetItem(func_2471_call(), 0)
func_4240_call = mod.get_global_var('func_4240')
func_4241_call = mutated_mod.get_global_var('func_4241')
call_8017 = func_4240_call()
call_8018 = func_4240_call()
func_5172_call = mod.get_global_var('func_5172')
func_5175_call = mutated_mod.get_global_var('func_5175')
call_8019 = relay.TupleGetItem(func_5172_call(relay.reshape(call_8015.astype('float32'), [8, 10, 12])), 0)
call_8020 = relay.TupleGetItem(func_5175_call(relay.reshape(call_8015.astype('float32'), [8, 10, 12])), 0)
output = relay.Tuple([uop_8011,call_8013,call_8015,call_8017,call_8019,])
output2 = relay.Tuple([uop_8011,call_8014,call_8016,call_8018,call_8020,])
func_8026 = relay.Function([], output)
mod['func_8026'] = func_8026
mod = relay.transform.InferType()(mod)
mutated_mod['func_8026'] = func_8026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8026_call = mutated_mod.get_global_var('func_8026')
call_8027 = func_8026_call()
output = call_8027
func_8028 = relay.Function([], output)
mutated_mod['func_8028'] = func_8028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5089_call = mod.get_global_var('func_5089')
func_5091_call = mutated_mod.get_global_var('func_5091')
call_8085 = func_5089_call()
call_8086 = func_5089_call()
func_7343_call = mod.get_global_var('func_7343')
func_7348_call = mutated_mod.get_global_var('func_7348')
const_8116 = relay.const([3,-3,-6,3,-6,7,6,-2,10,9,7,-10,1,4,-4,4,4,6,-10,8,-4,7,-8,4,-10,5,-8,-10,8,-4,-7,-10,8,1,-3,-3,5,-6,2,-1,3,-2,5,-2,5,5,-6,3,9,3,2,-8,7,9,5,4,8,-1,-7,5,-10,-4,-5,2,2,7,-3,-2,-10,2,3,-3,1,5,6,-1,-10,3,-3,-1,-10,2,5,6,7,9,5,4,-6,3,8,-8,-1,6,-6,1,-7,-1,-7,6,-6,-5,-8,6,-7,-6,5,3,-3,-9,8,-6,3,5,-6,-5,7,5,10,-1,-2,-1,-9,2,5,-2,3,6,-7,7,4,-10,-3,-10,8,-1,-6,-9,9,8,5,9,-8,-4,-7,-10,3,6,5,-1,5,3,-4,-6,-4,-1,4,8,4,-7,-5,6,5,5,5,-2,8,2,10,9,4,-4,7,-10,-4,-5,-4,-8,-10,10,1,-8,9,-2,-9,2,8,-2,8,7,-7,-10,3,1,-2,-1,-10,1,10,-8,-4,-4,6,9,-6,-5,-1,5,4,-9,4,9,-10,7,4,1,-6,2,9,-8,-2,-1,10,8,1,-10,9,2,10,1,5,-1,7,4,7,-2,-5,-1,-8,-6,-8,7,-6,9,8,-9,2,-3,5,6,7,10,-10,6,-4,10,-1,-9,3,2,-8,4,10,10,3,9,3,-4,2,4,2,-10,-8,-1,-9,-4,-3,10,4,-1,5,8,1,2,10,1,-9,-7,10,-9,1,7,-2,9,6,-2,2,-10,10,6,9,3,8,6,-10,-10,-8,4,3,-5,-7,-1,-5,-2,2,-6,-7,10,1,-7,1,-1,-4,1,2,8,3,6,10,-2,8,-5,6,-2,1,7,7,-5,3,-10,-1,4,-10,1,-10,4,8,-5,-5,1,-8,-2,-4,-8,2,-4,10,9,10,-10,3,-10,-5,7,-4,8,7,-9,-8,10,6,-4,-3,6,5,4,2,-10,9,-9,-4,-4,-8,3,-1,3,-8,6,2,-5,-10,4,4,-8,-1,-5,3,-7,-4,4,-3,5,-6,5,2,6,10,3,3,-7,8,9,-1,10,-7,1,3,-1,8,10,5,-10,-5,-9,4,-5,7,-4,2,-4,-10,7,2,4,-4,-7,-10,6,-2,6,-10,-10,4,-5,-8,5,3,-3,10,2,4,4,10,9,-4,10,5,1,2,8,-5,1,-5,-3,-4,10,8,-1,-4,10,7,-2,-8,6,10,-1,6,-3,6,7,-2,-9,-3,-7,-3,4,7,-4,2,-6,-3,9,8,-10,7,8,8,-10,-8,-9,5,2,-3,8,8,8,-10,-1,-9,7,-2,-7,-10,3,-7,-10,-8,-6,-3,-6,8,-4,-3,9,10], dtype = "uint16")#candidate|8116|(525,)|const|uint16
const_8117 = relay.const([-5.700139,-1.610967,-3.973961,-9.506989,0.408782,6.629802,-6.614570,-4.513186,-4.794653,-3.607208,3.538590,3.073067,5.630657,-3.112607,-7.090636,2.958666,9.664192,-4.045371,-9.151425,3.960835,-9.435623,-6.997548,-5.610301,-3.263064,4.410011,-6.423671,-6.298501,-0.846450,-3.403697,4.408013,5.932350,4.539062,-8.524810,-1.142372,-6.159231,-3.788085,-9.993928,-4.389932,6.197701,6.954752,7.850660,0.666354,3.578057,5.649536,3.870490,3.827047,0.255493,0.115376,-7.046964,-3.605649,7.498947,8.699062,4.675583,-7.057774,4.494717,-6.537650,8.011858,-1.764656,3.100753,-1.657672,-6.165515,7.149347,3.637109,7.594388,2.110918,-6.143373,4.865860,-1.959051,2.898582,0.613120,6.372724,0.760607,-3.672874,4.827723,7.472734,-8.841515,5.216508,5.128992,-9.296402,-1.154866,0.203583,8.804373,2.059083,0.325450,-6.180460,9.606185,-7.245803,0.730772,-5.687844,1.516599,-3.909490,-5.801886,5.547928,-2.504330,-4.192415,6.437936,-1.344034,-0.319433,2.186267,-3.883086,3.640302,2.300278,6.997895,-8.772953,8.459736,8.862449,9.633782,-3.081619,-2.291191,-2.100075,4.274375,-5.119818,-1.165968,3.400470,-8.579881,-6.128020,5.664072,-9.109138,-4.258144,1.739844,-9.054856,2.911504,-6.774819,-1.377347,8.735962,2.540912,5.835081,-7.388865,2.225738,6.771067,9.358303,6.136011,0.368525,8.865668,-9.619750,7.049464,-3.274163,-9.694566,-8.718813,3.620892,5.341580,6.078803,-5.669365,4.799782,1.596008,8.183788,-2.568860,-2.586809,-9.623337,4.025075,-5.356307,7.481527,4.314342,5.653280,2.720853,0.959454,9.720460,6.257774,-6.752862,6.285107,3.962117,2.600044,3.034908,1.157557,8.861917,-9.288685,5.407620,-9.013360,8.860533,1.592945,-6.558041,-3.444308,1.652024,8.452006,-9.183817,9.460868,-9.673587,1.275880,-0.526335,4.990818,2.400966,6.256013,-9.152865,1.430092,1.112263,-9.353496,-4.046333,-6.088378,-9.718935,4.727500,-3.445378,-6.951309,1.500071,2.298695,-4.114349,-8.471050,-9.979716,-1.980870,5.413292,1.965575,-8.977173,9.321194,-0.465404,-8.214265,3.160858,6.302756,3.193643,-1.314070,3.867878,-5.586358,1.340376,5.357743,7.709123,-8.224980,5.133471,2.930224,5.252549,-3.995794,-4.989296,-8.820529,4.796327,-2.464784,7.063147,6.958404,-9.035760,-1.360151,-9.594746,0.653485,9.378597,5.806359,4.357851,7.787675,1.020721,-3.715471,-2.393048,6.100737,-3.010492,-1.997267,7.829544,-8.844347,-6.864327,9.413683,-0.795008,-5.420616,-3.520714,2.852939,-8.752281,-2.609733,-2.818665,-6.770666,9.828292,-8.829659,3.026601,0.596702,6.152353,-8.496973,-9.910622,-5.537093,-9.641936,-3.700402,-2.601486,1.530857,-6.763242,-3.813004,-2.979747,-3.552909,2.165556,-2.141409,7.865697,9.117895,7.760666,-5.456001,0.247800,5.697425,3.093994,-5.180145,1.735422,0.217270,1.618278,-8.977883,-1.333598,5.210397,-4.014210,-6.256627,4.872275,-1.259789,7.810936,-0.243268,1.383296,-9.483181,1.054647,1.808520,-6.142456,2.935897,-9.166906,-6.489559,-2.886381,-4.127976,5.772605,-6.155801,-1.062462,9.751770,-4.410165,-4.118291,7.878374,-6.774010,4.781713,5.386426,-1.113380,2.213304,1.982712,8.939774,0.132481,-5.726292,-3.070597,2.179469,5.026838,-5.868230,-5.712673,7.200858,-5.139596,2.147775,2.249503,7.058972,2.757935,9.400201,-7.813831,-2.068182,-7.190739,-5.601762,8.655892,-3.430891,1.041427,-6.947651,0.673576,6.245032,-4.502464,-9.436542,-9.749624,9.821106,-1.907412,-9.059482,-7.283525,9.931992,6.005172,1.316179,3.670750,5.197091,7.210678,9.241611,3.014471,-2.951131,9.391229,-5.852692,-0.162256,9.371731,-1.125403,-0.855304,-0.690864,8.240126,0.327431,-0.867556,-2.699080,9.634737,-0.878078,6.948433,-8.056923,0.543729,-6.637226,6.663372,2.478449,0.648016,-9.498871,-2.826155,4.513675,-1.393289,2.214531,-1.320178,-3.547386,3.532719,-7.284577,-1.839675,-0.407417,-9.301662,7.418221,0.242739,-2.117552,-0.143401,-7.832467,2.269103,0.850465,5.029146,-6.665657,-6.362928,0.954392,3.183469,-7.090682,-0.758864,7.748478,6.195458,-7.419611,-0.654293,-7.094417,9.968433,5.054630,-3.913899,-5.984366,1.080241,7.195767,8.113117,3.062216,-4.183209,8.620460,-2.713154,4.462332,1.783316,1.750571,-3.411897,3.931658,-1.957774,-3.262582,6.916121,-8.694347,-3.633254,-7.771094,5.780091,-9.594531,-0.563535,-4.117551,0.123125,-8.930728,-7.389504,-2.771058,5.619092,-9.962327,-9.491798,4.298038,-0.334672,1.677854,3.406752,-3.645614,6.219653,9.410679,-5.542384,0.841941,1.235963,4.524205,2.784599,3.972602,6.787481,-0.838766,-7.101679,5.332477,-1.368569,6.690050,-3.405366,-0.793603,2.187518,4.635199,2.758713,2.886072,3.411306,-2.994025,-4.316321,8.845072,-9.735015,2.604648,0.400030,7.273134,9.808354,-7.833895,-5.544906,-7.421980,-2.013855,-1.394919,-3.096810,-5.396886,-0.855862,-2.595384,-1.400206,-0.398512,5.089034,-7.798924,-0.994861,-2.453708,-2.906473,9.896723,9.006915,-7.155012,-6.167008,-9.897577,-3.595398,-3.137744,1.349362,9.954374,-8.877739,-5.081859,-6.900703,2.302146,-5.856050,-1.897580,-4.440616,-9.024574,3.522797,8.570031,2.806836,-3.195933,-9.217731,-9.376367,2.629391,-9.540494,7.089236,-8.250231,8.906393,-2.750333,5.921922,-0.102926,-1.127967,-6.791748,-5.733814,5.751172,1.110951,8.667553,-2.055015,7.643772,-1.992094,-7.966619,0.731487,3.123631,-0.698580,-1.410013,-4.097512,4.486688,6.461271,7.785866,4.854463,6.422216,-7.756998,-9.176683,-0.892889,2.158986,1.165374,-5.996826,-6.877147,2.043863,4.940007,-9.127210,9.474514,7.980615,2.860746,-5.924798,9.830364,9.871008,-3.216251,4.072658,-8.777444,0.698398,-9.875456,-0.839025,9.559333,6.506554,4.251607,7.828266,3.163783,-6.699535,2.299469,5.005709,-3.794844,-8.671628,-7.095554,-9.896980,-7.598691,6.166969,0.990859,9.713587,5.559840,-1.664163,1.827665,3.000188,-0.457109,8.846351,-8.023092,-4.292614,-8.336339,-7.009701,-8.563122,7.935606,-8.430587,3.294009,-6.345724,9.710646,3.930053,-5.370323,1.233148,6.027622,7.628981,6.442518,6.212280,5.979097,-2.821037,3.482204,-9.877650,-7.608607,5.793552,-3.950781,-6.375193,6.990654,5.139274,-8.365573,-0.408455,-4.771775,4.174751,7.596458,-4.080142,-0.698873,-2.458328,6.143738,-6.107424,-9.244907,-2.907274,0.610813,-7.728024,-3.551014,-9.446300,-9.870957,5.403719,6.230881,-0.133490,3.231622,1.702121,5.794263,9.702111,-5.490356,-2.842144,4.691189,0.606176,-4.397673,-9.172552,-6.006523,3.789763,6.260041,4.133592,7.777873,9.912035,-5.857389,-5.728118,7.010419,7.127563,5.295548,-6.061374,-8.129484,8.651648,1.640560,5.486559,4.601588,-3.930561,0.894256,1.886781,7.116393,-6.258756,3.650589,0.514368,-5.275639,-4.523802,2.317356,3.053253,-7.855959,-5.791826,-5.410893,2.008797,-2.375517,-5.605075,-1.260181,6.873334,-9.285870,4.028009,-4.451278,-2.207806,2.578031,3.465357,2.335312,-6.545313,0.184403,2.182118,1.442601,7.448161,-7.809195,6.933253,1.041820,-7.635090,-7.669615,2.037749,2.832620,-0.926115,-2.941953,9.182693,-5.599302,-7.371588,-3.840602,2.776495,-5.858080,9.974689,-0.598999,3.246645,2.216371,8.732415,-7.266159,9.669079,6.342875,-8.497339,6.660106,1.507916,-7.557784,0.728346,-6.907894,-6.197308,-8.177906,9.899746,-4.484634,-2.951197,0.342492,-2.950401,3.568323,2.463509,7.245283,-5.878412,2.065064,-3.946108,3.233334,-5.732157,-7.010524,3.028657,-0.312822,2.087306,8.417326,1.823330,7.563847,-1.564230,3.208153,7.504792,-6.109160,6.835462,-6.167169,3.868488,2.819114,0.188424,-7.045438,-7.007435,1.662674,8.906674,-1.417900,5.065133,-5.506604,-0.052845,7.669053,-1.208306,8.201574,3.715105,2.491143,-1.666573,-7.465950,-3.470112,-5.455564,-7.989332,-8.959975,-5.629372,-6.812209,5.875671,-6.431692,-6.392238,3.926855,7.481494,-0.648481,-5.658464,0.884373,-4.676052,-5.233506,-8.358111,-5.426019,8.279461,-5.988773,9.344416,4.383803,-6.946464,-7.687164,-8.604811,1.477057,-2.555350,-5.466409,-0.346635,3.859882,-2.508510,7.489617,-1.398097,5.121545,2.600227,-5.331438,-6.286035,6.986707,8.087011,6.370823,0.044445,2.854492,-3.347070,6.568320,6.280236,9.129345,-4.949624,-9.274205,-6.665013,-1.776812,0.056968,-4.325640,8.768576,-0.369696,0.437357,-4.243519,7.695657,2.322736,6.903813,-3.024076,0.168814,-2.881207,-7.607619,3.580948,-0.093353,-8.697471,-9.764955,2.648874,-8.921267,-7.957077,1.440429,8.030577,-7.877293,-8.399248,4.682968,-2.984869,6.251461,-0.987349,1.491603,-7.480590,-6.575660,8.138578,-5.375059,-9.988839,7.809013,-4.207011,5.677423,2.744008,-5.692253,5.162905,-5.670990,9.959431,7.113741,9.233919,0.164388,-9.295343,1.392087,-1.237064,1.894505,-6.433609,3.666989,2.891994,-6.188595,-9.150201,7.391530,-9.593513,3.402012,8.037979,-6.267031,1.882780,-7.369666,7.417883,8.254091,1.404551,-0.925505,6.667678,6.177761,-2.914792,3.518320,-8.044295,-9.190921,-7.774319,-4.542803,-0.405814,8.905381,-8.721049,-3.886270,2.399854,6.301020,-2.469635,-9.089449,4.913920,-4.049210,-7.464108,-1.938374,-7.986348,4.229561,-9.712578,-6.483905,-3.283598,-2.128893,-6.200350,-1.033915,4.879425,-4.108086,5.405689,9.521634,-0.616238,-9.462063,-7.917043,-4.554884,-8.960178,8.766796,1.291363,8.951933,5.384840,0.481801,-4.172396,1.935281,5.609630,1.243345,2.008612,-1.290667,1.075959,-5.144279,0.026386,-9.364812,-3.698061,5.293439,-6.576540,-1.074623,-0.310301,3.729717,4.342548,-4.274440,-5.562911,-0.081666,0.302802,-8.862502,3.049087,-9.097400,5.841980,-0.287184,-4.906874,3.102946,2.384796,2.475431,2.494720,-4.714374,6.126042,-8.686077,4.181816,7.867484,4.251852,5.718581,-4.584286,4.151957,-1.744381,-1.202820,4.157055,8.728590,7.277845,8.618466,1.370330,5.915714,-2.999489,2.833083,-7.040380,-3.223335,-5.127332,8.882357,5.010605,-8.169155,-4.127749,0.113449,-7.769830,-8.684528,7.817801,3.182431,-1.266892,9.851425,-4.917542,-3.464431,-3.916504,-6.150530,-4.028072,9.581630,-5.843127,9.724464,-6.576106,4.279673,-9.000711,-1.905596,3.027988,-5.114355,9.071842,-0.448589,-0.602690,-6.641166,-2.780919,6.137205,-4.689902,-6.458301,-7.921821,-9.395622,-0.431422,-2.666742], dtype = "float64")#candidate|8117|(1008,)|const|float64
const_8118 = relay.const([[6,3],[-2,-4],[1,6],[8,5],[3,9],[6,6],[7,-1],[-4,9],[6,8],[6,-1],[-9,-9],[6,3],[5,-7],[-3,3],[7,-6],[-4,-2],[6,8],[-4,-7],[7,2],[-3,-5],[8,-1],[6,-3],[-9,3],[4,4],[7,-2],[-3,4],[6,-5],[2,7],[-1,2],[-4,8],[6,7],[-7,9],[-2,-5],[-9,-7],[4,4],[-2,-7],[-1,8],[-6,9],[8,-3],[4,10],[-3,5],[3,-9],[-3,-4],[-3,-8],[10,10],[-2,1],[4,8],[-3,5],[3,-10],[-1,-3],[1,9],[-6,10],[3,-5],[10,9],[-7,-1],[-5,-10],[8,3],[8,-6],[-3,5],[-4,-9],[-7,-3],[10,1],[9,10],[10,-10],[-10,8],[1,7],[8,5],[-8,-8],[1,-4],[-3,8],[6,-6],[8,5],[-3,5],[6,9],[-5,6],[1,10],[5,-2],[-8,-2],[8,5],[6,-5],[-2,4],[-4,1],[-9,5],[-1,1],[1,-4],[-4,5],[4,8],[-9,-10],[3,10],[7,9],[10,-6],[-8,-7],[-2,10],[-7,8],[5,3],[10,9],[-7,3],[2,-10],[5,-7],[6,-4],[7,4],[8,-5],[-9,9],[10,-5],[6,-3],[-9,5],[10,6],[6,-4],[-1,6],[2,2],[-8,3],[8,-6],[-3,5],[3,-5],[-1,-9],[-9,9],[3,9],[7,-7],[4,-4],[7,9],[1,3],[5,7],[6,-5],[10,7],[9,1],[9,10],[9,6],[-8,-7],[10,-2],[-5,-10],[-6,-8],[-9,2],[-10,4],[2,-3],[-2,6],[-3,-8],[10,-7],[-1,-7],[-10,-3],[-9,8],[9,-7],[10,9],[-8,-1],[-5,-5],[8,-1],[-8,6],[-5,-8],[-8,-4],[-8,6],[-2,9],[10,-2],[-6,-4],[-10,5],[-5,-8],[4,7],[-2,-6],[1,-10],[9,-4],[7,5],[-6,10],[-4,-3],[-8,1],[9,-3],[-6,-1],[5,3],[-1,2],[-4,3],[-8,5],[-10,2],[1,1],[1,9],[4,-6],[3,2],[6,-2],[-3,-10],[10,2],[4,-7],[5,-3],[3,-4],[5,-6],[1,4],[4,-10],[3,-7],[-5,-2],[-10,6],[-8,-2],[4,-7],[-9,-7],[3,-10],[9,5],[1,-2],[8,7],[-2,3],[-3,-10],[4,6]], dtype = "int32")#candidate|8118|(195, 2)|const|int32
call_8115 = relay.TupleGetItem(func_7343_call(relay.reshape(const_8116.astype('uint16'), [525,]), relay.reshape(const_8117.astype('float64'), [1008,]), relay.reshape(const_8118.astype('int32'), [390, 1]), ), 5)
call_8119 = relay.TupleGetItem(func_7348_call(relay.reshape(const_8116.astype('uint16'), [525,]), relay.reshape(const_8117.astype('float64'), [1008,]), relay.reshape(const_8118.astype('int32'), [390, 1]), ), 5)
output = relay.Tuple([call_8085,call_8115,const_8116,const_8117,const_8118,])
output2 = relay.Tuple([call_8086,call_8119,const_8116,const_8117,const_8118,])
func_8127 = relay.Function([], output)
mod['func_8127'] = func_8127
mod = relay.transform.InferType()(mod)
mutated_mod['func_8127'] = func_8127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8127_call = mutated_mod.get_global_var('func_8127')
call_8128 = func_8127_call()
output = call_8128
func_8129 = relay.Function([], output)
mutated_mod['func_8129'] = func_8129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6001_call = mod.get_global_var('func_6001')
func_6003_call = mutated_mod.get_global_var('func_6003')
call_8135 = func_6001_call()
call_8136 = func_6001_call()
output = relay.Tuple([call_8135,])
output2 = relay.Tuple([call_8136,])
func_8156 = relay.Function([], output)
mod['func_8156'] = func_8156
mod = relay.transform.InferType()(mod)
output = func_8156()
func_8157 = relay.Function([], output)
mutated_mod['func_8157'] = func_8157
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8169 = relay.const([[[-9.883403,-4.717511,-2.239555,-2.962549,9.783083],[9.064316,9.804859,-6.266452,9.896629,9.142297],[-4.271721,-7.687800,3.218335,1.768303,-7.499357],[-6.618560,3.523469,-7.233935,-0.480216,8.602294],[-2.815462,-3.017773,-8.953305,-0.100263,-0.333274],[9.935458,9.072480,-0.925345,4.081440,6.887857],[-3.697701,-0.921821,-8.510861,6.063567,-2.687507],[2.902133,-6.940379,-6.800527,-0.228061,-1.840418],[-9.867423,8.922824,9.101190,-7.703969,3.119330],[-4.923868,1.976474,-5.591868,-8.354916,-4.432416],[-5.252110,0.567933,6.570254,1.747605,-2.154779]],[[4.479364,6.521393,-4.649474,-3.583786,7.000056],[-6.368503,-8.121629,3.057531,9.798235,-6.544363],[-6.639393,7.190355,9.584161,0.878674,8.388035],[2.112537,-2.231516,1.464014,6.440826,-0.670424],[-1.053131,5.103763,-3.035490,7.653213,-6.386377],[-9.479755,-2.001479,-8.175582,-4.576288,0.987032],[5.866043,-3.681059,3.191906,-9.935600,-0.959911],[-8.977759,7.572788,3.995643,-8.511558,1.749119],[-7.015394,4.569219,-5.376532,0.220452,8.008185],[-0.418832,5.016820,-0.239912,-2.602039,8.743117],[7.705185,3.048238,5.909115,8.651169,2.833823]],[[-6.329044,-9.551737,7.556268,6.934555,0.310479],[9.915637,5.711830,4.379770,1.199771,-2.517852],[-9.894034,-8.249398,-1.577871,-4.009809,1.492852],[8.283703,3.705933,6.162880,-7.888243,1.230228],[6.532228,8.630677,6.567891,5.126794,-2.199517],[-9.893377,4.477101,2.481983,-5.141035,7.756141],[7.349646,-3.935299,-8.216025,7.825474,-9.326565],[5.331647,5.024691,1.565617,7.586175,-1.014605],[-2.200743,-0.061983,0.408759,-8.699794,5.034315],[-2.905263,-9.779526,9.135331,-4.187868,7.297518],[-7.151716,7.493251,4.957955,-3.965404,7.706630]],[[-2.722261,9.697271,5.642693,-7.954401,1.517787],[-2.401513,0.196649,-8.018052,6.835223,1.664925],[6.468803,6.697584,-8.830974,9.422586,4.217996],[8.636350,4.992101,-4.320748,4.985595,-4.716698],[-7.152277,-3.273008,1.645381,9.370284,-1.805497],[9.233390,-8.175489,-6.669759,5.246644,2.151866],[-5.066052,-9.831496,-4.398611,-8.499128,-6.536169],[-6.045113,1.416112,-7.289460,5.283681,-1.915112],[-0.871621,4.632399,-8.776616,4.439632,-6.083403],[4.943567,6.943774,-3.019187,-4.056417,-4.347093],[1.689704,-9.169975,9.465911,4.625424,-1.915694]],[[-7.958317,1.410566,3.920730,5.740619,0.705559],[1.159250,-1.557086,-2.524983,-4.808147,-1.409301],[8.149733,1.213088,-3.580822,-1.198336,8.684520],[6.650371,-1.500542,-9.523698,2.901831,-1.152954],[6.637406,2.321653,6.211049,-7.224913,-2.963722],[-3.833366,-0.058930,2.609692,-2.445769,-0.683944],[-1.293030,-3.046625,-5.016180,-1.719602,-0.535297],[-7.158942,9.518651,-2.425503,0.705688,-3.206284],[7.217002,-4.571429,6.321044,-4.159314,2.221370],[2.061447,7.079086,-6.786179,-5.486850,6.721842],[-8.764114,-7.690967,1.584643,-7.992954,8.188175]],[[-7.849571,1.620294,-6.766324,9.327621,-1.026465],[5.298528,-7.160805,9.726462,-2.595234,-1.790957],[3.537214,7.473805,-2.630616,-8.120846,-5.241685],[1.124602,-9.675909,7.175059,0.582556,6.404345],[9.494582,-9.729706,2.181653,5.710438,8.089092],[4.670889,-0.388732,8.792004,3.947979,2.534406],[8.852962,9.958568,2.899073,4.631476,1.643384],[-6.525660,9.808043,-3.145950,4.661947,8.468696],[3.699165,4.574385,4.330465,-6.683734,-1.888544],[-5.759664,6.502919,7.167891,-4.383093,5.081273],[1.261210,7.168199,-1.054698,-5.369184,1.043802]],[[2.663602,-8.662020,-0.455127,3.947535,1.414144],[-2.072937,9.338487,2.970808,-1.437806,0.256839],[7.777838,3.161613,-6.463697,-3.103192,6.740304],[-3.762855,8.011214,6.418678,-5.119310,-9.183007],[-5.820150,-0.161647,-9.064816,-7.385832,1.565004],[9.734786,8.750715,3.840461,-2.689201,-5.381188],[6.044506,-6.158061,0.368582,-1.879645,-2.085719],[4.049629,0.496653,9.484766,3.432903,-3.178460],[9.587315,5.854175,8.541135,-2.448151,1.121630],[7.993193,7.085671,2.211374,-8.218212,9.632072],[-0.907793,7.380319,-4.009065,-7.473342,4.657215]]], dtype = "float32")#candidate|8169|(7, 11, 5)|const|float32
uop_8170 = relay.acos(const_8169.astype('float32')) # shape=(7, 11, 5)
output = uop_8170
output2 = uop_8170
func_8175 = relay.Function([], output)
mod['func_8175'] = func_8175
mod = relay.transform.InferType()(mod)
output = func_8175()
func_8176 = relay.Function([], output)
mutated_mod['func_8176'] = func_8176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4930_call = mod.get_global_var('func_4930')
func_4932_call = mutated_mod.get_global_var('func_4932')
call_8212 = relay.TupleGetItem(func_4930_call(), 0)
call_8213 = relay.TupleGetItem(func_4932_call(), 0)
output = call_8212
output2 = call_8213
func_8216 = relay.Function([], output)
mod['func_8216'] = func_8216
mod = relay.transform.InferType()(mod)
output = func_8216()
func_8217 = relay.Function([], output)
mutated_mod['func_8217'] = func_8217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8175_call = mod.get_global_var('func_8175')
func_8176_call = mutated_mod.get_global_var('func_8176')
call_8261 = func_8175_call()
call_8262 = func_8175_call()
func_5172_call = mod.get_global_var('func_5172')
func_5175_call = mutated_mod.get_global_var('func_5175')
const_8264 = relay.const([9.687246,8.342494,2.573290,9.827840,4.669105,0.690452,-7.502160,-8.181365,-2.085045,-8.622091,-3.428533,-3.302406,8.069370,3.021905,7.388923,-3.782800,0.530495,-4.511077,-5.377771,7.569359,8.452461,7.801075,-5.280123,1.558258,-8.554627,-5.321693,-1.411961,-0.044308,-7.903413,-7.715837,-3.473375,-6.092858,1.269104,-6.310190,-2.431729,0.400949,4.758087,-0.369224,-0.180866,-8.897613,2.612908,-6.651951,-4.689356,4.100452,-8.291778,-4.236958,-5.402153,-5.743176,7.326749,6.407116,-3.635563,6.855795,8.115531,8.106650,7.385757,5.684843,-2.726129,-9.048310,-6.527132,-8.648733,-6.016316,5.652064,2.783751,-1.182119,9.497352,3.080039,-2.914121,3.149063,-1.156966,-2.239991,-9.266756,-4.289431,6.784753,6.649584,-1.100634,-4.641054,-4.147311,-5.042814,3.039543,0.735556,-5.969765,-7.182617,7.706349,5.803244,-0.443782,-0.985898,2.854420,1.080680,1.750303,-2.126225,-0.530762,-4.230072,6.571288,6.478438,4.522527,4.601935,0.570465,3.662408,4.943598,-5.306126,-6.735355,-6.157860,1.474179,-3.332807,8.744916,-0.217237,9.550874,-2.298387,5.809107,0.868542,-5.366969,1.924871,-3.258018,9.296876,7.553039,8.477126,-3.119137,5.472032,1.005327,-9.686008,-9.695622,2.933048,-8.707987,-1.702873,8.380161,-4.484377,-2.617769,3.869922,-5.123368,-1.447933,-9.238614,1.618822,-2.993585,-1.020689,-4.699938,-3.837974,8.341362,-8.810489,5.522481,-4.314893,-7.594834,5.463610,-2.686679,2.291115,6.490504,-8.302940,3.015486,-5.176168,-0.252137,-9.150015,8.802136,1.265763,-6.752607,-3.557223,4.224087,-3.114145,-7.826462,-7.674298,-0.969844,5.239399,-4.692041,3.007856,-1.128391,4.184113,-3.010857,1.808440,-8.180493,-5.825473,4.461290,-3.677006,6.767830,-3.923252,-9.472882,-3.655929,8.594237,-8.306720,1.712525,4.185624,5.085642,-1.020196,-9.507995,-4.127593,7.432584,3.335850,1.858403,6.282609,-9.897193,-7.471564,-4.782857,8.705256,3.419776,0.860696,7.605769,-0.359135,7.396924,-4.908574,-0.283518,-3.001863,-0.399072,-2.474871,-4.188663,-2.344911,-3.205856,4.831743,-3.292686,-6.014440,4.319452,-9.280035,-5.666432,1.362705,-2.225234,-8.721010,-9.065890,-9.868964,-2.895644,8.162923,-0.386987,-5.669818,-8.216861,6.625623,-7.633573,-0.384444,-8.346077,2.446401,0.404873,-9.691901,-3.863112,8.396912,-3.103748,8.960938,-1.696028,3.105191,8.200311,3.636005,1.140588,-7.138993,-8.801844,5.641680,5.483475,-3.879124,-2.205948,-8.015858,7.425169,8.456506,9.559011,-5.574940,2.941912,-4.386695,1.551087,4.697355,3.847654,7.885892,-7.103496,-5.954447,4.870829,8.587451,7.500010,-1.055762,4.736915,-8.978731,6.077349,-8.236652,-8.830048,1.675551,1.912970,4.127033,-8.760911,-7.148018,4.227623,-8.550375,1.991273,-7.230723,-4.052359,4.366919,8.323760,-9.743486,0.814816,7.546552,-7.056940,8.568646,1.625934,-4.387122,1.004750,5.389164,9.602452,7.786572,2.144629,8.430917,3.787197,1.949297,6.981090,1.674600,-3.259645,-8.335375,8.754144,-5.889823,-6.029345,-9.306493,-7.825259,4.480319,4.933284,-6.179059,-9.098499,-4.972564,6.158930,-3.956510,-7.601668,0.544899,4.763843,2.793203,5.456573,3.109290,-5.775827,-8.856657,0.953273,-1.779371,-7.006111,4.296997,-7.891026,-5.850748,4.747865,-8.383290,-9.796160,0.234411,-2.635209,-3.077898,-1.227399,8.630892,8.634585,2.072204,0.101331,-4.723244,1.065884,7.823155,4.957964,6.534506,-3.110005,-3.717227,7.954569,-1.726772,-8.148577,2.957163,5.366490,9.163197,-4.131197,5.727583,-4.921915,-8.797789,-2.152871,-5.496712,8.563988,-4.760846,3.856735,9.256238,-3.932896,-0.805743,-9.626188,-2.654134,3.703147,2.035787,-3.050234,6.689417,-4.363460,-8.411420,5.393836,-8.821259,-2.080732,3.974629,-6.071263,-3.528167,-9.656868,4.301525,8.891881,-0.481491,-9.356711,-4.755786,7.517940,0.450056,7.995787,-4.373637,-3.016154,-3.307592,7.546916,1.841276,-3.444801,8.623679,-5.252342,2.304218,-5.613806,-3.669652,9.731624,7.266722,0.724041,-4.134560,2.611719,1.033599,-1.868872,-9.462530,1.627567,6.453583,-6.118398,7.783109,1.056561,-6.609952,-4.663480,-1.892117,7.139247,-6.880652,5.555718,-7.931887,3.816281,-6.277314,2.680842,-5.942439,-7.139805,-4.984919,-3.708741,-7.819500,-2.850119,4.730699,6.651528,0.048949,3.518279,0.992198,-6.666439,7.594769,-4.624449,0.464003,0.760727,-1.567260,8.120254,-6.270154,-0.716034,-8.708962,5.557797,-3.258411,9.942986,0.623257,5.344978,3.074607,-6.466053,-9.148295,0.172803,-9.514804,9.463367,-6.232827,6.980151,-9.234301,5.234866,4.918178,-8.942998,-0.019088,3.960056,-5.650615,-9.928181,-5.558311,5.666194,9.343740,5.540466,4.509809,7.846007,5.243923,-0.559891,-6.418689,-3.254088,-5.114083,8.979412,6.375452,-3.520322,-1.360002,1.611493,-6.851218,9.399972,5.571803,4.869168,7.770510,2.665019,-0.146568,-1.374232,8.368913,-9.466751,6.428558,-1.833483,-4.917681,-7.804916,-6.990668,5.682739,-5.752991,-4.628579,1.197805,-0.918204,-8.460163,-5.050370,2.741993,-6.776595,3.963121,-7.802447,-9.094899,9.967384,-2.686197,2.524850,-6.830442,4.462775,0.863645,-4.889438,6.133129,6.677882,-9.219488,-4.343690,-8.331731,9.996801,9.372299,-5.701697,-7.014574,-5.257211,-5.174275,4.965394,7.556949,0.781033,4.984986,6.703671,7.786912,-1.421547,-3.171259,6.778366,9.560137,1.351940,3.659574,4.877614,0.998206,-7.349515,7.462350,-9.900287,-2.810577,-4.165459,-0.556296,-1.309705,-0.138296,4.383020,-7.739654,-2.007115,5.574951,-2.666033,0.495953,3.159292,-3.746438,-4.563318,4.698493,-5.722770,7.533582,4.256871,-0.484053,2.423677,4.765142,-4.081709,3.041825,7.936284,-6.292084,8.381167,2.723921,-9.589534,-1.242914,-5.851334,-0.441761,8.900164,1.666269,6.090395,3.075399,-4.869371,8.373361,-6.543295,9.998922,-8.787977,7.952190,-3.844612,-5.550317,-9.196710,0.748351,-5.955302,3.369235,9.163784,4.965336,9.033945,4.630435,8.087192,-0.646558,-9.900300,4.099842,9.912516,-8.435932,-4.469273,-8.884216,-8.046141,9.639269,8.876307,-2.934879,5.016645,4.357989,-3.581357,-8.430388,-9.040963,6.223979,3.265778,6.528190,-7.094788,-2.414655,-9.425745,7.494812,-3.323065,4.834575,-1.840555,8.875218,4.494917,-7.633034,9.484375,0.823556,9.521559,-1.451987,-9.698903,5.580942,-6.605385,7.554930,-7.834276,4.013277,8.993910,9.265411,-5.769989,4.282950,2.315765,-9.101886,-7.075631,-7.014886,-8.631093,-3.124619,-0.126124,2.662053,5.101624,0.830138,-1.598442,0.038177,-0.426899,9.562270,6.886764,-3.388812,-6.851285,3.227851,1.783078,-7.058450,1.703866,-8.384495,-7.765542,-5.179634,-5.606920,6.759505,-4.645257,-1.208325,2.591668,6.483946,-0.449246,-2.919773,-0.060969,7.361742,5.897287,-3.345096,4.439335,4.974657,-4.219162,3.693826,2.267511,2.205106,2.490184,-7.895773,1.906013,6.170920,-1.656285,-1.976801,-3.053694,-3.558421,7.633251,-9.235561,7.252413,-7.664103,6.512683,-8.802474,8.076602,-5.475270,3.841670,6.455610,-4.834514,-3.198728,-9.373589,-4.769920,-9.076793,3.242232,9.167110,-8.633810,7.753194,-0.550615,7.122259,9.772154,5.681781,9.598161,1.886015,6.471923,-7.982332,-8.385141,6.649228,7.160373,3.751515,2.086396,-5.178669,8.392478,0.181588,-9.641452,-3.240382,9.328343,2.813043,-7.077722,0.005699,-9.398907,3.154231,9.384960,0.780858,-3.118379,5.518590,6.463422,-6.598554,8.103586,1.935087,-8.571767,3.535811,0.139867,-7.626985,2.372394,0.816656,0.673588,-3.203772,0.716243,9.014087,-8.828646,-8.026808,-0.979558,-2.228174,-5.400010,1.976481,0.832406,-9.634648,4.683743,-8.242335,-4.236377,3.365614,-1.781882,-5.932068,7.018326,-6.131592,-0.983606,-2.926855,6.468187,-2.119313,-4.749864,-5.010580,4.541336,-0.379576,6.265529,7.495624,-1.410587,-4.663949,5.557652,2.279812,-1.755134,-5.298355,-6.622202,-8.438268,-3.318851,7.211173,-5.740916,-9.932355,-8.346963,4.770034,-0.012604,2.077933,7.506108,3.135784,7.755887,9.521821,-5.515200,-8.561843,-2.273508,-1.207179,-4.899835,9.548227,6.439276,-8.373772,-9.464318,-0.121856,-3.010232,-6.090417,3.627671,-0.132370,-8.417175,-7.074188,-7.007757,2.494161,4.299642,0.118263,7.123461,7.079028,-4.443582,-5.418871,0.223551,9.096574,-7.028053,5.755521,-7.918686,-1.049580,4.214643,6.064607,-4.944652,6.061307,2.249945,0.962565,6.226847,3.481993,-2.132701,2.335449,-4.927325,1.765491,-9.187396,-3.310295,3.328435,4.625616,-0.494379,-3.860947,3.838651,-8.037731,-7.420040,0.636280,-3.872257,0.910123,-3.778508,-0.545895,-6.905843,1.898628,-6.976677,3.402445,4.335435,4.838094,6.905068,-4.218663,5.370858,8.626994,-1.016736,8.209912,-9.280366,4.348488,1.189575,6.856140,4.672373,-4.004000,6.849746,8.632351,-0.229517,-6.510328,-5.613567,-5.605802,7.250385,9.582105,-6.068836,0.664384,-8.860412,8.726351,-9.153710,9.434193,-4.493620,-8.804964,5.184123,-2.652262,-8.502096,2.915214,3.850411,-3.757081,-7.242561,-1.317470,-1.601453,8.126761,-7.154956,8.222173,8.094365,-0.784488,-0.880878,5.504847,2.817747,-6.307786,-5.842570,-6.625112,9.414969,9.456190,8.996200,7.971209,5.464840,-0.039670,3.759812,-8.555168,-7.732080,-6.286286,8.413577,-7.423650,4.630987,-0.405934,-9.113391,5.206129,6.213727,4.811659,-2.925747,1.307051,0.862200,7.146069,3.165588,-3.362425,1.945824,-4.589597,-1.177894,7.391304,6.835900,-0.202722,-6.336495,-2.996466,-7.203835,-7.099689,-8.495806,-4.027761,5.858084,-7.401041,1.497145,-1.862145,-7.637750,-4.374855,5.445786,-9.472486,8.528959,1.489626,4.990893,-2.546011,4.317154,-7.459046,-0.126964,-1.057242,4.481647,-2.097801,2.114116,4.376514,9.718233,-8.931740,2.937765,-9.341964,1.359751,-6.713342,4.394363,-5.606397,-7.157322], dtype = "float32")#candidate|8264|(960,)|const|float32
call_8263 = relay.TupleGetItem(func_5172_call(relay.reshape(const_8264.astype('float32'), [8, 10, 12])), 0)
call_8265 = relay.TupleGetItem(func_5175_call(relay.reshape(const_8264.astype('float32'), [8, 10, 12])), 0)
output = relay.Tuple([call_8261,call_8263,const_8264,])
output2 = relay.Tuple([call_8262,call_8265,const_8264,])
func_8275 = relay.Function([], output)
mod['func_8275'] = func_8275
mod = relay.transform.InferType()(mod)
mutated_mod['func_8275'] = func_8275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8275_call = mutated_mod.get_global_var('func_8275')
call_8276 = func_8275_call()
output = call_8276
func_8277 = relay.Function([], output)
mutated_mod['func_8277'] = func_8277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8156_call = mod.get_global_var('func_8156')
func_8157_call = mutated_mod.get_global_var('func_8157')
call_8343 = relay.TupleGetItem(func_8156_call(), 0)
call_8344 = relay.TupleGetItem(func_8157_call(), 0)
var_8348 = relay.var("var_8348", dtype = "float32", shape = (8, 10, 12))#candidate|8348|(8, 10, 12)|var|float32
bop_8349 = relay.add(call_8343.astype('float64'), relay.reshape(var_8348.astype('float64'), relay.shape_of(call_8343))) # shape=(8, 10, 12)
bop_8352 = relay.add(call_8344.astype('float64'), relay.reshape(var_8348.astype('float64'), relay.shape_of(call_8344))) # shape=(8, 10, 12)
func_8175_call = mod.get_global_var('func_8175')
func_8176_call = mutated_mod.get_global_var('func_8176')
call_8369 = func_8175_call()
call_8370 = func_8175_call()
uop_8374 = relay.sinh(var_8348.astype('float32')) # shape=(8, 10, 12)
func_6065_call = mod.get_global_var('func_6065')
func_6068_call = mutated_mod.get_global_var('func_6068')
call_8378 = relay.TupleGetItem(func_6065_call(relay.reshape(call_8343.astype('float32'), [8, 10, 12])), 0)
call_8379 = relay.TupleGetItem(func_6068_call(relay.reshape(call_8343.astype('float32'), [8, 10, 12])), 0)
func_6202_call = mod.get_global_var('func_6202')
func_6203_call = mutated_mod.get_global_var('func_6203')
call_8380 = func_6202_call()
call_8381 = func_6202_call()
func_7231_call = mod.get_global_var('func_7231')
func_7233_call = mutated_mod.get_global_var('func_7233')
const_8425 = relay.const([[2.033591,-3.262257,-3.771543,9.988571,-5.503654,5.977187,6.425415,9.389275,-6.522043,-8.384930,-6.659958,9.426902,-1.556444,3.372607,8.334346,-3.362311,6.742946,-2.232575,-4.982544,-1.216700,-1.049422,3.427656,-7.260182,-8.960173,-1.090072,6.373050,2.480777,-5.198176,4.626744,-0.751238,-5.174024,5.777052,-6.251967,4.193878,-7.027494,3.034907,2.073703,-9.555368,1.888644,8.919186,8.502612,5.564315,3.916190,4.494880,5.574258,8.436811,-4.137457,9.179404,-2.567377,2.340750,-1.545226,-0.815311,7.442958,8.541582,5.935186,-6.389744,-9.349796,3.450437,-9.054964,-3.834353,8.462247,1.544968,4.071839,-5.835484,0.323850,-9.419126,-8.351260,6.863132,7.110086,2.187893,0.272995,-5.541754,4.839661,4.599764,-8.587120,0.949804,-3.597739,1.718556,2.349812,4.280948,9.670751,2.608973,-5.912234,-5.414817],[1.795806,-5.999547,9.524390,-7.767145,2.805929,-0.853534,-0.782802,0.679589,-5.758834,-2.567174,-5.273651,-7.413190,8.851321,9.043644,8.125559,7.424099,2.576794,4.719931,-2.602486,6.537238,-8.094918,4.325025,9.700406,8.377144,8.776893,-7.628180,4.350965,-3.195708,-1.659760,9.689447,8.807185,-7.973669,-2.568241,9.103189,-0.430619,-0.797604,5.807090,5.924468,-7.355999,-7.288569,-9.331612,2.324584,-6.472016,-6.112750,-9.109070,-4.235239,-1.953621,-8.277610,-6.079298,-9.555047,9.663957,3.035284,-2.996579,1.666791,1.180721,5.234086,-5.355953,-2.195331,-7.014500,6.527807,-1.747393,-2.822460,3.436026,0.997462,-5.841926,-1.718309,9.487737,-3.725198,-7.454336,-7.310811,-2.498973,0.391051,2.220814,3.112016,-8.393536,-8.804732,-4.414240,8.399753,8.249786,5.032978,-7.225952,1.739075,-7.362007,-2.664481],[-1.687193,-0.081684,-8.350086,9.333467,8.258205,0.618210,-7.885113,-0.471064,-8.255486,-6.327413,6.915261,8.032834,7.184535,0.412958,8.504335,-8.204891,-3.723499,-4.978739,-9.069163,-1.114481,-1.411449,8.724025,3.095480,1.546202,3.425071,-7.578050,4.634508,3.026783,-3.364215,-9.597510,-5.596908,3.876244,-3.759581,1.349881,-9.145220,-3.868759,9.739067,3.000026,-1.140502,-7.902022,-5.524087,-4.363685,-9.518506,-1.853685,-4.249077,-0.128628,3.493544,6.194952,1.078649,-4.629303,7.342704,-0.690889,-4.459461,8.305347,-0.045013,-6.429233,-9.289077,1.612947,-8.933181,-8.488332,-0.482055,1.657404,-4.004330,6.031819,2.875469,1.460536,7.603418,4.248976,6.532429,-3.534395,-8.400611,-3.948043,4.773564,-4.544353,4.922374,-9.805988,9.862272,1.083124,-1.531095,-3.189343,-2.483213,-6.985721,2.670151,8.391062],[5.947067,3.678253,4.345210,-7.135428,0.520570,-7.223091,1.823116,-3.533530,8.336039,7.577137,1.259452,1.043162,1.295427,5.775238,-7.788257,-2.277247,-7.634846,9.439690,5.509824,-7.285387,-6.592850,-7.546548,7.820694,0.080131,-7.175163,-3.214867,-7.148174,-5.634171,-7.610116,-1.574074,-1.637084,-5.962207,-4.670024,-7.976681,4.571694,-0.965708,-8.853961,-4.217378,-3.443194,-4.441043,-3.074826,-3.453413,-5.949839,-7.092404,-0.563219,0.405438,4.288059,4.114190,-2.346273,-7.760511,-2.012691,5.400842,0.933133,-9.704961,9.565560,-2.552417,8.723487,-1.969812,1.881130,-3.307925,-0.851890,2.554172,0.751272,8.974458,-9.030898,-5.128964,6.922507,9.908508,9.462010,-8.789308,-3.777973,-3.818882,6.783388,-2.248149,6.421614,-0.097756,-3.818171,-2.166711,-5.153361,3.512999,3.078554,2.939461,-0.674121,4.800219]], dtype = "float64")#candidate|8425|(4, 84)|const|float64
call_8424 = func_7231_call(relay.reshape(const_8425.astype('float64'), [7, 16, 3]))
call_8426 = func_7231_call(relay.reshape(const_8425.astype('float64'), [7, 16, 3]))
func_7758_call = mod.get_global_var('func_7758')
func_7759_call = mutated_mod.get_global_var('func_7759')
call_8444 = relay.TupleGetItem(func_7758_call(), 0)
call_8445 = relay.TupleGetItem(func_7759_call(), 0)
func_6202_call = mod.get_global_var('func_6202')
func_6203_call = mutated_mod.get_global_var('func_6203')
call_8446 = func_6202_call()
call_8447 = func_6202_call()
func_2649_call = mod.get_global_var('func_2649')
func_2651_call = mutated_mod.get_global_var('func_2651')
call_8450 = relay.TupleGetItem(func_2649_call(), 0)
call_8451 = relay.TupleGetItem(func_2651_call(), 0)
output = relay.Tuple([bop_8349,call_8369,uop_8374,call_8378,call_8380,call_8424,const_8425,call_8444,call_8446,call_8450,])
output2 = relay.Tuple([bop_8352,call_8370,uop_8374,call_8379,call_8381,call_8426,const_8425,call_8445,call_8447,call_8451,])
func_8457 = relay.Function([var_8348,], output)
mod['func_8457'] = func_8457
mod = relay.transform.InferType()(mod)
var_8458 = relay.var("var_8458", dtype = "float32", shape = (8, 10, 12))#candidate|8458|(8, 10, 12)|var|float32
output = func_8457(var_8458)
func_8459 = relay.Function([var_8458], output)
mutated_mod['func_8459'] = func_8459
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8473 = relay.var("var_8473", dtype = "float32", shape = (11, 1, 6))#candidate|8473|(11, 1, 6)|var|float32
var_8474 = relay.var("var_8474", dtype = "float32", shape = (11, 8, 6))#candidate|8474|(11, 8, 6)|var|float32
bop_8475 = relay.power(var_8473.astype('float32'), var_8474.astype('float32')) # shape=(11, 8, 6)
output = bop_8475
output2 = bop_8475
func_8483 = relay.Function([var_8473,var_8474,], output)
mod['func_8483'] = func_8483
mod = relay.transform.InferType()(mod)
mutated_mod['func_8483'] = func_8483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8483_call = mutated_mod.get_global_var('func_8483')
var_8485 = relay.var("var_8485", dtype = "float32", shape = (11, 1, 6))#candidate|8485|(11, 1, 6)|var|float32
var_8486 = relay.var("var_8486", dtype = "float32", shape = (11, 8, 6))#candidate|8486|(11, 8, 6)|var|float32
call_8484 = func_8483_call(var_8485,var_8486,)
output = call_8484
func_8487 = relay.Function([var_8485,var_8486,], output)
mutated_mod['func_8487'] = func_8487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8275_call = mod.get_global_var('func_8275')
func_8277_call = mutated_mod.get_global_var('func_8277')
call_8520 = relay.TupleGetItem(func_8275_call(), 2)
call_8521 = relay.TupleGetItem(func_8277_call(), 2)
output = relay.Tuple([call_8520,])
output2 = relay.Tuple([call_8521,])
func_8523 = relay.Function([], output)
mod['func_8523'] = func_8523
mod = relay.transform.InferType()(mod)
output = func_8523()
func_8524 = relay.Function([], output)
mutated_mod['func_8524'] = func_8524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3677_call = mod.get_global_var('func_3677')
func_3679_call = mutated_mod.get_global_var('func_3679')
call_8534 = func_3677_call()
call_8535 = func_3677_call()
output = relay.Tuple([call_8534,])
output2 = relay.Tuple([call_8535,])
func_8536 = relay.Function([], output)
mod['func_8536'] = func_8536
mod = relay.transform.InferType()(mod)
mutated_mod['func_8536'] = func_8536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8536_call = mutated_mod.get_global_var('func_8536')
call_8537 = func_8536_call()
output = call_8537
func_8538 = relay.Function([], output)
mutated_mod['func_8538'] = func_8538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5089_call = mod.get_global_var('func_5089')
func_5091_call = mutated_mod.get_global_var('func_5091')
call_8566 = func_5089_call()
call_8567 = func_5089_call()
uop_8599 = relay.exp(call_8566.astype('float64')) # shape=(14, 1, 15)
uop_8601 = relay.exp(call_8567.astype('float64')) # shape=(14, 1, 15)
output = uop_8599
output2 = uop_8601
func_8603 = relay.Function([], output)
mod['func_8603'] = func_8603
mod = relay.transform.InferType()(mod)
output = func_8603()
func_8604 = relay.Function([], output)
mutated_mod['func_8604'] = func_8604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8127_call = mod.get_global_var('func_8127')
func_8129_call = mutated_mod.get_global_var('func_8129')
call_8655 = relay.TupleGetItem(func_8127_call(), 0)
call_8656 = relay.TupleGetItem(func_8129_call(), 0)
uop_8669 = relay.cosh(call_8655.astype('float64')) # shape=(14, 1, 15)
uop_8671 = relay.cosh(call_8656.astype('float64')) # shape=(14, 1, 15)
func_6164_call = mod.get_global_var('func_6164')
func_6166_call = mutated_mod.get_global_var('func_6166')
call_8672 = func_6164_call()
call_8673 = func_6164_call()
output = relay.Tuple([uop_8669,call_8672,])
output2 = relay.Tuple([uop_8671,call_8673,])
func_8675 = relay.Function([], output)
mod['func_8675'] = func_8675
mod = relay.transform.InferType()(mod)
output = func_8675()
func_8676 = relay.Function([], output)
mutated_mod['func_8676'] = func_8676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1940_call = mod.get_global_var('func_1940')
func_1942_call = mutated_mod.get_global_var('func_1942')
call_8679 = func_1940_call()
call_8680 = func_1940_call()
func_1167_call = mod.get_global_var('func_1167')
func_1169_call = mutated_mod.get_global_var('func_1169')
const_8682 = relay.const([-9.805449,5.898130,1.183711,-5.264556,-9.420843,-1.030586,2.510765,-0.911474,-6.667523,-1.557379,-0.839128,0.849481,-7.081294,7.395028,-5.265881,8.569346,-3.789132,1.013880,-7.180773,-7.293626,-8.546554,-5.571118,-5.390909,7.072149,-0.989524,-1.742341,-7.979265,-7.118619,-7.953676,-2.201086,9.802952,0.487533,-7.377713,7.758380,-1.794982,3.495187,-9.790223,-8.412981,-4.887369,-5.159734,4.991434,6.866675,-9.397898,-3.831883,4.430115,-9.325324,-3.052600,-7.823156,-7.725471,7.093862,-8.041632,8.449947,5.376473,1.958906,2.066929,-7.431103,6.012836,8.359641,7.381690,-6.826533,-3.529528,3.380515,-9.514466,-1.757475,-3.542552,-4.628602,-4.462103,6.797475,7.038908,-2.828679,-7.801155,-0.812299,-1.933575,-0.072823,8.416306,7.756706,6.241368,2.340677,-8.118680,-3.117173,6.254835,3.362117,-3.637153,2.655581,-9.074366,3.712111,-3.800481,-4.344211,0.165849,9.311838,5.310969,-6.844631,0.100318,-2.462543,9.233122,-8.857956,1.843457,4.784218,9.223414,-4.521317,-0.425245,-1.384287,6.804935,5.622966,9.502069,9.301805,4.906914,0.294514,1.033228,3.837171,-7.178283,-3.103253,0.669620,-6.948295,-0.931934,-0.067372,-3.400075,-4.793342,0.274162,-5.116054,-0.478192,2.759658,5.939381,-4.132882,4.028193,-8.640383,-4.831526,6.160752,-1.835700,-8.562269,-9.042133,2.664140,4.000057,-2.820712,1.529435,-0.016563,9.308582,-2.749946,-4.755277,4.625438,-9.021814,-7.945454,-5.953407,-6.952923,2.007667,-0.617069,-9.841645,-8.646582,1.776742,-2.680677,9.261143,-4.961111,2.546844,1.658840,0.784982,6.258408,-3.332987,-1.112451,5.806728,0.837307,1.649635,6.449760,2.976603,-6.916569,-3.955266,-0.249299,5.381744,-1.183558,5.883599,-7.224069,2.899919,-0.524084,5.343262,-9.738774,3.957038,0.839333,3.540463,-1.205779,-3.867674,2.530711,-9.453439,-9.509289,-5.968963,-9.151010,5.056172,6.710578,-9.305147,-5.456406,-2.541054,-8.889881,7.417965,6.067396,-4.932943,1.922935,-0.877125,-8.594543,-0.506669,-2.838401,8.434665,-1.694905,3.774418,8.392895,9.573843,-3.997811,8.289089,-6.178049,-0.595072,2.972627,6.832232,-1.229736,-6.534779,-5.114372,7.592131,0.209112,6.834589,5.402389,9.279680,-2.443099,6.980464,7.092821,-3.518894,5.110084,6.196880,6.061436,0.324981,-7.549489,-3.155410,1.948337,8.903832,4.647903,-6.280268,2.110359,1.155194,1.746254,-3.488197,3.566062,-0.893867,-9.138212,-4.522732,-7.446091,1.650018,5.182566,-9.822431,0.778832,7.719745,-2.468821,-9.127160,-9.026177,-2.902192,-8.877551,-7.387385,2.811998,-4.197401,-0.324471,6.081268,-8.539345,5.222632,9.386909,-5.337290,2.963626,8.995152,-0.114255,3.103798,8.727192,-4.645014,0.073157,-5.084675,7.532193,-4.391091,4.866933,-2.519318,-6.775249,8.681022,2.378285,-1.812289,1.455522,2.316425,6.392490,-6.269914,-9.960212,-9.021283,3.992129,-9.290312,8.512283,-8.797391,-0.576188,0.102657,-9.861472,-2.631016,-6.971609,-2.097624,-5.141971,6.902848,7.085527,6.988452,-2.759590,4.178911,-9.193298,-1.240341,-2.381611,-1.664377,-6.776003,4.390446,-5.828865,-8.940042,-4.525812,-6.593639,-8.573193,2.940575,-3.846339,3.405788,-5.923924,-8.628525,-1.450277,5.999218,-9.750041,-7.143273,2.969447,7.940462,7.740632,-8.240455,7.059401,9.961473,9.032631,5.181520,7.117030,-6.184778,2.278525,-0.899990,-5.258504,-7.003935,5.882065,2.147652,-2.930553,-3.824419,-0.361745,0.310379,8.583451,-1.542155,3.771982,-5.060791,-9.721413,7.845504,-4.908686,-1.766506,9.297675,5.463877,1.882476,5.976453,4.818461,7.428352,-5.148013,4.376143,7.354968,-4.470981,4.408789,0.229905,-4.865600,1.676191,-4.192275,7.625629,-5.308631,-6.062536,3.579285,6.391210,6.537019,-3.236226,-4.931069,-8.967525,4.678855,-5.498612,9.041424,7.471763,-9.461333,-0.838351,-2.997197,-7.776926,-4.413539,-2.951859,-9.123815,7.626224,-4.304751,-4.973635,8.639363,5.107361,0.446444,-7.415252,4.343639,-3.936655,-3.542504,6.718931,-5.053408,-5.242846,-7.889890,-9.304020,-8.921167,7.345443,-4.066034,9.332577,-0.489286,-3.061476,0.956080,-4.236656,-9.868284,-3.995335,-4.272458,6.290641,-4.905503,7.598482,-4.119316,1.247888,1.971954,-0.060541,-4.882009,-9.738623,-7.591166,8.369416,3.371253,-9.619718,-2.320335,-1.668533,-4.355796,-1.712500,6.537272,-4.270665,0.533370,7.398953,-5.696581,-3.835656,1.263988,9.497580,-9.218816,1.913395,-0.090578,9.285205,1.935214,6.781386,-0.213426,-2.493335,-5.615104,7.296739,-1.686805,-7.700736,-0.285423,-4.598399,6.564004,0.783657,-6.357806,6.237545,2.130817,6.196555,9.928585,-9.447821,-1.190217,1.368823,5.452027,7.976554,1.381327,-5.038417,-7.146166,-9.520103,-1.022655,8.046005,-2.930900,-8.174999,-6.647428,-3.007972,-3.647388,7.481037,3.422004,5.359890,8.522760,4.185603,8.830172,4.222099,-6.611766,5.826738,3.513462,9.029802,-5.901770,7.814979,8.073300,-0.927441,2.642967,4.061171,-0.411099,3.473385,0.704094,6.246685,4.674409,-3.002337,-9.581094,-7.842937,4.735465,0.039648,2.307489,-7.691755,0.727360,7.934295,-5.070387,3.562068,7.203342,-9.032715,2.348275,3.787527,-8.180246,-2.536992,-7.260559,4.117238,-5.888069,6.080521,8.296667,5.172939,-5.993675,8.977247,3.427924,8.189718,-2.405498,3.209933,1.781811,-8.485102,-0.029121,-3.905573,8.019522,-0.717487,8.548832,-9.799446,8.826452,2.772698,-2.696002,-8.513878,6.873143,-4.375386,-2.742090,-6.175238,5.073981,7.979921,2.387923,-3.094976,5.604419,7.431894,-7.718067,-1.720978,5.908302,9.900866,-1.334277,8.608704,8.028310,3.617931,0.180189,-5.051800,-0.775733,-5.541187,3.747726,7.071884,-6.075726,8.272218,-1.200537,-2.221338,3.670884,1.131407,-0.267557,-4.295055,-6.528366,3.049035,2.297600,-2.190845,9.583471,8.806191,1.320066,-9.284929,2.129325,-5.094675,0.744500,3.582377,-3.485203,-4.480247,5.171223,2.147748,8.863354,2.988537,-0.830641,-0.780186,8.992198,-3.350774,-8.238410,-2.226395,7.908804,0.518043,6.112219,3.306198,5.883355,-2.788767,-8.244858,6.525990,-3.572480,-8.555267,-4.387641,4.117072,0.890797,5.916644,-4.550853,6.213070,-9.403851,-5.673385,-7.245635,-8.705469,9.507013,-6.206452,-3.626564,6.519516,9.234130,9.044976,6.178810,5.453224,-1.127546,-9.500393,-9.241997,-9.908333,0.556279,-5.948534,1.610881,5.567233,-7.504781,-6.085087,4.510699,3.589662,-7.755928,8.499678,6.211924,-5.644189,1.135093,-7.536247,-7.658035,-0.475796,3.319950,5.623863,3.944464,-3.712461,8.272134,-5.620652,-7.300861,2.040500,-9.700229,-2.570536,1.361805,-1.355099,-7.955089,-6.369818,9.912016,-3.913915,7.438019,4.825377,-4.681155,-0.791344,5.480997,7.210100,8.464619,-8.681757,0.701805,6.794130,0.893847,3.243176,5.884704,-3.973985,-7.948222,9.959719,6.906780,7.406969,-0.278236,8.770445,-3.777713,-0.986406,8.642346,-5.641873,5.198042,2.006529,9.088353,-0.604338,-5.072706,8.629848,0.908976,-3.626937,-4.391116,1.359085,-8.277959,-5.949845,5.628115,-7.377518,3.420311,2.897455,-5.336024,9.938987,0.257538,-4.501295,-2.932580,-7.225760,7.517911,-7.029977,-1.046331,-9.256951,-5.977939,-8.443581,7.472421,-2.885904,8.771332,-7.095302,-5.462493,5.114737,3.929529,8.753608,0.760678,-1.405912,8.970609,-1.239143,-3.782665,-7.481120,1.473207,-5.785994,0.222087,0.362820,-1.850110,-9.161533,6.240575,-2.370965,-6.931927,3.777946,8.191766,-5.501705,-2.496984,9.441359,4.489834,-2.917229,-7.550583,-1.637188,2.170840,-1.378155,2.405658,3.006779,-9.989675,5.806556,8.675863,-9.206150,-7.086256,6.971645,-3.104314,6.912908,-6.879100,-5.054928,-7.729903,-4.189098,4.652909,3.381306,-0.989926,0.621247,-8.660343,3.171021,0.834836,8.077306,-7.865092,3.111762,2.296420,-0.320789,-1.995960,-9.605095,8.985448,-7.289370,9.983584,8.356216,-9.074770,-9.880185,-7.752328,2.407458,4.350006,4.256886,0.968779,-0.965330,-8.210692,5.562815,-6.446883,8.884870,-9.934134,-7.789271,-0.036863,2.705301,-4.676397,9.024773,9.344814,5.870907,8.999490,-1.558537,0.422467,1.489543,-1.511494,-7.028202,-5.153401,-5.357996,9.860782,-7.183193,9.880534,6.355630,9.891394,-1.413032,6.657829,-9.338398,-7.738728,2.846133,7.260225,3.829109,1.594755,-1.580685,-4.332727,4.892944,5.624692,1.448140,0.675871,1.809083,0.974163,-4.992825,1.440055,-5.175860,0.715432,1.472118,-5.344610,-4.646142,-5.061013,-8.391959,-2.014001,-2.115316,8.173824,-8.673861,-5.460199,-2.500579,6.777786,-7.150761,1.848320,-7.648320,9.398833,4.657237,9.894308,5.344843,8.303264,-5.565337,0.177727,5.570248,-5.677864,-0.130297,3.867610,-5.685266,5.488692,2.749885,2.246321,8.018446,4.248599,1.132520,7.718813,-9.081468,-1.250036,-5.738550,-4.191138,-1.353420,2.345560,7.192128,2.453601,2.748160,6.708629,6.735964,-2.677902,6.547915,-6.756917,-4.733481,6.364686,-5.957809,8.493432,-6.524482,-9.585386,-9.435415,5.744641,0.914417,-7.106971,9.087389,1.855703,-8.121855,4.381338,-6.947587,-8.388138,5.285193,5.130910,8.995175,-8.259695,-7.100720,0.137373,-5.707815,3.371279,5.016523,-5.232714,4.083782,-2.662696,-9.079697,8.202057,7.767794,9.371413,2.039025,-3.019542,-5.120669,-0.609004,4.265723,2.973649,-7.093229,0.520439,-1.549161,-4.441295,-9.809620,-6.153707,4.216104,6.350567,6.557194,6.762103,3.975041,-6.262836,1.144055,6.637862,-3.041074,-4.271434,7.860202,-0.431292,-0.803395,0.830460,3.012064,6.261094,9.259448,5.296281,5.416049,7.450587,-7.374130,-1.512950,2.465352,6.154537,7.018567,-9.307359,7.732108,-7.699258,-6.296165,-2.909375,7.128136,-7.795731,-2.458873,-0.379798,-2.291869,6.638721,5.322224,-1.861730,9.169978,-0.033903,-3.594745,7.447172,1.880923,4.175161,8.264690,-8.316912,6.054291,1.894508,-8.920516,8.151962,3.136523,-7.720185,0.527060,8.536730,-6.271669,4.848376,7.810193,-0.672198,-9.626310,-6.056064,-4.406156,9.718769,0.969345,1.278010,-4.772123,-7.686879,6.587016,-1.959543,-5.770690,1.427274,2.075996,0.861814,6.380582,5.485071,7.907360,1.356112,-7.668613,7.365873,3.962557,-9.901938,9.134523,-8.298389,6.822654,0.055785,-6.060157,-1.755427,0.770880,-5.024495,9.498014,1.578063,5.129377,-1.986000,2.423349,5.363375], dtype = "float64")#candidate|8682|(1008,)|const|float64
call_8681 = relay.TupleGetItem(func_1167_call(relay.reshape(const_8682.astype('float64'), [14, 8, 9])), 2)
call_8683 = relay.TupleGetItem(func_1169_call(relay.reshape(const_8682.astype('float64'), [14, 8, 9])), 2)
func_1476_call = mod.get_global_var('func_1476')
func_1480_call = mutated_mod.get_global_var('func_1480')
const_8689 = relay.const([2,6,6,9,8,3,-8,4,3,7,-6,8,3,1,8,7,2,3,7,-5,-10,2,9,-1,2,4,7,9,3,-9,-2,2,10,-5,-5,-6,9,4,-6,10,3,5,8,-1,-5,-2,7,-2,7,-3,-8,-9,7,-2,-10,-10,-6,4,10,-3,-8,-2,8,1,1,-8,-5,5,4,-6,2,9,4,2,-1,-8,1,-3,6,-4,9,8,-1,-5,-2,9,-10,2,2,-5,2,-1,5,-1,9,10,9,2,-2,-5,2,8,2,4,-5,-6,-4,9,-2,-4,6,-1,-3,5,3,-2,3,5,-10,-9,9,4,-4,-7,-3,-9,5,6,-4,5,-2,-2,-7,-2,7,-3,-7,-4,-10,-7,-1,4,8,-6,-2,2,10,-10,-1,3,4,-8,5,-1,-2,9,-7,-1,-2,9,-2,9,5,8,-4,5,10,-10,-5,9,-1,1,1,1,3,-1,-1,6,2,1,6,5,-9,-1,7,-2,-8,4,-6,-5,7,5,-6,3,6,7,9,-8,-8,3,-8,-2,7,-8,-3,4,-8,-7,10,6,3,8,5,2,-4,7,-1,10,6,-3,-2,-8,-5,-7,-6,-1,-6,3,-4,3,2,-1,10,3,1,5,-2,-6,-8,2,-7,3,1,-3,2,4,-7,-7,10,2,-5,-7,-10,5,-5,3,9,5,3,6,5,9,7,-10,-7,8,-3,-2,7,2,2,6,-5,-3,1,4,-9,10,1,3,-4,4,8,-10,-1,7,-2,-9,3,3,-9,-10,2,-6,-1,2,10,3,-2,-2,-9,-10,-3,-6,-1,2,8,10,-3,-2,3,-10,-2,2,-9,-8,-5,-7,-7,7,-4,8,3,1,-2,10,8,10,-4,5,7,10,-2,-10,-10,7,-6,-7,2,-4,-2,2,4,-2,-6,-10,10,7,-6,3,4,1,6,10,5,-6,8,-9,-10,9,-7,1,8,1,4,2,-5,-1,-1,3,-5,-5,7,-5,4,-4,-4,8,2,-6,5,-6,10,-5,6,-1,7,6,-1,-10], dtype = "int32")#candidate|8689|(390,)|const|int32
call_8688 = relay.TupleGetItem(func_1476_call(relay.reshape(const_8689.astype('int32'), [10, 13, 3]), relay.reshape(call_8681.astype('float32'), [576, 2]), ), 2)
call_8690 = relay.TupleGetItem(func_1480_call(relay.reshape(const_8689.astype('int32'), [10, 13, 3]), relay.reshape(call_8681.astype('float32'), [576, 2]), ), 2)
bop_8692 = relay.less_equal(call_8688.astype('bool'), relay.reshape(call_8681.astype('bool'), relay.shape_of(call_8688))) # shape=(576, 2)
bop_8695 = relay.less_equal(call_8690.astype('bool'), relay.reshape(call_8683.astype('bool'), relay.shape_of(call_8690))) # shape=(576, 2)
uop_8698 = relay.acos(call_8688.astype('float32')) # shape=(576, 2)
uop_8700 = relay.acos(call_8690.astype('float32')) # shape=(576, 2)
var_8701 = relay.var("var_8701", dtype = "float32", shape = (576, 2))#candidate|8701|(576, 2)|var|float32
bop_8702 = relay.maximum(uop_8698.astype('float64'), relay.reshape(var_8701.astype('float64'), relay.shape_of(uop_8698))) # shape=(576, 2)
bop_8705 = relay.maximum(uop_8700.astype('float64'), relay.reshape(var_8701.astype('float64'), relay.shape_of(uop_8700))) # shape=(576, 2)
output = relay.Tuple([call_8679,const_8682,const_8689,bop_8692,bop_8702,])
output2 = relay.Tuple([call_8680,const_8682,const_8689,bop_8695,bop_8705,])
F = relay.Function([var_8701,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8701,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

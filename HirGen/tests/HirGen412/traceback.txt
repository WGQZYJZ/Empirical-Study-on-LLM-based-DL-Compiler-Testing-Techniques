==========mod==========
#[version = "0.0.5"]
def @func_2323(%var_2320: Tensor[(14, 1, 15), float32]) -> (Tensor[(14, 1, 15), float32],) {
  %0 = cast(%var_2320, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %1 = rsqrt(%0) /* ty=Tensor[(14, 1, 15), float32] */;
  (%1,)
}

def @func_8156() -> (Tensor[(8, 10, 12), float32],) {
  %2 = @func_6001() /* ty=Tensor[(8, 10, 12), float32] */;
  (%2,)
}

def @func_3677() -> Tensor[(210), float32] {
  %3 = @func_2469() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
  %3.2
}

def @func_8536() -> (Tensor[(210), float32],) {
  %4 = @func_3677() /* ty=Tensor[(210), float32] */;
  (%4,)
}

def @func_3333() -> (Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(130), int16]) {
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %6 = reshape(%5, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %7 = @func_2804(%6) /* ty=(Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) */;
  %8 = @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */;
  %9 = %7.5;
  (%8, %9, meta[relay.Constant][0] /* ty=Tensor[(130), int16] */)
}

def @func_2469() -> (Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) {
  %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %11 = reshape(%10, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %12 = @func_2437(%11) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(14, ?, 15), float64], Tensor[(14, 1, 15), float32]) */;
  %13 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  %14 = %12.2;
  (%13, %14, meta[relay.Constant][1] /* ty=Tensor[(210), float32] */)
}

def @func_5521() -> (Tensor[(210), float32],) {
  %15 = @func_5365() /* ty=(Tensor[(210), float32],) */;
  %16 = %15.0;
  (%16,)
}

def @func_2120() -> Tensor[(8, 10, 12), uint16] {
  @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */
}

def @func_5893() -> (Tensor[(130), int16],) {
  %17 = @func_4384() /* ty=(Tensor[(8, 10, 12), float64], Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(10, 16, 6), float64]) */;
  %18 = %17.4;
  (%18,)
}

def @func_2437(%var_2417: Tensor[(210), float32]) -> (Tensor[(8, 10, 12), uint16], Tensor[(14, ?, 15), float64], Tensor[(14, 1, 15), float32]) {
  %19 = @func_2356() /* ty=(Tensor[(8, 10, 12), uint16],) */;
  %20 = cast(%var_2417, dtype="float32") /* ty=Tensor[(210), float32] */;
  %21 = reshape(%20, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), float32] */;
  %22 = @func_2323(%21) /* ty=(Tensor[(14, 1, 15), float32],) */;
  %23 = %22.0;
  %24 = cast(%var_2417, dtype="float64") /* ty=Tensor[(210), float64] */;
  %25 = shape_of(%23, dtype="int32") /* ty=Tensor[(3), int32] */;
  %26 = cast(%23, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %28 = cast(%23, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %29 = %19.0;
  %30 = floor_mod(%26, %27) /* ty=Tensor[(14, ?, 15), float64] */;
  %31 = log(%28) /* ty=Tensor[(14, 1, 15), float32] */;
  (%29, %30, %31)
}

def @func_8127() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 390, 15), int32], Tensor[(525), uint16], Tensor[(1008), float64], Tensor[(195, 2), int32]) {
  %32 = cast(meta[relay.Constant][2] /* ty=Tensor[(525), uint16] */, dtype="uint16") /* ty=Tensor[(525), uint16] */;
  %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %34 = cast(meta[relay.Constant][4] /* ty=Tensor[(195, 2), int32] */, dtype="int32") /* ty=Tensor[(195, 2), int32] */;
  %35 = reshape(%32, newshape=[525]) /* ty=Tensor[(525), uint16] */;
  %36 = reshape(%33, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %37 = reshape(%34, newshape=[390, 1]) /* ty=Tensor[(390, 1), int32] */;
  %38 = @func_7343(%35, %36, %37) /* ty=(Tensor[(210), float32], Tensor[(8, 10, 12), float32], Tensor[(525), uint16], Tensor[(1008), float64], Tensor[(1296), bool], Tensor[(14, 390, 15), int32]) */;
  %39 = @func_5089() /* ty=Tensor[(14, 1, 15), float32] */;
  %40 = %38.5;
  (%39, %40, meta[relay.Constant][2] /* ty=Tensor[(525), uint16] */, meta[relay.Constant][3] /* ty=Tensor[(1008), float64] */, meta[relay.Constant][4] /* ty=Tensor[(195, 2), int32] */)
}

def @func_8675() -> (Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float64]) {
  %41 = @func_8127() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 390, 15), int32], Tensor[(525), uint16], Tensor[(1008), float64], Tensor[(195, 2), int32]) */;
  %42 = %41.0;
  %43 = cast(%42, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
  %44 = cosh(%43) /* ty=Tensor[(14, 1, 15), float64] */;
  %45 = @func_6164() /* ty=Tensor[(14, 1, 15), float64] */;
  (%44, %45)
}

def @func_8026() -> (Tensor[(5, 14, 9), float32], float32, Tensor[(8, 10, 12), float32], float32, Tensor[(8, 10, 12), float32]) {
  %46 = cast(meta[relay.Constant][5] /* ty=Tensor[(5, 14, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 14, 9), float32] */;
  %47 = @func_2469() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
  %48 = %47.0;
  %49 = cast(%48, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %50 = reshape(%49, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), float32] */;
  %51 = @func_5172(%50) /* ty=(Tensor[(8, 10, 12), float32],) */;
  %52 = asinh(%46) /* ty=Tensor[(5, 14, 9), float32] */;
  %53 = @func_6497() /* ty=float32 */;
  %54 = @func_4240() /* ty=float32 */;
  %55 = %51.0;
  (%52, %53, %48, %54, %55)
}

def @func_4384() -> (Tensor[(8, 10, 12), float64], Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(10, 16, 6), float64]) {
  %56 = @func_1940() /* ty=Tensor[(8, 10, 12), uint16] */;
  %57 = cast(%56, dtype="float64") /* ty=Tensor[(8, 10, 12), float64] */;
  %58 = @func_2649() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %59 = cast(meta[relay.Constant][6] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %60 = reshape(%59, newshape=[130, 1]) /* ty=Tensor[(130, 1), int16] */;
  %61 = @func_3812(%60) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(13, 10, 4), int16], Tensor[(130, 1), int16], Tensor[(520), int16], Tensor[(15, 16, 1), float32]) */;
  %62 = rsqrt(%57) /* ty=Tensor[(8, 10, 12), float64] */;
  %63 = cast(%62, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %64 = reshape(%63, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float32] */;
  %65 = @func_1552(%64) /* ty=(Tensor[(10, 16, 6), float64],) */;
  %66 = %58.0;
  %67 = @func_3571() /* ty=Tensor[(8, 10, 12), float32] */;
  %68 = %61.4;
  %69 = %65.0;
  (%62, %66, %67, %68, meta[relay.Constant][6] /* ty=Tensor[(130), int16] */, %69)
}

def @func_4556(%var_4547: Tensor[(8, 10, 12), bool]) -> (Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), int16]) {
  %70 = @func_3990() /* ty=(Tensor[(8, 10, 12), uint32],) */;
  %71 = %70.0;
  %72 = cast(%71, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %73 = reshape(%72, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), float32] */;
  %74 = @func_3473(%73) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), bool]) */;
  %75 = %74.1;
  %76 = cast(%71, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%75, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %80 = cast(%var_4547, dtype="int16") /* ty=Tensor[(8, 10, 12), int16] */;
  %81 = shape_of(%75, dtype="int32") /* ty=Tensor[(3), int32] */;
  %82 = cast(%75, dtype="int16") /* ty=Tensor[(8, 10, 12), int16] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %84 = greater(%78, %79) /* ty=Tensor[(8, 10, 12), bool] */;
  %85 = bitwise_and(%82, %83) /* ty=Tensor[(8, 10, 12), int16] */;
  (%84, %85)
}

def @func_6867() -> (Tensor[(8, 10, 12), float32],) {
  %86 = @func_5078() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %87 = %86.0;
  (%87,)
}

def @func_4693() -> (Tensor[(1008), float64], Tensor[(520), float64], Tensor[(130), int16], Tensor[(14, 1, 15), float32]) {
  %88 = @func_4422() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(1008), float64]) */;
  %89 = cast(meta[relay.Constant][7] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %90 = reshape(%89, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %91 = @func_2804(%90) /* ty=(Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) */;
  %92 = @func_2874() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %93 = %92.0;
  %94 = cast(%93, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %95 = %88.1;
  %96 = %91.6;
  %97 = erf(%94) /* ty=Tensor[(14, 1, 15), float32] */;
  (%95, %96, meta[relay.Constant][7] /* ty=Tensor[(130), int16] */, %97)
}

def @func_5708(%var_5703: int32) -> (Tensor[(210), float32], Tensor[(8, 10, 12), float32], int32) {
  %98 = @func_5365() /* ty=(Tensor[(210), float32],) */;
  %99 = cast(%var_5703, dtype="int32") /* ty=int32 */;
  %100 = reshape(%99, newshape=[]) /* ty=int32 */;
  %101 = @func_3039(%100) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(12, 3, 9), int16], Tensor[(12, 3, 9), float32], Tensor[(12, 3, 9), bool]) */;
  %102 = %98.0;
  %103 = %101.0;
  (%102, %103, %var_5703)
}

def @func_4969() -> (Tensor[(8, 10, 12), float32],) {
  %104 = @func_4930() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %105 = %104.0;
  (%105,)
}

def @func_4082(%var_4064: Tensor[(2, 16, 13), float32], %var_4065: Tensor[(2, 16, 13), float32]) -> Tensor[(2, 16, 13), float32] {
  %106 = cast(%var_4065, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
  %107 = shape_of(%var_4064, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(%var_4064, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  subtract(%108, %109) /* ty=Tensor[(2, 16, 13), float32] */
}

def @func_4723(%var_4710: Tensor[(14, 5, 16), float32]) -> Tensor[(14, 5, 16), float64] {
  %110 = cast(%var_4710, dtype="float32") /* ty=Tensor[(14, 5, 16), float32] */;
  %111 = sqrt(%110) /* ty=Tensor[(14, 5, 16), float32] */;
  %112 = cast(%111, dtype="float64") /* ty=Tensor[(14, 5, 16), float64] */;
  exp(%112) /* ty=Tensor[(14, 5, 16), float64] */
}

def @func_1931(%var_1898: Tensor[(13, 10, 1), int16], %var_1899: Tensor[(13, 10, 4), int16]) -> (Tensor[(13, 10, 4), int16], Tensor[(13, 10, 4), float64], Tensor[(8, 10, 12), uint16]) {
  %113 = cast(%var_1898, dtype="int16") /* ty=Tensor[(13, 10, 1), int16] */;
  %114 = cast(%var_1899, dtype="int16") /* ty=Tensor[(13, 10, 4), int16] */;
  %115 = cast(%var_1899, dtype="float64") /* ty=Tensor[(13, 10, 4), float64] */;
  %116 = bitwise_and(%113, %114) /* ty=Tensor[(13, 10, 4), int16] */;
  %117 = acosh(%115) /* ty=Tensor[(13, 10, 4), float64] */;
  %118 = @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */;
  (%116, %117, %118)
}

def @func_5425() -> (Tensor[(130), int16], float32) {
  %119 = @func_4384() /* ty=(Tensor[(8, 10, 12), float64], Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(10, 16, 6), float64]) */;
  %120 = %119.4;
  %121 = @func_4240() /* ty=float32 */;
  (%120, %121)
}

def @func_6202() -> Tensor[(210), float32] {
  %122 = @func_4893() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
  %122.2
}

def @func_7587() -> (Tensor[(10, 8, 8), float32],) {
  %123 = @func_4841() /* ty=Tensor[(10, 8, 8), float64] */;
  %124 = cast(%123, dtype="float32") /* ty=Tensor[(10, 8, 8), float32] */;
  %125 = rsqrt(%124) /* ty=Tensor[(10, 8, 8), float32] */;
  (%125,)
}

def @func_6001() -> Tensor[(8, 10, 12), float32] {
  %126 = @func_4969() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %126.0
}

def @func_7001(%var_6996: Tensor[(9, 9, 10), float64]) -> Tensor[(9, 9, 10), float64] {
  %127 = cast(meta[relay.Constant][8] /* ty=Tensor[(9, 9, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 9, 10), float64] */;
  %128 = shape_of(%var_6996, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(%var_6996, dtype="float64") /* ty=Tensor[(9, 9, 10), float64] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%129, %130) /* ty=Tensor[(9, 9, 10), float64] */
}

def @func_3812(%var_3760: Tensor[(130, 1), int16]) -> (Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(13, 10, 4), int16], Tensor[(130, 1), int16], Tensor[(520), int16], Tensor[(15, 16, 1), float32]) {
  %131 = @func_2356() /* ty=(Tensor[(8, 10, 12), uint16],) */;
  %132 = @func_3333() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(130), int16]) */;
  %133 = %132.0;
  %134 = cast(%133, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %135 = @func_2649() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %136 = cast(%var_3760, dtype="int16") /* ty=Tensor[(130, 1), int16] */;
  %137 = cast(meta[relay.Constant][9] /* ty=Tensor[(520), int16] */, dtype="int16") /* ty=Tensor[(520), int16] */;
  %138 = reshape(%136, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), int16] */;
  %139 = reshape(%137, newshape=[13, 10, 4]) /* ty=Tensor[(13, 10, 4), int16] */;
  %140 = @func_1931(%138, %139) /* ty=(Tensor[(13, 10, 4), int16], Tensor[(13, 10, 4), float64], Tensor[(8, 10, 12), uint16]) */;
  %141 = @func_2617() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) */;
  %142 = %131.0;
  %143 = erf(%134) /* ty=Tensor[(8, 10, 12), float32] */;
  %144 = %135.0;
  %145 = %140.0;
  %146 = %141.1;
  (%142, %143, %144, %145, %var_3760, meta[relay.Constant][9] /* ty=Tensor[(520), int16] */, %146)
}

def @func_4240() -> float32 {
  %147 = @func_3559() /* ty=(float32,) */;
  %147.0
}

def @func_2356() -> (Tensor[(8, 10, 12), uint16],) {
  %148 = @func_2120() /* ty=Tensor[(8, 10, 12), uint16] */;
  (%148,)
}

def @func_7741(%var_7714: Tensor[(360), uint64]) -> (Tensor[(10, 8, 8), float64], Tensor[(10, 9, 4), bool], Tensor[(360), uint64], Tensor[(14, ?, 15), float64], Tensor[(105, 2), float32]) {
  %149 = cast(%var_7714, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %150 = cast(%var_7714, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %151 = reshape(%149, newshape=[10, 9, 4]) /* ty=Tensor[(10, 9, 4), uint64] */;
  %152 = reshape(%150, newshape=[10, 9, 4]) /* ty=Tensor[(10, 9, 4), uint64] */;
  %153 = cast(meta[relay.Constant][10] /* ty=Tensor[(105, 2), float32] */, dtype="float32") /* ty=Tensor[(105, 2), float32] */;
  %154 = reshape(%153, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %155 = @func_2437(%154) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(14, ?, 15), float64], Tensor[(14, 1, 15), float32]) */;
  %156 = @func_4841() /* ty=Tensor[(10, 8, 8), float64] */;
  %157 = @func_4499(%151, %152) /* ty=Tensor[(10, 9, 4), bool] */;
  %158 = %155.1;
  (%156, %157, %var_7714, %158, meta[relay.Constant][10] /* ty=Tensor[(105, 2), float32] */)
}

def @func_6898() -> (float32, Tensor[(14, 1, 15), float32]) {
  %159 = @func_3559() /* ty=(float32,) */;
  %160 = @func_2649() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %161 = %159.0;
  %162 = %160.0;
  (%161, %162)
}

def @func_7799() -> (Tensor[(8, 10, 12), float32], Tensor[(15, 8, 3), uint16], uint16, Tensor[(360), uint16]) {
  %163 = cast(meta[relay.Constant][11] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %164 = cast(meta[relay.Constant][12] /* ty=Tensor[(360), uint16] */, dtype="uint16") /* ty=Tensor[(360), uint16] */;
  %165 = reshape(%163, newshape=[]) /* ty=uint16 */;
  %166 = reshape(%164, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), uint16] */;
  %167 = @func_6445(%165, %166) /* ty=(Tensor[(15, 8, 3), uint16], Tensor[(1008), float64], Tensor[(130), int16]) */;
  %168 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  %169 = %167.0;
  (%168, %169, meta[relay.Constant][11] /* ty=uint16 */, meta[relay.Constant][12] /* ty=Tensor[(360), uint16] */)
}

def @func_2830(%var_2823: int32) -> (Tensor[(12, 3, 9), bool],) {
  %170 = cast(%var_2823, dtype="bool") /* ty=bool */;
  %171 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 3, 9), int32] */, dtype="bool") /* ty=Tensor[(12, 3, 9), bool] */;
  %172 = not_equal(%170, %171) /* ty=Tensor[(12, 3, 9), bool] */;
  (%172,)
}

def @func_7033() -> Tensor[(8, 10, 12), float32] {
  @func_3571() /* ty=Tensor[(8, 10, 12), float32] */
}

def @func_6537(%var_6534: Tensor[(1120), float32]) -> (Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint32], Tensor[(14, 5, 16), float64], Tensor[(1120), float32]) {
  %173 = @func_4384() /* ty=(Tensor[(8, 10, 12), float64], Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(10, 16, 6), float64]) */;
  %174 = @func_3990() /* ty=(Tensor[(8, 10, 12), uint32],) */;
  %175 = cast(%var_6534, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %176 = reshape(%175, newshape=[14, 5, 16]) /* ty=Tensor[(14, 5, 16), float32] */;
  %177 = %173.4;
  %178 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  %179 = %174.0;
  %180 = @func_4723(%176) /* ty=Tensor[(14, 5, 16), float64] */;
  (%177, %178, %179, %180, %var_6534)
}

def @func_7277(%var_7260: Tensor[(1, 10, 14), float64], %var_7261: Tensor[(15, 10, 14), float64]) -> (Tensor[(15, 10, 14), float64], Tensor[(14, 1, 15), float32], Tensor[(210), float32], Tensor[(14, 1, 15), float32]) {
  %181 = cast(%var_7260, dtype="float64") /* ty=Tensor[(1, 10, 14), float64] */;
  %182 = cast(%var_7261, dtype="float64") /* ty=Tensor[(15, 10, 14), float64] */;
  %183 = cast(meta[relay.Constant][14] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %184 = reshape(%183, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), float32] */;
  %185 = @func_2323(%184) /* ty=(Tensor[(14, 1, 15), float32],) */;
  %186 = @func_6898() /* ty=(float32, Tensor[(14, 1, 15), float32]) */;
  %187 = mod(%181, %182) /* ty=Tensor[(15, 10, 14), float64] */;
  %188 = %185.0;
  %189 = %186.1;
  (%187, %188, meta[relay.Constant][14] /* ty=Tensor[(210), float32] */, %189)
}

def @func_5597(%var_5576: float64, %var_5577: Tensor[(14, 6, 5), float64], %var_5583: Tensor[(960), float32]) -> (Tensor[(14, 6, 5), float64], Tensor[(8, 10, 12), float32], Tensor[(960), float32]) {
  %190 = cast(%var_5576, dtype="float64") /* ty=float64 */;
  %191 = cast(%var_5577, dtype="float64") /* ty=Tensor[(14, 6, 5), float64] */;
  %192 = cast(%var_5583, dtype="float32") /* ty=Tensor[(960), float32] */;
  %193 = reshape(%192, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), float32] */;
  %194 = @func_5172(%193) /* ty=(Tensor[(8, 10, 12), float32],) */;
  %195 = divide(%190, %191) /* ty=Tensor[(14, 6, 5), float64] */;
  %196 = %194.0;
  (%195, %196, %var_5583)
}

def @func_3220(%var_3203: Tensor[(3, 11, 1), float32]) -> (Tensor[(3, 11, 1), float32], Tensor[(16, 9, 9), bool], Tensor[(1296), float64]) {
  %197 = cast(%var_3203, dtype="float32") /* ty=Tensor[(3, 11, 1), float32] */;
  %198 = cast(meta[relay.Constant][15] /* ty=Tensor[(1296), float64] */, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %199 = reshape(%198, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), float64] */;
  %200 = @func_308(%199) /* ty=(Tensor[(16, 9, 9), bool],) */;
  %201 = exp(%197) /* ty=Tensor[(3, 11, 1), float32] */;
  %202 = %200.0;
  (%201, %202, meta[relay.Constant][15] /* ty=Tensor[(1296), float64] */)
}

def @func_8603() -> Tensor[(14, 1, 15), float64] {
  %203 = @func_5089() /* ty=Tensor[(14, 1, 15), float32] */;
  %204 = cast(%203, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
  exp(%204) /* ty=Tensor[(14, 1, 15), float64] */
}

def @func_3235() -> (float32, Tensor[(8, 10, 12), float32]) {
  %205 = @func_2617() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) */;
  %206 = %205.2;
  %207 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  (%206, %207)
}

def @func_7758() -> (float32,) {
  %208 = @func_2617() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) */;
  %209 = %208.2;
  (%209,)
}

def @func_2708(%var_2680: Tensor[(8, 10, 12), uint16], %var_2704: Tensor[(8, 10, 12), uint16]) -> (Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), bool]) {
  %210 = @func_2120() /* ty=Tensor[(8, 10, 12), uint16] */;
  %211 = cast(%var_2680, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%210, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %215 = cast(%var_2704, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %216 = shape_of(%var_2680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %217 = cast(%var_2680, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %219 = greater_equal(%213, %214) /* ty=Tensor[(8, 10, 12), bool] */;
  %220 = logical_or(%217, %218) /* ty=Tensor[(8, 10, 12), bool] */;
  (%219, %220)
}

def @func_4613() -> (Tensor[(8, 10, 12), float32],) {
  %221 = @func_3571() /* ty=Tensor[(8, 10, 12), float32] */;
  (%221,)
}

def @func_5471(%var_5449: Tensor[(14, 11, 9), int64], %var_5450: Tensor[(14, 11, 9), int64], %var_5455: Tensor[(14, 11, 9), int64]) -> (Tensor[(14, 11, 9), bool], Tensor[(14, 1, 15), float32], Tensor[(525), uint16], Tensor[(1008), float64]) {
  %222 = cast(%var_5450, dtype="int64") /* ty=Tensor[(14, 11, 9), int64] */;
  %223 = shape_of(%var_5449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(%var_5449, dtype="int64") /* ty=Tensor[(14, 11, 9), int64] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %226 = subtract(%224, %225) /* ty=Tensor[(14, 11, 9), int64] */;
  %227 = cast(%var_5455, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %228 = shape_of(%226, dtype="int32") /* ty=Tensor[(3), int32] */;
  %229 = cast(%226, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %231 = cast(meta[relay.Constant][16] /* ty=Tensor[(525), uint16] */, dtype="uint16") /* ty=Tensor[(525), uint16] */;
  %232 = cast(meta[relay.Constant][17] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %233 = reshape(%231, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), uint16] */;
  %234 = reshape(%232, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %235 = @func_4209(%233, %234) /* ty=(Tensor[(15, 7, 5), float64], Tensor[(14, 1, 15), float32], Tensor[(15, 7, 5), int16], Tensor[(14, 8, 9), float64], Tensor[(1008), float64], Tensor[(8, 10, 12), float32]) */;
  %236 = greater_equal(%229, %230) /* ty=Tensor[(14, 11, 9), bool] */;
  %237 = %235.1;
  (%236, %237, meta[relay.Constant][16] /* ty=Tensor[(525), uint16] */, meta[relay.Constant][17] /* ty=Tensor[(1008), float64] */)
}

def @func_6164() -> Tensor[(14, 1, 15), float64] {
  %238 = @func_3355() /* ty=(Tensor[(14, 1, 15), float64],) */;
  %238.0
}

def @func_5854() -> (Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32]) {
  %239 = @func_4613() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %240 = @func_4422() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(1008), float64]) */;
  %241 = %239.0;
  %242 = @func_1940() /* ty=Tensor[(8, 10, 12), uint16] */;
  %243 = %240.0;
  (%241, %242, %243)
}

def @func_6720(%var_6654: Tensor[(9, 4, 11), float64]) -> (Tensor[(9, 4, 11), float64], Tensor[(9, 4, 11), bool]) {
  %244 = cast(%var_6654, dtype="float64") /* ty=Tensor[(9, 4, 11), float64] */;
  %245 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 4, 11), float64] */, dtype="bool") /* ty=Tensor[(9, 4, 11), bool] */;
  %246 = shape_of(%var_6654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%var_6654, dtype="bool") /* ty=Tensor[(9, 4, 11), bool] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %249 = sigmoid(%244) /* ty=Tensor[(9, 4, 11), float64] */;
  %250 = logical_or(%247, %248) /* ty=Tensor[(9, 4, 11), bool] */;
  (%249, %250)
}

def @func_8275() -> (Tensor[(7, 11, 5), float32], Tensor[(8, 10, 12), float32], Tensor[(960), float32]) {
  %251 = cast(meta[relay.Constant][19] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
  %252 = reshape(%251, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), float32] */;
  %253 = @func_5172(%252) /* ty=(Tensor[(8, 10, 12), float32],) */;
  %254 = @func_8175() /* ty=Tensor[(7, 11, 5), float32] */;
  %255 = %253.0;
  (%254, %255, meta[relay.Constant][19] /* ty=Tensor[(960), float32] */)
}

def @func_1476(%var_1439: Tensor[(10, 13, 3), int32], %var_1455: Tensor[(576, 2), float32]) -> (Tensor[(10, 13, 3), bool], Tensor[(16, 8, 9), float32], Tensor[(576, 2), float32], Tensor[(16, 8, 9), float32], Tensor[(16, 9, 9), bool], Tensor[(1, 1296), float64], Tensor[(10, 13, 3), float64]) {
  %256 = cast(meta[relay.Constant][20] /* ty=Tensor[(10, 13, 3), int32] */, dtype="bool") /* ty=Tensor[(10, 13, 3), bool] */;
  %257 = shape_of(%var_1439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(%var_1439, dtype="bool") /* ty=Tensor[(10, 13, 3), bool] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %260 = cast(%var_1455, dtype="float32") /* ty=Tensor[(576, 2), float32] */;
  %261 = cast(%var_1455, dtype="float32") /* ty=Tensor[(576, 2), float32] */;
  %262 = reshape(%260, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
  %263 = reshape(%261, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
  %264 = @func_648(%262, %263) /* ty=(Tensor[(16, 8, 9), float32],) */;
  %265 = cast(%var_1455, dtype="float32") /* ty=Tensor[(576, 2), float32] */;
  %266 = %264.0;
  %267 = cast(%266, dtype="float32") /* ty=Tensor[(16, 8, 9), float32] */;
  %268 = reshape(%265, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
  %269 = reshape(%267, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
  %270 = @func_648(%268, %269) /* ty=(Tensor[(16, 8, 9), float32],) */;
  %271 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 1296), float64] */, dtype="float64") /* ty=Tensor[(1, 1296), float64] */;
  %272 = reshape(%271, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), float64] */;
  %273 = @func_308(%272) /* ty=(Tensor[(16, 9, 9), bool],) */;
  %274 = cast(%var_1439, dtype="float64") /* ty=Tensor[(10, 13, 3), float64] */;
  %275 = equal(%258, %259) /* ty=Tensor[(10, 13, 3), bool] */;
  %276 = %270.0;
  %277 = %273.0;
  %278 = erf(%274) /* ty=Tensor[(10, 13, 3), float64] */;
  (%275, %266, %var_1455, %276, %277, meta[relay.Constant][21] /* ty=Tensor[(1, 1296), float64] */, %278)
}

def @func_3473(%var_3462: Tensor[(8, 10, 12), float32]) -> (Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), bool]) {
  %279 = @func_2120() /* ty=Tensor[(8, 10, 12), uint16] */;
  %280 = cast(%279, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %281 = @func_2976() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %282 = %281.0;
  %283 = cast(%var_3462, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %284 = shape_of(%282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%282, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %287 = cos(%280) /* ty=Tensor[(8, 10, 12), float32] */;
  %288 = logical_and(%285, %286) /* ty=Tensor[(8, 10, 12), bool] */;
  (%287, %288)
}

def @func_6089() -> (Tensor[(8, 10, 12), uint16],) {
  %289 = @func_2617() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) */;
  %290 = %289.0;
  (%290,)
}

def @func_2103(%var_2021: Tensor[(390), int32], %var_2024: Tensor[(16, 9, 9), bool], %var_2059: Tensor[(130, 1), int16]) -> (Tensor[(8, 10, 12), float32], Tensor[(390), int32], Tensor[(16, 9, 9), float32], Tensor[(16, 8, 9), float32], Tensor[(10, 16, 6), float64], Tensor[(8, 10, 12), float32], Tensor[(13, 10, 4), float64], Tensor[(130, 4), int16], Tensor[(130, 9), float64], Tensor[(10, 16, 6), float64], Tensor[(16, 9, 9), bool], Tensor[(10, 16, 6), float64], Tensor[(130, 1), float32], Tensor[(1152), bool], Tensor[(8, 10, 12), uint16]) {
  %291 = cast(%var_2021, dtype="int32") /* ty=Tensor[(390), int32] */;
  %292 = cast(meta[relay.Constant][22] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %293 = reshape(%291, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), int32] */;
  %294 = reshape(%292, newshape=[576, 2]) /* ty=Tensor[(576, 2), float32] */;
  %295 = @func_1476(%293, %294) /* ty=(Tensor[(10, 13, 3), bool], Tensor[(16, 8, 9), float32], Tensor[(576, 2), float32], Tensor[(16, 8, 9), float32], Tensor[(16, 9, 9), bool], Tensor[(1, 1296), float64], Tensor[(10, 13, 3), float64]) */;
  %296 = %295.4;
  %297 = cast(%var_2024, dtype="float32") /* ty=Tensor[(16, 9, 9), float32] */;
  %298 = shape_of(%296, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(%296, dtype="float32") /* ty=Tensor[(16, 9, 9), float32] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %301 = cast(%var_2021, dtype="int32") /* ty=Tensor[(390), int32] */;
  %302 = cast(meta[relay.Constant][22] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %303 = reshape(%301, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), int32] */;
  %304 = reshape(%302, newshape=[576, 2]) /* ty=Tensor[(576, 2), float32] */;
  %305 = @func_1476(%303, %304) /* ty=(Tensor[(10, 13, 3), bool], Tensor[(16, 8, 9), float32], Tensor[(576, 2), float32], Tensor[(16, 8, 9), float32], Tensor[(16, 9, 9), bool], Tensor[(1, 1296), float64], Tensor[(10, 13, 3), float64]) */;
  %306 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  %307 = cast(%306, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %308 = reshape(%307, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float32] */;
  %309 = @func_1552(%308) /* ty=(Tensor[(10, 16, 6), float64],) */;
  %310 = cast(%var_2059, dtype="int16") /* ty=Tensor[(130, 1), int16] */;
  %311 = cast(meta[relay.Constant][23] /* ty=Tensor[(130, 4), int16] */, dtype="int16") /* ty=Tensor[(130, 4), int16] */;
  %312 = reshape(%310, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), int16] */;
  %313 = reshape(%311, newshape=[13, 10, 4]) /* ty=Tensor[(13, 10, 4), int16] */;
  %314 = @func_1931(%312, %313) /* ty=(Tensor[(13, 10, 4), int16], Tensor[(13, 10, 4), float64], Tensor[(8, 10, 12), uint16]) */;
  %315 = cast(%var_2059, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %316 = cast(meta[relay.Constant][24] /* ty=Tensor[(130, 9), int16] */, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
  %317 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  %318 = cast(%317, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %319 = reshape(%318, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float32] */;
  %320 = @func_1552(%319) /* ty=(Tensor[(10, 16, 6), float64],) */;
  %321 = cast(%var_2024, dtype="float64") /* ty=Tensor[(16, 9, 9), float64] */;
  %322 = reshape(%321, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), float64] */;
  %323 = @func_308(%322) /* ty=(Tensor[(16, 9, 9), bool],) */;
  %324 = %309.0;
  %325 = cast(%324, dtype="float32") /* ty=Tensor[(10, 16, 6), float32] */;
  %326 = reshape(%325, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float32] */;
  %327 = @func_1552(%326) /* ty=(Tensor[(10, 16, 6), float64],) */;
  %328 = cast(%var_2059, dtype="float32") /* ty=Tensor[(130, 1), float32] */;
  %329 = cast(meta[relay.Constant][22] /* ty=Tensor[(1152), float32] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %330 = atanh(%329) /* ty=Tensor[(1152), float64] */;
  %331 = cast(meta[relay.Constant][25] /* ty=Tensor[(1152), float64] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %332 = shape_of(%330, dtype="int32") /* ty=Tensor[(1), int32] */;
  %333 = cast(%330, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?), bool] */;
  %335 = cast(meta[relay.Constant][22] /* ty=Tensor[(1152), float32] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
  %336 = reshape(%335, newshape=[9, 8, 16]) /* ty=Tensor[(9, 8, 16), float64] */;
  %337 = @func_1971(%336) /* ty=(Tensor[(9, 8, 16), float64], Tensor[(8, 10, 12), uint16]) */;
  %338 = divide(%299, %300) /* ty=Tensor[(16, 9, 9), float32] */;
  %339 = %305.1;
  %340 = %314.1;
  %341 = mod(%315, %316) /* ty=Tensor[(130, 9), float64] */;
  %342 = %320.0;
  %343 = %323.0;
  %344 = %327.0;
  %345 = asin(%328) /* ty=Tensor[(130, 1), float32] */;
  %346 = logical_and(%333, %334) /* ty=Tensor[(1152), bool] */;
  %347 = %337.1;
  (%306, %var_2021, %338, %339, %324, %317, %340, meta[relay.Constant][23] /* ty=Tensor[(130, 4), int16] */, %341, %342, %343, %344, %345, %346, %347)
}

def @func_2976() -> (Tensor[(8, 10, 12), float32],) {
  %348 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  (%348,)
}

def @func_7887(%var_7844: Tensor[(130), int16]) -> (Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32]) {
  %349 = cast(%var_7844, dtype="int16") /* ty=Tensor[(130), int16] */;
  %350 = reshape(%349, newshape=[130, 1]) /* ty=Tensor[(130, 1), int16] */;
  %351 = @func_3812(%350) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(13, 10, 4), int16], Tensor[(130, 1), int16], Tensor[(520), int16], Tensor[(15, 16, 1), float32]) */;
  %352 = @func_7799() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(15, 8, 3), uint16], uint16, Tensor[(360), uint16]) */;
  %353 = @func_7835() /* ty=Tensor[(8, 10, 12), float32] */;
  %354 = %351.4;
  %355 = %352.0;
  (%353, %354, %var_7844, %355)
}

def @func_1167(%var_1150: Tensor[(14, 8, 9), float64]) -> (Tensor[(14, 8, 9), float64], Tensor[(16, 8, 9), float32], Tensor[(1152), float32]) {
  %356 = cast(%var_1150, dtype="float64") /* ty=Tensor[(14, 8, 9), float64] */;
  %357 = cast(meta[relay.Constant][26] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %358 = cast(meta[relay.Constant][26] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %359 = reshape(%357, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
  %360 = reshape(%358, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
  %361 = @func_648(%359, %360) /* ty=(Tensor[(16, 8, 9), float32],) */;
  %362 = erf(%356) /* ty=Tensor[(14, 8, 9), float64] */;
  %363 = %361.0;
  (%362, %363, meta[relay.Constant][26] /* ty=Tensor[(1152), float32] */)
}

def @func_5029(%var_5010: float64) -> (Tensor[(13, 2, 2), float64], Tensor[(16, 9, 9), bool], Tensor[(33), float32]) {
  %364 = cast(%var_5010, dtype="float64") /* ty=float64 */;
  %365 = cast(meta[relay.Constant][27] /* ty=Tensor[(13, 2, 2), float64] */, dtype="float64") /* ty=Tensor[(13, 2, 2), float64] */;
  %366 = cast(meta[relay.Constant][28] /* ty=Tensor[(33), float32] */, dtype="float32") /* ty=Tensor[(33), float32] */;
  %367 = reshape(%366, newshape=[3, 11, 1]) /* ty=Tensor[(3, 11, 1), float32] */;
  %368 = @func_3220(%367) /* ty=(Tensor[(3, 11, 1), float32], Tensor[(16, 9, 9), bool], Tensor[(1296), float64]) */;
  %369 = mod(%364, %365) /* ty=Tensor[(13, 2, 2), float64] */;
  %370 = %368.1;
  (%369, %370, meta[relay.Constant][28] /* ty=Tensor[(33), float32] */)
}

def @func_5329(%var_5205: Tensor[(1296), float64]) -> (Tensor[(8, 10, 12), uint16], float32, Tensor[(1296), float64], Tensor[(130), int16], Tensor[(13, 10), int16], Tensor[(16, 9, 9), float32], Tensor[(8, 10, 12), float32], Tensor[(520), int16], Tensor[(1008), float64], Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], Tensor[(8, 10, 12), uint16]) {
  %371 = @func_3235() /* ty=(float32, Tensor[(8, 10, 12), float32]) */;
  %372 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 10), int16] */, dtype="int16") /* ty=Tensor[(13, 10), int16] */;
  %373 = reshape(%372, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %374 = @func_2804(%373) /* ty=(Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) */;
  %375 = cast(%var_5205, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %376 = reshape(%375, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), float64] */;
  %377 = @func_308(%376) /* ty=(Tensor[(16, 9, 9), bool],) */;
  %378 = %377.0;
  %379 = cast(%378, dtype="float32") /* ty=Tensor[(16, 9, 9), float32] */;
  %380 = exp(%379) /* ty=Tensor[(16, 9, 9), float32] */;
  %381 = cast(%380, dtype="float32") /* ty=Tensor[(16, 9, 9), float32] */;
  %382 = @func_4422() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(1008), float64]) */;
  %383 = %374.2;
  %384 = cast(%383, dtype="int16") /* ty=Tensor[(130), int16] */;
  %385 = reshape(%384, newshape=[130, 1]) /* ty=Tensor[(130, 1), int16] */;
  %386 = @func_3812(%385) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(13, 10, 4), int16], Tensor[(130, 1), int16], Tensor[(520), int16], Tensor[(15, 16, 1), float32]) */;
  %387 = @func_2289() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(16, 8, 9), float32], Tensor[(1008), float64]) */;
  %388 = @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */;
  %389 = cast(%388, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %390 = reshape(%389, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), bool] */;
  %391 = @func_4556(%390) /* ty=(Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), int16]) */;
  %392 = @func_2356() /* ty=(Tensor[(8, 10, 12), uint16],) */;
  %393 = %371.0;
  %394 = cast(%393, dtype="float32") /* ty=float32 */;
  %395 = reshape(%394, newshape=[]) /* ty=float32 */;
  %396 = @func_2289() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(16, 8, 9), float32], Tensor[(1008), float64]) */;
  %397 = sin(%381) /* ty=Tensor[(16, 9, 9), float32] */;
  %398 = %382.0;
  %399 = %386.5;
  %400 = %387.2;
  %401 = %391.0;
  %402 = %392.0;
  %403 = @func_2544(%395) /* ty=Tensor[(15, 16, 1), float32] */;
  %404 = %396.0;
  (%388, %393, %var_5205, %383, meta[relay.Constant][29] /* ty=Tensor[(13, 10), int16] */, %397, %398, %399, %400, %401, %402, %403, %404)
}

def @func_5755() -> (Tensor[(8, 10, 12), float32], Tensor[(360), uint64], Tensor[(10, 9, 4), float32]) {
  %405 = cast(meta[relay.Constant][30] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %406 = cast(meta[relay.Constant][30] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %407 = reshape(%405, newshape=[10, 9, 4]) /* ty=Tensor[(10, 9, 4), uint64] */;
  %408 = reshape(%406, newshape=[10, 9, 4]) /* ty=Tensor[(10, 9, 4), uint64] */;
  %409 = @func_4499(%407, %408) /* ty=Tensor[(10, 9, 4), bool] */;
  %410 = cast(%409, dtype="float32") /* ty=Tensor[(10, 9, 4), float32] */;
  %411 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  %412 = asin(%410) /* ty=Tensor[(10, 9, 4), float32] */;
  (%411, meta[relay.Constant][30] /* ty=Tensor[(360), uint64] */, %412)
}

def @func_7921(%var_7892: Tensor[(2, 11, 2), int32], %var_7899: uint16) -> (Tensor[(2, 11, 2), int32], Tensor[(1008), float64], uint16, Tensor[(360), uint16], Tensor[(1008), float64], Tensor[(525), uint16], Tensor[(2, 11, 2), float32]) {
  %413 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 11, 2), int32] */, dtype="int32") /* ty=Tensor[(2, 11, 2), int32] */;
  %414 = shape_of(%var_7892, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(%var_7892, dtype="int32") /* ty=Tensor[(2, 11, 2), int32] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %417 = cast(%var_7899, dtype="uint16") /* ty=uint16 */;
  %418 = cast(meta[relay.Constant][32] /* ty=Tensor[(360), uint16] */, dtype="uint16") /* ty=Tensor[(360), uint16] */;
  %419 = reshape(%417, newshape=[]) /* ty=uint16 */;
  %420 = reshape(%418, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), uint16] */;
  %421 = @func_6445(%419, %420) /* ty=(Tensor[(15, 8, 3), uint16], Tensor[(1008), float64], Tensor[(130), int16]) */;
  %422 = cast(meta[relay.Constant][33] /* ty=Tensor[(525), uint16] */, dtype="uint16") /* ty=Tensor[(525), uint16] */;
  %423 = %421.1;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %425 = reshape(%422, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), uint16] */;
  %426 = reshape(%424, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %427 = @func_4209(%425, %426) /* ty=(Tensor[(15, 7, 5), float64], Tensor[(14, 1, 15), float32], Tensor[(15, 7, 5), int16], Tensor[(14, 8, 9), float64], Tensor[(1008), float64], Tensor[(8, 10, 12), float32]) */;
  %428 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 11, 2), int32] */, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
  %429 = subtract(%415, %416) /* ty=Tensor[(2, 11, 2), int32] */;
  %430 = %427.4;
  %431 = log(%428) /* ty=Tensor[(2, 11, 2), float32] */;
  (%429, %423, %var_7899, meta[relay.Constant][32] /* ty=Tensor[(360), uint16] */, %430, meta[relay.Constant][33] /* ty=Tensor[(525), uint16] */, %431)
}

def @func_5560() -> Tensor[(9, 13, 5), float32] {
  %432 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
  sqrt(%432) /* ty=Tensor[(9, 13, 5), float32] */
}

def @func_8483(%var_8473: Tensor[(11, 1, 6), float32], %var_8474: Tensor[(11, 8, 6), float32]) -> Tensor[(11, 8, 6), float32] {
  %433 = cast(%var_8473, dtype="float32") /* ty=Tensor[(11, 1, 6), float32] */;
  %434 = cast(%var_8474, dtype="float32") /* ty=Tensor[(11, 8, 6), float32] */;
  power(%433, %434) /* ty=Tensor[(11, 8, 6), float32] */
}

def @func_6552() -> Tensor[(8, 10, 12), float64] {
  %435 = @func_6089() /* ty=(Tensor[(8, 10, 12), uint16],) */;
  %436 = %435.0;
  %437 = cast(%436, dtype="float64") /* ty=Tensor[(8, 10, 12), float64] */;
  log2(%437) /* ty=Tensor[(8, 10, 12), float64] */
}

def @func_2649() -> (Tensor[(14, 1, 15), float32],) {
  %438 = @func_2469() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
  %439 = %438.1;
  (%439,)
}

def @func_4815() -> (Tensor[(10, 8, 8), float64],) {
  %440 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 8, 8), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 8), float64] */;
  %441 = cosh(%440) /* ty=Tensor[(10, 8, 8), float64] */;
  (%441,)
}

def @func_3275(%var_3266: Tensor[(9, 2, 12), float32]) -> (Tensor[(9, 2, 12), float32],) {
  %442 = cast(%var_3266, dtype="float32") /* ty=Tensor[(9, 2, 12), float32] */;
  %443 = log(%442) /* ty=Tensor[(9, 2, 12), float32] */;
  %444 = cast(%443, dtype="float32") /* ty=Tensor[(9, 2, 12), float32] */;
  %445 = atan(%444) /* ty=Tensor[(9, 2, 12), float32] */;
  (%445,)
}

def @func_2013() -> Tensor[(8, 10, 12), float32] {
  %446 = @func_1940() /* ty=Tensor[(8, 10, 12), uint16] */;
  %447 = cast(%446, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  log(%447) /* ty=Tensor[(8, 10, 12), float32] */
}

def @func_2289() -> (Tensor[(8, 10, 12), uint16], Tensor[(16, 8, 9), float32], Tensor[(1008), float64]) {
  %448 = cast(meta[relay.Constant][36] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %449 = reshape(%448, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %450 = @func_1167(%449) /* ty=(Tensor[(14, 8, 9), float64], Tensor[(16, 8, 9), float32], Tensor[(1152), float32]) */;
  %451 = @func_1940() /* ty=Tensor[(8, 10, 12), uint16] */;
  %452 = %450.1;
  (%451, %452, meta[relay.Constant][36] /* ty=Tensor[(1008), float64] */)
}

def @func_7343(%var_7313: Tensor[(525), uint16], %var_7314: Tensor[(1008), float64], %var_7317: Tensor[(390, 1), int32]) -> (Tensor[(210), float32], Tensor[(8, 10, 12), float32], Tensor[(525), uint16], Tensor[(1008), float64], Tensor[(1296), bool], Tensor[(14, 390, 15), int32]) {
  %453 = @func_5365() /* ty=(Tensor[(210), float32],) */;
  %454 = cast(%var_7313, dtype="uint16") /* ty=Tensor[(525), uint16] */;
  %455 = cast(%var_7314, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %456 = reshape(%454, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), uint16] */;
  %457 = reshape(%455, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %458 = @func_4209(%456, %457) /* ty=(Tensor[(15, 7, 5), float64], Tensor[(14, 1, 15), float32], Tensor[(15, 7, 5), int16], Tensor[(14, 8, 9), float64], Tensor[(1008), float64], Tensor[(8, 10, 12), float32]) */;
  %459 = cast(%var_7317, dtype="int32") /* ty=Tensor[(390, 1), int32] */;
  %460 = cast(meta[relay.Constant][37] /* ty=Tensor[(1296), bool] */, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %461 = reshape(%459, newshape=[390]) /* ty=Tensor[(390), int32] */;
  %462 = reshape(%460, newshape=[6, 216]) /* ty=Tensor[(6, 216), bool] */;
  %463 = @func_3946(%461, %462) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32], Tensor[(130, 1), float32], Tensor[(390), int32], Tensor[(6, 216), bool], Tensor[(130), int16], Tensor[(14, 1, 15), float32]) */;
  %464 = %463.7;
  %465 = cast(%464, dtype="int32") /* ty=Tensor[(14, 1, 15), int32] */;
  %466 = cast(%var_7317, dtype="int32") /* ty=Tensor[(390, 1), int32] */;
  %467 = %453.0;
  %468 = %458.5;
  %469 = left_shift(%465, %466) /* ty=Tensor[(14, 390, 15), int32] */;
  (%467, %468, %var_7313, %var_7314, meta[relay.Constant][37] /* ty=Tensor[(1296), bool] */, %469)
}

def @func_8523() -> (Tensor[(960), float32],) {
  %470 = @func_8275() /* ty=(Tensor[(7, 11, 5), float32], Tensor[(8, 10, 12), float32], Tensor[(960), float32]) */;
  %471 = %470.2;
  (%471,)
}

def @func_1552(%var_1525: Tensor[(10, 16, 6), float32]) -> (Tensor[(10, 16, 6), float64],) {
  %472 = cast(%var_1525, dtype="float32") /* ty=Tensor[(10, 16, 6), float32] */;
  %473 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(10, 16, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(meta[relay.Constant][38] /* ty=Tensor[(10, 16, 6), float32] */, dtype="float32") /* ty=Tensor[(10, 16, 6), float32] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %476 = divide(%474, %475) /* ty=Tensor[(10, 16, 6), float32] */;
  %477 = cast(%var_1525, dtype="float64") /* ty=Tensor[(10, 16, 6), float64] */;
  %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%476, dtype="float64") /* ty=Tensor[(10, 16, 6), float64] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %481 = mod(%479, %480) /* ty=Tensor[(10, 16, 6), float64] */;
  (%481,)
}

def @func_5771(%var_5763: Tensor[(15, 12, 5), float64]) -> (Tensor[(15, 12, 5), float64], Tensor[(130, 1), int16], Tensor[(1, 130), int16]) {
  %482 = cast(%var_5763, dtype="float64") /* ty=Tensor[(15, 12, 5), float64] */;
  %483 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 130), int16] */, dtype="int16") /* ty=Tensor[(1, 130), int16] */;
  %484 = reshape(%483, newshape=[130, 1]) /* ty=Tensor[(130, 1), int16] */;
  %485 = @func_3812(%484) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(13, 10, 4), int16], Tensor[(130, 1), int16], Tensor[(520), int16], Tensor[(15, 16, 1), float32]) */;
  %486 = atan(%482) /* ty=Tensor[(15, 12, 5), float64] */;
  %487 = %485.4;
  (%486, %487, meta[relay.Constant][39] /* ty=Tensor[(1, 130), int16] */)
}

def @func_6445(%var_6386: uint16, %var_6387: Tensor[(15, 8, 3), uint16]) -> (Tensor[(15, 8, 3), uint16], Tensor[(1008), float64], Tensor[(130), int16]) {
  %488 = cast(%var_6386, dtype="uint16") /* ty=uint16 */;
  %489 = cast(%var_6387, dtype="uint16") /* ty=Tensor[(15, 8, 3), uint16] */;
  %490 = cast(meta[relay.Constant][40] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %491 = reshape(%490, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %492 = @func_2804(%491) /* ty=(Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) */;
  %493 = logical_xor(%488, %489) /* ty=Tensor[(15, 8, 3), uint16] */;
  %494 = %492.0;
  (%493, %494, meta[relay.Constant][40] /* ty=Tensor[(130), int16] */)
}

def @func_3990() -> (Tensor[(8, 10, 12), uint32],) {
  %495 = @func_2469() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
  %496 = %495.0;
  %497 = cast(meta[relay.Constant][41] /* ty=Tensor[(8, 10, 12), float32] */, dtype="uint32") /* ty=Tensor[(8, 10, 12), uint32] */;
  %498 = shape_of(%496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %499 = cast(%496, dtype="uint32") /* ty=Tensor[(8, 10, 12), uint32] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %501 = left_shift(%499, %500) /* ty=Tensor[(8, 10, 12), uint32] */;
  (%501,)
}

def @func_7231(%var_7224: Tensor[(7, 16, 3), float64]) -> Tensor[(7, 16, 3), float64] {
  %502 = cast(%var_7224, dtype="float64") /* ty=Tensor[(7, 16, 3), float64] */;
  exp(%502) /* ty=Tensor[(7, 16, 3), float64] */
}

def @func_2617() -> (Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) {
  %503 = @func_2356() /* ty=(Tensor[(8, 10, 12), uint16],) */;
  %504 = %503.0;
  %505 = cast(meta[relay.Constant][42] /* ty=Tensor[(8, 10, 12), uint16] */, dtype="uint16") /* ty=Tensor[(8, 10, 12), uint16] */;
  %506 = shape_of(%504, dtype="int32") /* ty=Tensor[(3), int32] */;
  %507 = cast(%504, dtype="uint16") /* ty=Tensor[(8, 10, 12), uint16] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %509 = cast(-2.97963f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %510 = reshape(%509, newshape=[]) /* ty=float32 */;
  %511 = bitwise_xor(%507, %508) /* ty=Tensor[(8, 10, 12), uint16] */;
  %512 = @func_2544(%510) /* ty=Tensor[(15, 16, 1), float32] */;
  (%511, %512, -2.97963f /* ty=float32 */)
}

def @func_8216() -> Tensor[(8, 10, 12), float32] {
  %513 = @func_4930() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %513.0
}

def @func_8175() -> Tensor[(7, 11, 5), float32] {
  %514 = cast(meta[relay.Constant][43] /* ty=Tensor[(7, 11, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 11, 5), float32] */;
  acos(%514) /* ty=Tensor[(7, 11, 5), float32] */
}

def @func_7657(%var_7639: Tensor[(1, 33), float32]) -> (Tensor[(8, 10, 12), uint16], Tensor[(1, 33), float32], Tensor[(1296), float32]) {
  %515 = @func_6089() /* ty=(Tensor[(8, 10, 12), uint16],) */;
  %516 = cast(%var_7639, dtype="float32") /* ty=Tensor[(1, 33), float32] */;
  %517 = reshape(%516, newshape=[3, 11, 1]) /* ty=Tensor[(3, 11, 1), float32] */;
  %518 = @func_3220(%517) /* ty=(Tensor[(3, 11, 1), float32], Tensor[(16, 9, 9), bool], Tensor[(1296), float64]) */;
  %519 = %518.2;
  %520 = cast(%519, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %521 = log2(%520) /* ty=Tensor[(1296), float64] */;
  %522 = cast(%521, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %523 = %515.0;
  %524 = atan(%522) /* ty=Tensor[(1296), float32] */;
  (%523, %var_7639, %524)
}

def @func_4100() -> Tensor[(14, 1, 15), float32] {
  %525 = @func_2874() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %525.0
}

def @func_6798() -> Tensor[(8, 10, 12), float32] {
  @func_6001() /* ty=Tensor[(8, 10, 12), float32] */
}

def @func_1971(%var_1955: Tensor[(9, 8, 16), float64]) -> (Tensor[(9, 8, 16), float64], Tensor[(8, 10, 12), uint16]) {
  %526 = cast(%var_1955, dtype="float64") /* ty=Tensor[(9, 8, 16), float64] */;
  %527 = sinh(%526) /* ty=Tensor[(9, 8, 16), float64] */;
  %528 = @func_1940() /* ty=Tensor[(8, 10, 12), uint16] */;
  (%527, %528)
}

def @func_7172(%var_7163: float64, %var_7164: Tensor[(12, 5, 2), float64]) -> (Tensor[(12, 5, 2), bool],) {
  %529 = cast(%var_7163, dtype="bool") /* ty=bool */;
  %530 = cast(%var_7164, dtype="bool") /* ty=Tensor[(12, 5, 2), bool] */;
  %531 = greater(%529, %530) /* ty=Tensor[(12, 5, 2), bool] */;
  (%531,)
}

def @func_7993(%var_7972: Tensor[(420), uint64], %var_7982: Tensor[(130), int16]) -> (Tensor[(8, 10, 12), float32], float32, Tensor[(14, 2, 15), bool], Tensor[(420), uint64], Tensor[(8, 10, 12), float32], Tensor[(130), int16]) {
  %532 = @func_4930() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %533 = cast(%var_7972, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %534 = cast(%var_7972, dtype="uint64") /* ty=Tensor[(420), uint64] */;
  %535 = reshape(%533, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %536 = reshape(%534, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
  %537 = @func_4763(%535, %536) /* ty=(Tensor[(14, 2, 15), uint64], Tensor[(14, 2, 15), bool]) */;
  %538 = cast(%var_7982, dtype="int16") /* ty=Tensor[(130), int16] */;
  %539 = reshape(%538, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %540 = @func_2804(%539) /* ty=(Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) */;
  %541 = %532.0;
  %542 = @func_4240() /* ty=float32 */;
  %543 = %537.1;
  %544 = %540.3;
  (%541, %542, %543, %var_7972, %544, %var_7982)
}

def @func_7630() -> Tensor[(9, 13, 5), float32] {
  %545 = @func_7128() /* ty=(Tensor[(9, 13, 5), float32],) */;
  %546 = %545.0;
  %547 = cast(%546, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
  cos(%547) /* ty=Tensor[(9, 13, 5), float32] */
}

def @func_2804(%var_2754: Tensor[(130), int16]) -> (Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) {
  %548 = @func_2289() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(16, 8, 9), float32], Tensor[(1008), float64]) */;
  %549 = cast(%var_2754, dtype="int16") /* ty=Tensor[(130), int16] */;
  %550 = cast(meta[relay.Constant][44] /* ty=Tensor[(520), int16] */, dtype="int16") /* ty=Tensor[(520), int16] */;
  %551 = reshape(%549, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), int16] */;
  %552 = reshape(%550, newshape=[13, 10, 4]) /* ty=Tensor[(13, 10, 4), int16] */;
  %553 = @func_1931(%551, %552) /* ty=(Tensor[(13, 10, 4), int16], Tensor[(13, 10, 4), float64], Tensor[(8, 10, 12), uint16]) */;
  %554 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  %555 = cast(%554, dtype="uint16") /* ty=Tensor[(8, 10, 12), uint16] */;
  %556 = cast(%554, dtype="uint16") /* ty=Tensor[(8, 10, 12), uint16] */;
  %557 = reshape(%555, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), uint16] */;
  %558 = reshape(%556, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), uint16] */;
  %559 = @func_2708(%557, %558) /* ty=(Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), bool]) */;
  %560 = cast(meta[relay.Constant][44] /* ty=Tensor[(520), int16] */, dtype="float64") /* ty=Tensor[(520), float64] */;
  %561 = %548.2;
  %562 = %553.0;
  %563 = @func_2120() /* ty=Tensor[(8, 10, 12), uint16] */;
  %564 = %559.1;
  %565 = erf(%560) /* ty=Tensor[(520), float64] */;
  (%561, %562, %var_2754, %554, %563, %564, %565)
}

def @func_8457(%var_8348: Tensor[(8, 10, 12), float32]) -> (Tensor[(8, 10, 12), float64], Tensor[(7, 11, 5), float32], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32], Tensor[(7, 16, 3), float64], Tensor[(4, 84), float64], float32, Tensor[(210), float32], Tensor[(14, 1, 15), float32]) {
  %566 = @func_8156() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %567 = %566.0;
  %568 = cast(%var_8348, dtype="float64") /* ty=Tensor[(8, 10, 12), float64] */;
  %569 = shape_of(%567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %570 = cast(%567, dtype="float64") /* ty=Tensor[(8, 10, 12), float64] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %572 = cast(%var_8348, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %573 = cast(%567, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %574 = reshape(%573, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), float32] */;
  %575 = @func_6065(%574) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32]) */;
  %576 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 84), float64] */, dtype="float64") /* ty=Tensor[(4, 84), float64] */;
  %577 = reshape(%576, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), float64] */;
  %578 = @func_7758() /* ty=(float32,) */;
  %579 = @func_2649() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %580 = add(%570, %571) /* ty=Tensor[(8, 10, 12), float64] */;
  %581 = @func_8175() /* ty=Tensor[(7, 11, 5), float32] */;
  %582 = sinh(%572) /* ty=Tensor[(8, 10, 12), float32] */;
  %583 = %575.0;
  %584 = @func_6202() /* ty=Tensor[(210), float32] */;
  %585 = @func_7231(%577) /* ty=Tensor[(7, 16, 3), float64] */;
  %586 = %578.0;
  %587 = @func_6202() /* ty=Tensor[(210), float32] */;
  %588 = %579.0;
  (%580, %581, %582, %583, %584, %585, meta[relay.Constant][45] /* ty=Tensor[(4, 84), float64] */, %586, %587, %588)
}

def @func_4486() -> (Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16]) {
  %589 = @func_2976() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %590 = @func_2356() /* ty=(Tensor[(8, 10, 12), uint16],) */;
  %591 = %589.0;
  %592 = %590.0;
  (%591, %592)
}

def @main(%var_8701: Tensor[(576, 2), float32]) -> (Tensor[(8, 10, 12), uint16], Tensor[(1008), float64], Tensor[(390), int32], Tensor[(576, 2), bool], Tensor[(576, 2), float64]) {
  %593 = cast(meta[relay.Constant][47] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
  %594 = cast(meta[relay.Constant][46] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %595 = reshape(%594, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %596 = @func_1167(%595) /* ty=(Tensor[(14, 8, 9), float64], Tensor[(16, 8, 9), float32], Tensor[(1152), float32]) */;
  %597 = %596.2;
  %598 = cast(%597, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %599 = reshape(%593, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), int32] */;
  %600 = reshape(%598, newshape=[576, 2]) /* ty=Tensor[(576, 2), float32] */;
  %601 = @func_1476(%599, %600) /* ty=(Tensor[(10, 13, 3), bool], Tensor[(16, 8, 9), float32], Tensor[(576, 2), float32], Tensor[(16, 8, 9), float32], Tensor[(16, 9, 9), bool], Tensor[(1, 1296), float64], Tensor[(10, 13, 3), float64]) */;
  %602 = %601.2;
  %603 = cast(%597, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %604 = shape_of(%602, dtype="int32") /* ty=Tensor[(2), int32] */;
  %605 = cast(%602, dtype="bool") /* ty=Tensor[(576, 2), bool] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %607 = cast(%602, dtype="float32") /* ty=Tensor[(576, 2), float32] */;
  %608 = acos(%607) /* ty=Tensor[(576, 2), float32] */;
  %609 = cast(%var_8701, dtype="float64") /* ty=Tensor[(576, 2), float64] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(2), int32] */;
  %611 = cast(%608, dtype="float64") /* ty=Tensor[(576, 2), float64] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %613 = @func_1940() /* ty=Tensor[(8, 10, 12), uint16] */;
  %614 = less_equal(%605, %606) /* ty=Tensor[(576, 2), bool] */;
  %615 = maximum(%611, %612) /* ty=Tensor[(576, 2), float64] */;
  (%613, meta[relay.Constant][46] /* ty=Tensor[(1008), float64] */, meta[relay.Constant][47] /* ty=Tensor[(390), int32] */, %614, %615)
}

def @func_2544(%var_2533: float32) -> Tensor[(15, 16, 1), float32] {
  %616 = cast(%var_2533, dtype="float32") /* ty=float32 */;
  %617 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 16, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 16, 1), float32] */;
  power(%616, %617) /* ty=Tensor[(15, 16, 1), float32] */
}

def @func_3039(%var_3011: int32) -> (Tensor[(8, 10, 12), float32], Tensor[(12, 3, 9), int16], Tensor[(12, 3, 9), float32], Tensor[(12, 3, 9), bool]) {
  %618 = @func_2976() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %619 = %618.0;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %621 = cast(%var_3011, dtype="int32") /* ty=int32 */;
  %622 = reshape(%621, newshape=[]) /* ty=int32 */;
  %623 = @func_2830(%622) /* ty=(Tensor[(12, 3, 9), bool],) */;
  %624 = %623.0;
  %625 = cast(%var_3011, dtype="int16") /* ty=int16 */;
  %626 = cast(%624, dtype="int16") /* ty=Tensor[(12, 3, 9), int16] */;
  %627 = cast(%624, dtype="float32") /* ty=Tensor[(12, 3, 9), float32] */;
  %628 = cast(%var_3011, dtype="int32") /* ty=int32 */;
  %629 = reshape(%628, newshape=[]) /* ty=int32 */;
  %630 = @func_2830(%629) /* ty=(Tensor[(12, 3, 9), bool],) */;
  %631 = log10(%620) /* ty=Tensor[(8, 10, 12), float32] */;
  %632 = minimum(%625, %626) /* ty=Tensor[(12, 3, 9), int16] */;
  %633 = atan(%627) /* ty=Tensor[(12, 3, 9), float32] */;
  %634 = %630.0;
  (%631, %632, %633, %634)
}

def @func_4893() -> (Tensor[(8, 10, 12), uint16], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) {
  %635 = @func_2356() /* ty=(Tensor[(8, 10, 12), uint16],) */;
  %636 = cast(meta[relay.Constant][49] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %637 = reshape(%636, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), float32] */;
  %638 = @func_2323(%637) /* ty=(Tensor[(14, 1, 15), float32],) */;
  %639 = %635.0;
  %640 = %638.0;
  (%639, %640, meta[relay.Constant][49] /* ty=Tensor[(210), float32] */)
}

def @func_5813(%var_5808: Tensor[(15, 14, 4), float64]) -> Tensor[(15, 14, 4), float64] {
  %641 = cast(%var_5808, dtype="float64") /* ty=Tensor[(15, 14, 4), float64] */;
  log2(%641) /* ty=Tensor[(15, 14, 4), float64] */
}

def @func_308(%var_252: Tensor[(16, 9, 9), float64]) -> (Tensor[(16, 9, 9), bool],) {
  %642 = cast(%var_252, dtype="float64") /* ty=Tensor[(16, 9, 9), float64] */;
  %643 = atanh(%642) /* ty=Tensor[(16, 9, 9), float64] */;
  %644 = cast(%643, dtype="bool") /* ty=Tensor[(16, 9, 9), bool] */;
  %645 = shape_of(%var_252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(%var_252, dtype="bool") /* ty=Tensor[(16, 9, 9), bool] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %648 = less(%646, %647) /* ty=Tensor[(16, 9, 9), bool] */;
  %649 = cast(%648, dtype="bool") /* ty=Tensor[(16, 9, 9), bool] */;
  %650 = shape_of(%643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%643, dtype="bool") /* ty=Tensor[(16, 9, 9), bool] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %653 = less_equal(%651, %652) /* ty=Tensor[(16, 9, 9), bool] */;
  (%653,)
}

def @func_3355() -> (Tensor[(14, 1, 15), float64],) {
  %654 = @func_2649() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %655 = %654.0;
  %656 = cast(%655, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
  %657 = sinh(%656) /* ty=Tensor[(14, 1, 15), float64] */;
  (%657,)
}

def @func_6370() -> (Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %658 = @func_4384() /* ty=(Tensor[(8, 10, 12), float64], Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(10, 16, 6), float64]) */;
  %659 = @func_4893() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
  %660 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  %661 = %658.1;
  %662 = %659.1;
  (%660, %661, %662)
}

def @func_7557(%var_7543: Tensor[(14, 5, 15), float32]) -> (Tensor[(14, 5, 15), int32], Tensor[(8, 10, 12), uint16]) {
  %663 = @func_5089() /* ty=Tensor[(14, 1, 15), float32] */;
  %664 = cast(%663, dtype="int32") /* ty=Tensor[(14, 1, 15), int32] */;
  %665 = cast(%var_7543, dtype="int32") /* ty=Tensor[(14, 5, 15), int32] */;
  %666 = @func_2289() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(16, 8, 9), float32], Tensor[(1008), float64]) */;
  %667 = bitwise_xor(%664, %665) /* ty=Tensor[(14, 5, 15), int32] */;
  %668 = %666.0;
  (%667, %668)
}

def @func_4841() -> Tensor[(10, 8, 8), float64] {
  %669 = @func_4815() /* ty=(Tensor[(10, 8, 8), float64],) */;
  %669.0
}

def @func_2208(%var_2161: Tensor[(1, 13, 7), int64], %var_2179: Tensor[(520), int16]) -> (Tensor[(13, 13, 7), bool], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(520), int16], Tensor[(8, 10, 12), uint16], Tensor[(576, 2), float32], Tensor[(390), int32], Tensor[(1152), float32]) {
  %670 = cast(%var_2161, dtype="bool") /* ty=Tensor[(1, 13, 7), bool] */;
  %671 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 13, 7), int64] */, dtype="bool") /* ty=Tensor[(13, 13, 7), bool] */;
  %672 = cast(meta[relay.Constant][51] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %673 = cast(%var_2179, dtype="int16") /* ty=Tensor[(520), int16] */;
  %674 = reshape(%672, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), int16] */;
  %675 = reshape(%673, newshape=[13, 10, 4]) /* ty=Tensor[(13, 10, 4), int16] */;
  %676 = @func_1931(%674, %675) /* ty=(Tensor[(13, 10, 4), int16], Tensor[(13, 10, 4), float64], Tensor[(8, 10, 12), uint16]) */;
  %677 = cast(meta[relay.Constant][52] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
  %678 = cast(meta[relay.Constant][53] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %679 = reshape(%677, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), int32] */;
  %680 = reshape(%678, newshape=[576, 2]) /* ty=Tensor[(576, 2), float32] */;
  %681 = @func_1476(%679, %680) /* ty=(Tensor[(10, 13, 3), bool], Tensor[(16, 8, 9), float32], Tensor[(576, 2), float32], Tensor[(16, 8, 9), float32], Tensor[(16, 9, 9), bool], Tensor[(1, 1296), float64], Tensor[(10, 13, 3), float64]) */;
  %682 = less(%670, %671) /* ty=Tensor[(13, 13, 7), bool] */;
  %683 = %676.0;
  %684 = @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */;
  %685 = %681.2;
  (%682, %683, meta[relay.Constant][51] /* ty=Tensor[(130), int16] */, %var_2179, %684, %685, meta[relay.Constant][52] /* ty=Tensor[(390), int32] */, meta[relay.Constant][53] /* ty=Tensor[(1152), float32] */)
}

def @func_4499(%var_4492: Tensor[(10, 9, 4), uint64], %var_4493: Tensor[(10, 9, 4), uint64]) -> Tensor[(10, 9, 4), bool] {
  %686 = cast(%var_4493, dtype="bool") /* ty=Tensor[(10, 9, 4), bool] */;
  %687 = shape_of(%var_4492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(%var_4492, dtype="bool") /* ty=Tensor[(10, 9, 4), bool] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%688, %689) /* ty=Tensor[(10, 9, 4), bool] */
}

def @func_648(%var_634: Tensor[(16, 8, 9), float32], %var_635: Tensor[(16, 8, 9), float32]) -> (Tensor[(16, 8, 9), float32],) {
  %690 = cast(%var_635, dtype="float32") /* ty=Tensor[(16, 8, 9), float32] */;
  %691 = shape_of(%var_634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%var_634, dtype="float32") /* ty=Tensor[(16, 8, 9), float32] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %694 = floor_divide(%692, %693) /* ty=Tensor[(16, 8, 9), float32] */;
  (%694,)
}

def @func_4209(%var_4136: Tensor[(15, 7, 5), uint16], %var_4192: Tensor[(1008), float64]) -> (Tensor[(15, 7, 5), float64], Tensor[(14, 1, 15), float32], Tensor[(15, 7, 5), int16], Tensor[(14, 8, 9), float64], Tensor[(1008), float64], Tensor[(8, 10, 12), float32]) {
  %695 = cast(meta[relay.Constant][54] /* ty=Tensor[(15, 7, 5), uint16] */, dtype="float64") /* ty=Tensor[(15, 7, 5), float64] */;
  %696 = cast(%var_4136, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
  %697 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(15, 7, 5), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(meta[relay.Constant][54] /* ty=Tensor[(15, 7, 5), uint16] */, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %700 = greater_equal(%698, %699) /* ty=Tensor[(15, 7, 5), bool] */;
  %701 = cast(%var_4136, dtype="int16") /* ty=Tensor[(15, 7, 5), int16] */;
  %702 = shape_of(%700, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(%700, dtype="int16") /* ty=Tensor[(15, 7, 5), int16] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %705 = cast(%var_4192, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %706 = reshape(%705, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %707 = @func_1167(%706) /* ty=(Tensor[(14, 8, 9), float64], Tensor[(16, 8, 9), float32], Tensor[(1152), float32]) */;
  %708 = log(%695) /* ty=Tensor[(15, 7, 5), float64] */;
  %709 = @func_4100() /* ty=Tensor[(14, 1, 15), float32] */;
  %710 = bitwise_or(%703, %704) /* ty=Tensor[(15, 7, 5), int16] */;
  %711 = %707.0;
  %712 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  (%708, %709, %710, %711, %var_4192, %712)
}

def @func_4930() -> (Tensor[(8, 10, 12), float32],) {
  %713 = @func_4613() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %714 = %713.0;
  (%714,)
}

def @func_6344(%var_6295: Tensor[(210), float32]) -> (Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(210), float32], Tensor[(130), int16], Tensor[(8, 10, 12), uint16], Tensor[(14, 5, 16), float64], Tensor[(1120), float32], Tensor[(8, 10, 12), float32], Tensor[(12, 3, 9), bool], int32) {
  %715 = @func_5078() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %716 = cast(%var_6295, dtype="float32") /* ty=Tensor[(210), float32] */;
  %717 = reshape(%716, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %718 = @func_2437(%717) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(14, ?, 15), float64], Tensor[(14, 1, 15), float32]) */;
  %719 = @func_4693() /* ty=(Tensor[(1008), float64], Tensor[(520), float64], Tensor[(130), int16], Tensor[(14, 1, 15), float32]) */;
  %720 = cast(meta[relay.Constant][55] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %721 = reshape(%720, newshape=[14, 5, 16]) /* ty=Tensor[(14, 5, 16), float32] */;
  %722 = %715.0;
  %723 = cast(%722, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %724 = reshape(%723, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), float32] */;
  %725 = @func_5172(%724) /* ty=(Tensor[(8, 10, 12), float32],) */;
  %726 = cast(-3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %727 = reshape(%726, newshape=[]) /* ty=int32 */;
  %728 = @func_2830(%727) /* ty=(Tensor[(12, 3, 9), bool],) */;
  %729 = %718.0;
  %730 = %719.2;
  %731 = @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */;
  %732 = @func_4723(%721) /* ty=Tensor[(14, 5, 16), float64] */;
  %733 = %725.0;
  %734 = %728.0;
  (%722, %729, %var_6295, %730, %731, %732, meta[relay.Constant][55] /* ty=Tensor[(1120), float32] */, %733, %734, -3 /* ty=int32 */)
}

def @func_4422() -> (Tensor[(8, 10, 12), float32], Tensor[(1008), float64]) {
  %735 = @func_2617() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) */;
  %736 = %735.0;
  %737 = cast(%736, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %738 = @func_2289() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(16, 8, 9), float32], Tensor[(1008), float64]) */;
  %739 = acos(%737) /* ty=Tensor[(8, 10, 12), float32] */;
  %740 = %738.2;
  (%739, %740)
}

def @func_7611() -> float32 {
  @func_4240() /* ty=float32 */
}

def @func_6497() -> float32 {
  @func_4240() /* ty=float32 */
}

def @func_3571() -> Tensor[(8, 10, 12), float32] {
  %741 = @func_3235() /* ty=(float32, Tensor[(8, 10, 12), float32]) */;
  %741.1
}

def @func_1883() -> Tensor[(8, 10, 12), uint16] {
  %742 = cast(meta[relay.Constant][56] /* ty=Tensor[(8, 1, 12), uint16] */, dtype="uint16") /* ty=Tensor[(8, 1, 12), uint16] */;
  %743 = cast(meta[relay.Constant][57] /* ty=Tensor[(8, 10, 12), uint16] */, dtype="uint16") /* ty=Tensor[(8, 10, 12), uint16] */;
  subtract(%742, %743) /* ty=Tensor[(8, 10, 12), uint16] */
}

def @func_7703(%var_7698: int32) -> (Tensor[(8, 10, 12), float32], Tensor[(12, 3, 9), bool], int32) {
  %744 = cast(%var_7698, dtype="int32") /* ty=int32 */;
  %745 = reshape(%744, newshape=[]) /* ty=int32 */;
  %746 = @func_2830(%745) /* ty=(Tensor[(12, 3, 9), bool],) */;
  %747 = @func_7033() /* ty=Tensor[(8, 10, 12), float32] */;
  %748 = %746.0;
  (%747, %748, %var_7698)
}

def @func_5365() -> (Tensor[(210), float32],) {
  %749 = @func_3677() /* ty=Tensor[(210), float32] */;
  (%749,)
}

def @func_7835() -> Tensor[(8, 10, 12), float32] {
  %750 = @func_2976() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %750.0
}

def @func_3946(%var_3936: Tensor[(390), int32], %var_3937: Tensor[(6, 216), bool]) -> (Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32], Tensor[(130, 1), float32], Tensor[(390), int32], Tensor[(6, 216), bool], Tensor[(130), int16], Tensor[(14, 1, 15), float32]) {
  %751 = @func_2976() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %752 = cast(meta[relay.Constant][58] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %753 = reshape(%752, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), float32] */;
  %754 = @func_2323(%753) /* ty=(Tensor[(14, 1, 15), float32],) */;
  %755 = cast(%var_3936, dtype="int32") /* ty=Tensor[(390), int32] */;
  %756 = cast(%var_3937, dtype="bool") /* ty=Tensor[(6, 216), bool] */;
  %757 = cast(meta[relay.Constant][59] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %758 = reshape(%755, newshape=[390]) /* ty=Tensor[(390), int32] */;
  %759 = reshape(%756, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), bool] */;
  %760 = reshape(%757, newshape=[130, 1]) /* ty=Tensor[(130, 1), int16] */;
  %761 = @func_2103(%758, %759, %760) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(390), int32], Tensor[(16, 9, 9), float32], Tensor[(16, 8, 9), float32], Tensor[(10, 16, 6), float64], Tensor[(8, 10, 12), float32], Tensor[(13, 10, 4), float64], Tensor[(130, 4), int16], Tensor[(130, 9), float64], Tensor[(10, 16, 6), float64], Tensor[(16, 9, 9), bool], Tensor[(10, 16, 6), float64], Tensor[(130, 1), float32], Tensor[(1152), bool], Tensor[(8, 10, 12), uint16]) */;
  %762 = @func_2469() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
  %763 = %751.0;
  %764 = %754.0;
  %765 = %761.12;
  %766 = %762.1;
  (%763, %764, meta[relay.Constant][58] /* ty=Tensor[(210), float32] */, %765, %var_3936, %var_3937, meta[relay.Constant][59] /* ty=Tensor[(130), int16] */, %766)
}

def @func_1940() -> Tensor[(8, 10, 12), uint16] {
  @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */
}

def @func_4763(%var_4746: Tensor[(14, 2, 15), uint64], %var_4747: Tensor[(14, 2, 15), uint64]) -> (Tensor[(14, 2, 15), uint64], Tensor[(14, 2, 15), bool]) {
  %767 = cast(%var_4747, dtype="uint64") /* ty=Tensor[(14, 2, 15), uint64] */;
  %768 = shape_of(%var_4746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%var_4746, dtype="uint64") /* ty=Tensor[(14, 2, 15), uint64] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %771 = cast(%var_4746, dtype="bool") /* ty=Tensor[(14, 2, 15), bool] */;
  %772 = shape_of(%var_4747, dtype="int32") /* ty=Tensor[(3), int32] */;
  %773 = cast(%var_4747, dtype="bool") /* ty=Tensor[(14, 2, 15), bool] */;
  %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %775 = bitwise_and(%769, %770) /* ty=Tensor[(14, 2, 15), uint64] */;
  %776 = not_equal(%773, %774) /* ty=Tensor[(14, 2, 15), bool] */;
  (%775, %776)
}

def @func_7436(%var_7410: Tensor[(11, 12, 3), uint32], %var_7411: Tensor[(11, 12, 3), uint32]) -> (Tensor[(11, 12, 3), uint32], Tensor[(360), uint64], float32) {
  %777 = cast(%var_7411, dtype="uint32") /* ty=Tensor[(11, 12, 3), uint32] */;
  %778 = shape_of(%var_7410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%var_7410, dtype="uint32") /* ty=Tensor[(11, 12, 3), uint32] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %781 = @func_5755() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(360), uint64], Tensor[(10, 9, 4), float32]) */;
  %782 = multiply(%779, %780) /* ty=Tensor[(11, 12, 3), uint32] */;
  %783 = %781.1;
  %784 = @func_6497() /* ty=float32 */;
  (%782, %783, %784)
}

def @func_7685() -> (Tensor[(5, 14, 5), float32],) {
  %785 = cast(meta[relay.Constant][60] /* ty=Tensor[(5, 14, 5), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 5), float64] */;
  %786 = exp(%785) /* ty=Tensor[(5, 14, 5), float64] */;
  %787 = cast(%786, dtype="float32") /* ty=Tensor[(5, 14, 5), float32] */;
  %788 = atanh(%787) /* ty=Tensor[(5, 14, 5), float32] */;
  (%788,)
}

def @func_3559() -> (float32,) {
  %789 = @func_2617() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) */;
  %790 = %789.2;
  (%790,)
}

def @func_6652() -> (Tensor[(210), float32],) {
  %791 = @func_3677() /* ty=Tensor[(210), float32] */;
  (%791,)
}

def @func_6065(%var_6048: Tensor[(8, 10, 12), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32]) {
  %792 = @func_2874() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %793 = @func_5078() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %794 = %793.0;
  %795 = cast(%var_6048, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %796 = shape_of(%794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(%794, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %799 = %792.0;
  %800 = power(%797, %798) /* ty=Tensor[(8, 10, 12), float32] */;
  (%799, %800)
}

def @func_5089() -> Tensor[(14, 1, 15), float32] {
  @func_4100() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_7092() -> (Tensor[(8, 10, 12), float32], float32, Tensor[(8, 10, 12), float32]) {
  %801 = @func_4930() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %802 = @func_4930() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %803 = %801.0;
  %804 = @func_4240() /* ty=float32 */;
  %805 = %802.0;
  (%803, %804, %805)
}

def @func_5678() -> float32 {
  %806 = @func_3235() /* ty=(float32, Tensor[(8, 10, 12), float32]) */;
  %806.0
}

def @func_7380(%var_7352: Tensor[(13, 11, 14), float64]) -> (Tensor[(13, 11, 14), float64],) {
  %807 = cast(%var_7352, dtype="float64") /* ty=Tensor[(13, 11, 14), float64] */;
  %808 = tan(%807) /* ty=Tensor[(13, 11, 14), float64] */;
  (%808,)
}

def @func_3428() -> (Tensor[(130), int16], Tensor[(14, 130, 15), uint64], Tensor[(14, 1, 15), float32]) {
  %809 = cast(meta[relay.Constant][61] /* ty=Tensor[(130, 1), int16] */, dtype="int16") /* ty=Tensor[(130, 1), int16] */;
  %810 = reshape(%809, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %811 = @func_2804(%810) /* ty=(Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) */;
  %812 = @func_2874() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %813 = %812.0;
  %814 = cast(%813, dtype="uint64") /* ty=Tensor[(14, 1, 15), uint64] */;
  %815 = cast(meta[relay.Constant][61] /* ty=Tensor[(130, 1), int16] */, dtype="uint64") /* ty=Tensor[(130, 1), uint64] */;
  %816 = cast(%813, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %817 = %811.2;
  %818 = bitwise_or(%814, %815) /* ty=Tensor[(14, 130, 15), uint64] */;
  %819 = acosh(%816) /* ty=Tensor[(14, 1, 15), float32] */;
  (%817, %818, %819)
}

def @func_6934() -> (Tensor[(14, 1, 15), float32], float32) {
  %820 = @func_6898() /* ty=(float32, Tensor[(14, 1, 15), float32]) */;
  %821 = %820.1;
  %822 = @func_5678() /* ty=float32 */;
  (%821, %822)
}

def @func_7128() -> (Tensor[(9, 13, 5), float32],) {
  %823 = @func_5560() /* ty=Tensor[(9, 13, 5), float32] */;
  (%823,)
}

def @func_6788() -> (Tensor[(210), float32], Tensor[(9, 4, 11), float64], Tensor[(396), float64]) {
  %824 = @func_2469() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
  %825 = cast(meta[relay.Constant][62] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %826 = reshape(%825, newshape=[9, 4, 11]) /* ty=Tensor[(9, 4, 11), float64] */;
  %827 = @func_6720(%826) /* ty=(Tensor[(9, 4, 11), float64], Tensor[(9, 4, 11), bool]) */;
  %828 = %824.2;
  %829 = %827.0;
  (%828, %829, meta[relay.Constant][62] /* ty=Tensor[(396), float64] */)
}

def @func_3661() -> (Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), bool]) {
  %830 = @func_2874() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %831 = @func_3571() /* ty=Tensor[(8, 10, 12), float32] */;
  %832 = cast(meta[relay.Constant][63] /* ty=Tensor[(8, 10, 12), float32] */, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %833 = shape_of(%831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %834 = cast(%831, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %835 = dyn.reshape(%832, %833, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %836 = %830.0;
  %837 = less(%834, %835) /* ty=Tensor[(8, 10, 12), bool] */;
  (%836, %837)
}

def @func_5172(%var_5150: Tensor[(8, 10, 12), float32]) -> (Tensor[(8, 10, 12), float32],) {
  %838 = @func_2976() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %839 = %838.0;
  %840 = cast(%var_5150, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %841 = shape_of(%839, dtype="int32") /* ty=Tensor[(3), int32] */;
  %842 = cast(%839, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %844 = floor_divide(%842, %843) /* ty=Tensor[(8, 10, 12), float32] */;
  (%844,)
}

def @func_5078() -> (Tensor[(8, 10, 12), float32],) {
  %845 = @func_4930() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %846 = %845.0;
  (%846,)
}

def @func_2874() -> (Tensor[(14, 1, 15), float32],) {
  %847 = @func_2649() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %848 = %847.0;
  (%848,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4695() -> (Tensor[(1008), float64], Tensor[(520), float64], Tensor[(130), int16], Tensor[(14, 1, 15), float32]) {
  @func_4693() /* ty=(Tensor[(1008), float64], Tensor[(520), float64], Tensor[(130), int16], Tensor[(14, 1, 15), float32]) */
}

def @func_2015() -> Tensor[(8, 10, 12), float32] {
  @func_2013() /* ty=Tensor[(8, 10, 12), float32] */
}

def @func_3814(%var_3813: Tensor[(130, 1), int16]) -> (Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(13, 10, 4), int16], Tensor[(130, 1), int16], Tensor[(520), int16], Tensor[(15, 16, 1), float32]) {
  %16 = fn (%var_3760: Tensor[(130, 1), int16]) -> (Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(13, 10, 4), int16], Tensor[(130, 1), int16], Tensor[(520), int16], Tensor[(15, 16, 1), float32]) {
    %0 = @func_2356() /* ty=(Tensor[(8, 10, 12), uint16],) */;
    %1 = @func_3333() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(130), int16]) */;
    %2 = %1.0;
    %3 = cast(%2, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
    %4 = @func_2649() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %5 = cast(%var_3760, dtype="int16") /* ty=Tensor[(130, 1), int16] */;
    %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(520), int16] */, dtype="int16") /* ty=Tensor[(520), int16] */;
    %7 = reshape(%5, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), int16] */;
    %8 = reshape(%6, newshape=[13, 10, 4]) /* ty=Tensor[(13, 10, 4), int16] */;
    %9 = @func_1931(%7, %8) /* ty=(Tensor[(13, 10, 4), int16], Tensor[(13, 10, 4), float64], Tensor[(8, 10, 12), uint16]) */;
    %10 = @func_2617() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) */;
    %11 = %0.0;
    %12 = erf(%3) /* ty=Tensor[(8, 10, 12), float32] */;
    %13 = %4.0;
    %14 = %9.0;
    %15 = %10.1;
    (%11, %12, %13, %14, %var_3760, meta[relay.Constant][0] /* ty=Tensor[(520), int16] */, %15)
  };
  %16(%var_3813) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(13, 10, 4), int16], Tensor[(130, 1), int16], Tensor[(520), int16], Tensor[(15, 16, 1), float32]) */
}

def @func_3677() -> Tensor[(210), float32] {
  %17 = @func_2469() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
  %17.2
}

def @func_7996(%var_7994: Tensor[(420), uint64], %var_7995: Tensor[(130), int16]) -> (Tensor[(8, 10, 12), float32], float32, Tensor[(14, 2, 15), bool], Tensor[(420), uint64], Tensor[(8, 10, 12), float32], Tensor[(130), int16]) {
  %31 = fn (%var_7972: Tensor[(420), uint64], %var_7982: Tensor[(130), int16]) -> (Tensor[(8, 10, 12), float32], float32, Tensor[(14, 2, 15), bool], Tensor[(420), uint64], Tensor[(8, 10, 12), float32], Tensor[(130), int16]) {
    %18 = @func_4930() /* ty=(Tensor[(8, 10, 12), float32],) */;
    %19 = cast(%var_7972, dtype="uint64") /* ty=Tensor[(420), uint64] */;
    %20 = cast(%var_7972, dtype="uint64") /* ty=Tensor[(420), uint64] */;
    %21 = reshape(%19, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
    %22 = reshape(%20, newshape=[14, 2, 15]) /* ty=Tensor[(14, 2, 15), uint64] */;
    %23 = @func_4763(%21, %22) /* ty=(Tensor[(14, 2, 15), uint64], Tensor[(14, 2, 15), bool]) */;
    %24 = cast(%var_7982, dtype="int16") /* ty=Tensor[(130), int16] */;
    %25 = reshape(%24, newshape=[130]) /* ty=Tensor[(130), int16] */;
    %26 = @func_2804(%25) /* ty=(Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) */;
    %27 = %18.0;
    %28 = @func_4240() /* ty=float32 */;
    %29 = %23.1;
    %30 = %26.3;
    (%27, %28, %29, %var_7972, %30, %var_7982)
  };
  %31(%var_7994, %var_7995) /* ty=(Tensor[(8, 10, 12), float32], float32, Tensor[(14, 2, 15), bool], Tensor[(420), uint64], Tensor[(8, 10, 12), float32], Tensor[(130), int16]) */
}

def @func_8459(%var_8458: Tensor[(8, 10, 12), float32]) -> (Tensor[(8, 10, 12), float64], Tensor[(7, 11, 5), float32], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32], Tensor[(7, 16, 3), float64], Tensor[(4, 84), float64], float32, Tensor[(210), float32], Tensor[(14, 1, 15), float32]) {
  %55 = fn (%var_8348: Tensor[(8, 10, 12), float32]) -> (Tensor[(8, 10, 12), float64], Tensor[(7, 11, 5), float32], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32], Tensor[(7, 16, 3), float64], Tensor[(4, 84), float64], float32, Tensor[(210), float32], Tensor[(14, 1, 15), float32]) {
    %32 = @func_8156() /* ty=(Tensor[(8, 10, 12), float32],) */;
    %33 = %32.0;
    %34 = cast(%var_8348, dtype="float64") /* ty=Tensor[(8, 10, 12), float64] */;
    %35 = shape_of(%33, dtype="int32") /* ty=Tensor[(3), int32] */;
    %36 = cast(%33, dtype="float64") /* ty=Tensor[(8, 10, 12), float64] */;
    %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %38 = cast(%var_8348, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
    %39 = cast(%33, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
    %40 = reshape(%39, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), float32] */;
    %41 = @func_6065(%40) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32]) */;
    %42 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 84), float64] */, dtype="float64") /* ty=Tensor[(4, 84), float64] */;
    %43 = reshape(%42, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), float64] */;
    %44 = @func_7758() /* ty=(float32,) */;
    %45 = @func_2649() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %46 = add(%36, %37) /* ty=Tensor[(8, 10, 12), float64] */;
    %47 = @func_8175() /* ty=Tensor[(7, 11, 5), float32] */;
    %48 = sinh(%38) /* ty=Tensor[(8, 10, 12), float32] */;
    %49 = %41.0;
    %50 = @func_6202() /* ty=Tensor[(210), float32] */;
    %51 = @func_7231(%43) /* ty=Tensor[(7, 16, 3), float64] */;
    %52 = %44.0;
    %53 = @func_6202() /* ty=Tensor[(210), float32] */;
    %54 = %45.0;
    (%46, %47, %48, %49, %50, %51, meta[relay.Constant][1] /* ty=Tensor[(4, 84), float64] */, %52, %53, %54)
  };
  %55(%var_8458) /* ty=(Tensor[(8, 10, 12), float64], Tensor[(7, 11, 5), float32], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32], Tensor[(7, 16, 3), float64], Tensor[(4, 84), float64], float32, Tensor[(210), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_2976() -> (Tensor[(8, 10, 12), float32],) {
  %56 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  (%56,)
}

def @func_8483(%var_8473: Tensor[(11, 1, 6), float32], %var_8474: Tensor[(11, 8, 6), float32]) -> Tensor[(11, 8, 6), float32] {
  %57 = cast(%var_8473, dtype="float32") /* ty=Tensor[(11, 1, 6), float32] */;
  %58 = cast(%var_8474, dtype="float32") /* ty=Tensor[(11, 8, 6), float32] */;
  power(%57, %58) /* ty=Tensor[(11, 8, 6), float32] */
}

def @func_5855() -> (Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32]) {
  %64 = fn () -> (Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32]) {
    %59 = @func_4613() /* ty=(Tensor[(8, 10, 12), float32],) */;
    %60 = @func_4422() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(1008), float64]) */;
    %61 = %59.0;
    %62 = @func_1940() /* ty=Tensor[(8, 10, 12), uint16] */;
    %63 = %60.0;
    (%61, %62, %63)
  };
  %64() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32]) */
}

def @func_6868() -> (Tensor[(8, 10, 12), float32],) {
  %67 = fn () -> (Tensor[(8, 10, 12), float32],) {
    %65 = @func_5078() /* ty=(Tensor[(8, 10, 12), float32],) */;
    %66 = %65.0;
    (%66,)
  };
  %67() /* ty=(Tensor[(8, 10, 12), float32],) */
}

def @func_7348(%var_7345: Tensor[(525), uint16], %var_7346: Tensor[(1008), float64], %var_7347: Tensor[(390, 1), int32]) -> (Tensor[(210), float32], Tensor[(8, 10, 12), float32], Tensor[(525), uint16], Tensor[(1008), float64], Tensor[(1296), bool], Tensor[(14, 390, 15), int32]) {
  @func_7343(%var_7345, %var_7346, %var_7347) /* ty=(Tensor[(210), float32], Tensor[(8, 10, 12), float32], Tensor[(525), uint16], Tensor[(1008), float64], Tensor[(1296), bool], Tensor[(14, 390, 15), int32]) */
}

def @func_5815(%var_5814: Tensor[(15, 14, 4), float64]) -> Tensor[(15, 14, 4), float64] {
  %69 = fn (%var_5808: Tensor[(15, 14, 4), float64]) -> Tensor[(15, 14, 4), float64] {
    %68 = cast(%var_5808, dtype="float64") /* ty=Tensor[(15, 14, 4), float64] */;
    log2(%68) /* ty=Tensor[(15, 14, 4), float64] */
  };
  %69(%var_5814) /* ty=Tensor[(15, 14, 4), float64] */
}

def @func_6346(%var_6345: Tensor[(210), float32]) -> (Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(210), float32], Tensor[(130), int16], Tensor[(8, 10, 12), uint16], Tensor[(14, 5, 16), float64], Tensor[(1120), float32], Tensor[(8, 10, 12), float32], Tensor[(12, 3, 9), bool], int32) {
  %90 = fn (%var_6295: Tensor[(210), float32]) -> (Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(210), float32], Tensor[(130), int16], Tensor[(8, 10, 12), uint16], Tensor[(14, 5, 16), float64], Tensor[(1120), float32], Tensor[(8, 10, 12), float32], Tensor[(12, 3, 9), bool], int32) {
    %70 = @func_5078() /* ty=(Tensor[(8, 10, 12), float32],) */;
    %71 = cast(%var_6295, dtype="float32") /* ty=Tensor[(210), float32] */;
    %72 = reshape(%71, newshape=[210]) /* ty=Tensor[(210), float32] */;
    %73 = @func_2437(%72) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(14, ?, 15), float64], Tensor[(14, 1, 15), float32]) */;
    %74 = @func_4693() /* ty=(Tensor[(1008), float64], Tensor[(520), float64], Tensor[(130), int16], Tensor[(14, 1, 15), float32]) */;
    %75 = cast(meta[relay.Constant][2] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %76 = reshape(%75, newshape=[14, 5, 16]) /* ty=Tensor[(14, 5, 16), float32] */;
    %77 = %70.0;
    %78 = cast(%77, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
    %79 = reshape(%78, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), float32] */;
    %80 = @func_5172(%79) /* ty=(Tensor[(8, 10, 12), float32],) */;
    %81 = cast(-3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %82 = reshape(%81, newshape=[]) /* ty=int32 */;
    %83 = @func_2830(%82) /* ty=(Tensor[(12, 3, 9), bool],) */;
    %84 = %73.0;
    %85 = %74.2;
    %86 = @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */;
    %87 = @func_4723(%76) /* ty=Tensor[(14, 5, 16), float64] */;
    %88 = %80.0;
    %89 = %83.0;
    (%77, %84, %var_6295, %85, %86, %87, meta[relay.Constant][2] /* ty=Tensor[(1120), float32] */, %88, %89, -3 /* ty=int32 */)
  };
  %90(%var_6345) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(210), float32], Tensor[(130), int16], Tensor[(8, 10, 12), uint16], Tensor[(14, 5, 16), float64], Tensor[(1120), float32], Tensor[(8, 10, 12), float32], Tensor[(12, 3, 9), bool], int32) */
}

def @func_6553() -> Tensor[(8, 10, 12), float64] {
  %94 = fn () -> Tensor[(8, 10, 12), float64] {
    %91 = @func_6089() /* ty=(Tensor[(8, 10, 12), uint16],) */;
    %92 = %91.0;
    %93 = cast(%92, dtype="float64") /* ty=Tensor[(8, 10, 12), float64] */;
    log2(%93) /* ty=Tensor[(8, 10, 12), float64] */
  };
  %94() /* ty=Tensor[(8, 10, 12), float64] */
}

def @func_4767(%var_4765: Tensor[(14, 2, 15), uint64], %var_4766: Tensor[(14, 2, 15), uint64]) -> (Tensor[(14, 2, 15), uint64], Tensor[(14, 2, 15), bool]) {
  @func_4763(%var_4765, %var_4766) /* ty=(Tensor[(14, 2, 15), uint64], Tensor[(14, 2, 15), bool]) */
}

def @func_4085(%var_4083: Tensor[(2, 16, 13), float32], %var_4084: Tensor[(2, 16, 13), float32]) -> Tensor[(2, 16, 13), float32] {
  %99 = fn (%var_4064: Tensor[(2, 16, 13), float32], %var_4065: Tensor[(2, 16, 13), float32]) -> Tensor[(2, 16, 13), float32] {
    %95 = cast(%var_4065, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
    %96 = shape_of(%var_4064, dtype="int32") /* ty=Tensor[(3), int32] */;
    %97 = cast(%var_4064, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
    %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    subtract(%97, %98) /* ty=Tensor[(2, 16, 13), float32] */
  };
  %99(%var_4083, %var_4084) /* ty=Tensor[(2, 16, 13), float32] */
}

def @func_3275(%var_3266: Tensor[(9, 2, 12), float32]) -> (Tensor[(9, 2, 12), float32],) {
  %100 = cast(%var_3266, dtype="float32") /* ty=Tensor[(9, 2, 12), float32] */;
  %101 = log(%100) /* ty=Tensor[(9, 2, 12), float32] */;
  %102 = cast(%101, dtype="float32") /* ty=Tensor[(9, 2, 12), float32] */;
  %103 = atan(%102) /* ty=Tensor[(9, 2, 12), float32] */;
  (%103,)
}

def @func_5471(%var_5449: Tensor[(14, 11, 9), int64], %var_5450: Tensor[(14, 11, 9), int64], %var_5455: Tensor[(14, 11, 9), int64]) -> (Tensor[(14, 11, 9), bool], Tensor[(14, 1, 15), float32], Tensor[(525), uint16], Tensor[(1008), float64]) {
  %104 = cast(%var_5450, dtype="int64") /* ty=Tensor[(14, 11, 9), int64] */;
  %105 = shape_of(%var_5449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%var_5449, dtype="int64") /* ty=Tensor[(14, 11, 9), int64] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %108 = subtract(%106, %107) /* ty=Tensor[(14, 11, 9), int64] */;
  %109 = cast(%var_5455, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %110 = shape_of(%108, dtype="int32") /* ty=Tensor[(3), int32] */;
  %111 = cast(%108, dtype="bool") /* ty=Tensor[(14, 11, 9), bool] */;
  %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %113 = cast(meta[relay.Constant][3] /* ty=Tensor[(525), uint16] */, dtype="uint16") /* ty=Tensor[(525), uint16] */;
  %114 = cast(meta[relay.Constant][4] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %115 = reshape(%113, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), uint16] */;
  %116 = reshape(%114, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %117 = @func_4209(%115, %116) /* ty=(Tensor[(15, 7, 5), float64], Tensor[(14, 1, 15), float32], Tensor[(15, 7, 5), int16], Tensor[(14, 8, 9), float64], Tensor[(1008), float64], Tensor[(8, 10, 12), float32]) */;
  %118 = greater_equal(%111, %112) /* ty=Tensor[(14, 11, 9), bool] */;
  %119 = %117.1;
  (%118, %119, meta[relay.Constant][3] /* ty=Tensor[(525), uint16] */, meta[relay.Constant][4] /* ty=Tensor[(1008), float64] */)
}

def @func_1942() -> Tensor[(8, 10, 12), uint16] {
  @func_1940() /* ty=Tensor[(8, 10, 12), uint16] */
}

def @func_3236() -> (float32, Tensor[(8, 10, 12), float32]) {
  %123 = fn () -> (float32, Tensor[(8, 10, 12), float32]) {
    %120 = @func_2617() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) */;
    %121 = %120.2;
    %122 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
    (%121, %122)
  };
  %123() /* ty=(float32, Tensor[(8, 10, 12), float32]) */
}

def @func_5710(%var_5709: int32) -> (Tensor[(210), float32], Tensor[(8, 10, 12), float32], int32) {
  %130 = fn (%var_5703: int32) -> (Tensor[(210), float32], Tensor[(8, 10, 12), float32], int32) {
    %124 = @func_5365() /* ty=(Tensor[(210), float32],) */;
    %125 = cast(%var_5703, dtype="int32") /* ty=int32 */;
    %126 = reshape(%125, newshape=[]) /* ty=int32 */;
    %127 = @func_3039(%126) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(12, 3, 9), int16], Tensor[(12, 3, 9), float32], Tensor[(12, 3, 9), bool]) */;
    %128 = %124.0;
    %129 = %127.0;
    (%128, %129, %var_5703)
  };
  %130(%var_5709) /* ty=(Tensor[(210), float32], Tensor[(8, 10, 12), float32], int32) */
}

def @func_7887(%var_7844: Tensor[(130), int16]) -> (Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32]) {
  %131 = cast(%var_7844, dtype="int16") /* ty=Tensor[(130), int16] */;
  %132 = reshape(%131, newshape=[130, 1]) /* ty=Tensor[(130, 1), int16] */;
  %133 = @func_3812(%132) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(13, 10, 4), int16], Tensor[(130, 1), int16], Tensor[(520), int16], Tensor[(15, 16, 1), float32]) */;
  %134 = @func_7799() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(15, 8, 3), uint16], uint16, Tensor[(360), uint16]) */;
  %135 = @func_7835() /* ty=Tensor[(8, 10, 12), float32] */;
  %136 = %133.4;
  %137 = %134.0;
  (%135, %136, %var_7844, %137)
}

def @func_7034() -> Tensor[(8, 10, 12), float32] {
  %138 = fn () -> Tensor[(8, 10, 12), float32] {
    @func_3571() /* ty=Tensor[(8, 10, 12), float32] */
  };
  %138() /* ty=Tensor[(8, 10, 12), float32] */
}

def @func_4558(%var_4557: Tensor[(8, 10, 12), bool]) -> (Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), int16]) {
  %155 = fn (%var_4547: Tensor[(8, 10, 12), bool]) -> (Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), int16]) {
    %139 = @func_3990() /* ty=(Tensor[(8, 10, 12), uint32],) */;
    %140 = %139.0;
    %141 = cast(%140, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
    %142 = reshape(%141, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), float32] */;
    %143 = @func_3473(%142) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), bool]) */;
    %144 = %143.1;
    %145 = cast(%140, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
    %146 = shape_of(%144, dtype="int32") /* ty=Tensor[(3), int32] */;
    %147 = cast(%144, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
    %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %149 = cast(%var_4547, dtype="int16") /* ty=Tensor[(8, 10, 12), int16] */;
    %150 = shape_of(%144, dtype="int32") /* ty=Tensor[(3), int32] */;
    %151 = cast(%144, dtype="int16") /* ty=Tensor[(8, 10, 12), int16] */;
    %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %153 = greater(%147, %148) /* ty=Tensor[(8, 10, 12), bool] */;
    %154 = bitwise_and(%151, %152) /* ty=Tensor[(8, 10, 12), int16] */;
    (%153, %154)
  };
  %155(%var_4557) /* ty=(Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), int16]) */
}

def @func_2440(%var_2438: Tensor[(210), float32]) -> (Tensor[(8, 10, 12), uint16], Tensor[(14, ?, 15), float64], Tensor[(14, 1, 15), float32]) {
  @func_2437(%var_2438) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(14, ?, 15), float64], Tensor[(14, 1, 15), float32]) */
}

def @func_2619() -> (Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) {
  @func_2617() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) */
}

def @func_5597(%var_5576: float64, %var_5577: Tensor[(14, 6, 5), float64], %var_5583: Tensor[(960), float32]) -> (Tensor[(14, 6, 5), float64], Tensor[(8, 10, 12), float32], Tensor[(960), float32]) {
  %156 = cast(%var_5576, dtype="float64") /* ty=float64 */;
  %157 = cast(%var_5577, dtype="float64") /* ty=Tensor[(14, 6, 5), float64] */;
  %158 = cast(%var_5583, dtype="float32") /* ty=Tensor[(960), float32] */;
  %159 = reshape(%158, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), float32] */;
  %160 = @func_5172(%159) /* ty=(Tensor[(8, 10, 12), float32],) */;
  %161 = divide(%156, %157) /* ty=Tensor[(14, 6, 5), float64] */;
  %162 = %160.0;
  (%161, %162, %var_5583)
}

def @func_6653() -> (Tensor[(210), float32],) {
  %164 = fn () -> (Tensor[(210), float32],) {
    %163 = @func_3677() /* ty=Tensor[(210), float32] */;
    (%163,)
  };
  %164() /* ty=(Tensor[(210), float32],) */
}

def @main(%var_8701: Tensor[(576, 2), float32]) -> (Tensor[(8, 10, 12), uint16], Tensor[(1008), float64], Tensor[(390), int32], Tensor[(576, 2), bool], Tensor[(576, 2), float64]) {
  %165 = cast(meta[relay.Constant][6] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
  %166 = cast(meta[relay.Constant][5] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %167 = reshape(%166, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %168 = @func_1167(%167) /* ty=(Tensor[(14, 8, 9), float64], Tensor[(16, 8, 9), float32], Tensor[(1152), float32]) */;
  %169 = %168.2;
  %170 = cast(%169, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %171 = reshape(%165, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), int32] */;
  %172 = reshape(%170, newshape=[576, 2]) /* ty=Tensor[(576, 2), float32] */;
  %173 = @func_1480(%171, %172) /* ty=(Tensor[(10, 13, 3), bool], Tensor[(16, 8, 9), float32], Tensor[(576, 2), float32], Tensor[(16, 8, 9), float32], Tensor[(16, 9, 9), bool], Tensor[(1, 1296), float64], Tensor[(10, 13, 3), float64]) */;
  %174 = %173.2;
  %175 = cast(meta[relay.Constant][5] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %176 = reshape(%175, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %177 = @func_1169(%176) /* ty=(Tensor[(14, 8, 9), float64], Tensor[(16, 8, 9), float32], Tensor[(1152), float32]) */;
  %178 = %177.2;
  %179 = cast(%178, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %180 = shape_of(%174, dtype="int32") /* ty=Tensor[(2), int32] */;
  %181 = cast(%174, dtype="bool") /* ty=Tensor[(576, 2), bool] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %183 = cast(%174, dtype="float32") /* ty=Tensor[(576, 2), float32] */;
  %184 = acos(%183) /* ty=Tensor[(576, 2), float32] */;
  %185 = cast(%var_8701, dtype="float64") /* ty=Tensor[(576, 2), float64] */;
  %186 = shape_of(%184, dtype="int32") /* ty=Tensor[(2), int32] */;
  %187 = cast(%184, dtype="float64") /* ty=Tensor[(576, 2), float64] */;
  %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %189 = @func_1940() /* ty=Tensor[(8, 10, 12), uint16] */;
  %190 = less_equal(%181, %182) /* ty=Tensor[(576, 2), bool] */;
  %191 = maximum(%187, %188) /* ty=Tensor[(576, 2), float64] */;
  (%189, meta[relay.Constant][5] /* ty=Tensor[(1008), float64] */, meta[relay.Constant][6] /* ty=Tensor[(390), int32] */, %190, %191)
}

def @func_2323(%var_2320: Tensor[(14, 1, 15), float32]) -> (Tensor[(14, 1, 15), float32],) {
  %192 = cast(%var_2320, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %193 = rsqrt(%192) /* ty=Tensor[(14, 1, 15), float32] */;
  (%193,)
}

def @func_1934(%var_1932: Tensor[(13, 10, 1), int16], %var_1933: Tensor[(13, 10, 4), int16]) -> (Tensor[(13, 10, 4), int16], Tensor[(13, 10, 4), float64], Tensor[(8, 10, 12), uint16]) {
  %200 = fn (%var_1898: Tensor[(13, 10, 1), int16], %var_1899: Tensor[(13, 10, 4), int16]) -> (Tensor[(13, 10, 4), int16], Tensor[(13, 10, 4), float64], Tensor[(8, 10, 12), uint16]) {
    %194 = cast(%var_1898, dtype="int16") /* ty=Tensor[(13, 10, 1), int16] */;
    %195 = cast(%var_1899, dtype="int16") /* ty=Tensor[(13, 10, 4), int16] */;
    %196 = cast(%var_1899, dtype="float64") /* ty=Tensor[(13, 10, 4), float64] */;
    %197 = bitwise_and(%194, %195) /* ty=Tensor[(13, 10, 4), int16] */;
    %198 = acosh(%196) /* ty=Tensor[(13, 10, 4), float64] */;
    %199 = @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */;
    (%197, %198, %199)
  };
  %200(%var_1932, %var_1933) /* ty=(Tensor[(13, 10, 4), int16], Tensor[(13, 10, 4), float64], Tensor[(8, 10, 12), uint16]) */
}

def @func_8129() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 390, 15), int32], Tensor[(525), uint16], Tensor[(1008), float64], Tensor[(195, 2), int32]) {
  @func_8127() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 390, 15), int32], Tensor[(525), uint16], Tensor[(1008), float64], Tensor[(195, 2), int32]) */
}

def @func_5091() -> Tensor[(14, 1, 15), float32] {
  @func_5089() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_2830(%var_2823: int32) -> (Tensor[(12, 3, 9), bool],) {
  %201 = cast(%var_2823, dtype="bool") /* ty=bool */;
  %202 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 3, 9), int32] */, dtype="bool") /* ty=Tensor[(12, 3, 9), bool] */;
  %203 = not_equal(%201, %202) /* ty=Tensor[(12, 3, 9), bool] */;
  (%203,)
}

def @func_6164() -> Tensor[(14, 1, 15), float64] {
  %204 = @func_3355() /* ty=(Tensor[(14, 1, 15), float64],) */;
  %204.0
}

def @func_2358() -> (Tensor[(8, 10, 12), uint16],) {
  @func_2356() /* ty=(Tensor[(8, 10, 12), uint16],) */
}

def @func_7589() -> (Tensor[(10, 8, 8), float32],) {
  @func_7587() /* ty=(Tensor[(10, 8, 8), float32],) */
}

def @func_1940() -> Tensor[(8, 10, 12), uint16] {
  @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */
}

def @func_652(%var_650: Tensor[(16, 8, 9), float32], %var_651: Tensor[(16, 8, 9), float32]) -> (Tensor[(16, 8, 9), float32],) {
  @func_648(%var_650, %var_651) /* ty=(Tensor[(16, 8, 9), float32],) */
}

def @func_2208(%var_2161: Tensor[(1, 13, 7), int64], %var_2179: Tensor[(520), int16]) -> (Tensor[(13, 13, 7), bool], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(520), int16], Tensor[(8, 10, 12), uint16], Tensor[(576, 2), float32], Tensor[(390), int32], Tensor[(1152), float32]) {
  %205 = cast(%var_2161, dtype="bool") /* ty=Tensor[(1, 13, 7), bool] */;
  %206 = cast(meta[relay.Constant][8] /* ty=Tensor[(13, 13, 7), int64] */, dtype="bool") /* ty=Tensor[(13, 13, 7), bool] */;
  %207 = cast(meta[relay.Constant][9] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %208 = cast(%var_2179, dtype="int16") /* ty=Tensor[(520), int16] */;
  %209 = reshape(%207, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), int16] */;
  %210 = reshape(%208, newshape=[13, 10, 4]) /* ty=Tensor[(13, 10, 4), int16] */;
  %211 = @func_1931(%209, %210) /* ty=(Tensor[(13, 10, 4), int16], Tensor[(13, 10, 4), float64], Tensor[(8, 10, 12), uint16]) */;
  %212 = cast(meta[relay.Constant][10] /* ty=Tensor[(390), int32] */, dtype="int32") /* ty=Tensor[(390), int32] */;
  %213 = cast(meta[relay.Constant][11] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %214 = reshape(%212, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), int32] */;
  %215 = reshape(%213, newshape=[576, 2]) /* ty=Tensor[(576, 2), float32] */;
  %216 = @func_1476(%214, %215) /* ty=(Tensor[(10, 13, 3), bool], Tensor[(16, 8, 9), float32], Tensor[(576, 2), float32], Tensor[(16, 8, 9), float32], Tensor[(16, 9, 9), bool], Tensor[(1, 1296), float64], Tensor[(10, 13, 3), float64]) */;
  %217 = less(%205, %206) /* ty=Tensor[(13, 13, 7), bool] */;
  %218 = %211.0;
  %219 = @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */;
  %220 = %216.2;
  (%217, %218, meta[relay.Constant][9] /* ty=Tensor[(130), int16] */, %var_2179, %219, %220, meta[relay.Constant][10] /* ty=Tensor[(390), int32] */, meta[relay.Constant][11] /* ty=Tensor[(1152), float32] */)
}

def @func_7233(%var_7232: Tensor[(7, 16, 3), float64]) -> Tensor[(7, 16, 3), float64] {
  %222 = fn (%var_7224: Tensor[(7, 16, 3), float64]) -> Tensor[(7, 16, 3), float64] {
    %221 = cast(%var_7224, dtype="float64") /* ty=Tensor[(7, 16, 3), float64] */;
    exp(%221) /* ty=Tensor[(7, 16, 3), float64] */
  };
  %222(%var_7232) /* ty=Tensor[(7, 16, 3), float64] */
}

def @func_2708(%var_2680: Tensor[(8, 10, 12), uint16], %var_2704: Tensor[(8, 10, 12), uint16]) -> (Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), bool]) {
  %223 = @func_2120() /* ty=Tensor[(8, 10, 12), uint16] */;
  %224 = cast(%var_2680, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %225 = shape_of(%223, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%223, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %228 = cast(%var_2704, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %229 = shape_of(%var_2680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%var_2680, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %232 = greater_equal(%226, %227) /* ty=Tensor[(8, 10, 12), bool] */;
  %233 = logical_or(%230, %231) /* ty=Tensor[(8, 10, 12), bool] */;
  (%232, %233)
}

def @func_7800() -> (Tensor[(8, 10, 12), float32], Tensor[(15, 8, 3), uint16], uint16, Tensor[(360), uint16]) {
  %241 = fn () -> (Tensor[(8, 10, 12), float32], Tensor[(15, 8, 3), uint16], uint16, Tensor[(360), uint16]) {
    %234 = cast(meta[relay.Constant][12] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %235 = cast(meta[relay.Constant][13] /* ty=Tensor[(360), uint16] */, dtype="uint16") /* ty=Tensor[(360), uint16] */;
    %236 = reshape(%234, newshape=[]) /* ty=uint16 */;
    %237 = reshape(%235, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), uint16] */;
    %238 = @func_6445(%236, %237) /* ty=(Tensor[(15, 8, 3), uint16], Tensor[(1008), float64], Tensor[(130), int16]) */;
    %239 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
    %240 = %238.0;
    (%239, %240, meta[relay.Constant][12] /* ty=uint16 */, meta[relay.Constant][13] /* ty=Tensor[(360), uint16] */)
  };
  %241() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(15, 8, 3), uint16], uint16, Tensor[(360), uint16]) */
}

def @func_3661() -> (Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), bool]) {
  %242 = @func_2874() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %243 = @func_3571() /* ty=Tensor[(8, 10, 12), float32] */;
  %244 = cast(meta[relay.Constant][14] /* ty=Tensor[(8, 10, 12), float32] */, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %245 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%243, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %248 = %242.0;
  %249 = less(%246, %247) /* ty=Tensor[(8, 10, 12), bool] */;
  (%248, %249)
}

def @func_7837() -> Tensor[(8, 10, 12), float32] {
  @func_7835() /* ty=Tensor[(8, 10, 12), float32] */
}

def @func_2356() -> (Tensor[(8, 10, 12), uint16],) {
  %250 = @func_2120() /* ty=Tensor[(8, 10, 12), uint16] */;
  (%250,)
}

def @func_2471() -> (Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) {
  @func_2469() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */
}

def @func_6790() -> (Tensor[(210), float32], Tensor[(9, 4, 11), float64], Tensor[(396), float64]) {
  @func_6788() /* ty=(Tensor[(210), float32], Tensor[(9, 4, 11), float64], Tensor[(396), float64]) */
}

def @func_2547(%var_2545: float32) -> Tensor[(15, 16, 1), float32] {
  @func_2544(%var_2545) /* ty=Tensor[(15, 16, 1), float32] */
}

def @func_2013() -> Tensor[(8, 10, 12), float32] {
  %251 = @func_1940() /* ty=Tensor[(8, 10, 12), uint16] */;
  %252 = cast(%251, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  log(%252) /* ty=Tensor[(8, 10, 12), float32] */
}

def @func_2437(%var_2417: Tensor[(210), float32]) -> (Tensor[(8, 10, 12), uint16], Tensor[(14, ?, 15), float64], Tensor[(14, 1, 15), float32]) {
  %253 = @func_2356() /* ty=(Tensor[(8, 10, 12), uint16],) */;
  %254 = cast(%var_2417, dtype="float32") /* ty=Tensor[(210), float32] */;
  %255 = reshape(%254, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), float32] */;
  %256 = @func_2323(%255) /* ty=(Tensor[(14, 1, 15), float32],) */;
  %257 = %256.0;
  %258 = cast(%var_2417, dtype="float64") /* ty=Tensor[(210), float64] */;
  %259 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%257, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %262 = cast(%257, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %263 = %253.0;
  %264 = floor_mod(%260, %261) /* ty=Tensor[(14, ?, 15), float64] */;
  %265 = log(%262) /* ty=Tensor[(14, 1, 15), float32] */;
  (%263, %264, %265)
}

def @func_4213(%var_4211: Tensor[(15, 7, 5), uint16], %var_4212: Tensor[(1008), float64]) -> (Tensor[(15, 7, 5), float64], Tensor[(14, 1, 15), float32], Tensor[(15, 7, 5), int16], Tensor[(14, 8, 9), float64], Tensor[(1008), float64], Tensor[(8, 10, 12), float32]) {
  @func_4209(%var_4211, %var_4212) /* ty=(Tensor[(15, 7, 5), float64], Tensor[(14, 1, 15), float32], Tensor[(15, 7, 5), int16], Tensor[(14, 8, 9), float64], Tensor[(1008), float64], Tensor[(8, 10, 12), float32]) */
}

def @func_7093() -> (Tensor[(8, 10, 12), float32], float32, Tensor[(8, 10, 12), float32]) {
  %271 = fn () -> (Tensor[(8, 10, 12), float32], float32, Tensor[(8, 10, 12), float32]) {
    %266 = @func_4930() /* ty=(Tensor[(8, 10, 12), float32],) */;
    %267 = @func_4930() /* ty=(Tensor[(8, 10, 12), float32],) */;
    %268 = %266.0;
    %269 = @func_4240() /* ty=float32 */;
    %270 = %267.0;
    (%268, %269, %270)
  };
  %271() /* ty=(Tensor[(8, 10, 12), float32], float32, Tensor[(8, 10, 12), float32]) */
}

def @func_2804(%var_2754: Tensor[(130), int16]) -> (Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) {
  %272 = @func_2289() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(16, 8, 9), float32], Tensor[(1008), float64]) */;
  %273 = cast(%var_2754, dtype="int16") /* ty=Tensor[(130), int16] */;
  %274 = cast(meta[relay.Constant][15] /* ty=Tensor[(520), int16] */, dtype="int16") /* ty=Tensor[(520), int16] */;
  %275 = reshape(%273, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), int16] */;
  %276 = reshape(%274, newshape=[13, 10, 4]) /* ty=Tensor[(13, 10, 4), int16] */;
  %277 = @func_1931(%275, %276) /* ty=(Tensor[(13, 10, 4), int16], Tensor[(13, 10, 4), float64], Tensor[(8, 10, 12), uint16]) */;
  %278 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  %279 = cast(%278, dtype="uint16") /* ty=Tensor[(8, 10, 12), uint16] */;
  %280 = cast(%278, dtype="uint16") /* ty=Tensor[(8, 10, 12), uint16] */;
  %281 = reshape(%279, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), uint16] */;
  %282 = reshape(%280, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), uint16] */;
  %283 = @func_2708(%281, %282) /* ty=(Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), bool]) */;
  %284 = cast(meta[relay.Constant][15] /* ty=Tensor[(520), int16] */, dtype="float64") /* ty=Tensor[(520), float64] */;
  %285 = %272.2;
  %286 = %277.0;
  %287 = @func_2120() /* ty=Tensor[(8, 10, 12), uint16] */;
  %288 = %283.1;
  %289 = erf(%284) /* ty=Tensor[(520), float64] */;
  (%285, %286, %var_2754, %278, %287, %288, %289)
}

def @func_5331(%var_5330: Tensor[(1296), float64]) -> (Tensor[(8, 10, 12), uint16], float32, Tensor[(1296), float64], Tensor[(130), int16], Tensor[(13, 10), int16], Tensor[(16, 9, 9), float32], Tensor[(8, 10, 12), float32], Tensor[(520), int16], Tensor[(1008), float64], Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], Tensor[(8, 10, 12), uint16]) {
  %324 = fn (%var_5205: Tensor[(1296), float64]) -> (Tensor[(8, 10, 12), uint16], float32, Tensor[(1296), float64], Tensor[(130), int16], Tensor[(13, 10), int16], Tensor[(16, 9, 9), float32], Tensor[(8, 10, 12), float32], Tensor[(520), int16], Tensor[(1008), float64], Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], Tensor[(8, 10, 12), uint16]) {
    %290 = @func_3235() /* ty=(float32, Tensor[(8, 10, 12), float32]) */;
    %291 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 10), int16] */, dtype="int16") /* ty=Tensor[(13, 10), int16] */;
    %292 = reshape(%291, newshape=[130]) /* ty=Tensor[(130), int16] */;
    %293 = @func_2804(%292) /* ty=(Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) */;
    %294 = cast(%var_5205, dtype="float64") /* ty=Tensor[(1296), float64] */;
    %295 = reshape(%294, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), float64] */;
    %296 = @func_308(%295) /* ty=(Tensor[(16, 9, 9), bool],) */;
    %297 = %296.0;
    %298 = cast(%297, dtype="float32") /* ty=Tensor[(16, 9, 9), float32] */;
    %299 = exp(%298) /* ty=Tensor[(16, 9, 9), float32] */;
    %300 = cast(%299, dtype="float32") /* ty=Tensor[(16, 9, 9), float32] */;
    %301 = @func_4422() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(1008), float64]) */;
    %302 = %293.2;
    %303 = cast(%302, dtype="int16") /* ty=Tensor[(130), int16] */;
    %304 = reshape(%303, newshape=[130, 1]) /* ty=Tensor[(130, 1), int16] */;
    %305 = @func_3812(%304) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(13, 10, 4), int16], Tensor[(130, 1), int16], Tensor[(520), int16], Tensor[(15, 16, 1), float32]) */;
    %306 = @func_2289() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(16, 8, 9), float32], Tensor[(1008), float64]) */;
    %307 = @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */;
    %308 = cast(%307, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
    %309 = reshape(%308, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), bool] */;
    %310 = @func_4556(%309) /* ty=(Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), int16]) */;
    %311 = @func_2356() /* ty=(Tensor[(8, 10, 12), uint16],) */;
    %312 = %290.0;
    %313 = cast(%312, dtype="float32") /* ty=float32 */;
    %314 = reshape(%313, newshape=[]) /* ty=float32 */;
    %315 = @func_2289() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(16, 8, 9), float32], Tensor[(1008), float64]) */;
    %316 = sin(%300) /* ty=Tensor[(16, 9, 9), float32] */;
    %317 = %301.0;
    %318 = %305.5;
    %319 = %306.2;
    %320 = %310.0;
    %321 = %311.0;
    %322 = @func_2544(%314) /* ty=Tensor[(15, 16, 1), float32] */;
    %323 = %315.0;
    (%307, %312, %var_5205, %302, meta[relay.Constant][16] /* ty=Tensor[(13, 10), int16] */, %316, %317, %318, %319, %320, %321, %322, %323)
  };
  %324(%var_5330) /* ty=(Tensor[(8, 10, 12), uint16], float32, Tensor[(1296), float64], Tensor[(130), int16], Tensor[(13, 10), int16], Tensor[(16, 9, 9), float32], Tensor[(8, 10, 12), float32], Tensor[(520), int16], Tensor[(1008), float64], Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], Tensor[(8, 10, 12), uint16]) */
}

def @func_4386() -> (Tensor[(8, 10, 12), float64], Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(10, 16, 6), float64]) {
  @func_4384() /* ty=(Tensor[(8, 10, 12), float64], Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(10, 16, 6), float64]) */
}

def @func_4241() -> float32 {
  %326 = fn () -> float32 {
    %325 = @func_3559() /* ty=(float32,) */;
    %325.0
  };
  %326() /* ty=float32 */
}

def @func_5476(%var_5473: Tensor[(14, 11, 9), int64], %var_5474: Tensor[(14, 11, 9), int64], %var_5475: Tensor[(14, 11, 9), int64]) -> (Tensor[(14, 11, 9), bool], Tensor[(14, 1, 15), float32], Tensor[(525), uint16], Tensor[(1008), float64]) {
  @func_5471(%var_5473, %var_5474, %var_5475) /* ty=(Tensor[(14, 11, 9), bool], Tensor[(14, 1, 15), float32], Tensor[(525), uint16], Tensor[(1008), float64]) */
}

def @func_5680() -> float32 {
  @func_5678() /* ty=float32 */
}

def @func_4503(%var_4501: Tensor[(10, 9, 4), uint64], %var_4502: Tensor[(10, 9, 4), uint64]) -> Tensor[(10, 9, 4), bool] {
  @func_4499(%var_4501, %var_4502) /* ty=Tensor[(10, 9, 4), bool] */
}

def @func_5029(%var_5010: float64) -> (Tensor[(13, 2, 2), float64], Tensor[(16, 9, 9), bool], Tensor[(33), float32]) {
  %327 = cast(%var_5010, dtype="float64") /* ty=float64 */;
  %328 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 2, 2), float64] */, dtype="float64") /* ty=Tensor[(13, 2, 2), float64] */;
  %329 = cast(meta[relay.Constant][18] /* ty=Tensor[(33), float32] */, dtype="float32") /* ty=Tensor[(33), float32] */;
  %330 = reshape(%329, newshape=[3, 11, 1]) /* ty=Tensor[(3, 11, 1), float32] */;
  %331 = @func_3220(%330) /* ty=(Tensor[(3, 11, 1), float32], Tensor[(16, 9, 9), bool], Tensor[(1296), float64]) */;
  %332 = mod(%327, %328) /* ty=Tensor[(13, 2, 2), float64] */;
  %333 = %331.1;
  (%332, %333, meta[relay.Constant][18] /* ty=Tensor[(33), float32] */)
}

def @func_3663() -> (Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), bool]) {
  @func_3661() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), bool]) */
}

def @func_7439(%var_7437: Tensor[(11, 12, 3), uint32], %var_7438: Tensor[(11, 12, 3), uint32]) -> (Tensor[(11, 12, 3), uint32], Tensor[(360), uint64], float32) {
  %342 = fn (%var_7410: Tensor[(11, 12, 3), uint32], %var_7411: Tensor[(11, 12, 3), uint32]) -> (Tensor[(11, 12, 3), uint32], Tensor[(360), uint64], float32) {
    %334 = cast(%var_7411, dtype="uint32") /* ty=Tensor[(11, 12, 3), uint32] */;
    %335 = shape_of(%var_7410, dtype="int32") /* ty=Tensor[(3), int32] */;
    %336 = cast(%var_7410, dtype="uint32") /* ty=Tensor[(11, 12, 3), uint32] */;
    %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %338 = @func_5755() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(360), uint64], Tensor[(10, 9, 4), float32]) */;
    %339 = multiply(%336, %337) /* ty=Tensor[(11, 12, 3), uint32] */;
    %340 = %338.1;
    %341 = @func_6497() /* ty=float32 */;
    (%339, %340, %341)
  };
  %342(%var_7437, %var_7438) /* ty=(Tensor[(11, 12, 3), uint32], Tensor[(360), uint64], float32) */
}

def @func_7612() -> float32 {
  %343 = fn () -> float32 {
    @func_4240() /* ty=float32 */
  };
  %343() /* ty=float32 */
}

def @func_7921(%var_7892: Tensor[(2, 11, 2), int32], %var_7899: uint16) -> (Tensor[(2, 11, 2), int32], Tensor[(1008), float64], uint16, Tensor[(360), uint16], Tensor[(1008), float64], Tensor[(525), uint16], Tensor[(2, 11, 2), float32]) {
  %344 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 11, 2), int32] */, dtype="int32") /* ty=Tensor[(2, 11, 2), int32] */;
  %345 = shape_of(%var_7892, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%var_7892, dtype="int32") /* ty=Tensor[(2, 11, 2), int32] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %348 = cast(%var_7899, dtype="uint16") /* ty=uint16 */;
  %349 = cast(meta[relay.Constant][20] /* ty=Tensor[(360), uint16] */, dtype="uint16") /* ty=Tensor[(360), uint16] */;
  %350 = reshape(%348, newshape=[]) /* ty=uint16 */;
  %351 = reshape(%349, newshape=[15, 8, 3]) /* ty=Tensor[(15, 8, 3), uint16] */;
  %352 = @func_6445(%350, %351) /* ty=(Tensor[(15, 8, 3), uint16], Tensor[(1008), float64], Tensor[(130), int16]) */;
  %353 = cast(meta[relay.Constant][21] /* ty=Tensor[(525), uint16] */, dtype="uint16") /* ty=Tensor[(525), uint16] */;
  %354 = %352.1;
  %355 = cast(%354, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %356 = reshape(%353, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), uint16] */;
  %357 = reshape(%355, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %358 = @func_4209(%356, %357) /* ty=(Tensor[(15, 7, 5), float64], Tensor[(14, 1, 15), float32], Tensor[(15, 7, 5), int16], Tensor[(14, 8, 9), float64], Tensor[(1008), float64], Tensor[(8, 10, 12), float32]) */;
  %359 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 11, 2), int32] */, dtype="float32") /* ty=Tensor[(2, 11, 2), float32] */;
  %360 = subtract(%346, %347) /* ty=Tensor[(2, 11, 2), int32] */;
  %361 = %358.4;
  %362 = log(%359) /* ty=Tensor[(2, 11, 2), float32] */;
  (%360, %354, %var_7899, meta[relay.Constant][20] /* ty=Tensor[(360), uint16] */, %361, meta[relay.Constant][21] /* ty=Tensor[(525), uint16] */, %362)
}

def @func_2617() -> (Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) {
  %363 = @func_2356() /* ty=(Tensor[(8, 10, 12), uint16],) */;
  %364 = %363.0;
  %365 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 10, 12), uint16] */, dtype="uint16") /* ty=Tensor[(8, 10, 12), uint16] */;
  %366 = shape_of(%364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%364, dtype="uint16") /* ty=Tensor[(8, 10, 12), uint16] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %369 = cast(-2.97963f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %370 = reshape(%369, newshape=[]) /* ty=float32 */;
  %371 = bitwise_xor(%367, %368) /* ty=Tensor[(8, 10, 12), uint16] */;
  %372 = @func_2544(%370) /* ty=Tensor[(15, 16, 1), float32] */;
  (%371, %372, -2.97963f /* ty=float32 */)
}

def @func_2649() -> (Tensor[(14, 1, 15), float32],) {
  %373 = @func_2469() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
  %374 = %373.1;
  (%374,)
}

def @func_3356() -> (Tensor[(14, 1, 15), float64],) {
  %379 = fn () -> (Tensor[(14, 1, 15), float64],) {
    %375 = @func_2649() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %376 = %375.0;
    %377 = cast(%376, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
    %378 = sinh(%377) /* ty=Tensor[(14, 1, 15), float64] */;
    (%378,)
  };
  %379() /* ty=(Tensor[(14, 1, 15), float64],) */
}

def @func_4100() -> Tensor[(14, 1, 15), float32] {
  %380 = @func_2874() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %380.0
}

def @func_7003(%var_7002: Tensor[(9, 9, 10), float64]) -> Tensor[(9, 9, 10), float64] {
  %385 = fn (%var_6996: Tensor[(9, 9, 10), float64]) -> Tensor[(9, 9, 10), float64] {
    %381 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 9, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 9, 10), float64] */;
    %382 = shape_of(%var_6996, dtype="int32") /* ty=Tensor[(3), int32] */;
    %383 = cast(%var_6996, dtype="float64") /* ty=Tensor[(9, 9, 10), float64] */;
    %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%383, %384) /* ty=Tensor[(9, 9, 10), float64] */
  };
  %385(%var_7002) /* ty=Tensor[(9, 9, 10), float64] */
}

def @func_7343(%var_7313: Tensor[(525), uint16], %var_7314: Tensor[(1008), float64], %var_7317: Tensor[(390, 1), int32]) -> (Tensor[(210), float32], Tensor[(8, 10, 12), float32], Tensor[(525), uint16], Tensor[(1008), float64], Tensor[(1296), bool], Tensor[(14, 390, 15), int32]) {
  %386 = @func_5365() /* ty=(Tensor[(210), float32],) */;
  %387 = cast(%var_7313, dtype="uint16") /* ty=Tensor[(525), uint16] */;
  %388 = cast(%var_7314, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %389 = reshape(%387, newshape=[15, 7, 5]) /* ty=Tensor[(15, 7, 5), uint16] */;
  %390 = reshape(%388, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %391 = @func_4209(%389, %390) /* ty=(Tensor[(15, 7, 5), float64], Tensor[(14, 1, 15), float32], Tensor[(15, 7, 5), int16], Tensor[(14, 8, 9), float64], Tensor[(1008), float64], Tensor[(8, 10, 12), float32]) */;
  %392 = cast(%var_7317, dtype="int32") /* ty=Tensor[(390, 1), int32] */;
  %393 = cast(meta[relay.Constant][24] /* ty=Tensor[(1296), bool] */, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %394 = reshape(%392, newshape=[390]) /* ty=Tensor[(390), int32] */;
  %395 = reshape(%393, newshape=[6, 216]) /* ty=Tensor[(6, 216), bool] */;
  %396 = @func_3946(%394, %395) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32], Tensor[(130, 1), float32], Tensor[(390), int32], Tensor[(6, 216), bool], Tensor[(130), int16], Tensor[(14, 1, 15), float32]) */;
  %397 = %396.7;
  %398 = cast(%397, dtype="int32") /* ty=Tensor[(14, 1, 15), int32] */;
  %399 = cast(%var_7317, dtype="int32") /* ty=Tensor[(390, 1), int32] */;
  %400 = %386.0;
  %401 = %391.5;
  %402 = left_shift(%398, %399) /* ty=Tensor[(14, 390, 15), int32] */;
  (%400, %401, %var_7313, %var_7314, meta[relay.Constant][24] /* ty=Tensor[(1296), bool] */, %402)
}

def @func_4971() -> (Tensor[(8, 10, 12), float32],) {
  @func_4969() /* ty=(Tensor[(8, 10, 12), float32],) */
}

def @func_8676() -> (Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float64]) {
  %408 = fn () -> (Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float64]) {
    %403 = @func_8127() /* ty=(Tensor[(14, 1, 15), float32], Tensor[(14, 390, 15), int32], Tensor[(525), uint16], Tensor[(1008), float64], Tensor[(195, 2), int32]) */;
    %404 = %403.0;
    %405 = cast(%404, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
    %406 = cosh(%405) /* ty=Tensor[(14, 1, 15), float64] */;
    %407 = @func_6164() /* ty=Tensor[(14, 1, 15), float64] */;
    (%406, %407)
  };
  %408() /* ty=(Tensor[(14, 1, 15), float64], Tensor[(14, 1, 15), float64]) */
}

def @func_1555(%var_1553: Tensor[(10, 16, 6), float32]) -> (Tensor[(10, 16, 6), float64],) {
  @func_1552(%var_1553) /* ty=(Tensor[(10, 16, 6), float64],) */
}

def @func_7835() -> Tensor[(8, 10, 12), float32] {
  %409 = @func_2976() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %409.0
}

def @func_3561() -> (float32,) {
  @func_3559() /* ty=(float32,) */
}

def @func_5427() -> (Tensor[(130), int16], float32) {
  @func_5425() /* ty=(Tensor[(130), int16], float32) */
}

def @func_311(%var_309: Tensor[(16, 9, 9), float64]) -> (Tensor[(16, 9, 9), bool],) {
  @func_308(%var_309) /* ty=(Tensor[(16, 9, 9), bool],) */
}

def @func_2290() -> (Tensor[(8, 10, 12), uint16], Tensor[(16, 8, 9), float32], Tensor[(1008), float64]) {
  %415 = fn () -> (Tensor[(8, 10, 12), uint16], Tensor[(16, 8, 9), float32], Tensor[(1008), float64]) {
    %410 = cast(meta[relay.Constant][25] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %411 = reshape(%410, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
    %412 = @func_1167(%411) /* ty=(Tensor[(14, 8, 9), float64], Tensor[(16, 8, 9), float32], Tensor[(1152), float32]) */;
    %413 = @func_1940() /* ty=Tensor[(8, 10, 12), uint16] */;
    %414 = %412.1;
    (%413, %414, meta[relay.Constant][25] /* ty=Tensor[(1008), float64] */)
  };
  %415() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(16, 8, 9), float32], Tensor[(1008), float64]) */
}

def @func_8536() -> (Tensor[(210), float32],) {
  %416 = @func_3677() /* ty=Tensor[(210), float32] */;
  (%416,)
}

def @func_4723(%var_4710: Tensor[(14, 5, 16), float32]) -> Tensor[(14, 5, 16), float64] {
  %417 = cast(%var_4710, dtype="float32") /* ty=Tensor[(14, 5, 16), float32] */;
  %418 = sqrt(%417) /* ty=Tensor[(14, 5, 16), float32] */;
  %419 = cast(%418, dtype="float64") /* ty=Tensor[(14, 5, 16), float64] */;
  exp(%419) /* ty=Tensor[(14, 5, 16), float64] */
}

def @func_6540(%var_6538: Tensor[(1120), float32]) -> (Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint32], Tensor[(14, 5, 16), float64], Tensor[(1120), float32]) {
  @func_6537(%var_6538) /* ty=(Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint32], Tensor[(14, 5, 16), float64], Tensor[(1120), float32]) */
}

def @func_6800() -> Tensor[(8, 10, 12), float32] {
  @func_6798() /* ty=Tensor[(8, 10, 12), float32] */
}

def @func_2651() -> (Tensor[(14, 1, 15), float32],) {
  @func_2649() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_3334() -> (Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(130), int16]) {
  %425 = fn () -> (Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(130), int16]) {
    %420 = cast(meta[relay.Constant][26] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
    %421 = reshape(%420, newshape=[130]) /* ty=Tensor[(130), int16] */;
    %422 = @func_2804(%421) /* ty=(Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) */;
    %423 = @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */;
    %424 = %422.5;
    (%423, %424, meta[relay.Constant][26] /* ty=Tensor[(130), int16] */)
  };
  %425() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(130), int16]) */
}

def @func_3041(%var_3040: int32) -> (Tensor[(8, 10, 12), float32], Tensor[(12, 3, 9), int16], Tensor[(12, 3, 9), float32], Tensor[(12, 3, 9), bool]) {
  %443 = fn (%var_3011: int32) -> (Tensor[(8, 10, 12), float32], Tensor[(12, 3, 9), int16], Tensor[(12, 3, 9), float32], Tensor[(12, 3, 9), bool]) {
    %426 = @func_2976() /* ty=(Tensor[(8, 10, 12), float32],) */;
    %427 = %426.0;
    %428 = cast(%427, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
    %429 = cast(%var_3011, dtype="int32") /* ty=int32 */;
    %430 = reshape(%429, newshape=[]) /* ty=int32 */;
    %431 = @func_2830(%430) /* ty=(Tensor[(12, 3, 9), bool],) */;
    %432 = %431.0;
    %433 = cast(%var_3011, dtype="int16") /* ty=int16 */;
    %434 = cast(%432, dtype="int16") /* ty=Tensor[(12, 3, 9), int16] */;
    %435 = cast(%432, dtype="float32") /* ty=Tensor[(12, 3, 9), float32] */;
    %436 = cast(%var_3011, dtype="int32") /* ty=int32 */;
    %437 = reshape(%436, newshape=[]) /* ty=int32 */;
    %438 = @func_2830(%437) /* ty=(Tensor[(12, 3, 9), bool],) */;
    %439 = log10(%428) /* ty=Tensor[(8, 10, 12), float32] */;
    %440 = minimum(%433, %434) /* ty=Tensor[(12, 3, 9), int16] */;
    %441 = atan(%435) /* ty=Tensor[(12, 3, 9), float32] */;
    %442 = %438.0;
    (%439, %440, %441, %442)
  };
  %443(%var_3040) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(12, 3, 9), int16], Tensor[(12, 3, 9), float32], Tensor[(12, 3, 9), bool]) */
}

def @func_6899() -> (float32, Tensor[(14, 1, 15), float32]) {
  %448 = fn () -> (float32, Tensor[(14, 1, 15), float32]) {
    %444 = @func_3559() /* ty=(float32,) */;
    %445 = @func_2649() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %446 = %444.0;
    %447 = %445.0;
    (%446, %447)
  };
  %448() /* ty=(float32, Tensor[(14, 1, 15), float32]) */
}

def @func_4726(%var_4724: Tensor[(14, 5, 16), float32]) -> Tensor[(14, 5, 16), float64] {
  @func_4723(%var_4724) /* ty=Tensor[(14, 5, 16), float64] */
}

def @func_4932() -> (Tensor[(8, 10, 12), float32],) {
  @func_4930() /* ty=(Tensor[(8, 10, 12), float32],) */
}

def @func_7890(%var_7888: Tensor[(130), int16]) -> (Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32]) {
  @func_7887(%var_7888) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32]) */
}

def @func_6370() -> (Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  %449 = @func_4384() /* ty=(Tensor[(8, 10, 12), float64], Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(10, 16, 6), float64]) */;
  %450 = @func_4893() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
  %451 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  %452 = %449.1;
  %453 = %450.1;
  (%451, %452, %453)
}

def @func_2807(%var_2805: Tensor[(130), int16]) -> (Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) {
  @func_2804(%var_2805) /* ty=(Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) */
}

def @func_8538() -> (Tensor[(210), float32],) {
  @func_8536() /* ty=(Tensor[(210), float32],) */
}

def @func_6497() -> float32 {
  @func_4240() /* ty=float32 */
}

def @func_3991() -> (Tensor[(8, 10, 12), uint32],) {
  %461 = fn () -> (Tensor[(8, 10, 12), uint32],) {
    %454 = @func_2469() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
    %455 = %454.0;
    %456 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 10, 12), float32] */, dtype="uint32") /* ty=Tensor[(8, 10, 12), uint32] */;
    %457 = shape_of(%455, dtype="int32") /* ty=Tensor[(3), int32] */;
    %458 = cast(%455, dtype="uint32") /* ty=Tensor[(8, 10, 12), uint32] */;
    %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %460 = left_shift(%458, %459) /* ty=Tensor[(8, 10, 12), uint32] */;
    (%460,)
  };
  %461() /* ty=(Tensor[(8, 10, 12), uint32],) */
}

def @func_4422() -> (Tensor[(8, 10, 12), float32], Tensor[(1008), float64]) {
  %462 = @func_2617() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) */;
  %463 = %462.0;
  %464 = cast(%463, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %465 = @func_2289() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(16, 8, 9), float32], Tensor[(1008), float64]) */;
  %466 = acos(%464) /* ty=Tensor[(8, 10, 12), float32] */;
  %467 = %465.2;
  (%466, %467)
}

def @func_2876() -> (Tensor[(14, 1, 15), float32],) {
  @func_2874() /* ty=(Tensor[(14, 1, 15), float32],) */
}

def @func_8487(%var_8485: Tensor[(11, 1, 6), float32], %var_8486: Tensor[(11, 8, 6), float32]) -> Tensor[(11, 8, 6), float32] {
  @func_8483(%var_8485, %var_8486) /* ty=Tensor[(11, 8, 6), float32] */
}

def @func_7382(%var_7381: Tensor[(13, 11, 14), float64]) -> (Tensor[(13, 11, 14), float64],) {
  %470 = fn (%var_7352: Tensor[(13, 11, 14), float64]) -> (Tensor[(13, 11, 14), float64],) {
    %468 = cast(%var_7352, dtype="float64") /* ty=Tensor[(13, 11, 14), float64] */;
    %469 = tan(%468) /* ty=Tensor[(13, 11, 14), float64] */;
    (%469,)
  };
  %470(%var_7381) /* ty=(Tensor[(13, 11, 14), float64],) */
}

def @func_8157() -> (Tensor[(8, 10, 12), float32],) {
  %472 = fn () -> (Tensor[(8, 10, 12), float32],) {
    %471 = @func_6001() /* ty=Tensor[(8, 10, 12), float32] */;
    (%471,)
  };
  %472() /* ty=(Tensor[(8, 10, 12), float32],) */
}

def @func_5425() -> (Tensor[(130), int16], float32) {
  %473 = @func_4384() /* ty=(Tensor[(8, 10, 12), float64], Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(10, 16, 6), float64]) */;
  %474 = %473.4;
  %475 = @func_4240() /* ty=float32 */;
  (%474, %475)
}

def @func_7657(%var_7639: Tensor[(1, 33), float32]) -> (Tensor[(8, 10, 12), uint16], Tensor[(1, 33), float32], Tensor[(1296), float32]) {
  %476 = @func_6089() /* ty=(Tensor[(8, 10, 12), uint16],) */;
  %477 = cast(%var_7639, dtype="float32") /* ty=Tensor[(1, 33), float32] */;
  %478 = reshape(%477, newshape=[3, 11, 1]) /* ty=Tensor[(3, 11, 1), float32] */;
  %479 = @func_3220(%478) /* ty=(Tensor[(3, 11, 1), float32], Tensor[(16, 9, 9), bool], Tensor[(1296), float64]) */;
  %480 = %479.2;
  %481 = cast(%480, dtype="float64") /* ty=Tensor[(1296), float64] */;
  %482 = log2(%481) /* ty=Tensor[(1296), float64] */;
  %483 = cast(%482, dtype="float32") /* ty=Tensor[(1296), float32] */;
  %484 = %476.0;
  %485 = atan(%483) /* ty=Tensor[(1296), float32] */;
  (%484, %var_7639, %485)
}

def @func_7176(%var_7174: float64, %var_7175: Tensor[(12, 5, 2), float64]) -> (Tensor[(12, 5, 2), bool],) {
  @func_7172(%var_7174, %var_7175) /* ty=(Tensor[(12, 5, 2), bool],) */
}

def @func_7281(%var_7279: Tensor[(1, 10, 14), float64], %var_7280: Tensor[(15, 10, 14), float64]) -> (Tensor[(15, 10, 14), float64], Tensor[(14, 1, 15), float32], Tensor[(210), float32], Tensor[(14, 1, 15), float32]) {
  @func_7277(%var_7279, %var_7280) /* ty=(Tensor[(15, 10, 14), float64], Tensor[(14, 1, 15), float32], Tensor[(210), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_6001() -> Tensor[(8, 10, 12), float32] {
  %486 = @func_4969() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %486.0
}

def @func_2107(%var_2104: Tensor[(390), int32], %var_2105: Tensor[(16, 9, 9), bool], %var_2106: Tensor[(130, 1), int16]) -> (Tensor[(8, 10, 12), float32], Tensor[(390), int32], Tensor[(16, 9, 9), float32], Tensor[(16, 8, 9), float32], Tensor[(10, 16, 6), float64], Tensor[(8, 10, 12), float32], Tensor[(13, 10, 4), float64], Tensor[(130, 4), int16], Tensor[(130, 9), float64], Tensor[(10, 16, 6), float64], Tensor[(16, 9, 9), bool], Tensor[(10, 16, 6), float64], Tensor[(130, 1), float32], Tensor[(1152), bool], Tensor[(8, 10, 12), uint16]) {
  %544 = fn (%var_2021: Tensor[(390), int32], %var_2024: Tensor[(16, 9, 9), bool], %var_2059: Tensor[(130, 1), int16]) -> (Tensor[(8, 10, 12), float32], Tensor[(390), int32], Tensor[(16, 9, 9), float32], Tensor[(16, 8, 9), float32], Tensor[(10, 16, 6), float64], Tensor[(8, 10, 12), float32], Tensor[(13, 10, 4), float64], Tensor[(130, 4), int16], Tensor[(130, 9), float64], Tensor[(10, 16, 6), float64], Tensor[(16, 9, 9), bool], Tensor[(10, 16, 6), float64], Tensor[(130, 1), float32], Tensor[(1152), bool], Tensor[(8, 10, 12), uint16]) {
    %487 = cast(%var_2021, dtype="int32") /* ty=Tensor[(390), int32] */;
    %488 = cast(meta[relay.Constant][28] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %489 = reshape(%487, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), int32] */;
    %490 = reshape(%488, newshape=[576, 2]) /* ty=Tensor[(576, 2), float32] */;
    %491 = @func_1476(%489, %490) /* ty=(Tensor[(10, 13, 3), bool], Tensor[(16, 8, 9), float32], Tensor[(576, 2), float32], Tensor[(16, 8, 9), float32], Tensor[(16, 9, 9), bool], Tensor[(1, 1296), float64], Tensor[(10, 13, 3), float64]) */;
    %492 = %491.4;
    %493 = cast(%var_2024, dtype="float32") /* ty=Tensor[(16, 9, 9), float32] */;
    %494 = shape_of(%492, dtype="int32") /* ty=Tensor[(3), int32] */;
    %495 = cast(%492, dtype="float32") /* ty=Tensor[(16, 9, 9), float32] */;
    %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %497 = cast(%var_2021, dtype="int32") /* ty=Tensor[(390), int32] */;
    %498 = cast(meta[relay.Constant][28] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %499 = reshape(%497, newshape=[10, 13, 3]) /* ty=Tensor[(10, 13, 3), int32] */;
    %500 = reshape(%498, newshape=[576, 2]) /* ty=Tensor[(576, 2), float32] */;
    %501 = @func_1476(%499, %500) /* ty=(Tensor[(10, 13, 3), bool], Tensor[(16, 8, 9), float32], Tensor[(576, 2), float32], Tensor[(16, 8, 9), float32], Tensor[(16, 9, 9), bool], Tensor[(1, 1296), float64], Tensor[(10, 13, 3), float64]) */;
    %502 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
    %503 = cast(%502, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
    %504 = reshape(%503, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float32] */;
    %505 = @func_1552(%504) /* ty=(Tensor[(10, 16, 6), float64],) */;
    %506 = cast(%var_2059, dtype="int16") /* ty=Tensor[(130, 1), int16] */;
    %507 = cast(meta[relay.Constant][29] /* ty=Tensor[(130, 4), int16] */, dtype="int16") /* ty=Tensor[(130, 4), int16] */;
    %508 = reshape(%506, newshape=[13, 10, 1]) /* ty=Tensor[(13, 10, 1), int16] */;
    %509 = reshape(%507, newshape=[13, 10, 4]) /* ty=Tensor[(13, 10, 4), int16] */;
    %510 = @func_1931(%508, %509) /* ty=(Tensor[(13, 10, 4), int16], Tensor[(13, 10, 4), float64], Tensor[(8, 10, 12), uint16]) */;
    %511 = cast(%var_2059, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
    %512 = cast(meta[relay.Constant][30] /* ty=Tensor[(130, 9), int16] */, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
    %513 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
    %514 = cast(%513, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
    %515 = reshape(%514, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float32] */;
    %516 = @func_1552(%515) /* ty=(Tensor[(10, 16, 6), float64],) */;
    %517 = cast(%var_2024, dtype="float64") /* ty=Tensor[(16, 9, 9), float64] */;
    %518 = reshape(%517, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), float64] */;
    %519 = @func_308(%518) /* ty=(Tensor[(16, 9, 9), bool],) */;
    %520 = %505.0;
    %521 = cast(%520, dtype="float32") /* ty=Tensor[(10, 16, 6), float32] */;
    %522 = reshape(%521, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float32] */;
    %523 = @func_1552(%522) /* ty=(Tensor[(10, 16, 6), float64],) */;
    %524 = cast(%var_2059, dtype="float32") /* ty=Tensor[(130, 1), float32] */;
    %525 = cast(meta[relay.Constant][28] /* ty=Tensor[(1152), float32] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %526 = atanh(%525) /* ty=Tensor[(1152), float64] */;
    %527 = cast(meta[relay.Constant][31] /* ty=Tensor[(1152), float64] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
    %528 = shape_of(%526, dtype="int32") /* ty=Tensor[(1), int32] */;
    %529 = cast(%526, dtype="bool") /* ty=Tensor[(1152), bool] */;
    %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?), bool] */;
    %531 = cast(meta[relay.Constant][28] /* ty=Tensor[(1152), float32] */, dtype="float64") /* ty=Tensor[(1152), float64] */;
    %532 = reshape(%531, newshape=[9, 8, 16]) /* ty=Tensor[(9, 8, 16), float64] */;
    %533 = @func_1971(%532) /* ty=(Tensor[(9, 8, 16), float64], Tensor[(8, 10, 12), uint16]) */;
    %534 = divide(%495, %496) /* ty=Tensor[(16, 9, 9), float32] */;
    %535 = %501.1;
    %536 = %510.1;
    %537 = mod(%511, %512) /* ty=Tensor[(130, 9), float64] */;
    %538 = %516.0;
    %539 = %519.0;
    %540 = %523.0;
    %541 = asin(%524) /* ty=Tensor[(130, 1), float32] */;
    %542 = logical_and(%529, %530) /* ty=Tensor[(1152), bool] */;
    %543 = %533.1;
    (%502, %var_2021, %534, %535, %520, %513, %536, meta[relay.Constant][29] /* ty=Tensor[(130, 4), int16] */, %537, %538, %539, %540, %541, %542, %543)
  };
  %544(%var_2104, %var_2105, %var_2106) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(390), int32], Tensor[(16, 9, 9), float32], Tensor[(16, 8, 9), float32], Tensor[(10, 16, 6), float64], Tensor[(8, 10, 12), float32], Tensor[(13, 10, 4), float64], Tensor[(130, 4), int16], Tensor[(130, 9), float64], Tensor[(10, 16, 6), float64], Tensor[(16, 9, 9), bool], Tensor[(10, 16, 6), float64], Tensor[(130, 1), float32], Tensor[(1152), bool], Tensor[(8, 10, 12), uint16]) */
}

def @func_5561() -> Tensor[(9, 13, 5), float32] {
  %546 = fn () -> Tensor[(9, 13, 5), float32] {
    %545 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 13, 5), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
    sqrt(%545) /* ty=Tensor[(9, 13, 5), float32] */
  };
  %546() /* ty=Tensor[(9, 13, 5), float32] */
}

def @func_7925(%var_7923: Tensor[(2, 11, 2), int32], %var_7924: uint16) -> (Tensor[(2, 11, 2), int32], Tensor[(1008), float64], uint16, Tensor[(360), uint16], Tensor[(1008), float64], Tensor[(525), uint16], Tensor[(2, 11, 2), float32]) {
  @func_7921(%var_7923, %var_7924) /* ty=(Tensor[(2, 11, 2), int32], Tensor[(1008), float64], uint16, Tensor[(360), uint16], Tensor[(1008), float64], Tensor[(525), uint16], Tensor[(2, 11, 2), float32]) */
}

def @func_5757() -> (Tensor[(8, 10, 12), float32], Tensor[(360), uint64], Tensor[(10, 9, 4), float32]) {
  @func_5755() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(360), uint64], Tensor[(10, 9, 4), float32]) */
}

def @func_4102() -> Tensor[(14, 1, 15), float32] {
  @func_4100() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_4384() -> (Tensor[(8, 10, 12), float64], Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(10, 16, 6), float64]) {
  %547 = @func_1940() /* ty=Tensor[(8, 10, 12), uint16] */;
  %548 = cast(%547, dtype="float64") /* ty=Tensor[(8, 10, 12), float64] */;
  %549 = @func_2649() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %550 = cast(meta[relay.Constant][33] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %551 = reshape(%550, newshape=[130, 1]) /* ty=Tensor[(130, 1), int16] */;
  %552 = @func_3812(%551) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(13, 10, 4), int16], Tensor[(130, 1), int16], Tensor[(520), int16], Tensor[(15, 16, 1), float32]) */;
  %553 = rsqrt(%548) /* ty=Tensor[(8, 10, 12), float64] */;
  %554 = cast(%553, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %555 = reshape(%554, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float32] */;
  %556 = @func_1552(%555) /* ty=(Tensor[(10, 16, 6), float64],) */;
  %557 = %549.0;
  %558 = @func_3571() /* ty=Tensor[(8, 10, 12), float32] */;
  %559 = %552.4;
  %560 = %556.0;
  (%553, %557, %558, %559, meta[relay.Constant][33] /* ty=Tensor[(130), int16] */, %560)
}

def @func_6065(%var_6048: Tensor[(8, 10, 12), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32]) {
  %561 = @func_2874() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %562 = @func_5078() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %563 = %562.0;
  %564 = cast(%var_6048, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %565 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%563, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %568 = %561.0;
  %569 = power(%566, %567) /* ty=Tensor[(8, 10, 12), float32] */;
  (%568, %569)
}

def @func_7687() -> (Tensor[(5, 14, 5), float32],) {
  @func_7685() /* ty=(Tensor[(5, 14, 5), float32],) */
}

def @func_4499(%var_4492: Tensor[(10, 9, 4), uint64], %var_4493: Tensor[(10, 9, 4), uint64]) -> Tensor[(10, 9, 4), bool] {
  %570 = cast(%var_4493, dtype="bool") /* ty=Tensor[(10, 9, 4), bool] */;
  %571 = shape_of(%var_4492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%var_4492, dtype="bool") /* ty=Tensor[(10, 9, 4), bool] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%572, %573) /* ty=Tensor[(10, 9, 4), bool] */
}

def @func_6935() -> (Tensor[(14, 1, 15), float32], float32) {
  %577 = fn () -> (Tensor[(14, 1, 15), float32], float32) {
    %574 = @func_6898() /* ty=(float32, Tensor[(14, 1, 15), float32]) */;
    %575 = %574.1;
    %576 = @func_5678() /* ty=float32 */;
    (%575, %576)
  };
  %577() /* ty=(Tensor[(14, 1, 15), float32], float32) */
}

def @func_3222(%var_3221: Tensor[(3, 11, 1), float32]) -> (Tensor[(3, 11, 1), float32], Tensor[(16, 9, 9), bool], Tensor[(1296), float64]) {
  %584 = fn (%var_3203: Tensor[(3, 11, 1), float32]) -> (Tensor[(3, 11, 1), float32], Tensor[(16, 9, 9), bool], Tensor[(1296), float64]) {
    %578 = cast(%var_3203, dtype="float32") /* ty=Tensor[(3, 11, 1), float32] */;
    %579 = cast(meta[relay.Constant][34] /* ty=Tensor[(1296), float64] */, dtype="float64") /* ty=Tensor[(1296), float64] */;
    %580 = reshape(%579, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), float64] */;
    %581 = @func_308(%580) /* ty=(Tensor[(16, 9, 9), bool],) */;
    %582 = exp(%578) /* ty=Tensor[(3, 11, 1), float32] */;
    %583 = %581.0;
    (%582, %583, meta[relay.Constant][34] /* ty=Tensor[(1296), float64] */)
  };
  %584(%var_3221) /* ty=(Tensor[(3, 11, 1), float32], Tensor[(16, 9, 9), bool], Tensor[(1296), float64]) */
}

def @func_3429() -> (Tensor[(130), int16], Tensor[(14, 130, 15), uint64], Tensor[(14, 1, 15), float32]) {
  %596 = fn () -> (Tensor[(130), int16], Tensor[(14, 130, 15), uint64], Tensor[(14, 1, 15), float32]) {
    %585 = cast(meta[relay.Constant][35] /* ty=Tensor[(130, 1), int16] */, dtype="int16") /* ty=Tensor[(130, 1), int16] */;
    %586 = reshape(%585, newshape=[130]) /* ty=Tensor[(130), int16] */;
    %587 = @func_2804(%586) /* ty=(Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) */;
    %588 = @func_2874() /* ty=(Tensor[(14, 1, 15), float32],) */;
    %589 = %588.0;
    %590 = cast(%589, dtype="uint64") /* ty=Tensor[(14, 1, 15), uint64] */;
    %591 = cast(meta[relay.Constant][35] /* ty=Tensor[(130, 1), int16] */, dtype="uint64") /* ty=Tensor[(130, 1), uint64] */;
    %592 = cast(%589, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
    %593 = %587.2;
    %594 = bitwise_or(%590, %591) /* ty=Tensor[(14, 130, 15), uint64] */;
    %595 = acosh(%592) /* ty=Tensor[(14, 1, 15), float32] */;
    (%593, %594, %595)
  };
  %596() /* ty=(Tensor[(130), int16], Tensor[(14, 130, 15), uint64], Tensor[(14, 1, 15), float32]) */
}

def @func_6372() -> (Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) {
  @func_6370() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(14, 1, 15), float32]) */
}

def @func_7559(%var_7558: Tensor[(14, 5, 15), float32]) -> (Tensor[(14, 5, 15), int32], Tensor[(8, 10, 12), uint16]) {
  %603 = fn (%var_7543: Tensor[(14, 5, 15), float32]) -> (Tensor[(14, 5, 15), int32], Tensor[(8, 10, 12), uint16]) {
    %597 = @func_5089() /* ty=Tensor[(14, 1, 15), float32] */;
    %598 = cast(%597, dtype="int32") /* ty=Tensor[(14, 1, 15), int32] */;
    %599 = cast(%var_7543, dtype="int32") /* ty=Tensor[(14, 5, 15), int32] */;
    %600 = @func_2289() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(16, 8, 9), float32], Tensor[(1008), float64]) */;
    %601 = bitwise_xor(%598, %599) /* ty=Tensor[(14, 5, 15), int32] */;
    %602 = %600.0;
    (%601, %602)
  };
  %603(%var_7558) /* ty=(Tensor[(14, 5, 15), int32], Tensor[(8, 10, 12), uint16]) */
}

def @func_2121() -> Tensor[(8, 10, 12), uint16] {
  %604 = fn () -> Tensor[(8, 10, 12), uint16] {
    @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */
  };
  %604() /* ty=Tensor[(8, 10, 12), uint16] */
}

def @func_4486() -> (Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16]) {
  %605 = @func_2976() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %606 = @func_2356() /* ty=(Tensor[(8, 10, 12), uint16],) */;
  %607 = %605.0;
  %608 = %606.0;
  (%607, %608)
}

def @func_4614() -> (Tensor[(8, 10, 12), float32],) {
  %610 = fn () -> (Tensor[(8, 10, 12), float32],) {
    %609 = @func_3571() /* ty=Tensor[(8, 10, 12), float32] */;
    (%609,)
  };
  %610() /* ty=(Tensor[(8, 10, 12), float32],) */
}

def @func_7685() -> (Tensor[(5, 14, 5), float32],) {
  %611 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 14, 5), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 5), float64] */;
  %612 = exp(%611) /* ty=Tensor[(5, 14, 5), float64] */;
  %613 = cast(%612, dtype="float32") /* ty=Tensor[(5, 14, 5), float32] */;
  %614 = atanh(%613) /* ty=Tensor[(5, 14, 5), float32] */;
  (%614,)
}

def @func_8026() -> (Tensor[(5, 14, 9), float32], float32, Tensor[(8, 10, 12), float32], float32, Tensor[(8, 10, 12), float32]) {
  %615 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 14, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 14, 9), float32] */;
  %616 = @func_2469() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
  %617 = %616.0;
  %618 = cast(%617, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %619 = reshape(%618, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), float32] */;
  %620 = @func_5172(%619) /* ty=(Tensor[(8, 10, 12), float32],) */;
  %621 = asinh(%615) /* ty=Tensor[(5, 14, 9), float32] */;
  %622 = @func_6497() /* ty=float32 */;
  %623 = @func_4240() /* ty=float32 */;
  %624 = %620.0;
  (%621, %622, %617, %623, %624)
}

def @func_4693() -> (Tensor[(1008), float64], Tensor[(520), float64], Tensor[(130), int16], Tensor[(14, 1, 15), float32]) {
  %625 = @func_4422() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(1008), float64]) */;
  %626 = cast(meta[relay.Constant][38] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
  %627 = reshape(%626, newshape=[130]) /* ty=Tensor[(130), int16] */;
  %628 = @func_2804(%627) /* ty=(Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) */;
  %629 = @func_2874() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %630 = %629.0;
  %631 = cast(%630, dtype="float32") /* ty=Tensor[(14, 1, 15), float32] */;
  %632 = %625.1;
  %633 = %628.6;
  %634 = erf(%631) /* ty=Tensor[(14, 1, 15), float32] */;
  (%632, %633, meta[relay.Constant][38] /* ty=Tensor[(130), int16] */, %634)
}

def @func_5894() -> (Tensor[(130), int16],) {
  %637 = fn () -> (Tensor[(130), int16],) {
    %635 = @func_4384() /* ty=(Tensor[(8, 10, 12), float64], Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(10, 16, 6), float64]) */;
    %636 = %635.4;
    (%636,)
  };
  %637() /* ty=(Tensor[(130), int16],) */
}

def @func_3278(%var_3276: Tensor[(9, 2, 12), float32]) -> (Tensor[(9, 2, 12), float32],) {
  @func_3275(%var_3276) /* ty=(Tensor[(9, 2, 12), float32],) */
}

def @func_3679() -> Tensor[(210), float32] {
  @func_3677() /* ty=Tensor[(210), float32] */
}

def @func_6003() -> Tensor[(8, 10, 12), float32] {
  @func_6001() /* ty=Tensor[(8, 10, 12), float32] */
}

def @func_6068(%var_6066: Tensor[(8, 10, 12), float32]) -> (Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32]) {
  @func_6065(%var_6066) /* ty=(Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32]) */
}

def @func_8277() -> (Tensor[(7, 11, 5), float32], Tensor[(8, 10, 12), float32], Tensor[(960), float32]) {
  @func_8275() /* ty=(Tensor[(7, 11, 5), float32], Tensor[(8, 10, 12), float32], Tensor[(960), float32]) */
}

def @func_8604() -> Tensor[(14, 1, 15), float64] {
  %640 = fn () -> Tensor[(14, 1, 15), float64] {
    %638 = @func_5089() /* ty=Tensor[(14, 1, 15), float32] */;
    %639 = cast(%638, dtype="float64") /* ty=Tensor[(14, 1, 15), float64] */;
    exp(%639) /* ty=Tensor[(14, 1, 15), float64] */
  };
  %640() /* ty=Tensor[(14, 1, 15), float64] */
}

def @func_3949(%var_3947: Tensor[(390), int32], %var_3948: Tensor[(6, 216), bool]) -> (Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32], Tensor[(130, 1), float32], Tensor[(390), int32], Tensor[(6, 216), bool], Tensor[(130), int16], Tensor[(14, 1, 15), float32]) {
  %657 = fn (%var_3936: Tensor[(390), int32], %var_3937: Tensor[(6, 216), bool]) -> (Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32], Tensor[(130, 1), float32], Tensor[(390), int32], Tensor[(6, 216), bool], Tensor[(130), int16], Tensor[(14, 1, 15), float32]) {
    %641 = @func_2976() /* ty=(Tensor[(8, 10, 12), float32],) */;
    %642 = cast(meta[relay.Constant][39] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
    %643 = reshape(%642, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), float32] */;
    %644 = @func_2323(%643) /* ty=(Tensor[(14, 1, 15), float32],) */;
    %645 = cast(%var_3936, dtype="int32") /* ty=Tensor[(390), int32] */;
    %646 = cast(%var_3937, dtype="bool") /* ty=Tensor[(6, 216), bool] */;
    %647 = cast(meta[relay.Constant][40] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
    %648 = reshape(%645, newshape=[390]) /* ty=Tensor[(390), int32] */;
    %649 = reshape(%646, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), bool] */;
    %650 = reshape(%647, newshape=[130, 1]) /* ty=Tensor[(130, 1), int16] */;
    %651 = @func_2103(%648, %649, %650) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(390), int32], Tensor[(16, 9, 9), float32], Tensor[(16, 8, 9), float32], Tensor[(10, 16, 6), float64], Tensor[(8, 10, 12), float32], Tensor[(13, 10, 4), float64], Tensor[(130, 4), int16], Tensor[(130, 9), float64], Tensor[(10, 16, 6), float64], Tensor[(16, 9, 9), bool], Tensor[(10, 16, 6), float64], Tensor[(130, 1), float32], Tensor[(1152), bool], Tensor[(8, 10, 12), uint16]) */;
    %652 = @func_2469() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
    %653 = %641.0;
    %654 = %644.0;
    %655 = %651.12;
    %656 = %652.1;
    (%653, %654, meta[relay.Constant][39] /* ty=Tensor[(210), float32] */, %655, %var_3936, %var_3937, meta[relay.Constant][40] /* ty=Tensor[(130), int16] */, %656)
  };
  %657(%var_3947, %var_3948) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32], Tensor[(130, 1), float32], Tensor[(390), int32], Tensor[(6, 216), bool], Tensor[(130), int16], Tensor[(14, 1, 15), float32]) */
}

def @func_6448(%var_6446: uint16, %var_6447: Tensor[(15, 8, 3), uint16]) -> (Tensor[(15, 8, 3), uint16], Tensor[(1008), float64], Tensor[(130), int16]) {
  %665 = fn (%var_6386: uint16, %var_6387: Tensor[(15, 8, 3), uint16]) -> (Tensor[(15, 8, 3), uint16], Tensor[(1008), float64], Tensor[(130), int16]) {
    %658 = cast(%var_6386, dtype="uint16") /* ty=uint16 */;
    %659 = cast(%var_6387, dtype="uint16") /* ty=Tensor[(15, 8, 3), uint16] */;
    %660 = cast(meta[relay.Constant][41] /* ty=Tensor[(130), int16] */, dtype="int16") /* ty=Tensor[(130), int16] */;
    %661 = reshape(%660, newshape=[130]) /* ty=Tensor[(130), int16] */;
    %662 = @func_2804(%661) /* ty=(Tensor[(1008), float64], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), bool], Tensor[(520), float64]) */;
    %663 = logical_xor(%658, %659) /* ty=Tensor[(15, 8, 3), uint16] */;
    %664 = %662.0;
    (%663, %664, meta[relay.Constant][41] /* ty=Tensor[(130), int16] */)
  };
  %665(%var_6446, %var_6447) /* ty=(Tensor[(15, 8, 3), uint16], Tensor[(1008), float64], Tensor[(130), int16]) */
}

def @func_8127() -> (Tensor[(14, 1, 15), float32], Tensor[(14, 390, 15), int32], Tensor[(525), uint16], Tensor[(1008), float64], Tensor[(195, 2), int32]) {
  %666 = cast(meta[relay.Constant][42] /* ty=Tensor[(525), uint16] */, dtype="uint16") /* ty=Tensor[(525), uint16] */;
  %667 = cast(meta[relay.Constant][43] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %668 = cast(meta[relay.Constant][44] /* ty=Tensor[(195, 2), int32] */, dtype="int32") /* ty=Tensor[(195, 2), int32] */;
  %669 = reshape(%666, newshape=[525]) /* ty=Tensor[(525), uint16] */;
  %670 = reshape(%667, newshape=[1008]) /* ty=Tensor[(1008), float64] */;
  %671 = reshape(%668, newshape=[390, 1]) /* ty=Tensor[(390, 1), int32] */;
  %672 = @func_7343(%669, %670, %671) /* ty=(Tensor[(210), float32], Tensor[(8, 10, 12), float32], Tensor[(525), uint16], Tensor[(1008), float64], Tensor[(1296), bool], Tensor[(14, 390, 15), int32]) */;
  %673 = @func_5089() /* ty=Tensor[(14, 1, 15), float32] */;
  %674 = %672.5;
  (%673, %674, meta[relay.Constant][42] /* ty=Tensor[(525), uint16] */, meta[relay.Constant][43] /* ty=Tensor[(1008), float64] */, meta[relay.Constant][44] /* ty=Tensor[(195, 2), int32] */)
}

def @func_3559() -> (float32,) {
  %675 = @func_2617() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) */;
  %676 = %675.2;
  (%676,)
}

def @func_6166() -> Tensor[(14, 1, 15), float64] {
  @func_6164() /* ty=Tensor[(14, 1, 15), float64] */
}

def @func_1552(%var_1525: Tensor[(10, 16, 6), float32]) -> (Tensor[(10, 16, 6), float64],) {
  %677 = cast(%var_1525, dtype="float32") /* ty=Tensor[(10, 16, 6), float32] */;
  %678 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(10, 16, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(meta[relay.Constant][45] /* ty=Tensor[(10, 16, 6), float32] */, dtype="float32") /* ty=Tensor[(10, 16, 6), float32] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %681 = divide(%679, %680) /* ty=Tensor[(10, 16, 6), float32] */;
  %682 = cast(%var_1525, dtype="float64") /* ty=Tensor[(10, 16, 6), float64] */;
  %683 = shape_of(%681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%681, dtype="float64") /* ty=Tensor[(10, 16, 6), float64] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %686 = mod(%684, %685) /* ty=Tensor[(10, 16, 6), float64] */;
  (%686,)
}

def @func_4816() -> (Tensor[(10, 8, 8), float64],) {
  %689 = fn () -> (Tensor[(10, 8, 8), float64],) {
    %687 = cast(meta[relay.Constant][46] /* ty=Tensor[(10, 8, 8), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 8), float64] */;
    %688 = cosh(%687) /* ty=Tensor[(10, 8, 8), float64] */;
    (%688,)
  };
  %689() /* ty=(Tensor[(10, 8, 8), float64],) */
}

def @func_4895() -> (Tensor[(8, 10, 12), uint16], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) {
  @func_4893() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */
}

def @func_7587() -> (Tensor[(10, 8, 8), float32],) {
  %690 = @func_4841() /* ty=Tensor[(10, 8, 8), float64] */;
  %691 = cast(%690, dtype="float32") /* ty=Tensor[(10, 8, 8), float32] */;
  %692 = rsqrt(%691) /* ty=Tensor[(10, 8, 8), float32] */;
  (%692,)
}

def @func_4488() -> (Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16]) {
  @func_4486() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint16]) */
}

def @func_4841() -> Tensor[(10, 8, 8), float64] {
  %693 = @func_4815() /* ty=(Tensor[(10, 8, 8), float64],) */;
  %693.0
}

def @func_5089() -> Tensor[(14, 1, 15), float32] {
  @func_4100() /* ty=Tensor[(14, 1, 15), float32] */
}

def @func_4209(%var_4136: Tensor[(15, 7, 5), uint16], %var_4192: Tensor[(1008), float64]) -> (Tensor[(15, 7, 5), float64], Tensor[(14, 1, 15), float32], Tensor[(15, 7, 5), int16], Tensor[(14, 8, 9), float64], Tensor[(1008), float64], Tensor[(8, 10, 12), float32]) {
  %694 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 7, 5), uint16] */, dtype="float64") /* ty=Tensor[(15, 7, 5), float64] */;
  %695 = cast(%var_4136, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
  %696 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(15, 7, 5), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 7, 5), uint16] */, dtype="bool") /* ty=Tensor[(15, 7, 5), bool] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %699 = greater_equal(%697, %698) /* ty=Tensor[(15, 7, 5), bool] */;
  %700 = cast(%var_4136, dtype="int16") /* ty=Tensor[(15, 7, 5), int16] */;
  %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%699, dtype="int16") /* ty=Tensor[(15, 7, 5), int16] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %704 = cast(%var_4192, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %705 = reshape(%704, newshape=[14, 8, 9]) /* ty=Tensor[(14, 8, 9), float64] */;
  %706 = @func_1167(%705) /* ty=(Tensor[(14, 8, 9), float64], Tensor[(16, 8, 9), float32], Tensor[(1152), float32]) */;
  %707 = log(%694) /* ty=Tensor[(15, 7, 5), float64] */;
  %708 = @func_4100() /* ty=Tensor[(14, 1, 15), float32] */;
  %709 = bitwise_or(%702, %703) /* ty=Tensor[(15, 7, 5), int16] */;
  %710 = %706.0;
  %711 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  (%707, %708, %709, %710, %var_4192, %711)
}

def @func_8524() -> (Tensor[(960), float32],) {
  %714 = fn () -> (Tensor[(960), float32],) {
    %712 = @func_8275() /* ty=(Tensor[(7, 11, 5), float32], Tensor[(8, 10, 12), float32], Tensor[(960), float32]) */;
    %713 = %712.2;
    (%713,)
  };
  %714() /* ty=(Tensor[(960), float32],) */
}

def @func_3475(%var_3474: Tensor[(8, 10, 12), float32]) -> (Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), bool]) {
  %725 = fn (%var_3462: Tensor[(8, 10, 12), float32]) -> (Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), bool]) {
    %715 = @func_2120() /* ty=Tensor[(8, 10, 12), uint16] */;
    %716 = cast(%715, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
    %717 = @func_2976() /* ty=(Tensor[(8, 10, 12), float32],) */;
    %718 = %717.0;
    %719 = cast(%var_3462, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
    %720 = shape_of(%718, dtype="int32") /* ty=Tensor[(3), int32] */;
    %721 = cast(%718, dtype="bool") /* ty=Tensor[(8, 10, 12), bool] */;
    %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %723 = cos(%716) /* ty=Tensor[(8, 10, 12), float32] */;
    %724 = logical_and(%721, %722) /* ty=Tensor[(8, 10, 12), bool] */;
    (%723, %724)
  };
  %725(%var_3474) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), bool]) */
}

def @func_5602(%var_5599: float64, %var_5600: Tensor[(14, 6, 5), float64], %var_5601: Tensor[(960), float32]) -> (Tensor[(14, 6, 5), float64], Tensor[(8, 10, 12), float32], Tensor[(960), float32]) {
  @func_5597(%var_5599, %var_5600, %var_5601) /* ty=(Tensor[(14, 6, 5), float64], Tensor[(8, 10, 12), float32], Tensor[(960), float32]) */
}

def @func_5755() -> (Tensor[(8, 10, 12), float32], Tensor[(360), uint64], Tensor[(10, 9, 4), float32]) {
  %726 = cast(meta[relay.Constant][48] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %727 = cast(meta[relay.Constant][48] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %728 = reshape(%726, newshape=[10, 9, 4]) /* ty=Tensor[(10, 9, 4), uint64] */;
  %729 = reshape(%727, newshape=[10, 9, 4]) /* ty=Tensor[(10, 9, 4), uint64] */;
  %730 = @func_4499(%728, %729) /* ty=Tensor[(10, 9, 4), bool] */;
  %731 = cast(%730, dtype="float32") /* ty=Tensor[(10, 9, 4), float32] */;
  %732 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  %733 = asin(%731) /* ty=Tensor[(10, 9, 4), float32] */;
  (%732, meta[relay.Constant][48] /* ty=Tensor[(360), uint64] */, %733)
}

def @func_6203() -> Tensor[(210), float32] {
  %735 = fn () -> Tensor[(210), float32] {
    %734 = @func_4893() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
    %734.2
  };
  %735() /* ty=Tensor[(210), float32] */
}

def @func_2469() -> (Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) {
  %736 = cast(meta[relay.Constant][49] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %737 = reshape(%736, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %738 = @func_2437(%737) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(14, ?, 15), float64], Tensor[(14, 1, 15), float32]) */;
  %739 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  %740 = %738.2;
  (%739, %740, meta[relay.Constant][49] /* ty=Tensor[(210), float32] */)
}

def @func_4424() -> (Tensor[(8, 10, 12), float32], Tensor[(1008), float64]) {
  @func_4422() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(1008), float64]) */
}

def @func_2212(%var_2210: Tensor[(1, 13, 7), int64], %var_2211: Tensor[(520), int16]) -> (Tensor[(13, 13, 7), bool], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(520), int16], Tensor[(8, 10, 12), uint16], Tensor[(576, 2), float32], Tensor[(390), int32], Tensor[(1152), float32]) {
  @func_2208(%var_2210, %var_2211) /* ty=(Tensor[(13, 13, 7), bool], Tensor[(13, 10, 4), int16], Tensor[(130), int16], Tensor[(520), int16], Tensor[(8, 10, 12), uint16], Tensor[(576, 2), float32], Tensor[(390), int32], Tensor[(1152), float32]) */
}

def @func_6499() -> float32 {
  @func_6497() /* ty=float32 */
}

def @func_6722(%var_6721: Tensor[(9, 4, 11), float64]) -> (Tensor[(9, 4, 11), float64], Tensor[(9, 4, 11), bool]) {
  %748 = fn (%var_6654: Tensor[(9, 4, 11), float64]) -> (Tensor[(9, 4, 11), float64], Tensor[(9, 4, 11), bool]) {
    %741 = cast(%var_6654, dtype="float64") /* ty=Tensor[(9, 4, 11), float64] */;
    %742 = cast(meta[relay.Constant][50] /* ty=Tensor[(9, 4, 11), float64] */, dtype="bool") /* ty=Tensor[(9, 4, 11), bool] */;
    %743 = shape_of(%var_6654, dtype="int32") /* ty=Tensor[(3), int32] */;
    %744 = cast(%var_6654, dtype="bool") /* ty=Tensor[(9, 4, 11), bool] */;
    %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %746 = sigmoid(%741) /* ty=Tensor[(9, 4, 11), float64] */;
    %747 = logical_or(%744, %745) /* ty=Tensor[(9, 4, 11), bool] */;
    (%746, %747)
  };
  %748(%var_6721) /* ty=(Tensor[(9, 4, 11), float64], Tensor[(9, 4, 11), bool]) */
}

def @func_7129() -> (Tensor[(9, 13, 5), float32],) {
  %750 = fn () -> (Tensor[(9, 13, 5), float32],) {
    %749 = @func_5560() /* ty=Tensor[(9, 13, 5), float32] */;
    (%749,)
  };
  %750() /* ty=(Tensor[(9, 13, 5), float32],) */
}

def @func_6788() -> (Tensor[(210), float32], Tensor[(9, 4, 11), float64], Tensor[(396), float64]) {
  %751 = @func_2469() /* ty=(Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) */;
  %752 = cast(meta[relay.Constant][51] /* ty=Tensor[(396), float64] */, dtype="float64") /* ty=Tensor[(396), float64] */;
  %753 = reshape(%752, newshape=[9, 4, 11]) /* ty=Tensor[(9, 4, 11), float64] */;
  %754 = @func_6720(%753) /* ty=(Tensor[(9, 4, 11), float64], Tensor[(9, 4, 11), bool]) */;
  %755 = %751.2;
  %756 = %754.0;
  (%755, %756, meta[relay.Constant][51] /* ty=Tensor[(396), float64] */)
}

def @func_1974(%var_1972: Tensor[(9, 8, 16), float64]) -> (Tensor[(9, 8, 16), float64], Tensor[(8, 10, 12), uint16]) {
  @func_1971(%var_1972) /* ty=(Tensor[(9, 8, 16), float64], Tensor[(8, 10, 12), uint16]) */
}

def @func_4763(%var_4746: Tensor[(14, 2, 15), uint64], %var_4747: Tensor[(14, 2, 15), uint64]) -> (Tensor[(14, 2, 15), uint64], Tensor[(14, 2, 15), bool]) {
  %757 = cast(%var_4747, dtype="uint64") /* ty=Tensor[(14, 2, 15), uint64] */;
  %758 = shape_of(%var_4746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%var_4746, dtype="uint64") /* ty=Tensor[(14, 2, 15), uint64] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %761 = cast(%var_4746, dtype="bool") /* ty=Tensor[(14, 2, 15), bool] */;
  %762 = shape_of(%var_4747, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%var_4747, dtype="bool") /* ty=Tensor[(14, 2, 15), bool] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %765 = bitwise_and(%759, %760) /* ty=Tensor[(14, 2, 15), uint64] */;
  %766 = not_equal(%763, %764) /* ty=Tensor[(14, 2, 15), bool] */;
  (%765, %766)
}

def @func_6090() -> (Tensor[(8, 10, 12), uint16],) {
  %769 = fn () -> (Tensor[(8, 10, 12), uint16],) {
    %767 = @func_2617() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) */;
    %768 = %767.0;
    (%768,)
  };
  %769() /* ty=(Tensor[(8, 10, 12), uint16],) */
}

def @func_2712(%var_2710: Tensor[(8, 10, 12), uint16], %var_2711: Tensor[(8, 10, 12), uint16]) -> (Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), bool]) {
  @func_2708(%var_2710, %var_2711) /* ty=(Tensor[(8, 10, 12), bool], Tensor[(8, 10, 12), bool]) */
}

def @func_6798() -> Tensor[(8, 10, 12), float32] {
  @func_6001() /* ty=Tensor[(8, 10, 12), float32] */
}

def @func_8275() -> (Tensor[(7, 11, 5), float32], Tensor[(8, 10, 12), float32], Tensor[(960), float32]) {
  %770 = cast(meta[relay.Constant][52] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
  %771 = reshape(%770, newshape=[8, 10, 12]) /* ty=Tensor[(8, 10, 12), float32] */;
  %772 = @func_5172(%771) /* ty=(Tensor[(8, 10, 12), float32],) */;
  %773 = @func_8175() /* ty=Tensor[(7, 11, 5), float32] */;
  %774 = %772.0;
  (%773, %774, meta[relay.Constant][52] /* ty=Tensor[(960), float32] */)
}

def @func_7632() -> Tensor[(9, 13, 5), float32] {
  @func_7630() /* ty=Tensor[(9, 13, 5), float32] */
}

def @func_5521() -> (Tensor[(210), float32],) {
  %775 = @func_5365() /* ty=(Tensor[(210), float32],) */;
  %776 = %775.0;
  (%776,)
}

def @func_1476(%var_1439: Tensor[(10, 13, 3), int32], %var_1455: Tensor[(576, 2), float32]) -> (Tensor[(10, 13, 3), bool], Tensor[(16, 8, 9), float32], Tensor[(576, 2), float32], Tensor[(16, 8, 9), float32], Tensor[(16, 9, 9), bool], Tensor[(1, 1296), float64], Tensor[(10, 13, 3), float64]) {
  %777 = cast(meta[relay.Constant][53] /* ty=Tensor[(10, 13, 3), int32] */, dtype="bool") /* ty=Tensor[(10, 13, 3), bool] */;
  %778 = shape_of(%var_1439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%var_1439, dtype="bool") /* ty=Tensor[(10, 13, 3), bool] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %781 = cast(%var_1455, dtype="float32") /* ty=Tensor[(576, 2), float32] */;
  %782 = cast(%var_1455, dtype="float32") /* ty=Tensor[(576, 2), float32] */;
  %783 = reshape(%781, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
  %784 = reshape(%782, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
  %785 = @func_648(%783, %784) /* ty=(Tensor[(16, 8, 9), float32],) */;
  %786 = cast(%var_1455, dtype="float32") /* ty=Tensor[(576, 2), float32] */;
  %787 = %785.0;
  %788 = cast(%787, dtype="float32") /* ty=Tensor[(16, 8, 9), float32] */;
  %789 = reshape(%786, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
  %790 = reshape(%788, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
  %791 = @func_648(%789, %790) /* ty=(Tensor[(16, 8, 9), float32],) */;
  %792 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 1296), float64] */, dtype="float64") /* ty=Tensor[(1, 1296), float64] */;
  %793 = reshape(%792, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), float64] */;
  %794 = @func_308(%793) /* ty=(Tensor[(16, 9, 9), bool],) */;
  %795 = cast(%var_1439, dtype="float64") /* ty=Tensor[(10, 13, 3), float64] */;
  %796 = equal(%779, %780) /* ty=Tensor[(10, 13, 3), bool] */;
  %797 = %791.0;
  %798 = %794.0;
  %799 = erf(%795) /* ty=Tensor[(10, 13, 3), float64] */;
  (%796, %787, %var_1455, %797, %798, meta[relay.Constant][54] /* ty=Tensor[(1, 1296), float64] */, %799)
}

def @func_5172(%var_5150: Tensor[(8, 10, 12), float32]) -> (Tensor[(8, 10, 12), float32],) {
  %800 = @func_2976() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %801 = %800.0;
  %802 = cast(%var_5150, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %803 = shape_of(%801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %804 = cast(%801, dtype="float32") /* ty=Tensor[(8, 10, 12), float32] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %806 = floor_divide(%804, %805) /* ty=Tensor[(8, 10, 12), float32] */;
  (%806,)
}

def @func_7759() -> (float32,) {
  %809 = fn () -> (float32,) {
    %807 = @func_2617() /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(15, 16, 1), float32], float32) */;
    %808 = %807.2;
    (%808,)
  };
  %809() /* ty=(float32,) */
}

def @func_5365() -> (Tensor[(210), float32],) {
  %810 = @func_3677() /* ty=Tensor[(210), float32] */;
  (%810,)
}

def @func_4843() -> Tensor[(10, 8, 8), float64] {
  @func_4841() /* ty=Tensor[(10, 8, 8), float64] */
}

def @func_308(%var_252: Tensor[(16, 9, 9), float64]) -> (Tensor[(16, 9, 9), bool],) {
  %811 = cast(%var_252, dtype="float64") /* ty=Tensor[(16, 9, 9), float64] */;
  %812 = atanh(%811) /* ty=Tensor[(16, 9, 9), float64] */;
  %813 = cast(%812, dtype="bool") /* ty=Tensor[(16, 9, 9), bool] */;
  %814 = shape_of(%var_252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%var_252, dtype="bool") /* ty=Tensor[(16, 9, 9), bool] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %817 = less(%815, %816) /* ty=Tensor[(16, 9, 9), bool] */;
  %818 = cast(%817, dtype="bool") /* ty=Tensor[(16, 9, 9), bool] */;
  %819 = shape_of(%812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %820 = cast(%812, dtype="bool") /* ty=Tensor[(16, 9, 9), bool] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %822 = less_equal(%820, %821) /* ty=Tensor[(16, 9, 9), bool] */;
  (%822,)
}

def @func_2874() -> (Tensor[(14, 1, 15), float32],) {
  %823 = @func_2649() /* ty=(Tensor[(14, 1, 15), float32],) */;
  %824 = %823.0;
  (%824,)
}

def @func_5367() -> (Tensor[(210), float32],) {
  @func_5365() /* ty=(Tensor[(210), float32],) */
}

def @func_2833(%var_2831: int32) -> (Tensor[(12, 3, 9), bool],) {
  @func_2830(%var_2831) /* ty=(Tensor[(12, 3, 9), bool],) */
}

def @func_648(%var_634: Tensor[(16, 8, 9), float32], %var_635: Tensor[(16, 8, 9), float32]) -> (Tensor[(16, 8, 9), float32],) {
  %825 = cast(%var_635, dtype="float32") /* ty=Tensor[(16, 8, 9), float32] */;
  %826 = shape_of(%var_634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%var_634, dtype="float32") /* ty=Tensor[(16, 8, 9), float32] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %829 = floor_divide(%827, %828) /* ty=Tensor[(16, 8, 9), float32] */;
  (%829,)
}

def @func_5678() -> float32 {
  %830 = @func_3235() /* ty=(float32, Tensor[(8, 10, 12), float32]) */;
  %830.0
}

def @func_7172(%var_7163: float64, %var_7164: Tensor[(12, 5, 2), float64]) -> (Tensor[(12, 5, 2), bool],) {
  %831 = cast(%var_7163, dtype="bool") /* ty=bool */;
  %832 = cast(%var_7164, dtype="bool") /* ty=Tensor[(12, 5, 2), bool] */;
  %833 = greater(%831, %832) /* ty=Tensor[(12, 5, 2), bool] */;
  (%833,)
}

def @func_1971(%var_1955: Tensor[(9, 8, 16), float64]) -> (Tensor[(9, 8, 16), float64], Tensor[(8, 10, 12), uint16]) {
  %834 = cast(%var_1955, dtype="float64") /* ty=Tensor[(9, 8, 16), float64] */;
  %835 = sinh(%834) /* ty=Tensor[(9, 8, 16), float64] */;
  %836 = @func_1940() /* ty=Tensor[(8, 10, 12), uint16] */;
  (%835, %836)
}

def @func_8176() -> Tensor[(7, 11, 5), float32] {
  %838 = fn () -> Tensor[(7, 11, 5), float32] {
    %837 = cast(meta[relay.Constant][55] /* ty=Tensor[(7, 11, 5), float32] */, dtype="float32") /* ty=Tensor[(7, 11, 5), float32] */;
    acos(%837) /* ty=Tensor[(7, 11, 5), float32] */
  };
  %838() /* ty=Tensor[(7, 11, 5), float32] */
}

def @func_7277(%var_7260: Tensor[(1, 10, 14), float64], %var_7261: Tensor[(15, 10, 14), float64]) -> (Tensor[(15, 10, 14), float64], Tensor[(14, 1, 15), float32], Tensor[(210), float32], Tensor[(14, 1, 15), float32]) {
  %839 = cast(%var_7260, dtype="float64") /* ty=Tensor[(1, 10, 14), float64] */;
  %840 = cast(%var_7261, dtype="float64") /* ty=Tensor[(15, 10, 14), float64] */;
  %841 = cast(meta[relay.Constant][56] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %842 = reshape(%841, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), float32] */;
  %843 = @func_2323(%842) /* ty=(Tensor[(14, 1, 15), float32],) */;
  %844 = @func_6898() /* ty=(float32, Tensor[(14, 1, 15), float32]) */;
  %845 = mod(%839, %840) /* ty=Tensor[(15, 10, 14), float64] */;
  %846 = %843.0;
  %847 = %844.1;
  (%845, %846, meta[relay.Constant][56] /* ty=Tensor[(210), float32] */, %847)
}

def @func_7660(%var_7658: Tensor[(1, 33), float32]) -> (Tensor[(8, 10, 12), uint16], Tensor[(1, 33), float32], Tensor[(1296), float32]) {
  @func_7657(%var_7658) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(1, 33), float32], Tensor[(1296), float32]) */
}

def @func_5523() -> (Tensor[(210), float32],) {
  @func_5521() /* ty=(Tensor[(210), float32],) */
}

def @func_1883() -> Tensor[(8, 10, 12), uint16] {
  %848 = cast(meta[relay.Constant][57] /* ty=Tensor[(8, 1, 12), uint16] */, dtype="uint16") /* ty=Tensor[(8, 1, 12), uint16] */;
  %849 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 10, 12), uint16] */, dtype="uint16") /* ty=Tensor[(8, 10, 12), uint16] */;
  subtract(%848, %849) /* ty=Tensor[(8, 10, 12), uint16] */
}

def @func_7743(%var_7742: Tensor[(360), uint64]) -> (Tensor[(10, 8, 8), float64], Tensor[(10, 9, 4), bool], Tensor[(360), uint64], Tensor[(14, ?, 15), float64], Tensor[(105, 2), float32]) {
  %860 = fn (%var_7714: Tensor[(360), uint64]) -> (Tensor[(10, 8, 8), float64], Tensor[(10, 9, 4), bool], Tensor[(360), uint64], Tensor[(14, ?, 15), float64], Tensor[(105, 2), float32]) {
    %850 = cast(%var_7714, dtype="uint64") /* ty=Tensor[(360), uint64] */;
    %851 = cast(%var_7714, dtype="uint64") /* ty=Tensor[(360), uint64] */;
    %852 = reshape(%850, newshape=[10, 9, 4]) /* ty=Tensor[(10, 9, 4), uint64] */;
    %853 = reshape(%851, newshape=[10, 9, 4]) /* ty=Tensor[(10, 9, 4), uint64] */;
    %854 = cast(meta[relay.Constant][59] /* ty=Tensor[(105, 2), float32] */, dtype="float32") /* ty=Tensor[(105, 2), float32] */;
    %855 = reshape(%854, newshape=[210]) /* ty=Tensor[(210), float32] */;
    %856 = @func_2437(%855) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(14, ?, 15), float64], Tensor[(14, 1, 15), float32]) */;
    %857 = @func_4841() /* ty=Tensor[(10, 8, 8), float64] */;
    %858 = @func_4499(%852, %853) /* ty=Tensor[(10, 9, 4), bool] */;
    %859 = %856.1;
    (%857, %858, %var_7714, %859, meta[relay.Constant][59] /* ty=Tensor[(105, 2), float32] */)
  };
  %860(%var_7742) /* ty=(Tensor[(10, 8, 8), float64], Tensor[(10, 9, 4), bool], Tensor[(360), uint64], Tensor[(14, ?, 15), float64], Tensor[(105, 2), float32]) */
}

def @func_1480(%var_1478: Tensor[(10, 13, 3), int32], %var_1479: Tensor[(576, 2), float32]) -> (Tensor[(10, 13, 3), bool], Tensor[(16, 8, 9), float32], Tensor[(576, 2), float32], Tensor[(16, 8, 9), float32], Tensor[(16, 9, 9), bool], Tensor[(1, 1296), float64], Tensor[(10, 13, 3), float64]) {
  @func_1476(%var_1478, %var_1479) /* ty=(Tensor[(10, 13, 3), bool], Tensor[(16, 8, 9), float32], Tensor[(576, 2), float32], Tensor[(16, 8, 9), float32], Tensor[(16, 9, 9), bool], Tensor[(1, 1296), float64], Tensor[(10, 13, 3), float64]) */
}

def @func_5079() -> (Tensor[(8, 10, 12), float32],) {
  %863 = fn () -> (Tensor[(8, 10, 12), float32],) {
    %861 = @func_4930() /* ty=(Tensor[(8, 10, 12), float32],) */;
    %862 = %861.0;
    (%862,)
  };
  %863() /* ty=(Tensor[(8, 10, 12), float32],) */
}

def @func_5773(%var_5772: Tensor[(15, 12, 5), float64]) -> (Tensor[(15, 12, 5), float64], Tensor[(130, 1), int16], Tensor[(1, 130), int16]) {
  %870 = fn (%var_5763: Tensor[(15, 12, 5), float64]) -> (Tensor[(15, 12, 5), float64], Tensor[(130, 1), int16], Tensor[(1, 130), int16]) {
    %864 = cast(%var_5763, dtype="float64") /* ty=Tensor[(15, 12, 5), float64] */;
    %865 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 130), int16] */, dtype="int16") /* ty=Tensor[(1, 130), int16] */;
    %866 = reshape(%865, newshape=[130, 1]) /* ty=Tensor[(130, 1), int16] */;
    %867 = @func_3812(%866) /* ty=(Tensor[(8, 10, 12), uint16], Tensor[(8, 10, 12), float32], Tensor[(14, 1, 15), float32], Tensor[(13, 10, 4), int16], Tensor[(130, 1), int16], Tensor[(520), int16], Tensor[(15, 16, 1), float32]) */;
    %868 = atan(%864) /* ty=Tensor[(15, 12, 5), float64] */;
    %869 = %867.4;
    (%868, %869, meta[relay.Constant][60] /* ty=Tensor[(1, 130), int16] */)
  };
  %870(%var_5772) /* ty=(Tensor[(15, 12, 5), float64], Tensor[(130, 1), int16], Tensor[(1, 130), int16]) */
}

def @func_5175(%var_5173: Tensor[(8, 10, 12), float32]) -> (Tensor[(8, 10, 12), float32],) {
  @func_5172(%var_5173) /* ty=(Tensor[(8, 10, 12), float32],) */
}

def @func_7630() -> Tensor[(9, 13, 5), float32] {
  %871 = @func_7128() /* ty=(Tensor[(9, 13, 5), float32],) */;
  %872 = %871.0;
  %873 = cast(%872, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
  cos(%873) /* ty=Tensor[(9, 13, 5), float32] */
}

def @func_8028() -> (Tensor[(5, 14, 9), float32], float32, Tensor[(8, 10, 12), float32], float32, Tensor[(8, 10, 12), float32]) {
  @func_8026() /* ty=(Tensor[(5, 14, 9), float32], float32, Tensor[(8, 10, 12), float32], float32, Tensor[(8, 10, 12), float32]) */
}

def @func_2544(%var_2533: float32) -> Tensor[(15, 16, 1), float32] {
  %874 = cast(%var_2533, dtype="float32") /* ty=float32 */;
  %875 = cast(meta[relay.Constant][61] /* ty=Tensor[(15, 16, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 16, 1), float32] */;
  power(%874, %875) /* ty=Tensor[(15, 16, 1), float32] */
}

def @func_6537(%var_6534: Tensor[(1120), float32]) -> (Tensor[(130), int16], Tensor[(8, 10, 12), float32], Tensor[(8, 10, 12), uint32], Tensor[(14, 5, 16), float64], Tensor[(1120), float32]) {
  %876 = @func_4384() /* ty=(Tensor[(8, 10, 12), float64], Tensor[(14, 1, 15), float32], Tensor[(8, 10, 12), float32], Tensor[(130, 1), int16], Tensor[(130), int16], Tensor[(10, 16, 6), float64]) */;
  %877 = @func_3990() /* ty=(Tensor[(8, 10, 12), uint32],) */;
  %878 = cast(%var_6534, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %879 = reshape(%878, newshape=[14, 5, 16]) /* ty=Tensor[(14, 5, 16), float32] */;
  %880 = %876.4;
  %881 = @func_2013() /* ty=Tensor[(8, 10, 12), float32] */;
  %882 = %877.0;
  %883 = @func_4723(%879) /* ty=Tensor[(14, 5, 16), float64] */;
  (%880, %881, %882, %883, %var_6534)
}

def @func_1885() -> Tensor[(8, 10, 12), uint16] {
  @func_1883() /* ty=Tensor[(8, 10, 12), uint16] */
}

def @func_4930() -> (Tensor[(8, 10, 12), float32],) {
  %884 = @func_4613() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %885 = %884.0;
  (%885,)
}

def @func_4969() -> (Tensor[(8, 10, 12), float32],) {
  %886 = @func_4930() /* ty=(Tensor[(8, 10, 12), float32],) */;
  %887 = %886.0;
  (%887,)
}

def @func_5032(%var_5030: float64) -> (Tensor[(13, 2, 2), float64], Tensor[(16, 9, 9), bool], Tensor[(33), float32]) {
  @func_5029(%var_5030) /* ty=(Tensor[(13, 2, 2), float64], Tensor[(16, 9, 9), bool], Tensor[(33), float32]) */
}

def @func_2978() -> (Tensor[(8, 10, 12), float32],) {
  @func_2976() /* ty=(Tensor[(8, 10, 12), float32],) */
}

def @func_7705(%var_7704: int32) -> (Tensor[(8, 10, 12), float32], Tensor[(12, 3, 9), bool], int32) {
  %893 = fn (%var_7698: int32) -> (Tensor[(8, 10, 12), float32], Tensor[(12, 3, 9), bool], int32) {
    %888 = cast(%var_7698, dtype="int32") /* ty=int32 */;
    %889 = reshape(%888, newshape=[]) /* ty=int32 */;
    %890 = @func_2830(%889) /* ty=(Tensor[(12, 3, 9), bool],) */;
    %891 = @func_7033() /* ty=Tensor[(8, 10, 12), float32] */;
    %892 = %890.0;
    (%891, %892, %var_7698)
  };
  %893(%var_7704) /* ty=(Tensor[(8, 10, 12), float32], Tensor[(12, 3, 9), bool], int32) */
}

def @func_8217() -> Tensor[(8, 10, 12), float32] {
  %895 = fn () -> Tensor[(8, 10, 12), float32] {
    %894 = @func_4930() /* ty=(Tensor[(8, 10, 12), float32],) */;
    %894.0
  };
  %895() /* ty=Tensor[(8, 10, 12), float32] */
}

def @func_4893() -> (Tensor[(8, 10, 12), uint16], Tensor[(14, 1, 15), float32], Tensor[(210), float32]) {
  %896 = @func_2356() /* ty=(Tensor[(8, 10, 12), uint16],) */;
  %897 = cast(meta[relay.Constant][62] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %898 = reshape(%897, newshape=[14, 1, 15]) /* ty=Tensor[(14, 1, 15), float32] */;
  %899 = @func_2323(%898) /* ty=(Tensor[(14, 1, 15), float32],) */;
  %900 = %896.0;
  %901 = %899.0;
  (%900, %901, meta[relay.Constant][62] /* ty=Tensor[(210), float32] */)
}

def @func_1169(%var_1168: Tensor[(14, 8, 9), float64]) -> (Tensor[(14, 8, 9), float64], Tensor[(16, 8, 9), float32], Tensor[(1152), float32]) {
  %910 = fn (%var_1150: Tensor[(14, 8, 9), float64]) -> (Tensor[(14, 8, 9), float64], Tensor[(16, 8, 9), float32], Tensor[(1152), float32]) {
    %902 = cast(%var_1150, dtype="float64") /* ty=Tensor[(14, 8, 9), float64] */;
    %903 = cast(meta[relay.Constant][63] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %904 = cast(meta[relay.Constant][63] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %905 = reshape(%903, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
    %906 = reshape(%904, newshape=[16, 8, 9]) /* ty=Tensor[(16, 8, 9), float32] */;
    %907 = @func_648(%905, %906) /* ty=(Tensor[(16, 8, 9), float32],) */;
    %908 = erf(%902) /* ty=Tensor[(14, 8, 9), float64] */;
    %909 = %907.0;
    (%908, %909, meta[relay.Constant][63] /* ty=Tensor[(1152), float32] */)
  };
  %910(%var_1168) /* ty=(Tensor[(14, 8, 9), float64], Tensor[(16, 8, 9), float32], Tensor[(1152), float32]) */
}

def @func_3572() -> Tensor[(8, 10, 12), float32] {
  %912 = fn () -> Tensor[(8, 10, 12), float32] {
    %911 = @func_3235() /* ty=(float32, Tensor[(8, 10, 12), float32]) */;
    %911.1
  };
  %912() /* ty=Tensor[(8, 10, 12), float32] */
}

def @func_2326(%var_2324: Tensor[(14, 1, 15), float32]) -> (Tensor[(14, 1, 15), float32],) {
  @func_2323(%var_2324) /* ty=(Tensor[(14, 1, 15), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */the function is provided too many arguments expected 0, found 2

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

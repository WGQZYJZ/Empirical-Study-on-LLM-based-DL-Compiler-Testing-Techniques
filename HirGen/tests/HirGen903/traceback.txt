==========mod==========
#[version = "0.0.5"]
def @func_9213() -> Tensor[(7, 9, 1), float64] {
  @func_7193() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_5676() -> (Tensor[(7, 9, 1), float64],) {
  %0 = @func_4389() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
  %1 = %0.0;
  (%1,)
}

def @func_5847() -> (Tensor[(7, 9, 1), float64],) {
  %2 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %3 = %2.0;
  (%3,)
}

def @func_6654() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %4 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %5 = @func_5067() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %6 = %4.0;
  %7 = %5.0;
  (%6, %7)
}

def @func_7934(%var_7931: Tensor[(150), float64], %var_7932: Tensor[(56), uint8]) -> (Tensor[(5, ?, 13), float64], Tensor[(9, 6, 4), float32], Tensor[(150), float64], Tensor[(56), uint8]) {
  %8 = @func_5489() /* ty=(Tensor[(5, ?, 13), float64],) */;
  %9 = cast(%var_7931, dtype="float64") /* ty=Tensor[(150), float64] */;
  %10 = cast(%var_7932, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %11 = reshape(%9, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), float64] */;
  %12 = reshape(%10, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %13 = @func_1079(%11, %12) /* ty=(Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(15, 5, 2), float64], Tensor[(9, 6, 4), float32], Tensor[(8, 7, 1), float32], Tensor[(15, 5, 2), float64]) */;
  %14 = %8.0;
  %15 = %13.4;
  (%14, %15, %var_7931, %var_7932)
}

def @func_7121(%var_7052: Tensor[(18, 756), uint64], %var_7064: Tensor[(56), uint8]) -> (Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(9, 6, 4), float32], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 216), float32], Tensor[(18, 756), float64]) {
  %16 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %17 = cast(%var_7064, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %18 = reshape(%17, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %19 = @func_4768(%18) /* ty=(Tensor[(65), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) */;
  %20 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %21 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %22 = @func_5847() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %23 = cast(meta[relay.Constant][0] /* ty=Tensor[(567), uint64] */, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %24 = cast(%var_7052, dtype="float32") /* ty=Tensor[(18, 756), float32] */;
  %25 = tan(%24) /* ty=Tensor[(18, 756), float32] */;
  %26 = cast(meta[relay.Constant][0] /* ty=Tensor[(567), uint64] */, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %27 = cast(%var_7052, dtype="uint64") /* ty=Tensor[(18, 756), uint64] */;
  %28 = reshape(%26, newshape=[567]) /* ty=Tensor[(567), uint64] */;
  %29 = reshape(%27, newshape=[7, 9, 216]) /* ty=Tensor[(7, 9, 216), uint64] */;
  %30 = @func_5618(%28, %29) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(65), float32], Tensor[(7, 9, 216), float32]) */;
  %31 = %30.3;
  %32 = cast(%31, dtype="float32") /* ty=Tensor[(7, 9, 216), float32] */;
  %33 = shape_of(%25, dtype="int32") /* ty=Tensor[(2), int32] */;
  %34 = cast(%25, dtype="float32") /* ty=Tensor[(18, 756), float32] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %36 = floor_mod(%34, %35) /* ty=Tensor[(18, 756), float32] */;
  %37 = cast(%36, dtype="uint64") /* ty=Tensor[(18, 756), uint64] */;
  %38 = reshape(%23, newshape=[567]) /* ty=Tensor[(567), uint64] */;
  %39 = reshape(%37, newshape=[7, 9, 216]) /* ty=Tensor[(7, 9, 216), uint64] */;
  %40 = @func_5618(%38, %39) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(65), float32], Tensor[(7, 9, 216), float32]) */;
  %41 = cast(%36, dtype="float64") /* ty=Tensor[(18, 756), float64] */;
  %42 = %16.0;
  %43 = %19.1;
  %44 = %20.0;
  %45 = %21.0;
  %46 = %22.0;
  %47 = %40.3;
  %48 = log10(%41) /* ty=Tensor[(18, 756), float64] */;
  (%42, meta[relay.Constant][0] /* ty=Tensor[(567), uint64] */, %43, %var_7064, %44, %45, %46, %47, %48)
}

def @func_9903() -> Tensor[(65), float32] {
  @func_4721() /* ty=Tensor[(65), float32] */
}

def @func_11287() -> Tensor[(65), float32] {
  %49 = @func_6180() /* ty=(Tensor[(65), float32],) */;
  %49.0
}

def @func_11425() -> Tensor[(7, 9, 1), float64] {
  %50 = @func_5904() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %50.0
}

def @func_12664() -> Tensor[(7, 9, 1), float64] {
  %51 = @func_8995() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %51.0
}

def @func_13330() -> (Tensor[(7, 9, 1), float64],) {
  %52 = @func_12911() /* ty=Tensor[(7, 9, 1), float64] */;
  (%52,)
}

def @func_12880() -> (Tensor[(7, 9, ?), bool], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %53 = @func_10547() /* ty=Tensor[(7, 9, 1), float64] */;
  %54 = cast(%53, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
  %55 = reshape(%54, newshape=[7, 9, 1]) /* ty=Tensor[(7, 9, 1), float64] */;
  %56 = @func_12206(%55) /* ty=(Tensor[(7, 9, ?), int8],) */;
  %57 = %56.0;
  %58 = cast(%53, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  %59 = shape_of(%57, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(%57, dtype="bool") /* ty=Tensor[(7, 9, ?), bool] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %62 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %63 = equal(%60, %61) /* ty=Tensor[(7, 9, ?), bool] */;
  %64 = @func_8353() /* ty=Tensor[(7, 9, 1), float64] */;
  %65 = %62.0;
  (%63, %64, %65)
}

def @func_13380(%var_13370: Tensor[(8, 6, 15), float32], %var_13371: Tensor[(8, 6, 15), float32]) -> Tensor[(8, 6, 15), float32] {
  %66 = cast(%var_13371, dtype="float32") /* ty=Tensor[(8, 6, 15), float32] */;
  %67 = shape_of(%var_13370, dtype="int32") /* ty=Tensor[(3), int32] */;
  %68 = cast(%var_13370, dtype="float32") /* ty=Tensor[(8, 6, 15), float32] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%68, %69) /* ty=Tensor[(8, 6, 15), float32] */
}

def @func_13209(%var_13197: Tensor[(3, 24), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(3, 24), float64]) {
  %70 = @func_12749() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %71 = @func_10976() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %72 = cast(%var_13197, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %73 = cast(meta[relay.Constant][1] /* ty=Tensor[(2310), float32] */, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %74 = reshape(%72, newshape=[3, 8, 3]) /* ty=Tensor[(3, 8, 3), float32] */;
  %75 = reshape(%73, newshape=[2310]) /* ty=Tensor[(2310), float32] */;
  %76 = @func_9113(%74, %75) /* ty=(Tensor[(3, 8, 3), float32], Tensor[(3, 8, 3), float32], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %77 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 24), float32] */, dtype="float64") /* ty=Tensor[(3, 24), float64] */;
  %78 = shape_of(%var_13197, dtype="int32") /* ty=Tensor[(2), int32] */;
  %79 = cast(%var_13197, dtype="float64") /* ty=Tensor[(3, 24), float64] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %81 = %70.0;
  %82 = @func_6428() /* ty=Tensor[(7, 9, 1), float64] */;
  %83 = %71.0;
  %84 = %76.3;
  %85 = power(%79, %80) /* ty=Tensor[(3, 24), float64] */;
  (%81, %82, %83, %84, meta[relay.Constant][1] /* ty=Tensor[(2310), float32] */, %85)
}

def @func_15093(%var_15086: Tensor[(5, 13, 15), float64]) -> (Tensor[(5, 13, 15), float64],) {
  %86 = cast(%var_15086, dtype="float64") /* ty=Tensor[(5, 13, 15), float64] */;
  %87 = atan(%86) /* ty=Tensor[(5, 13, 15), float64] */;
  (%87,)
}

def @func_15268() -> (Tensor[(8, 7, ?), uint8], Tensor[(7, 9, 1), float64]) {
  %88 = @func_11750() /* ty=(Tensor[(8, 7, ?), uint8],) */;
  %89 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %90 = %88.0;
  %91 = %89.0;
  (%90, %91)
}

def @func_11514() -> (Tensor[(7, 9, 1), float64],) {
  %92 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %93 = %92.0;
  (%93,)
}

def @func_10838() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %94 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %95 = @func_9261() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %96 = %94.0;
  %97 = @func_6627() /* ty=Tensor[(7, 9, 1), float64] */;
  %98 = %95.2;
  (%96, %97, %98)
}

def @func_11817(%var_11809: Tensor[(1680), float32]) -> (Tensor[(65), bool], Tensor[(7, 9, 1), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float32], Tensor[(65), float64]) {
  %99 = @func_10536() /* ty=(Tensor[(65), float32],) */;
  %100 = %99.0;
  %101 = cast(meta[relay.Constant][3] /* ty=Tensor[(65), float32] */, dtype="bool") /* ty=Tensor[(65), bool] */;
  %102 = shape_of(%100, dtype="int32") /* ty=Tensor[(1), int32] */;
  %103 = cast(%100, dtype="bool") /* ty=Tensor[(65), bool] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?), bool] */;
  %105 = @func_9877() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %106 = cast(%var_11809, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %107 = reshape(%106, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %108 = @func_7806(%107) /* ty=(Tensor[(14, 12, 10), float32],) */;
  %109 = cast(%100, dtype="float64") /* ty=Tensor[(65), float64] */;
  %110 = greater(%103, %104) /* ty=Tensor[(65), bool] */;
  %111 = %105.1;
  %112 = %108.0;
  %113 = sinh(%109) /* ty=Tensor[(65), float64] */;
  (%110, %111, %112, %var_11809, %113)
}

def @func_12911() -> Tensor[(7, 9, 1), float64] {
  %114 = @func_7155() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %114.0
}

def @func_11856() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), bool]) {
  %115 = @func_6793() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %116 = %115.1;
  %117 = @func_5999() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %118 = %117.0;
  %119 = cast(%118, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  %120 = shape_of(%116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(%116, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %123 = @func_10547() /* ty=Tensor[(7, 9, 1), float64] */;
  %124 = less_equal(%121, %122) /* ty=Tensor[(7, 9, ?), bool] */;
  (%123, %124)
}

def @func_7710(%var_7634: Tensor[(7, 9, 4), float64]) -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 4), uint16], Tensor[(15, 2, ?), uint32], Tensor[(30), bool], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 2, ?), bool], Tensor[(7, 9, 1), float64]) {
  %125 = @func_5931() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %126 = @func_5931() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %127 = %126.0;
  %128 = cast(%127, dtype="uint16") /* ty=Tensor[(7, 9, 1), uint16] */;
  %129 = cast(%var_7634, dtype="uint16") /* ty=Tensor[(7, 9, 4), uint16] */;
  %130 = cast(meta[relay.Constant][4] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %131 = reshape(%130, newshape=[15, 2, 1]) /* ty=Tensor[(15, 2, 1), bool] */;
  %132 = @func_2342(%131) /* ty=(Tensor[(15, 2, ?), bool], Tensor[(15, 2, ?), uint32]) */;
  %133 = cast(meta[relay.Constant][4] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %134 = reshape(%133, newshape=[15, 2, 1]) /* ty=Tensor[(15, 2, 1), bool] */;
  %135 = @func_2342(%134) /* ty=(Tensor[(15, 2, ?), bool], Tensor[(15, 2, ?), uint32]) */;
  %136 = @func_6793() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %137 = %125.0;
  %138 = left_shift(%128, %129) /* ty=Tensor[(7, 9, 4), uint16] */;
  %139 = %132.1;
  %140 = @func_6308() /* ty=Tensor[(7, 9, 1), float64] */;
  %141 = @func_6308() /* ty=Tensor[(7, 9, 1), float64] */;
  %142 = %135.0;
  %143 = %136.1;
  (%137, %138, %139, meta[relay.Constant][4] /* ty=Tensor[(30), bool] */, %140, %141, %142, %143)
}

def @func_10705() -> (Tensor[(7, 9, 1), float64],) {
  %144 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
  (%144,)
}

def @func_14127() -> (Tensor[(7, 9, 1), float64],) {
  %145 = @func_10165() /* ty=Tensor[(7, 9, 1), float64] */;
  (%145,)
}

def @func_7525(%var_7514: Tensor[(189, 3), uint64], %var_7516: Tensor[(56), uint8]) -> (Tensor[(7, 9, ?), float32], Tensor[(9, 9, 7), uint64], Tensor[(189, 3), uint64], Tensor[(216), int64], Tensor[(56), uint8]) {
  %146 = @func_6903() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %147 = %146.0;
  %148 = @func_6627() /* ty=Tensor[(7, 9, 1), float64] */;
  %149 = cast(%148, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
  %150 = shape_of(%147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%147, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %153 = cast(%var_7514, dtype="uint64") /* ty=Tensor[(189, 3), uint64] */;
  %154 = cast(%var_7514, dtype="uint64") /* ty=Tensor[(189, 3), uint64] */;
  %155 = cast(meta[relay.Constant][5] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
  %156 = cast(%var_7516, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %157 = reshape(%153, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
  %158 = reshape(%154, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
  %159 = reshape(%155, newshape=[216]) /* ty=Tensor[(216), int64] */;
  %160 = reshape(%156, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %161 = @func_1422(%157, %158, %159, %160) /* ty=(Tensor[(9, 9, 7), uint64], Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(8, 7, ?), uint8]) */;
  %162 = power(%151, %152) /* ty=Tensor[(7, 9, ?), float32] */;
  %163 = %161.0;
  (%162, %163, %var_7514, meta[relay.Constant][5] /* ty=Tensor[(216), int64] */, %var_7516)
}

def @func_12716() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %164 = @func_10838() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %165 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
  %166 = %164.1;
  (%165, %166)
}

def @func_13222() -> (Tensor[(7, 9, 1), float64],) {
  %167 = @func_12911() /* ty=Tensor[(7, 9, 1), float64] */;
  (%167,)
}

def @func_4721() -> Tensor[(65), float32] {
  %168 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %168.7
}

def @func_14012() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), int8]) {
  %169 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %170 = %169.0;
  %171 = cast(%170, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
  %172 = reshape(%171, newshape=[7, 9, 1]) /* ty=Tensor[(7, 9, 1), float64] */;
  %173 = @func_12206(%172) /* ty=(Tensor[(7, 9, ?), int8],) */;
  %174 = @func_12911() /* ty=Tensor[(7, 9, 1), float64] */;
  %175 = %173.0;
  (%174, %170, %175)
}

def @func_8061() -> (Tensor[(7, 9, 1), float64],) {
  %176 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %177 = %176.0;
  (%177,)
}

def @func_11874() -> (Tensor[(7, 9, 1), float64],) {
  %178 = @func_11488() /* ty=Tensor[(7, 9, 1), float64] */;
  (%178,)
}

def @func_10130(%var_10095: float64, %var_10096: Tensor[(1, 11, 1), float64]) -> (Tensor[(?, 11, ?), uint8], Tensor[(7, 9, ?), float32]) {
  %179 = cast(%var_10095, dtype="bool") /* ty=bool */;
  %180 = cast(%var_10096, dtype="bool") /* ty=Tensor[(1, 11, 1), bool] */;
  %181 = equal(%179, %180) /* ty=Tensor[(1, 11, 1), bool] */;
  %182 = cast(%181, dtype="float32") /* ty=Tensor[(1, 11, 1), float32] */;
  %183 = log10(%182) /* ty=Tensor[(1, 11, 1), float32] */;
  %184 = cast(%181, dtype="uint8") /* ty=Tensor[(1, 11, 1), uint8] */;
  %185 = shape_of(%183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %186 = cast(%183, dtype="uint8") /* ty=Tensor[(1, 11, 1), uint8] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %188 = @func_6059() /* ty=(Tensor[(7, 9, ?), float32],) */;
  %189 = minimum(%186, %187) /* ty=Tensor[(?, 11, ?), uint8] */;
  %190 = %188.0;
  (%189, %190)
}

def @func_12206(%var_12182: Tensor[(7, 9, 1), float64]) -> (Tensor[(7, 9, ?), int8],) {
  %191 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %192 = %191.0;
  %193 = cast(%var_12182, dtype="int8") /* ty=Tensor[(7, 9, 1), int8] */;
  %194 = shape_of(%192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(%192, dtype="int8") /* ty=Tensor[(7, 9, 1), int8] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %197 = minimum(%195, %196) /* ty=Tensor[(7, 9, ?), int8] */;
  (%197,)
}

def @func_11132() -> (Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) {
  %198 = @func_10536() /* ty=(Tensor[(65), float32],) */;
  %199 = @func_5522() /* ty=(Tensor[(65), float32],) */;
  %200 = %198.0;
  %201 = @func_6428() /* ty=Tensor[(7, 9, 1), float64] */;
  %202 = %199.0;
  (%200, %201, %202)
}

def @func_11488() -> Tensor[(7, 9, 1), float64] {
  %203 = @func_9877() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %203.0
}

def @func_865(%var_845: Tensor[(12, 6, 14), float32]) -> (Tensor[(12, 6, 14), float32],) {
  %204 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 6, 14), float32] */, dtype="float32") /* ty=Tensor[(12, 6, 14), float32] */;
  %205 = shape_of(%var_845, dtype="int32") /* ty=Tensor[(3), int32] */;
  %206 = cast(%var_845, dtype="float32") /* ty=Tensor[(12, 6, 14), float32] */;
  %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %208 = mod(%206, %207) /* ty=Tensor[(12, 6, 14), float32] */;
  (%208,)
}

def @func_5343(%var_5290: Tensor[(56), uint8], %var_5321: Tensor[(567, 1), uint64], %var_5322: Tensor[(216, 1), int64]) -> (Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, 1), float32], Tensor[(567, 1), uint64], Tensor[(216), int64], Tensor[(182), float32], Tensor[(216, 1), float32]) {
  %209 = cast(%var_5290, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %210 = reshape(%209, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %211 = @func_4768(%210) /* ty=(Tensor[(65), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) */;
  %212 = cast(%var_5321, dtype="uint64") /* ty=Tensor[(567, 1), uint64] */;
  %213 = cast(%var_5321, dtype="uint64") /* ty=Tensor[(567, 1), uint64] */;
  %214 = cast(%var_5322, dtype="int64") /* ty=Tensor[(216, 1), int64] */;
  %215 = cast(%var_5290, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %216 = reshape(%212, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
  %217 = reshape(%213, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
  %218 = reshape(%214, newshape=[216]) /* ty=Tensor[(216), int64] */;
  %219 = reshape(%215, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %220 = @func_1422(%216, %217, %218, %219) /* ty=(Tensor[(9, 9, 7), uint64], Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(8, 7, ?), uint8]) */;
  %221 = cast(meta[relay.Constant][7] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %222 = cast(%var_5322, dtype="float64") /* ty=Tensor[(216, 1), float64] */;
  %223 = atan(%222) /* ty=Tensor[(216, 1), float64] */;
  %224 = cast(%223, dtype="int64") /* ty=Tensor[(216, 1), int64] */;
  %225 = reshape(%221, newshape=[2, 13, 7]) /* ty=Tensor[(2, 13, 7), float32] */;
  %226 = reshape(%224, newshape=[216]) /* ty=Tensor[(216), int64] */;
  %227 = @func_3982(%225, %226) /* ty=(Tensor[(2, 13, 7), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) */;
  %228 = cast(%223, dtype="float32") /* ty=Tensor[(216, 1), float32] */;
  %229 = @func_4109() /* ty=Tensor[(7, 9, 1), float64] */;
  %230 = %211.3;
  %231 = @func_4109() /* ty=Tensor[(7, 9, 1), float64] */;
  %232 = %220.1;
  %233 = %227.2;
  %234 = sigmoid(%228) /* ty=Tensor[(216, 1), float32] */;
  (%229, %230, %var_5290, %231, %232, %var_5321, %233, meta[relay.Constant][7] /* ty=Tensor[(182), float32] */, %234)
}

def @func_1422(%var_1395: Tensor[(9, 9, 7), uint64], %var_1396: Tensor[(9, 9, 7), uint64], %var_1409: Tensor[(216), int64], %var_1410: Tensor[(56), uint8]) -> (Tensor[(9, 9, 7), uint64], Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(8, 7, ?), uint8]) {
  %235 = cast(%var_1396, dtype="uint64") /* ty=Tensor[(9, 9, 7), uint64] */;
  %236 = shape_of(%var_1395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%var_1395, dtype="uint64") /* ty=Tensor[(9, 9, 7), uint64] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %239 = cast(%var_1409, dtype="int64") /* ty=Tensor[(216), int64] */;
  %240 = cast(%var_1410, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %241 = reshape(%239, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %242 = reshape(%240, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %243 = @func_567(%241, %242) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %244 = cast(%var_1410, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %245 = %243.3;
  %246 = cast(%245, dtype="uint8") /* ty=Tensor[(8, 7, 1), uint8] */;
  %247 = reshape(%244, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %248 = reshape(%246, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %249 = @func_295(%247, %248) /* ty=(Tensor[(8, 7, ?), uint8], Tensor[(8, 7, 1), float32]) */;
  %250 = left_shift(%237, %238) /* ty=Tensor[(9, 9, 7), uint64] */;
  %251 = %249.0;
  (%250, %245, %var_1409, %var_1410, %251)
}

def @func_11537() -> (Tensor[(65), float32],) {
  %252 = @func_11287() /* ty=Tensor[(65), float32] */;
  (%252,)
}

def @func_8995() -> (Tensor[(7, 9, 1), float64],) {
  %253 = @func_6627() /* ty=Tensor[(7, 9, 1), float64] */;
  %254 = cast(%253, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
  %255 = acos(%254) /* ty=Tensor[(7, 9, 1), float64] */;
  (%255,)
}

def @func_8147() -> Tensor[(7, 9, 1), float64] {
  %256 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %256.0
}

def @func_13743() -> (Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float32], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) {
  %257 = @func_11514() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %258 = @func_12071() /* ty=Tensor[(5, ?, 13), float64] */;
  %259 = cast(%258, dtype="float32") /* ty=Tensor[(5, ?, 13), float32] */;
  %260 = @func_8049() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %261 = @func_6191() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
  %262 = %257.0;
  %263 = acos(%259) /* ty=Tensor[(5, ?, 13), float32] */;
  %264 = %260.0;
  %265 = %261.0;
  (%262, %263, %264, %265)
}

def @func_12611(%var_12596: Tensor[(150), float64], %var_12597: Tensor[(56), uint8]) -> (Tensor[(65), float32], Tensor[(150), float64], Tensor[(150), float64], Tensor[(56), uint8]) {
  %266 = @func_4578() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
  %267 = cast(%var_12596, dtype="float64") /* ty=Tensor[(150), float64] */;
  %268 = cast(%var_12597, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %269 = reshape(%267, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %270 = reshape(%268, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %271 = @func_7934(%269, %270) /* ty=(Tensor[(5, ?, 13), float64], Tensor[(9, 6, 4), float32], Tensor[(150), float64], Tensor[(56), uint8]) */;
  %272 = %266.1;
  %273 = %271.2;
  (%272, %273, %var_12596, %var_12597)
}

def @func_5030() -> Tensor[(7, 9, 1), float64] {
  %274 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %274.0
}

def @func_14417() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) {
  %275 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %276 = @func_6793() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %277 = @func_11132() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) */;
  %278 = %275.0;
  %279 = %276.1;
  %280 = @func_6506() /* ty=Tensor[(7, 9, 1), float64] */;
  %281 = %277.2;
  (%278, %279, %280, %281)
}

def @func_15003(%var_14999: Tensor[(65), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 65), bool], Tensor[(65), float32]) {
  %282 = @func_14012() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), int8]) */;
  %283 = cast(%var_14999, dtype="float32") /* ty=Tensor[(65), float32] */;
  %284 = reshape(%283, newshape=[65]) /* ty=Tensor[(65), float32] */;
  %285 = @func_7308(%284) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(13608), uint64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 65), bool], Tensor[(7, 9, 1), float64]) */;
  %286 = %282.1;
  %287 = %285.4;
  (%286, %287, %var_14999)
}

def @func_11370(%var_11325: Tensor[(13, 7, 14), float32], %var_11342: Tensor[(2310), float32]) -> (Tensor[(13608), uint64], Tensor[(7, 9, 567), int64], Tensor[(72), float32], Tensor[(3, 24), float32], Tensor[(2310), float32], Tensor[(7, 9, 1), float64], Tensor[(13, 7, 14), float32]) {
  %288 = cast(meta[relay.Constant][9] /* ty=Tensor[(567), uint64] */, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %289 = cast(meta[relay.Constant][8] /* ty=Tensor[(13608), uint64] */, dtype="uint64") /* ty=Tensor[(13608), uint64] */;
  %290 = reshape(%288, newshape=[567]) /* ty=Tensor[(567), uint64] */;
  %291 = reshape(%289, newshape=[7, 9, 216]) /* ty=Tensor[(7, 9, 216), uint64] */;
  %292 = @func_5618(%290, %291) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(65), float32], Tensor[(7, 9, 216), float32]) */;
  %293 = %292.0;
  %294 = cast(%293, dtype="int64") /* ty=Tensor[(7, 9, 1), int64] */;
  %295 = cast(meta[relay.Constant][9] /* ty=Tensor[(567), uint64] */, dtype="int64") /* ty=Tensor[(567), int64] */;
  %296 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %297 = cast(%var_11342, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %298 = reshape(%296, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %299 = reshape(%297, newshape=[2310]) /* ty=Tensor[(2310), float32] */;
  %300 = @func_10617(%298, %299) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(2310), float32], Tensor[(72), float32], Tensor[(2310), float32]) */;
  %301 = @func_6793() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %302 = cast(%var_11325, dtype="float32") /* ty=Tensor[(13, 7, 14), float32] */;
  %303 = sinh(%302) /* ty=Tensor[(13, 7, 14), float32] */;
  %304 = cast(%303, dtype="float32") /* ty=Tensor[(13, 7, 14), float32] */;
  %305 = add(%294, %295) /* ty=Tensor[(7, 9, 567), int64] */;
  %306 = %300.2;
  %307 = %301.0;
  %308 = log2(%304) /* ty=Tensor[(13, 7, 14), float32] */;
  (meta[relay.Constant][8] /* ty=Tensor[(13608), uint64] */, %305, %306, meta[relay.Constant][10] /* ty=Tensor[(3, 24), float32] */, %var_11342, %307, %308)
}

def @func_6627() -> Tensor[(7, 9, 1), float64] {
  %309 = @func_5931() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %309.1
}

def @func_2342(%var_2315: Tensor[(15, 2, 1), bool]) -> (Tensor[(15, 2, ?), bool], Tensor[(15, 2, ?), uint32]) {
  %310 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 2, 1), bool] */, dtype="bool") /* ty=Tensor[(15, 2, 1), bool] */;
  %311 = shape_of(%var_2315, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(%var_2315, dtype="bool") /* ty=Tensor[(15, 2, 1), bool] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %314 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 2, 1), bool] */, dtype="uint32") /* ty=Tensor[(15, 2, 1), uint32] */;
  %315 = shape_of(%var_2315, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%var_2315, dtype="uint32") /* ty=Tensor[(15, 2, 1), uint32] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %318 = logical_or(%312, %313) /* ty=Tensor[(15, 2, ?), bool] */;
  %319 = logical_xor(%316, %317) /* ty=Tensor[(15, 2, ?), uint32] */;
  (%318, %319)
}

def @func_13766() -> (Tensor[(65), float32], Tensor[(7, 9, 1), float64]) {
  %320 = @func_4721() /* ty=Tensor[(65), float32] */;
  %321 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
  (%320, %321)
}

def @func_10003(%var_9987: Tensor[(1008), float32]) -> (Tensor[(12, 6, 14), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1008), bool]) {
  %322 = cast(%var_9987, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %323 = reshape(%322, newshape=[12, 6, 14]) /* ty=Tensor[(12, 6, 14), float32] */;
  %324 = @func_865(%323) /* ty=(Tensor[(12, 6, 14), float32],) */;
  %325 = @func_5733() /* ty=Tensor[(7, 9, 1), float64] */;
  %326 = cast(%325, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  %327 = cast(%var_9987, dtype="bool") /* ty=Tensor[(1008), bool] */;
  %328 = %324.0;
  %329 = @func_9029() /* ty=Tensor[(7, 9, 1), float64] */;
  %330 = logical_or(%326, %327) /* ty=Tensor[(7, 9, 1008), bool] */;
  (%328, %329, %330)
}

def @func_13803() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) {
  %331 = @func_7155() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %332 = @func_12716() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %333 = @func_10057() /* ty=(Tensor[(5, ?, 13), float64],) */;
  %334 = %331.1;
  %335 = %332.0;
  %336 = %333.0;
  (%334, %335, %336)
}

def @func_14644() -> Tensor[(8, 7, ?), uint8] {
  %337 = @func_11750() /* ty=(Tensor[(8, 7, ?), uint8],) */;
  %337.0
}

def @func_4058() -> (Tensor[(7, 9, 1), float64],) {
  %338 = cast(meta[relay.Constant][12] /* ty=Tensor[(7, 9, 1), float64] */, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
  %339 = log2(%338) /* ty=Tensor[(7, 9, 1), float64] */;
  (%339,)
}

def @func_6260() -> (Tensor[(7, 9, 1), float32],) {
  %340 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %341 = %340.0;
  %342 = cast(%341, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
  %343 = exp(%342) /* ty=Tensor[(7, 9, 1), float32] */;
  (%343,)
}

def @func_6506() -> Tensor[(7, 9, 1), float64] {
  %344 = @func_5847() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %344.0
}

def @func_11732(%var_11710: Tensor[(315), float64], %var_11712: Tensor[(1, 150), float64], %var_11726: Tensor[(448), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(216), int64], Tensor[(315), float64], Tensor[(56), uint8], Tensor[(1, 150), float64], Tensor[(4, 14, 8), float32], Tensor[(448), float32]) {
  %345 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %346 = @func_9261() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %347 = @func_10976() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %348 = cast(%var_11710, dtype="float64") /* ty=Tensor[(315), float64] */;
  %349 = cast(meta[relay.Constant][13] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %350 = cast(%var_11712, dtype="float64") /* ty=Tensor[(1, 150), float64] */;
  %351 = reshape(%348, newshape=[7, 9, 5]) /* ty=Tensor[(7, 9, 5), float64] */;
  %352 = reshape(%349, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %353 = reshape(%350, newshape=[150]) /* ty=Tensor[(150), float64] */;
  %354 = @func_4448(%351, %352, %353) /* ty=(Tensor[(7, 9, 5), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, ?), uint8], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(9, 6, 4), float32], Tensor[(150), float64], Tensor[(8, 7, 1), float32], Tensor[(7, 9, 5), float32]) */;
  %355 = cast(%var_11726, dtype="float32") /* ty=Tensor[(448), float32] */;
  %356 = reshape(%355, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float32] */;
  %357 = %345.0;
  %358 = %346.1;
  %359 = %347.0;
  %360 = %354.3;
  %361 = @func_7986(%356) /* ty=Tensor[(4, 14, 8), float32] */;
  (%357, %358, %359, %360, %var_11710, meta[relay.Constant][13] /* ty=Tensor[(56), uint8] */, %var_11712, %361, %var_11726)
}

def @func_10464() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %362 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %363 = @func_8049() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %364 = %362.0;
  %365 = %363.2;
  (%364, %365)
}

def @func_7308(%var_7265: Tensor[(65), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(13608), uint64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 65), bool], Tensor[(7, 9, 1), float64]) {
  %366 = cast(meta[relay.Constant][14] /* ty=Tensor[(567), uint64] */, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %367 = cast(meta[relay.Constant][15] /* ty=Tensor[(13608), uint64] */, dtype="uint64") /* ty=Tensor[(13608), uint64] */;
  %368 = reshape(%366, newshape=[567]) /* ty=Tensor[(567), uint64] */;
  %369 = reshape(%367, newshape=[7, 9, 216]) /* ty=Tensor[(7, 9, 216), uint64] */;
  %370 = @func_5618(%368, %369) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(65), float32], Tensor[(7, 9, 216), float32]) */;
  %371 = %370.2;
  %372 = cast(%var_7265, dtype="bool") /* ty=Tensor[(65), bool] */;
  %373 = shape_of(%371, dtype="int32") /* ty=Tensor[(1), int32] */;
  %374 = cast(%371, dtype="bool") /* ty=Tensor[(65), bool] */;
  %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?), bool] */;
  %376 = less_equal(%374, %375) /* ty=Tensor[(65), bool] */;
  %377 = @func_6654() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %378 = %377.1;
  %379 = cast(%376, dtype="bool") /* ty=Tensor[(65), bool] */;
  %380 = cast(%378, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  %381 = @func_6308() /* ty=Tensor[(7, 9, 1), float64] */;
  %382 = @func_6308() /* ty=Tensor[(7, 9, 1), float64] */;
  %383 = logical_or(%379, %380) /* ty=Tensor[(7, 9, 65), bool] */;
  %384 = @func_6308() /* ty=Tensor[(7, 9, 1), float64] */;
  (%381, meta[relay.Constant][14] /* ty=Tensor[(567), uint64] */, meta[relay.Constant][15] /* ty=Tensor[(13608), uint64] */, %382, %383, %384)
}

def @func_9029() -> Tensor[(7, 9, 1), float64] {
  %385 = @func_5847() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %385.0
}

def @func_8353() -> Tensor[(7, 9, 1), float64] {
  %386 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %387 = %386.0;
  %388 = cast(%387, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
  %389 = sinh(%388) /* ty=Tensor[(7, 9, 1), float32] */;
  %390 = cast(%389, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
  sqrt(%390) /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_14895() -> Tensor[(7, 9, 1), float32] {
  %391 = @func_10165() /* ty=Tensor[(7, 9, 1), float64] */;
  %392 = cast(%391, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
  erf(%392) /* ty=Tensor[(7, 9, 1), float32] */
}

def @func_6120() -> (Tensor[(65), float32],) {
  %393 = @func_4721() /* ty=Tensor[(65), float32] */;
  (%393,)
}

def @func_6690() -> (Tensor[(7, 9, ?), float32],) {
  %394 = @func_6059() /* ty=(Tensor[(7, 9, ?), float32],) */;
  %395 = %394.0;
  (%395,)
}

def @func_5733() -> Tensor[(7, 9, 1), float64] {
  %396 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %396.0
}

def @func_4950(%var_4938: Tensor[(1, 567), uint64]) -> (Tensor[(65), float32], Tensor[(8, 7, ?), uint8], Tensor[(1, 216), int64], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(1, 567), float32]) {
  %397 = cast(%var_4938, dtype="uint64") /* ty=Tensor[(1, 567), uint64] */;
  %398 = cast(%var_4938, dtype="uint64") /* ty=Tensor[(1, 567), uint64] */;
  %399 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 216), int64] */, dtype="int64") /* ty=Tensor[(1, 216), int64] */;
  %400 = cast(meta[relay.Constant][17] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %401 = reshape(%397, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
  %402 = reshape(%398, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
  %403 = reshape(%399, newshape=[216]) /* ty=Tensor[(216), int64] */;
  %404 = reshape(%400, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %405 = @func_1422(%401, %402, %403, %404) /* ty=(Tensor[(9, 9, 7), uint64], Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(8, 7, ?), uint8]) */;
  %406 = cast(%var_4938, dtype="float32") /* ty=Tensor[(1, 567), float32] */;
  %407 = @func_4721() /* ty=Tensor[(65), float32] */;
  %408 = %405.4;
  %409 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
  %410 = exp(%406) /* ty=Tensor[(1, 567), float32] */;
  (%407, %408, meta[relay.Constant][16] /* ty=Tensor[(1, 216), int64] */, meta[relay.Constant][17] /* ty=Tensor[(56), uint8] */, %409, %410)
}

def @func_1190(%var_1167: Tensor[(5, 1, 13), float32]) -> Tensor[(5, ?, 13), float64] {
  %411 = cast(%var_1167, dtype="float32") /* ty=Tensor[(5, 1, 13), float32] */;
  %412 = cos(%411) /* ty=Tensor[(5, 1, 13), float32] */;
  %413 = cast(%var_1167, dtype="bool") /* ty=Tensor[(5, 1, 13), bool] */;
  %414 = shape_of(%412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(%412, dtype="bool") /* ty=Tensor[(5, 1, 13), bool] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %417 = less_equal(%415, %416) /* ty=Tensor[(5, ?, 13), bool] */;
  %418 = cast(%417, dtype="float64") /* ty=Tensor[(5, ?, 13), float64] */;
  %419 = shape_of(%412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(%412, dtype="float64") /* ty=Tensor[(5, 1, 13), float64] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%420, %421) /* ty=Tensor[(5, ?, 13), float64] */
}

def @func_9877() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %422 = @func_6428() /* ty=Tensor[(7, 9, 1), float64] */;
  %423 = @func_8312() /* ty=Tensor[(7, 9, 1), float64] */;
  (%422, %423)
}

def @func_10651(%var_10645: Tensor[(12, 4, 3), float32]) -> (Tensor[(12, 4, 3), float32],) {
  %424 = cast(meta[relay.Constant][18] /* ty=Tensor[(12, 4, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 3), float32] */;
  %425 = shape_of(%var_10645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%var_10645, dtype="float32") /* ty=Tensor[(12, 4, 3), float32] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %428 = subtract(%426, %427) /* ty=Tensor[(12, 4, 3), float32] */;
  (%428,)
}

def @func_4109() -> Tensor[(7, 9, 1), float64] {
  %429 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %429.0
}

def @func_3982(%var_3971: Tensor[(2, 13, 7), float32], %var_3976: Tensor[(216), int64]) -> (Tensor[(2, 13, 7), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) {
  %430 = cast(%var_3971, dtype="float32") /* ty=Tensor[(2, 13, 7), float32] */;
  %431 = cast(%var_3976, dtype="int64") /* ty=Tensor[(216), int64] */;
  %432 = cast(meta[relay.Constant][19] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %433 = reshape(%431, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %434 = reshape(%432, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %435 = @func_567(%433, %434) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %436 = acosh(%430) /* ty=Tensor[(2, 13, 7), float32] */;
  %437 = %435.0;
  (%436, %437, %var_3976, meta[relay.Constant][19] /* ty=Tensor[(56), uint8] */)
}

def @func_5397() -> (Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) {
  %438 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %439 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
  %440 = %438.6;
  (%439, %440)
}

def @func_12119() -> Tensor[(7, 9, 1), float64] {
  @func_6428() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_13244() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), float32], Tensor[(56), uint8]) {
  %441 = cast(meta[relay.Constant][20] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %442 = reshape(%441, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %443 = @func_8726(%442) /* ty=(Tensor[(5, ?, 13), float64], Tensor[(30), bool], Tensor[(252), float64], Tensor[(9, 6, 4), float32], Tensor[(56), uint8], Tensor[(7, 9, ?), float32]) */;
  %444 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
  %445 = %443.5;
  (%444, %445, meta[relay.Constant][20] /* ty=Tensor[(56), uint8] */)
}

def @func_13131() -> (Tensor[(65), float32],) {
  %446 = @func_4578() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
  %447 = %446.1;
  (%447,)
}

def @func_10536() -> (Tensor[(65), float32],) {
  %448 = @func_4721() /* ty=Tensor[(65), float32] */;
  (%448,)
}

def @func_14156() -> Tensor[(7, 9, 1), float64] {
  @func_10244() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_15075() -> (Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(1320), float32]) {
  %449 = @func_10464() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %450 = cast(meta[relay.Constant][21] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %451 = reshape(%450, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
  %452 = @func_6730(%451) /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(11, 8, 15), float64]) */;
  %453 = %449.0;
  %454 = %452.0;
  (%453, %454, meta[relay.Constant][21] /* ty=Tensor[(1320), float32] */)
}

def @func_6191() -> (Tensor[(65), float32], Tensor[(7, 9, 1), float64]) {
  %455 = @func_5522() /* ty=(Tensor[(65), float32],) */;
  %456 = @func_5999() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %457 = %455.0;
  %458 = %456.0;
  (%457, %458)
}

def @func_15196() -> (Tensor[(1008), float32], Tensor[(7, 9, 1008), int64], Tensor[(7, 9, 1008), float32]) {
  %459 = cast(meta[relay.Constant][22] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %460 = reshape(%459, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %461 = @func_10003(%460) /* ty=(Tensor[(12, 6, 14), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1008), bool]) */;
  %462 = %461.2;
  %463 = cast(%462, dtype="float32") /* ty=Tensor[(7, 9, 1008), float32] */;
  %464 = asin(%463) /* ty=Tensor[(7, 9, 1008), float32] */;
  %465 = @func_11874() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %466 = %465.0;
  %467 = cast(%464, dtype="int64") /* ty=Tensor[(7, 9, 1008), int64] */;
  %468 = cast(%466, dtype="int64") /* ty=Tensor[(7, 9, 1), int64] */;
  %469 = cast(%464, dtype="float32") /* ty=Tensor[(7, 9, 1008), float32] */;
  %470 = log10(%469) /* ty=Tensor[(7, 9, 1008), float32] */;
  %471 = cast(%470, dtype="float32") /* ty=Tensor[(7, 9, 1008), float32] */;
  %472 = bitwise_or(%467, %468) /* ty=Tensor[(7, 9, 1008), int64] */;
  %473 = cosh(%471) /* ty=Tensor[(7, 9, 1008), float32] */;
  (meta[relay.Constant][22] /* ty=Tensor[(1008), float32] */, %472, %473)
}

def @func_4389() -> (Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) {
  %474 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %475 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %476 = %474.0;
  %477 = %475.6;
  (%476, %477)
}

def @func_9600(%var_9548: Tensor[(30), bool], %var_9565: Tensor[(448), float32], %var_9590: Tensor[(567), uint64], %var_9591: Tensor[(14, 4), uint8], %var_9594: Tensor[(252), float64]) -> (Tensor[(15, 2, ?), uint32], Tensor[(7, 9, 30), bool], Tensor[(65), float32], Tensor[(4, 14, 8), float32], Tensor[(448), float32], Tensor[(56), uint8], Tensor[(567), uint64], Tensor[(14, 4), uint8], Tensor[(7, 9, 1), float64], Tensor[(252), float64], Tensor[(56), uint8]) {
  %478 = cast(%var_9548, dtype="bool") /* ty=Tensor[(30), bool] */;
  %479 = reshape(%478, newshape=[15, 2, 1]) /* ty=Tensor[(15, 2, 1), bool] */;
  %480 = @func_2342(%479) /* ty=(Tensor[(15, 2, ?), bool], Tensor[(15, 2, ?), uint32]) */;
  %481 = @func_6308() /* ty=Tensor[(7, 9, 1), float64] */;
  %482 = cast(%481, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  %483 = cast(%var_9548, dtype="bool") /* ty=Tensor[(30), bool] */;
  %484 = @func_6180() /* ty=(Tensor[(65), float32],) */;
  %485 = cast(%var_9565, dtype="float32") /* ty=Tensor[(448), float32] */;
  %486 = reshape(%485, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float32] */;
  %487 = cast(%var_9590, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %488 = cast(%var_9591, dtype="uint8") /* ty=Tensor[(14, 4), uint8] */;
  %489 = reshape(%487, newshape=[189, 3]) /* ty=Tensor[(189, 3), uint64] */;
  %490 = reshape(%488, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %491 = @func_7525(%489, %490) /* ty=(Tensor[(7, 9, ?), float32], Tensor[(9, 9, 7), uint64], Tensor[(189, 3), uint64], Tensor[(216), int64], Tensor[(56), uint8]) */;
  %492 = cast(%var_9594, dtype="float64") /* ty=Tensor[(252), float64] */;
  %493 = reshape(%492, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %494 = @func_7710(%493) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 4), uint16], Tensor[(15, 2, ?), uint32], Tensor[(30), bool], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 2, ?), bool], Tensor[(7, 9, 1), float64]) */;
  %495 = cast(%var_9591, dtype="uint8") /* ty=Tensor[(14, 4), uint8] */;
  %496 = reshape(%495, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %497 = @func_8726(%496) /* ty=(Tensor[(5, ?, 13), float64], Tensor[(30), bool], Tensor[(252), float64], Tensor[(9, 6, 4), float32], Tensor[(56), uint8], Tensor[(7, 9, ?), float32]) */;
  %498 = %480.1;
  %499 = greater(%482, %483) /* ty=Tensor[(7, 9, 30), bool] */;
  %500 = %484.0;
  %501 = @func_7986(%486) /* ty=Tensor[(4, 14, 8), float32] */;
  %502 = %491.4;
  %503 = %494.4;
  %504 = %497.4;
  (%498, %499, %500, %501, %var_9565, %502, %var_9590, %var_9591, %503, %var_9594, %504)
}

def @func_13088(%var_12928: Tensor[(256), float32], %var_12997: Tensor[(30), bool], %var_13053: Tensor[(7, 9, 8), float64]) -> (Tensor[(7, 9, 1), float64], Tensor[(14, 4), uint8], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 256), int64], Tensor[(8, 4, 8), uint8], Tensor[(7, 9, 1), float64], Tensor[(30), bool], Tensor[(7, 9, 1), float64], Tensor[(15, 2, 13608), float64], Tensor[(7, 9, 8), bool], Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(1320), float32], Tensor[(9, 10, 4), float32], Tensor[(360), float32]) {
  %505 = cast(meta[relay.Constant][23] /* ty=Tensor[(13608), uint64] */, dtype="uint64") /* ty=Tensor[(13608), uint64] */;
  %506 = cast(meta[relay.Constant][24] /* ty=Tensor[(14, 4), uint8] */, dtype="uint8") /* ty=Tensor[(14, 4), uint8] */;
  %507 = reshape(%505, newshape=[18, 756]) /* ty=Tensor[(18, 756), uint64] */;
  %508 = reshape(%506, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %509 = @func_7121(%507, %508) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(9, 6, 4), float32], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 216), float32], Tensor[(18, 756), float64]) */;
  %510 = @func_8679() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %511 = %510.0;
  %512 = cast(%var_12928, dtype="int64") /* ty=Tensor[(256), int64] */;
  %513 = cast(%511, dtype="int64") /* ty=Tensor[(7, 9, 1), int64] */;
  %514 = cast(%var_12928, dtype="float32") /* ty=Tensor[(256), float32] */;
  %515 = cast(%var_12928, dtype="float32") /* ty=Tensor[(256), float32] */;
  %516 = reshape(%514, newshape=[8, 4, 8]) /* ty=Tensor[(8, 4, 8), float32] */;
  %517 = reshape(%515, newshape=[8, 4, 8]) /* ty=Tensor[(8, 4, 8), float32] */;
  %518 = @func_5813(%516, %517) /* ty=(Tensor[(8, 4, 8), float32],) */;
  %519 = %518.0;
  %520 = cast(%var_12928, dtype="uint8") /* ty=Tensor[(256), uint8] */;
  %521 = shape_of(%519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%519, dtype="uint8") /* ty=Tensor[(8, 4, 8), uint8] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %524 = cast(%var_12997, dtype="bool") /* ty=Tensor[(30), bool] */;
  %525 = reshape(%524, newshape=[15, 2, 1]) /* ty=Tensor[(15, 2, 1), bool] */;
  %526 = @func_2342(%525) /* ty=(Tensor[(15, 2, ?), bool], Tensor[(15, 2, ?), uint32]) */;
  %527 = %526.1;
  %528 = cast(meta[relay.Constant][23] /* ty=Tensor[(13608), uint64] */, dtype="float64") /* ty=Tensor[(13608), float64] */;
  %529 = cast(%527, dtype="float64") /* ty=Tensor[(15, 2, ?), float64] */;
  %530 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
  %531 = cast(%530, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  %532 = cast(%var_13053, dtype="bool") /* ty=Tensor[(7, 9, 8), bool] */;
  %533 = cast(meta[relay.Constant][25] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %534 = reshape(%533, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
  %535 = @func_6730(%534) /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(11, 8, 15), float64]) */;
  %536 = cast(meta[relay.Constant][26] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %537 = reshape(%536, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), float32] */;
  %538 = %509.6;
  %539 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
  %540 = bitwise_or(%512, %513) /* ty=Tensor[(7, 9, 256), int64] */;
  %541 = bitwise_or(%522, %523) /* ty=Tensor[(8, 4, 8), uint8] */;
  %542 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
  %543 = @func_12664() /* ty=Tensor[(7, 9, 1), float64] */;
  %544 = mod(%528, %529) /* ty=Tensor[(15, 2, 13608), float64] */;
  %545 = less_equal(%531, %532) /* ty=Tensor[(7, 9, 8), bool] */;
  %546 = @func_6506() /* ty=Tensor[(7, 9, 1), float64] */;
  %547 = %535.0;
  %548 = @func_7995(%537) /* ty=Tensor[(9, 10, 4), float32] */;
  (%538, meta[relay.Constant][24] /* ty=Tensor[(14, 4), uint8] */, %539, %540, %541, %542, %var_12997, %543, %544, %545, %546, %547, meta[relay.Constant][25] /* ty=Tensor[(1320), float32] */, %548, meta[relay.Constant][26] /* ty=Tensor[(360), float32] */)
}

def @func_5522() -> (Tensor[(65), float32],) {
  %549 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %550 = %549.7;
  (%550,)
}

def @func_7414(%var_7406: Tensor[(65), float32]) -> Tensor[(65), int64] {
  %551 = @func_6120() /* ty=(Tensor[(65), float32],) */;
  %552 = %551.0;
  %553 = cast(%var_7406, dtype="int64") /* ty=Tensor[(65), int64] */;
  %554 = shape_of(%552, dtype="int32") /* ty=Tensor[(1), int32] */;
  %555 = cast(%552, dtype="int64") /* ty=Tensor[(65), int64] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?), int64] */;
  left_shift(%555, %556) /* ty=Tensor[(65), int64] */
}

def @func_6730(%var_6692: Tensor[(11, 8, 15), float32]) -> (Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(11, 8, 15), float64]) {
  %557 = @func_5999() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %558 = cast(%var_6692, dtype="float32") /* ty=Tensor[(11, 8, 15), float32] */;
  %559 = atanh(%558) /* ty=Tensor[(11, 8, 15), float32] */;
  %560 = cast(%559, dtype="float64") /* ty=Tensor[(11, 8, 15), float64] */;
  %561 = @func_6299() /* ty=Tensor[(65), float32] */;
  %562 = %557.0;
  %563 = cos(%560) /* ty=Tensor[(11, 8, 15), float64] */;
  (%561, %562, %563)
}

def @func_7806(%var_7794: Tensor[(14, 12, 10), float32]) -> (Tensor[(14, 12, 10), float32],) {
  %564 = cast(%var_7794, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %565 = cos(%564) /* ty=Tensor[(14, 12, 10), float32] */;
  (%565,)
}

def @func_10976() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %566 = @func_10509() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %567 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %568 = %566.0;
  %569 = %567.0;
  (%568, %569)
}

def @func_7155() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %570 = @func_5225() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %571 = %570.0;
  %572 = @func_6428() /* ty=Tensor[(7, 9, 1), float64] */;
  (%571, %572)
}

def @func_5904() -> (Tensor[(7, 9, 1), float64],) {
  %573 = @func_5676() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %574 = %573.0;
  (%574,)
}

def @func_7891(%var_7844: Tensor[(7, 9, 12), float64], %var_7865: Tensor[(56), uint8]) -> (Tensor[(7, 9, 12), uint8], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(216, 1), float32]) {
  %575 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %576 = %575.0;
  %577 = cast(%576, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  %578 = cast(%var_7844, dtype="bool") /* ty=Tensor[(7, 9, 12), bool] */;
  %579 = logical_and(%577, %578) /* ty=Tensor[(7, 9, 12), bool] */;
  %580 = cast(%var_7844, dtype="uint8") /* ty=Tensor[(7, 9, 12), uint8] */;
  %581 = shape_of(%579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %582 = cast(%579, dtype="uint8") /* ty=Tensor[(7, 9, 12), uint8] */;
  %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %584 = cast(meta[relay.Constant][27] /* ty=Tensor[(216, 1), int64] */, dtype="int64") /* ty=Tensor[(216, 1), int64] */;
  %585 = cast(%var_7865, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %586 = reshape(%584, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %587 = reshape(%585, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %588 = @func_567(%586, %587) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %589 = cast(meta[relay.Constant][27] /* ty=Tensor[(216, 1), int64] */, dtype="float32") /* ty=Tensor[(216, 1), float32] */;
  %590 = logical_xor(%582, %583) /* ty=Tensor[(7, 9, 12), uint8] */;
  %591 = %588.1;
  %592 = acosh(%589) /* ty=Tensor[(216, 1), float32] */;
  (%590, %591, %var_7865, %592)
}

def @func_5489() -> (Tensor[(5, ?, 13), float64],) {
  %593 = @func_4389() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
  %594 = %593.1;
  (%594,)
}

def @func_13651() -> (Tensor[(65), float32], Tensor[(8, 7, ?), uint8]) {
  %595 = @func_13131() /* ty=(Tensor[(65), float32],) */;
  %596 = @func_8196() /* ty=(Tensor[(7, 9, ?), bool], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8]) */;
  %597 = %595.0;
  %598 = %596.1;
  (%597, %598)
}

def @func_8448() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), float32]) {
  %599 = @func_5931() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %600 = @func_6690() /* ty=(Tensor[(7, 9, ?), float32],) */;
  %601 = %599.0;
  %602 = %600.0;
  (%601, %602)
}

def @func_12487() -> (Tensor[(5, ?, 13), float64], Tensor[(65), float32]) {
  %603 = @func_4389() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
  %604 = @func_6120() /* ty=(Tensor[(65), float32],) */;
  %605 = %603.1;
  %606 = %604.0;
  (%605, %606)
}

def @func_8129() -> (Tensor[(5, ?, 13), float64],) {
  %607 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %608 = %607.6;
  (%608,)
}

def @func_9825(%var_9815: Tensor[(7, 9, 14), float64]) -> Tensor[(7, 9, 14), int16] {
  %609 = @func_7183() /* ty=Tensor[(7, 9, 1), float64] */;
  %610 = cast(%609, dtype="int16") /* ty=Tensor[(7, 9, 1), int16] */;
  %611 = cast(%var_9815, dtype="int16") /* ty=Tensor[(7, 9, 14), int16] */;
  bitwise_or(%610, %611) /* ty=Tensor[(7, 9, 14), int16] */
}

def @func_12071() -> Tensor[(5, ?, 13), float64] {
  %612 = @func_5489() /* ty=(Tensor[(5, ?, 13), float64],) */;
  %612.0
}

def @func_6059() -> (Tensor[(7, 9, ?), float32],) {
  %613 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %614 = %613.0;
  %615 = @func_5397() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
  %616 = %615.0;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
  %618 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%614, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %621 = multiply(%619, %620) /* ty=Tensor[(7, 9, ?), float32] */;
  (%621,)
}

def @func_14029() -> (Tensor[(7, 9, 1), float64],) {
  %622 = @func_10711() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %623 = %622.0;
  (%623,)
}

def @func_8501(%var_8480: Tensor[(1008), float32], %var_8499: Tensor[(13, 5), float32]) -> (Tensor[(12, 6, 14), float32], Tensor[(7, 9, 1008), uint32], Tensor[(65), int64], Tensor[(13, 5), float32]) {
  %624 = cast(%var_8480, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %625 = reshape(%624, newshape=[12, 6, 14]) /* ty=Tensor[(12, 6, 14), float32] */;
  %626 = @func_865(%625) /* ty=(Tensor[(12, 6, 14), float32],) */;
  %627 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %628 = %627.0;
  %629 = cast(%var_8480, dtype="uint32") /* ty=Tensor[(1008), uint32] */;
  %630 = cast(%628, dtype="uint32") /* ty=Tensor[(7, 9, 1), uint32] */;
  %631 = cast(%var_8499, dtype="float32") /* ty=Tensor[(13, 5), float32] */;
  %632 = reshape(%631, newshape=[65]) /* ty=Tensor[(65), float32] */;
  %633 = %626.0;
  %634 = bitwise_xor(%629, %630) /* ty=Tensor[(7, 9, 1008), uint32] */;
  %635 = @func_7414(%632) /* ty=Tensor[(65), int64] */;
  (%633, %634, %635, %var_8499)
}

def @func_8814(%var_8808: Tensor[(756), float64]) -> (Tensor[(7, 9, 1), float32], Tensor[(567), uint64], Tensor[(36, 6), int64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 56), uint8], Tensor[(216, 1), float32], Tensor[(7, 9, 756), int32]) {
  %636 = @func_6260() /* ty=(Tensor[(7, 9, 1), float32],) */;
  %637 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %638 = cast(meta[relay.Constant][30] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %639 = cast(meta[relay.Constant][28] /* ty=Tensor[(567), uint64] */, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %640 = cast(meta[relay.Constant][29] /* ty=Tensor[(36, 6), int64] */, dtype="int64") /* ty=Tensor[(36, 6), int64] */;
  %641 = reshape(%638, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %642 = reshape(%639, newshape=[567, 1]) /* ty=Tensor[(567, 1), uint64] */;
  %643 = reshape(%640, newshape=[216, 1]) /* ty=Tensor[(216, 1), int64] */;
  %644 = @func_5343(%641, %642, %643) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, 1), float32], Tensor[(567, 1), uint64], Tensor[(216), int64], Tensor[(182), float32], Tensor[(216, 1), float32]) */;
  %645 = %644.3;
  %646 = cast(%645, dtype="uint8") /* ty=Tensor[(7, 9, 1), uint8] */;
  %647 = cast(meta[relay.Constant][30] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %648 = cast(%var_8808, dtype="float64") /* ty=Tensor[(756), float64] */;
  %649 = cast(meta[relay.Constant][30] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %650 = reshape(%648, newshape=[7, 9, 12]) /* ty=Tensor[(7, 9, 12), float64] */;
  %651 = reshape(%649, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %652 = @func_7891(%650, %651) /* ty=(Tensor[(7, 9, 12), uint8], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(216, 1), float32]) */;
  %653 = cast(%var_8808, dtype="int32") /* ty=Tensor[(756), int32] */;
  %654 = cast(%645, dtype="int32") /* ty=Tensor[(7, 9, 1), int32] */;
  %655 = %636.0;
  %656 = %637.0;
  %657 = subtract(%646, %647) /* ty=Tensor[(7, 9, 56), uint8] */;
  %658 = %652.3;
  %659 = bitwise_xor(%653, %654) /* ty=Tensor[(7, 9, 756), int32] */;
  (%655, meta[relay.Constant][28] /* ty=Tensor[(567), uint64] */, meta[relay.Constant][29] /* ty=Tensor[(36, 6), int64] */, %656, %657, %658, %659)
}

def @func_5999() -> (Tensor[(7, 9, 1), float64],) {
  %660 = @func_5904() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %661 = %660.0;
  (%661,)
}

def @func_6428() -> Tensor[(7, 9, 1), float64] {
  %662 = @func_5397() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
  %662.0
}

def @func_14311() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %663 = @func_13330() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %664 = %663.0;
  %665 = @func_10357() /* ty=Tensor[(7, 9, 1), float64] */;
  (%664, %665)
}

def @func_9179() -> Tensor[(7, 9, 1), float64] {
  @func_6428() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_5067() -> (Tensor[(7, 9, 1), float64],) {
  %666 = @func_4109() /* ty=Tensor[(7, 9, 1), float64] */;
  (%666,)
}

def @func_6299() -> Tensor[(65), float32] {
  %667 = @func_6191() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
  %667.0
}

def @func_4768(%var_4765: Tensor[(56), uint8]) -> (Tensor[(65), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) {
  %668 = cast(meta[relay.Constant][31] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
  %669 = cast(%var_4765, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %670 = reshape(%668, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %671 = reshape(%669, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %672 = @func_567(%670, %671) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %673 = @func_4721() /* ty=Tensor[(65), float32] */;
  %674 = %672.0;
  (%673, %674, meta[relay.Constant][31] /* ty=Tensor[(216), int64] */, %var_4765)
}

def @func_8667() -> (Tensor[(65), float32],) {
  %675 = @func_6299() /* ty=Tensor[(65), float32] */;
  (%675,)
}

def @func_11033() -> Tensor[(65), float32] {
  @func_6299() /* ty=Tensor[(65), float32] */
}

def @func_11630(%var_11607: Tensor[(2310), float32], %var_11623: Tensor[(256), float32]) -> (Tensor[(5, ?, 13), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), int32], Tensor[(8, 4, 8), float64]) {
  %676 = @func_10057() /* ty=(Tensor[(5, ?, 13), float64],) */;
  %677 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %678 = cast(%var_11607, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %679 = reshape(%678, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), float32] */;
  %680 = @func_6331(%679) /* ty=Tensor[(15, 11, 14), float32] */;
  %681 = cast(%var_11607, dtype="int32") /* ty=Tensor[(2310), int32] */;
  %682 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %683 = cast(%680, dtype="int32") /* ty=Tensor[(15, 11, 14), int32] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %685 = cast(%var_11623, dtype="float32") /* ty=Tensor[(256), float32] */;
  %686 = cast(%var_11623, dtype="float32") /* ty=Tensor[(256), float32] */;
  %687 = reshape(%685, newshape=[8, 4, 8]) /* ty=Tensor[(8, 4, 8), float32] */;
  %688 = reshape(%686, newshape=[8, 4, 8]) /* ty=Tensor[(8, 4, 8), float32] */;
  %689 = @func_5813(%687, %688) /* ty=(Tensor[(8, 4, 8), float32],) */;
  %690 = %689.0;
  %691 = cast(%var_11623, dtype="float64") /* ty=Tensor[(256), float64] */;
  %692 = shape_of(%690, dtype="int32") /* ty=Tensor[(3), int32] */;
  %693 = cast(%690, dtype="float64") /* ty=Tensor[(8, 4, 8), float64] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %695 = %676.0;
  %696 = %677.0;
  %697 = minimum(%683, %684) /* ty=Tensor[(15, 11, 14), int32] */;
  %698 = divide(%693, %694) /* ty=Tensor[(8, 4, 8), float64] */;
  (%695, %696, %697, %698)
}

def @func_6903() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %699 = @func_6308() /* ty=Tensor[(7, 9, 1), float64] */;
  %700 = @func_6506() /* ty=Tensor[(7, 9, 1), float64] */;
  (%699, %700)
}

def @func_8196() -> (Tensor[(7, 9, ?), bool], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8]) {
  %701 = @func_6059() /* ty=(Tensor[(7, 9, ?), float32],) */;
  %702 = %701.0;
  %703 = @func_6428() /* ty=Tensor[(7, 9, 1), float64] */;
  %704 = cast(%703, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  %705 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%702, dtype="bool") /* ty=Tensor[(7, 9, ?), bool] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %708 = cast(meta[relay.Constant][32] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %709 = cast(meta[relay.Constant][32] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %710 = reshape(%708, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %711 = reshape(%709, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %712 = @func_295(%710, %711) /* ty=(Tensor[(8, 7, ?), uint8], Tensor[(8, 7, 1), float32]) */;
  %713 = not_equal(%706, %707) /* ty=Tensor[(7, 9, ?), bool] */;
  %714 = %712.0;
  (%713, %714, meta[relay.Constant][32] /* ty=Tensor[(56), uint8] */)
}

def @main(%var_15291: Tensor[(7, 9, 14), float64]) -> Tensor[(7, 9, 14), bool] {
  %715 = @func_12119() /* ty=Tensor[(7, 9, 1), float64] */;
  %716 = cast(%715, dtype="int8") /* ty=Tensor[(7, 9, 1), int8] */;
  %717 = cast(%var_15291, dtype="int8") /* ty=Tensor[(7, 9, 14), int8] */;
  %718 = logical_xor(%716, %717) /* ty=Tensor[(7, 9, 14), int8] */;
  %719 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
  %720 = cast(%718, dtype="bool") /* ty=Tensor[(7, 9, 14), bool] */;
  %721 = cast(%719, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  logical_or(%720, %721) /* ty=Tensor[(7, 9, 14), bool] */
}

def @func_14954(%var_14947: Tensor[(14, 4, 1), float64]) -> (Tensor[(14, 4, 1), float64],) {
  %722 = cast(%var_14947, dtype="float64") /* ty=Tensor[(14, 4, 1), float64] */;
  %723 = sigmoid(%722) /* ty=Tensor[(14, 4, 1), float64] */;
  (%723,)
}

def @func_4448(%var_4404: Tensor[(7, 9, 5), float64], %var_4429: Tensor[(56), uint8], %var_4433: Tensor[(150), float64]) -> (Tensor[(7, 9, 5), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, ?), uint8], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(9, 6, 4), float32], Tensor[(150), float64], Tensor[(8, 7, 1), float32], Tensor[(7, 9, 5), float32]) {
  %724 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %725 = %724.0;
  %726 = cast(%725, dtype="uint8") /* ty=Tensor[(7, 9, 1), uint8] */;
  %727 = cast(%var_4404, dtype="uint8") /* ty=Tensor[(7, 9, 5), uint8] */;
  %728 = cast(meta[relay.Constant][33] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
  %729 = cast(%var_4429, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %730 = reshape(%728, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %731 = reshape(%729, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %732 = @func_567(%730, %731) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %733 = cast(%var_4433, dtype="float64") /* ty=Tensor[(150), float64] */;
  %734 = cast(%var_4429, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %735 = reshape(%733, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), float64] */;
  %736 = reshape(%734, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %737 = @func_1079(%735, %736) /* ty=(Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(15, 5, 2), float64], Tensor[(9, 6, 4), float32], Tensor[(8, 7, 1), float32], Tensor[(15, 5, 2), float64]) */;
  %738 = %737.4;
  %739 = cast(%738, dtype="int64") /* ty=Tensor[(9, 6, 4), int64] */;
  %740 = %732.1;
  %741 = cast(%740, dtype="uint8") /* ty=Tensor[(8, 7, ?), uint8] */;
  %742 = reshape(%739, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %743 = reshape(%741, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %744 = @func_567(%742, %743) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %745 = cast(%var_4404, dtype="float64") /* ty=Tensor[(7, 9, 5), float64] */;
  %746 = sinh(%745) /* ty=Tensor[(7, 9, 5), float64] */;
  %747 = cast(%746, dtype="float32") /* ty=Tensor[(7, 9, 5), float32] */;
  %748 = left_shift(%726, %727) /* ty=Tensor[(7, 9, 5), uint8] */;
  %749 = @func_4109() /* ty=Tensor[(7, 9, 1), float64] */;
  %750 = %744.3;
  %751 = acos(%747) /* ty=Tensor[(7, 9, 5), float32] */;
  (%748, %749, %740, meta[relay.Constant][33] /* ty=Tensor[(216), int64] */, %var_4429, %738, %var_4433, %750, %751)
}

def @func_5225() -> (Tensor[(7, 9, 1), float64],) {
  %752 = @func_4389() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
  %753 = %752.0;
  %754 = cast(%753, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
  %755 = atanh(%754) /* ty=Tensor[(7, 9, 1), float64] */;
  (%755,)
}

def @func_5813(%var_5799: Tensor[(8, 4, 8), float32], %var_5800: Tensor[(8, 4, 8), float32]) -> (Tensor[(8, 4, 8), float32],) {
  %756 = cast(%var_5800, dtype="float32") /* ty=Tensor[(8, 4, 8), float32] */;
  %757 = shape_of(%var_5799, dtype="int32") /* ty=Tensor[(3), int32] */;
  %758 = cast(%var_5799, dtype="float32") /* ty=Tensor[(8, 4, 8), float32] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %760 = floor_mod(%758, %759) /* ty=Tensor[(8, 4, 8), float32] */;
  (%760,)
}

def @func_14580(%var_14555: Tensor[(5, 6), uint8]) -> (Tensor[(5, 12, 13), bool], Tensor[(56), uint8], Tensor[(5, 6), uint8], Tensor[(150), uint8], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(7, 9, 567), bool]) {
  %761 = @func_12071() /* ty=Tensor[(5, ?, 13), float64] */;
  %762 = cast(%761, dtype="bool") /* ty=Tensor[(5, ?, 13), bool] */;
  %763 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 12, 13), float64] */, dtype="bool") /* ty=Tensor[(5, 12, 13), bool] */;
  %764 = cast(%var_14555, dtype="uint8") /* ty=Tensor[(5, 6), uint8] */;
  %765 = cast(meta[relay.Constant][35] /* ty=Tensor[(150), uint8] */, dtype="uint8") /* ty=Tensor[(150), uint8] */;
  %766 = cast(meta[relay.Constant][36] /* ty=Tensor[(567), uint64] */, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %767 = cast(meta[relay.Constant][37] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
  %768 = cast(meta[relay.Constant][38] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %769 = reshape(%764, newshape=[6, 1, 5]) /* ty=Tensor[(6, 1, 5), uint8] */;
  %770 = reshape(%765, newshape=[6, 5, 5]) /* ty=Tensor[(6, 5, 5), uint8] */;
  %771 = reshape(%766, newshape=[9, 63]) /* ty=Tensor[(9, 63), uint64] */;
  %772 = reshape(%767, newshape=[216]) /* ty=Tensor[(216), int64] */;
  %773 = reshape(%768, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %774 = @func_10380(%769, %770, %771, %772, %773) /* ty=(Tensor[(6, 5, 5), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, ?), uint8], Tensor[(9, 63), uint64], Tensor[(216), int64], Tensor[(56), uint8]) */;
  %775 = @func_10838() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %776 = %775.1;
  %777 = cast(meta[relay.Constant][36] /* ty=Tensor[(567), uint64] */, dtype="bool") /* ty=Tensor[(567), bool] */;
  %778 = cast(%776, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  %779 = equal(%762, %763) /* ty=Tensor[(5, 12, 13), bool] */;
  %780 = %774.5;
  %781 = logical_and(%777, %778) /* ty=Tensor[(7, 9, 567), bool] */;
  (%779, %780, %var_14555, meta[relay.Constant][35] /* ty=Tensor[(150), uint8] */, meta[relay.Constant][37] /* ty=Tensor[(216), int64] */, meta[relay.Constant][38] /* ty=Tensor[(56), uint8] */, %781)
}

def @func_7183() -> Tensor[(7, 9, 1), float64] {
  %782 = @func_6191() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
  %782.1
}

def @func_8049() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %783 = @func_5999() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %784 = @func_5225() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %785 = @func_6627() /* ty=Tensor[(7, 9, 1), float64] */;
  %786 = %783.0;
  %787 = %784.0;
  (%785, %786, %787)
}

def @func_7193() -> Tensor[(7, 9, 1), float64] {
  %788 = @func_5676() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %788.0
}

def @func_10380(%var_10360: Tensor[(6, 1, 5), uint8], %var_10361: Tensor[(6, 5, 5), uint8], %var_10373: Tensor[(9, 63), uint64], %var_10374: Tensor[(216), int64], %var_10375: Tensor[(56), uint8]) -> (Tensor[(6, 5, 5), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, ?), uint8], Tensor[(9, 63), uint64], Tensor[(216), int64], Tensor[(56), uint8]) {
  %789 = cast(%var_10360, dtype="uint8") /* ty=Tensor[(6, 1, 5), uint8] */;
  %790 = cast(%var_10361, dtype="uint8") /* ty=Tensor[(6, 5, 5), uint8] */;
  %791 = @func_8679() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %792 = cast(%var_10373, dtype="uint64") /* ty=Tensor[(9, 63), uint64] */;
  %793 = cast(%var_10373, dtype="uint64") /* ty=Tensor[(9, 63), uint64] */;
  %794 = cast(%var_10374, dtype="int64") /* ty=Tensor[(216), int64] */;
  %795 = cast(%var_10375, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %796 = reshape(%792, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
  %797 = reshape(%793, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
  %798 = reshape(%794, newshape=[216]) /* ty=Tensor[(216), int64] */;
  %799 = reshape(%795, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %800 = @func_1422(%796, %797, %798, %799) /* ty=(Tensor[(9, 9, 7), uint64], Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(8, 7, ?), uint8]) */;
  %801 = maximum(%789, %790) /* ty=Tensor[(6, 5, 5), uint8] */;
  %802 = %791.0;
  %803 = %800.4;
  (%801, %802, %803, %var_10373, %var_10374, %var_10375)
}

def @func_9113(%var_9034: Tensor[(3, 8, 3), float32], %var_9075: Tensor[(2310), float32]) -> (Tensor[(3, 8, 3), float32], Tensor[(3, 8, 3), float32], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %804 = cast(%var_9034, dtype="float32") /* ty=Tensor[(3, 8, 3), float32] */;
  %805 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(3, 8, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %806 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 8, 3), float32] */, dtype="float32") /* ty=Tensor[(3, 8, 3), float32] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %808 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 8, 3), float32] */, dtype="float64") /* ty=Tensor[(3, 8, 3), float64] */;
  %809 = rsqrt(%808) /* ty=Tensor[(3, 8, 3), float64] */;
  %810 = cast(%809, dtype="float32") /* ty=Tensor[(3, 8, 3), float32] */;
  %811 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %812 = cast(%var_9075, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %813 = reshape(%812, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), float32] */;
  %814 = @func_5397() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
  %815 = mod(%806, %807) /* ty=Tensor[(3, 8, 3), float32] */;
  %816 = sinh(%810) /* ty=Tensor[(3, 8, 3), float32] */;
  %817 = %811.0;
  %818 = @func_6331(%813) /* ty=Tensor[(15, 11, 14), float32] */;
  %819 = @func_8353() /* ty=Tensor[(7, 9, 1), float64] */;
  %820 = @func_7183() /* ty=Tensor[(7, 9, 1), float64] */;
  %821 = %814.0;
  %822 = @func_8353() /* ty=Tensor[(7, 9, 1), float64] */;
  (%815, %816, %817, %818, %var_9075, %819, %820, %821, %822)
}

def @func_14816(%var_14807: Tensor[(30), bool], %var_14808: Tensor[(504), float64]) -> (Tensor[(65), float32], Tensor[(65), float32], Tensor[(360), float32], Tensor[(256), float32], Tensor[(30), bool], Tensor[(504), float64]) {
  %823 = @func_13131() /* ty=(Tensor[(65), float32],) */;
  %824 = cast(meta[relay.Constant][40] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %825 = cast(%var_14807, dtype="bool") /* ty=Tensor[(30), bool] */;
  %826 = cast(%var_14808, dtype="float64") /* ty=Tensor[(504), float64] */;
  %827 = reshape(%824, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %828 = reshape(%825, newshape=[30]) /* ty=Tensor[(30), bool] */;
  %829 = reshape(%826, newshape=[7, 9, 8]) /* ty=Tensor[(7, 9, 8), float64] */;
  %830 = @func_13088(%827, %828, %829) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(14, 4), uint8], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 256), int64], Tensor[(8, 4, 8), uint8], Tensor[(7, 9, 1), float64], Tensor[(30), bool], Tensor[(7, 9, 1), float64], Tensor[(15, 2, 13608), float64], Tensor[(7, 9, 8), bool], Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(1320), float32], Tensor[(9, 10, 4), float32], Tensor[(360), float32]) */;
  %831 = %823.0;
  %832 = @func_4721() /* ty=Tensor[(65), float32] */;
  %833 = %830.14;
  (%831, %832, %833, meta[relay.Constant][40] /* ty=Tensor[(256), float32] */, %var_14807, %var_14808)
}

def @func_567(%var_514: Tensor[(9, 6, 4), int64], %var_539: Tensor[(56), uint8]) -> (Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) {
  %834 = cast(meta[relay.Constant][41] /* ty=Tensor[(9, 6, 4), int64] */, dtype="int64") /* ty=Tensor[(9, 6, 4), int64] */;
  %835 = shape_of(%var_514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %836 = cast(%var_514, dtype="int64") /* ty=Tensor[(9, 6, 4), int64] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %838 = bitwise_or(%836, %837) /* ty=Tensor[(9, 6, 4), int64] */;
  %839 = cast(%838, dtype="float32") /* ty=Tensor[(9, 6, 4), float32] */;
  %840 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(9, 6, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %841 = cast(meta[relay.Constant][41] /* ty=Tensor[(9, 6, 4), int64] */, dtype="float32") /* ty=Tensor[(9, 6, 4), float32] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %843 = cast(%var_539, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %844 = cast(%var_539, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %845 = reshape(%843, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %846 = reshape(%844, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %847 = @func_295(%845, %846) /* ty=(Tensor[(8, 7, ?), uint8], Tensor[(8, 7, 1), float32]) */;
  %848 = %847.0;
  %849 = cast(%848, dtype="uint8") /* ty=Tensor[(8, 7, ?), uint8] */;
  %850 = cast(%var_539, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %851 = reshape(%849, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %852 = reshape(%850, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %853 = @func_295(%851, %852) /* ty=(Tensor[(8, 7, ?), uint8], Tensor[(8, 7, 1), float32]) */;
  %854 = floor_mod(%841, %842) /* ty=Tensor[(9, 6, 4), float32] */;
  %855 = %853.1;
  (%854, %848, %var_539, %855)
}

def @func_9261() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %856 = @func_5067() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %857 = @func_5225() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %858 = %856.0;
  %859 = %857.0;
  %860 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
  (%858, %859, %860)
}

def @func_4175() -> Tensor[(7, 9, 1), float64] {
  %861 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %861.0
}

def @func_9795() -> (Tensor[(7, 9, 1), float64], Tensor[(12, 6, 14), float32], Tensor[(1008), float32], Tensor[(8, 7, ?), uint8]) {
  %862 = @func_8061() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %863 = cast(meta[relay.Constant][42] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %864 = reshape(%863, newshape=[12, 6, 14]) /* ty=Tensor[(12, 6, 14), float32] */;
  %865 = @func_865(%864) /* ty=(Tensor[(12, 6, 14), float32],) */;
  %866 = @func_8196() /* ty=(Tensor[(7, 9, ?), bool], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8]) */;
  %867 = %862.0;
  %868 = %865.0;
  %869 = %866.1;
  (%867, %868, meta[relay.Constant][42] /* ty=Tensor[(1008), float32] */, %869)
}

def @func_13584() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %870 = @func_6903() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %871 = @func_6903() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %872 = %870.0;
  %873 = @func_10165() /* ty=Tensor[(7, 9, 1), float64] */;
  %874 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
  %875 = @func_11488() /* ty=Tensor[(7, 9, 1), float64] */;
  %876 = @func_5733() /* ty=Tensor[(7, 9, 1), float64] */;
  %877 = @func_6627() /* ty=Tensor[(7, 9, 1), float64] */;
  %878 = @func_8147() /* ty=Tensor[(7, 9, 1), float64] */;
  %879 = %871.0;
  (%872, %873, %874, %875, %876, %877, %878, %879)
}

def @func_11177() -> Tensor[(7, 9, 1), float32] {
  %880 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
  %881 = cast(%880, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
  tan(%881) /* ty=Tensor[(7, 9, 1), float32] */
}

def @func_295(%var_286: Tensor[(8, 7, 1), uint8], %var_287: Tensor[(8, 7, 1), uint8]) -> (Tensor[(8, 7, ?), uint8], Tensor[(8, 7, 1), float32]) {
  %882 = cast(%var_287, dtype="uint8") /* ty=Tensor[(8, 7, 1), uint8] */;
  %883 = shape_of(%var_286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %884 = cast(%var_286, dtype="uint8") /* ty=Tensor[(8, 7, 1), uint8] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %886 = cast(%var_287, dtype="float32") /* ty=Tensor[(8, 7, 1), float32] */;
  %887 = subtract(%884, %885) /* ty=Tensor[(8, 7, ?), uint8] */;
  %888 = acos(%886) /* ty=Tensor[(8, 7, 1), float32] */;
  (%887, %888)
}

def @func_4849(%var_4827: Tensor[(567), uint64], %var_4828: Tensor[(216), int64]) -> (Tensor[(7, 9, 1), float64], Tensor[(216), int64], Tensor[(567), uint64], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(56, 1), uint8]) {
  %889 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %890 = cast(%var_4827, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %891 = cast(%var_4827, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %892 = cast(%var_4828, dtype="int64") /* ty=Tensor[(216), int64] */;
  %893 = cast(meta[relay.Constant][43] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %894 = reshape(%890, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
  %895 = reshape(%891, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
  %896 = reshape(%892, newshape=[216]) /* ty=Tensor[(216), int64] */;
  %897 = reshape(%893, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %898 = @func_1422(%894, %895, %896, %897) /* ty=(Tensor[(9, 9, 7), uint64], Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(8, 7, ?), uint8]) */;
  %899 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %900 = %889.0;
  %901 = %898.2;
  %902 = %899.2;
  (%900, %901, %var_4827, %var_4828, meta[relay.Constant][43] /* ty=Tensor[(56), uint8] */, %902)
}

def @func_10679() -> (Tensor[(7, 9, 1), float64],) {
  %903 = @func_5733() /* ty=Tensor[(7, 9, 1), float64] */;
  (%903,)
}

def @func_4602() -> (Tensor[(7, 9, 1), float64],) {
  %904 = @func_4578() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
  %905 = %904.0;
  (%905,)
}

def @func_14483() -> (Tensor[(7, 9, 65), int16],) {
  %906 = @func_13671() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %907 = %906.0;
  %908 = @func_13131() /* ty=(Tensor[(65), float32],) */;
  %909 = %908.0;
  %910 = cast(%907, dtype="int16") /* ty=Tensor[(7, 9, 1), int16] */;
  %911 = cast(%909, dtype="int16") /* ty=Tensor[(65), int16] */;
  %912 = left_shift(%910, %911) /* ty=Tensor[(7, 9, 65), int16] */;
  (%912,)
}

def @func_10357() -> Tensor[(7, 9, 1), float64] {
  %913 = @func_6191() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
  %913.1
}

def @func_6793() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %914 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %915 = @func_4578() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
  %916 = @func_5030() /* ty=Tensor[(7, 9, 1), float64] */;
  %917 = cast(%916, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
  %918 = %914.0;
  %919 = %915.2;
  %920 = rsqrt(%917) /* ty=Tensor[(7, 9, 1), float64] */;
  (%918, %919, %920)
}

def @func_8679() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %921 = @func_6654() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %922 = @func_8061() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %923 = %921.1;
  %924 = %922.0;
  (%923, %924)
}

def @func_9959() -> (Tensor[(65), float32], Tensor[(5, ?, 13), float64], Tensor[(1008), float32]) {
  %925 = @func_8667() /* ty=(Tensor[(65), float32],) */;
  %926 = @func_5489() /* ty=(Tensor[(5, ?, 13), float64],) */;
  %927 = @func_9795() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(12, 6, 14), float32], Tensor[(1008), float32], Tensor[(8, 7, ?), uint8]) */;
  %928 = %925.0;
  %929 = %926.0;
  %930 = %927.2;
  (%928, %929, %930)
}

def @func_11245() -> Tensor[(7, 9, 1), float64] {
  @func_9213() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_14070() -> (Tensor[(7, 9, 1), float64],) {
  %931 = @func_8061() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %932 = %931.0;
  (%932,)
}

def @func_10711() -> (Tensor[(7, 9, 1), float64],) {
  %933 = @func_6627() /* ty=Tensor[(7, 9, 1), float64] */;
  (%933,)
}

def @func_7995(%var_7990: Tensor[(9, 10, 4), float32]) -> Tensor[(9, 10, 4), float32] {
  %934 = cast(%var_7990, dtype="float32") /* ty=Tensor[(9, 10, 4), float32] */;
  sigmoid(%934) /* ty=Tensor[(9, 10, 4), float32] */
}

def @func_10547() -> Tensor[(7, 9, 1), float64] {
  %935 = @func_10509() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %935.0
}

def @func_10509() -> (Tensor[(7, 9, 1), float64],) {
  %936 = @func_5397() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
  %937 = %936.0;
  (%937,)
}

def @func_13257() -> (Tensor[(7, 9, 1), float64],) {
  %938 = @func_12911() /* ty=Tensor[(7, 9, 1), float64] */;
  (%938,)
}

def @func_1079(%var_1042: Tensor[(15, 5, 2), float64], %var_1047: Tensor[(56), uint8]) -> (Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(15, 5, 2), float64], Tensor[(9, 6, 4), float32], Tensor[(8, 7, 1), float32], Tensor[(15, 5, 2), float64]) {
  %939 = cast(meta[relay.Constant][44] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
  %940 = cast(%var_1047, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %941 = reshape(%939, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %942 = reshape(%940, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %943 = @func_567(%941, %942) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %944 = cast(%var_1042, dtype="float64") /* ty=Tensor[(15, 5, 2), float64] */;
  %945 = rsqrt(%944) /* ty=Tensor[(15, 5, 2), float64] */;
  %946 = cast(%945, dtype="float64") /* ty=Tensor[(15, 5, 2), float64] */;
  %947 = cast(meta[relay.Constant][44] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
  %948 = cast(%var_1047, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %949 = reshape(%947, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %950 = reshape(%948, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %951 = @func_567(%949, %950) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %952 = cast(%var_1047, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %953 = cast(%var_1047, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %954 = reshape(%952, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %955 = reshape(%953, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %956 = @func_295(%954, %955) /* ty=(Tensor[(8, 7, ?), uint8], Tensor[(8, 7, 1), float32]) */;
  %957 = cast(%var_1042, dtype="float64") /* ty=Tensor[(15, 5, 2), float64] */;
  %958 = shape_of(%945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %959 = cast(%945, dtype="float64") /* ty=Tensor[(15, 5, 2), float64] */;
  %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %961 = %943.3;
  %962 = asinh(%946) /* ty=Tensor[(15, 5, 2), float64] */;
  %963 = %951.0;
  %964 = %956.1;
  %965 = floor_mod(%959, %960) /* ty=Tensor[(15, 5, 2), float64] */;
  (%961, meta[relay.Constant][44] /* ty=Tensor[(216), int64] */, %var_1047, %962, %963, %964, %965)
}

def @func_4578() -> (Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(7, 9, 1), float64]) {
  %966 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %967 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
  %968 = %966.7;
  %969 = @func_4109() /* ty=Tensor[(7, 9, 1), float64] */;
  (%967, %968, %969)
}

def @func_13671() -> (Tensor[(7, 9, 1), float64],) {
  %970 = @func_8448() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), float32]) */;
  %971 = %970.0;
  (%971,)
}

def @func_14615() -> (Tensor[(56), float64], Tensor[(7, 9, 1), float64]) {
  %972 = @func_13244() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), float32], Tensor[(56), uint8]) */;
  %973 = %972.2;
  %974 = cast(%973, dtype="float64") /* ty=Tensor[(56), float64] */;
  %975 = @func_11132() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) */;
  %976 = log10(%974) /* ty=Tensor[(56), float64] */;
  %977 = %975.1;
  (%976, %977)
}

def @func_10758() -> Tensor[(65), float32] {
  %978 = @func_10536() /* ty=(Tensor[(65), float32],) */;
  %978.0
}

def @func_13822() -> (Tensor[(7, 9, 1), float64],) {
  %979 = @func_10357() /* ty=Tensor[(7, 9, 1), float64] */;
  (%979,)
}

def @func_10244() -> Tensor[(7, 9, 1), float64] {
  %980 = @func_5676() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %980.0
}

def @func_6331(%var_6321: Tensor[(15, 11, 14), float32]) -> Tensor[(15, 11, 14), float32] {
  %981 = cast(%var_6321, dtype="float32") /* ty=Tensor[(15, 11, 14), float32] */;
  sigmoid(%981) /* ty=Tensor[(15, 11, 14), float32] */
}

def @func_11750() -> (Tensor[(8, 7, ?), uint8],) {
  %982 = @func_8196() /* ty=(Tensor[(7, 9, ?), bool], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8]) */;
  %983 = %982.1;
  (%983,)
}

def @func_14753() -> (Tensor[(7, 9, 1), float32], Tensor[(7, 9, 1), float64]) {
  %984 = @func_12716() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %985 = @func_11177() /* ty=Tensor[(7, 9, 1), float32] */;
  %986 = %984.1;
  (%985, %986)
}

def @func_4154() -> (Tensor[(7, 9, 1), float64],) {
  %987 = @func_4109() /* ty=Tensor[(7, 9, 1), float64] */;
  (%987,)
}

def @func_4302() -> (Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) {
  %988 = cast(meta[relay.Constant][46] /* ty=Tensor[(13, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 13), float64] */;
  %989 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(13, 5, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %990 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 13), float64] */;
  %991 = dyn.reshape(%988, %989, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %992 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 18), int64] */, dtype="int64") /* ty=Tensor[(12, 18), int64] */;
  %993 = cast(meta[relay.Constant][48] /* ty=Tensor[(56, 1), uint8] */, dtype="uint8") /* ty=Tensor[(56, 1), uint8] */;
  %994 = reshape(%992, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %995 = reshape(%993, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %996 = @func_567(%994, %995) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %997 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 18), int64] */, dtype="int64") /* ty=Tensor[(12, 18), int64] */;
  %998 = %996.3;
  %999 = cast(%998, dtype="uint8") /* ty=Tensor[(8, 7, 1), uint8] */;
  %1000 = reshape(%997, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %1001 = reshape(%999, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %1002 = @func_567(%1000, %1001) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %1003 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 18), int64] */, dtype="float32") /* ty=Tensor[(12, 18), float32] */;
  %1004 = cast(meta[relay.Constant][49] /* ty=Tensor[(65), float32] */, dtype="float32") /* ty=Tensor[(65), float32] */;
  %1005 = reshape(%1004, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), float32] */;
  %1006 = divide(%990, %991) /* ty=Tensor[(13, 5, 13), float64] */;
  %1007 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
  %1008 = %1002.2;
  %1009 = acosh(%1003) /* ty=Tensor[(12, 18), float32] */;
  %1010 = @func_1190(%1005) /* ty=Tensor[(5, ?, 13), float64] */;
  (%1006, %998, meta[relay.Constant][48] /* ty=Tensor[(56, 1), uint8] */, %1007, %1008, %1009, %1010, meta[relay.Constant][49] /* ty=Tensor[(65), float32] */)
}

def @func_5618(%var_5554: Tensor[(567), uint64], %var_5591: Tensor[(7, 9, 216), uint64]) -> (Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(65), float32], Tensor[(7, 9, 216), float32]) {
  %1011 = cast(%var_5554, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %1012 = cast(meta[relay.Constant][50] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
  %1013 = reshape(%1011, newshape=[567]) /* ty=Tensor[(567), uint64] */;
  %1014 = reshape(%1012, newshape=[216]) /* ty=Tensor[(216), int64] */;
  %1015 = @func_4849(%1013, %1014) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(216), int64], Tensor[(567), uint64], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(56, 1), uint8]) */;
  %1016 = %1015.0;
  %1017 = cast(%1016, dtype="uint64") /* ty=Tensor[(7, 9, 1), uint64] */;
  %1018 = cast(meta[relay.Constant][50] /* ty=Tensor[(216), int64] */, dtype="uint64") /* ty=Tensor[(216), uint64] */;
  %1019 = left_shift(%1017, %1018) /* ty=Tensor[(7, 9, 216), uint64] */;
  %1020 = cast(%var_5591, dtype="uint32") /* ty=Tensor[(7, 9, 216), uint32] */;
  %1021 = shape_of(%1019, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1022 = cast(%1019, dtype="uint32") /* ty=Tensor[(7, 9, 216), uint32] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1024 = right_shift(%1022, %1023) /* ty=Tensor[(7, 9, 216), uint32] */;
  %1025 = cast(%1024, dtype="float32") /* ty=Tensor[(7, 9, 216), float32] */;
  %1026 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
  %1027 = @func_4721() /* ty=Tensor[(65), float32] */;
  %1028 = acosh(%1025) /* ty=Tensor[(7, 9, 216), float32] */;
  (%1026, %var_5554, %1027, %1028)
}

def @func_5931() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) {
  %1029 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1030 = @func_5067() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1031 = cast(meta[relay.Constant][51] /* ty=Tensor[(65), float32] */, dtype="float32") /* ty=Tensor[(65), float32] */;
  %1032 = reshape(%1031, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), float32] */;
  %1033 = %1029.0;
  %1034 = %1030.0;
  %1035 = @func_1190(%1032) /* ty=Tensor[(5, ?, 13), float64] */;
  (%1033, %1034, %1035, meta[relay.Constant][51] /* ty=Tensor[(65), float32] */)
}

def @func_7986(%var_7975: Tensor[(4, 14, 8), float32]) -> Tensor[(4, 14, 8), float32] {
  %1036 = cast(%var_7975, dtype="float32") /* ty=Tensor[(4, 14, 8), float32] */;
  cosh(%1036) /* ty=Tensor[(4, 14, 8), float32] */
}

def @func_14259() -> (Tensor[(7, 9, 1), float64],) {
  %1037 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
  (%1037,)
}

def @func_12345() -> (Tensor[(8, 7, ?), uint8], Tensor[(7, 9, 1), float64]) {
  %1038 = @func_11750() /* ty=(Tensor[(8, 7, ?), uint8],) */;
  %1039 = @func_9261() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %1040 = %1038.0;
  %1041 = %1039.1;
  (%1040, %1041)
}

def @func_5357() -> (Tensor[(7, 9, 1), float64],) {
  %1042 = @func_5067() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1043 = %1042.0;
  (%1043,)
}

def @func_13316() -> (Tensor[(5, ?, 13), float64], Tensor[(65), float32]) {
  %1044 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %1045 = @func_10536() /* ty=(Tensor[(65), float32],) */;
  %1046 = %1044.6;
  %1047 = %1045.0;
  (%1046, %1047)
}

def @func_10617(%var_10613: Tensor[(72), float32], %var_10614: Tensor[(2310), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(2310), float32], Tensor[(72), float32], Tensor[(2310), float32]) {
  %1048 = @func_8061() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1049 = cast(%var_10613, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1050 = cast(%var_10614, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %1051 = reshape(%1049, newshape=[3, 8, 3]) /* ty=Tensor[(3, 8, 3), float32] */;
  %1052 = reshape(%1050, newshape=[2310]) /* ty=Tensor[(2310), float32] */;
  %1053 = @func_9113(%1051, %1052) /* ty=(Tensor[(3, 8, 3), float32], Tensor[(3, 8, 3), float32], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %1054 = %1048.0;
  %1055 = %1053.4;
  (%1054, %1055, %var_10613, %var_10614)
}

def @func_10057() -> (Tensor[(5, ?, 13), float64],) {
  %1056 = @func_5489() /* ty=(Tensor[(5, ?, 13), float64],) */;
  %1057 = %1056.0;
  (%1057,)
}

def @func_10165() -> Tensor[(7, 9, 1), float64] {
  @func_4109() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_8726(%var_8713: Tensor[(56), uint8]) -> (Tensor[(5, ?, 13), float64], Tensor[(30), bool], Tensor[(252), float64], Tensor[(9, 6, 4), float32], Tensor[(56), uint8], Tensor[(7, 9, ?), float32]) {
  %1058 = @func_4389() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
  %1059 = cast(meta[relay.Constant][52] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %1060 = reshape(%1059, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %1061 = @func_7710(%1060) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 4), uint16], Tensor[(15, 2, ?), uint32], Tensor[(30), bool], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 2, ?), bool], Tensor[(7, 9, 1), float64]) */;
  %1062 = cast(%var_8713, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %1063 = reshape(%1062, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %1064 = @func_4768(%1063) /* ty=(Tensor[(65), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) */;
  %1065 = @func_8448() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), float32]) */;
  %1066 = %1065.1;
  %1067 = cast(%1066, dtype="float32") /* ty=Tensor[(7, 9, ?), float32] */;
  %1068 = %1058.1;
  %1069 = %1061.3;
  %1070 = %1064.1;
  %1071 = acosh(%1067) /* ty=Tensor[(7, 9, ?), float32] */;
  (%1068, %1069, meta[relay.Constant][52] /* ty=Tensor[(252), float64] */, %1070, %var_8713, %1071)
}

def @func_12288(%var_12286: Tensor[(56), uint8]) -> (Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(56), uint8]) {
  %1072 = cast(%var_12286, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %1073 = reshape(%1072, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %1074 = @func_4768(%1073) /* ty=(Tensor[(65), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) */;
  %1075 = @func_5733() /* ty=Tensor[(7, 9, 1), float64] */;
  %1076 = %1074.0;
  (%1075, %1076, %var_12286)
}

def @func_14378() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %1077 = @func_8061() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1078 = @func_13330() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1079 = %1077.0;
  %1080 = %1078.0;
  (%1079, %1080)
}

def @func_6076() -> (Tensor[(7, 9, 1), float64],) {
  %1081 = @func_5067() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1082 = %1081.0;
  (%1082,)
}

def @func_9474() -> (Tensor[(7, 9, 1), float64], Tensor[(13, 5), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(567), float32]) {
  %1083 = cast(meta[relay.Constant][53] /* ty=Tensor[(13, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 5), float32] */;
  %1084 = reshape(%1083, newshape=[65]) /* ty=Tensor[(65), float32] */;
  %1085 = @func_7308(%1084) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(13608), uint64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 65), bool], Tensor[(7, 9, 1), float64]) */;
  %1086 = %1085.1;
  %1087 = cast(%1086, dtype="float32") /* ty=Tensor[(567), float32] */;
  %1088 = @func_8312() /* ty=Tensor[(7, 9, 1), float64] */;
  %1089 = @func_4109() /* ty=Tensor[(7, 9, 1), float64] */;
  %1090 = @func_5733() /* ty=Tensor[(7, 9, 1), float64] */;
  %1091 = atanh(%1087) /* ty=Tensor[(567), float32] */;
  (%1088, meta[relay.Constant][53] /* ty=Tensor[(13, 5), float32] */, %1089, %1090, %1091)
}

def @func_6308() -> Tensor[(7, 9, 1), float64] {
  %1092 = @func_5357() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1092.0
}

def @func_11940() -> (Tensor[(7, 9, 1), float64],) {
  %1093 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1094 = %1093.0;
  (%1094,)
}

def @func_8312() -> Tensor[(7, 9, 1), float64] {
  %1095 = @func_5357() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1095.0
}

def @func_12749() -> (Tensor[(7, 9, 1), float64],) {
  %1096 = @func_5904() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1097 = %1096.0;
  (%1097,)
}

def @func_6180() -> (Tensor[(65), float32],) {
  %1098 = @func_4721() /* ty=Tensor[(65), float32] */;
  (%1098,)
}

def @func_13846() -> Tensor[(65), float32] {
  %1099 = @func_13743() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float32], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) */;
  %1099.3
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_13744() -> (Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float32], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) {
  %9 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float32], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) {
    %0 = @func_11514() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %1 = @func_12071() /* ty=Tensor[(5, ?, 13), float64] */;
    %2 = cast(%1, dtype="float32") /* ty=Tensor[(5, ?, 13), float32] */;
    %3 = @func_8049() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %4 = @func_6191() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
    %5 = %0.0;
    %6 = acos(%2) /* ty=Tensor[(5, ?, 13), float32] */;
    %7 = %3.0;
    %8 = %4.0;
    (%5, %6, %7, %8)
  };
  %9() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float32], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) */
}

def @func_5067() -> (Tensor[(7, 9, 1), float64],) {
  %10 = @func_4109() /* ty=Tensor[(7, 9, 1), float64] */;
  (%10,)
}

def @func_11539() -> (Tensor[(65), float32],) {
  @func_11537() /* ty=(Tensor[(65), float32],) */
}

def @func_4060() -> (Tensor[(7, 9, 1), float64],) {
  @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_11134() -> (Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) {
  @func_11132() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) */
}

def @func_5733() -> Tensor[(7, 9, 1), float64] {
  %11 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %11.0
}

def @func_14158() -> Tensor[(7, 9, 1), float64] {
  @func_14156() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_10245() -> Tensor[(7, 9, 1), float64] {
  %13 = fn () -> Tensor[(7, 9, 1), float64] {
    %12 = @func_5676() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %12.0
  };
  %13() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_5069() -> (Tensor[(7, 9, 1), float64],) {
  @func_5067() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_6655() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %18 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
    %14 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %15 = @func_5067() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %16 = %14.0;
    %17 = %15.0;
    (%16, %17)
  };
  %18() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_10386(%var_10381: Tensor[(6, 1, 5), uint8], %var_10382: Tensor[(6, 5, 5), uint8], %var_10383: Tensor[(9, 63), uint64], %var_10384: Tensor[(216), int64], %var_10385: Tensor[(56), uint8]) -> (Tensor[(6, 5, 5), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, ?), uint8], Tensor[(9, 63), uint64], Tensor[(216), int64], Tensor[(56), uint8]) {
  %34 = fn (%var_10360: Tensor[(6, 1, 5), uint8], %var_10361: Tensor[(6, 5, 5), uint8], %var_10373: Tensor[(9, 63), uint64], %var_10374: Tensor[(216), int64], %var_10375: Tensor[(56), uint8]) -> (Tensor[(6, 5, 5), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, ?), uint8], Tensor[(9, 63), uint64], Tensor[(216), int64], Tensor[(56), uint8]) {
    %19 = cast(%var_10360, dtype="uint8") /* ty=Tensor[(6, 1, 5), uint8] */;
    %20 = cast(%var_10361, dtype="uint8") /* ty=Tensor[(6, 5, 5), uint8] */;
    %21 = @func_8679() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %22 = cast(%var_10373, dtype="uint64") /* ty=Tensor[(9, 63), uint64] */;
    %23 = cast(%var_10373, dtype="uint64") /* ty=Tensor[(9, 63), uint64] */;
    %24 = cast(%var_10374, dtype="int64") /* ty=Tensor[(216), int64] */;
    %25 = cast(%var_10375, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %26 = reshape(%22, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
    %27 = reshape(%23, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
    %28 = reshape(%24, newshape=[216]) /* ty=Tensor[(216), int64] */;
    %29 = reshape(%25, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %30 = @func_1422(%26, %27, %28, %29) /* ty=(Tensor[(9, 9, 7), uint64], Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(8, 7, ?), uint8]) */;
    %31 = maximum(%19, %20) /* ty=Tensor[(6, 5, 5), uint8] */;
    %32 = %21.0;
    %33 = %30.4;
    (%31, %32, %33, %var_10373, %var_10374, %var_10375)
  };
  %34(%var_10381, %var_10382, %var_10383, %var_10384, %var_10385) /* ty=(Tensor[(6, 5, 5), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, ?), uint8], Tensor[(9, 63), uint64], Tensor[(216), int64], Tensor[(56), uint8]) */
}

def @func_7416(%var_7415: Tensor[(65), float32]) -> Tensor[(65), int64] {
  %41 = fn (%var_7406: Tensor[(65), float32]) -> Tensor[(65), int64] {
    %35 = @func_6120() /* ty=(Tensor[(65), float32],) */;
    %36 = %35.0;
    %37 = cast(%var_7406, dtype="int64") /* ty=Tensor[(65), int64] */;
    %38 = shape_of(%36, dtype="int32") /* ty=Tensor[(1), int32] */;
    %39 = cast(%36, dtype="int64") /* ty=Tensor[(65), int64] */;
    %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?), int64] */;
    left_shift(%39, %40) /* ty=Tensor[(65), int64] */
  };
  %41(%var_7415) /* ty=Tensor[(65), int64] */
}

def @func_11751() -> (Tensor[(8, 7, ?), uint8],) {
  %44 = fn () -> (Tensor[(8, 7, ?), uint8],) {
    %42 = @func_8196() /* ty=(Tensor[(7, 9, ?), bool], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8]) */;
    %43 = %42.1;
    (%43,)
  };
  %44() /* ty=(Tensor[(8, 7, ?), uint8],) */
}

def @func_6180() -> (Tensor[(65), float32],) {
  %45 = @func_4721() /* ty=Tensor[(65), float32] */;
  (%45,)
}

def @func_10712() -> (Tensor[(7, 9, 1), float64],) {
  %47 = fn () -> (Tensor[(7, 9, 1), float64],) {
    %46 = @func_6627() /* ty=Tensor[(7, 9, 1), float64] */;
    (%46,)
  };
  %47() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_10166() -> Tensor[(7, 9, 1), float64] {
  %48 = fn () -> Tensor[(7, 9, 1), float64] {
    @func_4109() /* ty=Tensor[(7, 9, 1), float64] */
  };
  %48() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_5931() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) {
  %49 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %50 = @func_5067() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %51 = cast(meta[relay.Constant][0] /* ty=Tensor[(65), float32] */, dtype="float32") /* ty=Tensor[(65), float32] */;
  %52 = reshape(%51, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), float32] */;
  %53 = %49.0;
  %54 = %50.0;
  %55 = @func_1190(%52) /* ty=Tensor[(5, ?, 13), float64] */;
  (%53, %54, %55, meta[relay.Constant][0] /* ty=Tensor[(65), float32] */)
}

def @func_14127() -> (Tensor[(7, 9, 1), float64],) {
  %56 = @func_10165() /* ty=Tensor[(7, 9, 1), float64] */;
  (%56,)
}

def @func_11425() -> Tensor[(7, 9, 1), float64] {
  %57 = @func_5904() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %57.0
}

def @func_3985(%var_3983: Tensor[(2, 13, 7), float32], %var_3984: Tensor[(216), int64]) -> (Tensor[(2, 13, 7), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) {
  %66 = fn (%var_3971: Tensor[(2, 13, 7), float32], %var_3976: Tensor[(216), int64]) -> (Tensor[(2, 13, 7), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) {
    %58 = cast(%var_3971, dtype="float32") /* ty=Tensor[(2, 13, 7), float32] */;
    %59 = cast(%var_3976, dtype="int64") /* ty=Tensor[(216), int64] */;
    %60 = cast(meta[relay.Constant][1] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %61 = reshape(%59, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
    %62 = reshape(%60, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %63 = @func_567(%61, %62) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
    %64 = acosh(%58) /* ty=Tensor[(2, 13, 7), float32] */;
    %65 = %63.0;
    (%64, %65, %var_3976, meta[relay.Constant][1] /* ty=Tensor[(56), uint8] */)
  };
  %66(%var_3983, %var_3984) /* ty=(Tensor[(2, 13, 7), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) */
}

def @func_5030() -> Tensor[(7, 9, 1), float64] {
  %67 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %67.0
}

def @func_10133(%var_10131: float64, %var_10132: Tensor[(1, 11, 1), float64]) -> (Tensor[(?, 11, ?), uint8], Tensor[(7, 9, ?), float32]) {
  %80 = fn (%var_10095: float64, %var_10096: Tensor[(1, 11, 1), float64]) -> (Tensor[(?, 11, ?), uint8], Tensor[(7, 9, ?), float32]) {
    %68 = cast(%var_10095, dtype="bool") /* ty=bool */;
    %69 = cast(%var_10096, dtype="bool") /* ty=Tensor[(1, 11, 1), bool] */;
    %70 = equal(%68, %69) /* ty=Tensor[(1, 11, 1), bool] */;
    %71 = cast(%70, dtype="float32") /* ty=Tensor[(1, 11, 1), float32] */;
    %72 = log10(%71) /* ty=Tensor[(1, 11, 1), float32] */;
    %73 = cast(%70, dtype="uint8") /* ty=Tensor[(1, 11, 1), uint8] */;
    %74 = shape_of(%72, dtype="int32") /* ty=Tensor[(3), int32] */;
    %75 = cast(%72, dtype="uint8") /* ty=Tensor[(1, 11, 1), uint8] */;
    %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %77 = @func_6059() /* ty=(Tensor[(7, 9, ?), float32],) */;
    %78 = minimum(%75, %76) /* ty=Tensor[(?, 11, ?), uint8] */;
    %79 = %77.0;
    (%78, %79)
  };
  %80(%var_10131, %var_10132) /* ty=(Tensor[(?, 11, ?), uint8], Tensor[(7, 9, ?), float32]) */
}

def @func_12751() -> (Tensor[(7, 9, 1), float64],) {
  @func_12749() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_12614(%var_12612: Tensor[(150), float64], %var_12613: Tensor[(56), uint8]) -> (Tensor[(65), float32], Tensor[(150), float64], Tensor[(150), float64], Tensor[(56), uint8]) {
  %89 = fn (%var_12596: Tensor[(150), float64], %var_12597: Tensor[(56), uint8]) -> (Tensor[(65), float32], Tensor[(150), float64], Tensor[(150), float64], Tensor[(56), uint8]) {
    %81 = @func_4578() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
    %82 = cast(%var_12596, dtype="float64") /* ty=Tensor[(150), float64] */;
    %83 = cast(%var_12597, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %84 = reshape(%82, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %85 = reshape(%83, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %86 = @func_7934(%84, %85) /* ty=(Tensor[(5, ?, 13), float64], Tensor[(9, 6, 4), float32], Tensor[(150), float64], Tensor[(56), uint8]) */;
    %87 = %81.1;
    %88 = %86.2;
    (%87, %88, %var_12596, %var_12597)
  };
  %89(%var_12612, %var_12613) /* ty=(Tensor[(65), float32], Tensor[(150), float64], Tensor[(150), float64], Tensor[(56), uint8]) */
}

def @func_1190(%var_1167: Tensor[(5, 1, 13), float32]) -> Tensor[(5, ?, 13), float64] {
  %90 = cast(%var_1167, dtype="float32") /* ty=Tensor[(5, 1, 13), float32] */;
  %91 = cos(%90) /* ty=Tensor[(5, 1, 13), float32] */;
  %92 = cast(%var_1167, dtype="bool") /* ty=Tensor[(5, 1, 13), bool] */;
  %93 = shape_of(%91, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(%91, dtype="bool") /* ty=Tensor[(5, 1, 13), bool] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %96 = less_equal(%94, %95) /* ty=Tensor[(5, ?, 13), bool] */;
  %97 = cast(%96, dtype="float64") /* ty=Tensor[(5, ?, 13), float64] */;
  %98 = shape_of(%91, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%91, dtype="float64") /* ty=Tensor[(5, 1, 13), float64] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%99, %100) /* ty=Tensor[(5, ?, 13), float64] */
}

def @func_8063() -> (Tensor[(7, 9, 1), float64],) {
  @func_8061() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_9600(%var_9548: Tensor[(30), bool], %var_9565: Tensor[(448), float32], %var_9590: Tensor[(567), uint64], %var_9591: Tensor[(14, 4), uint8], %var_9594: Tensor[(252), float64]) -> (Tensor[(15, 2, ?), uint32], Tensor[(7, 9, 30), bool], Tensor[(65), float32], Tensor[(4, 14, 8), float32], Tensor[(448), float32], Tensor[(56), uint8], Tensor[(567), uint64], Tensor[(14, 4), uint8], Tensor[(7, 9, 1), float64], Tensor[(252), float64], Tensor[(56), uint8]) {
  %101 = cast(%var_9548, dtype="bool") /* ty=Tensor[(30), bool] */;
  %102 = reshape(%101, newshape=[15, 2, 1]) /* ty=Tensor[(15, 2, 1), bool] */;
  %103 = @func_2342(%102) /* ty=(Tensor[(15, 2, ?), bool], Tensor[(15, 2, ?), uint32]) */;
  %104 = @func_6308() /* ty=Tensor[(7, 9, 1), float64] */;
  %105 = cast(%104, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  %106 = cast(%var_9548, dtype="bool") /* ty=Tensor[(30), bool] */;
  %107 = @func_6180() /* ty=(Tensor[(65), float32],) */;
  %108 = cast(%var_9565, dtype="float32") /* ty=Tensor[(448), float32] */;
  %109 = reshape(%108, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float32] */;
  %110 = cast(%var_9590, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %111 = cast(%var_9591, dtype="uint8") /* ty=Tensor[(14, 4), uint8] */;
  %112 = reshape(%110, newshape=[189, 3]) /* ty=Tensor[(189, 3), uint64] */;
  %113 = reshape(%111, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %114 = @func_7525(%112, %113) /* ty=(Tensor[(7, 9, ?), float32], Tensor[(9, 9, 7), uint64], Tensor[(189, 3), uint64], Tensor[(216), int64], Tensor[(56), uint8]) */;
  %115 = cast(%var_9594, dtype="float64") /* ty=Tensor[(252), float64] */;
  %116 = reshape(%115, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
  %117 = @func_7710(%116) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 4), uint16], Tensor[(15, 2, ?), uint32], Tensor[(30), bool], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 2, ?), bool], Tensor[(7, 9, 1), float64]) */;
  %118 = cast(%var_9591, dtype="uint8") /* ty=Tensor[(14, 4), uint8] */;
  %119 = reshape(%118, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %120 = @func_8726(%119) /* ty=(Tensor[(5, ?, 13), float64], Tensor[(30), bool], Tensor[(252), float64], Tensor[(9, 6, 4), float32], Tensor[(56), uint8], Tensor[(7, 9, ?), float32]) */;
  %121 = %103.1;
  %122 = greater(%105, %106) /* ty=Tensor[(7, 9, 30), bool] */;
  %123 = %107.0;
  %124 = @func_7986(%109) /* ty=Tensor[(4, 14, 8), float32] */;
  %125 = %114.4;
  %126 = %117.4;
  %127 = %120.4;
  (%121, %122, %123, %124, %var_9565, %125, %var_9590, %var_9591, %126, %var_9594, %127)
}

def @func_12749() -> (Tensor[(7, 9, 1), float64],) {
  %128 = @func_5904() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %129 = %128.0;
  (%129,)
}

def @func_14419() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) {
  @func_14417() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) */
}

def @func_8354() -> Tensor[(7, 9, 1), float64] {
  %135 = fn () -> Tensor[(7, 9, 1), float64] {
    %130 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %131 = %130.0;
    %132 = cast(%131, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
    %133 = sinh(%132) /* ty=Tensor[(7, 9, 1), float32] */;
    %134 = cast(%133, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
    sqrt(%134) /* ty=Tensor[(7, 9, 1), float64] */
  };
  %135() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_5816(%var_5814: Tensor[(8, 4, 8), float32], %var_5815: Tensor[(8, 4, 8), float32]) -> (Tensor[(8, 4, 8), float32],) {
  %141 = fn (%var_5799: Tensor[(8, 4, 8), float32], %var_5800: Tensor[(8, 4, 8), float32]) -> (Tensor[(8, 4, 8), float32],) {
    %136 = cast(%var_5800, dtype="float32") /* ty=Tensor[(8, 4, 8), float32] */;
    %137 = shape_of(%var_5799, dtype="int32") /* ty=Tensor[(3), int32] */;
    %138 = cast(%var_5799, dtype="float32") /* ty=Tensor[(8, 4, 8), float32] */;
    %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %140 = floor_mod(%138, %139) /* ty=Tensor[(8, 4, 8), float32] */;
    (%140,)
  };
  %141(%var_5814, %var_5815) /* ty=(Tensor[(8, 4, 8), float32],) */
}

def @func_9215() -> Tensor[(7, 9, 1), float64] {
  @func_9213() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_15093(%var_15086: Tensor[(5, 13, 15), float64]) -> (Tensor[(5, 13, 15), float64],) {
  %142 = cast(%var_15086, dtype="float64") /* ty=Tensor[(5, 13, 15), float64] */;
  %143 = atan(%142) /* ty=Tensor[(5, 13, 15), float64] */;
  (%143,)
}

def @func_9263() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  @func_9261() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_4175() -> Tensor[(7, 9, 1), float64] {
  %144 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %144.0
}

def @func_567(%var_514: Tensor[(9, 6, 4), int64], %var_539: Tensor[(56), uint8]) -> (Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) {
  %145 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 6, 4), int64] */, dtype="int64") /* ty=Tensor[(9, 6, 4), int64] */;
  %146 = shape_of(%var_514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %147 = cast(%var_514, dtype="int64") /* ty=Tensor[(9, 6, 4), int64] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %149 = bitwise_or(%147, %148) /* ty=Tensor[(9, 6, 4), int64] */;
  %150 = cast(%149, dtype="float32") /* ty=Tensor[(9, 6, 4), float32] */;
  %151 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(9, 6, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 6, 4), int64] */, dtype="float32") /* ty=Tensor[(9, 6, 4), float32] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %154 = cast(%var_539, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %155 = cast(%var_539, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %156 = reshape(%154, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %157 = reshape(%155, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %158 = @func_295(%156, %157) /* ty=(Tensor[(8, 7, ?), uint8], Tensor[(8, 7, 1), float32]) */;
  %159 = %158.0;
  %160 = cast(%159, dtype="uint8") /* ty=Tensor[(8, 7, ?), uint8] */;
  %161 = cast(%var_539, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %162 = reshape(%160, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %163 = reshape(%161, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %164 = @func_295(%162, %163) /* ty=(Tensor[(8, 7, ?), uint8], Tensor[(8, 7, 1), float32]) */;
  %165 = floor_mod(%152, %153) /* ty=Tensor[(9, 6, 4), float32] */;
  %166 = %164.1;
  (%165, %159, %var_539, %166)
}

def @func_9607(%var_9602: Tensor[(30), bool], %var_9603: Tensor[(448), float32], %var_9604: Tensor[(567), uint64], %var_9605: Tensor[(14, 4), uint8], %var_9606: Tensor[(252), float64]) -> (Tensor[(15, 2, ?), uint32], Tensor[(7, 9, 30), bool], Tensor[(65), float32], Tensor[(4, 14, 8), float32], Tensor[(448), float32], Tensor[(56), uint8], Tensor[(567), uint64], Tensor[(14, 4), uint8], Tensor[(7, 9, 1), float64], Tensor[(252), float64], Tensor[(56), uint8]) {
  @func_9600(%var_9602, %var_9603, %var_9604, %var_9605, %var_9606) /* ty=(Tensor[(15, 2, ?), uint32], Tensor[(7, 9, 30), bool], Tensor[(65), float32], Tensor[(4, 14, 8), float32], Tensor[(448), float32], Tensor[(56), uint8], Tensor[(567), uint64], Tensor[(14, 4), uint8], Tensor[(7, 9, 1), float64], Tensor[(252), float64], Tensor[(56), uint8]) */
}

def @func_5735() -> Tensor[(7, 9, 1), float64] {
  @func_5733() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_4849(%var_4827: Tensor[(567), uint64], %var_4828: Tensor[(216), int64]) -> (Tensor[(7, 9, 1), float64], Tensor[(216), int64], Tensor[(567), uint64], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(56, 1), uint8]) {
  %167 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %168 = cast(%var_4827, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %169 = cast(%var_4827, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %170 = cast(%var_4828, dtype="int64") /* ty=Tensor[(216), int64] */;
  %171 = cast(meta[relay.Constant][3] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %172 = reshape(%168, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
  %173 = reshape(%169, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
  %174 = reshape(%170, newshape=[216]) /* ty=Tensor[(216), int64] */;
  %175 = reshape(%171, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %176 = @func_1422(%172, %173, %174, %175) /* ty=(Tensor[(9, 9, 7), uint64], Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(8, 7, ?), uint8]) */;
  %177 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %178 = %167.0;
  %179 = %176.2;
  %180 = %177.2;
  (%178, %179, %var_4827, %var_4828, meta[relay.Constant][3] /* ty=Tensor[(56), uint8] */, %180)
}

def @func_7155() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %181 = @func_5225() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %182 = %181.0;
  %183 = @func_6428() /* ty=Tensor[(7, 9, 1), float64] */;
  (%182, %183)
}

def @func_9903() -> Tensor[(65), float32] {
  @func_4721() /* ty=Tensor[(65), float32] */
}

def @func_14129() -> (Tensor[(7, 9, 1), float64],) {
  @func_14127() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_10538() -> (Tensor[(65), float32],) {
  @func_10536() /* ty=(Tensor[(65), float32],) */
}

def @func_8049() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %184 = @func_5999() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %185 = @func_5225() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %186 = @func_6627() /* ty=Tensor[(7, 9, 1), float64] */;
  %187 = %184.0;
  %188 = %185.0;
  (%186, %187, %188)
}

def @func_5490() -> (Tensor[(5, ?, 13), float64],) {
  %191 = fn () -> (Tensor[(5, ?, 13), float64],) {
    %189 = @func_4389() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
    %190 = %189.1;
    (%190,)
  };
  %191() /* ty=(Tensor[(5, ?, 13), float64],) */
}

def @func_10651(%var_10645: Tensor[(12, 4, 3), float32]) -> (Tensor[(12, 4, 3), float32],) {
  %192 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 4, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 3), float32] */;
  %193 = shape_of(%var_10645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%var_10645, dtype="float32") /* ty=Tensor[(12, 4, 3), float32] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %196 = subtract(%194, %195) /* ty=Tensor[(12, 4, 3), float32] */;
  (%196,)
}

def @func_10679() -> (Tensor[(7, 9, 1), float64],) {
  %197 = @func_5733() /* ty=Tensor[(7, 9, 1), float64] */;
  (%197,)
}

def @func_5677() -> (Tensor[(7, 9, 1), float64],) {
  %200 = fn () -> (Tensor[(7, 9, 1), float64],) {
    %198 = @func_4389() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
    %199 = %198.0;
    (%199,)
  };
  %200() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_5226() -> (Tensor[(7, 9, 1), float64],) {
  %205 = fn () -> (Tensor[(7, 9, 1), float64],) {
    %201 = @func_4389() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
    %202 = %201.0;
    %203 = cast(%202, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
    %204 = atanh(%203) /* ty=Tensor[(7, 9, 1), float64] */;
    (%204,)
  };
  %205() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_7185() -> Tensor[(7, 9, 1), float64] {
  @func_7183() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_7529(%var_7527: Tensor[(189, 3), uint64], %var_7528: Tensor[(56), uint8]) -> (Tensor[(7, 9, ?), float32], Tensor[(9, 9, 7), uint64], Tensor[(189, 3), uint64], Tensor[(216), int64], Tensor[(56), uint8]) {
  @func_7525(%var_7527, %var_7528) /* ty=(Tensor[(7, 9, ?), float32], Tensor[(9, 9, 7), uint64], Tensor[(189, 3), uint64], Tensor[(216), int64], Tensor[(56), uint8]) */
}

def @func_13224() -> (Tensor[(7, 9, 1), float64],) {
  @func_13222() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_13671() -> (Tensor[(7, 9, 1), float64],) {
  %206 = @func_8448() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), float32]) */;
  %207 = %206.0;
  (%207,)
}

def @func_14896() -> Tensor[(7, 9, 1), float32] {
  %210 = fn () -> Tensor[(7, 9, 1), float32] {
    %208 = @func_10165() /* ty=Tensor[(7, 9, 1), float64] */;
    %209 = cast(%208, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
    erf(%209) /* ty=Tensor[(7, 9, 1), float32] */
  };
  %210() /* ty=Tensor[(7, 9, 1), float32] */
}

def @func_4111() -> Tensor[(7, 9, 1), float64] {
  @func_4109() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_13804() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) {
  %217 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) {
    %211 = @func_7155() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %212 = @func_12716() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %213 = @func_10057() /* ty=(Tensor[(5, ?, 13), float64],) */;
    %214 = %211.1;
    %215 = %212.0;
    %216 = %213.0;
    (%214, %215, %216)
  };
  %217() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */
}

def @func_14030() -> (Tensor[(7, 9, 1), float64],) {
  %220 = fn () -> (Tensor[(7, 9, 1), float64],) {
    %218 = @func_10711() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %219 = %218.0;
    (%219,)
  };
  %220() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_15077() -> (Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(1320), float32]) {
  @func_15075() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(1320), float32]) */
}

def @func_7891(%var_7844: Tensor[(7, 9, 12), float64], %var_7865: Tensor[(56), uint8]) -> (Tensor[(7, 9, 12), uint8], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(216, 1), float32]) {
  %221 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %222 = %221.0;
  %223 = cast(%222, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  %224 = cast(%var_7844, dtype="bool") /* ty=Tensor[(7, 9, 12), bool] */;
  %225 = logical_and(%223, %224) /* ty=Tensor[(7, 9, 12), bool] */;
  %226 = cast(%var_7844, dtype="uint8") /* ty=Tensor[(7, 9, 12), uint8] */;
  %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
  %228 = cast(%225, dtype="uint8") /* ty=Tensor[(7, 9, 12), uint8] */;
  %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %230 = cast(meta[relay.Constant][5] /* ty=Tensor[(216, 1), int64] */, dtype="int64") /* ty=Tensor[(216, 1), int64] */;
  %231 = cast(%var_7865, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %232 = reshape(%230, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %233 = reshape(%231, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %234 = @func_567(%232, %233) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %235 = cast(meta[relay.Constant][5] /* ty=Tensor[(216, 1), int64] */, dtype="float32") /* ty=Tensor[(216, 1), float32] */;
  %236 = logical_xor(%228, %229) /* ty=Tensor[(7, 9, 12), uint8] */;
  %237 = %234.1;
  %238 = acosh(%235) /* ty=Tensor[(216, 1), float32] */;
  (%236, %237, %var_7865, %238)
}

def @func_6300() -> Tensor[(65), float32] {
  %240 = fn () -> Tensor[(65), float32] {
    %239 = @func_6191() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
    %239.0
  };
  %240() /* ty=Tensor[(65), float32] */
}

def @func_10621(%var_10619: Tensor[(72), float32], %var_10620: Tensor[(2310), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(2310), float32], Tensor[(72), float32], Tensor[(2310), float32]) {
  @func_10617(%var_10619, %var_10620) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(2310), float32], Tensor[(72), float32], Tensor[(2310), float32]) */
}

def @func_11876() -> (Tensor[(7, 9, 1), float64],) {
  @func_11874() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_4109() -> Tensor[(7, 9, 1), float64] {
  %241 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %241.0
}

def @func_6506() -> Tensor[(7, 9, 1), float64] {
  %242 = @func_5847() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %242.0
}

def @func_8196() -> (Tensor[(7, 9, ?), bool], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8]) {
  %243 = @func_6059() /* ty=(Tensor[(7, 9, ?), float32],) */;
  %244 = %243.0;
  %245 = @func_6428() /* ty=Tensor[(7, 9, 1), float64] */;
  %246 = cast(%245, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  %247 = shape_of(%244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%244, dtype="bool") /* ty=Tensor[(7, 9, ?), bool] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %250 = cast(meta[relay.Constant][6] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %251 = cast(meta[relay.Constant][6] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %252 = reshape(%250, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %253 = reshape(%251, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
  %254 = @func_295(%252, %253) /* ty=(Tensor[(8, 7, ?), uint8], Tensor[(8, 7, 1), float32]) */;
  %255 = not_equal(%248, %249) /* ty=Tensor[(7, 9, ?), bool] */;
  %256 = %254.0;
  (%255, %256, meta[relay.Constant][6] /* ty=Tensor[(56), uint8] */)
}

def @func_10705() -> (Tensor[(7, 9, 1), float64],) {
  %257 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
  (%257,)
}

def @func_9828(%var_9826: Tensor[(7, 9, 14), float64]) -> Tensor[(7, 9, 14), int16] {
  @func_9825(%var_9826) /* ty=Tensor[(7, 9, 14), int16] */
}

def @func_13331() -> (Tensor[(7, 9, 1), float64],) {
  %259 = fn () -> (Tensor[(7, 9, 1), float64],) {
    %258 = @func_12911() /* ty=Tensor[(7, 9, 1), float64] */;
    (%258,)
  };
  %259() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_9878() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %262 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
    %260 = @func_6428() /* ty=Tensor[(7, 9, 1), float64] */;
    %261 = @func_8312() /* ty=Tensor[(7, 9, 1), float64] */;
    (%260, %261)
  };
  %262() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_6182() -> (Tensor[(65), float32],) {
  @func_6180() /* ty=(Tensor[(65), float32],) */
}

def @func_10840() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  @func_10838() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_7193() -> Tensor[(7, 9, 1), float64] {
  %263 = @func_5676() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %263.0
}

def @func_9960() -> (Tensor[(65), float32], Tensor[(5, ?, 13), float64], Tensor[(1008), float32]) {
  %270 = fn () -> (Tensor[(65), float32], Tensor[(5, ?, 13), float64], Tensor[(1008), float32]) {
    %264 = @func_8667() /* ty=(Tensor[(65), float32],) */;
    %265 = @func_5489() /* ty=(Tensor[(5, ?, 13), float64],) */;
    %266 = @func_9795() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(12, 6, 14), float32], Tensor[(1008), float32], Tensor[(8, 7, ?), uint8]) */;
    %267 = %264.0;
    %268 = %265.0;
    %269 = %266.2;
    (%267, %268, %269)
  };
  %270() /* ty=(Tensor[(65), float32], Tensor[(5, ?, 13), float64], Tensor[(1008), float32]) */
}

def @func_9213() -> Tensor[(7, 9, 1), float64] {
  @func_7193() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_13209(%var_13197: Tensor[(3, 24), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(3, 24), float64]) {
  %271 = @func_12749() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %272 = @func_10976() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %273 = cast(%var_13197, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %274 = cast(meta[relay.Constant][7] /* ty=Tensor[(2310), float32] */, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %275 = reshape(%273, newshape=[3, 8, 3]) /* ty=Tensor[(3, 8, 3), float32] */;
  %276 = reshape(%274, newshape=[2310]) /* ty=Tensor[(2310), float32] */;
  %277 = @func_9113(%275, %276) /* ty=(Tensor[(3, 8, 3), float32], Tensor[(3, 8, 3), float32], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %278 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 24), float32] */, dtype="float64") /* ty=Tensor[(3, 24), float64] */;
  %279 = shape_of(%var_13197, dtype="int32") /* ty=Tensor[(2), int32] */;
  %280 = cast(%var_13197, dtype="float64") /* ty=Tensor[(3, 24), float64] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %282 = %271.0;
  %283 = @func_6428() /* ty=Tensor[(7, 9, 1), float64] */;
  %284 = %272.0;
  %285 = %277.3;
  %286 = power(%280, %281) /* ty=Tensor[(3, 24), float64] */;
  (%282, %283, %284, %285, meta[relay.Constant][7] /* ty=Tensor[(2310), float32] */, %286)
}

def @func_9825(%var_9815: Tensor[(7, 9, 14), float64]) -> Tensor[(7, 9, 14), int16] {
  %287 = @func_7183() /* ty=Tensor[(7, 9, 1), float64] */;
  %288 = cast(%287, dtype="int16") /* ty=Tensor[(7, 9, 1), int16] */;
  %289 = cast(%var_9815, dtype="int16") /* ty=Tensor[(7, 9, 14), int16] */;
  bitwise_or(%288, %289) /* ty=Tensor[(7, 9, 14), int16] */
}

def @func_12290(%var_12289: Tensor[(56), uint8]) -> (Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(56), uint8]) {
  %295 = fn (%var_12286: Tensor[(56), uint8]) -> (Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(56), uint8]) {
    %290 = cast(%var_12286, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %291 = reshape(%290, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %292 = @func_4768(%291) /* ty=(Tensor[(65), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) */;
    %293 = @func_5733() /* ty=Tensor[(7, 9, 1), float64] */;
    %294 = %292.0;
    (%293, %294, %var_12286)
  };
  %295(%var_12289) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(56), uint8]) */
}

def @func_2342(%var_2315: Tensor[(15, 2, 1), bool]) -> (Tensor[(15, 2, ?), bool], Tensor[(15, 2, ?), uint32]) {
  %296 = cast(meta[relay.Constant][9] /* ty=Tensor[(15, 2, 1), bool] */, dtype="bool") /* ty=Tensor[(15, 2, 1), bool] */;
  %297 = shape_of(%var_2315, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%var_2315, dtype="bool") /* ty=Tensor[(15, 2, 1), bool] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %300 = cast(meta[relay.Constant][9] /* ty=Tensor[(15, 2, 1), bool] */, dtype="uint32") /* ty=Tensor[(15, 2, 1), uint32] */;
  %301 = shape_of(%var_2315, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(%var_2315, dtype="uint32") /* ty=Tensor[(15, 2, 1), uint32] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %304 = logical_or(%298, %299) /* ty=Tensor[(15, 2, ?), bool] */;
  %305 = logical_xor(%302, %303) /* ty=Tensor[(15, 2, ?), uint32] */;
  (%304, %305)
}

def @func_7195() -> Tensor[(7, 9, 1), float64] {
  @func_7193() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_4770(%var_4769: Tensor[(56), uint8]) -> (Tensor[(65), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) {
  %313 = fn (%var_4765: Tensor[(56), uint8]) -> (Tensor[(65), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) {
    %306 = cast(meta[relay.Constant][10] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
    %307 = cast(%var_4765, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %308 = reshape(%306, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
    %309 = reshape(%307, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %310 = @func_567(%308, %309) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
    %311 = @func_4721() /* ty=Tensor[(65), float32] */;
    %312 = %310.0;
    (%311, %312, meta[relay.Constant][10] /* ty=Tensor[(216), int64] */, %var_4765)
  };
  %313(%var_4769) /* ty=(Tensor[(65), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) */
}

def @func_7710(%var_7634: Tensor[(7, 9, 4), float64]) -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 4), uint16], Tensor[(15, 2, ?), uint32], Tensor[(30), bool], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 2, ?), bool], Tensor[(7, 9, 1), float64]) {
  %314 = @func_5931() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %315 = @func_5931() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %316 = %315.0;
  %317 = cast(%316, dtype="uint16") /* ty=Tensor[(7, 9, 1), uint16] */;
  %318 = cast(%var_7634, dtype="uint16") /* ty=Tensor[(7, 9, 4), uint16] */;
  %319 = cast(meta[relay.Constant][11] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %320 = reshape(%319, newshape=[15, 2, 1]) /* ty=Tensor[(15, 2, 1), bool] */;
  %321 = @func_2342(%320) /* ty=(Tensor[(15, 2, ?), bool], Tensor[(15, 2, ?), uint32]) */;
  %322 = cast(meta[relay.Constant][11] /* ty=Tensor[(30), bool] */, dtype="bool") /* ty=Tensor[(30), bool] */;
  %323 = reshape(%322, newshape=[15, 2, 1]) /* ty=Tensor[(15, 2, 1), bool] */;
  %324 = @func_2342(%323) /* ty=(Tensor[(15, 2, ?), bool], Tensor[(15, 2, ?), uint32]) */;
  %325 = @func_6793() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %326 = %314.0;
  %327 = left_shift(%317, %318) /* ty=Tensor[(7, 9, 4), uint16] */;
  %328 = %321.1;
  %329 = @func_6308() /* ty=Tensor[(7, 9, 1), float64] */;
  %330 = @func_6308() /* ty=Tensor[(7, 9, 1), float64] */;
  %331 = %324.0;
  %332 = %325.1;
  (%326, %327, %328, meta[relay.Constant][11] /* ty=Tensor[(30), bool] */, %329, %330, %331, %332)
}

def @func_4853(%var_4851: Tensor[(567), uint64], %var_4852: Tensor[(216), int64]) -> (Tensor[(7, 9, 1), float64], Tensor[(216), int64], Tensor[(567), uint64], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(56, 1), uint8]) {
  @func_4849(%var_4851, %var_4852) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(216), int64], Tensor[(567), uint64], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(56, 1), uint8]) */
}

def @func_12346() -> (Tensor[(8, 7, ?), uint8], Tensor[(7, 9, 1), float64]) {
  %337 = fn () -> (Tensor[(8, 7, ?), uint8], Tensor[(7, 9, 1), float64]) {
    %333 = @func_11750() /* ty=(Tensor[(8, 7, ?), uint8],) */;
    %334 = @func_9261() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %335 = %333.0;
    %336 = %334.1;
    (%335, %336)
  };
  %337() /* ty=(Tensor[(8, 7, ?), uint8], Tensor[(7, 9, 1), float64]) */
}

def @func_4952(%var_4951: Tensor[(1, 567), uint64]) -> (Tensor[(65), float32], Tensor[(8, 7, ?), uint8], Tensor[(1, 216), int64], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(1, 567), float32]) {
  %352 = fn (%var_4938: Tensor[(1, 567), uint64]) -> (Tensor[(65), float32], Tensor[(8, 7, ?), uint8], Tensor[(1, 216), int64], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(1, 567), float32]) {
    %338 = cast(%var_4938, dtype="uint64") /* ty=Tensor[(1, 567), uint64] */;
    %339 = cast(%var_4938, dtype="uint64") /* ty=Tensor[(1, 567), uint64] */;
    %340 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 216), int64] */, dtype="int64") /* ty=Tensor[(1, 216), int64] */;
    %341 = cast(meta[relay.Constant][13] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %342 = reshape(%338, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
    %343 = reshape(%339, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
    %344 = reshape(%340, newshape=[216]) /* ty=Tensor[(216), int64] */;
    %345 = reshape(%341, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %346 = @func_1422(%342, %343, %344, %345) /* ty=(Tensor[(9, 9, 7), uint64], Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(8, 7, ?), uint8]) */;
    %347 = cast(%var_4938, dtype="float32") /* ty=Tensor[(1, 567), float32] */;
    %348 = @func_4721() /* ty=Tensor[(65), float32] */;
    %349 = %346.4;
    %350 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
    %351 = exp(%347) /* ty=Tensor[(1, 567), float32] */;
    (%348, %349, meta[relay.Constant][12] /* ty=Tensor[(1, 216), int64] */, meta[relay.Constant][13] /* ty=Tensor[(56), uint8] */, %350, %351)
  };
  %352(%var_4951) /* ty=(Tensor[(65), float32], Tensor[(8, 7, ?), uint8], Tensor[(1, 216), int64], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(1, 567), float32]) */
}

def @func_13092(%var_13089: Tensor[(256), float32], %var_13090: Tensor[(30), bool], %var_13091: Tensor[(7, 9, 8), float64]) -> (Tensor[(7, 9, 1), float64], Tensor[(14, 4), uint8], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 256), int64], Tensor[(8, 4, 8), uint8], Tensor[(7, 9, 1), float64], Tensor[(30), bool], Tensor[(7, 9, 1), float64], Tensor[(15, 2, 13608), float64], Tensor[(7, 9, 8), bool], Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(1320), float32], Tensor[(9, 10, 4), float32], Tensor[(360), float32]) {
  %397 = fn (%var_12928: Tensor[(256), float32], %var_12997: Tensor[(30), bool], %var_13053: Tensor[(7, 9, 8), float64]) -> (Tensor[(7, 9, 1), float64], Tensor[(14, 4), uint8], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 256), int64], Tensor[(8, 4, 8), uint8], Tensor[(7, 9, 1), float64], Tensor[(30), bool], Tensor[(7, 9, 1), float64], Tensor[(15, 2, 13608), float64], Tensor[(7, 9, 8), bool], Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(1320), float32], Tensor[(9, 10, 4), float32], Tensor[(360), float32]) {
    %353 = cast(meta[relay.Constant][14] /* ty=Tensor[(13608), uint64] */, dtype="uint64") /* ty=Tensor[(13608), uint64] */;
    %354 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 4), uint8] */, dtype="uint8") /* ty=Tensor[(14, 4), uint8] */;
    %355 = reshape(%353, newshape=[18, 756]) /* ty=Tensor[(18, 756), uint64] */;
    %356 = reshape(%354, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %357 = @func_7121(%355, %356) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(9, 6, 4), float32], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 216), float32], Tensor[(18, 756), float64]) */;
    %358 = @func_8679() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %359 = %358.0;
    %360 = cast(%var_12928, dtype="int64") /* ty=Tensor[(256), int64] */;
    %361 = cast(%359, dtype="int64") /* ty=Tensor[(7, 9, 1), int64] */;
    %362 = cast(%var_12928, dtype="float32") /* ty=Tensor[(256), float32] */;
    %363 = cast(%var_12928, dtype="float32") /* ty=Tensor[(256), float32] */;
    %364 = reshape(%362, newshape=[8, 4, 8]) /* ty=Tensor[(8, 4, 8), float32] */;
    %365 = reshape(%363, newshape=[8, 4, 8]) /* ty=Tensor[(8, 4, 8), float32] */;
    %366 = @func_5813(%364, %365) /* ty=(Tensor[(8, 4, 8), float32],) */;
    %367 = %366.0;
    %368 = cast(%var_12928, dtype="uint8") /* ty=Tensor[(256), uint8] */;
    %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(3), int32] */;
    %370 = cast(%367, dtype="uint8") /* ty=Tensor[(8, 4, 8), uint8] */;
    %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %372 = cast(%var_12997, dtype="bool") /* ty=Tensor[(30), bool] */;
    %373 = reshape(%372, newshape=[15, 2, 1]) /* ty=Tensor[(15, 2, 1), bool] */;
    %374 = @func_2342(%373) /* ty=(Tensor[(15, 2, ?), bool], Tensor[(15, 2, ?), uint32]) */;
    %375 = %374.1;
    %376 = cast(meta[relay.Constant][14] /* ty=Tensor[(13608), uint64] */, dtype="float64") /* ty=Tensor[(13608), float64] */;
    %377 = cast(%375, dtype="float64") /* ty=Tensor[(15, 2, ?), float64] */;
    %378 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
    %379 = cast(%378, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
    %380 = cast(%var_13053, dtype="bool") /* ty=Tensor[(7, 9, 8), bool] */;
    %381 = cast(meta[relay.Constant][16] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
    %382 = reshape(%381, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
    %383 = @func_6730(%382) /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(11, 8, 15), float64]) */;
    %384 = cast(meta[relay.Constant][17] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %385 = reshape(%384, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), float32] */;
    %386 = %357.6;
    %387 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
    %388 = bitwise_or(%360, %361) /* ty=Tensor[(7, 9, 256), int64] */;
    %389 = bitwise_or(%370, %371) /* ty=Tensor[(8, 4, 8), uint8] */;
    %390 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
    %391 = @func_12664() /* ty=Tensor[(7, 9, 1), float64] */;
    %392 = mod(%376, %377) /* ty=Tensor[(15, 2, 13608), float64] */;
    %393 = less_equal(%379, %380) /* ty=Tensor[(7, 9, 8), bool] */;
    %394 = @func_6506() /* ty=Tensor[(7, 9, 1), float64] */;
    %395 = %383.0;
    %396 = @func_7995(%385) /* ty=Tensor[(9, 10, 4), float32] */;
    (%386, meta[relay.Constant][15] /* ty=Tensor[(14, 4), uint8] */, %387, %388, %389, %390, %var_12997, %391, %392, %393, %394, %395, meta[relay.Constant][16] /* ty=Tensor[(1320), float32] */, %396, meta[relay.Constant][17] /* ty=Tensor[(360), float32] */)
  };
  %397(%var_13089, %var_13090, %var_13091) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(14, 4), uint8], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 256), int64], Tensor[(8, 4, 8), uint8], Tensor[(7, 9, 1), float64], Tensor[(30), bool], Tensor[(7, 9, 1), float64], Tensor[(15, 2, 13608), float64], Tensor[(7, 9, 8), bool], Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(1320), float32], Tensor[(9, 10, 4), float32], Tensor[(360), float32]) */
}

def @func_11132() -> (Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) {
  %398 = @func_10536() /* ty=(Tensor[(65), float32],) */;
  %399 = @func_5522() /* ty=(Tensor[(65), float32],) */;
  %400 = %398.0;
  %401 = @func_6428() /* ty=Tensor[(7, 9, 1), float64] */;
  %402 = %399.0;
  (%400, %401, %402)
}

def @func_9796() -> (Tensor[(7, 9, 1), float64], Tensor[(12, 6, 14), float32], Tensor[(1008), float32], Tensor[(8, 7, ?), uint8]) {
  %411 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(12, 6, 14), float32], Tensor[(1008), float32], Tensor[(8, 7, ?), uint8]) {
    %403 = @func_8061() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %404 = cast(meta[relay.Constant][18] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %405 = reshape(%404, newshape=[12, 6, 14]) /* ty=Tensor[(12, 6, 14), float32] */;
    %406 = @func_865(%405) /* ty=(Tensor[(12, 6, 14), float32],) */;
    %407 = @func_8196() /* ty=(Tensor[(7, 9, ?), bool], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8]) */;
    %408 = %403.0;
    %409 = %406.0;
    %410 = %407.1;
    (%408, %409, meta[relay.Constant][18] /* ty=Tensor[(1008), float32] */, %410)
  };
  %411() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(12, 6, 14), float32], Tensor[(1008), float32], Tensor[(8, 7, ?), uint8]) */
}

def @func_5357() -> (Tensor[(7, 9, 1), float64],) {
  %412 = @func_5067() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %413 = %412.0;
  (%413,)
}

def @func_14072() -> (Tensor[(7, 9, 1), float64],) {
  @func_14070() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_4603() -> (Tensor[(7, 9, 1), float64],) {
  %416 = fn () -> (Tensor[(7, 9, 1), float64],) {
    %414 = @func_4578() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
    %415 = %414.0;
    (%415,)
  };
  %416() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_5621(%var_5619: Tensor[(567), uint64], %var_5620: Tensor[(7, 9, 216), uint64]) -> (Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(65), float32], Tensor[(7, 9, 216), float32]) {
  %435 = fn (%var_5554: Tensor[(567), uint64], %var_5591: Tensor[(7, 9, 216), uint64]) -> (Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(65), float32], Tensor[(7, 9, 216), float32]) {
    %417 = cast(%var_5554, dtype="uint64") /* ty=Tensor[(567), uint64] */;
    %418 = cast(meta[relay.Constant][19] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
    %419 = reshape(%417, newshape=[567]) /* ty=Tensor[(567), uint64] */;
    %420 = reshape(%418, newshape=[216]) /* ty=Tensor[(216), int64] */;
    %421 = @func_4849(%419, %420) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(216), int64], Tensor[(567), uint64], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(56, 1), uint8]) */;
    %422 = %421.0;
    %423 = cast(%422, dtype="uint64") /* ty=Tensor[(7, 9, 1), uint64] */;
    %424 = cast(meta[relay.Constant][19] /* ty=Tensor[(216), int64] */, dtype="uint64") /* ty=Tensor[(216), uint64] */;
    %425 = left_shift(%423, %424) /* ty=Tensor[(7, 9, 216), uint64] */;
    %426 = cast(%var_5591, dtype="uint32") /* ty=Tensor[(7, 9, 216), uint32] */;
    %427 = shape_of(%425, dtype="int32") /* ty=Tensor[(3), int32] */;
    %428 = cast(%425, dtype="uint32") /* ty=Tensor[(7, 9, 216), uint32] */;
    %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %430 = right_shift(%428, %429) /* ty=Tensor[(7, 9, 216), uint32] */;
    %431 = cast(%430, dtype="float32") /* ty=Tensor[(7, 9, 216), float32] */;
    %432 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
    %433 = @func_4721() /* ty=Tensor[(65), float32] */;
    %434 = acosh(%431) /* ty=Tensor[(7, 9, 216), float32] */;
    (%432, %var_5554, %433, %434)
  };
  %435(%var_5619, %var_5620) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(65), float32], Tensor[(7, 9, 216), float32]) */
}

def @func_8313() -> Tensor[(7, 9, 1), float64] {
  %437 = fn () -> Tensor[(7, 9, 1), float64] {
    %436 = @func_5357() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %436.0
  };
  %437() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_14644() -> Tensor[(8, 7, ?), uint8] {
  %438 = @func_11750() /* ty=(Tensor[(8, 7, ?), uint8],) */;
  %438.0
}

def @func_14378() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %439 = @func_8061() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %440 = @func_13330() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %441 = %439.0;
  %442 = %440.0;
  (%441, %442)
}

def @func_12882() -> (Tensor[(7, 9, ?), bool], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  @func_12880() /* ty=(Tensor[(7, 9, ?), bool], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_9474() -> (Tensor[(7, 9, 1), float64], Tensor[(13, 5), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(567), float32]) {
  %443 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 5), float32] */, dtype="float32") /* ty=Tensor[(13, 5), float32] */;
  %444 = reshape(%443, newshape=[65]) /* ty=Tensor[(65), float32] */;
  %445 = @func_7308(%444) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(13608), uint64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 65), bool], Tensor[(7, 9, 1), float64]) */;
  %446 = %445.1;
  %447 = cast(%446, dtype="float32") /* ty=Tensor[(567), float32] */;
  %448 = @func_8312() /* ty=Tensor[(7, 9, 1), float64] */;
  %449 = @func_4109() /* ty=Tensor[(7, 9, 1), float64] */;
  %450 = @func_5733() /* ty=Tensor[(7, 9, 1), float64] */;
  %451 = atanh(%447) /* ty=Tensor[(567), float32] */;
  (%448, meta[relay.Constant][20] /* ty=Tensor[(13, 5), float32] */, %449, %450, %451)
}

def @func_4722() -> Tensor[(65), float32] {
  %453 = fn () -> Tensor[(65), float32] {
    %452 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
    %452.7
  };
  %453() /* ty=Tensor[(65), float32] */
}

def @func_12119() -> Tensor[(7, 9, 1), float64] {
  @func_6428() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_13673() -> (Tensor[(7, 9, 1), float64],) {
  @func_13671() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_9030() -> Tensor[(7, 9, 1), float64] {
  %455 = fn () -> Tensor[(7, 9, 1), float64] {
    %454 = @func_5847() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %454.0
  };
  %455() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_7157() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  @func_7155() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_15198() -> (Tensor[(1008), float32], Tensor[(7, 9, 1008), int64], Tensor[(7, 9, 1008), float32]) {
  @func_15196() /* ty=(Tensor[(1008), float32], Tensor[(7, 9, 1008), int64], Tensor[(7, 9, 1008), float32]) */
}

def @func_12489() -> (Tensor[(5, ?, 13), float64], Tensor[(65), float32]) {
  @func_12487() /* ty=(Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */
}

def @func_4580() -> (Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(7, 9, 1), float64]) {
  @func_4578() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */
}

def @func_11289() -> Tensor[(65), float32] {
  @func_11287() /* ty=Tensor[(65), float32] */
}

def @func_7806(%var_7794: Tensor[(14, 12, 10), float32]) -> (Tensor[(14, 12, 10), float32],) {
  %456 = cast(%var_7794, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %457 = cos(%456) /* ty=Tensor[(14, 12, 10), float32] */;
  (%457,)
}

def @func_11035() -> Tensor[(65), float32] {
  @func_11033() /* ty=Tensor[(65), float32] */
}

def @func_13258() -> (Tensor[(7, 9, 1), float64],) {
  %459 = fn () -> (Tensor[(7, 9, 1), float64],) {
    %458 = @func_12911() /* ty=Tensor[(7, 9, 1), float64] */;
    (%458,)
  };
  %459() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_4391() -> (Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) {
  @func_4389() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */
}

def @func_4304() -> (Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) {
  @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */
}

def @func_5032() -> Tensor[(7, 9, 1), float64] {
  @func_5030() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_867(%var_866: Tensor[(12, 6, 14), float32]) -> (Tensor[(12, 6, 14), float32],) {
  %465 = fn (%var_845: Tensor[(12, 6, 14), float32]) -> (Tensor[(12, 6, 14), float32],) {
    %460 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 6, 14), float32] */, dtype="float32") /* ty=Tensor[(12, 6, 14), float32] */;
    %461 = shape_of(%var_845, dtype="int32") /* ty=Tensor[(3), int32] */;
    %462 = cast(%var_845, dtype="float32") /* ty=Tensor[(12, 6, 14), float32] */;
    %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %464 = mod(%462, %463) /* ty=Tensor[(12, 6, 14), float32] */;
    (%464,)
  };
  %465(%var_866) /* ty=(Tensor[(12, 6, 14), float32],) */
}

def @func_11033() -> Tensor[(65), float32] {
  @func_6299() /* ty=Tensor[(65), float32] */
}

def @func_5359() -> (Tensor[(7, 9, 1), float64],) {
  @func_5357() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_14312() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %469 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
    %466 = @func_13330() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %467 = %466.0;
    %468 = @func_10357() /* ty=Tensor[(7, 9, 1), float64] */;
    (%467, %468)
  };
  %469() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_10976() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %470 = @func_10509() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %471 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %472 = %470.0;
  %473 = %471.0;
  (%472, %473)
}

def @func_11178() -> Tensor[(7, 9, 1), float32] {
  %476 = fn () -> Tensor[(7, 9, 1), float32] {
    %474 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
    %475 = cast(%474, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
    tan(%475) /* ty=Tensor[(7, 9, 1), float32] */
  };
  %476() /* ty=Tensor[(7, 9, 1), float32] */
}

def @func_5398() -> (Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) {
  %480 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) {
    %477 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
    %478 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
    %479 = %477.6;
    (%478, %479)
  };
  %480() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */
}

def @func_10357() -> Tensor[(7, 9, 1), float64] {
  %481 = @func_6191() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
  %481.1
}

def @func_1193(%var_1191: Tensor[(5, 1, 13), float32]) -> Tensor[(5, ?, 13), float64] {
  @func_1190(%var_1191) /* ty=Tensor[(5, ?, 13), float64] */
}

def @func_13652() -> (Tensor[(65), float32], Tensor[(8, 7, ?), uint8]) {
  %486 = fn () -> (Tensor[(65), float32], Tensor[(8, 7, ?), uint8]) {
    %482 = @func_13131() /* ty=(Tensor[(65), float32],) */;
    %483 = @func_8196() /* ty=(Tensor[(7, 9, ?), bool], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8]) */;
    %484 = %482.0;
    %485 = %483.1;
    (%484, %485)
  };
  %486() /* ty=(Tensor[(65), float32], Tensor[(8, 7, ?), uint8]) */
}

def @func_8668() -> (Tensor[(65), float32],) {
  %488 = fn () -> (Tensor[(65), float32],) {
    %487 = @func_6299() /* ty=Tensor[(65), float32] */;
    (%487,)
  };
  %488() /* ty=(Tensor[(65), float32],) */
}

def @func_6904() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %491 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
    %489 = @func_6308() /* ty=Tensor[(7, 9, 1), float64] */;
    %490 = @func_6506() /* ty=Tensor[(7, 9, 1), float64] */;
    (%489, %490)
  };
  %491() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_7938(%var_7936: Tensor[(150), float64], %var_7937: Tensor[(56), uint8]) -> (Tensor[(5, ?, 13), float64], Tensor[(9, 6, 4), float32], Tensor[(150), float64], Tensor[(56), uint8]) {
  @func_7934(%var_7936, %var_7937) /* ty=(Tensor[(5, ?, 13), float64], Tensor[(9, 6, 4), float32], Tensor[(150), float64], Tensor[(56), uint8]) */
}

def @func_11245() -> Tensor[(7, 9, 1), float64] {
  @func_9213() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_11489() -> Tensor[(7, 9, 1), float64] {
  %493 = fn () -> Tensor[(7, 9, 1), float64] {
    %492 = @func_9877() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %492.0
  };
  %493() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_12208(%var_12207: Tensor[(7, 9, 1), float64]) -> (Tensor[(7, 9, ?), int8],) {
  %501 = fn (%var_12182: Tensor[(7, 9, 1), float64]) -> (Tensor[(7, 9, ?), int8],) {
    %494 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %495 = %494.0;
    %496 = cast(%var_12182, dtype="int8") /* ty=Tensor[(7, 9, 1), int8] */;
    %497 = shape_of(%495, dtype="int32") /* ty=Tensor[(3), int32] */;
    %498 = cast(%495, dtype="int8") /* ty=Tensor[(7, 9, 1), int8] */;
    %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %500 = minimum(%498, %499) /* ty=Tensor[(7, 9, ?), int8] */;
    (%500,)
  };
  %501(%var_12207) /* ty=(Tensor[(7, 9, ?), int8],) */
}

def @func_10758() -> Tensor[(65), float32] {
  %502 = @func_10536() /* ty=(Tensor[(65), float32],) */;
  %502.0
}

def @func_15005(%var_15004: Tensor[(65), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 65), bool], Tensor[(65), float32]) {
  %509 = fn (%var_14999: Tensor[(65), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 65), bool], Tensor[(65), float32]) {
    %503 = @func_14012() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), int8]) */;
    %504 = cast(%var_14999, dtype="float32") /* ty=Tensor[(65), float32] */;
    %505 = reshape(%504, newshape=[65]) /* ty=Tensor[(65), float32] */;
    %506 = @func_7308(%505) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(13608), uint64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 65), bool], Tensor[(7, 9, 1), float64]) */;
    %507 = %503.1;
    %508 = %506.4;
    (%507, %508, %var_14999)
  };
  %509(%var_15004) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 65), bool], Tensor[(65), float32]) */
}

def @func_6309() -> Tensor[(7, 9, 1), float64] {
  %511 = fn () -> Tensor[(7, 9, 1), float64] {
    %510 = @func_5357() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %510.0
  };
  %511() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_4058() -> (Tensor[(7, 9, 1), float64],) {
  %512 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 9, 1), float64] */, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
  %513 = log2(%512) /* ty=Tensor[(7, 9, 1), float64] */;
  (%513,)
}

def @func_14070() -> (Tensor[(7, 9, 1), float64],) {
  %514 = @func_8061() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %515 = %514.0;
  (%515,)
}

def @func_6429() -> Tensor[(7, 9, 1), float64] {
  %517 = fn () -> Tensor[(7, 9, 1), float64] {
    %516 = @func_5397() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
    %516.0
  };
  %517() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_8130() -> (Tensor[(5, ?, 13), float64],) {
  %520 = fn () -> (Tensor[(5, ?, 13), float64],) {
    %518 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
    %519 = %518.6;
    (%519,)
  };
  %520() /* ty=(Tensor[(5, ?, 13), float64],) */
}

def @func_12911() -> Tensor[(7, 9, 1), float64] {
  %521 = @func_7155() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %521.0
}

def @func_6691() -> (Tensor[(7, 9, ?), float32],) {
  %524 = fn () -> (Tensor[(7, 9, ?), float32],) {
    %522 = @func_6059() /* ty=(Tensor[(7, 9, ?), float32],) */;
    %523 = %522.0;
    (%523,)
  };
  %524() /* ty=(Tensor[(7, 9, ?), float32],) */
}

def @func_13246() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), float32], Tensor[(56), uint8]) {
  @func_13244() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), float32], Tensor[(56), uint8]) */
}

def @func_10617(%var_10613: Tensor[(72), float32], %var_10614: Tensor[(2310), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(2310), float32], Tensor[(72), float32], Tensor[(2310), float32]) {
  %525 = @func_8061() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %526 = cast(%var_10613, dtype="float32") /* ty=Tensor[(72), float32] */;
  %527 = cast(%var_10614, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %528 = reshape(%526, newshape=[3, 8, 3]) /* ty=Tensor[(3, 8, 3), float32] */;
  %529 = reshape(%527, newshape=[2310]) /* ty=Tensor[(2310), float32] */;
  %530 = @func_9113(%528, %529) /* ty=(Tensor[(3, 8, 3), float32], Tensor[(3, 8, 3), float32], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %531 = %525.0;
  %532 = %530.4;
  (%531, %532, %var_10613, %var_10614)
}

def @func_11630(%var_11607: Tensor[(2310), float32], %var_11623: Tensor[(256), float32]) -> (Tensor[(5, ?, 13), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), int32], Tensor[(8, 4, 8), float64]) {
  %533 = @func_10057() /* ty=(Tensor[(5, ?, 13), float64],) */;
  %534 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %535 = cast(%var_11607, dtype="float32") /* ty=Tensor[(2310), float32] */;
  %536 = reshape(%535, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), float32] */;
  %537 = @func_6331(%536) /* ty=Tensor[(15, 11, 14), float32] */;
  %538 = cast(%var_11607, dtype="int32") /* ty=Tensor[(2310), int32] */;
  %539 = shape_of(%537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %540 = cast(%537, dtype="int32") /* ty=Tensor[(15, 11, 14), int32] */;
  %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %542 = cast(%var_11623, dtype="float32") /* ty=Tensor[(256), float32] */;
  %543 = cast(%var_11623, dtype="float32") /* ty=Tensor[(256), float32] */;
  %544 = reshape(%542, newshape=[8, 4, 8]) /* ty=Tensor[(8, 4, 8), float32] */;
  %545 = reshape(%543, newshape=[8, 4, 8]) /* ty=Tensor[(8, 4, 8), float32] */;
  %546 = @func_5813(%544, %545) /* ty=(Tensor[(8, 4, 8), float32],) */;
  %547 = %546.0;
  %548 = cast(%var_11623, dtype="float64") /* ty=Tensor[(256), float64] */;
  %549 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%547, dtype="float64") /* ty=Tensor[(8, 4, 8), float64] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %552 = %533.0;
  %553 = %534.0;
  %554 = minimum(%540, %541) /* ty=Tensor[(15, 11, 14), int32] */;
  %555 = divide(%550, %551) /* ty=Tensor[(8, 4, 8), float64] */;
  (%552, %553, %554, %555)
}

def @func_295(%var_286: Tensor[(8, 7, 1), uint8], %var_287: Tensor[(8, 7, 1), uint8]) -> (Tensor[(8, 7, ?), uint8], Tensor[(8, 7, 1), float32]) {
  %556 = cast(%var_287, dtype="uint8") /* ty=Tensor[(8, 7, 1), uint8] */;
  %557 = shape_of(%var_286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %558 = cast(%var_286, dtype="uint8") /* ty=Tensor[(8, 7, 1), uint8] */;
  %559 = dyn.reshape(%556, %557, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %560 = cast(%var_287, dtype="float32") /* ty=Tensor[(8, 7, 1), float32] */;
  %561 = subtract(%558, %559) /* ty=Tensor[(8, 7, ?), uint8] */;
  %562 = acos(%560) /* ty=Tensor[(8, 7, 1), float32] */;
  (%561, %562)
}

def @func_13244() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), float32], Tensor[(56), uint8]) {
  %563 = cast(meta[relay.Constant][23] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %564 = reshape(%563, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %565 = @func_8726(%564) /* ty=(Tensor[(5, ?, 13), float64], Tensor[(30), bool], Tensor[(252), float64], Tensor[(9, 6, 4), float32], Tensor[(56), uint8], Tensor[(7, 9, ?), float32]) */;
  %566 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
  %567 = %565.5;
  (%566, %567, meta[relay.Constant][23] /* ty=Tensor[(56), uint8] */)
}

def @func_12487() -> (Tensor[(5, ?, 13), float64], Tensor[(65), float32]) {
  %568 = @func_4389() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
  %569 = @func_6120() /* ty=(Tensor[(65), float32],) */;
  %570 = %568.1;
  %571 = %569.0;
  (%570, %571)
}

def @func_11736(%var_11733: Tensor[(315), float64], %var_11734: Tensor[(1, 150), float64], %var_11735: Tensor[(448), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(216), int64], Tensor[(315), float64], Tensor[(56), uint8], Tensor[(1, 150), float64], Tensor[(4, 14, 8), float32], Tensor[(448), float32]) {
  %589 = fn (%var_11710: Tensor[(315), float64], %var_11712: Tensor[(1, 150), float64], %var_11726: Tensor[(448), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(216), int64], Tensor[(315), float64], Tensor[(56), uint8], Tensor[(1, 150), float64], Tensor[(4, 14, 8), float32], Tensor[(448), float32]) {
    %572 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %573 = @func_9261() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %574 = @func_10976() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %575 = cast(%var_11710, dtype="float64") /* ty=Tensor[(315), float64] */;
    %576 = cast(meta[relay.Constant][24] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %577 = cast(%var_11712, dtype="float64") /* ty=Tensor[(1, 150), float64] */;
    %578 = reshape(%575, newshape=[7, 9, 5]) /* ty=Tensor[(7, 9, 5), float64] */;
    %579 = reshape(%576, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %580 = reshape(%577, newshape=[150]) /* ty=Tensor[(150), float64] */;
    %581 = @func_4448(%578, %579, %580) /* ty=(Tensor[(7, 9, 5), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, ?), uint8], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(9, 6, 4), float32], Tensor[(150), float64], Tensor[(8, 7, 1), float32], Tensor[(7, 9, 5), float32]) */;
    %582 = cast(%var_11726, dtype="float32") /* ty=Tensor[(448), float32] */;
    %583 = reshape(%582, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float32] */;
    %584 = %572.0;
    %585 = %573.1;
    %586 = %574.0;
    %587 = %581.3;
    %588 = @func_7986(%583) /* ty=Tensor[(4, 14, 8), float32] */;
    (%584, %585, %586, %587, %var_11710, meta[relay.Constant][24] /* ty=Tensor[(56), uint8] */, %var_11712, %588, %var_11726)
  };
  %589(%var_11733, %var_11734, %var_11735) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(216), int64], Tensor[(315), float64], Tensor[(56), uint8], Tensor[(1, 150), float64], Tensor[(4, 14, 8), float32], Tensor[(448), float32]) */
}

def @func_9261() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %590 = @func_5067() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %591 = @func_5225() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %592 = %590.0;
  %593 = %591.0;
  %594 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
  (%592, %593, %594)
}

def @func_11857() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), bool]) {
  %605 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), bool]) {
    %595 = @func_6793() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %596 = %595.1;
    %597 = @func_5999() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %598 = %597.0;
    %599 = cast(%598, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
    %600 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
    %601 = cast(%596, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
    %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %603 = @func_10547() /* ty=Tensor[(7, 9, 1), float64] */;
    %604 = less_equal(%601, %602) /* ty=Tensor[(7, 9, ?), bool] */;
    (%603, %604)
  };
  %605() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), bool]) */
}

def @func_2345(%var_2343: Tensor[(15, 2, 1), bool]) -> (Tensor[(15, 2, ?), bool], Tensor[(15, 2, ?), uint32]) {
  @func_2342(%var_2343) /* ty=(Tensor[(15, 2, ?), bool], Tensor[(15, 2, ?), uint32]) */
}

def @func_11373(%var_11371: Tensor[(13, 7, 14), float32], %var_11372: Tensor[(2310), float32]) -> (Tensor[(13608), uint64], Tensor[(7, 9, 567), int64], Tensor[(72), float32], Tensor[(3, 24), float32], Tensor[(2310), float32], Tensor[(7, 9, 1), float64], Tensor[(13, 7, 14), float32]) {
  %627 = fn (%var_11325: Tensor[(13, 7, 14), float32], %var_11342: Tensor[(2310), float32]) -> (Tensor[(13608), uint64], Tensor[(7, 9, 567), int64], Tensor[(72), float32], Tensor[(3, 24), float32], Tensor[(2310), float32], Tensor[(7, 9, 1), float64], Tensor[(13, 7, 14), float32]) {
    %606 = cast(meta[relay.Constant][26] /* ty=Tensor[(567), uint64] */, dtype="uint64") /* ty=Tensor[(567), uint64] */;
    %607 = cast(meta[relay.Constant][25] /* ty=Tensor[(13608), uint64] */, dtype="uint64") /* ty=Tensor[(13608), uint64] */;
    %608 = reshape(%606, newshape=[567]) /* ty=Tensor[(567), uint64] */;
    %609 = reshape(%607, newshape=[7, 9, 216]) /* ty=Tensor[(7, 9, 216), uint64] */;
    %610 = @func_5618(%608, %609) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(65), float32], Tensor[(7, 9, 216), float32]) */;
    %611 = %610.0;
    %612 = cast(%611, dtype="int64") /* ty=Tensor[(7, 9, 1), int64] */;
    %613 = cast(meta[relay.Constant][26] /* ty=Tensor[(567), uint64] */, dtype="int64") /* ty=Tensor[(567), int64] */;
    %614 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
    %615 = cast(%var_11342, dtype="float32") /* ty=Tensor[(2310), float32] */;
    %616 = reshape(%614, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %617 = reshape(%615, newshape=[2310]) /* ty=Tensor[(2310), float32] */;
    %618 = @func_10617(%616, %617) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(2310), float32], Tensor[(72), float32], Tensor[(2310), float32]) */;
    %619 = @func_6793() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %620 = cast(%var_11325, dtype="float32") /* ty=Tensor[(13, 7, 14), float32] */;
    %621 = sinh(%620) /* ty=Tensor[(13, 7, 14), float32] */;
    %622 = cast(%621, dtype="float32") /* ty=Tensor[(13, 7, 14), float32] */;
    %623 = add(%612, %613) /* ty=Tensor[(7, 9, 567), int64] */;
    %624 = %618.2;
    %625 = %619.0;
    %626 = log2(%622) /* ty=Tensor[(13, 7, 14), float32] */;
    (meta[relay.Constant][25] /* ty=Tensor[(13608), uint64] */, %623, %624, meta[relay.Constant][27] /* ty=Tensor[(3, 24), float32] */, %var_11342, %625, %626)
  };
  %627(%var_11371, %var_11372) /* ty=(Tensor[(13608), uint64], Tensor[(7, 9, 567), int64], Tensor[(72), float32], Tensor[(3, 24), float32], Tensor[(2310), float32], Tensor[(7, 9, 1), float64], Tensor[(13, 7, 14), float32]) */
}

def @func_6077() -> (Tensor[(7, 9, 1), float64],) {
  %630 = fn () -> (Tensor[(7, 9, 1), float64],) {
    %628 = @func_5067() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %629 = %628.0;
    (%629,)
  };
  %630() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_15269() -> (Tensor[(8, 7, ?), uint8], Tensor[(7, 9, 1), float64]) {
  %635 = fn () -> (Tensor[(8, 7, ?), uint8], Tensor[(7, 9, 1), float64]) {
    %631 = @func_11750() /* ty=(Tensor[(8, 7, ?), uint8],) */;
    %632 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %633 = %631.0;
    %634 = %632.0;
    (%633, %634)
  };
  %635() /* ty=(Tensor[(8, 7, ?), uint8], Tensor[(7, 9, 1), float64]) */
}

def @func_4389() -> (Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) {
  %636 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %637 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %638 = %636.0;
  %639 = %637.6;
  (%638, %639)
}

def @func_4154() -> (Tensor[(7, 9, 1), float64],) {
  %640 = @func_4109() /* ty=Tensor[(7, 9, 1), float64] */;
  (%640,)
}

def @func_15075() -> (Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(1320), float32]) {
  %641 = @func_10464() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %642 = cast(meta[relay.Constant][28] /* ty=Tensor[(1320), float32] */, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %643 = reshape(%642, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float32] */;
  %644 = @func_6730(%643) /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(11, 8, 15), float64]) */;
  %645 = %641.0;
  %646 = %644.0;
  (%645, %646, meta[relay.Constant][28] /* ty=Tensor[(1320), float32] */)
}

def @func_6730(%var_6692: Tensor[(11, 8, 15), float32]) -> (Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(11, 8, 15), float64]) {
  %647 = @func_5999() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %648 = cast(%var_6692, dtype="float32") /* ty=Tensor[(11, 8, 15), float32] */;
  %649 = atanh(%648) /* ty=Tensor[(11, 8, 15), float32] */;
  %650 = cast(%649, dtype="float64") /* ty=Tensor[(11, 8, 15), float64] */;
  %651 = @func_6299() /* ty=Tensor[(65), float32] */;
  %652 = %647.0;
  %653 = cos(%650) /* ty=Tensor[(11, 8, 15), float64] */;
  (%651, %652, %653)
}

def @func_7895(%var_7893: Tensor[(7, 9, 12), float64], %var_7894: Tensor[(56), uint8]) -> (Tensor[(7, 9, 12), uint8], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(216, 1), float32]) {
  @func_7891(%var_7893, %var_7894) /* ty=(Tensor[(7, 9, 12), uint8], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(216, 1), float32]) */
}

def @func_10359() -> Tensor[(7, 9, 1), float64] {
  @func_10357() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_13132() -> (Tensor[(65), float32],) {
  %656 = fn () -> (Tensor[(65), float32],) {
    %654 = @func_4578() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
    %655 = %654.1;
    (%655,)
  };
  %656() /* ty=(Tensor[(65), float32],) */
}

def @func_10760() -> Tensor[(65), float32] {
  @func_10758() /* ty=Tensor[(65), float32] */
}

def @func_11247() -> Tensor[(7, 9, 1), float64] {
  @func_11245() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_15196() -> (Tensor[(1008), float32], Tensor[(7, 9, 1008), int64], Tensor[(7, 9, 1008), float32]) {
  %657 = cast(meta[relay.Constant][29] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %658 = reshape(%657, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %659 = @func_10003(%658) /* ty=(Tensor[(12, 6, 14), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1008), bool]) */;
  %660 = %659.2;
  %661 = cast(%660, dtype="float32") /* ty=Tensor[(7, 9, 1008), float32] */;
  %662 = asin(%661) /* ty=Tensor[(7, 9, 1008), float32] */;
  %663 = @func_11874() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %664 = %663.0;
  %665 = cast(%662, dtype="int64") /* ty=Tensor[(7, 9, 1008), int64] */;
  %666 = cast(%664, dtype="int64") /* ty=Tensor[(7, 9, 1), int64] */;
  %667 = cast(%662, dtype="float32") /* ty=Tensor[(7, 9, 1008), float32] */;
  %668 = log10(%667) /* ty=Tensor[(7, 9, 1008), float32] */;
  %669 = cast(%668, dtype="float32") /* ty=Tensor[(7, 9, 1008), float32] */;
  %670 = bitwise_or(%665, %666) /* ty=Tensor[(7, 9, 1008), int64] */;
  %671 = cosh(%669) /* ty=Tensor[(7, 9, 1008), float32] */;
  (meta[relay.Constant][29] /* ty=Tensor[(1008), float32] */, %670, %671)
}

def @func_9476() -> (Tensor[(7, 9, 1), float64], Tensor[(13, 5), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(567), float32]) {
  @func_9474() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(13, 5), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(567), float32]) */
}

def @func_7809(%var_7807: Tensor[(14, 12, 10), float32]) -> (Tensor[(14, 12, 10), float32],) {
  @func_7806(%var_7807) /* ty=(Tensor[(14, 12, 10), float32],) */
}

def @func_7310(%var_7309: Tensor[(65), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(13608), uint64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 65), bool], Tensor[(7, 9, 1), float64]) {
  %691 = fn (%var_7265: Tensor[(65), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(13608), uint64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 65), bool], Tensor[(7, 9, 1), float64]) {
    %672 = cast(meta[relay.Constant][30] /* ty=Tensor[(567), uint64] */, dtype="uint64") /* ty=Tensor[(567), uint64] */;
    %673 = cast(meta[relay.Constant][31] /* ty=Tensor[(13608), uint64] */, dtype="uint64") /* ty=Tensor[(13608), uint64] */;
    %674 = reshape(%672, newshape=[567]) /* ty=Tensor[(567), uint64] */;
    %675 = reshape(%673, newshape=[7, 9, 216]) /* ty=Tensor[(7, 9, 216), uint64] */;
    %676 = @func_5618(%674, %675) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(65), float32], Tensor[(7, 9, 216), float32]) */;
    %677 = %676.2;
    %678 = cast(%var_7265, dtype="bool") /* ty=Tensor[(65), bool] */;
    %679 = shape_of(%677, dtype="int32") /* ty=Tensor[(1), int32] */;
    %680 = cast(%677, dtype="bool") /* ty=Tensor[(65), bool] */;
    %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?), bool] */;
    %682 = less_equal(%680, %681) /* ty=Tensor[(65), bool] */;
    %683 = @func_6654() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %684 = %683.1;
    %685 = cast(%682, dtype="bool") /* ty=Tensor[(65), bool] */;
    %686 = cast(%684, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
    %687 = @func_6308() /* ty=Tensor[(7, 9, 1), float64] */;
    %688 = @func_6308() /* ty=Tensor[(7, 9, 1), float64] */;
    %689 = logical_or(%685, %686) /* ty=Tensor[(7, 9, 65), bool] */;
    %690 = @func_6308() /* ty=Tensor[(7, 9, 1), float64] */;
    (%687, meta[relay.Constant][30] /* ty=Tensor[(567), uint64] */, meta[relay.Constant][31] /* ty=Tensor[(13608), uint64] */, %688, %689, %690)
  };
  %691(%var_7309) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(13608), uint64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 65), bool], Tensor[(7, 9, 1), float64]) */
}

def @func_12121() -> Tensor[(7, 9, 1), float64] {
  @func_12119() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_8680() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %696 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
    %692 = @func_6654() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %693 = @func_8061() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %694 = %692.1;
    %695 = %693.0;
    (%694, %695)
  };
  %696() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_10681() -> (Tensor[(7, 9, 1), float64],) {
  @func_10679() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_14753() -> (Tensor[(7, 9, 1), float32], Tensor[(7, 9, 1), float64]) {
  %697 = @func_12716() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %698 = @func_11177() /* ty=Tensor[(7, 9, 1), float32] */;
  %699 = %697.1;
  (%698, %699)
}

def @func_12880() -> (Tensor[(7, 9, ?), bool], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %700 = @func_10547() /* ty=Tensor[(7, 9, 1), float64] */;
  %701 = cast(%700, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
  %702 = reshape(%701, newshape=[7, 9, 1]) /* ty=Tensor[(7, 9, 1), float64] */;
  %703 = @func_12206(%702) /* ty=(Tensor[(7, 9, ?), int8],) */;
  %704 = %703.0;
  %705 = cast(%700, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%704, dtype="bool") /* ty=Tensor[(7, 9, ?), bool] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %709 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %710 = equal(%707, %708) /* ty=Tensor[(7, 9, ?), bool] */;
  %711 = @func_8353() /* ty=Tensor[(7, 9, 1), float64] */;
  %712 = %709.0;
  (%710, %711, %712)
}

def @func_11537() -> (Tensor[(65), float32],) {
  %713 = @func_11287() /* ty=Tensor[(65), float32] */;
  (%713,)
}

def @func_13824() -> (Tensor[(7, 9, 1), float64],) {
  @func_13822() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_5906() -> (Tensor[(7, 9, 1), float64],) {
  @func_5904() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_4302() -> (Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) {
  %714 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 13), float64] */;
  %715 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(13, 5, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %716 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 13), float64] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %718 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 18), int64] */, dtype="int64") /* ty=Tensor[(12, 18), int64] */;
  %719 = cast(meta[relay.Constant][35] /* ty=Tensor[(56, 1), uint8] */, dtype="uint8") /* ty=Tensor[(56, 1), uint8] */;
  %720 = reshape(%718, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %721 = reshape(%719, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %722 = @func_567(%720, %721) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %723 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 18), int64] */, dtype="int64") /* ty=Tensor[(12, 18), int64] */;
  %724 = %722.3;
  %725 = cast(%724, dtype="uint8") /* ty=Tensor[(8, 7, 1), uint8] */;
  %726 = reshape(%723, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %727 = reshape(%725, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %728 = @func_567(%726, %727) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %729 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 18), int64] */, dtype="float32") /* ty=Tensor[(12, 18), float32] */;
  %730 = cast(meta[relay.Constant][36] /* ty=Tensor[(65), float32] */, dtype="float32") /* ty=Tensor[(65), float32] */;
  %731 = reshape(%730, newshape=[5, 1, 13]) /* ty=Tensor[(5, 1, 13), float32] */;
  %732 = divide(%716, %717) /* ty=Tensor[(13, 5, 13), float64] */;
  %733 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
  %734 = %728.2;
  %735 = acosh(%729) /* ty=Tensor[(12, 18), float32] */;
  %736 = @func_1190(%731) /* ty=Tensor[(5, ?, 13), float64] */;
  (%732, %724, meta[relay.Constant][35] /* ty=Tensor[(56, 1), uint8] */, %733, %734, %735, %736, meta[relay.Constant][36] /* ty=Tensor[(65), float32] */)
}

def @func_11515() -> (Tensor[(7, 9, 1), float64],) {
  %739 = fn () -> (Tensor[(7, 9, 1), float64],) {
    %737 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %738 = %737.0;
    (%738,)
  };
  %739() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_14582(%var_14581: Tensor[(5, 6), uint8]) -> (Tensor[(5, 12, 13), bool], Tensor[(56), uint8], Tensor[(5, 6), uint8], Tensor[(150), uint8], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(7, 9, 567), bool]) {
  %761 = fn (%var_14555: Tensor[(5, 6), uint8]) -> (Tensor[(5, 12, 13), bool], Tensor[(56), uint8], Tensor[(5, 6), uint8], Tensor[(150), uint8], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(7, 9, 567), bool]) {
    %740 = @func_12071() /* ty=Tensor[(5, ?, 13), float64] */;
    %741 = cast(%740, dtype="bool") /* ty=Tensor[(5, ?, 13), bool] */;
    %742 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 12, 13), float64] */, dtype="bool") /* ty=Tensor[(5, 12, 13), bool] */;
    %743 = cast(%var_14555, dtype="uint8") /* ty=Tensor[(5, 6), uint8] */;
    %744 = cast(meta[relay.Constant][38] /* ty=Tensor[(150), uint8] */, dtype="uint8") /* ty=Tensor[(150), uint8] */;
    %745 = cast(meta[relay.Constant][39] /* ty=Tensor[(567), uint64] */, dtype="uint64") /* ty=Tensor[(567), uint64] */;
    %746 = cast(meta[relay.Constant][40] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
    %747 = cast(meta[relay.Constant][41] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %748 = reshape(%743, newshape=[6, 1, 5]) /* ty=Tensor[(6, 1, 5), uint8] */;
    %749 = reshape(%744, newshape=[6, 5, 5]) /* ty=Tensor[(6, 5, 5), uint8] */;
    %750 = reshape(%745, newshape=[9, 63]) /* ty=Tensor[(9, 63), uint64] */;
    %751 = reshape(%746, newshape=[216]) /* ty=Tensor[(216), int64] */;
    %752 = reshape(%747, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %753 = @func_10380(%748, %749, %750, %751, %752) /* ty=(Tensor[(6, 5, 5), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, ?), uint8], Tensor[(9, 63), uint64], Tensor[(216), int64], Tensor[(56), uint8]) */;
    %754 = @func_10838() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %755 = %754.1;
    %756 = cast(meta[relay.Constant][39] /* ty=Tensor[(567), uint64] */, dtype="bool") /* ty=Tensor[(567), bool] */;
    %757 = cast(%755, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
    %758 = equal(%741, %742) /* ty=Tensor[(5, 12, 13), bool] */;
    %759 = %753.5;
    %760 = logical_and(%756, %757) /* ty=Tensor[(7, 9, 567), bool] */;
    (%758, %759, %var_14555, meta[relay.Constant][38] /* ty=Tensor[(150), uint8] */, meta[relay.Constant][40] /* ty=Tensor[(216), int64] */, meta[relay.Constant][41] /* ty=Tensor[(56), uint8] */, %760)
  };
  %761(%var_14581) /* ty=(Tensor[(5, 12, 13), bool], Tensor[(56), uint8], Tensor[(5, 6), uint8], Tensor[(150), uint8], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(7, 9, 567), bool]) */
}

def @func_11634(%var_11632: Tensor[(2310), float32], %var_11633: Tensor[(256), float32]) -> (Tensor[(5, ?, 13), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), int32], Tensor[(8, 4, 8), float64]) {
  @func_11630(%var_11632, %var_11633) /* ty=(Tensor[(5, ?, 13), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), int32], Tensor[(8, 4, 8), float64]) */
}

def @func_14013() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), int8]) {
  %769 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), int8]) {
    %762 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %763 = %762.0;
    %764 = cast(%763, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
    %765 = reshape(%764, newshape=[7, 9, 1]) /* ty=Tensor[(7, 9, 1), float64] */;
    %766 = @func_12206(%765) /* ty=(Tensor[(7, 9, ?), int8],) */;
    %767 = @func_12911() /* ty=Tensor[(7, 9, 1), float64] */;
    %768 = %766.0;
    (%767, %763, %768)
  };
  %769() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), int8]) */
}

def @func_11941() -> (Tensor[(7, 9, 1), float64],) {
  %772 = fn () -> (Tensor[(7, 9, 1), float64],) {
    %770 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %771 = %770.0;
    (%771,)
  };
  %772() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_13767() -> (Tensor[(65), float32], Tensor[(7, 9, 1), float64]) {
  %775 = fn () -> (Tensor[(65), float32], Tensor[(7, 9, 1), float64]) {
    %773 = @func_4721() /* ty=Tensor[(65), float32] */;
    %774 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
    (%773, %774)
  };
  %775() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */
}

def @func_7934(%var_7931: Tensor[(150), float64], %var_7932: Tensor[(56), uint8]) -> (Tensor[(5, ?, 13), float64], Tensor[(9, 6, 4), float32], Tensor[(150), float64], Tensor[(56), uint8]) {
  %776 = @func_5489() /* ty=(Tensor[(5, ?, 13), float64],) */;
  %777 = cast(%var_7931, dtype="float64") /* ty=Tensor[(150), float64] */;
  %778 = cast(%var_7932, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %779 = reshape(%777, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), float64] */;
  %780 = reshape(%778, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %781 = @func_1079(%779, %780) /* ty=(Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(15, 5, 2), float64], Tensor[(9, 6, 4), float32], Tensor[(8, 7, 1), float32], Tensor[(15, 5, 2), float64]) */;
  %782 = %776.0;
  %783 = %781.4;
  (%782, %783, %var_7931, %var_7932)
}

def @func_9905() -> Tensor[(65), float32] {
  @func_9903() /* ty=Tensor[(65), float32] */
}

def @func_8728(%var_8727: Tensor[(56), uint8]) -> (Tensor[(5, ?, 13), float64], Tensor[(30), bool], Tensor[(252), float64], Tensor[(9, 6, 4), float32], Tensor[(56), uint8], Tensor[(7, 9, ?), float32]) {
  %798 = fn (%var_8713: Tensor[(56), uint8]) -> (Tensor[(5, ?, 13), float64], Tensor[(30), bool], Tensor[(252), float64], Tensor[(9, 6, 4), float32], Tensor[(56), uint8], Tensor[(7, 9, ?), float32]) {
    %784 = @func_4389() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
    %785 = cast(meta[relay.Constant][42] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
    %786 = reshape(%785, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float64] */;
    %787 = @func_7710(%786) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 4), uint16], Tensor[(15, 2, ?), uint32], Tensor[(30), bool], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 2, ?), bool], Tensor[(7, 9, 1), float64]) */;
    %788 = cast(%var_8713, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %789 = reshape(%788, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %790 = @func_4768(%789) /* ty=(Tensor[(65), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) */;
    %791 = @func_8448() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), float32]) */;
    %792 = %791.1;
    %793 = cast(%792, dtype="float32") /* ty=Tensor[(7, 9, ?), float32] */;
    %794 = %784.1;
    %795 = %787.3;
    %796 = %790.1;
    %797 = acosh(%793) /* ty=Tensor[(7, 9, ?), float32] */;
    (%794, %795, meta[relay.Constant][42] /* ty=Tensor[(252), float64] */, %796, %var_8713, %797)
  };
  %798(%var_8727) /* ty=(Tensor[(5, ?, 13), float64], Tensor[(30), bool], Tensor[(252), float64], Tensor[(9, 6, 4), float32], Tensor[(56), uint8], Tensor[(7, 9, ?), float32]) */
}

def @func_10549() -> Tensor[(7, 9, 1), float64] {
  @func_10547() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_299(%var_297: Tensor[(8, 7, 1), uint8], %var_298: Tensor[(8, 7, 1), uint8]) -> (Tensor[(8, 7, ?), uint8], Tensor[(8, 7, 1), float32]) {
  @func_295(%var_297, %var_298) /* ty=(Tensor[(8, 7, ?), uint8], Tensor[(8, 7, 1), float32]) */
}

def @func_7988(%var_7987: Tensor[(4, 14, 8), float32]) -> Tensor[(4, 14, 8), float32] {
  %800 = fn (%var_7975: Tensor[(4, 14, 8), float32]) -> Tensor[(4, 14, 8), float32] {
    %799 = cast(%var_7975, dtype="float32") /* ty=Tensor[(4, 14, 8), float32] */;
    cosh(%799) /* ty=Tensor[(4, 14, 8), float32] */
  };
  %800(%var_7987) /* ty=Tensor[(4, 14, 8), float32] */
}

def @func_8061() -> (Tensor[(7, 9, 1), float64],) {
  %801 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %802 = %801.0;
  (%802,)
}

def @func_7998(%var_7996: Tensor[(9, 10, 4), float32]) -> Tensor[(9, 10, 4), float32] {
  @func_7995(%var_7996) /* ty=Tensor[(9, 10, 4), float32] */
}

def @func_13585() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %813 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
    %803 = @func_6903() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %804 = @func_6903() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %805 = %803.0;
    %806 = @func_10165() /* ty=Tensor[(7, 9, 1), float64] */;
    %807 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
    %808 = @func_11488() /* ty=Tensor[(7, 9, 1), float64] */;
    %809 = @func_5733() /* ty=Tensor[(7, 9, 1), float64] */;
    %810 = @func_6627() /* ty=Tensor[(7, 9, 1), float64] */;
    %811 = @func_8147() /* ty=Tensor[(7, 9, 1), float64] */;
    %812 = %804.0;
    (%805, %806, %807, %808, %809, %810, %811, %812)
  };
  %813() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_8995() -> (Tensor[(7, 9, 1), float64],) {
  %814 = @func_6627() /* ty=Tensor[(7, 9, 1), float64] */;
  %815 = cast(%814, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
  %816 = acos(%815) /* ty=Tensor[(7, 9, 1), float64] */;
  (%816,)
}

def @func_13317() -> (Tensor[(5, ?, 13), float64], Tensor[(65), float32]) {
  %821 = fn () -> (Tensor[(5, ?, 13), float64], Tensor[(65), float32]) {
    %817 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
    %818 = @func_10536() /* ty=(Tensor[(65), float32],) */;
    %819 = %817.6;
    %820 = %818.0;
    (%819, %820)
  };
  %821() /* ty=(Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */
}

def @func_8501(%var_8480: Tensor[(1008), float32], %var_8499: Tensor[(13, 5), float32]) -> (Tensor[(12, 6, 14), float32], Tensor[(7, 9, 1008), uint32], Tensor[(65), int64], Tensor[(13, 5), float32]) {
  %822 = cast(%var_8480, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %823 = reshape(%822, newshape=[12, 6, 14]) /* ty=Tensor[(12, 6, 14), float32] */;
  %824 = @func_865(%823) /* ty=(Tensor[(12, 6, 14), float32],) */;
  %825 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %826 = %825.0;
  %827 = cast(%var_8480, dtype="uint32") /* ty=Tensor[(1008), uint32] */;
  %828 = cast(%826, dtype="uint32") /* ty=Tensor[(7, 9, 1), uint32] */;
  %829 = cast(%var_8499, dtype="float32") /* ty=Tensor[(13, 5), float32] */;
  %830 = reshape(%829, newshape=[65]) /* ty=Tensor[(65), float32] */;
  %831 = %824.0;
  %832 = bitwise_xor(%827, %828) /* ty=Tensor[(7, 9, 1008), uint32] */;
  %833 = @func_7414(%830) /* ty=Tensor[(65), int64] */;
  (%831, %832, %833, %var_8499)
}

def @func_8505(%var_8503: Tensor[(1008), float32], %var_8504: Tensor[(13, 5), float32]) -> (Tensor[(12, 6, 14), float32], Tensor[(7, 9, 1008), uint32], Tensor[(65), int64], Tensor[(13, 5), float32]) {
  @func_8501(%var_8503, %var_8504) /* ty=(Tensor[(12, 6, 14), float32], Tensor[(7, 9, 1008), uint32], Tensor[(65), int64], Tensor[(13, 5), float32]) */
}

def @func_14260() -> (Tensor[(7, 9, 1), float64],) {
  %835 = fn () -> (Tensor[(7, 9, 1), float64],) {
    %834 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
    (%834,)
  };
  %835() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_7183() -> Tensor[(7, 9, 1), float64] {
  %836 = @func_6191() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
  %836.1
}

def @func_1427(%var_1423: Tensor[(9, 9, 7), uint64], %var_1424: Tensor[(9, 9, 7), uint64], %var_1425: Tensor[(216), int64], %var_1426: Tensor[(56), uint8]) -> (Tensor[(9, 9, 7), uint64], Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(8, 7, ?), uint8]) {
  %854 = fn (%var_1395: Tensor[(9, 9, 7), uint64], %var_1396: Tensor[(9, 9, 7), uint64], %var_1409: Tensor[(216), int64], %var_1410: Tensor[(56), uint8]) -> (Tensor[(9, 9, 7), uint64], Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(8, 7, ?), uint8]) {
    %837 = cast(%var_1396, dtype="uint64") /* ty=Tensor[(9, 9, 7), uint64] */;
    %838 = shape_of(%var_1395, dtype="int32") /* ty=Tensor[(3), int32] */;
    %839 = cast(%var_1395, dtype="uint64") /* ty=Tensor[(9, 9, 7), uint64] */;
    %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %841 = cast(%var_1409, dtype="int64") /* ty=Tensor[(216), int64] */;
    %842 = cast(%var_1410, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %843 = reshape(%841, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
    %844 = reshape(%842, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %845 = @func_567(%843, %844) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
    %846 = cast(%var_1410, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %847 = %845.3;
    %848 = cast(%847, dtype="uint8") /* ty=Tensor[(8, 7, 1), uint8] */;
    %849 = reshape(%846, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
    %850 = reshape(%848, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
    %851 = @func_295(%849, %850) /* ty=(Tensor[(8, 7, ?), uint8], Tensor[(8, 7, 1), float32]) */;
    %852 = left_shift(%839, %840) /* ty=Tensor[(9, 9, 7), uint64] */;
    %853 = %851.0;
    (%852, %847, %var_1409, %var_1410, %853)
  };
  %854(%var_1423, %var_1424, %var_1425, %var_1426) /* ty=(Tensor[(9, 9, 7), uint64], Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(8, 7, ?), uint8]) */
}

def @func_7525(%var_7514: Tensor[(189, 3), uint64], %var_7516: Tensor[(56), uint8]) -> (Tensor[(7, 9, ?), float32], Tensor[(9, 9, 7), uint64], Tensor[(189, 3), uint64], Tensor[(216), int64], Tensor[(56), uint8]) {
  %855 = @func_6903() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %856 = %855.0;
  %857 = @func_6627() /* ty=Tensor[(7, 9, 1), float64] */;
  %858 = cast(%857, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
  %859 = shape_of(%856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(%856, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %862 = cast(%var_7514, dtype="uint64") /* ty=Tensor[(189, 3), uint64] */;
  %863 = cast(%var_7514, dtype="uint64") /* ty=Tensor[(189, 3), uint64] */;
  %864 = cast(meta[relay.Constant][43] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
  %865 = cast(%var_7516, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %866 = reshape(%862, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
  %867 = reshape(%863, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
  %868 = reshape(%864, newshape=[216]) /* ty=Tensor[(216), int64] */;
  %869 = reshape(%865, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %870 = @func_1422(%866, %867, %868, %869) /* ty=(Tensor[(9, 9, 7), uint64], Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(8, 7, ?), uint8]) */;
  %871 = power(%860, %861) /* ty=Tensor[(7, 9, ?), float32] */;
  %872 = %870.0;
  (%871, %872, %var_7514, meta[relay.Constant][43] /* ty=Tensor[(216), int64] */, %var_7516)
}

def @func_8198() -> (Tensor[(7, 9, ?), bool], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8]) {
  @func_8196() /* ty=(Tensor[(7, 9, ?), bool], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8]) */
}

def @func_10707() -> (Tensor[(7, 9, 1), float64],) {
  @func_10705() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_8814(%var_8808: Tensor[(756), float64]) -> (Tensor[(7, 9, 1), float32], Tensor[(567), uint64], Tensor[(36, 6), int64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 56), uint8], Tensor[(216, 1), float32], Tensor[(7, 9, 756), int32]) {
  %873 = @func_6260() /* ty=(Tensor[(7, 9, 1), float32],) */;
  %874 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %875 = cast(meta[relay.Constant][46] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %876 = cast(meta[relay.Constant][44] /* ty=Tensor[(567), uint64] */, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %877 = cast(meta[relay.Constant][45] /* ty=Tensor[(36, 6), int64] */, dtype="int64") /* ty=Tensor[(36, 6), int64] */;
  %878 = reshape(%875, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %879 = reshape(%876, newshape=[567, 1]) /* ty=Tensor[(567, 1), uint64] */;
  %880 = reshape(%877, newshape=[216, 1]) /* ty=Tensor[(216, 1), int64] */;
  %881 = @func_5343(%878, %879, %880) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, 1), float32], Tensor[(567, 1), uint64], Tensor[(216), int64], Tensor[(182), float32], Tensor[(216, 1), float32]) */;
  %882 = %881.3;
  %883 = cast(%882, dtype="uint8") /* ty=Tensor[(7, 9, 1), uint8] */;
  %884 = cast(meta[relay.Constant][46] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %885 = cast(%var_8808, dtype="float64") /* ty=Tensor[(756), float64] */;
  %886 = cast(meta[relay.Constant][46] /* ty=Tensor[(56), uint8] */, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %887 = reshape(%885, newshape=[7, 9, 12]) /* ty=Tensor[(7, 9, 12), float64] */;
  %888 = reshape(%886, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %889 = @func_7891(%887, %888) /* ty=(Tensor[(7, 9, 12), uint8], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(216, 1), float32]) */;
  %890 = cast(%var_8808, dtype="int32") /* ty=Tensor[(756), int32] */;
  %891 = cast(%882, dtype="int32") /* ty=Tensor[(7, 9, 1), int32] */;
  %892 = %873.0;
  %893 = %874.0;
  %894 = subtract(%883, %884) /* ty=Tensor[(7, 9, 56), uint8] */;
  %895 = %889.3;
  %896 = bitwise_xor(%890, %891) /* ty=Tensor[(7, 9, 756), int32] */;
  (%892, meta[relay.Constant][44] /* ty=Tensor[(567), uint64] */, meta[relay.Constant][45] /* ty=Tensor[(36, 6), int64] */, %893, %894, %895, %896)
}

def @func_6733(%var_6731: Tensor[(11, 8, 15), float32]) -> (Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(11, 8, 15), float64]) {
  @func_6730(%var_6731) /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(11, 8, 15), float64]) */
}

def @func_5904() -> (Tensor[(7, 9, 1), float64],) {
  %897 = @func_5676() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %898 = %897.0;
  (%898,)
}

def @func_13222() -> (Tensor[(7, 9, 1), float64],) {
  %899 = @func_12911() /* ty=Tensor[(7, 9, 1), float64] */;
  (%899,)
}

def @func_11427() -> Tensor[(7, 9, 1), float64] {
  @func_11425() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_14646() -> Tensor[(8, 7, ?), uint8] {
  @func_14644() /* ty=Tensor[(8, 7, ?), uint8] */
}

def @func_14417() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) {
  %900 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %901 = @func_6793() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %902 = @func_11132() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) */;
  %903 = %900.0;
  %904 = %901.1;
  %905 = @func_6506() /* ty=Tensor[(7, 9, 1), float64] */;
  %906 = %902.2;
  (%903, %904, %905, %906)
}

def @func_1082(%var_1080: Tensor[(15, 5, 2), float64], %var_1081: Tensor[(56), uint8]) -> (Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(15, 5, 2), float64], Tensor[(9, 6, 4), float32], Tensor[(8, 7, 1), float32], Tensor[(15, 5, 2), float64]) {
  %934 = fn (%var_1042: Tensor[(15, 5, 2), float64], %var_1047: Tensor[(56), uint8]) -> (Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(15, 5, 2), float64], Tensor[(9, 6, 4), float32], Tensor[(8, 7, 1), float32], Tensor[(15, 5, 2), float64]) {
    %907 = cast(meta[relay.Constant][47] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
    %908 = cast(%var_1047, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %909 = reshape(%907, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
    %910 = reshape(%908, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %911 = @func_567(%909, %910) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
    %912 = cast(%var_1042, dtype="float64") /* ty=Tensor[(15, 5, 2), float64] */;
    %913 = rsqrt(%912) /* ty=Tensor[(15, 5, 2), float64] */;
    %914 = cast(%913, dtype="float64") /* ty=Tensor[(15, 5, 2), float64] */;
    %915 = cast(meta[relay.Constant][47] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
    %916 = cast(%var_1047, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %917 = reshape(%915, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
    %918 = reshape(%916, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %919 = @func_567(%917, %918) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
    %920 = cast(%var_1047, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %921 = cast(%var_1047, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %922 = reshape(%920, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
    %923 = reshape(%921, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint8] */;
    %924 = @func_295(%922, %923) /* ty=(Tensor[(8, 7, ?), uint8], Tensor[(8, 7, 1), float32]) */;
    %925 = cast(%var_1042, dtype="float64") /* ty=Tensor[(15, 5, 2), float64] */;
    %926 = shape_of(%913, dtype="int32") /* ty=Tensor[(3), int32] */;
    %927 = cast(%913, dtype="float64") /* ty=Tensor[(15, 5, 2), float64] */;
    %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %929 = %911.3;
    %930 = asinh(%914) /* ty=Tensor[(15, 5, 2), float64] */;
    %931 = %919.0;
    %932 = %924.1;
    %933 = floor_mod(%927, %928) /* ty=Tensor[(15, 5, 2), float64] */;
    (%929, meta[relay.Constant][47] /* ty=Tensor[(216), int64] */, %var_1047, %930, %931, %932, %933)
  };
  %934(%var_1080, %var_1081) /* ty=(Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(15, 5, 2), float64], Tensor[(9, 6, 4), float32], Tensor[(8, 7, 1), float32], Tensor[(15, 5, 2), float64]) */
}

def @func_13847() -> Tensor[(65), float32] {
  %936 = fn () -> Tensor[(65), float32] {
    %935 = @func_13743() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float32], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) */;
    %935.3
  };
  %936() /* ty=Tensor[(65), float32] */
}

def @func_14956(%var_14955: Tensor[(14, 4, 1), float64]) -> (Tensor[(14, 4, 1), float64],) {
  %939 = fn (%var_14947: Tensor[(14, 4, 1), float64]) -> (Tensor[(14, 4, 1), float64],) {
    %937 = cast(%var_14947, dtype="float64") /* ty=Tensor[(14, 4, 1), float64] */;
    %938 = sigmoid(%937) /* ty=Tensor[(14, 4, 1), float64] */;
    (%938,)
  };
  %939(%var_14955) /* ty=(Tensor[(14, 4, 1), float64],) */
}

def @func_10465() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %944 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
    %940 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %941 = @func_8049() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %942 = %940.0;
    %943 = %941.2;
    (%942, %943)
  };
  %944() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_10654(%var_10652: Tensor[(12, 4, 3), float32]) -> (Tensor[(12, 4, 3), float32],) {
  @func_10651(%var_10652) /* ty=(Tensor[(12, 4, 3), float32],) */
}

def @func_10547() -> Tensor[(7, 9, 1), float64] {
  %945 = @func_10509() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %945.0
}

def @func_6793() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %946 = @func_6076() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %947 = @func_4578() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */;
  %948 = @func_5030() /* ty=Tensor[(7, 9, 1), float64] */;
  %949 = cast(%948, dtype="float64") /* ty=Tensor[(7, 9, 1), float64] */;
  %950 = %946.0;
  %951 = %947.2;
  %952 = rsqrt(%949) /* ty=Tensor[(7, 9, 1), float64] */;
  (%950, %951, %952)
}

def @func_6333(%var_6332: Tensor[(15, 11, 14), float32]) -> Tensor[(15, 11, 14), float32] {
  %954 = fn (%var_6321: Tensor[(15, 11, 14), float32]) -> Tensor[(15, 11, 14), float32] {
    %953 = cast(%var_6321, dtype="float32") /* ty=Tensor[(15, 11, 14), float32] */;
    sigmoid(%953) /* ty=Tensor[(15, 11, 14), float32] */
  };
  %954(%var_6332) /* ty=Tensor[(15, 11, 14), float32] */
}

def @func_6262() -> (Tensor[(7, 9, 1), float32],) {
  @func_6260() /* ty=(Tensor[(7, 9, 1), float32],) */
}

def @func_7121(%var_7052: Tensor[(18, 756), uint64], %var_7064: Tensor[(56), uint8]) -> (Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(9, 6, 4), float32], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 216), float32], Tensor[(18, 756), float64]) {
  %955 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %956 = cast(%var_7064, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %957 = reshape(%956, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %958 = @func_4768(%957) /* ty=(Tensor[(65), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) */;
  %959 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %960 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %961 = @func_5847() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %962 = cast(meta[relay.Constant][48] /* ty=Tensor[(567), uint64] */, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %963 = cast(%var_7052, dtype="float32") /* ty=Tensor[(18, 756), float32] */;
  %964 = tan(%963) /* ty=Tensor[(18, 756), float32] */;
  %965 = cast(meta[relay.Constant][48] /* ty=Tensor[(567), uint64] */, dtype="uint64") /* ty=Tensor[(567), uint64] */;
  %966 = cast(%var_7052, dtype="uint64") /* ty=Tensor[(18, 756), uint64] */;
  %967 = reshape(%965, newshape=[567]) /* ty=Tensor[(567), uint64] */;
  %968 = reshape(%966, newshape=[7, 9, 216]) /* ty=Tensor[(7, 9, 216), uint64] */;
  %969 = @func_5618(%967, %968) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(65), float32], Tensor[(7, 9, 216), float32]) */;
  %970 = %969.3;
  %971 = cast(%970, dtype="float32") /* ty=Tensor[(7, 9, 216), float32] */;
  %972 = shape_of(%964, dtype="int32") /* ty=Tensor[(2), int32] */;
  %973 = cast(%964, dtype="float32") /* ty=Tensor[(18, 756), float32] */;
  %974 = dyn.reshape(%971, %972, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %975 = floor_mod(%973, %974) /* ty=Tensor[(18, 756), float32] */;
  %976 = cast(%975, dtype="uint64") /* ty=Tensor[(18, 756), uint64] */;
  %977 = reshape(%962, newshape=[567]) /* ty=Tensor[(567), uint64] */;
  %978 = reshape(%976, newshape=[7, 9, 216]) /* ty=Tensor[(7, 9, 216), uint64] */;
  %979 = @func_5618(%977, %978) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(65), float32], Tensor[(7, 9, 216), float32]) */;
  %980 = cast(%975, dtype="float64") /* ty=Tensor[(18, 756), float64] */;
  %981 = %955.0;
  %982 = %958.1;
  %983 = %959.0;
  %984 = %960.0;
  %985 = %961.0;
  %986 = %979.3;
  %987 = log10(%980) /* ty=Tensor[(18, 756), float64] */;
  (%981, meta[relay.Constant][48] /* ty=Tensor[(567), uint64] */, %982, %var_7064, %983, %984, %985, %986, %987)
}

def @func_4578() -> (Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(7, 9, 1), float64]) {
  %988 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %989 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
  %990 = %988.7;
  %991 = @func_4109() /* ty=Tensor[(7, 9, 1), float64] */;
  (%989, %990, %991)
}

def @func_8997() -> (Tensor[(7, 9, 1), float64],) {
  @func_8995() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_5999() -> (Tensor[(7, 9, 1), float64],) {
  %992 = @func_5904() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %993 = %992.0;
  (%993,)
}

def @func_8449() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), float32]) {
  %998 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), float32]) {
    %994 = @func_5931() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
    %995 = @func_6690() /* ty=(Tensor[(7, 9, ?), float32],) */;
    %996 = %994.0;
    %997 = %995.0;
    (%996, %997)
  };
  %998() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), float32]) */
}

def @func_5524() -> (Tensor[(65), float32],) {
  @func_5522() /* ty=(Tensor[(65), float32],) */
}

def @func_4453(%var_4450: Tensor[(7, 9, 5), float64], %var_4451: Tensor[(56), uint8], %var_4452: Tensor[(150), float64]) -> (Tensor[(7, 9, 5), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, ?), uint8], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(9, 6, 4), float32], Tensor[(150), float64], Tensor[(8, 7, 1), float32], Tensor[(7, 9, 5), float32]) {
  @func_4448(%var_4450, %var_4451, %var_4452) /* ty=(Tensor[(7, 9, 5), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, ?), uint8], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(9, 6, 4), float32], Tensor[(150), float64], Tensor[(8, 7, 1), float32], Tensor[(7, 9, 5), float32]) */
}

def @func_6629() -> Tensor[(7, 9, 1), float64] {
  @func_6627() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_10536() -> (Tensor[(65), float32],) {
  %999 = @func_4721() /* ty=Tensor[(65), float32] */;
  (%999,)
}

def @main(%var_15291: Tensor[(7, 9, 14), float64]) -> Tensor[(7, 9, 14), bool] {
  %1000 = @func_12119() /* ty=Tensor[(7, 9, 1), float64] */;
  %1001 = cast(%1000, dtype="int8") /* ty=Tensor[(7, 9, 1), int8] */;
  %1002 = cast(%var_15291, dtype="int8") /* ty=Tensor[(7, 9, 14), int8] */;
  %1003 = logical_xor(%1001, %1002) /* ty=Tensor[(7, 9, 14), int8] */;
  %1004 = @func_9179() /* ty=Tensor[(7, 9, 1), float64] */;
  %1005 = cast(%1003, dtype="bool") /* ty=Tensor[(7, 9, 14), bool] */;
  %1006 = cast(%1004, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
  logical_or(%1005, %1006) /* ty=Tensor[(7, 9, 14), bool] */
}

def @func_14156() -> Tensor[(7, 9, 1), float64] {
  @func_10244() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_4177() -> Tensor[(7, 9, 1), float64] {
  @func_4175() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_14616() -> (Tensor[(56), float64], Tensor[(7, 9, 1), float64]) {
  %1013 = fn () -> (Tensor[(56), float64], Tensor[(7, 9, 1), float64]) {
    %1007 = @func_13244() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, ?), float32], Tensor[(56), uint8]) */;
    %1008 = %1007.2;
    %1009 = cast(%1008, dtype="float64") /* ty=Tensor[(56), float64] */;
    %1010 = @func_11132() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64], Tensor[(65), float32]) */;
    %1011 = log10(%1009) /* ty=Tensor[(56), float64] */;
    %1012 = %1010.1;
    (%1011, %1012)
  };
  %1013() /* ty=(Tensor[(56), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_6627() -> Tensor[(7, 9, 1), float64] {
  %1014 = @func_5931() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %1014.1
}

def @func_4448(%var_4404: Tensor[(7, 9, 5), float64], %var_4429: Tensor[(56), uint8], %var_4433: Tensor[(150), float64]) -> (Tensor[(7, 9, 5), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, ?), uint8], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(9, 6, 4), float32], Tensor[(150), float64], Tensor[(8, 7, 1), float32], Tensor[(7, 9, 5), float32]) {
  %1015 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1016 = %1015.0;
  %1017 = cast(%1016, dtype="uint8") /* ty=Tensor[(7, 9, 1), uint8] */;
  %1018 = cast(%var_4404, dtype="uint8") /* ty=Tensor[(7, 9, 5), uint8] */;
  %1019 = cast(meta[relay.Constant][49] /* ty=Tensor[(216), int64] */, dtype="int64") /* ty=Tensor[(216), int64] */;
  %1020 = cast(%var_4429, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %1021 = reshape(%1019, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %1022 = reshape(%1020, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %1023 = @func_567(%1021, %1022) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %1024 = cast(%var_4433, dtype="float64") /* ty=Tensor[(150), float64] */;
  %1025 = cast(%var_4429, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %1026 = reshape(%1024, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), float64] */;
  %1027 = reshape(%1025, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %1028 = @func_1079(%1026, %1027) /* ty=(Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(15, 5, 2), float64], Tensor[(9, 6, 4), float32], Tensor[(8, 7, 1), float32], Tensor[(15, 5, 2), float64]) */;
  %1029 = %1028.4;
  %1030 = cast(%1029, dtype="int64") /* ty=Tensor[(9, 6, 4), int64] */;
  %1031 = %1023.1;
  %1032 = cast(%1031, dtype="uint8") /* ty=Tensor[(8, 7, ?), uint8] */;
  %1033 = reshape(%1030, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), int64] */;
  %1034 = reshape(%1032, newshape=[56]) /* ty=Tensor[(56), uint8] */;
  %1035 = @func_567(%1033, %1034) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */;
  %1036 = cast(%var_4404, dtype="float64") /* ty=Tensor[(7, 9, 5), float64] */;
  %1037 = sinh(%1036) /* ty=Tensor[(7, 9, 5), float64] */;
  %1038 = cast(%1037, dtype="float32") /* ty=Tensor[(7, 9, 5), float32] */;
  %1039 = left_shift(%1017, %1018) /* ty=Tensor[(7, 9, 5), uint8] */;
  %1040 = @func_4109() /* ty=Tensor[(7, 9, 1), float64] */;
  %1041 = %1035.3;
  %1042 = acos(%1038) /* ty=Tensor[(7, 9, 5), float32] */;
  (%1039, %1040, %1031, meta[relay.Constant][49] /* ty=Tensor[(216), int64] */, %var_4429, %1029, %var_4433, %1041, %1042)
}

def @func_9116(%var_9114: Tensor[(3, 8, 3), float32], %var_9115: Tensor[(2310), float32]) -> (Tensor[(3, 8, 3), float32], Tensor[(3, 8, 3), float32], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %1062 = fn (%var_9034: Tensor[(3, 8, 3), float32], %var_9075: Tensor[(2310), float32]) -> (Tensor[(3, 8, 3), float32], Tensor[(3, 8, 3), float32], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
    %1043 = cast(%var_9034, dtype="float32") /* ty=Tensor[(3, 8, 3), float32] */;
    %1044 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(3, 8, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1045 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 8, 3), float32] */, dtype="float32") /* ty=Tensor[(3, 8, 3), float32] */;
    %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1047 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 8, 3), float32] */, dtype="float64") /* ty=Tensor[(3, 8, 3), float64] */;
    %1048 = rsqrt(%1047) /* ty=Tensor[(3, 8, 3), float64] */;
    %1049 = cast(%1048, dtype="float32") /* ty=Tensor[(3, 8, 3), float32] */;
    %1050 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %1051 = cast(%var_9075, dtype="float32") /* ty=Tensor[(2310), float32] */;
    %1052 = reshape(%1051, newshape=[15, 11, 14]) /* ty=Tensor[(15, 11, 14), float32] */;
    %1053 = @func_5397() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
    %1054 = mod(%1045, %1046) /* ty=Tensor[(3, 8, 3), float32] */;
    %1055 = sinh(%1049) /* ty=Tensor[(3, 8, 3), float32] */;
    %1056 = %1050.0;
    %1057 = @func_6331(%1052) /* ty=Tensor[(15, 11, 14), float32] */;
    %1058 = @func_8353() /* ty=Tensor[(7, 9, 1), float64] */;
    %1059 = @func_7183() /* ty=Tensor[(7, 9, 1), float64] */;
    %1060 = %1053.0;
    %1061 = @func_8353() /* ty=Tensor[(7, 9, 1), float64] */;
    (%1054, %1055, %1056, %1057, %var_9075, %1058, %1059, %1060, %1061)
  };
  %1062(%var_9114, %var_9115) /* ty=(Tensor[(3, 8, 3), float32], Tensor[(3, 8, 3), float32], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_6508() -> Tensor[(7, 9, 1), float64] {
  @func_6506() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_12717() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %1066 = fn () -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
    %1063 = @func_10838() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %1064 = @func_4175() /* ty=Tensor[(7, 9, 1), float64] */;
    %1065 = %1063.1;
    (%1064, %1065)
  };
  %1066() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_6260() -> (Tensor[(7, 9, 1), float32],) {
  %1067 = @func_4058() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1068 = %1067.0;
  %1069 = cast(%1068, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
  %1070 = exp(%1069) /* ty=Tensor[(7, 9, 1), float32] */;
  (%1070,)
}

def @func_11874() -> (Tensor[(7, 9, 1), float64],) {
  %1071 = @func_11488() /* ty=Tensor[(7, 9, 1), float64] */;
  (%1071,)
}

def @func_11819(%var_11818: Tensor[(1680), float32]) -> (Tensor[(65), bool], Tensor[(7, 9, 1), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float32], Tensor[(65), float64]) {
  %1087 = fn (%var_11809: Tensor[(1680), float32]) -> (Tensor[(65), bool], Tensor[(7, 9, 1), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float32], Tensor[(65), float64]) {
    %1072 = @func_10536() /* ty=(Tensor[(65), float32],) */;
    %1073 = %1072.0;
    %1074 = cast(meta[relay.Constant][51] /* ty=Tensor[(65), float32] */, dtype="bool") /* ty=Tensor[(65), bool] */;
    %1075 = shape_of(%1073, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1076 = cast(%1073, dtype="bool") /* ty=Tensor[(65), bool] */;
    %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1078 = @func_9877() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
    %1079 = cast(%var_11809, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %1080 = reshape(%1079, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
    %1081 = @func_7806(%1080) /* ty=(Tensor[(14, 12, 10), float32],) */;
    %1082 = cast(%1073, dtype="float64") /* ty=Tensor[(65), float64] */;
    %1083 = greater(%1076, %1077) /* ty=Tensor[(65), bool] */;
    %1084 = %1078.1;
    %1085 = %1081.0;
    %1086 = sinh(%1082) /* ty=Tensor[(65), float64] */;
    (%1083, %1084, %1085, %var_11809, %1086)
  };
  %1087(%var_11818) /* ty=(Tensor[(65), bool], Tensor[(7, 9, 1), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float32], Tensor[(65), float64]) */
}

def @func_6060() -> (Tensor[(7, 9, ?), float32],) {
  %1097 = fn () -> (Tensor[(7, 9, ?), float32],) {
    %1088 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %1089 = %1088.0;
    %1090 = @func_5397() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
    %1091 = %1090.0;
    %1092 = cast(%1091, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
    %1093 = shape_of(%1089, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1094 = cast(%1089, dtype="float32") /* ty=Tensor[(7, 9, 1), float32] */;
    %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1096 = multiply(%1094, %1095) /* ty=Tensor[(7, 9, ?), float32] */;
    (%1096,)
  };
  %1097() /* ty=(Tensor[(7, 9, ?), float32],) */
}

def @func_7713(%var_7711: Tensor[(7, 9, 4), float64]) -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 4), uint16], Tensor[(15, 2, ?), uint32], Tensor[(30), bool], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 2, ?), bool], Tensor[(7, 9, 1), float64]) {
  @func_7710(%var_7711) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 4), uint16], Tensor[(15, 2, ?), uint32], Tensor[(30), bool], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 2, ?), bool], Tensor[(7, 9, 1), float64]) */
}

def @func_12072() -> Tensor[(5, ?, 13), float64] {
  %1099 = fn () -> Tensor[(5, ?, 13), float64] {
    %1098 = @func_5489() /* ty=(Tensor[(5, ?, 13), float64],) */;
    %1098.0
  };
  %1099() /* ty=Tensor[(5, ?, 13), float64] */
}

def @func_6121() -> (Tensor[(65), float32],) {
  %1101 = fn () -> (Tensor[(65), float32],) {
    %1100 = @func_4721() /* ty=Tensor[(65), float32] */;
    (%1100,)
  };
  %1101() /* ty=(Tensor[(65), float32],) */
}

def @func_11287() -> Tensor[(65), float32] {
  %1102 = @func_6180() /* ty=(Tensor[(65), float32],) */;
  %1102.0
}

def @func_5522() -> (Tensor[(65), float32],) {
  %1103 = @func_4302() /* ty=(Tensor[(13, 5, 13), float64], Tensor[(8, 7, 1), float32], Tensor[(56, 1), uint8], Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(12, 18), float32], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */;
  %1104 = %1103.7;
  (%1104,)
}

def @func_8148() -> Tensor[(7, 9, 1), float64] {
  %1106 = fn () -> Tensor[(7, 9, 1), float64] {
    %1105 = @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %1105.0
  };
  %1106() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_9180() -> Tensor[(7, 9, 1), float64] {
  %1107 = fn () -> Tensor[(7, 9, 1), float64] {
    @func_6428() /* ty=Tensor[(7, 9, 1), float64] */
  };
  %1107() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_4156() -> (Tensor[(7, 9, 1), float64],) {
  @func_4154() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_5933() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) {
  @func_5931() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64], Tensor[(65), float32]) */
}

def @func_10978() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  @func_10976() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_571(%var_569: Tensor[(9, 6, 4), int64], %var_570: Tensor[(56), uint8]) -> (Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) {
  @func_567(%var_569, %var_570) /* ty=(Tensor[(9, 6, 4), float32], Tensor[(8, 7, ?), uint8], Tensor[(56), uint8], Tensor[(8, 7, 1), float32]) */
}

def @func_5347(%var_5344: Tensor[(56), uint8], %var_5345: Tensor[(567, 1), uint64], %var_5346: Tensor[(216, 1), int64]) -> (Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, 1), float32], Tensor[(567, 1), uint64], Tensor[(216), int64], Tensor[(182), float32], Tensor[(216, 1), float32]) {
  %1134 = fn (%var_5290: Tensor[(56), uint8], %var_5321: Tensor[(567, 1), uint64], %var_5322: Tensor[(216, 1), int64]) -> (Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, 1), float32], Tensor[(567, 1), uint64], Tensor[(216), int64], Tensor[(182), float32], Tensor[(216, 1), float32]) {
    %1108 = cast(%var_5290, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %1109 = reshape(%1108, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %1110 = @func_4768(%1109) /* ty=(Tensor[(65), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) */;
    %1111 = cast(%var_5321, dtype="uint64") /* ty=Tensor[(567, 1), uint64] */;
    %1112 = cast(%var_5321, dtype="uint64") /* ty=Tensor[(567, 1), uint64] */;
    %1113 = cast(%var_5322, dtype="int64") /* ty=Tensor[(216, 1), int64] */;
    %1114 = cast(%var_5290, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %1115 = reshape(%1111, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
    %1116 = reshape(%1112, newshape=[9, 9, 7]) /* ty=Tensor[(9, 9, 7), uint64] */;
    %1117 = reshape(%1113, newshape=[216]) /* ty=Tensor[(216), int64] */;
    %1118 = reshape(%1114, newshape=[56]) /* ty=Tensor[(56), uint8] */;
    %1119 = @func_1422(%1115, %1116, %1117, %1118) /* ty=(Tensor[(9, 9, 7), uint64], Tensor[(8, 7, 1), float32], Tensor[(216), int64], Tensor[(56), uint8], Tensor[(8, 7, ?), uint8]) */;
    %1120 = cast(meta[relay.Constant][52] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %1121 = cast(%var_5322, dtype="float64") /* ty=Tensor[(216, 1), float64] */;
    %1122 = atan(%1121) /* ty=Tensor[(216, 1), float64] */;
    %1123 = cast(%1122, dtype="int64") /* ty=Tensor[(216, 1), int64] */;
    %1124 = reshape(%1120, newshape=[2, 13, 7]) /* ty=Tensor[(2, 13, 7), float32] */;
    %1125 = reshape(%1123, newshape=[216]) /* ty=Tensor[(216), int64] */;
    %1126 = @func_3982(%1124, %1125) /* ty=(Tensor[(2, 13, 7), float32], Tensor[(9, 6, 4), float32], Tensor[(216), int64], Tensor[(56), uint8]) */;
    %1127 = cast(%1122, dtype="float32") /* ty=Tensor[(216, 1), float32] */;
    %1128 = @func_4109() /* ty=Tensor[(7, 9, 1), float64] */;
    %1129 = %1110.3;
    %1130 = @func_4109() /* ty=Tensor[(7, 9, 1), float64] */;
    %1131 = %1119.1;
    %1132 = %1126.2;
    %1133 = sigmoid(%1127) /* ty=Tensor[(216, 1), float32] */;
    (%1128, %1129, %var_5290, %1130, %1131, %var_5321, %1132, meta[relay.Constant][52] /* ty=Tensor[(182), float32] */, %1133)
  };
  %1134(%var_5344, %var_5345, %var_5346) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(56), uint8], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(8, 7, 1), float32], Tensor[(567, 1), uint64], Tensor[(216), int64], Tensor[(182), float32], Tensor[(216, 1), float32]) */
}

def @func_13383(%var_13381: Tensor[(8, 6, 15), float32], %var_13382: Tensor[(8, 6, 15), float32]) -> Tensor[(8, 6, 15), float32] {
  %1139 = fn (%var_13370: Tensor[(8, 6, 15), float32], %var_13371: Tensor[(8, 6, 15), float32]) -> Tensor[(8, 6, 15), float32] {
    %1135 = cast(%var_13371, dtype="float32") /* ty=Tensor[(8, 6, 15), float32] */;
    %1136 = shape_of(%var_13370, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1137 = cast(%var_13370, dtype="float32") /* ty=Tensor[(8, 6, 15), float32] */;
    %1138 = dyn.reshape(%1135, %1136, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%1137, %1138) /* ty=Tensor[(8, 6, 15), float32] */
  };
  %1139(%var_13381, %var_13382) /* ty=Tensor[(8, 6, 15), float32] */
}

def @func_14755() -> (Tensor[(7, 9, 1), float32], Tensor[(7, 9, 1), float64]) {
  @func_14753() /* ty=(Tensor[(7, 9, 1), float32], Tensor[(7, 9, 1), float64]) */
}

def @func_13822() -> (Tensor[(7, 9, 1), float64],) {
  %1140 = @func_10357() /* ty=Tensor[(7, 9, 1), float64] */;
  (%1140,)
}

def @func_14485() -> (Tensor[(7, 9, 65), int16],) {
  @func_14483() /* ty=(Tensor[(7, 9, 65), int16],) */
}

def @func_6192() -> (Tensor[(65), float32], Tensor[(7, 9, 1), float64]) {
  %1145 = fn () -> (Tensor[(65), float32], Tensor[(7, 9, 1), float64]) {
    %1141 = @func_5522() /* ty=(Tensor[(65), float32],) */;
    %1142 = @func_5999() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %1143 = %1141.0;
    %1144 = %1142.0;
    (%1143, %1144)
  };
  %1145() /* ty=(Tensor[(65), float32], Tensor[(7, 9, 1), float64]) */
}

def @func_15096(%var_15094: Tensor[(5, 13, 15), float64]) -> (Tensor[(5, 13, 15), float64],) {
  @func_15093(%var_15094) /* ty=(Tensor[(5, 13, 15), float64],) */
}

def @func_10058() -> (Tensor[(5, ?, 13), float64],) {
  %1148 = fn () -> (Tensor[(5, ?, 13), float64],) {
    %1146 = @func_5489() /* ty=(Tensor[(5, ?, 13), float64],) */;
    %1147 = %1146.0;
    (%1147,)
  };
  %1148() /* ty=(Tensor[(5, ?, 13), float64],) */
}

def @func_5848() -> (Tensor[(7, 9, 1), float64],) {
  %1151 = fn () -> (Tensor[(7, 9, 1), float64],) {
    %1149 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %1150 = %1149.0;
    (%1150,)
  };
  %1151() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_10838() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  %1152 = @func_4602() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1153 = @func_9261() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */;
  %1154 = %1152.0;
  %1155 = @func_6627() /* ty=Tensor[(7, 9, 1), float64] */;
  %1156 = %1153.2;
  (%1154, %1155, %1156)
}

def @func_13212(%var_13210: Tensor[(3, 24), float32]) -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(3, 24), float64]) {
  @func_13209(%var_13210) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(15, 11, 14), float32], Tensor[(2310), float32], Tensor[(3, 24), float64]) */
}

def @func_14380() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  @func_14378() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_14819(%var_14817: Tensor[(30), bool], %var_14818: Tensor[(504), float64]) -> (Tensor[(65), float32], Tensor[(65), float32], Tensor[(360), float32], Tensor[(256), float32], Tensor[(30), bool], Tensor[(504), float64]) {
  %1168 = fn (%var_14807: Tensor[(30), bool], %var_14808: Tensor[(504), float64]) -> (Tensor[(65), float32], Tensor[(65), float32], Tensor[(360), float32], Tensor[(256), float32], Tensor[(30), bool], Tensor[(504), float64]) {
    %1157 = @func_13131() /* ty=(Tensor[(65), float32],) */;
    %1158 = cast(meta[relay.Constant][53] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
    %1159 = cast(%var_14807, dtype="bool") /* ty=Tensor[(30), bool] */;
    %1160 = cast(%var_14808, dtype="float64") /* ty=Tensor[(504), float64] */;
    %1161 = reshape(%1158, newshape=[256]) /* ty=Tensor[(256), float32] */;
    %1162 = reshape(%1159, newshape=[30]) /* ty=Tensor[(30), bool] */;
    %1163 = reshape(%1160, newshape=[7, 9, 8]) /* ty=Tensor[(7, 9, 8), float64] */;
    %1164 = @func_13088(%1161, %1162, %1163) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(14, 4), uint8], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 256), int64], Tensor[(8, 4, 8), uint8], Tensor[(7, 9, 1), float64], Tensor[(30), bool], Tensor[(7, 9, 1), float64], Tensor[(15, 2, 13608), float64], Tensor[(7, 9, 8), bool], Tensor[(7, 9, 1), float64], Tensor[(65), float32], Tensor[(1320), float32], Tensor[(9, 10, 4), float32], Tensor[(360), float32]) */;
    %1165 = %1157.0;
    %1166 = @func_4721() /* ty=Tensor[(65), float32] */;
    %1167 = %1164.14;
    (%1165, %1166, %1167, meta[relay.Constant][53] /* ty=Tensor[(256), float32] */, %var_14807, %var_14808)
  };
  %1168(%var_14817, %var_14818) /* ty=(Tensor[(65), float32], Tensor[(65), float32], Tensor[(360), float32], Tensor[(256), float32], Tensor[(30), bool], Tensor[(504), float64]) */
}

def @func_12913() -> Tensor[(7, 9, 1), float64] {
  @func_12911() /* ty=Tensor[(7, 9, 1), float64] */
}

def @func_14483() -> (Tensor[(7, 9, 65), int16],) {
  %1169 = @func_13671() /* ty=(Tensor[(7, 9, 1), float64],) */;
  %1170 = %1169.0;
  %1171 = @func_13131() /* ty=(Tensor[(65), float32],) */;
  %1172 = %1171.0;
  %1173 = cast(%1170, dtype="int16") /* ty=Tensor[(7, 9, 1), int16] */;
  %1174 = cast(%1172, dtype="int16") /* ty=Tensor[(65), int16] */;
  %1175 = left_shift(%1173, %1174) /* ty=Tensor[(7, 9, 65), int16] */;
  (%1175,)
}

def @func_6001() -> (Tensor[(7, 9, 1), float64],) {
  @func_5999() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_7125(%var_7123: Tensor[(18, 756), uint64], %var_7124: Tensor[(56), uint8]) -> (Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(9, 6, 4), float32], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 216), float32], Tensor[(18, 756), float64]) {
  @func_7121(%var_7123, %var_7124) /* ty=(Tensor[(7, 9, 1), float64], Tensor[(567), uint64], Tensor[(9, 6, 4), float32], Tensor[(56), uint8], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 216), float32], Tensor[(18, 756), float64]) */
}

def @func_8051() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  @func_8049() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_7995(%var_7990: Tensor[(9, 10, 4), float32]) -> Tensor[(9, 10, 4), float32] {
  %1176 = cast(%var_7990, dtype="float32") /* ty=Tensor[(9, 10, 4), float32] */;
  sigmoid(%1176) /* ty=Tensor[(9, 10, 4), float32] */
}

def @func_10005(%var_10004: Tensor[(1008), float32]) -> (Tensor[(12, 6, 14), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1008), bool]) {
  %1186 = fn (%var_9987: Tensor[(1008), float32]) -> (Tensor[(12, 6, 14), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1008), bool]) {
    %1177 = cast(%var_9987, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %1178 = reshape(%1177, newshape=[12, 6, 14]) /* ty=Tensor[(12, 6, 14), float32] */;
    %1179 = @func_865(%1178) /* ty=(Tensor[(12, 6, 14), float32],) */;
    %1180 = @func_5733() /* ty=Tensor[(7, 9, 1), float64] */;
    %1181 = cast(%1180, dtype="bool") /* ty=Tensor[(7, 9, 1), bool] */;
    %1182 = cast(%var_9987, dtype="bool") /* ty=Tensor[(1008), bool] */;
    %1183 = %1179.0;
    %1184 = @func_9029() /* ty=Tensor[(7, 9, 1), float64] */;
    %1185 = logical_or(%1181, %1182) /* ty=Tensor[(7, 9, 1008), bool] */;
    (%1183, %1184, %1185)
  };
  %1186(%var_10004) /* ty=(Tensor[(12, 6, 14), float32], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1008), bool]) */
}

def @func_8817(%var_8815: Tensor[(756), float64]) -> (Tensor[(7, 9, 1), float32], Tensor[(567), uint64], Tensor[(36, 6), int64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 56), uint8], Tensor[(216, 1), float32], Tensor[(7, 9, 756), int32]) {
  @func_8814(%var_8815) /* ty=(Tensor[(7, 9, 1), float32], Tensor[(567), uint64], Tensor[(36, 6), int64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 56), uint8], Tensor[(216, 1), float32], Tensor[(7, 9, 756), int32]) */
}

def @func_10510() -> (Tensor[(7, 9, 1), float64],) {
  %1189 = fn () -> (Tensor[(7, 9, 1), float64],) {
    %1187 = @func_5397() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(5, ?, 13), float64]) */;
    %1188 = %1187.0;
    (%1188,)
  };
  %1189() /* ty=(Tensor[(7, 9, 1), float64],) */
}

def @func_6795() -> (Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) {
  @func_6793() /* ty=(Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64], Tensor[(7, 9, 1), float64]) */
}

def @func_12665() -> Tensor[(7, 9, 1), float64] {
  %1191 = fn () -> Tensor[(7, 9, 1), float64] {
    %1190 = @func_8995() /* ty=(Tensor[(7, 9, 1), float64],) */;
    %1190.0
  };
  %1191() /* ty=Tensor[(7, 9, 1), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen903/build/output.py", line 3735, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:42:10] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


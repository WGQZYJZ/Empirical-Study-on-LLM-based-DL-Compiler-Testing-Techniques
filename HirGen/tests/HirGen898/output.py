import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_243 = relay.var("var_243", dtype = "uint8", shape = (5, 4, 7))#candidate|243|(5, 4, 7)|var|uint8
var_244 = relay.var("var_244", dtype = "uint8", shape = (5, 4, 7))#candidate|244|(5, 4, 7)|var|uint8
bop_245 = relay.bitwise_and(var_243.astype('uint8'), relay.reshape(var_244.astype('uint8'), relay.shape_of(var_243))) # shape=(5, 4, 7)
output = relay.Tuple([bop_245,])
output2 = relay.Tuple([bop_245,])
func_249 = relay.Function([var_243,var_244,], output)
mod['func_249'] = func_249
mod = relay.transform.InferType()(mod)
mutated_mod['func_249'] = func_249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_249_call = mutated_mod.get_global_var('func_249')
var_251 = relay.var("var_251", dtype = "uint8", shape = (5, 4, 7))#candidate|251|(5, 4, 7)|var|uint8
var_252 = relay.var("var_252", dtype = "uint8", shape = (5, 4, 7))#candidate|252|(5, 4, 7)|var|uint8
call_250 = func_249_call(var_251,var_252,)
output = call_250
func_253 = relay.Function([var_251,var_252,], output)
mutated_mod['func_253'] = func_253
mutated_mod = relay.transform.InferType()(mutated_mod)
var_998 = relay.var("var_998", dtype = "uint64", shape = ())#candidate|998|()|var|uint64
var_999 = relay.var("var_999", dtype = "uint64", shape = (9, 1, 2))#candidate|999|(9, 1, 2)|var|uint64
bop_1000 = relay.right_shift(var_998.astype('uint64'), var_999.astype('uint64')) # shape=(9, 1, 2)
output = relay.Tuple([bop_1000,])
output2 = relay.Tuple([bop_1000,])
func_1015 = relay.Function([var_998,var_999,], output)
mod['func_1015'] = func_1015
mod = relay.transform.InferType()(mod)
var_1016 = relay.var("var_1016", dtype = "uint64", shape = ())#candidate|1016|()|var|uint64
var_1017 = relay.var("var_1017", dtype = "uint64", shape = (9, 1, 2))#candidate|1017|(9, 1, 2)|var|uint64
output = func_1015(var_1016,var_1017,)
func_1018 = relay.Function([var_1016,var_1017,], output)
mutated_mod['func_1018'] = func_1018
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1686 = relay.var("var_1686", dtype = "int8", shape = ())#candidate|1686|()|var|int8
var_1687 = relay.var("var_1687", dtype = "int8", shape = (15, 1, 14))#candidate|1687|(15, 1, 14)|var|int8
bop_1688 = relay.equal(var_1686.astype('bool'), var_1687.astype('bool')) # shape=(15, 1, 14)
output = bop_1688
output2 = bop_1688
func_1708 = relay.Function([var_1686,var_1687,], output)
mod['func_1708'] = func_1708
mod = relay.transform.InferType()(mod)
var_1709 = relay.var("var_1709", dtype = "int8", shape = ())#candidate|1709|()|var|int8
var_1710 = relay.var("var_1710", dtype = "int8", shape = (15, 1, 14))#candidate|1710|(15, 1, 14)|var|int8
output = func_1708(var_1709,var_1710,)
func_1711 = relay.Function([var_1709,var_1710,], output)
mutated_mod['func_1711'] = func_1711
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2044 = relay.const([[[-6,-4,4,-10,1,-8,-3,-1,-10,-7,-6,-9],[6,5,-9,-9,-10,1,-2,-3,-6,-9,-5,-3],[9,9,1,-10,-3,8,-2,6,-10,5,7,-7],[1,1,-8,3,6,-3,-10,-3,-1,-7,-8,4],[10,-1,7,2,-4,6,-9,9,10,2,6,5],[4,10,-4,1,-4,-3,-10,3,-7,-6,-7,-4],[1,-7,9,6,-3,-7,-3,-1,9,-9,8,-3],[-10,-3,-7,4,-3,5,-4,-7,-7,1,3,8],[7,-2,-1,10,-7,-8,2,-2,-6,8,8,-4]],[[2,-7,-9,-8,2,9,-7,5,-6,6,-9,-4],[7,-3,-9,-2,-4,5,-1,10,-1,7,10,1],[6,-5,-8,-10,-2,10,1,10,10,-9,-8,-6],[-7,-8,6,-4,-9,-7,-9,1,-9,-1,-2,6],[-8,-5,-3,7,4,9,-5,4,2,-10,-10,10],[-2,2,4,8,-2,-10,3,-6,-3,1,-6,3],[-8,-8,-3,-8,1,-1,-7,-1,-3,7,-8,-5],[6,2,-2,-1,-7,-9,-9,-5,8,-7,6,-7],[9,-5,4,2,7,-3,9,9,3,4,4,2]],[[5,8,-9,10,-6,-7,-6,-2,4,-4,-9,9],[-9,-6,4,7,-9,-1,-8,6,-6,4,-3,7],[-2,-10,-3,5,-2,7,8,5,8,4,7,-10],[5,6,-2,5,5,-5,4,2,-8,4,-4,-3],[-7,8,9,8,2,3,-9,8,-6,2,-2,8],[3,7,-4,-10,9,6,4,3,-10,-1,-5,-2],[-1,-10,9,4,1,9,-2,-8,-5,-9,8,8],[-8,-6,-8,-1,1,2,1,-1,-9,-10,9,2],[-2,-6,4,-8,-3,-3,-3,7,-8,-5,9,3]],[[-6,9,-1,-3,5,-3,3,9,-6,-4,9,-4],[-4,-5,-4,-9,1,8,-10,-3,10,1,-7,-9],[5,1,-7,-10,-3,2,-5,-10,2,6,-10,-6],[-5,6,-9,7,6,-7,-5,4,4,-7,-10,5],[8,-3,-2,-1,-7,-1,9,2,5,10,8,8],[-1,-3,4,2,-9,10,-3,-10,-7,-9,-6,4],[2,-9,-8,-4,-4,2,5,1,9,7,4,2],[-6,-10,4,4,-7,-6,-2,4,7,7,9,8],[-1,10,10,-9,-5,-9,-2,-2,-7,-2,9,6]]], dtype = "int16")#candidate|2044|(4, 9, 12)|const|int16
const_2045 = relay.const([[[-4,3,-7,-3,1,2,7,-7,-9,-7,8,8],[-8,-5,7,8,-2,-3,1,10,6,-6,-1,10],[-8,2,2,3,10,4,1,9,3,2,9,-8],[3,2,4,5,-8,-9,1,-10,-9,-10,-8,-2],[10,7,-6,-6,6,7,9,4,-1,10,3,4],[-4,-10,3,3,8,5,-2,4,-1,10,3,7],[-4,-5,-7,-9,-5,-5,-3,-4,-8,-4,1,10],[7,2,-1,3,8,-2,-10,9,-10,-4,3,-3],[-6,-1,2,-1,-1,-10,-5,-8,2,-9,-1,-6]],[[1,5,7,-4,2,3,7,5,-8,10,8,6],[10,-4,2,-5,1,6,7,-2,7,4,-1,4],[6,3,-4,5,4,6,-1,-10,10,-10,-8,-7],[-10,-9,-4,10,-8,3,4,5,-9,-6,1,-3],[-4,9,7,-8,-9,-8,1,2,-1,-1,-4,2],[7,-4,-4,3,-9,-3,-10,-3,-8,-3,-7,6],[9,2,4,-7,-2,3,-7,7,1,-2,8,10],[-8,-5,-8,-4,8,2,-2,5,9,3,6,-4],[9,-6,3,5,10,8,-2,-5,-8,6,-6,-5]],[[1,-3,-9,2,4,7,3,-1,-5,-1,1,9],[4,1,-6,-7,6,2,10,3,1,3,3,8],[-5,5,6,-5,-1,2,-5,-4,10,8,1,4],[-1,-7,3,4,-6,-3,-3,5,-9,3,6,6],[-5,-8,6,-10,10,-5,7,-2,6,-7,8,-5],[9,-10,5,-10,2,9,-1,7,10,-8,-9,10],[-10,8,-9,4,1,10,1,6,-2,-1,6,6],[-2,-3,-9,-8,-9,6,1,3,-3,8,7,-9],[-1,-1,10,2,-6,-3,-7,-1,-1,-4,6,-2]],[[4,-4,4,-9,-4,3,-2,8,-10,-10,-3,-3],[9,-5,-7,-3,-9,-2,-2,7,5,-2,4,6],[10,-3,8,-9,5,9,3,3,-1,-4,-9,-1],[-2,3,2,2,-5,4,2,8,7,9,3,1],[-8,9,7,-4,-2,7,-4,3,-3,-3,-10,2],[2,9,-3,9,7,-1,-7,-5,1,2,-10,-5],[2,8,10,-1,-1,-8,-3,10,-7,4,5,3],[-3,1,2,6,5,7,-6,-8,1,1,-2,-1],[1,3,7,2,-2,3,1,7,-5,-1,-5,8]]], dtype = "int16")#candidate|2045|(4, 9, 12)|const|int16
bop_2046 = relay.bitwise_and(const_2044.astype('int16'), relay.reshape(const_2045.astype('int16'), relay.shape_of(const_2044))) # shape=(4, 9, 12)
func_1708_call = mod.get_global_var('func_1708')
func_1711_call = mutated_mod.get_global_var('func_1711')
var_2055 = relay.var("var_2055", dtype = "int8", shape = ())#candidate|2055|()|var|int8
const_2056 = relay.const([-4,-5,1,7,-9,2,7,6,-1,-6,-7,9,10,4,-10,-5,2,-9,9,6,3,6,10,-3,-4,6,-3,7,-2,-7,-8,7,2,6,-5,1,-10,7,-2,-5,-3,-8,-5,-10,-7,-9,1,8,-5,-7,7,-8,7,-1,8,-5,-4,-7,-1,-7,-4,-3,6,8,-6,-10,5,1,3,-10,5,-2,-2,1,-4,10,-7,-2,-4,4,7,4,4,-5,7,-8,3,-3,-8,8,5,1,1,-6,-4,-7,-4,5,6,5,-5,6,-4,5,-7,6,-9,5,10,6,-2,7,2,6,-1,-1,-7,-6,-8,-2,2,-7,5,-2,3,-1,1,-5,-9,2,5,8,-10,10,7,-5,10,-1,-3,-9,5,5,7,10,2,-8,5,6,2,7,10,10,3,-6,-6,-7,7,6,2,10,10,-1,-5,2,5,-9,-3,-6,2,-5,8,-1,3,-9,-5,-9,8,-2,8,-4,-5,-1,-4,5,10,-6,3,3,5,3,10,7,-3,-3,-4,6,-10,8,-4,9,6,-2,3,4,-7,9,8,-5,4,-2], dtype = "int8")#candidate|2056|(210,)|const|int8
call_2054 = func_1708_call(relay.reshape(var_2055.astype('int8'), []), relay.reshape(const_2056.astype('int8'), [15, 1, 14]), )
call_2057 = func_1708_call(relay.reshape(var_2055.astype('int8'), []), relay.reshape(const_2056.astype('int8'), [15, 1, 14]), )
func_1015_call = mod.get_global_var('func_1015')
func_1018_call = mutated_mod.get_global_var('func_1018')
const_2095 = relay.const([-9,-4,-6,-3,-6,-2,8,-5,1,-3,1,8,3,2,10,-3,-6,5], dtype = "uint64")#candidate|2095|(18,)|const|uint64
call_2094 = relay.TupleGetItem(func_1015_call(relay.reshape(var_2055.astype('uint64'), []), relay.reshape(const_2095.astype('uint64'), [9, 1, 2]), ), 0)
call_2096 = relay.TupleGetItem(func_1018_call(relay.reshape(var_2055.astype('uint64'), []), relay.reshape(const_2095.astype('uint64'), [9, 1, 2]), ), 0)
output = relay.Tuple([bop_2046,call_2054,var_2055,const_2056,call_2094,const_2095,])
output2 = relay.Tuple([bop_2046,call_2057,var_2055,const_2056,call_2096,const_2095,])
func_2097 = relay.Function([var_2055,], output)
mod['func_2097'] = func_2097
mod = relay.transform.InferType()(mod)
var_2098 = relay.var("var_2098", dtype = "int8", shape = ())#candidate|2098|()|var|int8
output = func_2097(var_2098)
func_2099 = relay.Function([var_2098], output)
mutated_mod['func_2099'] = func_2099
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2631 = relay.var("var_2631", dtype = "float32", shape = (6, 11, 1))#candidate|2631|(6, 11, 1)|var|float32
var_2632 = relay.var("var_2632", dtype = "float32", shape = (6, 11, 5))#candidate|2632|(6, 11, 5)|var|float32
bop_2633 = relay.mod(var_2631.astype('float32'), var_2632.astype('float32')) # shape=(6, 11, 5)
func_1015_call = mod.get_global_var('func_1015')
func_1018_call = mutated_mod.get_global_var('func_1018')
const_2642 = relay.const(-10, dtype = "uint64")#candidate|2642|()|const|uint64
const_2643 = relay.const([[9],[-6],[-10],[4],[-10],[-3],[7],[-2],[8],[10],[-5],[-2],[3],[-7],[-7],[9],[2],[10]], dtype = "uint64")#candidate|2643|(18, 1)|const|uint64
call_2641 = relay.TupleGetItem(func_1015_call(relay.reshape(const_2642.astype('uint64'), []), relay.reshape(const_2643.astype('uint64'), [9, 1, 2]), ), 0)
call_2644 = relay.TupleGetItem(func_1018_call(relay.reshape(const_2642.astype('uint64'), []), relay.reshape(const_2643.astype('uint64'), [9, 1, 2]), ), 0)
func_1708_call = mod.get_global_var('func_1708')
func_1711_call = mutated_mod.get_global_var('func_1711')
const_2675 = relay.const([-10,5,4,1,7,9,3,-1,-1,3,-9,-9,6,-10,-7,-9,-9,2,-10,-7,3,6,-6,-1,9,10,-8,10,8,-5,1,2,8,7,9,7,-2,7,10,-4,2,1,-4,6,-1,8,6,-1,-6,-4,-2,6,-8,9,-3,-8,-8,6,10,-3,4,-2,-1,-7,-3,3,-6,9,-4,-1,-3,3,-8,3,-1,-8,10,-7,2,10,-9,-1,4,8,-2,4,-9,-7,5,6,10,5,3,3,-8,-3,7,-1,-7,8,9,5,10,5,-3,3,5,3,10,5,10,6,-5,-10,-7,10,-2,-5,6,-10,-3,2,1,-7,-3,2,2,5,-6,-10,3,10,-6,10,5,2,-2,-5,2,-7,-6,-10,-6,8,8,-4,9,-8,9,8,7,3,4,6,9,9,-2,-6,4,2,-3,4,-10,-8,10,6,-5,1,-6,3,10,-3,-5,-3,-4,-10,1,8,6,-4,-3,6,-9,7,-5,3,6,-10,-6,7,-9,-6,1,-6,3,5,-10,3,-9,-5,3,-10,7,-8,-6,-4,4,-7,-5,3], dtype = "int8")#candidate|2675|(210,)|const|int8
call_2674 = func_1708_call(relay.reshape(const_2642.astype('int8'), []), relay.reshape(const_2675.astype('int8'), [15, 1, 14]), )
call_2676 = func_1708_call(relay.reshape(const_2642.astype('int8'), []), relay.reshape(const_2675.astype('int8'), [15, 1, 14]), )
bop_2692 = relay.less_equal(call_2641.astype('bool'), const_2642.astype('bool')) # shape=(9, 1, 2)
bop_2695 = relay.less_equal(call_2644.astype('bool'), const_2642.astype('bool')) # shape=(9, 1, 2)
output = relay.Tuple([bop_2633,const_2643,call_2674,const_2675,bop_2692,])
output2 = relay.Tuple([bop_2633,const_2643,call_2676,const_2675,bop_2695,])
func_2703 = relay.Function([var_2631,var_2632,], output)
mod['func_2703'] = func_2703
mod = relay.transform.InferType()(mod)
mutated_mod['func_2703'] = func_2703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2703_call = mutated_mod.get_global_var('func_2703')
var_2705 = relay.var("var_2705", dtype = "float32", shape = (6, 11, 1))#candidate|2705|(6, 11, 1)|var|float32
var_2706 = relay.var("var_2706", dtype = "float32", shape = (6, 11, 5))#candidate|2706|(6, 11, 5)|var|float32
call_2704 = func_2703_call(var_2705,var_2706,)
output = call_2704
func_2707 = relay.Function([var_2705,var_2706,], output)
mutated_mod['func_2707'] = func_2707
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4063 = relay.var("var_4063", dtype = "float32", shape = (11, 5, 11))#candidate|4063|(11, 5, 11)|var|float32
uop_4064 = relay.acos(var_4063.astype('float32')) # shape=(11, 5, 11)
output = uop_4064
output2 = uop_4064
func_4071 = relay.Function([var_4063,], output)
mod['func_4071'] = func_4071
mod = relay.transform.InferType()(mod)
var_4072 = relay.var("var_4072", dtype = "float32", shape = (11, 5, 11))#candidate|4072|(11, 5, 11)|var|float32
output = func_4071(var_4072)
func_4073 = relay.Function([var_4072], output)
mutated_mod['func_4073'] = func_4073
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4714 = relay.constdtype = "float32")#candidate|4714|(15, 13, 15)|const|float32
uop_4715 = relay.cosh(const_4714.astype('float32')) # shape=(15, 13, 15)
func_1708_call = mod.get_global_var('func_1708')
func_1711_call = mutated_mod.get_global_var('func_1711')
var_4720 = relay.var("var_4720", dtype = "int8", shape = ())#candidate|4720|()|var|int8
var_4721 = relay.var("var_4721", dtype = "int8", shape = (210,))#candidate|4721|(210,)|var|int8
call_4719 = func_1708_call(relay.reshape(var_4720.astype('int8'), []), relay.reshape(var_4721.astype('int8'), [15, 1, 14]), )
call_4722 = func_1708_call(relay.reshape(var_4720.astype('int8'), []), relay.reshape(var_4721.astype('int8'), [15, 1, 14]), )
func_249_call = mod.get_global_var('func_249')
func_253_call = mutated_mod.get_global_var('func_253')
const_4727 = relay.const([-5,-7,-9,-9,-6,8,2,-1,-10,9,3,-9,-8,-7,5,1,4,7,8,8,4,8,-5,-4,-3,4,-2,-8,7,1,1,4,-1,9,-6,3,-6,-7,-2,-3,-6,1,-9,-8,6,8,1,-3,2,2,-10,9,8,6,-7,-6,-5,10,-8,10,-8,-9,2,-1,-5,-2,8,10,7,7,-4,-8,-10,5,-7,-9,-3,3,-2,10,9,-4,-5,-4,-2,-10,-2,7,7,1,7,6,-10,-7,-5,-2,1,3,2,-2,-6,1,9,1,8,-9,-2,6,5,-8,10,-5,8,9,-5,2,-1,1,-9,-7,6,3,-10,2,4,-6,-2,7,8,7,7,5,2,-10,-10,-9,1,-4,3,-6], dtype = "uint8")#candidate|4727|(140,)|const|uint8
call_4726 = relay.TupleGetItem(func_249_call(relay.reshape(const_4727.astype('uint8'), [5, 4, 7]), relay.reshape(const_4727.astype('uint8'), [5, 4, 7]), ), 0)
call_4728 = relay.TupleGetItem(func_253_call(relay.reshape(const_4727.astype('uint8'), [5, 4, 7]), relay.reshape(const_4727.astype('uint8'), [5, 4, 7]), ), 0)
output = relay.Tuple([uop_4715,call_4719,var_4720,var_4721,call_4726,const_4727,])
output2 = relay.Tuple([uop_4715,call_4722,var_4720,var_4721,call_4728,const_4727,])
func_4733 = relay.Function([var_4720,var_4721,], output)
mod['func_4733'] = func_4733
mod = relay.transform.InferType()(mod)
var_4734 = relay.var("var_4734", dtype = "int8", shape = ())#candidate|4734|()|var|int8
var_4735 = relay.var("var_4735", dtype = "int8", shape = (210,))#candidate|4735|(210,)|var|int8
output = func_4733(var_4734,var_4735,)
func_4736 = relay.Function([var_4734,var_4735,], output)
mutated_mod['func_4736'] = func_4736
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4743 = relay.const([[[6,1,5,4,5,9,6,5,10,-7,8,8,3,-6],[10,8,9,-1,9,10,-1,9,-2,7,8,10,7,1],[-8,7,-2,3,6,-10,1,-6,8,10,-2,9,-10,-8],[-6,6,-6,3,10,3,-2,-9,-10,7,-4,9,5,-6],[6,-1,2,10,2,10,-1,-8,-4,8,-5,6,-2,-3]],[[-3,-2,-4,-5,10,-8,9,4,1,-3,-10,2,5,-5],[3,6,9,-6,10,-1,5,5,-7,3,3,-4,-6,10],[-4,-2,3,2,-5,6,2,-8,-9,2,-1,6,1,-9],[-6,-10,-4,-7,10,10,10,3,-7,10,3,2,4,-10],[-7,4,9,-2,-6,-9,-10,4,-9,3,-9,4,4,-7]],[[-5,3,-7,-5,-1,-9,-8,5,-1,10,-7,8,8,7],[-7,10,1,-3,-2,-5,5,-2,-2,1,-8,-5,-7,-1],[2,-9,-2,10,4,-2,-10,-1,-2,-8,-2,10,-3,4],[-6,7,3,-7,-4,-6,10,7,6,-7,-3,-3,-5,6],[5,-7,5,1,9,2,-6,-4,-8,-8,-10,-5,1,9]],[[-10,-3,-5,10,-6,9,-8,1,-9,10,-5,-4,-3,-8],[-6,10,2,-4,6,10,-2,9,9,-4,4,-6,4,2],[8,4,8,1,-7,-10,9,-7,8,3,-8,8,2,-1],[-5,-6,4,8,-3,-2,3,5,2,5,2,9,-6,1],[10,-6,4,9,-1,-8,7,-5,1,-4,-4,3,6,3]],[[7,-10,6,4,-8,-8,2,-1,7,9,6,1,2,-5],[3,10,3,-9,-6,1,-7,-2,8,-10,-9,-2,-2,-4],[-6,5,-6,9,5,-10,-2,6,3,-8,1,-5,7,-7],[2,-7,2,-10,-7,10,9,-6,3,10,-9,-7,8,-3],[3,8,-3,6,7,6,4,-7,-5,4,4,-6,-4,-5]],[[6,9,-10,-7,-2,-10,8,2,-1,-7,-1,-4,6,-7],[-4,-5,2,2,-1,-7,-1,-9,-5,2,-9,10,-9,4],[-8,-8,-5,3,-6,-1,5,9,7,4,8,-5,7,8],[4,3,-7,4,-1,9,-3,4,10,-1,-1,8,3,10],[-3,-5,-2,-8,-9,-1,9,-10,10,-8,9,-7,6,-2]],[[1,10,10,-2,6,-1,10,5,-4,2,1,4,1,10],[1,8,-4,7,-8,6,6,-8,3,-10,8,-1,-1,-7],[-8,-10,9,-2,-10,4,-7,1,2,-4,3,-2,-5,10],[-7,8,5,6,-10,4,-9,-10,-3,-2,8,-1,-9,2],[5,-1,10,-2,1,-9,-8,3,-5,6,1,6,5,2]],[[2,9,9,-2,9,-6,-1,1,9,-9,-6,6,-4,-9],[-2,6,-7,3,-4,5,-10,6,-5,3,3,-10,-8,6],[-9,-4,6,-6,2,10,-6,-1,-5,8,-6,-6,6,9],[6,-7,-10,7,10,10,-3,-9,-5,-3,-9,-4,5,-5],[-8,4,-10,1,3,-6,9,4,8,1,4,-6,7,10]],[[-10,3,-9,-3,10,-7,-2,-4,2,-5,9,-4,9,6],[1,-10,-10,10,9,-8,-9,-10,9,2,-1,-2,2,-3],[-7,9,-6,-9,-9,6,4,7,-9,4,10,-1,-4,1],[-8,-9,5,3,6,-10,2,-4,-1,10,7,-10,-2,6],[-4,4,-3,-1,2,2,5,-2,9,3,-7,10,7,-1]],[[-10,8,3,-10,-6,7,-4,-3,-10,-5,-3,8,1,5],[7,8,-2,5,-8,-4,-5,-10,9,-7,-10,-9,-1,4],[5,10,5,1,-2,-3,-3,-5,-7,7,-10,-4,-7,5],[1,9,-1,10,-7,-3,9,-1,2,-1,1,-4,2,-1],[-10,8,10,-7,-8,-6,10,-8,-5,1,7,8,-10,8]]], dtype = "uint64")#candidate|4743|(10, 5, 14)|const|uint64
var_4744 = relay.var("var_4744", dtype = "uint64", shape = (10, 5, 14))#candidate|4744|(10, 5, 14)|var|uint64
bop_4745 = relay.subtract(const_4743.astype('uint64'), relay.reshape(var_4744.astype('uint64'), relay.shape_of(const_4743))) # shape=(10, 5, 14)
func_4071_call = mod.get_global_var('func_4071')
func_4073_call = mutated_mod.get_global_var('func_4073')
var_4749 = relay.var("var_4749", dtype = "float32", shape = (11, 55))#candidate|4749|(11, 55)|var|float32
call_4748 = func_4071_call(relay.reshape(var_4749.astype('float32'), [11, 5, 11]))
call_4750 = func_4071_call(relay.reshape(var_4749.astype('float32'), [11, 5, 11]))
output = relay.Tuple([bop_4745,call_4748,var_4749,])
output2 = relay.Tuple([bop_4745,call_4750,var_4749,])
func_4755 = relay.Function([var_4744,var_4749,], output)
mod['func_4755'] = func_4755
mod = relay.transform.InferType()(mod)
var_4756 = relay.var("var_4756", dtype = "uint64", shape = (10, 5, 14))#candidate|4756|(10, 5, 14)|var|uint64
var_4757 = relay.var("var_4757", dtype = "float32", shape = (11, 55))#candidate|4757|(11, 55)|var|float32
output = func_4755(var_4756,var_4757,)
func_4758 = relay.Function([var_4756,var_4757,], output)
mutated_mod['func_4758'] = func_4758
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4811 = relay.var("var_4811", dtype = "float64", shape = (1, 11, 2))#candidate|4811|(1, 11, 2)|var|float64
uop_4812 = relay.acos(var_4811.astype('float64')) # shape=(1, 11, 2)
output = relay.Tuple([uop_4812,])
output2 = relay.Tuple([uop_4812,])
func_4827 = relay.Function([var_4811,], output)
mod['func_4827'] = func_4827
mod = relay.transform.InferType()(mod)
mutated_mod['func_4827'] = func_4827
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4828 = relay.var("var_4828", dtype = "float64", shape = (1, 11, 2))#candidate|4828|(1, 11, 2)|var|float64
func_4827_call = mutated_mod.get_global_var('func_4827')
call_4829 = func_4827_call(var_4828)
output = call_4829
func_4830 = relay.Function([var_4828], output)
mutated_mod['func_4830'] = func_4830
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4940 = relay.var("var_4940", dtype = "float64", shape = (10, 2, 8))#candidate|4940|(10, 2, 8)|var|float64
uop_4941 = relay.acos(var_4940.astype('float64')) # shape=(10, 2, 8)
output = uop_4941
output2 = uop_4941
func_4950 = relay.Function([var_4940,], output)
mod['func_4950'] = func_4950
mod = relay.transform.InferType()(mod)
var_4951 = relay.var("var_4951", dtype = "float64", shape = (10, 2, 8))#candidate|4951|(10, 2, 8)|var|float64
output = func_4950(var_4951)
func_4952 = relay.Function([var_4951], output)
mutated_mod['func_4952'] = func_4952
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5781 = relay.var("var_5781", dtype = "float64", shape = (5, 1, 5))#candidate|5781|(5, 1, 5)|var|float64
uop_5782 = relay.exp(var_5781.astype('float64')) # shape=(5, 1, 5)
bop_5793 = relay.logical_or(uop_5782.astype('bool'), relay.reshape(var_5781.astype('bool'), relay.shape_of(uop_5782))) # shape=(5, 1, 5)
output = relay.Tuple([bop_5793,])
output2 = relay.Tuple([bop_5793,])
func_5816 = relay.Function([var_5781,], output)
mod['func_5816'] = func_5816
mod = relay.transform.InferType()(mod)
var_5817 = relay.var("var_5817", dtype = "float64", shape = (5, 1, 5))#candidate|5817|(5, 1, 5)|var|float64
output = func_5816(var_5817)
func_5818 = relay.Function([var_5817], output)
mutated_mod['func_5818'] = func_5818
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6126 = relay.var("var_6126", dtype = "int32", shape = (13, 14, 16))#candidate|6126|(13, 14, 16)|var|int32
var_6127 = relay.var("var_6127", dtype = "int32", shape = (13, 14, 16))#candidate|6127|(13, 14, 16)|var|int32
bop_6128 = relay.less_equal(var_6126.astype('bool'), relay.reshape(var_6127.astype('bool'), relay.shape_of(var_6126))) # shape=(13, 14, 16)
func_5816_call = mod.get_global_var('func_5816')
func_5818_call = mutated_mod.get_global_var('func_5818')
const_6142 = relay.const([-1.685385,-0.179100,0.513006,-0.138622,1.451128,-0.235510,-4.897808,1.772419,8.053600,0.297057,-4.924071,2.954995,7.846118,2.534510,-5.807351,0.597188,6.145464,9.490700,3.066693,2.641304,-8.417801,-9.009886,9.110530,-9.005008,2.313944], dtype = "float64")#candidate|6142|(25,)|const|float64
call_6141 = relay.TupleGetItem(func_5816_call(relay.reshape(const_6142.astype('float64'), [5, 1, 5])), 0)
call_6143 = relay.TupleGetItem(func_5818_call(relay.reshape(const_6142.astype('float64'), [5, 1, 5])), 0)
output = relay.Tuple([bop_6128,call_6141,const_6142,])
output2 = relay.Tuple([bop_6128,call_6143,const_6142,])
func_6144 = relay.Function([var_6126,var_6127,], output)
mod['func_6144'] = func_6144
mod = relay.transform.InferType()(mod)
mutated_mod['func_6144'] = func_6144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6144_call = mutated_mod.get_global_var('func_6144')
var_6146 = relay.var("var_6146", dtype = "int32", shape = (13, 14, 16))#candidate|6146|(13, 14, 16)|var|int32
var_6147 = relay.var("var_6147", dtype = "int32", shape = (13, 14, 16))#candidate|6147|(13, 14, 16)|var|int32
call_6145 = func_6144_call(var_6146,var_6147,)
output = call_6145
func_6148 = relay.Function([var_6146,var_6147,], output)
mutated_mod['func_6148'] = func_6148
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7660 = relay.var("var_7660", dtype = "int32", shape = (8, 15, 14))#candidate|7660|(8, 15, 14)|var|int32
var_7661 = relay.var("var_7661", dtype = "int32", shape = (8, 15, 14))#candidate|7661|(8, 15, 14)|var|int32
bop_7662 = relay.not_equal(var_7660.astype('bool'), relay.reshape(var_7661.astype('bool'), relay.shape_of(var_7660))) # shape=(8, 15, 14)
func_1708_call = mod.get_global_var('func_1708')
func_1711_call = mutated_mod.get_global_var('func_1711')
var_7671 = relay.var("var_7671", dtype = "int8", shape = ())#candidate|7671|()|var|int8
const_7672 = relay.const([-8,-6,-9,5,-7,6,5,-9,4,9,-2,10,-10,-8,-5,-2,1,5,4,-7,5,3,3,-4,3,3,-10,5,-5,8,3,-2,9,-4,9,6,-5,5,10,-7,1,-10,4,-2,2,8,9,10,7,-2,9,10,4,4,-5,7,-10,8,6,-2,7,4,7,-5,-1,-3,-3,-4,8,-1,6,8,8,-9,-5,3,-10,9,10,-4,-1,1,9,2,-3,10,-4,-7,-4,7,9,3,-6,9,-8,-8,9,4,-5,5,9,9,-4,6,-3,7,-2,1,7,-3,-2,-6,2,-1,4,7,1,-7,-2,-3,5,-9,4,-4,-10,6,9,7,3,8,-3,-3,3,-9,2,-10,-2,3,-8,7,-3,4,-6,-1,6,-6,-6,-3,-8,4,4,6,-2,2,-3,8,3,-8,-2,7,10,-6,2,-7,-4,2,-4,4,7,-6,8,-8,7,-9,5,-6,1,5,-3,-6,3,7,-4,3,-8,4,4,-6,-10,-9,-10,3,-9,7,-1,1,8,-1,-8,6,5,3,-5,-2,3,-9,-6,-6,-1,9], dtype = "int8")#candidate|7672|(210,)|const|int8
call_7670 = func_1708_call(relay.reshape(var_7671.astype('int8'), []), relay.reshape(const_7672.astype('int8'), [15, 1, 14]), )
call_7673 = func_1708_call(relay.reshape(var_7671.astype('int8'), []), relay.reshape(const_7672.astype('int8'), [15, 1, 14]), )
var_7680 = relay.var("var_7680", dtype = "bool", shape = (15, 16, 14))#candidate|7680|(15, 16, 14)|var|bool
bop_7681 = relay.greater_equal(call_7670.astype('bool'), var_7680.astype('bool')) # shape=(15, 16, 14)
bop_7684 = relay.greater_equal(call_7673.astype('bool'), var_7680.astype('bool')) # shape=(15, 16, 14)
func_4733_call = mod.get_global_var('func_4733')
func_4736_call = mutated_mod.get_global_var('func_4736')
call_7723 = relay.TupleGetItem(func_4733_call(relay.reshape(var_7671.astype('int8'), []), relay.reshape(const_7672.astype('int8'), [210,]), ), 0)
call_7724 = relay.TupleGetItem(func_4736_call(relay.reshape(var_7671.astype('int8'), []), relay.reshape(const_7672.astype('int8'), [210,]), ), 0)
uop_7729 = relay.sqrt(var_7660.astype('float64')) # shape=(8, 15, 14)
uop_7731 = relay.log(uop_7729.astype('float64')) # shape=(8, 15, 14)
output = relay.Tuple([bop_7662,var_7671,const_7672,bop_7681,call_7723,uop_7731,])
output2 = relay.Tuple([bop_7662,var_7671,const_7672,bop_7684,call_7724,uop_7731,])
func_7733 = relay.Function([var_7660,var_7661,var_7671,var_7680,], output)
mod['func_7733'] = func_7733
mod = relay.transform.InferType()(mod)
var_7734 = relay.var("var_7734", dtype = "int32", shape = (8, 15, 14))#candidate|7734|(8, 15, 14)|var|int32
var_7735 = relay.var("var_7735", dtype = "int32", shape = (8, 15, 14))#candidate|7735|(8, 15, 14)|var|int32
var_7736 = relay.var("var_7736", dtype = "int8", shape = ())#candidate|7736|()|var|int8
var_7737 = relay.var("var_7737", dtype = "bool", shape = (15, 16, 14))#candidate|7737|(15, 16, 14)|var|bool
output = func_7733(var_7734,var_7735,var_7736,var_7737,)
func_7738 = relay.Function([var_7734,var_7735,var_7736,var_7737,], output)
mutated_mod['func_7738'] = func_7738
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8769 = relay.var("var_8769", dtype = "uint16", shape = (9, 15, 8))#candidate|8769|(9, 15, 8)|var|uint16
var_8770 = relay.var("var_8770", dtype = "uint16", shape = (9, 15, 8))#candidate|8770|(9, 15, 8)|var|uint16
bop_8771 = relay.bitwise_and(var_8769.astype('uint16'), relay.reshape(var_8770.astype('uint16'), relay.shape_of(var_8769))) # shape=(9, 15, 8)
func_249_call = mod.get_global_var('func_249')
func_253_call = mutated_mod.get_global_var('func_253')
var_8781 = relay.var("var_8781", dtype = "uint8", shape = (140,))#candidate|8781|(140,)|var|uint8
call_8780 = relay.TupleGetItem(func_249_call(relay.reshape(var_8781.astype('uint8'), [5, 4, 7]), relay.reshape(var_8781.astype('uint8'), [5, 4, 7]), ), 0)
call_8782 = relay.TupleGetItem(func_253_call(relay.reshape(var_8781.astype('uint8'), [5, 4, 7]), relay.reshape(var_8781.astype('uint8'), [5, 4, 7]), ), 0)
output = relay.Tuple([bop_8771,call_8780,var_8781,])
output2 = relay.Tuple([bop_8771,call_8782,var_8781,])
func_8788 = relay.Function([var_8769,var_8770,var_8781,], output)
mod['func_8788'] = func_8788
mod = relay.transform.InferType()(mod)
var_8789 = relay.var("var_8789", dtype = "uint16", shape = (9, 15, 8))#candidate|8789|(9, 15, 8)|var|uint16
var_8790 = relay.var("var_8790", dtype = "uint16", shape = (9, 15, 8))#candidate|8790|(9, 15, 8)|var|uint16
var_8791 = relay.var("var_8791", dtype = "uint8", shape = (140,))#candidate|8791|(140,)|var|uint8
output = func_8788(var_8789,var_8790,var_8791,)
func_8792 = relay.Function([var_8789,var_8790,var_8791,], output)
mutated_mod['func_8792'] = func_8792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8794 = relay.var("var_8794", dtype = "bool", shape = (1, 7, 8))#candidate|8794|(1, 7, 8)|var|bool
var_8795 = relay.var("var_8795", dtype = "bool", shape = (12, 7, 8))#candidate|8795|(12, 7, 8)|var|bool
bop_8796 = relay.logical_or(var_8794.astype('bool'), var_8795.astype('bool')) # shape=(12, 7, 8)
uop_8806 = relay.cosh(bop_8796.astype('float64')) # shape=(12, 7, 8)
func_4755_call = mod.get_global_var('func_4755')
func_4758_call = mutated_mod.get_global_var('func_4758')
var_8811 = relay.var("var_8811", dtype = "uint64", shape = (700,))#candidate|8811|(700,)|var|uint64
var_8812 = relay.var("var_8812", dtype = "float32", shape = (605,))#candidate|8812|(605,)|var|float32
call_8810 = relay.TupleGetItem(func_4755_call(relay.reshape(var_8811.astype('uint64'), [10, 5, 14]), relay.reshape(var_8812.astype('float32'), [11, 55]), ), 2)
call_8813 = relay.TupleGetItem(func_4758_call(relay.reshape(var_8811.astype('uint64'), [10, 5, 14]), relay.reshape(var_8812.astype('float32'), [11, 55]), ), 2)
func_249_call = mod.get_global_var('func_249')
func_253_call = mutated_mod.get_global_var('func_253')
var_8826 = relay.var("var_8826", dtype = "uint8", shape = (140,))#candidate|8826|(140,)|var|uint8
call_8825 = relay.TupleGetItem(func_249_call(relay.reshape(var_8826.astype('uint8'), [5, 4, 7]), relay.reshape(var_8826.astype('uint8'), [5, 4, 7]), ), 0)
call_8827 = relay.TupleGetItem(func_253_call(relay.reshape(var_8826.astype('uint8'), [5, 4, 7]), relay.reshape(var_8826.astype('uint8'), [5, 4, 7]), ), 0)
output = relay.Tuple([uop_8806,call_8810,var_8811,var_8812,call_8825,var_8826,])
output2 = relay.Tuple([uop_8806,call_8813,var_8811,var_8812,call_8827,var_8826,])
func_8829 = relay.Function([var_8794,var_8795,var_8811,var_8812,var_8826,], output)
mod['func_8829'] = func_8829
mod = relay.transform.InferType()(mod)
var_8830 = relay.var("var_8830", dtype = "bool", shape = (1, 7, 8))#candidate|8830|(1, 7, 8)|var|bool
var_8831 = relay.var("var_8831", dtype = "bool", shape = (12, 7, 8))#candidate|8831|(12, 7, 8)|var|bool
var_8832 = relay.var("var_8832", dtype = "uint64", shape = (700,))#candidate|8832|(700,)|var|uint64
var_8833 = relay.var("var_8833", dtype = "float32", shape = (605,))#candidate|8833|(605,)|var|float32
var_8834 = relay.var("var_8834", dtype = "uint8", shape = (140,))#candidate|8834|(140,)|var|uint8
output = func_8829(var_8830,var_8831,var_8832,var_8833,var_8834,)
func_8835 = relay.Function([var_8830,var_8831,var_8832,var_8833,var_8834,], output)
mutated_mod['func_8835'] = func_8835
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9165 = relay.var("var_9165", dtype = "float64", shape = (16, 9, 1))#candidate|9165|(16, 9, 1)|var|float64
uop_9166 = relay.log10(var_9165.astype('float64')) # shape=(16, 9, 1)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
const_9173 = relay.const(-2, dtype = "int8")#candidate|9173|()|const|int8
call_9172 = relay.TupleGetItem(func_2097_call(relay.reshape(const_9173.astype('int8'), [])), 3)
call_9174 = relay.TupleGetItem(func_2099_call(relay.reshape(const_9173.astype('int8'), [])), 3)
bop_9181 = relay.mod(uop_9166.astype('float64'), const_9173.astype('float64')) # shape=(16, 9, 1)
output = relay.Tuple([call_9172,bop_9181,])
output2 = relay.Tuple([call_9174,bop_9181,])
func_9190 = relay.Function([var_9165,], output)
mod['func_9190'] = func_9190
mod = relay.transform.InferType()(mod)
mutated_mod['func_9190'] = func_9190
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9191 = relay.var("var_9191", dtype = "float64", shape = (16, 9, 1))#candidate|9191|(16, 9, 1)|var|float64
func_9190_call = mutated_mod.get_global_var('func_9190')
call_9192 = func_9190_call(var_9191)
output = call_9192
func_9193 = relay.Function([var_9191], output)
mutated_mod['func_9193'] = func_9193
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9210 = relay.var("var_9210", dtype = "uint64", shape = (7, 9, 11))#candidate|9210|(7, 9, 11)|var|uint64
var_9211 = relay.var("var_9211", dtype = "uint64", shape = (7, 9, 11))#candidate|9211|(7, 9, 11)|var|uint64
bop_9212 = relay.greater_equal(var_9210.astype('bool'), relay.reshape(var_9211.astype('bool'), relay.shape_of(var_9210))) # shape=(7, 9, 11)
func_249_call = mod.get_global_var('func_249')
func_253_call = mutated_mod.get_global_var('func_253')
const_9226 = relay.const([10,6,-8,1,6,-4,-8,-2,-6,-10,8,-5,-2,-2,7,-8,-9,9,1,-7,-2,9,-3,-10,1,5,-1,-6,3,1,-3,-4,-3,10,-7,-8,-7,10,7,-10,-9,10,7,6,-3,-9,5,-9,-10,-2,-7,5,-7,-5,-4,-5,-9,-2,10,-6,4,9,3,-8,8,-10,-10,10,-10,4,-7,-7,-3,-5,-7,-5,-8,-8,2,-4,6,7,8,5,-2,4,-9,8,-9,4,3,7,-2,2,3,-6,9,4,1,-7,-10,2,1,-1,2,4,-3,-9,-8,-10,-7,9,-10,-5,-4,-1,5,-4,-3,7,-10,-1,4,9,10,-2,-6,5,3,4,-6,4,10,10,-4,-9,7,-7,-9,-2], dtype = "uint8")#candidate|9226|(140,)|const|uint8
call_9225 = relay.TupleGetItem(func_249_call(relay.reshape(const_9226.astype('uint8'), [5, 4, 7]), relay.reshape(const_9226.astype('uint8'), [5, 4, 7]), ), 0)
call_9227 = relay.TupleGetItem(func_253_call(relay.reshape(const_9226.astype('uint8'), [5, 4, 7]), relay.reshape(const_9226.astype('uint8'), [5, 4, 7]), ), 0)
bop_9239 = relay.less(var_9210.astype('bool'), relay.reshape(bop_9212.astype('bool'), relay.shape_of(var_9210))) # shape=(7, 9, 11)
output = relay.Tuple([call_9225,const_9226,bop_9239,])
output2 = relay.Tuple([call_9227,const_9226,bop_9239,])
func_9243 = relay.Function([var_9210,var_9211,], output)
mod['func_9243'] = func_9243
mod = relay.transform.InferType()(mod)
mutated_mod['func_9243'] = func_9243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9243_call = mutated_mod.get_global_var('func_9243')
var_9245 = relay.var("var_9245", dtype = "uint64", shape = (7, 9, 11))#candidate|9245|(7, 9, 11)|var|uint64
var_9246 = relay.var("var_9246", dtype = "uint64", shape = (7, 9, 11))#candidate|9246|(7, 9, 11)|var|uint64
call_9244 = func_9243_call(var_9245,var_9246,)
output = call_9244
func_9247 = relay.Function([var_9245,var_9246,], output)
mutated_mod['func_9247'] = func_9247
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9541 = relay.var("var_9541", dtype = "bool", shape = ())#candidate|9541|()|var|bool
const_9542 = relay.const([[[True,True,True,True,False,True,True,True,True,True,True,True]],[[True,False,True,False,False,False,False,True,True,True,True,False]]], dtype = "bool")#candidate|9542|(2, 1, 12)|const|bool
bop_9543 = relay.logical_and(var_9541.astype('bool'), const_9542.astype('bool')) # shape=(2, 1, 12)
bop_9550 = relay.right_shift(bop_9543.astype('int16'), var_9541.astype('int16')) # shape=(2, 1, 12)
uop_9571 = relay.erf(bop_9550.astype('float64')) # shape=(2, 1, 12)
bop_9574 = relay.floor_mod(uop_9571.astype('float64'), relay.reshape(bop_9550.astype('float64'), relay.shape_of(uop_9571))) # shape=(2, 1, 12)
func_1015_call = mod.get_global_var('func_1015')
func_1018_call = mutated_mod.get_global_var('func_1018')
var_9578 = relay.var("var_9578", dtype = "uint64", shape = (18, 1))#candidate|9578|(18, 1)|var|uint64
call_9577 = relay.TupleGetItem(func_1015_call(relay.reshape(var_9541.astype('uint64'), []), relay.reshape(var_9578.astype('uint64'), [9, 1, 2]), ), 0)
call_9579 = relay.TupleGetItem(func_1018_call(relay.reshape(var_9541.astype('uint64'), []), relay.reshape(var_9578.astype('uint64'), [9, 1, 2]), ), 0)
bop_9581 = relay.not_equal(uop_9571.astype('bool'), relay.reshape(bop_9550.astype('bool'), relay.shape_of(uop_9571))) # shape=(2, 1, 12)
bop_9584 = relay.floor_divide(uop_9571.astype('float64'), relay.reshape(bop_9543.astype('float64'), relay.shape_of(uop_9571))) # shape=(2, 1, 12)
uop_9587 = relay.atan(bop_9543.astype('float32')) # shape=(2, 1, 12)
output = relay.Tuple([bop_9574,call_9577,var_9578,bop_9581,bop_9584,uop_9587,])
output2 = relay.Tuple([bop_9574,call_9579,var_9578,bop_9581,bop_9584,uop_9587,])
func_9599 = relay.Function([var_9541,var_9578,], output)
mod['func_9599'] = func_9599
mod = relay.transform.InferType()(mod)
var_9600 = relay.var("var_9600", dtype = "bool", shape = ())#candidate|9600|()|var|bool
var_9601 = relay.var("var_9601", dtype = "uint64", shape = (18, 1))#candidate|9601|(18, 1)|var|uint64
output = func_9599(var_9600,var_9601,)
func_9602 = relay.Function([var_9600,var_9601,], output)
mutated_mod['func_9602'] = func_9602
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9628 = relay.const([[[4.620404,7.039179,-9.287401,-9.244261,7.308208,-7.632383,-0.621118,-5.035056,1.169619,-3.142598,3.999428],[6.577938,-0.275798,5.909154,-2.619782,-1.954646,0.588926,-3.744856,5.669065,0.037135,-8.383160,7.460536],[6.621264,7.150608,-6.536212,7.131240,-8.803860,-5.930524,4.209587,-8.745088,1.072988,-9.664236,1.170899],[-2.782516,8.576334,3.981274,6.071810,3.112521,3.878041,-2.856951,-2.389692,6.126410,-5.374989,-2.558338],[-7.317995,-1.458586,2.409851,-9.774448,0.216946,5.266601,9.211854,-2.374288,-1.728426,7.387549,-5.061602],[5.546678,8.308199,9.898820,-8.067901,-5.755484,2.452598,-7.339914,2.509043,0.286861,8.798309,8.373335],[3.154242,-8.909677,4.498874,7.497851,1.292280,3.331290,-8.066717,-2.994128,-0.471280,7.642576,9.022512],[-4.043105,-7.382496,7.206797,-1.010517,-0.487708,-9.910161,0.513696,-5.343648,1.111426,7.638269,4.533497],[-0.960854,7.512734,-4.229188,-1.891255,-6.281644,-1.693929,-8.823806,8.785004,-4.443834,-7.933865,-5.204629],[2.521340,4.743602,-1.281816,3.279227,-2.243669,2.047567,-7.372161,-3.361677,-8.098984,9.137800,3.440745],[-8.617240,-3.357045,6.496199,-5.662842,5.105793,-9.803286,-3.114006,4.542052,-3.478238,6.372845,2.090991]],[[7.511503,-1.177718,7.328885,-8.593301,5.569505,1.188086,-5.008308,4.704485,-3.797611,-3.608688,3.175218],[4.581159,-8.726992,-6.316787,6.532236,6.646826,4.142700,-6.040570,9.093511,0.855480,-8.582586,-5.639426],[2.659933,0.929053,-8.239948,9.410342,-7.517606,3.620400,-3.235119,3.352057,2.229701,1.210011,-6.083432],[7.288186,-9.655200,9.206994,3.413748,0.232747,3.059747,-5.305664,-9.942748,7.787733,-8.422650,3.948189],[-4.500087,1.650849,6.038768,-2.425650,-8.739035,8.097782,-6.609883,4.864279,4.972366,9.466653,0.266253],[-9.811041,3.627952,3.661402,-4.507138,-6.457640,6.732866,1.465533,-3.410430,-1.469035,9.015654,-7.131609],[-3.704942,-7.174835,-1.490222,-9.579383,2.257376,-5.508462,-1.376365,8.154470,-9.867274,5.092899,8.415369],[2.838483,-8.328265,-3.991633,2.651811,-3.831667,4.492011,4.386962,-1.223550,1.187104,5.880568,-7.497574],[4.249954,-1.742923,0.566168,7.096181,-7.057895,2.440851,1.824316,0.323917,-3.271969,-3.623904,-9.695683],[3.704469,-4.016501,-9.933546,-2.325522,2.744815,-3.390447,-7.513507,-2.989371,-7.109392,-1.324484,7.906617],[-3.293272,-2.957696,-1.896294,-0.923278,8.074556,4.878967,-7.589551,5.116861,-7.419208,2.829534,-7.603559]],[[3.111528,5.613864,-6.526862,6.835613,3.973120,-6.077661,-6.057290,5.803350,0.166053,-8.077154,-1.634317],[-7.348772,-8.478350,-6.854151,-5.192460,7.235270,7.751053,1.736422,-9.851938,-2.026750,-2.404190,5.898492],[3.216346,9.729776,9.206982,-9.726756,4.374487,1.847774,6.503626,7.875963,4.103175,2.352406,7.226347],[-0.148143,1.308724,-3.422285,2.550724,-8.324556,-8.472435,5.701918,-2.938649,5.922156,-5.488917,8.765142],[-1.032280,9.583516,0.299089,3.615671,-4.190174,-9.891925,-2.530695,9.797868,-3.328178,-3.557193,-4.493546],[5.469811,3.249328,-7.224349,7.071331,-6.243301,-5.477640,2.112013,-8.753138,-2.734570,-6.690105,5.031221],[1.303224,-6.424429,-8.894650,-8.973315,-2.424801,0.624715,-6.904040,-3.834655,0.414184,-3.118248,-4.220300],[7.982046,-0.565751,8.300354,-5.733647,4.314016,-1.248469,-3.345056,-2.776086,9.568189,-4.420746,8.366837],[-1.620459,-0.925328,-3.006583,1.335626,7.268119,5.761649,-1.553839,-8.543249,7.926024,7.521334,-3.000870],[8.222144,-6.375954,7.248688,8.288778,-0.406384,-3.487737,-7.805257,1.990299,-2.727800,-4.591486,-7.694773],[-3.563136,-2.923265,-3.662018,1.225417,1.416218,7.776467,3.540934,-7.112710,3.900695,-4.438906,8.890371]],[[-1.602171,-9.617923,0.225354,6.921546,-8.339951,4.204421,2.723166,-0.339263,-4.803850,0.436277,3.048605],[-8.173590,-8.054689,-6.083078,-8.255327,1.870590,-4.525442,8.906486,-1.708767,3.577061,-8.779275,6.635647],[-2.915160,6.176638,9.307978,4.607197,5.135322,-3.216237,3.835846,2.819899,5.996686,0.540834,-7.468918],[3.439896,9.351626,2.634684,8.477603,5.212008,-1.531599,-3.058920,-4.832495,9.695304,-8.245364,0.328420],[-0.809487,1.503058,2.489747,-7.353626,3.979782,-1.718947,-5.857419,-3.935653,7.047317,-4.991559,-1.491606],[6.136329,-4.353311,2.976690,1.044035,-6.916150,4.414739,4.747955,-8.027175,-1.650991,4.247136,-3.281735],[4.551475,-5.235372,7.250961,-0.121162,0.787038,-2.330781,-8.946866,-4.583584,-5.228876,-6.522383,-1.461148],[-7.832311,6.723103,-0.772805,5.130202,-8.914232,-4.292612,7.554339,0.733736,7.656721,-8.396375,-1.808985],[1.352672,-3.310521,-3.242233,5.660505,-2.776162,9.879927,6.764981,-1.235422,3.451268,9.420825,5.402823],[1.685868,-4.547927,-1.439621,-8.900474,-5.608966,7.688340,8.111682,5.978747,6.253156,-6.004821,7.434072],[-8.374788,-7.980601,-4.020189,4.558394,7.389715,3.715259,-1.174874,-6.508117,-8.349533,-1.585443,1.317318]],[[3.825552,7.785331,-4.717782,-6.699394,2.024032,5.506807,-8.346439,2.569089,-6.210523,-0.333442,-4.290816],[9.327421,5.220826,1.705993,4.031559,1.141740,5.615273,0.295133,-3.022664,4.156344,0.790075,8.871174],[8.404457,5.968879,1.930773,7.334124,-4.103737,-4.311183,-2.223724,-2.068871,-0.184270,1.567987,-7.676013],[0.696276,-8.492586,-1.847174,-7.076232,1.574592,-2.921891,3.809921,-8.293455,5.507823,0.630168,-7.962666],[-3.101322,2.211384,-4.873723,-6.937286,-2.060444,1.834272,1.943773,-7.543242,2.832083,4.769101,-7.405610],[-1.807776,7.505317,-8.875299,0.188861,-6.085378,1.834456,9.529277,-6.139010,-2.292634,8.924905,9.905598],[0.107601,-9.053925,8.375980,-8.012244,-6.353593,-8.643657,-7.399958,-5.626909,3.197280,5.412516,6.085780],[-8.154852,9.753073,-9.184176,-4.349078,9.970935,6.372878,1.793015,2.090253,-4.545754,-9.565883,6.242649],[8.141039,-8.227195,-2.787410,2.277441,-0.091343,-6.506382,-5.158296,4.455270,-5.722586,-1.004562,-9.722149],[0.516948,6.219939,-4.019114,-6.641967,0.625937,9.393168,2.662446,0.627272,7.954460,-0.016767,5.488426],[-0.623833,-1.585651,4.954637,-9.184414,-1.659770,2.054861,-0.669907,5.620529,1.482308,-0.451464,-5.312583]],[[6.272533,8.065571,-3.676589,-5.503113,-7.007408,-3.996762,5.833079,-5.827639,9.521464,4.924935,-2.084375],[-1.378969,3.460864,-2.427442,2.918774,5.230769,1.568504,8.797735,-4.716004,5.074006,7.549877,6.535797],[-1.011477,-0.372669,-0.277228,-4.185289,0.120515,-6.869551,2.094636,6.825020,-8.405599,7.748061,8.534223],[7.688447,-3.672065,-9.711160,-0.985234,-1.222890,4.251099,-1.397327,7.217631,3.982175,-1.137773,5.879314],[-4.532655,-9.156139,0.741417,-0.379308,-3.613666,-5.707530,4.007305,-0.907706,9.387309,-0.598192,-2.109981],[-8.532115,7.868757,-0.225528,-7.158047,6.290529,-1.781548,5.984888,4.834571,-1.690336,0.015564,-8.477429],[-2.962754,-5.305629,-4.124525,-0.911247,1.434544,-4.341982,-8.020137,-7.790886,-7.127710,-6.758504,4.594443],[-8.082483,1.221113,4.192064,4.571187,5.516525,-8.097612,7.604720,-5.617528,5.902148,2.507418,4.188103],[0.858610,-0.704652,9.954641,-2.529662,-4.804408,-5.299456,-2.718951,-7.233688,8.624189,0.257158,4.672997],[-8.101410,-8.632524,3.387173,6.695930,-3.714217,5.065294,-4.830279,5.437344,8.686563,4.456872,5.366771],[5.190758,-7.100678,-2.113298,2.587693,-7.539556,8.402297,2.258149,-6.178370,2.210782,5.129089,0.257935]],[[-6.889046,9.467736,-6.197921,7.880602,-7.433784,2.825411,6.060424,-4.619757,2.125020,6.382496,7.560231],[-0.390819,2.310102,-1.025493,-4.569944,5.058347,-1.346429,-5.074959,7.023975,1.420240,0.169601,-8.861717],[-7.986164,4.489008,-4.796405,-2.301472,1.125438,5.123971,1.805891,-7.904690,-6.791494,-3.683045,-0.014420],[0.536960,-4.729126,3.590496,-9.811334,-4.400569,-3.566570,-5.963216,-7.591403,-4.762576,1.720380,8.372485],[-5.499795,-9.804657,3.276668,4.504776,-5.631268,8.317895,4.133222,-9.583686,1.826910,-6.609236,-4.587543],[-1.246018,-7.202324,-3.924172,-3.598893,-9.111765,4.154356,1.745381,0.014753,-8.079170,-5.498051,-4.297485],[-3.824877,5.014622,4.555778,0.300375,-4.098265,4.330491,0.334083,5.485766,7.530324,-5.832835,-5.888193],[2.338662,-2.420621,0.044355,4.624830,7.860933,-1.303659,2.107389,-3.438684,6.562875,-6.378005,4.762715],[7.294179,-8.076614,-3.761726,3.514627,-4.731923,-5.992990,9.266281,2.335305,7.439352,-4.546760,4.064321],[-6.466226,3.373020,0.264181,-2.343916,1.790486,7.018312,-2.313085,-7.746615,-6.507193,-7.549000,4.287407],[1.263320,-5.924891,8.687242,-6.496569,1.202420,2.694169,6.740657,-7.176217,2.197258,0.178693,0.557924]],[[3.193178,3.984794,7.439572,-6.765493,1.900754,1.790909,1.161851,1.052608,-8.684152,-7.254653,5.519515],[-5.414575,3.479241,1.985732,-1.813783,-8.766850,-6.122975,0.315399,0.005413,-7.392977,4.069629,-2.227631],[5.428058,4.304119,-0.792465,8.746374,9.731594,-0.857128,7.476053,9.248673,-1.064694,8.020280,8.999092],[-4.905120,3.786132,-9.819115,2.605125,2.873580,-7.378488,-8.330931,-3.102413,-7.445474,6.338938,-4.442952],[-6.846847,-3.570024,3.648341,6.840717,-9.019328,0.736164,-5.506020,4.532795,-0.544032,-4.927433,1.047716],[-1.496773,-9.354403,5.042289,7.335076,0.285114,6.466986,-8.690723,7.691207,3.827575,-6.029187,5.008828],[-4.642766,-3.315689,6.656442,1.416547,1.056305,-8.273615,-2.714240,5.438021,8.608143,3.419520,-1.438083],[3.452367,4.936840,3.314592,7.863436,2.177716,0.115712,9.747707,-3.818958,1.810820,-9.412825,-7.664424],[5.575659,-3.573253,-9.308986,9.284449,3.025920,-7.599574,-1.263292,-5.715172,1.755049,8.272645,7.127928],[8.598445,-4.757830,1.444691,3.307701,3.777509,9.963597,5.040506,-4.515576,-5.162821,-1.697628,-5.050952],[1.117967,-6.328233,-6.558623,8.362072,-7.997269,-7.856739,-4.377541,0.308687,1.534889,-8.648721,-6.039508]],[[-2.062550,0.733657,9.722385,4.382392,-1.186696,-4.863061,0.657088,-3.514821,1.636413,-5.456605,4.920626],[4.544502,-1.492831,-0.465167,-4.708258,-0.926148,1.328623,8.721124,6.889461,-4.065742,8.862171,8.371454],[-1.601933,-5.700288,-1.654843,4.849756,1.615085,2.492234,2.681333,-1.923817,-5.270114,-1.643984,-1.513866],[-3.590485,-8.169575,6.555929,-0.432119,3.978766,7.979618,-8.122140,-3.025952,2.413844,-1.540763,1.720331],[-4.469128,0.089403,-7.892520,-0.771921,-0.490001,1.290664,-0.293178,-8.341858,0.279379,8.995978,2.931809],[-0.654292,5.763937,3.459359,-7.668513,2.462612,5.517830,-4.126135,-3.834216,-9.340908,5.835589,7.748567],[1.581128,-6.664296,1.320201,3.310112,0.018314,-3.563196,5.220279,6.546945,-9.832119,8.939467,9.315135],[-7.101093,-0.817917,-8.284842,-6.449771,5.136272,-6.066613,-6.232055,4.294363,-3.060025,8.130188,1.456770],[6.619807,8.985149,1.094215,8.194992,-3.783328,-7.585121,-7.111875,-7.995318,1.944087,-3.490550,-8.302896],[5.598088,-4.773972,-7.596405,7.619126,4.328181,-3.325156,-8.290413,3.966279,9.823059,5.964359,-1.200464],[-6.873206,-3.798863,1.608752,0.282591,4.031253,8.461376,4.338735,-4.891479,-8.411988,4.956969,-0.562417]],[[-2.477521,5.214777,4.398161,-3.566942,-0.659909,-1.986665,-5.980442,-4.195307,2.971099,-6.562821,1.432931],[7.988695,-7.755244,9.755326,-8.214304,-1.604044,0.701207,-6.992356,-7.170717,2.717292,-3.217883,-8.938537],[1.444931,-3.180981,-3.685036,8.615333,-2.556674,5.742995,-4.648335,-4.982870,-1.861929,-6.712332,-8.950241],[-5.346274,5.653312,-1.103753,-0.779006,-4.653618,1.832106,-4.806837,9.068881,3.604694,-3.674460,3.102547],[-5.610193,-8.735084,-1.852808,-3.864102,7.651466,3.872516,-0.684483,-4.586947,-4.113188,-2.163169,-4.192080],[-4.135453,9.817370,8.947966,-2.801746,-9.057148,2.526149,-2.324618,5.545947,-6.451640,0.283599,1.728690],[7.120963,-6.636586,-2.836405,9.955069,-4.574323,3.218127,-3.493103,0.590664,8.597202,5.650664,-6.530532],[-7.583563,-0.014252,6.718885,-9.998658,-0.509010,-0.489121,-0.509267,8.143468,3.053416,8.848787,2.758906],[-0.805686,-6.830898,7.048981,-2.061830,7.030739,3.012027,2.423835,-9.311458,-2.770894,-2.329031,8.177678],[4.522860,-2.578594,-1.775452,2.401613,0.016938,7.450328,7.259259,6.960915,-0.877944,-1.508454,2.608269],[-7.087714,-1.673849,-2.929999,-9.505818,3.094091,-6.409924,-1.578051,8.760946,3.525477,9.607269,-5.032178]],[[3.249989,-8.276050,4.007964,0.217609,7.590700,-2.644836,-8.212275,-3.421977,-3.944985,8.555151,6.425592],[-2.390644,4.078053,-9.064320,-9.930202,-3.493711,-1.084246,1.333297,1.616298,-5.257808,9.808931,-4.951211],[8.593863,-3.052715,-8.867569,3.213595,4.346156,-6.761864,7.783713,-7.193240,-0.516608,1.343380,6.057355],[-1.076164,6.930958,2.996274,8.282582,4.558806,-1.959795,-6.053482,0.280896,9.250736,3.651046,6.217709],[-5.692375,-4.614827,-2.745709,6.369024,9.071976,0.841371,5.704835,5.278131,-2.813716,5.671134,-8.339532],[-5.070769,6.869435,-9.015615,1.648482,0.381112,6.104146,-9.856269,9.152384,-8.598659,1.296423,-8.717113],[-8.057730,8.287156,-0.407634,-1.356073,7.025169,-6.626119,-4.554692,5.132274,-9.484798,0.047894,2.540087],[-2.440001,8.906709,1.578553,-0.255201,6.372445,8.822508,4.139628,-4.470503,-1.678841,-1.360206,-6.879449],[7.725780,2.156544,7.329192,-0.455650,-3.801816,1.321847,7.413813,1.394595,-3.673312,-1.069052,1.660018],[8.685636,3.868525,5.795171,-2.180757,-1.683265,-9.564056,-6.860900,-3.730399,-5.516578,5.913148,1.356387],[-6.714832,-1.577899,2.027577,-0.726216,-3.797439,-0.698845,0.600287,-6.884855,-3.770152,2.356968,-0.726951]]], dtype = "float64")#candidate|9628|(11, 11, 11)|const|float64
uop_9629 = relay.log(const_9628.astype('float64')) # shape=(11, 11, 11)
uop_9631 = relay.sigmoid(uop_9629.astype('float64')) # shape=(11, 11, 11)
uop_9634 = relay.atan(uop_9631.astype('float32')) # shape=(11, 11, 11)
func_9243_call = mod.get_global_var('func_9243')
func_9247_call = mutated_mod.get_global_var('func_9247')
const_9637 = relay.const([-7,-2,7,-6,4,1,-4,-1,-2,3,-1,-1,5,-4,-3,8,5,-1,-8,3,-8,-6,-5,-7,5,3,6,3,-7,10,4,-2,-10,1,-1,9,-1,4,-3,4,-2,4,-10,9,-5,-7,-9,-8,-3,-6,-3,6,10,-1,10,1,-2,-9,-5,2,-7,9,-10,-4,7,-9,-5,-6,4,9,1,-5,-6,-7,-3,1,8,6,8,-10,10,-7,4,-1,9,10,10,4,2,-9,10,4,1,-5,10,5,-5,-4,-6,-7,4,8,5,-2,-3,1,-10,-1,-5,-1,4,-6,8,9,-4,10,6,-6,10,-9,8,8,4,-10,-6,5,-6,-10,-10,10,-5,-6,10,3,9,-5,-9,6,2,4,6,7,-2,-6,-4,-8,9,-2,-5,7,5,10,4,-9,1,-4,5,-9,-8,9,3,3,-1,-9,9,2,-9,-10,-8,9,4,-8,-7,-6,-4,-7,4,7,6,-4,1,1,-8,-4,1,8,9,6,5,-8,-9,-5,8,8,7,1,10,1,4,-4,9,10,-10,-1,-8,-5,6,10,4,-10,-4,1,2,1,7,10,-9,-3,9,-5,5,-6,2,6,5,-6,-6,2,9,5,9,4,-8,-9,3,5,-6,10,6,1,-2,10,-6,-6,-6,-2,8,4,-3,2,9,-3,-8,-2,-8,4,1,-6,8,1,4,-10,-9,8,-7,9,10,10,4,-2,6,2,2,4,1,6,9,10,10,2,-10,3,3,-10,5,1,10,1,-1,-1,-10,-10,5,-9,-7,2,3,9,-1,5,3,-9,9,-2,-5,-3,-4,-4,-2,-1,5,6,1,6,-6,-7,-8,9,-6,-8,-8,6,3,-8,-2,-1,4,-6,5,-4,4,-10,-10,2,4,7,-8,-3,-2,3,9,2,3,8,-2,9,-6,10,1,-3,1,-6,-4,9,9,-1,-8,-4,1,-1,6,8,-10,-9,-2,6,4,-10,1,6,3,-2,10,-4,-10,3,4,10,-2,6,3,7,4,-10,9,6,-3,5,-4,6,5,-10,5,-6,8,2,4,1,-7,2,6,9,6,-5,-6,-4,4,-1,-3,7,7,-5,9,8,8,5,9,3,10,6,3,-9,6,-6,-7,2,-4,-4,4,10,-3,4,-1,-5,-9,8,-3,-8,7,7,9,-7,-6,-6,4,-2,5,6,5,6,4,-7,-3,7,-9,3,4,2,4,2,-8,-4,10,-6,3,10,-9,8,2,-1,10,10,7,-5,2,8,2,2,4,-1,-1,6,-10,2,-8,4,1,3,7,-9,-7,-8,1,-3,7,1,4,10,10,5,-6,-7,2,7,9,-10,-4,-7,8,7,-3,5,-4,3,-6,-3,7,3,1,3,-5,8,1,2,3,-7,8,6,-7,-7,9,-7,-3,8,-10,5,3,-3,-7,4,-6,10,10,-5,7,10,-5,2,9,3,-10,5,2,-8,4,-10,-10,4,6,-9,-3,-7,-7,-8,1,-8,-10,6,10,10,3,-4,-10,-5,8,-9,4,-3,9,9,-3,-10,-9,-4,8,5,-5,6,-7,-4,-4,10,-3,1,2,-9,-7,7,-5,9,6,7,-2,7,-6,8,7,10,-9,-1,10,-8,-1,5,6,3,7,-3,7,-2,-4,4,8,-1,-6,-10,4,-3,2,3,3,2,-8,-3,-7,-7,-5,2,7,-2,4,7,-9,5,2,3,-5,-7,2,-7,5,1,7,5,5,-4,9,-8,-6,4,-10,3,-4,10,10,-6,-3,7,8,-3,9,-3,1,-9,-4,-4,9,-2,6,8,9,-1,3,-10,9,-6,-1,7,10,-10,6,-3,-1], dtype = "uint64")#candidate|9637|(693,)|const|uint64
call_9636 = relay.TupleGetItem(func_9243_call(relay.reshape(const_9637.astype('uint64'), [7, 9, 11]), relay.reshape(const_9637.astype('uint64'), [7, 9, 11]), ), 1)
call_9638 = relay.TupleGetItem(func_9247_call(relay.reshape(const_9637.astype('uint64'), [7, 9, 11]), relay.reshape(const_9637.astype('uint64'), [7, 9, 11]), ), 1)
output = relay.Tuple([uop_9634,call_9636,const_9637,])
output2 = relay.Tuple([uop_9634,call_9638,const_9637,])
func_9640 = relay.Function([], output)
mod['func_9640'] = func_9640
mod = relay.transform.InferType()(mod)
mutated_mod['func_9640'] = func_9640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9640_call = mutated_mod.get_global_var('func_9640')
call_9641 = func_9640_call()
output = call_9641
func_9642 = relay.Function([], output)
mutated_mod['func_9642'] = func_9642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9640_call = mod.get_global_var('func_9640')
func_9642_call = mutated_mod.get_global_var('func_9642')
call_9649 = relay.TupleGetItem(func_9640_call(), 1)
call_9650 = relay.TupleGetItem(func_9642_call(), 1)
func_9243_call = mod.get_global_var('func_9243')
func_9247_call = mutated_mod.get_global_var('func_9247')
const_9692 = relay.const([[8,7,4,9,3,-9,2,-9,7,-8,3,-10,3,10,-6,4,4,2,-5,7,6,7,3,8,-9,4,-6,6,-2,7,3,-6,3,6,10,8,-1,-4,10,-6,-6,-4,7,-2,-8,-9,-2,-9,2,5,-1,5,-9,-8,-1,-9,-5,1,-4,-2,-4,1,-3,-1,8,-6,10,-10,-2,-7,1,2,-10,9,-8,4,2,-5,10,2,3,-4,9,1,2,-6,7,-10,-3,-1,-2,2,-4,8,5,9,-8,-1,9,-2,-2,-4,10,-6,-5,-3,-1,8,4,-9,-10,6,-1,6,-1,-1,-9,-1,-10,-2,-1,-1,-2,10,-7,-4,5,-6,9,8,-2,-10,-3,2,8,-8,10,3,-8,-7,-2,-3,-3,7,1,-9,-4,8,9,-3,-3,-6,-10,-5,4,7,-5,4,9,7,7,-5,-4,-8,-2,-2,2,7,8,2,6,-9,10,-6,-5,1,10,4,-10,8,3,-6,-7,1,-7,-7,-4,3,-10,-3,3,-8,3,-6,4,4,2,-6,-4,-4,10,5,8,8,-8,-4,6,-5,-5,1,-5,-9,-6,7,2,3,5,-7,-6,2,5,-7,9,1,3,5,6,6,-3,-2,-6,-8,-2,3,-10,-4,-2,-8,-2,-7,3,-6,10,-3,-7,-7,-9,-4,-9,-9,-4,6,3,-9,4,-4,9,-8,-2,-9,5,1,-2,4,-4,10,3,3,9,3,-9,-2,6,5,-10,-8,4,-6,-6,6,3,-7,-2,-4,-4,6,-7,10,-8,-3,3,1,1,-2,10,-5,5,-9,4,-10,4,2,4,-5,10,9,7,3,-9,-5,4,-2,-3,6,8,-8,1,2,-3,-8,-4,8,-6,1,5,-6,7,-10,1,-8,3,1,-7,1,-1,6,-5,9,5,-9,-6,-1,-5,3,-6,-6,8,-5,2,8,-3,1,9,9,1,-6,5,2,-10,-5,-8,7,10,-5,-6,-8,-5,6,10,-8,5,8,3,9,4,2,-7,-10,-9,-1,-7,-3,-9,-6,6,10,10,-9,-9,-8,2,-7,-7,6,-3,2,-8,-2,-5,4,2,1,3,7,-10,-4,-5,1,-9,9,-6,2,7,10,2,-5,9,8,-8,3,10,-10,10,8,-10,9,-9,1,5,-9,-5,-1,10,8,4,8,9,-10,9,8,6,-7,-8,-10,10,-10,-4,1,8,-4,9,10,-9,-8,-10,-8,-4,9,3,-7,-9,-8,-5,8,6,-10,5,-4,-10,-1,-9,-5,3,-4,-5,7,-5,-6,-4,8,8,5,-5,6,-3,6,-7,2,-6,4,7,-3,6,5,-6,10,-10,-7,-5,-10,1,10,-6,-6,1,4,-3,2,-8,1,-1,-8,-5,-4,8,-1,-2,7,-7,2,6,6,3,-9,7,5,-1,9,-7,-10,-8,6,-6,-10,9,-1,-6,-4,-6,-9,5,3,6,3,4,10,6,4,2,-5,5,-6,2,1,-3,3,2,-3,7,-4,1,4,2,1,1,-5,-1,-7,-10,-3,7,-10,-3,1,-1,10,9,-1,-2,-4,-10,9,-1,6,-5,2,-6,-4,5,10,8,-10,-6,7,5,2,2,9,-8,-3,-6,6,9,-3,-5,2,5,-2,5,8,3,-5,1,-8,-9,-3,-10,-8,-1,5,4,-1,1,9,-5,4,-6,2,-5,8,5,-8,2,-4,-7,-9,6,9,5,3,-4,7,8,-9,4,-6,1,-4,9,8,-6,-6,-8,2,-10,5,-2,6,-6,2,4,-8,1,2,9,8,6,10,9,-1,-6,5,-1,-7,-5,6,6,-6,6,-9,-7,-10,10,-9,1,10,-6,-5,-3,3,-1,7,5]], dtype = "uint64")#candidate|9692|(1, 693)|const|uint64
call_9691 = relay.TupleGetItem(func_9243_call(relay.reshape(const_9692.astype('uint64'), [7, 9, 11]), relay.reshape(const_9692.astype('uint64'), [7, 9, 11]), ), 0)
call_9693 = relay.TupleGetItem(func_9247_call(relay.reshape(const_9692.astype('uint64'), [7, 9, 11]), relay.reshape(const_9692.astype('uint64'), [7, 9, 11]), ), 0)
output = relay.Tuple([call_9649,call_9691,const_9692,])
output2 = relay.Tuple([call_9650,call_9693,const_9692,])
func_9701 = relay.Function([], output)
mod['func_9701'] = func_9701
mod = relay.transform.InferType()(mod)
output = func_9701()
func_9702 = relay.Function([], output)
mutated_mod['func_9702'] = func_9702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9640_call = mod.get_global_var('func_9640')
func_9642_call = mutated_mod.get_global_var('func_9642')
call_9748 = relay.TupleGetItem(func_9640_call(), 1)
call_9749 = relay.TupleGetItem(func_9642_call(), 1)
func_8829_call = mod.get_global_var('func_8829')
func_8835_call = mutated_mod.get_global_var('func_8835')
const_9756 = relay.const([True,False,True,False,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,True,True], dtype = "bool")#candidate|9756|(56,)|const|bool
const_9757 = relay.const([[False,False,True,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True,True,True,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,False,True,True,False,False,True,True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,False,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,True,True,False,False,False,True],[True,True,True,True,True,False,True,True,False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,True,True,False,True,False,False,False,False,False,False,True,False,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,True,True,False,False,False,True]], dtype = "bool")#candidate|9757|(2, 336)|const|bool
var_9758 = relay.var("var_9758", dtype = "uint64", shape = (700,))#candidate|9758|(700,)|var|uint64
const_9759 = relay.const([[7.455831],[-6.610051],[2.037687],[-3.404223],[-2.924758],[-9.300046],[7.782072],[5.660238],[9.599325],[9.203478],[-1.254947],[-8.716737],[7.858388],[0.770857],[-6.045698],[-9.670546],[7.518187],[8.097531],[7.141587],[-1.302057],[-0.018138],[-7.930036],[-2.729960],[-2.370012],[4.209955],[2.873117],[-5.176324],[1.059817],[4.866119],[9.657763],[-5.723241],[-6.069019],[-8.139576],[9.486534],[1.153157],[7.175930],[-1.827342],[4.622950],[0.833332],[-7.733448],[4.904197],[8.455647],[2.648589],[7.969913],[7.281968],[-7.324359],[-1.852899],[9.912872],[-4.935675],[-4.670886],[-5.756237],[-0.330365],[-2.682810],[-5.055315],[4.015540],[-2.047691],[-2.079560],[-7.985569],[-6.137651],[0.834664],[-5.890214],[-8.061663],[-5.345405],[-7.591070],[-1.147667],[-9.063728],[-6.345236],[3.595973],[-9.480884],[3.474006],[-3.502771],[-4.795288],[5.468716],[7.440868],[0.688462],[3.273289],[-1.397125],[-6.150429],[7.498440],[-2.583347],[-0.428890],[1.041750],[4.170047],[5.899589],[-2.290548],[2.187472],[-8.578100],[5.425602],[5.181459],[7.056963],[8.719126],[-6.273179],[-7.742856],[-7.543194],[1.665971],[9.197440],[6.579998],[8.553545],[5.657201],[-4.840392],[5.613195],[4.097424],[-0.193122],[8.148572],[3.417488],[-3.837876],[3.493441],[-8.519554],[2.593082],[7.083067],[6.188580],[-6.204409],[2.463906],[9.163339],[-3.215364],[-8.623278],[-5.177101],[3.900861],[2.321933],[-5.683900],[-6.918281],[1.875164],[8.012829],[4.063620],[4.733361],[-7.565040],[-4.801648],[2.057664],[-3.686669],[-1.098059],[5.940919],[-8.983226],[-3.715799],[-3.994041],[-1.034352],[-4.616710],[6.075454],[-5.651183],[-0.187438],[9.561980],[-3.051145],[-9.828637],[8.975264],[8.909069],[8.915934],[-0.595762],[-2.710657],[-3.986129],[5.293121],[-5.036763],[9.591957],[-8.805718],[7.920720],[7.450216],[-8.880824],[3.967320],[-8.765650],[1.141624],[9.137171],[1.281332],[6.805085],[0.865681],[-3.678020],[-1.994535],[-6.940871],[6.747297],[-0.910485],[-3.407885],[-9.333205],[6.564503],[9.340650],[-1.341519],[-3.747432],[6.435497],[-4.684974],[-4.570846],[-4.780901],[4.640267],[4.764335],[-5.755125],[1.690187],[2.079905],[7.055553],[4.127607],[-2.077617],[5.560941],[7.892235],[6.546255],[5.475474],[1.398869],[-2.714693],[7.884119],[-9.245266],[5.328356],[1.772095],[6.562417],[-0.119186],[-0.052831],[2.969420],[3.332311],[-7.993257],[4.125109],[-2.365384],[1.625510],[8.332405],[2.305244],[2.720408],[-2.660328],[-8.433209],[6.125258],[-2.201588],[-5.925214],[-8.923565],[-7.357479],[-6.187941],[3.716451],[-0.980779],[-7.863462],[3.014891],[1.079883],[-1.685553],[-0.947677],[8.531155],[8.384344],[5.862385],[9.062316],[-5.216501],[-6.231815],[-4.595567],[-6.425511],[-3.455596],[3.604590],[-2.177363],[-9.909988],[-1.209508],[-9.497991],[-9.238391],[-7.264936],[1.815009],[8.911287],[-0.563728],[-9.891764],[-0.501601],[2.713089],[-4.936876],[4.104626],[3.159124],[3.376678],[-7.455846],[-7.005174],[2.105543],[-4.977174],[2.337495],[-3.525388],[-6.828492],[1.261176],[-4.942549],[9.449122],[-4.961802],[-4.926676],[-6.293609],[-4.180967],[-9.515522],[7.151610],[4.032689],[6.390866],[-6.088319],[-7.874403],[-5.010945],[3.431885],[4.258961],[-7.194337],[-9.306543],[-2.289388],[-3.522387],[7.016307],[1.943521],[1.278354],[-5.878214],[-4.047811],[-0.710970],[-6.529534],[5.505394],[-2.966029],[4.333618],[1.598401],[1.819438],[1.923836],[4.554758],[-6.825424],[-5.490948],[0.521018],[6.398612],[0.737105],[1.960320],[4.661595],[-9.750469],[5.608128],[8.371836],[1.283178],[3.607828],[4.995793],[-0.014602],[-4.236492],[-3.970260],[-9.691393],[2.870833],[-7.067562],[-8.566175],[-4.398879],[-6.897915],[3.422050],[8.272605],[-3.886635],[-3.843593],[-7.962752],[-3.337502],[-4.505649],[-7.455631],[1.763607],[-7.353846],[5.163945],[7.173280],[-4.516778],[0.676349],[4.865690],[9.824294],[-8.849363],[7.324272],[3.199655],[1.605107],[7.258649],[8.565725],[-2.893731],[3.118152],[-6.455857],[8.457977],[3.190970],[-0.982945],[-7.655375],[-8.241574],[9.117237],[-2.830325],[-7.752749],[-8.855215],[-4.692897],[1.222853],[-2.796886],[6.829195],[-3.290473],[-9.698212],[-6.740238],[-2.524909],[-5.603893],[-7.228512],[5.018943],[-1.444357],[-1.955023],[-1.640225],[5.519364],[-8.733028],[-4.897156],[6.214793],[-5.837277],[-5.962118],[0.258105],[6.980509],[-8.310563],[7.689802],[-1.265159],[-6.281212],[-4.519462],[-6.748304],[2.740263],[-6.671869],[-4.271502],[-1.524492],[-4.285976],[9.046174],[0.980639],[-8.888736],[-6.966777],[-5.293094],[4.425950],[4.591640],[6.937468],[7.254133],[-9.614551],[-7.016079],[1.601552],[-8.758021],[9.168652],[-7.305359],[9.987282],[-7.453233],[4.563834],[8.058858],[6.086393],[7.797000],[-7.066239],[-5.025834],[-7.556593],[9.303716],[-2.932839],[-1.000709],[-8.867265],[5.961221],[-8.687408],[-5.910689],[2.307686],[-9.696906],[4.232291],[-9.918112],[3.857802],[0.797048],[-1.496219],[-2.702395],[-1.163534],[7.847180],[7.771136],[-3.786342],[1.254871],[-3.728011],[6.215827],[0.265082],[3.124385],[-9.693118],[7.277573],[6.843357],[-0.081717],[-9.801588],[8.720674],[0.760520],[7.388991],[-3.298789],[-9.691243],[-2.416856],[-7.186191],[5.898581],[3.755218],[-1.853659],[-9.473942],[7.603763],[4.991825],[1.602330],[-0.478756],[-3.756663],[-2.738868],[2.247075],[-9.049963],[-8.290296],[-2.333412],[-8.220585],[7.858174],[-0.734608],[-5.181981],[-8.776653],[4.695255],[9.766156],[-9.982470],[-3.202040],[-7.828034],[-8.946047],[-4.043433],[-8.482645],[2.327701],[-7.600810],[-2.614007],[-0.433021],[-3.474713],[-8.209121],[2.282257],[-2.028809],[3.420489],[5.743478],[-6.803280],[-3.995112],[-1.485358],[0.361488],[-7.670681],[-9.036521],[-6.341500],[9.839990],[5.394517],[1.862918],[-6.452581],[6.717298],[-7.990812],[2.563327],[9.722900],[6.384155],[-0.783247],[-2.091590],[0.694731],[-5.867284],[-3.319214],[7.553483],[9.263844],[9.866614],[0.678268],[-8.928573],[-4.866422],[4.065363],[5.677615],[-5.257186],[-1.991763],[-8.965596],[8.645637],[5.104479],[-9.650262],[-8.624530],[-7.256115],[-1.238928],[-8.375051],[0.874851],[-0.719047],[-4.468882],[6.382919],[2.645833],[-1.903632],[9.059419],[6.764079],[9.924598],[-9.993785],[2.460324],[-5.717134],[5.447757],[-6.594098],[-0.244390],[1.037142],[-0.252055],[-3.141986],[1.626578],[-3.255221],[-8.566530],[-1.508509],[6.920569],[-9.184929],[2.312177],[-3.960915],[9.661571],[-5.356014],[3.916410],[-0.939982],[-7.754356],[4.830042],[8.446141],[4.041456],[0.404985],[4.085611],[-7.792861],[3.348712],[-5.573598],[-9.226862],[8.798754],[-0.362898],[-7.177572],[5.479491],[8.734289],[7.609491],[-7.652988],[-9.757033],[-5.920199],[-1.469929],[-7.355080],[-5.046142],[2.346379],[-6.180251],[8.969872],[1.689968],[6.569451],[6.399063],[9.916479],[-1.488950],[5.927738],[-7.619165],[-4.274528],[4.388831],[-2.075439],[6.898030],[-9.711955],[0.464348],[7.376203],[0.369139],[-4.171114],[1.092188],[-4.724227],[7.060836],[-5.619558],[6.578200],[-8.712171],[1.406282],[-2.550464],[5.849208],[-7.060849],[2.393297],[-6.509710],[-5.440481],[7.222394],[-7.427384],[1.090072],[8.004272],[6.537269],[6.275373],[-1.673629]], dtype = "float32")#candidate|9759|(605, 1)|const|float32
call_9755 = relay.TupleGetItem(func_8829_call(relay.reshape(const_9756.astype('bool'), [1, 7, 8]), relay.reshape(const_9757.astype('bool'), [12, 7, 8]), relay.reshape(var_9758.astype('uint64'), [700,]), relay.reshape(const_9759.astype('float32'), [605,]), relay.reshape(call_9748.astype('uint8'), [140,]), ), 4)
call_9760 = relay.TupleGetItem(func_8835_call(relay.reshape(const_9756.astype('bool'), [1, 7, 8]), relay.reshape(const_9757.astype('bool'), [12, 7, 8]), relay.reshape(var_9758.astype('uint64'), [700,]), relay.reshape(const_9759.astype('float32'), [605,]), relay.reshape(call_9748.astype('uint8'), [140,]), ), 4)
bop_9779 = relay.minimum(var_9758.astype('uint64'), const_9759.astype('uint64')) # shape=(605, 700)
func_4755_call = mod.get_global_var('func_4755')
func_4758_call = mutated_mod.get_global_var('func_4758')
call_9783 = relay.TupleGetItem(func_4755_call(relay.reshape(var_9758.astype('uint64'), [10, 5, 14]), relay.reshape(const_9759.astype('float32'), [11, 55]), ), 1)
call_9784 = relay.TupleGetItem(func_4758_call(relay.reshape(var_9758.astype('uint64'), [10, 5, 14]), relay.reshape(const_9759.astype('float32'), [11, 55]), ), 1)
uop_9789 = relay.sqrt(call_9755.astype('float64')) # shape=(5, 4, 7)
uop_9791 = relay.sqrt(call_9760.astype('float64')) # shape=(5, 4, 7)
func_5816_call = mod.get_global_var('func_5816')
func_5818_call = mutated_mod.get_global_var('func_5818')
var_9793 = relay.var("var_9793", dtype = "float64", shape = (25,))#candidate|9793|(25,)|var|float64
call_9792 = relay.TupleGetItem(func_5816_call(relay.reshape(var_9793.astype('float64'), [5, 1, 5])), 0)
call_9794 = relay.TupleGetItem(func_5818_call(relay.reshape(var_9793.astype('float64'), [5, 1, 5])), 0)
func_2703_call = mod.get_global_var('func_2703')
func_2707_call = mutated_mod.get_global_var('func_2707')
const_9805 = relay.const([0.493889,-6.816772,9.008725,-8.925143,-2.441710,-4.905928,-5.464192,-6.472127,-3.639198,2.045717,-6.183520,-5.194614,-7.556886,-8.041636,5.568457,-9.607022,9.690922,-8.420314,-1.477378,-6.761067,8.256541,1.756258,1.162645,-1.235854,9.358212,-7.699257,-9.628377,-1.022012,4.851271,-6.250133,-0.043186,-8.276539,3.890620,-9.474199,0.746719,-2.893286,-6.627054,-5.850837,2.245221,1.744062,-9.165078,-4.707503,1.472634,4.696104,4.992826,9.393834,-1.922965,2.304526,9.692701,-3.603550,4.795519,6.877298,-1.571971,7.352877,-8.199453,-4.268096,9.767996,2.097716,6.957583,3.401065,-1.457673,1.859029,-9.049709,-5.589945,-1.389990,-7.974641], dtype = "float32")#candidate|9805|(66,)|const|float32
const_9806 = relay.const([2.997570,-9.875498,-3.867538,9.858985,3.471186,-0.088920,1.555649,-0.999819,-1.147272,7.128456,-1.579842,-4.086590,-6.340748,-5.797369,-5.304155,3.331705,9.941788,-2.688593,-5.298161,7.145036,-5.607237,6.561918,6.900996,-5.937469,9.856988,6.444084,2.620888,-8.449804,-2.127646,-5.827210,2.471845,1.103088,9.246583,-0.448548,1.941528,2.974642,7.187009,7.144864,-9.033543,-6.291113,0.109404,-5.815157,-3.945606,-4.455784,3.041713,7.948497,-4.497183,3.968279,-3.046800,-6.916745,3.750973,-5.101418,-7.630169,-3.566545,9.715109,-4.985750,-0.611354,3.567532,0.440689,3.249192,-5.779825,5.213158,0.383956,-2.674899,-8.755664,4.151067,2.566977,-5.836428,-6.330359,-2.587359,-9.793975,-9.217731,3.187068,6.400265,-7.094555,-8.501102,4.217693,4.879933,-3.103197,5.042499,-2.902421,8.051801,-8.743577,3.153926,-7.372205,-3.187963,-4.259406,9.148217,-9.436632,0.444945,0.042275,-4.778388,0.953651,-1.072656,3.585022,3.160262,-0.020495,0.869178,-8.821259,6.806695,5.659690,1.664261,7.165010,4.503805,3.952175,-1.044988,-4.971955,-9.602419,-0.740965,-3.714038,-5.612359,-1.653250,-4.724497,9.328877,-2.248621,8.667379,-8.080760,-7.167634,0.871720,4.365837,-7.312740,8.416290,-7.718708,-7.713238,-0.038220,2.142465,-5.558886,-6.258802,8.084149,-0.468460,-8.740276,5.322045,-8.915449,-5.153105,-1.203969,4.278802,2.317929,7.692354,-3.534146,2.255776,-0.402419,1.271270,-9.530292,3.420866,1.744561,3.174225,9.420056,-5.569271,-8.341518,8.036212,-0.822482,3.016348,-1.836426,-0.279233,2.178903,6.096555,-2.130759,-5.487184,-1.200264,-7.518981,2.624555,-9.293397,2.903094,6.166693,4.573099,-5.370653,9.847866,-6.304426,-2.473635,-2.851804,-7.662896,-1.856757,-3.760657,8.632848,-1.983048,-0.671456,1.943085,2.307225,0.470644,8.791863,4.038035,-6.755674,9.932207,-6.617671,2.727617,7.063334,7.861747,-2.950138,6.346419,-0.149380,-4.755154,7.003960,0.206502,-7.926772,9.726116,-6.400456,1.802808,8.766718,6.074007,-7.529419,-1.198288,-6.072254,6.440281,5.710581,-0.615766,7.135426,-3.893852,-0.707960,4.661419,-7.933091,-8.099130,7.503395,-7.683603,0.080025,5.200922,-8.153653,9.410260,2.612029,-7.196334,9.090787,-8.169066,5.060792,-8.435776,2.462628,-6.392835,-4.112949,-1.615336,-6.432074,6.590156,-7.577017,2.160200,-0.712270,1.403975,-3.055947,5.587664,-9.015055,-4.325708,-8.026927,2.370849,-2.117962,-5.281934,8.016616,-5.501105,5.651594,2.136397,-3.455714,-7.094990,7.966802,-9.696243,8.366690,-2.961372,-6.876134,6.013199,5.664174,-7.108867,-5.644438,-0.838246,1.820939,3.264910,-4.497700,-9.613580,-9.937997,-8.216828,-3.511943,5.072504,-6.273718,1.991874,-1.882674,7.322509,1.997050,2.812129,-2.695801,3.561841,-4.658184,-1.317945,7.942491,-7.906130,-7.507798,-9.446850,8.525024,-6.216321,2.964751,-9.402893,5.423051,8.294573,7.749440,-3.236553,-4.091874,7.063185,3.122609,-6.601850,-6.647555,-9.073458,4.877191,9.091672,-6.094603,-7.991263,7.645574,3.313894,-1.140496,-7.585888,6.274682,-3.260312,-8.669870,-6.626058,0.674532,7.507261,2.694589,-5.617961,-9.684536,-8.050838,-5.596852,-8.651767,3.021880,-0.579636,-9.476202,-8.074806,4.095180,5.567816,-9.123673,8.269084,-3.499545,-1.111216,-5.933307,-1.226842,-6.757945,1.448190,0.229163,9.132089,3.177926], dtype = "float32")#candidate|9806|(330,)|const|float32
call_9804 = relay.TupleGetItem(func_2703_call(relay.reshape(const_9805.astype('float32'), [6, 11, 1]), relay.reshape(const_9806.astype('float32'), [6, 11, 5]), ), 2)
call_9807 = relay.TupleGetItem(func_2707_call(relay.reshape(const_9805.astype('float32'), [6, 11, 1]), relay.reshape(const_9806.astype('float32'), [6, 11, 5]), ), 2)
func_4733_call = mod.get_global_var('func_4733')
func_4736_call = mutated_mod.get_global_var('func_4736')
var_9812 = relay.var("var_9812", dtype = "int8", shape = ())#candidate|9812|()|var|int8
call_9811 = relay.TupleGetItem(func_4733_call(relay.reshape(var_9812.astype('int8'), []), relay.reshape(call_9804.astype('int8'), [210,]), ), 3)
call_9813 = relay.TupleGetItem(func_4736_call(relay.reshape(var_9812.astype('int8'), []), relay.reshape(call_9804.astype('int8'), [210,]), ), 3)
func_4755_call = mod.get_global_var('func_4755')
func_4758_call = mutated_mod.get_global_var('func_4758')
call_9816 = relay.TupleGetItem(func_4755_call(relay.reshape(var_9758.astype('uint64'), [10, 5, 14]), relay.reshape(const_9759.astype('float32'), [11, 55]), ), 1)
call_9817 = relay.TupleGetItem(func_4758_call(relay.reshape(var_9758.astype('uint64'), [10, 5, 14]), relay.reshape(const_9759.astype('float32'), [11, 55]), ), 1)
bop_9821 = relay.add(uop_9789.astype('int16'), var_9812.astype('int16')) # shape=(5, 4, 7)
bop_9824 = relay.add(uop_9791.astype('int16'), var_9812.astype('int16')) # shape=(5, 4, 7)
output = relay.Tuple([call_9748,const_9756,const_9757,bop_9779,call_9783,call_9792,var_9793,call_9804,const_9805,const_9806,call_9811,call_9816,bop_9821,])
output2 = relay.Tuple([call_9749,const_9756,const_9757,bop_9779,call_9784,call_9794,var_9793,call_9807,const_9805,const_9806,call_9813,call_9817,bop_9824,])
func_9835 = relay.Function([var_9758,var_9793,var_9812,], output)
mod['func_9835'] = func_9835
mod = relay.transform.InferType()(mod)
var_9836 = relay.var("var_9836", dtype = "uint64", shape = (700,))#candidate|9836|(700,)|var|uint64
var_9837 = relay.var("var_9837", dtype = "float64", shape = (25,))#candidate|9837|(25,)|var|float64
var_9838 = relay.var("var_9838", dtype = "int8", shape = ())#candidate|9838|()|var|int8
output = func_9835(var_9836,var_9837,var_9838,)
func_9839 = relay.Function([var_9836,var_9837,var_9838,], output)
mutated_mod['func_9839'] = func_9839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_9854 = relay.TupleGetItem(func_9701_call(), 0)
call_9855 = relay.TupleGetItem(func_9702_call(), 0)
func_7733_call = mod.get_global_var('func_7733')
func_7738_call = mutated_mod.get_global_var('func_7738')
var_9857 = relay.var("var_9857", dtype = "int32", shape = (1680,))#candidate|9857|(1680,)|var|int32
const_9858 = relay.const(-9, dtype = "int8")#candidate|9858|()|const|int8
var_9859 = relay.var("var_9859", dtype = "bool", shape = (3360,))#candidate|9859|(3360,)|var|bool
call_9856 = relay.TupleGetItem(func_7733_call(relay.reshape(var_9857.astype('int32'), [8, 15, 14]), relay.reshape(var_9857.astype('int32'), [8, 15, 14]), relay.reshape(const_9858.astype('int8'), []), relay.reshape(var_9859.astype('bool'), [15, 16, 14]), ), 2)
call_9860 = relay.TupleGetItem(func_7738_call(relay.reshape(var_9857.astype('int32'), [8, 15, 14]), relay.reshape(var_9857.astype('int32'), [8, 15, 14]), relay.reshape(const_9858.astype('int8'), []), relay.reshape(var_9859.astype('bool'), [15, 16, 14]), ), 2)
output = relay.Tuple([call_9854,call_9856,var_9857,const_9858,var_9859,])
output2 = relay.Tuple([call_9855,call_9860,var_9857,const_9858,var_9859,])
func_9861 = relay.Function([var_9857,var_9859,], output)
mod['func_9861'] = func_9861
mod = relay.transform.InferType()(mod)
mutated_mod['func_9861'] = func_9861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9861_call = mutated_mod.get_global_var('func_9861')
var_9863 = relay.var("var_9863", dtype = "int32", shape = (1680,))#candidate|9863|(1680,)|var|int32
var_9864 = relay.var("var_9864", dtype = "bool", shape = (3360,))#candidate|9864|(3360,)|var|bool
call_9862 = func_9861_call(var_9863,var_9864,)
output = call_9862
func_9865 = relay.Function([var_9863,var_9864,], output)
mutated_mod['func_9865'] = func_9865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9640_call = mod.get_global_var('func_9640')
func_9642_call = mutated_mod.get_global_var('func_9642')
call_9896 = relay.TupleGetItem(func_9640_call(), 2)
call_9897 = relay.TupleGetItem(func_9642_call(), 2)
func_8788_call = mod.get_global_var('func_8788')
func_8792_call = mutated_mod.get_global_var('func_8792')
const_9909 = relay.const([-8,9,2,2,3,-9,8,9,6,-7,-5,3,5,-2,-8,-6,-9,2,4,9,2,10,-5,-4,-7,5,-3,3,-8,-7,-10,-3,-8,2,1,-3,-9,-4,4,-5,-8,-4,9,-3,10,5,2,1,-5,6,-4,10,2,10,-2,8,5,5,7,5,7,-9,2,-1,-3,-4,5,-2,7,-2,5,3,2,-8,-5,10,4,10,-9,4,9,-9,-1,-1,1,1,5,-9,-3,8,9,9,7,-1,4,8,-1,-6,-8,-5,10,6,-10,-2,2,-3,8,-6,3,1,3,1,-4,8,-3,10,9,-1,-1,-5,3,-5,10,-5,-9,10,-4,7,9,-2,8,-10,-10,-9,-3,5,2,6,1,5,-8,3,-8,-1,-4,1,-7,-3,9,-9,8,-8,-3,-10,-6,4,2,5,8,6,1,7,8,4,-4,10,4,-10,-2,1,7,-3,5,-8,-4,-6,-4,2,3,-9,-8,6,-7,-10,9,9,9,5,-10,8,9,-2,4,-5,9,-3,5,2,8,-2,-3,4,-5,-7,-2,-2,8,-4,-7,1,-4,-4,4,10,-7,-10,5,6,3,-6,10,-7,-3,3,1,5,-8,2,-6,5,-5,8,1,2,7,10,-8,-8,-10,-1,4,-6,-7,-4,3,8,6,-9,-10,-2,1,-6,9,-1,4,-9,10,-1,-6,-1,8,-8,-5,-3,10,-2,5,1,2,4,4,4,-1,-10,-2,7,-10,4,3,-2,3,3,2,4,6,9,1,5,-10,2,-7,4,5,-5,-7,9,-1,-8,6,8,-7,-1,2,-4,-10,6,7,-7,10,-1,8,-5,-2,-5,-2,-10,2,9,7,8,-2,-7,4,1,5,-9,2,4,-6,4,-4,8,6,-1,3,-2,-4,3,-2,-10,-6,2,4,4,6,7,-2,7,-4,-3,-8,1,-8,7,-9,-9,-9,-3,-8,2,-6,-6,-6,8,-1,-7,8,10,2,-5,6,6,-4,10,-7,-6,3,-1,6,1,10,8,-7,3,-6,10,4,-1,4,-10,4,-2,-7,8,-2,-3,-10,-2,9,-6,-6,9,2,-6,-1,-7,-2,2,2,5,2,6,-8,10,-4,2,-5,-9,3,3,-4,7,-9,-7,10,7,-1,5,-1,-7,-1,6,2,-5,1,-6,-10,2,3,-2,-3,-6,-4,-6,-6,-2,1,-5,3,7,9,8,-10,9,-10,-8,-2,9,-7,-2,7,-2,-2,-5,-8,-9,-8,4,-9,-3,8,6,-6,-5,-10,-8,1,-9,-6,9,7,-10,-7,4,9,-7,-7,-6,-7,-7,-10,-6,-4,5,9,5,4,-10,-10,-8,-2,-6,9,-3,7,-5,-5,-1,8,-1,1,-3,-9,-5,9,-8,8,9,9,4,-4,-4,-2,1,2,6,-8,-6,4,-6,5,-6,-9,10,9,-4,3,-3,3,-4,6,8,-1,-10,8,-9,-1,5,2,-10,7,3,1,4,1,-1,-6,-2,-3,-3,10,3,-7,-3,-2,-9,8,9,-9,5,1,-1,-5,3,5,9,7,9,10,2,-7,-3,2,-4,6,-5,7,3,6,2,-3,-9,4,-4,-9,6,-7,1,-2,-10,-4,5,-10,-5,-4,10,-7,8,4,-6,8,1,3,-5,-4,-5,-10,4,-9,-6,4,-10,4,4,10,5,2,-3,5,-3,-3,-9,-9,2,-10,8,-6,-8,-6,10,-10,4,-8,-10,5,2,-2,-10,4,6,2,-1,-4,-9,-9,8,6,5,1,7,-9,-3,-1,-1,-6,-2,-2,-9,2,-1,-8,4,5,8,-5,1,5,4,-10,3,-3,-6,-8,3,4,-2,-5,8,6,-5,2,-2,3,-3,2,-10,-2,9,-3,1,8,-10,2,4,-4,8,6,-3,7,-3,3,-1,2,-9,2,-2,5,-5,2,6,8,-1,3,5,-1,8,-2,3,1,-8,-1,-5,-4,5,10,3,-7,-2,10,10,-6,7,1,1,-9,-7,9,9,4,1,-7,-2,1,-5,-3,-2,7,-4,-9,-2,-4,-1,3,-6,5,-1,-2,-1,10,3,2,10,-7,10,1,-8,-1,8,10,10,-3,-2,-7,9,-8,1,-10,-3,-7,-4,-5,5,-3,1,-9,1,-4,-1,7,-8,-2,8,10,-8,-4,-9,-7,8,-9,3,10,2,-10,-6,-2,-3,3,-6,-3,-4,-9,8,7,-5,-5,-4,4,-10,8,-1,-2,5,-4,-10,7,3,-5,3,-9,8,-7,-8,8,-3,-5,7,7,-3,-2,9,7,7,-5,5,9,7,-6,4,4,-8,-2,-6,-8,-1,6,-2,-3,6,-9,1,4,3,2,4,5,-5,-9,-7,4,7,-9,2,8,-10,-8,-5,1,-2,5,9,10,-8,-6,3,-4,-7,-9,-5,-6,-4,-7,9,-8,9,9,-5,1,-5,8,-7,10,5,3,-6,4,5,10,-9,7,2,-7,4,-8,-7,8,-1,7,8,6,1,4,1,-10,-2,10,2,9,-5,4,5,3,-10,2,2,-4,9,-7,-3,1,-3,-7,6,10,5,3,-5,8,1,-5,-9,4,-8,8,-9,7,10,8,4,-9,-1,10,3,1,-7,4,5,4,10,-5,1,-4,9,-10,9,1,6,-6,-9,-2,1,-4,8,10,-2,-9,-8,-5,-5,2,-6,4,6,10,4,4,10,2,10,5,8,4,-7,4,5,5,-1,-3,10,-4,3,-2,8,10,7,-9,-9,2,3,7,-4,-9,-3,3,6,-8,7,-4,5,2,-9,-8,3,2,3,-6,-2,-3,-9,-8,4,-6,7,4,3,-5,-9,9,-10,10,10,2,2,9,-10,8,5,2,3,-6,-6,-9,2,8,8,-5,5,4,-3,-1,-2], dtype = "uint16")#candidate|9909|(1080,)|const|uint16
var_9910 = relay.var("var_9910", dtype = "uint8", shape = (140,))#candidate|9910|(140,)|var|uint8
call_9908 = relay.TupleGetItem(func_8788_call(relay.reshape(const_9909.astype('uint16'), [9, 15, 8]), relay.reshape(const_9909.astype('uint16'), [9, 15, 8]), relay.reshape(var_9910.astype('uint8'), [140,]), ), 0)
call_9911 = relay.TupleGetItem(func_8792_call(relay.reshape(const_9909.astype('uint16'), [9, 15, 8]), relay.reshape(const_9909.astype('uint16'), [9, 15, 8]), relay.reshape(var_9910.astype('uint8'), [140,]), ), 0)
func_9190_call = mod.get_global_var('func_9190')
func_9193_call = mutated_mod.get_global_var('func_9193')
const_9935 = relay.const([-8.938493,0.870632,6.601711,2.815914,-9.701357,-0.919689,3.628128,6.733548,8.660467,-1.541280,-1.564977,0.529360,5.726328,5.854551,-0.180110,0.016067,-9.452725,1.416898,9.652877,-0.319844,-2.456158,7.335425,2.553892,0.967988,-3.373027,-8.605794,8.989403,2.039398,8.606303,1.423617,-2.613777,-8.374776,2.940817,-4.967428,3.539355,-2.692197,2.746227,9.634361,-3.702780,0.833399,-1.136127,4.555502,1.845235,-8.248896,3.354194,8.911670,3.058776,6.541296,5.646458,7.046675,-9.864150,6.097230,-1.125812,-7.654758,9.481787,1.380140,-1.803679,0.215994,-1.005933,-2.008967,8.620975,6.617425,-1.714347,9.674735,-1.936149,-2.861669,-5.111553,-0.685737,-4.527063,3.667471,6.207304,6.373870,0.559942,7.763641,3.264044,1.782365,2.813904,9.810898,0.702003,-4.213235,0.889523,6.692789,-1.820075,-6.562292,-1.394660,-9.971493,5.577722,8.797577,-5.280572,-2.692777,7.654661,-4.033987,-8.439052,-7.535941,-1.300908,1.697276,0.973233,5.839958,-7.065397,-2.661107,7.997903,-8.681575,-6.927275,7.249617,1.363270,-1.175103,5.008682,7.170717,-9.493681,-8.179383,-1.942784,8.181757,-4.037526,3.303954,-2.881529,5.893823,-3.969388,-1.724275,-5.249714,6.642081,2.010418,-3.524082,-3.814273,-6.247857,9.301335,1.643165,-0.805356,8.499165,1.586183,-8.689211,-2.639942,2.131571,3.586121,9.325198,5.125084,1.491833,3.480615,-1.265800,-3.481054,-4.633595,9.980845,2.138941,-8.591488,-0.564674], dtype = "float64")#candidate|9935|(144,)|const|float64
call_9934 = relay.TupleGetItem(func_9190_call(relay.reshape(const_9935.astype('float64'), [16, 9, 1])), 1)
call_9936 = relay.TupleGetItem(func_9193_call(relay.reshape(const_9935.astype('float64'), [16, 9, 1])), 1)
func_2703_call = mod.get_global_var('func_2703')
func_2707_call = mutated_mod.get_global_var('func_2707')
const_9944 = relay.const([-2.065918,3.986027,1.918474,8.314522,8.958604,6.982538,-3.232247,-6.755852,-7.892057,-7.217496,-5.857410,-8.036240,0.620755,-6.881795,-6.851049,-0.502577,9.191432,-8.071890,-4.893170,-3.036653,-6.318404,5.125955,8.595266,6.549102,9.753817,5.924892,-2.451042,6.668592,-1.958541,-7.455451,-3.008655,8.502898,-9.935693,-1.563776,-4.547862,-2.520713,8.723774,9.711367,-3.553987,-2.139240,-9.233174,4.105830,7.475826,-6.931611,-0.579884,-9.179404,3.930573,4.132759,-5.985977,7.208328,-6.767424,4.427117,0.997302,-6.988088,6.888607,4.372850,-3.275697,-9.490679,-0.695320,8.704621,5.489900,5.460865,-4.379230,1.956620,3.884755,7.076197], dtype = "float32")#candidate|9944|(66,)|const|float32
var_9945 = relay.var("var_9945", dtype = "float32", shape = (330,))#candidate|9945|(330,)|var|float32
call_9943 = relay.TupleGetItem(func_2703_call(relay.reshape(const_9944.astype('float32'), [6, 11, 1]), relay.reshape(var_9945.astype('float32'), [6, 11, 5]), ), 2)
call_9946 = relay.TupleGetItem(func_2707_call(relay.reshape(const_9944.astype('float32'), [6, 11, 1]), relay.reshape(var_9945.astype('float32'), [6, 11, 5]), ), 2)
output = relay.Tuple([call_9896,call_9908,const_9909,var_9910,call_9934,const_9935,call_9943,const_9944,var_9945,])
output2 = relay.Tuple([call_9897,call_9911,const_9909,var_9910,call_9936,const_9935,call_9946,const_9944,var_9945,])
func_9963 = relay.Function([var_9910,var_9945,], output)
mod['func_9963'] = func_9963
mod = relay.transform.InferType()(mod)
var_9964 = relay.var("var_9964", dtype = "uint8", shape = (140,))#candidate|9964|(140,)|var|uint8
var_9965 = relay.var("var_9965", dtype = "float32", shape = (330,))#candidate|9965|(330,)|var|float32
output = func_9963(var_9964,var_9965,)
func_9966 = relay.Function([var_9964,var_9965,], output)
mutated_mod['func_9966'] = func_9966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9640_call = mod.get_global_var('func_9640')
func_9642_call = mutated_mod.get_global_var('func_9642')
call_10086 = relay.TupleGetItem(func_9640_call(), 1)
call_10087 = relay.TupleGetItem(func_9642_call(), 1)
output = call_10086
output2 = call_10087
func_10095 = relay.Function([], output)
mod['func_10095'] = func_10095
mod = relay.transform.InferType()(mod)
output = func_10095()
func_10096 = relay.Function([], output)
mutated_mod['func_10096'] = func_10096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_10248 = relay.TupleGetItem(func_9701_call(), 1)
call_10249 = relay.TupleGetItem(func_9702_call(), 1)
output = call_10248
output2 = call_10249
func_10262 = relay.Function([], output)
mod['func_10262'] = func_10262
mod = relay.transform.InferType()(mod)
mutated_mod['func_10262'] = func_10262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10262_call = mutated_mod.get_global_var('func_10262')
call_10263 = func_10262_call()
output = call_10263
func_10264 = relay.Function([], output)
mutated_mod['func_10264'] = func_10264
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10265 = relay.const([[[-8.308587,5.957485,-0.672052,-2.377887,1.662847],[-0.987684,3.263740,-6.322967,-1.531876,7.811209],[-6.450267,9.401813,-9.821608,-8.592710,-2.953567]],[[1.918939,8.747376,3.949158,1.247775,6.476528],[5.050942,3.125608,0.476239,-7.516433,1.080338],[9.090677,9.801906,-8.660295,1.796280,1.297855]],[[-4.722024,-6.147624,8.026722,6.810872,6.803233],[4.712790,-6.963621,4.299599,-5.611163,7.112575],[5.040929,2.322464,-9.404288,-3.137609,9.377823]],[[7.719164,-0.073576,0.488253,4.139644,-8.494529],[0.909871,-7.453397,6.499291,-9.469479,9.600236],[6.263225,-3.478451,0.959976,-2.979659,-0.668265]],[[0.134516,-1.066870,6.631349,7.309170,-4.252226],[6.253338,6.129361,-3.841000,2.043940,9.672216],[-2.074422,-1.613053,6.195562,0.824564,3.183978]],[[3.788977,-2.028810,5.079266,8.744176,-4.605899],[-5.323337,-9.281190,9.061850,-8.984743,8.305307],[2.458669,7.370957,-3.521610,5.270601,-4.173270]],[[5.163612,2.889582,0.053788,9.751889,0.715609],[6.523262,5.962828,-8.732001,-2.647241,9.102731],[-0.156149,5.618032,-6.290615,-6.068665,-1.282434]],[[9.300802,9.513900,5.886619,8.912383,2.130145],[-8.004463,-9.061473,-4.042105,2.024707,-4.103341],[-6.796418,3.177461,-7.591029,1.283968,-4.919293]],[[7.858476,4.387022,-4.359742,-7.722780,3.776475],[0.475860,-5.354481,6.769072,-9.369009,9.398831],[-4.328779,5.711983,1.294342,7.006839,-6.656103]]], dtype = "float32")#candidate|10265|(9, 3, 5)|const|float32
uop_10266 = relay.atan(const_10265.astype('float32')) # shape=(9, 3, 5)
var_10270 = relay.var("var_10270", dtype = "float32", shape = (9, 3, 5))#candidate|10270|(9, 3, 5)|var|float32
bop_10271 = relay.bitwise_or(const_10265.astype('uint8'), relay.reshape(var_10270.astype('uint8'), relay.shape_of(const_10265))) # shape=(9, 3, 5)
output = relay.Tuple([uop_10266,bop_10271,])
output2 = relay.Tuple([uop_10266,bop_10271,])
func_10276 = relay.Function([var_10270,], output)
mod['func_10276'] = func_10276
mod = relay.transform.InferType()(mod)
mutated_mod['func_10276'] = func_10276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10277 = relay.var("var_10277", dtype = "float32", shape = (9, 3, 5))#candidate|10277|(9, 3, 5)|var|float32
func_10276_call = mutated_mod.get_global_var('func_10276')
call_10278 = func_10276_call(var_10277)
output = call_10278
func_10279 = relay.Function([var_10277], output)
mutated_mod['func_10279'] = func_10279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10095_call = mod.get_global_var('func_10095')
func_10096_call = mutated_mod.get_global_var('func_10096')
call_10366 = func_10095_call()
call_10367 = func_10095_call()
output = call_10366
output2 = call_10367
func_10370 = relay.Function([], output)
mod['func_10370'] = func_10370
mod = relay.transform.InferType()(mod)
mutated_mod['func_10370'] = func_10370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10370_call = mutated_mod.get_global_var('func_10370')
call_10371 = func_10370_call()
output = call_10371
func_10372 = relay.Function([], output)
mutated_mod['func_10372'] = func_10372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10262_call = mod.get_global_var('func_10262')
func_10264_call = mutated_mod.get_global_var('func_10264')
call_10425 = func_10262_call()
call_10426 = func_10262_call()
func_8829_call = mod.get_global_var('func_8829')
func_8835_call = mutated_mod.get_global_var('func_8835')
const_10459 = relay.const([False,False,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,True,False,False,True,True,False,False,True,True,True,True,False,True,False,True,True,False,False,False], dtype = "bool")#candidate|10459|(56,)|const|bool
var_10460 = relay.var("var_10460", dtype = "bool", shape = (672,))#candidate|10460|(672,)|var|bool
const_10461 = relay.const([-4,-10,-3,8,-2,1,6,7,-8,6,10,8,5,-6,-3,-6,5,2,3,-8,-8,4,-1,-5,9,-6,-7,1,-6,-9,-3,-5,-3,6,8,-8,5,10,4,-6,-7,2,-9,-5,9,3,1,10,-9,-7,-2,-1,8,6,-9,6,5,9,10,-6,-10,-3,-8,-2,-1,4,-5,-4,-8,-6,1,2,-10,7,-5,-1,3,-5,-6,10,7,3,-8,-6,5,5,3,-1,10,-5,2,-1,1,-10,4,-4,-3,-4,4,-9,-3,-5,4,9,6,9,1,5,-6,1,-4,-1,-4,9,-7,6,-5,-6,1,-4,-1,-6,-5,-8,-7,-2,-4,9,-10,-5,-9,6,-6,-4,10,-3,-3,5,10,-8,2,10,-5,-3,7,3,-3,-1,-1,-3,3,4,-2,3,-4,-3,-2,-2,9,-1,7,4,3,6,-10,-7,-2,-10,-1,10,-3,2,3,-2,1,-3,-5,6,-4,-2,-1,9,1,10,4,5,-5,5,-1,4,-8,10,-4,3,-9,4,5,3,-5,-6,-7,6,-10,-9,8,4,-10,1,-1,4,9,-9,-1,8,7,5,-7,-3,-2,9,-6,5,-7,10,1,7,-1,-2,-9,6,-6,-10,-2,1,7,-5,3,9,-8,-8,-4,-9,-3,5,3,8,4,4,10,1,5,10,-8,10,9,-5,4,8,-4,9,-8,-9,-4,-6,8,4,5,-3,-5,9,2,-7,-5,-2,-1,8,-8,10,10,8,5,-3,-8,-3,1,6,-3,8,9,-9,-2,10,4,4,7,-3,-8,5,5,8,8,-7,-7,1,6,-8,10,10,7,-9,-10,7,9,3,-7,-7,-2,-8,-1,5,-2,8,1,6,-4,2,-7,1,10,1,-2,4,5,5,2,5,-4,-6,1,-3,-6,10,-4,1,-4,3,1,1,1,3,-7,9,-9,4,-6,-6,2,8,-6,9,-1,7,-10,-9,-4,6,9,3,-2,-2,4,3,-6,1,9,-4,-2,2,1,5,-4,-7,8,-4,6,1,4,9,2,-3,-2,1,10,-8,-5,-4,-5,3,-2,-6,-3,-2,8,8,-1,-2,10,9,-5,8,-1,10,-5,1,-9,10,3,-8,3,-2,-7,-9,8,-4,6,-4,4,5,6,-1,-7,7,-10,3,-9,8,-1,-2,5,-1,-9,10,-10,5,4,-3,6,1,2,-9,-8,8,4,-8,7,-1,-8,-10,-7,6,-2,2,-8,-3,-6,-5,1,-4,5,-7,-3,1,-1,-10,7,-2,7,-6,-7,-7,-3,-5,-6,-1,-3,5,7,7,-8,-6,5,5,-10,-8,2,-9,-8,9,-5,8,7,6,-1,1,2,-6,3,-10,2,1,-3,-9,5,8,-10,-10,10,-2,10,4,-9,10,2,9,6,-10,-10,-10,8,-7,-4,5,4,9,-1,8,1,-3,8,7,-4,2,7,-1,2,3,-4,2,-6,-3,-1,-6,-9,-5,3,-10,2,-2,-6,4,-8,3,-5,-1,-3,-9,-5,9,8,-10,10,9,-10,9,-2,3,9,-4,-9,9,-1,-8,-5,-10,-3,-5,10,2,-5,-7,3,-8,6,-9,9,8,-6,8,-3,6,1,-8,-5,3,3,-6,-8,1,6,-8,7,9,-4,5,-7,5,4,9,4,-9,1,-5,10,2,5,-5,8,4,-8,9,-1,3,8,5,5,-2,9,-5,1,-9,9,-7,-5,-9,1,10,4,9,7,-7,8,-9,5,8,-1,-4,-8,-9,3,7,8,8,-3,6,-1,-4,-10,-3,-7,3,-7,-10,8,-7,-5,-7,-4,-5,-3,8,-3,10,7,8,-6,4,8,8,1,-8,-2,1,1,-2,6,8,-4,3,-4,7], dtype = "uint64")#candidate|10461|(700,)|const|uint64
var_10462 = relay.var("var_10462", dtype = "float32", shape = (1, 605))#candidate|10462|(1, 605)|var|float32
call_10458 = relay.TupleGetItem(func_8829_call(relay.reshape(const_10459.astype('bool'), [1, 7, 8]), relay.reshape(var_10460.astype('bool'), [12, 7, 8]), relay.reshape(const_10461.astype('uint64'), [700,]), relay.reshape(var_10462.astype('float32'), [605,]), relay.reshape(call_10425.astype('uint8'), [140,]), ), 2)
call_10463 = relay.TupleGetItem(func_8835_call(relay.reshape(const_10459.astype('bool'), [1, 7, 8]), relay.reshape(var_10460.astype('bool'), [12, 7, 8]), relay.reshape(const_10461.astype('uint64'), [700,]), relay.reshape(var_10462.astype('float32'), [605,]), relay.reshape(call_10425.astype('uint8'), [140,]), ), 2)
output = relay.Tuple([call_10425,call_10458,const_10459,var_10460,const_10461,var_10462,])
output2 = relay.Tuple([call_10426,call_10463,const_10459,var_10460,const_10461,var_10462,])
func_10464 = relay.Function([var_10460,var_10462,], output)
mod['func_10464'] = func_10464
mod = relay.transform.InferType()(mod)
mutated_mod['func_10464'] = func_10464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10464_call = mutated_mod.get_global_var('func_10464')
var_10466 = relay.var("var_10466", dtype = "bool", shape = (672,))#candidate|10466|(672,)|var|bool
var_10467 = relay.var("var_10467", dtype = "float32", shape = (1, 605))#candidate|10467|(1, 605)|var|float32
call_10465 = func_10464_call(var_10466,var_10467,)
output = call_10465
func_10468 = relay.Function([var_10466,var_10467,], output)
mutated_mod['func_10468'] = func_10468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10262_call = mod.get_global_var('func_10262')
func_10264_call = mutated_mod.get_global_var('func_10264')
call_10478 = func_10262_call()
call_10479 = func_10262_call()
uop_10481 = relay.sinh(call_10478.astype('float64')) # shape=(5, 4, 7)
uop_10483 = relay.sinh(call_10479.astype('float64')) # shape=(5, 4, 7)
output = uop_10481
output2 = uop_10483
func_10485 = relay.Function([], output)
mod['func_10485'] = func_10485
mod = relay.transform.InferType()(mod)
mutated_mod['func_10485'] = func_10485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10485_call = mutated_mod.get_global_var('func_10485')
call_10486 = func_10485_call()
output = call_10486
func_10487 = relay.Function([], output)
mutated_mod['func_10487'] = func_10487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_10493 = relay.TupleGetItem(func_9701_call(), 0)
call_10494 = relay.TupleGetItem(func_9702_call(), 0)
output = call_10493
output2 = call_10494
func_10495 = relay.Function([], output)
mod['func_10495'] = func_10495
mod = relay.transform.InferType()(mod)
output = func_10495()
func_10496 = relay.Function([], output)
mutated_mod['func_10496'] = func_10496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_10515 = relay.TupleGetItem(func_9701_call(), 2)
call_10516 = relay.TupleGetItem(func_9702_call(), 2)
output = call_10515
output2 = call_10516
func_10525 = relay.Function([], output)
mod['func_10525'] = func_10525
mod = relay.transform.InferType()(mod)
output = func_10525()
func_10526 = relay.Function([], output)
mutated_mod['func_10526'] = func_10526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_10591 = relay.TupleGetItem(func_9701_call(), 2)
call_10592 = relay.TupleGetItem(func_9702_call(), 2)
output = call_10591
output2 = call_10592
func_10595 = relay.Function([], output)
mod['func_10595'] = func_10595
mod = relay.transform.InferType()(mod)
output = func_10595()
func_10596 = relay.Function([], output)
mutated_mod['func_10596'] = func_10596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10485_call = mod.get_global_var('func_10485')
func_10487_call = mutated_mod.get_global_var('func_10487')
call_10612 = func_10485_call()
call_10613 = func_10485_call()
func_10370_call = mod.get_global_var('func_10370')
func_10372_call = mutated_mod.get_global_var('func_10372')
call_10622 = func_10370_call()
call_10623 = func_10370_call()
output = relay.Tuple([call_10612,call_10622,])
output2 = relay.Tuple([call_10613,call_10623,])
func_10627 = relay.Function([], output)
mod['func_10627'] = func_10627
mod = relay.transform.InferType()(mod)
mutated_mod['func_10627'] = func_10627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10627_call = mutated_mod.get_global_var('func_10627')
call_10628 = func_10627_call()
output = call_10628
func_10629 = relay.Function([], output)
mutated_mod['func_10629'] = func_10629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10370_call = mod.get_global_var('func_10370')
func_10372_call = mutated_mod.get_global_var('func_10372')
call_10644 = func_10370_call()
call_10645 = func_10370_call()
output = call_10644
output2 = call_10645
func_10704 = relay.Function([], output)
mod['func_10704'] = func_10704
mod = relay.transform.InferType()(mod)
mutated_mod['func_10704'] = func_10704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10704_call = mutated_mod.get_global_var('func_10704')
call_10705 = func_10704_call()
output = call_10705
func_10706 = relay.Function([], output)
mutated_mod['func_10706'] = func_10706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10485_call = mod.get_global_var('func_10485')
func_10487_call = mutated_mod.get_global_var('func_10487')
call_10729 = func_10485_call()
call_10730 = func_10485_call()
output = relay.Tuple([call_10729,])
output2 = relay.Tuple([call_10730,])
func_10741 = relay.Function([], output)
mod['func_10741'] = func_10741
mod = relay.transform.InferType()(mod)
output = func_10741()
func_10742 = relay.Function([], output)
mutated_mod['func_10742'] = func_10742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10627_call = mod.get_global_var('func_10627')
func_10629_call = mutated_mod.get_global_var('func_10629')
call_10787 = relay.TupleGetItem(func_10627_call(), 0)
call_10788 = relay.TupleGetItem(func_10629_call(), 0)
const_10796 = relay.const([[[6.568190,6.028483,6.100447,8.747138,-8.145883,4.558758,3.797809],[7.419172,-1.094824,-4.564766,2.958970,5.130781,6.115838,4.537497],[-0.858857,9.597359,4.374020,-9.449179,7.825786,-0.512732,-9.197103],[1.525038,-5.408734,-5.773463,-0.567288,-7.768112,3.891888,2.339739]],[[8.072692,-8.872934,2.505499,5.104562,1.095362,-3.812638,-0.018325],[-9.825467,-5.929803,-0.415086,0.887472,-8.785858,2.704669,2.094251],[-9.171375,7.056720,1.757794,0.972384,0.147255,4.462069,2.683498],[-1.978383,-9.876799,-9.676231,-7.426473,0.912432,2.886401,3.059595]],[[-7.847507,0.111754,-8.796029,-4.401656,-8.540053,-2.266812,9.294831],[-8.654322,9.273851,-8.574753,-4.414917,7.008885,1.405789,-0.969142],[-8.731050,6.833537,-1.327519,5.611610,1.708665,-5.404391,1.944034],[-3.150009,6.217086,4.133140,9.600367,-9.477070,-3.092574,-3.821661]],[[8.933183,-5.743360,-8.383329,-3.754944,-0.815424,2.656904,-4.705422],[-4.264019,1.582401,-3.631337,3.862579,4.364510,1.274384,-7.846600],[1.755364,7.043295,0.328978,-0.166011,5.782501,-1.888934,-7.195076],[2.567895,-7.860632,7.493079,-3.086663,-9.088968,6.281605,-4.194610]],[[8.689516,0.519315,8.264529,1.886483,-2.173612,1.012001,4.676489],[-2.838030,1.856314,-9.102997,3.453003,5.519384,7.300775,9.060451],[-3.951889,8.447588,1.189733,-5.900259,0.702644,1.857899,-7.093707],[9.901095,3.715855,5.027803,6.406201,-5.121255,9.112367,0.192808]]], dtype = "float64")#candidate|10796|(5, 4, 7)|const|float64
bop_10797 = relay.logical_and(call_10787.astype('bool'), relay.reshape(const_10796.astype('bool'), relay.shape_of(call_10787))) # shape=(5, 4, 7)
bop_10800 = relay.logical_and(call_10788.astype('bool'), relay.reshape(const_10796.astype('bool'), relay.shape_of(call_10788))) # shape=(5, 4, 7)
func_4950_call = mod.get_global_var('func_4950')
func_4952_call = mutated_mod.get_global_var('func_4952')
const_10807 = relay.const([-4.216876,2.312956,3.552876,4.849536,5.695159,2.140177,2.471970,-9.392198,8.928805,0.525727,-6.043420,8.155752,-5.937032,-2.937495,5.817090,1.844734,-3.708449,-8.316331,7.141956,-7.680550,-7.320512,-4.352675,8.218585,4.884558,-8.652804,-5.079174,3.666866,9.754020,6.681619,5.303953,8.346973,-0.438504,-5.678606,9.632764,-1.472228,-7.484432,4.053883,9.175905,6.139366,4.467573,0.877605,-7.877548,4.023983,-9.582850,-1.221490,5.411655,1.934405,4.819786,-3.823436,2.567505,-0.281685,4.393313,3.178851,9.373043,1.800034,-2.643246,-0.651413,6.908173,4.268248,5.714582,-3.802250,3.869858,-5.712075,7.988672,4.294881,-6.948639,-3.098779,7.149015,-1.856534,-6.528206,4.968556,-4.802083,0.706426,3.120555,4.126453,-5.898569,0.761922,9.012698,3.339734,-7.867723,-9.262349,-8.244463,8.627470,-3.121742,-3.868658,8.585826,1.009340,-2.242087,-8.676502,4.031301,-7.796961,8.983093,9.692893,9.920254,5.213903,9.231943,-1.773507,-3.314349,8.048083,4.539201,6.376281,1.223665,-1.294267,9.090499,4.188075,1.213898,2.852014,0.925210,8.392184,2.931994,7.789617,-2.895716,-0.703764,8.733258,7.753409,-3.586160,2.576556,-4.331278,5.699720,-8.127666,-2.909934,-2.776909,-0.645126,0.087567,-3.059068,-0.021693,6.001817,-2.472651,9.564418,-9.910227,-4.943287,3.751827,-6.349732,-8.876227,-1.923782,2.535746,-2.637672,-1.365358,1.990848,-5.663765,-4.616730,5.726289,-8.501630,1.627000,5.042246,-2.227332,-7.842811,-5.445585,2.421244,-3.186855,9.445118,2.281134,3.869820,3.384386,5.655928,9.521147,-7.089802,8.242261,-0.008794,4.704035], dtype = "float64")#candidate|10807|(160,)|const|float64
call_10806 = func_4950_call(relay.reshape(const_10807.astype('float64'), [10, 2, 8]))
call_10808 = func_4950_call(relay.reshape(const_10807.astype('float64'), [10, 2, 8]))
output = relay.Tuple([bop_10797,call_10806,const_10807,])
output2 = relay.Tuple([bop_10800,call_10808,const_10807,])
func_10811 = relay.Function([], output)
mod['func_10811'] = func_10811
mod = relay.transform.InferType()(mod)
mutated_mod['func_10811'] = func_10811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10811_call = mutated_mod.get_global_var('func_10811')
call_10812 = func_10811_call()
output = call_10812
func_10813 = relay.Function([], output)
mutated_mod['func_10813'] = func_10813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10525_call = mod.get_global_var('func_10525')
func_10526_call = mutated_mod.get_global_var('func_10526')
call_10816 = func_10525_call()
call_10817 = func_10525_call()
uop_10826 = relay.tan(call_10816.astype('float64')) # shape=(1, 693)
uop_10828 = relay.tan(call_10817.astype('float64')) # shape=(1, 693)
bop_10832 = relay.greater(uop_10826.astype('bool'), relay.reshape(call_10816.astype('bool'), relay.shape_of(uop_10826))) # shape=(1, 693)
bop_10835 = relay.greater(uop_10828.astype('bool'), relay.reshape(call_10817.astype('bool'), relay.shape_of(uop_10828))) # shape=(1, 693)
func_7733_call = mod.get_global_var('func_7733')
func_7738_call = mutated_mod.get_global_var('func_7738')
var_10837 = relay.var("var_10837", dtype = "int32", shape = (1680,))#candidate|10837|(1680,)|var|int32
const_10838 = relay.const(-6, dtype = "int8")#candidate|10838|()|const|int8
var_10839 = relay.var("var_10839", dtype = "bool", shape = (3360,))#candidate|10839|(3360,)|var|bool
call_10836 = relay.TupleGetItem(func_7733_call(relay.reshape(var_10837.astype('int32'), [8, 15, 14]), relay.reshape(var_10837.astype('int32'), [8, 15, 14]), relay.reshape(const_10838.astype('int8'), []), relay.reshape(var_10839.astype('bool'), [15, 16, 14]), ), 5)
call_10840 = relay.TupleGetItem(func_7738_call(relay.reshape(var_10837.astype('int32'), [8, 15, 14]), relay.reshape(var_10837.astype('int32'), [8, 15, 14]), relay.reshape(const_10838.astype('int8'), []), relay.reshape(var_10839.astype('bool'), [15, 16, 14]), ), 5)
uop_10854 = relay.asin(bop_10832.astype('float32')) # shape=(1, 693)
uop_10856 = relay.asin(bop_10835.astype('float32')) # shape=(1, 693)
uop_10867 = relay.sin(bop_10832.astype('float32')) # shape=(1, 693)
uop_10869 = relay.sin(bop_10835.astype('float32')) # shape=(1, 693)
bop_10870 = relay.right_shift(uop_10867.astype('int16'), relay.reshape(uop_10826.astype('int16'), relay.shape_of(uop_10867))) # shape=(1, 693)
bop_10873 = relay.right_shift(uop_10869.astype('int16'), relay.reshape(uop_10828.astype('int16'), relay.shape_of(uop_10869))) # shape=(1, 693)
bop_10884 = relay.divide(uop_10854.astype('float64'), relay.reshape(uop_10826.astype('float64'), relay.shape_of(uop_10854))) # shape=(1, 693)
bop_10887 = relay.divide(uop_10856.astype('float64'), relay.reshape(uop_10828.astype('float64'), relay.shape_of(uop_10856))) # shape=(1, 693)
bop_10890 = relay.bitwise_and(bop_10884.astype('int64'), relay.reshape(uop_10854.astype('int64'), relay.shape_of(bop_10884))) # shape=(1, 693)
bop_10893 = relay.bitwise_and(bop_10887.astype('int64'), relay.reshape(uop_10856.astype('int64'), relay.shape_of(bop_10887))) # shape=(1, 693)
func_9190_call = mod.get_global_var('func_9190')
func_9193_call = mutated_mod.get_global_var('func_9193')
const_10895 = relay.const([-8.048853,9.114685,-5.084130,0.397544,-8.952424,-4.001960,-8.756883,2.276828,7.262427,-9.133720,4.946858,-2.314727,-2.819278,3.684102,5.796443,2.768257,-9.367733,-6.942742,2.700133,7.023294,-3.062335,-8.228918,-3.660701,-7.410956,0.809408,8.726189,-9.879265,-0.212728,-8.653951,0.382037,8.885097,5.743243,0.137600,-7.442687,4.081796,-9.397685,6.288741,2.677069,4.077493,2.649330,-7.177256,9.458387,3.533083,4.603781,5.532828,5.880396,-0.381432,-4.155407,-0.824256,-4.807933,4.889264,3.663058,6.088809,-0.524373,6.479606,0.301307,5.580237,-7.355206,8.254073,-4.027141,-4.079031,8.095995,2.202936,6.567480,-9.627547,4.595086,-2.493505,4.107191,9.155260,-3.310500,3.376732,-8.590138,9.779737,9.554209,2.251428,5.212639,9.586923,-5.980839,0.616157,-0.104957,0.145062,3.199497,5.467918,4.945801,-0.227676,1.612241,1.782593,-9.147332,-1.085099,5.487343,-6.388165,-3.014410,4.281199,-6.182740,-1.674466,1.507088,-4.986340,4.081956,2.186576,8.142912,4.705594,2.789433,-3.666045,2.253805,-0.778655,-1.082634,0.994217,-9.974381,4.302631,3.333931,-5.013678,5.355819,6.190957,-6.258841,5.636138,6.281288,-2.313551,-0.934347,-0.813891,1.840779,-5.849702,8.629936,-5.844544,0.742542,-6.817708,4.679881,1.945505,-7.123933,-9.451820,1.389744,-8.978909,-2.249039,8.718145,6.239629,-8.193394,-6.292026,2.088774,-2.553190,-8.251511,4.739497,5.888502,5.454683,-1.468188,4.547854], dtype = "float64")#candidate|10895|(144,)|const|float64
call_10894 = relay.TupleGetItem(func_9190_call(relay.reshape(const_10895.astype('float64'), [16, 9, 1])), 1)
call_10896 = relay.TupleGetItem(func_9193_call(relay.reshape(const_10895.astype('float64'), [16, 9, 1])), 1)
bop_10897 = relay.greater_equal(bop_10884.astype('bool'), call_10894.astype('bool')) # shape=(16, 9, 693)
bop_10900 = relay.greater_equal(bop_10887.astype('bool'), call_10896.astype('bool')) # shape=(16, 9, 693)
const_10908 = relay.const([[9.360847,7.341574,7.696347,3.622499,-2.051044,-8.116184,-0.876990,4.371523,3.501756,-2.049369,3.246767,7.856729,-2.622298,5.188441,0.796814,-2.881615,4.295053,-3.542272,-7.180479,4.815483,-7.028668,-0.774165,-8.023251,3.429910,-7.531763,9.156492,-5.910742,-8.290256,9.551472,2.259230,-8.081637,8.777674,9.580489,5.493954,2.485315,3.305725,-2.576170,3.563039,3.343829,9.099120,-1.093329,5.077148,1.913240,4.204993,8.913483,-2.870003,-0.439267,4.964504,1.856380,2.720180,-2.046776,-3.309875,-1.106041,7.270554,3.597054,7.711368,2.173799,-6.461015,-6.478446,5.603492,-1.417270,-1.868352,0.123114,-0.578379,-2.209155,-5.337818,-3.065423,6.665992,-4.435115,4.567198,6.436198,0.462630,8.208582,-0.793795,-9.263327,-6.531708,3.246474,8.059867,-6.328930,8.780204,-1.420751,2.734365,-4.198014,7.613791,3.205730,-4.615731,-4.377544,-6.028317,1.328176,3.502892,-8.505307,-2.941032,-8.672894,8.915340,-4.420242,8.989070,-4.666407,5.247801,-5.766009,5.832542,1.971632,-4.368935,6.454722,-1.046590,0.726435,-6.267157,9.909567,1.811870,3.219810,-7.877495,6.617486,-8.478509,2.108281,8.056956,-3.774324,7.510414,-7.696032,1.235067,-1.454114,9.690321,-2.766402,-4.369363,-7.399525,6.281303,-6.540400,1.038556,-7.415935,6.013373,-0.023259,5.285911,6.601170,-4.629040,-1.142391,2.209333,1.763594,5.558619,8.419510,5.026653,4.196364,7.415010,9.210472,-6.981396,-1.697908,7.387916,-5.457027,4.872933,4.264651,1.202636,-9.772982,2.487158,0.346320,9.842525,-1.006332,5.693473,1.001278,8.711765,3.264707,-4.622637,1.435990,-9.971208,-2.822420,8.166550,-1.456695,-6.125021,6.824409,-9.209032,-7.979750,4.694124,4.545294,-9.168889,8.662245,9.349758,5.277274,-9.386135,3.499337,-0.800072,4.840298,9.593655,8.589204,-6.925324,5.326385,3.495926,-2.217036,-5.289346,3.259428,-8.845975,-5.566758,-5.005282,-9.656881,-5.119667,6.625431,0.551051,-6.025519,-7.342764,-1.264643,7.410407,-8.223644,2.874229,2.152551,-6.942538,2.599495,-6.742839,-6.241152,0.521832,7.736130,-7.103451,7.907062,5.217114,-4.250193,9.138607,-4.582938,4.141431,6.732236,8.708077,-5.935817,-8.101607,1.195922,-0.534008,6.670088,-3.424860,7.590678,6.726696,-9.989987,7.163992,0.452093,-7.871739,0.397567,-0.132572,-5.016285,1.905390,2.864940,-1.950783,-7.597747,-2.402403,5.320872,9.549031,9.330876,5.500681,0.825088,-8.009626,6.611920,8.877821,-5.006030,1.144262,1.554230,-8.121410,-9.655363,4.639027,0.292288,-8.611473,-6.506025,6.902318,6.401799,-8.139390,5.531025,3.976457,6.965417,9.284376,-1.597851,-2.646343,-2.769578,-1.840600,-9.353285,9.314752,3.365988,-5.231925,7.108458,0.045169,-5.603185,-0.814879,-8.443626,-3.926933,-5.139648,-5.330114,-4.999393,-9.706456,3.355237,-4.463381,7.786550,9.794292,1.063534,-6.853212,2.973595,0.206031,8.631735,-7.908872,2.574454,4.916413,-3.433706,-3.853357,3.493788,0.186110,3.622723,-0.409661,-3.345916,9.731291,6.231908,-3.119559,2.582336,-5.295197,8.917422,0.216607,6.424291,-4.203976,-1.504572,-4.302603,-7.648369,-5.687282,4.630734,-8.436287,-8.931331,-4.586004,1.296787,-5.661776,-3.826754,-9.163941,6.814410,9.325523,-7.825103,5.860620,-8.450789,-9.657832,0.257594,6.464698,9.842754,-2.099453,0.928775,8.189451,-3.172111,-9.636847,-2.655933,-3.515556,-3.282899,-2.149813,-6.404977,8.913994,-1.202543,6.275999,-4.954631,-2.167756,-0.529457,3.906544,7.932755,-6.555193,-4.312456,8.756525,8.117162,4.501125,6.350122,1.061219,1.988687,-0.538243,-0.978320,6.440419,-2.666365,8.314367,7.799356,9.775968,8.912235,-0.119222,-0.753734,0.474980,7.343245,3.116722,-8.844967,-6.614764,6.724906,4.019617,-5.050998,-4.066840,4.093902,7.140557,-3.736390,6.083297,8.255326,5.841728,9.511072,9.831352,0.956407,3.542971,7.698588,1.712322,3.019589,0.924438,-4.959382,-2.281482,4.494732,-8.783717,-2.545163,1.222310,7.693661,6.267006,3.206057,8.661015,8.556869,5.203146,9.584495,9.036184,5.932685,-1.352874,-9.841432,3.988629,7.715321,4.748030,-7.594622,1.250841,-0.937414,-8.520306,2.948472,-7.705422,3.655576,-9.325116,4.074281,6.771620,-7.388424,-4.864726,-3.465877,-1.728669,3.934403,-0.754391,-0.273739,4.906394,-3.419295,3.168656,7.137594,5.805374,9.879981,5.166727,5.493592,1.078271,9.923294,1.388587,-7.358562,9.126614,8.035554,0.118784,7.485822,-9.646106,-5.332232,6.652673,-2.169945,-3.177082,-7.630817,-5.620780,-6.536605,4.514895,1.562254,-0.333860,-3.549618,3.162323,7.360205,-7.749026,5.509417,-1.238928,-2.724151,6.924273,-9.444157,-0.506311,-3.653400,0.460589,-4.388069,-5.007046,8.332471,8.900215,-4.112386,9.788452,8.205800,-0.926654,9.121804,8.894205,-4.247497,-3.224650,-9.579101,-6.659862,6.807168,-3.262695,-2.710409,2.010715,8.612274,-9.297942,1.933224,9.974456,0.738885,8.812030,-3.192046,-7.488215,0.216774,-9.901526,7.253935,-8.817991,-8.368752,-5.820206,7.064127,-9.556087,2.784235,-1.327179,-1.511203,0.396326,4.295822,-6.965345,6.773193,4.407278,4.746539,1.175899,-6.041211,7.891455,-9.884093,8.618617,0.169861,-1.495536,-9.753903,4.828967,-7.855524,-8.623666,6.463186,1.093122,3.852679,-3.612373,-8.049075,3.969385,1.141913,1.138990,3.943894,-4.262381,-9.070172,8.738828,8.488888,-0.969587,9.204969,-7.846878,6.784404,-0.187193,-5.531504,-5.783128,-9.147539,8.610438,-6.608122,1.892124,2.585055,9.122084,-7.456587,4.424452,0.887736,4.066798,-1.933243,-6.012918,3.029697,2.174746,6.587951,1.762475,8.714096,8.859958,3.531387,6.083532,-9.755776,4.042341,5.646355,2.898918,-9.656252,-7.438394,-9.027699,-2.913405,2.337439,2.931345,8.712070,-5.478069,9.437385,8.317908,-1.049651,4.535163,4.964247,3.101177,0.130742,6.306098,4.689360,6.637149,-0.191357,7.932917,9.351586,-8.058743,7.331285,3.580531,9.325960,-8.720082,-2.061566,-8.325369,-2.307589,-0.433777,-3.049559,5.362522,5.089169,2.397086,-9.685777,5.718320,6.372969,6.987109,-0.866795,6.417010,6.742477,2.859426,-7.663297,5.586879,4.853387,-8.874768,5.713217,7.516557,-0.544086,8.705674,-1.673060,-7.779667,-7.548770,-9.005509,4.113123,-7.293677,6.829119,-7.012746,-9.377447,-2.137560,5.912632,0.628810,-1.937591,-0.522353,-9.648933,-8.354838,-3.701079,-5.956214,-1.609237,-5.843396,6.679648,-2.720000,-4.013854,-2.060538,-5.426321,9.048055,9.423507,-4.183776,9.308635,9.423178,-4.477788,-4.348266,-3.810972,-9.601581,-7.519378,-2.320293,6.232810,-8.110595,4.369727,-2.527392,-4.368706,-2.959085,4.465461,9.679677,6.183586,-6.047796,-1.487772,-7.815456,2.195731,3.508347,0.609683,8.083114,-4.524134,4.376649,-9.132370,4.282217,8.983385,7.510432,7.142922,3.865821,3.145852,-1.564869,1.881825,-1.794945,0.719369,-9.751647,-8.569809,-4.336831,7.698746,-6.414696,7.639336,-1.120221,6.616603,3.651665,0.571599,1.545940,-2.967953,-8.438797,9.187630,8.523131,2.876421,0.277188,7.647745,-3.568884,8.172978],[6.140469,3.751887,4.865588,0.298271,2.689736,-3.875708,5.610067,-2.767544,-5.983232,-1.745159,6.579431,9.699586,9.865572,-3.145598,9.304046,7.081719,-3.388414,0.035517,9.401241,9.325047,7.985097,-9.813039,-0.560812,-9.313703,-2.727198,-7.444984,-5.174252,-0.184260,3.818399,-0.712079,6.710384,9.489341,-5.618715,8.768135,2.377499,-3.858976,-8.346248,5.804178,4.704440,9.027913,-6.203034,0.615002,8.180363,3.900138,-4.346210,-5.038948,2.139222,-4.614490,-8.573202,6.294714,-6.486204,-4.691497,-2.218414,7.981969,7.425233,5.344658,0.969206,3.181295,6.196909,2.439200,-4.269813,7.904009,4.433652,9.224554,1.209941,8.169980,-2.228169,4.972150,0.677819,-9.029987,1.056328,-0.231126,6.411359,-0.554108,-2.463473,-2.812369,0.231954,-0.322267,8.365585,-2.865166,6.651185,-5.475188,6.813933,-9.458891,0.505070,9.648951,5.113349,5.777494,3.382471,6.257705,4.612220,-9.101819,8.221068,9.041639,-1.039835,2.224712,0.979278,2.669286,4.037536,0.970742,4.230307,-2.621905,-2.666951,6.695814,0.629858,-6.996697,-2.574788,6.132886,0.058084,2.737735,-0.898555,8.384894,-6.379806,-4.855208,5.592532,-4.490403,-2.232507,6.276290,-5.423277,4.353447,5.318033,-7.347179,-4.935285,7.888733,-4.415968,-7.591225,1.415313,-3.286234,-5.100871,-7.805864,-9.136780,-9.179249,1.663211,-5.360864,-1.726481,7.192785,1.386343,-0.984487,0.435445,0.437955,-1.079123,-4.571350,-8.962541,2.350019,3.993119,-8.307510,0.542592,-3.215705,-3.935803,-1.341032,-0.656831,-7.812759,-2.373761,-7.782003,-8.849486,1.501370,4.039097,-7.038295,4.746000,-6.605242,1.901471,-6.962587,-4.145451,6.957405,4.389678,6.215013,8.077938,6.038830,-8.232836,9.707762,-7.239951,3.018355,-1.277878,2.608677,-7.584301,-1.003749,-1.140766,-8.619705,-2.039360,2.395912,9.712539,6.996454,-0.777391,-9.588718,-9.735250,9.199687,1.021245,-8.868182,-9.077430,4.403697,-7.202983,5.699997,-9.333836,3.165735,7.255777,4.490896,1.103014,-8.001804,5.285996,3.573811,-4.500394,-6.390493,7.675066,-8.768290,-3.689431,-0.789990,2.142055,9.090197,2.472723,-8.764389,1.157863,-8.787681,3.184335,-2.940764,6.573216,-7.133410,-2.762443,3.858701,-0.407938,-1.700981,7.827418,1.638369,-7.828580,9.733582,0.516827,-9.551106,6.352662,1.438032,6.892196,7.906784,1.630222,6.803727,9.446778,-9.355352,-9.704827,-3.855827,9.654566,-7.508947,3.163769,-6.525449,-2.783947,3.800843,8.628251,-2.920587,7.089636,5.746102,3.041853,-7.341265,-7.325997,-2.912725,3.453107,-4.065809,-9.187375,-5.630518,-2.778573,-1.999996,-8.112800,-4.010587,7.769325,-1.573960,2.724346,5.234581,-9.042886,2.596171,-5.023123,3.117980,-8.388324,3.584632,0.176966,-4.424991,-4.913163,-5.499890,9.478533,-5.088703,4.210187,5.781652,-7.120566,4.285846,-5.480804,3.918262,7.258209,2.825016,5.368771,-6.757236,-0.697479,-6.194468,-2.585680,9.275217,-7.137798,-1.692898,5.142886,-2.698819,-9.351876,-7.342588,-4.106771,-6.729482,0.428740,3.864860,-6.626598,3.341633,2.517447,3.371402,-5.341292,1.891467,-6.285868,-7.771035,7.307318,4.671007,-5.860377,-9.665198,-6.307880,-1.336016,-6.836189,-0.563368,-4.311521,-3.267846,7.890953,9.735194,-8.030667,-7.559363,-1.498562,-4.833657,2.359765,4.002302,-3.347217,-7.958147,-7.726848,-4.964843,9.601780,1.964903,-5.716983,3.860463,7.322848,5.100507,9.092725,-4.233294,-7.785469,0.961028,9.688058,3.689234,-0.569223,-4.753309,1.869548,-6.368338,9.729202,-4.970552,8.298512,5.865155,-5.813585,-3.032459,3.846589,0.311988,-7.562904,3.402704,4.226390,6.155253,4.713453,9.675544,-9.537513,3.737815,5.697999,1.099846,8.466605,-8.445409,0.088428,0.905121,9.424274,-6.050141,0.086348,8.421219,-2.560722,-9.432862,-2.914406,-6.342996,6.434954,-7.714477,6.855385,2.365772,0.608795,-5.871414,2.838103,8.944943,-8.126661,-6.715530,4.615193,5.561835,-2.188925,1.289904,9.935482,7.615802,4.002958,9.563399,8.685946,6.511129,-6.394348,2.522646,5.459209,1.269435,-4.459224,9.929290,6.135034,5.592582,1.589243,1.911123,0.036447,0.675497,-0.533383,4.657220,-3.000682,-7.392184,8.992086,-0.630721,-1.081611,-1.804063,7.137074,7.643096,-5.302423,-7.940391,0.070990,-8.193442,-0.946599,-2.169191,0.144199,-9.291943,-9.123108,-0.504489,-3.606908,5.728485,-3.914724,1.738302,4.301331,7.267546,4.901930,0.589374,9.206058,5.634600,-0.800844,-5.513133,-2.135071,1.474339,-0.410181,-1.507385,-5.320440,4.319116,1.006289,-6.117414,7.656612,7.687530,2.838069,-0.019529,-0.268535,-5.512967,6.161013,-1.381735,2.440787,-9.349524,-8.932498,-2.291102,-4.587736,3.499018,-3.270883,8.893522,7.140637,-5.057502,4.303510,0.242980,7.272461,-9.830831,6.769563,-2.256278,-8.172446,-9.667107,5.134645,5.076741,-0.077329,7.868838,-6.463429,1.695960,3.175040,-5.673496,-6.048590,3.833208,5.698507,-9.140696,-6.142969,2.744663,4.691124,7.756699,-5.090536,7.566758,-2.463986,3.655655,8.491161,-3.704625,9.520696,4.207796,1.691372,6.107147,2.653481,3.771774,-5.553550,-1.302202,-9.292628,-8.345576,1.177858,0.728269,-4.804846,-0.600071,7.593816,2.688103,-9.331387,-4.071901,5.027102,-3.468570,7.191372,-1.344893,4.485064,-0.032339,3.833959,-7.858296,-0.652474,-7.274417,8.969549,-1.411759,2.043922,9.894532,-6.391973,2.519555,4.013018,-9.474113,3.523791,-2.297206,-1.291501,-3.513834,6.016864,-4.275558,6.230901,-1.529777,2.431453,7.933792,-8.047539,-0.634638,0.129386,-1.980108,-1.838714,6.667760,-6.381197,-1.270154,-8.721575,-3.552904,5.244906,0.094830,1.151989,6.506526,-8.744325,6.941392,4.154642,-9.250818,-5.123476,2.445331,1.883848,-3.748115,-5.535882,-4.750867,-1.214609,-8.273428,6.512238,-9.490801,-7.187013,-1.741395,-8.948447,9.978622,0.037448,-5.454186,3.728129,-8.952073,0.218329,-9.182659,6.273611,-1.067520,1.716435,-0.514710,9.134655,7.201999,-1.515492,-7.973999,3.935847,0.896244,9.512901,-7.010166,1.488122,-2.884764,-9.787673,0.273176,4.002335,8.103150,-9.212385,-5.614259,-8.896226,2.012085,4.073214,7.977121,-3.211132,9.968862,4.954995,-3.240563,8.328248,1.007908,1.027772,2.086164,-1.599214,7.916429,-2.030573,-8.317529,4.498738,-0.166377,-8.130575,8.116610,-6.816181,-1.231740,4.298622,-3.379652,5.945935,-8.006921,-3.175653,-7.902309,-4.679786,-8.399557,1.581043,6.593660,-4.227873,2.198253,3.321302,8.349870,5.972764,8.415468,-9.134449,6.984444,9.546447,-1.002018,-4.025703,6.603836,-1.500162,0.827350,-2.171544,-7.803680,-0.596291,2.857537,2.416215,1.267466,2.704375,5.193938,9.893150,5.845889,-4.278645,-5.671888,-8.046993,1.419284,7.531854,-6.686975,1.858353,4.691147,-9.266114,3.264156,1.762276,7.658614,-7.011038,8.140674,8.300530,-4.366588,-0.440562,-5.524570,-3.821199,-7.557344,0.307254,-3.952033,3.595664,-2.768421,-5.571213,3.675066,7.126133,-6.020583,7.404199,2.183082,0.523925,-4.357615,-7.519329,-4.461378,-7.613614,7.965645,-5.426263,-4.110047,7.559349],[5.209106,6.534659,0.386743,7.507433,-0.361828,5.289802,-1.688660,8.298042,7.240041,4.532115,4.151923,-2.898135,2.619628,-6.374542,-7.189477,2.881557,7.132052,1.554106,1.995617,7.711589,0.976539,0.433415,5.464089,5.068843,-5.323346,-8.964714,-3.339907,-9.515921,3.745139,-6.186850,-0.653324,-6.620355,-4.142658,4.723032,-6.044865,6.664474,2.435644,2.703028,6.888261,0.812170,-2.231868,4.576976,-4.585615,-1.802722,-5.199494,-0.733374,-0.828784,4.711010,-1.389486,-2.935506,3.722870,-8.504206,-3.365883,1.799878,-8.243571,-3.040154,-8.867434,-8.679661,4.553423,3.741811,1.673478,0.805730,-1.718918,-8.480616,5.988531,6.051042,-4.525491,8.632519,-8.729944,-2.149762,-5.106454,8.556090,1.562038,7.116047,-5.261444,-5.116756,-8.482286,-2.997857,-8.199722,9.695076,8.719428,-1.081572,8.105701,0.204203,-4.211850,-5.542162,-2.857452,-1.051349,5.494608,-1.205721,-2.040631,1.127281,-2.011003,1.447188,-6.393793,-8.128097,2.786468,9.033337,2.998580,-7.540725,3.600248,-0.889640,-4.545392,8.239271,-1.309932,-2.963792,-5.430873,-7.195175,3.967267,-8.728776,-9.704763,0.469613,4.549404,-4.189706,9.115206,5.467169,-6.910355,-4.628336,-7.712235,-0.121075,-8.585859,2.562123,0.768120,9.261642,7.128521,-9.509939,5.041448,4.172140,6.260588,9.561056,1.294129,9.188528,-8.102999,-7.524616,5.817964,6.144088,2.217755,-0.691701,-8.610315,5.693179,6.974781,-6.874621,-6.930776,-7.982334,9.318565,-5.180072,-7.245140,-9.404041,-2.742487,3.091287,-2.444619,0.076465,4.100607,-1.309235,2.639995,2.078263,9.386263,9.013388,3.866669,0.129866,1.769802,0.754330,0.409474,-5.579128,7.095748,3.467925,8.193611,9.299980,6.434627,-8.193300,-8.196868,4.973942,6.644378,4.711387,-7.890785,-6.935370,-8.972673,2.768131,6.312555,9.625091,0.453666,-1.467807,8.780586,2.379856,8.661410,-9.021956,3.381335,-3.512401,-6.086286,-9.326290,-8.497635,9.603666,-9.689725,1.738561,-9.680797,-5.786931,4.621310,-9.057365,8.129176,4.666061,-0.950940,-5.661490,-5.769366,-6.513034,-8.970071,7.858422,3.976951,6.415931,-4.719098,-3.200837,-4.941966,-0.570092,0.349285,-3.782928,6.178705,-4.443498,1.928008,4.192229,2.532736,3.594864,-7.769993,-0.201434,9.344332,-2.963629,-5.541180,-1.672473,2.991273,8.060423,-6.322830,3.472011,4.247563,0.534636,-1.210091,-8.764529,-1.723858,3.854690,0.133449,9.119996,-2.327593,-1.239543,-2.371042,3.667793,8.628241,-6.337319,-6.550925,8.355570,7.566871,6.366721,-8.217226,4.310744,7.140944,4.056453,5.457640,7.122264,-4.916312,-1.877300,-3.149913,8.772674,-1.579374,1.977679,0.250317,5.408122,8.865746,7.341697,-4.864867,6.742079,1.484447,-9.882100,5.889779,-9.894272,4.493626,-6.194780,-4.611880,-9.348107,7.385015,-0.412879,-2.604818,-8.067397,-5.933018,4.677686,-2.487199,-6.275123,-0.245134,-8.696642,-9.647243,1.658666,-5.711921,0.461631,9.075441,3.914950,-0.366404,-3.462913,3.941283,-0.414794,-6.509634,7.571217,-2.060454,-0.879524,-0.094352,-7.544859,-2.525879,2.855353,5.969747,6.579699,-3.076525,-8.312697,-5.908468,4.765204,8.150075,5.452024,-3.208616,-7.705270,-4.138195,3.391168,-5.368192,9.367518,7.175842,5.590746,-5.968218,-5.652597,9.492272,6.706063,3.135131,-6.209087,-1.459057,-6.801002,-2.403636,-4.387036,5.382930,1.920375,9.823433,-6.979668,3.498827,-6.389536,0.227070,-7.171864,7.709196,-0.384951,9.236124,8.956820,5.369775,-0.311697,-5.419109,-1.813194,-1.232810,2.808562,8.379480,-5.026820,5.759966,-6.705500,2.553723,-7.665433,-9.117055,4.066857,3.947814,0.221460,-1.274529,-0.134052,-4.992070,4.947429,-2.576855,9.803119,-0.942422,5.998632,-4.941421,-3.144916,-0.697772,-9.968954,-0.299537,-3.352412,-6.328396,-2.757940,5.949487,0.127998,4.865974,-1.136601,-2.474440,7.460151,-3.201190,-3.192327,-4.357796,-9.454790,2.976054,4.945154,5.442373,9.614035,-1.544997,-1.010676,-4.280914,9.449952,-9.975610,-4.062097,5.102491,-0.415324,-4.344440,-3.072409,4.818463,2.425958,6.205797,-4.725121,2.044568,-6.765409,6.154357,1.902337,4.241892,-3.262885,1.789585,-2.265286,-8.749672,-7.089789,0.087590,-7.558928,8.083186,-1.003316,-0.415661,8.736125,-7.224059,3.620625,3.610473,-8.313476,-7.701026,-8.691803,4.914625,-2.263278,4.491284,-7.953690,-4.278020,-2.291475,-1.930143,-4.471927,9.988101,-6.103080,-2.872844,-6.398470,5.201804,-9.353576,1.619580,4.501408,3.110718,-3.462026,-5.733857,7.613007,0.157433,-8.345932,-3.091761,0.484368,6.943803,-4.740350,2.311958,7.563561,4.353428,-6.269076,-0.342472,2.510305,-3.507035,1.147662,-5.380962,3.042975,-7.085916,1.935629,-5.148394,-5.600650,0.204198,4.895557,4.228107,0.489605,-0.941384,7.374294,3.102805,-3.904896,5.134322,-2.434654,0.032189,1.058802,4.759192,-8.571014,9.866944,9.043377,2.573180,-3.159863,2.718356,2.282620,1.182211,5.421121,5.323869,-3.822036,4.191101,-1.004910,-3.042544,-0.683480,8.762557,-7.126597,8.775014,1.097910,-7.918935,-4.863719,4.121812,-0.635993,-3.849939,3.677445,0.788225,-2.313513,-7.656065,5.464868,6.777545,-9.512318,1.187996,2.892247,1.022214,8.521870,-2.817947,3.276993,-1.750625,7.898324,2.860741,-2.912702,-8.251815,1.648082,-7.429175,-9.599858,-3.373292,-0.844725,7.376097,9.512079,-9.848300,-4.999933,-5.937006,-8.888508,4.954852,2.836674,-2.848231,-8.548241,3.702127,8.984641,-4.242459,9.432118,-1.453664,-8.660596,6.978416,-9.840759,7.156458,7.076263,0.629937,-0.035014,6.146412,9.820168,9.668783,-9.894813,-3.384445,-9.828253,5.622106,0.872306,0.753771,8.606578,1.196972,-1.959608,2.468080,-9.430900,1.267257,2.335060,5.904502,-6.904576,-7.065953,7.437013,-1.055522,-7.335959,2.466780,-1.542374,2.867958,9.139105,6.224103,1.033315,7.278777,6.516503,-3.167527,0.509197,-4.077491,0.757091,4.852797,7.687940,-9.068081,1.528466,8.519532,3.290580,-9.537063,-0.148904,-2.059879,-4.039190,7.677046,8.284362,-6.769111,5.813914,-6.222830,-8.922893,3.059306,-3.056848,3.173983,4.336564,7.299167,2.689757,-5.914745,9.219612,-8.194134,-0.534170,-9.836901,3.308947,1.375283,2.251634,4.477593,3.819523,1.990372,2.371871,5.874349,1.352415,5.564644,-7.525808,-2.836232,-6.181793,4.538844,1.993132,-8.298506,0.770284,0.002028,-3.775002,-6.019198,-9.509417,8.564825,-9.990354,-2.403854,3.921234,-6.210281,7.698733,3.800823,9.356753,0.842406,-8.064334,-1.786652,8.421552,-7.815221,-8.388322,2.351240,-7.395019,-6.377454,4.738854,6.863055,-1.040211,5.021983,-1.739279,-2.508794,2.123271,-3.394871,5.174918,9.757466,6.589265,-5.073074,-1.111127,-8.505746,-3.722886,8.145802,4.169684,-2.039809,1.434158,-3.148270,1.677070,0.359316,-9.605196,-2.420016,-9.646240,-7.400958,-3.201692,-6.045003,-6.695664,7.473115,8.981249,-6.465450,7.032161,5.266896,-3.867632,9.961454,-8.201336,2.610769,-9.800274,-4.264857,9.844963,-9.308489,-0.366715,8.516959,1.006375,2.586301,4.664854,-2.169205,7.461097,7.908523],[8.463827,0.158099,-2.244356,-2.038565,-4.409580,7.611332,4.736865,2.262271,-2.820192,-0.879312,-5.256563,8.250864,2.417722,-8.607052,6.659433,8.243630,-3.316438,-3.565886,8.031278,-4.868930,3.692570,5.284494,1.355440,-8.525966,3.626926,-0.734003,8.235247,-3.749943,2.677765,5.384783,-1.614658,8.052195,9.459625,2.055692,-1.833762,-7.183977,-6.163402,-9.193974,2.102572,0.029246,3.011988,-0.711822,1.924119,4.841486,5.850725,9.154176,8.878518,0.308719,-3.979396,4.616749,-8.477912,2.770483,-7.770237,-7.579621,-2.631461,-2.938972,6.566934,-6.283710,6.327612,1.532220,-6.570313,5.049199,7.434934,-8.885077,0.532399,-1.710587,-6.942542,-1.570810,7.009272,-9.908055,8.251927,8.219249,5.139947,6.903782,-4.429596,0.512826,-6.652066,-4.309727,4.162571,1.617732,6.649060,-1.097795,3.489595,-6.809714,-0.669296,6.185062,6.338464,-1.385740,-2.195906,-0.654584,1.547735,-9.698250,-2.281294,8.291242,5.078914,-6.201989,9.256762,-5.308501,-2.458751,2.420575,8.509938,-3.979189,-6.302224,1.733540,-6.879094,3.959147,-3.977903,4.599923,-7.278602,-5.919855,-9.489937,-8.966410,-6.003673,-7.179039,4.037336,3.476986,-0.348428,-4.717042,-9.414124,-7.761130,6.734440,-1.482828,1.733084,-5.703614,9.272856,0.589911,2.974464,8.829652,7.303247,-9.820831,8.715606,3.174659,3.137678,-5.561593,-1.085005,5.682531,-6.053847,8.008530,6.876546,-8.084451,-5.561160,-5.918713,2.001113,0.309768,-6.392683,-7.202664,2.609646,4.963583,3.528742,1.421419,-4.089551,5.830912,-7.056987,-6.365646,-6.114475,-7.744667,0.994974,-8.714010,-8.042192,3.680486,-3.958658,7.214732,4.825905,-5.426451,-3.557662,-0.001462,-7.442016,-8.969610,-5.767163,4.633645,9.268102,-6.238821,-4.007993,4.435932,-3.267578,4.872054,-1.322042,9.847138,-2.625013,-2.086218,6.154407,9.709952,-2.985702,-4.469746,6.108437,6.658108,-9.980618,7.898874,2.112556,6.984829,1.344976,-4.252679,5.481879,9.680789,9.543778,1.055868,5.095021,0.110743,-9.398159,-3.804202,2.118704,-7.457243,9.959761,-3.178638,-2.536576,4.343056,4.671975,-4.305560,7.072246,-2.610643,7.545663,7.160276,-9.773051,2.731222,-5.195931,-7.919317,6.516378,2.071760,-0.036467,3.505242,-1.152874,-2.812133,-5.068162,-5.391171,7.870623,1.571278,-7.930779,4.345163,0.186294,1.887856,-5.779107,7.510964,-2.578936,1.287959,-7.404244,-7.849763,5.415982,-7.186384,9.357289,6.331874,6.008806,0.093784,6.177014,4.698936,0.011915,-3.719109,-0.653734,-4.131429,4.739651,-7.611884,-9.168389,-3.145440,3.806263,-6.403679,2.245344,1.602851,-7.382406,3.500164,3.183198,-8.787779,0.027145,0.537106,-1.174896,4.454258,3.884559,7.189373,-1.646007,0.795720,5.510265,-9.222576,5.459364,5.509086,-1.936664,9.659235,4.875364,3.651526,-5.849077,5.838568,-0.487730,-5.456609,-8.231486,1.728113,1.232438,-5.487574,-1.411710,-5.102297,4.183593,5.930915,-9.062116,5.549313,-0.982079,-9.602494,7.472828,3.237302,-4.013004,7.123888,-1.475745,9.579242,7.451305,-7.460948,-9.260313,1.600111,-2.991108,-7.444473,4.057318,5.898461,-5.255516,8.662003,1.693597,5.411243,-0.050107,-5.946345,7.838709,6.808011,3.845365,5.802441,-0.855120,6.635662,8.815872,1.741095,-3.242441,9.042259,-0.820705,-9.611069,0.548358,-5.769721,2.079175,-4.895540,-0.650870,6.199698,1.028817,-0.488295,-6.095235,6.203604,1.325671,-3.075727,1.684957,-1.540268,-5.344820,4.756003,-2.005350,-1.241630,-3.917688,-5.003046,-2.665809,-6.613337,-9.403744,5.124415,8.235801,5.777164,6.651686,-3.905825,0.309120,-1.239637,7.543646,6.157761,8.755520,9.339083,3.645729,8.988924,-5.428168,6.136910,-9.406357,3.567021,5.012791,-3.397810,-2.393014,4.245829,1.870037,-3.291913,0.558917,-8.662511,9.587261,-3.314298,6.437003,-4.965630,-5.397063,3.747854,-6.439104,-4.859566,2.172363,-7.596017,2.917036,7.598995,5.765378,4.071851,0.115049,-1.465987,-7.009910,5.907263,-1.131518,4.977391,-3.027364,1.327588,6.084877,-0.327807,-0.975926,-8.857781,7.305093,-5.045578,3.846518,5.914747,3.809662,8.053970,8.935874,1.782212,-8.923065,-1.019510,7.608285,1.199456,4.196760,3.788853,-9.638684,7.882539,6.166874,9.626522,6.711101,-3.586532,-2.998450,-6.545855,-3.336789,7.295646,-7.311673,7.169680,6.384601,-2.620791,5.640457,-3.894859,-6.882755,1.694088,8.853036,-0.377103,8.446850,2.938057,9.003556,6.024878,7.052573,-5.445254,-8.916247,-6.194936,3.688024,-0.512554,-3.012526,-8.703206,-2.528206,0.325754,-0.231397,5.077510,-0.937477,7.102868,-0.616226,4.757811,4.396776,-3.627157,-3.453724,2.097804,7.397019,-0.344025,-9.096291,-6.829405,-8.043159,-8.099680,-4.431955,-3.283728,-3.572035,-1.218958,7.600986,4.904209,5.596225,-0.778432,-5.087512,8.330665,-1.055796,5.467713,6.804595,3.911273,3.002295,-8.045378,7.610258,-6.699813,4.177156,8.073121,1.378715,0.145558,-7.959240,-5.569327,-0.669212,-1.982548,0.622034,4.232453,-3.364105,-8.178109,7.204791,8.175368,9.030271,-1.632098,-7.711373,6.693418,-0.055661,-3.684802,4.603238,5.531656,7.317136,-1.103426,-6.039939,0.057410,-5.737704,-7.406028,-1.776219,8.069502,-0.325703,-7.679127,1.957747,-4.870111,7.051583,-8.920948,5.807149,-8.101161,3.153048,6.965238,-0.167992,-8.570902,-6.145065,-5.210561,-2.278788,-3.978421,-4.089004,8.473463,3.083462,9.614583,5.200231,3.919248,-0.705301,8.016535,-8.400571,9.013733,7.353621,6.527615,-2.169270,-5.741560,4.650749,7.141544,-0.130691,5.813954,-4.433133,-5.505435,-0.285590,-9.678700,1.451434,7.974816,-8.961566,-9.031016,-8.634677,3.882965,-6.327161,-8.579608,6.888294,5.818405,-4.267219,4.438200,7.625965,-1.834826,4.162489,-8.978086,-0.514975,-3.793538,-6.978590,-3.511808,-6.757556,-1.389494,-7.855426,7.097750,-3.161504,4.555276,3.537646,-2.479691,-0.070561,3.796101,0.251104,-2.665303,0.786345,0.995755,4.758229,-7.335548,8.123212,-9.167045,1.927151,7.556480,-0.527005,6.303282,8.929115,8.595888,-8.988963,7.646887,-7.372887,-2.071367,-6.825001,-7.891021,9.964052,-8.207442,3.237079,-5.388718,-6.138926,-7.164508,-4.653621,-4.138706,0.016796,7.440039,-8.568161,-0.334307,-0.350661,-0.342157,-9.630999,5.729440,-6.194758,-4.560271,-4.337891,-4.613905,9.033821,-2.882774,-8.255159,9.531149,-5.627713,-2.095948,-2.035966,8.631595,1.118262,5.430164,-1.027448,1.433363,-7.306301,-0.574312,3.665107,4.795299,-1.910523,-2.301769,8.122388,-0.505884,3.877671,-0.859437,8.259280,-7.463462,-7.607312,-0.788253,-2.089581,2.434363,-0.939413,-4.750536,-7.159603,-9.978315,4.327117,-8.393898,-4.534947,-0.277967,3.405898,4.278334,-8.913469,1.989283,-9.018876,-4.387673,4.134417,1.229087,8.859125,7.741726,-6.509218,-4.682069,0.042588,-5.387090,-6.893881,5.854670,7.036984,-6.177625,-5.005625,-2.094957,-1.067913,-9.892484,-2.226031,5.739967,7.739900,-6.874363,-9.213536,0.232033,4.329806,6.035111,-2.736163,8.092276,-5.176570,6.767286,8.345502,9.011937,-6.259014,6.986473,0.466246],[1.083414,-8.944711,-8.125419,-2.491739,-3.956728,5.486784,4.144846,-0.924108,-3.086233,7.980825,0.938605,3.244444,-7.625405,-2.052235,9.578842,-0.815586,-3.706000,-3.244808,8.658984,-2.309245,-9.685247,1.272819,2.255665,-9.682727,-9.962395,-6.215602,-8.613785,-8.655087,7.246510,-2.652642,7.121519,2.902098,1.208999,-4.230761,4.618586,-7.604404,8.504707,1.985658,9.394804,-7.189347,0.881167,-6.810354,-9.448363,-5.191226,8.801174,-8.640567,6.460151,9.353503,6.941065,1.490429,-1.750259,-0.253225,-6.077406,7.466903,1.435964,0.457201,-7.958555,-3.126093,8.406586,-3.825729,-1.991337,5.591699,8.723547,-6.547610,-8.795175,8.633407,-6.880876,-2.289970,8.370925,-7.217791,1.106047,-1.129056,3.967212,1.224245,8.639658,-1.173667,-5.478502,-9.375648,-2.252000,5.693791,-5.889293,7.830933,-1.445778,9.486924,0.145674,7.760402,-1.674346,-0.363728,-5.509676,-1.108537,-7.386687,6.351908,-7.602868,-5.727862,5.782090,5.538078,-5.120614,-2.687383,8.570089,-8.724550,0.459493,2.355862,2.841476,-2.047648,2.018224,-8.581373,0.361407,1.343068,9.176057,-5.202655,3.612805,-9.394124,-9.049622,-2.405230,8.798367,7.369449,-3.958778,-2.393198,-3.392014,-8.986649,8.751072,0.050500,-7.085917,-8.436526,-2.756123,-2.294446,-2.041778,7.455420,4.495207,-6.066654,4.039381,-0.571222,1.995413,2.438249,9.458541,3.137319,-8.790753,9.175745,6.982135,-5.857892,-7.565138,2.894339,-1.050923,3.530288,3.533789,-8.317708,8.605632,-2.604199,9.773599,0.598046,6.848489,6.546355,5.097785,1.564338,-8.976224,6.567307,-5.514411,2.173101,6.878432,0.063628,2.257259,6.538185,-3.615635,3.013141,-6.889755,-8.737453,7.794329,0.089953,-5.650797,-1.214033,4.235330,6.497217,-5.514544,-0.583097,3.830790,-7.125648,5.462042,-3.652284,-1.292647,7.691078,-2.378931,-6.474902,3.295330,-3.207999,-4.627291,-4.002809,-5.235673,-1.246282,-7.059430,9.737150,-6.103746,-6.431649,0.563204,1.685942,-7.230902,-5.940080,-5.991655,3.446481,1.023147,8.884011,-2.833426,3.410225,0.043155,3.072872,-6.372117,4.199028,5.919586,-6.995533,-2.716990,-9.484457,-5.951268,8.871982,7.082517,-8.001796,3.803758,6.326502,2.399098,-7.965956,-2.274002,-8.387810,-3.098257,1.793537,-9.650489,3.469756,4.098193,7.005562,-3.742649,-1.468122,5.849847,-1.748963,-7.791155,-4.044007,-1.363992,-5.412853,2.214786,4.656714,-9.022428,6.132344,-6.971789,-4.302131,-6.251921,1.022661,-4.774175,-7.046750,-2.156178,-3.510336,-6.734415,-5.187951,-6.223290,0.725856,-6.024790,2.310338,4.647913,3.186224,5.977365,1.994576,9.701679,3.801630,-5.754975,-1.015371,-3.684543,9.842832,1.625542,-5.211341,-7.299127,1.264077,-0.509283,-9.246097,8.260620,-2.298391,5.456152,-8.193124,-3.983866,-9.281292,-6.923240,-2.814154,-7.112361,7.084349,8.788752,4.649267,-2.790082,-3.410179,4.930143,-7.388770,-2.897890,-3.271316,9.227908,8.069701,-0.499893,-1.862368,-5.213091,0.054007,8.115850,-6.409060,-7.389298,-9.425001,4.119152,-2.103228,6.146580,0.764089,3.468251,7.896277,8.477128,-3.159139,0.774179,-9.729288,3.036766,-7.847455,-8.561447,-2.982162,-1.802103,5.742203,4.079922,-2.050390,5.484869,2.479608,2.339203,5.649591,3.301159,-5.012408,-6.217108,-3.852836,4.586894,-3.548994,0.058120,-8.245097,-4.399600,4.178127,5.879715,-9.618680,-1.508936,0.700006,2.484435,-4.592726,6.869550,9.947636,9.310163,7.411163,-6.521198,-6.917422,-1.803046,5.424615,5.678766,5.211289,-4.485752,3.618367,6.169908,5.242266,6.257762,4.650358,-7.499121,-8.021242,-3.738309,-3.104653,-4.959935,-4.572209,-5.547214,3.448118,3.891096,-7.193307,-3.969419,-5.515061,9.982704,-0.168502,5.194485,5.512288,-4.810068,8.000602,2.546316,6.939913,-1.643727,0.498885,5.091558,-3.127578,0.618112,6.132629,-6.126537,9.746370,6.251650,-7.487206,4.172419,-7.481642,-8.257333,-5.413037,-6.881381,9.350826,3.390639,1.523078,1.650487,1.022123,-1.035230,-3.406430,-0.520675,-1.764479,-2.766459,-8.767557,-9.185135,4.394143,-7.982885,1.457492,-5.659659,-2.364611,2.342898,-3.847905,8.823798,8.312414,-7.329451,7.121265,7.363635,-3.809472,-0.836038,8.970616,-6.298126,6.070653,-6.796098,3.973926,4.527466,-6.328680,6.710204,0.196984,2.630081,-0.985691,7.611601,-8.585790,-6.489894,-2.546192,-9.971633,3.059612,-7.105208,5.010150,9.336852,1.965404,-6.892756,9.097107,0.183079,9.031353,0.529228,-5.539744,3.361504,1.937892,-3.122601,-5.452695,3.038748,8.923894,1.745138,-0.888150,1.485706,8.838089,-2.620730,9.896821,-8.803486,-8.383404,-5.114973,-3.230756,2.274210,9.043651,8.234376,-3.626081,-0.216893,-7.498985,9.428612,-5.323274,4.744163,-4.455731,9.125709,8.080501,-2.122921,7.053878,-9.510229,-1.529484,-8.856750,3.035550,-6.483575,-5.710373,2.418716,-2.918299,-9.416480,5.136431,-0.503638,4.807362,1.067747,1.776545,-2.863465,7.035840,-5.572292,-8.433964,9.995084,-6.208513,-6.986075,-9.527711,-1.441406,-6.911439,-2.641887,-3.260280,6.447661,-0.327954,-5.282528,3.223770,-3.375212,2.418818,-5.381210,6.117850,-9.241831,8.976983,6.529304,-3.855158,-9.181477,-3.587242,4.663758,-4.288716,-9.877065,2.377455,-5.770589,8.226122,5.091778,-8.596375,-5.786217,-0.816107,0.520920,8.720229,9.604567,-8.489759,-2.167552,-9.580954,0.456194,9.777522,6.176912,-4.397089,9.327336,4.814636,8.933958,-3.950105,3.586060,-4.317592,9.413151,7.541416,5.243064,-9.223249,-7.429301,1.111284,3.000879,1.377349,-8.556698,4.788715,5.804046,-7.916681,-7.704677,0.444374,7.633322,-1.470190,0.256444,-7.443984,-2.061172,9.706034,9.223481,-3.813031,1.607149,-9.200331,-8.536057,4.385398,-2.918711,-7.341150,-9.861528,-9.469566,9.455003,-7.641287,2.891061,4.456538,-5.816535,-4.711871,-5.126693,-1.922852,5.885971,4.184858,-7.777015,4.897691,-6.297756,8.837212,2.389859,2.039022,0.538386,-8.380714,-9.432934,-4.220175,-2.182500,-7.126489,4.052938,-0.183548,0.338817,-2.357360,-9.090918,-1.806085,2.340439,6.517612,-6.069626,7.803081,8.346324,-5.335541,-1.018733,-9.396095,5.510923,3.031318,0.174360,4.646260,2.532758,5.544358,-3.232374,-7.434249,3.055514,-6.985174,-8.141620,4.581575,4.969924,8.596391,-6.377083,-4.958336,7.504951,9.803449,1.162916,8.347673,-0.188753,-4.661055,5.551917,2.329142,8.642805,-0.623199,9.958139,9.825157,1.041832,-3.388320,-3.246790,8.883311,-5.585952,-2.603996,-4.833049,-1.227076,-8.838720,2.681412,-4.483400,1.962189,-8.219818,7.090709,1.939434,0.327036,-5.515488,7.372302,-9.947302,-3.987501,0.810560,8.322011,-4.151564,-2.263596,-5.510619,-6.275762,-4.872358,-9.261509,6.918353,1.005636,-5.163277,5.116239,-5.742590,2.647576,-6.991707,-3.387247,2.486875,0.594108,4.597437,-0.484868,2.839882,-1.565900,-8.732889,-9.614018,1.256119,3.043010,-0.051403,-9.981446,2.355589,-4.064575,7.920268,6.868028,-1.188258,-2.122831,-8.813414,3.486441,-8.800045,-2.296451,7.341265,-8.852753,-4.418663,-5.522798,5.907740,7.457065,8.105240],[-8.712580,-1.232997,6.485894,-3.971170,9.931387,-2.191359,-6.853802,-2.180036,-9.733852,4.919589,-0.234082,-7.402956,9.307874,6.565635,-2.571531,-1.858438,6.127575,-5.016159,8.451246,2.563502,4.361117,3.559045,-3.310889,-3.406583,3.306279,2.109781,1.668059,1.371563,9.899705,-4.466279,5.442393,-7.622114,8.262765,0.925240,7.295906,5.965000,-8.008830,-0.016947,0.902269,1.966466,3.358956,-4.219195,-9.763852,0.918161,0.903937,3.142386,-1.971409,0.054556,-0.597214,-1.279544,9.807785,3.151474,-7.164441,-7.240340,-4.599316,4.342995,6.797136,5.051173,2.253766,4.773378,-8.178039,0.380566,2.904611,-4.731421,7.255396,4.435188,7.680881,-8.223551,9.635724,9.408854,5.777490,7.120954,-0.123300,-2.130109,8.998912,-2.989013,5.120035,-3.307917,3.855707,-1.160098,2.737888,3.075598,-5.318933,-8.938904,0.341824,-7.364857,-3.738165,0.624029,-5.990235,-4.870270,7.621074,6.677828,-3.515638,9.336881,-6.216692,-8.597462,-7.826383,-3.484483,-4.948468,-9.098285,-0.825591,-9.305028,-4.220450,-7.541301,4.292531,-7.069797,9.029372,9.503050,1.430361,1.388693,6.316157,1.141803,-6.115449,-3.257315,-5.600749,-2.698616,4.025150,-6.147376,-4.122160,-4.323300,4.667752,-3.632519,-6.623837,9.842159,7.929093,-8.133412,-6.966061,-6.620686,3.490095,5.675504,0.462424,4.106191,-0.125857,-8.256128,-7.720152,4.308077,5.215944,-1.029802,2.274904,1.991785,4.516151,4.617307,7.863976,-4.360206,8.508691,-1.102479,3.210808,3.631435,4.373974,-9.490119,3.915284,-9.819708,8.003062,-0.147511,-0.882881,4.540659,1.616268,6.192753,-6.750902,-9.822912,-4.552607,-7.507046,-5.921985,5.475782,6.383282,4.832940,7.986749,9.976977,-4.376125,-8.937902,1.804345,-4.752531,-7.903676,5.146036,8.837639,-3.897732,3.986898,0.152564,9.281001,2.950791,-5.240120,6.427907,-6.026725,2.907081,-2.465949,6.281720,2.019160,1.681261,-4.748638,7.335245,-3.601135,0.926662,-5.757278,2.141550,9.430450,9.714279,8.609426,-9.240636,5.812021,-2.785662,2.457975,-1.544124,-0.356940,-9.669009,-5.960781,-6.599298,-2.193709,-8.060525,3.341252,-0.182426,1.925635,-6.772334,-4.215627,-8.750991,-7.745576,6.780194,3.687494,2.975633,1.936446,-4.736347,3.822587,-2.700105,-1.229019,-9.074632,-3.214015,-9.088326,-8.422833,-5.339114,7.167578,1.644417,-7.278321,6.777925,-4.138896,3.008653,1.454129,3.980427,-5.106829,-9.364499,0.834953,-5.290759,0.974021,5.193968,-0.208891,-2.199019,-3.759113,5.183373,-4.346334,-9.060199,0.721827,1.018838,8.817312,3.431352,-9.613228,-0.942234,1.352189,-8.026526,-7.911014,-5.106366,4.830661,-3.336176,-5.194750,-2.972598,0.345775,2.412763,-9.735049,5.778647,-5.036690,-5.262527,-7.900600,-5.520652,6.143426,-2.957811,-3.042743,-3.653938,8.223452,4.485907,5.547501,-9.768459,7.991401,2.459437,-8.007116,6.969830,-2.895914,-2.897204,8.375910,-1.640093,9.207619,-0.141592,1.631681,2.872115,7.985708,0.811150,5.021894,7.657091,8.548426,-1.418388,8.554279,-1.078317,4.744890,-8.329166,8.018406,-8.092930,1.019581,-9.803593,3.297207,2.821608,5.098366,6.300091,5.951033,3.351399,-4.470478,-4.510324,3.109499,7.776298,9.268718,9.027005,-0.630632,4.686363,-4.422142,-7.942571,-4.086948,5.977120,-7.517501,-4.930665,0.826229,0.237242,0.024016,-7.659502,-0.585334,-8.440159,9.927833,2.141531,3.227649,-0.944120,-5.766936,5.088414,-9.590303,-9.719881,-5.958070,-9.066538,-4.776985,5.956992,-4.703108,6.760716,2.069547,-2.156154,4.306313,-0.077431,5.861385,9.713611,2.171497,-4.884578,0.916921,0.851595,8.187742,8.451306,1.867208,6.397779,-7.847410,-4.548266,-0.736130,8.391354,-4.849541,-5.319087,-0.304397,-3.706430,7.740718,6.281093,3.432663,-7.462454,6.998597,1.970456,-0.073011,-6.107309,2.731813,-9.376983,4.949185,3.583527,3.726766,7.081696,0.809578,6.600207,-7.604130,2.580965,1.754983,-8.709595,-0.455589,2.093168,8.919355,1.161012,6.869302,-0.501749,5.394381,-0.467016,-1.874836,-9.841215,5.935968,-8.125289,9.896100,-4.319484,0.503750,8.850028,-7.324588,-4.128390,-8.156191,-9.382510,1.503298,-1.451593,-1.576021,0.328069,0.956868,7.661071,5.677870,-8.042469,2.812005,-0.321161,-2.518144,-3.317925,-1.160649,-9.236884,9.138058,-9.966477,4.277850,0.958568,-9.792580,-3.086857,7.589120,-6.355076,8.854016,9.229328,7.565752,3.280844,3.136100,-3.591590,-9.976710,-9.596116,6.334890,-6.189182,6.254808,8.889881,-1.859303,3.281569,0.800505,9.456370,1.042355,8.990536,-9.796579,-2.536259,3.725511,6.168465,4.606725,4.937298,8.779231,4.190292,2.714628,-3.301293,6.455350,9.543319,9.769345,1.516659,0.567351,-0.425163,-3.723545,0.163776,5.921364,6.558837,-1.132859,-0.459338,6.337303,5.547155,-9.025514,-5.494906,2.172698,-1.267879,-6.452333,9.380524,-1.978836,2.607718,-4.993737,-9.434018,-0.743688,-6.262237,-3.918159,-2.286302,7.440735,4.743482,9.816911,6.141684,0.765348,1.668432,4.186545,-2.372278,-8.714542,-9.813854,-6.789470,9.570744,6.643958,-7.780162,-0.195567,5.423647,-9.052430,0.063666,-0.541253,-2.493163,-8.538257,-7.094102,1.563847,8.594524,-1.108039,-0.439062,9.280903,8.996050,-0.597813,-1.524154,-4.259695,-7.208259,-1.447529,-0.141799,-9.805188,7.248846,6.300164,-1.482127,-0.680621,-6.514986,-3.063134,5.700981,-1.488537,-6.192559,-6.048252,1.105498,-9.297444,7.886403,0.365352,6.592236,9.090869,-6.189251,-7.876661,6.715739,1.977643,-5.528151,-9.250063,7.896061,-9.194504,6.826969,-3.465138,-3.091037,-4.452346,-5.882813,3.485789,9.822558,-4.484501,7.393706,7.693702,8.328672,2.227039,-6.502748,1.778515,-3.130780,9.203735,5.171503,0.473948,-3.330043,7.076392,2.669485,-0.975246,3.536223,2.875367,-2.363696,6.329244,1.259188,8.829659,5.700440,1.433899,-8.665177,1.899488,-2.272940,0.309975,2.861476,1.452162,-7.184398,7.456286,-9.860614,-9.710069,0.351030,-9.734608,-7.529523,-2.263217,1.466246,-0.889666,-5.555068,6.572495,-4.732924,7.244451,7.636287,-0.833085,3.600714,-1.075629,-2.963956,-7.997436,-5.695151,-4.887524,-5.253307,-7.912293,-0.895426,5.946647,7.377104,-7.742230,-6.490654,7.034745,-3.655631,1.946582,7.349841,-6.712332,-9.340036,-8.146889,7.902245,-2.156834,2.437688,4.687729,4.033966,7.677685,9.316310,-1.653847,9.503588,-1.573130,2.087378,9.043904,4.859716,8.673709,-2.469062,-2.683556,-5.727851,0.682766,-0.811479,-3.564011,-6.427855,-6.681169,6.150171,7.428487,-5.238118,-8.469193,6.955631,-7.925578,2.226518,-3.997250,3.003578,-8.254995,5.091171,-5.128487,-0.707461,5.824392,-0.899689,1.186504,-2.736237,-2.239329,-4.485820,7.924836,9.160328,-8.137808,1.707913,-0.807049,5.752803,-6.490143,2.698702,-1.283766,6.565173,-0.924258,3.658379,2.618724,-7.618418,-1.664402,4.254417,-3.288226,-8.863602,2.257898,1.195197,-0.797103,-7.539399,-6.875519,2.141038,-9.708187,-1.248781,-9.790662,-8.788526,-6.971037,-1.951036,7.305467,-2.091525,-9.023496,-5.628519,-9.604331,5.801295,-1.585456],[6.885482,4.127355,-5.896274,-9.631183,-9.686095,-3.732617,-2.954822,2.580786,-5.872173,-2.457487,-5.404378,5.785146,6.250304,7.894867,-0.794167,-1.539901,-0.713793,5.855317,0.989098,2.435970,-0.178452,-3.216974,-7.793579,7.379657,-0.243838,3.960490,-8.188927,6.045376,-5.314576,4.338743,0.100182,9.713913,6.054678,-6.409797,-8.889564,9.285169,2.511155,2.834690,1.513960,-0.946720,6.925438,2.681297,-5.420963,3.935007,3.707884,-1.260933,-4.335864,-6.292435,-7.888404,4.022594,-0.989506,0.788714,-0.470317,-6.327513,-4.855768,-5.036020,-5.499182,5.702666,-4.024892,-4.558567,2.546162,-7.832615,-9.679432,-6.361166,6.030417,3.046088,-8.908822,-0.769455,6.465807,-7.438965,5.477929,2.433226,-3.417684,0.758104,6.669305,-5.540234,-4.889829,9.706811,5.033477,2.604988,2.692364,4.392236,3.737359,-0.147140,-9.310312,-0.395739,9.606000,2.579573,9.495834,9.794939,-6.577678,2.136468,-9.347638,6.345802,-3.971793,7.529556,2.828434,8.651062,-0.553492,-6.831291,4.513092,-2.765007,-0.629108,-5.310799,-9.238903,5.547957,-3.332365,2.004266,4.324515,-6.154242,5.760540,4.682776,-2.761651,-9.319163,-1.225261,5.139912,1.505980,6.168452,-8.564366,0.801808,9.179596,2.247325,-8.441160,-2.479608,-8.384796,8.768742,-8.270436,-2.233338,-9.299466,4.710049,3.067772,-2.289993,2.220128,0.484338,1.176575,-1.263266,1.941563,-9.574895,5.536986,7.976875,-0.965768,9.050874,6.989925,0.207490,-6.625762,-2.317598,-6.310444,3.318965,-2.255092,8.470897,5.541082,-8.465792,0.310847,-8.160388,-9.382089,-2.650476,2.036538,4.907229,-3.779791,-8.179602,-1.282365,-8.127659,4.445640,-8.083740,-9.803635,9.855092,3.660643,-3.806281,7.424691,8.537455,-2.537615,-9.107560,-2.312884,-1.624226,-5.709418,4.254626,-2.802396,3.731460,3.152771,5.916994,9.803395,-5.051063,1.315587,-7.978478,1.325718,-3.838117,7.952055,7.639687,-5.336429,-1.941379,-2.365662,7.057420,-8.376236,-6.822910,-4.244112,2.423655,2.706552,0.383976,7.843842,4.732354,7.935668,-7.229702,-4.081003,-6.425836,-0.033457,5.897774,5.726668,9.063389,-4.984795,9.755567,5.876285,-4.955715,-3.179153,5.929588,1.287409,4.085495,-5.391139,-8.763795,5.356144,-1.440052,8.613610,6.561412,-5.072350,-5.943271,-9.380240,-3.710768,6.118918,-8.341542,-8.495755,2.282173,-2.341338,-7.327851,-9.872487,1.916035,-5.217009,5.353863,-5.237653,-6.236142,1.249010,5.618877,-7.320085,-6.841699,-0.221640,-9.071123,-2.743471,6.511898,-1.217685,-8.913039,-6.869584,-9.203770,6.731958,-2.313823,-1.783195,-5.885725,-3.657808,-2.885216,2.075960,-7.949034,9.649555,-0.060832,-0.910057,0.992773,-1.817587,0.289710,6.757850,9.272826,-5.404054,-7.914048,-4.527324,-4.156361,-1.929102,2.789112,5.162668,-7.533621,-8.724563,4.931964,-1.102562,1.882097,-5.279357,6.230474,3.378654,-1.809636,-5.294069,-3.730066,4.221420,4.379848,9.807956,-7.301912,-0.955741,-1.705003,0.750892,4.954828,-8.245617,-6.072123,-9.877094,-8.884832,-5.772481,0.453307,-8.206474,3.543738,-7.132688,4.929095,-9.375084,8.503045,-0.473945,4.624384,5.730919,8.190256,-1.118496,-0.782108,5.056198,-8.204439,7.008245,0.211629,4.714847,6.201776,5.296356,-6.065108,-1.380937,6.541206,5.543305,4.552142,6.732238,-8.886187,-8.167228,-2.630889,5.860227,-8.777302,-7.712306,-8.805681,-5.987337,-6.862310,4.838593,1.112195,-6.249299,-2.425475,-1.351745,-5.710593,6.003679,6.586433,3.103381,8.137015,-7.822736,3.047364,6.560884,-5.939627,6.012788,-1.493053,0.804735,2.530203,-3.929367,4.218565,8.819554,-1.825126,-4.955343,-2.910706,-7.530261,0.972927,2.458048,4.585839,-3.594642,3.090840,-5.976363,-8.580182,7.784197,1.367596,-6.356849,-7.950070,-2.145234,-4.526255,-9.876125,-4.899741,-7.364951,6.636904,-1.289475,9.936673,7.561361,8.529313,-8.296226,2.778174,1.784821,3.409961,-2.979758,3.321667,-2.785707,5.485533,-4.381381,3.269159,9.330581,7.106089,-1.431758,7.943779,2.444704,4.077321,-1.734450,5.326717,-4.820046,0.725828,9.508720,0.841919,-8.726056,-3.652074,9.904664,-6.464352,4.966773,-9.325814,-4.272811,2.507543,-3.939113,1.936956,3.017893,-1.824529,4.893982,-7.523012,-9.077353,-4.365751,4.552260,-9.033664,3.414872,1.621460,-5.419148,-4.777228,9.474826,-9.620748,-6.580942,4.821385,-5.925418,0.428526,1.492068,-3.235197,-3.562573,2.265488,-0.109001,-1.148464,-4.893611,-9.407821,4.394307,2.069871,-2.114844,8.144798,1.987600,-4.904013,-4.771340,3.976359,-9.379150,-5.955240,-4.572894,-0.985756,5.113792,-7.551580,-6.764644,-1.895618,4.191811,3.943604,7.322025,0.936759,8.260747,-9.681326,7.136531,5.612503,-4.292799,-5.520710,3.397833,2.297047,9.871290,-4.913735,-1.802277,-6.309894,-7.191148,6.420023,-5.451337,-3.395150,-3.695946,6.098688,-3.168258,2.301606,-0.845542,-6.599049,-5.463089,-3.373192,6.067247,-4.073079,1.014915,-9.178417,-3.457230,3.991625,-1.018631,-6.670930,1.808759,-8.732748,-0.112362,-9.297486,-9.993872,2.268224,-2.987083,-0.816921,-5.724215,0.451619,4.579369,-6.029386,2.689151,-9.617148,9.709461,-5.079478,6.120303,1.486879,2.086068,-4.757052,-9.047511,-8.757539,-6.369348,-6.023395,9.208585,-5.370277,9.931011,-7.672432,3.339766,-3.005333,8.705174,1.678972,-8.025265,4.256143,-2.227364,7.527347,1.238906,0.459369,-5.287973,-7.794450,5.408406,1.741463,4.011095,9.392025,-3.177027,-9.196720,-2.496736,-2.506395,-7.422648,-9.673571,-4.928779,2.689239,-9.878507,2.848097,-7.462660,-0.133594,-1.057458,1.233496,-4.893825,-8.602717,-2.337681,-8.798734,-4.316147,3.952591,-6.034940,4.953382,3.271206,-6.398117,3.305077,6.400284,-5.980944,1.773535,4.863970,-9.474801,1.821311,-7.649162,0.802922,7.579745,-5.290302,-0.540632,-7.613171,7.460223,-2.491838,7.184999,4.148639,-4.625462,6.273091,-3.653710,-7.693960,-0.587522,-7.928399,8.564657,5.904753,3.763214,-3.217604,9.735618,-4.397281,-7.702110,-8.170924,-0.746559,-9.878416,2.722825,7.970087,-2.180507,5.480989,5.937351,-7.205660,8.333758,3.083638,6.299708,7.117434,7.562103,5.243336,-3.720244,7.495424,4.538600,6.533557,4.673603,-9.930805,-7.201897,-0.655897,9.820129,5.739438,7.270561,-6.550589,-1.081474,3.088684,6.260622,6.661872,-9.434406,-3.467020,0.173629,5.166843,-2.315200,-1.430948,5.283980,3.103768,6.469986,5.844612,3.393310,1.357963,8.759149,3.565914,5.006136,9.091023,-6.895722,7.765687,9.013706,-8.088129,3.669914,8.860889,-8.486716,9.369126,1.795933,-4.234412,-5.438287,-9.001549,-4.217320,-7.603847,-9.688058,2.641971,-5.161218,-6.294495,3.650010,5.992097,-5.438547,2.400752,1.296450,-5.225465,-9.269986,-6.851479,1.820339,-9.096929,-1.718439,4.478370,-8.433323,5.236151,-5.438811,7.003743,8.222108,-4.961978,9.197080,-4.403450,-5.425240,8.345729,9.257386,-4.268357,-8.154165,-6.671529,1.754797,5.239176,-1.295826,-8.706330,2.334786,4.490809,6.050661,-7.520082,5.256557,5.887116,7.952202,-5.803803,-3.162703,0.536778,-0.466194,-4.012317],[-8.682843,8.043113,-2.984580,5.041653,0.154329,-0.220193,-7.971853,9.181631,8.742897,5.808730,2.372758,3.953607,-4.481793,-3.128852,-2.491293,5.753014,3.797162,-0.461187,-3.290248,2.805267,-9.904150,-2.961069,-6.756090,-0.436751,4.177273,-9.901485,-2.809401,-5.507694,0.767008,0.828834,7.871324,-4.646909,5.874764,6.226641,-3.312421,-0.700565,-9.967169,0.313447,-1.017987,7.181827,6.867653,2.358152,9.413482,9.754055,-8.822545,7.858481,6.195944,-7.676946,-4.821123,-1.675358,-2.459664,1.323884,-7.864067,6.043739,-9.851599,-6.028871,4.169063,2.839669,5.504578,9.426198,5.443276,-8.124304,-9.067370,-9.453475,-6.682203,7.080681,6.468883,3.320812,9.077177,-2.908091,8.970213,1.277830,-7.273753,-2.659843,4.931465,-0.673067,-3.141617,8.863639,5.070662,9.215290,2.232160,7.720981,0.173748,-6.965950,2.180325,-0.433960,9.181556,0.988997,2.609367,4.688792,0.490006,6.397412,-9.150081,-7.823901,-2.494153,7.449680,-5.693901,-6.755167,-6.462191,-5.997541,-8.694783,-8.928091,0.977364,4.117686,3.133841,6.461005,-7.972533,-0.907095,-1.837352,5.227451,-1.418555,-7.794336,3.605143,-1.620612,4.348689,7.084210,-1.101523,2.673425,-9.963010,-6.123721,1.040738,-9.257928,-4.733045,6.102999,-4.226851,-9.271254,8.272728,5.443974,6.682183,-7.601588,6.316918,-4.274792,-5.755694,2.205671,9.086364,-2.437874,7.974409,-7.739582,-6.048381,-0.087298,-1.869809,4.272270,2.057152,-6.992748,4.438629,9.025954,4.990827,-2.229410,9.191556,-2.966591,3.615674,-5.785558,4.866433,-3.433566,-3.296956,-7.898365,6.051142,-1.371399,2.302239,-9.234495,-2.975566,2.507485,0.900854,2.576413,5.399195,3.966727,-9.139728,8.763392,7.408168,6.115944,7.914013,-3.608671,-9.506844,5.913512,-6.211862,-7.613907,-9.783204,-8.581196,9.583087,-7.405094,9.335196,5.694732,9.770327,4.368090,-2.989803,-4.133840,2.725067,8.972813,-8.581722,3.629085,-4.159194,9.312979,5.552636,-0.042075,1.346806,5.747402,5.767819,-3.692524,9.632945,7.161848,7.525151,7.064293,-4.853351,-2.989810,-7.322422,9.313442,1.757663,8.201987,-9.626894,8.165610,-8.160064,-1.108602,5.051212,3.563888,3.850346,-9.587742,-3.699568,8.016513,-9.204482,6.243950,6.375225,4.192916,3.416346,9.946440,6.561336,4.456566,8.200204,4.898029,0.408140,3.730721,8.682599,9.788649,-3.470401,-4.398474,-7.118230,1.571025,2.941808,-3.381034,9.330917,-6.121138,-1.944813,-4.689513,-4.920346,-0.877244,-9.549257,-6.620532,0.086802,-8.586284,-5.081652,3.389890,-0.469129,-3.091700,2.358058,8.602545,-8.797380,1.783633,1.787911,-1.491097,5.097431,3.541805,-7.662923,2.756213,4.251971,7.920218,1.076394,-7.263504,1.478659,1.358793,3.140832,2.590965,-1.558425,-2.211891,1.247079,6.014820,9.122834,-7.688708,-4.097159,-4.288201,4.413794,7.515778,-0.644195,3.213244,-0.320196,-9.635393,4.939885,6.759936,1.020325,9.354321,-1.057100,4.628596,-8.010930,-5.643038,-0.437962,-9.282750,-6.038832,-0.580529,-6.448514,7.965523,-7.761653,-5.244684,5.007614,4.814969,-4.805668,5.842653,-5.851085,-4.612016,8.266458,8.718111,6.861496,4.558403,-3.320502,-4.971356,9.809964,6.050882,-9.161314,7.753521,-0.083147,-4.521420,-5.536134,6.360195,-4.398480,8.112498,-7.048196,9.475586,-7.062169,-3.860526,-9.478175,2.090908,-3.804771,8.659423,4.345210,-2.277215,-5.782641,-3.170391,0.189044,6.835276,1.098613,9.381623,3.940842,-7.727415,1.442375,-9.897056,3.868069,-4.636218,1.210956,-2.485086,-3.088314,-3.292542,5.663963,4.824132,-5.029595,7.345449,9.799342,-9.999647,8.237565,3.019026,3.704566,8.686998,1.781548,-4.964078,7.220681,6.248159,6.037370,-7.726035,-1.864782,2.063557,-6.019150,3.703845,4.900946,4.953251,-1.929342,-0.187994,-3.073401,-8.675754,2.796567,-4.169944,-6.075080,-1.098275,3.477287,-1.357736,6.431770,1.650966,-0.398095,5.200600,-6.364722,7.700697,8.039789,-5.466990,2.626261,-3.801761,4.778980,2.460933,-2.443539,6.702175,2.448168,-9.284219,-5.241051,-0.263400,-6.560454,-4.283734,-9.572431,7.113663,1.924875,-3.903654,-6.108171,9.958477,6.830074,7.581029,3.931820,-9.716189,2.438702,2.732454,-0.066989,-4.445181,8.726010,5.920629,-3.221542,-2.534567,-8.095014,-2.710239,8.517133,-0.730121,9.007687,-4.039615,-3.961155,3.048288,8.227910,7.465366,-3.106867,-6.226181,8.177823,-2.654363,-7.735249,8.741438,8.447306,-5.201593,-6.796218,8.338125,-8.773250,-7.250937,-8.701556,-1.652154,-0.466780,9.792356,-0.598148,-5.177181,3.283580,6.662009,4.704427,-5.475857,5.912405,0.161783,4.625353,8.396834,7.669781,4.865145,0.975311,3.626563,8.047062,-3.227181,3.055625,9.357000,3.467392,-9.783507,-4.353713,5.419968,4.909076,6.325805,-6.047732,9.762060,-1.668250,7.321127,-8.214102,4.729154,-3.603299,6.368189,-6.276301,-2.369922,-9.157302,3.212946,-4.987118,-7.120380,1.996966,-9.400644,-6.262940,2.544800,-1.163731,-3.099338,-6.751567,9.140675,0.593546,-2.173771,3.302682,-9.153261,0.005443,-2.330801,-9.527894,-2.708558,-6.254060,9.449426,-8.053203,3.276570,-6.943740,8.536545,5.143378,0.944949,-8.998584,9.286874,-0.692644,9.085361,0.004439,5.466314,-3.256691,7.366236,8.290168,5.691898,-5.933263,-1.555062,-6.270434,1.855964,-0.783873,-2.235638,-0.043510,9.803976,7.249580,-3.665260,-1.901935,7.356279,9.540524,-0.060966,7.449761,-5.302262,-2.570325,-0.394691,4.385635,7.149441,-0.867701,-3.080608,0.424724,-0.927118,-7.546550,5.423689,-5.391757,4.928247,7.280766,-7.776718,9.929051,-4.530060,-6.465760,-3.331438,-4.876039,8.868458,1.249545,4.633890,7.373494,-3.942162,8.240384,6.312960,-7.203660,2.192964,-9.735900,-0.736868,6.448975,6.530705,-8.351891,5.296495,6.948139,3.405924,-0.034637,7.865248,-6.175458,5.301496,4.505005,-4.780074,8.000148,-1.771612,0.589893,0.113478,5.271539,-0.890788,-4.968676,0.708203,2.778426,-4.870377,1.690468,2.095211,9.696786,5.678903,2.360232,-1.516533,-2.499699,-9.767530,-7.016957,-1.696985,2.766952,1.085154,-5.385423,3.568477,4.252666,4.624310,-4.371038,3.771118,5.177226,-3.089263,-5.543243,3.550560,2.806730,-8.601824,1.045427,-4.289904,-7.649771,-8.343188,-0.590538,-5.526717,4.240782,-1.740368,-7.453261,-7.893433,7.076992,1.042906,0.832142,-3.731912,-0.546847,-9.526472,3.679379,-3.407597,-3.817592,-1.660891,9.992764,6.134030,-1.353143,-9.920831,3.338097,-8.312957,4.984410,-0.389142,-0.598462,-1.240138,0.076173,-4.602749,6.977139,-1.635166,2.385122,-7.389258,1.765534,8.083879,6.627519,6.664816,-9.797843,5.150294,1.551152,1.147882,-4.302896,-0.979530,-2.438484,-2.292298,-1.548454,-0.474372,5.161664,-9.363862,-0.688180,-3.404650,9.225769,-1.911974,5.458434,1.982633,3.534635,-3.093943,-3.442055,7.218300,1.425192,-3.749850,3.097209,3.801206,6.516998,4.861965,-0.907902,-9.098216,2.693065,5.398927,-3.148336,5.833825,5.195008,-8.897764,2.690035,0.587460,7.084431,-6.681715,-1.279142,-9.716063,0.134210,1.478994,3.858622],[0.423174,-1.308593,-6.142945,6.522140,-6.853339,3.391352,9.451148,-4.769006,-8.296342,-9.976654,-2.661734,-5.677088,7.377846,1.649355,0.445463,-1.344337,2.383677,-0.453592,2.335200,-3.708448,-6.221919,-4.743528,-1.724484,-0.505653,4.785298,8.218961,9.108347,-5.672985,4.176949,7.514535,-8.449603,9.309274,-3.416835,1.656383,3.811533,7.742675,-5.153429,1.571159,5.950597,0.101318,3.575504,-2.641785,-0.784378,1.517077,-5.135526,2.577794,-7.909129,3.202668,-6.165668,-2.931135,-3.580688,8.486339,-2.529191,6.406445,0.142594,-1.822186,4.255866,5.906348,8.568853,8.452609,-7.800075,-0.653528,2.288664,0.538302,3.032950,4.608586,-8.885870,-4.648072,-5.650224,-6.264065,-0.870422,-5.752594,0.134739,3.268586,-2.709534,8.414622,7.877557,6.447776,1.617806,-7.110467,-8.741100,-2.659599,6.212385,3.384736,-0.605526,6.358306,-7.453706,-5.350483,7.175897,-7.420903,-5.048360,-8.749886,-9.662288,-5.447949,2.576481,-6.532381,-2.891518,-8.848611,7.705391,1.130718,6.434337,-9.175082,-4.696193,6.092766,-0.190028,8.678693,9.849801,0.850882,2.212298,9.562615,-1.898010,9.668171,-5.465020,-2.130742,0.829943,6.166118,-6.304104,0.068297,-2.872531,7.504004,-5.647299,0.660725,-5.741010,5.209993,-6.189408,-2.479897,-7.019501,-8.196090,3.880286,-0.776481,-9.359091,1.911512,8.296622,-6.046096,-6.476787,7.336940,-2.214318,-1.467464,5.994316,7.911574,2.910411,-5.256748,7.505248,-3.642753,-3.748216,1.970255,1.657576,8.703335,1.370748,-5.222981,2.508607,8.898208,2.901003,9.294880,5.325780,-5.087467,-1.643270,2.714361,0.986985,8.549367,-3.560658,8.302677,8.234189,5.295858,-6.822783,-7.092600,9.173208,4.878682,-5.019627,3.071120,1.934540,-4.081806,-2.421271,5.200230,1.407009,0.770901,-1.946956,0.526418,-7.183710,-7.915079,5.802954,-5.644546,-1.464033,9.771560,-7.094231,0.135908,-3.487264,-5.566166,0.725232,0.357034,-0.378270,-2.174111,4.262714,-3.825331,-7.351759,-6.441607,-2.098524,-8.687826,-5.456461,1.561799,-0.286374,8.634120,-8.130820,-8.659637,7.212629,-8.185899,-7.733748,-5.208736,0.034831,1.180639,-8.177536,8.221226,9.083663,1.673400,0.423191,-9.594129,1.858534,-3.866737,1.661062,9.451437,-7.519021,-4.821825,7.853636,-9.949738,-6.371683,-6.880330,9.855887,8.928581,-4.725253,6.614500,9.628948,6.884428,8.415491,-6.934686,-7.854847,8.393201,9.652606,-8.489529,3.453962,8.874506,-8.191609,-7.615557,4.036627,-6.177258,-1.100027,2.401022,-6.115222,0.662970,3.639901,-8.687100,7.086635,-9.900468,-3.223793,7.294251,-0.611082,6.306657,8.525529,-2.274633,3.494236,-4.822189,-1.989056,6.847424,-4.534329,-6.906493,-0.346661,-9.721561,2.313036,-6.999246,3.217764,7.084146,9.547454,-1.520410,-4.402324,6.076672,-2.749130,8.869174,-7.934496,0.638822,8.306988,-6.336654,-9.376091,-1.006227,9.705457,0.596742,-5.373701,-4.084772,5.785311,-5.566741,-1.499707,4.419050,6.449908,0.591630,9.827016,9.849802,1.210095,-0.547222,-0.453696,6.394681,-9.910298,-3.539843,0.590417,-8.753070,6.395038,-6.738801,-6.152258,-2.634547,-5.549052,9.701002,-7.377105,1.251899,-6.009955,-3.539269,-6.599113,4.411909,-3.461945,3.643315,-0.995242,9.642640,8.647914,3.006674,0.090995,1.670069,-8.274739,-4.096135,0.976319,-1.610328,7.734581,-3.335918,-8.801392,-4.502705,9.688211,-4.795000,6.671271,-7.411518,1.075224,7.186358,4.965279,-8.545102,7.610476,8.604094,-9.635730,1.916568,-8.885745,7.621103,9.867708,8.980954,-0.310774,-0.811994,4.157356,-1.260891,6.783196,-3.507919,-9.805248,-3.857598,8.772484,0.301059,0.141631,8.483006,-5.023045,-5.790838,2.148817,0.115247,7.627104,3.099416,-1.351676,8.929537,3.615365,-5.775850,-1.265996,-4.820749,-9.102850,-9.511358,-3.955114,0.198170,-1.239119,-9.506610,-1.805362,6.519945,0.597605,-4.658828,-6.276729,4.703610,9.153303,-6.891267,-7.359822,6.958625,-0.215252,-1.761917,-7.548787,9.697163,5.480993,-5.689361,4.085805,3.097749,-6.947904,-4.260621,6.669793,8.059155,-3.164550,1.161905,-4.452488,7.968256,-7.905971,3.597213,-8.174041,5.096066,-3.089066,4.113743,-3.611908,-1.580010,-9.279151,9.147519,9.954021,0.410191,-5.993016,-0.759729,4.187900,5.061314,-8.667500,-2.749366,-1.268967,-2.813695,6.543387,-5.114858,3.430676,5.377972,-7.522567,1.753461,3.416817,0.909001,5.125270,-9.723574,7.545622,-2.035535,-1.285189,-9.168717,0.324085,5.190395,-3.857014,-8.895944,-5.116815,-8.703755,-9.992862,-0.282035,-2.405213,-4.520304,-4.104597,-6.561160,-9.531773,6.760182,-2.936770,1.771340,-8.369328,-7.028311,8.526575,-5.041402,-4.436335,-5.962275,7.623949,-8.554410,-8.223071,1.931172,1.022496,-0.895648,1.602646,-6.352125,-6.378318,7.549385,-7.904015,1.040440,-5.591725,-6.532908,-9.721097,2.250442,8.785977,5.867873,-6.052731,-2.147185,2.218764,-8.545966,-7.049399,-1.741155,-4.982592,-8.402207,7.098304,-4.123901,3.651188,7.672524,3.950631,1.910601,-3.752669,-7.229228,-1.178341,1.883194,-3.397870,-5.781786,-1.495986,5.074073,-4.683135,-2.125952,4.484803,3.886811,4.245215,8.193129,5.972682,2.650332,1.213547,5.240957,8.280238,1.581921,-7.497755,-9.323724,-4.238236,6.784800,5.885802,2.570756,6.960359,-6.433221,0.934354,9.173089,-7.630631,-3.689067,9.818622,7.409780,-6.528044,-7.607034,-3.785859,-7.998512,-2.729343,8.608186,0.360769,-5.032063,5.134745,2.849600,-4.479598,-1.657485,5.617377,4.890071,-2.197101,7.504687,1.235050,2.285709,1.996923,8.901413,6.719472,6.276291,6.031479,9.164570,-0.328761,2.966128,-0.860205,-4.674159,-3.951290,-5.036862,-5.472202,-3.772544,0.974738,-2.774019,2.620492,-9.941106,-5.899342,9.430730,2.117932,5.553388,3.555195,7.476919,-3.824716,3.828333,9.277225,7.869256,-3.172560,9.775762,5.850247,-1.191734,9.170439,7.373815,-5.405588,3.417875,-8.172745,-7.226831,4.609735,0.565418,9.795337,8.884984,-6.953951,-0.967904,-5.352795,-7.902892,4.005129,-7.556366,5.009877,2.136313,-7.997288,4.579480,3.604739,-9.138569,8.000995,-1.370549,-9.260801,1.200556,-3.888876,8.149839,-3.240182,-7.370115,-9.909739,-1.048906,-2.623291,-1.797967,5.339676,6.860982,6.543307,7.029902,6.732025,9.457941,8.566011,-5.063536,-1.632913,-9.683759,4.843820,0.396993,8.365517,8.646052,5.733892,-7.818827,-4.239151,8.153074,3.793398,-4.955941,-0.758015,8.542848,2.700928,5.822886,9.565875,-5.511109,-1.764675,8.222398,6.267699,9.679525,-5.311715,4.152523,-8.978691,-7.581674,-8.232324,-1.214455,-2.233222,-2.165169,-4.013604,7.673296,-7.128627,-1.910369,1.333905,-3.149468,7.183163,1.496597,-4.490299,-0.448295,5.069371,-1.952056,8.736220,-1.209907,-8.033581,7.352973,-0.072164,5.643813,-6.571317,3.758328,7.986817,6.843945,-0.510610,-2.993184,6.912690,5.162499,8.553889,-7.388042,-3.624842,-8.570521,-4.423499,6.212648,-8.706038,8.147760,3.360885,5.520023,-2.313150,5.796943,3.206527,8.812066,-6.305205,-5.298940,5.244338,-6.591127,8.365725,-8.937201,6.670081],[9.449959,-6.052568,-6.546478,2.248529,-7.797980,-6.915025,-4.980156,9.160491,7.038944,-5.326700,6.798014,-4.614948,-4.230341,-3.569859,0.573568,-6.840783,-0.865445,1.931643,-4.704131,-1.532672,9.549614,-3.178604,-5.428584,9.608880,3.481206,1.923173,5.244984,4.887798,-8.763151,9.811845,7.457380,-0.138039,-4.749833,-4.388427,-0.528640,-8.882102,-1.869411,-7.849969,-4.253329,-8.539460,4.820318,0.516590,4.080856,-9.922273,-2.429164,-1.637081,-8.115139,1.241825,-2.183679,3.365484,-9.118130,-7.884710,8.001566,-6.256023,9.211695,3.197071,-5.034996,4.677382,0.714284,9.228918,7.081255,1.779013,-3.705407,2.535786,7.080079,-5.208362,-9.878960,-3.958048,8.946037,0.343166,9.243280,4.905244,5.435059,7.377899,4.356260,6.081945,-2.594638,-9.318371,8.033950,-9.874879,-0.535695,9.488573,5.325447,-0.343185,-7.742359,2.774634,3.718324,0.666581,-9.981679,1.459152,-9.746611,-5.729140,-0.950356,9.392469,-1.805383,-6.374576,-4.073107,8.650779,9.678286,-4.660473,-0.932674,1.168147,2.724833,-8.857246,9.223021,1.236124,-3.007928,8.618314,-9.080365,3.678705,-0.470585,3.468911,6.933438,-6.204023,2.986887,-6.680597,1.516530,4.092956,-0.446567,-5.806552,9.208004,1.922265,1.426344,-7.550067,-0.961910,8.609327,0.978369,7.729809,1.079292,3.638524,3.805461,-8.715344,2.495062,2.465594,-7.547794,-5.225754,5.864925,8.074957,-9.448952,-6.472997,1.687909,5.644333,-1.666881,7.738943,-7.118342,-2.786582,-7.757278,-1.865503,-1.155039,-0.516460,9.090074,9.887633,-5.741514,-4.643063,-6.606870,7.734065,-0.759911,8.346421,-7.698111,-5.251750,6.843764,-7.429751,-4.526023,-8.823773,-4.667423,6.441034,8.756728,-9.529154,6.806383,-8.571664,3.210933,-6.608436,-8.841903,-9.116560,-7.756759,9.998824,-3.236808,-2.849599,5.837714,1.789760,5.559903,7.561575,1.306409,-8.467662,-7.336458,9.225775,5.183430,6.364092,1.898839,-8.019337,2.229450,5.688440,8.376422,-7.120190,-4.374076,-3.259111,-2.271745,-4.711984,1.811127,-9.837251,3.889903,9.194078,8.779900,-2.887098,-2.756327,3.430795,1.478768,4.497356,-5.397186,1.370738,-6.782876,-3.449611,5.076066,-8.504563,8.171524,6.558747,-3.649560,5.555745,7.159945,-3.764553,-9.790641,6.777103,6.312004,-7.794311,-4.243971,-4.048172,9.394677,8.244876,-3.396350,8.835240,8.412793,-4.890563,7.173040,4.591528,-5.947191,8.667208,8.597650,-6.388755,0.021544,-1.887449,-5.407334,-7.764187,6.151291,-4.072594,-8.449793,-3.443108,-7.976965,6.272889,-4.953097,4.034639,8.405274,-1.595758,5.727477,0.254931,3.758314,2.514959,-2.843742,-5.739216,6.644091,4.562826,-8.972063,6.787197,7.736120,8.611798,-8.110365,-7.022202,1.462683,-8.315811,2.531047,5.985307,-0.854173,-0.730697,6.207889,-3.148144,6.520366,-0.112515,3.732332,1.342716,-2.506288,5.938373,3.310111,-4.804643,-2.531868,9.725984,-0.385436,-8.864767,3.165804,-3.580882,2.687625,-8.770362,-1.977545,1.580112,-4.446015,-7.168461,2.828268,9.472176,9.875761,8.735264,2.831544,7.719242,1.729102,-5.600621,-8.882494,9.532624,2.492360,8.853539,-8.015377,-2.237504,8.645789,-6.466216,-9.869578,4.487475,9.821968,7.997130,1.681021,0.314694,-0.298901,-6.385875,-6.949314,4.136962,5.527131,8.991271,8.864674,-9.362305,2.997359,6.524067,5.741841,7.338005,9.782813,0.070230,-6.176110,4.580566,-4.103490,7.046926,-6.615482,-7.574286,1.182340,0.971997,8.397338,6.172291,-1.509472,-1.535147,5.714280,5.795852,-8.797153,-0.808358,3.519471,-7.113819,1.385837,-1.835253,-9.416318,2.617580,-4.023626,-2.443846,-5.038547,-4.833768,-4.383078,-0.750035,3.773995,-6.756061,-6.931055,-7.481217,-7.457740,5.512077,-4.282277,8.751970,3.470119,5.049704,-5.453186,6.723794,6.312935,7.672746,5.750154,-7.221387,5.445516,-4.014101,3.642425,4.497591,0.666439,8.668637,-1.310511,-9.563250,0.160669,-5.904064,0.471259,-5.799354,8.062581,-1.301608,-8.468325,4.300454,3.853071,5.744989,-7.592717,5.295110,-2.317469,-1.817593,4.631720,-7.271747,-6.562250,-9.037567,-4.493270,-7.351029,0.200861,-3.703011,1.366686,0.013742,-3.506507,6.911590,-7.477084,-5.559558,7.714763,3.491738,-4.228170,2.143164,-6.999208,-9.677950,9.830487,0.044486,-5.675585,-8.532060,9.901143,-9.096209,-3.291282,2.060890,-5.323522,5.315562,-5.635112,9.358781,-9.627657,6.608063,-9.645114,-9.720221,-5.980090,-8.169252,5.851129,9.791782,4.789352,-0.040135,7.090838,-5.777412,-5.596170,-8.235262,-4.896654,1.024968,-5.158402,-6.250670,-4.362345,-6.970436,-2.356549,7.537110,8.819588,-8.301057,8.960266,1.443355,-2.220463,-1.261502,4.551442,2.863860,-1.963714,2.867759,3.458902,-3.582947,-6.366550,6.243086,7.754083,-4.333062,7.964128,5.620375,-5.047592,1.281285,-3.837526,4.916744,-7.194834,-1.708556,4.255129,-1.206411,5.176413,-3.966292,7.531987,-1.536868,7.726276,-7.772349,6.058406,0.879805,-7.575762,9.964808,-9.340595,-3.517156,1.345579,-2.123845,-5.160657,-0.386528,4.590527,3.477848,-4.621599,7.196832,7.797100,-2.471973,-1.726759,-7.539853,-8.361930,1.722209,-4.318864,-0.663603,-9.016728,-2.193723,1.637260,-3.639394,6.751321,0.917925,4.509995,8.935081,-9.506599,-4.745398,2.399865,9.009166,-7.907709,8.135415,9.900666,-1.659678,-5.426149,-1.980286,9.665482,-6.144295,9.003572,-9.995581,-8.372999,0.624471,5.704581,4.548879,-1.562329,5.012466,-4.231353,7.584606,-4.547829,9.940463,-0.499801,-3.006061,9.554648,-9.587434,-0.614385,9.223068,0.517155,-8.180640,-3.256743,1.727082,-9.300065,8.984260,7.260039,-3.261349,3.446385,-4.160471,-7.913741,7.987948,1.570215,-9.436644,2.338201,4.353441,-5.828619,3.523646,4.738287,3.858809,9.375167,-5.494301,4.034544,-5.135517,2.741090,-5.852343,1.990061,3.833686,3.779828,6.485125,7.256203,1.178500,-1.660278,4.239790,-2.081394,5.705456,6.110896,-8.487827,8.219449,7.201527,-1.624645,-6.770028,-3.090036,-6.194013,6.705316,-0.687342,-4.993857,-9.173062,-5.167543,2.335498,-7.242535,6.801095,-1.965319,-0.429085,-6.878530,-5.741275,4.558569,0.072638,-6.658219,9.248021,1.360914,8.155173,-7.973569,-7.396047,7.481467,8.807294,-2.838113,3.392250,-5.964287,-0.449594,-9.432468,3.580876,2.822357,1.131815,7.241142,8.461957,-3.129677,-5.732851,-7.910690,7.952826,-3.369888,8.802820,7.415546,-2.334551,-4.142075,2.795420,0.082995,-2.995745,9.176526,3.523104,4.954299,1.550113,1.186542,-3.358356,-8.238033,5.162062,-3.311403,8.853504,5.686797,4.503119,6.531598,-4.825059,-7.306792,4.647139,-9.118320,-9.199456,-4.897015,7.857911,3.667390,0.910530,-5.455538,6.672734,-8.773641,-3.498835,-0.189819,1.826765,-8.313044,-2.169085,0.280399,-7.556118,-6.662013,1.456042,-2.914311,-2.686492,-5.432311,7.592118,-8.065964,7.706796,-6.888497,1.754936,3.703458,-6.155787,-6.157257,-7.408869,-6.766559,-0.585301,4.310610,2.974594,-7.861885,-7.801597,-0.351863,5.083698,-6.127211,8.159647,2.906596,6.937123,2.460685,-6.135339,-8.568977,3.590851,-6.423639]], dtype = "float64")#candidate|10908|(10, 693)|const|float64
bop_10909 = relay.minimum(uop_10826.astype('uint16'), const_10908.astype('uint16')) # shape=(10, 693)
bop_10912 = relay.minimum(uop_10828.astype('uint16'), const_10908.astype('uint16')) # shape=(10, 693)
output = relay.Tuple([call_10836,var_10837,const_10838,var_10839,bop_10870,bop_10890,const_10895,bop_10897,bop_10909,])
output2 = relay.Tuple([call_10840,var_10837,const_10838,var_10839,bop_10873,bop_10893,const_10895,bop_10900,bop_10912,])
func_10919 = relay.Function([var_10837,var_10839,], output)
mod['func_10919'] = func_10919
mod = relay.transform.InferType()(mod)
var_10920 = relay.var("var_10920", dtype = "int32", shape = (1680,))#candidate|10920|(1680,)|var|int32
var_10921 = relay.var("var_10921", dtype = "bool", shape = (3360,))#candidate|10921|(3360,)|var|bool
output = func_10919(var_10920,var_10921,)
func_10922 = relay.Function([var_10920,var_10921,], output)
mutated_mod['func_10922'] = func_10922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10095_call = mod.get_global_var('func_10095')
func_10096_call = mutated_mod.get_global_var('func_10096')
call_10978 = func_10095_call()
call_10979 = func_10095_call()
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_10996 = relay.TupleGetItem(func_9701_call(), 0)
call_10997 = relay.TupleGetItem(func_9702_call(), 0)
func_4733_call = mod.get_global_var('func_4733')
func_4736_call = mutated_mod.get_global_var('func_4736')
var_11003 = relay.var("var_11003", dtype = "int8", shape = ())#candidate|11003|()|var|int8
const_11004 = relay.const([[4,9],[-10,6],[-1,3],[-1,6],[3,-3],[3,-9],[-6,-8],[6,9],[1,9],[3,1],[10,9],[8,7],[-3,2],[-10,-3],[-9,-3],[7,4],[9,9],[9,-7],[-4,2],[4,-3],[2,4],[-6,10],[-8,-2],[-4,4],[10,-5],[-5,-9],[1,-3],[1,-1],[-1,4],[-4,7],[-7,6],[5,-3],[5,-5],[-4,-9],[4,-9],[8,-7],[-7,-8],[-7,-10],[4,-6],[-7,-4],[-10,-3],[3,-7],[-4,3],[8,-10],[-5,3],[-5,-8],[2,8],[2,-2],[-2,7],[6,4],[2,-1],[1,3],[-2,-8],[3,6],[10,5],[-9,-6],[-1,-8],[-7,-7],[2,-9],[-9,-9],[-3,8],[4,1],[9,8],[2,-8],[-5,10],[-9,-10],[4,3],[4,-4],[2,-10],[5,10],[7,1],[2,-4],[6,-10],[10,-7],[1,-8],[4,1],[4,-2],[-5,3],[2,3],[5,-2],[3,9],[4,-8],[6,10],[-7,-7],[2,-10],[-4,9],[8,2],[1,-8],[6,8],[3,-4],[3,2],[5,-1],[-9,-4],[-3,-2],[6,8],[-8,2],[6,-5],[-7,10],[5,9],[1,8],[10,-4],[-6,-6],[10,2],[2,5],[5,7]], dtype = "int8")#candidate|11004|(105, 2)|const|int8
call_11002 = relay.TupleGetItem(func_4733_call(relay.reshape(var_11003.astype('int8'), []), relay.reshape(const_11004.astype('int8'), [210,]), ), 2)
call_11005 = relay.TupleGetItem(func_4736_call(relay.reshape(var_11003.astype('int8'), []), relay.reshape(const_11004.astype('int8'), [210,]), ), 2)
output = relay.Tuple([call_10978,call_10996,call_11002,var_11003,const_11004,])
output2 = relay.Tuple([call_10979,call_10997,call_11005,var_11003,const_11004,])
func_11006 = relay.Function([var_11003,], output)
mod['func_11006'] = func_11006
mod = relay.transform.InferType()(mod)
var_11007 = relay.var("var_11007", dtype = "int8", shape = ())#candidate|11007|()|var|int8
output = func_11006(var_11007)
func_11008 = relay.Function([var_11007], output)
mutated_mod['func_11008'] = func_11008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10595_call = mod.get_global_var('func_10595')
func_10596_call = mutated_mod.get_global_var('func_10596')
call_11028 = func_10595_call()
call_11029 = func_10595_call()
func_9835_call = mod.get_global_var('func_9835')
func_9839_call = mutated_mod.get_global_var('func_9839')
var_11035 = relay.var("var_11035", dtype = "uint64", shape = (700,))#candidate|11035|(700,)|var|uint64
var_11036 = relay.var("var_11036", dtype = "float64", shape = (25,))#candidate|11036|(25,)|var|float64
const_11037 = relay.const(-9, dtype = "int8")#candidate|11037|()|const|int8
call_11034 = relay.TupleGetItem(func_9835_call(relay.reshape(var_11035.astype('uint64'), [700,]), relay.reshape(var_11036.astype('float64'), [25,]), relay.reshape(const_11037.astype('int8'), []), ), 10)
call_11038 = relay.TupleGetItem(func_9839_call(relay.reshape(var_11035.astype('uint64'), [700,]), relay.reshape(var_11036.astype('float64'), [25,]), relay.reshape(const_11037.astype('int8'), []), ), 10)
bop_11053 = relay.bitwise_or(call_11028.astype('int32'), const_11037.astype('int32')) # shape=(1, 693)
bop_11056 = relay.bitwise_or(call_11029.astype('int32'), const_11037.astype('int32')) # shape=(1, 693)
bop_11059 = relay.right_shift(var_11036.astype('uint16'), const_11037.astype('uint16')) # shape=(25,)
var_11072 = relay.var("var_11072", dtype = "uint16", shape = (25,))#candidate|11072|(25,)|var|uint16
bop_11073 = relay.subtract(bop_11059.astype('int8'), relay.reshape(var_11072.astype('int8'), relay.shape_of(bop_11059))) # shape=(25,)
output = relay.Tuple([call_11034,var_11035,bop_11053,bop_11073,])
output2 = relay.Tuple([call_11038,var_11035,bop_11056,bop_11073,])
func_11076 = relay.Function([var_11035,var_11036,var_11072,], output)
mod['func_11076'] = func_11076
mod = relay.transform.InferType()(mod)
var_11077 = relay.var("var_11077", dtype = "uint64", shape = (700,))#candidate|11077|(700,)|var|uint64
var_11078 = relay.var("var_11078", dtype = "float64", shape = (25,))#candidate|11078|(25,)|var|float64
var_11079 = relay.var("var_11079", dtype = "uint16", shape = (25,))#candidate|11079|(25,)|var|uint16
output = func_11076(var_11077,var_11078,var_11079,)
func_11080 = relay.Function([var_11077,var_11078,var_11079,], output)
mutated_mod['func_11080'] = func_11080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10741_call = mod.get_global_var('func_10741')
func_10742_call = mutated_mod.get_global_var('func_10742')
call_11085 = relay.TupleGetItem(func_10741_call(), 0)
call_11086 = relay.TupleGetItem(func_10742_call(), 0)
output = relay.Tuple([call_11085,])
output2 = relay.Tuple([call_11086,])
func_11101 = relay.Function([], output)
mod['func_11101'] = func_11101
mod = relay.transform.InferType()(mod)
mutated_mod['func_11101'] = func_11101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11101_call = mutated_mod.get_global_var('func_11101')
call_11102 = func_11101_call()
output = call_11102
func_11103 = relay.Function([], output)
mutated_mod['func_11103'] = func_11103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11112 = relay.var("var_11112", dtype = "float32", shape = (4, 3, 6))#candidate|11112|(4, 3, 6)|var|float32
var_11113 = relay.var("var_11113", dtype = "float32", shape = (4, 3, 6))#candidate|11113|(4, 3, 6)|var|float32
bop_11114 = relay.greater(var_11112.astype('bool'), relay.reshape(var_11113.astype('bool'), relay.shape_of(var_11112))) # shape=(4, 3, 6)
output = bop_11114
output2 = bop_11114
func_11126 = relay.Function([var_11112,var_11113,], output)
mod['func_11126'] = func_11126
mod = relay.transform.InferType()(mod)
mutated_mod['func_11126'] = func_11126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11126_call = mutated_mod.get_global_var('func_11126')
var_11128 = relay.var("var_11128", dtype = "float32", shape = (4, 3, 6))#candidate|11128|(4, 3, 6)|var|float32
var_11129 = relay.var("var_11129", dtype = "float32", shape = (4, 3, 6))#candidate|11129|(4, 3, 6)|var|float32
call_11127 = func_11126_call(var_11128,var_11129,)
output = call_11127
func_11130 = relay.Function([var_11128,var_11129,], output)
mutated_mod['func_11130'] = func_11130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10095_call = mod.get_global_var('func_10095')
func_10096_call = mutated_mod.get_global_var('func_10096')
call_11180 = func_10095_call()
call_11181 = func_10095_call()
func_10741_call = mod.get_global_var('func_10741')
func_10742_call = mutated_mod.get_global_var('func_10742')
call_11186 = relay.TupleGetItem(func_10741_call(), 0)
call_11187 = relay.TupleGetItem(func_10742_call(), 0)
output = relay.Tuple([call_11180,call_11186,])
output2 = relay.Tuple([call_11181,call_11187,])
func_11196 = relay.Function([], output)
mod['func_11196'] = func_11196
mod = relay.transform.InferType()(mod)
output = func_11196()
func_11197 = relay.Function([], output)
mutated_mod['func_11197'] = func_11197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10811_call = mod.get_global_var('func_10811')
func_10813_call = mutated_mod.get_global_var('func_10813')
call_11198 = relay.TupleGetItem(func_10811_call(), 0)
call_11199 = relay.TupleGetItem(func_10813_call(), 0)
output = relay.Tuple([call_11198,])
output2 = relay.Tuple([call_11199,])
func_11200 = relay.Function([], output)
mod['func_11200'] = func_11200
mod = relay.transform.InferType()(mod)
output = func_11200()
func_11201 = relay.Function([], output)
mutated_mod['func_11201'] = func_11201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10262_call = mod.get_global_var('func_10262')
func_10264_call = mutated_mod.get_global_var('func_10264')
call_11210 = func_10262_call()
call_11211 = func_10262_call()
output = call_11210
output2 = call_11211
func_11213 = relay.Function([], output)
mod['func_11213'] = func_11213
mod = relay.transform.InferType()(mod)
mutated_mod['func_11213'] = func_11213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11213_call = mutated_mod.get_global_var('func_11213')
call_11214 = func_11213_call()
output = call_11214
func_11215 = relay.Function([], output)
mutated_mod['func_11215'] = func_11215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_11238 = relay.TupleGetItem(func_9701_call(), 2)
call_11239 = relay.TupleGetItem(func_9702_call(), 2)
output = call_11238
output2 = call_11239
func_11278 = relay.Function([], output)
mod['func_11278'] = func_11278
mod = relay.transform.InferType()(mod)
mutated_mod['func_11278'] = func_11278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11278_call = mutated_mod.get_global_var('func_11278')
call_11279 = func_11278_call()
output = call_11279
func_11280 = relay.Function([], output)
mutated_mod['func_11280'] = func_11280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10627_call = mod.get_global_var('func_10627')
func_10629_call = mutated_mod.get_global_var('func_10629')
call_11291 = relay.TupleGetItem(func_10627_call(), 0)
call_11292 = relay.TupleGetItem(func_10629_call(), 0)
func_10919_call = mod.get_global_var('func_10919')
func_10922_call = mutated_mod.get_global_var('func_10922')
var_11311 = relay.var("var_11311", dtype = "int32", shape = (1680,))#candidate|11311|(1680,)|var|int32
const_11312 = relay.const([False,True,True,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,False,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,False,False,False,True,True,False,False,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False,True,False,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,False,False,False,True,True,False,True,False,True,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,False,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,True,False,False,True,False,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,True,True,False,True,False,False,False,True,False,False,False,True,False,False,False,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,False,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,False,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,True,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,True,True,False,True,False,False,False,True,True,False,False,False,False,True,False,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,False,False,False,False,False,True,True,True,False,False,False,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,True,False,False,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,True,False,True,True,True,True,True,False,True,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,False,False,False,True,False,False,False,False,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,False,False,True,True,False,True,True,False,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,False,False,True,False,True,True,False,True,False,True,False,False,False,False,False,True,True,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,True,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,True,True,False,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,False,True,False,True,False,True,False,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,False,False,True,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,True,True,False,True,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,True,True,True,False,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,True,False,False,False,True,False,True,True,False,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,False,False,True,False,True,False,True,True,False,False,False,True,False,False,False,True,False,False,False,True,True,False,False,False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,True,False,True,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,False,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,True,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True,True,True,True,False], dtype = "bool")#candidate|11312|(3360,)|const|bool
call_11310 = relay.TupleGetItem(func_10919_call(relay.reshape(var_11311.astype('int32'), [1680,]), relay.reshape(const_11312.astype('bool'), [3360,]), ), 2)
call_11313 = relay.TupleGetItem(func_10922_call(relay.reshape(var_11311.astype('int32'), [1680,]), relay.reshape(const_11312.astype('bool'), [3360,]), ), 2)
func_11126_call = mod.get_global_var('func_11126')
func_11130_call = mutated_mod.get_global_var('func_11130')
const_11319 = relay.const([-2.364144,-1.195064,-7.655039,1.526616,0.782273,4.918911,3.636731,7.953838,1.082671,-1.785037,-1.009710,-1.452848,-7.315705,6.557470,-7.189147,0.493940,1.024135,3.779340,-5.738369,1.545022,-0.489289,-7.423736,-1.950089,1.984905,5.356401,-4.633054,-1.342755,-1.698875,9.358233,-9.424101,-6.574777,-1.163702,9.105562,2.900310,-5.132598,0.142307,-3.136946,-9.780960,6.879301,-2.008405,-9.709090,3.605235,-0.507474,3.556827,9.559408,9.226042,1.296095,4.764641,6.122175,-7.024755,4.719886,-4.161205,3.108005,-3.757216,-1.676990,-0.001333,5.437255,9.460305,7.144517,9.173000,7.158356,9.277299,-5.132632,3.333789,4.904449,4.343633,-3.954533,-0.963335,4.222704,-4.400741,-7.661747,-5.971243], dtype = "float32")#candidate|11319|(72,)|const|float32
call_11318 = func_11126_call(relay.reshape(const_11319.astype('float32'), [4, 3, 6]), relay.reshape(const_11319.astype('float32'), [4, 3, 6]), )
call_11320 = func_11126_call(relay.reshape(const_11319.astype('float32'), [4, 3, 6]), relay.reshape(const_11319.astype('float32'), [4, 3, 6]), )
func_10811_call = mod.get_global_var('func_10811')
func_10813_call = mutated_mod.get_global_var('func_10813')
call_11321 = relay.TupleGetItem(func_10811_call(), 2)
call_11322 = relay.TupleGetItem(func_10813_call(), 2)
output = relay.Tuple([call_11291,call_11310,var_11311,const_11312,call_11318,const_11319,call_11321,])
output2 = relay.Tuple([call_11292,call_11313,var_11311,const_11312,call_11320,const_11319,call_11322,])
func_11329 = relay.Function([var_11311,], output)
mod['func_11329'] = func_11329
mod = relay.transform.InferType()(mod)
var_11330 = relay.var("var_11330", dtype = "int32", shape = (1680,))#candidate|11330|(1680,)|var|int32
output = func_11329(var_11330)
func_11331 = relay.Function([var_11330], output)
mutated_mod['func_11331'] = func_11331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11213_call = mod.get_global_var('func_11213')
func_11215_call = mutated_mod.get_global_var('func_11215')
call_11348 = func_11213_call()
call_11349 = func_11213_call()
output = relay.Tuple([call_11348,])
output2 = relay.Tuple([call_11349,])
func_11351 = relay.Function([], output)
mod['func_11351'] = func_11351
mod = relay.transform.InferType()(mod)
output = func_11351()
func_11352 = relay.Function([], output)
mutated_mod['func_11352'] = func_11352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11213_call = mod.get_global_var('func_11213')
func_11215_call = mutated_mod.get_global_var('func_11215')
call_11388 = func_11213_call()
call_11389 = func_11213_call()
func_7733_call = mod.get_global_var('func_7733')
func_7738_call = mutated_mod.get_global_var('func_7738')
const_11403 = relay.const([-4,-10,6,-3,-10,7,2,-10,-4,8,-2,-6,-3,5,-7,-4,1,7,3,-6,-3,-7,-7,-8,4,8,4,-5,6,-1,-8,3,-8,-9,-10,-8,-6,-10,1,-3,-3,-9,6,3,5,4,-10,5,7,1,-6,2,3,6,-9,7,1,-8,1,10,7,1,1,5,9,9,6,-7,3,-1,4,4,-5,4,-4,-3,-8,-8,2,1,1,7,1,-6,-9,9,-6,-9,-5,-8,7,10,8,8,-3,-9,9,2,10,-6,-7,-10,-8,-6,2,-4,5,-6,-1,-1,3,9,-6,4,2,-6,-7,-4,5,-9,-3,-8,6,9,8,2,-2,3,-3,-5,-9,4,7,-10,-9,1,-10,8,3,-3,-1,-2,7,2,-2,-7,-10,-6,10,-1,-3,-8,-3,10,8,-9,-2,2,6,-1,1,-9,8,7,-1,6,-5,10,-5,-6,-6,1,-5,7,-5,10,-6,-8,-6,4,-5,3,9,8,6,8,-10,-9,-2,-4,5,-4,3,-9,8,6,6,-5,-3,-10,8,10,-6,1,-5,6,7,5,5,8,-7,-7,4,-9,-5,-5,-8,-1,3,-4,-6,-10,-4,4,-9,3,5,-9,1,5,9,-9,4,-3,1,-7,10,2,2,-3,6,-7,5,-1,3,10,-5,-1,10,-8,-1,-10,4,-5,7,9,4,-6,1,-3,3,-8,-6,-1,-1,7,-4,3,6,6,7,-9,-9,-2,-2,5,-10,-6,-2,-3,6,6,-5,-9,10,6,-9,10,10,10,-7,-9,-10,5,2,6,8,-1,5,-5,5,2,-6,4,4,-8,-1,-10,-2,2,3,-5,3,5,5,-3,-3,6,9,7,-6,-4,4,5,-9,1,6,-4,-1,7,8,6,-8,1,2,1,-5,-2,-9,4,-5,-3,-4,-10,-7,-10,-8,8,-7,-1,9,7,-7,2,8,-5,2,4,6,-10,10,7,4,-1,-4,-10,-6,-6,5,-10,-3,-6,2,2,1,-2,10,8,-5,-5,-3,4,3,2,-8,-1,-7,8,6,-1,10,7,-1,5,3,-8,8,-8,2,9,2,2,8,3,10,10,-5,1,3,5,8,2,3,-7,10,6,-5,-5,8,6,2,-5,4,-7,4,2,-3,-7,6,3,9,10,-6,6,3,-2,-7,-3,5,-9,2,-10,-8,1,-3,8,4,4,4,-5,-2,-3,-4,-4,-8,7,-4,5,5,4,10,8,3,-3,-3,-4,-5,-8,7,5,4,-5,8,2,6,1,-9,2,-2,9,-5,-2,1,-7,-3,6,-4,-8,1,-8,-8,-4,8,9,3,7,2,-6,1,-3,-6,4,10,-4,3,-1,-3,-8,-3,2,6,1,1,10,1,-8,4,8,-5,-8,-6,-9,-6,-1,5,-4,-3,8,-4,-5,4,3,7,-4,6,1,3,-3,1,7,-7,7,-7,3,-3,-8,4,-7,-7,-1,4,-6,-6,-5,5,2,-4,2,-2,-5,-5,-2,-6,-10,-1,-5,7,-2,-2,-9,-1,-1,-10,8,-9,-8,6,5,-10,-5,6,-6,3,5,6,-4,-6,4,1,-7,5,-7,7,2,-7,-6,7,7,1,7,7,-6,8,9,4,-10,-3,-7,-10,-6,8,-1,6,-6,1,4,-7,-9,2,6,3,-4,-4,-5,-2,1,-4,6,2,7,-7,9,5,9,-5,-5,1,-5,2,9,-4,5,-7,-10,-5,2,9,-4,-1,-4,-7,7,8,-3,5,-4,6,-6,2,-10,4,9,-5,-8,7,5,10,-2,-7,9,-8,-2,2,-5,-6,3,1,3,-4,-4,-4,-3,-2,-3,1,-2,4,-5,-4,3,9,7,-8,6,1,3,9,-10,-2,-4,2,3,-2,4,-1,3,3,-8,10,2,-3,7,-2,5,-9,-8,6,8,-2,-3,9,2,8,4,-5,-1,5,2,-6,-1,7,5,3,-1,-6,-7,-10,1,-1,6,-5,-4,-5,-6,-3,-6,-6,-4,-6,3,9,9,9,7,-6,5,10,-10,4,-7,-2,-7,-6,7,-8,-4,-10,-6,4,10,8,9,-5,-6,6,-9,-6,9,9,-4,8,-4,10,1,5,3,-9,5,3,6,-5,-10,-1,-3,-4,-5,-4,3,1,9,5,1,-8,7,-8,-3,-6,-5,9,-7,-4,9,3,5,6,-10,-8,5,9,-7,5,-9,-2,-9,-2,-6,-1,8,7,-10,7,-3,10,1,10,-6,10,7,10,3,-4,-2,-3,3,-4,-2,2,6,-5,-1,6,1,3,-8,-6,6,-9,9,9,-4,4,3,-5,-7,-7,5,-6,-1,-6,1,-9,4,-9,4,6,10,5,-5,4,1,8,5,2,-2,-5,10,2,-6,8,1,-7,3,6,-2,-8,2,-9,-2,4,-9,7,-5,-3,1,10,-5,-3,-8,-6,1,-5,2,1,7,5,6,-5,-2,1,-2,-7,7,7,1,8,-9,-5,9,2,1,9,-3,8,7,-1,10,7,-10,-5,-2,-10,-5,10,1,7,-3,-7,5,4,-5,-10,-4,2,-5,-2,-9,-6,7,8,1,-8,-4,-1,-10,-10,9,-10,10,5,-1,10,1,-4,-5,-6,10,1,1,-4,6,-6,5,-9,9,10,-3,10,8,4,-8,10,-8,-3,-10,2,10,-2,-3,10,7,2,2,-5,7,4,2,3,-2,9,-3,1,-8,-10,5,2,2,3,-7,-4,8,2,-3,-7,3,-8,-6,10,3,-4,-2,10,2,9,2,6,3,-9,2,1,2,2,10,2,3,-2,2,-10,5,-6,3,6,-1,-4,1,-8,7,-2,3,-2,10,3,6,-10,3,10,9,3,1,3,-1,6,5,6,-2,4,4,7,9,3,-3,-7,10,-4,-7,6,10,-7,10,2,-4,7,4,-8,-1,-6,-5,-9,-4,10,10,9,-8,4,2,3,2,3,-3,-8,3,9,8,-7,-8,4,-2,7,-9,-1,7,-8,3,-7,-4,1,1,-9,9,-1,-2,-7,8,-8,5,2,3,-4,-1,5,6,-5,7,7,-8,2,-5,-8,-3,4,4,-3,-3,-5,8,2,-5,4,-10,7,1,-2,10,-1,-4,10,-8,7,2,10,10,-5,-8,7,7,-8,5,5,9,8,-1,-1,3,-4,2,4,-5,-8,-7,-3,-1,5,2,-1,5,2,8,-9,-5,-8,5,8,-1,5,1,2,-10,8,-8,10,-8,1,8,-9,-3,8,6,-9,2,7,-1,-5,-8,10,-2,9,-3,-8,-2,-3,-3,-2,7,-8,-5,-4,5,-7,4,9,8,-8,10,-1,2,-5,5,5,-9,4,-9,-10,8,5,7,-8,2,5,3,-2,1,9,5,9,9,7,2,10,7,3,-9,-8,-8,-5,-2,-5,6,-9,2,-6,3,-8,-3,8,4,-3,-2,-8,-5,-3,-9,9,6,6,-10,-8,-6,-10,5,-10,-7,3,-5,4,-3,-8,-7,6,5,-1,4,7,-4,-2,5,7,6,-5,-3,2,6,-8,5,6,8,6,-7,-4,2,-9,8,10,7,7,-4,6,7,5,-2,3,-8,-1,-3,-5,3,-1,9,-6,-5,-6,10,-1,8,10,-6,-9,3,1,-7,1,10,2,1,4,9,-7,2,7,-3,-1,1,5,-9,1,3,-7,-4,-10,5,3,6,4,-1,9,9,2,1,5,4,-8,-10,7,2,-10,-3,-2,6,-6,-8,-8,-8,-4,-10,9,-6,10,-1,-1,6,1,-4,-10,-10,5,3,4,6,10,-8,-9,-5,-2,7,9,-3,-5,-5,7,-1,-7,8,8,9,9,7,4,8,-6,1,10,-8,-3,10,-2,4,5,-9,3,3,7,-3,-1,9,8,5,-6,-3,-7,8,-3,-9,2,3,7,-1,-5,-5,7,-4,-4,5,1,8,10,-7,8,-1,-3,-10,-10,5,5,-2,4,7,2,-9,-9,-10,2,-2,-5,-3,-9,1,3,-5,-7,-1,2,10,-2,-8,5,10,7,-8,-6,3,3,5,1,4,-8,9,-3,-3,-10,-5,-8,2,8,-10,-10,-10,-6,-9,-6,4,-8,-5,6,7,8,10,-9,-5,-2,-3,-7,-7,9,-1,9,-10,-2,9,2,1,9,10,-4,7,10,-2,3,2,-7,7,-10,-4,-2,8,10,8,3,-9,2,6,-8,-9,-8,-10,-3,1,-6,8,8,3,-7,9,-10,-8,-6,4,-1,-2,-3,-3,3,-2,9,-6,7,-6,4,-4,-6,7,-7,6,4,-8,-4,5,-7,4,-8,4,2,8,7,-10,-6,-5,-8,4,10,-8,5,2,10,-7,-6,2,2,6,3,2,-3,-4,-1,2,10,-6,3,8,-3,10,7,1,-3,9,-5,9,2,-10,4,4,1,-1,-9,-8,6,-4,-1,2,-2,-3,-4,6,8,8,-9,5,4,4,7,-6,9,3,4,7,-8,4,3,-9,9,10,-2,8], dtype = "int32")#candidate|11403|(1680,)|const|int32
const_11404 = relay.const(9, dtype = "int8")#candidate|11404|()|const|int8
var_11405 = relay.var("var_11405", dtype = "bool", shape = (1, 3360))#candidate|11405|(1, 3360)|var|bool
call_11402 = relay.TupleGetItem(func_7733_call(relay.reshape(const_11403.astype('int32'), [8, 15, 14]), relay.reshape(const_11403.astype('int32'), [8, 15, 14]), relay.reshape(const_11404.astype('int8'), []), relay.reshape(var_11405.astype('bool'), [15, 16, 14]), ), 5)
call_11406 = relay.TupleGetItem(func_7738_call(relay.reshape(const_11403.astype('int32'), [8, 15, 14]), relay.reshape(const_11403.astype('int32'), [8, 15, 14]), relay.reshape(const_11404.astype('int8'), []), relay.reshape(var_11405.astype('bool'), [15, 16, 14]), ), 5)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_11428 = relay.TupleGetItem(func_2097_call(relay.reshape(const_11404.astype('int8'), [])), 5)
call_11429 = relay.TupleGetItem(func_2099_call(relay.reshape(const_11404.astype('int8'), [])), 5)
func_1015_call = mod.get_global_var('func_1015')
func_1018_call = mutated_mod.get_global_var('func_1018')
call_11433 = relay.TupleGetItem(func_1015_call(relay.reshape(const_11404.astype('uint64'), []), relay.reshape(call_11428.astype('uint64'), [9, 1, 2]), ), 0)
call_11434 = relay.TupleGetItem(func_1018_call(relay.reshape(const_11404.astype('uint64'), []), relay.reshape(call_11428.astype('uint64'), [9, 1, 2]), ), 0)
func_10595_call = mod.get_global_var('func_10595')
func_10596_call = mutated_mod.get_global_var('func_10596')
call_11456 = func_10595_call()
call_11457 = func_10595_call()
func_11196_call = mod.get_global_var('func_11196')
func_11197_call = mutated_mod.get_global_var('func_11197')
call_11459 = relay.TupleGetItem(func_11196_call(), 1)
call_11460 = relay.TupleGetItem(func_11197_call(), 1)
func_10525_call = mod.get_global_var('func_10525')
func_10526_call = mutated_mod.get_global_var('func_10526')
call_11467 = func_10525_call()
call_11468 = func_10525_call()
bop_11471 = relay.left_shift(call_11433.astype('uint32'), const_11404.astype('uint32')) # shape=(9, 1, 2)
bop_11474 = relay.left_shift(call_11434.astype('uint32'), const_11404.astype('uint32')) # shape=(9, 1, 2)
output = relay.Tuple([call_11388,call_11402,const_11403,var_11405,call_11428,call_11456,call_11459,call_11467,bop_11471,])
output2 = relay.Tuple([call_11389,call_11406,const_11403,var_11405,call_11429,call_11457,call_11460,call_11468,bop_11474,])
func_11476 = relay.Function([var_11405,], output)
mod['func_11476'] = func_11476
mod = relay.transform.InferType()(mod)
var_11477 = relay.var("var_11477", dtype = "bool", shape = (1, 3360))#candidate|11477|(1, 3360)|var|bool
output = func_11476(var_11477)
func_11478 = relay.Function([var_11477], output)
mutated_mod['func_11478'] = func_11478
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11513 = relay.var("var_11513", dtype = "float64", shape = (2, 2, 2))#candidate|11513|(2, 2, 2)|var|float64
const_11514 = relay.const([[[4.052185,7.229008],[-1.948169,-1.271303]],[[-8.159140,-5.808191],[-2.342244,-7.250115]]], dtype = "float64")#candidate|11514|(2, 2, 2)|const|float64
bop_11515 = relay.divide(var_11513.astype('float64'), relay.reshape(const_11514.astype('float64'), relay.shape_of(var_11513))) # shape=(2, 2, 2)
output = relay.Tuple([bop_11515,])
output2 = relay.Tuple([bop_11515,])
func_11519 = relay.Function([var_11513,], output)
mod['func_11519'] = func_11519
mod = relay.transform.InferType()(mod)
mutated_mod['func_11519'] = func_11519
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11520 = relay.var("var_11520", dtype = "float64", shape = (2, 2, 2))#candidate|11520|(2, 2, 2)|var|float64
func_11519_call = mutated_mod.get_global_var('func_11519')
call_11521 = func_11519_call(var_11520)
output = call_11521
func_11522 = relay.Function([var_11520], output)
mutated_mod['func_11522'] = func_11522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10485_call = mod.get_global_var('func_10485')
func_10487_call = mutated_mod.get_global_var('func_10487')
call_11597 = func_10485_call()
call_11598 = func_10485_call()
uop_11605 = relay.atan(call_11597.astype('float32')) # shape=(5, 4, 7)
uop_11607 = relay.atan(call_11598.astype('float32')) # shape=(5, 4, 7)
func_10595_call = mod.get_global_var('func_10595')
func_10596_call = mutated_mod.get_global_var('func_10596')
call_11616 = func_10595_call()
call_11617 = func_10595_call()
output = relay.Tuple([uop_11605,call_11616,])
output2 = relay.Tuple([uop_11607,call_11617,])
func_11619 = relay.Function([], output)
mod['func_11619'] = func_11619
mod = relay.transform.InferType()(mod)
mutated_mod['func_11619'] = func_11619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11619_call = mutated_mod.get_global_var('func_11619')
call_11620 = func_11619_call()
output = call_11620
func_11621 = relay.Function([], output)
mutated_mod['func_11621'] = func_11621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_11625 = relay.TupleGetItem(func_9701_call(), 1)
call_11626 = relay.TupleGetItem(func_9702_call(), 1)
output = relay.Tuple([call_11625,])
output2 = relay.Tuple([call_11626,])
func_11642 = relay.Function([], output)
mod['func_11642'] = func_11642
mod = relay.transform.InferType()(mod)
mutated_mod['func_11642'] = func_11642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11642_call = mutated_mod.get_global_var('func_11642')
call_11643 = func_11642_call()
output = call_11643
func_11644 = relay.Function([], output)
mutated_mod['func_11644'] = func_11644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10495_call = mod.get_global_var('func_10495')
func_10496_call = mutated_mod.get_global_var('func_10496')
call_11656 = func_10495_call()
call_11657 = func_10495_call()
output = relay.Tuple([call_11656,])
output2 = relay.Tuple([call_11657,])
func_11658 = relay.Function([], output)
mod['func_11658'] = func_11658
mod = relay.transform.InferType()(mod)
mutated_mod['func_11658'] = func_11658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11658_call = mutated_mod.get_global_var('func_11658')
call_11659 = func_11658_call()
output = call_11659
func_11660 = relay.Function([], output)
mutated_mod['func_11660'] = func_11660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11200_call = mod.get_global_var('func_11200')
func_11201_call = mutated_mod.get_global_var('func_11201')
call_11815 = relay.TupleGetItem(func_11200_call(), 0)
call_11816 = relay.TupleGetItem(func_11201_call(), 0)
func_1708_call = mod.get_global_var('func_1708')
func_1711_call = mutated_mod.get_global_var('func_1711')
const_11821 = relay.const(-6, dtype = "int8")#candidate|11821|()|const|int8
const_11822 = relay.const([-5,7,-3,9,-5,-4,-3,10,10,9,-7,3,2,1,8,-1,-8,7,5,7,-5,6,1,9,7,1,1,-4,-3,-10,-7,-8,-9,8,-10,-5,-5,-3,8,-8,-10,-9,-4,-5,-7,9,-7,-1,-9,2,2,-4,-8,-3,-9,-1,9,-1,4,1,-10,-5,5,-3,5,-4,3,-5,-7,7,-9,-6,-10,-5,-10,4,-5,6,7,4,7,8,-10,-2,1,-4,8,1,4,2,2,-5,-7,7,-4,-5,-1,-2,-3,-7,-4,7,10,3,3,1,3,2,-8,-5,2,-5,2,5,4,2,-4,1,6,-9,9,-6,-5,-4,9,-7,-9,7,2,1,-3,-3,1,-10,-9,-7,6,-3,-4,-6,-6,6,-5,-9,5,2,-2,-7,-10,9,6,8,-1,-5,-7,8,3,-9,8,-7,7,-3,4,-1,8,2,7,-6,-2,-1,-3,4,-6,-6,4,-7,3,-1,1,9,-3,-1,-4,9,1,7,-3,-10,8,1,-7,1,10,7,4,-1,9,-9,1,1,10,-6,10,9,-9,-8,-3,-8,-2,4], dtype = "int8")#candidate|11822|(210,)|const|int8
call_11820 = func_1708_call(relay.reshape(const_11821.astype('int8'), []), relay.reshape(const_11822.astype('int8'), [15, 1, 14]), )
call_11823 = func_1708_call(relay.reshape(const_11821.astype('int8'), []), relay.reshape(const_11822.astype('int8'), [15, 1, 14]), )
output = relay.Tuple([call_11815,call_11820,const_11821,const_11822,])
output2 = relay.Tuple([call_11816,call_11823,const_11821,const_11822,])
func_11839 = relay.Function([], output)
mod['func_11839'] = func_11839
mod = relay.transform.InferType()(mod)
mutated_mod['func_11839'] = func_11839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11839_call = mutated_mod.get_global_var('func_11839')
call_11840 = func_11839_call()
output = call_11840
func_11841 = relay.Function([], output)
mutated_mod['func_11841'] = func_11841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11619_call = mod.get_global_var('func_11619')
func_11621_call = mutated_mod.get_global_var('func_11621')
call_11850 = relay.TupleGetItem(func_11619_call(), 0)
call_11851 = relay.TupleGetItem(func_11621_call(), 0)
output = relay.Tuple([call_11850,])
output2 = relay.Tuple([call_11851,])
func_11852 = relay.Function([], output)
mod['func_11852'] = func_11852
mod = relay.transform.InferType()(mod)
mutated_mod['func_11852'] = func_11852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11852_call = mutated_mod.get_global_var('func_11852')
call_11853 = func_11852_call()
output = call_11853
func_11854 = relay.Function([], output)
mutated_mod['func_11854'] = func_11854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10095_call = mod.get_global_var('func_10095')
func_10096_call = mutated_mod.get_global_var('func_10096')
call_11869 = func_10095_call()
call_11870 = func_10095_call()
func_11619_call = mod.get_global_var('func_11619')
func_11621_call = mutated_mod.get_global_var('func_11621')
call_11889 = relay.TupleGetItem(func_11619_call(), 0)
call_11890 = relay.TupleGetItem(func_11621_call(), 0)
output = relay.Tuple([call_11869,call_11889,])
output2 = relay.Tuple([call_11870,call_11890,])
func_11892 = relay.Function([], output)
mod['func_11892'] = func_11892
mod = relay.transform.InferType()(mod)
mutated_mod['func_11892'] = func_11892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11892_call = mutated_mod.get_global_var('func_11892')
call_11893 = func_11892_call()
output = call_11893
func_11894 = relay.Function([], output)
mutated_mod['func_11894'] = func_11894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10525_call = mod.get_global_var('func_10525')
func_10526_call = mutated_mod.get_global_var('func_10526')
call_11909 = func_10525_call()
call_11910 = func_10525_call()
func_11519_call = mod.get_global_var('func_11519')
func_11522_call = mutated_mod.get_global_var('func_11522')
var_11913 = relay.var("var_11913", dtype = "float64", shape = (2, 4))#candidate|11913|(2, 4)|var|float64
call_11912 = relay.TupleGetItem(func_11519_call(relay.reshape(var_11913.astype('float64'), [2, 2, 2])), 0)
call_11914 = relay.TupleGetItem(func_11522_call(relay.reshape(var_11913.astype('float64'), [2, 2, 2])), 0)
output = relay.Tuple([call_11909,call_11912,var_11913,])
output2 = relay.Tuple([call_11910,call_11914,var_11913,])
func_11915 = relay.Function([var_11913,], output)
mod['func_11915'] = func_11915
mod = relay.transform.InferType()(mod)
mutated_mod['func_11915'] = func_11915
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11916 = relay.var("var_11916", dtype = "float64", shape = (2, 4))#candidate|11916|(2, 4)|var|float64
func_11915_call = mutated_mod.get_global_var('func_11915')
call_11917 = func_11915_call(var_11916)
output = call_11917
func_11918 = relay.Function([var_11916], output)
mutated_mod['func_11918'] = func_11918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10485_call = mod.get_global_var('func_10485')
func_10487_call = mutated_mod.get_global_var('func_10487')
call_11920 = func_10485_call()
call_11921 = func_10485_call()
func_10464_call = mod.get_global_var('func_10464')
func_10468_call = mutated_mod.get_global_var('func_10468')
var_11927 = relay.var("var_11927", dtype = "bool", shape = (56, 12))#candidate|11927|(56, 12)|var|bool
const_11928 = relay.const([[6.445813,7.964571,-9.567573,-4.393417,-4.244530,-1.336836,8.343341,-2.835968,3.672887,-0.196643,0.704563,-3.500575,6.220443,8.493098,8.469674,6.611049,6.870483,-4.557575,-7.766771,-5.359511,-1.653181,3.389650,-4.867017,9.083968,7.625401,1.538052,6.550827,6.245102,-1.931289,-2.501522,9.429737,-8.501383,-7.314944,-6.047637,4.869688,-8.266912,5.680322,7.603887,9.752881,-5.981081,3.009503,6.493219,2.438453,1.672215,6.574629,0.679192,4.256672,9.865453,-0.912655,8.614012,8.474321,2.366611,7.654629,-0.471926,-8.273975,1.540144,5.221203,-0.388823,9.886446,-1.103648,9.175958,6.921874,7.104597,-3.339616,1.944560,7.402379,6.479482,6.868671,-2.975684,2.859186,-0.803144,-8.711494,6.705201,-6.767969,-5.111777,-5.109433,6.795242,-6.047370,-1.713214,-7.255334,-2.941153,-9.867855,9.093346,8.979610,-2.737423,-1.181157,2.183300,-2.207402,2.909536,-7.961005,6.475421,5.814623,-5.947897,6.688577,-1.335793,-0.550193,4.053825,5.662462,1.558755,-5.485400,1.612948,-5.103058,9.529526,-6.082624,-1.977877,-5.715293,9.528817,-6.887182,-4.016477,-7.747420,8.066658,5.545085,-5.526371,5.455728,3.747703,2.116555,-3.975620,-3.538066,-5.779531,-7.960887,7.768377,-4.485335,-2.362014,-2.802327,-8.622700,-9.757583,-9.083252,-4.696451,-4.326234,-1.245980,-7.333076,-8.059426,5.972448,-3.001559,8.812423,-3.794019,-5.477127,0.457651,8.789763,1.566084,2.000051,-9.959317,3.113944,-5.659470,-0.324624,-8.135788,-8.745961,-6.987599,6.998216,0.396007,4.441205,2.238907,-5.835079,5.349180,-8.702467,1.457553,-2.203211,7.274187,-4.851469,7.439780,-3.776812,7.618588,-6.785694,1.532267,2.904766,7.230122,-0.119665,-1.355168,1.594918,6.286237,-6.208323,9.683779,-0.984732,-4.561809,-8.887500,6.637435,1.212985,1.340078,-9.694659,9.545386,6.560016,4.718019,4.716446,-3.636538,6.107006,8.480304,-6.794313,-8.197996,0.257367,-0.881886,-1.094774,3.796236,-1.593426,2.368307,2.953210,-2.304211,6.041061,-7.538500,4.278143,-3.902557,-3.764894,-4.534291,-9.584118,8.381017,-2.150605,-6.559222,-4.212127,-6.763822,-9.696678,9.735581,1.251092,7.577821,4.264713,9.409509,-2.132071,8.663378,6.631504,-8.204696,-2.459139,-1.095159,6.609314,3.335173,-5.482641,-3.091059,-8.495272,-2.601331,-1.390612,-8.084055,2.261388,-0.400773,4.622644,9.704999,-6.005706,8.608945,8.807197,3.927588,-3.117145,-3.518314,-5.359948,4.801346,3.037022,-1.407666,1.217769,6.722907,5.353080,7.591065,-9.392040,7.365083,-2.852748,9.307681,-6.262881,-2.522602,-4.173098,4.015549,5.564320,4.681711,-6.084161,-0.563538,-3.219286,5.087675,-0.699783,9.903044,7.881288,3.748472,7.128840,8.629893,7.019859,-3.581510,4.087664,-9.054679,-6.623837,7.342329,-5.891819,4.911209,0.041745,-5.838360,4.847580,-0.794835,-7.474536,-7.245293,7.351322,-9.338659,8.691364,-7.942893,-4.209638,4.101031,-7.702525,-6.406102,5.490189,4.891836,-4.647217,-4.013796,3.881619,-6.796399,-1.190125,6.524721,-0.853013,-3.698076,-1.455332,-0.222091,5.314119,-6.222802,-6.136495,-5.553340,-2.617922,0.735477,5.323609,-2.644799,-6.659081,2.260990,9.942330,-3.241320,-6.439843,8.497993,9.469365,1.423457,1.538902,-8.323171,-0.632590,8.269015,1.224649,7.458927,-8.694754,7.418250,-4.165541,5.384684,-4.017944,-8.369291,-1.126356,0.374575,3.142515,1.392298,-9.718914,2.516462,-3.714408,8.995626,0.701519,6.802082,-0.273548,-3.978192,1.182753,-6.090865,-6.648429,-9.909698,-9.285998,-3.487097,-0.795748,1.730825,-9.972173,-6.136332,1.812826,-0.054358,-8.876093,9.658943,-5.196182,-9.462355,3.465263,4.902014,5.485203,0.175875,-5.924774,1.786537,0.906914,4.826255,9.399536,-4.685229,-6.049108,1.976551,-8.510976,0.613432,2.972693,-9.708796,5.523835,-4.064780,9.643208,-2.697809,2.612427,0.853548,-0.299554,-6.277033,-6.013052,0.217130,9.358889,1.343019,5.221156,7.115756,-5.546055,2.617652,2.540425,-4.639438,8.063529,-2.711810,7.593781,3.288482,7.458625,8.115711,1.143482,-7.232202,-7.290514,-6.841508,-1.760263,-7.753133,-7.605874,-4.851472,5.601800,-8.207324,-0.500267,6.968261,-4.683618,2.352886,2.702970,7.742227,3.645266,2.911888,-1.640425,7.679719,0.283049,7.650691,-4.080004,-4.080075,3.932828,-7.881980,6.314928,5.919337,0.843702,2.229639,1.897171,9.126769,-3.206692,-3.517740,-9.696549,-2.178787,4.701118,5.392620,5.623870,0.776212,1.261509,-1.622324,-5.291522,-3.366958,7.868756,-5.514603,9.521809,2.777475,-3.845300,-0.618084,-3.166196,8.935910,-8.124853,4.259210,-9.113077,-1.294311,-1.056640,-5.943986,-8.513746,-1.538691,4.139190,1.709038,-5.377189,-3.735424,-2.742122,-3.086454,1.285916,3.058342,-6.573148,-0.191765,4.724583,-2.852779,7.637525,-5.863983,-2.026460,1.940015,5.394694,-8.000072,-8.557365,7.220780,0.104072,8.255026,3.182806,-0.196873,4.762844,-8.975882,-4.030149,-7.347948,3.060492,9.903739,-7.278945,9.225244,4.234470,3.880322,7.235654,3.415099,-6.673141,9.749532,9.535649,-1.675667,-6.108297,7.132831,7.278804,5.723507,3.678312,-5.647514,7.972225,1.126420,7.355692,-1.338246,2.683519,9.033105,-0.785757,0.954157,6.999199,-6.442276,-2.991765,-8.988463,-0.777357,0.410552,-5.719410,8.003366,6.157891,4.715075,8.307745,3.209193,7.433510,9.640941,-8.447689,2.109995,-8.707156,5.188174,5.725759,-4.172206,5.036558,7.493753,-9.660789,-1.406252,-1.286199,-8.956158,5.839991,-3.935595,6.641541,8.761233,4.111769,8.968053,-7.602174,-2.223274,-8.343314,4.999033,-3.108501,3.483597,9.659066,2.100101,8.297917,-0.775739,1.498727,7.920773,-7.915375,-4.129434,0.995382,3.745749,7.503309,-5.951272,-7.741574,2.412700,-2.873417,0.151427,-3.433518,2.581371,7.943508,6.705398,0.899386,2.675993,9.890701,2.356759,2.030839,-0.639053,-4.054496,-0.839885,1.171201,-4.485544,-8.405057,8.447324,-0.202576,0.435452,-8.574812,-3.479412,2.386063,7.718997,-0.938736,-0.417938,0.628992,-3.692182,0.988275,6.879379,-5.967359,-4.045947,2.829579,-7.203524,5.493373,4.513491,-9.831527,0.272125,6.158851,-2.291629,3.972973,9.398427,3.314034]], dtype = "float32")#candidate|11928|(1, 605)|const|float32
call_11926 = relay.TupleGetItem(func_10464_call(relay.reshape(var_11927.astype('bool'), [672,]), relay.reshape(const_11928.astype('float32'), [1, 605]), ), 1)
call_11929 = relay.TupleGetItem(func_10468_call(relay.reshape(var_11927.astype('bool'), [672,]), relay.reshape(const_11928.astype('float32'), [1, 605]), ), 1)
output = relay.Tuple([call_11920,call_11926,var_11927,const_11928,])
output2 = relay.Tuple([call_11921,call_11929,var_11927,const_11928,])
func_11942 = relay.Function([var_11927,], output)
mod['func_11942'] = func_11942
mod = relay.transform.InferType()(mod)
mutated_mod['func_11942'] = func_11942
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11943 = relay.var("var_11943", dtype = "bool", shape = (56, 12))#candidate|11943|(56, 12)|var|bool
func_11942_call = mutated_mod.get_global_var('func_11942')
call_11944 = func_11942_call(var_11943)
output = call_11944
func_11945 = relay.Function([var_11943], output)
mutated_mod['func_11945'] = func_11945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11101_call = mod.get_global_var('func_11101')
func_11103_call = mutated_mod.get_global_var('func_11103')
call_11964 = relay.TupleGetItem(func_11101_call(), 0)
call_11965 = relay.TupleGetItem(func_11103_call(), 0)
var_11976 = relay.var("var_11976", dtype = "float64", shape = (5, 4, 7))#candidate|11976|(5, 4, 7)|var|float64
bop_11977 = relay.power(call_11964.astype('float32'), relay.reshape(var_11976.astype('float32'), relay.shape_of(call_11964))) # shape=(5, 4, 7)
bop_11980 = relay.power(call_11965.astype('float32'), relay.reshape(var_11976.astype('float32'), relay.shape_of(call_11965))) # shape=(5, 4, 7)
var_11982 = relay.var("var_11982", dtype = "float64", shape = (5, 4, 7))#candidate|11982|(5, 4, 7)|var|float64
bop_11983 = relay.less(var_11976.astype('bool'), relay.reshape(var_11982.astype('bool'), relay.shape_of(var_11976))) # shape=(5, 4, 7)
output = relay.Tuple([bop_11977,bop_11983,])
output2 = relay.Tuple([bop_11980,bop_11983,])
func_11987 = relay.Function([var_11976,var_11982,], output)
mod['func_11987'] = func_11987
mod = relay.transform.InferType()(mod)
mutated_mod['func_11987'] = func_11987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11987_call = mutated_mod.get_global_var('func_11987')
var_11989 = relay.var("var_11989", dtype = "float64", shape = (5, 4, 7))#candidate|11989|(5, 4, 7)|var|float64
var_11990 = relay.var("var_11990", dtype = "float64", shape = (5, 4, 7))#candidate|11990|(5, 4, 7)|var|float64
call_11988 = func_11987_call(var_11989,var_11990,)
output = call_11988
func_11991 = relay.Function([var_11989,var_11990,], output)
mutated_mod['func_11991'] = func_11991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10741_call = mod.get_global_var('func_10741')
func_10742_call = mutated_mod.get_global_var('func_10742')
call_12023 = relay.TupleGetItem(func_10741_call(), 0)
call_12024 = relay.TupleGetItem(func_10742_call(), 0)
func_9640_call = mod.get_global_var('func_9640')
func_9642_call = mutated_mod.get_global_var('func_9642')
call_12037 = relay.TupleGetItem(func_9640_call(), 1)
call_12038 = relay.TupleGetItem(func_9642_call(), 1)
uop_12042 = relay.tan(call_12023.astype('float64')) # shape=(5, 4, 7)
uop_12044 = relay.tan(call_12024.astype('float64')) # shape=(5, 4, 7)
output = relay.Tuple([call_12037,uop_12042,])
output2 = relay.Tuple([call_12038,uop_12044,])
func_12052 = relay.Function([], output)
mod['func_12052'] = func_12052
mod = relay.transform.InferType()(mod)
output = func_12052()
func_12053 = relay.Function([], output)
mutated_mod['func_12053'] = func_12053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10495_call = mod.get_global_var('func_10495')
func_10496_call = mutated_mod.get_global_var('func_10496')
call_12079 = func_10495_call()
call_12080 = func_10495_call()
func_10525_call = mod.get_global_var('func_10525')
func_10526_call = mutated_mod.get_global_var('func_10526')
call_12106 = func_10525_call()
call_12107 = func_10525_call()
uop_12128 = relay.log2(call_12106.astype('float64')) # shape=(1, 693)
uop_12130 = relay.log2(call_12107.astype('float64')) # shape=(1, 693)
func_4755_call = mod.get_global_var('func_4755')
func_4758_call = mutated_mod.get_global_var('func_4758')
const_12134 = relay.const([6,1,-5,9,3,-5,-3,-5,-1,-4,-4,3,9,-10,-6,10,-2,7,7,3,6,-5,10,1,-8,4,-4,-3,-6,5,1,-3,6,2,-6,3,3,-10,-7,-6,8,6,-6,-4,5,6,7,-9,-9,-8,6,-8,1,-3,3,-3,9,2,2,10,7,5,5,-9,-5,-1,10,3,1,10,-5,-4,4,-2,4,-6,-7,-7,3,9,6,-2,-1,-10,10,6,-2,-10,6,5,-3,3,9,2,-9,-3,-1,1,-9,6,-10,-5,-3,-1,8,-1,6,-2,-5,1,5,6,9,2,8,-7,10,-1,8,4,-7,-8,-8,-9,5,6,4,-10,9,2,9,6,-1,4,8,-5,2,9,4,-4,10,8,2,-8,9,-8,9,-8,10,10,-10,2,-10,4,1,-4,-6,6,2,8,-3,-10,2,-3,-1,-8,-9,5,-1,7,4,2,4,7,1,-7,-6,5,6,10,-2,-10,-1,2,3,6,1,-9,-6,-10,6,1,6,-7,5,-10,8,-8,7,10,1,9,-4,6,-7,-8,6,2,-9,-4,6,1,-6,-10,-9,2,6,2,10,-3,6,7,-3,4,7,6,6,9,6,-6,2,7,-1,-10,-6,-7,4,-6,2,1,-10,5,6,-7,-3,-1,2,5,-8,-4,7,9,-5,2,-5,-9,4,10,-7,-6,1,-5,5,6,-4,10,-10,-7,-3,4,-6,4,6,9,4,-4,-3,8,9,-3,-4,8,-3,-1,-8,6,-8,1,6,-5,-5,5,-8,-6,-9,-3,4,-9,8,3,4,7,2,4,-8,-8,8,3,-6,-4,-9,-8,-8,-10,-6,2,6,2,7,-6,4,10,-5,7,-3,6,8,5,-8,2,-1,4,2,-3,-1,-6,3,7,10,-9,7,-4,-9,10,-5,-3,-5,-2,-4,-7,-4,-8,-10,6,10,-2,-3,1,3,-1,-2,-5,-3,5,1,-10,7,-3,6,-7,-5,3,-3,-1,-6,7,7,6,-6,-9,2,-4,-9,6,-6,-2,-9,-10,1,-3,4,-4,9,-4,10,-3,-3,3,-6,7,-1,-5,-4,-7,8,2,7,6,-8,4,-4,-2,6,6,6,3,2,2,-5,-1,-8,-7,-10,2,5,-6,4,3,7,9,-3,-3,-10,-1,5,-10,-6,7,-3,-4,4,5,-1,-8,-8,-4,-9,7,3,6,1,-8,-4,5,-3,-6,-10,-6,9,-9,-1,7,-9,1,4,9,-5,2,-1,9,-7,-2,-5,-8,-2,-1,-2,-5,5,-3,5,-2,-1,2,-3,-6,5,9,-6,-4,6,5,4,-8,-8,-5,7,5,-6,-7,-9,1,-3,-6,7,-9,-5,-2,-4,7,-5,7,4,7,-9,8,9,4,10,-1,1,-4,6,-5,-8,2,-7,-5,-1,10,1,9,-9,-2,-4,8,6,-2,-9,3,-1,1,4,-10,2,-6,-10,-5,-10,10,1,-1,-1,7,10,-7,5,-9,-8,5,-1,-5,7,-1,-4,-5,2,-3,-1,-5,10,-1,2,7,1,1,4,4,-3,-10,-8,5,-3,3,9,-4,-1,-6,-7,4,5,-1,-1,-2,-1,-5,-9,9,7,3,-3,4,2,-7,-3,8,-8,8,-5,6,-5,5,9,6,-9,1,8,3,5,10,3,-7,8,-10,8,-8,-5,6,8,-2,-3,-8,8,2,3,1,-1,-7,-4,1,-1,4,4,1,-4,-1,-4,7,-10,5,-2,-1,5,-1,5,2,2,3,7,-8,-5,-9,7,2,6,3,4,-8,-2,-1,-2,-4,-2,-8,8,-2,-4,3,7,-9,3,-9,-5,-7,8,5,-2,4,-5,2,8,-6,3,2,-5,2,-2,-4,-10,8], dtype = "uint64")#candidate|12134|(700,)|const|uint64
var_12135 = relay.var("var_12135", dtype = "float32", shape = (605,))#candidate|12135|(605,)|var|float32
call_12133 = relay.TupleGetItem(func_4755_call(relay.reshape(const_12134.astype('uint64'), [10, 5, 14]), relay.reshape(var_12135.astype('float32'), [11, 55]), ), 1)
call_12136 = relay.TupleGetItem(func_4758_call(relay.reshape(const_12134.astype('uint64'), [10, 5, 14]), relay.reshape(var_12135.astype('float32'), [11, 55]), ), 1)
output = relay.Tuple([call_12079,uop_12128,call_12133,const_12134,var_12135,])
output2 = relay.Tuple([call_12080,uop_12130,call_12136,const_12134,var_12135,])
func_12147 = relay.Function([var_12135,], output)
mod['func_12147'] = func_12147
mod = relay.transform.InferType()(mod)
mutated_mod['func_12147'] = func_12147
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12148 = relay.var("var_12148", dtype = "float32", shape = (605,))#candidate|12148|(605,)|var|float32
func_12147_call = mutated_mod.get_global_var('func_12147')
call_12149 = func_12147_call(var_12148)
output = call_12149
func_12150 = relay.Function([var_12148], output)
mutated_mod['func_12150'] = func_12150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11619_call = mod.get_global_var('func_11619')
func_11621_call = mutated_mod.get_global_var('func_11621')
call_12186 = relay.TupleGetItem(func_11619_call(), 0)
call_12187 = relay.TupleGetItem(func_11621_call(), 0)
output = call_12186
output2 = call_12187
func_12190 = relay.Function([], output)
mod['func_12190'] = func_12190
mod = relay.transform.InferType()(mod)
output = func_12190()
func_12191 = relay.Function([], output)
mutated_mod['func_12191'] = func_12191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_12195 = relay.TupleGetItem(func_9701_call(), 0)
call_12196 = relay.TupleGetItem(func_9702_call(), 0)
output = call_12195
output2 = call_12196
func_12229 = relay.Function([], output)
mod['func_12229'] = func_12229
mod = relay.transform.InferType()(mod)
output = func_12229()
func_12230 = relay.Function([], output)
mutated_mod['func_12230'] = func_12230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12052_call = mod.get_global_var('func_12052')
func_12053_call = mutated_mod.get_global_var('func_12053')
call_12255 = relay.TupleGetItem(func_12052_call(), 0)
call_12256 = relay.TupleGetItem(func_12053_call(), 0)
output = relay.Tuple([call_12255,])
output2 = relay.Tuple([call_12256,])
func_12257 = relay.Function([], output)
mod['func_12257'] = func_12257
mod = relay.transform.InferType()(mod)
output = func_12257()
func_12258 = relay.Function([], output)
mutated_mod['func_12258'] = func_12258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10704_call = mod.get_global_var('func_10704')
func_10706_call = mutated_mod.get_global_var('func_10706')
call_12295 = func_10704_call()
call_12296 = func_10704_call()
output = relay.Tuple([call_12295,])
output2 = relay.Tuple([call_12296,])
func_12312 = relay.Function([], output)
mod['func_12312'] = func_12312
mod = relay.transform.InferType()(mod)
output = func_12312()
func_12313 = relay.Function([], output)
mutated_mod['func_12313'] = func_12313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11351_call = mod.get_global_var('func_11351')
func_11352_call = mutated_mod.get_global_var('func_11352')
call_12397 = relay.TupleGetItem(func_11351_call(), 0)
call_12398 = relay.TupleGetItem(func_11352_call(), 0)
output = relay.Tuple([call_12397,])
output2 = relay.Tuple([call_12398,])
func_12422 = relay.Function([], output)
mod['func_12422'] = func_12422
mod = relay.transform.InferType()(mod)
mutated_mod['func_12422'] = func_12422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12422_call = mutated_mod.get_global_var('func_12422')
call_12423 = func_12422_call()
output = call_12423
func_12424 = relay.Function([], output)
mutated_mod['func_12424'] = func_12424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11196_call = mod.get_global_var('func_11196')
func_11197_call = mutated_mod.get_global_var('func_11197')
call_12431 = relay.TupleGetItem(func_11196_call(), 0)
call_12432 = relay.TupleGetItem(func_11197_call(), 0)
output = call_12431
output2 = call_12432
func_12444 = relay.Function([], output)
mod['func_12444'] = func_12444
mod = relay.transform.InferType()(mod)
mutated_mod['func_12444'] = func_12444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12444_call = mutated_mod.get_global_var('func_12444')
call_12445 = func_12444_call()
output = call_12445
func_12446 = relay.Function([], output)
mutated_mod['func_12446'] = func_12446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11278_call = mod.get_global_var('func_11278')
func_11280_call = mutated_mod.get_global_var('func_11280')
call_12491 = func_11278_call()
call_12492 = func_11278_call()
func_12052_call = mod.get_global_var('func_12052')
func_12053_call = mutated_mod.get_global_var('func_12053')
call_12493 = relay.TupleGetItem(func_12052_call(), 0)
call_12494 = relay.TupleGetItem(func_12053_call(), 0)
func_12052_call = mod.get_global_var('func_12052')
func_12053_call = mutated_mod.get_global_var('func_12053')
call_12511 = relay.TupleGetItem(func_12052_call(), 1)
call_12512 = relay.TupleGetItem(func_12053_call(), 1)
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_12513 = relay.TupleGetItem(func_9701_call(), 0)
call_12514 = relay.TupleGetItem(func_9702_call(), 0)
func_11126_call = mod.get_global_var('func_11126')
func_11130_call = mutated_mod.get_global_var('func_11130')
var_12539 = relay.var("var_12539", dtype = "float32", shape = (36, 2))#candidate|12539|(36, 2)|var|float32
call_12538 = func_11126_call(relay.reshape(var_12539.astype('float32'), [4, 3, 6]), relay.reshape(var_12539.astype('float32'), [4, 3, 6]), )
call_12540 = func_11126_call(relay.reshape(var_12539.astype('float32'), [4, 3, 6]), relay.reshape(var_12539.astype('float32'), [4, 3, 6]), )
func_12312_call = mod.get_global_var('func_12312')
func_12313_call = mutated_mod.get_global_var('func_12313')
call_12559 = relay.TupleGetItem(func_12312_call(), 0)
call_12560 = relay.TupleGetItem(func_12313_call(), 0)
func_9599_call = mod.get_global_var('func_9599')
func_9602_call = mutated_mod.get_global_var('func_9602')
var_12571 = relay.var("var_12571", dtype = "bool", shape = ())#candidate|12571|()|var|bool
var_12572 = relay.var("var_12572", dtype = "uint64", shape = (18, 1))#candidate|12572|(18, 1)|var|uint64
call_12570 = relay.TupleGetItem(func_9599_call(relay.reshape(var_12571.astype('bool'), []), relay.reshape(var_12572.astype('uint64'), [18, 1]), ), 3)
call_12573 = relay.TupleGetItem(func_9602_call(relay.reshape(var_12571.astype('bool'), []), relay.reshape(var_12572.astype('uint64'), [18, 1]), ), 3)
var_12578 = relay.var("var_12578", dtype = "uint64", shape = (18, 15))#candidate|12578|(18, 15)|var|uint64
bop_12579 = relay.divide(var_12572.astype('float64'), var_12578.astype('float64')) # shape=(18, 15)
output = relay.Tuple([call_12491,call_12493,call_12511,call_12513,call_12538,var_12539,call_12559,call_12570,var_12571,bop_12579,])
output2 = relay.Tuple([call_12492,call_12494,call_12512,call_12514,call_12540,var_12539,call_12560,call_12573,var_12571,bop_12579,])
func_12590 = relay.Function([var_12539,var_12571,var_12572,var_12578,], output)
mod['func_12590'] = func_12590
mod = relay.transform.InferType()(mod)
mutated_mod['func_12590'] = func_12590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12590_call = mutated_mod.get_global_var('func_12590')
var_12592 = relay.var("var_12592", dtype = "float32", shape = (36, 2))#candidate|12592|(36, 2)|var|float32
var_12593 = relay.var("var_12593", dtype = "bool", shape = ())#candidate|12593|()|var|bool
var_12594 = relay.var("var_12594", dtype = "uint64", shape = (18, 1))#candidate|12594|(18, 1)|var|uint64
var_12595 = relay.var("var_12595", dtype = "uint64", shape = (18, 15))#candidate|12595|(18, 15)|var|uint64
call_12591 = func_12590_call(var_12592,var_12593,var_12594,var_12595,)
output = call_12591
func_12596 = relay.Function([var_12592,var_12593,var_12594,var_12595,], output)
mutated_mod['func_12596'] = func_12596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11642_call = mod.get_global_var('func_11642')
func_11644_call = mutated_mod.get_global_var('func_11644')
call_12601 = relay.TupleGetItem(func_11642_call(), 0)
call_12602 = relay.TupleGetItem(func_11644_call(), 0)
output = relay.Tuple([call_12601,])
output2 = relay.Tuple([call_12602,])
func_12624 = relay.Function([], output)
mod['func_12624'] = func_12624
mod = relay.transform.InferType()(mod)
output = func_12624()
func_12625 = relay.Function([], output)
mutated_mod['func_12625'] = func_12625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11642_call = mod.get_global_var('func_11642')
func_11644_call = mutated_mod.get_global_var('func_11644')
call_12656 = relay.TupleGetItem(func_11642_call(), 0)
call_12657 = relay.TupleGetItem(func_11644_call(), 0)
output = relay.Tuple([call_12656,])
output2 = relay.Tuple([call_12657,])
func_12671 = relay.Function([], output)
mod['func_12671'] = func_12671
mod = relay.transform.InferType()(mod)
output = func_12671()
func_12672 = relay.Function([], output)
mutated_mod['func_12672'] = func_12672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10741_call = mod.get_global_var('func_10741')
func_10742_call = mutated_mod.get_global_var('func_10742')
call_12688 = relay.TupleGetItem(func_10741_call(), 0)
call_12689 = relay.TupleGetItem(func_10742_call(), 0)
func_11006_call = mod.get_global_var('func_11006')
func_11008_call = mutated_mod.get_global_var('func_11008')
const_12704 = relay.const(8, dtype = "int8")#candidate|12704|()|const|int8
call_12703 = relay.TupleGetItem(func_11006_call(relay.reshape(const_12704.astype('int8'), [])), 4)
call_12705 = relay.TupleGetItem(func_11008_call(relay.reshape(const_12704.astype('int8'), [])), 4)
bop_12708 = relay.logical_xor(call_12688.astype('int32'), const_12704.astype('int32')) # shape=(5, 4, 7)
bop_12711 = relay.logical_xor(call_12689.astype('int32'), const_12704.astype('int32')) # shape=(5, 4, 7)
bop_12716 = relay.less(call_12703.astype('bool'), const_12704.astype('bool')) # shape=(105, 2)
bop_12719 = relay.less(call_12705.astype('bool'), const_12704.astype('bool')) # shape=(105, 2)
func_12671_call = mod.get_global_var('func_12671')
func_12672_call = mutated_mod.get_global_var('func_12672')
call_12724 = relay.TupleGetItem(func_12671_call(), 0)
call_12725 = relay.TupleGetItem(func_12672_call(), 0)
output = relay.Tuple([bop_12708,bop_12716,call_12724,])
output2 = relay.Tuple([bop_12711,bop_12719,call_12725,])
func_12729 = relay.Function([], output)
mod['func_12729'] = func_12729
mod = relay.transform.InferType()(mod)
mutated_mod['func_12729'] = func_12729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12729_call = mutated_mod.get_global_var('func_12729')
call_12730 = func_12729_call()
output = call_12730
func_12731 = relay.Function([], output)
mutated_mod['func_12731'] = func_12731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10704_call = mod.get_global_var('func_10704')
func_10706_call = mutated_mod.get_global_var('func_10706')
call_12735 = func_10704_call()
call_12736 = func_10704_call()
output = call_12735
output2 = call_12736
func_12743 = relay.Function([], output)
mod['func_12743'] = func_12743
mod = relay.transform.InferType()(mod)
output = func_12743()
func_12744 = relay.Function([], output)
mutated_mod['func_12744'] = func_12744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12743_call = mod.get_global_var('func_12743')
func_12744_call = mutated_mod.get_global_var('func_12744')
call_12805 = func_12743_call()
call_12806 = func_12743_call()
output = relay.Tuple([call_12805,])
output2 = relay.Tuple([call_12806,])
func_12809 = relay.Function([], output)
mod['func_12809'] = func_12809
mod = relay.transform.InferType()(mod)
mutated_mod['func_12809'] = func_12809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12809_call = mutated_mod.get_global_var('func_12809')
call_12810 = func_12809_call()
output = call_12810
func_12811 = relay.Function([], output)
mutated_mod['func_12811'] = func_12811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12257_call = mod.get_global_var('func_12257')
func_12258_call = mutated_mod.get_global_var('func_12258')
call_12812 = relay.TupleGetItem(func_12257_call(), 0)
call_12813 = relay.TupleGetItem(func_12258_call(), 0)
func_11839_call = mod.get_global_var('func_11839')
func_11841_call = mutated_mod.get_global_var('func_11841')
call_12825 = relay.TupleGetItem(func_11839_call(), 2)
call_12826 = relay.TupleGetItem(func_11841_call(), 2)
func_10370_call = mod.get_global_var('func_10370')
func_10372_call = mutated_mod.get_global_var('func_10372')
call_12851 = func_10370_call()
call_12852 = func_10370_call()
output = relay.Tuple([call_12812,call_12825,call_12851,])
output2 = relay.Tuple([call_12813,call_12826,call_12852,])
func_12854 = relay.Function([], output)
mod['func_12854'] = func_12854
mod = relay.transform.InferType()(mod)
output = func_12854()
func_12855 = relay.Function([], output)
mutated_mod['func_12855'] = func_12855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_12943 = relay.TupleGetItem(func_9701_call(), 1)
call_12944 = relay.TupleGetItem(func_9702_call(), 1)
output = call_12943
output2 = call_12944
func_12952 = relay.Function([], output)
mod['func_12952'] = func_12952
mod = relay.transform.InferType()(mod)
output = func_12952()
func_12953 = relay.Function([], output)
mutated_mod['func_12953'] = func_12953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11892_call = mod.get_global_var('func_11892')
func_11894_call = mutated_mod.get_global_var('func_11894')
call_13005 = relay.TupleGetItem(func_11892_call(), 1)
call_13006 = relay.TupleGetItem(func_11894_call(), 1)
func_11213_call = mod.get_global_var('func_11213')
func_11215_call = mutated_mod.get_global_var('func_11215')
call_13019 = func_11213_call()
call_13020 = func_11213_call()
func_10095_call = mod.get_global_var('func_10095')
func_10096_call = mutated_mod.get_global_var('func_10096')
call_13021 = func_10095_call()
call_13022 = func_10095_call()
var_13048 = relay.var("var_13048", dtype = "float32", shape = (5, 4, 7))#candidate|13048|(5, 4, 7)|var|float32
bop_13049 = relay.mod(call_13005.astype('float64'), relay.reshape(var_13048.astype('float64'), relay.shape_of(call_13005))) # shape=(5, 4, 7)
bop_13052 = relay.mod(call_13006.astype('float64'), relay.reshape(var_13048.astype('float64'), relay.shape_of(call_13006))) # shape=(5, 4, 7)
output = relay.Tuple([call_13019,call_13021,bop_13049,])
output2 = relay.Tuple([call_13020,call_13022,bop_13052,])
func_13055 = relay.Function([var_13048,], output)
mod['func_13055'] = func_13055
mod = relay.transform.InferType()(mod)
var_13056 = relay.var("var_13056", dtype = "float32", shape = (5, 4, 7))#candidate|13056|(5, 4, 7)|var|float32
output = func_13055(var_13056)
func_13057 = relay.Function([var_13056], output)
mutated_mod['func_13057'] = func_13057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_13062 = relay.TupleGetItem(func_9701_call(), 1)
call_13063 = relay.TupleGetItem(func_9702_call(), 1)
func_11852_call = mod.get_global_var('func_11852')
func_11854_call = mutated_mod.get_global_var('func_11854')
call_13068 = relay.TupleGetItem(func_11852_call(), 0)
call_13069 = relay.TupleGetItem(func_11854_call(), 0)
uop_13076 = relay.cosh(call_13068.astype('float32')) # shape=(5, 4, 7)
uop_13078 = relay.cosh(call_13069.astype('float32')) # shape=(5, 4, 7)
output = relay.Tuple([call_13062,uop_13076,])
output2 = relay.Tuple([call_13063,uop_13078,])
func_13080 = relay.Function([], output)
mod['func_13080'] = func_13080
mod = relay.transform.InferType()(mod)
output = func_13080()
func_13081 = relay.Function([], output)
mutated_mod['func_13081'] = func_13081
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13108 = relay.var("var_13108", dtype = "float64", shape = (10, 11, 3))#candidate|13108|(10, 11, 3)|var|float64
uop_13109 = relay.acosh(var_13108.astype('float64')) # shape=(10, 11, 3)
output = relay.Tuple([uop_13109,])
output2 = relay.Tuple([uop_13109,])
func_13128 = relay.Function([var_13108,], output)
mod['func_13128'] = func_13128
mod = relay.transform.InferType()(mod)
mutated_mod['func_13128'] = func_13128
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13129 = relay.var("var_13129", dtype = "float64", shape = (10, 11, 3))#candidate|13129|(10, 11, 3)|var|float64
func_13128_call = mutated_mod.get_global_var('func_13128')
call_13130 = func_13128_call(var_13129)
output = call_13130
func_13131 = relay.Function([var_13129], output)
mutated_mod['func_13131'] = func_13131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11101_call = mod.get_global_var('func_11101')
func_11103_call = mutated_mod.get_global_var('func_11103')
call_13152 = relay.TupleGetItem(func_11101_call(), 0)
call_13153 = relay.TupleGetItem(func_11103_call(), 0)
func_12257_call = mod.get_global_var('func_12257')
func_12258_call = mutated_mod.get_global_var('func_12258')
call_13181 = relay.TupleGetItem(func_12257_call(), 0)
call_13182 = relay.TupleGetItem(func_12258_call(), 0)
output = relay.Tuple([call_13152,call_13181,])
output2 = relay.Tuple([call_13153,call_13182,])
func_13193 = relay.Function([], output)
mod['func_13193'] = func_13193
mod = relay.transform.InferType()(mod)
mutated_mod['func_13193'] = func_13193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13193_call = mutated_mod.get_global_var('func_13193')
call_13194 = func_13193_call()
output = call_13194
func_13195 = relay.Function([], output)
mutated_mod['func_13195'] = func_13195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11839_call = mod.get_global_var('func_11839')
func_11841_call = mutated_mod.get_global_var('func_11841')
call_13196 = relay.TupleGetItem(func_11839_call(), 3)
call_13197 = relay.TupleGetItem(func_11841_call(), 3)
func_10485_call = mod.get_global_var('func_10485')
func_10487_call = mutated_mod.get_global_var('func_10487')
call_13209 = func_10485_call()
call_13210 = func_10485_call()
func_12190_call = mod.get_global_var('func_12190')
func_12191_call = mutated_mod.get_global_var('func_12191')
call_13226 = func_12190_call()
call_13227 = func_12190_call()
output = relay.Tuple([call_13196,call_13209,call_13226,])
output2 = relay.Tuple([call_13197,call_13210,call_13227,])
func_13229 = relay.Function([], output)
mod['func_13229'] = func_13229
mod = relay.transform.InferType()(mod)
mutated_mod['func_13229'] = func_13229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13229_call = mutated_mod.get_global_var('func_13229')
call_13230 = func_13229_call()
output = call_13230
func_13231 = relay.Function([], output)
mutated_mod['func_13231'] = func_13231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11196_call = mod.get_global_var('func_11196')
func_11197_call = mutated_mod.get_global_var('func_11197')
call_13232 = relay.TupleGetItem(func_11196_call(), 0)
call_13233 = relay.TupleGetItem(func_11197_call(), 0)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
const_13235 = relay.const(5, dtype = "int8")#candidate|13235|()|const|int8
call_13234 = relay.TupleGetItem(func_2097_call(relay.reshape(const_13235.astype('int8'), [])), 1)
call_13236 = relay.TupleGetItem(func_2099_call(relay.reshape(const_13235.astype('int8'), [])), 1)
func_11200_call = mod.get_global_var('func_11200')
func_11201_call = mutated_mod.get_global_var('func_11201')
call_13243 = relay.TupleGetItem(func_11200_call(), 0)
call_13244 = relay.TupleGetItem(func_11201_call(), 0)
output = relay.Tuple([call_13232,call_13234,const_13235,call_13243,])
output2 = relay.Tuple([call_13233,call_13236,const_13235,call_13244,])
func_13260 = relay.Function([], output)
mod['func_13260'] = func_13260
mod = relay.transform.InferType()(mod)
output = func_13260()
func_13261 = relay.Function([], output)
mutated_mod['func_13261'] = func_13261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12052_call = mod.get_global_var('func_12052')
func_12053_call = mutated_mod.get_global_var('func_12053')
call_13335 = relay.TupleGetItem(func_12052_call(), 1)
call_13336 = relay.TupleGetItem(func_12053_call(), 1)
func_13260_call = mod.get_global_var('func_13260')
func_13261_call = mutated_mod.get_global_var('func_13261')
call_13344 = relay.TupleGetItem(func_13260_call(), 0)
call_13345 = relay.TupleGetItem(func_13261_call(), 0)
output = relay.Tuple([call_13335,call_13344,])
output2 = relay.Tuple([call_13336,call_13345,])
func_13373 = relay.Function([], output)
mod['func_13373'] = func_13373
mod = relay.transform.InferType()(mod)
output = func_13373()
func_13374 = relay.Function([], output)
mutated_mod['func_13374'] = func_13374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13455 = relay.var("var_13455", dtype = "float32", shape = (3, 1, 4))#candidate|13455|(3, 1, 4)|var|float32
uop_13456 = relay.exp(var_13455.astype('float32')) # shape=(3, 1, 4)
output = relay.Tuple([uop_13456,])
output2 = relay.Tuple([uop_13456,])
func_13462 = relay.Function([var_13455,], output)
mod['func_13462'] = func_13462
mod = relay.transform.InferType()(mod)
mutated_mod['func_13462'] = func_13462
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13463 = relay.var("var_13463", dtype = "float32", shape = (3, 1, 4))#candidate|13463|(3, 1, 4)|var|float32
func_13462_call = mutated_mod.get_global_var('func_13462')
call_13464 = func_13462_call(var_13463)
output = call_13464
func_13465 = relay.Function([var_13463], output)
mutated_mod['func_13465'] = func_13465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11658_call = mod.get_global_var('func_11658')
func_11660_call = mutated_mod.get_global_var('func_11660')
call_13508 = relay.TupleGetItem(func_11658_call(), 0)
call_13509 = relay.TupleGetItem(func_11660_call(), 0)
func_9835_call = mod.get_global_var('func_9835')
func_9839_call = mutated_mod.get_global_var('func_9839')
var_13513 = relay.var("var_13513", dtype = "uint64", shape = (700,))#candidate|13513|(700,)|var|uint64
const_13514 = relay.const([6.145025,-7.697141,3.159851,-5.925622,-6.846493,4.615032,-0.260835,-0.790935,-2.209483,-5.585253,-0.396851,-2.264402,-0.793755,-8.483940,5.799834,9.903496,-2.172876,-7.778990,5.907077,1.249258,5.930061,4.036105,-9.476817,2.225147,-8.093689], dtype = "float64")#candidate|13514|(25,)|const|float64
var_13515 = relay.var("var_13515", dtype = "int8", shape = ())#candidate|13515|()|var|int8
call_13512 = relay.TupleGetItem(func_9835_call(relay.reshape(var_13513.astype('uint64'), [700,]), relay.reshape(const_13514.astype('float64'), [25,]), relay.reshape(var_13515.astype('int8'), []), ), 4)
call_13516 = relay.TupleGetItem(func_9839_call(relay.reshape(var_13513.astype('uint64'), [700,]), relay.reshape(const_13514.astype('float64'), [25,]), relay.reshape(var_13515.astype('int8'), []), ), 4)
bop_13522 = relay.less(var_13515.astype('bool'), const_13514.astype('bool')) # shape=(25,)
func_4071_call = mod.get_global_var('func_4071')
func_4073_call = mutated_mod.get_global_var('func_4073')
call_13525 = func_4071_call(relay.reshape(call_13512.astype('float32'), [11, 5, 11]))
call_13526 = func_4071_call(relay.reshape(call_13512.astype('float32'), [11, 5, 11]))
output = relay.Tuple([call_13508,call_13512,var_13513,bop_13522,call_13525,])
output2 = relay.Tuple([call_13509,call_13516,var_13513,bop_13522,call_13526,])
func_13535 = relay.Function([var_13513,var_13515,], output)
mod['func_13535'] = func_13535
mod = relay.transform.InferType()(mod)
var_13536 = relay.var("var_13536", dtype = "uint64", shape = (700,))#candidate|13536|(700,)|var|uint64
var_13537 = relay.var("var_13537", dtype = "int8", shape = ())#candidate|13537|()|var|int8
output = func_13535(var_13536,var_13537,)
func_13538 = relay.Function([var_13536,var_13537,], output)
mutated_mod['func_13538'] = func_13538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12190_call = mod.get_global_var('func_12190')
func_12191_call = mutated_mod.get_global_var('func_12191')
call_13549 = func_12190_call()
call_13550 = func_12190_call()
uop_13561 = relay.asin(call_13549.astype('float64')) # shape=(5, 4, 7)
uop_13563 = relay.asin(call_13550.astype('float64')) # shape=(5, 4, 7)
output = relay.Tuple([uop_13561,])
output2 = relay.Tuple([uop_13563,])
func_13576 = relay.Function([], output)
mod['func_13576'] = func_13576
mod = relay.transform.InferType()(mod)
mutated_mod['func_13576'] = func_13576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13576_call = mutated_mod.get_global_var('func_13576')
call_13577 = func_13576_call()
output = call_13577
func_13578 = relay.Function([], output)
mutated_mod['func_13578'] = func_13578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13373_call = mod.get_global_var('func_13373')
func_13374_call = mutated_mod.get_global_var('func_13374')
call_13584 = relay.TupleGetItem(func_13373_call(), 1)
call_13585 = relay.TupleGetItem(func_13374_call(), 1)
output = call_13584
output2 = call_13585
func_13593 = relay.Function([], output)
mod['func_13593'] = func_13593
mod = relay.transform.InferType()(mod)
mutated_mod['func_13593'] = func_13593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13593_call = mutated_mod.get_global_var('func_13593')
call_13594 = func_13593_call()
output = call_13594
func_13595 = relay.Function([], output)
mutated_mod['func_13595'] = func_13595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12190_call = mod.get_global_var('func_12190')
func_12191_call = mutated_mod.get_global_var('func_12191')
call_13601 = func_12190_call()
call_13602 = func_12190_call()
func_12624_call = mod.get_global_var('func_12624')
func_12625_call = mutated_mod.get_global_var('func_12625')
call_13608 = relay.TupleGetItem(func_12624_call(), 0)
call_13609 = relay.TupleGetItem(func_12625_call(), 0)
func_11519_call = mod.get_global_var('func_11519')
func_11522_call = mutated_mod.get_global_var('func_11522')
const_13640 = relay.const([[-6.829742,0.998718,2.309109,3.608621],[6.952616,-3.872722,-3.930170,0.094495]], dtype = "float64")#candidate|13640|(2, 4)|const|float64
call_13639 = relay.TupleGetItem(func_11519_call(relay.reshape(const_13640.astype('float64'), [2, 2, 2])), 0)
call_13641 = relay.TupleGetItem(func_11522_call(relay.reshape(const_13640.astype('float64'), [2, 2, 2])), 0)
output = relay.Tuple([call_13601,call_13608,call_13639,const_13640,])
output2 = relay.Tuple([call_13602,call_13609,call_13641,const_13640,])
func_13642 = relay.Function([], output)
mod['func_13642'] = func_13642
mod = relay.transform.InferType()(mod)
output = func_13642()
func_13643 = relay.Function([], output)
mutated_mod['func_13643'] = func_13643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10811_call = mod.get_global_var('func_10811')
func_10813_call = mutated_mod.get_global_var('func_10813')
call_13654 = relay.TupleGetItem(func_10811_call(), 1)
call_13655 = relay.TupleGetItem(func_10813_call(), 1)
output = relay.Tuple([call_13654,])
output2 = relay.Tuple([call_13655,])
func_13666 = relay.Function([], output)
mod['func_13666'] = func_13666
mod = relay.transform.InferType()(mod)
mutated_mod['func_13666'] = func_13666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13666_call = mutated_mod.get_global_var('func_13666')
call_13667 = func_13666_call()
output = call_13667
func_13668 = relay.Function([], output)
mutated_mod['func_13668'] = func_13668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10262_call = mod.get_global_var('func_10262')
func_10264_call = mutated_mod.get_global_var('func_10264')
call_13710 = func_10262_call()
call_13711 = func_10262_call()
func_9835_call = mod.get_global_var('func_9835')
func_9839_call = mutated_mod.get_global_var('func_9839')
var_13725 = relay.var("var_13725", dtype = "uint64", shape = (700,))#candidate|13725|(700,)|var|uint64
var_13726 = relay.var("var_13726", dtype = "float64", shape = (25,))#candidate|13726|(25,)|var|float64
var_13727 = relay.var("var_13727", dtype = "int8", shape = ())#candidate|13727|()|var|int8
call_13724 = relay.TupleGetItem(func_9835_call(relay.reshape(var_13725.astype('uint64'), [700,]), relay.reshape(var_13726.astype('float64'), [25,]), relay.reshape(var_13727.astype('int8'), []), ), 8)
call_13728 = relay.TupleGetItem(func_9839_call(relay.reshape(var_13725.astype('uint64'), [700,]), relay.reshape(var_13726.astype('float64'), [25,]), relay.reshape(var_13727.astype('int8'), []), ), 8)
func_13229_call = mod.get_global_var('func_13229')
func_13231_call = mutated_mod.get_global_var('func_13231')
call_13739 = relay.TupleGetItem(func_13229_call(), 0)
call_13740 = relay.TupleGetItem(func_13231_call(), 0)
bop_13743 = relay.logical_xor(var_13727.astype('int64'), var_13726.astype('int64')) # shape=(25,)
func_4755_call = mod.get_global_var('func_4755')
func_4758_call = mutated_mod.get_global_var('func_4758')
const_13749 = relay.const([7.290063,-6.790552,0.722142,1.051562,8.890396,3.508882,2.519911,3.312923,2.790246,5.897588,7.015089,-5.501503,-1.818963,2.097481,-3.889688,6.517509,9.615269,1.298910,1.023180,-3.439881,-7.166668,0.037951,4.060161,-7.377180,-5.999063,-9.870777,-7.305657,7.717877,0.355566,-1.611039,1.553475,4.712812,1.016585,8.044816,6.985317,9.486731,9.845443,-9.725061,-1.502064,-9.404833,-6.100317,-4.094519,3.091487,8.645509,-7.346988,-1.297305,-9.438102,8.373054,-4.712960,-6.881101,-3.787551,-2.682554,-5.599789,-8.056116,8.912504,-7.823443,3.459096,-4.574557,-9.234857,5.465866,-9.662748,-6.796990,-1.940923,-9.624011,-1.772365,-5.127408,0.645082,2.187498,8.004606,-2.709419,-6.733771,-6.734923,0.500285,-6.454202,1.764451,6.493089,8.802899,-7.618313,4.152434,8.243702,3.458038,-0.099930,-0.342347,5.996452,8.614433,-7.857793,-3.847171,-0.319749,3.902375,0.624791,-9.300514,-6.405611,-1.393420,3.771568,-1.108688,8.839402,1.614028,-3.197936,2.857502,8.531785,3.194190,-9.528510,2.367080,5.504231,8.796748,1.513716,2.010346,-6.876900,-7.448842,4.674847,-8.914991,-7.410903,-9.576995,3.184069,-4.927934,6.587136,-6.393981,5.469125,-2.013646,-5.935256,5.276292,3.178753,-7.905672,-7.391481,-0.920290,9.391632,3.501514,-7.771465,-7.137677,3.956313,-5.832990,-2.202975,8.511432,-9.414365,-1.405598,3.681602,-8.025309,3.098950,-3.043660,2.649154,6.340426,1.153092,3.008664,1.926522,3.860360,-3.013976,1.461171,-3.459459,5.753474,-1.903264,-0.629930,7.149265,-7.494365,2.742355,3.923102,4.302284,8.662054,9.976699,-4.658977,-2.763425,3.918722,-0.922183,2.227638,5.092849,1.072066,-3.519236,-6.495382,6.645779,-1.234857,8.363574,2.357199,0.943469,-7.974436,9.189403,2.906983,-9.186680,0.711084,9.599064,-4.649133,3.882111,-2.701666,1.474802,2.060745,3.977536,5.853557,3.200171,-7.769360,0.944317,9.342643,3.997701,-0.300479,-4.711560,-3.916045,-9.063708,-1.185899,1.865060,7.844771,7.085763,2.418651,2.345334,-0.354304,3.597436,2.728189,5.985877,-6.261314,4.594007,-0.905196,-5.143981,7.795217,9.685200,-8.485968,-8.259106,5.745195,-3.155690,-2.393804,4.859529,5.092632,9.307016,3.748993,3.617600,-5.774715,-7.785517,-4.577183,4.524355,2.045115,-6.002252,0.670538,-9.820853,-2.485593,5.265211,-3.543675,6.158292,-8.953614,-4.470582,4.967377,2.075424,-8.170819,9.703055,-5.127119,-8.483463,5.432942,5.388434,0.315927,-2.706024,-1.380099,-4.620907,-3.567127,-5.302204,0.436586,7.890911,5.034427,-9.108916,-7.098455,-1.839660,-4.166147,1.778127,7.465220,7.036978,-1.282599,3.758999,8.245725,0.101373,6.672533,-5.304398,-0.183879,-8.563240,-5.320950,6.015808,-6.853134,8.310913,-5.082322,-4.166502,7.078243,-3.685327,4.463015,4.552946,9.592164,5.304822,-9.146009,0.196936,1.207635,-0.692349,-4.234934,-6.276602,-2.587888,-3.578114,-2.878043,-2.575074,-7.267692,0.685021,-1.620517,-5.616470,5.617723,1.034501,-2.303757,-2.055891,-1.887687,5.434762,-2.743585,5.003743,-4.299003,8.635141,-3.491952,-2.489304,-4.035859,5.665364,-3.094913,2.362915,7.942403,-4.472407,6.263795,6.316750,3.303053,4.950126,-9.998603,-4.970077,-0.875565,-5.933830,-6.170501,8.129831,-7.629016,9.172291,-0.980889,2.243323,8.279721,0.182475,-2.470150,-1.937426,-4.698468,-8.317731,-9.109405,4.853434,-0.657863,-4.642294,-8.977897,-8.432288,-7.062042,-6.079926,-8.081270,-3.015848,0.114489,-8.866254,-0.371808,5.407609,-0.243976,6.064654,7.740769,6.450522,-2.504855,-6.584882,4.208453,-6.779025,-9.543720,6.400688,-1.990300,7.833935,0.305300,9.601199,-4.095407,-6.953200,-7.434326,-6.808538,-1.284701,-0.317252,2.330163,-5.477040,1.007684,-7.672788,2.551584,-1.135057,7.826886,1.873436,8.023248,-3.752179,3.365088,7.941173,-3.163213,4.543970,7.737070,-6.664701,-1.503853,-0.152460,9.998947,-9.343936,-9.573542,-0.008661,-9.614737,-0.533026,-1.935806,3.743787,-5.534035,-0.055961,-7.321998,8.691768,3.832438,-9.936359,-5.053583,7.652756,8.309629,-1.936155,-7.512247,8.823977,-7.714569,-9.577276,-2.424198,0.534962,-9.938144,-6.064269,4.696902,2.952014,6.887050,3.889753,-0.615374,3.780911,-7.790001,6.915547,-7.245937,9.073763,-3.268863,7.487071,5.157618,4.211796,-8.589265,9.684821,-4.641249,-5.382804,-2.430006,9.254005,-2.742030,4.293793,5.563966,4.551457,7.902814,-0.677309,8.059684,2.536275,-0.638416,-3.639251,-5.865960,4.948091,-6.255707,-0.075263,2.710153,9.472542,-1.267023,-9.359695,0.422139,0.470929,-8.331473,6.712691,1.791639,-8.136796,8.444178,8.122633,-6.787569,-2.431057,-9.571173,-4.743917,8.833009,-2.257387,-0.628330,8.098858,-8.832278,-0.791466,-7.056628,-2.218108,-4.377540,-4.980858,-6.043955,2.112059,-3.378693,0.669355,-8.341028,-1.835663,-7.309222,5.789926,2.836477,-0.811145,2.688144,-7.341136,-4.679700,-9.343147,7.011714,7.060263,-4.497316,5.225391,-3.374576,4.157834,-7.872813,-0.687674,-1.143678,7.052496,-6.291670,-5.581305,-5.156685,-3.600647,7.824144,-8.298407,2.274877,-8.983409,-9.160221,-3.033272,6.739805,-3.351826,6.808137,-6.619549,-8.084295,9.860769,8.214375,4.601095,-6.028686,0.792440,-4.744988,-5.411806,0.703863,4.735817,-0.318582,-7.598123,4.478643,8.758730,-4.670705,7.066663,8.373916,5.432844,-0.209304,0.186139,-7.012145,-9.770139,-4.661741,-8.707944,-7.944167,4.406878,6.820875,-7.507597,-4.516869,1.316519,1.667268,-0.938633,8.409391,0.491089,-2.510030,-4.440334,1.675522,3.465144,-8.891949,6.863597,2.526245,1.534650,4.904661,2.722390,-0.219833,-4.892201,5.631287,-3.509996,-9.349780,-9.467414,-1.216005,-9.929399,-8.243291,7.052705,6.224027,1.050691,-8.600819,-6.832148,-1.229839,8.007291,-6.853020,-4.941155,-0.803183,1.115350,-0.913260,3.782708,-3.633111,1.648496,3.505612,4.463177,8.038285,2.068789,-8.167929,1.600697,-8.576537,8.802986,-3.456627,-8.482337,-8.399451,-4.973090,-5.122328,-9.399003,4.747860,6.970716,-9.049881,6.933548,6.653878,4.298125,-5.671511,-6.101982,-8.897333,-1.550908,1.207800,8.228059,-3.436942,-0.418226,-7.525619,2.834071,-0.102019], dtype = "float32")#candidate|13749|(605,)|const|float32
call_13748 = relay.TupleGetItem(func_4755_call(relay.reshape(var_13725.astype('uint64'), [10, 5, 14]), relay.reshape(const_13749.astype('float32'), [11, 55]), ), 2)
call_13750 = relay.TupleGetItem(func_4758_call(relay.reshape(var_13725.astype('uint64'), [10, 5, 14]), relay.reshape(const_13749.astype('float32'), [11, 55]), ), 2)
uop_13759 = relay.asinh(call_13748.astype('float32')) # shape=(11, 55)
uop_13761 = relay.asinh(call_13750.astype('float32')) # shape=(11, 55)
uop_13766 = relay.atan(uop_13759.astype('float32')) # shape=(11, 55)
uop_13768 = relay.atan(uop_13761.astype('float32')) # shape=(11, 55)
var_13771 = relay.var("var_13771", dtype = "float32", shape = (11, 55))#candidate|13771|(11, 55)|var|float32
bop_13772 = relay.logical_or(call_13748.astype('bool'), relay.reshape(var_13771.astype('bool'), relay.shape_of(call_13748))) # shape=(11, 55)
bop_13775 = relay.logical_or(call_13750.astype('bool'), relay.reshape(var_13771.astype('bool'), relay.shape_of(call_13750))) # shape=(11, 55)
output = relay.Tuple([call_13710,call_13724,var_13725,call_13739,bop_13743,const_13749,uop_13766,bop_13772,])
output2 = relay.Tuple([call_13711,call_13728,var_13725,call_13740,bop_13743,const_13749,uop_13768,bop_13775,])
func_13778 = relay.Function([var_13725,var_13726,var_13727,var_13771,], output)
mod['func_13778'] = func_13778
mod = relay.transform.InferType()(mod)
mutated_mod['func_13778'] = func_13778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13778_call = mutated_mod.get_global_var('func_13778')
var_13780 = relay.var("var_13780", dtype = "uint64", shape = (700,))#candidate|13780|(700,)|var|uint64
var_13781 = relay.var("var_13781", dtype = "float64", shape = (25,))#candidate|13781|(25,)|var|float64
var_13782 = relay.var("var_13782", dtype = "int8", shape = ())#candidate|13782|()|var|int8
var_13783 = relay.var("var_13783", dtype = "float32", shape = (11, 55))#candidate|13783|(11, 55)|var|float32
call_13779 = func_13778_call(var_13780,var_13781,var_13782,var_13783,)
output = call_13779
func_13784 = relay.Function([var_13780,var_13781,var_13782,var_13783,], output)
mutated_mod['func_13784'] = func_13784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13666_call = mod.get_global_var('func_13666')
func_13668_call = mutated_mod.get_global_var('func_13668')
call_13809 = relay.TupleGetItem(func_13666_call(), 0)
call_13810 = relay.TupleGetItem(func_13668_call(), 0)
output = call_13809
output2 = call_13810
func_13819 = relay.Function([], output)
mod['func_13819'] = func_13819
mod = relay.transform.InferType()(mod)
output = func_13819()
func_13820 = relay.Function([], output)
mutated_mod['func_13820'] = func_13820
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13821 = relay.var("var_13821", dtype = "float32", shape = ())#candidate|13821|()|var|float32
var_13822 = relay.var("var_13822", dtype = "float32", shape = (4, 10, 1))#candidate|13822|(4, 10, 1)|var|float32
bop_13823 = relay.minimum(var_13821.astype('float32'), var_13822.astype('float32')) # shape=(4, 10, 1)
func_9599_call = mod.get_global_var('func_9599')
func_9602_call = mutated_mod.get_global_var('func_9602')
var_13832 = relay.var("var_13832", dtype = "uint64", shape = (6, 3))#candidate|13832|(6, 3)|var|uint64
call_13831 = relay.TupleGetItem(func_9599_call(relay.reshape(var_13821.astype('bool'), []), relay.reshape(var_13832.astype('uint64'), [18, 1]), ), 2)
call_13833 = relay.TupleGetItem(func_9602_call(relay.reshape(var_13821.astype('bool'), []), relay.reshape(var_13832.astype('uint64'), [18, 1]), ), 2)
output = relay.Tuple([bop_13823,call_13831,var_13832,])
output2 = relay.Tuple([bop_13823,call_13833,var_13832,])
func_13838 = relay.Function([var_13821,var_13822,var_13832,], output)
mod['func_13838'] = func_13838
mod = relay.transform.InferType()(mod)
var_13839 = relay.var("var_13839", dtype = "float32", shape = ())#candidate|13839|()|var|float32
var_13840 = relay.var("var_13840", dtype = "float32", shape = (4, 10, 1))#candidate|13840|(4, 10, 1)|var|float32
var_13841 = relay.var("var_13841", dtype = "uint64", shape = (6, 3))#candidate|13841|(6, 3)|var|uint64
output = func_13838(var_13839,var_13840,var_13841,)
func_13842 = relay.Function([var_13839,var_13840,var_13841,], output)
mutated_mod['func_13842'] = func_13842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13576_call = mod.get_global_var('func_13576')
func_13578_call = mutated_mod.get_global_var('func_13578')
call_13857 = relay.TupleGetItem(func_13576_call(), 0)
call_13858 = relay.TupleGetItem(func_13578_call(), 0)
uop_13890 = relay.cos(call_13857.astype('float64')) # shape=(5, 4, 7)
uop_13892 = relay.cos(call_13858.astype('float64')) # shape=(5, 4, 7)
func_11839_call = mod.get_global_var('func_11839')
func_11841_call = mutated_mod.get_global_var('func_11841')
call_13897 = relay.TupleGetItem(func_11839_call(), 1)
call_13898 = relay.TupleGetItem(func_11841_call(), 1)
output = relay.Tuple([uop_13890,call_13897,])
output2 = relay.Tuple([uop_13892,call_13898,])
func_13910 = relay.Function([], output)
mod['func_13910'] = func_13910
mod = relay.transform.InferType()(mod)
output = func_13910()
func_13911 = relay.Function([], output)
mutated_mod['func_13911'] = func_13911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11200_call = mod.get_global_var('func_11200')
func_11201_call = mutated_mod.get_global_var('func_11201')
call_13958 = relay.TupleGetItem(func_11200_call(), 0)
call_13959 = relay.TupleGetItem(func_11201_call(), 0)
func_9963_call = mod.get_global_var('func_9963')
func_9966_call = mutated_mod.get_global_var('func_9966')
const_13975 = relay.const([6.931746,-7.215360,-3.460584,-2.013873,4.648219,-4.010391,-2.135836,4.432391,7.870150,0.418095,-5.273710,1.888866,-6.228841,7.864536,-7.753316,4.137690,3.527899,7.103582,-0.943770,8.998318,-6.083861,8.759576,6.156359,8.080288,1.843122,2.139520,-5.396452,-8.442087,2.587278,3.037902,-0.968198,-4.666123,-6.417986,0.586008,9.468584,-3.486512,2.971661,-7.574288,-5.411335,5.889246,3.001860,-2.350583,7.278453,-3.041352,-0.422199,-8.050368,-7.748087,2.406640,-1.178768,0.841273,0.736818,6.064620,9.325492,2.038630,-2.076295,-7.241068,1.988486,2.209306,9.364125,-2.534811,1.246156,-4.267875,2.461870,9.749432,2.723823,7.054267,-7.872219,5.472796,-2.047286,-4.919242,8.436881,-4.269332,3.559636,1.997984,4.177959,-8.479705,-9.182783,-1.459889,-0.194902,0.789756,-1.360665,-6.709330,-5.445627,6.415836,-7.999335,3.161646,-7.811903,5.208115,1.326028,-1.953558,-4.433977,-6.920117,1.277273,-8.319495,-0.339750,7.111462,-9.965613,6.749294,3.018413,4.204362,-3.156130,5.819747,9.298622,-8.929339,8.420345,3.460144,-4.558920,-8.252624,5.704505,2.949326,2.708330,-4.750238,8.783404,-9.860444,-6.828092,-3.232636,-5.494078,2.415896,-6.646396,-5.971245,-8.208537,2.633891,0.080829,6.296116,-3.559945,-2.308358,8.219628,1.022720,3.482087,-1.999561,-9.406487,-7.977923,-8.948201,-0.416448,-1.850257,7.917329,-0.741554,7.796439,-4.733203,-4.989881,2.102208,-7.995889,-0.868940,3.464296,3.966120,3.594990,2.293331,-5.407215,-3.485026,-1.202357,-4.406035,0.555302,4.751122,-1.451340,0.187209,-5.863934,-6.407678,-0.984013,3.131618,-5.387744,2.897405,-2.701084,9.211282,-2.667451,7.392110,-8.692392,-5.347873,-8.349884,-2.625861,-4.286625,-0.768862,7.085172,1.714109,7.258805,9.550594,-0.373643,3.387341,2.507499,6.136312,-7.364451,7.997075,-8.588854,7.142085,3.564935,-0.800804,7.041071,-1.175772,9.151388,-4.136023,-0.337731,-0.546058,-6.033658,0.206235,-1.093857,-4.303338,0.722977,-3.158880,6.535548,9.462094,5.922013,-2.773781,-0.257233,8.637745,3.105366,-1.069987,-8.254528,-9.099905,-4.686784,-8.721128,-5.797117,-7.693473,-2.563427,-2.376146,-1.364931,-0.757674,9.081741,-7.844159,-9.645976,3.543917,-5.752717,3.486318,-8.152581,4.122235,-0.649644,2.805631,-1.977641,-4.174667,-7.109210,6.847573,-8.413889,4.995140,-9.764865,3.970712,0.125716,-6.907870,-2.239897,-4.330351,1.397010,-6.548071,-1.420612,9.226514,9.184295,9.266613,-0.842220,-0.136156,1.457284,-1.877152,9.813401,-7.425894,-2.359946,-1.793613,-9.563563,1.467964,3.409831,9.919081,6.996126,-7.341995,5.902486,9.084363,-9.968629,-6.882109,6.775789,-3.988492,3.824042,0.963105,9.613956,-6.735441,9.221113,-3.301267,2.467032,-4.614524,-8.443416,5.652934,-9.062841,7.461968,-2.434687,-2.783671,-0.162249,6.407782,3.186850,1.505145,-9.425047,0.095735,7.470684,-7.125772,5.793142,4.054959,-7.175889,5.005157,8.457571,6.063101,5.766538,0.476662,-5.804221,8.677153,-4.953021,4.687219,-5.895238,-9.996917,-1.435726,0.185951,2.478902,0.102559,5.187633,-5.298822,0.809185,7.328837,-5.860746,-1.728108,7.389149,-1.270159,-5.410234,-3.934816,-4.062391,-8.525179,-0.229491,1.552810,-5.782142,0.354310,4.194988,7.337121,7.890560,9.505583,8.232949,0.490177,7.281791,-7.128890,9.216035,7.964728,2.766429], dtype = "float32")#candidate|13975|(330,)|const|float32
call_13974 = relay.TupleGetItem(func_9963_call(relay.reshape(call_13958.astype('uint8'), [140,]), relay.reshape(const_13975.astype('float32'), [330,]), ), 3)
call_13976 = relay.TupleGetItem(func_9966_call(relay.reshape(call_13958.astype('uint8'), [140,]), relay.reshape(const_13975.astype('float32'), [330,]), ), 3)
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_13982 = relay.TupleGetItem(func_9701_call(), 1)
call_13983 = relay.TupleGetItem(func_9702_call(), 1)
output = relay.Tuple([call_13958,call_13974,const_13975,call_13982,])
output2 = relay.Tuple([call_13959,call_13976,const_13975,call_13983,])
func_14001 = relay.Function([], output)
mod['func_14001'] = func_14001
mod = relay.transform.InferType()(mod)
output = func_14001()
func_14002 = relay.Function([], output)
mutated_mod['func_14002'] = func_14002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12444_call = mod.get_global_var('func_12444')
func_12446_call = mutated_mod.get_global_var('func_12446')
call_14106 = func_12444_call()
call_14107 = func_12444_call()
output = call_14106
output2 = call_14107
func_14132 = relay.Function([], output)
mod['func_14132'] = func_14132
mod = relay.transform.InferType()(mod)
output = func_14132()
func_14133 = relay.Function([], output)
mutated_mod['func_14133'] = func_14133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12190_call = mod.get_global_var('func_12190')
func_12191_call = mutated_mod.get_global_var('func_12191')
call_14167 = func_12190_call()
call_14168 = func_12190_call()
output = call_14167
output2 = call_14168
func_14169 = relay.Function([], output)
mod['func_14169'] = func_14169
mod = relay.transform.InferType()(mod)
mutated_mod['func_14169'] = func_14169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14169_call = mutated_mod.get_global_var('func_14169')
call_14170 = func_14169_call()
output = call_14170
func_14171 = relay.Function([], output)
mutated_mod['func_14171'] = func_14171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11642_call = mod.get_global_var('func_11642')
func_11644_call = mutated_mod.get_global_var('func_11644')
call_14178 = relay.TupleGetItem(func_11642_call(), 0)
call_14179 = relay.TupleGetItem(func_11644_call(), 0)
output = relay.Tuple([call_14178,])
output2 = relay.Tuple([call_14179,])
func_14180 = relay.Function([], output)
mod['func_14180'] = func_14180
mod = relay.transform.InferType()(mod)
mutated_mod['func_14180'] = func_14180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14180_call = mutated_mod.get_global_var('func_14180')
call_14181 = func_14180_call()
output = call_14181
func_14182 = relay.Function([], output)
mutated_mod['func_14182'] = func_14182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11278_call = mod.get_global_var('func_11278')
func_11280_call = mutated_mod.get_global_var('func_11280')
call_14205 = func_11278_call()
call_14206 = func_11278_call()
var_14210 = relay.var("var_14210", dtype = "uint64", shape = (4, 693))#candidate|14210|(4, 693)|var|uint64
bop_14211 = relay.right_shift(call_14205.astype('uint32'), var_14210.astype('uint32')) # shape=(4, 693)
bop_14214 = relay.right_shift(call_14206.astype('uint32'), var_14210.astype('uint32')) # shape=(4, 693)
uop_14224 = relay.cos(call_14205.astype('float64')) # shape=(1, 693)
uop_14226 = relay.cos(call_14206.astype('float64')) # shape=(1, 693)
var_14227 = relay.var("var_14227", dtype = "float64", shape = (8, 693))#candidate|14227|(8, 693)|var|float64
bop_14228 = relay.subtract(uop_14224.astype('uint8'), var_14227.astype('uint8')) # shape=(8, 693)
bop_14231 = relay.subtract(uop_14226.astype('uint8'), var_14227.astype('uint8')) # shape=(8, 693)
uop_14236 = relay.atanh(uop_14224.astype('float64')) # shape=(1, 693)
uop_14238 = relay.atanh(uop_14226.astype('float64')) # shape=(1, 693)
bop_14241 = relay.minimum(uop_14236.astype('float64'), bop_14211.astype('float64')) # shape=(4, 693)
bop_14244 = relay.minimum(uop_14238.astype('float64'), bop_14214.astype('float64')) # shape=(4, 693)
uop_14245 = relay.erf(bop_14241.astype('float32')) # shape=(4, 693)
uop_14247 = relay.erf(bop_14244.astype('float32')) # shape=(4, 693)
func_11839_call = mod.get_global_var('func_11839')
func_11841_call = mutated_mod.get_global_var('func_11841')
call_14249 = relay.TupleGetItem(func_11839_call(), 1)
call_14250 = relay.TupleGetItem(func_11841_call(), 1)
const_14262 = relay.const([[8.488704,0.256254,-8.008010,-1.098816,9.735421,5.903259,1.803165,-5.578670,-3.389062,2.477373,-5.729847,-8.519887,-5.646506,8.518099,-0.629802,-1.239385,-1.857802,9.437773,-2.754021,0.602287,2.252956,8.246245,6.608548,-9.476533,-0.946770,3.540327,3.138195,0.875057,-6.502925,-6.563069,2.656974,-7.885157,-9.424897,-3.838194,6.717563,-3.070941,-9.303728,1.361901,3.795399,2.338959,8.644540,5.162427,-8.141812,8.373183,5.077646,7.600589,-9.912091,-6.230925,-1.808169,0.650833,-9.202937,-5.335051,-2.576805,-4.203269,2.145726,3.734485,2.010585,-8.888049,5.569882,-5.083068,3.710600,6.529327,4.911413,6.830991,-7.824680,7.354746,-6.727436,6.500293,-0.217832,7.881909,2.518319,-7.587608,1.172675,4.539132,-8.043967,3.429020,7.216459,-5.991076,-9.587416,-6.633307,-5.490472,2.002283,-4.594105,8.272700,2.147112,-4.446866,-2.096484,9.220960,4.350964,-7.091246,-0.908235,-5.471620,0.770433,-5.633904,-4.116419,-3.750942,-5.425662,4.164353,3.047904,8.636003,4.361911,3.536842,8.775354,8.324412,8.491353,-6.644419,1.809920,-0.460607,9.688984,-5.108441,7.739150,1.665081,7.338164,-1.183254,5.680784,3.670734,-4.184651,-7.943026,1.556840,-2.825784,-1.482822,-6.416615,7.107539,-2.046258,3.081776,-9.198037,0.620702,-3.361702,8.729031,5.195656,9.163580,2.312955,-1.760644,8.204960,-0.857713,-7.275018,-6.831243,-8.371283,9.261227,4.598759,-8.530738,-7.575127,8.862186,-3.574134,0.535384,8.139924,-4.271545,-6.179557,3.041247,-6.927278,-7.316949,-5.333401,4.676563,-1.687106,6.262997,9.999105,-3.712593,2.484753,-5.150369,-2.095098,-7.794331,-8.435786,-3.678592,1.995903,-5.583363,0.438528,-1.730822,-0.529629,9.815351,0.825762,-7.131315,-4.733555,-3.448558,-6.321435,3.410415,-1.776014,-2.484828,-4.204445,-4.683557,-2.810502,9.174241,2.670868,6.664451,5.448998,-3.943049,1.891578,1.196224,2.980344,-8.381717,-9.294672,-0.441542,2.039922,-4.502395,-6.100348,1.987855,5.952276,-6.468885,-9.779697,-0.575888,-3.638562,-2.932683,1.191266,5.743614,1.401396,-0.301787,1.998700,3.561431,-5.856921,-7.897958,-2.203130,9.253343,-5.579652,-4.065101,-5.813091,-2.106304,8.336382,-5.381577,-8.438460,-1.249655,7.055504,-6.841111,0.040050,8.825204,8.870040,-1.041340,9.806619,9.553800,-6.286593,5.515964,0.846794,4.681650,-8.042071,1.489891,-5.964545,1.050546,1.274010,-5.278680,9.605271,-2.183454,-7.267720,-9.637418,-9.287430,9.801240,9.672144,7.409652,5.875057,4.249381,4.882237,-1.094595,-0.639806,2.815525,3.602954,5.317743,-9.313156,7.912598,-8.316170,-6.914649,-4.190516,5.908701,-5.276951,-6.361637,-4.725135,-5.579200,-6.327130,6.186931,-0.915986,-8.857567,-5.432367,-1.385869,1.229194,5.193664,5.217154,2.877350,-9.588655,7.015016,9.561036,-1.643447,5.017017,9.278122,8.865739,4.607355,-8.242590,-8.168860,1.004968,7.924104,-1.474383,-2.296450,-4.028386,8.416787,7.633191,-8.019507,-0.727210,-9.506670,7.301100,-9.825324,-6.798385,-3.051309,8.636228,0.814416,8.539947,-6.198083,-1.094904,2.880965,-1.521258,9.820912,2.444080,-0.018391,-0.395858,5.366398,6.439620,-6.689724,6.898318,-6.964547,4.296554,8.737013,-8.716902,1.908194,2.871137,6.014307,8.241756,6.147558,-6.723759,7.804072,-2.949390,-7.013727,-5.466781,8.110748,5.709126,-9.037299,5.742003,2.170901,0.997172,-8.026160,0.859807,-8.263645,-5.965596,7.844705,-7.104153,1.119003,-2.539174,-2.905862,1.416257,-1.177757,5.490724,2.645513,8.597707,-2.770783,6.429213,4.983520,-7.661774,-2.300114,4.999736,-8.874556,-7.236631,-8.276222,8.850005,3.632185,-4.482586,-8.988749,-1.006184,-9.685873,-8.466760,0.358232,-7.468592,5.380339,-3.956943,7.642456,2.768606,2.434972,-9.361760,-1.601438,-7.953517,-8.984376,-1.243432,-9.615559,-6.294114,-7.264566,0.041768,9.669595,-0.810097,7.916544,-1.013267,-6.584608,-2.004513,3.670119,8.953450,-3.042122,0.747556,-0.178498,6.687896,-8.296597,6.273322,5.947922,-4.680379,-9.421083,0.518356,-2.730778,4.747197,2.185894,-2.333576,-9.171404,6.957237,-9.337071,3.409292,-4.689461,2.657688,-4.231634,0.087365,-3.795985,-6.011271,-0.270411,-6.210748,3.058737,8.075476,4.686871,5.308661,5.977457,-8.693240,3.100730,-0.912499,6.214239,0.988665,-4.634748,9.344994,-5.928054,-3.635340,0.416872,7.522385,-1.093285,2.233347,7.362598,2.369660,8.234252,-8.783535,6.150874,-4.722670,-5.734295,-9.786626,-7.012620,7.138927,-3.451631,7.849940,-4.909140,-0.458693,5.061143,-8.562771,9.593139,0.953526,-4.023034,7.512810,-4.744229,-7.071700,1.867856,-9.215514,-5.773545,6.828671,4.872502,-2.069510,0.208759,-8.516630,-6.300417,2.219825,-3.394754,2.293441,-4.572963,-8.332246,-2.884308,-1.892985,5.721240,-6.311635,-2.475900,-2.268794,-4.165058,-4.067600,-9.324120,6.116793,2.661559,-2.907618,7.303810,-1.729746,-5.707296,8.391193,9.556014,7.330840,-4.891348,-3.250049,2.694664,-0.104295,0.617180,2.449464,9.347904,4.852976,-7.328454,-7.468799,0.462393,0.100735,6.446650,-9.283177,-9.074012,3.340420,5.914810,-8.987521,7.325776,3.378305,4.662396,-9.049111,5.388883,2.150068,6.635675,6.810739,9.015003,-6.351628,4.558722,7.158264,-0.752055,-8.271347,1.988392,-8.714433,7.323696,2.259173,0.480696,6.286114,9.224833,-2.272289,-3.551401,0.306080,-6.254902,-7.711954,5.205017,-4.126066,1.335486,4.352485,9.361968,5.953110,8.431877,6.199417,-2.856510,6.945409,7.603372,-7.844894,-6.247199,4.249327,2.274039,-4.020152,-8.092797,1.520318,-5.250798,-6.183689,-4.962156,-1.907477,-1.698192,-5.098568,0.508798,5.847399,8.907316,-1.526811,0.356732,7.677200,-1.119056,7.565749,-2.177311,-2.928933,-8.362203,-5.885992,-7.152930,-4.474584,-3.031973,1.913223,8.091304,-8.909115,-0.178483,-0.332983,1.349145,-9.012456,9.946185,-6.194247,-0.409132,-2.299838,6.725186,-0.848590,-9.413637,-4.077433,5.495092,-8.401147,-4.650486,-6.684859,4.155890,4.856267,-3.483561,-5.353243,2.843042,9.417761,7.921819,-4.093544,-9.953620,-3.916375,-2.941821,5.220785,-1.615501,-9.542979,-6.282348,2.553570,9.452646,-9.483084,9.164447,9.874933,4.877380,-7.304865,0.866830,8.984142,6.035302,-2.976718,6.040750,-5.798817,4.748306,-9.453199,5.277555,5.311839,-6.915268,-9.581353,7.836291,4.227380,-0.353002,3.143638,-8.807186,5.691032,2.832844,1.955047,7.485519,-8.332751,-1.321142,-2.877498,3.744307,-5.165939,-3.433845,5.412010,7.680341,-7.386263,-1.980782,7.461532,3.317945,1.076186,-4.413617,6.785526,-3.364586,-8.895191,-7.094774,-7.427485,-4.934613,-6.338916,0.934825,-8.067817,-4.619969,-2.738568,9.791073,0.900630,-1.974457,2.077064,-6.446933,-3.473360,-5.235183,4.989037,7.477015,-7.738314,1.121402,-7.107907,-8.729498,5.572524,-2.895803,-2.564787,1.566590,-2.319178,-2.035848,-2.177325,-5.748654,2.508030,8.182871,0.791914,-1.444671,-9.855007,-3.063456,-3.789147,-2.790629,9.160029,8.815872,-4.015767,-8.625191,-2.359944,-1.633862,9.083071,4.317078,7.503016,6.229300],[9.369140,1.755039,1.098145,1.065928,-2.736658,0.450373,-0.329464,3.060893,3.659270,4.617341,-9.170071,-6.040578,-7.522273,-8.945986,-8.610755,-8.513369,0.623790,-5.431737,-1.935918,-9.133648,8.178889,-9.029633,-1.399822,-9.757952,8.650142,4.884045,5.304259,5.786919,4.528064,1.059061,-6.893483,-1.184056,6.856015,-4.076092,-5.377868,2.795948,8.000597,6.657925,6.134952,1.619198,7.474305,3.465193,0.261887,-5.956536,-6.903006,-5.928030,6.584874,3.294204,5.921853,-0.301701,-8.667327,8.198383,-8.671559,-4.672062,-5.714427,-4.862017,-2.876296,-2.674066,6.906226,5.285091,7.436402,-2.127528,-7.493314,1.427141,0.174616,8.161498,2.328978,1.629229,3.923471,-2.028858,-3.879038,3.279783,-3.499325,-7.965984,-5.913664,3.690665,8.979475,-9.715395,7.853406,-1.723458,-5.898469,3.004640,-6.655686,0.447104,-2.335265,-2.919035,-6.572309,5.974692,4.677834,-7.983806,2.370986,1.823230,9.195289,-5.750666,-0.250503,-3.870887,-9.304112,-6.557653,-6.659441,-8.895635,2.095772,6.338196,-1.762122,-0.983752,-2.179601,5.488803,6.257998,2.789309,0.335713,5.714980,-2.450502,-6.778666,1.537087,8.769929,-3.812333,-8.682145,-9.358339,3.048460,7.963030,5.383428,2.672176,9.441537,0.112370,6.764276,6.400982,-8.930641,-6.718514,-0.321310,-3.008421,-0.970171,-8.279335,-0.035671,-8.283137,3.643311,-5.627833,-8.107792,-7.103972,-5.233752,-7.937645,-4.300684,-0.593082,2.051590,2.898204,2.961936,5.634397,-7.859227,-7.710405,1.771118,-6.172372,-6.009821,4.812601,-5.989767,9.487316,9.777806,9.214871,7.616291,4.043678,-9.046934,-3.052318,-2.082698,6.150892,7.347696,6.656851,5.678610,-7.887441,-4.020414,-5.517741,8.700907,1.993446,9.309615,-3.551281,9.313850,4.077972,-2.015555,4.541880,6.215952,7.328894,-1.671636,2.551622,-5.071600,-0.931913,7.621074,-9.752223,-3.261093,-1.554670,-9.836430,-2.235315,-5.004242,2.282435,5.140615,3.177094,-5.933464,-8.093110,8.040238,-8.088111,5.860815,2.239976,2.024395,6.694417,5.470729,2.016457,-3.326662,7.345737,6.065023,7.058955,0.247542,9.125026,2.658919,1.462484,-1.459971,-2.788259,-5.472826,-0.374339,4.260775,3.448280,7.050021,-0.191035,-6.590895,-7.507738,0.043362,-0.303416,-3.653612,-9.579922,5.952393,9.549168,8.338060,8.475751,1.927223,9.397407,0.764595,6.993764,2.210428,-0.615624,-3.025120,6.451018,-1.015705,-2.777141,0.072106,-1.134029,-6.551331,-3.294481,-3.667370,1.326571,-1.250948,-7.752463,2.242342,-7.130856,-3.337954,-0.780845,-1.244827,-0.626082,-8.518327,2.302452,7.374319,-9.070106,4.637177,7.083932,0.369638,6.828524,2.566811,4.818644,-9.134784,6.120549,9.595761,9.887909,3.823360,-6.042060,-9.204106,8.268464,-8.703333,-5.063227,7.021932,7.702303,-4.980532,-1.045974,-0.955314,4.617258,1.562861,5.267300,-0.191275,-2.161657,-8.021573,5.320144,9.532705,-9.904110,9.703167,1.729280,-7.095230,9.183481,-7.386247,-6.712503,6.220289,6.545241,-1.053472,8.087830,8.142339,-5.287757,9.781452,-3.069832,9.588403,-5.704315,1.903595,3.238304,-5.385481,5.972115,-8.468108,0.711410,4.249516,-9.220882,-8.729262,-0.936438,-4.617646,3.387972,3.166204,-8.952118,2.098331,5.669779,-3.895779,-8.639017,6.576781,0.203762,-8.817509,0.820461,3.953159,2.375587,-8.861372,1.324783,7.785180,-5.303554,3.830890,5.393826,6.142137,1.006529,2.085531,-9.146953,4.833339,-7.501720,-8.676386,6.420577,9.243039,2.145733,5.375937,-4.485822,-2.102446,7.706216,7.889696,-2.773424,4.980024,8.608055,2.337230,2.693208,9.445393,-6.610847,1.852270,-1.842419,7.100958,-5.484411,-8.213927,1.600681,6.000786,-4.868929,5.981198,5.972456,1.318918,8.648990,-8.984381,9.697513,-0.436838,-6.009909,-2.893639,-1.767747,-3.994375,-5.230057,-7.918181,6.543997,-5.863580,-8.990186,-2.717347,-0.705794,-5.891344,6.253691,-0.237654,2.155862,-0.851136,-8.082893,-7.160827,-5.640833,-6.518866,4.597546,-7.438969,-7.873953,9.886125,-5.202900,6.043482,5.394043,-9.679167,-5.943125,3.394547,7.389054,2.827157,-2.554003,4.616284,3.077873,2.347951,-0.052769,1.502430,-0.933193,4.607262,3.211259,0.416197,9.645857,1.110875,-5.295806,2.438974,-3.856573,-1.689956,-1.464445,-4.643590,7.700831,-1.439801,0.199173,-9.850300,-2.598787,8.206884,-9.139631,-2.759837,-6.482850,-0.036391,9.638892,1.603732,-7.448197,-1.447225,3.016822,-6.435510,1.278229,-5.745349,8.652261,-9.459445,-3.733631,3.070470,8.707160,-0.040755,3.196815,-3.916351,-8.037465,-1.091269,4.295384,1.147290,7.855428,4.963927,4.004993,-4.178643,6.067523,-0.078052,-3.772306,-6.299207,-1.120565,5.467355,8.125226,-0.586230,1.196722,3.825390,3.081161,5.016387,-2.372116,0.349461,-0.289599,-1.160505,4.108393,-1.650263,-2.397409,5.242064,9.174740,-0.500691,-7.943538,2.488415,-2.494805,1.294654,6.797359,-5.550826,3.059843,4.758507,9.802845,1.119293,9.740769,-6.134814,8.298883,-0.481643,1.220004,9.683704,4.068408,2.138905,6.025043,2.262540,-9.734782,4.476479,-6.482013,6.845016,-8.710197,-3.938596,-9.097003,-8.484065,-6.411778,5.753219,2.113824,9.434832,3.943874,-2.845819,6.553231,7.343466,-9.360541,-0.708197,-8.351008,-9.573432,-4.426541,-5.076878,-5.766567,-3.490115,4.419041,-0.611350,0.010648,2.227561,-2.413284,9.452162,3.368318,5.421265,6.513145,-0.912718,-0.363134,1.113439,0.501810,8.122661,-7.371976,-3.834937,2.851840,-4.640827,0.150481,4.740193,-5.228277,0.733549,-4.203066,3.640759,-6.612586,1.164165,-2.986111,-6.488485,-1.106951,2.912992,2.850628,-9.305553,-4.106647,5.629781,-0.881161,-4.201561,-1.587376,-8.958793,-9.233580,-1.627507,-6.619305,4.247167,-5.181120,-9.599618,-5.475680,9.220379,-3.428986,-9.301863,4.098365,-0.884835,2.911464,-1.390427,-5.100583,-8.008493,-4.983842,-1.728243,-3.260006,9.251872,5.795818,8.885921,-8.370130,9.371595,-4.454203,9.923619,-8.842945,7.396704,-5.233760,3.350865,-7.053924,-4.350067,-7.623124,7.327850,-1.936850,-7.217895,8.313376,0.423545,-1.725046,-8.239129,7.249128,-1.304032,0.432290,1.120496,3.880519,-4.900212,-9.069474,-8.840936,0.818450,1.926496,1.398861,6.724575,8.003070,-9.432713,-6.752006,-5.637597,-7.262123,1.535041,-4.426511,-4.553869,7.576106,0.615492,8.800114,-6.802152,-5.118163,-9.881110,1.283070,-3.401364,3.382664,1.063225,6.726701,9.915999,-0.642136,9.204981,1.164215,3.786466,-5.347819,-8.783392,-6.275520,6.437414,-2.562962,-2.557822,5.743535,-4.542894,0.179056,-8.071017,1.765406,6.793567,-0.119982,-0.014354,-6.098429,-4.149890,-0.929627,-3.334724,-9.204884,1.093724,3.894851,-4.746046,-5.612812,5.236334,-2.632525,-9.783263,7.467535,-3.897442,-7.757988,1.811322,-4.110429,-9.709270,-5.838268,0.692990,-6.955568,9.988009,2.510848,-2.579141,-6.336877,7.833501,-0.538401,-4.692432,2.690521,8.630527,0.207205,-9.872498,1.149615,3.386985,7.532240,-2.230627,2.532394,-4.678874,6.201546,3.701407,-2.065631,2.166920,-9.434090,3.703394,-0.024765,-4.630855,5.480195],[7.779339,2.299841,4.845390,0.046892,-0.168109,8.204927,4.350173,3.969139,6.283766,-6.683394,-1.314328,-1.635928,-0.449748,3.155888,5.044941,-4.485673,8.242801,4.292829,-1.225440,-0.794724,6.434203,7.138245,-9.083159,3.896944,1.218705,-7.797981,1.596135,5.392766,7.203568,-6.566430,3.052359,6.086511,-7.795791,4.477766,-9.132343,5.203381,-3.781471,-1.642960,8.349442,-1.524982,4.086383,9.647185,2.005516,1.701222,3.276315,3.966385,-0.659882,2.840870,7.605036,9.906028,-4.563158,-1.634435,-1.214983,3.771518,-2.564220,-9.659031,8.164857,-8.216388,-0.779157,6.577736,9.209649,-5.077287,-2.161922,-0.612694,5.419985,1.446075,-7.412991,-6.594372,-5.271452,0.755162,1.079689,2.587999,3.430165,8.913499,3.451033,5.585466,-2.528501,-6.394737,2.679512,-5.620923,-6.691514,-3.708349,2.649023,2.435858,-1.474725,9.876052,-0.843015,-7.225435,-2.361517,8.029338,4.373730,5.231218,8.406050,-2.529568,-3.997386,3.117560,-9.996909,-0.147704,-0.618266,7.978378,-1.424144,-0.358410,4.515652,-5.214524,-5.105935,1.806136,-6.195280,5.114822,-7.883845,-6.270543,9.828776,-3.774799,0.684524,7.068923,-4.003843,-3.046144,7.040795,-9.428786,-4.398284,5.436062,-4.137672,-7.104927,5.491543,-8.593558,1.559414,-9.269611,-4.587826,-2.807399,7.518932,6.315161,-1.191325,-2.098709,-9.819470,8.717762,8.705778,-6.929880,7.800873,-8.919799,-5.952713,3.698148,2.222180,-9.219176,-0.250680,1.771224,9.136307,5.626188,9.882983,8.303732,-2.303271,-2.691978,5.046741,-4.241338,1.031129,9.481398,4.005626,1.542118,4.149217,8.265780,-8.058762,1.174556,4.672654,7.673329,3.301320,1.746827,9.591901,1.968254,-1.200789,-7.090783,5.608403,2.631884,-9.821680,4.805095,1.517621,8.930530,-4.849354,3.163968,9.449790,-3.882600,9.985749,5.934355,7.862782,-0.686097,-6.369117,4.437391,-8.533801,-7.946970,7.159950,-9.083923,-0.542825,-8.394951,6.365516,0.517203,-1.690390,8.611988,9.078801,7.065294,2.704308,-2.811113,-0.897361,9.014811,-9.310920,1.932996,-6.901041,-0.593429,3.626712,4.361689,-1.909429,9.618022,-5.186587,1.554342,2.228726,-7.655116,-1.559321,-2.799588,-4.546184,0.339423,-3.804941,-3.010388,2.446305,9.486356,1.209916,3.791659,0.823593,-0.649510,7.025230,8.453589,-6.971219,0.557590,-9.052467,4.965964,-6.626365,-3.354269,4.308032,8.652318,5.948086,3.025081,5.340570,6.692723,-2.324575,-3.750999,3.747859,-2.234657,6.140173,-0.111236,-4.452713,-4.171912,-2.225189,9.029488,5.260458,-7.212764,4.356098,5.358800,-3.248128,-3.917936,-1.715536,-9.753911,-7.302542,-4.368817,5.110093,-1.921646,-4.443954,-4.208214,6.384418,2.317004,-3.960619,2.409218,9.366137,-3.607098,0.297505,-8.678419,8.078109,1.514338,-1.016318,5.869316,-4.851457,6.622991,-8.775988,-3.852509,4.124718,-0.771146,6.336265,9.153268,-5.915713,3.220138,-5.522050,8.243558,-6.077917,-6.152841,-6.343932,-8.924930,5.860038,-8.942722,1.375788,0.791190,-3.189454,-4.937038,5.022061,-6.669119,9.512917,-1.050203,-5.326414,6.252331,-8.373419,5.768036,0.750728,-9.875989,2.231058,-1.814495,7.599005,5.757614,6.353814,2.554229,5.259228,-2.129500,4.231356,6.899052,7.475194,1.104576,-3.430887,-3.538436,-8.941668,-5.853890,4.636488,6.269300,-0.746222,-6.999812,-4.308106,-9.379931,-6.294362,5.371370,2.590430,4.693724,8.645315,5.204301,8.833101,-7.671215,-8.096013,3.978788,7.812728,-6.520766,7.461625,-9.357776,-4.054483,7.289443,6.099507,4.263076,3.689291,7.273756,5.090176,-1.761229,9.666773,-4.417781,4.010360,9.677671,-3.599099,-1.225072,7.344369,-4.932849,-1.832849,-7.956182,-8.450498,-5.547805,-3.657078,-8.384056,-4.026559,-5.328561,6.481195,7.867592,-4.106691,-5.556986,-5.244286,-3.336826,1.765051,-9.563387,-3.837034,4.033297,-9.080300,3.758823,-7.711823,-0.743989,-0.292426,-8.250705,1.388208,1.628973,-7.198944,9.627281,-0.551185,-3.447507,-4.894102,0.064060,4.079233,6.339607,4.727758,-8.568328,-1.912142,-9.461467,7.257773,4.030459,6.819757,-8.450408,-9.682371,-0.602554,5.545662,-4.328453,6.037667,8.200478,-4.762074,-6.266574,5.817630,8.196872,7.902390,-4.572544,-1.478237,-2.922345,-3.988277,-3.387040,-2.160019,-0.613463,0.878310,3.401970,-6.517827,-9.496824,7.048018,-8.455532,9.842917,-6.156712,-0.724891,-7.179948,-3.309060,-0.787758,5.251685,3.642919,0.920081,-4.214660,-0.293348,-6.573188,-0.422435,-5.408213,9.545672,-8.623917,-5.215683,-6.086300,4.103460,-7.941567,3.968340,0.543260,7.060926,-1.208151,-7.415133,3.745054,-0.162644,9.769781,-5.305634,-5.897417,8.236357,9.800186,8.311915,-1.352484,-5.794720,5.461269,0.154899,-4.968355,2.022503,7.209342,8.756085,7.982885,-5.460138,-1.600726,-3.352708,9.641255,3.763417,9.401989,-2.639783,-3.866518,-5.594763,-0.656387,-4.646235,-2.248644,9.195032,7.343826,1.111767,-1.819674,1.021098,-4.043387,2.539902,1.656486,-3.804804,8.992469,-1.908661,5.881606,5.309030,-3.113405,5.947603,-7.572583,9.829840,8.778678,-6.771871,-6.529386,5.912114,6.684631,-0.710125,3.377950,6.441157,8.618246,-4.614486,2.591323,-5.045913,1.501753,-2.455313,-2.094371,9.561227,-2.291310,2.632803,-2.795491,-4.533483,8.510741,-7.367010,5.077076,-5.335447,-8.954877,-9.768723,-3.946482,2.330657,-3.558266,1.296476,6.796521,-3.376387,-7.358269,5.389685,-5.134321,-0.249719,-9.971923,4.331761,8.570141,5.784446,-1.796119,0.504564,-8.293587,4.807959,-7.836882,-7.639075,9.692184,-0.487610,-0.218405,-4.038677,1.521097,0.301388,-8.324931,5.068976,-0.068282,5.669270,-3.507315,5.469198,1.676070,4.082224,-2.088818,-4.475614,3.991468,2.713042,-6.032807,-8.627655,3.722926,1.119439,-1.807847,8.751616,7.191374,-7.133984,3.155080,6.397287,-7.986219,-6.822448,-0.924737,-8.769276,3.940356,3.802425,-7.204342,1.940829,9.757507,0.317166,-9.771461,-9.624239,1.709449,5.738332,9.406209,1.101529,-2.893635,-7.164433,-2.971477,-2.381295,-1.259667,0.522627,6.876597,-5.600762,-3.019456,6.287308,-2.662239,-8.830447,-0.516509,-9.142181,-7.089729,4.363022,-2.358957,8.104361,-2.318353,-1.485546,-3.186236,2.588738,9.411199,-0.433353,4.769097,-7.428304,-2.117462,3.120027,-2.260342,-9.759822,-2.111569,2.747327,8.938165,0.459016,-6.433135,-1.360310,-1.305746,8.388010,-5.999744,4.031012,0.249364,2.424053,-0.253542,-0.940124,4.501784,-7.896699,-2.888182,-1.942802,-5.166316,9.563060,0.459327,0.755259,-5.394307,3.732811,5.462518,-7.012502,-9.522080,-2.375862,2.233051,-0.538785,1.008050,-5.058351,-6.831128,0.197089,-0.669935,-7.103676,-7.171847,8.937722,-1.732515,5.364814,2.675920,-5.072742,-4.498362,6.984298,2.302592,-3.964030,-8.949372,-1.206941,7.789457,4.470724,-2.789060,1.142056,-9.149860,8.630009,-7.230794,-5.708748,1.902424,1.828507,9.892250,5.141310,-2.478661,0.315024,-2.372675,-7.129032,9.024789,1.091341,2.783625,-8.782909,-9.355040,-9.442658,0.172366,-5.551214,5.044305,-8.552200,-1.172528,2.403242,7.954612,6.760111],[-6.736536,8.717309,-0.997726,9.095935,8.643135,7.104352,-4.050047,-2.423445,-0.411747,-4.069222,3.053554,-5.639166,-0.064752,-5.111808,-2.278818,8.821302,0.275471,-6.242692,7.278199,2.245236,7.058560,-6.593438,-9.575935,2.156532,-2.640993,-3.604456,-0.781694,7.870621,-8.875913,-6.765894,-9.754272,6.971045,-5.570800,4.487277,-3.443774,8.655441,4.988182,6.646299,-3.781884,-2.012112,-0.899096,-9.783723,7.691279,4.400641,-9.846269,-6.732577,9.976663,-5.784811,6.328069,8.270058,3.976572,4.835693,3.575152,-9.067368,-7.209179,-7.014121,-4.972851,7.569700,-7.491389,3.881127,2.817686,5.984662,-3.917518,-0.006700,5.474166,8.258134,-9.437763,9.599301,2.346575,-9.818703,-6.688557,-2.077985,2.991852,-2.867628,-1.511154,-4.092492,0.018777,-2.748804,-7.721567,3.511836,-6.957824,-7.309083,-0.329071,-2.251077,1.398120,2.046223,9.111936,-4.308193,1.529382,6.083557,9.874080,7.559932,5.686498,-3.636393,0.426612,-8.001125,-5.638967,-9.806653,-8.860783,-4.583161,0.327904,-1.144263,2.617360,-4.155089,4.463883,-0.180464,0.884224,-3.277714,1.059924,-0.443299,-4.600397,-9.487919,5.807709,5.577160,-7.019688,-9.099425,7.813419,-6.408188,6.761335,-1.401024,-6.350843,5.636635,-7.454610,7.802918,-2.306071,-3.362794,-4.334042,5.507854,-3.805873,9.671074,-8.841587,-4.544628,-9.362417,-9.974419,1.399323,6.640620,0.528378,-8.634440,-8.961072,5.673111,4.256355,2.780212,2.700685,-9.818138,-1.819053,-5.506213,4.973971,-6.387680,4.134600,4.536128,5.216030,5.391987,-9.401529,6.538275,4.585564,5.497725,-6.715889,-1.304998,-0.478335,2.198134,-6.030173,2.760778,2.921387,-6.907668,7.837514,7.868858,-6.926774,7.386714,-8.813023,0.539961,-0.640928,8.609016,1.701328,-6.743413,-2.461118,-2.691614,5.323952,-3.028589,-0.588681,5.439391,-1.936461,-1.678690,1.620251,3.230035,-3.829675,5.751688,-3.569676,-0.284885,-4.638760,0.734186,-6.135181,-3.767571,3.792472,-0.460536,7.127745,0.337898,9.216991,-7.307922,-5.093049,-3.911932,-0.253820,9.227579,-8.963677,-3.954283,-9.387140,7.127688,-2.287280,-9.787091,-1.195516,4.057998,-5.609223,-5.169025,-6.766650,1.638868,-0.904525,-5.554625,4.098094,4.105180,1.006572,5.070423,5.454488,-7.769656,-1.460540,-8.444303,-8.566684,-5.657631,-4.945841,-6.406461,9.652331,8.980998,9.966568,-1.395392,3.195284,3.374385,9.729358,-2.800501,0.605009,-6.707944,9.282072,8.809715,-4.864235,9.689068,-5.310271,-1.495627,7.143674,7.898385,1.117016,9.352912,-1.303666,4.598577,5.470263,-6.295080,-2.360562,-9.735367,6.896851,0.715216,6.993267,7.255643,-5.865455,8.376216,8.690966,1.459795,-6.432479,-1.492107,2.792848,4.760102,6.765365,6.719567,-8.140255,-5.023142,5.811808,-2.548538,-1.700158,-6.359876,6.138499,-0.543310,6.140171,4.345167,-5.841044,-1.705545,4.886746,2.762936,8.287920,-5.465025,-5.606500,-5.092849,3.955407,5.934733,-5.179708,-3.057406,4.427035,-6.872218,-3.619545,8.321740,9.883324,-7.633111,0.220255,-4.275649,5.030509,-0.887764,7.866430,4.340213,0.882266,-2.804202,0.246244,7.360847,9.291147,9.363884,2.934908,-9.634858,-7.611884,4.242009,-1.134502,-8.861999,0.644123,-8.782523,6.091793,3.827349,-9.780811,-6.462083,-8.622851,-9.993573,-6.929213,-3.269862,-9.119671,-1.877312,4.166329,-3.777620,4.555447,6.558168,-6.506813,0.971733,-0.744181,-4.890478,-4.334833,-2.389042,3.952241,-1.020961,-4.901223,2.825680,-6.359101,4.720315,-6.467282,0.540579,-4.252153,-7.391972,-2.897058,4.442394,-9.021840,2.488082,-4.595826,3.856734,1.972082,0.700991,-9.483829,-6.611096,3.511828,7.648211,-0.320698,8.949481,3.536768,6.942933,-1.845558,-2.376991,-5.886794,5.857990,2.608087,-5.230749,4.464352,-2.602595,2.076935,-0.580336,-5.837115,-8.103619,-9.803647,-9.414103,2.435901,-5.819142,-8.829878,-0.163195,-5.378627,0.169268,-5.262174,-7.794775,-5.732625,-5.013136,-7.916252,-3.485346,-6.457151,3.490729,-4.929253,-2.746068,3.410331,9.575045,-0.359229,-7.738299,-3.412355,-9.844663,-5.205786,-9.295008,-4.944100,-3.682445,4.555968,6.622945,2.940826,-7.492878,-8.872480,7.460134,3.010259,8.266017,-3.963556,8.533318,-1.015062,2.904480,-8.148774,5.199958,-3.476606,2.807745,-1.794296,5.027658,6.080157,5.430802,1.477893,2.235357,-5.685089,-2.980291,7.965717,0.050187,3.068163,-7.562001,-7.922647,-9.147705,9.868831,-6.557385,0.198859,7.117641,8.612029,-7.542791,2.922389,-0.120437,6.261691,-8.486690,-2.860609,-4.688002,-3.229218,7.616950,-5.996541,-1.570884,-1.236456,1.092777,-4.423255,-3.367857,2.692344,-8.560504,9.810707,-7.712807,0.116008,5.123558,-1.325583,-0.775317,-1.643065,0.410966,3.569133,-5.918377,-6.426588,7.588366,-2.511317,1.771758,8.915056,-8.956053,-8.257958,3.021543,6.678567,3.674772,-1.977588,-2.677941,9.733197,6.206178,2.496195,-9.123187,5.217233,8.671879,-3.639283,8.575161,-8.129976,-6.077209,2.602464,9.734959,-8.308887,-0.489706,-4.891354,2.404384,6.473614,-0.998477,-6.755585,-4.811845,3.298916,5.634927,-0.272180,0.616137,-3.248414,6.939646,1.159637,-3.443452,3.214914,-8.212763,5.404719,-3.966370,-7.578486,-5.568336,4.907105,-9.328079,-5.566853,-4.138062,-6.453520,5.021229,4.926182,-9.678605,2.911773,-6.797966,-4.290137,-7.957697,-8.059095,-5.457993,-9.798175,9.730041,7.740446,-5.850560,1.418253,1.533583,-5.710751,-1.306183,4.191763,-4.697576,4.878369,-1.924346,9.153827,-1.362185,9.231384,-9.590041,7.009016,0.905132,9.690612,-1.884895,1.805115,-2.187073,-2.552188,1.504644,-9.135191,4.568108,0.542244,4.845902,-9.057091,-0.532697,-2.158848,5.506806,0.367352,-3.597764,-1.670621,2.205208,-8.412193,7.355010,6.452933,8.983281,-0.861525,9.881137,-6.274673,-4.179881,-9.055331,-5.329997,7.448699,-0.593675,-5.593921,6.661711,7.659606,-4.511214,5.393893,5.082023,7.656941,-0.700311,6.073029,9.838868,-1.720940,-0.833683,-3.283260,4.252014,4.204474,-6.592309,-3.933987,-6.545286,8.712838,-5.192506,7.129338,2.614408,-9.714737,-6.534845,8.416917,1.729926,-4.290825,1.057929,-2.765094,-8.302011,-3.527474,6.588673,5.950240,0.827334,4.434268,3.107953,9.394835,0.086601,-4.257071,9.065283,2.514902,0.031813,-1.416666,-3.361706,9.908179,-9.806360,-1.668843,-9.012807,-2.656033,-4.961765,5.007768,-2.884922,-1.671180,-8.243785,6.730763,-5.025245,-6.493003,-9.632545,-4.492788,8.951111,-2.347891,-6.152451,-0.711589,-4.865513,-0.098544,-4.138078,-2.528296,-1.156483,-6.133891,1.905292,-1.077488,-6.591595,9.735763,6.411550,8.135820,8.019076,2.801499,-9.045796,-0.395675,-3.358760,5.738588,0.266770,7.760801,-9.914378,-2.614072,9.327178,-4.493250,-1.349232,5.746605,6.981610,-2.608903,-4.987640,-5.082386,2.756604,5.407931,8.517498,-3.542331,-7.981533,-5.888035,9.155864,-0.309320,7.949487,-7.660577,-7.191290,-8.692558,8.943609,-1.390990,-7.126233,-9.877845,2.783403,7.681445,4.682367,8.081826,6.390750,-8.057998,9.478381,4.178067,5.069320,-4.369302,6.694481,-2.899492]], dtype = "float64")#candidate|14262|(4, 693)|const|float64
bop_14263 = relay.add(uop_14236.astype('int8'), const_14262.astype('int8')) # shape=(4, 693)
bop_14266 = relay.add(uop_14238.astype('int8'), const_14262.astype('int8')) # shape=(4, 693)
uop_14269 = relay.sigmoid(bop_14263.astype('float64')) # shape=(4, 693)
uop_14271 = relay.sigmoid(bop_14266.astype('float64')) # shape=(4, 693)
bop_14277 = relay.power(uop_14269.astype('float64'), uop_14236.astype('float64')) # shape=(4, 693)
bop_14280 = relay.power(uop_14271.astype('float64'), uop_14238.astype('float64')) # shape=(4, 693)
bop_14281 = relay.maximum(bop_14263.astype('uint32'), relay.reshape(bop_14277.astype('uint32'), relay.shape_of(bop_14263))) # shape=(4, 693)
bop_14284 = relay.maximum(bop_14266.astype('uint32'), relay.reshape(bop_14280.astype('uint32'), relay.shape_of(bop_14266))) # shape=(4, 693)
output = relay.Tuple([bop_14228,uop_14245,call_14249,bop_14281,])
output2 = relay.Tuple([bop_14231,uop_14247,call_14250,bop_14284,])
func_14285 = relay.Function([var_14210,var_14227,], output)
mod['func_14285'] = func_14285
mod = relay.transform.InferType()(mod)
var_14286 = relay.var("var_14286", dtype = "uint64", shape = (4, 693))#candidate|14286|(4, 693)|var|uint64
var_14287 = relay.var("var_14287", dtype = "float64", shape = (8, 693))#candidate|14287|(8, 693)|var|float64
output = func_14285(var_14286,var_14287,)
func_14288 = relay.Function([var_14286,var_14287,], output)
mutated_mod['func_14288'] = func_14288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11213_call = mod.get_global_var('func_11213')
func_11215_call = mutated_mod.get_global_var('func_11215')
call_14310 = func_11213_call()
call_14311 = func_11213_call()
func_13260_call = mod.get_global_var('func_13260')
func_13261_call = mutated_mod.get_global_var('func_13261')
call_14313 = relay.TupleGetItem(func_13260_call(), 0)
call_14314 = relay.TupleGetItem(func_13261_call(), 0)
uop_14341 = relay.log10(call_14310.astype('float64')) # shape=(5, 4, 7)
uop_14343 = relay.log10(call_14311.astype('float64')) # shape=(5, 4, 7)
output = relay.Tuple([call_14313,uop_14341,])
output2 = relay.Tuple([call_14314,uop_14343,])
func_14350 = relay.Function([], output)
mod['func_14350'] = func_14350
mod = relay.transform.InferType()(mod)
mutated_mod['func_14350'] = func_14350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14350_call = mutated_mod.get_global_var('func_14350')
call_14351 = func_14350_call()
output = call_14351
func_14352 = relay.Function([], output)
mutated_mod['func_14352'] = func_14352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10262_call = mod.get_global_var('func_10262')
func_10264_call = mutated_mod.get_global_var('func_10264')
call_14353 = func_10262_call()
call_14354 = func_10262_call()
output = call_14353
output2 = call_14354
func_14363 = relay.Function([], output)
mod['func_14363'] = func_14363
mod = relay.transform.InferType()(mod)
output = func_14363()
func_14364 = relay.Function([], output)
mutated_mod['func_14364'] = func_14364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13910_call = mod.get_global_var('func_13910')
func_13911_call = mutated_mod.get_global_var('func_13911')
call_14408 = relay.TupleGetItem(func_13910_call(), 0)
call_14409 = relay.TupleGetItem(func_13911_call(), 0)
func_13838_call = mod.get_global_var('func_13838')
func_13842_call = mutated_mod.get_global_var('func_13842')
var_14411 = relay.var("var_14411", dtype = "float32", shape = ())#candidate|14411|()|var|float32
var_14412 = relay.var("var_14412", dtype = "float32", shape = (2, 20))#candidate|14412|(2, 20)|var|float32
var_14413 = relay.var("var_14413", dtype = "uint64", shape = (18,))#candidate|14413|(18,)|var|uint64
call_14410 = relay.TupleGetItem(func_13838_call(relay.reshape(var_14411.astype('float32'), []), relay.reshape(var_14412.astype('float32'), [4, 10, 1]), relay.reshape(var_14413.astype('uint64'), [6, 3]), ), 2)
call_14414 = relay.TupleGetItem(func_13842_call(relay.reshape(var_14411.astype('float32'), []), relay.reshape(var_14412.astype('float32'), [4, 10, 1]), relay.reshape(var_14413.astype('uint64'), [6, 3]), ), 2)
func_11839_call = mod.get_global_var('func_11839')
func_11841_call = mutated_mod.get_global_var('func_11841')
call_14442 = relay.TupleGetItem(func_11839_call(), 3)
call_14443 = relay.TupleGetItem(func_11841_call(), 3)
func_13819_call = mod.get_global_var('func_13819')
func_13820_call = mutated_mod.get_global_var('func_13820')
call_14444 = func_13819_call()
call_14445 = func_13819_call()
output = relay.Tuple([call_14408,call_14410,var_14411,var_14412,var_14413,call_14442,call_14444,])
output2 = relay.Tuple([call_14409,call_14414,var_14411,var_14412,var_14413,call_14443,call_14445,])
func_14448 = relay.Function([var_14411,var_14412,var_14413,], output)
mod['func_14448'] = func_14448
mod = relay.transform.InferType()(mod)
mutated_mod['func_14448'] = func_14448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14448_call = mutated_mod.get_global_var('func_14448')
var_14450 = relay.var("var_14450", dtype = "float32", shape = ())#candidate|14450|()|var|float32
var_14451 = relay.var("var_14451", dtype = "float32", shape = (2, 20))#candidate|14451|(2, 20)|var|float32
var_14452 = relay.var("var_14452", dtype = "uint64", shape = (18,))#candidate|14452|(18,)|var|uint64
call_14449 = func_14448_call(var_14450,var_14451,var_14452,)
output = call_14449
func_14453 = relay.Function([var_14450,var_14451,var_14452,], output)
mutated_mod['func_14453'] = func_14453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_14472 = relay.TupleGetItem(func_9701_call(), 0)
call_14473 = relay.TupleGetItem(func_9702_call(), 0)
output = call_14472
output2 = call_14473
func_14487 = relay.Function([], output)
mod['func_14487'] = func_14487
mod = relay.transform.InferType()(mod)
mutated_mod['func_14487'] = func_14487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14487_call = mutated_mod.get_global_var('func_14487')
call_14488 = func_14487_call()
output = call_14488
func_14489 = relay.Function([], output)
mutated_mod['func_14489'] = func_14489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13819_call = mod.get_global_var('func_13819')
func_13820_call = mutated_mod.get_global_var('func_13820')
call_14498 = func_13819_call()
call_14499 = func_13819_call()
func_11892_call = mod.get_global_var('func_11892')
func_11894_call = mutated_mod.get_global_var('func_11894')
call_14501 = relay.TupleGetItem(func_11892_call(), 0)
call_14502 = relay.TupleGetItem(func_11894_call(), 0)
output = relay.Tuple([call_14498,call_14501,])
output2 = relay.Tuple([call_14499,call_14502,])
func_14508 = relay.Function([], output)
mod['func_14508'] = func_14508
mod = relay.transform.InferType()(mod)
mutated_mod['func_14508'] = func_14508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14508_call = mutated_mod.get_global_var('func_14508')
call_14509 = func_14508_call()
output = call_14509
func_14510 = relay.Function([], output)
mutated_mod['func_14510'] = func_14510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11101_call = mod.get_global_var('func_11101')
func_11103_call = mutated_mod.get_global_var('func_11103')
call_14554 = relay.TupleGetItem(func_11101_call(), 0)
call_14555 = relay.TupleGetItem(func_11103_call(), 0)
func_4755_call = mod.get_global_var('func_4755')
func_4758_call = mutated_mod.get_global_var('func_4758')
var_14557 = relay.var("var_14557", dtype = "uint64", shape = (700,))#candidate|14557|(700,)|var|uint64
const_14558 = relay.const([-6.343571,5.914277,7.369950,-6.571196,8.845844,3.302677,7.988670,-4.167429,4.236336,-0.855888,1.721555,-0.175028,-1.470717,9.458734,-1.508538,6.462708,-7.308446,7.874233,8.669578,8.239751,-4.367721,6.173283,-9.932739,-8.305355,5.431897,8.008521,-1.701703,-8.321399,5.873490,-2.835976,-7.478877,-7.607338,-1.857415,-1.312665,0.324196,-7.712974,5.605696,0.006475,6.442007,0.679264,5.562762,8.581144,4.366602,-8.522303,9.691010,-2.387176,-1.637186,8.837775,9.911783,-6.597886,0.155478,-1.853986,5.510909,-3.637968,9.324537,4.623372,-6.984914,-7.367541,-7.505070,-7.486800,3.866597,1.860193,4.912374,-0.975651,2.625559,1.683155,-8.202786,9.980195,-8.542941,-0.631232,7.954779,-2.672973,7.397496,4.745500,2.861311,5.981166,8.542655,1.549315,1.282279,6.729302,-4.406431,4.882885,-7.762755,-7.854544,-7.927678,-6.670190,-5.233947,7.087012,-7.773627,5.029511,-0.759906,-9.524665,-8.611663,-5.903279,-8.771303,-2.212008,4.859553,8.678083,-6.183636,-2.770399,-9.916854,-8.862632,5.675475,-5.505083,4.579437,2.614753,7.264968,1.974271,4.519590,8.074235,8.032109,2.612285,-0.112268,-1.609566,-5.209922,9.392933,9.561552,-1.472853,-3.071991,-2.840694,-7.015547,8.095097,-9.181992,6.385275,4.441747,1.468922,-4.042925,5.349371,6.725676,3.594101,-6.799711,-3.748311,9.416015,-5.321069,-3.743359,8.130448,-2.832258,-6.766582,2.873629,9.875326,-0.684877,9.123050,7.114321,1.489676,-2.995026,-7.731171,-2.130724,-1.169008,4.247401,5.928535,-4.071424,2.888907,0.385370,3.532160,9.782828,5.793062,1.636642,2.769187,3.795564,1.452490,7.864753,-7.633416,-8.554368,1.448403,5.503639,8.072233,0.096327,4.412772,-6.727753,6.166088,2.499561,-2.866014,7.505563,4.582628,-8.768240,-2.601992,-6.451275,1.434023,-2.979005,0.094201,1.007396,6.625649,4.172190,-7.737347,1.617551,8.665770,-9.632265,6.216857,9.573930,8.391290,0.939176,-2.609951,-8.901896,-2.046606,-0.444116,0.388770,7.431266,2.814516,7.532429,-4.409003,5.261774,0.048240,9.951159,-1.543451,6.762435,8.403984,6.758107,-2.820025,1.180141,-1.886802,-5.966873,-7.478864,-7.047204,-5.520867,4.855623,-2.102983,1.438802,-7.951681,-6.584593,5.840504,-2.116691,-4.513969,-9.348406,-1.040152,-3.416589,-1.029692,-9.965515,-8.562526,-9.558918,-7.429074,7.564112,-7.885521,-3.043197,-9.568796,2.111493,-3.174926,-3.941430,-7.005473,2.140652,-8.586201,5.252176,2.068539,7.276122,7.383595,-4.509234,6.980095,-8.741166,-3.656582,8.261009,-9.236253,0.512529,-8.202690,1.982663,-8.388460,0.048069,-3.175520,9.527445,-0.310284,0.017947,-6.063748,7.382610,-5.102069,-0.352507,-3.203347,3.095427,-3.752264,5.887873,-1.562104,3.693270,-8.751268,2.389030,-2.610996,-3.341101,-5.222886,-9.447904,0.901279,-5.478444,2.842419,0.433721,-0.225709,-7.751472,1.336102,-7.353087,9.301884,-3.555268,-3.215028,-3.289433,7.239526,-7.230614,0.987053,-7.006175,-8.293163,-1.402183,4.502791,-9.626500,-1.872895,8.575032,-1.679543,8.298627,7.886490,6.012447,0.257772,-7.473287,-3.806845,-8.293399,6.478283,9.539187,-0.068016,-1.887312,5.345444,8.885729,3.203373,7.154977,-9.900689,2.321173,-1.517183,-4.031430,3.687082,-3.984102,7.706767,0.820795,-9.565269,-5.284931,-5.628135,-0.438675,1.070675,8.200381,-3.808746,1.877822,7.166282,0.265497,7.790630,6.518647,-1.980801,3.569002,7.640711,5.563034,4.503152,-7.353851,-6.975574,8.292305,-1.029184,-4.932701,1.737941,-0.243525,2.929562,-7.143134,8.679665,4.042443,-3.919850,6.923172,0.760685,9.788951,-5.955659,-4.146799,-6.070085,9.601036,-4.709357,-6.349807,3.796973,-6.885310,-4.824420,4.413099,-4.763660,6.549590,5.738754,-7.577816,9.822698,2.640151,2.327307,-9.313855,6.397245,6.524191,-5.797771,3.179692,-0.469028,-4.607547,5.751039,-5.575940,-3.998024,-1.800274,-4.649710,-0.763090,-3.539195,4.091415,5.499318,8.154973,5.150978,-1.417751,-0.370189,6.381868,5.852833,6.740759,-8.766417,-5.873585,-3.542553,-3.372471,-2.410650,-4.806717,8.784032,-9.742675,-4.577073,2.290987,-2.367852,2.167098,-8.348518,4.121320,-7.083168,-8.662701,-1.725420,0.975120,0.264084,6.728731,-4.313933,-8.683839,-3.876865,-6.115496,-8.777760,-3.965750,9.778056,-7.168213,0.184869,4.099687,-8.261436,-3.676429,-2.051525,5.911282,3.976225,6.954954,9.786401,4.589944,1.771929,-1.568943,-5.549309,-4.908315,-3.232393,8.849445,6.785788,9.468013,-0.954212,-8.188956,6.530162,-9.456265,5.250362,-8.122746,5.579893,-6.434334,2.711519,-8.616201,9.299644,0.377993,8.659275,9.964333,6.318862,3.680365,-4.107748,-8.079648,3.976900,6.323532,1.910353,2.425473,4.016441,8.306419,-6.551674,-0.838048,-4.742962,0.800688,-0.562385,-3.299556,1.868763,7.109628,-4.602919,2.601248,-8.318898,-1.956715,-5.886754,-8.147016,1.191547,-7.037944,-3.583960,3.853670,-9.169711,-7.291435,-3.334788,-7.575570,-1.235087,6.658456,-8.087784,5.129579,6.651808,-7.969778,4.200527,-7.551852,-3.645840,9.400101,0.955387,7.333453,5.787518,2.113692,8.046864,-8.805168,1.798941,-7.155141,-8.024927,3.618047,7.468102,-0.239897,-7.742285,1.051472,6.709409,6.425999,1.478720,3.877229,5.610833,-8.804244,-5.180593,-0.605110,3.905016,9.126159,-4.181560,6.562220,-5.555440,7.106999,-1.236830,4.301259,8.021583,1.635927,-7.399616,6.660766,6.956964,-0.122577,-4.490889,0.891561,1.569629,-9.281435,3.374015,1.822460,6.140823,0.995572,0.062155,5.054710,9.878892,3.327447,2.703799,4.679653,0.225420,8.530095,4.930182,0.815702,1.656913,-5.007384,8.777609,8.731102,-7.332757,0.867026,5.437239,-2.079812,9.184290,-3.203877,2.614902,3.934749,9.039648,-6.725336,2.314448,3.691810,0.437684,-3.337048,3.311209,1.311780,-3.318367,7.618858,-4.711979,-3.107205,-8.693869,-0.990640,5.242688,-9.408325,-2.638035,5.396088,-0.623811,9.985737,-6.900122,-1.711109,3.332407,-6.367022,-6.311417,9.312113,3.450667,-4.199712,1.908560,4.561044,-0.878542,7.679975,9.305570,4.858041,-8.002919,7.687903,-2.077111,-0.025706,-4.546686,1.002492,9.879900,2.536927,-3.469214,-0.844726], dtype = "float32")#candidate|14558|(605,)|const|float32
call_14556 = relay.TupleGetItem(func_4755_call(relay.reshape(var_14557.astype('uint64'), [10, 5, 14]), relay.reshape(const_14558.astype('float32'), [11, 55]), ), 2)
call_14559 = relay.TupleGetItem(func_4758_call(relay.reshape(var_14557.astype('uint64'), [10, 5, 14]), relay.reshape(const_14558.astype('float32'), [11, 55]), ), 2)
output = relay.Tuple([call_14554,call_14556,var_14557,const_14558,])
output2 = relay.Tuple([call_14555,call_14559,var_14557,const_14558,])
func_14571 = relay.Function([var_14557,], output)
mod['func_14571'] = func_14571
mod = relay.transform.InferType()(mod)
var_14572 = relay.var("var_14572", dtype = "uint64", shape = (700,))#candidate|14572|(700,)|var|uint64
output = func_14571(var_14572)
func_14573 = relay.Function([var_14572], output)
mutated_mod['func_14573'] = func_14573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12422_call = mod.get_global_var('func_12422')
func_12424_call = mutated_mod.get_global_var('func_12424')
call_14668 = relay.TupleGetItem(func_12422_call(), 0)
call_14669 = relay.TupleGetItem(func_12424_call(), 0)
uop_14673 = relay.sigmoid(call_14668.astype('float32')) # shape=(5, 4, 7)
uop_14675 = relay.sigmoid(call_14669.astype('float32')) # shape=(5, 4, 7)
output = uop_14673
output2 = uop_14675
func_14677 = relay.Function([], output)
mod['func_14677'] = func_14677
mod = relay.transform.InferType()(mod)
output = func_14677()
func_14678 = relay.Function([], output)
mutated_mod['func_14678'] = func_14678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13260_call = mod.get_global_var('func_13260')
func_13261_call = mutated_mod.get_global_var('func_13261')
call_14683 = relay.TupleGetItem(func_13260_call(), 2)
call_14684 = relay.TupleGetItem(func_13261_call(), 2)
func_12952_call = mod.get_global_var('func_12952')
func_12953_call = mutated_mod.get_global_var('func_12953')
call_14703 = func_12952_call()
call_14704 = func_12952_call()
func_8829_call = mod.get_global_var('func_8829')
func_8835_call = mutated_mod.get_global_var('func_8835')
var_14706 = relay.var("var_14706", dtype = "bool", shape = (56,))#candidate|14706|(56,)|var|bool
const_14707 = relay.const([False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,False,False,False,True,True,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,False,True,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,True,False,True,False,True,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,False,True,False,False,False], dtype = "bool")#candidate|14707|(672,)|const|bool
var_14708 = relay.var("var_14708", dtype = "uint64", shape = (700,))#candidate|14708|(700,)|var|uint64
var_14709 = relay.var("var_14709", dtype = "float32", shape = (605,))#candidate|14709|(605,)|var|float32
call_14705 = relay.TupleGetItem(func_8829_call(relay.reshape(var_14706.astype('bool'), [1, 7, 8]), relay.reshape(const_14707.astype('bool'), [12, 7, 8]), relay.reshape(var_14708.astype('uint64'), [700,]), relay.reshape(var_14709.astype('float32'), [605,]), relay.reshape(call_14703.astype('uint8'), [140,]), ), 5)
call_14710 = relay.TupleGetItem(func_8835_call(relay.reshape(var_14706.astype('bool'), [1, 7, 8]), relay.reshape(const_14707.astype('bool'), [12, 7, 8]), relay.reshape(var_14708.astype('uint64'), [700,]), relay.reshape(var_14709.astype('float32'), [605,]), relay.reshape(call_14703.astype('uint8'), [140,]), ), 5)
func_14180_call = mod.get_global_var('func_14180')
func_14182_call = mutated_mod.get_global_var('func_14182')
call_14712 = relay.TupleGetItem(func_14180_call(), 0)
call_14713 = relay.TupleGetItem(func_14182_call(), 0)
output = relay.Tuple([call_14683,call_14703,call_14705,var_14706,const_14707,var_14708,var_14709,call_14712,])
output2 = relay.Tuple([call_14684,call_14704,call_14710,var_14706,const_14707,var_14708,var_14709,call_14713,])
func_14714 = relay.Function([var_14706,var_14708,var_14709,], output)
mod['func_14714'] = func_14714
mod = relay.transform.InferType()(mod)
mutated_mod['func_14714'] = func_14714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14714_call = mutated_mod.get_global_var('func_14714')
var_14716 = relay.var("var_14716", dtype = "bool", shape = (56,))#candidate|14716|(56,)|var|bool
var_14717 = relay.var("var_14717", dtype = "uint64", shape = (700,))#candidate|14717|(700,)|var|uint64
var_14718 = relay.var("var_14718", dtype = "float32", shape = (605,))#candidate|14718|(605,)|var|float32
call_14715 = func_14714_call(var_14716,var_14717,var_14718,)
output = call_14715
func_14719 = relay.Function([var_14716,var_14717,var_14718,], output)
mutated_mod['func_14719'] = func_14719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14132_call = mod.get_global_var('func_14132')
func_14133_call = mutated_mod.get_global_var('func_14133')
call_14772 = func_14132_call()
call_14773 = func_14132_call()
func_9835_call = mod.get_global_var('func_9835')
func_9839_call = mutated_mod.get_global_var('func_9839')
var_14797 = relay.var("var_14797", dtype = "uint64", shape = (700,))#candidate|14797|(700,)|var|uint64
const_14798 = relay.const([9.601046,4.031902,-1.196763,6.514869,-6.555107,-5.822798,-6.347561,-2.257614,-2.241359,8.606550,-7.036478,-9.788776,-1.056468,-4.221750,9.211212,-0.026968,-8.040524,-2.792061,7.804164,1.612343,2.425211,-6.854768,5.502905,2.079095,4.047067], dtype = "float64")#candidate|14798|(25,)|const|float64
const_14799 = relay.const(6, dtype = "int8")#candidate|14799|()|const|int8
call_14796 = relay.TupleGetItem(func_9835_call(relay.reshape(var_14797.astype('uint64'), [700,]), relay.reshape(const_14798.astype('float64'), [25,]), relay.reshape(const_14799.astype('int8'), []), ), 12)
call_14800 = relay.TupleGetItem(func_9839_call(relay.reshape(var_14797.astype('uint64'), [700,]), relay.reshape(const_14798.astype('float64'), [25,]), relay.reshape(const_14799.astype('int8'), []), ), 12)
func_10704_call = mod.get_global_var('func_10704')
func_10706_call = mutated_mod.get_global_var('func_10706')
call_14821 = func_10704_call()
call_14822 = func_10704_call()
func_14487_call = mod.get_global_var('func_14487')
func_14489_call = mutated_mod.get_global_var('func_14489')
call_14828 = func_14487_call()
call_14829 = func_14487_call()
output = relay.Tuple([call_14772,call_14796,var_14797,const_14798,const_14799,call_14821,call_14828,])
output2 = relay.Tuple([call_14773,call_14800,var_14797,const_14798,const_14799,call_14822,call_14829,])
func_14831 = relay.Function([var_14797,], output)
mod['func_14831'] = func_14831
mod = relay.transform.InferType()(mod)
mutated_mod['func_14831'] = func_14831
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14832 = relay.var("var_14832", dtype = "uint64", shape = (700,))#candidate|14832|(700,)|var|uint64
func_14831_call = mutated_mod.get_global_var('func_14831')
call_14833 = func_14831_call(var_14832)
output = call_14833
func_14834 = relay.Function([var_14832], output)
mutated_mod['func_14834'] = func_14834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14180_call = mod.get_global_var('func_14180')
func_14182_call = mutated_mod.get_global_var('func_14182')
call_14929 = relay.TupleGetItem(func_14180_call(), 0)
call_14930 = relay.TupleGetItem(func_14182_call(), 0)
output = relay.Tuple([call_14929,])
output2 = relay.Tuple([call_14930,])
func_14934 = relay.Function([], output)
mod['func_14934'] = func_14934
mod = relay.transform.InferType()(mod)
output = func_14934()
func_14935 = relay.Function([], output)
mutated_mod['func_14935'] = func_14935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13080_call = mod.get_global_var('func_13080')
func_13081_call = mutated_mod.get_global_var('func_13081')
call_14941 = relay.TupleGetItem(func_13080_call(), 1)
call_14942 = relay.TupleGetItem(func_13081_call(), 1)
output = call_14941
output2 = call_14942
func_14960 = relay.Function([], output)
mod['func_14960'] = func_14960
mod = relay.transform.InferType()(mod)
mutated_mod['func_14960'] = func_14960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14960_call = mutated_mod.get_global_var('func_14960')
call_14961 = func_14960_call()
output = call_14961
func_14962 = relay.Function([], output)
mutated_mod['func_14962'] = func_14962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11351_call = mod.get_global_var('func_11351')
func_11352_call = mutated_mod.get_global_var('func_11352')
call_15003 = relay.TupleGetItem(func_11351_call(), 0)
call_15004 = relay.TupleGetItem(func_11352_call(), 0)
output = relay.Tuple([call_15003,])
output2 = relay.Tuple([call_15004,])
func_15029 = relay.Function([], output)
mod['func_15029'] = func_15029
mod = relay.transform.InferType()(mod)
output = func_15029()
func_15030 = relay.Function([], output)
mutated_mod['func_15030'] = func_15030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12952_call = mod.get_global_var('func_12952')
func_12953_call = mutated_mod.get_global_var('func_12953')
call_15114 = func_12952_call()
call_15115 = func_12952_call()
output = relay.Tuple([call_15114,])
output2 = relay.Tuple([call_15115,])
func_15116 = relay.Function([], output)
mod['func_15116'] = func_15116
mod = relay.transform.InferType()(mod)
mutated_mod['func_15116'] = func_15116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15116_call = mutated_mod.get_global_var('func_15116')
call_15117 = func_15116_call()
output = call_15117
func_15118 = relay.Function([], output)
mutated_mod['func_15118'] = func_15118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12809_call = mod.get_global_var('func_12809')
func_12811_call = mutated_mod.get_global_var('func_12811')
call_15144 = relay.TupleGetItem(func_12809_call(), 0)
call_15145 = relay.TupleGetItem(func_12811_call(), 0)
func_9640_call = mod.get_global_var('func_9640')
func_9642_call = mutated_mod.get_global_var('func_9642')
call_15152 = relay.TupleGetItem(func_9640_call(), 0)
call_15153 = relay.TupleGetItem(func_9642_call(), 0)
output = relay.Tuple([call_15144,call_15152,])
output2 = relay.Tuple([call_15145,call_15153,])
func_15160 = relay.Function([], output)
mod['func_15160'] = func_15160
mod = relay.transform.InferType()(mod)
mutated_mod['func_15160'] = func_15160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15160_call = mutated_mod.get_global_var('func_15160')
call_15161 = func_15160_call()
output = call_15161
func_15162 = relay.Function([], output)
mutated_mod['func_15162'] = func_15162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12444_call = mod.get_global_var('func_12444')
func_12446_call = mutated_mod.get_global_var('func_12446')
call_15225 = func_12444_call()
call_15226 = func_12444_call()
output = call_15225
output2 = call_15226
func_15229 = relay.Function([], output)
mod['func_15229'] = func_15229
mod = relay.transform.InferType()(mod)
output = func_15229()
func_15230 = relay.Function([], output)
mutated_mod['func_15230'] = func_15230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10495_call = mod.get_global_var('func_10495')
func_10496_call = mutated_mod.get_global_var('func_10496')
call_15305 = func_10495_call()
call_15306 = func_10495_call()
output = call_15305
output2 = call_15306
func_15307 = relay.Function([], output)
mod['func_15307'] = func_15307
mod = relay.transform.InferType()(mod)
output = func_15307()
func_15308 = relay.Function([], output)
mutated_mod['func_15308'] = func_15308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13642_call = mod.get_global_var('func_13642')
func_13643_call = mutated_mod.get_global_var('func_13643')
call_15340 = relay.TupleGetItem(func_13642_call(), 3)
call_15341 = relay.TupleGetItem(func_13643_call(), 3)
func_10811_call = mod.get_global_var('func_10811')
func_10813_call = mutated_mod.get_global_var('func_10813')
call_15358 = relay.TupleGetItem(func_10811_call(), 1)
call_15359 = relay.TupleGetItem(func_10813_call(), 1)
func_14350_call = mod.get_global_var('func_14350')
func_14352_call = mutated_mod.get_global_var('func_14352')
call_15363 = relay.TupleGetItem(func_14350_call(), 1)
call_15364 = relay.TupleGetItem(func_14352_call(), 1)
output = relay.Tuple([call_15340,call_15358,call_15363,])
output2 = relay.Tuple([call_15341,call_15359,call_15364,])
func_15380 = relay.Function([], output)
mod['func_15380'] = func_15380
mod = relay.transform.InferType()(mod)
mutated_mod['func_15380'] = func_15380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15380_call = mutated_mod.get_global_var('func_15380')
call_15381 = func_15380_call()
output = call_15381
func_15382 = relay.Function([], output)
mutated_mod['func_15382'] = func_15382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14180_call = mod.get_global_var('func_14180')
func_14182_call = mutated_mod.get_global_var('func_14182')
call_15418 = relay.TupleGetItem(func_14180_call(), 0)
call_15419 = relay.TupleGetItem(func_14182_call(), 0)
func_9701_call = mod.get_global_var('func_9701')
func_9702_call = mutated_mod.get_global_var('func_9702')
call_15421 = relay.TupleGetItem(func_9701_call(), 2)
call_15422 = relay.TupleGetItem(func_9702_call(), 2)
var_15429 = relay.var("var_15429", dtype = "uint64", shape = (15, 693))#candidate|15429|(15, 693)|var|uint64
bop_15430 = relay.less(call_15421.astype('bool'), var_15429.astype('bool')) # shape=(15, 693)
bop_15433 = relay.less(call_15422.astype('bool'), var_15429.astype('bool')) # shape=(15, 693)
const_15439 = relay.const([[-8,-10,-7,-9,-8,-9,-7,3,6,9,8,-4,9,-2,9,-7,-4,-10,-2,9,1,5,10,7,-3,2,8,-2,4,-2,-3,-2,5,-8,-2,-7,7,-10,1,-5,-4,8,4,7,-3,-3,-7,3,-8,9,10,-4,1,5,1,-6,6,-5,3,-10,-2,-5,9,-2,-1,-10,8,-1,8,-9,-6,2,-1,6,-2,2,-1,-4,7,1,9,-10,-3,-6,-8,10,1,10,10,8,2,5,-9,8,-6,-3,-8,2,5,-4,4,-9,-5,-9,-2,-6,-6,-2,3,10,-6,-4,7,8,5,-5,6,-4,-2,6,9,-10,7,10,9,9,3,2,3,-2,-1,-7,-2,6,5,7,5,1,-9,-2,-2,-4,6,7,-5,8,-7,-1,-8,-4,-10,-9,10,9,-2,6,1,1,5,7,-6,-5,9,-3,-4,4,-9,3,4,9,-2,-1,6,-2,-7,-2,-5,-5,3,-3,-6,3,1,-7,7,-2,2,5,5,-10,8,7,-8,-8,-2,-10,-10,-6,-10,-8,8,7,5,-7,-9,5,8,1,-6,-7,-9,-9,-1,-2,9,-7,1,-6,-3,-7,9,-10,-5,2,-9,10,-7,9,-5,8,-2,-10,8,9,10,-6,9,-7,-6,-6,8,-4,-6,-5,-5,-6,10,10,-3,-9,-7,3,2,10,8,4,-1,-5,3,-9,-4,7,-10,-2,-10,-7,8,10,-1,10,6,9,2,6,5,6,-8,-3,-2,3,-8,8,2,7,-8,-5,1,-2,10,-8,3,4,7,-2,-4,2,5,1,-7,3,7,10,3,-1,-1,-8,3,6,3,2,4,1,-3,9,3,5,-9,8,-8,5,-7,4,8,3,-9,-1,8,-4,-6,-3,4,-9,-5,-5,7,2,4,8,-5,3,6,9,-6,7,8,3,9,5,10,-9,-9,-2,9,6,1,-10,-5,-10,-3,-5,8,3,9,-3,7,7,-5,10,1,7,-7,-8,7,-3,7,-1,3,2,3,2,-7,7,-2,-5,-5,4,1,-4,1,9,5,-5,-8,-4,-2,1,7,-3,-7,1,-1,3,8,2,-7,9,3,-2,-3,-1,3,4,10,-9,6,-8,-5,-2,-8,-2,5,9,-7,10,5,5,-3,-10,-8,9,-6,-2,-6,6,9,3,1,-4,2,10,-5,-7,-6,1,-3,10,7,-4,8,-1,8,-1,-3,-9,6,4,6,10,-6,8,3,-1,-1,3,5,-8,-7,1,-3,7,-2,3,-10,-2,5,-8,-9,7,5,3,4,-10,10,1,2,3,6,-1,-8,-5,-4,-1,1,7,8,4,9,4,-5,-3,2,-10,1,-7,6,-1,-4,-5,10,10,10,-1,8,-10,-10,-2,6,-5,3,5,-5,-10,-9,-3,-5,-7,7,-5,3,9,-6,-8,-3,9,-6,-3,-1,7,8,-8,-2,-9,3,5,-1,1,-5,2,-3,-4,-7,7,2,9,5,4,-10,-8,8,1,10,-7,-3,5,-1,-7,7,-8,10,-10,3,-4,-8,-10,-8,8,-4,-6,-5,5,1,-6,-5,-9,2,-10,3,1,-10,10,1,7,6,-2,-6,8,-6,6,-9,-6,2,5,2,1,-5,10,-10,1,2,-6,10,-4,8,-8,4,-5,2,6,-6,-5,-7,-6,6,2,1,-6,1,7,-1,6,9,-4,1,-4,-6,-7,8,9,-3,1,10,-6,9,-10,-8,-6,8,-9,-1,-4,-6,9,6,-9,8,2,-7,-8,-2,9,-5,-1,6,-9,-5,-3,6,4,-7,-1,-2,4,1,-8,-10,-3,1,-5,-3,3,1,-8,5,1,4,-10,4,6,3,6,-10,-8,2]], dtype = "uint64")#candidate|15439|(1, 693)|const|uint64
bop_15440 = relay.less_equal(call_15421.astype('bool'), relay.reshape(const_15439.astype('bool'), relay.shape_of(call_15421))) # shape=(1, 693)
bop_15443 = relay.less_equal(call_15422.astype('bool'), relay.reshape(const_15439.astype('bool'), relay.shape_of(call_15422))) # shape=(1, 693)
func_8829_call = mod.get_global_var('func_8829')
func_8835_call = mutated_mod.get_global_var('func_8835')
const_15453 = relay.const([False,False,False,True,True,False,False,False,False,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,True,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,False,False,False,False,False,False,True,True,True,False,True,False,False,True], dtype = "bool")#candidate|15453|(56,)|const|bool
const_15454 = relay.const([False,False,False,False,False,True,True,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,True,True,False,True,False,False,False,False,False,True,True,True,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,True,False,False,True,True,True,True,False,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,True,False,False,False,True,True,False,True,True,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,False,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,True,False,False,False,False,True,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True], dtype = "bool")#candidate|15454|(672,)|const|bool
var_15455 = relay.var("var_15455", dtype = "uint64", shape = (700,))#candidate|15455|(700,)|var|uint64
const_15456 = relay.const([8.281738,5.883431,0.770126,-9.170992,-0.718739,8.568981,1.587480,-3.232546,-2.043225,-8.367243,2.358687,8.212038,-3.865856,7.446100,9.772078,-6.716231,6.334960,1.749953,1.060461,-0.244586,-2.061370,4.326411,3.122915,9.038708,2.487049,-7.484868,-3.016862,-4.891799,2.138802,7.013295,7.970143,1.405567,6.347812,9.520165,5.979625,-8.504082,0.905311,3.594810,4.287349,6.305251,-3.559584,4.738186,3.607809,-4.034749,8.311075,6.671926,3.461521,-4.465611,0.459532,-2.370611,0.539656,-2.226899,-7.523906,2.923998,-7.830339,-9.092357,-7.292371,-5.191172,-5.790698,-7.360742,-7.096886,-7.827287,9.781471,-7.665727,7.555694,2.810082,1.771370,4.549416,5.713098,3.723526,3.574172,7.831720,-9.107889,-9.385897,-1.961273,-5.390365,-3.712578,-5.823042,3.597167,2.611454,2.718059,6.646076,-8.955604,1.947830,5.079079,-4.482487,-3.085134,1.328845,3.003489,1.631826,-9.441139,-2.924186,2.251077,-1.079258,1.438491,1.478980,-1.890548,7.432941,4.264168,2.238353,5.570752,-7.957731,1.657001,-0.607300,7.905248,-6.752511,-1.572013,-4.083182,4.572517,-4.490121,-1.442956,-4.272492,6.357883,-2.018128,-0.369139,9.946579,5.655808,0.396601,9.153009,1.631991,-2.479905,2.959620,-4.044792,-5.120227,-9.857516,-0.819804,-9.157412,-4.208375,-4.781003,-1.325736,-5.605145,-1.183847,4.162508,-4.458115,-7.224572,8.368160,8.505121,8.326457,5.516834,1.800774,-2.244718,-8.869495,-8.236139,-1.545306,0.510057,6.780002,9.048496,0.845364,-1.542408,3.262511,9.019205,3.544420,0.401840,-4.973354,-1.523394,8.651248,1.125250,3.373367,-9.149790,-5.577659,-5.600150,5.567368,-3.813611,2.704057,-2.301246,3.455352,2.990664,-5.493996,5.976744,2.910705,-0.476097,-1.057803,5.981776,-0.187202,-1.205014,6.345819,-2.990632,-8.627383,-7.252308,1.954109,-9.183398,-8.099026,3.418419,5.224092,-7.634812,-6.485329,6.374507,-5.760018,-1.783346,-4.202181,-1.414039,-7.629535,-5.563927,4.035473,-7.257093,9.290612,5.030938,-8.936367,-2.120177,3.269966,3.748502,7.715240,-8.723352,2.443225,-4.557173,3.796788,4.773651,-3.511931,-2.109653,-7.130137,-3.636690,-2.238294,-2.750844,3.626782,-8.489286,9.182777,-7.978437,-1.406714,-3.817484,-0.751135,5.868363,8.793690,4.564988,-5.310528,0.291796,-4.185316,-1.551099,5.139548,1.698274,4.860171,7.439243,1.349384,5.978050,6.457911,3.407359,3.172986,2.454648,-8.953238,-5.992701,3.650043,2.896114,7.315548,-7.115126,-1.387425,5.583100,1.147256,-9.462089,1.943974,-6.028067,-7.648889,-0.878212,-7.641151,-1.571349,-2.839799,1.683200,3.641151,9.854756,-4.151256,7.967504,1.985615,-1.606989,-0.244016,-8.056530,-4.717235,-3.560050,-6.256665,-1.081887,-3.730667,6.683355,1.364030,-3.129627,-4.893959,-2.721780,4.262228,8.366586,-0.010578,4.000197,3.227495,-5.851175,-1.369764,-7.559540,3.110521,7.525461,1.807963,-7.310689,7.412928,8.105712,-5.131687,-5.812772,-6.010722,1.283427,4.589996,3.016190,-3.932814,1.412286,-7.561475,8.692137,-3.353162,8.412190,-3.068091,7.663051,2.008346,6.052962,-3.471069,2.661479,4.104772,4.145932,-4.042336,8.527570,9.048993,7.286790,-1.369310,3.853136,-1.827475,5.191586,6.202063,-2.114578,6.461116,-1.514985,-4.711457,-4.915862,-9.024783,-0.622754,-6.941790,0.258395,-2.681747,2.547780,-5.797668,-4.761590,-6.288382,6.696480,-0.596717,-0.435940,3.504246,4.330191,-1.313757,8.013498,6.591436,0.655734,-7.438259,8.039892,-9.086882,3.055632,-0.915016,8.499703,0.390935,-9.580732,-4.633957,-8.765348,3.562755,2.270727,7.631890,5.557377,1.688529,1.152046,5.348981,-2.939094,6.843378,-6.583262,6.703871,-8.019682,-5.874051,-0.187862,8.588313,-9.413065,-4.646153,8.437909,4.729524,8.838377,7.783242,-0.700025,0.538588,-2.711260,-1.339858,-6.129945,-7.427799,8.367176,8.223364,-2.418413,-2.417354,-7.790147,-0.798634,-2.038786,-0.695953,-4.654103,-5.279242,-5.204857,-6.822086,4.771668,-8.982932,-6.782185,-0.547755,1.823834,-7.281151,5.976039,1.587357,8.125257,0.119313,8.440551,8.598343,4.485056,-9.480959,-4.902970,9.186317,4.713050,3.835560,-0.432566,3.417424,-3.794725,6.639415,-6.538842,5.006113,9.129500,-6.593994,-3.724393,-0.845014,7.945666,9.751494,0.776020,3.191730,-3.074163,6.406726,9.304026,6.067864,-0.548856,3.371041,2.117268,-4.836268,3.231442,8.138869,0.212997,2.474537,-2.827946,-8.798002,7.721477,-0.803860,-9.925877,5.319929,9.978900,4.238029,5.349432,-3.866630,0.596162,2.439622,5.711927,-9.797075,7.947747,-0.294167,6.970216,7.872593,-6.401866,-2.470025,5.197467,-7.418821,-1.194155,-1.403071,-8.680621,-5.646491,-2.766134,-6.870853,-4.307637,-0.880003,5.294678,0.480693,0.413026,1.003475,9.780742,-0.779567,2.362116,3.093736,7.802252,-1.932663,-7.581212,1.872721,-1.996138,9.427544,5.563332,-2.053818,-1.526609,4.184575,1.974993,3.442009,-3.884915,0.624481,8.208567,-6.183503,2.067812,-8.646701,0.861405,-6.171161,-5.037712,0.416781,5.145741,-2.205751,8.157057,0.978826,-0.326111,0.836268,-7.738808,6.611927,9.779357,-4.818447,-5.459584,3.261589,9.485650,1.712451,2.630751,9.305507,3.243967,-4.733355,7.738800,4.460241,-3.510558,-1.975841,0.394215,-1.371292,3.459850,5.075645,-1.437297,-8.826191,-8.551238,3.514839,-8.072872,-2.460598,-0.043785,-0.577023,-5.775916,7.563428,0.163472,-3.845946,4.160580,8.773933,2.323978,-8.432116,2.707758,1.205678,8.178656,7.405356,0.949374,5.092900,-4.606179,6.525568,7.806267,-1.247743,2.305109,8.851791,1.711719,0.185139,-6.440317,-4.816777,-0.154301,6.027607,-3.654514,2.243034,0.588694,3.704414,0.891006,-5.445095,-9.333905,6.536079,0.071991,-6.298292,0.378089,-8.823041,-4.666880,-0.762598,-6.062238,-6.365002,-6.867574,8.524998,-2.277219,-8.828349,7.262584,-5.122425,9.020943,0.328359,-4.165821,4.656291,-0.867946,5.887234,2.680256,8.040356,-4.137917,-4.369339,-5.987412,-0.058023,5.701606,-6.495046,4.887643,-6.360770,-5.610545,-8.289914,6.391863,-8.264204,1.260682,-0.880712,1.196569,-3.462416,0.842376,4.899884,-3.030075,-9.639080,-4.736324,0.153769,6.967492], dtype = "float32")#candidate|15456|(605,)|const|float32
call_15452 = relay.TupleGetItem(func_8829_call(relay.reshape(const_15453.astype('bool'), [1, 7, 8]), relay.reshape(const_15454.astype('bool'), [12, 7, 8]), relay.reshape(var_15455.astype('uint64'), [700,]), relay.reshape(const_15456.astype('float32'), [605,]), relay.reshape(call_15418.astype('uint8'), [140,]), ), 5)
call_15457 = relay.TupleGetItem(func_8835_call(relay.reshape(const_15453.astype('bool'), [1, 7, 8]), relay.reshape(const_15454.astype('bool'), [12, 7, 8]), relay.reshape(var_15455.astype('uint64'), [700,]), relay.reshape(const_15456.astype('float32'), [605,]), relay.reshape(call_15418.astype('uint8'), [140,]), ), 5)
bop_15460 = relay.greater(bop_15430.astype('bool'), relay.reshape(var_15429.astype('bool'), relay.shape_of(bop_15430))) # shape=(15, 693)
bop_15463 = relay.greater(bop_15433.astype('bool'), relay.reshape(var_15429.astype('bool'), relay.shape_of(bop_15433))) # shape=(15, 693)
output = relay.Tuple([call_15418,bop_15440,call_15452,const_15453,const_15454,var_15455,const_15456,bop_15460,])
output2 = relay.Tuple([call_15419,bop_15443,call_15457,const_15453,const_15454,var_15455,const_15456,bop_15463,])
func_15469 = relay.Function([var_15429,var_15455,], output)
mod['func_15469'] = func_15469
mod = relay.transform.InferType()(mod)
var_15470 = relay.var("var_15470", dtype = "uint64", shape = (15, 693))#candidate|15470|(15, 693)|var|uint64
var_15471 = relay.var("var_15471", dtype = "uint64", shape = (700,))#candidate|15471|(700,)|var|uint64
output = func_15469(var_15470,var_15471,)
func_15472 = relay.Function([var_15470,var_15471,], output)
mutated_mod['func_15472'] = func_15472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14487_call = mod.get_global_var('func_14487')
func_14489_call = mutated_mod.get_global_var('func_14489')
call_15494 = func_14487_call()
call_15495 = func_14487_call()
func_10495_call = mod.get_global_var('func_10495')
func_10496_call = mutated_mod.get_global_var('func_10496')
call_15559 = func_10495_call()
call_15560 = func_10495_call()
func_13229_call = mod.get_global_var('func_13229')
func_13231_call = mutated_mod.get_global_var('func_13231')
call_15573 = relay.TupleGetItem(func_13229_call(), 2)
call_15574 = relay.TupleGetItem(func_13231_call(), 2)
func_14677_call = mod.get_global_var('func_14677')
func_14678_call = mutated_mod.get_global_var('func_14678')
call_15614 = func_14677_call()
call_15615 = func_14677_call()
output = relay.Tuple([call_15494,call_15559,call_15573,call_15614,])
output2 = relay.Tuple([call_15495,call_15560,call_15574,call_15615,])
func_15617 = relay.Function([], output)
mod['func_15617'] = func_15617
mod = relay.transform.InferType()(mod)
mutated_mod['func_15617'] = func_15617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15617_call = mutated_mod.get_global_var('func_15617')
call_15618 = func_15617_call()
output = call_15618
func_15619 = relay.Function([], output)
mutated_mod['func_15619'] = func_15619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13642_call = mod.get_global_var('func_13642')
func_13643_call = mutated_mod.get_global_var('func_13643')
call_15623 = relay.TupleGetItem(func_13642_call(), 1)
call_15624 = relay.TupleGetItem(func_13643_call(), 1)
func_4071_call = mod.get_global_var('func_4071')
func_4073_call = mutated_mod.get_global_var('func_4073')
const_15628 = relay.const([2.821863,-6.101670,6.913739,9.659254,-4.331056,2.929653,-8.106861,4.721849,-6.642798,4.829739,-4.893166,6.776003,-4.628958,7.497753,3.377051,8.271556,4.896610,5.271433,-2.821033,5.477229,-8.155252,-0.451170,8.164550,-5.461395,-3.622569,-1.062138,2.446288,-1.438441,6.613862,-0.645127,0.429981,-1.816290,5.279106,9.547891,-3.979842,-1.040876,-2.027840,-9.776166,-8.530471,5.060815,-7.234280,3.521972,5.564883,7.569793,8.756578,6.123270,-7.489275,9.771675,5.839265,3.246143,6.921144,-1.283456,-7.274747,0.174553,6.871351,7.954328,-5.227800,-5.530206,6.021515,2.068730,7.251545,1.085354,-1.793969,7.890446,0.216657,3.466282,-0.322793,-4.172401,-1.924807,3.060691,-7.153327,8.552460,-8.596736,7.401171,-6.413539,-5.823782,7.717300,0.222132,5.756439,-6.116355,7.727968,2.669025,8.278376,-4.707396,-8.616729,-0.257704,-2.998340,1.867629,4.850713,-9.222008,2.341424,6.833091,-0.802788,-0.184200,4.900097,4.985550,8.739188,-7.554528,-7.590410,-4.443691,-4.721623,-2.683132,8.258665,2.496294,-1.665632,-0.699301,1.547653,-0.090083,-5.724234,5.989285,8.712997,-0.121282,6.219373,-3.037712,4.689255,-6.785606,0.023558,-3.864478,6.529334,5.488954,-4.893118,7.911885,4.978674,2.997178,4.170670,8.608380,8.532568,5.423193,-0.755737,9.451717,-5.662470,2.946548,-4.668507,-0.539387,-9.994619,8.258178,2.886583,-9.303144,-8.274325,-9.573690,-6.212467,6.915827,9.418216,-8.720662,-6.721926,9.791934,-5.091748,-8.678246,9.811916,-7.686768,-4.949657,-6.391385,-4.231669,-7.057847,-0.449955,-9.013912,-0.739073,5.255487,-0.424289,9.200085,3.524744,-6.326013,9.705927,-7.683731,0.562174,-2.379648,-4.037360,-7.249834,4.691156,3.135752,3.777107,-4.168375,3.770573,-3.718261,-5.950585,-8.012637,-9.591485,1.163804,2.793118,-8.786542,-3.419745,-2.414018,2.845122,9.468119,3.779651,1.686489,3.639538,-1.155924,0.488173,-5.605001,-5.512372,7.105896,4.659497,7.139190,-8.734615,-1.210371,-7.519687,0.938590,1.787390,2.839152,9.650432,8.812143,-3.287047,-8.077855,-7.192208,8.546062,2.280633,-8.939004,1.748343,-6.752623,8.771650,-9.174612,0.908059,-6.342821,4.442806,-5.838538,-8.456750,1.361109,0.693383,-4.675147,-9.395856,2.358594,-7.176567,2.696075,4.802409,1.175059,-0.461649,-3.614814,6.085341,-3.520845,-1.703022,6.072550,-0.538021,-4.209829,-5.314598,-0.136100,-8.985370,2.000232,7.040911,5.908997,-6.847219,2.115514,-9.744648,-0.494071,-1.864745,-2.296021,5.086181,4.960870,-4.282351,-3.217311,-6.468555,-7.939220,-0.816093,5.132849,-8.162499,-9.683518,5.790469,5.390301,9.039451,4.588824,-3.685232,4.150067,-0.972542,9.314890,-5.297413,9.111125,-3.014280,1.441602,9.498999,-6.132266,4.918895,-6.980232,7.896107,9.853860,-2.824867,-1.339981,-8.089437,-3.326469,5.593015,-6.097193,7.068185,-9.634862,3.444112,-8.817653,0.803050,-6.024405,3.255090,9.832621,-9.770227,-4.143357,-0.405135,7.587584,-9.701007,2.771457,0.152939,4.988307,4.999860,3.429554,0.364013,-5.125962,-6.077529,-1.447889,0.631068,-8.895312,-5.645338,-7.099292,-9.554858,3.501123,-0.351467,-9.886642,-4.981308,-6.545857,8.925079,-0.386772,-3.585020,4.042055,1.130143,-6.338207,-5.054698,-2.117486,2.952400,4.632291,-1.274520,-5.990180,8.257619,4.321439,-5.831232,5.668920,6.339163,4.552351,-7.677279,-0.717912,-4.313095,4.775550,-0.497317,8.331725,-2.054771,2.528909,4.912143,6.659291,-1.988092,8.970238,8.652848,-9.722945,-8.246374,-1.537031,1.044575,3.592603,8.733304,-4.212035,-7.246800,-0.580972,-4.323361,-9.211844,5.747095,-2.215472,-5.397766,4.904901,-3.095244,-3.445248,6.887114,-8.863513,3.513617,-7.743591,-1.307784,-2.240570,-7.959970,2.323178,-3.965030,-5.276780,-7.777036,8.064135,-8.347258,-1.685386,9.736398,-4.743573,9.059609,8.644488,-7.105253,2.624051,-4.958092,9.077229,-0.645401,1.357944,-9.461667,1.249871,-9.851646,3.812658,5.816045,5.341094,-2.722843,5.569065,-8.218305,7.230999,-6.576313,7.373145,-6.918505,2.664444,-4.885961,-5.032799,-3.112098,8.347329,-9.392675,-3.483315,-6.588028,-4.684125,0.669346,-4.019954,-0.024647,-9.791138,-8.416999,7.068893,-4.919054,-7.918836,4.351161,-3.086247,-7.924841,-4.642206,-4.040112,-7.262519,7.980078,-3.157362,-0.791695,-3.631859,-5.066514,0.804268,7.483238,8.778255,6.493156,-7.842299,-1.255805,-3.697992,-3.884669,-9.027027,8.527017,5.683326,0.618465,6.278474,-8.762083,1.990977,-7.630157,6.724532,6.151003,-6.542976,-7.646132,-5.141074,3.921814,0.646205,1.917423,-2.909994,-8.185936,0.455611,3.652605,6.576856,9.957934,-5.542886,3.250179,5.101091,2.696833,1.853541,-2.985605,-1.140758,8.248864,8.903424,9.186393,5.315690,6.910581,-5.630399,-9.771050,-7.337337,-5.535228,6.681432,-3.212862,-0.207841,-7.834900,-6.390517,9.203237,-0.738989,-5.034400,-3.435926,-3.617354,-9.987267,-2.657541,-7.228839,-5.133125,-8.269730,-5.999643,5.183322,-9.768309,-0.887168,2.865003,6.837358,5.539877,7.433919,7.184550,-6.023408,-1.491760,8.782766,3.225973,0.754470,-3.889565,-3.649574,5.662125,-0.889486,4.994037,7.458371,6.266820,-7.990848,-6.226475,-1.866142,5.895191,0.121213,2.605689,-9.354387,1.767742,0.832967,-2.498207,-5.550573,2.824359,8.788867,9.710412,4.009087,-9.275421,4.784033,-6.568636,-9.016663,-4.347091,0.620495,8.061142,-1.973881,7.318981,-7.942933,4.909106,8.081219,3.216939,-4.477421,9.731709,9.884060,4.131649,8.933161,6.674484,1.037201,8.597978,5.044156,-3.178922,4.599343,7.220875,3.706230,-7.258611,4.579816,-5.076093,-6.383742,-4.018173,6.353550,5.202955,3.282918,-1.439347,-6.517042,2.983206,-8.253217,-7.457171,9.850340,-0.468077,-9.107071,6.197449,-9.641696,2.362655,-4.970427,2.235732,6.129944,-8.754392,6.260422,0.071521,-0.047489,2.661170,8.751692,4.761003,-1.834573,6.301492,-5.678419,-9.591192,-2.938308,-6.560657,9.541246,-1.015194,-9.652581,5.970196,-2.387874,7.470850,2.533333,6.097947,-9.784274,5.318594,-4.194027,-7.786174,-5.638563,-9.664145,-2.582897,7.193987,-4.661998,5.940119,-7.458626,-7.530992,5.896386,7.131651], dtype = "float32")#candidate|15628|(605,)|const|float32
call_15627 = func_4071_call(relay.reshape(const_15628.astype('float32'), [11, 5, 11]))
call_15629 = func_4071_call(relay.reshape(const_15628.astype('float32'), [11, 5, 11]))
func_1708_call = mod.get_global_var('func_1708')
func_1711_call = mutated_mod.get_global_var('func_1711')
const_15631 = relay.const(-1, dtype = "int8")#candidate|15631|()|const|int8
const_15632 = relay.const([-3,7,-7,6,-6,9,-10,10,-5,8,7,10,-4,2,-9,-3,9,6,10,-3,2,4,10,3,-10,-5,-10,-6,8,-2,-6,-9,-4,-10,6,-1,-9,2,8,5,8,-8,5,-5,-2,9,-3,-3,-1,1,8,8,6,7,5,5,-1,2,-7,-10,3,6,-6,-4,2,6,7,7,4,-9,-3,-2,5,2,-10,-10,-2,10,-5,-6,-10,-7,8,10,8,-1,-2,-7,5,-1,-4,10,7,-3,-4,1,3,1,-2,3,10,10,7,1,9,-6,2,8,-6,6,-1,-6,-5,-8,-7,8,5,1,7,3,-3,10,7,-9,-10,6,9,8,6,4,4,-3,2,-2,-4,-7,-6,-6,-7,-7,-9,-8,3,-4,-9,4,-2,6,-9,-3,3,-3,8,-9,4,10,9,4,4,-2,-8,-10,-3,4,-3,6,8,-5,1,-9,-2,-10,7,-2,6,5,10,4,-2,-7,7,2,-7,10,-1,-2,-8,-1,-8,7,8,-8,7,-4,-2,3,8,-5,-10,-10,-5,-3,7,-7,8,-1,-6,-5,-2,-2], dtype = "int8")#candidate|15632|(210,)|const|int8
call_15630 = func_1708_call(relay.reshape(const_15631.astype('int8'), []), relay.reshape(const_15632.astype('int8'), [15, 1, 14]), )
call_15633 = func_1708_call(relay.reshape(const_15631.astype('int8'), []), relay.reshape(const_15632.astype('int8'), [15, 1, 14]), )
func_9835_call = mod.get_global_var('func_9835')
func_9839_call = mutated_mod.get_global_var('func_9839')
const_15637 = relay.const([4,-9,-1,-8,6,1,-9,-9,-7,2,-1,-2,10,10,-4,7,4,8,2,-4,-9,4,-9,-8,-7,10,5,-10,4,2,-1,-9,-6,-2,3,7,-2,4,6,-8,4,1,-9,-6,-1,2,-9,8,-8,-4,-8,-6,3,-2,2,10,-9,7,3,1,-6,-7,4,10,6,4,4,4,10,4,7,7,-6,4,-2,5,-7,-2,-6,4,6,-7,10,6,9,-9,6,10,4,5,-8,3,3,-8,-8,2,-2,4,4,9,2,8,6,3,-2,6,-9,7,4,10,8,8,2,-10,-4,10,7,-7,7,-2,8,-1,7,-8,3,-7,-1,9,-8,2,7,9,9,6,-6,7,4,-1,-5,-4,-9,7,5,-5,-4,5,6,-5,2,3,10,1,7,7,-3,10,9,3,-3,6,-3,9,9,-6,-5,-6,-6,-9,9,5,-6,-5,2,8,4,5,9,9,-7,-6,2,7,8,-1,3,-2,-10,-3,-5,-8,-9,8,-6,-3,-10,7,-10,1,4,9,-9,6,6,-2,2,-9,4,6,-4,4,7,-5,-8,9,10,9,6,1,-5,-4,4,8,1,-5,-7,9,2,3,2,-2,-9,-4,-6,-9,-7,-8,8,-6,-3,6,-1,4,-10,-3,-10,-7,-6,5,7,3,-9,-4,8,-8,4,-1,-8,10,3,-2,-10,1,1,10,-10,-1,-3,-5,-8,3,4,1,-10,-2,6,-3,1,4,10,10,-6,-6,-10,1,-4,2,-10,-2,1,3,-5,4,10,10,2,7,-2,7,6,10,4,-5,-2,-5,10,2,4,-1,-6,4,10,-7,6,4,4,9,-3,-4,-3,2,7,-9,2,7,3,-9,3,-5,2,1,1,-5,8,3,-10,-7,9,-10,-7,2,-8,-1,6,2,-5,-5,-6,-5,2,6,-3,3,-8,-4,9,5,6,10,3,-2,-8,-7,9,-7,-9,7,7,-5,-2,-9,6,10,-9,-6,6,-1,6,7,1,10,-8,-4,-6,1,8,1,-6,-8,5,7,3,-6,-7,6,-6,8,3,10,-10,9,2,4,5,3,5,1,-10,-6,-9,-7,-9,10,6,3,-2,-6,4,-2,-1,9,7,-5,-7,5,3,1,-6,6,-5,-10,3,3,5,6,-2,-3,5,9,-8,7,6,-5,-9,6,2,-10,1,10,-1,-1,1,6,-3,7,-9,7,2,-10,5,-6,-4,-9,2,-9,10,-7,-8,-9,8,-6,-2,-4,5,7,2,6,-10,8,-6,4,-1,-7,4,9,3,8,-8,-8,-6,10,8,3,3,-9,-10,-7,8,7,-1,3,-4,7,-3,3,-2,7,-1,8,-2,4,-2,1,4,-1,6,9,6,2,-3,-1,9,2,10,7,7,-6,-2,-10,-6,-3,6,4,8,-3,2,5,-6,5,-7,10,2,2,2,2,4,2,-7,-1,-6,-7,2,2,-7,4,7,-7,-7,-5,-2,8,-2,5,1,-6,2,-5,-3,2,2,-5,7,2,-2,4,-3,1,7,5,-2,2,2,10,-4,9,-8,9,-8,-3,5,8,2,-3,5,-4,7,-3,-7,8,5,9,2,3,6,-4,-3,-1,2,-1,-4,-4,-5,1,9,-3,-7,-10,-8,-10,-6,7,5,-4,4,3,-2,-8,-1,-9,8,-7,-2,-3,9,-5,6,-4,-10,9,4,9,-9,5,5,2,-3,8,5,8,-3,-9,-4,1,3,-5,3,5,10,2,1,9,-3,3,-8,-4,-3,1,7,-9,-3,-9,10,-6,1,6,-4,-10,-3,6,4,-2,4,2,5,-4,-8,3,-7,8,9,-4,10,9,-6,3,-7,-7,-8,4,2,10], dtype = "uint64")#candidate|15637|(700,)|const|uint64
const_15638 = relay.const([[3.903475,4.384799,8.286346,0.068844,9.100372,-9.851778,-2.568420,-6.291084,6.390361,-7.473354,-5.017489,7.429873,-5.848781,-1.700701,9.102016,-4.152313,-9.123807,5.533143,-5.530163,6.366414,-9.346545,-5.216324,1.189933,-3.184643,2.995683]], dtype = "float64")#candidate|15638|(1, 25)|const|float64
call_15636 = relay.TupleGetItem(func_9835_call(relay.reshape(const_15637.astype('uint64'), [700,]), relay.reshape(const_15638.astype('float64'), [25,]), relay.reshape(const_15631.astype('int8'), []), ), 5)
call_15639 = relay.TupleGetItem(func_9839_call(relay.reshape(const_15637.astype('uint64'), [700,]), relay.reshape(const_15638.astype('float64'), [25,]), relay.reshape(const_15631.astype('int8'), []), ), 5)
func_14001_call = mod.get_global_var('func_14001')
func_14002_call = mutated_mod.get_global_var('func_14002')
call_15649 = relay.TupleGetItem(func_14001_call(), 2)
call_15650 = relay.TupleGetItem(func_14002_call(), 2)
uop_15652 = relay.sqrt(const_15628.astype('float64')) # shape=(605,)
output = relay.Tuple([call_15623,call_15627,call_15630,const_15631,const_15632,call_15636,const_15637,const_15638,call_15649,uop_15652,])
output2 = relay.Tuple([call_15624,call_15629,call_15633,const_15631,const_15632,call_15639,const_15637,const_15638,call_15650,uop_15652,])
func_15662 = relay.Function([], output)
mod['func_15662'] = func_15662
mod = relay.transform.InferType()(mod)
mutated_mod['func_15662'] = func_15662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15662_call = mutated_mod.get_global_var('func_15662')
call_15663 = func_15662_call()
output = call_15663
func_15664 = relay.Function([], output)
mutated_mod['func_15664'] = func_15664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13910_call = mod.get_global_var('func_13910')
func_13911_call = mutated_mod.get_global_var('func_13911')
call_15693 = relay.TupleGetItem(func_13910_call(), 0)
call_15694 = relay.TupleGetItem(func_13911_call(), 0)
output = relay.Tuple([call_15693,])
output2 = relay.Tuple([call_15694,])
func_15697 = relay.Function([], output)
mod['func_15697'] = func_15697
mod = relay.transform.InferType()(mod)
output = func_15697()
func_15698 = relay.Function([], output)
mutated_mod['func_15698'] = func_15698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13193_call = mod.get_global_var('func_13193')
func_13195_call = mutated_mod.get_global_var('func_13195')
call_15811 = relay.TupleGetItem(func_13193_call(), 1)
call_15812 = relay.TupleGetItem(func_13195_call(), 1)
output = call_15811
output2 = call_15812
func_15821 = relay.Function([], output)
mod['func_15821'] = func_15821
mod = relay.transform.InferType()(mod)
output = func_15821()
func_15822 = relay.Function([], output)
mutated_mod['func_15822'] = func_15822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12809_call = mod.get_global_var('func_12809')
func_12811_call = mutated_mod.get_global_var('func_12811')
call_15823 = relay.TupleGetItem(func_12809_call(), 0)
call_15824 = relay.TupleGetItem(func_12811_call(), 0)
output = relay.Tuple([call_15823,])
output2 = relay.Tuple([call_15824,])
func_15864 = relay.Function([], output)
mod['func_15864'] = func_15864
mod = relay.transform.InferType()(mod)
output = func_15864()
func_15865 = relay.Function([], output)
mutated_mod['func_15865'] = func_15865
mutated_mod = relay.transform.InferType()(mutated_mod)
const_15878 = relay.const([[[1,-3,4,5,-7,4,3,2,7,6,-2],[1,3,-6,-2,-8,-8,7,-5,6,1,3],[5,9,7,-3,2,6,3,-2,-6,8,-1],[6,7,7,-3,3,-6,-9,10,1,-3,9],[10,1,-2,-9,-5,-1,6,-2,10,6,-10],[8,-8,-3,-5,-9,4,2,10,-2,-6,-7],[3,-3,5,-9,-6,-4,-4,-7,9,-6,5]],[[-8,-1,8,-3,10,-4,-9,4,-3,-4,7],[4,-1,-10,-6,6,10,6,5,-2,-7,9],[7,-5,8,-7,-1,10,4,8,-5,-5,2],[-2,1,3,2,6,-7,-10,-4,9,8,5],[9,3,8,8,7,6,-6,10,10,9,-8],[-2,6,6,-3,7,4,8,5,-1,-8,4],[3,3,-9,1,-1,-10,8,-2,-8,-7,-8]]], dtype = "int16")#candidate|15878|(2, 7, 11)|const|int16
var_15879 = relay.var("var_15879", dtype = "int16", shape = (2, 7, 11))#candidate|15879|(2, 7, 11)|var|int16
bop_15880 = relay.bitwise_and(const_15878.astype('int16'), relay.reshape(var_15879.astype('int16'), relay.shape_of(const_15878))) # shape=(2, 7, 11)
output = bop_15880
output2 = bop_15880
func_15887 = relay.Function([var_15879,], output)
mod['func_15887'] = func_15887
mod = relay.transform.InferType()(mod)
var_15888 = relay.var("var_15888", dtype = "int16", shape = (2, 7, 11))#candidate|15888|(2, 7, 11)|var|int16
output = func_15887(var_15888)
func_15889 = relay.Function([var_15888], output)
mutated_mod['func_15889'] = func_15889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14350_call = mod.get_global_var('func_14350')
func_14352_call = mutated_mod.get_global_var('func_14352')
call_15974 = relay.TupleGetItem(func_14350_call(), 1)
call_15975 = relay.TupleGetItem(func_14352_call(), 1)
func_1708_call = mod.get_global_var('func_1708')
func_1711_call = mutated_mod.get_global_var('func_1711')
var_16019 = relay.var("var_16019", dtype = "int8", shape = ())#candidate|16019|()|var|int8
const_16020 = relay.const([3,-7,-1,-7,2,5,6,7,-7,5,8,3,-9,1,5,6,-2,-8,5,5,7,7,-4,-1,7,-4,10,-7,6,-2,2,6,2,6,-9,-5,10,10,-4,5,-9,-10,-6,1,-5,-2,1,-8,4,-2,-4,1,-9,-8,-4,-6,-3,3,3,1,6,-2,1,-2,7,-8,-1,7,-10,4,-9,6,-7,3,-2,8,8,-5,-2,-4,2,-10,-10,4,-3,3,-9,5,-7,-7,-1,-7,7,-7,-10,7,-2,-5,-5,2,9,9,-2,5,-1,10,-9,2,-10,6,2,2,-2,6,-7,-3,-4,6,7,7,6,-3,-4,-3,-3,-4,2,-9,-2,2,-3,-8,9,5,5,-7,9,8,-2,10,1,2,-10,10,8,-5,-8,10,-7,5,-6,5,-10,-1,-5,2,6,1,-7,-2,-4,-7,-10,-8,-1,10,-5,5,7,10,8,10,-5,4,4,6,4,8,2,2,-1,3,7,-1,-3,-6,2,8,7,-9,7,6,-9,-5,2,-4,-10,-9,4,-1,1,-1,3,8,1,-8,-3,10,-9,-4], dtype = "int8")#candidate|16020|(210,)|const|int8
call_16018 = func_1708_call(relay.reshape(var_16019.astype('int8'), []), relay.reshape(const_16020.astype('int8'), [15, 1, 14]), )
call_16021 = func_1708_call(relay.reshape(var_16019.astype('int8'), []), relay.reshape(const_16020.astype('int8'), [15, 1, 14]), )
output = relay.Tuple([call_15974,call_16018,var_16019,const_16020,])
output2 = relay.Tuple([call_15975,call_16021,var_16019,const_16020,])
func_16036 = relay.Function([var_16019,], output)
mod['func_16036'] = func_16036
mod = relay.transform.InferType()(mod)
var_16037 = relay.var("var_16037", dtype = "int8", shape = ())#candidate|16037|()|var|int8
output = func_16036(var_16037)
func_16038 = relay.Function([var_16037], output)
mutated_mod['func_16038'] = func_16038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15116_call = mod.get_global_var('func_15116')
func_15118_call = mutated_mod.get_global_var('func_15118')
call_16057 = relay.TupleGetItem(func_15116_call(), 0)
call_16058 = relay.TupleGetItem(func_15118_call(), 0)
func_11987_call = mod.get_global_var('func_11987')
func_11991_call = mutated_mod.get_global_var('func_11991')
call_16060 = relay.TupleGetItem(func_11987_call(relay.reshape(call_16057.astype('float64'), [5, 4, 7]), relay.reshape(call_16057.astype('float64'), [5, 4, 7]), ), 1)
call_16061 = relay.TupleGetItem(func_11991_call(relay.reshape(call_16057.astype('float64'), [5, 4, 7]), relay.reshape(call_16057.astype('float64'), [5, 4, 7]), ), 1)
output = relay.Tuple([call_16057,call_16060,])
output2 = relay.Tuple([call_16058,call_16061,])
func_16074 = relay.Function([], output)
mod['func_16074'] = func_16074
mod = relay.transform.InferType()(mod)
output = func_16074()
func_16075 = relay.Function([], output)
mutated_mod['func_16075'] = func_16075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10095_call = mod.get_global_var('func_10095')
func_10096_call = mutated_mod.get_global_var('func_10096')
call_16093 = func_10095_call()
call_16094 = func_10095_call()
func_13666_call = mod.get_global_var('func_13666')
func_13668_call = mutated_mod.get_global_var('func_13668')
call_16116 = relay.TupleGetItem(func_13666_call(), 0)
call_16117 = relay.TupleGetItem(func_13668_call(), 0)
func_12590_call = mod.get_global_var('func_12590')
func_12596_call = mutated_mod.get_global_var('func_12596')
const_16139 = relay.const([6.694393,8.844727,-0.779442,2.107266,2.720062,2.125322,-4.625065,-7.154114,-3.785794,-6.458493,4.352795,3.855892,-9.816378,-5.838017,-2.668818,7.468069,-3.070174,-0.846784,3.232369,-5.145588,9.217023,-0.080859,-9.213785,-2.867248,0.349889,6.211597,1.409933,4.652333,0.676828,5.774683,2.925618,2.927766,-2.797024,3.624646,-3.134396,-8.588302,9.975635,0.376327,2.494819,-8.049881,-8.021170,-6.119240,2.247583,2.493051,3.951480,-6.007159,-5.877653,7.773385,3.277341,-5.493339,-2.735623,0.917862,3.423651,9.782533,-4.538287,2.997509,2.569241,4.110330,0.359637,-5.367210,7.632322,6.898113,-2.384728,-0.500494,6.759800,8.012179,-7.544375,8.018344,1.934409,-0.821292,6.736867,-8.280483], dtype = "float32")#candidate|16139|(72,)|const|float32
const_16140 = relay.const(False, dtype = "bool")#candidate|16140|()|const|bool
const_16141 = relay.const([[-6],[8],[-7],[9],[1],[5],[-9],[6],[4],[-8],[-6],[-7],[-8],[-6],[10],[5],[-6],[-7]], dtype = "uint64")#candidate|16141|(18, 1)|const|uint64
const_16142 = relay.const([-8,9,6,6,10,2,3,4,-10,-4,-3,-2,-8,3,-3,3,-9,-5,-2,9,-1,1,2,-3,-10,-1,-1,5,-3,-7,3,8,-6,-8,-3,2,1,7,1,-6,-7,7,-9,-9,9,1,-10,3,-1,4,-10,-6,-2,-6,5,5,8,1,-2,-2,-8,2,-1,2,6,3,-4,10,-4,-8,-8,-10,-3,-6,3,6,2,-7,-3,-4,-9,-6,8,9,-2,-2,8,-7,-4,7,-10,9,9,4,7,2,4,8,-5,5,-2,10,-2,-2,-9,-4,-2,-2,8,-4,3,-2,-3,1,7,-5,-5,-10,1,3,-3,-10,9,7,-7,4,-6,-9,7,4,5,5,-6,9,9,7,9,8,-9,-5,7,-6,-6,-9,-4,6,-6,-1,8,-8,-2,-10,2,10,4,-8,5,-1,1,-3,-4,-6,2,3,-9,-6,5,1,5,-1,-7,9,4,-4,-1,-2,7,-7,7,-8,10,5,-9,7,10,-4,-6,10,4,-5,-2,-2,-6,10,1,-8,-2,-10,-1,-7,-4,7,-4,10,-10,3,-5,-1,-5,2,8,9,-5,3,6,5,2,2,1,-4,-8,-3,3,3,4,6,-7,4,-5,-6,-8,1,-6,-8,4,8,-10,-6,-6,4,6,3,-6,5,-3,-10,-5,3,-5,-8,2,2,8,8,9,-5,-2,10,5,-7,10,9,2,7,-2,4,-3,-7,-4,-5], dtype = "uint64")#candidate|16142|(270,)|const|uint64
call_16138 = relay.TupleGetItem(func_12590_call(relay.reshape(const_16139.astype('float32'), [36, 2]), relay.reshape(const_16140.astype('bool'), []), relay.reshape(const_16141.astype('uint64'), [18, 1]), relay.reshape(const_16142.astype('uint64'), [18, 15]), ), 0)
call_16143 = relay.TupleGetItem(func_12596_call(relay.reshape(const_16139.astype('float32'), [36, 2]), relay.reshape(const_16140.astype('bool'), []), relay.reshape(const_16141.astype('uint64'), [18, 1]), relay.reshape(const_16142.astype('uint64'), [18, 15]), ), 0)
func_6144_call = mod.get_global_var('func_6144')
func_6148_call = mutated_mod.get_global_var('func_6148')
const_16149 = relay.const([4,5,-7,8,10,5,-10,7,-7,3,-6,3,-5,-5,6,7,7,3,-4,4,-7,-6,-3,-2,3,-2,-8,-2,-8,2,-7,5,2,8,9,10,10,-4,8,-3,3,9,-4,4,10,-5,4,10,8,-2,9,-2,7,-2,-1,-5,2,-6,6,8,6,4,-3,-8,2,5,-3,8,2,4,-7,-10,4,5,7,-8,9,7,-6,-3,6,-10,7,-6,10,-6,8,5,-1,-3,-6,-3,5,-6,-4,9,-9,6,9,-4,-3,-5,6,4,10,8,-10,-10,-1,-4,-7,5,-4,-9,5,3,6,1,-5,1,-2,-1,4,-7,-8,-9,6,1,7,6,-5,-9,4,-5,5,-4,9,-1,-7,-7,9,-1,2,-6,2,-2,-10,10,-3,5,-2,-6,6,-1,6,-9,-6,2,4,6,2,3,-8,-6,-7,-8,-9,10,-4,10,1,-4,2,4,6,2,-7,-7,-9,6,3,-4,2,10,7,5,9,-4,7,-9,-5,8,7,8,10,1,-2,8,3,8,-7,-7,-2,1,6,-2,-10,-6,6,4,-8,9,-4,-1,-4,4,-4,2,-1,-7,3,-1,-8,2,10,9,-3,-7,-5,1,-1,-3,-7,1,7,6,-7,-5,-3,-10,2,-1,2,-1,10,8,-8,-6,-7,-4,7,6,-8,-1,-5,6,-2,4,8,-1,-7,10,2,-10,-3,5,4,-3,10,5,-5,-5,-9,1,4,6,2,7,-9,3,3,3,-9,2,-2,-7,8,-4,-2,-4,8,10,-3,-2,-5,-8,6,6,10,7,2,9,-7,-7,-7,-5,-1,4,1,-6,-4,-5,-8,6,-6,9,8,-10,-10,-3,-9,3,5,-2,5,5,4,8,10,9,-8,5,-6,-10,-3,-5,-3,-10,6,-7,4,8,1,-2,-3,-8,-1,8,8,-4,-3,3,7,-6,-9,-4,4,-3,-2,-5,-9,-8,6,8,6,-6,2,6,-5,6,5,9,4,2,8,-2,10,7,-6,1,8,-8,7,2,6,7,10,9,-9,-1,-10,-6,-1,-8,8,6,5,8,9,3,10,9,8,-3,10,-6,6,-3,-4,3,-10,-10,6,6,-10,3,1,-9,1,-5,-7,-3,2,-10,-7,-8,4,2,8,7,7,9,3,4,-1,5,10,8,4,-6,-1,-7,-4,6,5,9,3,-9,-5,8,-1,-3,1,-3,-9,7,5,6,-3,1,-4,-9,10,3,10,-1,-6,-4,-8,-3,5,-9,-4,-2,-7,-4,-7,10,-10,3,4,-2,10,7,-2,5,8,10,8,8,6,8,4,9,9,-5,7,1,-3,5,9,-3,-5,9,-6,1,-9,-5,7,9,7,-10,3,-2,-2,-4,-7,7,1,-5,5,8,5,8,-7,-9,-1,9,-10,2,5,10,2,-4,-5,9,5,5,9,3,10,-2,-8,-7,-9,-10,-7,-8,10,-4,-1,9,8,-7,7,5,-1,-10,-8,-9,8,-3,2,5,-3,8,-10,1,3,9,7,7,2,7,4,7,5,-8,1,-8,-2,10,5,2,-9,-8,-4,2,-4,-6,-5,4,-4,7,-6,2,3,-2,1,-10,4,7,-5,-3,-10,-9,3,6,-6,3,-10,-1,-6,5,6,8,-3,7,-5,-9,1,-9,1,-4,-8,10,1,-3,4,-4,1,-8,8,2,-8,-8,9,5,-5,-9,-5,3,2,-3,-1,-5,-9,-7,-10,10,-10,-9,8,-2,-3,7,2,4,-5,-10,-3,9,10,9,-2,10,-9,-2,-6,-3,-7,-9,-2,3,-9,2,-8,4,-6,1,-3,-2,1,3,-10,6,-7,-6,-9,4,4,2,8,1,10,-2,3,7,-9,3,7,5,-6,2,-2,3,-4,-7,2,8,9,5,5,-8,-2,-2,-2,-10,-9,-4,-9,-6,-4,7,10,6,-7,-3,-2,-5,-4,1,5,4,6,-5,-5,-9,-4,2,4,-7,-10,-1,3,-7,2,-5,-1,-3,5,3,-10,8,9,-10,-10,3,-7,-2,-10,-9,9,1,1,9,3,7,-4,-7,-4,7,-4,-6,5,-3,-9,9,-4,-7,6,2,-6,1,3,5,7,-5,-10,-1,-1,2,-5,-7,1,6,10,5,9,7,5,1,-2,2,5,9,-8,-5,1,-3,-6,10,-1,5,2,-1,-4,9,-7,1,4,8,-2,6,7,-8,10,-10,-6,10,8,6,-2,-1,-8,10,4,-6,5,4,1,4,1,-2,-10,4,4,2,-7,-4,5,8,4,-10,4,-10,5,6,-9,-10,1,-8,3,10,3,4,-9,-1,-6,1,-2,-5,-4,-2,1,1,7,-8,9,2,-3,-2,-1,-5,-4,7,7,5,-4,4,1,1,7,2,-9,-8,3,5,4,8,-6,8,-6,-7,-1,10,-8,-4,10,1,-10,-4,-2,4,-8,-8,9,8,-10,-8,7,7,-8,-10,-4,-10,1,-7,2,9,-6,-2,2,10,6,4,-5,9,-9,4,10,-10,-7,-4,-8,6,-1,-7,-2,-6,5,2,-9,3,-9,-3,-10,-2,10,3,10,-2,-2,7,-7,10,10,-2,-2,9,4,2,5,-1,9,-2,7,-1,4,1,-10,-3,-5,-1,2,10,-10,-9,4,9,-6,-2,5,-2,-3,8,3,4,-6,7,-3,-5,-7,9,6,5,-6,-7,-4,10,9,1,-9,2,-9,5,-3,-6,-5,-2,-2,-5,5,1,-10,-5,9,2,10,-5,-10,1,-9,4,4,6,-2,-4,4,6,-8,-2,-6,5,8,-5,10,-4,4,2,-5,-2,1,5,3,7,2,-8,-4,4,-5,-10,6,-4,1,8,6,4,8,-3,1,-4,-1,-1,7,5,-6,-5,-9,5,-4,-8,1,-8,-1,1,2,5,8,-6,-3,5,8,-4,-10,8,9,4,8,-2,4,-3,9,-10,5,-3,1,-8,9,-7,-2,-3,-1,-3,-1,-1,10,-3,-1,-7,-3,5,-8,2,-6,6,-1,10,-8,-2,10,5,-7,-9,5,5,4,-9,-4,10,7,-9,-5,-4,-4,1,2,-1,8,7,6,1,-5,-2,1,-10,-8,-1,-10,7,1,-5,7,2,-8,9,5,3,10,9,-7,-4,-8,9,7,-9,5,-1,-1,-8,-4,-2,6,-8,-1,10,4,7,8,-9,4,-5,-1,1,-1,-3,-3,3,10,-6,8,3,9,-3,5,-1,-9,8,-3,4,-6,-9,3,8,5,6,-9,5,-8,4,10,2,4,-1,-7,-10,-3,-9,3,10,3,-1,-7,-2,-5,-8,-4,8,8,-4,6,7,-5,8,6,-7,-5,1,5,9,-10,6,-7,1,-6,2,8,-3,-8,10,10,4,6,-9,9,-2,5,4,-4,9,9,-2,-5,-2,6,8,1,-3,-9,9,-10,-8,1,-9,8,-5,-3,6,1,-10,1,-5,4,-1,-8,-3,-1,5,5,-7,6,-10,10,-7,-5,8,-9,-10,8,-7,4,-9,3,9,10,10,1,-4,-9,9,-2,-2,1,5,5,-8,-4,-8,-10,4,4,-7,6,-3,4,9,-3,8,-4,5,-7,-10,1,5,-4,3,-2,4,-2,3,1,6,2,9,-9,5,7,-6,-5,10,-1,-9,1,-3,10,-1,-7,-6,10,-4,8,-6,7,3,-4,-1,-4,-10,-2,2,-10,-3,-1,-7,-4,2,10,-9,10,9,5,-1,-8,7,-5,-4,-1,1,7,3,-8,-5,2,7,6,-6,-4,1,9,4,5,8,-4,-8,-8,2,7,-6,1,-1,-9,-7,5,7,-4,-7,-10,8,7,-4,-8,-2,-6,-2,-2,-2,-9,4,-7,-9,3,-3,-2,-8,7,-3,-2,10,5,-3,-6,-10,5,10,-6,-6,-4,5,-2,-4,-6,-3,-3,-4,-8,7,-3,-10,2,4,-8,8,-1,-7,-5,1,-9,-8,1,5,9,3,9,-4,-1,9,-9,1,-10,-5,1,-4,2,5,6,-3,1,8,-7,-1,1,10,-6,1,1,-1,-2,5,9,-7,9,9,-6,-2,-1,3,-4,1,-6,-8,-8,9,5,4,-5,8,-1,-6,8,-9,-10,9,5,-5,-4,-8,-1,-10,3,2,-5,10,1,-2,-3,-8,-1,-6,-8,-7,-4,-3,-2,-3,7,10,8,-7,-7,8,9,-2,2,9,9,-2,-9,-9,-10,-5,-10,10,-9,8,7,6,1,-8,-8,-5,-1,3,4,2,-4,2,3,1,8,-8,5,-10,-3,-1,5,1,5,-7,-4,4,9,-10,-5,-4,10,7,-7,-2,-5,-3,-9,6,8,4,6,2,1,8,4,-8,-4,-10,3,-3,-4,-1,-5,-6,2,-7,-7,4,2,3,-1,-2,9,-10,-3,3,1,10,-10,-1,8,3,-8,1,-6,-7,7,-6,1,-9,8,2,5,-7,8,-9,5,-2,-8,2,9,-3,-9,3,2,2,3,3,-6,4,6,2,7,4,-7,9,6,-2,-10,2,-8,-6,-10,10,-7,2,10,-7,-8,-4,9,-2,-7,7,1,1,-6,2,-6,-2,9,-8,-5,-7,8,-7,7,2,-6,-3,-10,6,-1,-2,3,2,7,4,-7,-5,4,-3,-3,-5,4,6,2,10,2,-2,5,8,6,-3,3,-9,2,-8,-5,-4,10,-2,1,8,3,10,-6,7,-10,-4,-8,4,2,-7,-6,7,10,-10,1,-8,-10,2,7,-9,-2,2,5,-2,-7,-6,-9,-10,-2,1,10,8,8,-5,9,-1,-6,-3,-10,-8,1,1,6,-8,-2,2,10,2,-9,-10,3,-1,6,-10,6,-5,-3,-8,8,9,-7,-1,-10,5,-10,-2,-8,-3,-7,-3,2,-2,4,4,-6,-1,-4,9,3,-7,-9,-7,-2,-3,3,3,-4,10,5,-10,-9,-5,1,-10,8,-1,-6,5,-9,6,6,9,4,-8,3,1,6,6,-10,4,-4,6,-3,8,1,8,-5,7,-4,10,2,-3,9,-8,6,8,8,1,-7,7,-7,7,-2,3,1,7,-9,4,10,7,-7,-7,9,8,1,5,-2,9,-1,10,-10,-5,-7,-6,-2,-2,-8,-4,1,4,-9,7,3,5,-2,6,-4,-2,-10,10,3,-1,-3,7,-8,5,10,-1,9,9,-5,-7,5,-1,-8,-9,3,2,-6,1,10,1,7,4,-2,-9,-9,-7,6,1,9,4,1,-1,5,-1,7,4,6,9,-3,4,-7,-8,8,-8,1,-2,-10,-1,4,-9,-4,4,2,-9,-6,-7,-1,-7,-6,8,6,2,-1,-2,-5,-8,5,2,-7,-4,-1,5,8,2,4,-1,-10,-10,-8,-7,-3,-5,-7,6,7,7,1,-3,-2,2,5,-10,-8,5,3,10,-7,4,1,9,2,-7,6,1,-5,7,6,-4,-10,-2,-10,-8,-7,-2,4,6,7,-8,-3,4,2,7,-1,-4,-9,1,-9,8,-3,4,-2,-3,6,-4,10,9,9,2,9,8,-4,-7,10,-9,-6,10,3,-8,3,-8,-10,-5,-4,-9,-4,-1,10,3,3,-2,-5,8,-8,-7,-10,3,3,-1,8,-10,-8,3,10,9,10,-4,-6,2,-1,-4,-5,1,9,-5,-1,-9,7,-9,10,10,-9,-4,9,10,9,10,-3,4,-2,-8,5,4,-1,-6,-10,10,1,6,-4,-9,-2,-6,8,6,-8,-3,-4,-4,-9,-6,9,10,-4,9,5,-10,6,2,6,6,-2,7,-5,1,-3,6,-4,1,5,7,-7,6,1,-7,-6,10,-3,6,-2,-3,5,-7,6,-9,8,-2,1,10,6,10,2,3,-9,-3,-5,5,8,9,2,6,1,6,-7,-5,-4,6,7,1,-8,6,-3,-1,7,-6,7,-8,1,2,8,3,-4,-8,-8,-6,3,8,-7,8,1,10,7,8,-1,8,-10,1,-9,7,-10,-4,7,1,-2,-7,-3,3,-6,-10,1,-6,8,-5,8,4,6,-3,9,8,-2,-6,-3,-5,-10,-6,4,10,-9,8,-10,9,10,9,-5,5,-4,-2,-2,6,1,-10,5,-6,-6,4,-7,-2,-5,10,-9,-7,8,10,4,9,-9,2,-1,-10,5,5,-7,10,-7,1,-5,-9,-6,2,-6,-9,10,-10,-2,-9,4,-8,8,-4,10,1,4,8,-10,1,-1,-2,4,3,-2,-2,4,-9,9,9,9,-7,-1,-2,-7,-6,3,-1,-2,4,7,-4,7,-7,-7,8,-6,8,1,-8,-2,7,4,4,-4,-4,4,6,-1,8,7,5,-8,-3,-2,-7,7,10,4,1,-4,-1,-3,10,9,-2,-3,-2,-8,1,-7,-4,4,8,-2,8,-2,-6,7,8,3,4,7,-8,10,6,-10,2,6,2,6,6,10,-4,-6,-2,-4,-9,-2,-5,8,10,4,2,9,-10,3,-7,-5,-9,-5,4,-7,10,9,2,9,-3,-1,4,8,-8,-9,-3,6,-7,-1,2,-1,-7,-10,-6,-10,-1,-6,4,-9,5,5,-2,10,-6,8,10,10,10,8,-8,-6,1,6,-8,-8,-4,-10,6,8,10,-1,5,-10,1,2,-6,2,2,5,-6,-2,-5,-9,-4,-4,10,5,-7,4,-2,-1,5,-10,-3,7,-7,10,-5,5,-3,-4,-4,-2,-5,-1,1,9,-7,-4,-3,8,4,-2,-6,-6,5,3,10,-10,-2,-4,-5,10,2,-2,7,-3,-9,-7,1,3,-5,5,2,2,8,-6,1,-7,-1,5,9,8,4,-1,1,3,2,3,5,7,-3,8,-2,6,4,-1,3,8,-9,4,-5,-7,-5,1,6,-3,3,-5,-8,6,2,4,-1,3,-3,9,4,-5,6,6,3,3,5,-1,-6,-7,-8,-6,-5,-6,-5,-8,-1,-5,8,1,5,9,9,-6,-7,-7,-6,-4,1,-1,7,3,-4,-6,-4,-6,-10,-10,5,6,-9,-6,6,-5,-2,-1,-8,6,7,-4,9,-7,-7,8,2,-5,-8,3,-1,-1,7,-1,-10,-6,-10,-5,2,-10,10,-10,-3,-3,-6,-5,7,1,9,10,2,4,8,-3,-3,1,10,-6,-6,5,5,10,-7,-9,-4,8,7,-10,-3,-9,-5,-2,2,9,8,2,6,-7,-5,-1,-5,7,-1,9,9,2,8,10,-3,10,4,5,5,1,8,1,1,7,6,-7,6,10,5,-6,10,8,-7,4,-4,-2,-8,-6,-10,10,9,-2,9,8,3,-4,9,6,4,-8,6,-3,-10,3,1,7,-5,4,-2,-9,8,7,-5,5,-5,-10,-10,5,-1,3,4,-2,10,4,-10,-4,-6,8,-4,-1,-6,9,-3,8,-5,-3,-1,-7,-3,-1,-3,3,-4,9,6,6,-2,-7,-1,8,-6,-4,-8,-5,1,-1,-1,-4,-7,-6,4,4,6,2,8,3,10,10,8,6,3,6,6,-10,2,6,7,3,-3,3,2,5,3,2,1,3,-9,-10,6,8,6,-5,3,-10,-2,8,-1,7,-8,-7,7,3,-6,1,-2,3,10,-5,-5,-1,-10,-2,4,4,8,-3,1,3,10,1,-10,2,-2,6,3,-6,-8,1,8,6,-7,5,6,7,-1,-7,-3,-4,9,-4,-7,5,-1,-1,-2,-6,-7,-8,6,-10,4,-9,-10,3,3,2,-2,-9,-3,-9,-9,-5,6,1,1,-1,9,-3,5,8,7,-9,-5,9,9,3,5,-4,3,4,-7,8,-9,4,-9,3,2,-3,10,-5,2], dtype = "int32")#candidate|16149|(2912,)|const|int32
call_16148 = relay.TupleGetItem(func_6144_call(relay.reshape(const_16149.astype('int32'), [13, 14, 16]), relay.reshape(const_16149.astype('int32'), [13, 14, 16]), ), 2)
call_16150 = relay.TupleGetItem(func_6148_call(relay.reshape(const_16149.astype('int32'), [13, 14, 16]), relay.reshape(const_16149.astype('int32'), [13, 14, 16]), ), 2)
func_13838_call = mod.get_global_var('func_13838')
func_13842_call = mutated_mod.get_global_var('func_13842')
var_16153 = relay.var("var_16153", dtype = "float32", shape = (40,))#candidate|16153|(40,)|var|float32
call_16152 = relay.TupleGetItem(func_13838_call(relay.reshape(const_16140.astype('float32'), []), relay.reshape(var_16153.astype('float32'), [4, 10, 1]), relay.reshape(const_16141.astype('uint64'), [6, 3]), ), 0)
call_16154 = relay.TupleGetItem(func_13842_call(relay.reshape(const_16140.astype('float32'), []), relay.reshape(var_16153.astype('float32'), [4, 10, 1]), relay.reshape(const_16141.astype('uint64'), [6, 3]), ), 0)
output = relay.Tuple([call_16093,call_16116,call_16138,const_16139,const_16140,const_16141,const_16142,call_16148,const_16149,call_16152,var_16153,])
output2 = relay.Tuple([call_16094,call_16117,call_16143,const_16139,const_16140,const_16141,const_16142,call_16150,const_16149,call_16154,var_16153,])
func_16155 = relay.Function([var_16153,], output)
mod['func_16155'] = func_16155
mod = relay.transform.InferType()(mod)
var_16156 = relay.var("var_16156", dtype = "float32", shape = (40,))#candidate|16156|(40,)|var|float32
output = func_16155(var_16156)
func_16157 = relay.Function([var_16156], output)
mutated_mod['func_16157'] = func_16157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14001_call = mod.get_global_var('func_14001')
func_14002_call = mutated_mod.get_global_var('func_14002')
call_16196 = relay.TupleGetItem(func_14001_call(), 0)
call_16197 = relay.TupleGetItem(func_14002_call(), 0)
func_2703_call = mod.get_global_var('func_2703')
func_2707_call = mutated_mod.get_global_var('func_2707')
const_16201 = relay.const([2.590904,-6.394786,0.972381,-2.501476,-1.927042,-6.748111,8.447517,-5.820991,-6.182380,-9.361418,0.103204,8.108812,4.207226,7.943512,-5.962007,-3.379461,3.284965,-8.695358,0.466878,1.525300,-9.399822,-5.910703,1.660220,6.603336,9.924398,7.900782,0.599365,-4.633953,9.470779,6.374113,-0.117629,-1.693901,-1.660035,-2.355310,2.365473,2.656967,9.717621,4.446619,-1.528841,-7.640299,-1.740490,-1.411549,-0.865529,-8.319699,-5.701920,1.699518,2.579814,-9.094326,-2.742720,7.785884,0.417308,-5.901108,-8.019386,9.679347,-4.897722,-7.679830,6.864919,-5.890494,-0.191789,3.134491,-3.436334,2.760896,-7.407263,2.340932,-6.359940,-4.840966], dtype = "float32")#candidate|16201|(66,)|const|float32
const_16202 = relay.const([-4.181908,-4.500392,0.870122,1.266483,-1.853803,-7.302233,9.219209,4.187409,-2.177375,1.248524,0.631950,-9.990583,-1.711013,3.196014,8.555765,7.106024,5.952594,-5.295238,5.618121,6.797676,5.701170,-6.164442,0.078240,-7.488977,-2.670167,4.905473,-2.464451,6.714557,-4.799074,-4.826138,-8.188723,-9.063341,5.795189,-4.800698,-4.337605,-0.963665,2.072638,-1.884860,9.215541,-8.569452,1.699659,8.814674,2.343742,-1.291642,4.574020,1.267346,-1.237836,9.865505,-6.037350,-2.296579,9.207255,-7.336765,9.691000,7.194865,5.245993,-6.546279,1.823103,-4.663906,-3.236305,2.203918,9.066758,1.780045,-7.876874,-0.226833,-8.875737,4.827741,3.533317,-3.110753,5.191436,5.295067,-0.869268,4.423777,1.944234,-7.410401,-7.460639,6.698322,3.329314,6.725605,8.611293,-1.034988,4.978244,2.635030,-5.125689,3.021839,-7.616439,-5.591739,0.212770,-2.435152,-0.035265,-1.794483,-5.210624,-8.439250,7.119828,9.406844,8.762107,-3.380891,-3.362596,-7.488974,-3.542753,-5.739779,-7.570251,9.639527,-0.986277,1.921262,-8.453706,1.394062,1.981704,-4.676491,5.599556,-9.508548,-5.930251,6.364790,-4.693880,6.025655,-6.914038,6.717309,-0.873879,-5.355173,5.308883,9.551600,9.388884,-3.355829,7.211467,1.319783,3.745515,9.162857,8.981540,-5.476629,-7.333104,-8.181277,3.697290,-1.700525,-2.229582,-2.972634,-5.453214,6.943005,-7.141798,-1.475570,3.066120,-9.889603,0.400462,-1.888440,2.156198,7.957957,-4.412276,-5.958418,7.093903,3.053500,9.860648,5.497654,-7.937086,9.404738,5.016747,-6.683225,-5.750851,2.542550,-1.339945,-5.207823,-7.704670,-0.188449,2.215126,-5.679605,7.223983,-9.574254,8.530521,-1.088975,-5.664383,-2.223058,5.503385,-0.403311,3.864884,-2.596083,1.529258,6.478200,-4.774540,-6.395475,-5.180833,-3.772112,8.128404,-0.788394,6.354787,-5.554163,6.993566,3.618255,8.768891,-6.885378,1.439984,-6.417506,3.821996,-3.440345,2.093495,2.476458,0.322141,7.228940,-4.813097,5.922982,-2.926436,4.625154,-3.095138,2.440911,4.708256,-8.974790,-8.767177,6.454376,7.272970,0.299028,3.258049,-9.015826,-8.478882,0.494876,-4.303081,-9.590155,-9.139516,-0.972229,-2.010900,-6.446052,7.841517,-0.660393,5.928285,3.162580,0.580490,-3.191952,4.452502,9.042351,-0.078074,-6.757999,1.182642,-1.183783,-7.555344,-9.470013,-3.055480,-3.320479,-5.812985,1.563750,5.803455,-8.082222,0.492816,3.779136,3.275431,-7.409054,9.701610,-3.144425,-8.298531,-0.602989,0.432236,8.752626,1.590842,8.848087,7.135267,2.524326,7.641423,5.699115,-9.272485,2.525127,-7.221038,-4.258775,-6.756532,-3.968452,6.405404,-4.076402,-3.209919,-7.046797,4.849925,2.416528,-6.339854,9.502455,-7.618469,-3.834486,7.018959,-2.341038,2.995610,7.794263,-7.649237,-3.717182,-4.838915,-4.900177,2.930086,-1.473148,7.460078,3.995183,8.108914,8.862710,3.572888,-3.143547,-6.615864,-9.699865,5.340437,7.971882,-8.221054,8.151724,-0.546212,6.407963,-2.620228,7.557480,8.776883,5.038413,1.583621,-9.806518,-6.067373,-3.546129,8.823008,2.064245,-7.842372,-3.063467,-9.115595,-7.764829,-4.784007,-7.666518,5.958918,-0.504164,-6.633163,3.984557,-0.901968,4.232166,3.313825,2.661558,-0.185728,5.271508,-6.049880,1.309555,-9.948188,4.071089,1.268126,6.187418,0.805706,9.826822,-1.354749,-4.458231,-2.198613,2.937729], dtype = "float32")#candidate|16202|(330,)|const|float32
call_16200 = relay.TupleGetItem(func_2703_call(relay.reshape(const_16201.astype('float32'), [6, 11, 1]), relay.reshape(const_16202.astype('float32'), [6, 11, 5]), ), 2)
call_16203 = relay.TupleGetItem(func_2707_call(relay.reshape(const_16201.astype('float32'), [6, 11, 1]), relay.reshape(const_16202.astype('float32'), [6, 11, 5]), ), 2)
func_14285_call = mod.get_global_var('func_14285')
func_14288_call = mutated_mod.get_global_var('func_14288')
const_16206 = relay.const([[-8,-8,-6,10,5,-8,-2,-4,9,-1,6,-2,-7,4,-10,-6,-3,-5,-1,2,3,-2,-5,1,-6,2,-8,-7,-5,-5,-7,7,7,-2,-9,6,-4,-10,-7,-6,-5,7,3,2,-8,4,8,-7,3,7,4,5,-2,-1,-6,-3,5,6,-7,7,7,-1,3,2,-7,-8,-2,1,6,4,8,4,-9,-3,-1,10,-2,-3,-8,8,5,8,-9,-3,10,-8,7,4,-4,-2,7,-3,4,-3,10,-10,7,4,9,-2,7,9,-4,1,2,-3,9,8,-9,-8,2,5,5,7,7,5,9,-7,9,-1,3,-9,-7,6,8,8,-3,1,-4,-4,-8,-4,-10,-2,-3,9,-6,-10,5,-2,1,5,4,-2,4,1,2,9,-8,-3,3,-9,-10,3,-7,10,-6,10,1,-10,7,-7,9,-2,-8,-10,-9,-1,7,6,-2,2,3,9,5,1,1,2,5,-6,1,5,4,10,-3,-7,-7,2,-10,-4,-10,-8,4,-10,-4,-3,2,-6,5,10,-6,-2,6,3,-6,-3,-3,-7,1,-5,6,1,-5,8,6,-9,-7,-5,6,10,-6,-10,4,-3,7,-1,5,2,-10,1,8,-10,2,7,5,2,10,10,9,8,-3,-10,-10,2,3,-10,3,8,-7,-5,-4,-6,9,8,-3,-4,5,7,-6,-9,-2,2,9,3,6,-10,5,5,-6,-9,-9,-5,9,-2,-3,-6,8,-2,-1,-4,-3,9,4,9,7,9,5,10,8,-10,1,-3,5,7,-10,-3,5,10,-6,-9,9,8,-2,9,-10,-8,-5,3,8,-6,-1,1,10,7,-2,-8,-6,6,-7,-7,-4,-10,-10,10,3,8,4,-1,-3,-2,-7,-6,9,3,7,-2,9,-1,-5,6,-7,-5,4,-7,6,-9,-10,-8,-9,4,2,-8,-6,-9,1,2,-10,9,2,-10,-7,-3,-8,-5,-3,2,5,-6,2,-3,-1,-9,1,-4,5,-3,-6,9,-7,-10,5,6,5,-10,-5,8,-1,6,8,-7,7,5,-6,7,1,4,1,-8,9,-1,-5,10,-9,-8,-6,8,-2,-7,9,2,1,-10,3,9,7,6,-1,6,3,-5,-8,10,-7,-10,1,8,7,6,-5,-4,7,4,8,-9,5,-8,8,5,-7,6,7,1,2,-6,4,-1,1,8,7,-8,1,5,6,-7,-5,2,-6,5,-2,-7,8,5,5,-9,-1,5,3,-3,10,-3,-2,-6,-9,10,-10,6,-7,9,6,-2,-3,1,7,-6,-6,1,-5,8,-7,-3,-5,5,2,4,2,-7,5,2,3,-10,-8,-7,-9,4,5,-3,8,4,3,-10,-6,-9,-6,-2,10,6,-4,-8,-9,-8,-2,7,-2,10,9,-10,6,5,-2,-8,10,10,-8,6,3,-4,-9,-2,9,4,-1,-4,-8,6,-7,-4,-10,-10,5,8,4,-4,2,-1,8,-1,-2,6,4,-1,6,-8,2,-7,-6,6,8,2,-5,-2,-8,4,10,1,-3,4,8,8,-10,8,1,-7,-3,10,1,5,-5,-1,-10,-8,7,-2,2,6,6,-9,9,7,-4,-1,9,4,6,10,2,-9,-7,-7,-5,-2,-8,-2,-6,8,-6,-5,-7,-10,8,9,5,8,-2,-3,-9,-10,8,3,-10,4,-2,-2,9,1,1,7,1,10,-2,2,9,-8,3,3,-4,9,9,4,3,-5,-9,-10,8,4,4,3,8,-2,-3,-2,3,5,-5,10,-6,4,-7,-6,4,-7,5,-4,1,4,3,3,9,10,6,-4,4,6,2,-8,-1,5,-5,1,-4,-10,-10,5,-10,3,-4,6,5,-1,5,3,4,-4,-8,-5,-7,-9,7,-6,8,10,-8,-2,-10,10,-2,-1,-3,-7,7,5,-6,-1,-10,-9,6,-2,6,7,-7,-1,-2,-7,-5,-7,-8,-8,-9,-7,-4,7,6,2,3,9,-8,1,3,6,4,-2,-8,-5,7,-5,-10,1,-2,-9,-2,-5,9,10,-3,9,4,10,-2,-10,-8,-10,-7,-4,3,4,-2,-6,4,-2,-6,4,4,1,-8,-5,-6,-3,-7,2,10,5,-2,2,9,-2,-9,-5,10,-1,9,-3,2,-7,-4,-6,4,6,-4,-3,6,-8,-2,8,-8,-10,-4,1,-10,-4,7,9,-3,9,-7,10,10,6,10,-5,2,5,-8,-1,-3,5,7,5,-2,9,9,-1,-9,10,-3,-8,-10,-3,7,1,1,4,-1,-9,-3,2,-8,-8,4,-6,5,-3,5,7,10,-4,5,10,-6,1,-7,-9,10,4,7,2,-4,-9,1,-2,6,-5,-3,7,3,-9,2,7,-5,-5,-1,-6,-2,-3,-5,-7,3,1,4,-7,5,9,-4,-9,-9,3,1,-6,-8,-7,4,-3,-3,-4,2,8,-7,-5,7,-2,-8,8,-6,-2,3,-9],[-3,-5,7,-7,-1,4,-4,-9,-3,-9,5,8,-10,-10,-2,-2,-1,3,-6,-7,-7,-5,2,-4,-6,-5,10,6,6,3,-5,4,1,4,-10,-4,-3,-2,4,7,-8,-3,-8,6,-3,1,-5,-3,-4,4,9,-3,-9,-7,-10,3,9,-4,-4,-10,-3,-4,7,7,-8,5,8,-10,-4,10,-1,2,8,6,8,9,-6,10,-4,-5,7,-2,10,2,8,8,4,1,5,3,5,5,-9,-7,1,5,-1,-2,8,-7,-5,-10,-6,-2,10,6,-9,9,5,1,5,5,5,-1,3,-1,-6,9,2,4,-9,7,1,-8,-1,4,6,-4,-7,4,-6,10,6,3,-5,1,-5,-1,-6,3,-7,3,-6,-6,5,-5,-7,-10,-8,-10,-10,-6,1,1,8,3,3,-3,-5,2,-9,1,-5,6,4,6,-8,8,2,5,5,9,5,5,-9,2,-5,1,-3,-3,6,10,-4,3,10,-9,-7,-1,10,-6,6,-6,-10,2,7,-2,-7,-7,5,-10,-10,-9,7,3,7,-6,-5,5,9,-3,-3,9,9,2,8,8,8,6,7,-3,-7,9,-1,-9,2,-7,9,6,4,4,7,-9,-9,-2,-2,-3,2,-3,8,3,6,-6,8,4,7,3,10,-1,-4,-7,6,7,4,2,6,6,9,-8,2,-10,-10,7,4,-8,10,7,7,-5,6,5,-7,5,-2,7,-6,7,10,7,9,-2,-3,5,3,-3,1,2,-10,6,-1,-6,-9,-5,6,-3,-9,3,4,-2,-2,-7,-4,3,-7,3,-3,6,-3,-3,5,3,-2,6,8,4,-4,3,9,9,6,-3,3,2,-2,-7,10,-1,-8,-10,-6,6,-5,-7,4,2,9,2,-7,-10,-9,8,-8,-4,9,-3,-10,4,-8,2,8,-4,1,9,-10,1,-7,-9,-9,1,8,-2,3,-6,8,2,3,-2,-2,4,-1,1,5,3,4,-1,-10,-3,-10,1,-8,-3,9,-5,6,4,6,5,7,5,-4,8,-9,6,-9,-7,-9,9,-6,8,-6,7,-10,-5,-4,2,7,1,-10,-7,-3,-7,-5,-10,-1,-10,3,-10,4,1,6,-6,-3,8,6,-2,10,-1,4,-3,-2,-3,-4,9,8,4,5,-4,-8,10,8,5,1,-4,-9,-1,1,7,7,-1,-6,-7,-6,-7,-3,-10,-1,2,1,9,2,1,4,-9,4,3,7,-10,1,9,8,-9,-2,-1,5,-5,9,-10,-5,-3,-9,8,-8,-10,10,7,7,-7,4,-4,-9,6,4,-3,5,8,6,-9,-6,5,6,-6,-5,4,2,-2,6,10,-6,-8,1,-2,-2,1,-9,6,8,10,6,7,-3,-10,7,-10,-5,1,-6,4,5,10,4,1,7,-7,9,-2,3,3,1,2,-4,5,9,10,7,-9,-5,2,6,-6,3,7,-9,7,-6,10,-3,1,-4,-7,-10,-9,9,-10,3,7,-5,6,-5,-6,2,-10,-8,-9,4,3,-2,-1,-6,-5,-9,8,7,8,5,-4,7,-3,6,9,-8,4,-7,-3,7,3,-10,-8,5,10,7,8,-1,2,5,-7,-6,-6,-7,-7,7,-10,2,-4,3,8,10,-7,9,8,3,-6,8,3,1,2,1,-4,10,-10,4,5,4,-6,-1,6,2,4,-5,9,-6,-3,3,-10,5,-7,7,-6,-4,-5,-9,-1,-4,4,4,3,-4,-7,-6,-1,-6,-2,2,6,-2,-5,2,3,2,5,-1,-4,-7,-2,-7,-3,-5,7,-5,-5,4,10,-5,3,-10,-3,-9,8,9,8,-4,10,8,-7,10,1,-4,-1,-4,8,5,7,-8,9,-4,5,9,-7,1,-1,-8,5,3,-2,-10,-3,10,8,-4,7,-5,-7,-6,-3,-10,9,7,1,2,7,2,7,-9,-1,-4,-10,-1,-3,-1,5,1,1,-10,7,6,1,5,1,5,-6,10,-7,-5,7,5,9,-8,3,3,-7,8,-6,-10,-7,-8,-5,1,1,-10,-3,-2,2,-3,7,9,-2,4,9,4,8,-9,2,2,-7,6,9,2,-10,-8,-10,1,-3,-9,-6,8,-5,-4,8,-2,2,3,-6,5,-10,2,-10,-2,-5,-7,2,-4,4,-3,8,7,5,-1,9,-6,-9,-8,1,-5,-1,-9,10,1,3,-8,1,-9,7,7,6,-4,-4,-7,4,-3,-4,9,8,-6,6,-2,-1,-3,-2,4,-6,6,-5,-4,3,-4,-2,9,-5,-10,10,7,-6,-10,1,-8,-6,-6,7,10,9,-9,8,-2,-4,3,-6,-5,-1,1,-1,-8,5,-8,3,-4,-3,-3,10,6,-8,10,-9,8,-2,-1,-10,-1,-10,9,8,-6,-6,-2,6,10,8,10,5,-9,-7,-9,9,3,-1,-5,-6,10,1,8,-1,-1,-8,-8,9,9,8],[-2,-10,-8,-9,-9,-5,-7,-10,-4,-3,10,6,-4,5,-10,3,-10,8,3,-3,2,-9,4,4,-2,3,-10,-10,-3,-10,-8,6,6,-9,1,1,-2,2,2,4,-5,-6,5,9,-2,10,2,9,-9,-6,10,6,10,8,6,-5,-8,-5,-8,-10,5,-8,5,4,-6,6,10,6,4,1,5,-2,-9,-7,-3,-5,10,-5,3,-10,-2,2,2,3,3,5,-1,2,-4,-5,7,-5,-5,1,10,4,-10,7,6,8,-5,7,10,8,-10,10,4,4,6,7,9,-9,2,10,5,9,-1,-7,-8,4,7,5,1,-1,5,2,-1,-4,4,-1,2,-10,6,5,-2,10,-4,1,4,-2,-9,-4,5,1,2,2,-2,8,-10,10,1,-1,6,-2,-1,-9,1,1,1,-9,6,8,4,5,-10,-5,-8,-8,8,3,6,-2,-7,-7,6,1,7,-9,-7,6,3,10,10,4,-10,7,-2,5,1,6,-9,-1,-8,9,7,5,-9,-1,-3,-6,5,10,-4,5,-8,3,1,6,-4,-5,2,-3,4,-9,1,9,1,-3,6,-10,-2,2,9,-3,2,-6,-7,-5,-4,-8,-2,-3,6,-9,6,7,-6,-1,6,8,1,2,6,9,-2,7,5,10,-5,-4,-10,-1,1,-1,-6,-6,-4,7,6,10,-4,-3,-6,-2,5,6,-8,-2,-10,7,4,5,10,10,9,-3,6,3,2,-4,1,2,6,-10,9,-4,-9,-4,10,-6,-3,-1,-8,2,-8,-4,-4,-10,-2,-7,-6,-5,10,7,-3,-9,3,-7,4,8,8,3,-10,-4,-3,-3,-2,5,8,-3,4,-7,-2,7,-8,2,-7,-7,7,-7,-2,9,-9,-7,-8,-5,-2,9,-1,-4,1,2,-10,-7,10,-9,-6,-8,5,-1,-8,5,-1,6,3,10,5,-4,-10,-3,-6,-3,-1,9,-10,8,9,10,10,-3,-7,8,2,6,-4,-2,-9,5,10,5,4,-8,7,-4,-5,9,-7,-3,-9,-1,-5,-5,2,6,6,1,-7,3,-6,-10,-4,-2,-7,2,-3,-1,7,-7,-6,8,6,-1,8,-6,3,-7,6,7,-6,9,1,-10,-6,7,9,3,9,-8,-10,-3,-2,-9,4,2,-7,1,-1,-8,7,-8,-5,2,4,10,4,-6,-6,5,-3,1,-9,7,3,-8,1,7,-8,-9,-10,-8,-2,3,1,9,-6,-1,-3,7,-4,-6,-5,-2,-3,7,9,10,-2,-1,-2,5,1,2,-6,9,8,-6,8,5,-6,5,-8,9,9,-2,-10,-8,5,-4,3,-3,-7,-3,5,-6,-8,8,-7,7,5,-6,6,-6,6,-4,-3,7,3,5,-7,1,-2,-3,-6,-7,-10,7,-1,-9,-5,5,9,8,-3,2,-1,-5,-3,-6,-1,-1,-9,6,-5,6,-7,8,2,-8,6,-3,4,-4,10,-8,-2,-1,9,-1,-2,4,6,5,-7,-3,2,2,5,5,-5,-6,1,-7,3,-7,-5,-4,5,8,-2,-5,-6,2,-2,-9,-9,-3,10,-3,10,-10,2,-5,-5,7,4,4,10,3,3,10,-7,-4,-4,2,6,-8,-9,-5,6,2,5,-1,-9,8,8,-8,10,-2,9,-8,-9,5,-9,-10,4,6,5,-6,-4,10,2,-5,-10,-5,-4,-3,-1,-8,-9,-7,10,2,-1,-4,3,-6,-2,7,1,-8,-7,5,9,8,2,3,-9,9,-5,6,7,-3,5,8,4,-1,10,6,-9,-9,10,-3,7,8,3,10,-7,8,4,10,-3,-8,-6,2,1,-4,-3,9,-7,2,2,-1,-6,1,-4,-8,9,-9,2,-8,-5,3,1,8,8,9,3,-9,8,8,10,-8,4,3,1,9,8,-3,-4,7,2,-4,-8,5,2,8,9,-10,-3,9,6,9,-1,-1,5,9,-7,-4,5,-1,-3,6,2,7,8,-9,-5,8,-1,1,10,3,2,-2,-9,3,-1,3,6,1,5,8,-8,-4,-7,5,4,5,-7,2,-10,-7,-7,-6,-10,6,-7,-5,-3,6,-5,-9,10,6,1,-5,-4,-3,3,-3,6,-10,6,-8,6,10,6,2,-5,5,-6,-8,3,3,-1,-8,-6,8,4,10,1,-1,9,-4,2,2,-8,-10,2,-6,10,7,-2,7,-2,-6,-6,3,2,2,5,-4,4,5,-7,-6,4,-2,-10,-2,5,9,-5,-9,-8,-3,-4,-7,8,4,-4,4,-6,6,-5,-10,6,-2,-10,10,-1,-10,-7,-5,2,2,-2,5,3,5,10,10,5,-7,-4,-2,9,2,-2,10,-8,9,1,7,-5,-3,8,-1,7,7,-4,-6,4,8,7,-9,2,-5,1,-8,4,1,9,6,-9,-7,3,-7,-3,2,-5,-5,8,2,3,6,-5,1,9,10,-10,3,8,2]], dtype = "uint64")#candidate|16206|(3, 924)|const|uint64
const_16207 = relay.const([[7.435178,2.614270],[4.302098,-1.747171],[3.010304,1.257689],[9.707211,4.283384],[-0.720891,-0.498611],[-6.275863,-3.433061],[-8.384519,6.681429],[-3.389967,2.711276],[1.905930,-5.518505],[-6.812948,-4.323360],[-6.882309,9.713636],[-3.528552,-8.003335],[4.086277,-1.560055],[2.471331,1.054175],[-6.720769,-9.357363],[7.194854,-7.872320],[6.785830,-4.979556],[-2.999358,7.880552],[-1.793992,-5.538306],[5.185480,8.542726],[8.874116,-6.434378],[-2.219415,8.431860],[-8.022415,-9.144366],[8.768181,8.749514],[0.771035,-9.086389],[-9.972614,-0.233610],[-5.368286,7.523096],[1.999304,-0.961089],[-5.060170,-2.654681],[-1.807678,-7.225188],[2.489749,6.398550],[5.369761,7.442283],[-1.950916,-1.754557],[7.845552,3.400134],[-1.462155,3.920292],[-5.685400,-1.356416],[-4.489296,3.106920],[-7.601467,-0.386294],[-7.254261,-7.708656],[-5.586780,0.589019],[7.496421,8.001956],[-5.589121,6.258187],[7.903467,2.441363],[-6.160017,-2.136005],[-5.824134,-5.179471],[5.469955,-7.606136],[-8.800050,-6.851936],[4.156052,8.603142],[7.738042,8.895602],[5.774061,-1.046623],[-6.630998,-9.969464],[-7.786297,7.880042],[2.982511,9.327458],[-3.618523,-4.977282],[3.243297,8.951132],[-4.053095,4.539057],[9.334986,-5.205112],[0.358844,8.001606],[-4.646776,4.315643],[7.069063,4.120273],[-1.069727,9.381125],[-9.627417,8.657526],[-4.484127,-0.506307],[2.150960,9.732376],[6.979773,9.277472],[-6.431927,-8.515418],[5.996694,5.203754],[-8.392981,6.220039],[-6.191072,-1.099146],[-3.573140,-7.224586],[-9.002566,-1.208601],[-5.499855,3.175317],[1.328696,8.776724],[5.571275,-0.828058],[4.765585,5.268157],[-1.372185,-8.506924],[-3.968535,5.658552],[-3.955470,1.341042],[1.305586,-4.315637],[0.452435,2.274507],[-9.020413,1.342222],[-1.090983,-5.921532],[1.884102,3.865220],[-6.032636,-2.863406],[-8.003909,-2.111690],[6.183030,-5.382768],[4.357010,0.102701],[-2.526621,4.408939],[8.374931,-4.061779],[-3.714172,4.247775],[2.862052,1.079526],[-9.314995,-5.235406],[3.739594,4.898751],[-3.833849,0.362119],[-2.926102,7.177013],[8.030467,2.441997],[8.683992,-5.806771],[4.445213,7.488092],[1.331187,-1.765943],[4.479466,-4.481637],[2.476070,9.808587],[2.255102,4.761190],[7.443463,-0.704457],[2.471688,1.469842],[-4.351384,-5.779644],[3.763262,-5.822454],[-5.599301,-9.181134],[7.496853,9.948982],[-4.011848,-9.980475],[1.665674,9.769883],[-6.575946,-1.192895],[-9.993311,-9.294681],[4.091551,-1.620491],[6.376509,5.807608],[6.368545,6.549591],[7.404072,-8.785439],[3.041659,1.490097],[-7.671405,-9.552276],[3.276004,0.619241],[-7.121301,-6.664952],[-7.618384,1.169317],[8.682425,-8.977502],[-8.830643,2.573618],[-1.226333,-1.577505],[-2.368816,-8.242690],[-4.536596,-2.361147],[9.501701,9.770171],[8.869364,-6.941649],[-7.645454,5.598542],[-1.924328,0.181330],[7.547083,-5.093426],[-4.758201,-4.897906],[0.203360,9.171224],[6.687888,8.561785],[1.442190,-4.735722],[-1.807035,9.013990],[-2.668589,-0.849389],[-5.747892,-2.507918],[-2.546663,3.931171],[3.013034,3.007361],[-0.179784,-5.323144],[-6.622878,7.335045],[9.172350,6.153564],[-9.522053,-5.616846],[3.099769,8.717173],[-4.810808,-4.991847],[7.432563,8.101634],[8.277183,1.867671],[-3.899566,2.508813],[6.274355,-9.538941],[-5.118926,-8.247731],[-1.248704,-5.082915],[5.557702,4.456291],[1.708873,-2.564614],[7.299701,4.187863],[-1.183534,7.978733],[-6.600646,-4.875451],[4.844349,-4.648441],[-2.316071,-6.941925],[-2.711590,-1.457814],[-3.838920,1.659037],[5.467854,-6.932525],[-4.275686,2.031951],[-1.633921,2.944389],[7.038177,-9.388780],[-0.141633,7.255335],[7.276427,-6.937805],[-7.465975,6.710406],[-7.464640,-9.264343],[-1.184758,3.470316],[-4.516088,-8.337090],[5.958678,1.307680],[9.715647,5.358034],[4.035920,-8.064828],[-5.642786,-4.700020],[8.674139,8.863325],[-3.178805,-3.035613],[4.332810,9.395863],[-7.464259,-8.260442],[0.722625,0.470196],[-7.346026,3.973435],[9.383918,-4.250243],[-6.902847,-4.147785],[3.795148,6.302372],[4.196623,-6.902204],[9.765495,-0.636162],[2.132148,6.248365],[-6.917709,1.557564],[6.149388,-8.869501],[-1.162537,-5.961603],[9.473288,4.403498],[2.782961,3.472753],[-1.305307,4.894265],[5.858222,2.336718],[-4.657557,-1.512700],[6.716974,6.948867],[-0.644315,4.500776],[8.781571,5.141011],[-2.588209,3.366170],[6.769340,-4.771415],[-4.119577,-4.849451],[4.244768,7.055765],[-7.658928,2.228129],[1.472405,5.004173],[-2.533593,9.624144],[-2.168285,2.696817],[2.271330,-3.277989],[6.785153,-6.042984],[-1.492532,9.966659],[-4.109267,-8.651516],[-2.556011,6.701611],[-0.339991,9.663456],[1.077813,-1.078714],[0.608501,4.595033],[-0.777493,-7.055447],[-8.363162,-2.353816],[3.303218,8.655011],[-4.444531,-9.353531],[9.639355,-7.503458],[-9.587139,-3.981940],[-7.818290,-2.180088],[-1.183540,-0.731392],[6.642604,-1.828231],[8.903008,3.258732],[4.237264,0.495909],[-8.514451,-1.201355],[8.181790,7.290346],[6.637129,9.181765],[0.336333,9.625767],[7.235629,-8.790451],[-8.112902,7.786970],[8.760221,-4.772686],[2.799778,-0.899737],[-3.138794,6.763041],[-7.921897,0.052202],[-4.065711,8.513468],[-7.635518,-1.778695],[7.456939,9.975825],[5.451099,6.689072],[8.253034,8.603226],[5.150326,-5.015366],[4.188570,0.591099],[-6.500056,6.529346],[-6.617876,-1.198774],[6.840085,-2.720965],[-6.009162,4.402829],[-5.995494,-8.048257],[-6.479809,-8.311240],[-3.662991,6.106564],[-7.144722,3.096180],[-5.325381,-9.166198],[5.247774,4.646736],[3.022944,9.203001],[8.361622,2.910466],[-6.513535,9.061159],[-7.202651,-0.150328],[-5.989864,-4.598467],[0.266158,-0.713974],[-0.270022,-1.709697],[3.393491,-3.289185],[7.923556,-6.837501],[-9.159494,6.942396],[-3.315237,-0.094129],[-9.426392,4.782728],[-9.891832,-6.394035],[0.586981,8.311850],[4.154149,7.110735],[-6.555769,1.745726],[-3.474604,-4.619646],[3.122231,5.416916],[0.658458,-8.147218],[-3.770352,-7.304077],[3.978050,-0.155792],[5.599843,-9.134026],[9.379309,-5.862799],[-3.756308,-7.696412],[4.492199,1.081531],[-1.386194,-3.606877],[-5.265822,0.207385],[-6.885536,-5.341008],[-6.931881,-5.474233],[-2.078104,-8.495769],[9.412688,3.159278],[-9.679870,-7.155017],[1.363336,5.855216],[-4.319899,5.379001],[-4.767369,9.996864],[-6.165486,3.515654],[4.488647,6.893894],[-4.441314,7.035931],[-9.064295,5.943603],[-0.419138,-3.255494],[-7.065423,8.745618],[-2.435927,4.210082],[-1.014648,1.422990],[-3.284031,4.479350],[3.066830,-6.168291],[4.616828,2.197608],[-4.788554,-7.389910],[-8.552163,-7.385662],[-8.401483,0.001569],[-8.035651,-7.539541],[4.328260,-5.695185],[-5.708622,0.408187],[-9.120188,1.180763],[-9.183084,5.726697],[-0.954340,2.795224],[-0.875645,5.959356],[-6.466743,2.618543],[5.969508,9.164509],[-3.721996,9.655519],[5.041546,-0.116818],[-6.848513,1.416998],[-6.880684,7.273988],[6.058701,6.476330],[2.706791,-7.684566],[3.352433,-0.152012],[5.596019,0.435973],[7.459970,-5.036583],[-4.908614,-3.210169],[6.400105,6.600511],[-5.361754,-9.484360],[7.913348,-8.154239],[-6.557863,-7.343377],[-3.967195,-1.448760],[-2.464236,8.152161],[-7.589061,2.343628],[-6.586087,1.609833],[9.907964,6.323792],[-6.044351,2.513177],[7.239981,-5.017282],[2.267556,7.709371],[2.403264,6.980713],[-8.318390,-1.147539],[1.595943,8.305274],[3.903635,8.972112],[4.949002,0.907632],[-0.659057,5.225432],[-1.754198,7.678297],[8.261627,0.863955],[-2.366864,-2.216916],[-4.043771,-2.148209],[-0.044888,2.118648],[-9.148452,8.928025],[-8.258385,7.977678],[0.460788,-1.847649],[-6.344099,6.034723],[9.680855,3.307134],[-0.668438,-8.181426],[-8.090538,-1.160872],[-4.211347,-0.080642],[-9.151738,-6.231613],[-5.278725,3.097119],[-3.498937,2.881575],[4.234141,-9.571209],[-8.068010,-1.745508],[-8.933363,6.234730],[1.171550,1.650706],[1.522108,2.629434],[6.317714,-1.621396],[7.886921,-2.733064],[-2.093480,3.445913],[-8.730362,-6.032062],[1.676760,2.409810],[4.096476,-0.585742],[-1.491512,-8.919888],[9.307914,3.789628],[8.784865,9.226352],[1.486982,-7.526388],[4.561334,3.263412],[-9.740110,-8.896019],[7.889487,8.730876],[-7.896295,5.270041],[1.475114,6.052404],[1.840923,-8.817607],[-1.370962,-3.118142],[4.003499,2.187807],[-9.458481,-4.085745],[-6.810793,-1.436530],[8.993919,-4.573650],[1.904190,-5.448067],[1.693562,3.810806],[0.443032,3.329102],[7.060995,2.856435],[3.822442,-7.096207],[-3.024851,-8.094710],[4.167871,-4.358290],[-6.457669,8.210304],[-8.378499,-3.921814],[4.320692,6.622425],[7.486018,-1.476339],[-5.200775,6.409995],[0.451362,4.079434],[4.188560,-2.162385],[-4.907160,9.710791],[-2.244401,-8.054199],[-9.804466,-4.861523],[-4.013275,-2.102706],[3.303794,5.980916],[9.197699,4.284878],[-4.896205,-7.419734],[-2.273991,-6.249481],[3.732335,0.871209],[-2.239198,-0.493036],[-5.386017,-8.158835],[-6.868538,6.453064],[-6.840037,6.736726],[4.751824,-3.463017],[1.509861,0.633707],[6.425587,-8.869694],[6.164787,-6.955744],[6.816464,5.683890],[-8.319129,5.067996],[-5.236093,-8.757880],[6.438721,-7.731506],[-4.103355,-5.885441],[3.322109,1.263546],[3.806794,2.243080],[3.846305,3.668927],[1.942029,-7.472418],[-8.306030,-1.160965],[-8.065780,4.380936],[9.085760,1.675866],[-7.742743,0.873518],[6.257391,3.392482],[2.588609,-5.929240],[-4.832106,8.950514],[-1.243944,0.097998],[3.214793,5.289542],[-4.833937,5.510315],[2.451378,3.497224],[-7.927260,8.260426],[0.350435,3.868192],[-8.483409,1.213454],[2.281638,-9.978371],[3.336133,-8.763034],[3.755071,-4.265583],[7.287913,9.528301],[-1.473044,-8.736911],[-0.895584,4.515917],[-0.981763,-4.363094],[-2.504897,-9.699667],[-5.595859,6.442751],[-1.909414,3.183025],[1.545585,-6.396206],[9.438333,5.273696],[-8.442903,3.630141],[-8.395600,6.807271],[7.581841,1.569958],[1.409720,8.152111],[-6.896851,7.375113],[-3.415593,-8.911371],[0.976905,-4.519141],[4.329939,-3.914340],[-3.082123,-5.830589],[-0.706946,5.840126],[0.208858,0.063527],[-6.686721,-2.358223],[1.642792,-1.742756],[-3.409721,-1.667441],[4.201029,0.001470],[-3.415801,-5.955188],[9.183296,9.355051],[-6.591095,9.059028],[6.156351,5.782880],[3.200334,-6.627311],[2.339502,-8.631807],[-1.964996,1.864019],[-4.922302,-8.456558],[4.514637,0.930108],[5.148734,-1.808286],[2.363893,0.962121],[9.658859,2.392953],[-8.439032,4.098217],[-7.197587,-4.520278],[-0.532709,-6.011087],[-6.452230,-9.385418],[2.868693,-6.194249],[-5.049875,3.037669],[-2.181954,8.266707],[9.596767,-3.659177],[-6.956315,8.441323],[4.500774,3.858317],[-7.254713,-4.923680],[-8.568132,-1.240349],[-9.240063,-7.582467],[7.796168,6.572563],[-0.485430,3.640271],[6.241832,-6.333300],[-3.829073,-4.633631],[1.974224,4.557347],[5.891950,-3.905801],[-0.815014,2.656561],[6.678268,-9.345690],[8.394001,-4.531327],[-2.613153,0.112411],[8.445197,9.552695],[-3.267310,1.839107],[-6.092584,2.794078],[7.440180,1.871805],[-9.847454,-9.120048],[6.774669,-6.004118],[-7.068384,-3.584509],[6.006961,-0.895458],[8.066555,-1.652678],[0.731181,8.394454],[-1.742204,8.747529],[-5.769871,-0.215914],[-5.235741,-0.605342],[7.857336,-8.515440],[9.117041,-1.212316],[7.367863,7.808062],[-2.534900,-0.872073],[-9.401962,8.862662],[-5.075734,-6.840909],[-9.267920,2.640608],[1.032347,-8.091546],[-5.049536,4.497629],[9.234169,-1.292611],[-6.209194,-4.597848],[6.005958,8.900104],[-5.051011,4.488803],[1.059984,-6.983080],[-1.162995,-5.429376],[7.072029,-6.245528],[-9.143262,-3.423020],[8.589587,-3.067012],[-7.203844,-4.513240],[1.331701,1.575923],[8.396298,-7.340045],[-5.830233,-7.960209],[-9.004909,5.497061],[8.342052,0.250461],[4.049168,6.462899],[5.595638,-1.225185],[-8.382653,0.779964],[-8.421099,-8.117044],[2.092766,8.079189],[4.694667,-1.298857],[-0.768206,9.583434],[8.881760,3.410320],[-9.414602,2.625618],[-1.736065,-1.576129],[3.444063,-8.942196],[-8.988162,7.797600],[0.440143,-6.157931],[-0.349198,-3.315119],[-9.493426,-5.520697],[9.551438,-5.218394],[-5.160411,1.787966],[0.896987,-1.158402],[3.135277,3.741673],[9.269706,-3.888997],[1.220046,1.995880],[6.318044,-9.250758],[2.309933,-9.236136],[9.990333,9.547204],[-4.512728,-7.825952],[-4.615116,-8.509813],[-5.843046,6.934155],[-6.708071,-8.588261],[-4.112099,9.142150],[-6.741276,2.599148],[-7.590895,-3.817978],[-3.463797,-4.031418],[-4.298613,8.129909],[5.047828,-8.036454],[7.347230,0.934338],[6.667827,7.109062],[5.945870,-9.288371],[-6.873339,4.258414],[8.029382,-1.717697],[9.438799,-8.822627],[-7.711482,-6.697770],[-3.765656,1.807945],[8.156222,9.847725],[-7.825488,-4.005987],[-9.263044,7.671080],[9.048148,9.784879],[-6.931857,-7.587130],[-3.174955,5.768544],[-1.587773,-5.198095],[6.949473,-6.135046],[-5.544076,5.531686],[-1.208113,-2.187433],[-2.405867,-9.259852],[2.854729,-9.996270],[4.696123,7.018568],[-2.215112,-5.332389],[4.993255,7.639931],[-0.615292,8.028761],[5.439758,-4.421144],[-5.841628,-4.621636],[-9.794095,-9.828446],[9.099810,-4.779520],[-1.219115,-7.283767],[-0.079200,0.513234],[-2.711760,-5.946824],[4.160765,9.035135],[8.327053,-8.687501],[9.512997,-6.587112],[2.882765,0.218543],[-0.410330,-0.809094],[2.333971,1.131038],[3.677682,3.952206],[3.460261,8.149671],[0.891266,2.286547],[-8.913288,4.704038],[6.403056,2.394565],[-0.821377,5.271988],[-8.813035,7.701318],[-3.783437,-1.456462],[-1.905906,1.959762],[8.893443,-0.562747],[-8.699981,5.041273],[0.479373,-0.131386],[6.052911,-4.071446],[-2.414866,-4.757848],[0.360678,-3.386648],[-2.136505,6.898123],[2.585216,-3.024728],[7.422891,7.423461],[-2.541883,-2.533295],[1.360744,-6.742681],[8.791353,5.121024],[-2.637916,-8.408312],[3.913690,-1.604742],[7.825394,-5.600076],[-0.550715,-3.867631],[7.376110,1.654306],[-7.205781,-2.572080],[-0.995211,-9.485305],[5.508553,1.022764],[5.607795,2.759454],[8.769194,-2.966706],[2.550616,4.798920],[1.780346,-7.264249],[6.552105,8.900458],[1.994399,-4.459259],[-3.364755,7.435255],[-3.144495,-3.989953],[6.026632,-6.453807],[9.022441,7.162927],[-4.899986,-0.680817],[-0.937505,-9.492314],[0.148568,-3.982276],[6.372492,-8.923402],[7.291207,1.831768],[9.254680,-4.715652],[8.829068,6.233463],[3.309879,-0.644066],[5.959423,-5.398054],[3.367566,6.125429],[-4.078983,3.539025],[-0.482456,5.198109],[-4.704582,3.872691],[-9.007122,-9.710435],[6.076896,-3.957145],[-0.316316,-9.762897],[-2.789456,-0.729737],[9.982949,-8.006860],[2.451290,-1.909640],[3.215833,3.464007],[-5.887355,2.808435],[-1.399348,0.519616],[4.376153,3.242848],[-3.121464,5.598539],[-7.068256,-3.038799],[-8.962787,9.614839],[-3.072754,2.098358],[9.574089,1.915966],[-8.394016,6.915630],[-8.325600,-1.173912],[-3.978899,-0.522817],[4.308614,3.733317],[7.219204,1.182540],[-3.266567,0.093869],[-2.735854,3.932291],[7.343794,-5.533299],[9.312761,8.783117],[-2.567269,-2.531665],[7.497028,4.074736],[-0.450085,-2.483262],[-9.741413,2.154910],[-9.935544,1.765268],[-5.630074,-7.188089],[-2.186924,0.676570],[-0.108215,1.178403],[-4.813289,-0.075738],[-5.503408,-4.323363],[-1.633620,-9.307557],[-9.480513,-5.853190],[-0.211192,-0.402306],[-7.617307,4.019261],[1.725982,-2.342959],[7.689002,-5.841099],[4.799186,9.235979],[-9.658966,2.077076],[-7.549693,7.094585],[6.803665,7.387619],[3.690266,-2.704750],[-9.594734,-6.642784],[-6.095736,-1.173778],[9.269602,4.026325],[5.619643,-6.762553],[-9.242437,-2.730211],[-0.343922,-9.308927],[7.753615,9.865085],[3.144957,-5.523328],[1.370692,6.794985],[-2.555511,0.994782],[-1.330628,-1.626216],[9.995978,1.018473],[-5.524395,-5.498344],[3.529735,7.053358],[-8.386290,8.129580],[-9.927974,-5.273943],[9.313534,-5.406406],[7.078684,3.698035],[-9.952432,0.253037],[-5.024200,-4.122735],[-3.398844,4.450701],[8.174421,2.928259],[-9.415259,9.850564],[-7.853217,-5.490846],[0.384063,9.482316],[1.586630,-6.591279],[4.095355,4.178263],[-4.341455,-6.243025],[8.851926,-4.343430],[-5.825558,-9.027749],[-7.259626,-6.549576],[9.688973,-3.840906],[9.470464,8.941945],[-2.763178,-2.683279],[2.150680,-2.663415],[9.103675,8.035494],[-6.506233,2.946107],[1.053528,7.869505],[4.999654,-0.209731],[1.991064,8.010668],[8.434215,7.197714],[-7.899033,6.221667],[7.063075,7.090361],[-5.906387,0.468611],[-2.962801,-4.422230],[5.919564,-5.769946],[5.918513,1.998640],[9.666090,3.810201],[-0.230873,3.415167],[-8.269330,-0.960471],[-8.332351,7.564585],[-2.275032,0.486591],[0.681297,-4.979783],[-4.876915,-7.164008],[-2.008559,-5.328715],[-4.457136,-8.643560],[-6.334438,-7.455048],[-1.358189,-8.373125],[-7.256039,2.608194],[3.391323,-0.296617],[-7.043465,2.652046],[5.797243,-2.867020],[4.431497,9.016174],[-8.532022,-6.555187],[1.980789,-7.976485],[-5.367632,-6.732894],[-1.400285,0.749754],[5.804122,-8.276880],[9.957050,-4.641711],[1.862132,-8.041032],[0.588847,3.503743],[6.572998,-1.144034],[-1.830949,-6.239007],[7.234460,3.103424],[-2.472408,6.119174],[-0.968919,-5.353682],[3.776983,-7.969778],[2.982331,-4.868975],[0.624766,0.894160],[3.216214,4.911238],[-8.147161,-2.927309],[7.515568,8.976527],[7.619670,2.266916],[-2.672346,9.747417],[-8.076752,9.992548],[-7.862646,-3.333802],[9.141318,-0.219066],[5.840054,-3.024206],[9.057903,1.175973],[-1.548187,-2.583177],[-7.415027,-3.299971],[8.794140,-7.991362],[0.862419,-4.571273],[3.249429,6.313124],[-3.945557,-9.490869],[-9.508254,3.110433],[2.396366,-7.088036],[8.378200,8.207563],[-9.664206,-5.267907],[3.617622,7.477455],[-8.658999,-3.027707],[-0.535373,-0.920216],[0.188501,-5.710209],[9.781640,3.397162],[-2.722434,5.181256],[8.602194,2.935272],[-6.942224,5.364085],[6.673609,-9.020947],[-1.169157,9.853951],[1.922191,5.942744],[-1.142297,-2.623043],[6.988490,3.278516],[3.641900,1.442684],[8.129525,-2.364209],[1.554784,-1.344242],[-2.237109,-4.048567],[4.374668,7.744618],[-5.615664,-0.061473],[-3.046787,-6.984556],[-3.583130,5.619505],[-7.343088,-7.518650],[-6.182686,9.747427],[9.700114,-5.672137],[3.022620,-0.204447],[-9.445191,9.943674],[7.390234,-4.233248],[-1.903307,2.141348],[-0.144484,-3.572433],[-5.793812,-8.519377],[2.306924,-7.264695],[1.955047,-3.938185],[2.406736,-5.841702],[-6.066274,-8.148595],[0.403491,9.139215],[-0.770532,-9.129344],[5.197446,5.634110],[-6.329360,-0.076065],[-4.908564,-9.173606],[3.156229,-0.294555],[3.954819,4.499319],[-8.336876,2.147647],[-5.342046,8.210824],[-4.705720,8.710415],[-0.148014,5.442195],[-1.092084,-2.937665],[-2.432992,7.169610],[7.757038,-2.360524],[-0.922158,-0.720096],[-4.141459,-8.974875],[-8.255950,0.921668],[6.615352,-7.035769],[2.587294,-3.633040],[-3.334278,-1.521752],[3.231368,-8.716864],[7.455670,-5.606943],[-4.784772,-8.978356],[-8.149182,4.243731],[-1.729638,0.963519],[6.997201,6.917921],[5.096267,9.023634],[-2.417682,-1.937429],[8.045778,-2.679852],[-2.489853,-1.368439],[1.797749,1.039704],[3.069065,-7.218407],[5.274922,0.178508],[-1.653888,0.387339],[2.608770,9.156762],[3.299711,4.377964],[-1.102721,5.387835],[-0.352350,-1.144926],[6.422677,-5.807590],[-1.745342,-4.285690],[-4.028752,7.278874],[5.433236,2.903647],[2.928847,-0.939405],[-0.919065,6.387829],[-1.475558,5.963314],[-4.065333,-6.771340],[2.619512,-6.283024],[-7.289032,2.313653],[-7.321402,7.713434],[-5.232658,-5.484573],[8.034148,-8.642333],[9.563173,-6.846833],[-9.288887,-4.759211],[7.311413,-9.222332],[5.065681,2.212760],[-6.129917,8.198859],[3.769315,-4.017758],[2.931821,4.496562],[0.556919,-3.443308],[3.773021,-2.928477],[0.330424,-9.361823],[-6.047519,1.087869],[2.565348,5.601352],[-9.514584,-9.047635],[6.260556,9.840402],[-1.303106,8.205023],[-6.956511,-2.615012],[-6.604115,0.532137],[3.328629,6.490902],[8.788088,-1.959197],[1.529394,-2.180826],[-0.831659,8.218621],[3.474831,-2.503866],[7.002817,3.090641],[8.213625,2.073105],[0.045335,9.019914],[-6.513649,-7.254818],[-3.578211,-8.284761],[-8.804003,0.923933],[2.928034,-0.828856],[0.521278,-2.696427],[-4.088678,-5.027159],[4.897827,7.807529],[-1.747306,-2.723774],[9.122092,-6.541501],[2.077532,3.956875],[4.457094,-2.627254],[0.186937,2.781489],[7.138420,4.631979],[-8.923646,6.635538],[4.247726,-8.105706],[-2.303938,-3.661068],[8.396763,8.503958],[1.620198,-0.980589],[7.893333,-3.213761],[2.923748,1.336102],[2.822352,-5.920138],[-6.955215,-7.866493],[-7.253398,8.832795],[5.384746,2.296442],[3.594583,5.741686],[6.534078,0.460377],[-7.518005,-8.525310],[-2.603880,-8.569839],[-5.325709,5.343177],[-4.352222,3.119494],[-7.146678,2.377965],[-6.218524,-8.673772],[0.217987,6.641934],[3.377583,0.516388],[-8.590953,0.377240],[0.156576,-8.279362],[-4.484623,-3.386968],[0.845129,5.538475],[0.420494,8.148917],[1.997668,4.132381],[5.625623,-4.346027],[6.642894,-4.719457],[3.159522,-4.316877],[2.972237,-1.506018],[-7.595715,5.810585],[-4.960479,3.980184],[6.174656,-5.818814],[-2.820025,-2.056347],[-6.034829,-4.483995],[-4.700990,6.867498],[-1.881143,1.097167],[-8.112736,1.205299],[-2.214934,7.493017],[-6.353285,-1.998969],[9.893904,-0.790905],[-0.933198,-7.108343],[8.631786,6.584773],[0.126841,0.514064],[-3.038317,-6.946551],[6.479429,-9.551880],[-8.343191,-9.022825],[-9.806631,-0.097765],[5.304776,-0.570541],[1.784994,-7.102925],[0.624511,6.003109],[-2.165596,0.912623],[6.856043,-2.128685],[9.491324,-8.468654],[-4.927794,-6.431734],[-2.837976,-5.953447],[-7.956000,2.499424],[4.243420,-5.464749],[8.804487,-7.879508],[3.906685,2.099726],[3.702728,0.350096],[-7.328259,-2.033262],[-0.621830,9.913168],[1.340773,6.223753],[-7.691557,-9.495483],[-3.950824,4.728026],[-1.235110,-5.081296],[9.910593,-9.346874],[1.300075,9.929586],[1.591419,-1.709217],[4.814723,-7.177583],[0.236415,-2.152183],[1.757434,-0.826177],[8.732512,2.420871],[7.588684,9.900931],[2.465948,5.415044],[3.164022,-0.884279],[-1.389103,2.207863],[7.969124,-6.053402],[0.578024,-3.002701],[2.185936,-6.429841],[-2.422943,-2.945303],[5.272876,-1.596103],[8.542860,5.916660],[5.257033,-2.646417],[-8.128076,9.263720],[4.005201,1.440866],[-0.187526,6.183043],[-3.206164,-7.667468],[-5.457983,-7.002689],[4.946756,-6.811194],[-2.345102,8.394792],[-1.435455,1.409742],[6.502499,-5.981407],[-0.276007,3.161553],[7.112106,8.265252],[0.968693,3.836700],[-1.278913,5.586083],[-4.050842,1.425625],[-0.367117,-7.263454],[-9.980623,7.775016],[-2.513559,-3.580470],[5.364187,6.964715],[7.573346,-3.679799],[4.126859,-2.260018],[5.969900,7.565755],[4.993962,-4.424721],[1.382541,-9.674840],[-3.059255,-5.318598],[6.499748,-7.550285],[-7.051406,-2.570653],[-8.781298,-2.790893],[-0.893871,9.117428],[2.124918,7.929221],[4.141232,-2.141711],[5.985009,-3.900652],[-5.996498,-5.588996],[-6.351149,3.255606],[9.638109,-9.137082],[-2.811853,0.404297],[8.229513,5.993543],[2.315915,1.076696],[-7.262764,4.511228],[2.633887,-0.430084],[-4.510537,0.752575],[1.653689,-8.321432],[-9.920850,-9.567566],[5.123698,7.315142],[-6.379996,4.196821],[-5.447287,6.419170],[-9.554114,-0.125109],[-4.818896,-8.114494],[5.302500,1.951012],[-1.751227,2.747124],[-5.196298,0.125506],[8.365897,-1.525868],[7.320148,3.099648],[3.286506,4.885384],[-2.941870,8.562533],[-6.630161,1.302487],[0.824416,-9.682792],[-9.136517,0.424908],[9.558056,6.536754],[7.249302,-7.290881],[9.301414,-9.683226],[-4.940575,7.845585],[3.253210,-5.804289],[-6.172461,-6.517990],[-5.516174,1.938742],[-9.182468,-6.778167],[9.375337,9.718762],[1.374252,-1.271780],[9.178213,6.333888],[-3.638466,-1.809124],[6.083622,7.785167],[7.418297,-2.068147],[-3.583554,-8.291678],[-5.894977,-0.043013],[-9.591960,-7.860749],[9.476758,7.654761],[-7.590491,4.130387],[0.235736,-5.626570],[-0.756153,-1.879959],[2.084249,7.383368],[-2.260087,5.528490],[-0.233974,-8.076971],[3.289171,9.510562],[5.835849,1.274622],[5.482020,-2.198287],[1.059468,-4.969531],[-4.350570,8.927932],[0.193602,5.646086],[-6.882315,-4.094651],[-6.966252,-7.931248],[2.275896,4.832456],[-5.767136,-6.123198],[0.851008,-7.158574],[-8.729451,-2.655254],[3.707530,-9.515040],[-0.262148,-0.525083],[-3.748992,-3.016140],[3.942177,-3.677916],[-4.974363,-7.218970],[7.449295,-8.060463],[3.962573,0.976939],[0.455958,3.140522],[0.374185,2.469786],[7.753292,-2.980966],[-3.363626,8.969382],[4.746544,3.531319],[2.772347,-6.466532],[-5.302344,0.816913],[0.107025,9.870985],[-9.415640,1.832273],[2.773156,2.560445],[-3.081976,-7.958526],[-8.022703,8.121150],[-2.058066,1.907121],[-8.567365,-0.040283],[1.646520,-3.131760],[-8.532417,0.552744],[-1.342477,-9.777939],[-9.854340,8.081824],[8.208557,3.333799],[2.728265,-9.893181],[9.107195,9.072097],[3.810846,1.826726],[8.927711,-2.813139],[1.444677,-9.050130],[-3.877723,3.504231],[-6.477185,-1.974072],[7.061049,-3.474673],[-2.377115,-2.585926],[-4.323932,5.672581],[7.323146,-4.794610],[-6.729186,-2.260814],[1.373458,-4.288885],[7.279140,-4.877316],[-0.234053,7.568889],[-5.338822,-6.114142],[-7.978665,3.499386],[-1.366870,6.383706],[3.553882,-0.075008],[-0.252529,6.308137],[8.931120,2.243517],[-5.800834,-9.436545],[-0.982868,-6.469361],[1.017572,8.909143],[9.857922,9.453521],[6.794492,6.720840],[-1.097163,5.316214],[-5.445688,-7.592701],[-3.207609,-3.993806],[8.047794,1.474767],[-4.772094,1.101324],[-0.851775,-4.524385],[5.181375,6.329097],[-8.050677,1.432254],[-9.522742,4.824009],[7.447961,-5.570161],[1.339038,-3.727713],[8.799046,9.606292],[5.831643,-4.549511],[8.600011,9.982342],[-2.830746,-5.880549],[5.402563,4.986292],[-3.770244,-1.718188],[6.981120,8.320167],[8.038668,1.828431],[3.836391,2.448660],[8.536994,-9.604699],[-5.707581,1.709971],[-4.980352,1.795259],[4.936190,1.488552],[0.165992,-3.873765],[-4.179745,7.153003],[8.351102,-3.900218],[1.811365,-0.327244],[0.502615,-4.893160],[-7.226680,-1.059944],[3.316312,9.657549],[7.267644,-3.809867],[-9.892385,7.611688],[-6.427115,9.729195],[6.184375,-1.804902],[4.396121,-2.706818],[1.586830,-3.507538],[-3.407385,-8.428320],[-3.456496,9.306214],[-9.823334,-2.727203],[-2.451170,9.161187],[-8.842568,-7.767680],[-2.009943,9.493938],[1.658949,7.852563],[-0.780759,7.456130],[-6.274084,-4.418376],[3.960376,-2.006650],[0.191218,-0.666886],[-9.450197,-2.197585],[-1.996297,5.361371],[1.288488,-5.478045],[-7.922090,8.035068],[5.100062,1.172620],[-1.077243,-3.952798],[3.008054,5.206811],[3.523446,-2.665849],[5.812275,0.468792],[-1.345252,-4.858239],[3.555994,-3.697844],[-7.903171,-4.907840],[-9.821418,-0.117915],[9.145388,-0.910118],[1.066807,5.551714],[-4.479657,9.166535],[-9.736179,6.205088],[3.971474,-3.618139],[5.709357,-0.400377],[-8.558403,6.854954],[-7.484262,8.683311],[9.274386,2.592045],[7.578202,2.460099],[-8.895439,2.080457],[3.695518,9.775655],[-6.312572,7.439393],[2.708455,-0.661799],[-0.664604,-9.026138],[9.740408,-8.602501],[-3.806216,6.401240],[-0.505225,6.857211],[1.503613,2.424704],[2.531338,0.224430],[-7.271259,9.512591],[-4.407885,5.811751],[-9.914206,-7.775278],[7.700005,-1.820538],[-4.870601,0.564784],[-2.845600,0.398092],[9.003900,6.504455],[-8.049122,6.312413],[3.706148,-5.723620],[-4.387901,5.542198],[8.424333,-5.112508],[-8.899474,-4.628100],[-4.122963,-9.087385],[-0.550001,9.175680],[-6.689293,7.484360],[7.814232,-6.154589],[1.665947,9.509239],[-2.285124,-0.537601],[-3.700339,2.261187],[7.626128,8.962404],[6.400675,7.304848],[8.751210,-5.207193],[9.025665,-7.197770],[-5.810335,1.462917],[1.603331,1.012941],[9.791137,-9.754395],[-3.104514,8.415640],[3.769479,9.233433],[-2.552946,2.343062],[3.099991,0.076829],[1.015308,-8.863032],[-5.831780,4.506961],[-9.841361,-0.947164],[0.271146,4.239748],[-4.695627,8.201589],[3.218025,-9.810348],[6.850156,3.698792],[9.030893,6.557733],[8.763387,-3.545784],[-5.656578,8.711534],[-4.999955,-5.134593],[-5.780991,4.352084],[-5.318068,5.563647],[-3.024651,8.429197],[6.068942,-3.480924],[-0.672751,9.355066],[7.888158,3.044768],[9.922620,-8.903436],[-7.074716,7.359784],[-9.050671,3.640240],[-8.978024,-6.458632],[4.144193,-9.431717],[2.294948,6.418015],[5.765299,6.609638],[4.549289,-5.214514],[8.489798,-6.445239],[4.407355,8.569719],[2.722853,4.560541],[4.116635,-1.966259],[1.871172,4.657871],[8.875573,-1.498469],[2.879212,-4.408705],[5.928991,4.487728],[5.060740,-1.713365],[-1.431445,0.734460],[6.376063,4.383135],[-4.499085,1.357896],[-9.159830,-0.843180],[1.070719,-6.814562],[-0.167060,9.944499],[6.456561,4.803031],[5.084795,-8.069109],[7.288600,1.301562],[-3.861574,1.959567],[-2.481206,-9.122513],[4.808579,-1.939878],[-2.395322,7.392278],[1.362305,-6.833753],[3.963406,-4.396015],[3.516241,-1.098914],[-9.380295,2.680738],[-2.579874,9.319601],[9.943681,-4.586938],[4.749046,-0.590682],[9.187363,-7.049562],[-0.947548,-0.400500],[-0.898544,-2.432302],[7.349009,-2.807410],[-6.635541,-5.112724],[-8.653584,7.804123],[9.248516,-1.173784],[6.391488,-0.597185],[-3.652895,1.091983],[6.544163,6.853679],[-1.564374,-4.324542],[-8.956603,0.403960],[-1.480509,-5.492185],[-5.392081,8.362475],[7.197952,-4.719900],[-8.479764,7.830272],[0.091177,9.540716],[-7.983494,9.805677],[4.532499,-8.326149],[-5.702007,-5.406084],[9.676320,-0.435121],[1.935388,-4.165716],[0.604732,8.957003],[4.342039,0.002393],[0.354027,-6.119623],[5.624698,4.287046],[2.556363,-1.657856],[7.212045,-3.848642],[7.725753,-8.241192],[-1.150443,8.505541],[4.884168,0.469352],[-8.006571,-3.448830],[-0.256942,7.116393],[-6.250287,-0.619139],[0.545755,8.867280],[5.179473,2.176227],[-2.514760,7.015564],[-4.798624,1.792092],[1.723848,8.455156],[4.985831,-9.814349],[-5.327696,3.512212],[-1.556201,-9.760937],[-7.622763,-3.710627],[9.086375,2.378389],[-0.633703,2.587424],[0.519253,-3.533079],[9.047478,-7.364241],[4.349495,-7.702640],[8.029183,-0.029904],[7.618074,4.278137],[0.871906,-9.725977],[4.395183,-0.897898],[-6.661170,3.424366],[-9.680788,9.013233],[4.724032,-6.443616],[-3.169284,-1.351838],[-6.662794,5.321791],[3.704588,-5.286143],[-7.835711,4.287513],[-1.472108,0.810609],[2.607897,-3.291766],[9.831698,-2.573214],[-0.278917,5.613975],[2.892459,-8.540339],[2.002650,-3.171618],[-8.866485,2.263844],[5.751173,-9.029554],[-9.827765,-2.223185],[-6.188468,-4.971890],[-3.174088,-2.231865],[0.820798,3.292865],[6.781847,4.036873],[6.534027,9.092890],[-8.554292,4.186300],[-3.094421,2.888096],[4.542254,-8.554215],[-1.316180,9.607283],[1.064876,5.053381],[-2.822774,-0.091864],[-3.803210,-9.465376],[3.406823,7.903084],[-6.197915,0.558121],[2.410622,9.110777],[-8.693060,-4.196482],[-2.155935,-0.918154],[-5.551056,3.550820],[-1.524085,-6.337053],[3.591428,7.363897],[5.894204,-6.843832],[6.125296,-4.557057],[-6.911304,2.557548],[5.820233,0.083962],[-8.182337,-1.436130],[-9.932901,5.252765],[1.277317,1.328373],[-5.735353,5.534822],[-1.558188,9.078576],[2.257082,-8.571036],[1.784416,-5.071006],[1.077474,4.221516],[0.566194,-1.951903],[7.718192,3.249199],[-6.468885,2.382463],[9.712009,-3.309566],[-5.116544,9.760377],[3.126450,7.472722],[9.776471,4.899789],[9.163834,-3.698159],[-9.183966,-0.630503],[-4.145030,-4.831734],[7.981919,0.433717],[-4.239094,-4.114814],[4.100148,-9.455099],[8.097371,-0.052901],[-1.894501,3.130687],[-2.264432,-5.514067],[9.801327,-2.785812],[-7.580038,-8.642625],[-2.872902,-1.289493],[3.960074,0.942702],[-9.468811,5.629171],[4.073968,1.575879],[1.579619,3.841997],[-1.720332,4.040741],[0.786449,-8.834196],[-8.068648,2.840238],[-4.924340,-5.718415],[-8.138678,2.222008],[7.404319,-4.976175],[-4.521458,-4.199826],[-9.853505,9.343511],[-5.656533,-4.013364],[-3.612886,5.288985],[4.001368,2.847106],[2.645946,1.462932],[2.869765,-8.594469],[4.003527,3.760161],[-5.716145,-6.158227],[5.016936,-5.286100],[-7.691908,6.803800],[4.654658,1.698159],[6.493721,-1.013719],[-9.891678,-8.389174],[-3.132823,0.531585],[2.753136,9.701762],[-7.771862,1.731167],[1.864435,2.490585],[-9.386164,-7.171576],[-0.911987,1.446360],[-7.190961,-4.268604],[8.760536,-0.190496],[4.803868,-9.158622],[-4.636538,0.639917],[4.032123,4.203604],[-6.860839,-2.237222],[0.865078,-6.728700],[-6.184311,-3.516284],[1.937647,-7.150492],[0.240116,1.281399],[-4.710859,-2.219332],[6.609853,3.219900],[-2.887528,-4.977041],[-3.414603,1.109197],[6.595669,4.039586],[3.105050,0.693929],[-6.001532,-9.059453],[-9.694835,-1.815279],[8.832935,-7.163512],[-2.955257,0.804231],[-7.055798,8.236901],[-6.808600,-6.843084],[-6.790321,5.280271],[0.430407,2.709295],[-4.021432,-7.666306],[9.078146,3.109052],[2.380691,2.702291],[-2.298114,-7.251874],[-4.875759,5.313442],[-1.727200,9.622187],[8.641826,9.753531],[8.130642,-4.921051],[-5.915859,-4.864836],[3.049867,-8.731173],[3.731327,8.848399],[-6.561183,-8.840217],[2.622002,1.292578],[-3.387772,3.544390],[9.303980,-5.018789],[4.072725,8.666082],[4.662016,0.555856],[8.186328,2.260161],[6.398364,-7.750380],[-1.121016,2.787918],[-3.172075,-0.438922],[8.774616,-8.763213],[-4.535925,2.967537],[0.974393,0.683339],[-7.531077,-6.141989],[-3.024726,5.532994],[-9.498813,4.128248],[-6.071759,-7.849787],[8.144292,3.888354],[-7.210132,7.185554],[0.436096,-2.994534],[6.683891,2.527690],[-7.664064,-6.933138],[-6.775924,7.033445],[4.703783,6.338713],[7.040750,8.461020],[-6.098857,9.713918],[-7.124554,9.834564],[7.441485,1.262125],[5.045165,-0.033427],[-0.148859,-1.221875],[-8.910941,6.592198],[-5.934613,-8.005955],[-0.680210,-8.597471],[-6.699196,-7.047086],[2.368245,-5.879862],[7.239540,8.219660],[5.409376,0.463832],[-0.506191,-0.417602],[3.626675,7.104917],[-9.387113,5.894163],[7.418422,-1.540586],[6.555621,-9.927804],[-8.186803,8.233824],[-2.881160,1.509018],[-1.012811,4.029351],[-7.695594,-5.973797],[4.419384,-3.105190],[1.703255,3.904835],[1.411112,-7.076500],[-6.506015,3.957970],[-3.103204,-8.829107],[-1.980464,-9.919618],[-6.014326,9.615233],[6.679437,-0.736217],[6.459707,-1.970883],[-7.633730,7.213358],[4.808576,-3.813943],[2.837423,6.897941],[-0.354240,-3.279809],[4.135193,-0.592852],[6.915503,-8.708908],[2.273210,2.769395],[0.726492,2.211851],[7.366881,-4.919009],[-2.415069,-3.815728],[-7.740869,6.084460],[-5.638213,1.816054],[-8.551320,1.652073],[-0.192678,-8.673822],[3.203132,-1.571325],[-6.911628,-0.113277],[4.451095,-0.650104],[-6.478137,7.597699],[-1.454551,6.843648],[-0.886692,-2.475344],[-6.697515,-5.221633],[-2.837834,-3.883207],[4.270738,-9.123437],[-0.398550,7.456516],[3.763160,-9.731760],[6.651673,2.627585],[-0.826402,-4.906909],[6.432838,-7.990777],[-4.068218,-1.200809],[8.388491,-8.363749],[-7.548963,-0.561616],[-9.268390,-1.537894],[-7.908919,6.376421],[-1.970647,6.402959],[5.885011,9.401504],[0.712221,4.333277],[6.176762,-3.192999],[-4.778444,8.504980],[1.201316,-9.275245],[0.521597,-2.831110],[6.967976,3.238931],[-1.434053,-2.255733],[-5.039701,-3.431748],[7.951006,-2.423312],[-2.112932,-3.595932],[6.913252,5.239326],[3.224606,-6.733309],[-8.077734,-6.458764],[-7.974935,3.694946],[7.554741,5.585913],[6.729716,0.807995],[0.849090,4.431346],[-2.903860,-5.172090],[1.151845,-3.262586],[5.795799,-4.969966],[8.347824,6.789626],[-9.510045,-8.809243],[2.790468,-3.462727],[-5.035690,7.426530],[2.783809,7.044453],[-5.030503,4.716100],[9.759094,2.127658],[3.906350,-8.511176],[-0.918293,-0.703956],[-3.683062,-5.994002],[-8.735214,-1.241508],[-7.176295,-6.056159],[1.517017,2.756194],[-2.531921,3.090394],[3.956293,-5.360112],[-8.111146,1.898839],[8.383576,-2.736442],[5.267476,5.929998],[4.498209,-2.130183],[1.974039,7.260801],[-0.516171,0.998588],[1.726788,-0.260403],[1.670343,0.901157],[4.713258,-0.344397],[4.839164,-2.136505],[-3.266477,-5.050187],[0.309078,1.935993],[-2.072232,5.938809],[-8.382967,1.260360],[-1.518986,-7.959214],[-9.859115,3.384046],[-7.702630,-7.536204],[-2.571487,-9.302609],[-3.874226,-4.734590],[9.374357,3.784857],[-5.113682,-6.673171],[6.660827,0.098614],[5.304192,0.530101],[0.452317,9.226149],[-2.458177,3.615128],[-4.696927,3.559284],[6.650882,8.252930],[-2.018909,-0.440300],[3.796201,3.018018],[-9.555004,-3.451520],[-2.646210,7.981172],[2.774190,7.275788],[6.515232,-8.295730],[6.165740,-7.741874],[-9.387758,3.136426],[-5.277891,0.169403],[6.516928,-6.798157],[2.273389,2.857321],[-2.150710,-8.335308],[-7.434102,-7.365888],[-6.485193,1.177621],[-5.184147,-4.942463],[1.275101,1.216332],[3.664060,-3.688565],[9.693549,-6.748219],[8.266525,-1.900408],[7.387089,7.246199],[2.574829,3.909261],[4.982919,4.812063],[-3.374155,-1.240190],[1.752712,-4.033447],[-7.147112,3.391953],[0.079510,3.149631],[-6.671250,4.987470],[-8.383293,3.382965],[-6.254494,0.811392],[9.131925,6.081822],[9.550063,-8.750623],[-2.575655,7.042998],[9.184883,-7.635892],[2.514262,2.495543],[-7.986297,5.785146],[-9.934760,-9.725802],[9.840554,-4.578442],[-8.159669,-2.883653],[4.774144,-0.103944],[6.682410,-4.721113],[2.736008,-6.929171],[-8.376680,-4.894391],[-9.478338,1.275788],[-9.074669,8.545016],[-1.180958,-4.434579],[7.430583,-0.344815],[1.568648,-6.462365],[-2.894614,8.663419],[-2.118078,-5.250919],[-8.737383,0.015367],[-2.650526,7.091294],[-8.922288,-9.125903],[-3.801856,0.298240],[-4.514747,-5.864714],[-3.389202,-6.354766],[5.792065,-5.063283],[4.244158,3.365146],[4.169268,-6.442183],[6.569006,-7.234543],[-1.448969,-0.560585],[-8.092542,7.543451],[1.750236,-2.158201],[-5.371214,7.594397],[7.605562,1.073935],[-0.503136,-6.404970],[1.735523,-6.003436],[-1.962835,-7.258547],[4.523178,1.289911],[-9.364512,-0.607924],[-8.098549,-5.156477],[-4.826556,-8.850046],[7.787783,-6.838607],[-8.097045,-4.623824],[-2.563606,4.480150],[4.671098,9.637236],[-6.540140,-5.248006],[6.511597,4.721709],[-6.318739,4.962819],[1.147397,-7.561880],[0.247055,-7.102168],[7.551380,-9.102468],[5.559263,-5.103301],[7.248489,-6.997095],[-3.269494,5.934804],[6.722607,5.351318],[-7.096291,-1.483838],[-7.482681,-2.483856],[-6.017531,-0.370864],[6.425248,3.275854],[-5.450213,-7.063417],[9.876953,0.856760],[2.217829,-3.419631],[9.221919,-4.675332],[-2.676677,1.800498],[8.235016,-0.314383],[2.389729,3.148844],[2.122777,8.087873],[-5.176446,-6.435212],[-3.838003,7.406463],[-1.090441,8.241000],[2.995026,3.288925],[-4.303096,4.707632],[-0.008114,4.252984],[-6.004062,3.933116],[2.988326,4.885525],[-0.822747,-1.619210],[7.518058,-2.734757],[0.478228,-8.796402],[-6.853094,-8.064672],[-9.185042,-8.989151],[7.554750,-9.928144],[2.174052,-2.011713],[4.275150,-9.141851],[9.175529,-7.442624],[2.453671,-4.263585],[-9.072149,4.103985],[-5.514170,-1.885292],[0.164249,4.339685],[-0.443466,-9.327653],[6.479715,4.982396],[-5.827366,-1.605897],[-8.687522,8.204612],[-6.880270,-1.441016],[-9.353582,4.968937],[5.532473,9.037698],[-5.919660,5.134310],[0.768122,-2.716778],[-2.553408,8.115853],[-3.977531,-8.328762],[-9.758260,-5.073239],[1.259557,-9.344226],[-2.970461,-5.515107],[7.229400,9.676464],[3.018198,-7.911294],[-3.060921,1.269691],[-4.505984,-1.235222],[3.199739,0.042274],[-5.586019,-1.420827],[-3.262220,8.807965],[-3.686196,-7.098042],[4.971402,1.620166],[5.883369,9.042760],[7.561253,-5.732815],[1.130623,-0.067072],[-4.574228,9.982254],[3.495235,-3.378886],[-2.722033,-8.333947],[-2.897584,-6.048930],[-6.074775,-2.268710],[8.966827,-0.630043],[-7.989878,8.090278],[9.312492,-9.489821],[7.738440,-8.116364],[9.060792,1.300352],[-9.871145,-4.381244],[-5.654535,-7.474357],[1.981388,-5.678236],[3.032851,2.846278],[-2.754136,1.039075],[-1.060652,2.170234],[4.846451,-6.613919],[-1.923197,-3.038529],[4.973800,5.239201],[2.314419,9.128475],[-2.186685,-0.140295],[-8.859815,-4.049904],[-0.351443,-6.886813],[6.883214,-8.194017],[4.900665,-4.145340],[-3.944525,-3.060944],[3.078418,-2.066769],[1.437924,0.060740],[3.430015,0.975435],[5.030494,-9.032491],[-3.997905,-8.696528],[-5.300193,-1.787634],[0.051042,-0.542749],[-1.971504,-9.908937],[-4.400816,-5.584866],[-7.030179,-0.586001],[1.282248,0.102702],[2.942305,-8.873607],[-7.500610,9.688200],[-1.987785,-4.712429],[-4.338687,1.207329],[9.666268,4.772741],[-5.389653,7.045624],[0.125955,1.722861],[-9.864628,-7.765491],[-9.414877,4.734512],[7.332754,-4.592289],[-0.743394,-9.140881],[5.083736,7.431771],[5.635235,-4.721585],[8.537413,-7.917776],[9.865122,8.020422],[-6.374119,9.274981],[4.378212,4.162198],[-8.062630,-4.502158],[-2.328571,2.041398],[-2.152996,-3.057864],[1.808129,-7.606696],[-5.598395,-3.364293],[-2.478237,1.249097],[3.086412,4.156924],[1.217608,5.493296],[-1.545789,6.031769],[-9.404117,-3.439248],[0.730527,-7.892713],[-7.317886,1.343505],[8.766567,-5.202319],[-4.734101,-6.575715],[0.422533,-5.391205],[-2.994565,-7.930304],[6.182886,4.883654],[-2.820603,-9.699264],[-5.355826,7.667685],[1.071007,-2.643693],[-2.100083,-9.153404],[-7.322295,-2.889450],[8.680554,2.446974],[-2.768495,-4.116073],[0.621124,-7.136643],[-5.644422,8.903549],[5.080414,2.589717],[-6.126696,-9.935921],[-8.030472,9.100939],[0.626651,-0.252020],[-5.124413,9.627816],[4.792987,-8.309299],[1.689510,5.317358],[6.417688,5.814308],[7.166081,-9.498545],[-1.718392,-5.720139],[9.128593,7.633359],[3.782256,4.012815],[8.077549,-6.788281],[1.113439,9.137879],[6.009297,-6.618909],[-2.139560,-0.271770],[-3.255297,6.428336],[6.568285,1.483421],[4.555214,4.177327],[1.953230,-2.791305],[9.966559,1.257053],[9.936119,-8.986552],[0.681853,8.587999],[-2.866012,8.866532],[-6.552554,5.878656],[-2.697381,4.729944],[1.801166,-6.402425],[4.656990,-2.912683],[-4.181994,7.021900],[-2.785370,-6.514816],[-8.079879,1.784238],[0.263120,4.125035],[4.148298,0.983771],[-0.207040,6.208194],[-1.047740,-4.009696],[-2.859000,-8.661935],[-7.150168,-1.516975],[5.661635,7.488636],[4.064500,-9.085550],[9.179385,-8.440754],[-6.849631,9.235854],[-5.478315,7.835064],[-9.193672,8.091143],[-1.265886,4.012732],[0.569385,2.241459],[1.888504,5.675589],[-2.130121,8.320818],[7.442955,-7.952889],[-7.578162,-4.258904],[7.700978,2.043351],[5.022278,-1.528561],[-7.030196,0.947434],[-6.664963,0.569385],[7.639467,-9.196376],[-2.489169,2.737679],[6.868001,-5.888542],[9.141951,7.230898],[-6.883290,8.475061],[1.175851,0.864430],[1.443227,8.520274],[3.389360,8.870625],[5.075023,-4.069258],[-9.815375,-3.467106],[-3.904954,3.540696],[7.772949,-0.021587],[3.042905,-2.205726],[1.031461,-4.714924],[-6.990511,-2.377289],[-6.156006,-5.834567],[9.015273,-9.808048],[-7.559224,-5.588695],[5.565475,4.212170],[-0.135899,-0.287929],[0.992478,-0.638164],[-7.033916,4.137457],[-1.283167,-0.890138],[-9.557020,6.832531],[-3.455628,2.181661],[-4.640138,0.622643],[3.645344,-5.124405],[-7.708716,0.887851],[5.695601,-1.342939],[-4.840843,-5.652953],[-2.788194,-5.133197],[5.528479,-6.241659],[6.131519,6.942022],[9.779574,1.116924],[7.619862,-5.176382],[-9.833939,0.073847],[4.455300,0.378202],[0.824391,9.920646],[-5.300947,-4.458225],[0.554205,7.348250],[-9.006213,-5.448523],[0.551425,-8.485156],[8.848496,-0.623059],[-2.242772,-2.043531],[-7.796344,-1.700260],[2.840544,1.769390],[6.780392,-9.171482],[-0.635970,1.042128],[-1.844607,4.010236],[4.540688,-6.196628],[-1.948824,-5.125288],[-9.559466,7.597513],[-2.817894,-1.538709],[3.111628,4.214255],[-7.115568,6.817360],[-0.005922,2.288775],[-8.475489,-8.588202],[7.659045,-3.947142],[-3.569666,-0.174589],[6.496812,1.727812],[5.492626,-7.308967],[1.417157,5.147859],[7.868438,-0.048977],[3.446694,-7.332511],[-5.945777,7.357106],[5.841554,-6.613793],[-8.394546,-5.087694],[-4.116770,4.350674],[1.779930,-5.734226],[-0.351847,-4.139696],[-2.739563,1.242611],[5.235447,3.142245],[-4.335476,4.737584],[-1.262954,5.109328],[-8.586365,8.347089],[7.707487,5.813659],[-5.903775,7.609776],[0.135089,-4.706653],[2.101204,-8.986244],[3.306418,-6.110794],[-2.425087,3.012568],[4.963456,-2.730464],[-4.711108,-3.529054],[-9.115996,-9.668853],[5.422694,9.988265],[-6.661406,-5.776053],[9.003512,-1.761535],[-9.069388,9.992810],[-4.461087,-1.413326],[6.960929,7.682631],[-8.566312,-2.584135],[5.099023,8.632482],[-1.477092,-8.320567],[-0.400467,-8.229844],[2.149939,-5.989624],[-8.204099,-3.119741],[-4.828661,-7.348393],[0.179151,6.829902],[-5.043545,0.393583],[-8.063143,-4.523404],[1.905401,9.655700],[-0.148717,-6.700396],[-6.567068,4.508648],[-7.446872,9.720440],[-7.399108,-7.012563],[-4.301759,5.280283],[1.758008,-9.954215],[5.980634,2.609464],[7.015335,-3.655032],[-3.459080,2.176680],[4.700793,6.160971],[0.831711,-6.268889],[6.644268,0.291894],[-7.552324,-7.205898],[8.545824,-5.731481],[3.520006,-6.116744],[-5.223471,-0.580875],[7.373598,-4.783723],[2.543552,-4.642690],[-3.334584,-5.314219],[5.689444,2.416598],[9.276983,-1.161952],[6.200885,5.379278],[-2.859826,6.330357],[9.627900,6.462160],[-9.422640,6.745877],[-1.595469,-5.711055],[6.604750,-7.269095],[-6.790375,-0.278795],[5.340822,9.793847],[4.995511,4.508176],[-5.905490,8.055034],[4.840229,-7.572446],[-6.642383,7.430780],[2.461406,7.092828],[-9.335019,1.174137],[-0.178221,-0.513165],[-2.169501,-2.346216],[8.934821,7.265369],[-3.296692,9.774621],[-6.966603,4.341913],[3.580666,9.143798],[-3.611027,2.313706],[-8.795506,-2.777259],[3.650609,-7.995345],[-0.088719,8.090778],[-5.506720,3.172622],[9.688271,-9.415904],[-6.732052,-0.669686],[-9.818683,-8.757144],[5.298131,-6.635852],[-0.177123,-2.679920],[4.580131,-3.614296],[1.153471,0.054772],[-1.059852,-5.055030],[9.329658,6.960132],[3.461495,-3.765799],[9.864603,-0.700622],[-8.298558,-4.152403],[8.455878,-3.874888],[6.533854,-2.158173],[7.327723,2.805353],[-1.477485,6.330146],[-9.535804,4.474631],[8.344778,-3.797610],[-1.718436,9.958031],[8.116324,-7.135731],[-8.061848,7.041108],[5.372576,-5.344387],[-4.076043,-4.720772],[6.444893,-9.173601],[1.389722,6.616991],[7.656152,0.025894],[2.607744,4.314732],[6.949045,3.270488],[-4.263021,3.015471],[8.382959,-0.599546],[1.173753,-7.676808],[9.423734,7.385096],[8.874971,7.736590],[-2.718531,-0.961923],[9.899063,-2.747775],[8.983574,-9.029558],[-7.256389,6.107173],[1.721196,9.375935],[7.911635,3.281255],[3.393302,0.240233],[-0.104793,6.291140],[7.430497,-0.964930],[4.777671,9.923361],[-5.648136,6.471884],[-3.070426,-8.787408],[-3.814908,-4.328578],[-9.457760,-4.739567],[-7.500700,-7.416523],[-7.551271,4.688717],[9.262307,-5.162320],[-4.871763,-1.075159],[7.091160,-2.123758],[-0.280084,2.532345],[-9.924779,-7.325612],[-7.570479,-3.197241],[-5.023219,3.044032],[4.538450,2.542606],[-3.694509,4.982425],[0.002582,1.471444],[3.930756,-0.659625],[8.245234,7.937057],[-8.280915,-1.904730],[-7.945618,9.836217],[2.886062,-0.825306],[-0.255801,2.975205],[4.155695,3.336817],[-6.975565,-2.630601],[-4.553069,-6.965037],[-0.863267,-0.890119],[4.665377,6.835928],[1.779324,3.217613],[3.738873,2.978331],[8.945875,-4.529818],[-4.975001,9.533813],[9.613631,-6.345119],[7.631379,7.287399],[-1.930856,-4.486229],[-2.552421,-6.760124],[-9.538460,-3.776099],[1.175051,5.314223],[-2.559056,2.148102],[-8.916287,-8.381410],[-6.371873,7.461483],[2.993051,-4.355243],[-4.788207,9.084699],[-5.752543,4.629688],[2.711942,6.612131],[4.338732,6.916103],[-3.427430,-9.771073],[-2.989267,-2.328073],[-0.491003,-4.994551],[-0.917186,7.414188],[8.946505,9.605148],[-6.254869,-0.842736],[-2.378819,-7.901170],[7.273292,-8.124518],[5.616010,-1.599638],[8.325393,-4.754998],[-9.161704,6.799675],[5.663276,-0.343647],[0.898899,9.986452],[-0.981832,-6.770259],[9.310046,-6.444032],[-7.090447,-9.827148],[-3.792266,8.570819],[-6.268637,1.072063],[-7.698626,1.637028],[5.352831,-8.990281],[-6.181193,2.960108],[-2.286016,0.572753],[-8.496873,-0.144815],[-6.982573,-1.699197],[6.553816,-8.630372],[-4.947897,-6.736619],[-9.828877,-1.656221],[7.855488,7.829036],[-0.015015,-4.923192],[-2.341633,-0.648684],[-2.762623,7.210986],[-1.162120,7.834359],[-5.526453,4.294986],[3.265910,1.798093],[0.280211,1.722020],[7.046477,-5.377677],[2.972348,-0.122439],[2.857125,2.793771],[5.852577,-4.722923],[-8.218041,6.290426],[-8.641785,8.218428],[-5.868099,8.275741],[2.530403,9.554403],[5.196335,-4.887116],[-9.723411,-9.435039],[-4.842492,5.608882],[4.402486,2.435989],[6.383221,-4.243444],[0.402362,3.654688],[-1.225608,6.949690],[-5.080571,-0.916674],[9.483178,-9.364310],[5.779320,4.774402],[-3.778083,4.624603],[-6.689913,-0.167294],[5.298659,7.366285],[-8.367499,9.418508],[-5.114744,-0.647671],[3.240678,-4.937448],[-5.149612,-8.489450],[-7.964935,8.276552],[6.742740,-0.540477],[8.949204,9.036932],[4.735961,3.572163],[-7.523465,-6.023740],[1.248660,8.815184],[-8.695721,6.253309],[-5.785647,-3.755132],[3.518326,-8.046060],[2.925865,3.050460],[2.842966,8.001928],[6.493092,-5.812998],[9.655143,-9.116394],[-6.372927,5.895381],[-8.538922,5.125005],[7.193213,1.415487],[5.544926,6.287784],[-5.068141,8.354588],[7.007105,-9.987848],[2.865985,-0.473126],[3.945935,7.164160],[-8.793835,-7.477363],[-9.721981,-5.544561],[-1.168958,-2.867926],[4.457117,-3.503130],[-7.447637,9.236729],[-3.874300,5.810457],[-5.946734,2.151923],[-2.440759,0.767556],[7.650770,1.221959],[8.724605,5.903167],[6.748585,3.022135],[9.000753,-9.180807],[9.841326,-2.415854],[1.617154,8.525902],[7.910742,-6.870847],[-8.371848,2.534033],[5.245052,0.025856],[-3.713463,-9.816266],[-1.635797,-4.926896],[8.808866,-0.258249],[-1.765673,3.070674],[-1.500539,5.539920],[7.048819,4.826354],[-2.270304,1.899039],[-1.567152,-5.541405],[-9.846751,-7.071388],[2.868555,-5.544439],[-7.048629,2.981156],[2.687103,-0.082896],[-3.929194,-8.127858],[9.472985,3.734015],[-1.548835,-7.481553],[9.695795,2.575570],[9.508389,-6.120597],[-2.444864,-6.778944],[1.817966,2.685632],[-8.056662,-9.617184],[6.951520,-2.178517],[4.281539,-9.430602],[-4.695350,-2.168515],[-0.892556,7.075305],[6.863960,-6.546588],[8.869173,-4.306660],[-8.516979,7.562454],[-3.220682,6.221387],[-5.364104,-9.680431],[1.366373,7.437086],[3.144589,4.035675],[9.747614,-3.807823],[7.091103,-2.106108],[9.307825,5.151995],[-8.184451,-0.797985],[7.055828,4.925158],[6.219919,1.181998],[-9.699035,-7.903013],[-3.360742,7.514447],[3.146151,-0.413472],[-6.026878,7.474148],[-6.734047,-3.661148],[7.135591,0.409546],[-7.522878,1.161773],[-5.543541,5.323098],[7.517210,1.107205],[4.932413,-9.965438],[-1.181618,6.851125],[4.579541,-2.974799],[-1.201427,0.344667],[5.088379,-6.061613],[4.239502,5.473053],[-0.719194,-4.150422],[-5.634591,0.283855],[1.731908,-3.244948],[-1.638196,-3.549055],[-9.806439,2.701642],[3.029835,1.486767],[5.914587,3.130275],[7.302918,5.396990],[6.155394,5.508023],[1.682750,9.429666],[-7.578472,-1.578222],[-1.287049,4.419734],[7.672865,3.535752],[5.348796,7.390049],[-0.454668,2.864198],[8.777305,2.073822],[-5.020558,-8.449117],[4.375421,-7.380823],[-8.087588,-8.012005],[-2.436325,0.968676],[1.227686,-6.867950],[8.491938,1.481765],[-6.370348,5.593345],[4.986229,-6.738843],[-9.144137,6.638043],[3.553093,8.925261],[-8.246159,-7.953581],[2.077055,-9.865227],[-8.699928,2.296214],[-4.778196,8.486821],[8.267686,-7.735267],[1.767357,7.074461],[-9.296075,5.774502],[-8.965369,7.374411],[-0.309976,2.379916],[8.505608,-1.519568],[7.466689,-7.440722],[9.676916,-1.717336],[-9.829691,3.870177],[-7.072419,9.929925],[-3.624018,-7.915584],[-7.058381,4.012220],[2.083963,-6.572208],[5.082767,-3.556584],[7.478554,-9.090304],[-1.539551,5.724327],[-9.040407,-7.394861],[4.717650,4.508284],[-1.524543,0.859362],[8.373377,3.212712],[5.522843,3.156767],[0.168984,8.086702],[-1.924756,0.545674],[5.197717,-0.306326],[6.495366,-3.733353],[-2.142644,-9.308459],[7.617961,2.505728],[4.067328,1.259272],[3.190360,3.373237],[-0.196620,1.054443],[-6.705095,4.785003],[6.319691,4.231576],[-2.388213,-9.742812],[8.701499,4.466229],[-4.581919,1.983452],[0.664602,-6.259530],[-8.312250,7.193785],[7.235186,0.990722],[6.043042,5.617346],[-1.508491,-6.234257],[-7.087967,-4.442733],[6.432532,-7.099515],[-0.676069,6.738245],[-1.556536,-4.512425],[8.221093,4.017622],[-0.446835,9.617915],[8.971850,1.839752],[1.409957,-5.238845],[-1.852142,-9.065089],[-3.637104,4.002041],[-8.104426,-7.177299],[-9.563184,0.365529],[9.167816,-1.452797],[-0.623175,7.278842],[-4.444447,4.985438],[-9.741342,9.578801],[-7.099239,1.110274],[-3.747314,-9.015704],[3.275199,6.158118],[8.712652,-6.571243],[9.155392,6.769585],[-3.358800,2.452526],[1.115855,-4.565852],[-6.414632,-0.362648],[0.109504,8.447997],[-7.532468,4.871367],[3.086240,0.702341],[3.867779,2.395752],[5.809834,-9.003100],[8.220686,-0.765327],[1.926949,2.369803],[6.618437,-9.925815],[3.416103,-2.331097],[2.145571,1.133904],[6.020175,-8.652985],[-0.314736,1.261561],[-7.737114,2.013466],[-0.498243,-2.685476],[4.539853,2.923912],[3.483543,3.704221],[-3.812711,-1.597114],[2.591454,-4.678868],[-3.705000,-3.814098],[-8.407080,-7.697606],[4.849062,-1.615507],[-3.120831,8.560267],[-3.837872,-3.973376],[4.660453,-3.113559],[6.325354,8.517419],[2.026879,2.570381],[-8.076269,-7.261161],[-1.625414,4.467863],[6.875497,6.034662],[-9.722512,8.314578],[1.611622,-2.695254],[9.889679,-5.413143],[0.055823,-3.772176],[2.322393,9.586364],[9.880183,-0.807547],[-9.091885,0.011367],[-2.766687,0.969843],[-2.550565,9.671966],[-9.275865,-7.778693],[0.180614,9.115047],[-0.753212,4.421237],[7.498211,-8.397331],[-5.513313,-4.217414],[-8.766051,-9.433575],[-2.667010,-7.249756],[-8.272452,3.591820],[4.491686,6.671363],[-9.039073,-4.770402],[-9.566815,5.776152],[-7.775932,-4.908646],[-4.836275,9.625121],[-2.518644,6.505053],[-7.360391,1.400226],[-9.535811,4.504587],[-0.524365,-0.684829],[0.201903,-5.255990],[-3.221936,-5.668253],[4.190234,3.462826],[0.325227,-8.236488],[5.898729,4.163218],[0.230214,-0.540886],[0.068984,-2.914396],[-4.474936,-0.887970],[7.216482,1.871575],[-0.259984,-0.237566],[-9.260773,-7.780752],[-4.726489,-2.386671],[-1.251519,3.534718],[-8.742662,5.977287],[-2.807873,-3.251102],[-4.995871,-0.906309],[7.682724,1.575907],[9.959598,6.427151],[-6.366582,-1.391302],[-1.118479,-8.907249],[-2.224838,4.940770],[8.908938,-7.846016],[-3.975837,9.289900],[5.640337,-7.805919],[5.699423,9.001287],[4.084374,8.927825],[-9.439174,-9.728767],[-5.982338,7.026338],[1.580398,0.534755],[-3.269824,-2.232241],[-1.451342,8.141004],[7.657282,-2.643749],[-3.574349,-1.238994],[-1.418154,4.866049],[1.452957,-4.639906],[-5.836032,-4.660466],[-3.000026,-3.683764],[0.886901,2.584641],[-5.511052,1.040269],[-2.948610,5.157466],[2.545630,-4.295858],[8.598894,-5.360081],[3.804950,-8.314203],[0.818768,9.066560],[-8.218411,-7.633380],[-7.704120,-7.290704],[-4.613715,9.153246],[7.820909,3.403273],[-1.332662,9.009287],[2.989299,-1.176183],[-3.049887,-5.387394],[4.775922,2.958818],[-3.594460,2.564869],[3.313308,9.299861],[0.438850,-5.314954],[0.689083,-1.530001],[6.113801,6.996714],[1.144344,7.677919],[-4.534238,3.196402],[-8.356084,-1.864939],[-7.587299,4.003189],[3.043700,-9.210171],[8.741703,6.148765],[-4.261396,-9.329525],[4.501190,4.373172],[1.560327,-3.341388],[-6.611530,2.605003],[-4.273587,1.193498],[3.748769,-5.154375],[-5.601915,-0.537252],[3.499692,-9.222253],[8.560847,1.914015],[8.514253,3.664576],[-4.578197,-7.371180],[-8.263492,8.466725],[9.344850,0.177212],[4.546326,8.944474],[-9.281679,-7.403449],[-5.841083,-3.619487],[5.569585,-6.610123],[-2.388677,-4.321776],[-8.271869,1.284014],[-7.104736,3.142728],[-6.449621,3.792498],[3.630890,5.927614],[-5.276912,2.352390],[-8.503366,-6.278556],[-5.937271,-3.685677],[-3.633552,2.502690],[-8.371591,4.957568],[9.868186,-3.584252],[-3.232503,8.912460],[5.775930,3.347088],[-7.240466,-4.282599],[-7.139504,2.931149],[2.178022,8.255476],[-0.128267,-5.724555],[-1.456883,9.687632],[3.016854,6.729842],[1.250077,9.853891],[6.821617,-5.012185],[7.098622,-2.052061],[5.341583,-8.883750],[-3.146328,8.096848],[-1.167957,6.476664],[9.061098,-8.866752],[-2.350464,-0.365401],[6.469255,-7.092442],[8.869994,-7.472455],[4.089448,-0.677285],[-5.992531,-7.590484],[9.851271,2.534938],[0.774376,-8.612634],[-0.006604,0.591292],[-4.089155,-6.495043],[7.946316,-9.591872],[-2.665753,-5.842893],[7.409019,-7.903768],[0.483488,-5.641128],[-2.719946,2.065568],[-9.699028,9.773070],[-4.570620,-3.004475],[-7.603262,-2.326845],[5.962985,-4.631425],[-1.326455,-6.287373],[-3.811785,9.592054],[7.878743,-3.213830],[-8.163277,4.991868],[9.111973,6.824653],[-9.218363,-8.678961],[-0.178032,-6.276197],[2.418810,4.238487],[2.474856,5.673330],[0.576568,-8.208072],[1.585122,-9.434685],[-1.596793,-0.568547],[-3.934725,5.962422],[6.149406,-6.227821],[7.644148,-9.429308],[2.683032,-8.669253],[8.342791,-2.691593],[-5.550946,2.987402],[8.400432,3.831166],[1.321075,2.317426],[3.082854,-1.937883],[-0.065042,5.455845],[-5.033741,-7.916964],[7.044429,-3.434647],[0.073188,3.229424],[0.373017,8.503428],[8.216296,-5.204675],[-8.223194,-1.642259],[4.402614,7.879821],[9.348743,3.931710],[-0.890160,-6.227764],[-6.439901,-5.682252],[7.202978,3.890425],[-9.010330,-1.261567],[-5.711299,-2.788444],[-6.713094,-6.403537],[-0.294586,-4.148096],[-6.583236,7.771219],[1.318132,6.222402],[-7.989634,4.729972],[7.919412,7.171317],[5.802469,1.802589],[-7.884800,7.053500],[9.914101,-8.133610],[9.707233,6.243939],[-1.443629,-8.784982],[-1.559308,8.566343],[0.577746,4.614639],[-2.084562,-5.374295],[-6.181253,6.934271],[8.926759,7.649955],[-3.864310,-8.108451],[-5.001440,-6.622567],[-1.995848,0.482662],[-3.261663,-6.137691],[9.138867,-9.221811],[-2.445820,-3.132294],[7.537065,2.492764],[-6.000241,9.555572],[1.607472,-4.794320],[0.698157,-6.178726],[9.303250,9.127797],[8.796964,0.017156],[5.901241,-6.693645],[-1.186001,-4.552285],[-6.195517,-2.722243],[-2.315996,4.584773],[-3.553887,-2.151808],[-4.042370,9.159817],[-2.468390,7.090700],[-5.372912,-5.698667],[7.077144,3.822074],[8.660231,1.783584],[-5.350603,-0.808508],[4.345701,-4.351351],[4.716204,8.970742],[4.025449,3.930951],[7.117625,4.514016],[3.040113,5.167992],[-0.977969,-8.080195],[-7.853069,2.026525],[-1.809157,-0.560144],[-3.922445,9.964584],[9.342960,0.198319],[6.285875,-4.109930],[-7.466577,8.964177],[5.407858,-2.564250],[6.515830,-0.361140],[-3.495302,-7.164059],[2.129957,-1.913493],[0.461481,-1.203895],[-8.231047,-0.628456],[-9.952884,9.240387],[-0.089074,2.806020],[1.559323,-7.787070],[-6.257742,5.430638],[-3.999150,0.784525],[-3.747053,1.448006],[0.064502,-7.397913],[-1.997362,-4.156986],[2.796563,1.066402],[-8.364408,6.609441],[-8.234306,-0.437163],[-8.830368,6.364522],[-9.262380,8.340049],[-8.897420,-1.385377],[-2.586512,5.556951],[3.160571,6.567913],[5.292035,8.906800],[2.519760,-3.670925],[-7.250662,0.435454],[-8.844355,0.235066],[5.760575,0.101373],[-0.406090,-5.081027],[-0.379021,9.622589],[9.164140,-9.429610],[6.833408,-7.977102],[-1.949524,-9.898883],[4.915396,-6.856318],[-7.982714,-9.391424],[-6.616945,7.597304],[-4.408225,2.785947],[2.086643,-4.360624],[5.578298,-9.635672],[-0.270901,-0.039710],[9.444448,5.669723],[-4.143423,-7.898287],[-2.909710,-2.376387],[-7.670980,2.213058],[7.717551,1.655737],[1.264085,3.214621],[-5.619052,8.454974],[-9.981220,7.120859],[-1.863716,5.129760],[-4.750593,5.000273],[-3.498255,0.518179],[1.347478,4.561310],[3.606274,6.099806],[9.463266,-6.475161],[-7.427065,-8.316083],[5.711454,-8.294343],[7.838616,-0.986419],[1.741165,-2.407562],[6.984759,-7.310865],[-4.364464,-8.779265],[-3.661568,-4.315926],[-7.354133,4.839505],[-2.996103,-3.950104],[-6.861555,1.116801],[-1.366951,3.249199],[2.834149,5.876889],[-3.271924,4.703675],[-8.056197,-4.950886],[4.189080,-6.088358],[5.552698,6.334800],[6.761363,3.227798],[-2.166048,0.246378],[-6.583044,0.871044],[-2.228442,3.558531],[-4.089134,1.124798],[-8.380725,-2.136936],[-4.808186,9.645021],[-7.299911,9.560618],[-4.653438,6.360307],[5.237990,0.215384],[-7.204209,3.460356],[-4.982638,7.538533],[1.435859,2.505132],[-9.729889,-9.824803],[-8.223861,4.353659],[-6.018092,-4.066366],[4.642770,1.093535],[4.287358,3.137298],[8.828098,-6.266674],[5.791751,8.533311],[2.248098,-4.328448],[-3.139500,-9.321409],[-6.944140,8.940150],[9.135026,-8.208162],[-6.247194,8.090228],[-6.375582,1.344426],[-6.545701,0.537098]], dtype = "float64")#candidate|16207|(2772, 2)|const|float64
call_16205 = relay.TupleGetItem(func_14285_call(relay.reshape(const_16206.astype('uint64'), [4, 693]), relay.reshape(const_16207.astype('float64'), [8, 693]), ), 2)
call_16208 = relay.TupleGetItem(func_14288_call(relay.reshape(const_16206.astype('uint64'), [4, 693]), relay.reshape(const_16207.astype('float64'), [8, 693]), ), 2)
output = relay.Tuple([call_16196,call_16200,const_16201,const_16202,call_16205,const_16206,const_16207,])
output2 = relay.Tuple([call_16197,call_16203,const_16201,const_16202,call_16208,const_16206,const_16207,])
func_16217 = relay.Function([], output)
mod['func_16217'] = func_16217
mod = relay.transform.InferType()(mod)
mutated_mod['func_16217'] = func_16217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16217_call = mutated_mod.get_global_var('func_16217')
call_16218 = func_16217_call()
output = call_16218
func_16219 = relay.Function([], output)
mutated_mod['func_16219'] = func_16219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15380_call = mod.get_global_var('func_15380')
func_15382_call = mutated_mod.get_global_var('func_15382')
call_16278 = relay.TupleGetItem(func_15380_call(), 1)
call_16279 = relay.TupleGetItem(func_15382_call(), 1)
func_15307_call = mod.get_global_var('func_15307')
func_15308_call = mutated_mod.get_global_var('func_15308')
call_16283 = func_15307_call()
call_16284 = func_15307_call()
func_12590_call = mod.get_global_var('func_12590')
func_12596_call = mutated_mod.get_global_var('func_12596')
var_16287 = relay.var("var_16287", dtype = "float32", shape = (72,))#candidate|16287|(72,)|var|float32
const_16288 = relay.const(False, dtype = "bool")#candidate|16288|()|const|bool
const_16289 = relay.const([-1,8,4,-4,4,2,4,-9,-4,6,-5,1,-10,-5,2,-1,-1,-8], dtype = "uint64")#candidate|16289|(18,)|const|uint64
const_16290 = relay.const([[-6,-5,-3,-6,5,3,10,-1,6],[4,10,-4,9,-1,-3,-5,-3,-4],[3,3,-6,10,-4,4,-10,-3,-6],[-3,9,7,-7,9,-5,6,4,5],[-8,9,8,3,4,8,-3,4,-5],[3,3,3,8,-7,-1,-4,9,-10],[-7,-3,-10,-10,4,-4,2,10,-1],[5,-2,-2,7,1,-9,3,5,8],[8,6,-1,10,8,-1,5,-6,2],[-2,-6,-7,4,-3,-7,-2,-1,9],[-1,-7,3,9,6,4,5,-9,1],[-6,-7,3,1,2,-8,-4,-2,-7],[9,-2,1,-4,-4,-7,-8,-9,1],[-8,-9,-4,3,-5,9,9,-8,-4],[7,-7,-1,-7,7,-4,7,-9,-4],[5,-1,10,4,7,-2,-3,8,-1],[6,6,3,-10,-3,1,3,3,-6],[-3,6,-4,-10,-7,-9,-7,-6,8],[4,10,-8,3,6,-7,-2,-5,-2],[-5,6,-1,10,-9,1,-4,7,2],[-4,9,2,-2,-8,-3,6,5,1],[6,-3,6,4,9,-3,-9,8,6],[-5,6,-7,-6,-8,2,6,-9,-5],[-5,4,-2,-4,5,-8,2,1,-9],[-9,-1,7,-6,-3,1,3,-9,-9],[5,2,7,-1,5,9,10,2,-6],[-5,1,-9,-8,-8,9,-9,-3,4],[-3,1,7,-6,9,-6,-7,7,-9],[-10,-1,5,8,-6,-7,2,-5,1],[-6,-9,-5,10,-8,-9,7,5,8]], dtype = "uint64")#candidate|16290|(30, 9)|const|uint64
call_16286 = relay.TupleGetItem(func_12590_call(relay.reshape(var_16287.astype('float32'), [36, 2]), relay.reshape(const_16288.astype('bool'), []), relay.reshape(const_16289.astype('uint64'), [18, 1]), relay.reshape(const_16290.astype('uint64'), [18, 15]), ), 5)
call_16291 = relay.TupleGetItem(func_12596_call(relay.reshape(var_16287.astype('float32'), [36, 2]), relay.reshape(const_16288.astype('bool'), []), relay.reshape(const_16289.astype('uint64'), [18, 1]), relay.reshape(const_16290.astype('uint64'), [18, 15]), ), 5)
var_16306 = relay.var("var_16306", dtype = "uint64", shape = (30, 9))#candidate|16306|(30, 9)|var|uint64
bop_16307 = relay.add(const_16290.astype('uint32'), relay.reshape(var_16306.astype('uint32'), relay.shape_of(const_16290))) # shape=(30, 9)
func_4950_call = mod.get_global_var('func_4950')
func_4952_call = mutated_mod.get_global_var('func_4952')
call_16318 = func_4950_call(relay.reshape(call_16278.astype('float64'), [10, 2, 8]))
call_16319 = func_4950_call(relay.reshape(call_16278.astype('float64'), [10, 2, 8]))
output = relay.Tuple([call_16278,call_16283,call_16286,var_16287,const_16288,const_16289,bop_16307,call_16318,])
output2 = relay.Tuple([call_16279,call_16284,call_16291,var_16287,const_16288,const_16289,bop_16307,call_16319,])
func_16335 = relay.Function([var_16287,var_16306,], output)
mod['func_16335'] = func_16335
mod = relay.transform.InferType()(mod)
mutated_mod['func_16335'] = func_16335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16335_call = mutated_mod.get_global_var('func_16335')
var_16337 = relay.var("var_16337", dtype = "float32", shape = (72,))#candidate|16337|(72,)|var|float32
var_16338 = relay.var("var_16338", dtype = "uint64", shape = (30, 9))#candidate|16338|(30, 9)|var|uint64
call_16336 = func_16335_call(var_16337,var_16338,)
output = call_16336
func_16339 = relay.Function([var_16337,var_16338,], output)
mutated_mod['func_16339'] = func_16339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12952_call = mod.get_global_var('func_12952')
func_12953_call = mutated_mod.get_global_var('func_12953')
call_16355 = func_12952_call()
call_16356 = func_12952_call()
output = relay.Tuple([call_16355,])
output2 = relay.Tuple([call_16356,])
func_16358 = relay.Function([], output)
mod['func_16358'] = func_16358
mod = relay.transform.InferType()(mod)
mutated_mod['func_16358'] = func_16358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16358_call = mutated_mod.get_global_var('func_16358')
call_16359 = func_16358_call()
output = call_16359
func_16360 = relay.Function([], output)
mutated_mod['func_16360'] = func_16360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10370_call = mod.get_global_var('func_10370')
func_10372_call = mutated_mod.get_global_var('func_10372')
call_16377 = func_10370_call()
call_16378 = func_10370_call()
func_9243_call = mod.get_global_var('func_9243')
func_9247_call = mutated_mod.get_global_var('func_9247')
const_16396 = relay.const([[6,8,9,-6,-3,-3,-10,8,8,-3,-6,5,-9,9,-3,-1,-4,-3,-7,5,1,-8,7,-5,4,5,4,-1,9,7,3,-2,-7,10,-3,-3,3,5,9,-6,-9,-2,-8,-8,-5,8,-2,-4,7,-2,1,5,1,3,-4,-3,-9,-8,8,-4,10,10,4,3,-2,-4,-4,-6,-10,3,7,9,-2,2,2,4,2,7,10,9,-9,-4,1,6,-8,-7,8,2,2,10,2,9,-8,9,-6,-1,-9,-8,4],[2,-4,6,5,-9,-1,-3,5,-8,6,-4,-6,-9,-9,-7,-10,2,10,-5,-7,3,7,3,-6,6,8,8,4,-3,6,-3,-1,-10,6,-7,4,-1,4,1,-6,-5,7,-10,-3,-2,-3,5,2,6,-5,-1,10,7,7,-7,-7,7,8,-4,2,-9,-3,-10,4,-4,-8,-5,6,-2,2,-6,-2,2,2,-10,-2,-9,7,-9,-5,9,6,10,6,7,-3,-8,5,6,3,-2,-9,9,10,5,1,-7,-8,10],[-2,5,-9,-4,-10,-4,8,-10,-6,-1,9,2,-1,-6,9,-6,-5,8,-1,-10,3,-8,9,8,-10,-2,8,-6,4,-10,2,-3,7,10,-6,-3,-4,1,-10,1,-9,-9,-8,6,9,-6,-3,5,-2,2,-7,8,5,-5,8,6,-10,4,10,-9,-7,-9,3,4,10,5,8,-9,3,-1,1,-8,-4,8,-4,4,-1,6,8,-1,-4,8,-8,-9,4,-1,9,7,-6,9,1,3,-10,-5,-9,-9,-1,-6,-7],[-1,7,7,3,-1,-8,-1,8,10,-5,6,-1,6,5,2,-9,4,-7,3,-4,1,9,-10,5,2,-3,1,-5,-8,3,2,-5,9,5,1,8,-1,1,-1,1,4,4,-10,6,-9,9,2,-6,-3,-5,-2,4,10,-5,4,6,10,5,1,9,2,-9,-10,-7,8,7,5,-3,9,-5,6,10,5,7,9,-6,-3,-7,-2,6,-6,-9,-4,-3,-4,5,4,-9,3,5,-3,-6,5,-9,-8,8,8,5,4],[7,8,10,-9,1,5,5,6,-4,5,-10,8,6,-5,-10,-1,-7,-8,1,7,9,-7,-10,6,-1,-9,3,-9,5,-2,-3,3,1,10,-1,3,9,-6,10,4,10,-4,-3,4,7,7,8,-1,-1,1,7,4,4,4,-2,7,4,-7,-4,-8,-6,10,-3,2,-3,-8,1,-6,-3,-10,1,-7,9,-3,-2,4,6,-1,-7,6,10,-10,-7,-5,-7,3,4,-4,-3,-6,9,-4,-3,3,10,10,3,-10,-6],[-9,1,10,4,-8,2,2,5,-4,3,-10,9,4,8,4,-2,-7,-7,-8,-3,-7,-2,6,-5,6,10,-2,6,4,-1,-9,1,5,5,8,10,4,-4,-1,-3,-8,5,-5,-5,6,-5,-8,1,6,-7,-7,-2,10,3,7,-8,-10,-7,1,-4,-8,2,-7,9,2,-10,2,-1,-9,2,4,-3,3,1,-1,-3,-4,-7,9,-6,4,1,1,-8,8,-6,-10,-7,8,6,-1,-2,-3,9,7,-4,-3,-6,-7],[-5,-4,7,10,6,-2,-9,3,-1,2,-10,-5,-1,7,3,2,9,8,10,2,8,-10,6,-10,-2,6,3,-6,10,-10,9,2,7,-6,10,5,-9,-4,-10,3,-7,6,10,4,5,-6,5,-2,8,1,3,5,-1,-10,-7,5,-4,4,10,8,2,-2,10,1,-2,-7,8,-1,-4,10,-6,5,-5,-5,-9,-2,5,-9,-8,6,-5,-6,-6,2,8,3,-10,-3,9,1,1,8,9,-2,2,-8,-10,9,-1]], dtype = "uint64")#candidate|16396|(7, 99)|const|uint64
call_16395 = relay.TupleGetItem(func_9243_call(relay.reshape(const_16396.astype('uint64'), [7, 9, 11]), relay.reshape(const_16396.astype('uint64'), [7, 9, 11]), ), 2)
call_16397 = relay.TupleGetItem(func_9247_call(relay.reshape(const_16396.astype('uint64'), [7, 9, 11]), relay.reshape(const_16396.astype('uint64'), [7, 9, 11]), ), 2)
output = relay.Tuple([call_16377,call_16395,const_16396,])
output2 = relay.Tuple([call_16378,call_16397,const_16396,])
func_16406 = relay.Function([], output)
mod['func_16406'] = func_16406
mod = relay.transform.InferType()(mod)
output = func_16406()
func_16407 = relay.Function([], output)
mutated_mod['func_16407'] = func_16407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13593_call = mod.get_global_var('func_13593')
func_13595_call = mutated_mod.get_global_var('func_13595')
call_16432 = func_13593_call()
call_16433 = func_13593_call()
output = relay.Tuple([call_16432,])
output2 = relay.Tuple([call_16433,])
func_16446 = relay.Function([], output)
mod['func_16446'] = func_16446
mod = relay.transform.InferType()(mod)
output = func_16446()
func_16447 = relay.Function([], output)
mutated_mod['func_16447'] = func_16447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10095_call = mod.get_global_var('func_10095')
func_10096_call = mutated_mod.get_global_var('func_10096')
call_16550 = func_10095_call()
call_16551 = func_10095_call()
func_13055_call = mod.get_global_var('func_13055')
func_13057_call = mutated_mod.get_global_var('func_13057')
call_16553 = relay.TupleGetItem(func_13055_call(relay.reshape(call_16550.astype('float32'), [5, 4, 7])), 2)
call_16554 = relay.TupleGetItem(func_13057_call(relay.reshape(call_16550.astype('float32'), [5, 4, 7])), 2)
output = relay.Tuple([call_16550,call_16553,])
output2 = relay.Tuple([call_16551,call_16554,])
func_16556 = relay.Function([], output)
mod['func_16556'] = func_16556
mod = relay.transform.InferType()(mod)
output = func_16556()
func_16557 = relay.Function([], output)
mutated_mod['func_16557'] = func_16557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13080_call = mod.get_global_var('func_13080')
func_13081_call = mutated_mod.get_global_var('func_13081')
call_16575 = relay.TupleGetItem(func_13080_call(), 1)
call_16576 = relay.TupleGetItem(func_13081_call(), 1)
func_9963_call = mod.get_global_var('func_9963')
func_9966_call = mutated_mod.get_global_var('func_9966')
const_16581 = relay.const([7.937835,3.437846,9.162204,3.670793,1.596407,3.370209,0.664236,-7.821237,-9.051892,-6.571462,-1.395516,-3.320180,7.506501,8.936292,1.524253,5.695930,-8.638197,-4.169630,-1.242751,9.356063,-0.037848,5.823183,1.284420,9.218054,8.133156,-2.591933,-7.845530,7.895806,-3.351050,-6.912884,4.736395,4.055385,-3.187132,8.601498,1.895823,5.936599,1.416571,-6.389213,-4.529126,7.270414,2.413028,8.171153,-1.776053,9.293872,1.503648,3.852231,9.283997,-2.031238,-4.109188,-0.684244,-0.190801,2.300640,-1.017207,-4.398535,-7.053432,3.524873,-6.612077,0.686193,3.059927,4.153800,8.920220,0.550523,4.553414,-0.960454,5.556456,-3.419408,-9.189599,-0.931631,2.642599,-8.343599,-7.022513,1.954849,-7.190078,9.247338,-2.012079,6.949683,0.797638,-6.165943,-1.665840,8.597119,-7.938265,-3.399093,5.151141,0.757170,8.890009,-3.726047,2.775930,-7.405991,1.452988,6.774206,2.608256,9.878272,3.098306,7.654561,-5.231907,-7.283806,-0.141579,-2.340786,4.885774,-5.879092,8.327705,-0.462340,0.922890,-6.509230,-5.600472,-0.001016,-7.696389,0.371068,4.104305,-6.704962,5.703796,-2.118549,3.056275,9.908062,1.622353,1.391381,3.394516,5.760990,8.909939,1.598077,-0.432185,4.866111,6.467223,-8.459541,1.629073,-1.514740,5.081927,5.910017,9.863453,8.935617,-7.822628,1.555987,-6.076363,-3.586771,9.205063,-6.108413,8.132482,-1.860845,-7.742757,-0.714317,9.275134,-1.428156,0.233825,8.987064,-8.965799,4.969993,-0.069960,-3.500433,-7.113401,-2.916627,-6.728199,7.646999,-6.998743,-1.351839,-7.705634,-3.625459,-1.671707,2.056472,-9.161589,-7.294224,1.353458,-0.628541,5.860671,9.669852,6.185781,2.711899,-8.999628,-9.126915,-5.974993,1.721671,8.356436,7.723611,-8.080274,4.880853,9.677059,6.615223,-9.767152,-5.286012,6.391438,7.384182,1.465010,-6.460486,8.917998,-1.260793,-2.002468,-4.747046,-1.429812,8.186029,-1.180931,4.833236,-6.661242,5.877594,-6.106005,-9.970612,5.733536,5.012325,-8.186134,-2.157679,-4.576079,-0.519426,-0.192616,-5.284847,-6.555490,3.219090,-1.625153,-8.906596,0.746784,3.438778,-1.629262,9.314170,4.575754,-4.614821,6.403715,7.589555,-2.796035,-0.474474,2.887603,3.928491,-9.989840,-8.470599,7.152305,5.145649,-1.539060,2.155603,8.606697,-0.061988,3.064895,-9.918816,5.776815,-6.947604,3.082495,-1.875275,0.558747,-9.364881,-9.840818,-5.221297,-0.523929,1.656306,5.429431,7.081427,5.851648,3.933860,-7.516564,2.609043,-2.987236,0.144528,-0.070970,-1.907456,8.425164,8.826707,7.367693,-5.242136,-7.988639,6.423032,-4.766890,-0.431490,-6.883882,-0.682877,7.752727,1.096511,2.220686,-3.407793,-0.710323,7.344817,0.268290,-5.139013,-9.282225,-7.017537,-4.641840,-0.853902,-8.375122,-7.976997,9.030209,-2.159596,9.611827,-6.222863,-6.357223,-3.618450,8.835215,4.086329,9.476247,3.361212,-3.440536,-1.079958,2.579638,5.647343,8.797347,8.286377,-9.396631,6.713154,7.752484,-6.563635,-0.553823,-9.618796,-0.681937,7.179268,0.898429,8.108932,-2.390225,-4.992932,5.417722,-5.395431,-8.097795,0.558360,4.946110,-3.939959,-1.274615,-1.099053,9.210794,-4.258499,-4.762598,3.017544,-1.511181,3.767410,-5.127607,8.545314,2.246955,-9.931430,1.887050,-8.825939,1.729785,6.104520,2.640887,-1.396666,-4.869597,-2.349193,-5.127077,2.241382,2.897871,-2.101010], dtype = "float32")#candidate|16581|(330,)|const|float32
call_16580 = relay.TupleGetItem(func_9963_call(relay.reshape(call_16575.astype('uint8'), [140,]), relay.reshape(const_16581.astype('float32'), [330,]), ), 2)
call_16582 = relay.TupleGetItem(func_9966_call(relay.reshape(call_16575.astype('uint8'), [140,]), relay.reshape(const_16581.astype('float32'), [330,]), ), 2)
func_10811_call = mod.get_global_var('func_10811')
func_10813_call = mutated_mod.get_global_var('func_10813')
call_16588 = relay.TupleGetItem(func_10811_call(), 2)
call_16589 = relay.TupleGetItem(func_10813_call(), 2)
func_11278_call = mod.get_global_var('func_11278')
func_11280_call = mutated_mod.get_global_var('func_11280')
call_16590 = func_11278_call()
call_16591 = func_11278_call()
uop_16603 = relay.acosh(call_16590.astype('float64')) # shape=(1, 693)
uop_16605 = relay.acosh(call_16591.astype('float64')) # shape=(1, 693)
uop_16606 = relay.atan(uop_16603.astype('float32')) # shape=(1, 693)
uop_16608 = relay.atan(uop_16605.astype('float32')) # shape=(1, 693)
func_10741_call = mod.get_global_var('func_10741')
func_10742_call = mutated_mod.get_global_var('func_10742')
call_16611 = relay.TupleGetItem(func_10741_call(), 0)
call_16612 = relay.TupleGetItem(func_10742_call(), 0)
func_11006_call = mod.get_global_var('func_11006')
func_11008_call = mutated_mod.get_global_var('func_11008')
const_16615 = relay.const(5, dtype = "int8")#candidate|16615|()|const|int8
call_16614 = relay.TupleGetItem(func_11006_call(relay.reshape(const_16615.astype('int8'), [])), 0)
call_16616 = relay.TupleGetItem(func_11008_call(relay.reshape(const_16615.astype('int8'), [])), 0)
func_13462_call = mod.get_global_var('func_13462')
func_13465_call = mutated_mod.get_global_var('func_13465')
var_16620 = relay.var("var_16620", dtype = "float32", shape = (3, 4))#candidate|16620|(3, 4)|var|float32
call_16619 = relay.TupleGetItem(func_13462_call(relay.reshape(var_16620.astype('float32'), [3, 1, 4])), 0)
call_16621 = relay.TupleGetItem(func_13465_call(relay.reshape(var_16620.astype('float32'), [3, 1, 4])), 0)
bop_16622 = relay.multiply(uop_16603.astype('uint8'), const_16615.astype('uint8')) # shape=(1, 693)
bop_16625 = relay.multiply(uop_16605.astype('uint8'), const_16615.astype('uint8')) # shape=(1, 693)
func_12422_call = mod.get_global_var('func_12422')
func_12424_call = mutated_mod.get_global_var('func_12424')
call_16626 = relay.TupleGetItem(func_12422_call(), 0)
call_16627 = relay.TupleGetItem(func_12424_call(), 0)
func_12624_call = mod.get_global_var('func_12624')
func_12625_call = mutated_mod.get_global_var('func_12625')
call_16628 = relay.TupleGetItem(func_12624_call(), 0)
call_16629 = relay.TupleGetItem(func_12625_call(), 0)
bop_16649 = relay.subtract(bop_16622.astype('int32'), relay.reshape(uop_16606.astype('int32'), relay.shape_of(bop_16622))) # shape=(1, 693)
bop_16652 = relay.subtract(bop_16625.astype('int32'), relay.reshape(uop_16608.astype('int32'), relay.shape_of(bop_16625))) # shape=(1, 693)
output = relay.Tuple([call_16575,call_16580,const_16581,call_16588,call_16611,call_16614,call_16619,var_16620,call_16626,call_16628,bop_16649,])
output2 = relay.Tuple([call_16576,call_16582,const_16581,call_16589,call_16612,call_16616,call_16621,var_16620,call_16627,call_16629,bop_16652,])
func_16664 = relay.Function([var_16620,], output)
mod['func_16664'] = func_16664
mod = relay.transform.InferType()(mod)
mutated_mod['func_16664'] = func_16664
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16665 = relay.var("var_16665", dtype = "float32", shape = (3, 4))#candidate|16665|(3, 4)|var|float32
func_16664_call = mutated_mod.get_global_var('func_16664')
call_16666 = func_16664_call(var_16665)
output = call_16666
func_16667 = relay.Function([var_16665], output)
mutated_mod['func_16667'] = func_16667
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16752 = relay.var("var_16752", dtype = "uint64", shape = ())#candidate|16752|()|var|uint64
const_16753 = relay.const([[[-7,7,-4,10,-2,-6,-2,-4,-10,2,2,5],[9,6,1,7,-6,-6,3,-10,2,-3,5,-3],[-10,4,-4,4,8,-5,2,9,-10,8,-4,10],[8,-8,3,-7,6,-5,-10,-6,-10,7,4,-2],[10,8,10,-10,3,3,-1,9,10,2,2,8]],[[8,6,1,8,7,5,-6,-8,-5,5,1,-5],[-7,-1,-4,10,4,6,3,-7,10,8,9,4],[-8,1,-4,-10,-1,7,2,9,-5,-3,9,-7],[-4,-4,2,6,-1,-9,3,-6,-4,2,-2,4],[-6,-6,-7,-3,-1,-5,-6,-2,9,-2,3,-9]],[[-10,-3,-1,-2,5,9,2,-4,-8,-5,-1,-1],[-10,-1,10,-10,-10,-7,-1,6,-8,2,7,-4],[-7,9,-5,6,-5,8,6,8,-10,-7,-1,-9],[-1,8,8,-5,10,-3,-6,2,-6,7,-8,-10],[-7,1,3,8,2,-2,-9,-7,10,-5,7,-8]],[[-8,6,7,6,4,-3,-9,1,-6,-4,-1,-1],[9,9,-5,-10,1,1,-2,3,4,5,4,9],[-8,-2,-5,1,-1,1,-7,-9,7,-6,6,-6],[-3,6,-6,7,9,6,4,-8,-6,-1,2,-9],[1,-9,-7,7,-8,7,-9,2,4,2,3,-3]],[[10,2,-7,2,-8,-2,8,5,4,3,-8,1],[-3,2,-4,-7,-2,-6,-9,4,9,-2,-7,4],[1,-7,4,-3,-3,-5,1,-1,10,-1,-6,-10],[-2,4,1,5,7,3,1,8,-2,-3,6,7],[3,-7,-2,6,9,-7,1,-4,-3,-2,2,10]],[[-5,-8,-9,9,2,3,-4,10,-2,-6,9,3],[-5,-6,-7,3,-3,2,-4,6,-6,-10,1,-4],[6,-7,-9,7,-7,3,3,-7,6,8,10,-6],[6,-7,-5,-1,-2,-6,-3,5,5,-6,-5,-5],[-2,-1,-9,-1,10,-4,-10,7,-7,2,-5,-2]],[[6,-1,10,-2,-10,-7,7,-6,5,-5,8,4],[5,5,-5,-4,-2,-2,10,-7,6,-9,-9,1],[8,-8,5,10,-9,2,2,3,-1,-8,-8,3],[-8,-6,-9,2,2,-4,3,-9,-10,4,-8,-6],[3,-2,-9,-6,7,-4,10,6,6,-9,5,-9]],[[10,9,-4,9,-8,-10,-5,-4,10,-1,-5,-10],[-8,-10,-6,1,4,-6,-4,-6,5,9,-4,-4],[-2,5,-3,-6,6,5,-7,-10,4,-1,-10,-1],[5,-6,-3,-7,5,-2,-9,-1,-4,-8,3,-4],[-5,-7,2,-1,10,-7,-8,-9,6,-3,-10,9]],[[1,7,-7,-2,3,-7,-7,-1,-6,9,-3,-8],[8,6,-6,-3,4,10,8,4,-1,-8,9,-5],[-8,-10,-5,-1,-2,2,-2,4,3,-9,-5,-4],[-2,-5,2,8,6,-2,-10,3,-10,1,-8,-1],[-10,3,1,-2,-2,6,8,-3,-5,5,-7,-7]],[[-3,-10,5,3,-10,-1,-6,6,1,-1,9,3],[-6,-9,-7,10,7,3,1,-7,4,2,2,-9],[1,10,-1,-1,-3,10,9,2,-1,-9,-2,-1],[-6,-8,2,-9,-7,-2,4,-7,-6,-9,-8,2],[-5,-10,-9,5,8,2,-5,3,-2,2,10,4]],[[-6,-2,3,4,7,7,6,1,-9,4,-4,6],[3,3,-7,9,10,-8,5,1,7,-8,-1,-9],[-2,6,1,3,10,-5,-4,10,6,-5,1,5],[-5,1,3,-8,-2,-2,-6,6,2,-3,-6,10],[-1,4,-2,-10,-3,-5,-2,3,7,6,2,-9]],[[3,-3,-5,2,-8,7,-7,-7,9,-9,4,4],[9,7,4,-8,-10,-8,3,-2,-8,9,6,-8],[-9,-6,2,6,-2,5,-3,-2,3,9,-10,7],[7,-3,-3,10,1,4,-7,-5,5,6,-2,-10],[-8,2,-9,-6,-6,-1,-4,-2,-8,8,-9,8]]], dtype = "uint64")#candidate|16753|(12, 5, 12)|const|uint64
bop_16754 = relay.add(var_16752.astype('uint64'), const_16753.astype('uint64')) # shape=(12, 5, 12)
output = relay.Tuple([bop_16754,])
output2 = relay.Tuple([bop_16754,])
F = relay.Function([var_16752,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_16752,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

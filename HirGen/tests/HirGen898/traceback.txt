==========mod==========
#[version = "0.0.5"]
def @func_15029() -> (Tensor[(5, 4, 7), uint8],) {
  %0 = @func_11351() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %1 = %0.0;
  (%1,)
}

def @func_11006(%var_11003: int8) -> (Tensor[(140), uint8], Tensor[(140), uint8], int8, int8, Tensor[(105, 2), int8]) {
  %2 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %3 = cast(%var_11003, dtype="int8") /* ty=int8 */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(105, 2), int8] */, dtype="int8") /* ty=Tensor[(105, 2), int8] */;
  %5 = reshape(%3, newshape=[]) /* ty=int8 */;
  %6 = reshape(%4, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %7 = @func_4733(%5, %6) /* ty=(Tensor[(15, 13, 15), float32], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
  %8 = @func_10095() /* ty=Tensor[(140), uint8] */;
  %9 = %2.0;
  %10 = %7.2;
  (%8, %9, %10, %var_11003, meta[relay.Constant][0] /* ty=Tensor[(105, 2), int8] */)
}

def @func_10095() -> Tensor[(140), uint8] {
  %11 = @func_9640() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) */;
  %11.1
}

def @func_13819() -> Tensor[(10, 2, 8), float64] {
  %12 = @func_13666() /* ty=(Tensor[(10, 2, 8), float64],) */;
  %12.0
}

def @func_11278() -> Tensor[(1, 693), uint64] {
  %13 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %13.2
}

def @func_12257() -> (Tensor[(140), uint8],) {
  %14 = @func_12052() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
  %15 = %14.0;
  (%15,)
}

def @func_14350() -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
  %16 = @func_13260() /* ty=(Tensor[(140), uint8], Tensor[(15, 1, 14), bool], int8, Tensor[(5, 4, 7), bool]) */;
  %17 = @func_11213() /* ty=Tensor[(5, 4, 7), uint8] */;
  %18 = cast(%17, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
  %19 = %16.0;
  %20 = log10(%18) /* ty=Tensor[(5, 4, 7), float64] */;
  (%19, %20)
}

def @func_4755(%var_4744: Tensor[(10, 5, 14), uint64], %var_4749: Tensor[(11, 55), float32]) -> (Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) {
  %21 = cast(%var_4744, dtype="uint64") /* ty=Tensor[(10, 5, 14), uint64] */;
  %22 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(10, 5, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 5, 14), uint64] */, dtype="uint64") /* ty=Tensor[(10, 5, 14), uint64] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %25 = cast(%var_4749, dtype="float32") /* ty=Tensor[(11, 55), float32] */;
  %26 = reshape(%25, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), float32] */;
  %27 = subtract(%23, %24) /* ty=Tensor[(10, 5, 14), uint64] */;
  %28 = @func_4071(%26) /* ty=Tensor[(11, 5, 11), float32] */;
  (%27, %28, %var_4749)
}

def @func_13462(%var_13455: Tensor[(3, 1, 4), float32]) -> (Tensor[(3, 1, 4), float32],) {
  %29 = cast(%var_13455, dtype="float32") /* ty=Tensor[(3, 1, 4), float32] */;
  %30 = exp(%29) /* ty=Tensor[(3, 1, 4), float32] */;
  (%30,)
}

def @func_11839() -> (Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) {
  %31 = @func_11200() /* ty=(Tensor[(5, 4, 7), bool],) */;
  %32 = cast(meta[relay.Constant][2] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %34 = reshape(%32, newshape=[]) /* ty=int8 */;
  %35 = reshape(%33, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), int8] */;
  %36 = %31.0;
  %37 = @func_1708(%34, %35) /* ty=Tensor[(15, 1, 14), bool] */;
  (%36, %37, meta[relay.Constant][2] /* ty=int8 */, meta[relay.Constant][3] /* ty=Tensor[(210), int8] */)
}

def @func_10525() -> Tensor[(1, 693), uint64] {
  %38 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %38.2
}

def @func_14831(%var_14797: Tensor[(700), uint64]) -> (Tensor[(140), uint8], Tensor[(5, 4, 7), int16], Tensor[(700), uint64], Tensor[(25), float64], int8, Tensor[(140), uint8], Tensor[(140), uint8]) {
  %39 = cast(%var_14797, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %40 = cast(meta[relay.Constant][4] /* ty=Tensor[(25), float64] */, dtype="float64") /* ty=Tensor[(25), float64] */;
  %41 = cast(meta[relay.Constant][5] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %42 = reshape(%39, newshape=[700]) /* ty=Tensor[(700), uint64] */;
  %43 = reshape(%40, newshape=[25]) /* ty=Tensor[(25), float64] */;
  %44 = reshape(%41, newshape=[]) /* ty=int8 */;
  %45 = @func_9835(%42, %43, %44) /* ty=(Tensor[(140), uint8], Tensor[(56), bool], Tensor[(2, 336), bool], Tensor[(605, 700), uint64], Tensor[(11, 5, 11), float32], Tensor[(5, ?, 5), bool], Tensor[(25), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(210), int8], Tensor[(11, 5, 11), float32], Tensor[(5, 4, 7), int16]) */;
  %46 = @func_14132() /* ty=Tensor[(140), uint8] */;
  %47 = %45.12;
  %48 = @func_10704() /* ty=Tensor[(140), uint8] */;
  %49 = @func_14487() /* ty=Tensor[(140), uint8] */;
  (%46, %47, %var_14797, meta[relay.Constant][4] /* ty=Tensor[(25), float64] */, meta[relay.Constant][5] /* ty=int8 */, %48, %49)
}

def @func_15160() -> (Tensor[(140), uint8], Tensor[(11, 11, 11), float32]) {
  %50 = @func_12809() /* ty=(Tensor[(140), uint8],) */;
  %51 = @func_9640() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) */;
  %52 = %50.0;
  %53 = %51.0;
  (%52, %53)
}

def @func_15116() -> (Tensor[(5, 4, 7), uint8],) {
  %54 = @func_12952() /* ty=Tensor[(5, 4, 7), uint8] */;
  (%54,)
}

def @func_12624() -> (Tensor[(5, 4, 7), uint8],) {
  %55 = @func_11642() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %56 = %55.0;
  (%56,)
}

def @func_14571(%var_14557: Tensor[(700), uint64]) -> (Tensor[(5, 4, 7), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32]) {
  %57 = @func_11101() /* ty=(Tensor[(5, 4, 7), float64],) */;
  %58 = cast(%var_14557, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %59 = cast(meta[relay.Constant][6] /* ty=Tensor[(605), float32] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %60 = reshape(%58, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint64] */;
  %61 = reshape(%59, newshape=[11, 55]) /* ty=Tensor[(11, 55), float32] */;
  %62 = @func_4755(%60, %61) /* ty=(Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) */;
  %63 = %57.0;
  %64 = %62.2;
  (%63, %64, %var_14557, meta[relay.Constant][6] /* ty=Tensor[(605), float32] */)
}

def @func_9835(%var_9758: Tensor[(700), uint64], %var_9793: Tensor[(25), float64], %var_9812: int8) -> (Tensor[(140), uint8], Tensor[(56), bool], Tensor[(2, 336), bool], Tensor[(605, 700), uint64], Tensor[(11, 5, 11), float32], Tensor[(5, ?, 5), bool], Tensor[(25), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(210), int8], Tensor[(11, 5, 11), float32], Tensor[(5, 4, 7), int16]) {
  %65 = @func_9640() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) */;
  %66 = cast(%var_9758, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %67 = cast(meta[relay.Constant][9] /* ty=Tensor[(605, 1), float32] */, dtype="uint64") /* ty=Tensor[(605, 1), uint64] */;
  %68 = cast(%var_9758, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %69 = cast(meta[relay.Constant][9] /* ty=Tensor[(605, 1), float32] */, dtype="float32") /* ty=Tensor[(605, 1), float32] */;
  %70 = reshape(%68, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint64] */;
  %71 = reshape(%69, newshape=[11, 55]) /* ty=Tensor[(11, 55), float32] */;
  %72 = @func_4755(%70, %71) /* ty=(Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) */;
  %73 = cast(%var_9793, dtype="float64") /* ty=Tensor[(25), float64] */;
  %74 = reshape(%73, newshape=[5, 1, 5]) /* ty=Tensor[(5, 1, 5), float64] */;
  %75 = @func_5816(%74) /* ty=(Tensor[(5, ?, 5), bool],) */;
  %76 = cast(meta[relay.Constant][10] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %77 = cast(meta[relay.Constant][11] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %78 = reshape(%76, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %79 = reshape(%77, newshape=[6, 11, 5]) /* ty=Tensor[(6, 11, 5), float32] */;
  %80 = @func_2703(%78, %79) /* ty=(Tensor[(6, 11, 5), float32], Tensor[(18, 1), uint64], Tensor[(15, 1, 14), bool], Tensor[(210), int8], Tensor[(9, 1, 2), bool]) */;
  %81 = cast(%var_9812, dtype="int8") /* ty=int8 */;
  %82 = %80.2;
  %83 = cast(%82, dtype="int8") /* ty=Tensor[(15, 1, 14), int8] */;
  %84 = reshape(%81, newshape=[]) /* ty=int8 */;
  %85 = reshape(%83, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %86 = @func_4733(%84, %85) /* ty=(Tensor[(15, 13, 15), float32], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
  %87 = cast(%var_9758, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %88 = cast(meta[relay.Constant][9] /* ty=Tensor[(605, 1), float32] */, dtype="float32") /* ty=Tensor[(605, 1), float32] */;
  %89 = reshape(%87, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint64] */;
  %90 = reshape(%88, newshape=[11, 55]) /* ty=Tensor[(11, 55), float32] */;
  %91 = @func_4755(%89, %90) /* ty=(Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) */;
  %92 = cast(meta[relay.Constant][7] /* ty=Tensor[(56), bool] */, dtype="bool") /* ty=Tensor[(56), bool] */;
  %93 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 336), bool] */, dtype="bool") /* ty=Tensor[(2, 336), bool] */;
  %94 = cast(%var_9758, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %95 = cast(meta[relay.Constant][9] /* ty=Tensor[(605, 1), float32] */, dtype="float32") /* ty=Tensor[(605, 1), float32] */;
  %96 = %65.1;
  %97 = cast(%96, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %98 = reshape(%92, newshape=[1, 7, 8]) /* ty=Tensor[(1, 7, 8), bool] */;
  %99 = reshape(%93, newshape=[12, 7, 8]) /* ty=Tensor[(12, 7, 8), bool] */;
  %100 = reshape(%94, newshape=[700]) /* ty=Tensor[(700), uint64] */;
  %101 = reshape(%95, newshape=[605]) /* ty=Tensor[(605), float32] */;
  %102 = reshape(%97, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %103 = @func_8829(%98, %99, %100, %101, %102) /* ty=(Tensor[(12, 7, 8), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
  %104 = %103.4;
  %105 = cast(%104, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
  %106 = sqrt(%105) /* ty=Tensor[(5, 4, 7), float64] */;
  %107 = cast(%106, dtype="int16") /* ty=Tensor[(5, 4, 7), int16] */;
  %108 = cast(%var_9812, dtype="int16") /* ty=int16 */;
  %109 = minimum(%66, %67) /* ty=Tensor[(605, 700), uint64] */;
  %110 = %72.1;
  %111 = %75.0;
  %112 = %86.3;
  %113 = %91.1;
  %114 = add(%107, %108) /* ty=Tensor[(5, 4, 7), int16] */;
  (%96, meta[relay.Constant][7] /* ty=Tensor[(56), bool] */, meta[relay.Constant][8] /* ty=Tensor[(2, 336), bool] */, %109, %110, %111, %var_9793, %82, meta[relay.Constant][10] /* ty=Tensor[(66), float32] */, meta[relay.Constant][11] /* ty=Tensor[(330), float32] */, %112, %113, %114)
}

def @func_10704() -> Tensor[(140), uint8] {
  @func_10370() /* ty=Tensor[(140), uint8] */
}

def @func_13055(%var_13048: Tensor[(5, 4, 7), float32]) -> (Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
  %115 = @func_11892() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float32]) */;
  %116 = %115.1;
  %117 = cast(%var_13048, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
  %118 = shape_of(%116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(%116, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %121 = @func_11213() /* ty=Tensor[(5, 4, 7), uint8] */;
  %122 = @func_10095() /* ty=Tensor[(140), uint8] */;
  %123 = mod(%119, %120) /* ty=Tensor[(5, 4, 7), float64] */;
  (%121, %122, %123)
}

def @func_13642() -> (Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), uint8], Tensor[(2, 2, 2), float64], Tensor[(2, 4), float64]) {
  %124 = @func_12624() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %125 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 4), float64] */, dtype="float64") /* ty=Tensor[(2, 4), float64] */;
  %126 = reshape(%125, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float64] */;
  %127 = @func_11519(%126) /* ty=(Tensor[(2, 2, 2), float64],) */;
  %128 = @func_12190() /* ty=Tensor[(5, 4, 7), float32] */;
  %129 = %124.0;
  %130 = %127.0;
  (%128, %129, %130, meta[relay.Constant][12] /* ty=Tensor[(2, 4), float64] */)
}

def @func_16664(%var_16620: Tensor[(3, 4), float32]) -> (Tensor[(5, 4, 7), float32], Tensor[(1080), uint16], Tensor[(330), float32], Tensor[(160), float64], Tensor[(5, 4, 7), float64], Tensor[(140), uint8], Tensor[(3, 1, 4), float32], Tensor[(3, 4), float32], Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), uint8], Tensor[(?, 693), int32]) {
  %131 = @func_13080() /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), float32]) */;
  %132 = %131.1;
  %133 = cast(%132, dtype="uint8") /* ty=Tensor[(5, 4, 7), uint8] */;
  %134 = cast(meta[relay.Constant][13] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %135 = reshape(%133, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %136 = reshape(%134, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %137 = @func_9963(%135, %136) /* ty=(Tensor[(693), uint64], Tensor[(9, 15, 8), uint16], Tensor[(1080), uint16], Tensor[(140), uint8], Tensor[(16, 9, 1), float64], Tensor[(144), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32]) */;
  %138 = @func_10811() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(10, 2, 8), float64], Tensor[(160), float64]) */;
  %139 = @func_10741() /* ty=(Tensor[(5, 4, 7), float64],) */;
  %140 = cast(meta[relay.Constant][14] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %141 = reshape(%140, newshape=[]) /* ty=int8 */;
  %142 = @func_11006(%141) /* ty=(Tensor[(140), uint8], Tensor[(140), uint8], int8, int8, Tensor[(105, 2), int8]) */;
  %143 = cast(%var_16620, dtype="float32") /* ty=Tensor[(3, 4), float32] */;
  %144 = reshape(%143, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
  %145 = @func_13462(%144) /* ty=(Tensor[(3, 1, 4), float32],) */;
  %146 = @func_12422() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %147 = @func_12624() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %148 = @func_11278() /* ty=Tensor[(1, 693), uint64] */;
  %149 = cast(%148, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
  %150 = acosh(%149) /* ty=Tensor[(1, 693), float64] */;
  %151 = cast(%150, dtype="uint8") /* ty=Tensor[(1, 693), uint8] */;
  %152 = cast(meta[relay.Constant][14] /* ty=int8 */, dtype="uint8") /* ty=uint8 */;
  %153 = multiply(%151, %152) /* ty=Tensor[(1, 693), uint8] */;
  %154 = cast(%150, dtype="float32") /* ty=Tensor[(1, 693), float32] */;
  %155 = atan(%154) /* ty=Tensor[(1, 693), float32] */;
  %156 = cast(%155, dtype="int32") /* ty=Tensor[(1, 693), int32] */;
  %157 = shape_of(%153, dtype="int32") /* ty=Tensor[(2), int32] */;
  %158 = cast(%153, dtype="int32") /* ty=Tensor[(1, 693), int32] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %160 = %137.2;
  %161 = %138.2;
  %162 = %139.0;
  %163 = %142.0;
  %164 = %145.0;
  %165 = %146.0;
  %166 = %147.0;
  %167 = subtract(%158, %159) /* ty=Tensor[(?, 693), int32] */;
  (%132, %160, meta[relay.Constant][13] /* ty=Tensor[(330), float32] */, %161, %162, %163, %164, %var_16620, %165, %166, %167)
}

def @func_11942(%var_11927: Tensor[(56, 12), bool]) -> (Tensor[(5, 4, 7), float64], Tensor[(700), uint64], Tensor[(56, 12), bool], Tensor[(1, 605), float32]) {
  %168 = cast(%var_11927, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
  %169 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 605), float32] */, dtype="float32") /* ty=Tensor[(1, 605), float32] */;
  %170 = reshape(%168, newshape=[672]) /* ty=Tensor[(672), bool] */;
  %171 = reshape(%169, newshape=[1, 605]) /* ty=Tensor[(1, 605), float32] */;
  %172 = @func_10464(%170, %171) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(700), uint64], Tensor[(56), bool], Tensor[(672), bool], Tensor[(700), uint64], Tensor[(1, 605), float32]) */;
  %173 = @func_10485() /* ty=Tensor[(5, 4, 7), float64] */;
  %174 = %172.1;
  (%173, %174, %var_11927, meta[relay.Constant][15] /* ty=Tensor[(1, 605), float32] */)
}

def @func_6144(%var_6126: Tensor[(13, 14, 16), int32], %var_6127: Tensor[(13, 14, 16), int32]) -> (Tensor[(13, 14, 16), bool], Tensor[(5, ?, 5), bool], Tensor[(25), float64]) {
  %175 = cast(%var_6127, dtype="bool") /* ty=Tensor[(13, 14, 16), bool] */;
  %176 = shape_of(%var_6126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(%var_6126, dtype="bool") /* ty=Tensor[(13, 14, 16), bool] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %179 = cast(meta[relay.Constant][16] /* ty=Tensor[(25), float64] */, dtype="float64") /* ty=Tensor[(25), float64] */;
  %180 = reshape(%179, newshape=[5, 1, 5]) /* ty=Tensor[(5, 1, 5), float64] */;
  %181 = @func_5816(%180) /* ty=(Tensor[(5, ?, 5), bool],) */;
  %182 = less_equal(%177, %178) /* ty=Tensor[(13, 14, 16), bool] */;
  %183 = %181.0;
  (%182, %183, meta[relay.Constant][16] /* ty=Tensor[(25), float64] */)
}

def @func_1015(%var_998: uint64, %var_999: Tensor[(9, 1, 2), uint64]) -> (Tensor[(9, 1, 2), uint64],) {
  %184 = cast(%var_998, dtype="uint64") /* ty=uint64 */;
  %185 = cast(%var_999, dtype="uint64") /* ty=Tensor[(9, 1, 2), uint64] */;
  %186 = right_shift(%184, %185) /* ty=Tensor[(9, 1, 2), uint64] */;
  (%186,)
}

def @func_16155(%var_16153: Tensor[(40), float32]) -> (Tensor[(140), uint8], Tensor[(10, 2, 8), float64], Tensor[(1, 693), uint64], Tensor[(72), float32], bool, Tensor[(18, 1), uint64], Tensor[(270), uint64], Tensor[(25), float64], Tensor[(2912), int32], Tensor[(4, 10, 1), float32], Tensor[(40), float32]) {
  %187 = @func_13666() /* ty=(Tensor[(10, 2, 8), float64],) */;
  %188 = cast(meta[relay.Constant][17] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %189 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %190 = cast(meta[relay.Constant][18] /* ty=Tensor[(18, 1), uint64] */, dtype="uint64") /* ty=Tensor[(18, 1), uint64] */;
  %191 = cast(meta[relay.Constant][19] /* ty=Tensor[(270), uint64] */, dtype="uint64") /* ty=Tensor[(270), uint64] */;
  %192 = reshape(%188, newshape=[36, 2]) /* ty=Tensor[(36, 2), float32] */;
  %193 = reshape(%189, newshape=[]) /* ty=bool */;
  %194 = reshape(%190, newshape=[18, 1]) /* ty=Tensor[(18, 1), uint64] */;
  %195 = reshape(%191, newshape=[18, 15]) /* ty=Tensor[(18, 15), uint64] */;
  %196 = @func_12590(%192, %193, %194, %195) /* ty=(Tensor[(1, 693), uint64], Tensor[(140), uint8], Tensor[(5, 4, 7), float64], Tensor[(140), uint8], Tensor[(4, 3, 6), bool], Tensor[(36, 2), float32], Tensor[(140), uint8], Tensor[(2, ?, 12), bool], bool, Tensor[(18, 15), float64]) */;
  %197 = cast(meta[relay.Constant][20] /* ty=Tensor[(2912), int32] */, dtype="int32") /* ty=Tensor[(2912), int32] */;
  %198 = cast(meta[relay.Constant][20] /* ty=Tensor[(2912), int32] */, dtype="int32") /* ty=Tensor[(2912), int32] */;
  %199 = reshape(%197, newshape=[13, 14, 16]) /* ty=Tensor[(13, 14, 16), int32] */;
  %200 = reshape(%198, newshape=[13, 14, 16]) /* ty=Tensor[(13, 14, 16), int32] */;
  %201 = @func_6144(%199, %200) /* ty=(Tensor[(13, 14, 16), bool], Tensor[(5, ?, 5), bool], Tensor[(25), float64]) */;
  %202 = cast(False /* ty=bool */, dtype="float32") /* ty=float32 */;
  %203 = cast(%var_16153, dtype="float32") /* ty=Tensor[(40), float32] */;
  %204 = cast(meta[relay.Constant][18] /* ty=Tensor[(18, 1), uint64] */, dtype="uint64") /* ty=Tensor[(18, 1), uint64] */;
  %205 = reshape(%202, newshape=[]) /* ty=float32 */;
  %206 = reshape(%203, newshape=[4, 10, 1]) /* ty=Tensor[(4, 10, 1), float32] */;
  %207 = reshape(%204, newshape=[6, 3]) /* ty=Tensor[(6, 3), uint64] */;
  %208 = @func_13838(%205, %206, %207) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(18, 1), uint64], Tensor[(6, 3), uint64]) */;
  %209 = @func_10095() /* ty=Tensor[(140), uint8] */;
  %210 = %187.0;
  %211 = %196.0;
  %212 = %201.2;
  %213 = %208.0;
  (%209, %210, %211, meta[relay.Constant][17] /* ty=Tensor[(72), float32] */, False /* ty=bool */, meta[relay.Constant][18] /* ty=Tensor[(18, 1), uint64] */, meta[relay.Constant][19] /* ty=Tensor[(270), uint64] */, %212, meta[relay.Constant][20] /* ty=Tensor[(2912), int32] */, %213, %var_16153)
}

def @func_9599(%var_9541: bool, %var_9578: Tensor[(18, 1), uint64]) -> (Tensor[(2, ?, 12), float64], Tensor[(9, 1, 2), uint64], Tensor[(18, 1), uint64], Tensor[(2, ?, 12), bool], Tensor[(2, ?, 12), float64], Tensor[(2, 1, 12), float32]) {
  %214 = cast(%var_9541, dtype="bool") /* ty=bool */;
  %215 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 1, 12), bool] */, dtype="bool") /* ty=Tensor[(2, 1, 12), bool] */;
  %216 = logical_and(%214, %215) /* ty=Tensor[(2, 1, 12), bool] */;
  %217 = cast(%216, dtype="int16") /* ty=Tensor[(2, 1, 12), int16] */;
  %218 = cast(%var_9541, dtype="int16") /* ty=int16 */;
  %219 = right_shift(%217, %218) /* ty=Tensor[(2, 1, 12), int16] */;
  %220 = cast(%219, dtype="float64") /* ty=Tensor[(2, 1, 12), float64] */;
  %221 = erf(%220) /* ty=Tensor[(2, 1, 12), float64] */;
  %222 = cast(%219, dtype="float64") /* ty=Tensor[(2, 1, 12), float64] */;
  %223 = shape_of(%221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(%221, dtype="float64") /* ty=Tensor[(2, 1, 12), float64] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %226 = cast(%var_9541, dtype="uint64") /* ty=uint64 */;
  %227 = cast(%var_9578, dtype="uint64") /* ty=Tensor[(18, 1), uint64] */;
  %228 = reshape(%226, newshape=[]) /* ty=uint64 */;
  %229 = reshape(%227, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), uint64] */;
  %230 = @func_1015(%228, %229) /* ty=(Tensor[(9, 1, 2), uint64],) */;
  %231 = cast(%219, dtype="bool") /* ty=Tensor[(2, 1, 12), bool] */;
  %232 = shape_of(%221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %233 = cast(%221, dtype="bool") /* ty=Tensor[(2, 1, 12), bool] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %235 = cast(%216, dtype="float64") /* ty=Tensor[(2, 1, 12), float64] */;
  %236 = shape_of(%221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%221, dtype="float64") /* ty=Tensor[(2, 1, 12), float64] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %239 = cast(%216, dtype="float32") /* ty=Tensor[(2, 1, 12), float32] */;
  %240 = floor_mod(%224, %225) /* ty=Tensor[(2, ?, 12), float64] */;
  %241 = %230.0;
  %242 = not_equal(%233, %234) /* ty=Tensor[(2, ?, 12), bool] */;
  %243 = floor_divide(%237, %238) /* ty=Tensor[(2, ?, 12), float64] */;
  %244 = atan(%239) /* ty=Tensor[(2, 1, 12), float32] */;
  (%240, %241, %var_9578, %242, %243, %244)
}

def @func_16358() -> (Tensor[(5, 4, 7), uint8],) {
  %245 = @func_12952() /* ty=Tensor[(5, 4, 7), uint8] */;
  (%245,)
}

def @func_16446() -> (Tensor[(140), uint8],) {
  %246 = @func_13593() /* ty=Tensor[(140), uint8] */;
  (%246,)
}

def @func_15697() -> (Tensor[(5, 4, 7), float64],) {
  %247 = @func_13910() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(15, 1, 14), bool]) */;
  %248 = %247.0;
  (%248,)
}

def @func_7733(%var_7660: Tensor[(8, 15, 14), int32], %var_7661: Tensor[(8, 15, 14), int32], %var_7671: int8, %var_7680: Tensor[(15, 16, 14), bool]) -> (Tensor[(8, 15, 14), bool], int8, Tensor[(210), int8], Tensor[(15, 16, 14), bool], Tensor[(15, 13, 15), float32], Tensor[(8, 15, 14), float64]) {
  %249 = cast(%var_7661, dtype="bool") /* ty=Tensor[(8, 15, 14), bool] */;
  %250 = shape_of(%var_7660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%var_7660, dtype="bool") /* ty=Tensor[(8, 15, 14), bool] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %253 = cast(%var_7671, dtype="int8") /* ty=int8 */;
  %254 = cast(meta[relay.Constant][22] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %255 = reshape(%253, newshape=[]) /* ty=int8 */;
  %256 = reshape(%254, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), int8] */;
  %257 = @func_1708(%255, %256) /* ty=Tensor[(15, 1, 14), bool] */;
  %258 = cast(%257, dtype="bool") /* ty=Tensor[(15, 1, 14), bool] */;
  %259 = cast(%var_7680, dtype="bool") /* ty=Tensor[(15, 16, 14), bool] */;
  %260 = cast(%var_7671, dtype="int8") /* ty=int8 */;
  %261 = cast(meta[relay.Constant][22] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %262 = reshape(%260, newshape=[]) /* ty=int8 */;
  %263 = reshape(%261, newshape=[210]) /* ty=Tensor[(210), int8] */;
  %264 = @func_4733(%262, %263) /* ty=(Tensor[(15, 13, 15), float32], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
  %265 = cast(%var_7660, dtype="float64") /* ty=Tensor[(8, 15, 14), float64] */;
  %266 = sqrt(%265) /* ty=Tensor[(8, 15, 14), float64] */;
  %267 = cast(%266, dtype="float64") /* ty=Tensor[(8, 15, 14), float64] */;
  %268 = not_equal(%251, %252) /* ty=Tensor[(8, 15, 14), bool] */;
  %269 = greater_equal(%258, %259) /* ty=Tensor[(15, 16, 14), bool] */;
  %270 = %264.0;
  %271 = log(%267) /* ty=Tensor[(8, 15, 14), float64] */;
  (%268, %var_7671, meta[relay.Constant][22] /* ty=Tensor[(210), int8] */, %269, %270, %271)
}

def @func_14180() -> (Tensor[(5, 4, 7), uint8],) {
  %272 = @func_11642() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %273 = %272.0;
  (%273,)
}

def @func_4733(%var_4720: int8, %var_4721: Tensor[(210), int8]) -> (Tensor[(15, 13, 15), float32], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) {
  %274 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 13, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 13, 15), float32] */;
  %275 = cast(%var_4720, dtype="int8") /* ty=int8 */;
  %276 = cast(%var_4721, dtype="int8") /* ty=Tensor[(210), int8] */;
  %277 = reshape(%275, newshape=[]) /* ty=int8 */;
  %278 = reshape(%276, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), int8] */;
  %279 = cast(meta[relay.Constant][24] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %280 = cast(meta[relay.Constant][24] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %281 = reshape(%279, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
  %282 = reshape(%280, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
  %283 = @func_249(%281, %282) /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %284 = cosh(%274) /* ty=Tensor[(15, 13, 15), float32] */;
  %285 = @func_1708(%277, %278) /* ty=Tensor[(15, 1, 14), bool] */;
  %286 = %283.0;
  (%284, %285, %var_4720, %var_4721, %286, meta[relay.Constant][24] /* ty=Tensor[(140), uint8] */)
}

def @func_13593() -> Tensor[(140), uint8] {
  %287 = @func_13373() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) */;
  %287.1
}

def @func_10370() -> Tensor[(140), uint8] {
  @func_10095() /* ty=Tensor[(140), uint8] */
}

def @func_14363() -> Tensor[(5, 4, 7), uint8] {
  @func_10262() /* ty=Tensor[(5, 4, 7), uint8] */
}

def @func_11987(%var_11976: Tensor[(5, 4, 7), float64], %var_11982: Tensor[(5, 4, 7), float64]) -> (Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), bool]) {
  %288 = @func_11101() /* ty=(Tensor[(5, 4, 7), float64],) */;
  %289 = %288.0;
  %290 = cast(%var_11976, dtype="float32") /* ty=Tensor[(5, 4, 7), float32] */;
  %291 = shape_of(%289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %292 = cast(%289, dtype="float32") /* ty=Tensor[(5, 4, 7), float32] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %294 = cast(%var_11982, dtype="bool") /* ty=Tensor[(5, 4, 7), bool] */;
  %295 = shape_of(%var_11976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%var_11976, dtype="bool") /* ty=Tensor[(5, 4, 7), bool] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %298 = power(%292, %293) /* ty=Tensor[(5, 4, 7), float32] */;
  %299 = less(%296, %297) /* ty=Tensor[(5, 4, 7), bool] */;
  (%298, %299)
}

def @func_2703(%var_2631: Tensor[(6, 11, 1), float32], %var_2632: Tensor[(6, 11, 5), float32]) -> (Tensor[(6, 11, 5), float32], Tensor[(18, 1), uint64], Tensor[(15, 1, 14), bool], Tensor[(210), int8], Tensor[(9, 1, 2), bool]) {
  %300 = cast(%var_2631, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %301 = cast(%var_2632, dtype="float32") /* ty=Tensor[(6, 11, 5), float32] */;
  %302 = cast(meta[relay.Constant][26] /* ty=uint64 */, dtype="int8") /* ty=int8 */;
  %303 = cast(meta[relay.Constant][27] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %304 = reshape(%302, newshape=[]) /* ty=int8 */;
  %305 = reshape(%303, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), int8] */;
  %306 = cast(meta[relay.Constant][26] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %307 = cast(meta[relay.Constant][25] /* ty=Tensor[(18, 1), uint64] */, dtype="uint64") /* ty=Tensor[(18, 1), uint64] */;
  %308 = reshape(%306, newshape=[]) /* ty=uint64 */;
  %309 = reshape(%307, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), uint64] */;
  %310 = @func_1015(%308, %309) /* ty=(Tensor[(9, 1, 2), uint64],) */;
  %311 = %310.0;
  %312 = cast(%311, dtype="bool") /* ty=Tensor[(9, 1, 2), bool] */;
  %313 = cast(meta[relay.Constant][26] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %314 = mod(%300, %301) /* ty=Tensor[(6, 11, 5), float32] */;
  %315 = @func_1708(%304, %305) /* ty=Tensor[(15, 1, 14), bool] */;
  %316 = less_equal(%312, %313) /* ty=Tensor[(9, 1, 2), bool] */;
  (%314, meta[relay.Constant][25] /* ty=Tensor[(18, 1), uint64] */, %315, meta[relay.Constant][27] /* ty=Tensor[(210), int8] */, %316)
}

def @func_12729() -> (Tensor[(5, 4, 7), int32], Tensor[(105, 2), bool], Tensor[(5, 4, 7), uint8]) {
  %317 = @func_10741() /* ty=(Tensor[(5, 4, 7), float64],) */;
  %318 = %317.0;
  %319 = cast(%318, dtype="int32") /* ty=Tensor[(5, 4, 7), int32] */;
  %320 = cast(meta[relay.Constant][28] /* ty=int8 */, dtype="int32") /* ty=int32 */;
  %321 = cast(meta[relay.Constant][28] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %322 = reshape(%321, newshape=[]) /* ty=int8 */;
  %323 = @func_11006(%322) /* ty=(Tensor[(140), uint8], Tensor[(140), uint8], int8, int8, Tensor[(105, 2), int8]) */;
  %324 = %323.4;
  %325 = cast(%324, dtype="bool") /* ty=Tensor[(105, 2), bool] */;
  %326 = cast(meta[relay.Constant][28] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %327 = @func_12671() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %328 = logical_xor(%319, %320) /* ty=Tensor[(5, 4, 7), int32] */;
  %329 = less(%325, %326) /* ty=Tensor[(105, 2), bool] */;
  %330 = %327.0;
  (%328, %329, %330)
}

def @func_16074() -> (Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), bool]) {
  %331 = @func_15116() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %332 = %331.0;
  %333 = cast(%332, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
  %334 = cast(%332, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
  %335 = reshape(%333, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), float64] */;
  %336 = reshape(%334, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), float64] */;
  %337 = @func_11987(%335, %336) /* ty=(Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), bool]) */;
  %338 = %337.1;
  (%332, %338)
}

def @func_15662() -> (Tensor[(5, 4, 7), uint8], Tensor[(11, 5, 11), float32], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(5, ?, 5), bool], Tensor[(700), uint64], Tensor[(1, 25), float64], Tensor[(330), float32], Tensor[(605), float64]) {
  %339 = @func_13642() /* ty=(Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), uint8], Tensor[(2, 2, 2), float64], Tensor[(2, 4), float64]) */;
  %340 = cast(meta[relay.Constant][29] /* ty=Tensor[(605), float32] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %341 = reshape(%340, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), float32] */;
  %342 = cast(meta[relay.Constant][30] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %343 = cast(meta[relay.Constant][31] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %344 = reshape(%342, newshape=[]) /* ty=int8 */;
  %345 = reshape(%343, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), int8] */;
  %346 = cast(meta[relay.Constant][32] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %347 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 25), float64] */, dtype="float64") /* ty=Tensor[(1, 25), float64] */;
  %348 = cast(meta[relay.Constant][30] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %349 = reshape(%346, newshape=[700]) /* ty=Tensor[(700), uint64] */;
  %350 = reshape(%347, newshape=[25]) /* ty=Tensor[(25), float64] */;
  %351 = reshape(%348, newshape=[]) /* ty=int8 */;
  %352 = @func_9835(%349, %350, %351) /* ty=(Tensor[(140), uint8], Tensor[(56), bool], Tensor[(2, 336), bool], Tensor[(605, 700), uint64], Tensor[(11, 5, 11), float32], Tensor[(5, ?, 5), bool], Tensor[(25), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(210), int8], Tensor[(11, 5, 11), float32], Tensor[(5, 4, 7), int16]) */;
  %353 = @func_14001() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(140), uint8], Tensor[(330), float32], Tensor[(5, 4, 7), uint8]) */;
  %354 = cast(meta[relay.Constant][29] /* ty=Tensor[(605), float32] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %355 = %339.1;
  %356 = @func_4071(%341) /* ty=Tensor[(11, 5, 11), float32] */;
  %357 = @func_1708(%344, %345) /* ty=Tensor[(15, 1, 14), bool] */;
  %358 = %352.5;
  %359 = %353.2;
  %360 = sqrt(%354) /* ty=Tensor[(605), float64] */;
  (%355, %356, %357, meta[relay.Constant][30] /* ty=int8 */, meta[relay.Constant][31] /* ty=Tensor[(210), int8] */, %358, meta[relay.Constant][32] /* ty=Tensor[(700), uint64] */, meta[relay.Constant][33] /* ty=Tensor[(1, 25), float64] */, %359, %360)
}

def @func_4071(%var_4063: Tensor[(11, 5, 11), float32]) -> Tensor[(11, 5, 11), float32] {
  %361 = cast(%var_4063, dtype="float32") /* ty=Tensor[(11, 5, 11), float32] */;
  acos(%361) /* ty=Tensor[(11, 5, 11), float32] */
}

def @func_14934() -> (Tensor[(5, 4, 7), uint8],) {
  %362 = @func_14180() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %363 = %362.0;
  (%363,)
}

def @func_14960() -> Tensor[(5, 4, 7), float32] {
  %364 = @func_13080() /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), float32]) */;
  %364.1
}

def @func_8788(%var_8769: Tensor[(9, 15, 8), uint16], %var_8770: Tensor[(9, 15, 8), uint16], %var_8781: Tensor[(140), uint8]) -> (Tensor[(9, 15, 8), uint16], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) {
  %365 = cast(%var_8770, dtype="uint16") /* ty=Tensor[(9, 15, 8), uint16] */;
  %366 = shape_of(%var_8769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%var_8769, dtype="uint16") /* ty=Tensor[(9, 15, 8), uint16] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %369 = cast(%var_8781, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %370 = cast(%var_8781, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %371 = reshape(%369, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
  %372 = reshape(%370, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
  %373 = @func_249(%371, %372) /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %374 = bitwise_and(%367, %368) /* ty=Tensor[(9, 15, 8), uint16] */;
  %375 = %373.0;
  (%374, %375, %var_8781)
}

def @func_11915(%var_11913: Tensor[(2, 4), float64]) -> (Tensor[(1, 693), uint64], Tensor[(2, 2, 2), float64], Tensor[(2, 4), float64]) {
  %376 = cast(%var_11913, dtype="float64") /* ty=Tensor[(2, 4), float64] */;
  %377 = reshape(%376, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float64] */;
  %378 = @func_11519(%377) /* ty=(Tensor[(2, 2, 2), float64],) */;
  %379 = @func_10525() /* ty=Tensor[(1, 693), uint64] */;
  %380 = %378.0;
  (%379, %380, %var_11913)
}

def @func_9701() -> (Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) {
  %381 = @func_9640() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) */;
  %382 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 693), uint64] */, dtype="uint64") /* ty=Tensor[(1, 693), uint64] */;
  %383 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 693), uint64] */, dtype="uint64") /* ty=Tensor[(1, 693), uint64] */;
  %384 = reshape(%382, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), uint64] */;
  %385 = reshape(%383, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), uint64] */;
  %386 = @func_9243(%384, %385) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(7, 9, 11), bool]) */;
  %387 = %381.1;
  %388 = %386.0;
  (%387, %388, meta[relay.Constant][34] /* ty=Tensor[(1, 693), uint64] */)
}

def @func_12444() -> Tensor[(140), uint8] {
  %389 = @func_11196() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
  %389.0
}

def @func_10811() -> (Tensor[(5, 4, 7), bool], Tensor[(10, 2, 8), float64], Tensor[(160), float64]) {
  %390 = @func_10627() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) */;
  %391 = %390.0;
  %392 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 4, 7), float64] */, dtype="bool") /* ty=Tensor[(5, 4, 7), bool] */;
  %393 = shape_of(%391, dtype="int32") /* ty=Tensor[(3), int32] */;
  %394 = cast(%391, dtype="bool") /* ty=Tensor[(5, 4, 7), bool] */;
  %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %396 = cast(meta[relay.Constant][36] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %397 = reshape(%396, newshape=[10, 2, 8]) /* ty=Tensor[(10, 2, 8), float64] */;
  %398 = logical_and(%394, %395) /* ty=Tensor[(5, 4, 7), bool] */;
  %399 = @func_4950(%397) /* ty=Tensor[(10, 2, 8), float64] */;
  (%398, %399, meta[relay.Constant][36] /* ty=Tensor[(160), float64] */)
}

def @func_15229() -> Tensor[(140), uint8] {
  @func_12444() /* ty=Tensor[(140), uint8] */
}

def @func_11519(%var_11513: Tensor[(2, 2, 2), float64]) -> (Tensor[(2, 2, 2), float64],) {
  %400 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 2, 2), float64] */, dtype="float64") /* ty=Tensor[(2, 2, 2), float64] */;
  %401 = shape_of(%var_11513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%var_11513, dtype="float64") /* ty=Tensor[(2, 2, 2), float64] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %404 = divide(%402, %403) /* ty=Tensor[(2, 2, 2), float64] */;
  (%404,)
}

def @func_10595() -> Tensor[(1, 693), uint64] {
  %405 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %405.2
}

def @func_11852() -> (Tensor[(5, 4, 7), float32],) {
  %406 = @func_11619() /* ty=(Tensor[(5, 4, 7), float32], Tensor[(1, 693), uint64]) */;
  %407 = %406.0;
  (%407,)
}

def @func_12229() -> Tensor[(140), uint8] {
  %408 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %408.0
}

def @func_9640() -> (Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) {
  %409 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 11, 11), float64] */, dtype="float64") /* ty=Tensor[(11, 11, 11), float64] */;
  %410 = log(%409) /* ty=Tensor[(11, 11, 11), float64] */;
  %411 = cast(%410, dtype="float64") /* ty=Tensor[(11, 11, 11), float64] */;
  %412 = sigmoid(%411) /* ty=Tensor[(11, 11, 11), float64] */;
  %413 = cast(%412, dtype="float32") /* ty=Tensor[(11, 11, 11), float32] */;
  %414 = cast(meta[relay.Constant][39] /* ty=Tensor[(693), uint64] */, dtype="uint64") /* ty=Tensor[(693), uint64] */;
  %415 = cast(meta[relay.Constant][39] /* ty=Tensor[(693), uint64] */, dtype="uint64") /* ty=Tensor[(693), uint64] */;
  %416 = reshape(%414, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), uint64] */;
  %417 = reshape(%415, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), uint64] */;
  %418 = @func_9243(%416, %417) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(7, 9, 11), bool]) */;
  %419 = atan(%413) /* ty=Tensor[(11, 11, 11), float32] */;
  %420 = %418.1;
  (%419, %420, meta[relay.Constant][39] /* ty=Tensor[(693), uint64] */)
}

def @func_10262() -> Tensor[(5, 4, 7), uint8] {
  %421 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %421.1
}

def @func_12147(%var_12135: Tensor[(605), float32]) -> (Tensor[(140), uint8], Tensor[(1, 693), float64], Tensor[(11, 5, 11), float32], Tensor[(700), uint64], Tensor[(605), float32]) {
  %422 = @func_10525() /* ty=Tensor[(1, 693), uint64] */;
  %423 = cast(%422, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
  %424 = cast(meta[relay.Constant][40] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %425 = cast(%var_12135, dtype="float32") /* ty=Tensor[(605), float32] */;
  %426 = reshape(%424, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint64] */;
  %427 = reshape(%425, newshape=[11, 55]) /* ty=Tensor[(11, 55), float32] */;
  %428 = @func_4755(%426, %427) /* ty=(Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) */;
  %429 = @func_10495() /* ty=Tensor[(140), uint8] */;
  %430 = log2(%423) /* ty=Tensor[(1, 693), float64] */;
  %431 = %428.1;
  (%429, %430, %431, meta[relay.Constant][40] /* ty=Tensor[(700), uint64] */, %var_12135)
}

def @func_14508() -> (Tensor[(10, 2, 8), float64], Tensor[(140), uint8]) {
  %432 = @func_11892() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float32]) */;
  %433 = @func_13819() /* ty=Tensor[(10, 2, 8), float64] */;
  %434 = %432.0;
  (%433, %434)
}

def @func_9861(%var_9857: Tensor[(1680), int32], %var_9859: Tensor[(3360), bool]) -> (Tensor[(140), uint8], Tensor[(210), int8], Tensor[(1680), int32], int8, Tensor[(3360), bool]) {
  %435 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %436 = cast(%var_9857, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %437 = cast(%var_9857, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %438 = cast(meta[relay.Constant][41] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %439 = cast(%var_9859, dtype="bool") /* ty=Tensor[(3360), bool] */;
  %440 = reshape(%436, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), int32] */;
  %441 = reshape(%437, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), int32] */;
  %442 = reshape(%438, newshape=[]) /* ty=int8 */;
  %443 = reshape(%439, newshape=[15, 16, 14]) /* ty=Tensor[(15, 16, 14), bool] */;
  %444 = @func_7733(%440, %441, %442, %443) /* ty=(Tensor[(8, 15, 14), bool], int8, Tensor[(210), int8], Tensor[(15, 16, 14), bool], Tensor[(15, 13, 15), float32], Tensor[(8, 15, 14), float64]) */;
  %445 = %435.0;
  %446 = %444.2;
  (%445, %446, %var_9857, meta[relay.Constant][41] /* ty=int8 */, %var_9859)
}

def @func_10919(%var_10837: Tensor[(1680), int32], %var_10839: Tensor[(3360), bool]) -> (Tensor[(8, 15, 14), float64], Tensor[(1680), int32], int8, Tensor[(3360), bool], Tensor[(?, 693), int16], Tensor[(?, 693), int64], Tensor[(144), float64], Tensor[(16, 9, 693), bool], Tensor[(10, 693), uint16]) {
  %447 = cast(%var_10837, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %448 = cast(%var_10837, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %449 = cast(meta[relay.Constant][42] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %450 = cast(%var_10839, dtype="bool") /* ty=Tensor[(3360), bool] */;
  %451 = reshape(%447, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), int32] */;
  %452 = reshape(%448, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), int32] */;
  %453 = reshape(%449, newshape=[]) /* ty=int8 */;
  %454 = reshape(%450, newshape=[15, 16, 14]) /* ty=Tensor[(15, 16, 14), bool] */;
  %455 = @func_7733(%451, %452, %453, %454) /* ty=(Tensor[(8, 15, 14), bool], int8, Tensor[(210), int8], Tensor[(15, 16, 14), bool], Tensor[(15, 13, 15), float32], Tensor[(8, 15, 14), float64]) */;
  %456 = @func_10525() /* ty=Tensor[(1, 693), uint64] */;
  %457 = cast(%456, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
  %458 = tan(%457) /* ty=Tensor[(1, 693), float64] */;
  %459 = cast(%456, dtype="bool") /* ty=Tensor[(1, 693), bool] */;
  %460 = shape_of(%458, dtype="int32") /* ty=Tensor[(2), int32] */;
  %461 = cast(%458, dtype="bool") /* ty=Tensor[(1, 693), bool] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %463 = greater(%461, %462) /* ty=Tensor[(?, 693), bool] */;
  %464 = cast(%463, dtype="float32") /* ty=Tensor[(?, 693), float32] */;
  %465 = sin(%464) /* ty=Tensor[(?, 693), float32] */;
  %466 = cast(%458, dtype="int16") /* ty=Tensor[(1, 693), int16] */;
  %467 = shape_of(%465, dtype="int32") /* ty=Tensor[(2), int32] */;
  %468 = cast(%465, dtype="int16") /* ty=Tensor[(?, 693), int16] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %470 = cast(%463, dtype="float32") /* ty=Tensor[(?, 693), float32] */;
  %471 = asin(%470) /* ty=Tensor[(?, 693), float32] */;
  %472 = cast(%458, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
  %473 = shape_of(%471, dtype="int32") /* ty=Tensor[(2), int32] */;
  %474 = cast(%471, dtype="float64") /* ty=Tensor[(?, 693), float64] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %476 = divide(%474, %475) /* ty=Tensor[(?, 693), float64] */;
  %477 = cast(%471, dtype="int64") /* ty=Tensor[(?, 693), int64] */;
  %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(2), int32] */;
  %479 = cast(%476, dtype="int64") /* ty=Tensor[(?, 693), int64] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %481 = cast(meta[relay.Constant][43] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %482 = reshape(%481, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), float64] */;
  %483 = @func_9190(%482) /* ty=(Tensor[(210), int8], Tensor[(16, 9, 1), float64]) */;
  %484 = %483.1;
  %485 = cast(%476, dtype="bool") /* ty=Tensor[(?, 693), bool] */;
  %486 = cast(%484, dtype="bool") /* ty=Tensor[(16, 9, 1), bool] */;
  %487 = cast(%458, dtype="uint16") /* ty=Tensor[(1, 693), uint16] */;
  %488 = cast(meta[relay.Constant][44] /* ty=Tensor[(10, 693), float64] */, dtype="uint16") /* ty=Tensor[(10, 693), uint16] */;
  %489 = %455.5;
  %490 = right_shift(%468, %469) /* ty=Tensor[(?, 693), int16] */;
  %491 = bitwise_and(%479, %480) /* ty=Tensor[(?, 693), int64] */;
  %492 = greater_equal(%485, %486) /* ty=Tensor[(16, 9, 693), bool] */;
  %493 = minimum(%487, %488) /* ty=Tensor[(10, 693), uint16] */;
  (%489, %var_10837, meta[relay.Constant][42] /* ty=int8 */, %var_10839, %490, %491, meta[relay.Constant][43] /* ty=Tensor[(144), float64] */, %492, %493)
}

def @func_15821() -> Tensor[(140), uint8] {
  %494 = @func_13193() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) */;
  %494.1
}

def @func_15864() -> (Tensor[(140), uint8],) {
  %495 = @func_12809() /* ty=(Tensor[(140), uint8],) */;
  %496 = %495.0;
  (%496,)
}

def @func_14001() -> (Tensor[(5, 4, 7), bool], Tensor[(140), uint8], Tensor[(330), float32], Tensor[(5, 4, 7), uint8]) {
  %497 = @func_11200() /* ty=(Tensor[(5, 4, 7), bool],) */;
  %498 = %497.0;
  %499 = cast(%498, dtype="uint8") /* ty=Tensor[(5, 4, 7), uint8] */;
  %500 = cast(meta[relay.Constant][45] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %501 = reshape(%499, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %502 = reshape(%500, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %503 = @func_9963(%501, %502) /* ty=(Tensor[(693), uint64], Tensor[(9, 15, 8), uint16], Tensor[(1080), uint16], Tensor[(140), uint8], Tensor[(16, 9, 1), float64], Tensor[(144), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32]) */;
  %504 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %505 = %503.3;
  %506 = %504.1;
  (%498, %505, meta[relay.Constant][45] /* ty=Tensor[(330), float32] */, %506)
}

def @func_16036(%var_16019: int8) -> (Tensor[(5, 4, 7), float64], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) {
  %507 = @func_14350() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
  %508 = cast(%var_16019, dtype="int8") /* ty=int8 */;
  %509 = cast(meta[relay.Constant][46] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %510 = reshape(%508, newshape=[]) /* ty=int8 */;
  %511 = reshape(%509, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), int8] */;
  %512 = %507.1;
  %513 = @func_1708(%510, %511) /* ty=Tensor[(15, 1, 14), bool] */;
  (%512, %513, %var_16019, meta[relay.Constant][46] /* ty=Tensor[(210), int8] */)
}

def @func_11658() -> (Tensor[(140), uint8],) {
  %514 = @func_10495() /* ty=Tensor[(140), uint8] */;
  (%514,)
}

def @func_13373() -> (Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) {
  %515 = @func_12052() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
  %516 = @func_13260() /* ty=(Tensor[(140), uint8], Tensor[(15, 1, 14), bool], int8, Tensor[(5, 4, 7), bool]) */;
  %517 = %515.1;
  %518 = %516.0;
  (%517, %518)
}

def @func_11329(%var_11311: Tensor[(1680), int32]) -> (Tensor[(5, 4, 7), float64], int8, Tensor[(1680), int32], Tensor[(3360), bool], Tensor[(4, 3, 6), bool], Tensor[(72), float32], Tensor[(160), float64]) {
  %519 = @func_10627() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) */;
  %520 = cast(%var_11311, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %521 = cast(meta[relay.Constant][47] /* ty=Tensor[(3360), bool] */, dtype="bool") /* ty=Tensor[(3360), bool] */;
  %522 = reshape(%520, newshape=[1680]) /* ty=Tensor[(1680), int32] */;
  %523 = reshape(%521, newshape=[3360]) /* ty=Tensor[(3360), bool] */;
  %524 = @func_10919(%522, %523) /* ty=(Tensor[(8, 15, 14), float64], Tensor[(1680), int32], int8, Tensor[(3360), bool], Tensor[(?, 693), int16], Tensor[(?, 693), int64], Tensor[(144), float64], Tensor[(16, 9, 693), bool], Tensor[(10, 693), uint16]) */;
  %525 = cast(meta[relay.Constant][48] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %526 = cast(meta[relay.Constant][48] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %527 = reshape(%525, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %528 = reshape(%526, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %529 = @func_10811() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(10, 2, 8), float64], Tensor[(160), float64]) */;
  %530 = %519.0;
  %531 = %524.2;
  %532 = @func_11126(%527, %528) /* ty=Tensor[(4, 3, 6), bool] */;
  %533 = %529.2;
  (%530, %531, %var_11311, meta[relay.Constant][47] /* ty=Tensor[(3360), bool] */, %532, meta[relay.Constant][48] /* ty=Tensor[(72), float32] */, %533)
}

def @func_10276(%var_10270: Tensor[(9, 3, 5), float32]) -> (Tensor[(9, 3, 5), float32], Tensor[(9, 3, 5), uint8]) {
  %534 = cast(meta[relay.Constant][49] /* ty=Tensor[(9, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(9, 3, 5), float32] */;
  %535 = cast(%var_10270, dtype="uint8") /* ty=Tensor[(9, 3, 5), uint8] */;
  %536 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(9, 3, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(meta[relay.Constant][49] /* ty=Tensor[(9, 3, 5), float32] */, dtype="uint8") /* ty=Tensor[(9, 3, 5), uint8] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %539 = atan(%534) /* ty=Tensor[(9, 3, 5), float32] */;
  %540 = bitwise_or(%537, %538) /* ty=Tensor[(9, 3, 5), uint8] */;
  (%539, %540)
}

def @func_13080() -> (Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), float32]) {
  %541 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %542 = @func_11852() /* ty=(Tensor[(5, 4, 7), float32],) */;
  %543 = %542.0;
  %544 = cast(%543, dtype="float32") /* ty=Tensor[(5, 4, 7), float32] */;
  %545 = %541.1;
  %546 = cosh(%544) /* ty=Tensor[(5, 4, 7), float32] */;
  (%545, %546)
}

def @func_11213() -> Tensor[(5, 4, 7), uint8] {
  @func_10262() /* ty=Tensor[(5, 4, 7), uint8] */
}

def @func_10495() -> Tensor[(140), uint8] {
  %547 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %547.0
}

def @func_9243(%var_9210: Tensor[(7, 9, 11), uint64], %var_9211: Tensor[(7, 9, 11), uint64]) -> (Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(7, 9, 11), bool]) {
  %548 = cast(meta[relay.Constant][50] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %549 = cast(meta[relay.Constant][50] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %550 = reshape(%548, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
  %551 = reshape(%549, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
  %552 = @func_249(%550, %551) /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %553 = cast(%var_9211, dtype="bool") /* ty=Tensor[(7, 9, 11), bool] */;
  %554 = shape_of(%var_9210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%var_9210, dtype="bool") /* ty=Tensor[(7, 9, 11), bool] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %557 = greater_equal(%555, %556) /* ty=Tensor[(7, 9, 11), bool] */;
  %558 = cast(%557, dtype="bool") /* ty=Tensor[(7, 9, 11), bool] */;
  %559 = shape_of(%var_9210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%var_9210, dtype="bool") /* ty=Tensor[(7, 9, 11), bool] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %562 = %552.0;
  %563 = less(%560, %561) /* ty=Tensor[(7, 9, 11), bool] */;
  (%562, meta[relay.Constant][50] /* ty=Tensor[(140), uint8] */, %563)
}

def @func_12743() -> Tensor[(140), uint8] {
  @func_10704() /* ty=Tensor[(140), uint8] */
}

def @func_9963(%var_9910: Tensor[(140), uint8], %var_9945: Tensor[(330), float32]) -> (Tensor[(693), uint64], Tensor[(9, 15, 8), uint16], Tensor[(1080), uint16], Tensor[(140), uint8], Tensor[(16, 9, 1), float64], Tensor[(144), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32]) {
  %564 = @func_9640() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) */;
  %565 = cast(meta[relay.Constant][51] /* ty=Tensor[(1080), uint16] */, dtype="uint16") /* ty=Tensor[(1080), uint16] */;
  %566 = cast(meta[relay.Constant][51] /* ty=Tensor[(1080), uint16] */, dtype="uint16") /* ty=Tensor[(1080), uint16] */;
  %567 = cast(%var_9910, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %568 = reshape(%565, newshape=[9, 15, 8]) /* ty=Tensor[(9, 15, 8), uint16] */;
  %569 = reshape(%566, newshape=[9, 15, 8]) /* ty=Tensor[(9, 15, 8), uint16] */;
  %570 = reshape(%567, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %571 = @func_8788(%568, %569, %570) /* ty=(Tensor[(9, 15, 8), uint16], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
  %572 = cast(meta[relay.Constant][52] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %573 = reshape(%572, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), float64] */;
  %574 = @func_9190(%573) /* ty=(Tensor[(210), int8], Tensor[(16, 9, 1), float64]) */;
  %575 = cast(meta[relay.Constant][53] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %576 = cast(%var_9945, dtype="float32") /* ty=Tensor[(330), float32] */;
  %577 = reshape(%575, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %578 = reshape(%576, newshape=[6, 11, 5]) /* ty=Tensor[(6, 11, 5), float32] */;
  %579 = @func_2703(%577, %578) /* ty=(Tensor[(6, 11, 5), float32], Tensor[(18, 1), uint64], Tensor[(15, 1, 14), bool], Tensor[(210), int8], Tensor[(9, 1, 2), bool]) */;
  %580 = %564.2;
  %581 = %571.0;
  %582 = %574.1;
  %583 = %579.2;
  (%580, %581, meta[relay.Constant][51] /* ty=Tensor[(1080), uint16] */, %var_9910, %582, meta[relay.Constant][52] /* ty=Tensor[(144), float64] */, %583, meta[relay.Constant][53] /* ty=Tensor[(66), float32] */, %var_9945)
}

def @func_14677() -> Tensor[(5, 4, 7), float32] {
  %584 = @func_12422() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %585 = %584.0;
  %586 = cast(%585, dtype="float32") /* ty=Tensor[(5, 4, 7), float32] */;
  sigmoid(%586) /* ty=Tensor[(5, 4, 7), float32] */
}

def @func_13193() -> (Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) {
  %587 = @func_11101() /* ty=(Tensor[(5, 4, 7), float64],) */;
  %588 = @func_12257() /* ty=(Tensor[(140), uint8],) */;
  %589 = %587.0;
  %590 = %588.0;
  (%589, %590)
}

def @func_2097(%var_2055: int8) -> (Tensor[(4, 9, 12), int16], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(9, 1, 2), uint64], Tensor[(18), uint64]) {
  %591 = cast(meta[relay.Constant][55] /* ty=Tensor[(4, 9, 12), int16] */, dtype="int16") /* ty=Tensor[(4, 9, 12), int16] */;
  %592 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(4, 9, 12), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %593 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 9, 12), int16] */, dtype="int16") /* ty=Tensor[(4, 9, 12), int16] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %595 = cast(%var_2055, dtype="int8") /* ty=int8 */;
  %596 = cast(meta[relay.Constant][56] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %597 = reshape(%595, newshape=[]) /* ty=int8 */;
  %598 = reshape(%596, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), int8] */;
  %599 = cast(%var_2055, dtype="uint64") /* ty=uint64 */;
  %600 = cast(meta[relay.Constant][57] /* ty=Tensor[(18), uint64] */, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %601 = reshape(%599, newshape=[]) /* ty=uint64 */;
  %602 = reshape(%600, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), uint64] */;
  %603 = @func_1015(%601, %602) /* ty=(Tensor[(9, 1, 2), uint64],) */;
  %604 = bitwise_and(%593, %594) /* ty=Tensor[(4, 9, 12), int16] */;
  %605 = @func_1708(%597, %598) /* ty=Tensor[(15, 1, 14), bool] */;
  %606 = %603.0;
  (%604, %605, %var_2055, meta[relay.Constant][56] /* ty=Tensor[(210), int8] */, %606, meta[relay.Constant][57] /* ty=Tensor[(18), uint64] */)
}

def @func_13260() -> (Tensor[(140), uint8], Tensor[(15, 1, 14), bool], int8, Tensor[(5, 4, 7), bool]) {
  %607 = @func_11196() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
  %608 = cast(meta[relay.Constant][58] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %609 = reshape(%608, newshape=[]) /* ty=int8 */;
  %610 = @func_2097(%609) /* ty=(Tensor[(4, 9, 12), int16], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(9, 1, 2), uint64], Tensor[(18), uint64]) */;
  %611 = @func_11200() /* ty=(Tensor[(5, 4, 7), bool],) */;
  %612 = %607.0;
  %613 = %610.1;
  %614 = %611.0;
  (%612, %613, meta[relay.Constant][58] /* ty=int8 */, %614)
}

def @func_5816(%var_5781: Tensor[(5, 1, 5), float64]) -> (Tensor[(5, ?, 5), bool],) {
  %615 = cast(%var_5781, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
  %616 = exp(%615) /* ty=Tensor[(5, 1, 5), float64] */;
  %617 = cast(%var_5781, dtype="bool") /* ty=Tensor[(5, 1, 5), bool] */;
  %618 = shape_of(%616, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%616, dtype="bool") /* ty=Tensor[(5, 1, 5), bool] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %621 = logical_or(%619, %620) /* ty=Tensor[(5, ?, 5), bool] */;
  (%621,)
}

def @func_12671() -> (Tensor[(5, 4, 7), uint8],) {
  %622 = @func_11642() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %623 = %622.0;
  (%623,)
}

def @func_11619() -> (Tensor[(5, 4, 7), float32], Tensor[(1, 693), uint64]) {
  %624 = @func_10485() /* ty=Tensor[(5, 4, 7), float64] */;
  %625 = cast(%624, dtype="float32") /* ty=Tensor[(5, 4, 7), float32] */;
  %626 = atan(%625) /* ty=Tensor[(5, 4, 7), float32] */;
  %627 = @func_10595() /* ty=Tensor[(1, 693), uint64] */;
  (%626, %627)
}

def @func_15617() -> (Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), float32]) {
  %628 = @func_13229() /* ty=(Tensor[(210), int8], Tensor[(5, 4, 7), float64], Tensor[(5, 4, 7), float32]) */;
  %629 = @func_14487() /* ty=Tensor[(140), uint8] */;
  %630 = @func_10495() /* ty=Tensor[(140), uint8] */;
  %631 = %628.2;
  %632 = @func_14677() /* ty=Tensor[(5, 4, 7), float32] */;
  (%629, %630, %631, %632)
}

def @func_12190() -> Tensor[(5, 4, 7), float32] {
  %633 = @func_11619() /* ty=(Tensor[(5, 4, 7), float32], Tensor[(1, 693), uint64]) */;
  %633.0
}

def @func_10485() -> Tensor[(5, 4, 7), float64] {
  %634 = @func_10262() /* ty=Tensor[(5, 4, 7), uint8] */;
  %635 = cast(%634, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
  sinh(%635) /* ty=Tensor[(5, 4, 7), float64] */
}

def @func_16406() -> (Tensor[(140), uint8], Tensor[(7, 9, 11), bool], Tensor[(7, 99), uint64]) {
  %636 = cast(meta[relay.Constant][59] /* ty=Tensor[(7, 99), uint64] */, dtype="uint64") /* ty=Tensor[(7, 99), uint64] */;
  %637 = cast(meta[relay.Constant][59] /* ty=Tensor[(7, 99), uint64] */, dtype="uint64") /* ty=Tensor[(7, 99), uint64] */;
  %638 = reshape(%636, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), uint64] */;
  %639 = reshape(%637, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), uint64] */;
  %640 = @func_9243(%638, %639) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(7, 9, 11), bool]) */;
  %641 = @func_10370() /* ty=Tensor[(140), uint8] */;
  %642 = %640.2;
  (%641, %642, meta[relay.Constant][59] /* ty=Tensor[(7, 99), uint64] */)
}

def @func_12052() -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
  %643 = @func_9640() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) */;
  %644 = @func_10741() /* ty=(Tensor[(5, 4, 7), float64],) */;
  %645 = %644.0;
  %646 = cast(%645, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
  %647 = %643.1;
  %648 = tan(%646) /* ty=Tensor[(5, 4, 7), float64] */;
  (%647, %648)
}

def @func_15469(%var_15429: Tensor[(15, 693), uint64], %var_15455: Tensor[(700), uint64]) -> (Tensor[(5, 4, 7), uint8], Tensor[(?, 693), bool], Tensor[(140), uint8], Tensor[(56), bool], Tensor[(672), bool], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(15, 693), bool]) {
  %649 = @func_14180() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %650 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %651 = %650.2;
  %652 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 693), uint64] */, dtype="bool") /* ty=Tensor[(1, 693), bool] */;
  %653 = shape_of(%651, dtype="int32") /* ty=Tensor[(2), int32] */;
  %654 = cast(%651, dtype="bool") /* ty=Tensor[(1, 693), bool] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %656 = cast(meta[relay.Constant][61] /* ty=Tensor[(56), bool] */, dtype="bool") /* ty=Tensor[(56), bool] */;
  %657 = cast(meta[relay.Constant][62] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
  %658 = cast(%var_15455, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %659 = cast(meta[relay.Constant][63] /* ty=Tensor[(605), float32] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %660 = %649.0;
  %661 = cast(%660, dtype="uint8") /* ty=Tensor[(5, 4, 7), uint8] */;
  %662 = reshape(%656, newshape=[1, 7, 8]) /* ty=Tensor[(1, 7, 8), bool] */;
  %663 = reshape(%657, newshape=[12, 7, 8]) /* ty=Tensor[(12, 7, 8), bool] */;
  %664 = reshape(%658, newshape=[700]) /* ty=Tensor[(700), uint64] */;
  %665 = reshape(%659, newshape=[605]) /* ty=Tensor[(605), float32] */;
  %666 = reshape(%661, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %667 = @func_8829(%662, %663, %664, %665, %666) /* ty=(Tensor[(12, 7, 8), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
  %668 = cast(%651, dtype="bool") /* ty=Tensor[(1, 693), bool] */;
  %669 = cast(%var_15429, dtype="bool") /* ty=Tensor[(15, 693), bool] */;
  %670 = less(%668, %669) /* ty=Tensor[(15, 693), bool] */;
  %671 = cast(%var_15429, dtype="bool") /* ty=Tensor[(15, 693), bool] */;
  %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(2), int32] */;
  %673 = cast(%670, dtype="bool") /* ty=Tensor[(15, 693), bool] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %675 = less_equal(%654, %655) /* ty=Tensor[(?, 693), bool] */;
  %676 = %667.5;
  %677 = greater(%673, %674) /* ty=Tensor[(15, 693), bool] */;
  (%660, %675, %676, meta[relay.Constant][61] /* ty=Tensor[(56), bool] */, meta[relay.Constant][62] /* ty=Tensor[(672), bool] */, %var_15455, meta[relay.Constant][63] /* ty=Tensor[(605), float32] */, %677)
}

def @func_11351() -> (Tensor[(5, 4, 7), uint8],) {
  %678 = @func_11213() /* ty=Tensor[(5, 4, 7), uint8] */;
  (%678,)
}

def @func_13778(%var_13725: Tensor[(700), uint64], %var_13726: Tensor[(25), float64], %var_13727: int8, %var_13771: Tensor[(11, 55), float32]) -> (Tensor[(5, 4, 7), uint8], Tensor[(66), float32], Tensor[(700), uint64], Tensor[(210), int8], Tensor[(25), int64], Tensor[(605), float32], Tensor[(11, 55), float32], Tensor[(11, 55), bool]) {
  %679 = cast(%var_13725, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %680 = cast(%var_13726, dtype="float64") /* ty=Tensor[(25), float64] */;
  %681 = cast(%var_13727, dtype="int8") /* ty=int8 */;
  %682 = reshape(%679, newshape=[700]) /* ty=Tensor[(700), uint64] */;
  %683 = reshape(%680, newshape=[25]) /* ty=Tensor[(25), float64] */;
  %684 = reshape(%681, newshape=[]) /* ty=int8 */;
  %685 = @func_9835(%682, %683, %684) /* ty=(Tensor[(140), uint8], Tensor[(56), bool], Tensor[(2, 336), bool], Tensor[(605, 700), uint64], Tensor[(11, 5, 11), float32], Tensor[(5, ?, 5), bool], Tensor[(25), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(210), int8], Tensor[(11, 5, 11), float32], Tensor[(5, 4, 7), int16]) */;
  %686 = @func_13229() /* ty=(Tensor[(210), int8], Tensor[(5, 4, 7), float64], Tensor[(5, 4, 7), float32]) */;
  %687 = cast(%var_13727, dtype="int64") /* ty=int64 */;
  %688 = cast(%var_13726, dtype="int64") /* ty=Tensor[(25), int64] */;
  %689 = cast(%var_13725, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %690 = cast(meta[relay.Constant][64] /* ty=Tensor[(605), float32] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %691 = reshape(%689, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint64] */;
  %692 = reshape(%690, newshape=[11, 55]) /* ty=Tensor[(11, 55), float32] */;
  %693 = @func_4755(%691, %692) /* ty=(Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) */;
  %694 = %693.2;
  %695 = cast(%694, dtype="float32") /* ty=Tensor[(11, 55), float32] */;
  %696 = asinh(%695) /* ty=Tensor[(11, 55), float32] */;
  %697 = cast(%696, dtype="float32") /* ty=Tensor[(11, 55), float32] */;
  %698 = cast(%var_13771, dtype="bool") /* ty=Tensor[(11, 55), bool] */;
  %699 = shape_of(%694, dtype="int32") /* ty=Tensor[(2), int32] */;
  %700 = cast(%694, dtype="bool") /* ty=Tensor[(11, 55), bool] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %702 = @func_10262() /* ty=Tensor[(5, 4, 7), uint8] */;
  %703 = %685.8;
  %704 = %686.0;
  %705 = logical_xor(%687, %688) /* ty=Tensor[(25), int64] */;
  %706 = atan(%697) /* ty=Tensor[(11, 55), float32] */;
  %707 = logical_or(%700, %701) /* ty=Tensor[(11, 55), bool] */;
  (%702, %703, %var_13725, %704, %705, meta[relay.Constant][64] /* ty=Tensor[(605), float32] */, %706, %707)
}

def @func_13535(%var_13513: Tensor[(700), uint64], %var_13515: int8) -> (Tensor[(140), uint8], Tensor[(11, 5, 11), float32], Tensor[(700), uint64], Tensor[(25), bool], Tensor[(11, 5, 11), float32]) {
  %708 = @func_11658() /* ty=(Tensor[(140), uint8],) */;
  %709 = cast(%var_13513, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %710 = cast(meta[relay.Constant][65] /* ty=Tensor[(25), float64] */, dtype="float64") /* ty=Tensor[(25), float64] */;
  %711 = cast(%var_13515, dtype="int8") /* ty=int8 */;
  %712 = reshape(%709, newshape=[700]) /* ty=Tensor[(700), uint64] */;
  %713 = reshape(%710, newshape=[25]) /* ty=Tensor[(25), float64] */;
  %714 = reshape(%711, newshape=[]) /* ty=int8 */;
  %715 = @func_9835(%712, %713, %714) /* ty=(Tensor[(140), uint8], Tensor[(56), bool], Tensor[(2, 336), bool], Tensor[(605, 700), uint64], Tensor[(11, 5, 11), float32], Tensor[(5, ?, 5), bool], Tensor[(25), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(210), int8], Tensor[(11, 5, 11), float32], Tensor[(5, 4, 7), int16]) */;
  %716 = cast(%var_13515, dtype="bool") /* ty=bool */;
  %717 = cast(meta[relay.Constant][65] /* ty=Tensor[(25), float64] */, dtype="bool") /* ty=Tensor[(25), bool] */;
  %718 = %715.4;
  %719 = cast(%718, dtype="float32") /* ty=Tensor[(11, 5, 11), float32] */;
  %720 = reshape(%719, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), float32] */;
  %721 = %708.0;
  %722 = less(%716, %717) /* ty=Tensor[(25), bool] */;
  %723 = @func_4071(%720) /* ty=Tensor[(11, 5, 11), float32] */;
  (%721, %718, %var_13513, %722, %723)
}

def @func_4827(%var_4811: Tensor[(1, 11, 2), float64]) -> (Tensor[(1, 11, 2), float64],) {
  %724 = cast(%var_4811, dtype="float64") /* ty=Tensor[(1, 11, 2), float64] */;
  %725 = acos(%724) /* ty=Tensor[(1, 11, 2), float64] */;
  (%725,)
}

def @func_10627() -> (Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) {
  %726 = @func_10485() /* ty=Tensor[(5, 4, 7), float64] */;
  %727 = @func_10370() /* ty=Tensor[(140), uint8] */;
  (%726, %727)
}

def @func_1708(%var_1686: int8, %var_1687: Tensor[(15, 1, 14), int8]) -> Tensor[(15, 1, 14), bool] {
  %728 = cast(%var_1686, dtype="bool") /* ty=bool */;
  %729 = cast(%var_1687, dtype="bool") /* ty=Tensor[(15, 1, 14), bool] */;
  equal(%728, %729) /* ty=Tensor[(15, 1, 14), bool] */
}

def @func_9190(%var_9165: Tensor[(16, 9, 1), float64]) -> (Tensor[(210), int8], Tensor[(16, 9, 1), float64]) {
  %730 = cast(meta[relay.Constant][66] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %731 = reshape(%730, newshape=[]) /* ty=int8 */;
  %732 = @func_2097(%731) /* ty=(Tensor[(4, 9, 12), int16], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(9, 1, 2), uint64], Tensor[(18), uint64]) */;
  %733 = cast(%var_9165, dtype="float64") /* ty=Tensor[(16, 9, 1), float64] */;
  %734 = log10(%733) /* ty=Tensor[(16, 9, 1), float64] */;
  %735 = cast(%734, dtype="float64") /* ty=Tensor[(16, 9, 1), float64] */;
  %736 = cast(meta[relay.Constant][66] /* ty=int8 */, dtype="float64") /* ty=float64 */;
  %737 = %732.3;
  %738 = mod(%735, %736) /* ty=Tensor[(16, 9, 1), float64] */;
  (%737, %738)
}

def @func_14132() -> Tensor[(140), uint8] {
  @func_12444() /* ty=Tensor[(140), uint8] */
}

def @func_13666() -> (Tensor[(10, 2, 8), float64],) {
  %739 = @func_10811() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(10, 2, 8), float64], Tensor[(160), float64]) */;
  %740 = %739.1;
  (%740,)
}

def @func_12809() -> (Tensor[(140), uint8],) {
  %741 = @func_12743() /* ty=Tensor[(140), uint8] */;
  (%741,)
}

def @func_4950(%var_4940: Tensor[(10, 2, 8), float64]) -> Tensor[(10, 2, 8), float64] {
  %742 = cast(%var_4940, dtype="float64") /* ty=Tensor[(10, 2, 8), float64] */;
  acos(%742) /* ty=Tensor[(10, 2, 8), float64] */
}

def @func_12854() -> (Tensor[(140), uint8], int8, Tensor[(140), uint8]) {
  %743 = @func_12257() /* ty=(Tensor[(140), uint8],) */;
  %744 = @func_11839() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) */;
  %745 = %743.0;
  %746 = %744.2;
  %747 = @func_10370() /* ty=Tensor[(140), uint8] */;
  (%745, %746, %747)
}

def @func_11126(%var_11112: Tensor[(4, 3, 6), float32], %var_11113: Tensor[(4, 3, 6), float32]) -> Tensor[(4, 3, 6), bool] {
  %748 = cast(%var_11113, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %749 = shape_of(%var_11112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%var_11112, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%750, %751) /* ty=Tensor[(4, 3, 6), bool] */
}

def @func_11101() -> (Tensor[(5, 4, 7), float64],) {
  %752 = @func_10741() /* ty=(Tensor[(5, 4, 7), float64],) */;
  %753 = %752.0;
  (%753,)
}

def @func_12952() -> Tensor[(5, 4, 7), uint8] {
  %754 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %754.1
}

def @func_11642() -> (Tensor[(5, 4, 7), uint8],) {
  %755 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %756 = %755.1;
  (%756,)
}

def @func_12312() -> (Tensor[(140), uint8],) {
  %757 = @func_10704() /* ty=Tensor[(140), uint8] */;
  (%757,)
}

def @func_8829(%var_8794: Tensor[(1, 7, 8), bool], %var_8795: Tensor[(12, 7, 8), bool], %var_8811: Tensor[(700), uint64], %var_8812: Tensor[(605), float32], %var_8826: Tensor[(140), uint8]) -> (Tensor[(12, 7, 8), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) {
  %758 = cast(%var_8794, dtype="bool") /* ty=Tensor[(1, 7, 8), bool] */;
  %759 = cast(%var_8795, dtype="bool") /* ty=Tensor[(12, 7, 8), bool] */;
  %760 = logical_or(%758, %759) /* ty=Tensor[(12, 7, 8), bool] */;
  %761 = cast(%760, dtype="float64") /* ty=Tensor[(12, 7, 8), float64] */;
  %762 = cast(%var_8811, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %763 = cast(%var_8812, dtype="float32") /* ty=Tensor[(605), float32] */;
  %764 = reshape(%762, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint64] */;
  %765 = reshape(%763, newshape=[11, 55]) /* ty=Tensor[(11, 55), float32] */;
  %766 = @func_4755(%764, %765) /* ty=(Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) */;
  %767 = cast(%var_8826, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %768 = cast(%var_8826, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %769 = reshape(%767, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
  %770 = reshape(%768, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
  %771 = @func_249(%769, %770) /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %772 = cosh(%761) /* ty=Tensor[(12, 7, 8), float64] */;
  %773 = %766.2;
  %774 = %771.0;
  (%772, %773, %var_8811, %var_8812, %774, %var_8826)
}

def @func_14448(%var_14411: float32, %var_14412: Tensor[(2, 20), float32], %var_14413: Tensor[(18), uint64]) -> (Tensor[(5, 4, 7), float64], Tensor[(6, 3), uint64], float32, Tensor[(2, 20), float32], Tensor[(18), uint64], Tensor[(210), int8], Tensor[(10, 2, 8), float64]) {
  %775 = @func_13910() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(15, 1, 14), bool]) */;
  %776 = cast(%var_14411, dtype="float32") /* ty=float32 */;
  %777 = cast(%var_14412, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %778 = cast(%var_14413, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %779 = reshape(%776, newshape=[]) /* ty=float32 */;
  %780 = reshape(%777, newshape=[4, 10, 1]) /* ty=Tensor[(4, 10, 1), float32] */;
  %781 = reshape(%778, newshape=[6, 3]) /* ty=Tensor[(6, 3), uint64] */;
  %782 = @func_13838(%779, %780, %781) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(18, 1), uint64], Tensor[(6, 3), uint64]) */;
  %783 = @func_11839() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) */;
  %784 = %775.0;
  %785 = %782.2;
  %786 = %783.3;
  %787 = @func_13819() /* ty=Tensor[(10, 2, 8), float64] */;
  (%784, %785, %var_14411, %var_14412, %var_14413, %786, %787)
}

def @func_12422() -> (Tensor[(5, 4, 7), uint8],) {
  %788 = @func_11351() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %789 = %788.0;
  (%789,)
}

def @func_11196() -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
  %790 = @func_10741() /* ty=(Tensor[(5, 4, 7), float64],) */;
  %791 = @func_10095() /* ty=Tensor[(140), uint8] */;
  %792 = %790.0;
  (%791, %792)
}

def @func_11892() -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float32]) {
  %793 = @func_11619() /* ty=(Tensor[(5, 4, 7), float32], Tensor[(1, 693), uint64]) */;
  %794 = @func_10095() /* ty=Tensor[(140), uint8] */;
  %795 = %793.0;
  (%794, %795)
}

def @main(%var_16752: uint64) -> (Tensor[(12, 5, 12), uint64],) {
  %796 = cast(%var_16752, dtype="uint64") /* ty=uint64 */;
  %797 = cast(meta[relay.Constant][67] /* ty=Tensor[(12, 5, 12), uint64] */, dtype="uint64") /* ty=Tensor[(12, 5, 12), uint64] */;
  %798 = add(%796, %797) /* ty=Tensor[(12, 5, 12), uint64] */;
  (%798,)
}

def @func_13229() -> (Tensor[(210), int8], Tensor[(5, 4, 7), float64], Tensor[(5, 4, 7), float32]) {
  %799 = @func_11839() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) */;
  %800 = %799.3;
  %801 = @func_10485() /* ty=Tensor[(5, 4, 7), float64] */;
  %802 = @func_12190() /* ty=Tensor[(5, 4, 7), float32] */;
  (%800, %801, %802)
}

def @func_15380() -> (Tensor[(2, 4), float64], Tensor[(10, 2, 8), float64], Tensor[(5, 4, 7), float64]) {
  %803 = @func_13642() /* ty=(Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), uint8], Tensor[(2, 2, 2), float64], Tensor[(2, 4), float64]) */;
  %804 = @func_10811() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(10, 2, 8), float64], Tensor[(160), float64]) */;
  %805 = @func_14350() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
  %806 = %803.3;
  %807 = %804.1;
  %808 = %805.1;
  (%806, %807, %808)
}

def @func_11200() -> (Tensor[(5, 4, 7), bool],) {
  %809 = @func_10811() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(10, 2, 8), float64], Tensor[(160), float64]) */;
  %810 = %809.0;
  (%810,)
}

def @func_13576() -> (Tensor[(5, 4, 7), float64],) {
  %811 = @func_12190() /* ty=Tensor[(5, 4, 7), float32] */;
  %812 = cast(%811, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
  %813 = asin(%812) /* ty=Tensor[(5, 4, 7), float64] */;
  (%813,)
}

def @func_13910() -> (Tensor[(5, 4, 7), float64], Tensor[(15, 1, 14), bool]) {
  %814 = @func_13576() /* ty=(Tensor[(5, 4, 7), float64],) */;
  %815 = %814.0;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
  %817 = @func_11839() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) */;
  %818 = cos(%816) /* ty=Tensor[(5, 4, 7), float64] */;
  %819 = %817.1;
  (%818, %819)
}

def @func_11076(%var_11035: Tensor[(700), uint64], %var_11036: Tensor[(25), float64], %var_11072: Tensor[(25), uint16]) -> (Tensor[(210), int8], Tensor[(700), uint64], Tensor[(1, 693), int32], Tensor[(25), int8]) {
  %820 = cast(%var_11035, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %821 = cast(%var_11036, dtype="float64") /* ty=Tensor[(25), float64] */;
  %822 = cast(meta[relay.Constant][68] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %823 = reshape(%820, newshape=[700]) /* ty=Tensor[(700), uint64] */;
  %824 = reshape(%821, newshape=[25]) /* ty=Tensor[(25), float64] */;
  %825 = reshape(%822, newshape=[]) /* ty=int8 */;
  %826 = @func_9835(%823, %824, %825) /* ty=(Tensor[(140), uint8], Tensor[(56), bool], Tensor[(2, 336), bool], Tensor[(605, 700), uint64], Tensor[(11, 5, 11), float32], Tensor[(5, ?, 5), bool], Tensor[(25), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(210), int8], Tensor[(11, 5, 11), float32], Tensor[(5, 4, 7), int16]) */;
  %827 = @func_10595() /* ty=Tensor[(1, 693), uint64] */;
  %828 = cast(%827, dtype="int32") /* ty=Tensor[(1, 693), int32] */;
  %829 = cast(meta[relay.Constant][68] /* ty=int8 */, dtype="int32") /* ty=int32 */;
  %830 = cast(%var_11036, dtype="uint16") /* ty=Tensor[(25), uint16] */;
  %831 = cast(meta[relay.Constant][68] /* ty=int8 */, dtype="uint16") /* ty=uint16 */;
  %832 = right_shift(%830, %831) /* ty=Tensor[(25), uint16] */;
  %833 = cast(%var_11072, dtype="int8") /* ty=Tensor[(25), int8] */;
  %834 = shape_of(%832, dtype="int32") /* ty=Tensor[(1), int32] */;
  %835 = cast(%832, dtype="int8") /* ty=Tensor[(25), int8] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?), int8] */;
  %837 = %826.10;
  %838 = bitwise_or(%828, %829) /* ty=Tensor[(1, 693), int32] */;
  %839 = subtract(%835, %836) /* ty=Tensor[(25), int8] */;
  (%837, %var_11035, %838, %839)
}

def @func_10464(%var_10460: Tensor[(672), bool], %var_10462: Tensor[(1, 605), float32]) -> (Tensor[(5, 4, 7), uint8], Tensor[(700), uint64], Tensor[(56), bool], Tensor[(672), bool], Tensor[(700), uint64], Tensor[(1, 605), float32]) {
  %840 = cast(meta[relay.Constant][69] /* ty=Tensor[(56), bool] */, dtype="bool") /* ty=Tensor[(56), bool] */;
  %841 = cast(%var_10460, dtype="bool") /* ty=Tensor[(672), bool] */;
  %842 = cast(meta[relay.Constant][70] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %843 = cast(%var_10462, dtype="float32") /* ty=Tensor[(1, 605), float32] */;
  %844 = @func_10262() /* ty=Tensor[(5, 4, 7), uint8] */;
  %845 = cast(%844, dtype="uint8") /* ty=Tensor[(5, 4, 7), uint8] */;
  %846 = reshape(%840, newshape=[1, 7, 8]) /* ty=Tensor[(1, 7, 8), bool] */;
  %847 = reshape(%841, newshape=[12, 7, 8]) /* ty=Tensor[(12, 7, 8), bool] */;
  %848 = reshape(%842, newshape=[700]) /* ty=Tensor[(700), uint64] */;
  %849 = reshape(%843, newshape=[605]) /* ty=Tensor[(605), float32] */;
  %850 = reshape(%845, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %851 = @func_8829(%846, %847, %848, %849, %850) /* ty=(Tensor[(12, 7, 8), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
  %852 = %851.2;
  (%844, %852, meta[relay.Constant][69] /* ty=Tensor[(56), bool] */, %var_10460, meta[relay.Constant][70] /* ty=Tensor[(700), uint64] */, %var_10462)
}

def @func_10741() -> (Tensor[(5, 4, 7), float64],) {
  %853 = @func_10485() /* ty=Tensor[(5, 4, 7), float64] */;
  (%853,)
}

def @func_14169() -> Tensor[(5, 4, 7), float32] {
  @func_12190() /* ty=Tensor[(5, 4, 7), float32] */
}

def @func_16217() -> (Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(15, 1, 14), bool], Tensor[(3, 924), uint64], Tensor[(2772, 2), float64]) {
  %854 = @func_14001() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(140), uint8], Tensor[(330), float32], Tensor[(5, 4, 7), uint8]) */;
  %855 = cast(meta[relay.Constant][71] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %856 = cast(meta[relay.Constant][72] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %857 = reshape(%855, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %858 = reshape(%856, newshape=[6, 11, 5]) /* ty=Tensor[(6, 11, 5), float32] */;
  %859 = @func_2703(%857, %858) /* ty=(Tensor[(6, 11, 5), float32], Tensor[(18, 1), uint64], Tensor[(15, 1, 14), bool], Tensor[(210), int8], Tensor[(9, 1, 2), bool]) */;
  %860 = cast(meta[relay.Constant][73] /* ty=Tensor[(3, 924), uint64] */, dtype="uint64") /* ty=Tensor[(3, 924), uint64] */;
  %861 = cast(meta[relay.Constant][74] /* ty=Tensor[(2772, 2), float64] */, dtype="float64") /* ty=Tensor[(2772, 2), float64] */;
  %862 = reshape(%860, newshape=[4, 693]) /* ty=Tensor[(4, 693), uint64] */;
  %863 = reshape(%861, newshape=[8, 693]) /* ty=Tensor[(8, 693), float64] */;
  %864 = @func_14285(%862, %863) /* ty=(Tensor[(8, 693), uint8], Tensor[(4, 693), float32], Tensor[(15, 1, 14), bool], Tensor[(4, 693), uint32]) */;
  %865 = %854.0;
  %866 = %859.2;
  %867 = %864.2;
  (%865, %866, meta[relay.Constant][71] /* ty=Tensor[(66), float32] */, meta[relay.Constant][72] /* ty=Tensor[(330), float32] */, %867, meta[relay.Constant][73] /* ty=Tensor[(3, 924), uint64] */, meta[relay.Constant][74] /* ty=Tensor[(2772, 2), float64] */)
}

def @func_12590(%var_12539: Tensor[(36, 2), float32], %var_12571: bool, %var_12572: Tensor[(18, 1), uint64], %var_12578: Tensor[(18, 15), uint64]) -> (Tensor[(1, 693), uint64], Tensor[(140), uint8], Tensor[(5, 4, 7), float64], Tensor[(140), uint8], Tensor[(4, 3, 6), bool], Tensor[(36, 2), float32], Tensor[(140), uint8], Tensor[(2, ?, 12), bool], bool, Tensor[(18, 15), float64]) {
  %868 = @func_12052() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
  %869 = @func_12052() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
  %870 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %871 = cast(%var_12539, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
  %872 = cast(%var_12539, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
  %873 = reshape(%871, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %874 = reshape(%872, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %875 = @func_12312() /* ty=(Tensor[(140), uint8],) */;
  %876 = cast(%var_12571, dtype="bool") /* ty=bool */;
  %877 = cast(%var_12572, dtype="uint64") /* ty=Tensor[(18, 1), uint64] */;
  %878 = reshape(%876, newshape=[]) /* ty=bool */;
  %879 = reshape(%877, newshape=[18, 1]) /* ty=Tensor[(18, 1), uint64] */;
  %880 = @func_9599(%878, %879) /* ty=(Tensor[(2, ?, 12), float64], Tensor[(9, 1, 2), uint64], Tensor[(18, 1), uint64], Tensor[(2, ?, 12), bool], Tensor[(2, ?, 12), float64], Tensor[(2, 1, 12), float32]) */;
  %881 = cast(%var_12572, dtype="float64") /* ty=Tensor[(18, 1), float64] */;
  %882 = cast(%var_12578, dtype="float64") /* ty=Tensor[(18, 15), float64] */;
  %883 = @func_11278() /* ty=Tensor[(1, 693), uint64] */;
  %884 = %868.0;
  %885 = %869.1;
  %886 = %870.0;
  %887 = @func_11126(%873, %874) /* ty=Tensor[(4, 3, 6), bool] */;
  %888 = %875.0;
  %889 = %880.3;
  %890 = divide(%881, %882) /* ty=Tensor[(18, 15), float64] */;
  (%883, %884, %885, %886, %887, %var_12539, %888, %889, %var_12571, %890)
}

def @func_14487() -> Tensor[(140), uint8] {
  %891 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %891.0
}

def @func_15307() -> Tensor[(140), uint8] {
  @func_10495() /* ty=Tensor[(140), uint8] */
}

def @func_13838(%var_13821: float32, %var_13822: Tensor[(4, 10, 1), float32], %var_13832: Tensor[(6, 3), uint64]) -> (Tensor[(4, 10, 1), float32], Tensor[(18, 1), uint64], Tensor[(6, 3), uint64]) {
  %892 = cast(%var_13821, dtype="float32") /* ty=float32 */;
  %893 = cast(%var_13822, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  %894 = cast(%var_13821, dtype="bool") /* ty=bool */;
  %895 = cast(%var_13832, dtype="uint64") /* ty=Tensor[(6, 3), uint64] */;
  %896 = reshape(%894, newshape=[]) /* ty=bool */;
  %897 = reshape(%895, newshape=[18, 1]) /* ty=Tensor[(18, 1), uint64] */;
  %898 = @func_9599(%896, %897) /* ty=(Tensor[(2, ?, 12), float64], Tensor[(9, 1, 2), uint64], Tensor[(18, 1), uint64], Tensor[(2, ?, 12), bool], Tensor[(2, ?, 12), float64], Tensor[(2, 1, 12), float32]) */;
  %899 = minimum(%892, %893) /* ty=Tensor[(4, 10, 1), float32] */;
  %900 = %898.2;
  (%899, %900, %var_13832)
}

def @func_14714(%var_14706: Tensor[(56), bool], %var_14708: Tensor[(700), uint64], %var_14709: Tensor[(605), float32]) -> (int8, Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(56), bool], Tensor[(672), bool], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8]) {
  %901 = @func_13260() /* ty=(Tensor[(140), uint8], Tensor[(15, 1, 14), bool], int8, Tensor[(5, 4, 7), bool]) */;
  %902 = cast(%var_14706, dtype="bool") /* ty=Tensor[(56), bool] */;
  %903 = cast(meta[relay.Constant][75] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
  %904 = cast(%var_14708, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %905 = cast(%var_14709, dtype="float32") /* ty=Tensor[(605), float32] */;
  %906 = @func_12952() /* ty=Tensor[(5, 4, 7), uint8] */;
  %907 = cast(%906, dtype="uint8") /* ty=Tensor[(5, 4, 7), uint8] */;
  %908 = reshape(%902, newshape=[1, 7, 8]) /* ty=Tensor[(1, 7, 8), bool] */;
  %909 = reshape(%903, newshape=[12, 7, 8]) /* ty=Tensor[(12, 7, 8), bool] */;
  %910 = reshape(%904, newshape=[700]) /* ty=Tensor[(700), uint64] */;
  %911 = reshape(%905, newshape=[605]) /* ty=Tensor[(605), float32] */;
  %912 = reshape(%907, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %913 = @func_8829(%908, %909, %910, %911, %912) /* ty=(Tensor[(12, 7, 8), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
  %914 = @func_14180() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %915 = %901.2;
  %916 = %913.5;
  %917 = %914.0;
  (%915, %906, %916, %var_14706, meta[relay.Constant][75] /* ty=Tensor[(672), bool] */, %var_14708, %var_14709, %917)
}

def @func_15887(%var_15879: Tensor[(2, 7, 11), int16]) -> Tensor[(2, 7, 11), int16] {
  %918 = cast(%var_15879, dtype="int16") /* ty=Tensor[(2, 7, 11), int16] */;
  %919 = shape_of(meta[relay.Constant][76] /* ty=Tensor[(2, 7, 11), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(meta[relay.Constant][76] /* ty=Tensor[(2, 7, 11), int16] */, dtype="int16") /* ty=Tensor[(2, 7, 11), int16] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_and(%920, %921) /* ty=Tensor[(2, 7, 11), int16] */
}

def @func_249(%var_243: Tensor[(5, 4, 7), uint8], %var_244: Tensor[(5, 4, 7), uint8]) -> (Tensor[(5, 4, 7), uint8],) {
  %922 = cast(%var_244, dtype="uint8") /* ty=Tensor[(5, 4, 7), uint8] */;
  %923 = shape_of(%var_243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %924 = cast(%var_243, dtype="uint8") /* ty=Tensor[(5, 4, 7), uint8] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %926 = bitwise_and(%924, %925) /* ty=Tensor[(5, 4, 7), uint8] */;
  (%926,)
}

def @func_11476(%var_11405: Tensor[(1, 3360), bool]) -> (Tensor[(5, 4, 7), uint8], Tensor[(8, 15, 14), float64], Tensor[(1680), int32], Tensor[(1, 3360), bool], Tensor[(18), uint64], Tensor[(1, 693), uint64], Tensor[(5, 4, 7), float64], Tensor[(1, 693), uint64], Tensor[(9, 1, 2), uint32]) {
  %927 = cast(meta[relay.Constant][77] /* ty=Tensor[(1680), int32] */, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %928 = cast(meta[relay.Constant][77] /* ty=Tensor[(1680), int32] */, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %929 = cast(meta[relay.Constant][78] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %930 = cast(%var_11405, dtype="bool") /* ty=Tensor[(1, 3360), bool] */;
  %931 = reshape(%927, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), int32] */;
  %932 = reshape(%928, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), int32] */;
  %933 = reshape(%929, newshape=[]) /* ty=int8 */;
  %934 = reshape(%930, newshape=[15, 16, 14]) /* ty=Tensor[(15, 16, 14), bool] */;
  %935 = @func_7733(%931, %932, %933, %934) /* ty=(Tensor[(8, 15, 14), bool], int8, Tensor[(210), int8], Tensor[(15, 16, 14), bool], Tensor[(15, 13, 15), float32], Tensor[(8, 15, 14), float64]) */;
  %936 = cast(meta[relay.Constant][78] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %937 = reshape(%936, newshape=[]) /* ty=int8 */;
  %938 = @func_2097(%937) /* ty=(Tensor[(4, 9, 12), int16], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(9, 1, 2), uint64], Tensor[(18), uint64]) */;
  %939 = @func_11196() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
  %940 = cast(meta[relay.Constant][78] /* ty=int8 */, dtype="uint64") /* ty=uint64 */;
  %941 = %938.5;
  %942 = cast(%941, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %943 = reshape(%940, newshape=[]) /* ty=uint64 */;
  %944 = reshape(%942, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), uint64] */;
  %945 = @func_1015(%943, %944) /* ty=(Tensor[(9, 1, 2), uint64],) */;
  %946 = %945.0;
  %947 = cast(%946, dtype="uint32") /* ty=Tensor[(9, 1, 2), uint32] */;
  %948 = cast(meta[relay.Constant][78] /* ty=int8 */, dtype="uint32") /* ty=uint32 */;
  %949 = @func_11213() /* ty=Tensor[(5, 4, 7), uint8] */;
  %950 = %935.5;
  %951 = @func_10595() /* ty=Tensor[(1, 693), uint64] */;
  %952 = %939.1;
  %953 = @func_10525() /* ty=Tensor[(1, 693), uint64] */;
  %954 = left_shift(%947, %948) /* ty=Tensor[(9, 1, 2), uint32] */;
  (%949, %950, meta[relay.Constant][77] /* ty=Tensor[(1680), int32] */, %var_11405, %941, %951, %952, %953, %954)
}

def @func_13128(%var_13108: Tensor[(10, 11, 3), float64]) -> (Tensor[(10, 11, 3), float64],) {
  %955 = cast(%var_13108, dtype="float64") /* ty=Tensor[(10, 11, 3), float64] */;
  %956 = acosh(%955) /* ty=Tensor[(10, 11, 3), float64] */;
  (%956,)
}

def @func_14285(%var_14210: Tensor[(4, 693), uint64], %var_14227: Tensor[(8, 693), float64]) -> (Tensor[(8, 693), uint8], Tensor[(4, 693), float32], Tensor[(15, 1, 14), bool], Tensor[(4, 693), uint32]) {
  %957 = @func_11278() /* ty=Tensor[(1, 693), uint64] */;
  %958 = cast(%957, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
  %959 = cos(%958) /* ty=Tensor[(1, 693), float64] */;
  %960 = cast(%959, dtype="uint8") /* ty=Tensor[(1, 693), uint8] */;
  %961 = cast(%var_14227, dtype="uint8") /* ty=Tensor[(8, 693), uint8] */;
  %962 = cast(%959, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
  %963 = atanh(%962) /* ty=Tensor[(1, 693), float64] */;
  %964 = cast(%957, dtype="uint32") /* ty=Tensor[(1, 693), uint32] */;
  %965 = cast(%var_14210, dtype="uint32") /* ty=Tensor[(4, 693), uint32] */;
  %966 = right_shift(%964, %965) /* ty=Tensor[(4, 693), uint32] */;
  %967 = cast(%963, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
  %968 = cast(%966, dtype="float64") /* ty=Tensor[(4, 693), float64] */;
  %969 = minimum(%967, %968) /* ty=Tensor[(4, 693), float64] */;
  %970 = cast(%969, dtype="float32") /* ty=Tensor[(4, 693), float32] */;
  %971 = @func_11839() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) */;
  %972 = cast(%963, dtype="int8") /* ty=Tensor[(1, 693), int8] */;
  %973 = cast(meta[relay.Constant][79] /* ty=Tensor[(4, 693), float64] */, dtype="int8") /* ty=Tensor[(4, 693), int8] */;
  %974 = add(%972, %973) /* ty=Tensor[(4, 693), int8] */;
  %975 = cast(%974, dtype="float64") /* ty=Tensor[(4, 693), float64] */;
  %976 = sigmoid(%975) /* ty=Tensor[(4, 693), float64] */;
  %977 = cast(%976, dtype="float64") /* ty=Tensor[(4, 693), float64] */;
  %978 = cast(%963, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
  %979 = power(%977, %978) /* ty=Tensor[(4, 693), float64] */;
  %980 = cast(%979, dtype="uint32") /* ty=Tensor[(4, 693), uint32] */;
  %981 = shape_of(%974, dtype="int32") /* ty=Tensor[(2), int32] */;
  %982 = cast(%974, dtype="uint32") /* ty=Tensor[(4, 693), uint32] */;
  %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %984 = subtract(%960, %961) /* ty=Tensor[(8, 693), uint8] */;
  %985 = erf(%970) /* ty=Tensor[(4, 693), float32] */;
  %986 = %971.1;
  %987 = maximum(%982, %983) /* ty=Tensor[(4, 693), uint32] */;
  (%984, %985, %986, %987)
}

def @func_16556() -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
  %988 = @func_10095() /* ty=Tensor[(140), uint8] */;
  %989 = cast(%988, dtype="float32") /* ty=Tensor[(140), float32] */;
  %990 = reshape(%989, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), float32] */;
  %991 = @func_13055(%990) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
  %992 = %991.2;
  (%988, %992)
}

def @func_16335(%var_16287: Tensor[(72), float32], %var_16306: Tensor[(30, 9), uint64]) -> (Tensor[(10, 2, 8), float64], Tensor[(140), uint8], Tensor[(36, 2), float32], Tensor[(72), float32], bool, Tensor[(18), uint64], Tensor[(30, 9), uint32], Tensor[(10, 2, 8), float64]) {
  %993 = @func_15380() /* ty=(Tensor[(2, 4), float64], Tensor[(10, 2, 8), float64], Tensor[(5, 4, 7), float64]) */;
  %994 = cast(%var_16287, dtype="float32") /* ty=Tensor[(72), float32] */;
  %995 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %996 = cast(meta[relay.Constant][80] /* ty=Tensor[(18), uint64] */, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %997 = cast(meta[relay.Constant][81] /* ty=Tensor[(30, 9), uint64] */, dtype="uint64") /* ty=Tensor[(30, 9), uint64] */;
  %998 = reshape(%994, newshape=[36, 2]) /* ty=Tensor[(36, 2), float32] */;
  %999 = reshape(%995, newshape=[]) /* ty=bool */;
  %1000 = reshape(%996, newshape=[18, 1]) /* ty=Tensor[(18, 1), uint64] */;
  %1001 = reshape(%997, newshape=[18, 15]) /* ty=Tensor[(18, 15), uint64] */;
  %1002 = @func_12590(%998, %999, %1000, %1001) /* ty=(Tensor[(1, 693), uint64], Tensor[(140), uint8], Tensor[(5, 4, 7), float64], Tensor[(140), uint8], Tensor[(4, 3, 6), bool], Tensor[(36, 2), float32], Tensor[(140), uint8], Tensor[(2, ?, 12), bool], bool, Tensor[(18, 15), float64]) */;
  %1003 = cast(%var_16306, dtype="uint32") /* ty=Tensor[(30, 9), uint32] */;
  %1004 = shape_of(meta[relay.Constant][81] /* ty=Tensor[(30, 9), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1005 = cast(meta[relay.Constant][81] /* ty=Tensor[(30, 9), uint64] */, dtype="uint32") /* ty=Tensor[(30, 9), uint32] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1007 = %993.1;
  %1008 = cast(%1007, dtype="float64") /* ty=Tensor[(10, 2, 8), float64] */;
  %1009 = reshape(%1008, newshape=[10, 2, 8]) /* ty=Tensor[(10, 2, 8), float64] */;
  %1010 = @func_15307() /* ty=Tensor[(140), uint8] */;
  %1011 = %1002.5;
  %1012 = add(%1005, %1006) /* ty=Tensor[(30, 9), uint32] */;
  %1013 = @func_4950(%1009) /* ty=Tensor[(10, 2, 8), float64] */;
  (%1007, %1010, %1011, %var_16287, False /* ty=bool */, meta[relay.Constant][80] /* ty=Tensor[(18), uint64] */, %1012, %1013)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11278() -> Tensor[(1, 693), uint64] {
  %0 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %0.2
}

def @func_10264() -> Tensor[(5, 4, 7), uint8] {
  @func_10262() /* ty=Tensor[(5, 4, 7), uint8] */
}

def @func_12147(%var_12135: Tensor[(605), float32]) -> (Tensor[(140), uint8], Tensor[(1, 693), float64], Tensor[(11, 5, 11), float32], Tensor[(700), uint64], Tensor[(605), float32]) {
  %1 = @func_10525() /* ty=Tensor[(1, 693), uint64] */;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %4 = cast(%var_12135, dtype="float32") /* ty=Tensor[(605), float32] */;
  %5 = reshape(%3, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint64] */;
  %6 = reshape(%4, newshape=[11, 55]) /* ty=Tensor[(11, 55), float32] */;
  %7 = @func_4755(%5, %6) /* ty=(Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) */;
  %8 = @func_10495() /* ty=Tensor[(140), uint8] */;
  %9 = log2(%2) /* ty=Tensor[(1, 693), float64] */;
  %10 = %7.1;
  (%8, %9, %10, meta[relay.Constant][0] /* ty=Tensor[(700), uint64] */, %var_12135)
}

def @func_12731() -> (Tensor[(5, 4, 7), int32], Tensor[(105, 2), bool], Tensor[(5, 4, 7), uint8]) {
  @func_12729() /* ty=(Tensor[(5, 4, 7), int32], Tensor[(105, 2), bool], Tensor[(5, 4, 7), uint8]) */
}

def @func_14171() -> Tensor[(5, 4, 7), float32] {
  @func_14169() /* ty=Tensor[(5, 4, 7), float32] */
}

def @func_15380() -> (Tensor[(2, 4), float64], Tensor[(10, 2, 8), float64], Tensor[(5, 4, 7), float64]) {
  %11 = @func_13642() /* ty=(Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), uint8], Tensor[(2, 2, 2), float64], Tensor[(2, 4), float64]) */;
  %12 = @func_10811() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(10, 2, 8), float64], Tensor[(160), float64]) */;
  %13 = @func_14350() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
  %14 = %11.3;
  %15 = %12.1;
  %16 = %13.1;
  (%14, %15, %16)
}

def @func_11080(%var_11077: Tensor[(700), uint64], %var_11078: Tensor[(25), float64], %var_11079: Tensor[(25), uint16]) -> (Tensor[(210), int8], Tensor[(700), uint64], Tensor[(1, 693), int32], Tensor[(25), int8]) {
  %37 = fn (%var_11035: Tensor[(700), uint64], %var_11036: Tensor[(25), float64], %var_11072: Tensor[(25), uint16]) -> (Tensor[(210), int8], Tensor[(700), uint64], Tensor[(1, 693), int32], Tensor[(25), int8]) {
    %17 = cast(%var_11035, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %18 = cast(%var_11036, dtype="float64") /* ty=Tensor[(25), float64] */;
    %19 = cast(meta[relay.Constant][1] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %20 = reshape(%17, newshape=[700]) /* ty=Tensor[(700), uint64] */;
    %21 = reshape(%18, newshape=[25]) /* ty=Tensor[(25), float64] */;
    %22 = reshape(%19, newshape=[]) /* ty=int8 */;
    %23 = @func_9835(%20, %21, %22) /* ty=(Tensor[(140), uint8], Tensor[(56), bool], Tensor[(2, 336), bool], Tensor[(605, 700), uint64], Tensor[(11, 5, 11), float32], Tensor[(5, ?, 5), bool], Tensor[(25), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(210), int8], Tensor[(11, 5, 11), float32], Tensor[(5, 4, 7), int16]) */;
    %24 = @func_10595() /* ty=Tensor[(1, 693), uint64] */;
    %25 = cast(%24, dtype="int32") /* ty=Tensor[(1, 693), int32] */;
    %26 = cast(meta[relay.Constant][1] /* ty=int8 */, dtype="int32") /* ty=int32 */;
    %27 = cast(%var_11036, dtype="uint16") /* ty=Tensor[(25), uint16] */;
    %28 = cast(meta[relay.Constant][1] /* ty=int8 */, dtype="uint16") /* ty=uint16 */;
    %29 = right_shift(%27, %28) /* ty=Tensor[(25), uint16] */;
    %30 = cast(%var_11072, dtype="int8") /* ty=Tensor[(25), int8] */;
    %31 = shape_of(%29, dtype="int32") /* ty=Tensor[(1), int32] */;
    %32 = cast(%29, dtype="int8") /* ty=Tensor[(25), int8] */;
    %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?), int8] */;
    %34 = %23.10;
    %35 = bitwise_or(%25, %26) /* ty=Tensor[(1, 693), int32] */;
    %36 = subtract(%32, %33) /* ty=Tensor[(25), int8] */;
    (%34, %var_11035, %35, %36)
  };
  %37(%var_11077, %var_11078, %var_11079) /* ty=(Tensor[(210), int8], Tensor[(700), uint64], Tensor[(1, 693), int32], Tensor[(25), int8]) */
}

def @func_11991(%var_11989: Tensor[(5, 4, 7), float64], %var_11990: Tensor[(5, 4, 7), float64]) -> (Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), bool]) {
  @func_11987(%var_11989, %var_11990) /* ty=(Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), bool]) */
}

def @func_12729() -> (Tensor[(5, 4, 7), int32], Tensor[(105, 2), bool], Tensor[(5, 4, 7), uint8]) {
  %38 = @func_10741() /* ty=(Tensor[(5, 4, 7), float64],) */;
  %39 = %38.0;
  %40 = cast(%39, dtype="int32") /* ty=Tensor[(5, 4, 7), int32] */;
  %41 = cast(meta[relay.Constant][2] /* ty=int8 */, dtype="int32") /* ty=int32 */;
  %42 = cast(meta[relay.Constant][2] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %43 = reshape(%42, newshape=[]) /* ty=int8 */;
  %44 = @func_11006(%43) /* ty=(Tensor[(140), uint8], Tensor[(140), uint8], int8, int8, Tensor[(105, 2), int8]) */;
  %45 = %44.4;
  %46 = cast(%45, dtype="bool") /* ty=Tensor[(105, 2), bool] */;
  %47 = cast(meta[relay.Constant][2] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %48 = @func_12671() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %49 = logical_xor(%40, %41) /* ty=Tensor[(5, 4, 7), int32] */;
  %50 = less(%46, %47) /* ty=Tensor[(105, 2), bool] */;
  %51 = %48.0;
  (%49, %50, %51)
}

def @func_13538(%var_13536: Tensor[(700), uint64], %var_13537: int8) -> (Tensor[(140), uint8], Tensor[(11, 5, 11), float32], Tensor[(700), uint64], Tensor[(25), bool], Tensor[(11, 5, 11), float32]) {
  %68 = fn (%var_13513: Tensor[(700), uint64], %var_13515: int8) -> (Tensor[(140), uint8], Tensor[(11, 5, 11), float32], Tensor[(700), uint64], Tensor[(25), bool], Tensor[(11, 5, 11), float32]) {
    %52 = @func_11658() /* ty=(Tensor[(140), uint8],) */;
    %53 = cast(%var_13513, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %54 = cast(meta[relay.Constant][3] /* ty=Tensor[(25), float64] */, dtype="float64") /* ty=Tensor[(25), float64] */;
    %55 = cast(%var_13515, dtype="int8") /* ty=int8 */;
    %56 = reshape(%53, newshape=[700]) /* ty=Tensor[(700), uint64] */;
    %57 = reshape(%54, newshape=[25]) /* ty=Tensor[(25), float64] */;
    %58 = reshape(%55, newshape=[]) /* ty=int8 */;
    %59 = @func_9835(%56, %57, %58) /* ty=(Tensor[(140), uint8], Tensor[(56), bool], Tensor[(2, 336), bool], Tensor[(605, 700), uint64], Tensor[(11, 5, 11), float32], Tensor[(5, ?, 5), bool], Tensor[(25), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(210), int8], Tensor[(11, 5, 11), float32], Tensor[(5, 4, 7), int16]) */;
    %60 = cast(%var_13515, dtype="bool") /* ty=bool */;
    %61 = cast(meta[relay.Constant][3] /* ty=Tensor[(25), float64] */, dtype="bool") /* ty=Tensor[(25), bool] */;
    %62 = %59.4;
    %63 = cast(%62, dtype="float32") /* ty=Tensor[(11, 5, 11), float32] */;
    %64 = reshape(%63, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), float32] */;
    %65 = %52.0;
    %66 = less(%60, %61) /* ty=Tensor[(25), bool] */;
    %67 = @func_4071(%64) /* ty=Tensor[(11, 5, 11), float32] */;
    (%65, %62, %var_13513, %66, %67)
  };
  %68(%var_13536, %var_13537) /* ty=(Tensor[(140), uint8], Tensor[(11, 5, 11), float32], Tensor[(700), uint64], Tensor[(25), bool], Tensor[(11, 5, 11), float32]) */
}

def @func_9193(%var_9191: Tensor[(16, 9, 1), float64]) -> (Tensor[(210), int8], Tensor[(16, 9, 1), float64]) {
  @func_9190(%var_9191) /* ty=(Tensor[(210), int8], Tensor[(16, 9, 1), float64]) */
}

def @func_10922(%var_10920: Tensor[(1680), int32], %var_10921: Tensor[(3360), bool]) -> (Tensor[(8, 15, 14), float64], Tensor[(1680), int32], int8, Tensor[(3360), bool], Tensor[(?, 693), int16], Tensor[(?, 693), int64], Tensor[(144), float64], Tensor[(16, 9, 693), bool], Tensor[(10, 693), uint16]) {
  %116 = fn (%var_10837: Tensor[(1680), int32], %var_10839: Tensor[(3360), bool]) -> (Tensor[(8, 15, 14), float64], Tensor[(1680), int32], int8, Tensor[(3360), bool], Tensor[(?, 693), int16], Tensor[(?, 693), int64], Tensor[(144), float64], Tensor[(16, 9, 693), bool], Tensor[(10, 693), uint16]) {
    %69 = cast(%var_10837, dtype="int32") /* ty=Tensor[(1680), int32] */;
    %70 = cast(%var_10837, dtype="int32") /* ty=Tensor[(1680), int32] */;
    %71 = cast(meta[relay.Constant][4] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %72 = cast(%var_10839, dtype="bool") /* ty=Tensor[(3360), bool] */;
    %73 = reshape(%69, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), int32] */;
    %74 = reshape(%70, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), int32] */;
    %75 = reshape(%71, newshape=[]) /* ty=int8 */;
    %76 = reshape(%72, newshape=[15, 16, 14]) /* ty=Tensor[(15, 16, 14), bool] */;
    %77 = @func_7733(%73, %74, %75, %76) /* ty=(Tensor[(8, 15, 14), bool], int8, Tensor[(210), int8], Tensor[(15, 16, 14), bool], Tensor[(15, 13, 15), float32], Tensor[(8, 15, 14), float64]) */;
    %78 = @func_10525() /* ty=Tensor[(1, 693), uint64] */;
    %79 = cast(%78, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
    %80 = tan(%79) /* ty=Tensor[(1, 693), float64] */;
    %81 = cast(%78, dtype="bool") /* ty=Tensor[(1, 693), bool] */;
    %82 = shape_of(%80, dtype="int32") /* ty=Tensor[(2), int32] */;
    %83 = cast(%80, dtype="bool") /* ty=Tensor[(1, 693), bool] */;
    %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %85 = greater(%83, %84) /* ty=Tensor[(?, 693), bool] */;
    %86 = cast(%85, dtype="float32") /* ty=Tensor[(?, 693), float32] */;
    %87 = sin(%86) /* ty=Tensor[(?, 693), float32] */;
    %88 = cast(%80, dtype="int16") /* ty=Tensor[(1, 693), int16] */;
    %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(2), int32] */;
    %90 = cast(%87, dtype="int16") /* ty=Tensor[(?, 693), int16] */;
    %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %92 = cast(%85, dtype="float32") /* ty=Tensor[(?, 693), float32] */;
    %93 = asin(%92) /* ty=Tensor[(?, 693), float32] */;
    %94 = cast(%80, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
    %95 = shape_of(%93, dtype="int32") /* ty=Tensor[(2), int32] */;
    %96 = cast(%93, dtype="float64") /* ty=Tensor[(?, 693), float64] */;
    %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %98 = divide(%96, %97) /* ty=Tensor[(?, 693), float64] */;
    %99 = cast(%93, dtype="int64") /* ty=Tensor[(?, 693), int64] */;
    %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(2), int32] */;
    %101 = cast(%98, dtype="int64") /* ty=Tensor[(?, 693), int64] */;
    %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %103 = cast(meta[relay.Constant][5] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %104 = reshape(%103, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), float64] */;
    %105 = @func_9190(%104) /* ty=(Tensor[(210), int8], Tensor[(16, 9, 1), float64]) */;
    %106 = %105.1;
    %107 = cast(%98, dtype="bool") /* ty=Tensor[(?, 693), bool] */;
    %108 = cast(%106, dtype="bool") /* ty=Tensor[(16, 9, 1), bool] */;
    %109 = cast(%80, dtype="uint16") /* ty=Tensor[(1, 693), uint16] */;
    %110 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 693), float64] */, dtype="uint16") /* ty=Tensor[(10, 693), uint16] */;
    %111 = %77.5;
    %112 = right_shift(%90, %91) /* ty=Tensor[(?, 693), int16] */;
    %113 = bitwise_and(%101, %102) /* ty=Tensor[(?, 693), int64] */;
    %114 = greater_equal(%107, %108) /* ty=Tensor[(16, 9, 693), bool] */;
    %115 = minimum(%109, %110) /* ty=Tensor[(10, 693), uint16] */;
    (%111, %var_10837, meta[relay.Constant][4] /* ty=int8 */, %var_10839, %112, %113, meta[relay.Constant][5] /* ty=Tensor[(144), float64] */, %114, %115)
  };
  %116(%var_10920, %var_10921) /* ty=(Tensor[(8, 15, 14), float64], Tensor[(1680), int32], int8, Tensor[(3360), bool], Tensor[(?, 693), int16], Tensor[(?, 693), int64], Tensor[(144), float64], Tensor[(16, 9, 693), bool], Tensor[(10, 693), uint16]) */
}

def @func_14180() -> (Tensor[(5, 4, 7), uint8],) {
  %117 = @func_11642() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %118 = %117.0;
  (%118,)
}

def @func_13643() -> (Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), uint8], Tensor[(2, 2, 2), float64], Tensor[(2, 4), float64]) {
  %126 = fn () -> (Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), uint8], Tensor[(2, 2, 2), float64], Tensor[(2, 4), float64]) {
    %119 = @func_12624() /* ty=(Tensor[(5, 4, 7), uint8],) */;
    %120 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 4), float64] */, dtype="float64") /* ty=Tensor[(2, 4), float64] */;
    %121 = reshape(%120, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float64] */;
    %122 = @func_11519(%121) /* ty=(Tensor[(2, 2, 2), float64],) */;
    %123 = @func_12190() /* ty=Tensor[(5, 4, 7), float32] */;
    %124 = %119.0;
    %125 = %122.0;
    (%123, %124, %125, meta[relay.Constant][7] /* ty=Tensor[(2, 4), float64] */)
  };
  %126() /* ty=(Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), uint8], Tensor[(2, 2, 2), float64], Tensor[(2, 4), float64]) */
}

def @func_11918(%var_11916: Tensor[(2, 4), float64]) -> (Tensor[(1, 693), uint64], Tensor[(2, 2, 2), float64], Tensor[(2, 4), float64]) {
  @func_11915(%var_11916) /* ty=(Tensor[(1, 693), uint64], Tensor[(2, 2, 2), float64], Tensor[(2, 4), float64]) */
}

def @func_16360() -> (Tensor[(5, 4, 7), uint8],) {
  @func_16358() /* ty=(Tensor[(5, 4, 7), uint8],) */
}

def @func_11619() -> (Tensor[(5, 4, 7), float32], Tensor[(1, 693), uint64]) {
  %127 = @func_10485() /* ty=Tensor[(5, 4, 7), float64] */;
  %128 = cast(%127, dtype="float32") /* ty=Tensor[(5, 4, 7), float32] */;
  %129 = atan(%128) /* ty=Tensor[(5, 4, 7), float32] */;
  %130 = @func_10595() /* ty=Tensor[(1, 693), uint64] */;
  (%129, %130)
}

def @func_11894() -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float32]) {
  @func_11892() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float32]) */
}

def @func_8835(%var_8830: Tensor[(1, 7, 8), bool], %var_8831: Tensor[(12, 7, 8), bool], %var_8832: Tensor[(700), uint64], %var_8833: Tensor[(605), float32], %var_8834: Tensor[(140), uint8]) -> (Tensor[(12, 7, 8), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) {
  %148 = fn (%var_8794: Tensor[(1, 7, 8), bool], %var_8795: Tensor[(12, 7, 8), bool], %var_8811: Tensor[(700), uint64], %var_8812: Tensor[(605), float32], %var_8826: Tensor[(140), uint8]) -> (Tensor[(12, 7, 8), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) {
    %131 = cast(%var_8794, dtype="bool") /* ty=Tensor[(1, 7, 8), bool] */;
    %132 = cast(%var_8795, dtype="bool") /* ty=Tensor[(12, 7, 8), bool] */;
    %133 = logical_or(%131, %132) /* ty=Tensor[(12, 7, 8), bool] */;
    %134 = cast(%133, dtype="float64") /* ty=Tensor[(12, 7, 8), float64] */;
    %135 = cast(%var_8811, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %136 = cast(%var_8812, dtype="float32") /* ty=Tensor[(605), float32] */;
    %137 = reshape(%135, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint64] */;
    %138 = reshape(%136, newshape=[11, 55]) /* ty=Tensor[(11, 55), float32] */;
    %139 = @func_4755(%137, %138) /* ty=(Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) */;
    %140 = cast(%var_8826, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %141 = cast(%var_8826, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %142 = reshape(%140, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
    %143 = reshape(%141, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
    %144 = @func_249(%142, %143) /* ty=(Tensor[(5, 4, 7), uint8],) */;
    %145 = cosh(%134) /* ty=Tensor[(12, 7, 8), float64] */;
    %146 = %139.2;
    %147 = %144.0;
    (%145, %146, %var_8811, %var_8812, %147, %var_8826)
  };
  %148(%var_8830, %var_8831, %var_8832, %var_8833, %var_8834) /* ty=(Tensor[(12, 7, 8), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */
}

def @func_13666() -> (Tensor[(10, 2, 8), float64],) {
  %149 = @func_10811() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(10, 2, 8), float64], Tensor[(160), float64]) */;
  %150 = %149.1;
  (%150,)
}

def @func_10627() -> (Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) {
  %151 = @func_10485() /* ty=Tensor[(5, 4, 7), float64] */;
  %152 = @func_10370() /* ty=Tensor[(140), uint8] */;
  (%151, %152)
}

def @func_13668() -> (Tensor[(10, 2, 8), float64],) {
  @func_13666() /* ty=(Tensor[(10, 2, 8), float64],) */
}

def @func_10526() -> Tensor[(1, 693), uint64] {
  %154 = fn () -> Tensor[(1, 693), uint64] {
    %153 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
    %153.2
  };
  %154() /* ty=Tensor[(1, 693), uint64] */
}

def @func_12053() -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
  %161 = fn () -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
    %155 = @func_9640() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) */;
    %156 = @func_10741() /* ty=(Tensor[(5, 4, 7), float64],) */;
    %157 = %156.0;
    %158 = cast(%157, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
    %159 = %155.1;
    %160 = tan(%158) /* ty=Tensor[(5, 4, 7), float64] */;
    (%159, %160)
  };
  %161() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */
}

def @func_13462(%var_13455: Tensor[(3, 1, 4), float32]) -> (Tensor[(3, 1, 4), float32],) {
  %162 = cast(%var_13455, dtype="float32") /* ty=Tensor[(3, 1, 4), float32] */;
  %163 = exp(%162) /* ty=Tensor[(3, 1, 4), float32] */;
  (%163,)
}

def @func_9865(%var_9863: Tensor[(1680), int32], %var_9864: Tensor[(3360), bool]) -> (Tensor[(140), uint8], Tensor[(210), int8], Tensor[(1680), int32], int8, Tensor[(3360), bool]) {
  @func_9861(%var_9863, %var_9864) /* ty=(Tensor[(140), uint8], Tensor[(210), int8], Tensor[(1680), int32], int8, Tensor[(3360), bool]) */
}

def @func_14169() -> Tensor[(5, 4, 7), float32] {
  @func_12190() /* ty=Tensor[(5, 4, 7), float32] */
}

def @func_9966(%var_9964: Tensor[(140), uint8], %var_9965: Tensor[(330), float32]) -> (Tensor[(693), uint64], Tensor[(9, 15, 8), uint16], Tensor[(1080), uint16], Tensor[(140), uint8], Tensor[(16, 9, 1), float64], Tensor[(144), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32]) {
  %184 = fn (%var_9910: Tensor[(140), uint8], %var_9945: Tensor[(330), float32]) -> (Tensor[(693), uint64], Tensor[(9, 15, 8), uint16], Tensor[(1080), uint16], Tensor[(140), uint8], Tensor[(16, 9, 1), float64], Tensor[(144), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32]) {
    %164 = @func_9640() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) */;
    %165 = cast(meta[relay.Constant][8] /* ty=Tensor[(1080), uint16] */, dtype="uint16") /* ty=Tensor[(1080), uint16] */;
    %166 = cast(meta[relay.Constant][8] /* ty=Tensor[(1080), uint16] */, dtype="uint16") /* ty=Tensor[(1080), uint16] */;
    %167 = cast(%var_9910, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %168 = reshape(%165, newshape=[9, 15, 8]) /* ty=Tensor[(9, 15, 8), uint16] */;
    %169 = reshape(%166, newshape=[9, 15, 8]) /* ty=Tensor[(9, 15, 8), uint16] */;
    %170 = reshape(%167, newshape=[140]) /* ty=Tensor[(140), uint8] */;
    %171 = @func_8788(%168, %169, %170) /* ty=(Tensor[(9, 15, 8), uint16], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
    %172 = cast(meta[relay.Constant][9] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %173 = reshape(%172, newshape=[16, 9, 1]) /* ty=Tensor[(16, 9, 1), float64] */;
    %174 = @func_9190(%173) /* ty=(Tensor[(210), int8], Tensor[(16, 9, 1), float64]) */;
    %175 = cast(meta[relay.Constant][10] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
    %176 = cast(%var_9945, dtype="float32") /* ty=Tensor[(330), float32] */;
    %177 = reshape(%175, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
    %178 = reshape(%176, newshape=[6, 11, 5]) /* ty=Tensor[(6, 11, 5), float32] */;
    %179 = @func_2703(%177, %178) /* ty=(Tensor[(6, 11, 5), float32], Tensor[(18, 1), uint64], Tensor[(15, 1, 14), bool], Tensor[(210), int8], Tensor[(9, 1, 2), bool]) */;
    %180 = %164.2;
    %181 = %171.0;
    %182 = %174.1;
    %183 = %179.2;
    (%180, %181, meta[relay.Constant][8] /* ty=Tensor[(1080), uint16] */, %var_9910, %182, meta[relay.Constant][9] /* ty=Tensor[(144), float64] */, %183, meta[relay.Constant][10] /* ty=Tensor[(66), float32] */, %var_9945)
  };
  %184(%var_9964, %var_9965) /* ty=(Tensor[(693), uint64], Tensor[(9, 15, 8), uint16], Tensor[(1080), uint16], Tensor[(140), uint8], Tensor[(16, 9, 1), float64], Tensor[(144), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32]) */
}

def @func_11942(%var_11927: Tensor[(56, 12), bool]) -> (Tensor[(5, 4, 7), float64], Tensor[(700), uint64], Tensor[(56, 12), bool], Tensor[(1, 605), float32]) {
  %185 = cast(%var_11927, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
  %186 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 605), float32] */, dtype="float32") /* ty=Tensor[(1, 605), float32] */;
  %187 = reshape(%185, newshape=[672]) /* ty=Tensor[(672), bool] */;
  %188 = reshape(%186, newshape=[1, 605]) /* ty=Tensor[(1, 605), float32] */;
  %189 = @func_10464(%187, %188) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(700), uint64], Tensor[(56), bool], Tensor[(672), bool], Tensor[(700), uint64], Tensor[(1, 605), float32]) */;
  %190 = @func_10485() /* ty=Tensor[(5, 4, 7), float64] */;
  %191 = %189.1;
  (%190, %191, %var_11927, meta[relay.Constant][11] /* ty=Tensor[(1, 605), float32] */)
}

def @func_15889(%var_15888: Tensor[(2, 7, 11), int16]) -> Tensor[(2, 7, 11), int16] {
  %196 = fn (%var_15879: Tensor[(2, 7, 11), int16]) -> Tensor[(2, 7, 11), int16] {
    %192 = cast(%var_15879, dtype="int16") /* ty=Tensor[(2, 7, 11), int16] */;
    %193 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(2, 7, 11), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %194 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 7, 11), int16] */, dtype="int16") /* ty=Tensor[(2, 7, 11), int16] */;
    %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_and(%194, %195) /* ty=Tensor[(2, 7, 11), int16] */
  };
  %196(%var_15888) /* ty=Tensor[(2, 7, 11), int16] */
}

def @func_13131(%var_13129: Tensor[(10, 11, 3), float64]) -> (Tensor[(10, 11, 3), float64],) {
  @func_13128(%var_13129) /* ty=(Tensor[(10, 11, 3), float64],) */
}

def @func_10370() -> Tensor[(140), uint8] {
  @func_10095() /* ty=Tensor[(140), uint8] */
}

def @func_12422() -> (Tensor[(5, 4, 7), uint8],) {
  %197 = @func_11351() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %198 = %197.0;
  (%198,)
}

def @func_12590(%var_12539: Tensor[(36, 2), float32], %var_12571: bool, %var_12572: Tensor[(18, 1), uint64], %var_12578: Tensor[(18, 15), uint64]) -> (Tensor[(1, 693), uint64], Tensor[(140), uint8], Tensor[(5, 4, 7), float64], Tensor[(140), uint8], Tensor[(4, 3, 6), bool], Tensor[(36, 2), float32], Tensor[(140), uint8], Tensor[(2, ?, 12), bool], bool, Tensor[(18, 15), float64]) {
  %199 = @func_12052() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
  %200 = @func_12052() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
  %201 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %202 = cast(%var_12539, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
  %203 = cast(%var_12539, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
  %204 = reshape(%202, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %205 = reshape(%203, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %206 = @func_12312() /* ty=(Tensor[(140), uint8],) */;
  %207 = cast(%var_12571, dtype="bool") /* ty=bool */;
  %208 = cast(%var_12572, dtype="uint64") /* ty=Tensor[(18, 1), uint64] */;
  %209 = reshape(%207, newshape=[]) /* ty=bool */;
  %210 = reshape(%208, newshape=[18, 1]) /* ty=Tensor[(18, 1), uint64] */;
  %211 = @func_9599(%209, %210) /* ty=(Tensor[(2, ?, 12), float64], Tensor[(9, 1, 2), uint64], Tensor[(18, 1), uint64], Tensor[(2, ?, 12), bool], Tensor[(2, ?, 12), float64], Tensor[(2, 1, 12), float32]) */;
  %212 = cast(%var_12572, dtype="float64") /* ty=Tensor[(18, 1), float64] */;
  %213 = cast(%var_12578, dtype="float64") /* ty=Tensor[(18, 15), float64] */;
  %214 = @func_11278() /* ty=Tensor[(1, 693), uint64] */;
  %215 = %199.0;
  %216 = %200.1;
  %217 = %201.0;
  %218 = @func_11126(%204, %205) /* ty=Tensor[(4, 3, 6), bool] */;
  %219 = %206.0;
  %220 = %211.3;
  %221 = divide(%212, %213) /* ty=Tensor[(18, 15), float64] */;
  (%214, %215, %216, %217, %218, %var_12539, %219, %220, %var_12571, %221)
}

def @func_6148(%var_6146: Tensor[(13, 14, 16), int32], %var_6147: Tensor[(13, 14, 16), int32]) -> (Tensor[(13, 14, 16), bool], Tensor[(5, ?, 5), bool], Tensor[(25), float64]) {
  @func_6144(%var_6146, %var_6147) /* ty=(Tensor[(13, 14, 16), bool], Tensor[(5, ?, 5), bool], Tensor[(25), float64]) */
}

def @func_15822() -> Tensor[(140), uint8] {
  %223 = fn () -> Tensor[(140), uint8] {
    %222 = @func_13193() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) */;
    %222.1
  };
  %223() /* ty=Tensor[(140), uint8] */
}

def @func_15162() -> (Tensor[(140), uint8], Tensor[(11, 11, 11), float32]) {
  @func_15160() /* ty=(Tensor[(140), uint8], Tensor[(11, 11, 11), float32]) */
}

def @func_13231() -> (Tensor[(210), int8], Tensor[(5, 4, 7), float64], Tensor[(5, 4, 7), float32]) {
  @func_13229() /* ty=(Tensor[(210), int8], Tensor[(5, 4, 7), float64], Tensor[(5, 4, 7), float32]) */
}

def @func_14352() -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
  @func_14350() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */
}

def @func_1018(%var_1016: uint64, %var_1017: Tensor[(9, 1, 2), uint64]) -> (Tensor[(9, 1, 2), uint64],) {
  %227 = fn (%var_998: uint64, %var_999: Tensor[(9, 1, 2), uint64]) -> (Tensor[(9, 1, 2), uint64],) {
    %224 = cast(%var_998, dtype="uint64") /* ty=uint64 */;
    %225 = cast(%var_999, dtype="uint64") /* ty=Tensor[(9, 1, 2), uint64] */;
    %226 = right_shift(%224, %225) /* ty=Tensor[(9, 1, 2), uint64] */;
    (%226,)
  };
  %227(%var_1016, %var_1017) /* ty=(Tensor[(9, 1, 2), uint64],) */
}

def @func_13820() -> Tensor[(10, 2, 8), float64] {
  %229 = fn () -> Tensor[(10, 2, 8), float64] {
    %228 = @func_13666() /* ty=(Tensor[(10, 2, 8), float64],) */;
    %228.0
  };
  %229() /* ty=Tensor[(10, 2, 8), float64] */
}

def @func_6144(%var_6126: Tensor[(13, 14, 16), int32], %var_6127: Tensor[(13, 14, 16), int32]) -> (Tensor[(13, 14, 16), bool], Tensor[(5, ?, 5), bool], Tensor[(25), float64]) {
  %230 = cast(%var_6127, dtype="bool") /* ty=Tensor[(13, 14, 16), bool] */;
  %231 = shape_of(%var_6126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%var_6126, dtype="bool") /* ty=Tensor[(13, 14, 16), bool] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %234 = cast(meta[relay.Constant][13] /* ty=Tensor[(25), float64] */, dtype="float64") /* ty=Tensor[(25), float64] */;
  %235 = reshape(%234, newshape=[5, 1, 5]) /* ty=Tensor[(5, 1, 5), float64] */;
  %236 = @func_5816(%235) /* ty=(Tensor[(5, ?, 5), bool],) */;
  %237 = less_equal(%232, %233) /* ty=Tensor[(13, 14, 16), bool] */;
  %238 = %236.0;
  (%237, %238, meta[relay.Constant][13] /* ty=Tensor[(25), float64] */)
}

def @func_10096() -> Tensor[(140), uint8] {
  %240 = fn () -> Tensor[(140), uint8] {
    %239 = @func_9640() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) */;
    %239.1
  };
  %240() /* ty=Tensor[(140), uint8] */
}

def @func_11621() -> (Tensor[(5, 4, 7), float32], Tensor[(1, 693), uint64]) {
  @func_11619() /* ty=(Tensor[(5, 4, 7), float32], Tensor[(1, 693), uint64]) */
}

def @func_13576() -> (Tensor[(5, 4, 7), float64],) {
  %241 = @func_12190() /* ty=Tensor[(5, 4, 7), float32] */;
  %242 = cast(%241, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
  %243 = asin(%242) /* ty=Tensor[(5, 4, 7), float64] */;
  (%243,)
}

def @func_12230() -> Tensor[(140), uint8] {
  %245 = fn () -> Tensor[(140), uint8] {
    %244 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
    %244.0
  };
  %245() /* ty=Tensor[(140), uint8] */
}

def @func_12258() -> (Tensor[(140), uint8],) {
  %248 = fn () -> (Tensor[(140), uint8],) {
    %246 = @func_12052() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
    %247 = %246.0;
    (%247,)
  };
  %248() /* ty=(Tensor[(140), uint8],) */
}

def @func_11841() -> (Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) {
  @func_11839() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) */
}

def @func_11915(%var_11913: Tensor[(2, 4), float64]) -> (Tensor[(1, 693), uint64], Tensor[(2, 2, 2), float64], Tensor[(2, 4), float64]) {
  %249 = cast(%var_11913, dtype="float64") /* ty=Tensor[(2, 4), float64] */;
  %250 = reshape(%249, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float64] */;
  %251 = @func_11519(%250) /* ty=(Tensor[(2, 2, 2), float64],) */;
  %252 = @func_10525() /* ty=Tensor[(1, 693), uint64] */;
  %253 = %251.0;
  (%252, %253, %var_11913)
}

def @func_15619() -> (Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), float32]) {
  @func_15617() /* ty=(Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), float32]) */
}

def @func_10279(%var_10277: Tensor[(9, 3, 5), float32]) -> (Tensor[(9, 3, 5), float32], Tensor[(9, 3, 5), uint8]) {
  @func_10276(%var_10277) /* ty=(Tensor[(9, 3, 5), float32], Tensor[(9, 3, 5), uint8]) */
}

def @func_11892() -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float32]) {
  %254 = @func_11619() /* ty=(Tensor[(5, 4, 7), float32], Tensor[(1, 693), uint64]) */;
  %255 = @func_10095() /* ty=Tensor[(140), uint8] */;
  %256 = %254.0;
  (%255, %256)
}

def @func_16557() -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
  %262 = fn () -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
    %257 = @func_10095() /* ty=Tensor[(140), uint8] */;
    %258 = cast(%257, dtype="float32") /* ty=Tensor[(140), float32] */;
    %259 = reshape(%258, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), float32] */;
    %260 = @func_13055(%259) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
    %261 = %260.2;
    (%257, %261)
  };
  %262() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */
}

def @func_14364() -> Tensor[(5, 4, 7), uint8] {
  %263 = fn () -> Tensor[(5, 4, 7), uint8] {
    @func_10262() /* ty=Tensor[(5, 4, 7), uint8] */
  };
  %263() /* ty=Tensor[(5, 4, 7), uint8] */
}

def @func_13195() -> (Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) {
  @func_13193() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) */
}

def @func_13784(%var_13780: Tensor[(700), uint64], %var_13781: Tensor[(25), float64], %var_13782: int8, %var_13783: Tensor[(11, 55), float32]) -> (Tensor[(5, 4, 7), uint8], Tensor[(66), float32], Tensor[(700), uint64], Tensor[(210), int8], Tensor[(25), int64], Tensor[(605), float32], Tensor[(11, 55), float32], Tensor[(11, 55), bool]) {
  @func_13778(%var_13780, %var_13781, %var_13782, %var_13783) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(66), float32], Tensor[(700), uint64], Tensor[(210), int8], Tensor[(25), int64], Tensor[(605), float32], Tensor[(11, 55), float32], Tensor[(11, 55), bool]) */
}

def @func_11660() -> (Tensor[(140), uint8],) {
  @func_11658() /* ty=(Tensor[(140), uint8],) */
}

def @func_16217() -> (Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(15, 1, 14), bool], Tensor[(3, 924), uint64], Tensor[(2772, 2), float64]) {
  %264 = @func_14001() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(140), uint8], Tensor[(330), float32], Tensor[(5, 4, 7), uint8]) */;
  %265 = cast(meta[relay.Constant][14] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %266 = cast(meta[relay.Constant][15] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %267 = reshape(%265, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
  %268 = reshape(%266, newshape=[6, 11, 5]) /* ty=Tensor[(6, 11, 5), float32] */;
  %269 = @func_2703(%267, %268) /* ty=(Tensor[(6, 11, 5), float32], Tensor[(18, 1), uint64], Tensor[(15, 1, 14), bool], Tensor[(210), int8], Tensor[(9, 1, 2), bool]) */;
  %270 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 924), uint64] */, dtype="uint64") /* ty=Tensor[(3, 924), uint64] */;
  %271 = cast(meta[relay.Constant][17] /* ty=Tensor[(2772, 2), float64] */, dtype="float64") /* ty=Tensor[(2772, 2), float64] */;
  %272 = reshape(%270, newshape=[4, 693]) /* ty=Tensor[(4, 693), uint64] */;
  %273 = reshape(%271, newshape=[8, 693]) /* ty=Tensor[(8, 693), float64] */;
  %274 = @func_14285(%272, %273) /* ty=(Tensor[(8, 693), uint8], Tensor[(4, 693), float32], Tensor[(15, 1, 14), bool], Tensor[(4, 693), uint32]) */;
  %275 = %264.0;
  %276 = %269.2;
  %277 = %274.2;
  (%275, %276, meta[relay.Constant][14] /* ty=Tensor[(66), float32] */, meta[relay.Constant][15] /* ty=Tensor[(330), float32] */, %277, meta[relay.Constant][16] /* ty=Tensor[(3, 924), uint64] */, meta[relay.Constant][17] /* ty=Tensor[(2772, 2), float64] */)
}

def @func_4073(%var_4072: Tensor[(11, 5, 11), float32]) -> Tensor[(11, 5, 11), float32] {
  %279 = fn (%var_4063: Tensor[(11, 5, 11), float32]) -> Tensor[(11, 5, 11), float32] {
    %278 = cast(%var_4063, dtype="float32") /* ty=Tensor[(11, 5, 11), float32] */;
    acos(%278) /* ty=Tensor[(11, 5, 11), float32] */
  };
  %279(%var_4072) /* ty=Tensor[(11, 5, 11), float32] */
}

def @func_14487() -> Tensor[(140), uint8] {
  %280 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %280.0
}

def @func_14834(%var_14832: Tensor[(700), uint64]) -> (Tensor[(140), uint8], Tensor[(5, 4, 7), int16], Tensor[(700), uint64], Tensor[(25), float64], int8, Tensor[(140), uint8], Tensor[(140), uint8]) {
  @func_14831(%var_14832) /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), int16], Tensor[(700), uint64], Tensor[(25), float64], int8, Tensor[(140), uint8], Tensor[(140), uint8]) */
}

def @func_12855() -> (Tensor[(140), uint8], int8, Tensor[(140), uint8]) {
  %286 = fn () -> (Tensor[(140), uint8], int8, Tensor[(140), uint8]) {
    %281 = @func_12257() /* ty=(Tensor[(140), uint8],) */;
    %282 = @func_11839() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) */;
    %283 = %281.0;
    %284 = %282.2;
    %285 = @func_10370() /* ty=Tensor[(140), uint8] */;
    (%283, %284, %285)
  };
  %286() /* ty=(Tensor[(140), uint8], int8, Tensor[(140), uint8]) */
}

def @func_14288(%var_14286: Tensor[(4, 693), uint64], %var_14287: Tensor[(8, 693), float64]) -> (Tensor[(8, 693), uint8], Tensor[(4, 693), float32], Tensor[(15, 1, 14), bool], Tensor[(4, 693), uint32]) {
  %318 = fn (%var_14210: Tensor[(4, 693), uint64], %var_14227: Tensor[(8, 693), float64]) -> (Tensor[(8, 693), uint8], Tensor[(4, 693), float32], Tensor[(15, 1, 14), bool], Tensor[(4, 693), uint32]) {
    %287 = @func_11278() /* ty=Tensor[(1, 693), uint64] */;
    %288 = cast(%287, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
    %289 = cos(%288) /* ty=Tensor[(1, 693), float64] */;
    %290 = cast(%289, dtype="uint8") /* ty=Tensor[(1, 693), uint8] */;
    %291 = cast(%var_14227, dtype="uint8") /* ty=Tensor[(8, 693), uint8] */;
    %292 = cast(%289, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
    %293 = atanh(%292) /* ty=Tensor[(1, 693), float64] */;
    %294 = cast(%287, dtype="uint32") /* ty=Tensor[(1, 693), uint32] */;
    %295 = cast(%var_14210, dtype="uint32") /* ty=Tensor[(4, 693), uint32] */;
    %296 = right_shift(%294, %295) /* ty=Tensor[(4, 693), uint32] */;
    %297 = cast(%293, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
    %298 = cast(%296, dtype="float64") /* ty=Tensor[(4, 693), float64] */;
    %299 = minimum(%297, %298) /* ty=Tensor[(4, 693), float64] */;
    %300 = cast(%299, dtype="float32") /* ty=Tensor[(4, 693), float32] */;
    %301 = @func_11839() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) */;
    %302 = cast(%293, dtype="int8") /* ty=Tensor[(1, 693), int8] */;
    %303 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 693), float64] */, dtype="int8") /* ty=Tensor[(4, 693), int8] */;
    %304 = add(%302, %303) /* ty=Tensor[(4, 693), int8] */;
    %305 = cast(%304, dtype="float64") /* ty=Tensor[(4, 693), float64] */;
    %306 = sigmoid(%305) /* ty=Tensor[(4, 693), float64] */;
    %307 = cast(%306, dtype="float64") /* ty=Tensor[(4, 693), float64] */;
    %308 = cast(%293, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
    %309 = power(%307, %308) /* ty=Tensor[(4, 693), float64] */;
    %310 = cast(%309, dtype="uint32") /* ty=Tensor[(4, 693), uint32] */;
    %311 = shape_of(%304, dtype="int32") /* ty=Tensor[(2), int32] */;
    %312 = cast(%304, dtype="uint32") /* ty=Tensor[(4, 693), uint32] */;
    %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %314 = subtract(%290, %291) /* ty=Tensor[(8, 693), uint8] */;
    %315 = erf(%300) /* ty=Tensor[(4, 693), float32] */;
    %316 = %301.1;
    %317 = maximum(%312, %313) /* ty=Tensor[(4, 693), uint32] */;
    (%314, %315, %316, %317)
  };
  %318(%var_14286, %var_14287) /* ty=(Tensor[(8, 693), uint8], Tensor[(4, 693), float32], Tensor[(15, 1, 14), bool], Tensor[(4, 693), uint32]) */
}

def @func_13193() -> (Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) {
  %319 = @func_11101() /* ty=(Tensor[(5, 4, 7), float64],) */;
  %320 = @func_12257() /* ty=(Tensor[(140), uint8],) */;
  %321 = %319.0;
  %322 = %320.0;
  (%321, %322)
}

def @func_16038(%var_16037: int8) -> (Tensor[(5, 4, 7), float64], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) {
  %330 = fn (%var_16019: int8) -> (Tensor[(5, 4, 7), float64], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) {
    %323 = @func_14350() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
    %324 = cast(%var_16019, dtype="int8") /* ty=int8 */;
    %325 = cast(meta[relay.Constant][19] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
    %326 = reshape(%324, newshape=[]) /* ty=int8 */;
    %327 = reshape(%325, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), int8] */;
    %328 = %323.1;
    %329 = @func_1708(%326, %327) /* ty=Tensor[(15, 1, 14), bool] */;
    (%328, %329, %var_16019, meta[relay.Constant][19] /* ty=Tensor[(210), int8] */)
  };
  %330(%var_16037) /* ty=(Tensor[(5, 4, 7), float64], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) */
}

def @func_13842(%var_13839: float32, %var_13840: Tensor[(4, 10, 1), float32], %var_13841: Tensor[(6, 3), uint64]) -> (Tensor[(4, 10, 1), float32], Tensor[(18, 1), uint64], Tensor[(6, 3), uint64]) {
  %340 = fn (%var_13821: float32, %var_13822: Tensor[(4, 10, 1), float32], %var_13832: Tensor[(6, 3), uint64]) -> (Tensor[(4, 10, 1), float32], Tensor[(18, 1), uint64], Tensor[(6, 3), uint64]) {
    %331 = cast(%var_13821, dtype="float32") /* ty=float32 */;
    %332 = cast(%var_13822, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
    %333 = cast(%var_13821, dtype="bool") /* ty=bool */;
    %334 = cast(%var_13832, dtype="uint64") /* ty=Tensor[(6, 3), uint64] */;
    %335 = reshape(%333, newshape=[]) /* ty=bool */;
    %336 = reshape(%334, newshape=[18, 1]) /* ty=Tensor[(18, 1), uint64] */;
    %337 = @func_9599(%335, %336) /* ty=(Tensor[(2, ?, 12), float64], Tensor[(9, 1, 2), uint64], Tensor[(18, 1), uint64], Tensor[(2, ?, 12), bool], Tensor[(2, ?, 12), float64], Tensor[(2, 1, 12), float32]) */;
    %338 = minimum(%331, %332) /* ty=Tensor[(4, 10, 1), float32] */;
    %339 = %337.2;
    (%338, %339, %var_13832)
  };
  %340(%var_13839, %var_13840, %var_13841) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(18, 1), uint64], Tensor[(6, 3), uint64]) */
}

def @func_13595() -> Tensor[(140), uint8] {
  @func_13593() /* ty=Tensor[(140), uint8] */
}

def @func_15116() -> (Tensor[(5, 4, 7), uint8],) {
  %341 = @func_12952() /* ty=Tensor[(5, 4, 7), uint8] */;
  (%341,)
}

def @func_9861(%var_9857: Tensor[(1680), int32], %var_9859: Tensor[(3360), bool]) -> (Tensor[(140), uint8], Tensor[(210), int8], Tensor[(1680), int32], int8, Tensor[(3360), bool]) {
  %342 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %343 = cast(%var_9857, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %344 = cast(%var_9857, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %345 = cast(meta[relay.Constant][20] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %346 = cast(%var_9859, dtype="bool") /* ty=Tensor[(3360), bool] */;
  %347 = reshape(%343, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), int32] */;
  %348 = reshape(%344, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), int32] */;
  %349 = reshape(%345, newshape=[]) /* ty=int8 */;
  %350 = reshape(%346, newshape=[15, 16, 14]) /* ty=Tensor[(15, 16, 14), bool] */;
  %351 = @func_7733(%347, %348, %349, %350) /* ty=(Tensor[(8, 15, 14), bool], int8, Tensor[(210), int8], Tensor[(15, 16, 14), bool], Tensor[(15, 13, 15), float32], Tensor[(8, 15, 14), float64]) */;
  %352 = %342.0;
  %353 = %351.2;
  (%352, %353, %var_9857, meta[relay.Constant][20] /* ty=int8 */, %var_9859)
}

def @func_16407() -> (Tensor[(140), uint8], Tensor[(7, 9, 11), bool], Tensor[(7, 99), uint64]) {
  %361 = fn () -> (Tensor[(140), uint8], Tensor[(7, 9, 11), bool], Tensor[(7, 99), uint64]) {
    %354 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 99), uint64] */, dtype="uint64") /* ty=Tensor[(7, 99), uint64] */;
    %355 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 99), uint64] */, dtype="uint64") /* ty=Tensor[(7, 99), uint64] */;
    %356 = reshape(%354, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), uint64] */;
    %357 = reshape(%355, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), uint64] */;
    %358 = @func_9243(%356, %357) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(7, 9, 11), bool]) */;
    %359 = @func_10370() /* ty=Tensor[(140), uint8] */;
    %360 = %358.2;
    (%359, %360, meta[relay.Constant][21] /* ty=Tensor[(7, 99), uint64] */)
  };
  %361() /* ty=(Tensor[(140), uint8], Tensor[(7, 9, 11), bool], Tensor[(7, 99), uint64]) */
}

def @func_15230() -> Tensor[(140), uint8] {
  %362 = fn () -> Tensor[(140), uint8] {
    @func_12444() /* ty=Tensor[(140), uint8] */
  };
  %362() /* ty=Tensor[(140), uint8] */
}

def @func_11854() -> (Tensor[(5, 4, 7), float32],) {
  @func_11852() /* ty=(Tensor[(5, 4, 7), float32],) */
}

def @func_9602(%var_9600: bool, %var_9601: Tensor[(18, 1), uint64]) -> (Tensor[(2, ?, 12), float64], Tensor[(9, 1, 2), uint64], Tensor[(18, 1), uint64], Tensor[(2, ?, 12), bool], Tensor[(2, ?, 12), float64], Tensor[(2, 1, 12), float32]) {
  %394 = fn (%var_9541: bool, %var_9578: Tensor[(18, 1), uint64]) -> (Tensor[(2, ?, 12), float64], Tensor[(9, 1, 2), uint64], Tensor[(18, 1), uint64], Tensor[(2, ?, 12), bool], Tensor[(2, ?, 12), float64], Tensor[(2, 1, 12), float32]) {
    %363 = cast(%var_9541, dtype="bool") /* ty=bool */;
    %364 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 1, 12), bool] */, dtype="bool") /* ty=Tensor[(2, 1, 12), bool] */;
    %365 = logical_and(%363, %364) /* ty=Tensor[(2, 1, 12), bool] */;
    %366 = cast(%365, dtype="int16") /* ty=Tensor[(2, 1, 12), int16] */;
    %367 = cast(%var_9541, dtype="int16") /* ty=int16 */;
    %368 = right_shift(%366, %367) /* ty=Tensor[(2, 1, 12), int16] */;
    %369 = cast(%368, dtype="float64") /* ty=Tensor[(2, 1, 12), float64] */;
    %370 = erf(%369) /* ty=Tensor[(2, 1, 12), float64] */;
    %371 = cast(%368, dtype="float64") /* ty=Tensor[(2, 1, 12), float64] */;
    %372 = shape_of(%370, dtype="int32") /* ty=Tensor[(3), int32] */;
    %373 = cast(%370, dtype="float64") /* ty=Tensor[(2, 1, 12), float64] */;
    %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %375 = cast(%var_9541, dtype="uint64") /* ty=uint64 */;
    %376 = cast(%var_9578, dtype="uint64") /* ty=Tensor[(18, 1), uint64] */;
    %377 = reshape(%375, newshape=[]) /* ty=uint64 */;
    %378 = reshape(%376, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), uint64] */;
    %379 = @func_1015(%377, %378) /* ty=(Tensor[(9, 1, 2), uint64],) */;
    %380 = cast(%368, dtype="bool") /* ty=Tensor[(2, 1, 12), bool] */;
    %381 = shape_of(%370, dtype="int32") /* ty=Tensor[(3), int32] */;
    %382 = cast(%370, dtype="bool") /* ty=Tensor[(2, 1, 12), bool] */;
    %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %384 = cast(%365, dtype="float64") /* ty=Tensor[(2, 1, 12), float64] */;
    %385 = shape_of(%370, dtype="int32") /* ty=Tensor[(3), int32] */;
    %386 = cast(%370, dtype="float64") /* ty=Tensor[(2, 1, 12), float64] */;
    %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %388 = cast(%365, dtype="float32") /* ty=Tensor[(2, 1, 12), float32] */;
    %389 = floor_mod(%373, %374) /* ty=Tensor[(2, ?, 12), float64] */;
    %390 = %379.0;
    %391 = not_equal(%382, %383) /* ty=Tensor[(2, ?, 12), bool] */;
    %392 = floor_divide(%386, %387) /* ty=Tensor[(2, ?, 12), float64] */;
    %393 = atan(%388) /* ty=Tensor[(2, 1, 12), float32] */;
    (%389, %390, %var_9578, %391, %392, %393)
  };
  %394(%var_9600, %var_9601) /* ty=(Tensor[(2, ?, 12), float64], Tensor[(9, 1, 2), uint64], Tensor[(18, 1), uint64], Tensor[(2, ?, 12), bool], Tensor[(2, ?, 12), float64], Tensor[(2, 1, 12), float32]) */
}

def @func_13261() -> (Tensor[(140), uint8], Tensor[(15, 1, 14), bool], int8, Tensor[(5, 4, 7), bool]) {
  %403 = fn () -> (Tensor[(140), uint8], Tensor[(15, 1, 14), bool], int8, Tensor[(5, 4, 7), bool]) {
    %395 = @func_11196() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
    %396 = cast(meta[relay.Constant][23] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %397 = reshape(%396, newshape=[]) /* ty=int8 */;
    %398 = @func_2097(%397) /* ty=(Tensor[(4, 9, 12), int16], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(9, 1, 2), uint64], Tensor[(18), uint64]) */;
    %399 = @func_11200() /* ty=(Tensor[(5, 4, 7), bool],) */;
    %400 = %395.0;
    %401 = %398.1;
    %402 = %399.0;
    (%400, %401, meta[relay.Constant][23] /* ty=int8 */, %402)
  };
  %403() /* ty=(Tensor[(140), uint8], Tensor[(15, 1, 14), bool], int8, Tensor[(5, 4, 7), bool]) */
}

def @func_14002() -> (Tensor[(5, 4, 7), bool], Tensor[(140), uint8], Tensor[(330), float32], Tensor[(5, 4, 7), uint8]) {
  %414 = fn () -> (Tensor[(5, 4, 7), bool], Tensor[(140), uint8], Tensor[(330), float32], Tensor[(5, 4, 7), uint8]) {
    %404 = @func_11200() /* ty=(Tensor[(5, 4, 7), bool],) */;
    %405 = %404.0;
    %406 = cast(%405, dtype="uint8") /* ty=Tensor[(5, 4, 7), uint8] */;
    %407 = cast(meta[relay.Constant][24] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %408 = reshape(%406, newshape=[140]) /* ty=Tensor[(140), uint8] */;
    %409 = reshape(%407, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %410 = @func_9963(%408, %409) /* ty=(Tensor[(693), uint64], Tensor[(9, 15, 8), uint16], Tensor[(1080), uint16], Tensor[(140), uint8], Tensor[(16, 9, 1), float64], Tensor[(144), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32]) */;
    %411 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
    %412 = %410.3;
    %413 = %411.1;
    (%405, %412, meta[relay.Constant][24] /* ty=Tensor[(330), float32] */, %413)
  };
  %414() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(140), uint8], Tensor[(330), float32], Tensor[(5, 4, 7), uint8]) */
}

def @func_11008(%var_11007: int8) -> (Tensor[(140), uint8], Tensor[(140), uint8], int8, int8, Tensor[(105, 2), int8]) {
  %424 = fn (%var_11003: int8) -> (Tensor[(140), uint8], Tensor[(140), uint8], int8, int8, Tensor[(105, 2), int8]) {
    %415 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
    %416 = cast(%var_11003, dtype="int8") /* ty=int8 */;
    %417 = cast(meta[relay.Constant][25] /* ty=Tensor[(105, 2), int8] */, dtype="int8") /* ty=Tensor[(105, 2), int8] */;
    %418 = reshape(%416, newshape=[]) /* ty=int8 */;
    %419 = reshape(%417, newshape=[210]) /* ty=Tensor[(210), int8] */;
    %420 = @func_4733(%418, %419) /* ty=(Tensor[(15, 13, 15), float32], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
    %421 = @func_10095() /* ty=Tensor[(140), uint8] */;
    %422 = %415.0;
    %423 = %420.2;
    (%421, %422, %423, %var_11003, meta[relay.Constant][25] /* ty=Tensor[(105, 2), int8] */)
  };
  %424(%var_11007) /* ty=(Tensor[(140), uint8], Tensor[(140), uint8], int8, int8, Tensor[(105, 2), int8]) */
}

def @func_11201() -> (Tensor[(5, 4, 7), bool],) {
  %427 = fn () -> (Tensor[(5, 4, 7), bool],) {
    %425 = @func_10811() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(10, 2, 8), float64], Tensor[(160), float64]) */;
    %426 = %425.0;
    (%426,)
  };
  %427() /* ty=(Tensor[(5, 4, 7), bool],) */
}

def @func_11519(%var_11513: Tensor[(2, 2, 2), float64]) -> (Tensor[(2, 2, 2), float64],) {
  %428 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 2, 2), float64] */, dtype="float64") /* ty=Tensor[(2, 2, 2), float64] */;
  %429 = shape_of(%var_11513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%var_11513, dtype="float64") /* ty=Tensor[(2, 2, 2), float64] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %432 = divide(%430, %431) /* ty=Tensor[(2, 2, 2), float64] */;
  (%432,)
}

def @func_10487() -> Tensor[(5, 4, 7), float64] {
  @func_10485() /* ty=Tensor[(5, 4, 7), float64] */
}

def @func_9190(%var_9165: Tensor[(16, 9, 1), float64]) -> (Tensor[(210), int8], Tensor[(16, 9, 1), float64]) {
  %433 = cast(meta[relay.Constant][27] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %434 = reshape(%433, newshape=[]) /* ty=int8 */;
  %435 = @func_2097(%434) /* ty=(Tensor[(4, 9, 12), int16], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(9, 1, 2), uint64], Tensor[(18), uint64]) */;
  %436 = cast(%var_9165, dtype="float64") /* ty=Tensor[(16, 9, 1), float64] */;
  %437 = log10(%436) /* ty=Tensor[(16, 9, 1), float64] */;
  %438 = cast(%437, dtype="float64") /* ty=Tensor[(16, 9, 1), float64] */;
  %439 = cast(meta[relay.Constant][27] /* ty=int8 */, dtype="float64") /* ty=float64 */;
  %440 = %435.3;
  %441 = mod(%438, %439) /* ty=Tensor[(16, 9, 1), float64] */;
  (%440, %441)
}

def @func_14448(%var_14411: float32, %var_14412: Tensor[(2, 20), float32], %var_14413: Tensor[(18), uint64]) -> (Tensor[(5, 4, 7), float64], Tensor[(6, 3), uint64], float32, Tensor[(2, 20), float32], Tensor[(18), uint64], Tensor[(210), int8], Tensor[(10, 2, 8), float64]) {
  %442 = @func_13910() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(15, 1, 14), bool]) */;
  %443 = cast(%var_14411, dtype="float32") /* ty=float32 */;
  %444 = cast(%var_14412, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %445 = cast(%var_14413, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %446 = reshape(%443, newshape=[]) /* ty=float32 */;
  %447 = reshape(%444, newshape=[4, 10, 1]) /* ty=Tensor[(4, 10, 1), float32] */;
  %448 = reshape(%445, newshape=[6, 3]) /* ty=Tensor[(6, 3), uint64] */;
  %449 = @func_13838(%446, %447, %448) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(18, 1), uint64], Tensor[(6, 3), uint64]) */;
  %450 = @func_11839() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) */;
  %451 = %442.0;
  %452 = %449.2;
  %453 = %450.3;
  %454 = @func_13819() /* ty=Tensor[(10, 2, 8), float64] */;
  (%451, %452, %var_14411, %var_14412, %var_14413, %453, %454)
}

def @func_2703(%var_2631: Tensor[(6, 11, 1), float32], %var_2632: Tensor[(6, 11, 5), float32]) -> (Tensor[(6, 11, 5), float32], Tensor[(18, 1), uint64], Tensor[(15, 1, 14), bool], Tensor[(210), int8], Tensor[(9, 1, 2), bool]) {
  %455 = cast(%var_2631, dtype="float32") /* ty=Tensor[(6, 11, 1), float32] */;
  %456 = cast(%var_2632, dtype="float32") /* ty=Tensor[(6, 11, 5), float32] */;
  %457 = cast(meta[relay.Constant][29] /* ty=uint64 */, dtype="int8") /* ty=int8 */;
  %458 = cast(meta[relay.Constant][30] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %459 = reshape(%457, newshape=[]) /* ty=int8 */;
  %460 = reshape(%458, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), int8] */;
  %461 = cast(meta[relay.Constant][29] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %462 = cast(meta[relay.Constant][28] /* ty=Tensor[(18, 1), uint64] */, dtype="uint64") /* ty=Tensor[(18, 1), uint64] */;
  %463 = reshape(%461, newshape=[]) /* ty=uint64 */;
  %464 = reshape(%462, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), uint64] */;
  %465 = @func_1015(%463, %464) /* ty=(Tensor[(9, 1, 2), uint64],) */;
  %466 = %465.0;
  %467 = cast(%466, dtype="bool") /* ty=Tensor[(9, 1, 2), bool] */;
  %468 = cast(meta[relay.Constant][29] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %469 = mod(%455, %456) /* ty=Tensor[(6, 11, 5), float32] */;
  %470 = @func_1708(%459, %460) /* ty=Tensor[(15, 1, 14), bool] */;
  %471 = less_equal(%467, %468) /* ty=Tensor[(9, 1, 2), bool] */;
  (%469, meta[relay.Constant][28] /* ty=Tensor[(18, 1), uint64] */, %470, meta[relay.Constant][30] /* ty=Tensor[(210), int8] */, %471)
}

def @func_10464(%var_10460: Tensor[(672), bool], %var_10462: Tensor[(1, 605), float32]) -> (Tensor[(5, 4, 7), uint8], Tensor[(700), uint64], Tensor[(56), bool], Tensor[(672), bool], Tensor[(700), uint64], Tensor[(1, 605), float32]) {
  %472 = cast(meta[relay.Constant][31] /* ty=Tensor[(56), bool] */, dtype="bool") /* ty=Tensor[(56), bool] */;
  %473 = cast(%var_10460, dtype="bool") /* ty=Tensor[(672), bool] */;
  %474 = cast(meta[relay.Constant][32] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %475 = cast(%var_10462, dtype="float32") /* ty=Tensor[(1, 605), float32] */;
  %476 = @func_10262() /* ty=Tensor[(5, 4, 7), uint8] */;
  %477 = cast(%476, dtype="uint8") /* ty=Tensor[(5, 4, 7), uint8] */;
  %478 = reshape(%472, newshape=[1, 7, 8]) /* ty=Tensor[(1, 7, 8), bool] */;
  %479 = reshape(%473, newshape=[12, 7, 8]) /* ty=Tensor[(12, 7, 8), bool] */;
  %480 = reshape(%474, newshape=[700]) /* ty=Tensor[(700), uint64] */;
  %481 = reshape(%475, newshape=[605]) /* ty=Tensor[(605), float32] */;
  %482 = reshape(%477, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %483 = @func_8829(%478, %479, %480, %481, %482) /* ty=(Tensor[(12, 7, 8), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
  %484 = %483.2;
  (%476, %484, meta[relay.Constant][31] /* ty=Tensor[(56), bool] */, %var_10460, meta[relay.Constant][32] /* ty=Tensor[(700), uint64] */, %var_10462)
}

def @func_13593() -> Tensor[(140), uint8] {
  %485 = @func_13373() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) */;
  %485.1
}

def @func_11642() -> (Tensor[(5, 4, 7), uint8],) {
  %486 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %487 = %486.1;
  (%487,)
}

def @func_11197() -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
  %491 = fn () -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
    %488 = @func_10741() /* ty=(Tensor[(5, 4, 7), float64],) */;
    %489 = @func_10095() /* ty=Tensor[(140), uint8] */;
    %490 = %488.0;
    (%489, %490)
  };
  %491() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */
}

def @func_4758(%var_4756: Tensor[(10, 5, 14), uint64], %var_4757: Tensor[(11, 55), float32]) -> (Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) {
  %500 = fn (%var_4744: Tensor[(10, 5, 14), uint64], %var_4749: Tensor[(11, 55), float32]) -> (Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) {
    %492 = cast(%var_4744, dtype="uint64") /* ty=Tensor[(10, 5, 14), uint64] */;
    %493 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(10, 5, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %494 = cast(meta[relay.Constant][33] /* ty=Tensor[(10, 5, 14), uint64] */, dtype="uint64") /* ty=Tensor[(10, 5, 14), uint64] */;
    %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %496 = cast(%var_4749, dtype="float32") /* ty=Tensor[(11, 55), float32] */;
    %497 = reshape(%496, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), float32] */;
    %498 = subtract(%494, %495) /* ty=Tensor[(10, 5, 14), uint64] */;
    %499 = @func_4071(%497) /* ty=Tensor[(11, 5, 11), float32] */;
    (%498, %499, %var_4749)
  };
  %500(%var_4756, %var_4757) /* ty=(Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) */
}

def @func_14508() -> (Tensor[(10, 2, 8), float64], Tensor[(140), uint8]) {
  %501 = @func_11892() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float32]) */;
  %502 = @func_13819() /* ty=Tensor[(10, 2, 8), float64] */;
  %503 = %501.0;
  (%502, %503)
}

def @func_12313() -> (Tensor[(140), uint8],) {
  %505 = fn () -> (Tensor[(140), uint8],) {
    %504 = @func_10704() /* ty=Tensor[(140), uint8] */;
    (%504,)
  };
  %505() /* ty=(Tensor[(140), uint8],) */
}

def @func_11126(%var_11112: Tensor[(4, 3, 6), float32], %var_11113: Tensor[(4, 3, 6), float32]) -> Tensor[(4, 3, 6), bool] {
  %506 = cast(%var_11113, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %507 = shape_of(%var_11112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %508 = cast(%var_11112, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%508, %509) /* ty=Tensor[(4, 3, 6), bool] */
}

def @main(%var_16752: uint64) -> (Tensor[(12, 5, 12), uint64],) {
  %510 = cast(%var_16752, dtype="uint64") /* ty=uint64 */;
  %511 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 5, 12), uint64] */, dtype="uint64") /* ty=Tensor[(12, 5, 12), uint64] */;
  %512 = add(%510, %511) /* ty=Tensor[(12, 5, 12), uint64] */;
  (%512,)
}

def @func_16339(%var_16337: Tensor[(72), float32], %var_16338: Tensor[(30, 9), uint64]) -> (Tensor[(10, 2, 8), float64], Tensor[(140), uint8], Tensor[(36, 2), float32], Tensor[(72), float32], bool, Tensor[(18), uint64], Tensor[(30, 9), uint32], Tensor[(10, 2, 8), float64]) {
  @func_16335(%var_16337, %var_16338) /* ty=(Tensor[(10, 2, 8), float64], Tensor[(140), uint8], Tensor[(36, 2), float32], Tensor[(72), float32], bool, Tensor[(18), uint64], Tensor[(30, 9), uint32], Tensor[(10, 2, 8), float64]) */
}

def @func_253(%var_251: Tensor[(5, 4, 7), uint8], %var_252: Tensor[(5, 4, 7), uint8]) -> (Tensor[(5, 4, 7), uint8],) {
  @func_249(%var_251, %var_252) /* ty=(Tensor[(5, 4, 7), uint8],) */
}

def @func_12191() -> Tensor[(5, 4, 7), float32] {
  %514 = fn () -> Tensor[(5, 4, 7), float32] {
    %513 = @func_11619() /* ty=(Tensor[(5, 4, 7), float32], Tensor[(1, 693), uint64]) */;
    %513.0
  };
  %514() /* ty=Tensor[(5, 4, 7), float32] */
}

def @func_8792(%var_8789: Tensor[(9, 15, 8), uint16], %var_8790: Tensor[(9, 15, 8), uint16], %var_8791: Tensor[(140), uint8]) -> (Tensor[(9, 15, 8), uint16], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) {
  %526 = fn (%var_8769: Tensor[(9, 15, 8), uint16], %var_8770: Tensor[(9, 15, 8), uint16], %var_8781: Tensor[(140), uint8]) -> (Tensor[(9, 15, 8), uint16], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) {
    %515 = cast(%var_8770, dtype="uint16") /* ty=Tensor[(9, 15, 8), uint16] */;
    %516 = shape_of(%var_8769, dtype="int32") /* ty=Tensor[(3), int32] */;
    %517 = cast(%var_8769, dtype="uint16") /* ty=Tensor[(9, 15, 8), uint16] */;
    %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %519 = cast(%var_8781, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %520 = cast(%var_8781, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %521 = reshape(%519, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
    %522 = reshape(%520, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
    %523 = @func_249(%521, %522) /* ty=(Tensor[(5, 4, 7), uint8],) */;
    %524 = bitwise_and(%517, %518) /* ty=Tensor[(9, 15, 8), uint16] */;
    %525 = %523.0;
    (%524, %525, %var_8781)
  };
  %526(%var_8789, %var_8790, %var_8791) /* ty=(Tensor[(9, 15, 8), uint16], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */
}

def @func_13778(%var_13725: Tensor[(700), uint64], %var_13726: Tensor[(25), float64], %var_13727: int8, %var_13771: Tensor[(11, 55), float32]) -> (Tensor[(5, 4, 7), uint8], Tensor[(66), float32], Tensor[(700), uint64], Tensor[(210), int8], Tensor[(25), int64], Tensor[(605), float32], Tensor[(11, 55), float32], Tensor[(11, 55), bool]) {
  %527 = cast(%var_13725, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %528 = cast(%var_13726, dtype="float64") /* ty=Tensor[(25), float64] */;
  %529 = cast(%var_13727, dtype="int8") /* ty=int8 */;
  %530 = reshape(%527, newshape=[700]) /* ty=Tensor[(700), uint64] */;
  %531 = reshape(%528, newshape=[25]) /* ty=Tensor[(25), float64] */;
  %532 = reshape(%529, newshape=[]) /* ty=int8 */;
  %533 = @func_9835(%530, %531, %532) /* ty=(Tensor[(140), uint8], Tensor[(56), bool], Tensor[(2, 336), bool], Tensor[(605, 700), uint64], Tensor[(11, 5, 11), float32], Tensor[(5, ?, 5), bool], Tensor[(25), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(210), int8], Tensor[(11, 5, 11), float32], Tensor[(5, 4, 7), int16]) */;
  %534 = @func_13229() /* ty=(Tensor[(210), int8], Tensor[(5, 4, 7), float64], Tensor[(5, 4, 7), float32]) */;
  %535 = cast(%var_13727, dtype="int64") /* ty=int64 */;
  %536 = cast(%var_13726, dtype="int64") /* ty=Tensor[(25), int64] */;
  %537 = cast(%var_13725, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %538 = cast(meta[relay.Constant][35] /* ty=Tensor[(605), float32] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %539 = reshape(%537, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint64] */;
  %540 = reshape(%538, newshape=[11, 55]) /* ty=Tensor[(11, 55), float32] */;
  %541 = @func_4755(%539, %540) /* ty=(Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) */;
  %542 = %541.2;
  %543 = cast(%542, dtype="float32") /* ty=Tensor[(11, 55), float32] */;
  %544 = asinh(%543) /* ty=Tensor[(11, 55), float32] */;
  %545 = cast(%544, dtype="float32") /* ty=Tensor[(11, 55), float32] */;
  %546 = cast(%var_13771, dtype="bool") /* ty=Tensor[(11, 55), bool] */;
  %547 = shape_of(%542, dtype="int32") /* ty=Tensor[(2), int32] */;
  %548 = cast(%542, dtype="bool") /* ty=Tensor[(11, 55), bool] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %550 = @func_10262() /* ty=Tensor[(5, 4, 7), uint8] */;
  %551 = %533.8;
  %552 = %534.0;
  %553 = logical_xor(%535, %536) /* ty=Tensor[(25), int64] */;
  %554 = atan(%545) /* ty=Tensor[(11, 55), float32] */;
  %555 = logical_or(%548, %549) /* ty=Tensor[(11, 55), bool] */;
  (%550, %551, %var_13725, %552, %553, meta[relay.Constant][35] /* ty=Tensor[(605), float32] */, %554, %555)
}

def @func_14935() -> (Tensor[(5, 4, 7), uint8],) {
  %558 = fn () -> (Tensor[(5, 4, 7), uint8],) {
    %556 = @func_14180() /* ty=(Tensor[(5, 4, 7), uint8],) */;
    %557 = %556.0;
    (%557,)
  };
  %558() /* ty=(Tensor[(5, 4, 7), uint8],) */
}

def @func_11987(%var_11976: Tensor[(5, 4, 7), float64], %var_11982: Tensor[(5, 4, 7), float64]) -> (Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), bool]) {
  %559 = @func_11101() /* ty=(Tensor[(5, 4, 7), float64],) */;
  %560 = %559.0;
  %561 = cast(%var_11976, dtype="float32") /* ty=Tensor[(5, 4, 7), float32] */;
  %562 = shape_of(%560, dtype="int32") /* ty=Tensor[(3), int32] */;
  %563 = cast(%560, dtype="float32") /* ty=Tensor[(5, 4, 7), float32] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %565 = cast(%var_11982, dtype="bool") /* ty=Tensor[(5, 4, 7), bool] */;
  %566 = shape_of(%var_11976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%var_11976, dtype="bool") /* ty=Tensor[(5, 4, 7), bool] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %569 = power(%563, %564) /* ty=Tensor[(5, 4, 7), float32] */;
  %570 = less(%567, %568) /* ty=Tensor[(5, 4, 7), bool] */;
  (%569, %570)
}

def @func_16667(%var_16665: Tensor[(3, 4), float32]) -> (Tensor[(5, 4, 7), float32], Tensor[(1080), uint16], Tensor[(330), float32], Tensor[(160), float64], Tensor[(5, 4, 7), float64], Tensor[(140), uint8], Tensor[(3, 1, 4), float32], Tensor[(3, 4), float32], Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), uint8], Tensor[(?, 693), int32]) {
  @func_16664(%var_16665) /* ty=(Tensor[(5, 4, 7), float32], Tensor[(1080), uint16], Tensor[(330), float32], Tensor[(160), float64], Tensor[(5, 4, 7), float64], Tensor[(140), uint8], Tensor[(3, 1, 4), float32], Tensor[(3, 4), float32], Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), uint8], Tensor[(?, 693), int32]) */
}

def @func_13578() -> (Tensor[(5, 4, 7), float64],) {
  @func_13576() /* ty=(Tensor[(5, 4, 7), float64],) */
}

def @func_9243(%var_9210: Tensor[(7, 9, 11), uint64], %var_9211: Tensor[(7, 9, 11), uint64]) -> (Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(7, 9, 11), bool]) {
  %571 = cast(meta[relay.Constant][36] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %572 = cast(meta[relay.Constant][36] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
  %573 = reshape(%571, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
  %574 = reshape(%572, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
  %575 = @func_249(%573, %574) /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %576 = cast(%var_9211, dtype="bool") /* ty=Tensor[(7, 9, 11), bool] */;
  %577 = shape_of(%var_9210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%var_9210, dtype="bool") /* ty=Tensor[(7, 9, 11), bool] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %580 = greater_equal(%578, %579) /* ty=Tensor[(7, 9, 11), bool] */;
  %581 = cast(%580, dtype="bool") /* ty=Tensor[(7, 9, 11), bool] */;
  %582 = shape_of(%var_9210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%var_9210, dtype="bool") /* ty=Tensor[(7, 9, 11), bool] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %585 = %575.0;
  %586 = less(%583, %584) /* ty=Tensor[(7, 9, 11), bool] */;
  (%585, meta[relay.Constant][36] /* ty=Tensor[(140), uint8] */, %586)
}

def @func_11522(%var_11520: Tensor[(2, 2, 2), float64]) -> (Tensor[(2, 2, 2), float64],) {
  @func_11519(%var_11520) /* ty=(Tensor[(2, 2, 2), float64],) */
}

def @func_11331(%var_11330: Tensor[(1680), int32]) -> (Tensor[(5, 4, 7), float64], int8, Tensor[(1680), int32], Tensor[(3360), bool], Tensor[(4, 3, 6), bool], Tensor[(72), float32], Tensor[(160), float64]) {
  %602 = fn (%var_11311: Tensor[(1680), int32]) -> (Tensor[(5, 4, 7), float64], int8, Tensor[(1680), int32], Tensor[(3360), bool], Tensor[(4, 3, 6), bool], Tensor[(72), float32], Tensor[(160), float64]) {
    %587 = @func_10627() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) */;
    %588 = cast(%var_11311, dtype="int32") /* ty=Tensor[(1680), int32] */;
    %589 = cast(meta[relay.Constant][37] /* ty=Tensor[(3360), bool] */, dtype="bool") /* ty=Tensor[(3360), bool] */;
    %590 = reshape(%588, newshape=[1680]) /* ty=Tensor[(1680), int32] */;
    %591 = reshape(%589, newshape=[3360]) /* ty=Tensor[(3360), bool] */;
    %592 = @func_10919(%590, %591) /* ty=(Tensor[(8, 15, 14), float64], Tensor[(1680), int32], int8, Tensor[(3360), bool], Tensor[(?, 693), int16], Tensor[(?, 693), int64], Tensor[(144), float64], Tensor[(16, 9, 693), bool], Tensor[(10, 693), uint16]) */;
    %593 = cast(meta[relay.Constant][38] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %594 = cast(meta[relay.Constant][38] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %595 = reshape(%593, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
    %596 = reshape(%594, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
    %597 = @func_10811() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(10, 2, 8), float64], Tensor[(160), float64]) */;
    %598 = %587.0;
    %599 = %592.2;
    %600 = @func_11126(%595, %596) /* ty=Tensor[(4, 3, 6), bool] */;
    %601 = %597.2;
    (%598, %599, %var_11311, meta[relay.Constant][37] /* ty=Tensor[(3360), bool] */, %600, meta[relay.Constant][38] /* ty=Tensor[(72), float32] */, %601)
  };
  %602(%var_11330) /* ty=(Tensor[(5, 4, 7), float64], int8, Tensor[(1680), int32], Tensor[(3360), bool], Tensor[(4, 3, 6), bool], Tensor[(72), float32], Tensor[(160), float64]) */
}

def @func_14182() -> (Tensor[(5, 4, 7), uint8],) {
  @func_14180() /* ty=(Tensor[(5, 4, 7), uint8],) */
}

def @func_13465(%var_13463: Tensor[(3, 1, 4), float32]) -> (Tensor[(3, 1, 4), float32],) {
  @func_13462(%var_13463) /* ty=(Tensor[(3, 1, 4), float32],) */
}

def @func_11644() -> (Tensor[(5, 4, 7), uint8],) {
  @func_11642() /* ty=(Tensor[(5, 4, 7), uint8],) */
}

def @func_9247(%var_9245: Tensor[(7, 9, 11), uint64], %var_9246: Tensor[(7, 9, 11), uint64]) -> (Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(7, 9, 11), bool]) {
  @func_9243(%var_9245, %var_9246) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(7, 9, 11), bool]) */
}

def @func_14714(%var_14706: Tensor[(56), bool], %var_14708: Tensor[(700), uint64], %var_14709: Tensor[(605), float32]) -> (int8, Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(56), bool], Tensor[(672), bool], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8]) {
  %603 = @func_13260() /* ty=(Tensor[(140), uint8], Tensor[(15, 1, 14), bool], int8, Tensor[(5, 4, 7), bool]) */;
  %604 = cast(%var_14706, dtype="bool") /* ty=Tensor[(56), bool] */;
  %605 = cast(meta[relay.Constant][39] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
  %606 = cast(%var_14708, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %607 = cast(%var_14709, dtype="float32") /* ty=Tensor[(605), float32] */;
  %608 = @func_12952() /* ty=Tensor[(5, 4, 7), uint8] */;
  %609 = cast(%608, dtype="uint8") /* ty=Tensor[(5, 4, 7), uint8] */;
  %610 = reshape(%604, newshape=[1, 7, 8]) /* ty=Tensor[(1, 7, 8), bool] */;
  %611 = reshape(%605, newshape=[12, 7, 8]) /* ty=Tensor[(12, 7, 8), bool] */;
  %612 = reshape(%606, newshape=[700]) /* ty=Tensor[(700), uint64] */;
  %613 = reshape(%607, newshape=[605]) /* ty=Tensor[(605), float32] */;
  %614 = reshape(%609, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %615 = @func_8829(%610, %611, %612, %613, %614) /* ty=(Tensor[(12, 7, 8), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
  %616 = @func_14180() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %617 = %603.2;
  %618 = %615.5;
  %619 = %616.0;
  (%617, %608, %618, %var_14706, meta[relay.Constant][39] /* ty=Tensor[(672), bool] */, %var_14708, %var_14709, %619)
}

def @func_15865() -> (Tensor[(140), uint8],) {
  %622 = fn () -> (Tensor[(140), uint8],) {
    %620 = @func_12809() /* ty=(Tensor[(140), uint8],) */;
    %621 = %620.0;
    (%621,)
  };
  %622() /* ty=(Tensor[(140), uint8],) */
}

def @func_16219() -> (Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(15, 1, 14), bool], Tensor[(3, 924), uint64], Tensor[(2772, 2), float64]) {
  @func_16217() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(15, 1, 14), bool], Tensor[(3, 924), uint64], Tensor[(2772, 2), float64]) */
}

def @func_12953() -> Tensor[(5, 4, 7), uint8] {
  %624 = fn () -> Tensor[(5, 4, 7), uint8] {
    %623 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
    %623.1
  };
  %624() /* ty=Tensor[(5, 4, 7), uint8] */
}

def @func_9839(%var_9836: Tensor[(700), uint64], %var_9837: Tensor[(25), float64], %var_9838: int8) -> (Tensor[(140), uint8], Tensor[(56), bool], Tensor[(2, 336), bool], Tensor[(605, 700), uint64], Tensor[(11, 5, 11), float32], Tensor[(5, ?, 5), bool], Tensor[(25), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(210), int8], Tensor[(11, 5, 11), float32], Tensor[(5, 4, 7), int16]) {
  %675 = fn (%var_9758: Tensor[(700), uint64], %var_9793: Tensor[(25), float64], %var_9812: int8) -> (Tensor[(140), uint8], Tensor[(56), bool], Tensor[(2, 336), bool], Tensor[(605, 700), uint64], Tensor[(11, 5, 11), float32], Tensor[(5, ?, 5), bool], Tensor[(25), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(210), int8], Tensor[(11, 5, 11), float32], Tensor[(5, 4, 7), int16]) {
    %625 = @func_9640() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) */;
    %626 = cast(%var_9758, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %627 = cast(meta[relay.Constant][42] /* ty=Tensor[(605, 1), float32] */, dtype="uint64") /* ty=Tensor[(605, 1), uint64] */;
    %628 = cast(%var_9758, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %629 = cast(meta[relay.Constant][42] /* ty=Tensor[(605, 1), float32] */, dtype="float32") /* ty=Tensor[(605, 1), float32] */;
    %630 = reshape(%628, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint64] */;
    %631 = reshape(%629, newshape=[11, 55]) /* ty=Tensor[(11, 55), float32] */;
    %632 = @func_4755(%630, %631) /* ty=(Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) */;
    %633 = cast(%var_9793, dtype="float64") /* ty=Tensor[(25), float64] */;
    %634 = reshape(%633, newshape=[5, 1, 5]) /* ty=Tensor[(5, 1, 5), float64] */;
    %635 = @func_5816(%634) /* ty=(Tensor[(5, ?, 5), bool],) */;
    %636 = cast(meta[relay.Constant][43] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
    %637 = cast(meta[relay.Constant][44] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %638 = reshape(%636, newshape=[6, 11, 1]) /* ty=Tensor[(6, 11, 1), float32] */;
    %639 = reshape(%637, newshape=[6, 11, 5]) /* ty=Tensor[(6, 11, 5), float32] */;
    %640 = @func_2703(%638, %639) /* ty=(Tensor[(6, 11, 5), float32], Tensor[(18, 1), uint64], Tensor[(15, 1, 14), bool], Tensor[(210), int8], Tensor[(9, 1, 2), bool]) */;
    %641 = cast(%var_9812, dtype="int8") /* ty=int8 */;
    %642 = %640.2;
    %643 = cast(%642, dtype="int8") /* ty=Tensor[(15, 1, 14), int8] */;
    %644 = reshape(%641, newshape=[]) /* ty=int8 */;
    %645 = reshape(%643, newshape=[210]) /* ty=Tensor[(210), int8] */;
    %646 = @func_4733(%644, %645) /* ty=(Tensor[(15, 13, 15), float32], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
    %647 = cast(%var_9758, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %648 = cast(meta[relay.Constant][42] /* ty=Tensor[(605, 1), float32] */, dtype="float32") /* ty=Tensor[(605, 1), float32] */;
    %649 = reshape(%647, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint64] */;
    %650 = reshape(%648, newshape=[11, 55]) /* ty=Tensor[(11, 55), float32] */;
    %651 = @func_4755(%649, %650) /* ty=(Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) */;
    %652 = cast(meta[relay.Constant][40] /* ty=Tensor[(56), bool] */, dtype="bool") /* ty=Tensor[(56), bool] */;
    %653 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 336), bool] */, dtype="bool") /* ty=Tensor[(2, 336), bool] */;
    %654 = cast(%var_9758, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %655 = cast(meta[relay.Constant][42] /* ty=Tensor[(605, 1), float32] */, dtype="float32") /* ty=Tensor[(605, 1), float32] */;
    %656 = %625.1;
    %657 = cast(%656, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %658 = reshape(%652, newshape=[1, 7, 8]) /* ty=Tensor[(1, 7, 8), bool] */;
    %659 = reshape(%653, newshape=[12, 7, 8]) /* ty=Tensor[(12, 7, 8), bool] */;
    %660 = reshape(%654, newshape=[700]) /* ty=Tensor[(700), uint64] */;
    %661 = reshape(%655, newshape=[605]) /* ty=Tensor[(605), float32] */;
    %662 = reshape(%657, newshape=[140]) /* ty=Tensor[(140), uint8] */;
    %663 = @func_8829(%658, %659, %660, %661, %662) /* ty=(Tensor[(12, 7, 8), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
    %664 = %663.4;
    %665 = cast(%664, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
    %666 = sqrt(%665) /* ty=Tensor[(5, 4, 7), float64] */;
    %667 = cast(%666, dtype="int16") /* ty=Tensor[(5, 4, 7), int16] */;
    %668 = cast(%var_9812, dtype="int16") /* ty=int16 */;
    %669 = minimum(%626, %627) /* ty=Tensor[(605, 700), uint64] */;
    %670 = %632.1;
    %671 = %635.0;
    %672 = %646.3;
    %673 = %651.1;
    %674 = add(%667, %668) /* ty=Tensor[(5, 4, 7), int16] */;
    (%656, meta[relay.Constant][40] /* ty=Tensor[(56), bool] */, meta[relay.Constant][41] /* ty=Tensor[(2, 336), bool] */, %669, %670, %671, %var_9793, %642, meta[relay.Constant][43] /* ty=Tensor[(66), float32] */, meta[relay.Constant][44] /* ty=Tensor[(330), float32] */, %672, %673, %674)
  };
  %675(%var_9836, %var_9837, %var_9838) /* ty=(Tensor[(140), uint8], Tensor[(56), bool], Tensor[(2, 336), bool], Tensor[(605, 700), uint64], Tensor[(11, 5, 11), float32], Tensor[(5, ?, 5), bool], Tensor[(25), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(210), int8], Tensor[(11, 5, 11), float32], Tensor[(5, 4, 7), int16]) */
}

def @func_13374() -> (Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) {
  %680 = fn () -> (Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) {
    %676 = @func_12052() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
    %677 = @func_13260() /* ty=(Tensor[(140), uint8], Tensor[(15, 1, 14), bool], int8, Tensor[(5, 4, 7), bool]) */;
    %678 = %676.1;
    %679 = %677.0;
    (%678, %679)
  };
  %680() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) */
}

def @func_10372() -> Tensor[(140), uint8] {
  @func_10370() /* ty=Tensor[(140), uint8] */
}

def @func_10262() -> Tensor[(5, 4, 7), uint8] {
  %681 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
  %681.1
}

def @func_15662() -> (Tensor[(5, 4, 7), uint8], Tensor[(11, 5, 11), float32], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(5, ?, 5), bool], Tensor[(700), uint64], Tensor[(1, 25), float64], Tensor[(330), float32], Tensor[(605), float64]) {
  %682 = @func_13642() /* ty=(Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), uint8], Tensor[(2, 2, 2), float64], Tensor[(2, 4), float64]) */;
  %683 = cast(meta[relay.Constant][45] /* ty=Tensor[(605), float32] */, dtype="float32") /* ty=Tensor[(605), float32] */;
  %684 = reshape(%683, newshape=[11, 5, 11]) /* ty=Tensor[(11, 5, 11), float32] */;
  %685 = cast(meta[relay.Constant][46] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %686 = cast(meta[relay.Constant][47] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %687 = reshape(%685, newshape=[]) /* ty=int8 */;
  %688 = reshape(%686, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), int8] */;
  %689 = cast(meta[relay.Constant][48] /* ty=Tensor[(700), uint64] */, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %690 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 25), float64] */, dtype="float64") /* ty=Tensor[(1, 25), float64] */;
  %691 = cast(meta[relay.Constant][46] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %692 = reshape(%689, newshape=[700]) /* ty=Tensor[(700), uint64] */;
  %693 = reshape(%690, newshape=[25]) /* ty=Tensor[(25), float64] */;
  %694 = reshape(%691, newshape=[]) /* ty=int8 */;
  %695 = @func_9835(%692, %693, %694) /* ty=(Tensor[(140), uint8], Tensor[(56), bool], Tensor[(2, 336), bool], Tensor[(605, 700), uint64], Tensor[(11, 5, 11), float32], Tensor[(5, ?, 5), bool], Tensor[(25), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(210), int8], Tensor[(11, 5, 11), float32], Tensor[(5, 4, 7), int16]) */;
  %696 = @func_14001() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(140), uint8], Tensor[(330), float32], Tensor[(5, 4, 7), uint8]) */;
  %697 = cast(meta[relay.Constant][45] /* ty=Tensor[(605), float32] */, dtype="float64") /* ty=Tensor[(605), float64] */;
  %698 = %682.1;
  %699 = @func_4071(%684) /* ty=Tensor[(11, 5, 11), float32] */;
  %700 = @func_1708(%687, %688) /* ty=Tensor[(15, 1, 14), bool] */;
  %701 = %695.5;
  %702 = %696.2;
  %703 = sqrt(%697) /* ty=Tensor[(605), float64] */;
  (%698, %699, %700, meta[relay.Constant][46] /* ty=int8 */, meta[relay.Constant][47] /* ty=Tensor[(210), int8] */, %701, meta[relay.Constant][48] /* ty=Tensor[(700), uint64] */, meta[relay.Constant][49] /* ty=Tensor[(1, 25), float64] */, %702, %703)
}

def @func_11213() -> Tensor[(5, 4, 7), uint8] {
  @func_10262() /* ty=Tensor[(5, 4, 7), uint8] */
}

def @func_11130(%var_11128: Tensor[(4, 3, 6), float32], %var_11129: Tensor[(4, 3, 6), float32]) -> Tensor[(4, 3, 6), bool] {
  @func_11126(%var_11128, %var_11129) /* ty=Tensor[(4, 3, 6), bool] */
}

def @func_14831(%var_14797: Tensor[(700), uint64]) -> (Tensor[(140), uint8], Tensor[(5, 4, 7), int16], Tensor[(700), uint64], Tensor[(25), float64], int8, Tensor[(140), uint8], Tensor[(140), uint8]) {
  %704 = cast(%var_14797, dtype="uint64") /* ty=Tensor[(700), uint64] */;
  %705 = cast(meta[relay.Constant][50] /* ty=Tensor[(25), float64] */, dtype="float64") /* ty=Tensor[(25), float64] */;
  %706 = cast(meta[relay.Constant][51] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %707 = reshape(%704, newshape=[700]) /* ty=Tensor[(700), uint64] */;
  %708 = reshape(%705, newshape=[25]) /* ty=Tensor[(25), float64] */;
  %709 = reshape(%706, newshape=[]) /* ty=int8 */;
  %710 = @func_9835(%707, %708, %709) /* ty=(Tensor[(140), uint8], Tensor[(56), bool], Tensor[(2, 336), bool], Tensor[(605, 700), uint64], Tensor[(11, 5, 11), float32], Tensor[(5, ?, 5), bool], Tensor[(25), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32], Tensor[(210), int8], Tensor[(11, 5, 11), float32], Tensor[(5, 4, 7), int16]) */;
  %711 = @func_14132() /* ty=Tensor[(140), uint8] */;
  %712 = %710.12;
  %713 = @func_10704() /* ty=Tensor[(140), uint8] */;
  %714 = @func_14487() /* ty=Tensor[(140), uint8] */;
  (%711, %712, %var_14797, meta[relay.Constant][50] /* ty=Tensor[(25), float64] */, meta[relay.Constant][51] /* ty=int8 */, %713, %714)
}

def @func_16447() -> (Tensor[(140), uint8],) {
  %716 = fn () -> (Tensor[(140), uint8],) {
    %715 = @func_13593() /* ty=Tensor[(140), uint8] */;
    (%715,)
  };
  %716() /* ty=(Tensor[(140), uint8],) */
}

def @func_11101() -> (Tensor[(5, 4, 7), float64],) {
  %717 = @func_10741() /* ty=(Tensor[(5, 4, 7), float64],) */;
  %718 = %717.0;
  (%718,)
}

def @func_12150(%var_12148: Tensor[(605), float32]) -> (Tensor[(140), uint8], Tensor[(1, 693), float64], Tensor[(11, 5, 11), float32], Tensor[(700), uint64], Tensor[(605), float32]) {
  @func_12147(%var_12148) /* ty=(Tensor[(140), uint8], Tensor[(1, 693), float64], Tensor[(11, 5, 11), float32], Tensor[(700), uint64], Tensor[(605), float32]) */
}

def @func_15698() -> (Tensor[(5, 4, 7), float64],) {
  %721 = fn () -> (Tensor[(5, 4, 7), float64],) {
    %719 = @func_13910() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(15, 1, 14), bool]) */;
    %720 = %719.0;
    (%720,)
  };
  %721() /* ty=(Tensor[(5, 4, 7), float64],) */
}

def @func_15118() -> (Tensor[(5, 4, 7), uint8],) {
  @func_15116() /* ty=(Tensor[(5, 4, 7), uint8],) */
}

def @func_9640() -> (Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) {
  %722 = cast(meta[relay.Constant][52] /* ty=Tensor[(11, 11, 11), float64] */, dtype="float64") /* ty=Tensor[(11, 11, 11), float64] */;
  %723 = log(%722) /* ty=Tensor[(11, 11, 11), float64] */;
  %724 = cast(%723, dtype="float64") /* ty=Tensor[(11, 11, 11), float64] */;
  %725 = sigmoid(%724) /* ty=Tensor[(11, 11, 11), float64] */;
  %726 = cast(%725, dtype="float32") /* ty=Tensor[(11, 11, 11), float32] */;
  %727 = cast(meta[relay.Constant][53] /* ty=Tensor[(693), uint64] */, dtype="uint64") /* ty=Tensor[(693), uint64] */;
  %728 = cast(meta[relay.Constant][53] /* ty=Tensor[(693), uint64] */, dtype="uint64") /* ty=Tensor[(693), uint64] */;
  %729 = reshape(%727, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), uint64] */;
  %730 = reshape(%728, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), uint64] */;
  %731 = @func_9243(%729, %730) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(7, 9, 11), bool]) */;
  %732 = atan(%726) /* ty=Tensor[(11, 11, 11), float32] */;
  %733 = %731.1;
  (%732, %733, meta[relay.Constant][53] /* ty=Tensor[(693), uint64] */)
}

def @func_14960() -> Tensor[(5, 4, 7), float32] {
  %734 = @func_13080() /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), float32]) */;
  %734.1
}

def @func_13081() -> (Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), float32]) {
  %741 = fn () -> (Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), float32]) {
    %735 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
    %736 = @func_11852() /* ty=(Tensor[(5, 4, 7), float32],) */;
    %737 = %736.0;
    %738 = cast(%737, dtype="float32") /* ty=Tensor[(5, 4, 7), float32] */;
    %739 = %735.1;
    %740 = cosh(%738) /* ty=Tensor[(5, 4, 7), float32] */;
    (%739, %740)
  };
  %741() /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), float32]) */
}

def @func_14133() -> Tensor[(140), uint8] {
  %742 = fn () -> Tensor[(140), uint8] {
    @func_12444() /* ty=Tensor[(140), uint8] */
  };
  %742() /* ty=Tensor[(140), uint8] */
}

def @func_14453(%var_14450: float32, %var_14451: Tensor[(2, 20), float32], %var_14452: Tensor[(18), uint64]) -> (Tensor[(5, 4, 7), float64], Tensor[(6, 3), uint64], float32, Tensor[(2, 20), float32], Tensor[(18), uint64], Tensor[(210), int8], Tensor[(10, 2, 8), float64]) {
  @func_14448(%var_14450, %var_14451, %var_14452) /* ty=(Tensor[(5, 4, 7), float64], Tensor[(6, 3), uint64], float32, Tensor[(2, 20), float32], Tensor[(18), uint64], Tensor[(210), int8], Tensor[(10, 2, 8), float64]) */
}

def @func_16664(%var_16620: Tensor[(3, 4), float32]) -> (Tensor[(5, 4, 7), float32], Tensor[(1080), uint16], Tensor[(330), float32], Tensor[(160), float64], Tensor[(5, 4, 7), float64], Tensor[(140), uint8], Tensor[(3, 1, 4), float32], Tensor[(3, 4), float32], Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), uint8], Tensor[(?, 693), int32]) {
  %743 = @func_13080() /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), float32]) */;
  %744 = %743.1;
  %745 = cast(%744, dtype="uint8") /* ty=Tensor[(5, 4, 7), uint8] */;
  %746 = cast(meta[relay.Constant][54] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %747 = reshape(%745, newshape=[140]) /* ty=Tensor[(140), uint8] */;
  %748 = reshape(%746, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %749 = @func_9963(%747, %748) /* ty=(Tensor[(693), uint64], Tensor[(9, 15, 8), uint16], Tensor[(1080), uint16], Tensor[(140), uint8], Tensor[(16, 9, 1), float64], Tensor[(144), float64], Tensor[(15, 1, 14), bool], Tensor[(66), float32], Tensor[(330), float32]) */;
  %750 = @func_10811() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(10, 2, 8), float64], Tensor[(160), float64]) */;
  %751 = @func_10741() /* ty=(Tensor[(5, 4, 7), float64],) */;
  %752 = cast(meta[relay.Constant][55] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %753 = reshape(%752, newshape=[]) /* ty=int8 */;
  %754 = @func_11006(%753) /* ty=(Tensor[(140), uint8], Tensor[(140), uint8], int8, int8, Tensor[(105, 2), int8]) */;
  %755 = cast(%var_16620, dtype="float32") /* ty=Tensor[(3, 4), float32] */;
  %756 = reshape(%755, newshape=[3, 1, 4]) /* ty=Tensor[(3, 1, 4), float32] */;
  %757 = @func_13462(%756) /* ty=(Tensor[(3, 1, 4), float32],) */;
  %758 = @func_12422() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %759 = @func_12624() /* ty=(Tensor[(5, 4, 7), uint8],) */;
  %760 = @func_11278() /* ty=Tensor[(1, 693), uint64] */;
  %761 = cast(%760, dtype="float64") /* ty=Tensor[(1, 693), float64] */;
  %762 = acosh(%761) /* ty=Tensor[(1, 693), float64] */;
  %763 = cast(%762, dtype="uint8") /* ty=Tensor[(1, 693), uint8] */;
  %764 = cast(meta[relay.Constant][55] /* ty=int8 */, dtype="uint8") /* ty=uint8 */;
  %765 = multiply(%763, %764) /* ty=Tensor[(1, 693), uint8] */;
  %766 = cast(%762, dtype="float32") /* ty=Tensor[(1, 693), float32] */;
  %767 = atan(%766) /* ty=Tensor[(1, 693), float32] */;
  %768 = cast(%767, dtype="int32") /* ty=Tensor[(1, 693), int32] */;
  %769 = shape_of(%765, dtype="int32") /* ty=Tensor[(2), int32] */;
  %770 = cast(%765, dtype="int32") /* ty=Tensor[(1, 693), int32] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %772 = %749.2;
  %773 = %750.2;
  %774 = %751.0;
  %775 = %754.0;
  %776 = %757.0;
  %777 = %758.0;
  %778 = %759.0;
  %779 = subtract(%770, %771) /* ty=Tensor[(?, 693), int32] */;
  (%744, %772, meta[relay.Constant][54] /* ty=Tensor[(330), float32] */, %773, %774, %775, %776, %var_16620, %777, %778, %779)
}

def @func_11215() -> Tensor[(5, 4, 7), uint8] {
  @func_11213() /* ty=Tensor[(5, 4, 7), uint8] */
}

def @func_12424() -> (Tensor[(5, 4, 7), uint8],) {
  @func_12422() /* ty=(Tensor[(5, 4, 7), uint8],) */
}

def @func_11945(%var_11943: Tensor[(56, 12), bool]) -> (Tensor[(5, 4, 7), float64], Tensor[(700), uint64], Tensor[(56, 12), bool], Tensor[(1, 605), float32]) {
  @func_11942(%var_11943) /* ty=(Tensor[(5, 4, 7), float64], Tensor[(700), uint64], Tensor[(56, 12), bool], Tensor[(1, 605), float32]) */
}

def @func_10706() -> Tensor[(140), uint8] {
  @func_10704() /* ty=Tensor[(140), uint8] */
}

def @func_11839() -> (Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) {
  %780 = @func_11200() /* ty=(Tensor[(5, 4, 7), bool],) */;
  %781 = cast(meta[relay.Constant][56] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %782 = cast(meta[relay.Constant][57] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
  %783 = reshape(%781, newshape=[]) /* ty=int8 */;
  %784 = reshape(%782, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), int8] */;
  %785 = %780.0;
  %786 = @func_1708(%783, %784) /* ty=Tensor[(15, 1, 14), bool] */;
  (%785, %786, meta[relay.Constant][56] /* ty=int8 */, meta[relay.Constant][57] /* ty=Tensor[(210), int8] */)
}

def @func_10276(%var_10270: Tensor[(9, 3, 5), float32]) -> (Tensor[(9, 3, 5), float32], Tensor[(9, 3, 5), uint8]) {
  %787 = cast(meta[relay.Constant][58] /* ty=Tensor[(9, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(9, 3, 5), float32] */;
  %788 = cast(%var_10270, dtype="uint8") /* ty=Tensor[(9, 3, 5), uint8] */;
  %789 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(9, 3, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %790 = cast(meta[relay.Constant][58] /* ty=Tensor[(9, 3, 5), float32] */, dtype="uint8") /* ty=Tensor[(9, 3, 5), uint8] */;
  %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %792 = atan(%787) /* ty=Tensor[(9, 3, 5), float32] */;
  %793 = bitwise_or(%790, %791) /* ty=Tensor[(9, 3, 5), uint8] */;
  (%792, %793)
}

def @func_4952(%var_4951: Tensor[(10, 2, 8), float64]) -> Tensor[(10, 2, 8), float64] {
  %795 = fn (%var_4940: Tensor[(10, 2, 8), float64]) -> Tensor[(10, 2, 8), float64] {
    %794 = cast(%var_4940, dtype="float64") /* ty=Tensor[(10, 2, 8), float64] */;
    acos(%794) /* ty=Tensor[(10, 2, 8), float64] */
  };
  %795(%var_4951) /* ty=Tensor[(10, 2, 8), float64] */
}

def @func_10596() -> Tensor[(1, 693), uint64] {
  %797 = fn () -> Tensor[(1, 693), uint64] {
    %796 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
    %796.2
  };
  %797() /* ty=Tensor[(1, 693), uint64] */
}

def @func_11852() -> (Tensor[(5, 4, 7), float32],) {
  %798 = @func_11619() /* ty=(Tensor[(5, 4, 7), float32], Tensor[(1, 693), uint64]) */;
  %799 = %798.0;
  (%799,)
}

def @func_14678() -> Tensor[(5, 4, 7), float32] {
  %803 = fn () -> Tensor[(5, 4, 7), float32] {
    %800 = @func_12422() /* ty=(Tensor[(5, 4, 7), uint8],) */;
    %801 = %800.0;
    %802 = cast(%801, dtype="float32") /* ty=Tensor[(5, 4, 7), float32] */;
    sigmoid(%802) /* ty=Tensor[(5, 4, 7), float32] */
  };
  %803() /* ty=Tensor[(5, 4, 7), float32] */
}

def @func_10811() -> (Tensor[(5, 4, 7), bool], Tensor[(10, 2, 8), float64], Tensor[(160), float64]) {
  %804 = @func_10627() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) */;
  %805 = %804.0;
  %806 = cast(meta[relay.Constant][59] /* ty=Tensor[(5, 4, 7), float64] */, dtype="bool") /* ty=Tensor[(5, 4, 7), bool] */;
  %807 = shape_of(%805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(%805, dtype="bool") /* ty=Tensor[(5, 4, 7), bool] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %810 = cast(meta[relay.Constant][60] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %811 = reshape(%810, newshape=[10, 2, 8]) /* ty=Tensor[(10, 2, 8), float64] */;
  %812 = logical_and(%808, %809) /* ty=Tensor[(5, 4, 7), bool] */;
  %813 = @func_4950(%811) /* ty=Tensor[(10, 2, 8), float64] */;
  (%812, %813, meta[relay.Constant][60] /* ty=Tensor[(160), float64] */)
}

def @func_14350() -> (Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
  %814 = @func_13260() /* ty=(Tensor[(140), uint8], Tensor[(15, 1, 14), bool], int8, Tensor[(5, 4, 7), bool]) */;
  %815 = @func_11213() /* ty=Tensor[(5, 4, 7), uint8] */;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
  %817 = %814.0;
  %818 = log10(%816) /* ty=Tensor[(5, 4, 7), float64] */;
  (%817, %818)
}

def @func_4827(%var_4811: Tensor[(1, 11, 2), float64]) -> (Tensor[(1, 11, 2), float64],) {
  %819 = cast(%var_4811, dtype="float64") /* ty=Tensor[(1, 11, 2), float64] */;
  %820 = acos(%819) /* ty=Tensor[(1, 11, 2), float64] */;
  (%820,)
}

def @func_15617() -> (Tensor[(140), uint8], Tensor[(140), uint8], Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), float32]) {
  %821 = @func_13229() /* ty=(Tensor[(210), int8], Tensor[(5, 4, 7), float64], Tensor[(5, 4, 7), float32]) */;
  %822 = @func_14487() /* ty=Tensor[(140), uint8] */;
  %823 = @func_10495() /* ty=Tensor[(140), uint8] */;
  %824 = %821.2;
  %825 = @func_14677() /* ty=Tensor[(5, 4, 7), float32] */;
  (%822, %823, %824, %825)
}

def @func_9702() -> (Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) {
  %834 = fn () -> (Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) {
    %826 = @func_9640() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) */;
    %827 = cast(meta[relay.Constant][61] /* ty=Tensor[(1, 693), uint64] */, dtype="uint64") /* ty=Tensor[(1, 693), uint64] */;
    %828 = cast(meta[relay.Constant][61] /* ty=Tensor[(1, 693), uint64] */, dtype="uint64") /* ty=Tensor[(1, 693), uint64] */;
    %829 = reshape(%827, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), uint64] */;
    %830 = reshape(%828, newshape=[7, 9, 11]) /* ty=Tensor[(7, 9, 11), uint64] */;
    %831 = @func_9243(%829, %830) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(7, 9, 11), bool]) */;
    %832 = %826.1;
    %833 = %831.0;
    (%832, %833, meta[relay.Constant][61] /* ty=Tensor[(1, 693), uint64] */)
  };
  %834() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */
}

def @func_14719(%var_14716: Tensor[(56), bool], %var_14717: Tensor[(700), uint64], %var_14718: Tensor[(605), float32]) -> (int8, Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(56), bool], Tensor[(672), bool], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8]) {
  @func_14714(%var_14716, %var_14717, %var_14718) /* ty=(int8, Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(56), bool], Tensor[(672), bool], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8]) */
}

def @func_14573(%var_14572: Tensor[(700), uint64]) -> (Tensor[(5, 4, 7), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32]) {
  %843 = fn (%var_14557: Tensor[(700), uint64]) -> (Tensor[(5, 4, 7), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32]) {
    %835 = @func_11101() /* ty=(Tensor[(5, 4, 7), float64],) */;
    %836 = cast(%var_14557, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %837 = cast(meta[relay.Constant][62] /* ty=Tensor[(605), float32] */, dtype="float32") /* ty=Tensor[(605), float32] */;
    %838 = reshape(%836, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), uint64] */;
    %839 = reshape(%837, newshape=[11, 55]) /* ty=Tensor[(11, 55), float32] */;
    %840 = @func_4755(%838, %839) /* ty=(Tensor[(10, 5, 14), uint64], Tensor[(11, 5, 11), float32], Tensor[(11, 55), float32]) */;
    %841 = %835.0;
    %842 = %840.2;
    (%841, %842, %var_14557, meta[relay.Constant][62] /* ty=Tensor[(605), float32] */)
  };
  %843(%var_14572) /* ty=(Tensor[(5, 4, 7), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32]) */
}

def @func_13128(%var_13108: Tensor[(10, 11, 3), float64]) -> (Tensor[(10, 11, 3), float64],) {
  %844 = cast(%var_13108, dtype="float64") /* ty=Tensor[(10, 11, 3), float64] */;
  %845 = acosh(%844) /* ty=Tensor[(10, 11, 3), float64] */;
  (%845,)
}

def @func_12446() -> Tensor[(140), uint8] {
  @func_12444() /* ty=Tensor[(140), uint8] */
}

def @func_14510() -> (Tensor[(10, 2, 8), float64], Tensor[(140), uint8]) {
  @func_14508() /* ty=(Tensor[(10, 2, 8), float64], Tensor[(140), uint8]) */
}

def @func_7738(%var_7734: Tensor[(8, 15, 14), int32], %var_7735: Tensor[(8, 15, 14), int32], %var_7736: int8, %var_7737: Tensor[(15, 16, 14), bool]) -> (Tensor[(8, 15, 14), bool], int8, Tensor[(210), int8], Tensor[(15, 16, 14), bool], Tensor[(15, 13, 15), float32], Tensor[(8, 15, 14), float64]) {
  %869 = fn (%var_7660: Tensor[(8, 15, 14), int32], %var_7661: Tensor[(8, 15, 14), int32], %var_7671: int8, %var_7680: Tensor[(15, 16, 14), bool]) -> (Tensor[(8, 15, 14), bool], int8, Tensor[(210), int8], Tensor[(15, 16, 14), bool], Tensor[(15, 13, 15), float32], Tensor[(8, 15, 14), float64]) {
    %846 = cast(%var_7661, dtype="bool") /* ty=Tensor[(8, 15, 14), bool] */;
    %847 = shape_of(%var_7660, dtype="int32") /* ty=Tensor[(3), int32] */;
    %848 = cast(%var_7660, dtype="bool") /* ty=Tensor[(8, 15, 14), bool] */;
    %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %850 = cast(%var_7671, dtype="int8") /* ty=int8 */;
    %851 = cast(meta[relay.Constant][63] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
    %852 = reshape(%850, newshape=[]) /* ty=int8 */;
    %853 = reshape(%851, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), int8] */;
    %854 = @func_1708(%852, %853) /* ty=Tensor[(15, 1, 14), bool] */;
    %855 = cast(%854, dtype="bool") /* ty=Tensor[(15, 1, 14), bool] */;
    %856 = cast(%var_7680, dtype="bool") /* ty=Tensor[(15, 16, 14), bool] */;
    %857 = cast(%var_7671, dtype="int8") /* ty=int8 */;
    %858 = cast(meta[relay.Constant][63] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
    %859 = reshape(%857, newshape=[]) /* ty=int8 */;
    %860 = reshape(%858, newshape=[210]) /* ty=Tensor[(210), int8] */;
    %861 = @func_4733(%859, %860) /* ty=(Tensor[(15, 13, 15), float32], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
    %862 = cast(%var_7660, dtype="float64") /* ty=Tensor[(8, 15, 14), float64] */;
    %863 = sqrt(%862) /* ty=Tensor[(8, 15, 14), float64] */;
    %864 = cast(%863, dtype="float64") /* ty=Tensor[(8, 15, 14), float64] */;
    %865 = not_equal(%848, %849) /* ty=Tensor[(8, 15, 14), bool] */;
    %866 = greater_equal(%855, %856) /* ty=Tensor[(15, 16, 14), bool] */;
    %867 = %861.0;
    %868 = log(%864) /* ty=Tensor[(8, 15, 14), float64] */;
    (%865, %var_7671, meta[relay.Constant][63] /* ty=Tensor[(210), int8] */, %866, %867, %868)
  };
  %869(%var_7734, %var_7735, %var_7736, %var_7737) /* ty=(Tensor[(8, 15, 14), bool], int8, Tensor[(210), int8], Tensor[(15, 16, 14), bool], Tensor[(15, 13, 15), float32], Tensor[(8, 15, 14), float64]) */
}

def @func_15030() -> (Tensor[(5, 4, 7), uint8],) {
  %872 = fn () -> (Tensor[(5, 4, 7), uint8],) {
    %870 = @func_11351() /* ty=(Tensor[(5, 4, 7), uint8],) */;
    %871 = %870.0;
    (%871,)
  };
  %872() /* ty=(Tensor[(5, 4, 7), uint8],) */
}

def @func_12811() -> (Tensor[(140), uint8],) {
  @func_12809() /* ty=(Tensor[(140), uint8],) */
}

def @func_11280() -> Tensor[(1, 693), uint64] {
  @func_11278() /* ty=Tensor[(1, 693), uint64] */
}

def @func_12625() -> (Tensor[(5, 4, 7), uint8],) {
  %875 = fn () -> (Tensor[(5, 4, 7), uint8],) {
    %873 = @func_11642() /* ty=(Tensor[(5, 4, 7), uint8],) */;
    %874 = %873.0;
    (%874,)
  };
  %875() /* ty=(Tensor[(5, 4, 7), uint8],) */
}

def @func_5818(%var_5817: Tensor[(5, 1, 5), float64]) -> (Tensor[(5, ?, 5), bool],) {
  %883 = fn (%var_5781: Tensor[(5, 1, 5), float64]) -> (Tensor[(5, ?, 5), bool],) {
    %876 = cast(%var_5781, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
    %877 = exp(%876) /* ty=Tensor[(5, 1, 5), float64] */;
    %878 = cast(%var_5781, dtype="bool") /* ty=Tensor[(5, 1, 5), bool] */;
    %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(3), int32] */;
    %880 = cast(%877, dtype="bool") /* ty=Tensor[(5, 1, 5), bool] */;
    %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %882 = logical_or(%880, %881) /* ty=Tensor[(5, ?, 5), bool] */;
    (%882,)
  };
  %883(%var_5817) /* ty=(Tensor[(5, ?, 5), bool],) */
}

def @func_15664() -> (Tensor[(5, 4, 7), uint8], Tensor[(11, 5, 11), float32], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(5, ?, 5), bool], Tensor[(700), uint64], Tensor[(1, 25), float64], Tensor[(330), float32], Tensor[(605), float64]) {
  @func_15662() /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(11, 5, 11), float32], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(5, ?, 5), bool], Tensor[(700), uint64], Tensor[(1, 25), float64], Tensor[(330), float32], Tensor[(605), float64]) */
}

def @func_4736(%var_4734: int8, %var_4735: Tensor[(210), int8]) -> (Tensor[(15, 13, 15), float32], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) {
  %897 = fn (%var_4720: int8, %var_4721: Tensor[(210), int8]) -> (Tensor[(15, 13, 15), float32], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) {
    %884 = cast(meta[relay.Constant][64] /* ty=Tensor[(15, 13, 15), float32] */, dtype="float32") /* ty=Tensor[(15, 13, 15), float32] */;
    %885 = cast(%var_4720, dtype="int8") /* ty=int8 */;
    %886 = cast(%var_4721, dtype="int8") /* ty=Tensor[(210), int8] */;
    %887 = reshape(%885, newshape=[]) /* ty=int8 */;
    %888 = reshape(%886, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), int8] */;
    %889 = cast(meta[relay.Constant][65] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %890 = cast(meta[relay.Constant][65] /* ty=Tensor[(140), uint8] */, dtype="uint8") /* ty=Tensor[(140), uint8] */;
    %891 = reshape(%889, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
    %892 = reshape(%890, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), uint8] */;
    %893 = @func_249(%891, %892) /* ty=(Tensor[(5, 4, 7), uint8],) */;
    %894 = cosh(%884) /* ty=Tensor[(15, 13, 15), float32] */;
    %895 = @func_1708(%887, %888) /* ty=Tensor[(15, 1, 14), bool] */;
    %896 = %893.0;
    (%894, %895, %var_4720, %var_4721, %896, meta[relay.Constant][65] /* ty=Tensor[(140), uint8] */)
  };
  %897(%var_4734, %var_4735) /* ty=(Tensor[(15, 13, 15), float32], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */
}

def @func_4830(%var_4828: Tensor[(1, 11, 2), float64]) -> (Tensor[(1, 11, 2), float64],) {
  @func_4827(%var_4828) /* ty=(Tensor[(1, 11, 2), float64],) */
}

def @func_11478(%var_11477: Tensor[(1, 3360), bool]) -> (Tensor[(5, 4, 7), uint8], Tensor[(8, 15, 14), float64], Tensor[(1680), int32], Tensor[(1, 3360), bool], Tensor[(18), uint64], Tensor[(1, 693), uint64], Tensor[(5, 4, 7), float64], Tensor[(1, 693), uint64], Tensor[(9, 1, 2), uint32]) {
  %926 = fn (%var_11405: Tensor[(1, 3360), bool]) -> (Tensor[(5, 4, 7), uint8], Tensor[(8, 15, 14), float64], Tensor[(1680), int32], Tensor[(1, 3360), bool], Tensor[(18), uint64], Tensor[(1, 693), uint64], Tensor[(5, 4, 7), float64], Tensor[(1, 693), uint64], Tensor[(9, 1, 2), uint32]) {
    %898 = cast(meta[relay.Constant][66] /* ty=Tensor[(1680), int32] */, dtype="int32") /* ty=Tensor[(1680), int32] */;
    %899 = cast(meta[relay.Constant][66] /* ty=Tensor[(1680), int32] */, dtype="int32") /* ty=Tensor[(1680), int32] */;
    %900 = cast(meta[relay.Constant][67] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %901 = cast(%var_11405, dtype="bool") /* ty=Tensor[(1, 3360), bool] */;
    %902 = reshape(%898, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), int32] */;
    %903 = reshape(%899, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), int32] */;
    %904 = reshape(%900, newshape=[]) /* ty=int8 */;
    %905 = reshape(%901, newshape=[15, 16, 14]) /* ty=Tensor[(15, 16, 14), bool] */;
    %906 = @func_7733(%902, %903, %904, %905) /* ty=(Tensor[(8, 15, 14), bool], int8, Tensor[(210), int8], Tensor[(15, 16, 14), bool], Tensor[(15, 13, 15), float32], Tensor[(8, 15, 14), float64]) */;
    %907 = cast(meta[relay.Constant][67] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %908 = reshape(%907, newshape=[]) /* ty=int8 */;
    %909 = @func_2097(%908) /* ty=(Tensor[(4, 9, 12), int16], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(9, 1, 2), uint64], Tensor[(18), uint64]) */;
    %910 = @func_11196() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
    %911 = cast(meta[relay.Constant][67] /* ty=int8 */, dtype="uint64") /* ty=uint64 */;
    %912 = %909.5;
    %913 = cast(%912, dtype="uint64") /* ty=Tensor[(18), uint64] */;
    %914 = reshape(%911, newshape=[]) /* ty=uint64 */;
    %915 = reshape(%913, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), uint64] */;
    %916 = @func_1015(%914, %915) /* ty=(Tensor[(9, 1, 2), uint64],) */;
    %917 = %916.0;
    %918 = cast(%917, dtype="uint32") /* ty=Tensor[(9, 1, 2), uint32] */;
    %919 = cast(meta[relay.Constant][67] /* ty=int8 */, dtype="uint32") /* ty=uint32 */;
    %920 = @func_11213() /* ty=Tensor[(5, 4, 7), uint8] */;
    %921 = %906.5;
    %922 = @func_10595() /* ty=Tensor[(1, 693), uint64] */;
    %923 = %910.1;
    %924 = @func_10525() /* ty=Tensor[(1, 693), uint64] */;
    %925 = left_shift(%918, %919) /* ty=Tensor[(9, 1, 2), uint32] */;
    (%920, %921, meta[relay.Constant][66] /* ty=Tensor[(1680), int32] */, %var_11405, %912, %922, %923, %924, %925)
  };
  %926(%var_11477) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(8, 15, 14), float64], Tensor[(1680), int32], Tensor[(1, 3360), bool], Tensor[(18), uint64], Tensor[(1, 693), uint64], Tensor[(5, 4, 7), float64], Tensor[(1, 693), uint64], Tensor[(9, 1, 2), uint32]) */
}

def @func_15382() -> (Tensor[(2, 4), float64], Tensor[(10, 2, 8), float64], Tensor[(5, 4, 7), float64]) {
  @func_15380() /* ty=(Tensor[(2, 4), float64], Tensor[(10, 2, 8), float64], Tensor[(5, 4, 7), float64]) */
}

def @func_10485() -> Tensor[(5, 4, 7), float64] {
  %927 = @func_10262() /* ty=Tensor[(5, 4, 7), uint8] */;
  %928 = cast(%927, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
  sinh(%928) /* ty=Tensor[(5, 4, 7), float64] */
}

def @func_1711(%var_1709: int8, %var_1710: Tensor[(15, 1, 14), int8]) -> Tensor[(15, 1, 14), bool] {
  %931 = fn (%var_1686: int8, %var_1687: Tensor[(15, 1, 14), int8]) -> Tensor[(15, 1, 14), bool] {
    %929 = cast(%var_1686, dtype="bool") /* ty=bool */;
    %930 = cast(%var_1687, dtype="bool") /* ty=Tensor[(15, 1, 14), bool] */;
    equal(%929, %930) /* ty=Tensor[(15, 1, 14), bool] */
  };
  %931(%var_1709, %var_1710) /* ty=Tensor[(15, 1, 14), bool] */
}

def @func_12444() -> Tensor[(140), uint8] {
  %932 = @func_11196() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */;
  %932.0
}

def @func_16157(%var_16156: Tensor[(40), float32]) -> (Tensor[(140), uint8], Tensor[(10, 2, 8), float64], Tensor[(1, 693), uint64], Tensor[(72), float32], bool, Tensor[(18, 1), uint64], Tensor[(270), uint64], Tensor[(25), float64], Tensor[(2912), int32], Tensor[(4, 10, 1), float32], Tensor[(40), float32]) {
  %960 = fn (%var_16153: Tensor[(40), float32]) -> (Tensor[(140), uint8], Tensor[(10, 2, 8), float64], Tensor[(1, 693), uint64], Tensor[(72), float32], bool, Tensor[(18, 1), uint64], Tensor[(270), uint64], Tensor[(25), float64], Tensor[(2912), int32], Tensor[(4, 10, 1), float32], Tensor[(40), float32]) {
    %933 = @func_13666() /* ty=(Tensor[(10, 2, 8), float64],) */;
    %934 = cast(meta[relay.Constant][68] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %935 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %936 = cast(meta[relay.Constant][69] /* ty=Tensor[(18, 1), uint64] */, dtype="uint64") /* ty=Tensor[(18, 1), uint64] */;
    %937 = cast(meta[relay.Constant][70] /* ty=Tensor[(270), uint64] */, dtype="uint64") /* ty=Tensor[(270), uint64] */;
    %938 = reshape(%934, newshape=[36, 2]) /* ty=Tensor[(36, 2), float32] */;
    %939 = reshape(%935, newshape=[]) /* ty=bool */;
    %940 = reshape(%936, newshape=[18, 1]) /* ty=Tensor[(18, 1), uint64] */;
    %941 = reshape(%937, newshape=[18, 15]) /* ty=Tensor[(18, 15), uint64] */;
    %942 = @func_12590(%938, %939, %940, %941) /* ty=(Tensor[(1, 693), uint64], Tensor[(140), uint8], Tensor[(5, 4, 7), float64], Tensor[(140), uint8], Tensor[(4, 3, 6), bool], Tensor[(36, 2), float32], Tensor[(140), uint8], Tensor[(2, ?, 12), bool], bool, Tensor[(18, 15), float64]) */;
    %943 = cast(meta[relay.Constant][71] /* ty=Tensor[(2912), int32] */, dtype="int32") /* ty=Tensor[(2912), int32] */;
    %944 = cast(meta[relay.Constant][71] /* ty=Tensor[(2912), int32] */, dtype="int32") /* ty=Tensor[(2912), int32] */;
    %945 = reshape(%943, newshape=[13, 14, 16]) /* ty=Tensor[(13, 14, 16), int32] */;
    %946 = reshape(%944, newshape=[13, 14, 16]) /* ty=Tensor[(13, 14, 16), int32] */;
    %947 = @func_6144(%945, %946) /* ty=(Tensor[(13, 14, 16), bool], Tensor[(5, ?, 5), bool], Tensor[(25), float64]) */;
    %948 = cast(False /* ty=bool */, dtype="float32") /* ty=float32 */;
    %949 = cast(%var_16153, dtype="float32") /* ty=Tensor[(40), float32] */;
    %950 = cast(meta[relay.Constant][69] /* ty=Tensor[(18, 1), uint64] */, dtype="uint64") /* ty=Tensor[(18, 1), uint64] */;
    %951 = reshape(%948, newshape=[]) /* ty=float32 */;
    %952 = reshape(%949, newshape=[4, 10, 1]) /* ty=Tensor[(4, 10, 1), float32] */;
    %953 = reshape(%950, newshape=[6, 3]) /* ty=Tensor[(6, 3), uint64] */;
    %954 = @func_13838(%951, %952, %953) /* ty=(Tensor[(4, 10, 1), float32], Tensor[(18, 1), uint64], Tensor[(6, 3), uint64]) */;
    %955 = @func_10095() /* ty=Tensor[(140), uint8] */;
    %956 = %933.0;
    %957 = %942.0;
    %958 = %947.2;
    %959 = %954.0;
    (%955, %956, %957, meta[relay.Constant][68] /* ty=Tensor[(72), float32] */, False /* ty=bool */, meta[relay.Constant][69] /* ty=Tensor[(18, 1), uint64] */, meta[relay.Constant][70] /* ty=Tensor[(270), uint64] */, %958, meta[relay.Constant][71] /* ty=Tensor[(2912), int32] */, %959, %var_16153)
  };
  %960(%var_16156) /* ty=(Tensor[(140), uint8], Tensor[(10, 2, 8), float64], Tensor[(1, 693), uint64], Tensor[(72), float32], bool, Tensor[(18, 1), uint64], Tensor[(270), uint64], Tensor[(25), float64], Tensor[(2912), int32], Tensor[(4, 10, 1), float32], Tensor[(40), float32]) */
}

def @func_16335(%var_16287: Tensor[(72), float32], %var_16306: Tensor[(30, 9), uint64]) -> (Tensor[(10, 2, 8), float64], Tensor[(140), uint8], Tensor[(36, 2), float32], Tensor[(72), float32], bool, Tensor[(18), uint64], Tensor[(30, 9), uint32], Tensor[(10, 2, 8), float64]) {
  %961 = @func_15380() /* ty=(Tensor[(2, 4), float64], Tensor[(10, 2, 8), float64], Tensor[(5, 4, 7), float64]) */;
  %962 = cast(%var_16287, dtype="float32") /* ty=Tensor[(72), float32] */;
  %963 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %964 = cast(meta[relay.Constant][72] /* ty=Tensor[(18), uint64] */, dtype="uint64") /* ty=Tensor[(18), uint64] */;
  %965 = cast(meta[relay.Constant][73] /* ty=Tensor[(30, 9), uint64] */, dtype="uint64") /* ty=Tensor[(30, 9), uint64] */;
  %966 = reshape(%962, newshape=[36, 2]) /* ty=Tensor[(36, 2), float32] */;
  %967 = reshape(%963, newshape=[]) /* ty=bool */;
  %968 = reshape(%964, newshape=[18, 1]) /* ty=Tensor[(18, 1), uint64] */;
  %969 = reshape(%965, newshape=[18, 15]) /* ty=Tensor[(18, 15), uint64] */;
  %970 = @func_12590(%966, %967, %968, %969) /* ty=(Tensor[(1, 693), uint64], Tensor[(140), uint8], Tensor[(5, 4, 7), float64], Tensor[(140), uint8], Tensor[(4, 3, 6), bool], Tensor[(36, 2), float32], Tensor[(140), uint8], Tensor[(2, ?, 12), bool], bool, Tensor[(18, 15), float64]) */;
  %971 = cast(%var_16306, dtype="uint32") /* ty=Tensor[(30, 9), uint32] */;
  %972 = shape_of(meta[relay.Constant][73] /* ty=Tensor[(30, 9), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %973 = cast(meta[relay.Constant][73] /* ty=Tensor[(30, 9), uint64] */, dtype="uint32") /* ty=Tensor[(30, 9), uint32] */;
  %974 = dyn.reshape(%971, %972, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %975 = %961.1;
  %976 = cast(%975, dtype="float64") /* ty=Tensor[(10, 2, 8), float64] */;
  %977 = reshape(%976, newshape=[10, 2, 8]) /* ty=Tensor[(10, 2, 8), float64] */;
  %978 = @func_15307() /* ty=Tensor[(140), uint8] */;
  %979 = %970.5;
  %980 = add(%973, %974) /* ty=Tensor[(30, 9), uint32] */;
  %981 = @func_4950(%977) /* ty=Tensor[(10, 2, 8), float64] */;
  (%975, %978, %979, %var_16287, False /* ty=bool */, meta[relay.Constant][72] /* ty=Tensor[(18), uint64] */, %980, %981)
}

def @func_10704() -> Tensor[(140), uint8] {
  @func_10370() /* ty=Tensor[(140), uint8] */
}

def @func_2707(%var_2705: Tensor[(6, 11, 1), float32], %var_2706: Tensor[(6, 11, 5), float32]) -> (Tensor[(6, 11, 5), float32], Tensor[(18, 1), uint64], Tensor[(15, 1, 14), bool], Tensor[(210), int8], Tensor[(9, 1, 2), bool]) {
  @func_2703(%var_2705, %var_2706) /* ty=(Tensor[(6, 11, 5), float32], Tensor[(18, 1), uint64], Tensor[(15, 1, 14), bool], Tensor[(210), int8], Tensor[(9, 1, 2), bool]) */
}

def @func_12809() -> (Tensor[(140), uint8],) {
  %982 = @func_12743() /* ty=Tensor[(140), uint8] */;
  (%982,)
}

def @func_10496() -> Tensor[(140), uint8] {
  %984 = fn () -> Tensor[(140), uint8] {
    %983 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
    %983.0
  };
  %984() /* ty=Tensor[(140), uint8] */
}

def @func_10742() -> (Tensor[(5, 4, 7), float64],) {
  %986 = fn () -> (Tensor[(5, 4, 7), float64],) {
    %985 = @func_10485() /* ty=Tensor[(5, 4, 7), float64] */;
    (%985,)
  };
  %986() /* ty=(Tensor[(5, 4, 7), float64],) */
}

def @func_10813() -> (Tensor[(5, 4, 7), bool], Tensor[(10, 2, 8), float64], Tensor[(160), float64]) {
  @func_10811() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(10, 2, 8), float64], Tensor[(160), float64]) */
}

def @func_13057(%var_13056: Tensor[(5, 4, 7), float32]) -> (Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
  %996 = fn (%var_13048: Tensor[(5, 4, 7), float32]) -> (Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) {
    %987 = @func_11892() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), float32]) */;
    %988 = %987.1;
    %989 = cast(%var_13048, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
    %990 = shape_of(%988, dtype="int32") /* ty=Tensor[(3), int32] */;
    %991 = cast(%988, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
    %992 = dyn.reshape(%989, %990, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %993 = @func_11213() /* ty=Tensor[(5, 4, 7), uint8] */;
    %994 = @func_10095() /* ty=Tensor[(140), uint8] */;
    %995 = mod(%991, %992) /* ty=Tensor[(5, 4, 7), float64] */;
    (%993, %994, %995)
  };
  %996(%var_13056) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(140), uint8], Tensor[(5, 4, 7), float64]) */
}

def @func_13229() -> (Tensor[(210), int8], Tensor[(5, 4, 7), float64], Tensor[(5, 4, 7), float32]) {
  %997 = @func_11839() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) */;
  %998 = %997.3;
  %999 = @func_10485() /* ty=Tensor[(5, 4, 7), float64] */;
  %1000 = @func_12190() /* ty=Tensor[(5, 4, 7), float32] */;
  (%998, %999, %1000)
}

def @func_16358() -> (Tensor[(5, 4, 7), uint8],) {
  %1001 = @func_12952() /* ty=Tensor[(5, 4, 7), uint8] */;
  (%1001,)
}

def @func_9642() -> (Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) {
  @func_9640() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) */
}

def @func_11352() -> (Tensor[(5, 4, 7), uint8],) {
  %1003 = fn () -> (Tensor[(5, 4, 7), uint8],) {
    %1002 = @func_11213() /* ty=Tensor[(5, 4, 7), uint8] */;
    (%1002,)
  };
  %1003() /* ty=(Tensor[(5, 4, 7), uint8],) */
}

def @func_15308() -> Tensor[(140), uint8] {
  %1004 = fn () -> Tensor[(140), uint8] {
    @func_10495() /* ty=Tensor[(140), uint8] */
  };
  %1004() /* ty=Tensor[(140), uint8] */
}

def @func_15160() -> (Tensor[(140), uint8], Tensor[(11, 11, 11), float32]) {
  %1005 = @func_12809() /* ty=(Tensor[(140), uint8],) */;
  %1006 = @func_9640() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(140), uint8], Tensor[(693), uint64]) */;
  %1007 = %1005.0;
  %1008 = %1006.0;
  (%1007, %1008)
}

def @func_11658() -> (Tensor[(140), uint8],) {
  %1009 = @func_10495() /* ty=Tensor[(140), uint8] */;
  (%1009,)
}

def @func_10468(%var_10466: Tensor[(672), bool], %var_10467: Tensor[(1, 605), float32]) -> (Tensor[(5, 4, 7), uint8], Tensor[(700), uint64], Tensor[(56), bool], Tensor[(672), bool], Tensor[(700), uint64], Tensor[(1, 605), float32]) {
  @func_10464(%var_10466, %var_10467) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(700), uint64], Tensor[(56), bool], Tensor[(672), bool], Tensor[(700), uint64], Tensor[(1, 605), float32]) */
}

def @func_16075() -> (Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), bool]) {
  %1018 = fn () -> (Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), bool]) {
    %1010 = @func_15116() /* ty=(Tensor[(5, 4, 7), uint8],) */;
    %1011 = %1010.0;
    %1012 = cast(%1011, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
    %1013 = cast(%1011, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
    %1014 = reshape(%1012, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), float64] */;
    %1015 = reshape(%1013, newshape=[5, 4, 7]) /* ty=Tensor[(5, 4, 7), float64] */;
    %1016 = @func_11987(%1014, %1015) /* ty=(Tensor[(5, 4, 7), float32], Tensor[(5, 4, 7), bool]) */;
    %1017 = %1016.1;
    (%1011, %1017)
  };
  %1018() /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(5, 4, 7), bool]) */
}

def @func_10629() -> (Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) {
  @func_10627() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(140), uint8]) */
}

def @func_13911() -> (Tensor[(5, 4, 7), float64], Tensor[(15, 1, 14), bool]) {
  %1025 = fn () -> (Tensor[(5, 4, 7), float64], Tensor[(15, 1, 14), bool]) {
    %1019 = @func_13576() /* ty=(Tensor[(5, 4, 7), float64],) */;
    %1020 = %1019.0;
    %1021 = cast(%1020, dtype="float64") /* ty=Tensor[(5, 4, 7), float64] */;
    %1022 = @func_11839() /* ty=(Tensor[(5, 4, 7), bool], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8]) */;
    %1023 = cos(%1021) /* ty=Tensor[(5, 4, 7), float64] */;
    %1024 = %1022.1;
    (%1023, %1024)
  };
  %1025() /* ty=(Tensor[(5, 4, 7), float64], Tensor[(15, 1, 14), bool]) */
}

def @func_15472(%var_15470: Tensor[(15, 693), uint64], %var_15471: Tensor[(700), uint64]) -> (Tensor[(5, 4, 7), uint8], Tensor[(?, 693), bool], Tensor[(140), uint8], Tensor[(56), bool], Tensor[(672), bool], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(15, 693), bool]) {
  %1055 = fn (%var_15429: Tensor[(15, 693), uint64], %var_15455: Tensor[(700), uint64]) -> (Tensor[(5, 4, 7), uint8], Tensor[(?, 693), bool], Tensor[(140), uint8], Tensor[(56), bool], Tensor[(672), bool], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(15, 693), bool]) {
    %1026 = @func_14180() /* ty=(Tensor[(5, 4, 7), uint8],) */;
    %1027 = @func_9701() /* ty=(Tensor[(140), uint8], Tensor[(5, 4, 7), uint8], Tensor[(1, 693), uint64]) */;
    %1028 = %1027.2;
    %1029 = cast(meta[relay.Constant][74] /* ty=Tensor[(1, 693), uint64] */, dtype="bool") /* ty=Tensor[(1, 693), bool] */;
    %1030 = shape_of(%1028, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1031 = cast(%1028, dtype="bool") /* ty=Tensor[(1, 693), bool] */;
    %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1033 = cast(meta[relay.Constant][75] /* ty=Tensor[(56), bool] */, dtype="bool") /* ty=Tensor[(56), bool] */;
    %1034 = cast(meta[relay.Constant][76] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
    %1035 = cast(%var_15455, dtype="uint64") /* ty=Tensor[(700), uint64] */;
    %1036 = cast(meta[relay.Constant][77] /* ty=Tensor[(605), float32] */, dtype="float32") /* ty=Tensor[(605), float32] */;
    %1037 = %1026.0;
    %1038 = cast(%1037, dtype="uint8") /* ty=Tensor[(5, 4, 7), uint8] */;
    %1039 = reshape(%1033, newshape=[1, 7, 8]) /* ty=Tensor[(1, 7, 8), bool] */;
    %1040 = reshape(%1034, newshape=[12, 7, 8]) /* ty=Tensor[(12, 7, 8), bool] */;
    %1041 = reshape(%1035, newshape=[700]) /* ty=Tensor[(700), uint64] */;
    %1042 = reshape(%1036, newshape=[605]) /* ty=Tensor[(605), float32] */;
    %1043 = reshape(%1038, newshape=[140]) /* ty=Tensor[(140), uint8] */;
    %1044 = @func_8829(%1039, %1040, %1041, %1042, %1043) /* ty=(Tensor[(12, 7, 8), float64], Tensor[(11, 55), float32], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(5, 4, 7), uint8], Tensor[(140), uint8]) */;
    %1045 = cast(%1028, dtype="bool") /* ty=Tensor[(1, 693), bool] */;
    %1046 = cast(%var_15429, dtype="bool") /* ty=Tensor[(15, 693), bool] */;
    %1047 = less(%1045, %1046) /* ty=Tensor[(15, 693), bool] */;
    %1048 = cast(%var_15429, dtype="bool") /* ty=Tensor[(15, 693), bool] */;
    %1049 = shape_of(%1047, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1050 = cast(%1047, dtype="bool") /* ty=Tensor[(15, 693), bool] */;
    %1051 = dyn.reshape(%1048, %1049, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1052 = less_equal(%1031, %1032) /* ty=Tensor[(?, 693), bool] */;
    %1053 = %1044.5;
    %1054 = greater(%1050, %1051) /* ty=Tensor[(15, 693), bool] */;
    (%1037, %1052, %1053, meta[relay.Constant][75] /* ty=Tensor[(56), bool] */, meta[relay.Constant][76] /* ty=Tensor[(672), bool] */, %var_15455, meta[relay.Constant][77] /* ty=Tensor[(605), float32] */, %1054)
  };
  %1055(%var_15470, %var_15471) /* ty=(Tensor[(5, 4, 7), uint8], Tensor[(?, 693), bool], Tensor[(140), uint8], Tensor[(56), bool], Tensor[(672), bool], Tensor[(700), uint64], Tensor[(605), float32], Tensor[(15, 693), bool]) */
}

def @func_14489() -> Tensor[(140), uint8] {
  @func_14487() /* ty=Tensor[(140), uint8] */
}

def @func_2099(%var_2098: int8) -> (Tensor[(4, 9, 12), int16], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(9, 1, 2), uint64], Tensor[(18), uint64]) {
  %1072 = fn (%var_2055: int8) -> (Tensor[(4, 9, 12), int16], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(9, 1, 2), uint64], Tensor[(18), uint64]) {
    %1056 = cast(meta[relay.Constant][79] /* ty=Tensor[(4, 9, 12), int16] */, dtype="int16") /* ty=Tensor[(4, 9, 12), int16] */;
    %1057 = shape_of(meta[relay.Constant][78] /* ty=Tensor[(4, 9, 12), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1058 = cast(meta[relay.Constant][78] /* ty=Tensor[(4, 9, 12), int16] */, dtype="int16") /* ty=Tensor[(4, 9, 12), int16] */;
    %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1060 = cast(%var_2055, dtype="int8") /* ty=int8 */;
    %1061 = cast(meta[relay.Constant][80] /* ty=Tensor[(210), int8] */, dtype="int8") /* ty=Tensor[(210), int8] */;
    %1062 = reshape(%1060, newshape=[]) /* ty=int8 */;
    %1063 = reshape(%1061, newshape=[15, 1, 14]) /* ty=Tensor[(15, 1, 14), int8] */;
    %1064 = cast(%var_2055, dtype="uint64") /* ty=uint64 */;
    %1065 = cast(meta[relay.Constant][81] /* ty=Tensor[(18), uint64] */, dtype="uint64") /* ty=Tensor[(18), uint64] */;
    %1066 = reshape(%1064, newshape=[]) /* ty=uint64 */;
    %1067 = reshape(%1065, newshape=[9, 1, 2]) /* ty=Tensor[(9, 1, 2), uint64] */;
    %1068 = @func_1015(%1066, %1067) /* ty=(Tensor[(9, 1, 2), uint64],) */;
    %1069 = bitwise_and(%1058, %1059) /* ty=Tensor[(4, 9, 12), int16] */;
    %1070 = @func_1708(%1062, %1063) /* ty=Tensor[(15, 1, 14), bool] */;
    %1071 = %1068.0;
    (%1069, %1070, %var_2055, meta[relay.Constant][80] /* ty=Tensor[(210), int8] */, %1071, meta[relay.Constant][81] /* ty=Tensor[(18), uint64] */)
  };
  %1072(%var_2098) /* ty=(Tensor[(4, 9, 12), int16], Tensor[(15, 1, 14), bool], int8, Tensor[(210), int8], Tensor[(9, 1, 2), uint64], Tensor[(18), uint64]) */
}

def @func_14962() -> Tensor[(5, 4, 7), float32] {
  @func_14960() /* ty=Tensor[(5, 4, 7), float32] */
}

def @func_12744() -> Tensor[(140), uint8] {
  %1073 = fn () -> Tensor[(140), uint8] {
    @func_10704() /* ty=Tensor[(140), uint8] */
  };
  %1073() /* ty=Tensor[(140), uint8] */
}

def @func_249(%var_243: Tensor[(5, 4, 7), uint8], %var_244: Tensor[(5, 4, 7), uint8]) -> (Tensor[(5, 4, 7), uint8],) {
  %1074 = cast(%var_244, dtype="uint8") /* ty=Tensor[(5, 4, 7), uint8] */;
  %1075 = shape_of(%var_243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1076 = cast(%var_243, dtype="uint8") /* ty=Tensor[(5, 4, 7), uint8] */;
  %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1078 = bitwise_and(%1076, %1077) /* ty=Tensor[(5, 4, 7), uint8] */;
  (%1078,)
}

def @func_11103() -> (Tensor[(5, 4, 7), float64],) {
  @func_11101() /* ty=(Tensor[(5, 4, 7), float64],) */
}

def @func_12672() -> (Tensor[(5, 4, 7), uint8],) {
  %1081 = fn () -> (Tensor[(5, 4, 7), uint8],) {
    %1079 = @func_11642() /* ty=(Tensor[(5, 4, 7), uint8],) */;
    %1080 = %1079.0;
    (%1080,)
  };
  %1081() /* ty=(Tensor[(5, 4, 7), uint8],) */
}

def @func_12596(%var_12592: Tensor[(36, 2), float32], %var_12593: bool, %var_12594: Tensor[(18, 1), uint64], %var_12595: Tensor[(18, 15), uint64]) -> (Tensor[(1, 693), uint64], Tensor[(140), uint8], Tensor[(5, 4, 7), float64], Tensor[(140), uint8], Tensor[(4, 3, 6), bool], Tensor[(36, 2), float32], Tensor[(140), uint8], Tensor[(2, ?, 12), bool], bool, Tensor[(18, 15), float64]) {
  @func_12590(%var_12592, %var_12593, %var_12594, %var_12595) /* ty=(Tensor[(1, 693), uint64], Tensor[(140), uint8], Tensor[(5, 4, 7), float64], Tensor[(140), uint8], Tensor[(4, 3, 6), bool], Tensor[(36, 2), float32], Tensor[(140), uint8], Tensor[(2, ?, 12), bool], bool, Tensor[(18, 15), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen898/build/output.py:2802: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen898/build/output.py", line 2807, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(720) tvmgen_default_fused_add_kernel0(uint64_t* __restrict__ T_add, uint64_t* __restrict__ placeholder, uint64_t* __restrict__ placeholder1) {
  T_add[(((int)threadIdx.x))] = (placeholder[(0)] + placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


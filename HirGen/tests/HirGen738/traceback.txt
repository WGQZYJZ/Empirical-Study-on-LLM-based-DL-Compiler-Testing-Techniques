==========mod==========
#[version = "0.0.5"]
def @func_5798() -> (Tensor[(1650), float32],) {
  %0 = @func_5604() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32]) */;
  %1 = %0.2;
  (%1,)
}

def @func_1062() -> Tensor[(?, 3, 15), uint8] {
  %2 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
  %3 = cast(%2, dtype="float64") /* ty=Tensor[(1, 3, 15), float64] */;
  %4 = cosh(%3) /* ty=Tensor[(1, 3, 15), float64] */;
  %5 = cast(%4, dtype="uint8") /* ty=Tensor[(1, 3, 15), uint8] */;
  %6 = shape_of(%2, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%2, dtype="uint8") /* ty=Tensor[(1, 3, 15), uint8] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  add(%7, %8) /* ty=Tensor[(?, 3, 15), uint8] */
}

def @func_10720(%var_10703: Tensor[(10, 3, 15), float64]) -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(10, 3, 15), bool]) {
  %9 = @func_6750() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %10 = @func_8307() /* ty=(Tensor[(270), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) */;
  %11 = %10.3;
  %12 = cast(%11, dtype="float32") /* ty=Tensor[(1, 3, 15), float32] */;
  %13 = cast(%var_10703, dtype="float32") /* ty=Tensor[(10, 3, 15), float32] */;
  %14 = mod(%12, %13) /* ty=Tensor[(10, 3, 15), float32] */;
  %15 = cast(%14, dtype="bool") /* ty=Tensor[(10, 3, 15), bool] */;
  %16 = cast(%11, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %17 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %18 = %9.0;
  %19 = equal(%15, %16) /* ty=Tensor[(10, 3, 15), bool] */;
  (%17, %18, %19)
}

def @func_1033(%var_1019: Tensor[(6, 1), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) {
  %20 = cast(%var_1019, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %21 = cast(%var_1019, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %22 = reshape(%20, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
  %23 = reshape(%21, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
  %24 = @func_838(%22, %23) /* ty=(Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) */;
  %25 = cast(%var_1019, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %26 = %24.3;
  %27 = cast(%26, dtype="uint32") /* ty=Tensor[(2, 1, 3), uint32] */;
  %28 = reshape(%25, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
  %29 = reshape(%27, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
  %30 = @func_838(%28, %29) /* ty=(Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) */;
  %31 = cast(meta[relay.Constant][0] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %32 = cast(meta[relay.Constant][0] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %33 = reshape(%31, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %34 = reshape(%32, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %35 = @func_273(%33, %34) /* ty=(Tensor[(9, 7, 2), int16],) */;
  %36 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
  %37 = %30.4;
  %38 = %35.0;
  (%36, %26, %var_1019, %37, %38, meta[relay.Constant][0] /* ty=Tensor[(126), int16] */)
}

def @func_318(%var_308: Tensor[(11, 10, 15), float32]) -> Tensor[(11, 10, 15), float32] {
  %39 = cast(%var_308, dtype="float32") /* ty=Tensor[(11, 10, 15), float32] */;
  %40 = log10(%39) /* ty=Tensor[(11, 10, 15), float32] */;
  %41 = cast(%var_308, dtype="float32") /* ty=Tensor[(11, 10, 15), float32] */;
  %42 = shape_of(%40, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%40, dtype="float32") /* ty=Tensor[(11, 10, 15), float32] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  maximum(%43, %44) /* ty=Tensor[(11, 10, 15), float32] */
}

def @func_10385(%var_10380: Tensor[(13, 3, 15), uint8]) -> Tensor[(13, 3, 15), uint16] {
  %45 = @func_5000() /* ty=(Tensor[(?, 3, 15), uint8],) */;
  %46 = %45.0;
  %47 = cast(%46, dtype="uint16") /* ty=Tensor[(?, 3, 15), uint16] */;
  %48 = cast(%var_10380, dtype="uint16") /* ty=Tensor[(13, 3, 15), uint16] */;
  subtract(%47, %48) /* ty=Tensor[(13, 3, 15), uint16] */
}

def @func_8030() -> (Tensor[(11, 10, 15), float32],) {
  %49 = @func_5604() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32]) */;
  %50 = %49.1;
  (%50,)
}

def @func_11822() -> Tensor[(12, 4, 1), float32] {
  %51 = @func_7471() /* ty=(Tensor[(12, 4, 1), float32],) */;
  %51.0
}

def @func_6483(%var_6477: Tensor[(6), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(1, 3, 15), float64]) {
  %52 = @func_6195() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(72), float32]) */;
  %53 = cast(%var_6477, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %54 = cast(%var_6477, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %55 = reshape(%53, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
  %56 = reshape(%54, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
  %57 = @func_838(%55, %56) /* ty=(Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) */;
  %58 = @func_3169() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %59 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %60 = %52.0;
  %61 = %57.3;
  %62 = %58.0;
  (%59, %60, %61, %var_6477, %62)
}

def @func_5503(%var_5474: Tensor[(72), float32]) -> (Tensor[(1, 3, 15), float64], Tensor[(2, 12, 3), float32], Tensor[(72), float32], Tensor[(6), uint32]) {
  %63 = cast(%var_5474, dtype="float32") /* ty=Tensor[(72), float32] */;
  %64 = cast(meta[relay.Constant][1] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %65 = reshape(%63, newshape=[2, 12, 3]) /* ty=Tensor[(2, 12, 3), float32] */;
  %66 = reshape(%64, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %67 = @func_2102(%65, %66) /* ty=(Tensor[(2, 12, 3), float32], Tensor[(6), uint32], Tensor[(6), uint32]) */;
  %68 = @func_2730() /* ty=Tensor[(1, 3, 15), float64] */;
  %69 = %67.0;
  (%68, %69, %var_5474, meta[relay.Constant][1] /* ty=Tensor[(6), uint32] */)
}

def @func_8409(%var_8399: Tensor[(6), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) {
  %70 = cast(%var_8399, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %71 = reshape(%70, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %72 = @func_1033(%71) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %73 = @func_6576() /* ty=Tensor[(1, 3, 15), float64] */;
  %74 = %72.3;
  (%73, %74, %var_8399)
}

def @func_8605() -> (Tensor[(12, 15, 7), float64], Tensor[(12, 15, 7), float32]) {
  %75 = @func_3490() /* ty=(Tensor[(6), uint32], Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(?, 3, 15), uint16], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), uint8], Tensor[(12, 15, 7), float32], Tensor[(6, 1), uint32]) */;
  %76 = %75.6;
  %77 = cast(%76, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
  %78 = @func_6909() /* ty=(Tensor[(6, 1), uint32], Tensor[(10, 3, 15), float32], Tensor[(450), float64], Tensor[(12, 15, 7), float32], Tensor[(12, 15, 7), float32], Tensor[(126), int16]) */;
  %79 = cosh(%77) /* ty=Tensor[(12, 15, 7), float64] */;
  %80 = %78.4;
  (%79, %80)
}

def @func_2359(%var_2294: Tensor[(6, 3, 15), float64]) -> (Tensor[(6, 3, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(1, 3, 15), float64], Tensor[(6, 3, 15), uint64], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), int64]) {
  %81 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %82 = cast(%81, dtype="float32") /* ty=Tensor[(1, 3, 15), float32] */;
  %83 = cast(%var_2294, dtype="float32") /* ty=Tensor[(6, 3, 15), float32] */;
  %84 = @func_2213() /* ty=Tensor[(?, 3, 15), uint8] */;
  %85 = cast(%84, dtype="bool") /* ty=Tensor[(?, 3, 15), bool] */;
  %86 = shape_of(%81, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%81, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %89 = cast(%var_2294, dtype="uint64") /* ty=Tensor[(6, 3, 15), uint64] */;
  %90 = cast(%84, dtype="uint64") /* ty=Tensor[(?, 3, 15), uint64] */;
  %91 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
  %92 = mod(%82, %83) /* ty=Tensor[(6, 3, 15), float32] */;
  %93 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
  %94 = not_equal(%87, %88) /* ty=Tensor[(?, 3, 15), bool] */;
  %95 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %96 = right_shift(%89, %90) /* ty=Tensor[(6, 3, 15), uint64] */;
  %97 = @func_1062() /* ty=Tensor[(?, 3, 15), uint8] */;
  %98 = %91.1;
  (%92, %93, %94, %95, %96, %97, %98)
}

def @func_8626() -> Tensor[(12, 15, 7), float32] {
  %99 = @func_8605() /* ty=(Tensor[(12, 15, 7), float64], Tensor[(12, 15, 7), float32]) */;
  %99.1
}

def @func_5766(%var_5732: Tensor[(10, 3, 15), float64]) -> (Tensor[(10, 3, 15), float64], Tensor[(10, 3, 15), float32]) {
  %100 = @func_4182() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */;
  %101 = %100.0;
  %102 = cast(%101, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %103 = cast(%var_5732, dtype="bool") /* ty=Tensor[(10, 3, 15), bool] */;
  %104 = greater_equal(%102, %103) /* ty=Tensor[(10, 3, 15), bool] */;
  %105 = cast(%104, dtype="float64") /* ty=Tensor[(10, 3, 15), float64] */;
  %106 = cast(%104, dtype="float32") /* ty=Tensor[(10, 3, 15), float32] */;
  %107 = log10(%106) /* ty=Tensor[(10, 3, 15), float32] */;
  %108 = cast(%107, dtype="float32") /* ty=Tensor[(10, 3, 15), float32] */;
  %109 = sigmoid(%105) /* ty=Tensor[(10, 3, 15), float64] */;
  %110 = log2(%108) /* ty=Tensor[(10, 3, 15), float32] */;
  (%109, %110)
}

def @func_5991() -> (Tensor[(?, 3, 15), int64],) {
  %111 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
  %112 = %111.1;
  (%112,)
}

def @func_9514() -> (Tensor[(1, 3, 15), float64],) {
  %113 = @func_6693() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %114 = %113.0;
  (%114,)
}

def @func_2001() -> Tensor[(1, 3, 15), float64] {
  @func_985() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_8426() -> (Tensor[(1, 3, 15), float64],) {
  %115 = @func_3136() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %116 = %115.0;
  (%116,)
}

def @func_5928() -> (Tensor[(1, 3, 15), float64],) {
  %117 = @func_5675() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) */;
  %118 = %117.0;
  (%118,)
}

def @func_2784(%var_2775: Tensor[(6), uint32]) -> (Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64], Tensor[(126), int16], Tensor[(6), uint32]) {
  %119 = cast(%var_2775, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %120 = reshape(%119, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %121 = @func_1033(%120) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %122 = @func_2213() /* ty=Tensor[(?, 3, 15), uint8] */;
  %123 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
  %124 = %121.5;
  (%122, %123, %124, %var_2775)
}

def @func_8192(%var_8175: Tensor[(11, 3, 15), float64]) -> (Tensor[(11, 3, 15), int32], Tensor[(11, 3, 15), bool]) {
  %125 = @func_1684() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */;
  %126 = %125.3;
  %127 = cast(%126, dtype="int32") /* ty=Tensor[(1, 3, 15), int32] */;
  %128 = cast(%var_8175, dtype="int32") /* ty=Tensor[(11, 3, 15), int32] */;
  %129 = cast(%var_8175, dtype="bool") /* ty=Tensor[(11, 3, 15), bool] */;
  %130 = cast(%126, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %131 = add(%127, %128) /* ty=Tensor[(11, 3, 15), int32] */;
  %132 = greater(%129, %130) /* ty=Tensor[(11, 3, 15), bool] */;
  (%131, %132)
}

def @func_3947() -> (Tensor[(1, 3, 15), float64],) {
  %133 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %134 = %133.0;
  (%134,)
}

def @func_11972() -> Tensor[(1, 3, 15), float64] {
  %135 = @func_3136() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %135.0
}

def @func_9422(%var_9413: Tensor[(360), float64]) -> (Tensor[(1, 3, 15), float64], Tensor[(8, 3, 15), int16], Tensor[(360), float64], Tensor[(?, 3, 15), uint8]) {
  %136 = @func_6750() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %137 = cast(%var_9413, dtype="float64") /* ty=Tensor[(360), float64] */;
  %138 = reshape(%137, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float64] */;
  %139 = @func_7138(%138) /* ty=(Tensor[(8, 3, 15), int16], Tensor[(1, 3, 15), float64]) */;
  %140 = %136.0;
  %141 = %139.0;
  %142 = @func_2213() /* ty=Tensor[(?, 3, 15), uint8] */;
  (%140, %141, %var_9413, %142)
}

def @func_9929(%var_9923: Tensor[(12, 15, 7), float32]) -> Tensor[(12, 15, 7), uint16] {
  %143 = @func_5571() /* ty=Tensor[(12, 15, 7), float32] */;
  %144 = cast(%var_9923, dtype="uint16") /* ty=Tensor[(12, 15, 7), uint16] */;
  %145 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%143, dtype="uint16") /* ty=Tensor[(12, 15, 7), uint16] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  multiply(%146, %147) /* ty=Tensor[(12, 15, 7), uint16] */
}

def @func_7752(%var_7746: Tensor[(1650), float32]) -> Tensor[(1650), uint16] {
  %148 = @func_7325() /* ty=(Tensor[(1650), float32],) */;
  %149 = %148.0;
  %150 = cast(%var_7746, dtype="uint16") /* ty=Tensor[(1650), uint16] */;
  %151 = shape_of(%149, dtype="int32") /* ty=Tensor[(1), int32] */;
  %152 = cast(%149, dtype="uint16") /* ty=Tensor[(1650), uint16] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?), uint16] */;
  logical_xor(%152, %153) /* ty=Tensor[(1650), uint16] */
}

def @func_8119(%var_8067: Tensor[(1650), float32]) -> (Tensor[(1, 3, 15), float64], Tensor[(1650), uint16], Tensor[(1650), float32], Tensor[(15, 13, 12), int64], Tensor[(2340), int64], Tensor[(?, 9, 15), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 3, 15), float64], Tensor[(405), float64], Tensor[(11, 10, 15), float32]) {
  %154 = @func_3526() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */;
  %155 = cast(%var_8067, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %156 = reshape(%155, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %157 = cast(meta[relay.Constant][2] /* ty=Tensor[(2340), int64] */, dtype="int64") /* ty=Tensor[(2340), int64] */;
  %158 = cast(meta[relay.Constant][2] /* ty=Tensor[(2340), int64] */, dtype="int64") /* ty=Tensor[(2340), int64] */;
  %159 = reshape(%157, newshape=[15, 13, 12]) /* ty=Tensor[(15, 13, 12), int64] */;
  %160 = reshape(%158, newshape=[15, 13, 12]) /* ty=Tensor[(15, 13, 12), int64] */;
  %161 = @func_7286(%159, %160) /* ty=(Tensor[(15, 13, 12), int64], Tensor[(6, 1), uint32]) */;
  %162 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 9, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 9, 15), float32] */;
  %163 = log(%162) /* ty=Tensor[(1, 9, 15), float32] */;
  %164 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 9, 15), float32] */, dtype="float64") /* ty=Tensor[(1, 9, 15), float64] */;
  %165 = shape_of(%163, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(%163, dtype="float64") /* ty=Tensor[(1, 9, 15), float64] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %168 = @func_7893() /* ty=(Tensor[(6, 1), uint32], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
  %169 = %168.0;
  %170 = cast(%169, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %171 = reshape(%170, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %172 = @func_1033(%171) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %173 = cast(meta[relay.Constant][4] /* ty=Tensor[(405), float64] */, dtype="float64") /* ty=Tensor[(405), float64] */;
  %174 = reshape(%173, newshape=[9, 3, 15]) /* ty=Tensor[(9, 3, 15), float64] */;
  %175 = @func_8030() /* ty=(Tensor[(11, 10, 15), float32],) */;
  %176 = %154.0;
  %177 = @func_7752(%156) /* ty=Tensor[(1650), uint16] */;
  %178 = %161.0;
  %179 = divide(%166, %167) /* ty=Tensor[(?, 9, 15), float64] */;
  %180 = %172.1;
  %181 = @func_6294(%174) /* ty=Tensor[(9, 3, 15), float64] */;
  %182 = %175.0;
  (%176, %177, %var_8067, %178, meta[relay.Constant][2] /* ty=Tensor[(2340), int64] */, %179, %169, %180, %181, meta[relay.Constant][4] /* ty=Tensor[(405), float64] */, %182)
}

def @func_4011(%var_3991: Tensor[(1, 1650), float32]) -> (Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64], Tensor[(6, 1), uint32], Tensor[(11, 10, 15), float32], Tensor[(1, 1650), float32], Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64]) {
  %183 = @func_2502() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %184 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
  %185 = cast(%var_3991, dtype="float32") /* ty=Tensor[(1, 1650), float32] */;
  %186 = reshape(%185, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
  %187 = @func_3006() /* ty=(Tensor[(3, 3, 15), int64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8]) */;
  %188 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %189 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %190 = %183.0;
  %191 = %184.0;
  %192 = @func_318(%186) /* ty=Tensor[(11, 10, 15), float32] */;
  %193 = %187.3;
  %194 = %188.0;
  (%189, %190, %191, %192, %var_3991, %193, %194)
}

def @func_3006() -> (Tensor[(3, 3, 15), int64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8]) {
  %195 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
  %196 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %197 = %196.0;
  %198 = cast(%197, dtype="uint64") /* ty=Tensor[(1, 3, 15), uint64] */;
  %199 = shape_of(%195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %200 = cast(%195, dtype="uint64") /* ty=Tensor[(1, 3, 15), uint64] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %202 = bitwise_and(%200, %201) /* ty=Tensor[(?, 3, 15), uint64] */;
  %203 = cast(%202, dtype="float64") /* ty=Tensor[(?, 3, 15), float64] */;
  %204 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 3, 15), uint64] */, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
  %205 = floor_mod(%203, %204) /* ty=Tensor[(3, 3, 15), float64] */;
  %206 = cast(%205, dtype="int64") /* ty=Tensor[(3, 3, 15), int64] */;
  %207 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(3, 3, 15), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 3, 15), uint64] */, dtype="int64") /* ty=Tensor[(3, 3, 15), int64] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %210 = @func_2502() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %211 = subtract(%208, %209) /* ty=Tensor[(3, 3, 15), int64] */;
  %212 = @func_2454() /* ty=Tensor[(12, 15, 7), float32] */;
  %213 = %210.1;
  %214 = @func_2213() /* ty=Tensor[(?, 3, 15), uint8] */;
  (%211, %212, %213, %214)
}

def @func_8636() -> Tensor[(1, 3, 15), float64] {
  @func_3720() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_2102(%var_2089: Tensor[(2, 12, 3), float32], %var_2093: Tensor[(6), uint32]) -> (Tensor[(2, 12, 3), float32], Tensor[(6), uint32], Tensor[(6), uint32]) {
  %215 = cast(%var_2089, dtype="float32") /* ty=Tensor[(2, 12, 3), float32] */;
  %216 = cast(%var_2093, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %217 = reshape(%216, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %218 = @func_1124(%217) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %219 = sinh(%215) /* ty=Tensor[(2, 12, 3), float32] */;
  %220 = %218.3;
  (%219, %220, %var_2093)
}

def @func_8881() -> (Tensor[(12, 15, 7), float32],) {
  %221 = @func_6744() /* ty=(Tensor[(6, 1), uint32], Tensor[(270), float64], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
  %222 = %221.3;
  (%222,)
}

def @func_6100(%var_6052: Tensor[(1260), float32], %var_6080: Tensor[(2, 1, 3), float64]) -> (Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), bool], Tensor[(1260), float32], Tensor[(2, ?, 3), uint8], Tensor[(6), uint32], Tensor[(2, 1, 3), float64]) {
  %223 = @func_1266() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %224 = cast(%var_6052, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %225 = reshape(%224, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float32] */;
  %226 = @func_4222() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64]) */;
  %227 = %226.1;
  %228 = cast(%var_6080, dtype="uint8") /* ty=Tensor[(2, 1, 3), uint8] */;
  %229 = shape_of(%227, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%227, dtype="uint8") /* ty=Tensor[(2, 1, 3), uint8] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %232 = @func_1307() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) */;
  %233 = %232.2;
  %234 = cast(%233, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %235 = reshape(%234, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %236 = @func_1033(%235) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %237 = %223.0;
  %238 = @func_5331(%225) /* ty=Tensor[(12, 15, 7), bool] */;
  %239 = maximum(%230, %231) /* ty=Tensor[(2, ?, 3), uint8] */;
  %240 = %236.3;
  (%237, %238, %var_6052, %239, %233, %240)
}

def @func_9317() -> (Tensor[(?, 3, 15), int64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) {
  %241 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
  %242 = @func_2237() /* ty=(Tensor[(12, 15, 7), float32],) */;
  %243 = %242.0;
  %244 = cast(%243, dtype="float32") /* ty=Tensor[(12, 15, 7), float32] */;
  %245 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %246 = %241.1;
  %247 = asinh(%244) /* ty=Tensor[(12, 15, 7), float32] */;
  %248 = %245.0;
  (%246, %247, %248)
}

def @func_3720() -> Tensor[(1, 3, 15), float64] {
  %249 = @func_3136() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %249.0
}

def @func_11381() -> (Tensor[(6, 1), uint32], Tensor[(6), uint32]) {
  %250 = @func_7123() /* ty=(Tensor[(6, 1), uint32],) */;
  %251 = @func_6195() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(72), float32]) */;
  %252 = %250.0;
  %253 = %251.1;
  (%252, %253)
}

def @func_4251() -> Tensor[(6, 1), uint32] {
  %254 = @func_3357() /* ty=(Tensor[(6, 1), uint32], Tensor[(3, 3, 15), int64]) */;
  %254.0
}

def @func_12185(%var_12180: Tensor[(2, 8, 5), uint32], %var_12181: Tensor[(2, 8, 5), uint32]) -> (Tensor[(2, 8, 5), bool],) {
  %255 = cast(%var_12181, dtype="bool") /* ty=Tensor[(2, 8, 5), bool] */;
  %256 = shape_of(%var_12180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(%var_12180, dtype="bool") /* ty=Tensor[(2, 8, 5), bool] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %259 = less_equal(%257, %258) /* ty=Tensor[(2, 8, 5), bool] */;
  (%259,)
}

def @func_4660() -> (Tensor[(3, 4, 6), int16], Tensor[(1, 3, 15), float64]) {
  %260 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 4, 6), int16] */, dtype="int16") /* ty=Tensor[(3, 4, 6), int16] */;
  %261 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(3, 4, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %262 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 4, 6), int16] */, dtype="int16") /* ty=Tensor[(3, 4, 6), int16] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %264 = bitwise_and(%262, %263) /* ty=Tensor[(3, 4, 6), int16] */;
  %265 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
  (%264, %265)
}

def @func_4222() -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64]) {
  %266 = @func_1770() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %267 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
  %268 = %266.1;
  (%267, %268)
}

def @func_6368(%var_6352: Tensor[(28), float32]) -> (Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(28), float32], Tensor[(1, 3, 15), float64]) {
  %269 = @func_4222() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64]) */;
  %270 = cast(%var_6352, dtype="float32") /* ty=Tensor[(28), float32] */;
  %271 = %269.1;
  %272 = cast(%271, dtype="uint32") /* ty=Tensor[(2, 1, 3), uint32] */;
  %273 = reshape(%270, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), float32] */;
  %274 = reshape(%272, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %275 = @func_2397(%273, %274) /* ty=(Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 14), float64], Tensor[(1, 3, 15), float64]) */;
  %276 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %277 = %275.1;
  %278 = %276.0;
  (%271, %277, %var_6352, %278)
}

def @func_10509() -> (Tensor[(3, 3, 15), int64],) {
  %279 = @func_7952() /* ty=(Tensor[(3, 3, 15), int64],) */;
  %280 = %279.0;
  (%280,)
}

def @func_8913() -> Tensor[(1, 3, 15), float64] {
  %281 = @func_1266() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %281.0
}

def @func_3490() -> (Tensor[(6), uint32], Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(?, 3, 15), uint16], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), uint8], Tensor[(12, 15, 7), float32], Tensor[(6, 1), uint32]) {
  %282 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
  %283 = cast(meta[relay.Constant][8] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %284 = reshape(%283, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %285 = @func_1124(%284) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %286 = %285.0;
  %287 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
  %288 = cast(%287, dtype="uint16") /* ty=Tensor[(1, 3, 15), uint16] */;
  %289 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%286, dtype="uint16") /* ty=Tensor[(1, 3, 15), uint16] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %292 = %282.0;
  %293 = cast(%292, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %294 = reshape(%293, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %295 = @func_2784(%294) /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64], Tensor[(126), int16], Tensor[(6), uint32]) */;
  %296 = @func_2237() /* ty=(Tensor[(12, 15, 7), float32],) */;
  %297 = %296.0;
  %298 = cast(%297, dtype="float32") /* ty=Tensor[(12, 15, 7), float32] */;
  %299 = cast(meta[relay.Constant][8] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %300 = reshape(%299, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %301 = @func_1033(%300) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %302 = @func_3313() /* ty=Tensor[(1, 3, 15), float64] */;
  %303 = maximum(%290, %291) /* ty=Tensor[(?, 3, 15), uint16] */;
  %304 = @func_1062() /* ty=Tensor[(?, 3, 15), uint8] */;
  %305 = %295.0;
  %306 = sigmoid(%298) /* ty=Tensor[(12, 15, 7), float32] */;
  %307 = %301.2;
  (meta[relay.Constant][8] /* ty=Tensor[(6), uint32] */, %302, %292, %303, %304, %305, %306, %307)
}

def @func_9478() -> (Tensor[(405), float64],) {
  %308 = @func_8252() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), float64], Tensor[(9, 3, 15), float64], Tensor[(405), float64], Tensor[(1, 3, 15), float64], Tensor[(21, 6), int16]) */;
  %309 = %308.3;
  (%309,)
}

def @func_2213() -> Tensor[(?, 3, 15), uint8] {
  %310 = @func_1684() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */;
  %310.0
}

def @func_6584() -> Tensor[(6, 1), uint32] {
  %311 = @func_3357() /* ty=(Tensor[(6, 1), uint32], Tensor[(3, 3, 15), int64]) */;
  %311.0
}

def @func_8747() -> (Tensor[(6, 1), uint32],) {
  %312 = @func_7893() /* ty=(Tensor[(6, 1), uint32], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
  %313 = %312.0;
  (%313,)
}

def @func_9608() -> Tensor[(1, 3, 15), float64] {
  %314 = @func_6750() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %314.0
}

def @main(%var_12256: Tensor[(9, 3, 15), float32]) -> (Tensor[(1, 3, 15), float64], Tensor[(72), float32], Tensor[(405), float64], Tensor[(9, 3, 15), float32]) {
  %315 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %316 = @func_6195() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(72), float32]) */;
  %317 = cast(meta[relay.Constant][9] /* ty=Tensor[(405), float64] */, dtype="float64") /* ty=Tensor[(405), float64] */;
  %318 = reshape(%317, newshape=[135, 3]) /* ty=Tensor[(135, 3), float64] */;
  %319 = @func_8137(%318) /* ty=(Tensor[(6, 1), uint32], Tensor[(9, 3, 15), float64], Tensor[(135, 3), float64]) */;
  %320 = %319.1;
  %321 = cast(%320, dtype="float32") /* ty=Tensor[(9, 3, 15), float32] */;
  %322 = log10(%321) /* ty=Tensor[(9, 3, 15), float32] */;
  %323 = cast(%var_12256, dtype="float32") /* ty=Tensor[(9, 3, 15), float32] */;
  %324 = shape_of(%322, dtype="int32") /* ty=Tensor[(3), int32] */;
  %325 = cast(%322, dtype="float32") /* ty=Tensor[(9, 3, 15), float32] */;
  %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %327 = %315.0;
  %328 = %316.2;
  %329 = power(%325, %326) /* ty=Tensor[(9, 3, 15), float32] */;
  (%327, %328, meta[relay.Constant][9] /* ty=Tensor[(405), float64] */, %329)
}

def @func_9975(%var_9962: Tensor[(16, 3, 15), float64]) -> (Tensor[(6, 1), uint32], Tensor[(6, 1), uint32], Tensor[(16, 3, 15), bool]) {
  %330 = @func_3659() /* ty=(Tensor[(6, 1), uint32], Tensor[(?, 3, 15), int64]) */;
  %331 = @func_3526() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */;
  %332 = %331.1;
  %333 = cast(%332, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %334 = cast(%var_9962, dtype="bool") /* ty=Tensor[(16, 3, 15), bool] */;
  %335 = %330.0;
  %336 = @func_9062() /* ty=Tensor[(6, 1), uint32] */;
  %337 = less(%333, %334) /* ty=Tensor[(16, 3, 15), bool] */;
  (%335, %336, %337)
}

def @func_10494(%var_10488: Tensor[(7, 3, 9), float32]) -> (Tensor[(7, 3, 9), float32], Tensor[(1, 3, 15), float64]) {
  %338 = cast(-3.50367f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %339 = cast(%var_10488, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
  %340 = divide(%338, %339) /* ty=Tensor[(7, 3, 9), float32] */;
  %341 = @func_6576() /* ty=Tensor[(1, 3, 15), float64] */;
  (%340, %341)
}

def @func_11034() -> (Tensor[(1, 3, 15), float64],) {
  %342 = @func_10598() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) */;
  %343 = %342.0;
  (%343,)
}

def @func_6540(%var_6494: Tensor[(5, 3, 15), float64]) -> (Tensor[(?, 3, 15), uint8], Tensor[(6, 1), uint32], Tensor[(?, 126), uint64], Tensor[(1890), uint8], Tensor[(6, 1), uint32], Tensor[(5, 3, 15), float64]) {
  %344 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 1), uint32] */, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %345 = reshape(%344, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %346 = @func_2784(%345) /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64], Tensor[(126), int16], Tensor[(6), uint32]) */;
  %347 = cast(meta[relay.Constant][11] /* ty=Tensor[(1890), uint8] */, dtype="uint8") /* ty=Tensor[(1890), uint8] */;
  %348 = reshape(%347, newshape=[15, 126]) /* ty=Tensor[(15, 126), uint8] */;
  %349 = @func_1238(%348) /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(?, 126), uint64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(9, 7, 2), int16], Tensor[(15, 126), int16]) */;
  %350 = @func_3659() /* ty=(Tensor[(6, 1), uint32], Tensor[(?, 3, 15), int64]) */;
  %351 = @func_3169() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %352 = %351.0;
  %353 = cast(%352, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %354 = cast(%var_6494, dtype="bool") /* ty=Tensor[(5, 3, 15), bool] */;
  %355 = not_equal(%353, %354) /* ty=Tensor[(5, 3, 15), bool] */;
  %356 = cast(%355, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
  %357 = log10(%356) /* ty=Tensor[(5, 3, 15), float64] */;
  %358 = cast(%357, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
  %359 = %346.0;
  %360 = %349.3;
  %361 = %350.0;
  %362 = acos(%358) /* ty=Tensor[(5, 3, 15), float64] */;
  (%359, meta[relay.Constant][10] /* ty=Tensor[(6, 1), uint32] */, %360, meta[relay.Constant][11] /* ty=Tensor[(1890), uint8] */, %361, %362)
}

def @func_9694() -> (Tensor[(11, 10, 15), float64], Tensor[(6, 1), uint32]) {
  %363 = @func_9494() /* ty=(Tensor[(11, 10, 15), float32],) */;
  %364 = %363.0;
  %365 = cast(%364, dtype="float64") /* ty=Tensor[(11, 10, 15), float64] */;
  %366 = @func_7893() /* ty=(Tensor[(6, 1), uint32], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
  %367 = sigmoid(%365) /* ty=Tensor[(11, 10, 15), float64] */;
  %368 = %366.0;
  (%367, %368)
}

def @func_6809(%var_6795: Tensor[(6), uint32]) -> (Tensor[(6), uint32], Tensor[(6), uint32], Tensor[(12, 15, 7), uint8]) {
  %369 = cast(%var_6795, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %370 = reshape(%369, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %371 = @func_2784(%370) /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64], Tensor[(126), int16], Tensor[(6), uint32]) */;
  %372 = @func_2237() /* ty=(Tensor[(12, 15, 7), float32],) */;
  %373 = %372.0;
  %374 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 15, 7), float32] */, dtype="uint8") /* ty=Tensor[(12, 15, 7), uint8] */;
  %375 = shape_of(%373, dtype="int32") /* ty=Tensor[(3), int32] */;
  %376 = cast(%373, dtype="uint8") /* ty=Tensor[(12, 15, 7), uint8] */;
  %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %378 = %371.3;
  %379 = bitwise_xor(%376, %377) /* ty=Tensor[(12, 15, 7), uint8] */;
  (%378, %var_6795, %379)
}

def @func_7286(%var_7267: Tensor[(15, 13, 12), int64], %var_7268: Tensor[(15, 13, 12), int64]) -> (Tensor[(15, 13, 12), int64], Tensor[(6, 1), uint32]) {
  %380 = cast(%var_7268, dtype="int64") /* ty=Tensor[(15, 13, 12), int64] */;
  %381 = shape_of(%var_7267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%var_7267, dtype="int64") /* ty=Tensor[(15, 13, 12), int64] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %384 = @func_1307() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) */;
  %385 = add(%382, %383) /* ty=Tensor[(15, 13, 12), int64] */;
  %386 = %384.1;
  (%385, %386)
}

def @func_8515(%var_8477: Tensor[(16, 3, 15), float64]) -> Tensor[(16, 3, 15), bool] {
  %387 = @func_6750() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %388 = %387.0;
  %389 = cast(%388, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %390 = cast(%var_8477, dtype="bool") /* ty=Tensor[(16, 3, 15), bool] */;
  greater(%389, %390) /* ty=Tensor[(16, 3, 15), bool] */
}

def @func_8961() -> (Tensor[(450), float64], Tensor[(495, 1), float64], Tensor[(11, 3, 15), float32]) {
  %391 = @func_6909() /* ty=(Tensor[(6, 1), uint32], Tensor[(10, 3, 15), float32], Tensor[(450), float64], Tensor[(12, 15, 7), float32], Tensor[(12, 15, 7), float32], Tensor[(126), int16]) */;
  %392 = @func_3526() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */;
  %393 = %392.0;
  %394 = cast(meta[relay.Constant][13] /* ty=Tensor[(495, 1), float64] */, dtype="float64") /* ty=Tensor[(495, 1), float64] */;
  %395 = reshape(%394, newshape=[11, 3, 15]) /* ty=Tensor[(11, 3, 15), float64] */;
  %396 = @func_8192(%395) /* ty=(Tensor[(11, 3, 15), int32], Tensor[(11, 3, 15), bool]) */;
  %397 = %396.0;
  %398 = cast(%393, dtype="float32") /* ty=Tensor[(1, 3, 15), float32] */;
  %399 = cast(%397, dtype="float32") /* ty=Tensor[(11, 3, 15), float32] */;
  %400 = %391.2;
  %401 = power(%398, %399) /* ty=Tensor[(11, 3, 15), float32] */;
  (%400, meta[relay.Constant][13] /* ty=Tensor[(495, 1), float64] */, %401)
}

def @func_5000() -> (Tensor[(?, 3, 15), uint8],) {
  %402 = @func_1062() /* ty=Tensor[(?, 3, 15), uint8] */;
  (%402,)
}

def @func_12134(%var_12057: Tensor[(1650), float32], %var_12068: Tensor[(90, 3), float64], %var_12095: Tensor[(126), int16]) -> (Tensor[(?, 3, 15), uint8], Tensor[(720), float64], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), uint8], Tensor[(1, 3, 15), float64], Tensor[(405), float64], Tensor[(1, 3, 15), float64], Tensor[(90, 3), float64], Tensor[(6, 1650), int8], Tensor[(11, 10, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16], Tensor[(9, 3, 15), float64], Tensor[(3, 3, 15), int64], Tensor[(?, 3, 15), uint8], Tensor[(3, 3, 15), int64], Tensor[(6, 1650), int8]) {
  %403 = @func_1684() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */;
  %404 = cast(meta[relay.Constant][14] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %405 = reshape(%404, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), float64] */;
  %406 = @func_9975(%405) /* ty=(Tensor[(6, 1), uint32], Tensor[(6, 1), uint32], Tensor[(16, 3, 15), bool]) */;
  %407 = %406.0;
  %408 = cast(%407, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %409 = reshape(%408, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %410 = @func_6809(%409) /* ty=(Tensor[(6), uint32], Tensor[(6), uint32], Tensor[(12, 15, 7), uint8]) */;
  %411 = @func_8382() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) */;
  %412 = cast(%var_12068, dtype="float64") /* ty=Tensor[(90, 3), float64] */;
  %413 = reshape(%412, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), float64] */;
  %414 = @func_2359(%413) /* ty=(Tensor[(6, 3, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(1, 3, 15), float64], Tensor[(6, 3, 15), uint64], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), int64]) */;
  %415 = cast(%var_12057, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %416 = reshape(%415, newshape=[110, 15]) /* ty=Tensor[(110, 15), float32] */;
  %417 = @func_4733(%416) /* ty=(Tensor[(6, 1), uint32], Tensor[(110, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %418 = %417.0;
  %419 = cast(%var_12057, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %420 = cast(%418, dtype="int8") /* ty=Tensor[(6, 1), int8] */;
  %421 = cast(%418, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %422 = cast(%418, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %423 = reshape(%421, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
  %424 = reshape(%422, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
  %425 = @func_838(%423, %424) /* ty=(Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) */;
  %426 = @func_11145() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %427 = cast(%var_12095, dtype="int16") /* ty=Tensor[(126), int16] */;
  %428 = cast(%var_12095, dtype="int16") /* ty=Tensor[(126), int16] */;
  %429 = reshape(%427, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %430 = reshape(%428, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %431 = @func_273(%429, %430) /* ty=(Tensor[(9, 7, 2), int16],) */;
  %432 = cast(meta[relay.Constant][15] /* ty=Tensor[(405), float64] */, dtype="float64") /* ty=Tensor[(405), float64] */;
  %433 = reshape(%432, newshape=[9, 3, 15]) /* ty=Tensor[(9, 3, 15), float64] */;
  %434 = @func_6294(%433) /* ty=Tensor[(9, 3, 15), float64] */;
  %435 = cast(%434, dtype="float64") /* ty=Tensor[(9, 3, 15), float64] */;
  %436 = @func_10509() /* ty=(Tensor[(3, 3, 15), int64],) */;
  %437 = @func_10772() /* ty=(Tensor[(3, 3, 15), int64],) */;
  %438 = cast(%var_12057, dtype="int8") /* ty=Tensor[(1650), int8] */;
  %439 = cast(%407, dtype="int8") /* ty=Tensor[(6, 1), int8] */;
  %440 = %403.0;
  %441 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %442 = %410.2;
  %443 = %411.0;
  %444 = %414.3;
  %445 = subtract(%419, %420) /* ty=Tensor[(6, 1650), int8] */;
  %446 = %425.1;
  %447 = %426.0;
  %448 = %431.0;
  %449 = asin(%435) /* ty=Tensor[(9, 3, 15), float64] */;
  %450 = %436.0;
  %451 = @func_2213() /* ty=Tensor[(?, 3, 15), uint8] */;
  %452 = %437.0;
  %453 = bitwise_or(%438, %439) /* ty=Tensor[(6, 1650), int8] */;
  (%440, meta[relay.Constant][14] /* ty=Tensor[(720), float64] */, %441, %442, %443, meta[relay.Constant][15] /* ty=Tensor[(405), float64] */, %444, %var_12068, %445, %446, %447, %448, %var_12095, %449, %450, %451, %452, %453)
}

def @func_7123() -> (Tensor[(6, 1), uint32],) {
  %454 = @func_6584() /* ty=Tensor[(6, 1), uint32] */;
  (%454,)
}

def @func_1266() -> (Tensor[(1, 3, 15), float64],) {
  %455 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %456 = %455.0;
  (%456,)
}

def @func_9239() -> (Tensor[(12, 15, 7), float32],) {
  %457 = @func_6157() /* ty=(Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) */;
  %458 = %457.0;
  (%458,)
}

def @func_9268() -> (Tensor[(1, 126), int16],) {
  %459 = @func_7157() /* ty=(Tensor[(1, 126), int16],) */;
  %460 = %459.0;
  (%460,)
}

def @func_11043() -> (Tensor[(1, 3, 15), float64],) {
  %461 = @func_5928() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %462 = %461.0;
  (%462,)
}

def @func_9494() -> (Tensor[(11, 10, 15), float32],) {
  %463 = @func_8863() /* ty=(Tensor[(11, 10, 15), float32],) */;
  %464 = %463.0;
  (%464,)
}

def @func_2706() -> (Tensor[(1, 3, 15), float64],) {
  %465 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
  (%465,)
}

def @func_7138(%var_7128: Tensor[(8, 3, 15), float64]) -> (Tensor[(8, 3, 15), int16], Tensor[(1, 3, 15), float64]) {
  %466 = @func_6750() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %467 = %466.0;
  %468 = cast(%467, dtype="int16") /* ty=Tensor[(1, 3, 15), int16] */;
  %469 = cast(%var_7128, dtype="int16") /* ty=Tensor[(8, 3, 15), int16] */;
  %470 = @func_4222() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64]) */;
  %471 = left_shift(%468, %469) /* ty=Tensor[(8, 3, 15), int16] */;
  %472 = %470.0;
  (%471, %472)
}

def @func_6673() -> Tensor[(3, 3, 15), int64] {
  %473 = @func_4930() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(3, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %473.1
}

def @func_7893() -> (Tensor[(6, 1), uint32], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) {
  %474 = @func_3490() /* ty=(Tensor[(6), uint32], Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(?, 3, 15), uint16], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), uint8], Tensor[(12, 15, 7), float32], Tensor[(6, 1), uint32]) */;
  %475 = %474.7;
  %476 = @func_2454() /* ty=Tensor[(12, 15, 7), float32] */;
  %477 = @func_2213() /* ty=Tensor[(?, 3, 15), uint8] */;
  (%475, %476, %477)
}

def @func_3659() -> (Tensor[(6, 1), uint32], Tensor[(?, 3, 15), int64]) {
  %478 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
  %479 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
  %480 = %478.0;
  %481 = %479.1;
  (%480, %481)
}

def @func_7157() -> (Tensor[(1, 126), int16],) {
  %482 = @func_1684() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */;
  %483 = %482.2;
  (%483,)
}

def @func_1770() -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) {
  %484 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %485 = cast(%484, dtype="float64") /* ty=Tensor[(1, 3, 15), float64] */;
  %486 = sigmoid(%485) /* ty=Tensor[(1, 3, 15), float64] */;
  %487 = cast(%486, dtype="float64") /* ty=Tensor[(1, 3, 15), float64] */;
  %488 = cast(meta[relay.Constant][16] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %489 = reshape(%488, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %490 = @func_1033(%489) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %491 = erf(%487) /* ty=Tensor[(1, 3, 15), float64] */;
  %492 = %490.3;
  (%491, %492, meta[relay.Constant][16] /* ty=Tensor[(6), uint32] */)
}

def @func_8821() -> (Tensor[(1, 3, 15), float64],) {
  %493 = @func_5928() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %494 = %493.0;
  (%494,)
}

def @func_10964() -> (Tensor[(1, 3, 15), float64],) {
  %495 = @func_6157() /* ty=(Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) */;
  %496 = %495.1;
  (%496,)
}

def @func_6744() -> (Tensor[(6, 1), uint32], Tensor[(270), float64], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) {
  %497 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
  %498 = cast(meta[relay.Constant][17] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %499 = reshape(%498, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %500 = @func_3798(%499) /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(270), float64]) */;
  %501 = %497.0;
  %502 = %500.2;
  %503 = @func_2454() /* ty=Tensor[(12, 15, 7), float32] */;
  %504 = @func_2213() /* ty=Tensor[(?, 3, 15), uint8] */;
  (%501, %502, meta[relay.Constant][17] /* ty=Tensor[(270), float64] */, %503, %504)
}

def @func_7460() -> Tensor[(1, 3, 15), float64] {
  %505 = @func_4660() /* ty=(Tensor[(3, 4, 6), int16], Tensor[(1, 3, 15), float64]) */;
  %505.1
}

def @func_10350() -> (Tensor[(?, 3, 15), uint8],) {
  %506 = @func_7893() /* ty=(Tensor[(6, 1), uint32], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
  %507 = %506.2;
  (%507,)
}

def @func_9574(%var_9547: Tensor[(11, 10, 15), float32]) -> (Tensor[(11, 10, 15), int16], Tensor[(495, 1), float64]) {
  %508 = @func_9494() /* ty=(Tensor[(11, 10, 15), float32],) */;
  %509 = %508.0;
  %510 = cast(%var_9547, dtype="int16") /* ty=Tensor[(11, 10, 15), int16] */;
  %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%509, dtype="int16") /* ty=Tensor[(11, 10, 15), int16] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %514 = @func_8961() /* ty=(Tensor[(450), float64], Tensor[(495, 1), float64], Tensor[(11, 3, 15), float32]) */;
  %515 = bitwise_and(%512, %513) /* ty=Tensor[(11, 10, 15), int16] */;
  %516 = %514.1;
  (%515, %516)
}

def @func_3113(%var_3076: Tensor[(3, 42), int16]) -> (Tensor[(9, 7, 2), int16], Tensor[(3, 42), int16], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8], Tensor[(2, ?, 3), bool]) {
  %517 = cast(%var_3076, dtype="int16") /* ty=Tensor[(3, 42), int16] */;
  %518 = cast(%var_3076, dtype="int16") /* ty=Tensor[(3, 42), int16] */;
  %519 = reshape(%517, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %520 = reshape(%518, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %521 = @func_273(%519, %520) /* ty=(Tensor[(9, 7, 2), int16],) */;
  %522 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %523 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
  %524 = %523.0;
  %525 = cast(%524, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %526 = cast(%524, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %527 = reshape(%525, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
  %528 = reshape(%526, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
  %529 = @func_838(%527, %528) /* ty=(Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) */;
  %530 = %529.3;
  %531 = cast(%530, dtype="float32") /* ty=Tensor[(2, 1, 3), float32] */;
  %532 = asin(%531) /* ty=Tensor[(2, 1, 3), float32] */;
  %533 = cast(%524, dtype="bool") /* ty=Tensor[(6, 1), bool] */;
  %534 = shape_of(%532, dtype="int32") /* ty=Tensor[(3), int32] */;
  %535 = cast(%532, dtype="bool") /* ty=Tensor[(2, 1, 3), bool] */;
  %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %537 = %521.0;
  %538 = %522.0;
  %539 = @func_1062() /* ty=Tensor[(?, 3, 15), uint8] */;
  %540 = logical_or(%535, %536) /* ty=Tensor[(2, ?, 3), bool] */;
  (%537, %var_3076, %538, %539, %540)
}

def @func_4733(%var_4706: Tensor[(110, 15), float32]) -> (Tensor[(6, 1), uint32], Tensor[(110, 15), int64], Tensor[(1, 3, 15), float64]) {
  %541 = @func_3570() /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) */;
  %542 = cast(%var_4706, dtype="float32") /* ty=Tensor[(110, 15), float32] */;
  %543 = reshape(%542, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
  %544 = @func_318(%543) /* ty=Tensor[(11, 10, 15), float32] */;
  %545 = cast(%544, dtype="int64") /* ty=Tensor[(11, 10, 15), int64] */;
  %546 = shape_of(%var_4706, dtype="int32") /* ty=Tensor[(2), int32] */;
  %547 = cast(%var_4706, dtype="int64") /* ty=Tensor[(110, 15), int64] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %549 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
  %550 = %541.0;
  %551 = bitwise_or(%547, %548) /* ty=Tensor[(110, 15), int64] */;
  %552 = %549.0;
  (%550, %551, %552)
}

def @func_6157() -> (Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) {
  %553 = @func_1770() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %554 = @func_2454() /* ty=Tensor[(12, 15, 7), float32] */;
  %555 = %553.0;
  (%554, %555)
}

def @func_8863() -> (Tensor[(11, 10, 15), float32],) {
  %556 = @func_5604() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32]) */;
  %557 = %556.1;
  (%557,)
}

def @func_7669() -> (Tensor[(1, 3, 15), float64], Tensor[(1650), float32]) {
  %558 = @func_3947() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %559 = @func_5798() /* ty=(Tensor[(1650), float32],) */;
  %560 = %558.0;
  %561 = %559.0;
  (%560, %561)
}

def @func_9062() -> Tensor[(6, 1), uint32] {
  %562 = @func_7123() /* ty=(Tensor[(6, 1), uint32],) */;
  %562.0
}

def @func_1684() -> (Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) {
  %563 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 126), int16] */, dtype="int16") /* ty=Tensor[(1, 126), int16] */;
  %564 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 126), int16] */, dtype="int16") /* ty=Tensor[(1, 126), int16] */;
  %565 = reshape(%563, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %566 = reshape(%564, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %567 = @func_273(%565, %566) /* ty=(Tensor[(9, 7, 2), int16],) */;
  %568 = %567.0;
  %569 = cast(%568, dtype="int16") /* ty=Tensor[(9, 7, 2), int16] */;
  %570 = cast(%568, dtype="int16") /* ty=Tensor[(9, 7, 2), int16] */;
  %571 = reshape(%569, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %572 = reshape(%570, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %573 = @func_273(%571, %572) /* ty=(Tensor[(9, 7, 2), int16],) */;
  %574 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %575 = @func_1062() /* ty=Tensor[(?, 3, 15), uint8] */;
  %576 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
  %577 = %573.0;
  %578 = %574.0;
  (%575, %568, meta[relay.Constant][18] /* ty=Tensor[(1, 126), int16] */, %576, %577, %578)
}

def @func_3247(%var_3242: Tensor[(4, 6, 11), float32]) -> Tensor[(4, 6, 11), bool] {
  %579 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 6, 11), float32] */, dtype="bool") /* ty=Tensor[(4, 6, 11), bool] */;
  %580 = shape_of(%var_3242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %581 = cast(%var_3242, dtype="bool") /* ty=Tensor[(4, 6, 11), bool] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%581, %582) /* ty=Tensor[(4, 6, 11), bool] */
}

def @func_985() -> Tensor[(1, 3, 15), float64] {
  %583 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %583.0
}

def @func_6417() -> Tensor[(1, 3, 15), float64] {
  @func_3720() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_11699(%var_11697: Tensor[(1650), float32]) -> (Tensor[(?, 3, 15), uint8], Tensor[(11, 10, 15), float32], Tensor[(1650), float32]) {
  %584 = @func_7075() /* ty=(Tensor[(?, 3, 15), uint8],) */;
  %585 = cast(%var_11697, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %586 = reshape(%585, newshape=[1, 1650]) /* ty=Tensor[(1, 1650), float32] */;
  %587 = @func_4011(%586) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64], Tensor[(6, 1), uint32], Tensor[(11, 10, 15), float32], Tensor[(1, 1650), float32], Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64]) */;
  %588 = %584.0;
  %589 = %587.3;
  (%588, %589, %var_11697)
}

def @func_7952() -> (Tensor[(3, 3, 15), int64],) {
  %590 = @func_4930() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(3, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %591 = %590.1;
  (%591,)
}

def @func_9177(%var_9132: Tensor[(6), uint32]) -> (Tensor[(12, 15, 7), uint8], Tensor[(6), uint32], Tensor[(11, 10, 15), bool], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) {
  %592 = cast(%var_9132, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %593 = reshape(%592, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %594 = @func_6809(%593) /* ty=(Tensor[(6), uint32], Tensor[(6), uint32], Tensor[(12, 15, 7), uint8]) */;
  %595 = @func_8863() /* ty=(Tensor[(11, 10, 15), float32],) */;
  %596 = %595.0;
  %597 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 10, 15), float32] */, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
  %598 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%596, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %601 = @func_1770() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %602 = %594.2;
  %603 = logical_and(%599, %600) /* ty=Tensor[(11, 10, 15), bool] */;
  %604 = @func_7446() /* ty=Tensor[(9, 7, 2), int16] */;
  %605 = %601.0;
  (%602, %var_9132, %603, %604, %605)
}

def @func_9904(%var_9871: Tensor[(8, 9, 6), bool]) -> (Tensor[(8, 9, 6), bool], Tensor[(12, 15, 7), bool], Tensor[(1260), float32], Tensor[(6, 1), uint32], Tensor[(8, 9, 6), float64]) {
  %606 = cast(%var_9871, dtype="bool") /* ty=Tensor[(8, 9, 6), bool] */;
  %607 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(8, 9, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 9, 6), bool] */, dtype="bool") /* ty=Tensor[(8, 9, 6), bool] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %610 = cast(meta[relay.Constant][22] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %611 = reshape(%610, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float32] */;
  %612 = @func_1307() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) */;
  %613 = cast(%var_9871, dtype="float64") /* ty=Tensor[(8, 9, 6), float64] */;
  %614 = logical_and(%608, %609) /* ty=Tensor[(8, 9, 6), bool] */;
  %615 = @func_5331(%611) /* ty=Tensor[(12, 15, 7), bool] */;
  %616 = %612.1;
  %617 = log(%613) /* ty=Tensor[(8, 9, 6), float64] */;
  (%614, %615, meta[relay.Constant][22] /* ty=Tensor[(1260), float32] */, %616, %617)
}

def @func_10248() -> Tensor[(1, 3, 15), float64] {
  %618 = @func_8327() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %618.0
}

def @func_11074() -> Tensor[(1, 3, 15), float64] {
  %619 = @func_4182() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */;
  %619.1
}

def @func_12175() -> (Tensor[(?, 3, 15), uint8],) {
  %620 = @func_9317() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) */;
  %621 = %620.2;
  %622 = @func_6639() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */;
  %623 = %622.0;
  %624 = cast(%623, dtype="uint8") /* ty=Tensor[(1, 3, 15), uint8] */;
  %625 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(%621, dtype="uint8") /* ty=Tensor[(1, 3, 15), uint8] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %628 = bitwise_or(%626, %627) /* ty=Tensor[(?, 3, 15), uint8] */;
  (%628,)
}

def @func_8137(%var_8134: Tensor[(135, 3), float64]) -> (Tensor[(6, 1), uint32], Tensor[(9, 3, 15), float64], Tensor[(135, 3), float64]) {
  %629 = @func_6744() /* ty=(Tensor[(6, 1), uint32], Tensor[(270), float64], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
  %630 = cast(%var_8134, dtype="float64") /* ty=Tensor[(135, 3), float64] */;
  %631 = reshape(%630, newshape=[9, 3, 15]) /* ty=Tensor[(9, 3, 15), float64] */;
  %632 = %629.0;
  %633 = @func_6294(%631) /* ty=Tensor[(9, 3, 15), float64] */;
  (%632, %633, %var_8134)
}

def @func_7537(%var_7525: Tensor[(1650), float32]) -> (Tensor[(1650), uint16],) {
  %634 = @func_7325() /* ty=(Tensor[(1650), float32],) */;
  %635 = %634.0;
  %636 = cast(%var_7525, dtype="uint16") /* ty=Tensor[(1650), uint16] */;
  %637 = shape_of(%635, dtype="int32") /* ty=Tensor[(1), int32] */;
  %638 = cast(%635, dtype="uint16") /* ty=Tensor[(1650), uint16] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %640 = bitwise_or(%638, %639) /* ty=Tensor[(1650), uint16] */;
  (%640,)
}

def @func_1086() -> (Tensor[(1, 3, 15), float64],) {
  %641 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %642 = %641.0;
  (%642,)
}

def @func_1502(%var_1489: Tensor[(126), int16]) -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(6, 1), uint32], Tensor[(9, 7, 2), uint32]) {
  %643 = cast(meta[relay.Constant][23] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %644 = reshape(%643, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %645 = @func_1124(%644) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %646 = @func_1307() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) */;
  %647 = cast(%var_1489, dtype="int16") /* ty=Tensor[(126), int16] */;
  %648 = cast(%var_1489, dtype="int16") /* ty=Tensor[(126), int16] */;
  %649 = reshape(%647, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %650 = reshape(%648, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %651 = @func_273(%649, %650) /* ty=(Tensor[(9, 7, 2), int16],) */;
  %652 = %651.0;
  %653 = cast(%var_1489, dtype="uint32") /* ty=Tensor[(126), uint32] */;
  %654 = shape_of(%652, dtype="int32") /* ty=Tensor[(3), int32] */;
  %655 = cast(%652, dtype="uint32") /* ty=Tensor[(9, 7, 2), uint32] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %657 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
  %658 = %645.2;
  %659 = %646.1;
  %660 = add(%655, %656) /* ty=Tensor[(9, 7, 2), uint32] */;
  (%657, %658, meta[relay.Constant][23] /* ty=Tensor[(6), uint32] */, %659, %660)
}

def @func_11122() -> (Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8], Tensor[(110, 15), float32]) {
  %661 = @func_10964() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %662 = cast(meta[relay.Constant][24] /* ty=Tensor[(110, 15), float32] */, dtype="float32") /* ty=Tensor[(110, 15), float32] */;
  %663 = reshape(%662, newshape=[1, 1650]) /* ty=Tensor[(1, 1650), float32] */;
  %664 = @func_4011(%663) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64], Tensor[(6, 1), uint32], Tensor[(11, 10, 15), float32], Tensor[(1, 1650), float32], Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64]) */;
  %665 = %661.0;
  %666 = %664.5;
  (%665, %666, meta[relay.Constant][24] /* ty=Tensor[(110, 15), float32] */)
}

def @func_11014() -> (Tensor[(1, 3, 15), float64],) {
  %667 = @func_2706() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %668 = %667.0;
  (%668,)
}

def @func_3798(%var_3785: Tensor[(270), float64]) -> (Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(270), float64]) {
  %669 = @func_3570() /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) */;
  %670 = cast(%var_3785, dtype="float64") /* ty=Tensor[(270), float64] */;
  %671 = reshape(%670, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), float64] */;
  %672 = @func_2359(%671) /* ty=(Tensor[(6, 3, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(1, 3, 15), float64], Tensor[(6, 3, 15), uint64], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), int64]) */;
  %673 = %669.0;
  %674 = %672.3;
  (%673, %674, %var_3785)
}

def @func_3169() -> (Tensor[(1, 3, 15), float64],) {
  %675 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  (%675,)
}

def @func_7446() -> Tensor[(9, 7, 2), int16] {
  %676 = @func_1684() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */;
  %676.1
}

def @func_2579() -> (Tensor[(6, 1), uint32],) {
  %677 = @func_1307() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) */;
  %678 = %677.1;
  (%678,)
}

def @func_4086(%var_4029: Tensor[(8, 3, 15), float64], %var_4050: Tensor[(270), float64]) -> (Tensor[(8, 3, 15), bool], Tensor[(8, 3, 15), int64], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(270), float64], Tensor[(12, 15, 7), float64]) {
  %679 = @func_3136() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %680 = %679.0;
  %681 = cast(%680, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %682 = cast(%var_4029, dtype="bool") /* ty=Tensor[(8, 3, 15), bool] */;
  %683 = cast(%var_4029, dtype="int64") /* ty=Tensor[(8, 3, 15), int64] */;
  %684 = cast(%680, dtype="int64") /* ty=Tensor[(1, 3, 15), int64] */;
  %685 = cast(%var_4050, dtype="float64") /* ty=Tensor[(270), float64] */;
  %686 = reshape(%685, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), float64] */;
  %687 = @func_2359(%686) /* ty=(Tensor[(6, 3, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(1, 3, 15), float64], Tensor[(6, 3, 15), uint64], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), int64]) */;
  %688 = @func_2237() /* ty=(Tensor[(12, 15, 7), float32],) */;
  %689 = %688.0;
  %690 = cast(%689, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
  %691 = log(%690) /* ty=Tensor[(12, 15, 7), float64] */;
  %692 = cast(%691, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
  %693 = logical_or(%681, %682) /* ty=Tensor[(8, 3, 15), bool] */;
  %694 = bitwise_and(%683, %684) /* ty=Tensor[(8, 3, 15), int64] */;
  %695 = @func_2730() /* ty=Tensor[(1, 3, 15), float64] */;
  %696 = %687.2;
  %697 = tan(%692) /* ty=Tensor[(12, 15, 7), float64] */;
  (%693, %694, %695, %696, %var_4050, %697)
}

def @func_1582() -> (Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) {
  %698 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %699 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %700 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
  %701 = cast(%700, dtype="int64") /* ty=Tensor[(1, 3, 15), int64] */;
  %702 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(%699, dtype="int64") /* ty=Tensor[(1, 3, 15), int64] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %705 = %698.0;
  %706 = right_shift(%703, %704) /* ty=Tensor[(?, 3, 15), int64] */;
  (%705, %706)
}

def @func_10223(%var_10184: Tensor[(13, 8, 6), int64], %var_10201: Tensor[(1260), float32]) -> (Tensor[(13, 8, 6), int64], Tensor[(1260), float32], Tensor[(6), float64], Tensor[(2, ?, 3), float64]) {
  %707 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 8, 6), int64] */, dtype="int64") /* ty=Tensor[(13, 8, 6), int64] */;
  %708 = shape_of(%var_10184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%var_10184, dtype="int64") /* ty=Tensor[(13, 8, 6), int64] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %711 = cast(%var_10201, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %712 = cast(meta[relay.Constant][26] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %713 = reshape(%711, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %714 = reshape(%712, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), float64] */;
  %715 = @func_6100(%713, %714) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), bool], Tensor[(1260), float32], Tensor[(2, ?, 3), uint8], Tensor[(6), uint32], Tensor[(2, 1, 3), float64]) */;
  %716 = %715.3;
  %717 = cast(%716, dtype="float64") /* ty=Tensor[(2, ?, 3), float64] */;
  %718 = right_shift(%709, %710) /* ty=Tensor[(13, 8, 6), int64] */;
  %719 = log2(%717) /* ty=Tensor[(2, ?, 3), float64] */;
  (%718, %var_10201, meta[relay.Constant][26] /* ty=Tensor[(6), float64] */, %719)
}

def @func_8801() -> Tensor[(1, 3, 15), float64] {
  @func_8636() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_4930() -> (Tensor[(1, 3, 15), float64], Tensor[(3, 3, 15), int64], Tensor[(1, 3, 15), float64]) {
  %720 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
  %721 = @func_3357() /* ty=(Tensor[(6, 1), uint32], Tensor[(3, 3, 15), int64]) */;
  %722 = %720.0;
  %723 = %721.1;
  %724 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
  (%722, %723, %724)
}

def @func_2502() -> (Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) {
  %725 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
  %726 = %725.1;
  %727 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
  (%726, %727)
}

def @func_11578() -> Tensor[(1, 3, 15), float64] {
  @func_6576() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_10434() -> (Tensor[(450), float64],) {
  %728 = @func_6909() /* ty=(Tensor[(6, 1), uint32], Tensor[(10, 3, 15), float32], Tensor[(450), float64], Tensor[(12, 15, 7), float32], Tensor[(12, 15, 7), float32], Tensor[(126), int16]) */;
  %729 = %728.2;
  (%729,)
}

def @func_2397(%var_2373: Tensor[(2, 1, 14), float32], %var_2384: Tensor[(6, 1), uint32]) -> (Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 14), float64], Tensor[(1, 3, 15), float64]) {
  %730 = cast(%var_2384, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %731 = reshape(%730, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %732 = @func_1033(%731) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %733 = @func_1266() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %734 = cast(%var_2373, dtype="float32") /* ty=Tensor[(2, 1, 14), float32] */;
  %735 = atanh(%734) /* ty=Tensor[(2, 1, 14), float32] */;
  %736 = cast(%735, dtype="float64") /* ty=Tensor[(2, 1, 14), float64] */;
  %737 = @func_1684() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */;
  %738 = %732.1;
  %739 = %733.0;
  %740 = cosh(%736) /* ty=Tensor[(2, 1, 14), float64] */;
  %741 = %737.3;
  (%738, %var_2384, %739, %740, %741)
}

def @func_3570() -> (Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) {
  %742 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
  %743 = %742.0;
  %744 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
  (%743, %744)
}

def @func_3526() -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) {
  %745 = @func_3169() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %746 = %745.0;
  %747 = @func_2730() /* ty=Tensor[(1, 3, 15), float64] */;
  (%746, %747)
}

def @func_3890(%var_3862: Tensor[(1, 126), int16]) -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(3, 42), int16]) {
  %748 = @func_2502() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %749 = cast(%var_3862, dtype="int16") /* ty=Tensor[(1, 126), int16] */;
  %750 = cast(%var_3862, dtype="int16") /* ty=Tensor[(1, 126), int16] */;
  %751 = reshape(%749, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %752 = reshape(%750, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %753 = @func_273(%751, %752) /* ty=(Tensor[(9, 7, 2), int16],) */;
  %754 = cast(%var_3862, dtype="int16") /* ty=Tensor[(1, 126), int16] */;
  %755 = reshape(%754, newshape=[3, 42]) /* ty=Tensor[(3, 42), int16] */;
  %756 = @func_3113(%755) /* ty=(Tensor[(9, 7, 2), int16], Tensor[(3, 42), int16], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8], Tensor[(2, ?, 3), bool]) */;
  %757 = @func_3720() /* ty=Tensor[(1, 3, 15), float64] */;
  %758 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %759 = %748.0;
  %760 = %753.0;
  %761 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %762 = %756.1;
  (%757, %758, %759, %760, %var_3862, %761, %762)
}

def @func_11487() -> (Tensor[(?, 3, 15), uint16], Tensor[(6, 1), uint32]) {
  %763 = @func_3490() /* ty=(Tensor[(6), uint32], Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(?, 3, 15), uint16], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), uint8], Tensor[(12, 15, 7), float32], Tensor[(6, 1), uint32]) */;
  %764 = @func_8747() /* ty=(Tensor[(6, 1), uint32],) */;
  %765 = %763.3;
  %766 = %764.0;
  (%765, %766)
}

def @func_7325() -> (Tensor[(1650), float32],) {
  %767 = @func_5798() /* ty=(Tensor[(1650), float32],) */;
  %768 = %767.0;
  (%768,)
}

def @func_3136() -> (Tensor[(1, 3, 15), float64],) {
  %769 = @func_2502() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %770 = %769.1;
  (%770,)
}

def @func_6693() -> (Tensor[(1, 3, 15), float64],) {
  %771 = @func_3313() /* ty=Tensor[(1, 3, 15), float64] */;
  (%771,)
}

def @func_10559() -> (Tensor[(11, 10, 15), bool],) {
  %772 = @func_8863() /* ty=(Tensor[(11, 10, 15), float32],) */;
  %773 = %772.0;
  %774 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 10, 15), float32] */, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
  %775 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%773, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %778 = logical_or(%776, %777) /* ty=Tensor[(11, 10, 15), bool] */;
  (%778,)
}

def @func_9808() -> Tensor[(1, 3, 15), float64] {
  %779 = @func_5027() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %779.0
}

def @func_1607(%var_1602: Tensor[(15, 11, 3), uint32]) -> Tensor[(15, 11, 3), uint32] {
  %780 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 11, 3), uint32] */, dtype="uint32") /* ty=Tensor[(15, 11, 3), uint32] */;
  %781 = shape_of(%var_1602, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(%var_1602, dtype="uint32") /* ty=Tensor[(15, 11, 3), uint32] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%782, %783) /* ty=Tensor[(15, 11, 3), uint32] */
}

def @func_10299(%var_10281: Tensor[(11, 16, 10), int32], %var_10282: Tensor[(11, 16, 10), int32]) -> (Tensor[(11, 16, 10), int32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) {
  %784 = cast(%var_10282, dtype="int32") /* ty=Tensor[(11, 16, 10), int32] */;
  %785 = shape_of(%var_10281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %786 = cast(%var_10281, dtype="int32") /* ty=Tensor[(11, 16, 10), int32] */;
  %787 = dyn.reshape(%784, %785, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %788 = cast(meta[relay.Constant][29] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %789 = reshape(%788, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %790 = @func_8409(%789) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %791 = logical_xor(%786, %787) /* ty=Tensor[(11, 16, 10), int32] */;
  %792 = %790.0;
  (%791, %792, meta[relay.Constant][29] /* ty=Tensor[(6), uint32] */)
}

def @func_6639() -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) {
  %793 = @func_2121() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %794 = @func_6576() /* ty=Tensor[(1, 3, 15), float64] */;
  %795 = %793.0;
  (%794, %795)
}

def @func_8252() -> (Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), float64], Tensor[(9, 3, 15), float64], Tensor[(405), float64], Tensor[(1, 3, 15), float64], Tensor[(21, 6), int16]) {
  %796 = @func_6693() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %797 = @func_2121() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %798 = %797.0;
  %799 = @func_7460() /* ty=Tensor[(1, 3, 15), float64] */;
  %800 = cast(%799, dtype="float64") /* ty=Tensor[(1, 3, 15), float64] */;
  %801 = shape_of(%798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%798, dtype="float64") /* ty=Tensor[(1, 3, 15), float64] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %804 = cast(meta[relay.Constant][30] /* ty=Tensor[(405), float64] */, dtype="float64") /* ty=Tensor[(405), float64] */;
  %805 = reshape(%804, newshape=[135, 3]) /* ty=Tensor[(135, 3), float64] */;
  %806 = @func_8137(%805) /* ty=(Tensor[(6, 1), uint32], Tensor[(9, 3, 15), float64], Tensor[(135, 3), float64]) */;
  %807 = cast(meta[relay.Constant][31] /* ty=Tensor[(21, 6), int16] */, dtype="int16") /* ty=Tensor[(21, 6), int16] */;
  %808 = reshape(%807, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %809 = @func_6245(%808) /* ty=(Tensor[(9, 7, 2), float64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) */;
  %810 = %796.0;
  %811 = mod(%802, %803) /* ty=Tensor[(?, 3, 15), float64] */;
  %812 = %806.1;
  %813 = %809.2;
  (%810, %811, %812, meta[relay.Constant][30] /* ty=Tensor[(405), float64] */, %813, meta[relay.Constant][31] /* ty=Tensor[(21, 6), int16] */)
}

def @func_10532() -> (Tensor[(1, 3, 15), float64],) {
  %814 = @func_9808() /* ty=Tensor[(1, 3, 15), float64] */;
  (%814,)
}

def @func_8683(%var_8668: Tensor[(1, 15, 1), float32], %var_8669: Tensor[(1, 15, 5), float32]) -> (Tensor[(1, 15, 5), float32], Tensor[(1650), float32], Tensor[(1, 3, 15), float64], Tensor[(9, 3, 15), float64], Tensor[(9, 45), float64]) {
  %815 = cast(%var_8668, dtype="float32") /* ty=Tensor[(1, 15, 1), float32] */;
  %816 = cast(%var_8669, dtype="float32") /* ty=Tensor[(1, 15, 5), float32] */;
  %817 = @func_5798() /* ty=(Tensor[(1650), float32],) */;
  %818 = @func_2502() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %819 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 45), float64] */, dtype="float64") /* ty=Tensor[(9, 45), float64] */;
  %820 = reshape(%819, newshape=[9, 3, 15]) /* ty=Tensor[(9, 3, 15), float64] */;
  %821 = floor_mod(%815, %816) /* ty=Tensor[(1, 15, 5), float32] */;
  %822 = %817.0;
  %823 = %818.1;
  %824 = @func_6294(%820) /* ty=Tensor[(9, 3, 15), float64] */;
  (%821, %822, %823, %824, meta[relay.Constant][32] /* ty=Tensor[(9, 45), float64] */)
}

def @func_4608(%var_4591: Tensor[(6, 10, 5), float64]) -> (Tensor[(6, 10, 5), float64],) {
  %825 = cast(%var_4591, dtype="float64") /* ty=Tensor[(6, 10, 5), float64] */;
  %826 = cosh(%825) /* ty=Tensor[(6, 10, 5), float64] */;
  (%826,)
}

def @func_10101(%var_10090: Tensor[(1, 264), float32], %var_10095: Tensor[(6), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(4, 6, 11), bool], Tensor[(1, 264), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) {
  %827 = @func_1770() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %828 = cast(%var_10090, dtype="float32") /* ty=Tensor[(1, 264), float32] */;
  %829 = reshape(%828, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), float32] */;
  %830 = cast(%var_10095, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %831 = reshape(%830, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %832 = @func_1033(%831) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %833 = %827.0;
  %834 = @func_3247(%829) /* ty=Tensor[(4, 6, 11), bool] */;
  %835 = %832.0;
  (%833, %834, %var_10090, %835, %var_10095)
}

def @func_3313() -> Tensor[(1, 3, 15), float64] {
  %836 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
  %836.0
}

def @func_11364(%var_11337: Tensor[(21, 6), int16], %var_11360: Tensor[(264), float32]) -> (Tensor[(11, 10, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(21, 6), int16], Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(264), float32], Tensor[(3, 2), uint32]) {
  %837 = @func_8030() /* ty=(Tensor[(11, 10, 15), float32],) */;
  %838 = cast(%var_11337, dtype="int16") /* ty=Tensor[(21, 6), int16] */;
  %839 = reshape(%838, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %840 = @func_1502(%839) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(6, 1), uint32], Tensor[(9, 7, 2), uint32]) */;
  %841 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %842 = cast(%var_11360, dtype="float32") /* ty=Tensor[(264), float32] */;
  %843 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 2), uint32] */, dtype="uint32") /* ty=Tensor[(3, 2), uint32] */;
  %844 = reshape(%842, newshape=[1, 264]) /* ty=Tensor[(1, 264), float32] */;
  %845 = reshape(%843, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %846 = @func_10101(%844, %845) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(4, 6, 11), bool], Tensor[(1, 264), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) */;
  %847 = %837.0;
  %848 = %840.0;
  %849 = %841.0;
  %850 = %846.4;
  (%847, %848, %var_11337, %849, %850, %var_11360, meta[relay.Constant][33] /* ty=Tensor[(3, 2), uint32] */)
}

def @func_1124(%var_1118: Tensor[(6), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) {
  %851 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %852 = cast(%var_1118, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %853 = reshape(%852, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %854 = @func_1033(%853) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %855 = %851.0;
  %856 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
  %857 = %854.3;
  (%855, %856, %857, %var_1118)
}

def @func_1307() -> (Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) {
  %858 = cast(meta[relay.Constant][34] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %859 = reshape(%858, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %860 = @func_1033(%859) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %861 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
  %862 = %860.2;
  (%861, %862, meta[relay.Constant][34] /* ty=Tensor[(6), uint32] */)
}

def @func_6195() -> (Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(72), float32]) {
  %863 = @func_4222() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64]) */;
  %864 = cast(meta[relay.Constant][35] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %865 = reshape(%864, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %866 = @func_5503(%865) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 12, 3), float32], Tensor[(72), float32], Tensor[(6), uint32]) */;
  %867 = %863.0;
  %868 = %866.3;
  (%867, %868, meta[relay.Constant][35] /* ty=Tensor[(72), float32] */)
}

def @func_2454() -> Tensor[(12, 15, 7), float32] {
  %869 = @func_2237() /* ty=(Tensor[(12, 15, 7), float32],) */;
  %869.0
}

def @func_11785(%var_11763: Tensor[(264), float32], %var_11780: Tensor[(11, 3, 15), float64]) -> (Tensor[(4, 6, 11), bool], Tensor[(264), float32], Tensor[(11, 3, 15), uint32]) {
  %870 = cast(%var_11763, dtype="float32") /* ty=Tensor[(264), float32] */;
  %871 = reshape(%870, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), float32] */;
  %872 = @func_6034() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %873 = %872.0;
  %874 = cast(%873, dtype="uint32") /* ty=Tensor[(1, 3, 15), uint32] */;
  %875 = cast(%var_11780, dtype="uint32") /* ty=Tensor[(11, 3, 15), uint32] */;
  %876 = @func_3247(%871) /* ty=Tensor[(4, 6, 11), bool] */;
  %877 = minimum(%874, %875) /* ty=Tensor[(11, 3, 15), uint32] */;
  (%876, %var_11763, %877)
}

def @func_2237() -> (Tensor[(12, 15, 7), float32],) {
  %878 = cast(meta[relay.Constant][36] /* ty=Tensor[(12, 15, 7), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 7), float32] */;
  %879 = cos(%878) /* ty=Tensor[(12, 15, 7), float32] */;
  (%879,)
}

def @func_5571() -> Tensor[(12, 15, 7), float32] {
  %880 = @func_2237() /* ty=(Tensor[(12, 15, 7), float32],) */;
  %880.0
}

def @func_8307() -> (Tensor[(270), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) {
  %881 = @func_6744() /* ty=(Tensor[(6, 1), uint32], Tensor[(270), float64], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
  %882 = cast(meta[relay.Constant][37] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %883 = reshape(%882, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
  %884 = cast(meta[relay.Constant][38] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %885 = reshape(%884, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %886 = @func_6483(%885) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(1, 3, 15), float64]) */;
  %887 = %881.2;
  %888 = @func_318(%883) /* ty=Tensor[(11, 10, 15), float32] */;
  %889 = %886.0;
  (%887, %888, meta[relay.Constant][37] /* ty=Tensor[(1650), float32] */, %889, meta[relay.Constant][38] /* ty=Tensor[(6), uint32] */)
}

def @func_6909() -> (Tensor[(6, 1), uint32], Tensor[(10, 3, 15), float32], Tensor[(450), float64], Tensor[(12, 15, 7), float32], Tensor[(12, 15, 7), float32], Tensor[(126), int16]) {
  %890 = @func_3570() /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) */;
  %891 = cast(meta[relay.Constant][39] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %892 = reshape(%891, newshape=[10, 3, 15]) /* ty=Tensor[(10, 3, 15), float64] */;
  %893 = @func_5766(%892) /* ty=(Tensor[(10, 3, 15), float64], Tensor[(10, 3, 15), float32]) */;
  %894 = @func_5675() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) */;
  %895 = cast(meta[relay.Constant][40] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %896 = reshape(%895, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %897 = @func_6245(%896) /* ty=(Tensor[(9, 7, 2), float64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) */;
  %898 = %890.0;
  %899 = %893.1;
  %900 = %894.1;
  %901 = %897.1;
  (%898, %899, meta[relay.Constant][39] /* ty=Tensor[(450), float64] */, %900, %901, meta[relay.Constant][40] /* ty=Tensor[(126), int16] */)
}

def @func_7056(%var_7054: Tensor[(30, 9), float64]) -> (Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float64], Tensor[(360), float64], Tensor[(30, 9), float64]) {
  %902 = @func_4182() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */;
  %903 = cast(meta[relay.Constant][41] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %904 = cast(%var_7054, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %905 = reshape(%903, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float64] */;
  %906 = reshape(%904, newshape=[270]) /* ty=Tensor[(270), float64] */;
  %907 = @func_4086(%905, %906) /* ty=(Tensor[(8, 3, 15), bool], Tensor[(8, 3, 15), int64], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(270), float64], Tensor[(12, 15, 7), float64]) */;
  %908 = @func_4251() /* ty=Tensor[(6, 1), uint32] */;
  %909 = %902.3;
  %910 = %907.5;
  (%908, %909, %910, meta[relay.Constant][41] /* ty=Tensor[(360), float64] */, %var_7054)
}

def @func_11924() -> (Tensor[(270), float64], Tensor[(1, 3, 15), float64]) {
  %911 = @func_6744() /* ty=(Tensor[(6, 1), uint32], Tensor[(270), float64], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
  %912 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %913 = %911.2;
  %914 = %912.0;
  (%913, %914)
}

def @func_10772() -> (Tensor[(3, 3, 15), int64],) {
  %915 = @func_6673() /* ty=Tensor[(3, 3, 15), int64] */;
  (%915,)
}

def @func_6034() -> (Tensor[(1, 3, 15), float64],) {
  %916 = @func_4222() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64]) */;
  %917 = %916.0;
  (%917,)
}

def @func_11999() -> (Tensor[(12, 15, 7), float32],) {
  %918 = @func_8881() /* ty=(Tensor[(12, 15, 7), float32],) */;
  %919 = %918.0;
  (%919,)
}

def @func_7471() -> (Tensor[(12, 4, 1), float32],) {
  %920 = cast(meta[relay.Constant][42] /* ty=Tensor[(12, 4, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 4, 1), float64] */;
  %921 = rsqrt(%920) /* ty=Tensor[(12, 4, 1), float64] */;
  %922 = cast(%921, dtype="float32") /* ty=Tensor[(12, 4, 1), float32] */;
  %923 = log(%922) /* ty=Tensor[(12, 4, 1), float32] */;
  (%923,)
}

def @func_1351() -> Tensor[(1, 3, 15), float64] {
  %924 = @func_1266() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %924.0
}

def @func_838(%var_812: Tensor[(2, 1, 3), uint32], %var_813: Tensor[(2, 1, 3), uint32]) -> (Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) {
  %925 = cast(%var_813, dtype="uint32") /* ty=Tensor[(2, 1, 3), uint32] */;
  %926 = shape_of(%var_812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %927 = cast(%var_812, dtype="uint32") /* ty=Tensor[(2, 1, 3), uint32] */;
  %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %929 = bitwise_and(%927, %928) /* ty=Tensor[(2, ?, 3), uint32] */;
  %930 = cast(%929, dtype="bool") /* ty=Tensor[(2, ?, 3), bool] */;
  %931 = shape_of(%var_813, dtype="int32") /* ty=Tensor[(3), int32] */;
  %932 = cast(%var_813, dtype="bool") /* ty=Tensor[(2, 1, 3), bool] */;
  %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %934 = cast(meta[relay.Constant][43] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %935 = reshape(%934, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
  %936 = cast(%var_812, dtype="float64") /* ty=Tensor[(2, 1, 3), float64] */;
  %937 = cast(%var_812, dtype="float64") /* ty=Tensor[(2, 1, 3), float64] */;
  %938 = equal(%932, %933) /* ty=Tensor[(2, ?, 3), bool] */;
  %939 = @func_318(%935) /* ty=Tensor[(11, 10, 15), float32] */;
  %940 = rsqrt(%936) /* ty=Tensor[(2, 1, 3), float64] */;
  %941 = cosh(%937) /* ty=Tensor[(2, 1, 3), float64] */;
  (%938, %939, meta[relay.Constant][43] /* ty=Tensor[(1650), float32] */, %940, %941)
}

def @func_6704() -> (Tensor[(12, 15, 7), float32],) {
  %942 = @func_5675() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) */;
  %943 = %942.1;
  (%943,)
}

def @func_7075() -> (Tensor[(?, 3, 15), uint8],) {
  %944 = @func_5000() /* ty=(Tensor[(?, 3, 15), uint8],) */;
  %945 = %944.0;
  (%945,)
}

def @func_6397(%var_6394: Tensor[(110, 15), float32]) -> (Tensor[(1, 3, 15), float64], Tensor[(11, 10, 15), float32], Tensor[(110, 15), float32]) {
  %946 = @func_3570() /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) */;
  %947 = cast(%var_6394, dtype="float32") /* ty=Tensor[(110, 15), float32] */;
  %948 = reshape(%947, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
  %949 = %946.1;
  %950 = @func_318(%948) /* ty=Tensor[(11, 10, 15), float32] */;
  (%949, %950, %var_6394)
}

def @func_9860() -> (Tensor[(15, 5, 6), float32],) {
  %951 = cast(meta[relay.Constant][44] /* ty=Tensor[(15, 5, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 5, 6), float32] */;
  %952 = rsqrt(%951) /* ty=Tensor[(15, 5, 6), float32] */;
  (%952,)
}

def @func_2121() -> (Tensor[(1, 3, 15), float64],) {
  %953 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %954 = %953.0;
  (%954,)
}

def @func_3818() -> Tensor[(1, 3, 15), float64] {
  @func_2730() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_10931() -> (Tensor[(11, 10, 15), float32],) {
  %955 = @func_8030() /* ty=(Tensor[(11, 10, 15), float32],) */;
  %956 = %955.0;
  (%956,)
}

def @func_6245(%var_6222: Tensor[(9, 7, 2), int16]) -> (Tensor[(9, 7, 2), float64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) {
  %957 = @func_1684() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */;
  %958 = %957.4;
  %959 = cast(%var_6222, dtype="float64") /* ty=Tensor[(9, 7, 2), float64] */;
  %960 = shape_of(%958, dtype="int32") /* ty=Tensor[(3), int32] */;
  %961 = cast(%958, dtype="float64") /* ty=Tensor[(9, 7, 2), float64] */;
  %962 = dyn.reshape(%959, %960, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %963 = @func_5675() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) */;
  %964 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %965 = floor_mod(%961, %962) /* ty=Tensor[(9, 7, 2), float64] */;
  %966 = %963.1;
  %967 = %964.0;
  (%965, %966, %967)
}

def @func_4182() -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) {
  %968 = @func_2706() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %969 = @func_3169() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %970 = @func_2706() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %971 = @func_1266() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %972 = %968.0;
  %973 = %969.0;
  %974 = %970.0;
  %975 = %971.0;
  (%972, %973, %974, %975)
}

def @func_11526() -> Tensor[(1, 3, 15), float64] {
  @func_2730() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_3357() -> (Tensor[(6, 1), uint32], Tensor[(3, 3, 15), int64]) {
  %976 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
  %977 = @func_3006() /* ty=(Tensor[(3, 3, 15), int64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8]) */;
  %978 = %976.0;
  %979 = %977.0;
  (%978, %979)
}

def @func_11276(%var_11240: Tensor[(270), float64], %var_11264: Tensor[(405), float64]) -> (Tensor[(1, 3, 15), float64], Tensor[(13, 3, 15), uint16], Tensor[(585), uint8], Tensor[(360), float64], Tensor[(270), float64], Tensor[(135, 3), float64], Tensor[(405), float64], Tensor[(2, 1, 3), float64], Tensor[(28), float32]) {
  %980 = cast(meta[relay.Constant][45] /* ty=Tensor[(585), uint8] */, dtype="uint8") /* ty=Tensor[(585), uint8] */;
  %981 = reshape(%980, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), uint8] */;
  %982 = cast(%var_11240, dtype="float64") /* ty=Tensor[(270), float64] */;
  %983 = reshape(%982, newshape=[30, 9]) /* ty=Tensor[(30, 9), float64] */;
  %984 = @func_7056(%983) /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float64], Tensor[(360), float64], Tensor[(30, 9), float64]) */;
  %985 = cast(%var_11264, dtype="float64") /* ty=Tensor[(405), float64] */;
  %986 = reshape(%985, newshape=[135, 3]) /* ty=Tensor[(135, 3), float64] */;
  %987 = @func_8137(%986) /* ty=(Tensor[(6, 1), uint32], Tensor[(9, 3, 15), float64], Tensor[(135, 3), float64]) */;
  %988 = cast(meta[relay.Constant][46] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %989 = reshape(%988, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %990 = @func_6368(%989) /* ty=(Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(28), float32], Tensor[(1, 3, 15), float64]) */;
  %991 = @func_7460() /* ty=Tensor[(1, 3, 15), float64] */;
  %992 = @func_10385(%981) /* ty=Tensor[(13, 3, 15), uint16] */;
  %993 = %984.3;
  %994 = %987.2;
  %995 = %990.0;
  (%991, %992, meta[relay.Constant][45] /* ty=Tensor[(585), uint8] */, %993, %var_11240, %994, %var_11264, %995, meta[relay.Constant][46] /* ty=Tensor[(28), float32] */)
}

def @func_273(%var_267: Tensor[(9, 7, 2), int16], %var_268: Tensor[(9, 7, 2), int16]) -> (Tensor[(9, 7, 2), int16],) {
  %996 = cast(%var_268, dtype="int16") /* ty=Tensor[(9, 7, 2), int16] */;
  %997 = shape_of(%var_267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %998 = cast(%var_267, dtype="int16") /* ty=Tensor[(9, 7, 2), int16] */;
  %999 = dyn.reshape(%996, %997, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1000 = bitwise_and(%998, %999) /* ty=Tensor[(9, 7, 2), int16] */;
  (%1000,)
}

def @func_8382() -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) {
  %1001 = @func_6417() /* ty=Tensor[(1, 3, 15), float64] */;
  %1002 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
  %1003 = @func_2454() /* ty=Tensor[(12, 15, 7), float32] */;
  (%1001, %1002, %1003)
}

def @func_1238(%var_1230: Tensor[(15, 126), uint8]) -> (Tensor[(?, 3, 15), uint8], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(?, 126), uint64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(9, 7, 2), int16], Tensor[(15, 126), int16]) {
  %1004 = cast(meta[relay.Constant][47] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %1005 = reshape(%1004, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %1006 = @func_1124(%1005) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %1007 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 126), int16] */, dtype="float32") /* ty=Tensor[(1, 126), float32] */;
  %1008 = log10(%1007) /* ty=Tensor[(1, 126), float32] */;
  %1009 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 126), int16] */, dtype="int16") /* ty=Tensor[(1, 126), int16] */;
  %1010 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 126), int16] */, dtype="int16") /* ty=Tensor[(1, 126), int16] */;
  %1011 = reshape(%1009, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %1012 = reshape(%1010, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %1013 = @func_273(%1011, %1012) /* ty=(Tensor[(9, 7, 2), int16],) */;
  %1014 = %1013.0;
  %1015 = cast(%1014, dtype="uint8") /* ty=Tensor[(9, 7, 2), uint8] */;
  %1016 = shape_of(%1008, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1017 = cast(%1008, dtype="uint8") /* ty=Tensor[(1, 126), uint8] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1019 = right_shift(%1017, %1018) /* ty=Tensor[(?, 126), uint8] */;
  %1020 = cast(%1019, dtype="uint64") /* ty=Tensor[(?, 126), uint64] */;
  %1021 = shape_of(%1008, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1022 = cast(%1008, dtype="uint64") /* ty=Tensor[(1, 126), uint64] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1024 = bitwise_or(%1022, %1023) /* ty=Tensor[(?, 126), uint64] */;
  %1025 = cast(%1024, dtype="uint64") /* ty=Tensor[(?, 126), uint64] */;
  %1026 = shape_of(%1008, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1027 = cast(%1008, dtype="uint64") /* ty=Tensor[(1, 126), uint64] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1029 = cast(meta[relay.Constant][49] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %1030 = reshape(%1029, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
  %1031 = cast(%1019, dtype="int16") /* ty=Tensor[(?, 126), int16] */;
  %1032 = logical_xor(%1027, %1028) /* ty=Tensor[(?, 126), uint64] */;
  %1033 = cast(%1032, dtype="int16") /* ty=Tensor[(?, 126), int16] */;
  %1034 = reshape(%1031, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %1035 = reshape(%1033, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %1036 = @func_273(%1034, %1035) /* ty=(Tensor[(9, 7, 2), int16],) */;
  %1037 = cast(%1019, dtype="int16") /* ty=Tensor[(?, 126), int16] */;
  %1038 = cast(%var_1230, dtype="int16") /* ty=Tensor[(15, 126), int16] */;
  %1039 = @func_1062() /* ty=Tensor[(?, 3, 15), uint8] */;
  %1040 = %1006.2;
  %1041 = @func_318(%1030) /* ty=Tensor[(11, 10, 15), float32] */;
  %1042 = %1036.0;
  %1043 = right_shift(%1037, %1038) /* ty=Tensor[(15, 126), int16] */;
  (%1039, %1040, meta[relay.Constant][47] /* ty=Tensor[(6), uint32] */, %1032, %1041, meta[relay.Constant][49] /* ty=Tensor[(1650), float32] */, %1042, %1043)
}

def @func_11145() -> (Tensor[(1, 3, 15), float64],) {
  %1044 = @func_8426() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %1045 = %1044.0;
  (%1045,)
}

def @func_7934(%var_7897: Tensor[(6, 7, 16), float32]) -> (Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(?, 3, 15), uint8], Tensor[(1650), float32], Tensor[(6, 7, 16), float64], Tensor[(1, 3, 15), float64]) {
  %1046 = cast(meta[relay.Constant][50] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %1047 = cast(meta[relay.Constant][50] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %1048 = reshape(%1046, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
  %1049 = reshape(%1047, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
  %1050 = @func_838(%1048, %1049) /* ty=(Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) */;
  %1051 = cast(meta[relay.Constant][51] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %1052 = reshape(%1051, newshape=[1, 1650]) /* ty=Tensor[(1, 1650), float32] */;
  %1053 = @func_4011(%1052) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64], Tensor[(6, 1), uint32], Tensor[(11, 10, 15), float32], Tensor[(1, 1650), float32], Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64]) */;
  %1054 = cast(%var_7897, dtype="float32") /* ty=Tensor[(6, 7, 16), float32] */;
  %1055 = acos(%1054) /* ty=Tensor[(6, 7, 16), float32] */;
  %1056 = cast(%1055, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  %1057 = %1050.4;
  %1058 = %1053.5;
  %1059 = sin(%1056) /* ty=Tensor[(6, 7, 16), float64] */;
  %1060 = @func_3720() /* ty=Tensor[(1, 3, 15), float64] */;
  (%1057, meta[relay.Constant][50] /* ty=Tensor[(6), uint32] */, %1058, meta[relay.Constant][51] /* ty=Tensor[(1650), float32] */, %1059, %1060)
}

def @func_6937() -> (Tensor[(1, 3, 15), float64],) {
  %1061 = @func_1266() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %1062 = %1061.0;
  (%1062,)
}

def @func_960() -> (Tensor[(1, 3, 15), float64],) {
  %1063 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 3, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 3, 15), float32] */;
  %1064 = log2(%1063) /* ty=Tensor[(1, 3, 15), float32] */;
  %1065 = cast(%1064, dtype="float64") /* ty=Tensor[(1, 3, 15), float64] */;
  %1066 = asinh(%1065) /* ty=Tensor[(1, 3, 15), float64] */;
  (%1066,)
}

def @func_5675() -> (Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) {
  %1067 = @func_1307() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) */;
  %1068 = %1067.0;
  %1069 = @func_5571() /* ty=Tensor[(12, 15, 7), float32] */;
  (%1068, %1069)
}

def @func_4780() -> Tensor[(1, 3, 15), float64] {
  %1070 = @func_3136() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %1070.0
}

def @func_2851(%var_2808: Tensor[(270), float64]) -> (Tensor[(?, 3, 15), int64], Tensor[(6, 3, 15), float32], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(126), int16]) {
  %1071 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
  %1072 = cast(%var_2808, dtype="float64") /* ty=Tensor[(270), float64] */;
  %1073 = reshape(%1072, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), float64] */;
  %1074 = @func_2359(%1073) /* ty=(Tensor[(6, 3, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(1, 3, 15), float64], Tensor[(6, 3, 15), uint64], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), int64]) */;
  %1075 = cast(meta[relay.Constant][53] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %1076 = reshape(%1075, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %1077 = @func_1502(%1076) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(6, 1), uint32], Tensor[(9, 7, 2), uint32]) */;
  %1078 = %1071.1;
  %1079 = %1074.0;
  %1080 = @func_2454() /* ty=Tensor[(12, 15, 7), float32] */;
  %1081 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %1082 = %1077.2;
  (%1078, %1079, %var_2808, %1080, %1081, %1082, meta[relay.Constant][53] /* ty=Tensor[(126), int16] */)
}

def @func_6294(%var_6284: Tensor[(9, 3, 15), float64]) -> Tensor[(9, 3, 15), float64] {
  %1083 = @func_2730() /* ty=Tensor[(1, 3, 15), float64] */;
  %1084 = cast(%1083, dtype="float64") /* ty=Tensor[(1, 3, 15), float64] */;
  %1085 = cast(%var_6284, dtype="float64") /* ty=Tensor[(9, 3, 15), float64] */;
  minimum(%1084, %1085) /* ty=Tensor[(9, 3, 15), float64] */
}

def @func_5331(%var_5306: Tensor[(12, 15, 7), float32]) -> Tensor[(12, 15, 7), bool] {
  %1086 = @func_2454() /* ty=Tensor[(12, 15, 7), float32] */;
  %1087 = cast(%var_5306, dtype="bool") /* ty=Tensor[(12, 15, 7), bool] */;
  %1088 = shape_of(%1086, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1089 = cast(%1086, dtype="bool") /* ty=Tensor[(12, 15, 7), bool] */;
  %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1089, %1090) /* ty=Tensor[(12, 15, 7), bool] */
}

def @func_10598() -> (Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) {
  %1091 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %1092 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
  %1093 = %1091.0;
  %1094 = %1092.0;
  %1095 = @func_9608() /* ty=Tensor[(1, 3, 15), float64] */;
  (%1093, %1094, %1095)
}

def @func_10920(%var_10866: Tensor[(405), float32], %var_10913: Tensor[(72), float32]) -> (Tensor[(405), float32], Tensor[(1, 3, 15), float32], Tensor[(6, 1), uint32], Tensor[(2, 12, 3), float32], Tensor[(72), float32], Tensor[(1, 3, 15), float64]) {
  %1096 = @func_9478() /* ty=(Tensor[(405), float64],) */;
  %1097 = %1096.0;
  %1098 = cast(%1097, dtype="float32") /* ty=Tensor[(405), float32] */;
  %1099 = log2(%1098) /* ty=Tensor[(405), float32] */;
  %1100 = cast(%var_10866, dtype="float32") /* ty=Tensor[(405), float32] */;
  %1101 = shape_of(%1099, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1102 = cast(%1099, dtype="float32") /* ty=Tensor[(405), float32] */;
  %1103 = dyn.reshape(%1100, %1101, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1104 = @func_8382() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) */;
  %1105 = %1104.1;
  %1106 = cast(%1105, dtype="float32") /* ty=Tensor[(1, 3, 15), float32] */;
  %1107 = @func_8747() /* ty=(Tensor[(6, 1), uint32],) */;
  %1108 = cast(%var_10913, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1109 = %1107.0;
  %1110 = cast(%1109, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %1111 = reshape(%1108, newshape=[2, 12, 3]) /* ty=Tensor[(2, 12, 3), float32] */;
  %1112 = reshape(%1110, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %1113 = @func_2102(%1111, %1112) /* ty=(Tensor[(2, 12, 3), float32], Tensor[(6), uint32], Tensor[(6), uint32]) */;
  %1114 = floor_divide(%1102, %1103) /* ty=Tensor[(405), float32] */;
  %1115 = sinh(%1106) /* ty=Tensor[(1, 3, 15), float32] */;
  %1116 = %1113.0;
  %1117 = @func_6417() /* ty=Tensor[(1, 3, 15), float64] */;
  (%1114, %1115, %1109, %1116, %var_10913, %1117)
}

def @func_8327() -> (Tensor[(1, 3, 15), float64],) {
  %1118 = @func_6750() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %1119 = %1118.0;
  (%1119,)
}

def @func_6576() -> Tensor[(1, 3, 15), float64] {
  %1120 = @func_2502() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %1120.1
}

def @func_2730() -> Tensor[(1, 3, 15), float64] {
  %1121 = @func_2502() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %1121.1
}

def @func_5604() -> (Tensor[(1, 3, 15), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32]) {
  %1122 = cast(meta[relay.Constant][54] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %1123 = reshape(%1122, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
  %1124 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %1125 = @func_318(%1123) /* ty=Tensor[(11, 10, 15), float32] */;
  (%1124, %1125, meta[relay.Constant][54] /* ty=Tensor[(1650), float32] */)
}

def @func_5027() -> (Tensor[(1, 3, 15), float64],) {
  %1126 = @func_3947() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %1127 = %1126.0;
  (%1127,)
}

def @func_9847() -> (Tensor[(12, 15, 7), float32], Tensor[(6), uint32]) {
  %1128 = @func_8605() /* ty=(Tensor[(12, 15, 7), float64], Tensor[(12, 15, 7), float32]) */;
  %1129 = @func_6195() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(72), float32]) */;
  %1130 = %1128.1;
  %1131 = %1129.1;
  (%1130, %1131)
}

def @func_6750() -> (Tensor[(1, 3, 15), float64],) {
  %1132 = @func_3313() /* ty=Tensor[(1, 3, 15), float64] */;
  (%1132,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1685() -> (Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) {
  %16 = fn () -> (Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) {
    %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 126), int16] */, dtype="int16") /* ty=Tensor[(1, 126), int16] */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 126), int16] */, dtype="int16") /* ty=Tensor[(1, 126), int16] */;
    %2 = reshape(%0, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
    %3 = reshape(%1, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
    %4 = @func_273(%2, %3) /* ty=(Tensor[(9, 7, 2), int16],) */;
    %5 = %4.0;
    %6 = cast(%5, dtype="int16") /* ty=Tensor[(9, 7, 2), int16] */;
    %7 = cast(%5, dtype="int16") /* ty=Tensor[(9, 7, 2), int16] */;
    %8 = reshape(%6, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
    %9 = reshape(%7, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
    %10 = @func_273(%8, %9) /* ty=(Tensor[(9, 7, 2), int16],) */;
    %11 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %12 = @func_1062() /* ty=Tensor[(?, 3, 15), uint8] */;
    %13 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
    %14 = %10.0;
    %15 = %11.0;
    (%12, %5, meta[relay.Constant][0] /* ty=Tensor[(1, 126), int16] */, %13, %14, %15)
  };
  %16() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */
}

def @func_8683(%var_8668: Tensor[(1, 15, 1), float32], %var_8669: Tensor[(1, 15, 5), float32]) -> (Tensor[(1, 15, 5), float32], Tensor[(1650), float32], Tensor[(1, 3, 15), float64], Tensor[(9, 3, 15), float64], Tensor[(9, 45), float64]) {
  %17 = cast(%var_8668, dtype="float32") /* ty=Tensor[(1, 15, 1), float32] */;
  %18 = cast(%var_8669, dtype="float32") /* ty=Tensor[(1, 15, 5), float32] */;
  %19 = @func_5798() /* ty=(Tensor[(1650), float32],) */;
  %20 = @func_2502() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(9, 45), float64] */, dtype="float64") /* ty=Tensor[(9, 45), float64] */;
  %22 = reshape(%21, newshape=[9, 3, 15]) /* ty=Tensor[(9, 3, 15), float64] */;
  %23 = floor_mod(%17, %18) /* ty=Tensor[(1, 15, 5), float32] */;
  %24 = %19.0;
  %25 = %20.1;
  %26 = @func_6294(%22) /* ty=Tensor[(9, 3, 15), float64] */;
  (%23, %24, %25, %26, meta[relay.Constant][1] /* ty=Tensor[(9, 45), float64] */)
}

def @func_9063() -> Tensor[(6, 1), uint32] {
  %28 = fn () -> Tensor[(6, 1), uint32] {
    %27 = @func_7123() /* ty=(Tensor[(6, 1), uint32],) */;
    %27.0
  };
  %28() /* ty=Tensor[(6, 1), uint32] */
}

def @func_2214() -> Tensor[(?, 3, 15), uint8] {
  %30 = fn () -> Tensor[(?, 3, 15), uint8] {
    %29 = @func_1684() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */;
    %29.0
  };
  %30() /* ty=Tensor[(?, 3, 15), uint8] */
}

def @func_4183() -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) {
  %39 = fn () -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) {
    %31 = @func_2706() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %32 = @func_3169() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %33 = @func_2706() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %34 = @func_1266() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %35 = %31.0;
    %36 = %32.0;
    %37 = %33.0;
    %38 = %34.0;
    (%35, %36, %37, %38)
  };
  %39() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */
}

def @func_11146() -> (Tensor[(1, 3, 15), float64],) {
  %42 = fn () -> (Tensor[(1, 3, 15), float64],) {
    %40 = @func_8426() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %41 = %40.0;
    (%41,)
  };
  %42() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_10299(%var_10281: Tensor[(11, 16, 10), int32], %var_10282: Tensor[(11, 16, 10), int32]) -> (Tensor[(11, 16, 10), int32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) {
  %43 = cast(%var_10282, dtype="int32") /* ty=Tensor[(11, 16, 10), int32] */;
  %44 = shape_of(%var_10281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %45 = cast(%var_10281, dtype="int32") /* ty=Tensor[(11, 16, 10), int32] */;
  %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %47 = cast(meta[relay.Constant][2] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %48 = reshape(%47, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %49 = @func_8409(%48) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %50 = logical_xor(%45, %46) /* ty=Tensor[(11, 16, 10), int32] */;
  %51 = %49.0;
  (%50, %51, meta[relay.Constant][2] /* ty=Tensor[(6), uint32] */)
}

def @func_11488() -> (Tensor[(?, 3, 15), uint16], Tensor[(6, 1), uint32]) {
  %56 = fn () -> (Tensor[(?, 3, 15), uint16], Tensor[(6, 1), uint32]) {
    %52 = @func_3490() /* ty=(Tensor[(6), uint32], Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(?, 3, 15), uint16], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), uint8], Tensor[(12, 15, 7), float32], Tensor[(6, 1), uint32]) */;
    %53 = @func_8747() /* ty=(Tensor[(6, 1), uint32],) */;
    %54 = %52.3;
    %55 = %53.0;
    (%54, %55)
  };
  %56() /* ty=(Tensor[(?, 3, 15), uint16], Tensor[(6, 1), uint32]) */
}

def @func_11925() -> (Tensor[(270), float64], Tensor[(1, 3, 15), float64]) {
  %61 = fn () -> (Tensor[(270), float64], Tensor[(1, 3, 15), float64]) {
    %57 = @func_6744() /* ty=(Tensor[(6, 1), uint32], Tensor[(270), float64], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
    %58 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %59 = %57.2;
    %60 = %58.0;
    (%59, %60)
  };
  %61() /* ty=(Tensor[(270), float64], Tensor[(1, 3, 15), float64]) */
}

def @func_10510() -> (Tensor[(3, 3, 15), int64],) {
  %64 = fn () -> (Tensor[(3, 3, 15), int64],) {
    %62 = @func_7952() /* ty=(Tensor[(3, 3, 15), int64],) */;
    %63 = %62.0;
    (%63,)
  };
  %64() /* ty=(Tensor[(3, 3, 15), int64],) */
}

def @func_8517(%var_8516: Tensor[(16, 3, 15), float64]) -> Tensor[(16, 3, 15), bool] {
  %69 = fn (%var_8477: Tensor[(16, 3, 15), float64]) -> Tensor[(16, 3, 15), bool] {
    %65 = @func_6750() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %66 = %65.0;
    %67 = cast(%66, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
    %68 = cast(%var_8477, dtype="bool") /* ty=Tensor[(16, 3, 15), bool] */;
    greater(%67, %68) /* ty=Tensor[(16, 3, 15), bool] */
  };
  %69(%var_8516) /* ty=Tensor[(16, 3, 15), bool] */
}

def @func_10533() -> (Tensor[(1, 3, 15), float64],) {
  %71 = fn () -> (Tensor[(1, 3, 15), float64],) {
    %70 = @func_9808() /* ty=Tensor[(1, 3, 15), float64] */;
    (%70,)
  };
  %71() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_9577(%var_9575: Tensor[(11, 10, 15), float32]) -> (Tensor[(11, 10, 15), int16], Tensor[(495, 1), float64]) {
  @func_9574(%var_9575) /* ty=(Tensor[(11, 10, 15), int16], Tensor[(495, 1), float64]) */
}

def @func_8636() -> Tensor[(1, 3, 15), float64] {
  @func_3720() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_1238(%var_1230: Tensor[(15, 126), uint8]) -> (Tensor[(?, 3, 15), uint8], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(?, 126), uint64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(9, 7, 2), int16], Tensor[(15, 126), int16]) {
  %72 = cast(meta[relay.Constant][3] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %73 = reshape(%72, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %74 = @func_1124(%73) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %75 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 126), int16] */, dtype="float32") /* ty=Tensor[(1, 126), float32] */;
  %76 = log10(%75) /* ty=Tensor[(1, 126), float32] */;
  %77 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 126), int16] */, dtype="int16") /* ty=Tensor[(1, 126), int16] */;
  %78 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 126), int16] */, dtype="int16") /* ty=Tensor[(1, 126), int16] */;
  %79 = reshape(%77, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %80 = reshape(%78, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %81 = @func_273(%79, %80) /* ty=(Tensor[(9, 7, 2), int16],) */;
  %82 = %81.0;
  %83 = cast(%82, dtype="uint8") /* ty=Tensor[(9, 7, 2), uint8] */;
  %84 = shape_of(%76, dtype="int32") /* ty=Tensor[(2), int32] */;
  %85 = cast(%76, dtype="uint8") /* ty=Tensor[(1, 126), uint8] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %87 = right_shift(%85, %86) /* ty=Tensor[(?, 126), uint8] */;
  %88 = cast(%87, dtype="uint64") /* ty=Tensor[(?, 126), uint64] */;
  %89 = shape_of(%76, dtype="int32") /* ty=Tensor[(2), int32] */;
  %90 = cast(%76, dtype="uint64") /* ty=Tensor[(1, 126), uint64] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %92 = bitwise_or(%90, %91) /* ty=Tensor[(?, 126), uint64] */;
  %93 = cast(%92, dtype="uint64") /* ty=Tensor[(?, 126), uint64] */;
  %94 = shape_of(%76, dtype="int32") /* ty=Tensor[(2), int32] */;
  %95 = cast(%76, dtype="uint64") /* ty=Tensor[(1, 126), uint64] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %97 = cast(meta[relay.Constant][5] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %98 = reshape(%97, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
  %99 = cast(%87, dtype="int16") /* ty=Tensor[(?, 126), int16] */;
  %100 = logical_xor(%95, %96) /* ty=Tensor[(?, 126), uint64] */;
  %101 = cast(%100, dtype="int16") /* ty=Tensor[(?, 126), int16] */;
  %102 = reshape(%99, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %103 = reshape(%101, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %104 = @func_273(%102, %103) /* ty=(Tensor[(9, 7, 2), int16],) */;
  %105 = cast(%87, dtype="int16") /* ty=Tensor[(?, 126), int16] */;
  %106 = cast(%var_1230, dtype="int16") /* ty=Tensor[(15, 126), int16] */;
  %107 = @func_1062() /* ty=Tensor[(?, 3, 15), uint8] */;
  %108 = %74.2;
  %109 = @func_318(%98) /* ty=Tensor[(11, 10, 15), float32] */;
  %110 = %104.0;
  %111 = right_shift(%105, %106) /* ty=Tensor[(15, 126), int16] */;
  (%107, %108, meta[relay.Constant][3] /* ty=Tensor[(6), uint32] */, %100, %109, meta[relay.Constant][5] /* ty=Tensor[(1650), float32] */, %110, %111)
}

def @func_9516() -> (Tensor[(1, 3, 15), float64],) {
  @func_9514() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_9318() -> (Tensor[(?, 3, 15), int64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) {
  %120 = fn () -> (Tensor[(?, 3, 15), int64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) {
    %112 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
    %113 = @func_2237() /* ty=(Tensor[(12, 15, 7), float32],) */;
    %114 = %113.0;
    %115 = cast(%114, dtype="float32") /* ty=Tensor[(12, 15, 7), float32] */;
    %116 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %117 = %112.1;
    %118 = asinh(%115) /* ty=Tensor[(12, 15, 7), float32] */;
    %119 = %116.0;
    (%117, %118, %119)
  };
  %120() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) */
}

def @func_3819() -> Tensor[(1, 3, 15), float64] {
  %121 = fn () -> Tensor[(1, 3, 15), float64] {
    @func_2730() /* ty=Tensor[(1, 3, 15), float64] */
  };
  %121() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_3314() -> Tensor[(1, 3, 15), float64] {
  %123 = fn () -> Tensor[(1, 3, 15), float64] {
    %122 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
    %122.0
  };
  %123() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_2707() -> (Tensor[(1, 3, 15), float64],) {
  %125 = fn () -> (Tensor[(1, 3, 15), float64],) {
    %124 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
    (%124,)
  };
  %125() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_8032() -> (Tensor[(11, 10, 15), float32],) {
  @func_8030() /* ty=(Tensor[(11, 10, 15), float32],) */
}

def @func_8863() -> (Tensor[(11, 10, 15), float32],) {
  %126 = @func_5604() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32]) */;
  %127 = %126.1;
  (%127,)
}

def @func_11702(%var_11700: Tensor[(1650), float32]) -> (Tensor[(?, 3, 15), uint8], Tensor[(11, 10, 15), float32], Tensor[(1650), float32]) {
  @func_11699(%var_11700) /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(11, 10, 15), float32], Tensor[(1650), float32]) */
}

def @func_3947() -> (Tensor[(1, 3, 15), float64],) {
  %128 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %129 = %128.0;
  (%129,)
}

def @func_1241(%var_1239: Tensor[(15, 126), uint8]) -> (Tensor[(?, 3, 15), uint8], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(?, 126), uint64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(9, 7, 2), int16], Tensor[(15, 126), int16]) {
  @func_1238(%var_1239) /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(?, 126), uint64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(9, 7, 2), int16], Tensor[(15, 126), int16]) */
}

def @func_1583() -> (Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) {
  %139 = fn () -> (Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) {
    %130 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %131 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
    %132 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
    %133 = cast(%132, dtype="int64") /* ty=Tensor[(1, 3, 15), int64] */;
    %134 = shape_of(%131, dtype="int32") /* ty=Tensor[(3), int32] */;
    %135 = cast(%131, dtype="int64") /* ty=Tensor[(1, 3, 15), int64] */;
    %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %137 = %130.0;
    %138 = right_shift(%135, %136) /* ty=Tensor[(?, 3, 15), int64] */;
    (%137, %138)
  };
  %139() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */
}

def @func_3659() -> (Tensor[(6, 1), uint32], Tensor[(?, 3, 15), int64]) {
  %140 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
  %141 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
  %142 = %140.0;
  %143 = %141.1;
  (%142, %143)
}

def @func_6417() -> Tensor[(1, 3, 15), float64] {
  @func_3720() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_10774() -> (Tensor[(3, 3, 15), int64],) {
  @func_10772() /* ty=(Tensor[(3, 3, 15), int64],) */
}

def @func_11123() -> (Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8], Tensor[(110, 15), float32]) {
  %150 = fn () -> (Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8], Tensor[(110, 15), float32]) {
    %144 = @func_10964() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %145 = cast(meta[relay.Constant][6] /* ty=Tensor[(110, 15), float32] */, dtype="float32") /* ty=Tensor[(110, 15), float32] */;
    %146 = reshape(%145, newshape=[1, 1650]) /* ty=Tensor[(1, 1650), float32] */;
    %147 = @func_4011(%146) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64], Tensor[(6, 1), uint32], Tensor[(11, 10, 15), float32], Tensor[(1, 1650), float32], Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64]) */;
    %148 = %144.0;
    %149 = %147.5;
    (%148, %149, meta[relay.Constant][6] /* ty=Tensor[(110, 15), float32] */)
  };
  %150() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8], Tensor[(110, 15), float32]) */
}

def @func_6673() -> Tensor[(3, 3, 15), int64] {
  %151 = @func_4930() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(3, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %151.1
}

def @func_4222() -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64]) {
  %152 = @func_1770() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %153 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
  %154 = %152.1;
  (%153, %154)
}

def @func_10772() -> (Tensor[(3, 3, 15), int64],) {
  %155 = @func_6673() /* ty=Tensor[(3, 3, 15), int64] */;
  (%155,)
}

def @func_1063() -> Tensor[(?, 3, 15), uint8] {
  %163 = fn () -> Tensor[(?, 3, 15), uint8] {
    %156 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
    %157 = cast(%156, dtype="float64") /* ty=Tensor[(1, 3, 15), float64] */;
    %158 = cosh(%157) /* ty=Tensor[(1, 3, 15), float64] */;
    %159 = cast(%158, dtype="uint8") /* ty=Tensor[(1, 3, 15), uint8] */;
    %160 = shape_of(%156, dtype="int32") /* ty=Tensor[(3), int32] */;
    %161 = cast(%156, dtype="uint8") /* ty=Tensor[(1, 3, 15), uint8] */;
    %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    add(%161, %162) /* ty=Tensor[(?, 3, 15), uint8] */
  };
  %163() /* ty=Tensor[(?, 3, 15), uint8] */
}

def @func_2362(%var_2360: Tensor[(6, 3, 15), float64]) -> (Tensor[(6, 3, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(1, 3, 15), float64], Tensor[(6, 3, 15), uint64], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), int64]) {
  @func_2359(%var_2360) /* ty=(Tensor[(6, 3, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(1, 3, 15), float64], Tensor[(6, 3, 15), uint64], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), int64]) */
}

def @func_5800() -> (Tensor[(1650), float32],) {
  @func_5798() /* ty=(Tensor[(1650), float32],) */
}

def @func_11280(%var_11278: Tensor[(270), float64], %var_11279: Tensor[(405), float64]) -> (Tensor[(1, 3, 15), float64], Tensor[(13, 3, 15), uint16], Tensor[(585), uint8], Tensor[(360), float64], Tensor[(270), float64], Tensor[(135, 3), float64], Tensor[(405), float64], Tensor[(2, 1, 3), float64], Tensor[(28), float32]) {
  @func_11276(%var_11278, %var_11279) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(13, 3, 15), uint16], Tensor[(585), uint8], Tensor[(360), float64], Tensor[(270), float64], Tensor[(135, 3), float64], Tensor[(405), float64], Tensor[(2, 1, 3), float64], Tensor[(28), float32]) */
}

def @func_6811(%var_6810: Tensor[(6), uint32]) -> (Tensor[(6), uint32], Tensor[(6), uint32], Tensor[(12, 15, 7), uint8]) {
  %175 = fn (%var_6795: Tensor[(6), uint32]) -> (Tensor[(6), uint32], Tensor[(6), uint32], Tensor[(12, 15, 7), uint8]) {
    %164 = cast(%var_6795, dtype="uint32") /* ty=Tensor[(6), uint32] */;
    %165 = reshape(%164, newshape=[6]) /* ty=Tensor[(6), uint32] */;
    %166 = @func_2784(%165) /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64], Tensor[(126), int16], Tensor[(6), uint32]) */;
    %167 = @func_2237() /* ty=(Tensor[(12, 15, 7), float32],) */;
    %168 = %167.0;
    %169 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 15, 7), float32] */, dtype="uint8") /* ty=Tensor[(12, 15, 7), uint8] */;
    %170 = shape_of(%168, dtype="int32") /* ty=Tensor[(3), int32] */;
    %171 = cast(%168, dtype="uint8") /* ty=Tensor[(12, 15, 7), uint8] */;
    %172 = dyn.reshape(%169, %170, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %173 = %166.3;
    %174 = bitwise_xor(%171, %172) /* ty=Tensor[(12, 15, 7), uint8] */;
    (%173, %var_6795, %174)
  };
  %175(%var_6810) /* ty=(Tensor[(6), uint32], Tensor[(6), uint32], Tensor[(12, 15, 7), uint8]) */
}

def @func_11788(%var_11786: Tensor[(264), float32], %var_11787: Tensor[(11, 3, 15), float64]) -> (Tensor[(4, 6, 11), bool], Tensor[(264), float32], Tensor[(11, 3, 15), uint32]) {
  %184 = fn (%var_11763: Tensor[(264), float32], %var_11780: Tensor[(11, 3, 15), float64]) -> (Tensor[(4, 6, 11), bool], Tensor[(264), float32], Tensor[(11, 3, 15), uint32]) {
    %176 = cast(%var_11763, dtype="float32") /* ty=Tensor[(264), float32] */;
    %177 = reshape(%176, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), float32] */;
    %178 = @func_6034() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %179 = %178.0;
    %180 = cast(%179, dtype="uint32") /* ty=Tensor[(1, 3, 15), uint32] */;
    %181 = cast(%var_11780, dtype="uint32") /* ty=Tensor[(11, 3, 15), uint32] */;
    %182 = @func_3247(%177) /* ty=Tensor[(4, 6, 11), bool] */;
    %183 = minimum(%180, %181) /* ty=Tensor[(11, 3, 15), uint32] */;
    (%182, %var_11763, %183)
  };
  %184(%var_11786, %var_11787) /* ty=(Tensor[(4, 6, 11), bool], Tensor[(264), float32], Tensor[(11, 3, 15), uint32]) */
}

def @func_3949() -> (Tensor[(1, 3, 15), float64],) {
  @func_3947() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_10250() -> Tensor[(1, 3, 15), float64] {
  @func_10248() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_7752(%var_7746: Tensor[(1650), float32]) -> Tensor[(1650), uint16] {
  %185 = @func_7325() /* ty=(Tensor[(1650), float32],) */;
  %186 = %185.0;
  %187 = cast(%var_7746, dtype="uint16") /* ty=Tensor[(1650), uint16] */;
  %188 = shape_of(%186, dtype="int32") /* ty=Tensor[(1), int32] */;
  %189 = cast(%186, dtype="uint16") /* ty=Tensor[(1650), uint16] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?), uint16] */;
  logical_xor(%189, %190) /* ty=Tensor[(1650), uint16] */
}

def @func_5766(%var_5732: Tensor[(10, 3, 15), float64]) -> (Tensor[(10, 3, 15), float64], Tensor[(10, 3, 15), float32]) {
  %191 = @func_4182() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */;
  %192 = %191.0;
  %193 = cast(%192, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %194 = cast(%var_5732, dtype="bool") /* ty=Tensor[(10, 3, 15), bool] */;
  %195 = greater_equal(%193, %194) /* ty=Tensor[(10, 3, 15), bool] */;
  %196 = cast(%195, dtype="float64") /* ty=Tensor[(10, 3, 15), float64] */;
  %197 = cast(%195, dtype="float32") /* ty=Tensor[(10, 3, 15), float32] */;
  %198 = log10(%197) /* ty=Tensor[(10, 3, 15), float32] */;
  %199 = cast(%198, dtype="float32") /* ty=Tensor[(10, 3, 15), float32] */;
  %200 = sigmoid(%196) /* ty=Tensor[(10, 3, 15), float64] */;
  %201 = log2(%199) /* ty=Tensor[(10, 3, 15), float32] */;
  (%200, %201)
}

def @func_10965() -> (Tensor[(1, 3, 15), float64],) {
  %204 = fn () -> (Tensor[(1, 3, 15), float64],) {
    %202 = @func_6157() /* ty=(Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) */;
    %203 = %202.1;
    (%203,)
  };
  %204() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_1772() -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) {
  @func_1770() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */
}

def @func_6157() -> (Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) {
  %205 = @func_1770() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %206 = @func_2454() /* ty=Tensor[(12, 15, 7), float32] */;
  %207 = %205.0;
  (%206, %207)
}

def @func_6639() -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) {
  %208 = @func_2121() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %209 = @func_6576() /* ty=Tensor[(1, 3, 15), float64] */;
  %210 = %208.0;
  (%209, %210)
}

def @func_6576() -> Tensor[(1, 3, 15), float64] {
  %211 = @func_2502() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %211.1
}

def @func_5929() -> (Tensor[(1, 3, 15), float64],) {
  %214 = fn () -> (Tensor[(1, 3, 15), float64],) {
    %212 = @func_5675() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) */;
    %213 = %212.0;
    (%213,)
  };
  %214() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_1308() -> (Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) {
  %220 = fn () -> (Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) {
    %215 = cast(meta[relay.Constant][8] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
    %216 = reshape(%215, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
    %217 = @func_1033(%216) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
    %218 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
    %219 = %217.2;
    (%218, %219, meta[relay.Constant][8] /* ty=Tensor[(6), uint32] */)
  };
  %220() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) */
}

def @func_8253() -> (Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), float64], Tensor[(9, 3, 15), float64], Tensor[(405), float64], Tensor[(1, 3, 15), float64], Tensor[(21, 6), int16]) {
  %239 = fn () -> (Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), float64], Tensor[(9, 3, 15), float64], Tensor[(405), float64], Tensor[(1, 3, 15), float64], Tensor[(21, 6), int16]) {
    %221 = @func_6693() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %222 = @func_2121() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %223 = %222.0;
    %224 = @func_7460() /* ty=Tensor[(1, 3, 15), float64] */;
    %225 = cast(%224, dtype="float64") /* ty=Tensor[(1, 3, 15), float64] */;
    %226 = shape_of(%223, dtype="int32") /* ty=Tensor[(3), int32] */;
    %227 = cast(%223, dtype="float64") /* ty=Tensor[(1, 3, 15), float64] */;
    %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %229 = cast(meta[relay.Constant][9] /* ty=Tensor[(405), float64] */, dtype="float64") /* ty=Tensor[(405), float64] */;
    %230 = reshape(%229, newshape=[135, 3]) /* ty=Tensor[(135, 3), float64] */;
    %231 = @func_8137(%230) /* ty=(Tensor[(6, 1), uint32], Tensor[(9, 3, 15), float64], Tensor[(135, 3), float64]) */;
    %232 = cast(meta[relay.Constant][10] /* ty=Tensor[(21, 6), int16] */, dtype="int16") /* ty=Tensor[(21, 6), int16] */;
    %233 = reshape(%232, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
    %234 = @func_6245(%233) /* ty=(Tensor[(9, 7, 2), float64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) */;
    %235 = %221.0;
    %236 = mod(%227, %228) /* ty=Tensor[(?, 3, 15), float64] */;
    %237 = %231.1;
    %238 = %234.2;
    (%235, %236, %237, meta[relay.Constant][9] /* ty=Tensor[(405), float64] */, %238, meta[relay.Constant][10] /* ty=Tensor[(21, 6), int16] */)
  };
  %239() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), float64], Tensor[(9, 3, 15), float64], Tensor[(405), float64], Tensor[(1, 3, 15), float64], Tensor[(21, 6), int16]) */
}

def @func_8801() -> Tensor[(1, 3, 15), float64] {
  @func_8636() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_6695() -> (Tensor[(1, 3, 15), float64],) {
  @func_6693() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_9239() -> (Tensor[(12, 15, 7), float32],) {
  %240 = @func_6157() /* ty=(Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) */;
  %241 = %240.0;
  (%241,)
}

def @func_8606() -> (Tensor[(12, 15, 7), float64], Tensor[(12, 15, 7), float32]) {
  %248 = fn () -> (Tensor[(12, 15, 7), float64], Tensor[(12, 15, 7), float32]) {
    %242 = @func_3490() /* ty=(Tensor[(6), uint32], Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(?, 3, 15), uint16], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), uint8], Tensor[(12, 15, 7), float32], Tensor[(6, 1), uint32]) */;
    %243 = %242.6;
    %244 = cast(%243, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
    %245 = @func_6909() /* ty=(Tensor[(6, 1), uint32], Tensor[(10, 3, 15), float32], Tensor[(450), float64], Tensor[(12, 15, 7), float32], Tensor[(12, 15, 7), float32], Tensor[(126), int16]) */;
    %246 = cosh(%244) /* ty=Tensor[(12, 15, 7), float64] */;
    %247 = %245.4;
    (%246, %247)
  };
  %248() /* ty=(Tensor[(12, 15, 7), float64], Tensor[(12, 15, 7), float32]) */
}

def @func_8309() -> (Tensor[(270), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) {
  @func_8307() /* ty=(Tensor[(270), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) */
}

def @func_4735(%var_4734: Tensor[(110, 15), float32]) -> (Tensor[(6, 1), uint32], Tensor[(110, 15), int64], Tensor[(1, 3, 15), float64]) {
  %261 = fn (%var_4706: Tensor[(110, 15), float32]) -> (Tensor[(6, 1), uint32], Tensor[(110, 15), int64], Tensor[(1, 3, 15), float64]) {
    %249 = @func_3570() /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) */;
    %250 = cast(%var_4706, dtype="float32") /* ty=Tensor[(110, 15), float32] */;
    %251 = reshape(%250, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
    %252 = @func_318(%251) /* ty=Tensor[(11, 10, 15), float32] */;
    %253 = cast(%252, dtype="int64") /* ty=Tensor[(11, 10, 15), int64] */;
    %254 = shape_of(%var_4706, dtype="int32") /* ty=Tensor[(2), int32] */;
    %255 = cast(%var_4706, dtype="int64") /* ty=Tensor[(110, 15), int64] */;
    %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %257 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
    %258 = %249.0;
    %259 = bitwise_or(%255, %256) /* ty=Tensor[(110, 15), int64] */;
    %260 = %257.0;
    (%258, %259, %260)
  };
  %261(%var_4734) /* ty=(Tensor[(6, 1), uint32], Tensor[(110, 15), int64], Tensor[(1, 3, 15), float64]) */
}

def @func_8030() -> (Tensor[(11, 10, 15), float32],) {
  %262 = @func_5604() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32]) */;
  %263 = %262.1;
  (%263,)
}

def @func_11045() -> (Tensor[(1, 3, 15), float64],) {
  @func_11043() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_10101(%var_10090: Tensor[(1, 264), float32], %var_10095: Tensor[(6), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(4, 6, 11), bool], Tensor[(1, 264), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) {
  %264 = @func_1770() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %265 = cast(%var_10090, dtype="float32") /* ty=Tensor[(1, 264), float32] */;
  %266 = reshape(%265, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), float32] */;
  %267 = cast(%var_10095, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %268 = reshape(%267, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %269 = @func_1033(%268) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %270 = %264.0;
  %271 = @func_3247(%266) /* ty=Tensor[(4, 6, 11), bool] */;
  %272 = %269.0;
  (%270, %271, %var_10090, %272, %var_10095)
}

def @func_1504(%var_1503: Tensor[(126), int16]) -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(6, 1), uint32], Tensor[(9, 7, 2), uint32]) {
  %291 = fn (%var_1489: Tensor[(126), int16]) -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(6, 1), uint32], Tensor[(9, 7, 2), uint32]) {
    %273 = cast(meta[relay.Constant][11] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
    %274 = reshape(%273, newshape=[6]) /* ty=Tensor[(6), uint32] */;
    %275 = @func_1124(%274) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
    %276 = @func_1307() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) */;
    %277 = cast(%var_1489, dtype="int16") /* ty=Tensor[(126), int16] */;
    %278 = cast(%var_1489, dtype="int16") /* ty=Tensor[(126), int16] */;
    %279 = reshape(%277, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
    %280 = reshape(%278, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
    %281 = @func_273(%279, %280) /* ty=(Tensor[(9, 7, 2), int16],) */;
    %282 = %281.0;
    %283 = cast(%var_1489, dtype="uint32") /* ty=Tensor[(126), uint32] */;
    %284 = shape_of(%282, dtype="int32") /* ty=Tensor[(3), int32] */;
    %285 = cast(%282, dtype="uint32") /* ty=Tensor[(9, 7, 2), uint32] */;
    %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %287 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
    %288 = %275.2;
    %289 = %276.1;
    %290 = add(%285, %286) /* ty=Tensor[(9, 7, 2), uint32] */;
    (%287, %288, meta[relay.Constant][11] /* ty=Tensor[(6), uint32] */, %289, %290)
  };
  %291(%var_1503) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(6, 1), uint32], Tensor[(9, 7, 2), uint32]) */
}

def @func_4224() -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64]) {
  @func_4222() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64]) */
}

def @func_7952() -> (Tensor[(3, 3, 15), int64],) {
  %292 = @func_4930() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(3, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %293 = %292.1;
  (%293,)
}

def @func_1609(%var_1608: Tensor[(15, 11, 3), uint32]) -> Tensor[(15, 11, 3), uint32] {
  %298 = fn (%var_1602: Tensor[(15, 11, 3), uint32]) -> Tensor[(15, 11, 3), uint32] {
    %294 = cast(meta[relay.Constant][12] /* ty=Tensor[(15, 11, 3), uint32] */, dtype="uint32") /* ty=Tensor[(15, 11, 3), uint32] */;
    %295 = shape_of(%var_1602, dtype="int32") /* ty=Tensor[(3), int32] */;
    %296 = cast(%var_1602, dtype="uint32") /* ty=Tensor[(15, 11, 3), uint32] */;
    %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    right_shift(%296, %297) /* ty=Tensor[(15, 11, 3), uint32] */
  };
  %298(%var_1608) /* ty=Tensor[(15, 11, 3), uint32] */
}

def @func_6540(%var_6494: Tensor[(5, 3, 15), float64]) -> (Tensor[(?, 3, 15), uint8], Tensor[(6, 1), uint32], Tensor[(?, 126), uint64], Tensor[(1890), uint8], Tensor[(6, 1), uint32], Tensor[(5, 3, 15), float64]) {
  %299 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 1), uint32] */, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %300 = reshape(%299, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %301 = @func_2784(%300) /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64], Tensor[(126), int16], Tensor[(6), uint32]) */;
  %302 = cast(meta[relay.Constant][14] /* ty=Tensor[(1890), uint8] */, dtype="uint8") /* ty=Tensor[(1890), uint8] */;
  %303 = reshape(%302, newshape=[15, 126]) /* ty=Tensor[(15, 126), uint8] */;
  %304 = @func_1238(%303) /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(?, 126), uint64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(9, 7, 2), int16], Tensor[(15, 126), int16]) */;
  %305 = @func_3659() /* ty=(Tensor[(6, 1), uint32], Tensor[(?, 3, 15), int64]) */;
  %306 = @func_3169() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %307 = %306.0;
  %308 = cast(%307, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %309 = cast(%var_6494, dtype="bool") /* ty=Tensor[(5, 3, 15), bool] */;
  %310 = not_equal(%308, %309) /* ty=Tensor[(5, 3, 15), bool] */;
  %311 = cast(%310, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
  %312 = log10(%311) /* ty=Tensor[(5, 3, 15), float64] */;
  %313 = cast(%312, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
  %314 = %301.0;
  %315 = %304.3;
  %316 = %305.0;
  %317 = acos(%313) /* ty=Tensor[(5, 3, 15), float64] */;
  (%314, meta[relay.Constant][13] /* ty=Tensor[(6, 1), uint32] */, %315, meta[relay.Constant][14] /* ty=Tensor[(1890), uint8] */, %316, %317)
}

def @func_3358() -> (Tensor[(6, 1), uint32], Tensor[(3, 3, 15), int64]) {
  %322 = fn () -> (Tensor[(6, 1), uint32], Tensor[(3, 3, 15), int64]) {
    %318 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
    %319 = @func_3006() /* ty=(Tensor[(3, 3, 15), int64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8]) */;
    %320 = %318.0;
    %321 = %319.0;
    (%320, %321)
  };
  %322() /* ty=(Tensor[(6, 1), uint32], Tensor[(3, 3, 15), int64]) */
}

def @func_10105(%var_10103: Tensor[(1, 264), float32], %var_10104: Tensor[(6), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(4, 6, 11), bool], Tensor[(1, 264), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) {
  @func_10101(%var_10103, %var_10104) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(4, 6, 11), bool], Tensor[(1, 264), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) */
}

def @func_842(%var_840: Tensor[(2, 1, 3), uint32], %var_841: Tensor[(2, 1, 3), uint32]) -> (Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) {
  @func_838(%var_840, %var_841) /* ty=(Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) */
}

def @func_2122() -> (Tensor[(1, 3, 15), float64],) {
  %325 = fn () -> (Tensor[(1, 3, 15), float64],) {
    %323 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %324 = %323.0;
    (%324,)
  };
  %325() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_9695() -> (Tensor[(11, 10, 15), float64], Tensor[(6, 1), uint32]) {
  %332 = fn () -> (Tensor[(11, 10, 15), float64], Tensor[(6, 1), uint32]) {
    %326 = @func_9494() /* ty=(Tensor[(11, 10, 15), float32],) */;
    %327 = %326.0;
    %328 = cast(%327, dtype="float64") /* ty=Tensor[(11, 10, 15), float64] */;
    %329 = @func_7893() /* ty=(Tensor[(6, 1), uint32], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
    %330 = sigmoid(%328) /* ty=Tensor[(11, 10, 15), float64] */;
    %331 = %329.0;
    (%330, %331)
  };
  %332() /* ty=(Tensor[(11, 10, 15), float64], Tensor[(6, 1), uint32]) */
}

def @func_11382() -> (Tensor[(6, 1), uint32], Tensor[(6), uint32]) {
  %337 = fn () -> (Tensor[(6, 1), uint32], Tensor[(6), uint32]) {
    %333 = @func_7123() /* ty=(Tensor[(6, 1), uint32],) */;
    %334 = @func_6195() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(72), float32]) */;
    %335 = %333.0;
    %336 = %334.1;
    (%335, %336)
  };
  %337() /* ty=(Tensor[(6, 1), uint32], Tensor[(6), uint32]) */
}

def @func_4090(%var_4088: Tensor[(8, 3, 15), float64], %var_4089: Tensor[(270), float64]) -> (Tensor[(8, 3, 15), bool], Tensor[(8, 3, 15), int64], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(270), float64], Tensor[(12, 15, 7), float64]) {
  @func_4086(%var_4088, %var_4089) /* ty=(Tensor[(8, 3, 15), bool], Tensor[(8, 3, 15), int64], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(270), float64], Tensor[(12, 15, 7), float64]) */
}

def @func_3490() -> (Tensor[(6), uint32], Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(?, 3, 15), uint16], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), uint8], Tensor[(12, 15, 7), float32], Tensor[(6, 1), uint32]) {
  %338 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
  %339 = cast(meta[relay.Constant][15] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %340 = reshape(%339, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %341 = @func_1124(%340) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %342 = %341.0;
  %343 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
  %344 = cast(%343, dtype="uint16") /* ty=Tensor[(1, 3, 15), uint16] */;
  %345 = shape_of(%342, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%342, dtype="uint16") /* ty=Tensor[(1, 3, 15), uint16] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %348 = %338.0;
  %349 = cast(%348, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %350 = reshape(%349, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %351 = @func_2784(%350) /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64], Tensor[(126), int16], Tensor[(6), uint32]) */;
  %352 = @func_2237() /* ty=(Tensor[(12, 15, 7), float32],) */;
  %353 = %352.0;
  %354 = cast(%353, dtype="float32") /* ty=Tensor[(12, 15, 7), float32] */;
  %355 = cast(meta[relay.Constant][15] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %356 = reshape(%355, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %357 = @func_1033(%356) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %358 = @func_3313() /* ty=Tensor[(1, 3, 15), float64] */;
  %359 = maximum(%346, %347) /* ty=Tensor[(?, 3, 15), uint16] */;
  %360 = @func_1062() /* ty=Tensor[(?, 3, 15), uint8] */;
  %361 = %351.0;
  %362 = sigmoid(%354) /* ty=Tensor[(12, 15, 7), float32] */;
  %363 = %357.2;
  (meta[relay.Constant][15] /* ty=Tensor[(6), uint32] */, %358, %348, %359, %360, %361, %362, %363)
}

def @func_5505(%var_5504: Tensor[(72), float32]) -> (Tensor[(1, 3, 15), float64], Tensor[(2, 12, 3), float32], Tensor[(72), float32], Tensor[(6), uint32]) {
  %371 = fn (%var_5474: Tensor[(72), float32]) -> (Tensor[(1, 3, 15), float64], Tensor[(2, 12, 3), float32], Tensor[(72), float32], Tensor[(6), uint32]) {
    %364 = cast(%var_5474, dtype="float32") /* ty=Tensor[(72), float32] */;
    %365 = cast(meta[relay.Constant][16] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
    %366 = reshape(%364, newshape=[2, 12, 3]) /* ty=Tensor[(2, 12, 3), float32] */;
    %367 = reshape(%365, newshape=[6]) /* ty=Tensor[(6), uint32] */;
    %368 = @func_2102(%366, %367) /* ty=(Tensor[(2, 12, 3), float32], Tensor[(6), uint32], Tensor[(6), uint32]) */;
    %369 = @func_2730() /* ty=Tensor[(1, 3, 15), float64] */;
    %370 = %368.0;
    (%369, %370, %var_5474, meta[relay.Constant][16] /* ty=Tensor[(6), uint32] */)
  };
  %371(%var_5504) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 12, 3), float32], Tensor[(72), float32], Tensor[(6), uint32]) */
}

def @func_6419() -> Tensor[(1, 3, 15), float64] {
  @func_6417() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_9904(%var_9871: Tensor[(8, 9, 6), bool]) -> (Tensor[(8, 9, 6), bool], Tensor[(12, 15, 7), bool], Tensor[(1260), float32], Tensor[(6, 1), uint32], Tensor[(8, 9, 6), float64]) {
  %372 = cast(%var_9871, dtype="bool") /* ty=Tensor[(8, 9, 6), bool] */;
  %373 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(8, 9, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %374 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 9, 6), bool] */, dtype="bool") /* ty=Tensor[(8, 9, 6), bool] */;
  %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %376 = cast(meta[relay.Constant][18] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %377 = reshape(%376, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float32] */;
  %378 = @func_1307() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) */;
  %379 = cast(%var_9871, dtype="float64") /* ty=Tensor[(8, 9, 6), float64] */;
  %380 = logical_and(%374, %375) /* ty=Tensor[(8, 9, 6), bool] */;
  %381 = @func_5331(%377) /* ty=Tensor[(12, 15, 7), bool] */;
  %382 = %378.1;
  %383 = log(%379) /* ty=Tensor[(8, 9, 6), float64] */;
  (%380, %381, meta[relay.Constant][18] /* ty=Tensor[(1260), float32] */, %382, %383)
}

def @func_12001() -> (Tensor[(12, 15, 7), float32],) {
  @func_11999() /* ty=(Tensor[(12, 15, 7), float32],) */
}

def @func_6578() -> Tensor[(1, 3, 15), float64] {
  @func_6576() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_7077() -> (Tensor[(?, 3, 15), uint8],) {
  @func_7075() /* ty=(Tensor[(?, 3, 15), uint8],) */
}

def @func_9862() -> (Tensor[(15, 5, 6), float32],) {
  @func_9860() /* ty=(Tensor[(15, 5, 6), float32],) */
}

def @func_10248() -> Tensor[(1, 3, 15), float64] {
  %384 = @func_8327() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %384.0
}

def @func_6245(%var_6222: Tensor[(9, 7, 2), int16]) -> (Tensor[(9, 7, 2), float64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) {
  %385 = @func_1684() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */;
  %386 = %385.4;
  %387 = cast(%var_6222, dtype="float64") /* ty=Tensor[(9, 7, 2), float64] */;
  %388 = shape_of(%386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%386, dtype="float64") /* ty=Tensor[(9, 7, 2), float64] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %391 = @func_5675() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) */;
  %392 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %393 = floor_mod(%389, %390) /* ty=Tensor[(9, 7, 2), float64] */;
  %394 = %391.1;
  %395 = %392.0;
  (%393, %394, %395)
}

def @func_3572() -> (Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) {
  @func_3570() /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) */
}

def @func_8687(%var_8685: Tensor[(1, 15, 1), float32], %var_8686: Tensor[(1, 15, 5), float32]) -> (Tensor[(1, 15, 5), float32], Tensor[(1650), float32], Tensor[(1, 3, 15), float64], Tensor[(9, 3, 15), float64], Tensor[(9, 45), float64]) {
  @func_8683(%var_8685, %var_8686) /* ty=(Tensor[(1, 15, 5), float32], Tensor[(1650), float32], Tensor[(1, 3, 15), float64], Tensor[(9, 3, 15), float64], Tensor[(9, 45), float64]) */
}

def @func_10436() -> (Tensor[(450), float64],) {
  @func_10434() /* ty=(Tensor[(450), float64],) */
}

def @func_7157() -> (Tensor[(1, 126), int16],) {
  %396 = @func_1684() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */;
  %397 = %396.2;
  (%397,)
}

def @func_8428() -> (Tensor[(1, 3, 15), float64],) {
  @func_8426() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_11578() -> Tensor[(1, 3, 15), float64] {
  @func_6576() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_5769(%var_5767: Tensor[(10, 3, 15), float64]) -> (Tensor[(10, 3, 15), float64], Tensor[(10, 3, 15), float32]) {
  @func_5766(%var_5767) /* ty=(Tensor[(10, 3, 15), float64], Tensor[(10, 3, 15), float32]) */
}

def @func_6910() -> (Tensor[(6, 1), uint32], Tensor[(10, 3, 15), float32], Tensor[(450), float64], Tensor[(12, 15, 7), float32], Tensor[(12, 15, 7), float32], Tensor[(126), int16]) {
  %410 = fn () -> (Tensor[(6, 1), uint32], Tensor[(10, 3, 15), float32], Tensor[(450), float64], Tensor[(12, 15, 7), float32], Tensor[(12, 15, 7), float32], Tensor[(126), int16]) {
    %398 = @func_3570() /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) */;
    %399 = cast(meta[relay.Constant][19] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
    %400 = reshape(%399, newshape=[10, 3, 15]) /* ty=Tensor[(10, 3, 15), float64] */;
    %401 = @func_5766(%400) /* ty=(Tensor[(10, 3, 15), float64], Tensor[(10, 3, 15), float32]) */;
    %402 = @func_5675() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) */;
    %403 = cast(meta[relay.Constant][20] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
    %404 = reshape(%403, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
    %405 = @func_6245(%404) /* ty=(Tensor[(9, 7, 2), float64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) */;
    %406 = %398.0;
    %407 = %401.1;
    %408 = %402.1;
    %409 = %405.1;
    (%406, %407, meta[relay.Constant][19] /* ty=Tensor[(450), float64] */, %408, %409, meta[relay.Constant][20] /* ty=Tensor[(126), int16] */)
  };
  %410() /* ty=(Tensor[(6, 1), uint32], Tensor[(10, 3, 15), float32], Tensor[(450), float64], Tensor[(12, 15, 7), float32], Tensor[(12, 15, 7), float32], Tensor[(126), int16]) */
}

def @func_9268() -> (Tensor[(1, 126), int16],) {
  %411 = @func_7157() /* ty=(Tensor[(1, 126), int16],) */;
  %412 = %411.0;
  (%412,)
}

def @func_3526() -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) {
  %413 = @func_3169() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %414 = %413.0;
  %415 = @func_2730() /* ty=Tensor[(1, 3, 15), float64] */;
  (%414, %415)
}

def @func_277(%var_275: Tensor[(9, 7, 2), int16], %var_276: Tensor[(9, 7, 2), int16]) -> (Tensor[(9, 7, 2), int16],) {
  @func_273(%var_275, %var_276) /* ty=(Tensor[(9, 7, 2), int16],) */
}

def @func_6248(%var_6246: Tensor[(9, 7, 2), int16]) -> (Tensor[(9, 7, 2), float64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) {
  @func_6245(%var_6246) /* ty=(Tensor[(9, 7, 2), float64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) */
}

def @func_5572() -> Tensor[(12, 15, 7), float32] {
  %417 = fn () -> Tensor[(12, 15, 7), float32] {
    %416 = @func_2237() /* ty=(Tensor[(12, 15, 7), float32],) */;
    %416.0
  };
  %417() /* ty=Tensor[(12, 15, 7), float32] */
}

def @func_7286(%var_7267: Tensor[(15, 13, 12), int64], %var_7268: Tensor[(15, 13, 12), int64]) -> (Tensor[(15, 13, 12), int64], Tensor[(6, 1), uint32]) {
  %418 = cast(%var_7268, dtype="int64") /* ty=Tensor[(15, 13, 12), int64] */;
  %419 = shape_of(%var_7267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(%var_7267, dtype="int64") /* ty=Tensor[(15, 13, 12), int64] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %422 = @func_1307() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) */;
  %423 = add(%420, %421) /* ty=Tensor[(15, 13, 12), int64] */;
  %424 = %422.1;
  (%423, %424)
}

def @func_1268() -> (Tensor[(1, 3, 15), float64],) {
  @func_1266() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_7755(%var_7753: Tensor[(1650), float32]) -> Tensor[(1650), uint16] {
  @func_7752(%var_7753) /* ty=Tensor[(1650), uint16] */
}

def @func_3007() -> (Tensor[(3, 3, 15), int64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8]) {
  %445 = fn () -> (Tensor[(3, 3, 15), int64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8]) {
    %425 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
    %426 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %427 = %426.0;
    %428 = cast(%427, dtype="uint64") /* ty=Tensor[(1, 3, 15), uint64] */;
    %429 = shape_of(%425, dtype="int32") /* ty=Tensor[(3), int32] */;
    %430 = cast(%425, dtype="uint64") /* ty=Tensor[(1, 3, 15), uint64] */;
    %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %432 = bitwise_and(%430, %431) /* ty=Tensor[(?, 3, 15), uint64] */;
    %433 = cast(%432, dtype="float64") /* ty=Tensor[(?, 3, 15), float64] */;
    %434 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 3, 15), uint64] */, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
    %435 = floor_mod(%433, %434) /* ty=Tensor[(3, 3, 15), float64] */;
    %436 = cast(%435, dtype="int64") /* ty=Tensor[(3, 3, 15), int64] */;
    %437 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(3, 3, 15), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %438 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 3, 15), uint64] */, dtype="int64") /* ty=Tensor[(3, 3, 15), int64] */;
    %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %440 = @func_2502() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
    %441 = subtract(%438, %439) /* ty=Tensor[(3, 3, 15), int64] */;
    %442 = @func_2454() /* ty=Tensor[(12, 15, 7), float32] */;
    %443 = %440.1;
    %444 = @func_2213() /* ty=Tensor[(?, 3, 15), uint8] */;
    (%441, %442, %443, %444)
  };
  %445() /* ty=(Tensor[(3, 3, 15), int64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8]) */
}

def @func_3528() -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) {
  @func_3526() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */
}

def @func_1124(%var_1118: Tensor[(6), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) {
  %446 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %447 = cast(%var_1118, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %448 = reshape(%447, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %449 = @func_1033(%448) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %450 = %446.0;
  %451 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
  %452 = %449.3;
  (%450, %451, %452, %var_1118)
}

def @func_7138(%var_7128: Tensor[(8, 3, 15), float64]) -> (Tensor[(8, 3, 15), int16], Tensor[(1, 3, 15), float64]) {
  %453 = @func_6750() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %454 = %453.0;
  %455 = cast(%454, dtype="int16") /* ty=Tensor[(1, 3, 15), int16] */;
  %456 = cast(%var_7128, dtype="int16") /* ty=Tensor[(8, 3, 15), int16] */;
  %457 = @func_4222() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64]) */;
  %458 = left_shift(%455, %456) /* ty=Tensor[(8, 3, 15), int16] */;
  %459 = %457.0;
  (%458, %459)
}

def @func_9425(%var_9423: Tensor[(360), float64]) -> (Tensor[(1, 3, 15), float64], Tensor[(8, 3, 15), int16], Tensor[(360), float64], Tensor[(?, 3, 15), uint8]) {
  @func_9422(%var_9423) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(8, 3, 15), int16], Tensor[(360), float64], Tensor[(?, 3, 15), uint8]) */
}

def @func_6196() -> (Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(72), float32]) {
  %466 = fn () -> (Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(72), float32]) {
    %460 = @func_4222() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64]) */;
    %461 = cast(meta[relay.Constant][22] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %462 = reshape(%461, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %463 = @func_5503(%462) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 12, 3), float32], Tensor[(72), float32], Tensor[(6), uint32]) */;
    %464 = %460.0;
    %465 = %463.3;
    (%464, %465, meta[relay.Constant][22] /* ty=Tensor[(72), float32] */)
  };
  %466() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(72), float32]) */
}

def @func_1266() -> (Tensor[(1, 3, 15), float64],) {
  %467 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %468 = %467.0;
  (%468,)
}

def @func_9270() -> (Tensor[(1, 126), int16],) {
  @func_9268() /* ty=(Tensor[(1, 126), int16],) */
}

def @func_4610(%var_4609: Tensor[(6, 10, 5), float64]) -> (Tensor[(6, 10, 5), float64],) {
  %471 = fn (%var_4591: Tensor[(6, 10, 5), float64]) -> (Tensor[(6, 10, 5), float64],) {
    %469 = cast(%var_4591, dtype="float64") /* ty=Tensor[(6, 10, 5), float64] */;
    %470 = cosh(%469) /* ty=Tensor[(6, 10, 5), float64] */;
    (%470,)
  };
  %471(%var_4609) /* ty=(Tensor[(6, 10, 5), float64],) */
}

def @func_10924(%var_10922: Tensor[(405), float32], %var_10923: Tensor[(72), float32]) -> (Tensor[(405), float32], Tensor[(1, 3, 15), float32], Tensor[(6, 1), uint32], Tensor[(2, 12, 3), float32], Tensor[(72), float32], Tensor[(1, 3, 15), float64]) {
  @func_10920(%var_10922, %var_10923) /* ty=(Tensor[(405), float32], Tensor[(1, 3, 15), float32], Tensor[(6, 1), uint32], Tensor[(2, 12, 3), float32], Tensor[(72), float32], Tensor[(1, 3, 15), float64]) */
}

def @func_9574(%var_9547: Tensor[(11, 10, 15), float32]) -> (Tensor[(11, 10, 15), int16], Tensor[(495, 1), float64]) {
  %472 = @func_9494() /* ty=(Tensor[(11, 10, 15), float32],) */;
  %473 = %472.0;
  %474 = cast(%var_9547, dtype="int16") /* ty=Tensor[(11, 10, 15), int16] */;
  %475 = shape_of(%473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(%473, dtype="int16") /* ty=Tensor[(11, 10, 15), int16] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %478 = @func_8961() /* ty=(Tensor[(450), float64], Tensor[(495, 1), float64], Tensor[(11, 3, 15), float32]) */;
  %479 = bitwise_and(%476, %477) /* ty=Tensor[(11, 10, 15), int16] */;
  %480 = %478.1;
  (%479, %480)
}

def @func_7461() -> Tensor[(1, 3, 15), float64] {
  %482 = fn () -> Tensor[(1, 3, 15), float64] {
    %481 = @func_4660() /* ty=(Tensor[(3, 4, 6), int16], Tensor[(1, 3, 15), float64]) */;
    %481.1
  };
  %482() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_8749() -> (Tensor[(6, 1), uint32],) {
  @func_8747() /* ty=(Tensor[(6, 1), uint32],) */
}

def @func_5798() -> (Tensor[(1650), float32],) {
  %483 = @func_5604() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32]) */;
  %484 = %483.2;
  (%484,)
}

def @func_3249(%var_3248: Tensor[(4, 6, 11), float32]) -> Tensor[(4, 6, 11), bool] {
  %489 = fn (%var_3242: Tensor[(4, 6, 11), float32]) -> Tensor[(4, 6, 11), bool] {
    %485 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 6, 11), float32] */, dtype="bool") /* ty=Tensor[(4, 6, 11), bool] */;
    %486 = shape_of(%var_3242, dtype="int32") /* ty=Tensor[(3), int32] */;
    %487 = cast(%var_3242, dtype="bool") /* ty=Tensor[(4, 6, 11), bool] */;
    %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%487, %488) /* ty=Tensor[(4, 6, 11), bool] */
  };
  %489(%var_3248) /* ty=Tensor[(4, 6, 11), bool] */
}

def @func_8628() -> Tensor[(12, 15, 7), float32] {
  @func_8626() /* ty=Tensor[(12, 15, 7), float32] */
}

def @func_10387(%var_10386: Tensor[(13, 3, 15), uint8]) -> Tensor[(13, 3, 15), uint16] {
  %494 = fn (%var_10380: Tensor[(13, 3, 15), uint8]) -> Tensor[(13, 3, 15), uint16] {
    %490 = @func_5000() /* ty=(Tensor[(?, 3, 15), uint8],) */;
    %491 = %490.0;
    %492 = cast(%491, dtype="uint16") /* ty=Tensor[(?, 3, 15), uint16] */;
    %493 = cast(%var_10380, dtype="uint16") /* ty=Tensor[(13, 3, 15), uint16] */;
    subtract(%492, %493) /* ty=Tensor[(13, 3, 15), uint16] */
  };
  %494(%var_10386) /* ty=Tensor[(13, 3, 15), uint16] */
}

def @func_8426() -> (Tensor[(1, 3, 15), float64],) {
  %495 = @func_3136() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %496 = %495.0;
  (%496,)
}

def @func_9907(%var_9905: Tensor[(8, 9, 6), bool]) -> (Tensor[(8, 9, 6), bool], Tensor[(12, 15, 7), bool], Tensor[(1260), float32], Tensor[(6, 1), uint32], Tensor[(8, 9, 6), float64]) {
  @func_9904(%var_9905) /* ty=(Tensor[(8, 9, 6), bool], Tensor[(12, 15, 7), bool], Tensor[(1260), float32], Tensor[(6, 1), uint32], Tensor[(8, 9, 6), float64]) */
}

def @func_10599() -> (Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) {
  %502 = fn () -> (Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) {
    %497 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %498 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
    %499 = %497.0;
    %500 = %498.0;
    %501 = @func_9608() /* ty=Tensor[(1, 3, 15), float64] */;
    (%499, %500, %501)
  };
  %502() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) */
}

def @func_9977(%var_9976: Tensor[(16, 3, 15), float64]) -> (Tensor[(6, 1), uint32], Tensor[(6, 1), uint32], Tensor[(16, 3, 15), bool]) {
  %511 = fn (%var_9962: Tensor[(16, 3, 15), float64]) -> (Tensor[(6, 1), uint32], Tensor[(6, 1), uint32], Tensor[(16, 3, 15), bool]) {
    %503 = @func_3659() /* ty=(Tensor[(6, 1), uint32], Tensor[(?, 3, 15), int64]) */;
    %504 = @func_3526() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */;
    %505 = %504.1;
    %506 = cast(%505, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
    %507 = cast(%var_9962, dtype="bool") /* ty=Tensor[(16, 3, 15), bool] */;
    %508 = %503.0;
    %509 = @func_9062() /* ty=Tensor[(6, 1), uint32] */;
    %510 = less(%506, %507) /* ty=Tensor[(16, 3, 15), bool] */;
    (%508, %509, %510)
  };
  %511(%var_9976) /* ty=(Tensor[(6, 1), uint32], Tensor[(6, 1), uint32], Tensor[(16, 3, 15), bool]) */
}

def @func_3800(%var_3799: Tensor[(270), float64]) -> (Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(270), float64]) {
  %518 = fn (%var_3785: Tensor[(270), float64]) -> (Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(270), float64]) {
    %512 = @func_3570() /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) */;
    %513 = cast(%var_3785, dtype="float64") /* ty=Tensor[(270), float64] */;
    %514 = reshape(%513, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), float64] */;
    %515 = @func_2359(%514) /* ty=(Tensor[(6, 3, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(1, 3, 15), float64], Tensor[(6, 3, 15), uint64], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), int64]) */;
    %516 = %512.0;
    %517 = %515.3;
    (%516, %517, %var_3785)
  };
  %518(%var_3799) /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(270), float64]) */
}

def @func_6371(%var_6369: Tensor[(28), float32]) -> (Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(28), float32], Tensor[(1, 3, 15), float64]) {
  @func_6368(%var_6369) /* ty=(Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(28), float32], Tensor[(1, 3, 15), float64]) */
}

def @func_9177(%var_9132: Tensor[(6), uint32]) -> (Tensor[(12, 15, 7), uint8], Tensor[(6), uint32], Tensor[(11, 10, 15), bool], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) {
  %519 = cast(%var_9132, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %520 = reshape(%519, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %521 = @func_6809(%520) /* ty=(Tensor[(6), uint32], Tensor[(6), uint32], Tensor[(12, 15, 7), uint8]) */;
  %522 = @func_8863() /* ty=(Tensor[(11, 10, 15), float32],) */;
  %523 = %522.0;
  %524 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 10, 15), float32] */, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
  %525 = shape_of(%523, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(%523, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %528 = @func_1770() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %529 = %521.2;
  %530 = logical_and(%526, %527) /* ty=Tensor[(11, 10, 15), bool] */;
  %531 = @func_7446() /* ty=Tensor[(9, 7, 2), int16] */;
  %532 = %528.0;
  (%529, %var_9132, %530, %531, %532)
}

def @func_7894() -> (Tensor[(6, 1), uint32], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) {
  %537 = fn () -> (Tensor[(6, 1), uint32], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) {
    %533 = @func_3490() /* ty=(Tensor[(6), uint32], Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(?, 3, 15), uint16], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), uint8], Tensor[(12, 15, 7), float32], Tensor[(6, 1), uint32]) */;
    %534 = %533.7;
    %535 = @func_2454() /* ty=Tensor[(12, 15, 7), float32] */;
    %536 = @func_2213() /* ty=Tensor[(?, 3, 15), uint8] */;
    (%534, %535, %536)
  };
  %537() /* ty=(Tensor[(6, 1), uint32], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */
}

def @func_8119(%var_8067: Tensor[(1650), float32]) -> (Tensor[(1, 3, 15), float64], Tensor[(1650), uint16], Tensor[(1650), float32], Tensor[(15, 13, 12), int64], Tensor[(2340), int64], Tensor[(?, 9, 15), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 3, 15), float64], Tensor[(405), float64], Tensor[(11, 10, 15), float32]) {
  %538 = @func_3526() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */;
  %539 = cast(%var_8067, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %540 = reshape(%539, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %541 = cast(meta[relay.Constant][25] /* ty=Tensor[(2340), int64] */, dtype="int64") /* ty=Tensor[(2340), int64] */;
  %542 = cast(meta[relay.Constant][25] /* ty=Tensor[(2340), int64] */, dtype="int64") /* ty=Tensor[(2340), int64] */;
  %543 = reshape(%541, newshape=[15, 13, 12]) /* ty=Tensor[(15, 13, 12), int64] */;
  %544 = reshape(%542, newshape=[15, 13, 12]) /* ty=Tensor[(15, 13, 12), int64] */;
  %545 = @func_7286(%543, %544) /* ty=(Tensor[(15, 13, 12), int64], Tensor[(6, 1), uint32]) */;
  %546 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 9, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 9, 15), float32] */;
  %547 = log(%546) /* ty=Tensor[(1, 9, 15), float32] */;
  %548 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 9, 15), float32] */, dtype="float64") /* ty=Tensor[(1, 9, 15), float64] */;
  %549 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%547, dtype="float64") /* ty=Tensor[(1, 9, 15), float64] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %552 = @func_7893() /* ty=(Tensor[(6, 1), uint32], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
  %553 = %552.0;
  %554 = cast(%553, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %555 = reshape(%554, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %556 = @func_1033(%555) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %557 = cast(meta[relay.Constant][27] /* ty=Tensor[(405), float64] */, dtype="float64") /* ty=Tensor[(405), float64] */;
  %558 = reshape(%557, newshape=[9, 3, 15]) /* ty=Tensor[(9, 3, 15), float64] */;
  %559 = @func_8030() /* ty=(Tensor[(11, 10, 15), float32],) */;
  %560 = %538.0;
  %561 = @func_7752(%540) /* ty=Tensor[(1650), uint16] */;
  %562 = %545.0;
  %563 = divide(%550, %551) /* ty=Tensor[(?, 9, 15), float64] */;
  %564 = %556.1;
  %565 = @func_6294(%558) /* ty=Tensor[(9, 3, 15), float64] */;
  %566 = %559.0;
  (%560, %561, %var_8067, %562, meta[relay.Constant][25] /* ty=Tensor[(2340), int64] */, %563, %553, %564, %565, meta[relay.Constant][27] /* ty=Tensor[(405), float64] */, %566)
}

def @func_5991() -> (Tensor[(?, 3, 15), int64],) {
  %567 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
  %568 = %567.1;
  (%568,)
}

def @func_318(%var_308: Tensor[(11, 10, 15), float32]) -> Tensor[(11, 10, 15), float32] {
  %569 = cast(%var_308, dtype="float32") /* ty=Tensor[(11, 10, 15), float32] */;
  %570 = log10(%569) /* ty=Tensor[(11, 10, 15), float32] */;
  %571 = cast(%var_308, dtype="float32") /* ty=Tensor[(11, 10, 15), float32] */;
  %572 = shape_of(%570, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(%570, dtype="float32") /* ty=Tensor[(11, 10, 15), float32] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  maximum(%573, %574) /* ty=Tensor[(11, 10, 15), float32] */
}

def @func_11276(%var_11240: Tensor[(270), float64], %var_11264: Tensor[(405), float64]) -> (Tensor[(1, 3, 15), float64], Tensor[(13, 3, 15), uint16], Tensor[(585), uint8], Tensor[(360), float64], Tensor[(270), float64], Tensor[(135, 3), float64], Tensor[(405), float64], Tensor[(2, 1, 3), float64], Tensor[(28), float32]) {
  %575 = cast(meta[relay.Constant][28] /* ty=Tensor[(585), uint8] */, dtype="uint8") /* ty=Tensor[(585), uint8] */;
  %576 = reshape(%575, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), uint8] */;
  %577 = cast(%var_11240, dtype="float64") /* ty=Tensor[(270), float64] */;
  %578 = reshape(%577, newshape=[30, 9]) /* ty=Tensor[(30, 9), float64] */;
  %579 = @func_7056(%578) /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float64], Tensor[(360), float64], Tensor[(30, 9), float64]) */;
  %580 = cast(%var_11264, dtype="float64") /* ty=Tensor[(405), float64] */;
  %581 = reshape(%580, newshape=[135, 3]) /* ty=Tensor[(135, 3), float64] */;
  %582 = @func_8137(%581) /* ty=(Tensor[(6, 1), uint32], Tensor[(9, 3, 15), float64], Tensor[(135, 3), float64]) */;
  %583 = cast(meta[relay.Constant][29] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %584 = reshape(%583, newshape=[28]) /* ty=Tensor[(28), float32] */;
  %585 = @func_6368(%584) /* ty=(Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(28), float32], Tensor[(1, 3, 15), float64]) */;
  %586 = @func_7460() /* ty=Tensor[(1, 3, 15), float64] */;
  %587 = @func_10385(%576) /* ty=Tensor[(13, 3, 15), uint16] */;
  %588 = %579.3;
  %589 = %582.2;
  %590 = %585.0;
  (%586, %587, meta[relay.Constant][28] /* ty=Tensor[(585), uint8] */, %588, %var_11240, %589, %var_11264, %590, meta[relay.Constant][29] /* ty=Tensor[(28), float32] */)
}

def @func_9479() -> (Tensor[(405), float64],) {
  %593 = fn () -> (Tensor[(405), float64],) {
    %591 = @func_8252() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), float64], Tensor[(9, 3, 15), float64], Tensor[(405), float64], Tensor[(1, 3, 15), float64], Tensor[(21, 6), int16]) */;
    %592 = %591.3;
    (%592,)
  };
  %593() /* ty=(Tensor[(405), float64],) */
}

def @func_7937(%var_7935: Tensor[(6, 7, 16), float32]) -> (Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(?, 3, 15), uint8], Tensor[(1650), float32], Tensor[(6, 7, 16), float64], Tensor[(1, 3, 15), float64]) {
  @func_7934(%var_7935) /* ty=(Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(?, 3, 15), uint8], Tensor[(1650), float32], Tensor[(6, 7, 16), float64], Tensor[(1, 3, 15), float64]) */
}

def @func_986() -> Tensor[(1, 3, 15), float64] {
  %595 = fn () -> Tensor[(1, 3, 15), float64] {
    %594 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %594.0
  };
  %595() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_7159() -> (Tensor[(1, 126), int16],) {
  @func_7157() /* ty=(Tensor[(1, 126), int16],) */
}

def @func_10561() -> (Tensor[(11, 10, 15), bool],) {
  @func_10559() /* ty=(Tensor[(11, 10, 15), bool],) */
}

def @func_5333(%var_5332: Tensor[(12, 15, 7), float32]) -> Tensor[(12, 15, 7), bool] {
  %601 = fn (%var_5306: Tensor[(12, 15, 7), float32]) -> Tensor[(12, 15, 7), bool] {
    %596 = @func_2454() /* ty=Tensor[(12, 15, 7), float32] */;
    %597 = cast(%var_5306, dtype="bool") /* ty=Tensor[(12, 15, 7), bool] */;
    %598 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
    %599 = cast(%596, dtype="bool") /* ty=Tensor[(12, 15, 7), bool] */;
    %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%599, %600) /* ty=Tensor[(12, 15, 7), bool] */
  };
  %601(%var_5332) /* ty=Tensor[(12, 15, 7), bool] */
}

def @func_6397(%var_6394: Tensor[(110, 15), float32]) -> (Tensor[(1, 3, 15), float64], Tensor[(11, 10, 15), float32], Tensor[(110, 15), float32]) {
  %602 = @func_3570() /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) */;
  %603 = cast(%var_6394, dtype="float32") /* ty=Tensor[(110, 15), float32] */;
  %604 = reshape(%603, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
  %605 = %602.1;
  %606 = @func_318(%604) /* ty=Tensor[(11, 10, 15), float32] */;
  (%605, %606, %var_6394)
}

def @func_10351() -> (Tensor[(?, 3, 15), uint8],) {
  %609 = fn () -> (Tensor[(?, 3, 15), uint8],) {
    %607 = @func_7893() /* ty=(Tensor[(6, 1), uint32], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
    %608 = %607.2;
    (%608,)
  };
  %609() /* ty=(Tensor[(?, 3, 15), uint8],) */
}

def @func_11035() -> (Tensor[(1, 3, 15), float64],) {
  %612 = fn () -> (Tensor[(1, 3, 15), float64],) {
    %610 = @func_10598() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) */;
    %611 = %610.0;
    (%611,)
  };
  %612() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_6543(%var_6541: Tensor[(5, 3, 15), float64]) -> (Tensor[(?, 3, 15), uint8], Tensor[(6, 1), uint32], Tensor[(?, 126), uint64], Tensor[(1890), uint8], Tensor[(6, 1), uint32], Tensor[(5, 3, 15), float64]) {
  @func_6540(%var_6541) /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(6, 1), uint32], Tensor[(?, 126), uint64], Tensor[(1890), uint8], Tensor[(6, 1), uint32], Tensor[(5, 3, 15), float64]) */
}

def @func_8383() -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) {
  %616 = fn () -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) {
    %613 = @func_6417() /* ty=Tensor[(1, 3, 15), float64] */;
    %614 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
    %615 = @func_2454() /* ty=Tensor[(12, 15, 7), float32] */;
    (%613, %614, %615)
  };
  %616() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) */
}

def @func_7058(%var_7057: Tensor[(30, 9), float64]) -> (Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float64], Tensor[(360), float64], Tensor[(30, 9), float64]) {
  %626 = fn (%var_7054: Tensor[(30, 9), float64]) -> (Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float64], Tensor[(360), float64], Tensor[(30, 9), float64]) {
    %617 = @func_4182() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */;
    %618 = cast(meta[relay.Constant][30] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %619 = cast(%var_7054, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
    %620 = reshape(%618, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float64] */;
    %621 = reshape(%619, newshape=[270]) /* ty=Tensor[(270), float64] */;
    %622 = @func_4086(%620, %621) /* ty=(Tensor[(8, 3, 15), bool], Tensor[(8, 3, 15), int64], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(270), float64], Tensor[(12, 15, 7), float64]) */;
    %623 = @func_4251() /* ty=Tensor[(6, 1), uint32] */;
    %624 = %617.3;
    %625 = %622.5;
    (%623, %624, %625, meta[relay.Constant][30] /* ty=Tensor[(360), float64] */, %var_7054)
  };
  %626(%var_7057) /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float64], Tensor[(360), float64], Tensor[(30, 9), float64]) */
}

def @func_10722(%var_10721: Tensor[(10, 3, 15), float64]) -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(10, 3, 15), bool]) {
  %638 = fn (%var_10703: Tensor[(10, 3, 15), float64]) -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(10, 3, 15), bool]) {
    %627 = @func_6750() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %628 = @func_8307() /* ty=(Tensor[(270), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) */;
    %629 = %628.3;
    %630 = cast(%629, dtype="float32") /* ty=Tensor[(1, 3, 15), float32] */;
    %631 = cast(%var_10703, dtype="float32") /* ty=Tensor[(10, 3, 15), float32] */;
    %632 = mod(%630, %631) /* ty=Tensor[(10, 3, 15), float32] */;
    %633 = cast(%632, dtype="bool") /* ty=Tensor[(10, 3, 15), bool] */;
    %634 = cast(%629, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
    %635 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
    %636 = %627.0;
    %637 = equal(%633, %634) /* ty=Tensor[(10, 3, 15), bool] */;
    (%635, %636, %637)
  };
  %638(%var_10721) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(10, 3, 15), bool]) */
}

def @func_2786(%var_2785: Tensor[(6), uint32]) -> (Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64], Tensor[(126), int16], Tensor[(6), uint32]) {
  %645 = fn (%var_2775: Tensor[(6), uint32]) -> (Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64], Tensor[(126), int16], Tensor[(6), uint32]) {
    %639 = cast(%var_2775, dtype="uint32") /* ty=Tensor[(6), uint32] */;
    %640 = reshape(%639, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
    %641 = @func_1033(%640) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
    %642 = @func_2213() /* ty=Tensor[(?, 3, 15), uint8] */;
    %643 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
    %644 = %641.5;
    (%642, %643, %644, %var_2775)
  };
  %645(%var_2785) /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64], Tensor[(126), int16], Tensor[(6), uint32]) */
}

def @func_2580() -> (Tensor[(6, 1), uint32],) {
  %648 = fn () -> (Tensor[(6, 1), uint32],) {
    %646 = @func_1307() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) */;
    %647 = %646.1;
    (%647,)
  };
  %648() /* ty=(Tensor[(6, 1), uint32],) */
}

def @func_7325() -> (Tensor[(1650), float32],) {
  %649 = @func_5798() /* ty=(Tensor[(1650), float32],) */;
  %650 = %649.0;
  (%650,)
}

def @func_10227(%var_10225: Tensor[(13, 8, 6), int64], %var_10226: Tensor[(1260), float32]) -> (Tensor[(13, 8, 6), int64], Tensor[(1260), float32], Tensor[(6), float64], Tensor[(2, ?, 3), float64]) {
  @func_10223(%var_10225, %var_10226) /* ty=(Tensor[(13, 8, 6), int64], Tensor[(1260), float32], Tensor[(6), float64], Tensor[(2, ?, 3), float64]) */
}

def @func_2238() -> (Tensor[(12, 15, 7), float32],) {
  %653 = fn () -> (Tensor[(12, 15, 7), float32],) {
    %651 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 15, 7), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 7), float32] */;
    %652 = cos(%651) /* ty=Tensor[(12, 15, 7), float32] */;
    (%652,)
  };
  %653() /* ty=(Tensor[(12, 15, 7), float32],) */
}

def @func_2455() -> Tensor[(12, 15, 7), float32] {
  %655 = fn () -> Tensor[(12, 15, 7), float32] {
    %654 = @func_2237() /* ty=(Tensor[(12, 15, 7), float32],) */;
    %654.0
  };
  %655() /* ty=Tensor[(12, 15, 7), float32] */
}

def @func_5993() -> (Tensor[(?, 3, 15), int64],) {
  @func_5991() /* ty=(Tensor[(?, 3, 15), int64],) */
}

def @func_8961() -> (Tensor[(450), float64], Tensor[(495, 1), float64], Tensor[(11, 3, 15), float32]) {
  %656 = @func_6909() /* ty=(Tensor[(6, 1), uint32], Tensor[(10, 3, 15), float32], Tensor[(450), float64], Tensor[(12, 15, 7), float32], Tensor[(12, 15, 7), float32], Tensor[(126), int16]) */;
  %657 = @func_3526() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */;
  %658 = %657.0;
  %659 = cast(meta[relay.Constant][32] /* ty=Tensor[(495, 1), float64] */, dtype="float64") /* ty=Tensor[(495, 1), float64] */;
  %660 = reshape(%659, newshape=[11, 3, 15]) /* ty=Tensor[(11, 3, 15), float64] */;
  %661 = @func_8192(%660) /* ty=(Tensor[(11, 3, 15), int32], Tensor[(11, 3, 15), bool]) */;
  %662 = %661.0;
  %663 = cast(%658, dtype="float32") /* ty=Tensor[(1, 3, 15), float32] */;
  %664 = cast(%662, dtype="float32") /* ty=Tensor[(11, 3, 15), float32] */;
  %665 = %656.2;
  %666 = power(%663, %664) /* ty=Tensor[(11, 3, 15), float32] */;
  (%665, meta[relay.Constant][32] /* ty=Tensor[(495, 1), float64] */, %666)
}

def @func_3169() -> (Tensor[(1, 3, 15), float64],) {
  %667 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  (%667,)
}

def @func_4086(%var_4029: Tensor[(8, 3, 15), float64], %var_4050: Tensor[(270), float64]) -> (Tensor[(8, 3, 15), bool], Tensor[(8, 3, 15), int64], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(270), float64], Tensor[(12, 15, 7), float64]) {
  %668 = @func_3136() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %669 = %668.0;
  %670 = cast(%669, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %671 = cast(%var_4029, dtype="bool") /* ty=Tensor[(8, 3, 15), bool] */;
  %672 = cast(%var_4029, dtype="int64") /* ty=Tensor[(8, 3, 15), int64] */;
  %673 = cast(%669, dtype="int64") /* ty=Tensor[(1, 3, 15), int64] */;
  %674 = cast(%var_4050, dtype="float64") /* ty=Tensor[(270), float64] */;
  %675 = reshape(%674, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), float64] */;
  %676 = @func_2359(%675) /* ty=(Tensor[(6, 3, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(1, 3, 15), float64], Tensor[(6, 3, 15), uint64], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), int64]) */;
  %677 = @func_2237() /* ty=(Tensor[(12, 15, 7), float32],) */;
  %678 = %677.0;
  %679 = cast(%678, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
  %680 = log(%679) /* ty=Tensor[(12, 15, 7), float64] */;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(12, 15, 7), float64] */;
  %682 = logical_or(%670, %671) /* ty=Tensor[(8, 3, 15), bool] */;
  %683 = bitwise_and(%672, %673) /* ty=Tensor[(8, 3, 15), int64] */;
  %684 = @func_2730() /* ty=Tensor[(1, 3, 15), float64] */;
  %685 = %676.2;
  %686 = tan(%681) /* ty=Tensor[(12, 15, 7), float64] */;
  (%682, %683, %684, %685, %var_4050, %686)
}

def @func_8963() -> (Tensor[(450), float64], Tensor[(495, 1), float64], Tensor[(11, 3, 15), float32]) {
  @func_8961() /* ty=(Tensor[(450), float64], Tensor[(495, 1), float64], Tensor[(11, 3, 15), float32]) */
}

def @func_10494(%var_10488: Tensor[(7, 3, 9), float32]) -> (Tensor[(7, 3, 9), float32], Tensor[(1, 3, 15), float64]) {
  %687 = cast(-3.50367f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %688 = cast(%var_10488, dtype="float32") /* ty=Tensor[(7, 3, 9), float32] */;
  %689 = divide(%687, %688) /* ty=Tensor[(7, 3, 9), float32] */;
  %690 = @func_6576() /* ty=Tensor[(1, 3, 15), float64] */;
  (%689, %690)
}

def @func_3890(%var_3862: Tensor[(1, 126), int16]) -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(3, 42), int16]) {
  %691 = @func_2502() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %692 = cast(%var_3862, dtype="int16") /* ty=Tensor[(1, 126), int16] */;
  %693 = cast(%var_3862, dtype="int16") /* ty=Tensor[(1, 126), int16] */;
  %694 = reshape(%692, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %695 = reshape(%693, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
  %696 = @func_273(%694, %695) /* ty=(Tensor[(9, 7, 2), int16],) */;
  %697 = cast(%var_3862, dtype="int16") /* ty=Tensor[(1, 126), int16] */;
  %698 = reshape(%697, newshape=[3, 42]) /* ty=Tensor[(3, 42), int16] */;
  %699 = @func_3113(%698) /* ty=(Tensor[(9, 7, 2), int16], Tensor[(3, 42), int16], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8], Tensor[(2, ?, 3), bool]) */;
  %700 = @func_3720() /* ty=Tensor[(1, 3, 15), float64] */;
  %701 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %702 = %691.0;
  %703 = %696.0;
  %704 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %705 = %699.1;
  (%700, %701, %702, %703, %var_3862, %704, %705)
}

def @func_10559() -> (Tensor[(11, 10, 15), bool],) {
  %706 = @func_8863() /* ty=(Tensor[(11, 10, 15), float32],) */;
  %707 = %706.0;
  %708 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 10, 15), float32] */, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
  %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(%707, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %712 = logical_or(%710, %711) /* ty=Tensor[(11, 10, 15), bool] */;
  (%712,)
}

def @func_9241() -> (Tensor[(12, 15, 7), float32],) {
  @func_9239() /* ty=(Tensor[(12, 15, 7), float32],) */
}

def @func_12177() -> (Tensor[(?, 3, 15), uint8],) {
  @func_12175() /* ty=(Tensor[(?, 3, 15), uint8],) */
}

def @func_11823() -> Tensor[(12, 4, 1), float32] {
  %714 = fn () -> Tensor[(12, 4, 1), float32] {
    %713 = @func_7471() /* ty=(Tensor[(12, 4, 1), float32],) */;
    %713.0
  };
  %714() /* ty=Tensor[(12, 4, 1), float32] */
}

def @func_11999() -> (Tensor[(12, 15, 7), float32],) {
  %715 = @func_8881() /* ty=(Tensor[(12, 15, 7), float32],) */;
  %716 = %715.0;
  (%716,)
}

def @func_7670() -> (Tensor[(1, 3, 15), float64], Tensor[(1650), float32]) {
  %721 = fn () -> (Tensor[(1, 3, 15), float64], Tensor[(1650), float32]) {
    %717 = @func_3947() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %718 = @func_5798() /* ty=(Tensor[(1650), float32],) */;
    %719 = %717.0;
    %720 = %718.0;
    (%719, %720)
  };
  %721() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1650), float32]) */
}

def @func_2003() -> Tensor[(1, 3, 15), float64] {
  @func_2001() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_12138(%var_12135: Tensor[(1650), float32], %var_12136: Tensor[(90, 3), float64], %var_12137: Tensor[(126), int16]) -> (Tensor[(?, 3, 15), uint8], Tensor[(720), float64], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), uint8], Tensor[(1, 3, 15), float64], Tensor[(405), float64], Tensor[(1, 3, 15), float64], Tensor[(90, 3), float64], Tensor[(6, 1650), int8], Tensor[(11, 10, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16], Tensor[(9, 3, 15), float64], Tensor[(3, 3, 15), int64], Tensor[(?, 3, 15), uint8], Tensor[(3, 3, 15), int64], Tensor[(6, 1650), int8]) {
  %773 = fn (%var_12057: Tensor[(1650), float32], %var_12068: Tensor[(90, 3), float64], %var_12095: Tensor[(126), int16]) -> (Tensor[(?, 3, 15), uint8], Tensor[(720), float64], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), uint8], Tensor[(1, 3, 15), float64], Tensor[(405), float64], Tensor[(1, 3, 15), float64], Tensor[(90, 3), float64], Tensor[(6, 1650), int8], Tensor[(11, 10, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16], Tensor[(9, 3, 15), float64], Tensor[(3, 3, 15), int64], Tensor[(?, 3, 15), uint8], Tensor[(3, 3, 15), int64], Tensor[(6, 1650), int8]) {
    %722 = @func_1684() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */;
    %723 = cast(meta[relay.Constant][34] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %724 = reshape(%723, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), float64] */;
    %725 = @func_9975(%724) /* ty=(Tensor[(6, 1), uint32], Tensor[(6, 1), uint32], Tensor[(16, 3, 15), bool]) */;
    %726 = %725.0;
    %727 = cast(%726, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
    %728 = reshape(%727, newshape=[6]) /* ty=Tensor[(6), uint32] */;
    %729 = @func_6809(%728) /* ty=(Tensor[(6), uint32], Tensor[(6), uint32], Tensor[(12, 15, 7), uint8]) */;
    %730 = @func_8382() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) */;
    %731 = cast(%var_12068, dtype="float64") /* ty=Tensor[(90, 3), float64] */;
    %732 = reshape(%731, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), float64] */;
    %733 = @func_2359(%732) /* ty=(Tensor[(6, 3, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(1, 3, 15), float64], Tensor[(6, 3, 15), uint64], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), int64]) */;
    %734 = cast(%var_12057, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %735 = reshape(%734, newshape=[110, 15]) /* ty=Tensor[(110, 15), float32] */;
    %736 = @func_4733(%735) /* ty=(Tensor[(6, 1), uint32], Tensor[(110, 15), int64], Tensor[(1, 3, 15), float64]) */;
    %737 = %736.0;
    %738 = cast(%var_12057, dtype="int8") /* ty=Tensor[(1650), int8] */;
    %739 = cast(%737, dtype="int8") /* ty=Tensor[(6, 1), int8] */;
    %740 = cast(%737, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
    %741 = cast(%737, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
    %742 = reshape(%740, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
    %743 = reshape(%741, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
    %744 = @func_838(%742, %743) /* ty=(Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) */;
    %745 = @func_11145() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %746 = cast(%var_12095, dtype="int16") /* ty=Tensor[(126), int16] */;
    %747 = cast(%var_12095, dtype="int16") /* ty=Tensor[(126), int16] */;
    %748 = reshape(%746, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
    %749 = reshape(%747, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
    %750 = @func_273(%748, %749) /* ty=(Tensor[(9, 7, 2), int16],) */;
    %751 = cast(meta[relay.Constant][35] /* ty=Tensor[(405), float64] */, dtype="float64") /* ty=Tensor[(405), float64] */;
    %752 = reshape(%751, newshape=[9, 3, 15]) /* ty=Tensor[(9, 3, 15), float64] */;
    %753 = @func_6294(%752) /* ty=Tensor[(9, 3, 15), float64] */;
    %754 = cast(%753, dtype="float64") /* ty=Tensor[(9, 3, 15), float64] */;
    %755 = @func_10509() /* ty=(Tensor[(3, 3, 15), int64],) */;
    %756 = @func_10772() /* ty=(Tensor[(3, 3, 15), int64],) */;
    %757 = cast(%var_12057, dtype="int8") /* ty=Tensor[(1650), int8] */;
    %758 = cast(%726, dtype="int8") /* ty=Tensor[(6, 1), int8] */;
    %759 = %722.0;
    %760 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
    %761 = %729.2;
    %762 = %730.0;
    %763 = %733.3;
    %764 = subtract(%738, %739) /* ty=Tensor[(6, 1650), int8] */;
    %765 = %744.1;
    %766 = %745.0;
    %767 = %750.0;
    %768 = asin(%754) /* ty=Tensor[(9, 3, 15), float64] */;
    %769 = %755.0;
    %770 = @func_2213() /* ty=Tensor[(?, 3, 15), uint8] */;
    %771 = %756.0;
    %772 = bitwise_or(%757, %758) /* ty=Tensor[(6, 1650), int8] */;
    (%759, meta[relay.Constant][34] /* ty=Tensor[(720), float64] */, %760, %761, %762, meta[relay.Constant][35] /* ty=Tensor[(405), float64] */, %763, %var_12068, %764, %765, %766, %767, %var_12095, %768, %769, %770, %771, %772)
  };
  %773(%var_12135, %var_12136, %var_12137) /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(720), float64], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), uint8], Tensor[(1, 3, 15), float64], Tensor[(405), float64], Tensor[(1, 3, 15), float64], Tensor[(90, 3), float64], Tensor[(6, 1650), int8], Tensor[(11, 10, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16], Tensor[(9, 3, 15), float64], Tensor[(3, 3, 15), int64], Tensor[(?, 3, 15), uint8], Tensor[(3, 3, 15), int64], Tensor[(6, 1650), int8]) */
}

def @func_6745() -> (Tensor[(6, 1), uint32], Tensor[(270), float64], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) {
  %782 = fn () -> (Tensor[(6, 1), uint32], Tensor[(270), float64], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) {
    %774 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
    %775 = cast(meta[relay.Constant][36] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %776 = reshape(%775, newshape=[270]) /* ty=Tensor[(270), float64] */;
    %777 = @func_3798(%776) /* ty=(Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(270), float64]) */;
    %778 = %774.0;
    %779 = %777.2;
    %780 = @func_2454() /* ty=Tensor[(12, 15, 7), float32] */;
    %781 = @func_2213() /* ty=Tensor[(?, 3, 15), uint8] */;
    (%778, %779, meta[relay.Constant][36] /* ty=Tensor[(270), float64] */, %780, %781)
  };
  %782() /* ty=(Tensor[(6, 1), uint32], Tensor[(270), float64], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */
}

def @func_3570() -> (Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64]) {
  %783 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
  %784 = %783.0;
  %785 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
  (%784, %785)
}

def @main(%var_12256: Tensor[(9, 3, 15), float32]) -> (Tensor[(1, 3, 15), float64], Tensor[(72), float32], Tensor[(405), float64], Tensor[(9, 3, 15), float32]) {
  %786 = @func_961() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %787 = @func_6196() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(72), float32]) */;
  %788 = cast(meta[relay.Constant][37] /* ty=Tensor[(405), float64] */, dtype="float64") /* ty=Tensor[(405), float64] */;
  %789 = reshape(%788, newshape=[135, 3]) /* ty=Tensor[(135, 3), float64] */;
  %790 = @func_8140(%789) /* ty=(Tensor[(6, 1), uint32], Tensor[(9, 3, 15), float64], Tensor[(135, 3), float64]) */;
  %791 = %790.1;
  %792 = cast(%791, dtype="float32") /* ty=Tensor[(9, 3, 15), float32] */;
  %793 = log10(%792) /* ty=Tensor[(9, 3, 15), float32] */;
  %794 = cast(%var_12256, dtype="float32") /* ty=Tensor[(9, 3, 15), float32] */;
  %795 = shape_of(%793, dtype="int32") /* ty=Tensor[(3), int32] */;
  %796 = cast(%793, dtype="float32") /* ty=Tensor[(9, 3, 15), float32] */;
  %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %798 = %786.0;
  %799 = %787.2;
  %800 = power(%796, %797) /* ty=Tensor[(9, 3, 15), float32] */;
  (%798, %799, meta[relay.Constant][37] /* ty=Tensor[(405), float64] */, %800)
}

def @func_6036() -> (Tensor[(1, 3, 15), float64],) {
  @func_6034() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_6675() -> Tensor[(3, 3, 15), int64] {
  @func_6673() /* ty=Tensor[(3, 3, 15), int64] */
}

def @func_11016() -> (Tensor[(1, 3, 15), float64],) {
  @func_11014() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_4011(%var_3991: Tensor[(1, 1650), float32]) -> (Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64], Tensor[(6, 1), uint32], Tensor[(11, 10, 15), float32], Tensor[(1, 1650), float32], Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64]) {
  %801 = @func_2502() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %802 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
  %803 = cast(%var_3991, dtype="float32") /* ty=Tensor[(1, 1650), float32] */;
  %804 = reshape(%803, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
  %805 = @func_3006() /* ty=(Tensor[(3, 3, 15), int64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8]) */;
  %806 = @func_1086() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %807 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %808 = %801.0;
  %809 = %802.0;
  %810 = @func_318(%804) /* ty=Tensor[(11, 10, 15), float32] */;
  %811 = %805.3;
  %812 = %806.0;
  (%807, %808, %809, %810, %var_3991, %811, %812)
}

def @func_1351() -> Tensor[(1, 3, 15), float64] {
  %813 = @func_1266() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %813.0
}

def @func_8140(%var_8138: Tensor[(135, 3), float64]) -> (Tensor[(6, 1), uint32], Tensor[(9, 3, 15), float64], Tensor[(135, 3), float64]) {
  @func_8137(%var_8138) /* ty=(Tensor[(6, 1), uint32], Tensor[(9, 3, 15), float64], Tensor[(135, 3), float64]) */
}

def @func_6585() -> Tensor[(6, 1), uint32] {
  %815 = fn () -> Tensor[(6, 1), uint32] {
    %814 = @func_3357() /* ty=(Tensor[(6, 1), uint32], Tensor[(3, 3, 15), int64]) */;
    %814.0
  };
  %815() /* ty=Tensor[(6, 1), uint32] */
}

def @func_1087() -> (Tensor[(1, 3, 15), float64],) {
  %818 = fn () -> (Tensor[(1, 3, 15), float64],) {
    %816 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %817 = %816.0;
    (%817,)
  };
  %818() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_6103(%var_6101: Tensor[(1260), float32], %var_6102: Tensor[(2, 1, 3), float64]) -> (Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), bool], Tensor[(1260), float32], Tensor[(2, ?, 3), uint8], Tensor[(6), uint32], Tensor[(2, 1, 3), float64]) {
  %837 = fn (%var_6052: Tensor[(1260), float32], %var_6080: Tensor[(2, 1, 3), float64]) -> (Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), bool], Tensor[(1260), float32], Tensor[(2, ?, 3), uint8], Tensor[(6), uint32], Tensor[(2, 1, 3), float64]) {
    %819 = @func_1266() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %820 = cast(%var_6052, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %821 = reshape(%820, newshape=[12, 15, 7]) /* ty=Tensor[(12, 15, 7), float32] */;
    %822 = @func_4222() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64]) */;
    %823 = %822.1;
    %824 = cast(%var_6080, dtype="uint8") /* ty=Tensor[(2, 1, 3), uint8] */;
    %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
    %826 = cast(%823, dtype="uint8") /* ty=Tensor[(2, 1, 3), uint8] */;
    %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %828 = @func_1307() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) */;
    %829 = %828.2;
    %830 = cast(%829, dtype="uint32") /* ty=Tensor[(6), uint32] */;
    %831 = reshape(%830, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
    %832 = @func_1033(%831) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
    %833 = %819.0;
    %834 = @func_5331(%821) /* ty=Tensor[(12, 15, 7), bool] */;
    %835 = maximum(%826, %827) /* ty=Tensor[(2, ?, 3), uint8] */;
    %836 = %832.3;
    (%833, %834, %var_6052, %835, %829, %836)
  };
  %837(%var_6101, %var_6102) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), bool], Tensor[(1260), float32], Tensor[(2, ?, 3), uint8], Tensor[(6), uint32], Tensor[(2, 1, 3), float64]) */
}

def @func_10920(%var_10866: Tensor[(405), float32], %var_10913: Tensor[(72), float32]) -> (Tensor[(405), float32], Tensor[(1, 3, 15), float32], Tensor[(6, 1), uint32], Tensor[(2, 12, 3), float32], Tensor[(72), float32], Tensor[(1, 3, 15), float64]) {
  %838 = @func_9478() /* ty=(Tensor[(405), float64],) */;
  %839 = %838.0;
  %840 = cast(%839, dtype="float32") /* ty=Tensor[(405), float32] */;
  %841 = log2(%840) /* ty=Tensor[(405), float32] */;
  %842 = cast(%var_10866, dtype="float32") /* ty=Tensor[(405), float32] */;
  %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(1), int32] */;
  %844 = cast(%841, dtype="float32") /* ty=Tensor[(405), float32] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?), float32] */;
  %846 = @func_8382() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) */;
  %847 = %846.1;
  %848 = cast(%847, dtype="float32") /* ty=Tensor[(1, 3, 15), float32] */;
  %849 = @func_8747() /* ty=(Tensor[(6, 1), uint32],) */;
  %850 = cast(%var_10913, dtype="float32") /* ty=Tensor[(72), float32] */;
  %851 = %849.0;
  %852 = cast(%851, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
  %853 = reshape(%850, newshape=[2, 12, 3]) /* ty=Tensor[(2, 12, 3), float32] */;
  %854 = reshape(%852, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %855 = @func_2102(%853, %854) /* ty=(Tensor[(2, 12, 3), float32], Tensor[(6), uint32], Tensor[(6), uint32]) */;
  %856 = floor_divide(%844, %845) /* ty=Tensor[(405), float32] */;
  %857 = sinh(%848) /* ty=Tensor[(1, 3, 15), float32] */;
  %858 = %855.0;
  %859 = @func_6417() /* ty=Tensor[(1, 3, 15), float64] */;
  (%856, %857, %851, %858, %var_10913, %859)
}

def @func_838(%var_812: Tensor[(2, 1, 3), uint32], %var_813: Tensor[(2, 1, 3), uint32]) -> (Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) {
  %860 = cast(%var_813, dtype="uint32") /* ty=Tensor[(2, 1, 3), uint32] */;
  %861 = shape_of(%var_812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%var_812, dtype="uint32") /* ty=Tensor[(2, 1, 3), uint32] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %864 = bitwise_and(%862, %863) /* ty=Tensor[(2, ?, 3), uint32] */;
  %865 = cast(%864, dtype="bool") /* ty=Tensor[(2, ?, 3), bool] */;
  %866 = shape_of(%var_813, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%var_813, dtype="bool") /* ty=Tensor[(2, 1, 3), bool] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %869 = cast(meta[relay.Constant][38] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %870 = reshape(%869, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
  %871 = cast(%var_812, dtype="float64") /* ty=Tensor[(2, 1, 3), float64] */;
  %872 = cast(%var_812, dtype="float64") /* ty=Tensor[(2, 1, 3), float64] */;
  %873 = equal(%867, %868) /* ty=Tensor[(2, ?, 3), bool] */;
  %874 = @func_318(%870) /* ty=Tensor[(11, 10, 15), float32] */;
  %875 = rsqrt(%871) /* ty=Tensor[(2, 1, 3), float64] */;
  %876 = cosh(%872) /* ty=Tensor[(2, 1, 3), float64] */;
  (%873, %874, meta[relay.Constant][38] /* ty=Tensor[(1650), float32] */, %875, %876)
}

def @func_9514() -> (Tensor[(1, 3, 15), float64],) {
  %877 = @func_6693() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %878 = %877.0;
  (%878,)
}

def @func_3492() -> (Tensor[(6), uint32], Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(?, 3, 15), uint16], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), uint8], Tensor[(12, 15, 7), float32], Tensor[(6, 1), uint32]) {
  @func_3490() /* ty=(Tensor[(6), uint32], Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(?, 3, 15), uint16], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), uint8], Tensor[(12, 15, 7), float32], Tensor[(6, 1), uint32]) */
}

def @func_3893(%var_3891: Tensor[(1, 126), int16]) -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(3, 42), int16]) {
  @func_3890(%var_3891) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(3, 42), int16]) */
}

def @func_12175() -> (Tensor[(?, 3, 15), uint8],) {
  %879 = @func_9317() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) */;
  %880 = %879.2;
  %881 = @func_6639() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */;
  %882 = %881.0;
  %883 = cast(%882, dtype="uint8") /* ty=Tensor[(1, 3, 15), uint8] */;
  %884 = shape_of(%880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%880, dtype="uint8") /* ty=Tensor[(1, 3, 15), uint8] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %887 = bitwise_or(%885, %886) /* ty=Tensor[(?, 3, 15), uint8] */;
  (%887,)
}

def @func_4930() -> (Tensor[(1, 3, 15), float64], Tensor[(3, 3, 15), int64], Tensor[(1, 3, 15), float64]) {
  %888 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
  %889 = @func_3357() /* ty=(Tensor[(6, 1), uint32], Tensor[(3, 3, 15), int64]) */;
  %890 = %888.0;
  %891 = %889.1;
  %892 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
  (%890, %891, %892)
}

def @func_1035(%var_1034: Tensor[(6, 1), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) {
  %912 = fn (%var_1019: Tensor[(6, 1), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) {
    %893 = cast(%var_1019, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
    %894 = cast(%var_1019, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
    %895 = reshape(%893, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
    %896 = reshape(%894, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
    %897 = @func_838(%895, %896) /* ty=(Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) */;
    %898 = cast(%var_1019, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
    %899 = %897.3;
    %900 = cast(%899, dtype="uint32") /* ty=Tensor[(2, 1, 3), uint32] */;
    %901 = reshape(%898, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
    %902 = reshape(%900, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
    %903 = @func_838(%901, %902) /* ty=(Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) */;
    %904 = cast(meta[relay.Constant][39] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
    %905 = cast(meta[relay.Constant][39] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
    %906 = reshape(%904, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
    %907 = reshape(%905, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
    %908 = @func_273(%906, %907) /* ty=(Tensor[(9, 7, 2), int16],) */;
    %909 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
    %910 = %903.4;
    %911 = %908.0;
    (%909, %899, %var_1019, %910, %911, meta[relay.Constant][39] /* ty=Tensor[(126), int16] */)
  };
  %912(%var_1034) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */
}

def @func_10223(%var_10184: Tensor[(13, 8, 6), int64], %var_10201: Tensor[(1260), float32]) -> (Tensor[(13, 8, 6), int64], Tensor[(1260), float32], Tensor[(6), float64], Tensor[(2, ?, 3), float64]) {
  %913 = cast(meta[relay.Constant][40] /* ty=Tensor[(13, 8, 6), int64] */, dtype="int64") /* ty=Tensor[(13, 8, 6), int64] */;
  %914 = shape_of(%var_10184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %915 = cast(%var_10184, dtype="int64") /* ty=Tensor[(13, 8, 6), int64] */;
  %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %917 = cast(%var_10201, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %918 = cast(meta[relay.Constant][41] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %919 = reshape(%917, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %920 = reshape(%918, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), float64] */;
  %921 = @func_6100(%919, %920) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), bool], Tensor[(1260), float32], Tensor[(2, ?, 3), uint8], Tensor[(6), uint32], Tensor[(2, 1, 3), float64]) */;
  %922 = %921.3;
  %923 = cast(%922, dtype="float64") /* ty=Tensor[(2, ?, 3), float64] */;
  %924 = right_shift(%915, %916) /* ty=Tensor[(13, 8, 6), int64] */;
  %925 = log2(%923) /* ty=Tensor[(2, ?, 3), float64] */;
  (%924, %var_10201, meta[relay.Constant][41] /* ty=Tensor[(6), float64] */, %925)
}

def @func_6939() -> (Tensor[(1, 3, 15), float64],) {
  @func_6937() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_2001() -> Tensor[(1, 3, 15), float64] {
  @func_985() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_8137(%var_8134: Tensor[(135, 3), float64]) -> (Tensor[(6, 1), uint32], Tensor[(9, 3, 15), float64], Tensor[(135, 3), float64]) {
  %926 = @func_6744() /* ty=(Tensor[(6, 1), uint32], Tensor[(270), float64], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
  %927 = cast(%var_8134, dtype="float64") /* ty=Tensor[(135, 3), float64] */;
  %928 = reshape(%927, newshape=[9, 3, 15]) /* ty=Tensor[(9, 3, 15), float64] */;
  %929 = %926.0;
  %930 = @func_6294(%928) /* ty=Tensor[(9, 3, 15), float64] */;
  (%929, %930, %var_8134)
}

def @func_8865() -> (Tensor[(11, 10, 15), float32],) {
  @func_8863() /* ty=(Tensor[(11, 10, 15), float32],) */
}

def @func_4932() -> (Tensor[(1, 3, 15), float64], Tensor[(3, 3, 15), int64], Tensor[(1, 3, 15), float64]) {
  @func_4930() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(3, 3, 15), int64], Tensor[(1, 3, 15), float64]) */
}

def @func_7141(%var_7139: Tensor[(8, 3, 15), float64]) -> (Tensor[(8, 3, 15), int16], Tensor[(1, 3, 15), float64]) {
  @func_7138(%var_7139) /* ty=(Tensor[(8, 3, 15), int16], Tensor[(1, 3, 15), float64]) */
}

def @func_2732() -> Tensor[(1, 3, 15), float64] {
  @func_2730() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_8913() -> Tensor[(1, 3, 15), float64] {
  %931 = @func_1266() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %931.0
}

def @func_6750() -> (Tensor[(1, 3, 15), float64],) {
  %932 = @func_3313() /* ty=Tensor[(1, 3, 15), float64] */;
  (%932,)
}

def @func_11367(%var_11365: Tensor[(21, 6), int16], %var_11366: Tensor[(264), float32]) -> (Tensor[(11, 10, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(21, 6), int16], Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(264), float32], Tensor[(3, 2), uint32]) {
  %947 = fn (%var_11337: Tensor[(21, 6), int16], %var_11360: Tensor[(264), float32]) -> (Tensor[(11, 10, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(21, 6), int16], Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(264), float32], Tensor[(3, 2), uint32]) {
    %933 = @func_8030() /* ty=(Tensor[(11, 10, 15), float32],) */;
    %934 = cast(%var_11337, dtype="int16") /* ty=Tensor[(21, 6), int16] */;
    %935 = reshape(%934, newshape=[126]) /* ty=Tensor[(126), int16] */;
    %936 = @func_1502(%935) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(6, 1), uint32], Tensor[(9, 7, 2), uint32]) */;
    %937 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %938 = cast(%var_11360, dtype="float32") /* ty=Tensor[(264), float32] */;
    %939 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 2), uint32] */, dtype="uint32") /* ty=Tensor[(3, 2), uint32] */;
    %940 = reshape(%938, newshape=[1, 264]) /* ty=Tensor[(1, 264), float32] */;
    %941 = reshape(%939, newshape=[6]) /* ty=Tensor[(6), uint32] */;
    %942 = @func_10101(%940, %941) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(4, 6, 11), bool], Tensor[(1, 264), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) */;
    %943 = %933.0;
    %944 = %936.0;
    %945 = %937.0;
    %946 = %942.4;
    (%943, %944, %var_11337, %945, %946, %var_11360, meta[relay.Constant][42] /* ty=Tensor[(3, 2), uint32] */)
  };
  %947(%var_11365, %var_11366) /* ty=(Tensor[(11, 10, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(21, 6), int16], Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(264), float32], Tensor[(3, 2), uint32]) */
}

def @func_4661() -> (Tensor[(3, 4, 6), int16], Tensor[(1, 3, 15), float64]) {
  %954 = fn () -> (Tensor[(3, 4, 6), int16], Tensor[(1, 3, 15), float64]) {
    %948 = cast(meta[relay.Constant][44] /* ty=Tensor[(3, 4, 6), int16] */, dtype="int16") /* ty=Tensor[(3, 4, 6), int16] */;
    %949 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(3, 4, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %950 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 4, 6), int16] */, dtype="int16") /* ty=Tensor[(3, 4, 6), int16] */;
    %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %952 = bitwise_and(%950, %951) /* ty=Tensor[(3, 4, 6), int16] */;
    %953 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
    (%952, %953)
  };
  %954() /* ty=(Tensor[(3, 4, 6), int16], Tensor[(1, 3, 15), float64]) */
}

def @func_9860() -> (Tensor[(15, 5, 6), float32],) {
  %955 = cast(meta[relay.Constant][45] /* ty=Tensor[(15, 5, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 5, 6), float32] */;
  %956 = rsqrt(%955) /* ty=Tensor[(15, 5, 6), float32] */;
  (%956,)
}

def @func_9180(%var_9178: Tensor[(6), uint32]) -> (Tensor[(12, 15, 7), uint8], Tensor[(6), uint32], Tensor[(11, 10, 15), bool], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) {
  @func_9177(%var_9178) /* ty=(Tensor[(12, 15, 7), uint8], Tensor[(6), uint32], Tensor[(11, 10, 15), bool], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */
}

def @func_2359(%var_2294: Tensor[(6, 3, 15), float64]) -> (Tensor[(6, 3, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(1, 3, 15), float64], Tensor[(6, 3, 15), uint64], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), int64]) {
  %957 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %958 = cast(%957, dtype="float32") /* ty=Tensor[(1, 3, 15), float32] */;
  %959 = cast(%var_2294, dtype="float32") /* ty=Tensor[(6, 3, 15), float32] */;
  %960 = @func_2213() /* ty=Tensor[(?, 3, 15), uint8] */;
  %961 = cast(%960, dtype="bool") /* ty=Tensor[(?, 3, 15), bool] */;
  %962 = shape_of(%957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %963 = cast(%957, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
  %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %965 = cast(%var_2294, dtype="uint64") /* ty=Tensor[(6, 3, 15), uint64] */;
  %966 = cast(%960, dtype="uint64") /* ty=Tensor[(?, 3, 15), uint64] */;
  %967 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
  %968 = mod(%958, %959) /* ty=Tensor[(6, 3, 15), float32] */;
  %969 = @func_985() /* ty=Tensor[(1, 3, 15), float64] */;
  %970 = not_equal(%963, %964) /* ty=Tensor[(?, 3, 15), bool] */;
  %971 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %972 = right_shift(%965, %966) /* ty=Tensor[(6, 3, 15), uint64] */;
  %973 = @func_1062() /* ty=Tensor[(?, 3, 15), uint8] */;
  %974 = %967.1;
  (%968, %969, %970, %971, %972, %973, %974)
}

def @func_7954() -> (Tensor[(3, 3, 15), int64],) {
  @func_7952() /* ty=(Tensor[(3, 3, 15), int64],) */
}

def @func_11528() -> Tensor[(1, 3, 15), float64] {
  @func_11526() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_5605() -> (Tensor[(1, 3, 15), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32]) {
  %979 = fn () -> (Tensor[(1, 3, 15), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32]) {
    %975 = cast(meta[relay.Constant][46] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %976 = reshape(%975, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
    %977 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
    %978 = @func_318(%976) /* ty=Tensor[(11, 10, 15), float32] */;
    (%977, %978, meta[relay.Constant][46] /* ty=Tensor[(1650), float32] */)
  };
  %979() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32]) */
}

def @func_3661() -> (Tensor[(6, 1), uint32], Tensor[(?, 3, 15), int64]) {
  @func_3659() /* ty=(Tensor[(6, 1), uint32], Tensor[(?, 3, 15), int64]) */
}

def @func_321(%var_319: Tensor[(11, 10, 15), float32]) -> Tensor[(11, 10, 15), float32] {
  @func_318(%var_319) /* ty=Tensor[(11, 10, 15), float32] */
}

def @func_9609() -> Tensor[(1, 3, 15), float64] {
  %981 = fn () -> Tensor[(1, 3, 15), float64] {
    %980 = @func_6750() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %980.0
  };
  %981() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_6693() -> (Tensor[(1, 3, 15), float64],) {
  %982 = @func_3313() /* ty=Tensor[(1, 3, 15), float64] */;
  (%982,)
}

def @func_8328() -> (Tensor[(1, 3, 15), float64],) {
  %985 = fn () -> (Tensor[(1, 3, 15), float64],) {
    %983 = @func_6750() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %984 = %983.0;
    (%984,)
  };
  %985() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_7290(%var_7288: Tensor[(15, 13, 12), int64], %var_7289: Tensor[(15, 13, 12), int64]) -> (Tensor[(15, 13, 12), int64], Tensor[(6, 1), uint32]) {
  @func_7286(%var_7288, %var_7289) /* ty=(Tensor[(15, 13, 12), int64], Tensor[(6, 1), uint32]) */
}

def @func_11973() -> Tensor[(1, 3, 15), float64] {
  %987 = fn () -> Tensor[(1, 3, 15), float64] {
    %986 = @func_3136() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %986.0
  };
  %987() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_7537(%var_7525: Tensor[(1650), float32]) -> (Tensor[(1650), uint16],) {
  %988 = @func_7325() /* ty=(Tensor[(1650), float32],) */;
  %989 = %988.0;
  %990 = cast(%var_7525, dtype="uint16") /* ty=Tensor[(1650), uint16] */;
  %991 = shape_of(%989, dtype="int32") /* ty=Tensor[(1), int32] */;
  %992 = cast(%989, dtype="uint16") /* ty=Tensor[(1650), uint16] */;
  %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %994 = bitwise_or(%992, %993) /* ty=Tensor[(1650), uint16] */;
  (%994,)
}

def @func_11580() -> Tensor[(1, 3, 15), float64] {
  @func_11578() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_6706() -> (Tensor[(12, 15, 7), float32],) {
  @func_6704() /* ty=(Tensor[(12, 15, 7), float32],) */
}

def @func_8638() -> Tensor[(1, 3, 15), float64] {
  @func_8636() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_4014(%var_4012: Tensor[(1, 1650), float32]) -> (Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64], Tensor[(6, 1), uint32], Tensor[(11, 10, 15), float32], Tensor[(1, 1650), float32], Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64]) {
  @func_4011(%var_4012) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64], Tensor[(6, 1), uint32], Tensor[(11, 10, 15), float32], Tensor[(1, 1650), float32], Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64]) */
}

def @func_9810() -> Tensor[(1, 3, 15), float64] {
  @func_9808() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_8803() -> Tensor[(1, 3, 15), float64] {
  @func_8801() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_1127(%var_1125: Tensor[(6), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) {
  @func_1124(%var_1125) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */
}

def @func_7447() -> Tensor[(9, 7, 2), int16] {
  %996 = fn () -> Tensor[(9, 7, 2), int16] {
    %995 = @func_1684() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */;
    %995.1
  };
  %996() /* ty=Tensor[(9, 7, 2), int16] */
}

def @func_8882() -> (Tensor[(12, 15, 7), float32],) {
  %999 = fn () -> (Tensor[(12, 15, 7), float32],) {
    %997 = @func_6744() /* ty=(Tensor[(6, 1), uint32], Tensor[(270), float64], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
    %998 = %997.3;
    (%998,)
  };
  %999() /* ty=(Tensor[(12, 15, 7), float32],) */
}

def @func_961() -> (Tensor[(1, 3, 15), float64],) {
  %1004 = fn () -> (Tensor[(1, 3, 15), float64],) {
    %1000 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 3, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 3, 15), float32] */;
    %1001 = log2(%1000) /* ty=Tensor[(1, 3, 15), float32] */;
    %1002 = cast(%1001, dtype="float64") /* ty=Tensor[(1, 3, 15), float64] */;
    %1003 = asinh(%1002) /* ty=Tensor[(1, 3, 15), float64] */;
    (%1003,)
  };
  %1004() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_2106(%var_2104: Tensor[(2, 12, 3), float32], %var_2105: Tensor[(6), uint32]) -> (Tensor[(2, 12, 3), float32], Tensor[(6), uint32], Tensor[(6), uint32]) {
  @func_2102(%var_2104, %var_2105) /* ty=(Tensor[(2, 12, 3), float32], Tensor[(6), uint32], Tensor[(6), uint32]) */
}

def @func_9495() -> (Tensor[(11, 10, 15), float32],) {
  %1007 = fn () -> (Tensor[(11, 10, 15), float32],) {
    %1005 = @func_8863() /* ty=(Tensor[(11, 10, 15), float32],) */;
    %1006 = %1005.0;
    (%1006,)
  };
  %1007() /* ty=(Tensor[(11, 10, 15), float32],) */
}

def @func_2853(%var_2852: Tensor[(270), float64]) -> (Tensor[(?, 3, 15), int64], Tensor[(6, 3, 15), float32], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(126), int16]) {
  %1020 = fn (%var_2808: Tensor[(270), float64]) -> (Tensor[(?, 3, 15), int64], Tensor[(6, 3, 15), float32], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(126), int16]) {
    %1008 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
    %1009 = cast(%var_2808, dtype="float64") /* ty=Tensor[(270), float64] */;
    %1010 = reshape(%1009, newshape=[6, 3, 15]) /* ty=Tensor[(6, 3, 15), float64] */;
    %1011 = @func_2359(%1010) /* ty=(Tensor[(6, 3, 15), float32], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), bool], Tensor[(1, 3, 15), float64], Tensor[(6, 3, 15), uint64], Tensor[(?, 3, 15), uint8], Tensor[(?, 3, 15), int64]) */;
    %1012 = cast(meta[relay.Constant][48] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
    %1013 = reshape(%1012, newshape=[126]) /* ty=Tensor[(126), int16] */;
    %1014 = @func_1502(%1013) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(6, 1), uint32], Tensor[(9, 7, 2), uint32]) */;
    %1015 = %1008.1;
    %1016 = %1011.0;
    %1017 = @func_2454() /* ty=Tensor[(12, 15, 7), float32] */;
    %1018 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
    %1019 = %1014.2;
    (%1015, %1016, %var_2808, %1017, %1018, %1019, meta[relay.Constant][48] /* ty=Tensor[(126), int16] */)
  };
  %1020(%var_2852) /* ty=(Tensor[(?, 3, 15), int64], Tensor[(6, 3, 15), float32], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(126), int16]) */
}

def @func_11699(%var_11697: Tensor[(1650), float32]) -> (Tensor[(?, 3, 15), uint8], Tensor[(11, 10, 15), float32], Tensor[(1650), float32]) {
  %1021 = @func_7075() /* ty=(Tensor[(?, 3, 15), uint8],) */;
  %1022 = cast(%var_11697, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %1023 = reshape(%1022, newshape=[1, 1650]) /* ty=Tensor[(1, 1650), float32] */;
  %1024 = @func_4011(%1023) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64], Tensor[(6, 1), uint32], Tensor[(11, 10, 15), float32], Tensor[(1, 1650), float32], Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64]) */;
  %1025 = %1021.0;
  %1026 = %1024.3;
  (%1025, %1026, %var_11697)
}

def @func_3720() -> Tensor[(1, 3, 15), float64] {
  %1027 = @func_3136() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %1027.0
}

def @func_6296(%var_6295: Tensor[(9, 3, 15), float64]) -> Tensor[(9, 3, 15), float64] {
  %1031 = fn (%var_6284: Tensor[(9, 3, 15), float64]) -> Tensor[(9, 3, 15), float64] {
    %1028 = @func_2730() /* ty=Tensor[(1, 3, 15), float64] */;
    %1029 = cast(%1028, dtype="float64") /* ty=Tensor[(1, 3, 15), float64] */;
    %1030 = cast(%var_6284, dtype="float64") /* ty=Tensor[(9, 3, 15), float64] */;
    minimum(%1029, %1030) /* ty=Tensor[(9, 3, 15), float64] */
  };
  %1031(%var_6295) /* ty=Tensor[(9, 3, 15), float64] */
}

def @func_6159() -> (Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) {
  @func_6157() /* ty=(Tensor[(12, 15, 7), float32], Tensor[(1, 3, 15), float64]) */
}

def @func_11014() -> (Tensor[(1, 3, 15), float64],) {
  %1032 = @func_2706() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %1033 = %1032.0;
  (%1033,)
}

def @func_4252() -> Tensor[(6, 1), uint32] {
  %1035 = fn () -> Tensor[(6, 1), uint32] {
    %1034 = @func_3357() /* ty=(Tensor[(6, 1), uint32], Tensor[(3, 3, 15), int64]) */;
    %1034.0
  };
  %1035() /* ty=Tensor[(6, 1), uint32] */
}

def @func_6485(%var_6484: Tensor[(6), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(1, 3, 15), float64]) {
  %1047 = fn (%var_6477: Tensor[(6), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(1, 3, 15), float64]) {
    %1036 = @func_6195() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(72), float32]) */;
    %1037 = cast(%var_6477, dtype="uint32") /* ty=Tensor[(6), uint32] */;
    %1038 = cast(%var_6477, dtype="uint32") /* ty=Tensor[(6), uint32] */;
    %1039 = reshape(%1037, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
    %1040 = reshape(%1038, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
    %1041 = @func_838(%1039, %1040) /* ty=(Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) */;
    %1042 = @func_3169() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %1043 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
    %1044 = %1036.0;
    %1045 = %1041.3;
    %1046 = %1042.0;
    (%1043, %1044, %1045, %var_6477, %1046)
  };
  %1047(%var_6484) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(1, 3, 15), float64]) */
}

def @func_7934(%var_7897: Tensor[(6, 7, 16), float32]) -> (Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(?, 3, 15), uint8], Tensor[(1650), float32], Tensor[(6, 7, 16), float64], Tensor[(1, 3, 15), float64]) {
  %1048 = cast(meta[relay.Constant][49] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %1049 = cast(meta[relay.Constant][49] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %1050 = reshape(%1048, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
  %1051 = reshape(%1049, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
  %1052 = @func_838(%1050, %1051) /* ty=(Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) */;
  %1053 = cast(meta[relay.Constant][50] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %1054 = reshape(%1053, newshape=[1, 1650]) /* ty=Tensor[(1, 1650), float32] */;
  %1055 = @func_4011(%1054) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64], Tensor[(6, 1), uint32], Tensor[(11, 10, 15), float32], Tensor[(1, 1650), float32], Tensor[(?, 3, 15), uint8], Tensor[(1, 3, 15), float64]) */;
  %1056 = cast(%var_7897, dtype="float32") /* ty=Tensor[(6, 7, 16), float32] */;
  %1057 = acos(%1056) /* ty=Tensor[(6, 7, 16), float32] */;
  %1058 = cast(%1057, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  %1059 = %1052.4;
  %1060 = %1055.5;
  %1061 = sin(%1058) /* ty=Tensor[(6, 7, 16), float64] */;
  %1062 = @func_3720() /* ty=Tensor[(1, 3, 15), float64] */;
  (%1059, meta[relay.Constant][49] /* ty=Tensor[(6), uint32] */, %1060, meta[relay.Constant][50] /* ty=Tensor[(1650), float32] */, %1061, %1062)
}

def @func_2400(%var_2398: Tensor[(2, 1, 14), float32], %var_2399: Tensor[(6, 1), uint32]) -> (Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 14), float64], Tensor[(1, 3, 15), float64]) {
  %1075 = fn (%var_2373: Tensor[(2, 1, 14), float32], %var_2384: Tensor[(6, 1), uint32]) -> (Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 14), float64], Tensor[(1, 3, 15), float64]) {
    %1063 = cast(%var_2384, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
    %1064 = reshape(%1063, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
    %1065 = @func_1033(%1064) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
    %1066 = @func_1266() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %1067 = cast(%var_2373, dtype="float32") /* ty=Tensor[(2, 1, 14), float32] */;
    %1068 = atanh(%1067) /* ty=Tensor[(2, 1, 14), float32] */;
    %1069 = cast(%1068, dtype="float64") /* ty=Tensor[(2, 1, 14), float64] */;
    %1070 = @func_1684() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */;
    %1071 = %1065.1;
    %1072 = %1066.0;
    %1073 = cosh(%1069) /* ty=Tensor[(2, 1, 14), float64] */;
    %1074 = %1070.3;
    (%1071, %var_2384, %1072, %1073, %1074)
  };
  %1075(%var_2398, %var_2399) /* ty=(Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 14), float64], Tensor[(1, 3, 15), float64]) */
}

def @func_2503() -> (Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) {
  %1079 = fn () -> (Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) {
    %1076 = @func_1582() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), int64]) */;
    %1077 = %1076.1;
    %1078 = @func_2001() /* ty=Tensor[(1, 3, 15), float64] */;
    (%1077, %1078)
  };
  %1079() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */
}

def @func_3722() -> Tensor[(1, 3, 15), float64] {
  @func_3720() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_6752() -> (Tensor[(1, 3, 15), float64],) {
  @func_6750() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_10434() -> (Tensor[(450), float64],) {
  %1080 = @func_6909() /* ty=(Tensor[(6, 1), uint32], Tensor[(10, 3, 15), float32], Tensor[(450), float64], Tensor[(12, 15, 7), float32], Tensor[(12, 15, 7), float32], Tensor[(126), int16]) */;
  %1081 = %1080.2;
  (%1081,)
}

def @func_12188(%var_12186: Tensor[(2, 8, 5), uint32], %var_12187: Tensor[(2, 8, 5), uint32]) -> (Tensor[(2, 8, 5), bool],) {
  %1087 = fn (%var_12180: Tensor[(2, 8, 5), uint32], %var_12181: Tensor[(2, 8, 5), uint32]) -> (Tensor[(2, 8, 5), bool],) {
    %1082 = cast(%var_12181, dtype="bool") /* ty=Tensor[(2, 8, 5), bool] */;
    %1083 = shape_of(%var_12180, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1084 = cast(%var_12180, dtype="bool") /* ty=Tensor[(2, 8, 5), bool] */;
    %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1086 = less_equal(%1084, %1085) /* ty=Tensor[(2, 8, 5), bool] */;
    (%1086,)
  };
  %1087(%var_12186, %var_12187) /* ty=(Tensor[(2, 8, 5), bool],) */
}

def @func_273(%var_267: Tensor[(9, 7, 2), int16], %var_268: Tensor[(9, 7, 2), int16]) -> (Tensor[(9, 7, 2), int16],) {
  %1088 = cast(%var_268, dtype="int16") /* ty=Tensor[(9, 7, 2), int16] */;
  %1089 = shape_of(%var_267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1090 = cast(%var_267, dtype="int16") /* ty=Tensor[(9, 7, 2), int16] */;
  %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1092 = bitwise_and(%1090, %1091) /* ty=Tensor[(9, 7, 2), int16] */;
  (%1092,)
}

def @func_7540(%var_7538: Tensor[(1650), float32]) -> (Tensor[(1650), uint16],) {
  @func_7537(%var_7538) /* ty=(Tensor[(1650), uint16],) */
}

def @func_2102(%var_2089: Tensor[(2, 12, 3), float32], %var_2093: Tensor[(6), uint32]) -> (Tensor[(2, 12, 3), float32], Tensor[(6), uint32], Tensor[(6), uint32]) {
  %1093 = cast(%var_2089, dtype="float32") /* ty=Tensor[(2, 12, 3), float32] */;
  %1094 = cast(%var_2093, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %1095 = reshape(%1094, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %1096 = @func_1124(%1095) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */;
  %1097 = sinh(%1093) /* ty=Tensor[(2, 12, 3), float32] */;
  %1098 = %1096.3;
  (%1097, %1098, %var_2093)
}

def @func_3115(%var_3114: Tensor[(3, 42), int16]) -> (Tensor[(9, 7, 2), int16], Tensor[(3, 42), int16], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8], Tensor[(2, ?, 3), bool]) {
  %1123 = fn (%var_3076: Tensor[(3, 42), int16]) -> (Tensor[(9, 7, 2), int16], Tensor[(3, 42), int16], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8], Tensor[(2, ?, 3), bool]) {
    %1099 = cast(%var_3076, dtype="int16") /* ty=Tensor[(3, 42), int16] */;
    %1100 = cast(%var_3076, dtype="int16") /* ty=Tensor[(3, 42), int16] */;
    %1101 = reshape(%1099, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
    %1102 = reshape(%1100, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), int16] */;
    %1103 = @func_273(%1101, %1102) /* ty=(Tensor[(9, 7, 2), int16],) */;
    %1104 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %1105 = @func_2579() /* ty=(Tensor[(6, 1), uint32],) */;
    %1106 = %1105.0;
    %1107 = cast(%1106, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
    %1108 = cast(%1106, dtype="uint32") /* ty=Tensor[(6, 1), uint32] */;
    %1109 = reshape(%1107, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
    %1110 = reshape(%1108, newshape=[2, 1, 3]) /* ty=Tensor[(2, 1, 3), uint32] */;
    %1111 = @func_838(%1109, %1110) /* ty=(Tensor[(2, ?, 3), bool], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(2, 1, 3), float64], Tensor[(2, 1, 3), float64]) */;
    %1112 = %1111.3;
    %1113 = cast(%1112, dtype="float32") /* ty=Tensor[(2, 1, 3), float32] */;
    %1114 = asin(%1113) /* ty=Tensor[(2, 1, 3), float32] */;
    %1115 = cast(%1106, dtype="bool") /* ty=Tensor[(6, 1), bool] */;
    %1116 = shape_of(%1114, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1117 = cast(%1114, dtype="bool") /* ty=Tensor[(2, 1, 3), bool] */;
    %1118 = dyn.reshape(%1115, %1116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1119 = %1103.0;
    %1120 = %1104.0;
    %1121 = @func_1062() /* ty=Tensor[(?, 3, 15), uint8] */;
    %1122 = logical_or(%1117, %1118) /* ty=Tensor[(2, ?, 3), bool] */;
    (%1119, %var_3076, %1120, %1121, %1122)
  };
  %1123(%var_3114) /* ty=(Tensor[(9, 7, 2), int16], Tensor[(3, 42), int16], Tensor[(1, 3, 15), float64], Tensor[(?, 3, 15), uint8], Tensor[(2, ?, 3), bool]) */
}

def @func_10933() -> (Tensor[(11, 10, 15), float32],) {
  @func_10931() /* ty=(Tensor[(11, 10, 15), float32],) */
}

def @func_7075() -> (Tensor[(?, 3, 15), uint8],) {
  %1124 = @func_5000() /* ty=(Tensor[(?, 3, 15), uint8],) */;
  %1125 = %1124.0;
  (%1125,)
}

def @func_5001() -> (Tensor[(?, 3, 15), uint8],) {
  %1127 = fn () -> (Tensor[(?, 3, 15), uint8],) {
    %1126 = @func_1062() /* ty=Tensor[(?, 3, 15), uint8] */;
    (%1126,)
  };
  %1127() /* ty=(Tensor[(?, 3, 15), uint8],) */
}

def @func_11075() -> Tensor[(1, 3, 15), float64] {
  %1129 = fn () -> Tensor[(1, 3, 15), float64] {
    %1128 = @func_4182() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */;
    %1128.1
  };
  %1129() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_9422(%var_9413: Tensor[(360), float64]) -> (Tensor[(1, 3, 15), float64], Tensor[(8, 3, 15), int16], Tensor[(360), float64], Tensor[(?, 3, 15), uint8]) {
  %1130 = @func_6750() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %1131 = cast(%var_9413, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1132 = reshape(%1131, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float64] */;
  %1133 = @func_7138(%1132) /* ty=(Tensor[(8, 3, 15), int16], Tensor[(1, 3, 15), float64]) */;
  %1134 = %1130.0;
  %1135 = %1133.0;
  %1136 = @func_2213() /* ty=Tensor[(?, 3, 15), uint8] */;
  (%1134, %1135, %var_9413, %1136)
}

def @func_8822() -> (Tensor[(1, 3, 15), float64],) {
  %1139 = fn () -> (Tensor[(1, 3, 15), float64],) {
    %1137 = @func_5928() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %1138 = %1137.0;
    (%1138,)
  };
  %1139() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_8409(%var_8399: Tensor[(6), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) {
  %1140 = cast(%var_8399, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %1141 = reshape(%1140, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %1142 = @func_1033(%1141) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %1143 = @func_6576() /* ty=Tensor[(1, 3, 15), float64] */;
  %1144 = %1142.3;
  (%1143, %1144, %var_8399)
}

def @func_6704() -> (Tensor[(12, 15, 7), float32],) {
  %1145 = @func_5675() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) */;
  %1146 = %1145.1;
  (%1146,)
}

def @func_6400(%var_6398: Tensor[(110, 15), float32]) -> (Tensor[(1, 3, 15), float64], Tensor[(11, 10, 15), float32], Tensor[(110, 15), float32]) {
  @func_6397(%var_6398) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(11, 10, 15), float32], Tensor[(110, 15), float32]) */
}

def @func_4781() -> Tensor[(1, 3, 15), float64] {
  %1148 = fn () -> Tensor[(1, 3, 15), float64] {
    %1147 = @func_3136() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %1147.0
  };
  %1148() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_6641() -> (Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) {
  @func_6639() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64]) */
}

def @func_6034() -> (Tensor[(1, 3, 15), float64],) {
  %1149 = @func_4222() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64]) */;
  %1150 = %1149.0;
  (%1150,)
}

def @func_2730() -> Tensor[(1, 3, 15), float64] {
  %1151 = @func_2502() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
  %1151.1
}

def @func_8412(%var_8410: Tensor[(6), uint32]) -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) {
  @func_8409(%var_8410) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) */
}

def @func_6368(%var_6352: Tensor[(28), float32]) -> (Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(28), float32], Tensor[(1, 3, 15), float64]) {
  %1152 = @func_4222() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64]) */;
  %1153 = cast(%var_6352, dtype="float32") /* ty=Tensor[(28), float32] */;
  %1154 = %1152.1;
  %1155 = cast(%1154, dtype="uint32") /* ty=Tensor[(2, 1, 3), uint32] */;
  %1156 = reshape(%1153, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), float32] */;
  %1157 = reshape(%1155, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %1158 = @func_2397(%1156, %1157) /* ty=(Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 14), float64], Tensor[(1, 3, 15), float64]) */;
  %1159 = @func_960() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %1160 = %1158.1;
  %1161 = %1159.0;
  (%1154, %1160, %var_6352, %1161)
}

def @func_8747() -> (Tensor[(6, 1), uint32],) {
  %1162 = @func_7893() /* ty=(Tensor[(6, 1), uint32], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
  %1163 = %1162.0;
  (%1163,)
}

def @func_11043() -> (Tensor[(1, 3, 15), float64],) {
  %1164 = @func_5928() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %1165 = %1164.0;
  (%1165,)
}

def @func_7125() -> (Tensor[(6, 1), uint32],) {
  @func_7123() /* ty=(Tensor[(6, 1), uint32],) */
}

def @func_9931(%var_9930: Tensor[(12, 15, 7), float32]) -> Tensor[(12, 15, 7), uint16] {
  %1171 = fn (%var_9923: Tensor[(12, 15, 7), float32]) -> Tensor[(12, 15, 7), uint16] {
    %1166 = @func_5571() /* ty=Tensor[(12, 15, 7), float32] */;
    %1167 = cast(%var_9923, dtype="uint16") /* ty=Tensor[(12, 15, 7), uint16] */;
    %1168 = shape_of(%1166, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1169 = cast(%1166, dtype="uint16") /* ty=Tensor[(12, 15, 7), uint16] */;
    %1170 = dyn.reshape(%1167, %1168, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    multiply(%1169, %1170) /* ty=Tensor[(12, 15, 7), uint16] */
  };
  %1171(%var_9930) /* ty=Tensor[(12, 15, 7), uint16] */
}

def @func_7472() -> (Tensor[(12, 4, 1), float32],) {
  %1176 = fn () -> (Tensor[(12, 4, 1), float32],) {
    %1172 = cast(meta[relay.Constant][51] /* ty=Tensor[(12, 4, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 4, 1), float64] */;
    %1173 = rsqrt(%1172) /* ty=Tensor[(12, 4, 1), float64] */;
    %1174 = cast(%1173, dtype="float32") /* ty=Tensor[(12, 4, 1), float32] */;
    %1175 = log(%1174) /* ty=Tensor[(12, 4, 1), float32] */;
    (%1175,)
  };
  %1176() /* ty=(Tensor[(12, 4, 1), float32],) */
}

def @func_8122(%var_8120: Tensor[(1650), float32]) -> (Tensor[(1, 3, 15), float64], Tensor[(1650), uint16], Tensor[(1650), float32], Tensor[(15, 13, 12), int64], Tensor[(2340), int64], Tensor[(?, 9, 15), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 3, 15), float64], Tensor[(405), float64], Tensor[(11, 10, 15), float32]) {
  @func_8119(%var_8120) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1650), uint16], Tensor[(1650), float32], Tensor[(15, 13, 12), int64], Tensor[(2340), int64], Tensor[(?, 9, 15), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 3, 15), float64], Tensor[(405), float64], Tensor[(11, 10, 15), float32]) */
}

def @func_3137() -> (Tensor[(1, 3, 15), float64],) {
  %1179 = fn () -> (Tensor[(1, 3, 15), float64],) {
    %1177 = @func_2502() /* ty=(Tensor[(?, 3, 15), int64], Tensor[(1, 3, 15), float64]) */;
    %1178 = %1177.1;
    (%1178,)
  };
  %1179() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_10931() -> (Tensor[(11, 10, 15), float32],) {
  %1180 = @func_8030() /* ty=(Tensor[(11, 10, 15), float32],) */;
  %1181 = %1180.0;
  (%1181,)
}

def @func_7123() -> (Tensor[(6, 1), uint32],) {
  %1182 = @func_6584() /* ty=Tensor[(6, 1), uint32] */;
  (%1182,)
}

def @func_10497(%var_10495: Tensor[(7, 3, 9), float32]) -> (Tensor[(7, 3, 9), float32], Tensor[(1, 3, 15), float64]) {
  @func_10494(%var_10495) /* ty=(Tensor[(7, 3, 9), float32], Tensor[(1, 3, 15), float64]) */
}

def @func_5676() -> (Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) {
  %1186 = fn () -> (Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) {
    %1183 = @func_1307() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6, 1), uint32], Tensor[(6), uint32]) */;
    %1184 = %1183.0;
    %1185 = @func_5571() /* ty=Tensor[(12, 15, 7), float32] */;
    (%1184, %1185)
  };
  %1186() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(12, 15, 7), float32]) */
}

def @func_9848() -> (Tensor[(12, 15, 7), float32], Tensor[(6), uint32]) {
  %1191 = fn () -> (Tensor[(12, 15, 7), float32], Tensor[(6), uint32]) {
    %1187 = @func_8605() /* ty=(Tensor[(12, 15, 7), float64], Tensor[(12, 15, 7), float32]) */;
    %1188 = @func_6195() /* ty=(Tensor[(1, 3, 15), float64], Tensor[(6), uint32], Tensor[(72), float32]) */;
    %1189 = %1187.1;
    %1190 = %1188.1;
    (%1189, %1190)
  };
  %1191() /* ty=(Tensor[(12, 15, 7), float32], Tensor[(6), uint32]) */
}

def @func_6937() -> (Tensor[(1, 3, 15), float64],) {
  %1192 = @func_1266() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %1193 = %1192.0;
  (%1193,)
}

def @func_10303(%var_10301: Tensor[(11, 16, 10), int32], %var_10302: Tensor[(11, 16, 10), int32]) -> (Tensor[(11, 16, 10), int32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) {
  @func_10299(%var_10301, %var_10302) /* ty=(Tensor[(11, 16, 10), int32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) */
}

def @func_7327() -> (Tensor[(1650), float32],) {
  @func_7325() /* ty=(Tensor[(1650), float32],) */
}

def @func_8307() -> (Tensor[(270), float64], Tensor[(11, 10, 15), float32], Tensor[(1650), float32], Tensor[(1, 3, 15), float64], Tensor[(6), uint32]) {
  %1194 = @func_6744() /* ty=(Tensor[(6, 1), uint32], Tensor[(270), float64], Tensor[(270), float64], Tensor[(12, 15, 7), float32], Tensor[(?, 3, 15), uint8]) */;
  %1195 = cast(meta[relay.Constant][52] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %1196 = reshape(%1195, newshape=[11, 10, 15]) /* ty=Tensor[(11, 10, 15), float32] */;
  %1197 = cast(meta[relay.Constant][53] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %1198 = reshape(%1197, newshape=[6]) /* ty=Tensor[(6), uint32] */;
  %1199 = @func_6483(%1198) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32], Tensor[(1, 3, 15), float64]) */;
  %1200 = %1194.2;
  %1201 = @func_318(%1196) /* ty=Tensor[(11, 10, 15), float32] */;
  %1202 = %1199.0;
  (%1200, %1201, meta[relay.Constant][52] /* ty=Tensor[(1650), float32] */, %1202, meta[relay.Constant][53] /* ty=Tensor[(6), uint32] */)
}

def @func_1770() -> (Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6), uint32]) {
  %1203 = @func_1351() /* ty=Tensor[(1, 3, 15), float64] */;
  %1204 = cast(%1203, dtype="float64") /* ty=Tensor[(1, 3, 15), float64] */;
  %1205 = sigmoid(%1204) /* ty=Tensor[(1, 3, 15), float64] */;
  %1206 = cast(%1205, dtype="float64") /* ty=Tensor[(1, 3, 15), float64] */;
  %1207 = cast(meta[relay.Constant][54] /* ty=Tensor[(6), uint32] */, dtype="uint32") /* ty=Tensor[(6), uint32] */;
  %1208 = reshape(%1207, newshape=[6, 1]) /* ty=Tensor[(6, 1), uint32] */;
  %1209 = @func_1033(%1208) /* ty=(Tensor[(1, 3, 15), float64], Tensor[(2, 1, 3), float64], Tensor[(6, 1), uint32], Tensor[(2, 1, 3), float64], Tensor[(9, 7, 2), int16], Tensor[(126), int16]) */;
  %1210 = erf(%1206) /* ty=Tensor[(1, 3, 15), float64] */;
  %1211 = %1209.3;
  (%1210, %1211, meta[relay.Constant][54] /* ty=Tensor[(6), uint32] */)
}

def @func_8915() -> Tensor[(1, 3, 15), float64] {
  @func_8913() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_5028() -> (Tensor[(1, 3, 15), float64],) {
  %1214 = fn () -> (Tensor[(1, 3, 15), float64],) {
    %1212 = @func_3947() /* ty=(Tensor[(1, 3, 15), float64],) */;
    %1213 = %1212.0;
    (%1213,)
  };
  %1214() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_8194(%var_8193: Tensor[(11, 3, 15), float64]) -> (Tensor[(11, 3, 15), int32], Tensor[(11, 3, 15), bool]) {
  %1223 = fn (%var_8175: Tensor[(11, 3, 15), float64]) -> (Tensor[(11, 3, 15), int32], Tensor[(11, 3, 15), bool]) {
    %1215 = @func_1684() /* ty=(Tensor[(?, 3, 15), uint8], Tensor[(9, 7, 2), int16], Tensor[(1, 126), int16], Tensor[(1, 3, 15), float64], Tensor[(9, 7, 2), int16], Tensor[(1, 3, 15), float64]) */;
    %1216 = %1215.3;
    %1217 = cast(%1216, dtype="int32") /* ty=Tensor[(1, 3, 15), int32] */;
    %1218 = cast(%var_8175, dtype="int32") /* ty=Tensor[(11, 3, 15), int32] */;
    %1219 = cast(%var_8175, dtype="bool") /* ty=Tensor[(11, 3, 15), bool] */;
    %1220 = cast(%1216, dtype="bool") /* ty=Tensor[(1, 3, 15), bool] */;
    %1221 = add(%1217, %1218) /* ty=Tensor[(11, 3, 15), int32] */;
    %1222 = greater(%1219, %1220) /* ty=Tensor[(11, 3, 15), bool] */;
    (%1221, %1222)
  };
  %1223(%var_8193) /* ty=(Tensor[(11, 3, 15), int32], Tensor[(11, 3, 15), bool]) */
}

def @func_1353() -> Tensor[(1, 3, 15), float64] {
  @func_1351() /* ty=Tensor[(1, 3, 15), float64] */
}

def @func_8626() -> Tensor[(12, 15, 7), float32] {
  %1224 = @func_8605() /* ty=(Tensor[(12, 15, 7), float64], Tensor[(12, 15, 7), float32]) */;
  %1224.1
}

def @func_3171() -> (Tensor[(1, 3, 15), float64],) {
  @func_3169() /* ty=(Tensor[(1, 3, 15), float64],) */
}

def @func_9808() -> Tensor[(1, 3, 15), float64] {
  %1225 = @func_5027() /* ty=(Tensor[(1, 3, 15), float64],) */;
  %1225.0
}

def @func_11526() -> Tensor[(1, 3, 15), float64] {
  @func_2730() /* ty=Tensor[(1, 3, 15), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The Relay type checker is unable to show the following types match.
In particular `Tensor[(3), int32]` does not match `Tensor[(?, 3, 15), uint8]`

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

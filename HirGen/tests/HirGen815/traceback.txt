==========mod==========
#[version = "0.0.5"]
def @func_15262() -> Tensor[(7, 11, 3), float32] {
  %0 = @func_5968() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %0.0
}

def @func_7138() -> (Tensor[(7, 11, 3), float32],) {
  %1 = @func_5923() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1,)
}

def @func_3857() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %2 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %3 = @func_2741() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %4 = %2.0;
  %5 = %3.0;
  (%4, %5)
}

def @func_2741() -> (Tensor[(7, 11, 3), float32],) {
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(7, 11, 3), float32] */, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %7 = atanh(%6) /* ty=Tensor[(7, 11, 3), float32] */;
  (%7,)
}

def @func_18230() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 16, 2), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %8 = @func_12123() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %9 = @func_7728() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %10 = @func_14459() /* ty=(Tensor[(7, 16, 2), float64], Tensor[(7, 16, 2), float64]) */;
  %11 = @func_16781() /* ty=(Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */;
  %12 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %13 = %8.0;
  %14 = %9.3;
  %15 = %10.0;
  %16 = %11.1;
  %17 = %12.0;
  %18 = @func_16590() /* ty=Tensor[(7, 11, 3), float32] */;
  (%13, %14, %15, %16, %17, %18)
}

def @func_19982() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %19 = @func_9507() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %20 = %19.0;
  %21 = @func_7007() /* ty=Tensor[(7, 11, 3), float32] */;
  (%20, %21)
}

def @func_6447() -> Tensor[(7, 11, 3), float64] {
  %22 = @func_5968() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %23 = %22.0;
  %24 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 11, 3), float32] */, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
  %25 = shape_of(%23, dtype="int32") /* ty=Tensor[(3), int32] */;
  %26 = cast(%23, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%26, %27) /* ty=Tensor[(7, 11, 3), float64] */
}

def @func_10692() -> (Tensor[(7, 11, 3), float64],) {
  %28 = @func_8195() /* ty=Tensor[(7, 11, 3), float64] */;
  (%28,)
}

def @func_10283() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %29 = @func_9467() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %30 = @func_6641() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %31 = %29.0;
  %32 = %30.0;
  (%31, %32)
}

def @func_10772() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float64], Tensor[(208, 4), float32], Tensor[(15, 6, 4), uint32], Tensor[(180, 2), uint32], Tensor[(7, 11, 3), float32]) {
  %33 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %34 = cast(meta[relay.Constant][2] /* ty=Tensor[(208, 4), float32] */, dtype="float32") /* ty=Tensor[(208, 4), float32] */;
  %35 = reshape(%34, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %36 = @func_10224(%35) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float64], Tensor[(7, 11, 3), float32], Tensor[(15, 6, 4), uint32], Tensor[(360), uint32], Tensor[(7, 11, 3), float64]) */;
  %37 = cast(meta[relay.Constant][3] /* ty=Tensor[(180, 2), uint32] */, dtype="uint32") /* ty=Tensor[(180, 2), uint32] */;
  %38 = cast(meta[relay.Constant][3] /* ty=Tensor[(180, 2), uint32] */, dtype="uint32") /* ty=Tensor[(180, 2), uint32] */;
  %39 = reshape(%37, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), uint32] */;
  %40 = reshape(%38, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), uint32] */;
  %41 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %42 = @func_9120() /* ty=Tensor[(7, 11, 3), float32] */;
  %43 = %33.0;
  %44 = %36.2;
  %45 = @func_6684(%39, %40) /* ty=Tensor[(15, 6, 4), uint32] */;
  %46 = %41.0;
  (%42, %43, %44, meta[relay.Constant][2] /* ty=Tensor[(208, 4), float32] */, %45, meta[relay.Constant][3] /* ty=Tensor[(180, 2), uint32] */, %46)
}

def @func_670(%var_641: Tensor[(13, 7, 5), float32], %var_642: Tensor[(13, 7, 5), float32]) -> Tensor[(13, 7, 5), float32] {
  %47 = cast(%var_642, dtype="float32") /* ty=Tensor[(13, 7, 5), float32] */;
  %48 = shape_of(%var_641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%var_641, dtype="float32") /* ty=Tensor[(13, 7, 5), float32] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%49, %50) /* ty=Tensor[(13, 7, 5), float32] */
}

def @func_21375() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %51 = @func_9415() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */;
  %52 = %51.0;
  %53 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  (%52, %53)
}

def @func_17187() -> (Tensor[(7, 11, 3), float32],) {
  %54 = @func_13381() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %55 = %54.0;
  (%55,)
}

def @func_23939(%var_23930: Tensor[(208, 4), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(450), uint32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(208, 4), float32]) {
  %56 = @func_21959() /* ty=(Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) */;
  %57 = @func_19543() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(450), uint32]) */;
  %58 = @func_12664() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %59 = cast(%var_23930, dtype="float32") /* ty=Tensor[(208, 4), float32] */;
  %60 = reshape(%59, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %61 = @func_20327(%60) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(108), float32], Tensor[(832), float32]) */;
  %62 = %56.1;
  %63 = %57.3;
  %64 = %58.0;
  %65 = %61.0;
  (%62, %63, %64, %65, %var_23930)
}

def @func_20365() -> (Tensor[(9, 4), uint32], Tensor[(7, 11, 3), float32]) {
  %66 = @func_12036() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(9, 4), uint32]) */;
  %67 = @func_17842() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %68 = %66.2;
  %69 = %67.0;
  (%68, %69)
}

def @func_14696() -> (Tensor[(7, 11, 3), float32],) {
  %70 = @func_11492() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32]) */;
  %71 = %70.0;
  (%71,)
}

def @func_14234(%var_14201: Tensor[(1, 832), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1, 832), float32]) {
  %72 = @func_6607() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %73 = @func_9610() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %74 = cast(%var_14201, dtype="float32") /* ty=Tensor[(1, 832), float32] */;
  %75 = reshape(%74, newshape=[832, 1]) /* ty=Tensor[(832, 1), float32] */;
  %76 = @func_4769(%75) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832, 1), float32]) */;
  %77 = %72.0;
  %78 = %73.0;
  %79 = %76.0;
  (%77, %78, %79, %var_14201)
}

def @func_9446() -> (Tensor[(7, 11, 3), float32],) {
  %80 = @func_9019() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %81 = %80.0;
  (%81,)
}

def @func_5309() -> Tensor[(7, 11, 3), float32] {
  @func_5035() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_18489() -> Tensor[(14, 15, 7), float32] {
  %82 = @func_12834() /* ty=(Tensor[(14, 15, 7), float32],) */;
  %82.0
}

def @func_21272() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  %83 = @func_19346() /* ty=Tensor[(7, 11, 3), float32] */;
  %84 = @func_20248() /* ty=Tensor[(7, 11, 3), float64] */;
  (%83, %84)
}

def @func_21925(%var_21901: Tensor[(60), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(6, 10, 1), float64], Tensor[(60), float64]) {
  %85 = @func_4720() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
  %86 = @func_19096() /* ty=(Tensor[(14, 15, 7), float32],) */;
  %87 = cast(%var_21901, dtype="float64") /* ty=Tensor[(60), float64] */;
  %88 = reshape(%87, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %89 = %85.0;
  %90 = %86.0;
  %91 = @func_7252(%88) /* ty=Tensor[(6, 10, 1), float64] */;
  (%89, %90, %91, %var_21901)
}

def @func_8578() -> Tensor[(7, 11, 3), float32] {
  @func_7007() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_21785() -> Tensor[(7, 11, 3), float32] {
  %92 = @func_12610() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %92.0
}

def @func_22884() -> (Tensor[(14, 4, 2), float64], Tensor[(6, 3, 16), uint64]) {
  %93 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 4, 2), float64] */, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %94 = acosh(%93) /* ty=Tensor[(14, 4, 2), float64] */;
  %95 = @func_6720() /* ty=Tensor[(6, 3, 16), uint64] */;
  (%94, %95)
}

def @func_2794() -> (Tensor[(7, 11, 3), float32],) {
  %96 = @func_2741() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %97 = %96.0;
  (%97,)
}

def @func_6641() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %98 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %99 = @func_6201() /* ty=Tensor[(7, 11, 3), float32] */;
  %100 = %98.0;
  (%99, %100)
}

def @func_2013(%var_2007: Tensor[(4, 9, 3), float32]) -> (Tensor[(4, 9, 3), float32],) {
  %101 = cast(%var_2007, dtype="float32") /* ty=Tensor[(4, 9, 3), float32] */;
  %102 = sinh(%101) /* ty=Tensor[(4, 9, 3), float32] */;
  (%102,)
}

def @func_18304() -> (Tensor[(7, 11, 3), float64],) {
  %103 = @func_8565() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %104 = %103.0;
  (%104,)
}

def @func_22115(%var_22026: Tensor[(11, 5, 13), float64], %var_22027: Tensor[(11, 5, 13), float64]) -> (Tensor[(11, 5, 13), bool], Tensor[(7, 16, 2), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(11, 5, 13), float32], Tensor[(7, 11, 3), float32]) {
  %105 = cast(%var_22027, dtype="float64") /* ty=Tensor[(11, 5, 13), float64] */;
  %106 = shape_of(%var_22026, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%var_22026, dtype="float64") /* ty=Tensor[(11, 5, 13), float64] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %109 = floor_mod(%107, %108) /* ty=Tensor[(11, 5, 13), float64] */;
  %110 = cast(%var_22026, dtype="bool") /* ty=Tensor[(11, 5, 13), bool] */;
  %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%109, dtype="bool") /* ty=Tensor[(11, 5, 13), bool] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %114 = @func_14459() /* ty=(Tensor[(7, 16, 2), float64], Tensor[(7, 16, 2), float64]) */;
  %115 = @func_16781() /* ty=(Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */;
  %116 = @func_20734() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %117 = cast(%var_22027, dtype="float64") /* ty=Tensor[(11, 5, 13), float64] */;
  %118 = log2(%117) /* ty=Tensor[(11, 5, 13), float64] */;
  %119 = cast(%118, dtype="float32") /* ty=Tensor[(11, 5, 13), float32] */;
  %120 = greater(%112, %113) /* ty=Tensor[(11, 5, 13), bool] */;
  %121 = %114.0;
  %122 = %115.0;
  %123 = @func_13709() /* ty=Tensor[(7, 11, 3), bool] */;
  %124 = @func_6547() /* ty=Tensor[(7, 11, 3), float32] */;
  %125 = %116.0;
  %126 = sin(%119) /* ty=Tensor[(11, 5, 13), float32] */;
  %127 = @func_5309() /* ty=Tensor[(7, 11, 3), float32] */;
  (%120, %121, %122, %123, %124, %125, %126, %127)
}

def @func_5745() -> (Tensor[(7, 11, 3), float32],) {
  %128 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %129 = %128.0;
  (%129,)
}

def @func_7252(%var_7243: Tensor[(6, 10, 1), float64]) -> Tensor[(6, 10, 1), float64] {
  %130 = cast(%var_7243, dtype="float64") /* ty=Tensor[(6, 10, 1), float64] */;
  cos(%130) /* ty=Tensor[(6, 10, 1), float64] */
}

def @func_17777() -> (Tensor[(7, 11, 3), float32],) {
  %131 = @func_16979() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %132 = %131.1;
  (%132,)
}

def @func_5820() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %133 = @func_5064() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %134 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %135 = %133.1;
  %136 = %134.0;
  (%135, %136)
}

def @func_15542() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %137 = @func_13021() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) */;
  %138 = @func_9242() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %139 = @func_6474() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %140 = %137.1;
  %141 = %138.0;
  %142 = %139.2;
  (%140, %141, %142)
}

def @func_11097() -> (Tensor[(4, 9, 3), float32], Tensor[(1470), float32], Tensor[(216, 4), int16], Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32]) {
  %143 = @func_5890() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */;
  %144 = cast(meta[relay.Constant][5] /* ty=Tensor[(216, 4), int16] */, dtype="int16") /* ty=Tensor[(216, 4), int16] */;
  %145 = reshape(%144, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), int16] */;
  %146 = @func_10393(%145) /* ty=(Tensor[(9, 8, 12), int32], Tensor[(5, 4, 4), float64], Tensor[(80), float64], Tensor[(9, 8, 12), float64], Tensor[(1470), float32], Tensor[(1470), float32]) */;
  %147 = @func_5662() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */;
  %148 = %147.1;
  %149 = cast(%148, dtype="float32") /* ty=Tensor[(14, 15, 7), float32] */;
  %150 = @func_6607() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %151 = %146.5;
  %152 = cast(%151, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %153 = reshape(%152, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
  %154 = @func_4510(%153) /* ty=(Tensor[(13, 13, 4), int8], Tensor[(676), int8], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) */;
  %155 = @func_5968() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %156 = %143.1;
  %157 = @func_7418() /* ty=Tensor[(7, 11, 3), float32] */;
  %158 = erf(%149) /* ty=Tensor[(14, 15, 7), float32] */;
  %159 = %150.0;
  %160 = %154.0;
  %161 = %155.0;
  (%156, %151, meta[relay.Constant][5] /* ty=Tensor[(216, 4), int16] */, %157, %158, %159, %160, %161)
}

def @func_18397(%var_18374: Tensor[(14, 105), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(14, 105), float32]) {
  %162 = @func_9415() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */;
  %163 = cast(%var_18374, dtype="float32") /* ty=Tensor[(14, 105), float32] */;
  %164 = reshape(%163, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %165 = @func_11547(%164) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(676), bool], Tensor[(1470), float32]) */;
  %166 = %162.1;
  %167 = %165.1;
  (%166, %167, %var_18374)
}

def @func_11413() -> (Tensor[(1470), float32],) {
  %168 = @func_8036() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(36), uint32], Tensor[(1470), float32], Tensor[(1, 676), int8]) */;
  %169 = %168.2;
  (%169,)
}

def @func_11492() -> (Tensor[(7, 11, 3), float32], Tensor[(455), float32]) {
  %170 = @func_4720() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
  %171 = @func_5035() /* ty=Tensor[(7, 11, 3), float32] */;
  %172 = %170.2;
  (%171, %172)
}

def @func_6607() -> (Tensor[(7, 11, 3), float32],) {
  %173 = @func_5588() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %174 = %173.0;
  (%174,)
}

def @func_21162() -> (Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32]) {
  %175 = @func_9120() /* ty=Tensor[(7, 11, 3), float32] */;
  %176 = @func_18489() /* ty=Tensor[(14, 15, 7), float32] */;
  (%175, %176)
}

def @func_17627(%var_17580: float32, %var_17581: Tensor[(10, 10, 5), float32]) -> (Tensor[(10, 10, 5), float32], Tensor[(7, 11, 3), float32]) {
  %177 = cast(%var_17580, dtype="float32") /* ty=float32 */;
  %178 = cast(%var_17581, dtype="float32") /* ty=Tensor[(10, 10, 5), float32] */;
  %179 = @func_9656() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %180 = floor_mod(%177, %178) /* ty=Tensor[(10, 10, 5), float32] */;
  %181 = %179.0;
  (%180, %181)
}

def @func_19712() -> (Tensor[(7, 11, 3), float32],) {
  %182 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %183 = %182.0;
  (%183,)
}

def @func_14829() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) {
  %184 = @func_11274() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %185 = @func_3991() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %186 = %184.1;
  %187 = %185.0;
  %188 = @func_8195() /* ty=Tensor[(7, 11, 3), float64] */;
  (%186, %187, %188)
}

def @func_17893() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %189 = @func_11274() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %190 = @func_13463() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %191 = %189.0;
  %192 = @func_13412() /* ty=Tensor[(7, 11, 3), float32] */;
  %193 = %190.0;
  (%191, %192, %193)
}

def @func_13381() -> (Tensor[(7, 11, 3), float32],) {
  %194 = @func_9591() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %195 = %194.0;
  (%195,)
}

def @func_14274() -> Tensor[(7, 11, 3), float32] {
  %196 = @func_11492() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32]) */;
  %196.0
}

def @func_5588() -> (Tensor[(7, 11, 3), float32],) {
  %197 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %198 = %197.1;
  (%198,)
}

def @func_18865() -> (Tensor[(36), uint32],) {
  %199 = @func_8036() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(36), uint32], Tensor[(1470), float32], Tensor[(1, 676), int8]) */;
  %200 = %199.1;
  (%200,)
}

def @func_21184() -> (Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), float32]) {
  %201 = @func_12818() /* ty=(Tensor[(7, 11, 3), int8],) */;
  %202 = @func_20741() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %203 = %201.0;
  %204 = %202.0;
  (%203, %204)
}

def @func_3482() -> (Tensor[(7, 11, 3), float32],) {
  %205 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %206 = %205.0;
  %207 = cast(%206, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
  %208 = sigmoid(%207) /* ty=Tensor[(7, 11, 3), float64] */;
  %209 = cast(%208, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %210 = sqrt(%209) /* ty=Tensor[(7, 11, 3), float32] */;
  (%210,)
}

def @func_12410() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %211 = @func_7525() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %212 = @func_7939() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */;
  %213 = %211.0;
  %214 = %212.3;
  (%213, %214)
}

def @func_19144() -> Tensor[(7, 11, 3), float32] {
  %215 = @func_7463() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %215.0
}

def @func_9242() -> (Tensor[(7, 11, 3), float32],) {
  %216 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %217 = %216.0;
  (%217,)
}

def @func_16781() -> (Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) {
  %218 = @func_12834() /* ty=(Tensor[(14, 15, 7), float32],) */;
  %219 = @func_13564() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %220 = %218.0;
  %221 = %219.0;
  (%220, %221)
}

def @func_4154() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  %222 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %223 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %224 = %223.0;
  %225 = cast(%224, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
  %226 = %222.1;
  %227 = tan(%225) /* ty=Tensor[(7, 11, 3), float64] */;
  (%226, %227)
}

def @func_21959() -> (Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) {
  %228 = @func_13709() /* ty=Tensor[(7, 11, 3), bool] */;
  %229 = @func_9484() /* ty=Tensor[(7, 11, 3), float32] */;
  (%228, %229)
}

def @func_19944() -> Tensor[(7, 11, 3), float32] {
  %230 = @func_11020() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %230.0
}

def @func_16011() -> (Tensor[(7, 11, 3), float32],) {
  %231 = @func_13564() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %232 = %231.0;
  (%232,)
}

def @func_22260() -> Tensor[(7, 11, 3), float32] {
  %233 = @func_7939() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */;
  %233.6
}

def @func_18431() -> Tensor[(7, 11, 3), float32] {
  %234 = @func_13463() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %234.0
}

def @func_11426() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %235 = @func_11162() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %236 = @func_8869() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %237 = %235.0;
  %238 = %236.0;
  %239 = @func_6547() /* ty=Tensor[(7, 11, 3), float32] */;
  (%237, %238, %239)
}

def @func_11020() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %240 = @func_6959() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(14, 105), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %241 = @func_4014() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %242 = %240.3;
  %243 = %241.1;
  (%242, %243)
}

def @func_12692() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  %244 = @func_12036() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(9, 4), uint32]) */;
  %245 = @func_6733() /* ty=Tensor[(7, 11, 3), float32] */;
  %246 = %244.0;
  %247 = @func_6547() /* ty=Tensor[(7, 11, 3), float32] */;
  (%245, %246, %247)
}

def @func_7463() -> (Tensor[(7, 11, 3), float32],) {
  %248 = @func_5745() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %249 = %248.0;
  (%249,)
}

def @func_8268() -> Tensor[(7, 11, 3), float32] {
  %250 = @func_5662() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */;
  %250.2
}

def @func_9793(%var_9786: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(1470), float32], Tensor[(676), int8], Tensor[(7, 11, 3), float32]) {
  %251 = @func_6474() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %252 = cast(%var_9786, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %253 = cast(meta[relay.Constant][6] /* ty=Tensor[(676), int8] */, dtype="int8") /* ty=Tensor[(676), int8] */;
  %254 = reshape(%252, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
  %255 = reshape(%253, newshape=[676]) /* ty=Tensor[(676), int8] */;
  %256 = @func_3173(%254, %255) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(455), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 13, 4), float32], Tensor[(676), int8]) */;
  %257 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %258 = %251.2;
  %259 = %256.1;
  %260 = %257.0;
  (%258, %259, %var_9786, meta[relay.Constant][6] /* ty=Tensor[(676), int8] */, %260)
}

def @func_19490() -> (Tensor[(7, 11, 3), float32],) {
  %261 = @func_17983() /* ty=Tensor[(7, 11, 3), float32] */;
  (%261,)
}

def @func_9467() -> (Tensor[(7, 11, 3), float32],) {
  %262 = @func_6474() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %263 = %262.0;
  (%263,)
}

def @func_16241() -> (Tensor[(7, 11, 3), float32],) {
  %264 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %265 = %264.0;
  (%265,)
}

def @func_20248() -> Tensor[(7, 11, 3), float64] {
  %266 = @func_12123() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %266.0
}

def @func_7110() -> (Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) {
  %267 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %268 = %267.0;
  %269 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 11, 3), float32] */, dtype="bool") /* ty=Tensor[(7, 11, 3), bool] */;
  %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%268, dtype="bool") /* ty=Tensor[(7, 11, 3), bool] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %273 = logical_and(%271, %272) /* ty=Tensor[(7, 11, 3), bool] */;
  %274 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  (%273, %274)
}

def @func_12095() -> Tensor[(7, 11, 3), float32] {
  @func_5497() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_15591() -> (Tensor[(7, 11, 3), float32],) {
  %275 = @func_14943() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %276 = %275.1;
  (%276,)
}

def @func_13308() -> Tensor[(6, 3, 16), uint64] {
  %277 = @func_10029() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(6, 3, 16), uint64]) */;
  %277.1
}

def @func_15087() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %278 = @func_14887() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %279 = %278.0;
  %280 = @func_8268() /* ty=Tensor[(7, 11, 3), float32] */;
  (%279, %280)
}

def @func_17270() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %281 = @func_16241() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %282 = @func_7166() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %283 = %281.0;
  %284 = %282.0;
  (%283, %284)
}

def @func_18277() -> Tensor[(7, 11, 3), float32] {
  %285 = @func_7138() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %285.0
}

def @func_5834() -> Tensor[(7, 11, 3), float32] {
  %286 = @func_3687() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %286.0
}

def @func_3771(%var_3761: Tensor[(7, 11, 3), float32]) -> Tensor[(7, 11, 3), int8] {
  %287 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %288 = %287.0;
  %289 = cast(%var_3761, dtype="int8") /* ty=Tensor[(7, 11, 3), int8] */;
  %290 = shape_of(%288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%288, dtype="int8") /* ty=Tensor[(7, 11, 3), int8] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  minimum(%291, %292) /* ty=Tensor[(7, 11, 3), int8] */
}

def @func_3796() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
  %293 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %294 = cast(meta[relay.Constant][8] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %295 = reshape(%294, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %296 = @func_3617(%295) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %297 = %293.0;
  %298 = %296.1;
  (%297, %298, meta[relay.Constant][8] /* ty=Tensor[(1470), float32] */)
}

def @func_19214(%var_19151: Tensor[(2, 1, 11), float64]) -> (Tensor[(1470), float32], Tensor[(2, 12, 11), uint16], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %299 = @func_11207() /* ty=(Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %300 = cast(%var_19151, dtype="float64") /* ty=Tensor[(2, 1, 11), float64] */;
  %301 = cos(%300) /* ty=Tensor[(2, 1, 11), float64] */;
  %302 = cast(%301, dtype="float32") /* ty=Tensor[(2, 1, 11), float32] */;
  %303 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 12, 11), float64] */, dtype="float32") /* ty=Tensor[(2, 12, 11), float32] */;
  %304 = mod(%302, %303) /* ty=Tensor[(2, 12, 11), float32] */;
  %305 = cast(%304, dtype="uint16") /* ty=Tensor[(2, 12, 11), uint16] */;
  %306 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(2, 12, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 12, 11), float64] */, dtype="uint16") /* ty=Tensor[(2, 12, 11), uint16] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %309 = @func_7166() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %310 = %299.2;
  %311 = left_shift(%307, %308) /* ty=Tensor[(2, 12, 11), uint16] */;
  %312 = %309.1;
  %313 = @func_16951() /* ty=Tensor[(7, 11, 3), float32] */;
  (%310, %311, %312, %313)
}

def @func_12897(%var_12885: Tensor[(9, 6, 7), float32]) -> (Tensor[(9, 6, 7), float32],) {
  %314 = cast(%var_12885, dtype="float32") /* ty=Tensor[(9, 6, 7), float32] */;
  %315 = asin(%314) /* ty=Tensor[(9, 6, 7), float32] */;
  (%315,)
}

def @func_19547() -> Tensor[(6, 3, 16), uint64] {
  @func_6720() /* ty=Tensor[(6, 3, 16), uint64] */
}

def @func_9991() -> Tensor[(7, 11, 3), float64] {
  @func_6447() /* ty=Tensor[(7, 11, 3), float64] */
}

def @func_7418() -> Tensor[(7, 11, 3), float32] {
  %316 = @func_5745() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %316.0
}

def @func_11782(%var_11766: uint64, %var_11767: Tensor[(1, 14, 5), uint64]) -> (Tensor[(1, 14, 5), uint64],) {
  %317 = cast(%var_11766, dtype="uint64") /* ty=uint64 */;
  %318 = cast(%var_11767, dtype="uint64") /* ty=Tensor[(1, 14, 5), uint64] */;
  %319 = minimum(%317, %318) /* ty=Tensor[(1, 14, 5), uint64] */;
  (%319,)
}

def @func_3173(%var_3134: Tensor[(7, 210), float32], %var_3162: Tensor[(676), int8]) -> (Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(455), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 13, 4), float32], Tensor[(676), int8]) {
  %320 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %321 = cast(meta[relay.Constant][10] /* ty=Tensor[(36), uint32] */, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %322 = reshape(%321, newshape=[3, 3, 4]) /* ty=Tensor[(3, 3, 4), uint32] */;
  %323 = cast(%var_3134, dtype="float32") /* ty=Tensor[(7, 210), float32] */;
  %324 = reshape(%323, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float32] */;
  %325 = @func_2220(%324) /* ty=(Tensor[(14, 15, 7), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
  %326 = @func_2741() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %327 = %325.2;
  %328 = cast(%327, dtype="float32") /* ty=Tensor[(455), float32] */;
  %329 = cast(%327, dtype="float32") /* ty=Tensor[(455), float32] */;
  %330 = reshape(%328, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %331 = reshape(%329, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %332 = cast(%var_3134, dtype="float32") /* ty=Tensor[(7, 210), float32] */;
  %333 = reshape(%332, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float32] */;
  %334 = @func_2220(%333) /* ty=(Tensor[(14, 15, 7), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
  %335 = cast(%var_3162, dtype="int8") /* ty=Tensor[(676), int8] */;
  %336 = cast(%var_3134, dtype="float32") /* ty=Tensor[(7, 210), float32] */;
  %337 = reshape(%335, newshape=[13, 13, 4]) /* ty=Tensor[(13, 13, 4), int8] */;
  %338 = reshape(%336, newshape=[1, 1470]) /* ty=Tensor[(1, 1470), float32] */;
  %339 = @func_2818(%337, %338) /* ty=(Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(13, 13, 4), float32]) */;
  %340 = %320.0;
  %341 = @func_3044(%322) /* ty=Tensor[(3, 3, 4), uint32] */;
  %342 = %326.0;
  %343 = @func_670(%330, %331) /* ty=Tensor[(13, 7, 5), float32] */;
  %344 = %334.1;
  %345 = %339.3;
  (%340, %341, meta[relay.Constant][10] /* ty=Tensor[(36), uint32] */, %327, %var_3134, %342, %343, %344, %345, %var_3162)
}

def @func_16029() -> Tensor[(7, 11, 3), float32] {
  %346 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %346.1
}

def @func_12991() -> (Tensor[(7, 11, 3), float32],) {
  %347 = @func_5820() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %348 = %347.0;
  (%348,)
}

def @func_14887() -> (Tensor[(7, 11, 3), float32],) {
  %349 = @func_5968() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %350 = %349.0;
  (%350,)
}

def @func_13634() -> Tensor[(7, 11, 3), float32] {
  %351 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %351.0
}

def @func_12353() -> Tensor[(7, 11, 3), float32] {
  %352 = @func_5064() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %352.1
}

def @func_9928() -> Tensor[(7, 11, 3), float32] {
  %353 = @func_4661() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %353.2
}

def @func_12444(%var_12436: int32, %var_12437: Tensor[(8, 13, 1), int32]) -> Tensor[(8, 13, 1), int32] {
  %354 = cast(%var_12436, dtype="int32") /* ty=int32 */;
  %355 = cast(%var_12437, dtype="int32") /* ty=Tensor[(8, 13, 1), int32] */;
  logical_xor(%354, %355) /* ty=Tensor[(8, 13, 1), int32] */
}

def @func_20203() -> Tensor[(7, 11, 3), float32] {
  %356 = @func_17687() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %356.1
}

def @func_8565() -> (Tensor[(7, 11, 3), float64],) {
  %357 = @func_8195() /* ty=Tensor[(7, 11, 3), float64] */;
  (%357,)
}

def @func_17345(%var_17341: Tensor[(4, 2, 9), float32]) -> (Tensor[(4, 2, 9), float32],) {
  %358 = cast(%var_17341, dtype="float32") /* ty=Tensor[(4, 2, 9), float32] */;
  %359 = erf(%358) /* ty=Tensor[(4, 2, 9), float32] */;
  (%359,)
}

def @func_10558(%var_10527: Tensor[(15, 6, 5), uint32], %var_10528: Tensor[(15, 6, 5), uint32]) -> (Tensor[(15, 6, 5), float64], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) {
  %360 = cast(%var_10528, dtype="uint32") /* ty=Tensor[(15, 6, 5), uint32] */;
  %361 = shape_of(%var_10527, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%var_10527, dtype="uint32") /* ty=Tensor[(15, 6, 5), uint32] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %364 = bitwise_and(%362, %363) /* ty=Tensor[(15, 6, 5), uint32] */;
  %365 = cast(%364, dtype="float64") /* ty=Tensor[(15, 6, 5), float64] */;
  %366 = @func_8869() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %367 = cast(meta[relay.Constant][11] /* ty=Tensor[(676), int8] */, dtype="int8") /* ty=Tensor[(676), int8] */;
  %368 = cast(meta[relay.Constant][12] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %369 = reshape(%367, newshape=[13, 13, 4]) /* ty=Tensor[(13, 13, 4), int8] */;
  %370 = reshape(%368, newshape=[1, 1470]) /* ty=Tensor[(1, 1470), float32] */;
  %371 = @func_2818(%369, %370) /* ty=(Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(13, 13, 4), float32]) */;
  %372 = @func_9656() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %373 = log(%365) /* ty=Tensor[(15, 6, 5), float64] */;
  %374 = %366.0;
  %375 = %371.2;
  %376 = %372.0;
  (%373, %374, %375, meta[relay.Constant][11] /* ty=Tensor[(676), int8] */, meta[relay.Constant][12] /* ty=Tensor[(1470), float32] */, %376)
}

def @func_10880(%var_10859: Tensor[(36), uint32]) -> (Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32]) {
  %377 = cast(%var_10859, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %378 = reshape(%377, newshape=[3, 3, 4]) /* ty=Tensor[(3, 3, 4), uint32] */;
  %379 = @func_10301() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %380 = @func_5035() /* ty=Tensor[(7, 11, 3), float32] */;
  %381 = @func_3044(%378) /* ty=Tensor[(3, 3, 4), uint32] */;
  %382 = %379.0;
  (%380, %381, %var_10859, %382)
}

def @func_3269(%var_3266: Tensor[(1470), float32], %var_3267: Tensor[(676), int8]) -> (Tensor[(7, 11, 3), int16], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(676), int8]) {
  %383 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %384 = %383.0;
  %385 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 11, 3), float32] */, dtype="int16") /* ty=Tensor[(7, 11, 3), int16] */;
  %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%384, dtype="int16") /* ty=Tensor[(7, 11, 3), int16] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %389 = cast(%var_3266, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %390 = cast(%var_3267, dtype="int8") /* ty=Tensor[(676), int8] */;
  %391 = reshape(%389, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
  %392 = reshape(%390, newshape=[676]) /* ty=Tensor[(676), int8] */;
  %393 = @func_3173(%391, %392) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(455), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 13, 4), float32], Tensor[(676), int8]) */;
  %394 = bitwise_xor(%387, %388) /* ty=Tensor[(7, 11, 3), int16] */;
  %395 = %393.9;
  (%394, %395, %var_3266, %var_3267)
}

def @func_19346() -> Tensor[(7, 11, 3), float32] {
  %396 = @func_14872() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %396.0
}

def @func_18721() -> (Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(1, 455), float32]) {
  %397 = @func_11162() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %398 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 455), float32] */, dtype="float32") /* ty=Tensor[(1, 455), float32] */;
  %399 = reshape(%398, newshape=[13, 35]) /* ty=Tensor[(13, 35), float32] */;
  %400 = @func_9289(%399) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(455), bool]) */;
  %401 = %397.0;
  %402 = %400.2;
  (%401, %402, meta[relay.Constant][14] /* ty=Tensor[(1, 455), float32] */)
}

def @func_9289(%var_9268: Tensor[(13, 35), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(455), bool]) {
  %403 = cast(meta[relay.Constant][15] /* ty=Tensor[(36), uint32] */, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %404 = reshape(%403, newshape=[36]) /* ty=Tensor[(36), uint32] */;
  %405 = @func_7886(%404) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(36), uint32], Tensor[(1470), float32]) */;
  %406 = @func_8578() /* ty=Tensor[(7, 11, 3), float32] */;
  %407 = cast(%406, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %408 = cast(%var_9268, dtype="float32") /* ty=Tensor[(13, 35), float32] */;
  %409 = reshape(%407, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), float32] */;
  %410 = reshape(%408, newshape=[455]) /* ty=Tensor[(455), float32] */;
  %411 = @func_3582(%409, %410) /* ty=(Tensor[(7, 11, 3), uint64], Tensor[(13, 7, 5), float32], Tensor[(455), float32], Tensor[(13, 7, 5), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(7, 11, 3), float32]) */;
  %412 = %411.2;
  %413 = cast(%var_9268, dtype="bool") /* ty=Tensor[(13, 35), bool] */;
  %414 = shape_of(%412, dtype="int32") /* ty=Tensor[(1), int32] */;
  %415 = cast(%412, dtype="bool") /* ty=Tensor[(455), bool] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?), bool] */;
  %417 = %405.0;
  %418 = logical_and(%415, %416) /* ty=Tensor[(455), bool] */;
  (%406, %417, meta[relay.Constant][15] /* ty=Tensor[(36), uint32] */, %418)
}

def @func_18559(%var_18531: Tensor[(36), uint32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32]) {
  %419 = @func_11207() /* ty=(Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %420 = cast(%var_18531, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %421 = reshape(%420, newshape=[36]) /* ty=Tensor[(36), uint32] */;
  %422 = @func_10880(%421) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32]) */;
  %423 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %424 = %419.1;
  %425 = %422.0;
  %426 = %423.0;
  (%424, %425, %var_18531, %426)
}

def @func_22694() -> (Tensor[(7, 11, 3), float32],) {
  %427 = @func_21215() /* ty=Tensor[(7, 11, 3), float32] */;
  (%427,)
}

def @func_21750() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %428 = @func_19416() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %429 = @func_13815() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %430 = @func_18591() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %431 = @func_17236() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %432 = %428.0;
  %433 = %429.0;
  %434 = %430.0;
  %435 = %431.2;
  (%432, %433, %434, %435)
}

def @func_12610() -> (Tensor[(7, 11, 3), float32],) {
  %436 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %437 = %436.0;
  (%437,)
}

def @func_21336() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %438 = @func_18721() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(1, 455), float32]) */;
  %439 = %438.0;
  %440 = @func_8268() /* ty=Tensor[(7, 11, 3), float32] */;
  (%439, %440)
}

def @func_13534() -> Tensor[(7, 11, 3), float32] {
  %441 = @func_7138() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %441.0
}

def @func_19870(%var_19816: Tensor[(80), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(5, 4, 4), float64], Tensor[(80), float64], Tensor[(7, 11, 3), float32]) {
  %442 = @func_8660() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %443 = @func_7463() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %444 = @func_7525() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %445 = @func_18015() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %446 = @func_19624() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %447 = cast(%var_19816, dtype="float64") /* ty=Tensor[(80), float64] */;
  %448 = reshape(%447, newshape=[5, 4, 4]) /* ty=Tensor[(5, 4, 4), float64] */;
  %449 = @func_7218(%448) /* ty=(Tensor[(5, 4, 4), float64],) */;
  %450 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %451 = %442.0;
  %452 = %443.0;
  %453 = %444.0;
  %454 = %445.1;
  %455 = %446.0;
  %456 = %449.0;
  %457 = %450.1;
  (%451, %452, %453, %454, %455, %456, %var_19816, %457)
}

def @func_6404(%var_6391: Tensor[(108), float32]) -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(7, 11, 3), float32]) {
  %458 = @func_3991() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %459 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %460 = cast(%var_6391, dtype="float32") /* ty=Tensor[(108), float32] */;
  %461 = reshape(%460, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %462 = @func_2013(%461) /* ty=(Tensor[(4, 9, 3), float32],) */;
  %463 = @func_4014() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %464 = %458.0;
  %465 = %459.0;
  %466 = %462.0;
  %467 = %463.0;
  (%464, %465, %466, %var_6391, %467)
}

def @func_5515() -> (Tensor[(7, 11, 3), float32],) {
  %468 = @func_5309() /* ty=Tensor[(7, 11, 3), float32] */;
  (%468,)
}

def @func_8746(%var_8707: Tensor[(1470), float32], %var_8730: Tensor[(13, 52), int8]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(13, 52), int64], Tensor[(7, 11, 3), float32]) {
  %469 = @func_4623() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %470 = @func_8131() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %471 = @func_5662() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */;
  %472 = cast(%var_8707, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %473 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 52), int8] */, dtype="int8") /* ty=Tensor[(13, 52), int8] */;
  %474 = reshape(%472, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %475 = reshape(%473, newshape=[676]) /* ty=Tensor[(676), int8] */;
  %476 = @func_3269(%474, %475) /* ty=(Tensor[(7, 11, 3), int16], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(676), int8]) */;
  %477 = cast(%var_8730, dtype="int64") /* ty=Tensor[(13, 52), int64] */;
  %478 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(13, 52), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %479 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 52), int8] */, dtype="int64") /* ty=Tensor[(13, 52), int64] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %481 = @func_7463() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %482 = %469.0;
  %483 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  %484 = %470.0;
  %485 = @func_8578() /* ty=Tensor[(7, 11, 3), float32] */;
  %486 = %471.0;
  %487 = %476.2;
  %488 = bitwise_or(%479, %480) /* ty=Tensor[(13, 52), int64] */;
  %489 = %481.0;
  (%482, %483, %484, %485, %486, %487, %var_8707, %488, %489)
}

def @func_12925() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %490 = @func_9019() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %491 = @func_4014() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %492 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %493 = %490.0;
  %494 = %491.0;
  %495 = %492.0;
  (%493, %494, %495)
}

def @func_13284() -> Tensor[(7, 11, 3), float32] {
  %496 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %496.1
}

def @func_8195() -> Tensor[(7, 11, 3), float64] {
  %497 = @func_6783() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %497.2
}

def @func_16857(%var_16840: Tensor[(70), uint64]) -> (Tensor[(6, 3, 16), uint64], Tensor[(1, 14, 5), uint64], uint64, Tensor[(70), uint64], Tensor[(7, 11, 3), float32]) {
  %498 = cast(meta[relay.Constant][17] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %499 = cast(%var_16840, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %500 = reshape(%498, newshape=[]) /* ty=uint64 */;
  %501 = reshape(%499, newshape=[1, 14, 5]) /* ty=Tensor[(1, 14, 5), uint64] */;
  %502 = @func_11782(%500, %501) /* ty=(Tensor[(1, 14, 5), uint64],) */;
  %503 = @func_13308() /* ty=Tensor[(6, 3, 16), uint64] */;
  %504 = %502.0;
  %505 = @func_9928() /* ty=Tensor[(7, 11, 3), float32] */;
  (%503, %504, meta[relay.Constant][17] /* ty=uint64 */, %var_16840, %505)
}

def @func_23550(%var_23546: Tensor[(117, 2), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 9, 2), uint16], Tensor[(117, 2), uint16]) {
  %506 = @func_7166() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %507 = @func_21169() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %508 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %509 = cast(%var_23546, dtype="uint16") /* ty=Tensor[(117, 2), uint16] */;
  %510 = reshape(%509, newshape=[13, 9, 2]) /* ty=Tensor[(13, 9, 2), uint16] */;
  %511 = %506.0;
  %512 = %507.0;
  %513 = %508.0;
  %514 = @func_4932(%510) /* ty=Tensor[(13, 9, 2), uint16] */;
  (%511, %512, %513, %514, %var_23546)
}

def @func_24053() -> (Tensor[(14, 2, 1), float64],) {
  %515 = cast(0.896148f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %516 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 2, 1), float64] */, dtype="float64") /* ty=Tensor[(14, 2, 1), float64] */;
  %517 = minimum(%515, %516) /* ty=Tensor[(14, 2, 1), float64] */;
  (%517,)
}

def @func_10029() -> (Tensor[(7, 11, 3), float32], Tensor[(6, 3, 16), uint64]) {
  %518 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %519 = @func_8980() /* ty=(Tensor[(6, 3, 16), uint64],) */;
  %520 = %518.0;
  %521 = %519.0;
  (%520, %521)
}

def @func_5064() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %522 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %523 = @func_5035() /* ty=Tensor[(7, 11, 3), float32] */;
  %524 = %522.0;
  (%523, %524)
}

def @func_6733() -> Tensor[(7, 11, 3), float32] {
  %525 = @func_4423() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %525.0
}

def @func_11615() -> Tensor[(7, 11, 3), float32] {
  %526 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %526.0
}

def @func_20760() -> Tensor[(8, 14, 6), bool] {
  %527 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 14, 6), bool] */, dtype="bool") /* ty=Tensor[(8, 14, 6), bool] */;
  %528 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(8, 14, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(meta[relay.Constant][19] /* ty=Tensor[(8, 14, 6), bool] */, dtype="bool") /* ty=Tensor[(8, 14, 6), bool] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%529, %530) /* ty=Tensor[(8, 14, 6), bool] */
}

def @func_7007() -> Tensor[(7, 11, 3), float32] {
  %531 = @func_6641() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %531.0
}

def @func_22224() -> (Tensor[(1470), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %532 = @func_20968() /* ty=(Tensor[(1470), float32],) */;
  %533 = cast(meta[relay.Constant][21] /* ty=Tensor[(234), uint16] */, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %534 = reshape(%533, newshape=[234]) /* ty=Tensor[(234), uint16] */;
  %535 = @func_20050(%534) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(234), uint16]) */;
  %536 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %537 = %532.0;
  %538 = @func_22147() /* ty=Tensor[(7, 11, 3), float32] */;
  %539 = %535.0;
  %540 = @func_11615() /* ty=Tensor[(7, 11, 3), float32] */;
  %541 = %536.0;
  (%537, %538, %539, meta[relay.Constant][21] /* ty=Tensor[(234), uint16] */, %540, %541)
}

def @func_9591() -> (Tensor[(7, 11, 3), float32],) {
  %542 = @func_7110() /* ty=(Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) */;
  %543 = %542.1;
  (%543,)
}

def @func_16901(%var_16899: Tensor[(80), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(5, 4, 4), float64], Tensor[(80), float64]) {
  %544 = @func_10584() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %545 = cast(%var_16899, dtype="float64") /* ty=Tensor[(80), float64] */;
  %546 = reshape(%545, newshape=[5, 4, 4]) /* ty=Tensor[(5, 4, 4), float64] */;
  %547 = @func_7218(%546) /* ty=(Tensor[(5, 4, 4), float64],) */;
  %548 = %544.0;
  %549 = %547.0;
  (%548, %549, %var_16899)
}

def @func_21794() -> Tensor[(7, 11, 3), float32] {
  %550 = @func_9591() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %550.0
}

def @func_16173() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %551 = @func_5515() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %552 = @func_10283() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %553 = %551.0;
  %554 = %552.0;
  (%553, %554)
}

def @func_9656() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %555 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %556 = @func_7418() /* ty=Tensor[(7, 11, 3), float32] */;
  %557 = %555.0;
  (%556, %557)
}

def @func_8036() -> (Tensor[(7, 11, 3), float64], Tensor[(36), uint32], Tensor[(1470), float32], Tensor[(1, 676), int8]) {
  %558 = @func_4154() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %559 = cast(meta[relay.Constant][22] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %560 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 676), int8] */, dtype="int8") /* ty=Tensor[(1, 676), int8] */;
  %561 = reshape(%559, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
  %562 = reshape(%560, newshape=[676]) /* ty=Tensor[(676), int8] */;
  %563 = @func_3173(%561, %562) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(455), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 13, 4), float32], Tensor[(676), int8]) */;
  %564 = %558.1;
  %565 = %563.2;
  (%564, %565, meta[relay.Constant][22] /* ty=Tensor[(1470), float32] */, meta[relay.Constant][23] /* ty=Tensor[(1, 676), int8] */)
}

def @func_5570() -> (Tensor[(7, 11, 3), float32],) {
  %566 = @func_3687() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %567 = %566.0;
  (%567,)
}

def @func_17495(%var_17418: Tensor[(4, 16, 16), float64]) -> (Tensor[(4, 16, 16), float64], Tensor[(7, 11, 3), float32], Tensor[(2, 40), float64]) {
  %568 = cast(%var_17418, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
  %569 = cos(%568) /* ty=Tensor[(4, 16, 16), float64] */;
  %570 = cast(%569, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
  %571 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 40), float64] */, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %572 = reshape(%571, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %573 = @func_16901(%572) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(5, 4, 4), float64], Tensor[(80), float64]) */;
  %574 = atan(%570) /* ty=Tensor[(4, 16, 16), float64] */;
  %575 = %573.0;
  (%574, %575, meta[relay.Constant][24] /* ty=Tensor[(2, 40), float64] */)
}

def @func_17574() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(60), float64], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) {
  %576 = @func_7077() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */;
  %577 = cast(meta[relay.Constant][25] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %578 = reshape(%577, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %579 = @func_13795(%578) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(60), float64], Tensor[(7, 11, 3), float32], Tensor[(6, 10, 7), bool]) */;
  %580 = @func_5550() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(1470), float32]) */;
  %581 = @func_12935() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %582 = %576.0;
  %583 = %579.0;
  %584 = %580.2;
  %585 = %581.0;
  (%582, %583, meta[relay.Constant][25] /* ty=Tensor[(60), float64] */, %584, %585)
}

def @func_21625() -> Tensor[(6, 3, 16), uint64] {
  @func_6720() /* ty=Tensor[(6, 3, 16), uint64] */
}

def @func_24038() -> (Tensor[(7, 11, 3), float32],) {
  %586 = @func_10772() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float64], Tensor[(208, 4), float32], Tensor[(15, 6, 4), uint32], Tensor[(180, 2), uint32], Tensor[(7, 11, 3), float32]) */;
  %587 = %586.1;
  (%587,)
}

def @func_15502() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %588 = @func_9446() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %589 = @func_6733() /* ty=Tensor[(7, 11, 3), float32] */;
  %590 = %588.0;
  (%589, %590)
}

def @func_20572() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %591 = @func_14829() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) */;
  %592 = @func_11020() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %593 = @func_5193() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %594 = @func_18431() /* ty=Tensor[(7, 11, 3), float32] */;
  %595 = %591.0;
  %596 = %592.1;
  %597 = %593.0;
  (%594, %595, %596, %597)
}

def @func_19416() -> (Tensor[(7, 11, 3), float64],) {
  %598 = @func_9610() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %599 = %598.2;
  (%599,)
}

def @func_9028(%var_9026: Tensor[(1470, 1), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(1470, 1), float32]) {
  %600 = cast(%var_9026, dtype="float32") /* ty=Tensor[(1470, 1), float32] */;
  %601 = reshape(%600, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
  %602 = @func_8385(%601) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32], Tensor[(6, 10, 1), float64], Tensor[(60), float64]) */;
  %603 = @func_6201() /* ty=Tensor[(7, 11, 3), float32] */;
  %604 = %602.7;
  (%603, %604, %var_9026)
}

def @func_16590() -> Tensor[(7, 11, 3), float32] {
  %605 = @func_9467() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %605.0
}

def @func_3030() -> (Tensor[(7, 11, 3), float32],) {
  %606 = @func_2741() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %607 = %606.0;
  (%607,)
}

def @func_8385(%var_8293: Tensor[(7, 210), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32], Tensor[(6, 10, 1), float64], Tensor[(60), float64]) {
  %608 = cast(%var_8293, dtype="float32") /* ty=Tensor[(7, 210), float32] */;
  %609 = reshape(%608, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
  %610 = @func_4510(%609) /* ty=(Tensor[(13, 13, 4), int8], Tensor[(676), int8], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) */;
  %611 = @func_7138() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %612 = cast(%var_8293, dtype="float32") /* ty=Tensor[(7, 210), float32] */;
  %613 = reshape(%612, newshape=[14, 105]) /* ty=Tensor[(14, 105), float32] */;
  %614 = @func_5446(%613) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(14, 105), float32]) */;
  %615 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %616 = @func_4623() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %617 = cast(meta[relay.Constant][26] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
  %618 = cast(meta[relay.Constant][26] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
  %619 = reshape(%617, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %620 = reshape(%618, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %621 = cast(meta[relay.Constant][27] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %622 = reshape(%621, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %623 = @func_5309() /* ty=Tensor[(7, 11, 3), float32] */;
  %624 = %610.3;
  %625 = %611.0;
  %626 = %614.0;
  %627 = %615.0;
  %628 = %616.0;
  %629 = @func_670(%619, %620) /* ty=Tensor[(13, 7, 5), float32] */;
  %630 = @func_7252(%622) /* ty=Tensor[(6, 10, 1), float64] */;
  (%623, %624, %var_8293, %625, %626, %627, %628, %629, meta[relay.Constant][26] /* ty=Tensor[(455), float32] */, %630, meta[relay.Constant][27] /* ty=Tensor[(60), float64] */)
}

def @func_23464() -> (Tensor[(7, 11, 3), float32],) {
  %631 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  (%631,)
}

def @func_4932(%var_4926: Tensor[(13, 9, 2), uint16]) -> Tensor[(13, 9, 2), uint16] {
  %632 = cast(%var_4926, dtype="uint16") /* ty=Tensor[(13, 9, 2), uint16] */;
  %633 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(13, 9, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %634 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 9, 2), uint16] */, dtype="uint16") /* ty=Tensor[(13, 9, 2), uint16] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  right_shift(%634, %635) /* ty=Tensor[(13, 9, 2), uint16] */
}

def @func_16951() -> Tensor[(7, 11, 3), float32] {
  %636 = @func_16104() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %636.0
}

def @func_3687() -> (Tensor[(7, 11, 3), float32],) {
  %637 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %638 = %637.0;
  (%638,)
}

def @func_23445(%var_23433: Tensor[(234), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %639 = @func_16241() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %640 = @func_5820() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %641 = cast(%var_23433, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %642 = reshape(%641, newshape=[234]) /* ty=Tensor[(234), uint16] */;
  %643 = @func_16489(%642) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32], Tensor[(2, 416), float32]) */;
  %644 = %639.0;
  %645 = %640.0;
  %646 = %643.3;
  %647 = @func_12095() /* ty=Tensor[(7, 11, 3), float32] */;
  %648 = @func_15262() /* ty=Tensor[(7, 11, 3), float32] */;
  (%644, %645, %646, %var_23433, %647, %648)
}

def @func_5550() -> (Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(1470), float32]) {
  %649 = @func_4014() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %650 = cast(meta[relay.Constant][29] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %651 = reshape(%650, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float32] */;
  %652 = @func_2220(%651) /* ty=(Tensor[(14, 15, 7), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
  %653 = %649.0;
  %654 = %652.0;
  (%653, %654, meta[relay.Constant][29] /* ty=Tensor[(1470), float32] */)
}

def @func_21169() -> (Tensor[(7, 11, 3), float32],) {
  %655 = @func_11207() /* ty=(Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %656 = %655.1;
  (%656,)
}

def @func_23952() -> Tensor[(7, 11, 3), float32] {
  %657 = @func_9019() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %657.0
}

def @func_23994() -> Tensor[(7, 11, 3), float32] {
  %658 = @func_11274() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %658.1
}

def @func_22011() -> Tensor[(9, 4), uint32] {
  %659 = @func_12036() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(9, 4), uint32]) */;
  %659.2
}

def @func_7356() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %660 = @func_5968() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %661 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %662 = %660.0;
  %663 = %661.0;
  (%662, %663)
}

def @func_17983() -> Tensor[(7, 11, 3), float32] {
  %664 = @func_7356() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %664.1
}

def @func_14872() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %665 = @func_11162() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %666 = @func_5588() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %667 = @func_7356() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %668 = %665.0;
  %669 = %666.0;
  %670 = %667.0;
  (%668, %669, %670)
}

def @func_14127(%var_14033: uint64, %var_14088: Tensor[(455), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1, 14, 5), uint64], uint64, Tensor[(70), uint64], Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(1470, 1), float32], Tensor[(1, 676), int8], Tensor[(7, 11, 3), float32]) {
  %671 = @func_5968() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %672 = cast(%var_14033, dtype="uint64") /* ty=uint64 */;
  %673 = cast(meta[relay.Constant][30] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %674 = reshape(%672, newshape=[]) /* ty=uint64 */;
  %675 = reshape(%673, newshape=[1, 14, 5]) /* ty=Tensor[(1, 14, 5), uint64] */;
  %676 = @func_11782(%674, %675) /* ty=(Tensor[(1, 14, 5), uint64],) */;
  %677 = %671.0;
  %678 = cast(%677, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %679 = reshape(%678, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), float32] */;
  %680 = @func_4720() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
  %681 = %680.2;
  %682 = cast(%681, dtype="float64") /* ty=Tensor[(455), float64] */;
  %683 = asinh(%682) /* ty=Tensor[(455), float64] */;
  %684 = cast(%683, dtype="float32") /* ty=Tensor[(455), float32] */;
  %685 = sigmoid(%684) /* ty=Tensor[(455), float32] */;
  %686 = cast(%var_14088, dtype="int32") /* ty=Tensor[(455), int32] */;
  %687 = shape_of(%685, dtype="int32") /* ty=Tensor[(1), int32] */;
  %688 = cast(%685, dtype="int32") /* ty=Tensor[(455), int32] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?), int32] */;
  %690 = left_shift(%688, %689) /* ty=Tensor[(455), int32] */;
  %691 = cast(%690, dtype="float32") /* ty=Tensor[(455), float32] */;
  %692 = cast(meta[relay.Constant][31] /* ty=Tensor[(1470, 1), float32] */, dtype="float32") /* ty=Tensor[(1470, 1), float32] */;
  %693 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 676), int8] */, dtype="int8") /* ty=Tensor[(1, 676), int8] */;
  %694 = reshape(%692, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %695 = reshape(%693, newshape=[676]) /* ty=Tensor[(676), int8] */;
  %696 = @func_3269(%694, %695) /* ty=(Tensor[(7, 11, 3), int16], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(676), int8]) */;
  %697 = @func_11274() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %698 = %676.0;
  %699 = @func_3771(%679) /* ty=Tensor[(7, 11, 3), int8] */;
  %700 = @func_10669() /* ty=Tensor[(7, 11, 3), float32] */;
  %701 = acos(%691) /* ty=Tensor[(455), float32] */;
  %702 = @func_9898() /* ty=Tensor[(7, 11, 3), float32] */;
  %703 = %696.2;
  %704 = %697.1;
  (%677, %698, %var_14033, meta[relay.Constant][30] /* ty=Tensor[(70), uint64] */, %699, %700, %701, %702, %703, meta[relay.Constant][31] /* ty=Tensor[(1470, 1), float32] */, meta[relay.Constant][32] /* ty=Tensor[(1, 676), int8] */, %704)
}

def @func_20741() -> (Tensor[(7, 11, 3), float32],) {
  %705 = @func_4720() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
  %706 = %705.0;
  (%706,)
}

def @func_6474() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %707 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %708 = @func_3687() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %709 = @func_4623() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %710 = %707.0;
  %711 = %708.0;
  %712 = @func_5834() /* ty=Tensor[(7, 11, 3), float32] */;
  %713 = %709.0;
  (%710, %711, %712, %713)
}

def @func_19543() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(450), uint32]) {
  %714 = @func_15591() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %715 = cast(meta[relay.Constant][33] /* ty=Tensor[(450), uint32] */, dtype="uint32") /* ty=Tensor[(450), uint32] */;
  %716 = cast(meta[relay.Constant][33] /* ty=Tensor[(450), uint32] */, dtype="uint32") /* ty=Tensor[(450), uint32] */;
  %717 = reshape(%715, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), uint32] */;
  %718 = reshape(%716, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), uint32] */;
  %719 = @func_10558(%717, %718) /* ty=(Tensor[(15, 6, 5), float64], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) */;
  %720 = @func_12353() /* ty=Tensor[(7, 11, 3), float32] */;
  %721 = %714.0;
  %722 = %719.4;
  (%720, %721, %722, meta[relay.Constant][33] /* ty=Tensor[(450), uint32] */)
}

def @func_13976(%var_13971: Tensor[(1470), float32], %var_13972: Tensor[(2730), float64]) -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8], Tensor[(2730), float64], Tensor[(1470), float32], Tensor[(2730), float64]) {
  %723 = @func_8565() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %724 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %725 = @func_5745() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %726 = @func_8980() /* ty=(Tensor[(6, 3, 16), uint64],) */;
  %727 = @func_8869() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %728 = @func_12818() /* ty=(Tensor[(7, 11, 3), int8],) */;
  %729 = cast(%var_13971, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %730 = cast(%var_13972, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %731 = reshape(%729, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %732 = reshape(%730, newshape=[2730]) /* ty=Tensor[(2730), float64] */;
  %733 = @func_11956(%731, %732) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(36), uint32], Tensor[(2730), float64], Tensor[(7, 11, 3), float32]) */;
  %734 = %723.0;
  %735 = %724.0;
  %736 = %725.0;
  %737 = @func_6733() /* ty=Tensor[(7, 11, 3), float32] */;
  %738 = %726.0;
  %739 = @func_6201() /* ty=Tensor[(7, 11, 3), float32] */;
  %740 = %727.0;
  %741 = %728.0;
  %742 = %733.5;
  (%734, %735, %736, %737, %738, %739, %740, %741, %742, %var_13971, %var_13972)
}

def @func_3008(%var_2979: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) {
  %743 = cast(%var_2979, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %744 = reshape(%743, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %745 = @func_2770(%744) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32]) */;
  %746 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %747 = %746.0;
  %748 = cast(%747, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %749 = %745.0;
  %750 = cosh(%748) /* ty=Tensor[(7, 11, 3), float32] */;
  (%749, %var_2979, %750)
}

def @func_18964(%var_18956: Tensor[(6, 3, 16), uint64]) -> Tensor[(6, 3, 16), float32] {
  %751 = @func_8980() /* ty=(Tensor[(6, 3, 16), uint64],) */;
  %752 = %751.0;
  %753 = cast(%var_18956, dtype="float32") /* ty=Tensor[(6, 3, 16), float32] */;
  %754 = shape_of(%752, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%752, dtype="float32") /* ty=Tensor[(6, 3, 16), float32] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%755, %756) /* ty=Tensor[(6, 3, 16), float32] */
}

def @func_20050(%var_20041: Tensor[(234), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(234), uint16]) {
  %757 = @func_15591() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %758 = @func_3796() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %759 = cast(%var_20041, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %760 = reshape(%759, newshape=[234]) /* ty=Tensor[(234), uint16] */;
  %761 = @func_16489(%760) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32], Tensor[(2, 416), float32]) */;
  %762 = %757.0;
  %763 = %758.0;
  %764 = %761.4;
  (%762, %763, %764, %var_20041)
}

def @func_23505() -> (Tensor[(11, 3, 5), float64], Tensor[(4, 9, 3), float32], Tensor[(18, 6), float32]) {
  %765 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(11, 3, 5), float64] */;
  %766 = cast(meta[relay.Constant][35] /* ty=Tensor[(18, 6), float32] */, dtype="float32") /* ty=Tensor[(18, 6), float32] */;
  %767 = reshape(%766, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %768 = @func_2013(%767) /* ty=(Tensor[(4, 9, 3), float32],) */;
  %769 = acosh(%765) /* ty=Tensor[(11, 3, 5), float64] */;
  %770 = %768.0;
  (%769, %770, meta[relay.Constant][35] /* ty=Tensor[(18, 6), float32] */)
}

def @func_16979() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
  %771 = @func_13564() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %772 = @func_16173() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %773 = cast(meta[relay.Constant][36] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %774 = reshape(%773, newshape=[1470, 1]) /* ty=Tensor[(1470, 1), float32] */;
  %775 = @func_9028(%774) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(1470, 1), float32]) */;
  %776 = %771.0;
  %777 = %772.1;
  %778 = %775.0;
  (%776, %777, %778, meta[relay.Constant][36] /* ty=Tensor[(1470), float32] */)
}

def @func_4014() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %779 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %780 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %781 = %779.1;
  %782 = %780.0;
  (%781, %782)
}

def @func_9344(%var_9334: int8) -> Tensor[(1, 14, 15), bool] {
  %783 = cast(%var_9334, dtype="bool") /* ty=bool */;
  %784 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 14, 15), int8] */, dtype="bool") /* ty=Tensor[(1, 14, 15), bool] */;
  less(%783, %784) /* ty=Tensor[(1, 14, 15), bool] */
}

def @func_21445() -> Tensor[(7, 11, 3), float32] {
  %785 = @func_17270() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %785.0
}

def @func_23831() -> (Tensor[(7, 11, 3), float32],) {
  %786 = @func_12692() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %787 = %786.2;
  (%787,)
}

def @func_9019() -> (Tensor[(7, 11, 3), float32],) {
  %788 = @func_6959() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(14, 105), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %789 = %788.6;
  (%789,)
}

def @func_4423() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %790 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %791 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %792 = %790.0;
  %793 = %791.0;
  (%792, %793)
}

def @func_13709() -> Tensor[(7, 11, 3), bool] {
  %794 = @func_7110() /* ty=(Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) */;
  %794.0
}

def @func_3991() -> (Tensor[(7, 11, 3), float64],) {
  %795 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %796 = %795.0;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
  %798 = cos(%797) /* ty=Tensor[(7, 11, 3), float64] */;
  (%798,)
}

def @func_20734() -> (Tensor[(7, 11, 3), float32],) {
  %799 = @func_5726() /* ty=Tensor[(7, 11, 3), float32] */;
  (%799,)
}

def @func_20687() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %800 = @func_4014() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %801 = %800.0;
  %802 = @func_7007() /* ty=Tensor[(7, 11, 3), float32] */;
  (%801, %802)
}

def @func_23050() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %803 = @func_13021() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) */;
  %804 = @func_5035() /* ty=Tensor[(7, 11, 3), float32] */;
  %805 = %803.0;
  (%804, %805)
}

def @func_22949() -> (Tensor[(7, 11, 3), float32],) {
  %806 = @func_13534() /* ty=Tensor[(7, 11, 3), float32] */;
  (%806,)
}

def @func_10505() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %807 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %808 = @func_5588() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %809 = @func_7007() /* ty=Tensor[(7, 11, 3), float32] */;
  %810 = %807.0;
  %811 = %808.0;
  (%809, %810, %811)
}

def @func_12369() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %812 = @func_3796() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %813 = @func_5820() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %814 = %812.1;
  %815 = %813.1;
  (%814, %815)
}

def @func_6684(%var_6673: Tensor[(15, 6, 4), uint32], %var_6674: Tensor[(15, 6, 4), uint32]) -> Tensor[(15, 6, 4), uint32] {
  %816 = cast(%var_6674, dtype="uint32") /* ty=Tensor[(15, 6, 4), uint32] */;
  %817 = shape_of(%var_6673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%var_6673, dtype="uint32") /* ty=Tensor[(15, 6, 4), uint32] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%818, %819) /* ty=Tensor[(15, 6, 4), uint32] */
}

def @func_23747() -> (Tensor[(7, 16, 2), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %820 = @func_14459() /* ty=(Tensor[(7, 16, 2), float64], Tensor[(7, 16, 2), float64]) */;
  %821 = @func_15631() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(455), float32]) */;
  %822 = @func_5515() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %823 = %820.0;
  %824 = %821.0;
  %825 = %822.0;
  (%823, %824, %825)
}

def @func_20890() -> Tensor[(7, 11, 3), float32] {
  @func_19346() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_8660() -> (Tensor[(7, 11, 3), float32],) {
  %826 = @func_7418() /* ty=Tensor[(7, 11, 3), float32] */;
  (%826,)
}

def @func_10789(%var_10774: Tensor[(9, 1, 11), float32], %var_10775: Tensor[(9, 7, 11), float32], %var_10782: Tensor[(108), float32]) -> (Tensor[(9, 7, 11), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(9, 2, 11), uint8]) {
  %827 = cast(%var_10774, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
  %828 = cast(%var_10775, dtype="float32") /* ty=Tensor[(9, 7, 11), float32] */;
  %829 = cast(%var_10782, dtype="float32") /* ty=Tensor[(108), float32] */;
  %830 = reshape(%829, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %831 = @func_2013(%830) /* ty=(Tensor[(4, 9, 3), float32],) */;
  %832 = cast(%var_10774, dtype="uint8") /* ty=Tensor[(9, 1, 11), uint8] */;
  %833 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 2, 11), float32] */, dtype="uint8") /* ty=Tensor[(9, 2, 11), uint8] */;
  %834 = floor_divide(%827, %828) /* ty=Tensor[(9, 7, 11), float32] */;
  %835 = %831.0;
  %836 = bitwise_or(%832, %833) /* ty=Tensor[(9, 2, 11), uint8] */;
  (%834, %835, %var_10782, %836)
}

def @func_4623() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %837 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %838 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %839 = %837.0;
  %840 = %838.1;
  (%839, %840)
}

def @func_3044(%var_3039: Tensor[(3, 3, 4), uint32]) -> Tensor[(3, 3, 4), uint32] {
  %841 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 3, 4), uint32] */, dtype="uint32") /* ty=Tensor[(3, 3, 4), uint32] */;
  %842 = shape_of(%var_3039, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%var_3039, dtype="uint32") /* ty=Tensor[(3, 3, 4), uint32] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  maximum(%843, %844) /* ty=Tensor[(3, 3, 4), uint32] */
}

def @func_5923() -> Tensor[(7, 11, 3), float32] {
  %845 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %845.0
}

def @func_19655() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  %846 = @func_17124() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %847 = %846.0;
  %848 = @func_10669() /* ty=Tensor[(7, 11, 3), float32] */;
  (%847, %848)
}

def @func_16703() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %849 = @func_12664() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %850 = @func_10505() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %851 = %849.0;
  %852 = %850.2;
  %853 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  (%851, %852, %853)
}

def @func_5193() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  %854 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %855 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %856 = %855.0;
  %857 = cast(%856, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
  %858 = %854.0;
  %859 = exp(%857) /* ty=Tensor[(7, 11, 3), float64] */;
  (%858, %859)
}

def @func_2460(%var_2429: Tensor[(13, 8, 8), float32]) -> (Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) {
  %860 = cast(meta[relay.Constant][40] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %861 = reshape(%860, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %862 = @func_2013(%861) /* ty=(Tensor[(4, 9, 3), float32],) */;
  %863 = %862.0;
  %864 = cast(%863, dtype="float32") /* ty=Tensor[(4, 9, 3), float32] */;
  %865 = reshape(%864, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %866 = @func_2013(%865) /* ty=(Tensor[(4, 9, 3), float32],) */;
  %867 = cast(%var_2429, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
  %868 = asinh(%867) /* ty=Tensor[(13, 8, 8), float32] */;
  %869 = cast(%868, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
  %870 = %866.0;
  %871 = sigmoid(%869) /* ty=Tensor[(13, 8, 8), float32] */;
  (%863, meta[relay.Constant][40] /* ty=Tensor[(108), float32] */, %870, %871)
}

def @func_12834() -> (Tensor[(14, 15, 7), float32],) {
  %872 = @func_11097() /* ty=(Tensor[(4, 9, 3), float32], Tensor[(1470), float32], Tensor[(216, 4), int16], Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32]) */;
  %873 = %872.4;
  (%873,)
}

def @func_4290() -> (Tensor[(7, 11, 3), float32],) {
  %874 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %875 = %874.0;
  (%875,)
}

def @func_6201() -> Tensor[(7, 11, 3), float32] {
  %876 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %876.0
}

def @func_21417(%var_21413: Tensor[(6, 16, 13), float32]) -> (Tensor[(6, 16, 13), float32],) {
  %877 = cast(%var_21413, dtype="float32") /* ty=Tensor[(6, 16, 13), float32] */;
  %878 = cos(%877) /* ty=Tensor[(6, 16, 13), float32] */;
  (%878,)
}

def @func_8980() -> (Tensor[(6, 3, 16), uint64],) {
  %879 = @func_6720() /* ty=Tensor[(6, 3, 16), uint64] */;
  (%879,)
}

def @func_19763() -> (Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) {
  %880 = @func_17574() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(60), float64], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) */;
  %881 = @func_7077() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */;
  %882 = %880.3;
  %883 = %881.2;
  (%882, %883)
}

def @func_13564() -> (Tensor[(7, 11, 3), float32],) {
  %884 = @func_11162() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %885 = %884.0;
  (%885,)
}

def @func_12233(%var_12196: Tensor[(3, 78), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(3, 78), float64], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(7, 11, 3), float32]) {
  %886 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %887 = cast(%var_12196, dtype="uint16") /* ty=Tensor[(3, 78), uint16] */;
  %888 = cast(%var_12196, dtype="uint16") /* ty=Tensor[(3, 78), uint16] */;
  %889 = cast(%var_12196, dtype="uint16") /* ty=Tensor[(3, 78), uint16] */;
  %890 = reshape(%887, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %891 = reshape(%888, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %892 = reshape(%889, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %893 = @func_8001(%890, %891, %892) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(117, 2), uint8], Tensor[(117, 2), bool]) */;
  %894 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 78), uint16] */, dtype="int64") /* ty=Tensor[(3, 78), int64] */;
  %895 = shape_of(%var_12196, dtype="int32") /* ty=Tensor[(2), int32] */;
  %896 = cast(%var_12196, dtype="int64") /* ty=Tensor[(3, 78), int64] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %898 = logical_xor(%896, %897) /* ty=Tensor[(3, 78), int64] */;
  %899 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 78), uint16] */, dtype="float64") /* ty=Tensor[(3, 78), float64] */;
  %900 = shape_of(%898, dtype="int32") /* ty=Tensor[(2), int32] */;
  %901 = cast(%898, dtype="float64") /* ty=Tensor[(3, 78), float64] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %903 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %904 = divide(%901, %902) /* ty=Tensor[(3, 78), float64] */;
  %905 = cast(%904, dtype="uint16") /* ty=Tensor[(3, 78), uint16] */;
  %906 = cast(meta[relay.Constant][41] /* ty=Tensor[(3, 78), uint16] */, dtype="uint16") /* ty=Tensor[(3, 78), uint16] */;
  %907 = cast(%var_12196, dtype="uint16") /* ty=Tensor[(3, 78), uint16] */;
  %908 = reshape(%905, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %909 = reshape(%906, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %910 = reshape(%907, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %911 = @func_8001(%908, %909, %910) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(117, 2), uint8], Tensor[(117, 2), bool]) */;
  %912 = @func_8869() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %913 = %886.0;
  %914 = %893.0;
  %915 = %903.0;
  %916 = %911.3;
  %917 = %912.0;
  (%913, %914, %904, %915, %916, %917)
}

def @func_4886(%var_4864: Tensor[(7, 210), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) {
  %918 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %919 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %920 = cast(%var_4864, dtype="float32") /* ty=Tensor[(7, 210), float32] */;
  %921 = reshape(%920, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %922 = @func_3008(%921) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) */;
  %923 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %924 = %918.0;
  %925 = %919.0;
  %926 = %922.0;
  %927 = %923.1;
  (%924, %925, %926, %var_4864, %927)
}

def @func_23663(%var_23638: Tensor[(72, 4), uint64]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(6, 3, 16), float32], Tensor[(72, 4), uint64]) {
  %928 = @func_16011() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %929 = cast(%var_23638, dtype="uint64") /* ty=Tensor[(72, 4), uint64] */;
  %930 = reshape(%929, newshape=[6, 3, 16]) /* ty=Tensor[(6, 3, 16), uint64] */;
  %931 = @func_9898() /* ty=Tensor[(7, 11, 3), float32] */;
  %932 = @func_20163() /* ty=Tensor[(7, 11, 3), float32] */;
  %933 = %928.0;
  %934 = @func_18964(%930) /* ty=Tensor[(6, 3, 16), float32] */;
  (%931, %932, %933, %934, %var_23638)
}

def @func_13021() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) {
  %935 = @func_4290() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %936 = @func_12123() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %937 = %935.0;
  %938 = %936.0;
  %939 = @func_9991() /* ty=Tensor[(7, 11, 3), float64] */;
  (%937, %938, %939)
}

def @func_6547() -> Tensor[(7, 11, 3), float32] {
  @func_5998() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_4720() -> (Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) {
  %940 = @func_4423() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %941 = cast(meta[relay.Constant][42] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
  %942 = cast(meta[relay.Constant][42] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
  %943 = reshape(%941, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %944 = reshape(%942, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %945 = %940.0;
  %946 = @func_670(%943, %944) /* ty=Tensor[(13, 7, 5), float32] */;
  (%945, %946, meta[relay.Constant][42] /* ty=Tensor[(455), float32] */)
}

def @func_19922(%var_19900: Tensor[(33, 3), float32], %var_19902: Tensor[(18, 6), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32], Tensor[(9, 7, 11), float32], Tensor[(33, 3), float32], Tensor[(693, 1), float32], Tensor[(18, 6), float32]) {
  %947 = @func_13021() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) */;
  %948 = cast(meta[relay.Constant][43] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %949 = reshape(%948, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float32] */;
  %950 = @func_2220(%949) /* ty=(Tensor[(14, 15, 7), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
  %951 = cast(%var_19900, dtype="float32") /* ty=Tensor[(33, 3), float32] */;
  %952 = cast(meta[relay.Constant][44] /* ty=Tensor[(693, 1), float32] */, dtype="float32") /* ty=Tensor[(693, 1), float32] */;
  %953 = cast(%var_19902, dtype="float32") /* ty=Tensor[(18, 6), float32] */;
  %954 = reshape(%951, newshape=[9, 1, 11]) /* ty=Tensor[(9, 1, 11), float32] */;
  %955 = reshape(%952, newshape=[9, 7, 11]) /* ty=Tensor[(9, 7, 11), float32] */;
  %956 = reshape(%953, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %957 = @func_10789(%954, %955, %956) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(9, 2, 11), uint8]) */;
  %958 = %947.0;
  %959 = %950.2;
  %960 = %957.0;
  (%958, %959, meta[relay.Constant][43] /* ty=Tensor[(1470), float32] */, %960, %var_19900, meta[relay.Constant][44] /* ty=Tensor[(693, 1), float32] */, %var_19902)
}

def @func_20641() -> (Tensor[(7, 11, 3), float32],) {
  %961 = @func_4623() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %962 = %961.0;
  (%962,)
}

def @func_12036() -> (Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(9, 4), uint32]) {
  %963 = @func_3991() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %964 = cast(meta[relay.Constant][45] /* ty=Tensor[(9, 4), uint32] */, dtype="uint32") /* ty=Tensor[(9, 4), uint32] */;
  %965 = reshape(%964, newshape=[3, 3, 4]) /* ty=Tensor[(3, 3, 4), uint32] */;
  %966 = %963.0;
  %967 = @func_3044(%965) /* ty=Tensor[(3, 3, 4), uint32] */;
  (%966, %967, meta[relay.Constant][45] /* ty=Tensor[(9, 4), uint32] */)
}

def @func_18015() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %968 = @func_17954() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %969 = %968.0;
  %970 = @func_5035() /* ty=Tensor[(7, 11, 3), float32] */;
  (%969, %970)
}

def @func_2942() -> (Tensor[(7, 11, 3), float32],) {
  %971 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %972 = %971.0;
  %973 = cast(%972, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %974 = rsqrt(%973) /* ty=Tensor[(7, 11, 3), float32] */;
  (%974,)
}

def @func_13795(%var_13741: Tensor[(60), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(60), float64], Tensor[(7, 11, 3), float32], Tensor[(6, 10, 7), bool]) {
  %975 = @func_7138() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %976 = @func_5745() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %977 = cast(%var_13741, dtype="float64") /* ty=Tensor[(60), float64] */;
  %978 = reshape(%977, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %979 = @func_7252(%978) /* ty=Tensor[(6, 10, 1), float64] */;
  %980 = cast(%979, dtype="bool") /* ty=Tensor[(6, 10, 1), bool] */;
  %981 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 10, 7), float64] */, dtype="bool") /* ty=Tensor[(6, 10, 7), bool] */;
  %982 = logical_and(%980, %981) /* ty=Tensor[(6, 10, 7), bool] */;
  %983 = cast(%982, dtype="bool") /* ty=Tensor[(6, 10, 7), bool] */;
  %984 = cast(%979, dtype="bool") /* ty=Tensor[(6, 10, 1), bool] */;
  %985 = @func_12095() /* ty=Tensor[(7, 11, 3), float32] */;
  %986 = %975.0;
  %987 = %976.0;
  %988 = @func_5309() /* ty=Tensor[(7, 11, 3), float32] */;
  %989 = less(%983, %984) /* ty=Tensor[(6, 10, 7), bool] */;
  (%985, %986, %987, %var_13741, %988, %989)
}

def @func_21146() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %990 = @func_17270() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %991 = @func_20424() /* ty=(Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %992 = %990.1;
  %993 = %991.1;
  %994 = @func_12353() /* ty=Tensor[(7, 11, 3), float32] */;
  (%992, %993, %994)
}

def @func_4661() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %995 = @func_4154() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %996 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %997 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %998 = %995.1;
  %999 = %996.1;
  %1000 = %997.0;
  (%998, %999, %1000)
}

def @func_10301() -> (Tensor[(7, 11, 3), float32],) {
  %1001 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1002 = %1001.0;
  (%1002,)
}

def @func_17236() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1003 = @func_13381() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1004 = @func_15591() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1005 = %1003.0;
  %1006 = @func_14368() /* ty=Tensor[(7, 11, 3), float32] */;
  %1007 = %1004.0;
  %1008 = @func_9898() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1005, %1006, %1007, %1008)
}

def @func_3617(%var_3610: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
  %1009 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1010 = cast(%var_3610, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1011 = reshape(%1010, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %1012 = @func_3008(%1011) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) */;
  %1013 = %1009.0;
  %1014 = %1012.0;
  (%1013, %1014, %var_3610)
}

def @func_8131() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  %1015 = @func_6447() /* ty=Tensor[(7, 11, 3), float64] */;
  %1016 = @func_5998() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1015, %1016)
}

def @func_22340() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 16, 2), float32]) {
  %1017 = @func_6783() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %1018 = @func_14459() /* ty=(Tensor[(7, 16, 2), float64], Tensor[(7, 16, 2), float64]) */;
  %1019 = %1018.1;
  %1020 = cast(%1019, dtype="float32") /* ty=Tensor[(7, 16, 2), float32] */;
  %1021 = %1017.0;
  %1022 = log(%1020) /* ty=Tensor[(7, 16, 2), float32] */;
  (%1021, %1022)
}

def @func_3582(%var_3508: Tensor[(7, 11, 3), float32], %var_3542: Tensor[(455), float32]) -> (Tensor[(7, 11, 3), uint64], Tensor[(13, 7, 5), float32], Tensor[(455), float32], Tensor[(13, 7, 5), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(7, 11, 3), float32]) {
  %1023 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1024 = %1023.0;
  %1025 = cast(%var_3508, dtype="uint64") /* ty=Tensor[(7, 11, 3), uint64] */;
  %1026 = shape_of(%1024, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1027 = cast(%1024, dtype="uint64") /* ty=Tensor[(7, 11, 3), uint64] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1029 = cast(%var_3542, dtype="float32") /* ty=Tensor[(455), float32] */;
  %1030 = cast(%var_3542, dtype="float32") /* ty=Tensor[(455), float32] */;
  %1031 = reshape(%1029, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %1032 = reshape(%1030, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %1033 = cast(%var_3542, dtype="float32") /* ty=Tensor[(455), float32] */;
  %1034 = cast(%var_3542, dtype="float32") /* ty=Tensor[(455), float32] */;
  %1035 = reshape(%1033, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %1036 = reshape(%1034, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %1037 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1038 = cast(meta[relay.Constant][47] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1039 = reshape(%1038, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %1040 = @func_2013(%1039) /* ty=(Tensor[(4, 9, 3), float32],) */;
  %1041 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1042 = bitwise_and(%1027, %1028) /* ty=Tensor[(7, 11, 3), uint64] */;
  %1043 = @func_670(%1031, %1032) /* ty=Tensor[(13, 7, 5), float32] */;
  %1044 = @func_670(%1035, %1036) /* ty=Tensor[(13, 7, 5), float32] */;
  %1045 = %1037.0;
  %1046 = %1040.0;
  %1047 = %1041.0;
  (%1042, %1043, %var_3542, %1044, %1045, %1046, meta[relay.Constant][47] /* ty=Tensor[(108), float32] */, %1047)
}

def @func_5998() -> Tensor[(7, 11, 3), float32] {
  @func_5035() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_7525() -> (Tensor[(7, 11, 3), float32],) {
  %1048 = @func_5588() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1049 = %1048.0;
  (%1049,)
}

def @func_11956(%var_11942: Tensor[(1470), float32], %var_11950: Tensor[(2730), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(36), uint32], Tensor[(2730), float64], Tensor[(7, 11, 3), float32]) {
  %1050 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1051 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1052 = cast(%var_11942, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1053 = reshape(%1052, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %1054 = @func_2770(%1053) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32]) */;
  %1055 = cast(%var_11950, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %1056 = %1054.2;
  %1057 = cast(%1056, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1058 = reshape(%1055, newshape=[13, 15, 14]) /* ty=Tensor[(13, 15, 14), float64] */;
  %1059 = reshape(%1057, newshape=[98, 15]) /* ty=Tensor[(98, 15), float32] */;
  %1060 = @func_11373(%1058, %1059) /* ty=(Tensor[(13, 15, 14), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(98, 15), float32], Tensor[(7, 11, 3), float32]) */;
  %1061 = @func_6641() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1062 = %1050.0;
  %1063 = %1051.0;
  %1064 = %1060.3;
  %1065 = %1061.0;
  (%1062, %1063, %1056, %var_11942, %1064, %var_11950, %1065)
}

def @func_16104() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1066 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1067 = @func_6474() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1068 = %1066.0;
  %1069 = %1067.0;
  (%1068, %1069)
}

def @func_9760(%var_9749: Tensor[(1, 832), float32]) -> (Tensor[(4, 9, 3), float32], Tensor[(1, 832), float32], Tensor[(6, 3, 16), float64]) {
  %1070 = cast(%var_9749, dtype="float32") /* ty=Tensor[(1, 832), float32] */;
  %1071 = reshape(%1070, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
  %1072 = @func_2460(%1071) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) */;
  %1073 = @func_6720() /* ty=Tensor[(6, 3, 16), uint64] */;
  %1074 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 3, 16), uint64] */, dtype="bool") /* ty=Tensor[(6, 3, 16), bool] */;
  %1075 = shape_of(%1073, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1076 = cast(%1073, dtype="bool") /* ty=Tensor[(6, 3, 16), bool] */;
  %1077 = dyn.reshape(%1074, %1075, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1078 = equal(%1076, %1077) /* ty=Tensor[(6, 3, 16), bool] */;
  %1079 = cast(%1078, dtype="float64") /* ty=Tensor[(6, 3, 16), float64] */;
  %1080 = %1072.2;
  %1081 = sigmoid(%1079) /* ty=Tensor[(6, 3, 16), float64] */;
  (%1080, %var_9749, %1081)
}

def @func_3703() -> Tensor[(7, 11, 3), float32] {
  %1082 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1082.0
}

def @func_17954() -> (Tensor[(7, 11, 3), float32],) {
  %1083 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1084 = %1083.0;
  (%1084,)
}

def @func_2784() -> (Tensor[(7, 11, 3), float32],) {
  %1085 = @func_2741() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1086 = %1085.0;
  (%1086,)
}

def @func_22778() -> (Tensor[(7, 11, 3), float32],) {
  %1087 = @func_13634() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1087,)
}

def @func_23180(%var_23122: Tensor[(2730), float64], %var_23174: Tensor[(490, 3), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(13, 15, 14), float64], Tensor[(2730), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(819), int64], Tensor[(7, 11, 3), float32], Tensor[(490, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1088 = @func_11020() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1089 = cast(%var_23122, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %1090 = cast(meta[relay.Constant][49] /* ty=Tensor[(490, 3), float32] */, dtype="float32") /* ty=Tensor[(490, 3), float32] */;
  %1091 = reshape(%1089, newshape=[13, 15, 14]) /* ty=Tensor[(13, 15, 14), float64] */;
  %1092 = reshape(%1090, newshape=[98, 15]) /* ty=Tensor[(98, 15), float32] */;
  %1093 = @func_11373(%1091, %1092) /* ty=(Tensor[(13, 15, 14), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(98, 15), float32], Tensor[(7, 11, 3), float32]) */;
  %1094 = @func_5515() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1095 = cast(meta[relay.Constant][50] /* ty=Tensor[(819), int64] */, dtype="int64") /* ty=Tensor[(819), int64] */;
  %1096 = cast(meta[relay.Constant][50] /* ty=Tensor[(819), int64] */, dtype="int64") /* ty=Tensor[(819), int64] */;
  %1097 = reshape(%1095, newshape=[13, 7, 9]) /* ty=Tensor[(13, 7, 9), int64] */;
  %1098 = reshape(%1096, newshape=[13, 7, 9]) /* ty=Tensor[(13, 7, 9), int64] */;
  %1099 = @func_14566(%1097, %1098) /* ty=(Tensor[(13, 7, 9), int64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %1100 = cast(%var_23174, dtype="float32") /* ty=Tensor[(490, 3), float32] */;
  %1101 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(490, 3), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1102 = cast(meta[relay.Constant][49] /* ty=Tensor[(490, 3), float32] */, dtype="float32") /* ty=Tensor[(490, 3), float32] */;
  %1103 = dyn.reshape(%1100, %1101, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1104 = @func_22551() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1105 = %1088.0;
  %1106 = %1093.0;
  %1107 = %1094.0;
  %1108 = %1099.3;
  %1109 = @func_5309() /* ty=Tensor[(7, 11, 3), float32] */;
  %1110 = power(%1102, %1103) /* ty=Tensor[(490, 3), float32] */;
  %1111 = %1104.0;
  (%1105, %1106, %var_23122, %1107, %1108, meta[relay.Constant][50] /* ty=Tensor[(819), int64] */, %1109, %1110, %1111)
}

def @func_16489(%var_16442: Tensor[(234), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32], Tensor[(2, 416), float32]) {
  %1112 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1113 = cast(%var_16442, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %1114 = reshape(%1113, newshape=[3, 78]) /* ty=Tensor[(3, 78), uint16] */;
  %1115 = @func_12233(%1114) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(3, 78), float64], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(7, 11, 3), float32]) */;
  %1116 = @func_14829() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) */;
  %1117 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 416), float32] */, dtype="float32") /* ty=Tensor[(2, 416), float32] */;
  %1118 = reshape(%1117, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1119 = @func_8507(%1118) /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(13, 8, 8), float32]) */;
  %1120 = @func_5968() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1121 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 416), float32] */, dtype="float64") /* ty=Tensor[(2, 416), float64] */;
  %1122 = asin(%1121) /* ty=Tensor[(2, 416), float64] */;
  %1123 = cast(%1122, dtype="float32") /* ty=Tensor[(2, 416), float32] */;
  %1124 = %1112.0;
  %1125 = %1115.4;
  %1126 = %1116.0;
  %1127 = %1119.2;
  %1128 = %1120.0;
  %1129 = sinh(%1123) /* ty=Tensor[(2, 416), float32] */;
  (%1124, %1125, %var_16442, %1126, %1127, %1128, %1129)
}

def @func_8001(%var_7969: Tensor[(117, 2), uint16], %var_7973: Tensor[(117, 2), uint16], %var_7997: Tensor[(117, 2), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(117, 2), uint8], Tensor[(117, 2), bool]) {
  %1130 = cast(%var_7973, dtype="uint8") /* ty=Tensor[(117, 2), uint8] */;
  %1131 = shape_of(%var_7969, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1132 = cast(%var_7969, dtype="uint8") /* ty=Tensor[(117, 2), uint8] */;
  %1133 = dyn.reshape(%1130, %1131, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1134 = cast(%var_7973, dtype="float32") /* ty=Tensor[(117, 2), float32] */;
  %1135 = rsqrt(%1134) /* ty=Tensor[(117, 2), float32] */;
  %1136 = cast(%var_7969, dtype="uint16") /* ty=Tensor[(117, 2), uint16] */;
  %1137 = reshape(%1136, newshape=[13, 9, 2]) /* ty=Tensor[(13, 9, 2), uint16] */;
  %1138 = @func_4932(%1137) /* ty=Tensor[(13, 9, 2), uint16] */;
  %1139 = cast(%1138, dtype="uint8") /* ty=Tensor[(13, 9, 2), uint8] */;
  %1140 = shape_of(%1135, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1141 = cast(%1135, dtype="uint8") /* ty=Tensor[(117, 2), uint8] */;
  %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1143 = cast(%var_7997, dtype="bool") /* ty=Tensor[(117, 2), bool] */;
  %1144 = shape_of(%var_7973, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1145 = cast(%var_7973, dtype="bool") /* ty=Tensor[(117, 2), bool] */;
  %1146 = dyn.reshape(%1143, %1144, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1147 = @func_7007() /* ty=Tensor[(7, 11, 3), float32] */;
  %1148 = @func_6201() /* ty=Tensor[(7, 11, 3), float32] */;
  %1149 = bitwise_and(%1132, %1133) /* ty=Tensor[(117, 2), uint8] */;
  %1150 = right_shift(%1141, %1142) /* ty=Tensor[(117, 2), uint8] */;
  %1151 = less(%1145, %1146) /* ty=Tensor[(117, 2), bool] */;
  (%1147, %1148, %1149, %1150, %1151)
}

def @func_17515() -> Tensor[(7, 11, 3), float32] {
  @func_8268() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_7728() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1152 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1153 = @func_5515() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1154 = @func_3796() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %1155 = @func_5662() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */;
  %1156 = %1155.0;
  %1157 = cast(%1156, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %1158 = @func_7525() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1159 = %1152.1;
  %1160 = %1153.0;
  %1161 = %1154.1;
  %1162 = asinh(%1157) /* ty=Tensor[(7, 11, 3), float32] */;
  %1163 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  %1164 = %1158.0;
  (%1159, %1160, %1161, %1162, %1163, %1164)
}

def @func_10584() -> (Tensor[(7, 11, 3), float32],) {
  %1165 = @func_9898() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1165,)
}

def @func_15878() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  %1166 = @func_10505() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1167 = @func_11274() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %1168 = @func_9610() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %1169 = %1166.2;
  %1170 = %1167.0;
  %1171 = %1168.0;
  (%1169, %1170, %1171)
}

def @func_17842() -> (Tensor[(7, 11, 3), float32],) {
  %1172 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1173 = %1172.1;
  (%1173,)
}

def @func_22147() -> Tensor[(7, 11, 3), float32] {
  %1174 = @func_14872() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1174.2
}

def @func_7166() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1175 = @func_6607() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1176 = %1175.0;
  %1177 = @func_5309() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1176, %1177)
}

def @func_5418(%var_5386: Tensor[(832), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(4, 9, 3), float32], Tensor[(832), float32]) {
  %1178 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1179 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1180 = %1179.1;
  %1181 = cast(%1180, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %1182 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1183 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1184 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1185 = @func_5193() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %1186 = cast(%var_5386, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1187 = reshape(%1186, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
  %1188 = @func_2460(%1187) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) */;
  %1189 = %1178.1;
  %1190 = log10(%1181) /* ty=Tensor[(7, 11, 3), float32] */;
  %1191 = %1182.0;
  %1192 = %1183.1;
  %1193 = %1184.0;
  %1194 = %1185.1;
  %1195 = %1188.2;
  (%1189, %1190, %1191, %1192, %1193, %1194, %1195, %var_5386)
}

def @func_23272() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1196 = @func_7110() /* ty=(Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) */;
  %1197 = @func_11615() /* ty=Tensor[(7, 11, 3), float32] */;
  %1198 = %1196.1;
  (%1197, %1198)
}

def @func_5890() -> (Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) {
  %1199 = @func_5588() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1200 = cast(meta[relay.Constant][52] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1201 = reshape(%1200, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
  %1202 = @func_2460(%1201) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) */;
  %1203 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1204 = %1199.0;
  %1205 = %1202.2;
  %1206 = %1203.0;
  (%1204, %1205, meta[relay.Constant][52] /* ty=Tensor[(832), float32] */, %1206)
}

def @func_11812() -> (Tensor[(7, 11, 3), float32], Tensor[(15, 6, 4), uint32], Tensor[(360), uint32]) {
  %1207 = cast(meta[relay.Constant][53] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %1208 = cast(meta[relay.Constant][53] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %1209 = reshape(%1207, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), uint32] */;
  %1210 = reshape(%1208, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), uint32] */;
  %1211 = @func_5726() /* ty=Tensor[(7, 11, 3), float32] */;
  %1212 = @func_6684(%1209, %1210) /* ty=Tensor[(15, 6, 4), uint32] */;
  (%1211, %1212, meta[relay.Constant][53] /* ty=Tensor[(360), uint32] */)
}

def @func_19265() -> (Tensor[(7, 11, 3), float32],) {
  %1213 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1214 = %1213.0;
  (%1214,)
}

def @func_12123() -> (Tensor[(7, 11, 3), float64],) {
  %1215 = @func_9991() /* ty=Tensor[(7, 11, 3), float64] */;
  (%1215,)
}

def @func_4573() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1216 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1217 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1218 = %1216.0;
  %1219 = %1217.0;
  (%1218, %1219)
}

def @func_14368() -> Tensor[(7, 11, 3), float32] {
  %1220 = @func_10505() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1220.1
}

def @func_12664() -> (Tensor[(7, 11, 3), float32],) {
  %1221 = @func_5820() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1222 = %1221.1;
  (%1222,)
}

def @func_14943() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1223 = @func_9019() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1224 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1225 = %1223.0;
  %1226 = %1224.0;
  (%1225, %1226)
}

def @func_20832() -> (Tensor[(7, 11, 3), float32],) {
  %1227 = @func_19144() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1227,)
}

def @func_20163() -> Tensor[(7, 11, 3), float32] {
  @func_13412() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_23705() -> Tensor[(7, 11, 3), float32] {
  @func_18431() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_11162() -> (Tensor[(7, 11, 3), float32],) {
  %1228 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1229 = %1228.0;
  (%1229,)
}

def @func_14459() -> (Tensor[(7, 16, 2), float64], Tensor[(7, 16, 2), float64]) {
  %1230 = cast(meta[relay.Constant][55] /* ty=Tensor[(7, 16, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 16, 2), float64] */;
  %1231 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(7, 16, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1232 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 16, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 16, 2), float64] */;
  %1233 = dyn.reshape(%1230, %1231, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1234 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 16, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 16, 2), float64] */;
  %1235 = power(%1232, %1233) /* ty=Tensor[(7, 16, 2), float64] */;
  %1236 = acos(%1234) /* ty=Tensor[(7, 16, 2), float64] */;
  (%1235, %1236)
}

def @func_5497() -> Tensor[(7, 11, 3), float32] {
  %1237 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1237.0
}

def @func_14921(%var_14900: Tensor[(10, 15, 7), bool]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(10, 15, 7), float32]) {
  %1238 = @func_4290() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1239 = @func_4014() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1240 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1241 = cast(%var_14900, dtype="bool") /* ty=Tensor[(10, 15, 7), bool] */;
  %1242 = logical_and(%1240, %1241) /* ty=Tensor[(10, 15, 7), bool] */;
  %1243 = cast(%1242, dtype="float32") /* ty=Tensor[(10, 15, 7), float32] */;
  %1244 = %1238.0;
  %1245 = %1239.1;
  %1246 = sigmoid(%1243) /* ty=Tensor[(10, 15, 7), float32] */;
  (%1244, %1245, %1246)
}

def @func_21656() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(234), uint16]) {
  %1247 = @func_19543() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(450), uint32]) */;
  %1248 = cast(meta[relay.Constant][56] /* ty=Tensor[(234), uint16] */, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %1249 = cast(meta[relay.Constant][56] /* ty=Tensor[(234), uint16] */, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %1250 = cast(meta[relay.Constant][56] /* ty=Tensor[(234), uint16] */, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %1251 = reshape(%1248, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %1252 = reshape(%1249, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %1253 = reshape(%1250, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %1254 = @func_8001(%1251, %1252, %1253) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(117, 2), uint8], Tensor[(117, 2), bool]) */;
  %1255 = %1247.1;
  %1256 = %1254.1;
  (%1255, %1256, meta[relay.Constant][56] /* ty=Tensor[(234), uint16] */)
}

def @func_11547(%var_11519: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(676), bool], Tensor[(1470), float32]) {
  %1257 = @func_5745() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1258 = cast(%var_11519, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1259 = cast(meta[relay.Constant][57] /* ty=Tensor[(676), int8] */, dtype="int8") /* ty=Tensor[(676), int8] */;
  %1260 = reshape(%1258, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %1261 = reshape(%1259, newshape=[676]) /* ty=Tensor[(676), int8] */;
  %1262 = @func_3269(%1260, %1261) /* ty=(Tensor[(7, 11, 3), int16], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(676), int8]) */;
  %1263 = %1262.3;
  %1264 = cast(meta[relay.Constant][57] /* ty=Tensor[(676), int8] */, dtype="bool") /* ty=Tensor[(676), bool] */;
  %1265 = shape_of(%1263, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1266 = cast(%1263, dtype="bool") /* ty=Tensor[(676), bool] */;
  %1267 = dyn.reshape(%1264, %1265, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1268 = @func_11413() /* ty=(Tensor[(1470), float32],) */;
  %1269 = %1257.0;
  %1270 = equal(%1266, %1267) /* ty=Tensor[(676), bool] */;
  %1271 = %1268.0;
  (%1269, %var_11519, %1270, %1271)
}

def @func_10393(%var_10304: Tensor[(9, 8, 12), int16]) -> (Tensor[(9, 8, 12), int32], Tensor[(5, 4, 4), float64], Tensor[(80), float64], Tensor[(9, 8, 12), float64], Tensor[(1470), float32], Tensor[(1470), float32]) {
  %1272 = cast(meta[relay.Constant][58] /* ty=Tensor[(9, 8, 12), int16] */, dtype="bool") /* ty=Tensor[(9, 8, 12), bool] */;
  %1273 = shape_of(%var_10304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1274 = cast(%var_10304, dtype="bool") /* ty=Tensor[(9, 8, 12), bool] */;
  %1275 = dyn.reshape(%1272, %1273, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1276 = less(%1274, %1275) /* ty=Tensor[(9, 8, 12), bool] */;
  %1277 = cast(%1276, dtype="float64") /* ty=Tensor[(9, 8, 12), float64] */;
  %1278 = cos(%1277) /* ty=Tensor[(9, 8, 12), float64] */;
  %1279 = cast(meta[relay.Constant][58] /* ty=Tensor[(9, 8, 12), int16] */, dtype="int32") /* ty=Tensor[(9, 8, 12), int32] */;
  %1280 = shape_of(%1278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1281 = cast(%1278, dtype="int32") /* ty=Tensor[(9, 8, 12), int32] */;
  %1282 = dyn.reshape(%1279, %1280, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1283 = cast(meta[relay.Constant][59] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %1284 = reshape(%1283, newshape=[5, 4, 4]) /* ty=Tensor[(5, 4, 4), float64] */;
  %1285 = @func_7218(%1284) /* ty=(Tensor[(5, 4, 4), float64],) */;
  %1286 = cast(%1278, dtype="float64") /* ty=Tensor[(9, 8, 12), float64] */;
  %1287 = log2(%1286) /* ty=Tensor[(9, 8, 12), float64] */;
  %1288 = cast(%1287, dtype="float32") /* ty=Tensor[(9, 8, 12), float32] */;
  %1289 = sinh(%1288) /* ty=Tensor[(9, 8, 12), float32] */;
  %1290 = cast(meta[relay.Constant][60] /* ty=Tensor[(9, 8, 12), float32] */, dtype="float64") /* ty=Tensor[(9, 8, 12), float64] */;
  %1291 = shape_of(%1289, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1292 = cast(%1289, dtype="float64") /* ty=Tensor[(9, 8, 12), float64] */;
  %1293 = dyn.reshape(%1290, %1291, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1294 = cast(meta[relay.Constant][61] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1295 = reshape(%1294, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %1296 = @func_9793(%1295) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(1470), float32], Tensor[(676), int8], Tensor[(7, 11, 3), float32]) */;
  %1297 = logical_xor(%1281, %1282) /* ty=Tensor[(9, 8, 12), int32] */;
  %1298 = %1285.0;
  %1299 = floor_mod(%1292, %1293) /* ty=Tensor[(9, 8, 12), float64] */;
  %1300 = %1296.2;
  (%1297, %1298, meta[relay.Constant][59] /* ty=Tensor[(80), float64] */, %1299, %1300, meta[relay.Constant][61] /* ty=Tensor[(1470), float32] */)
}

def @func_17687() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1301 = @func_9446() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1302 = @func_6201() /* ty=Tensor[(7, 11, 3), float32] */;
  %1303 = %1301.0;
  (%1302, %1303)
}

def @func_21099() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32]) {
  %1304 = @func_19416() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %1305 = @func_12123() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %1306 = @func_13463() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1307 = @func_19416() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %1308 = cast(meta[relay.Constant][62] /* ty=Tensor[(36), uint32] */, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %1309 = reshape(%1308, newshape=[36]) /* ty=Tensor[(36), uint32] */;
  %1310 = @func_10880(%1309) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32]) */;
  %1311 = %1304.0;
  %1312 = %1305.0;
  %1313 = %1306.0;
  %1314 = %1307.0;
  %1315 = %1310.1;
  (%1311, %1312, %1313, %1314, %1315, meta[relay.Constant][62] /* ty=Tensor[(36), uint32] */)
}

def @func_11715(%var_11671: Tensor[(6, 3, 16), uint64]) -> (Tensor[(6, 3, 16), float64], Tensor[(6, 3, 16), uint64], Tensor[(1470), float32], Tensor[(6, 3, 16), float32]) {
  %1316 = @func_6720() /* ty=Tensor[(6, 3, 16), uint64] */;
  %1317 = cast(%1316, dtype="float64") /* ty=Tensor[(6, 3, 16), float64] */;
  %1318 = cast(%var_11671, dtype="uint64") /* ty=Tensor[(6, 3, 16), uint64] */;
  %1319 = shape_of(%1316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1320 = cast(%1316, dtype="uint64") /* ty=Tensor[(6, 3, 16), uint64] */;
  %1321 = dyn.reshape(%1318, %1319, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1322 = @func_11413() /* ty=(Tensor[(1470), float32],) */;
  %1323 = cast(%var_11671, dtype="float32") /* ty=Tensor[(6, 3, 16), float32] */;
  %1324 = cos(%1317) /* ty=Tensor[(6, 3, 16), float64] */;
  %1325 = logical_xor(%1320, %1321) /* ty=Tensor[(6, 3, 16), uint64] */;
  %1326 = %1322.0;
  %1327 = rsqrt(%1323) /* ty=Tensor[(6, 3, 16), float32] */;
  (%1324, %1325, %1326, %1327)
}

def @func_12627() -> Tensor[(832), float32] {
  %1328 = @func_7939() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */;
  %1328.5
}

def @func_11207() -> (Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
  %1329 = @func_8980() /* ty=(Tensor[(6, 3, 16), uint64],) */;
  %1330 = cast(meta[relay.Constant][63] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1331 = reshape(%1330, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
  %1332 = @func_4886(%1331) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) */;
  %1333 = %1329.0;
  %1334 = %1332.0;
  (%1333, %1334, meta[relay.Constant][63] /* ty=Tensor[(1470), float32] */)
}

def @func_10224(%var_10189: Tensor[(832), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float64], Tensor[(7, 11, 3), float32], Tensor[(15, 6, 4), uint32], Tensor[(360), uint32], Tensor[(7, 11, 3), float64]) {
  %1335 = @func_7728() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1336 = cast(%var_10189, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1337 = reshape(%1336, newshape=[832, 1]) /* ty=Tensor[(832, 1), float32] */;
  %1338 = @func_4769(%1337) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832, 1), float32]) */;
  %1339 = cast(%var_10189, dtype="float64") /* ty=Tensor[(832), float64] */;
  %1340 = @func_9446() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1341 = cast(meta[relay.Constant][64] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %1342 = cast(meta[relay.Constant][64] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %1343 = reshape(%1341, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), uint32] */;
  %1344 = reshape(%1342, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), uint32] */;
  %1345 = @func_8565() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %1346 = %1335.4;
  %1347 = %1338.1;
  %1348 = erf(%1339) /* ty=Tensor[(832), float64] */;
  %1349 = %1340.0;
  %1350 = @func_6684(%1343, %1344) /* ty=Tensor[(15, 6, 4), uint32] */;
  %1351 = %1345.0;
  (%1346, %1347, %1348, %1349, %1350, meta[relay.Constant][64] /* ty=Tensor[(360), uint32] */, %1351)
}

def @func_23287() -> Tensor[(7, 11, 3), float32] {
  %1352 = @func_21169() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1352.0
}

def @func_10437(%var_10422: Tensor[(234), uint16], %var_10428: Tensor[(60), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(234), uint16], Tensor[(6, 10, 1), float64], Tensor[(60), float64], Tensor[(117, 2), float32]) {
  %1353 = @func_5064() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1354 = cast(%var_10428, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1355 = reshape(%1354, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
  %1356 = cast(%var_10422, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %1357 = cast(%var_10422, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %1358 = cast(%var_10422, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %1359 = reshape(%1356, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %1360 = reshape(%1357, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %1361 = reshape(%1358, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %1362 = @func_8001(%1359, %1360, %1361) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(117, 2), uint8], Tensor[(117, 2), bool]) */;
  %1363 = %1362.4;
  %1364 = cast(%1363, dtype="float32") /* ty=Tensor[(117, 2), float32] */;
  %1365 = %1353.1;
  %1366 = @func_7252(%1355) /* ty=Tensor[(6, 10, 1), float64] */;
  %1367 = tan(%1364) /* ty=Tensor[(117, 2), float32] */;
  (%1365, %var_10422, %1366, %var_10428, %1367)
}

def @func_17124() -> (Tensor[(7, 11, 3), float64],) {
  %1368 = @func_6447() /* ty=Tensor[(7, 11, 3), float64] */;
  (%1368,)
}

def @func_19035(%var_19019: Tensor[(14, 12, 16), float64]) -> (Tensor[(14, 12, 16), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1369 = cast(%var_19019, dtype="float64") /* ty=Tensor[(14, 12, 16), float64] */;
  %1370 = @func_12692() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %1371 = cosh(%1369) /* ty=Tensor[(14, 12, 16), float64] */;
  %1372 = %1370.0;
  %1373 = @func_15262() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1371, %1372, %1373)
}

def @func_21019() -> Tensor[(7, 11, 3), float32] {
  %1374 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1374.1
}

def @func_23818() -> (Tensor[(7, 11, 3), float32],) {
  %1375 = @func_23272() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1376 = %1375.1;
  (%1376,)
}

def @func_11373(%var_11352: Tensor[(13, 15, 14), float64], %var_11362: Tensor[(98, 15), float32]) -> (Tensor[(13, 15, 14), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(98, 15), float32], Tensor[(7, 11, 3), float32]) {
  %1377 = cast(%var_11352, dtype="float64") /* ty=Tensor[(13, 15, 14), float64] */;
  %1378 = @func_4290() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1379 = cast(meta[relay.Constant][65] /* ty=Tensor[(36), uint32] */, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %1380 = cast(%var_11362, dtype="float32") /* ty=Tensor[(98, 15), float32] */;
  %1381 = reshape(%1379, newshape=[36]) /* ty=Tensor[(36), uint32] */;
  %1382 = reshape(%1380, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %1383 = @func_3374(%1381, %1382) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %1384 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1385 = erf(%1377) /* ty=Tensor[(13, 15, 14), float64] */;
  %1386 = %1378.0;
  %1387 = %1383.3;
  %1388 = %1384.1;
  (%1385, %1386, %1387, meta[relay.Constant][65] /* ty=Tensor[(36), uint32] */, %var_11362, %1388)
}

def @func_5035() -> Tensor[(7, 11, 3), float32] {
  %1389 = @func_3687() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1389.0
}

def @func_7886(%var_7881: Tensor[(36), uint32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(36), uint32], Tensor[(1470), float32]) {
  %1390 = @func_4423() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1391 = cast(%var_7881, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %1392 = cast(meta[relay.Constant][66] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1393 = reshape(%1391, newshape=[36]) /* ty=Tensor[(36), uint32] */;
  %1394 = reshape(%1392, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %1395 = @func_3374(%1393, %1394) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %1396 = %1390.0;
  %1397 = %1395.4;
  (%1396, %1397, %var_7881, meta[relay.Constant][66] /* ty=Tensor[(1470), float32] */)
}

def @func_15631() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(455), float32]) {
  %1398 = @func_6474() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1399 = @func_7939() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */;
  %1400 = @func_11492() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32]) */;
  %1401 = %1398.0;
  %1402 = %1399.2;
  %1403 = %1400.1;
  (%1401, %1402, %1403)
}

def @func_18662(%var_18626: Tensor[(11, 15, 9), float32]) -> (Tensor[(11, 15, 9), float32], Tensor[(1470), float32], Tensor[(1470), float32]) {
  %1404 = cast(%var_18626, dtype="float32") /* ty=Tensor[(11, 15, 9), float32] */;
  %1405 = cast(meta[relay.Constant][67] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1406 = reshape(%1405, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %1407 = @func_11547(%1406) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(676), bool], Tensor[(1470), float32]) */;
  %1408 = sin(%1404) /* ty=Tensor[(11, 15, 9), float32] */;
  %1409 = %1407.1;
  (%1408, %1409, meta[relay.Constant][67] /* ty=Tensor[(1470), float32] */)
}

def @func_23372() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 16, 2), float64]) {
  %1410 = @func_8660() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1411 = @func_9467() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1412 = @func_14459() /* ty=(Tensor[(7, 16, 2), float64], Tensor[(7, 16, 2), float64]) */;
  %1413 = @func_19346() /* ty=Tensor[(7, 11, 3), float32] */;
  %1414 = %1410.0;
  %1415 = %1411.0;
  %1416 = %1412.0;
  (%1413, %1414, %1415, %1416)
}

def @func_17665() -> (Tensor[(7, 11, 3), float32],) {
  %1417 = @func_14368() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1417,)
}

def @func_6720() -> Tensor[(6, 3, 16), uint64] {
  %1418 = cast(meta[relay.Constant][69] /* ty=Tensor[(6, 3, 16), uint64] */, dtype="uint64") /* ty=Tensor[(6, 3, 16), uint64] */;
  %1419 = shape_of(meta[relay.Constant][68] /* ty=Tensor[(6, 3, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1420 = cast(meta[relay.Constant][68] /* ty=Tensor[(6, 3, 16), uint64] */, dtype="uint64") /* ty=Tensor[(6, 3, 16), uint64] */;
  %1421 = dyn.reshape(%1418, %1419, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%1420, %1421) /* ty=Tensor[(6, 3, 16), uint64] */
}

def @func_3905() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1422 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1423 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1424 = %1422.0;
  %1425 = %1423.0;
  (%1424, %1425)
}

def @func_7218(%var_7206: Tensor[(5, 4, 4), float64]) -> (Tensor[(5, 4, 4), float64],) {
  %1426 = cast(%var_7206, dtype="float64") /* ty=Tensor[(5, 4, 4), float64] */;
  %1427 = atan(%1426) /* ty=Tensor[(5, 4, 4), float64] */;
  (%1427,)
}

def @func_22685() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  %1428 = @func_18304() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %1429 = @func_22147() /* ty=Tensor[(7, 11, 3), float32] */;
  %1430 = %1428.0;
  (%1429, %1430)
}

def @func_14313() -> (Tensor[(7, 11, 3), float32],) {
  %1431 = @func_6959() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(14, 105), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1432 = %1431.3;
  (%1432,)
}

def @func_14566(%var_14534: Tensor[(13, 7, 9), int64], %var_14535: Tensor[(13, 7, 9), int64]) -> (Tensor[(13, 7, 9), int64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  %1433 = cast(%var_14535, dtype="int64") /* ty=Tensor[(13, 7, 9), int64] */;
  %1434 = shape_of(%var_14534, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1435 = cast(%var_14534, dtype="int64") /* ty=Tensor[(13, 7, 9), int64] */;
  %1436 = dyn.reshape(%1433, %1434, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1437 = @func_13463() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1438 = @func_7728() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1439 = @func_9610() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %1440 = logical_xor(%1435, %1436) /* ty=Tensor[(13, 7, 9), int64] */;
  %1441 = %1437.0;
  %1442 = %1438.5;
  %1443 = %1439.2;
  (%1440, %1441, %1442, %1443)
}

def @func_4510(%var_4501: Tensor[(7, 210), float32]) -> (Tensor[(13, 13, 4), int8], Tensor[(676), int8], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) {
  %1444 = cast(meta[relay.Constant][70] /* ty=Tensor[(676), int8] */, dtype="int8") /* ty=Tensor[(676), int8] */;
  %1445 = cast(%var_4501, dtype="float32") /* ty=Tensor[(7, 210), float32] */;
  %1446 = reshape(%1444, newshape=[13, 13, 4]) /* ty=Tensor[(13, 13, 4), int8] */;
  %1447 = reshape(%1445, newshape=[1, 1470]) /* ty=Tensor[(1, 1470), float32] */;
  %1448 = @func_2818(%1446, %1447) /* ty=(Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(13, 13, 4), float32]) */;
  %1449 = @func_3796() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %1450 = %1449.1;
  %1451 = cast(%1450, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %1452 = %1448.0;
  %1453 = log2(%1451) /* ty=Tensor[(7, 11, 3), float32] */;
  (%1452, meta[relay.Constant][70] /* ty=Tensor[(676), int8] */, %var_4501, %1453)
}

def @func_5446(%var_5440: Tensor[(14, 105), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(14, 105), float32]) {
  %1454 = @func_3796() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %1455 = cast(%var_5440, dtype="float32") /* ty=Tensor[(14, 105), float32] */;
  %1456 = reshape(%1455, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %1457 = @func_2770(%1456) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32]) */;
  %1458 = %1454.0;
  %1459 = %1457.1;
  (%1458, %1459, %var_5440)
}

def @func_9507() -> (Tensor[(7, 11, 3), float32],) {
  %1460 = @func_4154() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %1461 = %1460.0;
  (%1461,)
}

def @func_20424() -> (Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1462 = @func_10584() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1463 = @func_19624() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1464 = @func_18489() /* ty=Tensor[(14, 15, 7), float32] */;
  %1465 = %1462.0;
  %1466 = %1463.0;
  (%1464, %1465, %1466)
}

def @func_19774() -> (Tensor[(7, 11, 3), float32],) {
  %1467 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1467,)
}

def @func_13228() -> (Tensor[(7, 11, 3), float64], Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1468 = @func_11207() /* ty=(Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %1469 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1470 = @func_5193() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %1471 = @func_8195() /* ty=Tensor[(7, 11, 3), float64] */;
  %1472 = %1468.0;
  %1473 = %1469.0;
  %1474 = %1470.0;
  (%1471, %1472, %1473, %1474)
}

def @func_13115() -> (Tensor[(7, 11, 3), float64],) {
  %1475 = @func_3991() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %1476 = %1475.0;
  (%1476,)
}

def @func_9898() -> Tensor[(7, 11, 3), float32] {
  @func_7007() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_2220(%var_2214: Tensor[(14, 15, 7), float32]) -> (Tensor[(14, 15, 7), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) {
  %1477 = cast(%var_2214, dtype="float32") /* ty=Tensor[(14, 15, 7), float32] */;
  %1478 = cast(meta[relay.Constant][71] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
  %1479 = cast(meta[relay.Constant][71] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
  %1480 = reshape(%1478, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %1481 = reshape(%1479, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %1482 = tan(%1477) /* ty=Tensor[(14, 15, 7), float32] */;
  %1483 = @func_670(%1480, %1481) /* ty=Tensor[(13, 7, 5), float32] */;
  (%1482, %1483, meta[relay.Constant][71] /* ty=Tensor[(455), float32] */)
}

def @func_6783() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  %1484 = @func_3991() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %1485 = @func_5550() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(1470), float32]) */;
  %1486 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  %1487 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  %1488 = %1484.0;
  %1489 = %1485.0;
  (%1486, %1487, %1488, %1489)
}

def @func_7077() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) {
  %1490 = @func_5890() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */;
  %1491 = @func_5515() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1492 = %1491.0;
  %1493 = cast(%1492, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %1494 = reshape(%1493, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), float32] */;
  %1495 = %1490.0;
  %1496 = @func_5035() /* ty=Tensor[(7, 11, 3), float32] */;
  %1497 = @func_3771(%1494) /* ty=Tensor[(7, 11, 3), int8] */;
  (%1495, %1492, %1496, %1497)
}

def @func_13463() -> (Tensor[(7, 11, 3), float32],) {
  %1498 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1498,)
}

def @func_5662() -> (Tensor[(7, 11, 3), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) {
  %1499 = @func_3991() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %1500 = @func_5550() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(1470), float32]) */;
  %1501 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1502 = %1499.0;
  %1503 = %1500.1;
  %1504 = %1501.0;
  (%1502, %1503, %1504)
}

def @func_19624() -> (Tensor[(7, 11, 3), float32],) {
  %1505 = @func_18059() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1505,)
}

def @func_21598() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1506 = @func_11207() /* ty=(Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %1507 = @func_21336() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1508 = @func_13412() /* ty=Tensor[(7, 11, 3), float32] */;
  %1509 = %1506.1;
  %1510 = %1507.1;
  (%1508, %1509, %1510)
}

def @func_20327(%var_20297: Tensor[(832), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(108), float32], Tensor[(832), float32]) {
  %1511 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1512 = cast(%var_20297, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1513 = reshape(%1512, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
  %1514 = @func_2460(%1513) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) */;
  %1515 = %1511.0;
  %1516 = %1514.1;
  (%1515, %1516, %var_20297)
}

def @func_22551() -> (Tensor[(7, 11, 3), float32],) {
  %1517 = @func_22260() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1517,)
}

def @func_9415() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) {
  %1518 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1519 = @func_6641() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1520 = %1518.1;
  %1521 = cast(%1520, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %1522 = reshape(%1521, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), float32] */;
  %1523 = %1519.1;
  %1524 = @func_3771(%1522) /* ty=Tensor[(7, 11, 3), int8] */;
  (%1520, %1523, %1524)
}

def @func_4060() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1525 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1526 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1527 = %1526.1;
  %1528 = cast(%1527, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %1529 = %1525.0;
  %1530 = acosh(%1528) /* ty=Tensor[(7, 11, 3), float32] */;
  (%1529, %1530)
}

def @func_6959() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(14, 105), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1531 = @func_6783() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %1532 = @func_5064() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1533 = cast(meta[relay.Constant][72] /* ty=Tensor[(14, 105), float32] */, dtype="float32") /* ty=Tensor[(14, 105), float32] */;
  %1534 = reshape(%1533, newshape=[14, 105]) /* ty=Tensor[(14, 105), float32] */;
  %1535 = @func_5446(%1534) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(14, 105), float32]) */;
  %1536 = @func_3796() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %1537 = %1531.1;
  %1538 = %1532.1;
  %1539 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  %1540 = %1535.0;
  %1541 = %1536.0;
  %1542 = @func_5834() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1537, %1538, %1539, %1540, meta[relay.Constant][72] /* ty=Tensor[(14, 105), float32] */, %1541, %1542)
}

def @func_8507(%var_8480: Tensor[(832), float32]) -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(13, 8, 8), float32]) {
  %1543 = @func_7939() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */;
  %1544 = cast(%var_8480, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1545 = reshape(%1544, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1546 = @func_5418(%1545) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(4, 9, 3), float32], Tensor[(832), float32]) */;
  %1547 = cast(%var_8480, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1548 = reshape(%1547, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
  %1549 = @func_2460(%1548) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) */;
  %1550 = %1543.0;
  %1551 = %1546.0;
  %1552 = %1549.3;
  (%1550, %1551, %var_8480, %1552)
}

def @func_18591() -> (Tensor[(7, 11, 3), float32],) {
  %1553 = @func_14872() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1554 = %1553.1;
  (%1554,)
}

def @func_3374(%var_3342: Tensor[(36), uint32], %var_3368: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
  %1555 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1556 = cast(%var_3342, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %1557 = reshape(%1556, newshape=[3, 3, 4]) /* ty=Tensor[(3, 3, 4), uint32] */;
  %1558 = cast(%var_3368, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1559 = reshape(%1558, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %1560 = @func_2770(%1559) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32]) */;
  %1561 = %1555.0;
  %1562 = @func_3044(%1557) /* ty=Tensor[(3, 3, 4), uint32] */;
  %1563 = %1560.0;
  (%1561, %1562, %var_3342, %1563, %var_3368)
}

def @func_19096() -> (Tensor[(14, 15, 7), float32],) {
  %1564 = @func_18489() /* ty=Tensor[(14, 15, 7), float32] */;
  (%1564,)
}

def @func_13196(%var_13165: Tensor[(676), int8]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(1, 1470), float32], Tensor[(7, 11, 3), float32], Tensor[(676), float32]) {
  %1565 = @func_9610() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %1566 = cast(meta[relay.Constant][73] /* ty=Tensor[(1, 1470), float32] */, dtype="float32") /* ty=Tensor[(1, 1470), float32] */;
  %1567 = cast(%var_13165, dtype="int8") /* ty=Tensor[(676), int8] */;
  %1568 = reshape(%1566, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %1569 = reshape(%1567, newshape=[13, 52]) /* ty=Tensor[(13, 52), int8] */;
  %1570 = @func_8746(%1568, %1569) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(13, 52), int64], Tensor[(7, 11, 3), float32]) */;
  %1571 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1572 = cast(%var_13165, dtype="float32") /* ty=Tensor[(676), float32] */;
  %1573 = %1565.1;
  %1574 = %1570.5;
  %1575 = %1571.0;
  %1576 = acosh(%1572) /* ty=Tensor[(676), float32] */;
  (%1573, %1574, meta[relay.Constant][73] /* ty=Tensor[(1, 1470), float32] */, %1575, %1576)
}

def @func_8869() -> (Tensor[(7, 11, 3), float32],) {
  %1577 = @func_4014() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1578 = %1577.1;
  (%1578,)
}

def @func_16260(%var_16255: Tensor[(1, 13, 1), float32]) -> (Tensor[(1, 13, 1), float32], Tensor[(7, 11, 3), float64]) {
  %1579 = cast(%var_16255, dtype="float32") /* ty=Tensor[(1, 13, 1), float32] */;
  %1580 = @func_8565() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %1581 = acos(%1579) /* ty=Tensor[(1, 13, 1), float32] */;
  %1582 = %1580.0;
  (%1581, %1582)
}

def @func_11216() -> Tensor[(7, 11, 3), float32] {
  @func_5497() /* ty=Tensor[(7, 11, 3), float32] */
}

def @main() -> (Tensor[(7, 11, 3), float32], Tensor[(2, 12, 11), uint16], Tensor[(22), float64]) {
  %1583 = cast(meta[relay.Constant][74] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %1584 = reshape(%1583, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), float64] */;
  %1585 = @func_19214(%1584) /* ty=(Tensor[(1470), float32], Tensor[(2, 12, 11), uint16], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1586 = cast(meta[relay.Constant][74] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %1587 = @func_19346() /* ty=Tensor[(7, 11, 3), float32] */;
  %1588 = %1585.1;
  %1589 = cos(%1586) /* ty=Tensor[(22), float64] */;
  (%1587, %1588, %1589)
}

def @func_21215() -> Tensor[(7, 11, 3), float32] {
  @func_16590() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_18059() -> Tensor[(7, 11, 3), float32] {
  @func_14274() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_22893() -> Tensor[(7, 11, 3), float32] {
  @func_9898() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_23900() -> Tensor[(455), float32] {
  %1590 = @func_15631() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(455), float32]) */;
  %1590.2
}

def @func_23960(%var_23955: Tensor[(1, 13, 14), float32]) -> (Tensor[(1, 13, 14), float32],) {
  %1591 = cast(%var_23955, dtype="float32") /* ty=Tensor[(1, 13, 14), float32] */;
  %1592 = acos(%1591) /* ty=Tensor[(1, 13, 14), float32] */;
  (%1592,)
}

def @func_20941() -> (Tensor[(7, 11, 3), float64], Tensor[(15, 6, 4), uint32]) {
  %1593 = @func_15878() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %1594 = @func_11812() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(15, 6, 4), uint32], Tensor[(360), uint32]) */;
  %1595 = %1593.1;
  %1596 = %1594.1;
  (%1595, %1596)
}

def @func_12818() -> (Tensor[(7, 11, 3), int8],) {
  %1597 = @func_9415() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */;
  %1598 = %1597.2;
  (%1598,)
}

def @func_5726() -> Tensor[(7, 11, 3), float32] {
  %1599 = @func_4623() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1599.0
}

def @func_10669() -> Tensor[(7, 11, 3), float32] {
  %1600 = @func_7138() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1600.0
}

def @func_22854() -> (Tensor[(7, 11, 3), float32], Tensor[(2, 416), float32], Tensor[(234), uint16]) {
  %1601 = @func_16173() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1602 = cast(meta[relay.Constant][75] /* ty=Tensor[(234), uint16] */, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %1603 = reshape(%1602, newshape=[234]) /* ty=Tensor[(234), uint16] */;
  %1604 = @func_16489(%1603) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32], Tensor[(2, 416), float32]) */;
  %1605 = %1601.1;
  %1606 = %1604.6;
  (%1605, %1606, meta[relay.Constant][75] /* ty=Tensor[(234), uint16] */)
}

def @func_7570() -> (Tensor[(7, 11, 3), float32],) {
  %1607 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1608 = %1607.0;
  (%1608,)
}

def @func_20345() -> (Tensor[(7, 11, 3), float32], Tensor[(832, 1), float32], Tensor[(832), float32]) {
  %1609 = @func_7138() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1610 = cast(meta[relay.Constant][76] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1611 = reshape(%1610, newshape=[832, 1]) /* ty=Tensor[(832, 1), float32] */;
  %1612 = @func_4769(%1611) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832, 1), float32]) */;
  %1613 = %1609.0;
  %1614 = %1612.3;
  (%1613, %1614, meta[relay.Constant][76] /* ty=Tensor[(832), float32] */)
}

def @func_11274() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  %1615 = @func_8660() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1616 = @func_6447() /* ty=Tensor[(7, 11, 3), float64] */;
  %1617 = %1615.0;
  (%1616, %1617)
}

def @func_13347() -> (Tensor[(7, 11, 3), float32],) {
  %1618 = @func_13228() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1619 = %1618.3;
  (%1619,)
}

def @func_9484() -> Tensor[(7, 11, 3), float32] {
  @func_6547() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_20083() -> (Tensor[(7, 11, 3), float32],) {
  %1620 = @func_11216() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1620,)
}

def @func_2770(%var_2765: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32]) {
  %1621 = @func_2741() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1622 = cast(%var_2765, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1623 = reshape(%1622, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float32] */;
  %1624 = @func_2220(%1623) /* ty=(Tensor[(14, 15, 7), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
  %1625 = %1621.0;
  %1626 = %1624.2;
  (%1625, %1626, %var_2765)
}

def @func_7939() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) {
  %1627 = @func_5662() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */;
  %1628 = @func_7728() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1629 = @func_7077() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */;
  %1630 = cast(meta[relay.Constant][77] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1631 = reshape(%1630, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1632 = @func_5418(%1631) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(4, 9, 3), float32], Tensor[(832), float32]) */;
  %1633 = @func_7356() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1634 = %1627.0;
  %1635 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  %1636 = %1628.3;
  %1637 = %1629.0;
  %1638 = %1632.6;
  %1639 = %1633.1;
  (%1634, %1635, %1636, %1637, %1638, meta[relay.Constant][77] /* ty=Tensor[(832), float32] */, %1639)
}

def @func_9610() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  %1640 = @func_6783() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %1641 = @func_7007() /* ty=Tensor[(7, 11, 3), float32] */;
  %1642 = @func_5923() /* ty=Tensor[(7, 11, 3), float32] */;
  %1643 = %1640.2;
  (%1641, %1642, %1643)
}

def @func_9120() -> Tensor[(7, 11, 3), float32] {
  %1644 = @func_6641() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1644.0
}

def @func_20968() -> (Tensor[(1470), float32],) {
  %1645 = @func_19763() /* ty=(Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) */;
  %1646 = %1645.0;
  (%1646,)
}

def @func_2818(%var_2800: Tensor[(13, 13, 4), int8], %var_2805: Tensor[(1, 1470), float32]) -> (Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(13, 13, 4), float32]) {
  %1647 = cast(%var_2800, dtype="int8") /* ty=Tensor[(13, 13, 4), int8] */;
  %1648 = shape_of(meta[relay.Constant][78] /* ty=Tensor[(13, 13, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1649 = cast(meta[relay.Constant][78] /* ty=Tensor[(13, 13, 4), int8] */, dtype="int8") /* ty=Tensor[(13, 13, 4), int8] */;
  %1650 = dyn.reshape(%1647, %1648, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1651 = cast(%var_2805, dtype="float32") /* ty=Tensor[(1, 1470), float32] */;
  %1652 = reshape(%1651, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %1653 = @func_2770(%1652) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32]) */;
  %1654 = cast(meta[relay.Constant][78] /* ty=Tensor[(13, 13, 4), int8] */, dtype="float32") /* ty=Tensor[(13, 13, 4), float32] */;
  %1655 = shape_of(%var_2800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1656 = cast(%var_2800, dtype="float32") /* ty=Tensor[(13, 13, 4), float32] */;
  %1657 = dyn.reshape(%1654, %1655, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1658 = maximum(%1649, %1650) /* ty=Tensor[(13, 13, 4), int8] */;
  %1659 = %1653.0;
  %1660 = floor_divide(%1656, %1657) /* ty=Tensor[(13, 13, 4), float32] */;
  (%1658, %1659, %var_2805, %1660)
}

def @func_18756() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1661 = @func_17665() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1662 = @func_17236() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1663 = %1661.0;
  %1664 = %1662.0;
  (%1663, %1664)
}

def @func_4769(%var_4765: Tensor[(832, 1), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832, 1), float32]) {
  %1665 = @func_4623() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1666 = cast(%var_4765, dtype="float32") /* ty=Tensor[(832, 1), float32] */;
  %1667 = reshape(%1666, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
  %1668 = @func_2460(%1667) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) */;
  %1669 = @func_3703() /* ty=Tensor[(7, 11, 3), float32] */;
  %1670 = %1665.1;
  %1671 = %1668.2;
  (%1669, %1670, %1671, %var_4765)
}

def @func_13815() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1672 = @func_5998() /* ty=Tensor[(7, 11, 3), float32] */;
  %1673 = @func_13412() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1672, %1673)
}

def @func_17093() -> Tensor[(7, 11, 3), float32] {
  @func_6201() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_12935() -> (Tensor[(7, 11, 3), float32],) {
  %1674 = @func_7077() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */;
  %1675 = %1674.2;
  (%1675,)
}

def @func_5968() -> (Tensor[(7, 11, 3), float32],) {
  %1676 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1677 = %1676.0;
  (%1677,)
}

def @func_13412() -> Tensor[(7, 11, 3), float32] {
  %1678 = @func_12664() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1678.0
}

def @func_17161() -> Tensor[(7, 11, 3), float32] {
  %1679 = @func_7463() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1679.0
}

def @func_22304(%var_22275: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(15, 6, 4), uint32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1680 = @func_21099() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32]) */;
  %1681 = cast(%var_22275, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1682 = reshape(%1681, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
  %1683 = @func_4886(%1682) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) */;
  %1684 = @func_11812() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(15, 6, 4), uint32], Tensor[(360), uint32]) */;
  %1685 = @func_18756() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1686 = @func_9242() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1687 = %1680.0;
  %1688 = %1683.0;
  %1689 = %1684.1;
  %1690 = %1685.1;
  %1691 = %1686.0;
  (%1687, %1688, %var_22275, %1689, %1690, %1691)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9484() -> Tensor[(7, 11, 3), float32] {
  @func_6547() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_3704() -> Tensor[(7, 11, 3), float32] {
  %1 = fn () -> Tensor[(7, 11, 3), float32] {
    %0 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %0.0
  };
  %1() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_19712() -> (Tensor[(7, 11, 3), float32],) {
  %2 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %3 = %2.0;
  (%3,)
}

def @func_5571() -> (Tensor[(7, 11, 3), float32],) {
  %6 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %4 = @func_3687() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %5 = %4.0;
    (%5,)
  };
  %6() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_23273() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %10 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %7 = @func_7110() /* ty=(Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) */;
    %8 = @func_11615() /* ty=Tensor[(7, 11, 3), float32] */;
    %9 = %7.1;
    (%8, %9)
  };
  %10() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_23747() -> (Tensor[(7, 16, 2), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %11 = @func_14459() /* ty=(Tensor[(7, 16, 2), float64], Tensor[(7, 16, 2), float64]) */;
  %12 = @func_15631() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(455), float32]) */;
  %13 = @func_5515() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %14 = %11.0;
  %15 = %12.0;
  %16 = %13.0;
  (%14, %15, %16)
}

def @func_3482() -> (Tensor[(7, 11, 3), float32],) {
  %17 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %18 = %17.0;
  %19 = cast(%18, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
  %20 = sigmoid(%19) /* ty=Tensor[(7, 11, 3), float64] */;
  %21 = cast(%20, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %22 = sqrt(%21) /* ty=Tensor[(7, 11, 3), float32] */;
  (%22,)
}

def @func_20943() -> (Tensor[(7, 11, 3), float64], Tensor[(15, 6, 4), uint32]) {
  @func_20941() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(15, 6, 4), uint32]) */
}

def @func_11098() -> (Tensor[(4, 9, 3), float32], Tensor[(1470), float32], Tensor[(216, 4), int16], Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32]) {
  %42 = fn () -> (Tensor[(4, 9, 3), float32], Tensor[(1470), float32], Tensor[(216, 4), int16], Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32]) {
    %23 = @func_5890() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */;
    %24 = cast(meta[relay.Constant][0] /* ty=Tensor[(216, 4), int16] */, dtype="int16") /* ty=Tensor[(216, 4), int16] */;
    %25 = reshape(%24, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), int16] */;
    %26 = @func_10393(%25) /* ty=(Tensor[(9, 8, 12), int32], Tensor[(5, 4, 4), float64], Tensor[(80), float64], Tensor[(9, 8, 12), float64], Tensor[(1470), float32], Tensor[(1470), float32]) */;
    %27 = @func_5662() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */;
    %28 = %27.1;
    %29 = cast(%28, dtype="float32") /* ty=Tensor[(14, 15, 7), float32] */;
    %30 = @func_6607() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %31 = %26.5;
    %32 = cast(%31, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %33 = reshape(%32, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
    %34 = @func_4510(%33) /* ty=(Tensor[(13, 13, 4), int8], Tensor[(676), int8], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) */;
    %35 = @func_5968() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %36 = %23.1;
    %37 = @func_7418() /* ty=Tensor[(7, 11, 3), float32] */;
    %38 = erf(%29) /* ty=Tensor[(14, 15, 7), float32] */;
    %39 = %30.0;
    %40 = %34.0;
    %41 = %35.0;
    (%36, %31, meta[relay.Constant][0] /* ty=Tensor[(216, 4), int16] */, %37, %38, %39, %40, %41)
  };
  %42() /* ty=(Tensor[(4, 9, 3), float32], Tensor[(1470), float32], Tensor[(216, 4), int16], Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32]) */
}

def @func_19417() -> (Tensor[(7, 11, 3), float64],) {
  %45 = fn () -> (Tensor[(7, 11, 3), float64],) {
    %43 = @func_9610() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
    %44 = %43.2;
    (%44,)
  };
  %45() /* ty=(Tensor[(7, 11, 3), float64],) */
}

def @func_15632() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(455), float32]) {
  %52 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(455), float32]) {
    %46 = @func_6474() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %47 = @func_7939() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */;
    %48 = @func_11492() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32]) */;
    %49 = %46.0;
    %50 = %47.2;
    %51 = %48.1;
    (%49, %50, %51)
  };
  %52() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(455), float32]) */
}

def @func_4155() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  %59 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
    %53 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %54 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %55 = %54.0;
    %56 = cast(%55, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
    %57 = %53.1;
    %58 = tan(%56) /* ty=Tensor[(7, 11, 3), float64] */;
    (%57, %58)
  };
  %59() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */
}

def @func_20425() -> (Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %65 = fn () -> (Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %60 = @func_10584() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %61 = @func_19624() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %62 = @func_18489() /* ty=Tensor[(14, 15, 7), float32] */;
    %63 = %60.0;
    %64 = %61.0;
    (%62, %63, %64)
  };
  %65() /* ty=(Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_21020() -> Tensor[(7, 11, 3), float32] {
  %67 = fn () -> Tensor[(7, 11, 3), float32] {
    %66 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %66.1
  };
  %67() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_21796() -> Tensor[(7, 11, 3), float32] {
  @func_21794() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_7418() -> Tensor[(7, 11, 3), float32] {
  %68 = @func_5745() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %68.0
}

def @func_17347(%var_17346: Tensor[(4, 2, 9), float32]) -> (Tensor[(4, 2, 9), float32],) {
  %71 = fn (%var_17341: Tensor[(4, 2, 9), float32]) -> (Tensor[(4, 2, 9), float32],) {
    %69 = cast(%var_17341, dtype="float32") /* ty=Tensor[(4, 2, 9), float32] */;
    %70 = erf(%69) /* ty=Tensor[(4, 2, 9), float32] */;
    (%70,)
  };
  %71(%var_17346) /* ty=(Tensor[(4, 2, 9), float32],) */
}

def @func_6785() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  @func_6783() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */
}

def @func_13349() -> (Tensor[(7, 11, 3), float32],) {
  @func_13347() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_13228() -> (Tensor[(7, 11, 3), float64], Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %72 = @func_11207() /* ty=(Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %73 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %74 = @func_5193() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %75 = @func_8195() /* ty=Tensor[(7, 11, 3), float64] */;
  %76 = %72.0;
  %77 = %73.0;
  %78 = %74.0;
  (%75, %76, %77, %78)
}

def @func_19945() -> Tensor[(7, 11, 3), float32] {
  %80 = fn () -> Tensor[(7, 11, 3), float32] {
    %79 = @func_11020() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %79.0
  };
  %80() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_24038() -> (Tensor[(7, 11, 3), float32],) {
  %81 = @func_10772() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float64], Tensor[(208, 4), float32], Tensor[(15, 6, 4), uint32], Tensor[(180, 2), uint32], Tensor[(7, 11, 3), float32]) */;
  %82 = %81.1;
  (%82,)
}

def @func_6202() -> Tensor[(7, 11, 3), float32] {
  %84 = fn () -> Tensor[(7, 11, 3), float32] {
    %83 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %83.0
  };
  %84() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_23963(%var_23961: Tensor[(1, 13, 14), float32]) -> (Tensor[(1, 13, 14), float32],) {
  @func_23960(%var_23961) /* ty=(Tensor[(1, 13, 14), float32],) */
}

def @func_21419(%var_21418: Tensor[(6, 16, 13), float32]) -> (Tensor[(6, 16, 13), float32],) {
  %87 = fn (%var_21413: Tensor[(6, 16, 13), float32]) -> (Tensor[(6, 16, 13), float32],) {
    %85 = cast(%var_21413, dtype="float32") /* ty=Tensor[(6, 16, 13), float32] */;
    %86 = cos(%85) /* ty=Tensor[(6, 16, 13), float32] */;
    (%86,)
  };
  %87(%var_21418) /* ty=(Tensor[(6, 16, 13), float32],) */
}

def @func_12369() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %88 = @func_3796() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %89 = @func_5820() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %90 = %88.1;
  %91 = %89.1;
  (%90, %91)
}

def @func_9028(%var_9026: Tensor[(1470, 1), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(1470, 1), float32]) {
  %92 = cast(%var_9026, dtype="float32") /* ty=Tensor[(1470, 1), float32] */;
  %93 = reshape(%92, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
  %94 = @func_8385(%93) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32], Tensor[(6, 10, 1), float64], Tensor[(60), float64]) */;
  %95 = @func_6201() /* ty=Tensor[(7, 11, 3), float32] */;
  %96 = %94.7;
  (%95, %96, %var_9026)
}

def @func_4661() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %97 = @func_4154() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %98 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %99 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %100 = %97.1;
  %101 = %98.1;
  %102 = %99.0;
  (%100, %101, %102)
}

def @func_17498(%var_17496: Tensor[(4, 16, 16), float64]) -> (Tensor[(4, 16, 16), float64], Tensor[(7, 11, 3), float32], Tensor[(2, 40), float64]) {
  @func_17495(%var_17496) /* ty=(Tensor[(4, 16, 16), float64], Tensor[(7, 11, 3), float32], Tensor[(2, 40), float64]) */
}

def @func_12612() -> (Tensor[(7, 11, 3), float32],) {
  @func_12610() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_4722() -> (Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) {
  @func_4720() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */
}

def @func_18017() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_18015() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_6608() -> (Tensor[(7, 11, 3), float32],) {
  %105 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %103 = @func_5588() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %104 = %103.0;
    (%104,)
  };
  %105() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_21927(%var_21926: Tensor[(60), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(6, 10, 1), float64], Tensor[(60), float64]) {
  %113 = fn (%var_21901: Tensor[(60), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(6, 10, 1), float64], Tensor[(60), float64]) {
    %106 = @func_4720() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
    %107 = @func_19096() /* ty=(Tensor[(14, 15, 7), float32],) */;
    %108 = cast(%var_21901, dtype="float64") /* ty=Tensor[(60), float64] */;
    %109 = reshape(%108, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
    %110 = %106.0;
    %111 = %107.0;
    %112 = @func_7252(%109) /* ty=Tensor[(6, 10, 1), float64] */;
    (%110, %111, %112, %var_21901)
  };
  %113(%var_21926) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(6, 10, 1), float64], Tensor[(60), float64]) */
}

def @func_23666(%var_23664: Tensor[(72, 4), uint64]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(6, 3, 16), float32], Tensor[(72, 4), uint64]) {
  @func_23663(%var_23664) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(6, 3, 16), float32], Tensor[(72, 4), uint64]) */
}

def @func_14696() -> (Tensor[(7, 11, 3), float32],) {
  %114 = @func_11492() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32]) */;
  %115 = %114.0;
  (%115,)
}

def @func_17188() -> (Tensor[(7, 11, 3), float32],) {
  %118 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %116 = @func_13381() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %117 = %116.0;
    (%117,)
  };
  %118() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_16903(%var_16902: Tensor[(80), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(5, 4, 4), float64], Tensor[(80), float64]) {
  %125 = fn (%var_16899: Tensor[(80), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(5, 4, 4), float64], Tensor[(80), float64]) {
    %119 = @func_10584() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %120 = cast(%var_16899, dtype="float64") /* ty=Tensor[(80), float64] */;
    %121 = reshape(%120, newshape=[5, 4, 4]) /* ty=Tensor[(5, 4, 4), float64] */;
    %122 = @func_7218(%121) /* ty=(Tensor[(5, 4, 4), float64],) */;
    %123 = %119.0;
    %124 = %122.0;
    (%123, %124, %var_16899)
  };
  %125(%var_16902) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(5, 4, 4), float64], Tensor[(80), float64]) */
}

def @func_7465() -> (Tensor[(7, 11, 3), float32],) {
  @func_7463() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_15543() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %132 = fn () -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %126 = @func_13021() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) */;
    %127 = @func_9242() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %128 = @func_6474() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %129 = %126.1;
    %130 = %127.0;
    %131 = %128.2;
    (%129, %130, %131)
  };
  %132() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_7140() -> (Tensor[(7, 11, 3), float32],) {
  @func_7138() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_10585() -> (Tensor[(7, 11, 3), float32],) {
  %134 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %133 = @func_9898() /* ty=Tensor[(7, 11, 3), float32] */;
    (%133,)
  };
  %134() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_4573() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %135 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %136 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %137 = %135.0;
  %138 = %136.0;
  (%137, %138)
}

def @func_14945() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_14943() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_21445() -> Tensor[(7, 11, 3), float32] {
  %139 = @func_17270() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %139.0
}

def @func_10303() -> (Tensor[(7, 11, 3), float32],) {
  @func_10301() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_22147() -> Tensor[(7, 11, 3), float32] {
  %140 = @func_14872() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %140.2
}

def @func_17955() -> (Tensor[(7, 11, 3), float32],) {
  %143 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %141 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %142 = %141.0;
    (%142,)
  };
  %143() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_13709() -> Tensor[(7, 11, 3), bool] {
  %144 = @func_7110() /* ty=(Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) */;
  %144.0
}

def @func_11216() -> Tensor[(7, 11, 3), float32] {
  @func_5497() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_9121() -> Tensor[(7, 11, 3), float32] {
  %146 = fn () -> Tensor[(7, 11, 3), float32] {
    %145 = @func_6641() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %145.0
  };
  %146() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_11812() -> (Tensor[(7, 11, 3), float32], Tensor[(15, 6, 4), uint32], Tensor[(360), uint32]) {
  %147 = cast(meta[relay.Constant][1] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %148 = cast(meta[relay.Constant][1] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %149 = reshape(%147, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), uint32] */;
  %150 = reshape(%148, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), uint32] */;
  %151 = @func_5726() /* ty=Tensor[(7, 11, 3), float32] */;
  %152 = @func_6684(%149, %150) /* ty=Tensor[(15, 6, 4), uint32] */;
  (%151, %152, meta[relay.Constant][1] /* ty=Tensor[(360), uint32] */)
}

def @func_19983() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %156 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %153 = @func_9507() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %154 = %153.0;
    %155 = @func_7007() /* ty=Tensor[(7, 11, 3), float32] */;
    (%154, %155)
  };
  %156() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_23749() -> (Tensor[(7, 16, 2), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_23747() /* ty=(Tensor[(7, 16, 2), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_17272() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_17270() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_6734() -> Tensor[(7, 11, 3), float32] {
  %158 = fn () -> Tensor[(7, 11, 3), float32] {
    %157 = @func_4423() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %157.0
  };
  %158() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_15880() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  @func_15878() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */
}

def @func_22553() -> (Tensor[(7, 11, 3), float32],) {
  @func_22551() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_22119(%var_22117: Tensor[(11, 5, 13), float64], %var_22118: Tensor[(11, 5, 13), float64]) -> (Tensor[(11, 5, 13), bool], Tensor[(7, 16, 2), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(11, 5, 13), float32], Tensor[(7, 11, 3), float32]) {
  @func_22115(%var_22117, %var_22118) /* ty=(Tensor[(11, 5, 13), bool], Tensor[(7, 16, 2), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(11, 5, 13), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_11616() -> Tensor[(7, 11, 3), float32] {
  %160 = fn () -> Tensor[(7, 11, 3), float32] {
    %159 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %159.0
  };
  %160() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_7571() -> (Tensor[(7, 11, 3), float32],) {
  %163 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %161 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %162 = %161.0;
    (%162,)
  };
  %163() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_7255(%var_7253: Tensor[(6, 10, 1), float64]) -> Tensor[(6, 10, 1), float64] {
  @func_7252(%var_7253) /* ty=Tensor[(6, 10, 1), float64] */
}

def @func_3047(%var_3045: Tensor[(3, 3, 4), uint32]) -> Tensor[(3, 3, 4), uint32] {
  @func_3044(%var_3045) /* ty=Tensor[(3, 3, 4), uint32] */
}

def @func_7525() -> (Tensor[(7, 11, 3), float32],) {
  %164 = @func_5588() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %165 = %164.0;
  (%165,)
}

def @func_23465() -> (Tensor[(7, 11, 3), float32],) {
  %167 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %166 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
    (%166,)
  };
  %167() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_18230() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 16, 2), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %168 = @func_12123() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %169 = @func_7728() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %170 = @func_14459() /* ty=(Tensor[(7, 16, 2), float64], Tensor[(7, 16, 2), float64]) */;
  %171 = @func_16781() /* ty=(Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */;
  %172 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %173 = %168.0;
  %174 = %169.3;
  %175 = %170.0;
  %176 = %171.1;
  %177 = %172.0;
  %178 = @func_16590() /* ty=Tensor[(7, 11, 3), float32] */;
  (%173, %174, %175, %176, %177, %178)
}

def @func_8197() -> Tensor[(7, 11, 3), float64] {
  @func_8195() /* ty=Tensor[(7, 11, 3), float64] */
}

def @func_20329(%var_20328: Tensor[(832), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(108), float32], Tensor[(832), float32]) {
  %185 = fn (%var_20297: Tensor[(832), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(108), float32], Tensor[(832), float32]) {
    %179 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %180 = cast(%var_20297, dtype="float32") /* ty=Tensor[(832), float32] */;
    %181 = reshape(%180, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
    %182 = @func_2460(%181) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) */;
    %183 = %179.0;
    %184 = %182.1;
    (%183, %184, %var_20297)
  };
  %185(%var_20328) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(108), float32], Tensor[(832), float32]) */
}

def @func_19145() -> Tensor[(7, 11, 3), float32] {
  %187 = fn () -> Tensor[(7, 11, 3), float32] {
    %186 = @func_7463() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %186.0
  };
  %187() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_7941() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) {
  @func_7939() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_5446(%var_5440: Tensor[(14, 105), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(14, 105), float32]) {
  %188 = @func_3796() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %189 = cast(%var_5440, dtype="float32") /* ty=Tensor[(14, 105), float32] */;
  %190 = reshape(%189, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %191 = @func_2770(%190) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32]) */;
  %192 = %188.0;
  %193 = %191.1;
  (%192, %193, %var_5440)
}

def @func_14570(%var_14568: Tensor[(13, 7, 9), int64], %var_14569: Tensor[(13, 7, 9), int64]) -> (Tensor[(13, 7, 9), int64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  @func_14566(%var_14568, %var_14569) /* ty=(Tensor[(13, 7, 9), int64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */
}

def @func_3620(%var_3618: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
  @func_3617(%var_3618) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */
}

def @func_16106() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_16104() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_9591() -> (Tensor[(7, 11, 3), float32],) {
  %194 = @func_7110() /* ty=(Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) */;
  %195 = %194.1;
  (%195,)
}

def @func_13463() -> (Tensor[(7, 11, 3), float32],) {
  %196 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  (%196,)
}

def @func_18305() -> (Tensor[(7, 11, 3), float64],) {
  %199 = fn () -> (Tensor[(7, 11, 3), float64],) {
    %197 = @func_8565() /* ty=(Tensor[(7, 11, 3), float64],) */;
    %198 = %197.0;
    (%198,)
  };
  %199() /* ty=(Tensor[(7, 11, 3), float64],) */
}

def @func_21625() -> Tensor[(6, 3, 16), uint64] {
  @func_6720() /* ty=Tensor[(6, 3, 16), uint64] */
}

def @func_7221(%var_7219: Tensor[(5, 4, 4), float64]) -> (Tensor[(5, 4, 4), float64],) {
  @func_7218(%var_7219) /* ty=(Tensor[(5, 4, 4), float64],) */
}

def @func_16241() -> (Tensor[(7, 11, 3), float32],) {
  %200 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %201 = %200.0;
  (%201,)
}

def @func_23819() -> (Tensor[(7, 11, 3), float32],) {
  %204 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %202 = @func_23272() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %203 = %202.1;
    (%203,)
  };
  %204() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_17894() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %210 = fn () -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %205 = @func_11274() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
    %206 = @func_13463() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %207 = %205.0;
    %208 = @func_13412() /* ty=Tensor[(7, 11, 3), float32] */;
    %209 = %206.0;
    (%207, %208, %209)
  };
  %210() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_9612() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  @func_9610() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */
}

def @func_2821(%var_2819: Tensor[(13, 13, 4), int8], %var_2820: Tensor[(1, 1470), float32]) -> (Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(13, 13, 4), float32]) {
  %225 = fn (%var_2800: Tensor[(13, 13, 4), int8], %var_2805: Tensor[(1, 1470), float32]) -> (Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(13, 13, 4), float32]) {
    %211 = cast(%var_2800, dtype="int8") /* ty=Tensor[(13, 13, 4), int8] */;
    %212 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(13, 13, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %213 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 13, 4), int8] */, dtype="int8") /* ty=Tensor[(13, 13, 4), int8] */;
    %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %215 = cast(%var_2805, dtype="float32") /* ty=Tensor[(1, 1470), float32] */;
    %216 = reshape(%215, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %217 = @func_2770(%216) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32]) */;
    %218 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 13, 4), int8] */, dtype="float32") /* ty=Tensor[(13, 13, 4), float32] */;
    %219 = shape_of(%var_2800, dtype="int32") /* ty=Tensor[(3), int32] */;
    %220 = cast(%var_2800, dtype="float32") /* ty=Tensor[(13, 13, 4), float32] */;
    %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %222 = maximum(%213, %214) /* ty=Tensor[(13, 13, 4), int8] */;
    %223 = %217.0;
    %224 = floor_divide(%220, %221) /* ty=Tensor[(13, 13, 4), float32] */;
    (%222, %223, %var_2805, %224)
  };
  %225(%var_2819, %var_2820) /* ty=(Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(13, 13, 4), float32]) */
}

def @func_12627() -> Tensor[(832), float32] {
  %226 = @func_7939() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */;
  %226.5
}

def @func_3586(%var_3584: Tensor[(7, 11, 3), float32], %var_3585: Tensor[(455), float32]) -> (Tensor[(7, 11, 3), uint64], Tensor[(13, 7, 5), float32], Tensor[(455), float32], Tensor[(13, 7, 5), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(7, 11, 3), float32]) {
  @func_3582(%var_3584, %var_3585) /* ty=(Tensor[(7, 11, 3), uint64], Tensor[(13, 7, 5), float32], Tensor[(455), float32], Tensor[(13, 7, 5), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_16013() -> (Tensor[(7, 11, 3), float32],) {
  @func_16011() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_5747() -> (Tensor[(7, 11, 3), float32],) {
  @func_5745() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_14314() -> (Tensor[(7, 11, 3), float32],) {
  %229 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %227 = @func_6959() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(14, 105), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %228 = %227.3;
    (%228,)
  };
  %229() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_3272(%var_3270: Tensor[(1470), float32], %var_3271: Tensor[(676), int8]) -> (Tensor[(7, 11, 3), int16], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(676), int8]) {
  %243 = fn (%var_3266: Tensor[(1470), float32], %var_3267: Tensor[(676), int8]) -> (Tensor[(7, 11, 3), int16], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(676), int8]) {
    %230 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %231 = %230.0;
    %232 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 11, 3), float32] */, dtype="int16") /* ty=Tensor[(7, 11, 3), int16] */;
    %233 = shape_of(%231, dtype="int32") /* ty=Tensor[(3), int32] */;
    %234 = cast(%231, dtype="int16") /* ty=Tensor[(7, 11, 3), int16] */;
    %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %236 = cast(%var_3266, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %237 = cast(%var_3267, dtype="int8") /* ty=Tensor[(676), int8] */;
    %238 = reshape(%236, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
    %239 = reshape(%237, newshape=[676]) /* ty=Tensor[(676), int8] */;
    %240 = @func_3173(%238, %239) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(455), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 13, 4), float32], Tensor[(676), int8]) */;
    %241 = bitwise_xor(%234, %235) /* ty=Tensor[(7, 11, 3), int16] */;
    %242 = %240.9;
    (%241, %242, %var_3266, %var_3267)
  };
  %243(%var_3270, %var_3271) /* ty=(Tensor[(7, 11, 3), int16], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(676), int8]) */
}

def @func_14275() -> Tensor[(7, 11, 3), float32] {
  %245 = fn () -> Tensor[(7, 11, 3), float32] {
    %244 = @func_11492() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32]) */;
    %244.0
  };
  %245() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_3991() -> (Tensor[(7, 11, 3), float64],) {
  %246 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %247 = %246.0;
  %248 = cast(%247, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
  %249 = cos(%248) /* ty=Tensor[(7, 11, 3), float64] */;
  (%249,)
}

def @func_20762() -> Tensor[(8, 14, 6), bool] {
  @func_20760() /* ty=Tensor[(8, 14, 6), bool] */
}

def @func_21337() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %253 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %250 = @func_18721() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(1, 455), float32]) */;
    %251 = %250.0;
    %252 = @func_8268() /* ty=Tensor[(7, 11, 3), float32] */;
    (%251, %252)
  };
  %253() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_7356() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %254 = @func_5968() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %255 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %256 = %254.0;
  %257 = %255.0;
  (%256, %257)
}

def @func_23507() -> (Tensor[(11, 3, 5), float64], Tensor[(4, 9, 3), float32], Tensor[(18, 6), float32]) {
  @func_23505() /* ty=(Tensor[(11, 3, 5), float64], Tensor[(4, 9, 3), float32], Tensor[(18, 6), float32]) */
}

def @func_10284() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %262 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %258 = @func_9467() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %259 = @func_6641() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %260 = %258.0;
    %261 = %259.0;
    (%260, %261)
  };
  %262() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_4015() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %267 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %263 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %264 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %265 = %263.1;
    %266 = %264.0;
    (%265, %266)
  };
  %267() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_9929() -> Tensor[(7, 11, 3), float32] {
  %269 = fn () -> Tensor[(7, 11, 3), float32] {
    %268 = @func_4661() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %268.2
  };
  %269() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_7252(%var_7243: Tensor[(6, 10, 1), float64]) -> Tensor[(6, 10, 1), float64] {
  %270 = cast(%var_7243, dtype="float64") /* ty=Tensor[(6, 10, 1), float64] */;
  cos(%270) /* ty=Tensor[(6, 10, 1), float64] */
}

def @func_10031() -> (Tensor[(7, 11, 3), float32], Tensor[(6, 3, 16), uint64]) {
  @func_10029() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(6, 3, 16), uint64]) */
}

def @func_13382() -> (Tensor[(7, 11, 3), float32],) {
  %273 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %271 = @func_9591() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %272 = %271.0;
    (%272,)
  };
  %273() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_21794() -> Tensor[(7, 11, 3), float32] {
  %274 = @func_9591() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %274.0
}

def @func_10224(%var_10189: Tensor[(832), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float64], Tensor[(7, 11, 3), float32], Tensor[(15, 6, 4), uint32], Tensor[(360), uint32], Tensor[(7, 11, 3), float64]) {
  %275 = @func_7728() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %276 = cast(%var_10189, dtype="float32") /* ty=Tensor[(832), float32] */;
  %277 = reshape(%276, newshape=[832, 1]) /* ty=Tensor[(832, 1), float32] */;
  %278 = @func_4769(%277) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832, 1), float32]) */;
  %279 = cast(%var_10189, dtype="float64") /* ty=Tensor[(832), float64] */;
  %280 = @func_9446() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %281 = cast(meta[relay.Constant][4] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %282 = cast(meta[relay.Constant][4] /* ty=Tensor[(360), uint32] */, dtype="uint32") /* ty=Tensor[(360), uint32] */;
  %283 = reshape(%281, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), uint32] */;
  %284 = reshape(%282, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), uint32] */;
  %285 = @func_8565() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %286 = %275.4;
  %287 = %278.1;
  %288 = erf(%279) /* ty=Tensor[(832), float64] */;
  %289 = %280.0;
  %290 = @func_6684(%283, %284) /* ty=Tensor[(15, 6, 4), uint32] */;
  %291 = %285.0;
  (%286, %287, %288, %289, %290, meta[relay.Constant][4] /* ty=Tensor[(360), uint32] */, %291)
}

def @func_9992() -> Tensor[(7, 11, 3), float64] {
  %292 = fn () -> Tensor[(7, 11, 3), float64] {
    @func_6447() /* ty=Tensor[(7, 11, 3), float64] */
  };
  %292() /* ty=Tensor[(7, 11, 3), float64] */
}

def @func_17238() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_17236() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_18399(%var_18398: Tensor[(14, 105), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(14, 105), float32]) {
  %299 = fn (%var_18374: Tensor[(14, 105), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(14, 105), float32]) {
    %293 = @func_9415() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */;
    %294 = cast(%var_18374, dtype="float32") /* ty=Tensor[(14, 105), float32] */;
    %295 = reshape(%294, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %296 = @func_11547(%295) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(676), bool], Tensor[(1470), float32]) */;
    %297 = %293.1;
    %298 = %296.1;
    (%297, %298, %var_18374)
  };
  %299(%var_18398) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(14, 105), float32]) */
}

def @func_6447() -> Tensor[(7, 11, 3), float64] {
  %300 = @func_5968() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %301 = %300.0;
  %302 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 11, 3), float32] */, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
  %303 = shape_of(%301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%301, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%304, %305) /* ty=Tensor[(7, 11, 3), float64] */
}

def @func_22950() -> (Tensor[(7, 11, 3), float32],) {
  %307 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %306 = @func_13534() /* ty=Tensor[(7, 11, 3), float32] */;
    (%306,)
  };
  %307() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_10029() -> (Tensor[(7, 11, 3), float32], Tensor[(6, 3, 16), uint64]) {
  %308 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %309 = @func_8980() /* ty=(Tensor[(6, 3, 16), uint64],) */;
  %310 = %308.0;
  %311 = %309.0;
  (%310, %311)
}

def @func_12992() -> (Tensor[(7, 11, 3), float32],) {
  %314 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %312 = @func_5820() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %313 = %312.0;
    (%313,)
  };
  %314() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_6476() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_6474() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_21171() -> (Tensor[(7, 11, 3), float32],) {
  @func_21169() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_19544() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(450), uint32]) {
  %324 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(450), uint32]) {
    %315 = @func_15591() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %316 = cast(meta[relay.Constant][6] /* ty=Tensor[(450), uint32] */, dtype="uint32") /* ty=Tensor[(450), uint32] */;
    %317 = cast(meta[relay.Constant][6] /* ty=Tensor[(450), uint32] */, dtype="uint32") /* ty=Tensor[(450), uint32] */;
    %318 = reshape(%316, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), uint32] */;
    %319 = reshape(%317, newshape=[15, 6, 5]) /* ty=Tensor[(15, 6, 5), uint32] */;
    %320 = @func_10558(%318, %319) /* ty=(Tensor[(15, 6, 5), float64], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) */;
    %321 = @func_12353() /* ty=Tensor[(7, 11, 3), float32] */;
    %322 = %315.0;
    %323 = %320.4;
    (%321, %322, %323, meta[relay.Constant][6] /* ty=Tensor[(450), uint32] */)
  };
  %324() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(450), uint32]) */
}

def @func_10440(%var_10438: Tensor[(234), uint16], %var_10439: Tensor[(60), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(234), uint16], Tensor[(6, 10, 1), float64], Tensor[(60), float64], Tensor[(117, 2), float32]) {
  %340 = fn (%var_10422: Tensor[(234), uint16], %var_10428: Tensor[(60), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(234), uint16], Tensor[(6, 10, 1), float64], Tensor[(60), float64], Tensor[(117, 2), float32]) {
    %325 = @func_5064() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %326 = cast(%var_10428, dtype="float64") /* ty=Tensor[(60), float64] */;
    %327 = reshape(%326, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
    %328 = cast(%var_10422, dtype="uint16") /* ty=Tensor[(234), uint16] */;
    %329 = cast(%var_10422, dtype="uint16") /* ty=Tensor[(234), uint16] */;
    %330 = cast(%var_10422, dtype="uint16") /* ty=Tensor[(234), uint16] */;
    %331 = reshape(%328, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
    %332 = reshape(%329, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
    %333 = reshape(%330, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
    %334 = @func_8001(%331, %332, %333) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(117, 2), uint8], Tensor[(117, 2), bool]) */;
    %335 = %334.4;
    %336 = cast(%335, dtype="float32") /* ty=Tensor[(117, 2), float32] */;
    %337 = %325.1;
    %338 = @func_7252(%327) /* ty=Tensor[(6, 10, 1), float64] */;
    %339 = tan(%336) /* ty=Tensor[(117, 2), float32] */;
    (%337, %var_10422, %338, %var_10428, %339)
  };
  %340(%var_10438, %var_10439) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(234), uint16], Tensor[(6, 10, 1), float64], Tensor[(60), float64], Tensor[(117, 2), float32]) */
}

def @func_16703() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %341 = @func_12664() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %342 = @func_10505() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %343 = %341.0;
  %344 = %342.2;
  %345 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  (%343, %344, %345)
}

def @func_4663() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_4661() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_7939() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) {
  %346 = @func_5662() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */;
  %347 = @func_7728() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %348 = @func_7077() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */;
  %349 = cast(meta[relay.Constant][7] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %350 = reshape(%349, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %351 = @func_5418(%350) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(4, 9, 3), float32], Tensor[(832), float32]) */;
  %352 = @func_7356() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %353 = %346.0;
  %354 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  %355 = %347.3;
  %356 = %348.0;
  %357 = %351.6;
  %358 = %352.1;
  (%353, %354, %355, %356, %357, meta[relay.Constant][7] /* ty=Tensor[(832), float32] */, %358)
}

def @func_21101() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32]) {
  @func_21099() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32]) */
}

def @func_12693() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  %363 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
    %359 = @func_12036() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(9, 4), uint32]) */;
    %360 = @func_6733() /* ty=Tensor[(7, 11, 3), float32] */;
    %361 = %359.0;
    %362 = @func_6547() /* ty=Tensor[(7, 11, 3), float32] */;
    (%360, %361, %362)
  };
  %363() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */
}

def @func_22893() -> Tensor[(7, 11, 3), float32] {
  @func_9898() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_9446() -> (Tensor[(7, 11, 3), float32],) {
  %364 = @func_9019() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %365 = %364.0;
  (%365,)
}

def @func_10301() -> (Tensor[(7, 11, 3), float32],) {
  %366 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %367 = %366.0;
  (%367,)
}

def @func_22685() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  %368 = @func_18304() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %369 = @func_22147() /* ty=Tensor[(7, 11, 3), float32] */;
  %370 = %368.0;
  (%369, %370)
}

def @func_11164() -> (Tensor[(7, 11, 3), float32],) {
  @func_11162() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_13022() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) {
  %376 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) {
    %371 = @func_4290() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %372 = @func_12123() /* ty=(Tensor[(7, 11, 3), float64],) */;
    %373 = %371.0;
    %374 = %372.0;
    %375 = @func_9991() /* ty=Tensor[(7, 11, 3), float64] */;
    (%373, %374, %375)
  };
  %376() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) */
}

def @func_3374(%var_3342: Tensor[(36), uint32], %var_3368: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
  %377 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %378 = cast(%var_3342, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %379 = reshape(%378, newshape=[3, 3, 4]) /* ty=Tensor[(3, 3, 4), uint32] */;
  %380 = cast(%var_3368, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %381 = reshape(%380, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %382 = @func_2770(%381) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32]) */;
  %383 = %377.0;
  %384 = @func_3044(%379) /* ty=Tensor[(3, 3, 4), uint32] */;
  %385 = %382.0;
  (%383, %384, %var_3342, %385, %var_3368)
}

def @func_23960(%var_23955: Tensor[(1, 13, 14), float32]) -> (Tensor[(1, 13, 14), float32],) {
  %386 = cast(%var_23955, dtype="float32") /* ty=Tensor[(1, 13, 14), float32] */;
  %387 = acos(%386) /* ty=Tensor[(1, 13, 14), float32] */;
  (%387,)
}

def @func_4720() -> (Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) {
  %388 = @func_4423() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %389 = cast(meta[relay.Constant][8] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
  %390 = cast(meta[relay.Constant][8] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
  %391 = reshape(%389, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %392 = reshape(%390, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %393 = %388.0;
  %394 = @func_670(%391, %392) /* ty=Tensor[(13, 7, 5), float32] */;
  (%393, %394, meta[relay.Constant][8] /* ty=Tensor[(455), float32] */)
}

def @func_17094() -> Tensor[(7, 11, 3), float32] {
  %395 = fn () -> Tensor[(7, 11, 3), float32] {
    @func_6201() /* ty=Tensor[(7, 11, 3), float32] */
  };
  %395() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_18432() -> Tensor[(7, 11, 3), float32] {
  %397 = fn () -> Tensor[(7, 11, 3), float32] {
    %396 = @func_13463() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %396.0
  };
  %397() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_6404(%var_6391: Tensor[(108), float32]) -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(7, 11, 3), float32]) {
  %398 = @func_3991() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %399 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %400 = cast(%var_6391, dtype="float32") /* ty=Tensor[(108), float32] */;
  %401 = reshape(%400, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %402 = @func_2013(%401) /* ty=(Tensor[(4, 9, 3), float32],) */;
  %403 = @func_4014() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %404 = %398.0;
  %405 = %399.0;
  %406 = %402.0;
  %407 = %403.0;
  (%404, %405, %406, %var_6391, %407)
}

def @func_11162() -> (Tensor[(7, 11, 3), float32],) {
  %408 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %409 = %408.0;
  (%409,)
}

def @func_11373(%var_11352: Tensor[(13, 15, 14), float64], %var_11362: Tensor[(98, 15), float32]) -> (Tensor[(13, 15, 14), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(98, 15), float32], Tensor[(7, 11, 3), float32]) {
  %410 = cast(%var_11352, dtype="float64") /* ty=Tensor[(13, 15, 14), float64] */;
  %411 = @func_4290() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %412 = cast(meta[relay.Constant][9] /* ty=Tensor[(36), uint32] */, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %413 = cast(%var_11362, dtype="float32") /* ty=Tensor[(98, 15), float32] */;
  %414 = reshape(%412, newshape=[36]) /* ty=Tensor[(36), uint32] */;
  %415 = reshape(%413, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %416 = @func_3374(%414, %415) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %417 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %418 = erf(%410) /* ty=Tensor[(13, 15, 14), float64] */;
  %419 = %411.0;
  %420 = %416.3;
  %421 = %417.1;
  (%418, %419, %420, meta[relay.Constant][9] /* ty=Tensor[(36), uint32] */, %var_11362, %421)
}

def @func_21785() -> Tensor[(7, 11, 3), float32] {
  %422 = @func_12610() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %422.0
}

def @func_12235(%var_12234: Tensor[(3, 78), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(3, 78), float64], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(7, 11, 3), float32]) {
  %455 = fn (%var_12196: Tensor[(3, 78), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(3, 78), float64], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(7, 11, 3), float32]) {
    %423 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %424 = cast(%var_12196, dtype="uint16") /* ty=Tensor[(3, 78), uint16] */;
    %425 = cast(%var_12196, dtype="uint16") /* ty=Tensor[(3, 78), uint16] */;
    %426 = cast(%var_12196, dtype="uint16") /* ty=Tensor[(3, 78), uint16] */;
    %427 = reshape(%424, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
    %428 = reshape(%425, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
    %429 = reshape(%426, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
    %430 = @func_8001(%427, %428, %429) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(117, 2), uint8], Tensor[(117, 2), bool]) */;
    %431 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 78), uint16] */, dtype="int64") /* ty=Tensor[(3, 78), int64] */;
    %432 = shape_of(%var_12196, dtype="int32") /* ty=Tensor[(2), int32] */;
    %433 = cast(%var_12196, dtype="int64") /* ty=Tensor[(3, 78), int64] */;
    %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %435 = logical_xor(%433, %434) /* ty=Tensor[(3, 78), int64] */;
    %436 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 78), uint16] */, dtype="float64") /* ty=Tensor[(3, 78), float64] */;
    %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(2), int32] */;
    %438 = cast(%435, dtype="float64") /* ty=Tensor[(3, 78), float64] */;
    %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %440 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %441 = divide(%438, %439) /* ty=Tensor[(3, 78), float64] */;
    %442 = cast(%441, dtype="uint16") /* ty=Tensor[(3, 78), uint16] */;
    %443 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 78), uint16] */, dtype="uint16") /* ty=Tensor[(3, 78), uint16] */;
    %444 = cast(%var_12196, dtype="uint16") /* ty=Tensor[(3, 78), uint16] */;
    %445 = reshape(%442, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
    %446 = reshape(%443, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
    %447 = reshape(%444, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
    %448 = @func_8001(%445, %446, %447) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(117, 2), uint8], Tensor[(117, 2), bool]) */;
    %449 = @func_8869() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %450 = %423.0;
    %451 = %430.0;
    %452 = %440.0;
    %453 = %448.3;
    %454 = %449.0;
    (%450, %451, %441, %452, %453, %454)
  };
  %455(%var_12234) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(3, 78), float64], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(7, 11, 3), float32]) */
}

def @func_7218(%var_7206: Tensor[(5, 4, 4), float64]) -> (Tensor[(5, 4, 4), float64],) {
  %456 = cast(%var_7206, dtype="float64") /* ty=Tensor[(5, 4, 4), float64] */;
  %457 = atan(%456) /* ty=Tensor[(5, 4, 4), float64] */;
  (%457,)
}

def @func_13117() -> (Tensor[(7, 11, 3), float64],) {
  @func_13115() /* ty=(Tensor[(7, 11, 3), float64],) */
}

def @func_2770(%var_2765: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32]) {
  %458 = @func_2741() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %459 = cast(%var_2765, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %460 = reshape(%459, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float32] */;
  %461 = @func_2220(%460) /* ty=(Tensor[(14, 15, 7), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
  %462 = %458.0;
  %463 = %461.2;
  (%462, %463, %var_2765)
}

def @func_21959() -> (Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) {
  %464 = @func_13709() /* ty=Tensor[(7, 11, 3), bool] */;
  %465 = @func_9484() /* ty=Tensor[(7, 11, 3), float32] */;
  (%464, %465)
}

def @func_16705() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_16703() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_3774(%var_3772: Tensor[(7, 11, 3), float32]) -> Tensor[(7, 11, 3), int8] {
  @func_3771(%var_3772) /* ty=Tensor[(7, 11, 3), int8] */
}

def @func_13566() -> (Tensor[(7, 11, 3), float32],) {
  @func_13564() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_19922(%var_19900: Tensor[(33, 3), float32], %var_19902: Tensor[(18, 6), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32], Tensor[(9, 7, 11), float32], Tensor[(33, 3), float32], Tensor[(693, 1), float32], Tensor[(18, 6), float32]) {
  %466 = @func_13021() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) */;
  %467 = cast(meta[relay.Constant][11] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %468 = reshape(%467, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float32] */;
  %469 = @func_2220(%468) /* ty=(Tensor[(14, 15, 7), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
  %470 = cast(%var_19900, dtype="float32") /* ty=Tensor[(33, 3), float32] */;
  %471 = cast(meta[relay.Constant][12] /* ty=Tensor[(693, 1), float32] */, dtype="float32") /* ty=Tensor[(693, 1), float32] */;
  %472 = cast(%var_19902, dtype="float32") /* ty=Tensor[(18, 6), float32] */;
  %473 = reshape(%470, newshape=[9, 1, 11]) /* ty=Tensor[(9, 1, 11), float32] */;
  %474 = reshape(%471, newshape=[9, 7, 11]) /* ty=Tensor[(9, 7, 11), float32] */;
  %475 = reshape(%472, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %476 = @func_10789(%473, %474, %475) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(9, 2, 11), uint8]) */;
  %477 = %466.0;
  %478 = %469.2;
  %479 = %476.0;
  (%477, %478, meta[relay.Constant][11] /* ty=Tensor[(1470), float32] */, %479, %var_19900, meta[relay.Constant][12] /* ty=Tensor[(693, 1), float32] */, %var_19902)
}

def @func_12900(%var_12898: Tensor[(9, 6, 7), float32]) -> (Tensor[(9, 6, 7), float32],) {
  @func_12897(%var_12898) /* ty=(Tensor[(9, 6, 7), float32],) */
}

def @func_16031() -> Tensor[(7, 11, 3), float32] {
  @func_16029() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_16860(%var_16858: Tensor[(70), uint64]) -> (Tensor[(6, 3, 16), uint64], Tensor[(1, 14, 5), uint64], uint64, Tensor[(70), uint64], Tensor[(7, 11, 3), float32]) {
  @func_16857(%var_16858) /* ty=(Tensor[(6, 3, 16), uint64], Tensor[(1, 14, 5), uint64], uint64, Tensor[(70), uint64], Tensor[(7, 11, 3), float32]) */
}

def @func_19657() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  @func_19655() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */
}

def @func_9242() -> (Tensor[(7, 11, 3), float32],) {
  %480 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %481 = %480.0;
  (%481,)
}

def @func_16243() -> (Tensor[(7, 11, 3), float32],) {
  @func_16241() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_19346() -> Tensor[(7, 11, 3), float32] {
  %482 = @func_14872() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %482.0
}

def @func_3689() -> (Tensor[(7, 11, 3), float32],) {
  @func_3687() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_5836() -> Tensor[(7, 11, 3), float32] {
  @func_5834() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_7138() -> (Tensor[(7, 11, 3), float32],) {
  %483 = @func_5923() /* ty=Tensor[(7, 11, 3), float32] */;
  (%483,)
}

def @func_2743() -> (Tensor[(7, 11, 3), float32],) {
  @func_2741() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_14566(%var_14534: Tensor[(13, 7, 9), int64], %var_14535: Tensor[(13, 7, 9), int64]) -> (Tensor[(13, 7, 9), int64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  %484 = cast(%var_14535, dtype="int64") /* ty=Tensor[(13, 7, 9), int64] */;
  %485 = shape_of(%var_14534, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%var_14534, dtype="int64") /* ty=Tensor[(13, 7, 9), int64] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %488 = @func_13463() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %489 = @func_7728() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %490 = @func_9610() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %491 = logical_xor(%486, %487) /* ty=Tensor[(13, 7, 9), int64] */;
  %492 = %488.0;
  %493 = %489.5;
  %494 = %490.2;
  (%491, %492, %493, %494)
}

def @func_19775() -> (Tensor[(7, 11, 3), float32],) {
  %496 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %495 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
    (%495,)
  };
  %496() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_21375() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %497 = @func_9415() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */;
  %498 = %497.0;
  %499 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  (%498, %499)
}

def @func_6549() -> Tensor[(7, 11, 3), float32] {
  @func_6547() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_12926() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %506 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %500 = @func_9019() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %501 = @func_4014() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %502 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %503 = %500.0;
    %504 = %501.0;
    %505 = %502.0;
    (%503, %504, %505)
  };
  %506() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_8750(%var_8748: Tensor[(1470), float32], %var_8749: Tensor[(13, 52), int8]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(13, 52), int64], Tensor[(7, 11, 3), float32]) {
  @func_8746(%var_8748, %var_8749) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(13, 52), int64], Tensor[(7, 11, 3), float32]) */
}

def @func_12037() -> (Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(9, 4), uint32]) {
  %512 = fn () -> (Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(9, 4), uint32]) {
    %507 = @func_3991() /* ty=(Tensor[(7, 11, 3), float64],) */;
    %508 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 4), uint32] */, dtype="uint32") /* ty=Tensor[(9, 4), uint32] */;
    %509 = reshape(%508, newshape=[3, 3, 4]) /* ty=Tensor[(3, 3, 4), uint32] */;
    %510 = %507.0;
    %511 = @func_3044(%509) /* ty=Tensor[(3, 3, 4), uint32] */;
    (%510, %511, meta[relay.Constant][13] /* ty=Tensor[(9, 4), uint32] */)
  };
  %512() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(9, 4), uint32]) */
}

def @func_8871() -> (Tensor[(7, 11, 3), float32],) {
  @func_8869() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_13465() -> (Tensor[(7, 11, 3), float32],) {
  @func_13463() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_12629() -> Tensor[(832), float32] {
  @func_12627() /* ty=Tensor[(832), float32] */
}

def @func_9031(%var_9029: Tensor[(1470, 1), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(1470, 1), float32]) {
  @func_9028(%var_9029) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(1470, 1), float32]) */
}

def @func_13308() -> Tensor[(6, 3, 16), uint64] {
  %513 = @func_10029() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(6, 3, 16), uint64]) */;
  %513.1
}

def @func_20760() -> Tensor[(8, 14, 6), bool] {
  %514 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 14, 6), bool] */, dtype="bool") /* ty=Tensor[(8, 14, 6), bool] */;
  %515 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(8, 14, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(meta[relay.Constant][14] /* ty=Tensor[(8, 14, 6), bool] */, dtype="bool") /* ty=Tensor[(8, 14, 6), bool] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%516, %517) /* ty=Tensor[(8, 14, 6), bool] */
}

def @func_5822() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_5820() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_7112() -> (Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) {
  @func_7110() /* ty=(Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) */
}

def @func_13711() -> Tensor[(7, 11, 3), bool] {
  @func_13709() /* ty=Tensor[(7, 11, 3), bool] */
}

def @func_5064() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %518 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %519 = @func_5035() /* ty=Tensor[(7, 11, 3), float32] */;
  %520 = %518.0;
  (%519, %520)
}

def @func_23952() -> Tensor[(7, 11, 3), float32] {
  %521 = @func_9019() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %521.0
}

def @func_10669() -> Tensor[(7, 11, 3), float32] {
  %522 = @func_7138() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %522.0
}

def @func_2942() -> (Tensor[(7, 11, 3), float32],) {
  %523 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %524 = %523.0;
  %525 = cast(%524, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %526 = rsqrt(%525) /* ty=Tensor[(7, 11, 3), float32] */;
  (%526,)
}

def @func_17983() -> Tensor[(7, 11, 3), float32] {
  %527 = @func_7356() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %527.1
}

def @func_19624() -> (Tensor[(7, 11, 3), float32],) {
  %528 = @func_18059() /* ty=Tensor[(7, 11, 3), float32] */;
  (%528,)
}

def @func_23288() -> Tensor[(7, 11, 3), float32] {
  %530 = fn () -> Tensor[(7, 11, 3), float32] {
    %529 = @func_21169() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %529.0
  };
  %530() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_7728() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %531 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %532 = @func_5515() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %533 = @func_3796() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %534 = @func_5662() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */;
  %535 = %534.0;
  %536 = cast(%535, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %537 = @func_7525() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %538 = %531.1;
  %539 = %532.0;
  %540 = %533.1;
  %541 = asinh(%536) /* ty=Tensor[(7, 11, 3), float32] */;
  %542 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  %543 = %537.0;
  (%538, %539, %540, %541, %542, %543)
}

def @func_22687() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  @func_22685() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */
}

def @func_12371() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_12369() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_9795(%var_9794: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(1470), float32], Tensor[(676), int8], Tensor[(7, 11, 3), float32]) {
  %554 = fn (%var_9786: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(1470), float32], Tensor[(676), int8], Tensor[(7, 11, 3), float32]) {
    %544 = @func_6474() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %545 = cast(%var_9786, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %546 = cast(meta[relay.Constant][16] /* ty=Tensor[(676), int8] */, dtype="int8") /* ty=Tensor[(676), int8] */;
    %547 = reshape(%545, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
    %548 = reshape(%546, newshape=[676]) /* ty=Tensor[(676), int8] */;
    %549 = @func_3173(%547, %548) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(455), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 13, 4), float32], Tensor[(676), int8]) */;
    %550 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %551 = %544.2;
    %552 = %549.1;
    %553 = %550.0;
    (%551, %552, %var_9786, meta[relay.Constant][16] /* ty=Tensor[(676), int8] */, %553)
  };
  %554(%var_9794) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(1470), float32], Tensor[(676), int8], Tensor[(7, 11, 3), float32]) */
}

def @func_673(%var_671: Tensor[(13, 7, 5), float32], %var_672: Tensor[(13, 7, 5), float32]) -> Tensor[(13, 7, 5), float32] {
  %559 = fn (%var_641: Tensor[(13, 7, 5), float32], %var_642: Tensor[(13, 7, 5), float32]) -> Tensor[(13, 7, 5), float32] {
    %555 = cast(%var_642, dtype="float32") /* ty=Tensor[(13, 7, 5), float32] */;
    %556 = shape_of(%var_641, dtype="int32") /* ty=Tensor[(3), int32] */;
    %557 = cast(%var_641, dtype="float32") /* ty=Tensor[(13, 7, 5), float32] */;
    %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%557, %558) /* ty=Tensor[(13, 7, 5), float32] */
  };
  %559(%var_671, %var_672) /* ty=Tensor[(13, 7, 5), float32] */
}

def @func_18490() -> Tensor[(14, 15, 7), float32] {
  %561 = fn () -> Tensor[(14, 15, 7), float32] {
    %560 = @func_12834() /* ty=(Tensor[(14, 15, 7), float32],) */;
    %560.0
  };
  %561() /* ty=Tensor[(14, 15, 7), float32] */
}

def @func_5726() -> Tensor[(7, 11, 3), float32] {
  %562 = @func_4623() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %562.0
}

def @func_6684(%var_6673: Tensor[(15, 6, 4), uint32], %var_6674: Tensor[(15, 6, 4), uint32]) -> Tensor[(15, 6, 4), uint32] {
  %563 = cast(%var_6674, dtype="uint32") /* ty=Tensor[(15, 6, 4), uint32] */;
  %564 = shape_of(%var_6673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(%var_6673, dtype="uint32") /* ty=Tensor[(15, 6, 4), uint32] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%565, %566) /* ty=Tensor[(15, 6, 4), uint32] */
}

def @func_15087() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %567 = @func_14887() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %568 = %567.0;
  %569 = @func_8268() /* ty=Tensor[(7, 11, 3), float32] */;
  (%568, %569)
}

def @func_20050(%var_20041: Tensor[(234), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(234), uint16]) {
  %570 = @func_15591() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %571 = @func_3796() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %572 = cast(%var_20041, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %573 = reshape(%572, newshape=[234]) /* ty=Tensor[(234), uint16] */;
  %574 = @func_16489(%573) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32], Tensor[(2, 416), float32]) */;
  %575 = %570.0;
  %576 = %571.0;
  %577 = %574.4;
  (%575, %576, %577, %var_20041)
}

def @func_19655() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  %578 = @func_17124() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %579 = %578.0;
  %580 = @func_10669() /* ty=Tensor[(7, 11, 3), float32] */;
  (%579, %580)
}

def @func_21377() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_21375() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_20743() -> (Tensor[(7, 11, 3), float32],) {
  @func_20741() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_8387(%var_8386: Tensor[(7, 210), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32], Tensor[(6, 10, 1), float64], Tensor[(60), float64]) {
  %604 = fn (%var_8293: Tensor[(7, 210), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32], Tensor[(6, 10, 1), float64], Tensor[(60), float64]) {
    %581 = cast(%var_8293, dtype="float32") /* ty=Tensor[(7, 210), float32] */;
    %582 = reshape(%581, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
    %583 = @func_4510(%582) /* ty=(Tensor[(13, 13, 4), int8], Tensor[(676), int8], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) */;
    %584 = @func_7138() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %585 = cast(%var_8293, dtype="float32") /* ty=Tensor[(7, 210), float32] */;
    %586 = reshape(%585, newshape=[14, 105]) /* ty=Tensor[(14, 105), float32] */;
    %587 = @func_5446(%586) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(14, 105), float32]) */;
    %588 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %589 = @func_4623() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %590 = cast(meta[relay.Constant][17] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
    %591 = cast(meta[relay.Constant][17] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
    %592 = reshape(%590, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
    %593 = reshape(%591, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
    %594 = cast(meta[relay.Constant][18] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %595 = reshape(%594, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
    %596 = @func_5309() /* ty=Tensor[(7, 11, 3), float32] */;
    %597 = %583.3;
    %598 = %584.0;
    %599 = %587.0;
    %600 = %588.0;
    %601 = %589.0;
    %602 = @func_670(%592, %593) /* ty=Tensor[(13, 7, 5), float32] */;
    %603 = @func_7252(%595) /* ty=Tensor[(6, 10, 1), float64] */;
    (%596, %597, %var_8293, %598, %599, %600, %601, %602, meta[relay.Constant][17] /* ty=Tensor[(455), float32] */, %603, meta[relay.Constant][18] /* ty=Tensor[(60), float64] */)
  };
  %604(%var_8386) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32], Tensor[(6, 10, 1), float64], Tensor[(60), float64]) */
}

def @func_12447(%var_12445: int32, %var_12446: Tensor[(8, 13, 1), int32]) -> Tensor[(8, 13, 1), int32] {
  %607 = fn (%var_12436: int32, %var_12437: Tensor[(8, 13, 1), int32]) -> Tensor[(8, 13, 1), int32] {
    %605 = cast(%var_12436, dtype="int32") /* ty=int32 */;
    %606 = cast(%var_12437, dtype="int32") /* ty=Tensor[(8, 13, 1), int32] */;
    logical_xor(%605, %606) /* ty=Tensor[(8, 13, 1), int32] */
  };
  %607(%var_12445, %var_12446) /* ty=Tensor[(8, 13, 1), int32] */
}

def @func_3993() -> (Tensor[(7, 11, 3), float64],) {
  @func_3991() /* ty=(Tensor[(7, 11, 3), float64],) */
}

def @func_2462(%var_2461: Tensor[(13, 8, 8), float32]) -> (Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) {
  %620 = fn (%var_2429: Tensor[(13, 8, 8), float32]) -> (Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) {
    %608 = cast(meta[relay.Constant][19] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
    %609 = reshape(%608, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
    %610 = @func_2013(%609) /* ty=(Tensor[(4, 9, 3), float32],) */;
    %611 = %610.0;
    %612 = cast(%611, dtype="float32") /* ty=Tensor[(4, 9, 3), float32] */;
    %613 = reshape(%612, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
    %614 = @func_2013(%613) /* ty=(Tensor[(4, 9, 3), float32],) */;
    %615 = cast(%var_2429, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
    %616 = asinh(%615) /* ty=Tensor[(13, 8, 8), float32] */;
    %617 = cast(%616, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
    %618 = %614.0;
    %619 = sigmoid(%617) /* ty=Tensor[(13, 8, 8), float32] */;
    (%611, meta[relay.Constant][19] /* ty=Tensor[(108), float32] */, %618, %619)
  };
  %620(%var_2461) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) */
}

def @func_16011() -> (Tensor[(7, 11, 3), float32],) {
  %621 = @func_13564() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %622 = %621.0;
  (%622,)
}

def @func_11715(%var_11671: Tensor[(6, 3, 16), uint64]) -> (Tensor[(6, 3, 16), float64], Tensor[(6, 3, 16), uint64], Tensor[(1470), float32], Tensor[(6, 3, 16), float32]) {
  %623 = @func_6720() /* ty=Tensor[(6, 3, 16), uint64] */;
  %624 = cast(%623, dtype="float64") /* ty=Tensor[(6, 3, 16), float64] */;
  %625 = cast(%var_11671, dtype="uint64") /* ty=Tensor[(6, 3, 16), uint64] */;
  %626 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(%623, dtype="uint64") /* ty=Tensor[(6, 3, 16), uint64] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %629 = @func_11413() /* ty=(Tensor[(1470), float32],) */;
  %630 = cast(%var_11671, dtype="float32") /* ty=Tensor[(6, 3, 16), float32] */;
  %631 = cos(%624) /* ty=Tensor[(6, 3, 16), float64] */;
  %632 = logical_xor(%627, %628) /* ty=Tensor[(6, 3, 16), uint64] */;
  %633 = %629.0;
  %634 = rsqrt(%630) /* ty=Tensor[(6, 3, 16), float32] */;
  (%631, %632, %633, %634)
}

def @func_8746(%var_8707: Tensor[(1470), float32], %var_8730: Tensor[(13, 52), int8]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(13, 52), int64], Tensor[(7, 11, 3), float32]) {
  %635 = @func_4623() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %636 = @func_8131() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %637 = @func_5662() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */;
  %638 = cast(%var_8707, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %639 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 52), int8] */, dtype="int8") /* ty=Tensor[(13, 52), int8] */;
  %640 = reshape(%638, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %641 = reshape(%639, newshape=[676]) /* ty=Tensor[(676), int8] */;
  %642 = @func_3269(%640, %641) /* ty=(Tensor[(7, 11, 3), int16], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(676), int8]) */;
  %643 = cast(%var_8730, dtype="int64") /* ty=Tensor[(13, 52), int64] */;
  %644 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(13, 52), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %645 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 52), int8] */, dtype="int64") /* ty=Tensor[(13, 52), int64] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %647 = @func_7463() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %648 = %635.0;
  %649 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  %650 = %636.0;
  %651 = @func_8578() /* ty=Tensor[(7, 11, 3), float32] */;
  %652 = %637.0;
  %653 = %642.2;
  %654 = bitwise_or(%645, %646) /* ty=Tensor[(13, 52), int64] */;
  %655 = %647.0;
  (%648, %649, %650, %651, %652, %653, %var_8707, %654, %655)
}

def @func_7463() -> (Tensor[(7, 11, 3), float32],) {
  %656 = @func_5745() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %657 = %656.0;
  (%657,)
}

def @func_12936() -> (Tensor[(7, 11, 3), float32],) {
  %660 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %658 = @func_7077() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */;
    %659 = %658.2;
    (%659,)
  };
  %660() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_22895() -> Tensor[(7, 11, 3), float32] {
  @func_22893() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_15089() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_15087() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_19549() -> Tensor[(6, 3, 16), uint64] {
  @func_19547() /* ty=Tensor[(6, 3, 16), uint64] */
}

def @func_5449(%var_5447: Tensor[(14, 105), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(14, 105), float32]) {
  @func_5446(%var_5447) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(14, 105), float32]) */
}

def @func_9346(%var_9345: int8) -> Tensor[(1, 14, 15), bool] {
  %663 = fn (%var_9334: int8) -> Tensor[(1, 14, 15), bool] {
    %661 = cast(%var_9334, dtype="bool") /* ty=bool */;
    %662 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 14, 15), int8] */, dtype="bool") /* ty=Tensor[(1, 14, 15), bool] */;
    less(%661, %662) /* ty=Tensor[(1, 14, 15), bool] */
  };
  %663(%var_9345) /* ty=Tensor[(1, 14, 15), bool] */
}

def @func_5923() -> Tensor[(7, 11, 3), float32] {
  %664 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %664.0
}

def @func_5035() -> Tensor[(7, 11, 3), float32] {
  %665 = @func_3687() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %665.0
}

def @func_11020() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %666 = @func_6959() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(14, 105), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %667 = @func_4014() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %668 = %666.3;
  %669 = %667.1;
  (%668, %669)
}

def @func_5516() -> (Tensor[(7, 11, 3), float32],) {
  %671 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %670 = @func_5309() /* ty=Tensor[(7, 11, 3), float32] */;
    (%670,)
  };
  %671() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_7110() -> (Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) {
  %672 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %673 = %672.0;
  %674 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 11, 3), float32] */, dtype="bool") /* ty=Tensor[(7, 11, 3), bool] */;
  %675 = shape_of(%673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%673, dtype="bool") /* ty=Tensor[(7, 11, 3), bool] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %678 = logical_and(%676, %677) /* ty=Tensor[(7, 11, 3), bool] */;
  %679 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  (%678, %679)
}

def @func_20641() -> (Tensor[(7, 11, 3), float32],) {
  %680 = @func_4623() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %681 = %680.0;
  (%681,)
}

def @func_3858() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %686 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %682 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %683 = @func_2741() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %684 = %682.0;
    %685 = %683.0;
    (%684, %685)
  };
  %686() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_21627() -> Tensor[(6, 3, 16), uint64] {
  @func_21625() /* ty=Tensor[(6, 3, 16), uint64] */
}

def @func_13198(%var_13197: Tensor[(676), int8]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(1, 1470), float32], Tensor[(7, 11, 3), float32], Tensor[(676), float32]) {
  %699 = fn (%var_13165: Tensor[(676), int8]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(1, 1470), float32], Tensor[(7, 11, 3), float32], Tensor[(676), float32]) {
    %687 = @func_9610() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
    %688 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 1470), float32] */, dtype="float32") /* ty=Tensor[(1, 1470), float32] */;
    %689 = cast(%var_13165, dtype="int8") /* ty=Tensor[(676), int8] */;
    %690 = reshape(%688, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %691 = reshape(%689, newshape=[13, 52]) /* ty=Tensor[(13, 52), int8] */;
    %692 = @func_8746(%690, %691) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(13, 52), int64], Tensor[(7, 11, 3), float32]) */;
    %693 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %694 = cast(%var_13165, dtype="float32") /* ty=Tensor[(676), float32] */;
    %695 = %687.1;
    %696 = %692.5;
    %697 = %693.0;
    %698 = acosh(%694) /* ty=Tensor[(676), float32] */;
    (%695, %696, meta[relay.Constant][23] /* ty=Tensor[(1, 1470), float32] */, %697, %698)
  };
  %699(%var_13197) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(1, 1470), float32], Tensor[(7, 11, 3), float32], Tensor[(676), float32]) */
}

def @func_17163() -> Tensor[(7, 11, 3), float32] {
  @func_17161() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_6722() -> Tensor[(6, 3, 16), uint64] {
  @func_6720() /* ty=Tensor[(6, 3, 16), uint64] */
}

def @func_22225() -> (Tensor[(1470), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %710 = fn () -> (Tensor[(1470), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %700 = @func_20968() /* ty=(Tensor[(1470), float32],) */;
    %701 = cast(meta[relay.Constant][24] /* ty=Tensor[(234), uint16] */, dtype="uint16") /* ty=Tensor[(234), uint16] */;
    %702 = reshape(%701, newshape=[234]) /* ty=Tensor[(234), uint16] */;
    %703 = @func_20050(%702) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(234), uint16]) */;
    %704 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %705 = %700.0;
    %706 = @func_22147() /* ty=Tensor[(7, 11, 3), float32] */;
    %707 = %703.0;
    %708 = @func_11615() /* ty=Tensor[(7, 11, 3), float32] */;
    %709 = %704.0;
    (%705, %706, %707, meta[relay.Constant][24] /* ty=Tensor[(234), uint16] */, %708, %709)
  };
  %710() /* ty=(Tensor[(1470), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_5588() -> (Tensor[(7, 11, 3), float32],) {
  %711 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %712 = %711.1;
  (%712,)
}

def @func_12897(%var_12885: Tensor[(9, 6, 7), float32]) -> (Tensor[(9, 6, 7), float32],) {
  %713 = cast(%var_12885, dtype="float32") /* ty=Tensor[(9, 6, 7), float32] */;
  %714 = asin(%713) /* ty=Tensor[(9, 6, 7), float32] */;
  (%714,)
}

def @func_8037() -> (Tensor[(7, 11, 3), float64], Tensor[(36), uint32], Tensor[(1470), float32], Tensor[(1, 676), int8]) {
  %723 = fn () -> (Tensor[(7, 11, 3), float64], Tensor[(36), uint32], Tensor[(1470), float32], Tensor[(1, 676), int8]) {
    %715 = @func_4154() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
    %716 = cast(meta[relay.Constant][25] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %717 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 676), int8] */, dtype="int8") /* ty=Tensor[(1, 676), int8] */;
    %718 = reshape(%716, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
    %719 = reshape(%717, newshape=[676]) /* ty=Tensor[(676), int8] */;
    %720 = @func_3173(%718, %719) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(455), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 13, 4), float32], Tensor[(676), int8]) */;
    %721 = %715.1;
    %722 = %720.2;
    (%721, %722, meta[relay.Constant][25] /* ty=Tensor[(1470), float32] */, meta[relay.Constant][26] /* ty=Tensor[(1, 676), int8] */)
  };
  %723() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(36), uint32], Tensor[(1470), float32], Tensor[(1, 676), int8]) */
}

def @func_2220(%var_2214: Tensor[(14, 15, 7), float32]) -> (Tensor[(14, 15, 7), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) {
  %724 = cast(%var_2214, dtype="float32") /* ty=Tensor[(14, 15, 7), float32] */;
  %725 = cast(meta[relay.Constant][27] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
  %726 = cast(meta[relay.Constant][27] /* ty=Tensor[(455), float32] */, dtype="float32") /* ty=Tensor[(455), float32] */;
  %727 = reshape(%725, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %728 = reshape(%726, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %729 = tan(%724) /* ty=Tensor[(14, 15, 7), float32] */;
  %730 = @func_670(%727, %728) /* ty=Tensor[(13, 7, 5), float32] */;
  (%729, %730, meta[relay.Constant][27] /* ty=Tensor[(455), float32] */)
}

def @func_4291() -> (Tensor[(7, 11, 3), float32],) {
  %733 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %731 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %732 = %731.0;
    (%732,)
  };
  %733() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_9244() -> (Tensor[(7, 11, 3), float32],) {
  @func_9242() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_15503() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %737 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %734 = @func_9446() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %735 = @func_6733() /* ty=Tensor[(7, 11, 3), float32] */;
    %736 = %734.0;
    (%735, %736)
  };
  %737() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_4425() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_4423() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_15263() -> Tensor[(7, 11, 3), float32] {
  %739 = fn () -> Tensor[(7, 11, 3), float32] {
    %738 = @func_5968() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %738.0
  };
  %739() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_19763() -> (Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) {
  %740 = @func_17574() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(60), float64], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) */;
  %741 = @func_7077() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */;
  %742 = %740.3;
  %743 = %741.2;
  (%742, %743)
}

def @func_20689() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_20687() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_23706() -> Tensor[(7, 11, 3), float32] {
  %744 = fn () -> Tensor[(7, 11, 3), float32] {
    @func_18431() /* ty=Tensor[(7, 11, 3), float32] */
  };
  %744() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_11718(%var_11716: Tensor[(6, 3, 16), uint64]) -> (Tensor[(6, 3, 16), float64], Tensor[(6, 3, 16), uint64], Tensor[(1470), float32], Tensor[(6, 3, 16), float32]) {
  @func_11715(%var_11716) /* ty=(Tensor[(6, 3, 16), float64], Tensor[(6, 3, 16), uint64], Tensor[(1470), float32], Tensor[(6, 3, 16), float32]) */
}

def @func_18757() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %749 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %745 = @func_17665() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %746 = @func_17236() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %747 = %745.0;
    %748 = %746.0;
    (%747, %748)
  };
  %749() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_12835() -> (Tensor[(14, 15, 7), float32],) {
  %752 = fn () -> (Tensor[(14, 15, 7), float32],) {
    %750 = @func_11097() /* ty=(Tensor[(4, 9, 3), float32], Tensor[(1470), float32], Tensor[(216, 4), int16], Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32]) */;
    %751 = %750.4;
    (%751,)
  };
  %752() /* ty=(Tensor[(14, 15, 7), float32],) */
}

def @func_6688(%var_6686: Tensor[(15, 6, 4), uint32], %var_6687: Tensor[(15, 6, 4), uint32]) -> Tensor[(15, 6, 4), uint32] {
  @func_6684(%var_6686, %var_6687) /* ty=Tensor[(15, 6, 4), uint32] */
}

def @func_17844() -> (Tensor[(7, 11, 3), float32],) {
  @func_17842() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_3484() -> (Tensor[(7, 11, 3), float32],) {
  @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_23553(%var_23551: Tensor[(117, 2), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 9, 2), uint16], Tensor[(117, 2), uint16]) {
  @func_23550(%var_23551) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 9, 2), uint16], Tensor[(117, 2), uint16]) */
}

def @func_7079() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) {
  @func_7077() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */
}

def @func_18562(%var_18560: Tensor[(36), uint32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32]) {
  @func_18559(%var_18560) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32]) */
}

def @func_11275() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  %756 = fn () -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
    %753 = @func_8660() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %754 = @func_6447() /* ty=Tensor[(7, 11, 3), float64] */;
    %755 = %753.0;
    (%754, %755)
  };
  %756() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */
}

def @func_10883(%var_10881: Tensor[(36), uint32]) -> (Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32]) {
  @func_10880(%var_10881) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32]) */
}

def @func_8269() -> Tensor[(7, 11, 3), float32] {
  %758 = fn () -> Tensor[(7, 11, 3), float32] {
    %757 = @func_5662() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */;
    %757.2
  };
  %758() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_21273() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  %761 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
    %759 = @func_19346() /* ty=Tensor[(7, 11, 3), float32] */;
    %760 = @func_20248() /* ty=Tensor[(7, 11, 3), float64] */;
    (%759, %760)
  };
  %761() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */
}

def @func_8006(%var_8003: Tensor[(117, 2), uint16], %var_8004: Tensor[(117, 2), uint16], %var_8005: Tensor[(117, 2), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(117, 2), uint8], Tensor[(117, 2), bool]) {
  @func_8001(%var_8003, %var_8004, %var_8005) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(117, 2), uint8], Tensor[(117, 2), bool]) */
}

def @func_12610() -> (Tensor[(7, 11, 3), float32],) {
  %762 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %763 = %762.0;
  (%763,)
}

def @func_14873() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %770 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %764 = @func_11162() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %765 = @func_5588() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %766 = @func_7356() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %767 = %764.0;
    %768 = %765.0;
    %769 = %766.0;
    (%767, %768, %769)
  };
  %770() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_3797() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
  %777 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
    %771 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %772 = cast(meta[relay.Constant][28] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %773 = reshape(%772, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %774 = @func_3617(%773) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
    %775 = %771.0;
    %776 = %774.1;
    (%775, %776, meta[relay.Constant][28] /* ty=Tensor[(1470), float32] */)
  };
  %777() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */
}

def @func_3044(%var_3039: Tensor[(3, 3, 4), uint32]) -> Tensor[(3, 3, 4), uint32] {
  %778 = cast(meta[relay.Constant][29] /* ty=Tensor[(3, 3, 4), uint32] */, dtype="uint32") /* ty=Tensor[(3, 3, 4), uint32] */;
  %779 = shape_of(%var_3039, dtype="int32") /* ty=Tensor[(3), int32] */;
  %780 = cast(%var_3039, dtype="uint32") /* ty=Tensor[(3, 3, 4), uint32] */;
  %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  maximum(%780, %781) /* ty=Tensor[(3, 3, 4), uint32] */
}

def @func_7420() -> Tensor[(7, 11, 3), float32] {
  @func_7418() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_20367() -> (Tensor[(9, 4), uint32], Tensor[(7, 11, 3), float32]) {
  @func_20365() /* ty=(Tensor[(9, 4), uint32], Tensor[(7, 11, 3), float32]) */
}

def @func_6783() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  %782 = @func_3991() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %783 = @func_5550() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(1470), float32]) */;
  %784 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  %785 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
  %786 = %782.0;
  %787 = %783.0;
  (%784, %785, %786, %787)
}

def @func_2785() -> (Tensor[(7, 11, 3), float32],) {
  %790 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %788 = @func_2741() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %789 = %788.0;
    (%789,)
  };
  %790() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_19037(%var_19036: Tensor[(14, 12, 16), float64]) -> (Tensor[(14, 12, 16), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %796 = fn (%var_19019: Tensor[(14, 12, 16), float64]) -> (Tensor[(14, 12, 16), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %791 = cast(%var_19019, dtype="float64") /* ty=Tensor[(14, 12, 16), float64] */;
    %792 = @func_12692() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
    %793 = cosh(%791) /* ty=Tensor[(14, 12, 16), float64] */;
    %794 = %792.0;
    %795 = @func_15262() /* ty=Tensor[(7, 11, 3), float32] */;
    (%793, %794, %795)
  };
  %796(%var_19036) /* ty=(Tensor[(14, 12, 16), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_13816() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %799 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %797 = @func_5998() /* ty=Tensor[(7, 11, 3), float32] */;
    %798 = @func_13412() /* ty=Tensor[(7, 11, 3), float32] */;
    (%797, %798)
  };
  %799() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_5890() -> (Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) {
  %800 = @func_5588() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %801 = cast(meta[relay.Constant][30] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
  %802 = reshape(%801, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
  %803 = @func_2460(%802) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) */;
  %804 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %805 = %800.0;
  %806 = %803.2;
  %807 = %804.0;
  (%805, %806, meta[relay.Constant][30] /* ty=Tensor[(832), float32] */, %807)
}

def @func_13535() -> Tensor[(7, 11, 3), float32] {
  %809 = fn () -> Tensor[(7, 11, 3), float32] {
    %808 = @func_7138() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %808.0
  };
  %809() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_21147() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %815 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %810 = @func_17270() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %811 = @func_20424() /* ty=(Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %812 = %810.1;
    %813 = %811.1;
    %814 = @func_12353() /* ty=Tensor[(7, 11, 3), float32] */;
    (%812, %813, %814)
  };
  %815() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_21216() -> Tensor[(7, 11, 3), float32] {
  %816 = fn () -> Tensor[(7, 11, 3), float32] {
    @func_16590() /* ty=Tensor[(7, 11, 3), float32] */
  };
  %816() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_4623() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %817 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %818 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %819 = %817.0;
  %820 = %818.1;
  (%819, %820)
}

def @func_22341() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 16, 2), float32]) {
  %827 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 16, 2), float32]) {
    %821 = @func_6783() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
    %822 = @func_14459() /* ty=(Tensor[(7, 16, 2), float64], Tensor[(7, 16, 2), float64]) */;
    %823 = %822.1;
    %824 = cast(%823, dtype="float32") /* ty=Tensor[(7, 16, 2), float32] */;
    %825 = %821.0;
    %826 = log(%824) /* ty=Tensor[(7, 16, 2), float32] */;
    (%825, %826)
  };
  %827() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 16, 2), float32]) */
}

def @func_17631(%var_17629: float32, %var_17630: Tensor[(10, 10, 5), float32]) -> (Tensor[(10, 10, 5), float32], Tensor[(7, 11, 3), float32]) {
  @func_17627(%var_17629, %var_17630) /* ty=(Tensor[(10, 10, 5), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_12124() -> (Tensor[(7, 11, 3), float64],) {
  %829 = fn () -> (Tensor[(7, 11, 3), float64],) {
    %828 = @func_9991() /* ty=Tensor[(7, 11, 3), float64] */;
    (%828,)
  };
  %829() /* ty=(Tensor[(7, 11, 3), float64],) */
}

def @func_16857(%var_16840: Tensor[(70), uint64]) -> (Tensor[(6, 3, 16), uint64], Tensor[(1, 14, 5), uint64], uint64, Tensor[(70), uint64], Tensor[(7, 11, 3), float32]) {
  %830 = cast(meta[relay.Constant][31] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %831 = cast(%var_16840, dtype="uint64") /* ty=Tensor[(70), uint64] */;
  %832 = reshape(%830, newshape=[]) /* ty=uint64 */;
  %833 = reshape(%831, newshape=[1, 14, 5]) /* ty=Tensor[(1, 14, 5), uint64] */;
  %834 = @func_11782(%832, %833) /* ty=(Tensor[(1, 14, 5), uint64],) */;
  %835 = @func_13308() /* ty=Tensor[(6, 3, 16), uint64] */;
  %836 = %834.0;
  %837 = @func_9928() /* ty=Tensor[(7, 11, 3), float32] */;
  (%835, %836, meta[relay.Constant][31] /* ty=uint64 */, %var_16840, %837)
}

def @func_8133() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  @func_8131() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */
}

def @func_18278() -> Tensor[(7, 11, 3), float32] {
  %839 = fn () -> Tensor[(7, 11, 3), float32] {
    %838 = @func_7138() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %838.0
  };
  %839() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_17270() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %840 = @func_16241() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %841 = @func_7166() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %842 = %840.0;
  %843 = %841.0;
  (%842, %843)
}

def @func_23833() -> (Tensor[(7, 11, 3), float32],) {
  @func_23831() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_9593() -> (Tensor[(7, 11, 3), float32],) {
  @func_9591() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_13285() -> Tensor[(7, 11, 3), float32] {
  %845 = fn () -> Tensor[(7, 11, 3), float32] {
    %844 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %844.1
  };
  %845() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_8195() -> Tensor[(7, 11, 3), float64] {
  %846 = @func_6783() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %846.2
}

def @func_3687() -> (Tensor[(7, 11, 3), float32],) {
  %847 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %848 = %847.0;
  (%848,)
}

def @func_9416() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) {
  %856 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) {
    %849 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %850 = @func_6641() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %851 = %849.1;
    %852 = cast(%851, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
    %853 = reshape(%852, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), float32] */;
    %854 = %850.1;
    %855 = @func_3771(%853) /* ty=Tensor[(7, 11, 3), int8] */;
    (%851, %854, %855)
  };
  %856() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */
}

def @func_20970() -> (Tensor[(1470), float32],) {
  @func_20968() /* ty=(Tensor[(1470), float32],) */
}

def @func_18559(%var_18531: Tensor[(36), uint32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32]) {
  %857 = @func_11207() /* ty=(Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %858 = cast(%var_18531, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %859 = reshape(%858, newshape=[36]) /* ty=Tensor[(36), uint32] */;
  %860 = @func_10880(%859) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32]) */;
  %861 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %862 = %857.1;
  %863 = %860.0;
  %864 = %861.0;
  (%862, %863, %var_18531, %864)
}

def @func_9610() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  %865 = @func_6783() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %866 = @func_7007() /* ty=Tensor[(7, 11, 3), float32] */;
  %867 = @func_5923() /* ty=Tensor[(7, 11, 3), float32] */;
  %868 = %865.2;
  (%866, %867, %868)
}

def @func_19926(%var_19924: Tensor[(33, 3), float32], %var_19925: Tensor[(18, 6), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32], Tensor[(9, 7, 11), float32], Tensor[(33, 3), float32], Tensor[(693, 1), float32], Tensor[(18, 6), float32]) {
  @func_19922(%var_19924, %var_19925) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32], Tensor[(9, 7, 11), float32], Tensor[(33, 3), float32], Tensor[(693, 1), float32], Tensor[(18, 6), float32]) */
}

def @func_20891() -> Tensor[(7, 11, 3), float32] {
  %869 = fn () -> Tensor[(7, 11, 3), float32] {
    @func_19346() /* ty=Tensor[(7, 11, 3), float32] */
  };
  %869() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_6641() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %870 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %871 = @func_6201() /* ty=Tensor[(7, 11, 3), float32] */;
  %872 = %870.0;
  (%871, %872)
}

def @func_3582(%var_3508: Tensor[(7, 11, 3), float32], %var_3542: Tensor[(455), float32]) -> (Tensor[(7, 11, 3), uint64], Tensor[(13, 7, 5), float32], Tensor[(455), float32], Tensor[(13, 7, 5), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(7, 11, 3), float32]) {
  %873 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %874 = %873.0;
  %875 = cast(%var_3508, dtype="uint64") /* ty=Tensor[(7, 11, 3), uint64] */;
  %876 = shape_of(%874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%874, dtype="uint64") /* ty=Tensor[(7, 11, 3), uint64] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %879 = cast(%var_3542, dtype="float32") /* ty=Tensor[(455), float32] */;
  %880 = cast(%var_3542, dtype="float32") /* ty=Tensor[(455), float32] */;
  %881 = reshape(%879, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %882 = reshape(%880, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %883 = cast(%var_3542, dtype="float32") /* ty=Tensor[(455), float32] */;
  %884 = cast(%var_3542, dtype="float32") /* ty=Tensor[(455), float32] */;
  %885 = reshape(%883, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %886 = reshape(%884, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
  %887 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %888 = cast(meta[relay.Constant][32] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %889 = reshape(%888, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %890 = @func_2013(%889) /* ty=(Tensor[(4, 9, 3), float32],) */;
  %891 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %892 = bitwise_and(%877, %878) /* ty=Tensor[(7, 11, 3), uint64] */;
  %893 = @func_670(%881, %882) /* ty=Tensor[(13, 7, 5), float32] */;
  %894 = @func_670(%885, %886) /* ty=Tensor[(13, 7, 5), float32] */;
  %895 = %887.0;
  %896 = %890.0;
  %897 = %891.0;
  (%892, %893, %var_3542, %894, %895, %896, meta[relay.Constant][32] /* ty=Tensor[(108), float32] */, %897)
}

def @func_11782(%var_11766: uint64, %var_11767: Tensor[(1, 14, 5), uint64]) -> (Tensor[(1, 14, 5), uint64],) {
  %898 = cast(%var_11766, dtype="uint64") /* ty=uint64 */;
  %899 = cast(%var_11767, dtype="uint64") /* ty=Tensor[(1, 14, 5), uint64] */;
  %900 = minimum(%898, %899) /* ty=Tensor[(1, 14, 5), uint64] */;
  (%900,)
}

def @func_11377(%var_11375: Tensor[(13, 15, 14), float64], %var_11376: Tensor[(98, 15), float32]) -> (Tensor[(13, 15, 14), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(98, 15), float32], Tensor[(7, 11, 3), float32]) {
  @func_11373(%var_11375, %var_11376) /* ty=(Tensor[(13, 15, 14), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(98, 15), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_16029() -> Tensor[(7, 11, 3), float32] {
  %901 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %901.1
}

def @func_7008() -> Tensor[(7, 11, 3), float32] {
  %903 = fn () -> Tensor[(7, 11, 3), float32] {
    %902 = @func_6641() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %902.0
  };
  %903() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_22261() -> Tensor[(7, 11, 3), float32] {
  %905 = fn () -> Tensor[(7, 11, 3), float32] {
    %904 = @func_7939() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */;
    %904.6
  };
  %905() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_23995() -> Tensor[(7, 11, 3), float32] {
  %907 = fn () -> Tensor[(7, 11, 3), float32] {
    %906 = @func_11274() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
    %906.1
  };
  %907() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_17574() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(60), float64], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) {
  %908 = @func_7077() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */;
  %909 = cast(meta[relay.Constant][33] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %910 = reshape(%909, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %911 = @func_13795(%910) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(60), float64], Tensor[(7, 11, 3), float32], Tensor[(6, 10, 7), bool]) */;
  %912 = @func_5550() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(1470), float32]) */;
  %913 = @func_12935() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %914 = %908.0;
  %915 = %911.0;
  %916 = %912.2;
  %917 = %913.0;
  (%914, %915, meta[relay.Constant][33] /* ty=Tensor[(60), float64] */, %916, %917)
}

def @func_5590() -> (Tensor[(7, 11, 3), float32],) {
  @func_5588() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_11494() -> (Tensor[(7, 11, 3), float32], Tensor[(455), float32]) {
  @func_11492() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32]) */
}

def @func_5745() -> (Tensor[(7, 11, 3), float32],) {
  %918 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %919 = %918.0;
  (%919,)
}

def @func_8662() -> (Tensor[(7, 11, 3), float32],) {
  @func_8660() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_17985() -> Tensor[(7, 11, 3), float32] {
  @func_17983() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_19626() -> (Tensor[(7, 11, 3), float32],) {
  @func_19624() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_15592() -> (Tensor[(7, 11, 3), float32],) {
  %922 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %920 = @func_14943() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %921 = %920.1;
    (%921,)
  };
  %922() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_11956(%var_11942: Tensor[(1470), float32], %var_11950: Tensor[(2730), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(36), uint32], Tensor[(2730), float64], Tensor[(7, 11, 3), float32]) {
  %923 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %924 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %925 = cast(%var_11942, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %926 = reshape(%925, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %927 = @func_2770(%926) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32]) */;
  %928 = cast(%var_11950, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %929 = %927.2;
  %930 = cast(%929, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %931 = reshape(%928, newshape=[13, 15, 14]) /* ty=Tensor[(13, 15, 14), float64] */;
  %932 = reshape(%930, newshape=[98, 15]) /* ty=Tensor[(98, 15), float32] */;
  %933 = @func_11373(%931, %932) /* ty=(Tensor[(13, 15, 14), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(98, 15), float32], Tensor[(7, 11, 3), float32]) */;
  %934 = @func_6641() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %935 = %923.0;
  %936 = %924.0;
  %937 = %933.3;
  %938 = %934.0;
  (%935, %936, %929, %var_11942, %937, %var_11950, %938)
}

def @func_21099() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32]) {
  %939 = @func_19416() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %940 = @func_12123() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %941 = @func_13463() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %942 = @func_19416() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %943 = cast(meta[relay.Constant][34] /* ty=Tensor[(36), uint32] */, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %944 = reshape(%943, newshape=[36]) /* ty=Tensor[(36), uint32] */;
  %945 = @func_10880(%944) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32]) */;
  %946 = %939.0;
  %947 = %940.0;
  %948 = %941.0;
  %949 = %942.0;
  %950 = %945.1;
  (%946, %947, %948, %949, %950, meta[relay.Constant][34] /* ty=Tensor[(36), uint32] */)
}

def @func_17125() -> (Tensor[(7, 11, 3), float64],) {
  %952 = fn () -> (Tensor[(7, 11, 3), float64],) {
    %951 = @func_6447() /* ty=Tensor[(7, 11, 3), float64] */;
    (%951,)
  };
  %952() /* ty=(Tensor[(7, 11, 3), float64],) */
}

def @func_24040() -> (Tensor[(7, 11, 3), float32],) {
  @func_24038() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_9021() -> (Tensor[(7, 11, 3), float32],) {
  @func_9019() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_16262(%var_16261: Tensor[(1, 13, 1), float32]) -> (Tensor[(1, 13, 1), float32], Tensor[(7, 11, 3), float64]) {
  %957 = fn (%var_16255: Tensor[(1, 13, 1), float32]) -> (Tensor[(1, 13, 1), float32], Tensor[(7, 11, 3), float64]) {
    %953 = cast(%var_16255, dtype="float32") /* ty=Tensor[(1, 13, 1), float32] */;
    %954 = @func_8565() /* ty=(Tensor[(7, 11, 3), float64],) */;
    %955 = acos(%953) /* ty=Tensor[(1, 13, 1), float32] */;
    %956 = %954.0;
    (%955, %956)
  };
  %957(%var_16261) /* ty=(Tensor[(1, 13, 1), float32], Tensor[(7, 11, 3), float64]) */
}

def @func_6407(%var_6405: Tensor[(108), float32]) -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(7, 11, 3), float32]) {
  @func_6404(%var_6405) /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_19870(%var_19816: Tensor[(80), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(5, 4, 4), float64], Tensor[(80), float64], Tensor[(7, 11, 3), float32]) {
  %958 = @func_8660() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %959 = @func_7463() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %960 = @func_7525() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %961 = @func_18015() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %962 = @func_19624() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %963 = cast(%var_19816, dtype="float64") /* ty=Tensor[(80), float64] */;
  %964 = reshape(%963, newshape=[5, 4, 4]) /* ty=Tensor[(5, 4, 4), float64] */;
  %965 = @func_7218(%964) /* ty=(Tensor[(5, 4, 4), float64],) */;
  %966 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %967 = %958.0;
  %968 = %959.0;
  %969 = %960.0;
  %970 = %961.1;
  %971 = %962.0;
  %972 = %965.0;
  %973 = %966.1;
  (%967, %968, %969, %970, %971, %972, %var_19816, %973)
}

def @func_3176(%var_3174: Tensor[(7, 210), float32], %var_3175: Tensor[(676), int8]) -> (Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(455), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 13, 4), float32], Tensor[(676), int8]) {
  %1000 = fn (%var_3134: Tensor[(7, 210), float32], %var_3162: Tensor[(676), int8]) -> (Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(455), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 13, 4), float32], Tensor[(676), int8]) {
    %974 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %975 = cast(meta[relay.Constant][35] /* ty=Tensor[(36), uint32] */, dtype="uint32") /* ty=Tensor[(36), uint32] */;
    %976 = reshape(%975, newshape=[3, 3, 4]) /* ty=Tensor[(3, 3, 4), uint32] */;
    %977 = cast(%var_3134, dtype="float32") /* ty=Tensor[(7, 210), float32] */;
    %978 = reshape(%977, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float32] */;
    %979 = @func_2220(%978) /* ty=(Tensor[(14, 15, 7), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
    %980 = @func_2741() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %981 = %979.2;
    %982 = cast(%981, dtype="float32") /* ty=Tensor[(455), float32] */;
    %983 = cast(%981, dtype="float32") /* ty=Tensor[(455), float32] */;
    %984 = reshape(%982, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
    %985 = reshape(%983, newshape=[13, 7, 5]) /* ty=Tensor[(13, 7, 5), float32] */;
    %986 = cast(%var_3134, dtype="float32") /* ty=Tensor[(7, 210), float32] */;
    %987 = reshape(%986, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float32] */;
    %988 = @func_2220(%987) /* ty=(Tensor[(14, 15, 7), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
    %989 = cast(%var_3162, dtype="int8") /* ty=Tensor[(676), int8] */;
    %990 = cast(%var_3134, dtype="float32") /* ty=Tensor[(7, 210), float32] */;
    %991 = reshape(%989, newshape=[13, 13, 4]) /* ty=Tensor[(13, 13, 4), int8] */;
    %992 = reshape(%990, newshape=[1, 1470]) /* ty=Tensor[(1, 1470), float32] */;
    %993 = @func_2818(%991, %992) /* ty=(Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(13, 13, 4), float32]) */;
    %994 = %974.0;
    %995 = @func_3044(%976) /* ty=Tensor[(3, 3, 4), uint32] */;
    %996 = %980.0;
    %997 = @func_670(%984, %985) /* ty=Tensor[(13, 7, 5), float32] */;
    %998 = %988.1;
    %999 = %993.3;
    (%994, %995, meta[relay.Constant][35] /* ty=Tensor[(36), uint32] */, %981, %var_3134, %996, %997, %998, %999, %var_3162)
  };
  %1000(%var_3174, %var_3175) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(455), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 7, 5), float32], Tensor[(13, 13, 4), float32], Tensor[(676), int8]) */
}

def @func_9762(%var_9761: Tensor[(1, 832), float32]) -> (Tensor[(4, 9, 3), float32], Tensor[(1, 832), float32], Tensor[(6, 3, 16), float64]) {
  %1013 = fn (%var_9749: Tensor[(1, 832), float32]) -> (Tensor[(4, 9, 3), float32], Tensor[(1, 832), float32], Tensor[(6, 3, 16), float64]) {
    %1001 = cast(%var_9749, dtype="float32") /* ty=Tensor[(1, 832), float32] */;
    %1002 = reshape(%1001, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
    %1003 = @func_2460(%1002) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) */;
    %1004 = @func_6720() /* ty=Tensor[(6, 3, 16), uint64] */;
    %1005 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 3, 16), uint64] */, dtype="bool") /* ty=Tensor[(6, 3, 16), bool] */;
    %1006 = shape_of(%1004, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1007 = cast(%1004, dtype="bool") /* ty=Tensor[(6, 3, 16), bool] */;
    %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1009 = equal(%1007, %1008) /* ty=Tensor[(6, 3, 16), bool] */;
    %1010 = cast(%1009, dtype="float64") /* ty=Tensor[(6, 3, 16), float64] */;
    %1011 = %1003.2;
    %1012 = sigmoid(%1010) /* ty=Tensor[(6, 3, 16), float64] */;
    (%1011, %var_9749, %1012)
  };
  %1013(%var_9761) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(1, 832), float32], Tensor[(6, 3, 16), float64]) */
}

def @func_3378(%var_3376: Tensor[(36), uint32], %var_3377: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
  @func_3374(%var_3376, %var_3377) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */
}

def @func_9486() -> Tensor[(7, 11, 3), float32] {
  @func_9484() /* ty=Tensor[(7, 11, 3), float32] */
}

def @main() -> (Tensor[(7, 11, 3), float32], Tensor[(2, 12, 11), uint16], Tensor[(22), float64]) {
  %1014 = cast(meta[relay.Constant][37] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %1015 = reshape(%1014, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), float64] */;
  %1016 = @func_19217(%1015) /* ty=(Tensor[(1470), float32], Tensor[(2, 12, 11), uint16], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1017 = cast(meta[relay.Constant][37] /* ty=Tensor[(22), float64] */, dtype="float64") /* ty=Tensor[(22), float64] */;
  %1018 = @func_19346() /* ty=Tensor[(7, 11, 3), float32] */;
  %1019 = %1016.1;
  %1020 = cos(%1017) /* ty=Tensor[(22), float64] */;
  (%1018, %1019, %1020)
}

def @func_14460() -> (Tensor[(7, 16, 2), float64], Tensor[(7, 16, 2), float64]) {
  %1028 = fn () -> (Tensor[(7, 16, 2), float64], Tensor[(7, 16, 2), float64]) {
    %1021 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 16, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 16, 2), float64] */;
    %1022 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(7, 16, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1023 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 16, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 16, 2), float64] */;
    %1024 = dyn.reshape(%1021, %1022, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1025 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 16, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 16, 2), float64] */;
    %1026 = power(%1023, %1024) /* ty=Tensor[(7, 16, 2), float64] */;
    %1027 = acos(%1025) /* ty=Tensor[(7, 16, 2), float64] */;
    (%1026, %1027)
  };
  %1028() /* ty=(Tensor[(7, 16, 2), float64], Tensor[(7, 16, 2), float64]) */
}

def @func_12665() -> (Tensor[(7, 11, 3), float32],) {
  %1031 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %1029 = @func_5820() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1030 = %1029.1;
    (%1030,)
  };
  %1031() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_5066() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_5064() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_22551() -> (Tensor[(7, 11, 3), float32],) {
  %1032 = @func_22260() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1032,)
}

def @func_5998() -> Tensor[(7, 11, 3), float32] {
  @func_5035() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_4771(%var_4770: Tensor[(832, 1), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832, 1), float32]) {
  %1040 = fn (%var_4765: Tensor[(832, 1), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832, 1), float32]) {
    %1033 = @func_4623() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1034 = cast(%var_4765, dtype="float32") /* ty=Tensor[(832, 1), float32] */;
    %1035 = reshape(%1034, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
    %1036 = @func_2460(%1035) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) */;
    %1037 = @func_3703() /* ty=Tensor[(7, 11, 3), float32] */;
    %1038 = %1033.1;
    %1039 = %1036.2;
    (%1037, %1038, %1039, %var_4765)
  };
  %1040(%var_4770) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832, 1), float32]) */
}

def @func_11426() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1041 = @func_11162() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1042 = @func_8869() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1043 = %1041.0;
  %1044 = %1042.0;
  %1045 = @func_6547() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1043, %1044, %1045)
}

def @func_23184(%var_23182: Tensor[(2730), float64], %var_23183: Tensor[(490, 3), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(13, 15, 14), float64], Tensor[(2730), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(819), int64], Tensor[(7, 11, 3), float32], Tensor[(490, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_23180(%var_23182, %var_23183) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(13, 15, 14), float64], Tensor[(2730), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(819), int64], Tensor[(7, 11, 3), float32], Tensor[(490, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_13115() -> (Tensor[(7, 11, 3), float64],) {
  %1046 = @func_3991() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %1047 = %1046.0;
  (%1047,)
}

def @func_14943() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1048 = @func_9019() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1049 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1050 = %1048.0;
  %1051 = %1049.0;
  (%1050, %1051)
}

def @func_16491(%var_16490: Tensor[(234), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32], Tensor[(2, 416), float32]) {
  %1070 = fn (%var_16442: Tensor[(234), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32], Tensor[(2, 416), float32]) {
    %1052 = @func_5570() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1053 = cast(%var_16442, dtype="uint16") /* ty=Tensor[(234), uint16] */;
    %1054 = reshape(%1053, newshape=[3, 78]) /* ty=Tensor[(3, 78), uint16] */;
    %1055 = @func_12233(%1054) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(3, 78), float64], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(7, 11, 3), float32]) */;
    %1056 = @func_14829() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) */;
    %1057 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 416), float32] */, dtype="float32") /* ty=Tensor[(2, 416), float32] */;
    %1058 = reshape(%1057, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %1059 = @func_8507(%1058) /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(13, 8, 8), float32]) */;
    %1060 = @func_5968() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1061 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 416), float32] */, dtype="float64") /* ty=Tensor[(2, 416), float64] */;
    %1062 = asin(%1061) /* ty=Tensor[(2, 416), float64] */;
    %1063 = cast(%1062, dtype="float32") /* ty=Tensor[(2, 416), float32] */;
    %1064 = %1052.0;
    %1065 = %1055.4;
    %1066 = %1056.0;
    %1067 = %1059.2;
    %1068 = %1060.0;
    %1069 = sinh(%1063) /* ty=Tensor[(2, 416), float32] */;
    (%1064, %1065, %var_16442, %1066, %1067, %1068, %1069)
  };
  %1070(%var_16490) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32], Tensor[(2, 416), float32]) */
}

def @func_16953() -> Tensor[(7, 11, 3), float32] {
  @func_16951() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_14923(%var_14922: Tensor[(10, 15, 7), bool]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(10, 15, 7), float32]) {
  %1080 = fn (%var_14900: Tensor[(10, 15, 7), bool]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(10, 15, 7), float32]) {
    %1071 = @func_4290() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1072 = @func_4014() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1073 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %1074 = cast(%var_14900, dtype="bool") /* ty=Tensor[(10, 15, 7), bool] */;
    %1075 = logical_and(%1073, %1074) /* ty=Tensor[(10, 15, 7), bool] */;
    %1076 = cast(%1075, dtype="float32") /* ty=Tensor[(10, 15, 7), float32] */;
    %1077 = %1071.0;
    %1078 = %1072.1;
    %1079 = sigmoid(%1076) /* ty=Tensor[(10, 15, 7), float32] */;
    (%1077, %1078, %1079)
  };
  %1080(%var_14922) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(10, 15, 7), float32]) */
}

def @func_21787() -> Tensor[(7, 11, 3), float32] {
  @func_21785() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_3907() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_23051() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1084 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %1081 = @func_13021() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) */;
    %1082 = @func_5035() /* ty=Tensor[(7, 11, 3), float32] */;
    %1083 = %1081.0;
    (%1082, %1083)
  };
  %1084() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_11414() -> (Tensor[(1470), float32],) {
  %1087 = fn () -> (Tensor[(1470), float32],) {
    %1085 = @func_8036() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(36), uint32], Tensor[(1470), float32], Tensor[(1, 676), int8]) */;
    %1086 = %1085.2;
    (%1086,)
  };
  %1087() /* ty=(Tensor[(1470), float32],) */
}

def @func_11428() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_11426() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_5728() -> Tensor[(7, 11, 3), float32] {
  @func_5726() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_9291(%var_9290: Tensor[(13, 35), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(455), bool]) {
  %1104 = fn (%var_9268: Tensor[(13, 35), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(455), bool]) {
    %1088 = cast(meta[relay.Constant][41] /* ty=Tensor[(36), uint32] */, dtype="uint32") /* ty=Tensor[(36), uint32] */;
    %1089 = reshape(%1088, newshape=[36]) /* ty=Tensor[(36), uint32] */;
    %1090 = @func_7886(%1089) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(36), uint32], Tensor[(1470), float32]) */;
    %1091 = @func_8578() /* ty=Tensor[(7, 11, 3), float32] */;
    %1092 = cast(%1091, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
    %1093 = cast(%var_9268, dtype="float32") /* ty=Tensor[(13, 35), float32] */;
    %1094 = reshape(%1092, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), float32] */;
    %1095 = reshape(%1093, newshape=[455]) /* ty=Tensor[(455), float32] */;
    %1096 = @func_3582(%1094, %1095) /* ty=(Tensor[(7, 11, 3), uint64], Tensor[(13, 7, 5), float32], Tensor[(455), float32], Tensor[(13, 7, 5), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(7, 11, 3), float32]) */;
    %1097 = %1096.2;
    %1098 = cast(%var_9268, dtype="bool") /* ty=Tensor[(13, 35), bool] */;
    %1099 = shape_of(%1097, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1100 = cast(%1097, dtype="bool") /* ty=Tensor[(455), bool] */;
    %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1102 = %1090.0;
    %1103 = logical_and(%1100, %1101) /* ty=Tensor[(455), bool] */;
    (%1091, %1102, meta[relay.Constant][41] /* ty=Tensor[(36), uint32] */, %1103)
  };
  %1104(%var_9290) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(455), bool]) */
}

def @func_21598() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1105 = @func_11207() /* ty=(Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %1106 = @func_21336() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1107 = @func_13412() /* ty=Tensor[(7, 11, 3), float32] */;
  %1108 = %1105.1;
  %1109 = %1106.1;
  (%1107, %1108, %1109)
}

def @func_18723() -> (Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(1, 455), float32]) {
  @func_18721() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(1, 455), float32]) */
}

def @func_9508() -> (Tensor[(7, 11, 3), float32],) {
  %1112 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %1110 = @func_4154() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
    %1111 = %1110.0;
    (%1111,)
  };
  %1112() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_21656() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(234), uint16]) {
  %1113 = @func_19543() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(450), uint32]) */;
  %1114 = cast(meta[relay.Constant][42] /* ty=Tensor[(234), uint16] */, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %1115 = cast(meta[relay.Constant][42] /* ty=Tensor[(234), uint16] */, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %1116 = cast(meta[relay.Constant][42] /* ty=Tensor[(234), uint16] */, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %1117 = reshape(%1114, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %1118 = reshape(%1115, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %1119 = reshape(%1116, newshape=[117, 2]) /* ty=Tensor[(117, 2), uint16] */;
  %1120 = @func_8001(%1117, %1118, %1119) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(117, 2), uint8], Tensor[(117, 2), bool]) */;
  %1121 = %1113.1;
  %1122 = %1120.1;
  (%1121, %1122, meta[relay.Constant][42] /* ty=Tensor[(234), uint16] */)
}

def @func_13347() -> (Tensor[(7, 11, 3), float32],) {
  %1123 = @func_13228() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1124 = %1123.3;
  (%1124,)
}

def @func_14887() -> (Tensor[(7, 11, 3), float32],) {
  %1125 = @func_5968() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1126 = %1125.0;
  (%1126,)
}

def @func_5194() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
  %1133 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) {
    %1127 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1128 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1129 = %1128.0;
    %1130 = cast(%1129, dtype="float64") /* ty=Tensor[(7, 11, 3), float64] */;
    %1131 = %1127.0;
    %1132 = exp(%1130) /* ty=Tensor[(7, 11, 3), float64] */;
    (%1131, %1132)
  };
  %1133() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */
}

def @func_17576() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(60), float64], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) {
  @func_17574() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(60), float64], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_17666() -> (Tensor[(7, 11, 3), float32],) {
  %1135 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %1134 = @func_14368() /* ty=Tensor[(7, 11, 3), float32] */;
    (%1134,)
  };
  %1135() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_2773(%var_2771: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32]) {
  @func_2770(%var_2771) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32]) */
}

def @func_13310() -> Tensor[(6, 3, 16), uint64] {
  @func_13308() /* ty=Tensor[(6, 3, 16), uint64] */
}

def @func_11550(%var_11548: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(676), bool], Tensor[(1470), float32]) {
  @func_11547(%var_11548) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(676), bool], Tensor[(1470), float32]) */
}

def @func_12355() -> Tensor[(7, 11, 3), float32] {
  @func_12353() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_19765() -> (Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) {
  @func_19763() /* ty=(Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_20573() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1143 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %1136 = @func_14829() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) */;
    %1137 = @func_11020() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1138 = @func_5193() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
    %1139 = @func_18431() /* ty=Tensor[(7, 11, 3), float32] */;
    %1140 = %1136.0;
    %1141 = %1137.1;
    %1142 = %1138.0;
    (%1139, %1140, %1141, %1142)
  };
  %1143() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_6643() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_6641() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_5421(%var_5419: Tensor[(832), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(4, 9, 3), float32], Tensor[(832), float32]) {
  @func_5418(%var_5419) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(4, 9, 3), float32], Tensor[(832), float32]) */
}

def @func_22855() -> (Tensor[(7, 11, 3), float32], Tensor[(2, 416), float32], Tensor[(234), uint16]) {
  %1150 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(2, 416), float32], Tensor[(234), uint16]) {
    %1144 = @func_16173() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1145 = cast(meta[relay.Constant][43] /* ty=Tensor[(234), uint16] */, dtype="uint16") /* ty=Tensor[(234), uint16] */;
    %1146 = reshape(%1145, newshape=[234]) /* ty=Tensor[(234), uint16] */;
    %1147 = @func_16489(%1146) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32], Tensor[(2, 416), float32]) */;
    %1148 = %1144.1;
    %1149 = %1147.6;
    (%1148, %1149, meta[relay.Constant][43] /* ty=Tensor[(234), uint16] */)
  };
  %1150() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(2, 416), float32], Tensor[(234), uint16]) */
}

def @func_6720() -> Tensor[(6, 3, 16), uint64] {
  %1151 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 3, 16), uint64] */, dtype="uint64") /* ty=Tensor[(6, 3, 16), uint64] */;
  %1152 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(6, 3, 16), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1153 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 3, 16), uint64] */, dtype="uint64") /* ty=Tensor[(6, 3, 16), uint64] */;
  %1154 = dyn.reshape(%1151, %1152, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%1153, %1154) /* ty=Tensor[(6, 3, 16), uint64] */
}

def @func_6449() -> Tensor[(7, 11, 3), float64] {
  @func_6447() /* ty=Tensor[(7, 11, 3), float64] */
}

def @func_13797(%var_13796: Tensor[(60), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(60), float64], Tensor[(7, 11, 3), float32], Tensor[(6, 10, 7), bool]) {
  %1170 = fn (%var_13741: Tensor[(60), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(60), float64], Tensor[(7, 11, 3), float32], Tensor[(6, 10, 7), bool]) {
    %1155 = @func_7138() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1156 = @func_5745() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1157 = cast(%var_13741, dtype="float64") /* ty=Tensor[(60), float64] */;
    %1158 = reshape(%1157, newshape=[6, 10, 1]) /* ty=Tensor[(6, 10, 1), float64] */;
    %1159 = @func_7252(%1158) /* ty=Tensor[(6, 10, 1), float64] */;
    %1160 = cast(%1159, dtype="bool") /* ty=Tensor[(6, 10, 1), bool] */;
    %1161 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 10, 7), float64] */, dtype="bool") /* ty=Tensor[(6, 10, 7), bool] */;
    %1162 = logical_and(%1160, %1161) /* ty=Tensor[(6, 10, 7), bool] */;
    %1163 = cast(%1162, dtype="bool") /* ty=Tensor[(6, 10, 7), bool] */;
    %1164 = cast(%1159, dtype="bool") /* ty=Tensor[(6, 10, 1), bool] */;
    %1165 = @func_12095() /* ty=Tensor[(7, 11, 3), float32] */;
    %1166 = %1155.0;
    %1167 = %1156.0;
    %1168 = @func_5309() /* ty=Tensor[(7, 11, 3), float32] */;
    %1169 = less(%1163, %1164) /* ty=Tensor[(6, 10, 7), bool] */;
    (%1165, %1166, %1167, %var_13741, %1168, %1169)
  };
  %1170(%var_13796) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(60), float64], Tensor[(7, 11, 3), float32], Tensor[(6, 10, 7), bool]) */
}

def @func_4888(%var_4887: Tensor[(7, 210), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) {
  %1181 = fn (%var_4864: Tensor[(7, 210), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) {
    %1171 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1172 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1173 = cast(%var_4864, dtype="float32") /* ty=Tensor[(7, 210), float32] */;
    %1174 = reshape(%1173, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %1175 = @func_3008(%1174) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) */;
    %1176 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1177 = %1171.0;
    %1178 = %1172.0;
    %1179 = %1175.0;
    %1180 = %1176.1;
    (%1177, %1178, %1179, %var_4864, %1180)
  };
  %1181(%var_4887) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_2796() -> (Tensor[(7, 11, 3), float32],) {
  @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_2223(%var_2221: Tensor[(14, 15, 7), float32]) -> (Tensor[(14, 15, 7), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) {
  @func_2220(%var_2221) /* ty=(Tensor[(14, 15, 7), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */
}

def @func_19214(%var_19151: Tensor[(2, 1, 11), float64]) -> (Tensor[(1470), float32], Tensor[(2, 12, 11), uint16], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1182 = @func_11207() /* ty=(Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %1183 = cast(%var_19151, dtype="float64") /* ty=Tensor[(2, 1, 11), float64] */;
  %1184 = cos(%1183) /* ty=Tensor[(2, 1, 11), float64] */;
  %1185 = cast(%1184, dtype="float32") /* ty=Tensor[(2, 1, 11), float32] */;
  %1186 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 12, 11), float64] */, dtype="float32") /* ty=Tensor[(2, 12, 11), float32] */;
  %1187 = mod(%1185, %1186) /* ty=Tensor[(2, 12, 11), float32] */;
  %1188 = cast(%1187, dtype="uint16") /* ty=Tensor[(2, 12, 11), uint16] */;
  %1189 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(2, 12, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1190 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 12, 11), float64] */, dtype="uint16") /* ty=Tensor[(2, 12, 11), uint16] */;
  %1191 = dyn.reshape(%1188, %1189, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1192 = @func_7166() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1193 = %1182.2;
  %1194 = left_shift(%1190, %1191) /* ty=Tensor[(2, 12, 11), uint16] */;
  %1195 = %1192.1;
  %1196 = @func_16951() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1193, %1194, %1195, %1196)
}

def @func_17161() -> Tensor[(7, 11, 3), float32] {
  %1197 = @func_7463() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1197.0
}

def @func_16592() -> Tensor[(7, 11, 3), float32] {
  @func_16590() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_11492() -> (Tensor[(7, 11, 3), float32], Tensor[(455), float32]) {
  %1198 = @func_4720() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
  %1199 = @func_5035() /* ty=Tensor[(7, 11, 3), float32] */;
  %1200 = %1198.2;
  (%1199, %1200)
}

def @func_22115(%var_22026: Tensor[(11, 5, 13), float64], %var_22027: Tensor[(11, 5, 13), float64]) -> (Tensor[(11, 5, 13), bool], Tensor[(7, 16, 2), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(11, 5, 13), float32], Tensor[(7, 11, 3), float32]) {
  %1201 = cast(%var_22027, dtype="float64") /* ty=Tensor[(11, 5, 13), float64] */;
  %1202 = shape_of(%var_22026, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1203 = cast(%var_22026, dtype="float64") /* ty=Tensor[(11, 5, 13), float64] */;
  %1204 = dyn.reshape(%1201, %1202, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1205 = floor_mod(%1203, %1204) /* ty=Tensor[(11, 5, 13), float64] */;
  %1206 = cast(%var_22026, dtype="bool") /* ty=Tensor[(11, 5, 13), bool] */;
  %1207 = shape_of(%1205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1208 = cast(%1205, dtype="bool") /* ty=Tensor[(11, 5, 13), bool] */;
  %1209 = dyn.reshape(%1206, %1207, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1210 = @func_14459() /* ty=(Tensor[(7, 16, 2), float64], Tensor[(7, 16, 2), float64]) */;
  %1211 = @func_16781() /* ty=(Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */;
  %1212 = @func_20734() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1213 = cast(%var_22027, dtype="float64") /* ty=Tensor[(11, 5, 13), float64] */;
  %1214 = log2(%1213) /* ty=Tensor[(11, 5, 13), float64] */;
  %1215 = cast(%1214, dtype="float32") /* ty=Tensor[(11, 5, 13), float32] */;
  %1216 = greater(%1208, %1209) /* ty=Tensor[(11, 5, 13), bool] */;
  %1217 = %1210.0;
  %1218 = %1211.0;
  %1219 = @func_13709() /* ty=Tensor[(7, 11, 3), bool] */;
  %1220 = @func_6547() /* ty=Tensor[(7, 11, 3), float32] */;
  %1221 = %1212.0;
  %1222 = sin(%1215) /* ty=Tensor[(11, 5, 13), float32] */;
  %1223 = @func_5309() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1216, %1217, %1218, %1219, %1220, %1221, %1222, %1223)
}

def @func_16781() -> (Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) {
  %1224 = @func_12834() /* ty=(Tensor[(14, 15, 7), float32],) */;
  %1225 = @func_13564() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1226 = %1224.0;
  %1227 = %1225.0;
  (%1226, %1227)
}

def @func_21184() -> (Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), float32]) {
  %1228 = @func_12818() /* ty=(Tensor[(7, 11, 3), int8],) */;
  %1229 = @func_20741() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1230 = %1228.0;
  %1231 = %1229.0;
  (%1230, %1231)
}

def @func_3617(%var_3610: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
  %1232 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1233 = cast(%var_3610, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1234 = reshape(%1233, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %1235 = @func_3008(%1234) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) */;
  %1236 = %1232.0;
  %1237 = %1235.0;
  (%1236, %1237, %var_3610)
}

def @func_10694() -> (Tensor[(7, 11, 3), float64],) {
  @func_10692() /* ty=(Tensor[(7, 11, 3), float64],) */
}

def @func_4575() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_12818() -> (Tensor[(7, 11, 3), int8],) {
  %1238 = @func_9415() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) */;
  %1239 = %1238.2;
  (%1239,)
}

def @func_20643() -> (Tensor[(7, 11, 3), float32],) {
  @func_20641() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_22695() -> (Tensor[(7, 11, 3), float32],) {
  %1241 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %1240 = @func_21215() /* ty=Tensor[(7, 11, 3), float32] */;
    (%1240,)
  };
  %1241() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_19714() -> (Tensor[(7, 11, 3), float32],) {
  @func_19712() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_12411() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1246 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %1242 = @func_7525() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1243 = @func_7939() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */;
    %1244 = %1242.0;
    %1245 = %1243.3;
    (%1244, %1245)
  };
  %1246() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_23831() -> (Tensor[(7, 11, 3), float32],) {
  %1247 = @func_12692() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %1248 = %1247.2;
  (%1248,)
}

def @func_13414() -> Tensor[(7, 11, 3), float32] {
  @func_13412() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_24055() -> (Tensor[(14, 2, 1), float64],) {
  @func_24053() /* ty=(Tensor[(14, 2, 1), float64],) */
}

def @func_20249() -> Tensor[(7, 11, 3), float64] {
  %1250 = fn () -> Tensor[(7, 11, 3), float64] {
    %1249 = @func_12123() /* ty=(Tensor[(7, 11, 3), float64],) */;
    %1249.0
  };
  %1250() /* ty=Tensor[(7, 11, 3), float64] */
}

def @func_17495(%var_17418: Tensor[(4, 16, 16), float64]) -> (Tensor[(4, 16, 16), float64], Tensor[(7, 11, 3), float32], Tensor[(2, 40), float64]) {
  %1251 = cast(%var_17418, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
  %1252 = cos(%1251) /* ty=Tensor[(4, 16, 16), float64] */;
  %1253 = cast(%1252, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
  %1254 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 40), float64] */, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %1255 = reshape(%1254, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %1256 = @func_16901(%1255) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(5, 4, 4), float64], Tensor[(80), float64]) */;
  %1257 = atan(%1253) /* ty=Tensor[(4, 16, 16), float64] */;
  %1258 = %1256.0;
  (%1257, %1258, meta[relay.Constant][48] /* ty=Tensor[(2, 40), float64] */)
}

def @func_13979(%var_13977: Tensor[(1470), float32], %var_13978: Tensor[(2730), float64]) -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8], Tensor[(2730), float64], Tensor[(1470), float32], Tensor[(2730), float64]) {
  %1279 = fn (%var_13971: Tensor[(1470), float32], %var_13972: Tensor[(2730), float64]) -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8], Tensor[(2730), float64], Tensor[(1470), float32], Tensor[(2730), float64]) {
    %1259 = @func_8565() /* ty=(Tensor[(7, 11, 3), float64],) */;
    %1260 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1261 = @func_5745() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1262 = @func_8980() /* ty=(Tensor[(6, 3, 16), uint64],) */;
    %1263 = @func_8869() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1264 = @func_12818() /* ty=(Tensor[(7, 11, 3), int8],) */;
    %1265 = cast(%var_13971, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %1266 = cast(%var_13972, dtype="float64") /* ty=Tensor[(2730), float64] */;
    %1267 = reshape(%1265, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %1268 = reshape(%1266, newshape=[2730]) /* ty=Tensor[(2730), float64] */;
    %1269 = @func_11956(%1267, %1268) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(36), uint32], Tensor[(2730), float64], Tensor[(7, 11, 3), float32]) */;
    %1270 = %1259.0;
    %1271 = %1260.0;
    %1272 = %1261.0;
    %1273 = @func_6733() /* ty=Tensor[(7, 11, 3), float32] */;
    %1274 = %1262.0;
    %1275 = @func_6201() /* ty=Tensor[(7, 11, 3), float32] */;
    %1276 = %1263.0;
    %1277 = %1264.0;
    %1278 = %1269.5;
    (%1270, %1271, %1272, %1273, %1274, %1275, %1276, %1277, %1278, %var_13971, %var_13972)
  };
  %1279(%var_13977, %var_13978) /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8], Tensor[(2730), float64], Tensor[(1470), float32], Tensor[(2730), float64]) */
}

def @func_9657() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1283 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %1280 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1281 = @func_7418() /* ty=Tensor[(7, 11, 3), float32] */;
    %1282 = %1280.0;
    (%1281, %1282)
  };
  %1283() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_4625() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_4623() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_5497() -> Tensor[(7, 11, 3), float32] {
  %1284 = @func_4573() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1284.0
}

def @func_12820() -> (Tensor[(7, 11, 3), int8],) {
  @func_12818() /* ty=(Tensor[(7, 11, 3), int8],) */
}

def @func_23663(%var_23638: Tensor[(72, 4), uint64]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(6, 3, 16), float32], Tensor[(72, 4), uint64]) {
  %1285 = @func_16011() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1286 = cast(%var_23638, dtype="uint64") /* ty=Tensor[(72, 4), uint64] */;
  %1287 = reshape(%1286, newshape=[6, 3, 16]) /* ty=Tensor[(6, 3, 16), uint64] */;
  %1288 = @func_9898() /* ty=Tensor[(7, 11, 3), float32] */;
  %1289 = @func_20163() /* ty=Tensor[(7, 11, 3), float32] */;
  %1290 = %1285.0;
  %1291 = @func_18964(%1287) /* ty=Tensor[(6, 3, 16), float32] */;
  (%1288, %1289, %1290, %1291, %var_23638)
}

def @func_4934(%var_4933: Tensor[(13, 9, 2), uint16]) -> Tensor[(13, 9, 2), uint16] {
  %1296 = fn (%var_4926: Tensor[(13, 9, 2), uint16]) -> Tensor[(13, 9, 2), uint16] {
    %1292 = cast(%var_4926, dtype="uint16") /* ty=Tensor[(13, 9, 2), uint16] */;
    %1293 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(13, 9, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1294 = cast(meta[relay.Constant][49] /* ty=Tensor[(13, 9, 2), uint16] */, dtype="uint16") /* ty=Tensor[(13, 9, 2), uint16] */;
    %1295 = dyn.reshape(%1292, %1293, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    right_shift(%1294, %1295) /* ty=Tensor[(13, 9, 2), uint16] */
  };
  %1296(%var_4933) /* ty=Tensor[(13, 9, 2), uint16] */
}

def @func_2794() -> (Tensor[(7, 11, 3), float32],) {
  %1297 = @func_2741() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1298 = %1297.0;
  (%1298,)
}

def @func_14130(%var_14128: uint64, %var_14129: Tensor[(455), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1, 14, 5), uint64], uint64, Tensor[(70), uint64], Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(1470, 1), float32], Tensor[(1, 676), int8], Tensor[(7, 11, 3), float32]) {
  %1333 = fn (%var_14033: uint64, %var_14088: Tensor[(455), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1, 14, 5), uint64], uint64, Tensor[(70), uint64], Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(1470, 1), float32], Tensor[(1, 676), int8], Tensor[(7, 11, 3), float32]) {
    %1299 = @func_5968() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1300 = cast(%var_14033, dtype="uint64") /* ty=uint64 */;
    %1301 = cast(meta[relay.Constant][50] /* ty=Tensor[(70), uint64] */, dtype="uint64") /* ty=Tensor[(70), uint64] */;
    %1302 = reshape(%1300, newshape=[]) /* ty=uint64 */;
    %1303 = reshape(%1301, newshape=[1, 14, 5]) /* ty=Tensor[(1, 14, 5), uint64] */;
    %1304 = @func_11782(%1302, %1303) /* ty=(Tensor[(1, 14, 5), uint64],) */;
    %1305 = %1299.0;
    %1306 = cast(%1305, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
    %1307 = reshape(%1306, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), float32] */;
    %1308 = @func_4720() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
    %1309 = %1308.2;
    %1310 = cast(%1309, dtype="float64") /* ty=Tensor[(455), float64] */;
    %1311 = asinh(%1310) /* ty=Tensor[(455), float64] */;
    %1312 = cast(%1311, dtype="float32") /* ty=Tensor[(455), float32] */;
    %1313 = sigmoid(%1312) /* ty=Tensor[(455), float32] */;
    %1314 = cast(%var_14088, dtype="int32") /* ty=Tensor[(455), int32] */;
    %1315 = shape_of(%1313, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1316 = cast(%1313, dtype="int32") /* ty=Tensor[(455), int32] */;
    %1317 = dyn.reshape(%1314, %1315, newshape=[]) /* ty=Tensor[(?), int32] */;
    %1318 = left_shift(%1316, %1317) /* ty=Tensor[(455), int32] */;
    %1319 = cast(%1318, dtype="float32") /* ty=Tensor[(455), float32] */;
    %1320 = cast(meta[relay.Constant][51] /* ty=Tensor[(1470, 1), float32] */, dtype="float32") /* ty=Tensor[(1470, 1), float32] */;
    %1321 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 676), int8] */, dtype="int8") /* ty=Tensor[(1, 676), int8] */;
    %1322 = reshape(%1320, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %1323 = reshape(%1321, newshape=[676]) /* ty=Tensor[(676), int8] */;
    %1324 = @func_3269(%1322, %1323) /* ty=(Tensor[(7, 11, 3), int16], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(676), int8]) */;
    %1325 = @func_11274() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
    %1326 = %1304.0;
    %1327 = @func_3771(%1307) /* ty=Tensor[(7, 11, 3), int8] */;
    %1328 = @func_10669() /* ty=Tensor[(7, 11, 3), float32] */;
    %1329 = acos(%1319) /* ty=Tensor[(455), float32] */;
    %1330 = @func_9898() /* ty=Tensor[(7, 11, 3), float32] */;
    %1331 = %1324.2;
    %1332 = %1325.1;
    (%1305, %1326, %var_14033, meta[relay.Constant][50] /* ty=Tensor[(70), uint64] */, %1327, %1328, %1329, %1330, %1331, meta[relay.Constant][51] /* ty=Tensor[(1470, 1), float32] */, meta[relay.Constant][52] /* ty=Tensor[(1, 676), int8] */, %1332)
  };
  %1333(%var_14128, %var_14129) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1, 14, 5), uint64], uint64, Tensor[(70), uint64], Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(1470, 1), float32], Tensor[(1, 676), int8], Tensor[(7, 11, 3), float32]) */
}

def @func_23550(%var_23546: Tensor[(117, 2), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(13, 9, 2), uint16], Tensor[(117, 2), uint16]) {
  %1334 = @func_7166() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1335 = @func_21169() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1336 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1337 = cast(%var_23546, dtype="uint16") /* ty=Tensor[(117, 2), uint16] */;
  %1338 = reshape(%1337, newshape=[13, 9, 2]) /* ty=Tensor[(13, 9, 2), uint16] */;
  %1339 = %1334.0;
  %1340 = %1335.0;
  %1341 = %1336.0;
  %1342 = @func_4932(%1338) /* ty=Tensor[(13, 9, 2), uint16] */;
  (%1339, %1340, %1341, %1342, %var_23546)
}

def @func_24053() -> (Tensor[(14, 2, 1), float64],) {
  %1343 = cast(0.896148f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1344 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 2, 1), float64] */, dtype="float64") /* ty=Tensor[(14, 2, 1), float64] */;
  %1345 = minimum(%1343, %1344) /* ty=Tensor[(14, 2, 1), float64] */;
  (%1345,)
}

def @func_10880(%var_10859: Tensor[(36), uint32]) -> (Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32]) {
  %1346 = cast(%var_10859, dtype="uint32") /* ty=Tensor[(36), uint32] */;
  %1347 = reshape(%1346, newshape=[3, 3, 4]) /* ty=Tensor[(3, 3, 4), uint32] */;
  %1348 = @func_10301() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1349 = @func_5035() /* ty=Tensor[(7, 11, 3), float32] */;
  %1350 = @func_3044(%1347) /* ty=Tensor[(3, 3, 4), uint32] */;
  %1351 = %1348.0;
  (%1349, %1350, %var_10859, %1351)
}

def @func_3010(%var_3009: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) {
  %1360 = fn (%var_2979: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) {
    %1352 = cast(%var_2979, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %1353 = reshape(%1352, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %1354 = @func_2770(%1353) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(1470), float32]) */;
    %1355 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1356 = %1355.0;
    %1357 = cast(%1356, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
    %1358 = %1354.0;
    %1359 = cosh(%1357) /* ty=Tensor[(7, 11, 3), float32] */;
    (%1358, %var_2979, %1359)
  };
  %1360(%var_3009) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_23180(%var_23122: Tensor[(2730), float64], %var_23174: Tensor[(490, 3), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(13, 15, 14), float64], Tensor[(2730), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(819), int64], Tensor[(7, 11, 3), float32], Tensor[(490, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1361 = @func_11020() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1362 = cast(%var_23122, dtype="float64") /* ty=Tensor[(2730), float64] */;
  %1363 = cast(meta[relay.Constant][54] /* ty=Tensor[(490, 3), float32] */, dtype="float32") /* ty=Tensor[(490, 3), float32] */;
  %1364 = reshape(%1362, newshape=[13, 15, 14]) /* ty=Tensor[(13, 15, 14), float64] */;
  %1365 = reshape(%1363, newshape=[98, 15]) /* ty=Tensor[(98, 15), float32] */;
  %1366 = @func_11373(%1364, %1365) /* ty=(Tensor[(13, 15, 14), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(98, 15), float32], Tensor[(7, 11, 3), float32]) */;
  %1367 = @func_5515() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1368 = cast(meta[relay.Constant][55] /* ty=Tensor[(819), int64] */, dtype="int64") /* ty=Tensor[(819), int64] */;
  %1369 = cast(meta[relay.Constant][55] /* ty=Tensor[(819), int64] */, dtype="int64") /* ty=Tensor[(819), int64] */;
  %1370 = reshape(%1368, newshape=[13, 7, 9]) /* ty=Tensor[(13, 7, 9), int64] */;
  %1371 = reshape(%1369, newshape=[13, 7, 9]) /* ty=Tensor[(13, 7, 9), int64] */;
  %1372 = @func_14566(%1370, %1371) /* ty=(Tensor[(13, 7, 9), int64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %1373 = cast(%var_23174, dtype="float32") /* ty=Tensor[(490, 3), float32] */;
  %1374 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(490, 3), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1375 = cast(meta[relay.Constant][54] /* ty=Tensor[(490, 3), float32] */, dtype="float32") /* ty=Tensor[(490, 3), float32] */;
  %1376 = dyn.reshape(%1373, %1374, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1377 = @func_22551() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1378 = %1361.0;
  %1379 = %1366.0;
  %1380 = %1367.0;
  %1381 = %1372.3;
  %1382 = @func_5309() /* ty=Tensor[(7, 11, 3), float32] */;
  %1383 = power(%1375, %1376) /* ty=Tensor[(490, 3), float32] */;
  %1384 = %1377.0;
  (%1378, %1379, %var_23122, %1380, %1381, meta[relay.Constant][55] /* ty=Tensor[(819), int64] */, %1382, %1383, %1384)
}

def @func_17842() -> (Tensor[(7, 11, 3), float32],) {
  %1385 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1386 = %1385.1;
  (%1386,)
}

def @func_5820() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1387 = @func_5064() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1388 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1389 = %1387.1;
  %1390 = %1388.0;
  (%1389, %1390)
}

def @func_16783() -> (Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) {
  @func_16781() /* ty=(Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_8507(%var_8480: Tensor[(832), float32]) -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(13, 8, 8), float32]) {
  %1391 = @func_7939() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */;
  %1392 = cast(%var_8480, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1393 = reshape(%1392, newshape=[832]) /* ty=Tensor[(832), float32] */;
  %1394 = @func_5418(%1393) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(4, 9, 3), float32], Tensor[(832), float32]) */;
  %1395 = cast(%var_8480, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1396 = reshape(%1395, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
  %1397 = @func_2460(%1396) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) */;
  %1398 = %1391.0;
  %1399 = %1394.0;
  %1400 = %1397.3;
  (%1398, %1399, %var_8480, %1400)
}

def @func_8566() -> (Tensor[(7, 11, 3), float64],) {
  %1402 = fn () -> (Tensor[(7, 11, 3), float64],) {
    %1401 = @func_8195() /* ty=Tensor[(7, 11, 3), float64] */;
    (%1401,)
  };
  %1402() /* ty=(Tensor[(7, 11, 3), float64],) */
}

def @func_19266() -> (Tensor[(7, 11, 3), float32],) {
  %1405 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %1403 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1404 = %1403.0;
    (%1404,)
  };
  %1405() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_20735() -> (Tensor[(7, 11, 3), float32],) {
  %1407 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %1406 = @func_5726() /* ty=Tensor[(7, 11, 3), float32] */;
    (%1406,)
  };
  %1407() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_5969() -> (Tensor[(7, 11, 3), float32],) {
  %1410 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %1408 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1409 = %1408.0;
    (%1409,)
  };
  %1410() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_14889() -> (Tensor[(7, 11, 3), float32],) {
  @func_14887() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_22149() -> Tensor[(7, 11, 3), float32] {
  @func_22147() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_10793(%var_10790: Tensor[(9, 1, 11), float32], %var_10791: Tensor[(9, 7, 11), float32], %var_10792: Tensor[(108), float32]) -> (Tensor[(9, 7, 11), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(9, 2, 11), uint8]) {
  %1421 = fn (%var_10774: Tensor[(9, 1, 11), float32], %var_10775: Tensor[(9, 7, 11), float32], %var_10782: Tensor[(108), float32]) -> (Tensor[(9, 7, 11), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(9, 2, 11), uint8]) {
    %1411 = cast(%var_10774, dtype="float32") /* ty=Tensor[(9, 1, 11), float32] */;
    %1412 = cast(%var_10775, dtype="float32") /* ty=Tensor[(9, 7, 11), float32] */;
    %1413 = cast(%var_10782, dtype="float32") /* ty=Tensor[(108), float32] */;
    %1414 = reshape(%1413, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
    %1415 = @func_2013(%1414) /* ty=(Tensor[(4, 9, 3), float32],) */;
    %1416 = cast(%var_10774, dtype="uint8") /* ty=Tensor[(9, 1, 11), uint8] */;
    %1417 = cast(meta[relay.Constant][56] /* ty=Tensor[(9, 2, 11), float32] */, dtype="uint8") /* ty=Tensor[(9, 2, 11), uint8] */;
    %1418 = floor_divide(%1411, %1412) /* ty=Tensor[(9, 7, 11), float32] */;
    %1419 = %1415.0;
    %1420 = bitwise_or(%1416, %1417) /* ty=Tensor[(9, 2, 11), uint8] */;
    (%1418, %1419, %var_10782, %1420)
  };
  %1421(%var_10790, %var_10791, %var_10792) /* ty=(Tensor[(9, 7, 11), float32], Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(9, 2, 11), uint8]) */
}

def @func_18966(%var_18965: Tensor[(6, 3, 16), uint64]) -> Tensor[(6, 3, 16), float32] {
  %1428 = fn (%var_18956: Tensor[(6, 3, 16), uint64]) -> Tensor[(6, 3, 16), float32] {
    %1422 = @func_8980() /* ty=(Tensor[(6, 3, 16), uint64],) */;
    %1423 = %1422.0;
    %1424 = cast(%var_18956, dtype="float32") /* ty=Tensor[(6, 3, 16), float32] */;
    %1425 = shape_of(%1423, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1426 = cast(%1423, dtype="float32") /* ty=Tensor[(6, 3, 16), float32] */;
    %1427 = dyn.reshape(%1424, %1425, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%1426, %1427) /* ty=Tensor[(6, 3, 16), float32] */
  };
  %1428(%var_18965) /* ty=Tensor[(6, 3, 16), float32] */
}

def @func_12353() -> Tensor[(7, 11, 3), float32] {
  %1429 = @func_5064() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1429.1
}

def @func_5310() -> Tensor[(7, 11, 3), float32] {
  %1430 = fn () -> Tensor[(7, 11, 3), float32] {
    @func_5035() /* ty=Tensor[(7, 11, 3), float32] */
  };
  %1430() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_8001(%var_7969: Tensor[(117, 2), uint16], %var_7973: Tensor[(117, 2), uint16], %var_7997: Tensor[(117, 2), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(117, 2), uint8], Tensor[(117, 2), bool]) {
  %1431 = cast(%var_7973, dtype="uint8") /* ty=Tensor[(117, 2), uint8] */;
  %1432 = shape_of(%var_7969, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1433 = cast(%var_7969, dtype="uint8") /* ty=Tensor[(117, 2), uint8] */;
  %1434 = dyn.reshape(%1431, %1432, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1435 = cast(%var_7973, dtype="float32") /* ty=Tensor[(117, 2), float32] */;
  %1436 = rsqrt(%1435) /* ty=Tensor[(117, 2), float32] */;
  %1437 = cast(%var_7969, dtype="uint16") /* ty=Tensor[(117, 2), uint16] */;
  %1438 = reshape(%1437, newshape=[13, 9, 2]) /* ty=Tensor[(13, 9, 2), uint16] */;
  %1439 = @func_4932(%1438) /* ty=Tensor[(13, 9, 2), uint16] */;
  %1440 = cast(%1439, dtype="uint8") /* ty=Tensor[(13, 9, 2), uint8] */;
  %1441 = shape_of(%1436, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1442 = cast(%1436, dtype="uint8") /* ty=Tensor[(117, 2), uint8] */;
  %1443 = dyn.reshape(%1440, %1441, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1444 = cast(%var_7997, dtype="bool") /* ty=Tensor[(117, 2), bool] */;
  %1445 = shape_of(%var_7973, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1446 = cast(%var_7973, dtype="bool") /* ty=Tensor[(117, 2), bool] */;
  %1447 = dyn.reshape(%1444, %1445, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1448 = @func_7007() /* ty=Tensor[(7, 11, 3), float32] */;
  %1449 = @func_6201() /* ty=Tensor[(7, 11, 3), float32] */;
  %1450 = bitwise_and(%1433, %1434) /* ty=Tensor[(117, 2), uint8] */;
  %1451 = right_shift(%1442, %1443) /* ty=Tensor[(117, 2), uint8] */;
  %1452 = less(%1446, %1447) /* ty=Tensor[(117, 2), bool] */;
  (%1448, %1449, %1450, %1451, %1452)
}

def @func_7077() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), int8]) {
  %1453 = @func_5890() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */;
  %1454 = @func_5515() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1455 = %1454.0;
  %1456 = cast(%1455, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %1457 = reshape(%1456, newshape=[7, 11, 3]) /* ty=Tensor[(7, 11, 3), float32] */;
  %1458 = %1453.0;
  %1459 = @func_5035() /* ty=Tensor[(7, 11, 3), float32] */;
  %1460 = @func_3771(%1457) /* ty=Tensor[(7, 11, 3), int8] */;
  (%1458, %1455, %1459, %1460)
}

def @func_23505() -> (Tensor[(11, 3, 5), float64], Tensor[(4, 9, 3), float32], Tensor[(18, 6), float32]) {
  %1461 = cast(meta[relay.Constant][57] /* ty=Tensor[(11, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(11, 3, 5), float64] */;
  %1462 = cast(meta[relay.Constant][58] /* ty=Tensor[(18, 6), float32] */, dtype="float32") /* ty=Tensor[(18, 6), float32] */;
  %1463 = reshape(%1462, newshape=[4, 9, 3]) /* ty=Tensor[(4, 9, 3), float32] */;
  %1464 = @func_2013(%1463) /* ty=(Tensor[(4, 9, 3), float32],) */;
  %1465 = acosh(%1461) /* ty=Tensor[(11, 3, 5), float64] */;
  %1466 = %1464.0;
  (%1465, %1466, meta[relay.Constant][58] /* ty=Tensor[(18, 6), float32] */)
}

def @func_14829() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) {
  %1467 = @func_11274() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %1468 = @func_3991() /* ty=(Tensor[(7, 11, 3), float64],) */;
  %1469 = %1467.1;
  %1470 = %1468.0;
  %1471 = @func_8195() /* ty=Tensor[(7, 11, 3), float64] */;
  (%1469, %1470, %1471)
}

def @func_18664(%var_18663: Tensor[(11, 15, 9), float32]) -> (Tensor[(11, 15, 9), float32], Tensor[(1470), float32], Tensor[(1470), float32]) {
  %1478 = fn (%var_18626: Tensor[(11, 15, 9), float32]) -> (Tensor[(11, 15, 9), float32], Tensor[(1470), float32], Tensor[(1470), float32]) {
    %1472 = cast(%var_18626, dtype="float32") /* ty=Tensor[(11, 15, 9), float32] */;
    %1473 = cast(meta[relay.Constant][59] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %1474 = reshape(%1473, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %1475 = @func_11547(%1474) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(676), bool], Tensor[(1470), float32]) */;
    %1476 = sin(%1472) /* ty=Tensor[(11, 15, 9), float32] */;
    %1477 = %1475.1;
    (%1476, %1477, meta[relay.Constant][59] /* ty=Tensor[(1470), float32] */)
  };
  %1478(%var_18663) /* ty=(Tensor[(11, 15, 9), float32], Tensor[(1470), float32], Tensor[(1470), float32]) */
}

def @func_2741() -> (Tensor[(7, 11, 3), float32],) {
  %1479 = cast(meta[relay.Constant][60] /* ty=Tensor[(7, 11, 3), float32] */, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %1480 = atanh(%1479) /* ty=Tensor[(7, 11, 3), float32] */;
  (%1480,)
}

def @func_14369() -> Tensor[(7, 11, 3), float32] {
  %1482 = fn () -> Tensor[(7, 11, 3), float32] {
    %1481 = @func_10505() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1481.1
  };
  %1482() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_4062() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_10692() -> (Tensor[(7, 11, 3), float64],) {
  %1483 = @func_8195() /* ty=Tensor[(7, 11, 3), float64] */;
  (%1483,)
}

def @func_10562(%var_10560: Tensor[(15, 6, 5), uint32], %var_10561: Tensor[(15, 6, 5), uint32]) -> (Tensor[(15, 6, 5), float64], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) {
  @func_10558(%var_10560, %var_10561) /* ty=(Tensor[(15, 6, 5), float64], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_14698() -> (Tensor[(7, 11, 3), float32],) {
  @func_14696() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_16980() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
  %1492 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
    %1484 = @func_13564() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1485 = @func_16173() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1486 = cast(meta[relay.Constant][61] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %1487 = reshape(%1486, newshape=[1470, 1]) /* ty=Tensor[(1470, 1), float32] */;
    %1488 = @func_9028(%1487) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(1470, 1), float32]) */;
    %1489 = %1484.0;
    %1490 = %1485.1;
    %1491 = %1488.0;
    (%1489, %1490, %1491, meta[relay.Constant][61] /* ty=Tensor[(1470), float32] */)
  };
  %1492() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */
}

def @func_19490() -> (Tensor[(7, 11, 3), float32],) {
  %1493 = @func_17983() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1493,)
}

def @func_13564() -> (Tensor[(7, 11, 3), float32],) {
  %1494 = @func_11162() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1495 = %1494.0;
  (%1495,)
}

def @func_17688() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1499 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %1496 = @func_9446() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1497 = @func_6201() /* ty=Tensor[(7, 11, 3), float32] */;
    %1498 = %1496.0;
    (%1497, %1498)
  };
  %1499() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_16951() -> Tensor[(7, 11, 3), float32] {
  %1500 = @func_16104() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1500.0
}

def @func_23448(%var_23446: Tensor[(234), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_23445(%var_23446) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_20941() -> (Tensor[(7, 11, 3), float64], Tensor[(15, 6, 4), uint32]) {
  %1501 = @func_15878() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %1502 = @func_11812() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(15, 6, 4), uint32], Tensor[(360), uint32]) */;
  %1503 = %1501.1;
  %1504 = %1502.1;
  (%1503, %1504)
}

def @func_11208() -> (Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
  %1511 = fn () -> (Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) {
    %1505 = @func_8980() /* ty=(Tensor[(6, 3, 16), uint64],) */;
    %1506 = cast(meta[relay.Constant][62] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %1507 = reshape(%1506, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
    %1508 = @func_4886(%1507) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) */;
    %1509 = %1505.0;
    %1510 = %1508.0;
    (%1509, %1510, meta[relay.Constant][62] /* ty=Tensor[(1470), float32] */)
  };
  %1511() /* ty=(Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */
}

def @func_13412() -> Tensor[(7, 11, 3), float32] {
  %1512 = @func_12664() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1512.0
}

def @func_11960(%var_11958: Tensor[(1470), float32], %var_11959: Tensor[(2730), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(36), uint32], Tensor[(2730), float64], Tensor[(7, 11, 3), float32]) {
  @func_11956(%var_11958, %var_11959) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(1470), float32], Tensor[(36), uint32], Tensor[(2730), float64], Tensor[(7, 11, 3), float32]) */
}

def @func_6960() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(14, 105), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1525 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(14, 105), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %1513 = @func_6783() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
    %1514 = @func_5064() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1515 = cast(meta[relay.Constant][63] /* ty=Tensor[(14, 105), float32] */, dtype="float32") /* ty=Tensor[(14, 105), float32] */;
    %1516 = reshape(%1515, newshape=[14, 105]) /* ty=Tensor[(14, 105), float32] */;
    %1517 = @func_5446(%1516) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(455), float32], Tensor[(14, 105), float32]) */;
    %1518 = @func_3796() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
    %1519 = %1513.1;
    %1520 = %1514.1;
    %1521 = @func_5497() /* ty=Tensor[(7, 11, 3), float32] */;
    %1522 = %1517.0;
    %1523 = %1518.0;
    %1524 = @func_5834() /* ty=Tensor[(7, 11, 3), float32] */;
    (%1519, %1520, %1521, %1522, meta[relay.Constant][63] /* ty=Tensor[(14, 105), float32] */, %1523, %1524)
  };
  %1525() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(14, 105), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_7527() -> (Tensor[(7, 11, 3), float32],) {
  @func_7525() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_10227(%var_10225: Tensor[(832), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float64], Tensor[(7, 11, 3), float32], Tensor[(15, 6, 4), uint32], Tensor[(360), uint32], Tensor[(7, 11, 3), float64]) {
  @func_10224(%var_10225) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float64], Tensor[(7, 11, 3), float32], Tensor[(15, 6, 4), uint32], Tensor[(360), uint32], Tensor[(7, 11, 3), float64]) */
}

def @func_8510(%var_8508: Tensor[(832), float32]) -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(13, 8, 8), float32]) {
  @func_8507(%var_8508) /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(13, 8, 8), float32]) */
}

def @func_23445(%var_23433: Tensor[(234), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1526 = @func_16241() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1527 = @func_5820() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1528 = cast(%var_23433, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %1529 = reshape(%1528, newshape=[234]) /* ty=Tensor[(234), uint16] */;
  %1530 = @func_16489(%1529) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(117, 2), uint8], Tensor[(234), uint16], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32], Tensor[(2, 416), float32]) */;
  %1531 = %1526.0;
  %1532 = %1527.0;
  %1533 = %1530.3;
  %1534 = @func_12095() /* ty=Tensor[(7, 11, 3), float32] */;
  %1535 = @func_15262() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1531, %1532, %1533, %var_23433, %1534, %1535)
}

def @func_7358() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_7356() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_19348() -> Tensor[(7, 11, 3), float32] {
  @func_19346() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_13230() -> (Tensor[(7, 11, 3), float64], Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_13228() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_5499() -> Tensor[(7, 11, 3), float32] {
  @func_5497() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_16104() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1536 = @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1537 = @func_6474() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1538 = %1536.0;
  %1539 = %1537.0;
  (%1538, %1539)
}

def @func_23954() -> Tensor[(7, 11, 3), float32] {
  @func_23952() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_20968() -> (Tensor[(1470), float32],) {
  %1540 = @func_19763() /* ty=(Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) */;
  %1541 = %1540.0;
  (%1541,)
}

def @func_18592() -> (Tensor[(7, 11, 3), float32],) {
  %1544 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %1542 = @func_14872() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1543 = %1542.1;
    (%1543,)
  };
  %1544() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_10773() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float64], Tensor[(208, 4), float32], Tensor[(15, 6, 4), uint32], Tensor[(180, 2), uint32], Tensor[(7, 11, 3), float32]) {
  %1559 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float64], Tensor[(208, 4), float32], Tensor[(15, 6, 4), uint32], Tensor[(180, 2), uint32], Tensor[(7, 11, 3), float32]) {
    %1545 = @func_2784() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1546 = cast(meta[relay.Constant][64] /* ty=Tensor[(208, 4), float32] */, dtype="float32") /* ty=Tensor[(208, 4), float32] */;
    %1547 = reshape(%1546, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %1548 = @func_10224(%1547) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float64], Tensor[(7, 11, 3), float32], Tensor[(15, 6, 4), uint32], Tensor[(360), uint32], Tensor[(7, 11, 3), float64]) */;
    %1549 = cast(meta[relay.Constant][65] /* ty=Tensor[(180, 2), uint32] */, dtype="uint32") /* ty=Tensor[(180, 2), uint32] */;
    %1550 = cast(meta[relay.Constant][65] /* ty=Tensor[(180, 2), uint32] */, dtype="uint32") /* ty=Tensor[(180, 2), uint32] */;
    %1551 = reshape(%1549, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), uint32] */;
    %1552 = reshape(%1550, newshape=[15, 6, 4]) /* ty=Tensor[(15, 6, 4), uint32] */;
    %1553 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1554 = @func_9120() /* ty=Tensor[(7, 11, 3), float32] */;
    %1555 = %1545.0;
    %1556 = %1548.2;
    %1557 = @func_6684(%1551, %1552) /* ty=Tensor[(15, 6, 4), uint32] */;
    %1558 = %1553.0;
    (%1554, %1555, %1556, meta[relay.Constant][64] /* ty=Tensor[(208, 4), float32] */, %1557, meta[relay.Constant][65] /* ty=Tensor[(180, 2), uint32] */, %1558)
  };
  %1559() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float64], Tensor[(208, 4), float32], Tensor[(15, 6, 4), uint32], Tensor[(180, 2), uint32], Tensor[(7, 11, 3), float32]) */
}

def @func_21186() -> (Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), float32]) {
  @func_21184() /* ty=(Tensor[(7, 11, 3), int8], Tensor[(7, 11, 3), float32]) */
}

def @func_21658() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(234), uint16]) {
  @func_21656() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(234), uint16]) */
}

def @func_22012() -> Tensor[(9, 4), uint32] {
  %1561 = fn () -> Tensor[(9, 4), uint32] {
    %1560 = @func_12036() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(9, 4), uint32]) */;
    %1560.2
  };
  %1561() /* ty=Tensor[(9, 4), uint32] */
}

def @func_10558(%var_10527: Tensor[(15, 6, 5), uint32], %var_10528: Tensor[(15, 6, 5), uint32]) -> (Tensor[(15, 6, 5), float64], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(7, 11, 3), float32]) {
  %1562 = cast(%var_10528, dtype="uint32") /* ty=Tensor[(15, 6, 5), uint32] */;
  %1563 = shape_of(%var_10527, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1564 = cast(%var_10527, dtype="uint32") /* ty=Tensor[(15, 6, 5), uint32] */;
  %1565 = dyn.reshape(%1562, %1563, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1566 = bitwise_and(%1564, %1565) /* ty=Tensor[(15, 6, 5), uint32] */;
  %1567 = cast(%1566, dtype="float64") /* ty=Tensor[(15, 6, 5), float64] */;
  %1568 = @func_8869() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1569 = cast(meta[relay.Constant][66] /* ty=Tensor[(676), int8] */, dtype="int8") /* ty=Tensor[(676), int8] */;
  %1570 = cast(meta[relay.Constant][67] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1571 = reshape(%1569, newshape=[13, 13, 4]) /* ty=Tensor[(13, 13, 4), int8] */;
  %1572 = reshape(%1570, newshape=[1, 1470]) /* ty=Tensor[(1, 1470), float32] */;
  %1573 = @func_2818(%1571, %1572) /* ty=(Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(13, 13, 4), float32]) */;
  %1574 = @func_9656() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1575 = log(%1567) /* ty=Tensor[(15, 6, 5), float64] */;
  %1576 = %1568.0;
  %1577 = %1573.2;
  %1578 = %1574.0;
  (%1575, %1576, %1577, meta[relay.Constant][66] /* ty=Tensor[(676), int8] */, meta[relay.Constant][67] /* ty=Tensor[(1470), float32] */, %1578)
}

def @func_22306(%var_22305: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(15, 6, 4), uint32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1591 = fn (%var_22275: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(15, 6, 4), uint32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %1579 = @func_21099() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32]) */;
    %1580 = cast(%var_22275, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %1581 = reshape(%1580, newshape=[7, 210]) /* ty=Tensor[(7, 210), float32] */;
    %1582 = @func_4886(%1581) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) */;
    %1583 = @func_11812() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(15, 6, 4), uint32], Tensor[(360), uint32]) */;
    %1584 = @func_18756() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1585 = @func_9242() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1586 = %1579.0;
    %1587 = %1582.0;
    %1588 = %1583.1;
    %1589 = %1584.1;
    %1590 = %1585.0;
    (%1586, %1587, %var_22275, %1588, %1589, %1590)
  };
  %1591(%var_22305) /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(15, 6, 4), uint32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_6547() -> Tensor[(7, 11, 3), float32] {
  @func_5998() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_20687() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1592 = @func_4014() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1593 = %1592.0;
  %1594 = @func_7007() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1593, %1594)
}

def @func_7167() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1598 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %1595 = @func_6607() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1596 = %1595.0;
    %1597 = @func_5309() /* ty=Tensor[(7, 11, 3), float32] */;
    (%1596, %1597)
  };
  %1598() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_5663() -> (Tensor[(7, 11, 3), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) {
  %1605 = fn () -> (Tensor[(7, 11, 3), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) {
    %1599 = @func_3991() /* ty=(Tensor[(7, 11, 3), float64],) */;
    %1600 = @func_5550() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(1470), float32]) */;
    %1601 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1602 = %1599.0;
    %1603 = %1600.1;
    %1604 = %1601.0;
    (%1602, %1603, %1604)
  };
  %1605() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(14, 15, 7), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_19547() -> Tensor[(6, 3, 16), uint64] {
  @func_6720() /* ty=Tensor[(6, 3, 16), uint64] */
}

def @func_20833() -> (Tensor[(7, 11, 3), float32],) {
  %1607 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %1606 = @func_19144() /* ty=Tensor[(7, 11, 3), float32] */;
    (%1606,)
  };
  %1607() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_18232() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 16, 2), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_18230() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 16, 2), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_14831() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) {
  @func_14829() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float64]) */
}

def @func_11022() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_11020() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_22885() -> (Tensor[(14, 4, 2), float64], Tensor[(6, 3, 16), uint64]) {
  %1611 = fn () -> (Tensor[(14, 4, 2), float64], Tensor[(6, 3, 16), uint64]) {
    %1608 = cast(meta[relay.Constant][68] /* ty=Tensor[(14, 4, 2), float64] */, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
    %1609 = acosh(%1608) /* ty=Tensor[(14, 4, 2), float64] */;
    %1610 = @func_6720() /* ty=Tensor[(6, 3, 16), uint64] */;
    (%1609, %1610)
  };
  %1611() /* ty=(Tensor[(14, 4, 2), float64], Tensor[(6, 3, 16), uint64]) */
}

def @func_21600() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_21598() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_17778() -> (Tensor[(7, 11, 3), float32],) {
  %1614 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %1612 = @func_16979() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
    %1613 = %1612.1;
    (%1613,)
  };
  %1614() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_11814() -> (Tensor[(7, 11, 3), float32], Tensor[(15, 6, 4), uint32], Tensor[(360), uint32]) {
  @func_11812() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(15, 6, 4), uint32], Tensor[(360), uint32]) */
}

def @func_17236() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1615 = @func_13381() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1616 = @func_15591() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1617 = %1615.0;
  %1618 = @func_14368() /* ty=Tensor[(7, 11, 3), float32] */;
  %1619 = %1616.0;
  %1620 = @func_9898() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1617, %1618, %1619, %1620)
}

def @func_20741() -> (Tensor[(7, 11, 3), float32],) {
  %1621 = @func_4720() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
  %1622 = %1621.0;
  (%1622,)
}

def @func_20084() -> (Tensor[(7, 11, 3), float32],) {
  %1624 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %1623 = @func_11216() /* ty=Tensor[(7, 11, 3), float32] */;
    (%1623,)
  };
  %1624() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_9468() -> (Tensor[(7, 11, 3), float32],) {
  %1627 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %1625 = @func_6474() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1626 = %1625.0;
    (%1626,)
  };
  %1627() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_21961() -> (Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) {
  @func_21959() /* ty=(Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) */
}

def @func_8131() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  %1628 = @func_6447() /* ty=Tensor[(7, 11, 3), float64] */;
  %1629 = @func_5998() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1628, %1629)
}

def @func_5037() -> Tensor[(7, 11, 3), float32] {
  @func_5035() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_6474() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1630 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1631 = @func_3687() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1632 = @func_4623() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1633 = %1630.0;
  %1634 = %1631.0;
  %1635 = @func_5834() /* ty=Tensor[(7, 11, 3), float32] */;
  %1636 = %1632.0;
  (%1633, %1634, %1635, %1636)
}

def @func_10395(%var_10394: Tensor[(9, 8, 12), int16]) -> (Tensor[(9, 8, 12), int32], Tensor[(5, 4, 4), float64], Tensor[(80), float64], Tensor[(9, 8, 12), float64], Tensor[(1470), float32], Tensor[(1470), float32]) {
  %1666 = fn (%var_10304: Tensor[(9, 8, 12), int16]) -> (Tensor[(9, 8, 12), int32], Tensor[(5, 4, 4), float64], Tensor[(80), float64], Tensor[(9, 8, 12), float64], Tensor[(1470), float32], Tensor[(1470), float32]) {
    %1637 = cast(meta[relay.Constant][69] /* ty=Tensor[(9, 8, 12), int16] */, dtype="bool") /* ty=Tensor[(9, 8, 12), bool] */;
    %1638 = shape_of(%var_10304, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1639 = cast(%var_10304, dtype="bool") /* ty=Tensor[(9, 8, 12), bool] */;
    %1640 = dyn.reshape(%1637, %1638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1641 = less(%1639, %1640) /* ty=Tensor[(9, 8, 12), bool] */;
    %1642 = cast(%1641, dtype="float64") /* ty=Tensor[(9, 8, 12), float64] */;
    %1643 = cos(%1642) /* ty=Tensor[(9, 8, 12), float64] */;
    %1644 = cast(meta[relay.Constant][69] /* ty=Tensor[(9, 8, 12), int16] */, dtype="int32") /* ty=Tensor[(9, 8, 12), int32] */;
    %1645 = shape_of(%1643, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1646 = cast(%1643, dtype="int32") /* ty=Tensor[(9, 8, 12), int32] */;
    %1647 = dyn.reshape(%1644, %1645, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1648 = cast(meta[relay.Constant][70] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %1649 = reshape(%1648, newshape=[5, 4, 4]) /* ty=Tensor[(5, 4, 4), float64] */;
    %1650 = @func_7218(%1649) /* ty=(Tensor[(5, 4, 4), float64],) */;
    %1651 = cast(%1643, dtype="float64") /* ty=Tensor[(9, 8, 12), float64] */;
    %1652 = log2(%1651) /* ty=Tensor[(9, 8, 12), float64] */;
    %1653 = cast(%1652, dtype="float32") /* ty=Tensor[(9, 8, 12), float32] */;
    %1654 = sinh(%1653) /* ty=Tensor[(9, 8, 12), float32] */;
    %1655 = cast(meta[relay.Constant][71] /* ty=Tensor[(9, 8, 12), float32] */, dtype="float64") /* ty=Tensor[(9, 8, 12), float64] */;
    %1656 = shape_of(%1654, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1657 = cast(%1654, dtype="float64") /* ty=Tensor[(9, 8, 12), float64] */;
    %1658 = dyn.reshape(%1655, %1656, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1659 = cast(meta[relay.Constant][72] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %1660 = reshape(%1659, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %1661 = @func_9793(%1660) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(1470), float32], Tensor[(676), int8], Tensor[(7, 11, 3), float32]) */;
    %1662 = logical_xor(%1646, %1647) /* ty=Tensor[(9, 8, 12), int32] */;
    %1663 = %1650.0;
    %1664 = floor_mod(%1657, %1658) /* ty=Tensor[(9, 8, 12), float64] */;
    %1665 = %1661.2;
    (%1662, %1663, meta[relay.Constant][70] /* ty=Tensor[(80), float64] */, %1664, %1665, meta[relay.Constant][72] /* ty=Tensor[(1470), float32] */)
  };
  %1666(%var_10394) /* ty=(Tensor[(9, 8, 12), int32], Tensor[(5, 4, 4), float64], Tensor[(80), float64], Tensor[(9, 8, 12), float64], Tensor[(1470), float32], Tensor[(1470), float32]) */
}

def @func_20365() -> (Tensor[(9, 4), uint32], Tensor[(7, 11, 3), float32]) {
  %1667 = @func_12036() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(3, 3, 4), uint32], Tensor[(9, 4), uint32]) */;
  %1668 = @func_17842() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1669 = %1667.2;
  %1670 = %1668.0;
  (%1669, %1670)
}

def @func_18015() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1671 = @func_17954() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1672 = %1671.0;
  %1673 = @func_5035() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1672, %1673)
}

def @func_18060() -> Tensor[(7, 11, 3), float32] {
  %1674 = fn () -> Tensor[(7, 11, 3), float32] {
    @func_14274() /* ty=Tensor[(7, 11, 3), float32] */
  };
  %1674() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_19873(%var_19871: Tensor[(80), float64]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(5, 4, 4), float64], Tensor[(80), float64], Tensor[(7, 11, 3), float32]) {
  @func_19870(%var_19871) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(5, 4, 4), float64], Tensor[(80), float64], Tensor[(7, 11, 3), float32]) */
}

def @func_20163() -> Tensor[(7, 11, 3), float32] {
  @func_13412() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_21447() -> Tensor[(7, 11, 3), float32] {
  @func_21445() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_8869() -> (Tensor[(7, 11, 3), float32],) {
  %1675 = @func_4014() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1676 = %1675.1;
  (%1676,)
}

def @func_5418(%var_5386: Tensor[(832), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(4, 9, 3), float32], Tensor[(832), float32]) {
  %1677 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1678 = @func_4060() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1679 = %1678.1;
  %1680 = cast(%1679, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %1681 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1682 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1683 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1684 = @func_5193() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %1685 = cast(%var_5386, dtype="float32") /* ty=Tensor[(832), float32] */;
  %1686 = reshape(%1685, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float32] */;
  %1687 = @func_2460(%1686) /* ty=(Tensor[(4, 9, 3), float32], Tensor[(108), float32], Tensor[(4, 9, 3), float32], Tensor[(13, 8, 8), float32]) */;
  %1688 = %1677.1;
  %1689 = log10(%1680) /* ty=Tensor[(7, 11, 3), float32] */;
  %1690 = %1681.0;
  %1691 = %1682.1;
  %1692 = %1683.0;
  %1693 = %1684.1;
  %1694 = %1687.2;
  (%1688, %1689, %1690, %1691, %1692, %1693, %1694, %var_5386)
}

def @func_7730() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_7728() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_8660() -> (Tensor[(7, 11, 3), float32],) {
  %1695 = @func_7418() /* ty=Tensor[(7, 11, 3), float32] */;
  (%1695,)
}

def @func_18721() -> (Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(1, 455), float32]) {
  %1696 = @func_11162() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1697 = cast(meta[relay.Constant][73] /* ty=Tensor[(1, 455), float32] */, dtype="float32") /* ty=Tensor[(1, 455), float32] */;
  %1698 = reshape(%1697, newshape=[13, 35]) /* ty=Tensor[(13, 35), float32] */;
  %1699 = @func_9289(%1698) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(36), uint32], Tensor[(455), bool]) */;
  %1700 = %1696.0;
  %1701 = %1699.2;
  (%1700, %1701, meta[relay.Constant][73] /* ty=Tensor[(1, 455), float32] */)
}

def @func_3771(%var_3761: Tensor[(7, 11, 3), float32]) -> Tensor[(7, 11, 3), int8] {
  %1702 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1703 = %1702.0;
  %1704 = cast(%var_3761, dtype="int8") /* ty=Tensor[(7, 11, 3), int8] */;
  %1705 = shape_of(%1703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1706 = cast(%1703, dtype="int8") /* ty=Tensor[(7, 11, 3), int8] */;
  %1707 = dyn.reshape(%1704, %1705, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  minimum(%1706, %1707) /* ty=Tensor[(7, 11, 3), int8] */
}

def @func_9019() -> (Tensor[(7, 11, 3), float32],) {
  %1708 = @func_6959() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(14, 105), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1709 = %1708.6;
  (%1709,)
}

def @func_14236(%var_14235: Tensor[(1, 832), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1, 832), float32]) {
  %1718 = fn (%var_14201: Tensor[(1, 832), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1, 832), float32]) {
    %1710 = @func_6607() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1711 = @func_9610() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
    %1712 = cast(%var_14201, dtype="float32") /* ty=Tensor[(1, 832), float32] */;
    %1713 = reshape(%1712, newshape=[832, 1]) /* ty=Tensor[(832, 1), float32] */;
    %1714 = @func_4769(%1713) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832, 1), float32]) */;
    %1715 = %1710.0;
    %1716 = %1711.0;
    %1717 = %1714.0;
    (%1715, %1716, %1717, %var_14201)
  };
  %1718(%var_14235) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1, 832), float32]) */
}

def @func_5834() -> Tensor[(7, 11, 3), float32] {
  %1719 = @func_3687() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1719.0
}

def @func_3905() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1720 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1721 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1722 = %1720.0;
  %1723 = %1721.0;
  (%1722, %1723)
}

def @func_19097() -> (Tensor[(14, 15, 7), float32],) {
  %1725 = fn () -> (Tensor[(14, 15, 7), float32],) {
    %1724 = @func_18489() /* ty=Tensor[(14, 15, 7), float32] */;
    (%1724,)
  };
  %1725() /* ty=(Tensor[(14, 15, 7), float32],) */
}

def @func_4512(%var_4511: Tensor[(7, 210), float32]) -> (Tensor[(13, 13, 4), int8], Tensor[(676), int8], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) {
  %1736 = fn (%var_4501: Tensor[(7, 210), float32]) -> (Tensor[(13, 13, 4), int8], Tensor[(676), int8], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) {
    %1726 = cast(meta[relay.Constant][74] /* ty=Tensor[(676), int8] */, dtype="int8") /* ty=Tensor[(676), int8] */;
    %1727 = cast(%var_4501, dtype="float32") /* ty=Tensor[(7, 210), float32] */;
    %1728 = reshape(%1726, newshape=[13, 13, 4]) /* ty=Tensor[(13, 13, 4), int8] */;
    %1729 = reshape(%1727, newshape=[1, 1470]) /* ty=Tensor[(1, 1470), float32] */;
    %1730 = @func_2818(%1728, %1729) /* ty=(Tensor[(13, 13, 4), int8], Tensor[(7, 11, 3), float32], Tensor[(1, 1470), float32], Tensor[(13, 13, 4), float32]) */;
    %1731 = @func_3796() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
    %1732 = %1731.1;
    %1733 = cast(%1732, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
    %1734 = %1730.0;
    %1735 = log2(%1733) /* ty=Tensor[(7, 11, 3), float32] */;
    (%1734, meta[relay.Constant][74] /* ty=Tensor[(676), int8] */, %var_4501, %1735)
  };
  %1736(%var_4511) /* ty=(Tensor[(13, 13, 4), int8], Tensor[(676), int8], Tensor[(7, 210), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_3031() -> (Tensor[(7, 11, 3), float32],) {
  %1739 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %1737 = @func_2741() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1738 = %1737.0;
    (%1738,)
  };
  %1739() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_9899() -> Tensor[(7, 11, 3), float32] {
  %1740 = fn () -> Tensor[(7, 11, 3), float32] {
    @func_7007() /* ty=Tensor[(7, 11, 3), float32] */
  };
  %1740() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_19217(%var_19215: Tensor[(2, 1, 11), float64]) -> (Tensor[(1470), float32], Tensor[(2, 12, 11), uint16], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  @func_19214(%var_19215) /* ty=(Tensor[(1470), float32], Tensor[(2, 12, 11), uint16], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_11547(%var_11519: Tensor[(1470), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(676), bool], Tensor[(1470), float32]) {
  %1741 = @func_5745() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1742 = cast(%var_11519, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1743 = cast(meta[relay.Constant][75] /* ty=Tensor[(676), int8] */, dtype="int8") /* ty=Tensor[(676), int8] */;
  %1744 = reshape(%1742, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %1745 = reshape(%1743, newshape=[676]) /* ty=Tensor[(676), int8] */;
  %1746 = @func_3269(%1744, %1745) /* ty=(Tensor[(7, 11, 3), int16], Tensor[(676), int8], Tensor[(1470), float32], Tensor[(676), int8]) */;
  %1747 = %1746.3;
  %1748 = cast(meta[relay.Constant][75] /* ty=Tensor[(676), int8] */, dtype="bool") /* ty=Tensor[(676), bool] */;
  %1749 = shape_of(%1747, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1750 = cast(%1747, dtype="bool") /* ty=Tensor[(676), bool] */;
  %1751 = dyn.reshape(%1748, %1749, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1752 = @func_11413() /* ty=(Tensor[(1470), float32],) */;
  %1753 = %1741.0;
  %1754 = equal(%1750, %1751) /* ty=Tensor[(676), bool] */;
  %1755 = %1752.0;
  (%1753, %var_11519, %1754, %1755)
}

def @func_16174() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1760 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %1756 = @func_5515() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1757 = @func_10283() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1758 = %1756.0;
    %1759 = %1757.0;
    (%1758, %1759)
  };
  %1760() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_2015(%var_2014: Tensor[(4, 9, 3), float32]) -> (Tensor[(4, 9, 3), float32],) {
  %1763 = fn (%var_2007: Tensor[(4, 9, 3), float32]) -> (Tensor[(4, 9, 3), float32],) {
    %1761 = cast(%var_2007, dtype="float32") /* ty=Tensor[(4, 9, 3), float32] */;
    %1762 = sinh(%1761) /* ty=Tensor[(4, 9, 3), float32] */;
    (%1762,)
  };
  %1763(%var_2014) /* ty=(Tensor[(4, 9, 3), float32],) */
}

def @func_10506() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1769 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %1764 = @func_2794() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1765 = @func_5588() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1766 = @func_7007() /* ty=Tensor[(7, 11, 3), float32] */;
    %1767 = %1764.0;
    %1768 = %1765.0;
    (%1766, %1767, %1768)
  };
  %1769() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_8981() -> (Tensor[(6, 3, 16), uint64],) {
  %1771 = fn () -> (Tensor[(6, 3, 16), uint64],) {
    %1770 = @func_6720() /* ty=Tensor[(6, 3, 16), uint64] */;
    (%1770,)
  };
  %1771() /* ty=(Tensor[(6, 3, 16), uint64],) */
}

def @func_21751() -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1780 = fn () -> (Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
    %1772 = @func_19416() /* ty=(Tensor[(7, 11, 3), float64],) */;
    %1773 = @func_13815() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1774 = @func_18591() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1775 = @func_17236() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1776 = %1772.0;
    %1777 = %1773.0;
    %1778 = %1774.0;
    %1779 = %1775.2;
    (%1776, %1777, %1778, %1779)
  };
  %1780() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_23901() -> Tensor[(455), float32] {
  %1782 = fn () -> Tensor[(455), float32] {
    %1781 = @func_15631() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(455), float32]) */;
    %1781.2
  };
  %1782() /* ty=Tensor[(455), float32] */
}

def @func_15878() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) {
  %1783 = @func_10505() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1784 = @func_11274() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(7, 11, 3), float32]) */;
  %1785 = @func_9610() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float64]) */;
  %1786 = %1783.2;
  %1787 = %1784.0;
  %1788 = %1785.0;
  (%1786, %1787, %1788)
}

def @func_19492() -> (Tensor[(7, 11, 3), float32],) {
  @func_19490() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_13635() -> Tensor[(7, 11, 3), float32] {
  %1790 = fn () -> Tensor[(7, 11, 3), float32] {
    %1789 = @func_3482() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1789.0
  };
  %1790() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_2944() -> (Tensor[(7, 11, 3), float32],) {
  @func_2942() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_21163() -> (Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32]) {
  %1793 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32]) {
    %1791 = @func_9120() /* ty=Tensor[(7, 11, 3), float32] */;
    %1792 = @func_18489() /* ty=Tensor[(14, 15, 7), float32] */;
    (%1791, %1792)
  };
  %1793() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32]) */
}

def @func_20204() -> Tensor[(7, 11, 3), float32] {
  %1795 = fn () -> Tensor[(7, 11, 3), float32] {
    %1794 = @func_17687() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1794.1
  };
  %1795() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_5892() -> (Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) {
  @func_5890() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832), float32], Tensor[(7, 11, 3), float32]) */
}

def @func_9448() -> (Tensor[(7, 11, 3), float32],) {
  @func_9446() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_11218() -> Tensor[(7, 11, 3), float32] {
  @func_11216() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_20346() -> (Tensor[(7, 11, 3), float32], Tensor[(832, 1), float32], Tensor[(832), float32]) {
  %1802 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(832, 1), float32], Tensor[(832), float32]) {
    %1796 = @func_7138() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1797 = cast(meta[relay.Constant][76] /* ty=Tensor[(832), float32] */, dtype="float32") /* ty=Tensor[(832), float32] */;
    %1798 = reshape(%1797, newshape=[832, 1]) /* ty=Tensor[(832, 1), float32] */;
    %1799 = @func_4769(%1798) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(4, 9, 3), float32], Tensor[(832, 1), float32]) */;
    %1800 = %1796.0;
    %1801 = %1799.3;
    (%1800, %1801, meta[relay.Constant][76] /* ty=Tensor[(832), float32] */)
  };
  %1802() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(832, 1), float32], Tensor[(832), float32]) */
}

def @func_5925() -> Tensor[(7, 11, 3), float32] {
  @func_5923() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_4060() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1803 = @func_3030() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1804 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1805 = %1804.1;
  %1806 = cast(%1805, dtype="float32") /* ty=Tensor[(7, 11, 3), float32] */;
  %1807 = %1803.0;
  %1808 = acosh(%1806) /* ty=Tensor[(7, 11, 3), float32] */;
  (%1807, %1808)
}

def @func_5551() -> (Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(1470), float32]) {
  %1815 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(1470), float32]) {
    %1809 = @func_4014() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1810 = cast(meta[relay.Constant][77] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %1811 = reshape(%1810, newshape=[14, 15, 7]) /* ty=Tensor[(14, 15, 7), float32] */;
    %1812 = @func_2220(%1811) /* ty=(Tensor[(14, 15, 7), float32], Tensor[(13, 7, 5), float32], Tensor[(455), float32]) */;
    %1813 = %1809.0;
    %1814 = %1812.0;
    (%1813, %1814, meta[relay.Constant][77] /* ty=Tensor[(1470), float32] */)
  };
  %1815() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(14, 15, 7), float32], Tensor[(1470), float32]) */
}

def @func_4423() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) {
  %1816 = @func_3857() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1817 = @func_3905() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1818 = %1816.0;
  %1819 = %1817.0;
  (%1818, %1819)
}

def @func_7888(%var_7887: Tensor[(36), uint32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(36), uint32], Tensor[(1470), float32]) {
  %1828 = fn (%var_7881: Tensor[(36), uint32]) -> (Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(36), uint32], Tensor[(1470), float32]) {
    %1820 = @func_4423() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
    %1821 = cast(%var_7881, dtype="uint32") /* ty=Tensor[(36), uint32] */;
    %1822 = cast(meta[relay.Constant][78] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %1823 = reshape(%1821, newshape=[36]) /* ty=Tensor[(36), uint32] */;
    %1824 = reshape(%1822, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %1825 = @func_3374(%1823, %1824) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(3, 3, 4), uint32], Tensor[(36), uint32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
    %1826 = %1820.0;
    %1827 = %1825.4;
    (%1826, %1827, %var_7881, meta[relay.Constant][78] /* ty=Tensor[(1470), float32] */)
  };
  %1828(%var_7887) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(36), uint32], Tensor[(1470), float32]) */
}

def @func_8579() -> Tensor[(7, 11, 3), float32] {
  %1829 = fn () -> Tensor[(7, 11, 3), float32] {
    @func_7007() /* ty=Tensor[(7, 11, 3), float32] */
  };
  %1829() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_17627(%var_17580: float32, %var_17581: Tensor[(10, 10, 5), float32]) -> (Tensor[(10, 10, 5), float32], Tensor[(7, 11, 3), float32]) {
  %1830 = cast(%var_17580, dtype="float32") /* ty=float32 */;
  %1831 = cast(%var_17581, dtype="float32") /* ty=Tensor[(10, 10, 5), float32] */;
  %1832 = @func_9656() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32]) */;
  %1833 = floor_mod(%1830, %1831) /* ty=Tensor[(10, 10, 5), float32] */;
  %1834 = %1832.0;
  (%1833, %1834)
}

def @func_21169() -> (Tensor[(7, 11, 3), float32],) {
  %1835 = @func_11207() /* ty=(Tensor[(6, 3, 16), uint64], Tensor[(7, 11, 3), float32], Tensor[(1470), float32]) */;
  %1836 = %1835.1;
  (%1836,)
}

def @func_20053(%var_20051: Tensor[(234), uint16]) -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(234), uint16]) {
  @func_20050(%var_20051) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(832), float32], Tensor[(234), uint16]) */
}

def @func_22779() -> (Tensor[(7, 11, 3), float32],) {
  %1838 = fn () -> (Tensor[(7, 11, 3), float32],) {
    %1837 = @func_13634() /* ty=Tensor[(7, 11, 3), float32] */;
    (%1837,)
  };
  %1838() /* ty=(Tensor[(7, 11, 3), float32],) */
}

def @func_23941(%var_23940: Tensor[(208, 4), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(450), uint32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(208, 4), float32]) {
  %1849 = fn (%var_23930: Tensor[(208, 4), float32]) -> (Tensor[(7, 11, 3), float32], Tensor[(450), uint32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(208, 4), float32]) {
    %1839 = @func_21959() /* ty=(Tensor[(7, 11, 3), bool], Tensor[(7, 11, 3), float32]) */;
    %1840 = @func_19543() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(1470), float32], Tensor[(450), uint32]) */;
    %1841 = @func_12664() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1842 = cast(%var_23930, dtype="float32") /* ty=Tensor[(208, 4), float32] */;
    %1843 = reshape(%1842, newshape=[832]) /* ty=Tensor[(832), float32] */;
    %1844 = @func_20327(%1843) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(108), float32], Tensor[(832), float32]) */;
    %1845 = %1839.1;
    %1846 = %1840.3;
    %1847 = %1841.0;
    %1848 = %1844.0;
    (%1845, %1846, %1847, %1848, %var_23930)
  };
  %1849(%var_23940) /* ty=(Tensor[(7, 11, 3), float32], Tensor[(450), uint32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(208, 4), float32]) */
}

def @func_20165() -> Tensor[(7, 11, 3), float32] {
  @func_20163() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_12096() -> Tensor[(7, 11, 3), float32] {
  %1850 = fn () -> Tensor[(7, 11, 3), float32] {
    @func_5497() /* ty=Tensor[(7, 11, 3), float32] */
  };
  %1850() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_10671() -> Tensor[(7, 11, 3), float32] {
  @func_10669() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_17516() -> Tensor[(7, 11, 3), float32] {
  %1851 = fn () -> Tensor[(7, 11, 3), float32] {
    @func_8268() /* ty=Tensor[(7, 11, 3), float32] */
  };
  %1851() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_16590() -> Tensor[(7, 11, 3), float32] {
  %1852 = @func_9467() /* ty=(Tensor[(7, 11, 3), float32],) */;
  %1852.0
}

def @func_23373() -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 16, 2), float64]) {
  %1860 = fn () -> (Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 16, 2), float64]) {
    %1853 = @func_8660() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1854 = @func_9467() /* ty=(Tensor[(7, 11, 3), float32],) */;
    %1855 = @func_14459() /* ty=(Tensor[(7, 16, 2), float64], Tensor[(7, 16, 2), float64]) */;
    %1856 = @func_19346() /* ty=Tensor[(7, 11, 3), float32] */;
    %1857 = %1853.0;
    %1858 = %1854.0;
    %1859 = %1855.0;
    (%1856, %1857, %1858, %1859)
  };
  %1860() /* ty=(Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 11, 3), float32], Tensor[(7, 16, 2), float64]) */
}

def @func_6000() -> Tensor[(7, 11, 3), float32] {
  @func_5998() /* ty=Tensor[(7, 11, 3), float32] */
}

def @func_18866() -> (Tensor[(36), uint32],) {
  %1863 = fn () -> (Tensor[(36), uint32],) {
    %1861 = @func_8036() /* ty=(Tensor[(7, 11, 3), float64], Tensor[(36), uint32], Tensor[(1470), float32], Tensor[(1, 676), int8]) */;
    %1862 = %1861.1;
    (%1862,)
  };
  %1863() /* ty=(Tensor[(36), uint32],) */
}

def @func_11786(%var_11784: uint64, %var_11785: Tensor[(1, 14, 5), uint64]) -> (Tensor[(1, 14, 5), uint64],) {
  @func_11782(%var_11784, %var_11785) /* ty=(Tensor[(1, 14, 5), uint64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen815/build/output.py", line 6878, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:19:38] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


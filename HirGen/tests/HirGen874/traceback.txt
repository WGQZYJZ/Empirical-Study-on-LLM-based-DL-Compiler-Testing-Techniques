==========mod==========
#[version = "0.0.5"]
def @func_6393() -> Tensor[(4, 4, 14), float32] {
  %0 = @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %0.0
}

def @func_6017() -> Tensor[(4, 4, 14), bool] {
  %1 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1.1
}

def @func_15472() -> Tensor[(4, 4, 14), float64] {
  %2 = @func_11233() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %2.0
}

def @func_10262() -> Tensor[(4, 4, 14), float32] {
  %3 = @func_2478() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %3.0
}

def @func_12960() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %4 = @func_2752() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %5 = @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %6 = @func_6446() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %7 = @func_12608() /* ty=Tensor[(4, 4, 14), float32] */;
  %8 = %4.0;
  %9 = %5.0;
  %10 = @func_11729() /* ty=Tensor[(4, 4, 14), float32] */;
  %11 = %6.1;
  (%7, %8, %9, %10, %11)
}

def @func_7522() -> (Tensor[(4, 4, 14), float32],) {
  %12 = @func_4735() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %13 = %12.1;
  (%13,)
}

def @func_7824() -> Tensor[(4, 4, 14), float32] {
  %14 = @func_5055() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %14.2
}

def @func_22063() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %15 = @func_11980() /* ty=(Tensor[(6, 8, 9), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %16 = @func_7430() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %17 = @func_5931() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %18 = @func_7115() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %19 = %15.2;
  %20 = %16.0;
  %21 = %17.1;
  %22 = %18.0;
  (%19, %20, %21, %22)
}

def @func_18470() -> (Tensor[(4, 4, 14), float32],) {
  %23 = @func_4937() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %24 = %23.0;
  (%24,)
}

def @func_10307() -> (Tensor[(4, 4, 14), float32],) {
  %25 = @func_4863() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %26 = %25.0;
  (%26,)
}

def @func_2873(%var_2844: Tensor[(3, 7, 6), float32]) -> (Tensor[(4, 4, 14), float32], Tensor[(3, 7, 6), float32]) {
  %27 = @func_1445() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %28 = cast(%var_2844, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %29 = acosh(%28) /* ty=Tensor[(3, 7, 6), float32] */;
  %30 = cast(%29, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %31 = %27.1;
  %32 = log(%30) /* ty=Tensor[(3, 7, 6), float32] */;
  (%31, %32)
}

def @func_12663() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %33 = @func_6157() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %34 = @func_11721() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %35 = @func_6994() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %36 = %33.0;
  %37 = %34.0;
  %38 = %35.0;
  (%36, %37, %38)
}

def @func_20697() -> Tensor[(4, 4, 14), bool] {
  @func_12520() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_11980() -> (Tensor[(6, 8, 9), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  %39 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 1, 9), uint32] */, dtype="bool") /* ty=Tensor[(6, 1, 9), bool] */;
  %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 8, 9), uint32] */, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
  %41 = @func_3474() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %42 = @func_5002() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %43 = greater(%39, %40) /* ty=Tensor[(6, 8, 9), bool] */;
  %44 = %41.0;
  %45 = %42.0;
  (%43, %44, %45)
}

def @func_21103(%var_21039: Tensor[(14, 15, 10), float32]) -> (Tensor[(14, 15, 10), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(1452), int16], int16) {
  %46 = cast(%var_21039, dtype="float32") /* ty=Tensor[(14, 15, 10), float32] */;
  %47 = @func_13020() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %48 = cast(meta[relay.Constant][2] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %49 = reshape(%48, newshape=[]) /* ty=int16 */;
  %50 = @func_9687(%49) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(11, 12, 11), bool], int16, Tensor[(1452), int16], Tensor[(4, 4, 14), float32]) */;
  %51 = sigmoid(%46) /* ty=Tensor[(14, 15, 10), float32] */;
  %52 = %47.2;
  %53 = @func_6209() /* ty=Tensor[(4, 4, 14), uint64] */;
  %54 = @func_18704() /* ty=Tensor[(4, 4, 14), float32] */;
  %55 = %50.3;
  (%51, %52, %53, %54, %55, meta[relay.Constant][2] /* ty=int16 */)
}

def @func_640() -> (Tensor[(4, 4, 14), float32],) {
  %56 = @func_255() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %57 = %56.2;
  (%57,)
}

def @func_6361() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %58 = @func_1676() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %59 = @func_2775() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %60 = %58.1;
  %61 = %59.1;
  (%60, %61)
}

def @func_13491() -> Tensor[(4, 4, 14), float64] {
  %62 = @func_7446() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %62.0
}

def @func_10885() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %63 = @func_4788() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %64 = @func_6053() /* ty=Tensor[(4, 4, 14), float32] */;
  %65 = %63.0;
  (%64, %65)
}

def @func_11422() -> (Tensor[(4, 4, 14), float32],) {
  %66 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
  (%66,)
}

def @func_8861(%var_8835: Tensor[(4, 13, 14), float64]) -> (Tensor[(4, 13, 14), int16], Tensor[(4, 4, 14), float32], Tensor[(4, 13, 14), float32]) {
  %67 = cast(%var_8835, dtype="float64") /* ty=Tensor[(4, 13, 14), float64] */;
  %68 = asin(%67) /* ty=Tensor[(4, 13, 14), float64] */;
  %69 = cast(%var_8835, dtype="int16") /* ty=Tensor[(4, 13, 14), int16] */;
  %70 = shape_of(%68, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%68, dtype="int16") /* ty=Tensor[(4, 13, 14), int16] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %73 = cast(%var_8835, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %74 = logical_xor(%71, %72) /* ty=Tensor[(4, 13, 14), int16] */;
  %75 = @func_6393() /* ty=Tensor[(4, 4, 14), float32] */;
  %76 = atan(%73) /* ty=Tensor[(4, 13, 14), float32] */;
  (%74, %75, %76)
}

def @func_18414(%var_18372: int16, %var_18373: Tensor[(14, 15, 7), int16]) -> (Tensor[(14, 15, 7), int16], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %77 = cast(%var_18372, dtype="int16") /* ty=int16 */;
  %78 = cast(%var_18373, dtype="int16") /* ty=Tensor[(14, 15, 7), int16] */;
  %79 = @func_4416() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %80 = bitwise_and(%77, %78) /* ty=Tensor[(14, 15, 7), int16] */;
  %81 = @func_16341() /* ty=Tensor[(4, 4, 14), float32] */;
  %82 = %79.0;
  (%80, %81, %82)
}

def @func_9461() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %83 = @func_8294() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %84 = @func_5559() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %85 = @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %86 = %83.0;
  %87 = %84.0;
  %88 = %85.1;
  (%86, %87, %88)
}

def @func_19574(%var_19483: Tensor[(16, 182), float32]) -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(16, 182), float64], Tensor[(15, 13, 16), bool], Tensor[(1, 208), int8], Tensor[(16, 182), int8], Tensor[(16, 182), int16]) {
  %89 = @func_18031() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %90 = cast(%var_19483, dtype="float64") /* ty=Tensor[(16, 182), float64] */;
  %91 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 208), int8] */, dtype="int8") /* ty=Tensor[(1, 208), int8] */;
  %92 = reshape(%91, newshape=[1, 13, 16]) /* ty=Tensor[(1, 13, 16), int8] */;
  %93 = @func_15281(%92) /* ty=(Tensor[(15, 13, 16), bool],) */;
  %94 = @func_8092() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(12, 15, 10), int64], Tensor[(900, 2), int64], Tensor[(4, 4, 14), float32], Tensor[(1, 182), float32]) */;
  %95 = %94.4;
  %96 = cast(%95, dtype="float64") /* ty=Tensor[(1, 182), float64] */;
  %97 = cast(%var_19483, dtype="float64") /* ty=Tensor[(16, 182), float64] */;
  %98 = floor_divide(%96, %97) /* ty=Tensor[(16, 182), float64] */;
  %99 = cast(%98, dtype="float64") /* ty=Tensor[(16, 182), float64] */;
  %100 = atanh(%99) /* ty=Tensor[(16, 182), float64] */;
  %101 = cast(%100, dtype="float64") /* ty=Tensor[(16, 182), float64] */;
  %102 = rsqrt(%101) /* ty=Tensor[(16, 182), float64] */;
  %103 = cast(%100, dtype="int8") /* ty=Tensor[(16, 182), int8] */;
  %104 = shape_of(%102, dtype="int32") /* ty=Tensor[(2), int32] */;
  %105 = cast(%102, dtype="int8") /* ty=Tensor[(16, 182), int8] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %107 = cast(%100, dtype="int16") /* ty=Tensor[(16, 182), int16] */;
  %108 = shape_of(%102, dtype="int32") /* ty=Tensor[(2), int32] */;
  %109 = cast(%102, dtype="int16") /* ty=Tensor[(16, 182), int16] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %111 = @func_13406() /* ty=Tensor[(4, 4, 14), uint64] */;
  %112 = %89.0;
  %113 = asinh(%90) /* ty=Tensor[(16, 182), float64] */;
  %114 = %93.0;
  %115 = subtract(%105, %106) /* ty=Tensor[(16, 182), int8] */;
  %116 = left_shift(%109, %110) /* ty=Tensor[(16, 182), int16] */;
  (%111, %112, %113, %114, meta[relay.Constant][3] /* ty=Tensor[(1, 208), int8] */, %115, %116)
}

def @func_20754() -> (Tensor[(4, 4, 14), float32],) {
  %117 = @func_4430() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %118 = %117.0;
  (%118,)
}

def @func_16077(%var_16069: Tensor[(15), uint32]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(5, 13, 15), bool], Tensor[(15), uint32], Tensor[(975), uint32]) {
  %119 = @func_10481() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %120 = @func_15039() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %121 = @func_4863() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %122 = cast(%var_16069, dtype="uint32") /* ty=Tensor[(15), uint32] */;
  %123 = cast(meta[relay.Constant][4] /* ty=Tensor[(975), uint32] */, dtype="uint32") /* ty=Tensor[(975), uint32] */;
  %124 = reshape(%122, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint32] */;
  %125 = reshape(%123, newshape=[5, 13, 15]) /* ty=Tensor[(5, 13, 15), uint32] */;
  %126 = %119.0;
  %127 = %120.1;
  %128 = %121.0;
  %129 = @func_4510() /* ty=Tensor[(4, 4, 14), float32] */;
  %130 = @func_10598(%124, %125) /* ty=Tensor[(5, 13, 15), bool] */;
  (%126, %127, %128, %129, %130, %var_16069, meta[relay.Constant][4] /* ty=Tensor[(975), uint32] */)
}

def @func_17003() -> Tensor[(4, 4, 14), float32] {
  %131 = @func_2470() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %131.0
}

def @func_6741() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %132 = @func_1720() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %133 = %132.0;
  %134 = @func_4386() /* ty=Tensor[(4, 4, 14), float32] */;
  (%133, %134)
}

def @func_386() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %135 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %136 = @func_170() /* ty=Tensor[(4, 4, 14), float32] */;
  %137 = %135.0;
  (%136, %137)
}

def @func_13780() -> (Tensor[(4, 4, 14), float32],) {
  %138 = @func_4487() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %139 = %138.0;
  (%139,)
}

def @func_18314() -> (Tensor[(4, 4, 14), float32],) {
  %140 = @func_18273() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %141 = %140.1;
  (%141,)
}

def @func_22021(%var_21999: Tensor[(60), float64]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(60), float64], Tensor[(4, 4, 14), float32]) {
  %142 = @func_19100() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %143 = cast(%var_21999, dtype="float64") /* ty=Tensor[(60), float64] */;
  %144 = reshape(%143, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), float64] */;
  %145 = @func_20037(%144) /* ty=(Tensor[(2, 2, 15), float64], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %146 = %142.0;
  %147 = %145.6;
  %148 = @func_870() /* ty=Tensor[(4, 4, 14), float32] */;
  (%146, %147, %var_21999, %148)
}

def @func_19059() -> (Tensor[(4, 4, 14), float32],) {
  %149 = @func_7522() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %150 = %149.0;
  (%150,)
}

def @func_22232() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) {
  %151 = @func_14908() /* ty=(Tensor[(9, 7, 3), float64], Tensor[(4, 4, 14), float32]) */;
  %152 = @func_6368() /* ty=(Tensor[(4, 4, 14), uint64],) */;
  %153 = @func_18739() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %154 = %151.1;
  %155 = %152.0;
  %156 = %153.0;
  (%154, %155, %156)
}

def @func_8092() -> (Tensor[(4, 4, 14), float32], Tensor[(12, 15, 10), int64], Tensor[(900, 2), int64], Tensor[(4, 4, 14), float32], Tensor[(1, 182), float32]) {
  %157 = cast(meta[relay.Constant][5] /* ty=Tensor[(900, 2), int64] */, dtype="int64") /* ty=Tensor[(900, 2), int64] */;
  %158 = cast(meta[relay.Constant][5] /* ty=Tensor[(900, 2), int64] */, dtype="int64") /* ty=Tensor[(900, 2), int64] */;
  %159 = reshape(%157, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), int64] */;
  %160 = reshape(%158, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), int64] */;
  %161 = @func_3406(%159, %160) /* ty=(Tensor[(12, 15, 10), int64],) */;
  %162 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 182), float32] */, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %163 = reshape(%162, newshape=[14, 1, 13]) /* ty=Tensor[(14, 1, 13), float32] */;
  %164 = @func_5857(%163) /* ty=(Tensor[(14, ?, 13), uint32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(14, ?, 13), bool]) */;
  %165 = @func_3452() /* ty=Tensor[(4, 4, 14), float32] */;
  %166 = %161.0;
  %167 = %164.1;
  (%165, %166, meta[relay.Constant][5] /* ty=Tensor[(900, 2), int64] */, %167, meta[relay.Constant][6] /* ty=Tensor[(1, 182), float32] */)
}

def @func_11729() -> Tensor[(4, 4, 14), float32] {
  %168 = @func_7379() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %168.2
}

def @func_14532() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %169 = @func_13469() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %170 = @func_8406() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %171 = %169.1;
  %172 = @func_12629() /* ty=Tensor[(4, 4, 14), float32] */;
  %173 = %170.1;
  (%171, %172, %173)
}

def @func_9296() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %174 = @func_1676() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %175 = %174.1;
  %176 = @func_9050() /* ty=Tensor[(4, 4, 14), float32] */;
  (%175, %176)
}

def @func_3607() -> Tensor[(4, 4, 14), float32] {
  %177 = @func_1595() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %177.0
}

def @func_5119() -> (Tensor[(4, 4, 14), float32],) {
  %178 = @func_3656() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %179 = %178.3;
  (%179,)
}

def @func_11100() -> Tensor[(4, 4, 14), float32] {
  @func_9050() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_21455(%var_21446: Tensor[(16, 2, 5), uint64]) -> (Tensor[(16, 2, 5), bool],) {
  %180 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 1, 5), uint64] */, dtype="bool") /* ty=Tensor[(16, 1, 5), bool] */;
  %181 = cast(%var_21446, dtype="bool") /* ty=Tensor[(16, 2, 5), bool] */;
  %182 = greater_equal(%180, %181) /* ty=Tensor[(16, 2, 5), bool] */;
  (%182,)
}

def @func_12999() -> Tensor[(4, 4, 14), float32] {
  %183 = @func_4241() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %183.1
}

def @func_5652() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %184 = @func_4109() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %185 = @func_5119() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %186 = @func_1676() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %187 = %184.2;
  %188 = @func_3121() /* ty=Tensor[(4, 4, 14), float32] */;
  %189 = %185.0;
  %190 = %186.0;
  (%187, %188, %189, %190)
}

def @func_18943() -> (Tensor[(4, 4, 14), bool],) {
  %191 = @func_14281() /* ty=Tensor[(4, 4, 14), bool] */;
  (%191,)
}

def @func_10755() -> Tensor[(4, 4, 14), float32] {
  %192 = @func_2611() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %192.0
}

def @func_21863() -> Tensor[(4, 4, 14), float32] {
  %193 = @func_7115() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %193.3
}

def @func_1039(%var_1031: Tensor[(4, 4, 14), float64]) -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), uint16]) {
  %194 = @func_905() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %195 = @func_905() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %196 = %195.0;
  %197 = cast(%var_1031, dtype="uint16") /* ty=Tensor[(4, 4, 14), uint16] */;
  %198 = shape_of(%196, dtype="int32") /* ty=Tensor[(3), int32] */;
  %199 = cast(%196, dtype="uint16") /* ty=Tensor[(4, 4, 14), uint16] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %201 = %194.0;
  %202 = maximum(%199, %200) /* ty=Tensor[(4, 4, 14), uint16] */;
  (%201, %202)
}

def @func_22662() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %203 = @func_5559() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %204 = @func_12537() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %205 = %203.1;
  %206 = %204.0;
  %207 = @func_12237() /* ty=Tensor[(4, 4, 14), float32] */;
  (%205, %206, %207)
}

def @func_4599() -> (Tensor[(4, 4, 14), float32],) {
  %208 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
  (%208,)
}

def @func_4386() -> Tensor[(4, 4, 14), float32] {
  %209 = @func_4163() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %209.1
}

def @func_10663() -> Tensor[(4, 4, 14), float64] {
  @func_8505() /* ty=Tensor[(4, 4, 14), float64] */
}

def @func_2832() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %210 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %211 = @func_2470() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %212 = %210.2;
  %213 = %211.0;
  (%212, %213)
}

def @func_8625() -> Tensor[(4, 4, 14), float32] {
  %214 = @func_2478() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %214.0
}

def @func_2195() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %215 = @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %216 = @func_1162() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %217 = %215.0;
  %218 = %216.1;
  (%217, %218)
}

def @func_5055() -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %219 = @func_4735() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %220 = @func_446() /* ty=Tensor[(4, 4, 14), uint64] */;
  %221 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  %222 = %219.1;
  (%220, %221, %222)
}

def @func_7273() -> Tensor[(4, 4, 14), bool] {
  @func_6017() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_22294() -> (Tensor[(4, 4, 14), bool],) {
  %223 = @func_7273() /* ty=Tensor[(4, 4, 14), bool] */;
  (%223,)
}

def @func_7792() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %224 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
  %225 = %224.5;
  %226 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
  (%225, %226)
}

def @func_22097() -> (Tensor[(4, 4, 14), float32],) {
  %227 = @func_20278() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %228 = %227.0;
  (%228,)
}

def @func_3406(%var_3394: Tensor[(12, 15, 10), int64], %var_3395: Tensor[(12, 15, 10), int64]) -> (Tensor[(12, 15, 10), int64],) {
  %229 = cast(%var_3395, dtype="int64") /* ty=Tensor[(12, 15, 10), int64] */;
  %230 = shape_of(%var_3394, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%var_3394, dtype="int64") /* ty=Tensor[(12, 15, 10), int64] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %233 = add(%231, %232) /* ty=Tensor[(12, 15, 10), int64] */;
  (%233,)
}

def @func_16756(%var_16747: Tensor[(1, 14, 3), int16], %var_16748: Tensor[(8, 14, 3), int16]) -> (Tensor[(8, 14, 3), bool],) {
  %234 = cast(%var_16747, dtype="bool") /* ty=Tensor[(1, 14, 3), bool] */;
  %235 = cast(%var_16748, dtype="bool") /* ty=Tensor[(8, 14, 3), bool] */;
  %236 = equal(%234, %235) /* ty=Tensor[(8, 14, 3), bool] */;
  (%236,)
}

def @func_1162() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %237 = @func_870() /* ty=Tensor[(4, 4, 14), float32] */;
  %238 = cast(%237, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
  %239 = @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %240 = atanh(%238) /* ty=Tensor[(4, 4, 14), float64] */;
  %241 = cast(%240, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
  %242 = reshape(%241, newshape=[4, 4, 14]) /* ty=Tensor[(4, 4, 14), float64] */;
  %243 = @func_1039(%242) /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), uint16]) */;
  %244 = %239.0;
  %245 = @func_502() /* ty=Tensor[(4, 4, 14), float32] */;
  %246 = %243.0;
  (%240, %244, %245, %246)
}

def @func_446() -> Tensor[(4, 4, 14), uint64] {
  %247 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %248 = %247.0;
  %249 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
  %250 = cast(%249, dtype="uint64") /* ty=Tensor[(4, 4, 14), uint64] */;
  %251 = shape_of(%248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%248, dtype="uint64") /* ty=Tensor[(4, 4, 14), uint64] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%252, %253) /* ty=Tensor[(4, 4, 14), uint64] */
}

def @func_8287(%var_8270: Tensor[(182), float32]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(182), float32], Tensor[(4, 4, 14), float32]) {
  %254 = @func_5796() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %255 = @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %256 = @func_5278() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %257 = @func_2478() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %258 = cast(%var_8270, dtype="float32") /* ty=Tensor[(182), float32] */;
  %259 = reshape(%258, newshape=[14, 1, 13]) /* ty=Tensor[(14, 1, 13), float32] */;
  %260 = @func_5857(%259) /* ty=(Tensor[(14, ?, 13), uint32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(14, ?, 13), bool]) */;
  %261 = %254.3;
  %262 = @func_870() /* ty=Tensor[(4, 4, 14), float32] */;
  %263 = %255.0;
  %264 = %256.1;
  %265 = %257.0;
  %266 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
  %267 = %260.2;
  %268 = @func_3452() /* ty=Tensor[(4, 4, 14), float32] */;
  (%261, %262, %263, %264, %265, %266, %267, %var_8270, %268)
}

def @func_14433() -> Tensor[(4, 4, 14), float32] {
  %269 = @func_5278() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %269.0
}

def @func_9998() -> (Tensor[(4, 4, 14), float64],) {
  %270 = @func_5611() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float64]) */;
  %271 = %270.1;
  (%271,)
}

def @func_20300() -> Tensor[(4, 4, 14), float32] {
  @func_8920() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_15402() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %272 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %273 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %274 = %272.0;
  %275 = %273.0;
  (%274, %275)
}

def @func_13375(%var_13366: Tensor[(2, 9, 12), float64], %var_13367: Tensor[(2, 9, 12), float64]) -> (Tensor[(2, 9, 12), float64],) {
  %276 = cast(%var_13367, dtype="float64") /* ty=Tensor[(2, 9, 12), float64] */;
  %277 = shape_of(%var_13366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %278 = cast(%var_13366, dtype="float64") /* ty=Tensor[(2, 9, 12), float64] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %280 = floor_mod(%278, %279) /* ty=Tensor[(2, 9, 12), float64] */;
  (%280,)
}

def @func_18542() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  %281 = @func_12139() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %282 = @func_13941() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %283 = %281.0;
  %284 = %282.2;
  %285 = @func_11651() /* ty=Tensor[(4, 4, 14), float32] */;
  (%283, %284, %285)
}

def @func_4109() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %286 = @func_3068() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %287 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %288 = @func_1720() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %289 = %286.0;
  %290 = %287.0;
  %291 = %288.1;
  (%289, %290, %291)
}

def @func_8145() -> Tensor[(4, 4, 14), float32] {
  %292 = @func_7522() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %292.0
}

def @func_8687() -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %293 = @func_5055() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %294 = @func_5002() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %295 = %293.0;
  %296 = @func_5160() /* ty=Tensor[(4, 4, 14), float32] */;
  %297 = %294.1;
  (%295, %296, %297)
}

def @func_10481() -> (Tensor[(4, 4, 14), float32],) {
  %298 = @func_6605() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %299 = %298.1;
  (%299,)
}

def @func_15844() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %300 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
  %301 = @func_4386() /* ty=Tensor[(4, 4, 14), float32] */;
  %302 = %300.0;
  (%301, %302)
}

def @func_4184() -> Tensor[(4, 4, 14), float64] {
  %303 = @func_3474() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %303.0
}

def @func_11178() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(2, 384), bool]) {
  %304 = @func_1676() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %305 = @func_7689() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %306 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 384), bool] */, dtype="bool") /* ty=Tensor[(2, 384), bool] */;
  %307 = reshape(%306, newshape=[32, 24]) /* ty=Tensor[(32, 24), bool] */;
  %308 = @func_9598(%307) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(12, 4, 16), bool], Tensor[(32, 24), bool]) */;
  %309 = @func_4040() /* ty=Tensor[(4, 4, 14), float32] */;
  %310 = %304.0;
  %311 = %305.0;
  %312 = %308.0;
  (%309, %310, %311, %312, meta[relay.Constant][8] /* ty=Tensor[(2, 384), bool] */)
}

def @func_4241() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %313 = @func_2832() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %314 = @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %315 = %313.1;
  %316 = %314.0;
  (%315, %316)
}

def @func_1653() -> Tensor[(4, 4, 14), float32] {
  %317 = @func_1245() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %317.0
}

def @func_5559() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %318 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %319 = @func_3733() /* ty=(Tensor[(8, 12, 13), int32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %320 = %318.0;
  %321 = %319.8;
  (%320, %321)
}

def @func_1245() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %322 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
  %323 = %322.3;
  %324 = cast(%323, dtype="float32") /* ty=Tensor[(4, 4, 14), float32] */;
  %325 = cosh(%324) /* ty=Tensor[(4, 4, 14), float32] */;
  %326 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  (%325, %326)
}

def @func_22864(%var_22850: Tensor[(11, 7, 10), float32]) -> Tensor[(11, 7, 10), float32] {
  %327 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 7, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 7, 10), float32] */;
  %328 = shape_of(%var_22850, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%var_22850, dtype="float32") /* ty=Tensor[(11, 7, 10), float32] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%329, %330) /* ty=Tensor[(11, 7, 10), float32] */
}

def @func_20927() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %331 = @func_11011() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool]) */;
  %332 = @func_2478() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %333 = @func_4241() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %334 = %331.0;
  %335 = %332.0;
  %336 = %333.0;
  (%334, %335, %336)
}

def @func_4678() -> (Tensor[(4, 4, 14), bool],) {
  %337 = @func_3390() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %338 = %337.2;
  (%338,)
}

def @func_21387() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  %339 = @func_19059() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %340 = @func_6605() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %341 = @func_15250() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %342 = @func_2752() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %343 = %339.0;
  %344 = %340.2;
  %345 = %341.0;
  %346 = %342.0;
  (%343, %344, %345, %346)
}

def @func_4510() -> Tensor[(4, 4, 14), float32] {
  %347 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
  %347.1
}

def @func_22617() -> Tensor[(4, 4, 14), float32] {
  %348 = @func_7430() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %348.0
}

def @func_255() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %349 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %350 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %351 = %350.0;
  %352 = cast(%351, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
  %353 = log2(%352) /* ty=Tensor[(4, 4, 14), float64] */;
  %354 = cast(%351, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
  %355 = tan(%354) /* ty=Tensor[(4, 4, 14), float64] */;
  %356 = cast(%355, dtype="bool") /* ty=Tensor[(4, 4, 14), bool] */;
  %357 = shape_of(%353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %358 = cast(%353, dtype="bool") /* ty=Tensor[(4, 4, 14), bool] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %360 = cast(%355, dtype="float32") /* ty=Tensor[(4, 4, 14), float32] */;
  %361 = %349.0;
  %362 = less(%358, %359) /* ty=Tensor[(4, 4, 14), bool] */;
  %363 = acos(%360) /* ty=Tensor[(4, 4, 14), float32] */;
  (%361, %362, %363)
}

def @func_12279() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %364 = @func_7161() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %365 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  %366 = %364.0;
  (%365, %366)
}

def @func_9786() -> (Tensor[(4, 4, 14), float32],) {
  %367 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %368 = %367.0;
  (%368,)
}

def @func_3121() -> Tensor[(4, 4, 14), float32] {
  %369 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %369.0
}

def @func_13406() -> Tensor[(4, 4, 14), uint64] {
  @func_6209() /* ty=Tensor[(4, 4, 14), uint64] */
}

def @func_5204() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %370 = @func_4599() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %371 = @func_4487() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %372 = @func_2416() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %373 = %370.0;
  %374 = %371.0;
  %375 = %372.0;
  (%373, %374, %375)
}

def @func_12629() -> Tensor[(4, 4, 14), float32] {
  %376 = @func_6451() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %376.0
}

def @func_14119(%var_14058: Tensor[(16, 10, 3), float64], %var_14091: Tensor[(20), float64]) -> (Tensor[(16, 10, 3), float64], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float64], Tensor[(20), float64], Tensor[(4, 4, 14), float32], Tensor[(16, 10, 3), float32]) {
  %377 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 1, 3), float64] */, dtype="float64") /* ty=Tensor[(16, 1, 3), float64] */;
  %378 = cast(%var_14058, dtype="float64") /* ty=Tensor[(16, 10, 3), float64] */;
  %379 = @func_1445() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %380 = cast(%var_14091, dtype="float64") /* ty=Tensor[(20), float64] */;
  %381 = reshape(%380, newshape=[1, 4, 5]) /* ty=Tensor[(1, 4, 5), float64] */;
  %382 = @func_13308(%381) /* ty=(Tensor[(1, 4, 5), float64], Tensor[(4, 4, 14), float64]) */;
  %383 = cast(%var_14058, dtype="float32") /* ty=Tensor[(16, 10, 3), float32] */;
  %384 = mod(%377, %378) /* ty=Tensor[(16, 10, 3), float64] */;
  %385 = %379.0;
  %386 = %382.1;
  %387 = @func_8569() /* ty=Tensor[(4, 4, 14), float32] */;
  %388 = sin(%383) /* ty=Tensor[(16, 10, 3), float32] */;
  (%384, %385, %386, %var_14091, %387, %388)
}

def @func_17082() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %389 = @func_9104() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %390 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %391 = %389.0;
  %392 = %390.0;
  (%391, %392)
}

def @func_18223() -> (Tensor[(4, 4, 14), float32],) {
  %393 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %394 = %393.0;
  (%394,)
}

def @func_23402(%var_23396: Tensor[(112), uint32]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(14, 3, 8), bool], Tensor[(112), uint32]) {
  %395 = @func_12279() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %396 = @func_1720() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %397 = cast(%var_23396, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %398 = reshape(%397, newshape=[14, 1, 8]) /* ty=Tensor[(14, 1, 8), uint32] */;
  %399 = @func_16024(%398) /* ty=(Tensor[(14, 3, 8), bool], Tensor[(14, 1, 8), float64]) */;
  %400 = @func_12999() /* ty=Tensor[(4, 4, 14), float32] */;
  %401 = %395.0;
  %402 = %396.1;
  %403 = %399.0;
  (%400, %401, %402, %403, %var_23396)
}

def @func_21034() -> Tensor[(4, 4, 14), float32] {
  @func_12791() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_21236() -> (Tensor[(4, 4, 14), float32],) {
  %404 = @func_12237() /* ty=Tensor[(4, 4, 14), float32] */;
  (%404,)
}

def @func_1879() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %405 = @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %406 = @func_1162() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %407 = %405.0;
  %408 = %406.3;
  (%407, %408)
}

def @func_21527(%var_21493: Tensor[(5, 5, 8), float64]) -> (Tensor[(5, 5, 8), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %409 = cast(%var_21493, dtype="float64") /* ty=Tensor[(5, 5, 8), float64] */;
  %410 = @func_6890() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %411 = @func_6960() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %412 = sigmoid(%409) /* ty=Tensor[(5, 5, 8), float64] */;
  %413 = %410.0;
  %414 = %411.1;
  %415 = @func_16556() /* ty=Tensor[(4, 4, 14), float32] */;
  (%412, %413, %414, %415)
}

def @func_8505() -> Tensor[(4, 4, 14), float64] {
  %416 = @func_7446() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %416.0
}

def @func_22771() -> (Tensor[(4, 4, 14), float32],) {
  %417 = @func_3751() /* ty=Tensor[(4, 4, 14), float32] */;
  (%417,)
}

def @func_8569() -> Tensor[(4, 4, 14), float32] {
  %418 = @func_3068() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %418.1
}

def @func_2416() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  %419 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %420 = %419.1;
  %421 = cast(%420, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
  %422 = @func_2272() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %423 = log(%421) /* ty=Tensor[(4, 4, 14), float64] */;
  %424 = %422.0;
  (%423, %424)
}

def @func_19313() -> (Tensor[(4, 4, 14), float32],) {
  %425 = @func_6361() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %426 = %425.1;
  (%426,)
}

def @func_3751() -> Tensor[(4, 4, 14), float32] {
  %427 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %427.0
}

def @func_9859() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %428 = @func_3733() /* ty=(Tensor[(8, 12, 13), int32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %429 = @func_7446() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %430 = @func_8145() /* ty=Tensor[(4, 4, 14), float32] */;
  %431 = %428.6;
  %432 = %429.0;
  (%430, %431, %432)
}

def @func_11257() -> (Tensor[(4, 4, 14), float32],) {
  %433 = @func_7689() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %434 = %433.0;
  (%434,)
}

def @func_19886() -> Tensor[(5, 7, 1), bool] {
  %435 = cast(8 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %436 = cast(meta[relay.Constant][11] /* ty=Tensor[(5, 7, 1), int32] */, dtype="bool") /* ty=Tensor[(5, 7, 1), bool] */;
  less_equal(%435, %436) /* ty=Tensor[(5, 7, 1), bool] */
}

def @func_6890() -> (Tensor[(4, 4, 14), float32],) {
  %437 = @func_5519() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %438 = %437.0;
  (%438,)
}

def @func_6994() -> (Tensor[(4, 4, 14), float32],) {
  %439 = @func_2539() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %440 = %439.5;
  (%440,)
}

def @func_7379() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %441 = @func_5337() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %442 = @func_2539() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %443 = @func_3569() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %444 = %441.0;
  %445 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  %446 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
  %447 = %442.2;
  %448 = %443.0;
  (%444, %445, %446, %447, %448)
}

def @func_10370() -> (Tensor[(4, 4, 14), float32],) {
  %449 = @func_6053() /* ty=Tensor[(4, 4, 14), float32] */;
  (%449,)
}

def @func_10815() -> Tensor[(4, 4, 14), float32] {
  %450 = @func_2470() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %450.1
}

def @func_3026() -> Tensor[(4, 4, 14), float32] {
  @func_65() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_12520() -> Tensor[(4, 4, 14), bool] {
  %451 = @func_3390() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %451.2
}

def @func_8019(%var_7998: int16, %var_7999: Tensor[(18, 1), int16]) -> (Tensor[(4, 4, 14), float32], Tensor[(1, 2, 9), int16], int16, Tensor[(18, 1), int16], Tensor[(4, 4, 14), float32]) {
  %452 = @func_6741() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %453 = cast(%var_7998, dtype="int16") /* ty=int16 */;
  %454 = cast(%var_7999, dtype="int16") /* ty=Tensor[(18, 1), int16] */;
  %455 = reshape(%453, newshape=[]) /* ty=int16 */;
  %456 = reshape(%454, newshape=[1, 2, 9]) /* ty=Tensor[(1, 2, 9), int16] */;
  %457 = @func_1551(%455, %456) /* ty=(Tensor[(1, 2, 9), int16], Tensor[(4, 4, 14), float32]) */;
  %458 = cast(%var_7998, dtype="int16") /* ty=int16 */;
  %459 = reshape(%458, newshape=[]) /* ty=int16 */;
  %460 = @func_7207(%459) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], int16, Tensor[(18), int16]) */;
  %461 = %452.0;
  %462 = %457.0;
  %463 = %460.1;
  (%461, %462, %var_7998, %var_7999, %463)
}

def @func_502() -> Tensor[(4, 4, 14), float32] {
  %464 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %464.0
}

def @func_725() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) {
  %465 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %466 = @func_255() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %467 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %468 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %469 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %470 = @func_446() /* ty=Tensor[(4, 4, 14), uint64] */;
  %471 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 4, 14), uint64] */, dtype="uint64") /* ty=Tensor[(4, 4, 14), uint64] */;
  %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%470, dtype="uint64") /* ty=Tensor[(4, 4, 14), uint64] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %475 = %465.0;
  %476 = %466.2;
  %477 = %467.1;
  %478 = %468.0;
  %479 = %469.0;
  %480 = @func_170() /* ty=Tensor[(4, 4, 14), float32] */;
  %481 = left_shift(%473, %474) /* ty=Tensor[(4, 4, 14), uint64] */;
  (%475, %476, %477, %478, %479, %480, %481)
}

def @func_3474() -> (Tensor[(4, 4, 14), float64],) {
  %482 = @func_2247() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %483 = %482.0;
  (%483,)
}

def @func_22597() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %484 = @func_1879() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %485 = @func_2470() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %486 = %484.0;
  %487 = %485.0;
  (%486, %487)
}

def @func_3149() -> (Tensor[(4, 4, 14), float32],) {
  %488 = @func_1848() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %489 = %488.1;
  (%489,)
}

def @func_20972() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %490 = @func_5931() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %491 = @func_3068() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %492 = @func_17430() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %493 = @func_14281() /* ty=Tensor[(4, 4, 14), bool] */;
  %494 = @func_10262() /* ty=Tensor[(4, 4, 14), float32] */;
  %495 = %490.0;
  %496 = %491.1;
  %497 = %492.6;
  (%493, %494, %495, %496, %497)
}

def @func_22154() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %498 = @func_2832() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %499 = @func_3121() /* ty=Tensor[(4, 4, 14), float32] */;
  %500 = %498.0;
  (%499, %500)
}

def @func_11233() -> (Tensor[(4, 4, 14), float64],) {
  %501 = @func_7446() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %502 = %501.0;
  (%502,)
}

def @func_4788() -> (Tensor[(4, 4, 14), float32],) {
  %503 = @func_4599() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %504 = %503.0;
  (%504,)
}

def @func_22160() -> Tensor[(4, 4, 14), bool] {
  %505 = @func_18943() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %505.0
}

def @func_12456() -> (Tensor[(4, 4, 14), float32],) {
  %506 = @func_4241() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %507 = %506.1;
  (%507,)
}

def @func_1305() -> (Tensor[(4, 4, 14), float32],) {
  %508 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  (%508,)
}

def @func_3656() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %509 = @func_1445() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %510 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %511 = @func_1720() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %512 = @func_3452() /* ty=Tensor[(4, 4, 14), float32] */;
  %513 = %509.1;
  %514 = %510.2;
  %515 = %511.2;
  %516 = @func_3026() /* ty=Tensor[(4, 4, 14), float32] */;
  (%512, %513, %514, %515, %516)
}

def @func_3733() -> (Tensor[(8, 12, 13), int32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %517 = cast(meta[relay.Constant][14] /* ty=Tensor[(8, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(8, 12, 13), int32] */;
  %518 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(8, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(8, 12, 13), int32] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %521 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %522 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %523 = @func_1245() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %524 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %525 = @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %526 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %527 = @func_2752() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %528 = right_shift(%519, %520) /* ty=Tensor[(8, 12, 13), int32] */;
  %529 = %521.0;
  %530 = %522.0;
  %531 = %523.1;
  %532 = @func_3607() /* ty=Tensor[(4, 4, 14), float32] */;
  %533 = %524.1;
  %534 = %525.0;
  %535 = %526.0;
  %536 = %527.0;
  (%528, %529, %530, %531, %532, %533, %534, %535, %536)
}

def @func_5611() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float64]) {
  %537 = @func_835() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %538 = @func_905() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %539 = %537.0;
  %540 = %538.0;
  (%539, %540)
}

def @func_16243() -> (Tensor[(4, 4, 14), float32],) {
  %541 = @func_8145() /* ty=Tensor[(4, 4, 14), float32] */;
  (%541,)
}

def @func_19435() -> (Tensor[(4, 4, 14), float32],) {
  %542 = @func_2539() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %543 = %542.0;
  (%543,)
}

def @func_2890(%var_2880: Tensor[(10, 10, 8), float64]) -> Tensor[(10, 10, 8), float64] {
  %544 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 10, 8), float64] */, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
  %545 = shape_of(%var_2880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(%var_2880, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%546, %547) /* ty=Tensor[(10, 10, 8), float64] */
}

def @func_11388() -> (Tensor[(4, 4, 14), float64],) {
  %548 = @func_7115() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %549 = %548.1;
  (%549,)
}

def @func_13137() -> (Tensor[(4, 4, 14), float32],) {
  %550 = @func_4573() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %551 = %550.1;
  (%551,)
}

def @func_4430() -> (Tensor[(4, 4, 14), float32],) {
  %552 = @func_2478() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %553 = %552.0;
  (%553,)
}

def @func_14713(%var_14700: Tensor[(1, 6, 7), int32], %var_14701: Tensor[(3, 6, 7), int32]) -> Tensor[(3, 6, 7), bool] {
  %554 = cast(%var_14700, dtype="bool") /* ty=Tensor[(1, 6, 7), bool] */;
  %555 = cast(%var_14701, dtype="bool") /* ty=Tensor[(3, 6, 7), bool] */;
  %556 = equal(%554, %555) /* ty=Tensor[(3, 6, 7), bool] */;
  %557 = cast(%556, dtype="bool") /* ty=Tensor[(3, 6, 7), bool] */;
  %558 = cast(%var_14700, dtype="bool") /* ty=Tensor[(1, 6, 7), bool] */;
  logical_and(%557, %558) /* ty=Tensor[(3, 6, 7), bool] */
}

def @func_21927() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %559 = @func_3656() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %560 = %559.1;
  %561 = @func_14302() /* ty=Tensor[(4, 4, 14), bool] */;
  %562 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
  (%560, %561, %562)
}

def @func_16944() -> Tensor[(1, 12, 5), float64] {
  %563 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 12, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 12, 5), float64] */;
  cosh(%563) /* ty=Tensor[(1, 12, 5), float64] */
}

def @func_7161() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %564 = @func_4241() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %565 = @func_6890() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %566 = %564.1;
  %567 = %565.0;
  (%566, %567)
}

def @func_4937() -> (Tensor[(4, 4, 14), float32],) {
  %568 = @func_1848() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %569 = %568.1;
  (%569,)
}

def @func_3424() -> Tensor[(4, 4, 14), float32] {
  %570 = @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %570.0
}

def @func_6507() -> (Tensor[(4, 4, 14), float32],) {
  %571 = @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %572 = %571.0;
  (%572,)
}

def @func_15151() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %573 = @func_3569() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %574 = @func_5652() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %575 = %573.0;
  %576 = %574.3;
  (%575, %576)
}

def @func_5992(%var_5970: Tensor[(1, 5, 2), float64]) -> (Tensor[(1, 5, 2), float64], Tensor[(4, 4, 14), float32]) {
  %577 = cast(%var_5970, dtype="float64") /* ty=Tensor[(1, 5, 2), float64] */;
  %578 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %579 = log2(%577) /* ty=Tensor[(1, 5, 2), float64] */;
  %580 = %578.0;
  (%579, %580)
}

def @func_11209(%var_11181: Tensor[(11, 6, 2), uint32], %var_11193: Tensor[(11, 6, 2), uint32]) -> (Tensor[(11, 6, 2), bool], Tensor[(11, 6, 2), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %581 = cast(%var_11181, dtype="bool") /* ty=Tensor[(11, 6, 2), bool] */;
  %582 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(11, 6, 2), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 6, 2), uint32] */, dtype="bool") /* ty=Tensor[(11, 6, 2), bool] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %585 = cast(%var_11193, dtype="uint64") /* ty=Tensor[(11, 6, 2), uint64] */;
  %586 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(11, 6, 2), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 6, 2), uint32] */, dtype="uint64") /* ty=Tensor[(11, 6, 2), uint64] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %589 = @func_10885() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %590 = @func_7522() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %591 = @func_7022() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %592 = equal(%583, %584) /* ty=Tensor[(11, 6, 2), bool] */;
  %593 = bitwise_or(%587, %588) /* ty=Tensor[(11, 6, 2), uint64] */;
  %594 = %589.1;
  %595 = %590.0;
  %596 = %591.0;
  (%592, %593, %594, %595, %596)
}

def @func_10496() -> Tensor[(4, 4, 14), float32] {
  @func_4386() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_9722(%var_9697: Tensor[(9, 11, 5), uint64], %var_9698: Tensor[(9, 11, 5), uint64], %var_9716: Tensor[(10), float64]) -> (Tensor[(9, 11, 5), bool], Tensor[(4, 4, 14), float32], Tensor[(10), float64], Tensor[(11, 12, 11), bool], int16) {
  %597 = cast(%var_9698, dtype="bool") /* ty=Tensor[(9, 11, 5), bool] */;
  %598 = shape_of(%var_9697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%var_9697, dtype="bool") /* ty=Tensor[(9, 11, 5), bool] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %601 = cast(%var_9716, dtype="float64") /* ty=Tensor[(10), float64] */;
  %602 = reshape(%601, newshape=[1, 5, 2]) /* ty=Tensor[(1, 5, 2), float64] */;
  %603 = @func_5992(%602) /* ty=(Tensor[(1, 5, 2), float64], Tensor[(4, 4, 14), float32]) */;
  %604 = cast(meta[relay.Constant][18] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %605 = reshape(%604, newshape=[]) /* ty=int16 */;
  %606 = @func_9687(%605) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(11, 12, 11), bool], int16, Tensor[(1452), int16], Tensor[(4, 4, 14), float32]) */;
  %607 = not_equal(%599, %600) /* ty=Tensor[(9, 11, 5), bool] */;
  %608 = %603.1;
  %609 = %606.1;
  (%607, %608, %var_9716, %609, meta[relay.Constant][18] /* ty=int16 */)
}

def @func_21951() -> Tensor[(4, 4, 14), float32] {
  %610 = @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %610.0
}

def @func_9165(%var_9158: int16, %var_9159: Tensor[(1452), int16]) -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(11, 12, 11), bool], int16, Tensor[(1452), int16], Tensor[(4, 4, 14), uint16]) {
  %611 = @func_4573() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %612 = cast(%var_9158, dtype="int16") /* ty=int16 */;
  %613 = cast(%var_9159, dtype="int16") /* ty=Tensor[(1452), int16] */;
  %614 = reshape(%612, newshape=[]) /* ty=int16 */;
  %615 = reshape(%613, newshape=[11, 12, 11]) /* ty=Tensor[(11, 12, 11), int16] */;
  %616 = @func_7273() /* ty=Tensor[(4, 4, 14), bool] */;
  %617 = cast(%616, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
  %618 = reshape(%617, newshape=[4, 4, 14]) /* ty=Tensor[(4, 4, 14), float64] */;
  %619 = @func_1039(%618) /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), uint16]) */;
  %620 = %611.0;
  %621 = @func_3998(%614, %615) /* ty=Tensor[(11, 12, 11), bool] */;
  %622 = %619.1;
  (%616, %620, %621, %var_9158, %var_9159, %622)
}

def @func_1848() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %623 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %624 = %623.0;
  %625 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
  (%624, %625)
}

def @func_11721() -> (Tensor[(4, 4, 14), bool],) {
  %626 = @func_7273() /* ty=Tensor[(4, 4, 14), bool] */;
  (%626,)
}

def @func_11011() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool]) {
  %627 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %628 = @func_1676() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %629 = %627.0;
  %630 = %628.1;
  (%629, %630)
}

def @func_13577() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(126), float32], Tensor[(126), float32], Tensor[(4, 4, 14), float64], Tensor[(9, 7, 6), int8], Tensor[(378), int8], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) {
  %631 = @func_5002() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %632 = cast(meta[relay.Constant][19] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %633 = reshape(%632, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %634 = @func_3824(%633) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(126), float32]) */;
  %635 = cast(meta[relay.Constant][20] /* ty=Tensor[(378), int8] */, dtype="int8") /* ty=Tensor[(378), int8] */;
  %636 = cast(meta[relay.Constant][20] /* ty=Tensor[(378), int8] */, dtype="int8") /* ty=Tensor[(378), int8] */;
  %637 = reshape(%635, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), int8] */;
  %638 = reshape(%636, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), int8] */;
  %639 = @func_6656() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) */;
  %640 = @func_12456() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %641 = @func_870() /* ty=Tensor[(4, 4, 14), float32] */;
  %642 = %631.0;
  %643 = @func_8920() /* ty=Tensor[(4, 4, 14), float32] */;
  %644 = %634.3;
  %645 = @func_9554() /* ty=Tensor[(4, 4, 14), float64] */;
  %646 = @func_8751(%637, %638) /* ty=Tensor[(9, 7, 6), int8] */;
  %647 = %639.0;
  %648 = %640.0;
  (%641, %642, %643, %644, meta[relay.Constant][19] /* ty=Tensor[(126), float32] */, %645, %646, meta[relay.Constant][20] /* ty=Tensor[(378), int8] */, %647, %648)
}

def @func_18358() -> Tensor[(4, 4, 14), float32] {
  %649 = @func_10800() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %649.0
}

def @func_15763() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), bool]) {
  %650 = @func_11011() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool]) */;
  %651 = @func_1879() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %652 = @func_14485() /* ty=Tensor[(4, 4, 14), float32] */;
  %653 = %650.0;
  %654 = %651.1;
  %655 = @func_7273() /* ty=Tensor[(4, 4, 14), bool] */;
  (%652, %653, %654, %655)
}

def @func_6656() -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) {
  %656 = @func_6209() /* ty=Tensor[(4, 4, 14), uint64] */;
  %657 = @func_5160() /* ty=Tensor[(4, 4, 14), float32] */;
  (%656, %657)
}

def @func_7718(%var_7706: Tensor[(12, 4, 16), bool]) -> Tensor[(12, 4, 16), bool] {
  %658 = cast(%var_7706, dtype="bool") /* ty=Tensor[(12, 4, 16), bool] */;
  %659 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(12, 4, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 4, 16), bool] */, dtype="bool") /* ty=Tensor[(12, 4, 16), bool] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%660, %661) /* ty=Tensor[(12, 4, 16), bool] */
}

def @func_3824(%var_3809: Tensor[(126), float32]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(126), float32]) {
  %662 = @func_1720() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %663 = @func_1445() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %664 = cast(%var_3809, dtype="float32") /* ty=Tensor[(126), float32] */;
  %665 = reshape(%664, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %666 = @func_2873(%665) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(3, 7, 6), float32]) */;
  %667 = %662.2;
  %668 = %663.1;
  %669 = %666.0;
  (%667, %668, %669, %var_3809)
}

def @func_10476() -> (Tensor[(4, 4, 14), bool],) {
  %670 = @func_7273() /* ty=Tensor[(4, 4, 14), bool] */;
  (%670,)
}

def @func_12076() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %671 = @func_4163() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %672 = @func_5337() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %673 = %671.0;
  %674 = %672.0;
  (%673, %674)
}

def @func_12237() -> Tensor[(4, 4, 14), float32] {
  %675 = @func_9786() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %675.0
}

def @func_16556() -> Tensor[(4, 4, 14), float32] {
  %676 = @func_8428() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %676.0
}

def @func_18098() -> Tensor[(4, 4, 14), float32] {
  %677 = @func_2272() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %677.0
}

def @func_15346(%var_15337: Tensor[(3, 14, 7), uint64]) -> Tensor[(3, 14, 7), uint64] {
  %678 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 14, 7), uint64] */, dtype="uint64") /* ty=Tensor[(3, 14, 7), uint64] */;
  %679 = shape_of(%var_15337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%var_15337, dtype="uint64") /* ty=Tensor[(3, 14, 7), uint64] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%680, %681) /* ty=Tensor[(3, 14, 7), uint64] */
}

def @func_14610() -> Tensor[(4, 4, 14), uint64] {
  @func_6209() /* ty=Tensor[(4, 4, 14), uint64] */
}

def @func_8294() -> (Tensor[(4, 4, 14), float32],) {
  %682 = @func_1245() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %683 = %682.1;
  (%683,)
}

def @func_4416() -> (Tensor[(4, 4, 14), float32],) {
  %684 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %685 = %684.0;
  (%685,)
}

def @func_10598(%var_10574: Tensor[(1, 1, 15), uint32], %var_10575: Tensor[(5, 13, 15), uint32]) -> Tensor[(5, 13, 15), bool] {
  %686 = cast(%var_10574, dtype="bool") /* ty=Tensor[(1, 1, 15), bool] */;
  %687 = cast(%var_10575, dtype="bool") /* ty=Tensor[(5, 13, 15), bool] */;
  less(%686, %687) /* ty=Tensor[(5, 13, 15), bool] */
}

def @func_10515() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %688 = @func_5931() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %689 = @func_7824() /* ty=Tensor[(4, 4, 14), float32] */;
  %690 = %688.1;
  (%689, %690)
}

def @func_11761() -> (Tensor[(4, 4, 14), bool],) {
  %691 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %692 = %691.0;
  (%692,)
}

def @func_13941() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %693 = @func_12300() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %694 = @func_12663() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %695 = %693.0;
  %696 = %694.2;
  %697 = @func_10663() /* ty=Tensor[(4, 4, 14), float64] */;
  (%695, %696, %697)
}

def @func_13661() -> Tensor[(4, 4, 14), float32] {
  %698 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %698.0
}

def @func_14570() -> (Tensor[(4, 4, 14), uint64],) {
  %699 = @func_446() /* ty=Tensor[(4, 4, 14), uint64] */;
  (%699,)
}

def @func_17789() -> (Tensor[(4, 4, 14), bool],) {
  %700 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %701 = %700.0;
  (%701,)
}

def @func_9104() -> (Tensor[(4, 4, 14), float32],) {
  %702 = @func_8920() /* ty=Tensor[(4, 4, 14), float32] */;
  (%702,)
}

def @func_14209() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %703 = @func_5559() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %704 = @func_12608() /* ty=Tensor[(4, 4, 14), float32] */;
  %705 = %703.0;
  %706 = @func_3424() /* ty=Tensor[(4, 4, 14), float32] */;
  (%704, %705, %706)
}

def @func_20412() -> Tensor[(4, 4, 14), float32] {
  @func_3751() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_2611() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %707 = @func_2209() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %708 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
  %709 = cast(%708, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
  %710 = reshape(%709, newshape=[4, 4, 14]) /* ty=Tensor[(4, 4, 14), float64] */;
  %711 = @func_1039(%710) /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), uint16]) */;
  %712 = %707.0;
  %713 = @func_65() /* ty=Tensor[(4, 4, 14), float32] */;
  %714 = %711.0;
  (%712, %713, %708, %714)
}

def @func_22739() -> (Tensor[(4, 4, 14), float32],) {
  %715 = @func_2272() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %716 = %715.0;
  (%716,)
}

def @func_3280() -> (Tensor[(4, 4, 14), float32],) {
  %717 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
  %718 = %717.0;
  (%718,)
}

def @func_14753() -> Tensor[(4, 4, 14), float32] {
  @func_12608() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_5071() -> (Tensor[(4, 4, 14), float64],) {
  %719 = @func_835() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %720 = %719.0;
  (%720,)
}

def @func_16708() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %721 = @func_255() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %722 = @func_16556() /* ty=Tensor[(4, 4, 14), float32] */;
  %723 = %721.0;
  (%722, %723)
}

def @func_16024(%var_16014: Tensor[(14, 1, 8), uint32]) -> (Tensor[(14, 3, 8), bool], Tensor[(14, 1, 8), float64]) {
  %724 = cast(%var_16014, dtype="bool") /* ty=Tensor[(14, 1, 8), bool] */;
  %725 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 3, 8), uint32] */, dtype="bool") /* ty=Tensor[(14, 3, 8), bool] */;
  %726 = cast(%var_16014, dtype="float64") /* ty=Tensor[(14, 1, 8), float64] */;
  %727 = less_equal(%724, %725) /* ty=Tensor[(14, 3, 8), bool] */;
  %728 = atan(%726) /* ty=Tensor[(14, 1, 8), float64] */;
  (%727, %728)
}

def @func_17520() -> (Tensor[(4, 4, 14), bool],) {
  %729 = @func_12139() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %730 = %729.1;
  (%730,)
}

def @func_12300() -> (Tensor[(4, 4, 14), float32],) {
  %731 = @func_9302() /* ty=Tensor[(4, 4, 14), float32] */;
  (%731,)
}

def @func_21484() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %732 = @func_5931() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %733 = @func_6741() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %734 = %732.1;
  %735 = %733.1;
  (%734, %735)
}

def @func_6605() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %736 = @func_4599() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %737 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %738 = @func_6257() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %739 = %736.0;
  %740 = %737.2;
  %741 = %738.0;
  (%739, %740, %741)
}

def @func_19656() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %742 = @func_1848() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %743 = @func_11721() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %744 = @func_15844() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %745 = %742.1;
  %746 = @func_9302() /* ty=Tensor[(4, 4, 14), float32] */;
  %747 = %743.0;
  %748 = %744.0;
  (%745, %746, %747, %748)
}

def @func_12593() -> Tensor[(4, 4, 14), float32] {
  %749 = @func_7022() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %749.0
}

def @func_151() -> (Tensor[(4, 4, 14), float32],) {
  %750 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
  (%750,)
}

def @func_5278() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %751 = @func_3452() /* ty=Tensor[(4, 4, 14), float32] */;
  %752 = @func_3751() /* ty=Tensor[(4, 4, 14), float32] */;
  (%751, %752)
}

def @func_15039() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %753 = @func_14343() /* ty=Tensor[(4, 4, 14), float32] */;
  %754 = @func_10547() /* ty=Tensor[(4, 4, 14), float32] */;
  (%753, %754)
}

def @func_18256() -> (Tensor[(4, 4, 14), float32], Tensor[(10, 9, 2), bool], Tensor[(1, 180), uint32]) {
  %755 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 180), uint32] */, dtype="uint32") /* ty=Tensor[(1, 180), uint32] */;
  %756 = reshape(%755, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), uint32] */;
  %757 = @func_6296(%756) /* ty=(Tensor[(10, 9, 2), bool],) */;
  %758 = @func_14433() /* ty=Tensor[(4, 4, 14), float32] */;
  %759 = %757.0;
  (%758, %759, meta[relay.Constant][24] /* ty=Tensor[(1, 180), uint32] */)
}

def @func_8370() -> Tensor[(4, 4, 14), float32] {
  %760 = @func_1162() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %760.1
}

def @func_22251() -> Tensor[(4, 4, 14), float32] {
  %761 = @func_21608() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %761.0
}

def @func_6257() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  %762 = @func_1162() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %763 = %762.3;
  %764 = @func_3121() /* ty=Tensor[(4, 4, 14), float32] */;
  (%763, %764)
}

def @func_16100() -> Tensor[(4, 4, 14), bool] {
  %765 = @func_8406() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %765.0
}

def @func_1551(%var_1538: int16, %var_1539: Tensor[(1, 2, 9), int16]) -> (Tensor[(1, 2, 9), int16], Tensor[(4, 4, 14), float32]) {
  %766 = cast(%var_1538, dtype="int16") /* ty=int16 */;
  %767 = cast(%var_1539, dtype="int16") /* ty=Tensor[(1, 2, 9), int16] */;
  %768 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
  %769 = subtract(%766, %767) /* ty=Tensor[(1, 2, 9), int16] */;
  %770 = %768.0;
  (%769, %770)
}

def @func_3569() -> (Tensor[(4, 4, 14), float32],) {
  %771 = @func_1879() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %772 = %771.0;
  (%772,)
}

def @func_5796() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %773 = @func_1848() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %774 = @func_3569() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %775 = @func_1445() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %776 = %773.0;
  %777 = %774.0;
  %778 = @func_65() /* ty=Tensor[(4, 4, 14), float32] */;
  %779 = %775.1;
  (%776, %777, %778, %779)
}

def @func_8721(%var_8716: Tensor[(10, 15, 16), int32], %var_8717: Tensor[(10, 15, 16), int32]) -> (Tensor[(10, 15, 16), bool],) {
  %780 = cast(%var_8717, dtype="bool") /* ty=Tensor[(10, 15, 16), bool] */;
  %781 = shape_of(%var_8716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(%var_8716, dtype="bool") /* ty=Tensor[(10, 15, 16), bool] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %784 = not_equal(%782, %783) /* ty=Tensor[(10, 15, 16), bool] */;
  (%784,)
}

def @func_20837() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %785 = @func_10800() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %786 = @func_14302() /* ty=Tensor[(4, 4, 14), bool] */;
  %787 = %785.0;
  (%786, %787)
}

def @func_7749() -> Tensor[(4, 4, 14), float32] {
  %788 = @func_6451() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %788.0
}

def @func_3298(%var_3288: Tensor[(5, 7, 4), float32], %var_3289: Tensor[(5, 7, 4), float32]) -> Tensor[(5, 7, 4), float32] {
  %789 = cast(%var_3289, dtype="float32") /* ty=Tensor[(5, 7, 4), float32] */;
  %790 = shape_of(%var_3288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(%var_3288, dtype="float32") /* ty=Tensor[(5, 7, 4), float32] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%791, %792) /* ty=Tensor[(5, 7, 4), float32] */
}

def @func_16602(%var_16595: Tensor[(8, 6, 14), float32]) -> (Tensor[(8, 6, 14), float32], Tensor[(4, 4, 14), float32]) {
  %793 = cast(%var_16595, dtype="float32") /* ty=Tensor[(8, 6, 14), float32] */;
  %794 = @func_5119() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %795 = exp(%793) /* ty=Tensor[(8, 6, 14), float32] */;
  %796 = %794.0;
  (%795, %796)
}

def @func_13752() -> (Tensor[(4, 4, 14), float32],) {
  %797 = @func_4430() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %798 = %797.0;
  (%798,)
}

def @func_13020() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %799 = @func_11980() /* ty=(Tensor[(6, 8, 9), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %800 = @func_11799() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %801 = @func_5931() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %802 = %799.1;
  %803 = %800.0;
  %804 = %801.0;
  %805 = @func_4184() /* ty=Tensor[(4, 4, 14), float64] */;
  (%802, %803, %804, %805)
}

def @func_12714() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %806 = @func_7379() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %807 = @func_11721() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %808 = @func_11980() /* ty=(Tensor[(6, 8, 9), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %809 = @func_11946() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %810 = %806.2;
  %811 = %807.0;
  %812 = %808.1;
  %813 = @func_7824() /* ty=Tensor[(4, 4, 14), float32] */;
  %814 = %809.1;
  (%810, %811, %812, %813, %814)
}

def @func_13308(%var_13279: Tensor[(1, 4, 5), float64]) -> (Tensor[(1, 4, 5), float64], Tensor[(4, 4, 14), float64]) {
  %815 = cast(-0.591807f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %816 = cast(%var_13279, dtype="float64") /* ty=Tensor[(1, 4, 5), float64] */;
  %817 = @func_9998() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %818 = floor_mod(%815, %816) /* ty=Tensor[(1, 4, 5), float64] */;
  %819 = %817.0;
  (%818, %819)
}

def @func_18273() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %820 = @func_9461() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %821 = @func_11491() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %822 = %820.1;
  %823 = %821.0;
  (%822, %823)
}

def @func_10870() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %824 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %825 = @func_9382() /* ty=Tensor[(4, 4, 14), bool] */;
  %826 = %824.0;
  (%825, %826)
}

def @func_14908() -> (Tensor[(9, 7, 3), float64], Tensor[(4, 4, 14), float32]) {
  %827 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 7, 3), float64] */, dtype="float64") /* ty=Tensor[(9, 7, 3), float64] */;
  %828 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %829 = erf(%827) /* ty=Tensor[(9, 7, 3), float64] */;
  %830 = %828.0;
  (%829, %830)
}

def @func_20652() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %831 = @func_10885() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %832 = @func_5519() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %833 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %834 = @func_8294() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %835 = @func_19313() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %836 = %831.1;
  %837 = %832.1;
  %838 = %833.0;
  %839 = %834.0;
  %840 = %835.0;
  (%836, %837, %838, %839, %840)
}

def @func_10800() -> (Tensor[(4, 4, 14), float32],) {
  %841 = @func_10496() /* ty=Tensor[(4, 4, 14), float32] */;
  (%841,)
}

def @func_11913(%var_11878: Tensor[(16, 16, 9), float64]) -> (Tensor[(16, 16, 9), float64], Tensor[(10, 9, 2), bool], Tensor[(180), uint32]) {
  %842 = cast(%var_11878, dtype="float64") /* ty=Tensor[(16, 16, 9), float64] */;
  %843 = cast(meta[relay.Constant][26] /* ty=Tensor[(180), uint32] */, dtype="uint32") /* ty=Tensor[(180), uint32] */;
  %844 = reshape(%843, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), uint32] */;
  %845 = @func_6296(%844) /* ty=(Tensor[(10, 9, 2), bool],) */;
  %846 = sin(%842) /* ty=Tensor[(16, 16, 9), float64] */;
  %847 = %845.0;
  (%846, %847, meta[relay.Constant][26] /* ty=Tensor[(180), uint32] */)
}

def @func_20194() -> (Tensor[(4, 4, 14), float32],) {
  %848 = @func_14872() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %849 = %848.3;
  (%849,)
}

def @func_21159() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %850 = @func_14872() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %851 = @func_18314() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %852 = %850.0;
  %853 = %851.0;
  (%852, %853)
}

def @func_15281(%var_15265: Tensor[(1, 13, 16), int8]) -> (Tensor[(15, 13, 16), bool],) {
  %854 = cast(%var_15265, dtype="bool") /* ty=Tensor[(1, 13, 16), bool] */;
  %855 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 13, 16), int8] */, dtype="bool") /* ty=Tensor[(15, 13, 16), bool] */;
  %856 = greater_equal(%854, %855) /* ty=Tensor[(15, 13, 16), bool] */;
  (%856,)
}

def @func_19298(%var_19215: Tensor[(13, 6, 1), uint16], %var_19216: Tensor[(13, 6, 16), uint16]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(13, 14), float32], Tensor[(13, 6, 16), float64], Tensor[(13, 6, 16), float64], Tensor[(14, ?, 13), int8]) {
  %857 = @func_3569() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %858 = @func_13512() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %859 = cast(%var_19215, dtype="uint16") /* ty=Tensor[(13, 6, 1), uint16] */;
  %860 = cast(%var_19216, dtype="uint16") /* ty=Tensor[(13, 6, 16), uint16] */;
  %861 = left_shift(%859, %860) /* ty=Tensor[(13, 6, 16), uint16] */;
  %862 = cast(%861, dtype="float64") /* ty=Tensor[(13, 6, 16), float64] */;
  %863 = cast(%var_19216, dtype="float64") /* ty=Tensor[(13, 6, 16), float64] */;
  %864 = cast(%var_19215, dtype="float64") /* ty=Tensor[(13, 6, 1), float64] */;
  %865 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 14), float32] */, dtype="float32") /* ty=Tensor[(13, 14), float32] */;
  %866 = reshape(%865, newshape=[14, 1, 13]) /* ty=Tensor[(14, 1, 13), float32] */;
  %867 = @func_5857(%866) /* ty=(Tensor[(14, ?, 13), uint32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(14, ?, 13), bool]) */;
  %868 = %867.3;
  %869 = cast(%868, dtype="float32") /* ty=Tensor[(14, ?, 13), float32] */;
  %870 = erf(%869) /* ty=Tensor[(14, ?, 13), float32] */;
  %871 = cast(%870, dtype="float32") /* ty=Tensor[(14, ?, 13), float32] */;
  %872 = sqrt(%871) /* ty=Tensor[(14, ?, 13), float32] */;
  %873 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 14), float32] */, dtype="float32") /* ty=Tensor[(13, 14), float32] */;
  %874 = reshape(%873, newshape=[182]) /* ty=Tensor[(182), float32] */;
  %875 = @func_8287(%874) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(182), float32], Tensor[(4, 4, 14), float32]) */;
  %876 = %875.7;
  %877 = cast(%876, dtype="int8") /* ty=Tensor[(182), int8] */;
  %878 = shape_of(%872, dtype="int32") /* ty=Tensor[(3), int32] */;
  %879 = cast(%872, dtype="int8") /* ty=Tensor[(14, ?, 13), int8] */;
  %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %881 = %857.0;
  %882 = %858.1;
  %883 = log10(%862) /* ty=Tensor[(13, 6, 16), float64] */;
  %884 = maximum(%863, %864) /* ty=Tensor[(13, 6, 16), float64] */;
  %885 = right_shift(%879, %880) /* ty=Tensor[(14, ?, 13), int8] */;
  (%881, %882, meta[relay.Constant][28] /* ty=Tensor[(13, 14), float32] */, %883, %884, %885)
}

def @func_5337() -> (Tensor[(4, 4, 14), float32],) {
  %886 = @func_1595() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %887 = %886.0;
  (%887,)
}

def @func_13315() -> (Tensor[(4, 4, 14), float32],) {
  %888 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
  (%888,)
}

def @main(%var_23527: Tensor[(5, 11, 14), float64]) -> Tensor[(5, 11, 14), float64] {
  %889 = cast(%var_23527, dtype="float64") /* ty=Tensor[(5, 11, 14), float64] */;
  %890 = log2(%889) /* ty=Tensor[(5, 11, 14), float64] */;
  %891 = cast(%890, dtype="float64") /* ty=Tensor[(5, 11, 14), float64] */;
  sqrt(%891) /* ty=Tensor[(5, 11, 14), float64] */
}

def @func_5857(%var_5826: Tensor[(14, 1, 13), float32]) -> (Tensor[(14, ?, 13), uint32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(14, ?, 13), bool]) {
  %892 = cast(%var_5826, dtype="float32") /* ty=Tensor[(14, 1, 13), float32] */;
  %893 = acos(%892) /* ty=Tensor[(14, 1, 13), float32] */;
  %894 = cast(%var_5826, dtype="uint32") /* ty=Tensor[(14, 1, 13), uint32] */;
  %895 = shape_of(%893, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%893, dtype="uint32") /* ty=Tensor[(14, 1, 13), uint32] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %898 = @func_1162() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %899 = @func_2470() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %900 = cast(%var_5826, dtype="bool") /* ty=Tensor[(14, 1, 13), bool] */;
  %901 = shape_of(%893, dtype="int32") /* ty=Tensor[(3), int32] */;
  %902 = cast(%893, dtype="bool") /* ty=Tensor[(14, 1, 13), bool] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %904 = subtract(%896, %897) /* ty=Tensor[(14, ?, 13), uint32] */;
  %905 = %898.1;
  %906 = %899.1;
  %907 = equal(%902, %903) /* ty=Tensor[(14, ?, 13), bool] */;
  (%904, %905, %906, %907)
}

def @func_14281() -> Tensor[(4, 4, 14), bool] {
  %908 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
  %908.2
}

def @func_6296(%var_6292: Tensor[(10, 9, 2), uint32]) -> (Tensor[(10, 9, 2), bool],) {
  %909 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 1, 1), uint32] */, dtype="bool") /* ty=Tensor[(10, 1, 1), bool] */;
  %910 = cast(%var_6292, dtype="bool") /* ty=Tensor[(10, 9, 2), bool] */;
  %911 = not_equal(%909, %910) /* ty=Tensor[(10, 9, 2), bool] */;
  (%911,)
}

def @func_10826() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %912 = @func_4241() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %913 = @func_8370() /* ty=Tensor[(4, 4, 14), float32] */;
  %914 = %912.0;
  (%913, %914)
}

def @func_18616() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %915 = @func_16194() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %916 = @func_6994() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %917 = @func_2775() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %918 = %915.1;
  %919 = %916.0;
  %920 = %917.1;
  (%918, %919, %920)
}

def @func_959() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %921 = @func_870() /* ty=Tensor[(4, 4, 14), float32] */;
  %922 = cast(%921, dtype="float32") /* ty=Tensor[(4, 4, 14), float32] */;
  %923 = @func_255() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %924 = sin(%922) /* ty=Tensor[(4, 4, 14), float32] */;
  %925 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
  %926 = %923.2;
  (%924, %925, %926)
}

def @func_9687(%var_9647: int16) -> (Tensor[(4, 4, 14), float32], Tensor[(11, 12, 11), bool], int16, Tensor[(1452), int16], Tensor[(4, 4, 14), float32]) {
  %927 = @func_4109() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %928 = cast(%var_9647, dtype="int16") /* ty=int16 */;
  %929 = cast(meta[relay.Constant][30] /* ty=Tensor[(1452), int16] */, dtype="int16") /* ty=Tensor[(1452), int16] */;
  %930 = reshape(%928, newshape=[]) /* ty=int16 */;
  %931 = reshape(%929, newshape=[11, 12, 11]) /* ty=Tensor[(11, 12, 11), int16] */;
  %932 = @func_4788() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %933 = %927.2;
  %934 = @func_3998(%930, %931) /* ty=Tensor[(11, 12, 11), bool] */;
  %935 = %932.0;
  (%933, %934, %var_9647, meta[relay.Constant][30] /* ty=Tensor[(1452), int16] */, %935)
}

def @func_4573() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %936 = @func_4163() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %937 = @func_3121() /* ty=Tensor[(4, 4, 14), float32] */;
  %938 = %936.0;
  (%937, %938)
}

def @func_21608() -> (Tensor[(4, 4, 14), float32],) {
  %939 = @func_10262() /* ty=Tensor[(4, 4, 14), float32] */;
  (%939,)
}

def @func_18998() -> (Tensor[(4, 4, 14), float32], Tensor[(2, 9, 12), float64], Tensor[(12, 18), float64]) {
  %940 = @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %941 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 18), float64] */, dtype="float64") /* ty=Tensor[(12, 18), float64] */;
  %942 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 18), float64] */, dtype="float64") /* ty=Tensor[(12, 18), float64] */;
  %943 = reshape(%941, newshape=[2, 9, 12]) /* ty=Tensor[(2, 9, 12), float64] */;
  %944 = reshape(%942, newshape=[2, 9, 12]) /* ty=Tensor[(2, 9, 12), float64] */;
  %945 = @func_13375(%943, %944) /* ty=(Tensor[(2, 9, 12), float64],) */;
  %946 = %940.0;
  %947 = %945.0;
  (%946, %947, meta[relay.Constant][31] /* ty=Tensor[(12, 18), float64] */)
}

def @func_2470() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %948 = @func_2209() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %949 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %950 = %948.0;
  %951 = %949.0;
  (%950, %951)
}

def @func_12392() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %952 = @func_1848() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %953 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %954 = %952.0;
  %955 = @func_10496() /* ty=Tensor[(4, 4, 14), float32] */;
  %956 = %953.1;
  (%954, %955, %956)
}

def @func_15250() -> (Tensor[(4, 4, 14), float64],) {
  %957 = @func_9554() /* ty=Tensor[(4, 4, 14), float64] */;
  (%957,)
}

def @func_3068() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %958 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %959 = @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %960 = %958.0;
  %961 = %959.0;
  (%960, %961)
}

def @func_10168() -> Tensor[(4, 4, 14), bool] {
  @func_9382() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_18815(%var_18804: Tensor[(10, 5, 1), int64], %var_18805: Tensor[(10, 5, 1), int64]) -> (Tensor[(10, 5, ?), int64],) {
  %962 = cast(%var_18805, dtype="int64") /* ty=Tensor[(10, 5, 1), int64] */;
  %963 = shape_of(%var_18804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %964 = cast(%var_18804, dtype="int64") /* ty=Tensor[(10, 5, 1), int64] */;
  %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %966 = add(%964, %965) /* ty=Tensor[(10, 5, ?), int64] */;
  (%966,)
}

def @func_20365() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %967 = @func_12456() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %968 = @func_2470() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %969 = %967.0;
  %970 = @func_14433() /* ty=Tensor[(4, 4, 14), float32] */;
  %971 = @func_6393() /* ty=Tensor[(4, 4, 14), float32] */;
  %972 = %968.0;
  (%969, %970, %971, %972)
}

def @func_13512() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %973 = @func_5002() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %974 = %973.0;
  %975 = @func_13491() /* ty=Tensor[(4, 4, 14), float64] */;
  (%974, %975)
}

def @func_17136(%var_17132: Tensor[(3, 12, 10), float32]) -> (Tensor[(3, 12, 10), float32],) {
  %976 = cast(%var_17132, dtype="float32") /* ty=Tensor[(3, 12, 10), float32] */;
  %977 = cos(%976) /* ty=Tensor[(3, 12, 10), float32] */;
  (%977,)
}

def @func_19412() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %978 = @func_15052() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %979 = @func_6446() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %980 = %978.0;
  %981 = %979.1;
  %982 = @func_12629() /* ty=Tensor[(4, 4, 14), float32] */;
  (%980, %981, %982)
}

def @func_14049() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %983 = @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %984 = %983.0;
  %985 = @func_12593() /* ty=Tensor[(4, 4, 14), float32] */;
  (%984, %985)
}

def @func_11799() -> (Tensor[(4, 4, 14), float32],) {
  %986 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  (%986,)
}

def @func_5931() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %987 = @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %988 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %989 = %987.0;
  %990 = %988.0;
  (%989, %990)
}

def @func_12608() -> Tensor[(4, 4, 14), float32] {
  %991 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %991.0
}

def @func_11541(%var_11501: Tensor[(1, 3, 7), float64], %var_11515: Tensor[(10), float64]) -> (Tensor[(1, 3, 7), float64], Tensor[(4, 4, 14), float32], Tensor[(1, 5, 2), float64], Tensor[(10), float64], Tensor[(4, 4, 14), float64]) {
  %992 = cast(%var_11501, dtype="float64") /* ty=Tensor[(1, 3, 7), float64] */;
  %993 = @func_4599() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %994 = cast(%var_11515, dtype="float64") /* ty=Tensor[(10), float64] */;
  %995 = reshape(%994, newshape=[1, 5, 2]) /* ty=Tensor[(1, 5, 2), float64] */;
  %996 = @func_5992(%995) /* ty=(Tensor[(1, 5, 2), float64], Tensor[(4, 4, 14), float32]) */;
  %997 = @func_6605() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %998 = sin(%992) /* ty=Tensor[(1, 3, 7), float64] */;
  %999 = %993.0;
  %1000 = %996.0;
  %1001 = %997.2;
  (%998, %999, %1000, %var_11515, %1001)
}

def @func_7207(%var_7202: int16) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], int16, Tensor[(18), int16]) {
  %1002 = @func_6579() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1003 = @func_6960() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1004 = @func_6157() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1005 = @func_2272() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1006 = cast(%var_7202, dtype="int16") /* ty=int16 */;
  %1007 = cast(meta[relay.Constant][32] /* ty=Tensor[(18), int16] */, dtype="int16") /* ty=Tensor[(18), int16] */;
  %1008 = reshape(%1006, newshape=[]) /* ty=int16 */;
  %1009 = reshape(%1007, newshape=[1, 2, 9]) /* ty=Tensor[(1, 2, 9), int16] */;
  %1010 = @func_1551(%1008, %1009) /* ty=(Tensor[(1, 2, 9), int16], Tensor[(4, 4, 14), float32]) */;
  %1011 = @func_4510() /* ty=Tensor[(4, 4, 14), float32] */;
  %1012 = %1002.0;
  %1013 = %1003.1;
  %1014 = %1004.0;
  %1015 = %1005.0;
  %1016 = %1010.1;
  (%1011, %1012, %1013, %1014, %1015, %1016, %var_7202, meta[relay.Constant][32] /* ty=Tensor[(18), int16] */)
}

def @func_14642() -> (Tensor[(4, 4, 14), float32],) {
  %1017 = @func_5055() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1018 = %1017.1;
  (%1018,)
}

def @func_13265() -> (Tensor[(4, 4, 14), float64],) {
  %1019 = @func_1445() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %1020 = %1019.0;
  (%1020,)
}

def @func_4365(%var_4294: Tensor[(8, 15, 13), int16], %var_4298: Tensor[(8, 15, 13), int16]) -> (Tensor[(8, 15, 13), bool], Tensor[(8, 15, 13), float32], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) {
  %1021 = cast(meta[relay.Constant][33] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %1022 = cast(%var_4294, dtype="bool") /* ty=Tensor[(8, 15, 13), bool] */;
  %1023 = cast(%var_4298, dtype="float32") /* ty=Tensor[(8, 15, 13), float32] */;
  %1024 = shape_of(%var_4294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1025 = cast(%var_4294, dtype="float32") /* ty=Tensor[(8, 15, 13), float32] */;
  %1026 = dyn.reshape(%1023, %1024, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1027 = @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1028 = equal(%1021, %1022) /* ty=Tensor[(8, 15, 13), bool] */;
  %1029 = power(%1025, %1026) /* ty=Tensor[(8, 15, 13), float32] */;
  %1030 = @func_446() /* ty=Tensor[(4, 4, 14), uint64] */;
  %1031 = %1027.0;
  (%1028, %1029, %1030, %1031)
}

def @func_10127() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1032 = @func_9930() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1033 = @func_2775() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1034 = %1032.0;
  %1035 = %1033.2;
  (%1034, %1035)
}

def @func_20844() -> (Tensor[(4, 4, 14), float32],) {
  %1036 = @func_2272() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1037 = %1036.0;
  (%1037,)
}

def @func_14485() -> Tensor[(4, 4, 14), float32] {
  %1038 = @func_6960() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1038.0
}

def @func_17652() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1039 = @func_5071() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1040 = @func_10307() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1041 = @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1042 = @func_502() /* ty=Tensor[(4, 4, 14), float32] */;
  %1043 = %1039.0;
  %1044 = %1040.0;
  %1045 = %1041.0;
  (%1042, %1043, %1044, %1045)
}

def @func_5002() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1046 = @func_4863() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1047 = @func_1848() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1048 = %1046.1;
  %1049 = %1047.1;
  (%1048, %1049)
}

def @func_16581() -> (Tensor[(4, 4, 14), float32],) {
  %1050 = @func_3149() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1051 = %1050.0;
  (%1051,)
}

def @func_19848() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], int16, Tensor[(1452), int16]) {
  %1052 = @func_4678() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %1053 = @func_10515() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1054 = cast(meta[relay.Constant][34] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1055 = cast(meta[relay.Constant][35] /* ty=Tensor[(1452), int16] */, dtype="int16") /* ty=Tensor[(1452), int16] */;
  %1056 = reshape(%1054, newshape=[]) /* ty=int16 */;
  %1057 = reshape(%1055, newshape=[1452]) /* ty=Tensor[(1452), int16] */;
  %1058 = @func_9165(%1056, %1057) /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(11, 12, 11), bool], int16, Tensor[(1452), int16], Tensor[(4, 4, 14), uint16]) */;
  %1059 = %1052.0;
  %1060 = %1053.0;
  %1061 = %1058.0;
  (%1059, %1060, %1061, meta[relay.Constant][34] /* ty=int16 */, meta[relay.Constant][35] /* ty=Tensor[(1452), int16] */)
}

def @func_19793() -> (Tensor[(4, 4, 14), float32],) {
  %1062 = @func_12139() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1063 = %1062.3;
  (%1063,)
}

def @func_19188() -> Tensor[(4, 4, 14), float32] {
  %1064 = @func_11178() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(2, 384), bool]) */;
  %1064.3
}

def @func_2539() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1065 = @func_1720() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1066 = @func_905() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1067 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1068 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1069 = %1065.0;
  %1070 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
  %1071 = @func_65() /* ty=Tensor[(4, 4, 14), float32] */;
  %1072 = %1066.0;
  %1073 = %1067.0;
  %1074 = %1068.0;
  (%1069, %1070, %1071, %1072, %1073, %1074)
}

def @func_8751(%var_8735: Tensor[(9, 7, 6), int8], %var_8736: Tensor[(9, 7, 6), int8]) -> Tensor[(9, 7, 6), int8] {
  %1075 = cast(%var_8736, dtype="int8") /* ty=Tensor[(9, 7, 6), int8] */;
  %1076 = shape_of(%var_8735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1077 = cast(%var_8735, dtype="int8") /* ty=Tensor[(9, 7, 6), int8] */;
  %1078 = dyn.reshape(%1075, %1076, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%1077, %1078) /* ty=Tensor[(9, 7, 6), int8] */
}

def @func_20126() -> Tensor[(4, 4, 14), float64] {
  %1079 = @func_5071() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1079.0
}

def @func_5722(%var_5714: uint16, %var_5715: Tensor[(15, 8, 10), uint16]) -> Tensor[(15, 8, 10), uint16] {
  %1080 = cast(%var_5714, dtype="uint16") /* ty=uint16 */;
  %1081 = cast(%var_5715, dtype="uint16") /* ty=Tensor[(15, 8, 10), uint16] */;
  minimum(%1080, %1081) /* ty=Tensor[(15, 8, 10), uint16] */
}

def @func_13789() -> (Tensor[(4, 4, 14), float32],) {
  %1082 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1083 = %1082.0;
  (%1083,)
}

def @func_23226() -> (Tensor[(4, 4, 14), float32],) {
  %1084 = @func_11100() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1084,)
}

def @func_17934() -> (Tensor[(4, 4, 14), float64],) {
  %1085 = @func_10663() /* ty=Tensor[(4, 4, 14), float64] */;
  (%1085,)
}

def @func_4040() -> Tensor[(4, 4, 14), float32] {
  %1086 = @func_2539() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1087 = %1086.4;
  %1088 = cast(meta[relay.Constant][36] /* ty=Tensor[(4, 4, 14), float32] */, dtype="float32") /* ty=Tensor[(4, 4, 14), float32] */;
  %1089 = shape_of(%1087, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1090 = cast(%1087, dtype="float32") /* ty=Tensor[(4, 4, 14), float32] */;
  %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%1090, %1091) /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_2478() -> (Tensor[(4, 4, 14), float32],) {
  %1092 = @func_170() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1092,)
}

def @func_905() -> (Tensor[(4, 4, 14), float64],) {
  %1093 = @func_835() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1094 = %1093.0;
  %1095 = cast(%1094, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
  %1096 = acosh(%1095) /* ty=Tensor[(4, 4, 14), float64] */;
  (%1096,)
}

def @func_9382() -> Tensor[(4, 4, 14), bool] {
  %1097 = @func_5559() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1097.0
}

def @func_12139() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1098 = @func_8458() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1099 = @func_2832() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1100 = %1098.1;
  %1101 = @func_9382() /* ty=Tensor[(4, 4, 14), bool] */;
  %1102 = @func_9302() /* ty=Tensor[(4, 4, 14), float32] */;
  %1103 = %1099.1;
  (%1100, %1101, %1102, %1103)
}

def @func_2247() -> (Tensor[(4, 4, 14), float64],) {
  %1104 = @func_835() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1105 = %1104.0;
  (%1105,)
}

def @func_6446() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1106 = @func_5002() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1107 = @func_6157() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1108 = %1106.1;
  %1109 = %1107.0;
  (%1108, %1109)
}

def @func_10953() -> (Tensor[(4, 4, 14), uint64],) {
  %1110 = @func_446() /* ty=Tensor[(4, 4, 14), uint64] */;
  (%1110,)
}

def @func_10547() -> Tensor[(4, 4, 14), float32] {
  %1111 = @func_5278() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1111.0
}

def @func_13999(%var_13989: float64, %var_13990: Tensor[(7, 6, 3), float64]) -> (Tensor[(7, 6, 3), float64], Tensor[(4, 4, 14), float32]) {
  %1112 = cast(%var_13989, dtype="float64") /* ty=float64 */;
  %1113 = cast(%var_13990, dtype="float64") /* ty=Tensor[(7, 6, 3), float64] */;
  %1114 = floor_mod(%1112, %1113) /* ty=Tensor[(7, 6, 3), float64] */;
  %1115 = @func_12629() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1114, %1115)
}

def @func_18871() -> (Tensor[(4, 4, 14), float32],) {
  %1116 = @func_5796() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1117 = %1116.1;
  (%1117,)
}

def @func_13841() -> Tensor[(4, 4, 14), bool] {
  %1118 = @func_4863() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1118.2
}

def @func_6368() -> (Tensor[(4, 4, 14), uint64],) {
  %1119 = @func_446() /* ty=Tensor[(4, 4, 14), uint64] */;
  (%1119,)
}

def @func_14891() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1120 = @func_8920() /* ty=Tensor[(4, 4, 14), float32] */;
  %1121 = @func_10815() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1120, %1121)
}

def @func_10241() -> (Tensor[(4, 4, 14), float32],) {
  %1122 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1123 = %1122.1;
  (%1123,)
}

def @func_15806() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %1124 = @func_3149() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1125 = @func_6656() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) */;
  %1126 = @func_6960() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1127 = %1124.0;
  %1128 = %1125.1;
  %1129 = %1126.1;
  (%1127, %1128, %1129)
}

def @func_835() -> (Tensor[(4, 4, 14), float64],) {
  %1130 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  %1131 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
  %1132 = cast(%1131, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
  %1133 = shape_of(%1130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1134 = cast(%1130, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
  %1135 = dyn.reshape(%1132, %1133, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1136 = subtract(%1134, %1135) /* ty=Tensor[(4, 4, 14), float64] */;
  (%1136,)
}

def @func_5519() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1137 = @func_3733() /* ty=(Tensor[(8, 12, 13), int32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1138 = %1137.5;
  %1139 = cast(%1138, dtype="float32") /* ty=Tensor[(4, 4, 14), float32] */;
  %1140 = @func_2478() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1141 = @func_4416() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1142 = rsqrt(%1139) /* ty=Tensor[(4, 4, 14), float32] */;
  %1143 = %1140.0;
  %1144 = %1141.0;
  (%1142, %1143, %1144)
}

def @func_128() -> (Tensor[(4, 4, 14), bool],) {
  %1145 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  %1146 = @func_65() /* ty=Tensor[(4, 4, 14), float32] */;
  %1147 = cast(%1146, dtype="bool") /* ty=Tensor[(4, 4, 14), bool] */;
  %1148 = shape_of(%1145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1149 = cast(%1145, dtype="bool") /* ty=Tensor[(4, 4, 14), bool] */;
  %1150 = dyn.reshape(%1147, %1148, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1151 = greater_equal(%1149, %1150) /* ty=Tensor[(4, 4, 14), bool] */;
  (%1151,)
}

def @func_15551() -> Tensor[(4, 4, 14), uint64] {
  %1152 = @func_5055() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1152.0
}

def @func_17911() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), bool]) {
  %1153 = @func_11388() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1154 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %1155 = %1153.0;
  %1156 = %1154.0;
  (%1155, %1156)
}

def @func_21274() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1157 = @func_20754() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1158 = @func_15151() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1159 = %1157.0;
  %1160 = %1158.1;
  (%1159, %1160)
}

def @func_4863() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1161 = @func_1595() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1162 = @func_2272() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1163 = @func_3068() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1164 = @func_2752() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1165 = %1161.1;
  %1166 = %1162.0;
  %1167 = %1163.0;
  %1168 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  %1169 = %1164.0;
  (%1165, %1166, %1167, %1168, %1169)
}

def @func_4735() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1170 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1171 = @func_4109() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1172 = %1170.0;
  %1173 = %1171.1;
  (%1172, %1173)
}

def @func_13647() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64], Tensor[(1560), int16]) {
  %1174 = @func_3474() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1175 = @func_6579() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1176 = cast(meta[relay.Constant][37] /* ty=Tensor[(1560), int16] */, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %1177 = cast(meta[relay.Constant][37] /* ty=Tensor[(1560), int16] */, dtype="int16") /* ty=Tensor[(1560), int16] */;
  %1178 = reshape(%1176, newshape=[8, 15, 13]) /* ty=Tensor[(8, 15, 13), int16] */;
  %1179 = reshape(%1177, newshape=[8, 15, 13]) /* ty=Tensor[(8, 15, 13), int16] */;
  %1180 = @func_4365(%1178, %1179) /* ty=(Tensor[(8, 15, 13), bool], Tensor[(8, 15, 13), float32], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) */;
  %1181 = @func_6393() /* ty=Tensor[(4, 4, 14), float32] */;
  %1182 = %1174.0;
  %1183 = %1175.0;
  %1184 = %1180.2;
  (%1181, %1182, %1183, %1184, meta[relay.Constant][37] /* ty=Tensor[(1560), int16] */)
}

def @func_27() -> Tensor[(4, 4, 14), float32] {
  %1185 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 4, 14), float32] */, dtype="float32") /* ty=Tensor[(4, 4, 14), float32] */;
  sinh(%1185) /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_7430() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %1186 = @func_6579() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1187 = @func_2247() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1188 = %1186.0;
  %1189 = %1187.0;
  (%1188, %1189)
}

def @func_3452() -> Tensor[(4, 4, 14), float32] {
  %1190 = @func_1595() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1190.1
}

def @func_17274(%var_17230: Tensor[(13, 1, 2), int32], %var_17231: Tensor[(13, 11, 2), int32]) -> (Tensor[(13, 11, 2), bool], Tensor[(4, 4, 14), float32], Tensor[(10, 9, 2), bool], Tensor[(180), uint32]) {
  %1191 = cast(%var_17230, dtype="bool") /* ty=Tensor[(13, 1, 2), bool] */;
  %1192 = cast(%var_17231, dtype="bool") /* ty=Tensor[(13, 11, 2), bool] */;
  %1193 = cast(meta[relay.Constant][39] /* ty=Tensor[(180), uint32] */, dtype="uint32") /* ty=Tensor[(180), uint32] */;
  %1194 = reshape(%1193, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), uint32] */;
  %1195 = @func_6296(%1194) /* ty=(Tensor[(10, 9, 2), bool],) */;
  %1196 = less(%1191, %1192) /* ty=Tensor[(13, 11, 2), bool] */;
  %1197 = @func_7824() /* ty=Tensor[(4, 4, 14), float32] */;
  %1198 = %1195.0;
  (%1196, %1197, %1198, meta[relay.Constant][39] /* ty=Tensor[(180), uint32] */)
}

def @func_14343() -> Tensor[(4, 4, 14), float32] {
  %1199 = @func_7886() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1199.1
}

def @func_2272() -> (Tensor[(4, 4, 14), float32],) {
  %1200 = @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1201 = %1200.1;
  (%1201,)
}

def @func_4163() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1202 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1203 = @func_2752() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1204 = %1202.0;
  %1205 = %1203.0;
  (%1204, %1205)
}

def @func_8458() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %1206 = @func_6960() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1207 = @func_8406() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1208 = %1206.0;
  %1209 = %1207.0;
  (%1208, %1209)
}

def @func_20278() -> (Tensor[(4, 4, 14), float32],) {
  %1210 = @func_18148() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1211 = %1210.0;
  (%1211,)
}

def @func_11468() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %1212 = @func_10440() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %1213 = %1212.0;
  %1214 = @func_8625() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1213, %1214)
}

def @func_6579() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1215 = @func_170() /* ty=Tensor[(4, 4, 14), float32] */;
  %1216 = @func_3452() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1215, %1216)
}

def @func_17564(%var_17550: Tensor[(2, 14, 9), bool]) -> (Tensor[(2, 14, 9), bool], Tensor[(2, 14, 9), int8]) {
  %1217 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 14, 9), bool] */, dtype="bool") /* ty=Tensor[(2, 14, 9), bool] */;
  %1218 = shape_of(%var_17550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1219 = cast(%var_17550, dtype="bool") /* ty=Tensor[(2, 14, 9), bool] */;
  %1220 = dyn.reshape(%1217, %1218, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1221 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 14, 9), bool] */, dtype="int8") /* ty=Tensor[(2, 14, 9), int8] */;
  %1222 = shape_of(%var_17550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1223 = cast(%var_17550, dtype="int8") /* ty=Tensor[(2, 14, 9), int8] */;
  %1224 = dyn.reshape(%1221, %1222, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1225 = logical_or(%1219, %1220) /* ty=Tensor[(2, 14, 9), bool] */;
  %1226 = subtract(%1223, %1224) /* ty=Tensor[(2, 14, 9), int8] */;
  (%1225, %1226)
}

def @func_22033() -> Tensor[(4, 4, 14), float32] {
  %1227 = @func_15844() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1227.0
}

def @func_3390() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %1228 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1229 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1230 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1231 = %1228.0;
  %1232 = %1229.0;
  %1233 = %1230.1;
  (%1231, %1232, %1233)
}

def @func_7022() -> (Tensor[(4, 4, 14), float32],) {
  %1234 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1235 = %1234.0;
  (%1235,)
}

def @func_13469() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1236 = @func_4430() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1237 = @func_12791() /* ty=Tensor[(4, 4, 14), float32] */;
  %1238 = %1236.0;
  (%1237, %1238)
}

def @func_6053() -> Tensor[(4, 4, 14), float32] {
  %1239 = @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1239.1
}

def @func_18739() -> (Tensor[(4, 4, 14), float32],) {
  %1240 = @func_11257() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1241 = %1240.0;
  (%1241,)
}

def @func_18148() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1242 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1243 = %1242.0;
  %1244 = @func_14485() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1243, %1244)
}

def @func_1445() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  %1245 = @func_905() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1246 = %1245.0;
  %1247 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1246, %1247)
}

def @func_65() -> Tensor[(4, 4, 14), float32] {
  @func_27() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_2752() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1248 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1249 = @func_170() /* ty=Tensor[(4, 4, 14), float32] */;
  %1250 = %1248.1;
  (%1249, %1250)
}

def @func_14991() -> Tensor[(4, 4, 14), float32] {
  %1251 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1251.0
}

def @func_18031() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1252 = @func_4599() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1253 = @func_10370() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1254 = %1252.0;
  %1255 = %1253.0;
  (%1254, %1255)
}

def @func_7115() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1256 = @func_6994() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1257 = @func_2611() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %1258 = @func_5652() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1259 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1260 = %1256.0;
  %1261 = %1257.3;
  %1262 = %1258.2;
  %1263 = %1259.0;
  (%1260, %1261, %1262, %1263)
}

def @func_12791() -> Tensor[(4, 4, 14), float32] {
  %1264 = @func_3149() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1264.0
}

def @func_11491() -> (Tensor[(4, 4, 14), float32],) {
  %1265 = @func_5204() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %1266 = %1265.0;
  (%1266,)
}

def @func_17430() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1267 = @func_5278() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1268 = @func_10515() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1269 = @func_11761() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %1270 = @func_4241() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1271 = @func_8428() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1272 = @func_5055() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1273 = @func_4510() /* ty=Tensor[(4, 4, 14), float32] */;
  %1274 = %1267.0;
  %1275 = %1268.0;
  %1276 = %1269.0;
  %1277 = @func_6017() /* ty=Tensor[(4, 4, 14), bool] */;
  %1278 = %1270.1;
  %1279 = %1271.0;
  %1280 = %1272.2;
  (%1273, %1274, %1275, %1276, %1277, %1278, %1279, %1280)
}

def @func_16462() -> Tensor[(4, 4, 14), float64] {
  %1281 = @func_1445() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %1281.0
}

def @func_21227(%var_21218: Tensor[(42), int32], %var_21219: Tensor[(126), int32]) -> (Tensor[(11, 16, 7), float64], Tensor[(3, 6, 7), bool], Tensor[(42), int32], Tensor[(126), int32]) {
  %1282 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 16, 7), float64] */;
  %1283 = cast(%var_21218, dtype="int32") /* ty=Tensor[(42), int32] */;
  %1284 = cast(%var_21219, dtype="int32") /* ty=Tensor[(126), int32] */;
  %1285 = reshape(%1283, newshape=[1, 6, 7]) /* ty=Tensor[(1, 6, 7), int32] */;
  %1286 = reshape(%1284, newshape=[3, 6, 7]) /* ty=Tensor[(3, 6, 7), int32] */;
  %1287 = atanh(%1282) /* ty=Tensor[(11, 16, 7), float64] */;
  %1288 = @func_14713(%1285, %1286) /* ty=Tensor[(3, 6, 7), bool] */;
  (%1287, %1288, %var_21218, %var_21219)
}

def @func_9930() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1289 = @func_3569() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1290 = @func_6446() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1291 = %1289.0;
  %1292 = %1290.0;
  %1293 = @func_3424() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1291, %1292, %1293)
}

def @func_20164() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %1294 = @func_8406() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1295 = %1294.1;
  %1296 = @func_20126() /* ty=Tensor[(4, 4, 14), float64] */;
  (%1295, %1296)
}

def @func_18747() -> Tensor[(4, 4, 14), float32] {
  %1297 = @func_16194() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1297.0
}

def @func_12537() -> (Tensor[(4, 4, 14), float32],) {
  %1298 = @func_4163() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1299 = %1298.1;
  (%1299,)
}

def @func_14260(%var_14255: int8) -> (Tensor[(1, 2, 3), int8],) {
  %1300 = cast(%var_14255, dtype="int8") /* ty=int8 */;
  %1301 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 2, 3), int8] */, dtype="int8") /* ty=Tensor[(1, 2, 3), int8] */;
  %1302 = maximum(%1300, %1301) /* ty=Tensor[(1, 2, 3), int8] */;
  (%1302,)
}

def @func_1595() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1303 = @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1304 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1305 = %1303.0;
  %1306 = %1304.0;
  (%1305, %1306)
}

def @func_17350() -> (Tensor[(4, 4, 14), uint64],) {
  %1307 = @func_14610() /* ty=Tensor[(4, 4, 14), uint64] */;
  (%1307,)
}

def @func_15052() -> (Tensor[(4, 4, 14), float32],) {
  %1308 = @func_14049() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1309 = %1308.0;
  (%1309,)
}

def @func_7446() -> (Tensor[(4, 4, 14), float64],) {
  %1310 = @func_2611() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %1311 = %1310.3;
  (%1311,)
}

def @func_7689() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1312 = @func_5652() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1313 = @func_2539() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1314 = %1312.3;
  %1315 = %1313.4;
  (%1314, %1315)
}

def @func_2209() -> (Tensor[(4, 4, 14), float32],) {
  %1316 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1317 = %1316.0;
  (%1317,)
}

def @func_16194() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1318 = @func_7886() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1319 = @func_2209() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1320 = %1318.0;
  %1321 = %1319.0;
  (%1320, %1321)
}

def @func_6960() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %1322 = @func_4109() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1323 = @func_65() /* ty=Tensor[(4, 4, 14), float32] */;
  %1324 = %1322.0;
  (%1323, %1324)
}

def @func_8428() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1325 = @func_3656() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1326 = %1325.2;
  %1327 = @func_502() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1326, %1327)
}

def @func_6209() -> Tensor[(4, 4, 14), uint64] {
  @func_446() /* ty=Tensor[(4, 4, 14), uint64] */
}

def @func_14302() -> Tensor[(4, 4, 14), bool] {
  %1328 = @func_4678() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %1328.0
}

def @func_6451() -> (Tensor[(4, 4, 14), float32],) {
  %1329 = @func_1245() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1330 = %1329.1;
  (%1330,)
}

def @func_8406() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %1331 = @func_5559() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1332 = @func_3068() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1333 = %1331.0;
  %1334 = %1332.1;
  (%1333, %1334)
}

def @func_18704() -> Tensor[(4, 4, 14), float32] {
  %1335 = @func_15402() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1335.0
}

def @func_170() -> Tensor[(4, 4, 14), float32] {
  @func_65() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_21698(%var_21621: Tensor[(1, 14, 15), float32]) -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(?, 14, 15), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(?, 14, 15), bool]) {
  %1336 = @func_10476() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %1337 = cast(%var_21621, dtype="float32") /* ty=Tensor[(1, 14, 15), float32] */;
  %1338 = sin(%1337) /* ty=Tensor[(1, 14, 15), float32] */;
  %1339 = cast(%1338, dtype="float32") /* ty=Tensor[(1, 14, 15), float32] */;
  %1340 = acosh(%1339) /* ty=Tensor[(1, 14, 15), float32] */;
  %1341 = cast(%1338, dtype="bool") /* ty=Tensor[(1, 14, 15), bool] */;
  %1342 = shape_of(%1340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1343 = cast(%1340, dtype="bool") /* ty=Tensor[(1, 14, 15), bool] */;
  %1344 = dyn.reshape(%1341, %1342, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1345 = greater(%1343, %1344) /* ty=Tensor[(?, 14, 15), bool] */;
  %1346 = cast(%1340, dtype="bool") /* ty=Tensor[(1, 14, 15), bool] */;
  %1347 = shape_of(%1345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1348 = cast(%1345, dtype="bool") /* ty=Tensor[(?, 14, 15), bool] */;
  %1349 = dyn.reshape(%1346, %1347, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1350 = logical_or(%1348, %1349) /* ty=Tensor[(?, 14, 15), bool] */;
  %1351 = cast(%1350, dtype="float64") /* ty=Tensor[(?, 14, 15), float64] */;
  %1352 = @func_7689() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1353 = cast(%1340, dtype="bool") /* ty=Tensor[(1, 14, 15), bool] */;
  %1354 = shape_of(%1338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1355 = cast(%1338, dtype="bool") /* ty=Tensor[(1, 14, 15), bool] */;
  %1356 = dyn.reshape(%1353, %1354, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1357 = %1336.0;
  %1358 = @func_8625() /* ty=Tensor[(4, 4, 14), float32] */;
  %1359 = cos(%1351) /* ty=Tensor[(?, 14, 15), float64] */;
  %1360 = @func_20412() /* ty=Tensor[(4, 4, 14), float32] */;
  %1361 = %1352.1;
  %1362 = equal(%1355, %1356) /* ty=Tensor[(?, 14, 15), bool] */;
  (%1357, %1358, %1359, %1360, %1361, %1362)
}

def @func_141() -> Tensor[(4, 4, 14), float32] {
  @func_27() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_1676() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %1363 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1364 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
  %1365 = %1363.0;
  %1366 = %1364.3;
  (%1365, %1366)
}

def @func_4487() -> (Tensor[(4, 4, 14), float32],) {
  %1367 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1368 = %1367.0;
  (%1368,)
}

def @func_6157() -> (Tensor[(4, 4, 14), float32],) {
  %1369 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1370 = %1369.0;
  (%1370,)
}

def @func_1720() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1371 = @func_1595() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1372 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1373 = @func_1245() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1374 = %1371.1;
  %1375 = %1372.0;
  %1376 = %1373.0;
  (%1374, %1375, %1376)
}

def @func_22466(%var_22443: Tensor[(9, 6, 6), bool], %var_22444: Tensor[(9, 6, 6), bool]) -> (Tensor[(9, 6, 6), bool], Tensor[(4, 4, 14), bool]) {
  %1377 = cast(%var_22444, dtype="bool") /* ty=Tensor[(9, 6, 6), bool] */;
  %1378 = shape_of(%var_22443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1379 = cast(%var_22443, dtype="bool") /* ty=Tensor[(9, 6, 6), bool] */;
  %1380 = dyn.reshape(%1377, %1378, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1381 = logical_or(%1379, %1380) /* ty=Tensor[(9, 6, 6), bool] */;
  %1382 = @func_22160() /* ty=Tensor[(4, 4, 14), bool] */;
  (%1381, %1382)
}

def @func_22727() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %1383 = @func_3474() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1384 = @func_10370() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1385 = %1383.0;
  %1386 = @func_21292() /* ty=Tensor[(4, 4, 14), float32] */;
  %1387 = %1384.0;
  %1388 = @func_20126() /* ty=Tensor[(4, 4, 14), float64] */;
  (%1385, %1386, %1387, %1388)
}

def @func_870() -> Tensor[(4, 4, 14), float32] {
  @func_170() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_11946() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1389 = @func_6605() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %1390 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1391 = %1389.0;
  %1392 = %1390.0;
  (%1391, %1392)
}

def @func_5160() -> Tensor[(4, 4, 14), float32] {
  @func_1653() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_22745() -> (Tensor[(4, 4, 14), float32],) {
  %1393 = @func_4510() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1393,)
}

def @func_22394() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1394 = @func_18273() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1395 = %1394.1;
  %1396 = @func_12608() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1395, %1396)
}

def @func_3998(%var_3974: int16, %var_3975: Tensor[(11, 12, 11), int16]) -> Tensor[(11, 12, 11), bool] {
  %1397 = cast(%var_3974, dtype="int16") /* ty=int16 */;
  %1398 = cast(%var_3975, dtype="int16") /* ty=Tensor[(11, 12, 11), int16] */;
  %1399 = add(%1397, %1398) /* ty=Tensor[(11, 12, 11), int16] */;
  %1400 = cast(%1399, dtype="bool") /* ty=Tensor[(11, 12, 11), bool] */;
  %1401 = shape_of(%var_3975, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1402 = cast(%var_3975, dtype="bool") /* ty=Tensor[(11, 12, 11), bool] */;
  %1403 = dyn.reshape(%1400, %1401, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%1402, %1403) /* ty=Tensor[(11, 12, 11), bool] */
}

def @func_11651() -> Tensor[(4, 4, 14), float32] {
  %1404 = @func_2775() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1404.2
}

def @func_14872() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1405 = @func_14209() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1406 = @func_5559() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1407 = @func_14532() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1408 = %1405.0;
  %1409 = %1406.0;
  %1410 = @func_10168() /* ty=Tensor[(4, 4, 14), bool] */;
  %1411 = @func_3607() /* ty=Tensor[(4, 4, 14), float32] */;
  %1412 = %1407.2;
  %1413 = @func_12999() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1408, %1409, %1410, %1411, %1412, %1413)
}

def @func_19100() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1414 = @func_5055() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1415 = %1414.1;
  %1416 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1415, %1416)
}

def @func_16932(%var_16913: int8) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(1, 2, 3), int8], int8, Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1417 = @func_14908() /* ty=(Tensor[(9, 7, 3), float64], Tensor[(4, 4, 14), float32]) */;
  %1418 = @func_13512() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %1419 = cast(%var_16913, dtype="int8") /* ty=int8 */;
  %1420 = reshape(%1419, newshape=[]) /* ty=int8 */;
  %1421 = @func_14260(%1420) /* ty=(Tensor[(1, 2, 3), int8],) */;
  %1422 = @func_4788() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1423 = @func_10826() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1424 = %1417.1;
  %1425 = %1418.0;
  %1426 = %1421.0;
  %1427 = %1422.0;
  %1428 = %1423.0;
  (%1424, %1425, %1426, %var_16913, %1427, %1428)
}

def @func_7606() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1429 = @func_4937() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1430 = @func_3656() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1431 = @func_6994() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1432 = @func_5652() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1433 = @func_4573() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1434 = @func_6507() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1435 = @func_3068() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1436 = %1429.0;
  %1437 = %1430.3;
  %1438 = %1431.0;
  %1439 = %1432.1;
  %1440 = %1433.0;
  %1441 = %1434.0;
  %1442 = %1435.1;
  (%1436, %1437, %1438, %1439, %1440, %1441, %1442)
}

def @func_21292() -> Tensor[(4, 4, 14), float32] {
  @func_10547() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_3242() -> (Tensor[(4, 4, 14), float32],) {
  %1443 = @func_1879() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %1444 = %1443.0;
  (%1444,)
}

def @func_21174(%var_21169: Tensor[(2, 16, 13), float32]) -> Tensor[(2, 16, 13), float32] {
  %1445 = cast(%var_21169, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
  tan(%1445) /* ty=Tensor[(2, 16, 13), float32] */
}

def @func_9598(%var_9594: Tensor[(32, 24), bool]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(12, 4, 16), bool], Tensor[(32, 24), bool]) {
  %1446 = @func_4163() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1447 = cast(%var_9594, dtype="bool") /* ty=Tensor[(32, 24), bool] */;
  %1448 = reshape(%1447, newshape=[12, 4, 16]) /* ty=Tensor[(12, 4, 16), bool] */;
  %1449 = @func_4510() /* ty=Tensor[(4, 4, 14), float32] */;
  %1450 = %1446.0;
  %1451 = @func_7718(%1448) /* ty=Tensor[(12, 4, 16), bool] */;
  (%1449, %1450, %1451, %var_9594)
}

def @func_10440() -> (Tensor[(4, 4, 14), bool],) {
  %1452 = @func_8458() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1453 = %1452.1;
  (%1453,)
}

def @func_9302() -> Tensor[(4, 4, 14), float32] {
  %1454 = @func_3390() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1454.0
}

def @func_18564() -> (Tensor[(4, 4, 14), bool],) {
  %1455 = @func_11011() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool]) */;
  %1456 = %1455.0;
  (%1456,)
}

def @func_16298() -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), bool]) {
  %1457 = @func_14610() /* ty=Tensor[(4, 4, 14), uint64] */;
  %1458 = @func_12520() /* ty=Tensor[(4, 4, 14), bool] */;
  (%1457, %1458)
}

def @func_23260() -> Tensor[(4, 4, 14), float32] {
  %1459 = @func_255() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1459.2
}

def @func_2775() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1460 = @func_1879() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %1461 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1462 = @func_2539() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1463 = %1460.0;
  %1464 = %1461.0;
  %1465 = %1462.5;
  (%1463, %1464, %1465)
}

def @func_1066() -> (Tensor[(4, 4, 14), float32],) {
  %1466 = @func_170() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1466,)
}

def @func_15881() -> Tensor[(4, 4, 14), float32] {
  %1467 = @func_4109() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1467.2
}

def @func_20037(%var_19964: Tensor[(2, 2, 15), float64]) -> (Tensor[(2, 2, 15), float64], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %1468 = cast(%var_19964, dtype="float64") /* ty=Tensor[(2, 2, 15), float64] */;
  %1469 = @func_11721() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %1470 = @func_7446() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1471 = @func_10476() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %1472 = asin(%1468) /* ty=Tensor[(2, 2, 15), float64] */;
  %1473 = %1469.0;
  %1474 = @func_5160() /* ty=Tensor[(4, 4, 14), float32] */;
  %1475 = @func_16341() /* ty=Tensor[(4, 4, 14), float32] */;
  %1476 = @func_13661() /* ty=Tensor[(4, 4, 14), float32] */;
  %1477 = %1470.0;
  %1478 = %1471.0;
  %1479 = @func_16556() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1472, %1473, %1474, %1475, %1476, %1477, %1478, %1479)
}

def @func_20688() -> (Tensor[(4, 4, 14), bool],) {
  %1480 = @func_9296() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1481 = %1480.0;
  (%1481,)
}

def @func_21418(%var_21402: Tensor[(8, 6, 1), uint64]) -> (Tensor[(8, 6, 1), uint64], Tensor[(4, 4, 14), float32]) {
  %1482 = cast(meta[relay.Constant][43] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1483 = cast(%var_21402, dtype="uint64") /* ty=Tensor[(8, 6, 1), uint64] */;
  %1484 = @func_7689() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1485 = bitwise_or(%1482, %1483) /* ty=Tensor[(8, 6, 1), uint64] */;
  %1486 = %1484.1;
  (%1485, %1486)
}

def @func_18044() -> Tensor[(4, 4, 14), float32] {
  @func_1653() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_23315() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %1487 = @func_11422() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1488 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1489 = %1487.0;
  %1490 = @func_10547() /* ty=Tensor[(4, 4, 14), float32] */;
  %1491 = %1488.1;
  (%1489, %1490, %1491)
}

def @func_10776() -> Tensor[(4, 4, 14), float32] {
  %1492 = @func_3733() /* ty=(Tensor[(8, 12, 13), int32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1492.3
}

def @func_307() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %1493 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %1494 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  %1495 = %1493.0;
  (%1494, %1495)
}

def @func_7886() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1496 = @func_3390() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1497 = @func_3242() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1498 = %1496.0;
  %1499 = %1497.0;
  (%1498, %1499)
}

def @func_9050() -> Tensor[(4, 4, 14), float32] {
  %1500 = @func_2272() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1500.0
}

def @func_9554() -> Tensor[(4, 4, 14), float64] {
  %1501 = @func_5071() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1501.0
}

def @func_8920() -> Tensor[(4, 4, 14), float32] {
  %1502 = @func_4109() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1502.2
}

def @func_16341() -> Tensor[(4, 4, 14), float32] {
  %1503 = @func_14532() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1503.0
}

def @func_15487() -> (Tensor[(4, 4, 14), float32],) {
  %1504 = @func_9461() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1505 = %1504.2;
  (%1505,)
}

def @func_13695(%var_13666: Tensor[(16, 8, 9), int32]) -> (Tensor[(16, 8, 9), int32], Tensor[(4, 4, 14), float64], Tensor[(9, 7, 6), int8], Tensor[(378), int8]) {
  %1506 = cast(meta[relay.Constant][44] /* ty=Tensor[(16, 8, 9), int32] */, dtype="int32") /* ty=Tensor[(16, 8, 9), int32] */;
  %1507 = shape_of(%var_13666, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1508 = cast(%var_13666, dtype="int32") /* ty=Tensor[(16, 8, 9), int32] */;
  %1509 = dyn.reshape(%1506, %1507, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1510 = @func_7446() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1511 = cast(meta[relay.Constant][45] /* ty=Tensor[(378), int8] */, dtype="int8") /* ty=Tensor[(378), int8] */;
  %1512 = cast(meta[relay.Constant][45] /* ty=Tensor[(378), int8] */, dtype="int8") /* ty=Tensor[(378), int8] */;
  %1513 = reshape(%1511, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), int8] */;
  %1514 = reshape(%1512, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), int8] */;
  %1515 = bitwise_or(%1508, %1509) /* ty=Tensor[(16, 8, 9), int32] */;
  %1516 = %1510.0;
  %1517 = @func_8751(%1513, %1514) /* ty=Tensor[(9, 7, 6), int8] */;
  (%1515, %1516, %1517, meta[relay.Constant][45] /* ty=Tensor[(378), int8] */)
}

def @func_16806() -> Tensor[(4, 4, 14), float32] {
  @func_27() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_17849() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1518 = @func_7689() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1519 = %1518.0;
  %1520 = @func_870() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1519, %1520)
}

def @func_19956() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1521 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
  %1522 = @func_7824() /* ty=Tensor[(4, 4, 14), float32] */;
  %1523 = %1521.0;
  %1524 = @func_18747() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1522, %1523, %1524)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6960() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %0 = @func_4109() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1 = @func_65() /* ty=Tensor[(4, 4, 14), float32] */;
  %2 = %0.0;
  (%1, %2)
}

def @func_11233() -> (Tensor[(4, 4, 14), float64],) {
  %3 = @func_7446() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %4 = %3.0;
  (%4,)
}

def @func_18471() -> (Tensor[(4, 4, 14), float32],) {
  %7 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %5 = @func_4937() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %6 = %5.0;
    (%6,)
  };
  %7() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_2249() -> (Tensor[(4, 4, 14), float64],) {
  @func_2247() /* ty=(Tensor[(4, 4, 14), float64],) */
}

def @func_11011() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool]) {
  %8 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %9 = @func_1676() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %10 = %8.0;
  %11 = %9.1;
  (%10, %11)
}

def @func_18616() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %12 = @func_16194() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %13 = @func_6994() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %14 = @func_2775() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %15 = %12.1;
  %16 = %13.0;
  %17 = %14.1;
  (%15, %16, %17)
}

def @func_22867(%var_22865: Tensor[(11, 7, 10), float32]) -> Tensor[(11, 7, 10), float32] {
  @func_22864(%var_22865) /* ty=Tensor[(11, 7, 10), float32] */
}

def @func_8146() -> Tensor[(4, 4, 14), float32] {
  %19 = fn () -> Tensor[(4, 4, 14), float32] {
    %18 = @func_7522() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %18.0
  };
  %19() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_15551() -> Tensor[(4, 4, 14), uint64] {
  %20 = @func_5055() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %20.0
}

def @func_3028() -> Tensor[(4, 4, 14), float32] {
  @func_3026() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_11213(%var_11211: Tensor[(11, 6, 2), uint32], %var_11212: Tensor[(11, 6, 2), uint32]) -> (Tensor[(11, 6, 2), bool], Tensor[(11, 6, 2), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_11209(%var_11211, %var_11212) /* ty=(Tensor[(11, 6, 2), bool], Tensor[(11, 6, 2), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_7793() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %24 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %21 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
    %22 = %21.5;
    %23 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
    (%22, %23)
  };
  %24() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_22251() -> Tensor[(4, 4, 14), float32] {
  %25 = @func_21608() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %25.0
}

def @func_13266() -> (Tensor[(4, 4, 14), float64],) {
  %28 = fn () -> (Tensor[(4, 4, 14), float64],) {
    %26 = @func_1445() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
    %27 = %26.0;
    (%27,)
  };
  %28() /* ty=(Tensor[(4, 4, 14), float64],) */
}

def @func_19658() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  @func_19656() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_11390() -> (Tensor[(4, 4, 14), float64],) {
  @func_11388() /* ty=(Tensor[(4, 4, 14), float64],) */
}

def @func_17430() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %29 = @func_5278() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %30 = @func_10515() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %31 = @func_11761() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %32 = @func_4241() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %33 = @func_8428() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %34 = @func_5055() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %35 = @func_4510() /* ty=Tensor[(4, 4, 14), float32] */;
  %36 = %29.0;
  %37 = %30.0;
  %38 = %31.0;
  %39 = @func_6017() /* ty=Tensor[(4, 4, 14), bool] */;
  %40 = %32.1;
  %41 = %33.0;
  %42 = %34.2;
  (%35, %36, %37, %38, %39, %40, %41, %42)
}

def @func_7522() -> (Tensor[(4, 4, 14), float32],) {
  %43 = @func_4735() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %44 = %43.1;
  (%44,)
}

def @func_66() -> Tensor[(4, 4, 14), float32] {
  %45 = fn () -> Tensor[(4, 4, 14), float32] {
    @func_27() /* ty=Tensor[(4, 4, 14), float32] */
  };
  %45() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_3244() -> (Tensor[(4, 4, 14), float32],) {
  @func_3242() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_17654() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_17652() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_19436() -> (Tensor[(4, 4, 14), float32],) {
  %48 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %46 = @func_2539() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %47 = %46.0;
    (%47,)
  };
  %48() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_3298(%var_3288: Tensor[(5, 7, 4), float32], %var_3289: Tensor[(5, 7, 4), float32]) -> Tensor[(5, 7, 4), float32] {
  %49 = cast(%var_3289, dtype="float32") /* ty=Tensor[(5, 7, 4), float32] */;
  %50 = shape_of(%var_3288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%var_3288, dtype="float32") /* ty=Tensor[(5, 7, 4), float32] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%51, %52) /* ty=Tensor[(5, 7, 4), float32] */
}

def @func_11493() -> (Tensor[(4, 4, 14), float32],) {
  @func_11491() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_13943() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  @func_13941() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */
}

def @func_14534() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_14532() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_16463() -> Tensor[(4, 4, 14), float64] {
  %54 = fn () -> Tensor[(4, 4, 14), float64] {
    %53 = @func_1445() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
    %53.0
  };
  %54() /* ty=Tensor[(4, 4, 14), float64] */
}

def @func_20846() -> (Tensor[(4, 4, 14), float32],) {
  @func_20844() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_4001(%var_3999: int16, %var_4000: Tensor[(11, 12, 11), int16]) -> Tensor[(11, 12, 11), bool] {
  %62 = fn (%var_3974: int16, %var_3975: Tensor[(11, 12, 11), int16]) -> Tensor[(11, 12, 11), bool] {
    %55 = cast(%var_3974, dtype="int16") /* ty=int16 */;
    %56 = cast(%var_3975, dtype="int16") /* ty=Tensor[(11, 12, 11), int16] */;
    %57 = add(%55, %56) /* ty=Tensor[(11, 12, 11), int16] */;
    %58 = cast(%57, dtype="bool") /* ty=Tensor[(11, 12, 11), bool] */;
    %59 = shape_of(%var_3975, dtype="int32") /* ty=Tensor[(3), int32] */;
    %60 = cast(%var_3975, dtype="bool") /* ty=Tensor[(11, 12, 11), bool] */;
    %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%60, %61) /* ty=Tensor[(11, 12, 11), bool] */
  };
  %62(%var_3999, %var_4000) /* ty=Tensor[(11, 12, 11), bool] */
}

def @func_7022() -> (Tensor[(4, 4, 14), float32],) {
  %63 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %64 = %63.0;
  (%64,)
}

def @func_6393() -> Tensor[(4, 4, 14), float32] {
  %65 = @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %65.0
}

def @func_19414() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_19412() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_1678() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  @func_1676() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */
}

def @func_13469() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %66 = @func_4430() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %67 = @func_12791() /* ty=Tensor[(4, 4, 14), float32] */;
  %68 = %66.0;
  (%67, %68)
}

def @func_21293() -> Tensor[(4, 4, 14), float32] {
  %69 = fn () -> Tensor[(4, 4, 14), float32] {
    @func_10547() /* ty=Tensor[(4, 4, 14), float32] */
  };
  %69() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_17432() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_17430() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_10000() -> (Tensor[(4, 4, 14), float64],) {
  @func_9998() /* ty=(Tensor[(4, 4, 14), float64],) */
}

def @func_19061() -> (Tensor[(4, 4, 14), float32],) {
  @func_19059() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_256() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %85 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
    %70 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %71 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %72 = %71.0;
    %73 = cast(%72, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
    %74 = log2(%73) /* ty=Tensor[(4, 4, 14), float64] */;
    %75 = cast(%72, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
    %76 = tan(%75) /* ty=Tensor[(4, 4, 14), float64] */;
    %77 = cast(%76, dtype="bool") /* ty=Tensor[(4, 4, 14), bool] */;
    %78 = shape_of(%74, dtype="int32") /* ty=Tensor[(3), int32] */;
    %79 = cast(%74, dtype="bool") /* ty=Tensor[(4, 4, 14), bool] */;
    %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %81 = cast(%76, dtype="float32") /* ty=Tensor[(4, 4, 14), float32] */;
    %82 = %70.0;
    %83 = less(%79, %80) /* ty=Tensor[(4, 4, 14), bool] */;
    %84 = acos(%81) /* ty=Tensor[(4, 4, 14), float32] */;
    (%82, %83, %84)
  };
  %85() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_11422() -> (Tensor[(4, 4, 14), float32],) {
  %86 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
  (%86,)
}

def @func_29() -> Tensor[(4, 4, 14), float32] {
  @func_27() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_10815() -> Tensor[(4, 4, 14), float32] {
  %87 = @func_2470() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %87.1
}

def @func_22063() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %88 = @func_11980() /* ty=(Tensor[(6, 8, 9), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %89 = @func_7430() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %90 = @func_5931() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %91 = @func_7115() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %92 = %88.2;
  %93 = %89.0;
  %94 = %90.1;
  %95 = %91.0;
  (%92, %93, %94, %95)
}

def @func_3609() -> Tensor[(4, 4, 14), float32] {
  @func_3607() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_6296(%var_6292: Tensor[(10, 9, 2), uint32]) -> (Tensor[(10, 9, 2), bool],) {
  %96 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 1, 1), uint32] */, dtype="bool") /* ty=Tensor[(10, 1, 1), bool] */;
  %97 = cast(%var_6292, dtype="bool") /* ty=Tensor[(10, 9, 2), bool] */;
  %98 = not_equal(%96, %97) /* ty=Tensor[(10, 9, 2), bool] */;
  (%98,)
}

def @func_6369() -> (Tensor[(4, 4, 14), uint64],) {
  %100 = fn () -> (Tensor[(4, 4, 14), uint64],) {
    %99 = @func_446() /* ty=Tensor[(4, 4, 14), uint64] */;
    (%99,)
  };
  %100() /* ty=(Tensor[(4, 4, 14), uint64],) */
}

def @func_4737() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_4735() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_10817() -> Tensor[(4, 4, 14), float32] {
  @func_10815() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_18273() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %101 = @func_9461() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %102 = @func_11491() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %103 = %101.1;
  %104 = %102.0;
  (%103, %104)
}

def @func_2273() -> (Tensor[(4, 4, 14), float32],) {
  %107 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %105 = @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %106 = %105.1;
    (%106,)
  };
  %107() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_5072() -> (Tensor[(4, 4, 14), float64],) {
  %110 = fn () -> (Tensor[(4, 4, 14), float64],) {
    %108 = @func_835() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %109 = %108.0;
    (%109,)
  };
  %110() /* ty=(Tensor[(4, 4, 14), float64],) */
}

def @func_10757() -> Tensor[(4, 4, 14), float32] {
  @func_10755() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_14260(%var_14255: int8) -> (Tensor[(1, 2, 3), int8],) {
  %111 = cast(%var_14255, dtype="int8") /* ty=int8 */;
  %112 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 2, 3), int8] */, dtype="int8") /* ty=Tensor[(1, 2, 3), int8] */;
  %113 = maximum(%111, %112) /* ty=Tensor[(1, 2, 3), int8] */;
  (%113,)
}

def @func_11259() -> (Tensor[(4, 4, 14), float32],) {
  @func_11257() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_17003() -> Tensor[(4, 4, 14), float32] {
  %114 = @func_2470() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %114.0
}

def @func_7608() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_7606() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_16710() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_16708() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_19100() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %115 = @func_5055() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %116 = %115.1;
  %117 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
  (%116, %117)
}

def @func_10755() -> Tensor[(4, 4, 14), float32] {
  %118 = @func_2611() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %118.0
}

def @func_5057() -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_5055() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_13379(%var_13377: Tensor[(2, 9, 12), float64], %var_13378: Tensor[(2, 9, 12), float64]) -> (Tensor[(2, 9, 12), float64],) {
  @func_13375(%var_13377, %var_13378) /* ty=(Tensor[(2, 9, 12), float64],) */
}

def @func_11721() -> (Tensor[(4, 4, 14), bool],) {
  %119 = @func_7273() /* ty=Tensor[(4, 4, 14), bool] */;
  (%119,)
}

def @func_9105() -> (Tensor[(4, 4, 14), float32],) {
  %121 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %120 = @func_8920() /* ty=Tensor[(4, 4, 14), float32] */;
    (%120,)
  };
  %121() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_5206() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  @func_5204() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */
}

def @func_4512() -> Tensor[(4, 4, 14), float32] {
  @func_4510() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_4865() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_4863() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_14571() -> (Tensor[(4, 4, 14), uint64],) {
  %123 = fn () -> (Tensor[(4, 4, 14), uint64],) {
    %122 = @func_446() /* ty=Tensor[(4, 4, 14), uint64] */;
    (%122,)
  };
  %123() /* ty=(Tensor[(4, 4, 14), uint64],) */
}

def @func_2875(%var_2874: Tensor[(3, 7, 6), float32]) -> (Tensor[(4, 4, 14), float32], Tensor[(3, 7, 6), float32]) {
  %130 = fn (%var_2844: Tensor[(3, 7, 6), float32]) -> (Tensor[(4, 4, 14), float32], Tensor[(3, 7, 6), float32]) {
    %124 = @func_1445() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
    %125 = cast(%var_2844, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
    %126 = acosh(%125) /* ty=Tensor[(3, 7, 6), float32] */;
    %127 = cast(%126, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
    %128 = %124.1;
    %129 = log(%127) /* ty=Tensor[(3, 7, 6), float32] */;
    (%128, %129)
  };
  %130(%var_2874) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(3, 7, 6), float32]) */
}

def @func_4185() -> Tensor[(4, 4, 14), float64] {
  %132 = fn () -> Tensor[(4, 4, 14), float64] {
    %131 = @func_3474() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %131.0
  };
  %132() /* ty=Tensor[(4, 4, 14), float64] */
}

def @func_21608() -> (Tensor[(4, 4, 14), float32],) {
  %133 = @func_10262() /* ty=Tensor[(4, 4, 14), float32] */;
  (%133,)
}

def @func_141() -> Tensor[(4, 4, 14), float32] {
  @func_27() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_5002() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %134 = @func_4863() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %135 = @func_1848() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %136 = %134.1;
  %137 = %135.1;
  (%136, %137)
}

def @func_5994(%var_5993: Tensor[(1, 5, 2), float64]) -> (Tensor[(1, 5, 2), float64], Tensor[(4, 4, 14), float32]) {
  %142 = fn (%var_5970: Tensor[(1, 5, 2), float64]) -> (Tensor[(1, 5, 2), float64], Tensor[(4, 4, 14), float32]) {
    %138 = cast(%var_5970, dtype="float64") /* ty=Tensor[(1, 5, 2), float64] */;
    %139 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %140 = log2(%138) /* ty=Tensor[(1, 5, 2), float64] */;
    %141 = %139.0;
    (%140, %141)
  };
  %142(%var_5993) /* ty=(Tensor[(1, 5, 2), float64], Tensor[(4, 4, 14), float32]) */
}

def @func_2480() -> (Tensor[(4, 4, 14), float32],) {
  @func_2478() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_22772() -> (Tensor[(4, 4, 14), float32],) {
  %144 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %143 = @func_3751() /* ty=Tensor[(4, 4, 14), float32] */;
    (%143,)
  };
  %144() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_12521() -> Tensor[(4, 4, 14), bool] {
  %146 = fn () -> Tensor[(4, 4, 14), bool] {
    %145 = @func_3390() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %145.2
  };
  %146() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_1849() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %150 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %147 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %148 = %147.0;
    %149 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
    (%148, %149)
  };
  %150() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_10241() -> (Tensor[(4, 4, 14), float32],) {
  %151 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %152 = %151.1;
  (%152,)
}

def @func_11653() -> Tensor[(4, 4, 14), float32] {
  @func_11651() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_10483() -> (Tensor[(4, 4, 14), float32],) {
  @func_10481() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_19794() -> (Tensor[(4, 4, 14), float32],) {
  %155 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %153 = @func_12139() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %154 = %153.3;
    (%154,)
  };
  %155() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_19301(%var_19299: Tensor[(13, 6, 1), uint16], %var_19300: Tensor[(13, 6, 16), uint16]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(13, 14), float32], Tensor[(13, 6, 16), float64], Tensor[(13, 6, 16), float64], Tensor[(14, ?, 13), int8]) {
  %185 = fn (%var_19215: Tensor[(13, 6, 1), uint16], %var_19216: Tensor[(13, 6, 16), uint16]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(13, 14), float32], Tensor[(13, 6, 16), float64], Tensor[(13, 6, 16), float64], Tensor[(14, ?, 13), int8]) {
    %156 = @func_3569() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %157 = @func_13512() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
    %158 = cast(%var_19215, dtype="uint16") /* ty=Tensor[(13, 6, 1), uint16] */;
    %159 = cast(%var_19216, dtype="uint16") /* ty=Tensor[(13, 6, 16), uint16] */;
    %160 = left_shift(%158, %159) /* ty=Tensor[(13, 6, 16), uint16] */;
    %161 = cast(%160, dtype="float64") /* ty=Tensor[(13, 6, 16), float64] */;
    %162 = cast(%var_19216, dtype="float64") /* ty=Tensor[(13, 6, 16), float64] */;
    %163 = cast(%var_19215, dtype="float64") /* ty=Tensor[(13, 6, 1), float64] */;
    %164 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 14), float32] */, dtype="float32") /* ty=Tensor[(13, 14), float32] */;
    %165 = reshape(%164, newshape=[14, 1, 13]) /* ty=Tensor[(14, 1, 13), float32] */;
    %166 = @func_5857(%165) /* ty=(Tensor[(14, ?, 13), uint32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(14, ?, 13), bool]) */;
    %167 = %166.3;
    %168 = cast(%167, dtype="float32") /* ty=Tensor[(14, ?, 13), float32] */;
    %169 = erf(%168) /* ty=Tensor[(14, ?, 13), float32] */;
    %170 = cast(%169, dtype="float32") /* ty=Tensor[(14, ?, 13), float32] */;
    %171 = sqrt(%170) /* ty=Tensor[(14, ?, 13), float32] */;
    %172 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 14), float32] */, dtype="float32") /* ty=Tensor[(13, 14), float32] */;
    %173 = reshape(%172, newshape=[182]) /* ty=Tensor[(182), float32] */;
    %174 = @func_8287(%173) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(182), float32], Tensor[(4, 4, 14), float32]) */;
    %175 = %174.7;
    %176 = cast(%175, dtype="int8") /* ty=Tensor[(182), int8] */;
    %177 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
    %178 = cast(%171, dtype="int8") /* ty=Tensor[(14, ?, 13), int8] */;
    %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %180 = %156.0;
    %181 = %157.1;
    %182 = log10(%161) /* ty=Tensor[(13, 6, 16), float64] */;
    %183 = maximum(%162, %163) /* ty=Tensor[(13, 6, 16), float64] */;
    %184 = right_shift(%178, %179) /* ty=Tensor[(14, ?, 13), int8] */;
    (%180, %181, meta[relay.Constant][2] /* ty=Tensor[(13, 14), float32] */, %182, %183, %184)
  };
  %185(%var_19299, %var_19300) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(13, 14), float32], Tensor[(13, 6, 16), float64], Tensor[(13, 6, 16), float64], Tensor[(14, ?, 13), int8]) */
}

def @func_130() -> (Tensor[(4, 4, 14), bool],) {
  @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */
}

def @func_21034() -> Tensor[(4, 4, 14), float32] {
  @func_12791() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_14717(%var_14715: Tensor[(1, 6, 7), int32], %var_14716: Tensor[(3, 6, 7), int32]) -> Tensor[(3, 6, 7), bool] {
  @func_14713(%var_14715, %var_14716) /* ty=Tensor[(3, 6, 7), bool] */
}

def @func_21865() -> Tensor[(4, 4, 14), float32] {
  @func_21863() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_1305() -> (Tensor[(4, 4, 14), float32],) {
  %186 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  (%186,)
}

def @func_3026() -> Tensor[(4, 4, 14), float32] {
  @func_65() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_7718(%var_7706: Tensor[(12, 4, 16), bool]) -> Tensor[(12, 4, 16), bool] {
  %187 = cast(%var_7706, dtype="bool") /* ty=Tensor[(12, 4, 16), bool] */;
  %188 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(12, 4, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 4, 16), bool] */, dtype="bool") /* ty=Tensor[(12, 4, 16), bool] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%189, %190) /* ty=Tensor[(12, 4, 16), bool] */
}

def @func_10801() -> (Tensor[(4, 4, 14), float32],) {
  %192 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %191 = @func_10496() /* ty=Tensor[(4, 4, 14), float32] */;
    (%191,)
  };
  %192() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_18033() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_18031() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_726() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) {
  %210 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) {
    %193 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %194 = @func_255() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %195 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %196 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
    %197 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
    %198 = @func_446() /* ty=Tensor[(4, 4, 14), uint64] */;
    %199 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 4, 14), uint64] */, dtype="uint64") /* ty=Tensor[(4, 4, 14), uint64] */;
    %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(3), int32] */;
    %201 = cast(%198, dtype="uint64") /* ty=Tensor[(4, 4, 14), uint64] */;
    %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %203 = %193.0;
    %204 = %194.2;
    %205 = %195.1;
    %206 = %196.0;
    %207 = %197.0;
    %208 = @func_170() /* ty=Tensor[(4, 4, 14), float32] */;
    %209 = left_shift(%201, %202) /* ty=Tensor[(4, 4, 14), uint64] */;
    (%203, %204, %205, %206, %207, %208, %209)
  };
  %210() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */
}

def @func_15039() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %211 = @func_14343() /* ty=Tensor[(4, 4, 14), float32] */;
  %212 = @func_10547() /* ty=Tensor[(4, 4, 14), float32] */;
  (%211, %212)
}

def @func_6890() -> (Tensor[(4, 4, 14), float32],) {
  %213 = @func_5519() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %214 = %213.0;
  (%214,)
}

def @func_16195() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %219 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %215 = @func_7886() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %216 = @func_2209() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %217 = %215.0;
    %218 = %216.0;
    (%217, %218)
  };
  %219() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_19849() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], int16, Tensor[(1452), int16]) {
  %230 = fn () -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], int16, Tensor[(1452), int16]) {
    %220 = @func_4678() /* ty=(Tensor[(4, 4, 14), bool],) */;
    %221 = @func_10515() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %222 = cast(meta[relay.Constant][5] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %223 = cast(meta[relay.Constant][6] /* ty=Tensor[(1452), int16] */, dtype="int16") /* ty=Tensor[(1452), int16] */;
    %224 = reshape(%222, newshape=[]) /* ty=int16 */;
    %225 = reshape(%223, newshape=[1452]) /* ty=Tensor[(1452), int16] */;
    %226 = @func_9165(%224, %225) /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(11, 12, 11), bool], int16, Tensor[(1452), int16], Tensor[(4, 4, 14), uint16]) */;
    %227 = %220.0;
    %228 = %221.0;
    %229 = %226.0;
    (%227, %228, %229, meta[relay.Constant][5] /* ty=int16 */, meta[relay.Constant][6] /* ty=Tensor[(1452), int16] */)
  };
  %230() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], int16, Tensor[(1452), int16]) */
}

def @func_4863() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %231 = @func_1595() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %232 = @func_2272() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %233 = @func_3068() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %234 = @func_2752() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %235 = %231.1;
  %236 = %232.0;
  %237 = %233.0;
  %238 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  %239 = %234.0;
  (%235, %236, %237, %238, %239)
}

def @func_19886() -> Tensor[(5, 7, 1), bool] {
  %240 = cast(8 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %241 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 7, 1), int32] */, dtype="bool") /* ty=Tensor[(5, 7, 1), bool] */;
  less_equal(%240, %241) /* ty=Tensor[(5, 7, 1), bool] */
}

def @func_1446() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  %245 = fn () -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
    %242 = @func_905() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %243 = %242.0;
    %244 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
    (%243, %244)
  };
  %245() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */
}

def @func_143() -> Tensor[(4, 4, 14), float32] {
  @func_141() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_128() -> (Tensor[(4, 4, 14), bool],) {
  %246 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  %247 = @func_65() /* ty=Tensor[(4, 4, 14), float32] */;
  %248 = cast(%247, dtype="bool") /* ty=Tensor[(4, 4, 14), bool] */;
  %249 = shape_of(%246, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%246, dtype="bool") /* ty=Tensor[(4, 4, 14), bool] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %252 = greater_equal(%250, %251) /* ty=Tensor[(4, 4, 14), bool] */;
  (%252,)
}

def @func_7432() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  @func_7430() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */
}

def @func_18275() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  @func_18273() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_11013() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool]) {
  @func_11011() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool]) */
}

def @func_6019() -> Tensor[(4, 4, 14), bool] {
  @func_6017() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_10665() -> Tensor[(4, 4, 14), float64] {
  @func_10663() /* ty=Tensor[(4, 4, 14), float64] */
}

def @func_14873() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %262 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %253 = @func_14209() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %254 = @func_5559() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %255 = @func_14532() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %256 = %253.0;
    %257 = %254.0;
    %258 = @func_10168() /* ty=Tensor[(4, 4, 14), bool] */;
    %259 = @func_3607() /* ty=Tensor[(4, 4, 14), float32] */;
    %260 = %255.2;
    %261 = @func_12999() /* ty=Tensor[(4, 4, 14), float32] */;
    (%256, %257, %258, %259, %260, %261)
  };
  %262() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_14754() -> Tensor[(4, 4, 14), float32] {
  %263 = fn () -> Tensor[(4, 4, 14), float32] {
    @func_12608() /* ty=Tensor[(4, 4, 14), float32] */
  };
  %263() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_15041() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_15039() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_10549() -> Tensor[(4, 4, 14), float32] {
  @func_10547() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_18031() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %264 = @func_4599() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %265 = @func_10370() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %266 = %264.0;
  %267 = %265.0;
  (%266, %267)
}

def @func_7690() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %272 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %268 = @func_5652() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %269 = @func_2539() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %270 = %268.3;
    %271 = %269.4;
    (%270, %271)
  };
  %272() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_22729() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  @func_22727() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */
}

def @func_14434() -> Tensor[(4, 4, 14), float32] {
  %274 = fn () -> Tensor[(4, 4, 14), float32] {
    %273 = @func_5278() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %273.0
  };
  %274() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_18315() -> (Tensor[(4, 4, 14), float32],) {
  %277 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %275 = @func_18273() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %276 = %275.1;
    (%276,)
  };
  %277() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_13513() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %281 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
    %278 = @func_5002() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %279 = %278.0;
    %280 = @func_13491() /* ty=Tensor[(4, 4, 14), float64] */;
    (%279, %280)
  };
  %281() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */
}

def @func_2753() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %285 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %282 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %283 = @func_170() /* ty=Tensor[(4, 4, 14), float32] */;
    %284 = %282.1;
    (%283, %284)
  };
  %285() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_16077(%var_16069: Tensor[(15), uint32]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(5, 13, 15), bool], Tensor[(15), uint32], Tensor[(975), uint32]) {
  %286 = @func_10481() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %287 = @func_15039() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %288 = @func_4863() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %289 = cast(%var_16069, dtype="uint32") /* ty=Tensor[(15), uint32] */;
  %290 = cast(meta[relay.Constant][8] /* ty=Tensor[(975), uint32] */, dtype="uint32") /* ty=Tensor[(975), uint32] */;
  %291 = reshape(%289, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint32] */;
  %292 = reshape(%290, newshape=[5, 13, 15]) /* ty=Tensor[(5, 13, 15), uint32] */;
  %293 = %286.0;
  %294 = %287.1;
  %295 = %288.0;
  %296 = @func_4510() /* ty=Tensor[(4, 4, 14), float32] */;
  %297 = @func_10598(%291, %292) /* ty=Tensor[(5, 13, 15), bool] */;
  (%293, %294, %295, %296, %297, %var_16069, meta[relay.Constant][8] /* ty=Tensor[(975), uint32] */)
}

def @func_11723() -> (Tensor[(4, 4, 14), bool],) {
  @func_11721() /* ty=(Tensor[(4, 4, 14), bool],) */
}

def @func_2612() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %306 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
    %298 = @func_2209() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %299 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
    %300 = cast(%299, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
    %301 = reshape(%300, newshape=[4, 4, 14]) /* ty=Tensor[(4, 4, 14), float64] */;
    %302 = @func_1039(%301) /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), uint16]) */;
    %303 = %298.0;
    %304 = @func_65() /* ty=Tensor[(4, 4, 14), float32] */;
    %305 = %302.0;
    (%303, %304, %299, %305)
  };
  %306() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */
}

def @func_10954() -> (Tensor[(4, 4, 14), uint64],) {
  %308 = fn () -> (Tensor[(4, 4, 14), uint64],) {
    %307 = @func_446() /* ty=Tensor[(4, 4, 14), uint64] */;
    (%307,)
  };
  %308() /* ty=(Tensor[(4, 4, 14), uint64],) */
}

def @func_5337() -> (Tensor[(4, 4, 14), float32],) {
  %309 = @func_1595() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %310 = %309.0;
  (%310,)
}

def @func_5004() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_5002() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_6395() -> Tensor[(4, 4, 14), float32] {
  @func_6393() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_1881() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  @func_1879() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */
}

def @func_23261() -> Tensor[(4, 4, 14), float32] {
  %312 = fn () -> Tensor[(4, 4, 14), float32] {
    %311 = @func_255() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %311.2
  };
  %312() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_13000() -> Tensor[(4, 4, 14), float32] {
  %314 = fn () -> Tensor[(4, 4, 14), float32] {
    %313 = @func_4241() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %313.1
  };
  %314() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_4600() -> (Tensor[(4, 4, 14), float32],) {
  %316 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %315 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
    (%315,)
  };
  %316() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_20302() -> Tensor[(4, 4, 14), float32] {
  @func_20300() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_20040(%var_20038: Tensor[(2, 2, 15), float64]) -> (Tensor[(2, 2, 15), float64], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  @func_20037(%var_20038) /* ty=(Tensor[(2, 2, 15), float64], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_18224() -> (Tensor[(4, 4, 14), float32],) {
  %319 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %317 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %318 = %317.0;
    (%318,)
  };
  %319() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_16244() -> (Tensor[(4, 4, 14), float32],) {
  %321 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %320 = @func_8145() /* ty=Tensor[(4, 4, 14), float32] */;
    (%320,)
  };
  %321() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_10598(%var_10574: Tensor[(1, 1, 15), uint32], %var_10575: Tensor[(5, 13, 15), uint32]) -> Tensor[(5, 13, 15), bool] {
  %322 = cast(%var_10574, dtype="bool") /* ty=Tensor[(1, 1, 15), bool] */;
  %323 = cast(%var_10575, dtype="bool") /* ty=Tensor[(5, 13, 15), bool] */;
  less(%322, %323) /* ty=Tensor[(5, 13, 15), bool] */
}

def @func_16101() -> Tensor[(4, 4, 14), bool] {
  %325 = fn () -> Tensor[(4, 4, 14), bool] {
    %324 = @func_8406() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %324.0
  };
  %325() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_17522() -> (Tensor[(4, 4, 14), bool],) {
  @func_17520() /* ty=(Tensor[(4, 4, 14), bool],) */
}

def @func_10128() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %330 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %326 = @func_9930() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %327 = @func_2775() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %328 = %326.0;
    %329 = %327.2;
    (%328, %329)
  };
  %330() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_6362() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %335 = fn () -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
    %331 = @func_1676() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %332 = @func_2775() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %333 = %331.1;
    %334 = %332.1;
    (%333, %334)
  };
  %335() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_12961() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %344 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %336 = @func_2752() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %337 = @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %338 = @func_6446() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %339 = @func_12608() /* ty=Tensor[(4, 4, 14), float32] */;
    %340 = %336.0;
    %341 = %337.0;
    %342 = @func_11729() /* ty=Tensor[(4, 4, 14), float32] */;
    %343 = %338.1;
    (%339, %340, %341, %342, %343)
  };
  %344() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_17934() -> (Tensor[(4, 4, 14), float64],) {
  %345 = @func_10663() /* ty=Tensor[(4, 4, 14), float64] */;
  (%345,)
}

def @func_12077() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %350 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %346 = @func_4163() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %347 = @func_5337() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %348 = %346.0;
    %349 = %347.0;
    (%348, %349)
  };
  %350() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_15153() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_15151() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_3571() -> (Tensor[(4, 4, 14), float32],) {
  @func_3569() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_12279() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %351 = @func_7161() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %352 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  %353 = %351.0;
  (%352, %353)
}

def @func_10778() -> Tensor[(4, 4, 14), float32] {
  @func_10776() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_6446() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %354 = @func_5002() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %355 = @func_6157() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %356 = %354.1;
  %357 = %355.0;
  (%356, %357)
}

def @func_13842() -> Tensor[(4, 4, 14), bool] {
  %359 = fn () -> Tensor[(4, 4, 14), bool] {
    %358 = @func_4863() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %358.2
  };
  %359() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_5119() -> (Tensor[(4, 4, 14), float32],) {
  %360 = @func_3656() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %361 = %360.3;
  (%361,)
}

def @func_170() -> Tensor[(4, 4, 14), float32] {
  @func_65() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_9931() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %367 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %362 = @func_3569() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %363 = @func_6446() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %364 = %362.0;
    %365 = %363.0;
    %366 = @func_3424() /* ty=Tensor[(4, 4, 14), float32] */;
    (%364, %365, %366)
  };
  %367() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_10870() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %368 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %369 = @func_9382() /* ty=Tensor[(4, 4, 14), bool] */;
  %370 = %368.0;
  (%369, %370)
}

def @func_10262() -> Tensor[(4, 4, 14), float32] {
  %371 = @func_2478() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %371.0
}

def @func_11470() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  @func_11468() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_19000() -> (Tensor[(4, 4, 14), float32], Tensor[(2, 9, 12), float64], Tensor[(12, 18), float64]) {
  @func_18998() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(2, 9, 12), float64], Tensor[(12, 18), float64]) */
}

def @func_11946() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %372 = @func_6605() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %373 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %374 = %372.0;
  %375 = %373.0;
  (%374, %375)
}

def @func_12631() -> Tensor[(4, 4, 14), float32] {
  @func_12629() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_9297() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %379 = fn () -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
    %376 = @func_1676() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %377 = %376.1;
    %378 = @func_9050() /* ty=Tensor[(4, 4, 14), float32] */;
    (%377, %378)
  };
  %379() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_15489() -> (Tensor[(4, 4, 14), float32],) {
  @func_15487() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_18257() -> (Tensor[(4, 4, 14), float32], Tensor[(10, 9, 2), bool], Tensor[(1, 180), uint32]) {
  %385 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(10, 9, 2), bool], Tensor[(1, 180), uint32]) {
    %380 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 180), uint32] */, dtype="uint32") /* ty=Tensor[(1, 180), uint32] */;
    %381 = reshape(%380, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), uint32] */;
    %382 = @func_6296(%381) /* ty=(Tensor[(10, 9, 2), bool],) */;
    %383 = @func_14433() /* ty=Tensor[(4, 4, 14), float32] */;
    %384 = %382.0;
    (%383, %384, meta[relay.Constant][9] /* ty=Tensor[(1, 180), uint32] */)
  };
  %385() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(10, 9, 2), bool], Tensor[(1, 180), uint32]) */
}

def @func_308() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %389 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
    %386 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
    %387 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
    %388 = %386.0;
    (%387, %388)
  };
  %389() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */
}

def @func_6452() -> (Tensor[(4, 4, 14), float32],) {
  %392 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %390 = @func_1245() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %391 = %390.1;
    (%391,)
  };
  %392() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_151() -> (Tensor[(4, 4, 14), float32],) {
  %393 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
  (%393,)
}

def @func_3569() -> (Tensor[(4, 4, 14), float32],) {
  %394 = @func_1879() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %395 = %394.0;
  (%395,)
}

def @func_17084() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_17082() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_7751() -> Tensor[(4, 4, 14), float32] {
  @func_7749() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_3607() -> Tensor[(4, 4, 14), float32] {
  %396 = @func_1595() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %396.0
}

def @func_21177(%var_21175: Tensor[(2, 16, 13), float32]) -> Tensor[(2, 16, 13), float32] {
  @func_21174(%var_21175) /* ty=Tensor[(2, 16, 13), float32] */
}

def @func_21952() -> Tensor[(4, 4, 14), float32] {
  %398 = fn () -> Tensor[(4, 4, 14), float32] {
    %397 = @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %397.0
  };
  %398() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_12458() -> (Tensor[(4, 4, 14), float32],) {
  @func_12456() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_5339() -> (Tensor[(4, 4, 14), float32],) {
  @func_5337() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_9690(%var_9688: int16) -> (Tensor[(4, 4, 14), float32], Tensor[(11, 12, 11), bool], int16, Tensor[(1452), int16], Tensor[(4, 4, 14), float32]) {
  @func_9687(%var_9688) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(11, 12, 11), bool], int16, Tensor[(1452), int16], Tensor[(4, 4, 14), float32]) */
}

def @func_9860() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %404 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
    %399 = @func_3733() /* ty=(Tensor[(8, 12, 13), int32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %400 = @func_7446() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %401 = @func_8145() /* ty=Tensor[(4, 4, 14), float32] */;
    %402 = %399.6;
    %403 = %400.0;
    (%401, %402, %403)
  };
  %404() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */
}

def @func_18100() -> Tensor[(4, 4, 14), float32] {
  @func_18098() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_12793() -> Tensor[(4, 4, 14), float32] {
  @func_12791() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_12539() -> (Tensor[(4, 4, 14), float32],) {
  @func_12537() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_9998() -> (Tensor[(4, 4, 14), float64],) {
  %405 = @func_5611() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float64]) */;
  %406 = %405.1;
  (%406,)
}

def @func_11799() -> (Tensor[(4, 4, 14), float32],) {
  %407 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  (%407,)
}

def @func_13375(%var_13366: Tensor[(2, 9, 12), float64], %var_13367: Tensor[(2, 9, 12), float64]) -> (Tensor[(2, 9, 12), float64],) {
  %408 = cast(%var_13367, dtype="float64") /* ty=Tensor[(2, 9, 12), float64] */;
  %409 = shape_of(%var_13366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%var_13366, dtype="float64") /* ty=Tensor[(2, 9, 12), float64] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %412 = floor_mod(%410, %411) /* ty=Tensor[(2, 9, 12), float64] */;
  (%412,)
}

def @func_15284(%var_15282: Tensor[(1, 13, 16), int8]) -> (Tensor[(15, 13, 16), bool],) {
  @func_15281(%var_15282) /* ty=(Tensor[(15, 13, 16), bool],) */
}

def @func_3824(%var_3809: Tensor[(126), float32]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(126), float32]) {
  %413 = @func_1720() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %414 = @func_1445() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %415 = cast(%var_3809, dtype="float32") /* ty=Tensor[(126), float32] */;
  %416 = reshape(%415, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %417 = @func_2873(%416) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(3, 7, 6), float32]) */;
  %418 = %413.2;
  %419 = %414.1;
  %420 = %417.0;
  (%418, %419, %420, %var_3809)
}

def @func_4573() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %421 = @func_4163() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %422 = @func_3121() /* ty=Tensor[(4, 4, 14), float32] */;
  %423 = %421.0;
  (%422, %423)
}

def @func_10481() -> (Tensor[(4, 4, 14), float32],) {
  %424 = @func_6605() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %425 = %424.1;
  (%425,)
}

def @func_22470(%var_22468: Tensor[(9, 6, 6), bool], %var_22469: Tensor[(9, 6, 6), bool]) -> (Tensor[(9, 6, 6), bool], Tensor[(4, 4, 14), bool]) {
  @func_22466(%var_22468, %var_22469) /* ty=(Tensor[(9, 6, 6), bool], Tensor[(4, 4, 14), bool]) */
}

def @func_386() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %426 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %427 = @func_170() /* ty=Tensor[(4, 4, 14), float32] */;
  %428 = %426.0;
  (%427, %428)
}

def @func_6509() -> (Tensor[(4, 4, 14), float32],) {
  @func_6507() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_14909() -> (Tensor[(9, 7, 3), float64], Tensor[(4, 4, 14), float32]) {
  %433 = fn () -> (Tensor[(9, 7, 3), float64], Tensor[(4, 4, 14), float32]) {
    %429 = cast(meta[relay.Constant][10] /* ty=Tensor[(9, 7, 3), float64] */, dtype="float64") /* ty=Tensor[(9, 7, 3), float64] */;
    %430 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %431 = erf(%429) /* ty=Tensor[(9, 7, 3), float64] */;
    %432 = %430.0;
    (%431, %432)
  };
  %433() /* ty=(Tensor[(9, 7, 3), float64], Tensor[(4, 4, 14), float32]) */
}

def @func_9168(%var_9166: int16, %var_9167: Tensor[(1452), int16]) -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(11, 12, 11), bool], int16, Tensor[(1452), int16], Tensor[(4, 4, 14), uint16]) {
  %446 = fn (%var_9158: int16, %var_9159: Tensor[(1452), int16]) -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(11, 12, 11), bool], int16, Tensor[(1452), int16], Tensor[(4, 4, 14), uint16]) {
    %434 = @func_4573() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %435 = cast(%var_9158, dtype="int16") /* ty=int16 */;
    %436 = cast(%var_9159, dtype="int16") /* ty=Tensor[(1452), int16] */;
    %437 = reshape(%435, newshape=[]) /* ty=int16 */;
    %438 = reshape(%436, newshape=[11, 12, 11]) /* ty=Tensor[(11, 12, 11), int16] */;
    %439 = @func_7273() /* ty=Tensor[(4, 4, 14), bool] */;
    %440 = cast(%439, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
    %441 = reshape(%440, newshape=[4, 4, 14]) /* ty=Tensor[(4, 4, 14), float64] */;
    %442 = @func_1039(%441) /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), uint16]) */;
    %443 = %434.0;
    %444 = @func_3998(%437, %438) /* ty=Tensor[(11, 12, 11), bool] */;
    %445 = %442.1;
    (%439, %443, %444, %var_9158, %var_9159, %445)
  };
  %446(%var_9166, %var_9167) /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(11, 12, 11), bool], int16, Tensor[(1452), int16], Tensor[(4, 4, 14), uint16]) */
}

def @func_11762() -> (Tensor[(4, 4, 14), bool],) {
  %449 = fn () -> (Tensor[(4, 4, 14), bool],) {
    %447 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
    %448 = %447.0;
    (%448,)
  };
  %449() /* ty=(Tensor[(4, 4, 14), bool],) */
}

def @func_10887() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_10885() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_20974() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_20972() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_20037(%var_19964: Tensor[(2, 2, 15), float64]) -> (Tensor[(2, 2, 15), float64], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %450 = cast(%var_19964, dtype="float64") /* ty=Tensor[(2, 2, 15), float64] */;
  %451 = @func_11721() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %452 = @func_7446() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %453 = @func_10476() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %454 = asin(%450) /* ty=Tensor[(2, 2, 15), float64] */;
  %455 = %451.0;
  %456 = @func_5160() /* ty=Tensor[(4, 4, 14), float32] */;
  %457 = @func_16341() /* ty=Tensor[(4, 4, 14), float32] */;
  %458 = @func_13661() /* ty=Tensor[(4, 4, 14), float32] */;
  %459 = %452.0;
  %460 = %453.0;
  %461 = @func_16556() /* ty=Tensor[(4, 4, 14), float32] */;
  (%454, %455, %456, %457, %458, %459, %460, %461)
}

def @func_23402(%var_23396: Tensor[(112), uint32]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(14, 3, 8), bool], Tensor[(112), uint32]) {
  %462 = @func_12279() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %463 = @func_1720() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %464 = cast(%var_23396, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %465 = reshape(%464, newshape=[14, 1, 8]) /* ty=Tensor[(14, 1, 8), uint32] */;
  %466 = @func_16024(%465) /* ty=(Tensor[(14, 3, 8), bool], Tensor[(14, 1, 8), float64]) */;
  %467 = @func_12999() /* ty=Tensor[(4, 4, 14), float32] */;
  %468 = %462.0;
  %469 = %463.1;
  %470 = %466.0;
  (%467, %468, %469, %470, %var_23396)
}

def @func_7721(%var_7719: Tensor[(12, 4, 16), bool]) -> Tensor[(12, 4, 16), bool] {
  @func_7718(%var_7719) /* ty=Tensor[(12, 4, 16), bool] */
}

def @func_3658() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_3656() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_11209(%var_11181: Tensor[(11, 6, 2), uint32], %var_11193: Tensor[(11, 6, 2), uint32]) -> (Tensor[(11, 6, 2), bool], Tensor[(11, 6, 2), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %471 = cast(%var_11181, dtype="bool") /* ty=Tensor[(11, 6, 2), bool] */;
  %472 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(11, 6, 2), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 6, 2), uint32] */, dtype="bool") /* ty=Tensor[(11, 6, 2), bool] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %475 = cast(%var_11193, dtype="uint64") /* ty=Tensor[(11, 6, 2), uint64] */;
  %476 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(11, 6, 2), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 6, 2), uint32] */, dtype="uint64") /* ty=Tensor[(11, 6, 2), uint64] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %479 = @func_10885() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %480 = @func_7522() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %481 = @func_7022() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %482 = equal(%473, %474) /* ty=Tensor[(11, 6, 2), bool] */;
  %483 = bitwise_or(%477, %478) /* ty=Tensor[(11, 6, 2), uint64] */;
  %484 = %479.1;
  %485 = %480.0;
  %486 = %481.0;
  (%482, %483, %484, %485, %486)
}

def @func_16300() -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), bool]) {
  @func_16298() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), bool]) */
}

def @func_14122(%var_14120: Tensor[(16, 10, 3), float64], %var_14121: Tensor[(20), float64]) -> (Tensor[(16, 10, 3), float64], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float64], Tensor[(20), float64], Tensor[(4, 4, 14), float32], Tensor[(16, 10, 3), float32]) {
  %499 = fn (%var_14058: Tensor[(16, 10, 3), float64], %var_14091: Tensor[(20), float64]) -> (Tensor[(16, 10, 3), float64], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float64], Tensor[(20), float64], Tensor[(4, 4, 14), float32], Tensor[(16, 10, 3), float32]) {
    %487 = cast(meta[relay.Constant][12] /* ty=Tensor[(16, 1, 3), float64] */, dtype="float64") /* ty=Tensor[(16, 1, 3), float64] */;
    %488 = cast(%var_14058, dtype="float64") /* ty=Tensor[(16, 10, 3), float64] */;
    %489 = @func_1445() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
    %490 = cast(%var_14091, dtype="float64") /* ty=Tensor[(20), float64] */;
    %491 = reshape(%490, newshape=[1, 4, 5]) /* ty=Tensor[(1, 4, 5), float64] */;
    %492 = @func_13308(%491) /* ty=(Tensor[(1, 4, 5), float64], Tensor[(4, 4, 14), float64]) */;
    %493 = cast(%var_14058, dtype="float32") /* ty=Tensor[(16, 10, 3), float32] */;
    %494 = mod(%487, %488) /* ty=Tensor[(16, 10, 3), float64] */;
    %495 = %489.0;
    %496 = %492.1;
    %497 = @func_8569() /* ty=Tensor[(4, 4, 14), float32] */;
    %498 = sin(%493) /* ty=Tensor[(16, 10, 3), float32] */;
    (%494, %495, %496, %var_14091, %497, %498)
  };
  %499(%var_14120, %var_14121) /* ty=(Tensor[(16, 10, 3), float64], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float64], Tensor[(20), float64], Tensor[(4, 4, 14), float32], Tensor[(16, 10, 3), float32]) */
}

def @func_13311(%var_13309: Tensor[(1, 4, 5), float64]) -> (Tensor[(1, 4, 5), float64], Tensor[(4, 4, 14), float64]) {
  @func_13308(%var_13309) /* ty=(Tensor[(1, 4, 5), float64], Tensor[(4, 4, 14), float64]) */
}

def @func_7162() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %504 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %500 = @func_4241() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %501 = @func_6890() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %502 = %500.1;
    %503 = %501.0;
    (%502, %503)
  };
  %504() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_1068() -> (Tensor[(4, 4, 14), float32],) {
  @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_17849() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %505 = @func_7689() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %506 = %505.0;
  %507 = @func_870() /* ty=Tensor[(4, 4, 14), float32] */;
  (%506, %507)
}

def @func_18872() -> (Tensor[(4, 4, 14), float32],) {
  %510 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %508 = @func_5796() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %509 = %508.1;
    (%509,)
  };
  %510() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_13781() -> (Tensor[(4, 4, 14), float32],) {
  %513 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %511 = @func_4487() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %512 = %511.0;
    (%512,)
  };
  %513() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_3282() -> (Tensor[(4, 4, 14), float32],) {
  @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_20699() -> Tensor[(4, 4, 14), bool] {
  @func_20697() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_1595() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %514 = @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %515 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %516 = %514.0;
  %517 = %515.0;
  (%516, %517)
}

def @func_22294() -> (Tensor[(4, 4, 14), bool],) {
  %518 = @func_7273() /* ty=Tensor[(4, 4, 14), bool] */;
  (%518,)
}

def @func_2832() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %519 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %520 = @func_2470() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %521 = %519.2;
  %522 = %520.0;
  (%521, %522)
}

def @func_9726(%var_9723: Tensor[(9, 11, 5), uint64], %var_9724: Tensor[(9, 11, 5), uint64], %var_9725: Tensor[(10), float64]) -> (Tensor[(9, 11, 5), bool], Tensor[(4, 4, 14), float32], Tensor[(10), float64], Tensor[(11, 12, 11), bool], int16) {
  %536 = fn (%var_9697: Tensor[(9, 11, 5), uint64], %var_9698: Tensor[(9, 11, 5), uint64], %var_9716: Tensor[(10), float64]) -> (Tensor[(9, 11, 5), bool], Tensor[(4, 4, 14), float32], Tensor[(10), float64], Tensor[(11, 12, 11), bool], int16) {
    %523 = cast(%var_9698, dtype="bool") /* ty=Tensor[(9, 11, 5), bool] */;
    %524 = shape_of(%var_9697, dtype="int32") /* ty=Tensor[(3), int32] */;
    %525 = cast(%var_9697, dtype="bool") /* ty=Tensor[(9, 11, 5), bool] */;
    %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %527 = cast(%var_9716, dtype="float64") /* ty=Tensor[(10), float64] */;
    %528 = reshape(%527, newshape=[1, 5, 2]) /* ty=Tensor[(1, 5, 2), float64] */;
    %529 = @func_5992(%528) /* ty=(Tensor[(1, 5, 2), float64], Tensor[(4, 4, 14), float32]) */;
    %530 = cast(meta[relay.Constant][13] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %531 = reshape(%530, newshape=[]) /* ty=int16 */;
    %532 = @func_9687(%531) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(11, 12, 11), bool], int16, Tensor[(1452), int16], Tensor[(4, 4, 14), float32]) */;
    %533 = not_equal(%525, %526) /* ty=Tensor[(9, 11, 5), bool] */;
    %534 = %529.1;
    %535 = %532.1;
    (%533, %534, %var_9716, %535, meta[relay.Constant][13] /* ty=int16 */)
  };
  %536(%var_9723, %var_9724, %var_9725) /* ty=(Tensor[(9, 11, 5), bool], Tensor[(4, 4, 14), float32], Tensor[(10), float64], Tensor[(11, 12, 11), bool], int16) */
}

def @func_13316() -> (Tensor[(4, 4, 14), float32],) {
  %538 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %537 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
    (%537,)
  };
  %538() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_20367() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_20365() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_22098() -> (Tensor[(4, 4, 14), float32],) {
  %541 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %539 = @func_20278() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %540 = %539.0;
    (%540,)
  };
  %541() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_23317() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  @func_23315() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */
}

def @func_4242() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %546 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %542 = @func_2832() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %543 = @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %544 = %542.1;
    %545 = %543.0;
    (%544, %545)
  };
  %546() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_3476() -> (Tensor[(4, 4, 14), float64],) {
  @func_3474() /* ty=(Tensor[(4, 4, 14), float64],) */
}

def @func_14644() -> (Tensor[(4, 4, 14), float32],) {
  @func_14642() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_8570() -> Tensor[(4, 4, 14), float32] {
  %548 = fn () -> Tensor[(4, 4, 14), float32] {
    %547 = @func_3068() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %547.1
  };
  %548() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_1554(%var_1552: int16, %var_1553: Tensor[(1, 2, 9), int16]) -> (Tensor[(1, 2, 9), int16], Tensor[(4, 4, 14), float32]) {
  %554 = fn (%var_1538: int16, %var_1539: Tensor[(1, 2, 9), int16]) -> (Tensor[(1, 2, 9), int16], Tensor[(4, 4, 14), float32]) {
    %549 = cast(%var_1538, dtype="int16") /* ty=int16 */;
    %550 = cast(%var_1539, dtype="int16") /* ty=Tensor[(1, 2, 9), int16] */;
    %551 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
    %552 = subtract(%549, %550) /* ty=Tensor[(1, 2, 9), int16] */;
    %553 = %551.0;
    (%552, %553)
  };
  %554(%var_1552, %var_1553) /* ty=(Tensor[(1, 2, 9), int16], Tensor[(4, 4, 14), float32]) */
}

def @func_1163() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %565 = fn () -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
    %555 = @func_870() /* ty=Tensor[(4, 4, 14), float32] */;
    %556 = cast(%555, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
    %557 = @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %558 = atanh(%556) /* ty=Tensor[(4, 4, 14), float64] */;
    %559 = cast(%558, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
    %560 = reshape(%559, newshape=[4, 4, 14]) /* ty=Tensor[(4, 4, 14), float64] */;
    %561 = @func_1039(%560) /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), uint16]) */;
    %562 = %557.0;
    %563 = @func_502() /* ty=Tensor[(4, 4, 14), float32] */;
    %564 = %561.0;
    (%558, %562, %563, %564)
  };
  %565() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */
}

def @func_7749() -> Tensor[(4, 4, 14), float32] {
  %566 = @func_6451() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %566.0
}

def @func_8506() -> Tensor[(4, 4, 14), float64] {
  %568 = fn () -> Tensor[(4, 4, 14), float64] {
    %567 = @func_7446() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %567.0
  };
  %568() /* ty=Tensor[(4, 4, 14), float64] */
}

def @func_20754() -> (Tensor[(4, 4, 14), float32],) {
  %569 = @func_4430() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %570 = %569.0;
  (%570,)
}

def @func_15404() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_15402() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_11541(%var_11501: Tensor[(1, 3, 7), float64], %var_11515: Tensor[(10), float64]) -> (Tensor[(1, 3, 7), float64], Tensor[(4, 4, 14), float32], Tensor[(1, 5, 2), float64], Tensor[(10), float64], Tensor[(4, 4, 14), float64]) {
  %571 = cast(%var_11501, dtype="float64") /* ty=Tensor[(1, 3, 7), float64] */;
  %572 = @func_4599() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %573 = cast(%var_11515, dtype="float64") /* ty=Tensor[(10), float64] */;
  %574 = reshape(%573, newshape=[1, 5, 2]) /* ty=Tensor[(1, 5, 2), float64] */;
  %575 = @func_5992(%574) /* ty=(Tensor[(1, 5, 2), float64], Tensor[(4, 4, 14), float32]) */;
  %576 = @func_6605() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %577 = sin(%571) /* ty=Tensor[(1, 3, 7), float64] */;
  %578 = %572.0;
  %579 = %575.0;
  %580 = %576.2;
  (%577, %578, %579, %var_11515, %580)
}

def @func_14209() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %581 = @func_5559() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %582 = @func_12608() /* ty=Tensor[(4, 4, 14), float32] */;
  %583 = %581.0;
  %584 = @func_3424() /* ty=Tensor[(4, 4, 14), float32] */;
  (%582, %583, %584)
}

def @func_22253() -> Tensor[(4, 4, 14), float32] {
  @func_22251() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_13662() -> Tensor[(4, 4, 14), float32] {
  %586 = fn () -> Tensor[(4, 4, 14), float32] {
    %585 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %585.0
  };
  %586() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_3150() -> (Tensor[(4, 4, 14), float32],) {
  %589 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %587 = @func_1848() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %588 = %587.1;
    (%588,)
  };
  %589() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_20689() -> (Tensor[(4, 4, 14), bool],) {
  %592 = fn () -> (Tensor[(4, 4, 14), bool],) {
    %590 = @func_9296() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %591 = %590.0;
    (%591,)
  };
  %592() /* ty=(Tensor[(4, 4, 14), bool],) */
}

def @func_15151() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %593 = @func_3569() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %594 = @func_5652() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %595 = %593.0;
  %596 = %594.3;
  (%595, %596)
}

def @func_18945() -> (Tensor[(4, 4, 14), bool],) {
  @func_18943() /* ty=(Tensor[(4, 4, 14), bool],) */
}

def @func_3122() -> Tensor[(4, 4, 14), float32] {
  %598 = fn () -> Tensor[(4, 4, 14), float32] {
    %597 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %597.0
  };
  %598() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_4487() -> (Tensor[(4, 4, 14), float32],) {
  %599 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %600 = %599.0;
  (%600,)
}

def @func_12140() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %607 = fn () -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %601 = @func_8458() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %602 = @func_2832() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %603 = %601.1;
    %604 = @func_9382() /* ty=Tensor[(4, 4, 14), bool] */;
    %605 = @func_9302() /* ty=Tensor[(4, 4, 14), float32] */;
    %606 = %602.1;
    (%603, %604, %605, %606)
  };
  %607() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_9555() -> Tensor[(4, 4, 14), float64] {
  %609 = fn () -> Tensor[(4, 4, 14), float64] {
    %608 = @func_5071() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %608.0
  };
  %609() /* ty=Tensor[(4, 4, 14), float64] */
}

def @func_2418() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  @func_2416() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */
}

def @func_10776() -> Tensor[(4, 4, 14), float32] {
  %610 = @func_3733() /* ty=(Tensor[(8, 12, 13), int32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %610.3
}

def @func_13752() -> (Tensor[(4, 4, 14), float32],) {
  %611 = @func_4430() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %612 = %611.0;
  (%612,)
}

def @func_14487() -> Tensor[(4, 4, 14), float32] {
  @func_14485() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_16602(%var_16595: Tensor[(8, 6, 14), float32]) -> (Tensor[(8, 6, 14), float32], Tensor[(4, 4, 14), float32]) {
  %613 = cast(%var_16595, dtype="float32") /* ty=Tensor[(8, 6, 14), float32] */;
  %614 = @func_5119() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %615 = exp(%613) /* ty=Tensor[(8, 6, 14), float32] */;
  %616 = %614.0;
  (%615, %616)
}

def @func_19577(%var_19575: Tensor[(16, 182), float32]) -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(16, 182), float64], Tensor[(15, 13, 16), bool], Tensor[(1, 208), int8], Tensor[(16, 182), int8], Tensor[(16, 182), int16]) {
  @func_19574(%var_19575) /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(16, 182), float64], Tensor[(15, 13, 16), bool], Tensor[(1, 208), int8], Tensor[(16, 182), int8], Tensor[(16, 182), int16]) */
}

def @func_21420(%var_21419: Tensor[(8, 6, 1), uint64]) -> (Tensor[(8, 6, 1), uint64], Tensor[(4, 4, 14), float32]) {
  %622 = fn (%var_21402: Tensor[(8, 6, 1), uint64]) -> (Tensor[(8, 6, 1), uint64], Tensor[(4, 4, 14), float32]) {
    %617 = cast(meta[relay.Constant][14] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %618 = cast(%var_21402, dtype="uint64") /* ty=Tensor[(8, 6, 1), uint64] */;
    %619 = @func_7689() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %620 = bitwise_or(%617, %618) /* ty=Tensor[(8, 6, 1), uint64] */;
    %621 = %619.1;
    (%620, %621)
  };
  %622(%var_21419) /* ty=(Tensor[(8, 6, 1), uint64], Tensor[(4, 4, 14), float32]) */
}

def @func_10476() -> (Tensor[(4, 4, 14), bool],) {
  %623 = @func_7273() /* ty=Tensor[(4, 4, 14), bool] */;
  (%623,)
}

def @func_8022(%var_8020: int16, %var_8021: Tensor[(18, 1), int16]) -> (Tensor[(4, 4, 14), float32], Tensor[(1, 2, 9), int16], int16, Tensor[(18, 1), int16], Tensor[(4, 4, 14), float32]) {
  %636 = fn (%var_7998: int16, %var_7999: Tensor[(18, 1), int16]) -> (Tensor[(4, 4, 14), float32], Tensor[(1, 2, 9), int16], int16, Tensor[(18, 1), int16], Tensor[(4, 4, 14), float32]) {
    %624 = @func_6741() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %625 = cast(%var_7998, dtype="int16") /* ty=int16 */;
    %626 = cast(%var_7999, dtype="int16") /* ty=Tensor[(18, 1), int16] */;
    %627 = reshape(%625, newshape=[]) /* ty=int16 */;
    %628 = reshape(%626, newshape=[1, 2, 9]) /* ty=Tensor[(1, 2, 9), int16] */;
    %629 = @func_1551(%627, %628) /* ty=(Tensor[(1, 2, 9), int16], Tensor[(4, 4, 14), float32]) */;
    %630 = cast(%var_7998, dtype="int16") /* ty=int16 */;
    %631 = reshape(%630, newshape=[]) /* ty=int16 */;
    %632 = @func_7207(%631) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], int16, Tensor[(18), int16]) */;
    %633 = %624.0;
    %634 = %629.0;
    %635 = %632.1;
    (%633, %634, %var_7998, %var_7999, %635)
  };
  %636(%var_8020, %var_8021) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(1, 2, 9), int16], int16, Tensor[(18, 1), int16], Tensor[(4, 4, 14), float32]) */
}

def @func_7825() -> Tensor[(4, 4, 14), float32] {
  %638 = fn () -> Tensor[(4, 4, 14), float32] {
    %637 = @func_5055() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %637.2
  };
  %638() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_10169() -> Tensor[(4, 4, 14), bool] {
  %639 = fn () -> Tensor[(4, 4, 14), bool] {
    @func_9382() /* ty=Tensor[(4, 4, 14), bool] */
  };
  %639() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_11388() -> (Tensor[(4, 4, 14), float64],) {
  %640 = @func_7115() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %641 = %640.1;
  (%641,)
}

def @func_7448() -> (Tensor[(4, 4, 14), float64],) {
  @func_7446() /* ty=(Tensor[(4, 4, 14), float64],) */
}

def @func_18748() -> Tensor[(4, 4, 14), float32] {
  %643 = fn () -> Tensor[(4, 4, 14), float32] {
    %642 = @func_16194() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %642.0
  };
  %643() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_3474() -> (Tensor[(4, 4, 14), float64],) {
  %644 = @func_2247() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %645 = %644.0;
  (%645,)
}

def @func_22746() -> (Tensor[(4, 4, 14), float32],) {
  %647 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %646 = @func_4510() /* ty=Tensor[(4, 4, 14), float32] */;
    (%646,)
  };
  %647() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_7273() -> Tensor[(4, 4, 14), bool] {
  @func_6017() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_19656() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %648 = @func_1848() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %649 = @func_11721() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %650 = @func_15844() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %651 = %648.1;
  %652 = @func_9302() /* ty=Tensor[(4, 4, 14), float32] */;
  %653 = %649.0;
  %654 = %650.0;
  (%651, %652, %653, %654)
}

def @func_5160() -> Tensor[(4, 4, 14), float32] {
  @func_1653() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_10478() -> (Tensor[(4, 4, 14), bool],) {
  @func_10476() /* ty=(Tensor[(4, 4, 14), bool],) */
}

def @func_19059() -> (Tensor[(4, 4, 14), float32],) {
  %655 = @func_7522() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %656 = %655.0;
  (%656,)
}

def @func_20414() -> Tensor[(4, 4, 14), float32] {
  @func_20412() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_20127() -> Tensor[(4, 4, 14), float64] {
  %658 = fn () -> Tensor[(4, 4, 14), float64] {
    %657 = @func_5071() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %657.0
  };
  %658() /* ty=Tensor[(4, 4, 14), float64] */
}

def @func_12716() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_12714() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_17567(%var_17565: Tensor[(2, 14, 9), bool]) -> (Tensor[(2, 14, 9), bool], Tensor[(2, 14, 9), int8]) {
  @func_17564(%var_17565) /* ty=(Tensor[(2, 14, 9), bool], Tensor[(2, 14, 9), int8]) */
}

def @func_8093() -> (Tensor[(4, 4, 14), float32], Tensor[(12, 15, 10), int64], Tensor[(900, 2), int64], Tensor[(4, 4, 14), float32], Tensor[(1, 182), float32]) {
  %670 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(12, 15, 10), int64], Tensor[(900, 2), int64], Tensor[(4, 4, 14), float32], Tensor[(1, 182), float32]) {
    %659 = cast(meta[relay.Constant][15] /* ty=Tensor[(900, 2), int64] */, dtype="int64") /* ty=Tensor[(900, 2), int64] */;
    %660 = cast(meta[relay.Constant][15] /* ty=Tensor[(900, 2), int64] */, dtype="int64") /* ty=Tensor[(900, 2), int64] */;
    %661 = reshape(%659, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), int64] */;
    %662 = reshape(%660, newshape=[12, 15, 10]) /* ty=Tensor[(12, 15, 10), int64] */;
    %663 = @func_3406(%661, %662) /* ty=(Tensor[(12, 15, 10), int64],) */;
    %664 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 182), float32] */, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
    %665 = reshape(%664, newshape=[14, 1, 13]) /* ty=Tensor[(14, 1, 13), float32] */;
    %666 = @func_5857(%665) /* ty=(Tensor[(14, ?, 13), uint32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(14, ?, 13), bool]) */;
    %667 = @func_3452() /* ty=Tensor[(4, 4, 14), float32] */;
    %668 = %663.0;
    %669 = %666.1;
    (%667, %668, meta[relay.Constant][15] /* ty=Tensor[(900, 2), int64] */, %669, meta[relay.Constant][16] /* ty=Tensor[(1, 182), float32] */)
  };
  %670() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(12, 15, 10), int64], Tensor[(900, 2), int64], Tensor[(4, 4, 14), float32], Tensor[(1, 182), float32]) */
}

def @func_18565() -> (Tensor[(4, 4, 14), bool],) {
  %673 = fn () -> (Tensor[(4, 4, 14), bool],) {
    %671 = @func_11011() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool]) */;
    %672 = %671.0;
    (%672,)
  };
  %673() /* ty=(Tensor[(4, 4, 14), bool],) */
}

def @func_22662() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %674 = @func_5559() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %675 = @func_12537() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %676 = %674.1;
  %677 = %675.0;
  %678 = @func_12237() /* ty=Tensor[(4, 4, 14), float32] */;
  (%676, %677, %678)
}

def @func_2472() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_2470() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_14282() -> Tensor[(4, 4, 14), bool] {
  %680 = fn () -> Tensor[(4, 4, 14), bool] {
    %679 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
    %679.2
  };
  %680() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_1879() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %681 = @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %682 = @func_1162() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %683 = %681.0;
  %684 = %682.3;
  (%683, %684)
}

def @func_5613() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float64]) {
  @func_5611() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float64]) */
}

def @func_3410(%var_3408: Tensor[(12, 15, 10), int64], %var_3409: Tensor[(12, 15, 10), int64]) -> (Tensor[(12, 15, 10), int64],) {
  @func_3406(%var_3408, %var_3409) /* ty=(Tensor[(12, 15, 10), int64],) */
}

def @main(%var_23527: Tensor[(5, 11, 14), float64]) -> Tensor[(5, 11, 14), float64] {
  %685 = cast(%var_23527, dtype="float64") /* ty=Tensor[(5, 11, 14), float64] */;
  %686 = log2(%685) /* ty=Tensor[(5, 11, 14), float64] */;
  %687 = cast(%686, dtype="float64") /* ty=Tensor[(5, 11, 14), float64] */;
  sqrt(%687) /* ty=Tensor[(5, 11, 14), float64] */
}

def @func_20837() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %688 = @func_10800() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %689 = @func_14302() /* ty=Tensor[(4, 4, 14), bool] */;
  %690 = %688.0;
  (%689, %690)
}

def @func_4163() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %691 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %692 = @func_2752() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %693 = %691.0;
  %694 = %692.0;
  (%693, %694)
}

def @func_18359() -> Tensor[(4, 4, 14), float32] {
  %696 = fn () -> Tensor[(4, 4, 14), float32] {
    %695 = @func_10800() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %695.0
  };
  %696() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_7379() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %697 = @func_5337() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %698 = @func_2539() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %699 = @func_3569() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %700 = %697.0;
  %701 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  %702 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
  %703 = %698.2;
  %704 = %699.0;
  (%700, %701, %702, %703, %704)
}

def @func_21457(%var_21456: Tensor[(16, 2, 5), uint64]) -> (Tensor[(16, 2, 5), bool],) {
  %708 = fn (%var_21446: Tensor[(16, 2, 5), uint64]) -> (Tensor[(16, 2, 5), bool],) {
    %705 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 1, 5), uint64] */, dtype="bool") /* ty=Tensor[(16, 1, 5), bool] */;
    %706 = cast(%var_21446, dtype="bool") /* ty=Tensor[(16, 2, 5), bool] */;
    %707 = greater_equal(%705, %706) /* ty=Tensor[(16, 2, 5), bool] */;
    (%707,)
  };
  %708(%var_21456) /* ty=(Tensor[(16, 2, 5), bool],) */
}

def @func_4416() -> (Tensor[(4, 4, 14), float32],) {
  %709 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %710 = %709.0;
  (%710,)
}

def @func_6017() -> Tensor[(4, 4, 14), bool] {
  %711 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %711.1
}

def @func_4489() -> (Tensor[(4, 4, 14), float32],) {
  @func_4487() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_19315() -> (Tensor[(4, 4, 14), float32],) {
  @func_19313() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_3391() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %718 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
    %712 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %713 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %714 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %715 = %712.0;
    %716 = %713.0;
    %717 = %714.1;
    (%715, %716, %717)
  };
  %718() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */
}

def @func_7116() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %727 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %719 = @func_6994() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %720 = @func_2611() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
    %721 = @func_5652() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %722 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %723 = %719.0;
    %724 = %720.3;
    %725 = %721.2;
    %726 = %722.0;
    (%723, %724, %725, %726)
  };
  %727() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_15487() -> (Tensor[(4, 4, 14), float32],) {
  %728 = @func_9461() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %729 = %728.2;
  (%729,)
}

def @func_3656() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %730 = @func_1445() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %731 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %732 = @func_1720() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %733 = @func_3452() /* ty=Tensor[(4, 4, 14), float32] */;
  %734 = %730.1;
  %735 = %731.2;
  %736 = %732.2;
  %737 = @func_3026() /* ty=Tensor[(4, 4, 14), float32] */;
  (%733, %734, %735, %736, %737)
}

def @func_20756() -> (Tensor[(4, 4, 14), float32],) {
  @func_20754() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_16027(%var_16025: Tensor[(14, 1, 8), uint32]) -> (Tensor[(14, 3, 8), bool], Tensor[(14, 1, 8), float64]) {
  @func_16024(%var_16025) /* ty=(Tensor[(14, 3, 8), bool], Tensor[(14, 1, 8), float64]) */
}

def @func_4110() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %744 = fn () -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %738 = @func_3068() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %739 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %740 = @func_1720() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %741 = %738.0;
    %742 = %739.0;
    %743 = %740.1;
    (%741, %742, %743)
  };
  %744() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_14485() -> Tensor[(4, 4, 14), float32] {
  %745 = @func_6960() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %745.0
}

def @func_3827(%var_3825: Tensor[(126), float32]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(126), float32]) {
  @func_3824(%var_3825) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(126), float32]) */
}

def @func_18098() -> Tensor[(4, 4, 14), float32] {
  %746 = @func_2272() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %746.0
}

def @func_17520() -> (Tensor[(4, 4, 14), bool],) {
  %747 = @func_12139() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %748 = %747.1;
  (%748,)
}

def @func_10440() -> (Tensor[(4, 4, 14), bool],) {
  %749 = @func_8458() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %750 = %749.1;
  (%750,)
}

def @func_5121() -> (Tensor[(4, 4, 14), float32],) {
  @func_5119() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_17351() -> (Tensor[(4, 4, 14), uint64],) {
  %752 = fn () -> (Tensor[(4, 4, 14), uint64],) {
    %751 = @func_14610() /* ty=Tensor[(4, 4, 14), uint64] */;
    (%751,)
  };
  %752() /* ty=(Tensor[(4, 4, 14), uint64],) */
}

def @func_10308() -> (Tensor[(4, 4, 14), float32],) {
  %755 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %753 = @func_4863() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %754 = %753.0;
    (%754,)
  };
  %755() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_15052() -> (Tensor[(4, 4, 14), float32],) {
  %756 = @func_14049() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %757 = %756.0;
  (%757,)
}

def @func_27() -> Tensor[(4, 4, 14), float32] {
  %758 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 4, 14), float32] */, dtype="float32") /* ty=Tensor[(4, 4, 14), float32] */;
  sinh(%758) /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_5859(%var_5858: Tensor[(14, 1, 13), float32]) -> (Tensor[(14, ?, 13), uint32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(14, ?, 13), bool]) {
  %775 = fn (%var_5826: Tensor[(14, 1, 13), float32]) -> (Tensor[(14, ?, 13), uint32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(14, ?, 13), bool]) {
    %759 = cast(%var_5826, dtype="float32") /* ty=Tensor[(14, 1, 13), float32] */;
    %760 = acos(%759) /* ty=Tensor[(14, 1, 13), float32] */;
    %761 = cast(%var_5826, dtype="uint32") /* ty=Tensor[(14, 1, 13), uint32] */;
    %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
    %763 = cast(%760, dtype="uint32") /* ty=Tensor[(14, 1, 13), uint32] */;
    %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %765 = @func_1162() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
    %766 = @func_2470() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %767 = cast(%var_5826, dtype="bool") /* ty=Tensor[(14, 1, 13), bool] */;
    %768 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
    %769 = cast(%760, dtype="bool") /* ty=Tensor[(14, 1, 13), bool] */;
    %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %771 = subtract(%763, %764) /* ty=Tensor[(14, ?, 13), uint32] */;
    %772 = %765.1;
    %773 = %766.1;
    %774 = equal(%769, %770) /* ty=Tensor[(14, ?, 13), bool] */;
    (%771, %772, %773, %774)
  };
  %775(%var_5858) /* ty=(Tensor[(14, ?, 13), uint32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(14, ?, 13), bool]) */
}

def @func_14532() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %776 = @func_13469() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %777 = @func_8406() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %778 = %776.1;
  %779 = @func_12629() /* ty=Tensor[(4, 4, 14), float32] */;
  %780 = %777.1;
  (%778, %779, %780)
}

def @func_20365() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %781 = @func_12456() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %782 = @func_2470() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %783 = %781.0;
  %784 = @func_14433() /* ty=Tensor[(4, 4, 14), float32] */;
  %785 = @func_6393() /* ty=Tensor[(4, 4, 14), float32] */;
  %786 = %782.0;
  (%783, %784, %785, %786)
}

def @func_10243() -> (Tensor[(4, 4, 14), float32],) {
  @func_10241() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_14211() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  @func_14209() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_5055() -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %787 = @func_4735() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %788 = @func_446() /* ty=Tensor[(4, 4, 14), uint64] */;
  %789 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  %790 = %787.1;
  (%788, %789, %790)
}

def @func_14003(%var_14001: float64, %var_14002: Tensor[(7, 6, 3), float64]) -> (Tensor[(7, 6, 3), float64], Tensor[(4, 4, 14), float32]) {
  @func_13999(%var_14001, %var_14002) /* ty=(Tensor[(7, 6, 3), float64], Tensor[(4, 4, 14), float32]) */
}

def @func_17652() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %791 = @func_5071() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %792 = @func_10307() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %793 = @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %794 = @func_502() /* ty=Tensor[(4, 4, 14), float32] */;
  %795 = %791.0;
  %796 = %792.0;
  %797 = %793.0;
  (%794, %795, %796, %797)
}

def @func_7209(%var_7208: int16) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], int16, Tensor[(18), int16]) {
  %813 = fn (%var_7202: int16) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], int16, Tensor[(18), int16]) {
    %798 = @func_6579() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %799 = @func_6960() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %800 = @func_6157() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %801 = @func_2272() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %802 = cast(%var_7202, dtype="int16") /* ty=int16 */;
    %803 = cast(meta[relay.Constant][19] /* ty=Tensor[(18), int16] */, dtype="int16") /* ty=Tensor[(18), int16] */;
    %804 = reshape(%802, newshape=[]) /* ty=int16 */;
    %805 = reshape(%803, newshape=[1, 2, 9]) /* ty=Tensor[(1, 2, 9), int16] */;
    %806 = @func_1551(%804, %805) /* ty=(Tensor[(1, 2, 9), int16], Tensor[(4, 4, 14), float32]) */;
    %807 = @func_4510() /* ty=Tensor[(4, 4, 14), float32] */;
    %808 = %798.0;
    %809 = %799.1;
    %810 = %800.0;
    %811 = %801.0;
    %812 = %806.1;
    (%807, %808, %809, %810, %811, %812, %var_7202, meta[relay.Constant][19] /* ty=Tensor[(18), int16] */)
  };
  %813(%var_7208) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], int16, Tensor[(18), int16]) */
}

def @func_1597() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_1595() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_6742() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %817 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %814 = @func_1720() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %815 = %814.0;
    %816 = @func_4386() /* ty=Tensor[(4, 4, 14), float32] */;
    (%815, %816)
  };
  %817() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_15553() -> Tensor[(4, 4, 14), uint64] {
  @func_15551() /* ty=Tensor[(4, 4, 14), uint64] */
}

def @func_8460() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  @func_8458() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */
}

def @func_16556() -> Tensor[(4, 4, 14), float32] {
  %818 = @func_8428() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %818.0
}

def @func_21036() -> Tensor[(4, 4, 14), float32] {
  @func_21034() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_14303() -> Tensor[(4, 4, 14), bool] {
  %820 = fn () -> Tensor[(4, 4, 14), bool] {
    %819 = @func_4678() /* ty=(Tensor[(4, 4, 14), bool],) */;
    %819.0
  };
  %820() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_12609() -> Tensor[(4, 4, 14), float32] {
  %822 = fn () -> Tensor[(4, 4, 14), float32] {
    %821 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %821.0
  };
  %822() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_14713(%var_14700: Tensor[(1, 6, 7), int32], %var_14701: Tensor[(3, 6, 7), int32]) -> Tensor[(3, 6, 7), bool] {
  %823 = cast(%var_14700, dtype="bool") /* ty=Tensor[(1, 6, 7), bool] */;
  %824 = cast(%var_14701, dtype="bool") /* ty=Tensor[(3, 6, 7), bool] */;
  %825 = equal(%823, %824) /* ty=Tensor[(3, 6, 7), bool] */;
  %826 = cast(%825, dtype="bool") /* ty=Tensor[(3, 6, 7), bool] */;
  %827 = cast(%var_14700, dtype="bool") /* ty=Tensor[(1, 6, 7), bool] */;
  logical_and(%826, %827) /* ty=Tensor[(3, 6, 7), bool] */
}

def @func_2470() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %828 = @func_2209() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %829 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %830 = %828.0;
  %831 = %829.0;
  (%830, %831)
}

def @func_18542() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  %832 = @func_12139() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %833 = @func_13941() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %834 = %832.0;
  %835 = %833.2;
  %836 = @func_11651() /* ty=Tensor[(4, 4, 14), float32] */;
  (%834, %835, %836)
}

def @func_5653() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %844 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %837 = @func_4109() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %838 = @func_5119() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %839 = @func_1676() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %840 = %837.2;
    %841 = @func_3121() /* ty=Tensor[(4, 4, 14), float32] */;
    %842 = %838.0;
    %843 = %839.0;
    (%840, %841, %842, %843)
  };
  %844() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_12281() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_12279() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_12629() -> Tensor[(4, 4, 14), float32] {
  %845 = @func_6451() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %845.0
}

def @func_14344() -> Tensor[(4, 4, 14), float32] {
  %847 = fn () -> Tensor[(4, 4, 14), float32] {
    %846 = @func_7886() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %846.1
  };
  %847() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_7024() -> (Tensor[(4, 4, 14), float32],) {
  @func_7022() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_15402() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %848 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %849 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %850 = %848.0;
  %851 = %849.0;
  (%850, %851)
}

def @func_11235() -> (Tensor[(4, 4, 14), float64],) {
  @func_11233() /* ty=(Tensor[(4, 4, 14), float64],) */
}

def @func_18418(%var_18416: int16, %var_18417: Tensor[(14, 15, 7), int16]) -> (Tensor[(14, 15, 7), int16], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_18414(%var_18416, %var_18417) /* ty=(Tensor[(14, 15, 7), int16], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_10885() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %852 = @func_4788() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %853 = @func_6053() /* ty=Tensor[(4, 4, 14), float32] */;
  %854 = %852.0;
  (%853, %854)
}

def @func_5204() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %855 = @func_4599() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %856 = @func_4487() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %857 = @func_2416() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %858 = %855.0;
  %859 = %856.0;
  %860 = %857.0;
  (%858, %859, %860)
}

def @func_16024(%var_16014: Tensor[(14, 1, 8), uint32]) -> (Tensor[(14, 3, 8), bool], Tensor[(14, 1, 8), float64]) {
  %861 = cast(%var_16014, dtype="bool") /* ty=Tensor[(14, 1, 8), bool] */;
  %862 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 3, 8), uint32] */, dtype="bool") /* ty=Tensor[(14, 3, 8), bool] */;
  %863 = cast(%var_16014, dtype="float64") /* ty=Tensor[(14, 1, 8), float64] */;
  %864 = less_equal(%861, %862) /* ty=Tensor[(14, 3, 8), bool] */;
  %865 = atan(%863) /* ty=Tensor[(14, 1, 8), float64] */;
  (%864, %865)
}

def @func_15349(%var_15347: Tensor[(3, 14, 7), uint64]) -> Tensor[(3, 14, 7), uint64] {
  @func_15346(%var_15347) /* ty=Tensor[(3, 14, 7), uint64] */
}

def @func_10264() -> Tensor[(4, 4, 14), float32] {
  @func_10262() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_8407() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %870 = fn () -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
    %866 = @func_5559() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %867 = @func_3068() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %868 = %866.0;
    %869 = %867.1;
    (%868, %869)
  };
  %870() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_15346(%var_15337: Tensor[(3, 14, 7), uint64]) -> Tensor[(3, 14, 7), uint64] {
  %871 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 14, 7), uint64] */, dtype="uint64") /* ty=Tensor[(3, 14, 7), uint64] */;
  %872 = shape_of(%var_15337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%var_15337, dtype="uint64") /* ty=Tensor[(3, 14, 7), uint64] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%873, %874) /* ty=Tensor[(3, 14, 7), uint64] */
}

def @func_16341() -> Tensor[(4, 4, 14), float32] {
  %875 = @func_14532() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %875.0
}

def @func_21698(%var_21621: Tensor[(1, 14, 15), float32]) -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(?, 14, 15), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(?, 14, 15), bool]) {
  %876 = @func_10476() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %877 = cast(%var_21621, dtype="float32") /* ty=Tensor[(1, 14, 15), float32] */;
  %878 = sin(%877) /* ty=Tensor[(1, 14, 15), float32] */;
  %879 = cast(%878, dtype="float32") /* ty=Tensor[(1, 14, 15), float32] */;
  %880 = acosh(%879) /* ty=Tensor[(1, 14, 15), float32] */;
  %881 = cast(%878, dtype="bool") /* ty=Tensor[(1, 14, 15), bool] */;
  %882 = shape_of(%880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%880, dtype="bool") /* ty=Tensor[(1, 14, 15), bool] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %885 = greater(%883, %884) /* ty=Tensor[(?, 14, 15), bool] */;
  %886 = cast(%880, dtype="bool") /* ty=Tensor[(1, 14, 15), bool] */;
  %887 = shape_of(%885, dtype="int32") /* ty=Tensor[(3), int32] */;
  %888 = cast(%885, dtype="bool") /* ty=Tensor[(?, 14, 15), bool] */;
  %889 = dyn.reshape(%886, %887, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %890 = logical_or(%888, %889) /* ty=Tensor[(?, 14, 15), bool] */;
  %891 = cast(%890, dtype="float64") /* ty=Tensor[(?, 14, 15), float64] */;
  %892 = @func_7689() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %893 = cast(%880, dtype="bool") /* ty=Tensor[(1, 14, 15), bool] */;
  %894 = shape_of(%878, dtype="int32") /* ty=Tensor[(3), int32] */;
  %895 = cast(%878, dtype="bool") /* ty=Tensor[(1, 14, 15), bool] */;
  %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %897 = %876.0;
  %898 = @func_8625() /* ty=Tensor[(4, 4, 14), float32] */;
  %899 = cos(%891) /* ty=Tensor[(?, 14, 15), float64] */;
  %900 = @func_20412() /* ty=Tensor[(4, 4, 14), float32] */;
  %901 = %892.1;
  %902 = equal(%895, %896) /* ty=Tensor[(?, 14, 15), bool] */;
  (%897, %898, %899, %900, %901, %902)
}

def @func_2540() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %913 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %903 = @func_1720() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %904 = @func_905() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %905 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %906 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %907 = %903.0;
    %908 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
    %909 = @func_65() /* ty=Tensor[(4, 4, 14), float32] */;
    %910 = %904.0;
    %911 = %905.0;
    %912 = %906.0;
    (%907, %908, %909, %910, %911, %912)
  };
  %913() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_11982() -> (Tensor[(6, 8, 9), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  @func_11980() /* ty=(Tensor[(6, 8, 9), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */
}

def @func_8920() -> Tensor[(4, 4, 14), float32] {
  %914 = @func_4109() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %914.2
}

def @func_22727() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %915 = @func_3474() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %916 = @func_10370() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %917 = %915.0;
  %918 = @func_21292() /* ty=Tensor[(4, 4, 14), float32] */;
  %919 = %916.0;
  %920 = @func_20126() /* ty=Tensor[(4, 4, 14), float64] */;
  (%917, %918, %919, %920)
}

def @func_8372() -> Tensor[(4, 4, 14), float32] {
  @func_8370() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_7381() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_7379() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_8724(%var_8722: Tensor[(10, 15, 16), int32], %var_8723: Tensor[(10, 15, 16), int32]) -> (Tensor[(10, 15, 16), bool],) {
  %926 = fn (%var_8716: Tensor[(10, 15, 16), int32], %var_8717: Tensor[(10, 15, 16), int32]) -> (Tensor[(10, 15, 16), bool],) {
    %921 = cast(%var_8717, dtype="bool") /* ty=Tensor[(10, 15, 16), bool] */;
    %922 = shape_of(%var_8716, dtype="int32") /* ty=Tensor[(3), int32] */;
    %923 = cast(%var_8716, dtype="bool") /* ty=Tensor[(10, 15, 16), bool] */;
    %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %925 = not_equal(%923, %924) /* ty=Tensor[(10, 15, 16), bool] */;
    (%925,)
  };
  %926(%var_8722, %var_8723) /* ty=(Tensor[(10, 15, 16), bool],) */
}

def @func_3752() -> Tensor[(4, 4, 14), float32] {
  %928 = fn () -> Tensor[(4, 4, 14), float32] {
    %927 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %927.0
  };
  %928() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_3453() -> Tensor[(4, 4, 14), float32] {
  %930 = fn () -> Tensor[(4, 4, 14), float32] {
    %929 = @func_1595() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %929.1
  };
  %930() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_503() -> Tensor[(4, 4, 14), float32] {
  %932 = fn () -> Tensor[(4, 4, 14), float32] {
    %931 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %931.0
  };
  %932() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_2195() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %933 = @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %934 = @func_1162() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %935 = %933.0;
  %936 = %934.1;
  (%935, %936)
}

def @func_1654() -> Tensor[(4, 4, 14), float32] {
  %938 = fn () -> Tensor[(4, 4, 14), float32] {
    %937 = @func_1245() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %937.0
  };
  %938() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_10827() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %942 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %939 = @func_4241() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %940 = @func_8370() /* ty=Tensor[(4, 4, 14), float32] */;
    %941 = %939.0;
    (%940, %941)
  };
  %942() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_3069() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %947 = fn () -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
    %943 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
    %944 = @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %945 = %943.0;
    %946 = %944.0;
    (%945, %946)
  };
  %947() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_905() -> (Tensor[(4, 4, 14), float64],) {
  %948 = @func_835() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %949 = %948.0;
  %950 = cast(%949, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
  %951 = acosh(%950) /* ty=Tensor[(4, 4, 14), float64] */;
  (%951,)
}

def @func_13999(%var_13989: float64, %var_13990: Tensor[(7, 6, 3), float64]) -> (Tensor[(7, 6, 3), float64], Tensor[(4, 4, 14), float32]) {
  %952 = cast(%var_13989, dtype="float64") /* ty=float64 */;
  %953 = cast(%var_13990, dtype="float64") /* ty=Tensor[(7, 6, 3), float64] */;
  %954 = floor_mod(%952, %953) /* ty=Tensor[(7, 6, 3), float64] */;
  %955 = @func_12629() /* ty=Tensor[(4, 4, 14), float32] */;
  (%954, %955)
}

def @func_17138(%var_17137: Tensor[(3, 12, 10), float32]) -> (Tensor[(3, 12, 10), float32],) {
  %958 = fn (%var_17132: Tensor[(3, 12, 10), float32]) -> (Tensor[(3, 12, 10), float32],) {
    %956 = cast(%var_17132, dtype="float32") /* ty=Tensor[(3, 12, 10), float32] */;
    %957 = cos(%956) /* ty=Tensor[(3, 12, 10), float32] */;
    (%957,)
  };
  %958(%var_17137) /* ty=(Tensor[(3, 12, 10), float32],) */
}

def @func_4678() -> (Tensor[(4, 4, 14), bool],) {
  %959 = @func_3390() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %960 = %959.2;
  (%960,)
}

def @func_446() -> Tensor[(4, 4, 14), uint64] {
  %961 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %962 = %961.0;
  %963 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
  %964 = cast(%963, dtype="uint64") /* ty=Tensor[(4, 4, 14), uint64] */;
  %965 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %966 = cast(%962, dtype="uint64") /* ty=Tensor[(4, 4, 14), uint64] */;
  %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%966, %967) /* ty=Tensor[(4, 4, 14), uint64] */
}

def @func_9598(%var_9594: Tensor[(32, 24), bool]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(12, 4, 16), bool], Tensor[(32, 24), bool]) {
  %968 = @func_4163() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %969 = cast(%var_9594, dtype="bool") /* ty=Tensor[(32, 24), bool] */;
  %970 = reshape(%969, newshape=[12, 4, 16]) /* ty=Tensor[(12, 4, 16), bool] */;
  %971 = @func_4510() /* ty=Tensor[(4, 4, 14), float32] */;
  %972 = %968.0;
  %973 = @func_7718(%970) /* ty=Tensor[(12, 4, 16), bool] */;
  (%971, %972, %973, %var_9594)
}

def @func_21387() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  %974 = @func_19059() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %975 = @func_6605() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %976 = @func_15250() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %977 = @func_2752() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %978 = %974.0;
  %979 = %975.2;
  %980 = %976.0;
  %981 = %977.0;
  (%978, %979, %980, %981)
}

def @func_5279() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %984 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %982 = @func_3452() /* ty=Tensor[(4, 4, 14), float32] */;
    %983 = @func_3751() /* ty=Tensor[(4, 4, 14), float32] */;
    (%982, %983)
  };
  %984() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_18943() -> (Tensor[(4, 4, 14), bool],) {
  %985 = @func_14281() /* ty=Tensor[(4, 4, 14), bool] */;
  (%985,)
}

def @func_21236() -> (Tensor[(4, 4, 14), float32],) {
  %986 = @func_12237() /* ty=Tensor[(4, 4, 14), float32] */;
  (%986,)
}

def @func_20412() -> Tensor[(4, 4, 14), float32] {
  @func_3751() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_8370() -> Tensor[(4, 4, 14), float32] {
  %987 = @func_1162() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %987.1
}

def @func_11545(%var_11543: Tensor[(1, 3, 7), float64], %var_11544: Tensor[(10), float64]) -> (Tensor[(1, 3, 7), float64], Tensor[(4, 4, 14), float32], Tensor[(1, 5, 2), float64], Tensor[(10), float64], Tensor[(4, 4, 14), float64]) {
  @func_11541(%var_11543, %var_11544) /* ty=(Tensor[(1, 3, 7), float64], Tensor[(4, 4, 14), float32], Tensor[(1, 5, 2), float64], Tensor[(10), float64], Tensor[(4, 4, 14), float64]) */
}

def @func_17082() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %988 = @func_9104() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %989 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %990 = %988.0;
  %991 = %989.0;
  (%990, %991)
}

def @func_16605(%var_16603: Tensor[(8, 6, 14), float32]) -> (Tensor[(8, 6, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_16602(%var_16603) /* ty=(Tensor[(8, 6, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_6158() -> (Tensor[(4, 4, 14), float32],) {
  %994 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %992 = @func_3280() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %993 = %992.0;
    (%993,)
  };
  %994() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_18706() -> Tensor[(4, 4, 14), float32] {
  @func_18704() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_11179() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(2, 384), bool]) {
  %1004 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(2, 384), bool]) {
    %995 = @func_1676() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %996 = @func_7689() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %997 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 384), bool] */, dtype="bool") /* ty=Tensor[(2, 384), bool] */;
    %998 = reshape(%997, newshape=[32, 24]) /* ty=Tensor[(32, 24), bool] */;
    %999 = @func_9598(%998) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(12, 4, 16), bool], Tensor[(32, 24), bool]) */;
    %1000 = @func_4040() /* ty=Tensor[(4, 4, 14), float32] */;
    %1001 = %995.0;
    %1002 = %996.0;
    %1003 = %999.0;
    (%1000, %1001, %1002, %1003, meta[relay.Constant][22] /* ty=Tensor[(2, 384), bool] */)
  };
  %1004() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(2, 384), bool]) */
}

def @func_13020() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %1005 = @func_11980() /* ty=(Tensor[(6, 8, 9), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %1006 = @func_11799() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1007 = @func_5931() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1008 = %1005.1;
  %1009 = %1006.0;
  %1010 = %1007.0;
  %1011 = @func_4184() /* ty=Tensor[(4, 4, 14), float64] */;
  (%1008, %1009, %1010, %1011)
}

def @func_13492() -> Tensor[(4, 4, 14), float64] {
  %1013 = fn () -> Tensor[(4, 4, 14), float64] {
    %1012 = @func_7446() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %1012.0
  };
  %1013() /* ty=Tensor[(4, 4, 14), float64] */
}

def @func_3733() -> (Tensor[(8, 12, 13), int32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1014 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(8, 12, 13), int32] */;
  %1015 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(8, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1016 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(8, 12, 13), int32] */;
  %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1018 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1019 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1020 = @func_1245() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1021 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1022 = @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1023 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1024 = @func_2752() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1025 = right_shift(%1016, %1017) /* ty=Tensor[(8, 12, 13), int32] */;
  %1026 = %1018.0;
  %1027 = %1019.0;
  %1028 = %1020.1;
  %1029 = @func_3607() /* ty=Tensor[(4, 4, 14), float32] */;
  %1030 = %1021.1;
  %1031 = %1022.0;
  %1032 = %1023.0;
  %1033 = %1024.0;
  (%1025, %1026, %1027, %1028, %1029, %1030, %1031, %1032, %1033)
}

def @func_17564(%var_17550: Tensor[(2, 14, 9), bool]) -> (Tensor[(2, 14, 9), bool], Tensor[(2, 14, 9), int8]) {
  %1034 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 14, 9), bool] */, dtype="bool") /* ty=Tensor[(2, 14, 9), bool] */;
  %1035 = shape_of(%var_17550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1036 = cast(%var_17550, dtype="bool") /* ty=Tensor[(2, 14, 9), bool] */;
  %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1038 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 14, 9), bool] */, dtype="int8") /* ty=Tensor[(2, 14, 9), int8] */;
  %1039 = shape_of(%var_17550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1040 = cast(%var_17550, dtype="int8") /* ty=Tensor[(2, 14, 9), int8] */;
  %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1042 = logical_or(%1036, %1037) /* ty=Tensor[(2, 14, 9), bool] */;
  %1043 = subtract(%1040, %1041) /* ty=Tensor[(2, 14, 9), int8] */;
  (%1042, %1043)
}

def @func_22618() -> Tensor[(4, 4, 14), float32] {
  %1045 = fn () -> Tensor[(4, 4, 14), float32] {
    %1044 = @func_7430() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
    %1044.0
  };
  %1045() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_14050() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1049 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1046 = @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1047 = %1046.0;
    %1048 = @func_12593() /* ty=Tensor[(4, 4, 14), float32] */;
    (%1047, %1048)
  };
  %1049() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_20196() -> (Tensor[(4, 4, 14), float32],) {
  @func_20194() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_9462() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %1056 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
    %1050 = @func_8294() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1051 = @func_5559() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %1052 = @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1053 = %1050.0;
    %1054 = %1051.0;
    %1055 = %1052.1;
    (%1053, %1054, %1055)
  };
  %1056() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_7446() -> (Tensor[(4, 4, 14), float64],) {
  %1057 = @func_2611() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %1058 = %1057.3;
  (%1058,)
}

def @func_2209() -> (Tensor[(4, 4, 14), float32],) {
  %1059 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1060 = %1059.0;
  (%1060,)
}

def @func_22396() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_22394() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_8458() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %1061 = @func_6960() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1062 = @func_8406() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1063 = %1061.0;
  %1064 = %1062.0;
  (%1063, %1064)
}

def @func_8688() -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1070 = fn () -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1065 = @func_5055() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1066 = @func_5002() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1067 = %1065.0;
    %1068 = @func_5160() /* ty=Tensor[(4, 4, 14), float32] */;
    %1069 = %1066.1;
    (%1067, %1068, %1069)
  };
  %1070() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_17936() -> (Tensor[(4, 4, 14), float64],) {
  @func_17934() /* ty=(Tensor[(4, 4, 14), float64],) */
}

def @func_5520() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1079 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1071 = @func_3733() /* ty=(Tensor[(8, 12, 13), int32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1072 = %1071.5;
    %1073 = cast(%1072, dtype="float32") /* ty=Tensor[(4, 4, 14), float32] */;
    %1074 = @func_2478() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1075 = @func_4416() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1076 = rsqrt(%1073) /* ty=Tensor[(4, 4, 14), float32] */;
    %1077 = %1074.0;
    %1078 = %1075.0;
    (%1076, %1077, %1078)
  };
  %1079() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_2834() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_2832() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_16934(%var_16933: int8) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(1, 2, 3), int8], int8, Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1092 = fn (%var_16913: int8) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(1, 2, 3), int8], int8, Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1080 = @func_14908() /* ty=(Tensor[(9, 7, 3), float64], Tensor[(4, 4, 14), float32]) */;
    %1081 = @func_13512() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
    %1082 = cast(%var_16913, dtype="int8") /* ty=int8 */;
    %1083 = reshape(%1082, newshape=[]) /* ty=int8 */;
    %1084 = @func_14260(%1083) /* ty=(Tensor[(1, 2, 3), int8],) */;
    %1085 = @func_4788() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1086 = @func_10826() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1087 = %1080.1;
    %1088 = %1081.0;
    %1089 = %1084.0;
    %1090 = %1085.0;
    %1091 = %1086.0;
    (%1087, %1088, %1089, %var_16913, %1090, %1091)
  };
  %1092(%var_16933) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(1, 2, 3), int8], int8, Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_23405(%var_23403: Tensor[(112), uint32]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(14, 3, 8), bool], Tensor[(112), uint32]) {
  @func_23402(%var_23403) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(14, 3, 8), bool], Tensor[(112), uint32]) */
}

def @func_20194() -> (Tensor[(4, 4, 14), float32],) {
  %1093 = @func_14872() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1094 = %1093.3;
  (%1094,)
}

def @func_21389() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  @func_21387() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */
}

def @func_21174(%var_21169: Tensor[(2, 16, 13), float32]) -> Tensor[(2, 16, 13), float32] {
  %1095 = cast(%var_21169, dtype="float32") /* ty=Tensor[(2, 16, 13), float32] */;
  tan(%1095) /* ty=Tensor[(2, 16, 13), float32] */
}

def @func_8755(%var_8753: Tensor[(9, 7, 6), int8], %var_8754: Tensor[(9, 7, 6), int8]) -> Tensor[(9, 7, 6), int8] {
  @func_8751(%var_8753, %var_8754) /* ty=Tensor[(9, 7, 6), int8] */
}

def @func_11651() -> Tensor[(4, 4, 14), float32] {
  %1096 = @func_2775() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1096.2
}

def @func_4430() -> (Tensor[(4, 4, 14), float32],) {
  %1097 = @func_2478() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1098 = %1097.0;
  (%1098,)
}

def @func_15473() -> Tensor[(4, 4, 14), float64] {
  %1100 = fn () -> Tensor[(4, 4, 14), float64] {
    %1099 = @func_11233() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %1099.0
  };
  %1100() /* ty=Tensor[(4, 4, 14), float64] */
}

def @func_14642() -> (Tensor[(4, 4, 14), float32],) {
  %1101 = @func_5055() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1102 = %1101.1;
  (%1102,)
}

def @func_15251() -> (Tensor[(4, 4, 14), float64],) {
  %1104 = fn () -> (Tensor[(4, 4, 14), float64],) {
    %1103 = @func_9554() /* ty=Tensor[(4, 4, 14), float64] */;
    (%1103,)
  };
  %1104() /* ty=(Tensor[(4, 4, 14), float64],) */
}

def @func_5931() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1105 = @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1106 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1107 = %1105.0;
  %1108 = %1106.0;
  (%1107, %1108)
}

def @func_20928() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1115 = fn () -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1109 = @func_11011() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool]) */;
    %1110 = @func_2478() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1111 = @func_4241() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1112 = %1109.0;
    %1113 = %1110.0;
    %1114 = %1111.0;
    (%1112, %1113, %1114)
  };
  %1115() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_1245() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1116 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
  %1117 = %1116.3;
  %1118 = cast(%1117, dtype="float32") /* ty=Tensor[(4, 4, 14), float32] */;
  %1119 = cosh(%1118) /* ty=Tensor[(4, 4, 14), float32] */;
  %1120 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1119, %1120)
}

def @func_10517() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_10515() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_11257() -> (Tensor[(4, 4, 14), float32],) {
  %1121 = @func_7689() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1122 = %1121.0;
  (%1122,)
}

def @func_19574(%var_19483: Tensor[(16, 182), float32]) -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(16, 182), float64], Tensor[(15, 13, 16), bool], Tensor[(1, 208), int8], Tensor[(16, 182), int8], Tensor[(16, 182), int16]) {
  %1123 = @func_18031() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1124 = cast(%var_19483, dtype="float64") /* ty=Tensor[(16, 182), float64] */;
  %1125 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 208), int8] */, dtype="int8") /* ty=Tensor[(1, 208), int8] */;
  %1126 = reshape(%1125, newshape=[1, 13, 16]) /* ty=Tensor[(1, 13, 16), int8] */;
  %1127 = @func_15281(%1126) /* ty=(Tensor[(15, 13, 16), bool],) */;
  %1128 = @func_8092() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(12, 15, 10), int64], Tensor[(900, 2), int64], Tensor[(4, 4, 14), float32], Tensor[(1, 182), float32]) */;
  %1129 = %1128.4;
  %1130 = cast(%1129, dtype="float64") /* ty=Tensor[(1, 182), float64] */;
  %1131 = cast(%var_19483, dtype="float64") /* ty=Tensor[(16, 182), float64] */;
  %1132 = floor_divide(%1130, %1131) /* ty=Tensor[(16, 182), float64] */;
  %1133 = cast(%1132, dtype="float64") /* ty=Tensor[(16, 182), float64] */;
  %1134 = atanh(%1133) /* ty=Tensor[(16, 182), float64] */;
  %1135 = cast(%1134, dtype="float64") /* ty=Tensor[(16, 182), float64] */;
  %1136 = rsqrt(%1135) /* ty=Tensor[(16, 182), float64] */;
  %1137 = cast(%1134, dtype="int8") /* ty=Tensor[(16, 182), int8] */;
  %1138 = shape_of(%1136, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1139 = cast(%1136, dtype="int8") /* ty=Tensor[(16, 182), int8] */;
  %1140 = dyn.reshape(%1137, %1138, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1141 = cast(%1134, dtype="int16") /* ty=Tensor[(16, 182), int16] */;
  %1142 = shape_of(%1136, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1143 = cast(%1136, dtype="int16") /* ty=Tensor[(16, 182), int16] */;
  %1144 = dyn.reshape(%1141, %1142, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1145 = @func_13406() /* ty=Tensor[(4, 4, 14), uint64] */;
  %1146 = %1123.0;
  %1147 = asinh(%1124) /* ty=Tensor[(16, 182), float64] */;
  %1148 = %1127.0;
  %1149 = subtract(%1139, %1140) /* ty=Tensor[(16, 182), int8] */;
  %1150 = left_shift(%1143, %1144) /* ty=Tensor[(16, 182), int16] */;
  (%1145, %1146, %1147, %1148, meta[relay.Constant][26] /* ty=Tensor[(1, 208), int8] */, %1149, %1150)
}

def @func_22233() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) {
  %1157 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) {
    %1151 = @func_14908() /* ty=(Tensor[(9, 7, 3), float64], Tensor[(4, 4, 14), float32]) */;
    %1152 = @func_6368() /* ty=(Tensor[(4, 4, 14), uint64],) */;
    %1153 = @func_18739() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1154 = %1151.1;
    %1155 = %1152.0;
    %1156 = %1153.0;
    (%1154, %1155, %1156)
  };
  %1157() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) */
}

def @func_4735() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1158 = @func_640() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1159 = @func_4109() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1160 = %1158.0;
  %1161 = %1159.1;
  (%1160, %1161)
}

def @func_6607() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  @func_6605() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */
}

def @func_11424() -> (Tensor[(4, 4, 14), float32],) {
  @func_11422() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_16343() -> Tensor[(4, 4, 14), float32] {
  @func_16341() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_17274(%var_17230: Tensor[(13, 1, 2), int32], %var_17231: Tensor[(13, 11, 2), int32]) -> (Tensor[(13, 11, 2), bool], Tensor[(4, 4, 14), float32], Tensor[(10, 9, 2), bool], Tensor[(180), uint32]) {
  %1162 = cast(%var_17230, dtype="bool") /* ty=Tensor[(13, 1, 2), bool] */;
  %1163 = cast(%var_17231, dtype="bool") /* ty=Tensor[(13, 11, 2), bool] */;
  %1164 = cast(meta[relay.Constant][27] /* ty=Tensor[(180), uint32] */, dtype="uint32") /* ty=Tensor[(180), uint32] */;
  %1165 = reshape(%1164, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), uint32] */;
  %1166 = @func_6296(%1165) /* ty=(Tensor[(10, 9, 2), bool],) */;
  %1167 = less(%1162, %1163) /* ty=Tensor[(13, 11, 2), bool] */;
  %1168 = @func_7824() /* ty=Tensor[(4, 4, 14), float32] */;
  %1169 = %1166.0;
  (%1167, %1168, %1169, meta[relay.Constant][27] /* ty=Tensor[(180), uint32] */)
}

def @func_17912() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), bool]) {
  %1174 = fn () -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), bool]) {
    %1170 = @func_11388() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %1171 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
    %1172 = %1170.0;
    %1173 = %1171.0;
    (%1172, %1173)
  };
  %1174() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), bool]) */
}

def @func_22023(%var_22022: Tensor[(60), float64]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(60), float64], Tensor[(4, 4, 14), float32]) {
  %1182 = fn (%var_21999: Tensor[(60), float64]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(60), float64], Tensor[(4, 4, 14), float32]) {
    %1175 = @func_19100() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1176 = cast(%var_21999, dtype="float64") /* ty=Tensor[(60), float64] */;
    %1177 = reshape(%1176, newshape=[2, 2, 15]) /* ty=Tensor[(2, 2, 15), float64] */;
    %1178 = @func_20037(%1177) /* ty=(Tensor[(2, 2, 15), float64], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %1179 = %1175.0;
    %1180 = %1178.6;
    %1181 = @func_870() /* ty=Tensor[(4, 4, 14), float32] */;
    (%1179, %1180, %var_21999, %1181)
  };
  %1182(%var_22022) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(60), float64], Tensor[(4, 4, 14), float32]) */
}

def @func_19189() -> Tensor[(4, 4, 14), float32] {
  %1184 = fn () -> Tensor[(4, 4, 14), float32] {
    %1183 = @func_11178() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(2, 384), bool]) */;
    %1183.3
  };
  %1184() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_2211() -> (Tensor[(4, 4, 14), float32],) {
  @func_2209() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_6962() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  @func_6960() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */
}

def @func_6054() -> Tensor[(4, 4, 14), float32] {
  %1186 = fn () -> Tensor[(4, 4, 14), float32] {
    %1185 = @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1185.1
  };
  %1186() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_960() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1193 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1187 = @func_870() /* ty=Tensor[(4, 4, 14), float32] */;
    %1188 = cast(%1187, dtype="float32") /* ty=Tensor[(4, 4, 14), float32] */;
    %1189 = @func_255() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %1190 = sin(%1188) /* ty=Tensor[(4, 4, 14), float32] */;
    %1191 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
    %1192 = %1189.2;
    (%1190, %1191, %1192)
  };
  %1193() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_4680() -> (Tensor[(4, 4, 14), bool],) {
  @func_4678() /* ty=(Tensor[(4, 4, 14), bool],) */
}

def @func_14892() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1196 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1194 = @func_8920() /* ty=Tensor[(4, 4, 14), float32] */;
    %1195 = @func_10815() /* ty=Tensor[(4, 4, 14), float32] */;
    (%1194, %1195)
  };
  %1196() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_20839() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  @func_20837() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_21238() -> (Tensor[(4, 4, 14), float32],) {
  @func_21236() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_6892() -> (Tensor[(4, 4, 14), float32],) {
  @func_6890() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_17278(%var_17276: Tensor[(13, 1, 2), int32], %var_17277: Tensor[(13, 11, 2), int32]) -> (Tensor[(13, 11, 2), bool], Tensor[(4, 4, 14), float32], Tensor[(10, 9, 2), bool], Tensor[(180), uint32]) {
  @func_17274(%var_17276, %var_17277) /* ty=(Tensor[(13, 11, 2), bool], Tensor[(4, 4, 14), float32], Tensor[(10, 9, 2), bool], Tensor[(180), uint32]) */
}

def @func_17851() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_17849() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_13138() -> (Tensor[(4, 4, 14), float32],) {
  %1199 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %1197 = @func_4573() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1198 = %1197.1;
    (%1198,)
  };
  %1199() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_16080(%var_16078: Tensor[(15), uint32]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(5, 13, 15), bool], Tensor[(15), uint32], Tensor[(975), uint32]) {
  @func_16077(%var_16078) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(5, 13, 15), bool], Tensor[(15), uint32], Tensor[(975), uint32]) */
}

def @func_6507() -> (Tensor[(4, 4, 14), float32],) {
  %1200 = @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1201 = %1200.0;
  (%1201,)
}

def @func_11730() -> Tensor[(4, 4, 14), float32] {
  %1203 = fn () -> Tensor[(4, 4, 14), float32] {
    %1202 = @func_7379() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1202.2
  };
  %1203() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_21484() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1204 = @func_5931() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1205 = @func_6741() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1206 = %1204.1;
  %1207 = %1205.1;
  (%1206, %1207)
}

def @func_21928() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %1212 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
    %1208 = @func_3656() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1209 = %1208.1;
    %1210 = @func_14302() /* ty=Tensor[(4, 4, 14), bool] */;
    %1211 = @func_1653() /* ty=Tensor[(4, 4, 14), float32] */;
    (%1209, %1210, %1211)
  };
  %1212() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_13408() -> Tensor[(4, 4, 14), uint64] {
  @func_13406() /* ty=Tensor[(4, 4, 14), uint64] */
}

def @func_18704() -> Tensor[(4, 4, 14), float32] {
  %1213 = @func_15402() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1213.0
}

def @func_836() -> (Tensor[(4, 4, 14), float64],) {
  %1221 = fn () -> (Tensor[(4, 4, 14), float64],) {
    %1214 = @func_27() /* ty=Tensor[(4, 4, 14), float32] */;
    %1215 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
    %1216 = cast(%1215, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
    %1217 = shape_of(%1214, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1218 = cast(%1214, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
    %1219 = dyn.reshape(%1216, %1217, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1220 = subtract(%1218, %1219) /* ty=Tensor[(4, 4, 14), float64] */;
    (%1220,)
  };
  %1221() /* ty=(Tensor[(4, 4, 14), float64],) */
}

def @func_10496() -> Tensor[(4, 4, 14), float32] {
  @func_4386() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_8428() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1222 = @func_3656() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1223 = %1222.2;
  %1224 = @func_502() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1223, %1224)
}

def @func_7524() -> (Tensor[(4, 4, 14), float32],) {
  @func_7522() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_22296() -> (Tensor[(4, 4, 14), bool],) {
  @func_22294() /* ty=(Tensor[(4, 4, 14), bool],) */
}

def @func_21160() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1229 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1225 = @func_14872() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1226 = @func_18314() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1227 = %1225.0;
    %1228 = %1226.0;
    (%1227, %1228)
  };
  %1229() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_871() -> Tensor[(4, 4, 14), float32] {
  %1230 = fn () -> Tensor[(4, 4, 14), float32] {
    @func_170() /* ty=Tensor[(4, 4, 14), float32] */
  };
  %1230() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_15281(%var_15265: Tensor[(1, 13, 16), int8]) -> (Tensor[(15, 13, 16), bool],) {
  %1231 = cast(%var_15265, dtype="bool") /* ty=Tensor[(1, 13, 16), bool] */;
  %1232 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 13, 16), int8] */, dtype="bool") /* ty=Tensor[(15, 13, 16), bool] */;
  %1233 = greater_equal(%1231, %1232) /* ty=Tensor[(15, 13, 16), bool] */;
  (%1233,)
}

def @func_22740() -> (Tensor[(4, 4, 14), float32],) {
  %1236 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %1234 = @func_2272() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1235 = %1234.0;
    (%1235,)
  };
  %1236() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_12301() -> (Tensor[(4, 4, 14), float32],) {
  %1238 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %1237 = @func_9302() /* ty=Tensor[(4, 4, 14), float32] */;
    (%1237,)
  };
  %1238() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_2890(%var_2880: Tensor[(10, 10, 8), float64]) -> Tensor[(10, 10, 8), float64] {
  %1239 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 10, 8), float64] */, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
  %1240 = shape_of(%var_2880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1241 = cast(%var_2880, dtype="float64") /* ty=Tensor[(10, 10, 8), float64] */;
  %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%1241, %1242) /* ty=Tensor[(10, 10, 8), float64] */
}

def @func_12456() -> (Tensor[(4, 4, 14), float32],) {
  %1243 = @func_4241() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1244 = %1243.1;
  (%1244,)
}

def @func_13790() -> (Tensor[(4, 4, 14), float32],) {
  %1247 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %1245 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %1246 = %1245.0;
    (%1246,)
  };
  %1247() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_7275() -> Tensor[(4, 4, 14), bool] {
  @func_7273() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_4165() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_4163() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_8922() -> Tensor[(4, 4, 14), float32] {
  @func_8920() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_22394() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1248 = @func_18273() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1249 = %1248.1;
  %1250 = @func_12608() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1249, %1250)
}

def @func_2247() -> (Tensor[(4, 4, 14), float64],) {
  %1251 = @func_835() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1252 = %1251.0;
  (%1252,)
}

def @func_2478() -> (Tensor[(4, 4, 14), float32],) {
  %1253 = @func_170() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1253,)
}

def @func_3735() -> (Tensor[(8, 12, 13), int32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_3733() /* ty=(Tensor[(8, 12, 13), int32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_8430() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_8428() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_9302() -> Tensor[(4, 4, 14), float32] {
  %1254 = @func_3390() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1254.0
}

def @func_22161() -> Tensor[(4, 4, 14), bool] {
  %1256 = fn () -> Tensor[(4, 4, 14), bool] {
    %1255 = @func_18943() /* ty=(Tensor[(4, 4, 14), bool],) */;
    %1255.0
  };
  %1256() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_4575() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_4573() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_16558() -> Tensor[(4, 4, 14), float32] {
  @func_16556() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_20165() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %1260 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
    %1257 = @func_8406() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %1258 = %1257.1;
    %1259 = @func_20126() /* ty=Tensor[(4, 4, 14), float64] */;
    (%1258, %1259)
  };
  %1260() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */
}

def @func_18414(%var_18372: int16, %var_18373: Tensor[(14, 15, 7), int16]) -> (Tensor[(14, 15, 7), int16], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1261 = cast(%var_18372, dtype="int16") /* ty=int16 */;
  %1262 = cast(%var_18373, dtype="int16") /* ty=Tensor[(14, 15, 7), int16] */;
  %1263 = @func_4416() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1264 = bitwise_and(%1261, %1262) /* ty=Tensor[(14, 15, 7), int16] */;
  %1265 = @func_16341() /* ty=Tensor[(4, 4, 14), float32] */;
  %1266 = %1263.0;
  (%1264, %1265, %1266)
}

def @func_6605() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %1267 = @func_4599() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1268 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1269 = @func_6257() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %1270 = %1267.0;
  %1271 = %1268.2;
  %1272 = %1269.0;
  (%1270, %1271, %1272)
}

def @func_15881() -> Tensor[(4, 4, 14), float32] {
  %1273 = @func_4109() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1273.2
}

def @func_1066() -> (Tensor[(4, 4, 14), float32],) {
  %1274 = @func_170() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1274,)
}

def @func_12238() -> Tensor[(4, 4, 14), float32] {
  %1276 = fn () -> Tensor[(4, 4, 14), float32] {
    %1275 = @func_9786() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1275.0
  };
  %1276() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_13022() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  @func_13020() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */
}

def @func_907() -> (Tensor[(4, 4, 14), float64],) {
  @func_905() /* ty=(Tensor[(4, 4, 14), float64],) */
}

def @func_2776() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1283 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1277 = @func_1879() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
    %1278 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1279 = @func_2539() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1280 = %1277.0;
    %1281 = %1278.0;
    %1282 = %1279.5;
    (%1280, %1281, %1282)
  };
  %1283() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_11801() -> (Tensor[(4, 4, 14), float32],) {
  @func_11799() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_21610() -> (Tensor[(4, 4, 14), float32],) {
  @func_21608() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_5798() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_5796() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_22864(%var_22850: Tensor[(11, 7, 10), float32]) -> Tensor[(11, 7, 10), float32] {
  %1284 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 7, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 7, 10), float32] */;
  %1285 = shape_of(%var_22850, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1286 = cast(%var_22850, dtype="float32") /* ty=Tensor[(11, 7, 10), float32] */;
  %1287 = dyn.reshape(%1284, %1285, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%1286, %1287) /* ty=Tensor[(11, 7, 10), float32] */
}

def @func_2893(%var_2891: Tensor[(10, 10, 8), float64]) -> Tensor[(10, 10, 8), float64] {
  @func_2890(%var_2891) /* ty=Tensor[(10, 10, 8), float64] */
}

def @func_19102() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_19100() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_4790() -> (Tensor[(4, 4, 14), float32],) {
  @func_4788() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_14263(%var_14261: int8) -> (Tensor[(1, 2, 3), int8],) {
  @func_14260(%var_14261) /* ty=(Tensor[(1, 2, 3), int8],) */
}

def @func_18544() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  @func_18542() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */
}

def @func_17005() -> Tensor[(4, 4, 14), float32] {
  @func_17003() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_9051() -> Tensor[(4, 4, 14), float32] {
  %1289 = fn () -> Tensor[(4, 4, 14), float32] {
    %1288 = @func_2272() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1288.0
  };
  %1289() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_10547() -> Tensor[(4, 4, 14), float32] {
  %1290 = @func_5278() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1290.0
}

def @func_13406() -> Tensor[(4, 4, 14), uint64] {
  @func_6209() /* ty=Tensor[(4, 4, 14), uint64] */
}

def @func_20972() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1291 = @func_5931() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1292 = @func_3068() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1293 = @func_17430() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1294 = @func_14281() /* ty=Tensor[(4, 4, 14), bool] */;
  %1295 = @func_10262() /* ty=Tensor[(4, 4, 14), float32] */;
  %1296 = %1291.0;
  %1297 = %1292.1;
  %1298 = %1293.6;
  (%1294, %1295, %1296, %1297, %1298)
}

def @func_9304() -> Tensor[(4, 4, 14), float32] {
  @func_9302() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_1307() -> (Tensor[(4, 4, 14), float32],) {
  @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_14611() -> Tensor[(4, 4, 14), uint64] {
  %1299 = fn () -> Tensor[(4, 4, 14), uint64] {
    @func_6209() /* ty=Tensor[(4, 4, 14), uint64] */
  };
  %1299() /* ty=Tensor[(4, 4, 14), uint64] */
}

def @func_1721() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1306 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1300 = @func_1595() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1301 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %1302 = @func_1245() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1303 = %1300.1;
    %1304 = %1301.0;
    %1305 = %1302.0;
    (%1303, %1304, %1305)
  };
  %1306() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_16759(%var_16757: Tensor[(1, 14, 3), int16], %var_16758: Tensor[(8, 14, 3), int16]) -> (Tensor[(8, 14, 3), bool],) {
  %1310 = fn (%var_16747: Tensor[(1, 14, 3), int16], %var_16748: Tensor[(8, 14, 3), int16]) -> (Tensor[(8, 14, 3), bool],) {
    %1307 = cast(%var_16747, dtype="bool") /* ty=Tensor[(1, 14, 3), bool] */;
    %1308 = cast(%var_16748, dtype="bool") /* ty=Tensor[(8, 14, 3), bool] */;
    %1309 = equal(%1307, %1308) /* ty=Tensor[(8, 14, 3), bool] */;
    (%1309,)
  };
  %1310(%var_16757, %var_16758) /* ty=(Tensor[(8, 14, 3), bool],) */
}

def @func_5611() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float64]) {
  %1311 = @func_835() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1312 = @func_905() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1313 = %1311.0;
  %1314 = %1312.0;
  (%1313, %1314)
}

def @func_5162() -> Tensor[(4, 4, 14), float32] {
  @func_5160() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_15845() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1318 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1315 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
    %1316 = @func_4386() /* ty=Tensor[(4, 4, 14), float32] */;
    %1317 = %1315.0;
    (%1316, %1317)
  };
  %1318() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_448() -> Tensor[(4, 4, 14), uint64] {
  @func_446() /* ty=Tensor[(4, 4, 14), uint64] */
}

def @func_11102() -> Tensor[(4, 4, 14), float32] {
  @func_11100() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_10663() -> Tensor[(4, 4, 14), float64] {
  @func_8505() /* ty=Tensor[(4, 4, 14), float64] */
}

def @func_10442() -> (Tensor[(4, 4, 14), bool],) {
  @func_10440() /* ty=(Tensor[(4, 4, 14), bool],) */
}

def @func_1676() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %1319 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1320 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
  %1321 = %1319.0;
  %1322 = %1320.3;
  (%1321, %1322)
}

def @func_18740() -> (Tensor[(4, 4, 14), float32],) {
  %1325 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %1323 = @func_11257() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1324 = %1323.0;
    (%1324,)
  };
  %1325() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_4510() -> Tensor[(4, 4, 14), float32] {
  %1326 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
  %1326.1
}

def @func_4788() -> (Tensor[(4, 4, 14), float32],) {
  %1327 = @func_4599() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1328 = %1327.0;
  (%1328,)
}

def @func_13648() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64], Tensor[(1560), int16]) {
  %1340 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64], Tensor[(1560), int16]) {
    %1329 = @func_3474() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %1330 = @func_6579() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1331 = cast(meta[relay.Constant][31] /* ty=Tensor[(1560), int16] */, dtype="int16") /* ty=Tensor[(1560), int16] */;
    %1332 = cast(meta[relay.Constant][31] /* ty=Tensor[(1560), int16] */, dtype="int16") /* ty=Tensor[(1560), int16] */;
    %1333 = reshape(%1331, newshape=[8, 15, 13]) /* ty=Tensor[(8, 15, 13), int16] */;
    %1334 = reshape(%1332, newshape=[8, 15, 13]) /* ty=Tensor[(8, 15, 13), int16] */;
    %1335 = @func_4365(%1333, %1334) /* ty=(Tensor[(8, 15, 13), bool], Tensor[(8, 15, 13), float32], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) */;
    %1336 = @func_6393() /* ty=Tensor[(4, 4, 14), float32] */;
    %1337 = %1329.0;
    %1338 = %1330.0;
    %1339 = %1335.2;
    (%1336, %1337, %1338, %1339, meta[relay.Constant][31] /* ty=Tensor[(1560), int16] */)
  };
  %1340() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64], Tensor[(1560), int16]) */
}

def @func_22065() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_22063() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_5725(%var_5723: uint16, %var_5724: Tensor[(15, 8, 10), uint16]) -> Tensor[(15, 8, 10), uint16] {
  %1343 = fn (%var_5714: uint16, %var_5715: Tensor[(15, 8, 10), uint16]) -> Tensor[(15, 8, 10), uint16] {
    %1341 = cast(%var_5714, dtype="uint16") /* ty=uint16 */;
    %1342 = cast(%var_5715, dtype="uint16") /* ty=Tensor[(15, 8, 10), uint16] */;
    minimum(%1341, %1342) /* ty=Tensor[(15, 8, 10), uint16] */
  };
  %1343(%var_5723, %var_5724) /* ty=Tensor[(15, 8, 10), uint16] */
}

def @func_3425() -> Tensor[(4, 4, 14), float32] {
  %1345 = fn () -> Tensor[(4, 4, 14), float32] {
    %1344 = @func_1305() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1344.0
  };
  %1345() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_23227() -> (Tensor[(4, 4, 14), float32],) {
  %1347 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %1346 = @func_11100() /* ty=Tensor[(4, 4, 14), float32] */;
    (%1346,)
  };
  %1347() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_16807() -> Tensor[(4, 4, 14), float32] {
  %1348 = fn () -> Tensor[(4, 4, 14), float32] {
    @func_27() /* ty=Tensor[(4, 4, 14), float32] */
  };
  %1348() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_21701(%var_21699: Tensor[(1, 14, 15), float32]) -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(?, 14, 15), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(?, 14, 15), bool]) {
  @func_21698(%var_21699) /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(?, 14, 15), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(?, 14, 15), bool]) */
}

def @func_2197() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_5560() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %1353 = fn () -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
    %1349 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
    %1350 = @func_3733() /* ty=(Tensor[(8, 12, 13), int32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1351 = %1349.0;
    %1352 = %1350.8;
    (%1351, %1352)
  };
  %1353() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_7606() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1354 = @func_4937() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1355 = @func_3656() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1356 = @func_6994() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1357 = @func_5652() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1358 = @func_4573() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1359 = @func_6507() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1360 = @func_3068() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1361 = %1354.0;
  %1362 = %1355.3;
  %1363 = %1356.0;
  %1364 = %1357.1;
  %1365 = %1358.0;
  %1366 = %1359.0;
  %1367 = %1360.1;
  (%1361, %1362, %1363, %1364, %1365, %1366, %1367)
}

def @func_3302(%var_3300: Tensor[(5, 7, 4), float32], %var_3301: Tensor[(5, 7, 4), float32]) -> Tensor[(5, 7, 4), float32] {
  @func_3298(%var_3300, %var_3301) /* ty=Tensor[(5, 7, 4), float32] */
}

def @func_21530(%var_21528: Tensor[(5, 5, 8), float64]) -> (Tensor[(5, 5, 8), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  @func_21527(%var_21528) /* ty=(Tensor[(5, 5, 8), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_8295() -> (Tensor[(4, 4, 14), float32],) {
  %1370 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %1368 = @func_1245() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1369 = %1368.1;
    (%1369,)
  };
  %1370() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_6996() -> (Tensor[(4, 4, 14), float32],) {
  @func_6994() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_11915(%var_11914: Tensor[(16, 16, 9), float64]) -> (Tensor[(16, 16, 9), float64], Tensor[(10, 9, 2), bool], Tensor[(180), uint32]) {
  %1377 = fn (%var_11878: Tensor[(16, 16, 9), float64]) -> (Tensor[(16, 16, 9), float64], Tensor[(10, 9, 2), bool], Tensor[(180), uint32]) {
    %1371 = cast(%var_11878, dtype="float64") /* ty=Tensor[(16, 16, 9), float64] */;
    %1372 = cast(meta[relay.Constant][32] /* ty=Tensor[(180), uint32] */, dtype="uint32") /* ty=Tensor[(180), uint32] */;
    %1373 = reshape(%1372, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), uint32] */;
    %1374 = @func_6296(%1373) /* ty=(Tensor[(10, 9, 2), bool],) */;
    %1375 = sin(%1371) /* ty=Tensor[(16, 16, 9), float64] */;
    %1376 = %1374.0;
    (%1375, %1376, meta[relay.Constant][32] /* ty=Tensor[(180), uint32] */)
  };
  %1377(%var_11914) /* ty=(Tensor[(16, 16, 9), float64], Tensor[(10, 9, 2), bool], Tensor[(180), uint32]) */
}

def @func_6580() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1380 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1378 = @func_170() /* ty=Tensor[(4, 4, 14), float32] */;
    %1379 = @func_3452() /* ty=Tensor[(4, 4, 14), float32] */;
    (%1378, %1379)
  };
  %1380() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_21275() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1385 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1381 = @func_20754() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1382 = @func_15151() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1383 = %1381.0;
    %1384 = %1382.1;
    (%1383, %1384)
  };
  %1385() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_388() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */
}

def @func_20653() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1396 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1386 = @func_10885() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1387 = @func_5519() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1388 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %1389 = @func_8294() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1390 = @func_19313() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1391 = %1386.1;
    %1392 = %1387.1;
    %1393 = %1388.0;
    %1394 = %1389.0;
    %1395 = %1390.0;
    (%1391, %1392, %1393, %1394, %1395)
  };
  %1396() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_8626() -> Tensor[(4, 4, 14), float32] {
  %1398 = fn () -> Tensor[(4, 4, 14), float32] {
    %1397 = @func_2478() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1397.0
  };
  %1398() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_641() -> (Tensor[(4, 4, 14), float32],) {
  %1401 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %1399 = @func_255() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %1400 = %1399.2;
    (%1400,)
  };
  %1401() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_14992() -> Tensor[(4, 4, 14), float32] {
  %1403 = fn () -> Tensor[(4, 4, 14), float32] {
    %1402 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %1402.0
  };
  %1403() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_9601(%var_9599: Tensor[(32, 24), bool]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(12, 4, 16), bool], Tensor[(32, 24), bool]) {
  @func_9598(%var_9599) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(12, 4, 16), bool], Tensor[(32, 24), bool]) */
}

def @func_15764() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), bool]) {
  %1410 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), bool]) {
    %1404 = @func_11011() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool]) */;
    %1405 = @func_1879() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
    %1406 = @func_14485() /* ty=Tensor[(4, 4, 14), float32] */;
    %1407 = %1404.0;
    %1408 = %1405.1;
    %1409 = @func_7273() /* ty=Tensor[(4, 4, 14), bool] */;
    (%1406, %1407, %1408, %1409)
  };
  %1410() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), bool]) */
}

def @func_15054() -> (Tensor[(4, 4, 14), float32],) {
  @func_15052() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_4418() -> (Tensor[(4, 4, 14), float32],) {
  @func_4416() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_172() -> Tensor[(4, 4, 14), float32] {
  @func_170() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_13941() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %1411 = @func_12300() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1412 = @func_12663() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1413 = %1411.0;
  %1414 = %1412.2;
  %1415 = @func_10663() /* ty=Tensor[(4, 4, 14), float64] */;
  (%1413, %1414, %1415)
}

def @func_18998() -> (Tensor[(4, 4, 14), float32], Tensor[(2, 9, 12), float64], Tensor[(12, 18), float64]) {
  %1416 = @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1417 = cast(meta[relay.Constant][33] /* ty=Tensor[(12, 18), float64] */, dtype="float64") /* ty=Tensor[(12, 18), float64] */;
  %1418 = cast(meta[relay.Constant][33] /* ty=Tensor[(12, 18), float64] */, dtype="float64") /* ty=Tensor[(12, 18), float64] */;
  %1419 = reshape(%1417, newshape=[2, 9, 12]) /* ty=Tensor[(2, 9, 12), float64] */;
  %1420 = reshape(%1418, newshape=[2, 9, 12]) /* ty=Tensor[(2, 9, 12), float64] */;
  %1421 = @func_13375(%1419, %1420) /* ty=(Tensor[(2, 9, 12), float64],) */;
  %1422 = %1416.0;
  %1423 = %1421.0;
  (%1422, %1423, meta[relay.Constant][33] /* ty=Tensor[(12, 18), float64] */)
}

def @func_4386() -> Tensor[(4, 4, 14), float32] {
  %1424 = @func_4163() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1424.1
}

def @func_15807() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %1431 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
    %1425 = @func_3149() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1426 = @func_6656() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) */;
    %1427 = @func_6960() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %1428 = %1425.0;
    %1429 = %1426.1;
    %1430 = %1427.1;
    (%1428, %1429, %1430)
  };
  %1431() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */
}

def @func_3280() -> (Tensor[(4, 4, 14), float32],) {
  %1432 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
  %1433 = %1432.0;
  (%1433,)
}

def @func_6210() -> Tensor[(4, 4, 14), uint64] {
  %1434 = fn () -> Tensor[(4, 4, 14), uint64] {
    @func_446() /* ty=Tensor[(4, 4, 14), uint64] */
  };
  %1434() /* ty=Tensor[(4, 4, 14), uint64] */
}

def @func_6258() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  %1438 = fn () -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
    %1435 = @func_1162() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
    %1436 = %1435.3;
    %1437 = @func_3121() /* ty=Tensor[(4, 4, 14), float32] */;
    (%1436, %1437)
  };
  %1438() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */
}

def @func_8861(%var_8835: Tensor[(4, 13, 14), float64]) -> (Tensor[(4, 13, 14), int16], Tensor[(4, 4, 14), float32], Tensor[(4, 13, 14), float32]) {
  %1439 = cast(%var_8835, dtype="float64") /* ty=Tensor[(4, 13, 14), float64] */;
  %1440 = asin(%1439) /* ty=Tensor[(4, 13, 14), float64] */;
  %1441 = cast(%var_8835, dtype="int16") /* ty=Tensor[(4, 13, 14), int16] */;
  %1442 = shape_of(%1440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1443 = cast(%1440, dtype="int16") /* ty=Tensor[(4, 13, 14), int16] */;
  %1444 = dyn.reshape(%1441, %1442, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1445 = cast(%var_8835, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %1446 = logical_xor(%1443, %1444) /* ty=Tensor[(4, 13, 14), int16] */;
  %1447 = @func_6393() /* ty=Tensor[(4, 4, 14), float32] */;
  %1448 = atan(%1445) /* ty=Tensor[(4, 13, 14), float32] */;
  (%1446, %1447, %1448)
}

def @func_21863() -> Tensor[(4, 4, 14), float32] {
  %1449 = @func_7115() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1449.3
}

def @func_6994() -> (Tensor[(4, 4, 14), float32],) {
  %1450 = @func_2539() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1451 = %1450.5;
  (%1451,)
}

def @func_22598() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1456 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1452 = @func_1879() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
    %1453 = @func_2470() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1454 = %1452.0;
    %1455 = %1453.0;
    (%1454, %1455)
  };
  %1456() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_4432() -> (Tensor[(4, 4, 14), float32],) {
  @func_4430() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_19888() -> Tensor[(5, 7, 1), bool] {
  @func_19886() /* ty=Tensor[(5, 7, 1), bool] */
}

def @func_22664() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_22662() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_20844() -> (Tensor[(4, 4, 14), float32],) {
  %1457 = @func_2272() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1458 = %1457.0;
  (%1458,)
}

def @func_8864(%var_8862: Tensor[(4, 13, 14), float64]) -> (Tensor[(4, 13, 14), int16], Tensor[(4, 4, 14), float32], Tensor[(4, 13, 14), float32]) {
  @func_8861(%var_8862) /* ty=(Tensor[(4, 13, 14), int16], Tensor[(4, 4, 14), float32], Tensor[(4, 13, 14), float32]) */
}

def @func_20280() -> (Tensor[(4, 4, 14), float32],) {
  @func_20278() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_21230(%var_21228: Tensor[(42), int32], %var_21229: Tensor[(126), int32]) -> (Tensor[(11, 16, 7), float64], Tensor[(3, 6, 7), bool], Tensor[(42), int32], Tensor[(126), int32]) {
  %1466 = fn (%var_21218: Tensor[(42), int32], %var_21219: Tensor[(126), int32]) -> (Tensor[(11, 16, 7), float64], Tensor[(3, 6, 7), bool], Tensor[(42), int32], Tensor[(126), int32]) {
    %1459 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 16, 7), float64] */;
    %1460 = cast(%var_21218, dtype="int32") /* ty=Tensor[(42), int32] */;
    %1461 = cast(%var_21219, dtype="int32") /* ty=Tensor[(126), int32] */;
    %1462 = reshape(%1460, newshape=[1, 6, 7]) /* ty=Tensor[(1, 6, 7), int32] */;
    %1463 = reshape(%1461, newshape=[3, 6, 7]) /* ty=Tensor[(3, 6, 7), int32] */;
    %1464 = atanh(%1459) /* ty=Tensor[(11, 16, 7), float64] */;
    %1465 = @func_14713(%1462, %1463) /* ty=Tensor[(3, 6, 7), bool] */;
    (%1464, %1465, %var_21218, %var_21219)
  };
  %1466(%var_21228, %var_21229) /* ty=(Tensor[(11, 16, 7), float64], Tensor[(3, 6, 7), bool], Tensor[(42), int32], Tensor[(126), int32]) */
}

def @func_21527(%var_21493: Tensor[(5, 5, 8), float64]) -> (Tensor[(5, 5, 8), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %1467 = cast(%var_21493, dtype="float64") /* ty=Tensor[(5, 5, 8), float64] */;
  %1468 = @func_6890() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1469 = @func_6960() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1470 = sigmoid(%1467) /* ty=Tensor[(5, 5, 8), float64] */;
  %1471 = %1468.0;
  %1472 = %1469.1;
  %1473 = @func_16556() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1470, %1471, %1472, %1473)
}

def @func_13697(%var_13696: Tensor[(16, 8, 9), int32]) -> (Tensor[(16, 8, 9), int32], Tensor[(4, 4, 14), float64], Tensor[(9, 7, 6), int8], Tensor[(378), int8]) {
  %1486 = fn (%var_13666: Tensor[(16, 8, 9), int32]) -> (Tensor[(16, 8, 9), int32], Tensor[(4, 4, 14), float64], Tensor[(9, 7, 6), int8], Tensor[(378), int8]) {
    %1474 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 8, 9), int32] */, dtype="int32") /* ty=Tensor[(16, 8, 9), int32] */;
    %1475 = shape_of(%var_13666, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1476 = cast(%var_13666, dtype="int32") /* ty=Tensor[(16, 8, 9), int32] */;
    %1477 = dyn.reshape(%1474, %1475, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1478 = @func_7446() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %1479 = cast(meta[relay.Constant][36] /* ty=Tensor[(378), int8] */, dtype="int8") /* ty=Tensor[(378), int8] */;
    %1480 = cast(meta[relay.Constant][36] /* ty=Tensor[(378), int8] */, dtype="int8") /* ty=Tensor[(378), int8] */;
    %1481 = reshape(%1479, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), int8] */;
    %1482 = reshape(%1480, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), int8] */;
    %1483 = bitwise_or(%1476, %1477) /* ty=Tensor[(16, 8, 9), int32] */;
    %1484 = %1478.0;
    %1485 = @func_8751(%1481, %1482) /* ty=Tensor[(9, 7, 6), int8] */;
    (%1483, %1484, %1485, meta[relay.Constant][36] /* ty=Tensor[(378), int8] */)
  };
  %1486(%var_13696) /* ty=(Tensor[(16, 8, 9), int32], Tensor[(4, 4, 14), float64], Tensor[(9, 7, 6), int8], Tensor[(378), int8]) */
}

def @func_10498() -> Tensor[(4, 4, 14), float32] {
  @func_10496() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_17790() -> (Tensor[(4, 4, 14), bool],) {
  %1489 = fn () -> (Tensor[(4, 4, 14), bool],) {
    %1487 = @func_128() /* ty=(Tensor[(4, 4, 14), bool],) */;
    %1488 = %1487.0;
    (%1488,)
  };
  %1489() /* ty=(Tensor[(4, 4, 14), bool],) */
}

def @func_6656() -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) {
  %1490 = @func_6209() /* ty=Tensor[(4, 4, 14), uint64] */;
  %1491 = @func_5160() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1490, %1491)
}

def @func_12665() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  @func_12663() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_1247() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_1245() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_2416() -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  %1492 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1493 = %1492.1;
  %1494 = cast(%1493, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
  %1495 = @func_2272() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1496 = log(%1494) /* ty=Tensor[(4, 4, 14), float64] */;
  %1497 = %1495.0;
  (%1496, %1497)
}

def @func_153() -> (Tensor[(4, 4, 14), float32],) {
  @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_22466(%var_22443: Tensor[(9, 6, 6), bool], %var_22444: Tensor[(9, 6, 6), bool]) -> (Tensor[(9, 6, 6), bool], Tensor[(4, 4, 14), bool]) {
  %1498 = cast(%var_22444, dtype="bool") /* ty=Tensor[(9, 6, 6), bool] */;
  %1499 = shape_of(%var_22443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1500 = cast(%var_22443, dtype="bool") /* ty=Tensor[(9, 6, 6), bool] */;
  %1501 = dyn.reshape(%1498, %1499, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1502 = logical_or(%1500, %1501) /* ty=Tensor[(9, 6, 6), bool] */;
  %1503 = @func_22160() /* ty=Tensor[(4, 4, 14), bool] */;
  (%1502, %1503)
}

def @func_11980() -> (Tensor[(6, 8, 9), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) {
  %1504 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 1, 9), uint32] */, dtype="bool") /* ty=Tensor[(6, 1, 9), bool] */;
  %1505 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 8, 9), uint32] */, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
  %1506 = @func_3474() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1507 = @func_5002() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1508 = greater(%1504, %1505) /* ty=Tensor[(6, 8, 9), bool] */;
  %1509 = %1506.0;
  %1510 = %1507.0;
  (%1508, %1509, %1510)
}

def @func_12714() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1511 = @func_7379() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1512 = @func_11721() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %1513 = @func_11980() /* ty=(Tensor[(6, 8, 9), bool], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %1514 = @func_11946() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1515 = %1511.2;
  %1516 = %1512.0;
  %1517 = %1513.1;
  %1518 = @func_7824() /* ty=Tensor[(4, 4, 14), float32] */;
  %1519 = %1514.1;
  (%1515, %1516, %1517, %1518, %1519)
}

def @func_8290(%var_8288: Tensor[(182), float32]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(182), float32], Tensor[(4, 4, 14), float32]) {
  @func_8287(%var_8288) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(182), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_11100() -> Tensor[(4, 4, 14), float32] {
  @func_9050() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_7887() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1524 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1520 = @func_3390() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %1521 = @func_3242() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1522 = %1520.0;
    %1523 = %1521.0;
    (%1522, %1523)
  };
  %1524() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_12663() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %1525 = @func_6157() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1526 = @func_11721() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %1527 = @func_6994() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1528 = %1525.0;
  %1529 = %1526.0;
  %1530 = %1527.0;
  (%1528, %1529, %1530)
}

def @func_15883() -> Tensor[(4, 4, 14), float32] {
  @func_15881() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_18618() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_18616() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_23315() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %1531 = @func_11422() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1532 = @func_307() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
  %1533 = %1531.0;
  %1534 = @func_10547() /* ty=Tensor[(4, 4, 14), float32] */;
  %1535 = %1532.1;
  (%1533, %1534, %1535)
}

def @func_12393() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
  %1541 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) {
    %1536 = @func_1848() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1537 = @func_386() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */;
    %1538 = %1536.0;
    %1539 = @func_10496() /* ty=Tensor[(4, 4, 14), float32] */;
    %1540 = %1537.1;
    (%1538, %1539, %1540)
  };
  %1541() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool]) */
}

def @func_21105(%var_21104: Tensor[(14, 15, 10), float32]) -> (Tensor[(14, 15, 10), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(1452), int16], int16) {
  %1552 = fn (%var_21039: Tensor[(14, 15, 10), float32]) -> (Tensor[(14, 15, 10), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(1452), int16], int16) {
    %1542 = cast(%var_21039, dtype="float32") /* ty=Tensor[(14, 15, 10), float32] */;
    %1543 = @func_13020() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
    %1544 = cast(meta[relay.Constant][39] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %1545 = reshape(%1544, newshape=[]) /* ty=int16 */;
    %1546 = @func_9687(%1545) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(11, 12, 11), bool], int16, Tensor[(1452), int16], Tensor[(4, 4, 14), float32]) */;
    %1547 = sigmoid(%1542) /* ty=Tensor[(14, 15, 10), float32] */;
    %1548 = %1543.2;
    %1549 = @func_6209() /* ty=Tensor[(4, 4, 14), uint64] */;
    %1550 = @func_18704() /* ty=Tensor[(4, 4, 14), float32] */;
    %1551 = %1546.3;
    (%1547, %1548, %1549, %1550, %1551, meta[relay.Constant][39] /* ty=int16 */)
  };
  %1552(%var_21104) /* ty=(Tensor[(14, 15, 10), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32], Tensor[(1452), int16], int16) */
}

def @func_18818(%var_18816: Tensor[(10, 5, 1), int64], %var_18817: Tensor[(10, 5, 1), int64]) -> (Tensor[(10, 5, ?), int64],) {
  %1558 = fn (%var_18804: Tensor[(10, 5, 1), int64], %var_18805: Tensor[(10, 5, 1), int64]) -> (Tensor[(10, 5, ?), int64],) {
    %1553 = cast(%var_18805, dtype="int64") /* ty=Tensor[(10, 5, 1), int64] */;
    %1554 = shape_of(%var_18804, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1555 = cast(%var_18804, dtype="int64") /* ty=Tensor[(10, 5, 1), int64] */;
    %1556 = dyn.reshape(%1553, %1554, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1557 = add(%1555, %1556) /* ty=Tensor[(10, 5, ?), int64] */;
    (%1557,)
  };
  %1558(%var_18816, %var_18817) /* ty=(Tensor[(10, 5, ?), int64],) */
}

def @func_4365(%var_4294: Tensor[(8, 15, 13), int16], %var_4298: Tensor[(8, 15, 13), int16]) -> (Tensor[(8, 15, 13), bool], Tensor[(8, 15, 13), float32], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) {
  %1559 = cast(meta[relay.Constant][40] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %1560 = cast(%var_4294, dtype="bool") /* ty=Tensor[(8, 15, 13), bool] */;
  %1561 = cast(%var_4298, dtype="float32") /* ty=Tensor[(8, 15, 13), float32] */;
  %1562 = shape_of(%var_4294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1563 = cast(%var_4294, dtype="float32") /* ty=Tensor[(8, 15, 13), float32] */;
  %1564 = dyn.reshape(%1561, %1562, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1565 = @func_2195() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1566 = equal(%1559, %1560) /* ty=Tensor[(8, 15, 13), bool] */;
  %1567 = power(%1563, %1564) /* ty=Tensor[(8, 15, 13), float32] */;
  %1568 = @func_446() /* ty=Tensor[(4, 4, 14), uint64] */;
  %1569 = %1565.0;
  (%1566, %1567, %1568, %1569)
}

def @func_20278() -> (Tensor[(4, 4, 14), float32],) {
  %1570 = @func_18148() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1571 = %1570.0;
  (%1571,)
}

def @func_6299(%var_6297: Tensor[(10, 9, 2), uint32]) -> (Tensor[(10, 9, 2), bool],) {
  @func_6296(%var_6297) /* ty=(Tensor[(10, 9, 2), bool],) */
}

def @func_13754() -> (Tensor[(4, 4, 14), float32],) {
  @func_13752() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_11491() -> (Tensor[(4, 4, 14), float32],) {
  %1572 = @func_5204() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %1573 = %1572.0;
  (%1573,)
}

def @func_10872() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  @func_10870() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */
}

def @func_20300() -> Tensor[(4, 4, 14), float32] {
  @func_8920() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_21486() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_21484() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_6658() -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) {
  @func_6656() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) */
}

def @func_3406(%var_3394: Tensor[(12, 15, 10), int64], %var_3395: Tensor[(12, 15, 10), int64]) -> (Tensor[(12, 15, 10), int64],) {
  %1574 = cast(%var_3395, dtype="int64") /* ty=Tensor[(12, 15, 10), int64] */;
  %1575 = shape_of(%var_3394, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1576 = cast(%var_3394, dtype="int64") /* ty=Tensor[(12, 15, 10), int64] */;
  %1577 = dyn.reshape(%1574, %1575, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1578 = add(%1576, %1577) /* ty=Tensor[(12, 15, 10), int64] */;
  (%1578,)
}

def @func_16298() -> (Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), bool]) {
  %1579 = @func_14610() /* ty=Tensor[(4, 4, 14), uint64] */;
  %1580 = @func_12520() /* ty=Tensor[(4, 4, 14), bool] */;
  (%1579, %1580)
}

def @func_10602(%var_10600: Tensor[(1, 1, 15), uint32], %var_10601: Tensor[(5, 13, 15), uint32]) -> Tensor[(5, 13, 15), bool] {
  @func_10598(%var_10600, %var_10601) /* ty=Tensor[(5, 13, 15), bool] */
}

def @func_5933() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_5931() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_5796() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1581 = @func_1848() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1582 = @func_3569() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1583 = @func_1445() /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32]) */;
  %1584 = %1581.0;
  %1585 = %1582.0;
  %1586 = @func_65() /* ty=Tensor[(4, 4, 14), float32] */;
  %1587 = %1583.1;
  (%1584, %1585, %1586, %1587)
}

def @func_4938() -> (Tensor[(4, 4, 14), float32],) {
  %1590 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %1588 = @func_1848() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1589 = %1588.1;
    (%1589,)
  };
  %1590() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_9687(%var_9647: int16) -> (Tensor[(4, 4, 14), float32], Tensor[(11, 12, 11), bool], int16, Tensor[(1452), int16], Tensor[(4, 4, 14), float32]) {
  %1591 = @func_4109() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1592 = cast(%var_9647, dtype="int16") /* ty=int16 */;
  %1593 = cast(meta[relay.Constant][41] /* ty=Tensor[(1452), int16] */, dtype="int16") /* ty=Tensor[(1452), int16] */;
  %1594 = reshape(%1592, newshape=[]) /* ty=int16 */;
  %1595 = reshape(%1593, newshape=[11, 12, 11]) /* ty=Tensor[(11, 12, 11), int16] */;
  %1596 = @func_4788() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1597 = %1591.2;
  %1598 = @func_3998(%1594, %1595) /* ty=Tensor[(11, 12, 11), bool] */;
  %1599 = %1596.0;
  (%1597, %1598, %var_9647, meta[relay.Constant][41] /* ty=Tensor[(1452), int16] */, %1599)
}

def @func_16945() -> Tensor[(1, 12, 5), float64] {
  %1601 = fn () -> Tensor[(1, 12, 5), float64] {
    %1600 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 12, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 12, 5), float64] */;
    cosh(%1600) /* ty=Tensor[(1, 12, 5), float64] */
  };
  %1601() /* ty=Tensor[(1, 12, 5), float64] */
}

def @func_9787() -> (Tensor[(4, 4, 14), float32],) {
  %1604 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %1602 = @func_959() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1603 = %1602.0;
    (%1603,)
  };
  %1604() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_22034() -> Tensor[(4, 4, 14), float32] {
  %1606 = fn () -> Tensor[(4, 4, 14), float32] {
    %1605 = @func_15844() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1605.0
  };
  %1606() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_4041() -> Tensor[(4, 4, 14), float32] {
  %1613 = fn () -> Tensor[(4, 4, 14), float32] {
    %1607 = @func_2539() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1608 = %1607.4;
    %1609 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 4, 14), float32] */, dtype="float32") /* ty=Tensor[(4, 4, 14), float32] */;
    %1610 = shape_of(%1608, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1611 = cast(%1608, dtype="float32") /* ty=Tensor[(4, 4, 14), float32] */;
    %1612 = dyn.reshape(%1609, %1610, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%1611, %1612) /* ty=Tensor[(4, 4, 14), float32] */
  };
  %1613() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_1041(%var_1040: Tensor[(4, 4, 14), float64]) -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), uint16]) {
  %1623 = fn (%var_1031: Tensor[(4, 4, 14), float64]) -> (Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), uint16]) {
    %1614 = @func_905() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %1615 = @func_905() /* ty=(Tensor[(4, 4, 14), float64],) */;
    %1616 = %1615.0;
    %1617 = cast(%var_1031, dtype="uint16") /* ty=Tensor[(4, 4, 14), uint16] */;
    %1618 = shape_of(%1616, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1619 = cast(%1616, dtype="uint16") /* ty=Tensor[(4, 4, 14), uint16] */;
    %1620 = dyn.reshape(%1617, %1618, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1621 = %1614.0;
    %1622 = maximum(%1619, %1620) /* ty=Tensor[(4, 4, 14), uint16] */;
    (%1621, %1622)
  };
  %1623(%var_1040) /* ty=(Tensor[(4, 4, 14), float64], Tensor[(4, 4, 14), uint16]) */
}

def @func_10371() -> (Tensor[(4, 4, 14), float32],) {
  %1625 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %1624 = @func_6053() /* ty=Tensor[(4, 4, 14), float32] */;
    (%1624,)
  };
  %1625() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_16708() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1626 = @func_255() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1627 = @func_16556() /* ty=Tensor[(4, 4, 14), float32] */;
  %1628 = %1626.0;
  (%1627, %1628)
}

def @func_19957() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1633 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1629 = @func_725() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), uint64]) */;
    %1630 = @func_7824() /* ty=Tensor[(4, 4, 14), float32] */;
    %1631 = %1629.0;
    %1632 = @func_18747() /* ty=Tensor[(4, 4, 14), float32] */;
    (%1630, %1631, %1632)
  };
  %1633() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_12537() -> (Tensor[(4, 4, 14), float32],) {
  %1634 = @func_4163() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1635 = %1634.1;
  (%1635,)
}

def @func_9383() -> Tensor[(4, 4, 14), bool] {
  %1637 = fn () -> Tensor[(4, 4, 14), bool] {
    %1636 = @func_5559() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
    %1636.0
  };
  %1637() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_8287(%var_8270: Tensor[(182), float32]) -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(182), float32], Tensor[(4, 4, 14), float32]) {
  %1638 = @func_5796() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1639 = @func_1066() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1640 = @func_5278() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1641 = @func_2478() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1642 = cast(%var_8270, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1643 = reshape(%1642, newshape=[14, 1, 13]) /* ty=Tensor[(14, 1, 13), float32] */;
  %1644 = @func_5857(%1643) /* ty=(Tensor[(14, ?, 13), uint32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(14, ?, 13), bool]) */;
  %1645 = %1638.3;
  %1646 = @func_870() /* ty=Tensor[(4, 4, 14), float32] */;
  %1647 = %1639.0;
  %1648 = %1640.1;
  %1649 = %1641.0;
  %1650 = @func_141() /* ty=Tensor[(4, 4, 14), float32] */;
  %1651 = %1644.2;
  %1652 = @func_3452() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1645, %1646, %1647, %1648, %1649, %1650, %1651, %var_8270, %1652)
}

def @func_7430() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) {
  %1653 = @func_6579() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1654 = @func_2247() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1655 = %1653.0;
  %1656 = %1654.0;
  (%1655, %1656)
}

def @func_3242() -> (Tensor[(4, 4, 14), float32],) {
  %1657 = @func_1879() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float64]) */;
  %1658 = %1657.0;
  (%1658,)
}

def @func_12791() -> Tensor[(4, 4, 14), float32] {
  %1659 = @func_3149() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1659.0
}

def @func_6448() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_6446() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_16582() -> (Tensor[(4, 4, 14), float32],) {
  %1662 = fn () -> (Tensor[(4, 4, 14), float32],) {
    %1660 = @func_3149() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1661 = %1660.0;
    (%1661,)
  };
  %1662() /* ty=(Tensor[(4, 4, 14), float32],) */
}

def @func_10515() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1663 = @func_5931() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1664 = @func_7824() /* ty=Tensor[(4, 4, 14), float32] */;
  %1665 = %1663.1;
  (%1664, %1665)
}

def @func_8751(%var_8735: Tensor[(9, 7, 6), int8], %var_8736: Tensor[(9, 7, 6), int8]) -> Tensor[(9, 7, 6), int8] {
  %1666 = cast(%var_8736, dtype="int8") /* ty=Tensor[(9, 7, 6), int8] */;
  %1667 = shape_of(%var_8735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1668 = cast(%var_8735, dtype="int8") /* ty=Tensor[(9, 7, 6), int8] */;
  %1669 = dyn.reshape(%1666, %1667, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%1668, %1669) /* ty=Tensor[(9, 7, 6), int8] */
}

def @func_11468() -> (Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) {
  %1670 = @func_10440() /* ty=(Tensor[(4, 4, 14), bool],) */;
  %1671 = %1670.0;
  %1672 = @func_8625() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1671, %1672)
}

def @func_18149() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1676 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1673 = @func_151() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1674 = %1673.0;
    %1675 = @func_14485() /* ty=Tensor[(4, 4, 14), float32] */;
    (%1674, %1675)
  };
  %1676() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_22155() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1680 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
    %1677 = @func_2832() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1678 = @func_3121() /* ty=Tensor[(4, 4, 14), float32] */;
    %1679 = %1677.0;
    (%1678, %1679)
  };
  %1680() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_13308(%var_13279: Tensor[(1, 4, 5), float64]) -> (Tensor[(1, 4, 5), float64], Tensor[(4, 4, 14), float64]) {
  %1681 = cast(-0.591807f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1682 = cast(%var_13279, dtype="float64") /* ty=Tensor[(1, 4, 5), float64] */;
  %1683 = @func_9998() /* ty=(Tensor[(4, 4, 14), float64],) */;
  %1684 = floor_mod(%1681, %1682) /* ty=Tensor[(1, 4, 5), float64] */;
  %1685 = %1683.0;
  (%1684, %1685)
}

def @func_4369(%var_4367: Tensor[(8, 15, 13), int16], %var_4368: Tensor[(8, 15, 13), int16]) -> (Tensor[(8, 15, 13), bool], Tensor[(8, 15, 13), float32], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) {
  @func_4365(%var_4367, %var_4368) /* ty=(Tensor[(8, 15, 13), bool], Tensor[(8, 15, 13), float32], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) */
}

def @func_19313() -> (Tensor[(4, 4, 14), float32],) {
  %1686 = @func_6361() /* ty=(Tensor[(4, 4, 14), bool], Tensor[(4, 4, 14), float32]) */;
  %1687 = %1686.1;
  (%1687,)
}

def @func_12594() -> Tensor[(4, 4, 14), float32] {
  %1689 = fn () -> Tensor[(4, 4, 14), float32] {
    %1688 = @func_7022() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1688.0
  };
  %1689() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_13578() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(126), float32], Tensor[(126), float32], Tensor[(4, 4, 14), float64], Tensor[(9, 7, 6), int8], Tensor[(378), int8], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) {
  %1708 = fn () -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(126), float32], Tensor[(126), float32], Tensor[(4, 4, 14), float64], Tensor[(9, 7, 6), int8], Tensor[(378), int8], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) {
    %1690 = @func_5002() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
    %1691 = cast(meta[relay.Constant][44] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %1692 = reshape(%1691, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %1693 = @func_3824(%1692) /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(126), float32]) */;
    %1694 = cast(meta[relay.Constant][45] /* ty=Tensor[(378), int8] */, dtype="int8") /* ty=Tensor[(378), int8] */;
    %1695 = cast(meta[relay.Constant][45] /* ty=Tensor[(378), int8] */, dtype="int8") /* ty=Tensor[(378), int8] */;
    %1696 = reshape(%1694, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), int8] */;
    %1697 = reshape(%1695, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), int8] */;
    %1698 = @func_6656() /* ty=(Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) */;
    %1699 = @func_12456() /* ty=(Tensor[(4, 4, 14), float32],) */;
    %1700 = @func_870() /* ty=Tensor[(4, 4, 14), float32] */;
    %1701 = %1690.0;
    %1702 = @func_8920() /* ty=Tensor[(4, 4, 14), float32] */;
    %1703 = %1693.3;
    %1704 = @func_9554() /* ty=Tensor[(4, 4, 14), float64] */;
    %1705 = @func_8751(%1696, %1697) /* ty=Tensor[(9, 7, 6), int8] */;
    %1706 = %1698.0;
    %1707 = %1699.0;
    (%1700, %1701, %1702, %1703, meta[relay.Constant][44] /* ty=Tensor[(126), float32] */, %1704, %1705, meta[relay.Constant][45] /* ty=Tensor[(378), int8] */, %1706, %1707)
  };
  %1708() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(126), float32], Tensor[(126), float32], Tensor[(4, 4, 14), float64], Tensor[(9, 7, 6), int8], Tensor[(378), int8], Tensor[(4, 4, 14), uint64], Tensor[(4, 4, 14), float32]) */
}

def @func_19412() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  %1709 = @func_15052() /* ty=(Tensor[(4, 4, 14), float32],) */;
  %1710 = @func_6446() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */;
  %1711 = %1709.0;
  %1712 = %1710.1;
  %1713 = @func_12629() /* ty=Tensor[(4, 4, 14), float32] */;
  (%1711, %1712, %1713)
}

def @func_20697() -> Tensor[(4, 4, 14), bool] {
  @func_12520() /* ty=Tensor[(4, 4, 14), bool] */
}

def @func_4388() -> Tensor[(4, 4, 14), float32] {
  @func_4386() /* ty=Tensor[(4, 4, 14), float32] */
}

def @func_13471() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_13469() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_11948() -> (Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) {
  @func_11946() /* ty=(Tensor[(4, 4, 14), float32], Tensor[(4, 4, 14), float32]) */
}

def @func_18045() -> Tensor[(4, 4, 14), float32] {
  %1714 = fn () -> Tensor[(4, 4, 14), float32] {
    @func_1653() /* ty=Tensor[(4, 4, 14), float32] */
  };
  %1714() /* ty=Tensor[(4, 4, 14), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen874/build/output.py:7557: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen874/build/output.py", line 7562, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(770) tvmgen_default_fused_log2_sqrt_kernel0(double* __restrict__ T_sqrt, double* __restrict__ placeholder) {
  T_sqrt[(((int)threadIdx.x))] = sqrt(log2(placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


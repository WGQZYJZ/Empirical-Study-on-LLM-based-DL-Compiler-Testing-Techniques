==========mod==========
#[version = "0.0.5"]
def @func_7773(%var_7721: Tensor[(480), float64], %var_7733: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %0 = @func_2754() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
  %1 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %2 = cast(%var_7733, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %3 = reshape(%2, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
  %4 = @func_2892(%3) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) */;
  %5 = cast(%var_7721, dtype="float64") /* ty=Tensor[(480), float64] */;
  %6 = reshape(%5, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %7 = @func_4649(%6) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %8 = %7.8;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 15, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %10 = shape_of(%8, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%8, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %13 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %14 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
  %15 = %0.0;
  %16 = %1.0;
  %17 = %4.4;
  %18 = minimum(%11, %12) /* ty=Tensor[(2, 15, 16), float32] */;
  %19 = %13.1;
  %20 = %14.0;
  (%15, %var_7721, %16, %17, %var_7733, %18, %19, %20)
}

def @func_855() -> (Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) {
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 16), float32] */, dtype="float32") /* ty=Tensor[(4, 16), float32] */;
  %22 = reshape(%21, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %23 = @func_392(%22) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 1, 4), int64] */, dtype="float64") /* ty=Tensor[(4, 1, 4), float64] */;
  %25 = sin(%24) /* ty=Tensor[(4, 1, 4), float64] */;
  %26 = cast(3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 1, 4), int64] */, dtype="int64") /* ty=Tensor[(4, 1, 4), int64] */;
  %28 = subtract(%26, %27) /* ty=Tensor[(4, 1, 4), int64] */;
  %29 = cast(%28, dtype="bool") /* ty=Tensor[(4, 1, 4), bool] */;
  %30 = shape_of(%25, dtype="int32") /* ty=Tensor[(3), int32] */;
  %31 = cast(%25, dtype="bool") /* ty=Tensor[(4, 1, 4), bool] */;
  %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 16), float32] */, dtype="float32") /* ty=Tensor[(4, 16), float32] */;
  %34 = reshape(%33, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %35 = @func_392(%34) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %36 = %23.1;
  %37 = equal(%31, %32) /* ty=Tensor[(4, ?, 4), bool] */;
  %38 = %35.0;
  (%36, meta[relay.Constant][1] /* ty=Tensor[(4, 16), float32] */, %37, %38)
}

def @func_3853(%var_3819: Tensor[(2340), float32]) -> (Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %39 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %40 = cast(%var_3819, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %41 = reshape(%40, newshape=[9, 260]) /* ty=Tensor[(9, 260), float32] */;
  %42 = @func_2260(%41) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 16), float32]) */;
  %43 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %44 = %39.0;
  %45 = %42.2;
  %46 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
  %47 = @func_3555() /* ty=Tensor[(4, 16), float32] */;
  %48 = %43.0;
  (%44, %45, %var_3819, %46, %47, %48)
}

def @func_16807() -> Tensor[(4, 16), float32] {
  %49 = @func_4676() /* ty=(Tensor[(4, 16), float32],) */;
  %49.0
}

def @func_8344() -> Tensor[(4, 16), float32] {
  %50 = @func_2094() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %50.0
}

def @func_6036(%var_5987: Tensor[(60, 2), uint64]) -> (Tensor[(4, 16), float32], Tensor[(60, 2), uint64], Tensor[(6, 4, 5), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32]) {
  %51 = cast(%var_5987, dtype="uint64") /* ty=Tensor[(60, 2), uint64] */;
  %52 = reshape(%51, newshape=[6, 4, 5]) /* ty=Tensor[(6, 4, 5), uint64] */;
  %53 = @func_3142(%52) /* ty=(Tensor[(6, 4, 5), uint64],) */;
  %54 = %53.0;
  %55 = cast(%54, dtype="float32") /* ty=Tensor[(6, 4, 5), float32] */;
  %56 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %57 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
  %58 = sinh(%55) /* ty=Tensor[(6, 4, 5), float32] */;
  %59 = @func_4823() /* ty=Tensor[(4, ?, 16), float32] */;
  %60 = %56.0;
  (%57, %var_5987, %58, %59, %60)
}

def @func_8957() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(480), float32]) {
  %61 = @func_7165() /* ty=(Tensor[(4, 16), float32], Tensor[(256), float64]) */;
  %62 = @func_1235() /* ty=(Tensor[(4, 16), float32],) */;
  %63 = @func_2754() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
  %64 = %61.0;
  %65 = %62.0;
  %66 = %63.4;
  (%64, %65, %66)
}

def @func_17016() -> Tensor[(4, 16), float32] {
  %67 = @func_10241() /* ty=(Tensor[(4, 16), float32],) */;
  %67.0
}

def @func_1577() -> Tensor[(4, 16), float32] {
  %68 = @func_1235() /* ty=(Tensor[(4, 16), float32],) */;
  %68.0
}

def @func_18812(%var_18738: Tensor[(468), float32], %var_18793: Tensor[(40, 12), float64]) -> (Tensor[(4, 16), float32], Tensor[(13, 12, 3), float32], Tensor[(468), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(40, 12), float64], Tensor[(2340), float32], Tensor[(13, 13, 9), uint32], Tensor[(1, 1521), uint32], Tensor[(4, 16), float32]) {
  %69 = @func_16856() /* ty=(Tensor[(4, 16), float32],) */;
  %70 = cast(%var_18738, dtype="float32") /* ty=Tensor[(468), float32] */;
  %71 = reshape(%70, newshape=[13, 12, 3]) /* ty=Tensor[(13, 12, 3), float32] */;
  %72 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %73 = @func_7017() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) */;
  %74 = cast(%var_18793, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %75 = cast(meta[relay.Constant][3] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %76 = reshape(%74, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %77 = reshape(%75, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %78 = @func_7773(%76, %77) /* ty=(Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %79 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 1521), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1521), uint32] */;
  %80 = reshape(%79, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), uint32] */;
  %81 = @func_15087(%80) /* ty=(Tensor[(13, 13, 9), uint32],) */;
  %82 = %69.0;
  %83 = @func_14506(%71) /* ty=Tensor[(13, 12, 3), float32] */;
  %84 = %72.0;
  %85 = %73.0;
  %86 = %78.3;
  %87 = %81.0;
  %88 = @func_15125() /* ty=Tensor[(4, 16), float32] */;
  (%82, %83, %var_18738, %84, %85, %86, %var_18793, meta[relay.Constant][3] /* ty=Tensor[(2340), float32] */, %87, meta[relay.Constant][4] /* ty=Tensor[(1, 1521), uint32] */, %88)
}

def @func_18309(%var_18267: Tensor[(2340), float32], %var_18272: Tensor[(360), float64], %var_18304: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(360), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) {
  %89 = @func_15354() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %90 = @func_11905() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32]) */;
  %91 = cast(%var_18267, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %92 = reshape(%91, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %93 = @func_17054(%92) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16], Tensor[(2340), float32]) */;
  %94 = cast(%var_18272, dtype="float64") /* ty=Tensor[(360), float64] */;
  %95 = reshape(%94, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), float64] */;
  %96 = @func_16594(%95) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(360), uint64], Tensor[(2, 12, 15), bool], Tensor[(4, 16), float32]) */;
  %97 = cast(%var_18304, dtype="float32") /* ty=Tensor[(720), float32] */;
  %98 = reshape(%97, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %99 = @func_5692(%98) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) */;
  %100 = %89.1;
  %101 = %90.0;
  %102 = %93.2;
  %103 = %96.1;
  %104 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
  %105 = %99.1;
  (%100, %101, %102, %var_18267, %103, %var_18272, %104, %105, %var_18304)
}

def @func_19289() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %106 = @func_15011() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %107 = @func_11905() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32]) */;
  %108 = @func_8026() /* ty=Tensor[(4, 16), float32] */;
  %109 = %106.0;
  %110 = %107.1;
  (%108, %109, %110)
}

def @func_13714() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
  %111 = @func_2464() /* ty=(Tensor[(4, 16), float32],) */;
  %112 = @func_6235() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %113 = %111.0;
  %114 = cast(%113, dtype="float32") /* ty=Tensor[(4, 16), float32] */;
  %115 = reshape(%114, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %116 = @func_392(%115) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %117 = %112.0;
  %118 = %116.0;
  (%113, %117, %118)
}

def @func_7270() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %119 = @func_1100() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %120 = @func_1100() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %121 = %119.0;
  %122 = %120.3;
  (%121, %122)
}

def @func_3186() -> Tensor[(4, 16), float32] {
  @func_2511() /* ty=Tensor[(4, 16), float32] */
}

def @func_9833() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %123 = @func_5479() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */;
  %124 = @func_1100() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %125 = %123.5;
  %126 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
  %127 = %124.2;
  %128 = @func_4477() /* ty=Tensor[(4, 16), float32] */;
  (%125, %126, %127, %128)
}

def @func_12701(%var_12696: Tensor[(1, 2340), float32]) -> (Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) {
  %129 = cast(%var_12696, dtype="float32") /* ty=Tensor[(1, 2340), float32] */;
  %130 = reshape(%129, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %131 = @func_6337(%130) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) */;
  %132 = @func_11377() /* ty=Tensor[(2, 15, 16), float64] */;
  %133 = @func_11177() /* ty=Tensor[(4, 16), float32] */;
  %134 = @func_10079() /* ty=Tensor[(4, 16), float32] */;
  %135 = %131.2;
  (%132, %133, %134, %135, %var_12696)
}

def @func_12082(%var_12068: Tensor[(2, 144), float32]) -> (Tensor[(4, 16), float32], Tensor[(3, 6, 16), float32], Tensor[(2, 144), float32]) {
  %136 = cast(%var_12068, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %137 = reshape(%136, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %138 = @func_9226() /* ty=Tensor[(4, 16), float32] */;
  %139 = @func_7650(%137) /* ty=Tensor[(3, 6, 16), float32] */;
  (%138, %139, %var_12068)
}

def @func_15224() -> Tensor[(4, 16), float32] {
  @func_4241() /* ty=Tensor[(4, 16), float32] */
}

def @func_16912() -> (Tensor[(256), float64],) {
  %140 = @func_7165() /* ty=(Tensor[(4, 16), float32], Tensor[(256), float64]) */;
  %141 = %140.1;
  (%141,)
}

def @func_2194() -> Tensor[(4, 16), float32] {
  %142 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %142.0
}

def @func_1332() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %143 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %144 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %145 = %143.1;
  %146 = %144.0;
  (%145, %146)
}

def @func_8319(%var_8315: Tensor[(15, 7, 9), float64]) -> (Tensor[(15, 7, 9), float64],) {
  %147 = cast(%var_8315, dtype="float64") /* ty=Tensor[(15, 7, 9), float64] */;
  %148 = exp(%147) /* ty=Tensor[(15, 7, 9), float64] */;
  (%148,)
}

def @func_18976() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %149 = @func_14868() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %150 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
  %151 = %149.1;
  (%150, %151)
}

def @func_2892(%var_2826: Tensor[(3, 780), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) {
  %152 = @func_2015() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %153 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %154 = @func_1297() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %155 = cast(%var_2826, dtype="float32") /* ty=Tensor[(3, 780), float32] */;
  %156 = log(%155) /* ty=Tensor[(3, 780), float32] */;
  %157 = cast(%var_2826, dtype="float32") /* ty=Tensor[(3, 780), float32] */;
  %158 = reshape(%157, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float32] */;
  %159 = @func_1405(%158) /* ty=Tensor[(13, 15, 12), float32] */;
  %160 = cast(%159, dtype="bool") /* ty=Tensor[(13, 15, 12), bool] */;
  %161 = shape_of(%156, dtype="int32") /* ty=Tensor[(2), int32] */;
  %162 = cast(%156, dtype="bool") /* ty=Tensor[(3, 780), bool] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %164 = not_equal(%162, %163) /* ty=Tensor[(3, 780), bool] */;
  %165 = cast(%164, dtype="float64") /* ty=Tensor[(3, 780), float64] */;
  %166 = asinh(%165) /* ty=Tensor[(3, 780), float64] */;
  %167 = cast(%156, dtype="uint32") /* ty=Tensor[(3, 780), uint32] */;
  %168 = shape_of(%166, dtype="int32") /* ty=Tensor[(2), int32] */;
  %169 = cast(%166, dtype="uint32") /* ty=Tensor[(3, 780), uint32] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %171 = cast(meta[relay.Constant][5] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %172 = cast(meta[relay.Constant][5] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %173 = reshape(%171, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
  %174 = reshape(%172, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
  %175 = @func_1168(%173, %174) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %176 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
  %177 = %152.2;
  %178 = %153.1;
  %179 = %154.0;
  %180 = bitwise_or(%169, %170) /* ty=Tensor[(3, 780), uint32] */;
  %181 = %175.3;
  (%176, %177, %178, %179, %180, %181, meta[relay.Constant][5] /* ty=Tensor[(1680), float32] */)
}

def @func_15537(%var_15510: Tensor[(630), float32], %var_15511: Tensor[(18, 130), float32]) -> (Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(630), float32], Tensor[(18, 130), float32], Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32]) {
  %182 = @func_7128() /* ty=(Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) */;
  %183 = cast(%var_15510, dtype="float32") /* ty=Tensor[(630), float32] */;
  %184 = cast(%var_15511, dtype="float32") /* ty=Tensor[(18, 130), float32] */;
  %185 = reshape(%183, newshape=[7, 6, 15]) /* ty=Tensor[(7, 6, 15), float32] */;
  %186 = reshape(%184, newshape=[1, 2340]) /* ty=Tensor[(1, 2340), float32] */;
  %187 = @func_4364(%185, %186) /* ty=(Tensor[(7, 6, 15), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32], Tensor[(2, 15, 16), float64]) */;
  %188 = @func_11377() /* ty=Tensor[(2, 15, 16), float64] */;
  %189 = cast(%188, dtype="float64") /* ty=Tensor[(2, 15, 16), float64] */;
  %190 = cast(%var_15511, dtype="float32") /* ty=Tensor[(18, 130), float32] */;
  %191 = reshape(%189, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %192 = reshape(%190, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %193 = @func_7773(%191, %192) /* ty=(Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %194 = %182.0;
  %195 = %187.1;
  %196 = %193.6;
  (%194, %195, %var_15510, %var_15511, %188, %196)
}

def @func_11839() -> Tensor[(2, 15, 16), float64] {
  @func_11377() /* ty=Tensor[(2, 15, 16), float64] */
}

def @func_3287(%var_3245: Tensor[(3, 780), float32], %var_3262: Tensor[(3, 780), float32]) -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(3, 780), bool]) {
  %197 = @func_2464() /* ty=(Tensor[(4, 16), float32],) */;
  %198 = cast(%var_3245, dtype="float32") /* ty=Tensor[(3, 780), float32] */;
  %199 = reshape(%198, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %200 = @func_2940(%199) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
  %201 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %202 = cast(%var_3262, dtype="bool") /* ty=Tensor[(3, 780), bool] */;
  %203 = shape_of(%var_3245, dtype="int32") /* ty=Tensor[(2), int32] */;
  %204 = cast(%var_3245, dtype="bool") /* ty=Tensor[(3, 780), bool] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %206 = cast(%var_3245, dtype="bool") /* ty=Tensor[(3, 780), bool] */;
  %207 = shape_of(%var_3262, dtype="int32") /* ty=Tensor[(2), int32] */;
  %208 = cast(%var_3262, dtype="bool") /* ty=Tensor[(3, 780), bool] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %210 = %197.0;
  %211 = %200.3;
  %212 = %201.0;
  %213 = greater(%204, %205) /* ty=Tensor[(3, 780), bool] */;
  %214 = equal(%208, %209) /* ty=Tensor[(3, 780), bool] */;
  (%210, %211, %212, %213, %214)
}

def @func_5789() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %215 = @func_5101() /* ty=Tensor[(4, 16), float32] */;
  %216 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
  (%215, %216)
}

def @func_16160(%var_16074: Tensor[(4, 15, 16), float32], %var_16090: Tensor[(4, 15, 16), bool]) -> (Tensor[(4, 15, 16), int32], Tensor[(4, 16), float32], Tensor[(4, 15, 16), float64], Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %217 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %218 = %217.0;
  %219 = cast(%218, dtype="bool") /* ty=Tensor[(4, ?, 16), bool] */;
  %220 = cast(%var_16074, dtype="bool") /* ty=Tensor[(4, 15, 16), bool] */;
  %221 = greater(%219, %220) /* ty=Tensor[(4, 15, 16), bool] */;
  %222 = cast(%var_16090, dtype="int32") /* ty=Tensor[(4, 15, 16), int32] */;
  %223 = shape_of(%221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(%221, dtype="int32") /* ty=Tensor[(4, 15, 16), int32] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %226 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %227 = cast(%var_16074, dtype="float64") /* ty=Tensor[(4, 15, 16), float64] */;
  %228 = @func_11993() /* ty=(Tensor[(4, 16), float32],) */;
  %229 = @func_3406() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32]) */;
  %230 = multiply(%224, %225) /* ty=Tensor[(4, 15, 16), int32] */;
  %231 = %226.3;
  %232 = rsqrt(%227) /* ty=Tensor[(4, 15, 16), float64] */;
  %233 = @func_11377() /* ty=Tensor[(2, 15, 16), float64] */;
  %234 = %228.0;
  %235 = %229.0;
  (%230, %231, %232, %233, %234, %235)
}

def @func_9668() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %236 = @func_2114() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %237 = @func_8026() /* ty=Tensor[(4, 16), float32] */;
  %238 = %236.0;
  (%237, %238)
}

def @func_14987(%var_14952: Tensor[(60), int32]) -> (Tensor[(4, 16), float32], Tensor[(2, 5, 6), int32], Tensor[(60), int32], Tensor[(4, 16), float32]) {
  %239 = @func_10467() /* ty=(Tensor[(4, 16), float32],) */;
  %240 = cast(%var_14952, dtype="int32") /* ty=Tensor[(60), int32] */;
  %241 = reshape(%240, newshape=[2, 5, 6]) /* ty=Tensor[(2, 5, 6), int32] */;
  %242 = %239.0;
  %243 = @func_11165(%241) /* ty=Tensor[(2, 5, 6), int32] */;
  %244 = @func_8026() /* ty=Tensor[(4, 16), float32] */;
  (%242, %243, %var_14952, %244)
}

def @func_10520() -> (Tensor[(4, 16), float32],) {
  %245 = @func_6509() /* ty=Tensor[(4, 16), float32] */;
  (%245,)
}

def @func_11177() -> Tensor[(4, 16), float32] {
  %246 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %246.0
}

def @func_8512() -> (Tensor[(4, 16), float32],) {
  %247 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
  %248 = %247.0;
  (%248,)
}

def @func_2389(%var_2380: Tensor[(2, 15, 16), float32]) -> (Tensor[(2, 15, 16), float32],) {
  %249 = cast(%var_2380, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %250 = log10(%249) /* ty=Tensor[(2, 15, 16), float32] */;
  (%250,)
}

def @func_6555() -> (Tensor[(2340), float64], Tensor[(4, 16), float32]) {
  %251 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
  %252 = %251.0;
  %253 = cast(%252, dtype="float64") /* ty=Tensor[(2340), float64] */;
  %254 = tan(%253) /* ty=Tensor[(2340), float64] */;
  %255 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
  (%254, %255)
}

def @func_2464() -> (Tensor[(4, 16), float32],) {
  %256 = @func_1216() /* ty=Tensor[(4, 16), float32] */;
  (%256,)
}

def @func_7165() -> (Tensor[(4, 16), float32], Tensor[(256), float64]) {
  %257 = @func_7017() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) */;
  %258 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
  %259 = %257.4;
  (%258, %259)
}

def @func_9582() -> (Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 120), float64]) {
  %260 = @func_6235() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %261 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 120), float64] */, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
  %262 = reshape(%261, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %263 = @func_4649(%262) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %264 = %260.1;
  %265 = %263.7;
  (%264, %265, meta[relay.Constant][6] /* ty=Tensor[(4, 120), float64] */)
}

def @func_10807(%var_10770: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, ?, 16), float64]) {
  %266 = @func_9955() /* ty=(Tensor[(4, 16), float32],) */;
  %267 = cast(%var_10770, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %268 = reshape(%267, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float32] */;
  %269 = %266.0;
  %270 = @func_1405(%268) /* ty=Tensor[(13, 15, 12), float32] */;
  %271 = @func_5129() /* ty=Tensor[(4, ?, 16), float64] */;
  (%269, %270, %var_10770, %271)
}

def @func_13563() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %272 = @func_10422() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %273 = @func_5750() /* ty=Tensor[(4, 16), float32] */;
  %274 = @func_8344() /* ty=Tensor[(4, 16), float32] */;
  %275 = %272.0;
  (%273, %274, %275)
}

def @func_11377() -> Tensor[(2, 15, 16), float64] {
  %276 = @func_7128() /* ty=(Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) */;
  %276.1
}

def @func_15011() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %277 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
  %278 = @func_13312() /* ty=Tensor[(4, 16), float32] */;
  (%277, %278)
}

def @func_5225() -> Tensor[(4, 16), float32] {
  @func_1216() /* ty=Tensor[(4, 16), float32] */
}

def @func_12723() -> Tensor[(4, 16), float32] {
  %279 = @func_8512() /* ty=(Tensor[(4, 16), float32],) */;
  %279.0
}

def @func_17550() -> (Tensor[(4, 16), float32],) {
  %280 = @func_16789() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %281 = %280.2;
  (%281,)
}

def @func_13632() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %282 = @func_12588() /* ty=(Tensor[(4, 16), float32],) */;
  %283 = @func_2162() /* ty=(Tensor[(4, 16), float32],) */;
  %284 = %282.0;
  %285 = %283.0;
  (%284, %285)
}

def @func_17614() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %286 = @func_16400() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %287 = @func_12486() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64]) */;
  %288 = %286.0;
  %289 = %287.0;
  (%288, %289)
}

def @func_4788() -> (Tensor[(4, 16), float32],) {
  %290 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %291 = %290.0;
  (%291,)
}

def @func_10296() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %292 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
  %293 = @func_3561() /* ty=Tensor[(4, 16), float32] */;
  (%292, %293)
}

def @func_19194(%var_19186: Tensor[(720), float32]) -> (Tensor[(240, 2), float64], Tensor[(2340), float32], Tensor[(720), float32]) {
  %294 = @func_14200() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(240, 2), float64], Tensor[(2340), float64], Tensor[(4, ?, 16), float64], Tensor[(2, 15, 16), bool]) */;
  %295 = cast(%var_19186, dtype="float32") /* ty=Tensor[(720), float32] */;
  %296 = reshape(%295, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %297 = @func_8218(%296) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), float32], Tensor[(2340), float32], Tensor[(12, 60), float32], Tensor[(720), float32], Tensor[(4, 16), float32]) */;
  %298 = %294.3;
  %299 = %297.5;
  (%298, %299, %var_19186)
}

def @func_18651() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 13, 9), uint32], Tensor[(1521), uint32]) {
  %300 = cast(meta[relay.Constant][7] /* ty=Tensor[(1521), uint32] */, dtype="uint32") /* ty=Tensor[(1521), uint32] */;
  %301 = reshape(%300, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), uint32] */;
  %302 = @func_15087(%301) /* ty=(Tensor[(13, 13, 9), uint32],) */;
  %303 = @func_14672() /* ty=Tensor[(4, 16), float32] */;
  %304 = @func_16062() /* ty=Tensor[(4, 16), float32] */;
  %305 = %302.0;
  (%303, %304, %305, meta[relay.Constant][7] /* ty=Tensor[(1521), uint32] */)
}

def @func_19219() -> (Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 1680), float32], Tensor[(4, 16), float32]) {
  %306 = @func_8401() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %307 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 1680), float32] */, dtype="float32") /* ty=Tensor[(1, 1680), float32] */;
  %308 = reshape(%307, newshape=[1, 1680]) /* ty=Tensor[(1, 1680), float32] */;
  %309 = @func_3777(%308) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2340), float32], Tensor[(4, ?, 16), float32], Tensor[(1, 1680), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %310 = @func_18651() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 13, 9), uint32], Tensor[(1521), uint32]) */;
  %311 = %306.0;
  %312 = %309.1;
  %313 = %310.0;
  (%311, %312, meta[relay.Constant][8] /* ty=Tensor[(1, 1680), float32] */, %313)
}

def @func_2362(%var_2291: float32, %var_2292: Tensor[(3, 16, 15), float32]) -> (Tensor[(3, 16, 15), float32], Tensor[(3, 16, 15), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %314 = cast(%var_2291, dtype="float32") /* ty=float32 */;
  %315 = cast(%var_2292, dtype="float32") /* ty=Tensor[(3, 16, 15), float32] */;
  %316 = cast(%var_2292, dtype="float64") /* ty=Tensor[(3, 16, 15), float64] */;
  %317 = cast(%var_2291, dtype="float64") /* ty=float64 */;
  %318 = @func_2015() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %319 = @func_2015() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %320 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %321 = floor_divide(%314, %315) /* ty=Tensor[(3, 16, 15), float32] */;
  %322 = divide(%316, %317) /* ty=Tensor[(3, 16, 15), float64] */;
  %323 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
  %324 = %318.1;
  %325 = %319.2;
  %326 = %320.1;
  (%321, %322, %323, %324, %325, %326)
}

def @func_9419() -> (Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(2, 15, 16), float64]) {
  %327 = @func_9144() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(1, 2340), float32], Tensor[(4, 16), float32]) */;
  %328 = cast(meta[relay.Constant][9] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %329 = reshape(%328, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %330 = @func_4649(%329) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %331 = @func_7128() /* ty=(Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) */;
  %332 = %327.0;
  %333 = %330.2;
  %334 = %331.1;
  (%332, %333, meta[relay.Constant][9] /* ty=Tensor[(480), float64] */, %334)
}

def @func_19351() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %335 = @func_11905() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32]) */;
  %336 = @func_16807() /* ty=Tensor[(4, 16), float32] */;
  %337 = %335.1;
  (%336, %337)
}

def @func_8063(%var_8059: Tensor[(150, 1), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150, 1), float32]) {
  %338 = @func_4676() /* ty=(Tensor[(4, 16), float32],) */;
  %339 = cast(%var_8059, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
  %340 = reshape(%339, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), float32] */;
  %341 = @func_4223(%340) /* ty=(Tensor[(15, 5, 2), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool]) */;
  %342 = %338.0;
  %343 = @func_3561() /* ty=Tensor[(4, 16), float32] */;
  %344 = %341.4;
  (%342, %343, %344, %var_8059)
}

def @func_11197() -> (Tensor[(4, ?, 16), float64],) {
  %345 = @func_5129() /* ty=Tensor[(4, ?, 16), float64] */;
  (%345,)
}

def @func_10079() -> Tensor[(4, 16), float32] {
  %346 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %346.1
}

def @func_6526() -> (Tensor[(4, 16), float32],) {
  %347 = @func_4676() /* ty=(Tensor[(4, 16), float32],) */;
  %348 = %347.0;
  (%348,)
}

def @func_4881() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %349 = @func_2533() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %350 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %351 = @func_2524() /* ty=(Tensor[(4, 16), float32],) */;
  %352 = @func_4811() /* ty=Tensor[(4, 16), float32] */;
  %353 = %349.0;
  %354 = @func_4241() /* ty=Tensor[(4, 16), float32] */;
  %355 = %350.0;
  %356 = %351.0;
  (%352, %353, %354, %355, %356)
}

def @func_13312() -> Tensor[(4, 16), float32] {
  @func_5225() /* ty=Tensor[(4, 16), float32] */
}

def @func_13156() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %357 = @func_10024() /* ty=Tensor[(4, 16), float32] */;
  %358 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
  %359 = @func_3555() /* ty=Tensor[(4, 16), float32] */;
  (%357, %358, %359)
}

def @func_13456() -> (Tensor[(4, 16), float32],) {
  %360 = @func_8417() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %361 = %360.0;
  (%361,)
}

def @func_17782() -> (Tensor[(4, 16), float32],) {
  %362 = @func_8902() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %363 = %362.4;
  (%363,)
}

def @func_5302() -> (Tensor[(4, 16), float32],) {
  %364 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %365 = %364.0;
  (%365,)
}

def @func_2555() -> (Tensor[(4, 16), float32],) {
  %366 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
  (%366,)
}

def @func_16725() -> Tensor[(4, 16), float32] {
  %367 = @func_10340() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(120), uint64]) */;
  %367.0
}

def @func_17812() -> (Tensor[(4, 16), float32],) {
  %368 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %369 = %368.0;
  (%369,)
}

def @func_10024() -> Tensor[(4, 16), float32] {
  %370 = @func_9668() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %370.1
}

def @func_1884() -> (Tensor[(4, 16), float32],) {
  %371 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %372 = %371.0;
  (%372,)
}

def @func_15125() -> Tensor[(4, 16), float32] {
  %373 = @func_2464() /* ty=(Tensor[(4, 16), float32],) */;
  %373.0
}

def @func_8291() -> (Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32]) {
  %374 = @func_4295() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %375 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
  %376 = %374.0;
  %377 = %375.0;
  (%376, %377)
}

def @func_10263(%var_10250: Tensor[(2, 12, 4), float64]) -> (Tensor[(2, 12, 4), float64],) {
  %378 = cast(%var_10250, dtype="float64") /* ty=Tensor[(2, 12, 4), float64] */;
  %379 = log2(%378) /* ty=Tensor[(2, 12, 4), float64] */;
  (%379,)
}

def @func_14912() -> (Tensor[(2, 15, 16), float64],) {
  %380 = @func_3988() /* ty=Tensor[(2, 15, 16), float64] */;
  (%380,)
}

def @func_3555() -> Tensor[(4, 16), float32] {
  %381 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %381.1
}

def @func_14334() -> (Tensor[(4, 16), float32],) {
  %382 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %383 = %382.4;
  (%383,)
}

def @func_2995(%var_2974: Tensor[(4, 2, 16), uint16]) -> (Tensor[(4, ?, 4), bool], Tensor[(4, 2, 16), bool]) {
  %384 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %385 = @func_2094() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %386 = %385.1;
  %387 = cast(%386, dtype="bool") /* ty=Tensor[(4, ?, 16), bool] */;
  %388 = cast(%var_2974, dtype="bool") /* ty=Tensor[(4, 2, 16), bool] */;
  %389 = %384.2;
  %390 = greater_equal(%387, %388) /* ty=Tensor[(4, 2, 16), bool] */;
  (%389, %390)
}

def @func_11798(%var_11765: Tensor[(128, 2), float64], %var_11778: Tensor[(2, 16, 8), float64]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(128, 2), float64], Tensor[(2, 16, 8), uint16], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %391 = @func_9394() /* ty=(Tensor[(4, 16), float32],) */;
  %392 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %393 = cast(%var_11765, dtype="float64") /* ty=Tensor[(128, 2), float64] */;
  %394 = reshape(%393, newshape=[2, 16, 8]) /* ty=Tensor[(2, 16, 8), float64] */;
  %395 = @func_6874(%394) /* ty=(Tensor[(2, 16, 8), float64],) */;
  %396 = %395.0;
  %397 = cast(%var_11778, dtype="uint16") /* ty=Tensor[(2, 16, 8), uint16] */;
  %398 = shape_of(%396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %399 = cast(%396, dtype="uint16") /* ty=Tensor[(2, 16, 8), uint16] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %401 = @func_10241() /* ty=(Tensor[(4, 16), float32],) */;
  %402 = %391.0;
  %403 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
  %404 = %392.0;
  %405 = @func_10024() /* ty=Tensor[(4, 16), float32] */;
  %406 = bitwise_or(%399, %400) /* ty=Tensor[(2, 16, 8), uint16] */;
  %407 = %401.0;
  %408 = @func_10079() /* ty=Tensor[(4, 16), float32] */;
  (%402, %403, %404, %405, %var_11765, %406, %407, %408)
}

def @func_18206() -> Tensor[(2, 15, 16), float64] {
  %409 = @func_16033() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float64]) */;
  %409.1
}

def @func_7017() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) {
  %410 = @func_4788() /* ty=(Tensor[(4, 16), float32],) */;
  %411 = cast(meta[relay.Constant][10] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %412 = reshape(%411, newshape=[2, 16, 8]) /* ty=Tensor[(2, 16, 8), float64] */;
  %413 = @func_6874(%412) /* ty=(Tensor[(2, 16, 8), float64],) */;
  %414 = @func_2511() /* ty=Tensor[(4, 16), float32] */;
  %415 = %410.0;
  %416 = @func_5129() /* ty=Tensor[(4, ?, 16), float64] */;
  %417 = %413.0;
  (%414, %415, %416, %417, meta[relay.Constant][10] /* ty=Tensor[(256), float64] */)
}

def @func_8902() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %418 = @func_6235() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %419 = @func_4295() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %420 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %421 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %422 = %418.0;
  %423 = %419.0;
  %424 = @func_3809() /* ty=Tensor[(4, 16), float32] */;
  %425 = %420.0;
  %426 = %421.0;
  (%422, %423, %424, %425, %426)
}

def @func_1235() -> (Tensor[(4, 16), float32],) {
  %427 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %428 = %427.1;
  (%428,)
}

def @func_8115() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %429 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %430 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
  %431 = %429.0;
  (%430, %431)
}

def @func_11905() -> (Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32]) {
  %432 = @func_7165() /* ty=(Tensor[(4, 16), float32], Tensor[(256), float64]) */;
  %433 = @func_5129() /* ty=Tensor[(4, ?, 16), float64] */;
  %434 = %432.0;
  (%433, %434)
}

def @func_4823() -> Tensor[(4, ?, 16), float32] {
  %435 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %435.0
}

def @func_16840() -> Tensor[(4, 16), float32] {
  @func_16725() /* ty=Tensor[(4, 16), float32] */
}

def @func_16341(%var_16330: Tensor[(12, 10, 14), float32], %var_16331: Tensor[(12, 10, 14), float32]) -> Tensor[(12, 10, 14), bool] {
  %436 = cast(%var_16331, dtype="bool") /* ty=Tensor[(12, 10, 14), bool] */;
  %437 = shape_of(%var_16330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%var_16330, dtype="bool") /* ty=Tensor[(12, 10, 14), bool] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%438, %439) /* ty=Tensor[(12, 10, 14), bool] */
}

def @func_4241() -> Tensor[(4, 16), float32] {
  @func_2511() /* ty=Tensor[(4, 16), float32] */
}

def @func_10561() -> (Tensor[(2, 15, 16), float32],) {
  %440 = @func_7128() /* ty=(Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) */;
  %441 = %440.0;
  %442 = cast(%441, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %443 = atan(%442) /* ty=Tensor[(2, 15, 16), float32] */;
  (%443,)
}

def @func_8238() -> Tensor[(4, 16), float32] {
  @func_6661() /* ty=Tensor[(4, 16), float32] */
}

def @func_2940(%var_2924: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) {
  %444 = @func_2004() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %445 = cast(%var_2924, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %446 = reshape(%445, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
  %447 = @func_2892(%446) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) */;
  %448 = cast(meta[relay.Constant][11] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %449 = reshape(%448, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float32] */;
  %450 = @func_2389(%449) /* ty=(Tensor[(2, 15, 16), float32],) */;
  %451 = %444.1;
  %452 = %447.3;
  %453 = %450.0;
  (%451, %452, %var_2924, %453, meta[relay.Constant][11] /* ty=Tensor[(480), float32] */)
}

def @func_14712() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %454 = @func_14334() /* ty=(Tensor[(4, 16), float32],) */;
  %455 = @func_7270() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %456 = %454.0;
  %457 = %455.0;
  (%456, %457)
}

def @func_19056() -> (Tensor[(120), uint64], Tensor[(4, 16), float32]) {
  %458 = @func_10340() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(120), uint64]) */;
  %459 = @func_13714() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %460 = %458.2;
  %461 = %459.0;
  (%460, %461)
}

def @func_13038(%var_13036: Tensor[(1680, 1), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(1680, 1), float32]) {
  %462 = @func_5302() /* ty=(Tensor[(4, 16), float32],) */;
  %463 = @func_11363() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %464 = cast(%var_13036, dtype="float32") /* ty=Tensor[(1680, 1), float32] */;
  %465 = cast(%var_13036, dtype="float32") /* ty=Tensor[(1680, 1), float32] */;
  %466 = reshape(%464, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
  %467 = reshape(%465, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
  %468 = @func_1168(%466, %467) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %469 = %462.0;
  %470 = %463.0;
  %471 = %468.2;
  (%469, %470, %471, %var_13036)
}

def @func_15906() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %472 = @func_1235() /* ty=(Tensor[(4, 16), float32],) */;
  %473 = @func_5225() /* ty=Tensor[(4, 16), float32] */;
  %474 = %472.0;
  (%473, %474)
}

def @func_2114() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %475 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %476 = @func_2094() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %477 = %475.0;
  %478 = %476.0;
  (%477, %478)
}

def @func_6136() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(6, 4, 5), uint64], Tensor[(4, 16), float32]) {
  %479 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %480 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
  %481 = @func_5880() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
  %482 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %483 = @func_3186() /* ty=Tensor[(4, 16), float32] */;
  %484 = %479.0;
  %485 = %480.0;
  %486 = %481.3;
  %487 = %482.0;
  (%483, %484, %485, %486, %487)
}

def @func_12049() -> (Tensor[(4, 16), float32],) {
  %488 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
  (%488,)
}

def @func_15796(%var_15790: Tensor[(480), float64], %var_15791: Tensor[(18, 130), float32]) -> (Tensor[(4, 16), float32], Tensor[(10, 11, 7), int16], Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(18, 130), float32]) {
  %489 = @func_12666() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(256), float64]) */;
  %490 = @func_4971() /* ty=(Tensor[(4, 16), float32], Tensor[(10, 11, 7), int16]) */;
  %491 = cast(%var_15790, dtype="float64") /* ty=Tensor[(480), float64] */;
  %492 = cast(%var_15791, dtype="float32") /* ty=Tensor[(18, 130), float32] */;
  %493 = reshape(%491, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %494 = reshape(%492, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %495 = @func_7773(%493, %494) /* ty=(Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %496 = %489.1;
  %497 = %490.1;
  %498 = %495.0;
  (%496, %497, %498, %var_15790, %var_15791)
}

def @func_10422() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %499 = @func_5479() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */;
  %500 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %501 = @func_5588() /* ty=(Tensor[(4, 16), float32],) */;
  %502 = %499.3;
  %503 = %500.2;
  %504 = %501.0;
  (%502, %503, %504)
}

def @func_1783(%var_1704: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), int16], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(4, 16), float32]) {
  %505 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %506 = cast(%var_1704, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %507 = reshape(%506, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float32] */;
  %508 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %509 = %505.1;
  %510 = cast(%509, dtype="float32") /* ty=Tensor[(4, 16), float32] */;
  %511 = reshape(%510, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %512 = @func_392(%511) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %513 = %512.1;
  %514 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
  %515 = cast(%514, dtype="int16") /* ty=Tensor[(4, 16), int16] */;
  %516 = shape_of(%513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(%513, dtype="int16") /* ty=Tensor[(4, ?, 16), int16] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %519 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %520 = cast(%var_1704, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %521 = reshape(%520, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float32] */;
  %522 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %523 = @func_1405(%507) /* ty=Tensor[(13, 15, 12), float32] */;
  %524 = %508.0;
  %525 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
  %526 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
  %527 = minimum(%517, %518) /* ty=Tensor[(4, ?, 16), int16] */;
  %528 = %519.0;
  %529 = @func_1405(%521) /* ty=Tensor[(13, 15, 12), float32] */;
  %530 = %522.0;
  (%509, %523, %var_1704, %524, %525, %526, %527, %528, %529, %530)
}

def @func_1455() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %531 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %532 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %533 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %534 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %535 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %536 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %537 = %531.0;
  %538 = %532.0;
  %539 = %533.0;
  %540 = %534.0;
  %541 = %535.1;
  %542 = %536.1;
  (%537, %538, %539, %540, %541, %542)
}

def @func_8417() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %543 = @func_8115() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %544 = @func_6448() /* ty=Tensor[(4, 16), float32] */;
  %545 = %543.1;
  (%544, %545)
}

def @func_6874(%var_6860: Tensor[(2, 16, 8), float64]) -> (Tensor[(2, 16, 8), float64],) {
  %546 = cast(%var_6860, dtype="float64") /* ty=Tensor[(2, 16, 8), float64] */;
  %547 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(2, 16, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 16, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 16, 8), float64] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %550 = divide(%548, %549) /* ty=Tensor[(2, 16, 8), float64] */;
  (%550,)
}

def @func_18869() -> Tensor[(4, 16), float32] {
  %551 = @func_17495() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %551.1
}

def @func_8985(%var_8975: Tensor[(16, 2340), float32]) -> (Tensor[(16, 2340), uint64],) {
  %552 = @func_6701() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */;
  %553 = %552.3;
  %554 = cast(%553, dtype="uint64") /* ty=Tensor[(1, 2340), uint64] */;
  %555 = cast(%var_8975, dtype="uint64") /* ty=Tensor[(16, 2340), uint64] */;
  %556 = bitwise_xor(%554, %555) /* ty=Tensor[(16, 2340), uint64] */;
  (%556,)
}

def @func_4295() -> (Tensor[(4, ?, 16), float32],) {
  %557 = @func_2533() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %558 = %557.0;
  (%558,)
}

def @func_4971() -> (Tensor[(4, 16), float32], Tensor[(10, 11, 7), int16]) {
  %559 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %560 = cast(meta[relay.Constant][13] /* ty=Tensor[(77, 10), float32] */, dtype="float32") /* ty=Tensor[(77, 10), float32] */;
  %561 = reshape(%560, newshape=[10, 11, 7]) /* ty=Tensor[(10, 11, 7), float32] */;
  %562 = @func_3676(%561) /* ty=(Tensor[(10, 11, 7), float32], Tensor[(4, 16), float32]) */;
  %563 = %562.0;
  %564 = cast(meta[relay.Constant][13] /* ty=Tensor[(77, 10), float32] */, dtype="int16") /* ty=Tensor[(77, 10), int16] */;
  %565 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%563, dtype="int16") /* ty=Tensor[(10, 11, 7), int16] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %568 = %559.5;
  %569 = right_shift(%566, %567) /* ty=Tensor[(10, 11, 7), int16] */;
  (%568, %569)
}

def @func_17054(%var_17041: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16], Tensor[(2340), float32]) {
  %570 = @func_10917() /* ty=(Tensor[(4, 16), float32],) */;
  %571 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %572 = cast(%var_17041, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %573 = reshape(%572, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %574 = @func_6337(%573) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) */;
  %575 = %571.0;
  %576 = cast(%575, dtype="float32") /* ty=Tensor[(4, 16), float32] */;
  %577 = reshape(%576, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %578 = @func_392(%577) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %579 = cast(meta[relay.Constant][14] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %580 = shape_of(%var_17041, dtype="int32") /* ty=Tensor[(1), int32] */;
  %581 = cast(%var_17041, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?), float32] */;
  %583 = %570.0;
  %584 = %574.2;
  %585 = %578.1;
  %586 = divide(%581, %582) /* ty=Tensor[(2340), float32] */;
  (%583, %575, %584, %585, %586)
}

def @func_11417() -> (Tensor[(4, 16), float32],) {
  %587 = @func_5789() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %588 = %587.1;
  (%588,)
}

def @func_14259() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %589 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %590 = %589.0;
  %591 = @func_14124() /* ty=Tensor[(4, 16), float32] */;
  (%590, %591)
}

def @func_15087(%var_15083: Tensor[(13, 13, 9), uint32]) -> (Tensor[(13, 13, 9), uint32],) {
  %592 = cast(%var_15083, dtype="uint32") /* ty=Tensor[(13, 13, 9), uint32] */;
  %593 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(13, 13, 9), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 13, 9), uint32] */, dtype="uint32") /* ty=Tensor[(13, 13, 9), uint32] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %596 = right_shift(%594, %595) /* ty=Tensor[(13, 13, 9), uint32] */;
  (%596,)
}

def @func_15726() -> Tensor[(4, 16), float32] {
  %597 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %597.0
}

def @func_6448() -> Tensor[(4, 16), float32] {
  @func_3809() /* ty=Tensor[(4, 16), float32] */
}

def @func_4477() -> Tensor[(4, 16), float32] {
  @func_1671() /* ty=Tensor[(4, 16), float32] */
}

def @func_15260() -> (Tensor[(4, 16), float32],) {
  %598 = @func_10212() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150), float32]) */;
  %599 = %598.1;
  (%599,)
}

def @func_10212() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150), float32]) {
  %600 = cast(meta[relay.Constant][16] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
  %601 = reshape(%600, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
  %602 = @func_8063(%601) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150, 1), float32]) */;
  %603 = @func_5101() /* ty=Tensor[(4, 16), float32] */;
  %604 = @func_5101() /* ty=Tensor[(4, 16), float32] */;
  %605 = %602.2;
  (%603, %604, %605, meta[relay.Constant][16] /* ty=Tensor[(150), float32] */)
}

def @func_11993() -> (Tensor[(4, 16), float32],) {
  %606 = @func_10467() /* ty=(Tensor[(4, 16), float32],) */;
  %607 = %606.0;
  (%607,)
}

def @func_15654() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(150), float32]) {
  %608 = @func_8781() /* ty=(Tensor[(4, 16), float32],) */;
  %609 = @func_2606() /* ty=(Tensor[(4, 16), float32],) */;
  %610 = cast(meta[relay.Constant][17] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
  %611 = reshape(%610, newshape=[150]) /* ty=Tensor[(150), float32] */;
  %612 = @func_8758(%611) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(150), float32], Tensor[(4, 16), float32], Tensor[(150, 1), float64]) */;
  %613 = %608.0;
  %614 = %609.0;
  %615 = %612.0;
  (%613, %614, %615, meta[relay.Constant][17] /* ty=Tensor[(150), float32] */)
}

def @func_16033() -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float64]) {
  %616 = @func_12980() /* ty=Tensor[(4, 16), float32] */;
  %617 = @func_3988() /* ty=Tensor[(2, 15, 16), float64] */;
  (%616, %617)
}

def @func_6727() -> (Tensor[(2340), float32], Tensor[(4, 16), float32]) {
  %618 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
  %619 = %618.0;
  %620 = @func_3186() /* ty=Tensor[(4, 16), float32] */;
  (%619, %620)
}

def @func_3406() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32]) {
  %621 = @func_1235() /* ty=(Tensor[(4, 16), float32],) */;
  %622 = cast(meta[relay.Constant][18] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %623 = reshape(%622, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float32] */;
  %624 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
  %625 = %621.0;
  %626 = @func_1405(%623) /* ty=Tensor[(13, 15, 12), float32] */;
  (%624, %625, %626, meta[relay.Constant][18] /* ty=Tensor[(2340), float32] */)
}

def @func_14672() -> Tensor[(4, 16), float32] {
  %627 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %627.0
}

def @func_2754() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) {
  %628 = @func_2004() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %629 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %630 = cast(meta[relay.Constant][19] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %631 = reshape(%630, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float32] */;
  %632 = @func_2389(%631) /* ty=(Tensor[(2, 15, 16), float32],) */;
  %633 = %628.1;
  %634 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
  %635 = %629.3;
  %636 = %632.0;
  (%633, %634, %635, %636, meta[relay.Constant][19] /* ty=Tensor[(480), float32] */)
}

def @func_9351(%var_9299: Tensor[(2, 12, 15), uint64]) -> (Tensor[(4, 16), float32], Tensor[(2, 12, 15), float64]) {
  %637 = @func_8902() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %638 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 12, 15), uint64] */, dtype="float64") /* ty=Tensor[(2, 12, 15), float64] */;
  %639 = sigmoid(%638) /* ty=Tensor[(2, 12, 15), float64] */;
  %640 = cast(%var_9299, dtype="uint64") /* ty=Tensor[(2, 12, 15), uint64] */;
  %641 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(2, 12, 15), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %642 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 12, 15), uint64] */, dtype="uint64") /* ty=Tensor[(2, 12, 15), uint64] */;
  %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %644 = right_shift(%642, %643) /* ty=Tensor[(2, 12, 15), uint64] */;
  %645 = cast(%644, dtype="float64") /* ty=Tensor[(2, 12, 15), float64] */;
  %646 = shape_of(%639, dtype="int32") /* ty=Tensor[(3), int32] */;
  %647 = cast(%639, dtype="float64") /* ty=Tensor[(2, 12, 15), float64] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %649 = %637.3;
  %650 = power(%647, %648) /* ty=Tensor[(2, 12, 15), float64] */;
  (%649, %650)
}

def @func_16000(%var_15930: Tensor[(4, 1, 2), uint8], %var_15931: Tensor[(4, 9, 2), uint8], %var_15994: Tensor[(360), uint64]) -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float64], Tensor[(4, 9, 2), bool], Tensor[(4, 9, 2), bool], Tensor[(4, 16), float32], Tensor[(360), uint64]) {
  %651 = cast(%var_15931, dtype="float64") /* ty=Tensor[(4, 9, 2), float64] */;
  %652 = cos(%651) /* ty=Tensor[(4, 9, 2), float64] */;
  %653 = cast(%652, dtype="float32") /* ty=Tensor[(4, 9, 2), float32] */;
  %654 = rsqrt(%653) /* ty=Tensor[(4, 9, 2), float32] */;
  %655 = cast(%var_15931, dtype="bool") /* ty=Tensor[(4, 9, 2), bool] */;
  %656 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(%654, dtype="bool") /* ty=Tensor[(4, 9, 2), bool] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %659 = cast(%var_15930, dtype="uint8") /* ty=Tensor[(4, 1, 2), uint8] */;
  %660 = cast(%var_15931, dtype="uint8") /* ty=Tensor[(4, 9, 2), uint8] */;
  %661 = multiply(%659, %660) /* ty=Tensor[(4, 9, 2), uint8] */;
  %662 = cast(%661, dtype="bool") /* ty=Tensor[(4, 9, 2), bool] */;
  %663 = shape_of(%652, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(%652, dtype="bool") /* ty=Tensor[(4, 9, 2), bool] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %666 = cast(%var_15994, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %667 = reshape(%666, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), uint64] */;
  %668 = @func_9351(%667) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 12, 15), float64]) */;
  %669 = @func_12723() /* ty=Tensor[(4, 16), float32] */;
  %670 = @func_11839() /* ty=Tensor[(2, 15, 16), float64] */;
  %671 = greater_equal(%657, %658) /* ty=Tensor[(4, 9, 2), bool] */;
  %672 = equal(%664, %665) /* ty=Tensor[(4, 9, 2), bool] */;
  %673 = %668.0;
  (%669, %670, %671, %672, %673, %var_15994)
}

def @func_2434() -> (Tensor[(4, ?, 16), float32],) {
  %674 = @func_1297() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %675 = %674.1;
  (%675,)
}

def @func_5101() -> Tensor[(4, 16), float32] {
  %676 = @func_4160() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %676.0
}

def @func_5074() -> (Tensor[(2340), float32],) {
  %677 = @func_3921() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
  %678 = %677.4;
  (%678,)
}

def @func_18398() -> Tensor[(256), float64] {
  %679 = @func_16912() /* ty=(Tensor[(256), float64],) */;
  %679.0
}

def @func_9181() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %680 = @func_6526() /* ty=(Tensor[(4, 16), float32],) */;
  %681 = @func_6509() /* ty=Tensor[(4, 16), float32] */;
  %682 = %680.0;
  (%681, %682)
}

def @func_19703() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %683 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
  %684 = @func_4241() /* ty=Tensor[(4, 16), float32] */;
  (%683, %684)
}

def @func_10166() -> (Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %685 = @func_8391() /* ty=(Tensor[(4, ?, 4), bool],) */;
  %686 = %685.0;
  %687 = @func_3186() /* ty=Tensor[(4, 16), float32] */;
  %688 = @func_3555() /* ty=Tensor[(4, 16), float32] */;
  (%686, %687, %688)
}

def @func_2524() -> (Tensor[(4, 16), float32],) {
  %689 = @func_2015() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %690 = %689.1;
  (%690,)
}

def @func_4676() -> (Tensor[(4, 16), float32],) {
  %691 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
  (%691,)
}

def @func_9503() -> (Tensor[(4, 16), float32],) {
  %692 = @func_9394() /* ty=(Tensor[(4, 16), float32],) */;
  %693 = %692.0;
  (%693,)
}

def @func_11933() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %694 = @func_10917() /* ty=(Tensor[(4, 16), float32],) */;
  %695 = @func_5302() /* ty=(Tensor[(4, 16), float32],) */;
  %696 = %694.0;
  %697 = %695.0;
  (%696, %697)
}

def @func_4223(%var_4187: Tensor[(15, 5, 2), float32]) -> (Tensor[(15, 5, 2), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool]) {
  %698 = cast(%var_4187, dtype="float32") /* ty=Tensor[(15, 5, 2), float32] */;
  %699 = cast(meta[relay.Constant][21] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %700 = reshape(%699, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float32] */;
  %701 = @func_1405(%700) /* ty=Tensor[(13, 15, 12), float32] */;
  %702 = cast(%701, dtype="float32") /* ty=Tensor[(13, 15, 12), float32] */;
  %703 = reshape(%702, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %704 = @func_1783(%703) /* ty=(Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), int16], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(4, 16), float32]) */;
  %705 = cast(%701, dtype="float32") /* ty=Tensor[(13, 15, 12), float32] */;
  %706 = cast(meta[relay.Constant][21] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %707 = reshape(%705, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
  %708 = reshape(%706, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
  %709 = @func_3287(%707, %708) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(3, 780), bool]) */;
  %710 = sigmoid(%698) /* ty=Tensor[(15, 5, 2), float32] */;
  %711 = %704.9;
  %712 = %709.3;
  (%710, %701, meta[relay.Constant][21] /* ty=Tensor[(2340), float32] */, %711, %712)
}

def @func_3809() -> Tensor[(4, 16), float32] {
  %713 = @func_3406() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32]) */;
  %713.0
}

def @func_9124(%var_9104: int16, %var_9105: Tensor[(15, 1, 10), int16], %var_9110: Tensor[(37440), float32]) -> (Tensor[(15, 1, 10), int16], Tensor[(16, 2340), uint64], Tensor[(37440), float32]) {
  %714 = cast(%var_9104, dtype="int16") /* ty=int16 */;
  %715 = cast(%var_9105, dtype="int16") /* ty=Tensor[(15, 1, 10), int16] */;
  %716 = cast(%var_9110, dtype="float32") /* ty=Tensor[(37440), float32] */;
  %717 = reshape(%716, newshape=[16, 2340]) /* ty=Tensor[(16, 2340), float32] */;
  %718 = @func_8985(%717) /* ty=(Tensor[(16, 2340), uint64],) */;
  %719 = bitwise_xor(%714, %715) /* ty=Tensor[(15, 1, 10), int16] */;
  %720 = %718.0;
  (%719, %720, %var_9110)
}

def @func_1405(%var_1398: Tensor[(13, 15, 12), float32]) -> Tensor[(13, 15, 12), float32] {
  %721 = cast(%var_1398, dtype="float32") /* ty=Tensor[(13, 15, 12), float32] */;
  sinh(%721) /* ty=Tensor[(13, 15, 12), float32] */
}

def @func_8026() -> Tensor[(4, 16), float32] {
  @func_1577() /* ty=Tensor[(4, 16), float32] */
}

def @func_5880() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(4, 16), float32]) {
  %722 = @func_5479() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */;
  %723 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %724 = @func_2524() /* ty=(Tensor[(4, 16), float32],) */;
  %725 = cast(meta[relay.Constant][22] /* ty=Tensor[(120), uint64] */, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %726 = reshape(%725, newshape=[6, 4, 5]) /* ty=Tensor[(6, 4, 5), uint64] */;
  %727 = @func_3142(%726) /* ty=(Tensor[(6, 4, 5), uint64],) */;
  %728 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
  %729 = @func_3069() /* ty=(Tensor[(4, 16), float32],) */;
  %730 = %722.3;
  %731 = %723.0;
  %732 = %724.0;
  %733 = %727.0;
  %734 = @func_5129() /* ty=Tensor[(4, ?, 16), float64] */;
  %735 = %728.0;
  %736 = %729.0;
  (%730, %731, %732, %733, meta[relay.Constant][22] /* ty=Tensor[(120), uint64] */, %734, %735, %736)
}

def @func_16464() -> (Tensor[(256), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %737 = @func_7017() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) */;
  %738 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %739 = @func_10340() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(120), uint64]) */;
  %740 = @func_7513() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %741 = %737.4;
  %742 = %738.1;
  %743 = %739.0;
  %744 = %740.1;
  (%741, %742, %743, %744)
}

def @func_17478(%var_17462: Tensor[(2340), float32]) -> (Tensor[(2340), uint64], Tensor[(2340), float32]) {
  %745 = @func_7438() /* ty=(Tensor[(6, 16, 10), float32], Tensor[(2340), float32]) */;
  %746 = %745.1;
  %747 = cast(%var_17462, dtype="uint64") /* ty=Tensor[(2340), uint64] */;
  %748 = shape_of(%746, dtype="int32") /* ty=Tensor[(1), int32] */;
  %749 = cast(%746, dtype="uint64") /* ty=Tensor[(2340), uint64] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %751 = cast(%746, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %752 = bitwise_or(%749, %750) /* ty=Tensor[(2340), uint64] */;
  %753 = atan(%751) /* ty=Tensor[(2340), float32] */;
  (%752, %753)
}

def @func_4364(%var_4332: Tensor[(7, 6, 15), float32], %var_4344: Tensor[(1, 2340), float32]) -> (Tensor[(7, 6, 15), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32], Tensor[(2, 15, 16), float64]) {
  %754 = cast(%var_4332, dtype="float32") /* ty=Tensor[(7, 6, 15), float32] */;
  %755 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %756 = cast(%var_4344, dtype="float32") /* ty=Tensor[(1, 2340), float32] */;
  %757 = reshape(%756, newshape=[9, 260]) /* ty=Tensor[(9, 260), float32] */;
  %758 = @func_2260(%757) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 16), float32]) */;
  %759 = rsqrt(%754) /* ty=Tensor[(7, 6, 15), float32] */;
  %760 = %755.0;
  %761 = %758.3;
  %762 = @func_3988() /* ty=Tensor[(2, 15, 16), float64] */;
  (%759, %760, %761, %var_4344, %762)
}

def @func_3142(%var_3132: Tensor[(6, 4, 5), uint64]) -> (Tensor[(6, 4, 5), uint64],) {
  %763 = cast(meta[relay.Constant][23] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %764 = cast(%var_3132, dtype="uint64") /* ty=Tensor[(6, 4, 5), uint64] */;
  %765 = maximum(%763, %764) /* ty=Tensor[(6, 4, 5), uint64] */;
  (%765,)
}

def @func_13431(%var_13384: Tensor[(288), float32], %var_13419: Tensor[(3, 6, 16), float32]) -> (Tensor[(4, 16), float32], Tensor[(288), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 6, 16), uint8]) {
  %766 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
  %767 = @func_12844() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), bool]) */;
  %768 = @func_6526() /* ty=(Tensor[(4, 16), float32],) */;
  %769 = cast(%var_13384, dtype="float32") /* ty=Tensor[(288), float32] */;
  %770 = reshape(%769, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %771 = @func_7650(%770) /* ty=Tensor[(3, 6, 16), float32] */;
  %772 = cast(%771, dtype="float32") /* ty=Tensor[(3, 6, 16), float32] */;
  %773 = cosh(%772) /* ty=Tensor[(3, 6, 16), float32] */;
  %774 = cast(%var_13419, dtype="uint8") /* ty=Tensor[(3, 6, 16), uint8] */;
  %775 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%773, dtype="uint8") /* ty=Tensor[(3, 6, 16), uint8] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %778 = %766.0;
  %779 = %767.1;
  %780 = %768.0;
  %781 = right_shift(%776, %777) /* ty=Tensor[(3, 6, 16), uint8] */;
  (%778, %var_13384, %779, %780, %781)
}

def @func_10540() -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32]) {
  %782 = @func_10422() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %783 = @func_7128() /* ty=(Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) */;
  %784 = %782.1;
  %785 = %783.0;
  (%784, %785)
}

def @func_15841(%var_15820: Tensor[(3, 14, 12), float32]) -> (Tensor[(3, 14, 12), float32],) {
  %786 = cast(%var_15820, dtype="float32") /* ty=Tensor[(3, 14, 12), float32] */;
  %787 = atan(%786) /* ty=Tensor[(3, 14, 12), float32] */;
  (%787,)
}

def @func_14124() -> Tensor[(4, 16), float32] {
  %788 = @func_10467() /* ty=(Tensor[(4, 16), float32],) */;
  %788.0
}

def @func_10917() -> (Tensor[(4, 16), float32],) {
  %789 = @func_10024() /* ty=Tensor[(4, 16), float32] */;
  (%789,)
}

def @func_7624(%var_7599: float32, %var_7600: Tensor[(1, 14), float32]) -> Tensor[(1, 14), float32] {
  %790 = cast(%var_7599, dtype="float32") /* ty=float32 */;
  %791 = cast(%var_7600, dtype="float32") /* ty=Tensor[(1, 14), float32] */;
  power(%790, %791) /* ty=Tensor[(1, 14), float32] */
}

def @func_8218(%var_8190: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), float32], Tensor[(2340), float32], Tensor[(12, 60), float32], Tensor[(720), float32], Tensor[(4, 16), float32]) {
  %792 = @func_6701() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */;
  %793 = @func_7017() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) */;
  %794 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
  %795 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 780), float32] */, dtype="float32") /* ty=Tensor[(3, 780), float32] */;
  %796 = reshape(%795, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %797 = @func_1783(%796) /* ty=(Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), int16], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(4, 16), float32]) */;
  %798 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 780), float32] */, dtype="float32") /* ty=Tensor[(3, 780), float32] */;
  %799 = reshape(%798, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %800 = @func_6902(%799) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) */;
  %801 = cast(%var_8190, dtype="float32") /* ty=Tensor[(720), float32] */;
  %802 = reshape(%801, newshape=[12, 60]) /* ty=Tensor[(12, 60), float32] */;
  %803 = @func_4100(%802) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], float32, Tensor[(12, 60), float32]) */;
  %804 = @func_7245() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %805 = %792.0;
  %806 = %793.1;
  %807 = %794.0;
  %808 = %797.0;
  %809 = %800.2;
  %810 = %803.3;
  %811 = %804.1;
  (%805, %806, %807, %808, meta[relay.Constant][24] /* ty=Tensor[(3, 780), float32] */, %809, %810, %var_8190, %811)
}

def @func_17327() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %812 = cast(meta[relay.Constant][25] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %813 = reshape(%812, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %814 = @func_7493(%813) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), int8], Tensor[(720), float32]) */;
  %815 = @func_13359() /* ty=(Tensor[(4, 16), float32],) */;
  %816 = @func_14321() /* ty=(Tensor[(4, 16), float32],) */;
  %817 = @func_8026() /* ty=Tensor[(4, 16), float32] */;
  %818 = %814.0;
  %819 = %815.0;
  %820 = %816.0;
  (%817, %818, meta[relay.Constant][25] /* ty=Tensor[(720), float32] */, %819, %820)
}

def @func_961() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %821 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %822 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %823 = %821.1;
  %824 = %822.0;
  (%823, %824)
}

def @func_12929() -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) {
  %825 = @func_8115() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %826 = @func_7128() /* ty=(Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) */;
  %827 = %826.0;
  %828 = cast(%827, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %829 = reshape(%828, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float32] */;
  %830 = @func_2389(%829) /* ty=(Tensor[(2, 15, 16), float32],) */;
  %831 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
  %832 = %825.0;
  %833 = %830.0;
  %834 = %831.0;
  (%832, %827, %833, %834)
}

def @func_6772() -> Tensor[(4, 16), float32] {
  %835 = @func_2114() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %835.1
}

def @func_6509() -> Tensor[(4, 16), float32] {
  %836 = @func_5789() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %836.1
}

def @func_16400() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %837 = @func_14259() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %838 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %839 = @func_12929() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %840 = %837.1;
  %841 = %838.0;
  %842 = %839.0;
  (%840, %841, %842)
}

def @func_19176() -> (Tensor[(480), float32], Tensor[(4, 16), float32]) {
  %843 = @func_17363() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
  %844 = @func_12844() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), bool]) */;
  %845 = %843.2;
  %846 = %844.1;
  (%845, %846)
}

def @func_7438() -> (Tensor[(6, 16, 10), float32], Tensor[(2340), float32]) {
  %847 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 16, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 16, 10), float32] */;
  %848 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
  %849 = atanh(%847) /* ty=Tensor[(6, 16, 10), float32] */;
  %850 = %848.0;
  (%849, %850)
}

def @func_15390(%var_15377: Tensor[(256), float64]) -> (Tensor[(4, 16), float32], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) {
  %851 = cast(%var_15377, dtype="float64") /* ty=Tensor[(256), float64] */;
  %852 = reshape(%851, newshape=[2, 16, 8]) /* ty=Tensor[(2, 16, 8), float64] */;
  %853 = @func_6874(%852) /* ty=(Tensor[(2, 16, 8), float64],) */;
  %854 = @func_6440() /* ty=Tensor[(4, 16), float32] */;
  %855 = %853.0;
  (%854, %855, %var_15377)
}

def @func_6939() -> (Tensor[(4, 16), float32],) {
  %856 = @func_2162() /* ty=(Tensor[(4, 16), float32],) */;
  %857 = %856.0;
  (%857,)
}

def @func_1671() -> Tensor[(4, 16), float32] {
  %858 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %858.1
}

def @func_19240() -> Tensor[(10, 11, 7), int16] {
  %859 = @func_4971() /* ty=(Tensor[(4, 16), float32], Tensor[(10, 11, 7), int16]) */;
  %859.1
}

def @func_6661() -> Tensor[(4, 16), float32] {
  @func_6509() /* ty=Tensor[(4, 16), float32] */
}

def @func_11529(%var_11456: Tensor[(9, 260), float32], %var_11468: Tensor[(9, 260), float64]) -> (Tensor[(9, 260), bool], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 16), float32]) {
  %860 = @func_9582() /* ty=(Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 120), float64]) */;
  %861 = %860.1;
  %862 = cast(%var_11456, dtype="bool") /* ty=Tensor[(9, 260), bool] */;
  %863 = shape_of(%861, dtype="int32") /* ty=Tensor[(2), int32] */;
  %864 = cast(%861, dtype="bool") /* ty=Tensor[(9, 260), bool] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %866 = @func_6727() /* ty=(Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
  %867 = @func_8291() /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32]) */;
  %868 = cast(%861, dtype="float64") /* ty=Tensor[(9, 260), float64] */;
  %869 = log(%868) /* ty=Tensor[(9, 260), float64] */;
  %870 = cast(%var_11468, dtype="bool") /* ty=Tensor[(9, 260), bool] */;
  %871 = shape_of(%869, dtype="int32") /* ty=Tensor[(2), int32] */;
  %872 = cast(%869, dtype="bool") /* ty=Tensor[(9, 260), bool] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %874 = logical_and(%872, %873) /* ty=Tensor[(9, 260), bool] */;
  %875 = cast(%874, dtype="float32") /* ty=Tensor[(9, 260), float32] */;
  %876 = logical_or(%864, %865) /* ty=Tensor[(9, 260), bool] */;
  %877 = %866.0;
  %878 = %867.1;
  %879 = exp(%875) /* ty=Tensor[(9, 260), float32] */;
  %880 = @func_8238() /* ty=Tensor[(4, 16), float32] */;
  (%876, %877, %878, %879, %880)
}

def @func_16789() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %881 = @func_12929() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %882 = @func_9749() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 480), float64]) */;
  %883 = @func_8115() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %884 = %881.0;
  %885 = %882.1;
  %886 = %883.1;
  %887 = @func_10079() /* ty=Tensor[(4, 16), float32] */;
  (%884, %885, %886, %887)
}

def @func_14506(%var_14496: Tensor[(13, 12, 3), float32]) -> Tensor[(13, 12, 3), float32] {
  %888 = cast(%var_14496, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
  log2(%888) /* ty=Tensor[(13, 12, 3), float32] */
}

def @func_15354() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %889 = @func_14259() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %890 = %889.1;
  %891 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
  (%890, %891)
}

def @func_9922() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2340), float32]) {
  %892 = @func_6701() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */;
  %893 = @func_2464() /* ty=(Tensor[(4, 16), float32],) */;
  %894 = @func_3406() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32]) */;
  %895 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
  %896 = %892.1;
  %897 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
  %898 = %893.0;
  %899 = %894.3;
  %900 = %895.0;
  (%896, %897, %898, %899, %900)
}

def @func_5479() -> (Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) {
  %901 = @func_3988() /* ty=Tensor[(2, 15, 16), float64] */;
  %902 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 15, 16), float64] */, dtype="int8") /* ty=Tensor[(2, 15, 16), int8] */;
  %903 = shape_of(%901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %904 = cast(%901, dtype="int8") /* ty=Tensor[(2, 15, 16), int8] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %906 = cast(meta[relay.Constant][28] /* ty=Tensor[(120), uint64] */, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %907 = reshape(%906, newshape=[6, 4, 5]) /* ty=Tensor[(6, 4, 5), uint64] */;
  %908 = @func_3142(%907) /* ty=(Tensor[(6, 4, 5), uint64],) */;
  %909 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 15, 16), float64] */, dtype="uint32") /* ty=Tensor[(2, 15, 16), uint32] */;
  %910 = shape_of(%901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %911 = cast(%901, dtype="uint32") /* ty=Tensor[(2, 15, 16), uint32] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %913 = @func_2606() /* ty=(Tensor[(4, 16), float32],) */;
  %914 = bitwise_or(%904, %905) /* ty=Tensor[(2, 15, 16), int8] */;
  %915 = %908.0;
  %916 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
  %917 = subtract(%911, %912) /* ty=Tensor[(2, 15, 16), uint32] */;
  %918 = %913.0;
  (%914, %915, meta[relay.Constant][28] /* ty=Tensor[(120), uint64] */, %916, %917, %918)
}

def @func_9955() -> (Tensor[(4, 16), float32],) {
  %919 = @func_6235() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %920 = %919.1;
  (%920,)
}

def @func_8401() -> (Tensor[(4, ?, 16), float32],) {
  %921 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %922 = %921.0;
  (%922,)
}

def @func_11131(%var_11092: Tensor[(120), uint64]) -> (Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64]) {
  %923 = @func_5880() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
  %924 = cast(%var_11092, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %925 = reshape(%924, newshape=[6, 4, 5]) /* ty=Tensor[(6, 4, 5), uint64] */;
  %926 = @func_3142(%925) /* ty=(Tensor[(6, 4, 5), uint64],) */;
  %927 = %923.1;
  %928 = %926.0;
  (%927, %928, %var_11092)
}

def @func_12178(%var_12149: Tensor[(120), uint64]) -> (Tensor[(4, 16), float32], Tensor[(60, 2), uint64], Tensor[(120), uint64], Tensor[(2, 15, 16), float32]) {
  %929 = cast(%var_12149, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %930 = reshape(%929, newshape=[60, 2]) /* ty=Tensor[(60, 2), uint64] */;
  %931 = @func_6036(%930) /* ty=(Tensor[(4, 16), float32], Tensor[(60, 2), uint64], Tensor[(6, 4, 5), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32]) */;
  %932 = @func_10540() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32]) */;
  %933 = @func_3809() /* ty=Tensor[(4, 16), float32] */;
  %934 = %931.1;
  %935 = %932.1;
  (%933, %934, %var_12149, %935)
}

def @func_1297() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
  %936 = @func_1100() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %937 = %936.2;
  %938 = cast(%937, dtype="float32") /* ty=Tensor[(4, 16), float32] */;
  %939 = reshape(%938, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %940 = @func_392(%939) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %941 = %940.0;
  (%937, %941)
}

def @func_17174() -> Tensor[(4, 16), float32] {
  %942 = @func_10296() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %942.0
}

def @func_2511() -> Tensor[(4, 16), float32] {
  @func_1577() /* ty=Tensor[(4, 16), float32] */
}

def @func_2606() -> (Tensor[(4, 16), float32],) {
  %943 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %944 = %943.4;
  (%944,)
}

def @func_17495() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %945 = @func_15260() /* ty=(Tensor[(4, 16), float32],) */;
  %946 = @func_2004() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %947 = %945.0;
  %948 = %946.1;
  (%947, %948)
}

def @func_18538() -> (Tensor[(4, ?, 16), float32],) {
  %949 = @func_5129() /* ty=Tensor[(4, ?, 16), float64] */;
  %950 = cast(%949, dtype="float32") /* ty=Tensor[(4, ?, 16), float32] */;
  %951 = sinh(%950) /* ty=Tensor[(4, ?, 16), float32] */;
  (%951,)
}

def @func_13751() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340, 1), float32], Tensor[(4, 16), float32]) {
  %952 = @func_13632() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %953 = cast(meta[relay.Constant][29] /* ty=Tensor[(2340, 1), float32] */, dtype="float32") /* ty=Tensor[(2340, 1), float32] */;
  %954 = reshape(%953, newshape=[1, 2340]) /* ty=Tensor[(1, 2340), float32] */;
  %955 = @func_12701(%954) /* ty=(Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */;
  %956 = @func_3921() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
  %957 = %952.0;
  %958 = %955.3;
  %959 = %956.1;
  (%957, %958, meta[relay.Constant][29] /* ty=Tensor[(2340, 1), float32] */, %959)
}

def @func_3676(%var_3660: Tensor[(10, 11, 7), float32]) -> (Tensor[(10, 11, 7), float32], Tensor[(4, 16), float32]) {
  %960 = cast(%var_3660, dtype="float32") /* ty=Tensor[(10, 11, 7), float32] */;
  %961 = @func_2606() /* ty=(Tensor[(4, 16), float32],) */;
  %962 = exp(%960) /* ty=Tensor[(10, 11, 7), float32] */;
  %963 = %961.0;
  (%962, %963)
}

def @func_17948(%var_17911: Tensor[(8, 3, 13), bool]) -> (Tensor[(8, 3, 13), bool], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool]) {
  %964 = cast(%var_17911, dtype="bool") /* ty=Tensor[(8, 3, 13), bool] */;
  %965 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(8, 3, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %966 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 3, 13), bool] */, dtype="bool") /* ty=Tensor[(8, 3, 13), bool] */;
  %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %968 = @func_17812() /* ty=(Tensor[(4, 16), float32],) */;
  %969 = @func_10166() /* ty=(Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %970 = logical_or(%966, %967) /* ty=Tensor[(8, 3, 13), bool] */;
  %971 = %968.0;
  %972 = %969.0;
  (%970, %971, %972)
}

def @func_19474() -> (Tensor[(4, 16), float32],) {
  %973 = @func_5225() /* ty=Tensor[(4, 16), float32] */;
  (%973,)
}

def @func_16972() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %974 = @func_9955() /* ty=(Tensor[(4, 16), float32],) */;
  %975 = @func_4160() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %976 = %974.0;
  %977 = %975.1;
  (%976, %977)
}

def @func_1216() -> Tensor[(4, 16), float32] {
  %978 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %978.0
}

def @func_9089() -> (Tensor[(4, 16), float32],) {
  %979 = @func_5588() /* ty=(Tensor[(4, 16), float32],) */;
  %980 = %979.0;
  (%980,)
}

def @func_13593() -> Tensor[(4, 16), float32] {
  %981 = @func_5763() /* ty=(Tensor[(4, 16), float32],) */;
  %981.0
}

def @func_9144() -> (Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(1, 2340), float32], Tensor[(4, 16), float32]) {
  %982 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 2340), float32] */, dtype="float32") /* ty=Tensor[(1, 2340), float32] */;
  %983 = reshape(%982, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %984 = @func_6902(%983) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) */;
  %985 = @func_5129() /* ty=Tensor[(4, ?, 16), float64] */;
  %986 = %984.2;
  %987 = @func_6448() /* ty=Tensor[(4, 16), float32] */;
  (%985, %986, meta[relay.Constant][31] /* ty=Tensor[(1, 2340), float32] */, %987)
}

def @func_18602() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %988 = @func_17550() /* ty=(Tensor[(4, 16), float32],) */;
  %989 = %988.0;
  %990 = @func_6448() /* ty=Tensor[(4, 16), float32] */;
  (%989, %990)
}

def @func_10943() -> Tensor[(4, 16), float32] {
  %991 = @func_6701() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */;
  %991.2
}

def @func_1168(%var_1139: Tensor[(12, 10, 14), float32], %var_1140: Tensor[(12, 10, 14), float32]) -> (Tensor[(12, 10, 14), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32]) {
  %992 = cast(%var_1140, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
  %993 = shape_of(%var_1139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %994 = cast(%var_1139, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
  %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %996 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %997 = %996.3;
  %998 = cast(%997, dtype="float32") /* ty=Tensor[(4, ?, 16), float32] */;
  %999 = reshape(%998, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %1000 = @func_392(%999) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %1001 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %1002 = add(%994, %995) /* ty=Tensor[(12, 10, 14), float32] */;
  %1003 = %1000.0;
  %1004 = %1001.3;
  (%1002, %997, %1003, %1004)
}

def @func_9749() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 480), float64]) {
  %1005 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 480), float64] */, dtype="float64") /* ty=Tensor[(1, 480), float64] */;
  %1006 = reshape(%1005, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %1007 = @func_4649(%1006) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %1008 = @func_1216() /* ty=Tensor[(4, 16), float32] */;
  %1009 = %1007.1;
  (%1008, %1009, meta[relay.Constant][32] /* ty=Tensor[(1, 480), float64] */)
}

def @func_4067(%var_4049: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(2340), float32], Tensor[(4, 16), float32]) {
  %1010 = @func_2754() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
  %1011 = cast(%var_4049, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1012 = cast(%var_4049, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1013 = reshape(%1011, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
  %1014 = reshape(%1012, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
  %1015 = @func_3287(%1013, %1014) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(3, 780), bool]) */;
  %1016 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %1017 = %1010.2;
  %1018 = %1015.4;
  %1019 = %1016.0;
  (%1017, %1018, %var_4049, %1019)
}

def @func_12486() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64]) {
  %1020 = @func_4881() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1021 = @func_2015() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1022 = @func_12049() /* ty=(Tensor[(4, 16), float32],) */;
  %1023 = cast(meta[relay.Constant][33] /* ty=Tensor[(120), uint64] */, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %1024 = reshape(%1023, newshape=[6, 4, 5]) /* ty=Tensor[(6, 4, 5), uint64] */;
  %1025 = @func_3142(%1024) /* ty=(Tensor[(6, 4, 5), uint64],) */;
  %1026 = %1020.2;
  %1027 = %1021.1;
  %1028 = @func_3186() /* ty=Tensor[(4, 16), float32] */;
  %1029 = %1022.0;
  %1030 = %1025.0;
  (%1026, %1027, %1028, %1029, %1030, meta[relay.Constant][33] /* ty=Tensor[(120), uint64] */)
}

def @func_5129() -> Tensor[(4, ?, 16), float64] {
  %1031 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1032 = %1031.0;
  %1033 = cast(%1032, dtype="float64") /* ty=Tensor[(4, ?, 16), float64] */;
  asin(%1033) /* ty=Tensor[(4, ?, 16), float64] */
}

def @func_6182() -> (Tensor[(4, 16), float32],) {
  %1034 = @func_5101() /* ty=Tensor[(4, 16), float32] */;
  (%1034,)
}

def @func_6601() -> (Tensor[(4, 16), float32],) {
  %1035 = @func_6555() /* ty=(Tensor[(2340), float64], Tensor[(4, 16), float32]) */;
  %1036 = %1035.1;
  (%1036,)
}

def @func_9052(%var_9043: Tensor[(8, 3, 7), int64]) -> (Tensor[(8, 3, 7), bool],) {
  %1037 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 1, 7), int64] */, dtype="bool") /* ty=Tensor[(8, 1, 7), bool] */;
  %1038 = cast(%var_9043, dtype="bool") /* ty=Tensor[(8, 3, 7), bool] */;
  %1039 = greater(%1037, %1038) /* ty=Tensor[(8, 3, 7), bool] */;
  (%1039,)
}

def @func_12666() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(256), float64]) {
  %1040 = @func_12314() /* ty=(Tensor[(4, 16), float32],) */;
  %1041 = cast(meta[relay.Constant][35] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %1042 = cast(meta[relay.Constant][35] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
  %1043 = reshape(%1041, newshape=[128, 2]) /* ty=Tensor[(128, 2), float64] */;
  %1044 = reshape(%1042, newshape=[2, 16, 8]) /* ty=Tensor[(2, 16, 8), float64] */;
  %1045 = @func_11798(%1043, %1044) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(128, 2), float64], Tensor[(2, 16, 8), uint16], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1046 = %1040.0;
  %1047 = %1045.7;
  (%1046, %1047, meta[relay.Constant][35] /* ty=Tensor[(256), float64] */)
}

def @func_16515() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(4, 16), float32], Tensor[(150), float32], Tensor[(4, 16), float32], Tensor[(360), uint64]) {
  %1048 = @func_3406() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32]) */;
  %1049 = cast(meta[relay.Constant][36] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %1050 = reshape(%1049, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %1051 = @func_4649(%1050) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %1052 = cast(meta[relay.Constant][37] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
  %1053 = reshape(%1052, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
  %1054 = @func_8063(%1053) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150, 1), float32]) */;
  %1055 = cast(meta[relay.Constant][38] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %1056 = reshape(%1055, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), uint64] */;
  %1057 = @func_9351(%1056) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 12, 15), float64]) */;
  %1058 = %1048.0;
  %1059 = %1051.1;
  %1060 = %1054.1;
  %1061 = %1057.0;
  (%1058, %1059, meta[relay.Constant][36] /* ty=Tensor[(480), float64] */, %1060, meta[relay.Constant][37] /* ty=Tensor[(150), float32] */, %1061, meta[relay.Constant][38] /* ty=Tensor[(360), uint64] */)
}

def @func_15323(%var_15312: Tensor[(120, 4), float64], %var_15316: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(120, 4), float64], Tensor[(4, 16), float32], Tensor[(2340), float32]) {
  %1062 = @func_14259() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1063 = cast(%var_15312, dtype="float64") /* ty=Tensor[(120, 4), float64] */;
  %1064 = reshape(%1063, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %1065 = @func_4649(%1064) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %1066 = cast(%var_15316, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1067 = reshape(%1066, newshape=[1, 2340]) /* ty=Tensor[(1, 2340), float32] */;
  %1068 = @func_12701(%1067) /* ty=(Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */;
  %1069 = %1062.1;
  %1070 = %1065.1;
  %1071 = %1068.3;
  (%1069, %1070, %var_15312, %1071, %var_15316)
}

def @func_9394() -> (Tensor[(4, 16), float32],) {
  %1072 = @func_6727() /* ty=(Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
  %1073 = %1072.1;
  (%1073,)
}

def @func_12844() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), bool]) {
  %1074 = @func_9582() /* ty=(Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 120), float64]) */;
  %1075 = %1074.1;
  %1076 = cast(%1075, dtype="float32") /* ty=Tensor[(9, 260), float32] */;
  %1077 = reshape(%1076, newshape=[1, 2340]) /* ty=Tensor[(1, 2340), float32] */;
  %1078 = @func_12701(%1077) /* ty=(Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */;
  %1079 = @func_9955() /* ty=(Tensor[(4, 16), float32],) */;
  %1080 = cast(%1075, dtype="float32") /* ty=Tensor[(9, 260), float32] */;
  %1081 = atanh(%1080) /* ty=Tensor[(9, 260), float32] */;
  %1082 = cast(%1075, dtype="bool") /* ty=Tensor[(9, 260), bool] */;
  %1083 = shape_of(%1081, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1084 = cast(%1081, dtype="bool") /* ty=Tensor[(9, 260), bool] */;
  %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1086 = %1078.1;
  %1087 = %1079.0;
  %1088 = equal(%1084, %1085) /* ty=Tensor[(9, 260), bool] */;
  (%1086, %1087, %1088)
}

def @func_7513() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1089 = @func_3069() /* ty=(Tensor[(4, 16), float32],) */;
  %1090 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
  %1091 = %1089.0;
  (%1090, %1091)
}

def @func_3069() -> (Tensor[(4, 16), float32],) {
  %1092 = @func_2004() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1093 = %1092.1;
  (%1093,)
}

def @func_13929() -> (Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1094 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
  %1095 = @func_9955() /* ty=(Tensor[(4, 16), float32],) */;
  %1096 = %1094.0;
  %1097 = %1095.0;
  %1098 = @func_9226() /* ty=Tensor[(4, 16), float32] */;
  (%1096, %1097, %1098)
}

def @func_17158() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1099 = @func_4788() /* ty=(Tensor[(4, 16), float32],) */;
  %1100 = %1099.0;
  %1101 = @func_12980() /* ty=Tensor[(4, 16), float32] */;
  (%1100, %1101)
}

def @func_7245() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
  %1102 = @func_5880() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
  %1103 = @func_1297() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1104 = @func_4295() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1105 = %1104.0;
  %1106 = cast(%1105, dtype="float32") /* ty=Tensor[(4, ?, 16), float32] */;
  %1107 = %1102.2;
  %1108 = %1103.0;
  %1109 = log(%1106) /* ty=Tensor[(4, ?, 16), float32] */;
  (%1107, %1108, %1109)
}

def @func_16210(%var_16171: Tensor[(168), int64]) -> (Tensor[(4, 16), float32], Tensor[(8, 3, 7), bool], Tensor[(168), int64], Tensor[(2, 16, 8), float64]) {
  %1110 = cast(%var_16171, dtype="int64") /* ty=Tensor[(168), int64] */;
  %1111 = reshape(%1110, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), int64] */;
  %1112 = @func_9052(%1111) /* ty=(Tensor[(8, 3, 7), bool],) */;
  %1113 = @func_7017() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) */;
  %1114 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
  %1115 = %1112.0;
  %1116 = %1113.3;
  (%1114, %1115, %var_16171, %1116)
}

def @func_10718(%var_10678: Tensor[(5, 2, 3), float32]) -> (Tensor[(5, 2, 3), uint32],) {
  %1117 = cast(%var_10678, dtype="float32") /* ty=Tensor[(5, 2, 3), float32] */;
  %1118 = sinh(%1117) /* ty=Tensor[(5, 2, 3), float32] */;
  %1119 = cast(%var_10678, dtype="uint32") /* ty=Tensor[(5, 2, 3), uint32] */;
  %1120 = shape_of(%1118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1121 = cast(%1118, dtype="uint32") /* ty=Tensor[(5, 2, 3), uint32] */;
  %1122 = dyn.reshape(%1119, %1120, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1123 = maximum(%1121, %1122) /* ty=Tensor[(5, 2, 3), uint32] */;
  (%1123,)
}

def @func_17249() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1124 = @func_8115() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1125 = @func_4160() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1126 = @func_12666() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(256), float64]) */;
  %1127 = @func_15906() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1128 = %1124.0;
  %1129 = %1125.1;
  %1130 = %1126.0;
  %1131 = @func_4241() /* ty=Tensor[(4, 16), float32] */;
  %1132 = %1127.0;
  (%1128, %1129, %1130, %1131, %1132)
}

def @func_4649(%var_4604: Tensor[(2, 15, 16), float64]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) {
  %1133 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1134 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %1135 = @func_2464() /* ty=(Tensor[(4, 16), float32],) */;
  %1136 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1137 = @func_3988() /* ty=Tensor[(2, 15, 16), float64] */;
  %1138 = cast(%var_4604, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
  %1139 = shape_of(%1137, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1140 = cast(%1137, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
  %1141 = dyn.reshape(%1138, %1139, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1142 = cast(%var_4604, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %1143 = reshape(%1142, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float32] */;
  %1144 = @func_2389(%1143) /* ty=(Tensor[(2, 15, 16), float32],) */;
  %1145 = cast(meta[relay.Constant][39] /* ty=Tensor[(9, 260), float32] */, dtype="float32") /* ty=Tensor[(9, 260), float32] */;
  %1146 = reshape(%1145, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %1147 = @func_2940(%1146) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
  %1148 = cast(%var_4604, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %1149 = %1133.1;
  %1150 = %1134.0;
  %1151 = %1135.0;
  %1152 = %1136.0;
  %1153 = logical_and(%1140, %1141) /* ty=Tensor[(2, 15, 16), bool] */;
  %1154 = %1144.0;
  %1155 = %1147.0;
  %1156 = log(%1148) /* ty=Tensor[(2, 15, 16), float32] */;
  %1157 = @func_4241() /* ty=Tensor[(4, 16), float32] */;
  (%1149, %1150, %1151, %1152, %1153, %1154, %1155, meta[relay.Constant][39] /* ty=Tensor[(9, 260), float32] */, %1156, %1157)
}

def @func_9226() -> Tensor[(4, 16), float32] {
  %1158 = @func_2114() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1158.0
}

def @func_9068() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1159 = @func_4788() /* ty=(Tensor[(4, 16), float32],) */;
  %1160 = %1159.0;
  %1161 = @func_3186() /* ty=Tensor[(4, 16), float32] */;
  (%1160, %1161)
}

def @func_2015() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1162 = @func_1100() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1163 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1164 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %1165 = %1162.3;
  %1166 = %1163.2;
  %1167 = %1164.0;
  (%1165, %1166, %1167)
}

def @func_4811() -> Tensor[(4, 16), float32] {
  %1168 = @func_2524() /* ty=(Tensor[(4, 16), float32],) */;
  %1168.0
}

def @func_16308(%var_16272: float32) -> (Tensor[(4, 16), float32], Tensor[(1, 14), float32], float32, Tensor[(14), float32], Tensor[(4, ?, 16), bool]) {
  %1169 = cast(%var_16272, dtype="float32") /* ty=float32 */;
  %1170 = cast(meta[relay.Constant][40] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %1171 = reshape(%1169, newshape=[]) /* ty=float32 */;
  %1172 = reshape(%1170, newshape=[1, 14]) /* ty=Tensor[(1, 14), float32] */;
  %1173 = @func_8902() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1174 = %1173.1;
  %1175 = cast(%1174, dtype="float32") /* ty=Tensor[(4, ?, 16), float32] */;
  %1176 = atanh(%1175) /* ty=Tensor[(4, ?, 16), float32] */;
  %1177 = @func_2533() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1178 = %1177.0;
  %1179 = cast(%1174, dtype="uint16") /* ty=Tensor[(4, ?, 16), uint16] */;
  %1180 = shape_of(%1178, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1181 = cast(%1178, dtype="uint16") /* ty=Tensor[(4, ?, 16), uint16] */;
  %1182 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1183 = subtract(%1181, %1182) /* ty=Tensor[(4, ?, 16), uint16] */;
  %1184 = cast(%1183, dtype="bool") /* ty=Tensor[(4, ?, 16), bool] */;
  %1185 = shape_of(%1176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1186 = cast(%1176, dtype="bool") /* ty=Tensor[(4, ?, 16), bool] */;
  %1187 = dyn.reshape(%1184, %1185, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1188 = @func_16062() /* ty=Tensor[(4, 16), float32] */;
  %1189 = @func_7624(%1171, %1172) /* ty=Tensor[(1, 14), float32] */;
  %1190 = greater_equal(%1186, %1187) /* ty=Tensor[(4, ?, 16), bool] */;
  (%1188, %1189, %var_16272, meta[relay.Constant][40] /* ty=Tensor[(14), float32] */, %1190)
}

def @func_4160() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1191 = @func_2606() /* ty=(Tensor[(4, 16), float32],) */;
  %1192 = @func_3555() /* ty=Tensor[(4, 16), float32] */;
  %1193 = %1191.0;
  (%1192, %1193)
}

def @func_8707(%var_8701: Tensor[(14, 7, 13), float64]) -> (Tensor[(14, 7, 13), float64],) {
  %1194 = cast(%var_8701, dtype="float64") /* ty=Tensor[(14, 7, 13), float64] */;
  %1195 = atan(%1194) /* ty=Tensor[(14, 7, 13), float64] */;
  (%1195,)
}

def @func_10340() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(120), uint64]) {
  %1196 = @func_8957() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(480), float32]) */;
  %1197 = cast(meta[relay.Constant][41] /* ty=Tensor[(120), uint64] */, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %1198 = reshape(%1197, newshape=[60, 2]) /* ty=Tensor[(60, 2), uint64] */;
  %1199 = @func_6036(%1198) /* ty=(Tensor[(4, 16), float32], Tensor[(60, 2), uint64], Tensor[(6, 4, 5), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32]) */;
  %1200 = %1196.1;
  %1201 = %1199.0;
  (%1200, %1201, meta[relay.Constant][41] /* ty=Tensor[(120), uint64] */)
}

def @func_3921() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32]) {
  %1202 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1203 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %1204 = cast(meta[relay.Constant][42] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1205 = reshape(%1204, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %1206 = @func_2940(%1205) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
  %1207 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %1208 = %1202.0;
  %1209 = @func_3186() /* ty=Tensor[(4, 16), float32] */;
  %1210 = %1203.3;
  %1211 = %1206.0;
  %1212 = %1207.0;
  (%1208, %1209, %1210, %1211, meta[relay.Constant][42] /* ty=Tensor[(2340), float32] */, %1212)
}

def @func_13855() -> (Tensor[(4, 16), float32], Tensor[(2, 5, 6), int32], Tensor[(60), int32]) {
  %1213 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %1214 = cast(meta[relay.Constant][43] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1215 = reshape(%1214, newshape=[2, 5, 6]) /* ty=Tensor[(2, 5, 6), int32] */;
  %1216 = %1213.0;
  %1217 = @func_11165(%1215) /* ty=Tensor[(2, 5, 6), int32] */;
  (%1216, %1217, meta[relay.Constant][43] /* ty=Tensor[(60), int32] */)
}

def @func_13359() -> (Tensor[(4, 16), float32],) {
  %1218 = @func_3561() /* ty=Tensor[(4, 16), float32] */;
  (%1218,)
}

def @func_18161() -> (Tensor[(4, 16), float32], Tensor[(256), float64]) {
  %1219 = @func_10296() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1220 = @func_7017() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) */;
  %1221 = %1219.0;
  %1222 = %1220.4;
  (%1221, %1222)
}

def @func_17363() -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) {
  %1223 = @func_16400() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1224 = cast(meta[relay.Constant][44] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1225 = reshape(%1224, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float32] */;
  %1226 = @func_2389(%1225) /* ty=(Tensor[(2, 15, 16), float32],) */;
  %1227 = %1223.0;
  %1228 = %1226.0;
  (%1227, %1228, meta[relay.Constant][44] /* ty=Tensor[(480), float32] */)
}

def @func_6783() -> (Tensor[(2340), float32],) {
  %1229 = @func_6727() /* ty=(Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
  %1230 = %1229.0;
  (%1230,)
}

def @func_12314() -> (Tensor[(4, 16), float32],) {
  %1231 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %1232 = %1231.0;
  (%1232,)
}

def @func_16529(%var_16522: Tensor[(16, 9, 3), float64]) -> Tensor[(16, 9, 3), float64] {
  %1233 = cast(%var_16522, dtype="float64") /* ty=Tensor[(16, 9, 3), float64] */;
  log10(%1233) /* ty=Tensor[(16, 9, 3), float64] */
}

def @func_16697(%var_16671: Tensor[(2, 144), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 144), float32]) {
  %1234 = @func_10917() /* ty=(Tensor[(4, 16), float32],) */;
  %1235 = cast(%var_16671, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %1236 = cast(%var_16671, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %1237 = reshape(%1235, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1238 = reshape(%1236, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %1239 = @func_13431(%1237, %1238) /* ty=(Tensor[(4, 16), float32], Tensor[(288), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 6, 16), uint8]) */;
  %1240 = %1234.0;
  %1241 = %1239.3;
  (%1240, %1241, %var_16671)
}

def @func_6846(%var_6824: Tensor[(2, 240), float64]) -> (Tensor[(7, 10, 8), float64], Tensor[(4, 16), float32], Tensor[(2, 240), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, ?, 16), uint16]) {
  %1242 = cast(meta[relay.Constant][45] /* ty=Tensor[(7, 10, 8), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 8), float64] */;
  %1243 = cast(%var_6824, dtype="float64") /* ty=Tensor[(2, 240), float64] */;
  %1244 = reshape(%1243, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %1245 = @func_4649(%1244) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %1246 = @func_5789() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1247 = cast(meta[relay.Constant][46] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1248 = reshape(%1247, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %1249 = @func_5937(%1248) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), int8], Tensor[(4, 16), float32], Tensor[(720), float32]) */;
  %1250 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %1251 = asin(%1242) /* ty=Tensor[(7, 10, 8), float64] */;
  %1252 = %1245.6;
  %1253 = %1246.0;
  %1254 = %1249.1;
  %1255 = %1250.0;
  (%1251, %1252, %var_6824, %1253, %1254, meta[relay.Constant][46] /* ty=Tensor[(720), float32] */, %1255)
}

def @func_16856() -> (Tensor[(4, 16), float32],) {
  %1256 = @func_9226() /* ty=Tensor[(4, 16), float32] */;
  (%1256,)
}

def @func_7493(%var_7458: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), int8], Tensor[(720), float32]) {
  %1257 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %1258 = cast(%var_7458, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1259 = reshape(%1258, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %1260 = @func_5937(%1259) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), int8], Tensor[(4, 16), float32], Tensor[(720), float32]) */;
  %1261 = @func_4241() /* ty=Tensor[(4, 16), float32] */;
  %1262 = %1257.0;
  %1263 = %1260.3;
  (%1261, %1262, %1263, %var_7458)
}

def @func_12857() -> Tensor[(4, 16), float32] {
  @func_9226() /* ty=Tensor[(4, 16), float32] */
}

def @func_17414() -> (Tensor[(5, 8, 1), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1264 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 8, 1), float32] */, dtype="float32") /* ty=Tensor[(5, 8, 1), float32] */;
  %1265 = @func_4676() /* ty=(Tensor[(4, 16), float32],) */;
  %1266 = sqrt(%1264) /* ty=Tensor[(5, 8, 1), float32] */;
  %1267 = @func_16807() /* ty=Tensor[(4, 16), float32] */;
  %1268 = %1265.0;
  (%1266, %1267, %1268)
}

def @main(%var_19724: Tensor[(8, 8, 3), float32], %var_19725: Tensor[(8, 8, 3), float32], %var_19736: Tensor[(8, 8, 3), float32]) -> (Tensor[(8, 8, 3), int32], Tensor[(8, 8, 3), float64], Tensor[(8, 8, 3), float32]) {
  %1269 = cast(%var_19736, dtype="int32") /* ty=Tensor[(8, 8, 3), int32] */;
  %1270 = shape_of(%var_19724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1271 = cast(%var_19724, dtype="int32") /* ty=Tensor[(8, 8, 3), int32] */;
  %1272 = dyn.reshape(%1269, %1270, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1273 = cast(%var_19725, dtype="float32") /* ty=Tensor[(8, 8, 3), float32] */;
  %1274 = shape_of(%var_19724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1275 = cast(%var_19724, dtype="float32") /* ty=Tensor[(8, 8, 3), float32] */;
  %1276 = dyn.reshape(%1273, %1274, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1277 = power(%1275, %1276) /* ty=Tensor[(8, 8, 3), float32] */;
  %1278 = cast(%var_19736, dtype="float64") /* ty=Tensor[(8, 8, 3), float64] */;
  %1279 = shape_of(%1277, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1280 = cast(%1277, dtype="float64") /* ty=Tensor[(8, 8, 3), float64] */;
  %1281 = dyn.reshape(%1278, %1279, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1282 = cast(%var_19736, dtype="float32") /* ty=Tensor[(8, 8, 3), float32] */;
  %1283 = minimum(%1271, %1272) /* ty=Tensor[(8, 8, 3), int32] */;
  %1284 = floor_divide(%1280, %1281) /* ty=Tensor[(8, 8, 3), float64] */;
  %1285 = log2(%1282) /* ty=Tensor[(8, 8, 3), float32] */;
  (%1283, %1284, %1285)
}

def @func_392(%var_367: Tensor[(4, 1, 16), float32]) -> (Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) {
  %1286 = cast(%var_367, dtype="float32") /* ty=Tensor[(4, 1, 16), float32] */;
  %1287 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(4, 1, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1288 = cast(meta[relay.Constant][48] /* ty=Tensor[(4, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(4, 1, 16), float32] */;
  %1289 = dyn.reshape(%1286, %1287, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1290 = cast(%var_367, dtype="float32") /* ty=Tensor[(4, 1, 16), float32] */;
  %1291 = atan(%1290) /* ty=Tensor[(4, 1, 16), float32] */;
  %1292 = cast(%var_367, dtype="uint16") /* ty=Tensor[(4, 1, 16), uint16] */;
  %1293 = shape_of(%1291, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1294 = cast(%1291, dtype="uint16") /* ty=Tensor[(4, 1, 16), uint16] */;
  %1295 = dyn.reshape(%1292, %1293, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1296 = multiply(%1288, %1289) /* ty=Tensor[(4, ?, 16), float32] */;
  %1297 = maximum(%1294, %1295) /* ty=Tensor[(4, ?, 16), uint16] */;
  (%1296, %1297)
}

def @func_19576(%var_19568: Tensor[(770), float32]) -> (Tensor[(4, ?, 4), bool], Tensor[(10, 11, 7), float32], Tensor[(770), float32]) {
  %1298 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %1299 = cast(%var_19568, dtype="float32") /* ty=Tensor[(770), float32] */;
  %1300 = reshape(%1299, newshape=[10, 11, 7]) /* ty=Tensor[(10, 11, 7), float32] */;
  %1301 = @func_3676(%1300) /* ty=(Tensor[(10, 11, 7), float32], Tensor[(4, 16), float32]) */;
  %1302 = %1298.2;
  %1303 = %1301.0;
  (%1302, %1303, %var_19568)
}

def @func_17882() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1680), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1304 = @func_8957() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(480), float32]) */;
  %1305 = cast(meta[relay.Constant][49] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %1306 = reshape(%1305, newshape=[1, 1680]) /* ty=Tensor[(1, 1680), float32] */;
  %1307 = @func_3777(%1306) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2340), float32], Tensor[(4, ?, 16), float32], Tensor[(1, 1680), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1308 = @func_14712() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1309 = @func_12049() /* ty=(Tensor[(4, 16), float32],) */;
  %1310 = %1304.1;
  %1311 = %1307.2;
  %1312 = %1308.0;
  %1313 = %1309.0;
  (%1310, %1311, meta[relay.Constant][49] /* ty=Tensor[(1680), float32] */, %1312, %1313)
}

def @func_8447() -> Tensor[(4, 16), float32] {
  @func_3561() /* ty=Tensor[(4, 16), float32] */
}

def @func_17984() -> (Tensor[(4, ?, 16), float32],) {
  %1314 = @func_4881() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1315 = %1314.1;
  (%1315,)
}

def @func_16062() -> Tensor[(4, 16), float32] {
  %1316 = @func_10467() /* ty=(Tensor[(4, 16), float32],) */;
  %1316.0
}

def @func_7128() -> (Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) {
  %1317 = @func_5479() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */;
  %1318 = %1317.4;
  %1319 = cast(%1318, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %1320 = cast(%1318, dtype="float64") /* ty=Tensor[(2, 15, 16), float64] */;
  %1321 = sqrt(%1319) /* ty=Tensor[(2, 15, 16), float32] */;
  %1322 = sin(%1320) /* ty=Tensor[(2, 15, 16), float64] */;
  (%1321, %1322)
}

def @func_10467() -> (Tensor[(4, 16), float32],) {
  %1323 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
  %1324 = %1323.0;
  (%1324,)
}

def @func_10904(%var_10902: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) {
  %1325 = @func_9419() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(2, 15, 16), float64]) */;
  %1326 = cast(%var_10902, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1327 = reshape(%1326, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %1328 = @func_5692(%1327) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) */;
  %1329 = %1325.1;
  %1330 = %1328.1;
  (%1329, %1330, %var_10902)
}

def @func_14321() -> (Tensor[(4, 16), float32],) {
  %1331 = @func_9955() /* ty=(Tensor[(4, 16), float32],) */;
  %1332 = %1331.0;
  (%1332,)
}

def @func_2162() -> (Tensor[(4, 16), float32],) {
  %1333 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %1334 = %1333.0;
  (%1334,)
}

def @func_6902(%var_6898: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) {
  %1335 = cast(%var_6898, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1336 = reshape(%1335, newshape=[9, 260]) /* ty=Tensor[(9, 260), float32] */;
  %1337 = @func_2260(%1336) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 16), float32]) */;
  %1338 = @func_6448() /* ty=Tensor[(4, 16), float32] */;
  %1339 = %1337.0;
  (%1338, %1339, %var_6898)
}

def @func_12810() -> (Tensor[(4, 16), float32],) {
  %1340 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1341 = %1340.1;
  (%1341,)
}

def @func_4100(%var_4077: Tensor[(12, 60), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], float32, Tensor[(12, 60), float32]) {
  %1342 = @func_3069() /* ty=(Tensor[(4, 16), float32],) */;
  %1343 = cast(-1.03513f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1344 = cast(%var_4077, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
  %1345 = reshape(%1343, newshape=[]) /* ty=float32 */;
  %1346 = reshape(%1344, newshape=[3, 16, 15]) /* ty=Tensor[(3, 16, 15), float32] */;
  %1347 = @func_2362(%1345, %1346) /* ty=(Tensor[(3, 16, 15), float32], Tensor[(3, 16, 15), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1348 = %1342.0;
  %1349 = %1347.2;
  (%1348, %1349, -1.03513f /* ty=float32 */, %var_4077)
}

def @func_11599() -> (Tensor[(4, ?, 4), bool], Tensor[(128), uint16], Tensor[(4, 120), bool]) {
  %1350 = cast(meta[relay.Constant][50] /* ty=Tensor[(128), uint16] */, dtype="uint16") /* ty=Tensor[(128), uint16] */;
  %1351 = reshape(%1350, newshape=[4, 2, 16]) /* ty=Tensor[(4, 2, 16), uint16] */;
  %1352 = @func_2995(%1351) /* ty=(Tensor[(4, ?, 4), bool], Tensor[(4, 2, 16), bool]) */;
  %1353 = @func_9582() /* ty=(Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 120), float64]) */;
  %1354 = %1353.2;
  %1355 = @func_11377() /* ty=Tensor[(2, 15, 16), float64] */;
  %1356 = cast(%1355, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
  %1357 = shape_of(%1354, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1358 = cast(%1354, dtype="bool") /* ty=Tensor[(4, 120), bool] */;
  %1359 = dyn.reshape(%1356, %1357, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1360 = %1352.0;
  %1361 = less_equal(%1358, %1359) /* ty=Tensor[(4, 120), bool] */;
  (%1360, meta[relay.Constant][50] /* ty=Tensor[(128), uint16] */, %1361)
}

def @func_6235() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1362 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %1363 = @func_1235() /* ty=(Tensor[(4, 16), float32],) */;
  %1364 = %1362.0;
  %1365 = %1363.0;
  (%1364, %1365)
}

def @func_6440() -> Tensor[(4, 16), float32] {
  @func_2511() /* ty=Tensor[(4, 16), float32] */
}

def @func_13810(%var_13797: Tensor[(13, 7, 6), int32]) -> (Tensor[(13, 7, 6), bool],) {
  %1366 = cast(-1 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %1367 = cast(%var_13797, dtype="bool") /* ty=Tensor[(13, 7, 6), bool] */;
  %1368 = less_equal(%1366, %1367) /* ty=Tensor[(13, 7, 6), bool] */;
  (%1368,)
}

def @func_8593() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
  %1369 = @func_2524() /* ty=(Tensor[(4, 16), float32],) */;
  %1370 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1371 = %1369.0;
  %1372 = %1370.0;
  (%1371, %1372)
}

def @func_12588() -> (Tensor[(4, 16), float32],) {
  %1373 = @func_2606() /* ty=(Tensor[(4, 16), float32],) */;
  %1374 = %1373.0;
  (%1374,)
}

def @func_13611(%var_13608: Tensor[(15, 4, 12), float32]) -> Tensor[(15, 4, 12), float32] {
  %1375 = cast(%var_13608, dtype="float32") /* ty=Tensor[(15, 4, 12), float32] */;
  sigmoid(%1375) /* ty=Tensor[(15, 4, 12), float32] */
}

def @func_5763() -> (Tensor[(4, 16), float32],) {
  %1376 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1377 = %1376.5;
  (%1377,)
}

def @func_1205() -> (Tensor[(4, 16), float32],) {
  %1378 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %1379 = %1378.0;
  (%1379,)
}

def @func_5937(%var_5933: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), int8], Tensor[(4, 16), float32], Tensor[(720), float32]) {
  %1380 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %1381 = @func_1235() /* ty=(Tensor[(4, 16), float32],) */;
  %1382 = @func_5479() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */;
  %1383 = cast(%var_5933, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1384 = reshape(%1383, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %1385 = @func_5692(%1384) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) */;
  %1386 = @func_3186() /* ty=Tensor[(4, 16), float32] */;
  %1387 = %1380.0;
  %1388 = %1381.0;
  %1389 = %1382.0;
  %1390 = %1385.3;
  (%1386, %1387, %1388, %1389, %1390, %var_5933)
}

def @func_18356() -> (Tensor[(256), float64], Tensor[(720), float32], Tensor[(4, 16), float32]) {
  %1391 = @func_16464() /* ty=(Tensor[(256), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1392 = @func_17327() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1393 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %1394 = %1391.0;
  %1395 = %1392.2;
  %1396 = %1393.1;
  (%1394, %1395, %1396)
}

def @func_14560(%var_14550: Tensor[(10, 11, 7), int16]) -> Tensor[(10, 11, 7), uint32] {
  %1397 = @func_4971() /* ty=(Tensor[(4, 16), float32], Tensor[(10, 11, 7), int16]) */;
  %1398 = %1397.1;
  %1399 = cast(%var_14550, dtype="uint32") /* ty=Tensor[(10, 11, 7), uint32] */;
  %1400 = shape_of(%1398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1401 = cast(%1398, dtype="uint32") /* ty=Tensor[(10, 11, 7), uint32] */;
  %1402 = dyn.reshape(%1399, %1400, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%1401, %1402) /* ty=Tensor[(10, 11, 7), uint32] */
}

def @func_4774(%var_4762: Tensor[(1680), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) {
  %1403 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %1404 = cast(%var_4762, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %1405 = cast(%var_4762, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %1406 = reshape(%1404, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
  %1407 = reshape(%1405, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
  %1408 = @func_1168(%1406, %1407) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1409 = %1403.0;
  %1410 = %1408.1;
  (%1409, %1410, %var_4762)
}

def @func_15469() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1411 = @func_10296() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1412 = %1411.1;
  %1413 = @func_3561() /* ty=Tensor[(4, 16), float32] */;
  (%1412, %1413)
}

def @func_5750() -> Tensor[(4, 16), float32] {
  %1414 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1414.1
}

def @func_6337(%var_6306: Tensor[(2340), float32]) -> (Tensor[(4, ?, 16), float32], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) {
  %1415 = @func_4295() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1416 = @func_5479() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */;
  %1417 = cast(%var_6306, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1418 = reshape(%1417, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
  %1419 = @func_2892(%1418) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) */;
  %1420 = %1415.0;
  %1421 = %1416.2;
  %1422 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
  %1423 = %1419.3;
  (%1420, %1421, %1422, %1423, %var_6306)
}

def @func_2004() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1424 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %1425 = @func_1297() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1426 = %1424.0;
  %1427 = %1425.0;
  (%1426, %1427)
}

def @func_10241() -> (Tensor[(4, 16), float32],) {
  %1428 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %1429 = %1428.0;
  (%1429,)
}

def @func_14868() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1430 = @func_2004() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1431 = @func_13714() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1432 = %1430.0;
  %1433 = %1431.0;
  (%1432, %1433)
}

def @func_17740() -> (Tensor[(4, 16), float32],) {
  %1434 = @func_9922() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2340), float32]) */;
  %1435 = %1434.2;
  (%1435,)
}

def @func_7864(%var_7799: Tensor[(480), float64]) -> (Tensor[(2340), float32], Tensor[(720), float32], Tensor[(480), float64]) {
  %1436 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
  %1437 = cast(%var_7799, dtype="float64") /* ty=Tensor[(480), float64] */;
  %1438 = reshape(%1437, newshape=[2, 240]) /* ty=Tensor[(2, 240), float64] */;
  %1439 = @func_6846(%1438) /* ty=(Tensor[(7, 10, 8), float64], Tensor[(4, 16), float32], Tensor[(2, 240), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, ?, 16), uint16]) */;
  %1440 = %1436.0;
  %1441 = %1439.5;
  (%1440, %1441, %var_7799)
}

def @func_7650(%var_7635: Tensor[(3, 6, 16), float32]) -> Tensor[(3, 6, 16), float32] {
  %1442 = cast(%var_7635, dtype="float32") /* ty=Tensor[(3, 6, 16), float32] */;
  asinh(%1442) /* ty=Tensor[(3, 6, 16), float32] */
}

def @func_8781() -> (Tensor[(4, 16), float32],) {
  %1443 = @func_2606() /* ty=(Tensor[(4, 16), float32],) */;
  %1444 = %1443.0;
  (%1444,)
}

def @func_3474() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
  %1445 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %1446 = @func_2606() /* ty=(Tensor[(4, 16), float32],) */;
  %1447 = @func_2533() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1448 = %1445.0;
  %1449 = @func_2511() /* ty=Tensor[(4, 16), float32] */;
  %1450 = %1446.0;
  %1451 = %1447.0;
  (%1448, %1449, %1450, %1451)
}

def @func_12292() -> (Tensor[(4, 16), float32], float32, Tensor[(720), float32], Tensor[(4, ?, 16), float32], Tensor[(480), float32]) {
  %1452 = @func_2162() /* ty=(Tensor[(4, 16), float32],) */;
  %1453 = cast(meta[relay.Constant][51] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1454 = reshape(%1453, newshape=[12, 60]) /* ty=Tensor[(12, 60), float32] */;
  %1455 = @func_4100(%1454) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], float32, Tensor[(12, 60), float32]) */;
  %1456 = @func_8957() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(480), float32]) */;
  %1457 = %1452.0;
  %1458 = %1455.2;
  %1459 = @func_4823() /* ty=Tensor[(4, ?, 16), float32] */;
  %1460 = %1456.2;
  (%1457, %1458, meta[relay.Constant][51] /* ty=Tensor[(720), float32] */, %1459, %1460)
}

def @func_11363() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1461 = @func_9561() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1462 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
  %1463 = %1461.0;
  (%1462, %1463)
}

def @func_2094() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16]) {
  %1464 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
  %1465 = cast(%1464, dtype="float32") /* ty=Tensor[(4, 16), float32] */;
  %1466 = reshape(%1465, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %1467 = @func_392(%1466) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %1468 = %1467.1;
  (%1464, %1468)
}

def @func_6701() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) {
  %1469 = @func_4160() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1470 = @func_3069() /* ty=(Tensor[(4, 16), float32],) */;
  %1471 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 2340), float32] */, dtype="float32") /* ty=Tensor[(1, 2340), float32] */;
  %1472 = reshape(%1471, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
  %1473 = @func_2892(%1472) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) */;
  %1474 = %1469.1;
  %1475 = %1470.0;
  %1476 = %1473.2;
  (%1474, %1475, %1476, meta[relay.Constant][52] /* ty=Tensor[(1, 2340), float32] */)
}

def @func_3777(%var_3751: Tensor[(1, 1680), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2340), float32], Tensor[(4, ?, 16), float32], Tensor[(1, 1680), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1477 = @func_2015() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1478 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %1479 = @func_2094() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %1480 = cast(meta[relay.Constant][53] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1481 = reshape(%1480, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %1482 = @func_1783(%1481) /* ty=(Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), int16], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(4, 16), float32]) */;
  %1483 = cast(%var_3751, dtype="float32") /* ty=Tensor[(1, 1680), float32] */;
  %1484 = cast(%var_3751, dtype="float32") /* ty=Tensor[(1, 1680), float32] */;
  %1485 = reshape(%1483, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
  %1486 = reshape(%1484, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
  %1487 = @func_1168(%1485, %1486) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1488 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1489 = @func_3069() /* ty=(Tensor[(4, 16), float32],) */;
  %1490 = %1477.0;
  %1491 = %1478.0;
  %1492 = %1479.0;
  %1493 = %1482.2;
  %1494 = %1487.3;
  %1495 = %1488.5;
  %1496 = %1489.0;
  (%1490, %1491, %1492, %1493, meta[relay.Constant][53] /* ty=Tensor[(2340), float32] */, %1494, %var_3751, %1495, %1496)
}

def @func_19426() -> Tensor[(4, 16), float32] {
  %1497 = @func_8902() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1497.0
}

def @func_15676() -> (Tensor[(4, 16), float32],) {
  %1498 = @func_9144() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(1, 2340), float32], Tensor[(4, 16), float32]) */;
  %1499 = %1498.3;
  (%1499,)
}

def @func_3561() -> Tensor[(4, 16), float32] {
  %1500 = @func_2162() /* ty=(Tensor[(4, 16), float32],) */;
  %1500.0
}

def @func_8391() -> (Tensor[(4, ?, 4), bool],) {
  %1501 = @func_1100() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1502 = %1501.1;
  (%1502,)
}

def @func_10653(%var_10597: int32, %var_10598: Tensor[(13, 13, 10), int32]) -> (Tensor[(13, 13, 10), int32], Tensor[(1, 480), float64]) {
  %1503 = cast(%var_10597, dtype="int32") /* ty=int32 */;
  %1504 = cast(%var_10598, dtype="int32") /* ty=Tensor[(13, 13, 10), int32] */;
  %1505 = @func_9749() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 480), float64]) */;
  %1506 = bitwise_or(%1503, %1504) /* ty=Tensor[(13, 13, 10), int32] */;
  %1507 = %1505.2;
  (%1506, %1507)
}

def @func_11165(%var_11153: Tensor[(2, 5, 6), int32]) -> Tensor[(2, 5, 6), int32] {
  %1508 = cast(meta[relay.Constant][54] /* ty=Tensor[(2, 5, 6), int32] */, dtype="int32") /* ty=Tensor[(2, 5, 6), int32] */;
  %1509 = shape_of(%var_11153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1510 = cast(%var_11153, dtype="int32") /* ty=Tensor[(2, 5, 6), int32] */;
  %1511 = dyn.reshape(%1508, %1509, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  add(%1510, %1511) /* ty=Tensor[(2, 5, 6), int32] */
}

def @func_12362() -> (Tensor[(4, 16), float32],) {
  %1512 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
  %1513 = %1512.0;
  (%1513,)
}

def @func_16558() -> Tensor[(4, 16), float32] {
  @func_14672() /* ty=Tensor[(4, 16), float32] */
}

def @func_876() -> (Tensor[(4, 16), float32],) {
  %1514 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %1515 = %1514.1;
  (%1515,)
}

def @func_5588() -> (Tensor[(4, 16), float32],) {
  %1516 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1517 = %1516.1;
  (%1517,)
}

def @func_12980() -> Tensor[(4, 16), float32] {
  @func_4811() /* ty=Tensor[(4, 16), float32] */
}

def @func_8653(%var_8641: Tensor[(9, 8, 6), float64]) -> (Tensor[(9, 8, 6), float64],) {
  %1518 = cast(%var_8641, dtype="float64") /* ty=Tensor[(9, 8, 6), float64] */;
  %1519 = cosh(%1518) /* ty=Tensor[(9, 8, 6), float64] */;
  (%1519,)
}

def @func_14478(%var_14369: Tensor[(1274), float64], %var_14445: Tensor[(720), float32]) -> (Tensor[(4, ?, 16), float32], Tensor[(14, 7, 13), float64], Tensor[(1274), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, 16), float32]) {
  %1520 = @func_8401() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1521 = cast(%var_14369, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %1522 = reshape(%1521, newshape=[14, 7, 13]) /* ty=Tensor[(14, 7, 13), float64] */;
  %1523 = @func_8707(%1522) /* ty=(Tensor[(14, 7, 13), float64],) */;
  %1524 = @func_4160() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1525 = @func_7245() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1526 = @func_8115() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1527 = cast(meta[relay.Constant][55] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1528 = reshape(%1527, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %1529 = @func_6337(%1528) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) */;
  %1530 = @func_10561() /* ty=(Tensor[(2, 15, 16), float32],) */;
  %1531 = cast(%var_14445, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1532 = reshape(%1531, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %1533 = @func_10904(%1532) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) */;
  %1534 = @func_8115() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1535 = %1520.0;
  %1536 = %1523.0;
  %1537 = %1524.1;
  %1538 = %1525.0;
  %1539 = %1526.0;
  %1540 = %1529.3;
  %1541 = %1530.0;
  %1542 = @func_8238() /* ty=Tensor[(4, 16), float32] */;
  %1543 = %1533.0;
  %1544 = %1534.0;
  (%1535, %1536, %var_14369, %1537, %1538, %1539, %1540, meta[relay.Constant][55] /* ty=Tensor[(2340), float32] */, %1541, %1542, %1543, %var_14445, %1544)
}

def @func_18727() -> (Tensor[(4, 16), float32],) {
  %1545 = @func_13359() /* ty=(Tensor[(4, 16), float32],) */;
  %1546 = %1545.0;
  (%1546,)
}

def @func_8758(%var_8742: Tensor[(150), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(150), float32], Tensor[(4, 16), float32], Tensor[(150, 1), float64]) {
  %1547 = @func_4788() /* ty=(Tensor[(4, 16), float32],) */;
  %1548 = @func_4788() /* ty=(Tensor[(4, 16), float32],) */;
  %1549 = @func_7270() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1550 = cast(%var_8742, dtype="float32") /* ty=Tensor[(150), float32] */;
  %1551 = reshape(%1550, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
  %1552 = @func_8063(%1551) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150, 1), float32]) */;
  %1553 = %1552.3;
  %1554 = cast(%1553, dtype="float64") /* ty=Tensor[(150, 1), float64] */;
  %1555 = %1547.0;
  %1556 = %1548.0;
  %1557 = %1549.1;
  %1558 = sqrt(%1554) /* ty=Tensor[(150, 1), float64] */;
  (%1555, %1556, %var_8742, %1557, %1558)
}

def @func_12344() -> Tensor[(2340), float64] {
  %1559 = @func_6555() /* ty=(Tensor[(2340), float64], Tensor[(4, 16), float32]) */;
  %1559.0
}

def @func_15158(%var_15147: Tensor[(6, 16, 4), bool], %var_15148: Tensor[(6, 16, 4), bool]) -> (Tensor[(6, 16, 4), bool],) {
  %1560 = cast(%var_15148, dtype="bool") /* ty=Tensor[(6, 16, 4), bool] */;
  %1561 = shape_of(%var_15147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1562 = cast(%var_15147, dtype="bool") /* ty=Tensor[(6, 16, 4), bool] */;
  %1563 = dyn.reshape(%1560, %1561, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1564 = logical_and(%1562, %1563) /* ty=Tensor[(6, 16, 4), bool] */;
  (%1564,)
}

def @func_16594(%var_16577: Tensor[(2, 12, 15), float64]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(360), uint64], Tensor[(2, 12, 15), bool], Tensor[(4, 16), float32]) {
  %1565 = @func_6182() /* ty=(Tensor[(4, 16), float32],) */;
  %1566 = cast(meta[relay.Constant][56] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %1567 = reshape(%1566, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), uint64] */;
  %1568 = @func_9351(%1567) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 12, 15), float64]) */;
  %1569 = %1568.1;
  %1570 = cast(%var_16577, dtype="bool") /* ty=Tensor[(2, 12, 15), bool] */;
  %1571 = shape_of(%1569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1572 = cast(%1569, dtype="bool") /* ty=Tensor[(2, 12, 15), bool] */;
  %1573 = dyn.reshape(%1570, %1571, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1574 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %1575 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
  %1576 = %1565.0;
  %1577 = greater(%1572, %1573) /* ty=Tensor[(2, 12, 15), bool] */;
  %1578 = %1574.0;
  (%1575, %1576, meta[relay.Constant][56] /* ty=Tensor[(360), uint64] */, %1577, %1578)
}

def @func_7377() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1579 = @func_4788() /* ty=(Tensor[(4, 16), float32],) */;
  %1580 = @func_7270() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1581 = @func_2464() /* ty=(Tensor[(4, 16), float32],) */;
  %1582 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %1583 = @func_2524() /* ty=(Tensor[(4, 16), float32],) */;
  %1584 = %1579.0;
  %1585 = %1580.1;
  %1586 = %1581.0;
  %1587 = %1582.0;
  %1588 = %1583.0;
  (%1584, %1585, %1586, %1587, %1588)
}

def @func_3988() -> Tensor[(2, 15, 16), float64] {
  %1589 = @func_2754() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
  %1590 = %1589.3;
  %1591 = cast(%1590, dtype="float64") /* ty=Tensor[(2, 15, 16), float64] */;
  acosh(%1591) /* ty=Tensor[(2, 15, 16), float64] */
}

def @func_1100() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1592 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %1593 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %1594 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1595 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %1596 = %1592.0;
  %1597 = %1593.2;
  %1598 = %1594.0;
  %1599 = %1595.0;
  (%1596, %1597, %1598, %1599)
}

def @func_16930(%var_16914: Tensor[(3, 10, 9), uint8], %var_16915: Tensor[(3, 10, 9), uint8]) -> Tensor[(3, 10, 9), bool] {
  %1600 = cast(%var_16915, dtype="bool") /* ty=Tensor[(3, 10, 9), bool] */;
  %1601 = shape_of(%var_16914, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1602 = cast(%var_16914, dtype="bool") /* ty=Tensor[(3, 10, 9), bool] */;
  %1603 = dyn.reshape(%1600, %1601, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%1602, %1603) /* ty=Tensor[(3, 10, 9), bool] */
}

def @func_19556() -> (Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(720), float32]) {
  %1604 = @func_18161() /* ty=(Tensor[(4, 16), float32], Tensor[(256), float64]) */;
  %1605 = cast(meta[relay.Constant][57] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1606 = reshape(%1605, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %1607 = @func_19194(%1606) /* ty=(Tensor[(240, 2), float64], Tensor[(2340), float32], Tensor[(720), float32]) */;
  %1608 = %1604.0;
  %1609 = %1607.2;
  (%1608, %1609, meta[relay.Constant][57] /* ty=Tensor[(720), float32] */)
}

def @func_5692(%var_5685: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) {
  %1610 = @func_5479() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */;
  %1611 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1612 = cast(%var_5685, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1613 = reshape(%1612, newshape=[12, 60]) /* ty=Tensor[(12, 60), float32] */;
  %1614 = @func_4100(%1613) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], float32, Tensor[(12, 60), float32]) */;
  %1615 = %1610.3;
  %1616 = @func_3809() /* ty=Tensor[(4, 16), float32] */;
  %1617 = @func_4477() /* ty=Tensor[(4, 16), float32] */;
  %1618 = %1611.1;
  %1619 = %1614.0;
  (%1615, %1616, %1617, %1618, %1619, %var_5685)
}

def @func_14200() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(240, 2), float64], Tensor[(2340), float64], Tensor[(4, ?, 16), float64], Tensor[(2, 15, 16), bool]) {
  %1620 = @func_4881() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1621 = @func_7245() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1622 = cast(meta[relay.Constant][58] /* ty=Tensor[(240, 2), float64] */, dtype="float64") /* ty=Tensor[(240, 2), float64] */;
  %1623 = reshape(%1622, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %1624 = @func_4649(%1623) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %1625 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1626 = %1625.3;
  %1627 = cast(%1626, dtype="float64") /* ty=Tensor[(4, ?, 16), float64] */;
  %1628 = cast(meta[relay.Constant][58] /* ty=Tensor[(240, 2), float64] */, dtype="float64") /* ty=Tensor[(240, 2), float64] */;
  %1629 = reshape(%1628, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %1630 = @func_4649(%1629) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %1631 = %1620.3;
  %1632 = %1621.0;
  %1633 = %1624.3;
  %1634 = @func_12344() /* ty=Tensor[(2340), float64] */;
  %1635 = erf(%1627) /* ty=Tensor[(4, ?, 16), float64] */;
  %1636 = %1630.4;
  (%1631, %1632, %1633, meta[relay.Constant][58] /* ty=Tensor[(240, 2), float64] */, %1634, %1635, %1636)
}

def @func_2533() -> (Tensor[(4, ?, 16), float32],) {
  %1637 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1638 = %1637.0;
  (%1638,)
}

def @func_10368() -> (Tensor[(4, 16), float32],) {
  %1639 = @func_2015() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1640 = %1639.2;
  (%1640,)
}

def @func_2260(%var_2255: Tensor[(9, 260), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 16), float32]) {
  %1641 = @func_2094() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %1642 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %1643 = cast(%var_2255, dtype="float32") /* ty=Tensor[(9, 260), float32] */;
  %1644 = reshape(%1643, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %1645 = @func_1783(%1644) /* ty=(Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), int16], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(4, 16), float32]) */;
  %1646 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %1647 = @func_1216() /* ty=Tensor[(4, 16), float32] */;
  %1648 = %1641.0;
  %1649 = %1642.0;
  %1650 = %1645.7;
  %1651 = %1646.0;
  (%1647, %1648, %1649, %1650, %var_2255, %1651)
}

def @func_9561() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1652 = @func_8512() /* ty=(Tensor[(4, 16), float32],) */;
  %1653 = %1652.0;
  %1654 = @func_8238() /* ty=Tensor[(4, 16), float32] */;
  (%1653, %1654)
}

def @func_18228() -> Tensor[(4, 16), float32] {
  %1655 = @func_9668() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1655.1
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5752() -> Tensor[(4, 16), float32] {
  @func_5750() /* ty=Tensor[(4, 16), float32] */
}

def @func_3408() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32]) {
  @func_3406() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32]) */
}

def @func_1786(%var_1784: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), int16], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(4, 16), float32]) {
  @func_1783(%var_1784) /* ty=(Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), int16], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(4, 16), float32]) */
}

def @func_10807(%var_10770: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, ?, 16), float64]) {
  %0 = @func_9955() /* ty=(Tensor[(4, 16), float32],) */;
  %1 = cast(%var_10770, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %2 = reshape(%1, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float32] */;
  %3 = %0.0;
  %4 = @func_1405(%2) /* ty=Tensor[(13, 15, 12), float32] */;
  %5 = @func_5129() /* ty=Tensor[(4, ?, 16), float64] */;
  (%3, %4, %var_10770, %5)
}

def @func_6036(%var_5987: Tensor[(60, 2), uint64]) -> (Tensor[(4, 16), float32], Tensor[(60, 2), uint64], Tensor[(6, 4, 5), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32]) {
  %6 = cast(%var_5987, dtype="uint64") /* ty=Tensor[(60, 2), uint64] */;
  %7 = reshape(%6, newshape=[6, 4, 5]) /* ty=Tensor[(6, 4, 5), uint64] */;
  %8 = @func_3142(%7) /* ty=(Tensor[(6, 4, 5), uint64],) */;
  %9 = %8.0;
  %10 = cast(%9, dtype="float32") /* ty=Tensor[(6, 4, 5), float32] */;
  %11 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %12 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
  %13 = sinh(%10) /* ty=Tensor[(6, 4, 5), float32] */;
  %14 = @func_4823() /* ty=Tensor[(4, ?, 16), float32] */;
  %15 = %11.0;
  (%12, %var_5987, %13, %14, %15)
}

def @func_11167(%var_11166: Tensor[(2, 5, 6), int32]) -> Tensor[(2, 5, 6), int32] {
  %20 = fn (%var_11153: Tensor[(2, 5, 6), int32]) -> Tensor[(2, 5, 6), int32] {
    %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 5, 6), int32] */, dtype="int32") /* ty=Tensor[(2, 5, 6), int32] */;
    %17 = shape_of(%var_11153, dtype="int32") /* ty=Tensor[(3), int32] */;
    %18 = cast(%var_11153, dtype="int32") /* ty=Tensor[(2, 5, 6), int32] */;
    %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    add(%18, %19) /* ty=Tensor[(2, 5, 6), int32] */
  };
  %20(%var_11166) /* ty=Tensor[(2, 5, 6), int32] */
}

def @func_7628(%var_7626: float32, %var_7627: Tensor[(1, 14), float32]) -> Tensor[(1, 14), float32] {
  @func_7624(%var_7626, %var_7627) /* ty=Tensor[(1, 14), float32] */
}

def @func_16400() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %21 = @func_14259() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %22 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %23 = @func_12929() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %24 = %21.1;
  %25 = %22.0;
  %26 = %23.0;
  (%24, %25, %26)
}

def @func_12181(%var_12179: Tensor[(120), uint64]) -> (Tensor[(4, 16), float32], Tensor[(60, 2), uint64], Tensor[(120), uint64], Tensor[(2, 15, 16), float32]) {
  @func_12178(%var_12179) /* ty=(Tensor[(4, 16), float32], Tensor[(60, 2), uint64], Tensor[(120), uint64], Tensor[(2, 15, 16), float32]) */
}

def @func_10369() -> (Tensor[(4, 16), float32],) {
  %29 = fn () -> (Tensor[(4, 16), float32],) {
    %27 = @func_2015() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %28 = %27.2;
    (%28,)
  };
  %29() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_16597(%var_16595: Tensor[(2, 12, 15), float64]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(360), uint64], Tensor[(2, 12, 15), bool], Tensor[(4, 16), float32]) {
  @func_16594(%var_16595) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(360), uint64], Tensor[(2, 12, 15), bool], Tensor[(4, 16), float32]) */
}

def @func_6701() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) {
  %30 = @func_4160() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %31 = @func_3069() /* ty=(Tensor[(4, 16), float32],) */;
  %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 2340), float32] */, dtype="float32") /* ty=Tensor[(1, 2340), float32] */;
  %33 = reshape(%32, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
  %34 = @func_2892(%33) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) */;
  %35 = %30.1;
  %36 = %31.0;
  %37 = %34.2;
  (%35, %36, %37, meta[relay.Constant][1] /* ty=Tensor[(1, 2340), float32] */)
}

def @func_3921() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32]) {
  %38 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %39 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %40 = cast(meta[relay.Constant][2] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %41 = reshape(%40, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %42 = @func_2940(%41) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
  %43 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %44 = %38.0;
  %45 = @func_3186() /* ty=Tensor[(4, 16), float32] */;
  %46 = %39.3;
  %47 = %42.0;
  %48 = %43.0;
  (%44, %45, %46, %47, meta[relay.Constant][2] /* ty=Tensor[(2340), float32] */, %48)
}

def @func_6184() -> (Tensor[(4, 16), float32],) {
  @func_6182() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_11364() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %52 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %49 = @func_9561() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %50 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
    %51 = %49.0;
    (%50, %51)
  };
  %52() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_17054(%var_17041: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16], Tensor[(2340), float32]) {
  %53 = @func_10917() /* ty=(Tensor[(4, 16), float32],) */;
  %54 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %55 = cast(%var_17041, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %56 = reshape(%55, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %57 = @func_6337(%56) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) */;
  %58 = %54.0;
  %59 = cast(%58, dtype="float32") /* ty=Tensor[(4, 16), float32] */;
  %60 = reshape(%59, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %61 = @func_392(%60) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %62 = cast(meta[relay.Constant][3] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %63 = shape_of(%var_17041, dtype="int32") /* ty=Tensor[(1), int32] */;
  %64 = cast(%var_17041, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?), float32] */;
  %66 = %53.0;
  %67 = %57.2;
  %68 = %61.1;
  %69 = divide(%64, %65) /* ty=Tensor[(2340), float32] */;
  (%66, %58, %67, %68, %69)
}

def @func_15354() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %70 = @func_14259() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %71 = %70.1;
  %72 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
  (%71, %72)
}

def @func_13714() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
  %73 = @func_2464() /* ty=(Tensor[(4, 16), float32],) */;
  %74 = @func_6235() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %75 = %73.0;
  %76 = cast(%75, dtype="float32") /* ty=Tensor[(4, 16), float32] */;
  %77 = reshape(%76, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %78 = @func_392(%77) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %79 = %74.0;
  %80 = %78.0;
  (%75, %79, %80)
}

def @func_15262() -> (Tensor[(4, 16), float32],) {
  @func_15260() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_10919() -> (Tensor[(4, 16), float32],) {
  @func_10917() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_18162() -> (Tensor[(4, 16), float32], Tensor[(256), float64]) {
  %85 = fn () -> (Tensor[(4, 16), float32], Tensor[(256), float64]) {
    %81 = @func_10296() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %82 = @func_7017() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) */;
    %83 = %81.0;
    %84 = %82.4;
    (%83, %84)
  };
  %85() /* ty=(Tensor[(4, 16), float32], Tensor[(256), float64]) */
}

def @func_8291() -> (Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32]) {
  %86 = @func_4295() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %87 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
  %88 = %86.0;
  %89 = %87.0;
  (%88, %89)
}

def @func_9669() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %93 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %90 = @func_2114() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %91 = @func_8026() /* ty=Tensor[(4, 16), float32] */;
    %92 = %90.0;
    (%91, %92)
  };
  %93() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_15655() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(150), float32]) {
  %102 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(150), float32]) {
    %94 = @func_8781() /* ty=(Tensor[(4, 16), float32],) */;
    %95 = @func_2606() /* ty=(Tensor[(4, 16), float32],) */;
    %96 = cast(meta[relay.Constant][4] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
    %97 = reshape(%96, newshape=[150]) /* ty=Tensor[(150), float32] */;
    %98 = @func_8758(%97) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(150), float32], Tensor[(4, 16), float32], Tensor[(150, 1), float64]) */;
    %99 = %94.0;
    %100 = %95.0;
    %101 = %98.0;
    (%99, %100, %101, meta[relay.Constant][4] /* ty=Tensor[(150), float32] */)
  };
  %102() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(150), float32]) */
}

def @func_392(%var_367: Tensor[(4, 1, 16), float32]) -> (Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) {
  %103 = cast(%var_367, dtype="float32") /* ty=Tensor[(4, 1, 16), float32] */;
  %104 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(4, 1, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(4, 1, 16), float32] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %107 = cast(%var_367, dtype="float32") /* ty=Tensor[(4, 1, 16), float32] */;
  %108 = atan(%107) /* ty=Tensor[(4, 1, 16), float32] */;
  %109 = cast(%var_367, dtype="uint16") /* ty=Tensor[(4, 1, 16), uint16] */;
  %110 = shape_of(%108, dtype="int32") /* ty=Tensor[(3), int32] */;
  %111 = cast(%108, dtype="uint16") /* ty=Tensor[(4, 1, 16), uint16] */;
  %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %113 = multiply(%105, %106) /* ty=Tensor[(4, ?, 16), float32] */;
  %114 = maximum(%111, %112) /* ty=Tensor[(4, ?, 16), uint16] */;
  (%113, %114)
}

def @func_10906(%var_10905: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) {
  %121 = fn (%var_10902: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) {
    %115 = @func_9419() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(2, 15, 16), float64]) */;
    %116 = cast(%var_10902, dtype="float32") /* ty=Tensor[(720), float32] */;
    %117 = reshape(%116, newshape=[720]) /* ty=Tensor[(720), float32] */;
    %118 = @func_5692(%117) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) */;
    %119 = %115.1;
    %120 = %118.1;
    (%119, %120, %var_10902)
  };
  %121(%var_10905) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) */
}

def @func_7867(%var_7865: Tensor[(480), float64]) -> (Tensor[(2340), float32], Tensor[(720), float32], Tensor[(480), float64]) {
  @func_7864(%var_7865) /* ty=(Tensor[(2340), float32], Tensor[(720), float32], Tensor[(480), float64]) */
}

def @func_12667() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(256), float64]) {
  %130 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(256), float64]) {
    %122 = @func_12314() /* ty=(Tensor[(4, 16), float32],) */;
    %123 = cast(meta[relay.Constant][6] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
    %124 = cast(meta[relay.Constant][6] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
    %125 = reshape(%123, newshape=[128, 2]) /* ty=Tensor[(128, 2), float64] */;
    %126 = reshape(%124, newshape=[2, 16, 8]) /* ty=Tensor[(2, 16, 8), float64] */;
    %127 = @func_11798(%125, %126) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(128, 2), float64], Tensor[(2, 16, 8), uint16], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %128 = %122.0;
    %129 = %127.7;
    (%128, %129, meta[relay.Constant][6] /* ty=Tensor[(256), float64] */)
  };
  %130() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(256), float64]) */
}

def @func_15011() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %131 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
  %132 = @func_13312() /* ty=Tensor[(4, 16), float32] */;
  (%131, %132)
}

def @func_10917() -> (Tensor[(4, 16), float32],) {
  %133 = @func_10024() /* ty=Tensor[(4, 16), float32] */;
  (%133,)
}

def @func_7773(%var_7721: Tensor[(480), float64], %var_7733: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %134 = @func_2754() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
  %135 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %136 = cast(%var_7733, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %137 = reshape(%136, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
  %138 = @func_2892(%137) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) */;
  %139 = cast(%var_7721, dtype="float64") /* ty=Tensor[(480), float64] */;
  %140 = reshape(%139, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %141 = @func_4649(%140) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %142 = %141.8;
  %143 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 15, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%142, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %147 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %148 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
  %149 = %134.0;
  %150 = %135.0;
  %151 = %138.4;
  %152 = minimum(%145, %146) /* ty=Tensor[(2, 15, 16), float32] */;
  %153 = %147.1;
  %154 = %148.0;
  (%149, %var_7721, %150, %151, %var_7733, %152, %153, %154)
}

def @func_19291() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_19289() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_17985() -> (Tensor[(4, ?, 16), float32],) {
  %157 = fn () -> (Tensor[(4, ?, 16), float32],) {
    %155 = @func_4881() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %156 = %155.1;
    (%156,)
  };
  %157() /* ty=(Tensor[(4, ?, 16), float32],) */
}

def @func_6340(%var_6338: Tensor[(2340), float32]) -> (Tensor[(4, ?, 16), float32], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) {
  @func_6337(%var_6338) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) */
}

def @func_12858() -> Tensor[(4, 16), float32] {
  %158 = fn () -> Tensor[(4, 16), float32] {
    @func_9226() /* ty=Tensor[(4, 16), float32] */
  };
  %158() /* ty=Tensor[(4, 16), float32] */
}

def @func_1578() -> Tensor[(4, 16), float32] {
  %160 = fn () -> Tensor[(4, 16), float32] {
    %159 = @func_1235() /* ty=(Tensor[(4, 16), float32],) */;
    %159.0
  };
  %160() /* ty=Tensor[(4, 16), float32] */
}

def @func_17551() -> (Tensor[(4, 16), float32],) {
  %163 = fn () -> (Tensor[(4, 16), float32],) {
    %161 = @func_16789() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %162 = %161.2;
    (%162,)
  };
  %163() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_10263(%var_10250: Tensor[(2, 12, 4), float64]) -> (Tensor[(2, 12, 4), float64],) {
  %164 = cast(%var_10250, dtype="float64") /* ty=Tensor[(2, 12, 4), float64] */;
  %165 = log2(%164) /* ty=Tensor[(2, 12, 4), float64] */;
  (%165,)
}

def @func_12085(%var_12083: Tensor[(2, 144), float32]) -> (Tensor[(4, 16), float32], Tensor[(3, 6, 16), float32], Tensor[(2, 144), float32]) {
  @func_12082(%var_12083) /* ty=(Tensor[(4, 16), float32], Tensor[(3, 6, 16), float32], Tensor[(2, 144), float32]) */
}

def @func_12487() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64]) {
  %177 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64]) {
    %166 = @func_4881() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %167 = @func_2015() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %168 = @func_12049() /* ty=(Tensor[(4, 16), float32],) */;
    %169 = cast(meta[relay.Constant][8] /* ty=Tensor[(120), uint64] */, dtype="uint64") /* ty=Tensor[(120), uint64] */;
    %170 = reshape(%169, newshape=[6, 4, 5]) /* ty=Tensor[(6, 4, 5), uint64] */;
    %171 = @func_3142(%170) /* ty=(Tensor[(6, 4, 5), uint64],) */;
    %172 = %166.2;
    %173 = %167.1;
    %174 = @func_3186() /* ty=Tensor[(4, 16), float32] */;
    %175 = %168.0;
    %176 = %171.0;
    (%172, %173, %174, %175, %176, meta[relay.Constant][8] /* ty=Tensor[(120), uint64] */)
  };
  %177() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64]) */
}

def @main(%var_19724: Tensor[(8, 8, 3), float32], %var_19725: Tensor[(8, 8, 3), float32], %var_19736: Tensor[(8, 8, 3), float32]) -> (Tensor[(8, 8, 3), int32], Tensor[(8, 8, 3), float64], Tensor[(8, 8, 3), float32]) {
  %178 = cast(%var_19736, dtype="int32") /* ty=Tensor[(8, 8, 3), int32] */;
  %179 = shape_of(%var_19724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %180 = cast(%var_19724, dtype="int32") /* ty=Tensor[(8, 8, 3), int32] */;
  %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %182 = cast(%var_19725, dtype="float32") /* ty=Tensor[(8, 8, 3), float32] */;
  %183 = shape_of(%var_19724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%var_19724, dtype="float32") /* ty=Tensor[(8, 8, 3), float32] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %186 = power(%184, %185) /* ty=Tensor[(8, 8, 3), float32] */;
  %187 = cast(%var_19736, dtype="float64") /* ty=Tensor[(8, 8, 3), float64] */;
  %188 = shape_of(%186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%186, dtype="float64") /* ty=Tensor[(8, 8, 3), float64] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %191 = cast(%var_19736, dtype="float32") /* ty=Tensor[(8, 8, 3), float32] */;
  %192 = minimum(%180, %181) /* ty=Tensor[(8, 8, 3), int32] */;
  %193 = floor_divide(%189, %190) /* ty=Tensor[(8, 8, 3), float64] */;
  %194 = log2(%191) /* ty=Tensor[(8, 8, 3), float32] */;
  (%192, %193, %194)
}

def @func_11532(%var_11530: Tensor[(9, 260), float32], %var_11531: Tensor[(9, 260), float64]) -> (Tensor[(9, 260), bool], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 16), float32]) {
  %216 = fn (%var_11456: Tensor[(9, 260), float32], %var_11468: Tensor[(9, 260), float64]) -> (Tensor[(9, 260), bool], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 16), float32]) {
    %195 = @func_9582() /* ty=(Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 120), float64]) */;
    %196 = %195.1;
    %197 = cast(%var_11456, dtype="bool") /* ty=Tensor[(9, 260), bool] */;
    %198 = shape_of(%196, dtype="int32") /* ty=Tensor[(2), int32] */;
    %199 = cast(%196, dtype="bool") /* ty=Tensor[(9, 260), bool] */;
    %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %201 = @func_6727() /* ty=(Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
    %202 = @func_8291() /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32]) */;
    %203 = cast(%196, dtype="float64") /* ty=Tensor[(9, 260), float64] */;
    %204 = log(%203) /* ty=Tensor[(9, 260), float64] */;
    %205 = cast(%var_11468, dtype="bool") /* ty=Tensor[(9, 260), bool] */;
    %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(2), int32] */;
    %207 = cast(%204, dtype="bool") /* ty=Tensor[(9, 260), bool] */;
    %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %209 = logical_and(%207, %208) /* ty=Tensor[(9, 260), bool] */;
    %210 = cast(%209, dtype="float32") /* ty=Tensor[(9, 260), float32] */;
    %211 = logical_or(%199, %200) /* ty=Tensor[(9, 260), bool] */;
    %212 = %201.0;
    %213 = %202.1;
    %214 = exp(%210) /* ty=Tensor[(9, 260), float32] */;
    %215 = @func_8238() /* ty=Tensor[(4, 16), float32] */;
    (%211, %212, %213, %214, %215)
  };
  %216(%var_11530, %var_11531) /* ty=(Tensor[(9, 260), bool], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 16), float32]) */
}

def @func_17813() -> (Tensor[(4, 16), float32],) {
  %219 = fn () -> (Tensor[(4, 16), float32],) {
    %217 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
    %218 = %217.0;
    (%218,)
  };
  %219() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_17329() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_17327() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_9396() -> (Tensor[(4, 16), float32],) {
  @func_9394() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_14912() -> (Tensor[(2, 15, 16), float64],) {
  %220 = @func_3988() /* ty=Tensor[(2, 15, 16), float64] */;
  (%220,)
}

def @func_17364() -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) {
  %227 = fn () -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) {
    %221 = @func_16400() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %222 = cast(meta[relay.Constant][9] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %223 = reshape(%222, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float32] */;
    %224 = @func_2389(%223) /* ty=(Tensor[(2, 15, 16), float32],) */;
    %225 = %221.0;
    %226 = %224.0;
    (%225, %226, meta[relay.Constant][9] /* ty=Tensor[(480), float32] */)
  };
  %227() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */
}

def @func_19351() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %228 = @func_11905() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32]) */;
  %229 = @func_16807() /* ty=Tensor[(4, 16), float32] */;
  %230 = %228.1;
  (%229, %230)
}

def @func_3287(%var_3245: Tensor[(3, 780), float32], %var_3262: Tensor[(3, 780), float32]) -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(3, 780), bool]) {
  %231 = @func_2464() /* ty=(Tensor[(4, 16), float32],) */;
  %232 = cast(%var_3245, dtype="float32") /* ty=Tensor[(3, 780), float32] */;
  %233 = reshape(%232, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %234 = @func_2940(%233) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
  %235 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %236 = cast(%var_3262, dtype="bool") /* ty=Tensor[(3, 780), bool] */;
  %237 = shape_of(%var_3245, dtype="int32") /* ty=Tensor[(2), int32] */;
  %238 = cast(%var_3245, dtype="bool") /* ty=Tensor[(3, 780), bool] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %240 = cast(%var_3245, dtype="bool") /* ty=Tensor[(3, 780), bool] */;
  %241 = shape_of(%var_3262, dtype="int32") /* ty=Tensor[(2), int32] */;
  %242 = cast(%var_3262, dtype="bool") /* ty=Tensor[(3, 780), bool] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %244 = %231.0;
  %245 = %234.3;
  %246 = %235.0;
  %247 = greater(%238, %239) /* ty=Tensor[(3, 780), bool] */;
  %248 = equal(%242, %243) /* ty=Tensor[(3, 780), bool] */;
  (%244, %245, %246, %247, %248)
}

def @func_3071() -> (Tensor[(4, 16), float32],) {
  @func_3069() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_16913() -> (Tensor[(256), float64],) {
  %251 = fn () -> (Tensor[(256), float64],) {
    %249 = @func_7165() /* ty=(Tensor[(4, 16), float32], Tensor[(256), float64]) */;
    %250 = %249.1;
    (%250,)
  };
  %251() /* ty=(Tensor[(256), float64],) */
}

def @func_16857() -> (Tensor[(4, 16), float32],) {
  %253 = fn () -> (Tensor[(4, 16), float32],) {
    %252 = @func_9226() /* ty=Tensor[(4, 16), float32] */;
    (%252,)
  };
  %253() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_6905(%var_6903: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) {
  @func_6902(%var_6903) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) */
}

def @func_12315() -> (Tensor[(4, 16), float32],) {
  %256 = fn () -> (Tensor[(4, 16), float32],) {
    %254 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
    %255 = %254.0;
    (%255,)
  };
  %256() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_3676(%var_3660: Tensor[(10, 11, 7), float32]) -> (Tensor[(10, 11, 7), float32], Tensor[(4, 16), float32]) {
  %257 = cast(%var_3660, dtype="float32") /* ty=Tensor[(10, 11, 7), float32] */;
  %258 = @func_2606() /* ty=(Tensor[(4, 16), float32],) */;
  %259 = exp(%257) /* ty=Tensor[(10, 11, 7), float32] */;
  %260 = %258.0;
  (%259, %260)
}

def @func_5480() -> (Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) {
  %279 = fn () -> (Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) {
    %261 = @func_3988() /* ty=Tensor[(2, 15, 16), float64] */;
    %262 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 15, 16), float64] */, dtype="int8") /* ty=Tensor[(2, 15, 16), int8] */;
    %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
    %264 = cast(%261, dtype="int8") /* ty=Tensor[(2, 15, 16), int8] */;
    %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %266 = cast(meta[relay.Constant][11] /* ty=Tensor[(120), uint64] */, dtype="uint64") /* ty=Tensor[(120), uint64] */;
    %267 = reshape(%266, newshape=[6, 4, 5]) /* ty=Tensor[(6, 4, 5), uint64] */;
    %268 = @func_3142(%267) /* ty=(Tensor[(6, 4, 5), uint64],) */;
    %269 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 15, 16), float64] */, dtype="uint32") /* ty=Tensor[(2, 15, 16), uint32] */;
    %270 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
    %271 = cast(%261, dtype="uint32") /* ty=Tensor[(2, 15, 16), uint32] */;
    %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %273 = @func_2606() /* ty=(Tensor[(4, 16), float32],) */;
    %274 = bitwise_or(%264, %265) /* ty=Tensor[(2, 15, 16), int8] */;
    %275 = %268.0;
    %276 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
    %277 = subtract(%271, %272) /* ty=Tensor[(2, 15, 16), uint32] */;
    %278 = %273.0;
    (%274, %275, meta[relay.Constant][11] /* ty=Tensor[(120), uint64] */, %276, %277, %278)
  };
  %279() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */
}

def @func_9833() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %280 = @func_5479() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */;
  %281 = @func_1100() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %282 = %280.5;
  %283 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
  %284 = %281.2;
  %285 = @func_4477() /* ty=Tensor[(4, 16), float32] */;
  (%282, %283, %284, %285)
}

def @func_17158() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %286 = @func_4788() /* ty=(Tensor[(4, 16), float32],) */;
  %287 = %286.0;
  %288 = @func_12980() /* ty=Tensor[(4, 16), float32] */;
  (%287, %288)
}

def @func_395(%var_393: Tensor[(4, 1, 16), float32]) -> (Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) {
  @func_392(%var_393) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */
}

def @func_3291(%var_3289: Tensor[(3, 780), float32], %var_3290: Tensor[(3, 780), float32]) -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(3, 780), bool]) {
  @func_3287(%var_3289, %var_3290) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(3, 780), bool]) */
}

def @func_13632() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %289 = @func_12588() /* ty=(Tensor[(4, 16), float32],) */;
  %290 = @func_2162() /* ty=(Tensor[(4, 16), float32],) */;
  %291 = %289.0;
  %292 = %290.0;
  (%291, %292)
}

def @func_1885() -> (Tensor[(4, 16), float32],) {
  %295 = fn () -> (Tensor[(4, 16), float32],) {
    %293 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
    %294 = %293.0;
    (%294,)
  };
  %295() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_12292() -> (Tensor[(4, 16), float32], float32, Tensor[(720), float32], Tensor[(4, ?, 16), float32], Tensor[(480), float32]) {
  %296 = @func_2162() /* ty=(Tensor[(4, 16), float32],) */;
  %297 = cast(meta[relay.Constant][12] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %298 = reshape(%297, newshape=[12, 60]) /* ty=Tensor[(12, 60), float32] */;
  %299 = @func_4100(%298) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], float32, Tensor[(12, 60), float32]) */;
  %300 = @func_8957() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(480), float32]) */;
  %301 = %296.0;
  %302 = %299.2;
  %303 = @func_4823() /* ty=Tensor[(4, ?, 16), float32] */;
  %304 = %300.2;
  (%301, %302, meta[relay.Constant][12] /* ty=Tensor[(720), float32] */, %303, %304)
}

def @func_13563() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %305 = @func_10422() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %306 = @func_5750() /* ty=Tensor[(4, 16), float32] */;
  %307 = @func_8344() /* ty=Tensor[(4, 16), float32] */;
  %308 = %305.0;
  (%306, %307, %308)
}

def @func_6941() -> (Tensor[(4, 16), float32],) {
  @func_6939() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_2434() -> (Tensor[(4, ?, 16), float32],) {
  %309 = @func_1297() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %310 = %309.1;
  (%310,)
}

def @func_17782() -> (Tensor[(4, 16), float32],) {
  %311 = @func_8902() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %312 = %311.4;
  (%312,)
}

def @func_5694(%var_5693: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) {
  %323 = fn (%var_5685: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) {
    %313 = @func_5479() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */;
    %314 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %315 = cast(%var_5685, dtype="float32") /* ty=Tensor[(720), float32] */;
    %316 = reshape(%315, newshape=[12, 60]) /* ty=Tensor[(12, 60), float32] */;
    %317 = @func_4100(%316) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], float32, Tensor[(12, 60), float32]) */;
    %318 = %313.3;
    %319 = @func_3809() /* ty=Tensor[(4, 16), float32] */;
    %320 = @func_4477() /* ty=Tensor[(4, 16), float32] */;
    %321 = %314.1;
    %322 = %317.0;
    (%318, %319, %320, %321, %322, %var_5685)
  };
  %323(%var_5693) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) */
}

def @func_7129() -> (Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) {
  %330 = fn () -> (Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) {
    %324 = @func_5479() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */;
    %325 = %324.4;
    %326 = cast(%325, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
    %327 = cast(%325, dtype="float64") /* ty=Tensor[(2, 15, 16), float64] */;
    %328 = sqrt(%326) /* ty=Tensor[(2, 15, 16), float32] */;
    %329 = sin(%327) /* ty=Tensor[(2, 15, 16), float64] */;
    (%328, %329)
  };
  %330() /* ty=(Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) */
}

def @func_14478(%var_14369: Tensor[(1274), float64], %var_14445: Tensor[(720), float32]) -> (Tensor[(4, ?, 16), float32], Tensor[(14, 7, 13), float64], Tensor[(1274), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, 16), float32]) {
  %331 = @func_8401() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %332 = cast(%var_14369, dtype="float64") /* ty=Tensor[(1274), float64] */;
  %333 = reshape(%332, newshape=[14, 7, 13]) /* ty=Tensor[(14, 7, 13), float64] */;
  %334 = @func_8707(%333) /* ty=(Tensor[(14, 7, 13), float64],) */;
  %335 = @func_4160() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %336 = @func_7245() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %337 = @func_8115() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %338 = cast(meta[relay.Constant][13] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %339 = reshape(%338, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %340 = @func_6337(%339) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) */;
  %341 = @func_10561() /* ty=(Tensor[(2, 15, 16), float32],) */;
  %342 = cast(%var_14445, dtype="float32") /* ty=Tensor[(720), float32] */;
  %343 = reshape(%342, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %344 = @func_10904(%343) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) */;
  %345 = @func_8115() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %346 = %331.0;
  %347 = %334.0;
  %348 = %335.1;
  %349 = %336.0;
  %350 = %337.0;
  %351 = %340.3;
  %352 = %341.0;
  %353 = @func_8238() /* ty=Tensor[(4, 16), float32] */;
  %354 = %344.0;
  %355 = %345.0;
  (%346, %347, %var_14369, %348, %349, %350, %351, meta[relay.Constant][13] /* ty=Tensor[(2340), float32] */, %352, %353, %354, %var_14445, %355)
}

def @func_5937(%var_5933: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), int8], Tensor[(4, 16), float32], Tensor[(720), float32]) {
  %356 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %357 = @func_1235() /* ty=(Tensor[(4, 16), float32],) */;
  %358 = @func_5479() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */;
  %359 = cast(%var_5933, dtype="float32") /* ty=Tensor[(720), float32] */;
  %360 = reshape(%359, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %361 = @func_5692(%360) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) */;
  %362 = @func_3186() /* ty=Tensor[(4, 16), float32] */;
  %363 = %356.0;
  %364 = %357.0;
  %365 = %358.0;
  %366 = %361.3;
  (%362, %363, %364, %365, %366, %var_5933)
}

def @func_14323() -> (Tensor[(4, 16), float32],) {
  @func_14321() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_4162() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_4160() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_15906() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %367 = @func_1235() /* ty=(Tensor[(4, 16), float32],) */;
  %368 = @func_5225() /* ty=Tensor[(4, 16), float32] */;
  %369 = %367.0;
  (%368, %369)
}

def @func_16559() -> Tensor[(4, 16), float32] {
  %370 = fn () -> Tensor[(4, 16), float32] {
    @func_14672() /* ty=Tensor[(4, 16), float32] */
  };
  %370() /* ty=Tensor[(4, 16), float32] */
}

def @func_15260() -> (Tensor[(4, 16), float32],) {
  %371 = @func_10212() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150), float32]) */;
  %372 = %371.1;
  (%372,)
}

def @func_17176() -> Tensor[(4, 16), float32] {
  @func_17174() /* ty=Tensor[(4, 16), float32] */
}

def @func_13457() -> (Tensor[(4, 16), float32],) {
  %375 = fn () -> (Tensor[(4, 16), float32],) {
    %373 = @func_8417() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %374 = %373.0;
    (%374,)
  };
  %375() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_4677() -> (Tensor[(4, 16), float32],) {
  %377 = fn () -> (Tensor[(4, 16), float32],) {
    %376 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
    (%376,)
  };
  %377() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_10242() -> (Tensor[(4, 16), float32],) {
  %380 = fn () -> (Tensor[(4, 16), float32],) {
    %378 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
    %379 = %378.0;
    (%379,)
  };
  %380() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_18208() -> Tensor[(2, 15, 16), float64] {
  @func_18206() /* ty=Tensor[(2, 15, 16), float64] */
}

def @func_3474() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
  %381 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %382 = @func_2606() /* ty=(Tensor[(4, 16), float32],) */;
  %383 = @func_2533() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %384 = %381.0;
  %385 = @func_2511() /* ty=Tensor[(4, 16), float32] */;
  %386 = %382.0;
  %387 = %383.0;
  (%384, %385, %386, %387)
}

def @func_4883() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_4881() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_9145() -> (Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(1, 2340), float32], Tensor[(4, 16), float32]) {
  %394 = fn () -> (Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(1, 2340), float32], Tensor[(4, 16), float32]) {
    %388 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 2340), float32] */, dtype="float32") /* ty=Tensor[(1, 2340), float32] */;
    %389 = reshape(%388, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
    %390 = @func_6902(%389) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) */;
    %391 = @func_5129() /* ty=Tensor[(4, ?, 16), float64] */;
    %392 = %390.2;
    %393 = @func_6448() /* ty=Tensor[(4, 16), float32] */;
    (%391, %392, meta[relay.Constant][14] /* ty=Tensor[(1, 2340), float32] */, %393)
  };
  %394() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(1, 2340), float32], Tensor[(4, 16), float32]) */
}

def @func_4777(%var_4775: Tensor[(1680), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) {
  @func_4774(%var_4775) /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) */
}

def @func_7493(%var_7458: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), int8], Tensor[(720), float32]) {
  %395 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %396 = cast(%var_7458, dtype="float32") /* ty=Tensor[(720), float32] */;
  %397 = reshape(%396, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %398 = @func_5937(%397) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), int8], Tensor[(4, 16), float32], Tensor[(720), float32]) */;
  %399 = @func_4241() /* ty=Tensor[(4, 16), float32] */;
  %400 = %395.0;
  %401 = %398.3;
  (%399, %400, %401, %var_7458)
}

def @func_2512() -> Tensor[(4, 16), float32] {
  %402 = fn () -> Tensor[(4, 16), float32] {
    @func_1577() /* ty=Tensor[(4, 16), float32] */
  };
  %402() /* ty=Tensor[(4, 16), float32] */
}

def @func_8221(%var_8219: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), float32], Tensor[(2340), float32], Tensor[(12, 60), float32], Tensor[(720), float32], Tensor[(4, 16), float32]) {
  @func_8218(%var_8219) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), float32], Tensor[(2340), float32], Tensor[(12, 60), float32], Tensor[(720), float32], Tensor[(4, 16), float32]) */
}

def @func_14868() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %403 = @func_2004() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %404 = @func_13714() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %405 = %403.0;
  %406 = %404.0;
  (%405, %406)
}

def @func_2436() -> (Tensor[(4, ?, 16), float32],) {
  @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */
}

def @func_9353(%var_9352: Tensor[(2, 12, 15), uint64]) -> (Tensor[(4, 16), float32], Tensor[(2, 12, 15), float64]) {
  %421 = fn (%var_9299: Tensor[(2, 12, 15), uint64]) -> (Tensor[(4, 16), float32], Tensor[(2, 12, 15), float64]) {
    %407 = @func_8902() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %408 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 12, 15), uint64] */, dtype="float64") /* ty=Tensor[(2, 12, 15), float64] */;
    %409 = sigmoid(%408) /* ty=Tensor[(2, 12, 15), float64] */;
    %410 = cast(%var_9299, dtype="uint64") /* ty=Tensor[(2, 12, 15), uint64] */;
    %411 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(2, 12, 15), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %412 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 12, 15), uint64] */, dtype="uint64") /* ty=Tensor[(2, 12, 15), uint64] */;
    %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %414 = right_shift(%412, %413) /* ty=Tensor[(2, 12, 15), uint64] */;
    %415 = cast(%414, dtype="float64") /* ty=Tensor[(2, 12, 15), float64] */;
    %416 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
    %417 = cast(%409, dtype="float64") /* ty=Tensor[(2, 12, 15), float64] */;
    %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %419 = %407.3;
    %420 = power(%417, %418) /* ty=Tensor[(2, 12, 15), float64] */;
    (%419, %420)
  };
  %421(%var_9352) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 12, 15), float64]) */
}

def @func_2095() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16]) {
  %427 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16]) {
    %422 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
    %423 = cast(%422, dtype="float32") /* ty=Tensor[(4, 16), float32] */;
    %424 = reshape(%423, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
    %425 = @func_392(%424) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
    %426 = %425.1;
    (%422, %426)
  };
  %427() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16]) */
}

def @func_5590() -> (Tensor[(4, 16), float32],) {
  @func_5588() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_14200() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(240, 2), float64], Tensor[(2340), float64], Tensor[(4, ?, 16), float64], Tensor[(2, 15, 16), bool]) {
  %428 = @func_4881() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %429 = @func_7245() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %430 = cast(meta[relay.Constant][16] /* ty=Tensor[(240, 2), float64] */, dtype="float64") /* ty=Tensor[(240, 2), float64] */;
  %431 = reshape(%430, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %432 = @func_4649(%431) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %433 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %434 = %433.3;
  %435 = cast(%434, dtype="float64") /* ty=Tensor[(4, ?, 16), float64] */;
  %436 = cast(meta[relay.Constant][16] /* ty=Tensor[(240, 2), float64] */, dtype="float64") /* ty=Tensor[(240, 2), float64] */;
  %437 = reshape(%436, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %438 = @func_4649(%437) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %439 = %428.3;
  %440 = %429.0;
  %441 = %432.3;
  %442 = @func_12344() /* ty=Tensor[(2340), float64] */;
  %443 = erf(%435) /* ty=Tensor[(4, ?, 16), float64] */;
  %444 = %438.4;
  (%439, %440, %441, meta[relay.Constant][16] /* ty=Tensor[(240, 2), float64] */, %442, %443, %444)
}

def @func_12590() -> (Tensor[(4, 16), float32],) {
  @func_12588() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_8595() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
  @func_8593() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */
}

def @func_8783() -> (Tensor[(4, 16), float32],) {
  @func_8781() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_11600() -> (Tensor[(4, ?, 4), bool], Tensor[(128), uint16], Tensor[(4, 120), bool]) {
  %457 = fn () -> (Tensor[(4, ?, 4), bool], Tensor[(128), uint16], Tensor[(4, 120), bool]) {
    %445 = cast(meta[relay.Constant][17] /* ty=Tensor[(128), uint16] */, dtype="uint16") /* ty=Tensor[(128), uint16] */;
    %446 = reshape(%445, newshape=[4, 2, 16]) /* ty=Tensor[(4, 2, 16), uint16] */;
    %447 = @func_2995(%446) /* ty=(Tensor[(4, ?, 4), bool], Tensor[(4, 2, 16), bool]) */;
    %448 = @func_9582() /* ty=(Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 120), float64]) */;
    %449 = %448.2;
    %450 = @func_11377() /* ty=Tensor[(2, 15, 16), float64] */;
    %451 = cast(%450, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
    %452 = shape_of(%449, dtype="int32") /* ty=Tensor[(2), int32] */;
    %453 = cast(%449, dtype="bool") /* ty=Tensor[(4, 120), bool] */;
    %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %455 = %447.0;
    %456 = less_equal(%453, %454) /* ty=Tensor[(4, 120), bool] */;
    (%455, meta[relay.Constant][17] /* ty=Tensor[(128), uint16] */, %456)
  };
  %457() /* ty=(Tensor[(4, ?, 4), bool], Tensor[(128), uint16], Tensor[(4, 120), bool]) */
}

def @func_2195() -> Tensor[(4, 16), float32] {
  %459 = fn () -> Tensor[(4, 16), float32] {
    %458 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
    %458.0
  };
  %459() /* ty=Tensor[(4, 16), float32] */
}

def @func_17614() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %460 = @func_16400() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %461 = @func_12486() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64]) */;
  %462 = %460.0;
  %463 = %461.0;
  (%462, %463)
}

def @func_4789() -> (Tensor[(4, 16), float32],) {
  %466 = fn () -> (Tensor[(4, 16), float32],) {
    %464 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
    %465 = %464.0;
    (%465,)
  };
  %466() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_7496(%var_7494: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), int8], Tensor[(720), float32]) {
  @func_7493(%var_7494) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), int8], Tensor[(720), float32]) */
}

def @func_9923() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2340), float32]) {
  %476 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2340), float32]) {
    %467 = @func_6701() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */;
    %468 = @func_2464() /* ty=(Tensor[(4, 16), float32],) */;
    %469 = @func_3406() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32]) */;
    %470 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
    %471 = %467.1;
    %472 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
    %473 = %468.0;
    %474 = %469.3;
    %475 = %470.0;
    (%471, %472, %473, %474, %475)
  };
  %476() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2340), float32]) */
}

def @func_2389(%var_2380: Tensor[(2, 15, 16), float32]) -> (Tensor[(2, 15, 16), float32],) {
  %477 = cast(%var_2380, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %478 = log10(%477) /* ty=Tensor[(2, 15, 16), float32] */;
  (%478,)
}

def @func_14870() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_14868() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_15728() -> Tensor[(4, 16), float32] {
  @func_15726() /* ty=Tensor[(4, 16), float32] */
}

def @func_16973() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %483 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %479 = @func_9955() /* ty=(Tensor[(4, 16), float32],) */;
    %480 = @func_4160() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %481 = %479.0;
    %482 = %480.1;
    (%481, %482)
  };
  %483() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_4477() -> Tensor[(4, 16), float32] {
  @func_1671() /* ty=Tensor[(4, 16), float32] */
}

def @func_1783(%var_1704: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), int16], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(4, 16), float32]) {
  %484 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %485 = cast(%var_1704, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %486 = reshape(%485, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float32] */;
  %487 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %488 = %484.1;
  %489 = cast(%488, dtype="float32") /* ty=Tensor[(4, 16), float32] */;
  %490 = reshape(%489, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %491 = @func_392(%490) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %492 = %491.1;
  %493 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
  %494 = cast(%493, dtype="int16") /* ty=Tensor[(4, 16), int16] */;
  %495 = shape_of(%492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%492, dtype="int16") /* ty=Tensor[(4, ?, 16), int16] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %498 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %499 = cast(%var_1704, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %500 = reshape(%499, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float32] */;
  %501 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %502 = @func_1405(%486) /* ty=Tensor[(13, 15, 12), float32] */;
  %503 = %487.0;
  %504 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
  %505 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
  %506 = minimum(%496, %497) /* ty=Tensor[(4, ?, 16), int16] */;
  %507 = %498.0;
  %508 = @func_1405(%500) /* ty=Tensor[(13, 15, 12), float32] */;
  %509 = %501.0;
  (%488, %502, %var_1704, %503, %504, %505, %506, %507, %508, %509)
}

def @func_11377() -> Tensor[(2, 15, 16), float64] {
  %510 = @func_7128() /* ty=(Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) */;
  %510.1
}

def @func_16063() -> Tensor[(4, 16), float32] {
  %512 = fn () -> Tensor[(4, 16), float32] {
    %511 = @func_10467() /* ty=(Tensor[(4, 16), float32],) */;
    %511.0
  };
  %512() /* ty=Tensor[(4, 16), float32] */
}

def @func_5764() -> (Tensor[(4, 16), float32],) {
  %515 = fn () -> (Tensor[(4, 16), float32],) {
    %513 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %514 = %513.5;
    (%514,)
  };
  %515() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_12344() -> Tensor[(2340), float64] {
  %516 = @func_6555() /* ty=(Tensor[(2340), float64], Tensor[(4, 16), float32]) */;
  %516.0
}

def @func_2525() -> (Tensor[(4, 16), float32],) {
  %519 = fn () -> (Tensor[(4, 16), float32],) {
    %517 = @func_2015() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %518 = %517.1;
    (%518,)
  };
  %519() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_17018() -> Tensor[(4, 16), float32] {
  @func_17016() /* ty=Tensor[(4, 16), float32] */
}

def @func_6526() -> (Tensor[(4, 16), float32],) {
  %520 = @func_4676() /* ty=(Tensor[(4, 16), float32],) */;
  %521 = %520.0;
  (%521,)
}

def @func_13611(%var_13608: Tensor[(15, 4, 12), float32]) -> Tensor[(15, 4, 12), float32] {
  %522 = cast(%var_13608, dtype="float32") /* ty=Tensor[(15, 4, 12), float32] */;
  sigmoid(%522) /* ty=Tensor[(15, 4, 12), float32] */
}

def @func_6441() -> Tensor[(4, 16), float32] {
  %523 = fn () -> Tensor[(4, 16), float32] {
    @func_2511() /* ty=Tensor[(4, 16), float32] */
  };
  %523() /* ty=Tensor[(4, 16), float32] */
}

def @func_1298() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
  %530 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
    %524 = @func_1100() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %525 = %524.2;
    %526 = cast(%525, dtype="float32") /* ty=Tensor[(4, 16), float32] */;
    %527 = reshape(%526, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
    %528 = @func_392(%527) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
    %529 = %528.0;
    (%525, %529)
  };
  %530() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */
}

def @func_10296() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %531 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
  %532 = @func_3561() /* ty=Tensor[(4, 16), float32] */;
  (%531, %532)
}

def @func_16726() -> Tensor[(4, 16), float32] {
  %534 = fn () -> Tensor[(4, 16), float32] {
    %533 = @func_10340() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(120), uint64]) */;
    %533.0
  };
  %534() /* ty=Tensor[(4, 16), float32] */
}

def @func_6939() -> (Tensor[(4, 16), float32],) {
  %535 = @func_2162() /* ty=(Tensor[(4, 16), float32],) */;
  %536 = %535.0;
  (%536,)
}

def @func_6785() -> (Tensor[(2340), float32],) {
  @func_6783() /* ty=(Tensor[(2340), float32],) */
}

def @func_9069() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %540 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %537 = @func_4788() /* ty=(Tensor[(4, 16), float32],) */;
    %538 = %537.0;
    %539 = @func_3186() /* ty=Tensor[(4, 16), float32] */;
    (%538, %539)
  };
  %540() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_10467() -> (Tensor[(4, 16), float32],) {
  %541 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
  %542 = %541.0;
  (%542,)
}

def @func_13565() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_13563() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_11802(%var_11800: Tensor[(128, 2), float64], %var_11801: Tensor[(2, 16, 8), float64]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(128, 2), float64], Tensor[(2, 16, 8), uint16], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_11798(%var_11800, %var_11801) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(128, 2), float64], Tensor[(2, 16, 8), uint16], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_17415() -> (Tensor[(5, 8, 1), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %548 = fn () -> (Tensor[(5, 8, 1), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %543 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 8, 1), float32] */, dtype="float32") /* ty=Tensor[(5, 8, 1), float32] */;
    %544 = @func_4676() /* ty=(Tensor[(4, 16), float32],) */;
    %545 = sqrt(%543) /* ty=Tensor[(5, 8, 1), float32] */;
    %546 = @func_16807() /* ty=Tensor[(4, 16), float32] */;
    %547 = %544.0;
    (%545, %546, %547)
  };
  %548() /* ty=(Tensor[(5, 8, 1), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_6729() -> (Tensor[(2340), float32], Tensor[(4, 16), float32]) {
  @func_6727() /* ty=(Tensor[(2340), float32], Tensor[(4, 16), float32]) */
}

def @func_7864(%var_7799: Tensor[(480), float64]) -> (Tensor[(2340), float32], Tensor[(720), float32], Tensor[(480), float64]) {
  %549 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
  %550 = cast(%var_7799, dtype="float64") /* ty=Tensor[(480), float64] */;
  %551 = reshape(%550, newshape=[2, 240]) /* ty=Tensor[(2, 240), float64] */;
  %552 = @func_6846(%551) /* ty=(Tensor[(7, 10, 8), float64], Tensor[(4, 16), float32], Tensor[(2, 240), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, ?, 16), uint16]) */;
  %553 = %549.0;
  %554 = %552.5;
  (%553, %554, %var_7799)
}

def @func_16004(%var_16001: Tensor[(4, 1, 2), uint8], %var_16002: Tensor[(4, 9, 2), uint8], %var_16003: Tensor[(360), uint64]) -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float64], Tensor[(4, 9, 2), bool], Tensor[(4, 9, 2), bool], Tensor[(4, 16), float32], Tensor[(360), uint64]) {
  %578 = fn (%var_15930: Tensor[(4, 1, 2), uint8], %var_15931: Tensor[(4, 9, 2), uint8], %var_15994: Tensor[(360), uint64]) -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float64], Tensor[(4, 9, 2), bool], Tensor[(4, 9, 2), bool], Tensor[(4, 16), float32], Tensor[(360), uint64]) {
    %555 = cast(%var_15931, dtype="float64") /* ty=Tensor[(4, 9, 2), float64] */;
    %556 = cos(%555) /* ty=Tensor[(4, 9, 2), float64] */;
    %557 = cast(%556, dtype="float32") /* ty=Tensor[(4, 9, 2), float32] */;
    %558 = rsqrt(%557) /* ty=Tensor[(4, 9, 2), float32] */;
    %559 = cast(%var_15931, dtype="bool") /* ty=Tensor[(4, 9, 2), bool] */;
    %560 = shape_of(%558, dtype="int32") /* ty=Tensor[(3), int32] */;
    %561 = cast(%558, dtype="bool") /* ty=Tensor[(4, 9, 2), bool] */;
    %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %563 = cast(%var_15930, dtype="uint8") /* ty=Tensor[(4, 1, 2), uint8] */;
    %564 = cast(%var_15931, dtype="uint8") /* ty=Tensor[(4, 9, 2), uint8] */;
    %565 = multiply(%563, %564) /* ty=Tensor[(4, 9, 2), uint8] */;
    %566 = cast(%565, dtype="bool") /* ty=Tensor[(4, 9, 2), bool] */;
    %567 = shape_of(%556, dtype="int32") /* ty=Tensor[(3), int32] */;
    %568 = cast(%556, dtype="bool") /* ty=Tensor[(4, 9, 2), bool] */;
    %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %570 = cast(%var_15994, dtype="uint64") /* ty=Tensor[(360), uint64] */;
    %571 = reshape(%570, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), uint64] */;
    %572 = @func_9351(%571) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 12, 15), float64]) */;
    %573 = @func_12723() /* ty=Tensor[(4, 16), float32] */;
    %574 = @func_11839() /* ty=Tensor[(2, 15, 16), float64] */;
    %575 = greater_equal(%561, %562) /* ty=Tensor[(4, 9, 2), bool] */;
    %576 = equal(%568, %569) /* ty=Tensor[(4, 9, 2), bool] */;
    %577 = %572.0;
    (%573, %574, %575, %576, %577, %var_15994)
  };
  %578(%var_16001, %var_16002, %var_16003) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float64], Tensor[(4, 9, 2), bool], Tensor[(4, 9, 2), bool], Tensor[(4, 16), float32], Tensor[(360), uint64]) */
}

def @func_10214() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150), float32]) {
  @func_10212() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150), float32]) */
}

def @func_13595() -> Tensor[(4, 16), float32] {
  @func_13593() /* ty=Tensor[(4, 16), float32] */
}

def @func_16402() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_16400() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_855() -> (Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) {
  %579 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 16), float32] */, dtype="float32") /* ty=Tensor[(4, 16), float32] */;
  %580 = reshape(%579, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %581 = @func_392(%580) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %582 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 1, 4), int64] */, dtype="float64") /* ty=Tensor[(4, 1, 4), float64] */;
  %583 = sin(%582) /* ty=Tensor[(4, 1, 4), float64] */;
  %584 = cast(3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %585 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 1, 4), int64] */, dtype="int64") /* ty=Tensor[(4, 1, 4), int64] */;
  %586 = subtract(%584, %585) /* ty=Tensor[(4, 1, 4), int64] */;
  %587 = cast(%586, dtype="bool") /* ty=Tensor[(4, 1, 4), bool] */;
  %588 = shape_of(%583, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%583, dtype="bool") /* ty=Tensor[(4, 1, 4), bool] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %591 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 16), float32] */, dtype="float32") /* ty=Tensor[(4, 16), float32] */;
  %592 = reshape(%591, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %593 = @func_392(%592) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %594 = %581.1;
  %595 = equal(%589, %590) /* ty=Tensor[(4, ?, 4), bool] */;
  %596 = %593.0;
  (%594, meta[relay.Constant][19] /* ty=Tensor[(4, 16), float32] */, %595, %596)
}

def @func_877() -> (Tensor[(4, 16), float32],) {
  %599 = fn () -> (Tensor[(4, 16), float32],) {
    %597 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
    %598 = %597.1;
    (%598,)
  };
  %599() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_5304() -> (Tensor[(4, 16), float32],) {
  @func_5302() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_10721(%var_10719: Tensor[(5, 2, 3), float32]) -> (Tensor[(5, 2, 3), uint32],) {
  @func_10718(%var_10719) /* ty=(Tensor[(5, 2, 3), uint32],) */
}

def @func_8116() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %603 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %600 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
    %601 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
    %602 = %600.0;
    (%601, %602)
  };
  %603() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_16033() -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float64]) {
  %604 = @func_12980() /* ty=Tensor[(4, 16), float32] */;
  %605 = @func_3988() /* ty=Tensor[(2, 15, 16), float64] */;
  (%604, %605)
}

def @func_1333() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %610 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %606 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %607 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %608 = %606.1;
    %609 = %607.0;
    (%608, %609)
  };
  %610() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_12178(%var_12149: Tensor[(120), uint64]) -> (Tensor[(4, 16), float32], Tensor[(60, 2), uint64], Tensor[(120), uint64], Tensor[(2, 15, 16), float32]) {
  %611 = cast(%var_12149, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %612 = reshape(%611, newshape=[60, 2]) /* ty=Tensor[(60, 2), uint64] */;
  %613 = @func_6036(%612) /* ty=(Tensor[(4, 16), float32], Tensor[(60, 2), uint64], Tensor[(6, 4, 5), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32]) */;
  %614 = @func_10540() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32]) */;
  %615 = @func_3809() /* ty=Tensor[(4, 16), float32] */;
  %616 = %613.1;
  %617 = %614.1;
  (%615, %616, %var_12149, %617)
}

def @func_3989() -> Tensor[(2, 15, 16), float64] {
  %621 = fn () -> Tensor[(2, 15, 16), float64] {
    %618 = @func_2754() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
    %619 = %618.3;
    %620 = cast(%619, dtype="float64") /* ty=Tensor[(2, 15, 16), float64] */;
    acosh(%620) /* ty=Tensor[(2, 15, 16), float64] */
  };
  %621() /* ty=Tensor[(2, 15, 16), float64] */
}

def @func_12931() -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) {
  @func_12929() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_16807() -> Tensor[(4, 16), float32] {
  %622 = @func_4676() /* ty=(Tensor[(4, 16), float32],) */;
  %622.0
}

def @func_2754() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) {
  %623 = @func_2004() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %624 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %625 = cast(meta[relay.Constant][21] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %626 = reshape(%625, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float32] */;
  %627 = @func_2389(%626) /* ty=(Tensor[(2, 15, 16), float32],) */;
  %628 = %623.1;
  %629 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
  %630 = %624.3;
  %631 = %627.0;
  (%628, %629, %630, %631, meta[relay.Constant][21] /* ty=Tensor[(480), float32] */)
}

def @func_3810() -> Tensor[(4, 16), float32] {
  %633 = fn () -> Tensor[(4, 16), float32] {
    %632 = @func_3406() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32]) */;
    %632.0
  };
  %633() /* ty=Tensor[(4, 16), float32] */
}

def @func_16035() -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float64]) {
  @func_16033() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float64]) */
}

def @func_6039(%var_6037: Tensor[(60, 2), uint64]) -> (Tensor[(4, 16), float32], Tensor[(60, 2), uint64], Tensor[(6, 4, 5), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32]) {
  @func_6036(%var_6037) /* ty=(Tensor[(4, 16), float32], Tensor[(60, 2), uint64], Tensor[(6, 4, 5), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_1455() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %634 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %635 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %636 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %637 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %638 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %639 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %640 = %634.0;
  %641 = %635.0;
  %642 = %636.0;
  %643 = %637.0;
  %644 = %638.1;
  %645 = %639.1;
  (%640, %641, %642, %643, %644, %645)
}

def @func_857() -> (Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) {
  @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */
}

def @func_2607() -> (Tensor[(4, 16), float32],) {
  %648 = fn () -> (Tensor[(4, 16), float32],) {
    %646 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %647 = %646.4;
    (%647,)
  };
  %648() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_2465() -> (Tensor[(4, 16), float32],) {
  %650 = fn () -> (Tensor[(4, 16), float32],) {
    %649 = @func_1216() /* ty=Tensor[(4, 16), float32] */;
    (%649,)
  };
  %650() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_18358() -> (Tensor[(256), float64], Tensor[(720), float32], Tensor[(4, 16), float32]) {
  @func_18356() /* ty=(Tensor[(256), float64], Tensor[(720), float32], Tensor[(4, 16), float32]) */
}

def @func_6235() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %651 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %652 = @func_1235() /* ty=(Tensor[(4, 16), float32],) */;
  %653 = %651.0;
  %654 = %652.0;
  (%653, %654)
}

def @func_14563(%var_14561: Tensor[(10, 11, 7), int16]) -> Tensor[(10, 11, 7), uint32] {
  @func_14560(%var_14561) /* ty=Tensor[(10, 11, 7), uint32] */
}

def @func_10562() -> (Tensor[(2, 15, 16), float32],) {
  %659 = fn () -> (Tensor[(2, 15, 16), float32],) {
    %655 = @func_7128() /* ty=(Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) */;
    %656 = %655.0;
    %657 = cast(%656, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
    %658 = atan(%657) /* ty=Tensor[(2, 15, 16), float32] */;
    (%658,)
  };
  %659() /* ty=(Tensor[(2, 15, 16), float32],) */
}

def @func_12364() -> (Tensor[(4, 16), float32],) {
  @func_12362() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_14260() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %663 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %660 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
    %661 = %660.0;
    %662 = @func_14124() /* ty=Tensor[(4, 16), float32] */;
    (%661, %662)
  };
  %663() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_7440() -> (Tensor[(6, 16, 10), float32], Tensor[(2340), float32]) {
  @func_7438() /* ty=(Tensor[(6, 16, 10), float32], Tensor[(2340), float32]) */
}

def @func_6783() -> (Tensor[(2340), float32],) {
  %664 = @func_6727() /* ty=(Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
  %665 = %664.0;
  (%665,)
}

def @func_8239() -> Tensor[(4, 16), float32] {
  %666 = fn () -> Tensor[(4, 16), float32] {
    @func_6661() /* ty=Tensor[(4, 16), float32] */
  };
  %666() /* ty=Tensor[(4, 16), float32] */
}

def @func_12929() -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) {
  %667 = @func_8115() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %668 = @func_7128() /* ty=(Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) */;
  %669 = %668.0;
  %670 = cast(%669, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %671 = reshape(%670, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float32] */;
  %672 = @func_2389(%671) /* ty=(Tensor[(2, 15, 16), float32],) */;
  %673 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
  %674 = %667.0;
  %675 = %672.0;
  %676 = %673.0;
  (%674, %669, %675, %676)
}

def @func_3187() -> Tensor[(4, 16), float32] {
  %677 = fn () -> Tensor[(4, 16), float32] {
    @func_2511() /* ty=Tensor[(4, 16), float32] */
  };
  %677() /* ty=Tensor[(4, 16), float32] */
}

def @func_15676() -> (Tensor[(4, 16), float32],) {
  %678 = @func_9144() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(1, 2340), float32], Tensor[(4, 16), float32]) */;
  %679 = %678.3;
  (%679,)
}

def @func_4160() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %680 = @func_2606() /* ty=(Tensor[(4, 16), float32],) */;
  %681 = @func_3555() /* ty=Tensor[(4, 16), float32] */;
  %682 = %680.0;
  (%681, %682)
}

def @func_17480(%var_17479: Tensor[(2340), float32]) -> (Tensor[(2340), uint64], Tensor[(2340), float32]) {
  %692 = fn (%var_17462: Tensor[(2340), float32]) -> (Tensor[(2340), uint64], Tensor[(2340), float32]) {
    %683 = @func_7438() /* ty=(Tensor[(6, 16, 10), float32], Tensor[(2340), float32]) */;
    %684 = %683.1;
    %685 = cast(%var_17462, dtype="uint64") /* ty=Tensor[(2340), uint64] */;
    %686 = shape_of(%684, dtype="int32") /* ty=Tensor[(1), int32] */;
    %687 = cast(%684, dtype="uint64") /* ty=Tensor[(2340), uint64] */;
    %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %689 = cast(%684, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %690 = bitwise_or(%687, %688) /* ty=Tensor[(2340), uint64] */;
    %691 = atan(%689) /* ty=Tensor[(2340), float32] */;
    (%690, %691)
  };
  %692(%var_17479) /* ty=(Tensor[(2340), uint64], Tensor[(2340), float32]) */
}

def @func_17496() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %697 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %693 = @func_15260() /* ty=(Tensor[(4, 16), float32],) */;
    %694 = @func_2004() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %695 = %693.0;
    %696 = %694.1;
    (%695, %696)
  };
  %697() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_17741() -> (Tensor[(4, 16), float32],) {
  %700 = fn () -> (Tensor[(4, 16), float32],) {
    %698 = @func_9922() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2340), float32]) */;
    %699 = %698.2;
    (%699,)
  };
  %700() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_18313(%var_18310: Tensor[(2340), float32], %var_18311: Tensor[(360), float64], %var_18312: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(360), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) {
  %718 = fn (%var_18267: Tensor[(2340), float32], %var_18272: Tensor[(360), float64], %var_18304: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(360), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) {
    %701 = @func_15354() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %702 = @func_11905() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32]) */;
    %703 = cast(%var_18267, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %704 = reshape(%703, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
    %705 = @func_17054(%704) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16], Tensor[(2340), float32]) */;
    %706 = cast(%var_18272, dtype="float64") /* ty=Tensor[(360), float64] */;
    %707 = reshape(%706, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), float64] */;
    %708 = @func_16594(%707) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(360), uint64], Tensor[(2, 12, 15), bool], Tensor[(4, 16), float32]) */;
    %709 = cast(%var_18304, dtype="float32") /* ty=Tensor[(720), float32] */;
    %710 = reshape(%709, newshape=[720]) /* ty=Tensor[(720), float32] */;
    %711 = @func_5692(%710) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) */;
    %712 = %701.1;
    %713 = %702.0;
    %714 = %705.2;
    %715 = %708.1;
    %716 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
    %717 = %711.1;
    (%712, %713, %714, %var_18267, %715, %var_18272, %716, %717, %var_18304)
  };
  %718(%var_18310, %var_18311, %var_18312) /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(360), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32]) */
}

def @func_14321() -> (Tensor[(4, 16), float32],) {
  %719 = @func_9955() /* ty=(Tensor[(4, 16), float32],) */;
  %720 = %719.0;
  (%720,)
}

def @func_19578(%var_19577: Tensor[(770), float32]) -> (Tensor[(4, ?, 4), bool], Tensor[(10, 11, 7), float32], Tensor[(770), float32]) {
  %727 = fn (%var_19568: Tensor[(770), float32]) -> (Tensor[(4, ?, 4), bool], Tensor[(10, 11, 7), float32], Tensor[(770), float32]) {
    %721 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
    %722 = cast(%var_19568, dtype="float32") /* ty=Tensor[(770), float32] */;
    %723 = reshape(%722, newshape=[10, 11, 7]) /* ty=Tensor[(10, 11, 7), float32] */;
    %724 = @func_3676(%723) /* ty=(Tensor[(10, 11, 7), float32], Tensor[(4, 16), float32]) */;
    %725 = %721.2;
    %726 = %724.0;
    (%725, %726, %var_19568)
  };
  %727(%var_19577) /* ty=(Tensor[(4, ?, 4), bool], Tensor[(10, 11, 7), float32], Tensor[(770), float32]) */
}

def @func_7624(%var_7599: float32, %var_7600: Tensor[(1, 14), float32]) -> Tensor[(1, 14), float32] {
  %728 = cast(%var_7599, dtype="float32") /* ty=float32 */;
  %729 = cast(%var_7600, dtype="float32") /* ty=Tensor[(1, 14), float32] */;
  power(%728, %729) /* ty=Tensor[(1, 14), float32] */
}

def @func_16809() -> Tensor[(4, 16), float32] {
  @func_16807() /* ty=Tensor[(4, 16), float32] */
}

def @func_18815(%var_18813: Tensor[(468), float32], %var_18814: Tensor[(40, 12), float64]) -> (Tensor[(4, 16), float32], Tensor[(13, 12, 3), float32], Tensor[(468), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(40, 12), float64], Tensor[(2340), float32], Tensor[(13, 13, 9), uint32], Tensor[(1, 1521), uint32], Tensor[(4, 16), float32]) {
  %750 = fn (%var_18738: Tensor[(468), float32], %var_18793: Tensor[(40, 12), float64]) -> (Tensor[(4, 16), float32], Tensor[(13, 12, 3), float32], Tensor[(468), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(40, 12), float64], Tensor[(2340), float32], Tensor[(13, 13, 9), uint32], Tensor[(1, 1521), uint32], Tensor[(4, 16), float32]) {
    %730 = @func_16856() /* ty=(Tensor[(4, 16), float32],) */;
    %731 = cast(%var_18738, dtype="float32") /* ty=Tensor[(468), float32] */;
    %732 = reshape(%731, newshape=[13, 12, 3]) /* ty=Tensor[(13, 12, 3), float32] */;
    %733 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
    %734 = @func_7017() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) */;
    %735 = cast(%var_18793, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
    %736 = cast(meta[relay.Constant][22] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %737 = reshape(%735, newshape=[480]) /* ty=Tensor[(480), float64] */;
    %738 = reshape(%736, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
    %739 = @func_7773(%737, %738) /* ty=(Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %740 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 1521), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1521), uint32] */;
    %741 = reshape(%740, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), uint32] */;
    %742 = @func_15087(%741) /* ty=(Tensor[(13, 13, 9), uint32],) */;
    %743 = %730.0;
    %744 = @func_14506(%732) /* ty=Tensor[(13, 12, 3), float32] */;
    %745 = %733.0;
    %746 = %734.0;
    %747 = %739.3;
    %748 = %742.0;
    %749 = @func_15125() /* ty=Tensor[(4, 16), float32] */;
    (%743, %744, %var_18738, %745, %746, %747, %var_18793, meta[relay.Constant][22] /* ty=Tensor[(2340), float32] */, %748, meta[relay.Constant][23] /* ty=Tensor[(1, 1521), uint32] */, %749)
  };
  %750(%var_18813, %var_18814) /* ty=(Tensor[(4, 16), float32], Tensor[(13, 12, 3), float32], Tensor[(468), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(40, 12), float64], Tensor[(2340), float32], Tensor[(13, 13, 9), uint32], Tensor[(1, 1521), uint32], Tensor[(4, 16), float32]) */
}

def @func_6849(%var_6847: Tensor[(2, 240), float64]) -> (Tensor[(7, 10, 8), float64], Tensor[(4, 16), float32], Tensor[(2, 240), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, ?, 16), uint16]) {
  @func_6846(%var_6847) /* ty=(Tensor[(7, 10, 8), float64], Tensor[(4, 16), float32], Tensor[(2, 240), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, ?, 16), uint16]) */
}

def @func_16160(%var_16074: Tensor[(4, 15, 16), float32], %var_16090: Tensor[(4, 15, 16), bool]) -> (Tensor[(4, 15, 16), int32], Tensor[(4, 16), float32], Tensor[(4, 15, 16), float64], Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %751 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %752 = %751.0;
  %753 = cast(%752, dtype="bool") /* ty=Tensor[(4, ?, 16), bool] */;
  %754 = cast(%var_16074, dtype="bool") /* ty=Tensor[(4, 15, 16), bool] */;
  %755 = greater(%753, %754) /* ty=Tensor[(4, 15, 16), bool] */;
  %756 = cast(%var_16090, dtype="int32") /* ty=Tensor[(4, 15, 16), int32] */;
  %757 = shape_of(%755, dtype="int32") /* ty=Tensor[(3), int32] */;
  %758 = cast(%755, dtype="int32") /* ty=Tensor[(4, 15, 16), int32] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %760 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %761 = cast(%var_16074, dtype="float64") /* ty=Tensor[(4, 15, 16), float64] */;
  %762 = @func_11993() /* ty=(Tensor[(4, 16), float32],) */;
  %763 = @func_3406() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32]) */;
  %764 = multiply(%758, %759) /* ty=Tensor[(4, 15, 16), int32] */;
  %765 = %760.3;
  %766 = rsqrt(%761) /* ty=Tensor[(4, 15, 16), float64] */;
  %767 = @func_11377() /* ty=Tensor[(2, 15, 16), float64] */;
  %768 = %762.0;
  %769 = %763.0;
  (%764, %765, %766, %767, %768, %769)
}

def @func_15469() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %770 = @func_10296() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %771 = %770.1;
  %772 = @func_3561() /* ty=Tensor[(4, 16), float32] */;
  (%771, %772)
}

def @func_16515() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(4, 16), float32], Tensor[(150), float32], Tensor[(4, 16), float32], Tensor[(360), uint64]) {
  %773 = @func_3406() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32]) */;
  %774 = cast(meta[relay.Constant][24] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %775 = reshape(%774, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %776 = @func_4649(%775) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %777 = cast(meta[relay.Constant][25] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
  %778 = reshape(%777, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
  %779 = @func_8063(%778) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150, 1), float32]) */;
  %780 = cast(meta[relay.Constant][26] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %781 = reshape(%780, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), uint64] */;
  %782 = @func_9351(%781) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 12, 15), float64]) */;
  %783 = %773.0;
  %784 = %776.1;
  %785 = %779.1;
  %786 = %782.0;
  (%783, %784, meta[relay.Constant][24] /* ty=Tensor[(480), float64] */, %785, meta[relay.Constant][25] /* ty=Tensor[(150), float32] */, %786, meta[relay.Constant][26] /* ty=Tensor[(360), uint64] */)
}

def @func_3476() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
  @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */
}

def @func_5750() -> Tensor[(4, 16), float32] {
  %787 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %787.1
}

def @func_5790() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %790 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %788 = @func_5101() /* ty=Tensor[(4, 16), float32] */;
    %789 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
    (%788, %789)
  };
  %790() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_6556() -> (Tensor[(2340), float64], Tensor[(4, 16), float32]) {
  %796 = fn () -> (Tensor[(2340), float64], Tensor[(4, 16), float32]) {
    %791 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
    %792 = %791.0;
    %793 = cast(%792, dtype="float64") /* ty=Tensor[(2340), float64] */;
    %794 = tan(%793) /* ty=Tensor[(2340), float64] */;
    %795 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
    (%794, %795)
  };
  %796() /* ty=(Tensor[(2340), float64], Tensor[(4, 16), float32]) */
}

def @func_12845() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), bool]) {
  %812 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), bool]) {
    %797 = @func_9582() /* ty=(Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 120), float64]) */;
    %798 = %797.1;
    %799 = cast(%798, dtype="float32") /* ty=Tensor[(9, 260), float32] */;
    %800 = reshape(%799, newshape=[1, 2340]) /* ty=Tensor[(1, 2340), float32] */;
    %801 = @func_12701(%800) /* ty=(Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */;
    %802 = @func_9955() /* ty=(Tensor[(4, 16), float32],) */;
    %803 = cast(%798, dtype="float32") /* ty=Tensor[(9, 260), float32] */;
    %804 = atanh(%803) /* ty=Tensor[(9, 260), float32] */;
    %805 = cast(%798, dtype="bool") /* ty=Tensor[(9, 260), bool] */;
    %806 = shape_of(%804, dtype="int32") /* ty=Tensor[(2), int32] */;
    %807 = cast(%804, dtype="bool") /* ty=Tensor[(9, 260), bool] */;
    %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %809 = %801.1;
    %810 = %802.0;
    %811 = equal(%807, %808) /* ty=Tensor[(9, 260), bool] */;
    (%809, %810, %811)
  };
  %812() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), bool]) */
}

def @func_9227() -> Tensor[(4, 16), float32] {
  %814 = fn () -> Tensor[(4, 16), float32] {
    %813 = @func_2114() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %813.0
  };
  %814() /* ty=Tensor[(4, 16), float32] */
}

def @func_6137() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(6, 4, 5), uint64], Tensor[(4, 16), float32]) {
  %824 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(6, 4, 5), uint64], Tensor[(4, 16), float32]) {
    %815 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %816 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
    %817 = @func_5880() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
    %818 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %819 = @func_3186() /* ty=Tensor[(4, 16), float32] */;
    %820 = %815.0;
    %821 = %816.0;
    %822 = %817.3;
    %823 = %818.0;
    (%819, %820, %821, %822, %823)
  };
  %824() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(6, 4, 5), uint64], Tensor[(4, 16), float32]) */
}

def @func_10540() -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32]) {
  %825 = @func_10422() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %826 = @func_7128() /* ty=(Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) */;
  %827 = %825.1;
  %828 = %826.0;
  (%827, %828)
}

def @func_14914() -> (Tensor[(2, 15, 16), float64],) {
  @func_14912() /* ty=(Tensor[(2, 15, 16), float64],) */
}

def @func_17948(%var_17911: Tensor[(8, 3, 13), bool]) -> (Tensor[(8, 3, 13), bool], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool]) {
  %829 = cast(%var_17911, dtype="bool") /* ty=Tensor[(8, 3, 13), bool] */;
  %830 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(8, 3, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 3, 13), bool] */, dtype="bool") /* ty=Tensor[(8, 3, 13), bool] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %833 = @func_17812() /* ty=(Tensor[(4, 16), float32],) */;
  %834 = @func_10166() /* ty=(Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %835 = logical_or(%831, %832) /* ty=Tensor[(8, 3, 13), bool] */;
  %836 = %833.0;
  %837 = %834.0;
  (%835, %836, %837)
}

def @func_19558() -> (Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(720), float32]) {
  @func_19556() /* ty=(Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(720), float32]) */
}

def @func_4367(%var_4365: Tensor[(7, 6, 15), float32], %var_4366: Tensor[(1, 2340), float32]) -> (Tensor[(7, 6, 15), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32], Tensor[(2, 15, 16), float64]) {
  %847 = fn (%var_4332: Tensor[(7, 6, 15), float32], %var_4344: Tensor[(1, 2340), float32]) -> (Tensor[(7, 6, 15), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32], Tensor[(2, 15, 16), float64]) {
    %838 = cast(%var_4332, dtype="float32") /* ty=Tensor[(7, 6, 15), float32] */;
    %839 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
    %840 = cast(%var_4344, dtype="float32") /* ty=Tensor[(1, 2340), float32] */;
    %841 = reshape(%840, newshape=[9, 260]) /* ty=Tensor[(9, 260), float32] */;
    %842 = @func_2260(%841) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 16), float32]) */;
    %843 = rsqrt(%838) /* ty=Tensor[(7, 6, 15), float32] */;
    %844 = %839.0;
    %845 = %842.3;
    %846 = @func_3988() /* ty=Tensor[(2, 15, 16), float64] */;
    (%843, %844, %845, %var_4344, %846)
  };
  %847(%var_4365, %var_4366) /* ty=(Tensor[(7, 6, 15), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32], Tensor[(2, 15, 16), float64]) */
}

def @func_7378() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %858 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %848 = @func_4788() /* ty=(Tensor[(4, 16), float32],) */;
    %849 = @func_7270() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %850 = @func_2464() /* ty=(Tensor[(4, 16), float32],) */;
    %851 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
    %852 = @func_2524() /* ty=(Tensor[(4, 16), float32],) */;
    %853 = %848.0;
    %854 = %849.1;
    %855 = %850.0;
    %856 = %851.0;
    %857 = %852.0;
    (%853, %854, %855, %856, %857)
  };
  %858() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_15323(%var_15312: Tensor[(120, 4), float64], %var_15316: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(120, 4), float64], Tensor[(4, 16), float32], Tensor[(2340), float32]) {
  %859 = @func_14259() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %860 = cast(%var_15312, dtype="float64") /* ty=Tensor[(120, 4), float64] */;
  %861 = reshape(%860, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %862 = @func_4649(%861) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %863 = cast(%var_15316, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %864 = reshape(%863, newshape=[1, 2340]) /* ty=Tensor[(1, 2340), float32] */;
  %865 = @func_12701(%864) /* ty=(Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */;
  %866 = %859.1;
  %867 = %862.1;
  %868 = %865.3;
  (%866, %867, %var_15312, %868, %var_15316)
}

def @func_18869() -> Tensor[(4, 16), float32] {
  %869 = @func_17495() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %869.1
}

def @func_9394() -> (Tensor[(4, 16), float32],) {
  %870 = @func_6727() /* ty=(Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
  %871 = %870.1;
  (%871,)
}

def @func_12346() -> Tensor[(2340), float64] {
  @func_12344() /* ty=Tensor[(2340), float64] */
}

def @func_9089() -> (Tensor[(4, 16), float32],) {
  %872 = @func_5588() /* ty=(Tensor[(4, 16), float32],) */;
  %873 = %872.0;
  (%873,)
}

def @func_3855(%var_3854: Tensor[(2340), float32]) -> (Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %884 = fn (%var_3819: Tensor[(2340), float32]) -> (Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %874 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
    %875 = cast(%var_3819, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %876 = reshape(%875, newshape=[9, 260]) /* ty=Tensor[(9, 260), float32] */;
    %877 = @func_2260(%876) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 16), float32]) */;
    %878 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
    %879 = %874.0;
    %880 = %877.2;
    %881 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
    %882 = @func_3555() /* ty=Tensor[(4, 16), float32] */;
    %883 = %878.0;
    (%879, %880, %var_3819, %881, %882, %883)
  };
  %884(%var_3854) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_12588() -> (Tensor[(4, 16), float32],) {
  %885 = @func_2606() /* ty=(Tensor[(4, 16), float32],) */;
  %886 = %885.0;
  (%886,)
}

def @func_1672() -> Tensor[(4, 16), float32] {
  %888 = fn () -> Tensor[(4, 16), float32] {
    %887 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %887.1
  };
  %888() /* ty=Tensor[(4, 16), float32] */
}

def @func_9183() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_9181() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_11197() -> (Tensor[(4, ?, 16), float64],) {
  %889 = @func_5129() /* ty=Tensor[(4, ?, 16), float64] */;
  (%889,)
}

def @func_16517() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(4, 16), float32], Tensor[(150), float32], Tensor[(4, 16), float32], Tensor[(360), uint64]) {
  @func_16515() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(4, 16), float32], Tensor[(150), float32], Tensor[(4, 16), float32], Tensor[(360), uint64]) */
}

def @func_17160() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_17158() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_9128(%var_9125: int16, %var_9126: Tensor[(15, 1, 10), int16], %var_9127: Tensor[(37440), float32]) -> (Tensor[(15, 1, 10), int16], Tensor[(16, 2340), uint64], Tensor[(37440), float32]) {
  %897 = fn (%var_9104: int16, %var_9105: Tensor[(15, 1, 10), int16], %var_9110: Tensor[(37440), float32]) -> (Tensor[(15, 1, 10), int16], Tensor[(16, 2340), uint64], Tensor[(37440), float32]) {
    %890 = cast(%var_9104, dtype="int16") /* ty=int16 */;
    %891 = cast(%var_9105, dtype="int16") /* ty=Tensor[(15, 1, 10), int16] */;
    %892 = cast(%var_9110, dtype="float32") /* ty=Tensor[(37440), float32] */;
    %893 = reshape(%892, newshape=[16, 2340]) /* ty=Tensor[(16, 2340), float32] */;
    %894 = @func_8985(%893) /* ty=(Tensor[(16, 2340), uint64],) */;
    %895 = bitwise_xor(%890, %891) /* ty=Tensor[(15, 1, 10), int16] */;
    %896 = %894.0;
    (%895, %896, %var_9110)
  };
  %897(%var_9125, %var_9126, %var_9127) /* ty=(Tensor[(15, 1, 10), int16], Tensor[(16, 2340), uint64], Tensor[(37440), float32]) */
}

def @func_18651() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 13, 9), uint32], Tensor[(1521), uint32]) {
  %898 = cast(meta[relay.Constant][28] /* ty=Tensor[(1521), uint32] */, dtype="uint32") /* ty=Tensor[(1521), uint32] */;
  %899 = reshape(%898, newshape=[13, 13, 9]) /* ty=Tensor[(13, 13, 9), uint32] */;
  %900 = @func_15087(%899) /* ty=(Tensor[(13, 13, 9), uint32],) */;
  %901 = @func_14672() /* ty=Tensor[(4, 16), float32] */;
  %902 = @func_16062() /* ty=Tensor[(4, 16), float32] */;
  %903 = %900.0;
  (%901, %902, %903, meta[relay.Constant][28] /* ty=Tensor[(1521), uint32] */)
}

def @func_16164(%var_16162: Tensor[(4, 15, 16), float32], %var_16163: Tensor[(4, 15, 16), bool]) -> (Tensor[(4, 15, 16), int32], Tensor[(4, 16), float32], Tensor[(4, 15, 16), float64], Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_16160(%var_16162, %var_16163) /* ty=(Tensor[(4, 15, 16), int32], Tensor[(4, 16), float32], Tensor[(4, 15, 16), float64], Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_10266(%var_10264: Tensor[(2, 12, 4), float64]) -> (Tensor[(2, 12, 4), float64],) {
  @func_10263(%var_10264) /* ty=(Tensor[(2, 12, 4), float64],) */
}

def @func_8902() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %904 = @func_6235() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %905 = @func_4295() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %906 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %907 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %908 = %904.0;
  %909 = %905.0;
  %910 = @func_3809() /* ty=Tensor[(4, 16), float32] */;
  %911 = %906.0;
  %912 = %907.0;
  (%908, %909, %910, %911, %912)
}

def @func_10025() -> Tensor[(4, 16), float32] {
  %914 = fn () -> Tensor[(4, 16), float32] {
    %913 = @func_9668() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %913.1
  };
  %914() /* ty=Tensor[(4, 16), float32] */
}

def @func_19703() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %915 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
  %916 = @func_4241() /* ty=Tensor[(4, 16), float32] */;
  (%915, %916)
}

def @func_10340() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(120), uint64]) {
  %917 = @func_8957() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(480), float32]) */;
  %918 = cast(meta[relay.Constant][29] /* ty=Tensor[(120), uint64] */, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %919 = reshape(%918, newshape=[60, 2]) /* ty=Tensor[(60, 2), uint64] */;
  %920 = @func_6036(%919) /* ty=(Tensor[(4, 16), float32], Tensor[(60, 2), uint64], Tensor[(6, 4, 5), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32]) */;
  %921 = %917.1;
  %922 = %920.0;
  (%921, %922, meta[relay.Constant][29] /* ty=Tensor[(120), uint64] */)
}

def @func_6874(%var_6860: Tensor[(2, 16, 8), float64]) -> (Tensor[(2, 16, 8), float64],) {
  %923 = cast(%var_6860, dtype="float64") /* ty=Tensor[(2, 16, 8), float64] */;
  %924 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(2, 16, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %925 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 16, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 16, 8), float64] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %927 = divide(%925, %926) /* ty=Tensor[(2, 16, 8), float64] */;
  (%927,)
}

def @func_8447() -> Tensor[(4, 16), float32] {
  @func_3561() /* ty=Tensor[(4, 16), float32] */
}

def @func_3563() -> Tensor[(4, 16), float32] {
  @func_3561() /* ty=Tensor[(4, 16), float32] */
}

def @func_9504() -> (Tensor[(4, 16), float32],) {
  %930 = fn () -> (Tensor[(4, 16), float32],) {
    %928 = @func_9394() /* ty=(Tensor[(4, 16), float32],) */;
    %929 = %928.0;
    (%929,)
  };
  %930() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_13634() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_13632() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_14560(%var_14550: Tensor[(10, 11, 7), int16]) -> Tensor[(10, 11, 7), uint32] {
  %931 = @func_4971() /* ty=(Tensor[(4, 16), float32], Tensor[(10, 11, 7), int16]) */;
  %932 = %931.1;
  %933 = cast(%var_14550, dtype="uint32") /* ty=Tensor[(10, 11, 7), uint32] */;
  %934 = shape_of(%932, dtype="int32") /* ty=Tensor[(3), int32] */;
  %935 = cast(%932, dtype="uint32") /* ty=Tensor[(10, 11, 7), uint32] */;
  %936 = dyn.reshape(%933, %934, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%935, %936) /* ty=Tensor[(10, 11, 7), uint32] */
}

def @func_1172(%var_1170: Tensor[(12, 10, 14), float32], %var_1171: Tensor[(12, 10, 14), float32]) -> (Tensor[(12, 10, 14), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32]) {
  @func_1168(%var_1170, %var_1171) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32]) */
}

def @func_2114() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %937 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %938 = @func_2094() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %939 = %937.0;
  %940 = %938.0;
  (%939, %940)
}

def @func_8403() -> (Tensor[(4, ?, 16), float32],) {
  @func_8401() /* ty=(Tensor[(4, ?, 16), float32],) */
}

def @func_11906() -> (Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32]) {
  %944 = fn () -> (Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32]) {
    %941 = @func_7165() /* ty=(Tensor[(4, 16), float32], Tensor[(256), float64]) */;
    %942 = @func_5129() /* ty=Tensor[(4, ?, 16), float64] */;
    %943 = %941.0;
    (%942, %943)
  };
  %944() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32]) */
}

def @func_8957() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(480), float32]) {
  %945 = @func_7165() /* ty=(Tensor[(4, 16), float32], Tensor[(256), float64]) */;
  %946 = @func_1235() /* ty=(Tensor[(4, 16), float32],) */;
  %947 = @func_2754() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
  %948 = %945.0;
  %949 = %946.0;
  %950 = %947.4;
  (%948, %949, %950)
}

def @func_5302() -> (Tensor[(4, 16), float32],) {
  %951 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %952 = %951.0;
  (%952,)
}

def @func_10810(%var_10808: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, ?, 16), float64]) {
  @func_10807(%var_10808) /* ty=(Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, ?, 16), float64]) */
}

def @func_1217() -> Tensor[(4, 16), float32] {
  %954 = fn () -> Tensor[(4, 16), float32] {
    %953 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %953.0
  };
  %954() /* ty=Tensor[(4, 16), float32] */
}

def @func_2162() -> (Tensor[(4, 16), float32],) {
  %955 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %956 = %955.0;
  (%956,)
}

def @func_8904() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_8902() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_15089(%var_15088: Tensor[(13, 13, 9), uint32]) -> (Tensor[(13, 13, 9), uint32],) {
  %962 = fn (%var_15083: Tensor[(13, 13, 9), uint32]) -> (Tensor[(13, 13, 9), uint32],) {
    %957 = cast(%var_15083, dtype="uint32") /* ty=Tensor[(13, 13, 9), uint32] */;
    %958 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(13, 13, 9), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %959 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 13, 9), uint32] */, dtype="uint32") /* ty=Tensor[(13, 13, 9), uint32] */;
    %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %961 = right_shift(%959, %960) /* ty=Tensor[(13, 13, 9), uint32] */;
    (%961,)
  };
  %962(%var_15088) /* ty=(Tensor[(13, 13, 9), uint32],) */
}

def @func_17327() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %963 = cast(meta[relay.Constant][32] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %964 = reshape(%963, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %965 = @func_7493(%964) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), int8], Tensor[(720), float32]) */;
  %966 = @func_13359() /* ty=(Tensor[(4, 16), float32],) */;
  %967 = @func_14321() /* ty=(Tensor[(4, 16), float32],) */;
  %968 = @func_8026() /* ty=Tensor[(4, 16), float32] */;
  %969 = %965.0;
  %970 = %966.0;
  %971 = %967.0;
  (%968, %969, meta[relay.Constant][32] /* ty=Tensor[(720), float32] */, %970, %971)
}

def @func_6703() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) {
  @func_6701() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */
}

def @func_1457() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_8066(%var_8064: Tensor[(150, 1), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150, 1), float32]) {
  @func_8063(%var_8064) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150, 1), float32]) */
}

def @func_14509(%var_14507: Tensor[(13, 12, 3), float32]) -> Tensor[(13, 12, 3), float32] {
  @func_14506(%var_14507) /* ty=Tensor[(13, 12, 3), float32] */
}

def @func_6774() -> Tensor[(4, 16), float32] {
  @func_6772() /* ty=Tensor[(4, 16), float32] */
}

def @func_10423() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %978 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %972 = @func_5479() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */;
    %973 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %974 = @func_5588() /* ty=(Tensor[(4, 16), float32],) */;
    %975 = %972.3;
    %976 = %973.2;
    %977 = %974.0;
    (%975, %976, %977)
  };
  %978() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_8218(%var_8190: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), float32], Tensor[(2340), float32], Tensor[(12, 60), float32], Tensor[(720), float32], Tensor[(4, 16), float32]) {
  %979 = @func_6701() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */;
  %980 = @func_7017() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) */;
  %981 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
  %982 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 780), float32] */, dtype="float32") /* ty=Tensor[(3, 780), float32] */;
  %983 = reshape(%982, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %984 = @func_1783(%983) /* ty=(Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), int16], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(4, 16), float32]) */;
  %985 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 780), float32] */, dtype="float32") /* ty=Tensor[(3, 780), float32] */;
  %986 = reshape(%985, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %987 = @func_6902(%986) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) */;
  %988 = cast(%var_8190, dtype="float32") /* ty=Tensor[(720), float32] */;
  %989 = reshape(%988, newshape=[12, 60]) /* ty=Tensor[(12, 60), float32] */;
  %990 = @func_4100(%989) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], float32, Tensor[(12, 60), float32]) */;
  %991 = @func_7245() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %992 = %979.0;
  %993 = %980.1;
  %994 = %981.0;
  %995 = %984.0;
  %996 = %987.2;
  %997 = %990.3;
  %998 = %991.1;
  (%992, %993, %994, %995, meta[relay.Constant][33] /* ty=Tensor[(3, 780), float32] */, %996, %997, %var_8190, %998)
}

def @func_16311(%var_16309: float32) -> (Tensor[(4, 16), float32], Tensor[(1, 14), float32], float32, Tensor[(14), float32], Tensor[(4, ?, 16), bool]) {
  @func_16308(%var_16309) /* ty=(Tensor[(4, 16), float32], Tensor[(1, 14), float32], float32, Tensor[(14), float32], Tensor[(4, ?, 16), bool]) */
}

def @func_6337(%var_6306: Tensor[(2340), float32]) -> (Tensor[(4, ?, 16), float32], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) {
  %999 = @func_4295() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1000 = @func_5479() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */;
  %1001 = cast(%var_6306, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1002 = reshape(%1001, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
  %1003 = @func_2892(%1002) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) */;
  %1004 = %999.0;
  %1005 = %1000.2;
  %1006 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
  %1007 = %1003.3;
  (%1004, %1005, %1006, %1007, %var_6306)
}

def @func_19289() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1008 = @func_15011() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1009 = @func_11905() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32]) */;
  %1010 = @func_8026() /* ty=Tensor[(4, 16), float32] */;
  %1011 = %1008.0;
  %1012 = %1009.1;
  (%1010, %1011, %1012)
}

def @func_2116() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_2114() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_16212(%var_16211: Tensor[(168), int64]) -> (Tensor[(4, 16), float32], Tensor[(8, 3, 7), bool], Tensor[(168), int64], Tensor[(2, 16, 8), float64]) {
  %1020 = fn (%var_16171: Tensor[(168), int64]) -> (Tensor[(4, 16), float32], Tensor[(8, 3, 7), bool], Tensor[(168), int64], Tensor[(2, 16, 8), float64]) {
    %1013 = cast(%var_16171, dtype="int64") /* ty=Tensor[(168), int64] */;
    %1014 = reshape(%1013, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), int64] */;
    %1015 = @func_9052(%1014) /* ty=(Tensor[(8, 3, 7), bool],) */;
    %1016 = @func_7017() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) */;
    %1017 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
    %1018 = %1015.0;
    %1019 = %1016.3;
    (%1017, %1018, %var_16171, %1019)
  };
  %1020(%var_16211) /* ty=(Tensor[(4, 16), float32], Tensor[(8, 3, 7), bool], Tensor[(168), int64], Tensor[(2, 16, 8), float64]) */
}

def @func_19556() -> (Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(720), float32]) {
  %1021 = @func_18161() /* ty=(Tensor[(4, 16), float32], Tensor[(256), float64]) */;
  %1022 = cast(meta[relay.Constant][34] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1023 = reshape(%1022, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %1024 = @func_19194(%1023) /* ty=(Tensor[(240, 2), float64], Tensor[(2340), float32], Tensor[(720), float32]) */;
  %1025 = %1021.0;
  %1026 = %1024.2;
  (%1025, %1026, meta[relay.Constant][34] /* ty=Tensor[(720), float32] */)
}

def @func_15224() -> Tensor[(4, 16), float32] {
  @func_4241() /* ty=Tensor[(4, 16), float32] */
}

def @func_2892(%var_2826: Tensor[(3, 780), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) {
  %1027 = @func_2015() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1028 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1029 = @func_1297() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1030 = cast(%var_2826, dtype="float32") /* ty=Tensor[(3, 780), float32] */;
  %1031 = log(%1030) /* ty=Tensor[(3, 780), float32] */;
  %1032 = cast(%var_2826, dtype="float32") /* ty=Tensor[(3, 780), float32] */;
  %1033 = reshape(%1032, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float32] */;
  %1034 = @func_1405(%1033) /* ty=Tensor[(13, 15, 12), float32] */;
  %1035 = cast(%1034, dtype="bool") /* ty=Tensor[(13, 15, 12), bool] */;
  %1036 = shape_of(%1031, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1037 = cast(%1031, dtype="bool") /* ty=Tensor[(3, 780), bool] */;
  %1038 = dyn.reshape(%1035, %1036, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1039 = not_equal(%1037, %1038) /* ty=Tensor[(3, 780), bool] */;
  %1040 = cast(%1039, dtype="float64") /* ty=Tensor[(3, 780), float64] */;
  %1041 = asinh(%1040) /* ty=Tensor[(3, 780), float64] */;
  %1042 = cast(%1031, dtype="uint32") /* ty=Tensor[(3, 780), uint32] */;
  %1043 = shape_of(%1041, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1044 = cast(%1041, dtype="uint32") /* ty=Tensor[(3, 780), uint32] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1046 = cast(meta[relay.Constant][35] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %1047 = cast(meta[relay.Constant][35] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %1048 = reshape(%1046, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
  %1049 = reshape(%1047, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
  %1050 = @func_1168(%1048, %1049) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1051 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
  %1052 = %1027.2;
  %1053 = %1028.1;
  %1054 = %1029.0;
  %1055 = bitwise_or(%1044, %1045) /* ty=Tensor[(3, 780), uint32] */;
  %1056 = %1050.3;
  (%1051, %1052, %1053, %1054, %1055, %1056, meta[relay.Constant][35] /* ty=Tensor[(1680), float32] */)
}

def @func_4649(%var_4604: Tensor[(2, 15, 16), float64]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) {
  %1057 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1058 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %1059 = @func_2464() /* ty=(Tensor[(4, 16), float32],) */;
  %1060 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1061 = @func_3988() /* ty=Tensor[(2, 15, 16), float64] */;
  %1062 = cast(%var_4604, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
  %1063 = shape_of(%1061, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1064 = cast(%1061, dtype="bool") /* ty=Tensor[(2, 15, 16), bool] */;
  %1065 = dyn.reshape(%1062, %1063, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1066 = cast(%var_4604, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %1067 = reshape(%1066, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float32] */;
  %1068 = @func_2389(%1067) /* ty=(Tensor[(2, 15, 16), float32],) */;
  %1069 = cast(meta[relay.Constant][36] /* ty=Tensor[(9, 260), float32] */, dtype="float32") /* ty=Tensor[(9, 260), float32] */;
  %1070 = reshape(%1069, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %1071 = @func_2940(%1070) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
  %1072 = cast(%var_4604, dtype="float32") /* ty=Tensor[(2, 15, 16), float32] */;
  %1073 = %1057.1;
  %1074 = %1058.0;
  %1075 = %1059.0;
  %1076 = %1060.0;
  %1077 = logical_and(%1064, %1065) /* ty=Tensor[(2, 15, 16), bool] */;
  %1078 = %1068.0;
  %1079 = %1071.0;
  %1080 = log(%1072) /* ty=Tensor[(2, 15, 16), float32] */;
  %1081 = @func_4241() /* ty=Tensor[(4, 16), float32] */;
  (%1073, %1074, %1075, %1076, %1077, %1078, %1079, meta[relay.Constant][36] /* ty=Tensor[(9, 260), float32] */, %1080, %1081)
}

def @func_1102() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_1100() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_15841(%var_15820: Tensor[(3, 14, 12), float32]) -> (Tensor[(3, 14, 12), float32],) {
  %1082 = cast(%var_15820, dtype="float32") /* ty=Tensor[(3, 14, 12), float32] */;
  %1083 = atan(%1082) /* ty=Tensor[(3, 14, 12), float32] */;
  (%1083,)
}

def @func_4652(%var_4650: Tensor[(2, 15, 16), float64]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) {
  @func_4649(%var_4650) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_15844(%var_15842: Tensor[(3, 14, 12), float32]) -> (Tensor[(3, 14, 12), float32],) {
  @func_15841(%var_15842) /* ty=(Tensor[(3, 14, 12), float32],) */
}

def @func_15161(%var_15159: Tensor[(6, 16, 4), bool], %var_15160: Tensor[(6, 16, 4), bool]) -> (Tensor[(6, 16, 4), bool],) {
  %1089 = fn (%var_15147: Tensor[(6, 16, 4), bool], %var_15148: Tensor[(6, 16, 4), bool]) -> (Tensor[(6, 16, 4), bool],) {
    %1084 = cast(%var_15148, dtype="bool") /* ty=Tensor[(6, 16, 4), bool] */;
    %1085 = shape_of(%var_15147, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1086 = cast(%var_15147, dtype="bool") /* ty=Tensor[(6, 16, 4), bool] */;
    %1087 = dyn.reshape(%1084, %1085, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1088 = logical_and(%1086, %1087) /* ty=Tensor[(6, 16, 4), bool] */;
    (%1088,)
  };
  %1089(%var_15159, %var_15160) /* ty=(Tensor[(6, 16, 4), bool],) */
}

def @func_18400() -> Tensor[(256), float64] {
  @func_18398() /* ty=Tensor[(256), float64] */
}

def @func_3556() -> Tensor[(4, 16), float32] {
  %1091 = fn () -> Tensor[(4, 16), float32] {
    %1090 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
    %1090.1
  };
  %1091() /* ty=Tensor[(4, 16), float32] */
}

def @func_12082(%var_12068: Tensor[(2, 144), float32]) -> (Tensor[(4, 16), float32], Tensor[(3, 6, 16), float32], Tensor[(2, 144), float32]) {
  %1092 = cast(%var_12068, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
  %1093 = reshape(%1092, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
  %1094 = @func_9226() /* ty=Tensor[(4, 16), float32] */;
  %1095 = @func_7650(%1093) /* ty=Tensor[(3, 6, 16), float32] */;
  (%1094, %1095, %var_12068)
}

def @func_18977() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1099 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %1096 = @func_14868() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1097 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
    %1098 = %1096.1;
    (%1097, %1098)
  };
  %1099() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_11177() -> Tensor[(4, 16), float32] {
  %1100 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %1100.0
}

def @func_10943() -> Tensor[(4, 16), float32] {
  %1101 = @func_6701() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */;
  %1101.2
}

def @func_8417() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1102 = @func_8115() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1103 = @func_6448() /* ty=Tensor[(4, 16), float32] */;
  %1104 = %1102.1;
  (%1103, %1104)
}

def @func_15013() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_15011() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_13813(%var_13811: Tensor[(13, 7, 6), int32]) -> (Tensor[(13, 7, 6), bool],) {
  @func_13810(%var_13811) /* ty=(Tensor[(13, 7, 6), bool],) */
}

def @func_3923() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32]) {
  @func_3921() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32]) */
}

def @func_6603() -> (Tensor[(4, 16), float32],) {
  @func_6601() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_19194(%var_19186: Tensor[(720), float32]) -> (Tensor[(240, 2), float64], Tensor[(2340), float32], Tensor[(720), float32]) {
  %1105 = @func_14200() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(240, 2), float64], Tensor[(2340), float64], Tensor[(4, ?, 16), float64], Tensor[(2, 15, 16), bool]) */;
  %1106 = cast(%var_19186, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1107 = reshape(%1106, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %1108 = @func_8218(%1107) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), float32], Tensor[(2340), float32], Tensor[(12, 60), float32], Tensor[(720), float32], Tensor[(4, 16), float32]) */;
  %1109 = %1105.3;
  %1110 = %1108.5;
  (%1109, %1110, %var_19186)
}

def @func_2016() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1117 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %1111 = @func_1100() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1112 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1113 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
    %1114 = %1111.3;
    %1115 = %1112.2;
    %1116 = %1113.0;
    (%1114, %1115, %1116)
  };
  %1117() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_19177() -> (Tensor[(480), float32], Tensor[(4, 16), float32]) {
  %1122 = fn () -> (Tensor[(480), float32], Tensor[(4, 16), float32]) {
    %1118 = @func_17363() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
    %1119 = @func_12844() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), bool]) */;
    %1120 = %1118.2;
    %1121 = %1119.1;
    (%1120, %1121)
  };
  %1122() /* ty=(Tensor[(480), float32], Tensor[(4, 16), float32]) */
}

def @func_13158() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_13156() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_11993() -> (Tensor[(4, 16), float32],) {
  %1123 = @func_10467() /* ty=(Tensor[(4, 16), float32],) */;
  %1124 = %1123.0;
  (%1124,)
}

def @func_15908() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_15906() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_11133(%var_11132: Tensor[(120), uint64]) -> (Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64]) {
  %1131 = fn (%var_11092: Tensor[(120), uint64]) -> (Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64]) {
    %1125 = @func_5880() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
    %1126 = cast(%var_11092, dtype="uint64") /* ty=Tensor[(120), uint64] */;
    %1127 = reshape(%1126, newshape=[6, 4, 5]) /* ty=Tensor[(6, 4, 5), uint64] */;
    %1128 = @func_3142(%1127) /* ty=(Tensor[(6, 4, 5), uint64],) */;
    %1129 = %1125.1;
    %1130 = %1128.0;
    (%1129, %1130, %var_11092)
  };
  %1131(%var_11132) /* ty=(Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64]) */
}

def @func_18206() -> Tensor[(2, 15, 16), float64] {
  %1132 = @func_16033() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float64]) */;
  %1132.1
}

def @func_4774(%var_4762: Tensor[(1680), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) {
  %1133 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %1134 = cast(%var_4762, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %1135 = cast(%var_4762, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %1136 = reshape(%1134, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
  %1137 = reshape(%1135, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
  %1138 = @func_1168(%1136, %1137) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1139 = %1133.0;
  %1140 = %1138.1;
  (%1139, %1140, %var_4762)
}

def @func_16842() -> Tensor[(4, 16), float32] {
  @func_16840() /* ty=Tensor[(4, 16), float32] */
}

def @func_4296() -> (Tensor[(4, ?, 16), float32],) {
  %1143 = fn () -> (Tensor[(4, ?, 16), float32],) {
    %1141 = @func_2533() /* ty=(Tensor[(4, ?, 16), float32],) */;
    %1142 = %1141.0;
    (%1142,)
  };
  %1143() /* ty=(Tensor[(4, ?, 16), float32],) */
}

def @func_13752() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340, 1), float32], Tensor[(4, 16), float32]) {
  %1152 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340, 1), float32], Tensor[(4, 16), float32]) {
    %1144 = @func_13632() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1145 = cast(meta[relay.Constant][37] /* ty=Tensor[(2340, 1), float32] */, dtype="float32") /* ty=Tensor[(2340, 1), float32] */;
    %1146 = reshape(%1145, newshape=[1, 2340]) /* ty=Tensor[(1, 2340), float32] */;
    %1147 = @func_12701(%1146) /* ty=(Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */;
    %1148 = @func_3921() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
    %1149 = %1144.0;
    %1150 = %1147.3;
    %1151 = %1148.1;
    (%1149, %1150, meta[relay.Constant][37] /* ty=Tensor[(2340, 1), float32] */, %1151)
  };
  %1152() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340, 1), float32], Tensor[(4, 16), float32]) */
}

def @func_11798(%var_11765: Tensor[(128, 2), float64], %var_11778: Tensor[(2, 16, 8), float64]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(128, 2), float64], Tensor[(2, 16, 8), uint16], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1153 = @func_9394() /* ty=(Tensor[(4, 16), float32],) */;
  %1154 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %1155 = cast(%var_11765, dtype="float64") /* ty=Tensor[(128, 2), float64] */;
  %1156 = reshape(%1155, newshape=[2, 16, 8]) /* ty=Tensor[(2, 16, 8), float64] */;
  %1157 = @func_6874(%1156) /* ty=(Tensor[(2, 16, 8), float64],) */;
  %1158 = %1157.0;
  %1159 = cast(%var_11778, dtype="uint16") /* ty=Tensor[(2, 16, 8), uint16] */;
  %1160 = shape_of(%1158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1161 = cast(%1158, dtype="uint16") /* ty=Tensor[(2, 16, 8), uint16] */;
  %1162 = dyn.reshape(%1159, %1160, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1163 = @func_10241() /* ty=(Tensor[(4, 16), float32],) */;
  %1164 = %1153.0;
  %1165 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
  %1166 = %1154.0;
  %1167 = @func_10024() /* ty=Tensor[(4, 16), float32] */;
  %1168 = bitwise_or(%1161, %1162) /* ty=Tensor[(2, 16, 8), uint16] */;
  %1169 = %1163.0;
  %1170 = @func_10079() /* ty=Tensor[(4, 16), float32] */;
  (%1164, %1165, %1166, %1167, %var_11765, %1168, %1169, %1170)
}

def @func_6237() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_6235() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_6510() -> Tensor[(4, 16), float32] {
  %1172 = fn () -> Tensor[(4, 16), float32] {
    %1171 = @func_5789() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1171.1
  };
  %1172() /* ty=Tensor[(4, 16), float32] */
}

def @func_16699(%var_16698: Tensor[(2, 144), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 144), float32]) {
  %1181 = fn (%var_16671: Tensor[(2, 144), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 144), float32]) {
    %1173 = @func_10917() /* ty=(Tensor[(4, 16), float32],) */;
    %1174 = cast(%var_16671, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
    %1175 = cast(%var_16671, dtype="float32") /* ty=Tensor[(2, 144), float32] */;
    %1176 = reshape(%1174, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %1177 = reshape(%1175, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
    %1178 = @func_13431(%1176, %1177) /* ty=(Tensor[(4, 16), float32], Tensor[(288), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 6, 16), uint8]) */;
    %1179 = %1173.0;
    %1180 = %1178.3;
    (%1179, %1180, %var_16671)
  };
  %1181(%var_16698) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 144), float32]) */
}

def @func_4479() -> Tensor[(4, 16), float32] {
  @func_4477() /* ty=Tensor[(4, 16), float32] */
}

def @func_13716() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
  @func_13714() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */
}

def @func_13361() -> (Tensor[(4, 16), float32],) {
  @func_13359() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_14989(%var_14988: Tensor[(60), int32]) -> (Tensor[(4, 16), float32], Tensor[(2, 5, 6), int32], Tensor[(60), int32], Tensor[(4, 16), float32]) {
  %1188 = fn (%var_14952: Tensor[(60), int32]) -> (Tensor[(4, 16), float32], Tensor[(2, 5, 6), int32], Tensor[(60), int32], Tensor[(4, 16), float32]) {
    %1182 = @func_10467() /* ty=(Tensor[(4, 16), float32],) */;
    %1183 = cast(%var_14952, dtype="int32") /* ty=Tensor[(60), int32] */;
    %1184 = reshape(%1183, newshape=[2, 5, 6]) /* ty=Tensor[(2, 5, 6), int32] */;
    %1185 = %1182.0;
    %1186 = @func_11165(%1184) /* ty=Tensor[(2, 5, 6), int32] */;
    %1187 = @func_8026() /* ty=Tensor[(4, 16), float32] */;
    (%1185, %1186, %var_14952, %1187)
  };
  %1188(%var_14988) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 5, 6), int32], Tensor[(60), int32], Tensor[(4, 16), float32]) */
}

def @func_8656(%var_8654: Tensor[(9, 8, 6), float64]) -> (Tensor[(9, 8, 6), float64],) {
  @func_8653(%var_8654) /* ty=(Tensor[(9, 8, 6), float64],) */
}

def @func_9750() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 480), float64]) {
  %1194 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 480), float64]) {
    %1189 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 480), float64] */, dtype="float64") /* ty=Tensor[(1, 480), float64] */;
    %1190 = reshape(%1189, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
    %1191 = @func_4649(%1190) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
    %1192 = @func_1216() /* ty=Tensor[(4, 16), float32] */;
    %1193 = %1191.1;
    (%1192, %1193, meta[relay.Constant][38] /* ty=Tensor[(1, 480), float64] */)
  };
  %1194() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 480), float64]) */
}

def @func_2392(%var_2390: Tensor[(2, 15, 16), float32]) -> (Tensor[(2, 15, 16), float32],) {
  @func_2389(%var_2390) /* ty=(Tensor[(2, 15, 16), float32],) */
}

def @func_1236() -> (Tensor[(4, 16), float32],) {
  %1197 = fn () -> (Tensor[(4, 16), float32],) {
    %1195 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
    %1196 = %1195.1;
    (%1196,)
  };
  %1197() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_12982() -> Tensor[(4, 16), float32] {
  @func_12980() /* ty=Tensor[(4, 16), float32] */
}

def @func_8393() -> (Tensor[(4, ?, 4), bool],) {
  @func_8391() /* ty=(Tensor[(4, ?, 4), bool],) */
}

def @func_11840() -> Tensor[(2, 15, 16), float64] {
  %1198 = fn () -> Tensor[(2, 15, 16), float64] {
    @func_11377() /* ty=Tensor[(2, 15, 16), float64] */
  };
  %1198() /* ty=Tensor[(2, 15, 16), float64] */
}

def @func_9419() -> (Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(2, 15, 16), float64]) {
  %1199 = @func_9144() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(1, 2340), float32], Tensor[(4, 16), float32]) */;
  %1200 = cast(meta[relay.Constant][39] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %1201 = reshape(%1200, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %1202 = @func_4649(%1201) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %1203 = @func_7128() /* ty=(Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) */;
  %1204 = %1199.0;
  %1205 = %1202.2;
  %1206 = %1203.1;
  (%1204, %1205, meta[relay.Constant][39] /* ty=Tensor[(480), float64] */, %1206)
}

def @func_16308(%var_16272: float32) -> (Tensor[(4, 16), float32], Tensor[(1, 14), float32], float32, Tensor[(14), float32], Tensor[(4, ?, 16), bool]) {
  %1207 = cast(%var_16272, dtype="float32") /* ty=float32 */;
  %1208 = cast(meta[relay.Constant][40] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %1209 = reshape(%1207, newshape=[]) /* ty=float32 */;
  %1210 = reshape(%1208, newshape=[1, 14]) /* ty=Tensor[(1, 14), float32] */;
  %1211 = @func_8902() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1212 = %1211.1;
  %1213 = cast(%1212, dtype="float32") /* ty=Tensor[(4, ?, 16), float32] */;
  %1214 = atanh(%1213) /* ty=Tensor[(4, ?, 16), float32] */;
  %1215 = @func_2533() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1216 = %1215.0;
  %1217 = cast(%1212, dtype="uint16") /* ty=Tensor[(4, ?, 16), uint16] */;
  %1218 = shape_of(%1216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1219 = cast(%1216, dtype="uint16") /* ty=Tensor[(4, ?, 16), uint16] */;
  %1220 = dyn.reshape(%1217, %1218, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1221 = subtract(%1219, %1220) /* ty=Tensor[(4, ?, 16), uint16] */;
  %1222 = cast(%1221, dtype="bool") /* ty=Tensor[(4, ?, 16), bool] */;
  %1223 = shape_of(%1214, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1224 = cast(%1214, dtype="bool") /* ty=Tensor[(4, ?, 16), bool] */;
  %1225 = dyn.reshape(%1222, %1223, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1226 = @func_16062() /* ty=Tensor[(4, 16), float32] */;
  %1227 = @func_7624(%1209, %1210) /* ty=Tensor[(1, 14), float32] */;
  %1228 = greater_equal(%1224, %1225) /* ty=Tensor[(4, ?, 16), bool] */;
  (%1226, %1227, %var_16272, meta[relay.Constant][40] /* ty=Tensor[(14), float32] */, %1228)
}

def @func_4973() -> (Tensor[(4, 16), float32], Tensor[(10, 11, 7), int16]) {
  @func_4971() /* ty=(Tensor[(4, 16), float32], Tensor[(10, 11, 7), int16]) */
}

def @func_2534() -> (Tensor[(4, ?, 16), float32],) {
  %1231 = fn () -> (Tensor[(4, ?, 16), float32],) {
    %1229 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
    %1230 = %1229.0;
    (%1230,)
  };
  %1231() /* ty=(Tensor[(4, ?, 16), float32],) */
}

def @func_7513() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1232 = @func_3069() /* ty=(Tensor[(4, 16), float32],) */;
  %1233 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
  %1234 = %1232.0;
  (%1233, %1234)
}

def @func_10542() -> (Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32]) {
  @func_10540() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32]) */
}

def @func_16594(%var_16577: Tensor[(2, 12, 15), float64]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(360), uint64], Tensor[(2, 12, 15), bool], Tensor[(4, 16), float32]) {
  %1235 = @func_6182() /* ty=(Tensor[(4, 16), float32],) */;
  %1236 = cast(meta[relay.Constant][41] /* ty=Tensor[(360), uint64] */, dtype="uint64") /* ty=Tensor[(360), uint64] */;
  %1237 = reshape(%1236, newshape=[2, 12, 15]) /* ty=Tensor[(2, 12, 15), uint64] */;
  %1238 = @func_9351(%1237) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 12, 15), float64]) */;
  %1239 = %1238.1;
  %1240 = cast(%var_16577, dtype="bool") /* ty=Tensor[(2, 12, 15), bool] */;
  %1241 = shape_of(%1239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1242 = cast(%1239, dtype="bool") /* ty=Tensor[(2, 12, 15), bool] */;
  %1243 = dyn.reshape(%1240, %1241, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1244 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %1245 = @func_1671() /* ty=Tensor[(4, 16), float32] */;
  %1246 = %1235.0;
  %1247 = greater(%1242, %1243) /* ty=Tensor[(2, 12, 15), bool] */;
  %1248 = %1244.0;
  (%1245, %1246, meta[relay.Constant][41] /* ty=Tensor[(360), uint64] */, %1247, %1248)
}

def @func_17251() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_17249() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_4069(%var_4068: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(2340), float32], Tensor[(4, 16), float32]) {
  %1259 = fn (%var_4049: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(2340), float32], Tensor[(4, 16), float32]) {
    %1249 = @func_2754() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */;
    %1250 = cast(%var_4049, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %1251 = cast(%var_4049, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %1252 = reshape(%1250, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
    %1253 = reshape(%1251, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
    %1254 = @func_3287(%1252, %1253) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(3, 780), bool]) */;
    %1255 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
    %1256 = %1249.2;
    %1257 = %1254.4;
    %1258 = %1255.0;
    (%1256, %1257, %var_4049, %1258)
  };
  %1259(%var_4068) /* ty=(Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(2340), float32], Tensor[(4, 16), float32]) */
}

def @func_12362() -> (Tensor[(4, 16), float32],) {
  %1260 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
  %1261 = %1260.0;
  (%1261,)
}

def @func_9956() -> (Tensor[(4, 16), float32],) {
  %1264 = fn () -> (Tensor[(4, 16), float32],) {
    %1262 = @func_6235() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1263 = %1262.1;
    (%1263,)
  };
  %1264() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_16790() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1272 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %1265 = @func_12929() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
    %1266 = @func_9749() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 480), float64]) */;
    %1267 = @func_8115() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1268 = %1265.0;
    %1269 = %1266.1;
    %1270 = %1267.1;
    %1271 = @func_10079() /* ty=Tensor[(4, 16), float32] */;
    (%1268, %1269, %1270, %1271)
  };
  %1272() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_17616() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_17614() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_11179() -> Tensor[(4, 16), float32] {
  @func_11177() /* ty=Tensor[(4, 16), float32] */
}

def @func_13929() -> (Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1273 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
  %1274 = @func_9955() /* ty=(Tensor[(4, 16), float32],) */;
  %1275 = %1273.0;
  %1276 = %1274.0;
  %1277 = @func_9226() /* ty=Tensor[(4, 16), float32] */;
  (%1275, %1276, %1277)
}

def @func_18729() -> (Tensor[(4, 16), float32],) {
  @func_18727() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_1405(%var_1398: Tensor[(13, 15, 12), float32]) -> Tensor[(13, 15, 12), float32] {
  %1278 = cast(%var_1398, dtype="float32") /* ty=Tensor[(13, 15, 12), float32] */;
  sinh(%1278) /* ty=Tensor[(13, 15, 12), float32] */
}

def @func_5588() -> (Tensor[(4, 16), float32],) {
  %1279 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1280 = %1279.1;
  (%1280,)
}

def @func_10298() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_10296() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_6182() -> (Tensor[(4, 16), float32],) {
  %1281 = @func_5101() /* ty=Tensor[(4, 16), float32] */;
  (%1281,)
}

def @func_10945() -> Tensor[(4, 16), float32] {
  @func_10943() /* ty=Tensor[(4, 16), float32] */
}

def @func_12050() -> (Tensor[(4, 16), float32],) {
  %1283 = fn () -> (Tensor[(4, 16), float32],) {
    %1282 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
    (%1282,)
  };
  %1283() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_19220() -> (Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 1680), float32], Tensor[(4, 16), float32]) {
  %1292 = fn () -> (Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 1680), float32], Tensor[(4, 16), float32]) {
    %1284 = @func_8401() /* ty=(Tensor[(4, ?, 16), float32],) */;
    %1285 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 1680), float32] */, dtype="float32") /* ty=Tensor[(1, 1680), float32] */;
    %1286 = reshape(%1285, newshape=[1, 1680]) /* ty=Tensor[(1, 1680), float32] */;
    %1287 = @func_3777(%1286) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2340), float32], Tensor[(4, ?, 16), float32], Tensor[(1, 1680), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1288 = @func_18651() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 13, 9), uint32], Tensor[(1521), uint32]) */;
    %1289 = %1284.0;
    %1290 = %1287.1;
    %1291 = %1288.0;
    (%1289, %1290, meta[relay.Constant][42] /* ty=Tensor[(1, 1680), float32] */, %1291)
  };
  %1292() /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 1680), float32], Tensor[(4, 16), float32]) */
}

def @func_7245() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
  %1293 = @func_5880() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
  %1294 = @func_1297() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1295 = @func_4295() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1296 = %1295.0;
  %1297 = cast(%1296, dtype="float32") /* ty=Tensor[(4, ?, 16), float32] */;
  %1298 = %1293.2;
  %1299 = %1294.0;
  %1300 = log(%1297) /* ty=Tensor[(4, ?, 16), float32] */;
  (%1298, %1299, %1300)
}

def @func_8322(%var_8320: Tensor[(15, 7, 9), float64]) -> (Tensor[(15, 7, 9), float64],) {
  @func_8319(%var_8320) /* ty=(Tensor[(15, 7, 9), float64],) */
}

def @func_9561() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1301 = @func_8512() /* ty=(Tensor[(4, 16), float32],) */;
  %1302 = %1301.0;
  %1303 = @func_8238() /* ty=Tensor[(4, 16), float32] */;
  (%1302, %1303)
}

def @func_15678() -> (Tensor[(4, 16), float32],) {
  @func_15676() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_14202() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(240, 2), float64], Tensor[(2340), float64], Tensor[(4, ?, 16), float64], Tensor[(2, 15, 16), bool]) {
  @func_14200() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(240, 2), float64], Tensor[(2340), float64], Tensor[(4, ?, 16), float64], Tensor[(2, 15, 16), bool]) */
}

def @func_18398() -> Tensor[(256), float64] {
  %1304 = @func_16912() /* ty=(Tensor[(256), float64],) */;
  %1304.0
}

def @func_7166() -> (Tensor[(4, 16), float32], Tensor[(256), float64]) {
  %1308 = fn () -> (Tensor[(4, 16), float32], Tensor[(256), float64]) {
    %1305 = @func_7017() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) */;
    %1306 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
    %1307 = %1305.4;
    (%1306, %1307)
  };
  %1308() /* ty=(Tensor[(4, 16), float32], Tensor[(256), float64]) */
}

def @func_7018() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) {
  %1317 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) {
    %1309 = @func_4788() /* ty=(Tensor[(4, 16), float32],) */;
    %1310 = cast(meta[relay.Constant][43] /* ty=Tensor[(256), float64] */, dtype="float64") /* ty=Tensor[(256), float64] */;
    %1311 = reshape(%1310, newshape=[2, 16, 8]) /* ty=Tensor[(2, 16, 8), float64] */;
    %1312 = @func_6874(%1311) /* ty=(Tensor[(2, 16, 8), float64],) */;
    %1313 = @func_2511() /* ty=Tensor[(4, 16), float32] */;
    %1314 = %1309.0;
    %1315 = @func_5129() /* ty=Tensor[(4, ?, 16), float64] */;
    %1316 = %1312.0;
    (%1313, %1314, %1315, %1316, meta[relay.Constant][43] /* ty=Tensor[(256), float64] */)
  };
  %1317() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) */
}

def @func_16930(%var_16914: Tensor[(3, 10, 9), uint8], %var_16915: Tensor[(3, 10, 9), uint8]) -> Tensor[(3, 10, 9), bool] {
  %1318 = cast(%var_16915, dtype="bool") /* ty=Tensor[(3, 10, 9), bool] */;
  %1319 = shape_of(%var_16914, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1320 = cast(%var_16914, dtype="bool") /* ty=Tensor[(3, 10, 9), bool] */;
  %1321 = dyn.reshape(%1318, %1319, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%1320, %1321) /* ty=Tensor[(3, 10, 9), bool] */
}

def @func_2556() -> (Tensor[(4, 16), float32],) {
  %1323 = fn () -> (Tensor[(4, 16), float32],) {
    %1322 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
    (%1322,)
  };
  %1323() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_8026() -> Tensor[(4, 16), float32] {
  @func_1577() /* ty=Tensor[(4, 16), float32] */
}

def @func_8593() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
  %1324 = @func_2524() /* ty=(Tensor[(4, 16), float32],) */;
  %1325 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1326 = %1324.0;
  %1327 = %1325.0;
  (%1326, %1327)
}

def @func_15726() -> Tensor[(4, 16), float32] {
  %1328 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %1328.0
}

def @func_11379() -> Tensor[(2, 15, 16), float64] {
  @func_11377() /* ty=Tensor[(2, 15, 16), float64] */
}

def @func_8959() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(480), float32]) {
  @func_8957() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(480), float32]) */
}

def @func_2997(%var_2996: Tensor[(4, 2, 16), uint16]) -> (Tensor[(4, ?, 4), bool], Tensor[(4, 2, 16), bool]) {
  %1336 = fn (%var_2974: Tensor[(4, 2, 16), uint16]) -> (Tensor[(4, ?, 4), bool], Tensor[(4, 2, 16), bool]) {
    %1329 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
    %1330 = @func_2094() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16]) */;
    %1331 = %1330.1;
    %1332 = cast(%1331, dtype="bool") /* ty=Tensor[(4, ?, 16), bool] */;
    %1333 = cast(%var_2974, dtype="bool") /* ty=Tensor[(4, 2, 16), bool] */;
    %1334 = %1329.2;
    %1335 = greater_equal(%1332, %1333) /* ty=Tensor[(4, 2, 16), bool] */;
    (%1334, %1335)
  };
  %1336(%var_2996) /* ty=(Tensor[(4, ?, 4), bool], Tensor[(4, 2, 16), bool]) */
}

def @func_7777(%var_7775: Tensor[(480), float64], %var_7776: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_7773(%var_7775, %var_7776) /* ty=(Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_18653() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 13, 9), uint32], Tensor[(1521), uint32]) {
  @func_18651() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 13, 9), uint32], Tensor[(1521), uint32]) */
}

def @func_18727() -> (Tensor[(4, 16), float32],) {
  %1337 = @func_13359() /* ty=(Tensor[(4, 16), float32],) */;
  %1338 = %1337.0;
  (%1338,)
}

def @func_6877(%var_6875: Tensor[(2, 16, 8), float64]) -> (Tensor[(2, 16, 8), float64],) {
  @func_6874(%var_6875) /* ty=(Tensor[(2, 16, 8), float64],) */
}

def @func_15540(%var_15538: Tensor[(630), float32], %var_15539: Tensor[(18, 130), float32]) -> (Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(630), float32], Tensor[(18, 130), float32], Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32]) {
  %1354 = fn (%var_15510: Tensor[(630), float32], %var_15511: Tensor[(18, 130), float32]) -> (Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(630), float32], Tensor[(18, 130), float32], Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32]) {
    %1339 = @func_7128() /* ty=(Tensor[(2, 15, 16), float32], Tensor[(2, 15, 16), float64]) */;
    %1340 = cast(%var_15510, dtype="float32") /* ty=Tensor[(630), float32] */;
    %1341 = cast(%var_15511, dtype="float32") /* ty=Tensor[(18, 130), float32] */;
    %1342 = reshape(%1340, newshape=[7, 6, 15]) /* ty=Tensor[(7, 6, 15), float32] */;
    %1343 = reshape(%1341, newshape=[1, 2340]) /* ty=Tensor[(1, 2340), float32] */;
    %1344 = @func_4364(%1342, %1343) /* ty=(Tensor[(7, 6, 15), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32], Tensor[(2, 15, 16), float64]) */;
    %1345 = @func_11377() /* ty=Tensor[(2, 15, 16), float64] */;
    %1346 = cast(%1345, dtype="float64") /* ty=Tensor[(2, 15, 16), float64] */;
    %1347 = cast(%var_15511, dtype="float32") /* ty=Tensor[(18, 130), float32] */;
    %1348 = reshape(%1346, newshape=[480]) /* ty=Tensor[(480), float64] */;
    %1349 = reshape(%1347, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
    %1350 = @func_7773(%1348, %1349) /* ty=(Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1351 = %1339.0;
    %1352 = %1344.1;
    %1353 = %1350.6;
    (%1351, %1352, %var_15510, %var_15511, %1345, %1353)
  };
  %1354(%var_15538, %var_15539) /* ty=(Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(630), float32], Tensor[(18, 130), float32], Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32]) */
}

def @func_13313() -> Tensor[(4, 16), float32] {
  %1355 = fn () -> Tensor[(4, 16), float32] {
    @func_5225() /* ty=Tensor[(4, 16), float32] */
  };
  %1355() /* ty=Tensor[(4, 16), float32] */
}

def @func_12723() -> Tensor[(4, 16), float32] {
  %1356 = @func_8512() /* ty=(Tensor[(4, 16), float32],) */;
  %1356.0
}

def @func_13810(%var_13797: Tensor[(13, 7, 6), int32]) -> (Tensor[(13, 7, 6), bool],) {
  %1357 = cast(-1 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %1358 = cast(%var_13797, dtype="bool") /* ty=Tensor[(13, 7, 6), bool] */;
  %1359 = less_equal(%1357, %1358) /* ty=Tensor[(13, 7, 6), bool] */;
  (%1359,)
}

def @func_5881() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(4, 16), float32]) {
  %1375 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(4, 16), float32]) {
    %1360 = @func_5479() /* ty=(Tensor[(2, 15, 16), int8], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(2, 15, 16), uint32], Tensor[(4, 16), float32]) */;
    %1361 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1362 = @func_2524() /* ty=(Tensor[(4, 16), float32],) */;
    %1363 = cast(meta[relay.Constant][44] /* ty=Tensor[(120), uint64] */, dtype="uint64") /* ty=Tensor[(120), uint64] */;
    %1364 = reshape(%1363, newshape=[6, 4, 5]) /* ty=Tensor[(6, 4, 5), uint64] */;
    %1365 = @func_3142(%1364) /* ty=(Tensor[(6, 4, 5), uint64],) */;
    %1366 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
    %1367 = @func_3069() /* ty=(Tensor[(4, 16), float32],) */;
    %1368 = %1360.3;
    %1369 = %1361.0;
    %1370 = %1362.0;
    %1371 = %1365.0;
    %1372 = @func_5129() /* ty=Tensor[(4, ?, 16), float64] */;
    %1373 = %1366.0;
    %1374 = %1367.0;
    (%1368, %1369, %1370, %1371, meta[relay.Constant][44] /* ty=Tensor[(120), uint64] */, %1372, %1373, %1374)
  };
  %1375() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(6, 4, 5), uint64], Tensor[(120), uint64], Tensor[(4, ?, 16), float64], Tensor[(2340), float32], Tensor[(4, 16), float32]) */
}

def @func_9563() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_9561() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_8063(%var_8059: Tensor[(150, 1), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150, 1), float32]) {
  %1376 = @func_4676() /* ty=(Tensor[(4, 16), float32],) */;
  %1377 = cast(%var_8059, dtype="float32") /* ty=Tensor[(150, 1), float32] */;
  %1378 = reshape(%1377, newshape=[15, 5, 2]) /* ty=Tensor[(15, 5, 2), float32] */;
  %1379 = @func_4223(%1378) /* ty=(Tensor[(15, 5, 2), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool]) */;
  %1380 = %1376.0;
  %1381 = @func_3561() /* ty=Tensor[(4, 16), float32] */;
  %1382 = %1379.4;
  (%1380, %1381, %1382, %var_8059)
}

def @func_2756() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) {
  @func_2754() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */
}

def @func_10212() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150), float32]) {
  %1383 = cast(meta[relay.Constant][45] /* ty=Tensor[(150), float32] */, dtype="float32") /* ty=Tensor[(150), float32] */;
  %1384 = reshape(%1383, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
  %1385 = @func_8063(%1384) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150, 1), float32]) */;
  %1386 = @func_5101() /* ty=Tensor[(4, 16), float32] */;
  %1387 = @func_5101() /* ty=Tensor[(4, 16), float32] */;
  %1388 = %1385.2;
  (%1386, %1387, %1388, meta[relay.Constant][45] /* ty=Tensor[(150), float32] */)
}

def @func_15471() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_15469() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_9583() -> (Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 120), float64]) {
  %1395 = fn () -> (Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 120), float64]) {
    %1389 = @func_6235() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1390 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 120), float64] */, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
    %1391 = reshape(%1390, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
    %1392 = @func_4649(%1391) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
    %1393 = %1389.1;
    %1394 = %1392.7;
    (%1393, %1394, meta[relay.Constant][46] /* ty=Tensor[(4, 120), float64] */)
  };
  %1395() /* ty=(Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 120), float64]) */
}

def @func_16344(%var_16342: Tensor[(12, 10, 14), float32], %var_16343: Tensor[(12, 10, 14), float32]) -> Tensor[(12, 10, 14), bool] {
  %1400 = fn (%var_16330: Tensor[(12, 10, 14), float32], %var_16331: Tensor[(12, 10, 14), float32]) -> Tensor[(12, 10, 14), bool] {
    %1396 = cast(%var_16331, dtype="bool") /* ty=Tensor[(12, 10, 14), bool] */;
    %1397 = shape_of(%var_16330, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1398 = cast(%var_16330, dtype="bool") /* ty=Tensor[(12, 10, 14), bool] */;
    %1399 = dyn.reshape(%1396, %1397, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%1398, %1399) /* ty=Tensor[(12, 10, 14), bool] */
  };
  %1400(%var_16342, %var_16343) /* ty=Tensor[(12, 10, 14), bool] */
}

def @func_18604() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_18602() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_5102() -> Tensor[(4, 16), float32] {
  %1402 = fn () -> Tensor[(4, 16), float32] {
    %1401 = @func_4160() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1401.0
  };
  %1402() /* ty=Tensor[(4, 16), float32] */
}

def @func_13593() -> Tensor[(4, 16), float32] {
  %1403 = @func_5763() /* ty=(Tensor[(4, 16), float32],) */;
  %1403.0
}

def @func_9091() -> (Tensor[(4, 16), float32],) {
  @func_9089() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_18356() -> (Tensor[(256), float64], Tensor[(720), float32], Tensor[(4, 16), float32]) {
  %1404 = @func_16464() /* ty=(Tensor[(256), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1405 = @func_17327() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1406 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %1407 = %1404.0;
  %1408 = %1405.2;
  %1409 = %1406.1;
  (%1407, %1408, %1409)
}

def @func_17016() -> Tensor[(4, 16), float32] {
  %1410 = @func_10241() /* ty=(Tensor[(4, 16), float32],) */;
  %1410.0
}

def @func_13359() -> (Tensor[(4, 16), float32],) {
  %1411 = @func_3561() /* ty=Tensor[(4, 16), float32] */;
  (%1411,)
}

def @func_15356() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_15354() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_19427() -> Tensor[(4, 16), float32] {
  %1413 = fn () -> Tensor[(4, 16), float32] {
    %1412 = @func_8902() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1412.0
  };
  %1413() /* ty=Tensor[(4, 16), float32] */
}

def @func_9835() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_9833() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_13931() -> (Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_13929() /* ty=(Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_8345() -> Tensor[(4, 16), float32] {
  %1415 = fn () -> Tensor[(4, 16), float32] {
    %1414 = @func_2094() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16]) */;
    %1414.0
  };
  %1415() /* ty=Tensor[(4, 16), float32] */
}

def @func_3561() -> Tensor[(4, 16), float32] {
  %1416 = @func_2162() /* ty=(Tensor[(4, 16), float32],) */;
  %1416.0
}

def @func_16934(%var_16932: Tensor[(3, 10, 9), uint8], %var_16933: Tensor[(3, 10, 9), uint8]) -> Tensor[(3, 10, 9), bool] {
  @func_16930(%var_16932, %var_16933) /* ty=Tensor[(3, 10, 9), bool] */
}

def @func_5226() -> Tensor[(4, 16), float32] {
  %1417 = fn () -> Tensor[(4, 16), float32] {
    @func_1216() /* ty=Tensor[(4, 16), float32] */
  };
  %1417() /* ty=Tensor[(4, 16), float32] */
}

def @func_6661() -> Tensor[(4, 16), float32] {
  @func_6509() /* ty=Tensor[(4, 16), float32] */
}

def @func_10167() -> (Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1422 = fn () -> (Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %1418 = @func_8391() /* ty=(Tensor[(4, ?, 4), bool],) */;
    %1419 = %1418.0;
    %1420 = @func_3186() /* ty=Tensor[(4, 16), float32] */;
    %1421 = @func_3555() /* ty=Tensor[(4, 16), float32] */;
    (%1419, %1420, %1421)
  };
  %1422() /* ty=(Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_17951(%var_17949: Tensor[(8, 3, 13), bool]) -> (Tensor[(8, 3, 13), bool], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool]) {
  @func_17948(%var_17949) /* ty=(Tensor[(8, 3, 13), bool], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool]) */
}

def @func_15327(%var_15325: Tensor[(120, 4), float64], %var_15326: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(120, 4), float64], Tensor[(4, 16), float32], Tensor[(2340), float32]) {
  @func_15323(%var_15325, %var_15326) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(120, 4), float64], Tensor[(4, 16), float32], Tensor[(2340), float32]) */
}

def @func_3144(%var_3143: Tensor[(6, 4, 5), uint64]) -> (Tensor[(6, 4, 5), uint64],) {
  %1426 = fn (%var_3132: Tensor[(6, 4, 5), uint64]) -> (Tensor[(6, 4, 5), uint64],) {
    %1423 = cast(meta[relay.Constant][47] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1424 = cast(%var_3132, dtype="uint64") /* ty=Tensor[(6, 4, 5), uint64] */;
    %1425 = maximum(%1423, %1424) /* ty=Tensor[(6, 4, 5), uint64] */;
    (%1425,)
  };
  %1426(%var_3143) /* ty=(Tensor[(6, 4, 5), uint64],) */
}

def @func_4100(%var_4077: Tensor[(12, 60), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], float32, Tensor[(12, 60), float32]) {
  %1427 = @func_3069() /* ty=(Tensor[(4, 16), float32],) */;
  %1428 = cast(-1.03513f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1429 = cast(%var_4077, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
  %1430 = reshape(%1428, newshape=[]) /* ty=float32 */;
  %1431 = reshape(%1429, newshape=[3, 16, 15]) /* ty=Tensor[(3, 16, 15), float32] */;
  %1432 = @func_2362(%1430, %1431) /* ty=(Tensor[(3, 16, 15), float32], Tensor[(3, 16, 15), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1433 = %1427.0;
  %1434 = %1432.2;
  (%1433, %1434, -1.03513f /* ty=float32 */, %var_4077)
}

def @func_14335() -> (Tensor[(4, 16), float32],) {
  %1437 = fn () -> (Tensor[(4, 16), float32],) {
    %1435 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1436 = %1435.4;
    (%1436,)
  };
  %1437() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_3406() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32]) {
  %1438 = @func_1235() /* ty=(Tensor[(4, 16), float32],) */;
  %1439 = cast(meta[relay.Constant][48] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1440 = reshape(%1439, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float32] */;
  %1441 = @func_1577() /* ty=Tensor[(4, 16), float32] */;
  %1442 = %1438.0;
  %1443 = @func_1405(%1440) /* ty=Tensor[(13, 15, 12), float32] */;
  (%1441, %1442, %1443, meta[relay.Constant][48] /* ty=Tensor[(2340), float32] */)
}

def @func_8987(%var_8986: Tensor[(16, 2340), float32]) -> (Tensor[(16, 2340), uint64],) {
  %1449 = fn (%var_8975: Tensor[(16, 2340), float32]) -> (Tensor[(16, 2340), uint64],) {
    %1444 = @func_6701() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */;
    %1445 = %1444.3;
    %1446 = cast(%1445, dtype="uint64") /* ty=Tensor[(1, 2340), uint64] */;
    %1447 = cast(%var_8975, dtype="uint64") /* ty=Tensor[(16, 2340), uint64] */;
    %1448 = bitwise_xor(%1446, %1447) /* ty=Tensor[(16, 2340), uint64] */;
    (%1448,)
  };
  %1449(%var_8986) /* ty=(Tensor[(16, 2340), uint64],) */
}

def @func_13434(%var_13432: Tensor[(288), float32], %var_13433: Tensor[(3, 6, 16), float32]) -> (Tensor[(4, 16), float32], Tensor[(288), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 6, 16), uint8]) {
  %1466 = fn (%var_13384: Tensor[(288), float32], %var_13419: Tensor[(3, 6, 16), float32]) -> (Tensor[(4, 16), float32], Tensor[(288), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 6, 16), uint8]) {
    %1450 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
    %1451 = @func_12844() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), bool]) */;
    %1452 = @func_6526() /* ty=(Tensor[(4, 16), float32],) */;
    %1453 = cast(%var_13384, dtype="float32") /* ty=Tensor[(288), float32] */;
    %1454 = reshape(%1453, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), float32] */;
    %1455 = @func_7650(%1454) /* ty=Tensor[(3, 6, 16), float32] */;
    %1456 = cast(%1455, dtype="float32") /* ty=Tensor[(3, 6, 16), float32] */;
    %1457 = cosh(%1456) /* ty=Tensor[(3, 6, 16), float32] */;
    %1458 = cast(%var_13419, dtype="uint8") /* ty=Tensor[(3, 6, 16), uint8] */;
    %1459 = shape_of(%1457, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1460 = cast(%1457, dtype="uint8") /* ty=Tensor[(3, 6, 16), uint8] */;
    %1461 = dyn.reshape(%1458, %1459, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1462 = %1450.0;
    %1463 = %1451.1;
    %1464 = %1452.0;
    %1465 = right_shift(%1460, %1461) /* ty=Tensor[(3, 6, 16), uint8] */;
    (%1462, %var_13384, %1463, %1464, %1465)
  };
  %1466(%var_13432, %var_13433) /* ty=(Tensor[(4, 16), float32], Tensor[(288), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 6, 16), uint8]) */
}

def @func_9421() -> (Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(2, 15, 16), float64]) {
  @func_9419() /* ty=(Tensor[(4, ?, 16), float64], Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(2, 15, 16), float64]) */
}

def @func_8709(%var_8708: Tensor[(14, 7, 13), float64]) -> (Tensor[(14, 7, 13), float64],) {
  %1469 = fn (%var_8701: Tensor[(14, 7, 13), float64]) -> (Tensor[(14, 7, 13), float64],) {
    %1467 = cast(%var_8701, dtype="float64") /* ty=Tensor[(14, 7, 13), float64] */;
    %1468 = atan(%1467) /* ty=Tensor[(14, 7, 13), float64] */;
    (%1468,)
  };
  %1469(%var_8708) /* ty=(Tensor[(14, 7, 13), float64],) */
}

def @func_8419() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_8417() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_10653(%var_10597: int32, %var_10598: Tensor[(13, 13, 10), int32]) -> (Tensor[(13, 13, 10), int32], Tensor[(1, 480), float64]) {
  %1470 = cast(%var_10597, dtype="int32") /* ty=int32 */;
  %1471 = cast(%var_10598, dtype="int32") /* ty=Tensor[(13, 13, 10), int32] */;
  %1472 = @func_9749() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 480), float64]) */;
  %1473 = bitwise_or(%1470, %1471) /* ty=Tensor[(13, 13, 10), int32] */;
  %1474 = %1472.2;
  (%1473, %1474)
}

def @func_2365(%var_2363: float32, %var_2364: Tensor[(3, 16, 15), float32]) -> (Tensor[(3, 16, 15), float32], Tensor[(3, 16, 15), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1488 = fn (%var_2291: float32, %var_2292: Tensor[(3, 16, 15), float32]) -> (Tensor[(3, 16, 15), float32], Tensor[(3, 16, 15), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %1475 = cast(%var_2291, dtype="float32") /* ty=float32 */;
    %1476 = cast(%var_2292, dtype="float32") /* ty=Tensor[(3, 16, 15), float32] */;
    %1477 = cast(%var_2292, dtype="float64") /* ty=Tensor[(3, 16, 15), float64] */;
    %1478 = cast(%var_2291, dtype="float64") /* ty=float64 */;
    %1479 = @func_2015() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1480 = @func_2015() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1481 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1482 = floor_divide(%1475, %1476) /* ty=Tensor[(3, 16, 15), float32] */;
    %1483 = divide(%1477, %1478) /* ty=Tensor[(3, 16, 15), float64] */;
    %1484 = @func_2194() /* ty=Tensor[(4, 16), float32] */;
    %1485 = %1479.1;
    %1486 = %1480.2;
    %1487 = %1481.1;
    (%1482, %1483, %1484, %1485, %1486, %1487)
  };
  %1488(%var_2363, %var_2364) /* ty=(Tensor[(3, 16, 15), float32], Tensor[(3, 16, 15), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_14125() -> Tensor[(4, 16), float32] {
  %1490 = fn () -> Tensor[(4, 16), float32] {
    %1489 = @func_10467() /* ty=(Tensor[(4, 16), float32],) */;
    %1489.0
  };
  %1490() /* ty=Tensor[(4, 16), float32] */
}

def @func_12294() -> (Tensor[(4, 16), float32], float32, Tensor[(720), float32], Tensor[(4, ?, 16), float32], Tensor[(480), float32]) {
  @func_12292() /* ty=(Tensor[(4, 16), float32], float32, Tensor[(720), float32], Tensor[(4, ?, 16), float32], Tensor[(480), float32]) */
}

def @func_8449() -> Tensor[(4, 16), float32] {
  @func_8447() /* ty=Tensor[(4, 16), float32] */
}

def @func_14482(%var_14480: Tensor[(1274), float64], %var_14481: Tensor[(720), float32]) -> (Tensor[(4, ?, 16), float32], Tensor[(14, 7, 13), float64], Tensor[(1274), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, 16), float32]) {
  @func_14478(%var_14480, %var_14481) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(14, 7, 13), float64], Tensor[(1274), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, 16), float32]) */
}

def @func_15393(%var_15391: Tensor[(256), float64]) -> (Tensor[(4, 16), float32], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) {
  @func_15390(%var_15391) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) */
}

def @func_2263(%var_2261: Tensor[(9, 260), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 16), float32]) {
  @func_2260(%var_2261) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 16), float32]) */
}

def @func_1168(%var_1139: Tensor[(12, 10, 14), float32], %var_1140: Tensor[(12, 10, 14), float32]) -> (Tensor[(12, 10, 14), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32]) {
  %1491 = cast(%var_1140, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
  %1492 = shape_of(%var_1139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1493 = cast(%var_1139, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
  %1494 = dyn.reshape(%1491, %1492, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1495 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %1496 = %1495.3;
  %1497 = cast(%1496, dtype="float32") /* ty=Tensor[(4, ?, 16), float32] */;
  %1498 = reshape(%1497, newshape=[4, 1, 16]) /* ty=Tensor[(4, 1, 16), float32] */;
  %1499 = @func_392(%1498) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %1500 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %1501 = add(%1493, %1494) /* ty=Tensor[(12, 10, 14), float32] */;
  %1502 = %1499.0;
  %1503 = %1500.3;
  (%1501, %1496, %1502, %1503)
}

def @func_16840() -> Tensor[(4, 16), float32] {
  @func_16725() /* ty=Tensor[(4, 16), float32] */
}

def @func_2164() -> (Tensor[(4, 16), float32],) {
  @func_2162() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_6846(%var_6824: Tensor[(2, 240), float64]) -> (Tensor[(7, 10, 8), float64], Tensor[(4, 16), float32], Tensor[(2, 240), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(720), float32], Tensor[(4, ?, 16), uint16]) {
  %1504 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 10, 8), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 8), float64] */;
  %1505 = cast(%var_6824, dtype="float64") /* ty=Tensor[(2, 240), float64] */;
  %1506 = reshape(%1505, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float64] */;
  %1507 = @func_4649(%1506) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(2, 15, 16), bool], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32]) */;
  %1508 = @func_5789() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1509 = cast(meta[relay.Constant][50] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %1510 = reshape(%1509, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %1511 = @func_5937(%1510) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), int8], Tensor[(4, 16), float32], Tensor[(720), float32]) */;
  %1512 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %1513 = asin(%1504) /* ty=Tensor[(7, 10, 8), float64] */;
  %1514 = %1507.6;
  %1515 = %1508.0;
  %1516 = %1511.1;
  %1517 = %1512.0;
  (%1513, %1514, %var_6824, %1515, %1516, meta[relay.Constant][50] /* ty=Tensor[(720), float32] */, %1517)
}

def @func_7247() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) {
  @func_7245() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */
}

def @func_4971() -> (Tensor[(4, 16), float32], Tensor[(10, 11, 7), int16]) {
  %1518 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1519 = cast(meta[relay.Constant][51] /* ty=Tensor[(77, 10), float32] */, dtype="float32") /* ty=Tensor[(77, 10), float32] */;
  %1520 = reshape(%1519, newshape=[10, 11, 7]) /* ty=Tensor[(10, 11, 7), float32] */;
  %1521 = @func_3676(%1520) /* ty=(Tensor[(10, 11, 7), float32], Tensor[(4, 16), float32]) */;
  %1522 = %1521.0;
  %1523 = cast(meta[relay.Constant][51] /* ty=Tensor[(77, 10), float32] */, dtype="int16") /* ty=Tensor[(77, 10), int16] */;
  %1524 = shape_of(%1522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1525 = cast(%1522, dtype="int16") /* ty=Tensor[(10, 11, 7), int16] */;
  %1526 = dyn.reshape(%1523, %1524, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1527 = %1518.5;
  %1528 = right_shift(%1525, %1526) /* ty=Tensor[(10, 11, 7), int16] */;
  (%1527, %1528)
}

def @func_4812() -> Tensor[(4, 16), float32] {
  %1530 = fn () -> Tensor[(4, 16), float32] {
    %1529 = @func_2524() /* ty=(Tensor[(4, 16), float32],) */;
    %1529.0
  };
  %1530() /* ty=Tensor[(4, 16), float32] */
}

def @func_3777(%var_3751: Tensor[(1, 1680), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2340), float32], Tensor[(4, ?, 16), float32], Tensor[(1, 1680), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1531 = @func_2015() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1532 = @func_2555() /* ty=(Tensor[(4, 16), float32],) */;
  %1533 = @func_2094() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %1534 = cast(meta[relay.Constant][52] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1535 = reshape(%1534, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %1536 = @func_1783(%1535) /* ty=(Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), int16], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(4, 16), float32]) */;
  %1537 = cast(%var_3751, dtype="float32") /* ty=Tensor[(1, 1680), float32] */;
  %1538 = cast(%var_3751, dtype="float32") /* ty=Tensor[(1, 1680), float32] */;
  %1539 = reshape(%1537, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
  %1540 = reshape(%1538, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
  %1541 = @func_1168(%1539, %1540) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1542 = @func_1455() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1543 = @func_3069() /* ty=(Tensor[(4, 16), float32],) */;
  %1544 = %1531.0;
  %1545 = %1532.0;
  %1546 = %1533.0;
  %1547 = %1536.2;
  %1548 = %1541.3;
  %1549 = %1542.5;
  %1550 = %1543.0;
  (%1544, %1545, %1546, %1547, meta[relay.Constant][52] /* ty=Tensor[(2340), float32] */, %1548, %var_3751, %1549, %1550)
}

def @func_15226() -> Tensor[(4, 16), float32] {
  @func_15224() /* ty=Tensor[(4, 16), float32] */
}

def @func_13856() -> (Tensor[(4, 16), float32], Tensor[(2, 5, 6), int32], Tensor[(60), int32]) {
  %1556 = fn () -> (Tensor[(4, 16), float32], Tensor[(2, 5, 6), int32], Tensor[(60), int32]) {
    %1551 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
    %1552 = cast(meta[relay.Constant][53] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
    %1553 = reshape(%1552, newshape=[2, 5, 6]) /* ty=Tensor[(2, 5, 6), int32] */;
    %1554 = %1551.0;
    %1555 = @func_11165(%1553) /* ty=Tensor[(2, 5, 6), int32] */;
    (%1554, %1555, meta[relay.Constant][53] /* ty=Tensor[(60), int32] */)
  };
  %1556() /* ty=(Tensor[(4, 16), float32], Tensor[(2, 5, 6), int32], Tensor[(60), int32]) */
}

def @func_12980() -> Tensor[(4, 16), float32] {
  @func_4811() /* ty=Tensor[(4, 16), float32] */
}

def @func_14673() -> Tensor[(4, 16), float32] {
  %1558 = fn () -> Tensor[(4, 16), float32] {
    %1557 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
    %1557.0
  };
  %1558() /* ty=Tensor[(4, 16), float32] */
}

def @func_7653(%var_7651: Tensor[(3, 6, 16), float32]) -> Tensor[(3, 6, 16), float32] {
  @func_7650(%var_7651) /* ty=Tensor[(3, 6, 16), float32] */
}

def @func_10342() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(120), uint64]) {
  @func_10340() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(120), uint64]) */
}

def @func_6902(%var_6898: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) {
  %1559 = cast(%var_6898, dtype="float32") /* ty=Tensor[(2340), float32] */;
  %1560 = reshape(%1559, newshape=[9, 260]) /* ty=Tensor[(9, 260), float32] */;
  %1561 = @func_2260(%1560) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 16), float32]) */;
  %1562 = @func_6448() /* ty=Tensor[(4, 16), float32] */;
  %1563 = %1561.0;
  (%1562, %1563, %var_6898)
}

def @func_962() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1568 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %1564 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
    %1565 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
    %1566 = %1564.1;
    %1567 = %1565.0;
    (%1566, %1567)
  };
  %1568() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_8401() -> (Tensor[(4, ?, 16), float32],) {
  %1569 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1570 = %1569.0;
  (%1570,)
}

def @func_18539() -> (Tensor[(4, ?, 16), float32],) {
  %1574 = fn () -> (Tensor[(4, ?, 16), float32],) {
    %1571 = @func_5129() /* ty=Tensor[(4, ?, 16), float64] */;
    %1572 = cast(%1571, dtype="float32") /* ty=Tensor[(4, ?, 16), float32] */;
    %1573 = sinh(%1572) /* ty=Tensor[(4, ?, 16), float32] */;
    (%1573,)
  };
  %1574() /* ty=(Tensor[(4, ?, 16), float32],) */
}

def @func_1206() -> (Tensor[(4, 16), float32],) {
  %1577 = fn () -> (Tensor[(4, 16), float32],) {
    %1575 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
    %1576 = %1575.0;
    (%1576,)
  };
  %1577() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_17884() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1680), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_17882() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1680), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_10080() -> Tensor[(4, 16), float32] {
  %1579 = fn () -> Tensor[(4, 16), float32] {
    %1578 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1578.1
  };
  %1579() /* ty=Tensor[(4, 16), float32] */
}

def @func_15126() -> Tensor[(4, 16), float32] {
  %1581 = fn () -> Tensor[(4, 16), float32] {
    %1580 = @func_2464() /* ty=(Tensor[(4, 16), float32],) */;
    %1580.0
  };
  %1581() /* ty=Tensor[(4, 16), float32] */
}

def @func_4225(%var_4224: Tensor[(15, 5, 2), float32]) -> (Tensor[(15, 5, 2), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool]) {
  %1597 = fn (%var_4187: Tensor[(15, 5, 2), float32]) -> (Tensor[(15, 5, 2), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool]) {
    %1582 = cast(%var_4187, dtype="float32") /* ty=Tensor[(15, 5, 2), float32] */;
    %1583 = cast(meta[relay.Constant][54] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %1584 = reshape(%1583, newshape=[13, 15, 12]) /* ty=Tensor[(13, 15, 12), float32] */;
    %1585 = @func_1405(%1584) /* ty=Tensor[(13, 15, 12), float32] */;
    %1586 = cast(%1585, dtype="float32") /* ty=Tensor[(13, 15, 12), float32] */;
    %1587 = reshape(%1586, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
    %1588 = @func_1783(%1587) /* ty=(Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), int16], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(4, 16), float32]) */;
    %1589 = cast(%1585, dtype="float32") /* ty=Tensor[(13, 15, 12), float32] */;
    %1590 = cast(meta[relay.Constant][54] /* ty=Tensor[(2340), float32] */, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %1591 = reshape(%1589, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
    %1592 = reshape(%1590, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
    %1593 = @func_3287(%1591, %1592) /* ty=(Tensor[(4, 16), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(3, 780), bool]) */;
    %1594 = sigmoid(%1582) /* ty=Tensor[(15, 5, 2), float32] */;
    %1595 = %1588.9;
    %1596 = %1593.3;
    (%1594, %1585, meta[relay.Constant][54] /* ty=Tensor[(2340), float32] */, %1595, %1596)
  };
  %1597(%var_4224) /* ty=(Tensor[(15, 5, 2), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool]) */
}

def @func_8028() -> Tensor[(4, 16), float32] {
  @func_8026() /* ty=Tensor[(4, 16), float32] */
}

def @func_13040(%var_13039: Tensor[(1680, 1), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(1680, 1), float32]) {
  %1608 = fn (%var_13036: Tensor[(1680, 1), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(1680, 1), float32]) {
    %1598 = @func_5302() /* ty=(Tensor[(4, 16), float32],) */;
    %1599 = @func_11363() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1600 = cast(%var_13036, dtype="float32") /* ty=Tensor[(1680, 1), float32] */;
    %1601 = cast(%var_13036, dtype="float32") /* ty=Tensor[(1680, 1), float32] */;
    %1602 = reshape(%1600, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
    %1603 = reshape(%1601, newshape=[12, 10, 14]) /* ty=Tensor[(12, 10, 14), float32] */;
    %1604 = @func_1168(%1602, %1603) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, ?, 16), float32]) */;
    %1605 = %1598.0;
    %1606 = %1599.0;
    %1607 = %1604.2;
    (%1605, %1606, %1607, %var_13036)
  };
  %1608(%var_13039) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(1680, 1), float32]) */
}

def @func_5130() -> Tensor[(4, ?, 16), float64] {
  %1612 = fn () -> Tensor[(4, ?, 16), float64] {
    %1609 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
    %1610 = %1609.0;
    %1611 = cast(%1610, dtype="float64") /* ty=Tensor[(4, ?, 16), float64] */;
    asin(%1611) /* ty=Tensor[(4, ?, 16), float64] */
  };
  %1612() /* ty=Tensor[(4, ?, 16), float64] */
}

def @func_11418() -> (Tensor[(4, 16), float32],) {
  %1615 = fn () -> (Tensor[(4, 16), float32],) {
    %1613 = @func_5789() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1614 = %1613.1;
    (%1614,)
  };
  %1615() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_14713() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1620 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %1616 = @func_14334() /* ty=(Tensor[(4, 16), float32],) */;
    %1617 = @func_7270() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1618 = %1616.0;
    %1619 = %1617.0;
    (%1618, %1619)
  };
  %1620() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_8319(%var_8315: Tensor[(15, 7, 9), float64]) -> (Tensor[(15, 7, 9), float64],) {
  %1621 = cast(%var_8315, dtype="float64") /* ty=Tensor[(15, 7, 9), float64] */;
  %1622 = exp(%1621) /* ty=Tensor[(15, 7, 9), float64] */;
  (%1622,)
}

def @func_18871() -> Tensor[(4, 16), float32] {
  @func_18869() /* ty=Tensor[(4, 16), float32] */
}

def @func_19241() -> Tensor[(10, 11, 7), int16] {
  %1624 = fn () -> Tensor[(10, 11, 7), int16] {
    %1623 = @func_4971() /* ty=(Tensor[(4, 16), float32], Tensor[(10, 11, 7), int16]) */;
    %1623.1
  };
  %1624() /* ty=Tensor[(10, 11, 7), int16] */
}

def @func_16465() -> (Tensor[(256), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1633 = fn () -> (Tensor[(256), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %1625 = @func_7017() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float64], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) */;
    %1626 = @func_3474() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
    %1627 = @func_10340() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(120), uint64]) */;
    %1628 = @func_7513() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1629 = %1625.4;
    %1630 = %1626.1;
    %1631 = %1627.0;
    %1632 = %1628.1;
    (%1629, %1630, %1631, %1632)
  };
  %1633() /* ty=(Tensor[(256), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_8781() -> (Tensor[(4, 16), float32],) {
  %1634 = @func_2606() /* ty=(Tensor[(4, 16), float32],) */;
  %1635 = %1634.0;
  (%1635,)
}

def @func_19353() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_19351() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_2005() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1640 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %1636 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
    %1637 = @func_1297() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
    %1638 = %1636.0;
    %1639 = %1637.0;
    (%1638, %1639)
  };
  %1640() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_17057(%var_17055: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16], Tensor[(2340), float32]) {
  @func_17054(%var_17055) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16], Tensor[(2340), float32]) */
}

def @func_8513() -> (Tensor[(4, 16), float32],) {
  %1643 = fn () -> (Tensor[(4, 16), float32],) {
    %1641 = @func_6601() /* ty=(Tensor[(4, 16), float32],) */;
    %1642 = %1641.0;
    (%1642,)
  };
  %1643() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_6663() -> Tensor[(4, 16), float32] {
  @func_6661() /* ty=Tensor[(4, 16), float32] */
}

def @func_3780(%var_3778: Tensor[(1, 1680), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2340), float32], Tensor[(4, ?, 16), float32], Tensor[(1, 1680), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_3777(%var_3778) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2340), float32], Tensor[(4, ?, 16), float32], Tensor[(1, 1680), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_2942(%var_2941: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) {
  %1654 = fn (%var_2924: Tensor[(2340), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) {
    %1644 = @func_2004() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1645 = cast(%var_2924, dtype="float32") /* ty=Tensor[(2340), float32] */;
    %1646 = reshape(%1645, newshape=[3, 780]) /* ty=Tensor[(3, 780), float32] */;
    %1647 = @func_2892(%1646) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) */;
    %1648 = cast(meta[relay.Constant][55] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %1649 = reshape(%1648, newshape=[2, 15, 16]) /* ty=Tensor[(2, 15, 16), float32] */;
    %1650 = @func_2389(%1649) /* ty=(Tensor[(2, 15, 16), float32],) */;
    %1651 = %1644.1;
    %1652 = %1647.3;
    %1653 = %1650.0;
    (%1651, %1652, %var_2924, %1653, meta[relay.Constant][55] /* ty=Tensor[(480), float32] */)
  };
  %1654(%var_2941) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(480), float32]) */
}

def @func_10469() -> (Tensor[(4, 16), float32],) {
  @func_10467() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_19058() -> (Tensor[(120), uint64], Tensor[(4, 16), float32]) {
  @func_19056() /* ty=(Tensor[(120), uint64], Tensor[(4, 16), float32]) */
}

def @func_17882() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1680), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1655 = @func_8957() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(480), float32]) */;
  %1656 = cast(meta[relay.Constant][56] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %1657 = reshape(%1656, newshape=[1, 1680]) /* ty=Tensor[(1, 1680), float32] */;
  %1658 = @func_3777(%1657) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(2340), float32], Tensor[(4, ?, 16), float32], Tensor[(1, 1680), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1659 = @func_14712() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1660 = @func_12049() /* ty=(Tensor[(4, 16), float32],) */;
  %1661 = %1655.1;
  %1662 = %1658.2;
  %1663 = %1659.0;
  %1664 = %1660.0;
  (%1661, %1662, meta[relay.Constant][56] /* ty=Tensor[(1680), float32] */, %1663, %1664)
}

def @func_15799(%var_15797: Tensor[(480), float64], %var_15798: Tensor[(18, 130), float32]) -> (Tensor[(4, 16), float32], Tensor[(10, 11, 7), int16], Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(18, 130), float32]) {
  %1675 = fn (%var_15790: Tensor[(480), float64], %var_15791: Tensor[(18, 130), float32]) -> (Tensor[(4, 16), float32], Tensor[(10, 11, 7), int16], Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(18, 130), float32]) {
    %1665 = @func_12666() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(256), float64]) */;
    %1666 = @func_4971() /* ty=(Tensor[(4, 16), float32], Tensor[(10, 11, 7), int16]) */;
    %1667 = cast(%var_15790, dtype="float64") /* ty=Tensor[(480), float64] */;
    %1668 = cast(%var_15791, dtype="float32") /* ty=Tensor[(18, 130), float32] */;
    %1669 = reshape(%1667, newshape=[480]) /* ty=Tensor[(480), float64] */;
    %1670 = reshape(%1668, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
    %1671 = @func_7773(%1669, %1670) /* ty=(Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(2340), float32], Tensor[(2, 15, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1672 = %1665.1;
    %1673 = %1666.1;
    %1674 = %1671.0;
    (%1672, %1673, %1674, %var_15790, %var_15791)
  };
  %1675(%var_15797, %var_15798) /* ty=(Tensor[(4, 16), float32], Tensor[(10, 11, 7), int16], Tensor[(4, 16), float32], Tensor[(480), float64], Tensor[(18, 130), float32]) */
}

def @func_13614(%var_13612: Tensor[(15, 4, 12), float32]) -> Tensor[(15, 4, 12), float32] {
  @func_13611(%var_13612) /* ty=Tensor[(15, 4, 12), float32] */
}

def @func_17249() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1676 = @func_8115() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1677 = @func_4160() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1678 = @func_12666() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(256), float64]) */;
  %1679 = @func_15906() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1680 = %1676.0;
  %1681 = %1677.1;
  %1682 = %1678.0;
  %1683 = @func_4241() /* ty=Tensor[(4, 16), float32] */;
  %1684 = %1679.0;
  (%1680, %1681, %1682, %1683, %1684)
}

def @func_6528() -> (Tensor[(4, 16), float32],) {
  @func_6526() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_7438() -> (Tensor[(6, 16, 10), float32], Tensor[(2340), float32]) {
  %1685 = cast(meta[relay.Constant][57] /* ty=Tensor[(6, 16, 10), float32] */, dtype="float32") /* ty=Tensor[(6, 16, 10), float32] */;
  %1686 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
  %1687 = atanh(%1685) /* ty=Tensor[(6, 16, 10), float32] */;
  %1688 = %1686.0;
  (%1687, %1688)
}

def @func_17174() -> Tensor[(4, 16), float32] {
  %1689 = @func_10296() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1689.0
}

def @func_7515() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_7513() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_12703(%var_12702: Tensor[(1, 2340), float32]) -> (Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) {
  %1697 = fn (%var_12696: Tensor[(1, 2340), float32]) -> (Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) {
    %1690 = cast(%var_12696, dtype="float32") /* ty=Tensor[(1, 2340), float32] */;
    %1691 = reshape(%1690, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
    %1692 = @func_6337(%1691) /* ty=(Tensor[(4, ?, 16), float32], Tensor[(120), uint64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32]) */;
    %1693 = @func_11377() /* ty=Tensor[(2, 15, 16), float64] */;
    %1694 = @func_11177() /* ty=Tensor[(4, 16), float32] */;
    %1695 = @func_10079() /* ty=Tensor[(4, 16), float32] */;
    %1696 = %1692.2;
    (%1693, %1694, %1695, %1696, %var_12696)
  };
  %1697(%var_12702) /* ty=(Tensor[(2, 15, 16), float64], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(1, 2340), float32]) */
}

def @func_16531(%var_16530: Tensor[(16, 9, 3), float64]) -> Tensor[(16, 9, 3), float64] {
  %1699 = fn (%var_16522: Tensor[(16, 9, 3), float64]) -> Tensor[(16, 9, 3), float64] {
    %1698 = cast(%var_16522, dtype="float64") /* ty=Tensor[(16, 9, 3), float64] */;
    log10(%1698) /* ty=Tensor[(16, 9, 3), float64] */
  };
  %1699(%var_16530) /* ty=Tensor[(16, 9, 3), float64] */
}

def @func_6772() -> Tensor[(4, 16), float32] {
  %1700 = @func_2114() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1700.1
}

def @func_6601() -> (Tensor[(4, 16), float32],) {
  %1701 = @func_6555() /* ty=(Tensor[(2340), float64], Tensor[(4, 16), float32]) */;
  %1702 = %1701.1;
  (%1702,)
}

def @func_10657(%var_10655: int32, %var_10656: Tensor[(13, 13, 10), int32]) -> (Tensor[(13, 13, 10), int32], Tensor[(1, 480), float64]) {
  @func_10653(%var_10655, %var_10656) /* ty=(Tensor[(13, 13, 10), int32], Tensor[(1, 480), float64]) */
}

def @func_11199() -> (Tensor[(4, ?, 16), float64],) {
  @func_11197() /* ty=(Tensor[(4, ?, 16), float64],) */
}

def @func_8653(%var_8641: Tensor[(9, 8, 6), float64]) -> (Tensor[(9, 8, 6), float64],) {
  %1703 = cast(%var_8641, dtype="float64") /* ty=Tensor[(9, 8, 6), float64] */;
  %1704 = cosh(%1703) /* ty=Tensor[(9, 8, 6), float64] */;
  (%1704,)
}

def @func_12811() -> (Tensor[(4, 16), float32],) {
  %1707 = fn () -> (Tensor[(4, 16), float32],) {
    %1705 = @func_1332() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1706 = %1705.1;
    (%1706,)
  };
  %1707() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_9181() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1708 = @func_6526() /* ty=(Tensor[(4, 16), float32],) */;
  %1709 = @func_6509() /* ty=Tensor[(4, 16), float32] */;
  %1710 = %1708.0;
  (%1709, %1710)
}

def @func_11995() -> (Tensor[(4, 16), float32],) {
  @func_11993() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_8293() -> (Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32]) {
  @func_8291() /* ty=(Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_13156() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1711 = @func_10024() /* ty=Tensor[(4, 16), float32] */;
  %1712 = @func_6661() /* ty=Tensor[(4, 16), float32] */;
  %1713 = @func_3555() /* ty=Tensor[(4, 16), float32] */;
  (%1711, %1712, %1713)
}

def @func_4103(%var_4101: Tensor[(12, 60), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], float32, Tensor[(12, 60), float32]) {
  @func_4100(%var_4101) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], float32, Tensor[(12, 60), float32]) */
}

def @func_12725() -> Tensor[(4, 16), float32] {
  @func_12723() /* ty=Tensor[(4, 16), float32] */
}

def @func_18602() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1714 = @func_17550() /* ty=(Tensor[(4, 16), float32],) */;
  %1715 = %1714.0;
  %1716 = @func_6448() /* ty=Tensor[(4, 16), float32] */;
  (%1715, %1716)
}

def @func_19475() -> (Tensor[(4, 16), float32],) {
  %1718 = fn () -> (Tensor[(4, 16), float32],) {
    %1717 = @func_5225() /* ty=Tensor[(4, 16), float32] */;
    (%1717,)
  };
  %1718() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_14506(%var_14496: Tensor[(13, 12, 3), float32]) -> Tensor[(13, 12, 3), float32] {
  %1719 = cast(%var_14496, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
  log2(%1719) /* ty=Tensor[(13, 12, 3), float32] */
}

def @func_3679(%var_3677: Tensor[(10, 11, 7), float32]) -> (Tensor[(10, 11, 7), float32], Tensor[(4, 16), float32]) {
  @func_3676(%var_3677) /* ty=(Tensor[(10, 11, 7), float32], Tensor[(4, 16), float32]) */
}

def @func_17784() -> (Tensor[(4, 16), float32],) {
  @func_17782() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_19705() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  @func_19703() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_1408(%var_1406: Tensor[(13, 15, 12), float32]) -> Tensor[(13, 15, 12), float32] {
  @func_1405(%var_1406) /* ty=Tensor[(13, 15, 12), float32] */
}

def @func_19197(%var_19195: Tensor[(720), float32]) -> (Tensor[(240, 2), float64], Tensor[(2340), float32], Tensor[(720), float32]) {
  @func_19194(%var_19195) /* ty=(Tensor[(240, 2), float64], Tensor[(2340), float32], Tensor[(720), float32]) */
}

def @func_11934() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1724 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %1720 = @func_10917() /* ty=(Tensor[(4, 16), float32],) */;
    %1721 = @func_5302() /* ty=(Tensor[(4, 16), float32],) */;
    %1722 = %1720.0;
    %1723 = %1721.0;
    (%1722, %1723)
  };
  %1724() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_2260(%var_2255: Tensor[(9, 260), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(9, 260), float32], Tensor[(4, 16), float32]) {
  %1725 = @func_2094() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 16), uint16]) */;
  %1726 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %1727 = cast(%var_2255, dtype="float32") /* ty=Tensor[(9, 260), float32] */;
  %1728 = reshape(%1727, newshape=[2340]) /* ty=Tensor[(2340), float32] */;
  %1729 = @func_1783(%1728) /* ty=(Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(2340), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), int16], Tensor[(4, 16), float32], Tensor[(13, 15, 12), float32], Tensor[(4, 16), float32]) */;
  %1730 = @func_1205() /* ty=(Tensor[(4, 16), float32],) */;
  %1731 = @func_1216() /* ty=Tensor[(4, 16), float32] */;
  %1732 = %1725.0;
  %1733 = %1726.0;
  %1734 = %1729.7;
  %1735 = %1730.0;
  (%1731, %1732, %1733, %1734, %var_2255, %1735)
}

def @func_8760(%var_8759: Tensor[(150), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(150), float32], Tensor[(4, 16), float32], Tensor[(150, 1), float64]) {
  %1748 = fn (%var_8742: Tensor[(150), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(150), float32], Tensor[(4, 16), float32], Tensor[(150, 1), float64]) {
    %1736 = @func_4788() /* ty=(Tensor[(4, 16), float32],) */;
    %1737 = @func_4788() /* ty=(Tensor[(4, 16), float32],) */;
    %1738 = @func_7270() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1739 = cast(%var_8742, dtype="float32") /* ty=Tensor[(150), float32] */;
    %1740 = reshape(%1739, newshape=[150, 1]) /* ty=Tensor[(150, 1), float32] */;
    %1741 = @func_8063(%1740) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), bool], Tensor[(150, 1), float32]) */;
    %1742 = %1741.3;
    %1743 = cast(%1742, dtype="float64") /* ty=Tensor[(150, 1), float64] */;
    %1744 = %1736.0;
    %1745 = %1737.0;
    %1746 = %1738.1;
    %1747 = sqrt(%1743) /* ty=Tensor[(150, 1), float64] */;
    (%1744, %1745, %var_8742, %1746, %1747)
  };
  %1748(%var_8759) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(150), float32], Tensor[(4, 16), float32], Tensor[(150, 1), float64]) */
}

def @func_15390(%var_15377: Tensor[(256), float64]) -> (Tensor[(4, 16), float32], Tensor[(2, 16, 8), float64], Tensor[(256), float64]) {
  %1749 = cast(%var_15377, dtype="float64") /* ty=Tensor[(256), float64] */;
  %1750 = reshape(%1749, newshape=[2, 16, 8]) /* ty=Tensor[(2, 16, 8), float64] */;
  %1751 = @func_6874(%1750) /* ty=(Tensor[(2, 16, 8), float64],) */;
  %1752 = @func_6440() /* ty=Tensor[(4, 16), float32] */;
  %1753 = %1751.0;
  (%1752, %1753, %var_15377)
}

def @func_18229() -> Tensor[(4, 16), float32] {
  %1755 = fn () -> Tensor[(4, 16), float32] {
    %1754 = @func_9668() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1754.1
  };
  %1755() /* ty=Tensor[(4, 16), float32] */
}

def @func_19056() -> (Tensor[(120), uint64], Tensor[(4, 16), float32]) {
  %1756 = @func_10340() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(120), uint64]) */;
  %1757 = @func_13714() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32]) */;
  %1758 = %1756.2;
  %1759 = %1757.0;
  (%1758, %1759)
}

def @func_7271() -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1764 = fn () -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
    %1760 = @func_1100() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1761 = @func_1100() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
    %1762 = %1760.0;
    %1763 = %1761.3;
    (%1762, %1763)
  };
  %1764() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */
}

def @func_7650(%var_7635: Tensor[(3, 6, 16), float32]) -> Tensor[(3, 6, 16), float32] {
  %1765 = cast(%var_7635, dtype="float32") /* ty=Tensor[(3, 6, 16), float32] */;
  asinh(%1765) /* ty=Tensor[(3, 6, 16), float32] */
}

def @func_4242() -> Tensor[(4, 16), float32] {
  %1766 = fn () -> Tensor[(4, 16), float32] {
    @func_2511() /* ty=Tensor[(4, 16), float32] */
  };
  %1766() /* ty=Tensor[(4, 16), float32] */
}

def @func_2895(%var_2893: Tensor[(3, 780), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) {
  @func_2892(%var_2893) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(3, 780), uint32], Tensor[(4, ?, 16), float32], Tensor[(1680), float32]) */
}

def @func_4881() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1767 = @func_2533() /* ty=(Tensor[(4, ?, 16), float32],) */;
  %1768 = @func_1884() /* ty=(Tensor[(4, 16), float32],) */;
  %1769 = @func_2524() /* ty=(Tensor[(4, 16), float32],) */;
  %1770 = @func_4811() /* ty=Tensor[(4, 16), float32] */;
  %1771 = %1767.0;
  %1772 = @func_4241() /* ty=Tensor[(4, 16), float32] */;
  %1773 = %1768.0;
  %1774 = %1769.0;
  (%1770, %1771, %1772, %1773, %1774)
}

def @func_5075() -> (Tensor[(2340), float32],) {
  %1777 = fn () -> (Tensor[(2340), float32],) {
    %1775 = @func_3921() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, ?, 16), float32], Tensor[(4, 16), float32], Tensor[(2340), float32], Tensor[(4, 16), float32]) */;
    %1776 = %1775.4;
    (%1776,)
  };
  %1777() /* ty=(Tensor[(2340), float32],) */
}

def @func_8391() -> (Tensor[(4, ?, 4), bool],) {
  %1778 = @func_1100() /* ty=(Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1779 = %1778.1;
  (%1779,)
}

def @func_10718(%var_10678: Tensor[(5, 2, 3), float32]) -> (Tensor[(5, 2, 3), uint32],) {
  %1780 = cast(%var_10678, dtype="float32") /* ty=Tensor[(5, 2, 3), float32] */;
  %1781 = sinh(%1780) /* ty=Tensor[(5, 2, 3), float32] */;
  %1782 = cast(%var_10678, dtype="uint32") /* ty=Tensor[(5, 2, 3), uint32] */;
  %1783 = shape_of(%1781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1784 = cast(%1781, dtype="uint32") /* ty=Tensor[(5, 2, 3), uint32] */;
  %1785 = dyn.reshape(%1782, %1783, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1786 = maximum(%1784, %1785) /* ty=Tensor[(5, 2, 3), uint32] */;
  (%1786,)
}

def @func_6449() -> Tensor[(4, 16), float32] {
  %1787 = fn () -> Tensor[(4, 16), float32] {
    @func_3809() /* ty=Tensor[(4, 16), float32] */
  };
  %1787() /* ty=Tensor[(4, 16), float32] */
}

def @func_4824() -> Tensor[(4, ?, 16), float32] {
  %1789 = fn () -> Tensor[(4, ?, 16), float32] {
    %1788 = @func_2434() /* ty=(Tensor[(4, ?, 16), float32],) */;
    %1788.0
  };
  %1789() /* ty=Tensor[(4, ?, 16), float32] */
}

def @func_6727() -> (Tensor[(2340), float32], Tensor[(4, 16), float32]) {
  %1790 = @func_5074() /* ty=(Tensor[(2340), float32],) */;
  %1791 = %1790.0;
  %1792 = @func_3186() /* ty=Tensor[(4, 16), float32] */;
  (%1791, %1792)
}

def @func_10521() -> (Tensor[(4, 16), float32],) {
  %1794 = fn () -> (Tensor[(4, 16), float32],) {
    %1793 = @func_6509() /* ty=Tensor[(4, 16), float32] */;
    (%1793,)
  };
  %1794() /* ty=(Tensor[(4, 16), float32],) */
}

def @func_5940(%var_5938: Tensor[(720), float32]) -> (Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), int8], Tensor[(4, 16), float32], Tensor[(720), float32]) {
  @func_5937(%var_5938) /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(4, 16), float32], Tensor[(2, 15, 16), int8], Tensor[(4, 16), float32], Tensor[(720), float32]) */
}

def @func_3069() -> (Tensor[(4, 16), float32],) {
  %1795 = @func_2004() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1796 = %1795.1;
  (%1796,)
}

def @func_1100() -> (Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, 16), float32], Tensor[(4, 16), float32]) {
  %1797 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %1798 = @func_855() /* ty=(Tensor[(4, ?, 16), uint16], Tensor[(4, 16), float32], Tensor[(4, ?, 4), bool], Tensor[(4, ?, 16), float32]) */;
  %1799 = @func_961() /* ty=(Tensor[(4, 16), float32], Tensor[(4, 16), float32]) */;
  %1800 = @func_876() /* ty=(Tensor[(4, 16), float32],) */;
  %1801 = %1797.0;
  %1802 = %1798.2;
  %1803 = %1799.0;
  %1804 = %1800.0;
  (%1801, %1802, %1803, %1804)
}

def @func_9054(%var_9053: Tensor[(8, 3, 7), int64]) -> (Tensor[(8, 3, 7), bool],) {
  %1808 = fn (%var_9043: Tensor[(8, 3, 7), int64]) -> (Tensor[(8, 3, 7), bool],) {
    %1805 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 1, 7), int64] */, dtype="bool") /* ty=Tensor[(8, 1, 7), bool] */;
    %1806 = cast(%var_9043, dtype="bool") /* ty=Tensor[(8, 3, 7), bool] */;
    %1807 = greater(%1805, %1806) /* ty=Tensor[(8, 3, 7), bool] */;
    (%1807,)
  };
  %1808(%var_9053) /* ty=(Tensor[(8, 3, 7), bool],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen661/build/output.py:6487: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen661/build/output.py", line 6492, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(192) tvmgen_default_fused_reshape_power_cast_cast_reshape_floor_divide_kernel0(double* __restrict__ T_floor_divide, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  T_floor_divide[(((int)threadIdx.x))] = floor((((double)powf(placeholder[(((int)threadIdx.x))], placeholder1[(((int)threadIdx.x))])) / ((double)placeholder2[(((int)threadIdx.x))])));
}

extern "C" __global__ void __launch_bounds__(192) tvmgen_default_fused_cast_cast_reshape_minimum_kernel0(int* __restrict__ T_minimum, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_minimum[(((int)threadIdx.x))] = min(((int)placeholder[(((int)threadIdx.x))]), ((int)placeholder1[(((int)threadIdx.x))]));
}

extern "C" __global__ void __launch_bounds__(192) tvmgen_default_fused_log2_kernel0(float* __restrict__ T_log2, float* __restrict__ placeholder) {
  T_log2[(((int)threadIdx.x))] = __log2f(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


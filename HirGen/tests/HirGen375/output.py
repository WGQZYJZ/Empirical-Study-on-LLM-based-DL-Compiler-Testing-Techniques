import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_334 = relay.var("var_334", dtype = "float32", shape = (8, 15, 14))#candidate|334|(8, 15, 14)|var|float32
uop_335 = relay.atanh(var_334.astype('float32')) # shape=(8, 15, 14)
uop_343 = relay.asinh(uop_335.astype('float32')) # shape=(8, 15, 14)
bop_357 = relay.bitwise_xor(uop_335.astype('int32'), relay.reshape(uop_343.astype('int32'), relay.shape_of(uop_335))) # shape=(8, 15, 14)
output = bop_357
output2 = bop_357
func_412 = relay.Function([var_334,], output)
mod['func_412'] = func_412
mod = relay.transform.InferType()(mod)
var_413 = relay.var("var_413", dtype = "float32", shape = (8, 15, 14))#candidate|413|(8, 15, 14)|var|float32
output = func_412(var_413)
func_414 = relay.Function([var_413], output)
mutated_mod['func_414'] = func_414
mutated_mod = relay.transform.InferType()(mutated_mod)
var_653 = relay.var("var_653", dtype = "float64", shape = (2, 7, 1))#candidate|653|(2, 7, 1)|var|float64
uop_654 = relay.exp(var_653.astype('float64')) # shape=(2, 7, 1)
output = relay.Tuple([uop_654,])
output2 = relay.Tuple([uop_654,])
func_664 = relay.Function([var_653,], output)
mod['func_664'] = func_664
mod = relay.transform.InferType()(mod)
mutated_mod['func_664'] = func_664
mutated_mod = relay.transform.InferType()(mutated_mod)
var_665 = relay.var("var_665", dtype = "float64", shape = (2, 7, 1))#candidate|665|(2, 7, 1)|var|float64
func_664_call = mutated_mod.get_global_var('func_664')
call_666 = func_664_call(var_665)
output = call_666
func_667 = relay.Function([var_665], output)
mutated_mod['func_667'] = func_667
mutated_mod = relay.transform.InferType()(mutated_mod)
var_684 = relay.var("var_684", dtype = "uint16", shape = (16, 2, 5))#candidate|684|(16, 2, 5)|var|uint16
var_685 = relay.var("var_685", dtype = "uint16", shape = (16, 2, 5))#candidate|685|(16, 2, 5)|var|uint16
bop_686 = relay.left_shift(var_684.astype('uint16'), relay.reshape(var_685.astype('uint16'), relay.shape_of(var_684))) # shape=(16, 2, 5)
output = relay.Tuple([bop_686,])
output2 = relay.Tuple([bop_686,])
func_708 = relay.Function([var_684,var_685,], output)
mod['func_708'] = func_708
mod = relay.transform.InferType()(mod)
var_709 = relay.var("var_709", dtype = "uint16", shape = (16, 2, 5))#candidate|709|(16, 2, 5)|var|uint16
var_710 = relay.var("var_710", dtype = "uint16", shape = (16, 2, 5))#candidate|710|(16, 2, 5)|var|uint16
output = func_708(var_709,var_710,)
func_711 = relay.Function([var_709,var_710,], output)
mutated_mod['func_711'] = func_711
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1031 = relay.var("var_1031", dtype = "float64", shape = (9, 2, 13))#candidate|1031|(9, 2, 13)|var|float64
const_1032 = relay.const([[[1.391458,1.738892,7.411887,6.481594,-5.689941,-9.603467,-4.019236,3.852013,-2.860428,-8.256022,-5.804635,5.574109,-0.944145],[5.679062,4.493330,-5.868590,-2.278200,-0.380237,9.669232,-0.427392,-7.942581,6.302361,2.020175,2.300297,-4.859674,-6.847249]],[[7.120986,0.682160,1.902306,8.917513,5.660833,9.756631,7.472323,-8.895920,7.211240,-0.785675,6.750153,7.854533,9.948132],[-2.635395,-8.225787,-1.376024,-1.112443,-5.303140,-7.020247,-4.777416,0.787386,5.225080,1.251135,3.918212,-4.790071,5.505498]],[[-4.430318,-4.143868,0.286140,1.031031,-2.982033,0.525581,5.646930,-6.787088,5.614120,-5.236252,-0.312269,7.874278,3.755797],[0.421336,1.071693,2.130849,1.570998,0.842279,-0.021558,-7.966141,-9.880284,8.083055,5.270539,4.729999,-9.317717,-2.970169]],[[0.049805,-3.451336,-2.194928,-4.944563,-6.819742,7.324020,-6.940733,-3.216288,3.675418,8.759131,1.680068,-4.996824,-4.521291],[4.885827,2.376304,6.209809,-5.071409,7.657009,3.839563,-5.065950,3.712446,0.026688,-8.377641,-2.876624,9.896445,1.338020]],[[-8.245078,1.890655,2.869136,3.532283,-5.854099,3.779471,-0.047154,-6.440122,-3.415538,-3.226677,-4.831766,8.755988,6.599674],[9.290019,2.444247,4.222680,-1.267347,-5.615339,-2.913352,-6.108583,0.594966,3.444579,-0.823934,8.270241,-8.701923,-3.760452]],[[-2.622816,9.565980,7.281915,-1.739496,3.919207,-1.108646,-1.025036,3.493961,-1.026993,-3.496217,7.905843,6.920650,4.606015],[-1.094145,-4.481349,-8.052630,7.756138,8.972658,-8.146997,4.366656,1.672796,8.630244,9.617575,-4.409685,-0.710523,2.577197]],[[-2.900895,9.004797,2.832216,3.606464,-8.836557,-4.383409,2.554742,-4.366920,5.290834,2.879047,8.809611,9.899071,2.235674],[-4.928464,-0.699414,7.347053,2.380193,-3.605059,8.869560,-4.238878,9.834554,4.097771,-4.090919,3.304748,8.671364,9.357429]],[[6.364673,5.297431,-5.567197,9.020556,9.556451,-9.994185,0.592038,-6.430263,-5.466755,6.143832,6.503355,7.686850,-4.069089],[-3.437737,9.495896,8.547776,-2.033106,-3.692673,-3.316412,8.167585,-9.813180,-1.889407,-0.323821,-6.846008,-9.909563,-1.523411]],[[-7.590440,5.679487,-6.578826,4.645200,6.823255,7.136008,2.816979,7.535410,0.183600,-1.042667,-7.282110,9.303412,2.919010],[7.897296,9.771247,3.983529,3.083610,3.231662,-1.429763,-8.687287,4.575347,1.238439,6.761329,-8.317110,5.693760,-1.259731]]], dtype = "float64")#candidate|1032|(9, 2, 13)|const|float64
bop_1033 = relay.multiply(var_1031.astype('float64'), relay.reshape(const_1032.astype('float64'), relay.shape_of(var_1031))) # shape=(9, 2, 13)
const_1036 = relay.const([[[4.473397,6.946088,-8.864984,8.152139,-4.301677,-0.272327,8.326635,1.267998,4.320854,-1.374390,3.003903,5.555947,-3.367552],[8.013561,-0.957737,-2.250847,2.966735,2.162317,-6.082732,6.186533,4.119833,-3.636137,-1.534117,-2.420417,3.908242,8.433770]],[[5.798962,7.991005,-0.489265,-2.630493,0.828874,5.280234,-4.266996,-8.871816,2.264076,0.828712,7.519300,-4.952998,2.097484],[2.194199,5.107194,0.495974,-3.555772,-6.693826,-0.501489,7.975640,-9.408439,-9.632240,3.320719,5.295044,-6.778408,8.379800]],[[-9.462344,4.666080,-5.019580,-2.625800,-3.539373,9.853654,-0.686942,7.346659,-6.400326,1.748522,7.963866,6.409246,-8.028073],[-6.135095,-2.298929,5.113027,8.223664,-9.743078,4.482616,0.624292,3.309452,-0.569036,-2.012995,-8.126041,-5.204453,5.313498]],[[8.500274,-6.200084,-7.608007,-3.436152,-5.887544,4.736482,0.986454,-8.881303,4.402950,-9.366528,-8.450849,-1.200009,-3.338396],[7.091917,-5.977691,4.412801,8.440186,-3.104021,-3.472416,-6.360484,-6.336603,-5.495209,-6.012389,-8.851481,-1.385385,-0.940990]],[[-9.568014,6.051294,2.925593,8.803974,-3.178292,5.061942,6.353623,3.087434,-6.030362,-0.750905,1.632773,-8.439136,7.165657],[7.841883,7.722913,-5.704663,9.977608,5.248805,-9.693647,-6.094830,7.928283,9.597507,2.070565,-5.753120,-9.255239,-6.794775]],[[5.344683,5.613815,-2.622590,-2.381951,-4.442763,8.320440,-5.046954,-9.007885,0.667226,9.083235,-1.946964,9.165743,5.544241],[-8.007201,8.720397,-5.335503,3.397778,2.424122,-0.089147,-7.077186,8.584985,-0.531878,-7.746662,-6.084552,-0.098503,-3.157251]],[[-1.971129,-9.914487,7.600471,-6.888108,-0.328487,6.885664,-5.539551,4.101043,-1.708244,-9.411675,9.066812,6.422883,1.373703],[6.216535,-0.605656,1.764676,-1.356619,-9.849915,-9.181659,-8.088551,7.840528,-7.403657,-3.284464,8.673472,1.081625,-2.933147]],[[-6.154949,-7.422397,-9.817626,3.368464,2.301798,8.846633,1.376630,4.855607,-9.926057,-9.999893,7.837825,-6.329491,-2.530933],[-6.600176,7.254134,-9.987064,3.932028,2.709258,-8.378107,-9.294728,4.900259,1.986616,1.352391,-5.387438,-7.139588,-9.304358]],[[-3.152233,-7.262447,-5.094703,-5.494907,7.781253,3.964833,-7.476774,-1.078957,-8.953915,-0.662716,0.326713,-2.685658,4.490759],[-6.008080,3.439588,8.861187,8.422072,-8.694946,6.229545,5.331834,2.696257,0.098390,-6.123115,-7.311504,-0.126619,-6.513009]]], dtype = "float64")#candidate|1036|(9, 2, 13)|const|float64
bop_1037 = relay.divide(bop_1033.astype('float32'), relay.reshape(const_1036.astype('float32'), relay.shape_of(bop_1033))) # shape=(9, 2, 13)
var_1040 = relay.var("var_1040", dtype = "float64", shape = (9, 2, 13))#candidate|1040|(9, 2, 13)|var|float64
bop_1041 = relay.bitwise_xor(bop_1033.astype('uint64'), relay.reshape(var_1040.astype('uint64'), relay.shape_of(bop_1033))) # shape=(9, 2, 13)
func_664_call = mod.get_global_var('func_664')
func_667_call = mutated_mod.get_global_var('func_667')
const_1050 = relay.const([[1.421971,9.120463,1.653997,0.663185,3.812056,1.493086,5.483349,4.754887,0.290296,-2.003523,-8.218159,-3.878211,-4.187758,2.799459]], dtype = "float64")#candidate|1050|(1, 14)|const|float64
call_1049 = relay.TupleGetItem(func_664_call(relay.reshape(const_1050.astype('float64'), [2, 7, 1])), 0)
call_1051 = relay.TupleGetItem(func_667_call(relay.reshape(const_1050.astype('float64'), [2, 7, 1])), 0)
uop_1059 = relay.sqrt(bop_1037.astype('float64')) # shape=(9, 2, 13)
output = relay.Tuple([bop_1041,call_1049,const_1050,uop_1059,])
output2 = relay.Tuple([bop_1041,call_1051,const_1050,uop_1059,])
func_1079 = relay.Function([var_1031,var_1040,], output)
mod['func_1079'] = func_1079
mod = relay.transform.InferType()(mod)
var_1080 = relay.var("var_1080", dtype = "float64", shape = (9, 2, 13))#candidate|1080|(9, 2, 13)|var|float64
var_1081 = relay.var("var_1081", dtype = "float64", shape = (9, 2, 13))#candidate|1081|(9, 2, 13)|var|float64
output = func_1079(var_1080,var_1081,)
func_1082 = relay.Function([var_1080,var_1081,], output)
mutated_mod['func_1082'] = func_1082
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1600 = relay.var("var_1600", dtype = "uint8", shape = (6, 8, 5))#candidate|1600|(6, 8, 5)|var|uint8
var_1601 = relay.var("var_1601", dtype = "uint8", shape = (6, 8, 5))#candidate|1601|(6, 8, 5)|var|uint8
bop_1602 = relay.greater_equal(var_1600.astype('bool'), relay.reshape(var_1601.astype('bool'), relay.shape_of(var_1600))) # shape=(6, 8, 5)
var_1610 = relay.var("var_1610", dtype = "bool", shape = (6, 8, 5))#candidate|1610|(6, 8, 5)|var|bool
bop_1611 = relay.bitwise_and(bop_1602.astype('uint64'), relay.reshape(var_1610.astype('uint64'), relay.shape_of(bop_1602))) # shape=(6, 8, 5)
output = relay.Tuple([bop_1611,])
output2 = relay.Tuple([bop_1611,])
func_1620 = relay.Function([var_1600,var_1601,var_1610,], output)
mod['func_1620'] = func_1620
mod = relay.transform.InferType()(mod)
mutated_mod['func_1620'] = func_1620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1620_call = mutated_mod.get_global_var('func_1620')
var_1622 = relay.var("var_1622", dtype = "uint8", shape = (6, 8, 5))#candidate|1622|(6, 8, 5)|var|uint8
var_1623 = relay.var("var_1623", dtype = "uint8", shape = (6, 8, 5))#candidate|1623|(6, 8, 5)|var|uint8
var_1624 = relay.var("var_1624", dtype = "bool", shape = (6, 8, 5))#candidate|1624|(6, 8, 5)|var|bool
call_1621 = func_1620_call(var_1622,var_1623,var_1624,)
output = call_1621
func_1625 = relay.Function([var_1622,var_1623,var_1624,], output)
mutated_mod['func_1625'] = func_1625
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1925 = relay.var("var_1925", dtype = "float64", shape = (11, 11, 15))#candidate|1925|(11, 11, 15)|var|float64
uop_1926 = relay.log2(var_1925.astype('float64')) # shape=(11, 11, 15)
output = uop_1926
output2 = uop_1926
func_1931 = relay.Function([var_1925,], output)
mod['func_1931'] = func_1931
mod = relay.transform.InferType()(mod)
var_1932 = relay.var("var_1932", dtype = "float64", shape = (11, 11, 15))#candidate|1932|(11, 11, 15)|var|float64
output = func_1931(var_1932)
func_1933 = relay.Function([var_1932], output)
mutated_mod['func_1933'] = func_1933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2261 = relay.var("var_2261", dtype = "float64", shape = (2, 11, 16))#candidate|2261|(2, 11, 16)|var|float64
uop_2262 = relay.log(var_2261.astype('float64')) # shape=(2, 11, 16)
bop_2268 = relay.divide(uop_2262.astype('float32'), relay.reshape(var_2261.astype('float32'), relay.shape_of(uop_2262))) # shape=(2, 11, 16)
func_708_call = mod.get_global_var('func_708')
func_711_call = mutated_mod.get_global_var('func_711')
const_2273 = relay.const([[-7],[10],[7],[-3],[8],[-7],[-8],[5],[-8],[-1],[-3],[-7],[-10],[-4],[1],[8],[-8],[-3],[2],[5],[1],[2],[10],[-9],[6],[-1],[6],[-7],[-10],[-5],[-8],[2],[3],[2],[-1],[-7],[7],[-2],[-7],[-9],[8],[-1],[-7],[1],[3],[10],[-10],[9],[8],[-1],[8],[-3],[-7],[6],[-3],[6],[5],[8],[-10],[-9],[6],[4],[4],[9],[7],[-2],[8],[-2],[10],[9],[-2],[-7],[-4],[9],[3],[-7],[-1],[-6],[8],[-8],[-7],[-10],[8],[2],[-9],[-3],[7],[2],[-6],[-7],[10],[9],[9],[-8],[-3],[10],[9],[-5],[-1],[6],[7],[4],[1],[7],[-8],[-8],[8],[-2],[5],[2],[8],[-5],[3],[5],[8],[-5],[-3],[1],[7],[-3],[10],[-3],[-1],[5],[-5],[-1],[8],[-10],[-10],[4],[-8],[-5],[10],[-7],[3],[1],[-3],[4],[-1],[9],[6],[9],[-8],[7],[-5],[5],[2],[4],[-7],[-10],[-3],[6],[7],[-10],[-10],[4],[-9],[-2],[-5],[-6]], dtype = "uint16")#candidate|2273|(160, 1)|const|uint16
call_2272 = relay.TupleGetItem(func_708_call(relay.reshape(const_2273.astype('uint16'), [16, 2, 5]), relay.reshape(const_2273.astype('uint16'), [16, 2, 5]), ), 0)
call_2274 = relay.TupleGetItem(func_711_call(relay.reshape(const_2273.astype('uint16'), [16, 2, 5]), relay.reshape(const_2273.astype('uint16'), [16, 2, 5]), ), 0)
output = relay.Tuple([bop_2268,call_2272,const_2273,])
output2 = relay.Tuple([bop_2268,call_2274,const_2273,])
func_2276 = relay.Function([var_2261,], output)
mod['func_2276'] = func_2276
mod = relay.transform.InferType()(mod)
mutated_mod['func_2276'] = func_2276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2277 = relay.var("var_2277", dtype = "float64", shape = (2, 11, 16))#candidate|2277|(2, 11, 16)|var|float64
func_2276_call = mutated_mod.get_global_var('func_2276')
call_2278 = func_2276_call(var_2277)
output = call_2278
func_2279 = relay.Function([var_2277], output)
mutated_mod['func_2279'] = func_2279
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2330 = relay.var("var_2330", dtype = "float32", shape = (7, 8, 13))#candidate|2330|(7, 8, 13)|var|float32
uop_2331 = relay.exp(var_2330.astype('float32')) # shape=(7, 8, 13)
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
var_2341 = relay.var("var_2341", dtype = "float32", shape = (1680,))#candidate|2341|(1680,)|var|float32
call_2340 = func_412_call(relay.reshape(var_2341.astype('float32'), [8, 15, 14]))
call_2342 = func_412_call(relay.reshape(var_2341.astype('float32'), [8, 15, 14]))
func_2276_call = mod.get_global_var('func_2276')
func_2279_call = mutated_mod.get_global_var('func_2279')
var_2352 = relay.var("var_2352", dtype = "float64", shape = (352,))#candidate|2352|(352,)|var|float64
call_2351 = relay.TupleGetItem(func_2276_call(relay.reshape(var_2352.astype('float64'), [2, 11, 16])), 2)
call_2353 = relay.TupleGetItem(func_2279_call(relay.reshape(var_2352.astype('float64'), [2, 11, 16])), 2)
func_664_call = mod.get_global_var('func_664')
func_667_call = mutated_mod.get_global_var('func_667')
const_2355 = relay.const([0.540807,5.998993,-4.040030,5.137417,-8.180005,-2.564263,1.178229,2.819232,-4.997036,-6.075711,-0.783537,-8.547977,0.842847,-0.358489], dtype = "float64")#candidate|2355|(14,)|const|float64
call_2354 = relay.TupleGetItem(func_664_call(relay.reshape(const_2355.astype('float64'), [2, 7, 1])), 0)
call_2356 = relay.TupleGetItem(func_667_call(relay.reshape(const_2355.astype('float64'), [2, 7, 1])), 0)
func_664_call = mod.get_global_var('func_664')
func_667_call = mutated_mod.get_global_var('func_667')
call_2363 = relay.TupleGetItem(func_664_call(relay.reshape(call_2354.astype('float64'), [2, 7, 1])), 0)
call_2364 = relay.TupleGetItem(func_667_call(relay.reshape(call_2354.astype('float64'), [2, 7, 1])), 0)
var_2373 = relay.var("var_2373", dtype = "int32", shape = (8, 15, 14))#candidate|2373|(8, 15, 14)|var|int32
bop_2374 = relay.divide(call_2340.astype('float32'), relay.reshape(var_2373.astype('float32'), relay.shape_of(call_2340))) # shape=(8, 15, 14)
bop_2377 = relay.divide(call_2342.astype('float32'), relay.reshape(var_2373.astype('float32'), relay.shape_of(call_2342))) # shape=(8, 15, 14)
func_1079_call = mod.get_global_var('func_1079')
func_1082_call = mutated_mod.get_global_var('func_1082')
var_2408 = relay.var("var_2408", dtype = "float64", shape = (3, 78))#candidate|2408|(3, 78)|var|float64
call_2407 = relay.TupleGetItem(func_1079_call(relay.reshape(var_2408.astype('float64'), [9, 2, 13]), relay.reshape(var_2408.astype('float64'), [9, 2, 13]), ), 0)
call_2409 = relay.TupleGetItem(func_1082_call(relay.reshape(var_2408.astype('float64'), [9, 2, 13]), relay.reshape(var_2408.astype('float64'), [9, 2, 13]), ), 0)
output = relay.Tuple([uop_2331,var_2341,call_2351,var_2352,call_2354,const_2355,call_2363,bop_2374,call_2407,var_2408,])
output2 = relay.Tuple([uop_2331,var_2341,call_2353,var_2352,call_2356,const_2355,call_2364,bop_2377,call_2409,var_2408,])
func_2414 = relay.Function([var_2330,var_2341,var_2352,var_2373,var_2408,], output)
mod['func_2414'] = func_2414
mod = relay.transform.InferType()(mod)
var_2415 = relay.var("var_2415", dtype = "float32", shape = (7, 8, 13))#candidate|2415|(7, 8, 13)|var|float32
var_2416 = relay.var("var_2416", dtype = "float32", shape = (1680,))#candidate|2416|(1680,)|var|float32
var_2417 = relay.var("var_2417", dtype = "float64", shape = (352,))#candidate|2417|(352,)|var|float64
var_2418 = relay.var("var_2418", dtype = "int32", shape = (8, 15, 14))#candidate|2418|(8, 15, 14)|var|int32
var_2419 = relay.var("var_2419", dtype = "float64", shape = (3, 78))#candidate|2419|(3, 78)|var|float64
output = func_2414(var_2415,var_2416,var_2417,var_2418,var_2419,)
func_2420 = relay.Function([var_2415,var_2416,var_2417,var_2418,var_2419,], output)
mutated_mod['func_2420'] = func_2420
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2676 = relay.var("var_2676", dtype = "int8", shape = (14, 9, 3))#candidate|2676|(14, 9, 3)|var|int8
var_2677 = relay.var("var_2677", dtype = "int8", shape = (14, 9, 3))#candidate|2677|(14, 9, 3)|var|int8
bop_2678 = relay.bitwise_xor(var_2676.astype('int8'), relay.reshape(var_2677.astype('int8'), relay.shape_of(var_2676))) # shape=(14, 9, 3)
output = relay.Tuple([bop_2678,])
output2 = relay.Tuple([bop_2678,])
func_2683 = relay.Function([var_2676,var_2677,], output)
mod['func_2683'] = func_2683
mod = relay.transform.InferType()(mod)
var_2684 = relay.var("var_2684", dtype = "int8", shape = (14, 9, 3))#candidate|2684|(14, 9, 3)|var|int8
var_2685 = relay.var("var_2685", dtype = "int8", shape = (14, 9, 3))#candidate|2685|(14, 9, 3)|var|int8
output = func_2683(var_2684,var_2685,)
func_2686 = relay.Function([var_2684,var_2685,], output)
mutated_mod['func_2686'] = func_2686
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2698 = relay.var("var_2698", dtype = "bool", shape = (1, 3, 5))#candidate|2698|(1, 3, 5)|var|bool
var_2699 = relay.var("var_2699", dtype = "bool", shape = (15, 3, 5))#candidate|2699|(15, 3, 5)|var|bool
bop_2700 = relay.logical_or(var_2698.astype('bool'), var_2699.astype('bool')) # shape=(15, 3, 5)
func_1079_call = mod.get_global_var('func_1079')
func_1082_call = mutated_mod.get_global_var('func_1082')
var_2706 = relay.var("var_2706", dtype = "float64", shape = (234,))#candidate|2706|(234,)|var|float64
call_2705 = relay.TupleGetItem(func_1079_call(relay.reshape(var_2706.astype('float64'), [9, 2, 13]), relay.reshape(var_2706.astype('float64'), [9, 2, 13]), ), 2)
call_2707 = relay.TupleGetItem(func_1082_call(relay.reshape(var_2706.astype('float64'), [9, 2, 13]), relay.reshape(var_2706.astype('float64'), [9, 2, 13]), ), 2)
func_1079_call = mod.get_global_var('func_1079')
func_1082_call = mutated_mod.get_global_var('func_1082')
call_2708 = relay.TupleGetItem(func_1079_call(relay.reshape(var_2706.astype('float64'), [9, 2, 13]), relay.reshape(var_2706.astype('float64'), [9, 2, 13]), ), 2)
call_2709 = relay.TupleGetItem(func_1082_call(relay.reshape(var_2706.astype('float64'), [9, 2, 13]), relay.reshape(var_2706.astype('float64'), [9, 2, 13]), ), 2)
func_2414_call = mod.get_global_var('func_2414')
func_2420_call = mutated_mod.get_global_var('func_2420')
const_2711 = relay.const([-7.044815,7.977346,-5.626379,9.092344,1.100651,1.047403,-1.404036,-3.705506,-2.295906,1.353987,1.006746,-9.587243,-2.179010,2.554551,-0.837048,7.654884,-3.431998,2.269627,-9.252955,-5.339789,-9.583273,-5.857666,8.831522,-2.764876,-5.387045,5.047854,1.164686,6.980447,-5.733422,3.567124,-9.527465,-8.271149,8.813394,4.780115,-6.725285,3.466634,5.583093,-8.128176,4.836535,-6.534464,-8.712378,7.814663,5.774108,6.528271,0.843399,8.433443,3.655610,-9.676345,9.704831,-0.059048,-6.952659,-4.998250,0.136943,-9.743552,-5.364297,9.359220,-7.998804,-1.515608,8.691289,4.158105,-7.008897,-5.212860,-6.686699,7.335965,-3.817494,-4.162909,4.872273,-9.282648,3.903744,7.638293,-1.285141,-6.365620,9.163457,-9.961825,0.974661,-0.639155,-8.965980,0.945129,1.714306,-2.517722,3.173585,-5.815412,-3.672464,9.777226,5.127851,8.129553,0.447068,-2.940858,-7.512230,4.605085,0.810898,0.491903,-0.708765,-1.605906,2.411926,0.824503,1.819785,-0.768757,3.512951,0.120338,-2.997078,-1.290490,9.352038,9.924723,9.329494,6.486135,-7.539342,3.691250,7.409792,-6.056997,-4.165665,8.004841,-0.874435,8.905920,-4.696359,-9.922208,5.023099,-9.133593,-0.065958,-1.644349,7.216342,-1.635373,1.173037,-0.890840,6.115290,4.265763,7.859967,-9.664948,-8.872719,4.864007,-4.658063,-5.816363,-2.621199,-9.032459,-4.050267,-7.015682,-3.687432,1.596044,-3.566128,7.687518,-2.322597,-1.231889,0.470278,5.982070,-7.030574,-0.691922,0.920014,0.377083,-2.437423,-4.790324,-3.265874,-6.120867,0.484176,-2.809612,1.670623,4.915346,8.701495,2.882472,-8.817321,-1.945192,7.903387,-2.334542,4.269334,-6.107536,2.951605,-0.229085,-5.120107,4.132617,-9.235965,3.653653,0.863314,-4.123208,-9.826307,4.101185,-9.633291,-1.036554,3.050032,-1.300206,-4.401205,-7.004838,8.050982,1.905705,0.162396,5.416385,6.490358,2.228513,-7.054138,5.080050,-3.900780,4.492839,-3.079662,-4.823098,-4.888390,9.806801,-2.583356,2.815841,-4.603794,5.740317,5.666207,-6.327930,6.889927,5.819518,0.444273,8.958616,5.364310,-1.849981,-7.696646,8.276585,-1.198147,1.852609,-6.922871,-2.891597,4.863110,-7.948284,5.122857,8.618213,4.138206,-5.942824,7.688010,-8.736714,-7.699193,7.804164,0.060572,-0.056697,3.285219,-3.085166,-7.347717,-0.216018,-6.969564,-0.063890,7.363969,9.759528,-3.615075,5.008504,9.679031,-5.727714,9.382866,-5.630907,6.364863,-8.823454,-2.091075,-5.153148,5.495860,-3.212308,-4.158603,2.878915,3.380945,-0.991087,-1.092172,9.911196,9.222578,-7.468782,0.424984,9.232741,9.960666,5.709655,4.644236,-7.439226,0.336114,-6.213404,8.441545,7.140454,-1.333808,-7.330109,-8.668335,-5.734060,2.953074,-8.234112,6.610609,6.516074,3.619728,-2.589187,3.453831,0.955680,-8.740262,-2.093297,-8.539621,-0.080291,4.025355,3.226641,-1.695723,9.604226,-5.357194,9.812703,6.710443,-8.058368,0.425992,2.150843,0.385176,9.368984,9.622641,5.815184,-5.804904,-4.793381,-1.734578,9.318461,-6.863344,2.733741,-7.650502,-8.618417,2.203856,-2.049662,-7.215592,4.742201,-1.323633,8.676275,-7.042108,7.245387,-5.183200,-1.745063,-6.584360,1.543185,-9.114190,5.522355,3.256438,1.026178,0.654903,-0.131243,3.459934,9.241802,-3.333985,7.467775,-7.669823,3.841061,9.366250,2.365292,0.916582,-8.385168,7.280076,-3.149080,9.371841,-2.506064,9.091057,-1.148844,-6.471244,1.756547,-9.588191,-2.937289,2.025326,2.718360,1.198512,-3.743722,-3.534264,6.066093,9.162960,-1.422184,3.295304,7.267351,1.081580,2.325114,4.848665,8.885984,-2.727556,-6.226262,0.611408,-3.217405,1.743811,-2.786760,6.603409,7.521285,7.934722,6.051937,-9.677927,-0.963331,9.151587,-0.018435,-7.591565,-4.326208,4.760590,-3.544929,1.881758,8.119901,-4.807184,-8.889765,3.547638,-7.682422,2.320425,0.974628,-6.543753,-5.538989,-6.115321,-5.125435,-6.428386,8.597585,-7.555936,-2.019328,-6.472925,-0.519589,1.738973,-5.464859,-4.151981,-3.899991,-1.003593,-7.687925,8.052017,-2.595297,2.502616,-3.389593,-5.601421,0.072198,2.512938,-5.011649,9.869116,-1.125309,9.485725,-6.932418,3.724302,2.178310,-3.282044,-1.595713,-3.688217,8.544436,-0.231639,4.503960,1.152777,9.029325,0.080000,-3.630605,-1.444294,7.428941,7.750944,9.557514,-5.510122,2.801944,-0.059662,-1.450347,-0.474350,-4.978346,0.477877,8.394649,-9.145371,-5.412179,-0.339232,6.217431,4.630091,-4.324853,-7.331701,-5.556515,0.481431,7.665321,0.532766,-4.485010,-2.853289,-6.506712,2.699544,-4.171976,-5.099542,6.532023,-4.010970,8.897384,8.908052,-4.585351,-4.106228,1.092611,-9.009581,7.839721,-3.575290,-7.040738,7.139310,7.594710,-8.132915,-5.178670,-5.018463,-8.716181,-9.172065,-8.535247,9.721178,5.807750,2.272885,4.948240,-3.604935,-3.821268,6.882420,0.434457,7.698778,8.819695,-0.089381,9.471452,2.677212,8.500445,3.164108,3.991295,5.031484,-2.983496,9.397646,-4.756257,4.354191,0.087446,5.029276,3.740502,9.944979,0.205427,-0.965747,-8.304643,-0.403719,-7.556560,8.783387,-1.652543,-7.021066,-5.879570,5.446446,1.848441,8.270704,0.469656,7.140127,7.290005,4.671466,5.705149,0.194747,7.325164,7.285236,-8.157441,9.839621,0.034197,4.304536,-8.924449,4.158454,7.220206,-5.618134,6.986210,1.938938,-4.011536,7.793533,0.431249,5.863725,-2.693409,-1.204622,9.608596,-0.485904,9.337389,-1.588143,-1.117732,-6.836491,-2.626880,-0.357997,-0.167717,7.184737,-0.245617,-3.193355,3.049847,-5.525731,3.256050,-2.116950,-5.878925,9.672555,7.778793,6.979865,0.566212,2.426575,-4.994415,-5.809889,-4.866684,2.200085,-6.859032,-8.015512,4.073982,-6.144800,0.078247,-5.512024,3.996056,6.537704,4.543904,-1.874714,-6.849931,0.424882,4.554395,-6.834946,2.827826,-4.387189,5.782481,1.843276,4.965778,9.971829,6.189258,-1.459430,-1.810573,1.387137,3.212426,-3.604791,3.610882,-0.540987,1.658332,-7.278714,6.734349,6.642113,9.934057,8.201894,-5.414576,6.720708,-6.708099,-5.030096,-3.218411,5.809597,2.019596,2.027579,4.236063,3.737698,-9.506500,3.798890,-9.480056,6.012664,3.230931,-9.668726,0.038910,9.075929,5.578956,-5.299993,7.879819,6.681871,-6.093100,-9.194665,8.633470,-2.118659,9.974482,9.998117,-4.332676,-9.306064,4.497723,2.091907,-4.911263,7.981058,-3.832648,1.682760,8.483171,-1.035721,-5.639471,1.709563,-6.947937,1.472056,1.809490,1.249917,4.165237,7.552608,-7.618038,-5.796582,-5.289531,6.514489,7.451059,-4.925652,3.182245,-5.843653,2.689476,9.263156,-3.445222,-6.679529,3.195430,6.116648,0.410287,-1.456823,-2.746652,-0.709876,-4.571955,2.098222,9.862796,-4.317638,0.844070,-6.120352,-0.708058,-3.793832,-2.727868,-6.482573,3.425054,2.442272,-6.844087,-1.876051,-4.646159,0.619502,-8.209509,-9.210202,6.106801,3.677785,-0.438553,7.790412,0.671541,4.465407,-8.800182,-3.970228,5.833084,-1.855664,5.623115,-2.900598,-3.536948,-4.185653,6.313585,-3.848391,5.277829,3.937263,9.293196,-9.445518,-0.030752,-9.583088,2.247210,-2.962024,-1.443674,-6.202416,-6.293812,5.188043,6.221288,0.132545,6.508146,3.810708,4.470956,-9.515357,8.345230,-3.529319,-5.851240,9.577518,2.214229,-3.982329,-4.154068,6.002140,-9.988882,7.427331,-3.039625,-9.884358,-6.728542,-3.783230,-3.575009,-9.280600,1.923461,2.768339,-8.137468,3.889384,7.576174,5.780594,-9.463084,-7.848603,-6.641453], dtype = "float32")#candidate|2711|(728,)|const|float32
var_2712 = relay.var("var_2712", dtype = "float32", shape = (1680, 1))#candidate|2712|(1680, 1)|var|float32
var_2713 = relay.var("var_2713", dtype = "float64", shape = (352,))#candidate|2713|(352,)|var|float64
call_2710 = relay.TupleGetItem(func_2414_call(relay.reshape(const_2711.astype('float32'), [7, 8, 13]), relay.reshape(var_2712.astype('float32'), [1680,]), relay.reshape(var_2713.astype('float64'), [352,]), relay.reshape(var_2712.astype('int32'), [8, 15, 14]), relay.reshape(var_2706.astype('float64'), [3, 78]), ), 9)
call_2714 = relay.TupleGetItem(func_2420_call(relay.reshape(const_2711.astype('float32'), [7, 8, 13]), relay.reshape(var_2712.astype('float32'), [1680,]), relay.reshape(var_2713.astype('float64'), [352,]), relay.reshape(var_2712.astype('int32'), [8, 15, 14]), relay.reshape(var_2706.astype('float64'), [3, 78]), ), 9)
func_2276_call = mod.get_global_var('func_2276')
func_2279_call = mutated_mod.get_global_var('func_2279')
call_2718 = relay.TupleGetItem(func_2276_call(relay.reshape(var_2713.astype('float64'), [2, 11, 16])), 0)
call_2719 = relay.TupleGetItem(func_2279_call(relay.reshape(var_2713.astype('float64'), [2, 11, 16])), 0)
func_2683_call = mod.get_global_var('func_2683')
func_2686_call = mutated_mod.get_global_var('func_2686')
var_2727 = relay.var("var_2727", dtype = "int8", shape = (42, 9))#candidate|2727|(42, 9)|var|int8
call_2726 = relay.TupleGetItem(func_2683_call(relay.reshape(var_2727.astype('int8'), [14, 9, 3]), relay.reshape(var_2727.astype('int8'), [14, 9, 3]), ), 0)
call_2728 = relay.TupleGetItem(func_2686_call(relay.reshape(var_2727.astype('int8'), [14, 9, 3]), relay.reshape(var_2727.astype('int8'), [14, 9, 3]), ), 0)
func_1079_call = mod.get_global_var('func_1079')
func_1082_call = mutated_mod.get_global_var('func_1082')
call_2731 = relay.TupleGetItem(func_1079_call(relay.reshape(var_2706.astype('float64'), [9, 2, 13]), relay.reshape(call_2710.astype('float64'), [9, 2, 13]), ), 2)
call_2732 = relay.TupleGetItem(func_1082_call(relay.reshape(var_2706.astype('float64'), [9, 2, 13]), relay.reshape(call_2710.astype('float64'), [9, 2, 13]), ), 2)
func_664_call = mod.get_global_var('func_664')
func_667_call = mutated_mod.get_global_var('func_667')
call_2737 = relay.TupleGetItem(func_664_call(relay.reshape(call_2705.astype('float64'), [2, 7, 1])), 0)
call_2738 = relay.TupleGetItem(func_667_call(relay.reshape(call_2705.astype('float64'), [2, 7, 1])), 0)
func_2276_call = mod.get_global_var('func_2276')
func_2279_call = mutated_mod.get_global_var('func_2279')
call_2752 = relay.TupleGetItem(func_2276_call(relay.reshape(call_2718.astype('float64'), [2, 11, 16])), 0)
call_2753 = relay.TupleGetItem(func_2279_call(relay.reshape(call_2718.astype('float64'), [2, 11, 16])), 0)
output = relay.Tuple([bop_2700,call_2705,var_2706,call_2708,call_2710,const_2711,var_2712,var_2713,call_2718,call_2726,var_2727,call_2731,call_2737,call_2752,])
output2 = relay.Tuple([bop_2700,call_2707,var_2706,call_2709,call_2714,const_2711,var_2712,var_2713,call_2719,call_2728,var_2727,call_2732,call_2738,call_2753,])
func_2759 = relay.Function([var_2698,var_2699,var_2706,var_2712,var_2713,var_2727,], output)
mod['func_2759'] = func_2759
mod = relay.transform.InferType()(mod)
mutated_mod['func_2759'] = func_2759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2759_call = mutated_mod.get_global_var('func_2759')
var_2761 = relay.var("var_2761", dtype = "bool", shape = (1, 3, 5))#candidate|2761|(1, 3, 5)|var|bool
var_2762 = relay.var("var_2762", dtype = "bool", shape = (15, 3, 5))#candidate|2762|(15, 3, 5)|var|bool
var_2763 = relay.var("var_2763", dtype = "float64", shape = (234,))#candidate|2763|(234,)|var|float64
var_2764 = relay.var("var_2764", dtype = "float32", shape = (1680, 1))#candidate|2764|(1680, 1)|var|float32
var_2765 = relay.var("var_2765", dtype = "float64", shape = (352,))#candidate|2765|(352,)|var|float64
var_2766 = relay.var("var_2766", dtype = "int8", shape = (42, 9))#candidate|2766|(42, 9)|var|int8
call_2760 = func_2759_call(var_2761,var_2762,var_2763,var_2764,var_2765,var_2766,)
output = call_2760
func_2767 = relay.Function([var_2761,var_2762,var_2763,var_2764,var_2765,var_2766,], output)
mutated_mod['func_2767'] = func_2767
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3091 = relay.var("var_3091", dtype = "uint8", shape = (10, 5, 11))#candidate|3091|(10, 5, 11)|var|uint8
const_3092 = relay.const([[[2,-3,-5,3,5,6,3,8,-5,-3,8],[6,-3,8,-10,9,-2,-8,-1,8,-8,3],[2,-7,2,-3,10,-4,10,2,10,-4,6],[-9,3,-4,2,4,-9,-2,-3,-1,-4,7],[-9,-6,10,1,-1,2,-10,9,-2,-5,-6]],[[-3,-3,3,3,1,-8,-3,6,4,-6,3],[3,-7,7,-7,10,3,8,9,7,-3,9],[-3,10,4,4,-2,-1,3,1,-2,-1,2],[-4,-3,5,8,-4,10,-10,9,-6,-2,-2],[-7,-4,3,8,7,10,-3,-5,-10,-1,2]],[[7,-5,6,9,2,-10,7,-2,-3,-4,-8],[-10,7,-4,10,-2,-9,9,-4,-3,4,-3],[-9,5,3,-6,10,3,-6,8,5,5,6],[-9,-2,-9,8,-9,-8,-10,8,1,2,5],[-3,5,2,-1,-4,9,7,-4,1,-1,-10]],[[7,8,3,-3,9,-1,5,-4,2,-9,6],[10,-10,-3,-7,3,-10,3,1,2,-6,-4],[-8,7,8,10,3,-4,-10,-3,2,2,-7],[5,-3,-9,10,7,-2,8,2,6,10,8],[10,7,-9,4,-4,-5,-4,7,8,3,-10]],[[-1,-1,-8,10,-10,-9,-2,8,4,3,-10],[-6,2,-10,-3,10,-3,-3,-3,-8,3,2],[4,9,1,-1,-10,7,-10,-1,-7,9,1],[2,-4,8,6,5,9,9,-8,2,-7,2],[-6,-10,-1,5,-10,-7,-5,-4,-5,2,2]],[[8,2,-8,9,-8,-10,-9,5,4,-1,2],[5,9,-4,6,2,8,3,7,-7,-8,1],[-9,-3,6,3,2,-3,-10,1,4,9,1],[9,4,1,2,-1,-2,5,10,3,8,6],[2,-3,3,10,3,-2,-5,1,6,-10,10]],[[-4,5,-4,-5,2,-8,-6,8,4,5,-2],[-8,-8,7,-1,-3,-7,6,5,2,1,-4],[-2,2,8,4,6,3,6,-1,-6,6,7],[5,-3,1,10,10,-10,9,-2,7,7,-1],[7,4,10,-7,1,-9,10,8,-5,-3,3]],[[-4,7,2,-9,-6,6,-2,-9,-3,10,5],[-2,-1,3,6,5,10,1,-3,8,-9,-1],[-1,7,-3,8,8,-2,8,2,-5,4,-9],[9,7,3,-2,-6,-7,8,3,-9,-5,1],[-10,7,-10,-1,8,-2,7,-1,-2,-3,2]],[[-10,-9,-6,-1,8,-2,7,6,2,7,-8],[-7,-5,-8,9,-2,-6,7,-3,-1,-10,-6],[4,4,-5,-7,-7,-4,5,-1,-1,-3,-1],[-1,1,-5,-4,9,-2,-3,5,-2,6,3],[5,8,-4,-4,-5,9,-8,8,-5,9,1]],[[-6,2,7,1,3,-5,-5,4,-5,-4,-3],[-1,4,10,-5,5,-7,1,-9,5,10,1],[-10,5,-3,2,-3,9,-10,3,9,-9,7],[2,2,-5,9,10,-2,5,-5,-1,9,-8],[-10,4,-10,-8,3,-2,7,-7,-5,6,-1]]], dtype = "uint8")#candidate|3092|(10, 5, 11)|const|uint8
bop_3093 = relay.bitwise_or(var_3091.astype('uint8'), relay.reshape(const_3092.astype('uint8'), relay.shape_of(var_3091))) # shape=(10, 5, 11)
func_1620_call = mod.get_global_var('func_1620')
func_1625_call = mutated_mod.get_global_var('func_1625')
var_3104 = relay.var("var_3104", dtype = "uint8", shape = (240,))#candidate|3104|(240,)|var|uint8
call_3103 = relay.TupleGetItem(func_1620_call(relay.reshape(var_3104.astype('uint8'), [6, 8, 5]), relay.reshape(var_3104.astype('uint8'), [6, 8, 5]), relay.reshape(var_3104.astype('bool'), [6, 8, 5]), ), 0)
call_3105 = relay.TupleGetItem(func_1625_call(relay.reshape(var_3104.astype('uint8'), [6, 8, 5]), relay.reshape(var_3104.astype('uint8'), [6, 8, 5]), relay.reshape(var_3104.astype('bool'), [6, 8, 5]), ), 0)
func_2276_call = mod.get_global_var('func_2276')
func_2279_call = mutated_mod.get_global_var('func_2279')
var_3110 = relay.var("var_3110", dtype = "float64", shape = (352,))#candidate|3110|(352,)|var|float64
call_3109 = relay.TupleGetItem(func_2276_call(relay.reshape(var_3110.astype('float64'), [2, 11, 16])), 0)
call_3111 = relay.TupleGetItem(func_2279_call(relay.reshape(var_3110.astype('float64'), [2, 11, 16])), 0)
const_3113 = relay.const([-4.466370,4.313318,-4.837599,9.728847,-4.599185,4.237465,-7.360395,-9.281274,2.299047,-9.656200,0.481596,-5.986419,5.832205,-4.948894,-6.889697,0.052552,4.370780,9.039607,4.439570,-8.007232,-3.382538,-0.303079,-8.504776,8.844754,0.115235,5.761611,9.558891,9.945637,-9.584061,-4.660852,7.406809,6.857772,9.328912,-7.436067,-2.741379,-2.041130,6.808003,3.177835,1.683943,8.874684,-7.626852,2.818476,2.089682,9.565926,8.698466,-8.450499,9.330595,2.565323,8.204016,0.425973,-9.902269,-2.077991,-8.392261,4.695348,-8.182648,0.586543,8.546874,-3.727361,9.585848,-1.361973,2.186307,-8.737941,7.812699,4.840997,8.452578,-1.125382,5.208813,0.279374,-7.901579,7.561569,-4.308779,-6.217486,-5.491073,-3.875222,-5.450909,-7.245562,8.975914,-3.677388,-8.836563,4.836400,3.195787,-8.002897,-9.714203,-8.178235,-7.514568,7.389094,-6.334670,2.019297,-8.021626,4.617705,-9.375834,2.073284,-3.280695,-5.695296,5.734325,-0.034380,4.209399,6.197464,2.918978,3.412024,-0.425837,-2.970583,-9.742991,0.371735,3.894191,6.896394,-5.443698,5.921152,-0.496298,0.725554,-0.721227,-1.461911,-8.719303,8.734122,-6.460558,-6.874668,-6.017096,4.482789,-2.888723,6.375678,4.657067,2.089069,6.526720,-7.274443,2.460394,-7.496067,-8.777728,0.417801,-2.720117,-9.304839,3.467223,4.886237,4.829070,-0.961632,7.038972,0.578587,-8.018749,-0.861877,7.121882,-8.798261,4.038608,-4.301477,1.486189,-7.811669,9.130482,-8.381259,5.371283,-4.852652,6.112848,-5.936906,-4.161829,4.606844,6.557164,5.549182,6.021707,1.901611,-3.661445,-5.020084,6.748949,9.105146,2.836665,-6.793101,-8.171371,3.222625,7.531770,-3.089880,7.414698,9.231273,-9.710607,0.362489,-9.284763,-7.270220,8.327901,-8.933520,4.733456,7.659418,-7.156458,-5.090346,-1.185080,-3.792661,9.301965,9.290619,-2.128990,4.889589,8.974728,-3.604150,5.239957,-4.366902,7.171835,-6.048360,2.347865,2.762769,0.407238,-9.577625,0.438501,8.602420,9.872923,7.655837,3.249953,-5.381063,-2.660740,-7.807946,3.950056,-3.340125,-7.501296,-0.880884,-4.006488,1.055365,6.055785,5.301202,-3.921460,0.708135,8.377441,8.043455,-1.515525,-8.534067,9.890614,-6.929186,9.331820,3.710979,2.245518,0.739161,-4.762641,3.663369,-8.575681,-5.936307,-6.833152,1.777393,5.647154,-9.139347,-8.211409,-7.191925,-0.144188,6.278433,0.391687,4.047723,-4.908742,-8.413972,2.888474,-3.130170,-2.397569,-5.671296,-3.205008,-3.068460,-0.306395,7.700831,6.328710,-2.463205,1.213450,-9.295986,6.822666,1.397247,-5.466870,-4.636383,-5.486441,-6.820153,8.569750,7.951268,-6.090617,9.880363,-4.624106,9.716311,-0.133143,9.360797,2.517852,-9.717874,5.422863,-2.611837,9.206735,3.428930,0.094948,-1.052857,-5.118558,4.926126,-7.365706,-6.088572,1.777761,-5.458108,0.799372,9.059812,7.570358,0.311334,-8.035570,8.561235,-5.178777,2.708774,-3.797484,9.261722,8.465831,2.243929,6.097856,-4.585756,2.098940,2.161730,4.657465,-6.793593,-1.141996,6.288086,1.418828,4.617678,-2.754362,-0.040969,-1.409916,1.905316,-6.500074,3.235023,-8.881027,-5.819128,7.495323,9.258532,9.691917,2.542090,8.414000,-0.591461,8.630747,6.527955,-5.091238,-1.553450,9.402794,-9.088781,-6.848836,3.046581,9.104415,6.856091,9.939784,7.072267,-2.636393,5.492067,-5.701099,-3.568977,2.326274,9.064760,1.198720,-8.644992,8.816666,-6.390590,9.156994,9.000531,-0.716849,9.898266,8.348973,-1.612822,7.017447,2.824496,1.803347,-5.155486,5.487198,-0.514532,5.869688,7.741048,9.835627,9.197443], dtype = "float64")#candidate|3113|(352,)|const|float64
bop_3114 = relay.subtract(var_3110.astype('int8'), relay.reshape(const_3113.astype('int8'), relay.shape_of(var_3110))) # shape=(352,)
bop_3119 = relay.floor_divide(call_3109.astype('float64'), relay.reshape(var_3110.astype('float64'), relay.shape_of(call_3109))) # shape=(2, 11, 16)
bop_3122 = relay.floor_divide(call_3111.astype('float64'), relay.reshape(var_3110.astype('float64'), relay.shape_of(call_3111))) # shape=(2, 11, 16)
output = relay.Tuple([bop_3093,call_3103,var_3104,bop_3114,bop_3119,])
output2 = relay.Tuple([bop_3093,call_3105,var_3104,bop_3114,bop_3122,])
func_3126 = relay.Function([var_3091,var_3104,var_3110,], output)
mod['func_3126'] = func_3126
mod = relay.transform.InferType()(mod)
mutated_mod['func_3126'] = func_3126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3126_call = mutated_mod.get_global_var('func_3126')
var_3128 = relay.var("var_3128", dtype = "uint8", shape = (10, 5, 11))#candidate|3128|(10, 5, 11)|var|uint8
var_3129 = relay.var("var_3129", dtype = "uint8", shape = (240,))#candidate|3129|(240,)|var|uint8
var_3130 = relay.var("var_3130", dtype = "float64", shape = (352,))#candidate|3130|(352,)|var|float64
call_3127 = func_3126_call(var_3128,var_3129,var_3130,)
output = call_3127
func_3131 = relay.Function([var_3128,var_3129,var_3130,], output)
mutated_mod['func_3131'] = func_3131
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3303 = relay.const([[[-6,8,-10,1,-7,3],[-5,6,10,9,-4,2],[10,4,5,1,-6,-3],[9,10,-6,6,5,-3],[1,-4,-6,-2,8,6],[-3,5,9,10,1,4],[10,1,9,2,-8,4],[3,-10,3,2,-6,-9],[-6,3,-6,-7,4,-4],[1,-2,2,-3,-3,4],[1,-3,-7,-2,-9,2]],[[-1,-2,6,7,-9,4],[-6,-6,10,-4,-10,-9],[-7,-1,7,2,2,-2],[-7,6,7,-9,7,-1],[-9,-9,2,-5,-3,5],[-10,8,10,-2,9,7],[8,-1,3,-3,7,-1],[-1,7,-3,-4,1,6],[-3,2,-6,2,-5,10],[-4,-2,4,1,-10,-9],[-3,9,-6,9,3,3]],[[-8,-3,9,3,-6,-6],[8,6,-8,-4,-8,6],[8,-3,-7,-2,3,-10],[-9,-8,7,5,-1,-7],[6,9,4,5,-3,3],[-9,6,10,-6,10,6],[-6,-7,2,4,-3,1],[10,-9,8,-2,-9,-9],[-6,-2,7,-4,-8,9],[-4,9,8,5,8,9],[-10,-1,1,9,-4,-2]],[[8,-3,-8,8,9,-9],[9,-5,2,3,6,10],[-5,-3,-10,10,-2,4],[-9,-3,-2,-3,8,8],[-1,1,-6,-5,2,9],[-4,7,6,-7,4,1],[-2,-6,4,2,6,5],[6,4,7,-9,-6,6],[-10,5,4,-1,-4,-9],[-3,-4,-6,-3,-8,-2],[4,-5,-10,2,-5,-5]],[[5,-5,4,-7,-7,-8],[-1,-5,1,5,9,-6],[2,-10,-7,8,-4,10],[1,7,-10,10,7,2],[3,5,-9,2,1,10],[8,9,-5,9,8,-3],[-2,-10,8,-9,9,-6],[7,10,1,-5,10,-2],[2,-10,-9,9,-3,10],[-10,6,-5,6,10,1],[5,-2,-9,-9,-8,-3]],[[1,-6,-2,-8,7,4],[6,-5,5,10,3,7],[8,5,7,3,-4,2],[7,-10,6,6,3,10],[9,-2,-4,4,-8,-10],[-9,-3,-3,-8,-9,-3],[-2,6,-2,5,-6,2],[5,6,5,8,-10,-6],[10,-1,2,-1,-5,-10],[-1,8,2,-9,-8,-10],[-10,6,3,-3,5,1]],[[8,-2,9,1,6,9],[-1,-5,-5,9,-7,-7],[8,5,-6,3,-8,-8],[-8,9,8,2,-10,6],[3,-3,4,-3,2,10],[-4,-3,-9,-9,9,10],[10,9,-8,5,2,-6],[-2,3,-6,-3,3,3],[4,-8,2,2,-8,1],[-6,1,-6,8,-3,1],[1,10,-9,-7,-6,8]],[[1,-1,-3,-6,1,-8],[-2,5,7,-9,-10,-4],[3,-4,4,-9,3,5],[4,-4,-9,-10,-1,10],[-10,6,-7,9,-10,9],[4,-1,7,3,-7,4],[9,1,-10,-8,10,-10],[-4,7,3,-2,-3,6],[-10,1,5,-5,3,6],[7,-4,10,3,7,2],[5,9,-8,10,-3,5]],[[-8,4,-6,-3,-6,1],[-2,-2,6,9,9,-3],[-4,-2,4,4,-8,1],[1,-9,2,-5,-6,-3],[4,-8,-9,-9,-2,9],[10,7,-4,-4,-4,-5],[6,-3,8,7,-6,-4],[-5,-10,-6,4,2,4],[2,4,4,4,-1,2],[-1,-3,5,-5,-10,9],[4,2,7,-4,5,-4]],[[-9,-8,-3,2,-1,-2],[2,-7,2,8,3,2],[7,6,-7,-2,-9,9],[-3,8,5,10,-9,10],[5,9,-2,-8,8,3],[-6,-4,-5,7,-3,2],[8,5,-1,1,5,-3],[-9,-5,5,-4,1,6],[-8,-8,9,-1,3,4],[-1,7,-5,2,-1,2],[-5,7,-4,-5,-5,5]],[[2,10,-10,-7,-1,8],[7,1,6,-4,-2,8],[3,8,4,-1,-1,-2],[-7,-3,-5,4,10,-10],[1,-9,6,-6,-1,-4],[-2,-3,-5,-4,-6,-1],[-8,3,-2,-6,8,5],[5,2,8,4,10,-2],[4,7,1,-3,5,-6],[-8,2,-10,-1,-10,2],[8,9,5,2,5,1]],[[9,6,-9,-3,-5,-6],[-3,1,-9,-3,-10,2],[-4,-7,4,-7,-4,-7],[5,4,6,-6,-5,2],[9,1,-8,5,9,-10],[-1,-6,-8,-10,4,5],[-1,8,-6,-2,-6,4],[-5,-5,-10,7,-2,6],[7,-4,-7,-2,-8,6],[1,-10,-10,2,-1,10],[-1,-3,-4,-6,-3,4]],[[7,-8,-4,-10,-2,-1],[-5,8,9,-7,6,7],[9,1,-2,-1,8,-8],[6,9,-8,-10,3,-9],[7,7,6,-3,5,-6],[-10,-10,8,3,5,2],[2,6,-10,-10,-3,-2],[10,3,-1,4,7,10],[-9,-7,-6,-8,3,-6],[1,1,4,2,-9,9],[5,1,-7,-7,-5,1]]], dtype = "uint8")#candidate|3303|(13, 11, 6)|const|uint8
var_3304 = relay.var("var_3304", dtype = "uint8", shape = (13, 11, 6))#candidate|3304|(13, 11, 6)|var|uint8
bop_3305 = relay.greater(const_3303.astype('bool'), relay.reshape(var_3304.astype('bool'), relay.shape_of(const_3303))) # shape=(13, 11, 6)
output = bop_3305
output2 = bop_3305
func_3311 = relay.Function([var_3304,], output)
mod['func_3311'] = func_3311
mod = relay.transform.InferType()(mod)
var_3312 = relay.var("var_3312", dtype = "uint8", shape = (13, 11, 6))#candidate|3312|(13, 11, 6)|var|uint8
output = func_3311(var_3312)
func_3313 = relay.Function([var_3312], output)
mutated_mod['func_3313'] = func_3313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3958 = relay.var("var_3958", dtype = "float64", shape = (6, 14, 5))#candidate|3958|(6, 14, 5)|var|float64
uop_3959 = relay.log(var_3958.astype('float64')) # shape=(6, 14, 5)
output = uop_3959
output2 = uop_3959
func_3961 = relay.Function([var_3958,], output)
mod['func_3961'] = func_3961
mod = relay.transform.InferType()(mod)
var_3962 = relay.var("var_3962", dtype = "float64", shape = (6, 14, 5))#candidate|3962|(6, 14, 5)|var|float64
output = func_3961(var_3962)
func_3963 = relay.Function([var_3962], output)
mutated_mod['func_3963'] = func_3963
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4004 = relay.const([[[-1.673992,8.394304,0.692074],[5.251752,4.673099,8.306522]],[[-9.183268,-6.411644,6.403275],[5.520912,-5.927346,-3.649030]],[[-2.226887,2.853365,-5.626914],[-8.534592,4.646581,0.841024]],[[8.852170,-5.842462,-1.371543],[-6.500455,-8.493253,1.396325]],[[5.257377,7.023067,-2.516371],[5.547106,-3.677714,-5.388164]],[[9.196253,4.746598,0.960606],[-6.295839,-1.446176,7.616146]],[[-2.096381,1.973884,-8.641896],[8.012678,-7.017327,4.183911]],[[-3.952056,5.324907,-5.239575],[-2.908160,-3.982265,-3.715770]],[[-1.222338,-2.875945,5.856274],[-0.056517,-2.296458,-2.825524]],[[-1.921745,-5.994960,-6.440820],[3.624354,9.822035,0.512592]],[[0.815034,6.595352,-4.644787],[8.918031,-6.242982,6.210998]],[[4.700168,-8.256077,4.318400],[-0.923617,-0.408314,-2.878277]],[[-1.411669,8.349951,-9.303338],[2.286398,-2.126585,-9.167182]],[[-3.979888,-1.022285,2.751097],[-8.407922,5.069479,-1.999722]],[[-9.947758,-2.031465,-0.641097],[7.087715,-7.980626,-3.933854]]], dtype = "float64")#candidate|4004|(15, 2, 3)|const|float64
var_4005 = relay.var("var_4005", dtype = "float64", shape = (15, 2, 3))#candidate|4005|(15, 2, 3)|var|float64
bop_4006 = relay.mod(const_4004.astype('float64'), relay.reshape(var_4005.astype('float64'), relay.shape_of(const_4004))) # shape=(15, 2, 3)
output = bop_4006
output2 = bop_4006
func_4016 = relay.Function([var_4005,], output)
mod['func_4016'] = func_4016
mod = relay.transform.InferType()(mod)
mutated_mod['func_4016'] = func_4016
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4017 = relay.var("var_4017", dtype = "float64", shape = (15, 2, 3))#candidate|4017|(15, 2, 3)|var|float64
func_4016_call = mutated_mod.get_global_var('func_4016')
call_4018 = func_4016_call(var_4017)
output = call_4018
func_4019 = relay.Function([var_4017], output)
mutated_mod['func_4019'] = func_4019
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4189 = relay.var("var_4189", dtype = "uint16", shape = (10, 8, 4))#candidate|4189|(10, 8, 4)|var|uint16
var_4190 = relay.var("var_4190", dtype = "uint16", shape = (10, 8, 4))#candidate|4190|(10, 8, 4)|var|uint16
bop_4191 = relay.less_equal(var_4189.astype('bool'), relay.reshape(var_4190.astype('bool'), relay.shape_of(var_4189))) # shape=(10, 8, 4)
bop_4194 = relay.right_shift(var_4189.astype('int32'), relay.reshape(bop_4191.astype('int32'), relay.shape_of(var_4189))) # shape=(10, 8, 4)
func_708_call = mod.get_global_var('func_708')
func_711_call = mutated_mod.get_global_var('func_711')
const_4198 = relay.const([-10,-7,3,-10,-2,-1,-10,7,5,10,-6,-3,-5,3,5,-7,-6,3,2,4,8,6,-6,8,1,-3,4,1,5,5,-1,4,-1,-7,-10,-8,-6,-8,5,4,-5,2,4,-9,7,-8,8,-8,-9,-1,5,9,2,-4,5,-5,-4,10,-10,9,-4,-10,9,1,-2,-8,2,10,7,2,-1,-2,6,5,2,-7,-10,-9,4,8,-2,5,-4,-9,9,4,-10,7,10,-4,-5,-7,6,6,5,8,-2,3,-7,10,-4,10,-1,-2,8,-3,4,9,-7,-2,1,-2,-2,-3,-7,-9,-7,7,-5,-9,4,5,2,-2,9,1,-3,-6,-8,-5,2,-8,-2,-7,3,-9,5,-6,8,-4,-1,10,8,10,7,-2,1,9,6,-2,1,-5,7,-3,-9,-5,-4,4,-3,9], dtype = "uint16")#candidate|4198|(160,)|const|uint16
call_4197 = relay.TupleGetItem(func_708_call(relay.reshape(const_4198.astype('uint16'), [16, 2, 5]), relay.reshape(const_4198.astype('uint16'), [16, 2, 5]), ), 0)
call_4199 = relay.TupleGetItem(func_711_call(relay.reshape(const_4198.astype('uint16'), [16, 2, 5]), relay.reshape(const_4198.astype('uint16'), [16, 2, 5]), ), 0)
var_4200 = relay.var("var_4200", dtype = "bool", shape = (10, 8, 4))#candidate|4200|(10, 8, 4)|var|bool
bop_4201 = relay.floor_divide(bop_4191.astype('float32'), relay.reshape(var_4200.astype('float32'), relay.shape_of(bop_4191))) # shape=(10, 8, 4)
func_3311_call = mod.get_global_var('func_3311')
func_3313_call = mutated_mod.get_global_var('func_3313')
var_4205 = relay.var("var_4205", dtype = "uint8", shape = (858,))#candidate|4205|(858,)|var|uint8
call_4204 = func_3311_call(relay.reshape(var_4205.astype('uint8'), [13, 11, 6]))
call_4206 = func_3311_call(relay.reshape(var_4205.astype('uint8'), [13, 11, 6]))
func_3311_call = mod.get_global_var('func_3311')
func_3313_call = mutated_mod.get_global_var('func_3313')
call_4207 = func_3311_call(relay.reshape(call_4204.astype('uint8'), [13, 11, 6]))
call_4208 = func_3311_call(relay.reshape(call_4204.astype('uint8'), [13, 11, 6]))
output = relay.Tuple([bop_4194,call_4197,const_4198,bop_4201,call_4204,var_4205,call_4207,])
output2 = relay.Tuple([bop_4194,call_4199,const_4198,bop_4201,call_4206,var_4205,call_4208,])
func_4220 = relay.Function([var_4189,var_4190,var_4200,var_4205,], output)
mod['func_4220'] = func_4220
mod = relay.transform.InferType()(mod)
mutated_mod['func_4220'] = func_4220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4220_call = mutated_mod.get_global_var('func_4220')
var_4222 = relay.var("var_4222", dtype = "uint16", shape = (10, 8, 4))#candidate|4222|(10, 8, 4)|var|uint16
var_4223 = relay.var("var_4223", dtype = "uint16", shape = (10, 8, 4))#candidate|4223|(10, 8, 4)|var|uint16
var_4224 = relay.var("var_4224", dtype = "bool", shape = (10, 8, 4))#candidate|4224|(10, 8, 4)|var|bool
var_4225 = relay.var("var_4225", dtype = "uint8", shape = (858,))#candidate|4225|(858,)|var|uint8
call_4221 = func_4220_call(var_4222,var_4223,var_4224,var_4225,)
output = call_4221
func_4226 = relay.Function([var_4222,var_4223,var_4224,var_4225,], output)
mutated_mod['func_4226'] = func_4226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4236 = relay.var("var_4236", dtype = "int8", shape = ())#candidate|4236|()|var|int8
const_4237 = relay.const([[[-4,-10,-4,-7,2,-9,-5,-4,6,5,-10,8,-6,4,-4],[-9,-1,5,2,6,-5,10,4,4,-7,7,-2,9,-8,9],[-10,-10,-7,-4,8,5,-5,-5,7,10,-10,3,3,-10,-7],[-3,-9,-5,10,7,1,1,-5,8,8,9,-4,8,6,-8],[-8,7,-6,6,-6,-3,-3,3,-3,-1,9,-8,2,-10,-5],[9,-3,-3,-3,-6,1,3,6,-3,9,1,-4,10,-5,4],[3,5,2,-5,-8,3,2,5,-6,-8,-2,4,8,-2,8],[-4,1,-7,1,9,2,-1,10,2,-4,-10,9,-2,9,1],[4,-6,-7,8,-4,-7,9,-3,-4,4,7,-4,-7,5,-4]],[[3,2,-1,-2,-8,5,5,3,-2,4,5,-9,10,-7,2],[-1,-9,4,-1,10,3,7,1,7,-9,9,-4,4,4,9],[5,3,-3,4,3,5,9,-7,2,-4,-7,-4,1,7,1],[5,7,10,3,4,-7,-6,-1,-7,-7,5,-3,-6,-8,2],[-10,7,-5,5,-10,5,-10,-4,-4,-7,9,6,2,8,5],[-1,-7,10,3,9,8,1,-7,-10,-3,3,-8,5,10,-10],[-3,10,7,-3,9,4,-8,-5,7,7,2,-3,8,10,9],[-3,-1,6,4,10,3,-9,8,-7,9,6,-3,-2,7,9],[4,-2,-4,4,-8,-9,8,-2,-2,-3,5,2,10,-1,10]],[[5,-1,-8,5,-2,6,-2,1,-1,4,-4,5,7,2,2],[-9,5,-6,-6,6,-2,1,-7,9,-5,-1,-2,-9,-2,8],[-2,-5,-4,3,-1,-7,-1,8,-3,7,-2,9,5,-2,10],[4,-4,10,-9,-9,1,-3,8,-2,2,9,8,-7,-5,-1],[-8,8,6,-3,10,-5,-2,7,2,9,9,-8,-5,1,4],[6,8,8,-1,-9,5,-5,-2,6,-10,-10,4,-7,2,10],[9,-10,1,1,8,-4,3,1,2,1,-2,-2,-6,-5,6],[-6,3,-5,5,8,-7,-8,2,6,-7,-7,-6,5,-7,-4],[-10,-1,8,9,4,-9,-10,1,-8,-7,4,4,-2,-5,1]],[[-5,10,6,-3,-1,2,8,-9,-5,8,10,7,-3,4,9],[5,-8,1,-3,1,-3,-6,-7,2,1,-6,-3,8,-4,-1],[-10,9,3,4,-8,2,7,4,4,-6,7,10,6,3,-8],[5,5,8,7,6,6,-7,-9,-9,-7,9,-8,4,-5,-6],[-5,3,-4,-10,4,4,-7,4,-4,-8,-7,-6,4,-1,-9],[3,5,-6,8,9,3,1,6,5,-10,10,-7,-4,-8,-1],[-1,1,-10,-6,4,-10,3,-6,-1,-1,-3,8,-9,3,7],[-2,-8,-6,-3,-9,-10,-3,-2,-3,3,2,5,8,-4,9],[4,-2,8,3,2,8,10,-6,4,5,-1,3,-1,-8,-1]],[[6,10,-8,-6,2,2,10,3,4,3,-3,8,-10,7,2],[7,-3,-6,7,-3,-7,-9,7,-1,9,10,-8,-8,-9,-6],[-2,1,-2,-8,6,-8,-8,-10,-8,6,8,-9,-6,7,-3],[8,-8,3,-5,-8,4,-6,2,-7,-10,10,-1,-4,-10,-4],[-2,10,-3,-9,-6,1,-3,-4,2,9,-4,-8,10,4,1],[-4,-10,4,-7,-2,-9,1,-8,9,6,-4,7,-7,-5,8],[9,-2,4,10,10,2,-3,-1,10,2,8,-10,9,-1,-10],[-10,-10,-6,8,-6,10,-8,-5,-5,-1,-4,-5,1,4,8],[-10,3,-1,-6,6,9,-2,-6,-8,-5,-10,-7,3,-8,-1]],[[-3,3,2,-4,4,10,4,10,2,-3,-6,-6,-7,-2,-8],[-9,5,6,7,8,7,-5,-2,3,3,-1,-8,-4,7,-7],[-9,5,-8,3,-10,9,9,-10,-8,-6,-8,10,3,-8,7],[5,-2,2,-5,9,6,-5,-9,7,-8,8,2,-4,9,-7],[-9,-4,5,3,3,-5,8,-5,7,-6,-6,2,2,5,8],[-2,4,-8,-6,-9,2,7,6,-1,-5,-9,-3,1,9,-1],[-5,3,-10,8,-3,4,-3,-9,4,-1,9,2,-2,-9,8],[-9,-2,-2,-5,-8,-7,8,-3,8,-9,6,10,-9,-2,5],[-10,-3,-7,7,-3,-4,7,-10,-9,10,7,5,6,10,-4]],[[-8,-9,9,3,-10,10,7,-6,-10,5,-4,-5,-8,4,-9],[-4,7,5,9,-1,-6,-3,-8,2,-5,-9,-7,-7,-5,6],[-3,2,-4,-5,7,-4,-7,-8,7,5,6,10,-8,2,-9],[-1,9,-4,10,-7,-5,2,1,7,1,-9,-7,2,-5,-1],[3,1,-5,4,-6,6,4,-3,9,3,3,-7,-3,6,-3],[6,-10,7,-2,5,-4,1,-9,4,-4,8,-3,10,3,-3],[6,2,6,5,2,10,-1,5,3,9,-8,-9,-9,-6,6],[9,-3,-9,-10,-9,-2,-8,7,-4,5,-2,-8,6,9,-2],[-5,8,-1,7,9,4,4,-6,-7,5,-2,7,-7,7,-6]],[[2,9,-7,5,4,1,-5,1,-8,-2,10,-10,-3,-9,3],[-1,-5,3,1,-8,-1,-2,-4,10,1,4,3,6,1,6],[1,8,-8,-9,-10,5,-6,2,1,-3,-3,4,1,3,7],[7,-9,-3,-10,7,9,-3,-2,-6,-6,-5,-6,-6,1,2],[-1,4,-5,-6,-9,-7,8,7,5,-2,2,4,8,-6,1],[5,-8,1,-7,-8,-3,-9,7,2,-9,4,4,1,10,-3],[7,3,8,-9,-3,3,4,-7,-6,-2,5,-8,6,3,9],[6,-3,-1,3,7,-1,-1,10,5,-9,3,-6,5,10,-9],[5,7,4,-10,-2,-10,7,7,1,3,2,4,-9,-2,-8]],[[-10,-6,-2,6,7,10,8,-1,3,8,2,6,-10,4,3],[-2,-6,9,9,1,-3,5,6,-8,-8,9,-8,5,-7,7],[10,3,8,-3,7,-4,2,-2,7,-9,8,-4,-2,-4,7],[-1,3,-2,-5,-1,-10,-3,-6,3,6,-10,-10,3,-3,-3],[2,-9,7,9,8,-6,-7,-1,5,6,-5,-10,-1,9,1],[6,7,10,9,-7,9,7,2,9,-3,-1,-3,5,5,2],[9,1,5,9,-3,3,8,10,-10,-9,5,-3,-2,-4,4],[3,6,-9,-7,5,5,-4,9,-4,2,-6,-5,7,7,6],[-9,-7,5,6,-4,-2,10,-1,9,-2,1,9,-4,7,10]],[[-7,2,-4,9,9,-10,2,6,-10,1,7,7,9,-2,5],[10,3,-5,9,6,9,8,9,-9,8,-1,3,10,-1,10],[4,-7,2,-5,-10,-6,8,-2,-9,-6,-2,-3,-4,9,-5],[3,-1,-8,4,3,-4,-3,-4,-1,-8,9,3,5,4,3],[4,-1,-8,-7,2,-6,-10,1,6,8,-9,3,10,-9,1],[4,-10,10,3,10,-9,4,-5,-5,4,-4,10,-5,5,-5],[-8,4,3,3,3,-5,-10,-4,-1,8,10,-8,-1,-1,7],[-5,-4,-2,-2,6,10,10,8,7,-10,-5,-10,5,8,-8],[-1,-7,-1,-3,-5,8,10,-5,1,10,-10,-4,-9,-10,4]],[[-9,2,-1,6,3,4,-7,1,-5,-6,4,1,6,8,7],[5,-8,-6,9,-4,5,6,-4,-6,9,-5,7,4,8,-9],[-3,-2,3,-1,-10,-7,-5,-7,-1,-10,-6,-7,5,-6,1],[-7,-4,-9,-7,-9,7,1,10,3,-2,4,-9,3,-10,6],[-6,8,-2,-5,9,-5,2,8,-8,1,-5,-10,-6,10,-1],[9,-9,-5,6,-1,8,1,6,9,-2,5,-7,-2,7,-9],[8,6,-7,-10,3,-7,-1,-10,-8,2,1,-7,-2,1,9],[-10,10,-4,-6,-9,10,-1,-4,10,10,-4,-9,9,-8,-3],[-2,5,8,8,-6,5,1,-8,7,-9,-10,-7,-1,-2,-7]],[[-7,-7,-9,-4,9,4,-7,-9,1,1,-2,2,9,8,-2],[8,1,4,10,-9,-9,4,9,8,-9,2,9,-5,-5,2],[5,1,-5,10,-6,-8,-3,8,4,-1,-7,8,-7,6,3],[3,10,-6,10,4,-4,-8,3,-8,-4,-3,4,-6,-2,2],[2,3,-9,9,-6,5,3,8,3,-6,7,-7,9,-9,-8],[6,6,4,-10,-5,3,-8,-5,-6,-10,-5,-10,-7,8,9],[9,-7,-7,-10,-3,-5,5,7,-8,8,3,-7,8,3,-2],[-3,10,-3,3,7,-8,-4,-4,5,-4,-1,6,2,-4,1],[9,-6,-4,-7,-4,-2,-5,-5,9,-2,-3,-10,3,-7,6]],[[4,10,4,8,-2,6,-5,2,3,-2,-2,9,7,5,10],[10,7,-3,5,-4,2,-10,-4,-8,4,1,-4,10,-6,-5],[-6,-2,6,-6,5,-7,2,3,-2,3,1,-1,-8,-8,6],[1,-8,-7,-6,-5,-6,9,2,6,-5,9,4,-2,-1,-9],[2,10,-2,-4,1,3,-2,5,-6,-7,9,6,-3,8,-7],[-2,-6,10,-7,-10,2,4,-6,7,10,-1,-7,4,5,6],[8,2,-8,6,5,-6,1,-2,-8,9,4,-7,-8,2,3],[-7,8,9,-2,-3,-2,5,-10,-10,-7,-8,-8,-1,-8,-2],[-5,-3,8,10,8,-6,-4,-4,7,3,-3,-4,-8,9,-2]],[[-6,-10,9,-3,-6,2,-3,-3,1,3,4,4,8,5,-7],[-8,3,4,-4,8,-9,-1,7,1,4,1,-9,7,7,7],[-10,-9,-1,-2,-1,6,-3,4,3,-7,9,-6,-2,-8,-7],[-5,9,10,6,-8,4,-6,-1,6,-6,-2,10,-5,-10,-1],[7,-6,9,-10,-1,9,10,-2,-6,6,3,6,5,8,-4],[6,5,10,9,-9,6,-6,5,-9,10,2,-5,-9,-8,8],[5,3,-6,-6,-3,-5,-4,7,-1,-10,-4,-6,-1,-3,-1],[-8,7,-8,4,-9,-10,-6,-7,6,9,-1,-10,-4,-2,-9],[10,-1,9,-7,3,2,2,2,2,7,5,6,7,-6,9]],[[-3,-3,3,4,-8,7,4,9,7,3,-3,-6,-4,1,3],[7,6,-2,3,8,-5,-3,-4,-5,4,-7,-4,7,5,10],[-7,-5,7,1,-3,3,-6,7,9,-1,7,1,2,-3,-8],[-6,-10,-6,-8,8,8,9,8,-5,7,-1,5,-8,-1,-5],[-4,2,4,10,8,3,-1,-1,-6,5,4,8,9,-8,6],[1,-8,5,-4,-2,-5,8,7,3,8,7,-8,-1,2,9],[-7,-10,-5,5,-2,-2,3,-10,-1,-4,-5,-1,7,-9,-5],[8,1,5,5,-7,-8,-1,-3,3,-8,-5,9,5,1,-6],[-4,-6,-4,-5,2,5,3,5,9,-9,5,1,1,-2,1]]], dtype = "int8")#candidate|4237|(15, 9, 15)|const|int8
bop_4238 = relay.right_shift(var_4236.astype('int8'), const_4237.astype('int8')) # shape=(15, 9, 15)
output = relay.Tuple([bop_4238,])
output2 = relay.Tuple([bop_4238,])
func_4244 = relay.Function([var_4236,], output)
mod['func_4244'] = func_4244
mod = relay.transform.InferType()(mod)
mutated_mod['func_4244'] = func_4244
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4245 = relay.var("var_4245", dtype = "int8", shape = ())#candidate|4245|()|var|int8
func_4244_call = mutated_mod.get_global_var('func_4244')
call_4246 = func_4244_call(var_4245)
output = call_4246
func_4247 = relay.Function([var_4245], output)
mutated_mod['func_4247'] = func_4247
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4318 = relay.var("var_4318", dtype = "float32", shape = (14, 11, 12))#candidate|4318|(14, 11, 12)|var|float32
uop_4319 = relay.sqrt(var_4318.astype('float32')) # shape=(14, 11, 12)
output = relay.Tuple([uop_4319,])
output2 = relay.Tuple([uop_4319,])
func_4326 = relay.Function([var_4318,], output)
mod['func_4326'] = func_4326
mod = relay.transform.InferType()(mod)
mutated_mod['func_4326'] = func_4326
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4327 = relay.var("var_4327", dtype = "float32", shape = (14, 11, 12))#candidate|4327|(14, 11, 12)|var|float32
func_4326_call = mutated_mod.get_global_var('func_4326')
call_4328 = func_4326_call(var_4327)
output = call_4328
func_4329 = relay.Function([var_4327], output)
mutated_mod['func_4329'] = func_4329
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4808 = relay.var("var_4808", dtype = "uint64", shape = ())#candidate|4808|()|var|uint64
var_4809 = relay.var("var_4809", dtype = "uint64", shape = (6, 1, 12))#candidate|4809|(6, 1, 12)|var|uint64
bop_4810 = relay.maximum(var_4808.astype('uint64'), var_4809.astype('uint64')) # shape=(6, 1, 12)
uop_4820 = relay.exp(bop_4810.astype('float32')) # shape=(6, 1, 12)
uop_4824 = relay.sinh(uop_4820.astype('float32')) # shape=(6, 1, 12)
bop_4830 = relay.minimum(uop_4820.astype('float64'), relay.reshape(bop_4810.astype('float64'), relay.shape_of(uop_4820))) # shape=(6, 1, 12)
func_1079_call = mod.get_global_var('func_1079')
func_1082_call = mutated_mod.get_global_var('func_1082')
const_4834 = relay.const([-9.948143,-6.615669,1.952556,-3.405615,-1.500829,3.104879,-9.270479,-9.276239,7.321239,4.271402,6.835525,-2.333458,9.616752,-8.847392,-2.007317,-5.736020,-6.373824,4.082688,-3.982210,-9.179694,-3.164026,0.052634,-3.137294,1.847605,7.172728,1.760267,2.864890,-9.203659,8.829766,-2.574712,-2.864823,-4.259908,3.703654,-8.172700,3.519833,-0.361045,-5.014728,6.717500,8.490518,-9.323338,9.813618,8.255098,9.095666,2.632003,-2.750016,-3.504077,-4.187846,8.375996,-9.083595,-7.237169,-8.469333,-3.574683,-8.050798,8.501975,-7.435665,-1.387061,-3.314131,-9.069647,6.930540,-1.417925,6.409743,-3.360976,-3.992428,5.376806,4.752501,-3.953787,-3.641568,5.968310,-8.702064,-0.718429,-1.271172,-5.005520,-5.157770,8.687869,2.319278,-6.278862,-8.153741,-4.087869,-7.840466,-3.744870,8.868362,-0.614389,0.052401,-5.659924,-1.826736,-2.916857,8.478398,3.015564,9.702233,2.639012,4.600340,-6.112985,-2.145315,-7.189848,-9.808898,9.097608,2.606784,-4.559773,6.723636,7.016530,8.658952,-7.795321,-5.252270,8.203974,-5.443990,-1.222823,-6.005568,-9.333811,-5.463144,4.464456,5.545806,-7.777517,-6.099769,6.966667,-4.993706,-8.177286,-7.593144,-8.881631,-2.471141,-1.881650,5.388262,-2.387847,9.849060,-2.437261,4.869514,0.456678,-7.643224,-3.922541,-2.911961,-6.383453,-3.393696,-3.100008,-4.396284,8.908624,-8.451818,4.661794,4.372094,5.159961,-1.862643,-8.643581,-8.784923,-3.485781,4.637440,4.658665,-5.796397,-6.148386,-2.854938,7.461903,-0.914635,-7.360543,0.570319,-1.148424,3.858680,2.029731,4.157430,-8.556517,0.719704,2.015841,7.752909,-7.424480,-1.377984,-7.053345,-7.814183,1.620290,-7.764996,3.429743,-6.391886,-9.821791,-8.116697,6.620314,3.426749,1.484297,9.838105,-0.224871,3.934735,-3.115763,9.812150,3.172405,7.111173,-0.277731,-8.646292,4.330821,1.311575,-8.906630,0.679001,-5.106594,2.295346,-1.903224,-4.881103,6.120169,2.076814,3.976435,-6.359363,-4.695270,-7.840668,-4.855082,5.642729,4.335788,9.121867,-8.599067,4.946073,-6.260292,-6.528777,0.873962,6.578995,-3.367407,1.098596,7.964040,-3.169070,5.578973,5.480900,9.983786,4.529602,6.753080,7.386269,6.286695,-6.332303,2.988428,-3.128916,2.451523,-6.215864,5.010628,-1.200116,5.188573,-6.227538,4.117157,-7.921235,-2.870718,4.571750,5.334365,6.500676,7.394188,-4.301972,-5.912096], dtype = "float64")#candidate|4834|(234,)|const|float64
call_4833 = relay.TupleGetItem(func_1079_call(relay.reshape(const_4834.astype('float64'), [9, 2, 13]), relay.reshape(const_4834.astype('float64'), [9, 2, 13]), ), 2)
call_4835 = relay.TupleGetItem(func_1082_call(relay.reshape(const_4834.astype('float64'), [9, 2, 13]), relay.reshape(const_4834.astype('float64'), [9, 2, 13]), ), 2)
output = relay.Tuple([uop_4824,bop_4830,call_4833,const_4834,])
output2 = relay.Tuple([uop_4824,bop_4830,call_4835,const_4834,])
func_4845 = relay.Function([var_4808,var_4809,], output)
mod['func_4845'] = func_4845
mod = relay.transform.InferType()(mod)
var_4846 = relay.var("var_4846", dtype = "uint64", shape = ())#candidate|4846|()|var|uint64
var_4847 = relay.var("var_4847", dtype = "uint64", shape = (6, 1, 12))#candidate|4847|(6, 1, 12)|var|uint64
output = func_4845(var_4846,var_4847,)
func_4848 = relay.Function([var_4846,var_4847,], output)
mutated_mod['func_4848'] = func_4848
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5030 = relay.const(5, dtype = "int8")#candidate|5030|()|const|int8
var_5031 = relay.var("var_5031", dtype = "int8", shape = (15, 8, 13))#candidate|5031|(15, 8, 13)|var|int8
bop_5032 = relay.minimum(const_5030.astype('int8'), var_5031.astype('int8')) # shape=(15, 8, 13)
output = bop_5032
output2 = bop_5032
func_5037 = relay.Function([var_5031,], output)
mod['func_5037'] = func_5037
mod = relay.transform.InferType()(mod)
mutated_mod['func_5037'] = func_5037
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5038 = relay.var("var_5038", dtype = "int8", shape = (15, 8, 13))#candidate|5038|(15, 8, 13)|var|int8
func_5037_call = mutated_mod.get_global_var('func_5037')
call_5039 = func_5037_call(var_5038)
output = call_5039
func_5040 = relay.Function([var_5038], output)
mutated_mod['func_5040'] = func_5040
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5468 = relay.const(4, dtype = "int64")#candidate|5468|()|const|int64
var_5469 = relay.var("var_5469", dtype = "int64", shape = (5, 9, 15))#candidate|5469|(5, 9, 15)|var|int64
bop_5470 = relay.greater(const_5468.astype('bool'), var_5469.astype('bool')) # shape=(5, 9, 15)
output = bop_5470
output2 = bop_5470
func_5486 = relay.Function([var_5469,], output)
mod['func_5486'] = func_5486
mod = relay.transform.InferType()(mod)
mutated_mod['func_5486'] = func_5486
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5487 = relay.var("var_5487", dtype = "int64", shape = (5, 9, 15))#candidate|5487|(5, 9, 15)|var|int64
func_5486_call = mutated_mod.get_global_var('func_5486')
call_5488 = func_5486_call(var_5487)
output = call_5488
func_5489 = relay.Function([var_5487], output)
mutated_mod['func_5489'] = func_5489
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5618 = relay.const(-3.715726, dtype = "float32")#candidate|5618|()|const|float32
var_5619 = relay.var("var_5619", dtype = "float32", shape = (7, 9, 1))#candidate|5619|(7, 9, 1)|var|float32
bop_5620 = relay.subtract(const_5618.astype('float32'), var_5619.astype('float32')) # shape=(7, 9, 1)
output = bop_5620
output2 = bop_5620
func_5627 = relay.Function([var_5619,], output)
mod['func_5627'] = func_5627
mod = relay.transform.InferType()(mod)
var_5628 = relay.var("var_5628", dtype = "float32", shape = (7, 9, 1))#candidate|5628|(7, 9, 1)|var|float32
output = func_5627(var_5628)
func_5629 = relay.Function([var_5628], output)
mutated_mod['func_5629'] = func_5629
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5668 = relay.const([[[False,True,False,True],[False,False,False,True],[False,False,False,True],[True,True,True,False],[False,False,True,True],[True,False,False,False],[True,True,True,True],[False,False,False,False],[True,False,True,True],[False,True,True,False],[True,True,False,True],[True,True,True,True],[False,True,True,True]],[[True,True,True,True],[True,False,False,True],[False,False,True,False],[True,False,True,True],[False,False,False,True],[False,False,False,True],[True,False,False,True],[True,True,False,False],[True,True,True,False],[True,False,True,False],[False,False,False,True],[False,True,True,False],[False,True,False,False]],[[True,False,True,False],[False,True,False,True],[True,False,False,False],[False,True,False,True],[True,True,True,False],[True,True,True,True],[True,False,False,True],[True,False,True,False],[False,False,True,True],[True,True,False,False],[True,False,False,True],[False,False,True,True],[True,False,True,False]],[[False,True,False,True],[True,False,False,True],[False,True,True,False],[True,False,True,False],[True,False,True,True],[False,True,False,False],[False,True,False,True],[False,True,False,False],[False,False,True,False],[False,True,True,False],[False,False,False,True],[True,False,True,False],[False,False,True,False]],[[False,False,True,False],[True,True,True,True],[False,True,True,True],[True,False,True,True],[True,False,True,True],[False,False,False,True],[False,False,False,False],[False,True,False,False],[True,True,False,True],[False,False,False,True],[True,False,False,True],[False,True,False,False],[True,False,True,True]],[[False,False,True,False],[False,True,False,False],[False,False,True,False],[False,True,True,False],[True,True,True,True],[True,True,False,False],[False,False,False,True],[False,True,True,False],[True,False,False,True],[True,False,False,True],[True,True,True,True],[False,False,True,False],[False,True,True,True]],[[False,True,True,True],[True,True,False,False],[True,True,False,False],[True,True,False,False],[True,False,False,False],[True,True,True,True],[False,True,True,False],[False,False,True,False],[True,True,True,True],[False,False,True,True],[True,True,False,True],[False,False,True,False],[False,True,False,True]],[[True,False,False,True],[True,False,True,True],[False,False,True,False],[True,True,True,False],[True,False,True,False],[True,True,True,False],[True,True,False,True],[False,False,False,True],[False,True,False,True],[True,True,False,True],[False,False,True,True],[True,False,True,False],[False,True,False,False]],[[False,False,False,False],[True,False,True,True],[False,False,True,True],[True,True,False,False],[True,True,True,True],[True,True,False,False],[True,False,False,False],[True,False,False,True],[False,False,True,True],[False,True,True,False],[True,False,True,False],[True,False,False,False],[True,True,True,False]],[[False,False,False,False],[False,False,False,True],[False,False,False,True],[False,False,False,False],[True,True,False,False],[True,False,False,True],[False,False,True,True],[True,True,True,False],[True,True,False,True],[True,False,False,True],[False,False,False,False],[False,True,False,True],[False,False,True,False]],[[False,True,True,False],[True,False,True,True],[True,False,True,False],[True,True,True,False],[True,True,False,True],[False,False,True,False],[True,True,False,False],[True,True,False,False],[True,True,False,False],[True,False,True,True],[False,False,True,False],[True,True,False,False],[False,False,True,False]]], dtype = "bool")#candidate|5668|(11, 13, 4)|const|bool
var_5669 = relay.var("var_5669", dtype = "bool", shape = (11, 13, 4))#candidate|5669|(11, 13, 4)|var|bool
bop_5670 = relay.logical_or(const_5668.astype('bool'), relay.reshape(var_5669.astype('bool'), relay.shape_of(const_5668))) # shape=(11, 13, 4)
output = bop_5670
output2 = bop_5670
func_5682 = relay.Function([var_5669,], output)
mod['func_5682'] = func_5682
mod = relay.transform.InferType()(mod)
var_5683 = relay.var("var_5683", dtype = "bool", shape = (11, 13, 4))#candidate|5683|(11, 13, 4)|var|bool
output = func_5682(var_5683)
func_5684 = relay.Function([var_5683], output)
mutated_mod['func_5684'] = func_5684
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5909 = relay.var("var_5909", dtype = "float64", shape = ())#candidate|5909|()|var|float64
var_5910 = relay.var("var_5910", dtype = "float64", shape = (3, 13, 12))#candidate|5910|(3, 13, 12)|var|float64
bop_5911 = relay.power(var_5909.astype('float64'), var_5910.astype('float64')) # shape=(3, 13, 12)
output = bop_5911
output2 = bop_5911
func_5936 = relay.Function([var_5909,var_5910,], output)
mod['func_5936'] = func_5936
mod = relay.transform.InferType()(mod)
mutated_mod['func_5936'] = func_5936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5936_call = mutated_mod.get_global_var('func_5936')
var_5938 = relay.var("var_5938", dtype = "float64", shape = ())#candidate|5938|()|var|float64
var_5939 = relay.var("var_5939", dtype = "float64", shape = (3, 13, 12))#candidate|5939|(3, 13, 12)|var|float64
call_5937 = func_5936_call(var_5938,var_5939,)
output = call_5937
func_5940 = relay.Function([var_5938,var_5939,], output)
mutated_mod['func_5940'] = func_5940
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6041 = relay.var("var_6041", dtype = "float64", shape = (3, 5, 14))#candidate|6041|(3, 5, 14)|var|float64
uop_6042 = relay.cos(var_6041.astype('float64')) # shape=(3, 5, 14)
func_5486_call = mod.get_global_var('func_5486')
func_5489_call = mutated_mod.get_global_var('func_5489')
var_6047 = relay.var("var_6047", dtype = "int64", shape = (15, 45))#candidate|6047|(15, 45)|var|int64
call_6046 = func_5486_call(relay.reshape(var_6047.astype('int64'), [5, 9, 15]))
call_6048 = func_5486_call(relay.reshape(var_6047.astype('int64'), [5, 9, 15]))
func_2683_call = mod.get_global_var('func_2683')
func_2686_call = mutated_mod.get_global_var('func_2686')
const_6053 = relay.const([1,-7,-1,-4,-7,10,-1,-10,2,2,-1,5,9,-4,-6,-1,5,4,3,10,-3,1,-3,-9,-3,8,-8,-3,-10,1,10,-3,-1,4,-6,-5,-7,5,5,4,6,1,-4,-2,-3,-2,-6,9,3,5,-10,-2,-7,6,2,-2,-1,-4,-7,-9,3,5,-8,9,10,3,-4,-4,4,5,-9,6,-9,-4,9,9,7,-1,8,6,-8,5,-6,5,10,-5,8,-8,-2,-5,8,-4,6,9,7,-2,-6,7,10,3,-3,-1,-2,9,-3,-6,8,5,-5,-10,8,7,2,6,-9,2,-9,-4,1,-2,6,3,-8,-10,3,-5,-1,-4,10,5,-1,1,9,9,-7,-2,1,-8,6,-1,-7,9,-9,-3,7,8,4,-7,5,2,-1,6,2,10,-4,-8,-7,1,1,7,-3,-5,-4,-9,-10,-10,7,-2,4,8,3,8,-2,8,-4,-9,-7,3,9,-10,-5,10,10,3,-6,-1,9,-10,10,-4,10,1,-10,-1,-8,-5,-3,9,9,-7,-4,-3,-8,4,1,-2,3,-8,-8,9,-10,-3,1,6,3,-4,-2,2,2,-5,5,-5,1,-9,-4,8,-5,9,-10,-8,8,2,1,-7,-9,9,2,-10,9,5,-10,-7,4,10,1,-9,-10,-9,4,-7,2,8,-9,-8,-10,10,-6,4,3,3,10,2,-4,2,-1,-2,-6,-7,-1,-3,-8,10,2,-3,7,-10,8,8,5,10,10,6,-4,-1,8,7,-9,-9,2,5,-7,-8,-6,-7,-8,-6,-2,-6,-7,-1,-3,2,-7,2,-2,9,-1,-6,-5,10,1,4,2,10,-1,6,-1,-3,-9,6,-1,5,-3,-10,4,-4,8,10,9,9,3,3,4,-2,10,-8,-6,4,-4,8,4,6,-9,2,-8,-10,-6,7,-9,-7,-9,-2,8,4,10,-3,-3,6,5,2,7,-6,-4,-5,2,-2,6,7,9,9,5,-4,9,2,6,-9,7,7], dtype = "int8")#candidate|6053|(378,)|const|int8
call_6052 = relay.TupleGetItem(func_2683_call(relay.reshape(const_6053.astype('int8'), [14, 9, 3]), relay.reshape(const_6053.astype('int8'), [14, 9, 3]), ), 0)
call_6054 = relay.TupleGetItem(func_2686_call(relay.reshape(const_6053.astype('int8'), [14, 9, 3]), relay.reshape(const_6053.astype('int8'), [14, 9, 3]), ), 0)
output = relay.Tuple([uop_6042,call_6046,var_6047,call_6052,const_6053,])
output2 = relay.Tuple([uop_6042,call_6048,var_6047,call_6054,const_6053,])
func_6059 = relay.Function([var_6041,var_6047,], output)
mod['func_6059'] = func_6059
mod = relay.transform.InferType()(mod)
var_6060 = relay.var("var_6060", dtype = "float64", shape = (3, 5, 14))#candidate|6060|(3, 5, 14)|var|float64
var_6061 = relay.var("var_6061", dtype = "int64", shape = (15, 45))#candidate|6061|(15, 45)|var|int64
output = func_6059(var_6060,var_6061,)
func_6062 = relay.Function([var_6060,var_6061,], output)
mutated_mod['func_6062'] = func_6062
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6078 = relay.var("var_6078", dtype = "float32", shape = (9, 1, 12))#candidate|6078|(9, 1, 12)|var|float32
uop_6079 = relay.cos(var_6078.astype('float32')) # shape=(9, 1, 12)
uop_6100 = relay.exp(uop_6079.astype('float64')) # shape=(9, 1, 12)
uop_6105 = relay.sigmoid(uop_6100.astype('float32')) # shape=(9, 1, 12)
output = uop_6105
output2 = uop_6105
func_6107 = relay.Function([var_6078,], output)
mod['func_6107'] = func_6107
mod = relay.transform.InferType()(mod)
mutated_mod['func_6107'] = func_6107
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6108 = relay.var("var_6108", dtype = "float32", shape = (9, 1, 12))#candidate|6108|(9, 1, 12)|var|float32
func_6107_call = mutated_mod.get_global_var('func_6107')
call_6109 = func_6107_call(var_6108)
output = call_6109
func_6110 = relay.Function([var_6108], output)
mutated_mod['func_6110'] = func_6110
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6414 = relay.var("var_6414", dtype = "float64", shape = (1, 2, 4))#candidate|6414|(1, 2, 4)|var|float64
var_6415 = relay.var("var_6415", dtype = "float64", shape = (2, 2, 4))#candidate|6415|(2, 2, 4)|var|float64
bop_6416 = relay.divide(var_6414.astype('float64'), var_6415.astype('float64')) # shape=(2, 2, 4)
func_664_call = mod.get_global_var('func_664')
func_667_call = mutated_mod.get_global_var('func_667')
var_6437 = relay.var("var_6437", dtype = "float64", shape = (14,))#candidate|6437|(14,)|var|float64
call_6436 = relay.TupleGetItem(func_664_call(relay.reshape(var_6437.astype('float64'), [2, 7, 1])), 0)
call_6438 = relay.TupleGetItem(func_667_call(relay.reshape(var_6437.astype('float64'), [2, 7, 1])), 0)
uop_6445 = relay.rsqrt(call_6436.astype('float32')) # shape=(2, 7, 1)
uop_6447 = relay.rsqrt(call_6438.astype('float32')) # shape=(2, 7, 1)
output = relay.Tuple([bop_6416,var_6437,uop_6445,])
output2 = relay.Tuple([bop_6416,var_6437,uop_6447,])
func_6451 = relay.Function([var_6414,var_6415,var_6437,], output)
mod['func_6451'] = func_6451
mod = relay.transform.InferType()(mod)
mutated_mod['func_6451'] = func_6451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6451_call = mutated_mod.get_global_var('func_6451')
var_6453 = relay.var("var_6453", dtype = "float64", shape = (1, 2, 4))#candidate|6453|(1, 2, 4)|var|float64
var_6454 = relay.var("var_6454", dtype = "float64", shape = (2, 2, 4))#candidate|6454|(2, 2, 4)|var|float64
var_6455 = relay.var("var_6455", dtype = "float64", shape = (14,))#candidate|6455|(14,)|var|float64
call_6452 = func_6451_call(var_6453,var_6454,var_6455,)
output = call_6452
func_6456 = relay.Function([var_6453,var_6454,var_6455,], output)
mutated_mod['func_6456'] = func_6456
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6479 = relay.const([[[-2.429953,0.325289],[-9.683892,5.187970],[9.447893,-7.848324],[-2.115118,8.063920],[9.516297,5.610552],[0.401879,-9.255429],[-8.571770,6.038336],[8.912761,9.800453],[5.503089,0.818768],[1.132972,5.347457],[6.890488,-2.362297],[-5.857838,-1.006559],[-3.945862,-3.375724]],[[8.161750,0.568878],[3.674663,-7.493674],[-4.158290,-7.180273],[-7.436663,3.008204],[9.472824,2.206197],[-5.290062,-2.602866],[7.147477,9.551075],[-4.681110,1.967642],[-4.916666,3.882574],[-1.203453,-4.236766],[-7.871235,-2.850623],[-4.739158,-0.592122],[-8.244570,-5.976106]],[[1.551292,1.923645],[2.989852,-6.856100],[4.815412,4.647023],[4.249412,5.895273],[-0.542280,-8.069864],[-6.412631,-3.926196],[-3.552862,-2.846543],[-5.595388,-6.060679],[-0.945990,-2.831190],[-2.020510,5.823463],[-0.718215,1.584354],[-5.626924,0.038793],[-6.553240,1.231641]],[[8.398472,9.589985],[-9.553055,-3.983254],[-2.810885,6.589316],[0.273874,8.558548],[-9.358912,6.969942],[0.623897,-0.837015],[4.988884,0.007206],[3.843993,-9.244637],[-0.763745,3.421707],[-8.136444,4.394051],[-6.324655,8.168177],[-7.388883,7.298527],[3.475482,6.716524]],[[9.188530,-0.357698],[-9.785153,-6.512986],[-1.394593,-6.680891],[-9.589458,-7.024370],[4.232016,5.224338],[-4.061925,4.183393],[3.362622,0.087027],[4.992412,-8.789269],[0.987976,7.433129],[-7.949991,2.194142],[1.154070,7.665848],[7.842514,-5.009756],[0.939374,-9.230533]],[[-7.279952,-5.820149],[-6.943271,-6.937158],[-7.548681,-7.255455],[-4.907415,7.572152],[7.996286,5.791477],[-7.549670,-9.718828],[-6.505025,3.564885],[9.906718,0.876061],[4.411546,5.938054],[-6.254711,-4.946426],[-3.704013,-2.916956],[-0.883564,7.370497],[-5.115262,-3.798344]],[[3.385760,4.487135],[1.660667,6.027532],[-2.575854,-6.695070],[-6.641132,-6.066010],[-6.476701,-3.583062],[6.278140,6.804725],[-0.355122,-0.199327],[6.559531,-3.251060],[0.884430,5.590049],[-6.470363,3.512452],[6.699643,-3.581534],[-3.452827,-4.548928],[2.882803,4.990129]],[[4.226825,7.246104],[-5.189429,9.586353],[-1.739262,-7.570772],[4.030428,0.420505],[0.267848,-2.126106],[-8.723805,-5.044165],[5.578747,4.144776],[1.255736,-0.319159],[8.650768,4.545735],[1.886421,-1.964350],[-4.670416,4.263797],[-8.338249,2.193426],[-8.952901,-6.375135]],[[-3.799233,5.253196],[-1.581621,4.798435],[4.806323,-2.310190],[5.690792,-3.137553],[-9.753993,-1.530894],[-6.033426,-8.873969],[-0.593717,-9.405747],[-0.273624,-2.222267],[2.538971,-5.775364],[-2.538366,-8.654765],[2.416069,5.984124],[-1.445000,9.302353],[-9.725657,9.791273]],[[-3.722476,7.291367],[9.867818,9.879274],[-4.392599,-7.431333],[8.642843,9.018519],[-5.201794,4.743707],[1.885472,-0.740088],[7.971369,-8.139897],[-5.424975,-8.030987],[-4.162633,1.330123],[9.641301,0.231561],[-3.043476,1.558059],[-0.181189,-6.778987],[-0.096923,1.741496]],[[-0.972699,5.345233],[9.477049,9.171692],[9.020372,-2.622784],[4.264015,7.204808],[-7.767546,-7.358185],[0.290934,-3.112027],[6.667196,-5.988506],[3.530496,4.722189],[-0.907009,6.454716],[-4.058100,1.631038],[-4.291590,1.165191],[1.522442,-9.531201],[1.622505,1.121814]],[[-2.871601,2.371128],[-5.775400,-6.078633],[6.081975,1.917104],[-7.485807,1.684500],[8.318489,5.014675],[4.879801,0.954630],[2.734730,-3.870514],[-0.377645,3.058596],[-5.390701,-9.323397],[6.843559,-3.793227],[-2.705758,-9.890700],[-4.181307,-0.549831],[-3.339634,9.821559]]], dtype = "float64")#candidate|6479|(12, 13, 2)|const|float64
uop_6480 = relay.sinh(const_6479.astype('float64')) # shape=(12, 13, 2)
func_2759_call = mod.get_global_var('func_2759')
func_2767_call = mutated_mod.get_global_var('func_2767')
var_6483 = relay.var("var_6483", dtype = "bool", shape = (15,))#candidate|6483|(15,)|var|bool
const_6484 = relay.const([True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,True,True,False,True,True,False,False,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,False,True,False,False,True], dtype = "bool")#candidate|6484|(225,)|const|bool
var_6485 = relay.var("var_6485", dtype = "float64", shape = (234,))#candidate|6485|(234,)|var|float64
const_6486 = relay.const([-1.551233,-5.420695,7.712329,9.022353,-5.564578,-5.025257,-9.444518,9.300870,5.520906,-8.800816,9.981669,3.368856,-2.250748,9.204384,-7.273821,-6.778962,-3.711742,0.823569,-7.844681,0.282322,6.497200,5.005405,8.358676,-7.912489,6.567498,-4.928587,4.251457,-6.915179,-3.495604,-1.470254,1.756918,-4.916174,3.485692,7.082898,-8.364323,-7.084733,-8.600134,6.984450,-3.089468,-3.995558,-9.190815,-7.307255,-3.798773,-7.735876,-2.250657,2.461350,4.068277,-2.686907,6.650925,-8.737036,-1.224699,-8.665179,-9.660755,0.073451,5.758246,-5.442366,-4.789574,-2.907420,-2.551111,4.039381,4.493546,-9.070003,-1.202781,7.212670,0.448592,9.469421,-8.765476,-1.145466,-2.486620,8.719394,-1.930927,5.514055,-2.885909,3.110033,-9.361346,2.095182,-7.301543,7.335160,-6.094063,-7.704965,-3.417213,-6.988912,6.484701,-3.119657,-4.176892,-0.221457,3.643075,6.379924,1.616197,-7.481205,3.988110,9.590055,-9.602777,2.335884,9.579022,-4.986379,2.349677,-1.570738,4.632913,-2.801049,-3.427692,-0.646294,8.862553,4.646656,8.709139,-1.935636,6.738211,-1.502855,-4.565324,5.541428,5.165021,-7.806871,-0.658183,-1.982501,4.915388,6.935908,2.815060,0.375618,3.236201,1.010864,5.306276,2.703577,9.292773,-8.205416,3.796542,8.084729,7.542120,-1.740871,-8.511205,8.310503,4.980032,4.669584,4.163998,1.342605,7.541352,4.483802,3.473161,7.984537,-3.816331,-2.019395,4.003444,-8.818429,2.414137,-8.927347,8.031812,0.861299,-6.691587,7.296674,-9.626785,-1.631341,0.390120,-7.453640,1.367756,0.175214,6.295342,6.419864,0.925130,8.255387,-0.356535,-7.781928,3.264607,3.794977,-3.261961,0.078910,5.528490,-4.979315,9.394918,6.502581,6.334985,-1.296448,7.709393,0.862599,-8.249796,9.789336,4.910135,-3.488918,-4.180584,-3.197803,9.405980,3.321525,-9.770589,0.109003,-7.405557,-2.979202,-5.514358,-7.697002,-0.892825,-4.657099,-2.945381,-7.670436,-5.414336,-9.945936,-8.351736,2.554458,1.786313,-1.705228,6.681030,8.444889,4.604966,3.033489,3.697437,7.662291,3.464713,-1.322409,0.176647,8.477802,1.498894,-1.804123,1.319088,7.108051,-4.384153,-3.882186,-6.263870,1.866916,2.143064,3.001335,-6.913160,-9.930671,-0.409413,6.786287,5.808045,9.056720,2.876879,-5.163389,-8.502171,2.075842,-3.173236,-6.901938,4.901224,-4.787446,-3.493094,3.308883,-4.707757,-3.480567,-6.053203,-0.499066,6.504611,0.166696,-0.829784,4.467817,5.969393,2.009673,-3.737268,-6.608995,-6.532970,-4.914468,-5.787601,0.062907,6.452605,-4.638871,-1.397993,-6.956347,-6.300920,-3.190754,1.738608,3.560333,-1.669670,-9.859706,-6.094514,-5.297377,2.793653,4.472547,7.161325,-3.303304,0.814364,-1.441192,-3.360486,4.524931,-1.468156,7.394545,9.493824,0.757244,0.786160,-1.760940,-7.284801,-8.044919,2.481005,-6.082306,0.749330,7.620591,7.713506,-1.286129,-3.104356,-8.207398,8.227446,6.272353,4.047824,-3.198680,-5.400094,-8.750121,9.817478,5.437083,1.359973,5.157245,-8.022264,0.917096,3.130773,5.831526,9.344194,-8.223764,4.230911,7.820566,-7.339336,-1.336933,-7.679577,-7.244586,8.261136,-3.171356,1.098041,2.019754,-5.758053,9.868927,-3.801353,-8.909885,-8.204989,-8.359679,-5.271406,-2.982196,4.070030,0.675324,-9.158576,-1.373372,2.930855,-3.176521,-3.942111,9.034525,-0.648091,-8.562605,1.976510,-2.470205,-1.713675,-6.623512,-2.236478,2.198925,7.955647,2.025470,-3.692123,6.204993,-3.863652,-2.633675,-0.308470,5.712489,-9.896566,5.393482,-7.564115,-3.480213,2.082678,4.980268,7.608733,4.495314,-8.906458,-1.678083,-2.589451,-1.428686,5.549919,-4.941241,-9.064413,-1.275190,6.100178,8.450368,0.086615,-8.434736,-0.867442,-1.185486,8.658333,-8.067395,-4.460574,-4.885424,-6.315383,0.112875,-1.133716,8.861760,-2.624036,5.335503,-1.118961,3.333895,-1.749766,-0.572803,-4.632292,5.758064,-8.551664,2.659554,-0.281705,-8.580583,-2.645579,2.464027,8.611215,-0.962671,-2.899575,8.479069,-5.925442,6.750490,8.252069,9.551264,-9.861549,4.745607,-9.865268,-0.966160,-3.037005,7.338442,-2.725144,3.578483,-5.964235,4.232974,-2.680820,7.972789,-8.444437,7.075634,-4.771527,6.743268,3.890934,1.115532,0.265475,0.828376,-2.615122,-4.548828,5.084743,-6.467904,9.463539,-3.947132,2.544974,-0.942087,-2.823324,1.114503,-4.802086,-3.908837,4.442206,6.191307,1.201238,-1.613419,-2.805076,-4.623048,5.340064,1.041632,2.637698,-6.034474,8.183726,-9.385098,-9.497474,-6.508719,-0.297044,8.381101,-2.943961,-3.435391,4.835895,-4.836651,1.055477,4.492960,5.499496,-7.883774,-6.828834,2.162788,1.073387,-6.508417,2.622767,3.019826,0.074983,3.895491,9.081653,1.076966,9.525981,-6.129780,-8.542302,9.463803,-6.772011,-5.902882,-5.536624,-1.585218,7.921734,0.802015,6.824968,-0.313614,9.314401,0.362708,5.285256,9.104770,-5.105261,-4.641105,2.348986,-8.335274,8.611608,3.475408,2.968675,4.996492,-9.000449,2.188568,7.640291,-6.418149,-5.508748,-5.219929,-6.368781,-7.317138,5.237476,5.306302,-9.201800,1.450754,1.428207,0.708626,-7.042851,3.598556,8.499247,5.785406,8.516363,-0.316937,5.118302,7.970423,-3.533792,-4.257520,-0.332835,2.591175,1.541649,-6.088464,1.862532,4.330591,5.022531,-6.330802,-2.265419,5.917530,9.670686,2.344879,-7.443114,-1.172745,-2.627927,0.353650,-3.662399,3.711892,1.564806,-3.376394,1.080544,-3.780643,8.145407,0.654224,-4.573242,9.068698,-4.930431,-9.007447,2.164730,-1.739230,3.431403,3.243560,-9.571342,-8.621639,-7.489881,-7.370151,-1.982053,-4.238019,6.408606,6.343729,1.834372,6.045680,7.037156,-1.321760,-6.269939,-6.742849,-9.209889,2.933343,-5.249039,-3.743607,8.875660,-8.510613,-2.385014,3.139231,5.324288,8.642367,7.973181,-9.726028,3.094025,2.447858,0.313644,4.805730,9.537824,-5.023385,-8.154187,1.234706,6.170574,-1.954863,-2.193780,6.256929,-3.957682,-8.871905,3.233691,5.027101,-1.864051,-2.261568,-5.287694,1.159386,0.687532,-3.393750,0.213001,4.237053,7.365461,-5.625133,2.591781,9.833539,-7.044754,1.669743,3.970091,-6.302883,8.558363,0.886943,4.369685,-0.621890,0.717707,-8.057008,-7.123272,8.599322,6.389042,1.001540,-8.277514,5.802709,6.817622,-4.996389,6.517750,-3.552835,-3.740290,-3.319534,-3.797526,-0.281570,0.051118,-2.215563,-8.247377,-0.819020,2.387112,-3.521956,-8.483497,0.164284,-4.421789,-8.781088,-2.642329,-7.781228,4.208016,-4.642584,0.547612,0.579207,-5.944734,-2.552153,9.920801,-7.388317,6.462786,-0.918584,-2.345966,2.391757,-3.223641,-1.400542,-2.871832,1.976179,-7.943433,8.203983,-2.531699,-2.930071,8.424579,5.851850,6.293782,7.681711,-2.086154,3.478234,0.470593,8.330605,-8.331567,7.770091,-8.796115,-1.574312,-9.219117,2.995009,-0.139909,9.152601,-8.370582,0.604222,3.654760,-0.211333,-0.291111,-8.038260,-4.464528,0.169775,-1.560382,6.195838,1.431351,3.043003,-4.317425,-5.891989,-5.676092,-5.722948,-8.522107,3.404981,-1.230415,4.578589,4.792931,7.500723,9.033343,-2.757220,9.776860,7.183175,-3.207921,-9.398858,6.007419,1.203005,3.579093,-0.402185,1.035708,9.956978,-5.865944,7.290974,-3.305118,9.583827,6.290608,3.348755,-9.540234,-5.291056,6.407597,5.387459,1.868206,8.357355,-5.655294,7.539505,4.072387,6.895209,3.753040,3.394943,8.534648,-9.889960,-7.068461,0.658664,-7.696902,5.710749,9.269990,-6.860415,-8.151141,5.969740,2.076139,-4.225028,8.531442,-2.222396,-1.055887,-9.984317,7.918979,3.601291,5.265331,-5.283465,-6.261852,3.927485,-0.875590,-6.945677,6.950625,6.188585,-9.685914,3.972438,3.347496,1.339511,6.014074,-1.902493,-2.111082,8.355104,-2.111147,4.021826,0.362281,-0.243737,-8.475555,-0.189083,-7.097660,-3.256030,-4.807143,-8.642912,-8.777430,5.190855,-3.749839,-1.092312,4.363082,-8.232624,8.398808,-6.949557,-0.808485,-9.809664,-2.215936,8.143161,-0.039872,0.257681,9.961898,-8.598356,6.913650,-1.042733,6.099275,-6.607549,-6.766818,7.545124,-9.611759,-4.210434,-0.987497,5.994034,-8.051381,-0.505657,6.524591,3.203315,5.311383,-6.313384,2.522703,-6.559511,8.653024,-6.475377,1.517405,6.425032,1.544488,9.787837,-7.380934,-5.448676,3.912126,4.761773,1.634102,4.644870,-3.784949,8.206217,-3.432062,2.499332,0.786927,9.581843,5.097115,-4.278851,2.193236,-5.350496,5.239154,-3.374334,5.602044,6.887581,-0.551009,-7.915032,-6.109432,-6.801964,9.338566,-7.071369,8.103145,-5.053254,-3.609744,-1.438139,-8.665197,8.595683,4.197829,-7.875897,9.745809,1.780894,-7.680896,-5.365853,-1.885340,-9.537103,-4.188331,-2.231559,-3.650806,-9.477113,8.085430,-4.603879,-4.244288,3.592253,2.737747,-9.340713,7.372202,-5.258338,2.980615,-3.944021,-7.867104,-1.502704,0.580797,-8.723332,8.454974,-4.927512,2.205704,-7.306076,-7.822111,-3.968524,0.955176,-7.157772,-1.038235,-1.723188,-0.492233,1.166968,4.108089,5.480856,-1.693158,0.774313,6.794267,5.455181,-5.785361,-5.588751,2.444613,4.832252,9.023200,-2.723088,-0.622372,-8.389157,7.413502,7.689218,5.069317,-3.035385,5.499819,9.692695,8.399123,8.763359,-9.043438,6.696086,-2.144520,-8.621848,-7.316441,-1.622898,4.629112,0.235664,-9.799959,-7.712480,-7.655990,-6.318207,-5.037866,-5.747540,-9.660777,4.633450,2.986995,-7.746203,4.156251,0.538774,9.778205,6.158027,-1.158475,-1.207970,2.026495,-4.225163,4.287228,4.668421,-4.850728,3.214955,-0.460933,1.112388,0.979597,7.405856,-0.271683,9.262919,-0.216642,1.839165,3.113004,-4.725085,-3.431397,-8.791890,8.037510,8.584096,4.200777,-2.662358,1.222399,3.455713,3.476497,-1.329154,-1.104109,-6.904270,-3.388061,3.944101,9.527160,-6.433664,6.139358,9.937307,4.547875,-6.573271,6.120713,-6.749141,7.309866,-3.642398,-3.643436,-6.047975,-6.485422,-3.101419,-8.525782,-0.101452,4.808165,9.767520,-9.325029,0.112710,8.140746,-4.861400,-9.037736,-8.322406,7.452479,-3.757233,6.015083,-1.570484,0.581312,-9.913659,-0.762463,8.375925,4.089709,-4.220036,4.270078,1.139822,-2.799383,-4.185737,-9.233702,-3.444855,3.337851,-0.334471,5.770676,-0.395296,0.784694,6.791863,7.125426,9.124178,6.487921,-4.154151,4.494407,-9.906313,-8.358384,-4.575036,5.318556,-7.116892,6.719805,2.340906,9.338152,-5.514845,-0.370681,-8.626323,-9.086576,-4.002411,-1.738438,3.126805,4.898505,8.510516,-6.015970,-9.696594,-1.262867,-3.370044,0.906919,-1.297541,5.506690,6.348159,-2.559318,0.604159,9.421742,3.495891,0.395569,9.543826,-0.898533,-4.948880,-9.536363,-5.816734,4.143702,4.072638,-0.055873,4.031844,-8.011157,0.341249,-3.262538,9.842785,-5.682208,6.692666,8.369101,-4.316726,7.556387,-8.763756,-4.533068,-5.894792,3.726612,-5.433465,-0.439019,7.324542,7.026378,8.598154,-6.126477,2.629629,7.086705,-8.626100,-2.601628,-7.677156,6.921837,9.290534,0.905202,9.762649,6.460656,-5.873558,9.706946,-2.169202,-5.646959,-4.933507,1.498387,-6.170845,9.798147,4.875364,5.763580,1.145266,1.060820,-4.696074,7.551705,8.518713,-9.352858,-2.870833,-6.375490,-6.104804,-0.160952,3.767121,-0.253751,7.387141,-4.612167,5.769675,-7.934086,-0.169455,-5.761179,3.410661,-1.267500,-9.848849,-8.094931,-7.040525,-3.302567,-0.699513,6.100688,-6.463203,2.245499,1.421342,-8.735455,7.333354,-8.329148,-1.232220,9.951623,-6.505799,9.886452,-2.859595,0.670386,-4.588560,8.026147,-4.082753,-6.289334,-8.827827,-5.093979,5.517226,9.932447,-7.802226,-6.006716,-6.777568,-4.274945,6.691334,0.014421,3.950399,-2.378403,-9.968441,-0.619243,-5.906903,9.838438,-4.144588,4.430302,8.737973,4.768530,-7.772849,-0.635356,0.276526,9.897342,-7.419264,-2.677379,6.307530,9.713334,-3.521128,-7.925940,-0.744707,9.753724,-5.257390,-0.253472,3.736431,5.092928,4.954152,-0.227302,-6.826156,8.782857,0.832756,-9.927643,-1.481935,-6.433677,-8.050323,-8.684056,5.535251,8.666544,-5.789687,4.125788,8.189266,7.779666,-2.371431,7.492854,1.419665,-8.147626,-4.380133,1.212764,-9.879941,0.967836,-5.307315,-1.246794,-7.438485,1.240373,0.696773,-8.065883,2.211322,-3.662857,-8.868678,-7.153338,-7.503625,-8.552606,-2.851437,-8.075061,5.068450,8.342150,0.945232,7.664812,8.540829,-5.002072,6.876959,-2.337396,-1.853629,5.154987,-5.271063,-7.850964,-1.524682,-0.004690,-9.614579,2.670088,-1.035481,1.264269,-2.327377,5.627214,-6.238183,3.561628,5.281500,-3.740662,-3.838861,-5.393066,-5.786861,3.079085,9.206945,9.197500,-6.315965,7.834486,7.661954,-9.599630,-4.867336,1.750698,9.668145,-1.251937,-4.154701,-5.745246,-7.063980,-1.085042,5.185861,0.592652,5.790573,-2.250292,-9.611898,-4.788236,1.105417,9.145240,9.508208,-2.854326,8.651102,9.581536,9.239786,-9.049387,-1.237958,-8.340376,9.107447,-1.822153,-2.783584,-4.619500,-4.965958,-5.493595,-4.825512,8.813427,1.823541,-8.813874,4.561902,-6.150850,-2.329199,-1.036270,8.675457,-9.201337,2.243672,7.202504,-7.933201,-2.764640,5.798729,-1.264366,-8.902828,2.892610,3.056003,1.059961,7.256940,0.688735,-1.937883,-9.965630,6.568541,-0.191838,2.295024,-6.764554,-6.783764,-9.377642,-5.085886,4.336537,4.586428,-2.888035,-6.302500,8.448311,8.874791,8.885552,-9.592385,-1.226187,5.717515,-5.224701,-0.163933,-4.991230,9.840293,-3.638953,5.117347,8.534852,-4.516379,1.936714,3.360034,-4.808719,7.522023,-2.973268,5.499993,0.820280,-5.039603,8.488367,4.465012,4.708259,2.419810,-4.250109,4.783174,0.494095,9.673008,-6.410663,7.956695,3.823567,6.114731,-7.989897,-7.671521,4.823353,-1.993556,-6.959383,-7.809100,-1.257081,7.444589,-2.190243,-9.415166,6.802269,-0.802178,-0.900631,-3.041537,-3.285148,-1.460454,7.923918,0.145593,4.696223,5.931139,7.370979,9.906864,5.615781,-4.319804,8.232463,9.182202,-8.225868,-9.325287,0.402159,-4.318058,-8.132237,2.860898,-5.668041,-9.726692,-7.930303,4.865388,0.209365,9.311646,6.635290,-5.616373,2.119776,6.047311,0.233333,-7.744871,4.839978,3.996386,7.505545,7.541824,3.995193,4.274692,5.155101,8.708393,3.043059,-9.647434,-6.430038,9.162907,-1.194783,2.954993,7.619045,4.786468,-2.924230,-2.893790,1.846562,4.820272,-2.872522,-9.416343,9.587869,-2.877727,-7.245953,-8.360771,-1.035583,-2.689762,-6.269001,-9.219923,-8.248856,-3.433086,-1.276986,-7.540074,-4.366584,-9.840325,2.735051,1.242027,-8.608423,9.135637,-5.115453,2.895037,-8.775628,8.220906,8.668011,-7.522789,0.386583,0.341964,1.882172,3.498236,1.404773,-0.656967,-4.459569,-4.370959,-6.236889,-1.167468,3.338698,4.024293,0.973888,-7.946635,-0.339247,-6.762429,-3.385387,-1.332146,-1.896378,5.469793,5.834201,-2.310665,9.989744,6.072115,-3.526789,-0.872278,8.238382,9.232079,1.236161,-4.022658,-5.156540,8.527019,-8.078077,8.388509,-0.461915,-2.750448,-3.951233,6.642409,8.453151,0.704227,-5.699455,0.125048,9.494875,6.048122,0.924231,8.698578,-1.703367,-0.915559,-0.142773,8.723773,-5.393229,-8.295753,-2.884739,2.790463,-9.306008,-7.684871,-8.703635,9.291800,-0.277862,-4.546111,-9.281982,-0.372696,8.772961,9.819016,-4.957043,-2.339948,-2.807227,4.484561,-3.715040,8.229009,-7.231347,-3.022120,0.071723,-7.117752,-3.182444,6.516113,-3.317610,2.542544,-7.280268,6.547224,-7.483990,-2.815124,3.306726,5.229406,-0.760986,-8.507619,-1.133055,4.672321,-2.112003,-1.066468,4.810468,4.795809,1.798486,5.311004,8.777665,-7.334905,-7.005619,4.720783,-1.129376,7.446641,7.753582,1.844916,-5.994578,1.942312,4.512396,3.091552,-3.704772,-0.835481,-6.089650,5.749676,3.506709,8.762761,-4.700081,0.134658,3.736449,9.969817,-1.925769,2.918356,-9.989570,-3.148836,-4.377258,-5.084492,-6.947568,-6.718101,-2.095069,8.173260,4.268297,9.862624,7.804223,-8.532943,5.604170,4.017028,1.533111,9.765751,9.906561,0.878453,6.325315,-6.977511,-1.806203,-0.706052,4.714224,-3.796611,-1.357331,-4.064088,-6.231964,9.334457,5.455949,-3.284750,8.542303,-4.380773,9.147433,-7.420711,6.539432,-7.509559,4.166638,-1.864953,-2.962092,4.592690,-9.736181,-6.446502,-8.844202,-0.167959,-8.000292,-4.645785,-4.727834,8.562958,-4.911641,5.467237,-4.848494,-9.595621,-4.562279,-5.430868,0.211182,-1.971146,-7.301531,5.414244,-0.061763,-6.816365,-8.487980,-4.475795,3.799221,-1.440867,7.554080,1.497068,8.001690,3.261702,-3.180759,4.419898,6.096930,1.137134,-0.553129,-3.498263,-1.219084,-4.786907,-5.752501,-2.393848,-5.305172,8.074122,-0.329883,2.532255,-8.797610,4.161134,2.922688,1.919008,-4.772081,-1.640151,3.892286,3.737980,4.093599,-8.372658,-2.033460,7.287209,7.722008,-4.762576,7.704055,6.250919,-6.303113,-4.160382,6.944807,-8.851849,-9.942626,7.056897,-0.990914,0.756889,-6.035186,6.601416,-2.537759,8.012809,0.110702,1.527720,0.994547,4.491758,-2.900232,4.054265,5.700764,3.854980,-7.959799,7.700910,-4.939790,-7.905799,-2.007486,1.156474,-5.774436,-0.596035,4.179849,-6.241795,-6.156978,-3.238133,8.185474,0.504332,-1.608975,-8.711477,9.054504,5.361591,3.576881,-6.405310,1.255092,-8.870179,-7.521229,6.513771,4.284808,-8.698564,8.964801,-8.882017], dtype = "float32")#candidate|6486|(1680,)|const|float32
const_6487 = relay.const([-9.026914,-1.625699,2.745672,4.717368,-8.115371,-8.622494,-8.635621,8.456159,1.487604,-2.618621,2.551182,5.838346,9.800825,0.046483,4.093538,-3.388594,7.182337,2.435383,-1.984619,2.063959,-5.324901,-1.473885,-8.944321,5.311881,2.997345,-9.165161,-8.853883,0.859398,8.358923,-9.984894,-7.117137,3.305362,-4.303530,-8.116792,7.031410,6.676544,-1.662354,-9.614651,6.307756,-9.874913,1.839407,6.565500,-1.553230,-4.604338,-3.097355,-5.418910,9.979096,-6.763328,-4.718463,1.283686,-4.231872,0.307213,-7.296876,0.452365,0.828026,-5.291062,2.282303,5.877492,5.799993,0.156851,-9.039529,-6.616072,3.079403,0.624492,8.411050,-6.156341,8.070866,-5.503295,4.397618,-6.950285,-3.343265,-3.326277,-7.457502,1.296403,0.455012,2.641552,6.277104,9.354378,-1.203040,-5.095270,2.949542,5.017126,1.511655,7.659660,-3.850619,6.971074,-5.066044,-2.381074,8.787422,-4.112412,-3.047137,7.458490,0.540716,6.570945,4.613247,-8.408904,-2.952351,-6.883268,0.114107,-1.488006,9.051152,-6.901175,0.870931,-2.064707,9.204834,4.334458,8.710711,4.092039,-7.868132,-3.892340,-6.927471,-5.153947,2.285684,-5.263099,-8.641331,-4.331778,0.866529,-3.822885,6.910433,6.518284,9.797187,-2.319557,2.869418,-5.356466,-4.222789,-6.680579,0.285117,3.223995,5.243980,0.976359,2.287477,9.839150,7.931956,5.705522,-2.528288,7.004436,-3.765958,-7.156777,9.982496,3.683526,-3.513413,-3.190768,-7.359173,-6.787725,-3.363391,-1.457714,8.713089,-4.656868,8.987210,5.059923,-9.809792,7.684797,-4.059135,7.157891,-2.195734,-7.741979,-0.206329,-3.334262,-9.855812,-5.282583,6.950036,-5.257749,-6.092717,1.331414,0.704080,0.528428,5.621437,-3.928797,3.199761,6.429186,-6.471197,-7.304189,-7.386042,2.237188,7.765218,3.164603,-6.058987,3.946513,-6.229973,-9.445045,8.394118,-0.141457,6.169374,-2.077689,-8.990178,-0.126718,9.920383,7.127396,-6.149874,1.840958,-6.624863,-7.746568,-8.645842,0.672839,-0.466306,-0.299617,2.950065,-5.354687,0.319118,8.435942,-7.271019,-2.704696,-6.527934,5.112956,0.796844,-2.193170,-9.396539,-4.918376,-6.716724,3.092227,-7.772473,-6.091905,-3.421156,-3.624446,-6.887184,0.212593,8.419448,-4.751217,0.920505,-2.069888,-4.555426,-0.242568,4.963018,-5.025804,-2.584368,-0.155107,5.308544,4.774715,1.957420,-8.296531,2.268436,-6.182834,2.987829,4.804143,9.505099,8.296607,-8.014871,-0.718583,5.251077,-2.052164,-9.292810,-0.373836,5.702854,-1.400707,1.914702,-8.408587,-1.687024,2.811786,-0.105793,2.865915,9.076004,2.806516,-6.706052,0.086130,-8.157686,-4.018025,8.586207,6.676389,-8.957669,0.594675,-6.500796,-6.508116,5.643498,-4.514396,-5.332467,9.304512,1.437591,-5.433463,-2.291149,8.418670,7.391669,5.477563,-3.642104,8.077672,-8.795980,-7.479593,2.856355,-4.135227,-9.500779,-1.852995,-7.286185,-8.348345,-6.984555,4.842115,7.373238,-7.421263,-0.035903,4.039397,-5.055533,0.731112,2.290387,1.585297,1.085161,8.396939,-2.310022,-7.849354,7.739270,-5.006777,2.544882,-3.309252,-6.907360,8.371711,4.940706,0.236319,-1.007676,-9.136842,-9.006432,-2.088131,6.092702,-9.750198,7.912524,-0.820373,3.210144,-0.415466,8.941469,1.233963,5.252732,-2.455474,2.764724,-4.917047,6.069373,-9.200614,-7.224462,6.633983,-8.182056,-4.295547,-2.537238,4.738349,4.272733,7.991155,-0.198828,2.327742,5.491912,-1.627985,3.508308,-5.357582,-5.939273,1.941881,1.318141,-2.410122,-1.935779,2.462391,-9.071254,-0.447511,8.110108,-8.288490,9.313094,0.205223,3.412401,2.686007,5.194890,3.211254], dtype = "float64")#candidate|6487|(352,)|const|float64
var_6488 = relay.var("var_6488", dtype = "int8", shape = (126, 3))#candidate|6488|(126, 3)|var|int8
call_6482 = relay.TupleGetItem(func_2759_call(relay.reshape(var_6483.astype('bool'), [1, 3, 5]), relay.reshape(const_6484.astype('bool'), [15, 3, 5]), relay.reshape(var_6485.astype('float64'), [234,]), relay.reshape(const_6486.astype('float32'), [1680, 1]), relay.reshape(const_6487.astype('float64'), [352,]), relay.reshape(var_6488.astype('int8'), [42, 9]), ), 12)
call_6489 = relay.TupleGetItem(func_2767_call(relay.reshape(var_6483.astype('bool'), [1, 3, 5]), relay.reshape(const_6484.astype('bool'), [15, 3, 5]), relay.reshape(var_6485.astype('float64'), [234,]), relay.reshape(const_6486.astype('float32'), [1680, 1]), relay.reshape(const_6487.astype('float64'), [352,]), relay.reshape(var_6488.astype('int8'), [42, 9]), ), 12)
output = relay.Tuple([uop_6480,call_6482,var_6483,const_6484,var_6485,const_6486,const_6487,var_6488,])
output2 = relay.Tuple([uop_6480,call_6489,var_6483,const_6484,var_6485,const_6486,const_6487,var_6488,])
func_6492 = relay.Function([var_6483,var_6485,var_6488,], output)
mod['func_6492'] = func_6492
mod = relay.transform.InferType()(mod)
var_6493 = relay.var("var_6493", dtype = "bool", shape = (15,))#candidate|6493|(15,)|var|bool
var_6494 = relay.var("var_6494", dtype = "float64", shape = (234,))#candidate|6494|(234,)|var|float64
var_6495 = relay.var("var_6495", dtype = "int8", shape = (126, 3))#candidate|6495|(126, 3)|var|int8
output = func_6492(var_6493,var_6494,var_6495,)
func_6496 = relay.Function([var_6493,var_6494,var_6495,], output)
mutated_mod['func_6496'] = func_6496
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6567 = relay.var("var_6567", dtype = "int8", shape = (9, 15, 3))#candidate|6567|(9, 15, 3)|var|int8
var_6568 = relay.var("var_6568", dtype = "int8", shape = (9, 15, 3))#candidate|6568|(9, 15, 3)|var|int8
bop_6569 = relay.bitwise_or(var_6567.astype('int8'), relay.reshape(var_6568.astype('int8'), relay.shape_of(var_6567))) # shape=(9, 15, 3)
output = bop_6569
output2 = bop_6569
func_6573 = relay.Function([var_6567,var_6568,], output)
mod['func_6573'] = func_6573
mod = relay.transform.InferType()(mod)
var_6574 = relay.var("var_6574", dtype = "int8", shape = (9, 15, 3))#candidate|6574|(9, 15, 3)|var|int8
var_6575 = relay.var("var_6575", dtype = "int8", shape = (9, 15, 3))#candidate|6575|(9, 15, 3)|var|int8
output = func_6573(var_6574,var_6575,)
func_6576 = relay.Function([var_6574,var_6575,], output)
mutated_mod['func_6576'] = func_6576
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6578 = relay.const([[[-0.510712,7.837273],[-4.191777,1.663692],[-5.586958,6.117491],[0.989596,8.064218],[7.792703,0.792760],[-9.435487,-9.185556],[0.349242,3.658707],[2.763225,-6.408273],[-8.964588,3.740568]],[[7.709569,-8.454192],[4.297839,2.340295],[-9.856912,-3.628309],[6.878104,0.582533],[7.234459,7.350576],[-3.809510,9.019941],[4.924876,8.523345],[3.230124,-2.525181],[3.379802,-5.703844]],[[-0.231543,2.196456],[-9.124497,0.157878],[2.657934,3.240645],[-4.869061,4.799547],[-9.871284,1.125671],[-8.851941,7.224709],[7.723080,6.980881],[-5.600943,0.888531],[5.184152,-3.928399]]], dtype = "float32")#candidate|6578|(3, 9, 2)|const|float32
var_6579 = relay.var("var_6579", dtype = "float32", shape = (3, 9, 2))#candidate|6579|(3, 9, 2)|var|float32
bop_6580 = relay.floor_mod(const_6578.astype('float32'), relay.reshape(var_6579.astype('float32'), relay.shape_of(const_6578))) # shape=(3, 9, 2)
output = relay.Tuple([bop_6580,])
output2 = relay.Tuple([bop_6580,])
func_6586 = relay.Function([var_6579,], output)
mod['func_6586'] = func_6586
mod = relay.transform.InferType()(mod)
mutated_mod['func_6586'] = func_6586
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6587 = relay.var("var_6587", dtype = "float32", shape = (3, 9, 2))#candidate|6587|(3, 9, 2)|var|float32
func_6586_call = mutated_mod.get_global_var('func_6586')
call_6588 = func_6586_call(var_6587)
output = call_6588
func_6589 = relay.Function([var_6587], output)
mutated_mod['func_6589'] = func_6589
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6733 = relay.const(-4, dtype = "int8")#candidate|6733|()|const|int8
const_6734 = relay.const([[[-2,-5,-4,-10,2,3,4,-6,8,-8,-9,4],[3,3,-1,-8,-4,3,-7,10,-6,-3,-8,-5],[-6,3,-4,-7,7,9,-7,-1,7,10,-9,-3],[5,5,-4,-2,-5,-6,-9,4,-5,4,-7,2],[8,-9,-4,10,-10,-3,-5,-5,-9,9,-5,6],[5,1,-4,9,-7,-9,-1,-10,-5,-5,9,3],[2,8,7,9,-3,-8,-5,8,-5,5,-9,-7],[10,-9,4,7,-5,5,-8,-6,5,7,-10,4],[-6,-1,5,-1,2,6,-3,-3,-9,-2,3,9]],[[3,7,-4,9,3,-7,10,5,-10,-7,7,3],[8,-4,-7,-8,2,-4,-10,6,-4,4,-3,-5],[2,-7,-2,5,-8,-1,-4,5,-6,-2,-5,2],[5,5,-4,2,2,7,10,4,-2,2,5,4],[8,10,8,3,5,-1,8,-9,1,-2,7,-10],[2,7,-1,9,-8,-3,10,-8,-3,7,2,-2],[9,3,-10,7,7,9,4,7,8,8,7,-4],[5,-4,7,-10,-9,-4,-8,-3,4,4,2,2],[3,-8,6,-3,-3,-7,-2,-7,-2,4,-10,8]],[[10,4,3,-10,3,-9,9,-1,-8,3,7,-2],[10,10,4,-6,10,-6,3,1,5,-7,3,-9],[8,2,-1,-6,-2,-3,-4,1,-8,-9,5,10],[-2,-4,-7,-6,4,-10,-4,-8,-3,-3,9,-3],[10,-9,-3,-5,-6,-2,4,7,7,5,-4,-6],[-3,7,2,8,-3,-9,3,-5,-4,1,-4,8],[-6,3,-5,8,-9,-9,-5,4,-3,8,8,-5],[8,-4,4,6,-4,-9,-9,6,-2,-8,1,8],[-9,-10,-8,1,2,-10,7,8,6,-2,-6,10]],[[5,-6,-4,-10,1,-1,-6,-4,-10,-7,-2,-8],[-2,-3,1,8,-5,-10,-1,3,-2,-10,7,-1],[2,-3,4,-5,4,-7,-3,-8,-1,9,-1,-5],[-5,5,3,-8,-5,9,2,6,-4,-8,-9,-7],[-5,6,9,2,8,-5,-5,-4,-3,10,7,-9],[10,-7,-4,-1,1,8,9,-3,7,-6,2,-3],[-4,-8,8,3,-7,-8,7,1,-7,7,8,2],[9,-10,-1,5,5,-6,3,2,2,-10,-9,6],[-1,-1,2,-6,5,-3,6,-10,3,3,-7,-3]],[[-5,5,-5,2,-3,-5,-8,9,5,-8,10,-4],[-5,-9,4,-1,-7,2,9,-6,-7,-1,-1,8],[2,9,-5,-5,9,-5,5,1,4,4,9,8],[-2,-3,-7,9,1,1,10,-8,-1,-4,-1,-10],[10,8,3,-7,3,8,-5,9,-4,3,8,4],[6,-6,5,-2,8,-6,4,-8,7,8,2,7],[-8,3,-4,5,-7,7,-5,-8,-8,7,-2,-10],[-10,3,4,1,2,7,-3,6,-3,3,-1,-4],[7,-1,-6,-8,-9,-2,10,-6,9,8,8,-1]],[[8,-9,-5,8,-4,-1,-3,-7,-9,-5,4,3],[9,-3,-7,7,10,-6,9,-7,4,3,6,-10],[-1,-5,-8,-8,4,-3,-8,8,-6,-5,8,-10],[-9,-10,5,1,6,-2,-8,3,-2,3,-5,-9],[3,8,5,6,10,-10,-5,-2,-1,-7,-5,-9],[5,8,-10,2,1,7,-5,10,8,-10,-3,5],[-7,2,-1,2,10,-7,-6,-8,-9,3,-9,-1],[2,-1,6,-10,-8,-8,1,6,-9,-6,4,-4],[-10,-10,9,-5,7,-8,3,7,-10,2,-4,-5]],[[-5,-7,-6,3,7,4,-9,9,-6,-8,-6,-2],[-1,-8,-7,9,5,-1,9,4,9,2,-6,3],[-9,-4,-7,9,-5,4,-1,3,9,4,10,-3],[-5,-9,7,6,-3,1,7,8,9,3,5,4],[2,1,8,-2,-1,8,5,6,-4,-7,-6,-4],[-9,5,-3,-7,6,6,3,9,-1,2,10,-3],[4,5,7,7,6,-9,10,3,-5,10,-1,4],[5,-7,3,-9,-1,8,-4,5,6,9,1,2],[5,6,2,-5,5,1,-3,8,5,-4,-1,-8]],[[-3,3,-3,2,6,1,9,2,-9,3,-3,7],[-8,-6,-8,-8,-3,6,3,-1,9,6,7,1],[2,9,-6,-3,5,-3,-4,-7,1,3,3,-2],[8,-10,7,1,7,5,6,8,-7,-6,2,-10],[-7,7,-10,2,-9,3,6,-7,3,8,2,-1],[-9,-2,8,-3,6,5,-1,2,-1,-7,-8,-4],[6,2,-10,-7,-10,1,10,5,6,-9,-8,6],[-5,-8,7,6,4,3,1,-4,-6,2,-10,1],[-8,-10,1,-6,1,1,-8,3,-5,7,-6,-10]],[[7,-10,9,-1,-2,-3,-9,1,-5,-9,-1,4],[-9,-3,-3,9,5,4,-9,-2,8,-5,-6,-8],[-1,3,-9,8,-9,5,4,-1,1,4,2,10],[3,8,4,-2,3,6,4,10,-5,-7,-6,9],[-8,7,2,2,5,-5,-6,-3,-2,-10,3,2],[-4,-6,-1,-8,-1,-9,-6,-8,-10,9,10,4],[-1,10,4,-1,-5,9,-5,3,5,8,-2,2],[1,-10,5,7,-8,-1,3,1,10,-3,10,-2],[-7,-6,-9,3,-4,-5,6,-7,8,-9,2,8]]], dtype = "int8")#candidate|6734|(9, 9, 12)|const|int8
bop_6735 = relay.less(const_6733.astype('bool'), const_6734.astype('bool')) # shape=(9, 9, 12)
uop_6741 = relay.rsqrt(bop_6735.astype('float32')) # shape=(9, 9, 12)
output = relay.Tuple([uop_6741,])
output2 = relay.Tuple([uop_6741,])
func_6747 = relay.Function([], output)
mod['func_6747'] = func_6747
mod = relay.transform.InferType()(mod)
mutated_mod['func_6747'] = func_6747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6747_call = mutated_mod.get_global_var('func_6747')
call_6748 = func_6747_call()
output = call_6748
func_6749 = relay.Function([], output)
mutated_mod['func_6749'] = func_6749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6747_call = mod.get_global_var('func_6747')
func_6749_call = mutated_mod.get_global_var('func_6749')
call_6793 = relay.TupleGetItem(func_6747_call(), 0)
call_6794 = relay.TupleGetItem(func_6749_call(), 0)
uop_6798 = relay.acos(call_6793.astype('float64')) # shape=(9, 9, 12)
uop_6800 = relay.acos(call_6794.astype('float64')) # shape=(9, 9, 12)
output = uop_6798
output2 = uop_6800
func_6807 = relay.Function([], output)
mod['func_6807'] = func_6807
mod = relay.transform.InferType()(mod)
output = func_6807()
func_6808 = relay.Function([], output)
mutated_mod['func_6808'] = func_6808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6807_call = mod.get_global_var('func_6807')
func_6808_call = mutated_mod.get_global_var('func_6808')
call_6826 = func_6807_call()
call_6827 = func_6807_call()
output = call_6826
output2 = call_6827
func_6830 = relay.Function([], output)
mod['func_6830'] = func_6830
mod = relay.transform.InferType()(mod)
mutated_mod['func_6830'] = func_6830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6830_call = mutated_mod.get_global_var('func_6830')
call_6831 = func_6830_call()
output = call_6831
func_6832 = relay.Function([], output)
mutated_mod['func_6832'] = func_6832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6807_call = mod.get_global_var('func_6807')
func_6808_call = mutated_mod.get_global_var('func_6808')
call_6833 = func_6807_call()
call_6834 = func_6807_call()
func_1079_call = mod.get_global_var('func_1079')
func_1082_call = mutated_mod.get_global_var('func_1082')
const_6848 = relay.const([-4.675498,-3.636955,-2.273725,-9.761085,-4.989277,-1.806344,-3.134128,6.289403,5.118370,5.537664,2.366399,-1.173371,5.015850,9.308939,-0.895234,-0.977183,-3.063767,1.784703,-9.140505,0.717745,4.589515,0.379787,6.261500,-2.304833,-2.830814,4.539184,5.121631,9.775763,2.029623,7.876849,7.071395,-0.402886,7.946459,-7.872604,8.422965,-1.858734,2.637487,8.960333,4.757544,-9.609527,9.793202,3.866530,3.486522,-6.964530,9.301402,-4.352129,6.952995,9.578543,-7.543382,-9.143196,7.042536,0.438390,-1.864882,3.499207,-9.796938,2.029722,1.834389,-7.114770,2.751288,2.449267,7.583032,8.374175,-4.318822,9.921360,-1.962526,5.408886,-0.890382,9.926009,2.879930,-6.106559,-3.271538,7.969891,-3.295105,-8.239987,-2.962413,5.328270,3.870191,-2.276435,8.042369,-3.891401,8.456187,1.698696,-3.485395,-4.610228,7.935513,-7.115832,-2.220948,5.304293,5.460563,-5.926461,3.928158,2.394061,-8.636189,-8.254933,9.023540,-4.014535,-9.061083,0.833124,-8.109227,-8.976887,-6.155087,5.786375,4.497917,-9.784575,-2.348912,-4.503090,-2.379370,-6.432214,-2.314704,-6.615559,8.676195,-5.175787,-5.689729,4.145374,-9.186494,-6.772662,-6.551836,5.421615,-5.914698,-6.108100,7.368271,-8.168500,6.937140,-8.673611,8.023544,6.612669,6.589301,6.164059,4.798818,-2.904501,-6.294929,8.677261,-5.518939,-7.207893,-7.200067,6.573212,-5.138520,2.145543,-0.661575,2.879364,-2.456165,8.314780,-5.383354,5.721324,6.113792,4.829055,-5.911267,-2.978337,-6.085150,5.418569,0.412338,-5.324247,-2.411672,5.538266,3.992061,-5.301855,-2.187282,-8.601378,-4.395094,-1.423584,5.720747,-0.969585,-3.288757,5.883931,0.229286,3.493466,8.223633,-8.895204,5.446659,8.230792,-4.630502,-0.449657,8.940148,-6.594217,-1.866476,8.358696,-6.495286,6.755703,-5.888640,5.514157,2.463695,-6.916843,-6.992202,-0.779523,3.237409,8.858914,-9.950487,-4.601731,-3.694461,0.815961,4.056686,-6.049128,-8.759624,5.631588,-2.759166,9.648676,5.258387,5.743862,-6.710473,-1.779097,6.100913,-6.188775,2.672052,8.484606,5.911949,2.870907,3.587666,-1.619928,4.323400,-7.671017,0.345430,-2.838215,3.748101,-2.627538,2.141045,6.865019,-6.047653,-3.877036,-9.956171,4.616269,5.589093,0.724109,3.210863,-2.872387,3.871324,-4.824681,-6.556199,5.665717,-5.317090,-4.068893,-8.144078,-9.422743,9.716467,3.568339], dtype = "float64")#candidate|6848|(234,)|const|float64
call_6847 = relay.TupleGetItem(func_1079_call(relay.reshape(const_6848.astype('float64'), [9, 2, 13]), relay.reshape(const_6848.astype('float64'), [9, 2, 13]), ), 0)
call_6849 = relay.TupleGetItem(func_1082_call(relay.reshape(const_6848.astype('float64'), [9, 2, 13]), relay.reshape(const_6848.astype('float64'), [9, 2, 13]), ), 0)
func_4244_call = mod.get_global_var('func_4244')
func_4247_call = mutated_mod.get_global_var('func_4247')
var_6865 = relay.var("var_6865", dtype = "int8", shape = ())#candidate|6865|()|var|int8
call_6864 = relay.TupleGetItem(func_4244_call(relay.reshape(var_6865.astype('int8'), [])), 0)
call_6866 = relay.TupleGetItem(func_4247_call(relay.reshape(var_6865.astype('int8'), [])), 0)
output = relay.Tuple([call_6833,call_6847,const_6848,call_6864,var_6865,])
output2 = relay.Tuple([call_6834,call_6849,const_6848,call_6866,var_6865,])
func_6871 = relay.Function([var_6865,], output)
mod['func_6871'] = func_6871
mod = relay.transform.InferType()(mod)
mutated_mod['func_6871'] = func_6871
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6872 = relay.var("var_6872", dtype = "int8", shape = ())#candidate|6872|()|var|int8
func_6871_call = mutated_mod.get_global_var('func_6871')
call_6873 = func_6871_call(var_6872)
output = call_6873
func_6874 = relay.Function([var_6872], output)
mutated_mod['func_6874'] = func_6874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6830_call = mod.get_global_var('func_6830')
func_6832_call = mutated_mod.get_global_var('func_6832')
call_6889 = func_6830_call()
call_6890 = func_6830_call()
output = call_6889
output2 = call_6890
func_6891 = relay.Function([], output)
mod['func_6891'] = func_6891
mod = relay.transform.InferType()(mod)
output = func_6891()
func_6892 = relay.Function([], output)
mutated_mod['func_6892'] = func_6892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6747_call = mod.get_global_var('func_6747')
func_6749_call = mutated_mod.get_global_var('func_6749')
call_6915 = relay.TupleGetItem(func_6747_call(), 0)
call_6916 = relay.TupleGetItem(func_6749_call(), 0)
func_4016_call = mod.get_global_var('func_4016')
func_4019_call = mutated_mod.get_global_var('func_4019')
var_6919 = relay.var("var_6919", dtype = "float64", shape = (3, 30))#candidate|6919|(3, 30)|var|float64
call_6918 = func_4016_call(relay.reshape(var_6919.astype('float64'), [15, 2, 3]))
call_6920 = func_4016_call(relay.reshape(var_6919.astype('float64'), [15, 2, 3]))
uop_6929 = relay.rsqrt(var_6919.astype('float64')) # shape=(3, 30)
func_6807_call = mod.get_global_var('func_6807')
func_6808_call = mutated_mod.get_global_var('func_6808')
call_6931 = func_6807_call()
call_6932 = func_6807_call()
bop_6949 = relay.power(uop_6929.astype('float32'), relay.reshape(call_6918.astype('float32'), relay.shape_of(uop_6929))) # shape=(3, 30)
bop_6952 = relay.power(uop_6929.astype('float32'), relay.reshape(call_6920.astype('float32'), relay.shape_of(uop_6929))) # shape=(3, 30)
func_2683_call = mod.get_global_var('func_2683')
func_2686_call = mutated_mod.get_global_var('func_2686')
const_6959 = relay.const([[7,-9,-9,10,-6,7,-2,6,8,-3,6,-3,-6,-4,6,-6,-4,-4,3,2,-1,-3,-9,-2,8,8,-3,-5,-10,9,-7,-1,-2,-5,-8,-6,-5,-10,9,-1,-7,3,8,9,6,-5,5,-3,10,-3,4,5,-10,6,-1,6,-6,8,-6,-3,8,-5,-2,9,-8,-10,2,4,4,-1,8,3,-8,-9,1,-7,10,2,-2,-5,5,-5,-3,-1,10,2,-1,4,-9,6,-7,-8,6,-8,-3,1,8,-7,6,8,1,-5,-8,-2,6,-8,10,7,-8,-4,-7,10,-10,6,6,1,-7,-8,9,-3,-9,-7,7,-4,-10,7,-5,3,-6,3,-7,9,-3,9,8,-7,3,7,8,4,-2,-5,9,-4,9,7,2,-1,3,-8,-2,-8,-9,-4,8,6,10,-7,-9,2,-10,7,-2,-8,-8,6,1,4,10,-10,-7,-8,-8,-6,10,7,6,10,2,-5,-4,10,-6,9,4,6,-6,10,3,-10,-3,-1,-3,-7,10,-5,2,4,-10,5,4,7,8,-3,1,-4,-4,-3,5,-4,-1,-1,-2,2,8,6,-3,-2,-10,1,-10,-6,-9,3,-9,9,6,5,-5,-2,8,-4,2,-1,-3,-4,9,-9,-10,-2,-9,-1,3,5,-4,-2,6,3,-4,-10,9,9,-5,6,-1,4,-1,7,10,-1,-10,1,9,-3,10,-9,7,-7,-6,-8,1,-7,7,-6,7,-3,10,-4,-8,3,10,7,10,4,6,3,3,8,5,9,1,10,8,2,2,-5,7,-4,7,3,7,9,-5,2,-2,3,-4,7,-10,9,-6,4,6,2,-3,7,10,-4,4,8,-6,9,5,-2,-5,-7,-5,6,-9,5,3,4,9,-2,-3,-8,1,-10,5,1,3,3,-7,1,7,-7,-9,6,8,-8,-6,1,6,-4,-3,1,3,6,-2,7,3,10,7,-10,1,8,-6,7,-8,3,5,9,-9,-7,2,-10,8,-8]], dtype = "int8")#candidate|6959|(1, 378)|const|int8
call_6958 = relay.TupleGetItem(func_2683_call(relay.reshape(const_6959.astype('int8'), [14, 9, 3]), relay.reshape(const_6959.astype('int8'), [14, 9, 3]), ), 0)
call_6960 = relay.TupleGetItem(func_2686_call(relay.reshape(const_6959.astype('int8'), [14, 9, 3]), relay.reshape(const_6959.astype('int8'), [14, 9, 3]), ), 0)
output = relay.Tuple([call_6915,call_6931,bop_6949,call_6958,const_6959,])
output2 = relay.Tuple([call_6916,call_6932,bop_6952,call_6960,const_6959,])
func_6966 = relay.Function([var_6919,], output)
mod['func_6966'] = func_6966
mod = relay.transform.InferType()(mod)
mutated_mod['func_6966'] = func_6966
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6967 = relay.var("var_6967", dtype = "float64", shape = (3, 30))#candidate|6967|(3, 30)|var|float64
func_6966_call = mutated_mod.get_global_var('func_6966')
call_6968 = func_6966_call(var_6967)
output = call_6968
func_6969 = relay.Function([var_6967], output)
mutated_mod['func_6969'] = func_6969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6830_call = mod.get_global_var('func_6830')
func_6832_call = mutated_mod.get_global_var('func_6832')
call_7022 = func_6830_call()
call_7023 = func_6830_call()
func_6830_call = mod.get_global_var('func_6830')
func_6832_call = mutated_mod.get_global_var('func_6832')
call_7027 = func_6830_call()
call_7028 = func_6830_call()
output = relay.Tuple([call_7022,call_7027,])
output2 = relay.Tuple([call_7023,call_7028,])
func_7029 = relay.Function([], output)
mod['func_7029'] = func_7029
mod = relay.transform.InferType()(mod)
mutated_mod['func_7029'] = func_7029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7029_call = mutated_mod.get_global_var('func_7029')
call_7030 = func_7029_call()
output = call_7030
func_7031 = relay.Function([], output)
mutated_mod['func_7031'] = func_7031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6807_call = mod.get_global_var('func_6807')
func_6808_call = mutated_mod.get_global_var('func_6808')
call_7045 = func_6807_call()
call_7046 = func_6807_call()
output = call_7045
output2 = call_7046
func_7048 = relay.Function([], output)
mod['func_7048'] = func_7048
mod = relay.transform.InferType()(mod)
mutated_mod['func_7048'] = func_7048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7048_call = mutated_mod.get_global_var('func_7048')
call_7049 = func_7048_call()
output = call_7049
func_7050 = relay.Function([], output)
mutated_mod['func_7050'] = func_7050
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7088 = relay.var("var_7088", dtype = "uint64", shape = (6, 15, 2))#candidate|7088|(6, 15, 2)|var|uint64
const_7089 = relay.const([[[-3,-1],[1,2],[3,2],[4,2],[-5,10],[10,4],[8,-6],[-1,9],[1,3],[-5,4],[5,-10],[5,9],[-2,5],[-4,3],[3,3]],[[8,-7],[1,5],[-7,4],[6,-2],[-7,-8],[2,3],[4,-8],[-7,-10],[2,-6],[-9,8],[9,-1],[7,5],[-4,7],[10,-2],[5,-9]],[[2,5],[-7,8],[1,6],[-10,-6],[-8,-5],[8,8],[9,10],[1,-4],[1,10],[2,7],[-4,5],[10,2],[-4,2],[-8,-10],[2,1]],[[-1,10],[-8,-9],[-8,6],[-9,-5],[10,-9],[-6,-6],[1,1],[6,-1],[-9,-9],[1,9],[-4,3],[-4,4],[-8,10],[-2,-8],[10,10]],[[-1,1],[4,-1],[7,6],[5,-7],[-8,4],[-4,9],[9,-10],[-7,5],[3,-10],[-7,2],[10,-9],[5,-3],[9,-8],[2,-10],[5,3]],[[2,9],[-7,2],[9,10],[-4,-4],[7,4],[9,-10],[9,3],[9,5],[-6,-9],[-3,-7],[-9,-4],[7,3],[-7,1],[-9,8],[-8,4]]], dtype = "uint64")#candidate|7089|(6, 15, 2)|const|uint64
bop_7090 = relay.add(var_7088.astype('uint64'), relay.reshape(const_7089.astype('uint64'), relay.shape_of(var_7088))) # shape=(6, 15, 2)
output = bop_7090
output2 = bop_7090
func_7110 = relay.Function([var_7088,], output)
mod['func_7110'] = func_7110
mod = relay.transform.InferType()(mod)
var_7111 = relay.var("var_7111", dtype = "uint64", shape = (6, 15, 2))#candidate|7111|(6, 15, 2)|var|uint64
output = func_7110(var_7111)
func_7112 = relay.Function([var_7111], output)
mutated_mod['func_7112'] = func_7112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6807_call = mod.get_global_var('func_6807')
func_6808_call = mutated_mod.get_global_var('func_6808')
call_7124 = func_6807_call()
call_7125 = func_6807_call()
var_7127 = relay.var("var_7127", dtype = "float64", shape = (9, 9, 12))#candidate|7127|(9, 9, 12)|var|float64
bop_7128 = relay.less_equal(call_7124.astype('bool'), relay.reshape(var_7127.astype('bool'), relay.shape_of(call_7124))) # shape=(9, 9, 12)
bop_7131 = relay.less_equal(call_7125.astype('bool'), relay.reshape(var_7127.astype('bool'), relay.shape_of(call_7125))) # shape=(9, 9, 12)
output = relay.Tuple([bop_7128,])
output2 = relay.Tuple([bop_7131,])
func_7141 = relay.Function([var_7127,], output)
mod['func_7141'] = func_7141
mod = relay.transform.InferType()(mod)
mutated_mod['func_7141'] = func_7141
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7142 = relay.var("var_7142", dtype = "float64", shape = (9, 9, 12))#candidate|7142|(9, 9, 12)|var|float64
func_7141_call = mutated_mod.get_global_var('func_7141')
call_7143 = func_7141_call(var_7142)
output = call_7143
func_7144 = relay.Function([var_7142], output)
mutated_mod['func_7144'] = func_7144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7279 = relay.var("var_7279", dtype = "float64", shape = (1, 10, 8))#candidate|7279|(1, 10, 8)|var|float64
uop_7280 = relay.log2(var_7279.astype('float64')) # shape=(1, 10, 8)
func_3311_call = mod.get_global_var('func_3311')
func_3313_call = mutated_mod.get_global_var('func_3313')
var_7292 = relay.var("var_7292", dtype = "uint8", shape = (858, 1))#candidate|7292|(858, 1)|var|uint8
call_7291 = func_3311_call(relay.reshape(var_7292.astype('uint8'), [13, 11, 6]))
call_7293 = func_3311_call(relay.reshape(var_7292.astype('uint8'), [13, 11, 6]))
func_6586_call = mod.get_global_var('func_6586')
func_6589_call = mutated_mod.get_global_var('func_6589')
const_7305 = relay.const([6.104561,-9.443721,9.484996,7.347906,-9.248251,-4.163937,-3.239059,-2.019857,-4.105552,-2.711934,0.151436,-9.854447,8.494753,-8.587149,3.362097,9.228151,-4.005681,3.607615,-4.254690,8.295589,-7.694991,4.967573,-4.258194,4.629903,4.435725,-1.492012,-0.355366,2.951784,4.350641,-6.081589,2.461290,4.552189,-0.702298,0.341360,0.239481,3.241079,-3.096448,3.517638,-4.040090,-9.455812,-4.914086,9.718554,2.668288,-6.627618,-8.380923,-9.065648,-5.619276,2.672859,-2.120787,-1.704793,-3.766363,9.385652,-3.863746,3.248575], dtype = "float32")#candidate|7305|(54,)|const|float32
call_7304 = relay.TupleGetItem(func_6586_call(relay.reshape(const_7305.astype('float32'), [3, 9, 2])), 0)
call_7306 = relay.TupleGetItem(func_6589_call(relay.reshape(const_7305.astype('float32'), [3, 9, 2])), 0)
output = relay.Tuple([uop_7280,call_7291,var_7292,call_7304,const_7305,])
output2 = relay.Tuple([uop_7280,call_7293,var_7292,call_7306,const_7305,])
func_7311 = relay.Function([var_7279,var_7292,], output)
mod['func_7311'] = func_7311
mod = relay.transform.InferType()(mod)
mutated_mod['func_7311'] = func_7311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7311_call = mutated_mod.get_global_var('func_7311')
var_7313 = relay.var("var_7313", dtype = "float64", shape = (1, 10, 8))#candidate|7313|(1, 10, 8)|var|float64
var_7314 = relay.var("var_7314", dtype = "uint8", shape = (858, 1))#candidate|7314|(858, 1)|var|uint8
call_7312 = func_7311_call(var_7313,var_7314,)
output = call_7312
func_7315 = relay.Function([var_7313,var_7314,], output)
mutated_mod['func_7315'] = func_7315
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7332 = relay.var("var_7332", dtype = "float64", shape = (16, 15, 8))#candidate|7332|(16, 15, 8)|var|float64
uop_7333 = relay.log2(var_7332.astype('float64')) # shape=(16, 15, 8)
var_7335 = relay.var("var_7335", dtype = "float64", shape = (16, 15, 8))#candidate|7335|(16, 15, 8)|var|float64
bop_7336 = relay.left_shift(uop_7333.astype('int32'), relay.reshape(var_7335.astype('int32'), relay.shape_of(uop_7333))) # shape=(16, 15, 8)
func_5486_call = mod.get_global_var('func_5486')
func_5489_call = mutated_mod.get_global_var('func_5489')
const_7356 = relay.const([-9,-2,-1,-8,-4,8,7,6,-10,-9,-8,-10,1,7,4,-6,8,-2,8,-2,6,-4,5,-7,8,7,2,-10,-1,9,-6,8,6,-5,-1,7,-6,-2,-10,-7,8,-2,-1,-5,1,8,10,-3,8,-1,6,6,-8,4,-9,4,-3,8,-1,6,7,-9,-2,5,2,-8,-5,-2,-3,1,-7,1,-3,4,4,-6,-8,9,-9,9,-2,2,1,10,-2,10,-6,-7,-2,3,-5,-6,-3,-2,-9,6,9,-1,-3,6,2,5,7,-8,-7,4,9,-4,2,7,-10,-5,2,-9,8,2,-1,9,9,8,10,7,-9,4,-10,5,3,-6,7,-1,3,5,2,-4,3,8,-2,-5,-7,-4,-7,6,-10,-6,-10,-10,-2,-6,10,7,2,9,2,6,-10,-8,-9,8,9,-4,2,-3,-10,-1,9,-4,-5,6,4,7,-2,4,9,3,-5,-8,-3,-1,10,-1,-2,-1,-7,-4,-6,-8,8,-2,-5,7,-1,9,6,7,4,4,-5,2,-9,-5,-9,-5,-5,6,-3,-10,-9,-10,-8,8,7,7,4,-5,8,-10,-3,4,4,-9,-4,-3,9,8,10,-1,-8,10,10,7,-5,4,3,-9,-7,-6,-9,-6,2,-8,-9,-1,1,-1,7,8,-4,-2,-8,6,9,-10,2,-9,-9,-9,7,-5,1,9,3,-10,10,6,10,5,7,-8,-3,-5,3,1,4,-10,4,-1,-9,-6,2,6,5,3,-9,10,9,6,-9,-6,5,-8,-7,7,-1,-2,-4,-6,4,-2,-4,6,-10,-7,-1,2,9,6,10,-2,6,-3,-4,3,2,-10,-8,10,-1,6,10,-8,9,-6,9,7,4,8,-3,-6,4,9,-6,-1,8,7,-7,-10,8,5,-4,3,-6,-5,-1,2,-1,-1,-2,2,-2,-9,-3,-7,-4,10,-9,-5,-5,-2,3,6,-6,1,-1,-9,1,4,-6,-6,-5,10,1,-9,-8,-5,-8,5,9,-4,-8,-3,-3,-2,8,-1,4,9,7,-2,-10,5,9,3,-7,-8,2,-3,-6,5,-3,-9,10,-2,5,-1,2,-4,-8,-1,-6,2,-8,-4,-10,-10,-7,-9,4,-3,5,5,-2,10,-8,6,10,3,-5,-4,-7,-7,3,3,-7,-8,10,2,6,1,5,-9,7,2,-2,6,-3,6,-9,3,5,10,7,-7,-8,-7,8,-7,-10,9,-7,3,-10,-6,-8,-6,-2,-6,2,2,-2,10,-4,6,-8,-8,-2,7,-10,10,3,8,-4,-4,10,4,-4,-5,-5,-4,6,8,-5,-9,-9,2,4,-7,8,5,-5,1,7,-10,7,-3,-8,-2,-9,7,-9,-8,-2,-3,6,8,9,3,-5,8,6,8,4,8,-10,-1,-5,6,-6,8,9,5,7,-3,10,-6,-5,-4,-4,-4,7,-7,-4,2,2,-2,-5,-8,-7,-5,-4,-5,5,8,2,-8,-7,5,-8,3,-4,10,4,-2,-10,-7,-9,-3,-4,8,5,6,8,3,-6,-7,-1,-2,6,-5,-2,-3,5,-7,-9,4,10,-5,-9,6,5,8,10,-3,7,-5,8,-1,-1,1,-5,3,-3,4,7,9,-3,9,10,-10,-10,5,-2,-1,7,3,7,7,-6,-3,-3,6,3,9,-9,-10,3,-9,6,-8,-3,6,10,-1,-6,-9,9,3,3,7,1,3,5,-1,-1,5,-1,-4,-6,-7,-9,1,2,-2,-8,-8,-8,-4,-2,-5,3,7,-1,-7,7,-7,-10,4,4,8,-7,-10,-9,10,-9,-4,-3], dtype = "int64")#candidate|7356|(675,)|const|int64
call_7355 = func_5486_call(relay.reshape(const_7356.astype('int64'), [5, 9, 15]))
call_7357 = func_5486_call(relay.reshape(const_7356.astype('int64'), [5, 9, 15]))
func_6807_call = mod.get_global_var('func_6807')
func_6808_call = mutated_mod.get_global_var('func_6808')
call_7360 = func_6807_call()
call_7361 = func_6807_call()
output = relay.Tuple([bop_7336,call_7355,const_7356,call_7360,])
output2 = relay.Tuple([bop_7336,call_7357,const_7356,call_7361,])
func_7362 = relay.Function([var_7332,var_7335,], output)
mod['func_7362'] = func_7362
mod = relay.transform.InferType()(mod)
var_7363 = relay.var("var_7363", dtype = "float64", shape = (16, 15, 8))#candidate|7363|(16, 15, 8)|var|float64
var_7364 = relay.var("var_7364", dtype = "float64", shape = (16, 15, 8))#candidate|7364|(16, 15, 8)|var|float64
output = func_7362(var_7363,var_7364,)
func_7365 = relay.Function([var_7363,var_7364,], output)
mutated_mod['func_7365'] = func_7365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6830_call = mod.get_global_var('func_6830')
func_6832_call = mutated_mod.get_global_var('func_6832')
call_7373 = func_6830_call()
call_7374 = func_6830_call()
uop_7387 = relay.asinh(call_7373.astype('float32')) # shape=(9, 9, 12)
uop_7389 = relay.asinh(call_7374.astype('float32')) # shape=(9, 9, 12)
uop_7394 = relay.acosh(uop_7387.astype('float64')) # shape=(9, 9, 12)
uop_7396 = relay.acosh(uop_7389.astype('float64')) # shape=(9, 9, 12)
func_2414_call = mod.get_global_var('func_2414')
func_2420_call = mutated_mod.get_global_var('func_2420')
const_7401 = relay.const([-8.634371,9.251686,-9.043781,6.674740,-5.582714,9.950875,5.373104,-3.783210,5.511441,-5.242402,-1.853484,-8.229405,3.847742,-3.607006,-4.920331,8.579227,-9.191120,-3.782342,9.251486,-2.309083,-6.325455,2.339246,-0.193817,-6.006902,7.586440,-3.615735,5.553438,-0.220209,-2.171544,-5.826196,-8.518662,1.239451,-3.721621,4.718414,-1.696153,1.807354,-6.425705,-5.901280,-8.265630,-5.713746,-3.687687,8.900023,-5.253681,-9.765419,7.271481,4.836906,-4.489443,-4.757840,-9.502480,-7.194643,-0.994798,0.090661,-8.784308,8.829255,-6.073376,0.001178,-8.277817,4.114759,-7.686230,-1.516638,-5.813721,1.501408,-6.554524,4.412587,-8.975056,6.442901,8.612312,5.424339,3.316487,2.236926,-3.118199,-9.144886,6.992054,9.000607,0.109009,4.796311,0.234741,3.499956,5.436883,-0.147156,-0.078004,-3.530871,-4.958815,-5.047408,-8.444340,-9.177349,-0.107068,8.917542,-5.836321,9.316052,-0.394536,4.392626,4.033727,-8.191618,7.826241,-7.486726,-6.979839,4.164615,-6.769900,-4.028124,2.819750,-8.358307,1.798325,-2.377128,-6.873797,-9.597151,-5.143256,2.897532,-5.009305,-5.794979,-9.062488,1.745316,3.443385,-6.383064,-4.188496,-5.554253,9.685839,3.437864,3.728567,-9.274804,4.694396,-2.538782,-0.895997,-4.373656,1.164379,-2.114927,8.232793,8.712946,-1.098656,5.525455,-1.071163,0.257093,-4.845636,4.417206,-4.511425,1.601038,-7.805071,1.177456,5.127440,2.312244,3.076787,2.602011,6.304461,3.633779,-3.576228,5.828038,8.705388,-6.409510,3.516126,5.847216,1.097098,-3.661946,-6.776900,-9.830799,6.705090,1.750135,1.362205,9.410120,5.742712,-1.015385,8.998307,-3.696997,-2.682190,-3.258846,-3.176022,4.445068,5.042298,1.959763,-9.426440,1.325055,9.185008,-7.069859,4.247105,-3.991573,-0.686257,-1.474676,-7.636602,-2.445473,0.113310,-4.915620,-5.860786,8.102535,0.222308,-7.785497,-0.682705,5.938829,-9.490297,-7.064631,-8.495125,-9.627647,-7.846090,-1.909073,0.689847,3.508257,-6.748610,5.185269,-5.438551,-6.925653,7.532411,5.550618,-7.452573,-6.418319,-8.784940,6.640561,5.094819,9.486508,-3.356616,-4.526301,5.120971,6.436568,0.068341,-7.821026,3.300600,-9.211904,4.903174,2.603785,-5.100516,-6.664954,-2.290140,6.747478,9.855768,8.967776,0.010018,-9.204966,-6.813438,-8.258159,-4.110097,3.080144,8.147432,-1.703900,4.022134,-7.479649,1.208975,-5.245456,-7.452135,8.912653,-1.141395,-7.638182,-5.680530,-6.632295,-4.250152,5.333274,-2.678327,-0.264264,-1.950713,-8.773106,-2.581971,4.106496,-8.270109,-4.676784,-5.714457,-7.928602,-4.063022,-6.785161,0.496859,8.752090,1.573465,-7.160451,8.737087,8.615961,-9.693333,7.891641,-9.546934,-1.749132,-3.504625,-3.299600,9.361865,-3.248508,8.406738,-1.012691,5.916238,-8.765702,-9.894528,-1.211873,8.581860,9.096562,-8.967380,7.993442,-1.700906,5.127475,-0.063292,4.260939,-6.612272,2.396769,-6.751878,9.321403,-6.499523,-3.660942,-9.951127,-9.219684,-9.111992,2.041790,9.293707,1.264867,6.726941,-1.313893,-5.985014,1.683288,5.694036,-9.535258,-5.217343,-2.483014,7.638055,-3.949969,6.053139,-1.860215,-0.044756,-4.992481,-1.740652,9.270882,-0.279502,3.767684,5.889872,-6.769214,9.731948,-6.324004,-9.028124,-0.047216,4.940044,7.722091,-9.374040,-9.305717,-3.691973,-7.788677,8.378236,-4.088706,7.268523,-8.862914,-8.729937,-5.484532,-4.020751,9.515182,5.143336,-2.364695,-0.859086,0.206136,3.243984,-7.800823,3.592564,-8.996951,-4.801684,-3.900332,-4.693514,2.952670,8.819429,9.168685,-1.151514,-1.935979,-2.794566,4.626681,2.380851,8.463096,-4.380677,-2.281151,-5.029958,-5.897351,6.700408,4.921380,-1.115595,-0.401067,-7.339368,9.935476,-9.870820,-8.962848,-5.559340,-7.001154,-6.211811,0.762156,4.276478,-1.204923,-4.207287,-5.083881,-6.900486,-2.015446,-7.184408,-0.331460,-3.559872,-3.866962,-2.124338,1.178680,-3.859509,-2.405951,-2.640266,9.345731,2.703301,9.859342,7.098998,5.122410,3.289897,-6.270848,-4.940198,-5.885823,-6.024099,3.519144,6.833412,1.266605,-5.936937,7.743611,5.331709,-2.270862,-4.306835,3.932264,-3.709914,0.452746,-3.346241,8.552664,9.741209,2.866821,-0.964406,-5.365290,7.566809,1.004726,3.055687,-7.561985,-8.375658,9.191596,0.527012,-1.827477,7.244473,9.942228,0.874641,-7.550169,0.701214,-6.771288,-1.030293,9.086306,-1.469880,-2.780132,2.616616,0.918786,1.036945,4.975429,4.590022,-5.342002,7.996414,-7.621566,2.431910,2.295510,-1.314427,-1.153684,-3.803034,-0.609688,6.461408,-2.132782,-4.261711,-7.737291,-2.284594,-3.467408,3.889955,-5.867477,-5.028812,4.505341,1.327567,-8.685776,-6.821780,4.457673,4.861751,1.705860,-8.612959,9.988805,2.639187,-2.273700,9.756850,0.481852,-1.180826,-9.232138,-6.278603,-1.690056,-5.605106,6.251935,4.510704,-3.140357,3.190745,1.947006,0.291984,-8.735526,-2.815575,7.729013,9.709125,-2.849708,-5.664626,-8.839152,-0.163218,5.704636,-6.559454,6.210923,5.177352,-1.424621,-5.767253,-8.464833,-4.724601,-3.109871,3.849455,7.251729,9.958406,-3.313744,-2.695695,-0.897437,7.336747,7.784978,0.937824,-9.826072,-9.398658,6.572373,-3.367723,9.131389,-7.820893,-3.713269,9.919477,-6.008540,2.831596,-8.214044,4.716269,4.445473,-9.241101,-8.415976,7.502852,-7.460496,4.296611,-3.681323,1.412074,2.134162,-2.604051,-1.763387,8.896989,-9.701971,3.572512,-9.629767,7.265238,-9.991974,-9.704365,4.435456,2.451658,-7.619558,3.551962,-7.912136,-9.506718,-6.331799,6.895989,-5.157069,7.059766,-9.979668,5.320060,-4.407471,-8.004180,1.639133,0.356119,-8.571630,-7.764116,-0.750120,-0.493982,3.025321,-1.718316,5.753829,-4.590198,-1.459342,-7.241591,-5.141837,7.665578,-7.405922,0.815595,-9.011100,9.525150,0.142381,1.702340,4.827696,7.256176,-4.371512,0.939727,6.130137,3.249336,0.790689,-8.501271,-4.811216,-7.718709,9.343215,-2.087313,0.730471,1.379675,4.864873,-0.487350,-2.864406,8.899145,6.352187,-4.743060,-5.361675,-9.498763,6.623712,-6.561814,-0.824898,-8.579227,-2.409561,0.495930,-3.242576,7.278637,-6.584203,9.381174,2.918784,1.148677,3.085410,2.011796,-7.903786,3.233729,7.953283,6.720690,6.694541,0.831176,-3.602316,6.233483,8.333713,-5.632546,-1.368678,-7.312584,5.229720,-0.588613,2.255909,-7.059460,1.006328,5.055554,8.852770,-3.567677,9.788588,6.104506,-2.672351,-7.642560,1.526577,4.440613,-5.100671,4.912275,-6.558113,-9.432741,8.807135,6.876303,9.571894,3.914204,5.116480,2.684556,-6.988889,-6.536067,8.963832,-0.099595,5.295282,-9.119048,-9.967031,4.309651,5.051134,-1.770310,6.681251,7.803092,7.313650,9.859977,-4.791253,2.240602,9.365243,4.219393,-5.588830,4.664910,-4.855473,-2.239421,8.617168,3.740505,7.327678,-0.663149,8.658369,9.385734,-3.634517,7.294809,3.023230,1.900048,-1.292007,9.522898,3.087977,-3.480199,-1.465899,-8.014188,6.335447,-0.053134,9.781472,0.231036,-3.930705,7.077041,2.249043,8.998948,7.070456,-4.511262,-8.123693,4.885237,-6.233212,6.895847,-2.621824,3.751347,6.383279,-3.226843,-5.463861,8.234607,2.222393,5.498948,9.609614,6.003902,-4.008374,-2.110854,-3.535778,-5.487863,8.728183,7.340909,6.709901,3.430500,4.931103,1.037646,2.949235,-5.389365,-7.109027,-8.483986,4.861142,-2.167337,9.614459,-8.113002,-7.549610,-6.411020,-1.850163,4.677840,-4.914604,-8.583116,3.702848,7.872624,-9.100477,7.212052,-6.094400], dtype = "float32")#candidate|7401|(728,)|const|float32
var_7402 = relay.var("var_7402", dtype = "float32", shape = (1680,))#candidate|7402|(1680,)|var|float32
const_7403 = relay.const([-1.501158,-3.388833,5.717421,0.295143,-6.240088,-1.810012,3.790951,-1.909247,-0.544077,-1.907921,2.943274,0.072592,-8.706660,0.138240,0.714488,4.760624,-8.608988,7.758589,-7.745108,2.552534,-6.554928,1.267231,1.107212,6.182238,-7.231237,1.890216,-5.734944,7.820359,8.725233,-9.282714,8.489737,1.750588,3.429883,-8.008813,5.106415,-6.216878,9.484235,1.446847,4.478274,-3.813148,-2.713493,-0.128486,5.780533,-0.992387,-8.353369,9.347661,-0.120180,5.573251,1.303748,-8.999151,1.382015,9.075476,-1.970252,2.770357,1.504044,-5.871270,7.516174,-0.536830,-0.101335,-6.499996,8.416998,6.451812,-3.748692,2.819345,-2.589438,-0.739551,-8.653520,-1.304959,-5.185326,-8.168300,8.062217,9.605541,4.408742,8.685762,-0.165814,-0.792258,-5.918179,-3.878333,2.543018,-8.882330,6.405072,2.930368,-3.487600,-2.417575,-1.671100,-1.078991,3.354136,-1.321324,9.048667,3.824883,0.582916,4.570716,0.261415,-1.228148,0.336545,-9.959363,7.820333,-9.623231,5.505539,-3.104432,-4.217299,6.118379,9.079679,-1.907551,-0.609278,-7.328250,-8.471647,7.919629,1.040093,-3.974527,-7.290737,2.580077,-8.568016,-2.634608,2.992513,7.002609,0.764488,9.276348,0.196248,-8.520296,3.483546,1.158509,-5.978576,7.802514,0.341942,3.699066,-9.784113,1.545006,-2.448872,-9.229321,3.300092,7.355766,7.423375,4.597418,0.571424,-2.410784,-1.544216,-6.790886,-2.860837,0.717135,5.672449,6.743280,7.841156,-1.956645,-9.247001,3.736756,7.649570,4.396548,-7.885259,6.235337,-9.702033,-6.186536,0.266737,0.840046,0.544120,7.262807,1.144025,-4.563054,-9.838974,8.785642,-6.109947,-2.943339,5.714482,-7.194073,-3.763641,3.753107,2.510285,2.644744,-1.205858,-9.424627,6.182140,-1.936951,-9.458536,-3.706072,-5.986968,-6.141263,-9.995547,-8.742769,-0.086180,6.451861,-6.688635,9.844650,5.370683,-4.380796,7.815007,1.101848,9.064801,-3.062205,-4.364682,-9.292021,-7.258708,3.947019,0.878345,-9.032484,-0.820794,-0.547890,2.826834,-2.886027,-9.363033,-3.117357,1.657451,4.041154,-4.638114,1.052132,-6.641477,7.694227,-9.558665,4.078611,-6.963842,7.319858,-3.042958,6.076385,9.763267,-2.694124,-1.416343,5.461089,-4.590404,-8.003239,-6.889895,8.777560,1.671983,8.127876,-8.819436,2.600591,5.276850,0.812181,-8.415543,8.139192,9.675818,-3.602429,-7.935388,4.608477,-0.510243,5.440369,5.025615,9.783141,0.089016,-7.319530,0.577862,-7.619466,-3.393828,-9.691307,-1.626292,-6.766329,9.735390,-2.374109,3.527302,-0.272015,4.579064,-3.465614,7.063978,-7.894368,3.432530,-4.087144,-1.458387,4.959697,-9.576814,-1.821431,3.759133,-1.454848,1.052043,-3.006001,0.102834,-2.281998,3.221904,3.421573,-6.522645,1.106138,8.806985,-9.099010,4.992745,-4.195547,-2.352804,-3.453774,-0.902685,-7.351413,4.816324,-0.778588,-7.823119,-0.595424,0.449617,-9.113216,3.637316,9.013824,1.412778,-8.916280,5.674855,-1.811010,9.868079,4.948813,-5.523043,9.280940,9.279781,-9.284600,-9.269249,9.132637,-1.057771,1.913301,6.196644,-5.026235,1.396027,4.052801,-4.638915,-8.293592,7.013077,7.014845,7.301378,6.732462,-0.349822,-6.407408,-6.688932,-8.727770,9.342208,-1.215649,0.532768,8.450390,-5.440767,6.836604,7.347991,-4.006991,-8.681600,-5.568888,8.172186,-6.611243,5.925331,-9.661584,-8.657781,-3.154620,4.315888,-7.475087,-2.638300,1.648908,9.092035,7.305060,-7.732213,0.257210,0.564368,-1.093733,6.902536,-4.195619,-5.499026,5.960775,1.927151,-1.277666,-4.446837,5.272714,3.295054,8.111231,-0.037084,1.722578,3.291740,0.073864], dtype = "float64")#candidate|7403|(352,)|const|float64
const_7404 = relay.const([-8.730641,-1.400892,6.103658,5.820736,-5.006098,-3.848105,-4.337328,-7.732495,-9.739575,-0.993490,6.558313,-2.164326,-7.937193,1.662136,6.987975,0.712563,-1.862690,0.752489,-3.020180,5.980647,-2.283647,-6.859741,9.840022,0.765767,3.278352,1.730193,1.408701,4.101324,-8.714011,4.092733,-9.363525,3.341701,-9.632949,-2.451780,-8.714156,-0.928923,-4.621120,7.151519,0.804540,5.663169,4.904383,-8.493509,4.970409,-0.447867,-3.430354,5.940033,9.130767,9.743320,8.549040,-8.823761,5.979465,-4.522676,0.907131,-8.869878,-5.997143,-3.010202,-4.673576,-0.859379,-4.515054,-3.489305,-8.266032,-7.236192,-8.011449,-6.148696,7.755002,6.984206,5.408293,-2.326589,-9.757907,9.583373,5.841555,-9.753445,-7.253245,6.722066,2.285551,5.667279,3.663282,7.845375,1.633022,4.860424,-9.860712,-6.688143,-6.530886,2.117524,4.912945,-2.769718,-4.651104,-9.921028,1.404716,1.020006,0.371141,3.646615,-2.910949,4.636180,-4.435103,3.951700,2.643265,-8.291246,-4.625112,-8.955319,-6.675027,-0.719444,3.608645,-9.551778,-9.891189,-6.465419,-1.590160,-7.710279,-2.650178,9.463663,-2.799500,-2.829213,-0.477431,-1.132131,-3.593361,-7.841587,6.360258,8.919368,3.787037,6.283954,8.780260,-6.230266,7.081968,7.542751,-8.789907,-6.709324,4.284964,-7.197096,5.936420,-6.262557,-7.244237,0.106732,-9.128001,-6.673305,-8.380089,2.237215,7.873182,0.715779,1.162194,7.350974,1.223482,-8.981424,-4.986597,-6.235701,1.106059,1.363360,7.413515,0.203870,5.903991,-1.047875,-3.861241,3.499926,8.488272,-8.364252,9.526484,-5.720402,-8.735568,5.509355,6.686127,-2.961350,2.396224,-2.391852,-2.895568,-7.381093,-0.502448,7.346144,-0.846367,-0.262293,-4.335848,-4.017843,-9.061589,-4.360543,-8.876065,5.712774,-5.862561,-1.735627,7.328979,-5.442185,6.817355,4.771639,4.861647,-3.777064,-2.432027,9.088620,4.117341,-6.666539,-9.082041,-8.296470,8.441427,9.674285,-6.766231,9.502160,-1.739007,7.610402,-4.148250,4.869040,-4.578666,7.913895,6.029334,4.756510,9.153504,-0.148107,-2.957050,-0.836914,6.117743,0.123597,6.775042,0.467156,0.726342,3.287522,-0.762392,4.819179,-7.287347,5.441623,-8.317174,0.059295,-6.142772,4.639137,-8.554795,-0.525452,5.005194,9.068662,-4.804046,2.494832,-3.664221,6.095091,8.994193,7.419508,-0.750641,1.610279,1.572154,-4.847763,3.914486,-3.559725], dtype = "float64")#candidate|7404|(234,)|const|float64
call_7400 = relay.TupleGetItem(func_2414_call(relay.reshape(const_7401.astype('float32'), [7, 8, 13]), relay.reshape(var_7402.astype('float32'), [1680,]), relay.reshape(const_7403.astype('float64'), [352,]), relay.reshape(var_7402.astype('int32'), [8, 15, 14]), relay.reshape(const_7404.astype('float64'), [3, 78]), ), 0)
call_7405 = relay.TupleGetItem(func_2420_call(relay.reshape(const_7401.astype('float32'), [7, 8, 13]), relay.reshape(var_7402.astype('float32'), [1680,]), relay.reshape(const_7403.astype('float64'), [352,]), relay.reshape(var_7402.astype('int32'), [8, 15, 14]), relay.reshape(const_7404.astype('float64'), [3, 78]), ), 0)
func_7029_call = mod.get_global_var('func_7029')
func_7031_call = mutated_mod.get_global_var('func_7031')
call_7407 = relay.TupleGetItem(func_7029_call(), 1)
call_7408 = relay.TupleGetItem(func_7031_call(), 1)
output = relay.Tuple([uop_7394,call_7400,const_7401,var_7402,const_7403,const_7404,call_7407,])
output2 = relay.Tuple([uop_7396,call_7405,const_7401,var_7402,const_7403,const_7404,call_7408,])
func_7413 = relay.Function([var_7402,], output)
mod['func_7413'] = func_7413
mod = relay.transform.InferType()(mod)
mutated_mod['func_7413'] = func_7413
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7414 = relay.var("var_7414", dtype = "float32", shape = (1680,))#candidate|7414|(1680,)|var|float32
func_7413_call = mutated_mod.get_global_var('func_7413')
call_7415 = func_7413_call(var_7414)
output = call_7415
func_7416 = relay.Function([var_7414], output)
mutated_mod['func_7416'] = func_7416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6807_call = mod.get_global_var('func_6807')
func_6808_call = mutated_mod.get_global_var('func_6808')
call_7457 = func_6807_call()
call_7458 = func_6807_call()
func_5936_call = mod.get_global_var('func_5936')
func_5940_call = mutated_mod.get_global_var('func_5940')
var_7467 = relay.var("var_7467", dtype = "float64", shape = ())#candidate|7467|()|var|float64
var_7468 = relay.var("var_7468", dtype = "float64", shape = (468,))#candidate|7468|(468,)|var|float64
call_7466 = func_5936_call(relay.reshape(var_7467.astype('float64'), []), relay.reshape(var_7468.astype('float64'), [3, 13, 12]), )
call_7469 = func_5936_call(relay.reshape(var_7467.astype('float64'), []), relay.reshape(var_7468.astype('float64'), [3, 13, 12]), )
output = relay.Tuple([call_7457,call_7466,var_7467,var_7468,])
output2 = relay.Tuple([call_7458,call_7469,var_7467,var_7468,])
func_7472 = relay.Function([var_7467,var_7468,], output)
mod['func_7472'] = func_7472
mod = relay.transform.InferType()(mod)
mutated_mod['func_7472'] = func_7472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7472_call = mutated_mod.get_global_var('func_7472')
var_7474 = relay.var("var_7474", dtype = "float64", shape = ())#candidate|7474|()|var|float64
var_7475 = relay.var("var_7475", dtype = "float64", shape = (468,))#candidate|7475|(468,)|var|float64
call_7473 = func_7472_call(var_7474,var_7475,)
output = call_7473
func_7476 = relay.Function([var_7474,var_7475,], output)
mutated_mod['func_7476'] = func_7476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6830_call = mod.get_global_var('func_6830')
func_6832_call = mutated_mod.get_global_var('func_6832')
call_7494 = func_6830_call()
call_7495 = func_6830_call()
var_7502 = relay.var("var_7502", dtype = "float64", shape = (9, 9, 12))#candidate|7502|(9, 9, 12)|var|float64
bop_7503 = relay.logical_and(call_7494.astype('bool'), relay.reshape(var_7502.astype('bool'), relay.shape_of(call_7494))) # shape=(9, 9, 12)
bop_7506 = relay.logical_and(call_7495.astype('bool'), relay.reshape(var_7502.astype('bool'), relay.shape_of(call_7495))) # shape=(9, 9, 12)
output = bop_7503
output2 = bop_7506
func_7510 = relay.Function([var_7502,], output)
mod['func_7510'] = func_7510
mod = relay.transform.InferType()(mod)
mutated_mod['func_7510'] = func_7510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7511 = relay.var("var_7511", dtype = "float64", shape = (9, 9, 12))#candidate|7511|(9, 9, 12)|var|float64
func_7510_call = mutated_mod.get_global_var('func_7510')
call_7512 = func_7510_call(var_7511)
output = call_7512
func_7513 = relay.Function([var_7511], output)
mutated_mod['func_7513'] = func_7513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7528 = relay.var("var_7528", dtype = "float32", shape = (13, 16, 2))#candidate|7528|(13, 16, 2)|var|float32
uop_7529 = relay.log2(var_7528.astype('float32')) # shape=(13, 16, 2)
output = uop_7529
output2 = uop_7529
func_7536 = relay.Function([var_7528,], output)
mod['func_7536'] = func_7536
mod = relay.transform.InferType()(mod)
var_7537 = relay.var("var_7537", dtype = "float32", shape = (13, 16, 2))#candidate|7537|(13, 16, 2)|var|float32
output = func_7536(var_7537)
func_7538 = relay.Function([var_7537], output)
mutated_mod['func_7538'] = func_7538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6891_call = mod.get_global_var('func_6891')
func_6892_call = mutated_mod.get_global_var('func_6892')
call_7565 = func_6891_call()
call_7566 = func_6891_call()
output = call_7565
output2 = call_7566
func_7567 = relay.Function([], output)
mod['func_7567'] = func_7567
mod = relay.transform.InferType()(mod)
output = func_7567()
func_7568 = relay.Function([], output)
mutated_mod['func_7568'] = func_7568
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7581 = relay.var("var_7581", dtype = "int8", shape = ())#candidate|7581|()|var|int8
var_7582 = relay.var("var_7582", dtype = "int8", shape = (4, 5, 15))#candidate|7582|(4, 5, 15)|var|int8
bop_7583 = relay.bitwise_xor(var_7581.astype('int8'), var_7582.astype('int8')) # shape=(4, 5, 15)
output = relay.Tuple([bop_7583,])
output2 = relay.Tuple([bop_7583,])
func_7590 = relay.Function([var_7581,var_7582,], output)
mod['func_7590'] = func_7590
mod = relay.transform.InferType()(mod)
var_7591 = relay.var("var_7591", dtype = "int8", shape = ())#candidate|7591|()|var|int8
var_7592 = relay.var("var_7592", dtype = "int8", shape = (4, 5, 15))#candidate|7592|(4, 5, 15)|var|int8
output = func_7590(var_7591,var_7592,)
func_7593 = relay.Function([var_7591,var_7592,], output)
mutated_mod['func_7593'] = func_7593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6747_call = mod.get_global_var('func_6747')
func_6749_call = mutated_mod.get_global_var('func_6749')
call_7595 = relay.TupleGetItem(func_6747_call(), 0)
call_7596 = relay.TupleGetItem(func_6749_call(), 0)
const_7605 = relay.const([[[-2.546152,-2.208469,9.518861,-2.386368,-0.859995,7.761134,-5.574948,6.484084,7.642481,-2.486562,-5.094402,4.922223],[1.511418,-3.332215,-7.123244,-0.850996,5.922663,1.529538,9.333870,-1.074296,-4.461436,8.239088,7.514988,-3.145866],[2.357520,8.687274,7.532465,-3.447104,9.935758,-6.703556,0.645974,-8.233919,0.758280,2.931253,-3.423075,2.363540],[9.790151,1.900761,9.759035,-1.162340,-0.257122,-1.907701,-8.799427,-8.001150,1.553116,3.228810,6.578194,-2.404191],[7.308996,-7.394442,9.546882,3.496297,-9.616443,-2.990098,-0.374760,-2.412365,-3.405934,-4.097074,-8.283627,-4.176671],[2.906663,-5.504672,7.649607,-3.143709,-8.038289,-2.933746,-0.023548,9.535344,-9.863556,-8.671396,-4.355921,6.179751],[7.442493,0.194950,3.477544,-0.158021,3.824082,1.038585,2.288811,5.478865,-3.536791,8.159514,8.598690,2.923656],[-8.555209,-6.523022,9.541200,9.289942,-6.394945,-0.795492,-0.337394,-5.754280,0.442600,2.013234,8.063756,-0.085640],[-0.630393,-8.301133,-3.265054,-4.903812,7.393838,4.594970,-5.752893,-6.171719,4.784292,-9.617985,0.856739,5.420361]],[[3.468292,0.096911,-4.773223,-1.396954,4.931851,-0.580843,4.343379,9.687225,-4.803358,7.970870,7.348623,5.809339],[-2.901237,8.935358,-1.955614,-7.069480,5.228740,7.008015,6.605695,-6.220168,-7.355580,6.060715,9.435635,1.934573],[2.239576,0.523154,-6.526793,-5.378749,-3.912269,-9.651668,-6.873237,-9.938883,-2.345870,3.509905,-4.409407,-7.409912],[9.837470,-7.897416,-1.938431,-8.101033,-1.216901,4.229075,-7.322239,9.397279,8.973344,3.432407,-8.398998,7.699102],[6.497584,-4.439155,-2.580647,2.956825,-9.042744,6.086179,4.064927,5.768945,8.612712,-3.569225,-6.488468,-6.405882],[3.776045,5.912046,-6.295164,-7.622274,-4.294001,1.935495,1.148163,-1.708829,-5.531208,9.187900,3.747733,8.139194],[9.135771,-1.993452,8.572715,5.906336,-4.314434,-2.276237,5.127617,9.764687,0.158632,-5.668520,9.690825,9.570683],[-4.798689,1.877954,0.157911,-9.676469,-8.052952,-0.082611,-6.681878,-6.571818,-3.456531,7.260329,1.134488,1.778999],[5.017532,7.821552,-2.064643,-5.020323,4.793207,-3.541869,-4.765632,9.058347,9.551876,-0.012555,8.609792,7.096518]],[[0.205624,0.072945,7.247302,3.919615,8.409601,0.564017,8.164643,-8.195137,5.397027,6.387259,-6.668607,-5.277264],[-9.223435,6.995557,5.659148,-4.923272,3.951304,4.822844,-1.913558,4.957276,6.900078,-9.534380,-7.004317,-9.953263],[7.461466,9.429757,-0.401610,-6.027800,-1.563303,1.335414,-7.896124,-6.855473,3.899508,-7.652545,-5.645551,7.717179],[-4.361051,6.071461,7.986566,-1.698606,2.261663,-1.158969,4.940932,3.215168,-1.992910,7.474689,-8.711180,-7.287285],[6.933542,2.911909,-3.752701,8.539711,-8.489824,8.609729,-8.456584,2.548308,0.582014,-4.779001,-5.297085,-2.780593],[-2.128628,6.458305,0.757085,-3.861367,-7.336265,-6.491441,3.964641,6.745849,-9.074977,9.982566,-7.959298,0.712914],[-8.629560,-1.718080,6.128544,5.781202,-2.482085,-8.700299,-6.678524,-9.354769,-4.586509,7.492088,-9.315375,-9.941520],[5.861523,-0.200584,-7.988741,5.452553,2.158313,5.565925,-9.546649,-8.263589,6.244084,-4.145226,5.148182,-9.033405],[8.820302,5.696393,-6.546240,5.515992,6.783770,5.424743,7.356442,-6.347433,-7.356051,2.897794,-3.510997,9.128560]],[[-8.079091,7.289992,-1.381375,9.372380,9.066224,5.630471,-3.772860,0.408718,-8.916745,5.141218,3.146151,-3.958164],[7.106155,-7.256639,4.114860,4.815019,9.799020,-9.346044,-0.678133,-3.008848,-2.088537,0.462919,-3.272299,5.989357],[8.581951,-2.158601,-5.674963,-9.216832,-9.738497,-5.078520,-9.480893,5.386840,-1.576794,6.785117,0.078613,5.190704],[-6.426363,0.995711,6.619094,2.019736,9.359461,-0.886741,8.666692,-0.791990,1.682587,7.355840,-3.853844,-6.337916],[-3.474599,-1.717913,5.631635,-4.683388,-1.080687,-8.751172,-9.389327,1.121843,4.256901,1.726649,-6.243374,-6.987797],[-0.016727,-6.868091,-6.793820,-2.020734,-5.626383,-4.577402,-3.894611,8.066573,-1.953040,-3.894599,-7.725854,4.301927],[4.830895,-6.407888,-8.518148,-6.815708,-2.389431,5.604011,5.200114,-8.516924,-2.790300,0.461898,3.635711,-6.422871],[-0.712399,-8.125919,-3.895141,-6.409055,-4.712671,4.137223,6.007631,-1.191869,-3.163154,-8.334928,6.562451,-7.982062],[6.630017,-0.880376,-1.825686,7.085022,9.640995,2.960680,5.933716,-2.216473,-7.763876,-5.770850,3.758818,-2.369299]],[[-0.863399,0.763048,9.846059,-3.280844,8.305995,4.338035,6.503561,-2.268303,-0.598074,-6.683203,0.160319,3.484944],[-5.570619,8.058621,-9.853404,-3.267382,-4.843829,-3.074369,1.478894,-9.958686,4.977538,-6.702981,-1.054782,-1.300612],[3.816719,-0.789209,2.325622,-0.832354,9.868828,1.437560,6.537273,8.549237,2.370646,7.796843,-8.855431,8.830071],[8.693772,-8.104559,-8.870382,-6.389603,3.646840,-0.730797,8.517125,-1.822482,-1.999900,-5.463218,2.017613,5.097369],[-5.557930,8.403838,-0.101851,-3.718556,2.476182,-7.178048,6.625055,3.599495,1.523819,6.582356,-0.479295,-9.430033],[1.535960,0.059276,-6.175481,8.029915,1.244868,3.480345,0.937961,-7.786201,-9.936055,-2.951365,1.674646,-0.983275],[7.947846,3.142359,3.028116,-4.813315,5.696977,-0.338230,-8.669459,-6.969669,-3.175763,-9.156492,5.930524,-1.491312],[0.178417,-0.527858,-5.697690,4.940272,-6.423068,-4.525212,-2.737792,7.389381,-3.993459,8.063199,5.648303,-2.608036],[8.730752,-1.927491,0.487845,-0.563119,2.336088,-8.353089,8.929549,-4.625452,-9.849279,-6.613684,5.591510,-3.567905]],[[6.651832,2.846969,4.334830,-2.869382,-1.283011,-9.317540,-4.548772,-4.380164,1.006891,0.869022,-9.793780,-5.536642],[-1.639523,-1.982231,-8.259978,5.210679,-0.738513,3.399568,2.728996,7.387854,-9.524090,9.544170,-8.062080,-7.654080],[-7.205258,7.685073,4.358924,-8.653354,-1.277930,-6.861305,8.982427,-3.801988,-3.062729,-9.662339,1.212353,7.746852],[2.482535,-2.730261,-3.668315,3.745272,9.235176,9.323428,-1.676419,-3.647632,-7.263177,-2.688376,8.153863,-1.056067],[-2.455608,0.568590,-7.729209,1.022038,8.314117,4.666890,-5.874810,3.498371,2.389950,7.325111,-2.392827,-9.580263],[-7.054603,-8.634728,3.389616,3.543413,0.747232,-4.097413,6.937447,4.690458,6.398034,-1.860732,2.267622,6.449029],[-4.734729,8.483190,4.420838,-9.623921,-5.140229,3.938904,7.909334,5.008784,1.704524,-8.086764,3.302815,5.360191],[-0.508403,-5.469604,0.732808,3.518875,-2.346449,-2.810692,-5.570077,3.131672,-8.473963,4.927969,0.852836,-4.466043],[-8.119805,0.653151,7.376610,-8.718016,-1.875539,1.345478,1.676886,-9.308398,3.435070,2.062920,2.052723,-3.859792]],[[0.583064,4.579386,-8.232502,9.171846,-5.900791,-9.699461,3.968873,1.132620,-3.917926,-1.777628,9.587464,5.943503],[2.390622,3.634086,-7.969153,-8.595236,8.216149,-8.720595,-4.818397,-2.346886,4.948123,-5.082349,5.089905,-7.186392],[-6.340015,9.589208,7.511421,1.403346,6.996801,7.687225,-7.229805,8.048684,7.555657,-3.592182,2.234307,-4.248815],[3.134295,-6.159549,8.210799,-4.343430,7.466200,6.373950,2.270242,1.258889,6.687819,-6.829515,2.499533,2.007030],[2.190376,-0.683857,-8.252835,5.175506,2.489224,3.829875,0.726744,-6.721901,7.175696,4.114065,-7.430770,-6.645765],[-3.191096,-5.607370,-1.279447,-0.102545,0.417256,2.600478,-5.327337,8.087082,-9.639216,-1.317298,4.040421,-2.100689],[-0.423620,8.326907,-8.132355,1.619111,-6.664759,-7.963768,1.069485,-9.701073,2.294948,3.193528,0.272459,7.304075],[8.674114,6.603849,6.749660,1.015850,4.446021,-4.632347,-7.187777,-1.922006,9.451435,-5.971660,-1.329422,2.542124],[-1.851526,8.658201,-3.770233,8.478324,-0.979169,-1.810268,-5.617309,8.641834,-6.980734,9.411200,4.169152,3.365059]],[[5.838808,-8.303498,-3.002940,1.836851,-6.752894,-6.911078,-7.845339,-6.746351,-8.454552,-9.886313,-3.979370,5.644621],[5.707556,-1.164699,-5.341737,-3.343848,1.703944,5.788505,-4.331941,-4.729923,5.408135,4.953807,-8.635735,-0.540053],[-5.234626,8.184321,7.958374,6.565608,6.472702,9.155264,8.215014,2.810662,-0.378524,5.876033,-3.167984,9.334846],[-5.728963,8.263692,-6.532534,-4.327810,-6.488073,-2.275818,-0.977144,-4.658466,1.044398,8.270023,0.583225,2.761295],[-1.346349,9.525627,-9.080866,-1.505397,8.010597,5.597465,-1.921927,6.268039,4.762331,-3.738091,3.140603,2.355392],[-7.900377,-0.732657,-2.253281,-7.031785,-3.103695,4.429015,-6.590719,9.130231,3.310943,-3.377298,-6.378552,-4.465083],[2.600178,3.152980,4.302735,1.095395,-5.431982,-9.581420,8.322609,2.918990,-2.683741,-9.972928,-1.291840,-0.547072],[-0.238708,4.700450,-1.651552,-9.310554,-6.909978,7.351876,-3.676194,-5.739975,-0.222247,9.198585,9.068133,1.970578],[5.035851,-2.959516,8.092000,2.780298,9.187772,8.669935,-6.415460,6.150985,4.575975,3.865701,7.476461,-7.889348]],[[-2.853935,8.969416,-7.320240,7.314990,-1.328420,-7.512242,-5.497303,3.263433,-3.983351,-4.524526,-6.760585,-6.134281],[-8.092003,-6.503020,1.979919,7.387810,-2.302823,3.627340,6.516344,5.857083,-8.860790,0.993702,6.314595,1.603232],[8.960569,4.245781,3.528548,-6.810032,6.962245,-3.348190,5.842568,-0.993989,-8.338952,4.192909,-2.416942,-9.952645],[-1.411089,0.836457,-8.768656,6.615879,-5.202052,-4.860347,-6.976039,1.743210,4.276330,-9.923672,3.290216,-5.101947],[-9.020135,5.809003,-0.226618,-1.810196,-7.061581,1.047842,-0.446707,-0.067893,2.438696,-0.839349,6.887744,6.740646],[1.486598,-3.273092,-2.868595,5.187749,-5.410089,9.243588,-0.173069,8.789077,8.693830,6.994070,3.712807,8.866655],[-3.342395,4.049771,9.433051,-4.230148,-2.653636,-2.412795,-0.954578,-5.624187,-7.975364,4.878926,7.593675,2.350769],[0.305925,-2.706327,8.177909,0.973548,0.543485,1.112729,0.572219,-4.885626,-1.466150,-3.490844,-2.869555,8.839759],[-1.628355,4.558634,4.024759,3.799019,6.493890,-6.475919,5.750272,1.601416,-3.554158,3.576843,-5.896058,7.397524]]], dtype = "float32")#candidate|7605|(9, 9, 12)|const|float32
bop_7606 = relay.bitwise_and(call_7595.astype('uint8'), relay.reshape(const_7605.astype('uint8'), relay.shape_of(call_7595))) # shape=(9, 9, 12)
bop_7609 = relay.bitwise_and(call_7596.astype('uint8'), relay.reshape(const_7605.astype('uint8'), relay.shape_of(call_7596))) # shape=(9, 9, 12)
output = relay.Tuple([bop_7606,])
output2 = relay.Tuple([bop_7609,])
func_7610 = relay.Function([], output)
mod['func_7610'] = func_7610
mod = relay.transform.InferType()(mod)
output = func_7610()
func_7611 = relay.Function([], output)
mutated_mod['func_7611'] = func_7611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6891_call = mod.get_global_var('func_6891')
func_6892_call = mutated_mod.get_global_var('func_6892')
call_7735 = func_6891_call()
call_7736 = func_6891_call()
func_7110_call = mod.get_global_var('func_7110')
func_7112_call = mutated_mod.get_global_var('func_7112')
var_7742 = relay.var("var_7742", dtype = "uint64", shape = (180,))#candidate|7742|(180,)|var|uint64
call_7741 = func_7110_call(relay.reshape(var_7742.astype('uint64'), [6, 15, 2]))
call_7743 = func_7110_call(relay.reshape(var_7742.astype('uint64'), [6, 15, 2]))
func_7141_call = mod.get_global_var('func_7141')
func_7144_call = mutated_mod.get_global_var('func_7144')
call_7748 = relay.TupleGetItem(func_7141_call(relay.reshape(call_7735.astype('float64'), [9, 9, 12])), 0)
call_7749 = relay.TupleGetItem(func_7144_call(relay.reshape(call_7735.astype('float64'), [9, 9, 12])), 0)
func_2276_call = mod.get_global_var('func_2276')
func_2279_call = mutated_mod.get_global_var('func_2279')
var_7751 = relay.var("var_7751", dtype = "float64", shape = (176, 2))#candidate|7751|(176, 2)|var|float64
call_7750 = relay.TupleGetItem(func_2276_call(relay.reshape(var_7751.astype('float64'), [2, 11, 16])), 1)
call_7752 = relay.TupleGetItem(func_2279_call(relay.reshape(var_7751.astype('float64'), [2, 11, 16])), 1)
output = relay.Tuple([call_7735,call_7741,var_7742,call_7748,call_7750,var_7751,])
output2 = relay.Tuple([call_7736,call_7743,var_7742,call_7749,call_7752,var_7751,])
func_7756 = relay.Function([var_7742,var_7751,], output)
mod['func_7756'] = func_7756
mod = relay.transform.InferType()(mod)
mutated_mod['func_7756'] = func_7756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7756_call = mutated_mod.get_global_var('func_7756')
var_7758 = relay.var("var_7758", dtype = "uint64", shape = (180,))#candidate|7758|(180,)|var|uint64
var_7759 = relay.var("var_7759", dtype = "float64", shape = (176, 2))#candidate|7759|(176, 2)|var|float64
call_7757 = func_7756_call(var_7758,var_7759,)
output = call_7757
func_7760 = relay.Function([var_7758,var_7759,], output)
mutated_mod['func_7760'] = func_7760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6807_call = mod.get_global_var('func_6807')
func_6808_call = mutated_mod.get_global_var('func_6808')
call_7777 = func_6807_call()
call_7778 = func_6807_call()
const_7811 = relay.const([[[6.388631,-5.765500,0.340312,-0.446533,5.760746,3.323015,-9.095722,-8.797558,-7.468525,0.795972,0.697243,0.047032],[7.877856,9.586936,-1.672879,-9.383833,-1.433490,-5.691109,-8.747310,5.185793,1.325262,4.409460,6.516205,-8.423435],[-7.398230,2.537156,3.148870,-0.206657,0.321016,7.637677,-7.489422,6.328113,-4.720594,-5.618017,-8.613692,-6.520867],[-7.254798,1.471296,3.743705,-6.778461,9.422219,6.591568,-6.579604,-5.118274,6.416302,8.045395,9.749460,-3.073680],[-6.708784,5.003943,-0.160111,2.274538,3.462047,-4.171352,-3.593814,2.706810,-9.094267,-1.746674,-3.449146,-5.498157],[-8.859282,3.646452,-8.153751,5.601192,-4.012462,0.547044,4.343017,7.320081,-9.852620,4.263022,-1.594510,-7.746534],[-3.105410,4.426417,8.332338,-1.733000,8.517314,-1.255884,-7.581312,6.861699,-6.081187,8.007392,0.098372,-9.424719],[6.516168,-2.931058,-3.618961,-5.206564,9.182399,8.533572,-5.021674,-2.816599,3.758177,0.083041,-4.523203,-8.257372],[-7.301251,-8.524205,4.322309,0.139866,0.615412,-3.831070,-7.651909,-2.829315,7.038644,3.041105,4.261242,4.792670]],[[-3.842777,-3.888792,6.585250,3.489261,3.928673,6.189340,-1.213879,1.693248,-0.662944,-6.743421,-1.393708,-3.474534],[-8.301410,2.675962,7.326917,5.539262,-3.997653,2.008171,-1.327089,9.573877,-4.283636,-1.950251,6.911601,-0.090664],[-1.712469,-5.029482,8.689791,-0.957653,-0.493341,-6.681049,-2.625048,1.271988,0.441427,0.246311,3.472635,8.873150],[9.410773,0.143009,3.193596,0.743956,-9.494392,6.287291,-8.397924,0.692990,9.305947,8.694324,1.851635,-2.549391],[6.754963,9.939636,-1.133888,-0.808474,-3.189289,-9.410140,-4.425821,8.091423,-9.162695,-3.952572,-3.121586,9.513712],[6.021414,-0.404259,-2.393255,-6.130458,-4.266897,-7.057241,-8.906656,-9.141224,-1.735749,8.090301,-3.100213,4.521077],[1.023393,-0.669888,-5.284865,9.841730,-1.105488,-8.200361,3.501787,-8.852826,-8.943240,-3.739645,2.247282,-4.268369],[-0.670008,-1.299195,-6.781850,4.200399,-7.604683,-3.316637,8.522146,-5.374906,6.293530,-4.041698,2.853103,-8.955106],[-9.423256,2.647666,2.337818,7.067339,6.298796,6.972038,-6.132466,2.367717,-3.298949,1.165881,3.816520,2.058689]],[[-3.249329,6.097409,-9.702870,-8.105771,6.437138,-2.359593,9.333155,-8.039289,-0.050263,-4.162442,-9.039787,8.007513],[6.239037,-9.488744,-5.904675,9.787753,-1.929381,2.765237,-7.363262,2.692884,0.745677,2.919698,9.457882,4.006643],[7.970203,-3.866688,7.185773,-0.321550,-8.564066,5.622693,-5.720655,-4.052763,-3.363902,0.091403,5.514762,-8.788587],[-1.562360,0.176762,8.325301,5.248930,-5.809623,-2.965976,5.997513,5.026520,1.363004,5.923501,3.522816,-2.280296],[7.343664,0.484760,-2.372429,0.943411,2.312940,4.559645,4.807880,5.424269,-2.893766,4.452312,-4.492701,-7.941230],[3.573792,6.301994,7.021474,-6.783869,2.758644,4.914622,1.486119,-8.357241,6.021147,5.780282,1.434292,-7.278171],[-3.041100,0.814366,-8.809820,5.380393,2.549503,6.421076,-1.486538,5.366652,6.063735,-0.105332,8.940955,5.507529],[-6.319365,4.340341,0.566992,5.324037,1.170583,-6.692892,-8.545473,-4.016620,-4.643217,-2.699528,3.129476,-9.918701],[-8.546855,-9.205682,1.499848,-6.978929,-8.347852,0.801912,-5.030608,-8.757818,-4.936222,7.230647,-1.176091,-1.431336]],[[7.104499,2.893040,0.044119,0.221089,-8.451416,2.857174,9.104883,6.814022,-4.425602,5.762716,-0.134760,-7.452642],[-9.598508,7.860263,5.676072,6.857229,7.974002,-7.326624,-7.593830,-7.891058,2.570240,4.645600,-3.361593,-8.774843],[1.301529,7.858364,4.219900,-1.807265,9.492081,-7.472018,-0.605496,-8.094664,5.727737,-3.426823,-5.467224,-8.052227],[-8.720685,0.118323,7.110670,4.886437,4.994885,-6.889993,4.897360,2.595934,-5.036990,6.779704,3.914002,-5.863047],[-2.436266,6.995812,-6.410391,-1.756205,5.568909,2.373335,-4.759334,3.415062,7.243859,-2.599399,0.681629,1.485498],[-7.149400,-3.449154,-3.671153,-9.041611,7.390218,-0.695520,9.904506,-2.331547,-7.221944,6.739711,0.539979,-2.735072],[-0.759804,3.900398,-4.586901,-3.093328,2.978487,9.049850,5.175791,3.780592,8.099697,-1.673503,-4.048269,6.669469],[-0.468160,6.952814,0.246332,-7.828699,5.545390,9.723433,5.133891,-7.727355,-0.230156,-9.043937,1.888968,-6.066103],[1.086918,3.103826,-5.009077,-6.385917,-8.162483,-6.330696,-0.025033,0.923215,-7.897982,0.004122,-3.319396,-0.045598]],[[9.083329,1.868509,-2.606381,8.447092,-4.335849,-4.096255,3.669366,-9.814273,-7.089648,-0.223638,4.728625,-3.212011],[-5.032970,8.880907,5.136448,-6.134699,5.456853,8.200149,2.104755,5.213752,-8.734428,-3.037665,1.886186,0.791516],[8.482398,-6.072121,9.905674,-9.608465,-7.935779,4.248989,-0.045437,5.112378,5.535570,6.008800,3.414486,-2.991615],[-1.199435,-6.556408,1.355789,-1.083900,6.096501,-4.143004,4.798693,-6.064598,-6.684690,-9.722975,6.054023,-7.025090],[-0.339006,-2.490832,6.711986,2.310078,8.089506,5.770279,8.550415,-3.747852,-2.185912,-2.901168,8.456405,0.693092],[-4.712998,-3.400998,3.551778,-5.572921,2.036882,-6.432798,1.901985,-2.233794,0.133864,-9.543419,3.636260,5.100333],[1.983906,-9.664886,-0.540673,-0.759274,9.216429,1.758608,-8.525311,-9.000820,-6.744788,-8.878891,5.245748,-0.145223],[-1.591276,7.282398,3.856576,1.919758,-8.872930,-1.563237,0.555683,4.187914,7.991040,-3.705264,-4.538785,7.816457],[6.146093,2.062506,4.211061,7.072139,-0.258097,8.256023,9.796839,-3.807120,-2.164619,-8.525262,0.545731,-5.795724]],[[-9.349822,-1.610441,-3.572270,9.479529,1.225225,-9.047134,8.529193,-9.146742,-7.025355,4.940260,-2.126359,-6.962536],[-0.040433,1.997258,-8.831423,2.755843,-5.338366,-2.148199,2.979591,-2.647649,-2.891380,7.906873,-1.742221,4.888708],[-3.862334,-3.271573,-6.571130,1.158082,5.117913,-4.357385,1.724941,6.133544,-8.309388,-1.500836,0.436136,-9.317990],[2.860942,4.170547,-7.244740,-8.754599,-2.530799,6.691809,8.717879,6.177615,3.005969,4.121053,1.898432,-9.266005],[-4.520394,-9.855615,9.816534,8.999474,-7.428023,-4.416433,4.391467,9.505267,3.933417,-4.607809,-0.993110,-9.306190],[8.308983,-2.104147,-9.820857,-5.362080,6.172353,-0.759584,-6.651034,4.197869,5.005611,2.038812,-3.653676,-0.857969],[1.676308,8.454321,-6.637354,-5.804572,9.354434,9.557963,0.181265,-0.090820,-5.574698,-6.067336,-2.875297,1.928914],[8.790957,-0.580440,-8.060591,-3.414230,0.225333,2.126058,8.314836,6.479529,-3.104493,-4.706484,3.912228,-8.095608],[2.966499,-4.114727,-3.359673,1.990964,-8.074928,1.263723,-0.573053,-5.152863,8.133965,-4.489799,6.296405,5.634404]],[[-9.227177,-0.683073,-5.149390,2.392109,7.742633,7.581671,0.965643,8.014234,-6.458691,-1.538830,-5.484735,-8.155410],[-0.461476,-0.996529,9.008742,8.923685,2.232569,0.259511,-9.007802,-8.090572,-1.521257,1.550967,-5.690098,4.611749],[-7.745953,-5.282647,-4.203892,-5.040644,0.593868,3.091644,1.741585,-4.372307,-8.455306,-6.629207,-0.140260,-2.462453],[3.243235,-3.096035,-5.503092,-5.613780,-1.818122,-1.736880,-7.143648,2.210101,2.409646,-1.659446,-2.433677,-0.282721],[-3.304979,8.598534,1.420331,0.125167,-4.905894,-3.534758,7.101452,1.281063,0.304621,-3.836543,-7.561952,5.502521],[-8.206612,-8.446033,-0.319498,1.873026,-2.310545,6.192833,-6.772033,-4.557077,2.151100,-0.352779,8.486186,-8.151221],[3.291609,-6.302011,-6.099877,8.644036,6.420897,8.945125,-5.625278,-3.795794,-5.862239,-1.571493,-6.346727,2.667190],[-3.700916,-0.233731,8.075838,-8.581808,-3.604490,-1.996972,9.846946,9.669465,-8.672416,-0.260223,-8.374558,8.991161],[2.581666,6.845321,-9.429056,2.308269,-9.050213,-6.713889,-5.290618,-4.366615,-2.453755,3.248753,2.810919,-6.686830]],[[-3.655010,-8.407749,-3.684343,4.283879,-4.081857,0.422233,3.780179,5.130743,8.245617,0.845981,-0.844079,-3.755894],[-6.441745,-7.832380,-3.574633,6.396761,-9.725332,8.926390,3.648387,-2.338647,-1.637912,-8.047047,-1.785841,5.929348],[-4.902511,6.722433,4.827331,3.583508,4.701165,5.472099,-2.719736,-7.391243,-9.198370,9.351386,-7.658411,1.024012],[-8.620733,-9.777707,8.087667,-6.956435,-4.027948,2.585744,8.179089,-6.487741,-3.824298,-2.841799,-6.112247,8.071227],[0.547023,7.774275,-2.580840,-5.663684,-3.961606,5.922724,-2.885418,8.260998,9.665677,-2.794995,0.304199,-0.202855],[-8.542338,4.459901,4.929685,-7.732824,6.861606,5.851328,-5.356594,-0.591217,-2.459040,5.722777,6.936939,-0.612351],[3.549466,7.459471,9.485455,-0.700001,8.464390,-6.748913,1.391626,4.834607,-4.749481,-0.211455,-5.920315,-2.095574],[7.893310,1.006684,-2.208441,7.174002,2.739236,6.540940,-2.473756,-7.007936,5.715628,0.212203,0.899549,6.155605],[1.302077,7.870255,3.030922,-8.283726,0.518066,9.862573,1.921407,6.380290,-6.178343,0.266452,-6.573578,-8.925304]],[[3.082624,-5.129742,-8.082542,-9.388661,-9.732715,6.382935,1.158100,-0.916029,1.794989,9.005254,-9.222827,0.761909],[0.299866,-8.258606,0.456560,3.882001,-5.952866,8.772359,7.558190,-0.465820,8.594327,3.368297,3.301661,3.278264],[-7.072905,-2.057087,3.061896,7.646346,-5.139069,1.069843,-6.314119,-1.753967,-4.186438,8.553229,-5.357133,9.281217],[3.728473,-6.046838,-9.935480,8.485672,-2.685324,-5.348120,-9.331555,-9.002123,1.137180,-6.099163,-7.140175,-2.353879],[-5.478409,4.819044,6.016665,4.758480,4.805384,1.294594,6.443575,-2.328538,-2.177401,-0.173492,-6.142558,-2.321308],[-7.643264,8.346672,8.692611,1.389484,7.333795,-0.857422,-3.294607,9.499982,-4.472339,5.593259,-9.460594,3.535222],[-2.724672,4.085431,3.584847,-3.470759,-1.386166,-1.161758,8.875069,9.953985,-8.181331,5.306890,4.511576,2.527411],[-6.852163,-4.148547,-2.277637,9.760190,1.338314,-4.138087,-6.263154,-2.468287,-4.591679,7.830919,-7.506241,0.687787],[-3.974158,9.968401,9.694115,9.610189,-6.391246,-6.594078,-4.178195,4.303763,-8.186440,-4.526667,3.454438,5.828222]]], dtype = "float64")#candidate|7811|(9, 9, 12)|const|float64
bop_7812 = relay.equal(call_7777.astype('bool'), relay.reshape(const_7811.astype('bool'), relay.shape_of(call_7777))) # shape=(9, 9, 12)
bop_7815 = relay.equal(call_7778.astype('bool'), relay.reshape(const_7811.astype('bool'), relay.shape_of(call_7778))) # shape=(9, 9, 12)
output = bop_7812
output2 = bop_7815
func_7818 = relay.Function([], output)
mod['func_7818'] = func_7818
mod = relay.transform.InferType()(mod)
mutated_mod['func_7818'] = func_7818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7818_call = mutated_mod.get_global_var('func_7818')
call_7819 = func_7818_call()
output = call_7819
func_7820 = relay.Function([], output)
mutated_mod['func_7820'] = func_7820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7610_call = mod.get_global_var('func_7610')
func_7611_call = mutated_mod.get_global_var('func_7611')
call_7821 = relay.TupleGetItem(func_7610_call(), 0)
call_7822 = relay.TupleGetItem(func_7611_call(), 0)
uop_7836 = relay.log10(call_7821.astype('float32')) # shape=(9, 9, 12)
uop_7838 = relay.log10(call_7822.astype('float32')) # shape=(9, 9, 12)
output = relay.Tuple([uop_7836,])
output2 = relay.Tuple([uop_7838,])
func_7848 = relay.Function([], output)
mod['func_7848'] = func_7848
mod = relay.transform.InferType()(mod)
output = func_7848()
func_7849 = relay.Function([], output)
mutated_mod['func_7849'] = func_7849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7610_call = mod.get_global_var('func_7610')
func_7611_call = mutated_mod.get_global_var('func_7611')
call_7872 = relay.TupleGetItem(func_7610_call(), 0)
call_7873 = relay.TupleGetItem(func_7611_call(), 0)
output = relay.Tuple([call_7872,])
output2 = relay.Tuple([call_7873,])
func_7880 = relay.Function([], output)
mod['func_7880'] = func_7880
mod = relay.transform.InferType()(mod)
mutated_mod['func_7880'] = func_7880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7880_call = mutated_mod.get_global_var('func_7880')
call_7881 = func_7880_call()
output = call_7881
func_7882 = relay.Function([], output)
mutated_mod['func_7882'] = func_7882
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7930 = relay.const([[[4.163322,-2.831864,-8.651745,-1.024716,-6.839811,-4.048215,-4.963942],[5.406297,-4.774126,7.141591,0.181967,0.862847,7.564686,9.765185],[5.853433,-7.661072,-7.761534,4.003015,3.289498,-9.498588,-5.548565],[5.162483,-4.979467,-6.933042,-4.172742,-2.816704,5.460093,-5.649488],[-4.977545,6.908883,-1.128166,-5.105206,1.610196,5.933440,8.125648],[-6.198359,-5.934112,5.337706,9.038049,2.134755,8.389642,4.422073],[-0.192612,7.792582,7.988429,-9.730636,9.556462,1.633248,-4.872568],[7.834183,-6.573770,8.301787,9.292548,3.762740,-6.108957,-6.043595],[-6.063055,-5.964335,0.581642,8.945665,2.128970,-2.088238,8.321950],[9.399668,-9.187980,9.616497,-8.148463,1.781737,4.613627,-1.689768],[1.435640,-5.437760,5.957292,-7.541665,-5.491144,9.733472,-1.176366]]], dtype = "float64")#candidate|7930|(1, 11, 7)|const|float64
var_7931 = relay.var("var_7931", dtype = "float64", shape = (6, 11, 7))#candidate|7931|(6, 11, 7)|var|float64
bop_7932 = relay.floor_divide(const_7930.astype('float64'), var_7931.astype('float64')) # shape=(6, 11, 7)
func_2759_call = mod.get_global_var('func_2759')
func_2767_call = mutated_mod.get_global_var('func_2767')
const_7940 = relay.const([True,True,False,False,False,True,True,True,True,True,True,True,True,True,False], dtype = "bool")#candidate|7940|(15,)|const|bool
const_7941 = relay.const([[True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,True,True,False,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,True,False,False,False,False,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,False,True]], dtype = "bool")#candidate|7941|(1, 225)|const|bool
const_7942 = relay.const([[5.103201,-9.729562,2.185264,-5.887674,2.914925,-2.066852,0.004651,-9.163010,8.404411,-7.459845,-7.734180,4.835656,-3.707123,9.200012,-5.796701,9.731845,4.410478,-7.410135,-0.173649,8.574446,6.474926,6.446576,0.213804,-5.734998,4.420324,-9.281148,-3.231925,-0.753818,9.604555,8.928837,8.985954,7.958246,-2.273782,-2.667593,7.099420,8.278438,8.514607,5.235978,-3.464315,5.020385,9.104152,-1.561282,-1.012755,-3.845707,-6.070663,9.859690,-3.787234,-9.341311,-2.382984,3.880863,-8.619030,8.087846,9.139860,-8.371007,-2.084522,-2.694430,-4.662992,7.139978,3.989499,-7.396650,-8.382903,-7.537444,-8.608252,7.252144,7.727573,-2.834718,6.049492,5.724149,4.182474,3.833650,-3.952360,6.390067,-9.977697,2.822834,-9.595233,5.898939,0.397379,0.108419,-7.760046,5.010812,-8.010712,-9.994771,8.021677,-0.441057,4.960348,-6.708266,3.963033,-0.819440,-5.664619,-5.105431,1.823215,3.790141,7.315386,3.149705,-7.096810,3.982965,-3.192830,-0.551349,8.821200,-0.866401,-7.386122,-5.057215,-3.122179,6.186041,-0.740173,7.868337,9.499344,7.599390,-6.203114,8.234520,1.722169,4.568689,-4.790431,1.782111,-2.610132,-5.563030,-2.376135,8.524727,-5.642841,1.985119,-7.985749,-4.202945,-5.086570,-9.796090,-8.007677,8.776105,-7.411283,-4.068652,-8.169903,-2.501271,1.786349,-7.472293,-6.023762,1.301591,-6.440262,2.566775,2.983242,1.676333,8.139033,-3.679609,8.267834,8.833580,-3.382614,-7.112898,1.043982,-8.367544,2.292816,-1.905439,-3.661720,-2.156767,5.985287,7.712803,-4.098627,-3.028097,-7.157089,6.997951,-3.880823,0.500309,-5.140466,4.362325,-6.635524,7.969941,-2.577149,9.513838,9.223021,-8.326898,-0.051473,2.631702,-3.732872,-4.353284,7.271052,-3.926898,2.619652,-5.905138,6.285733,6.751036,3.568307,0.854310,0.885550,-4.688682,4.034069,2.524974,-6.993630,-6.025346,-6.905065,7.392644,-2.150496,2.947169,3.403764,-7.534189,5.578513,8.852615,-2.539050,7.259857,2.294340,-4.006774,-1.893691,-7.019326,-7.956113,0.011006,-0.592208,-7.224538,-0.517868,-3.341396,-0.151922,-2.067220,-1.171093,-4.303049,-4.264318,-8.571902,-8.795828,-1.433337,-3.317268,7.135242,7.881550,6.710364,-9.483418,2.867552,9.877486,-7.898919,-4.674660,-3.283591,-4.513128,7.441722,-7.058716,3.259991,-2.666481,2.781357,-0.475604,0.005202,4.128362,2.642316,6.368939,-4.406222]], dtype = "float64")#candidate|7942|(1, 234)|const|float64
var_7943 = relay.var("var_7943", dtype = "float32", shape = (1680,))#candidate|7943|(1680,)|var|float32
const_7944 = relay.const([8.730626,-8.824040,4.146256,-3.679767,-1.832348,1.613343,9.271304,-5.312853,9.087893,-8.921333,-6.764910,-4.105271,8.716571,1.402323,0.362449,6.904200,5.361934,-8.023979,8.651852,-7.893042,-8.906711,-6.683488,3.892478,-6.839035,1.367548,9.047955,5.540060,-3.025505,-6.386725,1.237920,3.195942,-4.506883,-2.667334,-7.798917,-7.736764,1.960728,-5.684707,-4.124757,3.184369,-8.661331,6.044827,-1.269666,9.152526,6.200127,2.430115,3.117196,8.251360,4.165438,-3.877447,9.002992,6.223900,9.890154,6.152377,8.769879,-1.485795,9.177778,7.628818,-7.391392,-5.168625,-3.551997,-4.576264,7.563356,1.232290,-1.066412,-3.184728,-4.973154,-8.064163,5.862645,7.706025,-1.660081,-6.901970,8.888342,-2.365371,0.760212,-1.083035,-8.076956,1.476705,-7.310354,-5.574831,1.969976,6.926799,-4.039275,9.267838,4.040919,-0.367956,4.330256,4.951509,-9.342109,-2.563897,-2.445565,7.728403,-6.796977,-8.459245,-1.860532,3.495125,3.809009,0.123284,-5.376202,7.752847,-6.215133,-6.841040,2.589759,-1.654687,5.166013,6.996642,5.655749,-1.150417,7.290273,8.043779,5.503857,5.104742,2.543560,5.245738,-5.934037,0.903608,-7.805839,-6.865217,1.815621,-4.817377,2.337898,-0.344523,-8.658834,-8.261812,-3.246977,6.664762,-9.794456,-3.232302,-7.108756,-0.275581,9.939332,8.930040,7.467434,8.134526,-9.002824,0.482688,6.156405,7.063022,-7.547442,5.158888,5.159076,-4.660618,-8.071080,7.627379,-9.208958,6.180560,0.052159,-1.423970,-8.968558,9.357198,5.981221,-7.437904,-0.091913,-0.990019,-0.973727,5.837066,3.589627,8.745466,6.503594,-4.609318,-1.521252,3.667063,-3.521452,-5.494794,3.861393,1.201304,-9.037314,3.008104,0.790598,6.838196,5.128935,9.141415,5.523553,-5.031826,9.423754,-1.380628,-9.713768,4.588036,5.708676,0.961802,3.577969,8.826874,7.228003,9.858717,1.891245,-0.474990,1.980724,1.171687,-5.147697,7.729792,-7.709424,-1.051509,4.747310,6.443709,9.299443,5.663969,1.969892,1.925524,9.217197,-1.767615,2.052021,-6.699930,-6.881328,2.226837,4.688766,3.634898,2.942724,8.337982,2.714116,5.075395,2.085773,-2.633059,-8.746605,5.621050,-3.297265,-6.924825,-2.916602,-2.479082,-4.093724,-0.621574,9.246414,9.383472,2.754196,9.790116,9.042391,3.899928,-3.065937,4.167425,0.513360,-4.264677,-6.891330,-9.922455,4.615283,-5.119282,-4.107031,-9.309402,-1.479503,-2.435508,-7.681707,-2.168112,6.997584,-1.175985,5.002321,-7.179811,6.318967,-5.795342,4.239879,-7.053838,-0.700258,-7.253236,1.428374,-5.741351,-4.974986,8.884491,-4.669874,-8.476854,-9.895891,2.645734,-4.173965,-7.062415,5.164436,-0.793300,9.673484,7.939216,5.026359,0.855450,-8.388961,-9.680140,-2.618978,6.201743,5.417055,-4.558233,3.353767,-4.136144,2.436451,6.209224,2.208433,5.208527,-6.685157,-2.535824,-1.137496,4.415494,7.525333,0.627972,5.231420,2.576460,-4.344523,-7.959426,6.280698,-4.836121,-8.755295,9.381793,4.022037,-6.880074,-6.177117,8.717567,-5.462391,6.606334,-7.403792,-6.610388,-6.514346,-5.470555,1.509163,-7.574470,0.428998,-6.129769,-3.346832,-8.703278,-6.386408,9.445599,9.672105,-7.006534,7.747743,-5.937329,-6.722606,-8.937489,-6.450685,-6.770316,4.852345,-6.478702,9.730096,-7.982422,3.430074,4.954725,-6.961972,-3.437828,2.539527,3.673317,-5.570490,-3.291157,-5.198239,7.858868,5.467481,8.419797,-6.751886,-0.131874,-1.165963,0.385556,5.444981,6.633364,-1.424417,6.623867,-5.320536,-5.518541,-2.434284,-9.893438,9.221575,4.056868,5.907542,-4.889603,2.145496,7.709279,9.365281], dtype = "float64")#candidate|7944|(352,)|const|float64
const_7945 = relay.const([-8,1,-9,-6,-10,9,-3,-7,-9,-5,-1,-5,-8,-6,-6,-10,-5,6,9,6,1,9,-6,-8,9,9,10,-2,2,-7,2,-1,-8,3,-2,-9,4,7,-4,-6,8,-3,-9,5,5,-8,-1,4,-9,-7,3,2,-3,7,1,2,-9,8,-2,-7,-6,3,-7,7,1,-5,-9,2,-7,1,4,-9,-10,9,1,8,5,5,6,6,-5,2,1,5,-4,-7,-10,1,3,-2,8,-2,-1,4,8,-7,-2,-6,-4,10,7,-8,2,-7,-1,-1,-10,1,9,-1,7,1,-6,10,-10,-7,8,4,-5,6,9,-5,10,2,-3,-10,8,8,10,1,-10,7,-4,-9,1,2,-5,-10,-5,6,-3,6,8,5,-6,8,-7,-6,-7,9,-4,-9,-8,-6,1,-10,-8,10,-2,4,3,4,8,-10,-6,-4,-10,9,-1,-10,7,-1,-6,-1,-5,-6,8,10,-1,2,9,-10,-8,-6,6,-3,8,7,6,2,-2,2,10,7,-2,1,-4,10,-1,-3,4,9,-2,6,2,-1,-8,-4,7,-2,-10,-2,-3,8,-9,-1,7,-5,-6,-6,2,-5,-2,-1,-2,-8,5,9,-2,-3,6,-4,-4,3,-3,-8,-8,-5,2,9,-8,-6,-9,-2,2,2,9,-2,-8,-3,-5,3,-2,4,-2,-7,4,-3,10,3,-1,9,-10,3,7,-8,6,6,8,3,-4,2,6,10,3,8,-8,-5,10,-6,-5,9,-6,9,-6,-5,5,-10,-7,4,4,5,1,-10,-2,-7,-3,-8,3,4,-2,-2,8,-7,-4,4,-3,10,1,-4,-6,-9,9,-7,-7,-4,10,7,9,5,-4,-9,-10,-2,9,-5,7,6,-3,10,4,10,-1,-5,10,-2,-9,-1,2,-1,9,5,-9,-4,4,2,-8,-5,1,7,-8,-6,-2,7,2,4,-5,7,-10,8,-5,-3,5,1,-5,-9,-9,-1,4,6,9,9,-7,-10,9,10,-8,-8], dtype = "int8")#candidate|7945|(378,)|const|int8
call_7939 = relay.TupleGetItem(func_2759_call(relay.reshape(const_7940.astype('bool'), [1, 3, 5]), relay.reshape(const_7941.astype('bool'), [15, 3, 5]), relay.reshape(const_7942.astype('float64'), [234,]), relay.reshape(var_7943.astype('float32'), [1680, 1]), relay.reshape(const_7944.astype('float64'), [352,]), relay.reshape(const_7945.astype('int8'), [42, 9]), ), 7)
call_7946 = relay.TupleGetItem(func_2767_call(relay.reshape(const_7940.astype('bool'), [1, 3, 5]), relay.reshape(const_7941.astype('bool'), [15, 3, 5]), relay.reshape(const_7942.astype('float64'), [234,]), relay.reshape(var_7943.astype('float32'), [1680, 1]), relay.reshape(const_7944.astype('float64'), [352,]), relay.reshape(const_7945.astype('int8'), [42, 9]), ), 7)
func_6059_call = mod.get_global_var('func_6059')
func_6062_call = mutated_mod.get_global_var('func_6062')
var_7961 = relay.var("var_7961", dtype = "float64", shape = (210,))#candidate|7961|(210,)|var|float64
var_7962 = relay.var("var_7962", dtype = "int64", shape = (15, 45))#candidate|7962|(15, 45)|var|int64
call_7960 = relay.TupleGetItem(func_6059_call(relay.reshape(var_7961.astype('float64'), [3, 5, 14]), relay.reshape(var_7962.astype('int64'), [15, 45]), ), 1)
call_7963 = relay.TupleGetItem(func_6062_call(relay.reshape(var_7961.astype('float64'), [3, 5, 14]), relay.reshape(var_7962.astype('int64'), [15, 45]), ), 1)
output = relay.Tuple([bop_7932,call_7939,const_7940,const_7941,const_7942,var_7943,const_7944,const_7945,call_7960,var_7961,var_7962,])
output2 = relay.Tuple([bop_7932,call_7946,const_7940,const_7941,const_7942,var_7943,const_7944,const_7945,call_7963,var_7961,var_7962,])
func_7968 = relay.Function([var_7931,var_7943,var_7961,var_7962,], output)
mod['func_7968'] = func_7968
mod = relay.transform.InferType()(mod)
var_7969 = relay.var("var_7969", dtype = "float64", shape = (6, 11, 7))#candidate|7969|(6, 11, 7)|var|float64
var_7970 = relay.var("var_7970", dtype = "float32", shape = (1680,))#candidate|7970|(1680,)|var|float32
var_7971 = relay.var("var_7971", dtype = "float64", shape = (210,))#candidate|7971|(210,)|var|float64
var_7972 = relay.var("var_7972", dtype = "int64", shape = (15, 45))#candidate|7972|(15, 45)|var|int64
output = func_7968(var_7969,var_7970,var_7971,var_7972,)
func_7973 = relay.Function([var_7969,var_7970,var_7971,var_7972,], output)
mutated_mod['func_7973'] = func_7973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7848_call = mod.get_global_var('func_7848')
func_7849_call = mutated_mod.get_global_var('func_7849')
call_8078 = relay.TupleGetItem(func_7848_call(), 0)
call_8079 = relay.TupleGetItem(func_7849_call(), 0)
output = relay.Tuple([call_8078,])
output2 = relay.Tuple([call_8079,])
func_8092 = relay.Function([], output)
mod['func_8092'] = func_8092
mod = relay.transform.InferType()(mod)
output = func_8092()
func_8093 = relay.Function([], output)
mutated_mod['func_8093'] = func_8093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7048_call = mod.get_global_var('func_7048')
func_7050_call = mutated_mod.get_global_var('func_7050')
call_8118 = func_7048_call()
call_8119 = func_7048_call()
output = call_8118
output2 = call_8119
func_8125 = relay.Function([], output)
mod['func_8125'] = func_8125
mod = relay.transform.InferType()(mod)
output = func_8125()
func_8126 = relay.Function([], output)
mutated_mod['func_8126'] = func_8126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7048_call = mod.get_global_var('func_7048')
func_7050_call = mutated_mod.get_global_var('func_7050')
call_8151 = func_7048_call()
call_8152 = func_7048_call()
uop_8155 = relay.log2(call_8151.astype('float64')) # shape=(9, 9, 12)
uop_8157 = relay.log2(call_8152.astype('float64')) # shape=(9, 9, 12)
output = uop_8155
output2 = uop_8157
func_8161 = relay.Function([], output)
mod['func_8161'] = func_8161
mod = relay.transform.InferType()(mod)
output = func_8161()
func_8162 = relay.Function([], output)
mutated_mod['func_8162'] = func_8162
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8163 = relay.const([[[-8,-1,4,-6,-9,-3,1,1,-9,-4,-6,1,-10,-8,2,4],[-9,-7,-3,3,-5,10,-6,-8,9,-4,-2,9,-5,-4,3,9],[5,6,8,-1,-6,8,4,-5,-10,10,-5,6,3,8,-10,-9],[2,2,-7,-4,-5,-4,-8,4,9,10,2,-3,5,-3,8,-9],[-9,4,-7,-10,-9,-1,-3,-5,-8,6,2,-7,1,-2,-3,-3],[4,-2,-4,-3,-5,1,9,2,-4,9,8,-1,-9,-1,-3,-7],[-2,8,-9,2,-5,-6,1,-4,-6,9,1,4,4,-2,-10,6],[8,-1,-6,5,-5,6,8,-1,4,-8,-1,-7,-8,3,-10,3],[2,-8,-6,-10,5,9,7,-8,1,10,-10,8,-7,-7,10,8],[-3,-10,1,-10,-9,2,8,-9,-7,2,7,5,-10,5,-2,2],[9,-4,4,-9,-2,1,2,-10,2,-8,3,4,-6,3,-10,-3],[7,-1,1,7,4,3,9,-7,-7,-7,6,2,-10,2,-10,-1],[2,1,4,7,4,-4,-5,-4,-3,3,-2,-3,-1,-2,-10,7]],[[5,-5,6,8,4,-4,2,1,9,-7,8,5,7,-10,10,-8],[7,-5,5,-4,-5,8,-4,-3,5,-6,-3,2,-10,-4,-2,-5],[-6,-4,4,-10,4,-6,-8,-5,-10,6,4,3,2,2,10,7],[-10,6,6,-2,-5,3,7,8,9,-3,4,4,-3,-4,-6,8],[-9,-9,-2,7,7,-5,-6,-4,-7,-7,-2,8,9,-6,-10,-10],[-1,-4,-10,-4,-1,-3,-10,-1,5,7,-8,3,-5,-2,-5,6],[3,-3,-10,-2,-6,9,4,-2,-9,8,-3,7,-2,-5,-1,-5],[8,7,-4,3,4,7,-2,-10,-7,-8,-1,-8,-4,-2,-1,-1],[-6,1,9,-2,-3,-2,-8,-6,3,5,9,-9,-6,1,-7,-8],[-1,4,2,3,-5,-2,9,5,-4,-8,-6,9,7,9,10,-6],[10,-3,6,-10,4,1,2,7,-8,10,-3,6,-6,-5,-6,-1],[3,-9,-1,9,4,1,9,1,-7,3,-9,2,-6,6,-8,-8],[-1,9,7,1,7,7,-2,-5,-1,-8,5,-10,7,-3,-2,-7]],[[8,-7,3,4,10,7,-10,-10,9,3,-2,-5,8,-5,8,3],[7,9,-8,1,6,1,-8,-7,2,1,5,-2,-7,-1,-10,-1],[4,8,-4,-1,5,-6,-4,-2,-5,10,-2,-10,3,3,6,2],[-3,2,-9,10,7,-9,-1,9,7,-7,-4,-7,10,10,-2,-6],[3,6,2,-8,-4,-10,-9,4,-10,4,-9,3,-8,9,-7,9],[-4,-2,3,-5,-8,-3,-6,4,7,10,-8,9,-5,-8,-3,2],[3,4,-5,-2,-4,3,-3,7,-4,8,-9,-8,5,-9,-2,-6],[7,3,-10,9,2,-5,-7,-5,-9,-3,-1,-5,4,7,-4,-2],[-6,5,2,10,-3,8,-5,-3,7,-5,6,7,3,-9,-10,8],[-8,9,-8,-1,-2,-3,4,-5,3,-9,7,8,-3,-9,-7,-6],[1,-4,-2,9,4,5,9,8,10,-10,7,-9,6,1,4,-10],[-3,-5,9,-3,8,-2,-9,-1,-2,-6,-1,-9,-2,2,-8,-4],[-7,7,4,1,-9,-1,5,-5,-2,-6,-7,-4,5,-6,10,-5]],[[-8,-5,4,4,-10,2,-6,-2,10,-3,-3,6,5,-3,4,4],[-10,-4,-4,8,1,9,8,6,-1,7,-8,-4,-6,7,-2,-2],[9,-9,-2,9,8,3,-1,-6,-9,-8,7,-1,-8,-5,-9,-5],[2,-3,2,2,-2,-5,-3,7,3,1,7,3,10,8,-4,10],[-6,10,7,-7,6,-9,-3,1,2,-4,-3,4,4,3,-4,3],[7,9,7,10,6,-2,-8,4,4,10,-6,9,8,-9,-6,-4],[10,-7,-7,-10,-8,3,7,5,9,9,2,7,-1,-2,-3,-1],[10,-9,5,-4,-4,-9,6,2,-1,-3,10,-3,-8,-1,-3,-5],[-2,-2,6,10,-4,-10,-6,8,-5,2,-10,-8,2,-1,-2,8],[1,-1,-7,-8,3,-1,-2,6,-7,5,-3,-8,-2,10,5,10],[-1,4,3,6,10,2,-6,1,7,3,-9,-7,-9,-9,-8,-2],[-9,4,8,7,-9,10,-9,3,7,8,-6,-10,-3,-9,5,9],[-8,5,4,2,1,1,4,-6,7,-8,-2,-7,-5,-5,10,4]],[[8,3,-1,3,8,-2,7,3,3,-8,10,-9,4,7,9,-1],[3,8,1,-6,7,-3,-7,8,-10,6,-2,6,10,-1,9,7],[-9,5,-6,1,10,-8,10,6,2,1,6,3,5,8,-7,-5],[2,6,-3,-3,-9,-2,7,-1,2,5,3,6,2,-9,1,-5],[6,-10,6,-3,-4,-6,-3,-10,-10,2,2,1,-4,-3,6,9],[-9,10,2,-10,8,-7,-4,-5,3,10,-7,-1,1,7,2,-9],[5,-6,-1,-5,-6,-10,-1,-5,-2,4,-5,-2,9,-4,-5,3],[10,-9,8,2,6,4,-8,-4,5,-2,2,-7,-3,-3,-3,10],[-8,8,3,-1,3,8,4,2,1,10,-7,-6,5,9,-8,3],[8,-3,1,-1,7,6,1,-1,-1,6,5,8,-1,-9,-8,4],[-4,-8,-1,9,-8,9,2,-2,2,-1,-9,-8,8,1,2,1],[-4,-10,9,1,4,-9,-2,1,10,-1,-3,-1,-10,4,-10,9],[5,7,3,-3,9,-5,-2,7,8,-1,8,-9,-6,4,9,10]],[[-5,2,-8,-4,5,-10,-6,9,4,7,3,4,-1,5,-2,-8],[3,-4,4,-8,1,-6,-6,3,4,-3,7,6,6,2,8,4],[9,-4,9,-2,1,-9,4,6,3,-6,-9,-10,8,2,3,9],[7,7,-7,-8,8,5,9,-9,-3,5,-9,-6,9,5,5,6],[-7,-9,3,-3,5,2,-9,8,-7,-3,-10,-5,6,-2,4,-4],[2,-7,1,5,-8,-1,9,-1,2,5,5,-2,-2,4,2,-8],[1,1,-3,-1,-5,-10,-4,3,6,-10,9,-4,6,-6,-5,-5],[8,-2,4,4,6,4,-8,7,-4,-7,-7,-4,8,-1,4,3],[4,5,-9,-7,-6,6,-9,-7,8,-6,4,9,-1,7,8,9],[5,10,-6,10,8,-5,-9,-10,6,-3,9,2,-4,-7,-1,6],[4,-10,1,-2,6,-7,-10,3,6,-6,-9,5,1,10,10,-6],[10,-7,-7,-3,6,9,9,-4,9,-2,-10,4,10,-1,-7,-7],[4,9,2,-4,2,-6,5,-9,-10,3,-7,3,-10,-10,-5,6]],[[-10,1,-9,-2,-8,3,8,8,-1,2,-9,-5,-1,-7,-1,-6],[-10,-3,-1,9,3,5,-3,1,-7,4,-10,-4,-6,-7,-8,8],[-7,-6,-5,-10,-8,-10,-1,7,-6,1,-9,-6,9,-4,6,4],[4,-4,6,7,-10,-5,10,8,-10,-3,-7,8,2,-3,-3,-2],[9,-5,-1,-9,1,-3,-3,-8,-1,5,-2,3,4,-4,3,3],[-3,6,-1,6,-6,-3,-1,5,-4,9,-5,1,6,-6,1,-10],[-8,-10,-1,10,-7,-10,6,10,8,-5,2,10,-1,-9,-6,9],[-7,-4,5,-6,9,-3,-3,-6,-4,2,8,6,-10,2,-3,-1],[-9,-9,-9,7,2,6,4,-4,4,6,2,1,-4,8,-3,-8],[-4,-7,1,-4,5,-8,-9,-9,10,4,7,4,10,1,-2,6],[-5,10,8,-10,-1,3,-3,-4,-10,-7,-8,8,-4,1,-7,2],[1,-1,6,-1,-2,-9,-7,-9,5,-3,6,1,10,6,1,3],[-1,-1,6,4,-6,-2,-7,-1,-7,-5,6,5,-8,-5,-10,-2]],[[-1,-8,7,-4,4,-8,-6,-3,-3,-8,-4,3,7,-2,-6,-7],[-7,5,-8,7,-6,-3,3,-7,-6,-5,9,2,-6,4,9,1],[8,-10,-5,-8,-3,3,-9,-2,5,-5,5,-4,-2,-5,10,6],[1,4,-4,-5,3,3,-8,9,4,2,3,-4,-2,7,6,10],[1,1,4,2,-4,3,4,5,-8,-9,1,-8,-4,-5,-2,10],[-8,-1,-7,-2,-10,4,7,-3,-6,-7,-8,2,-4,6,3,-9],[7,3,-3,-6,2,-8,-9,5,5,-4,9,-9,-4,-8,9,6],[-7,1,-6,4,6,8,-3,3,-4,-3,3,-7,6,-4,3,2],[-10,10,9,5,-6,-5,7,8,-4,-6,6,-6,1,9,1,-5],[-6,1,1,-5,1,5,-7,-9,8,10,1,6,7,9,9,-10],[-1,4,-7,8,-8,-5,-7,-8,10,-9,-5,6,-10,-3,-8,-6],[4,-2,1,-8,-4,4,7,-8,-1,9,-2,1,9,3,-4,8],[-10,-8,2,-10,1,10,7,5,5,-5,9,8,-7,-7,1,1]],[[-8,2,5,6,7,3,4,-3,2,-5,-3,10,4,-3,5,-6],[-10,-2,-10,2,6,3,-5,-10,-4,9,8,7,7,8,-1,4],[5,-8,-6,-4,8,-4,-2,2,-9,-3,-10,-2,-8,10,9,1],[-2,10,-1,-4,-10,4,5,9,-6,-5,-3,-7,1,10,-3,-3],[2,-7,-8,4,1,1,3,-2,-2,-7,-5,-6,2,-6,7,-2],[-3,-1,-1,-8,-2,-8,10,-6,-6,9,-9,-8,1,8,5,4],[-10,-8,10,3,8,-9,-1,3,1,-1,-7,3,-4,5,-10,7],[3,-3,5,7,5,-2,-4,-6,-6,-7,-5,-2,-1,8,5,-3],[3,3,10,-1,-9,-3,-7,10,-5,8,-7,-1,-7,-10,-6,-1],[9,-9,8,-5,-3,10,9,-5,6,6,-6,-10,8,5,4,-7],[4,3,-3,8,9,8,-7,10,-8,7,-5,-9,8,9,2,5],[9,7,-6,-10,3,1,-2,-3,9,-6,-6,5,1,-4,-9,10],[-6,-2,1,5,1,-4,-7,3,7,-8,4,-7,-9,-7,-1,-6]]], dtype = "uint16")#candidate|8163|(9, 13, 16)|const|uint16
const_8164 = relay.const([[[7,4,-2,-9,3,6,5,9,-10,-9,-8,5,-3,-1,9,-3],[-5,-8,7,-6,9,2,-3,10,-1,10,-5,9,-1,-5,8,-9],[-6,-10,6,-1,-7,-1,-1,-8,1,2,-5,2,-3,-8,-6,2],[6,2,9,7,8,8,8,-2,4,-4,6,6,-4,10,1,-1],[5,9,9,-2,3,-6,6,1,-5,2,3,-3,-2,1,5,2],[-7,6,6,-5,-7,-1,1,4,9,7,4,10,-3,1,5,9],[-4,-10,-10,9,-5,2,-10,-2,-4,2,-1,6,-5,3,8,-2],[5,-3,4,-6,-10,-5,-7,-1,7,1,-6,-3,1,1,-6,-4],[-2,9,8,-8,-4,-1,1,-3,5,-8,8,2,-7,-9,-3,-7],[-9,-4,4,5,5,10,-8,-6,-5,-4,8,-2,-8,-2,-7,7],[-5,-3,4,-6,4,7,-9,4,9,-8,-3,-6,5,-1,6,8],[-2,-2,-9,-5,6,-4,7,10,-8,-5,-1,2,-10,8,-5,-7],[5,3,-8,8,2,-9,-2,5,7,10,4,4,9,7,-8,2]],[[6,9,6,9,9,-7,9,10,-5,-6,6,-10,-1,8,-5,-3],[6,6,9,-9,3,9,7,10,4,10,5,3,-1,7,3,-5],[-4,-10,6,3,-5,-5,-4,6,-10,-7,10,-3,3,5,4,7],[-2,-4,8,10,-10,8,10,3,4,-7,10,-3,1,-8,-7,6],[-2,8,6,3,-4,1,7,-6,-3,-3,-2,-3,2,10,6,1],[-6,10,-10,7,4,-10,3,-9,-8,7,-9,-6,4,2,-2,2],[3,-10,-2,7,-9,6,4,8,10,-5,-8,3,7,-5,-10,8],[8,-6,-7,8,-3,-9,2,10,-5,-4,-4,-6,-2,-9,-8,6],[7,8,-9,1,1,-9,-7,8,4,4,8,-8,-1,-5,-5,6],[-6,-7,1,5,6,-8,2,5,-9,-3,-9,9,1,-10,6,-8],[2,-7,3,-6,5,2,-9,3,-5,5,9,-3,-10,7,-9,-8],[2,4,7,-4,4,-10,-4,1,1,-3,-9,-1,7,5,-6,-9],[-8,4,4,8,8,1,10,1,-7,4,-9,5,4,4,-4,-6]],[[9,-8,10,1,3,-9,-3,6,7,7,4,3,-3,6,3,10],[6,5,5,3,9,2,-6,-3,10,-8,2,-2,10,2,4,5],[1,5,3,5,3,3,8,2,-6,2,-4,10,-6,9,-4,7],[2,3,-9,-9,-8,2,10,5,6,1,4,8,-4,10,-3,5],[-1,3,9,-4,6,-4,-2,10,6,10,3,-10,6,6,8,-5],[10,-1,-1,7,-1,-4,7,10,7,3,-9,8,-6,-7,6,5],[3,6,-9,3,-3,2,3,5,-4,-4,3,10,-6,4,-10,-9],[-5,9,9,3,-9,6,-6,5,-9,-3,-1,-2,2,1,6,-7],[7,4,-5,2,1,9,-8,7,3,10,5,-3,1,-10,-3,10],[10,8,1,3,-5,-1,-7,10,10,-4,-3,1,10,-3,-8,-3],[-4,-6,-8,-9,9,5,8,-6,5,-5,-6,4,-8,8,-9,4],[1,-10,-7,3,-9,-4,6,-7,-9,-1,9,-10,4,4,-1,9],[-8,-3,10,-5,-6,7,-6,-5,7,1,-3,2,10,-3,4,-7]],[[10,1,7,10,2,5,2,-4,-6,-4,7,6,-3,2,-10,-4],[-8,10,-9,-9,8,3,-2,10,4,-6,-1,10,-3,5,-9,4],[2,-3,6,3,5,-5,-3,-6,-10,-7,7,7,8,-5,-9,-6],[-5,-1,10,7,10,-2,-7,-1,1,8,-5,-9,-4,-2,3,3],[7,-9,2,4,-9,6,-7,5,-4,7,7,-2,2,6,-2,-3],[5,-7,9,-8,8,-6,-2,4,-3,5,6,-1,-9,-4,-5,9],[-1,8,8,10,-1,-2,7,-9,6,8,-1,-2,7,-1,-3,6],[-9,-7,10,6,4,-6,-5,-1,1,2,-10,2,10,-4,8,-10],[2,-7,-3,-8,2,-9,-1,7,-10,3,5,9,-1,-2,-1,-5],[8,-9,-4,9,1,2,-8,3,9,-8,-3,2,2,-4,-6,7],[-2,6,-1,1,-5,-3,5,-1,-4,-1,-7,-3,-8,-1,-8,10],[-7,4,-3,10,-2,-3,1,-1,4,-3,6,-2,-5,-9,-3,10],[5,-8,3,-10,-10,-1,-8,7,-4,-5,-8,-5,9,-5,2,2]],[[3,8,7,10,3,-10,6,3,8,2,-4,-1,10,-5,3,-2],[7,-10,-9,4,4,3,9,-1,3,-5,10,-9,-1,-7,-4,-9],[-2,-7,-3,-5,5,8,3,3,3,-4,-3,7,9,-6,-4,8],[-8,-7,6,-8,7,4,-5,7,-6,-5,5,-1,-8,1,-4,6],[-4,2,4,-2,6,-2,-5,-3,1,8,-1,-2,7,-1,-10,2],[-1,-5,-4,5,-3,5,5,8,7,3,6,9,7,-4,-6,-1],[3,-9,3,1,10,-1,-3,4,-5,-9,10,-4,-7,-4,-7,1],[2,-8,-5,-8,-4,-1,-10,-8,2,7,7,-7,-2,-9,-7,-8],[10,4,5,-10,3,-6,8,9,3,-10,-9,-5,1,9,-4,-6],[3,8,2,-8,3,7,10,-1,-1,-5,1,1,-4,9,7,2],[5,-1,10,-1,3,-4,3,-6,-8,5,1,-3,-8,4,-8,-9],[-6,4,-8,-9,-3,4,10,-10,-10,-2,-3,-5,5,-10,6,10],[10,8,-8,-8,1,5,-1,2,2,-2,6,7,9,-8,7,-4]],[[1,4,8,10,-4,-1,-2,4,-6,10,-6,-5,6,-7,-1,-9],[-3,-4,5,-10,-1,-3,3,-8,6,1,4,-4,-9,-3,-3,5],[-5,7,-2,-10,8,-5,-1,-10,-8,-8,10,3,2,-2,-8,1],[5,-3,4,8,-7,3,-6,4,7,-6,-3,-6,7,-1,4,-8],[9,6,5,7,6,9,-4,-6,6,-8,5,3,2,4,-6,-7],[-6,-8,4,2,-7,4,7,-4,5,9,8,9,7,-7,8,6],[4,4,1,-2,10,-2,7,7,10,10,-9,7,4,9,-8,5],[-10,2,6,2,9,2,-9,-5,-6,-6,-6,3,9,-4,-8,10],[2,1,-3,6,8,7,-9,-8,-9,-2,-1,7,-10,8,-1,-5],[-8,1,-3,5,-4,-9,-7,8,5,-1,8,6,-8,-5,3,-2],[-8,4,9,-3,6,-6,10,8,-5,-2,8,10,-4,-5,-4,-8],[9,4,-5,-2,10,3,1,5,-2,-10,7,-6,-4,-8,9,3],[-9,-7,5,-5,-7,-2,10,6,-6,-10,-6,-4,9,-1,9,6]],[[10,-2,3,7,-6,8,-10,-5,1,-9,-4,-1,6,-3,5,-3],[-5,9,4,7,9,-5,-10,-5,-8,1,-1,8,4,2,-1,4],[4,3,1,8,-5,-9,3,-7,-10,4,-9,-7,-4,-2,-6,10],[-2,-7,-2,3,10,-2,5,6,8,-5,4,1,2,2,2,9],[-4,-6,-3,-6,2,6,7,-3,3,3,-9,-3,10,3,7,5],[-8,10,2,4,5,-1,1,-9,-1,2,-7,-3,2,8,-7,3],[-5,-7,-10,-3,1,9,-8,-8,3,1,7,-8,9,10,-8,-1],[7,-10,-1,6,-6,5,3,5,5,7,-9,3,-10,5,-8,-1],[-6,-6,5,-10,6,7,1,7,-7,10,-7,7,7,-5,10,-4],[8,-5,1,-4,-1,6,2,-7,-8,-6,-1,-2,6,-7,-5,3],[10,-4,3,8,8,5,-9,-8,1,-4,8,-5,5,-1,1,-2],[3,-2,4,2,5,-4,2,-1,-8,5,1,10,-2,-6,4,5],[-6,6,6,3,-5,-6,-9,-10,-4,-2,-7,-2,-5,3,6,7]],[[-5,-1,-10,2,9,4,7,-4,-1,7,-3,6,-5,5,6,-3],[-6,-2,9,4,6,-8,10,-5,2,-10,8,1,4,7,2,1],[-6,-6,10,7,-8,8,-8,-10,2,-7,3,-6,-6,8,-4,-7],[3,7,3,-9,8,-8,8,-9,7,5,-4,8,-3,-1,9,-7],[-1,-6,-6,-7,2,-3,3,-5,7,-10,-8,-2,-9,9,-1,10],[3,-8,3,-5,3,7,7,-6,-1,-7,9,1,-2,-3,9,7],[-1,2,2,-9,5,-1,-8,-9,5,8,-3,3,-1,10,-2,-3],[4,5,3,1,9,-10,-10,6,3,1,-4,3,1,-7,-10,5],[4,-2,-5,-4,-4,3,-3,1,-4,-4,-7,6,-10,-2,-1,-6],[7,3,2,6,2,-2,-10,-1,-5,5,-1,1,-3,-4,10,-1],[-2,8,-2,10,6,6,-4,2,-1,-3,-9,-6,9,-9,1,-5],[4,7,-10,9,6,3,4,1,-2,8,1,4,-3,9,4,-9],[9,-4,10,8,1,-7,-7,-10,3,10,3,3,10,-2,-10,-1]],[[-6,10,10,-3,9,8,8,-5,-8,-6,1,-9,-3,-3,1,-4],[3,-2,-1,-6,4,-6,-1,-5,8,-2,-3,9,-9,1,-10,-8],[8,-8,4,3,9,2,10,3,-1,6,3,3,2,5,-10,7],[-10,9,10,-1,1,10,-3,1,7,9,5,-5,8,8,-10,6],[-9,-5,-6,9,2,-1,4,10,-9,3,-2,10,-6,-6,3,-10],[8,5,-4,3,6,4,6,-3,-2,7,-3,-4,7,-9,3,-5],[7,-6,4,10,3,-2,-5,-2,-1,10,7,-5,5,5,5,10],[-1,4,4,-7,-5,4,6,-6,-6,-1,2,9,1,-7,5,-10],[-4,4,-6,6,2,1,7,-6,-6,8,-4,9,-3,4,4,4],[8,-7,-9,-4,-3,10,4,5,-3,-10,-1,4,5,-2,4,8],[-4,-6,8,-3,-7,-2,-8,-1,-1,-8,9,-6,2,5,4,7],[8,10,-3,6,-7,-1,7,-4,4,-1,-5,-1,-7,-4,8,8],[5,2,2,-10,-6,3,-6,10,-10,4,1,2,-2,6,8,-7]]], dtype = "uint16")#candidate|8164|(9, 13, 16)|const|uint16
bop_8165 = relay.maximum(const_8163.astype('uint16'), relay.reshape(const_8164.astype('uint16'), relay.shape_of(const_8163))) # shape=(9, 13, 16)
func_7362_call = mod.get_global_var('func_7362')
func_7365_call = mutated_mod.get_global_var('func_7365')
var_8174 = relay.var("var_8174", dtype = "float64", shape = (1920,))#candidate|8174|(1920,)|var|float64
call_8173 = relay.TupleGetItem(func_7362_call(relay.reshape(var_8174.astype('float64'), [16, 15, 8]), relay.reshape(var_8174.astype('float64'), [16, 15, 8]), ), 1)
call_8175 = relay.TupleGetItem(func_7365_call(relay.reshape(var_8174.astype('float64'), [16, 15, 8]), relay.reshape(var_8174.astype('float64'), [16, 15, 8]), ), 1)
func_6830_call = mod.get_global_var('func_6830')
func_6832_call = mutated_mod.get_global_var('func_6832')
call_8188 = func_6830_call()
call_8189 = func_6830_call()
uop_8193 = relay.erf(bop_8165.astype('float64')) # shape=(9, 13, 16)
output = relay.Tuple([call_8173,var_8174,call_8188,uop_8193,])
output2 = relay.Tuple([call_8175,var_8174,call_8189,uop_8193,])
func_8199 = relay.Function([var_8174,], output)
mod['func_8199'] = func_8199
mod = relay.transform.InferType()(mod)
var_8200 = relay.var("var_8200", dtype = "float64", shape = (1920,))#candidate|8200|(1920,)|var|float64
output = func_8199(var_8200)
func_8201 = relay.Function([var_8200], output)
mutated_mod['func_8201'] = func_8201
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8327 = relay.var("var_8327", dtype = "float64", shape = (9, 8, 16))#candidate|8327|(9, 8, 16)|var|float64
uop_8328 = relay.asinh(var_8327.astype('float64')) # shape=(9, 8, 16)
func_6871_call = mod.get_global_var('func_6871')
func_6874_call = mutated_mod.get_global_var('func_6874')
const_8338 = relay.const(3, dtype = "int8")#candidate|8338|()|const|int8
call_8337 = relay.TupleGetItem(func_6871_call(relay.reshape(const_8338.astype('int8'), [])), 4)
call_8339 = relay.TupleGetItem(func_6874_call(relay.reshape(const_8338.astype('int8'), [])), 4)
output = relay.Tuple([uop_8328,call_8337,const_8338,])
output2 = relay.Tuple([uop_8328,call_8339,const_8338,])
func_8340 = relay.Function([var_8327,], output)
mod['func_8340'] = func_8340
mod = relay.transform.InferType()(mod)
var_8341 = relay.var("var_8341", dtype = "float64", shape = (9, 8, 16))#candidate|8341|(9, 8, 16)|var|float64
output = func_8340(var_8341)
func_8342 = relay.Function([var_8341], output)
mutated_mod['func_8342'] = func_8342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8092_call = mod.get_global_var('func_8092')
func_8093_call = mutated_mod.get_global_var('func_8093')
call_8354 = relay.TupleGetItem(func_8092_call(), 0)
call_8355 = relay.TupleGetItem(func_8093_call(), 0)
output = relay.Tuple([call_8354,])
output2 = relay.Tuple([call_8355,])
func_8361 = relay.Function([], output)
mod['func_8361'] = func_8361
mod = relay.transform.InferType()(mod)
mutated_mod['func_8361'] = func_8361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8361_call = mutated_mod.get_global_var('func_8361')
call_8362 = func_8361_call()
output = call_8362
func_8363 = relay.Function([], output)
mutated_mod['func_8363'] = func_8363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7048_call = mod.get_global_var('func_7048')
func_7050_call = mutated_mod.get_global_var('func_7050')
call_8390 = func_7048_call()
call_8391 = func_7048_call()
output = relay.Tuple([call_8390,])
output2 = relay.Tuple([call_8391,])
func_8401 = relay.Function([], output)
mod['func_8401'] = func_8401
mod = relay.transform.InferType()(mod)
output = func_8401()
func_8402 = relay.Function([], output)
mutated_mod['func_8402'] = func_8402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8161_call = mod.get_global_var('func_8161')
func_8162_call = mutated_mod.get_global_var('func_8162')
call_8487 = func_8161_call()
call_8488 = func_8161_call()
func_4326_call = mod.get_global_var('func_4326')
func_4329_call = mutated_mod.get_global_var('func_4329')
const_8492 = relay.const([[9.823838,0.147604,9.785000,3.416047,2.372938,-6.547102,7.110065,-0.270669,-3.315687,8.193394,5.708975,-3.480362,-7.462573,4.949691,-0.433039,-3.384791,7.276731,-8.609063,2.401658,2.877702,6.513651,-3.693653,4.000852,-4.560272,4.575580,7.378709,9.333959,-9.135293,9.809023,-1.893515,9.996328,6.245589,-9.277166,-6.594720,-5.592742,-8.294883,5.995006,-2.438360,9.706672,-9.938372,-1.136234,8.662922,-1.444794,-6.515961,1.800433,4.498374,3.956669,-9.525668,-5.903322,-2.597925,-9.125585,-5.572905,4.206675,-1.828174,-7.464111,7.404234,-8.234648,-2.488098,-3.116099,5.440232,7.614861,5.711431,6.657960,-0.790132,-7.719021,-7.113258,8.959460,-3.927795,2.638112,-5.188851,4.258423,7.312941,-5.217716,-0.538546,-4.300105,4.575058,-8.339010,-3.309406,-7.603209,-3.108489,7.993727,3.550622,6.974692,-2.502461,-0.535713,-7.567406,-5.502426,1.526212,2.968320,-1.806662,5.100478,7.566903,-6.785487,-6.738139,-5.004638,8.986007,2.833034,2.782142,-7.072291,-5.096443,-2.741680,-6.164900,-7.766698,8.187122,-7.641425,1.559592,1.671819,0.694981,-9.864034,-1.902711,-4.453725,7.525684,-8.925343,3.927630,-1.094651,8.760867,-2.025707,8.581576,-4.524614,0.530217,-5.296722,-7.372953,4.008706,8.001985,2.484790,4.000431,7.127418,-8.792469,1.630315,-1.293737,7.164301,-6.916593,-9.603686,-0.411900,-6.394468,8.480346,-6.427380,7.718315,5.979044,4.309023,-0.218325,0.487283,5.287979,-5.144466,8.014987,-0.206541,-3.067465,-9.661524,8.996214,7.038575,-7.147223,-6.329166,3.855862,3.434908,6.203480,4.016905,7.350612,1.231821,-3.384052,6.713636,8.612856,-6.753984,-2.804303,-4.013888,4.814638,6.359159,-6.023180,-4.975182,1.074880,-7.038410,3.491327,7.991389,-2.377121,4.417088,-6.765001,-5.655361,5.672212,6.137481,-8.460055,1.581830,-5.549512,2.317570,-4.038096,-9.476986,3.916633,-4.164222,-7.770764,7.313453,6.879820,-0.929677,5.051467,1.419048,4.880873,-4.272409,-2.018706,-7.364933,7.885578,3.873172,9.094007,3.053923,-1.568830,7.599410,3.524451,-6.391791,-7.788204,-5.613275,4.800788,-2.651798,6.321766,-4.008456,-9.934989,-4.208278,6.171360,8.037406,2.046696,8.712130,7.647583,-8.362923,-6.980572,4.012985,1.810028,-7.964140,8.987731,-1.749406,-0.333083,-4.309201,3.471110,-9.577898,-4.351142,9.714017,-6.170393,9.946146,-0.325868,9.561796,-4.864710,4.497384,-3.869645,2.656410,-5.241635,-9.530223,-9.492807,2.280702,9.279705,-8.906923,4.602087,3.577244,2.838986,5.086712,6.349199,-8.857906,7.346366,4.149625,8.526759,6.139681,-3.818280,-1.863983,-2.015462,-7.213379,7.043984,6.832046,5.529400,3.168251,-6.856822,-9.868724,6.199915,1.048589,-4.887806,-2.828808,4.515951,2.639680,-1.075344,1.960217,2.504622,-2.204254,-5.813065,6.418984,9.598022,-6.278085,-6.580602,4.885469,4.343042,-1.438722,3.368055,-1.462914,0.535173,2.330837,5.569419,-3.668638,-5.760996,-8.581519,0.629632,-2.018732,-6.794106,-5.453940,7.962356,-7.237428,-9.782066,-4.760048,2.407047,3.931233,-4.414887,-2.425512,9.016525,-0.314106,-9.980189,-6.865682,1.896377,-1.998829,-0.717867,-6.749695,-4.085204,-1.633951,5.658543,-6.673649,6.574954,1.442254,-8.620582,-2.379291,1.476347,-9.500468,9.876472,1.006580,4.773023,-3.254426,-8.846713,-9.947275,7.807963,2.037812,1.345131,6.739684,1.906091,6.073013,2.757567,3.045271,-4.471129,-1.719263,1.685313,-0.329905,6.742538,-8.317296,3.565687,-5.193914,0.884872,-4.181000,2.892918,-0.835266,-7.170972,0.997913,0.424215,-7.470131,-3.467067,9.009104,-7.191804,-4.935920,-2.212883,0.940776,2.693006,-7.553668,-0.837892,-0.929038,-9.124556,-1.700015,-6.285477,-2.257394,1.029993,0.939690,0.686602,0.958272,9.333345,4.659779,-1.048427,7.305033,-4.397262,-9.647047,-9.365026,8.429948,1.814534,-1.709069,2.567740,4.190351,1.171445,-8.403526,5.398937,5.610702,4.527613,-0.155623,2.202730,-9.094754,0.104658,-0.650727,2.699507,8.653153,-2.784814,-4.860706,-0.086880,-7.056008,-7.031279,0.883563,-7.886034,-7.226482,9.553252,7.938212,2.786073,3.764645,-5.258061,-3.644247,9.476291,1.577940,4.112283,2.666458,0.684554,-6.324734,-2.124772,-5.261393,-2.208338,-0.841184,8.841351,-6.160031,1.610732,-7.858831,-5.844692,7.323814,-9.247136,3.809853,-3.451116,5.849531,-5.110028,-6.750951,2.267772,7.011091,1.449509,-3.985534,3.277651,1.299823,-1.235183,-3.995787,4.083362,-1.501645,-9.132981,9.285621,-0.377640,0.718613,-4.491407,0.091547,-1.824104,7.056573,-4.332183,-5.715339,8.938299,8.599693,8.605154,-3.855726,5.843614,-4.803190,-3.326384,6.119727,4.908441,7.775686,-8.150171,2.158545,1.697475,-2.481616,-9.767362,2.451741,3.408072,9.594946,-2.351450,4.274303,-1.535113,-8.930560,9.475075,5.182642,-2.220922,9.774679,5.173442,4.820914,6.372020,8.706482,-2.097911,2.340000,6.122787,2.012100,-8.137052,9.077905,-4.689562,4.406302,2.792098,-1.992787,3.695789,-6.573058,8.256869,9.514432,-5.927828,-6.044597,2.591576,-8.028722,8.698894,6.582523,-7.625634,-4.059259,-9.463758,-2.937442,4.167492,2.238637,-5.180576,6.580996,0.151609,1.019174,5.687726,-6.490197,8.162417,7.676600,-5.920751,0.176395,-7.548718,-1.307062,3.717587,-5.886541,2.531052,-7.137009,-6.944519,6.072174,-2.631897,8.456684,3.500003,5.583470,-0.699966,2.334136,4.381221,4.714958,-7.114329,-4.570438,-5.018750,-4.236922,-2.203968,-6.055333,4.381869,-5.145306,-9.552253,7.986490,1.260160,-7.696591,-3.968917,2.185916,-9.954045,8.865105,-6.993961,2.308158,-0.398187,-7.218436,-8.550537,4.673066,5.590315,1.151514,0.636019,4.856544,3.023361,-6.895118,7.038685,3.935030,-0.273508,-6.278201,-3.404447,-7.561033,-9.784237,6.435515,0.446386,-5.506090,-0.956503,-5.448374,-7.172151,0.751948,2.026908,5.529154,0.197597,2.267359,2.205360,-0.337961,2.403532,3.280122,8.476087,-6.838330,8.736622,0.305537,-4.630274,-7.445672,9.047356,9.857661,8.800379,8.012581,8.561086,5.847772,0.469901,2.675690,-1.732846,-1.280838,0.361502,-3.655699,7.373657,3.013841,1.619669,-4.873181,1.333011,1.577013,8.905423,0.868382,2.873141,4.978359,-2.400814,2.341760,0.993097,-3.304836,-5.557708,-0.559043,8.553921,-1.444147,1.425012,5.018113,-0.430746,7.055971,-0.221016,-6.063168,0.857174,-2.330874,-8.163045,-1.421967,5.099600,0.974202,5.148458,3.928086,8.825346,0.048532,-5.108718,0.949042,-7.683148,-2.394473,3.669006,-5.706464,1.952780,-8.260741,6.268483,7.311631,8.929625,-2.373438,-7.861483,0.058506,6.741427,-3.281516,-5.513323,-1.137072,2.365902,0.338142,-1.890886,0.631226,-9.231414,6.163740,8.987416,-0.227424,0.418614,6.549591,-6.705203,8.942214,-1.212678,4.939595,1.998498,2.811164,2.089386,4.235233,-8.491146,1.681501,-1.591265,-4.419049,5.396312,4.051250,-2.257792,3.138553,5.853973,-0.134558,-7.820886,-4.602821,-0.856726,-9.679691,-9.822984,7.949266,5.624442,6.640247,6.483574,8.700805,-1.790627,-5.646352,4.964688,5.986086,-1.590761,-7.968797,-9.830744,8.047599,-1.093779,-7.378994,3.114548,-0.118352,-0.613840,8.920461,9.081024,-4.366074,1.716679,-1.599171,-4.444328,4.550473,-8.692180,-5.368756,4.967210,1.011797,4.774333,-7.920515,5.702827,0.030804,5.321017,7.742628,3.553918,-0.469893,-9.690924,-0.204728,5.302966,-9.923390,8.003930,-1.318258,-1.676217,1.572525,1.003592,-3.727643,-0.947957,-2.096939,-8.093586,-4.801676,4.071572,-7.551935,-0.619578,6.255235,0.769640,3.985403,-9.425758,1.005660,2.391657,-5.462867,-2.006453,7.647672,1.455846,-5.255298,5.683146,9.154778,-9.847028,6.247888,-5.662925,-4.427614,-7.201144,4.298353,6.216285,1.799577,2.220131,3.428993,-7.279950,-7.744734,-4.285516,-3.412658,0.864108,-6.701556,5.626896,-2.061900,-9.900724,8.217038,-3.834882,8.180866,4.988542,-4.807962,9.729000,3.104773,-0.706425,6.677030,-1.055321,2.710850,8.847449,2.879799,6.409310,9.732669,-2.421783,-4.972805,7.257263,-2.094596,-7.601386,4.203317,-9.445489,9.376312,-6.649489,3.071895,-8.289044,-9.856231,2.246644,5.214904,-6.239363,-0.021083,5.053137,6.526369,5.341232,-8.827081,1.712057,8.513933,-7.249967,-6.373175,8.238699,1.947760,-4.917495,3.616275,-7.332061,-5.388421,7.592791,0.233432,3.996489,2.860033,9.259068,-5.649713,4.023866,-3.863419,4.450787,-7.146099,8.377918,-0.070866,-2.769668,5.749837,-1.923060,0.790597,-9.598996,8.252526,5.476598,-8.931555,-6.497113,3.728532,-3.622791,9.490655,8.107764,-5.317456,4.872635,-1.664265,7.296747,-1.717703,-8.101079,2.027451,6.960494,-1.459964,-9.196819,0.739215,-8.718326,-7.080178,-7.699821,-7.477186,-8.901299,-9.351027,4.753044,1.630827,-5.920714,3.393234,7.229090,-6.786592,9.404354,8.205542,8.555389,-5.011182,-7.970379,6.951667,-2.978685,-3.716253,-4.482792,-9.934955,8.936006,-8.993649,-7.801726,-5.266625,9.976979,-1.438439,-2.847443,-0.608570,-9.821060,2.358795,0.542822,6.925533,-2.969784,-5.140793,0.198113,-3.670518,-1.095910,-1.093931,-3.411901,-0.007188,4.309249,-3.288900,8.493775,-0.592583,6.945958,-4.318575,-6.213023,-8.253002,3.843889,0.265039,-5.014257,2.463961,2.700471,4.134849,1.321030,3.799347,-2.375796,-5.890334,-6.078847,8.448670,-9.662802,-6.418815,0.067523,4.636667,-8.420963,0.243014,-6.724033,6.093041,4.986794,-2.274976,9.546196,1.296242,6.795298,2.136325,-0.323990,-3.751957,-1.383029,5.021248,6.431513,-7.977949,-0.357696,-3.199125,-5.840245,-8.942040,-3.306979,-3.984210,-6.867287,9.379363,8.759232,4.299335,5.637739,-7.273136,-2.772122,-1.476813,-4.599137,2.884956,-1.578365,-3.601551,-7.733350,-1.968456,9.041909,-6.089337,2.529683,4.675188,-1.378871,-4.372567,-0.701525,4.537015,0.691604,1.467652,-2.236499,-0.712304,-3.311425,8.814579,5.975792,-6.725035,8.669005,-3.033865,-6.639933,7.921984,-7.863864,5.681117,0.807774,9.423025,-8.963863,-6.142773,-9.958279,4.385269,3.711029,8.300800,9.425691,2.641450,-3.429919,1.173435,-2.068575,4.992546,-1.403051,9.204095,6.909587,-0.876173,2.757597,-0.845659,5.252030,5.337082,-4.604168,7.676310,-4.448321,-9.120162,-0.085579,4.435871,6.407303,0.804364,7.832597,0.129246,-8.286569,-1.701818,-0.717620,0.005335,8.126411,2.623912,2.573859,1.196703,6.577080,-3.679029,8.873891,-9.183462,-8.686369,-1.518142,5.636438,-5.609466,-9.919980,9.777325,6.260636,-2.996865,9.025824,-1.659353,4.632861,-7.992268,-9.399287,-7.279816,7.629658,-3.261502,3.452859,0.471574,-1.897900,-4.399251,6.182159,1.790763,-4.127100,0.728888,2.506537,-1.644851,8.807671,-0.521705,0.104955,5.394076,4.554660,-8.734541,-8.363364,1.975804,9.188724,7.732093,-9.652965,2.280547,0.729108,-7.374718,-5.753279,7.489374,-3.505389,1.179233,-9.318283,-0.585862,-0.497653,-0.491765,-1.545217,1.047582,6.582138,-5.068511,-7.498614,-4.527364,-9.377567,-7.166835,0.308897,-4.143359,7.886586,9.751907,-3.868961,-7.234659,-5.249317,-4.629094,-0.432601,-2.030017,-3.467125,5.485344,-4.807234,-8.534007,4.056263,-5.287530,-9.995282,-2.017955,-6.378248,-7.480527,0.733025,-6.865726,6.010083,-2.778827,-2.057424,-7.681589,-2.647042,2.592761,1.982584,4.871978,7.218453,-9.540941,9.002358,4.652477,-3.924972,-8.229040,-5.934849,-6.845362,5.281887,-9.162631,7.915356,3.293830,-5.984111,1.528406,-1.721976,-0.749499,-7.445037,-4.989410,2.079666,3.296047,9.135594,9.698348,-4.316683,1.343895,3.852790,-9.769820,-9.768475,-8.350676,-4.627920,7.856467,-2.900748,-9.719354,-6.589502,-3.512843,2.373593,2.208022,-6.297375,-2.073327,-3.683108,-8.073640,4.011434,9.287799,-3.525868,7.393893,4.528971,-2.197534,-7.806602,-1.945054,7.077302,8.625242,-9.228142,2.865888,9.254059,-6.567739,4.549202,1.090587,4.985782,5.478178,-6.648714,-0.197417,3.143779,-3.339679,-4.810401,-1.980236,1.652369,-9.879788,-0.993585,-7.511679,8.155704,-3.132289,-2.152167,-5.624713,-5.037561,9.823332,-4.965005,-6.005870,-8.735416,6.212357,7.089615,-1.483419,9.141366,-8.790062,-4.146393,-6.096432,8.884555,7.633507,-6.037809,9.491306,9.187871,-1.589311,9.642280,5.214207,7.784190,-2.728505,-1.502041,3.313841,6.874246,4.804783,8.858447,0.131292,-5.960457,-8.972061,-7.450084,1.281042,-6.044588,7.405248,-8.880791,-4.947794,-0.581341,-7.480246,3.674344,-1.062293,-5.549096,5.733719,6.361479,-5.399945,3.932678,5.384608,6.010618,3.790315,-1.485928,7.768400,7.786208,-0.675377,-2.701829,-4.582051,-2.349194,-9.789272,-1.652850,-8.277290,-4.209103,-0.014995,3.683125,-6.727420,-0.171984,7.264919,-4.089738,-5.921010,-7.112501,7.886199,2.538896,-7.186887,2.029248,-1.714374,-5.430931,2.197288,-6.182926,-8.296902,1.034550,-0.375685,-4.388460,-3.481652,-4.920291,-8.276598,2.596858,8.761531,1.764927,9.745529,-6.235693,0.328759,-9.746354,5.480880,-3.294277,0.544882,-5.516189,0.734077,4.675057,-1.405415,-2.958604,-8.380333,-4.516620,4.257416,3.471411,-5.881173,-2.109870,5.839018,5.798719,5.048191,-8.492491,6.512573,-7.323875,-9.165754,7.387859,0.861570,1.543203,7.655929,3.173324,-3.058071,3.156756,-4.026016,-6.036731,9.334874,8.467731,4.688443,9.421207,-2.506359,5.157316,9.590844,4.699485,8.961311,-4.991846,9.318809,5.621668,-9.483029,-7.335582,-3.122602,-4.386033,-2.549681,7.589934,-7.552314,1.786438,-0.699604,6.456541,1.910823,3.310302,4.028091,9.410485,2.222807,-6.554220,-7.871347,5.014632,1.187862,-7.916093,7.178087,4.144896,-8.791388,-9.517162,-2.044891,-2.081925,7.982163,-0.992831,1.669187,0.930358,-0.193611,-0.719280,-7.956172,1.162311,-0.628415,-1.062860,0.672821,8.719858,-2.632755,1.063648,6.231714,-4.324631,6.316994,2.597504,-7.581960,9.318272,7.551130,4.112277,3.794954,1.872588,-8.446026,0.808269,-3.351001,8.468950,1.233115,7.714890,-5.482923,8.548295,-0.262997,-8.333821,1.420103,6.450436,-3.877950,-4.005771,7.237338,9.322730,6.970931,-3.748890,6.970499,-5.984733,-2.179381,1.928980,9.945907,-4.120850,5.607086,2.782271,-6.038057,6.787265,5.256556,9.090363,-0.869852,1.635623,5.690504,6.197069,2.749535,4.440855,3.991207,9.367240,1.366677,-2.354537,-1.835744,5.902967,-7.139081,5.896089,2.412404,-8.103210,1.018470,0.589986,6.629332,7.691950,7.789812,-6.779732,5.963666,1.824001,4.003794,-9.586580,4.889271,2.653670,-9.726054,-2.391475,0.916662,4.826704,-3.513272,8.828930,9.527169,-8.938575,-9.275993,5.769405,-8.839460,-2.067005,-4.718178,-6.349711,8.112190,1.841484,-7.084597,5.395318,8.737986,1.994947,1.027517,4.364877,5.624193,4.342817,6.678551,-7.248829,-0.392243,4.829947,0.151149,-9.392332,1.068548,-2.096046,2.230614,6.374241,2.975590,-7.277515,-3.889193,5.277420,-5.661260,2.693718,-5.209855,1.184072,-8.515222,3.672584,-5.405814,-0.898455,-2.874455,-3.145428,-1.618148,-7.273912,-2.540255,9.243678,-0.632307,-0.846756,6.198059,-2.354289,5.372686,-3.540009,1.485192,6.327413,-9.897305,6.781416,4.319438,-4.205385,-7.383466,0.246711,-4.841506,9.667303,4.845166,4.062245,8.390573,-0.458372,8.429317,-1.864297,1.310812,7.250198,-4.230224,-8.136875,-3.693917,3.908614,0.717262,5.877890,4.112167,-3.666108,-2.351763,-5.361304,-0.238592,1.136940,9.549171,-6.646230,2.234241,-6.513537,-7.261147,7.763677,-8.393965,9.077006,3.172339,0.008113,5.858406,-5.741490,3.662934,6.767091,6.275755,6.522188,0.057815,5.160000,1.849927,-8.655594,-7.661687,-6.383872,-9.038355,-5.725426,-2.610753,3.829820,-8.945739,-3.723394,-3.064429,1.571819,-8.507883,-8.952321,-9.681895,-4.867834,-6.105663,0.998420,1.496128,9.280056,-7.981352,4.664944,6.579401,-4.906443,-2.551018,0.308535,0.707522,9.181000,8.150973,4.904053,8.685288,-2.284086,-5.251341,7.696271,7.674164,6.483599,-2.212880,8.339419,0.530014,5.088103,-3.631838,-4.398816,9.822427,7.107136,-8.156663,-0.449198,-4.102398,5.872405,4.958173,-8.712229,9.718340,-2.749944,6.708993,8.157001,1.694879,-2.424783,1.400195,0.644989,-9.926142,1.218212,1.423772,6.781154,-2.628773,-1.694525,5.927267,7.576867,9.088335,-6.005936,2.816745,0.086844,0.912832,-0.812760,2.082919,1.861781,-4.327092,-9.169875,0.312006,8.893840,-3.275366,0.784088,9.085230,-9.580363,-7.108084,2.494725,-7.575308,-8.765518,-0.151530,-9.804106,6.427498,-9.141794,-9.104158,2.819895,-3.486559,-3.175827,2.611272,-6.263264,-0.590301,5.176621,6.055362,-7.022734,6.169368,9.273506,2.425082,1.556526,-5.104848,-3.417778,-7.297564,-2.891627,-5.447068,2.422436,-4.683463,-3.448272,-9.526954,4.250761,-3.101178,8.556886,-5.320888,-4.221269,-8.819443,-7.767257,5.667201,-1.250278,1.249241,-2.718601,5.775640,3.587148,8.312937,-8.151356,3.383809,9.296320,9.252652,2.106364,-9.895505,4.768936,-2.962573,9.090521,-7.469948,1.517753,-4.073269,4.942479,-3.704337,7.973552,8.976738,8.136112,0.222648,-2.117820,-8.005096,-0.554871,5.720954,7.772432,-2.426831,6.116981,-4.534105,-7.247763,-8.340826,-5.902355,-0.704883,-6.793859,4.888382,-7.786930,2.267100,1.374977,-9.815663,-8.958095,1.743941,5.570062,-8.998911,-6.231624,-4.951822,9.162989,8.953665,5.190047,8.499415,3.522906,5.190662,9.583232,-5.265662,-3.076601,-8.311280,5.165206,4.819122,2.904644,4.362202,-4.842091,-8.158931,6.006529,-2.755027,9.870857,-0.767365,-0.807691,-9.818852,-8.928612,8.698622,-2.988762,8.797379,7.029117,-1.487129,-5.834586,5.210523,2.730859,-9.750463,8.956646,0.698950,-5.416444,3.236711,-9.658448,-3.154339,-5.967106,1.199480,-5.571411,-2.582817,9.624069,-8.024123,6.876539,6.546673,-6.130044,1.760799,-4.519538,-5.245702,-4.543585,1.570867,-1.410376,-2.561544,0.099759,1.055839,-5.250582,-3.256559,-3.462243,-5.421811,-7.969454,6.419406,1.626728,-3.886805,0.367222,3.395267,-7.776650,-7.561706,-3.639639,1.662298,8.521099,4.772925,6.279046,1.164871,6.466607,9.403861,6.571455,-7.728791,8.903513,-9.403488,9.804169,-6.601538,5.761535,-0.636541,9.667231,6.913653,-2.025162,6.734092,-7.585679,-3.725871,-7.867055,2.924046,-9.869118,-6.153838,-8.953489,-3.537850,-6.228578,2.456918,-0.820374,-9.179802,-6.304769,-4.060704,-1.774354,-4.569157,-7.280071,-0.829933,-2.438642,7.356521,9.342976,-0.457900,-0.524310,-2.263131,6.913339,-9.779886,4.176848,-0.609938,2.015836,5.304512,-9.729705,-1.395967,-8.269114,9.720744,3.308925,5.060000,-9.698382,-4.945730,-3.056664,-7.442252,2.063392,8.333086,5.787203,-1.390081,-2.768803,-4.136751,2.660723,-8.904033,-8.323847,-0.930756,-6.436458,-3.409256,8.194529,0.402082,5.729994,0.901067,8.441371,-5.213572,-0.372172,8.183052,-0.289059,0.937813,-4.213640,5.704523,7.498911,-6.672188,6.709720,6.740910,-2.468422,-8.989677]], dtype = "float32")#candidate|8492|(1, 1848)|const|float32
call_8491 = relay.TupleGetItem(func_4326_call(relay.reshape(const_8492.astype('float32'), [14, 11, 12])), 0)
call_8493 = relay.TupleGetItem(func_4329_call(relay.reshape(const_8492.astype('float32'), [14, 11, 12])), 0)
output = relay.Tuple([call_8487,call_8491,const_8492,])
output2 = relay.Tuple([call_8488,call_8493,const_8492,])
func_8500 = relay.Function([], output)
mod['func_8500'] = func_8500
mod = relay.transform.InferType()(mod)
mutated_mod['func_8500'] = func_8500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8500_call = mutated_mod.get_global_var('func_8500')
call_8501 = func_8500_call()
output = call_8501
func_8502 = relay.Function([], output)
mutated_mod['func_8502'] = func_8502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7880_call = mod.get_global_var('func_7880')
func_7882_call = mutated_mod.get_global_var('func_7882')
call_8509 = relay.TupleGetItem(func_7880_call(), 0)
call_8510 = relay.TupleGetItem(func_7882_call(), 0)
output = relay.Tuple([call_8509,])
output2 = relay.Tuple([call_8510,])
func_8538 = relay.Function([], output)
mod['func_8538'] = func_8538
mod = relay.transform.InferType()(mod)
mutated_mod['func_8538'] = func_8538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8538_call = mutated_mod.get_global_var('func_8538')
call_8539 = func_8538_call()
output = call_8539
func_8540 = relay.Function([], output)
mutated_mod['func_8540'] = func_8540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7818_call = mod.get_global_var('func_7818')
func_7820_call = mutated_mod.get_global_var('func_7820')
call_8541 = func_7818_call()
call_8542 = func_7818_call()
output = call_8541
output2 = call_8542
func_8545 = relay.Function([], output)
mod['func_8545'] = func_8545
mod = relay.transform.InferType()(mod)
output = func_8545()
func_8546 = relay.Function([], output)
mutated_mod['func_8546'] = func_8546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8401_call = mod.get_global_var('func_8401')
func_8402_call = mutated_mod.get_global_var('func_8402')
call_8590 = relay.TupleGetItem(func_8401_call(), 0)
call_8591 = relay.TupleGetItem(func_8402_call(), 0)
func_8500_call = mod.get_global_var('func_8500')
func_8502_call = mutated_mod.get_global_var('func_8502')
call_8611 = relay.TupleGetItem(func_8500_call(), 0)
call_8612 = relay.TupleGetItem(func_8502_call(), 0)
output = relay.Tuple([call_8590,call_8611,])
output2 = relay.Tuple([call_8591,call_8612,])
func_8614 = relay.Function([], output)
mod['func_8614'] = func_8614
mod = relay.transform.InferType()(mod)
output = func_8614()
func_8615 = relay.Function([], output)
mutated_mod['func_8615'] = func_8615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6891_call = mod.get_global_var('func_6891')
func_6892_call = mutated_mod.get_global_var('func_6892')
call_8656 = func_6891_call()
call_8657 = func_6891_call()
func_6891_call = mod.get_global_var('func_6891')
func_6892_call = mutated_mod.get_global_var('func_6892')
call_8659 = func_6891_call()
call_8660 = func_6891_call()
output = relay.Tuple([call_8656,call_8659,])
output2 = relay.Tuple([call_8657,call_8660,])
func_8663 = relay.Function([], output)
mod['func_8663'] = func_8663
mod = relay.transform.InferType()(mod)
mutated_mod['func_8663'] = func_8663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8663_call = mutated_mod.get_global_var('func_8663')
call_8664 = func_8663_call()
output = call_8664
func_8665 = relay.Function([], output)
mutated_mod['func_8665'] = func_8665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8161_call = mod.get_global_var('func_8161')
func_8162_call = mutated_mod.get_global_var('func_8162')
call_8676 = func_8161_call()
call_8677 = func_8161_call()
var_8680 = relay.var("var_8680", dtype = "float64", shape = (9, 9, 12))#candidate|8680|(9, 9, 12)|var|float64
bop_8681 = relay.logical_xor(call_8676.astype('uint32'), relay.reshape(var_8680.astype('uint32'), relay.shape_of(call_8676))) # shape=(9, 9, 12)
bop_8684 = relay.logical_xor(call_8677.astype('uint32'), relay.reshape(var_8680.astype('uint32'), relay.shape_of(call_8677))) # shape=(9, 9, 12)
output = bop_8681
output2 = bop_8684
func_8686 = relay.Function([var_8680,], output)
mod['func_8686'] = func_8686
mod = relay.transform.InferType()(mod)
var_8687 = relay.var("var_8687", dtype = "float64", shape = (9, 9, 12))#candidate|8687|(9, 9, 12)|var|float64
output = func_8686(var_8687)
func_8688 = relay.Function([var_8687], output)
mutated_mod['func_8688'] = func_8688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8663_call = mod.get_global_var('func_8663')
func_8665_call = mutated_mod.get_global_var('func_8665')
call_8718 = relay.TupleGetItem(func_8663_call(), 1)
call_8719 = relay.TupleGetItem(func_8665_call(), 1)
output = relay.Tuple([call_8718,])
output2 = relay.Tuple([call_8719,])
func_8721 = relay.Function([], output)
mod['func_8721'] = func_8721
mod = relay.transform.InferType()(mod)
mutated_mod['func_8721'] = func_8721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8721_call = mutated_mod.get_global_var('func_8721')
call_8722 = func_8721_call()
output = call_8722
func_8723 = relay.Function([], output)
mutated_mod['func_8723'] = func_8723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6807_call = mod.get_global_var('func_6807')
func_6808_call = mutated_mod.get_global_var('func_6808')
call_8778 = func_6807_call()
call_8779 = func_6807_call()
func_7472_call = mod.get_global_var('func_7472')
func_7476_call = mutated_mod.get_global_var('func_7476')
const_8784 = relay.const(1.203236, dtype = "float64")#candidate|8784|()|const|float64
const_8785 = relay.const([[-6.159292,7.785058,6.873755,-6.340164,1.206177,1.176932],[4.651688,-9.005359,-7.324024,9.570253,3.473666,-6.794916],[-3.936182,-1.207375,-0.612548,-1.520933,4.762578,-5.328677],[4.480971,-1.750457,8.715117,1.309808,3.657099,7.652615],[9.546367,0.816028,8.782150,-4.016453,2.111265,8.243670],[3.170675,-7.247087,2.167272,-6.561993,1.935531,2.922138],[-7.149287,-9.201950,-8.442754,-0.497916,-0.151384,-0.015456],[2.226040,2.831611,-2.147698,3.591686,-9.045924,-1.955121],[-6.129327,7.715168,-8.323824,-8.704182,2.079810,-4.719307],[-1.970987,5.747392,-9.945628,2.902403,-1.825641,0.804736],[7.547093,8.690083,-6.908254,6.652453,-9.219100,1.484724],[1.515244,4.992634,-1.143214,3.981402,-3.399021,7.466532],[-6.531558,3.415795,5.707352,5.392907,8.215379,5.743692],[5.123675,-6.114345,8.542334,-0.426235,-7.766786,5.103253],[9.773435,6.342175,8.250539,6.932329,3.980364,7.753287],[8.546228,9.430703,2.205486,-1.723951,8.184107,-1.551051],[-6.033695,-4.098900,-4.443377,6.148481,-9.464078,-9.208579],[7.286033,1.208045,-9.183515,-2.730593,-0.240082,-0.735965],[-4.681401,-7.931174,5.248363,-8.313412,8.825746,-4.652314],[-1.173336,8.449860,7.565169,-5.865857,5.058423,4.947100],[-4.934456,5.762806,-9.494481,-8.841867,5.240896,-5.164640],[6.774389,-3.280357,4.066447,3.305860,3.500641,-3.053619],[-4.137782,4.427962,7.196536,0.631213,-8.562946,-0.531566],[-8.300167,4.451729,4.499017,-5.246972,-9.590029,3.817934],[-9.429038,7.723940,7.154346,-6.935369,0.300266,-4.043549],[-3.409569,-7.528375,-4.403364,4.659885,-0.890604,-6.940320],[5.628582,-4.229308,-3.322330,5.245922,-4.329288,-8.118622],[5.237458,5.976595,-3.335729,1.429492,4.847412,-8.172911],[-5.749648,-1.455108,-1.892871,-8.402027,-9.567695,-9.660026],[-9.680568,3.529729,-4.779291,-6.780048,-2.108993,-8.710774],[9.482582,2.365519,-3.816393,5.254156,-6.256903,7.951156],[-9.792785,-1.737169,-2.967512,5.773695,-1.509763,-4.474917],[-9.572772,-0.454773,-3.501518,-7.988321,-0.674845,6.068475],[7.094572,1.159959,-9.418974,-3.694934,-6.735704,9.680696],[9.990774,1.290761,7.374394,2.989811,2.679146,-4.187107],[-8.517927,1.187767,5.826558,3.156153,9.772307,-5.224495],[5.918054,2.363388,2.180222,3.743997,8.178868,-9.543293],[-7.251368,1.155558,-2.361253,4.268190,-0.645883,0.351657],[0.912476,-9.931516,-3.097086,9.778850,7.877911,6.204755],[6.612813,-9.937410,-5.578183,-2.814167,-9.866287,-7.445878],[5.767970,8.187999,-7.195032,8.418273,-9.968418,4.044442],[-7.503178,-8.904277,8.442087,-2.799386,-4.342803,9.278849],[-0.444003,3.631771,8.011900,4.007775,-0.752267,-2.907685],[9.603777,-0.911408,2.674777,-9.300605,-1.538674,-4.656549],[3.484740,3.510594,9.160408,-0.695043,-2.739430,-0.356021],[7.499256,-0.713492,-7.549699,-3.290400,7.413174,7.193027],[-7.309626,-7.447112,8.685123,-0.488392,-9.143001,-1.317840],[0.528509,3.185283,4.922594,7.917394,8.118532,-5.739121],[4.832120,6.700825,4.922127,8.114941,3.063364,2.645957],[-2.111787,5.273581,2.635979,-0.803501,-1.995300,-4.177863],[4.770284,-1.971263,8.867653,0.247712,4.812937,6.764876],[0.760510,6.758346,8.347643,0.671206,-5.459745,-9.763107],[0.982670,-2.072497,-4.424274,0.521554,0.776627,-3.800044],[-1.158849,1.661779,-2.231283,-0.830065,6.419920,-2.756028],[-5.592147,6.528500,-0.039687,-0.353006,-8.951487,9.862368],[2.254915,3.202799,-0.817898,-5.879281,0.977561,4.316235],[-0.868881,9.545087,0.520925,-1.029734,-0.643270,-2.554309],[7.404454,-5.640336,-7.021447,-7.638494,-3.414815,-8.553785],[5.844402,2.260319,-3.928378,6.555134,-5.580840,-1.031574],[-2.331386,-7.533751,-8.612100,-6.254424,1.005835,-8.285675],[-3.164027,-6.305566,-7.922687,-3.309413,4.623457,-5.412607],[-5.096214,-8.786190,-6.224255,-2.892335,-8.905789,9.262728],[9.629777,-8.838868,-1.946567,-5.577331,-9.655009,6.087492],[9.435335,-4.005816,4.784990,-4.090037,-3.028424,8.225088],[-3.345301,-0.375008,-6.889175,1.219660,1.650205,-1.842439],[-6.817689,-9.146166,2.839023,2.846856,6.680736,5.645703],[-9.710960,-1.625051,8.622345,-3.126180,0.152469,-5.772643],[-5.330650,-5.732362,3.551942,-6.267109,8.874506,-9.124188],[-6.475264,-6.370564,-4.205576,9.270942,3.180766,6.453227],[7.908432,-2.155055,-0.706308,-2.348349,5.877083,-1.570227],[7.029031,-6.033155,-3.327080,-8.531915,4.788225,-7.013010],[-6.405466,-0.287271,-1.659618,-3.414464,7.778089,-1.401444],[6.012593,3.937191,1.252175,-0.301863,-8.137371,-4.467666],[6.987261,9.493627,5.339088,-9.695184,0.730670,8.966586],[2.978576,5.362555,8.384679,-1.281075,-0.299166,1.694869],[-3.889896,3.758636,-3.442566,0.248813,-8.032558,-2.817939],[-9.612486,5.318864,-4.980508,2.221514,5.438571,-7.431930],[5.838087,6.961771,-1.913895,8.466019,-9.582633,4.888807]], dtype = "float64")#candidate|8785|(78, 6)|const|float64
call_8783 = relay.TupleGetItem(func_7472_call(relay.reshape(const_8784.astype('float64'), []), relay.reshape(const_8785.astype('float64'), [468,]), ), 1)
call_8786 = relay.TupleGetItem(func_7476_call(relay.reshape(const_8784.astype('float64'), []), relay.reshape(const_8785.astype('float64'), [468,]), ), 1)
output = relay.Tuple([call_8778,call_8783,const_8784,const_8785,])
output2 = relay.Tuple([call_8779,call_8786,const_8784,const_8785,])
func_8796 = relay.Function([], output)
mod['func_8796'] = func_8796
mod = relay.transform.InferType()(mod)
output = func_8796()
func_8797 = relay.Function([], output)
mutated_mod['func_8797'] = func_8797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8401_call = mod.get_global_var('func_8401')
func_8402_call = mutated_mod.get_global_var('func_8402')
call_8804 = relay.TupleGetItem(func_8401_call(), 0)
call_8805 = relay.TupleGetItem(func_8402_call(), 0)
output = call_8804
output2 = call_8805
func_8817 = relay.Function([], output)
mod['func_8817'] = func_8817
mod = relay.transform.InferType()(mod)
output = func_8817()
func_8818 = relay.Function([], output)
mutated_mod['func_8818'] = func_8818
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8868 = relay.var("var_8868", dtype = "float32", shape = ())#candidate|8868|()|var|float32
const_8869 = relay.const([[[-5.728956,3.993145,0.796813,2.527465,-4.663515,-3.696580,-0.667992,7.874458,-3.812948,-5.911478,8.321896,4.984531,0.639158,-9.644707,-3.337000],[-6.727067,8.495208,7.475031,-7.693159,-3.107937,-8.797396,8.542408,-4.012633,7.521228,-2.244808,9.969629,8.775884,0.849457,-9.536425,8.069246],[0.057224,8.022507,4.342894,-8.691406,0.454347,-7.028764,4.476233,0.850764,-0.600282,6.285807,-3.494892,-6.280393,8.873469,-0.996003,0.575687],[-6.627720,4.728700,3.974389,9.964766,-4.468805,9.440493,-0.020027,-0.806635,-5.494372,7.992167,3.938661,-2.302279,9.677681,1.430474,6.541499],[1.818100,-7.472182,-0.923028,-9.601078,0.333532,-6.581177,4.652742,4.881344,-1.033006,2.351255,8.985398,1.604307,-1.348993,9.443969,-0.441068],[3.589347,0.263428,-3.848057,4.347714,6.674838,6.840357,7.294065,-2.868600,7.849539,-2.051118,-3.352546,3.536877,-5.720915,-0.515887,-6.588697],[-6.086233,8.994901,7.021078,4.868244,-0.326360,4.063778,8.228227,-0.053008,7.283349,-1.918304,-4.931097,-8.243435,7.216315,-1.244678,-9.414756],[-8.378587,-9.899935,-0.475381,-5.234743,-8.034155,-8.767412,-2.157665,6.052673,-4.777464,-5.937201,-1.293635,0.220198,0.381319,0.446635,2.950451],[-3.201149,0.064571,6.011838,-9.145536,3.183993,-2.717537,-6.746487,9.878286,6.624327,-5.712033,8.603640,0.195320,3.253442,0.982429,-6.600320],[5.660943,-8.644437,8.360764,-4.910356,2.718210,-1.328130,-7.375130,3.584164,-6.599158,4.699556,-1.733556,-6.222021,5.002321,-3.018906,-3.035998],[3.672457,7.715104,-0.592482,1.878404,-9.741659,0.711529,-8.969885,3.502207,6.785890,8.387545,0.676774,5.127949,2.258777,7.180729,1.191294],[-6.259342,4.253736,7.672489,-4.089508,3.185898,6.744402,3.329503,-7.346349,4.978476,6.809096,-7.863546,7.945018,-4.881047,-0.225760,-0.983092],[5.994844,5.515091,8.425693,9.742759,2.400383,-3.565711,5.554066,2.420864,9.532305,6.064353,5.112231,3.586946,-8.239443,3.295456,2.764823],[-7.923759,-6.314875,-1.110120,-7.866322,1.025693,-5.870563,4.670252,3.983400,7.966107,5.489232,2.159248,-1.399325,3.034671,-3.243264,1.590280],[9.355886,5.647508,7.858763,5.574759,2.815334,-4.563192,-9.977059,1.306765,-7.563015,-6.439242,7.443931,-0.650820,-7.190449,-7.938270,-0.948301]],[[6.096995,-1.770137,6.084927,-4.700412,6.943798,7.154583,5.988083,2.587342,2.145484,4.172116,-9.169369,-3.635188,-5.280245,-6.627880,1.228970],[-8.146454,-8.775338,1.156529,1.844693,-0.193844,6.018933,-0.262743,-3.577087,5.630991,1.603905,2.204859,-6.553549,-6.719026,8.438054,8.467145],[3.889973,8.056250,-1.323622,4.593753,-6.578353,6.007395,0.193832,-6.593372,5.207978,4.542303,-3.438760,-9.080948,-0.824316,9.260189,-8.970261],[4.966047,-7.394317,0.963247,9.639035,-0.259332,7.924181,-9.975183,7.997853,-9.478603,-3.234809,4.091459,-5.627862,7.127978,-3.298189,-3.172124],[-6.038217,-5.328737,-0.593717,4.642410,-0.963630,8.860067,9.614940,-0.783068,-2.614413,-0.255159,9.486986,4.235301,2.892271,-0.919669,3.840716],[-9.028735,-8.517339,7.875701,4.077285,2.309251,-1.473208,5.518560,-0.699724,8.085387,-3.883898,0.381143,7.251312,7.233385,-2.813007,0.969692],[0.744232,4.274454,-3.022865,-3.212922,0.738812,-4.942511,3.036679,-5.012218,0.866295,-9.149210,3.571895,9.759932,0.078556,2.590969,1.274377],[1.974793,9.110980,-2.863962,6.262244,8.425564,-2.193884,6.410387,0.360135,7.084954,6.136144,-5.049092,-6.641064,5.953875,-0.594025,8.246692],[2.378891,-6.324415,1.739018,9.325467,-7.224027,5.674340,-3.586522,-9.823175,-4.386394,-7.780276,3.151446,-3.352183,8.493633,5.799692,8.744418],[0.176950,-1.604729,2.021605,-7.890476,-6.629474,1.918094,-6.176885,-9.841750,5.302805,-9.506961,-5.656365,-9.246874,1.345408,1.964906,9.459922],[8.295982,4.656514,0.319564,1.214340,6.851935,-7.661386,-5.887210,-3.587785,1.129452,2.299368,-4.676300,1.167907,4.119021,-4.026917,-1.319707],[7.804172,-3.452220,4.537989,5.606713,7.793904,-0.648295,7.173359,-7.331126,-7.533289,7.071273,-6.151681,1.720072,-4.539956,-3.255096,1.482880],[-4.162358,2.005219,-7.747176,-4.957081,3.416116,-9.781907,7.244021,-3.706536,-8.180689,9.238565,3.597791,9.225127,-0.007059,7.954372,-9.216364],[1.488056,4.856192,1.035990,5.075501,9.799688,0.589699,-9.541562,1.314038,2.922543,9.238437,8.004812,-4.848273,-8.414705,-7.420104,9.778280],[-9.768203,5.842358,2.007531,5.858707,7.393337,-0.273592,7.063138,6.008984,6.388994,-2.693838,-7.913285,2.062422,-0.198987,2.727897,1.291828]],[[9.784463,5.381893,9.363407,2.702752,0.301201,4.777384,8.984604,-5.053726,9.209412,6.310868,3.094635,2.510363,-4.493743,-7.550127,-1.120747],[2.730904,4.155515,0.697663,3.519307,-2.209103,1.886544,-7.568498,-6.011032,0.974673,8.309813,6.411401,-9.894896,1.988494,-2.542580,-9.394920],[-0.821450,-4.089047,-1.470606,-1.050956,-5.437674,-0.140396,1.218336,-3.595953,-7.537147,3.318948,5.647435,-4.783742,-3.929858,-0.854431,3.472591],[6.434132,-5.705766,8.054092,0.110877,1.880913,-7.399057,6.095882,-0.940936,3.257583,-3.570431,-9.828726,6.722495,1.418081,4.530362,-9.272779],[4.516024,-0.131163,2.736273,-7.570226,1.799413,-4.301122,-6.878064,6.495732,-9.018386,3.931277,-4.674493,-2.827770,-7.986086,7.282649,6.998578],[-1.055117,2.095047,9.918048,-0.450933,-8.195719,4.124177,-6.897589,-0.375542,-2.909624,-2.482055,1.651596,-9.224682,2.385978,-8.361227,-9.077447],[-9.461698,-0.827655,8.973034,7.761027,2.292918,7.768301,-2.361502,-9.786551,-4.349128,0.246695,-5.712096,9.917402,-2.432704,3.913717,9.938742],[2.421997,-1.861609,6.226356,2.599566,-8.390753,-6.868759,4.292362,2.660515,-8.759941,-8.508165,-0.216536,-0.889046,8.838366,-1.116794,0.509252],[-6.013185,-3.489623,-7.607996,-9.679486,-9.719714,1.122125,1.728902,7.394661,-8.250458,-6.794683,-2.804877,-1.612735,-8.963174,1.273407,-9.889185],[-1.413543,2.790825,-3.735946,-8.585143,2.841327,3.435756,-2.421729,0.081881,6.924964,9.922536,8.404434,-8.305106,-8.832794,4.592012,-0.158745],[8.225558,5.599668,2.024171,-8.151158,-6.267068,-2.088169,-3.755999,-8.413888,-6.870440,-1.994895,7.437578,3.290422,8.070058,-4.052753,-8.268793],[-1.848584,3.524448,-1.680692,4.925589,4.866541,7.273807,2.140783,-2.142659,4.342939,3.439883,-1.172314,7.089497,4.829907,3.830781,-3.008283],[-3.912822,4.669362,-9.662784,-1.913908,6.410287,8.509585,8.815417,-6.741581,2.059936,-7.213484,4.988905,4.028910,3.733442,8.844657,2.457181],[-8.521368,1.764977,1.065169,9.184507,7.973036,9.924452,5.897622,-8.789870,-6.622009,-5.508532,-1.329358,3.755548,-2.955679,-1.551432,-6.110466],[3.152915,5.310106,-3.846967,-8.253933,-8.965351,-9.058394,8.217107,-5.011175,-2.609589,9.995573,-6.736720,-2.424261,5.590633,-3.599607,1.250176]],[[7.197998,7.998656,6.945404,-9.262825,8.532111,3.244079,-4.053321,-0.310716,-5.069107,-3.006432,2.536963,-9.211507,-4.879280,-4.554087,6.147066],[2.493161,3.717862,-7.654035,4.924766,-7.541319,1.561322,-4.424123,-9.347888,1.943388,7.387621,-5.717060,-3.594686,4.914421,8.054801,6.713854],[8.406543,5.986588,9.757267,4.624865,-7.340963,9.373955,5.288111,-9.353172,-7.292805,3.961902,1.392980,-8.458027,-8.681415,-4.524950,-3.047892],[-8.948394,7.360299,-1.947539,3.368277,5.261902,1.938824,-4.078213,-5.330794,1.614630,-6.255744,9.198478,-9.044785,0.575585,0.448747,-5.733269],[7.930720,8.630500,0.348543,4.130775,7.174444,-3.797937,3.990459,3.997071,1.059774,1.104906,1.328548,5.928955,-9.283208,-7.717226,2.053254],[8.073033,-4.655473,5.218435,-0.766812,-5.932494,6.819465,8.976689,3.238487,-9.988553,9.936726,-9.085794,-5.336238,-0.953132,-6.426064,-4.490233],[-5.145074,-3.678767,-6.091665,-0.120976,-4.409997,-3.381677,1.320453,9.490030,5.288763,-8.696412,4.882974,8.059087,-5.498434,-2.722786,3.172267],[-5.404101,1.560911,-0.549150,-8.718929,-2.619286,8.985172,-0.640642,-5.774734,-3.534889,-4.666560,-4.072157,4.544403,8.257195,-3.967133,3.416321],[3.543652,7.862504,-5.467745,-9.704790,-2.138059,-0.283419,-1.824720,-3.457218,-8.804893,-2.313823,3.409069,-0.660941,-9.985570,2.685257,4.521406],[-3.396760,-6.986065,1.253886,5.882233,-6.678589,8.723106,-6.688787,7.493950,-7.063972,5.467037,-3.135320,-2.135593,3.731843,4.171661,9.382687],[7.728417,5.589597,7.558318,3.820058,-7.344492,-6.057180,-1.096766,0.077386,8.947283,3.240237,-9.271451,-0.027802,-7.632575,-0.078746,-9.858417],[-4.458422,4.755234,4.518230,9.689256,-0.990102,-1.089655,9.527111,7.375049,0.178776,-8.348793,9.112794,-6.620847,0.140467,6.043377,-4.136247],[8.889390,-2.704809,-0.523076,8.442647,-6.314906,-1.932602,-8.730718,1.085063,-1.122771,3.042247,9.758711,-6.520319,-4.209043,-2.890192,4.206983],[1.977528,0.858095,9.827463,0.982879,5.404151,-0.491505,5.061849,8.237609,-6.066208,4.109431,9.229698,-6.045118,-5.824439,0.998932,1.106354],[-5.517334,-6.613296,-6.747403,9.415129,-5.788698,5.747307,-0.388191,-8.687904,6.356267,-8.129577,-4.998268,2.074320,9.614900,7.518522,-3.230543]],[[1.393083,1.675411,-9.686235,1.725207,6.916026,4.161072,6.691211,8.503609,8.958287,-3.245656,7.288986,4.302828,-2.494732,3.400576,-8.187121],[-8.503130,-9.245814,0.966959,5.123173,-6.346314,-2.850664,4.003840,-5.153637,4.878611,0.928955,9.153621,-8.787634,1.820919,6.045273,-5.779692],[-5.499364,8.761273,-5.901398,7.748656,8.274946,5.599254,2.310921,4.326414,9.061467,-5.328653,5.589080,-1.606315,-2.784320,-6.544254,-7.490951],[5.236129,0.217041,8.391240,5.496024,6.717127,-6.870050,8.211163,8.887531,8.201897,2.824575,9.666837,6.683583,1.650240,2.570086,3.858087],[-2.143610,-6.392803,0.493373,-7.068459,-6.464287,-3.837833,-3.291428,8.554261,-0.359015,-5.787962,-0.942547,-3.953781,3.331717,0.694344,9.740867],[-2.461386,-4.362854,5.870836,-6.234685,-7.174696,6.696138,-1.798848,-7.785061,5.534461,-6.984082,3.474364,0.420106,6.259349,3.569900,6.736422],[4.443046,-9.092460,-2.443771,-8.484823,1.871753,-0.069870,1.397812,-5.384358,-8.846704,-7.781093,-9.321437,7.938796,-5.474066,-8.962561,3.735990],[-9.323126,-0.021505,-2.949060,1.059774,8.344791,-4.997864,1.284101,-9.654499,0.723575,-4.910137,-3.821881,7.284889,-4.475598,-3.489577,6.946217],[7.767609,-7.365388,6.196330,-9.817210,9.236969,6.406349,0.517646,8.624906,7.259925,-2.779457,6.722375,-7.332290,-6.103560,-7.791380,1.892790],[2.484650,1.442101,-8.872719,-6.385532,5.228291,6.209940,7.234525,-7.997064,-3.630975,-7.567085,4.459574,7.296207,-4.812211,-2.570927,-8.480457],[1.810266,-4.228753,-3.144439,6.470263,-2.044717,-8.111417,6.484006,-9.255550,8.992846,4.585985,-0.278152,6.422120,-8.236356,8.041612,-8.240464],[8.655522,9.006626,-9.039100,-4.481513,1.227384,3.057864,-2.184690,1.606207,-6.162018,-7.612379,-2.229837,-2.197975,-4.269244,-3.671588,8.014819],[-7.042796,-2.644630,6.166513,8.229842,-8.911793,-9.544304,-2.277315,-8.984743,9.766724,-8.395508,7.843067,-5.962763,-5.375481,-2.186854,7.964184],[1.447411,-5.231997,7.402147,6.790076,-9.474005,3.981870,8.455104,0.730980,-0.295472,-5.347155,-0.654525,9.667866,8.487657,-6.981586,-6.393245],[5.321573,6.745278,9.708775,3.512202,8.927120,-2.838827,-2.245863,-6.097073,-4.783189,0.047721,-8.195669,-5.977564,-0.422784,5.979000,9.350292]],[[-3.825863,-4.178075,4.382991,6.751919,-2.816844,-4.424441,6.117649,-4.939592,-4.131702,-0.112082,9.474036,-5.389766,9.282111,2.500771,9.480374],[-8.820360,1.200255,9.372415,0.978190,-0.918737,8.003608,-6.180318,0.189509,-9.376666,0.246765,5.002136,5.845447,-9.610590,4.743853,-4.762449],[5.160843,-6.053155,6.628709,1.979604,-4.425715,-6.558172,-9.128039,0.195050,9.741283,3.568374,-4.390911,8.978481,-4.432358,-0.747034,9.019392],[-4.265075,-7.163378,5.799802,-0.242234,-3.681522,-4.093154,-1.663595,0.633046,6.525294,-6.846041,-9.422852,4.402029,-7.098918,9.106310,4.102896],[2.841830,5.625958,0.680274,0.809930,9.921461,-2.916989,-2.571874,-3.919369,-0.512854,-2.551416,3.251123,-5.550326,-8.028658,-4.220783,1.004057],[-7.416711,-5.969111,-3.368305,5.252342,2.303641,3.599469,-2.836481,5.417779,-1.743466,-8.724313,-4.582577,7.849609,2.894891,4.243421,9.336178],[0.004921,-5.928389,-5.298611,3.969945,-6.154708,-3.050731,9.732147,-4.795606,-4.480371,-8.059209,4.634811,-8.400770,6.212946,7.273101,1.095515],[-0.482485,-0.659907,-0.260599,2.102281,-2.294450,6.716924,-5.575249,-2.558213,9.098769,2.145728,8.545503,-3.780660,2.472321,7.143458,-4.899893],[1.694192,-0.411134,5.869490,-6.761045,-2.715538,6.792142,-7.233284,-5.953281,-5.426782,6.210790,-5.852326,-5.420637,-9.316796,-8.630391,-7.419763],[-6.130576,4.186652,-4.228544,-4.836247,-6.644407,4.144788,-7.987781,7.935591,-7.106559,-3.348645,5.208807,5.932280,7.323371,5.529448,0.017063],[-0.297714,6.540576,-1.736044,9.791768,4.760959,-1.216185,5.186893,-4.010259,1.806934,-1.658679,-8.251159,-3.186892,4.265600,3.739693,-9.871888],[4.272207,-5.381591,-0.888672,-2.329107,5.457484,7.204456,-6.817097,-9.104175,4.139023,-3.968821,6.326975,0.716430,-2.478888,8.610440,9.176552],[-8.897503,8.096422,-3.168069,-7.709642,0.450287,-6.866122,8.147661,7.933190,4.916766,8.274167,-2.822175,-4.598303,8.348895,-6.826583,-3.239080],[-6.187719,-0.207670,9.948803,2.943890,2.003376,-2.926916,-5.589941,2.484590,7.551556,-1.544354,-0.800221,-8.821940,7.228710,4.956631,-5.554590],[5.734668,-4.346193,-1.731656,-2.752338,7.420912,-1.894379,6.307435,0.873543,-2.237003,2.824105,-4.726244,1.099339,-9.729472,-8.851597,6.215655]]], dtype = "float32")#candidate|8869|(6, 15, 15)|const|float32
bop_8870 = relay.less_equal(var_8868.astype('bool'), const_8869.astype('bool')) # shape=(6, 15, 15)
output = relay.Tuple([bop_8870,])
output2 = relay.Tuple([bop_8870,])
func_8873 = relay.Function([var_8868,], output)
mod['func_8873'] = func_8873
mod = relay.transform.InferType()(mod)
var_8874 = relay.var("var_8874", dtype = "float32", shape = ())#candidate|8874|()|var|float32
output = func_8873(var_8874)
func_8875 = relay.Function([var_8874], output)
mutated_mod['func_8875'] = func_8875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8796_call = mod.get_global_var('func_8796')
func_8797_call = mutated_mod.get_global_var('func_8797')
call_8935 = relay.TupleGetItem(func_8796_call(), 2)
call_8936 = relay.TupleGetItem(func_8797_call(), 2)
func_5682_call = mod.get_global_var('func_5682')
func_5684_call = mutated_mod.get_global_var('func_5684')
const_8956 = relay.const([True,True,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,True,False,True,False,False,True,True,True,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,False,True,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,False,False,False,True,True,False,False,True,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,False,False,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,False,False,False,True,False,True,True,True,False,True,True,False,True,True], dtype = "bool")#candidate|8956|(572,)|const|bool
call_8955 = func_5682_call(relay.reshape(const_8956.astype('bool'), [11, 13, 4]))
call_8957 = func_5682_call(relay.reshape(const_8956.astype('bool'), [11, 13, 4]))
output = relay.Tuple([call_8935,call_8955,const_8956,])
output2 = relay.Tuple([call_8936,call_8957,const_8956,])
func_8962 = relay.Function([], output)
mod['func_8962'] = func_8962
mod = relay.transform.InferType()(mod)
output = func_8962()
func_8963 = relay.Function([], output)
mutated_mod['func_8963'] = func_8963
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8966 = relay.const([[[True,False,True,True,True,False,True,True,True,True,True,True,True,False,True],[False,False,False,True,False,False,True,False,True,True,True,False,False,False,False],[False,True,False,True,False,True,False,False,False,True,True,False,False,False,False]],[[False,False,False,False,True,False,False,True,False,True,False,False,False,False,False],[False,False,True,True,False,False,False,False,False,True,True,True,True,False,False],[True,False,False,False,False,False,False,True,True,True,False,True,True,False,True]],[[True,True,True,False,False,True,False,False,True,False,True,True,False,False,True],[False,False,True,False,False,True,False,False,False,True,True,True,False,False,True],[True,True,False,True,False,False,False,False,True,False,True,False,True,True,True]],[[False,True,True,True,True,True,False,False,True,True,True,True,False,False,True],[True,True,True,False,False,True,False,True,True,True,True,False,False,False,True],[True,False,False,False,True,False,True,True,False,False,False,True,True,False,True]],[[True,False,True,False,False,True,True,False,False,False,False,True,True,False,True],[False,True,True,True,True,False,True,False,False,True,False,False,False,False,True],[False,True,True,True,True,True,False,False,True,True,False,True,False,True,True]],[[False,False,False,True,True,True,False,False,True,False,True,False,False,True,False],[True,True,True,False,False,False,True,True,False,True,False,False,False,False,False],[False,False,False,False,False,True,False,False,True,True,False,False,True,False,True]]], dtype = "bool")#candidate|8966|(6, 3, 15)|const|bool
var_8967 = relay.var("var_8967", dtype = "bool", shape = (6, 3, 15))#candidate|8967|(6, 3, 15)|var|bool
bop_8968 = relay.logical_and(const_8966.astype('bool'), relay.reshape(var_8967.astype('bool'), relay.shape_of(const_8966))) # shape=(6, 3, 15)
output = bop_8968
output2 = bop_8968
func_8971 = relay.Function([var_8967,], output)
mod['func_8971'] = func_8971
mod = relay.transform.InferType()(mod)
mutated_mod['func_8971'] = func_8971
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8972 = relay.var("var_8972", dtype = "bool", shape = (6, 3, 15))#candidate|8972|(6, 3, 15)|var|bool
func_8971_call = mutated_mod.get_global_var('func_8971')
call_8973 = func_8971_call(var_8972)
output = call_8973
func_8974 = relay.Function([var_8972], output)
mutated_mod['func_8974'] = func_8974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8962_call = mod.get_global_var('func_8962')
func_8963_call = mutated_mod.get_global_var('func_8963')
call_8988 = relay.TupleGetItem(func_8962_call(), 0)
call_8989 = relay.TupleGetItem(func_8963_call(), 0)
func_2683_call = mod.get_global_var('func_2683')
func_2686_call = mutated_mod.get_global_var('func_2686')
var_9001 = relay.var("var_9001", dtype = "int8", shape = (378,))#candidate|9001|(378,)|var|int8
call_9000 = relay.TupleGetItem(func_2683_call(relay.reshape(var_9001.astype('int8'), [14, 9, 3]), relay.reshape(var_9001.astype('int8'), [14, 9, 3]), ), 0)
call_9002 = relay.TupleGetItem(func_2686_call(relay.reshape(var_9001.astype('int8'), [14, 9, 3]), relay.reshape(var_9001.astype('int8'), [14, 9, 3]), ), 0)
func_1931_call = mod.get_global_var('func_1931')
func_1933_call = mutated_mod.get_global_var('func_1933')
var_9012 = relay.var("var_9012", dtype = "float64", shape = (1815,))#candidate|9012|(1815,)|var|float64
call_9011 = func_1931_call(relay.reshape(var_9012.astype('float64'), [11, 11, 15]))
call_9013 = func_1931_call(relay.reshape(var_9012.astype('float64'), [11, 11, 15]))
func_7756_call = mod.get_global_var('func_7756')
func_7760_call = mutated_mod.get_global_var('func_7760')
var_9019 = relay.var("var_9019", dtype = "uint64", shape = (180,))#candidate|9019|(180,)|var|uint64
var_9020 = relay.var("var_9020", dtype = "float64", shape = (352,))#candidate|9020|(352,)|var|float64
call_9018 = relay.TupleGetItem(func_7756_call(relay.reshape(var_9019.astype('uint64'), [180,]), relay.reshape(var_9020.astype('float64'), [176, 2]), ), 1)
call_9021 = relay.TupleGetItem(func_7760_call(relay.reshape(var_9019.astype('uint64'), [180,]), relay.reshape(var_9020.astype('float64'), [176, 2]), ), 1)
output = relay.Tuple([call_8988,call_9000,var_9001,call_9011,var_9012,call_9018,var_9019,var_9020,])
output2 = relay.Tuple([call_8989,call_9002,var_9001,call_9013,var_9012,call_9021,var_9019,var_9020,])
func_9029 = relay.Function([var_9001,var_9012,var_9019,var_9020,], output)
mod['func_9029'] = func_9029
mod = relay.transform.InferType()(mod)
mutated_mod['func_9029'] = func_9029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9029_call = mutated_mod.get_global_var('func_9029')
var_9031 = relay.var("var_9031", dtype = "int8", shape = (378,))#candidate|9031|(378,)|var|int8
var_9032 = relay.var("var_9032", dtype = "float64", shape = (1815,))#candidate|9032|(1815,)|var|float64
var_9033 = relay.var("var_9033", dtype = "uint64", shape = (180,))#candidate|9033|(180,)|var|uint64
var_9034 = relay.var("var_9034", dtype = "float64", shape = (352,))#candidate|9034|(352,)|var|float64
call_9030 = func_9029_call(var_9031,var_9032,var_9033,var_9034,)
output = call_9030
func_9035 = relay.Function([var_9031,var_9032,var_9033,var_9034,], output)
mutated_mod['func_9035'] = func_9035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8125_call = mod.get_global_var('func_8125')
func_8126_call = mutated_mod.get_global_var('func_8126')
call_9060 = func_8125_call()
call_9061 = func_8125_call()
output = relay.Tuple([call_9060,])
output2 = relay.Tuple([call_9061,])
func_9067 = relay.Function([], output)
mod['func_9067'] = func_9067
mod = relay.transform.InferType()(mod)
mutated_mod['func_9067'] = func_9067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9067_call = mutated_mod.get_global_var('func_9067')
call_9068 = func_9067_call()
output = call_9068
func_9069 = relay.Function([], output)
mutated_mod['func_9069'] = func_9069
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9088 = relay.var("var_9088", dtype = "int32", shape = (6, 3, 9))#candidate|9088|(6, 3, 9)|var|int32
var_9089 = relay.var("var_9089", dtype = "int32", shape = (6, 3, 9))#candidate|9089|(6, 3, 9)|var|int32
bop_9090 = relay.bitwise_and(var_9088.astype('int32'), relay.reshape(var_9089.astype('int32'), relay.shape_of(var_9088))) # shape=(6, 3, 9)
uop_9111 = relay.atanh(bop_9090.astype('float32')) # shape=(6, 3, 9)
output = uop_9111
output2 = uop_9111
func_9135 = relay.Function([var_9088,var_9089,], output)
mod['func_9135'] = func_9135
mod = relay.transform.InferType()(mod)
mutated_mod['func_9135'] = func_9135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9135_call = mutated_mod.get_global_var('func_9135')
var_9137 = relay.var("var_9137", dtype = "int32", shape = (6, 3, 9))#candidate|9137|(6, 3, 9)|var|int32
var_9138 = relay.var("var_9138", dtype = "int32", shape = (6, 3, 9))#candidate|9138|(6, 3, 9)|var|int32
call_9136 = func_9135_call(var_9137,var_9138,)
output = call_9136
func_9139 = relay.Function([var_9137,var_9138,], output)
mutated_mod['func_9139'] = func_9139
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9177 = relay.var("var_9177", dtype = "float32", shape = (14, 9, 2))#candidate|9177|(14, 9, 2)|var|float32
uop_9178 = relay.acosh(var_9177.astype('float32')) # shape=(14, 9, 2)
func_9067_call = mod.get_global_var('func_9067')
func_9069_call = mutated_mod.get_global_var('func_9069')
call_9180 = relay.TupleGetItem(func_9067_call(), 0)
call_9181 = relay.TupleGetItem(func_9069_call(), 0)
uop_9185 = relay.atan(uop_9178.astype('float64')) # shape=(14, 9, 2)
bop_9188 = relay.logical_and(uop_9185.astype('bool'), relay.reshape(var_9177.astype('bool'), relay.shape_of(uop_9185))) # shape=(14, 9, 2)
func_8686_call = mod.get_global_var('func_8686')
func_8688_call = mutated_mod.get_global_var('func_8688')
call_9213 = func_8686_call(relay.reshape(call_9180.astype('float64'), [9, 9, 12]))
call_9214 = func_8686_call(relay.reshape(call_9180.astype('float64'), [9, 9, 12]))
output = relay.Tuple([call_9180,bop_9188,call_9213,])
output2 = relay.Tuple([call_9181,bop_9188,call_9214,])
func_9216 = relay.Function([var_9177,], output)
mod['func_9216'] = func_9216
mod = relay.transform.InferType()(mod)
var_9217 = relay.var("var_9217", dtype = "float32", shape = (14, 9, 2))#candidate|9217|(14, 9, 2)|var|float32
output = func_9216(var_9217)
func_9218 = relay.Function([var_9217], output)
mutated_mod['func_9218'] = func_9218
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9287 = relay.var("var_9287", dtype = "float32", shape = (7, 1, 4))#candidate|9287|(7, 1, 4)|var|float32
var_9288 = relay.var("var_9288", dtype = "float32", shape = (7, 10, 4))#candidate|9288|(7, 10, 4)|var|float32
bop_9289 = relay.power(var_9287.astype('float32'), var_9288.astype('float32')) # shape=(7, 10, 4)
output = relay.Tuple([bop_9289,])
output2 = relay.Tuple([bop_9289,])
func_9305 = relay.Function([var_9287,var_9288,], output)
mod['func_9305'] = func_9305
mod = relay.transform.InferType()(mod)
mutated_mod['func_9305'] = func_9305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9305_call = mutated_mod.get_global_var('func_9305')
var_9307 = relay.var("var_9307", dtype = "float32", shape = (7, 1, 4))#candidate|9307|(7, 1, 4)|var|float32
var_9308 = relay.var("var_9308", dtype = "float32", shape = (7, 10, 4))#candidate|9308|(7, 10, 4)|var|float32
call_9306 = func_9305_call(var_9307,var_9308,)
output = call_9306
func_9309 = relay.Function([var_9307,var_9308,], output)
mutated_mod['func_9309'] = func_9309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8545_call = mod.get_global_var('func_8545')
func_8546_call = mutated_mod.get_global_var('func_8546')
call_9334 = func_8545_call()
call_9335 = func_8545_call()
func_9135_call = mod.get_global_var('func_9135')
func_9139_call = mutated_mod.get_global_var('func_9139')
const_9337 = relay.const([-4,-9,7,-2,7,8,-3,-10,-1,7,-9,10,-8,9,1,-1,5,10,5,-6,9,-8,5,3,2,-9,-1,-10,-6,-9,6,-4,10,-4,5,7,-4,-6,6,6,9,8,4,1,6,-7,-1,-5,4,-6,-9,-4,-2,3,2,-4,5,-1,10,7,3,10,4,3,-7,10,3,-1,6,1,-3,9,8,7,3,6,7,-7,3,2,10,6,-5,6,-10,1,3,1,9,9,-9,7,-1,10,6,-4,3,-10,8,2,-7,1,-3,3,-8,6,-7,7,9,4,9,-4,1,-3,-1,6,9,10,-8,8,5,-5,-8,2,10,-7,-5,1,6,-2,-2,7,-6,5,-7,-1,-6,-5,-7,-6,-3,5,-3,-4,4,-5,6,8,-8,5,-4,10,-3,8,3,8,-4,-6,1,7,-5,10], dtype = "int32")#candidate|9337|(162,)|const|int32
call_9336 = func_9135_call(relay.reshape(const_9337.astype('int32'), [6, 3, 9]), relay.reshape(const_9337.astype('int32'), [6, 3, 9]), )
call_9338 = func_9135_call(relay.reshape(const_9337.astype('int32'), [6, 3, 9]), relay.reshape(const_9337.astype('int32'), [6, 3, 9]), )
var_9352 = relay.var("var_9352", dtype = "bool", shape = (9, 9, 12))#candidate|9352|(9, 9, 12)|var|bool
bop_9353 = relay.add(call_9334.astype('uint16'), relay.reshape(var_9352.astype('uint16'), relay.shape_of(call_9334))) # shape=(9, 9, 12)
bop_9356 = relay.add(call_9335.astype('uint16'), relay.reshape(var_9352.astype('uint16'), relay.shape_of(call_9335))) # shape=(9, 9, 12)
output = relay.Tuple([call_9336,const_9337,bop_9353,])
output2 = relay.Tuple([call_9338,const_9337,bop_9356,])
func_9369 = relay.Function([var_9352,], output)
mod['func_9369'] = func_9369
mod = relay.transform.InferType()(mod)
var_9370 = relay.var("var_9370", dtype = "bool", shape = (9, 9, 12))#candidate|9370|(9, 9, 12)|var|bool
output = func_9369(var_9370)
func_9371 = relay.Function([var_9370], output)
mutated_mod['func_9371'] = func_9371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8663_call = mod.get_global_var('func_8663')
func_8665_call = mutated_mod.get_global_var('func_8665')
call_9395 = relay.TupleGetItem(func_8663_call(), 0)
call_9396 = relay.TupleGetItem(func_8665_call(), 0)
var_9408 = relay.var("var_9408", dtype = "float64", shape = (9, 9, 12))#candidate|9408|(9, 9, 12)|var|float64
bop_9409 = relay.greater_equal(call_9395.astype('bool'), relay.reshape(var_9408.astype('bool'), relay.shape_of(call_9395))) # shape=(9, 9, 12)
bop_9412 = relay.greater_equal(call_9396.astype('bool'), relay.reshape(var_9408.astype('bool'), relay.shape_of(call_9396))) # shape=(9, 9, 12)
uop_9413 = relay.log(bop_9409.astype('float64')) # shape=(9, 9, 12)
uop_9415 = relay.log(bop_9412.astype('float64')) # shape=(9, 9, 12)
uop_9421 = relay.sinh(uop_9413.astype('float64')) # shape=(9, 9, 12)
uop_9423 = relay.sinh(uop_9415.astype('float64')) # shape=(9, 9, 12)
func_8092_call = mod.get_global_var('func_8092')
func_8093_call = mutated_mod.get_global_var('func_8093')
call_9425 = relay.TupleGetItem(func_8092_call(), 0)
call_9426 = relay.TupleGetItem(func_8093_call(), 0)
output = relay.Tuple([uop_9421,call_9425,])
output2 = relay.Tuple([uop_9423,call_9426,])
func_9434 = relay.Function([var_9408,], output)
mod['func_9434'] = func_9434
mod = relay.transform.InferType()(mod)
var_9435 = relay.var("var_9435", dtype = "float64", shape = (9, 9, 12))#candidate|9435|(9, 9, 12)|var|float64
output = func_9434(var_9435)
func_9436 = relay.Function([var_9435], output)
mutated_mod['func_9436'] = func_9436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8500_call = mod.get_global_var('func_8500')
func_8502_call = mutated_mod.get_global_var('func_8502')
call_9444 = relay.TupleGetItem(func_8500_call(), 0)
call_9445 = relay.TupleGetItem(func_8502_call(), 0)
func_6807_call = mod.get_global_var('func_6807')
func_6808_call = mutated_mod.get_global_var('func_6808')
call_9459 = func_6807_call()
call_9460 = func_6807_call()
func_7567_call = mod.get_global_var('func_7567')
func_7568_call = mutated_mod.get_global_var('func_7568')
call_9463 = func_7567_call()
call_9464 = func_7567_call()
uop_9465 = relay.atan(call_9444.astype('float64')) # shape=(9, 9, 12)
uop_9467 = relay.atan(call_9445.astype('float64')) # shape=(9, 9, 12)
func_6492_call = mod.get_global_var('func_6492')
func_6496_call = mutated_mod.get_global_var('func_6496')
var_9474 = relay.var("var_9474", dtype = "bool", shape = (15,))#candidate|9474|(15,)|var|bool
var_9475 = relay.var("var_9475", dtype = "float64", shape = (234,))#candidate|9475|(234,)|var|float64
const_9476 = relay.const([[-2,2,10,-2,4,-7,2,1,-1,8,5,8,-4,4,3,-9,10,-10,5,-9,-8,7,10,3,-1,3,-5,-9,-4,-5,7,-1,-5,7,-3,-9,1,-4,-6,-4,-8,-2,8,1,4,-6,-2,-6,-7,7,9,4,3,-3,-5,-7,4,5,1,-3,-4,6,7,2,-6,8,6,7,10,-2,7,-1,9,2,-3,-6,5,2,-5,5,-5,7,5,-3,-4,-1,4,-3,-7,6,-1,9,-8,7,5,-5,5,4,-3,-4,-3,9,8,-2,-8,-6,-5,-4,-6,-6,-3,1,-10,9,-1,-2,9,-2,3,3,-6,-10,-4,4,5,10,1,-7,8,6,-8,-4,8,-5,3,2,-9,-10,9,4,6,-4,-9,7,9,-7,-2,8,-10,-2,-1,2,-9,4,8,1,-1,-2,8,-8,-5,-5,-7,-6,6,-9,2,-8,4,8,9,6,4,2,9,10,6,-8,10,9,-2,4,10,7,-5,5,-4,-8,9,2,-10,2,2,9,4,10,8,1,8,-9,-5,-1,-5,9,8,4,6,4,-5,-9,-2,-6,3,-8,7,5,4,-1,6,-5,-1,-2,6,-4,10,-2,2,-3,-7,-5,-8,6,-10,-1,7,9,-8,7,-7,-4,6,-9,4,-3,-3,-5,1,-5,10,-7,5,-9,7,6,6,-2,6,1,7,2,2,-3,3,-6,-5,2,-9,2,6,1,-7,-6,-8,6,-9,-5,8,-6,7,5,-2,-3,-9,-8,-2,9,-4,6,-2,-9,-1,-3,-4,1,10,-5,-5,5,3,9,4,9,-2,2,-7,4,5,8,-8,-1,9,3,6,7,1,7,7,3,-10,3,6,-5,7,-8,-4,-3,7,-6,4,-2,-3,-2,6,-10,-10,2,-2,-7,-2,-6,-6,-9,7,-5,1,7,6,-4,5,-9,-7,-3,9,10,6,8,-6,-4,2,-5,-7,-9,-2,-5,5,3,6,10,7,5,-5,7,9,4,1,6,-2,2]], dtype = "int8")#candidate|9476|(1, 378)|const|int8
call_9473 = relay.TupleGetItem(func_6492_call(relay.reshape(var_9474.astype('bool'), [15,]), relay.reshape(var_9475.astype('float64'), [234,]), relay.reshape(const_9476.astype('int8'), [126, 3]), ), 7)
call_9477 = relay.TupleGetItem(func_6496_call(relay.reshape(var_9474.astype('bool'), [15,]), relay.reshape(var_9475.astype('float64'), [234,]), relay.reshape(const_9476.astype('int8'), [126, 3]), ), 7)
func_7362_call = mod.get_global_var('func_7362')
func_7365_call = mutated_mod.get_global_var('func_7365')
const_9492 = relay.const([[-3.349882,-8.483913,1.464708,4.225330,6.344270,-5.718826,5.520589,4.290407,8.697612,0.027929,2.609817,1.970400,-1.166549,4.927845,-0.542187,-6.210369,0.048235,1.884670,3.067856,6.686387,-1.580880,-6.893370,-7.674808,4.638160,7.196673,-4.586581,8.684015,-7.348759,-0.992368,9.105336,0.475293,3.860357,-5.844196,-9.857472,6.447976,-1.257339,4.962490,1.612037,-4.731134,1.394550,6.954109,-4.771537,-2.851736,-0.336675,7.777786,9.275859,-6.322992,5.467536,-8.183497,-9.655161,9.117727,2.587880,4.893036,-8.143146,-8.399122,9.330827,0.588138,-9.402345,-0.475960,1.080136,-4.971633,3.556988,1.614668,5.000705,-3.257288,-8.715561,-0.178470,-7.830731,-8.358117,-0.442189,4.372987,5.219496,2.945126,-5.064490,-8.958742,6.858113,-3.001543,5.409608,6.703047,0.966594,-9.853924,2.793932,-2.280557,-9.342280,-3.795327,6.161389,9.556890,8.077910,-2.047740,-8.048016,1.811862,-3.561004,-8.466542,7.073383,-8.760298,2.837759,-4.267659,-1.578150,7.214089,-4.090328,8.820948,4.039408,-6.637925,9.914847,-8.754517,2.464045,-4.898809,6.400320,-7.272985,-7.612546,-7.196884,3.418567,2.500450,2.402444,0.356744,-6.565600,5.448743,5.719789,-7.316072,-6.317865,-2.853925,-8.537377,3.218545,-2.055849,7.797005,8.213231,-2.188122,-7.101121,-9.392086,-2.759922,0.351784,-9.315111,-5.418710,-0.796488,-4.338276,2.989514,4.931631,3.947527,-6.118612,-5.230645,8.600853,1.179600,-0.648846,3.804233,4.554087,-3.241101,-2.618340,0.378931,-1.376585,-6.965196,-2.016686,-1.824313,6.739258,6.155889,7.902407,8.331465,9.415845,-1.741230,7.300750,-1.027954,-4.624758,2.070720,7.433240,5.135426,6.374491,-0.856745,-7.608752,4.746964,2.487081,2.709262,-7.823430,0.975921,2.052021,3.972153,0.158347,6.152745,0.457454,-2.485922,8.702774,-6.738473,6.748290,-7.641483,0.469439,-2.004281,-8.827081,4.599016,-5.106351,-7.678683,4.306455,-3.743628,2.980796,-8.479388,3.628418,8.768520,-7.054294,5.242587,8.353297,6.569629,4.827649,4.831488,8.594008,-9.543118,7.682216,6.745932,-5.733546,8.937381,2.698396,-4.077455,-5.597108,3.621735,-1.838516,5.796045,2.508998,-8.120421,-5.129485,-8.234446,3.050249,1.175535,-6.891940,7.615247,4.968101,-4.401104,-9.532461,0.654158,1.204038,0.210552,7.625967,9.732434,-8.398079,0.576819,9.385554,-2.669828,-0.580337,7.774102,7.146671,2.471057,5.470895,8.227497,2.795492,-2.744958,-1.541970,-3.592298,-8.167214,-5.388553,5.477407,0.579714,7.396571,0.816126,-6.548170,-9.758372,7.355904,-2.584093,-2.160808,-0.042369,-6.825173,-7.643751,1.965938,-2.550856,-9.459705,-2.792024,-2.804633,-3.694650,1.429345,7.953474,-0.912393,5.431518,9.111559,-9.974467,-0.842540,9.836270,0.480418,5.970863,-9.060241,0.242445,-6.992729,6.941203,5.308301,-1.730687,3.711844,-5.248921,-2.120646,-3.638307,6.509506,1.363481,1.652463,-9.355234,-6.848709,7.246267,8.319200,2.532998,-3.313133,-4.296061,-8.698502,9.074703,-7.102739,7.887440,2.402576,9.243026,-4.800006,-3.330781,7.225795,-6.131848,-9.340282,0.709384,-2.393329,2.665893,7.277685,9.136355,8.635246,1.569166,-0.040078,-3.138029,-1.748884,2.055237,-9.402126,8.236588,-0.503929,1.373086,6.456729,3.343530,3.989421,5.396140,-1.185586,-2.652025,5.707385,-8.649744,-8.539050,2.925112,-6.701779,9.198965,1.567876,-1.163709,-5.546917,-8.477516,-0.238300,-4.605062,6.238350,-0.883567,-9.282847,6.067999,0.132133,8.655662,-5.830786,-3.746792,3.363272,6.549887,-9.789314,4.229457,1.962130,4.732490,2.894804,7.945173,7.767456,-5.759304,-0.905907,1.074992,3.193454,5.692295,5.446674,-8.569778,4.072458,4.063627,-9.166588,-1.535770,9.621351,0.363906,9.589196,0.181619,2.220695,-7.400509,5.684542,4.579690,7.137954,-9.191097,-7.357617,0.644788,-3.148988,-8.245555,6.717915,-4.172245,-3.564709,2.796312,-9.469586,-8.919109,4.907297,9.369913,-1.693996,5.181071,4.264664,-1.872180,6.857990,5.881542,8.384568,-0.734279,-8.178977,1.035537,-5.774642,8.204867,0.297479,-5.255762,-8.771927,2.179906,-3.652838,-6.292058,-6.533830,-6.437163,9.624409,4.906804,5.320119,3.982798,-8.253354,-6.322948,-2.175650,6.874940,5.923217,-7.413645,8.388363,-0.494488,-8.220889,9.081642,9.378475,-8.309560,6.733386,5.597830,4.594544,-3.192009,7.899878,3.823164,-6.718719,2.622869,-9.983318,-9.465608,5.323985,-7.388790,7.388490,-8.355482,4.446297,9.023394,-9.585417,7.518960,-5.360194,2.671770,-9.239833,3.135248,9.780226,-9.366612,-0.996097,5.339109,5.593952,3.644388,8.628903,7.713732,0.472457,2.547151,-6.472165,4.146546,9.089980,-7.992768,6.835245,-4.124713,3.326677,3.260581,1.595616,8.661686,-2.802885,-5.211067,1.570468,-1.674080,-5.075734,-0.162872,-3.343261,9.813467,1.640536,8.681061,4.223096,1.011711,-4.827846,-7.641386,-1.667021,-8.623997,6.797007,-9.599387,-6.480713,1.705460,8.854634,4.008629,7.547444,0.731451,8.597281,-6.673735,-4.287226,1.009176,-4.589810,8.421062,3.504721,7.785962,-7.273482,0.070924,-4.669703,6.351302,5.156933,4.632786,-4.543444,3.387311,9.577791,-8.517354,3.316459,-8.623605,-5.206940,-1.600471,3.200570,-9.203304,-0.047495,-0.890624,-1.287581,-3.512928,5.397893,-0.220014,-0.135655,8.613608,4.101911,9.341237,5.574172,-9.447814,0.092431,3.999816,-6.145936,-8.872070,-7.127674,5.847663,7.516235,-8.054757,1.401393,-4.921764,-2.509499,0.275246,8.846236,-4.052832,-7.349616,-3.125106,-6.893689,-8.484887,9.807777,3.145602,-1.785615,-0.478667,-1.081534,-4.617618,-8.674695,6.161123,-7.177746,-6.896901,6.563361,-0.308371,-2.145636,-4.197375,-2.706428,5.319927,8.546379,2.421370,-3.293029,2.485350,-6.704892,-6.428443,-7.891701,0.335505,7.365323,6.877572,3.554047,-2.366188,-6.793430,-9.958521,-5.389354,3.897709,-2.686972,7.215119,-6.155673,3.006744,-7.895582,5.308839,4.580506,0.560496,8.679558,9.731276,-9.177301,-0.260746,-0.711730,8.981308,-2.748086,9.904382,-2.656618,7.624319,0.927533,9.346379,7.758199,0.038536,-4.973708,7.118407,1.872200,-1.860464,-6.483025,-7.067382,0.945770,3.397309,-4.242698,-8.344205,9.799643,-0.532808,-1.126546,-1.314759,-8.216187,-4.279763,-3.068579,-7.606960,-5.275649,2.546390,3.842904,-7.326823,-1.617176,7.495684,-3.480816,4.693471,3.443584,-6.497995,0.637217,8.711901,-3.059062,-6.207031,0.238455,-7.296100,1.031734,4.367467,-6.206013,8.908697,7.987511,4.604778,-7.064383,-1.323987,-6.062112,4.280023,3.404659,-3.839751,-5.358531,8.384852,5.029672,-4.409405,5.193373,-1.079184,5.027389,-7.228252,-9.873384,-9.852895,-0.431425,-7.370289,8.594406,4.427859,8.148056,0.365930,-1.900166,8.428684,-6.964633,9.208904,3.148218,3.909526,8.139095,-2.851069,-9.387188,3.938346,3.013857,6.538429,5.801252,8.546887,-1.496316,9.519126,0.065313,7.364995,-5.218329,-9.091605,-3.953956,-2.675341,8.074673,6.418575,1.716888,1.483958,-5.057649,5.635137,5.691544,-7.015123,2.977599,-7.102780,8.180598,8.621282,-3.492787,4.692244,1.201539,5.542803,-2.837583,-6.240650,7.032587,-1.429056,8.904890,0.039353,3.148498,-9.492091,1.317784,3.810135,-5.484662,-8.243976,-7.293308,4.566994,7.691495,3.446898,1.821053,8.041053,3.823100,0.469419,-1.291052,3.549146,-8.315328,-7.201837,-0.930808,-6.524063,-0.747436,-7.329719,6.466129,3.230490,-7.000107,-5.143749,-6.048189,-8.857172,-6.883164,-1.046809,-8.796368,-0.607739,-0.793410,6.543709,-8.072185,7.947964,-9.951486,-2.737124,-7.131747,5.597699,-2.302101,-8.007171,7.533401,-0.358035,-4.346328,-4.389330,-4.209924,-1.254261,-7.056691,7.282642,0.906035,2.243602,-3.513932,9.057798,5.317668,8.074317,9.704077,6.280614,-0.662782,-4.998480,-6.790638,-7.188504,8.313593,5.449621,-6.820526,-3.574703,-3.699661,5.166895,0.172889,9.534423,3.437369,-5.853024,-6.714957,-0.001242,9.801528,-8.063845,0.916718,-6.541889,0.021780,-3.826747,4.676538,3.860309,5.387731,-0.624139,-0.233790,8.239084,8.853076,-4.691393,1.585055,-5.677829,0.263271,2.861618,6.366030,8.396936,1.230547,-2.285038,-8.416173,-2.860836,8.147646,7.057946,-3.594550,8.272952,-8.199009,-6.293898,-9.580486,9.185877,2.750306,0.083162,-1.625423,3.580882,-5.290380,-7.361367,0.022481,-1.300265,-1.042279,-7.675120,4.054641,-6.853118,0.590321,0.661649,1.719806,6.022407,5.616949,-6.371977,2.876722,-3.161673,0.791883,1.455892,6.291778,2.061530,5.771549,2.187041,-0.812310,-2.550070,-5.989479,3.455299,-8.373710,-7.369662,0.702293,-2.718094,-5.713648,8.318564,8.695065,-7.648748,-3.574465,-3.497923,-3.540187,-5.176220,7.794195,-3.460058,2.656223,-2.554691,5.312052,2.047449,7.135316,1.443252,-1.352829,4.562788,1.209498,0.384863,-8.201666,3.815791,1.470070,8.017326,3.975060,-5.073418,5.342858,-2.700036,1.007166,-2.686811,5.183384,-6.520114,-8.426472,-2.566625,5.202461,4.543483,3.582055,-2.972126,7.244803,-2.596805,-7.313833,0.707783,0.141465,-7.738491,4.666395,9.178116,-3.537974,9.518963,5.491328,7.494887,0.316588,-6.500479,2.763245,8.351687,-3.363379,3.942954,-9.876593,0.553881,9.864337,-0.893002,-2.208964,1.916705,8.291056,2.510148,-4.914140,6.280164,6.001629,7.779460,7.751609,1.450920,-8.412923,-9.722041,0.002685,-4.203041,3.833621,-3.462741,-6.388526,-9.955706,-0.409134,-5.390587,-7.234377,-0.505110,-5.114866,7.222903,-7.751619,5.045445,4.912262,6.878265,0.626550,4.009632,-3.425042,-0.173502,-5.251858,-0.406516,-2.601212,1.307142,-3.745011,0.440854,0.785179,-4.387848,2.418687,-9.531465,0.256855,-5.030997,2.941583,8.328450,1.250450,-6.658267,9.562695,-3.463116,-0.762049,-5.665116,3.226933,4.913149,-9.307493,-9.255433,1.150443,4.419358],[-7.781999,-2.124642,5.793969,0.660214,6.136868,-9.774459,-4.148073,1.680446,8.578720,6.445290,1.494389,0.983857,6.473953,9.923526,4.066963,3.652890,-5.310414,9.446405,-7.645796,-3.784701,1.288370,-0.176215,4.467246,-0.869762,8.503838,2.911250,-8.960592,3.952095,-1.511172,-2.692014,3.258629,1.640357,7.007465,9.924337,8.363427,-0.340553,8.269420,-6.411888,-2.176621,0.660447,1.369529,-6.867925,9.859493,8.477004,-2.758759,3.143118,2.081541,-0.692354,-8.989212,-1.131618,4.269530,-8.674213,2.739702,-2.733238,0.040048,-5.092300,-2.826837,-7.828128,-3.647857,-9.598865,1.306153,-5.685387,-9.915828,-2.146221,-2.173914,0.861363,8.084980,-8.517793,-1.760139,-3.354712,-3.143342,-1.349001,2.487630,0.871798,-4.449139,-9.054736,5.255801,1.653291,8.346652,-3.356389,-4.585308,-4.991669,0.131183,9.815607,4.071097,7.295904,-7.144374,-2.042439,-9.472648,1.495741,5.539836,3.823873,-5.536958,1.439177,-7.959092,9.976765,5.886589,-3.080148,9.576397,-6.424708,2.899830,-3.558388,-0.064888,9.733079,-7.287044,4.059749,-0.650915,5.596020,9.609789,9.924083,-5.211584,7.052555,-7.988944,7.669502,6.542655,-0.386868,7.942486,-3.412858,4.037624,2.733986,-0.416629,-0.584788,4.504626,6.570836,-5.573704,-8.232294,5.471243,-7.429552,6.171878,3.785925,0.674569,0.372419,6.411773,-9.344006,6.744233,-1.849416,4.293693,-8.594135,-5.430249,4.893627,-6.570069,-3.092386,2.037627,4.038024,-3.442568,3.299764,-4.369888,-8.576140,-9.858754,7.725942,-1.738421,1.391788,-9.518339,-2.855131,8.932301,0.808271,9.628726,-5.407698,-6.096531,4.057614,-3.995511,-3.536153,2.717467,-5.708936,-1.707906,5.447436,-5.543070,-7.011561,2.278506,1.690307,-4.706689,-6.373315,-6.297665,8.090626,7.977060,1.618491,8.070041,-4.625648,9.209513,0.708824,-4.184095,-3.804636,1.684688,7.803120,-7.537822,-3.409501,0.224037,-0.094937,8.017611,-0.285561,3.380512,-5.755151,-6.561898,7.765700,-6.157848,3.880680,-9.562138,5.125928,-4.403012,-3.229328,2.032276,8.180919,6.638999,8.669241,4.244662,2.322504,7.804055,-3.011074,5.299078,0.369242,-4.200725,-4.513243,7.562878,-2.842748,5.386858,-8.379828,0.030570,7.100594,8.552653,9.692081,1.770435,3.909458,8.862770,-3.697270,-4.651308,-5.210358,-1.529750,5.980149,-4.042486,4.793352,-1.852759,-1.416362,1.644074,-8.141043,-9.122133,-2.807269,7.890596,1.605928,8.849773,2.895526,4.327442,-3.847023,-6.309361,9.167139,2.755285,-4.599121,-3.233825,-3.719713,5.496355,5.652471,-3.145331,7.268457,5.954857,-8.502485,-2.591275,-7.665575,9.140936,4.336256,-6.727317,-7.661779,4.874399,2.084703,-4.991004,7.972682,4.742094,9.340557,-6.054539,5.125352,9.750048,-7.339144,1.724453,-1.431511,1.704221,-5.217088,-3.077712,-1.794561,-3.931825,-9.675224,8.703989,-4.776080,-5.427223,-5.671613,-4.569400,-0.491064,-0.454067,5.889615,-8.435583,-2.070661,4.024165,5.036788,-4.321846,5.390894,-2.421158,3.892541,3.770651,-6.577427,7.230834,2.415660,-5.984836,-5.100420,-6.244153,-6.880012,5.724141,3.775397,7.642445,-9.167865,-3.112213,-6.635268,4.908392,-3.061627,4.395883,-9.738548,8.244371,-8.377306,-9.985277,-4.554029,-5.429714,2.595700,-3.539119,-2.662599,6.662429,1.051634,-4.687736,-3.393274,5.874990,8.051164,8.521701,8.180273,1.872766,-2.135901,-5.155890,-4.346018,5.741513,-9.033812,-1.710044,-6.333093,-8.551658,1.630779,6.196491,-8.440119,-2.495418,-2.792448,-7.126196,4.777883,2.991323,8.386575,-1.791492,6.158784,9.135992,0.902668,-9.407108,2.529185,0.460157,-0.189151,8.673657,0.437234,-1.221926,6.933398,-1.330173,-7.702647,6.971591,5.428239,7.311754,9.119356,4.582950,1.762691,-1.243906,-1.161392,9.354146,4.148943,9.623043,3.519788,-7.060624,-1.241145,0.636969,-4.063642,-0.106999,-8.186388,-5.232940,-1.032346,3.721219,-9.780934,8.030293,5.985163,3.429609,9.680078,-4.486867,-5.776978,3.804000,8.963692,2.336695,2.613904,6.383113,4.250755,-4.509305,8.244660,0.291380,2.316591,-1.755809,-5.949449,0.534135,5.630866,-2.783505,-6.056686,-1.469942,-0.101514,-1.340400,-0.011765,1.807887,5.287168,9.208072,0.409178,-5.719584,8.913311,-4.075715,-6.664422,8.724450,2.103601,8.486790,-4.484169,2.812490,7.497032,-9.448712,7.899489,-6.615065,5.439243,-1.829022,-7.688616,-4.856643,4.467949,8.524820,-7.854348,4.418634,-7.933060,-1.323344,3.596861,3.433384,8.198805,-9.598141,-4.048207,3.234563,-8.729485,-7.086861,2.600402,6.863635,7.532997,-2.179244,2.504140,8.023681,8.242702,-3.085930,8.473671,1.023668,-5.873170,-9.443259,-9.125458,-9.847059,7.494957,-8.818370,0.938547,2.425775,-8.842703,0.737857,-2.093710,-8.218985,-5.473571,-5.974483,-5.066666,-5.633349,1.739838,4.885057,-8.386463,-0.359439,5.134179,-6.656443,-6.730327,2.060592,-5.123899,3.346950,-9.917340,-9.385523,-2.812662,-9.021753,-0.837242,2.475744,0.651235,-1.298654,8.930255,6.191273,6.782251,6.292675,-8.575475,-2.333656,2.656724,1.110539,0.145841,-5.724169,-5.844671,1.640810,9.660363,-0.688168,1.635000,8.791544,6.667945,3.100797,-3.983675,8.344389,-8.387534,6.487395,2.802172,2.178653,-0.116927,-1.387223,-3.769188,-1.066326,0.590481,9.321170,6.290473,9.598010,6.120266,3.169315,2.857373,-9.806100,-4.733533,-8.285754,-0.239798,1.132178,8.483551,1.075700,0.365274,-0.495706,-3.161458,9.105116,-4.959091,8.053472,-4.772539,8.873026,8.489095,3.933540,-8.226455,5.794351,7.024349,5.008646,-1.669554,-7.233765,-0.682232,-9.064231,-5.282466,-7.282618,-8.242761,6.081940,-1.173912,3.344791,-7.857495,-0.340772,-3.288953,-7.809605,-8.558397,-6.566332,-3.226771,-2.408759,2.573044,-7.509662,-9.334100,-6.360151,-6.924879,7.885378,9.088943,-6.384734,3.183784,-9.426009,-3.525128,6.027976,-4.480218,6.082148,4.387770,-3.840930,2.329847,-4.864239,3.823385,-4.127844,-4.884027,3.421781,-7.653748,-4.098636,-7.240689,2.470342,5.709033,0.005398,7.998428,-7.545100,-4.231859,0.313496,6.083756,0.529574,0.970332,-5.576941,-3.971493,0.648333,0.529198,-1.200813,-9.311184,-4.137510,4.381002,2.383930,4.588302,3.447798,-2.574242,2.526331,-1.916178,1.122535,-5.551180,-0.285421,8.258139,-3.200802,8.409368,-9.724905,-3.020042,0.604198,-6.206885,-3.693331,-1.785376,5.507537,7.663960,3.497150,6.038408,8.511280,-2.809653,-5.720899,6.573717,3.096369,-6.281535,-5.633828,-5.049582,-7.280835,-3.183116,-7.779998,-7.838433,-4.282109,-7.763857,1.779715,-7.514747,-0.746145,-9.316410,-3.892766,2.704073,-6.501887,3.533826,-7.320881,-5.346623,-2.587047,-5.733610,-7.025235,-1.973415,-0.953874,-4.064414,-5.825595,-4.603910,9.410211,-6.927028,-1.357767,5.468336,6.143981,3.997787,5.339613,-0.474887,-9.505702,-5.103864,4.842248,5.686440,-6.389088,2.778723,-2.196391,3.326668,4.390287,3.166296,0.309889,-9.409797,4.223497,-8.644802,-0.891576,-8.294815,9.982738,6.343968,6.362748,-8.238223,-5.515148,5.873984,5.871670,-2.287574,-8.199622,-5.840215,3.233260,-3.027854,-3.487279,6.866815,1.048173,-6.065031,-0.768934,4.986298,-5.620689,6.136115,2.242327,-9.376073,4.418545,0.566591,-4.676543,4.033288,8.992289,9.409529,6.734085,-5.796907,-7.885144,0.563342,-9.509788,4.521892,9.713136,7.879814,4.508765,0.410940,-3.462697,-1.134086,0.425659,-5.169500,5.657717,-3.222891,-1.382010,7.357485,2.441119,-0.674924,2.006693,2.042966,-5.557220,6.279521,-5.321198,9.670800,-5.062556,8.443064,7.759707,-2.198595,4.260678,5.792003,4.031025,5.906708,-6.261600,-8.927338,2.677577,-8.461551,-2.177111,5.214028,-9.637061,2.390550,-5.980182,-9.693685,5.976337,-1.622247,-7.376348,-4.217134,-3.692168,-0.146887,3.035676,-0.837448,-0.771168,6.234626,-6.613825,8.309173,2.440817,8.554715,-5.977279,3.843171,-7.507065,-4.083383,-1.074651,-9.400861,-6.739303,9.182614,7.348511,-2.141746,-4.514638,-6.099984,-8.266723,5.137118,3.936313,1.431884,4.536113,7.380439,-1.075881,-8.780862,-3.672761,7.341756,8.652534,5.305473,-4.846856,6.019452,3.690687,-6.682554,0.614883,8.250265,-5.801699,-7.579702,6.941657,-9.879068,-9.764097,-5.534386,4.396656,8.520703,-1.254400,-3.443948,9.689578,7.260098,1.735402,-1.777756,-6.176520,0.985739,6.197428,-8.908124,9.442208,-1.077577,1.516617,6.270021,6.899714,2.426963,0.844251,-4.576915,1.489747,7.172118,0.820347,-9.967062,5.223502,4.025625,6.230213,0.703878,-4.410870,-9.730115,7.089247,-7.958382,8.839271,-9.877757,4.692219,4.839572,1.273813,-8.781788,-1.217835,-2.351662,-3.990064,-2.652542,5.569369,9.405948,-1.535471,2.303234,1.090673,-0.797883,1.264637,6.498233,9.975521,-8.519102,8.472730,-2.463667,0.115956,0.241296,-9.955529,9.942023,9.762394,6.740249,0.799072,7.720302,-5.381430,2.441001,1.984670,2.838241,2.843436,5.248164,-6.303176,-4.544459,-3.069633,7.255533,-8.203130,-7.556919,4.660015,3.513339,-8.529435,3.389667,-4.354574,-2.405630,2.388278,-2.038459,4.454724,0.583618,2.016541,6.090676,0.551715,-8.699534,-7.089862,-6.551970,-8.592711,-9.147093,-2.502908,-2.228557,-5.958265,-7.489539,-7.112158,-4.240513,-0.149988,8.305391,7.928782,1.180249,7.869477,-6.492193,-1.816767,-7.763351,-4.452318,5.575777,-7.142049,6.224308,8.787823,1.565999,0.252468,8.680371,0.420837,0.034881,-6.677164,-9.248567,8.511004,2.783331,3.895719,-4.668568,-3.725322,-9.808229,4.539523,1.537849,-4.540976,-0.917630,-6.332468,5.341460,-0.988600,-8.523562,-9.926778,5.627173,-7.682207,7.250372,-2.250397,9.280713,-4.560399,4.755955,-2.120191,-5.739006,5.620934,-4.230358,-9.475870,-1.958088,-1.009563,6.908089,8.815363,-9.119230,1.902495,7.840350,-3.133606,-9.542814,-6.987338,-2.834391]], dtype = "float64")#candidate|9492|(2, 960)|const|float64
call_9491 = relay.TupleGetItem(func_7362_call(relay.reshape(const_9492.astype('float64'), [16, 15, 8]), relay.reshape(const_9492.astype('float64'), [16, 15, 8]), ), 2)
call_9493 = relay.TupleGetItem(func_7365_call(relay.reshape(const_9492.astype('float64'), [16, 15, 8]), relay.reshape(const_9492.astype('float64'), [16, 15, 8]), ), 2)
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
var_9499 = relay.var("var_9499", dtype = "float32", shape = (1680,))#candidate|9499|(1680,)|var|float32
call_9498 = func_412_call(relay.reshape(var_9499.astype('float32'), [8, 15, 14]))
call_9500 = func_412_call(relay.reshape(var_9499.astype('float32'), [8, 15, 14]))
output = relay.Tuple([call_9459,call_9463,uop_9465,call_9473,var_9474,var_9475,const_9476,call_9491,const_9492,call_9498,var_9499,])
output2 = relay.Tuple([call_9460,call_9464,uop_9467,call_9477,var_9474,var_9475,const_9476,call_9493,const_9492,call_9500,var_9499,])
func_9508 = relay.Function([var_9474,var_9475,var_9499,], output)
mod['func_9508'] = func_9508
mod = relay.transform.InferType()(mod)
var_9509 = relay.var("var_9509", dtype = "bool", shape = (15,))#candidate|9509|(15,)|var|bool
var_9510 = relay.var("var_9510", dtype = "float64", shape = (234,))#candidate|9510|(234,)|var|float64
var_9511 = relay.var("var_9511", dtype = "float32", shape = (1680,))#candidate|9511|(1680,)|var|float32
output = func_9508(var_9509,var_9510,var_9511,)
func_9512 = relay.Function([var_9509,var_9510,var_9511,], output)
mutated_mod['func_9512'] = func_9512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7848_call = mod.get_global_var('func_7848')
func_7849_call = mutated_mod.get_global_var('func_7849')
call_9514 = relay.TupleGetItem(func_7848_call(), 0)
call_9515 = relay.TupleGetItem(func_7849_call(), 0)
var_9518 = relay.var("var_9518", dtype = "float32", shape = (9, 9, 12))#candidate|9518|(9, 9, 12)|var|float32
bop_9519 = relay.logical_or(call_9514.astype('bool'), relay.reshape(var_9518.astype('bool'), relay.shape_of(call_9514))) # shape=(9, 9, 12)
bop_9522 = relay.logical_or(call_9515.astype('bool'), relay.reshape(var_9518.astype('bool'), relay.shape_of(call_9515))) # shape=(9, 9, 12)
output = relay.Tuple([bop_9519,])
output2 = relay.Tuple([bop_9522,])
func_9528 = relay.Function([var_9518,], output)
mod['func_9528'] = func_9528
mod = relay.transform.InferType()(mod)
mutated_mod['func_9528'] = func_9528
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9529 = relay.var("var_9529", dtype = "float32", shape = (9, 9, 12))#candidate|9529|(9, 9, 12)|var|float32
func_9528_call = mutated_mod.get_global_var('func_9528')
call_9530 = func_9528_call(var_9529)
output = call_9530
func_9531 = relay.Function([var_9529], output)
mutated_mod['func_9531'] = func_9531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8614_call = mod.get_global_var('func_8614')
func_8615_call = mutated_mod.get_global_var('func_8615')
call_9582 = relay.TupleGetItem(func_8614_call(), 1)
call_9583 = relay.TupleGetItem(func_8615_call(), 1)
func_2759_call = mod.get_global_var('func_2759')
func_2767_call = mutated_mod.get_global_var('func_2767')
const_9598 = relay.const([True,True,True,False,True,False,True,True,True,False,True,True,True,False,False], dtype = "bool")#candidate|9598|(15,)|const|bool
const_9599 = relay.const([True,False,True,False,True,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,False,True,False,True,True,False,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,True,True,True,False,False,True,True,True,True,False,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,False,True,True,True,False,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,False,True], dtype = "bool")#candidate|9599|(225,)|const|bool
var_9600 = relay.var("var_9600", dtype = "float64", shape = (1, 234))#candidate|9600|(1, 234)|var|float64
var_9601 = relay.var("var_9601", dtype = "float32", shape = (1680,))#candidate|9601|(1680,)|var|float32
var_9602 = relay.var("var_9602", dtype = "float64", shape = (352,))#candidate|9602|(352,)|var|float64
const_9603 = relay.const([4,-8,2,3,7,4,7,8,-1,3,-2,-6,-3,-8,-4,7,7,-10,-1,-10,-10,-4,8,-8,-2,8,-2,-8,1,-7,-1,6,10,-8,9,-1,-2,-6,6,9,5,-6,6,-1,10,-3,-2,10,4,-5,5,4,1,-8,-3,7,-8,6,-8,2,-5,-10,3,3,7,-2,1,2,5,-1,10,-8,-2,4,-3,8,1,-9,8,-2,7,9,-10,-2,-10,-5,10,9,-10,-1,-7,-3,7,-3,-1,9,-10,7,-7,7,1,-8,-5,-4,1,-10,-4,-7,4,-5,-6,6,-3,8,-2,-9,-6,6,5,-8,7,5,10,4,3,-2,6,-6,1,-8,10,-9,-6,8,7,8,-4,5,4,-2,9,-7,-4,-3,-1,-9,10,-7,-3,8,5,-3,-10,4,10,-2,-4,5,3,2,-8,-5,8,-5,-1,10,10,6,6,3,-8,4,-3,9,-6,2,-9,-4,-2,-8,3,-8,5,-2,-4,6,9,5,10,2,2,-2,2,9,-7,7,-7,5,-9,-3,-4,-8,-9,-9,-4,7,-4,8,-4,-7,6,-5,9,6,-8,2,10,-5,2,9,4,3,-2,-1,1,-1,2,-3,5,10,10,3,3,-8,3,-2,-1,2,-9,4,-1,-9,1,5,-1,9,-8,-1,2,7,-9,2,-7,5,-9,5,4,-4,-4,-10,5,-8,4,5,1,3,4,-9,-10,-4,5,-9,-3,-5,4,-4,9,-4,-1,8,3,-9,-7,-8,7,7,1,-3,1,-3,-7,3,-7,8,-8,-10,-8,-9,-1,5,9,10,-8,-6,4,5,6,-7,7,-3,-2,7,3,-6,-5,10,2,5,4,-8,-1,-10,-1,2,-2,4,-7,5,-10,-4,-1,10,6,-5,9,9,-6,-8,7,8,4,-5,-4,-1,-3,-9,9,10,-7,6,-8,-7,-5,3,5,-3,-3,8,-9,10,-3,-6,10,-8,9,-2,-10,-3,-4,-8,8,-5,-10,-8,3,-8,-9,-7], dtype = "int8")#candidate|9603|(378,)|const|int8
call_9597 = relay.TupleGetItem(func_2759_call(relay.reshape(const_9598.astype('bool'), [1, 3, 5]), relay.reshape(const_9599.astype('bool'), [15, 3, 5]), relay.reshape(var_9600.astype('float64'), [234,]), relay.reshape(var_9601.astype('float32'), [1680, 1]), relay.reshape(var_9602.astype('float64'), [352,]), relay.reshape(const_9603.astype('int8'), [42, 9]), ), 7)
call_9604 = relay.TupleGetItem(func_2767_call(relay.reshape(const_9598.astype('bool'), [1, 3, 5]), relay.reshape(const_9599.astype('bool'), [15, 3, 5]), relay.reshape(var_9600.astype('float64'), [234,]), relay.reshape(var_9601.astype('float32'), [1680, 1]), relay.reshape(var_9602.astype('float64'), [352,]), relay.reshape(const_9603.astype('int8'), [42, 9]), ), 7)
output = relay.Tuple([call_9582,call_9597,const_9598,const_9599,var_9600,var_9601,var_9602,const_9603,])
output2 = relay.Tuple([call_9583,call_9604,const_9598,const_9599,var_9600,var_9601,var_9602,const_9603,])
func_9611 = relay.Function([var_9600,var_9601,var_9602,], output)
mod['func_9611'] = func_9611
mod = relay.transform.InferType()(mod)
mutated_mod['func_9611'] = func_9611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9611_call = mutated_mod.get_global_var('func_9611')
var_9613 = relay.var("var_9613", dtype = "float64", shape = (1, 234))#candidate|9613|(1, 234)|var|float64
var_9614 = relay.var("var_9614", dtype = "float32", shape = (1680,))#candidate|9614|(1680,)|var|float32
var_9615 = relay.var("var_9615", dtype = "float64", shape = (352,))#candidate|9615|(352,)|var|float64
call_9612 = func_9611_call(var_9613,var_9614,var_9615,)
output = call_9612
func_9616 = relay.Function([var_9613,var_9614,var_9615,], output)
mutated_mod['func_9616'] = func_9616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8500_call = mod.get_global_var('func_8500')
func_8502_call = mutated_mod.get_global_var('func_8502')
call_9630 = relay.TupleGetItem(func_8500_call(), 2)
call_9631 = relay.TupleGetItem(func_8502_call(), 2)
func_8796_call = mod.get_global_var('func_8796')
func_8797_call = mutated_mod.get_global_var('func_8797')
call_9634 = relay.TupleGetItem(func_8796_call(), 1)
call_9635 = relay.TupleGetItem(func_8797_call(), 1)
output = relay.Tuple([call_9630,call_9634,])
output2 = relay.Tuple([call_9631,call_9635,])
func_9645 = relay.Function([], output)
mod['func_9645'] = func_9645
mod = relay.transform.InferType()(mod)
mutated_mod['func_9645'] = func_9645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9645_call = mutated_mod.get_global_var('func_9645')
call_9646 = func_9645_call()
output = call_9646
func_9647 = relay.Function([], output)
mutated_mod['func_9647'] = func_9647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8538_call = mod.get_global_var('func_8538')
func_8540_call = mutated_mod.get_global_var('func_8540')
call_9661 = relay.TupleGetItem(func_8538_call(), 0)
call_9662 = relay.TupleGetItem(func_8540_call(), 0)
const_9679 = relay.const([[[-1,-4,2,-4,8,-8,3,-3,8,-2,9,-5],[-2,-3,-10,-5,-5,1,8,8,9,-9,5,-5],[-3,7,-8,6,-3,-5,6,-5,-8,-6,-2,-4],[-10,5,3,8,8,10,6,-8,-7,-6,-2,1],[9,-8,-6,4,-3,1,3,-6,5,-9,-3,1],[-9,-2,8,-2,-5,-10,5,6,4,-6,9,10],[-1,4,-7,6,2,8,5,8,2,-10,-3,5],[-6,-6,6,-8,6,-10,8,10,6,-1,8,3],[-9,-7,1,-10,4,3,-4,6,6,-5,-4,4]],[[3,-10,-7,10,-8,-6,10,8,-4,5,-4,7],[7,-4,-7,10,4,-10,5,-4,-9,-9,-8,3],[8,7,-1,3,8,-8,6,6,9,10,8,-4],[6,-3,2,6,8,-3,-10,6,8,7,-1,5],[-1,-2,10,-3,1,3,-6,3,-2,10,7,-2],[-9,10,-9,9,-9,-8,-9,7,9,-3,-9,-6],[7,3,-1,10,1,9,4,-2,9,3,-1,9],[-10,-4,3,10,-7,5,-5,7,2,7,-3,8],[-9,1,-3,1,-7,4,6,-9,6,-2,-8,6]],[[4,-7,-2,-1,7,-10,-6,-4,5,-2,-2,3],[-4,9,-3,-3,10,-6,-4,1,10,-2,2,9],[5,-8,4,-7,8,10,2,-10,3,5,4,-7],[-1,5,4,-1,-5,8,-2,-8,10,6,3,-4],[-4,4,-9,6,-9,-3,5,3,-5,-9,-3,-9],[-9,5,-3,-8,2,-6,-4,-2,3,7,-9,8],[-1,-3,8,-9,9,8,-5,-8,8,-9,-8,5],[-6,9,-5,1,8,4,8,-2,9,8,6,-10],[-1,9,10,1,8,-3,-9,-3,-8,10,2,2]],[[1,3,5,-4,-4,8,-8,-2,-8,-1,9,1],[-3,-3,2,6,5,-3,-5,-9,-9,-5,-5,-3],[-1,-10,-10,-10,-2,10,8,1,5,6,-8,-1],[3,4,-4,-10,1,7,-1,-8,8,8,4,-1],[-3,1,3,10,7,-3,9,7,-5,3,9,-8],[-9,-7,8,-4,-5,4,-6,-4,-6,-5,2,9],[4,3,3,-4,-2,7,-7,10,-3,-9,-9,-3],[4,4,-8,5,-4,7,2,2,-2,-3,-10,-10],[9,2,-6,7,-3,-6,-1,-6,1,-4,7,-4]],[[-5,-8,2,-7,-9,1,8,-5,-8,-3,-4,-5],[4,-6,7,8,1,-8,5,-3,8,2,-3,-6],[-10,1,-10,8,8,-3,-6,-7,-10,-9,2,-9],[-10,-4,-8,4,-1,-1,-3,-3,3,-4,-10,7],[9,2,9,-2,2,2,8,7,2,8,-7,4],[10,10,-2,9,4,-3,-5,-2,10,-5,1,-8],[10,-8,-1,-6,4,-1,2,8,-3,8,5,-3],[7,5,-3,-3,-3,9,-5,4,-2,6,7,1],[4,-8,-1,-5,-2,-8,-5,8,-2,-1,4,6]],[[2,-2,-7,-3,-4,9,-3,-6,5,1,-5,-8],[-8,5,6,-9,-5,-1,6,3,-4,-7,-1,5],[-9,7,-5,-4,-4,4,2,10,6,2,-3,4],[-1,6,8,-7,-8,-2,9,-6,4,-5,-5,6],[6,5,-4,9,-2,7,-6,8,1,7,-5,-5],[2,7,-6,-1,10,-4,-7,-2,-7,10,5,7],[7,6,-6,-2,4,8,-2,-4,6,-9,-8,3],[-9,-9,10,-10,4,8,-10,10,10,6,8,-6],[-8,7,-7,-1,3,3,-10,10,-1,-3,9,-7]],[[-1,2,-2,4,-5,-6,-1,-9,9,-8,4,-2],[-6,-8,-8,7,7,-9,-10,-9,-5,-9,1,3],[-9,10,8,-2,7,-1,-4,-4,-10,2,-7,-6],[7,9,3,-10,2,8,4,-6,10,5,10,7],[-4,1,-9,4,-2,5,-4,10,7,-9,9,-1],[7,-5,7,6,-8,-3,-1,6,-1,-1,-8,-2],[-10,-7,8,-10,-5,-9,-4,4,-9,-2,5,6],[-8,10,9,-4,-4,-9,-10,7,-1,-10,9,-6],[2,-1,-5,2,7,3,5,-4,-10,-3,-10,-8]],[[5,6,1,-6,-2,-7,-7,2,2,-9,-5,-7],[-6,5,-1,8,8,-3,6,9,8,6,-6,7],[-6,-4,9,-5,-4,-4,-1,2,-6,10,4,-1],[7,6,-8,1,1,-6,-1,-7,1,-9,-4,6],[5,6,-5,-10,6,6,-10,1,-4,-2,-10,-9],[2,5,-8,8,7,3,-10,-2,10,4,7,-1],[-2,8,-4,3,7,-4,9,2,-5,-5,9,-5],[9,1,3,-9,-7,-7,7,8,7,3,-3,9],[-10,-7,6,-8,-1,1,10,-9,10,-9,5,3]],[[1,-8,-10,4,-3,-7,-5,6,-3,-2,-10,2],[-8,-6,-10,4,6,-8,9,4,-5,3,-7,7],[-7,-5,-9,-6,1,9,3,-5,-5,5,4,-8],[-4,10,1,3,6,4,6,4,1,3,9,5],[10,10,1,5,-8,-7,2,-6,8,6,9,5],[5,6,-5,-8,2,1,5,-1,10,-3,-7,-3],[-8,-1,8,6,2,-7,-2,-2,-4,-10,-8,3],[8,-10,-4,8,-1,8,-4,5,6,-3,-7,-5],[-9,-2,-7,-4,-1,-7,-7,-9,-5,10,-3,5]]], dtype = "uint8")#candidate|9679|(9, 9, 12)|const|uint8
bop_9680 = relay.subtract(call_9661.astype('uint8'), relay.reshape(const_9679.astype('uint8'), relay.shape_of(call_9661))) # shape=(9, 9, 12)
bop_9683 = relay.subtract(call_9662.astype('uint8'), relay.reshape(const_9679.astype('uint8'), relay.shape_of(call_9662))) # shape=(9, 9, 12)
func_7567_call = mod.get_global_var('func_7567')
func_7568_call = mutated_mod.get_global_var('func_7568')
call_9698 = func_7567_call()
call_9699 = func_7567_call()
output = relay.Tuple([bop_9680,call_9698,])
output2 = relay.Tuple([bop_9683,call_9699,])
func_9702 = relay.Function([], output)
mod['func_9702'] = func_9702
mod = relay.transform.InferType()(mod)
output = func_9702()
func_9703 = relay.Function([], output)
mutated_mod['func_9703'] = func_9703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8614_call = mod.get_global_var('func_8614')
func_8615_call = mutated_mod.get_global_var('func_8615')
call_9769 = relay.TupleGetItem(func_8614_call(), 0)
call_9770 = relay.TupleGetItem(func_8615_call(), 0)
func_5627_call = mod.get_global_var('func_5627')
func_5629_call = mutated_mod.get_global_var('func_5629')
var_9787 = relay.var("var_9787", dtype = "float32", shape = (7, 9))#candidate|9787|(7, 9)|var|float32
call_9786 = func_5627_call(relay.reshape(var_9787.astype('float32'), [7, 9, 1]))
call_9788 = func_5627_call(relay.reshape(var_9787.astype('float32'), [7, 9, 1]))
uop_9795 = relay.erf(call_9769.astype('float32')) # shape=(9, 9, 12)
uop_9797 = relay.erf(call_9770.astype('float32')) # shape=(9, 9, 12)
bop_9815 = relay.less(call_9786.astype('bool'), relay.reshape(var_9787.astype('bool'), relay.shape_of(call_9786))) # shape=(7, 9, 1)
bop_9818 = relay.less(call_9788.astype('bool'), relay.reshape(var_9787.astype('bool'), relay.shape_of(call_9788))) # shape=(7, 9, 1)
func_2414_call = mod.get_global_var('func_2414')
func_2420_call = mutated_mod.get_global_var('func_2420')
const_9830 = relay.const([-4.879333,-1.706145,3.102379,-1.180457,7.350553,-7.605845,4.821252,8.768466,-3.605334,3.584446,-1.444551,-2.388460,8.187696,-5.992005,-0.871830,2.050031,8.964082,-3.753550,-8.805420,6.247137,1.368765,-5.798917,3.347757,3.029152,-1.584069,2.868549,0.939474,-7.204978,0.870217,4.863666,-6.054398,-3.900333,-6.739897,-0.273885,4.912319,1.642595,-6.590865,4.238083,1.638247,7.488060,9.264614,-8.876108,0.392820,0.476970,-8.971428,-2.118639,1.551215,-5.045206,7.141066,-0.511566,8.287808,6.488685,5.430265,5.936241,8.733781,4.113224,3.596680,8.205975,-2.084299,9.771429,-4.309868,2.980229,-3.296542,5.761233,1.967440,-2.916639,9.107131,-9.675342,9.773916,-4.312975,-4.617758,5.365601,7.508325,-5.977450,-2.426240,-1.227275,-9.109455,-8.317544,-3.940962,-8.842180,-7.691310,-7.686411,3.528362,-9.156729,-3.832681,8.829828,-6.963299,2.743988,-5.662447,9.394785,7.930719,7.953791,-7.923703,5.404186,9.884810,-6.383393,-7.460445,-2.259669,9.190699,-0.726582,2.629233,-4.092535,5.677248,9.515091,-8.072988,-2.893698,2.413366,3.003307,0.346642,-9.100032,-0.612078,-5.484567,9.799503,-8.670265,-2.868350,-9.521977,7.187692,4.508412,-5.253204,-7.449490,-4.694562,9.058875,-2.519536,6.791793,4.713226,-0.450717,-8.852573,-0.689150,0.572429,-8.231351,-1.554705,1.870965,4.596782,-9.711289,-7.139688,-3.364971,8.017960,-6.265432,-6.747631,4.184766,7.690701,-0.381485,3.741464,8.324104,0.366221,-5.207153,-7.876523,3.809030,-3.203000,-6.263947,-0.146715,6.800195,-8.791553,1.135758,4.902086,-6.348887,4.104892,-4.837893,9.880422,3.978929,4.925125,-7.107815,-7.692977,-3.072013,5.965550,5.708180,4.318755,6.894088,-0.102050,6.349495,-6.631531,-1.472626,-5.676662,-4.650580,-5.172260,-4.492324,1.553627,3.733637,6.222754,-8.359415,-8.717505,-0.347938,8.474551,3.389342,5.490615,8.716854,-6.922197,1.140705,7.729960,2.999774,4.848123,4.448913,-0.786362,-7.452891,-9.361425,7.221535,-3.488970,2.702126,3.795409,9.549701,9.402868,-2.315200,-1.507268,-3.985014,2.383776,5.326972,8.731979,2.658755,-2.501296,6.737766,5.709628,3.742259,0.650412,3.350401,-7.838986,8.198167,5.202840,2.648247,9.349596,8.916062,8.558972,5.012404,-9.721896,6.171439,2.052163,6.452743,6.486094,-1.952596,1.936661,3.554980,2.050411,8.865535,4.654160,-2.583277,-2.814906,3.486344,2.989301,1.605010,-9.909668,-6.987452,4.044376,-0.715294,-1.218540,7.512148,-1.631483,2.344458,6.382221,-1.446193,-0.445998,5.139297,8.734524,-3.980995,-9.728646,-5.612577,-6.039577,-1.730514,-2.226779,-1.572637,6.579133,1.487654,2.516509,1.786913,2.783042,0.718336,9.710839,2.582061,9.279241,4.259159,8.433251,-9.014577,-9.112308,6.290962,8.762212,6.092556,-0.009614,-2.706124,-9.426501,-3.449398,-3.904003,7.254169,6.551198,-3.831197,-0.204397,-3.782394,0.363614,-4.929400,1.065328,-9.563349,0.293046,6.653416,-1.167218,3.433631,-9.885052,3.476380,4.598473,-3.898237,9.520371,-7.217748,-2.476139,7.768807,3.376545,2.105387,1.170547,-1.039546,8.483874,-0.893312,3.390532,-2.773304,-3.020809,-5.356985,-8.343369,-7.014616,5.524061,-7.564437,5.070513,4.045372,7.766039,9.149636,7.681838,7.707136,1.334553,-1.553707,-9.000205,-7.615104,-3.394892,-1.655023,2.872361,-0.090178,9.854573,-6.225116,-7.773106,-0.950917,-7.754511,4.071112,9.788393,9.078343,-8.732242,8.352103,-8.412307,4.475106,6.329983,-6.268704,-3.885817,9.192585,9.896469,-4.720368,-0.675643,9.302412,-0.136488,-3.887275,9.710261,4.079562,9.305042,-5.203627,-9.430504,8.194150,-9.804586,1.286722,-0.333789,-6.896923,-6.912220,-0.990567,0.886710,-5.253647,-9.412707,7.809964,-8.477967,2.587270,-4.979758,8.093485,-3.733524,-5.780660,-4.542765,1.893623,-7.104654,-4.054921,9.710752,6.571162,-4.849603,-2.851665,-6.494536,9.075348,-9.035237,8.005259,-8.080440,-4.427073,5.483835,6.209291,-7.478813,-1.154271,4.014544,6.156604,2.784443,1.400068,-9.640463,-5.726739,-4.217760,7.698235,3.907367,6.397060,-8.612411,-4.685181,-4.477917,7.558059,-5.247142,7.133032,5.449541,-6.416549,-0.128892,-8.343394,-1.980427,0.834013,-4.087596,1.550589,2.717123,-9.106072,-1.066849,5.632235,-1.968760,5.643567,8.003361,-1.898096,-4.731117,5.525530,0.399675,9.228866,8.809850,-3.276656,-3.268256,5.840456,-4.008946,8.683531,-9.293824,7.254248,7.547011,0.350202,2.200340,5.294774,4.322631,-4.305057,7.536176,-8.119118,4.944936,-2.732004,-4.366458,3.832506,9.492579,-9.160608,-2.051564,6.422452,-6.862681,-3.588971,-7.037386,9.372114,-2.428286,-2.880490,-7.342258,-5.107486,1.755828,8.883513,-0.396944,-3.847598,4.501140,0.290864,-2.704422,8.016872,-6.694259,9.934633,-1.751001,-5.795723,-9.721693,-2.118204,7.591402,-3.456814,1.314823,-2.644278,0.401166,-2.963361,8.420835,-7.486579,-3.688368,4.337532,0.975674,2.603630,0.905673,-7.480672,1.512590,-2.480410,-4.447187,0.707974,-3.795227,7.316605,2.615107,-9.826920,-1.273544,-2.107118,7.009581,5.774845,-3.441400,-1.380476,-0.839290,-9.779488,5.622965,-4.401995,6.311888,7.600191,1.163217,1.144572,-1.688948,-4.545643,-8.431181,3.452279,-3.113085,-4.967151,-4.838215,-1.241016,-8.559730,-8.801658,-7.139068,4.306775,-0.674980,2.021787,9.799678,-8.699365,1.353543,-3.580243,-4.028939,6.500679,-1.586245,8.621648,-2.840047,4.994683,-6.365872,-3.451919,-5.521576,7.207237,-3.503825,2.081289,2.321458,-8.526154,-8.404704,2.000963,-7.072937,8.774760,-1.664308,1.841513,-9.721547,1.121733,-0.322698,7.459391,9.902767,-7.012601,-0.291185,-8.267459,7.574445,-5.427206,1.476465,-5.674744,-3.594120,0.572471,4.934210,0.244896,1.579580,-0.565563,-5.339257,2.815589,-6.682356,3.785697,6.247605,4.730270,-6.043251,-7.149152,8.142830,-4.320569,-1.036687,-7.095294,-1.678948,1.689745,2.611327,-0.311051,-5.779069,0.665249,7.171639,3.301421,-8.098065,5.776975,-2.277791,7.421036,6.394211,2.319475,2.783976,0.850717,4.077469,8.762839,-1.469262,-1.693204,7.823692,-1.010843,-6.761837,7.111493,-8.676532,-6.828069,-1.851396,-5.603519,7.177825,3.003259,4.646517,-3.373614,-4.458176,3.428558,3.573232,7.193026,-6.069972,8.131523,3.823599,5.610285,-3.740539,-0.833037,7.160496,-5.111479,-5.388772,3.332654,-0.817174,-0.165245,-3.583529,5.468453,0.990549,-9.508871,-4.124604,-1.637067,6.877148,1.809927,1.210890,-1.673709,-3.868047,4.441674,3.406705,6.585869,0.411153,-6.232103,4.280571,9.545649,-1.023072,-2.418113,-0.980350,-5.664974,4.123039,6.713675,2.979324,8.776135,-9.752921,-0.107867,-1.843029,1.073062,6.156375,5.120208,5.094642,1.754972,-0.913379,8.840933,-1.174798,-8.836488,6.555705,6.167961,-2.048969,5.687502,2.687978,-6.843684,9.979390,7.010025,8.048465,8.438034,-1.908177,-5.162397,8.587119,5.889439,4.867769,1.027143,4.586337,1.674089,9.255067,-8.771711,-7.038416,-4.597283,-9.360503,-5.042483,-8.765192,-9.745504,-4.365969,-7.313845,-9.718608,4.697140,6.242220,4.124608,8.508046,-4.108838,7.051225,-4.299373,5.640983,2.137696,-7.776257,9.903891,8.468301,8.835480,-3.297821,2.201955,8.641187,-7.986735,2.624943,6.858621,-3.467556,-2.062238,-7.367669,6.958852,3.779384,9.743429,-4.894662,3.248871,0.639015,0.452617,-8.090004,-3.940901,-9.918530,-2.175448,-2.605225,-0.051113,-4.794451,-2.788209], dtype = "float32")#candidate|9830|(728,)|const|float32
const_9831 = relay.const([-8.363088,4.612980,1.670626,9.429810,5.972826,-2.963612,6.127249,-4.642109,-7.973748,-9.818093,-1.492647,7.861179,6.307568,-8.548287,-6.349722,2.090042,-6.236885,4.561805,0.544578,-5.928210,-9.525228,-7.888780,-5.396947,8.505202,-1.749091,8.124089,-3.182688,4.310215,8.537726,7.417536,-9.269531,-8.016738,5.327758,-6.476534,-5.508312,1.699627,-1.833316,0.930520,-0.441134,1.072397,-6.801010,-2.431637,2.544743,-3.540812,8.085706,-8.668651,-6.274237,-4.034278,7.844637,8.951552,-5.002756,-1.376283,-1.900014,1.193073,-0.196429,0.449612,3.800309,0.043277,8.612703,6.834809,3.223534,7.317368,4.005045,3.326051,-7.748924,-8.243178,-4.026189,3.896926,-4.654179,8.170952,3.242497,9.845953,-0.922658,-4.388609,-4.242355,-4.620426,6.214421,-8.824462,-2.006581,9.334138,-1.613812,1.865335,-7.309918,5.836034,6.297266,0.978628,-6.285474,5.423530,-4.127587,-1.479973,-4.505302,-4.660879,-8.169418,-4.122237,5.683026,-6.074074,7.077461,-9.954112,-2.091121,0.706184,-3.332590,8.259303,9.444818,-8.828823,-1.118100,2.437681,2.838419,-7.757820,-6.492638,-7.463477,9.719306,2.820496,-9.516548,-2.473237,8.476404,-1.562237,2.175264,-6.944787,0.281189,-9.217709,-6.548942,-2.981947,3.783629,8.759266,3.009163,9.061866,-6.649726,8.837766,-6.925598,-5.588509,5.653405,-5.942740,-2.298816,-5.876684,1.735611,3.035193,-0.667910,9.309130,-4.363298,9.342572,2.383253,-7.937417,5.948817,-0.930975,-7.434446,3.890294,-5.434720,-2.745850,8.842990,-7.550588,0.123386,-9.292976,5.288150,6.187472,-7.023818,1.492961,-0.097251,-0.960921,0.557638,6.408988,4.407754,-1.677661,-7.832610,-2.098636,8.218416,-0.526249,-0.715415,-6.684288,5.511688,3.586188,-2.118280,1.110718,3.875498,-3.563798,-2.441666,-4.229945,-0.639915,0.372639,5.449262,-1.593322,-0.922546,6.094729,3.245112,-2.777718,5.396121,6.615853,-3.005269,-5.178271,-8.138929,6.933343,3.464064,-5.173655,-3.155387,-5.970562,4.307532,-8.335529,-6.015786,-4.939170,3.805289,-6.057053,-3.087870,-5.620552,-1.154579,-8.083432,5.218216,2.472158,3.603551,-2.877976,-1.914729,4.065775,-1.200465,7.580788,6.923602,-9.099515,4.003295,-5.076841,-7.635839,-2.877098,6.420648,2.062053,-0.029446,1.754625,-7.025667,5.606224,0.764053,-5.757832,-0.275345,-6.047745,8.287199,-4.732770,7.729397,9.105727,7.921792,-1.856502,-7.370903,9.029958,-3.253255,9.997575,9.118177,2.214212,5.841870,-8.895228,-1.135874,-5.462428,0.474231,-6.613574,8.449579,6.020003,1.670428,7.964059,6.158749,4.434821,-4.992892,2.820749,1.971375,-7.001571,-2.734409,7.362492,8.466215,8.098561,-6.436887,8.382658,9.004630,0.008594,-0.823867,-4.862675,2.665323,0.765688,-4.081904,0.687384,-6.976144,7.349819,-4.185057,1.000897,-9.292371,7.078254,-6.043076,-4.005982,9.767683,-1.008839,-6.508509,4.672547,-0.093048,1.702379,5.131427,9.761875,-8.658788,3.362799,0.148136,-9.830940,0.938211,-0.790055,-0.740629,4.610599,-4.604329,5.544810,-7.583942,3.068899,-9.361569,-4.303806,9.530918,6.214633,-6.541958,4.442156,4.085324,0.275265,4.789731,-1.593877,-0.117901,9.857854,5.264236,5.016721,1.566675,3.507918,-5.821947,-0.670604,6.666557,8.646033,-3.817398,1.538619,8.486880,-4.727928,-9.610055,-5.360617,-0.574780,-2.785936,3.170340,4.916404,-1.965830,-9.425147,-7.461671,-8.895421,-3.880550,5.572984,-6.203856,-3.554376,3.316911,-2.185319,9.165608,-0.014663,-1.990218,1.582465,5.772210,0.290502,1.899820,-5.945610,-4.485093,2.406044,-2.316297,6.118183,9.558978,-9.784320,-9.191281,4.601535,-0.179984,4.350909,-5.131343,-7.291092,5.530353,3.843208,8.749393,1.036236,-0.381644,-6.897898,1.013911,-9.823013,9.764141,-5.071951,8.289621,2.484735,0.360031,2.433129,5.520282,5.618972,7.434728,-1.167921,-0.763430,-2.022552,-1.250588,-3.330838,-0.853766,1.612877,9.462814,3.104282,8.609137,-7.675461,0.217081,-3.017091,5.314961,3.846696,-9.109070,9.161138,9.403925,8.482515,-2.992820,-4.119360,-3.784916,-2.599607,4.116356,5.035782,-1.197933,3.261092,2.963755,8.978391,-5.245059,5.885827,-1.127868,4.761077,-9.609782,9.495330,-0.459295,6.433895,4.769967,7.276484,2.313726,9.584839,-1.758590,2.860859,-5.131038,8.163682,8.438264,7.857648,4.704098,-5.609656,-4.371209,8.235292,6.078620,3.684128,-9.362432,2.871229,2.894532,-4.454206,0.179129,0.670168,-2.986612,-3.990604,9.324095,3.740534,3.166410,-5.268820,5.375999,-7.835000,-2.756002,-1.215186,-9.056611,-9.646972,-5.502762,-4.235309,-9.012817,-1.892108,-3.288466,3.117270,-2.838718,-7.648115,-3.999874,7.882717,-5.251388,-3.673925,-5.475160,-3.528115,-7.963768,-8.633075,9.772311,-4.350457,6.878822,-5.462036,-2.099163,6.097639,-6.238016,-7.371997,2.106638,-5.246505,5.647228,-0.889713,7.596559,5.379426,-8.755056,3.481315,-1.780084,2.777223,-8.494226,4.013314,7.040070,7.719909,-6.382734,-7.703005,-6.372202,-7.019846,0.814001,1.741979,6.463789,-1.459288,-0.119050,2.232342,-7.852185,-6.701367,-4.469579,6.344107,1.595060,8.548957,-5.406418,1.671186,-5.784791,-0.177201,-1.348603,9.747293,-1.123338,1.576618,1.450228,7.343539,-9.072165,-8.259993,9.966368,-8.404084,-7.741568,5.606661,-2.815721,2.102745,-6.288441,-5.803484,6.378414,-8.410640,-8.057753,4.708813,-4.347640,8.161508,-2.638541,0.247041,9.486809,-3.117412,1.344667,-7.073116,-9.258951,-0.957922,9.508851,-4.391577,-0.817016,4.930502,-1.342016,-4.682879,5.931377,4.374503,4.830118,-6.477852,0.779790,2.684936,-7.007750,-5.414473,9.208162,4.920587,9.547393,-2.594379,-3.799062,-8.736641,-4.620243,2.749038,-4.019503,2.805917,4.890934,-9.411289,2.409142,0.005534,9.892407,-6.617933,-3.467963,-3.866041,8.872685,-0.246715,-3.404248,2.729812,5.604640,-9.873691,0.418802,-2.606603,6.173049,7.703074,-2.424335,-1.715628,-2.027984,-0.844998,-7.606454,7.583979,5.645469,7.154527,-7.759375,-8.988992,7.794534,-9.526410,6.981271,6.502110,6.480636,8.654520,2.634990,-6.785678,-6.190545,9.575977,0.976497,8.280263,-8.099987,-0.350331,6.614120,-8.784971,3.515819,2.449679,3.053258,-5.313818,-1.774941,-7.041152,5.803776,3.608624,-1.415088,7.307675,0.034102,-6.332318,9.794126,4.163433,-6.728272,-6.870765,-2.604885,-9.806871,-7.921239,-9.127930,-1.799378,9.732371,9.766155,9.055563,5.466459,1.814602,1.235027,-6.140379,-9.498475,0.125379,5.541157,4.903522,-3.836011,-8.975727,-6.767635,5.183733,1.612782,-1.190003,0.523197,-7.219076,-7.142300,-9.371843,-3.434851,0.074142,-0.554196,4.583374,-9.784383,3.033189,-0.835333,6.802866,-2.213435,7.597574,2.420958,1.114217,5.800237,2.494881,6.317298,-8.677638,-1.240715,0.450749,-8.254973,5.549098,8.538304,7.685105,-8.021509,-4.971189,7.479990,-5.713507,6.325932,-9.632303,-2.992519,6.911720,5.986782,5.957520,2.223202,-1.720864,0.871036,-8.672781,-1.278025,-3.502181,-7.091223,7.736964,-1.456461,3.216122,6.055530,-6.370399,7.191140,-5.379592,5.279049,5.803593,-6.502160,2.771927,0.040680,-3.958341,6.526722,-8.255712,4.134824,-4.367321,6.433332,9.833391,2.668916,-4.890488,9.544966,0.619183,-5.344324,4.043531,-3.902599,-9.591897,-1.536727,2.409111,1.087633,-4.274894,5.325586,-5.686324,-8.965182,-1.394714,-2.150521,-7.379704,1.144646,-0.748288,-7.962593,-3.648238,-4.489354,-0.058510,9.303322,4.259185,0.439283,8.532408,-8.126362,-4.521020,8.038712,-1.454508,3.458711,-4.031238,-4.783854,3.976502,-1.132646,3.005310,-1.371001,-0.914316,2.996411,3.564798,6.375008,5.267794,-5.901598,-0.353628,-0.183460,3.091833,6.452156,-1.902023,8.984095,5.984627,3.841362,-4.591754,-7.638352,5.821237,-4.495558,4.400514,6.921921,7.243717,-3.460511,-8.741850,-4.265660,-8.834277,7.252365,1.307217,-9.209312,-1.914261,9.697479,-9.572115,5.264784,0.109834,-4.229939,1.475159,-4.178539,4.392878,-8.215278,2.270155,-4.691953,5.897417,0.481235,-2.926925,7.998145,8.152084,9.758027,-7.577737,-5.257001,5.813045,-4.298984,-6.861000,0.125335,8.330830,3.773569,1.234055,2.808377,0.015391,8.053466,-4.188315,7.096205,-9.555087,6.264427,9.733205,-7.493844,-1.883103,-0.580704,2.263603,4.100010,6.176572,-9.067578,-0.411922,5.786030,-6.364295,1.662542,6.372365,-7.840346,6.396506,1.273844,1.371560,7.105857,-4.597051,8.413879,-5.632308,1.540269,4.733587,-4.186370,5.187681,-6.678365,-0.229138,-0.338714,-0.572509,9.437315,0.365292,-6.718339,2.271630,-2.712027,4.140408,6.408913,-4.702158,-1.181301,-1.894052,4.132930,-2.276996,7.582462,5.624524,2.938346,0.875221,-3.687719,7.053853,6.483054,-0.565978,-3.972851,1.864883,3.158823,-2.252299,-6.676823,-0.706441,-7.716120,4.352827,-0.328167,-7.715406,-7.752672,-9.504970,-8.954121,9.846224,-4.853015,2.166382,-2.642276,4.118900,0.978557,5.548499,-2.636517,4.077297,-9.977851,5.727650,-1.136955,-9.197406,9.846856,8.970109,-2.858636,1.569851,-2.321534,-5.703155,-5.327120,9.875008,0.193833,2.290799,-3.735540,3.078861,8.362793,3.913904,-6.735820,-7.421169,7.520077,6.233824,-4.697445,-8.702306,8.814627,3.006769,-7.841787,4.717528,7.534699,-0.266758,-4.579516,6.089494,-4.156517,5.421717,-4.672337,-7.307101,2.466094,-1.623291,-9.474342,-8.615956,2.629311,7.400311,-4.905820,0.424259,6.898077,-2.042232,2.392222,0.798765,-4.890892,-3.807989,-6.614240,-8.111426,-3.655267,-4.061812,-0.681818,6.600415,-0.646955,8.144032,3.093999,2.950084,-7.278895,-7.350063,4.233672,1.128617,-5.637018,-2.952841,-1.237517,-8.146100,9.046013,-6.353251,-0.250539,2.249133,-6.213617,6.574230,-9.486564,0.891240,-5.379334,-5.364798,7.843092,-8.034977,-6.930834,6.616343,1.699028,8.317802,-6.220642,-1.673899,7.116143,5.692385,3.235934,-9.588236,3.366001,-1.303284,1.997427,5.013754,6.213498,7.098644,6.750663,-1.471566,-0.043066,1.736516,5.989122,7.979799,-0.720846,7.277602,-5.769403,3.195988,1.512135,2.355495,-4.489950,0.416655,-3.754295,5.976007,0.429648,9.953949,-1.680610,-5.331519,-0.967515,-4.139761,1.893037,-0.785941,9.350612,3.428506,-7.012493,-3.145076,-3.872949,-5.045229,-2.683636,-2.251586,7.619633,1.183419,-8.560212,-0.779118,-8.098025,2.104955,-6.871406,7.119813,3.140963,-4.330194,5.880423,1.298747,-2.697559,9.105647,5.804504,1.352823,7.799516,-0.135514,-0.513109,-3.950206,-5.153169,-5.184316,-1.225987,-4.004584,9.704890,4.943519,1.016098,-7.424873,-5.292041,-0.204298,9.565132,-9.266837,6.883080,-6.477037,2.166320,-4.373109,1.018926,-1.854451,-0.831836,1.048023,1.835666,-7.059123,2.423892,1.204372,-3.051165,-8.523429,2.115728,-0.584494,7.092942,-4.680075,-5.667841,-1.916004,-2.782855,5.688550,-6.868150,-0.722372,5.409656,-2.858384,4.100401,-0.710539,-1.797811,5.467184,2.787230,-6.541922,-6.058770,-9.981386,9.309295,-0.678176,1.981149,-0.352200,7.341529,-0.247010,6.034239,1.775527,-6.813270,4.866475,-8.783999,-8.665170,-8.542858,9.799166,4.448740,4.007507,-4.557328,-9.819410,8.378537,1.834662,7.933994,9.357062,7.997332,4.346809,-9.130437,-9.426230,2.243774,4.211510,2.497645,2.440539,-2.924136,5.819690,-0.355510,-9.808329,-1.047429,-0.171348,4.400515,-6.647817,5.763223,-6.467913,-9.222910,-6.865677,1.860551,-9.603972,-2.279882,-9.962711,-0.799692,-4.077461,1.304977,6.969827,-6.845013,-9.362688,8.056894,-2.252095,-5.609072,3.181835,0.642935,9.063086,5.738086,0.530138,9.597066,-7.910816,1.631686,-2.964166,5.113922,-9.468535,-2.775245,-3.155556,-9.637168,-1.860752,3.077278,1.768666,3.876955,-8.674001,-2.906549,4.529767,2.624179,-1.806412,-7.124605,9.739435,-9.450368,8.420663,-9.646696,-2.050340,6.068822,-9.839342,-8.605466,3.008579,-5.521420,-8.959197,-9.530387,-8.097967,5.348886,-6.401926,2.361927,-5.886654,-7.181379,-0.890624,4.420982,4.501556,6.589950,1.208810,0.296703,-8.636160,-8.388100,4.186936,-8.290417,-9.572230,-2.751251,8.403855,8.073362,4.501548,2.238885,-7.682431,-6.106561,3.095183,4.667652,-4.780779,-3.550755,-3.069467,5.453053,2.383525,8.702551,-8.428442,-8.572699,-4.230409,3.660162,8.970679,1.867205,8.026094,3.307910,-6.998802,5.676862,-0.434579,2.960842,1.419350,-4.330165,-9.956066,-9.200451,4.679633,-9.011458,-4.657436,9.134397,-9.261898,-8.098780,-9.747023,8.459082,-6.221565,9.071978,-4.198197,-5.988859,-8.804701,-4.490584,-7.628053,5.922349,6.608614,6.484223,2.696388,-8.883636,-3.581552,2.025954,-7.298345,6.239217,8.957629,8.325022,7.422342,8.434634,-3.584750,-5.614876,9.512415,-1.153113,0.619907,-4.612869,-0.128023,-4.137936,9.250804,-7.021155,-6.689178,0.452670,-8.708270,2.785116,-6.857226,0.722301,-2.969709,1.197535,8.232395,5.222483,-4.947459,2.771384,-4.077087,4.330377,1.137019,6.457584,8.606983,-9.332378,-0.083863,8.330025,-9.101892,1.349376,-6.098983,-9.914228,4.568310,-4.921130,-2.581189,-8.369211,3.584122,-4.909713,5.657160,0.725611,-9.316174,5.538031,4.778484,9.420060,8.076962,1.418887,-8.724810,-6.962610,3.908620,8.348240,-9.838286,-6.570349,3.625031,9.933124,-2.524421,0.771096,-6.505552,1.318286,3.397000,9.605345,-5.923035,-5.161997,4.620857,-0.698478,8.147925,-5.930574,6.938927,8.859019,7.172903,-6.877173,2.304652,3.082585,-5.540762,-6.098910,9.640511,-6.615041,-8.171127,-4.168699,8.801506,-3.436305,-1.984846,7.395672,7.769549,-8.608378,8.634583,-8.495338,-9.509958,-6.691585,3.828232,-1.021335,-3.645961,-6.686897,5.130450,-9.592555,6.435975,4.371948,8.963917,0.230990,-6.681832,-2.480130,-5.766390,-1.907493,-2.326500,3.669305,7.737687,-6.665511,0.117571,-9.064352,-7.000518,2.880391,1.046345,2.030979,4.821063,2.490901,8.435108,8.507779,7.929076,-3.280507,-5.356761,2.813417,-2.193077,-6.571482,-2.323476,-5.225970,7.791086,-1.183337,4.119082,-6.437610,-6.554193,-8.421732,8.690777,-7.721958,1.469663,-3.390202,-2.093723,-4.876284,6.106066,-4.823432,3.168624,-6.145659,8.172360,-2.019705,1.972287,1.574762,-2.163157,1.435734,-9.210352,-1.440479,-7.290910,1.777288,-8.790788,3.237721,-1.482570,1.212236,5.972276,3.430051,-3.166233,9.056761,-0.484691,-2.374559,-9.875004,-5.707856,5.401646,-7.143938,6.313191,-8.158415,1.997201,5.345986,-1.374714,-6.292655,7.511756,-6.107910,4.378670,7.920602,-8.627199,-8.817112,8.442532,0.657994,-9.685920,-8.078185,-9.966688,7.227116,6.498438,3.674669,-8.289720,5.475667,6.621944,8.097163,9.757176,-4.643173,-8.022361,-1.470168,5.192066,-2.874777,5.455250,0.805552,-4.230439,-9.689595,-5.562296,7.803711,8.097554,-5.167992,-0.667560,4.955795,-8.536309,9.246445,-4.350297,-7.021816,-1.276825,4.507542,9.837147,6.175908,-4.837664,8.333657,0.933857,3.045991,0.605039,-9.977387,1.909723,4.707230,8.083826,6.250785,-7.129627,-2.661673,-9.579845,0.027590,-1.372641,3.956496,-5.090089,6.888318,2.769017,-9.077053,-2.595041,-8.183445,-0.758375,1.164341,3.749603,7.153064,-4.929769,-4.878315,-7.335299,2.141072,-2.030760,0.600314,8.683974,-8.395777,6.372065,-6.746795,4.427076,9.556429,-7.113723,-4.481345,5.039075,-3.031047,9.707448,8.428865,-6.215850,-7.421032,1.809917,9.285322,6.973955,-3.489890,-8.382753,-5.044233,8.692647,3.063857,3.159445,1.020397,9.514529,-2.470166,-3.289099,-6.153816,-4.514720,7.356222,-2.193909,9.122010,1.076356,-1.842628,-4.476587,7.636117,0.596400,9.786386,-3.904830,5.925551,-2.330492,-1.662347,0.744154,2.700830,-2.244599,-9.013233,9.139069,-2.962385,7.933059,-4.314286,0.529243,2.018776,-8.546765,0.768718,-7.672135,4.088918,7.364541,3.127250,-7.729930,-6.715171,-2.053556,-2.718857,-4.666519,-7.800691,0.215412,7.863073,-5.017858,3.862514,-5.113114,-9.907765,-5.284991,2.895900,0.840418,-8.632424,-5.465432,-3.761915,6.258465,-7.288525,6.448429,3.218241,-9.594928,-6.663357,-1.523074,4.078325,-6.177190,7.126130,1.402037,-4.618272,1.466194,4.293316,-1.650495,-3.042249,-9.286279,5.131670,8.263505,-0.766153,-5.107341,6.524470,5.830389,3.903034,-8.407836,-9.510001,2.308979,-7.144401,3.600845,-8.270120,-3.418839,-4.578734,-7.247317,-1.648411,-6.646422,6.924561,6.557098,5.525946,6.793762,1.705603,6.892987,-0.385832,-4.388162,-7.574544,-0.058368,1.466274,1.093104,3.447404,-0.823556,-2.368042,-1.003908,8.169515,-1.456692,-4.354749,1.466692,5.363033,5.288939,5.513707,-5.707332,-4.930608,3.113381,5.318072,4.287055,-6.141607,4.368211,-0.360512,-2.893213,1.193589,5.846450,-6.079281,4.133137,6.940818,6.882960,7.620959,-7.362703,-6.495274,0.160068,2.765294,-7.033712,-6.100365,-8.417243,-7.259683,-5.473490,4.897893,6.376083,-9.298126,7.404435,-4.066216,6.611559,-3.220797,8.451082,8.792644,5.623658,2.253024,-7.789529,2.934195,-0.502836,1.197050,3.090011,-9.507910,-4.570196,-4.480497,0.922078,7.747772,-5.612642,-4.927286,-8.053811,-7.348299,-2.969434,-0.556802,-2.477228,6.642392,4.256319,2.096478,5.140046,0.944488,2.348643,9.721348,-7.347627,0.296170,2.200835,-7.857730,8.866163], dtype = "float32")#candidate|9831|(1680,)|const|float32
const_9832 = relay.const([[9.763602,-4.662445],[-3.188369,1.337833],[5.245615,5.904840],[-1.500671,1.203169],[5.844182,7.681076],[4.147328,2.188572],[6.341799,-1.222766],[-4.247934,-3.604673],[3.847168,-1.719712],[-9.439755,9.242844],[-9.442131,-2.262713],[-2.320513,-1.816283],[-8.406778,-5.989370],[2.921060,-5.900006],[-0.537353,2.475027],[4.400626,-0.563986],[-5.959571,-0.033049],[-9.685460,-1.534321],[5.487161,-2.093491],[2.213558,7.570484],[-8.329995,7.528988],[9.072834,-1.002516],[-3.731178,-9.037011],[6.624385,-5.241989],[4.005884,6.501500],[0.450311,4.243508],[-9.865627,-9.362141],[-1.560525,-7.622755],[4.408937,-6.703964],[9.879920,-8.494113],[-1.061230,-6.640513],[0.307641,3.327561],[5.271400,-7.740470],[7.480439,3.883158],[3.969851,5.255373],[-0.050242,2.356471],[7.267299,-9.806281],[-4.257819,-2.568734],[-3.222246,7.998735],[-9.981704,-5.367708],[1.038586,-6.348337],[-4.606291,-5.988976],[7.095625,8.961958],[6.120830,7.027940],[1.187475,-5.162158],[-9.010527,-0.480258],[1.729941,-4.386106],[7.909561,9.957659],[9.079435,7.480594],[-6.558812,-6.846924],[7.664162,9.147033],[-8.692244,1.906366],[-5.057484,0.652484],[-9.248272,0.431514],[7.288532,3.012590],[4.513428,6.019948],[-0.807269,-6.094341],[2.811741,-2.333788],[2.381266,3.742673],[-4.834056,8.332107],[-0.322369,6.764743],[-7.822314,-5.140367],[-3.502435,-6.364956],[0.228699,8.993413],[-2.538328,-7.206364],[-3.557065,-9.309652],[-1.038441,1.431250],[-9.619463,1.714868],[5.313975,-2.748511],[-5.902421,-6.393434],[-4.597049,-9.363442],[-5.149063,-9.829813],[8.788626,-5.515516],[6.051176,2.765461],[0.946222,0.654987],[5.091447,-0.135027],[5.611475,3.003525],[-3.580155,8.867981],[-5.997447,-9.224587],[9.983353,-7.834800],[0.047630,-6.968573],[3.634504,-6.481437],[-1.628565,8.649111],[-6.202830,-1.556288],[-8.621179,4.818621],[7.906074,5.605367],[-6.564167,3.782963],[-9.896355,5.056372],[-4.192443,3.228465],[7.362189,-4.957409],[8.898405,-2.378794],[-8.644434,4.722058],[-9.334971,0.429463],[5.414723,4.152881],[-1.249457,0.379390],[-7.235713,-0.793365],[-3.043451,2.573285],[8.200752,7.083594],[4.984952,-7.207821],[1.415857,-6.033002],[1.486738,8.457306],[-8.841788,-5.574041],[9.671084,-9.172145],[-6.385011,5.769674],[-6.404702,8.765269],[-7.433173,-1.490657],[-2.208346,2.248556],[-4.887489,8.685483],[6.984218,0.244760],[0.641725,-6.624530],[4.831993,2.618607],[9.611113,2.696338],[2.030155,3.979515],[0.560980,7.704820],[7.016269,3.432398],[-7.042175,4.880999],[-4.954011,1.021929],[-2.287846,-5.428114],[-3.145433,-4.448912],[-3.610086,5.898023],[-2.553009,-0.139450],[-1.408596,2.142057],[-5.972612,-9.330578],[6.499564,2.507913],[-8.666057,2.855308],[-0.448982,-8.999473],[2.974131,9.251846],[-5.347738,7.819674],[7.865175,6.044420],[3.976376,2.189110],[5.527809,-1.395823],[3.128107,-7.267255],[2.121528,6.389079],[-7.715970,-4.689507],[-6.266489,8.436060],[1.946343,4.630237],[-6.881055,-5.956240],[0.890929,-9.856495],[8.957239,7.922337],[-5.203288,-3.861519],[6.579214,1.945583],[-2.384539,-9.193572],[4.785138,8.521256],[-9.901453,-1.612478],[6.571173,2.171483],[-5.113864,-4.310114],[-2.858227,0.833249],[2.385717,-3.351486],[8.081635,-2.851900],[-7.034567,-3.173952],[5.040154,-6.952473],[-6.851579,-5.326121],[2.381536,-9.755529],[4.173807,-4.296394],[-3.123685,-2.924042],[6.249170,-2.322581],[1.494710,-8.332993],[7.564348,2.985202],[0.200359,4.506118],[-8.961819,8.724061],[9.677392,-0.356055],[-6.752291,-1.690933],[-3.835030,8.940267],[-4.335861,-9.750763],[-0.895755,4.919951],[6.167925,-3.012231],[-3.549041,-8.880562],[-5.361194,-3.323082],[9.052640,-5.878590],[8.825655,-7.031143],[-5.165848,-7.515353],[1.570705,-6.489754],[0.254758,-4.602991],[-8.031764,6.031799],[-2.380930,-9.689721],[-0.209970,-4.544121]], dtype = "float64")#candidate|9832|(176, 2)|const|float64
const_9833 = relay.const([-6.574102,0.374190,-1.098957,1.015596,8.930886,-0.137596,9.046555,-7.899776,3.343960,-1.660338,8.712243,3.874439,-4.234830,0.268359,9.915701,8.390325,-1.238202,-0.349982,7.507507,6.742354,9.991342,-2.011148,-6.639324,1.157051,6.183962,9.888106,-2.259295,-6.177158,0.368532,5.928545,1.931799,-7.842974,6.397264,-5.680315,-4.633551,5.198809,-9.979116,-6.434126,6.581723,-2.840178,4.538917,2.172951,-2.017175,-3.497708,2.651206,5.162677,-4.201446,-4.850761,-4.801716,7.756020,-3.210468,-5.804477,-1.905759,-1.253127,0.698255,2.906909,-2.426586,-8.784477,-3.355067,6.027416,-5.513851,-4.212758,-7.997318,8.439380,-0.192295,-5.276027,6.103330,7.022352,5.886810,9.887054,-8.247496,-3.328185,-8.897358,-0.462082,9.724589,-0.269008,-6.740634,2.941515,-4.775952,9.624580,4.754315,9.278413,9.490509,-5.909844,-0.494509,0.969689,-8.763276,-4.796654,-4.679174,-4.873784,-7.391541,-7.863003,6.386797,1.159501,-2.991203,-2.257962,-5.589811,-0.565938,-3.140532,7.622317,3.429758,-2.050207,-9.070214,-2.486508,1.988780,-7.202994,3.878797,-7.346433,-5.557408,-1.229430,-3.438867,-0.866360,7.165565,-6.418308,-6.835370,-3.834725,-8.873755,8.178330,2.004739,-9.893275,-5.967674,-1.504313,3.180677,1.637906,5.436648,-4.306938,-0.399175,-4.704531,4.020305,-5.047273,-2.505567,4.749373,4.635216,6.023003,-0.850947,9.079508,7.766103,7.571345,-5.969552,-2.232822,-7.555763,4.296545,-8.001451,-7.296958,1.624102,8.899233,-1.570414,-4.796930,1.041084,-1.305564,6.921539,1.118911,-5.518793,8.216690,8.443998,-8.129903,-1.960068,-6.049428,7.805267,3.362811,3.932944,9.653806,5.722734,0.787477,0.989344,0.924619,7.180185,2.233776,8.161364,-4.218542,3.620857,-1.393000,3.322766,-7.376278,-8.054111,9.805099,-2.104502,4.848292,-5.286756,-1.379562,-3.831198,2.339278,-2.136998,7.182172,6.975192,-2.800233,-9.138381,7.071241,-2.211549,5.973945,9.649421,-6.372089,9.273141,6.728438,0.339300,5.850022,8.312075,9.900338,-7.821669,9.723410,6.351507,-3.264245,4.983102,9.882843,7.199549,-3.231165,6.378854,-7.230606,-4.818710,-7.710157,7.108365,3.092372,-3.913151,4.401475,-4.636383,2.306473,-1.154256,9.700042,2.618922,8.714798,8.019122,9.929748,3.628892,2.259697,2.677690,9.775876,-3.704063,-4.393370,8.949006,9.714686,-1.284152,2.254164,-4.964734,-6.382471], dtype = "float64")#candidate|9833|(234,)|const|float64
call_9829 = relay.TupleGetItem(func_2414_call(relay.reshape(const_9830.astype('float32'), [7, 8, 13]), relay.reshape(const_9831.astype('float32'), [1680,]), relay.reshape(const_9832.astype('float64'), [352,]), relay.reshape(const_9831.astype('int32'), [8, 15, 14]), relay.reshape(const_9833.astype('float64'), [3, 78]), ), 6)
call_9834 = relay.TupleGetItem(func_2420_call(relay.reshape(const_9830.astype('float32'), [7, 8, 13]), relay.reshape(const_9831.astype('float32'), [1680,]), relay.reshape(const_9832.astype('float64'), [352,]), relay.reshape(const_9831.astype('int32'), [8, 15, 14]), relay.reshape(const_9833.astype('float64'), [3, 78]), ), 6)
output = relay.Tuple([uop_9795,bop_9815,call_9829,const_9830,const_9831,const_9832,const_9833,])
output2 = relay.Tuple([uop_9797,bop_9818,call_9834,const_9830,const_9831,const_9832,const_9833,])
func_9851 = relay.Function([var_9787,], output)
mod['func_9851'] = func_9851
mod = relay.transform.InferType()(mod)
mutated_mod['func_9851'] = func_9851
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9852 = relay.var("var_9852", dtype = "float32", shape = (7, 9))#candidate|9852|(7, 9)|var|float32
func_9851_call = mutated_mod.get_global_var('func_9851')
call_9853 = func_9851_call(var_9852)
output = call_9853
func_9854 = relay.Function([var_9852], output)
mutated_mod['func_9854'] = func_9854
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9861 = relay.var("var_9861", dtype = "float32", shape = (2, 9, 7))#candidate|9861|(2, 9, 7)|var|float32
var_9862 = relay.var("var_9862", dtype = "float32", shape = (2, 9, 7))#candidate|9862|(2, 9, 7)|var|float32
bop_9863 = relay.power(var_9861.astype('float32'), relay.reshape(var_9862.astype('float32'), relay.shape_of(var_9861))) # shape=(2, 9, 7)
bop_9869 = relay.bitwise_xor(bop_9863.astype('int64'), relay.reshape(var_9861.astype('int64'), relay.shape_of(bop_9863))) # shape=(2, 9, 7)
func_8361_call = mod.get_global_var('func_8361')
func_8363_call = mutated_mod.get_global_var('func_8363')
call_9899 = relay.TupleGetItem(func_8361_call(), 0)
call_9900 = relay.TupleGetItem(func_8363_call(), 0)
output = relay.Tuple([bop_9869,call_9899,])
output2 = relay.Tuple([bop_9869,call_9900,])
func_9912 = relay.Function([var_9861,var_9862,], output)
mod['func_9912'] = func_9912
mod = relay.transform.InferType()(mod)
mutated_mod['func_9912'] = func_9912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9912_call = mutated_mod.get_global_var('func_9912')
var_9914 = relay.var("var_9914", dtype = "float32", shape = (2, 9, 7))#candidate|9914|(2, 9, 7)|var|float32
var_9915 = relay.var("var_9915", dtype = "float32", shape = (2, 9, 7))#candidate|9915|(2, 9, 7)|var|float32
call_9913 = func_9912_call(var_9914,var_9915,)
output = call_9913
func_9916 = relay.Function([var_9914,var_9915,], output)
mutated_mod['func_9916'] = func_9916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7880_call = mod.get_global_var('func_7880')
func_7882_call = mutated_mod.get_global_var('func_7882')
call_9918 = relay.TupleGetItem(func_7880_call(), 0)
call_9919 = relay.TupleGetItem(func_7882_call(), 0)
output = relay.Tuple([call_9918,])
output2 = relay.Tuple([call_9919,])
func_9920 = relay.Function([], output)
mod['func_9920'] = func_9920
mod = relay.transform.InferType()(mod)
mutated_mod['func_9920'] = func_9920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9920_call = mutated_mod.get_global_var('func_9920')
call_9921 = func_9920_call()
output = call_9921
func_9922 = relay.Function([], output)
mutated_mod['func_9922'] = func_9922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8796_call = mod.get_global_var('func_8796')
func_8797_call = mutated_mod.get_global_var('func_8797')
call_9944 = relay.TupleGetItem(func_8796_call(), 0)
call_9945 = relay.TupleGetItem(func_8797_call(), 0)
uop_9952 = relay.sin(call_9944.astype('float32')) # shape=(9, 9, 12)
uop_9954 = relay.sin(call_9945.astype('float32')) # shape=(9, 9, 12)
output = uop_9952
output2 = uop_9954
func_9955 = relay.Function([], output)
mod['func_9955'] = func_9955
mod = relay.transform.InferType()(mod)
output = func_9955()
func_9956 = relay.Function([], output)
mutated_mod['func_9956'] = func_9956
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9985 = relay.var("var_9985", dtype = "float32", shape = (1, 4, 5))#candidate|9985|(1, 4, 5)|var|float32
var_9986 = relay.var("var_9986", dtype = "float32", shape = (9, 4, 5))#candidate|9986|(9, 4, 5)|var|float32
bop_9987 = relay.maximum(var_9985.astype('float32'), var_9986.astype('float32')) # shape=(9, 4, 5)
output = bop_9987
output2 = bop_9987
func_9992 = relay.Function([var_9985,var_9986,], output)
mod['func_9992'] = func_9992
mod = relay.transform.InferType()(mod)
mutated_mod['func_9992'] = func_9992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9992_call = mutated_mod.get_global_var('func_9992')
var_9994 = relay.var("var_9994", dtype = "float32", shape = (1, 4, 5))#candidate|9994|(1, 4, 5)|var|float32
var_9995 = relay.var("var_9995", dtype = "float32", shape = (9, 4, 5))#candidate|9995|(9, 4, 5)|var|float32
call_9993 = func_9992_call(var_9994,var_9995,)
output = call_9993
func_9996 = relay.Function([var_9994,var_9995,], output)
mutated_mod['func_9996'] = func_9996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6891_call = mod.get_global_var('func_6891')
func_6892_call = mutated_mod.get_global_var('func_6892')
call_9998 = func_6891_call()
call_9999 = func_6891_call()
output = call_9998
output2 = call_9999
func_10000 = relay.Function([], output)
mod['func_10000'] = func_10000
mod = relay.transform.InferType()(mod)
mutated_mod['func_10000'] = func_10000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10000_call = mutated_mod.get_global_var('func_10000')
call_10001 = func_10000_call()
output = call_10001
func_10002 = relay.Function([], output)
mutated_mod['func_10002'] = func_10002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8545_call = mod.get_global_var('func_8545')
func_8546_call = mutated_mod.get_global_var('func_8546')
call_10003 = func_8545_call()
call_10004 = func_8545_call()
output = relay.Tuple([call_10003,])
output2 = relay.Tuple([call_10004,])
func_10019 = relay.Function([], output)
mod['func_10019'] = func_10019
mod = relay.transform.InferType()(mod)
mutated_mod['func_10019'] = func_10019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10019_call = mutated_mod.get_global_var('func_10019')
call_10020 = func_10019_call()
output = call_10020
func_10021 = relay.Function([], output)
mutated_mod['func_10021'] = func_10021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10000_call = mod.get_global_var('func_10000')
func_10002_call = mutated_mod.get_global_var('func_10002')
call_10027 = func_10000_call()
call_10028 = func_10000_call()
output = relay.Tuple([call_10027,])
output2 = relay.Tuple([call_10028,])
func_10029 = relay.Function([], output)
mod['func_10029'] = func_10029
mod = relay.transform.InferType()(mod)
output = func_10029()
func_10030 = relay.Function([], output)
mutated_mod['func_10030'] = func_10030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9067_call = mod.get_global_var('func_9067')
func_9069_call = mutated_mod.get_global_var('func_9069')
call_10099 = relay.TupleGetItem(func_9067_call(), 0)
call_10100 = relay.TupleGetItem(func_9069_call(), 0)
output = call_10099
output2 = call_10100
func_10107 = relay.Function([], output)
mod['func_10107'] = func_10107
mod = relay.transform.InferType()(mod)
output = func_10107()
func_10108 = relay.Function([], output)
mutated_mod['func_10108'] = func_10108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8545_call = mod.get_global_var('func_8545')
func_8546_call = mutated_mod.get_global_var('func_8546')
call_10129 = func_8545_call()
call_10130 = func_8545_call()
output = call_10129
output2 = call_10130
func_10133 = relay.Function([], output)
mod['func_10133'] = func_10133
mod = relay.transform.InferType()(mod)
output = func_10133()
func_10134 = relay.Function([], output)
mutated_mod['func_10134'] = func_10134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9920_call = mod.get_global_var('func_9920')
func_9922_call = mutated_mod.get_global_var('func_9922')
call_10167 = relay.TupleGetItem(func_9920_call(), 0)
call_10168 = relay.TupleGetItem(func_9922_call(), 0)
output = relay.Tuple([call_10167,])
output2 = relay.Tuple([call_10168,])
func_10171 = relay.Function([], output)
mod['func_10171'] = func_10171
mod = relay.transform.InferType()(mod)
mutated_mod['func_10171'] = func_10171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10171_call = mutated_mod.get_global_var('func_10171')
call_10172 = func_10171_call()
output = call_10172
func_10173 = relay.Function([], output)
mutated_mod['func_10173'] = func_10173
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10208 = relay.var("var_10208", dtype = "float32", shape = (9, 5, 1))#candidate|10208|(9, 5, 1)|var|float32
uop_10209 = relay.sigmoid(var_10208.astype('float32')) # shape=(9, 5, 1)
bop_10226 = relay.equal(uop_10209.astype('bool'), relay.reshape(var_10208.astype('bool'), relay.shape_of(uop_10209))) # shape=(9, 5, 1)
func_8545_call = mod.get_global_var('func_8545')
func_8546_call = mutated_mod.get_global_var('func_8546')
call_10229 = func_8545_call()
call_10230 = func_8545_call()
output = relay.Tuple([bop_10226,call_10229,])
output2 = relay.Tuple([bop_10226,call_10230,])
func_10233 = relay.Function([var_10208,], output)
mod['func_10233'] = func_10233
mod = relay.transform.InferType()(mod)
var_10234 = relay.var("var_10234", dtype = "float32", shape = (9, 5, 1))#candidate|10234|(9, 5, 1)|var|float32
output = func_10233(var_10234)
func_10235 = relay.Function([var_10234], output)
mutated_mod['func_10235'] = func_10235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8545_call = mod.get_global_var('func_8545')
func_8546_call = mutated_mod.get_global_var('func_8546')
call_10237 = func_8545_call()
call_10238 = func_8545_call()
output = call_10237
output2 = call_10238
func_10247 = relay.Function([], output)
mod['func_10247'] = func_10247
mod = relay.transform.InferType()(mod)
mutated_mod['func_10247'] = func_10247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10247_call = mutated_mod.get_global_var('func_10247')
call_10248 = func_10247_call()
output = call_10248
func_10249 = relay.Function([], output)
mutated_mod['func_10249'] = func_10249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7818_call = mod.get_global_var('func_7818')
func_7820_call = mutated_mod.get_global_var('func_7820')
call_10250 = func_7818_call()
call_10251 = func_7818_call()
output = relay.Tuple([call_10250,])
output2 = relay.Tuple([call_10251,])
func_10261 = relay.Function([], output)
mod['func_10261'] = func_10261
mod = relay.transform.InferType()(mod)
output = func_10261()
func_10262 = relay.Function([], output)
mutated_mod['func_10262'] = func_10262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8962_call = mod.get_global_var('func_8962')
func_8963_call = mutated_mod.get_global_var('func_8963')
call_10301 = relay.TupleGetItem(func_8962_call(), 0)
call_10302 = relay.TupleGetItem(func_8963_call(), 0)
func_4220_call = mod.get_global_var('func_4220')
func_4226_call = mutated_mod.get_global_var('func_4226')
const_10313 = relay.const([-5,-3,9,1,2,-3,2,6,4,-3,-10,6,8,-4,-7,-6,-1,-1,6,4,7,-7,-5,-8,-9,-1,9,-2,7,1,-6,8,8,8,3,-2,-1,-9,1,5,-8,2,-6,-6,10,-8,-4,4,10,-6,7,-3,-6,-5,8,1,-8,3,5,8,-5,-2,5,-3,-1,7,-6,6,-3,-10,-1,-6,4,-3,-9,6,7,6,-5,6,7,-6,4,-6,-3,7,-9,-4,-4,-2,8,-10,-6,-9,-5,-9,-10,7,6,-10,-2,-4,-4,4,5,-3,-3,-8,-9,-2,-3,9,5,-7,1,-2,6,6,6,8,-5,4,5,-9,-10,1,1,9,7,-8,3,5,-8,1,-10,-7,1,-3,5,1,2,-3,3,8,7,-10,6,2,-4,-9,-2,-9,10,-7,5,-2,-9,9,-6,2,1,-4,7,10,-8,8,-5,-3,1,2,10,-5,9,-1,-9,8,4,8,9,5,-8,7,1,10,2,8,-6,-10,-6,-1,1,6,3,-9,3,10,-8,-5,-9,-1,-7,-2,1,-7,1,4,9,-9,6,-7,-5,-10,-5,4,-2,-4,3,1,8,-4,5,-10,10,9,1,-4,-4,-1,-1,-5,-9,1,5,-9,9,-1,-1,-1,2,6,-7,-10,-7,1,6,-3,5,7,6,-4,-7,-9,5,9,9,3,-6,-8,5,-4,-3,4,-3,-9,-6,5,-5,-4,-6,10,-6,3,5,8,-9,1,-9,2,-7,-10,4,-6,10,1,-3,-1,-5,5,-4,-10,-3,-6,5,4,-9,-4,-10,3,-2,-5,-7,-6,-3,-4,1,-1,-4,-1,-5,2,-9,-10,-9,-8,9,-8,2,-1,-4,-1], dtype = "uint16")#candidate|10313|(320,)|const|uint16
const_10314 = relay.const([[-1,4,-9,-5,9,6],[-2,-3,-7,9,-2,-4],[6,-6,10,-8,8,8],[3,4,-9,-5,-1,8],[-9,9,-2,8,10,7],[-5,5,-6,-1,-6,-3],[7,6,8,5,4,9],[-8,-4,-2,-10,-5,-2],[-8,2,-10,-9,-4,-5],[2,10,-6,2,5,-2],[-6,-5,9,-3,-2,3],[9,7,8,6,1,-5],[-2,-3,-2,5,9,-10],[9,7,8,3,3,-3],[-1,-2,4,1,6,-4],[-9,8,-10,8,2,1],[7,-9,4,-1,10,7],[-3,-9,-2,-7,3,1],[-4,3,8,7,-5,-6],[-10,-4,-2,-6,1,2],[-10,6,-4,7,8,5],[-3,1,-3,-7,-6,5],[3,-3,-9,-8,5,4],[-1,-9,-10,-4,9,9],[2,4,10,-6,-1,7],[-5,8,-1,9,-3,2],[3,4,-1,3,-2,3],[-6,-5,9,6,-7,2],[-9,9,-1,5,6,5],[4,-5,5,-8,-9,6],[5,10,10,-9,6,1],[10,1,-7,5,6,-10],[8,-10,1,4,1,7],[7,10,-5,-1,9,10],[2,-7,-7,-9,-7,3],[8,3,1,-1,-7,4],[-2,-6,10,-6,3,-1],[2,-5,-9,-6,-6,-6],[-2,-9,-8,10,9,10],[2,-2,-3,5,-2,-6],[-9,-8,3,3,-1,-4],[-5,-8,8,6,7,-5],[10,6,10,-3,-4,5],[-6,-3,-9,5,-9,8],[4,1,1,-2,8,5],[1,7,10,3,10,-3],[4,3,-5,-3,5,2],[2,9,5,-5,1,-10],[-6,8,-2,5,3,9],[8,-8,-8,1,6,7],[3,6,8,8,2,9],[9,7,-9,9,-10,2],[-9,7,4,-7,-8,2],[2,9,8,-7,10,-8],[-2,-8,-3,-2,3,8],[-3,-6,-9,-6,-10,6],[-1,-4,8,-1,8,7],[-2,-2,6,4,-6,-10],[-9,-5,-9,9,-5,-4],[5,-5,5,-2,1,-3],[5,-6,-6,-5,3,5],[2,-6,7,10,-5,2],[-7,8,10,4,-9,-6],[9,1,3,7,-2,-2],[3,8,7,8,4,-1],[-7,10,7,2,-9,-9],[-1,-8,9,9,-10,-10],[6,-2,-5,-7,-9,-10],[-4,4,5,6,2,-8],[-1,-5,-5,9,-4,-6],[-5,-1,1,-3,-4,-8],[10,7,-7,-5,4,-1],[-6,2,3,-10,10,-5],[5,-6,2,-7,10,-6],[-9,-5,-4,1,1,1],[3,4,-5,4,4,-6],[-6,3,-7,10,2,8],[-6,-6,-4,10,-8,-3],[-5,2,9,-8,-1,8],[9,-3,-7,-7,-1,9],[9,5,6,-2,-6,-10],[10,-9,-8,10,-9,8],[-5,-7,7,-2,-5,-4],[6,2,10,-9,10,3],[7,3,8,9,8,10],[4,-2,10,2,3,9],[5,-4,-6,-1,10,-8],[-7,2,7,-9,-3,-1],[-6,-10,-6,2,7,-6],[-3,-7,-1,3,-5,5],[8,-2,4,5,-8,-3],[-4,-8,9,5,9,6],[8,-1,-6,-5,-10,-7],[-2,-8,-7,-7,-4,-3],[8,-6,1,-8,3,4],[-4,4,-7,10,-3,-2],[-7,-3,-5,-3,-2,10],[3,2,9,-3,-6,9],[-10,-5,-5,-5,-7,3],[-3,-4,5,10,-4,-4],[-10,-6,-6,10,-1,-10],[1,9,4,-9,-8,3],[7,-3,-8,3,-4,2],[3,-7,-6,-3,2,4],[-3,4,6,-7,3,-3],[7,-6,-3,4,-2,-2],[-7,5,6,7,2,1],[1,10,-9,2,7,8],[8,-7,4,1,2,-3],[3,8,-3,3,8,-5],[-4,-5,-7,-2,7,-7],[9,-2,-4,-1,-7,2],[9,-4,-9,-8,-6,-6],[5,7,-9,5,-4,9],[2,-5,-9,8,4,-9],[-1,-8,9,9,5,-8],[-4,-10,-9,-4,-9,1],[6,9,1,5,-4,-10],[-10,-7,-7,-7,7,9],[6,-7,2,6,7,-2],[-3,4,-1,-8,-3,3],[-9,1,10,2,-3,3],[-6,7,-4,6,5,3],[-2,6,8,-5,10,5],[-6,-7,7,-8,9,-8],[4,10,-4,7,4,1],[-3,-10,-4,4,-3,1],[-9,3,-4,-2,-7,-10],[-5,-6,10,-10,-6,5],[-5,-10,-8,-8,-9,8],[6,-4,2,5,-2,-6],[-10,3,-7,6,7,-2],[-8,-3,-3,-2,3,-1],[3,10,-9,-6,-3,5],[-9,-5,6,3,-8,-2],[-9,10,-4,5,-9,1],[-3,6,-9,-9,-1,-7],[2,2,-6,4,9,-7],[7,10,-1,5,-9,-2],[-2,-7,5,-2,1,10],[-8,-5,8,-2,6,-2],[-1,10,10,8,-3,6],[8,7,-2,9,9,7]], dtype = "uint8")#candidate|10314|(143, 6)|const|uint8
call_10312 = relay.TupleGetItem(func_4220_call(relay.reshape(const_10313.astype('uint16'), [10, 8, 4]), relay.reshape(const_10313.astype('uint16'), [10, 8, 4]), relay.reshape(const_10313.astype('bool'), [10, 8, 4]), relay.reshape(const_10314.astype('uint8'), [858,]), ), 1)
call_10315 = relay.TupleGetItem(func_4226_call(relay.reshape(const_10313.astype('uint16'), [10, 8, 4]), relay.reshape(const_10313.astype('uint16'), [10, 8, 4]), relay.reshape(const_10313.astype('bool'), [10, 8, 4]), relay.reshape(const_10314.astype('uint8'), [858,]), ), 1)
func_1931_call = mod.get_global_var('func_1931')
func_1933_call = mutated_mod.get_global_var('func_1933')
const_10318 = relay.const([4.133506,-0.106327,1.491040,-9.014560,-6.664751,5.380935,-8.350396,-0.902325,-2.609460,5.536963,-6.719719,-1.800698,2.975191,2.774447,9.651530,5.748627,-1.905832,-4.918656,3.587761,-1.411243,-5.916344,-3.622541,3.866064,3.934613,1.189044,-1.531499,-2.617231,-9.438086,-3.727369,0.265460,-9.223398,-2.531151,-3.099509,-3.130267,1.945668,-2.682702,5.343019,-6.564626,6.779169,-1.793334,2.779722,-7.871796,5.233622,0.410378,3.248679,8.772035,-4.875337,-7.161135,-7.533354,-0.690968,9.215143,5.063044,5.314001,1.435435,-3.138586,-7.985262,-5.213735,7.626399,2.519096,1.341390,8.748970,-5.194454,-0.900424,2.737777,5.341954,7.110779,-0.752015,7.262918,-2.246923,-0.764490,-9.604573,-7.480758,0.086491,-0.612763,8.331393,7.065969,1.950399,-6.525939,-6.308958,-1.358064,6.077049,-7.922246,6.001974,-7.355119,-0.460491,-2.064030,2.166190,-4.430208,-8.785401,3.044645,-4.363723,1.537715,-5.363486,-1.682375,1.388450,-3.249150,-7.575026,-9.315460,3.872210,2.391672,1.948910,-9.151402,9.030930,8.444793,-3.416792,4.541647,-0.343823,-9.693151,-8.502050,5.397790,4.573053,-9.595713,2.596360,9.549610,4.534477,-5.109905,-8.891672,8.780294,9.585444,-9.001829,5.500515,5.880635,-8.612551,-6.447687,-9.413051,-4.828740,-0.808638,9.417698,1.004895,-0.894647,8.709960,2.691013,7.052570,8.653836,7.436417,-4.917952,7.022781,-7.044196,4.373686,-5.482762,6.899014,-9.837016,-5.086018,6.013246,-9.502597,-8.338092,-4.420480,-9.265810,5.840893,4.502911,6.939934,7.209342,7.526928,-0.603922,1.121780,-9.962394,9.861525,-7.466555,-4.265199,3.419639,3.876577,-1.976450,7.700057,6.811870,1.060426,3.843634,8.511153,7.071903,8.486595,9.155614,1.342759,6.683160,-5.285873,-3.234057,3.993904,-5.350976,6.397302,-2.761355,9.465139,2.983999,-8.278282,9.984313,-8.449237,-1.971508,-4.115954,-2.379744,1.847273,-8.906962,6.309465,-3.129582,-5.104452,4.663495,-4.138930,-0.919420,2.212518,-8.033583,-8.937755,1.987349,-9.932036,-9.789408,-6.780048,-3.016178,-1.962054,3.060159,0.595695,-3.932253,-1.336147,-8.538057,-2.942920,-5.364379,-7.486167,5.068251,-2.263222,8.750800,9.770675,0.291571,-4.716826,0.562004,-2.341939,-8.914667,2.757975,4.312834,-9.152175,-7.801428,-2.784988,5.700266,4.038818,-4.750831,9.357798,-3.848364,3.854839,-8.724691,-6.114198,0.580275,1.904264,-1.514778,-3.779201,-4.190660,6.932597,1.290247,-4.108738,0.102207,-5.657317,0.053501,5.390437,-7.624000,-8.585209,5.835397,-3.427100,3.636398,-7.323040,-5.998440,-0.549615,-6.825368,7.571314,1.682313,-2.083830,7.859397,-9.469286,-4.575262,7.456358,7.010322,-7.738526,-2.775317,6.682463,-0.932607,1.559974,-3.538725,8.866527,-9.270981,2.288641,-1.833855,-8.630966,-7.977037,2.551158,-7.726356,5.248236,-3.565456,-6.180495,-0.198130,-1.930718,-9.763673,-7.125311,4.020512,2.694238,-0.355820,-8.347908,-0.039405,2.995331,0.708506,3.765712,6.417958,4.294550,-0.749237,-6.999607,7.879520,0.409847,-6.040281,3.858811,-9.073648,0.519811,4.540118,1.142590,-0.610628,-7.296432,5.563424,-2.691381,-2.416771,-1.501853,9.118256,1.565280,-8.077122,-4.370719,-9.672155,-8.826352,-6.191317,-1.117306,5.660972,1.868017,-0.691613,-5.148497,-3.093775,-2.889640,-7.790569,2.533223,1.212115,8.593034,-8.224741,-1.817841,5.178697,7.268849,9.470058,0.157844,0.616062,-7.370358,-1.008279,-7.034324,5.152092,2.209401,2.970053,-0.386835,0.815843,-9.131468,7.556298,8.001004,-9.308279,3.510576,-2.018327,-4.422601,6.588854,6.102238,1.478746,-7.973632,-7.742233,3.637950,5.012152,-2.926351,5.591640,-7.988321,2.639851,0.625154,-1.404382,6.635156,7.216738,-2.536182,0.872082,-1.258121,8.330347,7.341449,-8.634400,-5.638265,-1.924746,-1.830164,5.265953,5.110308,-0.141560,-4.113990,8.888598,7.980181,-7.723194,5.953870,3.970293,-8.679744,0.939477,-4.754539,-8.594332,8.335850,4.539720,-1.404986,-4.117926,-3.354801,-1.207046,4.105519,-4.890474,-2.376975,-3.316080,-7.627111,5.873399,7.816729,8.841111,-2.234335,-3.564860,-6.604894,-0.210459,-8.945270,-7.795634,2.543813,-4.427397,-1.894690,-0.409651,4.112755,5.835183,-2.044752,-7.593516,8.474646,-5.851026,-5.978581,2.281920,-8.790365,8.505119,-4.584716,4.182255,4.025961,-8.309034,4.667527,-0.903200,7.449904,-6.151178,0.828486,7.802827,-9.847083,-7.901425,-8.668895,-4.055595,1.990082,-6.018611,5.768998,-1.406630,2.232160,5.048019,9.302657,4.416737,6.881454,-0.208155,-0.143008,4.076734,5.247055,8.499894,3.574274,0.393969,-5.055591,-9.379875,0.641897,-5.722508,1.477532,1.311812,0.503559,8.740769,9.376736,6.649323,-7.001338,-0.980302,2.866646,0.879758,0.809710,7.525346,-4.274044,-0.668910,-9.313554,-3.376629,-2.737985,-9.453147,-2.776371,-5.285834,-6.798058,-9.837720,-3.681846,-4.012070,-9.840244,-1.460497,-3.966973,8.525002,1.905083,7.549254,-0.044497,5.655514,1.346985,5.108301,8.079438,8.967568,1.612051,-1.549043,1.185487,2.081930,5.165224,0.205916,-2.765019,-4.220780,-5.415459,3.551025,-8.636178,3.074189,9.372995,5.754839,-5.497519,-4.930619,-1.996819,3.994001,2.690613,-8.409602,-3.284013,2.981547,-0.321330,-6.100016,9.932088,-7.263513,-2.105193,2.908519,-8.540944,1.528186,-2.011181,-7.343329,-2.670193,-7.605815,4.426325,-8.730777,-0.281216,-6.088966,-5.507518,-8.351694,-3.762481,2.689182,-5.856704,-2.684227,3.183326,-4.812709,6.599994,4.203544,-6.223405,-6.405314,-2.729267,-9.453381,-1.067268,0.004538,7.474092,-6.320681,-7.175883,6.994193,-7.076229,3.720854,6.146995,5.280433,8.426203,-2.041768,-0.003948,4.351616,-6.712972,-4.412125,-8.181019,7.975766,0.588957,7.643080,7.454149,-4.491312,4.143218,6.002698,1.930409,0.371658,6.255589,5.779402,-8.446856,-1.596489,-6.462164,9.330352,9.060961,-5.290840,-1.371194,-7.515134,-0.770743,-2.934462,9.425995,-2.082577,-1.814299,3.172375,-6.442803,-2.660810,4.261923,9.208338,5.386152,-5.239421,8.652809,8.882261,-8.989550,1.484972,-9.320731,-8.012254,8.339914,3.487752,8.990731,-4.945391,1.024943,-5.651696,6.530587,-1.346891,8.690525,4.331843,6.726371,-4.302026,8.088684,8.077508,8.755239,5.674116,-6.645451,3.094762,9.776159,4.151697,-3.611033,4.964571,1.972477,-0.905222,-7.943644,8.158218,-1.438084,9.447885,7.789418,3.060108,4.662467,-7.888700,0.500654,3.398932,0.750433,8.450897,-3.557076,9.640135,-7.385247,-9.920239,-8.418155,7.093763,-3.319392,-2.360335,1.770206,-7.191970,-0.048011,-7.975301,-0.816521,-9.718679,6.634313,8.115817,-3.890686,5.145290,-8.299525,1.858683,-0.074250,5.513482,3.559403,-7.870601,-6.020526,2.316197,0.282012,-6.050475,0.557595,3.101070,9.019710,5.784264,-9.957040,-9.366538,-4.261693,0.018537,-4.639624,9.301051,-1.229823,-2.946238,2.786685,4.450215,-0.355616,-6.108640,-4.410778,-0.111570,1.745931,1.089363,-7.710532,-1.884870,2.912085,3.408092,1.080340,5.519777,4.156167,-0.110676,-8.546497,0.463808,1.104077,-6.791126,-8.683376,7.273397,-3.995980,7.193956,1.978555,-6.467320,8.579805,-9.740790,-5.219751,-6.268471,-7.657324,-0.541534,-9.110164,0.392622,-1.652069,8.902578,-1.116152,-1.945901,8.211600,4.079102,1.909355,2.389500,-8.159858,5.436782,7.842711,-8.192233,-9.091872,-4.042851,-2.646001,5.999457,-7.770118,3.361609,9.462442,4.532740,6.810830,9.264725,-8.320702,8.556488,5.243693,-0.892666,-5.074465,-4.408283,0.852873,9.196636,-0.997709,-4.752348,8.653063,8.727083,8.464527,9.966159,9.441884,-7.327754,8.020769,-7.134564,-3.859644,-0.308192,5.214219,-3.334025,3.465215,1.001198,-2.758339,-6.526147,3.039137,-8.963576,3.932765,-8.651442,0.556496,-6.547444,-6.026127,1.972182,3.349272,-9.044891,-1.742316,-1.068623,-4.977095,8.710757,8.908019,4.258928,7.020358,-8.648194,4.012532,3.415040,6.304622,-0.387098,1.058360,-9.119768,3.076875,6.396065,9.584032,6.930335,9.982419,-2.447283,7.801464,-6.363704,-9.780173,2.250032,9.809025,-1.979315,-8.285523,-1.154868,-9.828704,9.457428,2.524683,4.569842,-8.302874,8.580761,3.187081,-9.510389,7.453920,4.642498,5.935358,4.286019,6.827987,0.337832,-0.970816,0.152538,6.376184,-8.197896,-5.027901,8.687630,7.570801,-1.430817,9.521979,4.513092,4.652202,-9.582490,6.161113,9.741017,3.711829,-1.138118,3.425732,-4.700780,-0.436509,7.765904,-8.644842,9.141524,2.854163,-5.221407,4.911386,4.996452,-7.227671,1.962131,-7.068200,-2.596468,-8.158557,5.125639,0.132182,-8.423080,2.305289,-3.449638,-7.296707,1.043091,4.190131,-8.835032,9.316638,-4.739304,2.071747,0.176027,-8.184088,4.474629,-3.121375,-9.967438,-1.487271,-1.481377,5.633958,6.665136,-9.164094,4.631210,-0.286503,-8.181067,-3.155600,5.756467,6.154919,3.511276,5.343058,-4.041123,6.036828,3.649495,8.501777,5.630818,-9.571391,-1.346100,5.031371,-0.796150,-9.167351,3.904435,4.392183,-0.421544,9.807673,0.782979,1.094476,9.213213,-5.616352,-3.628563,-1.326122,-1.600558,0.837362,4.541132,6.179141,-8.305617,7.357501,-7.933559,0.955172,2.255885,-8.443318,4.516091,-9.457137,-5.301453,2.485668,-7.692061,6.515734,-9.881472,4.233878,2.258041,3.310420,-0.631416,-6.045941,-9.500304,-0.126702,-1.746603,-7.250074,-5.158220,-1.618668,4.892605,0.959203,1.627698,1.061967,4.216925,-3.833966,8.601467,5.771709,-5.006778,-7.061045,1.712639,-6.579324,5.593660,7.218879,2.144666,-0.960523,8.613756,-9.766584,-8.234545,-3.571509,-5.740048,7.664642,-7.908632,-4.258508,-3.114795,0.116744,3.687921,1.270966,-8.899538,-5.283272,5.898428,1.236788,-1.868243,4.678570,1.475461,3.724318,-0.210849,6.859487,4.474626,8.100888,-1.265539,8.001516,-1.543047,-6.431941,3.044890,-7.763150,7.792129,5.299524,4.899853,8.664872,-6.030179,3.524145,8.214735,7.894172,-2.376901,-7.972857,-2.800526,-9.003389,-8.840888,5.748081,0.893483,-4.847197,4.544476,-4.785004,8.762153,2.909105,-1.484811,-1.533509,2.974059,-5.485865,6.538610,-1.984264,-3.663975,-8.045842,3.251646,-3.043067,-4.371284,-8.679158,-0.636806,-1.351727,-3.085851,0.537227,-3.473273,-0.089219,-5.759785,3.345258,6.091303,8.223225,-7.649786,-8.222962,0.257037,-2.581949,-1.728903,-3.697671,-0.330725,-1.709216,-9.217988,7.539987,6.938029,2.462227,4.909074,5.777791,-1.288607,-6.819455,7.322104,9.643552,-7.293567,-6.261962,-6.306287,4.907172,2.857344,2.133460,-2.952468,7.083772,-8.417490,1.532761,9.606020,-3.470925,8.479231,5.617009,6.579429,2.201901,-0.855531,-9.790693,-8.564964,8.279848,6.830989,-1.081066,-2.798338,-4.248952,-3.489164,-8.963636,-7.920489,0.170514,9.380434,-1.414221,5.196339,-9.958251,3.464296,-0.940232,4.400914,-8.738713,-4.557725,-8.309709,-2.348606,1.659585,-1.907876,-8.105643,-7.486360,-5.823229,-5.801556,0.322508,-6.305346,-1.747844,-4.827247,-2.302758,-1.790423,8.871800,4.574913,6.729926,-1.546475,-1.590502,-9.413042,8.286105,-7.480207,7.600048,0.090276,9.367179,-4.693878,7.851539,-0.346414,-1.513654,-2.277344,-2.173673,8.483711,5.856523,-7.826180,-9.412188,7.107697,-3.482989,2.208320,-8.135526,-8.431260,8.232949,3.274568,9.273423,-2.085516,9.156883,3.945159,-0.841535,7.018595,-7.509295,8.894054,9.377605,4.615078,-4.536684,7.767996,9.943212,-1.585705,-9.971341,3.533771,-0.247222,-1.800638,4.521864,8.384680,-7.746810,1.955222,-5.375024,-7.728025,1.620190,4.562525,-3.358471,2.828431,-3.315380,-1.303559,3.218622,6.031341,9.266483,8.699607,5.531069,-3.868875,-8.039411,6.433350,-3.268625,-7.684439,9.057982,-4.875067,-2.120321,5.293640,3.634883,9.064929,6.488734,-8.828982,-7.530702,0.534164,-6.382817,-4.259663,-5.479646,-6.003066,8.817981,-5.085736,-8.125446,-3.922974,-5.561505,-6.852898,-6.136693,8.865033,-1.906788,-3.863240,5.021097,-9.854327,-2.383363,-5.311610,-4.877795,2.820362,5.633654,-3.966447,-3.462151,-9.621818,-8.314652,3.798587,7.577430,2.590735,-8.860028,-3.629722,7.260073,-8.405483,7.917560,-0.221708,4.857806,4.467203,-6.322166,-0.980732,8.507207,4.467177,8.402288,-8.199263,7.729961,-3.146617,2.868029,-0.870282,-8.106280,-5.962483,9.125595,5.326737,9.000143,-1.737085,8.003068,-5.657659,3.910720,-2.214178,-5.931315,4.660995,-1.041378,-3.726601,8.154324,1.181552,6.337282,3.105672,-3.865392,1.097360,-4.159963,4.213633,-6.779407,-5.478360,-8.569077,6.364112,1.733286,-4.974269,-9.636745,7.530152,5.176672,8.353284,5.014720,-3.873437,-5.835690,0.909914,8.790107,-3.425514,-6.511721,6.773529,1.682670,-5.737068,-0.834613,9.994845,4.499287,-8.701972,7.455883,3.642453,-3.199232,-0.510749,8.211132,4.045041,6.673083,-4.149556,-5.917670,-1.345775,-7.624968,-5.781032,4.695635,-7.703985,7.825467,-7.145639,-4.338652,9.987637,3.718468,5.114573,2.873280,1.983111,-0.131629,-2.353503,5.963593,2.658414,0.976169,-0.065169,1.946736,3.307365,2.226615,3.320079,3.435135,4.031378,-7.845028,7.022087,3.479763,-9.475209,9.373351,6.747670,5.608897,-8.613344,-2.875064,-7.142983,4.045157,-9.141208,1.658814,3.056119,-1.136073,4.022184,6.516612,-6.820052,3.799274,1.563260,-0.039636,4.113671,4.128697,-8.440721,2.196972,7.961420,9.551251,8.411557,6.256264,8.194192,7.569730,-3.803908,-0.467963,-8.109907,-5.432319,-3.242822,-7.321306,-3.284213,3.573022,1.153808,2.832129,-4.992870,4.875168,3.891342,-6.623068,-7.232850,0.260143,-6.334329,-6.923135,5.530294,-0.450607,1.056427,-8.589309,-5.648383,-6.962243,-1.044207,-1.788958,-7.953726,-1.958675,-2.466904,5.479661,6.087274,-6.443306,-2.362013,-8.990986,1.245423,1.536683,5.469233,-5.604233,7.013049,2.433053,9.347315,-2.310289,6.558398,7.490672,0.855030,4.965119,-9.622856,3.449139,-4.326440,-4.335710,-7.067899,-6.003405,0.294615,-3.697739,3.897684,-5.037418,0.264142,7.965923,-0.936346,5.763957,4.853416,-8.360533,-5.960013,-7.346771,8.525923,-8.838443,-0.352150,2.292626,0.422465,-6.033460,5.342821,7.245079,-1.771145,-1.170159,-6.621382,-0.149604,-1.332652,3.106144,-8.814919,6.647976,-3.247111,-4.220944,-2.559237,8.846981,8.214997,-1.476741,-5.053323,5.344581,-0.416539,0.027096,8.037281,-9.903623,-9.346732,-0.672438,0.758395,-8.574494,6.835973,-9.807652,-2.055320,-2.160289,-3.037786,8.651857,-3.629866,0.350975,-4.151554,5.970113,-1.864482,6.108324,4.934934,-4.739707,0.248472,6.186697,1.809674,-0.423582,5.947684,4.280569,2.362976,-8.575738,5.468553,6.695884,2.220353,-4.064772,-0.831539,-0.328105,9.905382,7.474700,-8.442332,-6.816424,-9.211547,7.041368,6.830721,8.738042,0.721479,-8.762507,1.584310,-8.072060,2.655503,9.573636,-0.546504,9.685177,-1.530344,-0.862948,6.475542,-4.319817,3.734616,9.859814,-0.744546,-5.524101,2.098213,-5.896782,-5.849255,1.812449,1.840328,6.536664,-4.780211,-3.365741,0.826134,1.673118,3.230762,6.405404,-0.042694,3.675688,9.355116,-2.892695,-4.147791,-1.959393,-8.513061,-6.380205,-7.673341,7.939861,9.416034,9.460803,4.817472,9.011494,-1.067913,1.225915,-3.390270,3.219705,-4.895446,-3.332712,-6.422302,1.703405,-9.672804,6.390636,-2.619811,7.472374,-4.851468,-7.679322,-5.852846,-2.495429,-7.412434,7.648480,-9.109084,4.691693,-2.050960,3.336958,-6.529578,1.914904,4.544931,5.999180,-9.871212,9.281571,8.562216,-3.738368,5.296761,-7.386401,-8.057519,-9.639710,-7.521829,-0.664651,2.769732,0.859622,-4.327199,-6.406166,1.599363,0.364295,7.202237,-4.921363,0.819300,-9.205353,1.801816,-4.992777,-6.822366,-6.240711,-9.869119,9.608483,0.424003,2.373711,-3.894192,8.885475,4.794695,8.651606,8.203111,8.056842,-5.544635,8.451269,-8.572765,9.444634,0.826618,4.725747,-0.216331,6.554273,-0.993703,-1.412323,8.383173,-5.621075,-4.842251,5.046729,-8.032692,-2.958772,-6.521901,-1.609329,-7.950723,5.608691,-3.565271,4.382818,3.294391,-3.689347,-3.796026,-2.513071,-6.640216,-2.908473,-4.755652,-7.253853,0.080505,2.998198,-1.969879,-6.564573,-8.801687,-5.239532,4.591620,3.157518,5.081619,-8.651632,-3.023078,1.198747,8.959757,-8.208091,4.864252,-1.658426,6.369822,-9.077577,-5.368488,-6.373789,-6.686904,2.112406,8.797427,-8.888818,-0.166259,-6.897975,-8.921460,2.859426,7.324638,9.669274,-8.086546,9.428093,-9.762252,1.685815,5.554191,6.804675,9.718170,3.000553,8.180007,5.720759,-0.571464,1.957018,9.671533,-4.045030,-5.232431,7.562142,-7.011098,-1.477785,-7.482549,6.593972,-0.379403,9.329178,7.606835,-1.724162,-6.670143,-5.710201,8.194052,4.254486,-6.841007,2.695238,-7.280588,3.028064,-0.410111,2.034750,0.865637,-8.317473,6.692304,5.831179,-2.464431,0.158113,5.153250,7.209098,7.907083,7.534257,-6.020567,-2.770129,6.516377,5.741082,-4.184052,-6.469033,9.428742,3.854194,-3.862259,6.195538,-4.332453,-8.160030,-8.323458,-5.043741,-9.301538,3.584495,-8.461735,9.474158,0.874523,8.050797,1.131897,-1.044476,-5.268119,3.749405,-2.183766,1.218345,-9.273419,8.977122,0.890800,-7.582229,1.628862,9.068693,-7.558562,-1.887501,0.827022,1.179059,2.768123,-9.164991,6.918968,0.331281,-3.668423,-8.034211,-1.165787,-9.115638,5.112356,7.791235,-1.429002,-7.737513,-7.166413,1.164569,7.546937,-4.041415,-2.632114,-4.982991,5.568429,4.994527,8.116573,-5.747028,2.705366,3.964138,1.085126,-3.774570,5.335187,-4.407704,4.683297,-0.707839,-4.545862,4.358916,2.999723,-3.328672,6.537622,-0.371903,5.673198,-8.426405,9.608767,8.255016,8.911438,8.343104,5.520110,-0.998637,8.364993,6.494389,2.784721,-9.065086,-5.191671,8.200376,-1.929588,-6.439747,-2.104551,3.668688,5.916182,3.310842,-7.060322,9.241925,-8.004575,-9.236120,-8.837336,-0.666926,-9.658540,-6.987265,7.062872,9.338057,-1.840692,-7.248076,-5.852344,-8.808078,-8.634314,-0.939134,-1.231629,-4.035688,5.687833,-7.609683,-8.367635,-9.250884,1.126334,-9.773893,-1.326910,5.301450,7.050561,-5.321205,6.783659,7.091314,-7.738286,-5.958869,-5.242108,5.850216,6.986322,7.064063,-9.099928,-1.598440,6.908643,5.959235,-1.006457,-2.062627,-2.367137,-1.404976,4.479031,6.108566,3.984975,8.256010,5.131865,-5.051769,-7.591119,-6.974595,5.022417,5.872732,7.122679,-2.236894,7.973038,-4.224260,1.876345,1.598692,-3.212658,-9.389026,-5.008757,5.566051,4.796170,-7.412882,-1.768475,-7.094387,5.268919,-2.676453,-7.464378,2.020161,7.635548,3.647845,-1.798235,4.950436,-8.800974,-1.006230], dtype = "float64")#candidate|10318|(1815,)|const|float64
call_10317 = func_1931_call(relay.reshape(const_10318.astype('float64'), [11, 11, 15]))
call_10319 = func_1931_call(relay.reshape(const_10318.astype('float64'), [11, 11, 15]))
func_9955_call = mod.get_global_var('func_9955')
func_9956_call = mutated_mod.get_global_var('func_9956')
call_10331 = func_9955_call()
call_10332 = func_9955_call()
uop_10333 = relay.log10(const_10314.astype('float32')) # shape=(143, 6)
output = relay.Tuple([call_10301,call_10312,const_10313,call_10317,const_10318,call_10331,uop_10333,])
output2 = relay.Tuple([call_10302,call_10315,const_10313,call_10319,const_10318,call_10332,uop_10333,])
func_10336 = relay.Function([], output)
mod['func_10336'] = func_10336
mod = relay.transform.InferType()(mod)
output = func_10336()
func_10337 = relay.Function([], output)
mutated_mod['func_10337'] = func_10337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10336_call = mod.get_global_var('func_10336')
func_10337_call = mutated_mod.get_global_var('func_10337')
call_10338 = relay.TupleGetItem(func_10336_call(), 5)
call_10339 = relay.TupleGetItem(func_10337_call(), 5)
func_9920_call = mod.get_global_var('func_9920')
func_9922_call = mutated_mod.get_global_var('func_9922')
call_10343 = relay.TupleGetItem(func_9920_call(), 0)
call_10344 = relay.TupleGetItem(func_9922_call(), 0)
uop_10345 = relay.cosh(call_10338.astype('float64')) # shape=(9, 9, 12)
uop_10347 = relay.cosh(call_10339.astype('float64')) # shape=(9, 9, 12)
func_5486_call = mod.get_global_var('func_5486')
func_5489_call = mutated_mod.get_global_var('func_5489')
var_10352 = relay.var("var_10352", dtype = "int64", shape = (675, 1))#candidate|10352|(675, 1)|var|int64
call_10351 = func_5486_call(relay.reshape(var_10352.astype('int64'), [5, 9, 15]))
call_10353 = func_5486_call(relay.reshape(var_10352.astype('int64'), [5, 9, 15]))
output = relay.Tuple([call_10343,uop_10345,call_10351,var_10352,])
output2 = relay.Tuple([call_10344,uop_10347,call_10353,var_10352,])
func_10372 = relay.Function([var_10352,], output)
mod['func_10372'] = func_10372
mod = relay.transform.InferType()(mod)
mutated_mod['func_10372'] = func_10372
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10373 = relay.var("var_10373", dtype = "int64", shape = (675, 1))#candidate|10373|(675, 1)|var|int64
func_10372_call = mutated_mod.get_global_var('func_10372')
call_10374 = func_10372_call(var_10373)
output = call_10374
func_10375 = relay.Function([var_10373], output)
mutated_mod['func_10375'] = func_10375
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10474 = relay.const([[[9,-4,-10,-8,4,8,8,-3,10,-7,1,4,-9,-4],[6,-10,-3,-10,5,-5,-1,4,6,-8,3,1,9,1],[4,7,-1,-5,-3,7,-6,-6,-5,6,-10,-10,-4,-8],[-8,-1,4,2,-6,10,-3,-9,7,-6,6,8,10,8],[10,-5,4,-3,-3,-4,2,-8,8,6,3,-2,5,4],[7,-7,7,-7,7,9,-5,-9,-4,-1,-4,-2,10,5],[-3,9,10,-10,10,-6,-7,9,8,8,4,-8,8,-7],[-3,2,-1,9,10,6,7,9,9,-4,5,-8,-3,9],[-6,8,9,9,-4,1,8,-4,-1,8,10,-6,-6,-5],[-1,-8,3,8,7,-3,-8,3,-4,-10,1,-5,-2,9],[7,6,-10,-7,-2,6,4,10,-6,7,-1,4,-7,-4],[-2,-8,7,-7,8,-10,10,-8,7,-6,1,2,-10,-6],[7,-7,-3,8,-7,-6,10,3,-4,-6,-1,4,6,5],[-4,5,1,2,7,3,-8,8,7,-10,4,-3,-8,8]],[[5,-2,-4,-2,-8,-8,-6,-8,-2,-2,10,9,6,1],[-1,8,2,-6,-6,3,5,-1,-6,3,7,-4,-7,-1],[7,9,-10,-5,-8,3,1,9,9,7,1,3,7,-3],[4,-9,5,-10,-6,1,8,-9,-10,-7,10,-6,3,-7],[9,-5,3,4,2,6,1,-4,-1,-1,3,2,9,-2],[-9,1,8,-3,-9,-2,-2,-3,-6,-3,-1,-8,2,6],[9,-4,-9,-10,-2,-8,9,4,-8,6,3,1,-6,6],[2,-9,-2,-1,7,-7,-4,10,7,-7,-10,-1,4,6],[-2,8,-6,4,10,-10,9,-4,4,-8,-7,-8,-10,7],[-10,6,7,7,-2,5,8,-9,-5,-2,6,-2,5,-9],[8,8,10,9,7,3,6,-1,5,3,-2,1,-7,2],[-2,6,6,-7,10,-6,-3,-6,6,7,-9,3,7,1],[6,5,-2,-9,7,-7,-5,3,1,-9,9,10,6,9],[-7,7,-4,5,-5,6,-4,8,5,7,5,5,-4,3]],[[-8,7,-3,-3,7,2,-4,-4,1,-8,-5,2,-5,-5],[-4,10,1,9,2,-10,10,10,10,2,8,-6,7,5],[7,-10,6,-4,7,-10,7,-9,2,5,-5,-1,-7,8],[-9,3,-2,-8,2,5,7,-10,5,-5,1,9,5,1],[-1,5,1,-5,-10,3,-6,3,6,-10,-3,10,-3,9],[2,-3,8,-10,-7,-6,-9,10,9,-1,-7,8,3,3],[8,7,4,1,-7,5,-10,-2,-1,-6,-4,-5,-5,-10],[-10,8,8,8,-7,-8,-3,-10,-5,2,3,-6,5,9],[-2,-2,-3,-10,8,-7,-8,9,7,4,10,-9,4,-9],[5,-10,-6,-1,5,-3,1,5,-4,-3,-4,4,1,-8],[-9,7,-6,10,1,2,-5,8,5,-7,10,2,5,9],[-9,4,-5,-1,9,-2,5,8,-8,-7,-10,4,6,-3],[1,-8,10,-8,6,3,-3,8,8,9,2,3,-2,-3],[2,-1,9,-3,3,3,5,5,-10,7,2,-6,-3,8]],[[5,-6,-7,-7,-6,5,-6,-9,4,-8,-10,4,2,-6],[-8,-2,6,-7,-5,-9,-9,-2,-5,-5,-8,3,7,-10],[7,3,2,8,5,3,4,-1,-8,-7,6,2,-6,-2],[4,1,1,9,-1,-3,6,6,-8,2,-2,9,-2,3],[-7,10,-10,3,7,5,10,-4,-4,4,-7,-9,7,8],[8,5,8,-7,6,-8,-3,-1,-10,7,3,-5,-10,-1],[2,-6,1,-8,-7,-7,-6,-6,-7,9,-9,-1,-2,5],[9,-8,-7,1,-6,-9,3,-5,-1,7,-5,-7,-5,-9],[5,8,1,-4,10,8,-6,8,5,10,4,7,-6,-4],[-3,7,-6,-1,-2,-9,4,-10,-6,-4,4,10,3,-5],[-10,-9,1,-10,-2,-8,-9,7,-4,-4,7,-3,3,-9],[9,-5,-5,3,-2,-5,-7,9,7,7,-4,2,-10,4],[-10,-10,-9,9,9,7,8,-6,-4,1,2,3,-1,-1],[3,6,8,-2,3,10,5,3,-1,8,-5,-7,9,7]],[[6,-2,-3,2,-6,-10,-6,-1,8,-6,-7,4,-3,1],[10,1,5,-7,-6,10,3,-3,10,10,9,9,-10,8],[-2,7,-8,-2,-6,9,-7,-5,1,-9,-1,-9,5,-8],[10,2,6,6,2,5,8,-9,5,5,-10,-6,-5,3],[4,-9,-9,6,2,9,1,-9,10,-4,-4,10,5,-6],[1,-10,-3,9,10,7,-7,-6,-10,9,-5,-4,2,-2],[8,-7,9,5,-8,4,-10,-2,7,7,-4,-7,9,-7],[-3,-10,-1,3,-6,-4,3,-6,10,9,-5,5,3,10],[3,-5,-8,-1,-1,1,-3,4,4,8,-6,-1,3,2],[-2,-10,-10,3,-9,9,9,7,-4,9,-9,-1,-1,-9],[2,4,4,9,10,-3,8,-1,3,-10,-9,6,3,-6],[-2,3,-6,8,-1,-5,-10,-2,-2,7,10,-6,-6,8],[10,8,-9,-7,-7,5,3,1,-8,-4,-5,-10,8,-4],[8,8,6,-1,-6,-9,7,-1,4,6,4,-4,10,-5]],[[-10,7,-3,-6,-10,3,7,-8,-6,5,-10,3,10,4],[3,-10,-10,-1,-9,-1,5,-6,-8,7,3,7,4,9],[7,-5,5,-5,10,8,-2,10,-5,-10,-1,10,-10,9],[-6,7,2,-6,-7,1,-7,-7,-8,-6,5,9,-4,10],[-5,-7,7,-4,8,-7,-9,2,-9,-4,-8,-1,8,-9],[-8,-6,9,-4,1,-7,-6,-4,5,2,7,-1,10,-7],[4,1,-8,7,-4,6,-8,4,9,10,6,-8,-10,7],[2,8,-2,2,-10,7,-9,-1,6,-3,-5,-9,-5,-1],[5,-4,-2,5,-5,-5,-7,1,5,-4,-7,-8,-8,-1],[-1,9,-10,4,-7,-7,-7,9,5,9,10,-3,-8,7],[-7,10,-1,-3,-4,-5,6,-5,-2,-7,4,9,9,3],[4,-5,10,-8,-6,4,-7,-1,10,-8,-2,-1,2,2],[-3,-9,5,-9,-1,6,7,-5,8,1,-4,10,5,2],[-3,-7,7,5,-1,-7,-1,-8,-2,3,3,-9,3,2]],[[-1,5,9,2,9,-8,-4,-3,-9,-3,7,2,-10,-6],[-10,-2,3,7,-1,-9,-8,1,3,7,6,-4,8,1],[-7,-4,5,8,-5,-1,-3,7,7,-5,5,-4,-4,3],[4,-1,-3,6,10,6,-10,-2,-9,-6,10,-9,-3,-5],[1,10,-2,-6,5,2,7,-1,-7,10,3,-4,-7,-7],[8,-1,7,-4,-4,3,4,7,5,10,2,-10,8,-9],[7,-9,-5,3,2,1,10,7,1,-7,3,-10,9,-1],[4,-4,-3,5,1,-10,-5,-3,6,1,4,-6,5,-4],[-6,1,-5,2,-8,-8,2,4,-10,4,-6,5,-3,9],[-9,-2,7,6,10,4,4,7,-3,-5,1,-10,4,-9],[10,-5,-10,-3,-2,-3,-8,2,-10,-8,-3,5,-4,-1],[4,-3,5,-3,-5,-3,7,3,10,7,-6,2,-10,3],[6,10,1,4,1,2,4,-7,9,8,5,1,10,9],[4,6,6,-10,9,-5,-1,-10,-2,8,5,3,1,1]],[[9,3,-2,3,-5,6,-9,8,-8,7,-3,1,2,10],[-10,-5,1,-4,7,10,2,-5,7,-1,2,-4,4,5],[-9,-9,3,8,2,-6,1,10,-4,-4,-8,5,-4,5],[2,6,-4,-2,7,-1,-4,-7,-3,-6,-1,7,7,1],[8,-1,-7,-4,10,-8,-6,7,5,2,-8,-4,-1,10],[10,-9,-7,-9,-5,-5,-8,3,1,-3,1,-4,-8,-10],[9,6,9,-8,-8,-3,9,-10,-1,3,3,8,-3,-7],[-1,9,6,7,-3,-4,-1,3,-4,-1,8,-7,-7,-6],[-7,1,-9,6,-6,-1,-10,-1,1,-5,9,-10,-7,7],[-1,-6,4,-6,6,8,-7,-4,-3,1,8,-9,-9,3],[3,2,1,-4,-3,-9,2,-4,6,9,-10,-1,4,7],[-6,-9,-8,-7,-9,5,-9,3,-4,2,5,-7,-10,5],[-8,-9,-1,-7,9,10,-3,10,-3,-5,9,5,1,-1],[2,-6,8,-7,4,-2,10,-1,-8,6,5,8,-1,10]]], dtype = "int32")#candidate|10474|(8, 14, 14)|const|int32
var_10475 = relay.var("var_10475", dtype = "int32", shape = (8, 14, 14))#candidate|10475|(8, 14, 14)|var|int32
bop_10476 = relay.right_shift(const_10474.astype('int32'), relay.reshape(var_10475.astype('int32'), relay.shape_of(const_10474))) # shape=(8, 14, 14)
func_9369_call = mod.get_global_var('func_9369')
func_9371_call = mutated_mod.get_global_var('func_9371')
const_10480 = relay.const([True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,False,False,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,False,False,False,True,False,False,True,False,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,True,True,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,False,True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,True,True,False,False,True,False,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,False,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,False,False,False,False,False,True,False], dtype = "bool")#candidate|10480|(972,)|const|bool
call_10479 = relay.TupleGetItem(func_9369_call(relay.reshape(const_10480.astype('bool'), [9, 9, 12])), 2)
call_10481 = relay.TupleGetItem(func_9371_call(relay.reshape(const_10480.astype('bool'), [9, 9, 12])), 2)
output = relay.Tuple([bop_10476,call_10479,const_10480,])
output2 = relay.Tuple([bop_10476,call_10481,const_10480,])
func_10490 = relay.Function([var_10475,], output)
mod['func_10490'] = func_10490
mod = relay.transform.InferType()(mod)
var_10491 = relay.var("var_10491", dtype = "int32", shape = (8, 14, 14))#candidate|10491|(8, 14, 14)|var|int32
output = func_10490(var_10491)
func_10492 = relay.Function([var_10491], output)
mutated_mod['func_10492'] = func_10492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6747_call = mod.get_global_var('func_6747')
func_6749_call = mutated_mod.get_global_var('func_6749')
call_10494 = relay.TupleGetItem(func_6747_call(), 0)
call_10495 = relay.TupleGetItem(func_6749_call(), 0)
output = call_10494
output2 = call_10495
func_10498 = relay.Function([], output)
mod['func_10498'] = func_10498
mod = relay.transform.InferType()(mod)
output = func_10498()
func_10499 = relay.Function([], output)
mutated_mod['func_10499'] = func_10499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10261_call = mod.get_global_var('func_10261')
func_10262_call = mutated_mod.get_global_var('func_10262')
call_10583 = relay.TupleGetItem(func_10261_call(), 0)
call_10584 = relay.TupleGetItem(func_10262_call(), 0)
func_6966_call = mod.get_global_var('func_6966')
func_6969_call = mutated_mod.get_global_var('func_6969')
const_10591 = relay.const([9.742616,8.415702,-2.623141,-9.900870,8.375201,0.659753,-4.182156,4.936989,-3.748626,4.754809,-0.341459,1.942696,7.595732,8.818244,-5.350332,6.149872,2.344503,7.124835,-8.734098,2.292446,3.081909,6.940729,-8.644593,-2.309495,-7.248080,7.662224,8.303510,3.768794,-6.053418,6.758563,9.734390,-2.608984,8.397172,0.970331,9.499335,9.960773,7.506057,-8.868805,-2.787180,-9.349557,-1.997076,7.278085,-1.802805,-5.646497,-7.507792,6.244162,7.319362,-2.652445,-8.287876,-5.384186,-6.236624,-2.633944,-4.157494,8.410206,-5.123831,-7.105930,7.495003,-1.461851,-5.179651,-2.449683,8.904263,-0.351249,8.832237,2.607204,-4.492453,-1.689395,-7.560194,-5.314423,5.463041,8.768728,-8.395680,7.519361,8.611397,6.249882,-1.790758,-9.581100,-8.268724,-5.191098,9.507325,8.175735,-4.346303,7.786954,-2.178614,2.479571,6.752008,6.928704,-6.728772,-3.048758,7.551181,3.032440], dtype = "float64")#candidate|10591|(90,)|const|float64
call_10590 = relay.TupleGetItem(func_6966_call(relay.reshape(const_10591.astype('float64'), [3, 30])), 3)
call_10592 = relay.TupleGetItem(func_6969_call(relay.reshape(const_10591.astype('float64'), [3, 30])), 3)
func_7818_call = mod.get_global_var('func_7818')
func_7820_call = mutated_mod.get_global_var('func_7820')
call_10595 = func_7818_call()
call_10596 = func_7818_call()
func_6807_call = mod.get_global_var('func_6807')
func_6808_call = mutated_mod.get_global_var('func_6808')
call_10598 = func_6807_call()
call_10599 = func_6807_call()
output = relay.Tuple([call_10583,call_10590,const_10591,call_10595,call_10598,])
output2 = relay.Tuple([call_10584,call_10592,const_10591,call_10596,call_10599,])
func_10602 = relay.Function([], output)
mod['func_10602'] = func_10602
mod = relay.transform.InferType()(mod)
mutated_mod['func_10602'] = func_10602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10602_call = mutated_mod.get_global_var('func_10602')
call_10603 = func_10602_call()
output = call_10603
func_10604 = relay.Function([], output)
mutated_mod['func_10604'] = func_10604
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10637 = relay.var("var_10637", dtype = "float32", shape = (2, 3, 6))#candidate|10637|(2, 3, 6)|var|float32
uop_10638 = relay.cosh(var_10637.astype('float32')) # shape=(2, 3, 6)
func_7536_call = mod.get_global_var('func_7536')
func_7538_call = mutated_mod.get_global_var('func_7538')
const_10646 = relay.const([-5.968409,6.772997,-8.067577,-9.164959,-3.900389,-1.037602,-6.552758,5.571412,0.597716,8.226343,-9.669180,-5.047048,3.029894,-0.115531,2.349492,1.941490,-8.131254,-8.717085,-1.274744,-9.381923,0.256750,-2.592049,3.917901,-5.358400,4.554355,3.454023,7.090852,8.619186,3.088678,9.293733,6.973439,-3.700351,-9.061166,-5.124715,-6.954264,5.237365,7.553887,3.603309,2.117072,-8.462246,2.513194,-6.295564,3.507793,8.564456,7.441720,-5.869623,5.225025,-1.314360,6.705331,-7.274224,0.883357,-1.088414,3.788059,-6.218843,9.047651,-7.491891,-3.249024,3.285607,-1.373363,9.264245,-9.429926,-1.514425,-1.668101,6.418414,1.092686,2.089366,2.686925,3.247130,-5.113759,6.306927,-0.428293,-1.724741,5.707621,5.737002,1.990223,2.944428,-3.904352,1.936719,0.808256,-0.456388,2.840174,1.210764,8.431957,6.435005,-3.928981,6.430518,-2.327381,-3.558497,-7.392724,4.006874,-0.817352,3.095325,-1.743833,8.925630,6.739787,-0.844259,-5.071644,5.184605,5.901489,9.588536,6.421076,-4.059055,-4.191512,2.030731,-3.252571,-9.089079,-9.179072,5.409286,9.626582,-4.175751,5.090522,9.708410,-9.441274,3.787612,9.894877,-1.047614,-6.210555,5.928094,4.535680,2.142090,6.987552,-3.655788,0.857669,3.880767,-0.307052,3.231169,-6.728927,4.529815,4.019301,-1.482860,8.616516,3.193021,-0.268396,6.001525,-2.757997,3.320088,-2.709739,5.281963,-2.158119,-6.272954,-4.790931,-2.106253,-0.948809,4.380993,-6.075365,0.745232,-9.229543,8.454792,0.063814,-8.559874,1.858855,1.110322,9.173690,7.747309,7.268746,7.734476,7.999398,2.909001,8.437812,0.669608,-7.023417,-8.053064,-8.401330,7.837359,-6.120657,0.676693,-1.284294,8.294551,8.066302,4.492408,1.542652,-1.538991,-3.584232,-3.796386,-4.845717,6.859223,-4.980452,-7.398571,-8.495385,-0.211683,7.727532,-2.498585,6.171511,-9.548650,4.209730,6.902738,-3.749079,2.261052,5.976918,-5.493935,-6.766379,9.421152,5.690115,3.457977,8.107648,-1.700115,8.133040,-8.535950,3.487773,2.389514,-9.420348,3.865532,-7.294404,5.484550,-2.998253,0.244474,-4.304688,-1.530088,-1.986837,4.329856,5.755234,5.490771,-9.630487,9.542062,-0.427616,-1.047375,-2.093098,1.763916,5.286974,-4.940356,-3.156328,-8.584771,-9.084845,2.888332,-2.830396,8.779830,-5.889958,-9.877931,-2.058504,-3.071773,-5.712992,-2.420365,-8.852442,3.188278,-0.502932,-8.803722,7.240999,2.358473,0.383186,0.850774,2.216914,9.274861,8.199173,8.266703,-6.922693,-9.935603,-2.321052,1.194270,-8.065150,-1.546077,-4.990052,6.950384,0.724952,-4.770879,1.322964,-3.140182,-7.633570,4.150842,8.107278,1.755330,-0.059117,-2.602623,-8.054732,-3.121867,-7.434940,-6.687363,9.517404,0.916204,-9.236884,1.387447,4.118373,2.315315,3.235640,0.046022,9.283026,-0.036247,-5.668862,-2.075384,-2.221725,9.564846,-3.152200,-6.347499,6.037404,-1.184335,3.216932,-0.140538,-2.534598,-4.275105,-0.052008,-2.363305,-8.870853,3.010867,-5.457410,-2.780092,-0.852467,1.899578,1.203468,-8.796395,3.531717,-6.643152,-4.982371,2.960370,-6.201528,1.083554,9.208152,-5.823942,-6.408842,-9.478389,-6.409977,-4.254299,-7.607277,1.668419,7.526984,6.182185,-5.658994,2.420415,-8.005113,5.757108,-4.105718,5.571595,6.885937,9.469018,0.899744,-6.663355,-8.999357,8.086406,-2.764742,-9.642491,-8.394984,0.764427,-8.460452,-3.918141,9.294979,1.111320,-7.923618,-4.590521,8.011331,1.850035,5.879372,-6.241145,-4.507252,0.117781,-1.361911,-1.532260,0.968237,7.204755,-9.525112,-4.574763,-9.418841,7.244800,-9.512593,-7.430578,-0.712188,-3.272094,6.690104,1.021777,-5.959896,-5.535917,5.189949,-2.099886,-9.019274,-1.839565,4.215045,7.074375,-2.575114,-9.755897,-0.022147,-7.784496,-1.473598,-6.559890,9.284659,-7.754822,-7.704128,-4.155916,3.109762,-7.374068,2.486474,0.950691,0.930704,-7.095536,4.149896,-2.427975,8.191457,-2.948881,-1.683621,5.874676,7.930762,3.935879,-2.843091,8.376641,-9.729837,-1.783419,-6.711387,-9.898015,-3.295860,9.195904,7.968270,3.923442,6.209205,5.892446,-6.553888,5.414177,-2.454034,-3.091012,7.568159,-5.447884,6.285742,6.076225,-8.464706,-3.161460,-1.357214,1.982455,3.004990,-9.950009,-8.916889,-1.723381], dtype = "float32")#candidate|10646|(416,)|const|float32
call_10645 = func_7536_call(relay.reshape(const_10646.astype('float32'), [13, 16, 2]))
call_10647 = func_7536_call(relay.reshape(const_10646.astype('float32'), [13, 16, 2]))
func_3311_call = mod.get_global_var('func_3311')
func_3313_call = mutated_mod.get_global_var('func_3313')
var_10653 = relay.var("var_10653", dtype = "uint8", shape = (858, 1))#candidate|10653|(858, 1)|var|uint8
call_10652 = func_3311_call(relay.reshape(var_10653.astype('uint8'), [13, 11, 6]))
call_10654 = func_3311_call(relay.reshape(var_10653.astype('uint8'), [13, 11, 6]))
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
var_10667 = relay.var("var_10667", dtype = "float32", shape = (4, 420))#candidate|10667|(4, 420)|var|float32
call_10666 = func_412_call(relay.reshape(var_10667.astype('float32'), [8, 15, 14]))
call_10668 = func_412_call(relay.reshape(var_10667.astype('float32'), [8, 15, 14]))
output = relay.Tuple([uop_10638,call_10645,const_10646,call_10652,var_10653,call_10666,var_10667,])
output2 = relay.Tuple([uop_10638,call_10647,const_10646,call_10654,var_10653,call_10668,var_10667,])
func_10690 = relay.Function([var_10637,var_10653,var_10667,], output)
mod['func_10690'] = func_10690
mod = relay.transform.InferType()(mod)
mutated_mod['func_10690'] = func_10690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10690_call = mutated_mod.get_global_var('func_10690')
var_10692 = relay.var("var_10692", dtype = "float32", shape = (2, 3, 6))#candidate|10692|(2, 3, 6)|var|float32
var_10693 = relay.var("var_10693", dtype = "uint8", shape = (858, 1))#candidate|10693|(858, 1)|var|uint8
var_10694 = relay.var("var_10694", dtype = "float32", shape = (4, 420))#candidate|10694|(4, 420)|var|float32
call_10691 = func_10690_call(var_10692,var_10693,var_10694,)
output = call_10691
func_10695 = relay.Function([var_10692,var_10693,var_10694,], output)
mutated_mod['func_10695'] = func_10695
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10726 = relay.var("var_10726", dtype = "uint64", shape = (10, 5, 6))#candidate|10726|(10, 5, 6)|var|uint64
var_10727 = relay.var("var_10727", dtype = "uint64", shape = (10, 5, 6))#candidate|10727|(10, 5, 6)|var|uint64
bop_10728 = relay.add(var_10726.astype('uint64'), relay.reshape(var_10727.astype('uint64'), relay.shape_of(var_10726))) # shape=(10, 5, 6)
func_8663_call = mod.get_global_var('func_8663')
func_8665_call = mutated_mod.get_global_var('func_8665')
call_10737 = relay.TupleGetItem(func_8663_call(), 0)
call_10738 = relay.TupleGetItem(func_8665_call(), 0)
func_9508_call = mod.get_global_var('func_9508')
func_9512_call = mutated_mod.get_global_var('func_9512')
const_10749 = relay.const([[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[False],[False],[False],[True],[False]], dtype = "bool")#candidate|10749|(15, 1)|const|bool
var_10750 = relay.var("var_10750", dtype = "float64", shape = (234,))#candidate|10750|(234,)|var|float64
const_10751 = relay.const([-4.627554,5.639149,7.676131,6.624822,3.726616,-9.871329,-4.784476,-7.712173,-2.739852,9.055584,4.956801,-7.407954,-2.390630,-5.417663,-2.081752,1.769015,7.035931,8.169736,0.141842,-1.248586,-9.950024,2.554379,-2.960982,-5.730219,8.217508,-0.948311,-9.959617,-2.702388,-5.532426,-9.018124,-0.842268,-2.716696,-6.687734,-1.990047,-7.728830,-0.044945,-0.266118,-9.012625,7.444611,8.129820,-1.622229,-5.919770,-7.339189,6.371798,5.362008,2.263894,2.175114,6.071128,3.798343,-0.238474,5.604599,-2.817574,-4.174796,-8.320276,0.472584,-4.863925,3.579959,-2.028895,-2.514520,9.940676,-5.780722,0.287658,-4.326529,4.225719,1.653118,4.080167,3.946924,-7.068777,-1.783950,1.228043,-2.631531,3.857329,-5.573728,-8.336426,8.794752,-7.718144,-1.059116,-1.057804,9.935094,5.846476,5.791587,4.454781,-3.178321,-9.051480,-2.347926,1.975431,9.098436,9.360571,-1.136909,-3.147186,0.169191,9.964126,0.354829,-9.207524,-1.330779,8.701740,-2.434895,-4.876617,-6.274114,-8.094312,-5.038360,2.186213,-4.618596,-4.399516,-8.825694,3.559339,5.535714,-9.945742,-9.970306,5.262190,-8.798179,-8.640847,5.209975,4.865712,5.130829,3.742910,1.860344,5.897562,8.221162,5.714119,7.800965,2.572272,3.962866,3.869438,-3.656741,-5.284074,5.585589,1.036203,5.005851,-4.717097,-2.894668,1.772909,-5.672077,-5.494811,-0.127846,-2.012651,-8.375913,-3.933225,9.929046,4.034044,0.174368,-2.073942,-8.906798,5.446327,-6.191714,-5.286796,0.139453,6.567933,-6.120298,7.109280,2.693818,-8.718471,6.901044,6.181187,-5.370883,-4.599833,8.250171,-1.775563,2.554828,3.863470,6.062074,-2.735664,3.420900,3.483454,1.236199,-0.444101,-2.172897,-2.372145,-6.592563,-4.222754,-4.997065,-8.100495,5.791744,8.665624,-9.039442,-9.006114,-8.648848,5.098328,-2.573900,-5.712520,8.761461,-3.924058,4.741677,-3.978755,5.519276,7.512065,4.013338,6.738961,-5.358743,3.499122,5.129255,1.573269,1.245350,-6.881979,1.880226,0.376558,7.277347,-5.741767,1.788026,-0.009574,5.047572,-7.246927,8.958892,4.934689,0.394195,7.514437,-4.403029,-4.426900,3.593755,-4.308540,2.969674,7.849289,7.531488,-8.212833,-0.804459,4.421056,-4.974874,8.505604,7.193558,6.091070,4.538273,-3.348145,6.410942,1.683271,8.104906,9.947581,-3.194624,7.607697,-0.693595,-0.364043,8.991948,-3.116227,2.885504,1.139916,-1.316770,7.502916,7.423583,-4.850234,0.583397,3.990137,4.185152,7.641331,-3.780246,8.465182,-8.315648,7.062521,-1.157868,8.506705,0.688400,-5.058817,-6.122177,-6.268207,2.724037,-6.319352,-3.725936,0.713082,9.486399,0.473186,-5.012647,-1.559254,-5.673687,-1.221641,-5.360151,7.976942,-1.292016,6.402076,4.229537,7.645806,-3.976611,8.146789,8.049922,-5.904034,-3.311790,-5.670780,3.813292,8.724986,1.899199,-9.121542,-3.420142,5.767732,4.830065,0.317449,-5.098946,-2.913298,-1.698931,-0.673633,-4.160722,-6.346466,-1.863943,6.366596,-3.003335,-2.299872,-4.418369,6.812619,-4.643719,-9.511239,6.941976,-7.832853,-7.747446,8.651111,3.420780,-1.749752,-8.097677,-8.534561,-1.986376,-6.174151,-7.829102,-9.563816,8.927139,3.499368,-5.591247,-0.820289,1.104014,-9.919736,1.905445,6.182381,5.681809,-6.600403,-6.787487,-6.673835,0.909309,9.410400,2.157750,-1.823783,7.084833,-3.265463,5.659457,-8.906965,-0.795092,-6.821554,-8.385405,-6.669298,-4.216103,6.383580,2.150720,2.747399,1.010025,-9.191939,-5.380096,5.326417,6.884284,4.459830,-2.409934,6.967579,-7.591822,-5.092529,7.340136,-1.308427,-3.764161,4.833044,-9.227673,-3.041293,4.927987,-7.467712,6.036117,-4.776330,-3.604185,-8.008999,4.469159,1.437895,9.107748,-2.592326,-2.678830,-7.720311,-7.750214,-6.358882,-2.416679,-6.298247,6.725561,7.818954,9.575589,0.538034,-0.102422,-3.513129,-8.781432,5.888125,-0.392234,-3.199619,3.026065,8.434242,-6.304362,-6.937827,-0.593026,3.127329,2.096923,-3.814091,-2.843106,-4.215274,6.254983,-3.043633,-2.915271,-8.872825,8.139679,0.839839,9.121892,-5.225706,-9.271208,7.215326,-5.998291,3.228819,6.196011,-0.377309,9.564467,-9.648547,2.215453,-6.631205,7.134864,-2.467740,-2.124910,5.386380,-9.928872,3.772610,-9.293216,8.215008,0.247641,-0.290345,0.735128,-7.749090,-0.796132,2.721666,0.611779,8.280924,-4.612256,6.807782,-5.953553,4.783074,8.388015,9.379614,7.570719,-2.986218,8.377056,2.389893,7.103257,-0.753857,5.644948,7.101339,9.507154,3.902017,1.771384,-4.947517,2.690788,-2.176827,5.659755,-5.528681,1.574574,7.830483,5.747380,2.061302,7.408082,-9.938856,8.816078,5.078550,9.859140,9.958213,-1.083621,-5.454540,1.313470,-1.987817,-2.738575,5.239161,4.873052,4.243575,2.833295,5.890122,-6.403652,8.019326,9.544573,-0.092339,7.920115,2.756315,-8.856813,2.339587,3.849862,-0.783668,-5.988364,3.722906,-0.626924,3.839710,5.660404,-9.086785,-0.460580,3.343783,0.349778,-6.245309,8.365518,-5.937776,5.510780,1.760683,9.630151,3.526056,0.736116,9.165124,6.625964,-5.269610,2.090145,-3.621322,-4.005386,2.978226,2.950075,9.582424,-3.355715,-2.501634,8.813840,-0.538632,2.855433,3.327244,-5.827094,9.416798,6.967652,-7.755972,-7.951176,-5.657615,-8.095175,-1.005934,-0.802572,6.114381,3.778835,-8.892531,8.181062,8.626768,-6.766248,-3.661616,6.508779,-1.409733,9.275748,8.249312,7.674570,-9.075729,-5.941396,-0.212940,-2.478392,6.397210,4.506374,7.096579,-0.078016,-8.489641,7.588207,2.057259,-4.343605,3.801179,-5.356009,0.220597,-0.983060,7.760403,2.016443,7.543946,0.882133,9.239621,6.009253,-8.924808,-8.617390,-6.120218,5.342031,-6.865357,-9.434891,3.949374,1.135383,-8.963703,-0.380059,-7.673935,9.278555,-1.554974,-6.930847,-5.261522,-3.603750,3.190641,6.969505,-2.309054,3.215660,-8.206474,-6.058845,-7.580469,-0.301540,6.989577,-4.594896,-0.337906,-9.322552,1.938444,5.055434,-9.558304,-3.780921,-9.750935,3.978667,-4.076755,4.392048,-2.413065,-9.336551,5.565595,-3.580681,5.800234,-8.879973,-6.134381,-3.566447,3.147840,2.401425,5.961333,8.112339,7.692706,-2.696904,2.056747,-5.824913,7.595201,-7.424618,-4.560074,-5.343595,-3.894472,8.337711,4.375552,-0.287733,5.340594,-9.311572,3.871695,-0.382318,-7.056639,-2.594632,9.668742,-0.103129,2.489209,3.389816,4.631128,4.368003,5.333879,-7.760226,8.460500,3.792203,7.129908,9.086990,-3.074132,6.611609,8.988984,-5.724122,5.936921,0.354780,-5.734206,-0.034505,-0.550813,2.794529,-6.405841,-3.168806,-4.477995,0.776833,4.996041,-1.338174,-2.338054,3.895469,4.645425,-4.835499,-0.622028,5.609295,5.971748,-2.637908,8.081006,4.548019,3.536197,7.571178,3.611556,6.088512,-3.883027,-5.350943,-1.607673,-3.566171,-3.994001,-1.691214,-5.772203,6.945117,7.028866,-7.963854,2.934739,-4.259602,1.595883,-2.062758,-8.839632,-1.823551,5.562550,-1.975996,-6.016625,5.722706,5.047455,6.943482,1.537462,1.611417,-3.467687,9.714169,5.563467,-3.649299,-6.952108,-7.065662,9.327320,3.016002,0.966908,-6.285039,-1.784122,-4.067177,6.412701,9.659236,-9.236158,8.413277,-8.441694,-1.014723,-6.067285,8.865286,4.570537,-2.588682,-0.847460,1.493606,0.319099,9.650867,7.430216,9.459997,6.947594,7.006889,-3.857223,-5.462860,-1.397970,-0.227428,0.335997,6.156577,6.524675,8.356757,4.908702,-9.084810,-2.273441,-6.980797,6.022727,-8.166967,-3.612630,1.328467,-7.317616,-2.946429,-4.156281,-5.921518,-9.130237,1.521876,8.533825,5.750976,5.444477,4.382465,5.960652,-3.107457,1.788300,8.200277,-1.665246,-8.365287,-9.699438,9.195288,-2.913743,-0.334138,9.953807,-7.433056,0.054677,1.251158,4.118078,-8.120144,-5.684653,-0.865907,-5.288019,-3.370204,-1.381835,3.445519,3.514100,3.064802,-0.975636,-3.157926,8.200123,-0.133653,-7.768420,-2.334398,-5.732167,-8.856501,9.066183,5.861451,-1.953777,-8.813462,-5.934326,5.713784,2.195772,6.761831,-1.266165,8.805066,2.385532,-2.996870,-9.741463,4.540169,-8.279709,8.773017,-6.029920,1.269790,-2.181572,2.604002,7.794628,-8.388604,-5.961720,1.987522,7.983779,-5.813034,-0.068263,-3.115812,6.239797,-7.582851,9.351026,5.651605,-8.664169,-0.453775,9.231500,2.101774,-1.629435,3.876967,-2.044544,-1.828789,3.878113,-9.759456,6.056494,-5.903122,-7.786058,-9.484831,7.928892,-4.752013,-4.577682,-6.812299,-1.201810,7.583914,-9.954319,2.734429,2.074485,-2.216857,8.474314,-4.929615,-4.492771,0.906225,2.237480,-9.552924,-2.520979,-5.117039,-2.508795,-5.159816,1.038525,3.783718,-8.363398,-1.837057,-4.027528,-6.443796,0.428332,3.734150,-6.045709,-9.940089,-4.858404,-0.112283,9.153818,-2.392997,6.280784,9.140524,-8.323670,-3.531988,5.094553,-5.341483,-0.168919,4.694156,6.158535,4.636360,-6.328841,-5.032876,-5.295963,1.511841,8.585437,6.868744,-2.180805,3.258246,-6.930567,6.292080,-7.449914,3.028695,-7.536368,-9.313955,8.940700,6.399938,-7.707314,1.109973,-9.692392,-4.012907,-1.860664,0.404265,-7.730663,4.752308,-9.575420,4.613815,-2.126509,1.176125,2.441833,-6.299726,9.550954,-4.367302,6.060823,6.145435,-7.882697,-7.132128,1.692503,8.512438,-2.460140,-1.854550,1.691341,-1.245888,1.243631,7.569317,1.728199,5.439415,5.778379,-3.369323,3.946419,9.372043,-9.633942,-3.580050,0.232610,2.795151,-1.971740,-7.769109,8.216980,4.971987,0.729450,-3.292434,5.156771,7.802826,5.099905,7.460407,1.333434,9.543917,-0.215445,-0.681458,1.825429,-7.912016,1.010752,-8.601811,4.115234,4.109013,-6.557005,0.436700,-9.180373,-9.965997,8.990931,-9.714863,-6.475657,-7.299069,-2.801450,-7.728662,-8.631027,1.883341,-7.609713,1.444042,-0.688132,-6.060695,-5.840018,-2.316938,-1.261992,-8.095652,-6.887867,8.986146,-5.681584,-8.931066,-4.711000,5.338697,3.946901,-5.094270,-3.532818,1.807736,0.568534,3.152151,2.757476,-6.606098,-4.714319,7.465040,5.770430,-1.848091,-3.596463,-2.763230,7.307913,-1.778254,4.320501,-1.215590,-5.286052,-8.928802,8.585043,1.475440,8.758659,0.733999,-1.858276,-5.228636,0.041230,-9.454287,0.933144,-4.301103,-2.729559,9.544273,0.224486,3.354874,3.608839,1.859061,9.570217,-0.838720,-6.481064,-3.934689,-7.595305,0.891751,4.543899,-6.670741,-7.611091,-9.067525,9.270797,-3.057332,4.499812,-0.482181,6.803304,-7.419519,-7.219351,5.620641,-7.672013,8.787874,4.164528,-2.590806,-9.241998,7.371131,4.798433,1.005759,-4.545639,7.890562,9.347206,-5.866017,-5.666752,4.020730,8.242593,6.834597,1.862233,5.433728,2.044067,6.012856,-1.749608,6.899770,-3.651216,-1.818090,-9.065931,8.734321,7.314798,1.850858,-2.382890,-3.144856,7.856237,8.789829,-8.384493,2.561406,-5.513105,-2.737276,-3.356107,-5.389001,-3.506754,4.623070,-5.789862,9.354543,-8.411790,1.517836,9.178064,1.408566,-4.429673,1.754080,5.777071,-9.259107,-4.112147,-1.704103,-5.619565,3.006387,9.358090,-4.985090,3.682213,9.442905,-4.535427,-5.417248,-3.415746,-8.111292,-7.639524,9.698645,4.400136,2.563313,-7.244214,-1.561115,-2.631799,-5.858942,-1.437146,-4.177285,-1.004540,6.960815,-1.331966,-9.343297,5.354546,1.989367,7.222157,9.851554,6.716299,-6.608094,-3.048250,-6.566957,-3.244060,-8.670741,2.938431,0.617291,-9.562558,-9.166497,-0.342695,1.829913,-4.277635,-1.464415,-4.174641,-3.334380,-1.873574,3.167480,0.247559,-9.299421,-1.393542,-8.620120,3.587343,8.438792,-0.980800,-1.552251,6.145739,7.484713,4.127094,2.100900,2.319885,1.329153,-0.429560,9.484688,-7.628490,4.908576,-2.514552,5.547255,3.401224,-6.505680,-3.274908,1.933996,-6.138258,6.658024,-8.731631,6.807138,-0.998021,0.736783,-3.337908,-7.973050,-1.758824,2.474713,1.704096,-1.481621,-1.705044,4.312753,-8.633913,-1.723418,1.376876,-9.907850,-8.861510,8.498156,-0.775997,5.577127,4.743839,1.905056,7.857937,2.558229,3.455125,-0.143225,-3.979627,5.679425,-2.079083,7.068423,1.905101,2.095131,-8.377297,0.914556,6.172698,4.144495,-2.445002,5.362222,2.928721,1.361741,-1.080489,-1.832953,7.299280,4.398063,7.809917,4.362695,-2.135820,-9.754443,2.767552,7.107203,-6.334289,-8.595809,-3.708197,3.624087,-7.386606,-7.057694,-9.314426,8.254556,-7.740535,2.981796,7.165170,9.139094,2.793518,-9.718386,5.870622,0.183410,-5.640684,-0.760620,1.076805,5.108207,-7.989056,7.589766,-0.431563,-9.548898,2.360168,3.909959,-9.679430,6.022708,-5.972033,2.553030,8.752722,-7.596737,-7.838759,-9.462253,-7.240897,5.283923,-6.112267,1.168280,4.388292,8.764370,9.287576,8.000296,1.161526,2.072806,2.267376,5.973963,2.069159,-9.371124,2.919597,-3.626420,-9.359862,-2.607413,-8.763961,-7.745302,-6.304913,-6.587485,-6.064132,8.417765,-5.401737,7.545009,5.399088,0.414985,-4.055374,-8.611567,-9.330002,1.694614,-2.280311,4.076968,0.092822,-4.635609,-8.483006,7.441720,1.358935,-5.915789,9.550887,3.467932,3.154005,-4.196535,-8.058101,0.724689,3.655048,-5.399971,-7.342152,-7.977507,8.889513,0.589234,1.045187,-6.550574,-1.334535,8.467150,-1.572094,-9.080206,3.692435,-5.173530,-7.050799,-2.058387,-8.581003,7.350659,0.413458,7.132441,4.386935,-9.002328,5.293024,7.829304,6.232953,-3.269491,4.429987,2.057462,1.794944,-5.328029,6.913853,8.262068,8.035493,1.131798,-4.328355,6.623867,9.676434,-1.912979,-7.008038,-2.234818,-0.452616,-2.743225,-6.587600,-4.179270,4.972238,9.455869,-7.298511,-2.903581,2.160624,-4.998601,-3.682382,8.106499,5.803389,9.806946,9.971953,1.270048,-8.162701,5.529523,-9.303251,-2.373679,4.594972,-0.696650,-6.199880,3.330680,-7.547153,1.887763,-9.388627,7.033775,-4.063055,0.473568,-4.087095,-5.015796,-2.903477,8.316541,2.469606,-2.895554,9.570550,-1.595527,-6.540576,-5.839255,1.327397,2.801890,-6.597838,6.617659,0.592080,7.161765,-2.451184,-8.537384,7.302610,8.913605,7.433986,1.607894,-1.713048,-8.227426,-9.554689,-9.988905,-1.285398,8.178137,-9.118959,-5.780530,7.169513,2.297739,3.957755,0.284629,-0.722175,4.781857,-1.803188,-6.148008,1.918071,2.202631,8.824848,0.811379,-4.708943,8.445779,-3.434129,-0.930251,1.215692,0.386589,-3.430699,6.825018,5.703473,-8.632539,-7.528567,-4.207839,-3.137412,8.570290,8.263523,8.764832,6.987548,-8.306828,-3.929656,8.206794,4.433681,-2.934305,2.344452,-7.330236,2.975045,9.312210,5.975339,2.412729,8.389411,-1.588605,6.609432,-1.258010,-5.515715,-6.837592,-0.792335,-4.031068,-7.160826,2.585790,-4.330389,-1.752506,-2.994212,7.438606,-0.830639,3.701477,8.876367,-0.034272,-9.762737,5.617653,-7.599203,6.951843,-2.830646,-1.462856,4.397833,-6.927011,6.697673,2.984115,-6.389822,8.719490,3.662316,5.178654,-3.215740,9.777747,-2.673877,7.564884,8.100966,6.518946,-1.567317,-7.619352,5.966277,-3.974391,-7.954454,2.536862,-2.016164,2.564960,8.758693,7.695863,-3.142131,-1.855214,3.836601,9.194064,2.981818,-0.459948,-5.957985,8.392732,-9.693047,-4.369729,9.318010,5.433062,9.897440,6.571443,7.854158,-8.107603,2.519557,2.231220,8.225711,1.576869,5.137398,-0.526513,7.992964,-4.571600,8.902173,-5.687293,-8.955858,5.916604,-4.189172,-6.693745,5.559678,5.389048,-3.490842,1.598309,-5.104498,-5.426654,7.161987,5.259063,-5.138100,-5.328624,7.494598,-9.489560,-4.773022,5.496995,-0.483496,7.689443,-0.229935,-1.189285,8.793160,-6.231808,4.477632,7.521785,-0.545114,9.395356,-1.840793,-2.949336,-8.305006,4.304668,-6.195776,5.732489,3.570368,-6.775907,8.755680,-4.542451,7.627075,-6.171364,4.471256,3.367269,9.242276,-4.632046,-4.006505,2.663851,3.385274,5.554692,2.266515,-8.573026,5.926301,-5.949781,1.107896,9.332501,-7.547537,6.035737,-7.838468,5.234700,0.965666,0.700075,-4.081216,-7.879794,-7.820047,-2.197853,-3.925727,-2.920134,7.945389,6.371076,6.440041,7.753158,-7.667758,4.323237,4.524398,-2.454710,-6.295440,-4.253494,-6.700795,-0.387646,3.034922,-4.094249,1.920208,6.901349,-5.529018,4.136297,-3.468406,7.022243,-4.266278,1.168334,3.723681,-7.312268,6.225487,-1.760207,-7.819181,-7.775206,7.033396,5.796069,5.812879,-3.280137,1.557136,1.848779,-6.180719,0.697018,5.021714,2.810205,-3.658154,-6.600925,-3.375209,-7.568000,5.012071,-3.643363,2.881763,7.333474,2.123842,-0.545073,-8.779800,-1.187988,-9.016955,8.286081,-1.655061,-0.606774,-9.934641,-4.508639,-3.990489,3.386753,-8.898012,-5.058105,-8.429238,-9.358769,2.327610,-4.506537,1.344067,7.018999,-2.338037,6.137120,6.908594,-9.767467,0.103082,-6.341179,1.178286,4.156716,-8.118698,2.116970,-8.104683,-4.752132,5.335000,3.885101,1.201113,-4.686715,7.563734,-5.275621,-1.207493,-4.780480,8.632331,6.271064,2.924103,-9.520441,-4.366866,-1.574035,-5.619312,3.468320,3.222417,-8.750472,8.100463,9.295058,-7.609739,6.267700,-6.564009,-7.041990,-1.435386,-9.142173,3.243285,4.584044,-9.554645,-8.333789,-5.670678,-3.633676,-9.392074,-9.651553,-4.702445,-9.435332,1.220881,7.229370,6.208659,-4.264614,0.989976,7.041190,8.729829,-7.237400,-3.679538,-9.966712,-2.108219,0.545295,2.372781,-2.924586,3.245681,1.542746,-1.278913,-7.865746,-2.450370], dtype = "float32")#candidate|10751|(1680,)|const|float32
call_10748 = relay.TupleGetItem(func_9508_call(relay.reshape(const_10749.astype('bool'), [15,]), relay.reshape(var_10750.astype('float64'), [234,]), relay.reshape(const_10751.astype('float32'), [1680,]), ), 6)
call_10752 = relay.TupleGetItem(func_9512_call(relay.reshape(const_10749.astype('bool'), [15,]), relay.reshape(var_10750.astype('float64'), [234,]), relay.reshape(const_10751.astype('float32'), [1680,]), ), 6)
var_10753 = relay.var("var_10753", dtype = "int8", shape = (13, 378))#candidate|10753|(13, 378)|var|int8
bop_10754 = relay.greater_equal(call_10748.astype('bool'), var_10753.astype('bool')) # shape=(13, 378)
bop_10757 = relay.greater_equal(call_10752.astype('bool'), var_10753.astype('bool')) # shape=(13, 378)
output = relay.Tuple([bop_10728,call_10737,const_10749,var_10750,const_10751,bop_10754,])
output2 = relay.Tuple([bop_10728,call_10738,const_10749,var_10750,const_10751,bop_10757,])
F = relay.Function([var_10726,var_10727,var_10750,var_10753,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10726,var_10727,var_10750,var_10753,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

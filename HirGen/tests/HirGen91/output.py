import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_140 = relay.var("var_140", dtype = "float32", shape = (2, 13, 5))#candidate|140|(2, 13, 5)|var|float32
var_141 = relay.var("var_141", dtype = "float32", shape = (2, 13, 5))#candidate|141|(2, 13, 5)|var|float32
bop_142 = relay.power(var_140.astype('float32'), relay.reshape(var_141.astype('float32'), relay.shape_of(var_140))) # shape=(2, 13, 5)
uop_147 = relay.cosh(var_140.astype('float32')) # shape=(2, 13, 5)
uop_155 = relay.sin(var_141.astype('float32')) # shape=(2, 13, 5)
output = relay.Tuple([bop_142,uop_147,uop_155,])
output2 = relay.Tuple([bop_142,uop_147,uop_155,])
func_168 = relay.Function([var_140,var_141,], output)
mod['func_168'] = func_168
mod = relay.transform.InferType()(mod)
var_169 = relay.var("var_169", dtype = "float32", shape = (2, 13, 5))#candidate|169|(2, 13, 5)|var|float32
var_170 = relay.var("var_170", dtype = "float32", shape = (2, 13, 5))#candidate|170|(2, 13, 5)|var|float32
output = func_168(var_169,var_170,)
func_171 = relay.Function([var_169,var_170,], output)
mutated_mod['func_171'] = func_171
mutated_mod = relay.transform.InferType()(mutated_mod)
const_387 = relay.const([[[0.427336,-3.156285,-6.504832,-1.852407,-5.847455,6.340430,7.754967,-4.777011],[-1.816317,-3.881871,5.496642,2.809226,-3.319443,-4.699225,2.718838,8.418811],[-9.784257,6.721347,2.387041,-9.767046,8.628894,-0.611697,9.073126,-4.344253]],[[-9.830241,-4.535147,-9.091861,-7.746412,-7.933531,8.980613,-8.937969,-7.228111],[-5.156089,-0.194867,5.284823,-5.204352,-7.111997,-8.602645,5.262160,7.758934],[5.111578,1.276301,-8.626886,9.518109,-3.123186,-4.661545,9.977058,1.521263]],[[-2.355232,6.806636,-3.004266,-8.721447,-3.605617,-0.425307,-2.229807,-4.833779],[0.307374,9.019342,9.099010,2.577799,2.575786,7.451992,-7.174129,3.474969],[-0.584787,6.935087,-3.903568,7.596221,-7.612379,-3.550420,-9.831352,-1.753485]]], dtype = "float32")#candidate|387|(3, 3, 8)|const|float32
var_388 = relay.var("var_388", dtype = "float32", shape = (3, 3, 8))#candidate|388|(3, 3, 8)|var|float32
bop_389 = relay.not_equal(const_387.astype('bool'), relay.reshape(var_388.astype('bool'), relay.shape_of(const_387))) # shape=(3, 3, 8)
output = relay.Tuple([bop_389,])
output2 = relay.Tuple([bop_389,])
func_394 = relay.Function([var_388,], output)
mod['func_394'] = func_394
mod = relay.transform.InferType()(mod)
mutated_mod['func_394'] = func_394
mutated_mod = relay.transform.InferType()(mutated_mod)
var_395 = relay.var("var_395", dtype = "float32", shape = (3, 3, 8))#candidate|395|(3, 3, 8)|var|float32
func_394_call = mutated_mod.get_global_var('func_394')
call_396 = func_394_call(var_395)
output = call_396
func_397 = relay.Function([var_395], output)
mutated_mod['func_397'] = func_397
mutated_mod = relay.transform.InferType()(mutated_mod)
const_651 = relay.const([[[-5,-6,-9,-2,-4,4,10,-8,-10,-8,10,-2,-6,9,-10,2],[9,-8,8,-7,5,-2,9,9,-9,-6,3,-9,2,-1,-4,-10],[10,-3,-10,-1,-4,-9,-2,-2,-7,3,8,-1,9,-5,-4,6],[-4,4,-1,-10,9,8,10,-6,10,-1,1,-1,5,-5,-2,4],[-2,-10,5,-8,9,-10,5,10,-7,-4,-2,-9,2,7,-5,-1]],[[-1,-9,-1,5,-10,3,-2,3,-3,-8,-3,-5,2,-10,-2,3],[-2,-4,-7,4,-3,-5,1,6,6,-2,-2,-3,-6,-1,-1,-6],[7,5,6,-3,8,7,7,-5,9,1,4,-6,-6,1,-3,10],[4,6,-7,-2,-1,6,4,3,9,-5,-8,3,9,-1,10,4],[9,7,-1,10,-10,1,8,-7,6,7,-6,9,-4,-10,4,-10]],[[6,-8,6,10,-4,10,-5,-6,3,-6,-4,4,5,-2,-10,3],[-10,6,9,-2,8,-5,-2,-3,-8,2,4,-10,2,10,-6,9],[-4,-2,4,7,5,-5,5,-2,9,-5,-1,-3,-10,-6,-6,2],[3,-4,-5,7,3,9,-1,10,-6,-2,1,4,8,8,7,5],[-2,-5,10,-9,5,10,10,6,5,6,5,7,-10,-9,-5,-4]],[[-5,-3,10,-7,-1,-1,-9,10,-6,1,-6,5,3,2,-2,4],[5,4,1,-2,-10,-7,9,4,4,7,4,-6,9,5,-4,9],[-8,5,-6,-2,-10,-5,6,8,-5,-10,8,5,5,1,9,-9],[4,-6,2,7,9,-3,-3,5,-8,4,4,-5,9,6,-5,7],[-8,-8,-3,4,-8,6,-10,9,7,-1,-5,10,2,4,-3,-7]],[[-3,3,1,-5,4,2,2,9,-7,4,9,-5,-2,-10,-9,-5],[-1,8,8,1,-7,-6,-6,-10,-9,4,8,1,-8,4,6,-2],[10,9,5,9,-4,-1,-4,-3,7,3,5,-7,4,4,1,-9],[8,-10,-9,-5,8,3,-8,4,-2,-5,10,-3,1,4,-3,-4],[10,-2,-5,-2,-4,2,9,-9,5,-9,-6,-9,8,-1,-8,-2]],[[1,7,-10,8,4,-7,-7,6,-2,5,9,-5,9,10,2,-6],[-5,-8,2,10,-5,-10,3,4,-5,3,5,3,-3,1,-4,-6],[-2,3,-10,1,-9,-8,1,10,-1,9,1,1,-2,9,1,-4],[-2,6,-1,-7,-10,-7,-7,4,-1,5,5,-8,-10,3,-4,2],[-6,-10,-5,-9,2,-5,-2,8,-2,-5,-10,-3,10,2,7,-2]]], dtype = "int32")#candidate|651|(6, 5, 16)|const|int32
var_652 = relay.var("var_652", dtype = "int32", shape = (6, 5, 16))#candidate|652|(6, 5, 16)|var|int32
bop_653 = relay.logical_xor(const_651.astype('int32'), relay.reshape(var_652.astype('int32'), relay.shape_of(const_651))) # shape=(6, 5, 16)
func_394_call = mod.get_global_var('func_394')
func_397_call = mutated_mod.get_global_var('func_397')
const_666 = relay.const([7.687253,7.333530,4.144367,-6.173553,9.278604,6.468301,-4.949408,4.205153,-3.772321,-8.500195,-6.497100,6.748153,-2.268933,9.565606,-9.164698,2.946620,1.939426,6.026981,-3.501051,-3.267924,-9.055475,-5.915757,3.242191,-5.980533,2.317374,-7.273081,-4.644695,-4.297777,3.944562,1.611090,5.781048,8.124751,3.530553,1.840397,-2.508198,0.839402,0.412445,5.092242,5.840600,-5.331489,-8.091818,-7.026854,4.748031,7.150709,8.551679,-2.006587,-0.623865,5.353280,5.781966,6.763451,3.582610,-1.872542,-4.003925,9.428170,4.709271,-8.932993,-2.459000,9.355330,-3.483689,-3.427207,3.665719,-3.204070,-4.842743,3.015520,0.676446,3.296952,9.772028,3.327056,7.400426,0.071926,8.821846,5.809249], dtype = "float32")#candidate|666|(72,)|const|float32
call_665 = relay.TupleGetItem(func_394_call(relay.reshape(const_666.astype('float32'), [3, 3, 8])), 0)
call_667 = relay.TupleGetItem(func_397_call(relay.reshape(const_666.astype('float32'), [3, 3, 8])), 0)
func_394_call = mod.get_global_var('func_394')
func_397_call = mutated_mod.get_global_var('func_397')
call_672 = relay.TupleGetItem(func_394_call(relay.reshape(const_666.astype('float32'), [3, 3, 8])), 0)
call_673 = relay.TupleGetItem(func_397_call(relay.reshape(const_666.astype('float32'), [3, 3, 8])), 0)
output = relay.Tuple([bop_653,call_665,const_666,call_672,])
output2 = relay.Tuple([bop_653,call_667,const_666,call_673,])
func_695 = relay.Function([var_652,], output)
mod['func_695'] = func_695
mod = relay.transform.InferType()(mod)
mutated_mod['func_695'] = func_695
mutated_mod = relay.transform.InferType()(mutated_mod)
var_696 = relay.var("var_696", dtype = "int32", shape = (6, 5, 16))#candidate|696|(6, 5, 16)|var|int32
func_695_call = mutated_mod.get_global_var('func_695')
call_697 = func_695_call(var_696)
output = call_697
func_698 = relay.Function([var_696], output)
mutated_mod['func_698'] = func_698
mutated_mod = relay.transform.InferType()(mutated_mod)
var_790 = relay.var("var_790", dtype = "uint32", shape = (9, 15, 14))#candidate|790|(9, 15, 14)|var|uint32
var_791 = relay.var("var_791", dtype = "uint32", shape = (9, 15, 14))#candidate|791|(9, 15, 14)|var|uint32
bop_792 = relay.less(var_790.astype('bool'), relay.reshape(var_791.astype('bool'), relay.shape_of(var_790))) # shape=(9, 15, 14)
bop_797 = relay.floor_divide(bop_792.astype('float32'), relay.reshape(var_791.astype('float32'), relay.shape_of(bop_792))) # shape=(9, 15, 14)
output = bop_797
output2 = bop_797
func_807 = relay.Function([var_790,var_791,], output)
mod['func_807'] = func_807
mod = relay.transform.InferType()(mod)
mutated_mod['func_807'] = func_807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_807_call = mutated_mod.get_global_var('func_807')
var_809 = relay.var("var_809", dtype = "uint32", shape = (9, 15, 14))#candidate|809|(9, 15, 14)|var|uint32
var_810 = relay.var("var_810", dtype = "uint32", shape = (9, 15, 14))#candidate|810|(9, 15, 14)|var|uint32
call_808 = func_807_call(var_809,var_810,)
output = call_808
func_811 = relay.Function([var_809,var_810,], output)
mutated_mod['func_811'] = func_811
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1013 = relay.const([[[-10,1,10],[-3,-4,3],[7,-6,4],[-1,-2,-10],[7,-5,10],[-10,-5,-10],[6,-8,-6],[-2,9,-9],[-7,1,5],[2,-1,4]],[[1,2,7],[-10,7,-3],[-3,6,-4],[2,9,-3],[-5,8,-1],[5,-8,-1],[9,10,-1],[9,-10,3],[1,-7,1],[7,-4,1]],[[-1,1,-5],[6,4,-2],[-9,-9,7],[2,1,10],[-1,7,-4],[-5,5,6],[-10,4,6],[-1,6,-3],[3,-10,-7],[6,9,-7]],[[2,-8,8],[6,6,-2],[-5,-9,-2],[-3,10,-9],[6,-8,9],[-8,5,-9],[-1,3,-5],[2,-7,-3],[7,-3,-1],[-5,10,-2]],[[9,1,7],[9,2,-7],[-6,-9,4],[-1,9,-8],[-8,7,-6],[-8,-8,-1],[8,-3,1],[-9,1,-1],[1,-5,-7],[9,6,5]],[[5,-9,2],[-6,-1,1],[10,-10,-10],[-7,-2,-1],[3,-6,6],[-3,5,-3],[-3,5,9],[5,-8,2],[5,-8,2],[-7,9,-6]],[[-7,5,-2],[-6,9,-8],[-9,-10,9],[4,-3,-2],[-10,-2,4],[-6,-10,2],[-1,-8,2],[-9,-10,-8],[2,2,4],[10,4,-3]],[[-3,-9,1],[-4,10,3],[7,-10,2],[3,-10,9],[10,-8,-3],[-1,1,9],[1,-2,-3],[-2,-8,5],[-2,2,-7],[6,4,10]],[[-6,-4,-2],[6,-4,6],[-7,8,-1],[-3,-5,-5],[-8,10,4],[9,-10,6],[8,5,4],[1,-10,-5],[4,-5,5],[-3,-2,6]],[[10,7,-10],[2,-7,-4],[-10,10,-6],[4,5,10],[1,2,4],[-3,-3,6],[3,5,-7],[-1,-4,9],[-6,-9,-2],[10,2,-1]],[[9,-3,-2],[10,-7,5],[2,10,-7],[-3,2,5],[-10,-9,6],[-9,2,9],[-10,-1,-4],[10,-4,-3],[9,-5,9],[-7,4,1]],[[6,7,3],[3,-7,-10],[-3,-8,-3],[8,-8,-5],[3,-5,-7],[-9,8,10],[5,5,-10],[-4,7,7],[-4,4,-8],[-8,8,-7]]], dtype = "uint64")#candidate|1013|(12, 10, 3)|const|uint64
var_1014 = relay.var("var_1014", dtype = "uint64", shape = (12, 10, 3))#candidate|1014|(12, 10, 3)|var|uint64
bop_1015 = relay.left_shift(const_1013.astype('uint64'), relay.reshape(var_1014.astype('uint64'), relay.shape_of(const_1013))) # shape=(12, 10, 3)
output = relay.Tuple([bop_1015,])
output2 = relay.Tuple([bop_1015,])
func_1022 = relay.Function([var_1014,], output)
mod['func_1022'] = func_1022
mod = relay.transform.InferType()(mod)
var_1023 = relay.var("var_1023", dtype = "uint64", shape = (12, 10, 3))#candidate|1023|(12, 10, 3)|var|uint64
output = func_1022(var_1023)
func_1024 = relay.Function([var_1023], output)
mutated_mod['func_1024'] = func_1024
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1083 = relay.const([[[-8.427059,-8.463495,-7.527858,6.167497,2.860167],[4.746142,-9.222175,-2.888020,-8.656383,-1.208487],[-7.516322,-0.146687,-1.330963,-1.983583,-4.660668],[4.202314,-6.826072,-4.825706,0.336378,8.890466],[-0.697960,5.871492,3.876659,-3.214634,8.562193],[5.413976,-9.823493,0.815033,7.329111,-8.667552],[5.441759,-0.602768,-8.267948,-3.940692,9.020512],[-7.058776,-9.375765,-4.457973,5.669811,0.186595],[-3.912937,6.968673,-0.780518,4.121220,-0.543030],[-0.311863,-6.298418,8.072553,9.323689,-8.663576],[8.377711,-2.784379,0.338127,2.044842,-3.883874],[1.162376,-0.994367,0.669581,7.934506,-3.824663]],[[-5.101341,0.060492,3.278547,0.836729,5.604549],[3.007156,-3.635779,-7.769482,9.481081,0.733525],[4.880982,-0.951248,1.589353,-1.319864,-8.503485],[-1.129792,6.698952,0.853010,-2.312679,-3.529304],[3.569309,1.280148,4.595827,0.881014,7.118135],[-8.533603,3.445707,-0.345294,-6.129870,-3.476621],[8.999024,-6.571907,-1.668833,-1.604868,-1.776139],[-3.167530,-2.228370,-9.316595,-4.558218,-6.716631],[-1.211227,-3.250642,6.106423,-4.164245,5.250893],[2.112168,5.885948,-7.500302,8.279998,-5.351916],[5.069442,4.541868,-5.265251,0.621134,9.222311],[9.126356,3.793037,-3.870174,-3.898370,-3.799098]]], dtype = "float64")#candidate|1083|(2, 12, 5)|const|float64
uop_1084 = relay.sqrt(const_1083.astype('float64')) # shape=(2, 12, 5)
func_695_call = mod.get_global_var('func_695')
func_698_call = mutated_mod.get_global_var('func_698')
var_1102 = relay.var("var_1102", dtype = "int32", shape = (480,))#candidate|1102|(480,)|var|int32
call_1101 = relay.TupleGetItem(func_695_call(relay.reshape(var_1102.astype('int32'), [6, 5, 16])), 2)
call_1103 = relay.TupleGetItem(func_698_call(relay.reshape(var_1102.astype('int32'), [6, 5, 16])), 2)
uop_1105 = relay.atan(uop_1084.astype('float32')) # shape=(2, 12, 5)
output = relay.Tuple([call_1101,var_1102,uop_1105,])
output2 = relay.Tuple([call_1103,var_1102,uop_1105,])
func_1117 = relay.Function([var_1102,], output)
mod['func_1117'] = func_1117
mod = relay.transform.InferType()(mod)
var_1118 = relay.var("var_1118", dtype = "int32", shape = (480,))#candidate|1118|(480,)|var|int32
output = func_1117(var_1118)
func_1119 = relay.Function([var_1118], output)
mutated_mod['func_1119'] = func_1119
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1196 = relay.const(8, dtype = "int64")#candidate|1196|()|const|int64
var_1197 = relay.var("var_1197", dtype = "int64", shape = (7, 2))#candidate|1197|(7, 2)|var|int64
bop_1198 = relay.bitwise_xor(const_1196.astype('int64'), var_1197.astype('int64')) # shape=(7, 2)
func_168_call = mod.get_global_var('func_168')
func_171_call = mutated_mod.get_global_var('func_171')
const_1207 = relay.const([-5.731281,8.762824,-1.302548,-3.341421,-4.874803,3.497264,-9.777002,5.867337,3.647002,9.412896,-4.427306,-0.714112,-7.868473,-7.893597,1.313555,3.480744,-3.072008,6.222848,-2.504333,0.290010,-3.187737,-8.821449,7.082505,2.036176,2.975786,-2.551808,3.178169,1.187682,-3.529451,8.483102,3.325230,4.021079,2.650042,-6.252075,-7.819562,9.400261,8.059698,1.989892,0.253203,9.972351,3.801732,4.689215,-3.692673,-5.363669,-5.654939,-2.241127,-0.461005,2.215102,6.879769,2.971166,3.003970,-0.478652,-0.743998,-8.331878,-3.124750,-4.040880,5.584843,-0.987833,0.120420,-9.275462,-2.171370,3.039915,-0.746209,8.459927,8.973189,6.669796,9.837303,6.441220,5.881154,7.412602,1.380244,2.691348,1.823361,-4.412572,-4.100788,5.175156,-9.533484,5.762433,5.692111,-7.987349,0.678220,-3.266153,6.115363,9.623401,3.658145,-8.621742,-6.165906,9.248035,0.782522,-2.238455,2.724000,-1.692629,1.740995,-6.965064,-1.524428,5.339179,8.376935,-3.837439,8.310957,6.000508,4.710194,9.778827,-2.586798,8.274960,-9.451225,0.736806,8.868828,8.705160,-9.172434,-1.781657,-0.505283,-8.917949,2.339401,-3.189730,-7.471255,8.846411,8.679700,-1.953099,9.964727,0.319454,1.634195,6.123859,1.295887,4.947769,7.185336,-0.300557,7.490671,5.586018,-8.108030,2.026364], dtype = "float32")#candidate|1207|(130,)|const|float32
call_1206 = relay.TupleGetItem(func_168_call(relay.reshape(const_1207.astype('float32'), [2, 13, 5]), relay.reshape(const_1207.astype('float32'), [2, 13, 5]), ), 2)
call_1208 = relay.TupleGetItem(func_171_call(relay.reshape(const_1207.astype('float32'), [2, 13, 5]), relay.reshape(const_1207.astype('float32'), [2, 13, 5]), ), 2)
func_695_call = mod.get_global_var('func_695')
func_698_call = mutated_mod.get_global_var('func_698')
var_1213 = relay.var("var_1213", dtype = "int32", shape = (480,))#candidate|1213|(480,)|var|int32
call_1212 = relay.TupleGetItem(func_695_call(relay.reshape(var_1213.astype('int32'), [6, 5, 16])), 1)
call_1214 = relay.TupleGetItem(func_698_call(relay.reshape(var_1213.astype('int32'), [6, 5, 16])), 1)
bop_1217 = relay.logical_and(const_1207.astype('bool'), const_1196.astype('bool')) # shape=(130,)
uop_1221 = relay.sqrt(bop_1217.astype('float32')) # shape=(130,)
func_695_call = mod.get_global_var('func_695')
func_698_call = mutated_mod.get_global_var('func_698')
call_1225 = relay.TupleGetItem(func_695_call(relay.reshape(var_1213.astype('int32'), [6, 5, 16])), 1)
call_1226 = relay.TupleGetItem(func_698_call(relay.reshape(var_1213.astype('int32'), [6, 5, 16])), 1)
output = relay.Tuple([bop_1198,call_1206,call_1212,var_1213,uop_1221,call_1225,])
output2 = relay.Tuple([bop_1198,call_1208,call_1214,var_1213,uop_1221,call_1226,])
func_1238 = relay.Function([var_1197,var_1213,], output)
mod['func_1238'] = func_1238
mod = relay.transform.InferType()(mod)
var_1239 = relay.var("var_1239", dtype = "int64", shape = (7, 2))#candidate|1239|(7, 2)|var|int64
var_1240 = relay.var("var_1240", dtype = "int32", shape = (480,))#candidate|1240|(480,)|var|int32
output = func_1238(var_1239,var_1240,)
func_1241 = relay.Function([var_1239,var_1240,], output)
mutated_mod['func_1241'] = func_1241
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1500 = relay.const([[[-3.324273,-9.011020,-5.429224,6.851210,-1.550490,0.157179,-0.367505,0.615258,2.533446,5.672337,3.329063,-8.968579,-8.049496],[-4.580764,-3.843458,-5.280419,0.036905,5.117717,-4.426371,-8.809617,5.869347,-2.991866,-0.487829,-4.266237,7.500171,0.617117],[-7.307220,-3.942395,5.541369,-5.204145,2.846124,-0.427754,9.459804,-2.128861,-9.030703,7.847541,-8.378164,6.792724,3.541184],[-5.015551,-7.859432,2.900743,-2.766631,0.182136,-1.172139,7.538186,0.764310,-7.195012,-3.045579,-1.547196,1.495544,-0.985028],[0.748274,-0.709616,-3.250990,6.482454,-6.209633,1.763752,5.537500,5.098071,-1.855500,5.550549,-6.906960,6.972945,-3.708681],[-8.830598,1.453448,1.115271,-4.419385,2.065981,-9.398669,5.276655,9.312025,2.958884,-2.565724,-6.165595,-3.560529,-7.755841],[-2.830181,2.533350,6.372269,-6.016376,-6.868621,-7.670314,-6.478418,0.307382,-0.807337,8.642799,8.923659,-7.967392,5.743884]],[[8.811232,-6.005059,0.343038,4.468960,0.485392,-5.205127,9.448847,1.297591,4.789164,9.957458,4.439578,-6.707417,0.916390],[0.730051,4.940843,-0.589351,-7.164392,-0.369806,9.600244,-7.169809,-5.213965,4.565545,-9.547999,5.102174,-7.556492,-7.748443],[5.464294,-7.593271,6.170442,-7.596039,6.638277,3.710062,-2.420232,1.349102,3.969978,-2.495367,-5.114254,5.494417,2.294640],[-7.783639,6.336386,9.536727,7.959335,9.938409,4.110827,1.750932,-4.491158,0.516576,-6.767795,8.347612,-8.000768,-5.480226],[8.439457,3.653073,-2.784198,-0.672954,2.323387,-4.797531,3.586421,3.603346,-7.686586,9.183386,8.572994,2.245494,8.708840],[6.358794,-9.045572,-4.114828,4.246227,-6.447711,-9.856320,7.042523,-6.778420,-7.407240,2.285189,9.120179,0.341800,-9.041908],[7.844047,-0.045029,-3.706109,-9.105299,1.348503,-9.665518,5.679666,3.589852,4.197668,9.692499,-4.584960,-4.047860,9.105981]],[[8.202781,-1.866986,9.129844,5.007603,1.325247,4.461839,0.001804,-9.069290,1.218294,-2.568858,6.800346,9.596359,-2.916946],[0.015166,1.865988,-0.533325,1.228913,-6.077518,-6.445410,-8.162044,-2.890671,9.636700,6.004368,7.044144,8.273820,7.802143],[-9.647784,3.037387,-3.990154,7.080672,4.658461,1.558334,-9.744808,1.040315,4.719230,-3.256080,5.992413,0.807721,-9.280464],[2.652759,7.692166,-6.286398,2.609251,-0.830390,-5.505455,7.035084,9.445572,-8.913171,9.983588,-4.785693,-7.364375,-1.901434],[-3.140761,-5.744087,-9.217359,7.662339,-6.197880,4.933436,4.556504,0.436442,4.640560,-2.155132,9.914073,3.317703,-3.200982],[-0.968772,-8.483022,6.723903,-3.357190,6.107882,7.698905,-6.078831,7.882346,-6.866378,9.550313,-6.985933,-2.231375,3.379044],[-5.089437,-8.188928,-6.048229,0.545403,8.812274,-9.784393,-7.945723,7.847871,-6.759788,6.438940,5.481758,-0.947542,5.026507]],[[-2.888007,7.988315,-7.068083,-9.176153,7.574978,8.458192,6.738104,8.150312,-3.183444,-0.491000,3.469135,-9.456194,-6.831402],[-0.076915,-9.093695,4.117647,-6.438528,5.235339,-0.754449,7.599972,-4.949232,-2.161043,-3.758388,4.882613,7.019846,-7.243741],[-1.495293,1.099530,-5.521630,-0.860986,-4.346385,8.153193,-0.525590,3.109785,-5.501103,-8.303740,7.478972,2.794320,-0.647321],[-3.745925,-8.998031,7.150262,8.820033,8.467483,-4.927584,7.250724,0.647542,5.875435,0.230807,1.833706,-6.274636,-6.172766],[-8.361862,4.930967,1.575842,9.987636,-8.144294,-5.982450,4.174124,8.501839,3.646564,-9.366416,-2.184591,8.613027,-2.067033],[3.906103,-5.334834,-6.880983,1.008198,-7.962854,-1.812920,-1.769746,-4.270433,-0.840598,-9.990370,4.883333,-5.122890,0.040797],[-5.132548,-8.222571,3.596715,4.711865,-5.728565,-6.182050,2.280571,-2.762722,-1.439126,-3.812661,3.319622,8.058665,-3.998854]],[[-5.346592,-3.682638,3.504561,-3.028017,-3.511077,-8.815567,4.109641,9.520581,-3.697429,-0.651929,-3.537476,-3.395717,6.669781],[-0.866065,6.597075,-4.170809,8.016074,0.765580,8.686466,5.138353,4.253353,2.611172,-5.430505,3.908056,7.016441,7.290137],[-6.806192,-9.089268,4.720312,-3.584955,5.599134,-8.486218,-9.424752,-2.076524,2.451373,4.498546,8.675990,-2.702930,3.018352],[-1.774356,2.861488,8.859915,6.170070,-0.078912,-8.189508,-4.370341,2.007049,-0.758964,-0.631832,9.337467,-6.235820,0.472407],[2.019591,1.226994,5.587369,2.731656,5.054013,-7.442709,-9.760285,-5.008920,-2.094845,-6.235086,5.707845,7.102658,0.953984],[-1.071116,5.522624,8.514057,5.803836,5.026494,9.591782,4.222154,2.052625,4.792114,-6.177056,-5.016571,-9.167380,-0.144348],[-9.486950,-1.460739,-6.730417,1.003611,-2.943387,-0.027421,-3.639903,-8.665195,-1.200146,-6.481243,1.873862,1.174249,5.881617]],[[-7.474827,1.478950,-7.679518,-3.843530,0.854446,2.548331,-4.942555,-3.539025,7.707947,1.259301,-3.196077,1.232535,2.638189],[-6.010918,6.609879,9.295202,-4.261522,-0.993165,-7.913607,6.290140,-6.125684,-1.731870,-4.465025,2.752793,1.403028,1.778672],[7.397941,2.296264,1.299712,2.858489,1.969982,3.229856,4.374700,-0.317104,-6.436957,-8.483032,-0.390931,-7.285183,2.319967],[-1.358703,-6.818025,-2.895805,4.687434,-0.932657,6.867372,1.514527,-3.340580,-7.938638,-2.748780,6.746255,-3.407066,2.516681],[9.360785,3.228955,-9.594892,7.973305,5.263051,-7.239758,4.482353,-7.313366,-0.234061,-4.556856,-9.392695,8.258785,0.961872],[6.731956,-5.149742,0.041117,-8.788674,-8.869354,-1.901237,1.999151,6.165941,-2.186416,0.374947,4.899847,-8.450661,-0.766975],[2.865895,-8.622723,0.109972,-9.623412,-5.416929,0.600219,2.388005,0.890535,2.637870,1.988831,-0.396526,-1.291364,-2.388606]],[[-6.914716,1.952497,8.249563,-6.199633,2.049692,-6.438180,8.240558,1.861432,9.992689,-6.492247,1.558840,-0.454339,-8.701910],[-2.993867,-3.525914,-6.833200,-2.214153,2.822769,-0.302070,4.314308,7.169380,-0.323836,-5.132740,2.540355,-1.108802,2.910350],[-6.515527,-6.025916,-4.232629,9.654544,-7.104097,2.705721,1.248128,-3.907397,-0.610221,6.868570,7.729025,-3.397438,-8.841575],[-6.071092,6.868464,-1.951300,4.419842,-9.816556,9.911129,-7.747848,-4.489721,-3.353242,-7.913966,2.109858,-4.164898,1.079884],[-5.284008,-7.601113,9.174345,3.841192,-6.952748,-1.900044,2.628089,8.765687,-8.795220,-7.955807,-7.920711,-6.974909,4.560195],[9.261328,4.025959,-6.450404,5.215918,-7.451130,2.503721,7.792259,5.696542,0.911836,1.548504,6.938530,-1.565929,-2.240599],[0.836173,3.771369,-6.017652,-0.702196,2.348563,-6.267845,7.376293,-7.765209,-8.261003,-3.700231,9.557375,-3.853277,5.495008]],[[6.250829,4.230575,-3.921259,-0.486323,-8.369749,-1.558722,-4.394369,5.639641,-3.205749,1.970807,0.281328,2.873661,1.427833],[9.405557,4.989105,-8.497427,-2.037706,-4.671132,-3.266798,-1.640112,1.585393,9.254980,0.560432,-1.048186,-9.748019,-9.569877],[-7.298515,9.913911,-5.982374,9.413130,3.788699,-8.588314,-4.312620,-2.161637,-7.630091,7.804949,-2.656855,6.316379,2.062104],[2.503474,-9.293521,1.772864,0.161192,-1.334276,9.920975,4.975240,6.100151,-8.889347,-6.366002,-9.559199,9.448480,2.564841],[7.617771,0.713849,-3.934160,-6.129500,-3.256278,7.929882,-6.006643,-5.541986,-5.383396,1.069701,9.695256,6.331824,-0.875532],[-4.780058,5.048746,1.392795,3.785120,7.398211,-9.482872,-2.536683,4.027519,-6.489150,0.847129,8.119945,3.385984,-8.289061],[-6.785249,-2.120826,0.191982,-2.272451,-4.171170,7.859715,3.668950,-7.462041,-7.446434,-9.743279,-8.481444,-3.910561,9.202272]],[[3.339963,-2.504011,-0.269549,6.295789,1.923865,4.886295,4.602412,-8.445630,8.898713,4.819595,2.034650,-1.468214,4.679294],[-0.476840,8.667184,3.245870,-9.311984,-4.723750,-1.703901,-3.952148,-6.548713,-5.539189,4.197897,9.796622,-7.936635,-1.117137],[-4.769276,5.843359,-8.942901,8.196869,-0.669890,-4.427616,-8.613323,8.354825,5.725494,6.144409,2.834122,7.793475,-5.984562],[-3.175659,-6.555389,-3.733998,2.513207,-4.612169,4.618439,6.303226,0.626398,3.989836,-3.643454,-9.738598,-6.265381,-4.765805],[6.194072,-0.951293,-9.965384,-0.364749,-7.778843,4.572663,9.797954,1.031536,-6.416800,-7.214715,-8.942190,0.653565,-5.247886],[-7.716674,5.502880,-0.483876,7.534147,-7.364463,8.941249,-9.730296,1.307360,-3.512038,8.540168,-4.523646,-5.260928,3.936379],[-7.209723,-4.982423,9.830846,8.390061,9.288813,2.024335,-6.712705,-5.631673,7.410403,7.881416,-2.876645,2.374407,0.429738]],[[3.706813,-7.579555,6.069314,-4.101814,4.349065,-9.080776,-9.604141,-7.617872,-0.641236,-5.039488,3.940596,1.142774,-1.596310],[-2.874164,-8.551530,3.523538,0.555720,-5.479461,-5.372182,-0.390996,-8.680333,-2.700486,-9.706738,3.490231,-5.380199,0.450969],[3.112465,-0.346213,9.536485,4.653505,3.155816,1.861838,-1.011073,8.775555,-2.649309,-5.030384,-7.365434,-5.392149,9.489509],[-1.943418,1.594173,5.388182,-7.610010,-4.473650,-8.443174,3.330666,6.522517,8.769308,4.097606,-7.090984,-2.454626,-7.248746],[-0.390659,-5.790203,-1.402585,9.512559,-7.066907,-3.981675,-8.294428,-2.014637,-4.903684,-8.482538,4.223273,6.167164,-5.627412],[-6.393210,-2.790094,-3.211269,1.491985,7.405064,0.550091,9.160243,4.817684,-8.147621,0.261880,2.459080,9.211180,7.067478],[6.219553,2.804236,-9.857007,-3.071093,-8.735863,5.618560,8.669568,-3.219982,1.045471,9.219558,9.710157,2.477646,-7.623516]],[[6.504498,-6.249209,-1.245590,4.843332,-9.816003,-0.259342,3.182158,2.284577,-0.577962,7.261943,3.186953,1.330819,6.687328],[-1.663248,7.722447,0.823830,-0.228872,6.306769,5.533987,-4.487704,-7.751823,0.391021,-8.948877,1.568369,5.908373,9.440775],[8.003538,8.116554,8.090176,5.973695,1.160521,5.827464,0.670075,-6.307310,-1.171002,-5.482870,0.759407,-5.343981,-1.178987],[0.386237,-8.870740,-7.320101,8.730408,-0.375056,1.308338,1.169789,3.300333,7.170013,0.477693,4.389172,-6.038530,-4.968965],[8.293140,2.305624,-6.465117,-6.702632,4.906942,0.105666,-8.647476,-1.545369,4.047460,-1.943071,-4.468104,7.149617,-3.796674],[7.358498,-0.568901,-6.038613,-3.737492,9.004687,-5.206917,9.138124,-2.767796,-6.917228,3.161161,1.410842,-6.216128,3.512620],[7.111066,-9.679381,6.736874,-7.454469,-5.927506,-1.281232,4.468698,4.261447,4.863692,9.428757,5.598376,-5.904100,-1.262079]],[[-0.400991,-7.533607,-9.096173,-6.520369,7.285790,-1.036663,-7.958432,-4.423268,-9.500631,-0.591797,-9.950367,-9.094824,-8.607220],[0.927778,-2.132274,-7.072263,1.712094,-0.621747,-8.653423,-9.034843,0.508491,5.800515,1.917331,-0.045947,9.759864,-4.930784],[-2.681645,-6.157645,-7.500987,9.615831,6.917116,7.919947,-8.351101,-1.388539,9.870171,-0.057867,-2.914245,-6.743680,-0.326670],[0.728763,4.974615,2.773610,-0.215865,-3.134292,5.978579,-9.803531,0.781470,4.157918,7.014632,-5.625451,4.892166,1.988440],[7.483751,7.082492,-7.724514,9.870725,-8.870105,6.629447,-3.294793,-2.554287,-3.396532,0.080232,-0.860703,3.825143,-1.830696],[-0.677735,7.435277,0.101151,9.004968,-0.739955,0.347043,-2.131138,-4.759620,3.533583,3.334559,-2.642328,-6.045677,-7.274002],[6.679245,-9.171182,4.763746,2.732581,4.210950,9.481914,3.560634,-2.776182,-0.114737,5.452018,0.467180,2.776388,-0.074498]],[[-2.448362,7.554192,8.512344,-2.692110,2.271111,8.504894,-5.838381,6.390022,4.347503,2.850466,-1.501372,-0.474682,-5.699325],[-9.630996,1.242791,-4.736895,0.988940,-1.096188,-6.939115,-9.534978,-8.492920,-1.807414,-3.897939,1.579680,-3.191557,-1.358008],[-7.599653,-3.975496,-2.288413,-7.645370,4.939666,9.269925,0.437058,-7.193161,-8.367040,8.061604,-6.202488,-4.283886,0.998104],[-7.063122,-1.568622,-0.059881,-7.537585,-7.478996,9.655500,-7.080570,7.248653,5.444308,9.828727,-8.389088,4.132698,-2.354804],[8.842162,-7.038991,-3.730226,-7.520973,5.859830,5.714082,-9.284655,-8.086718,3.453074,-1.638979,-5.317264,6.321247,0.007335],[-7.366735,5.371064,-0.259077,5.676700,2.470617,-5.047484,-2.310123,0.675796,5.550976,4.900757,6.512371,-9.454101,2.710217],[-2.819024,-2.749322,-1.707400,-2.642294,7.599666,-3.483865,6.385741,4.777818,-6.463232,-3.084923,6.987117,4.897878,1.406541]],[[5.850513,-2.927190,9.843859,9.562416,5.628775,-3.900771,3.952788,-4.807793,-7.151655,-1.010709,0.084714,7.531676,-1.493379],[9.961176,-6.558017,-3.368165,-6.935070,-2.992497,5.625118,5.617701,-2.125119,-4.346537,-1.707642,6.411213,7.205474,-3.460588],[-2.030118,-0.149844,-4.273087,-1.111451,-9.668065,0.343049,-1.695434,-0.958485,2.989476,-0.261927,7.144295,-2.338243,4.773954],[-7.741470,0.099048,-6.106160,7.106834,-7.555348,-2.055055,-7.917267,6.919540,-8.973485,8.307770,-7.059645,-9.005733,-2.348397],[5.667331,0.430352,8.791211,9.723082,-9.481872,-6.032184,-2.673155,-1.900982,-1.798129,-4.546850,-8.359502,6.414336,7.197121],[-5.194556,-4.784429,-4.573377,4.188747,-7.894142,0.975001,6.129315,4.632488,7.312901,-4.267008,4.108449,-3.373699,3.275315],[-0.654278,7.427558,-8.047475,2.100189,-9.431484,-5.351650,-1.842116,-1.016923,2.194271,4.903632,-7.767449,-1.900611,-0.663707]]], dtype = "float32")#candidate|1500|(14, 7, 13)|const|float32
uop_1501 = relay.tan(const_1500.astype('float32')) # shape=(14, 7, 13)
var_1510 = relay.var("var_1510", dtype = "float32", shape = (14, 7, 13))#candidate|1510|(14, 7, 13)|var|float32
bop_1511 = relay.multiply(uop_1501.astype('uint32'), relay.reshape(var_1510.astype('uint32'), relay.shape_of(uop_1501))) # shape=(14, 7, 13)
bop_1517 = relay.bitwise_or(const_1500.astype('int8'), relay.reshape(bop_1511.astype('int8'), relay.shape_of(const_1500))) # shape=(14, 7, 13)
output = bop_1517
output2 = bop_1517
func_1520 = relay.Function([var_1510,], output)
mod['func_1520'] = func_1520
mod = relay.transform.InferType()(mod)
mutated_mod['func_1520'] = func_1520
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1521 = relay.var("var_1521", dtype = "float32", shape = (14, 7, 13))#candidate|1521|(14, 7, 13)|var|float32
func_1520_call = mutated_mod.get_global_var('func_1520')
call_1522 = func_1520_call(var_1521)
output = call_1522
func_1523 = relay.Function([var_1521], output)
mutated_mod['func_1523'] = func_1523
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1530 = relay.var("var_1530", dtype = "int32", shape = (5, 6, 11))#candidate|1530|(5, 6, 11)|var|int32
var_1531 = relay.var("var_1531", dtype = "int32", shape = (5, 6, 11))#candidate|1531|(5, 6, 11)|var|int32
bop_1532 = relay.equal(var_1530.astype('bool'), relay.reshape(var_1531.astype('bool'), relay.shape_of(var_1530))) # shape=(5, 6, 11)
bop_1536 = relay.right_shift(var_1531.astype('uint8'), relay.reshape(var_1530.astype('uint8'), relay.shape_of(var_1531))) # shape=(5, 6, 11)
func_1520_call = mod.get_global_var('func_1520')
func_1523_call = mutated_mod.get_global_var('func_1523')
var_1540 = relay.var("var_1540", dtype = "float32", shape = (1274,))#candidate|1540|(1274,)|var|float32
call_1539 = func_1520_call(relay.reshape(var_1540.astype('float32'), [14, 7, 13]))
call_1541 = func_1520_call(relay.reshape(var_1540.astype('float32'), [14, 7, 13]))
output = relay.Tuple([bop_1532,bop_1536,call_1539,var_1540,])
output2 = relay.Tuple([bop_1532,bop_1536,call_1541,var_1540,])
func_1543 = relay.Function([var_1530,var_1531,var_1540,], output)
mod['func_1543'] = func_1543
mod = relay.transform.InferType()(mod)
mutated_mod['func_1543'] = func_1543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1543_call = mutated_mod.get_global_var('func_1543')
var_1545 = relay.var("var_1545", dtype = "int32", shape = (5, 6, 11))#candidate|1545|(5, 6, 11)|var|int32
var_1546 = relay.var("var_1546", dtype = "int32", shape = (5, 6, 11))#candidate|1546|(5, 6, 11)|var|int32
var_1547 = relay.var("var_1547", dtype = "float32", shape = (1274,))#candidate|1547|(1274,)|var|float32
call_1544 = func_1543_call(var_1545,var_1546,var_1547,)
output = call_1544
func_1548 = relay.Function([var_1545,var_1546,var_1547,], output)
mutated_mod['func_1548'] = func_1548
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1590 = relay.var("var_1590", dtype = "float32", shape = (16, 10, 8))#candidate|1590|(16, 10, 8)|var|float32
uop_1591 = relay.sinh(var_1590.astype('float32')) # shape=(16, 10, 8)
uop_1595 = relay.acos(uop_1591.astype('float64')) # shape=(16, 10, 8)
func_1238_call = mod.get_global_var('func_1238')
func_1241_call = mutated_mod.get_global_var('func_1241')
var_1601 = relay.var("var_1601", dtype = "int64", shape = (14,))#candidate|1601|(14,)|var|int64
var_1602 = relay.var("var_1602", dtype = "int32", shape = (480,))#candidate|1602|(480,)|var|int32
call_1600 = relay.TupleGetItem(func_1238_call(relay.reshape(var_1601.astype('int64'), [7, 2]), relay.reshape(var_1602.astype('int32'), [480,]), ), 2)
call_1603 = relay.TupleGetItem(func_1241_call(relay.reshape(var_1601.astype('int64'), [7, 2]), relay.reshape(var_1602.astype('int32'), [480,]), ), 2)
func_1117_call = mod.get_global_var('func_1117')
func_1119_call = mutated_mod.get_global_var('func_1119')
call_1612 = relay.TupleGetItem(func_1117_call(relay.reshape(var_1602.astype('int32'), [480,])), 2)
call_1613 = relay.TupleGetItem(func_1119_call(relay.reshape(var_1602.astype('int32'), [480,])), 2)
var_1617 = relay.var("var_1617", dtype = "float32", shape = (16, 10, 8))#candidate|1617|(16, 10, 8)|var|float32
bop_1618 = relay.logical_and(uop_1591.astype('bool'), relay.reshape(var_1617.astype('bool'), relay.shape_of(uop_1591))) # shape=(16, 10, 8)
func_695_call = mod.get_global_var('func_695')
func_698_call = mutated_mod.get_global_var('func_698')
call_1626 = relay.TupleGetItem(func_695_call(relay.reshape(var_1602.astype('int32'), [6, 5, 16])), 1)
call_1627 = relay.TupleGetItem(func_698_call(relay.reshape(var_1602.astype('int32'), [6, 5, 16])), 1)
uop_1628 = relay.log(call_1626.astype('float64')) # shape=(3, 3, 8)
uop_1630 = relay.log(call_1627.astype('float64')) # shape=(3, 3, 8)
func_1238_call = mod.get_global_var('func_1238')
func_1241_call = mutated_mod.get_global_var('func_1241')
call_1631 = relay.TupleGetItem(func_1238_call(relay.reshape(var_1601.astype('int64'), [7, 2]), relay.reshape(var_1602.astype('int32'), [480,]), ), 2)
call_1632 = relay.TupleGetItem(func_1241_call(relay.reshape(var_1601.astype('int64'), [7, 2]), relay.reshape(var_1602.astype('int32'), [480,]), ), 2)
output = relay.Tuple([uop_1595,call_1600,var_1601,var_1602,call_1612,bop_1618,uop_1628,call_1631,])
output2 = relay.Tuple([uop_1595,call_1603,var_1601,var_1602,call_1613,bop_1618,uop_1630,call_1632,])
func_1634 = relay.Function([var_1590,var_1601,var_1602,var_1617,], output)
mod['func_1634'] = func_1634
mod = relay.transform.InferType()(mod)
mutated_mod['func_1634'] = func_1634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1634_call = mutated_mod.get_global_var('func_1634')
var_1636 = relay.var("var_1636", dtype = "float32", shape = (16, 10, 8))#candidate|1636|(16, 10, 8)|var|float32
var_1637 = relay.var("var_1637", dtype = "int64", shape = (14,))#candidate|1637|(14,)|var|int64
var_1638 = relay.var("var_1638", dtype = "int32", shape = (480,))#candidate|1638|(480,)|var|int32
var_1639 = relay.var("var_1639", dtype = "float32", shape = (16, 10, 8))#candidate|1639|(16, 10, 8)|var|float32
call_1635 = func_1634_call(var_1636,var_1637,var_1638,var_1639,)
output = call_1635
func_1640 = relay.Function([var_1636,var_1637,var_1638,var_1639,], output)
mutated_mod['func_1640'] = func_1640
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2148 = relay.const([[[3.929155,0.263377,-9.671833,6.134725,2.949164,-4.488550,-6.011076,9.040802,-8.383587,1.924791,6.314820,-7.392934,5.321551,-8.147982],[0.469846,-9.358411,-5.059933,3.223110,-1.496833,9.435608,-4.946128,0.593001,-6.549017,-2.402218,2.473505,-4.683212,0.600321,4.676299],[-0.049543,0.968129,7.328273,-2.937112,7.281405,4.667892,-6.723184,9.704803,-2.266814,3.940769,7.709858,0.243085,8.071979,3.401590],[0.164381,-2.563628,-9.517322,9.622352,2.468568,-9.914813,4.180541,-4.034174,-2.526565,-9.715976,-2.262777,-5.790332,9.746978,8.552938],[0.986714,-0.917907,4.387903,-2.738273,-9.518502,8.529946,1.677493,-9.560588,2.389671,-5.350725,-0.088244,-9.803181,0.462422,-0.939996],[0.898369,4.790219,-1.974336,3.831023,-2.585582,-3.736427,6.021355,-2.607933,2.807744,1.731468,5.803813,-8.483835,-5.448195,1.958513],[5.108040,0.682668,2.572394,3.072352,-7.461118,7.539562,-0.052374,2.185391,4.922924,-4.877492,-3.699395,-5.122211,-3.594682,6.436796]],[[7.696158,-7.921306,-0.688252,3.465478,-2.399717,0.281886,5.514264,-5.753047,-8.641877,0.981079,4.800439,-9.995774,6.906278,-3.383948],[-3.095443,3.103437,-9.472269,-2.604811,3.061367,-0.780548,0.145210,-8.679800,-8.128098,-1.200827,-1.706818,-9.906883,-0.120576,1.289056],[0.349610,5.005377,9.158086,-9.925042,-9.538203,-4.536369,-2.395333,8.544879,-9.660438,8.113060,-2.543464,-6.944788,6.450242,7.845268],[9.570762,-9.504507,-3.576017,-9.392748,-5.285180,8.937637,-1.603481,-6.423868,-9.023125,-4.576145,7.787947,6.819561,3.995513,-9.200778],[-9.603900,-1.187717,-0.101853,2.883625,-4.088070,-8.611066,-6.655136,0.936326,7.728850,9.250916,-1.430097,-6.074018,8.419775,0.392939],[1.939055,-6.710752,7.656600,-2.611532,4.252212,-8.376640,9.862958,-1.841116,-4.035548,-2.892463,5.397070,3.669302,2.987556,5.486119],[7.905731,-2.018004,-1.646643,2.041445,5.637855,8.767194,6.460233,9.020159,-5.758755,-2.496137,9.977579,-1.162919,-7.064290,-6.312764]],[[8.491364,6.284248,5.440626,-4.931994,-2.921790,2.416897,7.275989,-2.607870,8.379397,8.776393,2.555055,-4.808894,7.000610,2.571417],[8.716835,9.054341,3.187369,0.481430,-7.631968,-8.037845,7.868647,2.904715,-2.196112,6.733906,5.978454,4.320067,-3.408989,4.338784],[-0.400507,-4.306405,3.079547,-4.157857,-9.988662,8.474118,2.453175,8.628898,7.465101,2.584262,-2.864687,6.250927,-3.476735,-5.850420],[8.223759,-3.680993,-7.236746,6.215877,-5.715805,-3.197384,6.319438,-9.805001,2.908383,-7.742131,-6.333396,-8.624901,-2.809597,-4.929496],[-5.037842,-5.497686,-2.687970,1.728621,0.800565,-3.938641,-0.408371,-4.692822,-8.921578,6.060398,-0.161555,5.047947,3.476432,5.803809],[0.004299,-6.537257,-5.096494,8.108416,6.016588,1.337478,8.467945,0.341899,-3.178477,-4.178061,-3.060293,-8.461234,2.223917,5.809888],[2.529177,-7.916372,-8.933801,-8.931300,5.593947,4.332928,-8.514176,7.375142,1.824479,0.472838,-3.620268,-2.039042,2.480854,0.604249]],[[-1.140896,-8.773885,0.873960,4.571351,8.568551,-1.085693,3.734197,-9.677221,-0.033502,-9.122477,-7.798934,7.792882,2.229556,5.260221],[-9.096647,6.386641,7.664911,-0.633577,-6.038462,-7.086097,1.525105,9.306624,-0.592359,-8.111335,6.034957,-3.356846,3.371464,1.351548],[-0.106857,6.597593,8.037335,4.849704,-5.475992,-7.762798,5.292588,5.834847,6.391810,-2.182443,-7.295087,0.713324,1.823138,9.054567],[1.080575,9.972546,1.721728,3.464777,3.313764,5.241894,-4.259638,-7.321542,-0.174050,6.431449,-6.332598,2.371280,-9.663045,1.165505],[6.291334,-9.866132,3.730040,-8.762820,2.954322,9.862465,-1.974150,-6.203395,-7.319689,8.482698,-8.233246,9.634598,-1.734813,6.385147],[8.784079,-9.959976,2.460355,4.476924,-4.795426,8.738807,4.025252,-6.692621,1.392393,3.723268,0.247554,-9.687398,4.876436,9.930710],[9.552681,-9.309813,6.789631,5.955217,-6.583986,0.480076,-9.109651,-9.251276,9.559493,4.266864,7.334812,7.877014,3.075119,1.935824]],[[9.721876,-8.215653,2.307886,8.125610,6.901518,-1.688350,3.145365,-3.886204,-7.622184,-2.415920,2.770996,6.501062,-5.250296,-9.448476],[-3.743136,-3.071202,-8.566334,-8.290528,6.259783,-1.626260,-4.573381,-0.254203,-6.438786,5.327065,4.386863,-6.034795,-9.568641,-7.082037],[-5.455867,-2.783992,-6.504252,-1.725434,-0.170795,-2.026043,-8.960562,-2.644889,3.949736,9.238371,-4.997966,1.941676,-0.928786,-8.640705],[1.631776,6.362381,2.439548,-5.635206,-6.393180,-2.563399,-6.777756,-7.680942,3.496380,7.124631,-3.274955,-5.772835,-0.681716,-0.791820],[-2.800983,9.976228,0.152948,9.721229,-5.273656,-8.269443,0.960404,4.900827,-1.036486,-3.831897,8.938860,-6.246745,-0.464360,-2.066815],[-1.336540,5.085685,1.775732,-8.839776,1.211028,-1.677703,-1.822710,-2.614166,0.066983,9.827537,-5.074185,-0.330633,8.929861,7.380347],[4.839663,-5.483100,-1.913111,-8.456212,-1.953665,0.025583,7.046573,-0.553578,-8.884838,1.237754,-1.493473,4.341626,-3.837102,-4.095383]],[[8.525392,-2.437359,9.195390,-5.212799,-1.819608,-5.365541,-6.373978,1.072171,5.294138,3.894268,-5.374563,0.093328,1.834694,8.973012],[-3.894695,1.814826,0.899585,9.659134,2.749918,2.093237,-9.508015,-6.118608,0.580886,-8.023270,9.024343,-2.965924,-3.163609,5.850927],[4.128685,-0.636228,-4.550087,3.817701,3.298765,4.775427,-7.408772,-7.789095,-8.362578,7.017472,-4.232792,-2.610354,6.200490,-2.345335],[-1.741611,8.945207,-3.152364,-6.486120,-2.263491,7.856854,-1.556038,-6.850724,9.802630,3.721839,7.820249,0.913938,9.909379,-2.065491],[-0.008735,-6.949370,-2.016364,-9.909592,0.170018,2.362763,-5.770559,4.966793,0.408073,-6.292875,7.615241,-0.168078,-5.105188,-5.186620],[6.016717,6.971481,6.856509,5.029069,4.998950,8.842936,-6.537477,-6.503114,8.446345,6.616223,4.661995,1.572869,0.753487,-0.601272],[3.938792,7.542014,9.236110,-5.880503,4.931875,-4.110670,-2.951467,9.718425,-5.127265,1.146726,-3.245894,5.696259,-9.214612,-1.515146]],[[-0.763172,-7.016642,8.105389,3.835953,-4.517240,-4.441377,6.000406,-7.971973,-7.545820,-0.858227,-6.903314,-7.145438,-3.446089,-6.454221],[-3.823100,-8.493128,7.197992,-0.896896,3.700057,1.329950,2.795330,4.751742,-1.372047,-1.207049,5.557327,-6.702475,8.711125,-3.943145],[-8.505540,-9.374434,2.708724,5.222528,8.657354,-1.494838,4.987472,-3.474528,0.159303,9.574921,-3.213616,-4.145318,-8.923276,0.686162],[3.300474,0.122164,-6.847698,-9.166978,7.513371,2.431656,4.821442,1.687468,3.468542,0.709126,0.275939,6.661580,4.778265,5.640193],[-4.877639,2.779391,9.752661,4.120484,-1.517601,7.968359,0.756716,1.043849,-2.088726,-4.099235,-2.835586,-5.801152,-8.890160,7.246709],[2.373509,-5.738093,1.592275,1.365449,-7.325497,0.109225,-9.757547,-7.691097,0.115421,-8.848306,-7.193324,6.062709,4.274302,-6.550042],[9.688812,5.839904,4.275608,-9.599790,0.685518,1.774357,-4.254599,-6.108566,8.812712,5.414481,-2.176818,3.174987,-4.141228,-8.467426]],[[-9.379953,3.908914,-5.230445,4.910403,-1.793438,4.259285,2.606750,-4.679738,3.604582,8.737841,4.497864,7.341599,-7.085362,5.077636],[5.483706,-2.643587,-0.474161,-6.822375,-4.041503,-7.548062,5.675739,-1.988094,-9.198903,1.840069,-1.020774,9.022205,4.793759,5.948420],[3.508607,-9.060849,-2.183458,-6.491147,-8.935319,-4.279012,-3.955708,-0.568292,-1.412489,2.227878,4.411494,-0.402009,0.876697,7.824378],[-4.648879,-9.945136,5.861792,-4.829755,-0.220960,0.321541,7.983190,9.964007,-0.905765,-6.161096,2.083690,-3.684364,-9.435645,-6.918941],[-2.934784,-3.595596,-5.586198,-9.155382,4.320163,-2.569953,4.066828,-6.044331,4.642446,6.979942,0.635017,-9.802932,1.458415,0.877078],[1.737095,5.299579,-4.861007,-4.364441,-3.249275,-0.630233,1.100618,6.675316,-8.838768,-4.163517,-0.325978,-3.822238,3.093552,-9.545853],[5.888110,-5.799228,2.339443,-4.217500,2.293023,-0.193025,8.801119,8.077247,1.216401,7.629064,-3.518372,8.767586,1.906971,1.473752]],[[-3.234952,7.869185,8.457774,-3.553366,8.155636,-7.796602,0.013224,1.322541,-1.109009,-0.439219,0.095447,6.310965,6.154242,-0.127261],[-4.696423,9.895073,5.355685,-9.627520,-2.037301,9.502221,7.571577,-0.061485,2.919351,9.581965,-7.995392,6.525893,-6.052928,8.484899],[-5.162681,-3.977679,1.439330,6.787352,4.674616,-0.888239,9.869336,0.101045,7.149413,8.837207,7.595416,-2.098506,-4.171420,-3.948549],[8.950675,-7.353424,3.048615,-9.749564,-7.613142,-6.580842,-2.004195,7.154503,-6.710883,-9.038604,-3.837363,-1.100041,5.099390,2.675090],[2.973742,-7.282326,-3.645313,-5.168611,9.359219,-0.957438,-1.836276,2.545878,5.324463,-0.069596,-4.375377,-0.340374,8.607058,-0.970001],[8.013301,-0.983956,1.988819,8.587126,-7.108649,-3.452347,1.222988,7.704083,5.853090,-4.953877,-8.092766,-9.801451,3.895485,3.726201],[-8.291542,9.633349,-3.462660,-2.047885,-3.024921,3.541590,3.706098,8.779197,-6.872343,-7.173609,1.695895,5.223491,-0.919643,-9.258537]],[[-1.477880,-2.249973,-6.398649,-1.160300,6.681114,-1.896723,9.801799,-0.740933,0.506391,0.664287,0.643502,3.000100,-3.384526,-7.661330],[0.572098,-8.396190,-9.488615,-7.471824,5.700746,9.297808,7.888943,-1.608309,5.785101,8.606467,-8.885279,7.909919,-8.219678,7.045215],[4.958605,9.196609,-3.981608,-9.420551,-3.056704,7.031111,5.732315,8.418058,6.489235,0.063384,-7.944987,0.088415,2.202965,-8.402953],[-1.124153,-1.895982,4.334126,-1.279312,-1.671523,0.971321,9.998912,-6.665380,3.685040,4.716547,6.819781,-7.883135,5.048830,4.746397],[-4.569557,-8.991343,9.510470,-3.866487,5.452827,-7.178209,3.885589,-5.382295,3.850779,1.871528,-4.733523,4.763474,-5.538223,-7.293867],[0.631498,-5.342750,5.380974,-7.140954,-2.039823,-0.729608,3.973517,8.733915,-2.803984,1.190196,-4.894028,-6.634269,4.941937,-3.749001],[3.764048,0.868988,-3.720459,-6.088844,2.139627,-0.673258,3.899518,9.605916,-1.161694,6.829075,-1.119601,-2.445845,-8.579923,-0.329276]]], dtype = "float32")#candidate|2148|(10, 7, 14)|const|float32
var_2149 = relay.var("var_2149", dtype = "float32", shape = (10, 7, 14))#candidate|2149|(10, 7, 14)|var|float32
bop_2150 = relay.less(const_2148.astype('bool'), relay.reshape(var_2149.astype('bool'), relay.shape_of(const_2148))) # shape=(10, 7, 14)
func_1634_call = mod.get_global_var('func_1634')
func_1640_call = mutated_mod.get_global_var('func_1640')
const_2154 = relay.const([[-6.252159,-9.132491,0.954520,1.534368,9.195575,-4.235419,4.436532,7.244992,-4.362626,3.433816,-3.634966,1.078889,3.886365,-6.180472,6.387317,1.106820,-3.590570,-5.567342,-5.977163,8.043328,3.453621,3.754947,-2.843992,-9.820162,9.889450,-5.211661,2.965424,-9.759108,2.724427,-2.871570,2.404380,-2.726860,-7.526810,6.330965,1.908778,-7.304858,3.755171,2.710457,-7.695250,-9.181421,6.369968,1.067955,-3.281046,4.457289,-5.935149,-4.863741,-4.787614,2.109526,2.427484,6.317286,-1.473283,6.514263,0.935674,0.637737,-2.972449,8.092726,5.787114,4.883127,-8.724959,8.681220,-1.122433,-7.110139,-0.269142,4.534395,1.793215,-8.257148,-8.964480,0.188954,-6.076345,-3.526497,-3.270154,9.367327,-0.338034,5.026943,4.232341,-0.808517,3.119546,-2.969311,-2.980816,5.422999,-7.555296,6.371722,-9.761023,-5.680530,-5.330245,3.680083,-6.180642,-1.721756,3.856788,-8.050106,-4.753540,3.467785,7.777351,6.617126,9.438827,9.443530,6.179678,7.769492,9.555361,-1.842423,-8.544199,-8.917355,-0.741148,6.096270,4.355117,8.639564,-8.810616,2.402723,-5.087700,-3.471225,8.486349,-8.289986,-6.638469,-4.307582,8.209759,3.761940,6.782332,8.219578,-7.260108,3.286542,-2.435437,9.788651,6.891201,-3.754000,-6.566780,-5.913633,3.634774,-5.257806,-3.791329,5.559202,7.374007,5.860567,1.786960,3.862249,5.829297,9.585773,5.848176,1.028622,8.317767,-4.933407,-7.993556,0.459389,3.934165,7.408276,2.022330,-8.391108,-2.847673,2.304316,-6.991718,0.135012,1.507403,6.419220,-4.052773,-6.517759,-7.957796,1.800149,8.989900,-5.436627,-4.909840,-2.480466,6.114123,-0.711184,-5.824345,9.848226,-1.119704,-4.999589,6.113479,-3.604384,-5.846496,7.482794,-2.303990,1.111595,9.573048,-8.597952,-5.679672,7.631601,2.659895,9.375511,2.826466,-2.217787,6.535348,-1.300026,-2.586786,-9.544115,6.250205,-7.707116,-4.214890,3.203490,6.637346,8.297982,-5.278410,4.565832,8.561347,0.562786,7.271374,-4.960163,-9.828311,5.088939,-2.101333,-7.409266,3.831675,8.614238,-3.815019,-3.146322,-6.937652,9.407715,-9.435423,5.931239,2.737837,6.045745,-7.466623,-7.901236,-3.206423,-0.867045,7.738735,-8.242695,5.874421,6.272749,-2.940396,2.494869,1.191087,5.167086,-3.420865,9.881458,1.279172,-5.941102,2.724159,-0.504056,1.002058,-9.888500,0.239717,1.640409,-0.899917,2.241246,-2.238217,6.722054,2.287407,-0.110391,3.936691,-4.403199,-4.604309,1.427455,3.145523,5.035634,-7.729490,6.769807,-1.528998,-5.645019,0.098840,7.949724,-1.329335,-3.885778,2.997304,4.631378,-9.221878,9.378122,3.668289,-2.115208,-2.558012,2.270456,3.468048,8.288810,4.582644,-8.486765,3.664852,5.152638,8.972435,9.424377,-1.757748,2.807688,-7.852258,1.431746,7.000635,-8.735074,0.210860,-9.396789,2.467621,-1.967214,3.365822,9.769802,-5.092861,1.341603,-4.497641,-1.319002,0.265628,-6.544244,-2.311149,5.496819,2.318170,8.567293,5.389472,-5.074995,1.034718,-0.236903,7.480925,8.582852,-8.641195,2.099852,-7.969940,4.145009,-1.945390,5.266737,1.110238,-7.572163,0.131611,6.928678,-9.818202,4.366808,-6.342323,-2.815328,1.887966,3.007865,-5.486699,6.567218,-1.907250,8.943763,-2.173498,6.827379,3.627471,-8.527265],[0.913131,-9.074059,5.251204,-7.917749,1.593035,-3.278642,-7.657724,-8.440688,-3.284676,4.333671,-7.150102,3.593909,-9.540302,-1.716360,0.188743,-6.562317,-9.466693,-8.399332,-1.934543,7.198897,3.545866,-3.674511,6.970292,0.443404,-7.506557,-5.234548,5.497099,4.786230,-8.620365,9.855101,7.625042,-6.054183,-8.370828,5.691827,7.356886,-3.536411,-5.803507,3.069296,0.886319,-4.639021,6.214543,-0.207231,-4.358512,-6.653902,9.973209,-1.222073,9.724287,-6.695707,4.824294,-4.650789,-7.100242,-3.616461,-4.103542,-3.841267,-7.861162,5.941949,5.796766,-5.755960,-0.659367,-4.681126,-4.993202,-8.604154,-6.606749,-5.877800,-5.931859,-2.446286,0.847775,-5.258905,-0.766608,-3.505072,3.016683,9.867366,6.303566,-3.468129,-1.911122,-0.093885,-6.621012,3.005290,4.146368,-3.939082,-7.223247,4.053895,8.465359,6.269005,-3.687613,-2.191765,-6.263897,1.659796,8.796573,8.373311,-8.914617,8.018977,-5.664224,6.714413,-5.215382,3.580395,3.076507,-9.655292,-0.785743,-4.764250,0.874692,-3.718921,-9.243966,-5.093434,-4.569124,-1.940393,5.906828,4.702590,-4.862076,1.161329,-1.283000,8.269616,7.424944,8.558264,-5.041075,2.173035,-9.761599,7.089840,7.468300,2.216741,1.537562,-4.533891,9.784865,-5.447422,9.633019,-4.233038,-0.227397,7.894010,9.089571,-8.828706,-0.609904,-4.287087,8.145542,-7.999722,8.133448,-2.153730,0.411704,4.179790,-9.286717,-1.190586,8.977394,-4.727170,-7.881710,-5.122281,-7.223984,8.196038,-6.474039,6.579478,4.303181,-5.568166,9.391316,8.526825,3.008148,5.548065,-7.561989,2.147071,-9.225757,-4.552119,0.779906,4.250071,5.906282,3.926206,-3.644480,2.496992,-1.443410,-9.210596,6.143780,-7.169901,-5.754825,-9.810729,6.046505,-1.809602,2.861479,-1.730119,7.848254,-8.499494,7.836288,-9.151892,5.155961,9.369850,6.955418,1.617774,-6.557632,-8.680937,-2.707740,6.533548,-5.510634,8.450466,-9.677637,2.781506,2.743352,-6.245501,7.730390,-6.602379,0.287675,-2.218612,3.628675,1.485800,4.817683,-5.209485,-7.752377,2.235636,-8.013794,3.182230,-7.903064,-7.125470,-5.145284,-2.456815,-2.181987,-5.926497,1.220809,-4.655336,7.608940,-1.097142,9.454672,-1.719297,-7.357562,2.125275,-1.096967,-4.783928,1.693440,3.589512,5.958849,8.320371,-6.410866,4.362751,-6.826437,3.540040,3.835097,-5.648047,-6.811227,3.229831,-7.787978,0.768092,8.367745,1.118394,2.992343,-2.087440,8.812185,-2.359625,-1.045991,6.545953,8.226399,-2.472220,-4.599080,-3.385147,2.226092,7.137170,-4.369520,-0.452378,-3.312565,-0.681103,-6.091691,9.117410,-2.387136,-9.663822,3.812156,8.673077,-7.939470,-7.283530,-8.227321,8.863673,-9.161604,5.963929,-4.875696,-1.507613,1.122293,-7.778469,3.682827,4.494617,4.220658,-8.356365,8.087476,7.351501,6.549325,-8.480970,-8.047795,9.575105,8.925453,7.237925,9.342012,-7.436812,-3.166900,-6.950853,-0.158089,5.848761,4.356860,0.523833,6.843247,-1.406328,-4.603312,-5.792934,5.391336,1.689823,-8.228126,-9.126713,-0.159290,1.401245,4.782211,-7.854117,9.473142,7.240812,-9.903267,-3.238763,2.793965,-0.476241,4.970164,8.328465,6.214342,3.229906,8.756743,9.896422,4.688017,6.531681,-3.583446,-6.785367,3.916287,1.935265,-9.753830,-8.916801],[-5.621573,7.180256,0.092993,-0.105967,1.487218,0.918548,3.652591,-1.611560,2.954907,3.882882,-7.907092,3.086996,2.388196,7.863398,-1.029979,-3.619741,-5.882881,3.986757,-9.070830,-4.047767,2.207032,-8.496783,-6.001893,0.893990,-4.309663,-8.244606,8.384007,1.380719,-6.022334,-9.532506,-8.632266,2.042775,9.888658,-5.735225,7.149712,6.953589,-6.922083,3.836452,7.739574,-5.118635,-3.522986,-1.417077,6.192379,-5.433896,-5.843277,-9.982802,9.724290,9.988830,-3.516766,-8.282033,3.752957,6.302353,-8.615212,-3.156666,5.531269,3.567496,7.694450,0.577529,4.869797,-7.696066,7.766916,-4.639726,8.299451,8.029398,-8.908294,9.776650,5.575987,4.539692,1.933000,0.626420,4.242215,-8.113755,-9.194883,6.384518,-0.853370,1.197194,-7.388794,-2.005182,-3.299120,-2.518430,-8.955754,-5.141480,-5.140659,9.766665,1.616629,-9.729765,3.059750,-2.938582,2.898775,-8.362108,3.775208,2.731999,6.804443,1.007428,2.872613,-7.697542,7.436149,8.898302,7.964498,-7.762288,-4.739457,4.322719,4.224079,9.426191,1.408415,-2.179856,-6.811549,-0.746436,-5.107164,8.124475,2.564714,5.175703,-2.040091,-3.597058,1.354043,-1.677618,-6.638914,4.481736,8.432015,-0.897501,-8.046085,-9.763229,-8.229107,7.008170,-3.369778,-1.451474,-0.302182,2.931506,-2.852103,-0.227138,-9.841555,6.761105,-3.592029,-2.315915,-6.125846,-5.565514,-5.018296,0.318582,-7.581216,4.909530,0.220314,-1.391491,6.258476,-8.369524,-2.868816,5.188504,9.673774,9.121570,9.790446,-6.828758,-0.588842,1.166755,2.641642,6.432685,3.224341,-4.904143,-3.696123,-3.597975,-1.861565,3.675565,-9.007766,0.885397,-9.258130,4.309821,3.554689,6.046668,6.344701,-5.773359,8.172080,-1.461700,-8.470028,7.658828,0.624632,-0.694409,-9.432697,-9.958665,-6.400572,-7.079071,-3.930438,-2.447888,1.300088,5.319131,-5.694792,3.975412,1.154260,-2.194960,8.016307,-5.954862,-3.497078,-8.868567,5.804296,8.337521,2.680746,-3.783295,8.069075,9.297381,-2.077711,1.680638,-2.906063,-4.391916,-8.835261,2.690598,-3.406780,7.635710,-4.973411,5.008491,-9.915845,3.121441,-6.953456,-3.829056,-4.050716,6.891129,-9.721973,-3.662182,1.564371,7.235048,7.111985,2.745755,-0.578326,-4.172170,7.014871,-5.755329,-5.112211,2.716948,4.122282,3.045352,8.703700,-6.822910,4.238932,-8.952595,9.862397,3.748569,-4.000521,-0.536480,8.194769,8.661111,-7.489078,-8.727657,6.569937,-7.170227,5.322853,-9.739001,-3.693705,5.027082,0.862741,-7.470465,7.197579,-3.292073,5.988211,-3.068919,1.220469,1.650450,-1.882665,2.574715,7.160444,-8.734486,9.879257,1.188529,-4.459614,6.435834,-6.820053,-4.308489,5.079962,9.920494,-7.085477,6.432198,7.777271,0.437647,5.666222,8.508008,-7.196705,2.826349,-1.829476,9.962471,9.137191,3.612002,3.279507,9.889570,-4.232848,1.699088,0.306467,-3.358426,8.826627,-7.329962,-4.546334,5.248088,5.289350,-5.456525,4.638017,-0.561848,9.681883,-3.831268,-1.636411,4.209652,-7.244017,6.895995,-1.684687,-5.332871,4.946817,-2.218040,-1.160417,0.758158,-4.416883,7.129947,6.026061,3.691474,0.530509,1.962082,9.692064,-5.606902,7.655303,3.853537,-4.120952,4.677749,-6.448115,8.530416,0.780711,6.988793,0.203859,8.999488],[-6.791559,3.441937,-4.993009,2.743442,1.090163,6.133546,4.988408,-4.089426,-2.977054,-4.877521,6.647123,6.680619,-4.046175,4.325614,-2.427227,-8.069044,1.582977,-9.538181,8.578674,3.339991,-8.029663,4.269061,-7.251571,5.389916,-7.269318,1.565464,6.366164,-4.562628,6.197793,7.780512,9.424344,1.246722,8.403275,-8.116832,8.270869,-7.121036,4.658081,-3.393903,7.391920,-1.419021,5.661369,-0.932589,7.623104,-6.620167,-6.104884,-6.515690,0.995320,-6.081861,9.825768,3.886504,-1.110991,-7.665893,-0.107117,3.306553,-2.108670,9.219502,-0.297062,9.056038,-2.229246,-4.561426,9.406533,-6.644737,-1.486457,-8.820294,-5.587150,8.999303,9.038304,-0.937252,-1.680793,6.492522,5.962890,-1.206040,-0.221162,1.175740,0.429992,6.467048,-3.605277,1.894863,-7.392025,3.715698,-8.220792,-3.001561,-7.336742,7.684746,-7.433993,-4.745381,5.784394,8.351670,-5.591276,-9.967457,3.332066,-5.066828,-3.597373,-0.147527,7.257382,4.976221,-1.620230,4.032629,-4.960168,4.974800,-6.631823,-9.113301,-6.642692,7.477923,2.342768,-3.163813,-0.917589,-9.882609,7.862184,8.523740,-7.766691,-2.819189,-8.280232,-2.082562,-9.905947,-3.626385,7.403206,-8.257237,-9.550902,-0.954336,1.709562,-3.468754,5.481530,-0.756370,-3.118803,-1.764933,-3.238065,1.937728,-1.662873,7.540167,-5.167854,4.006307,6.158046,7.130669,-1.763022,2.834949,9.644221,3.394236,-0.429638,6.679512,1.005171,-0.576171,-0.340978,1.402110,8.838125,1.821436,-2.495063,4.791416,-7.149139,2.503659,-6.681638,-4.966147,0.963631,-2.426926,-9.768443,-2.311632,2.308800,8.973023,-5.538662,7.380677,-0.952306,9.256078,0.976971,-5.945464,-9.185862,-4.166920,-5.891694,-2.796694,-3.866624,9.011802,-1.192732,7.582864,-4.065365,0.384367,0.032953,-7.221345,6.520045,-7.809407,-3.059745,-5.938343,-9.425981,4.723477,5.487436,-3.760804,5.930634,-2.434248,2.231609,5.747630,2.402112,4.980807,4.952241,-5.525043,2.307295,-8.145226,6.133494,-0.999179,3.615134,-1.143444,8.962607,5.765299,-1.194851,-9.400140,7.981424,-0.126576,-4.967677,6.778462,7.484793,-1.911713,-8.789619,2.161160,2.884542,8.165349,5.285500,-4.009047,3.733428,6.321149,0.463875,2.833432,-5.697699,6.855859,8.583980,-9.562540,-0.208340,-7.598921,4.165694,-2.957984,0.783352,-9.984950,8.967191,-1.106901,-9.204759,6.914540,1.990029,-6.305132,-2.656365,2.247711,-7.093954,-6.996755,-9.116878,6.948125,-9.388699,6.401954,3.185740,7.472244,-8.094294,7.857710,1.718440,-1.231188,-4.979900,-0.621502,1.221302,-1.786401,-4.337837,-6.068400,7.816801,-0.770538,-2.348550,-2.494986,5.267984,-2.211109,7.928613,-4.501465,-9.494030,9.861858,5.913732,1.903527,8.639788,-6.141201,7.432598,7.815236,-9.150056,-1.787456,0.328194,4.833291,-4.376063,-7.563330,5.025812,2.905903,3.383902,-4.338152,-3.244912,4.844546,-0.670445,9.066975,3.574699,-1.659400,9.499791,-3.105737,6.722936,0.530119,2.212973,9.053498,0.931841,6.532832,-2.901754,7.738605,4.888827,-2.442850,0.714175,7.885203,-4.421962,-6.513446,2.486261,-4.466468,-6.297172,-3.229973,2.279836,5.383372,-7.201540,-4.650426,-0.260192,-4.613628,-4.228156,0.192838,-9.914164,-0.629619,3.290926,-8.290752,1.230143,3.716759]], dtype = "float32")#candidate|2154|(4, 320)|const|float32
const_2155 = relay.const([[-5,3,-10,9,6,3,-6,-6,6,4,-10,-6,-6,2]], dtype = "int64")#candidate|2155|(1, 14)|const|int64
var_2156 = relay.var("var_2156", dtype = "int32", shape = (480,))#candidate|2156|(480,)|var|int32
call_2153 = relay.TupleGetItem(func_1634_call(relay.reshape(const_2154.astype('float32'), [16, 10, 8]), relay.reshape(const_2155.astype('int64'), [14,]), relay.reshape(var_2156.astype('int32'), [480,]), relay.reshape(const_2154.astype('float32'), [16, 10, 8]), ), 5)
call_2157 = relay.TupleGetItem(func_1640_call(relay.reshape(const_2154.astype('float32'), [16, 10, 8]), relay.reshape(const_2155.astype('int64'), [14,]), relay.reshape(var_2156.astype('int32'), [480,]), relay.reshape(const_2154.astype('float32'), [16, 10, 8]), ), 5)
func_1117_call = mod.get_global_var('func_1117')
func_1119_call = mutated_mod.get_global_var('func_1119')
call_2158 = relay.TupleGetItem(func_1117_call(relay.reshape(var_2156.astype('int32'), [480,])), 2)
call_2159 = relay.TupleGetItem(func_1119_call(relay.reshape(var_2156.astype('int32'), [480,])), 2)
func_1117_call = mod.get_global_var('func_1117')
func_1119_call = mutated_mod.get_global_var('func_1119')
call_2163 = relay.TupleGetItem(func_1117_call(relay.reshape(var_2156.astype('int32'), [480,])), 0)
call_2164 = relay.TupleGetItem(func_1119_call(relay.reshape(var_2156.astype('int32'), [480,])), 0)
output = relay.Tuple([bop_2150,call_2153,const_2154,const_2155,var_2156,call_2158,call_2163,])
output2 = relay.Tuple([bop_2150,call_2157,const_2154,const_2155,var_2156,call_2159,call_2164,])
func_2174 = relay.Function([var_2149,var_2156,], output)
mod['func_2174'] = func_2174
mod = relay.transform.InferType()(mod)
var_2175 = relay.var("var_2175", dtype = "float32", shape = (10, 7, 14))#candidate|2175|(10, 7, 14)|var|float32
var_2176 = relay.var("var_2176", dtype = "int32", shape = (480,))#candidate|2176|(480,)|var|int32
output = func_2174(var_2175,var_2176,)
func_2177 = relay.Function([var_2175,var_2176,], output)
mutated_mod['func_2177'] = func_2177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2211 = relay.var("var_2211", dtype = "uint32", shape = (8, 10, 9))#candidate|2211|(8, 10, 9)|var|uint32
var_2212 = relay.var("var_2212", dtype = "uint32", shape = (8, 10, 9))#candidate|2212|(8, 10, 9)|var|uint32
bop_2213 = relay.bitwise_and(var_2211.astype('uint32'), relay.reshape(var_2212.astype('uint32'), relay.shape_of(var_2211))) # shape=(8, 10, 9)
uop_2227 = relay.cosh(var_2212.astype('float64')) # shape=(8, 10, 9)
output = relay.Tuple([bop_2213,uop_2227,])
output2 = relay.Tuple([bop_2213,uop_2227,])
func_2229 = relay.Function([var_2211,var_2212,], output)
mod['func_2229'] = func_2229
mod = relay.transform.InferType()(mod)
mutated_mod['func_2229'] = func_2229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2229_call = mutated_mod.get_global_var('func_2229')
var_2231 = relay.var("var_2231", dtype = "uint32", shape = (8, 10, 9))#candidate|2231|(8, 10, 9)|var|uint32
var_2232 = relay.var("var_2232", dtype = "uint32", shape = (8, 10, 9))#candidate|2232|(8, 10, 9)|var|uint32
call_2230 = func_2229_call(var_2231,var_2232,)
output = call_2230
func_2233 = relay.Function([var_2231,var_2232,], output)
mutated_mod['func_2233'] = func_2233
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2312 = relay.var("var_2312", dtype = "uint16", shape = (4, 2, 16))#candidate|2312|(4, 2, 16)|var|uint16
const_2313 = relay.const([[[10,-4,5,-8,3,5,-5,-4,3,-4,-10,-3,-7,-5,-7,10],[2,4,7,2,-4,-6,8,-4,9,-3,8,-3,-5,5,-3,7]],[[-8,-3,-1,-5,-3,-7,-2,-3,1,-9,10,-6,-10,6,8,9],[4,-9,8,-3,-6,4,-3,8,-1,-5,-10,-7,-3,-4,-6,-7]],[[6,7,-1,-6,1,6,5,10,-2,8,-5,4,7,9,10,6],[-1,9,3,2,5,10,1,-7,-2,-6,-9,-4,-8,-10,8,-6]],[[8,2,3,5,-1,10,-2,6,-4,-10,-5,-9,-7,5,6,-4],[-7,6,-2,7,-6,7,6,4,10,-10,10,1,-10,-5,-6,-9]]], dtype = "uint16")#candidate|2313|(4, 2, 16)|const|uint16
bop_2314 = relay.bitwise_xor(var_2312.astype('uint16'), relay.reshape(const_2313.astype('uint16'), relay.shape_of(var_2312))) # shape=(4, 2, 16)
func_1238_call = mod.get_global_var('func_1238')
func_1241_call = mutated_mod.get_global_var('func_1241')
const_2325 = relay.const([-8,-7,-8,-2,6,-3,-10,-5,4,1,-5,-6,-7,-10], dtype = "int64")#candidate|2325|(14,)|const|int64
const_2326 = relay.const([7,2,6,2,8,-3,6,-5,10,-6,9,-10,-8,3,-9,1,-6,1,2,9,1,2,9,-10,-9,10,8,3,8,3,-2,5,-9,1,10,-5,4,-10,-7,10,7,-3,3,-2,-4,8,1,-6,-10,6,-7,-2,-8,-1,-5,8,2,-8,9,-6,6,9,-9,-2,1,10,-6,-6,7,9,8,-5,-1,7,-4,3,7,1,-6,-5,-10,-5,-9,1,8,-7,7,9,4,8,-9,10,-2,1,6,6,-1,2,-2,8,-3,8,-7,-10,3,1,-10,5,3,-1,-4,-5,-8,6,10,-3,7,6,8,-6,-5,-10,-9,-6,-5,-3,4,3,-5,-5,1,9,-9,3,-1,8,-6,-1,-7,1,-4,8,-2,-3,10,-3,5,-10,-5,4,1,-1,2,4,-1,-1,9,4,-2,10,2,-4,5,3,-4,7,-7,-2,2,-10,3,7,-5,-7,5,-1,-3,6,-7,-8,-4,-8,-3,3,8,-8,7,3,6,10,-7,10,6,-8,7,-7,2,3,6,3,-9,5,6,-9,7,-4,10,6,2,-2,1,9,5,-1,7,-2,-4,-6,4,3,-3,-10,10,3,-2,-8,-4,-8,-8,7,2,-6,6,-7,5,6,4,5,1,-6,2,-8,3,-3,-3,-8,2,1,6,-2,5,-3,3,-5,-5,-9,-6,-3,-1,10,1,-10,2,2,-9,-10,-2,7,10,-10,-4,-4,-6,-1,-7,2,1,-10,-7,-10,7,-3,3,-6,2,10,5,-10,2,7,-4,-5,4,7,-8,-8,-9,5,10,6,7,2,9,2,-3,9,9,2,9,-5,-8,-3,-3,-8,-10,-5,-10,9,-8,9,2,-1,-3,-4,-4,-1,-1,9,3,-7,2,1,10,9,3,-1,9,-5,7,-5,8,1,-2,-5,8,9,-5,-1,-4,-3,10,1,-8,-2,-6,3,-4,-5,-7,-3,-2,6,-5,-2,-7,6,-1,-9,-3,-3,1,-7,2,-3,-2,-7,-9,4,10,-2,3,8,-5,2,-9,9,10,-7,7,5,-6,-6,7,-6,-5,4,6,-1,-9,9,7,10,-5,4,-6,-3,-3,-7,10,7,-2,5,-5,9,1,-5,-9,8,3,5,-4,2,-9,10,-2,5,10,-4,-6,10,-4,-8,10,-6,-9,-2,1,-2,5,-10,-9,-5,-6,-3,-3,-2,7,-1,-5,2,9,-6,-10,-3,-10,-5,9,-5,8,-9,-2,9,10,-8,6,8,-4,8,-5,-2,-3,4,-7,-8,9,-8,-10,-10,-9,-5], dtype = "int32")#candidate|2326|(480,)|const|int32
call_2324 = relay.TupleGetItem(func_1238_call(relay.reshape(const_2325.astype('int64'), [7, 2]), relay.reshape(const_2326.astype('int32'), [480,]), ), 1)
call_2327 = relay.TupleGetItem(func_1241_call(relay.reshape(const_2325.astype('int64'), [7, 2]), relay.reshape(const_2326.astype('int32'), [480,]), ), 1)
output = relay.Tuple([bop_2314,call_2324,const_2325,const_2326,])
output2 = relay.Tuple([bop_2314,call_2327,const_2325,const_2326,])
func_2339 = relay.Function([var_2312,], output)
mod['func_2339'] = func_2339
mod = relay.transform.InferType()(mod)
mutated_mod['func_2339'] = func_2339
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2340 = relay.var("var_2340", dtype = "uint16", shape = (4, 2, 16))#candidate|2340|(4, 2, 16)|var|uint16
func_2339_call = mutated_mod.get_global_var('func_2339')
call_2341 = func_2339_call(var_2340)
output = call_2341
func_2342 = relay.Function([var_2340], output)
mutated_mod['func_2342'] = func_2342
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2364 = relay.const([[[0.903814,-0.813578,3.608835],[4.478993,-1.919733,5.530850],[-2.164393,2.863999,9.662338],[5.692791,9.169506,9.315733],[7.952416,-9.843147,9.460578],[-3.318495,5.031010,8.671476]]], dtype = "float64")#candidate|2364|(1, 6, 3)|const|float64
uop_2365 = relay.acosh(const_2364.astype('float64')) # shape=(1, 6, 3)
uop_2385 = relay.rsqrt(uop_2365.astype('float32')) # shape=(1, 6, 3)
output = uop_2385
output2 = uop_2385
func_2393 = relay.Function([], output)
mod['func_2393'] = func_2393
mod = relay.transform.InferType()(mod)
output = func_2393()
func_2394 = relay.Function([], output)
mutated_mod['func_2394'] = func_2394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_2409 = func_2393_call()
call_2410 = func_2393_call()
output = call_2409
output2 = call_2410
func_2412 = relay.Function([], output)
mod['func_2412'] = func_2412
mod = relay.transform.InferType()(mod)
output = func_2412()
func_2413 = relay.Function([], output)
mutated_mod['func_2413'] = func_2413
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2414 = relay.var("var_2414", dtype = "int64", shape = (16, 5, 5))#candidate|2414|(16, 5, 5)|var|int64
var_2415 = relay.var("var_2415", dtype = "int64", shape = (16, 5, 5))#candidate|2415|(16, 5, 5)|var|int64
bop_2416 = relay.bitwise_and(var_2414.astype('int64'), relay.reshape(var_2415.astype('int64'), relay.shape_of(var_2414))) # shape=(16, 5, 5)
output = bop_2416
output2 = bop_2416
func_2420 = relay.Function([var_2414,var_2415,], output)
mod['func_2420'] = func_2420
mod = relay.transform.InferType()(mod)
mutated_mod['func_2420'] = func_2420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2420_call = mutated_mod.get_global_var('func_2420')
var_2422 = relay.var("var_2422", dtype = "int64", shape = (16, 5, 5))#candidate|2422|(16, 5, 5)|var|int64
var_2423 = relay.var("var_2423", dtype = "int64", shape = (16, 5, 5))#candidate|2423|(16, 5, 5)|var|int64
call_2421 = func_2420_call(var_2422,var_2423,)
output = call_2421
func_2424 = relay.Function([var_2422,var_2423,], output)
mutated_mod['func_2424'] = func_2424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mod.get_global_var('func_2412')
func_2413_call = mutated_mod.get_global_var('func_2413')
call_2549 = func_2412_call()
call_2550 = func_2412_call()
uop_2573 = relay.acos(call_2549.astype('float64')) # shape=(1, 6, 3)
uop_2575 = relay.acos(call_2550.astype('float64')) # shape=(1, 6, 3)
func_807_call = mod.get_global_var('func_807')
func_811_call = mutated_mod.get_global_var('func_811')
const_2579 = relay.const([2,-3,-5,5,-3,2,-2,5,6,-4,-5,-8,5,-7,8,8,-7,7,2,-5,10,-1,10,4,9,2,-7,5,6,2,-9,1,3,-8,-9,2,-2,4,10,8,8,-5,2,8,1,3,-10,6,2,10,8,-1,-6,-4,2,8,-4,4,1,6,-2,4,3,7,3,-9,1,3,4,6,9,-8,4,-1,-4,9,-7,-1,-2,-8,-8,-9,-6,8,10,-7,-5,4,-7,-6,-1,10,-1,-10,9,-9,-4,8,1,-9,-10,-9,-3,6,-7,2,1,-8,3,5,-4,1,-5,8,-6,6,-7,-1,-10,-10,-9,-5,-6,-3,10,1,4,-4,2,2,10,2,-5,-8,7,-1,2,-9,8,-7,9,4,1,-2,-9,1,-4,-9,-5,3,-6,-2,-10,-9,4,7,-6,-9,-9,2,-5,9,7,8,4,-5,6,1,10,-6,-5,-8,-4,-10,7,-2,4,-4,1,2,-5,-8,-6,-9,-8,-1,-8,6,7,8,7,-10,3,-9,-6,-2,7,6,-10,10,-1,-2,9,2,3,1,2,-10,-5,-1,-9,-6,2,10,6,-9,8,-8,9,-4,-2,4,-8,8,3,-4,10,-9,-1,-6,8,6,7,4,3,-2,-4,-8,-3,4,4,10,-10,-10,-9,-10,2,-4,9,8,-5,9,-9,2,1,-9,7,-3,-2,8,1,-10,-5,3,2,7,2,-9,-3,2,-8,-3,2,-2,10,6,1,4,10,-9,7,-10,-4,-9,-9,-4,-3,3,-4,-2,6,-6,3,2,-7,6,9,-4,-4,-3,-5,-1,4,8,9,-2,7,2,8,-3,-5,9,-4,10,-6,-10,-9,-3,-3,1,-10,-6,9,-9,2,-1,3,-4,3,-5,-6,-1,-6,-8,-7,2,9,6,-8,4,1,8,5,2,-5,-6,4,3,-4,-10,7,-8,-9,-6,-3,8,8,-7,7,1,-8,10,6,1,-4,3,-2,10,7,-10,-6,4,4,9,3,-3,6,-3,9,-4,-5,-6,8,-10,-2,7,7,-4,-5,4,10,8,-3,10,-5,6,-1,-6,-8,6,-7,8,4,-6,-4,6,-8,-1,5,2,8,-9,8,-2,4,-6,2,-4,7,-7,10,4,8,-6,9,-3,6,9,-1,-2,-8,-3,-2,9,9,-10,-7,-5,-10,-10,-1,-9,6,2,-9,-2,3,-7,4,-6,-10,-10,-1,-6,7,1,10,6,-5,3,3,1,3,-2,-4,10,5,4,6,-6,-5,-3,-4,-1,9,5,1,9,5,-3,-2,-4,-2,2,8,2,-4,8,-6,-10,-3,7,10,10,-9,-4,-5,-9,-7,-6,8,8,-5,-3,5,3,6,-6,8,-2,8,-10,-4,-9,-10,8,4,-2,-2,7,-6,-7,-2,3,-8,9,-2,-8,-5,-9,-3,3,-5,-6,9,6,4,2,-8,-8,-9,-4,-5,9,-1,-7,7,4,6,-1,-1,-4,2,-5,-10,-7,-9,2,-3,-5,3,-3,-1,-4,-6,4,2,6,-4,4,-3,5,-2,-7,-1,-3,4,7,-2,-4,6,8,6,3,3,3,8,8,-6,7,7,2,-8,9,-1,-8,9,-6,10,-4,-7,-8,5,-5,1,10,3,-1,2,1,-1,2,-7,-6,8,-9,-4,-9,3,2,7,-1,-6,3,2,-1,7,6,4,10,-9,8,-5,4,1,1,-10,10,9,-3,-9,6,10,9,-2,-5,-7,-6,-7,2,10,8,10,-5,-3,-9,-3,-8,9,-6,-6,3,1,8,2,10,7,-2,-5,-5,-7,1,-3,2,6,-4,8,-6,7,-1,-5,-2,6,-1,-3,3,5,10,3,-10,2,1,-1,3,2,8,-2,2,-8,-10,1,1,-7,4,6,1,7,-10,-1,-6,-6,10,9,-5,-7,8,-8,4,3,-9,3,7,-4,-8,-1,-7,3,2,-9,8,3,4,6,-9,5,6,-10,7,1,8,-4,-6,2,10,6,-7,-4,10,-8,-9,-9,-10,9,2,7,-9,-4,-9,-4,6,-6,6,-4,2,-7,5,-7,2,4,-5,3,3,10,2,2,-3,-2,10,7,-8,-4,-10,-9,6,-8,6,4,9,-3,9,2,6,5,2,8,8,-4,-3,-3,-6,-8,2,-2,-10,-3,-2,3,1,-4,1,2,5,10,-8,-5,-5,5,-6,10,5,5,10,-7,-7,3,-6,9,-2,-7,3,-5,4,-6,8,-8,-9,4,2,-2,4,-9,10,-10,-9,5,1,-2,9,-7,4,-1,8,-4,-7,-9,10,3,-8,-6,-2,-10,-8,-7,-10,5,-2,7,-2,-10,7,-1,-1,-1,-7,-7,8,1,-10,5,5,-6,-6,8,-5,-8,2,-1,2,-10,-1,-10,-4,6,-1,8,1,-4,-6,-5,-3,-5,-2,5,-10,-5,-4,1,5,-6,8,-2,-5,-6,-1,3,-3,6,-5,-9,8,6,-8,9,-4,-2,6,-1,-2,-5,-9,-4,7,10,-3,-8,5,-2,-3,-8,6,9,-4,7,9,-9,-10,-3,-5,10,-1,10,4,-9,-2,4,-7,-2,-5,-6,-10,-5,8,-9,10,-2,10,9,5,-1,-6,-5,-7,-3,7,-7,4,9,-9,-6,2,3,1,7,1,3,2,2,6,-4,-7,-1,-2,-5,-1,-3,1,6,-10,-8,-9,-10,-10,2,10,-10,-6,9,1,2,-5,6,1,-9,-3,3,7,-4,-8,2,4,-6,-3,10,-1,6,7,3,4,-10,9,10,7,-3,-4,-4,9,9,-4,-3,-1,-2,-5,-6,-7,7,-2,-9,2,-5,-9,5,8,9,2,9,-5,2,6,-8,-6,6,-1,-8,-1,9,1,-7,7,1,7,5,-10,1,-4,-8,3,10,-1,7,3,-1,2,-5,3,10,-7,4,-1,3,4,-8,5,1,10,7,5,-2,-5,8,5,10,5,1,-8,3,-6,-9,1,-9,5,6,2,-9,-5,7,-6,-1,-10,7,9,-10,-1,5,8,-4,-10,4,-8,-10,-1,4,3,-10,-10,-3,-7,1,3,-1,-2,3,-7,3,-10,-10,-10,-10,-10,8,-7,6,-5,3,6,6,-1,9,5,-3,7,-8,6,1,-8,3,-9,9,-7,-1,-6,-1,5,-5,4,-5,-1,-1,1,-10,-3,4,3,8,-8,1,6,-3,1,-1,-5,-7,1,1,2,-3,-6,8,2,9,5,-6,-1,-1,-4,-7,-1,5,-2,6,-10,8,-7,7,-2,-9,-6,7,-3,-8,-3,8,-9,3,-3,-7,9,-1,2,6,-6,-3,2,-8,10,-4,2,4,6,5,8,2,-7,-2,3,-7,4,9,-9,1,-4,-10,-6,8,-4,1,6,1,-8,-4,-2,-10,-10,4,-10,9,-1,-10,5,-1,2,-5,7,2,1,-8,9,-1,1,-10,-10,4,-10,-8,-4,-6,-3,7,-8,-7,6,-2,-7,8,6,-8,-7,-8,1,-1,-5,3,1,9,-8,-6,2,-1,-1,-9,-7,3,-1,10,-9,7,2,-3,10,2,-6,4,6,-9,6,-4,-4,6,10,-7,9,-2,-4,3,4,-3,4,10,-5,-9,-8,-2,1,-10,-6,-1,-1,-3,7,2,-1,-4,2,-5,5,-6,8,-5,-9,-2,-2,-7,6,-1,-8,-6,5,4,-6,-4,4,3,-1,-10,5,-3,-7,-1,2,5,4,7,-1,-9,-9,-9,-5,4,3,6,10,-7,2,9,2,2,-7,-5,1,7,-7,4,9,1,5,-1,9,-1,10,4,6,-5,-6,-1,-6,-6,5,6,9,-7,5,9,-8,4,10,9,4,7,6,-5,-8,-7,1,6,-1,4,3,-1,-4,10,-2,8,-2,-6,-2,-3,3,5,3,6,6,-1,3,-1,-6,-9,-7,6,1,-2,-4,7,-4,1,-4,3,-7,9,6,-7,1,3,-4,-7,-3,-1,-3,2,9,-7,10,-4,-2,-9,3,3,3,-1,-6,-5,9,-6,2,-2,-3,3,6,-2,-10,-9,8,-8,7,-9,10,-4,10,3,-9,-3,1,8,5,8,-1,-2,-6,-10,-2,5,-5,-10,8,8,-6,2,1,7,-1,3,9,-1,-8,7,3,1,-1,-4,-6,-8,5,2,-1,-2,-3,4,-4,8,-9,-3,6,-2,-7,-8,3,7,-10,-4,9,3,2,-5,-6,10,7,10,7,2,2,-9,10,3,-7,10,2,8,-5,-2,-6,-6,6,-6,-10,9,10,7,5,7,4,6,3,1,8,6,-8,9,-10,8,-5,4,-6,5,-10,1,-2,-1,2,-2,7,-6,-2,-8,-2,-4,5,4,8,3,2,1,3,-8,4,-7,7,6,2,2,10,1,-6,7,4,10,-3,9,-1,-3,4,5,-7,1,-5,-1,10,10,-9,-10,6,9,10,-7,5,-5,-2,-10,-9,6,5,9,-1,3,-8,3,2,-5,-1,3,-2,3,-9,3,-6,-2,-6,8,3,-7,4,-7,5,-7,6,-10,-8,-4,-10,5,-4,6,-1,7,-6,7,6,4,-7,6,3,-4,3,-8,-5,-6,3,10,6,7,2,10,7,-9,-9,10,5,4,5,8,6,-10,-7,2,8,5,-5,-9,-3,1,-5,3,-6,-7,-1,-1,-10,6,1,-1,9,-10,3,9,8,-7,10,3,6,-6,-5,-4,8,-4,-7,-2,3,3,9,-1,3,-10,-7,-8,4,-10,3,-6,5,3,-7,10,-5,5,8,-3,-3,1,-9,-2,7,2,7,10,-9,6,6,-7,1,-8,-7,8,-5,9,2,-7,-5,-6,6,-6,10,3,8,-8,-2,-7,-7,-1,6,8,-3,-6,5,-1,-9,-8,-9,-7,-8,5,1,-9,7,-3,-1,-2,8,-1,1,4,8,-8,-2,3,10,-2,-8,-9,2,-9,-7,-7,6,-7,-9,6,6,6,1,-10,7,-1,-4,1,6,-10,10,7,-5,-4,9,4,6,-5,-1,-7,8,5,-2,-1,8,-1,-7,4,-5,6,8,1,-2,-10,-1,1,-9,-5,-5,-7,-6,-1,7,4,-4,7,-2], dtype = "uint32")#candidate|2579|(1890,)|const|uint32
call_2578 = func_807_call(relay.reshape(const_2579.astype('uint32'), [9, 15, 14]), relay.reshape(const_2579.astype('uint32'), [9, 15, 14]), )
call_2580 = func_807_call(relay.reshape(const_2579.astype('uint32'), [9, 15, 14]), relay.reshape(const_2579.astype('uint32'), [9, 15, 14]), )
func_1117_call = mod.get_global_var('func_1117')
func_1119_call = mutated_mod.get_global_var('func_1119')
const_2586 = relay.const([4,7,3,1,10,-2,5,3,3,-5,-6,-9,5,-6,-5,-5,-8,10,6,3,-1,-7,5,8,-2,10,-9,9,-4,10,-7,10,-7,7,2,-1,5,9,-8,7,-9,5,7,1,-10,3,-6,-3,1,-8,1,8,-7,-7,4,-4,2,1,7,1,1,-7,4,1,1,2,9,10,-7,-3,-1,-5,8,10,-6,-3,4,-5,9,4,5,3,-6,-10,-10,-5,1,3,8,7,6,-2,-9,9,-4,1,8,3,-9,-6,-7,-9,5,-10,-7,6,6,-4,-8,4,-5,-1,-10,-7,-9,-5,8,-7,-6,-5,-3,-8,10,3,-6,-9,-5,-4,-7,2,-5,-6,-1,-5,1,3,10,2,-3,7,-5,10,9,3,-6,3,3,6,2,4,3,7,9,3,-8,1,9,3,7,3,2,9,-7,9,8,5,9,5,3,9,-8,-5,6,-6,-6,8,-7,3,-2,5,6,-1,4,-4,-2,10,-5,-1,-5,-6,6,-8,1,-10,6,4,7,-6,9,-10,4,3,7,10,10,4,2,-2,-5,-7,-8,-10,6,6,7,6,-5,1,-4,-3,-1,-2,-1,5,5,-7,-4,-9,-5,6,10,5,3,-7,-1,3,9,2,-10,-6,-10,9,9,4,3,-10,-4,-8,3,7,-10,-3,-8,9,-3,-4,-7,8,-2,-4,4,8,8,-6,5,-2,-6,4,-1,9,-7,8,-7,-3,-1,-4,8,-5,-9,-5,6,9,-6,3,3,3,6,-7,-2,-2,5,7,7,10,-5,-10,6,-3,10,10,-10,7,-6,1,-5,10,8,-5,-1,10,-4,9,10,10,9,-5,-3,-7,7,7,-10,3,-6,2,5,-3,2,7,-5,-2,-7,5,9,10,-9,-9,-6,6,3,9,-10,7,6,4,2,-8,-2,10,-7,9,-1,-7,-1,9,1,-1,2,-2,1,2,1,2,-4,-7,7,9,4,-5,8,-10,1,9,1,-2,7,-6,5,-4,-4,-2,-6,-9,6,9,9,3,3,3,-3,-8,10,-9,-6,6,3,-1,8,1,-3,7,2,-1,-2,-10,-1,5,2,8,8,-8,-1,-2,-8,-2,5,-4,-1,-1,1,-6,-8,6,7,-10,8,-6,8,8,2,8,3,-2,6,5,-3,-2,6,-2,1,-7,-1,-8,2,-6,9,-2,5,7,5,1,-5,-10,-10,-3,6,10,5,-8,-7,1,-8,8,-7,9,9,2,4,6,-6,-4,8,-4,5,10,-6,-10,6,-10,-5,4], dtype = "int32")#candidate|2586|(480,)|const|int32
call_2585 = relay.TupleGetItem(func_1117_call(relay.reshape(const_2586.astype('int32'), [480,])), 1)
call_2587 = relay.TupleGetItem(func_1119_call(relay.reshape(const_2586.astype('int32'), [480,])), 1)
func_2339_call = mod.get_global_var('func_2339')
func_2342_call = mutated_mod.get_global_var('func_2342')
const_2593 = relay.const([-9,-7,8,-5,7,-3,-1,8,-1,-7,3,5,2,-2,7,9,8,3,6,-7,4,-2,10,6,-10,-8,-1,-8,-8,-8,-6,3,4,8,-3,-5,-6,-4,8,-8,1,1,6,4,10,3,10,-9,-1,6,-5,3,-7,8,6,-4,-1,-8,-4,2,-6,-1,-8,-3,-1,-5,2,-8,6,4,1,7,-5,-8,9,5,3,-2,-10,2,-5,-6,6,6,9,1,10,-1,-7,7,8,-1,-10,2,9,-1,-2,1,-10,-9,7,-10,-2,-5,9,2,4,8,6,5,-7,-10,-5,8,-10,-6,-1,-7,7,-9,-3,-6,6,-2,6,-10,4,-4], dtype = "uint16")#candidate|2593|(128,)|const|uint16
call_2592 = relay.TupleGetItem(func_2339_call(relay.reshape(const_2593.astype('uint16'), [4, 2, 16])), 1)
call_2594 = relay.TupleGetItem(func_2342_call(relay.reshape(const_2593.astype('uint16'), [4, 2, 16])), 1)
func_2229_call = mod.get_global_var('func_2229')
func_2233_call = mutated_mod.get_global_var('func_2233')
var_2602 = relay.var("var_2602", dtype = "uint32", shape = (720,))#candidate|2602|(720,)|var|uint32
call_2601 = relay.TupleGetItem(func_2229_call(relay.reshape(var_2602.astype('uint32'), [8, 10, 9]), relay.reshape(var_2602.astype('uint32'), [8, 10, 9]), ), 1)
call_2603 = relay.TupleGetItem(func_2233_call(relay.reshape(var_2602.astype('uint32'), [8, 10, 9]), relay.reshape(var_2602.astype('uint32'), [8, 10, 9]), ), 1)
bop_2604 = relay.right_shift(uop_2573.astype('uint8'), relay.reshape(call_2549.astype('uint8'), relay.shape_of(uop_2573))) # shape=(1, 6, 3)
bop_2607 = relay.right_shift(uop_2575.astype('uint8'), relay.reshape(call_2550.astype('uint8'), relay.shape_of(uop_2575))) # shape=(1, 6, 3)
func_168_call = mod.get_global_var('func_168')
func_171_call = mutated_mod.get_global_var('func_171')
call_2622 = relay.TupleGetItem(func_168_call(relay.reshape(call_2592.astype('float32'), [2, 13, 5]), relay.reshape(call_2592.astype('float32'), [2, 13, 5]), ), 2)
call_2623 = relay.TupleGetItem(func_171_call(relay.reshape(call_2592.astype('float32'), [2, 13, 5]), relay.reshape(call_2592.astype('float32'), [2, 13, 5]), ), 2)
output = relay.Tuple([call_2578,const_2579,call_2585,const_2586,call_2592,const_2593,call_2601,var_2602,bop_2604,call_2622,])
output2 = relay.Tuple([call_2580,const_2579,call_2587,const_2586,call_2594,const_2593,call_2603,var_2602,bop_2607,call_2623,])
func_2639 = relay.Function([var_2602,], output)
mod['func_2639'] = func_2639
mod = relay.transform.InferType()(mod)
var_2640 = relay.var("var_2640", dtype = "uint32", shape = (720,))#candidate|2640|(720,)|var|uint32
output = func_2639(var_2640)
func_2641 = relay.Function([var_2640], output)
mutated_mod['func_2641'] = func_2641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_2649 = func_2393_call()
call_2650 = func_2393_call()
func_2229_call = mod.get_global_var('func_2229')
func_2233_call = mutated_mod.get_global_var('func_2233')
const_2652 = relay.const([[-7,-3],[-8,1],[2,-7],[1,-8],[-8,4],[-9,-3],[-10,-1],[-3,7],[3,3],[10,-9],[9,9],[-1,4],[-9,3],[1,6],[-9,2],[-10,-3],[10,-2],[-2,-3],[10,3],[-8,-3],[7,-6],[1,4],[1,-3],[-7,-3],[4,7],[8,-9],[3,-2],[-10,9],[-10,-10],[9,3],[9,2],[-4,-1],[10,-6],[-10,-9],[-8,-8],[-5,-10],[4,-5],[3,4],[6,6],[-10,-8],[-6,1],[3,1],[-10,-2],[5,-7],[3,3],[-10,5],[-4,-5],[9,5],[10,-3],[3,-6],[4,7],[1,10],[5,-9],[-2,-10],[7,-9],[1,-4],[-9,5],[3,-4],[-9,-6],[-6,-6],[2,8],[2,-10],[-5,7],[-4,-6],[10,-4],[3,7],[2,4],[-2,1],[-8,9],[8,8],[10,-9],[8,9],[7,10],[5,1],[3,-5],[10,10],[-4,-7],[-8,-8],[-2,-5],[2,-10],[-1,-8],[8,-4],[-7,-9],[-7,-4],[-5,5],[-7,4],[-10,2],[4,1],[-2,2],[10,-4],[-8,-5],[-9,-8],[-9,-10],[8,8],[4,9],[3,3],[-9,-9],[4,-6],[-4,7],[-10,-2],[10,7],[-5,-7],[8,8],[8,-9],[8,-5],[-1,7],[4,1],[-9,-6],[6,-8],[-10,-1],[-2,2],[-10,-6],[8,5],[6,7],[3,5],[2,4],[7,-8],[-8,-7],[-7,10],[-9,10],[-10,9],[4,-8],[-3,-3],[-6,-2],[1,-2],[-10,-1],[8,-8],[10,6],[-2,7],[-10,-5],[10,7],[-6,-1],[-8,6],[-3,-7],[-8,10],[3,-7],[-1,-1],[9,-4],[-3,-7],[10,6],[10,-8],[-10,-4],[1,8],[1,9],[2,-5],[-5,2],[-9,-8],[6,9],[-9,10],[3,10],[9,-8],[-5,-2],[-8,-8],[5,-2],[8,3],[8,-1],[-8,-8],[7,5],[-8,-6],[-1,-8],[7,-1],[-5,-7],[4,8],[-4,1],[-9,3],[9,-2],[10,-7],[-8,9],[2,-8],[-4,1],[-6,4],[-7,-2],[-3,2],[2,6],[4,4],[-2,-7],[-4,3],[-1,7],[-3,-7],[-5,-7],[-3,-10],[-5,-6],[4,10],[4,8],[4,7],[-6,-3],[5,-1],[9,9],[-7,7],[-9,-10],[5,-7],[-7,9],[8,9],[10,7],[3,6],[-4,-6],[-7,-4],[7,7],[1,-3],[3,-4],[-7,7],[6,-1],[-1,-3],[-3,7],[-1,6],[2,4],[-9,6],[8,-3],[2,2],[-5,8],[-1,1],[9,4],[1,-2],[3,-8],[2,6],[-3,-6],[-10,-4],[-1,-1],[3,-6],[3,4],[10,-7],[-1,-9],[1,2],[-4,-1],[-5,1],[1,-8],[-7,-9],[-6,4],[-1,1],[8,-5],[-5,4],[-5,6],[-2,-8],[3,9],[2,-2],[-1,6],[-9,-3],[9,7],[5,3],[-6,2],[10,-3],[7,4],[-10,-10],[3,4],[-3,1],[7,3],[-7,3],[-9,-3],[6,1],[10,3],[-10,-8],[8,-6],[-10,-10],[3,8],[4,-7],[-8,-2],[-8,6],[-8,5],[-3,-4],[-6,-2],[7,3],[9,-4],[-5,-6],[1,5],[-2,-7],[-3,2],[-9,7],[-7,4],[-4,6],[10,-6],[8,6],[-1,1],[4,-8],[4,3],[6,-9],[-10,9],[-9,7],[2,4],[7,-1],[1,-4],[2,1],[3,9],[5,-4],[-2,1],[7,-3],[-1,-3],[7,9],[-8,4],[-6,-7],[-9,10],[-6,-3],[9,-2],[-1,-7],[1,5],[4,5],[-6,3],[4,-10],[-8,-10],[-7,3],[-6,2],[1,4],[-1,-2],[-10,8],[-6,9],[-1,-6],[1,3],[7,-2],[2,-2],[7,-5],[-2,3],[3,-7],[2,-2],[5,4],[-2,-4],[5,-1],[1,-10],[-9,7],[1,3],[-3,5],[-6,-2],[5,-9],[-3,5],[8,-2],[1,-9],[6,-10],[-8,-3],[3,6],[-6,-4],[-4,-5],[5,-4],[-8,-6],[-10,-9],[-1,-7],[2,-9],[9,8],[-6,4],[7,-9],[-3,-9],[-3,2],[-10,-2],[-10,9],[9,10],[-5,-3],[1,3],[1,2],[6,5],[-6,5],[-5,-6],[-7,8],[-5,4],[-7,3],[6,-7],[9,-1],[1,-4],[-2,-3],[-5,-4],[4,-6],[10,-10],[-9,-6],[8,-2]], dtype = "uint32")#candidate|2652|(360, 2)|const|uint32
call_2651 = relay.TupleGetItem(func_2229_call(relay.reshape(const_2652.astype('uint32'), [8, 10, 9]), relay.reshape(const_2652.astype('uint32'), [8, 10, 9]), ), 0)
call_2653 = relay.TupleGetItem(func_2233_call(relay.reshape(const_2652.astype('uint32'), [8, 10, 9]), relay.reshape(const_2652.astype('uint32'), [8, 10, 9]), ), 0)
var_2657 = relay.var("var_2657", dtype = "uint32", shape = (360, 2))#candidate|2657|(360, 2)|var|uint32
bop_2658 = relay.multiply(const_2652.astype('uint64'), relay.reshape(var_2657.astype('uint64'), relay.shape_of(const_2652))) # shape=(360, 2)
bop_2665 = relay.greater(bop_2658.astype('bool'), relay.reshape(const_2652.astype('bool'), relay.shape_of(bop_2658))) # shape=(360, 2)
uop_2680 = relay.acos(var_2657.astype('float64')) # shape=(360, 2)
output = relay.Tuple([call_2649,call_2651,bop_2665,uop_2680,])
output2 = relay.Tuple([call_2650,call_2653,bop_2665,uop_2680,])
func_2683 = relay.Function([var_2657,], output)
mod['func_2683'] = func_2683
mod = relay.transform.InferType()(mod)
var_2684 = relay.var("var_2684", dtype = "uint32", shape = (360, 2))#candidate|2684|(360, 2)|var|uint32
output = func_2683(var_2684)
func_2685 = relay.Function([var_2684], output)
mutated_mod['func_2685'] = func_2685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mod.get_global_var('func_2412')
func_2413_call = mutated_mod.get_global_var('func_2413')
call_2689 = func_2412_call()
call_2690 = func_2412_call()
var_2693 = relay.var("var_2693", dtype = "float32", shape = (11, 6, 3))#candidate|2693|(11, 6, 3)|var|float32
bop_2694 = relay.subtract(call_2689.astype('float32'), var_2693.astype('float32')) # shape=(11, 6, 3)
bop_2697 = relay.subtract(call_2690.astype('float32'), var_2693.astype('float32')) # shape=(11, 6, 3)
output = bop_2694
output2 = bop_2697
func_2717 = relay.Function([var_2693,], output)
mod['func_2717'] = func_2717
mod = relay.transform.InferType()(mod)
var_2718 = relay.var("var_2718", dtype = "float32", shape = (11, 6, 3))#candidate|2718|(11, 6, 3)|var|float32
output = func_2717(var_2718)
func_2719 = relay.Function([var_2718], output)
mutated_mod['func_2719'] = func_2719
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2736 = relay.var("var_2736", dtype = "uint64", shape = (11, 2, 12))#candidate|2736|(11, 2, 12)|var|uint64
var_2737 = relay.var("var_2737", dtype = "uint64", shape = (11, 2, 12))#candidate|2737|(11, 2, 12)|var|uint64
bop_2738 = relay.bitwise_or(var_2736.astype('uint64'), relay.reshape(var_2737.astype('uint64'), relay.shape_of(var_2736))) # shape=(11, 2, 12)
output = bop_2738
output2 = bop_2738
func_2747 = relay.Function([var_2736,var_2737,], output)
mod['func_2747'] = func_2747
mod = relay.transform.InferType()(mod)
mutated_mod['func_2747'] = func_2747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2747_call = mutated_mod.get_global_var('func_2747')
var_2749 = relay.var("var_2749", dtype = "uint64", shape = (11, 2, 12))#candidate|2749|(11, 2, 12)|var|uint64
var_2750 = relay.var("var_2750", dtype = "uint64", shape = (11, 2, 12))#candidate|2750|(11, 2, 12)|var|uint64
call_2748 = func_2747_call(var_2749,var_2750,)
output = call_2748
func_2751 = relay.Function([var_2749,var_2750,], output)
mutated_mod['func_2751'] = func_2751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mod.get_global_var('func_2412')
func_2413_call = mutated_mod.get_global_var('func_2413')
call_2760 = func_2412_call()
call_2761 = func_2412_call()
uop_2766 = relay.cosh(call_2760.astype('float32')) # shape=(1, 6, 3)
uop_2768 = relay.cosh(call_2761.astype('float32')) # shape=(1, 6, 3)
output = uop_2766
output2 = uop_2768
func_2773 = relay.Function([], output)
mod['func_2773'] = func_2773
mod = relay.transform.InferType()(mod)
mutated_mod['func_2773'] = func_2773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2773_call = mutated_mod.get_global_var('func_2773')
call_2774 = func_2773_call()
output = call_2774
func_2775 = relay.Function([], output)
mutated_mod['func_2775'] = func_2775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mod.get_global_var('func_2412')
func_2413_call = mutated_mod.get_global_var('func_2413')
call_2856 = func_2412_call()
call_2857 = func_2412_call()
func_2174_call = mod.get_global_var('func_2174')
func_2177_call = mutated_mod.get_global_var('func_2177')
var_2880 = relay.var("var_2880", dtype = "float32", shape = (980,))#candidate|2880|(980,)|var|float32
const_2881 = relay.const([-9,-9,-4,-3,5,-3,9,4,6,-8,-1,6,-10,10,9,7,10,4,4,8,-1,6,7,-3,-3,-3,-5,2,-2,-7,-10,6,-2,-3,10,-6,2,-8,-3,-1,-3,3,-3,-7,-9,-3,9,-8,2,7,-3,-10,6,4,-2,-8,-9,-4,5,-5,-6,-3,8,7,-1,1,-9,8,2,9,-7,8,7,8,5,-6,2,9,-9,3,3,5,-6,1,7,3,-6,-1,4,5,-3,-2,8,-6,-10,-10,-2,6,10,-9,7,10,-2,4,-10,-5,10,7,-9,-7,-3,-1,-4,6,-6,10,6,7,-2,-4,-2,3,-6,-1,7,-3,7,-7,3,-2,8,-2,-3,-10,2,5,-3,-5,3,6,-6,-10,5,1,-1,-6,-6,-1,9,-3,-5,6,-9,9,-9,-1,5,7,9,7,2,6,4,-8,-9,6,1,6,-3,1,-1,6,-6,-4,-2,6,4,5,-1,1,-5,-6,8,-6,6,-4,2,2,4,4,9,-1,1,-3,10,2,2,10,9,-3,-5,-3,1,-4,3,3,5,-5,2,9,-3,-7,-9,6,-5,5,10,-7,-5,-5,7,8,-6,10,-2,-9,-8,-3,5,6,-10,2,-1,10,7,2,-5,-8,5,8,7,-4,6,-3,-7,-5,-10,-9,-5,6,-6,8,1,2,-3,3,10,4,-5,8,-6,2,-9,6,2,6,2,-9,9,7,4,4,9,1,-7,-9,4,-10,4,7,-9,4,-8,-4,-6,10,3,5,6,-6,-5,-7,-6,-1,2,-6,2,4,-5,-8,-1,3,6,6,4,-4,-8,-5,7,-7,-6,10,5,2,2,2,-10,-7,-3,-6,-6,-5,1,-9,9,-7,-8,-5,-3,-2,-6,-10,9,1,-2,-10,-9,-1,8,9,5,-2,-7,8,3,8,-4,4,-8,7,3,-6,-4,-3,8,-8,1,8,7,9,5,9,-6,3,9,-3,7,5,8,-6,1,9,-3,10,-4,2,-6,1,6,-7,-3,-9,2,4,3,4,3,8,4,-8,6,-10,-10,6,4,-1,6,9,-6,-5,4,-5,-7,-5,-10,1,-4,10,-1,-2,-4,4,-4,7,8,9,3,9,6,3,8,3,5,7,-4,3,-1,7,1,-5,5,-1,9,-10,-5,-2,7,6,-1,-9,2,-2,-2,8,10,-2,-7,-5,4,-1,8,-3,-7,8,4,2,3,10,-10,7,-10,-6,4,3,-9,-9,6,-4,3,-2,9,-6,7,-8,-4,8,5,-3,9,9], dtype = "int32")#candidate|2881|(480,)|const|int32
call_2879 = relay.TupleGetItem(func_2174_call(relay.reshape(var_2880.astype('float32'), [10, 7, 14]), relay.reshape(const_2881.astype('int32'), [480,]), ), 3)
call_2882 = relay.TupleGetItem(func_2177_call(relay.reshape(var_2880.astype('float32'), [10, 7, 14]), relay.reshape(const_2881.astype('int32'), [480,]), ), 3)
func_2339_call = mod.get_global_var('func_2339')
func_2342_call = mutated_mod.get_global_var('func_2342')
var_2905 = relay.var("var_2905", dtype = "uint16", shape = (128,))#candidate|2905|(128,)|var|uint16
call_2904 = relay.TupleGetItem(func_2339_call(relay.reshape(var_2905.astype('uint16'), [4, 2, 16])), 2)
call_2906 = relay.TupleGetItem(func_2342_call(relay.reshape(var_2905.astype('uint16'), [4, 2, 16])), 2)
output = relay.Tuple([call_2856,call_2879,var_2880,const_2881,call_2904,var_2905,])
output2 = relay.Tuple([call_2857,call_2882,var_2880,const_2881,call_2906,var_2905,])
func_2911 = relay.Function([var_2880,var_2905,], output)
mod['func_2911'] = func_2911
mod = relay.transform.InferType()(mod)
var_2912 = relay.var("var_2912", dtype = "float32", shape = (980,))#candidate|2912|(980,)|var|float32
var_2913 = relay.var("var_2913", dtype = "uint16", shape = (128,))#candidate|2913|(128,)|var|uint16
output = func_2911(var_2912,var_2913,)
func_2914 = relay.Function([var_2912,var_2913,], output)
mutated_mod['func_2914'] = func_2914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2773_call = mod.get_global_var('func_2773')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_2942 = func_2773_call()
call_2943 = func_2773_call()
func_2717_call = mod.get_global_var('func_2717')
func_2719_call = mutated_mod.get_global_var('func_2719')
const_2949 = relay.const([-8.694214,-9.309296,-2.934698,-6.069738,2.114319,-5.520018,-6.669243,-0.908554,-4.725324,9.169893,3.535877,4.614292,-9.218454,-5.552261,3.258167,-1.153135,-8.213926,-8.794013,-3.461168,4.642396,3.253109,-8.753823,6.769972,7.669101,4.281454,-5.490254,-4.966958,8.007495,-9.908169,-2.394922,-7.022460,-3.094534,9.202825,-2.305768,8.681729,-7.268788,5.671791,-9.278530,9.012309,-6.786628,-0.417467,2.191434,-4.614744,-6.555765,-7.580669,-8.237790,5.341520,3.557266,-9.606468,-4.641039,7.790880,-0.191104,5.213450,-5.592642,-1.794414,-2.973102,9.347688,4.419098,-1.555683,1.981804,-1.092464,-4.472160,-2.467434,6.476806,7.675895,-8.857428,-8.364115,1.021823,3.910951,-1.784096,8.333226,6.047727,-4.759933,-1.960924,-3.072395,4.800415,-6.529778,-7.172593,5.668122,8.881555,-3.054940,-6.307659,-8.744891,-5.622787,3.535655,6.206583,5.419246,9.810993,4.600589,7.476371,1.889138,-9.613793,-7.353256,-0.915348,-8.628338,-1.615708,5.410935,6.767232,-7.157188,-7.009482,-0.174038,-1.691007,-1.097768,4.308659,-3.372522,5.469795,2.205394,1.145621,-1.527155,-7.390390,2.008048,0.431215,2.117587,-3.405556,9.967895,7.970476,-4.002313,1.269731,6.507991,-8.973129,2.246885,-4.194310,1.098815,-7.695180,8.037571,9.824234,0.421892,-0.804341,1.605928,7.714011,1.330617,3.989753,-6.802364,-4.122572,2.969275,7.716485,-4.742847,-4.220838,5.265536,0.167483,6.858883,7.703169,-1.589005,4.203619,-3.190137,-0.054930,4.345084,7.240723,-9.809610,0.478014,-2.118492,5.010724,-1.166835,4.307458,-5.353453,2.706083,0.558667,7.849230,-9.094473,9.960275,4.129268,-6.550947,0.700097,-4.880468,4.093483,-3.628107,6.851009,-2.631278,7.244865,0.503606,-3.532467,1.191612,-4.846569,8.741641,9.841712,2.143513,-4.780836,7.349177,-1.074423,-4.062375,3.469174,4.195643,-9.020744,3.566163,0.687104,2.610971,9.824731,3.656300,1.189019,-8.045187,-3.603500,6.528133,1.578061,-8.889341,0.549901,7.161864,6.365403,5.004299], dtype = "float32")#candidate|2949|(198,)|const|float32
call_2948 = func_2717_call(relay.reshape(const_2949.astype('float32'), [11, 6, 3]))
call_2950 = func_2717_call(relay.reshape(const_2949.astype('float32'), [11, 6, 3]))
func_2717_call = mod.get_global_var('func_2717')
func_2719_call = mutated_mod.get_global_var('func_2719')
call_2964 = func_2717_call(relay.reshape(call_2948.astype('float32'), [11, 6, 3]))
call_2965 = func_2717_call(relay.reshape(call_2948.astype('float32'), [11, 6, 3]))
func_695_call = mod.get_global_var('func_695')
func_698_call = mutated_mod.get_global_var('func_698')
var_2980 = relay.var("var_2980", dtype = "int32", shape = (480,))#candidate|2980|(480,)|var|int32
call_2979 = relay.TupleGetItem(func_695_call(relay.reshape(var_2980.astype('int32'), [6, 5, 16])), 1)
call_2981 = relay.TupleGetItem(func_698_call(relay.reshape(var_2980.astype('int32'), [6, 5, 16])), 1)
func_2174_call = mod.get_global_var('func_2174')
func_2177_call = mutated_mod.get_global_var('func_2177')
const_2984 = relay.const([[-3.263224,-7.891831,-5.272248,5.445873,-6.672263,-6.989162,-1.423296,7.403659,-0.755655,-8.661017,5.165207,-1.912441,-4.464848,-7.927474,0.048650,-6.186594,-6.219300,8.832984,8.346576,-1.239367,-1.664227,-9.387252,6.768683,5.848655,-9.862978,-5.523995,0.847567,-6.959391,-2.943865,-9.390797,-3.721310,-3.223112,4.328046,0.729576,-3.762214,2.320721,-3.070295,7.584946,9.369247,5.405375,-1.655062,7.414684,-2.138974,-0.416565,0.163874,-2.473653,8.002576,-6.845207,5.298671,6.227442,3.693709,-5.557746,-9.413431,-1.563732,-7.022657,6.270415,3.501242,-9.764100,-5.002271,-4.720610,4.487915,2.138520,6.898963,-6.957905,0.657366,-0.758478,-1.941195,-5.790675,4.260145,-7.550471,-5.156211,-1.115122,-7.776830,3.683353,3.984451,-8.698718,9.303054,7.988810,9.022209,7.271737,3.976317,-7.225157,-3.049608,-3.178775,9.250680,4.170102,-4.859014,5.742539,-5.683527,2.784228,-8.931375,-7.263826,6.016515,3.375640,6.925693,7.193744,-5.367158,-5.254394,-7.635398,-9.653546,5.163673,9.674675,-8.226908,1.072416,-7.882350,-5.808057,-2.881586,-0.439538,7.872334,0.849247,-5.950627,7.881432,-5.411609,1.211917,6.421300,-8.178945,0.607884,-9.353443,-8.693529,-0.100770,7.546375,2.356485,8.994625,2.061728,3.960609,-4.039432,-0.029681,2.648900,2.295701,2.652342,-3.843069,-6.102379,-0.430020,3.764112,-8.642563,9.144513,8.021604,1.124453,-3.737411,8.602498,5.248786,8.489043,5.474205,-0.244506,5.416498,1.606770,0.232164,9.564663,5.597697,-4.905620,-1.515859,9.325296,6.546783,-7.057731,7.122193,3.717104,4.507224,-5.350799,1.991778,-0.375829,9.970560,0.408055,8.273579,-9.698134,8.104494,-5.871330,-6.631743,3.029008,-4.224042,8.309805,0.168532,4.355690,1.196538,-5.450387,-6.617380,8.947350,-2.181451,6.960164,8.309084,-5.492857,-1.858416,-0.277737,-0.376184,-8.632605,4.758057,7.324835,2.442611,-8.020658,-8.358719,0.202145,0.396625,-7.552805,6.338086,5.142503,3.558777,-9.871606,-2.592675,-3.435591,-9.940999,1.444947,-2.758438,6.574473,3.429479,-9.636087,-1.308240,5.317295,-2.465716,2.234604,2.886759,-4.585607,1.240505,-1.871811,1.329834,-2.967725,-0.203868,-9.144626,-5.825729,-2.354302,5.748366,-7.390870,-8.586607,6.813614,6.222844,9.401751,4.774398,-9.588301,-0.293248,-2.861949,4.547043,0.909876,-2.074329,4.627321,1.020479,7.915218,-2.651223,-6.093895,3.522420,-3.106284,2.367110,3.954703,6.872634,2.427263,-6.519092,-2.857060,-4.278273,0.584449,1.439905,-7.304630,-2.688140,4.953633,8.934040,-4.345565,7.044643,9.268800,-3.594094,8.305492,-2.096596,1.168873,-6.428709,2.617580,1.849158,1.605860,9.344231,-5.134977,2.698779,-7.288124,4.529759,7.475625,3.980052,7.247323,9.329468,-8.570475,4.783593,9.500427,2.154966,7.012391,7.992352,4.268298,-2.120671,2.699929,7.191637,-9.091210,-4.216148,3.362295,-2.071319,7.515858,9.297358,-2.152223,9.928287,-4.368116,-5.935753,6.166093,-3.129274,-2.042377,-1.791354,4.476575,8.930800,1.210066,0.107539,-3.302653,0.277445,-4.213709,9.413898,-9.680193,-9.668107,5.135375,-9.942988,-4.516174,7.415928,2.790298,-9.862088,1.801859,-2.690866,7.632648,5.129938,8.852251,2.730752,5.799462,-3.403528,3.038322,-7.026662,7.312371,-6.668933,2.386496,-7.836917,9.457767,6.657368,7.338794,1.992536,-4.028533,-2.627836,-7.248970,4.817361,-5.341640,5.235027,-2.693103,-5.290264,-5.082489,4.770905,-7.656396,-3.447320,0.799487,-3.501753,3.401141,7.658676,-8.170620,0.761784,-4.229520,-6.451180,0.979345,-1.499161,5.548082,1.304335,1.970117,5.027525,9.334229,-2.210839,-6.829306,4.046380,-3.408676,1.197958,-5.112718,0.962715,9.420771,7.709943,8.156747,-1.811459,-7.689376,-1.635970,-3.203404,2.784185,1.739280,-0.249485,-1.445853,1.544562,6.681682,1.485295,-7.136195,-4.795181,-8.386826,-1.650086,1.598859,-7.815106,-3.466563,-7.141223,-4.606750,-3.520486,2.343064,4.683812,-3.113404,-4.472432,2.436826,4.508094,5.478594,4.931933,8.998142,8.892987,-8.040167,-5.546767,8.599255,-3.126780,-1.020920,0.687898,8.281667,8.186681,-8.825736,8.287532,9.615833,8.124577,-1.717810,-4.324759,-9.379705,3.167815,6.844604,0.040771,-8.868420,6.256503,1.758600,-9.442004,7.148156,-0.791990,8.203266,-9.834182,1.807392,6.714633,-5.880053,2.857880,-4.834843,-4.622343,3.794831,-9.893833,2.339873,-3.098698,-1.382807,5.442679,3.732557,2.119919,-0.233372,4.697809,5.707639,5.405067,6.179696,-3.842831,1.719661,9.380599,9.893237,-4.267778,2.733978,6.055542,5.650475,-0.711412,-0.811639,-6.974052,4.400940,-1.859734,-3.978026,-8.554906,6.082183,9.514585,2.013087,1.780027,-1.275249,8.553791,-2.863741,-0.223232,-3.051420,-4.621620,-2.160405,7.285986,8.446313,8.346830,6.621756,5.512195,-5.726175,-9.769231,5.733848,-3.409343,7.014680,-0.995222,-3.644671,-6.507071,0.415131,-8.831140,4.091035,8.072296,9.876222,-8.627088,-0.977254,3.374238,4.665575,2.977193,2.100789,-4.292160,9.109551,5.620271,8.059925,-9.210343,-6.387164,5.755979,-3.100150,-0.510719,9.709063,0.875266,-2.274800,-3.774287,-2.213904,1.381513,-4.085370,-9.045619,-7.686345,0.203062,9.644936,-7.067491,-8.424063,2.187683,-9.703729,2.359559,2.698143,6.992959,5.944660,8.530304,4.073333,-8.589897,-4.868823,-3.149546,-7.175312,2.915023,9.013385,3.775193,4.880587,1.705602,5.437843,7.650614,8.285341,-9.524936,-0.936140,-7.826120,-6.850048,8.168945,0.043195,3.096631,-2.343285,-9.090818,-0.555452,6.304503,-6.271562,4.666603,8.795152,-2.442973,-9.381859,-1.094065,-4.022492,-9.510597,2.735851,-4.386261,3.809926,-0.665077,-5.807507,-6.406884,-9.853751,-9.030315,-8.705071,-8.356632,-5.056080,-1.260562,-2.050140,2.146243,8.405674,5.025802,-0.332234,3.357892,-5.383841,7.050162,-9.209340,6.018335,4.883717,-7.321233,-1.183515,-4.749579,5.097110,6.117085,7.205000,0.088238,-1.571155,9.727788,-3.132129,4.466823,-6.295966,8.568380,-8.332541,1.772683,-4.246894,8.120258,6.976218,1.867332,-8.045073,-0.304715,1.142912,-5.658601,-2.527113,-7.921624,-3.134629,5.304127,-5.331928,-2.105398,-5.254479,1.887039,5.127219,5.725932,-9.083938,6.775683,2.333849,-3.782754,6.268792,-4.606691,-4.720326,-2.823649,-7.612017,2.988199,-9.487446,7.506828,2.932825,5.881440,5.965915,1.644694,6.727971,-6.011233,-2.816564,-3.755987,9.685057,-1.114332,1.777502,9.927878,-0.685865,1.925837,-8.668457,5.077261,7.429174,-4.937267,9.098307,-9.001889,-5.144223,8.602192,5.066985,4.778441,1.061022,-7.432657,-2.501438,-7.469085,-9.729137,-0.964195,7.602160,-7.261357,-1.679657,6.033521,9.084536,6.542623,0.208301,-8.817919,-8.569759,5.361465,2.039759,-1.767867,3.357469,8.931586,-0.210616,-4.965360,3.335873,-6.742685,9.944079,-3.437007,2.486610,7.327201,-6.483519,2.908512,0.709626,-1.463589,-7.881593,-2.456477,-7.511063,8.845876,7.510966,-9.166763,8.602503,7.330679,-5.933722,2.283580,1.440775,-3.874939,-4.547047,-8.494259,9.249354,1.232592,2.243632,1.077177,7.189359,8.541748,5.415587,0.664063,-5.541803,6.517463,-0.535004,9.080532,4.666307,-8.537860,2.327450,5.210690,6.975096,3.797177,6.002955,-7.754352,3.291281,9.753536,1.850194,9.981614,1.468267,3.372087,0.121989,1.686116,-7.275238,3.848263,-3.380862,-9.161403,9.948382,6.012871,0.639554,8.186941,9.291335,6.859391,5.919489,-8.566099,0.230351,8.472867,-4.705330,-6.375403,-9.831817,3.154810,-5.589498,-1.551078,2.786506,-6.780643,-0.499990,3.215428,4.311142,-9.645718,-9.214220,2.467144,-5.637842,-3.459790,-6.717222,-0.545006,-3.310518,8.031828,6.072933,-6.022893,1.269155,2.474885,-1.341245,9.387622,1.026855,9.539047,2.321329,-2.289819,0.322468,-2.446820,5.855065,-8.623679,-0.678110,-4.467105,9.667189,-4.983253,-1.718765,-5.572728,0.697359,-6.041899,-7.801921,-5.838844,-8.116661,2.501119,4.042261,3.174142,-7.778876,7.465249,-6.638440,9.330611,-5.682622,-6.027995,1.724374,-1.309575,4.876471,-5.991310,-2.748867,8.241467,8.854799,-5.441793,-5.830396,9.335659,2.830564,-3.314061,-5.009491,0.787422,4.895330,9.372380,9.151873,9.326944,-4.266164,-5.435408,-9.476374,-7.264447,-5.313893,5.483143,-6.682939,-4.102241,1.920679,9.843785,-7.096560,-1.167364,3.509379,-7.654394,5.761506,4.469931,1.395196,-1.112048,3.236669,8.340992,8.746485,-7.894187,5.886642,3.847542,7.602758,0.951404,-5.476345,-3.319024,6.039948,-2.102365,-4.622900,9.565693,1.061688,-3.909548,-1.638058,-0.899917,-1.446373,9.377375,2.188553,-0.859711,-3.573768,-6.516516,3.474793,-0.727401,-3.908537,-7.823961,-6.200296,-8.395473,0.123712,-7.907202,1.255675,-6.504894,6.382021,0.611891,-4.575751,-3.214783,2.461661,6.942880,1.882669,-6.666539,-6.203790,-3.062706,-1.703835,-8.466311,2.841698,5.211794,-8.955913,-6.217557,8.553086,-8.884894,0.826865,-5.338852,-3.646668,-1.642876,1.834694,3.230792,1.671447,-2.428588,-3.284127,5.736512,6.800610,-9.939149,-2.279316,-3.621674,7.208021,-9.888205,4.647668,0.096216,-1.119841,2.004261,-7.533520,-4.092420,-9.923294,4.127703,8.864180,3.940881,5.715224,-4.618982,-0.692709,-6.265810,-1.398159,0.061407,4.965306,7.979850,-1.454061,-9.505864,7.683925,-6.154811,6.168243,-5.588575,-2.503407,-1.648128,-7.433282,-1.924097,9.604545,-1.733500,9.423979,5.423983,-4.538898,-3.559081,3.930205,-5.774380,4.274591,-4.938993,-8.300383,-0.443908,-6.632384,6.394168,2.884969,-4.286252,-4.469116,-7.041849,-3.031360,-1.116042,-3.376132,0.807186,2.243008,-8.368815,-5.386415,-7.722322,-5.724518,4.593623,0.917517,7.162617,-5.566767,4.846266,-4.566081,-8.240995,2.366562,0.487572,-5.265862,3.574966,-4.825756,-8.459140,-0.599215,-0.633607,9.611191,-9.711150,-3.921311,-6.611606,0.236851,6.992308,7.261963,-5.541781,-0.531305,8.181674,-2.396510,1.680535,-1.958769,2.042267,-2.564135,1.958777,5.363462,-6.568113,8.745293]], dtype = "float32")#candidate|2984|(1, 980)|const|float32
call_2983 = relay.TupleGetItem(func_2174_call(relay.reshape(const_2984.astype('float32'), [10, 7, 14]), relay.reshape(var_2980.astype('int32'), [480,]), ), 2)
call_2985 = relay.TupleGetItem(func_2177_call(relay.reshape(const_2984.astype('float32'), [10, 7, 14]), relay.reshape(var_2980.astype('int32'), [480,]), ), 2)
output = relay.Tuple([call_2942,call_2948,const_2949,call_2964,call_2979,var_2980,call_2983,const_2984,])
output2 = relay.Tuple([call_2943,call_2950,const_2949,call_2965,call_2981,var_2980,call_2985,const_2984,])
func_2989 = relay.Function([var_2980,], output)
mod['func_2989'] = func_2989
mod = relay.transform.InferType()(mod)
var_2990 = relay.var("var_2990", dtype = "int32", shape = (480,))#candidate|2990|(480,)|var|int32
output = func_2989(var_2990)
func_2991 = relay.Function([var_2990], output)
mutated_mod['func_2991'] = func_2991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_3007 = func_2393_call()
call_3008 = func_2393_call()
func_695_call = mod.get_global_var('func_695')
func_698_call = mutated_mod.get_global_var('func_698')
const_3012 = relay.const([9,1,1,-1,-5,3,2,-4,-1,8,-9,4,-9,-8,-2,9,4,-5,-7,-10,-7,-4,-9,3,-3,3,-9,3,-1,8,-5,-5,10,-2,8,-9,6,-3,4,-6,6,-10,-6,2,7,1,6,8,5,3,3,8,9,-4,-7,1,-2,10,-5,5,2,-3,9,-6,-3,-6,3,6,5,-5,2,10,7,10,-4,-6,-1,7,-2,4,4,-2,6,-8,-7,5,-9,1,-7,-7,-8,-7,4,8,-7,-3,-4,9,-10,1,10,-7,3,4,-1,-8,6,7,-9,7,-1,8,-5,3,4,3,2,-2,7,4,6,6,-7,-1,-2,-4,-9,8,9,-9,7,-6,3,-3,-5,8,-9,3,-1,-4,-5,6,1,7,-5,-5,-10,3,-1,4,5,7,-10,2,7,4,6,-5,4,-9,10,-3,-6,-4,3,3,1,4,2,-3,-3,10,-7,-8,-7,-9,-2,-9,-7,5,2,9,-10,7,10,1,-4,-5,-6,-1,-2,1,-1,4,3,1,9,-1,5,-1,5,-8,-2,2,-8,2,3,5,6,-3,9,4,-4,-7,10,-3,7,-8,6,7,-2,5,-4,9,-2,-7,-6,8,-8,10,2,-5,-7,-10,-4,9,7,3,-4,9,5,-6,-1,-5,-1,6,-10,-2,7,-10,-8,9,2,-7,4,-2,-4,-2,-5,3,-1,9,2,-8,3,10,-8,-9,8,-7,-3,-3,-9,1,1,-10,-5,-6,10,5,-4,7,3,2,-1,6,-10,-3,2,-3,-8,-9,-1,9,9,-3,1,4,-5,7,-7,-1,10,6,-8,8,3,10,-10,-3,4,-3,5,1,6,-7,-1,-10,2,4,6,-7,-9,2,7,10,1,-8,-3,-8,5,1,-4,6,8,8,-3,-4,-4,-4,2,-4,-9,9,9,8,3,-1,-2,-4,8,8,-1,-6,1,-7,3,-5,-2,-2,-2,-7,2,1,-7,-4,-1,8,7,6,-3,-10,-4,9,-9,-7,3,-5,1,9,-3,5,-7,7,-7,1,-7,6,-4,-7,6,-4,-7,-4,-5,8,-5,-5,8,-6,6,-6,-6,4,7,-5,-5,-6,7,3,-2,-3,4,1,9,-8,5,-8,6,3,3,-10,8,-3,5,-9,4,6,-10,-3,-6,-4,3,-2,-5,-4,-6,9,10,8,-5,-2,1,-1,7,-9,-3,4,4,6,-4,10,-5,-3,-10,-10,-10,-5,2,-9,10,-2,1,-10,3,-6,8,-4,-4,8,7,-10,2,-5,1,-3,-4,-5,-10,-1], dtype = "int32")#candidate|3012|(480,)|const|int32
call_3011 = relay.TupleGetItem(func_695_call(relay.reshape(const_3012.astype('int32'), [6, 5, 16])), 0)
call_3013 = relay.TupleGetItem(func_698_call(relay.reshape(const_3012.astype('int32'), [6, 5, 16])), 0)
uop_3021 = relay.cos(call_3007.astype('float64')) # shape=(1, 6, 3)
uop_3023 = relay.cos(call_3008.astype('float64')) # shape=(1, 6, 3)
func_2339_call = mod.get_global_var('func_2339')
func_2342_call = mutated_mod.get_global_var('func_2342')
var_3034 = relay.var("var_3034", dtype = "uint16", shape = (128,))#candidate|3034|(128,)|var|uint16
call_3033 = relay.TupleGetItem(func_2339_call(relay.reshape(var_3034.astype('uint16'), [4, 2, 16])), 1)
call_3035 = relay.TupleGetItem(func_2342_call(relay.reshape(var_3034.astype('uint16'), [4, 2, 16])), 1)
const_3046 = relay.const([-6,-9,1,6,7,-5,2,-1,-2,-6,-6,4,-7,5,-1,7,5,-2,-5,6,-4,8,-10,-8,4,1,-4,5,2,-7,7,10,-9,8,3,-5,-6,-4,3,-1,3,-6,-4,8,-1,1,-8,-1,5,10,-5,4,9,-10,-9,9,2,9,-6,-4,-2,6,7,-7,-9,2,-4,-5,-6,5,-5,-7,10,5,-5,-3,-5,8,-8,-6,-4,1,7,-10,1,8,2,5,3,5,8,-6,-1,-4,-9,-6,-9,10,-2,-6,-8,1,10,-1,5,-1,-8,-7,-1,-7,-1,1,9,3,4,6,-6,3,4,-10,-3,-3,8,-7,-1,9,-7,-2], dtype = "uint16")#candidate|3046|(128,)|const|uint16
bop_3047 = relay.multiply(var_3034.astype('int8'), relay.reshape(const_3046.astype('int8'), relay.shape_of(var_3034))) # shape=(128,)
func_1238_call = mod.get_global_var('func_1238')
func_1241_call = mutated_mod.get_global_var('func_1241')
var_3060 = relay.var("var_3060", dtype = "int64", shape = (14,))#candidate|3060|(14,)|var|int64
call_3059 = relay.TupleGetItem(func_1238_call(relay.reshape(var_3060.astype('int64'), [7, 2]), relay.reshape(const_3012.astype('int32'), [480,]), ), 1)
call_3061 = relay.TupleGetItem(func_1241_call(relay.reshape(var_3060.astype('int64'), [7, 2]), relay.reshape(const_3012.astype('int32'), [480,]), ), 1)
output = relay.Tuple([call_3011,const_3012,uop_3021,call_3033,bop_3047,call_3059,var_3060,])
output2 = relay.Tuple([call_3013,const_3012,uop_3023,call_3035,bop_3047,call_3061,var_3060,])
func_3072 = relay.Function([var_3034,var_3060,], output)
mod['func_3072'] = func_3072
mod = relay.transform.InferType()(mod)
mutated_mod['func_3072'] = func_3072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3072_call = mutated_mod.get_global_var('func_3072')
var_3074 = relay.var("var_3074", dtype = "uint16", shape = (128,))#candidate|3074|(128,)|var|uint16
var_3075 = relay.var("var_3075", dtype = "int64", shape = (14,))#candidate|3075|(14,)|var|int64
call_3073 = func_3072_call(var_3074,var_3075,)
output = call_3073
func_3076 = relay.Function([var_3074,var_3075,], output)
mutated_mod['func_3076'] = func_3076
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3135 = relay.var("var_3135", dtype = "float32", shape = (16, 12, 2))#candidate|3135|(16, 12, 2)|var|float32
uop_3136 = relay.atan(var_3135.astype('float32')) # shape=(16, 12, 2)
output = relay.Tuple([uop_3136,])
output2 = relay.Tuple([uop_3136,])
func_3145 = relay.Function([var_3135,], output)
mod['func_3145'] = func_3145
mod = relay.transform.InferType()(mod)
var_3146 = relay.var("var_3146", dtype = "float32", shape = (16, 12, 2))#candidate|3146|(16, 12, 2)|var|float32
output = func_3145(var_3146)
func_3147 = relay.Function([var_3146], output)
mutated_mod['func_3147'] = func_3147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2773_call = mod.get_global_var('func_2773')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_3192 = func_2773_call()
call_3193 = func_2773_call()
func_2339_call = mod.get_global_var('func_2339')
func_2342_call = mutated_mod.get_global_var('func_2342')
const_3204 = relay.const([[-5,5,4,-9,-4,-6,8,2,5,-7,6,-9,-8,3,-8,-7,1,-10,-4,9,10,6,5,10,-5,7,4,10,-8,9,3,2,8,10,3,-1,-9,10,6,5,9,-5,-8,7,10,-6,2,9,-2,-3,2,-7,-10,4,9,9,3,-2,-9,-9,-5,-3,10,6,-3,-6,-4,6,10,-1,-3,-6,4,-7,5,3,-8,-6,10,-2,-2,10,1,-9,9,-9,-2,-7,1,9,-8,7,-1,-6,-4,6,7,9,3,1,9,2,-5,8,-3,-3,1,6,-2,5,-3,1,6,-1,9,8,-2,-1,-9,2,-10,-4,-4,5,5,3,10,9]], dtype = "uint16")#candidate|3204|(1, 128)|const|uint16
call_3203 = relay.TupleGetItem(func_2339_call(relay.reshape(const_3204.astype('uint16'), [4, 2, 16])), 1)
call_3205 = relay.TupleGetItem(func_2342_call(relay.reshape(const_3204.astype('uint16'), [4, 2, 16])), 1)
func_2683_call = mod.get_global_var('func_2683')
func_2685_call = mutated_mod.get_global_var('func_2685')
const_3219 = relay.const([3,-6,9,-3,6,5,-2,-7,10,-5,3,9,-5,-4,5,8,5,9,9,-7,1,-3,9,-3,7,10,-10,-9,-7,9,-4,-1,2,-5,3,7,3,10,-9,1,-3,-5,1,7,1,-1,4,4,-4,-6,-8,-5,-3,3,8,-10,-6,-1,3,4,-5,-6,6,4,10,9,4,-1,8,3,-9,-4,-9,3,-4,-3,1,-9,-3,1,4,-1,5,-7,5,9,-4,8,-2,5,-7,5,2,-9,7,-6,9,1,-7,-6,-10,-6,-10,8,-7,-7,3,-4,-8,-10,2,-7,-3,-6,-9,-5,-1,-3,-7,-4,6,-1,-5,-6,10,7,-1,-7,-3,7,7,-2,4,1,8,8,-7,5,-5,-5,6,-1,6,-1,10,4,-1,8,-4,7,-4,-8,-5,5,1,-5,1,3,-3,-8,-2,2,9,-9,3,-4,10,-10,-4,-4,-4,-3,-4,-2,-1,-2,5,6,-6,-6,10,7,-4,6,-1,-5,1,10,4,-2,4,-8,10,2,1,-6,-10,5,-10,-3,3,-6,6,10,7,3,-8,10,-8,-3,-10,4,-1,-5,-1,-2,4,9,-1,8,-2,1,5,-7,4,4,10,4,-8,-4,5,5,3,9,-4,-4,-1,6,6,9,-5,2,2,7,-6,10,7,3,1,6,3,2,4,-10,-1,-10,3,-2,-9,8,1,9,3,-10,7,2,7,-4,1,-1,6,-9,-3,-5,-1,10,-10,4,4,-10,1,3,-3,6,2,8,-1,6,-9,6,3,-6,8,8,3,3,9,9,-2,8,6,-1,-3,1,-9,4,5,-6,-9,5,2,5,3,-3,-10,-10,-7,3,9,1,-1,1,-6,-8,-3,6,-10,-9,4,-7,-5,3,7,1,10,-3,9,-6,3,10,9,-3,5,-2,-4,-5,8,-10,-2,3,4,-2,10,-10,3,8,5,1,-3,-9,5,-7,-2,10,-9,5,-8,8,6,-10,-7,-3,2,-2,-8,-2,-7,-8,8,-10,-10,4,-5,-6,10,1,8,2,7,-3,-7,10,5,-10,5,-4,8,-2,10,-3,8,10,8,-4,-5,10,3,5,-7,3,-4,8,2,-2,-10,5,-1,-3,-8,-3,-3,7,2,-4,-5,-2,3,-1,-10,9,2,-7,10,1,7,3,7,-8,1,10,10,-7,10,9,-4,9,2,-6,-7,10,-1,6,2,6,7,-9,8,9,5,9,6,-5,5,1,-8,-8,4,4,-1,7,-8,4,-4,3,2,-1,9,7,7,8,8,4,-3,8,-1,-1,-1,5,1,-9,10,-1,7,-3,-7,2,8,-9,-6,-2,-2,-8,-9,10,-10,10,10,9,3,-2,4,8,-1,10,6,6,4,-10,-6,-2,1,8,-5,-1,-10,1,-8,-5,-7,-4,-6,8,-4,-4,3,1,-8,-7,6,1,10,2,-10,7,-2,10,-3,10,1,10,-8,7,-9,-8,2,-5,-3,2,-1,-1,-10,-1,-1,2,4,5,-4,7,5,-10,-9,9,1,-3,10,5,7,5,-6,-2,-1,-2,7,10,-9,9,7,-7,-3,3,6,-5,4,3,-9,2,-9,-8,-6,-10,-1,2,-1,8,-1,7,-9,-4,-2,-4,-1,-2,-3,-9,-9,5,-8,-1,7,-2,10,-8,10,3,9,5,-6,-10,-9,7,10,1,-8,-8,10,3,-9,-1,3,3,1,-1,6,5,2,7,-3,-9,-9,-6,-7,2,-8,-5,5,2,-5,-3,6,-8,10,-10,4,-6,6,-5,-8,1,10,-8,3,10,-5,-10,-3,-7,6,7,-9,-6,-2,-10,-7,-8,-6,-9,6,-6,4,-2,-8,1,-8,-5,-3,2,9,-8,4,3,-4,-8,4,3,-3,9,4,5,-10,9,-9,-3,-6,7,8,-9,-4,3,4,-8], dtype = "uint32")#candidate|3219|(720,)|const|uint32
call_3218 = relay.TupleGetItem(func_2683_call(relay.reshape(const_3219.astype('uint32'), [360, 2])), 1)
call_3220 = relay.TupleGetItem(func_2685_call(relay.reshape(const_3219.astype('uint32'), [360, 2])), 1)
var_3233 = relay.var("var_3233", dtype = "float32", shape = (7, 6, 3))#candidate|3233|(7, 6, 3)|var|float32
bop_3234 = relay.add(call_3192.astype('int8'), var_3233.astype('int8')) # shape=(7, 6, 3)
bop_3237 = relay.add(call_3193.astype('int8'), var_3233.astype('int8')) # shape=(7, 6, 3)
uop_3243 = relay.tan(call_3203.astype('float32')) # shape=(2, 13, 5)
uop_3245 = relay.tan(call_3205.astype('float32')) # shape=(2, 13, 5)
output = relay.Tuple([const_3204,call_3218,const_3219,bop_3234,uop_3243,])
output2 = relay.Tuple([const_3204,call_3220,const_3219,bop_3237,uop_3245,])
func_3247 = relay.Function([var_3233,], output)
mod['func_3247'] = func_3247
mod = relay.transform.InferType()(mod)
var_3248 = relay.var("var_3248", dtype = "float32", shape = (7, 6, 3))#candidate|3248|(7, 6, 3)|var|float32
output = func_3247(var_3248)
func_3249 = relay.Function([var_3248], output)
mutated_mod['func_3249'] = func_3249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mod.get_global_var('func_2412')
func_2413_call = mutated_mod.get_global_var('func_2413')
call_3309 = func_2412_call()
call_3310 = func_2412_call()
output = relay.Tuple([call_3309,])
output2 = relay.Tuple([call_3310,])
func_3315 = relay.Function([], output)
mod['func_3315'] = func_3315
mod = relay.transform.InferType()(mod)
output = func_3315()
func_3316 = relay.Function([], output)
mutated_mod['func_3316'] = func_3316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_3376 = func_2393_call()
call_3377 = func_2393_call()
output = call_3376
output2 = call_3377
func_3397 = relay.Function([], output)
mod['func_3397'] = func_3397
mod = relay.transform.InferType()(mod)
output = func_3397()
func_3398 = relay.Function([], output)
mutated_mod['func_3398'] = func_3398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mod.get_global_var('func_2412')
func_2413_call = mutated_mod.get_global_var('func_2413')
call_3460 = func_2412_call()
call_3461 = func_2412_call()
func_2747_call = mod.get_global_var('func_2747')
func_2751_call = mutated_mod.get_global_var('func_2751')
var_3469 = relay.var("var_3469", dtype = "uint64", shape = (66, 4))#candidate|3469|(66, 4)|var|uint64
call_3468 = func_2747_call(relay.reshape(var_3469.astype('uint64'), [11, 2, 12]), relay.reshape(var_3469.astype('uint64'), [11, 2, 12]), )
call_3470 = func_2747_call(relay.reshape(var_3469.astype('uint64'), [11, 2, 12]), relay.reshape(var_3469.astype('uint64'), [11, 2, 12]), )
output = relay.Tuple([call_3460,call_3468,var_3469,])
output2 = relay.Tuple([call_3461,call_3470,var_3469,])
func_3471 = relay.Function([var_3469,], output)
mod['func_3471'] = func_3471
mod = relay.transform.InferType()(mod)
mutated_mod['func_3471'] = func_3471
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3472 = relay.var("var_3472", dtype = "uint64", shape = (66, 4))#candidate|3472|(66, 4)|var|uint64
func_3471_call = mutated_mod.get_global_var('func_3471')
call_3473 = func_3471_call(var_3472)
output = call_3473
func_3474 = relay.Function([var_3472], output)
mutated_mod['func_3474'] = func_3474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2773_call = mod.get_global_var('func_2773')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_3486 = func_2773_call()
call_3487 = func_2773_call()
func_2174_call = mod.get_global_var('func_2174')
func_2177_call = mutated_mod.get_global_var('func_2177')
const_3501 = relay.const([-5.349500,4.623651,-0.376268,-2.299148,0.064467,-0.473387,6.808700,-8.262099,0.188824,6.880043,6.364730,9.862125,5.301886,7.542376,2.780782,-7.878559,5.830197,6.438061,5.079651,6.217932,4.165961,2.354988,8.178639,5.344507,0.739083,2.090982,-2.410493,4.404920,-6.564983,-3.465487,-5.379961,6.857241,-7.773655,2.883058,-6.657049,-1.586926,-2.898347,-2.330290,5.576246,-1.926791,7.082902,-1.278161,-2.496644,7.704988,-9.092151,-2.256458,-4.209620,9.686498,-1.581434,8.536920,2.834647,3.285773,4.659847,6.924005,3.822500,5.782497,0.662330,-6.775257,6.620436,-8.901715,-5.744113,7.421096,6.482036,3.577505,1.448972,-2.367083,7.718906,7.937612,-6.853806,5.995597,-9.918953,-7.807860,-0.337399,-0.915712,-2.821360,-4.033953,6.643740,5.162803,-1.136298,5.722855,2.004402,-8.278180,7.123101,5.372499,-2.321635,2.123530,-4.246999,-3.895188,3.223841,-0.449954,-5.882612,-0.619563,-7.733155,-4.499410,-5.788927,7.939334,3.102341,-8.695830,4.274634,-2.367294,5.981960,-7.796344,6.729102,-8.618162,0.054655,-7.527656,3.178087,-5.325674,6.928803,-1.901706,-7.279460,3.739988,3.209912,-9.472068,-6.131927,-3.425393,-0.988987,4.989289,-0.122221,-5.111507,-7.180123,2.347578,1.971721,-4.959412,-8.950786,2.067183,-0.263887,-0.176705,-1.286726,-1.790901,-2.715368,-7.124592,7.674086,-6.253235,-5.956884,-8.215705,-2.477875,-0.608787,0.632847,-3.874296,-1.481395,-2.542102,-3.177148,-2.972480,7.490031,4.980332,-7.416626,-6.276166,0.714436,9.743164,-6.114013,7.453437,8.937981,-8.588096,-6.038855,-8.566829,-1.179137,4.129494,5.575642,-1.659559,-2.056962,-0.805559,3.665406,-8.261885,-2.677125,-2.735824,5.997713,1.246503,-6.525240,4.028467,-0.215813,1.086505,-7.646784,0.336311,-4.941324,-0.547862,-2.543724,1.765849,-4.209347,-0.521262,1.764228,5.941212,-0.675670,1.054763,-3.561826,1.190846,-2.994985,-6.621025,8.164219,8.231055,5.803308,-9.953029,-8.009593,4.997022,-7.077685,2.012543,5.845983,-3.874013,8.103873,-9.135757,7.579445,-6.458989,-0.063632,-5.981329,0.633808,4.176467,-6.283084,-6.075588,-5.927355,9.757853,0.214252,-7.131810,0.704085,2.204351,7.040211,-2.567376,3.746901,-4.287009,8.218939,-9.822993,-4.385810,1.741172,4.778146,-6.923614,-3.898263,-5.827997,-0.052756,-8.902698,-5.744135,4.780993,5.360871,-1.821312,-6.778986,-3.600168,9.675351,-6.291118,-6.314119,-1.652782,0.375632,1.193388,-1.338675,-9.016670,8.446270,-0.418941,-3.892405,8.387379,-0.300996,-5.511594,-9.170570,-6.255089,7.066761,-5.891701,1.837088,-4.945966,6.864535,-0.951135,8.141880,-7.225619,6.819535,-5.598260,-8.857236,3.134878,0.647604,-8.016342,-2.412530,-0.273326,7.331032,3.035254,8.220748,-0.710032,-6.666470,4.252543,0.929654,-5.641980,-5.483304,-8.107792,-1.054461,0.238878,6.905080,2.797306,7.186149,-3.006958,-9.326752,0.100835,9.035701,-8.184570,-2.753097,9.363603,-5.176079,-0.637209,9.424376,6.029926,-8.356313,1.675721,-6.247639,6.190852,-7.827113,2.646927,4.674404,5.977431,-9.400110,-3.023035,0.889699,-5.922853,6.964954,-6.905922,4.801222,-9.521630,2.103194,0.841087,6.399380,4.972406,-1.519884,-2.947982,7.504481,-0.956943,-5.130197,-8.770499,0.218437,6.408158,0.674433,7.877825,4.670762,-7.475390,7.067692,6.945551,-7.781737,7.759401,6.717886,-5.494479,2.056033,-9.065978,-1.814123,0.876166,4.655425,-9.398173,-7.116189,8.947321,-0.148225,-7.185914,3.437351,-0.654663,-0.713817,1.320409,1.652936,-5.960255,-2.414678,-8.514085,3.397955,-2.023904,-4.009149,5.322682,-7.847537,8.950945,-5.450785,0.774455,5.802028,1.372008,3.400698,4.749998,9.648519,4.910255,-5.347315,-3.526393,8.505898,-9.194659,1.464390,-5.826229,-3.079975,-6.481951,-2.074247,-4.539030,4.917714,4.235238,-4.458287,-4.627499,2.503629,-4.245679,8.006563,0.905962,1.508021,8.154469,-3.844119,3.786947,7.744904,1.911397,7.180080,9.989350,-3.206700,1.227241,6.262754,-9.242799,9.907676,-9.212673,2.702344,8.369244,2.490305,1.500247,-5.156163,-4.784643,0.941763,0.061709,5.568279,9.387152,-6.461006,5.214140,-1.250838,-7.286946,-0.680268,8.945425,-8.796777,-8.369878,7.074674,5.831775,-2.804589,4.093630,-2.137656,-1.928979,8.142057,1.171715,-4.423460,2.162055,-9.293017,-4.758164,-5.762461,-0.121448,-8.548631,-6.611402,-1.679304,-4.528109,0.495134,-4.367218,-2.617274,8.108891,1.031035,3.175582,3.646843,-3.118823,-9.775667,-5.021706,-1.072297,-5.753125,-2.865445,-0.446344,-2.865852,9.898481,-9.078347,4.289486,5.228501,-6.565225,4.466055,-2.259220,-9.584928,-0.145093,-7.922954,2.065258,3.065601,3.168462,-4.169815,6.960418,-5.386276,-5.117234,-5.808949,-9.495041,6.744955,-1.484763,-1.771780,8.305409,-4.673473,-5.187272,8.791257,3.314493,7.393163,-7.559434,9.025515,-2.847269,-9.841233,-6.359046,8.787952,-3.116514,-0.664377,3.577054,-9.598932,1.883565,0.248410,4.299236,-4.844191,0.496399,7.312567,8.631879,6.457819,9.497670,8.440171,4.509113,-9.609181,8.222815,-0.616785,2.113164,9.377730,2.288102,-0.635848,0.296860,-1.085993,-8.427792,-2.608329,-0.401483,-6.342648,-1.739519,3.692943,-7.222508,8.502404,-0.331754,-1.422894,-4.922196,3.253832,-1.646930,-8.036697,-6.147045,8.592518,9.995746,-7.535551,3.225696,5.488866,-2.047963,7.596118,-6.632680,-7.034776,1.424578,-1.249844,5.488478,3.698043,-2.425029,3.430915,-9.647749,9.889072,5.901342,8.509928,-7.097835,-3.577053,-1.029848,6.483549,-4.861648,8.822801,4.828847,-5.692509,2.299026,-2.586418,1.044400,-6.072822,-2.522466,7.919646,-2.191526,8.604152,3.036636,7.361692,2.193793,-5.373414,1.080997,4.971416,-5.163603,8.250537,-3.903361,8.790877,5.649005,6.214098,2.813441,5.673179,-8.945534,0.927555,-4.844009,5.646583,8.165247,-5.289064,8.621755,0.519236,2.383212,-9.111698,4.858966,5.895001,3.528207,-2.487779,-8.107480,-4.155938,-8.560820,-1.615671,4.343936,6.113307,-2.535081,9.716653,7.007277,0.614256,1.179255,-1.304966,7.180489,7.460657,3.810599,7.741276,-3.218015,-9.319364,2.095266,5.847173,-6.607867,-0.752012,-8.212432,-2.880880,-3.019801,-0.020641,5.962367,-1.904087,6.266486,-5.495653,-8.562400,-9.796501,4.710415,8.747742,8.732663,8.059589,9.408105,-8.596781,0.373147,-6.476107,-6.919977,1.958499,3.545408,-2.705031,-2.960771,4.995113,0.248452,9.208958,-2.870458,7.091248,1.895069,1.957914,-6.142909,3.166637,6.493228,-8.751508,-9.536985,6.067235,2.425526,-8.746854,-1.094110,-3.525183,1.191667,7.118992,0.103067,-9.975109,1.262889,9.816359,1.167052,-9.127518,-0.574176,1.766488,-5.400008,2.121576,-4.143311,2.349215,9.362704,-3.352345,5.344008,2.526290,4.362864,-4.412101,5.564418,-1.881465,-3.858889,4.972393,8.146467,0.024601,-2.027580,-3.738576,5.929437,6.801340,3.505375,3.429707,1.615951,8.589737,-3.281457,-8.281661,-8.293439,5.256630,6.114867,9.346679,6.023800,-4.917864,9.466467,-1.527628,7.839379,-4.171659,-9.299181,4.575498,-9.700521,-3.627006,-4.123937,-4.760023,1.767422,6.483329,4.811288,-4.564196,-9.550555,-2.046398,8.330702,-9.037094,-2.892194,0.527549,-7.196282,9.181781,-2.041983,-6.426434,-0.495293,7.093353,-3.495607,-4.327515,1.788530,-0.840207,6.980556,-8.324217,6.362017,8.246199,2.318954,-1.144618,-8.811201,-2.193376,3.851172,8.270724,1.396826,-1.422618,-3.917415,9.553194,9.955345,0.274879,-2.784092,2.585226,-4.314003,-6.537935,3.857722,5.850141,-0.205739,-9.566015,-4.484001,6.573545,-3.757472,1.938330,-0.087561,2.513908,-4.435787,-7.124561,-7.350530,7.537535,4.922645,-8.245585,-9.298856,-3.289939,8.695127,2.922230,-4.201819,1.035900,-0.132860,3.910699,-5.865759,-2.706412,5.945043,5.442792,-1.008388,-3.287385,-2.574755,-9.008916,8.297492,0.920234,-0.806760,-3.499848,9.411057,8.578913,1.545825,-2.940831,8.156040,-4.107227,-1.942891,-5.293317,-4.060312,-3.864565,5.568924,-6.133843,0.623988,8.408538,-9.768493,-3.842222,-8.144438,9.459437,8.089958,1.078729,-1.815514,6.635826,9.037382,0.855483,4.757170,4.357668,-9.220800,6.989804,8.185765,2.163193,-1.151619,-3.602110,-2.419891,-6.627892,0.219266,-9.662234,-1.955915,-5.087531,-9.694805,6.868654,8.398780,-4.131570,-9.355253,5.679847,3.548874,6.538239,4.298478,-9.106475,0.557323,1.671175,-1.445394,-6.370150,2.856268,-2.121408,-3.734098,4.046938,-6.979943,-8.528305,8.995689,5.404485,-7.891925,2.212137,-5.203441,1.236219,-5.517654,-9.417450,7.730050,8.782942,-1.861291,-5.947735,-8.494943,-4.875154,7.599071,4.102995,3.288913,8.913410,-0.266766,2.551484,-3.084197,-1.270320,6.758918,9.486052,-2.457044,4.521100,8.998997,5.938222,-1.168789,-4.764508,-0.051594,-0.983638,-7.913836,-5.107845,-2.524115,7.453321,-8.120256,-4.743577,5.519157,-2.189318,-3.334155,-2.355250,8.817660,3.192904,7.660299,-9.187283,-3.011570,3.884704,-2.881499,2.368316,0.058737,-9.113522,-0.848945,2.951857,-2.446390,5.078914,-1.461760,-7.188763,-5.420675,4.364652,-4.921177,5.960841,-4.011237,3.658973,-1.907577,-0.085955,-9.281094,-9.635729,7.820548,-1.411246,6.684282,-5.687730,0.375375,-4.027823,6.718354,7.395888,7.436332,-8.227645,-9.092750,-3.534216,-8.820954,-9.087507,4.748050,3.309785,9.128000,6.811610,-0.662385,-7.813542,-6.618150,9.801783,-1.929129,4.859910,6.660718,6.612614,-8.251434,9.316663,-4.920207,3.463121,-6.755582,-7.685497,-1.371229,-8.594892,-7.488477,-9.582559,1.512858,-4.665667,-5.229040,1.525538,0.278905,2.413541,3.009223,-8.000457,4.045440,0.019401,-5.310456,4.453904,5.349429,7.707792,-2.410101,5.195703,7.009595,1.564136,2.439183,-3.903098,3.619396,-1.766419,-6.280195,5.523052,-7.160490,2.217811,-4.726251,6.633680,-7.160086,3.201575,-7.959878,6.900415,-2.016657,-4.637541,9.395192,-1.472003,-2.498634,9.928356,3.291941,-2.069875,-7.447109,3.552495,-8.736029,-9.591980,2.494949,3.560050,-9.256378], dtype = "float32")#candidate|3501|(980,)|const|float32
var_3502 = relay.var("var_3502", dtype = "int32", shape = (480,))#candidate|3502|(480,)|var|int32
call_3500 = relay.TupleGetItem(func_2174_call(relay.reshape(const_3501.astype('float32'), [10, 7, 14]), relay.reshape(var_3502.astype('int32'), [480,]), ), 3)
call_3503 = relay.TupleGetItem(func_2177_call(relay.reshape(const_3501.astype('float32'), [10, 7, 14]), relay.reshape(var_3502.astype('int32'), [480,]), ), 3)
output = relay.Tuple([call_3486,call_3500,const_3501,var_3502,])
output2 = relay.Tuple([call_3487,call_3503,const_3501,var_3502,])
func_3514 = relay.Function([var_3502,], output)
mod['func_3514'] = func_3514
mod = relay.transform.InferType()(mod)
var_3515 = relay.var("var_3515", dtype = "int32", shape = (480,))#candidate|3515|(480,)|var|int32
output = func_3514(var_3515)
func_3516 = relay.Function([var_3515], output)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2773_call = mod.get_global_var('func_2773')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_3523 = func_2773_call()
call_3524 = func_2773_call()
const_3534 = relay.const([[[4.746478,-5.579261,2.221683],[-2.267054,-0.357539,3.877412],[-8.512010,3.738568,5.371751],[-7.617943,6.518263,-3.246105],[-7.644379,-0.431758,-7.111650],[-8.387442,2.971688,-0.823756]],[[7.734453,3.386497,-9.884673],[3.491583,9.936240,-2.909303],[6.727356,-1.366680,1.446680],[5.865378,-7.518131,4.844387],[9.352341,8.049934,0.267394],[-5.095664,-4.445258,-5.784867]],[[-7.390466,-0.334976,-2.561989],[-4.714058,1.338598,-7.913488],[3.157636,-7.046789,-5.794446],[-5.583963,-6.552035,-7.436132],[2.754950,-4.758193,-3.306696],[-4.313772,-3.509283,-6.525221]],[[-4.214122,0.735163,7.445997],[-1.065301,0.311722,5.355025],[-4.832797,8.993381,5.876645],[-7.568887,-7.444762,-3.105654],[-2.436973,3.831018,5.698485],[5.560212,-2.713433,-1.013146]],[[4.380069,-0.628742,6.559549],[-9.787276,-1.749183,-5.850571],[5.912437,-2.295881,7.018808],[-9.287073,-1.975637,4.856234],[-7.877320,5.671465,4.302306],[-9.937349,-6.668177,2.788718]]], dtype = "float32")#candidate|3534|(5, 6, 3)|const|float32
bop_3535 = relay.left_shift(call_3523.astype('uint32'), const_3534.astype('uint32')) # shape=(5, 6, 3)
bop_3538 = relay.left_shift(call_3524.astype('uint32'), const_3534.astype('uint32')) # shape=(5, 6, 3)
func_1543_call = mod.get_global_var('func_1543')
func_1548_call = mutated_mod.get_global_var('func_1548')
const_3544 = relay.const([3,1,4,4,6,-4,8,5,7,-2,8,8,-9,-7,2,5,8,5,7,3,-7,-2,10,-3,-5,-3,8,4,-10,8,-4,9,-8,5,-6,-9,-5,10,-8,-4,1,-7,-7,-6,3,2,8,-9,-6,2,-5,6,3,7,2,-6,9,10,6,4,2,7,7,-4,10,-4,-6,5,8,-3,-3,1,-4,-7,-9,-10,-9,8,-2,-9,-8,-7,5,8,-6,-4,-1,9,8,-6,9,5,-2,3,7,4,5,2,5,-3,-10,-10,-4,6,6,-6,-7,-2,5,-1,-5,8,8,10,-1,-6,2,3,4,-5,-1,-5,5,5,1,2,3,-8,9,8,-10,2,10,-7,3,5,4,-2,5,9,-5,4,1,3,-7,-10,5,3,7,8,-4,4,2,9,3,-3,-8,-8,-6,-7,-2,-4,-2,2,4,9,-2,-8,-1,2,-2,4,-2,7,5,-5,-4,4,3,-5,-6,7,-9,4,9,-4,1,-2,-2,4,-4,4,5,4,-4,7,3,-9,10,-2,7,1,-6,4,-4,5,7,-6,9,-10,-10,2,4,8,5,4,-8,2,10,1,-6,1,-10,-6,8,-2,5,-6,7,5,-3,-4,4,4,3,7,6,3,-5,-2,4,-3,-10,-10,-2,7,-3,-6,-10,-10,-8,4,-3,7,-5,2,5,-10,4,-1,8,2,10,8,-10,3,-5,3,6,-7,1,10,-5,-10,-4,-5,-9,-4,7,-1,10,7,2,5,-10,-7,-10,-8,1,3,-8,-10,7,8,-5,3,4,1,1,-2,-8,3,-9,-2,8,-8,4,-5,-9,5,3,-9,9,3,-8,3,3,4,7,-2,1,-3,-7,6,-3,-10,-8,-3,1,-6], dtype = "int32")#candidate|3544|(330,)|const|int32
var_3545 = relay.var("var_3545", dtype = "float32", shape = (7, 182))#candidate|3545|(7, 182)|var|float32
call_3543 = relay.TupleGetItem(func_1543_call(relay.reshape(const_3544.astype('int32'), [5, 6, 11]), relay.reshape(const_3544.astype('int32'), [5, 6, 11]), relay.reshape(var_3545.astype('float32'), [1274,]), ), 2)
call_3546 = relay.TupleGetItem(func_1548_call(relay.reshape(const_3544.astype('int32'), [5, 6, 11]), relay.reshape(const_3544.astype('int32'), [5, 6, 11]), relay.reshape(var_3545.astype('float32'), [1274,]), ), 2)
func_2773_call = mod.get_global_var('func_2773')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_3553 = func_2773_call()
call_3554 = func_2773_call()
output = relay.Tuple([bop_3535,call_3543,const_3544,var_3545,call_3553,])
output2 = relay.Tuple([bop_3538,call_3546,const_3544,var_3545,call_3554,])
func_3558 = relay.Function([var_3545,], output)
mod['func_3558'] = func_3558
mod = relay.transform.InferType()(mod)
var_3559 = relay.var("var_3559", dtype = "float32", shape = (7, 182))#candidate|3559|(7, 182)|var|float32
output = func_3558(var_3559)
func_3560 = relay.Function([var_3559], output)
mutated_mod['func_3560'] = func_3560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3315_call = mod.get_global_var('func_3315')
func_3316_call = mutated_mod.get_global_var('func_3316')
call_3683 = relay.TupleGetItem(func_3315_call(), 0)
call_3684 = relay.TupleGetItem(func_3316_call(), 0)
func_3471_call = mod.get_global_var('func_3471')
func_3474_call = mutated_mod.get_global_var('func_3474')
const_3689 = relay.const([-7,4,2,-4,-10,10,-8,10,-2,-5,-6,-6,2,-4,1,10,-6,6,6,9,-10,-5,5,-8,2,8,8,-4,9,-5,3,8,4,9,5,8,-6,-6,8,10,9,9,-3,10,-1,4,-4,5,-8,8,2,-3,-8,-1,-4,6,8,-1,-10,-5,-9,5,3,9,-4,-9,4,-7,10,9,-1,-7,2,-2,-2,3,7,-3,10,4,-1,-4,-4,7,1,7,-3,-10,4,-7,-10,8,-10,8,4,-8,4,10,-3,1,5,3,-4,-4,7,-7,-4,4,5,-6,5,-4,3,8,-4,-9,9,-8,-7,1,6,10,-2,-5,-10,6,4,6,-7,-3,-3,10,4,-5,2,4,-4,9,-1,-3,-5,8,-10,-7,9,7,-4,-6,-7,-9,6,9,10,-8,-10,1,1,-5,4,-7,1,8,1,4,-4,-8,-10,4,3,-10,4,-10,-1,-5,6,9,-6,-5,-1,-6,3,7,1,3,5,8,-5,4,5,2,-3,-3,7,7,-6,-7,7,4,7,-1,-1,2,9,-1,-7,-10,-3,9,-8,2,-1,6,-2,5,8,-4,9,4,-1,-4,9,7,4,5,-4,7,5,3,-4,9,-8,-2,8,-5,-2,-5,3,-6,-10,3,8,-9,-5,-4,-3,-10,5,-6,-7,-2,-1,3,-3,-3,2,8,7,-4,-10,-9,1,-3,-1,-1], dtype = "uint64")#candidate|3689|(264,)|const|uint64
call_3688 = relay.TupleGetItem(func_3471_call(relay.reshape(const_3689.astype('uint64'), [66, 4])), 2)
call_3690 = relay.TupleGetItem(func_3474_call(relay.reshape(const_3689.astype('uint64'), [66, 4])), 2)
func_1238_call = mod.get_global_var('func_1238')
func_1241_call = mutated_mod.get_global_var('func_1241')
var_3700 = relay.var("var_3700", dtype = "int64", shape = (14,))#candidate|3700|(14,)|var|int64
var_3701 = relay.var("var_3701", dtype = "int32", shape = (480,))#candidate|3701|(480,)|var|int32
call_3699 = relay.TupleGetItem(func_1238_call(relay.reshape(var_3700.astype('int64'), [7, 2]), relay.reshape(var_3701.astype('int32'), [480,]), ), 1)
call_3702 = relay.TupleGetItem(func_1241_call(relay.reshape(var_3700.astype('int64'), [7, 2]), relay.reshape(var_3701.astype('int32'), [480,]), ), 1)
func_3247_call = mod.get_global_var('func_3247')
func_3249_call = mutated_mod.get_global_var('func_3249')
const_3723 = relay.const([[3.505365],[6.175241],[-3.759041],[4.438964],[-8.829000],[8.302460],[9.204859],[-5.921660],[0.566774],[9.874615],[-4.253182],[-3.806219],[-6.639273],[-3.658039],[7.512461],[-5.368867],[3.654524],[6.480860],[1.537998],[-3.988114],[-4.675035],[7.913818],[6.599667],[9.333635],[-5.839250],[-8.639351],[-1.024362],[-1.462134],[-8.840186],[7.414526],[9.437905],[-1.128955],[1.549222],[-1.032310],[1.372940],[0.631431],[-0.584243],[8.540687],[-8.958465],[9.998786],[9.634648],[4.170081],[-6.947888],[3.727223],[4.124295],[-3.245048],[-6.782519],[3.193814],[-0.653234],[9.555167],[-0.162349],[7.680173],[2.691374],[3.565939],[-0.645938],[-2.990895],[-2.892405],[1.429889],[-3.243256],[1.437425],[-5.868840],[-9.078909],[-8.882818],[-8.051986],[8.506908],[-3.049108],[-9.910869],[8.863859],[-2.978238],[1.358150],[3.006526],[8.320257],[-5.517430],[-0.234659],[6.542757],[-0.533812],[5.827957],[-0.416299],[-9.412069],[1.084744],[-8.916773],[6.165029],[3.245028],[-8.950992],[4.086433],[-0.167419],[-7.669928],[-3.776069],[7.556581],[4.717870],[-5.952994],[-7.405019],[-8.948400],[-5.993964],[4.995583],[-7.910331],[7.387418],[2.033612],[-6.791230],[7.189937],[2.891368],[-7.389425],[1.606504],[-9.181243],[0.658032],[8.450449],[4.777999],[-9.719923],[-4.013724],[-6.137218],[-2.579277],[-3.280207],[4.021235],[-9.392980],[6.166459],[0.060284],[-1.307687],[-7.441173],[2.819870],[-3.034157],[-4.106939],[-4.275955],[6.620111],[6.172724],[3.829040],[3.646803]], dtype = "float32")#candidate|3723|(126, 1)|const|float32
call_3722 = relay.TupleGetItem(func_3247_call(relay.reshape(const_3723.astype('float32'), [7, 6, 3])), 0)
call_3724 = relay.TupleGetItem(func_3249_call(relay.reshape(const_3723.astype('float32'), [7, 6, 3])), 0)
func_168_call = mod.get_global_var('func_168')
func_171_call = mutated_mod.get_global_var('func_171')
call_3743 = relay.TupleGetItem(func_168_call(relay.reshape(call_3699.astype('float32'), [2, 13, 5]), relay.reshape(call_3699.astype('float32'), [2, 13, 5]), ), 0)
call_3744 = relay.TupleGetItem(func_171_call(relay.reshape(call_3699.astype('float32'), [2, 13, 5]), relay.reshape(call_3699.astype('float32'), [2, 13, 5]), ), 0)
func_3072_call = mod.get_global_var('func_3072')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_3745 = relay.TupleGetItem(func_3072_call(relay.reshape(call_3722.astype('uint16'), [128,]), relay.reshape(var_3700.astype('int64'), [14,]), ), 6)
call_3746 = relay.TupleGetItem(func_3076_call(relay.reshape(call_3722.astype('uint16'), [128,]), relay.reshape(var_3700.astype('int64'), [14,]), ), 6)
bop_3747 = relay.less(call_3699.astype('bool'), relay.reshape(call_3743.astype('bool'), relay.shape_of(call_3699))) # shape=(2, 13, 5)
bop_3750 = relay.less(call_3702.astype('bool'), relay.reshape(call_3744.astype('bool'), relay.shape_of(call_3702))) # shape=(2, 13, 5)
func_3072_call = mod.get_global_var('func_3072')
func_3076_call = mutated_mod.get_global_var('func_3076')
call_3753 = relay.TupleGetItem(func_3072_call(relay.reshape(call_3722.astype('uint16'), [128,]), relay.reshape(var_3700.astype('int64'), [14,]), ), 4)
call_3754 = relay.TupleGetItem(func_3076_call(relay.reshape(call_3722.astype('uint16'), [128,]), relay.reshape(var_3700.astype('int64'), [14,]), ), 4)
output = relay.Tuple([call_3683,call_3688,const_3689,var_3700,var_3701,call_3722,const_3723,call_3745,bop_3747,call_3753,])
output2 = relay.Tuple([call_3684,call_3690,const_3689,var_3700,var_3701,call_3724,const_3723,call_3746,bop_3750,call_3754,])
func_3755 = relay.Function([var_3700,var_3701,], output)
mod['func_3755'] = func_3755
mod = relay.transform.InferType()(mod)
var_3756 = relay.var("var_3756", dtype = "int64", shape = (14,))#candidate|3756|(14,)|var|int64
var_3757 = relay.var("var_3757", dtype = "int32", shape = (480,))#candidate|3757|(480,)|var|int32
output = func_3755(var_3756,var_3757,)
func_3758 = relay.Function([var_3756,var_3757,], output)
mutated_mod['func_3758'] = func_3758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2773_call = mod.get_global_var('func_2773')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_3776 = func_2773_call()
call_3777 = func_2773_call()
func_168_call = mod.get_global_var('func_168')
func_171_call = mutated_mod.get_global_var('func_171')
var_3784 = relay.var("var_3784", dtype = "float32", shape = (130,))#candidate|3784|(130,)|var|float32
call_3783 = relay.TupleGetItem(func_168_call(relay.reshape(var_3784.astype('float32'), [2, 13, 5]), relay.reshape(var_3784.astype('float32'), [2, 13, 5]), ), 0)
call_3785 = relay.TupleGetItem(func_171_call(relay.reshape(var_3784.astype('float32'), [2, 13, 5]), relay.reshape(var_3784.astype('float32'), [2, 13, 5]), ), 0)
func_2639_call = mod.get_global_var('func_2639')
func_2641_call = mutated_mod.get_global_var('func_2641')
const_3789 = relay.const([[7,-1,-3,-7,-4,5,-9,8,5,8,5,-10,2,-4,-7,-2,-8,-3,1,7,-1,1,1,-1,-7,10,4,6,-1,-3,-1,-1,8,-2,-3,2,3,-5,-5,3,-9,4,4,-1,2,-5,9,-4,9,-7,8,10,7,6,-4,-5,-3,-8,1,-3,-3,6,4,10,9,-8,9,6,5,-9,4,-2,3,5,-7,-4,5,-2,-1,4,4,-5,-2,-8,-7,-4,10,-8,-5,-4,-9,5,-8,5,-3,-9,1,-7,-7,7,-3,2,8,4,-3,8,-9,-8,-1,-8,3,9,-9,6,3,-9,6,-10,1,10,4,-8,10,-2,2,-5,-5,-7,-1,2,6,-2,3,9,-8,10,6,7,-5,-8,8,1,8,-10,3,-6,-5,3,2,2,10,2,-1,1,9,-4,-5,-10,5,3,-4,-8,7,5,-5,9,-10,-9,-1,10,2,-7,-10,-9,7,-6,-2,7,8,-9],[2,8,1,4,2,4,-9,2,-5,8,-4,2,1,-5,5,3,6,-9,1,-10,9,-6,4,10,8,3,4,-7,-9,3,-10,9,-8,-2,-4,-1,-8,-1,-4,2,-1,-5,4,-10,-8,-7,9,-4,-4,5,1,-1,2,9,-7,9,8,4,10,5,9,6,-7,5,7,1,6,4,6,-6,-8,10,3,-10,-8,-10,-6,-4,-5,6,1,-9,-9,-8,8,-7,-3,2,3,-8,6,9,-4,-5,-4,-10,-8,5,-4,4,7,8,-10,-5,-4,-5,2,-4,-7,-3,2,7,4,9,4,-2,5,-10,-2,-10,-9,1,-9,8,-4,8,-6,-7,-6,10,8,-3,-2,1,-10,-2,-8,-2,8,4,1,-9,6,9,2,3,9,-4,1,-5,-8,1,10,2,3,1,7,-1,5,6,9,-7,7,1,9,-8,5,-3,-3,4,-1,8,-4,-9,-2,6,6,2,-9,1],[9,4,-9,10,2,-5,-10,10,-5,4,-6,9,-6,-7,-3,4,8,-7,-7,-8,-2,3,-10,-7,2,2,-2,9,-3,-4,5,-10,5,3,-6,-10,-5,-2,6,10,1,-5,5,10,2,-4,-1,3,4,8,6,10,-3,-8,2,-8,-2,-5,-8,-6,-10,-7,-7,-8,6,-10,-6,-6,5,-9,-6,9,9,-6,10,7,-2,-2,7,-9,6,7,-2,-2,-1,-3,9,2,7,-6,9,8,10,-2,1,-9,-5,-2,1,3,6,-6,9,4,-7,-4,4,10,5,10,-5,5,-7,-4,-1,-10,-4,-2,6,10,6,10,5,3,-1,-6,-4,-6,-7,9,9,5,-6,8,-2,-5,-10,10,4,7,-8,4,5,-3,10,2,-1,-3,-3,7,9,6,7,-7,1,8,7,3,2,6,-8,-1,5,-6,-7,8,6,-5,1,-6,6,-4,-6,6,-3,-1,-3,9,-10,-8],[9,5,9,-8,2,5,-8,10,5,3,10,-8,10,-3,-4,9,7,9,-4,8,-9,-3,-1,-10,-2,-4,-8,-7,2,9,1,9,2,3,3,1,2,8,10,10,4,6,6,10,-3,4,-7,-1,-1,4,-4,7,-10,9,-4,3,3,-9,5,7,-10,-4,-3,3,-7,-7,1,-7,8,2,5,1,-7,8,-2,1,-3,-9,8,-10,1,6,-1,5,-8,-5,-6,-4,-9,-6,5,-2,-10,7,-5,5,-6,7,3,-1,3,-8,2,-4,4,1,5,10,-6,-7,5,6,10,-1,9,8,5,3,-7,10,6,1,-7,-1,7,6,8,3,9,-3,-5,-10,-6,-10,1,4,-1,1,5,5,-7,-2,-4,5,1,2,10,6,7,10,-6,-5,1,-9,7,-8,6,1,7,3,-3,-1,9,10,-5,-3,-7,10,-8,4,-4,10,-2,-9,-7,6,7,3,-7,1]], dtype = "uint32")#candidate|3789|(4, 180)|const|uint32
call_3788 = relay.TupleGetItem(func_2639_call(relay.reshape(const_3789.astype('uint32'), [720,])), 4)
call_3790 = relay.TupleGetItem(func_2641_call(relay.reshape(const_3789.astype('uint32'), [720,])), 4)
uop_3794 = relay.sigmoid(call_3783.astype('float64')) # shape=(2, 13, 5)
uop_3796 = relay.sigmoid(call_3785.astype('float64')) # shape=(2, 13, 5)
uop_3801 = relay.log10(uop_3794.astype('float64')) # shape=(2, 13, 5)
uop_3803 = relay.log10(uop_3796.astype('float64')) # shape=(2, 13, 5)
output = relay.Tuple([call_3776,var_3784,call_3788,const_3789,uop_3801,])
output2 = relay.Tuple([call_3777,var_3784,call_3790,const_3789,uop_3803,])
func_3814 = relay.Function([var_3784,], output)
mod['func_3814'] = func_3814
mod = relay.transform.InferType()(mod)
mutated_mod['func_3814'] = func_3814
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3815 = relay.var("var_3815", dtype = "float32", shape = (130,))#candidate|3815|(130,)|var|float32
func_3814_call = mutated_mod.get_global_var('func_3814')
call_3816 = func_3814_call(var_3815)
output = call_3816
func_3817 = relay.Function([var_3815], output)
mutated_mod['func_3817'] = func_3817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mod.get_global_var('func_2412')
func_2413_call = mutated_mod.get_global_var('func_2413')
call_3848 = func_2412_call()
call_3849 = func_2412_call()
var_3859 = relay.var("var_3859", dtype = "float32", shape = (16, 6, 3))#candidate|3859|(16, 6, 3)|var|float32
bop_3860 = relay.floor_mod(call_3848.astype('float32'), var_3859.astype('float32')) # shape=(16, 6, 3)
bop_3863 = relay.floor_mod(call_3849.astype('float32'), var_3859.astype('float32')) # shape=(16, 6, 3)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_3865 = func_2393_call()
call_3866 = func_2393_call()
const_3870 = relay.const([[[-7.010941,-7.213140,-4.587334],[-7.329747,-9.506361,5.383269],[-0.018829,3.997774,-9.386263],[-7.293683,-5.576509,3.682390],[-1.780701,4.465670,2.740633],[0.815691,2.477720,5.347037]],[[-1.231288,-1.537329,-5.963403],[-7.703448,3.005834,-3.255266],[-1.600187,1.685411,-4.112771],[2.180038,-0.381039,9.705552],[2.969383,9.590035,7.108116],[-3.598665,-4.226983,-9.176168]],[[-1.824301,-7.540583,-6.012057],[0.637185,4.520740,6.903565],[-3.239683,-5.491179,4.599575],[-8.979058,-2.119877,9.434393],[-8.671265,-3.067210,-6.422851],[-1.485295,8.450459,9.990585]],[[7.626484,-9.396540,9.778612],[2.334627,-1.577853,-8.182066],[3.470282,-9.202414,-1.244543],[4.172451,-3.470328,8.851940],[6.436934,6.084891,-6.429787],[-7.676051,-6.659224,4.585464]],[[0.207337,7.630821,-3.470276],[5.821157,-3.326965,-3.533464],[-0.185187,4.710102,9.258652],[6.501374,-4.242268,5.543377],[9.512094,3.606334,6.879922],[0.040871,1.305733,-0.951442]],[[-8.152531,1.395463,-1.467158],[3.170575,-6.581729,7.285001],[-3.423777,-3.188164,7.427450],[8.314612,9.279661,-4.610588],[9.520539,6.518940,-5.739961],[6.032767,-6.877930,8.081542]],[[-2.689826,9.983962,-6.242774],[-9.031831,9.337230,2.352957],[-9.094071,-0.606069,8.958690],[-3.382253,-8.962222,7.588198],[-8.222298,-2.301865,-0.767325],[5.700765,-6.535730,9.409695]],[[4.539780,3.335127,-1.617706],[7.751240,-8.079538,-3.189407],[9.820002,-4.613407,1.905766],[-4.212832,-6.406972,-8.809245],[7.036079,5.994216,-7.423868],[-3.696953,-3.987818,-9.043149]],[[-6.703516,-2.498721,2.322752],[6.852018,8.335209,6.992966],[3.893166,-0.507012,-3.635168],[-4.724303,-4.505938,2.232511],[-7.890832,-0.089306,-7.368268],[0.416929,6.511484,3.184433]],[[0.674017,5.223461,-8.514374],[1.893273,-3.274596,-1.609065],[-8.728358,-7.836632,-9.365979],[0.544574,9.132953,-8.909891],[-7.389381,7.722123,9.318500],[0.778306,2.697374,8.048142]],[[2.138107,2.130421,1.233667],[-9.084261,9.661827,-4.629101],[-6.612101,-0.305566,-2.776612],[1.901527,7.413870,-9.538836],[4.019382,1.550214,-2.259368],[1.240597,5.610909,6.457815]],[[-6.221814,-6.784239,4.577193],[9.366725,-2.580909,2.153077],[-0.181360,3.516441,7.776369],[-8.515107,1.033555,1.183764],[7.416159,0.311369,-9.673410],[5.502867,-5.020744,-2.735945]]], dtype = "float32")#candidate|3870|(12, 6, 3)|const|float32
bop_3871 = relay.mod(call_3865.astype('float32'), const_3870.astype('float32')) # shape=(12, 6, 3)
bop_3874 = relay.mod(call_3866.astype('float32'), const_3870.astype('float32')) # shape=(12, 6, 3)
output = relay.Tuple([bop_3860,bop_3871,])
output2 = relay.Tuple([bop_3863,bop_3874,])
func_3884 = relay.Function([var_3859,], output)
mod['func_3884'] = func_3884
mod = relay.transform.InferType()(mod)
mutated_mod['func_3884'] = func_3884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3885 = relay.var("var_3885", dtype = "float32", shape = (16, 6, 3))#candidate|3885|(16, 6, 3)|var|float32
func_3884_call = mutated_mod.get_global_var('func_3884')
call_3886 = func_3884_call(var_3885)
output = call_3886
func_3887 = relay.Function([var_3885], output)
mutated_mod['func_3887'] = func_3887
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3931 = relay.var("var_3931", dtype = "float64", shape = (8, 4, 4))#candidate|3931|(8, 4, 4)|var|float64
uop_3932 = relay.tan(var_3931.astype('float64')) # shape=(8, 4, 4)
output = relay.Tuple([uop_3932,])
output2 = relay.Tuple([uop_3932,])
func_3935 = relay.Function([var_3931,], output)
mod['func_3935'] = func_3935
mod = relay.transform.InferType()(mod)
mutated_mod['func_3935'] = func_3935
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3936 = relay.var("var_3936", dtype = "float64", shape = (8, 4, 4))#candidate|3936|(8, 4, 4)|var|float64
func_3935_call = mutated_mod.get_global_var('func_3935')
call_3937 = func_3935_call(var_3936)
output = call_3937
func_3938 = relay.Function([var_3936], output)
mutated_mod['func_3938'] = func_3938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3315_call = mod.get_global_var('func_3315')
func_3316_call = mutated_mod.get_global_var('func_3316')
call_3945 = relay.TupleGetItem(func_3315_call(), 0)
call_3946 = relay.TupleGetItem(func_3316_call(), 0)
output = call_3945
output2 = call_3946
func_3947 = relay.Function([], output)
mod['func_3947'] = func_3947
mod = relay.transform.InferType()(mod)
output = func_3947()
func_3948 = relay.Function([], output)
mutated_mod['func_3948'] = func_3948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_3949 = func_2393_call()
call_3950 = func_2393_call()
output = call_3949
output2 = call_3950
func_3951 = relay.Function([], output)
mod['func_3951'] = func_3951
mod = relay.transform.InferType()(mod)
mutated_mod['func_3951'] = func_3951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3951_call = mutated_mod.get_global_var('func_3951')
call_3952 = func_3951_call()
output = call_3952
func_3953 = relay.Function([], output)
mutated_mod['func_3953'] = func_3953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3971 = relay.var("var_3971", dtype = "float32", shape = ())#candidate|3971|()|var|float32
var_3972 = relay.var("var_3972", dtype = "float32", shape = (16, 12, 6))#candidate|3972|(16, 12, 6)|var|float32
bop_3973 = relay.floor_mod(var_3971.astype('float32'), var_3972.astype('float32')) # shape=(16, 12, 6)
bop_3979 = relay.left_shift(bop_3973.astype('uint32'), relay.reshape(var_3972.astype('uint32'), relay.shape_of(bop_3973))) # shape=(16, 12, 6)
func_1543_call = mod.get_global_var('func_1543')
func_1548_call = mutated_mod.get_global_var('func_1548')
const_3987 = relay.const([[-4,3,-1,-4,-9,-6,8,-7,-4,-5,-5,6,-7,-1,-2,3,-9,-7,-3,-9,-8,9,2,4,-5,9,-3,3,7,2,7,7,-4,-8,-5,-1,3,10,6,-1,4,-2,6,9,-1,7,8,6,6,9,3,6,-2,3,-10,-10,6,-3,7,-10,-5,-10,8,-3,2,-10],[3,-2,10,-4,10,9,6,-2,6,-3,8,-1,9,-3,-7,-7,8,-7,5,-3,3,-2,-1,-4,-6,-7,-2,1,2,4,8,10,-9,6,-8,10,8,2,6,-8,5,-7,4,8,-3,-5,-2,-6,-4,6,1,5,5,1,-5,6,-4,5,-2,-6,-5,-7,-8,9,-7,-5],[-8,8,-10,-7,-7,3,9,-1,-10,7,8,2,8,1,6,-6,8,8,-4,-3,9,4,5,-8,-2,2,-10,7,8,5,-6,6,4,2,-10,-9,-10,-8,8,-1,2,10,8,2,-7,-7,6,7,-9,8,-5,-10,-9,1,6,-10,3,-10,9,-6,9,-1,9,4,8,-9],[8,9,8,9,-10,-2,-8,4,6,-8,-3,7,9,-10,-5,2,-8,3,9,-10,10,1,-4,-7,-5,5,-6,-10,6,-3,-10,-4,-6,-4,8,3,8,6,-9,2,10,1,-10,10,-10,-4,-8,9,-5,8,-9,-3,-6,-8,-4,8,10,7,-8,-5,-9,-9,9,-2,2,-8],[-2,-5,10,5,6,7,3,-5,10,-1,8,8,9,2,2,2,2,2,3,-7,1,4,-7,-6,6,8,1,-3,-7,-4,6,-3,-3,2,4,-4,1,-10,-4,7,-6,-8,-2,9,-10,8,-9,6,-8,8,8,-7,-10,9,-3,-8,3,10,-8,7,-2,-4,8,2,8,5]], dtype = "int32")#candidate|3987|(5, 66)|const|int32
const_3988 = relay.const([3.394361,5.948980,3.830609,9.842034,5.129214,-9.575409,-0.698928,7.282818,4.085118,-6.324097,-8.239617,8.450681,-3.633032,0.791059,9.431436,-5.135732,-5.436736,-0.250786,1.219528,7.817728,2.315918,-7.558202,0.903824,4.644362,3.499937,8.108737,-2.699328,-2.941201,-8.039706,-8.397996,-3.298753,-6.266855,-3.900538,-0.299296,4.750862,4.661264,-5.227069,-0.720592,7.093592,-8.226811,-3.503246,-8.838301,-0.476356,7.801204,-7.736621,-5.284227,-2.505583,-8.392762,7.794868,6.239803,-2.390708,-9.844669,-2.810168,-7.483799,-3.330135,-1.270807,6.982734,3.581868,0.983969,-2.202180,0.757851,-8.741920,-8.573800,-3.213191,-0.919111,-7.102776,-0.865203,7.454500,1.367596,-8.403841,-3.755027,-8.426261,3.206551,9.260227,-4.772186,4.936084,-4.245285,-7.646638,-0.596619,-6.973102,-8.861599,2.840915,7.434001,0.703937,1.698723,6.950125,-0.429635,7.103403,2.648161,1.915294,-0.119080,8.248462,-1.903182,2.484693,2.620286,0.849483,-6.830544,-3.597584,7.009317,8.883415,-1.807859,-4.525367,-2.689302,-0.411608,-1.140436,-3.812572,-0.206879,0.312513,3.801257,6.873054,1.777572,-9.579777,-2.690731,4.535869,-6.117539,-7.681976,4.322388,6.349242,-6.506331,-4.278161,8.141772,3.421873,-5.237539,0.348953,-2.643699,-7.613778,0.509228,7.433836,-5.482914,-1.621082,0.613574,0.200353,8.328132,7.849785,-4.796460,3.980212,-5.754453,-8.263040,6.152464,-0.598615,-2.003479,4.758866,0.755206,0.646306,-4.841488,-7.558794,-0.303175,-7.886136,-3.833441,2.327496,8.307401,4.760909,-6.572304,5.790195,4.364471,7.062809,-4.254666,1.389550,4.040889,9.272879,-0.340372,-2.229205,7.391762,2.073358,-2.558317,3.388451,6.388459,6.256734,-4.430849,3.391966,-0.162847,3.701785,-1.126807,-5.185153,-9.824306,3.310535,5.859390,2.249153,-6.764548,-8.893829,-0.831793,1.840489,-0.699930,1.772227,3.586259,-8.998662,2.847677,-1.979367,3.766456,9.088290,5.000707,-5.751400,-7.701062,1.809663,-2.725379,2.174082,2.647289,-6.096544,7.405268,-5.681059,8.051720,-8.737939,5.294278,-8.103950,3.273655,-1.949391,-5.250491,7.825613,-0.862695,9.240182,9.087669,1.381502,0.118094,-6.499361,4.411085,3.009476,-7.860252,9.010929,6.200191,-2.606339,-8.345084,1.256238,5.583647,6.120718,7.750383,8.690984,-8.725255,-3.693493,-0.304267,-8.571149,6.189939,-6.618705,-6.349318,1.521504,9.755401,-5.915422,-6.493035,-3.700832,6.734593,-6.143653,3.376046,3.229518,-3.720439,9.826696,-3.861544,4.406658,-7.506882,9.060084,1.874398,-7.649960,-4.475405,-7.874011,-5.656583,0.125859,9.402878,-8.131218,7.868623,-1.035779,8.780142,-9.270566,2.552100,-0.514769,-6.254548,-5.208126,-5.855918,-7.481031,-8.048720,-8.909495,-2.899052,-0.880246,9.674182,-7.497745,-8.573503,-9.958142,-3.715912,7.290607,-4.610991,1.210474,-7.637778,0.987600,-7.247396,3.817763,-7.706433,2.826813,1.162143,-5.272708,3.359936,5.424780,9.972103,7.267616,6.646437,-0.589843,-8.348371,-2.273519,7.314506,-8.570622,3.666405,-7.274585,0.728271,-2.653038,4.089336,1.569995,4.600909,-8.210054,-1.232192,2.880711,8.855898,-5.071960,2.189778,-5.348058,-8.101752,7.628483,-0.049795,3.357198,2.981947,7.760482,4.181295,0.481326,0.053071,9.076934,-9.872237,8.876748,-9.046059,8.710480,-4.414731,3.604061,-0.909836,8.575621,-1.290371,-7.119289,-5.060072,1.199310,-1.520199,2.717217,-7.373354,-3.998277,3.343736,-9.752162,2.633884,0.713780,0.251877,-0.225824,3.939931,3.291714,-3.333047,-0.052390,6.448297,-1.489423,-6.921166,6.690225,4.078828,3.936027,-0.611837,-5.059246,-6.883201,1.529515,-0.915895,4.107950,9.200494,-6.009268,3.048650,0.528189,-7.815228,-6.708809,4.443971,9.167991,4.653979,0.247343,7.134131,2.086941,1.926610,3.152215,-6.152243,-8.041936,7.725848,-1.267463,1.937530,8.727380,4.767323,-2.274568,-3.552458,8.602741,3.986478,3.440580,1.644556,-3.803738,9.212331,-2.818881,-4.477632,-3.958497,1.319613,-3.971943,-2.911372,-7.793316,-5.229026,-5.337857,1.372177,-7.468126,-0.073960,7.504638,9.490094,-4.551168,6.872879,-8.549718,3.557516,-9.084181,6.079849,1.655512,-2.921092,-4.802082,3.217974,1.738759,-5.064327,9.418389,1.966321,-5.774722,-6.196799,-4.772610,-6.038234,0.663082,1.669647,-7.066720,2.498825,-7.565181,-4.171075,-0.648017,0.329687,-3.443916,7.185623,-3.447741,-4.456132,6.711655,5.200566,-9.813513,1.742836,-6.884341,5.955969,1.757577,-3.197842,3.207374,-2.265563,-2.882592,0.888398,-3.608374,-2.576685,-3.903213,4.440001,5.344260,3.883731,-0.422320,-7.136669,7.675806,-2.639548,-3.242720,-4.600956,5.764375,9.135034,-0.229562,-2.287319,7.247173,4.267266,2.235025,-3.592234,4.869270,-0.242896,-2.945855,-1.647441,7.990680,-6.118031,-5.547208,3.535191,-0.559418,1.229754,5.936498,9.785256,8.664096,-3.913063,3.854064,6.827738,-1.643016,9.829172,-8.378867,-0.979832,-2.723837,4.818752,0.451022,-1.685714,5.808042,-3.122172,3.313762,-1.177007,-0.790351,2.475554,7.650677,6.634948,-1.748862,-9.001152,-7.316759,-1.268011,9.934099,9.232396,-7.221888,-4.315879,-4.902839,6.199779,-1.325172,-4.725981,-3.838774,6.758064,-0.047547,-5.105985,3.166668,-6.751682,1.489848,-9.987779,-4.014393,-1.770614,0.341559,7.805300,9.225260,4.398923,-0.349457,6.640387,5.739424,-9.277943,2.277415,-3.559484,0.112585,-6.148601,-0.009999,3.137481,1.036046,5.309977,9.951836,-3.483175,6.193159,-4.004404,9.877522,3.511184,-7.010791,-5.928048,-5.008301,-3.089044,5.556494,-2.953377,9.507039,8.247055,8.745197,6.759390,8.157537,-0.550189,3.292703,-1.009476,-8.638654,3.975269,5.653880,-6.415873,9.045092,8.836725,0.387689,-1.500916,2.475128,2.616096,-6.852048,4.449478,-1.320682,0.097723,2.854456,-4.717847,2.744184,-5.733923,-0.089354,-4.563987,-7.064049,-9.364805,8.892715,-4.547673,-7.222976,-7.040147,3.685698,-3.567977,2.155974,0.162740,3.596171,-1.819152,-9.717778,1.358649,0.664846,-0.840303,1.835146,8.154851,3.531311,-7.609029,-9.945544,-0.171264,-3.380427,4.768713,-3.952128,-5.055444,1.866154,-6.296822,-7.391701,-7.086181,0.319405,8.208421,1.613827,-0.752305,-6.542476,6.525035,9.832707,-1.551775,-5.568117,0.373207,2.719916,3.482022,-0.825834,-1.428975,3.768919,-9.663755,9.835937,-1.768630,-5.815123,2.231023,9.147520,2.109946,-9.738108,-9.778407,-7.659097,-4.803891,-7.276515,-6.981706,1.790713,4.479666,0.037806,-6.307735,4.348167,5.669644,9.872186,-5.712294,2.782212,1.353385,-9.183443,4.667764,7.260758,-6.113954,3.958793,-4.563484,1.686649,3.818521,7.118354,9.453793,-8.790377,-5.719322,5.462519,-1.688667,8.909126,-4.981574,-9.578860,-1.045283,3.933553,1.311812,9.832950,-8.587107,9.952885,9.072092,5.746400,4.536002,6.343650,6.562917,-8.644231,-7.863255,2.973264,3.198035,-3.796031,9.643640,-2.144104,-2.491636,-3.103019,-8.171445,-5.746337,-5.366898,-8.844462,-5.135223,6.291029,-2.449531,3.705020,1.940212,-6.019983,-8.544833,-4.260722,-4.823057,-2.440489,-6.575741,3.003498,-3.008799,-7.460445,3.278283,-0.068862,7.502208,7.898698,-3.259051,-1.598384,3.252895,-3.471858,1.647419,6.926481,-4.209801,-1.355988,-0.155036,5.594847,9.453364,1.804446,9.794268,-8.078326,-8.758047,-1.316089,4.897254,-7.306740,5.901684,-0.373438,-1.698949,8.383887,-9.634162,9.114408,0.652941,7.417680,2.279221,-4.330954,3.940864,5.915850,-3.598110,-9.680505,-1.322725,4.358656,4.756087,-2.762149,8.865798,-2.026396,3.160453,0.290785,6.652770,3.458197,8.509624,4.789713,3.749187,-4.966777,-9.930902,5.178383,-3.831911,3.476429,-9.526525,0.350831,2.568572,3.034468,6.169820,5.590568,-2.940170,0.186776,-3.512152,-5.272691,5.109879,-1.155027,5.351625,-4.360777,-4.999522,6.800148,1.764211,-9.859754,2.420565,3.209203,-8.948020,0.452566,-5.347921,8.765420,7.794962,-1.644630,-7.722780,-4.757581,-8.457629,9.478795,-8.911258,4.652279,2.830148,-3.417924,-1.268050,-8.725878,1.130102,0.650509,-9.250102,-0.079296,-8.222643,5.409096,3.555534,-1.098642,-5.541880,-8.133002,-6.104136,3.281721,-4.414753,-3.203949,9.196423,8.496003,-1.496882,-1.293775,7.270448,-8.913310,3.166089,8.185648,-3.248560,-8.425704,1.996689,8.241633,4.939724,-7.934163,3.354954,-2.605298,1.463609,3.094195,-1.226046,-9.708452,-6.244366,2.793543,-2.403993,7.889232,-4.123997,-6.162599,-1.906647,4.265209,-2.229763,4.706224,9.997083,-9.637857,-2.184322,-1.821909,-5.181416,-7.430684,-1.824738,-7.635656,-0.017005,2.283339,-7.915854,2.986293,0.190950,-9.359465,-0.145663,6.475862,7.665809,-9.536481,9.041925,-8.133074,0.214323,0.716214,-5.274035,6.528512,5.288418,4.716824,-7.898489,-6.467075,4.131414,7.591092,2.963160,8.859233,-7.070967,-5.996008,3.779735,2.630026,8.797444,-5.676465,0.218613,5.381819,-0.475031,-6.834228,1.130355,-4.289888,5.612584,-0.277264,8.583859,9.521811,5.354781,7.686520,-6.023439,7.455015,4.883572,2.748648,8.005360,7.867218,2.468076,-5.150811,2.827563,5.237046,-3.971105,5.757928,-4.135242,-0.096533,-5.576317,-6.441737,-8.549066,-0.722145,3.928914,-5.661644,-8.898531,-6.362983,7.405458,-6.121411,4.878472,2.584621,8.582020,1.538140,8.858242,9.266484,-0.541265,-0.806494,-6.428058,-1.667884,-3.461926,-4.233792,0.847468,-7.676773,-3.705552,7.064649,3.837571,9.686814,0.764971,-9.994471,-6.614791,-9.145988,1.885912,-5.951211,1.981676,5.642766,0.535333,2.988432,-8.473277,-3.528454,-4.128809,-4.174064,-1.902368,3.568470,1.445594,4.066583,6.338374,-5.074620,-1.256316,-0.626592,6.043250,-5.346075,-5.130096,7.798220,7.145395,2.688750,5.137036,2.089021,5.732650,9.588670,-5.856849,3.081347,-9.024041,-8.384294,-8.217594,6.788514,-6.221176,-6.131119,2.891326,8.807396,0.688849,-7.770362,7.615066,0.301077,-2.927612,8.405668,2.105274,3.715418,-9.773732,-3.699081,-9.843478,-9.833264,3.590080,0.987498,8.111372,-7.324669,5.559903,4.211889,-4.544620,-2.597426,-4.986103,-8.256469,-9.373403,1.968362,9.979771,4.074685,0.021469,4.172066,-6.772709,8.392908,4.503257,2.321511,6.471710,3.610649,1.381847,-7.590221,7.646669,4.747708,-4.110266,-5.886851,-2.416072,-0.024427,-7.222459,3.449299,-4.413304,-9.756068,-8.859328,9.001333,-2.716362,5.747848,-6.594608,2.797138,-6.801063,3.090504,-5.855352,6.938402,2.150509,-8.770377,3.204469,-5.757217,9.034587,6.417964,-0.446398,0.569611,-9.085443,-8.144085,-4.637469,-2.246631,-1.432538,-5.696205,-0.493167,-8.255334,9.886683,5.701256,-9.229740,-6.606199,-2.379782,4.507543,-5.673789,0.328247,2.929088,9.249342,-6.622816,9.631458,3.728943,8.622802,2.881370,2.487901,-1.872064,0.492381,1.431702,-4.822464,7.671260,-3.448937,-7.498823,-4.625088,-9.251510,-6.527200,-7.003119,5.893199,1.040226,9.396111,-3.114826,7.156586,2.018965,4.733479,-8.542978,-7.830573,1.659614,-0.786902,-5.883252,-8.653325,-6.602024,9.207100,-5.575588,5.628689,2.958845,-6.068447,0.152466,6.335612,-7.130891,9.547788,-8.827471,-6.591534,0.633687,-6.958040,-9.884800,-0.148165,3.646328,3.568218,-6.970278,3.134140,2.646539,-3.350117,9.047928,7.162561,-7.339545,-9.936904,-9.828519,6.749056,0.425825,9.389593,-5.801363,8.318122,-9.296266,4.372428,6.343837,-1.725493,-7.318549,3.511711,-0.147445,5.119155,-1.484735,-1.196920,-6.667433,-9.134794,5.504693,2.269509,9.211646,0.002551,9.433831,-8.344871,4.479614,5.442248,5.542063,2.766692,8.109440,1.761184,-8.261262,-5.719377,8.718092,8.216813,4.562190,-9.679823,6.198027,-8.775639,-0.907234,4.669599,2.950240,2.990344,8.648325,2.092739,5.628930,-8.466139,-5.491878,-9.018520,8.016700,-7.380817,6.661572,8.968017,-6.715791,4.947629,3.543554,-1.265971,-0.679806,2.641914,-4.929050,-4.946745,0.378208,5.967223,-7.600248,3.322598,0.592438,-8.259283,-1.140879,8.931942,5.175272,7.171954,0.604787,2.118600,7.975801,-0.860271,3.123198,2.989378,8.405526,-5.159078,2.847416,-8.004706,5.783843,8.273382,-1.856975,-8.711474,4.942793,-6.081443,1.760870,-2.262719,8.795628,-3.193361,-2.166454,2.660048,1.869662,4.993392,-5.814951,0.186783,-0.437122,9.601716,-6.190137,-4.923524,-5.414307,-4.772737,-5.751426,-8.903103,3.596575,2.446668,8.827249,-5.094539,-4.191007,9.184968,3.336140,0.372229,9.761706,-1.384256,-4.603055,7.598633,-6.753722,3.082473,1.677462,-2.833829,-6.247997,-4.259584,-2.355391,-0.863591,-8.656056,9.072177,8.146611,7.072018,-3.062276,-4.463315,-9.529905,9.642583,9.277637,0.977832,-5.281562,-3.170299,5.826417,-1.030766,0.010549,6.701776,-4.596933,5.635862,0.036985,-8.303309,-4.045836,-4.373124,7.564978,7.751574,-7.180782,6.716151,-7.836259,-6.431482,-7.310895,-8.107949,8.055840,3.173764,-4.459568,0.368462,9.556928,4.484819,-1.768892,-8.695047,9.562666,9.854129,-9.395010,7.777253,-1.297340,5.131700,-7.929716,-1.679264,0.828297,-0.132157], dtype = "float32")#candidate|3988|(1274,)|const|float32
call_3986 = relay.TupleGetItem(func_1543_call(relay.reshape(const_3987.astype('int32'), [5, 6, 11]), relay.reshape(const_3987.astype('int32'), [5, 6, 11]), relay.reshape(const_3988.astype('float32'), [1274,]), ), 0)
call_3989 = relay.TupleGetItem(func_1548_call(relay.reshape(const_3987.astype('int32'), [5, 6, 11]), relay.reshape(const_3987.astype('int32'), [5, 6, 11]), relay.reshape(const_3988.astype('float32'), [1274,]), ), 0)
output = relay.Tuple([bop_3979,call_3986,const_3987,const_3988,])
output2 = relay.Tuple([bop_3979,call_3989,const_3987,const_3988,])
func_3992 = relay.Function([var_3971,var_3972,], output)
mod['func_3992'] = func_3992
mod = relay.transform.InferType()(mod)
var_3993 = relay.var("var_3993", dtype = "float32", shape = ())#candidate|3993|()|var|float32
var_3994 = relay.var("var_3994", dtype = "float32", shape = (16, 12, 6))#candidate|3994|(16, 12, 6)|var|float32
output = func_3992(var_3993,var_3994,)
func_3995 = relay.Function([var_3993,var_3994,], output)
mutated_mod['func_3995'] = func_3995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3947_call = mod.get_global_var('func_3947')
func_3948_call = mutated_mod.get_global_var('func_3948')
call_4086 = func_3947_call()
call_4087 = func_3947_call()
output = call_4086
output2 = call_4087
func_4101 = relay.Function([], output)
mod['func_4101'] = func_4101
mod = relay.transform.InferType()(mod)
mutated_mod['func_4101'] = func_4101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4101_call = mutated_mod.get_global_var('func_4101')
call_4102 = func_4101_call()
output = call_4102
func_4103 = relay.Function([], output)
mutated_mod['func_4103'] = func_4103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mod.get_global_var('func_2412')
func_2413_call = mutated_mod.get_global_var('func_2413')
call_4110 = func_2412_call()
call_4111 = func_2412_call()
output = call_4110
output2 = call_4111
func_4122 = relay.Function([], output)
mod['func_4122'] = func_4122
mod = relay.transform.InferType()(mod)
output = func_4122()
func_4123 = relay.Function([], output)
mutated_mod['func_4123'] = func_4123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4101_call = mod.get_global_var('func_4101')
func_4103_call = mutated_mod.get_global_var('func_4103')
call_4130 = func_4101_call()
call_4131 = func_4101_call()
output = relay.Tuple([call_4130,])
output2 = relay.Tuple([call_4131,])
func_4139 = relay.Function([], output)
mod['func_4139'] = func_4139
mod = relay.transform.InferType()(mod)
mutated_mod['func_4139'] = func_4139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4139_call = mutated_mod.get_global_var('func_4139')
call_4140 = func_4139_call()
output = call_4140
func_4141 = relay.Function([], output)
mutated_mod['func_4141'] = func_4141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3951_call = mod.get_global_var('func_3951')
func_3953_call = mutated_mod.get_global_var('func_3953')
call_4144 = func_3951_call()
call_4145 = func_3951_call()
output = relay.Tuple([call_4144,])
output2 = relay.Tuple([call_4145,])
func_4164 = relay.Function([], output)
mod['func_4164'] = func_4164
mod = relay.transform.InferType()(mod)
output = func_4164()
func_4165 = relay.Function([], output)
mutated_mod['func_4165'] = func_4165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3951_call = mod.get_global_var('func_3951')
func_3953_call = mutated_mod.get_global_var('func_3953')
call_4178 = func_3951_call()
call_4179 = func_3951_call()
func_807_call = mod.get_global_var('func_807')
func_811_call = mutated_mod.get_global_var('func_811')
var_4184 = relay.var("var_4184", dtype = "uint32", shape = (1890,))#candidate|4184|(1890,)|var|uint32
call_4183 = func_807_call(relay.reshape(var_4184.astype('uint32'), [9, 15, 14]), relay.reshape(var_4184.astype('uint32'), [9, 15, 14]), )
call_4185 = func_807_call(relay.reshape(var_4184.astype('uint32'), [9, 15, 14]), relay.reshape(var_4184.astype('uint32'), [9, 15, 14]), )
func_2412_call = mod.get_global_var('func_2412')
func_2413_call = mutated_mod.get_global_var('func_2413')
call_4194 = func_2412_call()
call_4195 = func_2412_call()
bop_4196 = relay.bitwise_or(call_4194.astype('int32'), relay.reshape(call_4178.astype('int32'), relay.shape_of(call_4194))) # shape=(1, 6, 3)
bop_4199 = relay.bitwise_or(call_4195.astype('int32'), relay.reshape(call_4179.astype('int32'), relay.shape_of(call_4195))) # shape=(1, 6, 3)
func_3884_call = mod.get_global_var('func_3884')
func_3887_call = mutated_mod.get_global_var('func_3887')
const_4217 = relay.const([2.158054,9.343831,8.809429,7.593368,-6.082012,9.143123,7.701977,-8.030740,-1.653312,-7.269479,-1.974038,4.178021,3.971669,-3.552365,-9.316234,-3.682256,9.970869,4.872387,-6.821547,6.483012,7.725273,-9.559857,-7.404695,0.138581,-8.365552,-3.493954,-6.567155,4.506894,4.897255,1.065862,-4.444682,4.375602,9.164723,4.389636,3.779348,5.894208,5.737143,-4.356595,-0.778056,1.635893,9.515670,2.074732,7.693420,9.441810,-1.716639,1.642865,4.847293,2.530251,2.886343,-7.175161,9.129890,-7.865416,6.976076,-7.793988,-0.982716,-5.399174,8.251167,2.197231,-1.765248,2.118594,7.487248,-9.904067,-8.666733,-7.363077,-5.370665,-7.984007,-8.180827,-8.896576,2.716837,6.730343,-0.870848,-0.837539,7.475289,0.693762,-1.684410,-2.918066,0.136711,-4.723280,-9.157543,3.773681,-9.280458,-6.456079,-4.052446,-7.859948,9.228449,5.854034,-9.421585,-4.494065,-9.875129,6.287700,-3.525250,-1.692916,-8.898938,9.447525,8.632249,6.647183,3.274249,-2.727075,3.910425,6.357543,-4.657665,-9.101258,-3.186605,-1.155456,-0.014609,-0.338288,-9.640940,-3.052456,9.627082,7.244892,4.457552,-9.072584,8.439081,-2.471146,-5.778860,3.416944,4.800097,9.098641,-8.627972,-6.258910,0.584119,-9.355965,4.779332,8.802376,-3.353821,-2.279471,6.770811,-1.493786,1.736276,6.732199,3.899907,1.991040,1.558743,-3.345887,-4.314007,-3.588565,4.705556,4.589335,-4.529407,-5.500771,-7.098125,-2.110527,5.880066,-1.110341,0.568493,-4.736976,-5.277834,5.912794,-8.333527,-3.503471,-5.526591,4.494544,4.568657,6.152647,9.330641,-0.065723,-8.310431,0.893302,-0.102184,-2.359968,-3.947240,-4.484241,-7.086719,-3.105752,0.001679,-0.671949,7.253947,-3.158296,-3.386689,-5.924123,1.154783,4.693442,4.816706,4.362215,-8.947154,-5.060968,4.631422,-8.993750,-1.239485,-6.968306,4.067991,-4.724374,-8.431988,0.160908,-4.032059,-8.914732,-5.652910,6.741839,6.793555,6.629478,-9.328663,-6.293657,-6.713083,-5.741654,5.886229,8.115906,2.519568,2.988363,-6.380076,-8.411490,4.292920,-7.559505,1.199186,4.718275,-5.114358,-2.062439,-4.517476,-9.167113,5.311012,-7.562369,-4.811255,5.535058,8.846948,2.059883,5.128110,-4.262140,1.673946,6.784535,-1.846031,8.723908,4.766978,9.758480,-7.628478,2.175669,-4.345503,-2.781252,9.267335,-8.785750,-2.086058,-3.004052,-8.131240,-4.057566,0.784253,-4.360152,5.562222,-3.627768,3.696841,-5.962775,-9.797514,-4.634788,1.632759,2.350766,-6.861723,9.957711,3.191376,9.848271,-5.937924,6.918686,1.754080,2.864790,3.634890,1.841983,-4.399032,-8.249078,3.014144,8.109188,3.595414,2.745532,7.909888,6.308297,-3.318864,-0.804633,-3.572530,-0.695861,5.828209,-6.430696,-0.415913,3.376690,-4.966775,9.798883,-6.105033,-4.532960,5.765504,-0.567366,2.293984,5.796176,-5.486039,-3.689539,-4.710068,-1.671544,4.237652,-6.532193,-8.992242,-1.095875,-5.142860,0.181545,-7.699402,-0.833098], dtype = "float32")#candidate|4217|(288,)|const|float32
call_4216 = relay.TupleGetItem(func_3884_call(relay.reshape(const_4217.astype('float32'), [16, 6, 3])), 0)
call_4218 = relay.TupleGetItem(func_3887_call(relay.reshape(const_4217.astype('float32'), [16, 6, 3])), 0)
bop_4224 = relay.equal(call_4178.astype('bool'), relay.reshape(call_4194.astype('bool'), relay.shape_of(call_4178))) # shape=(1, 6, 3)
bop_4227 = relay.equal(call_4179.astype('bool'), relay.reshape(call_4195.astype('bool'), relay.shape_of(call_4179))) # shape=(1, 6, 3)
const_4228 = relay.const([[[6.563152,-3.692086,-8.186326],[7.399896,8.009025,7.893058],[-0.970483,-7.409263,-1.192103],[-8.344652,0.888514,-8.997169],[-5.483103,-5.970019,-9.395475],[-3.068929,2.850441,1.779759]],[[-3.435841,8.388165,8.944727],[-8.186408,-5.303824,-3.642942],[-2.743499,1.660131,-8.788419],[7.892854,8.069553,-6.302815],[-2.235705,1.019785,5.099642],[1.809474,2.837588,-4.502166]],[[-2.436234,4.933828,3.355560],[6.345691,-3.931144,9.733633],[-7.983705,2.635365,8.747399],[3.855070,7.046260,0.775189],[5.209418,-2.967825,7.348883],[-3.574846,9.245501,6.102361]],[[8.245282,4.261564,1.800671],[-2.540690,1.268559,5.544663],[-7.714405,-4.692185,1.860319],[-4.015916,5.151211,-1.395886],[3.076346,-8.855538,-9.424786],[5.310677,-3.515407,1.553623]],[[-0.926859,9.208739,-1.351376],[-8.128066,-8.893834,-7.792798],[-8.527194,-0.620567,9.107984],[6.418134,5.305024,-3.989708],[8.460967,-5.855408,-4.859424],[0.147199,2.171588,-1.674799]],[[-0.048073,-6.385488,-1.359113],[-5.535226,-7.212721,-4.063275],[1.439621,-6.090341,1.618817],[-4.571552,8.316615,-8.491233],[3.932729,-1.835803,-7.940380],[-1.946535,9.486248,4.688748]],[[0.419480,-8.855638,8.371545],[6.851373,-3.392878,0.873300],[-8.611928,-8.128730,-1.064758],[6.849278,8.608082,6.809394],[3.331782,-7.326767,-7.983712],[-2.594276,5.133298,8.909188]],[[3.405336,-2.034711,9.560289],[6.862575,7.077154,4.414595],[-3.541358,6.508263,-8.821571],[1.077354,-3.061336,-6.918080],[-2.604570,-7.152028,2.624862],[-8.676078,3.272146,9.446138]],[[-7.892545,-6.120743,-3.174703],[-8.400694,1.025979,-3.660821],[-6.133621,6.483022,8.777464],[4.518790,-2.180988,-0.595047],[-6.512702,-7.277868,8.013323],[-3.723925,-7.214245,3.689583]],[[-0.806509,9.030123,-5.994879],[7.466365,5.667761,8.465328],[-6.505636,-4.863452,4.382120],[-9.027175,7.909714,1.811633],[-5.913388,8.908349,-5.070019],[-8.534407,-3.527775,-8.512148]],[[8.325992,5.906503,-2.121846],[-2.724055,7.914183,9.894162],[5.904710,-5.413095,-4.396674],[4.377511,2.588723,8.146794],[5.806843,-9.540832,3.520480],[-8.189208,-9.585230,-8.632450]]], dtype = "float32")#candidate|4228|(11, 6, 3)|const|float32
bop_4229 = relay.less(call_4194.astype('bool'), const_4228.astype('bool')) # shape=(11, 6, 3)
bop_4232 = relay.less(call_4195.astype('bool'), const_4228.astype('bool')) # shape=(11, 6, 3)
func_4122_call = mod.get_global_var('func_4122')
func_4123_call = mutated_mod.get_global_var('func_4123')
call_4234 = func_4122_call()
call_4235 = func_4122_call()
func_4101_call = mod.get_global_var('func_4101')
func_4103_call = mutated_mod.get_global_var('func_4103')
call_4249 = func_4101_call()
call_4250 = func_4101_call()
uop_4252 = relay.cosh(call_4183.astype('float32')) # shape=(9, 15, 14)
uop_4254 = relay.cosh(call_4185.astype('float32')) # shape=(9, 15, 14)
func_2683_call = mod.get_global_var('func_2683')
func_2685_call = mutated_mod.get_global_var('func_2685')
const_4257 = relay.const([-9,-4,-2,10,-4,7,-8,8,-3,5,10,-8,10,1,-1,9,-1,-10,-6,6,-9,-9,-6,-2,2,7,-9,-10,-1,10,7,2,2,3,-10,9,2,6,-5,-6,-8,-10,2,-9,-10,4,10,-7,8,4,7,-9,9,8,8,10,9,-6,-1,3,-7,1,5,-2,8,-2,9,-5,-9,-2,-6,-4,6,7,6,-9,7,10,9,-4,10,-1,7,5,8,-4,4,1,-9,-5,8,-10,7,-8,4,1,-8,-2,10,-1,-7,-5,3,10,6,-9,-1,-1,10,5,3,-7,10,-6,-9,1,3,6,5,10,-3,-6,-9,-5,8,3,5,4,1,6,-8,5,-4,-7,-7,8,7,6,-3,-5,8,4,-9,-9,-10,-10,1,-10,-6,-1,6,-5,-5,1,10,3,-3,3,7,2,-6,-6,6,3,-2,7,6,-3,10,1,9,2,-10,5,9,-5,-10,4,-6,1,1,-10,-7,8,-6,-1,-2,10,-8,-1,2,1,-8,1,-4,-6,8,4,8,5,10,10,9,-7,-4,-3,8,-10,3,-2,4,1,-1,-9,6,2,10,-1,-3,5,9,-4,3,3,7,-2,3,-5,10,-5,8,4,1,-8,-6,-2,2,-1,-3,-1,-10,-3,8,-9,-2,7,-2,-9,-8,7,-1,-8,8,9,2,4,-5,-6,3,-3,10,4,-1,-6,1,5,-4,-4,-10,6,3,7,4,-2,1,-1,-5,4,9,7,3,9,-2,-4,6,-6,7,-8,7,10,-3,-10,8,-4,-3,-7,10,-8,3,-7,-9,9,-6,-10,6,2,3,-8,5,-1,5,-7,-6,-9,4,-9,9,-2,4,10,4,-9,-2,-9,1,7,8,10,6,2,-3,6,8,7,-2,1,-8,10,-9,9,8,5,8,1,-5,8,3,-2,-2,4,5,-7,-8,-5,7,-9,7,-3,1,1,-7,4,2,5,-6,-7,6,5,2,-1,1,-8,-3,-7,4,-10,6,-5,1,-4,8,-9,-5,8,-2,8,8,6,-8,-8,1,-7,4,-7,1,4,-3,4,5,7,3,-5,-3,6,3,6,-2,3,5,2,3,7,-7,4,-5,1,8,10,-8,3,-10,5,1,9,10,-4,-5,9,-2,-6,-5,6,7,-3,2,-6,6,-4,1,-5,-3,6,-7,-4,9,7,-10,-5,9,-2,5,-3,1,-10,-9,7,-1,3,-9,9,8,-2,-3,7,-7,4,7,5,-3,2,9,7,2,9,7,-9,-8,-5,-10,-2,1,10,-3,8,1,9,7,1,-6,-1,10,1,-1,-8,1,9,-6,-2,6,-7,7,-1,2,4,-2,-2,-4,-2,-9,7,10,4,3,-7,3,9,9,-6,10,10,6,-8,-7,7,-9,-8,8,-7,5,1,-9,9,8,1,-7,4,5,4,-10,-7,-3,10,-6,-4,2,-8,6,8,-5,4,10,-3,-7,6,-10,-8,8,6,-6,5,-6,8,-2,-7,-5,-7,8,9,-1,-5,-8,5,3,-1,2,7,-9,-1,1,-8,-9,-3,-8,-4,-9,-9,-4,-4,4,3,1,5,5,5,-1,2,9,-9,-10,-6,-4,8,7,-4,-9,-6,-7,2,-6,7,1,7,9,-7,-1,-7,-5,-2,7,3,2,-8,-10,-2,9,-4,-1,10,-9,8,-7,-4,2,-5,1,-4,-7,2,5,4,3,4,-8,-7,-9,-6,2,1,5,2,3,-9,-10,-8,4,9,-7,-5,-5,-4,7,-3,2,-10,1,5,10,4,4,5,3,7,-4,7,-5,8,-4,1,-6,-5,5,-2,-1,-4,-8,2,2,-3,4,-10,4,-2,-8,4,-6,-10,8,-7,-8,-5,2,10,-9,-2,5,-1,-7,-7,6,8,10,-4,-2,9,-3,-8,4,-9,-1,5], dtype = "uint32")#candidate|4257|(720,)|const|uint32
call_4256 = relay.TupleGetItem(func_2683_call(relay.reshape(const_4257.astype('uint32'), [360, 2])), 2)
call_4258 = relay.TupleGetItem(func_2685_call(relay.reshape(const_4257.astype('uint32'), [360, 2])), 2)
output = relay.Tuple([var_4184,bop_4196,call_4216,const_4217,bop_4224,bop_4229,call_4234,call_4249,uop_4252,call_4256,const_4257,])
output2 = relay.Tuple([var_4184,bop_4199,call_4218,const_4217,bop_4227,bop_4232,call_4235,call_4250,uop_4254,call_4258,const_4257,])
func_4261 = relay.Function([var_4184,], output)
mod['func_4261'] = func_4261
mod = relay.transform.InferType()(mod)
mutated_mod['func_4261'] = func_4261
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4262 = relay.var("var_4262", dtype = "uint32", shape = (1890,))#candidate|4262|(1890,)|var|uint32
func_4261_call = mutated_mod.get_global_var('func_4261')
call_4263 = func_4261_call(var_4262)
output = call_4263
func_4264 = relay.Function([var_4262], output)
mutated_mod['func_4264'] = func_4264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4101_call = mod.get_global_var('func_4101')
func_4103_call = mutated_mod.get_global_var('func_4103')
call_4334 = func_4101_call()
call_4335 = func_4101_call()
output = relay.Tuple([call_4334,])
output2 = relay.Tuple([call_4335,])
func_4346 = relay.Function([], output)
mod['func_4346'] = func_4346
mod = relay.transform.InferType()(mod)
output = func_4346()
func_4347 = relay.Function([], output)
mutated_mod['func_4347'] = func_4347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4356 = relay.var("var_4356", dtype = "float32", shape = (11, 12, 2))#candidate|4356|(11, 12, 2)|var|float32
uop_4357 = relay.erf(var_4356.astype('float32')) # shape=(11, 12, 2)
var_4376 = relay.var("var_4376", dtype = "float32", shape = (11, 12, 2))#candidate|4376|(11, 12, 2)|var|float32
bop_4377 = relay.power(uop_4357.astype('float32'), relay.reshape(var_4376.astype('float32'), relay.shape_of(uop_4357))) # shape=(11, 12, 2)
uop_4380 = relay.sqrt(var_4356.astype('float32')) # shape=(11, 12, 2)
uop_4383 = relay.sigmoid(bop_4377.astype('float64')) # shape=(11, 12, 2)
output = relay.Tuple([uop_4380,uop_4383,])
output2 = relay.Tuple([uop_4380,uop_4383,])
func_4386 = relay.Function([var_4356,var_4376,], output)
mod['func_4386'] = func_4386
mod = relay.transform.InferType()(mod)
var_4387 = relay.var("var_4387", dtype = "float32", shape = (11, 12, 2))#candidate|4387|(11, 12, 2)|var|float32
var_4388 = relay.var("var_4388", dtype = "float32", shape = (11, 12, 2))#candidate|4388|(11, 12, 2)|var|float32
output = func_4386(var_4387,var_4388,)
func_4389 = relay.Function([var_4387,var_4388,], output)
mutated_mod['func_4389'] = func_4389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3397_call = mod.get_global_var('func_3397')
func_3398_call = mutated_mod.get_global_var('func_3398')
call_4406 = func_3397_call()
call_4407 = func_3397_call()
uop_4410 = relay.asinh(call_4406.astype('float64')) # shape=(1, 6, 3)
uop_4412 = relay.asinh(call_4407.astype('float64')) # shape=(1, 6, 3)
output = uop_4410
output2 = uop_4412
func_4420 = relay.Function([], output)
mod['func_4420'] = func_4420
mod = relay.transform.InferType()(mod)
mutated_mod['func_4420'] = func_4420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4420_call = mutated_mod.get_global_var('func_4420')
call_4421 = func_4420_call()
output = call_4421
func_4422 = relay.Function([], output)
mutated_mod['func_4422'] = func_4422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4346_call = mod.get_global_var('func_4346')
func_4347_call = mutated_mod.get_global_var('func_4347')
call_4434 = relay.TupleGetItem(func_4346_call(), 0)
call_4435 = relay.TupleGetItem(func_4347_call(), 0)
output = relay.Tuple([call_4434,])
output2 = relay.Tuple([call_4435,])
func_4453 = relay.Function([], output)
mod['func_4453'] = func_4453
mod = relay.transform.InferType()(mod)
mutated_mod['func_4453'] = func_4453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4453_call = mutated_mod.get_global_var('func_4453')
call_4454 = func_4453_call()
output = call_4454
func_4455 = relay.Function([], output)
mutated_mod['func_4455'] = func_4455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4453_call = mod.get_global_var('func_4453')
func_4455_call = mutated_mod.get_global_var('func_4455')
call_4487 = relay.TupleGetItem(func_4453_call(), 0)
call_4488 = relay.TupleGetItem(func_4455_call(), 0)
func_2420_call = mod.get_global_var('func_2420')
func_2424_call = mutated_mod.get_global_var('func_2424')
const_4490 = relay.const([2,6,-4,-3,6,7,5,-3,4,-6,7,-10,1,4,9,-9,-9,-8,3,-3,-5,2,-2,2,-10,-3,-2,-8,5,7,7,-6,-2,-9,-6,-5,5,-2,-6,-2,-3,-3,-8,-10,-3,6,4,6,6,4,-8,-2,-8,-9,-9,1,6,8,5,8,4,7,5,5,-9,-5,10,9,2,-4,-8,4,7,9,-8,9,10,2,-9,9,8,4,-1,-5,10,-5,-4,-2,1,-4,-8,-2,1,6,-3,-10,8,8,-7,-4,4,-7,10,-9,3,-1,6,-9,-9,7,-9,4,10,-9,-9,-8,-2,-1,-4,-1,-4,8,-8,-7,4,-1,-2,2,-9,3,-2,10,5,6,2,6,2,7,5,-6,-1,-1,2,-7,4,8,10,-10,9,-4,-3,-6,6,-4,-9,-9,-9,-3,6,1,-9,-6,9,4,1,-9,-8,-3,10,5,-10,-2,-5,-2,-5,8,4,-5,-1,-10,-6,-9,6,9,9,-9,-8,-10,6,-3,4,6,-7,-10,-1,1,1,-2,-1,-7,6,-1,-9,-7,-2,-7,-4,-6,-6,-7,9,6,7,-1,10,-9,5,1,3,-8,-10,3,10,5,6,-4,-10,-6,-8,-5,2,5,6,-1,7,5,-4,1,8,9,8,8,2,4,9,-8,-5,-10,10,1,-1,-5,7,-9,4,10,1,-1,-1,3,-4,3,-4,10,6,-1,10,-4,-6,3,-2,3,10,-6,-8,-3,2,2,10,-1,-3,-3,-10,1,9,5,8,5,-1,9,4,10,7,-3,3,-3,-8,-3,-5,-6,10,-8,-9,-6,-7,-10,8,-6,-3,4,-5,-6,7,-3,4,9,-3,4,-1,2,9,7,-1,4,6,-2,7,5,-5,-6,-10,-5,-1,4,-1,-8,-8,8,9,-3,-2,-7,-1,4,-3,-7,5,-5,-4,8,5,6,2,3,7,-8,3,1,8,-1,6,-3,3,9,6,3,-3,7,6,-9,-7,4,-10,3,-10,8,-4,9,10,-5,7,-10,-6,8,-8,-4,3,7,5,-1,6,-3,2,-8,-1,-9,-8,3,-7,-7], dtype = "int64")#candidate|4490|(400,)|const|int64
call_4489 = func_2420_call(relay.reshape(const_4490.astype('int64'), [16, 5, 5]), relay.reshape(const_4490.astype('int64'), [16, 5, 5]), )
call_4491 = func_2420_call(relay.reshape(const_4490.astype('int64'), [16, 5, 5]), relay.reshape(const_4490.astype('int64'), [16, 5, 5]), )
func_3315_call = mod.get_global_var('func_3315')
func_3316_call = mutated_mod.get_global_var('func_3316')
call_4494 = relay.TupleGetItem(func_3315_call(), 0)
call_4495 = relay.TupleGetItem(func_3316_call(), 0)
func_3471_call = mod.get_global_var('func_3471')
func_3474_call = mutated_mod.get_global_var('func_3474')
const_4502 = relay.const([[-6,-10],[5,8],[4,2],[10,-3],[-5,8],[-4,-4],[6,-6],[3,-6],[2,3],[-7,1],[9,-9],[9,-5],[-10,8],[3,8],[7,10],[8,10],[3,-7],[-4,-4],[-4,-3],[-4,-7],[3,-10],[-7,-6],[4,4],[-3,10],[-8,6],[5,-5],[2,-2],[-6,3],[-4,6],[1,4],[7,7],[-4,5],[4,-4],[-1,8],[8,-10],[-8,-6],[5,-4],[3,2],[-7,9],[6,1],[-5,-8],[5,10],[7,10],[4,-10],[7,5],[-1,9],[8,7],[-3,-3],[-5,-5],[-1,4],[8,5],[-9,8],[6,-5],[2,5],[3,3],[2,6],[-1,8],[7,-9],[-5,4],[-7,7],[8,10],[-5,2],[-7,-5],[3,6],[2,5],[5,6],[-8,3],[5,-9],[-3,4],[4,-7],[-1,9],[4,9],[1,-7],[9,8],[4,-3],[3,-3],[-10,4],[3,6],[4,9],[5,3],[-5,2],[-4,1],[2,-6],[-7,9],[3,3],[7,-1],[9,10],[-9,9],[5,-8],[-10,4],[7,6],[8,1],[-1,9],[-6,-10],[10,10],[-2,5],[-8,4],[-4,-1],[10,-4],[3,10],[-2,3],[-9,4],[10,1],[2,-9],[9,-2],[6,5],[-1,4],[4,9],[3,5],[-4,1],[2,-7],[-8,-7],[-4,1],[2,-3],[4,-6],[-1,6],[6,8],[-10,-3],[-3,-9],[9,-7],[6,-10],[-1,-3],[2,7],[6,-1],[-5,-2],[8,-9],[8,-1],[5,9],[-3,4],[-3,2],[6,-3],[3,7]], dtype = "uint64")#candidate|4502|(132, 2)|const|uint64
call_4501 = relay.TupleGetItem(func_3471_call(relay.reshape(const_4502.astype('uint64'), [66, 4])), 1)
call_4503 = relay.TupleGetItem(func_3474_call(relay.reshape(const_4502.astype('uint64'), [66, 4])), 1)
func_4453_call = mod.get_global_var('func_4453')
func_4455_call = mutated_mod.get_global_var('func_4455')
call_4504 = relay.TupleGetItem(func_4453_call(), 0)
call_4505 = relay.TupleGetItem(func_4455_call(), 0)
func_4139_call = mod.get_global_var('func_4139')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_4516 = relay.TupleGetItem(func_4139_call(), 0)
call_4517 = relay.TupleGetItem(func_4141_call(), 0)
output = relay.Tuple([call_4487,call_4489,const_4490,call_4494,call_4501,const_4502,call_4504,call_4516,])
output2 = relay.Tuple([call_4488,call_4491,const_4490,call_4495,call_4503,const_4502,call_4505,call_4517,])
func_4522 = relay.Function([], output)
mod['func_4522'] = func_4522
mod = relay.transform.InferType()(mod)
mutated_mod['func_4522'] = func_4522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4522_call = mutated_mod.get_global_var('func_4522')
call_4523 = func_4522_call()
output = call_4523
func_4524 = relay.Function([], output)
mutated_mod['func_4524'] = func_4524
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4533 = relay.var("var_4533", dtype = "float64", shape = (16, 3, 15))#candidate|4533|(16, 3, 15)|var|float64
uop_4534 = relay.asinh(var_4533.astype('float64')) # shape=(16, 3, 15)
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
var_4537 = relay.var("var_4537", dtype = "uint64", shape = (360,))#candidate|4537|(360,)|var|uint64
call_4536 = relay.TupleGetItem(func_1022_call(relay.reshape(var_4537.astype('uint64'), [12, 10, 3])), 0)
call_4538 = relay.TupleGetItem(func_1024_call(relay.reshape(var_4537.astype('uint64'), [12, 10, 3])), 0)
output = relay.Tuple([uop_4534,call_4536,var_4537,])
output2 = relay.Tuple([uop_4534,call_4538,var_4537,])
func_4542 = relay.Function([var_4533,var_4537,], output)
mod['func_4542'] = func_4542
mod = relay.transform.InferType()(mod)
mutated_mod['func_4542'] = func_4542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4542_call = mutated_mod.get_global_var('func_4542')
var_4544 = relay.var("var_4544", dtype = "float64", shape = (16, 3, 15))#candidate|4544|(16, 3, 15)|var|float64
var_4545 = relay.var("var_4545", dtype = "uint64", shape = (360,))#candidate|4545|(360,)|var|uint64
call_4543 = func_4542_call(var_4544,var_4545,)
output = call_4543
func_4546 = relay.Function([var_4544,var_4545,], output)
mutated_mod['func_4546'] = func_4546
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4589 = relay.var("var_4589", dtype = "float64", shape = (4, 8, 5))#candidate|4589|(4, 8, 5)|var|float64
uop_4590 = relay.log(var_4589.astype('float64')) # shape=(4, 8, 5)
uop_4597 = relay.log2(uop_4590.astype('float64')) # shape=(4, 8, 5)
func_4164_call = mod.get_global_var('func_4164')
func_4165_call = mutated_mod.get_global_var('func_4165')
call_4600 = relay.TupleGetItem(func_4164_call(), 0)
call_4601 = relay.TupleGetItem(func_4165_call(), 0)
func_2773_call = mod.get_global_var('func_2773')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_4604 = func_2773_call()
call_4605 = func_2773_call()
output = relay.Tuple([uop_4597,call_4600,call_4604,])
output2 = relay.Tuple([uop_4597,call_4601,call_4605,])
func_4606 = relay.Function([var_4589,], output)
mod['func_4606'] = func_4606
mod = relay.transform.InferType()(mod)
var_4607 = relay.var("var_4607", dtype = "float64", shape = (4, 8, 5))#candidate|4607|(4, 8, 5)|var|float64
output = func_4606(var_4607)
func_4608 = relay.Function([var_4607], output)
mutated_mod['func_4608'] = func_4608
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4642 = relay.var("var_4642", dtype = "float64", shape = (5, 11, 11))#candidate|4642|(5, 11, 11)|var|float64
uop_4643 = relay.asinh(var_4642.astype('float64')) # shape=(5, 11, 11)
var_4648 = relay.var("var_4648", dtype = "float64", shape = (5, 11, 11))#candidate|4648|(5, 11, 11)|var|float64
bop_4649 = relay.less(uop_4643.astype('bool'), relay.reshape(var_4648.astype('bool'), relay.shape_of(uop_4643))) # shape=(5, 11, 11)
output = relay.Tuple([bop_4649,])
output2 = relay.Tuple([bop_4649,])
func_4652 = relay.Function([var_4642,var_4648,], output)
mod['func_4652'] = func_4652
mod = relay.transform.InferType()(mod)
mutated_mod['func_4652'] = func_4652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4652_call = mutated_mod.get_global_var('func_4652')
var_4654 = relay.var("var_4654", dtype = "float64", shape = (5, 11, 11))#candidate|4654|(5, 11, 11)|var|float64
var_4655 = relay.var("var_4655", dtype = "float64", shape = (5, 11, 11))#candidate|4655|(5, 11, 11)|var|float64
call_4653 = func_4652_call(var_4654,var_4655,)
output = call_4653
func_4656 = relay.Function([var_4654,var_4655,], output)
mutated_mod['func_4656'] = func_4656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4101_call = mod.get_global_var('func_4101')
func_4103_call = mutated_mod.get_global_var('func_4103')
call_4658 = func_4101_call()
call_4659 = func_4101_call()
output = call_4658
output2 = call_4659
func_4671 = relay.Function([], output)
mod['func_4671'] = func_4671
mod = relay.transform.InferType()(mod)
output = func_4671()
func_4672 = relay.Function([], output)
mutated_mod['func_4672'] = func_4672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4453_call = mod.get_global_var('func_4453')
func_4455_call = mutated_mod.get_global_var('func_4455')
call_4703 = relay.TupleGetItem(func_4453_call(), 0)
call_4704 = relay.TupleGetItem(func_4455_call(), 0)
output = relay.Tuple([call_4703,])
output2 = relay.Tuple([call_4704,])
func_4719 = relay.Function([], output)
mod['func_4719'] = func_4719
mod = relay.transform.InferType()(mod)
mutated_mod['func_4719'] = func_4719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4719_call = mutated_mod.get_global_var('func_4719')
call_4720 = func_4719_call()
output = call_4720
func_4721 = relay.Function([], output)
mutated_mod['func_4721'] = func_4721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4139_call = mod.get_global_var('func_4139')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_4727 = relay.TupleGetItem(func_4139_call(), 0)
call_4728 = relay.TupleGetItem(func_4141_call(), 0)
func_2229_call = mod.get_global_var('func_2229')
func_2233_call = mutated_mod.get_global_var('func_2233')
const_4730 = relay.const([2,-2,-3,10,6,7,-7,-1,-4,8,4,3,-9,-4,7,-10,-5,5,9,-7,-5,3,3,-8,2,4,-5,-4,5,1,-3,-2,-7,-8,4,-1,4,-2,-8,3,-6,8,5,8,-9,-3,-1,-3,-1,5,8,6,-10,8,-9,-9,-9,6,6,5,2,8,-2,2,-1,1,-2,1,3,9,-10,9,-5,5,-1,-7,-8,-6,7,4,-6,-9,-9,-10,2,6,-8,-3,-2,-4,-9,-5,7,5,-1,4,-1,-6,3,-5,-5,-9,6,6,8,-10,-5,4,-6,8,8,-7,-4,9,8,4,-5,-6,5,-10,6,-2,4,-2,4,10,-1,9,9,-5,-2,-10,-2,-9,-2,1,-8,8,-8,-4,2,4,-10,-9,3,-6,2,3,4,-2,10,6,-6,-9,9,-7,-7,6,-4,-4,10,-1,8,8,-3,-10,-2,10,-5,2,-4,4,-10,9,-7,8,-5,-10,2,-4,-6,9,-3,6,9,1,-9,-5,7,-2,8,-2,10,3,7,6,-4,-1,-3,6,-7,7,5,-4,7,7,-7,-6,8,-8,9,-8,10,-1,-8,-6,5,2,7,-2,-3,2,7,-4,9,2,5,-10,-9,7,7,6,-9,10,6,4,1,9,4,-3,-7,-1,-4,9,-2,-5,-2,-9,-9,10,-2,-5,10,9,9,-7,8,1,8,5,8,9,1,2,-8,3,7,-1,4,-1,5,-9,3,-2,10,1,9,8,7,-8,-4,-4,-3,-10,-8,-7,-6,-3,8,1,7,4,1,6,3,6,-8,-8,7,5,-8,10,1,-4,1,7,-9,-3,-2,-10,-4,-2,-9,3,-10,-3,3,2,-7,4,-2,-5,1,-3,9,-10,2,-7,-4,-6,1,3,-5,1,-9,-9,8,-4,-3,4,2,7,7,4,-6,-6,-4,-4,-1,-10,-2,5,-4,-8,8,9,5,-4,9,4,10,4,-10,-2,3,-3,-2,2,-9,-3,2,7,-9,10,10,-5,7,-6,-8,-7,-2,-6,3,10,-8,-9,6,-10,10,3,5,2,-7,-8,-9,-8,9,5,3,4,-10,-4,10,9,3,9,10,-1,-10,-6,5,-1,-9,6,4,5,-4,10,4,-3,-3,-8,-4,2,7,-6,-3,9,-5,-5,-7,-5,-1,5,6,6,-10,2,3,-1,-3,5,4,-7,-2,-10,-3,10,-9,1,4,-3,-2,-2,1,5,10,8,-5,3,-7,8,7,4,-4,-1,2,5,-1,7,10,-5,-4,-4,-10,-8,-3,5,-6,-8,-1,1,7,9,4,-1,10,5,-9,-4,-10,-3,1,-3,-6,9,9,3,7,3,8,6,-10,-1,-3,-9,7,6,-2,5,7,5,4,-4,-2,4,3,-7,4,3,2,8,5,-7,2,-5,6,7,-10,2,-9,9,10,-6,-5,-10,2,6,2,4,-5,-5,7,-10,-4,-8,-3,-7,-4,-5,-4,5,5,-1,7,2,-4,-1,-8,9,-5,5,3,-9,4,7,-9,4,-6,-10,2,-2,-9,-7,-6,-7,3,-9,3,-5,-1,7,-7,-5,-7,7,-9,6,-4,2,-9,-10,-2,-9,6,4,-8,-9,-1,9,9,9,-5,-5,10,-10,10,-3,9,-7,-8,10,1,3,4,-2,-8,-3,6,3,-7,6,10,-10,-1,-4,8,-7,5,-1,-9,-2,-3,-9,2,8,-2,-9,-4,-3,-5,-4,-1,10,-10,-5,-5,6,-1,-9,-7,-4,-1,-5,-3,-10,5,9,-6,2,-1,2,3,4,-5,8,-9,-4,9,-5,-8,-9,10,1,-9,9,1,4,1,1,-2,-9,5,-3,-5,-5,5,7,3,1,-2,-10,2,-10,-5,-1,10,-9,-5,9,3,4,9,-3,-1,2,5,-10,-9,1,9,-8,6,-6,-10,-3,-9,10,8,8], dtype = "uint32")#candidate|4730|(720,)|const|uint32
call_4729 = relay.TupleGetItem(func_2229_call(relay.reshape(const_4730.astype('uint32'), [8, 10, 9]), relay.reshape(const_4730.astype('uint32'), [8, 10, 9]), ), 1)
call_4731 = relay.TupleGetItem(func_2233_call(relay.reshape(const_4730.astype('uint32'), [8, 10, 9]), relay.reshape(const_4730.astype('uint32'), [8, 10, 9]), ), 1)
func_3471_call = mod.get_global_var('func_3471')
func_3474_call = mutated_mod.get_global_var('func_3474')
var_4739 = relay.var("var_4739", dtype = "uint64", shape = (264,))#candidate|4739|(264,)|var|uint64
call_4738 = relay.TupleGetItem(func_3471_call(relay.reshape(var_4739.astype('uint64'), [66, 4])), 0)
call_4740 = relay.TupleGetItem(func_3474_call(relay.reshape(var_4739.astype('uint64'), [66, 4])), 0)
func_1543_call = mod.get_global_var('func_1543')
func_1548_call = mutated_mod.get_global_var('func_1548')
var_4742 = relay.var("var_4742", dtype = "int32", shape = (330,))#candidate|4742|(330,)|var|int32
var_4743 = relay.var("var_4743", dtype = "float32", shape = (1274,))#candidate|4743|(1274,)|var|float32
call_4741 = relay.TupleGetItem(func_1543_call(relay.reshape(var_4742.astype('int32'), [5, 6, 11]), relay.reshape(var_4742.astype('int32'), [5, 6, 11]), relay.reshape(var_4743.astype('float32'), [1274,]), ), 0)
call_4744 = relay.TupleGetItem(func_1548_call(relay.reshape(var_4742.astype('int32'), [5, 6, 11]), relay.reshape(var_4742.astype('int32'), [5, 6, 11]), relay.reshape(var_4743.astype('float32'), [1274,]), ), 0)
func_807_call = mod.get_global_var('func_807')
func_811_call = mutated_mod.get_global_var('func_811')
const_4746 = relay.const([4,-1,-9,-5,9,-2,10,-8,3,7,3,-1,-7,-4,-6,3,6,-4,9,9,-9,-1,-10,-7,8,-1,4,-1,-10,-9,-7,-6,-8,-9,10,-3,10,-9,4,5,10,10,-9,4,8,-4,6,8,-10,1,9,-10,-1,-1,-3,-4,4,6,8,3,-3,-1,-6,-5,7,8,-1,7,5,6,6,-2,7,-4,-8,-1,3,-10,-10,-7,10,-5,4,-4,1,9,-1,8,7,-2,-10,-5,-2,3,-9,-1,8,1,-9,2,-6,-7,-10,-6,-8,5,1,2,7,7,6,7,7,7,-7,-8,-8,2,2,8,-8,10,2,-5,7,-5,2,-8,-3,7,-4,3,-9,-1,-4,-3,-9,-10,-6,10,-6,8,-8,-9,1,-1,8,-6,-10,2,-5,4,1,-5,-10,-10,-1,-6,-7,1,8,3,-7,-7,-8,-1,-5,7,3,-2,-6,-1,3,5,2,-7,10,-8,-1,-6,-5,9,5,5,7,-1,8,-9,9,10,-2,4,7,10,9,4,-6,4,-9,9,4,1,4,-4,6,4,1,1,-10,-5,-1,-4,3,8,7,-10,-9,-7,-10,6,7,7,8,7,3,10,2,-10,-2,-9,-8,-3,9,-10,1,7,5,-5,4,-4,3,-10,8,9,10,10,-6,-7,-3,6,-2,-9,8,2,5,8,8,4,-8,5,-3,-8,-9,6,3,-3,6,1,-7,8,9,-1,-2,2,-8,-7,-3,9,-1,2,-8,8,1,10,4,-2,-3,-9,-10,6,7,8,-10,2,6,5,2,-8,5,-3,-5,4,-9,-3,-6,-6,2,-5,-5,-4,-2,4,4,-7,7,10,6,-10,-8,6,1,7,10,-6,8,5,-2,-3,9,5,-3,-8,2,-6,10,-2,-3,-4,10,7,3,7,-1,2,-4,7,-6,6,4,6,-1,-7,-9,7,-5,7,-8,-3,-7,-8,2,8,-2,-5,6,2,-10,-2,-10,-8,7,10,2,-4,-8,1,10,9,-6,10,-6,7,-9,-6,-2,-3,2,4,-9,-2,-3,-9,4,6,-2,10,-7,5,10,5,8,10,-1,3,-3,9,9,8,7,1,-10,-9,-10,5,8,1,-9,-7,5,2,-4,-3,-8,6,7,-7,10,6,-2,1,2,-7,5,3,5,-8,-8,-4,4,-4,-7,9,-6,-7,-7,-8,2,-2,-1,-5,-2,-7,-5,-9,-9,9,-1,-3,-5,-3,9,-1,-9,8,-2,10,5,6,-8,-9,5,3,8,3,6,-6,-9,6,2,2,6,-7,9,2,-8,4,-1,-9,1,-2,10,-2,7,-9,-1,-2,-4,9,-4,-9,-2,-6,-10,-3,9,-7,-5,9,8,-10,10,-7,3,-6,-7,-9,-9,-3,2,-9,-5,-9,9,2,-8,6,6,-10,9,6,-4,6,-10,2,9,2,-2,-2,-10,8,-7,-4,8,-2,4,5,-4,1,2,-5,-9,-2,-9,1,1,7,-2,2,7,-10,-3,10,8,9,-7,10,1,-6,-8,-10,-4,8,-8,-9,4,7,-4,3,10,-1,-8,4,5,-2,7,-4,8,1,2,-4,-9,2,-10,7,-8,-7,-9,10,1,9,-5,-10,-4,-1,-1,3,-8,5,-1,-7,1,7,-7,4,-10,-7,-7,-8,-8,-7,5,-8,4,-10,6,-4,-3,6,2,9,4,-5,-3,-2,-5,7,-7,-3,-10,6,2,2,-4,7,-10,-8,-2,-5,-7,3,6,-1,5,-5,-9,-1,-2,-6,1,2,10,6,-4,-5,8,2,8,-8,-9,9,6,9,-5,6,-8,7,-10,-10,-6,5,2,9,-1,4,1,-8,-5,7,-1,4,-3,7,-6,8,-1,5,10,-5,2,-1,-5,2,-7,8,3,-7,-4,2,1,-3,2,-8,-1,-3,4,-8,4,-9,-2,-7,10,3,-8,6,-6,-4,7,1,6,-3,-8,9,4,3,6,10,3,2,2,-3,-8,-7,8,5,9,-2,2,9,3,9,-1,5,-4,-5,4,-5,4,9,7,4,3,-3,1,-8,-3,2,-8,7,-4,8,-2,-10,4,-8,3,-7,2,-1,3,7,-6,1,8,6,2,-9,9,-1,-1,2,-3,-2,2,-7,-3,-4,-5,-5,-2,-6,8,-9,7,8,10,-3,2,9,-1,10,3,4,-8,5,-3,2,-6,-8,10,-2,9,-5,-3,6,3,7,-9,-7,2,-5,-1,-8,-8,10,6,10,7,6,-2,-3,8,2,-3,-4,-9,3,6,6,10,3,10,-9,1,-9,8,9,-4,-3,9,3,6,9,7,-7,-3,-3,8,-10,-7,-1,2,3,10,-4,-5,7,5,5,-3,-9,5,-9,-3,-1,7,9,3,-5,10,-3,6,-8,8,-3,8,-9,-5,7,9,-10,3,8,-3,-10,-4,-10,5,-3,5,-5,-9,7,5,4,5,2,5,-5,-3,-1,-10,-9,-1,9,8,9,10,-3,-4,-1,-1,9,3,4,9,-4,6,-5,4,3,1,9,-1,-8,-9,6,-2,-6,6,-2,5,7,7,-6,-7,-1,2,2,2,8,9,-3,-8,-9,-9,3,-4,5,4,2,-2,-10,5,-8,1,10,2,4,-2,-8,3,7,2,9,-3,7,-8,-10,10,1,5,-5,7,-9,-4,2,-6,5,10,4,-6,9,-10,6,4,-3,-1,6,-8,8,1,7,10,-9,-5,6,-4,5,1,-3,-1,5,-3,-1,-7,-2,3,-10,-3,-5,-2,2,-3,9,10,-10,8,-2,-8,3,6,-6,9,1,-4,2,7,-1,3,-6,-4,2,4,3,9,-7,-3,3,10,-6,8,2,2,-6,3,-5,-10,9,5,4,-9,-8,-6,6,4,-2,-10,8,8,-6,-7,10,-10,-9,-2,-8,6,3,8,9,1,-4,8,2,9,-8,9,-4,-8,3,-10,1,8,9,3,-7,1,-5,5,-4,-5,1,-2,-2,-1,-10,-7,-6,-5,10,5,4,9,3,-9,8,-1,10,5,-4,9,9,7,9,-10,-1,6,-1,9,7,-2,5,-6,-7,-7,9,-8,-1,4,6,1,-1,7,10,-5,-5,3,-10,-5,4,-9,9,3,-2,-10,-3,8,-5,-5,10,-3,-6,-6,-7,-3,-4,-4,-2,1,-4,-10,1,10,-4,3,4,10,-4,6,9,4,6,4,-7,-9,7,9,-9,6,-5,-7,6,-8,-6,-4,6,6,-10,-9,7,-7,9,-2,6,-4,-6,-7,-10,3,-1,-9,-8,8,-9,-2,-5,1,-8,2,1,-2,-7,-1,6,-3,2,-4,8,8,-1,4,-3,9,7,3,9,5,6,5,10,1,-9,-4,-8,-4,5,6,2,9,-9,7,10,8,-8,2,-10,-3,9,-7,2,-8,9,6,1,1,10,10,10,7,-10,9,3,10,-1,-1,-8,3,4,9,7,-5,-7,-6,-2,4,-6,-3,-5,1,10,1,10,7,3,9,-7,-4,9,9,7,-3,-8,-1,1,-1,3,-1,5,-9,4,-6,-2,3,-4,-1,10,5,-4,1,8,8,-3,8,-5,-4,-5,-1,-5,-6,-1,-4,-5,-6,-5,4,-8,-7,-1,7,-2,-8,5,3,4,-1,-10,-3,-3,-6,8,2,-4,5,3,-3,4,1,-9,-1,6,9,6,3,-2,8,8,-4,-6,-8,-2,4,-10,-5,-9,-5,8,-3,5,6,4,7,-3,-4,1,-9,-1,-9,8,-4,-10,-4,-1,5,-4,5,-4,-9,3,-7,5,7,9,-9,-8,3,-9,6,-7,-8,-1,-10,3,-5,5,1,8,-6,-2,3,5,9,5,4,8,5,-4,6,4,-4,-3,-9,-4,9,7,7,-8,-5,-4,4,-10,-1,4,2,1,9,4,7,2,-4,-8,10,-9,-8,6,3,3,-2,5,4,-1,-2,-10,3,-4,10,7,-7,-9,-9,9,10,-10,-8,6,9,-7,-2,-9,-1,-1,-9,3,7,3,6,10,5,-8,-2,-8,-6,3,2,-5,9,3,4,-3,9,-7,-9,1,-6,8,-7,-3,1,-1,8,-5,-9,4,-6,6,-5,10,-1,-8,2,-9,4,10,-5,-8,4,-1,-4,8,-4,-5,9,-2,6,9,8,7,-7,-7,7,-7,-1,-5,7,-6,10,-9,7,-1,-1,-3,8,1,4,-2,-5,3,9,-2,-1,-7,-10,-2,-6,-1,5,8,-3,-3,-8,9,3,-1,10,-9,2,4,2,8,-2,9,-7,3,5,-1,8,-8,2,3,1,-4,10,4,7,2,-4,-7,5,1,5,-4,-1,-3,-2,-8,-10,7,-2,2,4,1,4,-9,9,10,1,6,-8,9,-5,4,-9,5,-1,-3,2,3,1,4,1,5,-2,5,9,-10,9,2,-3,1,6,9,5,4,3,9,4,7,2,5,-6,-8,7,4,8,5,9,-4,7,4,3,-7,5,4,6,1,-2,-8,2,2,9,-6,3,-5,-5,4,2,9,-3,-7,10,-2,8,5,6,-9,-5,5,6,-10,-9,-1,6,-8,-2,-10,2,7,4,9,-9,6,5,2,9,2,-8,1,-2,-3,-4,9,8,4,-7,-3,1,-10,9,6,4,10,-1,-6,-9,-9,5,-9,-3,-5,5,-7,-7,5,-9,-8,10,-4,8,-6,-2,-10,-3,8,-1,6,-2,6,-10,-9,-3,1,-4,4,7,-9,-7,6,7,5,8,5,6,3,-2,4,-9,9,-2,-5,3,9,-4,-9,10,10,7,2,-9,-3,7,-8,-4,8,-10,-6,9,-4,-2,-4,8,2,1,3,7,5,-3,8,10,5,1,4,9,-2,2,5,2,-5,9,7,2,-2,4,2,8,-5,-1,10,8,10,2,10,-3,10,-3,-10,8,-1,3,-8,3,3,-4,-3,-7,-4,10,-4,7,7,-1,-6,-10,-1,2,-6,-5,-6,-2,-3,4,9,-9,5,6,-7,-10,4,-10,2,6,-7,-7,-2,-4,9,4,9,10,1,-7,-3,-3,-6,-3,5,6,-2,4,1,3,-3], dtype = "uint32")#candidate|4746|(1890,)|const|uint32
call_4745 = func_807_call(relay.reshape(const_4746.astype('uint32'), [9, 15, 14]), relay.reshape(const_4746.astype('uint32'), [9, 15, 14]), )
call_4747 = func_807_call(relay.reshape(const_4746.astype('uint32'), [9, 15, 14]), relay.reshape(const_4746.astype('uint32'), [9, 15, 14]), )
output = relay.Tuple([call_4727,call_4729,const_4730,call_4738,var_4739,call_4741,var_4742,var_4743,call_4745,const_4746,])
output2 = relay.Tuple([call_4728,call_4731,const_4730,call_4740,var_4739,call_4744,var_4742,var_4743,call_4747,const_4746,])
func_4748 = relay.Function([var_4739,var_4742,var_4743,], output)
mod['func_4748'] = func_4748
mod = relay.transform.InferType()(mod)
var_4749 = relay.var("var_4749", dtype = "uint64", shape = (264,))#candidate|4749|(264,)|var|uint64
var_4750 = relay.var("var_4750", dtype = "int32", shape = (330,))#candidate|4750|(330,)|var|int32
var_4751 = relay.var("var_4751", dtype = "float32", shape = (1274,))#candidate|4751|(1274,)|var|float32
output = func_4748(var_4749,var_4750,var_4751,)
func_4752 = relay.Function([var_4749,var_4750,var_4751,], output)
mutated_mod['func_4752'] = func_4752
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4763 = relay.const([[[0.483805,7.931221,4.471589,4.370541],[9.272481,9.163588,2.273661,-1.062603]],[[8.588806,-6.799798,-3.829249,-8.721754],[6.981429,9.205331,6.577827,8.139540]],[[-4.708081,1.161312,6.808115,3.994259],[-3.596210,-0.852593,4.777527,2.177969]],[[7.397431,-6.893086,9.200523,5.096065],[-4.465966,-6.284738,-4.987274,-4.892002]],[[-4.272359,-2.430479,-5.179804,2.821717],[-7.565235,-7.311014,-4.806537,-4.256375]],[[-1.970103,9.184048,9.293447,-3.212994],[7.309082,2.957113,8.259189,-8.234616]],[[4.312866,2.416827,-3.364943,-2.217255],[-4.641174,2.388037,4.427551,-8.825611]]], dtype = "float32")#candidate|4763|(7, 2, 4)|const|float32
var_4764 = relay.var("var_4764", dtype = "float32", shape = (7, 2, 4))#candidate|4764|(7, 2, 4)|var|float32
bop_4765 = relay.floor_mod(const_4763.astype('float32'), relay.reshape(var_4764.astype('float32'), relay.shape_of(const_4763))) # shape=(7, 2, 4)
uop_4770 = relay.atan(var_4764.astype('float64')) # shape=(7, 2, 4)
bop_4775 = relay.divide(bop_4765.astype('float64'), relay.reshape(uop_4770.astype('float64'), relay.shape_of(bop_4765))) # shape=(7, 2, 4)
bop_4780 = relay.multiply(uop_4770.astype('int16'), relay.reshape(var_4764.astype('int16'), relay.shape_of(uop_4770))) # shape=(7, 2, 4)
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
var_4787 = relay.var("var_4787", dtype = "uint64", shape = (360,))#candidate|4787|(360,)|var|uint64
call_4786 = relay.TupleGetItem(func_1022_call(relay.reshape(var_4787.astype('uint64'), [12, 10, 3])), 0)
call_4788 = relay.TupleGetItem(func_1024_call(relay.reshape(var_4787.astype('uint64'), [12, 10, 3])), 0)
func_3247_call = mod.get_global_var('func_3247')
func_3249_call = mutated_mod.get_global_var('func_3249')
var_4791 = relay.var("var_4791", dtype = "float32", shape = (1, 126))#candidate|4791|(1, 126)|var|float32
call_4790 = relay.TupleGetItem(func_3247_call(relay.reshape(var_4791.astype('float32'), [7, 6, 3])), 2)
call_4792 = relay.TupleGetItem(func_3249_call(relay.reshape(var_4791.astype('float32'), [7, 6, 3])), 2)
output = relay.Tuple([bop_4775,bop_4780,call_4786,var_4787,call_4790,var_4791,])
output2 = relay.Tuple([bop_4775,bop_4780,call_4788,var_4787,call_4792,var_4791,])
func_4794 = relay.Function([var_4764,var_4787,var_4791,], output)
mod['func_4794'] = func_4794
mod = relay.transform.InferType()(mod)
var_4795 = relay.var("var_4795", dtype = "float32", shape = (7, 2, 4))#candidate|4795|(7, 2, 4)|var|float32
var_4796 = relay.var("var_4796", dtype = "uint64", shape = (360,))#candidate|4796|(360,)|var|uint64
var_4797 = relay.var("var_4797", dtype = "float32", shape = (1, 126))#candidate|4797|(1, 126)|var|float32
output = func_4794(var_4795,var_4796,var_4797,)
func_4798 = relay.Function([var_4795,var_4796,var_4797,], output)
mutated_mod['func_4798'] = func_4798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2773_call = mod.get_global_var('func_2773')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_4811 = func_2773_call()
call_4812 = func_2773_call()
func_4522_call = mod.get_global_var('func_4522')
func_4524_call = mutated_mod.get_global_var('func_4524')
call_4831 = relay.TupleGetItem(func_4522_call(), 4)
call_4832 = relay.TupleGetItem(func_4524_call(), 4)
output = relay.Tuple([call_4811,call_4831,])
output2 = relay.Tuple([call_4812,call_4832,])
func_4834 = relay.Function([], output)
mod['func_4834'] = func_4834
mod = relay.transform.InferType()(mod)
mutated_mod['func_4834'] = func_4834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4834_call = mutated_mod.get_global_var('func_4834')
call_4835 = func_4834_call()
output = call_4835
func_4836 = relay.Function([], output)
mutated_mod['func_4836'] = func_4836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3397_call = mod.get_global_var('func_3397')
func_3398_call = mutated_mod.get_global_var('func_3398')
call_4849 = func_3397_call()
call_4850 = func_3397_call()
output = relay.Tuple([call_4849,])
output2 = relay.Tuple([call_4850,])
func_4864 = relay.Function([], output)
mod['func_4864'] = func_4864
mod = relay.transform.InferType()(mod)
mutated_mod['func_4864'] = func_4864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4864_call = mutated_mod.get_global_var('func_4864')
call_4865 = func_4864_call()
output = call_4865
func_4866 = relay.Function([], output)
mutated_mod['func_4866'] = func_4866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_4878 = func_4671_call()
call_4879 = func_4671_call()
func_3514_call = mod.get_global_var('func_3514')
func_3516_call = mutated_mod.get_global_var('func_3516')
const_4882 = relay.const([[-9,1,2,-6,-2,-4,5,-6,5,-2,6,-9,-5,-7,-9,9,1,9,-10,6,2,-4,7,8,7,-6,8,-3,-8,-10,-7,-4,-2,4,10,3,-1,10,6,-1,6,7,-3,-6,3,8,8,-10,5,-2,7,8,2,-5,-4,3,-4,-5,-1,7,-9,-3,7,5,1,-8,3,-4,1,-5,-8,8,-9,8,-4,-3,2,-9,-3,-2,4,-1,-3,3,-6,3,-7,7,-4,5,2,10,-7,-2,5,-3,3,7,-10,-3,9,2,7,-1,4,8,5,9,-8,2,-6,-4,8,-6,2,-7,-7,4,-10,-6],[10,-10,3,8,-2,-9,-5,7,4,6,-5,4,3,8,2,10,8,-10,-1,4,-1,10,-6,3,-2,-4,1,-1,-8,10,2,4,1,-3,-4,-6,2,1,4,-5,-3,5,9,-10,6,-6,1,-10,-6,5,-2,3,6,1,9,8,7,6,1,2,8,-8,10,3,3,-5,8,8,-5,-6,4,-4,7,-8,6,8,10,4,3,7,5,2,4,-1,-8,-1,1,5,7,-8,3,-8,-1,-4,-2,-10,-7,-2,2,-7,-2,-3,6,-3,-1,-6,7,9,8,10,-8,-7,-5,-5,-4,-7,3,-1,10,-1],[-5,9,-3,-7,4,1,2,-7,8,-3,-6,-1,4,7,-6,-7,7,2,-6,1,10,4,-9,-6,4,-9,4,9,-4,2,-9,2,6,-6,-4,-2,8,-6,-8,-1,-4,3,4,5,-2,-9,-7,7,-6,-6,9,-7,-6,1,5,-6,-6,-8,3,-6,10,6,-6,-9,-5,3,4,8,-2,4,4,-8,-9,9,-10,8,2,-7,6,-3,2,-4,5,-8,4,-4,-2,-7,1,-4,4,-10,8,9,3,5,-7,4,3,-8,-4,3,7,8,9,8,5,-2,-5,-7,2,-4,2,-10,9,-10,-2,-6,7,8],[7,-9,-6,-3,3,-9,-3,1,-2,8,1,-2,-3,4,4,5,-2,4,-9,-8,9,7,-2,-5,1,4,3,5,-6,-7,-4,4,1,3,4,-4,1,-3,10,-5,-5,-3,5,-6,8,3,-10,-8,-2,-2,-2,-9,6,6,-2,-8,-8,-5,10,5,-7,-8,5,9,-8,-6,-5,-5,-7,-10,-10,3,-9,2,-10,-7,-7,-5,2,-2,4,1,10,-2,-5,-5,-9,4,7,-9,-2,7,3,2,5,-6,-1,-8,-4,-10,-1,5,-3,1,-6,-8,-9,10,6,-7,-7,10,1,10,6,-6,3,8,2,-6]], dtype = "int32")#candidate|4882|(4, 120)|const|int32
call_4881 = relay.TupleGetItem(func_3514_call(relay.reshape(const_4882.astype('int32'), [480,])), 3)
call_4883 = relay.TupleGetItem(func_3516_call(relay.reshape(const_4882.astype('int32'), [480,])), 3)
output = relay.Tuple([call_4878,call_4881,const_4882,])
output2 = relay.Tuple([call_4879,call_4883,const_4882,])
func_4884 = relay.Function([], output)
mod['func_4884'] = func_4884
mod = relay.transform.InferType()(mod)
mutated_mod['func_4884'] = func_4884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4884_call = mutated_mod.get_global_var('func_4884')
call_4885 = func_4884_call()
output = call_4885
func_4886 = relay.Function([], output)
mutated_mod['func_4886'] = func_4886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4122_call = mod.get_global_var('func_4122')
func_4123_call = mutated_mod.get_global_var('func_4123')
call_4935 = func_4122_call()
call_4936 = func_4122_call()
output = relay.Tuple([call_4935,])
output2 = relay.Tuple([call_4936,])
func_4949 = relay.Function([], output)
mod['func_4949'] = func_4949
mod = relay.transform.InferType()(mod)
output = func_4949()
func_4950 = relay.Function([], output)
mutated_mod['func_4950'] = func_4950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2412_call = mod.get_global_var('func_2412')
func_2413_call = mutated_mod.get_global_var('func_2413')
call_5003 = func_2412_call()
call_5004 = func_2412_call()
output = call_5003
output2 = call_5004
func_5010 = relay.Function([], output)
mod['func_5010'] = func_5010
mod = relay.transform.InferType()(mod)
mutated_mod['func_5010'] = func_5010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mutated_mod.get_global_var('func_5010')
call_5011 = func_5010_call()
output = call_5011
func_5012 = relay.Function([], output)
mutated_mod['func_5012'] = func_5012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3315_call = mod.get_global_var('func_3315')
func_3316_call = mutated_mod.get_global_var('func_3316')
call_5025 = relay.TupleGetItem(func_3315_call(), 0)
call_5026 = relay.TupleGetItem(func_3316_call(), 0)
uop_5027 = relay.asin(call_5025.astype('float64')) # shape=(1, 6, 3)
uop_5029 = relay.asin(call_5026.astype('float64')) # shape=(1, 6, 3)
output = relay.Tuple([uop_5027,])
output2 = relay.Tuple([uop_5029,])
func_5031 = relay.Function([], output)
mod['func_5031'] = func_5031
mod = relay.transform.InferType()(mod)
mutated_mod['func_5031'] = func_5031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mutated_mod.get_global_var('func_5031')
call_5032 = func_5031_call()
output = call_5032
func_5033 = relay.Function([], output)
mutated_mod['func_5033'] = func_5033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3397_call = mod.get_global_var('func_3397')
func_3398_call = mutated_mod.get_global_var('func_3398')
call_5110 = func_3397_call()
call_5111 = func_3397_call()
output = call_5110
output2 = call_5111
func_5129 = relay.Function([], output)
mod['func_5129'] = func_5129
mod = relay.transform.InferType()(mod)
mutated_mod['func_5129'] = func_5129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5129_call = mutated_mod.get_global_var('func_5129')
call_5130 = func_5129_call()
output = call_5130
func_5131 = relay.Function([], output)
mutated_mod['func_5131'] = func_5131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4719_call = mod.get_global_var('func_4719')
func_4721_call = mutated_mod.get_global_var('func_4721')
call_5147 = relay.TupleGetItem(func_4719_call(), 0)
call_5148 = relay.TupleGetItem(func_4721_call(), 0)
func_4261_call = mod.get_global_var('func_4261')
func_4264_call = mutated_mod.get_global_var('func_4264')
var_5151 = relay.var("var_5151", dtype = "uint32", shape = (1890,))#candidate|5151|(1890,)|var|uint32
call_5150 = relay.TupleGetItem(func_4261_call(relay.reshape(var_5151.astype('uint32'), [1890,])), 0)
call_5152 = relay.TupleGetItem(func_4264_call(relay.reshape(var_5151.astype('uint32'), [1890,])), 0)
output = relay.Tuple([call_5147,call_5150,var_5151,])
output2 = relay.Tuple([call_5148,call_5152,var_5151,])
func_5168 = relay.Function([var_5151,], output)
mod['func_5168'] = func_5168
mod = relay.transform.InferType()(mod)
var_5169 = relay.var("var_5169", dtype = "uint32", shape = (1890,))#candidate|5169|(1890,)|var|uint32
output = func_5168(var_5169)
func_5170 = relay.Function([var_5169], output)
mutated_mod['func_5170'] = func_5170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4139_call = mod.get_global_var('func_4139')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_5175 = relay.TupleGetItem(func_4139_call(), 0)
call_5176 = relay.TupleGetItem(func_4141_call(), 0)
func_2683_call = mod.get_global_var('func_2683')
func_2685_call = mutated_mod.get_global_var('func_2685')
const_5180 = relay.const([9,-9,6,7,-5,-9,-6,10,1,10,8,10,6,-7,8,-1,9,10,-5,9,6,6,-8,-1,-2,8,-2,10,-6,-2,-5,3,-4,-3,-10,9,-10,-1,1,9,2,5,-6,9,-10,-8,6,2,4,1,8,1,4,6,3,-9,3,-8,-7,-2,-10,5,-2,5,2,2,-7,6,5,7,9,5,-1,2,-10,6,-7,-5,8,6,8,-8,1,6,-9,-5,10,2,-3,-9,1,2,-6,8,6,4,4,-7,-7,4,-6,6,-1,7,-3,6,2,3,-2,4,8,2,-1,8,3,-5,1,7,10,-5,-10,10,-6,2,5,-7,-7,5,-1,-7,7,7,5,-9,10,9,-4,4,1,9,5,1,9,7,10,-6,7,-2,-9,-7,-6,9,-7,-1,10,-6,-8,-4,-2,-8,-6,-9,10,-5,-4,-8,-1,10,9,-10,-1,-1,-3,7,5,-10,-10,3,-10,-10,1,7,-4,-1,10,1,8,-2,8,-8,5,-3,-7,-6,5,3,4,9,9,-1,3,-10,-6,4,10,-7,2,-1,-8,-9,-4,10,-2,-4,-1,10,8,5,-10,6,-2,6,-6,-4,5,9,6,5,-10,-1,-5,7,8,-7,-2,10,-7,8,5,-8,-7,-10,-6,-3,8,-9,2,6,7,-8,-8,3,-5,1,-4,10,7,6,-7,-2,-2,5,7,6,9,-3,4,-4,-8,9,-5,-5,1,6,2,-10,-8,-10,10,-1,4,4,1,-9,5,2,8,-10,1,-4,3,9,1,-8,-7,-8,2,-9,3,3,5,-6,5,2,4,-8,2,-10,-7,3,-7,5,4,4,9,5,-5,6,9,-5,-4,9,10,-8,-6,-1,2,4,-9,5,-8,-1,-9,10,-7,-10,7,6,7,-6,-4,7,2,-2,-10,10,-7,-10,10,-6,-4,-7,-4,-10,-6,5,3,6,5,-8,-6,2,9,-10,3,-3,10,10,2,8,-6,8,7,7,-1,-7,-3,-10,3,1,-6,3,-6,-2,4,-8,3,2,-9,1,5,-9,-7,1,9,-3,8,-10,2,-5,-2,-1,-7,4,-3,8,-3,4,-5,7,9,-6,-10,1,8,10,-9,4,3,3,-3,2,7,-3,3,6,-1,-8,9,-3,-7,7,-4,-1,-9,3,-5,-7,2,-5,-1,8,-3,3,8,-3,8,1,10,-9,8,2,-6,6,-8,-5,-3,-1,1,-10,-1,-2,-2,-1,6,-3,1,-8,4,-6,-6,-3,6,-5,7,6,10,-7,2,7,9,2,5,8,5,-6,-7,-10,-3,1,-4,-8,-4,7,6,-4,3,-6,8,-10,9,6,4,-2,2,-5,-10,-1,9,-10,1,9,-4,4,10,-4,9,9,-5,10,-4,-6,-9,9,-8,-4,-5,-2,-9,-10,10,2,-4,-5,-3,10,10,-2,-4,9,-1,2,-6,-6,3,-8,2,4,-10,-6,-6,10,4,-4,-6,2,-6,5,9,10,9,-4,-5,-6,-9,-10,1,-10,-4,3,7,-7,-8,-6,-4,-8,4,4,10,4,6,-4,-4,2,-9,7,-10,1,-9,-6,5,7,-6,7,-3,-7,7,-4,4,-10,-10,-8,-3,10,-6,-4,10,10,-2,-4,-10,-4,2,7,-3,-8,-3,-5,7,-8,-2,6,2,10,3,-9,-6,-1,10,-4,-4,-7,-3,5,8,3,-4,3,-6,-3,10,-3,4,3,-1,-8,1,2,-10,4,-10,1,7,-3,-9,-4,-8,-3,1,6,-5,7,-4,2,7,5,6,-3,-9,7,-1,-7,8,-1,8,-10,-6,2,7,-5,3,-4,-5,1,-3,4,-7,-3,2,3,3,-4,-2,8,-2,6,4,-2,6,7,-2,-3,1,-6,-2,-3,-6,-4,5,10,7,-5,-7,-4,-10,4,9,3,-5,-4], dtype = "uint32")#candidate|5180|(720,)|const|uint32
call_5179 = relay.TupleGetItem(func_2683_call(relay.reshape(const_5180.astype('uint32'), [360, 2])), 3)
call_5181 = relay.TupleGetItem(func_2685_call(relay.reshape(const_5180.astype('uint32'), [360, 2])), 3)
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_5199 = func_4671_call()
call_5200 = func_4671_call()
bop_5215 = relay.greater(call_5175.astype('bool'), relay.reshape(call_5199.astype('bool'), relay.shape_of(call_5175))) # shape=(1, 6, 3)
bop_5218 = relay.greater(call_5176.astype('bool'), relay.reshape(call_5200.astype('bool'), relay.shape_of(call_5176))) # shape=(1, 6, 3)
bop_5220 = relay.power(call_5179.astype('float64'), relay.reshape(const_5180.astype('float64'), relay.shape_of(call_5179))) # shape=(360, 2)
bop_5223 = relay.power(call_5181.astype('float64'), relay.reshape(const_5180.astype('float64'), relay.shape_of(call_5181))) # shape=(360, 2)
func_3951_call = mod.get_global_var('func_3951')
func_3953_call = mutated_mod.get_global_var('func_3953')
call_5227 = func_3951_call()
call_5228 = func_3951_call()
func_1634_call = mod.get_global_var('func_1634')
func_1640_call = mutated_mod.get_global_var('func_1640')
var_5230 = relay.var("var_5230", dtype = "float32", shape = (16, 80))#candidate|5230|(16, 80)|var|float32
const_5231 = relay.const([-3,7,-7,9,-1,6,-8,-9,-9,-6,7,8,1,-8], dtype = "int64")#candidate|5231|(14,)|const|int64
var_5232 = relay.var("var_5232", dtype = "int32", shape = (480,))#candidate|5232|(480,)|var|int32
call_5229 = relay.TupleGetItem(func_1634_call(relay.reshape(var_5230.astype('float32'), [16, 10, 8]), relay.reshape(const_5231.astype('int64'), [14,]), relay.reshape(var_5232.astype('int32'), [480,]), relay.reshape(var_5230.astype('float32'), [16, 10, 8]), ), 5)
call_5233 = relay.TupleGetItem(func_1640_call(relay.reshape(var_5230.astype('float32'), [16, 10, 8]), relay.reshape(const_5231.astype('int64'), [14,]), relay.reshape(var_5232.astype('int32'), [480,]), relay.reshape(var_5230.astype('float32'), [16, 10, 8]), ), 5)
bop_5234 = relay.less_equal(call_5227.astype('bool'), relay.reshape(call_5199.astype('bool'), relay.shape_of(call_5227))) # shape=(1, 6, 3)
bop_5237 = relay.less_equal(call_5228.astype('bool'), relay.reshape(call_5200.astype('bool'), relay.shape_of(call_5228))) # shape=(1, 6, 3)
output = relay.Tuple([bop_5215,bop_5220,call_5229,var_5230,const_5231,var_5232,bop_5234,])
output2 = relay.Tuple([bop_5218,bop_5223,call_5233,var_5230,const_5231,var_5232,bop_5237,])
func_5241 = relay.Function([var_5230,var_5232,], output)
mod['func_5241'] = func_5241
mod = relay.transform.InferType()(mod)
mutated_mod['func_5241'] = func_5241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5241_call = mutated_mod.get_global_var('func_5241')
var_5243 = relay.var("var_5243", dtype = "float32", shape = (16, 80))#candidate|5243|(16, 80)|var|float32
var_5244 = relay.var("var_5244", dtype = "int32", shape = (480,))#candidate|5244|(480,)|var|int32
call_5242 = func_5241_call(var_5243,var_5244,)
output = call_5242
func_5245 = relay.Function([var_5243,var_5244,], output)
mutated_mod['func_5245'] = func_5245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mod.get_global_var('func_5031')
func_5033_call = mutated_mod.get_global_var('func_5033')
call_5247 = relay.TupleGetItem(func_5031_call(), 0)
call_5248 = relay.TupleGetItem(func_5033_call(), 0)
uop_5253 = relay.log10(call_5247.astype('float64')) # shape=(1, 6, 3)
uop_5255 = relay.log10(call_5248.astype('float64')) # shape=(1, 6, 3)
output = uop_5253
output2 = uop_5255
func_5260 = relay.Function([], output)
mod['func_5260'] = func_5260
mod = relay.transform.InferType()(mod)
mutated_mod['func_5260'] = func_5260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5260_call = mutated_mod.get_global_var('func_5260')
call_5261 = func_5260_call()
output = call_5261
func_5262 = relay.Function([], output)
mutated_mod['func_5262'] = func_5262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mod.get_global_var('func_5010')
func_5012_call = mutated_mod.get_global_var('func_5012')
call_5289 = func_5010_call()
call_5290 = func_5010_call()
func_4139_call = mod.get_global_var('func_4139')
func_4141_call = mutated_mod.get_global_var('func_4141')
call_5344 = relay.TupleGetItem(func_4139_call(), 0)
call_5345 = relay.TupleGetItem(func_4141_call(), 0)
output = relay.Tuple([call_5289,call_5344,])
output2 = relay.Tuple([call_5290,call_5345,])
func_5347 = relay.Function([], output)
mod['func_5347'] = func_5347
mod = relay.transform.InferType()(mod)
output = func_5347()
func_5348 = relay.Function([], output)
mutated_mod['func_5348'] = func_5348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_5446 = func_4671_call()
call_5447 = func_4671_call()
output = call_5446
output2 = call_5447
func_5448 = relay.Function([], output)
mod['func_5448'] = func_5448
mod = relay.transform.InferType()(mod)
mutated_mod['func_5448'] = func_5448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5448_call = mutated_mod.get_global_var('func_5448')
call_5449 = func_5448_call()
output = call_5449
func_5450 = relay.Function([], output)
mutated_mod['func_5450'] = func_5450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4420_call = mod.get_global_var('func_4420')
func_4422_call = mutated_mod.get_global_var('func_4422')
call_5451 = func_4420_call()
call_5452 = func_4420_call()
output = relay.Tuple([call_5451,])
output2 = relay.Tuple([call_5452,])
func_5455 = relay.Function([], output)
mod['func_5455'] = func_5455
mod = relay.transform.InferType()(mod)
mutated_mod['func_5455'] = func_5455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5455_call = mutated_mod.get_global_var('func_5455')
call_5456 = func_5455_call()
output = call_5456
func_5457 = relay.Function([], output)
mutated_mod['func_5457'] = func_5457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4522_call = mod.get_global_var('func_4522')
func_4524_call = mutated_mod.get_global_var('func_4524')
call_5471 = relay.TupleGetItem(func_4522_call(), 2)
call_5472 = relay.TupleGetItem(func_4524_call(), 2)
func_4864_call = mod.get_global_var('func_4864')
func_4866_call = mutated_mod.get_global_var('func_4866')
call_5483 = relay.TupleGetItem(func_4864_call(), 0)
call_5484 = relay.TupleGetItem(func_4866_call(), 0)
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_5493 = func_4671_call()
call_5494 = func_4671_call()
func_1117_call = mod.get_global_var('func_1117')
func_1119_call = mutated_mod.get_global_var('func_1119')
var_5501 = relay.var("var_5501", dtype = "int32", shape = (480,))#candidate|5501|(480,)|var|int32
call_5500 = relay.TupleGetItem(func_1117_call(relay.reshape(var_5501.astype('int32'), [480,])), 0)
call_5502 = relay.TupleGetItem(func_1119_call(relay.reshape(var_5501.astype('int32'), [480,])), 0)
func_2412_call = mod.get_global_var('func_2412')
func_2413_call = mutated_mod.get_global_var('func_2413')
call_5511 = func_2412_call()
call_5512 = func_2412_call()
output = relay.Tuple([call_5471,call_5483,call_5493,call_5500,var_5501,call_5511,])
output2 = relay.Tuple([call_5472,call_5484,call_5494,call_5502,var_5501,call_5512,])
func_5519 = relay.Function([var_5501,], output)
mod['func_5519'] = func_5519
mod = relay.transform.InferType()(mod)
var_5520 = relay.var("var_5520", dtype = "int32", shape = (480,))#candidate|5520|(480,)|var|int32
output = func_5519(var_5520)
func_5521 = relay.Function([var_5520], output)
mutated_mod['func_5521'] = func_5521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4453_call = mod.get_global_var('func_4453')
func_4455_call = mutated_mod.get_global_var('func_4455')
call_5549 = relay.TupleGetItem(func_4453_call(), 0)
call_5550 = relay.TupleGetItem(func_4455_call(), 0)
output = call_5549
output2 = call_5550
func_5561 = relay.Function([], output)
mod['func_5561'] = func_5561
mod = relay.transform.InferType()(mod)
output = func_5561()
func_5562 = relay.Function([], output)
mutated_mod['func_5562'] = func_5562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2773_call = mod.get_global_var('func_2773')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_5608 = func_2773_call()
call_5609 = func_2773_call()
output = call_5608
output2 = call_5609
func_5630 = relay.Function([], output)
mod['func_5630'] = func_5630
mod = relay.transform.InferType()(mod)
mutated_mod['func_5630'] = func_5630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5630_call = mutated_mod.get_global_var('func_5630')
call_5631 = func_5630_call()
output = call_5631
func_5632 = relay.Function([], output)
mutated_mod['func_5632'] = func_5632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2773_call = mod.get_global_var('func_2773')
func_2775_call = mutated_mod.get_global_var('func_2775')
call_5641 = func_2773_call()
call_5642 = func_2773_call()
var_5657 = relay.var("var_5657", dtype = "float32", shape = (1, 6, 3))#candidate|5657|(1, 6, 3)|var|float32
bop_5658 = relay.logical_and(call_5641.astype('bool'), relay.reshape(var_5657.astype('bool'), relay.shape_of(call_5641))) # shape=(1, 6, 3)
bop_5661 = relay.logical_and(call_5642.astype('bool'), relay.reshape(var_5657.astype('bool'), relay.shape_of(call_5642))) # shape=(1, 6, 3)
func_2639_call = mod.get_global_var('func_2639')
func_2641_call = mutated_mod.get_global_var('func_2641')
const_5663 = relay.const([[-1,2,-2,-3,5,-5,4,-1,5,2,8,5,9,-2,10,-10,8,10,10,1,3,-2,1,1,1,-5,7,9,-8,7,-7,-10,-9,-7,4,-6,-5,4,-4,-3,-10,-4,-10,5,3,7,10,-7,6,10,3,8,6,3,9,-5,-6,-8,-3,4,6,6,-7,-5,-8,-4,4,-10,-6,-2,-10,-3,-7,1,-5,-6,6,-7,6,5,-8,6,3,-2,-2,3,3,-8,-7,10,6,3,7,-5,1,-6,1,2,-1,-2,-9,5,-10,-2,-6,9,8,3,9,8,-10,-10,10,6,6,-4,-4,9,-6,1,5,3,3,1,-6,3,-7,8,6,-1,-3,-1,6,10,-3,3,2,-3,1,-6,-5,2,3,1,3,2,-7,-2,-3,4,-3,5,-2,-2,-4,-10,9,-3,2,-4,6,-1,-10,-5,-3,-10,7,-6,6,1,-8,1,3,-2,9,-9,1,-7,1,4,2,-2,1,-7,-6,9,1,3,-5,8,10,-1,5,4,2,2,3,-5,2,3,2,3,-3,7,1,4,-3,4,4,4,5,-10,-9,-5,6,-10,2,-4,-10,-3,-6,-2,-3,-7,-4,3,-8,-10,-7,-2,4,3,-7,-3,8,10,4,-3,10,-3,2,4,8,-10,2,10,-4,-4,-10,8,2,1,9,4,-3,-2,5,-8,-3,-10,8,10,10,1,-2,7,-6,-1,-2,2,4,-4,-3,1,-9,-10,-10,-9,6,-2,10,4,6,8,-10,5,6,2,10,-5,6,-7,8,9,-5,-4,-8,8,-2,6,-9,-8,10,6,5,10,7,-10,-3,-8,-9,3,9,-5,-10,-6,2,5,4,-4,5,4,3,-8,4,5,8,-3,9,-1,9,-9,-1,-4,8,-6,4,-6,6,5,9,5,8,-8,8,-8,-9,1,-3,-7,-3,-3,-4,5,-4,2,-10,3,-7,-9,-2,-3,5,-1,8,-1,-2,9,-5,6,5,-3,4,-7,8,-5,4,-1,1,9,-1,-2,5,9,-8,-9,2,9,9,7,3,-10,-10,-8,-5,2,-9,9,8,6,-2,8,-9,9,5,7,-8,5,-8,-10,-1,-10,-7,-6,6,8,9,1,-4,-7,-8,7,1,-3,6,-1,4,-9,10,-7,-7,4,2,5,-8,5,5,2,-3,-5,6,7,-7,2,-4,-2,3,-9,3,-1,4,-7,-7,7,3,10,-7,-1,5,-2,2,2,-9,-2,-2,-5,8,-9,2,6,7,-5,5,1,-7,1,-6,-7,-1,-9,-2,3,-8,-9,-8,4,-1,2,-2,7,5,-3,8,-7,-8,6,-1,-4,-1,7,-7,5,-1,3,-1,7,6,-6,-9,-7,-9,9,-2,-9,5,2,-1,8,-3,5,3,9,-9,6,-10,-5,6,9,6,-2,-7,10,1,-8,-1,10,5,3,-6,2,-4,5,10,1,-3,4,7,-8,4,-5,-8,-10,6,-7,-4,8,-5,-9,6,-2,3,1,-1,-10,-4,3,2,5,9,-2,-2,-3,5,3,-2,-2,-10,-6,-1,-8,-3,-5,4,-5,-3,-6,-7,-1,2,6,8,10,-3,8,3,7,7,-1,3,4,10,10,-10,4,4,8,9,9,-4,-4,-3,3,4,-2,9,-4,9,-10,2,3,-3,-7,10,-2,2,-3,6,6,-9,8,8,9,-3,-8,-1,2,-3,6,-6,-10,-4,-5,9,2,-2,8,-2,9,5,4,-2,2,7,1,-6,-2,-3,3,-10,2,5,4,-8,-7,-2,-1,-9,-10,-2,-2,1,1,2,-8,8,4,1,-3,3,-1,10,9,-8,-8,3,1,7,-10,3,-1,7,6,-5,6,-8,-5,3,-10,5,1,9,2,3,4,9,9,-3,5,-4,6,-9,10,4,-3,9,9,-8,-5,4,-9]], dtype = "uint32")#candidate|5663|(1, 720)|const|uint32
call_5662 = relay.TupleGetItem(func_2639_call(relay.reshape(const_5663.astype('uint32'), [720,])), 1)
call_5664 = relay.TupleGetItem(func_2641_call(relay.reshape(const_5663.astype('uint32'), [720,])), 1)
output = relay.Tuple([bop_5658,call_5662,const_5663,])
output2 = relay.Tuple([bop_5661,call_5664,const_5663,])
func_5668 = relay.Function([var_5657,], output)
mod['func_5668'] = func_5668
mod = relay.transform.InferType()(mod)
var_5669 = relay.var("var_5669", dtype = "float32", shape = (1, 6, 3))#candidate|5669|(1, 6, 3)|var|float32
output = func_5668(var_5669)
func_5670 = relay.Function([var_5669], output)
mutated_mod['func_5670'] = func_5670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5698 = relay.var("var_5698", dtype = "uint8", shape = (11, 9, 9))#candidate|5698|(11, 9, 9)|var|uint8
var_5699 = relay.var("var_5699", dtype = "uint8", shape = (11, 9, 9))#candidate|5699|(11, 9, 9)|var|uint8
bop_5700 = relay.right_shift(var_5698.astype('uint8'), relay.reshape(var_5699.astype('uint8'), relay.shape_of(var_5698))) # shape=(11, 9, 9)
func_5260_call = mod.get_global_var('func_5260')
func_5262_call = mutated_mod.get_global_var('func_5262')
call_5705 = func_5260_call()
call_5706 = func_5260_call()
func_3947_call = mod.get_global_var('func_3947')
func_3948_call = mutated_mod.get_global_var('func_3948')
call_5714 = func_3947_call()
call_5715 = func_3947_call()
output = relay.Tuple([bop_5700,call_5705,call_5714,])
output2 = relay.Tuple([bop_5700,call_5706,call_5715,])
func_5717 = relay.Function([var_5698,var_5699,], output)
mod['func_5717'] = func_5717
mod = relay.transform.InferType()(mod)
mutated_mod['func_5717'] = func_5717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5717_call = mutated_mod.get_global_var('func_5717')
var_5719 = relay.var("var_5719", dtype = "uint8", shape = (11, 9, 9))#candidate|5719|(11, 9, 9)|var|uint8
var_5720 = relay.var("var_5720", dtype = "uint8", shape = (11, 9, 9))#candidate|5720|(11, 9, 9)|var|uint8
call_5718 = func_5717_call(var_5719,var_5720,)
output = call_5718
func_5721 = relay.Function([var_5719,var_5720,], output)
mutated_mod['func_5721'] = func_5721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4864_call = mod.get_global_var('func_4864')
func_4866_call = mutated_mod.get_global_var('func_4866')
call_5729 = relay.TupleGetItem(func_4864_call(), 0)
call_5730 = relay.TupleGetItem(func_4866_call(), 0)
const_5751 = relay.const([[[3.858376,-7.357887,-5.742320],[-9.767396,5.464908,5.392571],[7.821638,3.745343,4.019855],[0.438904,6.895936,0.864985],[6.794584,2.400081,2.295884],[1.275137,8.083825,9.341300]],[[-3.992388,-3.067447,8.660439],[2.307328,-1.431316,9.736193],[-0.262635,6.705571,2.647159],[-4.954256,6.423900,-9.435993],[-0.661310,1.313114,8.776751],[-9.936201,-1.835982,-5.425628]],[[-9.866574,-0.963488,-8.018720],[-8.669374,-1.939016,-7.986515],[-4.968929,9.725130,-1.752875],[7.295808,7.262099,1.199614],[9.101209,7.469155,-2.257291],[4.077480,2.293926,8.512220]],[[0.175244,9.822100,1.453019],[-2.119196,-0.653955,3.129927],[8.882237,-6.262862,1.525371],[-0.885690,0.825441,-7.946406],[5.897072,-7.371952,6.113471],[-1.804278,7.395973,3.168743]],[[-8.136566,-9.933235,1.056486],[7.266128,-5.465250,3.074600],[0.489494,1.381119,2.319386],[7.436101,4.102715,-1.770608],[9.527553,-5.245637,-6.166890],[-5.967812,6.346075,0.930175]],[[-4.618780,1.818746,-0.590757],[4.505666,-5.068973,-6.070595],[-8.666214,-8.627547,2.099130],[9.920111,-0.031722,7.760992],[4.413699,4.983461,2.333760],[1.111199,6.177777,-7.071276]],[[1.505874,-9.744511,-1.349458],[-7.328301,-1.066400,5.189693],[0.069706,-1.331742,-0.833001],[-1.986710,9.190257,-0.090749],[-9.451527,7.854335,-3.931134],[-3.688475,9.675048,-9.408328]],[[6.540435,-7.321898,9.187138],[-5.242920,-4.569627,-2.873897],[-1.879586,-1.892319,-3.673037],[-7.586781,-0.518025,6.630030],[-8.325446,6.135003,-4.630775],[8.790807,-5.552556,0.113386]],[[7.967805,-6.015621,-6.530298],[-4.850458,7.059396,5.642434],[1.349867,-8.134500,6.826930],[2.909938,9.130950,4.485843],[-0.104750,-4.110815,-8.513485],[-8.963355,6.366073,-1.723807]],[[-3.231016,-5.483743,1.748594],[5.488597,-9.373144,0.491259],[1.260782,8.281570,4.145528],[-0.215800,1.895084,-4.151926],[-6.370265,-3.829709,8.921670],[-5.127013,7.538237,4.751334]]], dtype = "float32")#candidate|5751|(10, 6, 3)|const|float32
bop_5752 = relay.floor_divide(call_5729.astype('float32'), const_5751.astype('float32')) # shape=(10, 6, 3)
bop_5755 = relay.floor_divide(call_5730.astype('float32'), const_5751.astype('float32')) # shape=(10, 6, 3)
uop_5756 = relay.sinh(call_5729.astype('float32')) # shape=(1, 6, 3)
uop_5758 = relay.sinh(call_5730.astype('float32')) # shape=(1, 6, 3)
output = relay.Tuple([bop_5752,uop_5756,])
output2 = relay.Tuple([bop_5755,uop_5758,])
func_5759 = relay.Function([], output)
mod['func_5759'] = func_5759
mod = relay.transform.InferType()(mod)
mutated_mod['func_5759'] = func_5759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5759_call = mutated_mod.get_global_var('func_5759')
call_5760 = func_5759_call()
output = call_5760
func_5761 = relay.Function([], output)
mutated_mod['func_5761'] = func_5761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_5772 = func_2393_call()
call_5773 = func_2393_call()
func_1634_call = mod.get_global_var('func_1634')
func_1640_call = mutated_mod.get_global_var('func_1640')
const_5796 = relay.const([-0.715787,2.408874,1.021236,-7.585794,3.681102,6.121985,-6.198028,-7.944551,9.559093,-2.762023,9.034345,-8.499862,-6.774940,3.964953,9.326180,8.923678,-3.804925,6.346278,1.908627,8.716431,4.889106,8.899146,5.718720,5.134427,-3.831407,2.438997,5.080172,-7.750277,-1.906443,8.992932,-0.293753,7.938706,3.676892,4.776469,-5.970064,-9.024323,2.969453,-5.446156,5.998546,1.485869,5.587186,-1.430712,-9.678461,8.212865,-3.549181,-7.626828,9.911961,3.547052,-1.901871,0.673168,-8.702400,-3.684406,-8.785780,-8.977991,-5.491836,2.642132,-4.226501,8.529217,-7.917971,1.561228,5.783499,-2.352229,6.350799,-0.738199,-6.071209,-8.193266,4.801845,-8.779884,7.200705,0.981445,-9.513242,-0.323606,-9.566125,9.943462,-1.052354,-2.606974,7.245494,-5.573986,-0.257280,-5.382504,2.045741,4.855642,-0.527881,-1.672669,-7.884847,6.182150,-8.460027,4.747247,4.203655,-8.823958,7.050081,-0.094834,3.336404,4.478579,9.621954,-3.803504,5.128249,4.465350,5.148915,1.790894,8.472706,-2.931309,-3.627056,4.424843,-9.382208,8.654929,-5.597507,-8.849609,9.208790,6.744878,-8.003495,5.666243,-6.076518,5.141960,-2.083125,0.349089,4.407002,2.746092,-6.645902,-4.904731,-6.052514,-2.528175,2.345042,-5.886647,8.508889,2.684139,9.449998,7.745806,2.139272,0.988045,1.134370,2.043152,-8.869477,8.272795,4.509914,-1.440661,7.617207,-6.779034,3.086783,0.828354,5.755913,-2.440561,1.268270,-8.651476,-2.677030,-0.783440,-2.039573,8.413554,7.687240,3.094676,-2.572006,-5.151141,0.868141,-9.060273,-7.456252,1.020215,-1.570919,-9.356491,8.431541,-1.303348,6.863910,3.494106,-6.860650,-4.875481,9.173295,2.255203,1.701567,-9.004812,-1.543036,-4.400623,-9.432338,-6.959741,1.780259,7.159061,2.378504,6.594711,-1.903160,3.605030,4.760847,-5.640286,2.318166,-5.163778,-0.266681,7.526881,1.830690,8.638241,5.439034,-8.353518,-9.327891,8.641076,2.708918,-4.802786,-6.507818,-3.795457,-5.338088,-3.023878,-1.637845,-8.094767,1.812189,-8.213806,2.945824,3.750430,7.268984,-8.410529,5.215243,-5.798707,-5.260198,-9.937638,-1.643494,-9.204529,-8.207195,-5.968542,4.307717,9.444867,5.673246,0.618121,1.353167,9.009174,-4.050770,-5.733801,-2.397049,-6.492397,-0.783478,3.829238,0.090837,9.198446,-1.297748,7.805658,-9.058591,0.668637,-0.625679,0.805412,8.572192,-3.580045,-7.061857,3.856833,9.024304,0.442695,-7.784179,-1.047231,-4.166709,7.237729,-1.812546,-3.814332,4.259446,-9.741939,-5.270376,4.519339,-9.225435,7.559556,1.491247,1.607264,-7.632060,-3.314551,2.491199,-3.887885,-5.943861,5.787047,-7.208670,8.001555,7.676289,1.520160,0.355229,6.301885,7.058218,-2.245194,1.800188,3.183775,-3.939309,-3.773807,1.053441,0.685144,4.492355,-5.196328,-6.108485,4.801627,8.919422,3.819007,-5.238320,-2.161442,3.248359,-3.997089,8.237157,-1.672242,3.459899,2.542648,-1.379535,-8.517412,6.185233,8.162524,-8.096896,3.628942,-3.969262,8.328470,5.131109,-1.940256,-3.085949,9.651985,-0.553061,-5.634357,2.321969,-3.413519,-1.811801,8.225568,1.632309,-8.335813,2.648547,7.861324,-7.512487,-3.092388,4.888900,4.102957,4.927854,1.845148,-9.837048,3.507006,8.346129,2.085370,-5.246752,-7.829718,-0.794432,-9.552785,-8.279307,4.736194,-6.880991,8.343809,-9.513758,2.914990,5.059258,5.244468,-8.297383,3.480471,5.826945,-5.762629,2.398082,4.533624,1.145623,-9.427734,-6.031063,-4.682696,8.667306,-7.186291,-1.538341,-7.936395,-8.417890,-5.960058,-4.749466,-5.274347,-3.178219,-8.247488,9.711178,2.801352,0.619374,5.257054,5.237846,-0.734027,9.020714,-9.593200,-7.093762,0.473793,5.263170,-8.691042,-6.818309,9.962533,8.129048,-8.172631,6.141346,2.617599,7.524575,-3.234560,-0.178221,-3.899797,9.378884,-9.278902,8.645042,-0.446756,3.694275,-1.889633,-1.873409,-2.869553,6.005042,-1.142628,9.634827,4.659512,-8.168499,1.094948,-4.957172,-5.383087,0.337445,-4.702687,1.369285,1.205252,1.724198,-5.964443,0.535152,0.194201,9.132657,7.088753,1.964307,-9.586855,6.905691,-3.297595,9.014185,2.980893,2.426960,6.943228,3.402373,5.133048,-7.133019,-6.603913,2.633114,3.600641,4.237539,4.806871,6.702553,0.213239,5.290789,1.838956,-1.457689,3.232466,-7.785596,-6.158751,3.994525,-1.800205,8.643781,3.033318,-5.441382,-1.366281,-0.175679,-8.554052,6.242334,-5.135116,2.346773,8.579263,-5.473793,-4.158048,7.759400,-7.474057,-3.198089,-4.968407,5.690243,-2.359689,-9.014301,-1.904588,-4.444765,2.161398,-4.817447,6.701842,8.283419,3.103095,5.778450,-2.813846,8.136160,-7.450518,7.824313,7.072692,-3.324734,-9.018458,-5.309899,8.621563,4.679870,-1.912808,-6.978794,3.135816,-2.481006,-6.554429,-8.080878,-8.201917,4.385267,-4.084551,-3.941259,-0.720920,4.364208,5.912441,7.343738,9.554109,1.674107,-3.427053,8.427511,9.288756,-3.846813,1.844489,-6.015610,-4.347404,-6.934415,-2.807857,5.278057,-6.492254,4.483640,-9.039524,-5.204433,5.264183,-1.840082,-8.253907,-1.587037,4.102955,8.772150,7.832249,0.846521,9.096617,-1.485975,-9.278247,-5.519160,0.290232,-4.423840,-4.164048,6.758013,6.611679,7.699488,3.393925,4.769258,9.729139,5.022156,7.536006,-8.716021,5.804881,-8.816200,-4.718316,-2.997275,3.372041,-9.805465,6.105848,2.359151,5.029893,-5.277524,-5.917747,0.879074,-7.223929,7.249107,1.250252,5.053496,-5.115898,-1.710743,-8.877228,-0.529153,-6.935226,-5.022849,-1.224147,-4.169009,-8.451115,-3.945306,-9.962413,-0.224671,2.179277,-6.732749,-8.505843,2.725448,-0.757712,5.309682,-0.246743,-9.293419,-4.607529,-3.438242,-2.060781,-4.800060,-4.049620,-7.165474,2.944495,6.423322,-4.376994,1.552470,2.159887,9.711374,6.488276,0.688494,7.145438,-7.278354,-0.549138,-1.909404,7.189728,2.339755,-2.701883,-7.483773,6.278798,-8.657443,-7.863697,-2.591283,-6.122965,0.819579,-1.964281,8.573734,-8.591467,-6.062996,-4.581682,5.469522,4.179585,8.012599,-5.965330,8.669463,-0.606658,5.235397,-6.190123,-5.742125,-2.307211,-8.618400,-6.639604,-0.673624,7.549787,4.807228,1.565072,4.221892,-5.875230,-8.150828,-9.334372,-2.226259,6.811745,3.638888,7.594058,-7.476430,9.653924,-0.058436,-4.672095,-6.302869,5.741293,-9.882020,6.071618,-2.673723,-0.456674,-2.546695,-8.558765,4.455520,4.057285,2.070714,3.303913,-2.617207,-5.518369,-1.140466,1.522629,-0.636512,4.082666,4.537343,-3.243991,-8.087179,7.033703,-4.637538,0.924340,7.982731,-5.350686,8.070664,5.340177,1.963389,-0.259493,-6.082182,-6.115446,1.704112,7.042932,-1.371411,-2.502514,2.506605,-3.284729,7.119502,2.580740,-9.288458,-7.620626,3.964413,0.623199,7.628576,1.369409,4.304127,3.991331,3.034255,4.406112,-1.509890,-1.905014,2.207064,0.946035,-3.958241,-6.779683,4.281606,-0.070829,-3.003327,6.679462,6.955033,1.339072,-5.547056,5.045877,-1.533499,-3.307649,-4.743075,-5.606514,9.530730,9.458276,-9.691333,-0.719081,-8.574893,1.543053,-7.883157,-8.680405,5.784838,-8.889258,-5.701318,4.299404,-7.023605,-4.295457,-8.093518,1.552419,-8.378019,4.549325,-2.511163,-1.257679,-5.897423,2.161949,-4.684005,-4.113052,7.753318,-9.042004,6.528243,-5.002600,9.697321,-6.364021,4.207293,5.605254,-0.848374,1.061464,-7.750746,1.056252,2.267801,2.635094,0.987342,0.720729,-2.823108,-8.999483,7.216137,0.360478,8.055746,-3.855183,2.698719,3.990824,-9.205510,-9.382609,-6.025287,4.100799,-5.816018,-0.823787,-7.602581,6.075215,6.430961,-6.297927,-2.913404,3.782601,-0.419639,4.810053,5.504109,3.764281,8.831966,-5.114616,-8.369411,4.664699,-0.241720,-2.089157,1.614380,2.330127,1.066296,4.351228,0.011391,-6.102889,-0.416441,-5.918990,-2.176520,6.604356,8.301097,1.586131,9.193376,1.639767,-7.785745,-5.257287,0.928760,-4.698002,-4.829591,-5.647259,-8.264606,0.866466,-9.496177,-3.786029,0.316536,-0.070713,8.821146,-8.036049,-4.313084,-8.217424,5.089858,-0.309552,-7.053640,-8.083462,-8.148562,8.693730,5.474113,2.754179,-3.288799,-0.898501,9.805839,-2.355656,-9.038333,6.956198,-3.383955,-4.478631,2.132032,-5.795984,4.563004,-4.351035,-9.279540,9.521913,-5.587505,4.341594,-8.022567,-5.525024,3.495449,1.474861,-1.329459,-3.912488,-3.165594,-0.060312,-0.014721,-7.241718,7.847004,6.027706,-8.903479,6.080287,-8.081084,4.174099,-3.929428,-3.036254,-4.882401,-6.194440,5.655862,-6.935489,0.953611,4.783075,0.599824,5.145891,-1.278449,-6.902632,5.354604,2.843251,1.725932,0.947235,-1.995779,2.006829,6.844977,4.963272,-5.770005,-4.338163,7.562336,6.827892,5.588184,7.784341,-2.918417,-9.374423,-2.741999,0.384842,-7.325077,6.498248,-8.736837,-6.790983,-1.607555,-8.609214,6.040464,-7.120104,-1.613432,2.617374,4.062907,3.402990,4.912239,9.517611,2.225738,2.627889,4.387507,7.741292,7.432467,3.749985,8.669592,-8.382084,8.139412,2.454323,6.455811,9.675812,-7.197853,-8.604850,0.273144,7.559396,-0.886163,-4.367007,6.035342,8.161222,7.458198,6.753397,8.218943,9.563155,-6.382823,-8.074170,-9.879903,-2.005219,3.945204,-2.657646,4.030891,4.132889,-4.315147,7.046508,4.708795,-4.454189,-7.540971,-5.061289,1.867053,-0.886606,-5.743778,6.826965,-4.762828,8.143079,-4.754233,-4.714439,2.981983,1.517024,-4.245449,-1.880366,-4.454215,-7.283607,-6.996725,-2.844219,0.973363,5.178163,4.038834,-6.498685,1.443302,6.954781,1.305508,8.830585,-0.414975,-2.828686,9.002237,-8.973504,1.814613,-5.099345,9.371769,9.437370,8.242776,0.108802,-9.741875,1.319514,2.148562,8.608593,-7.754859,-7.356121,-5.915040,6.852654,0.413777,9.507739,8.200564,-6.291812,-2.352899,0.463008,-9.007167,-6.733732,-1.274591,-4.490215,8.533577,-2.717175,-1.094748,-7.965243,0.236229,7.390535,6.866471,5.746207,-9.055593,-0.938809,4.120534,1.227374,-9.867438,-2.557064,1.937732,-3.576233,6.900665,-1.650938,8.733256,-9.061120,8.700085,5.310700,-2.236157,0.330764,-5.358613,7.528167,4.609441,-6.964962,-8.431922,-2.587348,4.613391,-0.412143,4.169278,2.304306,9.838032,2.967537,8.341422,-6.792071,1.871202,-7.530618,1.360768,2.189803,-4.067384,-5.693667,7.854612,-8.343120,4.454485,2.447347,-8.380370,-1.827390,-8.097741,-8.482555,-5.471691,4.253058,-4.090458,-6.867099,3.122483,-5.314653,7.739492,-4.145623,2.535927,6.802217,-7.050235,1.405346,1.664183,-6.946549,8.639889,0.866826,8.643615,4.857103,9.041678,8.516649,0.340914,-9.185896,-4.050575,3.039017,-8.435551,1.546179,1.077543,0.890951,-6.226695,-4.808153,-3.629872,2.257487,-6.356473,1.543628,-6.878390,-1.796583,-7.734675,-7.669457,-2.794371,-2.951547,1.579343,2.416109,-7.104460,7.988236,-2.877975,-7.654825,-9.720442,6.898689,-0.189240,-4.922305,4.270985,-1.025749,3.514657,7.730891,3.480928,-7.698729,3.194077,2.540990,-4.572770,-6.230691,6.331463,6.804198,-5.313004,-3.230295,1.227622,-4.974770,-5.662545,-4.074309,4.944778,3.730055,2.714948,7.680983,3.228662,-6.588104,-0.740714,-0.357105,5.774948,2.812061,-6.286494,-8.615493,-2.110894,8.532480,-7.436747,-4.367175,0.262225,-5.783746,-6.603644,9.264721,-5.474420,2.470889,-7.558283,-6.039390,-5.791003,4.088657,-9.446566,-7.879295,-1.692054,3.580822,-0.978203,0.650442,5.418060,-0.078002,1.313025,3.707440,-7.265061,-3.458269,-3.352276,-3.406666,-4.428720,-8.682207,-8.275182,9.579507,-9.421698,3.402132,1.398171,-7.276358,-0.116220,-6.872219,-1.963580,0.266791,-2.355510,4.801699,0.006276,0.397670,0.787029,-8.825946,3.257988,8.292190,-2.424778,-1.265260,6.346413,-0.572782,7.971351,4.093496,-9.396031,-3.074248,0.313450,5.898001,-0.830599,-3.790338,-3.531414,6.354196,0.925942,1.020709,8.857615,1.785062,-2.163266,-7.034964,-9.257544,0.656611,-9.865480,4.325627,9.603223,-4.950425,-8.415774,-9.478321,7.156809,-2.081206,-8.689868,-9.534335,3.741064,-8.763219,0.092355,9.701569,-1.209551,-6.723889,6.818089,-9.881570,2.518301,-4.113425,-7.676688,-7.529567,-6.542439,-8.056808,8.343055,-3.921014,-6.261159,-2.974639,6.404164,0.077206,4.723732,-5.430996,6.557659,7.214640,-7.139712,-7.460737,-7.528980,-6.350311,0.127791,3.482002,-8.765866,1.565783,-1.857170,-4.137954,-9.835902,-0.901328,-8.037761,-7.147837,8.858494,-0.533550,8.764558,-4.855417,5.236303,-5.522652,1.819307,8.741522,2.437773,-8.023736,8.898637,3.023929,-0.866440,3.524253,-3.245661,0.918154,6.097952,2.930185,-3.105963,9.103763,8.653647,5.346451,2.757945,-5.790545,9.266640,0.106793,8.786950,-8.708031,-6.264198,-9.817894,5.681380,-2.550145,3.193612,6.162198,-0.066419,-8.426563,-4.190888,-4.177819,-1.238993,-0.072524,-4.417915,-4.794573,-3.337010,5.817881,-0.632051,-3.988147,5.271088,9.435972,-9.669839,9.835727,9.591173,-1.602253,5.766662,6.504701,8.952957,1.285630,7.831985,-0.421636,9.615266,-1.528811,0.262702,4.627776,-2.498260,-0.507903,-0.750364,2.786101,2.497822,8.203526,-8.669843,-6.675728,7.233146,2.022883,-9.978267,-5.773203,-6.605730,3.779769], dtype = "float32")#candidate|5796|(1280,)|const|float32
const_5797 = relay.const([5,8,-6,2,-5,8,-2,3,-9,1,-3,9,-9,-2], dtype = "int64")#candidate|5797|(14,)|const|int64
var_5798 = relay.var("var_5798", dtype = "int32", shape = (480,))#candidate|5798|(480,)|var|int32
call_5795 = relay.TupleGetItem(func_1634_call(relay.reshape(const_5796.astype('float32'), [16, 10, 8]), relay.reshape(const_5797.astype('int64'), [14,]), relay.reshape(var_5798.astype('int32'), [480,]), relay.reshape(const_5796.astype('float32'), [16, 10, 8]), ), 3)
call_5799 = relay.TupleGetItem(func_1640_call(relay.reshape(const_5796.astype('float32'), [16, 10, 8]), relay.reshape(const_5797.astype('int64'), [14,]), relay.reshape(var_5798.astype('int32'), [480,]), relay.reshape(const_5796.astype('float32'), [16, 10, 8]), ), 3)
func_5347_call = mod.get_global_var('func_5347')
func_5348_call = mutated_mod.get_global_var('func_5348')
call_5807 = relay.TupleGetItem(func_5347_call(), 1)
call_5808 = relay.TupleGetItem(func_5348_call(), 1)
func_4719_call = mod.get_global_var('func_4719')
func_4721_call = mutated_mod.get_global_var('func_4721')
call_5814 = relay.TupleGetItem(func_4719_call(), 0)
call_5815 = relay.TupleGetItem(func_4721_call(), 0)
output = relay.Tuple([call_5772,call_5795,const_5796,const_5797,var_5798,call_5807,call_5814,])
output2 = relay.Tuple([call_5773,call_5799,const_5796,const_5797,var_5798,call_5808,call_5815,])
func_5816 = relay.Function([var_5798,], output)
mod['func_5816'] = func_5816
mod = relay.transform.InferType()(mod)
mutated_mod['func_5816'] = func_5816
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5817 = relay.var("var_5817", dtype = "int32", shape = (480,))#candidate|5817|(480,)|var|int32
func_5816_call = mutated_mod.get_global_var('func_5816')
call_5818 = func_5816_call(var_5817)
output = call_5818
func_5819 = relay.Function([var_5817], output)
mutated_mod['func_5819'] = func_5819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4101_call = mod.get_global_var('func_4101')
func_4103_call = mutated_mod.get_global_var('func_4103')
call_5837 = func_4101_call()
call_5838 = func_4101_call()
var_5848 = relay.var("var_5848", dtype = "float32", shape = (6, 6, 3))#candidate|5848|(6, 6, 3)|var|float32
bop_5849 = relay.bitwise_and(call_5837.astype('int64'), var_5848.astype('int64')) # shape=(6, 6, 3)
bop_5852 = relay.bitwise_and(call_5838.astype('int64'), var_5848.astype('int64')) # shape=(6, 6, 3)
func_5241_call = mod.get_global_var('func_5241')
func_5245_call = mutated_mod.get_global_var('func_5245')
const_5868 = relay.const([-3.848979,3.714164,-1.679814,7.958822,7.452772,-1.409114,0.992121,-6.834504,-9.379148,-6.243788,6.683473,-4.419628,-5.066730,2.849230,-5.616832,5.879550,-0.504358,6.801599,-4.597595,-7.369070,-3.402119,2.551915,-0.478439,-4.214553,-9.786984,3.461762,-9.648629,-5.910648,-3.082274,-9.660381,-5.491130,-8.521248,-3.858157,4.045319,-0.952546,-7.243403,-6.305173,-1.418862,7.209952,4.774217,7.553411,8.989739,7.485188,-2.050157,-2.476549,-4.560938,-4.562591,7.585634,-2.721936,1.971904,-2.823651,-7.384827,-9.165262,8.918939,5.681084,8.891637,-9.357778,0.180788,-8.588240,9.139936,-9.170913,4.757579,-8.653203,-2.878608,4.810614,0.907246,2.531871,0.918536,-5.934342,-8.749986,2.500935,-9.944619,-4.601519,7.895836,3.979495,8.687193,-9.412149,0.839282,5.361205,-7.943878,3.257467,-6.878059,5.510623,-3.451638,3.418260,9.500614,7.369858,-2.440925,8.286661,-8.852402,-0.899673,6.177654,8.596210,-7.043231,-1.524709,3.289278,-6.327599,-7.029577,0.535040,-7.463088,8.286901,-0.906782,1.107474,0.700683,-8.292262,-3.198754,7.780260,-6.633737,-7.650362,-8.293186,4.865506,-8.745128,6.860481,3.996898,-5.397647,0.746356,0.631683,-6.042240,-5.776435,-3.904198,1.189767,-7.092576,-9.741033,6.521629,6.530686,3.606990,-1.865133,-8.878863,-7.934887,-4.554059,4.290094,7.050457,4.186640,-1.640515,9.878738,8.719339,5.355927,5.838896,-9.932052,-4.350750,-4.094376,-8.769076,4.106428,5.100432,-5.425802,-7.315021,5.271866,-5.429880,3.238196,3.673122,1.840935,-8.380517,-1.897187,-6.669407,-2.172087,-8.744784,-4.869788,8.662395,6.107456,-6.506784,3.784064,-1.226227,-7.034286,2.781316,6.147936,-8.270692,2.606034,2.827219,-6.692094,-7.608207,-9.960696,-5.295709,8.343738,-1.370137,-1.767546,-1.836183,-3.485501,-3.803512,-6.232445,-3.364864,-9.830827,-0.941132,9.903550,6.199726,-4.032527,9.340887,-1.654132,8.125096,7.275632,2.343082,-8.016421,1.156490,-3.905076,0.988344,-3.371219,-6.547639,-9.630273,-5.482117,-7.528464,-4.615975,-4.822621,6.473273,0.906447,-6.945311,-0.885149,-2.110972,-1.575475,3.759743,3.004903,4.345180,0.416936,9.914340,-4.906380,1.563686,4.204104,8.705406,2.824671,8.139740,-9.273424,-0.787472,4.100019,3.175630,-0.838025,-8.203632,-4.652377,2.798835,4.022935,9.764324,5.886714,-4.846922,-2.234337,-2.732870,-2.527432,-2.404522,1.326581,2.599586,8.855950,-3.806742,-1.092948,-6.132665,-2.150213,-5.719553,-3.871423,-1.896988,-2.898885,-6.701141,-7.061926,0.016045,-5.550519,9.583544,-1.623445,-4.654650,-2.174391,7.440938,0.285691,2.056386,-4.899524,8.174450,2.267964,-3.497600,-1.673202,2.858919,5.089615,7.063799,-3.655698,3.725776,-1.145731,1.521395,6.393142,4.628807,-4.363876,-1.877853,-3.915360,6.970435,6.551814,9.126624,-4.585525,2.465368,9.993233,-7.307729,4.791953,-8.870599,1.641538,-0.599996,3.691413,-1.406585,-3.414372,-1.607651,-5.848256,6.640747,7.367214,-8.401141,8.178673,7.877425,-0.933038,-8.833001,9.978139,7.880758,-2.870139,4.498362,4.507760,8.084626,3.758158,-9.284367,0.135138,4.735036,3.460594,4.706435,8.810463,8.055035,-5.510436,-3.244884,4.197993,-1.298894,7.340939,9.055921,5.576160,0.996289,-5.768713,2.819249,8.875118,-7.717314,-0.872291,8.073829,-6.745968,6.141238,-4.535964,-5.431105,-1.191657,-8.096510,9.500780,-4.220553,-3.466171,5.987591,-5.350769,4.160222,0.673575,-0.935868,8.187071,-7.298677,-8.474607,-2.732399,7.509702,-7.499204,8.041105,6.165811,-5.118838,-3.142832,1.740672,1.645162,-2.193658,8.316219,-2.611819,6.608259,0.506765,6.140916,8.254095,2.322128,0.049585,-0.899914,-2.219674,4.853146,-3.790299,5.568507,9.166153,4.043153,1.837543,0.590400,-8.943509,4.684929,-5.200442,0.387951,-7.339370,-7.308757,7.784656,7.483543,7.484755,-1.998987,-6.740713,1.111631,6.594978,1.627517,-3.536601,-7.660174,7.783906,-2.538090,8.169713,1.283654,-2.806754,7.358079,6.874444,1.432178,4.382783,-0.662072,-1.984101,7.141066,-1.603367,-6.196735,8.579807,5.064225,3.039532,8.470552,2.558456,-4.846594,-2.880339,7.583308,-2.228848,-3.556804,5.644624,9.867548,5.423792,1.611367,3.374416,-2.641462,-2.199109,3.196646,9.518067,-1.796041,-7.347189,8.178045,-1.611530,-1.295969,7.477347,-6.838090,5.817183,-5.155811,-8.469424,-9.688090,-4.551355,4.441089,-2.212945,-6.476306,4.464535,-5.379639,2.033564,-1.735078,9.171350,1.874371,-4.723422,4.705597,5.333927,-7.352850,9.654147,-7.586551,1.220935,-4.944971,-4.885788,6.768817,-6.061660,4.659687,4.091980,4.487208,-1.662751,-3.377801,0.493030,-6.719851,5.716145,-2.419115,7.080816,-0.794415,-3.447666,-5.923503,4.045961,-6.000985,-8.100025,-1.311805,-1.292580,-9.261263,-5.251695,8.292142,-9.480286,-0.759767,-1.519065,-4.621177,9.288828,-4.295845,8.627695,1.527386,-7.397976,-2.639040,5.946104,0.825374,4.095569,0.286676,-1.431954,1.156468,-8.741956,-0.157579,-1.402859,7.403135,-1.855923,-3.488329,-0.603310,-5.782788,9.137961,5.421708,8.544213,-8.016287,-0.641823,-4.954595,-8.377575,2.125437,-6.949353,1.218384,-4.227105,-7.260055,-2.723093,6.714315,-6.994203,-4.272281,-1.956151,3.261944,-0.901343,-6.975350,1.073317,2.749611,-1.523334,-5.555789,-9.079684,-1.393659,-7.114484,5.186921,8.613335,-2.482215,6.578989,6.885168,-8.639623,0.019029,9.031022,-5.550472,2.730460,-4.046461,-2.700740,-1.986181,5.904720,-6.866049,8.207156,-1.305692,-4.810433,1.258698,5.593668,2.391481,8.239503,-6.491875,8.670519,9.675683,-6.558837,-5.850863,-1.882837,-8.241010,6.688126,-8.138327,-7.573833,3.799904,6.854203,-8.743337,-3.552737,-8.616853,4.202164,-8.016190,5.568507,4.730499,3.478768,1.406404,-4.218304,2.155009,-9.171761,-7.612571,0.565919,7.353842,-6.944824,8.985586,8.808585,-4.562678,0.393337,2.156863,-3.312833,-6.833629,0.245285,-7.799327,1.736105,6.980075,5.781461,7.965622,-0.668641,1.381306,-8.968978,1.243995,-0.385807,-7.064227,-2.938488,0.275051,-0.770419,-4.583729,9.906683,4.363255,6.928960,-0.335925,3.496011,7.729261,-8.744888,-9.306022,3.461015,-6.397699,-3.223357,5.305244,8.243685,8.726780,1.704067,2.730139,-7.541940,5.885000,0.772958,-8.352571,9.128428,-3.733529,-0.768809,7.974181,-8.039331,-7.894520,-1.673153,2.777077,-9.882383,-7.427638,9.364856,-5.284718,-8.506674,8.308793,0.247761,-8.723938,8.957897,-4.407559,-5.377297,7.405848,4.808510,1.122748,-8.399088,9.277911,9.295030,-3.509037,3.197100,4.068208,-8.327966,-4.286942,-3.629132,5.699912,3.828115,-3.850485,0.232291,9.153247,3.923316,-9.066847,6.312285,-9.360716,0.855996,8.440504,5.833824,5.967649,4.447675,8.775023,-1.317259,2.144917,-5.199197,0.226627,-2.005049,-2.667131,1.696737,8.249139,8.530764,-4.523261,-6.089657,4.988444,-6.745856,1.908467,-4.398613,9.230621,3.045575,1.316972,-4.862423,5.368767,2.397612,-0.340741,5.932820,6.317578,0.682667,3.966217,-2.440283,2.023434,7.371779,-5.401186,0.216643,7.050322,3.870370,-2.399601,5.029957,-5.891618,-5.301069,-2.288226,-9.880289,-2.732769,8.079495,8.280729,-5.580010,-3.889452,6.966514,-4.122112,-1.798642,-8.940763,-5.637803,-2.127309,-0.397004,-3.619235,8.851090,-9.506178,-7.794901,-7.760476,4.087413,6.074882,-8.018835,4.712339,2.263924,7.023478,0.796981,8.351187,-8.727989,-1.708147,-0.354220,4.207878,2.274427,4.403740,-7.379639,1.993397,7.650791,-4.999134,-7.909801,3.272814,2.181440,8.262519,-4.307752,-7.295540,-0.381774,-5.560973,4.768221,0.985774,6.111877,-3.513377,-8.308959,5.750938,8.182117,3.001283,-1.719205,3.589356,0.419228,-4.481656,0.036226,5.649962,2.801325,-3.927022,9.008635,6.673928,-5.035028,2.239667,2.004088,-1.645037,-0.038002,-2.213313,-9.583448,-5.090207,3.329900,-5.677189,3.561046,-2.615537,6.347480,3.025530,-4.655280,2.198455,-3.701932,9.821420,-2.781696,-0.916873,-3.729153,4.512150,-0.081946,-0.424161,-9.565936,-8.343677,-1.426732,9.730968,9.144876,0.104638,1.487763,-3.592739,4.658793,-5.217922,1.333895,-3.936367,5.089563,7.141263,5.264966,8.948924,-5.163420,0.505465,9.756745,-8.133519,0.577312,-0.020083,-5.565124,-5.291618,6.820366,0.075498,-7.493780,-4.935524,5.750182,3.550748,8.724999,2.950537,9.468043,6.858880,6.802584,5.883642,2.475102,0.151336,3.383922,9.005394,-8.965757,6.979564,-5.456723,1.034225,4.109802,-9.692484,0.644721,-1.308940,-7.802234,0.190714,8.082077,-9.760097,1.449711,5.339672,1.798050,0.964470,1.112533,-9.937304,-1.576305,-3.953149,0.642732,-4.487782,-9.551203,7.697114,-8.946794,-6.023501,6.768995,-3.695014,-3.427891,5.989616,-6.204474,-7.955098,-5.215029,8.534499,-9.173516,-2.782064,-1.626799,-7.581363,-5.160834,0.895528,5.451654,-7.703451,-9.079727,1.019287,-0.247938,9.114986,4.957950,1.806546,-1.232530,-6.259726,-1.832540,-5.186778,3.961519,3.437251,-7.747741,6.345648,-0.148490,0.086287,-6.298095,9.358119,1.203221,-3.365056,-0.962610,-2.255298,-5.045494,8.771488,-3.286224,-3.126071,6.654404,2.442042,-0.499607,8.271390,-9.142922,-2.966060,1.199963,-3.330153,-6.492200,5.483934,-6.980699,7.699043,-8.786705,5.882475,8.485578,-2.496546,5.905347,-4.083396,-9.658457,-0.165263,-9.205380,-4.330583,-7.547233,4.639879,3.808595,-5.155485,-9.365159,-5.102204,-0.246836,3.322720,9.893809,-2.165657,1.318063,4.903854,-4.726929,1.485232,-6.481102,-8.682845,-7.120432,5.407348,-5.719573,8.238609,8.918315,7.095247,2.613243,7.904938,3.099316,0.545748,3.191792,-1.204833,-5.130036,-9.247020,3.500277,1.628734,-4.869413,6.924013,-2.087308,-9.938886,9.425572,-8.186235,-9.467982,8.608696,5.108256,2.900049,9.956847,7.287974,5.727135,-1.692530,-9.768645,-4.636292,-6.558472,-8.192868,-1.727250,9.807996,-0.084446,-3.772434,4.474491,-1.589959,-3.733822,8.651470,-6.628182,3.090071,8.188343,-5.488503,7.018051,-8.262109,6.910827,4.280325,1.426739,4.625121,-2.164990,3.399002,2.357073,-2.853462,5.750827,-5.623609,-9.127525,9.348655,4.019986,-5.729704,-3.330062,8.270048,5.929277,9.934871,3.549583,-6.193867,-8.621735,0.786250,-7.646701,1.207630,-7.202661,5.492711,3.900061,-3.828982,-8.058781,1.729740,1.246410,-6.803975,7.065328,-4.890974,-5.394251,-4.131854,-8.835910,1.839858,-6.059578,-3.250575,-3.315024,9.076537,-3.269030,-1.536056,-4.600870,9.917817,-7.143213,-7.319158,6.136275,-3.077843,-2.235260,-2.786997,2.023960,7.085503,-6.599117,-6.216028,1.596349,-4.483127,3.870028,-4.020461,-7.328636,5.695469,-8.665301,7.205850,-4.127684,0.508242,-6.148245,1.374885,0.934180,6.309046,-1.958805,-7.590782,-5.019074,0.496238,-8.206531,8.925707,6.867308,8.588458,6.016584,2.371428,8.904576,-0.571704,-2.308859,5.699464,-6.070422,9.490758,-6.000157,-3.833891,-2.251684,-5.462816,1.616376,-0.223463,-6.353146,-7.902343,-9.618490,-7.944567,3.653118,1.439004,-0.403637,2.568759,-6.953666,-5.254808,2.339916,4.813368,-4.874693,-5.072786,0.164184,3.483907,-5.488029,5.805069,1.637114,-6.506009,-6.785240,7.260234,-2.096660,9.431911,3.913674,9.658760,-9.508747,3.919071,-0.623509,2.469120,-5.560483,-6.568539,-6.374166,8.279792,7.069896,-3.269561,1.786556,-9.635744,0.001069,-7.575607,2.538024,2.035963,-4.595283,4.934204,-0.945655,0.456841,1.848051,1.648183,1.347829,2.519089,2.468727,8.414362,0.478957,-2.609832,6.584629,-3.342834,7.720291,2.944743,-3.904642,-0.671065,4.494375,6.492267,3.088413,-5.672041,6.507089,1.074648,-4.782278,9.863321,4.949587,-1.737346,1.571695,6.972759,-9.365913,-2.531124,8.144374,7.345528,-1.604155,7.090211,2.776290,3.083924,-4.447930,1.203585,8.138417,-1.073411,5.395576,4.540499,6.364325,0.582646,6.079027,-0.759436,-2.493287,6.296899,-4.939249,9.022703,5.024582,-0.504201,8.157702,-0.805341,5.906788,0.206277,4.427813,6.740509,-1.277945,-1.194179,-6.052011,-5.964434,-1.399685,-0.166158,9.451576,-6.608753,-9.594545,-4.785907,8.006739,-2.400209,3.526541,9.206253,-1.465709,-4.603219,1.969315,7.420623,8.058749,-2.018599,9.239746,1.631084,-6.329652,3.918653,-2.602880,8.820665,-7.571386,-8.483031,7.896884,-4.631141,-5.836802,-3.512068,7.133714,-9.083026,-6.932782,-8.319467,1.594814,-3.945361,-0.643596,-5.361373,4.742014,-5.098210,2.949990,9.249091,-9.257907,-6.507363,-6.684962,-0.102625,-0.996734,1.021986,1.001816,7.595315,2.119040,1.441297,1.501913,-9.450490,0.425411,2.956502,-9.282520,3.124119,-1.533278,2.224703,8.269346,2.915604,-0.401826,-7.259293,-7.737841,-7.251750,6.832623,7.990997,8.585342,5.477659,-7.446444,8.912126,7.499616,1.999296,9.279348,4.831009,-5.612727,-4.990854,7.095285,7.262528,-6.520737,2.866392,8.444569,4.657384,-4.291312,7.758565,2.268528,3.389993,5.447982,-2.479784,-6.898130,0.056268,-2.223913,5.556515,-8.971247,-0.674451,5.832567,-0.561077,-6.802717,6.013074,-7.173416,-2.049768,-7.985377,5.335150,-6.012411,-9.000557], dtype = "float32")#candidate|5868|(1280,)|const|float32
const_5869 = relay.const([5,8,-3,-7,8,-3,-2,-5,-8,-9,-2,1,-7,3,3,2,5,3,10,5,1,4,-4,4,-2,5,1,-9,-2,-6,6,4,9,-9,9,-6,3,-6,9,-9,4,-4,-1,-5,-7,1,-8,-7,4,7,-10,-6,3,10,-3,-2,4,-1,-8,9,7,3,4,-4,5,-2,2,-8,1,8,10,10,-5,8,-7,-1,6,10,3,8,3,5,-9,4,-2,5,-2,5,-8,-3,9,-7,-9,4,-1,1,6,3,8,7,-10,3,9,-9,2,-2,-7,7,8,-7,-6,4,2,-9,-3,-2,1,4,5,7,-7,-8,7,-8,9,-3,2,8,3,6,-4,-8,6,-4,-5,-8,-9,-7,-4,-1,-8,9,-2,-4,4,10,10,4,-9,-7,-3,-1,3,-9,10,-1,6,10,9,-10,6,5,-9,-2,-9,-7,3,-5,3,-5,-5,3,8,-7,9,-10,-1,-9,-3,-1,9,7,5,2,5,2,6,3,-9,9,-10,-3,5,9,4,-2,-7,8,-10,-9,8,9,7,5,2,3,6,-1,9,-1,-2,-5,4,3,4,1,3,3,1,5,-4,3,6,1,8,6,4,10,-7,-4,-5,10,-6,-8,-2,10,1,6,-9,-3,-10,8,-2,-2,3,9,-10,8,3,2,-8,3,-8,-9,7,-4,10,-1,-4,3,-10,5,-3,-7,-8,-2,-3,-8,-6,-8,8,10,-5,2,5,-7,10,-6,-7,-1,-3,-3,-10,7,-9,-6,6,5,-6,-3,4,7,-3,9,5,-7,3,-5,5,8,7,-9,2,6,-2,-1,8,2,-1,1,1,4,-2,-10,1,8,-1,-10,-2,-1,7,3,-1,7,8,-8,10,4,1,6,1,9,-3,-5,7,-9,1,8,-9,-4,6,5,-1,5,-4,-3,7,6,-1,4,10,-2,9,3,-6,-2,-8,-8,7,-3,6,-5,8,-4,-6,-8,-6,-9,10,-3,-8,9,-4,-7,2,-4,-3,-5,4,-1,10,9,8,10,-10,4,-10,6,-2,6,10,-2,1,-6,-7,-5,4,4,10,10,9,-9,-7,-4,7,-2,-10,-2,4,-3,-2,-9,-2,10,8,-3,-4,-7,-9,-1,-1,-5,-7,-1,4,-3,4,-5,-6,-8,7,-3,-8,-3,3,5,-6,6,-7,4,5,-8,-9,5,7,2,-9,-6,-7,-3,-2,-4,-7,10,9,3,-3,-1,3,-10,1,6,-6,6,1,4,6,-2,8,8,7,-9,4,5,-8,-2,8,9,-2,9], dtype = "int32")#candidate|5869|(480,)|const|int32
call_5867 = relay.TupleGetItem(func_5241_call(relay.reshape(const_5868.astype('float32'), [16, 80]), relay.reshape(const_5869.astype('int32'), [480,]), ), 6)
call_5870 = relay.TupleGetItem(func_5245_call(relay.reshape(const_5868.astype('float32'), [16, 80]), relay.reshape(const_5869.astype('int32'), [480,]), ), 6)
output = relay.Tuple([bop_5849,call_5867,const_5868,const_5869,])
output2 = relay.Tuple([bop_5852,call_5870,const_5868,const_5869,])
func_5895 = relay.Function([var_5848,], output)
mod['func_5895'] = func_5895
mod = relay.transform.InferType()(mod)
var_5896 = relay.var("var_5896", dtype = "float32", shape = (6, 6, 3))#candidate|5896|(6, 6, 3)|var|float32
output = func_5895(var_5896)
func_5897 = relay.Function([var_5896], output)
mutated_mod['func_5897'] = func_5897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4522_call = mod.get_global_var('func_4522')
func_4524_call = mutated_mod.get_global_var('func_4524')
call_5945 = relay.TupleGetItem(func_4522_call(), 0)
call_5946 = relay.TupleGetItem(func_4524_call(), 0)
var_5959 = relay.var("var_5959", dtype = "float32", shape = (11, 6, 3))#candidate|5959|(11, 6, 3)|var|float32
bop_5960 = relay.not_equal(call_5945.astype('bool'), var_5959.astype('bool')) # shape=(11, 6, 3)
bop_5963 = relay.not_equal(call_5946.astype('bool'), var_5959.astype('bool')) # shape=(11, 6, 3)
func_3947_call = mod.get_global_var('func_3947')
func_3948_call = mutated_mod.get_global_var('func_3948')
call_5971 = func_3947_call()
call_5972 = func_3947_call()
uop_5977 = relay.sinh(var_5959.astype('float32')) # shape=(11, 6, 3)
func_4834_call = mod.get_global_var('func_4834')
func_4836_call = mutated_mod.get_global_var('func_4836')
call_5981 = relay.TupleGetItem(func_4834_call(), 1)
call_5982 = relay.TupleGetItem(func_4836_call(), 1)
func_5630_call = mod.get_global_var('func_5630')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_5983 = func_5630_call()
call_5984 = func_5630_call()
uop_5987 = relay.log2(uop_5977.astype('float64')) # shape=(11, 6, 3)
func_2393_call = mod.get_global_var('func_2393')
func_2394_call = mutated_mod.get_global_var('func_2394')
call_5999 = func_2393_call()
call_6000 = func_2393_call()
func_1543_call = mod.get_global_var('func_1543')
func_1548_call = mutated_mod.get_global_var('func_1548')
var_6002 = relay.var("var_6002", dtype = "int32", shape = (330,))#candidate|6002|(330,)|var|int32
var_6003 = relay.var("var_6003", dtype = "float32", shape = (1274,))#candidate|6003|(1274,)|var|float32
call_6001 = relay.TupleGetItem(func_1543_call(relay.reshape(var_6002.astype('int32'), [5, 6, 11]), relay.reshape(var_6002.astype('int32'), [5, 6, 11]), relay.reshape(var_6003.astype('float32'), [1274,]), ), 2)
call_6004 = relay.TupleGetItem(func_1548_call(relay.reshape(var_6002.astype('int32'), [5, 6, 11]), relay.reshape(var_6002.astype('int32'), [5, 6, 11]), relay.reshape(var_6003.astype('float32'), [1274,]), ), 2)
uop_6010 = relay.log(uop_5977.astype('float64')) # shape=(11, 6, 3)
func_3397_call = mod.get_global_var('func_3397')
func_3398_call = mutated_mod.get_global_var('func_3398')
call_6035 = func_3397_call()
call_6036 = func_3397_call()
func_3397_call = mod.get_global_var('func_3397')
func_3398_call = mutated_mod.get_global_var('func_3398')
call_6040 = func_3397_call()
call_6041 = func_3397_call()
func_5260_call = mod.get_global_var('func_5260')
func_5262_call = mutated_mod.get_global_var('func_5262')
call_6042 = func_5260_call()
call_6043 = func_5260_call()
var_6051 = relay.var("var_6051", dtype = "float32", shape = (11, 6, 3))#candidate|6051|(11, 6, 3)|var|float32
bop_6052 = relay.left_shift(uop_5977.astype('uint8'), relay.reshape(var_6051.astype('uint8'), relay.shape_of(uop_5977))) # shape=(11, 6, 3)
output = relay.Tuple([bop_5960,call_5971,call_5981,call_5983,uop_5987,call_5999,call_6001,var_6002,var_6003,uop_6010,call_6035,call_6040,call_6042,bop_6052,])
output2 = relay.Tuple([bop_5963,call_5972,call_5982,call_5984,uop_5987,call_6000,call_6004,var_6002,var_6003,uop_6010,call_6036,call_6041,call_6043,bop_6052,])
func_6058 = relay.Function([var_5959,var_6002,var_6003,var_6051,], output)
mod['func_6058'] = func_6058
mod = relay.transform.InferType()(mod)
mutated_mod['func_6058'] = func_6058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6058_call = mutated_mod.get_global_var('func_6058')
var_6060 = relay.var("var_6060", dtype = "float32", shape = (11, 6, 3))#candidate|6060|(11, 6, 3)|var|float32
var_6061 = relay.var("var_6061", dtype = "int32", shape = (330,))#candidate|6061|(330,)|var|int32
var_6062 = relay.var("var_6062", dtype = "float32", shape = (1274,))#candidate|6062|(1274,)|var|float32
var_6063 = relay.var("var_6063", dtype = "float32", shape = (11, 6, 3))#candidate|6063|(11, 6, 3)|var|float32
call_6059 = func_6058_call(var_6060,var_6061,var_6062,var_6063,)
output = call_6059
func_6064 = relay.Function([var_6060,var_6061,var_6062,var_6063,], output)
mutated_mod['func_6064'] = func_6064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4864_call = mod.get_global_var('func_4864')
func_4866_call = mutated_mod.get_global_var('func_4866')
call_6144 = relay.TupleGetItem(func_4864_call(), 0)
call_6145 = relay.TupleGetItem(func_4866_call(), 0)
func_4261_call = mod.get_global_var('func_4261')
func_4264_call = mutated_mod.get_global_var('func_4264')
var_6151 = relay.var("var_6151", dtype = "uint32", shape = (1890,))#candidate|6151|(1890,)|var|uint32
call_6150 = relay.TupleGetItem(func_4261_call(relay.reshape(var_6151.astype('uint32'), [1890,])), 4)
call_6152 = relay.TupleGetItem(func_4264_call(relay.reshape(var_6151.astype('uint32'), [1890,])), 4)
func_5759_call = mod.get_global_var('func_5759')
func_5761_call = mutated_mod.get_global_var('func_5761')
call_6156 = relay.TupleGetItem(func_5759_call(), 1)
call_6157 = relay.TupleGetItem(func_5761_call(), 1)
output = relay.Tuple([call_6144,call_6150,var_6151,call_6156,])
output2 = relay.Tuple([call_6145,call_6152,var_6151,call_6157,])
func_6158 = relay.Function([var_6151,], output)
mod['func_6158'] = func_6158
mod = relay.transform.InferType()(mod)
var_6159 = relay.var("var_6159", dtype = "uint32", shape = (1890,))#candidate|6159|(1890,)|var|uint32
output = func_6158(var_6159)
func_6160 = relay.Function([var_6159], output)
mutated_mod['func_6160'] = func_6160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4834_call = mod.get_global_var('func_4834')
func_4836_call = mutated_mod.get_global_var('func_4836')
call_6162 = relay.TupleGetItem(func_4834_call(), 0)
call_6163 = relay.TupleGetItem(func_4836_call(), 0)
func_3947_call = mod.get_global_var('func_3947')
func_3948_call = mutated_mod.get_global_var('func_3948')
call_6167 = func_3947_call()
call_6168 = func_3947_call()
output = relay.Tuple([call_6162,call_6167,])
output2 = relay.Tuple([call_6163,call_6168,])
func_6176 = relay.Function([], output)
mod['func_6176'] = func_6176
mod = relay.transform.InferType()(mod)
output = func_6176()
func_6177 = relay.Function([], output)
mutated_mod['func_6177'] = func_6177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3397_call = mod.get_global_var('func_3397')
func_3398_call = mutated_mod.get_global_var('func_3398')
call_6212 = func_3397_call()
call_6213 = func_3397_call()
output = call_6212
output2 = call_6213
func_6220 = relay.Function([], output)
mod['func_6220'] = func_6220
mod = relay.transform.InferType()(mod)
mutated_mod['func_6220'] = func_6220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6220_call = mutated_mod.get_global_var('func_6220')
call_6221 = func_6220_call()
output = call_6221
func_6222 = relay.Function([], output)
mutated_mod['func_6222'] = func_6222
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6308 = relay.var("var_6308", dtype = "int32", shape = (15, 8, 10))#candidate|6308|(15, 8, 10)|var|int32
var_6309 = relay.var("var_6309", dtype = "int32", shape = (15, 8, 10))#candidate|6309|(15, 8, 10)|var|int32
bop_6310 = relay.multiply(var_6308.astype('int32'), relay.reshape(var_6309.astype('int32'), relay.shape_of(var_6308))) # shape=(15, 8, 10)
output = relay.Tuple([bop_6310,])
output2 = relay.Tuple([bop_6310,])
func_6320 = relay.Function([var_6308,var_6309,], output)
mod['func_6320'] = func_6320
mod = relay.transform.InferType()(mod)
mutated_mod['func_6320'] = func_6320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6320_call = mutated_mod.get_global_var('func_6320')
var_6322 = relay.var("var_6322", dtype = "int32", shape = (15, 8, 10))#candidate|6322|(15, 8, 10)|var|int32
var_6323 = relay.var("var_6323", dtype = "int32", shape = (15, 8, 10))#candidate|6323|(15, 8, 10)|var|int32
call_6321 = func_6320_call(var_6322,var_6323,)
output = call_6321
func_6324 = relay.Function([var_6322,var_6323,], output)
mutated_mod['func_6324'] = func_6324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5455_call = mod.get_global_var('func_5455')
func_5457_call = mutated_mod.get_global_var('func_5457')
call_6427 = relay.TupleGetItem(func_5455_call(), 0)
call_6428 = relay.TupleGetItem(func_5457_call(), 0)
output = relay.Tuple([call_6427,])
output2 = relay.Tuple([call_6428,])
func_6434 = relay.Function([], output)
mod['func_6434'] = func_6434
mod = relay.transform.InferType()(mod)
output = func_6434()
func_6435 = relay.Function([], output)
mutated_mod['func_6435'] = func_6435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6456 = relay.var("var_6456", dtype = "float64", shape = (8, 14, 1))#candidate|6456|(8, 14, 1)|var|float64
uop_6457 = relay.asinh(var_6456.astype('float64')) # shape=(8, 14, 1)
func_3315_call = mod.get_global_var('func_3315')
func_3316_call = mutated_mod.get_global_var('func_3316')
call_6472 = relay.TupleGetItem(func_3315_call(), 0)
call_6473 = relay.TupleGetItem(func_3316_call(), 0)
bop_6488 = relay.not_equal(uop_6457.astype('bool'), relay.reshape(var_6456.astype('bool'), relay.shape_of(uop_6457))) # shape=(8, 14, 1)
func_4719_call = mod.get_global_var('func_4719')
func_4721_call = mutated_mod.get_global_var('func_4721')
call_6515 = relay.TupleGetItem(func_4719_call(), 0)
call_6516 = relay.TupleGetItem(func_4721_call(), 0)
output = relay.Tuple([call_6472,bop_6488,call_6515,])
output2 = relay.Tuple([call_6473,bop_6488,call_6516,])
func_6519 = relay.Function([var_6456,], output)
mod['func_6519'] = func_6519
mod = relay.transform.InferType()(mod)
var_6520 = relay.var("var_6520", dtype = "float64", shape = (8, 14, 1))#candidate|6520|(8, 14, 1)|var|float64
output = func_6519(var_6520)
func_6521 = relay.Function([var_6520], output)
mutated_mod['func_6521'] = func_6521
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6580 = relay.const([[-7.442312,-7.298209,2.543889,-7.734139,-8.406783,-6.434991,-8.569722],[0.781869,8.656879,-5.147335,7.953286,-4.237591,4.557986,5.645791],[-4.426328,4.937319,-7.721522,-5.288255,8.378875,6.568163,-8.622537],[5.359567,0.163470,4.217904,-1.349304,-4.537430,-3.225318,-8.824013],[4.759691,-2.623119,-3.251605,-4.056887,1.126082,-3.289637,3.928016],[-7.521423,-3.336880,-7.095593,3.492690,-8.583802,-8.505841,4.059065]], dtype = "float32")#candidate|6580|(6, 7)|const|float32
uop_6581 = relay.log2(const_6580.astype('float32')) # shape=(6, 7)
func_6434_call = mod.get_global_var('func_6434')
func_6435_call = mutated_mod.get_global_var('func_6435')
call_6587 = relay.TupleGetItem(func_6434_call(), 0)
call_6588 = relay.TupleGetItem(func_6435_call(), 0)
func_6434_call = mod.get_global_var('func_6434')
func_6435_call = mutated_mod.get_global_var('func_6435')
call_6597 = relay.TupleGetItem(func_6434_call(), 0)
call_6598 = relay.TupleGetItem(func_6435_call(), 0)
func_2174_call = mod.get_global_var('func_2174')
func_2177_call = mutated_mod.get_global_var('func_2177')
const_6600 = relay.const([8.581726,7.525349,-3.210459,5.330954,-3.950849,6.854131,1.005970,0.733395,-7.264374,1.800365,-9.933302,1.624898,-3.034046,-8.319889,8.633453,-9.209534,-8.712446,6.118351,3.028273,-6.366894,0.898413,-3.609342,-9.754405,-3.755927,8.923195,4.056819,-1.409358,6.568069,-6.986214,-9.168336,0.659604,-9.428068,6.674969,6.267896,-9.197510,-9.601493,6.133358,-0.091048,-1.844962,-9.540039,9.205572,4.024117,-3.095163,-8.986551,-1.738520,3.070855,9.189739,2.557481,7.916678,9.603305,-2.897028,1.673262,-7.620811,-4.762891,0.397108,6.918201,-6.625773,-8.235529,6.022286,1.971529,3.266509,6.721840,3.370191,3.827988,2.624469,-4.832369,-7.105093,7.452354,-3.649625,2.795576,9.159014,-7.509596,-5.271734,-6.219301,6.425130,6.657412,-6.438370,9.952789,-6.514736,-1.043558,5.326662,4.334310,8.758066,-2.105897,-4.324898,9.210898,-4.612488,2.158877,-5.785324,-4.859342,-2.603944,-9.204096,7.332338,-9.642053,0.471693,1.559900,7.446575,-9.071842,-1.115598,-8.681273,9.960090,-5.863999,2.127222,-0.021066,5.331455,6.463682,-7.004301,8.508602,6.743902,2.590463,-0.354195,9.485442,-0.402183,-2.793578,1.003536,3.478836,-5.853717,-7.857417,-3.003242,4.680239,-3.536958,8.516073,8.565544,-0.658800,-3.753918,5.992965,-9.628782,-8.203159,-7.142116,8.952777,-9.499242,-2.184433,-3.655555,-1.609405,3.883497,2.869765,0.140268,4.614643,9.337222,4.635970,0.194304,-3.353060,-9.858392,-5.664429,-4.485585,-6.371309,5.369924,2.458030,8.924511,-1.259028,-3.499792,-3.434663,-5.159125,-5.888250,6.361513,1.538858,-1.186282,0.583008,-9.507501,3.423790,9.840229,3.050321,0.807921,4.915211,5.169136,0.071843,4.620311,6.131489,0.337298,6.910060,5.227824,-9.198162,-0.193347,-9.526126,5.854803,1.519227,7.779515,0.968455,-5.099996,-9.240613,-9.394184,7.662453,3.378748,7.788314,-1.853082,-9.695153,8.909494,2.320039,-1.895429,2.757080,4.673054,-9.028581,4.129566,8.077196,-3.391183,8.779934,-1.812721,-4.405030,5.920761,-2.758432,-9.518334,-8.517753,6.254217,-7.163303,7.951484,-4.139147,-6.322209,-8.730178,-7.942540,8.162067,6.031073,-1.665941,7.825002,2.146120,-3.366266,-9.992407,-4.590529,8.594094,-2.266859,1.364124,3.627667,2.456112,4.935486,4.047555,6.514857,-8.983782,-7.424317,-7.361453,-3.390138,-5.977817,-5.114260,1.063675,6.557848,-5.994611,-9.574512,-5.290496,4.536899,-3.645335,2.645770,3.535148,-9.083050,1.757581,-0.255241,5.216917,4.466209,9.525008,-6.969936,6.305609,6.503424,-9.118972,9.606070,7.810817,-3.381819,8.094440,-6.873756,-4.061444,6.550941,6.142690,-1.392047,-8.080481,-4.166528,3.880925,-1.262001,3.801401,-9.926385,-8.324209,-3.953245,0.128872,4.933288,-2.219252,0.318232,-4.197903,-9.251796,-0.829302,-1.284451,-9.717405,-5.169922,-5.342786,-3.945063,0.027155,0.883354,1.350981,5.874573,-1.886975,2.150139,-4.728608,4.287420,1.088554,-7.445384,-6.119069,-9.912918,-4.328444,-4.927823,-6.717842,-0.193608,-5.324023,3.940218,1.786930,-7.687300,5.727825,-8.186915,-8.942037,-7.011076,9.169242,3.488576,-9.707156,-1.751402,-0.075033,4.045009,-0.939779,-5.231179,3.602202,-3.126732,9.684447,-9.251528,-3.925995,-3.171901,-6.505944,6.614002,-8.948384,-1.178177,-7.273909,7.257809,5.176256,6.935040,-7.036420,-5.142741,1.979287,-7.171581,5.911230,2.194958,6.403050,-0.872280,6.196525,5.627591,-0.871281,-4.367010,-7.786563,-6.568618,-3.109518,5.896222,2.549115,-7.256201,-0.013092,8.729866,0.552840,-5.896888,3.896677,-1.996980,-2.379154,-7.454030,6.685641,7.975851,-8.463009,-7.434461,-1.630983,8.592268,0.898572,-7.708419,-3.022937,-5.775054,8.282417,-0.231784,5.212769,4.340259,-6.626325,5.292122,-2.771163,4.227346,-4.251995,1.139009,-5.796719,-3.847038,-4.069334,3.925204,2.568575,-0.853189,-9.879611,9.716485,3.193917,6.104756,-2.877641,-2.434453,-9.418807,4.619185,1.586982,9.739909,5.343725,8.969629,-1.007641,-7.917325,-6.051979,-0.678940,4.854803,0.931652,-1.826707,-3.678551,8.141219,4.588817,-9.869914,-6.394819,0.448115,6.814042,7.242441,-3.412702,-6.337423,9.870662,9.935773,6.063140,5.258628,-3.601981,-8.081147,-5.940317,3.878247,9.821267,-3.256855,4.856958,3.609034,-0.406171,8.612568,-5.855186,0.640364,8.980142,-7.102321,4.896488,9.334672,5.365621,-1.563253,0.957427,-6.171101,-9.753022,-3.362691,-5.687963,-7.964320,-1.133248,-0.348881,1.146176,5.999679,-4.937398,-6.502598,1.032702,5.605737,1.876814,6.753179,3.226221,0.662457,-1.671857,9.889766,6.111739,-1.978665,-9.331261,-3.414103,-4.699334,-0.376248,6.903092,2.383422,-4.700260,-5.348004,-2.106886,-7.816885,5.824903,3.443759,0.128357,-1.660057,5.249372,-4.516570,8.312278,1.980036,-4.897067,2.513617,-1.129329,3.519698,2.331808,-0.865261,2.304691,-0.300195,-1.337234,-0.144692,-5.740334,-9.173304,5.860310,2.116126,-5.196195,6.699052,-4.513795,-1.190984,4.869323,5.989381,9.550933,-1.890184,-5.303917,5.313411,7.574152,-7.068668,7.206903,7.622171,-2.371380,9.686855,9.760347,1.248766,9.225200,6.523470,0.096932,-1.752301,-0.601900,1.718356,5.417844,-8.685410,0.574395,-4.466329,1.720404,6.579096,7.928735,-6.323157,5.248502,-4.125630,-9.680525,1.432669,5.128672,-6.022836,0.878131,-9.388664,3.374251,4.159512,-9.394054,5.088985,5.282549,0.649598,3.044964,0.701027,4.603526,-5.413269,4.484401,-2.363975,0.045528,3.406544,-0.656847,5.200676,-5.521520,-5.094167,-0.738583,-7.839720,6.353741,-3.350214,-5.383040,1.073227,-8.465611,6.801992,-1.962489,-0.052257,-8.145610,-0.207775,9.859005,-1.364474,-5.088208,-9.998694,-6.992148,-7.233176,-3.412503,2.579737,-7.138847,6.932438,-0.645863,8.006411,-4.155962,-5.362467,6.025270,3.972941,-8.108443,-0.847084,9.650304,5.961156,9.509255,5.857683,6.625591,-5.944791,4.560143,-1.562418,-8.798117,-2.643359,7.854069,-1.952506,5.395973,4.048499,2.233875,-8.509167,1.608140,7.357448,6.691687,-4.333136,1.251389,8.709921,-4.374769,-9.261591,7.303942,5.937693,4.730768,0.674519,-0.646661,-3.813352,-0.273001,-9.965173,-1.254527,-5.254467,-7.949582,-9.144638,-7.128376,-4.490690,8.037291,4.706478,-6.932704,9.193318,-4.590861,-7.899153,-4.100996,0.630273,-8.064006,-4.710857,9.214095,-9.431518,9.670675,9.205711,-6.611007,9.068812,-4.868688,-9.901740,6.498793,-9.225432,-9.859875,-0.403182,1.759038,7.642865,0.619925,-6.439516,3.373799,-5.705534,-4.380356,-3.201637,-7.651521,-8.813332,-2.216267,3.511090,2.645948,-8.479557,-4.868617,-0.068270,-3.543880,3.786046,2.314953,-3.939957,5.389035,8.932669,-3.161353,-4.678713,6.287942,6.914653,-4.421708,-6.188308,-2.565536,3.025673,7.632427,-7.891121,-3.707181,-1.692396,1.121274,-9.418891,9.921609,-9.244909,5.314264,-6.665763,-7.445227,-8.794594,-0.354600,-7.667423,4.875016,-6.609869,0.853693,-9.707742,-7.335698,2.487553,6.393027,-8.849837,3.958469,-7.698830,-1.345907,-7.899098,-7.688455,6.238546,3.311352,5.305930,4.771438,5.443966,-9.370304,-3.178067,-1.960536,9.941469,9.243108,6.042897,-1.999002,0.179863,-5.534830,4.340649,8.599234,-9.774786,-6.731639,2.173588,8.445200,-8.791232,9.004362,-9.586906,-1.271443,3.037155,-6.902386,8.393925,5.190608,3.800964,-5.313738,-2.314755,0.891714,-9.542288,9.881250,6.855340,-7.950236,-9.124655,0.323334,-6.953558,-3.530088,1.779776,-4.612118,-7.876908,-9.647465,5.516777,-8.736015,-7.745943,-8.277001,-5.910274,-1.060760,-0.673131,9.256753,-1.807167,-0.572746,9.501833,5.651487,1.534748,7.402778,0.190252,7.844016,-3.089081,-2.953300,9.490924,6.378852,-0.606371,8.134630,-8.011587,-7.433739,0.977812,7.036079,7.013042,-0.438383,-9.249285,-9.221740,4.129315,1.198957,-1.229497,-2.807828,-6.449436,4.487921,7.553420,-6.076852,7.028517,4.759153,9.117699,8.776313,1.031618,7.920900,8.929602,4.862864,7.236262,-1.781607,-2.539491,7.021246,-8.340739,-6.079159,7.438829,-2.395513,7.227567,-4.908975,-6.631965,2.256155,4.176510,-4.138016,8.992254,8.447867,-0.951288,-6.642586,-6.135803,2.186099,-4.025951,-8.539813,-2.975323,-4.939070,-4.886407,-0.680843,9.977190,-5.433682,-1.541318,7.091774,-8.511228,-8.794232,5.419837,-2.377647,-2.597598,-5.752033,5.359735,6.192098,8.836795,3.777981,-3.272594,0.716912,8.663834,-2.200448,-3.266087,1.656511,-0.139618,1.056572,-2.174791,2.543425,8.886530,1.620373,-5.693996,5.013565,2.611237,-7.849544,-6.164682,8.693860,9.627861,-7.823500,6.343729,7.112742,4.321334,6.641607,-7.818045,4.032193,4.825094,-6.395417,7.532889,6.119500,-2.567195,-0.578056,5.946213,-5.592172,8.324291,-8.204301,3.125834,-0.380227,-7.065649,-7.671979,-7.980364,2.411150,1.782745,9.025086,2.437629,5.485625,-2.824618,-0.210286,5.722678,9.455989,2.397358,6.023626,1.808083,-2.648992,-2.891713,-2.354692,-2.298016,-2.138346,9.449627,-9.223663,-5.235865,-7.993578,9.220926,7.349429,5.085919,6.761572,-0.383807,0.325733,-1.796788,-7.288800,6.296115,7.980023,-2.624099,4.530726,2.598923,-4.611069,5.140061,9.652602,6.836485,2.261637,5.798517,-3.355530,6.334767,6.809375,3.124274,-7.850768,-5.943990,-7.704660,0.625487,-4.806725,7.842175,8.548178,4.959088,6.948427,4.889586,7.361474,9.676416,-8.380738,-3.573451,-4.779011,5.178268,-4.295729,-3.006663,-6.791024,-9.945192,-3.895922,0.656968,-6.755461,-4.492234,-8.723667,-8.576100,-5.841131,8.809802,-7.130707,-6.227465,4.944415,-0.472907,3.402675,-6.971275,-3.605168,-7.132239,-4.661509,-2.307125,-5.850620,-2.449387,-7.055557,6.568643,-9.308319,-6.074669,-1.538832,3.106486,-0.418572,8.655933,-7.029238,-8.448872,-0.057050,9.041630,-0.854019,6.894990,5.375953,6.201930,-7.822495,-0.813281,0.619924,9.724431,-9.470756,2.991859,-1.453233,-3.949505,-8.060347,-3.944674,-4.038480,9.545868,3.657556,1.476779,-9.589209,0.849663,5.694155,7.925619,-6.770832,-8.502993,3.979358,4.631319], dtype = "float32")#candidate|6600|(980,)|const|float32
var_6601 = relay.var("var_6601", dtype = "int32", shape = (2, 240))#candidate|6601|(2, 240)|var|int32
call_6599 = relay.TupleGetItem(func_2174_call(relay.reshape(const_6600.astype('float32'), [10, 7, 14]), relay.reshape(var_6601.astype('int32'), [480,]), ), 0)
call_6602 = relay.TupleGetItem(func_2177_call(relay.reshape(const_6600.astype('float32'), [10, 7, 14]), relay.reshape(var_6601.astype('int32'), [480,]), ), 0)
bop_6617 = relay.greater_equal(call_6597.astype('bool'), relay.reshape(call_6587.astype('bool'), relay.shape_of(call_6597))) # shape=(1, 6, 3)
bop_6620 = relay.greater_equal(call_6598.astype('bool'), relay.reshape(call_6588.astype('bool'), relay.shape_of(call_6598))) # shape=(1, 6, 3)
output = relay.Tuple([uop_6581,call_6599,const_6600,var_6601,bop_6617,])
output2 = relay.Tuple([uop_6581,call_6602,const_6600,var_6601,bop_6620,])
func_6626 = relay.Function([var_6601,], output)
mod['func_6626'] = func_6626
mod = relay.transform.InferType()(mod)
mutated_mod['func_6626'] = func_6626
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6627 = relay.var("var_6627", dtype = "int32", shape = (2, 240))#candidate|6627|(2, 240)|var|int32
func_6626_call = mutated_mod.get_global_var('func_6626')
call_6628 = func_6626_call(var_6627)
output = call_6628
func_6629 = relay.Function([var_6627], output)
mutated_mod['func_6629'] = func_6629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3947_call = mod.get_global_var('func_3947')
func_3948_call = mutated_mod.get_global_var('func_3948')
call_6631 = func_3947_call()
call_6632 = func_3947_call()
const_6633 = relay.const([[[3.953250,-6.163393,5.536226],[4.994237,-7.315885,-3.159155],[-4.367041,2.059377,-4.220545],[-7.438552,-3.754954,0.850850],[-0.060858,1.387356,2.910968],[6.244884,2.649254,-1.126718]],[[-8.115865,2.912242,7.409962],[-6.711238,1.167001,-8.989755],[8.405991,3.090729,-8.514436],[6.526319,-8.471700,1.208831],[4.204435,4.426132,6.226051],[7.011878,9.355285,-2.571574]],[[2.186502,5.596261,6.483468],[-2.422172,-1.093837,-8.749489],[-6.616512,1.157816,-0.803024],[-3.406573,6.184150,-5.691172],[3.462464,-2.076725,3.934797],[6.492946,8.664198,1.738446]],[[1.350209,-7.495755,-8.430329],[-6.634799,-2.002231,6.192515],[9.601701,-8.833619,7.964862],[5.353683,-3.359442,-9.309752],[-0.405295,-3.289075,-4.530341],[-8.248687,1.267209,2.271603]],[[4.419928,-6.126041,-0.638855],[-1.993517,9.685896,-8.469276],[-8.189399,7.681016,-1.009920],[-5.996853,-8.181888,-0.972307],[-9.278307,-8.639516,0.804956],[6.814022,2.504939,-6.599082]],[[-6.941484,3.942369,7.139711],[-6.647250,0.042731,5.610031],[3.989140,3.658855,-6.107462],[-2.002551,-0.063432,2.994024],[8.853178,8.040471,-0.976405],[-3.134747,-0.642513,7.740011]],[[8.874349,1.269211,4.175282],[-0.577569,-8.208771,-0.177637],[-3.607124,-1.050948,9.898177],[-1.111226,-1.640110,-9.885139],[-2.493613,4.732801,-1.429324],[-6.378240,7.095164,9.975545]],[[-8.298056,2.796447,1.582058],[-0.746430,7.321018,-5.662176],[-8.811454,4.548770,-0.965132],[3.286739,-9.268017,-1.564902],[6.158015,-2.703310,-2.788416],[-9.653564,-5.910492,-8.769440]],[[5.171627,4.106454,8.886305],[-4.817095,-5.358257,-8.027194],[7.523352,8.933923,0.611896],[-8.323288,9.840431,3.287605],[-0.577523,-1.311819,7.130852],[-3.712981,9.607914,0.336414]],[[-1.110279,-7.477211,2.489136],[8.961289,0.982424,-4.129748],[-7.833984,2.412954,-5.971892],[-8.095461,-4.007690,7.242762],[9.509041,0.277185,6.567302],[9.172822,-5.006887,-0.524867]],[[-6.664558,-7.944515,4.074002],[-9.413959,3.649189,6.720702],[-9.554945,7.465673,-1.148216],[2.212167,-5.247920,5.640174],[7.511609,7.578860,-9.228812],[-9.786736,-6.106375,-4.291721]],[[3.882256,7.504858,6.088519],[-2.690097,-1.684914,-8.716593],[-5.052844,-8.773582,-1.156337],[-2.748420,-1.088175,5.241519],[-0.005306,-9.434272,-1.252946],[-8.306642,3.885906,8.725257]]], dtype = "float32")#candidate|6633|(12, 6, 3)|const|float32
bop_6634 = relay.logical_xor(call_6631.astype('int16'), const_6633.astype('int16')) # shape=(12, 6, 3)
bop_6637 = relay.logical_xor(call_6632.astype('int16'), const_6633.astype('int16')) # shape=(12, 6, 3)
func_4748_call = mod.get_global_var('func_4748')
func_4752_call = mutated_mod.get_global_var('func_4752')
var_6646 = relay.var("var_6646", dtype = "uint64", shape = (264,))#candidate|6646|(264,)|var|uint64
var_6647 = relay.var("var_6647", dtype = "int32", shape = (1, 330))#candidate|6647|(1, 330)|var|int32
const_6648 = relay.const([6.416075,-0.140745,1.046427,2.163456,7.575190,6.601723,-5.259287,7.989465,7.222183,6.666029,-2.228162,8.139240,2.896064,-0.658641,7.625217,-0.299888,-6.300674,1.555892,-4.175938,-8.181756,-6.665122,-6.525535,3.580035,-6.840307,4.868916,-1.120842,5.817206,-3.421652,7.330081,-7.358976,-1.384390,7.683515,0.077674,5.761448,7.502081,5.701080,1.828178,-1.925466,1.929115,6.416870,3.379409,-1.481156,8.908123,9.452848,-0.092569,2.442403,-8.326228,7.855352,-4.462327,-5.490416,1.566458,3.038999,1.486242,9.259798,-4.603242,8.167796,-7.486871,-6.187182,8.536434,1.100665,1.110154,-8.064722,7.255005,9.189038,-4.791925,-5.555821,0.316045,-3.488463,5.837501,-3.149516,0.985125,8.300394,1.527600,9.993302,5.192297,-9.482146,-7.039356,4.018824,0.729111,9.823023,-7.900445,8.629248,2.430941,-0.202519,8.201415,-3.420381,-7.111116,0.373103,7.749873,-9.412665,0.080962,-8.794058,-1.651942,3.239225,-7.158721,8.229484,-0.646049,1.585001,2.072670,5.732050,-7.215862,2.550573,2.521298,-5.717123,2.648976,-1.411638,-8.885513,-8.174348,-5.587778,-8.305293,-3.196271,5.679448,-9.913024,-9.074919,-6.743252,-1.832715,9.562301,5.874008,-1.053256,-1.541300,2.332794,-7.868982,5.797710,-9.012013,8.494614,-2.955785,-5.087120,-6.925757,-3.862085,-7.197005,-7.878205,9.570722,-6.734064,9.729275,6.489652,3.903769,-5.548521,-2.287714,-1.789415,6.411274,6.858996,-6.449567,8.321929,-6.635933,4.447047,-2.297436,0.182054,-1.499529,-1.175786,0.530888,3.654687,-5.570482,-2.891357,5.992546,1.091623,-4.897308,-9.190792,8.454184,-4.492415,-8.691946,-7.609860,6.381315,-5.599820,-8.112933,0.916120,-8.588946,-1.320893,-7.825865,4.170082,8.932458,-8.457254,5.789694,-0.026156,-2.447257,-3.238064,1.438106,7.348569,5.038527,-7.459815,1.349332,1.083660,-0.466781,-9.848810,-3.004480,-1.125528,5.233674,-7.612090,0.409903,0.964509,9.495907,-8.818977,-5.176342,6.496721,-4.327755,4.858865,-4.705402,1.942406,-5.613353,3.708341,-6.262461,2.369221,5.492887,-7.599368,-4.697261,-7.877911,-8.288234,-6.544925,1.582349,-5.131338,9.058909,0.513121,-0.212988,-8.362680,-1.049116,8.335067,6.681983,-9.208774,-3.364060,-5.861303,-3.466513,-4.809776,0.972987,-4.402835,1.183723,-3.829125,-0.204928,-7.940235,3.605044,-3.864140,-2.705251,-6.104731,-5.764803,-5.916278,3.965599,1.035685,-3.758377,-6.137005,0.420158,-8.309941,4.637753,4.821526,-3.324995,-7.483443,2.371177,9.889245,2.943007,0.184057,4.244769,-6.221797,-9.253674,-0.422821,-2.492054,0.718241,0.899949,-4.642302,-7.211485,8.817225,4.068671,-6.075463,-2.080507,-0.300409,9.643860,3.722385,-0.657853,-8.363569,4.827090,9.136241,8.072366,8.815403,-8.361477,-6.942472,-8.188997,5.914801,7.121473,-7.844786,0.706406,4.292706,-8.180941,5.264217,4.176719,-1.544333,2.741987,-9.200207,-1.358309,2.247150,2.856828,2.980501,7.305704,4.171859,3.454555,-1.491253,-8.283224,7.312739,-4.621074,6.242188,-2.777457,4.334740,5.050711,1.687191,0.417101,-2.761688,-0.176158,-6.212406,-9.507545,-5.126092,0.631508,8.875645,2.988117,0.069846,0.498862,8.791072,-4.383188,6.330343,-8.633569,2.953839,-7.636614,-7.725032,3.309186,-5.356930,-4.553038,7.901401,-9.842639,8.047130,-8.299179,2.390092,-9.519655,8.888343,7.416518,-6.773931,3.764024,-6.200672,-0.634326,-9.164631,4.196091,9.051556,-8.625635,-4.562682,5.693892,-9.418544,-1.592453,-0.708443,-2.964563,3.690632,-0.882760,8.271580,4.004605,9.640267,-6.698331,0.470686,8.817986,0.091717,-0.835400,-4.151437,1.411418,3.697398,-5.533173,-5.536598,8.967610,6.705169,-7.186810,-3.674941,-2.932315,5.078851,0.092881,-7.894496,8.368913,-6.845116,6.072851,-7.777718,1.034457,-9.032603,6.729225,-7.426700,-1.094785,-4.537021,-5.910890,-1.481008,6.689471,5.124158,0.245074,0.435408,6.900982,-7.703067,-2.599887,-6.235132,-7.723697,1.727807,4.248365,-5.003330,5.572385,-0.057473,3.630674,-5.891757,-9.984190,-6.274004,-8.389172,7.055555,9.356468,-1.377736,-0.783441,-3.206732,-1.192809,-9.445333,0.753474,9.837579,2.128639,7.473071,4.672959,2.301163,8.967637,6.445133,4.795893,-5.909043,-5.742878,-3.852123,3.124345,9.226060,7.297690,6.330712,-8.875616,3.447217,8.949675,1.767913,2.834859,-7.885256,-4.388942,-9.028372,-8.683954,-9.260468,8.784450,6.132669,6.869039,-4.504792,-4.002692,-5.647726,0.593668,2.287052,-8.129651,4.371520,0.168076,-0.418902,3.556348,-7.387547,3.230980,-4.536164,2.245400,7.502377,-7.705340,3.864033,-8.816666,5.289765,-9.465574,-7.208312,3.158475,-8.554926,4.374041,-2.697149,9.937536,5.245358,-3.030645,1.485528,1.509272,-4.618789,9.678446,1.678518,2.667928,8.132027,1.452042,-1.370762,2.928761,2.012615,-7.655681,5.810556,-2.300001,-3.677143,-8.859589,3.122948,0.243640,9.873446,1.446827,-1.294322,9.920319,-8.008515,1.449713,-1.166706,0.677342,7.304085,4.734420,3.698747,1.054730,-2.066126,-2.268077,-2.568264,-2.839700,-0.510978,-9.825695,-7.220169,-4.532830,-9.629451,-1.074373,-8.819716,-3.082908,3.587198,-7.538846,-2.261141,-8.719399,4.456293,-2.029693,-9.325645,5.611699,-1.658540,9.407871,2.101262,-0.121553,7.215756,-0.639398,-6.815389,-4.801342,5.889858,3.487976,-6.528209,-0.156892,-8.515940,3.713450,5.187407,8.092263,-6.985820,0.819090,-0.391333,8.076828,-0.597785,4.879047,6.645257,-6.790724,-5.937940,-1.575503,0.217788,-2.356924,4.561512,8.826754,-0.220736,-1.803239,6.431233,-7.936022,1.307467,-5.755209,-1.952828,3.810422,4.002701,-9.463693,2.368158,-6.748075,8.540304,-4.049546,3.256964,-2.721408,-6.841275,-4.326084,-9.626338,2.388197,0.633637,7.084592,0.907348,5.533471,-6.014727,-9.643374,-1.211869,-6.772279,3.106886,-3.917624,-5.784650,-6.169517,0.589188,7.245522,1.081998,-1.600832,-7.146921,-8.098288,-3.468354,-2.228305,2.624569,-8.253337,1.812497,-5.948225,1.882633,6.370023,9.935445,-8.624778,2.431490,-9.229992,-9.286471,5.147241,-8.375913,-7.642973,6.047152,1.431292,5.166767,-5.129157,-3.522232,3.121232,9.267964,-1.067640,-2.639543,9.289773,-5.614666,-0.925601,-2.211876,3.430100,-7.268243,8.696890,-2.717845,-3.303546,-1.973690,-8.320472,2.118703,-9.712902,1.074140,9.778621,1.819536,8.385372,-8.463869,-3.264885,5.619190,9.064792,5.692265,6.972433,1.296327,5.747514,-3.865618,8.572581,7.388826,-3.839938,-5.639778,-3.515572,-8.418889,4.187475,-2.636407,-9.844660,8.886232,0.775576,-1.075413,-6.731842,-3.227420,-8.681980,0.002485,5.860181,5.206668,9.621076,6.050140,-2.332972,7.519730,3.364032,0.256910,0.574251,1.998145,-7.181488,5.900465,-4.133231,-9.067872,-7.437102,-9.862515,7.785049,1.910908,2.233840,-7.630835,2.708095,1.219765,7.186947,-4.446354,6.605203,4.959176,1.103025,-8.723708,9.914175,-9.815889,-4.677823,9.882034,9.467942,3.861751,0.601158,-3.163626,2.644875,9.575718,-5.462197,-6.647484,-7.391784,4.386500,-9.846546,9.454005,0.939274,-6.752076,-6.884789,4.960463,-1.158962,-0.612822,-3.721453,-1.334997,-8.865042,9.304000,3.380873,-9.582133,6.982126,-0.413796,8.717309,8.937846,3.116824,-8.819875,2.145013,9.656485,-5.218058,-2.635560,-6.849184,9.016865,-3.736857,-0.178740,-5.527238,7.937695,-3.334207,9.855434,8.686800,-1.186532,-1.489751,-2.757954,-3.484124,-3.880992,8.316056,-8.684985,7.679486,-3.518563,-2.217351,-2.181480,1.186746,-1.788318,3.983055,8.766443,9.588391,6.420934,9.592603,6.618671,-0.099611,-0.638559,-9.903875,7.537985,-3.002509,-2.493207,-7.817767,6.326417,-1.593274,-1.233147,-7.524444,9.352644,1.747165,8.006789,-3.151054,0.667265,-5.902486,8.171206,-0.789452,4.327721,-8.135994,4.214826,-4.246961,5.686641,-2.564046,-8.258119,3.686483,-1.466428,-9.287260,3.066183,5.648507,7.573854,0.935876,-8.902696,-5.421057,-8.297946,2.241723,3.579787,2.007994,0.217730,-5.132604,-0.960890,7.134540,9.678419,-6.510996,-7.808751,4.429866,-7.218925,-4.355024,-9.284293,-7.868203,-9.002599,-4.622738,9.073923,-1.044769,3.631947,-0.477954,-3.066794,9.150084,9.827432,0.567749,9.336869,-9.682310,3.586751,-5.945887,1.748617,-5.569186,3.715038,6.138080,-4.438933,0.159753,8.511124,1.224834,1.773200,8.980244,8.156342,-7.134809,3.211733,-2.811963,-7.776887,-5.045433,1.029164,0.467182,3.693054,7.985114,-7.321454,1.394313,-6.712143,1.717630,4.449351,-2.106021,0.665678,6.297678,5.615021,4.885745,5.072496,0.243399,7.182426,1.505788,-6.098347,-5.476066,0.673782,-6.377426,7.988330,7.095203,-4.449806,9.324760,-2.532483,-8.498375,-4.492633,4.034564,5.163146,-6.426321,9.770142,0.920596,-2.719576,-4.747990,6.995617,6.459222,5.817931,-9.144899,-2.679060,5.252194,-5.476746,1.971178,-3.863409,-3.626453,3.470451,-4.856987,-1.063340,-4.475618,7.608285,-9.400499,7.306726,3.576722,-3.133510,-6.779839,3.136613,-6.187060,0.209913,-7.348375,-1.645896,7.243928,8.250421,9.063111,6.613666,-5.506997,-7.445400,-9.451093,-4.021546,-7.371722,8.898590,-6.316605,5.671053,-7.211450,-3.299777,-9.371552,-7.211998,-8.253330,5.764272,2.934627,-4.862512,0.166898,3.349755,-0.967714,-0.049532,-3.343238,-4.935115,-5.405325,8.306877,-2.846602,-5.206524,3.767560,9.353292,-0.696059,1.628321,8.089223,-5.983493,-7.328362,-7.136126,4.734137,-2.696052,-5.087392,-2.263718,-3.900894,-8.970002,4.317651,0.914989,4.920085,1.393337,5.435396,0.715695,-2.726698,5.177631,8.932164,6.266729,-9.883062,5.818863,-8.608357,-7.096197,6.082945,-6.320466,8.211782,3.160366,-3.356145,-2.943979,0.245531,-9.998118,4.129058,0.290315,-4.919196,-4.413983,-5.920879,7.459074,8.519632,5.913491,-5.672144,-4.767260,5.122919,-2.734344,-7.165369,6.930801,9.450656,8.840703,1.896826,8.281160,9.248877,6.738859,3.435197,9.905158,-7.047644,-4.733462,-4.006460,-2.121118,-4.593805,6.162752,6.624675,1.144521,-2.763520,-1.395797,7.543484,2.243128,3.380595,-8.420158,-6.635135,1.077133,-6.903539,1.390665,-0.724039,-9.680572,3.765016,8.854648,-6.816037,5.335039,6.045258,-0.905705,4.049637,-4.991198,-9.345546,-3.027131,-2.301782,9.653008,0.147953,0.651075,-4.768317,-5.744342,6.882191,0.803952,-8.138209,-0.884249,-8.341699,-9.176380,9.625251,-2.007903,8.041446,-0.095972,-4.091367,-6.534860,-7.358696,-6.541657,5.648672,-3.841462,-1.190517,-5.609539,-4.359609,5.791949,-9.308722,9.539790,-5.128264,3.673819,-5.744682,0.412636,-8.812910,-7.487680,9.784509,6.775968,4.510704,8.080767,4.243003,5.035686,-9.808773,-4.705046,-1.277181,-1.836821,1.391681,5.621798,9.171341,3.871213,-6.046084,8.673113,-5.713191,8.866626,-1.450073,6.535208,-5.122664,-2.350666,3.358216,1.858950,-6.005868,-4.351028,-3.407255,0.753041,-2.104051,1.110227,-6.812300,-6.824634,2.540214,-7.887866,-4.878064,-1.015021,-2.119743,-2.848970,2.918138,-7.570438,4.292010,-5.507845,-3.597437,-2.131754,-1.488986,6.890347,-0.183099,1.253790,9.360271,3.371077,3.112777,7.054899,-1.218532,-5.173027,8.585061,3.884260,7.886814,-6.079284,6.745642,5.898919,-1.155869,-0.424010,-8.881755,4.789635,-5.402122,-2.278502,-9.411319,3.137844,3.156612,-3.473207,-9.087004,6.474879,6.738429,0.685930,-5.128557,-7.307458,-0.757588,5.001201,-9.989231,-5.470942,-9.350198,3.641779,-2.735818,8.274343,-2.822757,2.582208,-8.879342,-1.816775,-7.286024,-6.309285,-4.258295,-4.839878,-7.237492,-2.823209,-1.925568,7.262186,0.246905,4.225948,3.137785,3.168866,-0.131176,7.178771,4.350947,7.670603,6.013235,6.095956,-0.596250,-3.793181,3.423949,-3.009845,-8.582060,-2.866681,-7.095381,0.973221,5.215596,9.639210,5.171113,-1.204069,-3.912200,3.439662,0.620654,-9.326539,-7.734372,-9.988637,9.151694,6.123784,-5.177308,0.998312,2.213966,8.633607,8.525816,-6.971363,4.939985,1.030786,-2.227231,4.961328,4.093203,-9.625154,3.447272,-0.157727,6.816286,-1.345455,2.142597,-6.767938,-1.444910,9.139392,-3.581747,0.314410,-1.690500,4.547922,2.860925,2.121508,-9.260455,-3.818601,-4.445211,-7.994640,-5.368449,-2.217150,-2.203188,-8.113867,-5.229844,-5.360369,6.743309,-7.165648,2.617312,1.358310,-8.681386,8.922184,-8.117371,-7.392762,-5.035287,-9.146742,6.070695,7.979108,4.165922,1.799099,4.144894,-8.624830,8.591641,2.818868,-5.132043,2.263828,3.217990,-1.120614,-2.869893,-0.366030,9.219409,5.866592,6.177993,5.539505,-4.038269,-9.197254,-9.884271,-8.217937,1.923749,-4.401514,-6.690623,3.749395,4.463047,2.777010,-1.121306,-0.059855,-2.251903,0.701985,-8.089050,-4.194123,8.132133,6.460069,9.767015,6.879108,5.749391,8.037237,1.196129,5.985324,-3.491916,-3.195024,-9.072324,-8.095440,-8.874708,8.344406,-6.923357,6.165521,-1.917411,-8.267626,-8.209144,4.732626,0.909737,-4.349999,6.641931,1.121858,-0.176859,-5.801437,4.424885,-7.784711,-2.889199,-2.118434,2.180419,-7.926957,-1.337866,-9.405703,-3.400833], dtype = "float32")#candidate|6648|(1274,)|const|float32
call_6645 = relay.TupleGetItem(func_4748_call(relay.reshape(var_6646.astype('uint64'), [264,]), relay.reshape(var_6647.astype('int32'), [330,]), relay.reshape(const_6648.astype('float32'), [1274,]), ), 6)
call_6649 = relay.TupleGetItem(func_4752_call(relay.reshape(var_6646.astype('uint64'), [264,]), relay.reshape(var_6647.astype('int32'), [330,]), relay.reshape(const_6648.astype('float32'), [1274,]), ), 6)
func_5561_call = mod.get_global_var('func_5561')
func_5562_call = mutated_mod.get_global_var('func_5562')
call_6653 = func_5561_call()
call_6654 = func_5561_call()
output = relay.Tuple([bop_6634,call_6645,var_6646,var_6647,const_6648,call_6653,])
output2 = relay.Tuple([bop_6637,call_6649,var_6646,var_6647,const_6648,call_6654,])
func_6667 = relay.Function([var_6646,var_6647,], output)
mod['func_6667'] = func_6667
mod = relay.transform.InferType()(mod)
mutated_mod['func_6667'] = func_6667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6667_call = mutated_mod.get_global_var('func_6667')
var_6669 = relay.var("var_6669", dtype = "uint64", shape = (264,))#candidate|6669|(264,)|var|uint64
var_6670 = relay.var("var_6670", dtype = "int32", shape = (1, 330))#candidate|6670|(1, 330)|var|int32
call_6668 = func_6667_call(var_6669,var_6670,)
output = call_6668
func_6671 = relay.Function([var_6669,var_6670,], output)
mutated_mod['func_6671'] = func_6671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4864_call = mod.get_global_var('func_4864')
func_4866_call = mutated_mod.get_global_var('func_4866')
call_6682 = relay.TupleGetItem(func_4864_call(), 0)
call_6683 = relay.TupleGetItem(func_4866_call(), 0)
output = call_6682
output2 = call_6683
func_6716 = relay.Function([], output)
mod['func_6716'] = func_6716
mod = relay.transform.InferType()(mod)
mutated_mod['func_6716'] = func_6716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6716_call = mutated_mod.get_global_var('func_6716')
call_6717 = func_6716_call()
output = call_6717
func_6718 = relay.Function([], output)
mutated_mod['func_6718'] = func_6718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5031_call = mod.get_global_var('func_5031')
func_5033_call = mutated_mod.get_global_var('func_5033')
call_6752 = relay.TupleGetItem(func_5031_call(), 0)
call_6753 = relay.TupleGetItem(func_5033_call(), 0)
const_6761 = relay.const([[[-6.447724,1.352837,-9.505397],[2.726695,4.134105,3.791193],[2.451298,-9.418991,-8.384071],[-8.180323,-0.784817,-5.224559],[8.660500,5.598493,-6.814981],[9.841602,1.507208,8.502757]],[[-3.171156,8.989151,-9.671997],[2.234074,-1.103554,-2.881671],[-3.903748,9.007430,-0.077618],[8.874403,4.798110,-5.098710],[-9.682984,-2.265964,-8.480704],[5.095550,-8.412279,-3.813902]],[[3.353669,-8.864150,-0.679695],[4.781242,-0.763361,0.222060],[-5.589303,-7.228033,1.028139],[1.132393,-5.587271,3.088973],[1.128221,-3.618019,-2.882243],[3.629742,-2.252023,7.836045]]], dtype = "float64")#candidate|6761|(3, 6, 3)|const|float64
bop_6762 = relay.minimum(call_6752.astype('uint16'), const_6761.astype('uint16')) # shape=(3, 6, 3)
bop_6765 = relay.minimum(call_6753.astype('uint16'), const_6761.astype('uint16')) # shape=(3, 6, 3)
uop_6766 = relay.sigmoid(const_6761.astype('float32')) # shape=(3, 6, 3)
output = relay.Tuple([bop_6762,uop_6766,])
output2 = relay.Tuple([bop_6765,uop_6766,])
func_6780 = relay.Function([], output)
mod['func_6780'] = func_6780
mod = relay.transform.InferType()(mod)
output = func_6780()
func_6781 = relay.Function([], output)
mutated_mod['func_6781'] = func_6781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5260_call = mod.get_global_var('func_5260')
func_5262_call = mutated_mod.get_global_var('func_5262')
call_6787 = func_5260_call()
call_6788 = func_5260_call()
func_4164_call = mod.get_global_var('func_4164')
func_4165_call = mutated_mod.get_global_var('func_4165')
call_6789 = relay.TupleGetItem(func_4164_call(), 0)
call_6790 = relay.TupleGetItem(func_4165_call(), 0)
output = relay.Tuple([call_6787,call_6789,])
output2 = relay.Tuple([call_6788,call_6790,])
func_6807 = relay.Function([], output)
mod['func_6807'] = func_6807
mod = relay.transform.InferType()(mod)
mutated_mod['func_6807'] = func_6807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6807_call = mutated_mod.get_global_var('func_6807')
call_6808 = func_6807_call()
output = call_6808
func_6809 = relay.Function([], output)
mutated_mod['func_6809'] = func_6809
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6877 = relay.const([[[-1,-7,-6,10,6,5,2,-10,-7,-9],[5,-3,7,-8,9,6,-10,2,5,-10],[-9,-4,6,-5,9,10,-2,-5,-2,-5],[-10,10,-3,8,4,8,-10,6,6,-9],[-5,-9,3,-8,-8,6,4,-9,-10,-5],[-2,10,7,10,-7,-8,-7,1,-4,6],[2,9,-10,2,-5,4,4,-1,-10,-4],[-9,1,-3,7,3,-9,-5,-10,-7,3],[-1,-1,-3,-6,3,-1,-4,10,9,5],[1,5,-2,-1,9,-3,2,-5,-4,7],[-3,-10,3,4,-9,3,1,-6,-3,4],[-2,2,8,-9,10,-10,6,-10,1,-2]],[[1,10,3,6,2,8,6,-8,-1,7],[-4,-4,10,-1,8,-3,1,4,9,10],[2,7,-1,-4,-5,4,1,-10,-4,4],[-8,-2,10,5,-5,-5,4,-7,-9,7],[-4,-3,-7,-4,8,2,4,-7,9,6],[-6,5,2,-4,2,7,2,-1,-7,-9],[-4,2,-8,-4,10,3,10,-5,9,-7],[3,-9,8,-4,-4,9,-8,5,2,3],[1,6,-3,6,-4,-6,-9,-2,2,9],[10,5,-10,4,-2,-4,2,-4,2,-10],[5,3,-1,-10,-10,-1,8,10,6,2],[10,3,-7,-8,9,7,-4,-9,-5,7]],[[7,-8,4,6,10,10,-5,2,9,3],[8,3,10,6,-10,-3,-3,-5,6,8],[9,-6,2,10,-7,-1,-3,-8,8,-8],[-7,9,-1,6,4,-3,-4,1,8,7],[-4,-4,-5,-10,6,-3,-1,2,7,-9],[-4,5,-5,5,-8,1,-3,9,-7,2],[10,-6,-10,-5,8,7,8,1,-10,9],[9,2,-4,9,-1,-5,-6,6,-9,2],[-4,-1,-1,-8,-9,9,-6,1,1,3],[10,-6,7,4,-10,-3,-5,1,-7,9],[5,-5,8,-2,5,-4,3,1,10,6],[-4,-8,-5,7,7,9,1,-4,-9,9]],[[-4,-9,2,9,-7,-4,5,-10,-1,2],[10,-10,3,-3,4,6,-6,9,5,2],[2,-3,-7,5,9,-6,7,1,3,4],[-5,-7,7,8,1,-4,-5,-10,-1,2],[2,-10,-5,-3,-4,-6,-9,-1,-1,8],[1,7,-10,-2,-1,10,4,4,-10,8],[4,-4,-10,-9,8,-5,1,8,-6,-2],[-5,-2,-2,-10,3,-8,-3,2,-1,-4],[-10,9,10,1,-8,-5,-5,3,5,-2],[1,-7,-4,2,2,2,7,-1,9,-5],[7,9,8,3,-5,-2,-5,-5,-8,2],[-2,-1,-8,-6,-8,-1,10,9,1,-1]],[[-5,5,2,8,-4,9,7,-5,-4,-9],[1,-7,1,10,8,-8,-4,4,2,5],[2,-4,-6,3,1,2,3,4,5,-6],[5,5,-7,-5,-1,-5,-6,4,-7,10],[9,9,-1,-4,8,9,-5,3,3,1],[10,-1,-6,-6,9,2,-10,-10,5,-5],[-5,6,-9,2,-9,-10,-10,3,5,10],[7,-2,2,-6,-5,9,7,9,-6,-10],[3,-2,-2,-8,6,10,7,-10,5,7],[-9,9,-4,4,9,-3,-5,-3,1,3],[-9,-1,-9,7,-7,6,-3,-1,-3,-4],[-8,-5,3,-1,9,-4,-1,5,5,3]]], dtype = "int8")#candidate|6877|(5, 12, 10)|const|int8
var_6878 = relay.var("var_6878", dtype = "int8", shape = (5, 12, 10))#candidate|6878|(5, 12, 10)|var|int8
bop_6879 = relay.logical_xor(const_6877.astype('int8'), relay.reshape(var_6878.astype('int8'), relay.shape_of(const_6877))) # shape=(5, 12, 10)
output = relay.Tuple([bop_6879,])
output2 = relay.Tuple([bop_6879,])
func_6882 = relay.Function([var_6878,], output)
mod['func_6882'] = func_6882
mod = relay.transform.InferType()(mod)
var_6883 = relay.var("var_6883", dtype = "int8", shape = (5, 12, 10))#candidate|6883|(5, 12, 10)|var|int8
output = func_6882(var_6883)
func_6884 = relay.Function([var_6883], output)
mutated_mod['func_6884'] = func_6884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6900 = relay.var("var_6900", dtype = "float64", shape = (3, 4, 4))#candidate|6900|(3, 4, 4)|var|float64
const_6901 = relay.const([[[-2.223342,4.695657,-2.627240,-8.556368],[-5.839820,0.020143,-7.508552,4.620962],[-7.061228,5.168338,-3.858901,-9.525902],[-0.157680,-2.795641,-5.699824,1.084247]],[[-1.630062,7.575814,-6.478689,-7.206653],[-1.520283,-5.916718,0.255228,-6.659121],[-1.800116,-2.505571,-2.928202,7.797340],[5.814353,6.952646,3.297448,-4.705274]],[[-9.333427,-5.200017,6.680431,7.756588],[8.051861,2.684283,8.576940,-3.132085],[0.351167,5.907160,-8.436994,-1.376555],[-3.744642,8.065182,-1.097156,4.886611]]], dtype = "float64")#candidate|6901|(3, 4, 4)|const|float64
bop_6902 = relay.floor_divide(var_6900.astype('float64'), relay.reshape(const_6901.astype('float64'), relay.shape_of(var_6900))) # shape=(3, 4, 4)
uop_6906 = relay.sin(bop_6902.astype('float64')) # shape=(3, 4, 4)
func_3947_call = mod.get_global_var('func_3947')
func_3948_call = mutated_mod.get_global_var('func_3948')
call_6914 = func_3947_call()
call_6915 = func_3947_call()
output = relay.Tuple([uop_6906,call_6914,])
output2 = relay.Tuple([uop_6906,call_6915,])
func_6933 = relay.Function([var_6900,], output)
mod['func_6933'] = func_6933
mod = relay.transform.InferType()(mod)
mutated_mod['func_6933'] = func_6933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6934 = relay.var("var_6934", dtype = "float64", shape = (3, 4, 4))#candidate|6934|(3, 4, 4)|var|float64
func_6933_call = mutated_mod.get_global_var('func_6933')
call_6935 = func_6933_call(var_6934)
output = call_6935
func_6936 = relay.Function([var_6934], output)
mutated_mod['func_6936'] = func_6936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mod.get_global_var('func_5010')
func_5012_call = mutated_mod.get_global_var('func_5012')
call_6978 = func_5010_call()
call_6979 = func_5010_call()
func_6933_call = mod.get_global_var('func_6933')
func_6936_call = mutated_mod.get_global_var('func_6936')
var_6992 = relay.var("var_6992", dtype = "float64", shape = (48,))#candidate|6992|(48,)|var|float64
call_6991 = relay.TupleGetItem(func_6933_call(relay.reshape(var_6992.astype('float64'), [3, 4, 4])), 1)
call_6993 = relay.TupleGetItem(func_6936_call(relay.reshape(var_6992.astype('float64'), [3, 4, 4])), 1)
output = relay.Tuple([call_6978,call_6991,var_6992,])
output2 = relay.Tuple([call_6979,call_6993,var_6992,])
func_6995 = relay.Function([var_6992,], output)
mod['func_6995'] = func_6995
mod = relay.transform.InferType()(mod)
mutated_mod['func_6995'] = func_6995
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6996 = relay.var("var_6996", dtype = "float64", shape = (48,))#candidate|6996|(48,)|var|float64
func_6995_call = mutated_mod.get_global_var('func_6995')
call_6997 = func_6995_call(var_6996)
output = call_6997
func_6998 = relay.Function([var_6996], output)
mutated_mod['func_6998'] = func_6998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6716_call = mod.get_global_var('func_6716')
func_6718_call = mutated_mod.get_global_var('func_6718')
call_7008 = func_6716_call()
call_7009 = func_6716_call()
func_4671_call = mod.get_global_var('func_4671')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_7018 = func_4671_call()
call_7019 = func_4671_call()
func_5168_call = mod.get_global_var('func_5168')
func_5170_call = mutated_mod.get_global_var('func_5170')
var_7029 = relay.var("var_7029", dtype = "uint32", shape = (1890,))#candidate|7029|(1890,)|var|uint32
call_7028 = relay.TupleGetItem(func_5168_call(relay.reshape(var_7029.astype('uint32'), [1890,])), 1)
call_7030 = relay.TupleGetItem(func_5170_call(relay.reshape(var_7029.astype('uint32'), [1890,])), 1)
output = relay.Tuple([call_7008,call_7018,call_7028,var_7029,])
output2 = relay.Tuple([call_7009,call_7019,call_7030,var_7029,])
func_7048 = relay.Function([var_7029,], output)
mod['func_7048'] = func_7048
mod = relay.transform.InferType()(mod)
mutated_mod['func_7048'] = func_7048
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7049 = relay.var("var_7049", dtype = "uint32", shape = (1890,))#candidate|7049|(1890,)|var|uint32
func_7048_call = mutated_mod.get_global_var('func_7048')
call_7050 = func_7048_call(var_7049)
output = call_7050
func_7051 = relay.Function([var_7049], output)
mutated_mod['func_7051'] = func_7051
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7058 = relay.var("var_7058", dtype = "float64", shape = (4, 8, 7))#candidate|7058|(4, 8, 7)|var|float64
var_7059 = relay.var("var_7059", dtype = "float64", shape = (4, 8, 7))#candidate|7059|(4, 8, 7)|var|float64
bop_7060 = relay.divide(var_7058.astype('float64'), relay.reshape(var_7059.astype('float64'), relay.shape_of(var_7058))) # shape=(4, 8, 7)
func_6626_call = mod.get_global_var('func_6626')
func_6629_call = mutated_mod.get_global_var('func_6629')
var_7067 = relay.var("var_7067", dtype = "int32", shape = (480,))#candidate|7067|(480,)|var|int32
call_7066 = relay.TupleGetItem(func_6626_call(relay.reshape(var_7067.astype('int32'), [2, 240])), 1)
call_7068 = relay.TupleGetItem(func_6629_call(relay.reshape(var_7067.astype('int32'), [2, 240])), 1)
uop_7081 = relay.sin(var_7059.astype('float32')) # shape=(4, 8, 7)
output = relay.Tuple([bop_7060,call_7066,var_7067,uop_7081,])
output2 = relay.Tuple([bop_7060,call_7068,var_7067,uop_7081,])
func_7084 = relay.Function([var_7058,var_7059,var_7067,], output)
mod['func_7084'] = func_7084
mod = relay.transform.InferType()(mod)
mutated_mod['func_7084'] = func_7084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7084_call = mutated_mod.get_global_var('func_7084')
var_7086 = relay.var("var_7086", dtype = "float64", shape = (4, 8, 7))#candidate|7086|(4, 8, 7)|var|float64
var_7087 = relay.var("var_7087", dtype = "float64", shape = (4, 8, 7))#candidate|7087|(4, 8, 7)|var|float64
var_7088 = relay.var("var_7088", dtype = "int32", shape = (480,))#candidate|7088|(480,)|var|int32
call_7085 = func_7084_call(var_7086,var_7087,var_7088,)
output = call_7085
func_7089 = relay.Function([var_7086,var_7087,var_7088,], output)
mutated_mod['func_7089'] = func_7089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4949_call = mod.get_global_var('func_4949')
func_4950_call = mutated_mod.get_global_var('func_4950')
call_7116 = relay.TupleGetItem(func_4949_call(), 0)
call_7117 = relay.TupleGetItem(func_4950_call(), 0)
output = call_7116
output2 = call_7117
func_7131 = relay.Function([], output)
mod['func_7131'] = func_7131
mod = relay.transform.InferType()(mod)
mutated_mod['func_7131'] = func_7131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7131_call = mutated_mod.get_global_var('func_7131')
call_7132 = func_7131_call()
output = call_7132
func_7133 = relay.Function([], output)
mutated_mod['func_7133'] = func_7133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5347_call = mod.get_global_var('func_5347')
func_5348_call = mutated_mod.get_global_var('func_5348')
call_7154 = relay.TupleGetItem(func_5347_call(), 1)
call_7155 = relay.TupleGetItem(func_5348_call(), 1)
output = relay.Tuple([call_7154,])
output2 = relay.Tuple([call_7155,])
func_7163 = relay.Function([], output)
mod['func_7163'] = func_7163
mod = relay.transform.InferType()(mod)
mutated_mod['func_7163'] = func_7163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7163_call = mutated_mod.get_global_var('func_7163')
call_7164 = func_7163_call()
output = call_7164
func_7165 = relay.Function([], output)
mutated_mod['func_7165'] = func_7165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5455_call = mod.get_global_var('func_5455')
func_5457_call = mutated_mod.get_global_var('func_5457')
call_7184 = relay.TupleGetItem(func_5455_call(), 0)
call_7185 = relay.TupleGetItem(func_5457_call(), 0)
func_7048_call = mod.get_global_var('func_7048')
func_7051_call = mutated_mod.get_global_var('func_7051')
var_7198 = relay.var("var_7198", dtype = "uint32", shape = (1890,))#candidate|7198|(1890,)|var|uint32
call_7197 = relay.TupleGetItem(func_7048_call(relay.reshape(var_7198.astype('uint32'), [1890,])), 3)
call_7199 = relay.TupleGetItem(func_7051_call(relay.reshape(var_7198.astype('uint32'), [1890,])), 3)
output = relay.Tuple([call_7184,call_7197,var_7198,])
output2 = relay.Tuple([call_7185,call_7199,var_7198,])
func_7201 = relay.Function([var_7198,], output)
mod['func_7201'] = func_7201
mod = relay.transform.InferType()(mod)
mutated_mod['func_7201'] = func_7201
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7202 = relay.var("var_7202", dtype = "uint32", shape = (1890,))#candidate|7202|(1890,)|var|uint32
func_7201_call = mutated_mod.get_global_var('func_7201')
call_7203 = func_7201_call(var_7202)
output = call_7203
func_7204 = relay.Function([var_7202], output)
mutated_mod['func_7204'] = func_7204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3397_call = mod.get_global_var('func_3397')
func_3398_call = mutated_mod.get_global_var('func_3398')
call_7214 = func_3397_call()
call_7215 = func_3397_call()
output = call_7214
output2 = call_7215
func_7218 = relay.Function([], output)
mod['func_7218'] = func_7218
mod = relay.transform.InferType()(mod)
output = func_7218()
func_7219 = relay.Function([], output)
mutated_mod['func_7219'] = func_7219
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7252 = relay.var("var_7252", dtype = "float32", shape = (12, 16, 16))#candidate|7252|(12, 16, 16)|var|float32
var_7253 = relay.var("var_7253", dtype = "float32", shape = (12, 16, 16))#candidate|7253|(12, 16, 16)|var|float32
bop_7254 = relay.divide(var_7252.astype('float32'), relay.reshape(var_7253.astype('float32'), relay.shape_of(var_7252))) # shape=(12, 16, 16)
uop_7265 = relay.erf(bop_7254.astype('float64')) # shape=(12, 16, 16)
output = uop_7265
output2 = uop_7265
func_7272 = relay.Function([var_7252,var_7253,], output)
mod['func_7272'] = func_7272
mod = relay.transform.InferType()(mod)
mutated_mod['func_7272'] = func_7272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7272_call = mutated_mod.get_global_var('func_7272')
var_7274 = relay.var("var_7274", dtype = "float32", shape = (12, 16, 16))#candidate|7274|(12, 16, 16)|var|float32
var_7275 = relay.var("var_7275", dtype = "float32", shape = (12, 16, 16))#candidate|7275|(12, 16, 16)|var|float32
call_7273 = func_7272_call(var_7274,var_7275,)
output = call_7273
func_7276 = relay.Function([var_7274,var_7275,], output)
mutated_mod['func_7276'] = func_7276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7285 = relay.var("var_7285", dtype = "int16", shape = (9, 5, 7))#candidate|7285|(9, 5, 7)|var|int16
var_7286 = relay.var("var_7286", dtype = "int16", shape = (9, 5, 7))#candidate|7286|(9, 5, 7)|var|int16
bop_7287 = relay.minimum(var_7285.astype('int16'), relay.reshape(var_7286.astype('int16'), relay.shape_of(var_7285))) # shape=(9, 5, 7)
output = bop_7287
output2 = bop_7287
F = relay.Function([var_7285,var_7286,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7285,var_7286,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_78 = relay.var("var_78", dtype = "float64", shape = (11, 8, 3))#candidate|78|(11, 8, 3)|var|float64
uop_79 = relay.sinh(var_78.astype('float64')) # shape=(11, 8, 3)
output = relay.Tuple([uop_79,])
output2 = relay.Tuple([uop_79,])
func_99 = relay.Function([var_78,], output)
mod['func_99'] = func_99
mod = relay.transform.InferType()(mod)
mutated_mod['func_99'] = func_99
mutated_mod = relay.transform.InferType()(mutated_mod)
var_100 = relay.var("var_100", dtype = "float64", shape = (11, 8, 3))#candidate|100|(11, 8, 3)|var|float64
func_99_call = mutated_mod.get_global_var('func_99')
call_101 = func_99_call(var_100)
output = call_101
func_102 = relay.Function([var_100], output)
mutated_mod['func_102'] = func_102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_428 = relay.var("var_428", dtype = "uint32", shape = (2, 4, 14))#candidate|428|(2, 4, 14)|var|uint32
const_429 = relay.const([[[-7,-10,-6,-5,8,4,-2,-3,-9,6,-2,-10,8,-6],[6,-8,8,8,-1,-9,-2,-4,-1,-3,9,-10,2,-10],[5,7,-9,-2,3,9,5,-4,-10,3,-7,-6,8,7],[-8,-4,-2,-2,-6,-6,-8,-2,4,2,-6,7,-3,-10]],[[-1,-3,-2,9,6,5,-8,10,5,-1,-9,2,7,-9],[-4,-1,5,-1,-1,-1,4,10,6,-9,1,1,-2,7],[4,-10,-6,3,-5,8,-7,-2,6,4,-1,2,-1,-3],[-6,2,8,-8,3,4,8,-3,-3,-5,-8,-1,-1,2]]], dtype = "uint32")#candidate|429|(2, 4, 14)|const|uint32
bop_430 = relay.subtract(var_428.astype('uint32'), relay.reshape(const_429.astype('uint32'), relay.shape_of(var_428))) # shape=(2, 4, 14)
func_99_call = mod.get_global_var('func_99')
func_102_call = mutated_mod.get_global_var('func_102')
var_449 = relay.var("var_449", dtype = "float64", shape = (264,))#candidate|449|(264,)|var|float64
call_448 = relay.TupleGetItem(func_99_call(relay.reshape(var_449.astype('float64'), [11, 8, 3])), 0)
call_450 = relay.TupleGetItem(func_102_call(relay.reshape(var_449.astype('float64'), [11, 8, 3])), 0)
output = relay.Tuple([bop_430,call_448,var_449,])
output2 = relay.Tuple([bop_430,call_450,var_449,])
func_454 = relay.Function([var_428,var_449,], output)
mod['func_454'] = func_454
mod = relay.transform.InferType()(mod)
var_455 = relay.var("var_455", dtype = "uint32", shape = (2, 4, 14))#candidate|455|(2, 4, 14)|var|uint32
var_456 = relay.var("var_456", dtype = "float64", shape = (264,))#candidate|456|(264,)|var|float64
output = func_454(var_455,var_456,)
func_457 = relay.Function([var_455,var_456,], output)
mutated_mod['func_457'] = func_457
mutated_mod = relay.transform.InferType()(mutated_mod)
const_491 = relay.const([[[-8.224046,9.637714,-6.611147,9.958970,0.623770,4.607936,-3.245021,-1.411024,9.335586],[-0.051780,-5.477532,9.923889,9.223623,9.502898,-2.380694,-6.318533,7.704016,1.491570],[-3.931567,8.437706,6.304513,9.479705,-4.620193,9.116028,1.801265,-5.496639,-5.444680],[7.588367,1.207929,-2.874834,3.398965,-9.437304,2.936409,-1.502065,4.255392,4.558017],[3.394568,-8.316454,-2.876479,9.195281,3.304199,4.685789,1.410314,9.086632,-9.662595],[-9.101252,-8.358244,-4.554183,-1.006613,-4.684888,-0.485140,8.469278,-3.047964,2.973834],[3.556394,-8.120868,-2.096147,-0.355145,-3.458887,8.789769,-8.262649,2.345599,-4.704280],[-7.008755,-0.659979,-3.951255,-4.525184,-8.309336,0.139703,4.948034,-7.137374,3.423814],[-2.403989,-2.347986,7.117816,1.671884,7.107625,0.536168,-4.387651,2.274032,-2.090605],[3.886289,2.227933,9.098482,-6.636692,3.696707,1.599606,8.791198,-9.032059,-2.952340]],[[4.036495,4.639635,-5.850140,7.494651,-1.804397,-9.100774,-6.305856,3.863544,7.356231],[5.670142,-7.272759,8.980913,3.533003,1.337095,-1.325880,-5.332028,2.903209,4.227933],[-0.817347,-1.110926,3.898769,6.418910,-8.911826,1.880086,8.745515,6.597944,0.098396],[1.155933,-8.472386,-9.712173,3.340713,-0.606899,9.508870,-3.882549,-5.555041,-5.676236],[5.529570,-7.495603,9.509912,-1.362323,-0.871591,-0.529753,-7.614818,-6.990643,-5.401654],[0.313109,5.937092,-1.379276,4.775048,-2.914264,9.625105,6.223801,-0.007600,-3.159620],[8.993169,5.399449,3.119685,3.426630,6.757927,-7.028943,8.034382,7.886251,4.596460],[2.338266,9.215229,6.688833,-1.093014,2.201954,-7.613440,-4.682311,-9.530259,0.297488],[2.242326,3.187747,-8.257951,-2.530212,-2.550224,5.006549,3.302291,-5.922581,-6.574069],[5.207844,4.597605,-3.479564,6.234394,9.473985,-8.837865,8.374169,-1.043804,-7.573974]],[[-0.506715,-9.654556,7.562516,-8.923300,-3.383752,8.081011,-2.072115,9.920371,8.901812],[4.563924,7.428225,1.576533,6.324669,8.311893,6.008426,8.532345,8.309788,-5.175516],[5.725590,6.662408,-3.955811,-9.668184,-4.542864,-3.797992,0.198842,-4.424259,-7.022772],[-8.198777,-6.688398,8.869494,-6.303206,6.381700,-1.359339,-4.321707,-8.212848,4.220720],[-8.178370,-5.105833,-1.153621,-5.763647,-9.046092,-8.912875,-9.134201,1.570925,-6.051391],[0.481475,1.089990,-1.811082,-0.445738,7.962462,9.231445,2.572698,-5.995231,-9.144703],[-1.255521,7.769256,9.745863,-7.021483,-9.473191,-6.402278,-1.994552,3.512541,-9.475452],[-7.329313,-7.087254,3.878003,-4.282023,2.252151,-5.698691,3.407368,1.085972,-0.912388],[-5.974077,-3.582766,-8.446593,-5.068195,-2.006198,-4.727381,3.293058,-0.292330,-2.284693],[5.646669,-5.350367,3.944299,-6.491858,-8.761217,9.577137,-8.404648,0.231165,9.991622]],[[2.672369,-8.944051,1.486107,-8.690334,2.202021,5.801747,8.933981,5.218401,4.238759],[-8.056799,7.461774,6.860127,3.619341,5.708853,8.033435,-9.991051,-8.320164,-4.937305],[3.848172,-5.918107,5.184591,-8.338860,9.877372,7.143431,6.678972,-3.484984,-3.747517],[9.991670,-6.758998,-4.566921,8.322898,-7.279266,1.843285,-3.760727,-6.204997,-3.927800],[-6.786152,-6.690359,-1.238700,-2.708380,3.239103,-2.843486,6.906036,-6.887514,-3.455684],[9.512623,3.721160,0.994460,-7.552559,-8.650788,3.394500,6.104271,6.868321,2.216212],[3.327378,3.129538,-6.405005,-9.906775,-7.996464,1.988768,9.288366,-9.065893,5.442446],[2.210099,4.188204,-0.566481,-1.479300,-6.551313,3.645985,7.275106,-2.334367,9.449253],[6.341241,-8.808005,-8.634513,-7.666980,-4.602940,9.169268,1.026948,9.402357,-9.413329],[5.461694,0.411101,-0.418509,6.564407,1.231520,7.836899,-6.051554,-4.653915,-3.826342]],[[5.092660,-7.866862,8.531192,6.978576,2.544249,-0.265360,-9.342507,-3.630620,8.066329],[-0.891049,5.860248,-3.535966,-3.332705,1.716345,6.096674,-0.109100,-6.192929,-4.174490],[-7.332405,-9.445393,1.427250,4.826212,-8.254827,3.138492,-4.237391,-3.894233,-3.258787],[-3.068397,-6.776051,8.167074,2.271695,-3.099322,6.223629,-7.036492,-4.334591,0.152703],[4.732177,0.397468,-3.398061,6.445270,-8.604172,-7.110475,6.740918,8.005347,-7.571845],[7.951863,-8.686315,-6.519648,2.711935,6.247405,6.085544,8.981523,1.803362,8.218923],[0.586702,3.228734,-2.720124,-3.585397,-5.733824,2.798536,7.776055,1.998899,-8.351553],[9.852695,-5.634453,5.336835,2.398647,-4.729610,1.915174,-6.348706,-1.562709,-4.261815],[-3.525330,-7.287478,6.784343,7.867729,6.591285,-0.394632,-7.988512,7.513446,1.364306],[0.207026,7.598669,5.549090,4.035608,3.410016,9.913527,-3.881526,6.300652,1.169656]],[[1.464440,3.020371,7.452821,-5.207862,0.880057,-7.552968,7.685114,7.375126,7.828462],[9.762436,-5.866184,-0.311043,8.180033,3.649533,-7.995902,7.876574,-5.707948,-3.554001],[-0.397358,1.830592,-7.273427,-4.676150,2.689956,-8.136003,7.768225,9.982270,-5.268759],[7.318165,1.844651,-0.127908,9.207841,1.943841,-8.169978,7.965326,-2.779418,-6.480653],[-6.643704,-9.517563,-3.895756,-4.487955,5.896430,-2.041766,-3.695541,2.782149,-0.927699],[3.115046,0.984009,3.802330,-9.123138,-3.894276,-8.316497,8.359811,-4.756083,-3.352027],[-0.494726,-3.346998,1.052315,8.731003,-3.028950,9.641517,6.599787,9.183956,9.437372],[-9.723427,5.501327,-6.159969,-3.012531,1.599532,-1.730187,0.109772,-0.866980,-4.003577],[-2.181150,7.568545,-8.409572,-2.079449,9.409946,-7.632082,-5.275572,-5.500782,5.844868],[7.616821,-7.070170,-9.008980,6.325317,1.356156,5.886695,6.570619,-1.952999,3.931013]],[[3.428126,-8.840215,1.829404,5.547806,0.428397,1.215937,-6.054645,-7.044211,7.862963],[5.100133,3.819243,6.893618,-6.543967,-4.899135,8.138727,4.648195,0.747584,-9.896396],[-3.177770,9.724896,7.941308,1.381746,6.483652,8.187137,-0.736862,4.299130,5.598846],[0.220402,3.663391,-9.819770,5.306010,5.436669,8.964615,6.881569,8.855977,-2.520256],[0.269783,4.375888,5.042203,-0.968416,7.713031,1.819908,-3.217521,2.486325,7.641426],[-0.416046,6.624596,1.195349,6.498786,9.854508,2.978957,-7.467351,0.756239,-0.400425],[-1.317764,-5.389220,-0.196382,-2.529390,-6.095962,3.533938,-3.781904,-6.700562,7.754949],[-7.972876,-9.001463,-7.021568,2.486335,3.933777,-8.226026,-2.331549,-1.011861,-1.162870],[-4.624731,8.923196,-1.652900,-8.798735,-6.214006,4.010027,4.505030,2.261106,8.454883],[3.143962,-4.745060,9.822153,-7.269211,5.518203,-5.646962,-4.332510,-6.910059,-0.178505]],[[-1.804302,6.478206,9.841703,-0.842425,5.517301,3.445581,0.745581,8.013998,4.563074],[-7.517673,-8.896991,-3.873352,-2.995121,-2.515192,-7.595221,0.257906,1.207997,1.188098],[6.046553,5.104278,1.166316,6.517543,-5.022135,-2.458744,5.078446,5.891628,-6.164369],[5.739805,-9.656611,-7.651031,-6.389837,2.580695,-5.749803,-8.112116,7.385079,-7.152489],[-3.723551,4.421330,2.423140,-6.453299,7.045537,-5.064858,0.210017,-7.989559,0.151005],[-2.714295,-8.911246,-1.905386,7.775421,1.984038,-8.282083,3.637642,3.679332,0.684070],[4.722009,-9.589883,-7.669888,-5.360237,-8.035519,3.565444,9.858203,7.851326,-1.587807],[1.181688,-2.403407,-6.155889,-9.427143,-7.734874,-8.358538,-0.314893,4.825060,-2.555440],[-4.359681,-5.669019,3.816405,-7.706718,9.503646,8.126119,0.449172,5.558036,5.097602],[6.501347,-5.426213,2.812068,3.242992,-9.128089,-9.065345,-8.157641,0.700795,1.999760]],[[5.710028,-4.256118,0.470312,-6.527772,-6.215378,1.149046,4.737410,2.100404,-4.473541],[-9.870406,8.015455,-3.307603,-1.937832,-9.761043,7.584192,-4.764306,8.965877,-6.489229],[-4.143697,-0.356089,-6.561350,-7.365477,-0.267886,1.307709,5.002697,-2.868662,-1.159962],[-7.261513,-1.499515,5.108441,0.778287,-9.472358,-8.410817,8.255737,3.604211,2.645659],[4.441391,9.872877,0.580607,-9.124486,-4.720444,9.355577,-5.328090,5.458991,-2.504557],[-2.782554,3.537785,2.099803,6.598468,-8.193232,-7.929287,6.138794,-4.197033,9.022212],[8.768649,-9.956448,-2.947976,4.382931,0.055121,8.766083,9.147883,3.387604,-2.509385],[-0.764983,-8.319085,-2.693141,-0.980055,-3.105430,-2.388602,-6.833968,-5.573555,-9.562803],[6.331603,2.376413,-2.744457,-8.226093,-0.793280,-5.275835,-7.723660,0.281969,-8.614345],[5.993456,2.950885,3.291850,6.003316,7.487656,-9.404643,7.294489,6.634750,-1.866710]],[[0.782108,1.703455,6.228688,3.779338,-5.620378,-6.076868,-2.956965,8.118470,8.669892],[-5.312608,2.660610,-6.837874,6.396201,6.876039,-2.749916,-5.121793,-3.814098,-8.285287],[-7.192777,-6.962241,-6.993359,0.272393,-4.856530,-9.996614,6.382032,4.651466,-7.080586],[-3.991193,5.655945,5.088646,4.703712,7.266044,8.254019,9.300855,4.707649,0.895374],[-8.492320,7.917908,8.412906,6.902692,-6.703473,8.014510,-9.911260,-4.264767,0.245609],[-8.856394,4.994041,3.666226,1.710101,-4.494177,-5.324838,-0.171233,-9.535681,3.400278],[4.984086,-6.990044,8.320526,-1.478217,6.912702,4.281901,-1.058146,-7.414346,-2.587142],[6.853729,-1.797120,-9.917963,8.631227,-7.581319,-0.489707,0.632448,-1.759355,9.861375],[-4.189367,0.173351,-7.720655,-1.281092,-4.682426,3.686646,-9.072689,-6.270514,-6.516659],[8.901995,9.787373,-8.403868,-6.463012,7.106400,7.690209,-3.510259,2.077879,-1.743211]],[[7.646974,-4.321763,3.547162,-8.284810,-7.898168,-7.134192,4.622421,-0.089574,6.011321],[3.207900,1.784305,-6.424871,5.168374,-6.393745,6.721205,2.880719,6.286681,-0.590131],[3.854036,3.147346,-0.477307,-5.349625,1.391822,-3.835153,6.107007,-4.638060,8.190345],[-8.896877,-8.846832,0.603385,5.079835,-3.553199,-0.738890,9.421607,7.616087,-2.644205],[-1.015730,8.698463,3.497776,3.232327,4.062024,3.138055,-4.437917,-2.661452,-4.031120],[-1.913741,-7.317956,4.522513,-4.835121,-2.133747,2.000184,2.930379,3.841269,9.730546],[-4.814825,-1.482632,7.377329,-6.767947,1.239137,-2.220972,-8.346252,6.136236,1.580185],[-0.799594,3.134043,2.013455,0.066548,-5.296313,2.421025,2.624795,-5.941017,-9.545758],[-3.284959,-1.160023,5.844420,7.631651,3.090599,-5.704643,0.148460,-0.055956,3.937575],[0.473984,-7.400690,5.662020,-2.447986,-5.582122,-4.049734,-8.402203,3.503647,-7.797681]],[[5.731871,3.564923,-7.070519,0.148287,-3.333536,-2.185860,0.481685,-7.347965,-0.605335],[9.436751,-1.755368,1.996993,-1.650515,4.150177,-8.532792,-7.272250,-5.384911,1.981364],[1.489294,-3.687486,-0.798578,8.835015,7.315635,-7.021369,-2.814713,-9.508265,7.451569],[7.577388,2.090424,8.838393,9.167999,2.448890,2.272967,-8.527751,8.862362,-2.889049],[-6.083704,8.998964,3.445074,2.498342,4.200710,7.734281,7.338406,5.019291,4.346734],[9.176172,-8.233887,-1.677565,2.092095,1.595331,-8.302960,-6.661623,3.387270,-8.727080],[9.775177,-9.460688,8.512642,8.400526,1.140311,7.489633,-1.734368,3.695322,0.807843],[-6.233954,-6.527467,4.686809,-9.063295,7.846939,1.319778,-5.895447,8.516493,5.337630],[-7.453057,-3.657124,2.365210,8.042293,-0.188647,1.912622,-1.406853,-1.926482,8.920444],[8.995830,1.608442,1.803362,-5.456913,-7.043777,0.734902,-4.919797,-3.483333,8.482600]],[[-1.498472,3.306188,0.118914,-1.549749,1.947105,-9.047526,-9.941563,-2.321165,6.950823],[-1.420902,5.344974,7.981695,6.745114,3.643654,-9.031670,7.486980,0.024617,5.050295],[2.618045,-0.856958,-1.296836,9.998993,8.532612,0.111010,-3.788881,-8.243590,-3.022506],[-6.377863,-4.333363,7.588577,-7.433509,6.019815,-9.205193,-8.141564,8.156647,-4.101602],[7.091724,-5.893224,2.577368,3.577045,-1.144749,4.003230,-1.207814,-4.698839,5.037648],[6.418706,-9.129008,5.096566,-1.052256,2.517961,6.916739,3.885738,4.385734,1.224401],[9.607280,-6.122683,-3.772568,-0.034125,8.949087,2.432369,9.697814,-1.217168,-9.821339],[-2.065905,8.523135,-7.345289,5.248819,-3.312853,6.461325,8.543740,-2.418562,-9.348610],[0.425522,6.383343,7.226326,-5.742049,-4.970804,1.914792,-3.838967,5.935538,4.255714],[-0.821972,8.062585,2.160479,-4.688003,-3.185806,2.256545,-8.970892,1.776534,6.573928]]], dtype = "float64")#candidate|491|(13, 10, 9)|const|float64
var_492 = relay.var("var_492", dtype = "float64", shape = (13, 10, 9))#candidate|492|(13, 10, 9)|var|float64
bop_493 = relay.mod(const_491.astype('float64'), relay.reshape(var_492.astype('float64'), relay.shape_of(const_491))) # shape=(13, 10, 9)
func_454_call = mod.get_global_var('func_454')
func_457_call = mutated_mod.get_global_var('func_457')
var_503 = relay.var("var_503", dtype = "uint32", shape = (28, 4))#candidate|503|(28, 4)|var|uint32
const_504 = relay.const([6.244605,8.868072,8.181078,3.039504,-2.407902,9.198675,2.330713,4.551573,7.564308,-4.415649,5.371165,0.862719,-6.729679,7.953675,0.199883,-0.884031,5.003950,3.047247,4.941018,4.968772,3.920848,6.453334,4.517573,5.326787,-3.831137,8.087202,-5.835190,9.576099,-5.699554,-1.080253,-8.561966,-6.130317,-4.735571,-7.842317,7.483522,8.777674,-2.228424,0.974287,3.150794,-2.035677,-5.901221,5.451927,-8.504761,-0.205481,-0.229510,-7.983405,6.454180,-6.592598,7.039744,-2.375784,-8.936839,8.607114,-8.822374,-1.597224,8.150775,6.990808,-9.972139,1.365017,5.102081,0.665444,-9.917370,-8.032225,8.395718,-7.298733,-3.628164,0.865470,-9.390611,2.519588,8.046353,9.007111,8.267886,-8.757674,5.004902,-7.128934,7.377710,-0.872249,-2.371627,-3.336107,7.387480,-0.411963,8.148609,8.174119,-5.829025,-9.697024,-3.420776,6.088995,-0.601596,-7.638437,1.373367,-6.002275,-3.347676,-8.421497,5.910674,-7.707228,4.247778,-8.570804,-9.525633,5.759981,3.511807,-9.980245,3.729768,0.359793,-0.598487,6.984680,-7.724496,-2.060597,7.779969,0.179413,5.536803,7.065974,-0.403383,0.679531,5.407967,-5.712963,-2.326031,7.169270,-8.953357,1.171160,-4.817729,-1.126317,-4.884359,0.419240,4.120860,2.318529,8.188758,-7.767494,-8.603954,-2.389688,-7.401309,-9.027204,-4.331629,-1.717807,-8.091583,2.966620,-3.877993,-6.609782,-9.070643,-9.979464,-8.998053,0.429154,3.620827,-2.383845,0.565166,0.541316,4.004346,0.435768,7.560143,-8.058319,8.366599,-6.478625,8.843635,5.654271,5.592784,7.519250,7.040581,0.567067,-9.258452,-2.436039,-1.532259,1.826673,-4.544716,3.537119,-4.261272,8.870396,1.075175,-0.004126,-2.943884,8.624278,5.760047,-8.449225,2.774593,9.999733,9.301872,8.245780,-8.486568,1.863268,6.772042,-7.333186,-2.240785,-0.715257,-4.606047,-4.243378,-9.621628,-4.249213,-9.947388,-7.130413,-7.758255,-5.462717,0.823912,2.820375,-1.380282,-6.071908,-5.671277,-7.049400,0.817761,-4.807906,1.416459,-8.161627,-6.112476,7.367311,4.019090,-2.141459,-1.384836,7.748199,3.759970,2.851434,7.370513,1.562671,-7.830415,-8.694527,-6.539453,6.500408,8.536213,3.962744,-3.281820,1.979900,-3.060642,0.060921,-8.650080,1.287581,-1.821685,1.471181,-2.260250,5.248032,-0.280930,-5.790507,-4.475491,-4.495668,-9.921481,-2.668844,2.593937,-3.470961,9.427011,-0.121511,9.874455,0.454172,-4.743313,1.589172,-8.326651,5.222348,2.039774,8.259097,-3.243958,3.959397,-7.064899,8.454668,2.043003,8.097838,-6.243932,-2.766659,1.352033,5.820930,6.047111,1.447141,4.942286,-5.113565,-6.508226,-2.074564,-2.799593,1.533472,1.016054,-0.700121,5.209933,-2.394572], dtype = "float64")#candidate|504|(264,)|const|float64
call_502 = relay.TupleGetItem(func_454_call(relay.reshape(var_503.astype('uint32'), [2, 4, 14]), relay.reshape(const_504.astype('float64'), [264,]), ), 1)
call_505 = relay.TupleGetItem(func_457_call(relay.reshape(var_503.astype('uint32'), [2, 4, 14]), relay.reshape(const_504.astype('float64'), [264,]), ), 1)
uop_506 = relay.log10(var_503.astype('float64')) # shape=(28, 4)
output = relay.Tuple([bop_493,call_502,const_504,uop_506,])
output2 = relay.Tuple([bop_493,call_505,const_504,uop_506,])
func_508 = relay.Function([var_492,var_503,], output)
mod['func_508'] = func_508
mod = relay.transform.InferType()(mod)
var_509 = relay.var("var_509", dtype = "float64", shape = (13, 10, 9))#candidate|509|(13, 10, 9)|var|float64
var_510 = relay.var("var_510", dtype = "uint32", shape = (28, 4))#candidate|510|(28, 4)|var|uint32
output = func_508(var_509,var_510,)
func_511 = relay.Function([var_509,var_510,], output)
mutated_mod['func_511'] = func_511
mutated_mod = relay.transform.InferType()(mutated_mod)
var_516 = relay.var("var_516", dtype = "float64", shape = (6, 11, 6))#candidate|516|(6, 11, 6)|var|float64
uop_517 = relay.sigmoid(var_516.astype('float64')) # shape=(6, 11, 6)
uop_520 = relay.acosh(var_516.astype('float32')) # shape=(6, 11, 6)
output = relay.Tuple([uop_517,uop_520,])
output2 = relay.Tuple([uop_517,uop_520,])
func_526 = relay.Function([var_516,], output)
mod['func_526'] = func_526
mod = relay.transform.InferType()(mod)
var_527 = relay.var("var_527", dtype = "float64", shape = (6, 11, 6))#candidate|527|(6, 11, 6)|var|float64
output = func_526(var_527)
func_528 = relay.Function([var_527], output)
mutated_mod['func_528'] = func_528
mutated_mod = relay.transform.InferType()(mutated_mod)
var_705 = relay.var("var_705", dtype = "float32", shape = (10, 15, 11))#candidate|705|(10, 15, 11)|var|float32
uop_706 = relay.acos(var_705.astype('float32')) # shape=(10, 15, 11)
var_708 = relay.var("var_708", dtype = "float32", shape = (10, 15, 11))#candidate|708|(10, 15, 11)|var|float32
bop_709 = relay.equal(uop_706.astype('bool'), relay.reshape(var_708.astype('bool'), relay.shape_of(uop_706))) # shape=(10, 15, 11)
uop_723 = relay.sigmoid(uop_706.astype('float32')) # shape=(10, 15, 11)
bop_741 = relay.power(uop_706.astype('float32'), relay.reshape(bop_709.astype('float32'), relay.shape_of(uop_706))) # shape=(10, 15, 11)
output = relay.Tuple([uop_723,bop_741,])
output2 = relay.Tuple([uop_723,bop_741,])
func_746 = relay.Function([var_705,var_708,], output)
mod['func_746'] = func_746
mod = relay.transform.InferType()(mod)
var_747 = relay.var("var_747", dtype = "float32", shape = (10, 15, 11))#candidate|747|(10, 15, 11)|var|float32
var_748 = relay.var("var_748", dtype = "float32", shape = (10, 15, 11))#candidate|748|(10, 15, 11)|var|float32
output = func_746(var_747,var_748,)
func_749 = relay.Function([var_747,var_748,], output)
mutated_mod['func_749'] = func_749
mutated_mod = relay.transform.InferType()(mutated_mod)
var_962 = relay.var("var_962", dtype = "uint64", shape = (4, 14, 1))#candidate|962|(4, 14, 1)|var|uint64
var_963 = relay.var("var_963", dtype = "uint64", shape = (4, 14, 6))#candidate|963|(4, 14, 6)|var|uint64
bop_964 = relay.subtract(var_962.astype('uint64'), var_963.astype('uint64')) # shape=(4, 14, 6)
func_746_call = mod.get_global_var('func_746')
func_749_call = mutated_mod.get_global_var('func_749')
var_970 = relay.var("var_970", dtype = "float32", shape = (1650,))#candidate|970|(1650,)|var|float32
call_969 = relay.TupleGetItem(func_746_call(relay.reshape(var_970.astype('float32'), [10, 15, 11]), relay.reshape(var_970.astype('float32'), [10, 15, 11]), ), 0)
call_971 = relay.TupleGetItem(func_749_call(relay.reshape(var_970.astype('float32'), [10, 15, 11]), relay.reshape(var_970.astype('float32'), [10, 15, 11]), ), 0)
func_508_call = mod.get_global_var('func_508')
func_511_call = mutated_mod.get_global_var('func_511')
const_975 = relay.const([-9.245294,5.108264,1.997496,-7.793258,1.869238,-0.252003,-6.475097,0.091376,-7.195535,2.685908,-8.836240,3.523782,-5.894717,7.403936,1.942628,-7.230097,-8.849114,3.389419,9.161501,-8.139658,-7.021409,8.584834,-2.636172,9.307307,2.228401,0.265998,-9.475475,-1.845531,5.201471,1.169926,-3.299414,-7.759358,7.408700,-1.327837,4.561287,-3.251275,-6.532298,-2.271722,-4.587667,8.005380,-3.508349,-7.310059,5.508523,7.491407,-3.985499,9.535911,1.257176,2.213496,8.927188,3.232810,5.686799,7.494764,2.218022,-1.791058,4.076870,-6.886850,-3.943884,-7.537991,9.044425,-1.015696,-2.905674,-0.043276,7.650838,1.299455,-0.030249,3.810646,-9.888745,7.953861,-4.547749,5.677558,9.025856,4.230115,-9.505634,5.939182,-9.284170,9.047486,-1.388101,-0.590009,-0.306837,-2.096613,-6.468439,-6.222921,-4.741726,-0.588078,4.761481,-4.893717,7.381167,-0.727375,-5.212055,6.875678,7.923658,1.829577,9.871964,0.705370,6.647530,-4.258230,4.217213,-1.068583,-9.777650,-5.879063,5.558381,-0.001359,-6.949054,-5.276650,-0.482249,7.183837,8.566589,2.130836,-2.069014,-1.764477,9.152157,4.079684,7.358251,-3.633860,8.275197,6.787491,-0.546358,5.102687,-2.613585,7.019472,-5.205808,-9.622252,6.841314,-9.531056,-7.823004,-4.938167,4.123322,-8.842368,3.091689,-7.945696,9.233496,7.048454,6.435448,-7.244329,8.295057,-6.400969,7.915070,6.607870,1.421520,-8.146801,-6.192181,1.393685,0.831818,-4.379025,-3.495955,5.028021,-1.153807,4.630793,4.401943,7.759985,2.753728,-5.192279,-2.748355,-0.913866,2.696496,5.149677,8.330244,5.599672,-0.158487,6.994338,-9.544202,-6.819526,-5.739152,-5.430455,4.391884,-7.908688,-9.571023,2.996076,-3.573362,-5.236114,3.901027,1.241661,-0.976262,9.876272,-0.936148,4.158561,3.391367,4.985845,-8.681147,5.896280,6.101349,-6.458734,4.273590,-3.640571,5.141561,4.326981,-1.209240,6.587190,-4.429206,1.102155,-2.014767,1.495655,-2.576547,1.832807,6.614210,-3.369944,-2.024790,-7.010864,6.417033,4.351637,3.510765,3.128797,0.645649,-4.859563,7.485973,-3.484948,-2.955954,0.607679,-6.762682,1.236956,7.157059,-3.212246,6.157091,8.986810,0.387391,7.388992,-8.257213,-3.546247,-1.858467,5.221557,-6.351186,4.303974,5.552745,5.855941,1.673474,2.617796,-8.987334,-1.000201,-2.552556,-9.483028,-2.602356,-2.371812,-2.706017,-5.194473,7.617846,-8.225853,1.480975,1.081342,-4.797037,-1.037754,9.317354,2.914394,9.462545,1.898511,7.294418,0.906084,-6.426477,-9.045067,-5.833443,5.411626,-6.459493,0.736101,3.407322,3.894597,3.466157,6.557736,4.271412,-5.768592,-6.614449,2.147906,-4.093009,8.677258,-1.315704,8.159597,-4.858658,9.049195,3.669300,-2.819472,7.407778,-1.011401,1.560254,6.439327,-3.206610,2.469964,-8.357142,1.723076,8.649738,4.093461,-5.552958,-1.685474,9.899443,-0.772153,-7.546591,9.533470,-7.502928,-7.817347,2.137239,-7.646712,5.006429,-2.366695,-6.813070,-7.396351,-1.938135,-8.477580,9.733054,3.703658,-8.416682,0.157495,-6.764972,-9.946038,-1.562597,-6.327976,-3.017199,-7.367236,-1.303022,7.430013,-6.860988,-4.444378,8.676779,9.470781,4.272870,2.403284,-8.434506,-7.415328,8.250536,5.931986,6.616408,4.734299,1.870844,6.499623,-4.347926,-4.822840,2.476940,5.166756,8.921490,0.238536,5.890030,-7.925562,4.463747,-3.810545,9.995969,-7.930521,3.823069,5.699223,8.627947,-9.312892,6.690424,-6.660473,0.222206,-6.920694,5.618801,9.583604,-6.879292,-9.477154,-3.402552,9.201135,3.689000,-1.697735,4.889253,3.383758,4.078648,9.401489,-4.021985,8.459926,2.923997,1.979008,1.131106,-2.527743,-0.041947,6.627922,5.866917,5.800234,-1.281982,-9.358318,8.592149,9.222596,1.721460,9.798548,-2.463771,-2.856370,-1.721494,-3.793872,-1.010358,-7.865134,-2.765314,-3.043210,-9.969260,-5.876082,2.531328,-1.644642,-9.888404,9.445356,-7.453332,0.589057,9.240634,1.836509,0.758559,6.480054,-2.889853,2.725022,3.578385,-2.482449,3.690279,1.020193,1.410956,6.329587,4.747620,-0.583306,1.371652,-9.341402,6.469844,7.263673,-5.269202,-8.335674,-0.372461,4.996244,0.746983,9.350131,-1.309103,-0.324781,-5.700188,0.075336,-1.992312,-3.969636,6.188116,2.444479,-8.880743,-4.961715,0.130600,5.590268,-1.010882,-7.085099,-7.773826,-7.482310,-5.749851,2.731360,-8.950259,-5.227321,-2.877646,-2.374349,0.391946,-4.636939,-0.217530,-3.870790,7.395465,1.746342,-9.740968,-9.377398,0.197414,3.761230,3.037812,7.302038,9.263771,-0.157096,-5.736968,-8.220313,-7.586102,5.866685,2.109679,5.980976,0.584353,-3.766889,-8.752983,-6.868410,4.641919,3.503341,-6.634588,-5.871450,-5.564195,2.725879,2.113509,-4.208800,-3.943928,8.971734,-0.310053,0.200807,6.601036,0.786095,-2.131864,-5.423372,-2.533685,-2.588563,-3.149007,-8.286343,1.089144,3.165879,5.723076,7.471015,8.645084,0.914555,3.929654,1.569284,-4.693113,-1.775260,-9.310641,-6.398949,-5.514321,-1.800822,8.381549,1.233709,-5.169083,-8.424917,-9.891486,-3.372920,-9.364744,0.313515,-1.334426,-0.845022,-9.063716,2.518231,7.602037,0.322882,-4.361297,-3.413298,-6.912964,-1.366671,-5.468888,8.372257,-4.510718,-5.093110,2.595789,-2.797504,-4.510540,9.945330,4.283167,-4.709398,-3.014016,-9.814309,9.758104,9.281210,-3.490475,-4.927955,-8.051744,-9.253200,4.596611,0.407128,-6.165206,-0.820167,-6.985437,0.424656,-6.157527,4.037881,9.262636,3.630159,-9.035638,0.245342,6.745932,-8.389833,5.959428,-8.524992,5.163361,4.529537,-5.397266,7.494482,9.009186,-2.154863,-5.830750,6.437963,-6.896418,-9.734977,2.470455,8.164796,3.113008,-4.629049,-4.997251,-6.885835,-8.846871,-0.506597,4.057039,4.045021,-5.210053,3.824369,9.327544,5.239087,0.715192,2.586629,3.682285,0.961134,-8.788363,7.856084,3.025938,-4.459578,5.014399,-3.744021,-1.455950,-4.844277,6.450729,2.772441,-7.180442,-7.521130,-5.015560,-1.554712,4.732908,9.172073,4.633405,-5.655020,-4.288516,-4.360415,4.958182,-9.931473,-5.972820,1.149211,-6.825881,1.563157,9.694901,1.055609,7.690969,6.350782,0.731791,-8.068860,0.481500,9.552079,7.533425,5.130793,-5.913251,2.639147,-9.747925,1.526089,5.892848,5.655079,-5.366214,9.586432,-1.463643,-2.934598,2.919684,-3.847599,-6.768245,-9.505930,5.512191,-6.076413,3.813105,6.240326,-7.298915,8.393998,2.009746,-8.723095,6.641145,1.890750,-8.144742,0.187480,-9.663895,-3.116672,-9.059042,-1.719253,6.579612,9.015932,-5.909377,-3.041955,9.320930,1.300110,9.738715,1.417727,4.797963,-6.413459,-7.752046,2.863730,-9.666219,8.239170,-2.335046,-2.021431,8.086952,-6.095484,-8.281935,-9.531701,-9.514247,-0.677619,-4.563534,-2.905700,-1.896448,3.412162,9.714956,1.466961,5.889140,-4.227292,1.593339,9.162651,-2.095785,-4.357197,-9.674375,4.626599,-8.429059,-0.959235,4.102085,-8.526877,-3.494114,-8.622878,-0.828016,6.458328,3.752552,7.626204,-2.923133,4.972506,8.611834,-7.102613,-2.395542,-1.036237,5.434176,8.141920,-3.881564,7.593462,-8.228484,-8.103869,5.508500,-9.544660,3.728895,7.774026,-1.706961,-8.422572,2.140565,7.499416,-1.835482,-7.617334,0.277212,-7.605875,-5.886404,-2.030387,-1.806166,7.607705,-1.413506,-3.108394,-3.882992,0.109606,-8.400675,-1.453855,-6.697425,2.588721,7.394388,0.619111,-5.287965,-3.495447,5.250705,2.856556,0.531159,1.178243,-2.244477,8.325969,-8.811535,9.369052,5.424120,-4.285406,9.757127,-5.583454,3.129579,5.976603,-1.505449,-0.945608,-3.905053,6.114276,2.509229,4.052437,-6.342163,-0.817834,-4.903859,5.087541,1.111504,1.403981,6.684191,6.320809,1.525989,-8.033397,4.858331,9.032822,-0.458037,7.427148,-6.157694,8.954915,-6.960388,4.244271,3.352563,-1.674553,-4.616804,-5.484453,9.950314,-4.056022,-3.746265,-1.688638,-2.040021,-4.375649,-9.901539,-0.430904,-6.255465,8.679037,8.910372,8.249505,8.450429,2.291410,-0.219265,-1.015657,6.748555,-9.544555,2.756325,1.767390,6.723361,4.734024,-1.001271,-4.546537,5.283974,8.123989,-9.714014,-3.552727,-4.739831,9.721032,1.792796,-9.066818,-5.093311,-3.567631,-7.238440,7.778030,0.578353,3.342070,-1.318403,6.805446,-0.703267,-6.724633,7.085842,-7.806829,-0.953562,-2.027055,8.815962,7.794817,-6.969891,-0.040032,0.084767,-1.522712,-0.035466,-1.653766,6.254048,-9.516221,-2.569509,-9.084198,1.068896,0.311806,-0.031580,3.187506,0.344467,0.230633,8.599531,-4.413967,-3.428502,6.197783,-5.908257,2.328731,3.738644,5.719692,8.662031,-0.662118,5.358807,-6.541482,0.477423,5.554278,-6.967479,-8.097864,-9.947765,9.854272,6.381732,6.755952,-3.285045,1.556385,4.059948,-4.475538,-8.857173,7.785220,-2.959884,7.868560,-2.978374,-2.306354,-6.651977,-2.916909,5.947360,1.902237,-2.076979,7.079454,0.107933,3.495592,4.195263,6.052438,-6.589531,6.426416,9.491239,-3.197778,-6.094037,-9.806613,-9.797752,7.597113,-5.904250,-3.081361,-3.814663,-7.673605,5.977692,-3.607004,7.046091,-9.993062,-7.129138,-5.264255,6.068771,0.927619,-7.963872,-4.360773,-5.521564,-2.677660,-9.403109,-5.503972,-9.517723,-7.127025,-2.223882,3.762387,7.197807,2.502018,0.590977,9.186245,-9.212155,-0.558166,-4.774330,6.009471,4.969461,-3.473061,3.511518,-2.376596,7.014282,6.592566,3.504369,8.140212,-8.964906,-6.134989,-2.400283,-1.588124,6.388073,8.327591,3.146157,-9.120645,6.675564,-1.294085,0.760089,-4.581669,-4.040997,-2.260513,-3.923703,-7.318609,-5.620085,6.631950,-0.654484,-6.681978,-5.058816,6.498682,-2.865460,-2.714859,-3.620513,-6.925948,4.561625,-6.592887,-7.739352,9.886030,-3.202100,-2.845045,4.884120,-6.276030,1.266875,6.044425,-2.987799,-5.069946,-5.672825,-8.814898,9.559305,4.786439,-1.107673,-1.325473,-1.046663,8.038352,9.474374,-1.763174,4.292670,-3.406111,5.571341,1.514845,4.823174,-5.358758,-7.385867,-0.408087,-5.747408,1.226518,-2.871886,2.937781,3.635981,1.518082,-1.298683,6.506749,-8.692039,8.757616,7.547788,-7.380858,-4.773363,2.505214,9.572239,-0.444986,9.068389,-4.660554,-8.559787,-4.514653,1.207802,-9.800878,3.777548,8.556338,-0.958341,8.912091,2.060341,-9.619937,5.568832,4.697713,1.904131,-1.464052,8.963160,-6.811064,-1.290826,8.032544,7.331584,-1.856947,-3.657157,-2.296011,-7.553579,-2.253269,7.206783,4.047091,-7.960129,-6.356856,-2.930320,-8.092293,5.543706,8.826695,-6.977314,4.524066,7.645616,-6.287894,-6.809906,-5.299222,8.976390,-3.423635,4.185131,5.390492,-6.514157,7.555515,-4.784029,-5.996180,5.199376,7.100044,3.939004,3.783354,-8.150276,-9.259449,-6.495290,0.371686,5.422927,3.173836,8.474027,1.623494,-7.433059,4.429060,-4.307285,-3.787624,1.849441,8.331292,4.922974,6.133712,2.402736,-4.954615,-7.127365,4.100038,7.330884,-9.077782,4.713144,8.367305,0.258501,-8.870431,-2.472837,5.085007,-1.610162,-4.469165,2.284014,-7.086311,9.560798,-4.220939,-6.549580,-0.043789,-6.066283,9.315535,-0.164082,6.590314,6.946545,6.158504,1.212301,5.650651,-0.497897,9.408126,-6.334841,-4.567425,-7.360739,8.738497,-8.567456,-8.985243,5.275151,-4.469915,-0.914821,9.064377,0.930178,-4.687588,2.826523,-6.928642,5.231715,1.988440,7.883133,-9.372758,-7.404211,8.818892,1.902099,-4.096316,0.415378,-3.569790,-0.010539,4.644672,-8.344228,-7.532876,7.074250,3.936128,-7.875850,-6.919389,-2.291150,9.956962,2.710194,3.497577,5.293896,8.790633,-2.033381,-7.066409,4.512526,-6.464579,2.886405,2.982074,-8.556067,-6.037071,8.826536,-5.763787,8.789937,-5.695260,-6.936677,8.073963,7.345191,-3.127790,-9.136466,2.698229,-7.619388,1.430144,-0.972603,9.114510,-8.400433,-1.146199,-0.255288,3.078447,-2.625944,-8.452710,-9.895217,-5.184043,-5.806672,4.657605,-7.749039,-7.767406,0.732347,-6.108943,-6.119525,-5.441586,3.076059,-6.819567,4.480429,0.263426,-9.041036,8.923254,8.484654,-3.284335,-6.526929,-0.066066,-1.453650,-9.135996], dtype = "float64")#candidate|975|(1170,)|const|float64
const_976 = relay.const([-2,3,-8,5,-6,8,-10,4,5,1,-3,-3,3,3,4,10,-8,-5,3,-10,9,-6,-8,-4,-10,-9,3,-7,-9,-4,8,-10,8,-7,-5,10,5,-2,-6,6,-9,-9,6,9,-6,-10,-6,3,4,-4,8,-5,-2,6,3,-4,-8,7,8,-1,8,1,2,9,-5,-6,-9,-6,8,-6,3,-5,2,-4,7,-7,7,-10,-3,6,4,-10,3,-1,-7,3,-9,-10,-10,3,2,-4,-9,9,-3,-9,6,-9,7,-1,-7,6,-3,-6,3,-2,-9,-5,9,10,10,1], dtype = "uint32")#candidate|976|(112,)|const|uint32
call_974 = relay.TupleGetItem(func_508_call(relay.reshape(const_975.astype('float64'), [13, 10, 9]), relay.reshape(const_976.astype('uint32'), [28, 4]), ), 0)
call_977 = relay.TupleGetItem(func_511_call(relay.reshape(const_975.astype('float64'), [13, 10, 9]), relay.reshape(const_976.astype('uint32'), [28, 4]), ), 0)
func_454_call = mod.get_global_var('func_454')
func_457_call = mutated_mod.get_global_var('func_457')
const_984 = relay.const([4.665844,3.912682,3.215153,-1.638796,-7.012644,-1.553582,6.625228,8.425441,1.801052,-5.898945,0.352929,2.491883,8.389995,-9.828335,0.607172,9.508055,-4.428893,-8.713269,-6.662591,-0.664181,4.523919,-3.869294,4.493840,-0.790722,-9.461436,2.951807,-5.482852,5.763118,4.966902,3.061307,2.849378,-2.727233,4.833910,1.776346,1.034391,-8.980894,-5.189049,-2.434947,7.997868,5.874800,7.976819,6.939758,5.145766,5.865074,-2.993946,-0.206179,-8.274965,8.569153,8.810631,2.280007,-4.134124,-1.059735,6.053714,5.963253,9.223926,-5.245190,7.432557,8.809204,-3.856350,-9.728978,5.956775,-0.270964,7.607951,4.231113,-7.727777,9.764655,8.091002,-1.628221,-8.136073,0.447322,-5.686506,3.996833,1.607379,-8.282076,8.600991,-8.621206,6.084432,-4.336537,-5.071265,-7.017242,5.009865,-5.312826,6.761593,5.226759,-6.979173,0.261222,-1.064175,-0.463598,2.902958,7.554516,7.010286,2.964977,9.633167,2.897713,-7.047830,-5.622683,-7.721808,-1.708271,9.780751,3.859927,-8.607531,-4.112972,9.768310,-3.325059,-6.500470,-6.189380,1.888644,-2.569643,6.708621,-7.772721,4.675669,2.958791,5.174559,9.558765,6.265069,-4.970464,-5.717921,-9.677220,-6.405696,-3.657326,9.535468,-0.027552,1.726375,2.658058,5.725678,-1.416447,-7.547996,-4.456771,5.134683,3.973111,-1.633420,-4.152534,-8.754241,3.326363,0.440900,0.260079,-5.371638,9.289339,4.129798,-0.872202,-2.183174,1.113068,9.064014,3.799571,-4.141587,8.986318,-3.209513,1.931504,8.496969,2.746264,-5.230866,6.154055,4.574042,-3.195982,7.759223,2.490902,2.715037,-2.308897,-6.764838,9.207370,-3.860554,6.727547,-0.933771,-3.158635,8.863523,-2.070058,-4.675855,-5.476345,-9.646494,-5.962914,-8.282754,-2.144384,3.178592,-2.580470,-8.073196,-6.086483,-0.833551,7.418381,-0.021196,-3.561900,-4.147259,7.563081,-0.790456,-7.862041,5.018787,-4.744886,-1.225726,3.875209,-4.573369,1.000196,-7.191823,0.591735,3.750650,2.000231,-7.525492,-0.290418,4.479786,-7.853997,5.540663,-0.741850,1.577102,-2.949316,5.275081,3.881903,6.893175,-2.290959,-9.287584,8.438211,2.030216,3.392229,-9.420077,-3.129857,-5.903256,-6.512959,9.564719,-6.626150,3.191730,-1.828995,-3.934485,-0.410013,-7.397142,1.752373,2.785275,-4.385023,-2.745971,-8.215468,9.367277,-9.384610,6.645965,-2.071378,3.351516,-2.056392,4.541312,-8.491981,-3.756979,-9.890432,8.554076,-5.108895,-6.432473,7.617693,-3.916405,0.332026,-7.293963,3.813792,-6.660776,-2.709053,-7.376618,3.534473,4.219922,-5.002629,-8.635847,-4.025988,-7.911803,-6.682041,-9.464164,2.529086,-9.261510,-8.879599,-4.345657,-5.629646,3.433164,8.262584,5.915545,-2.062348], dtype = "float64")#candidate|984|(264,)|const|float64
call_983 = relay.TupleGetItem(func_454_call(relay.reshape(const_976.astype('uint32'), [2, 4, 14]), relay.reshape(const_984.astype('float64'), [264,]), ), 2)
call_985 = relay.TupleGetItem(func_457_call(relay.reshape(const_976.astype('uint32'), [2, 4, 14]), relay.reshape(const_984.astype('float64'), [264,]), ), 2)
var_989 = relay.var("var_989", dtype = "float64", shape = (1170,))#candidate|989|(1170,)|var|float64
bop_990 = relay.left_shift(const_975.astype('uint16'), relay.reshape(var_989.astype('uint16'), relay.shape_of(const_975))) # shape=(1170,)
output = relay.Tuple([bop_964,call_969,var_970,call_974,const_976,call_983,const_984,bop_990,])
output2 = relay.Tuple([bop_964,call_971,var_970,call_977,const_976,call_985,const_984,bop_990,])
func_993 = relay.Function([var_962,var_963,var_970,var_989,], output)
mod['func_993'] = func_993
mod = relay.transform.InferType()(mod)
mutated_mod['func_993'] = func_993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_993_call = mutated_mod.get_global_var('func_993')
var_995 = relay.var("var_995", dtype = "uint64", shape = (4, 14, 1))#candidate|995|(4, 14, 1)|var|uint64
var_996 = relay.var("var_996", dtype = "uint64", shape = (4, 14, 6))#candidate|996|(4, 14, 6)|var|uint64
var_997 = relay.var("var_997", dtype = "float32", shape = (1650,))#candidate|997|(1650,)|var|float32
var_998 = relay.var("var_998", dtype = "float64", shape = (1170,))#candidate|998|(1170,)|var|float64
call_994 = func_993_call(var_995,var_996,var_997,var_998,)
output = call_994
func_999 = relay.Function([var_995,var_996,var_997,var_998,], output)
mutated_mod['func_999'] = func_999
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1003 = relay.var("var_1003", dtype = "float32", shape = (2, 13, 12))#candidate|1003|(2, 13, 12)|var|float32
uop_1004 = relay.log(var_1003.astype('float32')) # shape=(2, 13, 12)
func_746_call = mod.get_global_var('func_746')
func_749_call = mutated_mod.get_global_var('func_749')
var_1026 = relay.var("var_1026", dtype = "float32", shape = (1650,))#candidate|1026|(1650,)|var|float32
call_1025 = relay.TupleGetItem(func_746_call(relay.reshape(var_1026.astype('float32'), [10, 15, 11]), relay.reshape(var_1026.astype('float32'), [10, 15, 11]), ), 1)
call_1027 = relay.TupleGetItem(func_749_call(relay.reshape(var_1026.astype('float32'), [10, 15, 11]), relay.reshape(var_1026.astype('float32'), [10, 15, 11]), ), 1)
bop_1032 = relay.equal(var_1026.astype('bool'), relay.reshape(call_1025.astype('bool'), relay.shape_of(var_1026))) # shape=(1650,)
bop_1035 = relay.equal(var_1026.astype('bool'), relay.reshape(call_1027.astype('bool'), relay.shape_of(var_1026))) # shape=(1650,)
func_526_call = mod.get_global_var('func_526')
func_528_call = mutated_mod.get_global_var('func_528')
var_1037 = relay.var("var_1037", dtype = "float64", shape = (396,))#candidate|1037|(396,)|var|float64
call_1036 = relay.TupleGetItem(func_526_call(relay.reshape(var_1037.astype('float64'), [6, 11, 6])), 0)
call_1038 = relay.TupleGetItem(func_528_call(relay.reshape(var_1037.astype('float64'), [6, 11, 6])), 0)
output = relay.Tuple([uop_1004,bop_1032,call_1036,var_1037,])
output2 = relay.Tuple([uop_1004,bop_1035,call_1038,var_1037,])
func_1041 = relay.Function([var_1003,var_1026,var_1037,], output)
mod['func_1041'] = func_1041
mod = relay.transform.InferType()(mod)
var_1042 = relay.var("var_1042", dtype = "float32", shape = (2, 13, 12))#candidate|1042|(2, 13, 12)|var|float32
var_1043 = relay.var("var_1043", dtype = "float32", shape = (1650,))#candidate|1043|(1650,)|var|float32
var_1044 = relay.var("var_1044", dtype = "float64", shape = (396,))#candidate|1044|(396,)|var|float64
output = func_1041(var_1042,var_1043,var_1044,)
func_1045 = relay.Function([var_1042,var_1043,var_1044,], output)
mutated_mod['func_1045'] = func_1045
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1154 = relay.var("var_1154", dtype = "uint16", shape = (12, 16, 2))#candidate|1154|(12, 16, 2)|var|uint16
var_1155 = relay.var("var_1155", dtype = "uint16", shape = (12, 16, 2))#candidate|1155|(12, 16, 2)|var|uint16
bop_1156 = relay.bitwise_xor(var_1154.astype('uint16'), relay.reshape(var_1155.astype('uint16'), relay.shape_of(var_1154))) # shape=(12, 16, 2)
output = bop_1156
output2 = bop_1156
func_1168 = relay.Function([var_1154,var_1155,], output)
mod['func_1168'] = func_1168
mod = relay.transform.InferType()(mod)
var_1169 = relay.var("var_1169", dtype = "uint16", shape = (12, 16, 2))#candidate|1169|(12, 16, 2)|var|uint16
var_1170 = relay.var("var_1170", dtype = "uint16", shape = (12, 16, 2))#candidate|1170|(12, 16, 2)|var|uint16
output = func_1168(var_1169,var_1170,)
func_1171 = relay.Function([var_1169,var_1170,], output)
mutated_mod['func_1171'] = func_1171
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1220 = relay.var("var_1220", dtype = "int16", shape = (11, 10, 5))#candidate|1220|(11, 10, 5)|var|int16
var_1221 = relay.var("var_1221", dtype = "int16", shape = (11, 10, 5))#candidate|1221|(11, 10, 5)|var|int16
bop_1222 = relay.greater_equal(var_1220.astype('bool'), relay.reshape(var_1221.astype('bool'), relay.shape_of(var_1220))) # shape=(11, 10, 5)
func_746_call = mod.get_global_var('func_746')
func_749_call = mutated_mod.get_global_var('func_749')
const_1233 = relay.const([-1.755910,9.502540,5.932598,-3.733392,-5.855772,5.165334,-5.861458,-9.983622,3.514161,-3.205277,-3.141909,-7.937165,2.151727,-7.949362,8.293851,-2.136598,-8.208508,-5.603717,-2.115645,1.148537,7.236156,-2.901240,7.685160,0.548768,-2.922793,3.991779,-8.133341,-3.819477,-2.446485,-4.905611,-3.085619,1.257319,-1.525040,3.596785,2.856885,-7.098638,6.194545,-9.387189,1.245643,9.958163,-2.631785,-6.437069,-3.169963,-2.420706,-9.909370,-0.094121,5.952184,6.115185,6.400387,-5.678635,8.738653,4.434036,-0.780075,2.412676,-3.541254,2.540477,-6.676562,8.959144,-4.778550,4.855200,-3.484123,0.658913,7.173858,-7.980521,3.594775,7.740445,0.120560,7.308426,6.657306,8.580670,0.481241,-0.001388,8.267688,-9.611188,9.578342,-0.059773,7.735361,9.749732,-1.674649,-1.561524,3.496294,-2.635844,-2.058116,-2.531126,-8.527732,9.993155,-8.583546,1.956544,3.470062,8.343960,4.318879,4.547035,7.141763,-3.674974,-9.037027,-1.902772,-6.299952,-1.720407,-9.638839,-6.379733,-1.330542,9.054523,7.791466,-6.013652,-3.308747,9.849701,0.023886,2.946366,-6.318962,-9.069262,-0.297551,-4.507936,2.020590,3.033470,1.447806,6.484645,-5.955154,-3.280411,9.804475,-6.301942,-1.768975,-3.573329,-7.796001,-4.758176,3.501532,8.257425,2.988688,-8.938507,-3.389424,3.393595,-2.688506,-8.497911,7.633557,-2.875665,7.750523,-8.046264,3.177198,-1.409705,-3.925202,-0.603532,2.347027,9.413719,2.644741,-9.312641,-8.086198,9.914847,-4.787608,3.155140,-2.083244,-0.469620,-2.372377,4.557550,2.540619,-6.079482,-5.617349,7.012628,-4.785093,6.783747,1.324980,-1.240176,9.740739,-8.669325,5.003581,3.488061,0.270477,1.032366,-4.313994,6.769926,-8.904182,-5.707429,-6.622187,7.814731,-0.293060,-1.223964,-3.543579,4.057833,-0.147322,8.435853,9.480523,7.029465,-2.694023,8.146499,1.792621,5.432508,-2.844660,0.756471,2.792350,7.816165,1.198795,9.898615,-0.389572,7.579108,-7.491009,-5.259620,3.403087,7.627940,7.148926,-9.378327,9.227966,-3.697993,6.977606,5.556135,-2.685086,5.787251,-1.653169,5.189750,6.459028,-3.144198,8.860516,-1.148920,-4.627124,9.066727,-7.651414,3.123024,6.296489,4.282096,5.945389,0.429420,4.222681,3.098218,-9.489045,3.976213,6.269262,8.276949,-1.963178,9.694924,0.361498,-5.255539,-3.842877,-3.103890,-8.106757,6.465397,-4.956716,2.220127,9.662365,2.807755,-0.993134,8.114088,-2.363345,-0.188852,-5.098852,-6.815861,-1.082157,5.703891,-9.433852,-6.143038,1.161783,-7.934909,1.636108,-1.404414,-5.405806,-9.591960,-2.866898,-8.221115,-5.101435,2.116397,-9.292743,4.466736,9.333712,3.844920,-6.273086,-7.481630,2.075884,0.511093,-9.204585,8.777432,5.801839,5.160573,-4.051515,0.161528,0.036310,5.707387,-7.674459,-4.196736,-7.984793,2.697597,-8.830711,-5.035162,-0.582898,-1.470651,7.484835,3.537394,6.308713,-7.569014,-4.131984,-2.391192,4.709390,4.608012,-3.566102,0.379519,5.423983,0.888110,-0.447463,-0.050989,2.883948,2.247592,-9.281957,-9.261902,-0.951821,0.840666,-3.083471,-1.888153,-9.958244,8.833225,5.097134,6.432577,1.454634,-1.633172,-5.591479,-4.018367,4.119042,5.603991,-9.849178,1.473953,-6.771914,3.604001,5.148179,-0.969076,6.211938,-1.547815,-0.186285,5.615109,4.057722,9.698742,-8.090068,4.996873,-7.865932,-8.881244,-2.623429,5.516912,-4.797602,9.986351,-2.113609,8.491520,1.724450,-3.928405,2.539942,6.391985,-5.923431,6.654651,-1.923049,-1.988817,9.583598,1.739226,1.030101,-9.799244,0.652106,7.923229,-9.165341,5.718739,-0.426708,9.491404,-9.139429,-8.318265,-3.605985,8.542485,4.873821,2.916469,-8.142140,-3.743620,3.664347,-0.280061,7.457434,-9.225323,-9.888522,2.597890,6.581986,2.712952,-3.781117,-5.533979,3.036220,6.535321,-8.775372,6.590165,-7.694397,-2.361945,-0.464146,-9.752203,-8.631311,5.762056,8.999492,0.546526,-3.223999,-3.603498,8.114787,1.743605,-5.492267,9.021470,8.841739,-7.607445,-9.125596,7.586542,9.195183,-2.035026,-9.095659,-7.491576,4.097819,-1.534561,-7.212823,-4.435669,-2.906783,-5.997145,-6.257425,4.922705,-7.446290,6.084507,-1.447930,-5.123608,6.333262,6.057946,-7.692899,5.094863,6.924358,1.926680,-6.740806,2.708792,8.529567,6.111335,4.349298,5.459912,-5.236523,9.589248,7.086121,-8.678895,-7.877367,-4.675236,-4.531256,-5.165881,-0.853690,7.674209,6.474883,6.479370,2.306936,9.327202,8.750668,-6.272828,2.368139,-0.134375,8.173595,3.931040,-8.582994,8.015938,1.562251,-3.433809,7.216474,-1.135876,0.059532,-2.561179,7.322203,1.664441,-0.531855,-8.605426,5.808707,4.388105,-2.607863,3.731765,-4.988551,9.776595,-8.815447,1.057352,3.406817,9.212266,5.157087,0.072552,3.592572,7.852973,3.459752,6.937343,-8.473841,9.641866,-3.266910,3.116024,7.365950,-9.701051,7.822788,-6.915299,-6.644364,0.073455,3.567879,-0.096001,6.984191,-4.228147,9.008197,-4.470739,-2.133687,-2.643404,-1.052721,-5.182224,-9.937611,7.669633,-6.100399,9.979317,6.851637,2.880235,0.607081,5.523275,3.414088,7.075240,-9.317200,6.626616,-7.733169,3.532458,2.306873,-9.715796,-9.913216,8.147542,9.757512,4.956549,2.782219,3.751324,-0.852446,-7.369778,4.147348,8.772287,9.128749,-3.600876,-3.800475,-7.386447,1.527720,-0.160304,-3.858763,8.736883,-0.717315,7.187148,1.946731,-2.516887,7.933573,5.741189,4.763201,-5.035627,0.450980,-5.964805,-6.648628,-4.749110,9.799372,-2.825294,-5.303238,-0.321076,-2.683315,9.101072,-8.386057,-6.070357,-9.909237,-2.639111,-9.083601,-8.476221,-3.888289,4.097958,3.614141,-3.214319,-0.556692,-6.127385,-6.873633,8.325108,-4.782147,-1.532393,0.303353,5.809135,9.150914,1.958611,-3.739960,3.694561,-3.978394,-1.893441,-4.794644,-2.278961,7.701200,-5.779517,5.965151,-7.263726,-4.555162,8.887446,8.656252,1.520264,-7.467386,-9.196772,-1.182160,3.906843,1.422950,-5.430127,8.031511,-9.646153,7.040009,-9.711879,8.569295,1.590190,-9.934073,6.320054,9.221787,-1.334392,5.714404,-0.066237,-4.092456,-8.230013,5.440176,-4.931388,4.470711,6.756215,5.897602,-7.266366,5.852258,-2.481046,-5.221220,5.938366,-8.787988,2.942012,7.325765,0.775807,-1.149766,9.911578,-1.787213,-1.684708,-5.384760,-2.223655,2.545085,-8.609325,-9.002706,-4.696271,-5.041694,-2.393148,8.292155,-1.753739,-5.591147,5.955385,3.734407,-6.978445,-4.549783,-7.649389,6.837092,-0.568458,6.772015,6.709821,1.920902,-1.654444,7.704392,-4.035951,-2.459596,7.491260,-8.393658,3.671902,7.530276,6.325942,-7.734277,9.501035,-4.573707,2.309457,-2.199886,-6.644806,-7.030588,-4.587317,3.032212,3.282012,4.504706,-7.471821,2.091973,-3.455214,-8.043716,-5.600752,7.606259,-5.618393,7.282542,5.328846,-8.268116,0.505023,-8.535901,-9.647561,-2.777769,5.695507,1.367485,9.398500,-9.469068,4.795652,1.108525,5.365692,0.593096,-9.140188,3.958269,5.480319,4.564054,7.916886,-7.771766,-5.919445,7.643462,-9.778215,6.793593,5.377231,6.424519,-3.163603,-7.478210,3.197958,4.030262,-8.403049,6.147790,-9.695741,-6.331938,-9.797331,-2.483027,6.992437,0.421146,-7.276842,5.872159,-7.777318,-3.470733,6.730235,-9.164304,1.830683,-7.768176,2.752521,2.516905,8.556582,7.656052,-0.199803,-7.403713,2.860030,8.897583,-0.879162,4.042210,-1.133838,-6.674741,-8.381876,-2.280808,-8.354573,5.722369,0.382569,-1.110682,-4.816332,-2.801766,0.559653,-0.285064,-3.098475,-3.811717,-6.002311,8.710828,3.426384,-2.541212,8.435781,7.962056,0.415370,7.983222,7.625132,2.076902,2.359809,-3.176852,-1.379508,0.462013,0.559435,-2.875400,2.986237,-7.176092,6.686810,-1.408086,8.427578,-2.917499,-4.454292,5.694917,9.862893,8.108399,1.062346,6.588132,-7.168770,-9.260003,-2.364474,3.954478,5.689964,5.716313,-4.270351,9.915993,6.516076,-3.600789,7.919489,-3.472289,4.826658,1.449116,0.299463,-4.024573,8.413011,6.655071,7.757099,5.936366,-8.251903,2.454043,-9.750119,0.227662,0.513355,9.041027,1.987139,3.040417,9.469448,0.170367,-3.159481,-5.969069,5.387495,1.350315,-4.969045,3.693567,4.144428,1.266371,8.918583,-2.907342,-8.104989,8.317912,6.822023,-6.243697,0.016452,3.076462,-7.621827,5.168704,-9.519645,-0.924129,1.570768,4.879652,5.037370,-6.531511,0.969100,6.748802,-5.262237,-1.334364,7.768627,-9.234326,-7.141004,-7.683105,4.972557,-6.743125,7.590968,-7.381394,-9.087307,8.784104,-8.435646,-1.819596,-7.998835,3.951468,-4.343290,-3.430390,8.007826,-1.598526,6.678897,-7.836259,-8.625159,-4.284113,6.771140,-5.500838,-6.746407,0.816779,4.582909,8.530170,1.881181,-3.276076,-7.531307,-9.666736,9.135020,0.574758,5.086863,9.833672,3.046443,6.660048,-6.435515,-3.913508,-7.764029,3.201504,-6.223565,0.482995,-3.023531,4.124446,6.031072,-7.115694,9.916526,3.176660,9.962111,-6.852840,-9.967187,8.502748,-2.333512,8.209703,-7.968019,-2.089607,8.622181,-5.393042,-8.455484,-6.406894,4.098683,-2.410238,5.971537,-6.784196,6.087857,6.829720,-0.355237,-4.163555,-3.125532,7.289122,0.864019,7.994084,-4.578601,-9.956367,-0.110901,-9.412535,6.513938,-0.479475,-3.657788,6.406299,1.454115,2.887328,5.721349,-3.405413,0.601686,-8.025069,-1.458566,-4.719435,-5.750647,4.023050,8.759398,-8.108807,-0.794383,2.562982,9.530229,-5.100732,2.891066,2.648687,-4.154762,7.618181,2.172438,-4.605785,4.729750,-7.635478,3.749098,-1.937348,2.361679,7.648662,2.773014,-7.072395,1.061644,-6.766547,-8.127577,2.410040,7.063698,1.006096,0.056329,-7.538862,-5.451651,-8.789466,-3.149858,-2.096061,0.410728,-9.049034,0.807623,-8.504471,5.891362,0.197581,-6.964718,-7.217873,6.518691,-0.417345,4.974008,-1.959306,-3.390389,3.506755,9.272743,-2.735010,9.533968,-0.965693,-6.274526,6.197951,0.153769,7.680100,-9.692011,7.078463,7.681324,-5.303745,1.879720,-6.843110,4.023212,-3.836415,-1.316130,8.849278,8.604463,-2.366491,-4.925698,-4.194750,-0.259755,8.961636,0.652801,3.939104,1.876422,-9.045806,-1.411500,-2.976268,-7.501635,-5.702330,3.818395,8.206834,4.096429,-8.293337,0.399775,5.266504,2.139259,-8.867703,-2.104594,6.960380,8.160041,-9.353140,3.415837,0.842050,7.893220,-8.444852,-9.852886,-9.343198,3.776773,6.383203,3.388239,-1.721462,-4.247388,5.528488,-4.598967,-8.183816,-3.862175,8.188527,5.013883,-8.688125,2.352218,0.461012,-6.943844,7.162889,5.768560,-0.417770,-1.435417,0.461228,-0.662394,3.209455,2.433250,-4.620253,-1.922262,5.049583,0.769851,-0.752950,-9.442966,-2.638152,3.660647,-8.432990,-9.333838,1.334609,-7.886066,2.396593,-5.265104,3.042727,-4.985255,2.827265,-8.447033,-2.901477,-0.781841,-0.753404,2.301611,4.354419,-7.028093,4.308105,5.384805,2.770216,8.519754,-5.056686,9.439236,7.225416,4.867683,-6.348660,-4.122200,4.392686,-4.694869,3.730837,-0.384570,-4.164360,1.568260,-1.277880,9.431300,-9.352223,-8.033029,-8.022634,-8.782294,-0.879294,-2.617564,7.963030,7.640148,-0.612614,-4.872923,2.540856,-1.343312,-7.891867,0.956097,-2.879082,-5.357163,2.355538,8.473788,1.304472,-9.738254,-8.094433,-9.441481,3.521253,-6.148705,3.061051,6.473991,-2.920405,9.635195,2.726566,4.980413,4.849332,-5.495086,-3.494526,-4.467945,-7.933914,5.855250,5.459256,-6.808193,-5.504159,-4.398498,-7.405522,-3.070154,-7.219931,2.741845,3.683545,8.148593,-5.744804,2.035672,-7.451430,-5.563158,-0.838494,4.067568,-0.850292,-1.708160,-1.777303,-2.065071,7.577973,4.314566,-1.618375,0.524475,4.114759,-4.005341,4.198076,1.324543,3.984756,-3.657617,1.886916,-3.097386,7.593374,-4.680217,4.383793,-5.429416,-6.238559,-6.498761,-2.833545,-1.164576,9.970645,-3.547633,-9.844362,-5.702679,2.321518,-1.019522,-1.978955,-0.127972,9.650960,1.251887,-2.008696,3.425848,-8.602869,3.006116,-6.122268,-2.668668,0.783364,-5.075456,-1.519428,4.532840,9.656488,6.600785,-9.633961,7.226580,-3.615164,1.877316,0.444544,3.872336,-3.153520,-5.177513,-8.760245,-2.231054,5.967421,-7.214975,7.172404,-9.025522,1.675851,-9.145826,4.705589,0.702963,3.167610,-9.747050,-5.614047,-6.156417,2.170222,4.741700,9.510006,0.442616,-0.624127,5.227946,8.920323,-4.652415,4.904721,5.593674,-0.144826,-2.132218,5.307309,-1.557697,1.529961,-2.027931,-0.123814,-5.011901,-1.951298,-3.860700,0.461883,-3.162448,1.718128,7.874529,-7.638119,-8.859393,-0.967260,-8.467163,9.495166,8.119792,7.066954,8.559046,6.916106,9.482346,5.201801,-5.194601,9.032392,-8.999220,3.675189,4.883829,-7.245865,-6.931079,2.592048,-1.702024,-7.183834,9.394909,9.188451,1.956064,-1.530063,-3.337972,-1.607993,1.268248,-5.416305,8.164192,0.027317,8.895540,-8.888403,-5.624702,-0.056468,-8.488016,-7.488569,-7.302150,0.093427,-1.095956,-4.201852,4.753424,1.953162,2.101146,-9.487804,7.516866,0.406273,3.586336,3.356759,7.686434,-3.771388,-2.708435,5.445503,2.143713,-6.292313,4.467791,-5.459330,0.190246,8.792690,6.118507,0.646179,5.916851,7.100327,-2.913243,8.252615,-5.420457,-7.548487,-4.390607,0.273974,-6.705629,-9.873176,0.006528,-0.068636,-4.040130,2.942471,-2.772563,1.037039,4.401091,-4.167870,1.260240,-1.996814,-2.195749,-7.684612,-9.347176,-3.338705,9.002700,-6.648635,0.325715,0.462075,-6.373482,-0.510873,-5.011935,7.481449,-2.968142,5.795539,5.742867,-4.556582,-2.677465,-7.490242,-8.170922,6.304040,0.562427,-9.356128,5.218502,4.047076,-5.109842,-8.269088,7.254951,8.428384,6.603226,1.463084,-0.196431,-9.070595,-5.758349,5.906076,4.005257,-9.255293,4.367906,-9.128107,-7.253519,-5.697224,6.834917,8.168700,-8.832082,-5.326468,-9.969554,-4.292635,4.822621,9.847840,-1.800278,8.040444,-0.095022,-1.084528,-8.655740,-2.917039,-3.177279,-3.095580,8.512901,-1.414539,-3.693948,4.868916,-0.836122,9.238902,3.326058,4.571888,4.417251,3.323124,-5.028658,6.183528,-9.830782,-3.859050,2.884648,-1.248728,-6.903692,-7.176126,-3.764728,6.707848,-6.966511,-4.082054,-0.493078,8.777286,-0.798458,0.632998,-8.183044,-5.702416,-5.847208,-0.838348,9.354354,-0.880230,6.083523,-1.492379,-7.892044,1.135136,-0.150682,-7.339033,4.683563,-0.771663,4.447352,2.211678,4.165970,-2.445250,-1.188531,0.194559,-8.899748,7.746417,-5.427598,8.921074,-5.815730,7.217461,-5.157843,5.624701,5.269383,-4.932226,8.458870,3.109185,3.472077,-3.728964,-8.167778,4.737336,3.757125,-1.827455,-2.135979,-3.626625,-9.077366,2.634117,-5.075034,5.022189,-0.670135,-4.578378,7.399087,-8.693880,1.511499,-9.303464,-4.835174,-5.850278,-7.984376,-8.007936,-1.580246,3.384453,-5.922769,-7.030567,7.371844,4.933810,6.959945,9.335119,1.387848,5.755847,-9.204289,-6.438326,6.218254,-7.462870,8.623127,-7.245455,-6.939310,1.284205,-7.115242,1.390844,7.179368,4.745540,-9.006892,1.469729,0.550619,-0.562273,-0.870462,-9.154397,-0.741031,8.470504,4.182846,1.630752,-4.524358,0.528609,-2.999402,-2.138736,5.017965,-5.922127,9.975495,6.114158,-7.337898,-1.115361,-7.300771,-0.536301,-6.429417,-2.304146,1.731813,1.593601,-7.409744,-7.182587,7.505129,-7.402004,1.915724,-4.328775,-6.919609,5.257555,4.835225,8.276381,-2.925634,-2.523095,-2.745167,9.779668,9.069282,5.787356,8.637946,-0.240981,-2.969093,7.312601,-9.815133,-1.519624,7.805463,3.661932,-6.741334,-5.667391,2.682555,3.132207,0.572321,7.307984,3.471985,5.176674,5.808574,9.197736,-6.213919,4.654119,-9.124055,-2.729366,9.976896,-7.169929,-1.189331,-4.796077,-5.416339,6.693353,-3.611789,-0.110317,1.573133,-4.595587,4.490433,6.460503,-8.300118,-4.041005,-6.951316,-8.729947,8.990747,1.714080,3.028838,0.802774,0.518831,-7.454397,2.303351,9.166649,-7.283307,7.896336,0.742475,9.532728,1.787637,-1.810015,-2.794624,0.544753,-0.766330,-7.265991,4.730136,1.939504,-3.824124,-5.037689,-6.095334,0.089099,-8.314519,-1.655379,1.207096,0.379660,-5.043201,-3.193266,3.293124,-9.798659,7.547973,9.118315,-5.951076,6.852810,-7.993630,-7.185194,-6.106567,9.399691,4.741095,-4.418318,-0.510703,1.169823,-0.501037,9.791081,-0.455179,5.118572,-0.298131,-9.795778,5.908137,-3.291624,5.445000,-3.163263,-0.279292,-8.822297,0.981854,-2.747407,6.197723,-2.838633,9.779598,0.009161,6.009576,7.678973,6.488901,-0.262407,-2.407280,0.821665,-1.386316,9.936767,5.607630,-0.807208,-0.909460,-5.981902,-8.905163,2.922237,1.606002,6.841388,4.782979,-8.084496,-9.263076,0.698413,8.037348,0.127106,-7.744881,-5.411604,-1.901455,1.610457,4.860352,-2.622672,-2.306913,-6.073474,-4.747666,1.694003,-3.755297,0.334061,-6.308734,5.151189,7.660276,3.125626,9.928104,7.136076,-5.963825,2.823019,5.953169,-9.521485,3.463798,9.042629,-0.801793,-7.645431,-3.146149,-0.828707,-4.903844,7.675984,-4.676272,-2.681730,-3.185005], dtype = "float32")#candidate|1233|(1650,)|const|float32
call_1232 = relay.TupleGetItem(func_746_call(relay.reshape(const_1233.astype('float32'), [10, 15, 11]), relay.reshape(const_1233.astype('float32'), [10, 15, 11]), ), 0)
call_1234 = relay.TupleGetItem(func_749_call(relay.reshape(const_1233.astype('float32'), [10, 15, 11]), relay.reshape(const_1233.astype('float32'), [10, 15, 11]), ), 0)
func_99_call = mod.get_global_var('func_99')
func_102_call = mutated_mod.get_global_var('func_102')
const_1236 = relay.const([[1.949711],[5.914649],[-7.963192],[5.622205],[-7.264767],[-5.910585],[1.037563],[-5.601112],[5.140740],[0.509346],[-0.982304],[7.703201],[-4.549701],[0.938551],[0.200452],[7.829432],[-4.138922],[-2.122932],[-0.227163],[5.146805],[-6.270683],[2.811669],[-1.367014],[-6.515462],[-6.545693],[9.646886],[-2.975504],[-0.412895],[-0.412833],[9.118158],[4.617242],[-7.651576],[4.903336],[7.376900],[-9.872849],[-8.871291],[-9.506258],[8.362114],[-3.589033],[-1.772397],[7.052240],[4.253567],[-6.717342],[-5.881859],[3.468490],[-0.256798],[-4.549919],[-7.740743],[-9.301325],[-1.404237],[3.342695],[2.879757],[-1.349873],[-2.498993],[-6.772052],[6.522018],[0.802050],[3.326308],[-0.854086],[-3.475118],[0.748055],[8.430776],[7.649740],[-1.711493],[2.469401],[2.076346],[0.577535],[-6.330448],[1.357235],[-3.087349],[-3.471628],[1.232832],[5.550483],[2.632216],[-1.537328],[8.192526],[7.881869],[7.891907],[3.918204],[-6.095599],[-2.205418],[1.623426],[-5.900941],[-1.741973],[-8.216195],[-3.384844],[-7.014434],[-2.058107],[-1.780654],[-0.759744],[9.416314],[9.111868],[-6.673278],[-6.858315],[-5.547545],[-9.417092],[-9.927369],[-9.454978],[6.639546],[-2.160009],[-5.106746],[-4.407798],[-3.698474],[-9.119159],[6.869116],[6.791777],[-2.429849],[1.983820],[1.098340],[-3.327745],[-8.401447],[7.914624],[-2.720128],[0.045780],[-6.942640],[-0.707244],[-5.513126],[4.705480],[7.040092],[-2.918773],[-9.945606],[-0.148544],[-1.973744],[5.928054],[1.769903],[2.233826],[-0.346683],[-6.580643],[-8.167899],[4.676568],[5.357413],[5.846482],[-4.905914],[-0.865419],[-0.932293],[-0.896289],[-4.545573],[-3.381128],[-4.693884],[-3.158377],[0.555105],[9.858786],[-7.458952],[6.862958],[-1.575648],[7.281897],[-0.131992],[4.411762],[-4.870166],[-8.759162],[-2.055770],[6.478981],[8.771126],[9.449329],[-1.440858],[8.831237],[0.264292],[7.430894],[-0.311760],[4.800723],[1.383700],[-1.678084],[4.264010],[2.270788],[4.376948],[1.416579],[-3.179262],[-2.243186],[-2.758078],[-4.855656],[-2.849375],[-7.718736],[-0.863517],[7.295098],[-3.666758],[8.770069],[-7.375334],[3.214729],[-1.403303],[3.912305],[1.219370],[1.997570],[6.074298],[1.893665],[-2.997970],[-5.688242],[-9.257103],[-2.922471],[9.185025],[3.185343],[-1.435516],[1.054743],[6.315912],[7.569451],[3.796068],[6.146543],[3.786381],[8.084789],[2.509812],[-4.697192],[-7.409792],[-8.487664],[9.701235],[7.206623],[-1.745384],[9.602395],[-4.959386],[7.216494],[4.254019],[5.220962],[0.549360],[8.302049],[9.594021],[-0.570449],[-8.485168],[-7.457757],[1.676141],[9.361578],[-9.022005],[2.164327],[3.364810],[9.942315],[-2.547609],[8.481182],[6.646345],[-0.180519],[-9.708164],[8.485609],[-9.097117],[-3.244848],[-2.700219],[0.762514],[9.728540],[2.013988],[-4.265579],[-2.390922],[4.181296],[0.353698],[7.387442],[6.072621],[6.575745],[2.930631],[-6.146397],[5.835131],[-7.874549],[6.868049],[8.606726],[1.462177],[8.218823],[-1.172893],[8.714999],[7.455575],[-7.507429],[-2.415833],[-9.969951],[7.621175],[-1.697282],[7.744158],[5.792767],[3.755017],[-3.205396],[9.739925],[-5.434636],[-0.173990]], dtype = "float64")#candidate|1236|(264, 1)|const|float64
call_1235 = relay.TupleGetItem(func_99_call(relay.reshape(const_1236.astype('float64'), [11, 8, 3])), 0)
call_1237 = relay.TupleGetItem(func_102_call(relay.reshape(const_1236.astype('float64'), [11, 8, 3])), 0)
uop_1239 = relay.sin(call_1235.astype('float64')) # shape=(11, 8, 3)
uop_1241 = relay.sin(call_1237.astype('float64')) # shape=(11, 8, 3)
func_508_call = mod.get_global_var('func_508')
func_511_call = mutated_mod.get_global_var('func_511')
var_1248 = relay.var("var_1248", dtype = "float64", shape = (5, 234))#candidate|1248|(5, 234)|var|float64
var_1249 = relay.var("var_1249", dtype = "uint32", shape = (2, 56))#candidate|1249|(2, 56)|var|uint32
call_1247 = relay.TupleGetItem(func_508_call(relay.reshape(var_1248.astype('float64'), [13, 10, 9]), relay.reshape(var_1249.astype('uint32'), [28, 4]), ), 0)
call_1250 = relay.TupleGetItem(func_511_call(relay.reshape(var_1248.astype('float64'), [13, 10, 9]), relay.reshape(var_1249.astype('uint32'), [28, 4]), ), 0)
output = relay.Tuple([bop_1222,call_1232,const_1233,const_1236,uop_1239,call_1247,var_1248,var_1249,])
output2 = relay.Tuple([bop_1222,call_1234,const_1233,const_1236,uop_1241,call_1250,var_1248,var_1249,])
func_1252 = relay.Function([var_1220,var_1221,var_1248,var_1249,], output)
mod['func_1252'] = func_1252
mod = relay.transform.InferType()(mod)
mutated_mod['func_1252'] = func_1252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1252_call = mutated_mod.get_global_var('func_1252')
var_1254 = relay.var("var_1254", dtype = "int16", shape = (11, 10, 5))#candidate|1254|(11, 10, 5)|var|int16
var_1255 = relay.var("var_1255", dtype = "int16", shape = (11, 10, 5))#candidate|1255|(11, 10, 5)|var|int16
var_1256 = relay.var("var_1256", dtype = "float64", shape = (5, 234))#candidate|1256|(5, 234)|var|float64
var_1257 = relay.var("var_1257", dtype = "uint32", shape = (2, 56))#candidate|1257|(2, 56)|var|uint32
call_1253 = func_1252_call(var_1254,var_1255,var_1256,var_1257,)
output = call_1253
func_1258 = relay.Function([var_1254,var_1255,var_1256,var_1257,], output)
mutated_mod['func_1258'] = func_1258
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1316 = relay.var("var_1316", dtype = "int8", shape = (6, 11, 10))#candidate|1316|(6, 11, 10)|var|int8
var_1317 = relay.var("var_1317", dtype = "int8", shape = (6, 11, 10))#candidate|1317|(6, 11, 10)|var|int8
bop_1318 = relay.logical_xor(var_1316.astype('int8'), relay.reshape(var_1317.astype('int8'), relay.shape_of(var_1316))) # shape=(6, 11, 10)
output = relay.Tuple([bop_1318,])
output2 = relay.Tuple([bop_1318,])
func_1326 = relay.Function([var_1316,var_1317,], output)
mod['func_1326'] = func_1326
mod = relay.transform.InferType()(mod)
mutated_mod['func_1326'] = func_1326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1326_call = mutated_mod.get_global_var('func_1326')
var_1328 = relay.var("var_1328", dtype = "int8", shape = (6, 11, 10))#candidate|1328|(6, 11, 10)|var|int8
var_1329 = relay.var("var_1329", dtype = "int8", shape = (6, 11, 10))#candidate|1329|(6, 11, 10)|var|int8
call_1327 = func_1326_call(var_1328,var_1329,)
output = call_1327
func_1330 = relay.Function([var_1328,var_1329,], output)
mutated_mod['func_1330'] = func_1330
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1588 = relay.const([[[-5.678230,8.429722,-2.090218,4.360086],[2.187094,6.068706,4.220103,5.560571],[-0.073529,2.742362,8.794147,8.291619],[7.719112,0.018617,-3.041585,-7.414419],[2.136711,-5.881166,-3.622762,6.915412],[-7.352762,-8.373048,-1.608114,0.742127],[-8.075310,5.042199,-1.234528,-2.020718],[-4.828740,6.558139,-1.163924,-0.225503],[7.829232,8.050863,-3.049956,6.750186],[8.925416,-6.305991,6.181452,4.592701],[8.253787,4.310876,1.797595,8.252229],[-4.350973,-7.332959,-8.514425,-2.093351],[6.524260,0.593733,-0.563596,0.725706],[-1.566149,1.094556,8.519193,-9.673704]],[[0.798574,-6.999320,5.812950,-0.844089],[-4.491393,9.322940,6.354446,-3.117043],[0.235451,4.678392,-7.769703,-7.578568],[-5.726477,-1.258510,-2.598644,-0.895200],[3.116572,-8.065696,-6.022344,-8.783309],[1.601901,4.401588,1.388209,-1.517049],[6.228953,-7.099842,-2.515833,5.058467],[-3.687132,-8.341673,-2.835931,-6.573762],[4.377487,-8.769437,7.110630,-9.400026],[-6.937324,-6.028940,7.127921,9.032517],[-0.005469,-9.799193,-7.481754,3.918022],[4.174834,5.342940,6.972711,8.752247],[-1.201115,-1.897745,-3.368732,-1.182172],[0.317375,-2.614140,6.218628,3.646986]],[[4.090163,-6.307263,0.974905,-3.912978],[4.694657,-4.986208,8.540727,2.406601],[-7.368286,-3.596993,-8.439719,2.836679],[4.741053,-5.149466,2.111008,-6.101640],[4.855134,-5.067371,-5.530574,-3.763741],[-7.214551,-7.785526,-0.517764,3.480384],[-4.278816,-7.150081,8.165886,-4.613035],[4.823516,4.622794,-6.477191,-0.390143],[3.673966,2.347730,7.512962,4.385018],[-7.616599,-0.389707,-9.426944,6.630703],[1.346899,0.174006,-9.030321,9.410914],[3.273005,-8.839418,-6.896036,4.836277],[-1.750659,5.303730,-0.487996,3.736926],[3.639878,-0.084729,-7.972877,-3.544654]],[[4.908594,-5.319448,4.763705,8.061985],[-8.260106,-9.452165,-9.183157,-7.810161],[-7.552119,8.697338,9.813212,-3.212343],[-3.720922,-7.849468,-9.200515,-7.310875],[-9.227993,9.859048,-5.800874,-8.271534],[8.727132,5.125752,6.419481,-5.201530],[7.978611,-8.682937,-6.407318,8.012507],[2.569463,9.705742,-7.402537,0.401556],[-4.824025,-9.350441,-1.289139,-1.376387],[-9.521657,4.896191,8.659627,0.980301],[0.091128,8.075663,-0.835391,-2.853155],[-1.543426,-7.489502,7.042511,-1.643891],[-2.188013,-8.102005,6.968108,-4.836867],[-1.603980,2.502651,8.195462,6.908652]],[[7.019864,6.973523,3.488328,2.133305],[1.073417,1.284828,-1.086486,3.012318],[-5.312720,2.813337,-2.461492,8.765924],[6.274758,-8.058798,-6.790658,-8.261031],[8.795859,7.324744,7.764051,-9.361978],[-3.437755,-2.224612,1.145124,-9.692492],[6.737339,-4.556436,6.170405,3.347538],[-1.245470,-7.139752,9.964963,-7.896973],[-9.165415,8.653872,8.091971,-3.680061],[2.589845,-5.927811,-5.561840,4.038131],[-5.425573,2.125776,9.912354,-9.421351],[3.483599,-9.609595,8.396793,5.085075],[5.435862,-5.762800,-7.452618,-5.042193],[7.686869,4.089439,8.500563,8.298816]]], dtype = "float32")#candidate|1588|(5, 14, 4)|const|float32
var_1589 = relay.var("var_1589", dtype = "float32", shape = (5, 14, 4))#candidate|1589|(5, 14, 4)|var|float32
bop_1590 = relay.floor_mod(const_1588.astype('float32'), relay.reshape(var_1589.astype('float32'), relay.shape_of(const_1588))) # shape=(5, 14, 4)
func_508_call = mod.get_global_var('func_508')
func_511_call = mutated_mod.get_global_var('func_511')
var_1597 = relay.var("var_1597", dtype = "float64", shape = (10, 117))#candidate|1597|(10, 117)|var|float64
var_1598 = relay.var("var_1598", dtype = "uint32", shape = (112,))#candidate|1598|(112,)|var|uint32
call_1596 = relay.TupleGetItem(func_508_call(relay.reshape(var_1597.astype('float64'), [13, 10, 9]), relay.reshape(var_1598.astype('uint32'), [28, 4]), ), 2)
call_1599 = relay.TupleGetItem(func_511_call(relay.reshape(var_1597.astype('float64'), [13, 10, 9]), relay.reshape(var_1598.astype('uint32'), [28, 4]), ), 2)
var_1606 = relay.var("var_1606", dtype = "float64", shape = (10, 117))#candidate|1606|(10, 117)|var|float64
bop_1607 = relay.power(var_1597.astype('float32'), relay.reshape(var_1606.astype('float32'), relay.shape_of(var_1597))) # shape=(10, 117)
output = relay.Tuple([bop_1590,call_1596,var_1598,bop_1607,])
output2 = relay.Tuple([bop_1590,call_1599,var_1598,bop_1607,])
func_1611 = relay.Function([var_1589,var_1597,var_1598,var_1606,], output)
mod['func_1611'] = func_1611
mod = relay.transform.InferType()(mod)
var_1612 = relay.var("var_1612", dtype = "float32", shape = (5, 14, 4))#candidate|1612|(5, 14, 4)|var|float32
var_1613 = relay.var("var_1613", dtype = "float64", shape = (10, 117))#candidate|1613|(10, 117)|var|float64
var_1614 = relay.var("var_1614", dtype = "uint32", shape = (112,))#candidate|1614|(112,)|var|uint32
var_1615 = relay.var("var_1615", dtype = "float64", shape = (10, 117))#candidate|1615|(10, 117)|var|float64
output = func_1611(var_1612,var_1613,var_1614,var_1615,)
func_1616 = relay.Function([var_1612,var_1613,var_1614,var_1615,], output)
mutated_mod['func_1616'] = func_1616
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1662 = relay.var("var_1662", dtype = "int16", shape = ())#candidate|1662|()|var|int16
var_1663 = relay.var("var_1663", dtype = "int16", shape = (16, 12, 1))#candidate|1663|(16, 12, 1)|var|int16
bop_1664 = relay.less_equal(var_1662.astype('bool'), var_1663.astype('bool')) # shape=(16, 12, 1)
func_1326_call = mod.get_global_var('func_1326')
func_1330_call = mutated_mod.get_global_var('func_1330')
var_1668 = relay.var("var_1668", dtype = "int8", shape = (660,))#candidate|1668|(660,)|var|int8
call_1667 = relay.TupleGetItem(func_1326_call(relay.reshape(var_1668.astype('int8'), [6, 11, 10]), relay.reshape(var_1668.astype('int8'), [6, 11, 10]), ), 0)
call_1669 = relay.TupleGetItem(func_1330_call(relay.reshape(var_1668.astype('int8'), [6, 11, 10]), relay.reshape(var_1668.astype('int8'), [6, 11, 10]), ), 0)
output = relay.Tuple([bop_1664,call_1667,var_1668,])
output2 = relay.Tuple([bop_1664,call_1669,var_1668,])
func_1671 = relay.Function([var_1662,var_1663,var_1668,], output)
mod['func_1671'] = func_1671
mod = relay.transform.InferType()(mod)
mutated_mod['func_1671'] = func_1671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1671_call = mutated_mod.get_global_var('func_1671')
var_1673 = relay.var("var_1673", dtype = "int16", shape = ())#candidate|1673|()|var|int16
var_1674 = relay.var("var_1674", dtype = "int16", shape = (16, 12, 1))#candidate|1674|(16, 12, 1)|var|int16
var_1675 = relay.var("var_1675", dtype = "int8", shape = (660,))#candidate|1675|(660,)|var|int8
call_1672 = func_1671_call(var_1673,var_1674,var_1675,)
output = call_1672
func_1676 = relay.Function([var_1673,var_1674,var_1675,], output)
mutated_mod['func_1676'] = func_1676
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1717 = relay.var("var_1717", dtype = "float64", shape = (10, 13, 14))#candidate|1717|(10, 13, 14)|var|float64
uop_1718 = relay.sinh(var_1717.astype('float64')) # shape=(10, 13, 14)
uop_1721 = relay.log2(uop_1718.astype('float64')) # shape=(10, 13, 14)
func_1252_call = mod.get_global_var('func_1252')
func_1258_call = mutated_mod.get_global_var('func_1258')
var_1724 = relay.var("var_1724", dtype = "int16", shape = (550,))#candidate|1724|(550,)|var|int16
var_1725 = relay.var("var_1725", dtype = "float64", shape = (390, 3))#candidate|1725|(390, 3)|var|float64
const_1726 = relay.const([-5,8,2,10,9,10,7,2,1,-4,-10,3,2,1,8,-7,1,-4,1,6,-2,-2,10,-9,-8,5,-1,-10,-2,10,10,-4,-1,5,4,4,8,3,9,-2,6,-5,-6,1,-9,-2,6,-10,-4,-3,-6,4,-4,-3,8,10,-3,-10,-1,8,2,8,6,7,3,-8,-6,3,9,2,3,1,6,-6,-4,6,-4,4,-2,-2,10,4,-2,5,-4,9,9,-3,3,2,4,3,-4,-10,7,-1,-1,4,-3,9,6,-5,7,-9,-5,-8,-1,-9,-8,-3,-10,-2], dtype = "uint32")#candidate|1726|(112,)|const|uint32
call_1723 = relay.TupleGetItem(func_1252_call(relay.reshape(var_1724.astype('int16'), [11, 10, 5]), relay.reshape(var_1724.astype('int16'), [11, 10, 5]), relay.reshape(var_1725.astype('float64'), [5, 234]), relay.reshape(const_1726.astype('uint32'), [2, 56]), ), 7)
call_1727 = relay.TupleGetItem(func_1258_call(relay.reshape(var_1724.astype('int16'), [11, 10, 5]), relay.reshape(var_1724.astype('int16'), [11, 10, 5]), relay.reshape(var_1725.astype('float64'), [5, 234]), relay.reshape(const_1726.astype('uint32'), [2, 56]), ), 7)
output = relay.Tuple([uop_1721,call_1723,var_1724,var_1725,const_1726,])
output2 = relay.Tuple([uop_1721,call_1727,var_1724,var_1725,const_1726,])
func_1747 = relay.Function([var_1717,var_1724,var_1725,], output)
mod['func_1747'] = func_1747
mod = relay.transform.InferType()(mod)
mutated_mod['func_1747'] = func_1747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1747_call = mutated_mod.get_global_var('func_1747')
var_1749 = relay.var("var_1749", dtype = "float64", shape = (10, 13, 14))#candidate|1749|(10, 13, 14)|var|float64
var_1750 = relay.var("var_1750", dtype = "int16", shape = (550,))#candidate|1750|(550,)|var|int16
var_1751 = relay.var("var_1751", dtype = "float64", shape = (390, 3))#candidate|1751|(390, 3)|var|float64
call_1748 = func_1747_call(var_1749,var_1750,var_1751,)
output = call_1748
func_1752 = relay.Function([var_1749,var_1750,var_1751,], output)
mutated_mod['func_1752'] = func_1752
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2235 = relay.var("var_2235", dtype = "float32", shape = ())#candidate|2235|()|var|float32
const_2236 = relay.const([[[7.900175,4.394560,5.049445,-0.453573,-6.194082],[8.970252,3.314201,0.759507,-6.957943,-5.115523],[3.245964,-5.806752,-9.248373,-3.751100,0.142353],[-9.528245,-7.460146,-9.817959,-3.817724,4.552285],[6.833788,-7.170416,3.920039,-2.493392,-3.747748],[-3.162187,0.774962,6.949659,2.467004,1.218666],[-9.684596,3.760006,1.188342,-3.204387,2.758822],[4.504226,-3.037700,9.384660,8.578632,3.606563]],[[-3.099501,9.467420,4.757366,-4.837843,6.489649],[2.124861,7.546238,-9.883883,6.586704,-4.177707],[-4.708203,2.540666,4.246489,-1.244912,-3.462243],[9.656361,-8.178428,5.358526,1.514461,-1.373381],[4.488698,-0.829378,2.952559,-1.755158,6.084098],[9.852178,-7.416267,2.223825,1.018007,-7.822176],[7.825366,3.707930,7.204330,3.157921,-9.741832],[7.449476,-4.319398,-5.613663,-4.038288,-2.919745]],[[4.828645,-9.646190,-3.883630,-9.872290,5.182191],[3.028729,-4.048963,-5.881445,5.282637,-8.597736],[-4.276967,-0.102851,-5.194007,-1.725544,5.777673],[-9.533425,-8.819712,-1.658559,-8.539755,-8.234492],[4.701106,7.403689,-2.475728,8.381582,2.222993],[1.673052,0.997620,-9.431179,-3.369126,1.903985],[7.507993,5.032565,-0.346280,-1.729467,-6.465467],[-6.254277,8.888162,7.583956,-2.907572,5.742895]],[[-2.097122,9.615224,-1.297828,0.052307,-3.078787],[-1.866397,1.655475,5.398902,4.985688,-1.803363],[-4.347366,-1.169065,-4.904100,-9.133002,-8.431536],[1.947774,-0.891856,4.237503,-3.153576,-9.224657],[0.744109,3.349956,-6.149559,-8.279521,-1.623643],[9.520715,7.615003,-4.830394,9.939529,-1.721678],[1.003646,-1.119114,-8.005475,-7.541085,0.984515],[0.455533,-3.348557,2.745262,3.067464,-6.782070]],[[-8.739106,5.248440,3.212324,-7.705515,-6.416097],[3.368654,-2.970512,7.186850,5.236737,8.903814],[-4.801881,5.683845,7.372604,4.705514,-0.795306],[6.944060,4.747156,-7.342435,-3.023365,5.846774],[-7.854330,-6.721908,7.014464,5.839493,-3.696947],[1.366734,-4.802810,4.688918,3.213236,-7.975316],[-1.221791,-0.275044,-3.046189,6.312376,6.352884],[0.004833,3.599363,-1.687594,-5.711206,9.279965]],[[3.368313,7.813575,0.357946,4.720713,-1.983958],[-0.955912,6.558536,-1.570070,8.039864,5.683142],[3.999488,-5.703700,-9.869454,6.319400,5.058307],[9.837318,9.681148,-5.466846,0.739832,9.769078],[3.061279,1.716128,-2.688362,2.445108,4.506321],[7.808211,8.434226,5.189957,-7.748201,-9.187249],[9.491774,-9.783740,6.567430,1.237076,4.506601],[-4.622877,-4.716214,6.117649,8.968883,-3.592364]]], dtype = "float32")#candidate|2236|(6, 8, 5)|const|float32
bop_2237 = relay.mod(var_2235.astype('float32'), const_2236.astype('float32')) # shape=(6, 8, 5)
func_746_call = mod.get_global_var('func_746')
func_749_call = mutated_mod.get_global_var('func_749')
var_2244 = relay.var("var_2244", dtype = "float32", shape = (1650,))#candidate|2244|(1650,)|var|float32
call_2243 = relay.TupleGetItem(func_746_call(relay.reshape(var_2244.astype('float32'), [10, 15, 11]), relay.reshape(var_2244.astype('float32'), [10, 15, 11]), ), 1)
call_2245 = relay.TupleGetItem(func_749_call(relay.reshape(var_2244.astype('float32'), [10, 15, 11]), relay.reshape(var_2244.astype('float32'), [10, 15, 11]), ), 1)
output = relay.Tuple([bop_2237,call_2243,var_2244,])
output2 = relay.Tuple([bop_2237,call_2245,var_2244,])
func_2249 = relay.Function([var_2235,var_2244,], output)
mod['func_2249'] = func_2249
mod = relay.transform.InferType()(mod)
var_2250 = relay.var("var_2250", dtype = "float32", shape = ())#candidate|2250|()|var|float32
var_2251 = relay.var("var_2251", dtype = "float32", shape = (1650,))#candidate|2251|(1650,)|var|float32
output = func_2249(var_2250,var_2251,)
func_2252 = relay.Function([var_2250,var_2251,], output)
mutated_mod['func_2252'] = func_2252
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2501 = relay.var("var_2501", dtype = "float64", shape = (3, 6, 12))#candidate|2501|(3, 6, 12)|var|float64
const_2502 = relay.const([[[2.501422,8.880554,-4.390969,7.683037,4.075510,-8.295373,-5.107559,2.864290,-2.567934,-5.518549,-6.315657,-1.800034],[8.692156,6.942704,4.994380,9.043333,-3.591867,-0.617441,7.350507,-1.708361,5.124624,-1.399951,0.515405,-3.160713],[8.199792,-9.320914,9.760277,-6.928328,5.406037,8.348789,6.867323,1.847854,7.829110,-8.159536,-7.413788,-9.556645],[1.456270,2.759275,-2.363475,0.284543,0.188968,8.462037,-0.769220,9.953175,6.731263,-1.702254,4.797538,7.512252],[2.407143,5.480908,-3.139961,6.661463,5.495823,-8.491752,-5.111581,1.186940,5.051276,-6.040110,-5.798584,-6.673112],[-3.299663,-7.115900,-2.317924,6.383869,-8.132125,4.521433,-0.946205,-9.202486,-0.349838,3.695758,-0.221875,-9.772580]],[[7.576719,8.806136,-3.441064,6.516658,-8.788495,6.532708,1.455877,-3.285187,4.238760,4.494763,-2.044697,1.256875],[-3.564286,-6.192369,1.047426,2.379240,8.148975,6.772859,-1.067671,7.232571,-1.739446,3.166589,7.266845,5.447225],[-7.412521,-6.913238,0.574639,2.283080,-8.347023,-4.502215,-6.660188,-8.241863,7.399512,7.686234,-3.413529,-5.746034],[8.827092,0.165552,-9.915583,-4.892315,7.358601,2.249058,-4.707685,-9.481343,-5.265597,1.870562,-6.303013,2.762401],[3.510561,0.005284,5.812544,-6.867736,-0.019301,2.711741,3.454622,1.876393,-3.353662,8.573975,7.849086,5.790496],[-4.141514,-1.523527,-8.058835,-4.413003,-6.878402,6.107423,-2.625718,8.808879,2.021066,0.036885,-7.050980,1.707203]],[[7.278014,9.564472,6.630137,5.702309,2.473419,-5.121783,3.685898,1.343409,4.849013,5.925819,4.412578,-0.902565],[1.088677,0.096183,-3.819696,-6.953067,3.535559,-7.107082,-7.097666,-1.924833,5.802826,3.155226,-0.662916,-3.355662],[2.150980,0.995101,-1.005646,-6.006151,8.573783,4.615996,-8.073242,1.108374,-6.037262,-1.722951,9.417600,-5.040060],[-6.112551,8.265842,2.818222,-8.900348,6.862290,3.576618,7.649119,6.276330,5.052786,-6.394636,-1.701705,8.633019],[3.934399,7.628598,-6.177784,7.076115,1.426699,8.988186,-3.534445,-2.377669,3.979408,-9.575718,1.423519,5.151746],[-3.212501,-0.870389,-6.786322,9.748636,-6.150097,-8.372598,7.201569,7.579145,8.347088,7.630492,-6.565146,5.225171]]], dtype = "float64")#candidate|2502|(3, 6, 12)|const|float64
bop_2503 = relay.divide(var_2501.astype('float64'), relay.reshape(const_2502.astype('float64'), relay.shape_of(var_2501))) # shape=(3, 6, 12)
output = bop_2503
output2 = bop_2503
func_2507 = relay.Function([var_2501,], output)
mod['func_2507'] = func_2507
mod = relay.transform.InferType()(mod)
var_2508 = relay.var("var_2508", dtype = "float64", shape = (3, 6, 12))#candidate|2508|(3, 6, 12)|var|float64
output = func_2507(var_2508)
func_2509 = relay.Function([var_2508], output)
mutated_mod['func_2509'] = func_2509
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2710 = relay.const([[[-5.251256,-7.521253,-2.894626,-4.427229,9.217055,9.402571,-1.030862,3.259613],[3.134131,6.133950,-8.325739,9.264748,4.502217,-1.270313,-3.102533,-5.713186],[-2.880598,9.776013,7.871015,0.048672,0.081969,-6.001445,-3.678630,9.953256],[-1.124116,-9.350065,-0.477087,-8.716980,-9.363876,5.532972,-4.231201,3.449863],[-6.540500,4.676220,-6.109150,-3.384486,0.771579,1.107599,-6.584291,5.460675],[-0.808294,-0.459980,-0.101159,-8.919870,2.089046,2.526249,-7.122102,3.281484],[6.795799,-9.456193,9.400136,-4.226817,7.963142,-3.504622,-0.120643,-4.595551],[9.131894,9.275306,2.501406,-7.018728,7.284654,8.541494,-5.098052,-3.293211],[1.565543,-2.129881,-8.726408,-3.593625,-9.469723,9.065408,-2.530706,5.242215]],[[-8.224405,9.066917,7.699008,8.897580,-8.107439,-5.799206,2.225514,-5.771214],[3.099244,4.616128,4.799922,5.872159,8.162442,-4.273838,3.993029,5.446899],[-3.881060,3.521456,2.271851,-9.034407,3.579325,-9.405620,-3.861862,-6.344941],[7.476266,5.441309,7.518258,3.196694,1.438313,-4.981122,5.201756,1.166117],[0.811266,7.468386,1.747251,-5.653891,-0.700485,1.824042,9.021585,-3.369490],[3.220062,-6.045709,4.190294,0.854802,0.671035,8.928268,-1.440923,2.293913],[4.597236,-2.762467,-1.076431,-9.168905,0.257925,9.484373,5.501998,-5.539555],[1.401803,7.506725,-1.663612,-4.003618,-8.213598,-7.642114,-9.333377,-8.745435],[9.986890,-8.911297,0.024164,-6.454948,-2.544708,-3.363571,-3.565179,-1.627858]],[[2.489963,-1.361871,6.156167,2.793832,-2.697861,-3.108044,9.899824,-8.310545],[6.135349,2.552854,5.406231,4.073130,6.718101,7.630541,-0.762652,-9.367931],[2.047353,3.073419,4.936606,3.323938,1.363603,-8.691467,-2.239483,5.911915],[7.958442,1.306144,-9.984357,-2.422279,-2.300455,5.081511,3.565014,-0.230298],[-6.629610,4.967845,-9.434249,0.610114,-1.308955,2.378401,6.382154,-9.165689],[7.988753,9.273495,9.180157,6.749656,-8.486585,-2.284956,-7.679671,-0.796068],[2.946383,-1.195623,-6.759986,3.822100,7.203103,-3.373842,5.227364,7.330627],[-0.590968,-2.761529,-8.909954,2.680332,9.957349,0.582857,-9.787434,-4.007579],[0.431526,1.159780,5.577594,5.656372,9.055975,5.353162,-2.187291,0.612082]],[[7.139338,-9.722091,-1.864434,-0.438799,-9.135185,5.761646,-9.988273,-4.474286],[2.469340,0.673196,-0.655529,2.178019,-1.151259,-9.718704,-7.818167,7.310205],[4.950119,7.779355,1.277093,8.470393,2.715497,-8.596436,1.559406,-0.637460],[0.904758,0.909152,-0.440164,6.005410,8.446667,1.558298,-9.908975,7.960278],[0.705592,5.958434,8.656377,-1.643044,8.760734,-8.673839,1.577547,3.812258],[-7.838005,-6.032683,-0.676480,-8.663733,7.437760,8.104480,-8.906367,5.908747],[9.596532,3.605247,-8.628833,-8.320732,-6.775407,-7.684099,5.111939,-4.659937],[-5.074007,-3.489594,4.221127,-2.734168,-1.598052,-2.944741,-3.665223,-7.014931],[-0.638303,-7.610011,1.155997,-8.903908,2.878642,6.307524,6.043583,5.302521]],[[-7.035633,-4.646709,-1.229380,-8.371405,-5.020703,5.023460,6.626067,-8.220655],[3.439532,-5.710823,8.357414,4.413261,5.327658,8.269057,-0.360802,-8.134352],[-3.861014,-0.621218,6.978710,-5.730709,2.986373,-1.378293,7.004841,-6.476253],[-5.770660,-5.376643,-3.433199,-4.206797,-5.188769,-1.921953,-2.240886,-7.835576],[7.753305,0.724419,3.609695,-8.827801,-9.634813,1.624950,1.058779,-4.163015],[-0.590409,-4.679813,-2.701809,-3.765254,-4.211972,-0.237861,2.687225,-7.277168],[1.652071,4.594364,1.525358,-0.541766,8.361443,6.160069,2.473269,-5.718927],[-4.004458,-9.114698,8.737071,-7.516203,1.171198,0.929490,7.313270,9.199954],[3.424664,3.074544,-8.933747,-2.464807,-1.323172,1.057074,-2.774370,1.323482]],[[-6.280411,6.341455,4.594721,9.650007,-4.384324,4.441626,-3.848366,8.642391],[-6.964655,-8.755725,-7.744282,-4.834193,6.772479,-1.897125,5.413714,-7.355230],[-2.643487,1.604963,5.260842,-4.895428,2.463478,5.691800,2.043985,-3.302915],[-1.846903,-4.878071,1.789875,5.567052,-9.090261,-9.960499,7.413970,1.345376],[2.669027,6.651201,-3.711135,-3.080187,-9.185650,0.346299,-1.835576,6.498141],[3.141136,6.896230,-5.107650,8.572440,4.623117,-5.257368,-8.700631,-1.942493],[-3.132058,9.518772,6.788085,0.410830,7.570156,5.903532,-3.984404,-3.017853],[7.439543,-4.449000,-1.516517,-8.325480,-8.445945,7.900983,3.671646,-5.900885],[8.096442,-8.313570,4.676188,-3.177167,-6.471139,9.986475,-9.384903,-9.728330]],[[5.105400,9.784817,-5.681325,8.840348,-9.293179,-1.464888,-7.840805,-7.079956],[-6.433428,8.051322,-5.897637,-3.885484,8.676437,4.218494,-7.987503,3.161155],[-9.902125,3.349183,2.110538,8.616499,1.206374,9.828334,-6.460354,-8.171567],[-2.562673,9.582674,2.103511,2.659368,4.002868,4.876094,7.952969,7.910326],[2.829297,-0.504211,-6.130440,8.849518,1.318496,3.832986,-1.974593,-0.139364],[7.153637,0.618647,-7.162826,-7.216041,9.018229,7.995772,-2.504544,-7.682440],[9.397425,-7.407623,4.458799,-4.291186,-8.192242,-7.520303,6.816561,1.854035],[-8.507803,1.657780,-9.076344,-6.802227,9.129421,-9.426463,4.949375,-4.525778],[9.531506,-7.184854,-7.689528,-8.522534,-6.229074,0.744420,8.671108,1.515996]]], dtype = "float64")#candidate|2710|(7, 9, 8)|const|float64
uop_2711 = relay.rsqrt(const_2710.astype('float64')) # shape=(7, 9, 8)
func_2507_call = mod.get_global_var('func_2507')
func_2509_call = mutated_mod.get_global_var('func_2509')
var_2724 = relay.var("var_2724", dtype = "float64", shape = (216,))#candidate|2724|(216,)|var|float64
call_2723 = func_2507_call(relay.reshape(var_2724.astype('float64'), [3, 6, 12]))
call_2725 = func_2507_call(relay.reshape(var_2724.astype('float64'), [3, 6, 12]))
output = relay.Tuple([uop_2711,call_2723,var_2724,])
output2 = relay.Tuple([uop_2711,call_2725,var_2724,])
func_2728 = relay.Function([var_2724,], output)
mod['func_2728'] = func_2728
mod = relay.transform.InferType()(mod)
mutated_mod['func_2728'] = func_2728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2729 = relay.var("var_2729", dtype = "float64", shape = (216,))#candidate|2729|(216,)|var|float64
func_2728_call = mutated_mod.get_global_var('func_2728')
call_2730 = func_2728_call(var_2729)
output = call_2730
func_2731 = relay.Function([var_2729], output)
mutated_mod['func_2731'] = func_2731
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2788 = relay.const([[[-1,10,-5,-6,-2,-5,-6,-6,-7,9,-4,5,-4,-9],[-3,-9,-7,-10,-9,-7,1,3,-9,10,-9,-4,-5,9],[3,8,-6,-10,-7,7,-9,9,4,-9,-1,9,-10,-5],[1,4,-3,-9,3,-3,-2,-8,-3,-10,9,2,-10,3],[3,7,-1,7,5,-4,5,-9,-6,-7,6,-7,-9,-8],[-1,1,9,9,10,4,2,-4,-5,-6,-3,-3,-10,-7],[-1,-10,-6,-6,10,2,1,-5,-8,-2,3,-6,-8,-7],[-9,-9,-7,-3,-1,-7,4,1,7,-10,5,8,1,6],[2,10,-8,-2,-8,-10,-3,10,-6,5,-4,-8,1,1],[-1,1,-2,5,-2,7,-3,8,1,3,8,-1,-7,5],[7,9,-3,-3,3,-7,6,-4,-8,-5,10,-8,-8,-3],[10,-4,-4,-6,5,-3,7,3,3,-10,-10,2,3,-10]],[[-9,-9,-1,-7,-7,-3,10,3,6,-1,-3,-2,8,-7],[-7,3,2,-4,-6,-9,4,7,5,-1,8,-4,3,-6],[-1,1,9,-4,7,-3,1,-7,-3,-10,6,1,-3,5],[-10,-8,-3,1,-4,-3,6,-5,-10,-3,7,-1,-5,7],[7,6,2,-10,-5,-8,-7,2,-7,-10,1,7,-7,1],[1,1,-9,-5,3,7,-4,8,6,-5,-9,9,10,-8],[-6,-10,8,-3,10,-9,3,2,-2,1,4,-10,-10,-5],[-9,-7,3,-10,-1,-7,2,6,3,-5,10,-3,-9,-7],[4,-1,-4,-7,-8,-7,3,7,-1,1,1,-9,9,5],[-6,10,4,-4,2,5,-8,6,-6,7,6,-1,5,9],[-3,3,-5,-9,6,7,-7,-5,-5,-6,-4,10,4,-8],[-3,-2,-1,4,-10,7,10,-4,-8,-2,10,6,3,-7]],[[-7,-6,3,-7,-3,-10,-5,8,3,-2,3,-4,2,-8],[-5,-3,-9,3,7,6,-10,-2,5,2,-6,-9,-8,1],[-10,-6,3,9,8,-3,3,-4,8,-10,10,1,6,-4],[-10,4,-3,6,10,7,9,-3,-1,-5,-5,-10,-9,-10],[10,1,6,-3,-6,4,-6,3,10,8,-5,8,10,-4],[2,5,-7,-3,4,1,-5,-7,5,-6,8,-6,-7,-2],[4,-5,1,8,6,10,-7,9,5,5,-6,4,-5,6],[7,-8,-5,7,10,-3,-9,6,3,2,-1,-9,-7,10],[5,5,-5,3,5,5,7,4,10,-4,5,-10,-2,-3],[6,-5,9,-3,3,4,7,-5,-7,2,9,8,-3,-2],[1,-8,-7,6,-4,-8,-6,-7,2,-9,1,4,-1,-5],[3,3,-1,1,-3,3,7,-6,-6,5,-7,4,-8,-7]],[[3,3,-1,9,7,-9,-8,-10,6,7,-1,7,-7,-3],[1,3,-5,-1,-1,8,2,-10,2,5,-6,-9,5,2],[-8,8,-8,-7,-5,7,9,-6,3,-1,-6,2,-7,8],[8,5,-6,7,-3,-4,3,8,7,2,2,4,10,-9],[-6,10,-6,9,-9,3,-3,10,-10,-7,-4,6,4,3],[5,-2,8,4,8,-5,2,-9,-9,-2,-9,4,9,7],[-10,-9,2,-8,5,6,7,-2,-3,5,-10,-9,-5,-2],[4,10,-2,9,-2,6,-8,1,-8,-4,4,3,6,4],[-4,8,8,2,-8,-5,9,-8,-6,2,-1,-4,-6,10],[-8,5,-3,-10,10,-10,-4,-9,-6,9,7,7,10,5],[-8,-9,-1,8,5,4,1,-6,-9,-7,-5,1,10,1],[9,5,3,4,8,10,10,-3,-8,-8,-7,5,3,-3]],[[4,-2,-10,-10,3,-10,6,6,-4,10,9,10,-3,5],[1,-9,-2,9,8,-6,3,-1,6,6,-8,3,-4,-3],[-9,3,6,6,2,9,-5,10,3,-1,-3,-10,-3,10],[7,6,-4,8,2,-8,-1,6,-4,-6,-2,-5,-3,-5],[7,8,1,-1,-5,-4,5,3,1,-4,8,3,8,-2],[-2,-1,-6,-4,-3,9,6,-6,7,8,7,-4,-3,-4],[4,4,-4,-6,6,-7,-7,-8,4,-5,-3,9,-5,4],[10,1,-5,10,3,-2,-8,-7,-7,-9,1,2,-4,-4],[5,-9,6,-9,-8,-2,8,8,-3,2,-2,-3,-4,-6],[5,9,8,5,1,-6,-6,8,2,-10,2,7,5,-8],[-2,-7,-4,8,-6,7,8,6,2,8,1,9,3,1],[5,-5,6,5,-8,-4,-8,4,6,10,6,-2,-9,4]],[[6,-8,-5,-7,4,-4,6,1,-1,-10,6,3,-1,1],[-7,-1,-10,-3,3,9,5,-2,-1,7,-7,-7,8,-7],[6,-10,-4,-7,4,-1,-1,6,4,-8,-2,-7,1,-4],[-5,-9,-10,5,2,10,1,4,-10,7,-10,-8,-10,-3],[-8,-8,-9,-3,8,5,-9,7,-4,3,3,9,5,-8],[-2,-5,-8,-3,-2,6,-6,1,5,7,-10,5,-2,-9],[-2,1,-5,-4,9,-10,6,2,-6,-9,-10,-10,7,-6],[-10,6,-3,7,5,-3,-1,-7,8,6,2,-4,-2,-5],[-2,9,-7,5,6,-9,5,7,-4,10,-6,7,4,10],[-8,6,-5,1,4,3,-7,-10,2,-8,-4,10,5,-7],[9,-4,2,8,-6,9,-6,-9,5,-5,9,-5,2,-4],[-1,5,-8,-10,10,8,-6,6,-1,4,6,-5,5,-1]],[[-5,3,6,7,-8,6,4,3,-3,1,6,10,-7,1],[4,10,-7,-7,-10,8,-1,5,8,-5,-9,-5,-4,-10],[-1,-4,1,6,6,2,8,-5,4,-4,7,3,8,2],[-4,-4,1,10,3,-1,-1,-6,-3,-8,10,-9,-1,-5],[-2,-10,9,-9,-3,6,9,4,2,-7,-8,4,-6,7],[7,6,-8,4,-10,10,6,-9,3,4,-3,10,7,9],[7,1,-7,5,-5,3,-4,1,6,6,3,-7,-3,8],[-1,3,5,3,-5,7,7,-7,4,-4,8,-2,-10,-9],[-5,10,6,-5,-9,4,7,4,-3,7,-9,-8,1,-9],[-8,-1,-7,-1,6,3,4,-9,-9,7,4,-1,-4,-9],[8,5,8,1,9,-8,5,2,9,10,-6,3,-10,-4],[-1,3,-1,-9,6,-4,-1,-4,4,-8,9,4,-7,-7]],[[9,-5,-4,-4,-7,-6,3,10,2,4,9,-10,2,-6],[-1,7,-4,-2,3,3,-9,4,1,-7,9,-1,-3,-9],[-7,3,-7,7,5,10,-3,7,-2,-5,-7,5,2,-4],[-9,10,-7,-1,5,8,7,-9,10,4,7,6,10,1],[7,8,10,1,1,4,10,-8,-1,-9,3,3,-1,-7],[10,4,3,5,-10,-3,-10,8,10,-9,5,1,1,9],[3,-4,1,-4,2,10,-6,4,9,-8,-10,-9,2,2],[-6,-5,4,-3,9,-1,-7,-2,1,10,10,10,-2,-4],[1,-10,-6,7,6,6,9,8,-8,10,-8,3,6,-7],[-4,-7,-6,3,3,1,2,-7,-7,-7,-5,6,5,1],[-3,-4,-9,4,-9,7,-9,-3,6,-1,5,7,5,5],[-1,3,-3,10,7,7,-3,8,-3,-2,-1,1,3,7]],[[-9,7,-9,3,7,-5,-7,2,7,1,-3,10,-8,-1],[8,6,-10,-9,-3,-10,8,-9,-8,-7,3,6,3,-9],[6,9,-7,3,-9,-6,-7,-7,2,3,8,-8,8,-8],[-1,-1,8,2,8,-3,-10,-1,7,-5,3,10,8,4],[-3,6,-9,10,-8,3,10,2,6,8,-1,-4,-8,8],[4,1,-4,1,5,-1,8,8,-1,-7,-4,-2,-7,-1],[-3,-3,3,-6,3,4,-1,-3,-10,-6,-1,-10,9,10],[-10,-4,-2,-10,3,5,5,5,4,-6,9,7,-6,-5],[-9,-2,-7,-2,3,5,-9,-3,-2,2,-8,-2,2,-7],[6,-5,8,-6,6,-6,-9,7,3,-2,-8,-1,-3,-3],[2,-3,-5,-5,-10,10,6,-6,-6,5,-3,-4,-1,9],[-8,1,4,10,4,2,4,-1,5,9,10,-1,-1,8]],[[-10,8,-9,7,4,-3,-3,-4,7,9,-3,-5,2,-8],[3,-5,-2,10,-3,-5,4,-5,2,-4,-5,1,3,10],[2,-8,-3,7,-7,5,3,9,9,-4,5,2,-5,7],[10,3,5,-8,-4,4,-1,-5,10,-4,10,-1,-8,-7],[7,10,1,-9,3,-7,-2,10,9,-10,9,-9,1,-4],[-5,3,6,9,-7,6,-8,6,-5,3,-2,-4,-6,10],[4,-10,6,1,7,1,-10,5,-1,8,-9,-9,-4,4],[7,9,9,-2,-3,8,5,-5,10,3,-2,7,-9,-2],[1,-5,9,4,5,6,-1,9,6,10,-5,7,-1,-7],[-3,7,7,4,6,-6,4,-9,6,2,4,-8,-5,4],[-1,10,2,-8,9,-6,2,8,-6,4,6,6,7,7],[-10,2,6,5,-9,-8,9,-3,-8,8,7,5,-7,3]],[[6,-8,3,-8,-9,-6,10,-7,7,-9,-1,6,10,-3],[-2,-8,6,-5,-5,-7,-9,-5,6,7,1,8,-4,4],[-8,10,-3,8,-6,8,7,-6,-8,-5,-2,-10,10,-9],[-2,10,-9,-10,1,-2,1,6,5,4,4,8,6,1],[5,2,-2,-7,-5,3,-5,10,-3,3,10,-1,-1,-10],[-6,2,-2,9,7,5,5,7,-1,5,5,3,-7,10],[3,6,-3,-3,3,9,9,3,1,3,6,7,-6,-7],[-5,5,-6,-9,7,6,-5,-9,8,-8,1,1,7,-7],[10,-10,-10,5,3,-9,-8,-10,9,-7,1,-5,7,8],[-8,9,-10,3,3,7,5,-4,-10,-8,-4,-5,-2,-5],[-8,5,1,-4,-4,-2,6,-10,-7,6,1,-6,8,-9],[-4,9,9,-8,7,-3,8,7,7,6,2,-1,5,7]],[[9,-4,-2,4,7,4,-3,-7,2,-6,-9,-3,4,5],[1,3,-10,4,-9,3,-10,10,-4,4,-8,5,5,-10],[1,-8,-9,-4,-7,-9,7,-10,1,-10,-8,-2,-7,6],[6,10,-5,-4,9,-3,6,-3,-6,-2,7,-3,-10,-1],[-4,10,-7,9,-1,6,1,-8,-1,-4,6,-5,1,7],[-3,-10,-7,6,3,6,8,-5,1,-10,4,1,-1,2],[4,-1,8,-1,2,-1,-5,-8,-10,4,6,-8,-7,2],[-5,7,-6,6,10,10,-7,6,9,4,6,-3,-1,5],[-9,-5,-3,-6,1,-6,-3,4,9,-3,7,-8,-5,-7],[1,4,9,6,4,-5,-6,-7,-7,-9,4,-5,-9,-3],[-3,3,-10,-3,8,5,1,-6,-8,6,-5,-2,-8,9],[-9,2,-3,-7,3,6,-1,-1,8,1,-2,5,-3,6]],[[3,9,-10,-5,7,7,-4,-9,-1,-9,-10,9,7,-9],[1,2,-3,-8,-3,7,7,-9,-7,9,-3,-9,9,4],[3,8,1,8,10,-8,-10,-4,8,-9,-6,-3,7,1],[-1,3,10,-6,1,4,1,-8,-6,-8,-8,7,7,2],[-3,1,-1,8,6,-4,-9,2,-2,-10,3,-3,5,4],[2,-6,-10,-7,-3,-4,-8,-8,9,-6,8,-9,4,-1],[-2,2,2,8,-7,5,-9,-9,-9,7,-6,-7,9,-7],[-8,3,-7,5,-3,3,8,-9,9,8,-4,-6,-8,-7],[10,1,6,1,6,-1,9,-8,4,-7,-5,10,10,10],[-10,-6,-2,-10,8,2,-7,5,-8,4,10,4,-8,5],[-2,-7,-3,-5,-9,-3,-6,5,7,9,2,-7,5,-10],[-6,3,9,2,-3,6,4,3,6,3,-7,-9,8,-5]]], dtype = "uint64")#candidate|2788|(13, 12, 14)|const|uint64
var_2789 = relay.var("var_2789", dtype = "uint64", shape = (13, 12, 14))#candidate|2789|(13, 12, 14)|var|uint64
bop_2790 = relay.left_shift(const_2788.astype('uint64'), relay.reshape(var_2789.astype('uint64'), relay.shape_of(const_2788))) # shape=(13, 12, 14)
func_993_call = mod.get_global_var('func_993')
func_999_call = mutated_mod.get_global_var('func_999')
const_2799 = relay.const([7,8,-3,2,7,2,4,3,7,-1,-5,-9,6,8,-8,-6,8,-10,3,8,-3,-7,-10,7,2,-2,-6,8,6,5,4,10,5,7,-2,-9,-7,2,-7,-7,-8,8,9,-6,-3,-10,4,10,-9,-9,-2,-6,3,10,-8,2], dtype = "uint64")#candidate|2799|(56,)|const|uint64
const_2800 = relay.const([9,-5,8,10,6,-7,-3,-3,-7,-1,8,4,7,-3,7,-7,2,3,-2,8,-5,4,3,-2,-4,7,8,-8,-1,-2,-8,7,2,10,3,2,4,7,3,10,-2,-9,-8,5,-9,10,-7,7,-6,-5,-6,-6,3,8,3,-5,-6,-7,-3,-4,3,-2,-10,2,-6,3,-4,-2,2,-2,9,4,-4,-10,5,-9,-9,-9,-10,4,-7,-9,10,7,3,-9,-9,-10,3,-9,-5,9,9,-2,10,-6,7,-10,-9,8,-8,-6,9,-1,-5,5,9,3,-3,-9,-5,1,-2,-8,8,5,-7,5,7,10,-8,-2,-8,-5,2,-5,-10,-10,7,-3,7,3,1,10,5,9,-7,-10,-10,8,-8,-10,1,-1,9,5,4,-8,9,-2,-7,8,6,1,-5,-9,-3,-3,8,-5,10,2,10,-8,7,-5,-2,8,-3,3,7,-2,10,5,9,-6,-9,-2,8,10,-9,10,10,-1,-9,10,8,-6,-5,-8,-10,3,1,-10,5,-4,5,-8,-2,-5,-5,8,-6,2,7,8,-4,-9,-6,4,7,8,2,6,-6,6,9,-7,-10,8,10,-7,1,-7,-2,-8,9,-4,3,4,2,-1,5,6,8,5,4,-10,7,-1,10,-10,7,-1,-4,10,-6,7,-10,9,8,5,5,4,5,-10,7,4,-6,4,10,7,6,9,8,-3,-1,6,-4,-5,10,-3,-9,-2,-4,4,2,-1,-7,4,8,10,8,5,-10,2,-10,-6,-2,2,5,-1,9,-5,2,-10,9,-2,-7,8,9,-7,4,6,2,-3,5,-3,-6,1,-10,-2,10,-7,-3,2,6,3,-3,-6,-8,-1,5,-7,6,10,-8,4,-6,-5,-5,-3,8,-1,-4,5], dtype = "uint64")#candidate|2800|(336,)|const|uint64
const_2801 = relay.const([-6.779241,8.631712,-5.547848,3.231571,-3.678888,8.205632,9.507134,-3.902633,-2.210780,8.086122,4.365816,3.133348,1.018215,-9.825322,4.040777,9.706132,-3.376055,7.524326,5.335931,-2.230986,3.699100,-9.733125,-6.822949,4.014194,-7.650610,7.996950,-9.225654,-5.856949,4.619223,-0.756213,3.471160,-1.355505,9.005775,-4.091715,-5.134763,-4.573612,-8.113411,3.911094,6.893003,8.312594,6.255445,7.938195,-3.651035,3.699027,0.606211,-8.143675,-0.445661,-0.658269,-1.692260,-0.997068,6.840958,-8.644792,2.721475,-6.509971,-6.232107,-4.432281,-4.621791,6.519090,-5.777805,-6.538110,7.453063,-8.868064,3.972605,3.179131,6.607448,2.501611,-6.894230,-0.299005,3.787871,8.989037,5.587963,4.803534,1.879874,-3.193625,3.963167,0.744103,5.214246,-2.014214,-9.027898,-4.295008,9.605243,-2.625470,-8.133973,-2.902962,9.406757,2.404381,3.777585,-7.366923,-3.584227,-9.215956,5.310105,-8.057882,1.971578,-8.792490,-2.099354,2.029905,-6.075000,2.442619,0.896582,-0.791025,2.460139,7.810111,-5.924430,-9.700635,-3.740158,-9.103366,-0.122660,-9.789046,-3.336634,-9.402153,3.877214,-3.589153,6.820093,-8.899666,4.050354,-5.218886,6.165252,-9.909642,1.001662,-1.256672,2.022925,-7.116267,3.484388,-1.520382,4.406681,-1.158550,-7.573821,-0.805815,-0.330633,-7.429658,3.028958,5.364357,-7.240588,-8.187569,-1.356321,7.768970,0.037849,6.995920,-3.641670,-3.547209,-8.072697,4.549975,-4.960021,5.855148,-6.968640,-3.735957,-1.420528,-8.582753,8.863822,-9.794170,8.860962,-3.129079,0.759650,1.237532,0.371836,3.725291,-5.088505,-0.578425,-9.902198,-0.332407,-1.577663,-7.443405,-0.727236,2.858045,9.335500,0.953031,-5.370918,-2.571977,1.526434,9.108852,2.587061,6.458280,2.317912,-0.112388,5.107074,3.148414,-0.756148,-9.293267,-9.968504,-9.824826,4.660953,9.971105,4.660535,-7.984473,8.448050,0.990646,-7.616816,5.916503,9.767048,-9.798534,-2.484242,-4.734762,9.479436,7.764313,-9.645205,-0.064566,4.921935,0.828034,1.262258,4.980825,-1.731138,3.676228,6.672284,-7.862368,4.283121,1.971013,-9.754378,-6.731778,-7.542002,-2.827558,2.222326,5.776475,-9.722098,-2.172088,-0.689079,-8.616618,-1.204054,5.693825,-9.382740,-6.370608,-7.631546,7.520731,3.765682,5.270047,1.973977,4.446775,-4.918314,1.457370,8.664307,-4.781166,-7.717500,-2.286973,-9.759108,-9.711996,-9.826894,-5.862726,8.029299,9.455073,2.133430,-8.910980,-9.838177,-0.407274,-0.358651,8.469424,2.779538,9.560626,6.948239,-8.837431,-7.678171,-5.381221,-0.503531,4.659576,7.310791,-8.721368,2.021137,6.579511,-0.276725,-5.615169,-3.836280,5.756341,0.841407,3.522777,-0.516067,2.432277,-4.104859,8.608404,-6.610850,-1.280770,-4.470875,3.564632,-2.355221,0.096472,-7.071053,7.883966,-6.479187,-1.094407,-4.161287,-3.304791,2.408804,0.157188,4.125331,-1.957175,8.886790,5.599673,-3.723046,-3.234384,-5.848859,4.680578,9.772290,7.577223,3.012421,-9.998568,0.812227,5.802166,-3.717405,-3.415352,0.200232,1.654645,-1.504375,-5.347691,6.808432,2.716087,0.524864,-1.046216,0.675537,-5.174299,9.787426,-5.533927,7.829571,-5.572996,-8.153529,0.831050,0.365077,2.632081,-2.750412,-2.499242,-1.901783,5.532862,0.482788,-0.178303,5.438161,0.405848,4.425285,0.083917,2.531693,-2.217520,-9.300778,-9.297683,8.663445,3.741126,1.235388,9.475199,5.388195,3.120698,3.771626,-6.000774,-5.727627,0.921126,7.369516,-5.939716,-3.684889,2.907447,3.730748,6.307268,5.096706,-2.789238,-3.633606,-7.506900,-3.805318,-0.609974,2.319303,-2.839980,4.078099,-8.278514,-9.754514,6.692302,3.733662,3.259249,-6.517756,2.245416,-5.720404,9.681621,-9.915542,-9.640303,7.814537,-7.741662,1.277093,7.001059,-1.626997,-1.042196,-0.432825,-2.942214,-8.284471,-4.385391,-3.344177,-9.472921,7.608480,6.200156,6.201361,-2.466400,8.557479,5.199021,7.095364,2.090313,-8.118913,-8.906774,5.071563,0.607141,1.600820,7.347407,6.172508,-9.445887,1.679424,-3.156129,3.822911,3.840388,1.386328,-2.627204,6.884638,5.054966,3.966470,5.041618,-3.780453,-1.395308,-0.461965,4.806761,5.988086,9.640828,2.238031,2.162085,-8.153059,0.495353,1.527443,2.773300,8.834544,5.421426,-7.499472,-0.499566,1.573314,-0.700617,-9.557961,0.885103,8.889038,-7.597414,0.657041,-9.613988,-0.072847,8.061473,3.875236,3.416317,2.047432,0.371640,2.101830,-7.962441,-9.442779,-8.511486,-7.811462,-7.676235,-3.664706,2.828076,-7.411764,-3.273439,9.172246,-1.089561,-8.708898,-0.856294,-6.606991,8.843984,1.224367,-2.298926,1.333845,-8.371491,5.665871,9.801419,7.693286,6.350088,-9.293770,-3.226389,8.916783,-3.886615,-8.257393,-3.477237,-8.781503,-1.703079,1.131295,4.716356,-4.219043,8.280603,-6.067324,4.153167,0.492334,2.995130,-8.088018,9.640919,7.161110,1.801556,-9.389739,-6.340328,-9.268493,-2.642792,-9.671024,-8.221647,3.434620,-2.124075,-7.595034,1.440071,-8.062875,-8.985594,4.111058,-6.306700,6.018246,-5.354260,9.003845,1.206954,-1.068090,-6.896530,1.282493,3.270856,-4.679120,8.785749,4.230211,-5.469149,1.797954,5.733298,-3.120097,3.151693,6.867436,-5.866337,8.211951,-7.757030,3.450177,-3.829466,2.776902,-8.270748,1.272542,2.230100,-2.794796,-8.289866,-6.312384,-7.823170,5.761694,-4.265883,-0.624070,-3.986857,-6.617232,4.074398,7.751164,4.009615,9.379839,-6.904730,5.579130,1.032477,6.304774,8.986417,2.159574,-1.141095,-0.220728,-2.222023,4.531483,-5.601369,9.961439,-3.247321,3.026085,-0.280548,4.209174,8.044858,-6.742955,-1.804808,-3.973505,8.064951,-5.327435,-4.625058,-3.092551,2.726188,6.122926,-9.779252,8.530864,2.357170,-0.612512,9.048929,-1.044402,-6.039677,2.634927,-2.100041,-4.171317,-5.359010,-9.648112,4.973099,6.022206,-0.438789,-4.403540,9.232991,0.838225,-9.454979,-4.685107,6.934187,-5.757859,8.342875,6.163279,4.333009,6.691663,-1.583143,4.965298,5.794915,-3.347264,3.090331,-7.787512,-1.916665,-6.925347,9.591243,-3.727201,7.041496,-8.221069,-0.719209,8.970909,3.304786,4.554532,-1.579141,-0.297581,5.656180,3.052106,8.474767,-0.554744,-2.365685,6.713937,1.035879,-9.967816,-8.041869,-7.759287,-7.153129,7.456565,-8.721183,4.401972,1.626913,-2.603390,-2.444690,3.586628,7.105741,6.515225,-1.017435,0.429714,-5.638823,1.743867,-7.042875,-3.150308,2.022794,9.992449,-9.882786,-7.603978,-4.384204,2.881629,-7.624650,-7.882151,-8.907775,0.685710,-6.668776,-7.926426,3.498492,-1.542020,3.131283,-6.929730,-3.150998,0.867675,1.095441,-6.445347,-0.731782,-6.798330,-7.064310,3.684294,9.405265,-0.125416,4.436199,-7.286012,-4.821970,3.097896,7.970668,-6.681665,6.173325,3.807081,2.158719,-8.637172,1.796957,-2.391481,4.625418,-5.262216,8.564496,2.414956,8.364745,2.040825,-8.267900,-7.599345,-6.098696,3.583898,-5.271157,-1.145126,-6.327149,7.759353,-3.997627,4.151858,9.093933,-8.371123,-7.098207,-1.136468,6.994429,5.344488,-4.421838,-1.453250,-0.490764,-4.777219,-7.869798,-8.423322,0.547336,-3.012293,-1.536006,2.384338,0.182234,-3.546822,9.107987,5.236520,-6.684587,-3.779393,-4.628447,5.302563,-4.398585,6.140834,3.079971,0.563461,-4.675186,-4.579875,-3.072743,-7.756268,8.687838,3.763816,9.683696,0.749410,-1.075819,-2.617986,-9.793913,4.545664,6.832369,4.902761,7.228758,6.426782,-9.020874,-1.148974,-9.503409,-7.687230,3.091029,-4.695475,0.405782,-7.358683,-7.862230,-7.768039,-0.822748,5.423302,9.254932,-8.995222,-3.267534,-9.224627,1.563909,0.878070,0.677346,7.801766,9.616146,-0.333741,-2.956573,-5.691003,7.004902,1.236755,6.114578,-3.002804,-6.678243,0.436443,-7.589750,2.655567,-4.639682,7.087374,0.271201,-9.134589,3.797123,1.698225,7.131929,-8.919891,-4.637943,-8.329156,-4.284537,-2.087981,-4.434959,5.662908,1.915209,-7.133039,7.766242,-5.876642,1.177496,-7.640257,2.974990,-9.143090,5.236135,6.948894,-3.068469,9.004079,-2.111259,5.181226,7.712884,-7.387920,-0.437613,-3.835073,-0.869408,-7.841273,1.936011,-3.666367,-4.577341,1.693197,4.456118,2.918347,8.914537,0.013440,2.641916,-6.458409,4.349538,9.576126,5.750330,-2.679441,-6.665483,4.881748,3.603124,-1.000347,-6.723080,4.252531,1.733075,-3.517490,-3.320841,-6.614032,-3.308569,-9.141155,9.956227,3.070331,-2.539564,8.900831,-3.116891,-8.059888,-6.830739,2.767053,8.756450,9.961571,-4.013431,5.028520,9.398288,-8.077625,-6.494004,0.974119,-5.726136,-2.071899,-3.878107,-0.690026,0.825857,-7.936917,3.017740,-9.280754,4.086688,2.676026,0.077069,-2.707406,6.476156,9.735016,4.454914,6.579320,0.100684,-6.148995,6.483563,7.767847,-0.494064,4.264183,8.583185,-8.872803,7.700623,-4.920767,-7.673023,3.230789,2.215128,1.004883,0.740536,9.458193,-2.114273,4.208776,-5.367026,-9.127920,-2.432025,-5.735783,-4.797561,-9.965165,7.744931,-1.087321,2.792033,5.051203,-6.867906,-7.405362,5.826293,8.023983,0.051559,-8.681476,4.409440,-0.138681,-3.336992,3.217940,5.152617,-7.153097,1.759328,-1.176412,-8.459515,7.020424,-2.094766,-3.237548,2.050094,-7.867605,-4.927202,-5.990575,0.042992,-5.752007,-0.052630,-5.027781,3.799305,-9.346625,-0.728237,-7.227286,-4.220259,3.246041,0.267965,-1.037245,8.282694,2.055375,7.229572,8.834344,4.613650,-4.408049,-7.815527,9.135537,1.736364,-7.781944,2.813054,-4.254833,-9.613610,-8.748766,-9.853378,0.383764,1.010747,9.382468,-7.393215,-6.379958,-7.594536,2.453043,4.127288,9.227549,-9.866514,-1.929014,-3.104606,4.293755,9.414302,-6.814452,0.922509,5.390328,-6.969459,1.333946,-1.804270,-7.973770,9.017948,5.476977,5.974216,8.249407,-9.272105,8.992351,4.598197,7.971818,-9.658491,-6.440202,9.052338,9.860927,-8.769920,1.611932,-5.975864,-4.992475,4.383605,-6.101299,-6.508731,8.186121,-0.705857,1.250843,2.886540,-6.583948,-7.208578,4.065780,-6.439513,8.578077,-8.667833,5.456566,6.303717,-1.887053,0.179919,4.765859,-9.154418,-0.064382,2.939973,-0.224806,3.693012,-2.287248,8.301521,9.169582,-8.728606,1.388853,4.849219,2.842939,-2.868701,-3.837681,1.205520,5.122472,-1.678606,-3.429512,6.986286,-3.178398,3.730409,-1.121996,9.282710,-8.224563,-2.163586,-7.360880,0.269359,-8.005992,5.525200,3.001608,-8.796567,-3.418520,5.033140,-4.529759,-4.039495,8.820796,-9.168102,-4.990606,3.851338,1.468006,-1.732679,-6.217675,-8.844755,2.104248,5.778158,-9.752463,2.157663,-6.733949,6.160226,6.532337,0.089348,4.237479,-4.031529,7.637352,-7.861582,-2.781454,-7.478586,-9.739913,3.625845,-3.439897,0.560313,9.458025,-5.137548,7.643519,-3.188996,7.426208,7.954054,5.668173,-2.601822,4.018339,-0.384677,-1.593718,-5.171555,7.509465,-9.597855,-7.230785,-6.201289,9.305145,0.697854,-6.248034,4.202753,-6.000014,-0.889818,6.619825,-0.466617,1.053954,-4.481006,-9.999825,0.222723,-0.565502,2.013242,6.725319,-0.136232,-9.225962,5.391234,-7.853684,-7.711988,1.519200,-3.734551,-0.383725,3.069217,5.851595,0.541891,9.254528,5.730943,-2.909915,-0.599843,-5.927818,-0.697291,1.092807,3.858257,6.434952,-3.534787,-9.782951,3.415684,3.783270,5.425010,-4.003865,-0.823815,5.362637,8.727113,6.745890,4.250072,8.245220,-0.458975,2.343006,-4.307253,-2.872494,8.671478,1.156210,8.972924,9.860688,-7.329254,4.081881,8.330660,-9.954201,-6.849140,3.888330,-7.021949,-0.329931,4.797897,-3.775976,-6.051040,-5.827847,-9.296721,-4.905201,-3.169777,-1.162896,3.245035,-9.968658,-0.296851,4.766981,-0.429099,-0.032131,3.282248,0.820391,-5.216184,-7.894141,-7.209656,-4.713791,6.196286,-1.115348,-6.787539,-7.145174,-0.792544,3.155787,0.783817,-8.335365,8.468928,-3.654063,1.062576,5.695353,-8.183384,-4.962338,-2.687155,5.417457,3.184594,7.195772,-0.087766,2.425205,-3.845418,2.660321,7.643659,6.998027,-8.282337,-1.534336,-1.125473,4.947551,7.631144,9.679881,-2.556335,1.138309,4.102923,9.926907,-8.865349,-6.553407,1.516276,7.877918,9.448692,4.481594,-6.678584,3.139470,9.465758,0.849402,-3.854847,-5.134219,2.954686,-2.715559,7.086332,-9.750373,-4.368707,-3.699763,-0.579686,4.325554,5.769816,5.566526,-0.534885,-5.856049,2.367592,-8.838036,-9.262209,-9.866342,9.536429,-8.413477,2.620619,-0.854106,-9.299102,6.512250,-9.018310,-6.492808,-2.439612,-1.921293,5.167534,-1.343961,-9.161197,-2.225824,-6.946629,2.025297,-9.200922,-6.437424,-7.520940,0.413568,8.745982,-9.649536,0.742713,4.277139,-4.280942,-0.211647,-2.801847,0.014472,-3.164531,-5.562294,-9.674520,-8.046207,7.907678,-3.150944,1.371794,-8.376947,3.042160,7.012118,-7.772904,-7.767316,-7.391300,-8.712009,2.581668,5.098547,8.304825,-1.005067,6.435455,-5.883139,3.102018,1.490936,9.174333,-2.969454,-5.071723,9.412764,-6.908459,3.538897,6.915140,-2.673309,0.152085,-7.773302,1.326905,1.647480,1.516199,2.693462,-5.813159,3.237784,1.312362,-0.219598,0.270428,-0.594647,9.848259,-4.236934,3.909430,-6.260095,3.515393,5.526478,8.231511,6.124892,7.235278,-1.493108,3.953311,0.381631,2.619207,-7.117402,6.511339,-5.872398,2.320684,6.130713,1.630853,4.064255,-1.823981,3.374847,3.161697,-1.596507,-1.337929,0.558878,4.599920,-7.597576,-4.774987,4.244621,4.627401,0.446851,2.266684,0.296547,-9.554789,1.438550,0.501416,-7.600434,9.574671,4.962105,2.243885,-3.440381,2.016042,1.513249,3.580037,-9.122406,2.378023,0.131100,-6.537691,1.710012,-5.171753,-3.143086,-7.162263,-8.281461,1.380022,9.573608,-1.124305,3.269432,-6.654640,-6.443495,-0.804521,-1.018154,-7.522771,-2.878833,-2.343855,2.357168,-3.506336,-9.786169,-3.130831,-2.124237,0.364850,4.129129,4.578119,5.406955,5.631996,-8.279424,-9.075124,8.739500,-1.207918,-3.470796,-1.327272,2.770152,0.479173,9.330334,7.451607,5.729032,7.651291,-1.489335,-0.136728,-0.789893,9.584982,0.701871,6.968099,-6.716975,-3.087499,-2.206080,-9.227731,9.687982,5.839011,-5.714837,-1.927872,4.236925,-5.411812,5.819240,-2.901848,-3.815406,-6.744037,3.231044,7.867082,5.844657,-7.523736,-1.728373,-3.470242,-8.562628,-7.952005,-3.972451,2.103041,-8.599593,7.577327,-5.657361,1.885422,-4.173707,-6.446689,9.037565,3.070870,9.455350,-3.560980,6.120684,6.071822,-7.666752,-3.488221,-4.375626,5.246120,8.656408,-2.176057,-9.134113,-4.628816,3.043562,-2.848117,-9.191720,-3.342412,-9.712221,2.413810,5.870841,2.748106,-3.901025,-4.080752,5.354752,8.756868,-3.351077,-4.020114,4.184014,9.366572,1.831935,0.361707,-8.987439,3.666198,-8.400751,-4.262460,1.536902,-3.678752,0.810225,1.072836,-3.272740,7.626714,-6.557196,5.023501,-8.734035,9.926427,-3.286208,-8.314715,-9.901723,8.732764,-6.949871,-8.922326,-7.267698,-7.137431,5.785972,-6.739464,-1.233532,-3.194912,-2.974173,8.915153,6.396920,-6.699903,2.810425,-0.740021,6.368470,3.393337,6.878424,2.172984,-9.884195,4.359280,2.771162,8.842004,8.836591,8.601724,8.394060,-7.006983,4.608170,-9.579112,5.338023,-5.211354,6.340067,1.047195,8.644771,-2.440615,-3.164545,1.546380,7.201767,5.842871,-0.987491,-5.624805,0.290487,-1.956370,-5.333220,-9.728617,2.910073,-1.739894,-5.230594,2.809232,-9.445529,4.545044,6.822812,2.177516,0.175896,3.047871,7.775730,6.596135,7.491220,0.013659,-0.111697,6.963130,-1.836292,-3.553824,3.024744,-9.732800,7.407456,-0.108455,-0.953844,-5.486206,1.850192,1.422970,5.844984,2.674415,3.494683,-1.524606,-8.909778,9.379038,5.080608,9.893569,-6.733053,4.133579,9.430988,-4.733382,7.651253,5.254539,3.135845,6.452979,4.011368,9.889476,8.554127,8.705370,6.986732,-4.698562,-0.425877,-4.783973,3.389876,7.110636,5.113677,-4.910652,-5.976379,2.616161,-9.796023,-9.318225,-4.047843,-1.023060,-5.919215,0.164254,9.874399,-6.146998,-0.283178,-5.358900,-6.781737,-8.133157,7.919456,-8.344174,8.698654,5.832880,-2.559566,5.112105,3.624094,-1.642927,6.215084,-0.975958,7.232015,0.353270,3.403540,9.439123,1.811159,8.374840,-1.112476,-1.855494,-7.567286,-4.780112,7.579723,1.524396,4.542195,-4.118522,9.797494,3.944577,-6.947027,-9.564107,-8.584629,3.232867,-2.836752,0.350153,3.067962,-6.483395,0.645246,-8.741049,-0.783179,-2.434090,-5.012095,2.779195,1.336175,-5.524167,3.609011,3.246558,0.346200,6.107702,4.619074,-5.850721,-6.727165,-1.598435,4.192854,-0.914116,-4.841784,-6.362624,-6.214033,8.750525,-4.446800,7.596326,-1.766726,-5.019709,0.094844,6.447781,-5.749418,8.455381,-4.706584,-6.878699,1.004926,-3.376923,2.031785,-6.955161,-6.411601,9.672702,0.881990,-5.440713,5.248352,8.045091,-7.590057,-5.810092,5.178185,1.005967,9.677446,7.811604,-3.948494,0.079128,-2.254933,3.396070,4.112508,-6.572824,5.537058,-7.371319,1.913030,-9.515608,0.631903,-0.149905], dtype = "float32")#candidate|2801|(1650,)|const|float32
var_2802 = relay.var("var_2802", dtype = "float64", shape = (1170,))#candidate|2802|(1170,)|var|float64
call_2798 = relay.TupleGetItem(func_993_call(relay.reshape(const_2799.astype('uint64'), [4, 14, 1]), relay.reshape(const_2800.astype('uint64'), [4, 14, 6]), relay.reshape(const_2801.astype('float32'), [1650,]), relay.reshape(var_2802.astype('float64'), [1170,]), ), 3)
call_2803 = relay.TupleGetItem(func_999_call(relay.reshape(const_2799.astype('uint64'), [4, 14, 1]), relay.reshape(const_2800.astype('uint64'), [4, 14, 6]), relay.reshape(const_2801.astype('float32'), [1650,]), relay.reshape(var_2802.astype('float64'), [1170,]), ), 3)
uop_2811 = relay.asinh(call_2798.astype('float64')) # shape=(13, 10, 9)
uop_2813 = relay.asinh(call_2803.astype('float64')) # shape=(13, 10, 9)
func_1252_call = mod.get_global_var('func_1252')
func_1258_call = mutated_mod.get_global_var('func_1258')
const_2818 = relay.const([-8,3,3,9,-8,5,9,6,-6,-3,-4,3,10,-6,-9,-7,2,-5,4,2,-5,7,-6,1,6,9,4,-10,9,3,-4,7,2,2,7,10,-1,-5,-2,9,2,-7,-9,1,2,-5,8,-4,-3,-8,10,-4,7,-8,-6,4,-6,-4,-8,2,-1,-8,-1,9,9,-6,-7,8,10,10,4,3,7,-6,4,-6,-6,-4,-7,3,-10,4,9,-1,1,-4,7,4,9,-8,-7,6,1,2,-2,-5,-4,-2,-5,2,4,1,-7,5,5,7,-10,-7,4,8,-4,2,3,1,-9,-4,-10,6,1,3,5,-2,-4,5,-8,-8,5,10,-6,-8,1,7,10,-9,5,9,-2,6,-7,6,3,10,3,-7,-9,3,-10,3,4,-9,4,10,8,-3,-8,-2,4,10,-2,-6,6,4,10,4,-1,-2,2,4,9,-4,-6,-9,-10,8,7,-4,-3,-7,-8,-6,5,-6,9,6,7,6,-6,-4,3,-8,-7,-3,1,-5,2,-9,-9,-5,-7,8,-9,-9,-9,-3,6,1,4,-6,-4,5,10,5,1,10,1,1,-2,6,5,2,-9,-7,-6,9,3,10,-7,5,-4,-3,-10,-4,-7,4,10,-3,8,3,2,6,3,9,10,6,-8,1,-7,10,7,-4,-9,-7,7,-1,-9,2,-2,4,6,7,2,2,3,1,-8,-7,4,-4,-4,-7,3,-9,-4,-8,-2,4,5,3,-8,9,9,-2,2,3,-10,-10,-4,9,-1,-8,-4,-1,6,6,-6,1,3,-2,7,2,8,10,3,9,6,1,10,8,3,2,-1,9,-4,10,6,9,-5,5,-8,-4,-10,6,-8,-7,-10,-4,-2,6,6,9,9,-6,-7,-4,3,-1,6,4,2,5,-10,5,-4,8,-9,1,-5,4,-6,-10,8,-6,9,-8,-1,4,-4,3,-10,-5,10,-6,-3,-10,1,-1,-1,3,7,2,-4,1,-5,-3,9,-1,6,-5,-10,-9,5,9,-5,8,2,1,-6,4,-7,6,7,-5,7,-1,7,9,7,7,-10,5,-7,-10,7,4,-10,-7,10,-9,2,-5,7,-10,-3,8,4,-9,-8,-5,4,-8,-2,3,-9,-8,-10,9,-8,-4,9,-6,5,-3,-4,-9,-8,5,2,-1,-8,-3,1,-10,2,-1,5,-4,-5,-5,-7,-9,1,-4,-10,5,3,8,9,-4,1,-4,7,9,4,2,10,6,-5,-6,7,-5,-9,-6,-3,3,-8,-2,-2,-8,9,-10,1,-10,-8,1,10,-6,3,1,-2,9,9,8,6,-2,4,-4,9,1,-2,5,-10,-3,2,-8,6,8,-1,-1,-10,2,4,-1,9,2,-4,-3,7,9,10,6,5,3,10,-2,6,8,-9,-5,-9,-2,-6,-9,-1,-2,6,-6,4,6,5,6,-4,-3,3,3,-7,-7,2,-5,4,3], dtype = "int16")#candidate|2818|(550,)|const|int16
var_2819 = relay.var("var_2819", dtype = "uint32", shape = (112,))#candidate|2819|(112,)|var|uint32
call_2817 = relay.TupleGetItem(func_1252_call(relay.reshape(const_2818.astype('int16'), [11, 10, 5]), relay.reshape(const_2818.astype('int16'), [11, 10, 5]), relay.reshape(uop_2811.astype('float64'), [5, 234]), relay.reshape(var_2819.astype('uint32'), [2, 56]), ), 2)
call_2820 = relay.TupleGetItem(func_1258_call(relay.reshape(const_2818.astype('int16'), [11, 10, 5]), relay.reshape(const_2818.astype('int16'), [11, 10, 5]), relay.reshape(uop_2811.astype('float64'), [5, 234]), relay.reshape(var_2819.astype('uint32'), [2, 56]), ), 2)
bop_2823 = relay.maximum(uop_2811.astype('int8'), relay.reshape(call_2798.astype('int8'), relay.shape_of(uop_2811))) # shape=(13, 10, 9)
bop_2826 = relay.maximum(uop_2813.astype('int8'), relay.reshape(call_2803.astype('int8'), relay.shape_of(uop_2813))) # shape=(13, 10, 9)
output = relay.Tuple([bop_2790,const_2799,const_2800,const_2801,var_2802,call_2817,const_2818,var_2819,bop_2823,])
output2 = relay.Tuple([bop_2790,const_2799,const_2800,const_2801,var_2802,call_2820,const_2818,var_2819,bop_2826,])
func_2840 = relay.Function([var_2789,var_2802,var_2819,], output)
mod['func_2840'] = func_2840
mod = relay.transform.InferType()(mod)
var_2841 = relay.var("var_2841", dtype = "uint64", shape = (13, 12, 14))#candidate|2841|(13, 12, 14)|var|uint64
var_2842 = relay.var("var_2842", dtype = "float64", shape = (1170,))#candidate|2842|(1170,)|var|float64
var_2843 = relay.var("var_2843", dtype = "uint32", shape = (112,))#candidate|2843|(112,)|var|uint32
output = func_2840(var_2841,var_2842,var_2843,)
func_2844 = relay.Function([var_2841,var_2842,var_2843,], output)
mutated_mod['func_2844'] = func_2844
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3315 = relay.var("var_3315", dtype = "float32", shape = (7, 1, 11))#candidate|3315|(7, 1, 11)|var|float32
var_3316 = relay.var("var_3316", dtype = "float32", shape = (7, 1, 11))#candidate|3316|(7, 1, 11)|var|float32
bop_3317 = relay.less(var_3315.astype('bool'), relay.reshape(var_3316.astype('bool'), relay.shape_of(var_3315))) # shape=(7, 1, 11)
bop_3328 = relay.floor_mod(var_3316.astype('float64'), relay.reshape(bop_3317.astype('float64'), relay.shape_of(var_3316))) # shape=(7, 1, 11)
output = bop_3328
output2 = bop_3328
func_3339 = relay.Function([var_3315,var_3316,], output)
mod['func_3339'] = func_3339
mod = relay.transform.InferType()(mod)
mutated_mod['func_3339'] = func_3339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3339_call = mutated_mod.get_global_var('func_3339')
var_3341 = relay.var("var_3341", dtype = "float32", shape = (7, 1, 11))#candidate|3341|(7, 1, 11)|var|float32
var_3342 = relay.var("var_3342", dtype = "float32", shape = (7, 1, 11))#candidate|3342|(7, 1, 11)|var|float32
call_3340 = func_3339_call(var_3341,var_3342,)
output = call_3340
func_3343 = relay.Function([var_3341,var_3342,], output)
mutated_mod['func_3343'] = func_3343
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3384 = relay.var("var_3384", dtype = "int64", shape = (12, 4, 3))#candidate|3384|(12, 4, 3)|var|int64
var_3385 = relay.var("var_3385", dtype = "int64", shape = (12, 4, 3))#candidate|3385|(12, 4, 3)|var|int64
bop_3386 = relay.add(var_3384.astype('int64'), relay.reshape(var_3385.astype('int64'), relay.shape_of(var_3384))) # shape=(12, 4, 3)
output = bop_3386
output2 = bop_3386
func_3390 = relay.Function([var_3384,var_3385,], output)
mod['func_3390'] = func_3390
mod = relay.transform.InferType()(mod)
mutated_mod['func_3390'] = func_3390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3390_call = mutated_mod.get_global_var('func_3390')
var_3392 = relay.var("var_3392", dtype = "int64", shape = (12, 4, 3))#candidate|3392|(12, 4, 3)|var|int64
var_3393 = relay.var("var_3393", dtype = "int64", shape = (12, 4, 3))#candidate|3393|(12, 4, 3)|var|int64
call_3391 = func_3390_call(var_3392,var_3393,)
output = call_3391
func_3394 = relay.Function([var_3392,var_3393,], output)
mutated_mod['func_3394'] = func_3394
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3464 = relay.var("var_3464", dtype = "float64", shape = (7, 5, 11))#candidate|3464|(7, 5, 11)|var|float64
uop_3465 = relay.tan(var_3464.astype('float64')) # shape=(7, 5, 11)
output = relay.Tuple([uop_3465,])
output2 = relay.Tuple([uop_3465,])
func_3473 = relay.Function([var_3464,], output)
mod['func_3473'] = func_3473
mod = relay.transform.InferType()(mod)
mutated_mod['func_3473'] = func_3473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3474 = relay.var("var_3474", dtype = "float64", shape = (7, 5, 11))#candidate|3474|(7, 5, 11)|var|float64
func_3473_call = mutated_mod.get_global_var('func_3473')
call_3475 = func_3473_call(var_3474)
output = call_3475
func_3476 = relay.Function([var_3474], output)
mutated_mod['func_3476'] = func_3476
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3936 = relay.const([[[7.886682,4.051146],[-4.702158,-0.352279],[-6.378628,-8.438346],[4.332715,1.465477],[3.033820,-2.811905],[-8.003813,-8.844283],[3.906219,9.412163],[-2.883390,-3.694216]],[[-0.992886,-9.954969],[-4.768867,-4.642670],[-0.907000,-5.838073],[1.546092,-0.761838],[-5.227479,0.043371],[5.824518,1.407166],[-0.126859,9.439576],[-9.751771,-0.707255]]], dtype = "float64")#candidate|3936|(2, 8, 2)|const|float64
uop_3937 = relay.exp(const_3936.astype('float64')) # shape=(2, 8, 2)
func_454_call = mod.get_global_var('func_454')
func_457_call = mutated_mod.get_global_var('func_457')
const_3943 = relay.const([-5,4,-9,7,-6,3,-7,2,6,-7,-7,3,-2,4,-7,9,-5,1,1,9,-10,-1,-7,-2,-9,1,8,7,-8,3,1,9,-6,9,-10,-5,3,5,3,4,-8,9,-10,3,7,-3,-1,4,5,-5,2,-3,-7,6,8,1,-6,10,-9,3,-3,6,-1,1,2,10,5,-8,4,4,3,-7,-8,-4,-2,-2,-5,6,7,-3,3,-4,1,-3,-7,6,-4,8,10,6,-8,6,7,9,-9,-4,8,-1,1,3,-2,-7,-3,-8,-6,4,5,5,-2,-5,-9,-3], dtype = "uint32")#candidate|3943|(112,)|const|uint32
var_3944 = relay.var("var_3944", dtype = "float64", shape = (264,))#candidate|3944|(264,)|var|float64
call_3942 = relay.TupleGetItem(func_454_call(relay.reshape(const_3943.astype('uint32'), [2, 4, 14]), relay.reshape(var_3944.astype('float64'), [264,]), ), 1)
call_3945 = relay.TupleGetItem(func_457_call(relay.reshape(const_3943.astype('uint32'), [2, 4, 14]), relay.reshape(var_3944.astype('float64'), [264,]), ), 1)
func_1168_call = mod.get_global_var('func_1168')
func_1171_call = mutated_mod.get_global_var('func_1171')
var_3948 = relay.var("var_3948", dtype = "uint16", shape = (384,))#candidate|3948|(384,)|var|uint16
call_3947 = func_1168_call(relay.reshape(var_3948.astype('uint16'), [12, 16, 2]), relay.reshape(var_3948.astype('uint16'), [12, 16, 2]), )
call_3949 = func_1168_call(relay.reshape(var_3948.astype('uint16'), [12, 16, 2]), relay.reshape(var_3948.astype('uint16'), [12, 16, 2]), )
uop_3961 = relay.tan(uop_3937.astype('float32')) # shape=(2, 8, 2)
func_3390_call = mod.get_global_var('func_3390')
func_3394_call = mutated_mod.get_global_var('func_3394')
var_3976 = relay.var("var_3976", dtype = "int64", shape = (144,))#candidate|3976|(144,)|var|int64
call_3975 = func_3390_call(relay.reshape(var_3976.astype('int64'), [12, 4, 3]), relay.reshape(var_3976.astype('int64'), [12, 4, 3]), )
call_3977 = func_3390_call(relay.reshape(var_3976.astype('int64'), [12, 4, 3]), relay.reshape(var_3976.astype('int64'), [12, 4, 3]), )
uop_3986 = relay.asin(uop_3937.astype('float32')) # shape=(2, 8, 2)
output = relay.Tuple([call_3942,const_3943,var_3944,call_3947,var_3948,uop_3961,call_3975,var_3976,uop_3986,])
output2 = relay.Tuple([call_3945,const_3943,var_3944,call_3949,var_3948,uop_3961,call_3977,var_3976,uop_3986,])
func_3993 = relay.Function([var_3944,var_3948,var_3976,], output)
mod['func_3993'] = func_3993
mod = relay.transform.InferType()(mod)
var_3994 = relay.var("var_3994", dtype = "float64", shape = (264,))#candidate|3994|(264,)|var|float64
var_3995 = relay.var("var_3995", dtype = "uint16", shape = (384,))#candidate|3995|(384,)|var|uint16
var_3996 = relay.var("var_3996", dtype = "int64", shape = (144,))#candidate|3996|(144,)|var|int64
output = func_3993(var_3994,var_3995,var_3996,)
func_3997 = relay.Function([var_3994,var_3995,var_3996,], output)
mutated_mod['func_3997'] = func_3997
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4063 = relay.var("var_4063", dtype = "float32", shape = (8, 3, 11))#candidate|4063|(8, 3, 11)|var|float32
uop_4064 = relay.atan(var_4063.astype('float32')) # shape=(8, 3, 11)
output = relay.Tuple([uop_4064,])
output2 = relay.Tuple([uop_4064,])
func_4082 = relay.Function([var_4063,], output)
mod['func_4082'] = func_4082
mod = relay.transform.InferType()(mod)
mutated_mod['func_4082'] = func_4082
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4083 = relay.var("var_4083", dtype = "float32", shape = (8, 3, 11))#candidate|4083|(8, 3, 11)|var|float32
func_4082_call = mutated_mod.get_global_var('func_4082')
call_4084 = func_4082_call(var_4083)
output = call_4084
func_4085 = relay.Function([var_4083], output)
mutated_mod['func_4085'] = func_4085
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4156 = relay.var("var_4156", dtype = "float32", shape = (14, 16, 1))#candidate|4156|(14, 16, 1)|var|float32
uop_4157 = relay.log(var_4156.astype('float32')) # shape=(14, 16, 1)
func_526_call = mod.get_global_var('func_526')
func_528_call = mutated_mod.get_global_var('func_528')
const_4174 = relay.const([[0.629626],[8.346430],[3.207610],[6.006292],[6.791189],[-0.693480],[-4.403101],[-1.691087],[4.728198],[-3.740285],[3.079622],[9.558097],[5.718633],[-8.826983],[4.198975],[0.377584],[7.779886],[-2.984209],[-7.071185],[-4.119290],[-0.313049],[-8.646049],[-9.962044],[1.362706],[7.088185],[3.078917],[-3.133996],[3.686177],[5.827266],[5.256263],[-8.198114],[-7.886908],[4.412011],[-0.641211],[-1.842922],[6.363613],[3.138344],[6.658447],[-6.284648],[6.686183],[0.452675],[-8.351122],[-4.445204],[8.150223],[1.766583],[-1.658309],[7.484438],[6.032318],[5.982852],[-9.228107],[4.999307],[4.290804],[-1.412103],[-8.439541],[6.767687],[-2.816826],[1.243950],[-8.064455],[-0.400327],[3.194150],[3.840282],[9.647822],[-9.559746],[7.363564],[2.827142],[9.573034],[-2.665961],[6.784675],[-3.097325],[0.015434],[-4.193096],[-9.935315],[6.242645],[4.812339],[-7.028855],[9.280297],[-0.856856],[-7.779136],[-6.435512],[-4.216666],[9.025762],[-4.201526],[-7.919976],[-1.213622],[1.933373],[-0.046121],[-9.890699],[6.200939],[-7.302756],[3.994274],[-4.332752],[-7.286604],[-4.738389],[1.566795],[-4.523047],[-6.798909],[-3.769815],[2.260605],[-0.471373],[7.134832],[-1.780367],[8.012997],[-6.638353],[-2.927836],[6.525219],[5.952051],[-7.396934],[-2.904394],[-5.296747],[5.726081],[-3.041016],[-4.532268],[-8.411774],[0.423621],[-4.344374],[7.594965],[4.677946],[2.770411],[8.109102],[-3.444444],[2.115400],[-1.357731],[6.428948],[-3.582988],[6.756678],[-9.848266],[1.030626],[-3.141298],[5.181418],[3.249551],[-3.038359],[-0.654578],[8.292766],[6.876534],[8.990814],[-1.286333],[1.060274],[-1.517227],[9.276034],[-9.642222],[6.832087],[-8.184433],[7.012918],[-0.650936],[8.314447],[-7.221716],[-6.471668],[5.411133],[-8.450851],[5.287750],[-1.839238],[4.639349],[-1.765682],[-9.428041],[-1.900797],[-4.106761],[0.906315],[5.288936],[1.143232],[8.876271],[9.101001],[-5.071609],[-3.186665],[1.916977],[-3.257530],[-0.683650],[-2.279835],[-5.767001],[-8.585234],[5.365400],[9.697857],[-5.264815],[-1.357153],[-9.182284],[6.678529],[-4.877946],[5.659578],[2.057804],[-3.877896],[8.027313],[8.620407],[5.526390],[2.772410],[-5.209650],[-3.639418],[-4.254903],[-6.647341],[9.285989],[-5.272935],[-4.357733],[8.148469],[-4.273018],[-3.420291],[9.014320],[9.316889],[4.971551],[-4.256488],[-2.482293],[1.916996],[3.593790],[-4.580971],[2.323461],[-5.519469],[-7.491802],[-5.454967],[9.414597],[8.687671],[9.693155],[4.964623],[2.111121],[8.962461],[7.067426],[2.055031],[3.421018],[-3.834373],[3.413824],[-6.924253],[0.477397],[0.887721],[-6.219685],[8.254228],[0.616860],[8.878023],[-4.264116],[8.489989],[7.529267],[-3.208656],[1.437405],[4.779229],[-6.536934],[7.141453],[-5.926331],[8.309459],[4.183963],[8.299560],[-8.985768],[5.577683],[-3.600921],[-9.369629],[7.278729],[-6.642776],[-0.995501],[1.884131],[-8.437649],[-6.000019],[-6.097598],[-0.803886],[-0.654883],[8.648421],[-9.205136],[8.026922],[1.915900],[6.473966],[3.245199],[-4.489997],[1.641453],[-6.754113],[8.569227],[8.803679],[-5.730320],[4.029067],[-5.971911],[3.688390],[6.130609],[-5.009835],[-5.827973],[-6.683644],[-4.428096],[9.907962],[-5.232581],[-0.041722],[-5.315652],[2.394997],[-0.136552],[4.251135],[4.635768],[0.732991],[3.123342],[-8.292165],[5.392932],[-5.519696],[-3.708931],[2.505399],[-3.281173],[-3.708880],[-6.233560],[8.733539],[5.939272],[2.460517],[1.613236],[-1.460220],[5.182999],[-5.002071],[5.380761],[6.256257],[2.359024],[-0.051933],[-9.850317],[-6.294099],[-8.019719],[3.295303],[6.534299],[2.525498],[-6.549999],[-0.957354],[3.730808],[-8.165097],[2.032502],[9.374994],[1.946490],[0.449824],[0.578289],[-9.961382],[-6.494043],[-7.299618],[8.045705],[2.323863],[-7.302761],[-4.173171],[5.510803],[9.099099],[6.338579],[7.511749],[-8.551724],[0.384688],[7.077197],[1.516184],[-2.684571],[3.162556],[-5.457085],[1.092596],[8.739431],[1.185303],[5.419462],[-9.269995],[-0.584112],[-4.704214],[3.847650],[-5.084943],[-0.188604],[2.414701],[9.974857],[-1.834169],[-1.918793],[-3.581005],[-2.772280],[1.142926],[-7.291071],[2.047364],[-1.232217],[9.373490],[1.424865],[-2.934035],[0.006922],[6.505444],[2.264172],[-4.512653],[2.638001],[-2.199383],[-0.490195],[-9.526077],[1.782096],[-6.966752],[-1.040160],[9.085142],[-8.512154],[-4.176653],[-3.527323],[-9.057294],[3.954051],[-2.822008],[3.288987],[0.916926],[5.431594],[-8.665996],[-9.394901],[-8.770580],[-5.314692],[-7.733987],[0.384868],[4.736424],[-6.097609],[7.595435],[7.968404],[-6.497444],[2.074869],[2.886289],[5.717945],[4.403882],[-8.646525],[-3.735398],[6.084325],[-8.701505],[-9.893412],[-0.293460],[7.155660]], dtype = "float64")#candidate|4174|(396, 1)|const|float64
call_4173 = relay.TupleGetItem(func_526_call(relay.reshape(const_4174.astype('float64'), [6, 11, 6])), 1)
call_4175 = relay.TupleGetItem(func_528_call(relay.reshape(const_4174.astype('float64'), [6, 11, 6])), 1)
var_4177 = relay.var("var_4177", dtype = "float32", shape = (6, 11, 6))#candidate|4177|(6, 11, 6)|var|float32
bop_4178 = relay.bitwise_xor(call_4173.astype('uint32'), relay.reshape(var_4177.astype('uint32'), relay.shape_of(call_4173))) # shape=(6, 11, 6)
bop_4181 = relay.bitwise_xor(call_4175.astype('uint32'), relay.reshape(var_4177.astype('uint32'), relay.shape_of(call_4175))) # shape=(6, 11, 6)
bop_4186 = relay.multiply(const_4174.astype('uint64'), relay.reshape(var_4177.astype('uint64'), relay.shape_of(const_4174))) # shape=(396, 1)
bop_4202 = relay.left_shift(var_4177.astype('int8'), relay.reshape(const_4174.astype('int8'), relay.shape_of(var_4177))) # shape=(6, 11, 6)
var_4212 = relay.var("var_4212", dtype = "float32", shape = (14, 16, 16))#candidate|4212|(14, 16, 16)|var|float32
bop_4213 = relay.greater_equal(uop_4157.astype('bool'), var_4212.astype('bool')) # shape=(14, 16, 16)
bop_4221 = relay.equal(uop_4157.astype('bool'), var_4212.astype('bool')) # shape=(14, 16, 16)
uop_4265 = relay.atan(bop_4213.astype('float32')) # shape=(14, 16, 16)
output = relay.Tuple([bop_4178,bop_4186,bop_4202,bop_4221,uop_4265,])
output2 = relay.Tuple([bop_4181,bop_4186,bop_4202,bop_4221,uop_4265,])
func_4270 = relay.Function([var_4156,var_4177,var_4212,], output)
mod['func_4270'] = func_4270
mod = relay.transform.InferType()(mod)
var_4271 = relay.var("var_4271", dtype = "float32", shape = (14, 16, 1))#candidate|4271|(14, 16, 1)|var|float32
var_4272 = relay.var("var_4272", dtype = "float32", shape = (6, 11, 6))#candidate|4272|(6, 11, 6)|var|float32
var_4273 = relay.var("var_4273", dtype = "float32", shape = (14, 16, 16))#candidate|4273|(14, 16, 16)|var|float32
output = func_4270(var_4271,var_4272,var_4273,)
func_4274 = relay.Function([var_4271,var_4272,var_4273,], output)
mutated_mod['func_4274'] = func_4274
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4276 = relay.var("var_4276", dtype = "float32", shape = (16, 6, 5))#candidate|4276|(16, 6, 5)|var|float32
uop_4277 = relay.erf(var_4276.astype('float32')) # shape=(16, 6, 5)
bop_4285 = relay.right_shift(var_4276.astype('uint16'), relay.reshape(uop_4277.astype('uint16'), relay.shape_of(var_4276))) # shape=(16, 6, 5)
func_2728_call = mod.get_global_var('func_2728')
func_2731_call = mutated_mod.get_global_var('func_2731')
var_4295 = relay.var("var_4295", dtype = "float64", shape = (216,))#candidate|4295|(216,)|var|float64
call_4294 = relay.TupleGetItem(func_2728_call(relay.reshape(var_4295.astype('float64'), [216,])), 1)
call_4296 = relay.TupleGetItem(func_2731_call(relay.reshape(var_4295.astype('float64'), [216,])), 1)
uop_4297 = relay.exp(bop_4285.astype('float64')) # shape=(16, 6, 5)
uop_4306 = relay.sinh(uop_4297.astype('float32')) # shape=(16, 6, 5)
output = relay.Tuple([call_4294,var_4295,uop_4306,])
output2 = relay.Tuple([call_4296,var_4295,uop_4306,])
func_4308 = relay.Function([var_4276,var_4295,], output)
mod['func_4308'] = func_4308
mod = relay.transform.InferType()(mod)
mutated_mod['func_4308'] = func_4308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4308_call = mutated_mod.get_global_var('func_4308')
var_4310 = relay.var("var_4310", dtype = "float32", shape = (16, 6, 5))#candidate|4310|(16, 6, 5)|var|float32
var_4311 = relay.var("var_4311", dtype = "float64", shape = (216,))#candidate|4311|(216,)|var|float64
call_4309 = func_4308_call(var_4310,var_4311,)
output = call_4309
func_4312 = relay.Function([var_4310,var_4311,], output)
mutated_mod['func_4312'] = func_4312
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4331 = relay.var("var_4331", dtype = "float32", shape = ())#candidate|4331|()|var|float32
const_4332 = relay.const([[[7.149582],[-5.073961],[7.156920],[-3.996300],[-6.761478],[6.463587],[-0.561324],[-4.959891],[3.824040],[-7.291020],[3.049525]],[[-0.649453],[4.973346],[7.141694],[-8.416714],[-2.418958],[-8.819459],[7.604202],[-5.071437],[6.150241],[-9.234794],[-0.854188]],[[-4.795856],[8.304104],[4.630126],[2.347858],[-9.535832],[-4.210739],[2.568942],[-6.438978],[2.802888],[-2.511788],[9.086751]],[[6.019803],[7.072940],[5.308035],[8.007782],[-2.377131],[-9.425158],[-4.945574],[-9.453209],[0.424398],[3.796315],[-6.500317]],[[3.078984],[-7.972285],[4.429640],[-4.457307],[-2.225854],[-2.894052],[1.542323],[-3.985643],[-8.599482],[-3.350950],[-6.786833]],[[-9.162354],[1.591643],[-7.367609],[1.141105],[1.449730],[6.403337],[4.287980],[-6.874638],[-3.487061],[-7.388456],[8.308486]],[[-1.055023],[-7.244176],[-6.063632],[7.885725],[6.266334],[7.422414],[0.644345],[-9.491221],[-5.285390],[7.628825],[5.602466]],[[1.063893],[9.653557],[9.174794],[-8.341734],[7.956257],[-1.690143],[9.479061],[-3.443372],[3.812463],[-0.748088],[-7.925931]],[[-7.110395],[8.575360],[2.439153],[6.256911],[4.261431],[-8.719204],[-8.544023],[-4.914170],[-0.858437],[4.751272],[-0.030927]],[[-3.573687],[6.043887],[-6.016996],[-3.601130],[-5.951352],[3.136965],[-4.805889],[-5.263752],[-7.149383],[-4.659496],[-6.929455]]], dtype = "float32")#candidate|4332|(10, 11, 1)|const|float32
bop_4333 = relay.not_equal(var_4331.astype('bool'), const_4332.astype('bool')) # shape=(10, 11, 1)
func_1252_call = mod.get_global_var('func_1252')
func_1258_call = mutated_mod.get_global_var('func_1258')
var_4341 = relay.var("var_4341", dtype = "int16", shape = (550,))#candidate|4341|(550,)|var|int16
var_4342 = relay.var("var_4342", dtype = "float64", shape = (390, 3))#candidate|4342|(390, 3)|var|float64
const_4343 = relay.const([-10,-1,-6,1,3,3,10,-10,6,5,-8,4,10,5,1,-3,1,-3,3,8,-10,1,6,6,-9,-7,1,-7,9,2,-9,8,9,1,-7,-9,2,6,3,4,-5,7,2,-1,-5,8,-6,-6,-10,-6,-5,-4,4,9,-4,-9,1,6,-1,4,-10,10,1,-10,2,-7,-2,6,-3,-5,-7,7,-10,3,10,5,-10,-7,-10,1,4,1,-1,3,-3,2,-1,-7,-1,-2,8,2,-10,-8,-5,-4,-8,-6,1,4,6,-5,-4,9,3,-6,-7,-8,5,-9,6,1], dtype = "uint32")#candidate|4343|(112,)|const|uint32
call_4340 = relay.TupleGetItem(func_1252_call(relay.reshape(var_4341.astype('int16'), [11, 10, 5]), relay.reshape(var_4341.astype('int16'), [11, 10, 5]), relay.reshape(var_4342.astype('float64'), [5, 234]), relay.reshape(const_4343.astype('uint32'), [2, 56]), ), 7)
call_4344 = relay.TupleGetItem(func_1258_call(relay.reshape(var_4341.astype('int16'), [11, 10, 5]), relay.reshape(var_4341.astype('int16'), [11, 10, 5]), relay.reshape(var_4342.astype('float64'), [5, 234]), relay.reshape(const_4343.astype('uint32'), [2, 56]), ), 7)
uop_4349 = relay.sqrt(const_4332.astype('float32')) # shape=(10, 11, 1)
output = relay.Tuple([bop_4333,call_4340,var_4341,var_4342,const_4343,uop_4349,])
output2 = relay.Tuple([bop_4333,call_4344,var_4341,var_4342,const_4343,uop_4349,])
func_4354 = relay.Function([var_4331,var_4341,var_4342,], output)
mod['func_4354'] = func_4354
mod = relay.transform.InferType()(mod)
mutated_mod['func_4354'] = func_4354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4354_call = mutated_mod.get_global_var('func_4354')
var_4356 = relay.var("var_4356", dtype = "float32", shape = ())#candidate|4356|()|var|float32
var_4357 = relay.var("var_4357", dtype = "int16", shape = (550,))#candidate|4357|(550,)|var|int16
var_4358 = relay.var("var_4358", dtype = "float64", shape = (390, 3))#candidate|4358|(390, 3)|var|float64
call_4355 = func_4354_call(var_4356,var_4357,var_4358,)
output = call_4355
func_4359 = relay.Function([var_4356,var_4357,var_4358,], output)
mutated_mod['func_4359'] = func_4359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4464 = relay.var("var_4464", dtype = "float64", shape = (5, 15, 9))#candidate|4464|(5, 15, 9)|var|float64
uop_4465 = relay.cosh(var_4464.astype('float64')) # shape=(5, 15, 9)
uop_4473 = relay.rsqrt(var_4464.astype('float64')) # shape=(5, 15, 9)
uop_4479 = relay.erf(uop_4465.astype('float64')) # shape=(5, 15, 9)
func_4308_call = mod.get_global_var('func_4308')
func_4312_call = mutated_mod.get_global_var('func_4312')
var_4485 = relay.var("var_4485", dtype = "float32", shape = (480,))#candidate|4485|(480,)|var|float32
var_4486 = relay.var("var_4486", dtype = "float64", shape = (216,))#candidate|4486|(216,)|var|float64
call_4484 = relay.TupleGetItem(func_4308_call(relay.reshape(var_4485.astype('float32'), [16, 6, 5]), relay.reshape(var_4486.astype('float64'), [216,]), ), 1)
call_4487 = relay.TupleGetItem(func_4312_call(relay.reshape(var_4485.astype('float32'), [16, 6, 5]), relay.reshape(var_4486.astype('float64'), [216,]), ), 1)
bop_4491 = relay.subtract(uop_4479.astype('uint64'), relay.reshape(uop_4473.astype('uint64'), relay.shape_of(uop_4479))) # shape=(5, 15, 9)
func_4270_call = mod.get_global_var('func_4270')
func_4274_call = mutated_mod.get_global_var('func_4274')
const_4501 = relay.const([8.755632,-0.257621,7.332044,-0.036726,-7.948989,-9.258439,-7.571174,-0.119427,7.192625,1.738528,6.748283,6.641760,-1.935808,-5.695722,-6.646085,0.137341,2.375441,5.306050,9.036735,9.156568,0.713810,5.404116,1.790266,-4.343679,9.714617,-9.842001,-2.427818,5.756777,-3.460549,-2.900020,9.590640,-8.283903,6.341244,3.796252,0.503246,7.814496,1.160777,-2.517434,-7.340843,4.184007,-7.265233,-7.275861,-7.807626,6.520159,6.530859,2.736980,0.010504,5.700779,-6.915696,6.930783,4.143033,-1.613026,0.354694,0.627516,-8.314182,-8.783680,-5.986884,6.328944,-4.017554,1.658842,-2.844195,6.382037,-0.115843,1.648348,7.511812,9.757173,6.324645,7.772850,-7.956824,-5.573006,-5.058894,-5.275223,6.895294,8.501784,-0.063630,3.682146,5.006021,9.463289,8.592837,-8.282712,0.148974,3.714580,-3.786034,-5.461405,9.130517,1.523806,0.437767,-0.830573,5.044419,-3.781101,7.306863,-8.641518,-9.596931,-4.463954,-4.316752,6.149290,-9.536412,-6.644829,1.487139,-5.172934,6.508623,-2.122844,3.549832,6.350947,-6.839120,-3.081115,9.993374,2.461032,-0.115168,7.644600,-9.752843,8.553701,6.264991,1.061284,-7.637309,0.139437,7.201471,-7.295997,9.698156,1.597023,4.037752,3.631536,7.662691,3.149730,-8.316835,-2.992852,8.055897,-9.334752,-2.922804,4.070560,6.247261,-7.721912,6.396751,4.318071,7.373809,-9.044915,-0.577544,9.086503,-3.766097,-6.925911,-3.310451,-5.180672,-7.252459,-0.075291,-3.150890,8.914114,4.092662,4.985856,-1.013260,6.205493,1.837586,-3.080498,9.877243,9.452928,-9.715605,-3.537067,9.169416,-5.972348,6.325837,-0.841444,5.290538,5.209293,8.171847,5.264384,5.255585,6.993935,-1.406868,4.456190,-1.603797,-2.264703,-3.583196,3.988500,6.222172,1.714860,-7.538896,-3.300213,9.410811,-9.939580,-3.665751,-8.673760,-5.081391,1.448903,2.276576,-6.657153,1.810474,4.767259,-4.933563,8.417054,-8.399433,-0.093935,-9.873523,-9.863497,6.350924,2.722312,-8.678292,9.859648,1.644739,-0.143029,4.529274,-8.072988,9.478359,-2.738206,-5.888050,3.669132,-4.743230,-2.220766,-2.937237,-3.251397,4.018689,-9.413081,7.445814,3.792928,-5.366614,-6.509147,-2.960451,-2.811771,-7.785211,4.514128,9.079222,1.951813,4.594713,-1.751666,8.270767,5.799566], dtype = "float32")#candidate|4501|(224,)|const|float32
var_4502 = relay.var("var_4502", dtype = "float32", shape = (396,))#candidate|4502|(396,)|var|float32
const_4503 = relay.const([8.361924,-8.126988,-8.066280,3.760215,4.999499,-4.474110,5.093605,2.503740,7.073323,1.356534,-1.457648,9.253826,-6.012393,2.381116,5.815300,4.135167,-0.735525,2.770348,-3.967153,9.068079,0.771828,-5.353708,6.475432,9.266199,-4.826188,1.694181,4.500353,2.420655,0.227012,-8.231918,1.671461,9.066036,0.757219,4.142136,-8.367311,2.415997,-2.221410,-8.097753,4.982340,-0.023203,-4.522489,7.083105,-9.961205,8.066352,1.247891,8.512435,5.648040,-8.395134,1.417726,3.051708,-8.452542,5.863228,-7.836173,-0.306005,-5.388863,4.883591,5.086678,-5.324222,-6.959765,3.818541,1.958684,-2.918840,2.245936,4.082510,-6.522542,-6.702303,-7.277484,4.887093,-2.457608,-0.212665,-9.979498,2.582236,-3.865747,-2.237699,-3.912496,-6.970612,-3.283544,-9.621486,6.466026,-4.683936,-2.429736,-6.033903,-4.308051,-8.518728,-6.997791,6.848225,-7.550296,-3.522964,9.251333,8.157404,-0.341940,3.839349,8.414342,-1.236369,-9.536116,-9.514526,-5.201542,2.010883,3.605780,7.282433,-4.860942,-1.574468,6.190110,-8.639961,4.933120,-8.640029,4.672476,-5.933380,-1.706477,-3.714949,9.290471,8.301003,0.625285,2.283999,-3.615650,-1.220562,9.120304,-7.838560,5.623802,8.890167,-2.133519,-5.757472,-9.112549,-2.787156,-6.448715,9.910681,-4.902320,8.318480,6.156070,-8.569575,4.955817,-6.853134,8.329808,9.003084,7.819717,-0.798376,4.822808,-4.540091,1.021780,-5.822821,2.296222,-1.236865,-8.129285,7.115101,-6.773824,-0.399427,1.332950,-4.687438,2.034915,4.199332,0.700938,-0.583576,9.157358,-2.204858,-6.342684,-9.131531,-4.418419,7.937166,-5.028487,-2.809665,-0.232780,-1.061075,4.174391,-1.785278,-2.414562,-6.560540,2.859239,-6.420779,1.042410,-5.841483,0.348807,8.503070,0.442990,9.440624,3.041143,-6.596842,-6.430720,6.942376,7.160058,-6.086119,-0.521599,8.280172,3.428630,-2.255198,-3.132489,-0.170500,7.431065,8.709394,-9.669538,-7.297673,-6.850272,2.857007,2.555324,5.403133,7.095119,-2.333791,-2.382222,1.682333,-5.226521,-3.598930,-8.880978,-0.365454,-4.834875,-9.343802,-5.275343,-5.473018,4.842084,0.714024,0.812784,-1.688464,-6.034292,-3.400764,-1.578394,4.521675,9.560459,-0.247103,-4.183265,4.505521,-7.077583,-0.735613,-2.618859,-6.249515,-8.351025,-3.457763,-9.126966,-1.080789,1.838076,7.550169,2.434484,-8.834353,-8.409171,-4.201235,-7.273411,4.037454,-4.088175,5.884255,-7.825142,-8.754606,-0.568706,-3.326674,4.107796,2.359008,4.832329,0.584599,5.415500,9.549535,-9.558282,8.506147,6.400536,3.371040,-1.188075,-7.778404,-1.224667,2.057668,4.190390,3.751775,8.602592,-9.409134,1.094843,1.241906,2.683200,-5.074049,-6.082550,-7.819100,-9.764178,4.725869,7.015921,-2.429496,1.973005,-6.957604,4.525438,8.822280,-3.377520,-5.170197,6.744305,5.653089,-0.938857,-1.438189,0.273770,6.506754,9.487005,-6.258050,-7.286511,-1.411987,-6.394072,1.202914,1.718983,-1.280548,-7.404383,0.008861,-4.498614,-0.810805,3.484187,-9.349513,-8.203563,-7.996157,-2.239871,-0.024721,2.896496,-7.958683,3.586003,-7.310212,0.800936,-7.918572,7.077921,4.880014,-8.761856,-4.370742,9.125966,-8.424518,-4.969911,0.760500,8.890180,-0.261248,-2.426253,2.144973,-7.248359,-0.870889,-7.355740,7.422945,5.690499,-9.450765,-7.017500,0.812582,1.220658,2.757049,-2.522354,-7.764717,-1.800679,1.674166,-9.377301,-0.262945,-0.907898,-6.992386,-5.078365,-3.539041,-2.063112,9.950024,5.754788,-3.428579,2.717212,6.928898,-4.293600,0.803037,-2.769177,-6.951296,6.895260,1.163319,9.568720,8.528652,2.942608,4.034084,-8.576293,-9.527687,8.388095,-7.235668,0.374968,3.909562,9.859064,-5.780260,3.241778,-9.421100,-0.091100,-0.272535,1.261961,6.408386,0.670062,0.925394,4.245585,1.185183,-2.155622,4.702382,1.873046,-1.220844,-9.276832,-1.920264,2.915438,-5.478889,-1.702565,3.234015,-8.861972,-7.781060,-2.481473,6.520996,-3.007618,-4.151866,-4.848161,-7.824600,-0.964785,9.881972,4.871173,-5.338891,-7.811699,-3.574358,8.049769,5.163008,-2.869410,6.459911,8.096315,9.103720,-2.323577,-4.190136,6.479338,-0.102616,1.833637,-6.622968,-3.729143,7.216383,-3.309012,6.419446,-8.087228,8.360764,8.968216,5.246443,-0.427200,-5.460369,-3.949834,4.127154,0.888296,-6.774163,5.814377,9.539890,1.393442,2.305199,5.844023,-8.516957,3.670975,-0.338308,-5.070537,6.106788,-6.343121,3.002089,-6.947059,2.428555,3.699035,5.974121,-1.457377,-2.475989,6.103951,0.125791,-9.082773,-8.161908,-7.543089,-3.255447,-1.916280,2.893846,6.991635,-4.736634,5.733698,3.313725,1.927884,-6.585408,-5.600334,5.994329,-8.957369,-3.693460,-1.273058,-5.977292,1.619851,-6.969157,-0.876788,1.359092,-4.676636,4.765015,1.403822,-1.562155,1.850019,-2.492779,1.914450,-6.584502,2.421676,3.275713,6.237726,-5.166472,-1.641263,5.642582,-5.823598,7.496966,-2.688641,-2.549460,7.002655,-6.688411,3.559813,-2.108506,-7.903997,-4.307631,2.308205,-0.377776,2.929551,-2.805505,6.622465,-0.883116,-9.408431,-1.787452,7.955633,-1.787253,-6.696623,1.445385,0.074379,-9.586235,-6.456857,7.403243,-5.860799,5.368953,-0.801166,-3.834805,7.650161,6.657512,-5.572396,-8.536780,1.980116,-8.859329,4.331742,4.540934,-4.346226,-8.059805,3.368275,-7.036998,8.951570,9.403539,1.062622,2.369948,8.048002,-0.094672,5.025020,4.868573,7.419805,-1.848719,5.824961,-4.396324,2.826850,1.597583,-5.769241,9.668615,0.096390,-0.410899,-8.154019,3.847644,-9.801290,9.531015,-4.602498,-9.981248,-5.547305,-7.735959,3.429144,6.535379,1.456573,0.427802,5.975651,-3.298154,6.758474,8.053543,-5.935837,5.699680,3.146321,-2.393098,1.225687,7.714542,4.230396,-4.772672,-9.088695,-6.909784,-1.286471,-3.563532,-6.437126,-0.331867,1.716678,8.175369,-9.574635,-9.590453,1.041513,7.657809,-0.371923,-0.552078,-3.736793,-8.320175,3.728433,-9.987846,-4.150495,8.417081,5.064529,-3.111327,2.187468,7.024012,9.287973,3.460672,-0.508931,3.613789,-3.136567,5.860411,-1.032564,4.033794,-0.294650,2.517339,-9.392647,5.499278,-8.924847,-4.760501,3.827260,8.246549,-2.981170,5.903864,1.894633,1.965966,-1.690377,-2.821175,-6.161896,-7.389999,-7.226864,4.251826,-5.569708,-8.504736,-7.784151,4.596684,-1.382173,-5.971036,9.101581,-1.363664,0.012009,-8.950333,-2.727044,-5.834657,1.093441,9.906920,7.622435,-9.265311,2.792096,-8.194030,-5.925611,7.913352,9.811958,0.164533,4.332967,5.862874,1.287804,-0.433898,6.931859,-8.634846,-9.219438,-1.838679,-6.372163,9.385208,5.114996,3.932332,5.626476,6.021962,8.032554,-8.453365,-0.007891,1.413198,8.677423,5.082923,-1.096302,5.888397,3.090905,-7.527998,2.600362,1.085193,-7.043566,-0.248344,4.120568,-1.700307,-5.681295,0.706817,-8.020781,-1.808050,-9.748492,-6.206236,8.890743,6.543794,5.410254,-1.700680,-4.369347,-4.954215,-2.050440,-1.611035,-1.451774,-8.509890,2.860899,5.584337,-0.657267,-0.139192,0.959517,-2.392146,-2.653213,3.895228,2.085761,-4.633728,8.567029,-8.884252,6.065902,5.228491,0.269586,-8.404957,6.403553,6.568384,4.995959,-2.989204,-2.509982,8.332842,6.088553,6.467202,-4.193755,-4.043435,-6.465508,-9.100262,9.617762,2.336142,7.322521,-5.944944,1.098216,3.699806,3.717740,9.691483,-5.697984,-8.711192,1.269458,-7.642803,-5.241143,6.418695,-8.241210,-6.135123,0.356861,-1.664667,-1.921660,0.808677,-5.984005,-8.557391,-9.020501,-3.290997,1.295739,-1.311327,-7.296991,-8.706241,7.349218,3.696108,5.610613,-1.181902,9.357089,-0.568749,7.447022,3.969420,-7.280258,7.002409,0.423521,3.677794,-0.947078,0.599932,-8.282467,2.527203,3.801364,7.231022,3.328140,7.420427,7.100828,-8.730657,5.694648,-2.108503,6.465822,-8.790337,3.699465,0.921143,-5.391352,-8.805186,1.276925,-8.269242,-3.947446,2.134755,6.788513,-2.898838,-3.569044,3.474281,-5.201849,0.943238,1.353826,-6.335177,7.173104,8.095656,-3.525055,7.252997,5.313713,-1.050147,3.089816,8.382510,-8.462826,7.548860,-4.936587,-7.686602,5.760718,4.410755,-8.735108,5.280694,5.195003,4.699047,0.923567,9.075930,-2.541688,-1.810021,-2.274304,2.238742,-7.520294,4.022024,5.868731,6.659751,-9.370966,-8.293896,8.658001,-9.497086,-9.861715,-5.552197,-4.787849,-3.006947,-8.271948,8.396076,3.832296,2.302077,2.685122,-4.765804,8.431445,9.518139,-9.481390,-6.677979,-1.244360,6.982504,-5.197106,-5.645444,8.327313,4.085209,8.156559,-6.258867,6.898837,-5.922049,1.908347,-6.621156,5.850815,-1.084624,4.487457,5.862263,2.192363,-2.309471,-0.133463,2.793192,8.406076,1.693773,7.806712,2.538102,-8.759102,3.861246,4.723165,-4.321049,-5.802310,-6.375277,3.106739,6.267203,-9.964200,-3.924120,-7.263947,3.529091,-0.236257,-8.613702,-5.673614,0.668399,-7.116951,-4.967047,-8.145819,-8.503089,1.407757,-8.140977,-0.873023,-3.954375,7.621859,8.327116,-6.193769,8.516048,-2.734495,-6.224091,-0.449054,0.949155,-9.670105,-9.775059,-9.110413,4.652988,5.285408,-8.787280,1.311841,0.515019,6.220194,-2.688249,6.784509,-8.780838,-2.890851,-6.623265,-2.736840,8.559202,-4.604460,6.367100,-9.447602,-6.389357,-7.429224,1.769128,4.098734,-5.597440,3.406174,-6.230707,8.531673,-3.147070,8.009495,-6.627960,-3.480719,9.894382,2.799287,3.628513,4.475821,6.892531,-9.419768,-9.916820,1.818541,-9.340735,8.202262,4.173057,-7.940925,-9.769686,8.014356,7.248563,-4.520861,-9.660142,-9.540972,1.372308,7.614600,3.930673,6.410659,-3.684059,9.773415,-3.853512,9.288873,6.625220,7.851010,-0.038194,-6.448121,8.164055,-4.185246,-8.066893,4.578488,-1.825829,-4.956483,6.266447,5.549385,1.149185,-7.236361,-0.971347,5.214320,1.876961,8.935988,9.061888,-3.629186,3.656296,-4.275760,5.389797,0.502526,3.111356,7.121617,-9.314618,-3.740237,1.427970,7.298318,-7.115425,7.648875,2.149955,2.944748,-5.439918,4.871456,-8.965688,0.651940,-4.887057,-2.397542,7.223985,-4.968893,-1.961436,5.223409,5.602417,3.363525,6.128108,-9.490654,-5.372614,-3.180315,1.357924,-2.155636,2.146706,6.610159,-9.444824,0.094597,0.062154,9.983746,-5.852822,-8.429669,6.144069,-8.779081,-5.436428,-7.069664,-9.718320,-0.246695,-1.231067,-5.324931,-7.750787,0.150969,5.805182,-9.540630,-1.531856,-4.868347,-0.018116,0.672090,1.692310,7.897307,-4.425515,-3.459572,-8.732984,-6.236624,4.088341,-1.605701,-3.551883,-1.525418,4.616966,-0.705082,8.509136,-4.921542,0.140819,7.477519,0.835852,7.921419,-4.674589,2.692632,-7.233568,-0.551053,-6.960175,5.875624,-1.866963,-1.509069,9.873821,-4.866185,9.976541,-5.914753,-0.920298,8.929298,-0.724018,0.985480,-1.466922,6.489878,-6.139499,-9.838754,7.416397,5.286887,-3.016985,5.622936,-3.598316,-9.645676,-6.473457,4.983527,-7.385383,6.107730,3.084092,-9.827261,7.087268,-7.559096,3.167234,-3.793882,-6.524949,-3.799770,9.337485,-6.921203,6.752121,9.575266,-3.164166,-2.612831,-9.427285,7.779251,-8.255139,4.617673,-0.595815,3.664064,6.378592,-8.554571,2.848970,-6.896833,-5.842965,1.700236,8.251801,1.792268,1.033563,-1.455839,4.333935,0.119169,5.599221,4.414262,-2.086149,0.978651,-1.689656,1.560837,2.007334,-2.344298,2.767269,3.406538,6.938645,-9.473062,6.622611,-8.357661,-0.062826,-1.559461,-7.345520,4.246699,9.206883,-0.749505,-9.805787,4.941082,8.256826,9.838527,8.969887,0.713460,-8.982874,4.749655,9.991262,-4.854414,7.737744,2.063623,3.026160,-8.976282,-6.656636,-1.583561,5.254616,-7.666051,-5.524127,4.886315,-4.939503,-1.588579,-7.187858,-1.658129,7.479789,0.774787,-5.835421,-6.848975,-9.616614,-0.531177,-0.321658,4.260083,-0.601965,-7.832862,-3.404204,4.628896,9.517204,5.320555,0.397177,8.788370,-9.192757,-9.875601,2.205404,-6.429692,3.956636,-2.796468,-9.335971,7.355574,1.073948,1.824091,5.579464,5.063629,-9.718179,-4.063580,-7.113646,-1.997609,7.380220,1.937445,3.531598,-0.813606,-2.196035,-7.153120,-8.379093,-3.718680,-4.532020,9.771079,-9.795796,-4.034335,2.654313,-1.697705,-6.058301,3.238221,4.764883,-1.454526,-5.598177,-4.873903,-5.943085,6.453254,-7.621828,-5.441398,5.290901,6.946925,-3.901692,-5.620453,-5.596617,-9.930262,1.811404,-0.745979,-6.338440,-9.011279,4.494750,-1.690033,8.684228,2.126445,4.823955,-0.029983,4.614547,-1.015804,6.039049,-4.271950,6.819362,-8.678561,-1.726882,-9.773866,-6.158775,5.054899,4.165830,8.211669,-7.008938,-2.384382,-1.007815,-8.180282,-8.294723,-4.039937,-3.841512,-3.746613,9.464534,-8.680692,1.468919,-0.261758,8.884325,-1.708014,2.620525,-4.724016,-1.307771,3.633663,3.281271,-0.133733,-0.776455,-6.392191,0.416337,1.008971,6.388921,-4.991246,-4.320956,-5.025140,2.355197,-4.805843,-4.843536,-6.126822,6.457784,-7.139722,3.591631,8.137086,7.477871,-7.549996,-3.966980,0.757080,-5.312156,-5.347283,-6.584869,-6.886308,0.894808,2.387043,3.606876,-3.185768,4.998614,-3.057928,-3.152544,1.689201,0.084369,-5.878005,1.332275,8.908105,-1.028352,-2.442895,1.921200,-8.275903,5.070039,-2.412172,4.559436,7.560522,6.087246,9.954290,5.463574,4.191389,0.951239,-6.426316,2.812318,-0.686480,-2.818854,8.479962,6.446062,-5.670716,0.778762,-0.850332,-7.625082,7.612621,3.628406,9.936845,9.272247,3.979781,-6.861671,4.426932,8.098260,4.122978,-5.452851,8.069842,-8.211122,-8.920813,9.653536,-7.313598,2.896969,4.724240,8.885691,7.881205,-7.477728,8.873926,4.472890,-0.723793,-6.097530,-6.381481,-8.962275,-4.387057,1.323960,-1.382823,1.474661,-1.965346,2.764724,1.907495,-2.019166,0.962076,6.389531,-4.100289,-3.408636,-1.719794,-4.880664,7.339838,-4.716889,-3.885365,4.137206,-7.300059,1.034981,1.292328,0.404267,7.496962,9.746389,-8.843259,3.938943,6.495918,5.514549,-5.604028,-8.355105,1.405066,-4.368311,1.904027,-9.045863,-6.098240,-5.582659,-0.549151,3.542462,-2.385238,8.426366,8.582633,4.764954,-6.768326,-5.547218,-7.904027,-5.077117,-2.680808,1.620496,-9.865385,4.072090,-9.978225,-3.902619,8.700675,-8.741280,2.277268,-0.783774,6.106832,2.880253,0.592384,-5.958909,9.116462,6.154160,0.257257,5.612459,-5.955913,2.095173,-5.852184,-5.047741,4.136570,1.004004,-0.077650,0.668930,7.579124,8.249351,4.364080,5.459099,-4.502128,-3.798585,4.603945,-5.142196,-1.295063,-7.727044,7.135085,7.288206,-6.521722,6.663520,-4.754467,-1.463761,-3.594390,-0.052043,8.099235,-4.632747,-3.914035,-9.596019,-8.835772,-3.219004,-3.790969,1.341822,1.932414,-5.518187,-1.371539,-1.527658,-6.283757,-7.398074,-6.973253,-4.112951,-8.045851,8.352156,1.472749,0.329243,-6.057385,1.275095,-7.743461,8.585850,4.919384,9.367491,9.173731,-6.063852,-8.788579,-8.381217,-6.875350,1.759776,7.726568,1.695650,-2.362703,-4.591305,-6.169089,4.959641,1.404449,-1.796982,-1.910887,-5.657949,9.443268,7.224097,4.930942,-7.952490,8.987452,5.896935,0.065410,9.333085,9.698184,-3.643013,6.910620,-6.757398,-1.848106,0.139387,5.884582,0.569709,0.744061,-8.735645,-3.493556,-5.289217,-3.708734,4.977001,-4.726441,5.719756,-4.508719,-1.279718,0.352379,-6.004754,7.986395,-9.403928,5.713381,-1.345479,3.115733,-0.648813,5.041229,3.281582,-4.319804,8.807309,3.077135,-2.360457,1.511813,-0.293502,1.699370,-2.301839,-0.776071,8.817691,-5.969335,-9.665021,7.734510,-4.667578,6.291941,-3.433242,-3.211027,8.710755,0.135659,0.786954,-9.141325,4.572381,4.775326,-8.934768,5.477881,2.472495,8.871366,5.291138,-5.458842,-1.119275,5.020277,1.627282,-6.642523,0.957888,-8.619086,-9.853718,-5.087623,8.425267,-6.011144,-1.771736,1.676815,8.032968,9.263912,0.667512,-7.475763,-3.143197,7.392239,5.725877,-3.998407,9.338911,-9.832697,3.058855,3.447471,-9.294371,-1.710662,6.242444,-9.603104,4.508757,0.545205,-6.440119,-8.088852,8.916221,-6.838874,5.069927,-7.432437,-7.013143,3.512769,7.666730,-3.227057,-9.147067,-1.650600,-4.582623,-8.580226,3.822119,7.934538,-0.659958,-7.693059,2.165307,-5.179131,9.129307,9.062767,6.923408,0.167288,2.501748,-6.819775,-5.924366,-2.474338,-9.941046,-6.803890,-6.773899,2.153209,3.614795,1.605301,-6.981770,-0.121549,-0.712062,6.615083,-9.625744,-0.076594,-6.937605,7.886057,-8.968341,-4.712417,-2.963190,-5.034543,-4.551135,2.822226,2.383687,-2.134669,0.852503,1.295691,-9.074586,4.310815,7.118094,-9.449412,7.881816,-2.518693,2.429960,-0.833584,-4.836753,8.163121,-0.523845,-6.689591,8.958430,9.336422,2.997961,-7.086523,-8.104376,-7.414943,2.540669,4.833315,-2.264324,-9.502700,-5.970906,-8.788406,7.690525,0.904081,-8.144149,9.819678,-4.049297,-7.695074,3.734513,1.784306,4.425200,5.308281,5.220469,3.960291,6.907933,0.039546,-7.123181,-7.115664,1.857482,2.468225,3.449378,2.471900,1.043166,-8.440656,-4.378866,-8.398093,5.148582,7.369543,3.524484,4.187581,-9.366911,-4.457134,-2.533151,1.999392,3.559100,8.979696,7.082659,-8.798529,7.350219,-7.491703,7.252283,2.566968,-1.273068,9.813573,0.342082,-6.511522,6.062672,-9.073202,0.756764,-7.239502,-2.264412,-4.776832,-7.758425,-2.680114,1.105121,-0.136886,-2.905278,2.203615,-7.415718,-7.996791,2.492774,2.672148,6.243567,-6.280623,0.941762,0.137382,7.781091,-1.685725,1.132202,9.810718,9.967628,5.140770,6.663675,-3.897291,9.775485,3.434297,-1.805130,3.611789,-0.834188,-0.585128,-3.586101,6.036641,5.324586,-1.564652,-7.366959,2.368436,7.813836,2.059011,-0.357739,-8.354900,-9.854306,-2.372648,-4.794290,9.069104,-1.142777,3.881263,4.669310,-3.733339,-0.606108,5.922077,-9.254817,-4.541700,9.195060,-7.021114,3.404810,9.205908,-4.539024,-9.228188,-0.773211,2.569063,-9.482357,8.567736,2.146480,-4.427497,-4.244136,-1.917677,6.457741,-7.493482,6.821073,-7.223100,5.243096,-8.609638,9.700544,2.333371,-8.549895,-2.909629,5.772819,4.725352,7.125307,-4.584911,8.681089,-4.347795,9.562224,-9.472491,9.309047,2.716509,-5.471683,-2.744504,2.995630,1.140962,-9.857982,-8.504360,-5.838648,-5.472519,5.444581,4.758200,-5.077573,3.503683,9.148201,-5.147257,-4.552260,4.216130,9.774800,8.441761,5.796451,5.480455,-6.042697,3.098382,9.946647,6.270789,-4.544923,1.258835,-1.874739,-2.572161,-9.837455,7.116335,3.020655,-6.380230,-5.810378,3.033202,-1.933641,-1.496540,-5.627988,3.634243,7.186706,-8.072048,-5.613462,-6.246624,9.346768,-3.240059,5.773637,-9.116089,-6.289005,-0.160232,-7.723784,5.737544,-2.684223,-5.230521,2.549910,-7.882491,-4.536985,1.685814,-6.968616,0.967066,-2.817528,-0.582445,1.486792,-1.872720,2.637582,5.774889,-9.841754,-4.856289,-3.428221,1.157319,1.814969,-6.335582,0.441083,-7.548404,-4.353118,1.554447,2.005554,-6.339675,-1.033466,-6.424525,1.236336,-2.436366,-5.715391,-4.398241,0.479411,5.718632,9.404507,-1.072414,7.010013,4.022071,-5.716559,-2.799252,-4.183839,2.854008,-6.184651,-2.971135,1.053385,8.507373,6.917814,-4.342286,-9.033745,8.427855,7.411044,-4.601296,-7.571102,-7.491186,-1.411787,-9.673313,-6.702154,0.463295,-3.978566,-6.968874,-8.658602,9.170994,-4.933199,-9.438346,3.940999,-9.110932,8.367307,8.596024,-9.178010,0.493422,3.128171,7.182442,9.335518,-1.189963,-1.841198,9.218286,-4.721406,8.054972,-9.499790,7.882596,7.157513,-6.815340,-9.671688,7.405331,-6.140691,8.939642,-9.410382,8.334794,-0.768629,0.434399,-2.285170,0.202892,-8.928370,6.968517,7.299806,-5.403293,9.549846,7.422606,5.713574,-2.036733,8.938880,0.667001,7.614171,9.883849,-7.029296,-8.463345,5.473233,9.147029,-5.505432,-6.095062,-4.303907,3.594421,-4.225020,3.771004,9.395704,8.531089,-3.074411,-2.939406,8.018276,2.714046,5.786253,-4.552856,5.794518,-7.120246,5.061368,9.828998,6.697302,5.132044,-6.238834,8.414473,-9.339286,-9.234708,4.326177,-0.758378,4.355298,-2.433395,-8.269824,6.219053,9.107876,7.595713,5.068228,-3.437433,6.404538,-2.226285,-2.996738,6.577345,-0.743254,2.869588,0.417604,-9.168425,4.456177,6.664527,6.064189,-0.401791,-9.236363,4.283995,-7.944340,-1.412209,0.817075,5.349284,4.513429,5.081689,1.932341,9.470350,-3.034748,9.226778,1.097951,2.045105,4.053192,0.161434,-0.482612,0.069685,-2.291875,-8.217292,-5.848921,1.273239,6.972602,3.601921,-0.137103,8.120191,-5.391959,-9.063675,8.364091,6.981193,9.516252,-9.141033,0.155566,6.722068,7.736483,-3.625813,5.619216,8.596782,-6.720632,8.480444,-6.786648,7.138706,1.482166,-2.107978,-0.961087,-8.449329,-8.296412,4.267274,-3.510133,2.983085,-0.104840,-1.237378,3.173114,-4.422495,-6.259059,-9.950463,-9.923796,-0.365667,-0.005060,-2.079222,-0.102483,-3.601542,0.560638,-3.485526,-5.363390,-4.618882,2.907689,6.281741,-1.266195,-8.259213,0.520477,7.752625,4.195446,-5.241363,-3.389090,-2.161208,6.477022,3.702510,-0.717715,-5.573526,1.952793,8.198887,1.561302,-5.393236,6.342988,6.223957,6.391286,-4.177262,-1.479708,-9.809505,-2.169178,6.359837,-5.509423,-7.733749,-8.141171,2.986597,8.030482,8.186756,1.099256,2.500341,-3.048695,-9.506745,6.339006,-5.413412,1.308598,3.011019,8.875613,6.130755,0.640717,-7.217695,-1.377446,-1.400544,7.577435,1.880589,3.889473,7.992879,9.153131,1.211942,-5.394956,-0.843887,6.373919,6.730608,-6.583716,-4.103168,5.919711,2.974248,-7.690108,8.793406,4.342279,1.633584,6.187105,8.257326,-0.444300,-6.402665,-5.516391,-7.771189,-1.115272,4.642254,-6.746583,-8.233208,-1.794778,2.291192,6.226243,-9.209643,4.763600,3.689939,-3.432740,2.522529,-4.116564,-2.032220,-6.840054,-1.078837,-2.824822,3.434865,2.283545,-5.407583,-1.703817,-7.165751,8.565809,-1.274421,-2.631127,8.623340,-2.388711,5.344966,-2.617212,-5.926623,-2.800876,0.681573,-0.352894,7.227933,3.820318,6.957515,-6.010794,6.791357,4.236957,-7.313691,-2.973596,-3.680551,6.233210,5.664289,5.821085,-1.090206,-0.742612,4.763227,4.763128,-0.651389,-4.345200,-1.836578,7.702498,-4.684724,4.595557,8.849759,7.766645,0.847231,2.336764,-2.188217,-1.750074,9.451617,6.880067,6.660946,7.600727,3.372665,3.145458,-9.784654,1.222242,9.730620,-4.349894,-6.035122,9.626979,-2.943936,-6.858405,6.394173,9.804205,3.982888,1.584210,7.524600,-4.190427,9.791781,-1.914059,3.837965,-3.227213,7.788920,3.346409,-4.824486,0.624577,5.920905,-8.364701,-2.922945,9.954399,-6.906914,-9.667823,-9.341433,-4.539419,-2.059368,2.476190,-6.572938,7.513313,-8.288851,-7.828114,3.968081,8.051048,3.721838,8.090712,-3.363272,-9.767609,-8.988192,-2.560297,1.231114,-4.161400,-8.445175,1.023089,7.545772,-6.095387,3.000664,4.551618,-5.696793,-7.228530,-7.862577,5.200281,-9.364771,5.715986,-9.243128,3.244216,-7.808867,7.189481,-9.127572,4.045156,9.077896,0.236203,-0.258260,6.749122,-0.334401,1.490666,-8.221003,7.772370,-8.536454,0.926414,-0.289395,-3.489413,-0.906035,2.451606,2.221580,-5.930827,-0.921119,8.628698,-1.225204,4.017531,-9.027628,3.843838,9.441056,-8.683965,5.247011,-1.670014,-8.171753,-8.987156,5.038247,4.069121,3.988915,1.080825,-5.406195,-5.644006,-6.579450,5.848168,-5.129411,3.797656,7.372499,0.966572,4.497846,-2.547975,8.092942,-2.825389,7.840283,6.149765,2.746179,-4.630823,7.677158,6.376251,5.742469,5.416735,3.088360,3.363738,-9.432826,-7.723640,2.319816,1.037974,6.596451,2.980240,-3.537719,8.764140,8.688949,4.991910,6.341154,-8.241124,5.802625,-8.915761,-2.926203,8.880424,0.056101,-8.281629,-7.614912,3.002603,4.175708,-4.789621,0.305110,-3.608199,-3.027352,4.509479,-1.301905,-4.727276,7.916677,-8.877029,-8.903609,-2.603775,0.410128,-0.413820,1.421311,-2.602208,-0.333434,-9.316955,-1.310397,5.720226,-1.234562,-2.803088,-5.247036,-8.575282,-3.970974,-2.646542,-6.946570,-7.364152,7.571651,0.689378,-4.558101,-8.730473,3.168779,-7.681461,2.921368,-1.681921,-1.907546,-8.906020,4.404624,4.010126,9.623877,-7.989696,-0.771866,-3.407081,-0.347923,-8.180508,3.923635,9.429609,9.086283,-0.332143,9.954438,-8.640460,-8.620253,2.294734,6.566943,5.159606,-0.003482,-4.834191,-9.170349,-6.973345,5.973090,5.443329,1.915566,3.206508,-8.179884,5.630414,-3.460415,6.193407,-5.778049,-8.716257,5.557179,5.952956,2.067420,7.299104,-9.060910,-8.035010,-5.892898,-8.172557,2.536151,8.831761,6.208623,5.965033,-1.494473,-7.375402,1.533782,5.448344,-2.650188,-4.661116,-0.513723,3.197645,-4.400105,-9.169336,1.217719,-2.557052,-0.080472,-1.264986,4.101311,8.698520,0.103452,-8.687039,-3.658698,2.594031,-5.955360,1.840965,9.336188,3.308046,-9.807202,7.875702,-4.962138,-3.640869,5.448565,5.458731,3.708411,-1.106319,-3.209310,2.522415,-1.122389,-3.521758,6.719552,-9.278312,-4.150530,-4.928235,2.030487,0.764561,0.545630,5.025724,-2.840881,9.355077,8.471112,-0.583527,3.822717,1.623844,0.397396,-4.693523,4.513233,2.694964,6.778377,-1.466768,9.376847,-2.722623,-8.471091,9.029184,-5.402549,-5.677561,4.194311,-6.391361,-0.914224,-8.715378,8.915823,-4.520493,7.416695,-2.667739,4.155408,-0.175509,-5.260106,-0.373238,-9.471212,-4.924909,-1.420674,-6.485889,3.613993,-7.793137,-9.818934,9.979587,-5.132702,-8.037902,-0.989118,-5.329332,-3.674465,-3.663321,5.518290,7.191406,9.729389,3.869397,-9.665130,8.375362,-9.818323,8.564917,-0.020387,-7.126753,1.652276,2.845790,0.324414,7.245138,-1.306308,8.831744,-5.899855,8.247050,-5.767806,-2.051636,-7.265067,-3.353734,2.559988,-8.504873,7.176147,-1.060760,1.527035,-0.804306,2.041864,-0.443307,4.801254,-8.507179,-4.030062,5.073876,-0.679585,8.739840,1.362642,4.939122,-2.884142,2.460550,-6.804918,-8.798450,1.036820,-0.397747,-6.431503,-1.331060,-5.753353,-6.969594,-1.837923,2.740940,3.495954,5.625992,4.713541,2.684100,-9.784567,1.393666,9.677218,5.442834,-8.578209,1.938960,-6.140844,-3.777265,-8.676625,-8.094950,8.282763,5.846329,-8.226655,4.353735,8.491487,4.680324,6.464836,-6.690666,-1.719370,6.257647,-6.511202,-9.567460,-0.819807,2.835958,6.537897,0.591848,-8.177014,9.334981,-3.894159,-3.073119,0.398046,0.507548,-5.578644,8.372694,1.265455,9.742107,-0.151009,1.602601,-0.581947,3.489315,-1.625083,-2.841258,-8.805398,3.897986,9.609632,-0.592271,-2.531650,5.234849,-2.942270,7.533726,-2.241655,5.732741,-8.539642,1.412736,8.648073,-3.407506,-0.773419,-8.044739,-1.796953,1.532107,7.885422,0.064945,6.491662,-0.766935,8.928484,-4.576285,-4.571434,-0.929706,-2.808383,-3.497019,1.369714,9.443739,2.191062,-8.736111,5.576836,4.897089,2.742453,-6.099730,-9.114959,-3.920885,5.516690,1.365378,-4.183421,-9.307956,6.923293,4.286353,-6.464401,-3.676325,-8.547195,1.132728,-9.552592,7.548283,0.326228,5.498986,-9.370129,-5.144960,-2.149940,-5.489788,3.721693,6.883849,0.084578,5.147976,4.475758,1.816141,-3.315841,3.621523,-0.130177,6.040434,0.892507,5.977385,-0.361878,1.681131,5.048828,-6.559057,-8.631332,6.275084,-8.854592,6.844644,4.201067,6.435161,-0.371815,-8.228272,1.997199,-3.175501,-8.241474,0.993427,5.728377,0.688657,-8.264000,-4.734770,9.005082,-5.781449,-7.881162,2.235183,-3.171157,-5.494493,-1.804863,6.796503,-7.323295,-0.172317,8.824687,1.370766,-1.959027,4.483146,-5.868652,4.613306,-3.101916,1.670294,-4.173806,-5.327005,-9.285734,1.784438,5.939852,-8.806483,-3.876538,3.610143,-7.126814,0.228182,7.909429,0.287642,-0.904731,-2.315976,-3.105244,2.066635,-1.280975,-0.723683,-4.754418,0.333403,-8.193707,2.923001,-4.741832,7.305374,-2.568745,2.888568,1.030904,0.858248,-5.586445,-0.017880,-2.356299,8.978561,7.092911,4.554648,3.947258,-8.532755,-4.830521,-1.024417,-9.181649,-1.897145,-3.167734,-7.148599,-3.643297,5.294240,9.620101,-5.950672,-1.060331,5.390023,2.736328,1.220454,8.545165,-9.305247,-7.688352,7.205954,-3.128196,0.002509,6.878156,5.574688,5.606048,-5.991112,-0.091711,-8.735991,-1.379944,8.322639,-7.351568,-1.253494,-6.092566,-1.699537,-9.544343,0.676947,3.651361,3.500045,-3.047253,-9.937954,-9.176323,2.215993,6.386522,9.931034,5.383511,9.895197,0.206853,1.234913,3.010018,-2.357533,8.324380,-4.593616,-1.629296,-4.749623,-7.024862,4.412235,9.791019,-9.825967,-5.979639,0.037386,-9.522762,-0.894085,-1.926862,2.183687,7.976999,7.386145,5.776693,7.108282,-7.136979,-5.768505,-0.994349,8.334197,-6.488592,3.602034,6.768670,-4.231702,5.325380,8.512459,6.667585,4.411046,8.811117,9.686769,2.468027,-2.770507,-6.782498,-0.121257,-0.150871,1.209568,6.438360,-3.760247,1.797080,-4.543597,5.252705,-0.527947,-8.653934,1.946137,9.941945,-8.444304,7.391523,-2.121934,-1.671664,-1.151575,-2.175927,2.463432,-6.986724,-0.529424,6.189797,0.136433,-8.258740,8.546257,3.429838,-2.031581,9.673901,2.403017,-1.771157,3.140466,5.505784,9.995247,6.338077,4.396574,-4.919000,6.114897,9.868328,-5.554591,-2.206195,-1.935489,-3.471637,-7.398492,-0.799153,-1.682822,6.067198,9.338421,-1.968098,-7.369834,0.694843,1.889073,3.258755,2.254109,7.876441,8.539468,1.748242,-2.262089,-5.359653,-8.476715,-5.122298,3.363972,-7.283099,-5.116322,-5.915007,-5.565123,7.351864,3.880666,-3.503073,2.378238,7.981047,7.424056,-5.536133,-7.577650,7.764090,4.819442,-8.527250,0.252014,8.668927,0.435119,2.780652,-6.228966,7.435668,7.876237,-6.049163,-8.856086,8.321375,4.135503,9.583774,7.181970,-8.113217,-2.134459,9.822690,9.886638,-8.515187,-5.750584,-3.036000,-1.363318,9.539200,8.856098,-4.200857,3.169760,7.786967,5.965527,-8.496149,6.609737,-8.986682,6.535376,-6.544010,-4.086505,8.800786,-2.369765,3.270648,-7.705390,-2.592484,1.090501,5.746120,7.175313,9.854750,8.479802,9.386034,-0.515587,-9.184633,5.462919,-3.260601,2.215839,3.562709,0.928449,-9.102515,7.001900,9.447935,7.070106,8.317149,9.597232,-3.422142,-6.617239,-9.184211,3.815710,7.133474,1.157306,-7.916894,6.085549,-5.883668,3.137074,-4.067455,4.592400,4.191702,-0.481248,0.411984,0.864059,-4.463805,2.494896,-1.919518,-1.307572,-6.195256,4.540957,-2.319816,-5.359615,2.794108,-4.955026,-5.882281,3.432268,-5.499775,-4.437120,1.701767,8.557438,4.106007,-3.633939,4.176788,4.036948,-7.281480,3.314779,-5.826650,7.909331,9.937803,1.813337,-5.093277,0.512999,0.492146,-7.065120,7.102597,-8.374545,8.363219,-1.634348,9.301048,-0.933486,-6.406871,7.802427,1.626553,-2.187779,-2.986873,-0.359875,-5.416962,3.748967,6.071685,-4.980348,-5.404991,2.660447,-8.534440,-8.949740,-2.509563,9.201066,-7.038747,5.837268,-5.408861,-1.479444,0.556157,9.758210,-4.242754,1.429911,-9.287349,-5.052217,2.216429,-8.515114,9.297305,4.602696,4.978196,-5.574629,6.060741,5.114706,1.329676,-5.201709,-2.170363,-0.132721,7.413270,-6.134359,-5.309865,-8.944741,9.192838,7.080899,0.127189,-7.014168,4.458391,8.587523,-6.139473,-6.227031,-2.562095,-8.121648,-7.266168,-0.662267,9.810930,-6.730687,4.922304,7.312965,1.136206,-5.848615,6.621325,-3.247449,5.803767,-8.894086,-1.314297,-7.002092,8.629480,-0.509961,5.413250,5.838451,4.495476,-0.674572,-7.320331,8.571773,-1.392823,4.578953,-6.128594,0.430865,1.054380,2.148338,-9.572211,-3.743478,8.970482,-5.446891,6.258261,4.759503,2.702511,-5.830441,9.398563,9.517125,5.449673,9.238872,-2.586225,4.537661,-7.912055,-5.769469,-8.640817,5.308473,8.857387,4.508451,5.080977,3.442979,-5.823319,8.322446,-4.582644,-3.781007,7.657228,7.825393,-1.706358,0.500578,-4.875177,5.921340,-3.012441,-8.001041,-8.042935,6.419428,-6.673858,-3.287424,-6.977159,-4.924385,5.840642,-1.806498,-5.325147,-3.844970,-8.771177,-4.113128,5.957022,-8.035719,-3.294808,2.306174,-5.427969,-1.021168,-2.947379,9.977614,-6.430878,0.526662,-0.596816,-8.285271,2.152636,2.836041,-4.996158,-8.863282,-1.824110,-1.500604,7.872461,0.761279,-1.444022,-4.939129,3.325159,7.260746,6.668752,3.889677,-3.712456,8.283738,-9.866112,9.259229,-1.900748,2.096447,-9.743157,7.438904,9.932849,1.885622,-9.809244,-9.605661,-5.964426,-3.683324,-9.133683,7.750651,4.992005,5.784247,-8.387009,8.485425,-7.143882,8.371700,-0.283750,3.484804,2.848894,6.207899,-2.382295,2.485993,0.923828,0.522158,9.763401,-8.366707,8.995884,5.635930,-0.656923,-2.142126,2.405764,-1.497904,-8.812140,9.788304,-4.845490,3.169673,0.457777,8.518794,-0.716688,-0.407846,-6.877012,7.609208,-5.286507,0.114668,7.468258,-4.778680,2.849953,-4.964271,-2.261847,9.449900,-1.769401,5.143413,-1.730710,-3.224329,1.578411,-7.653661,7.701872,5.196922,-8.371315,-4.708833,-2.951512,-8.404301,8.923046,9.361473,9.906177,7.469076,-6.687258,6.384825,1.172355,3.030554,-6.892577,-3.196938,7.471526,-9.979492,-8.231415,9.559657,6.739655,-2.565200,-1.564876,-8.718463,1.526190,5.706235,-7.744159,-8.202415,-6.735401,7.413293,2.458669,-1.308770,4.535565,1.551829,-3.312231,8.092370,-1.112216,-8.869333,3.365662,-4.169290,-0.682949,-0.287174,-0.390580,8.740419,5.212654,-2.326484,-2.902102,1.210632,7.140941,-2.639015,-1.658177,0.024466,6.945248,2.533537,-5.894557,0.553223,-1.489577,6.803095,-2.158379,6.597572,5.650212,8.018129,2.332497,-0.536991,6.008380,-4.173028,-6.387100,-1.831427,6.726224,-6.735899,-2.402645,2.337065,-6.600213,6.105858,1.279815,-9.645865,-6.559348,-0.675400,-2.080350,-4.756845,4.433323,7.901849,-5.164398,-9.846762,-0.004362,1.955502,-9.681522,5.511888,-3.188119,-9.461629,0.998517,-9.693649,-3.495175,5.667956,5.203840,-9.846892,-0.709389,-3.154133,6.965328,8.713127,-9.706049,-1.890250,4.518493,4.226605,1.858593,6.018060,-0.260527,-7.079752,-5.244622,8.184507,-8.477789,2.309093,-8.048856,5.692240,-7.410581,5.488964,-0.905124,8.143858,6.915031,1.704699,-3.715017,9.374810,-7.174827,5.205143,-8.314820,9.487763,-8.882236,7.620984,-8.245622,4.965210,9.127464,5.550959,-9.221036,2.866337,6.418401,-8.488823,7.155006,-2.100445,-0.004541,8.802676,9.587496,4.157555,5.735248,-1.829192,0.068582,-2.747797,-9.453418,-6.392789,-7.514825,-7.206067,-3.070467,-8.141038,-8.671471,-0.351487,-5.449049,6.818826,-4.715604,-7.991861,-4.879674,7.340423,-1.254207,-0.478225,-1.920517,7.854329,9.120190,-0.246073,8.178463,2.263681,-7.024961,-2.580863,5.566862,-5.203149,-8.639500,8.226963,4.444556,-9.441347,-8.808911,-4.016121,-7.969482,-1.774992,7.427264,6.350951,6.576939,-8.359605,-9.110237,-3.021306,3.031781,1.357388,8.310437,-5.466052,-4.791862,-5.253297,3.583777,8.285623,4.083355,4.088417,-7.884523,8.272420,-9.060229,5.745033,-6.631887,-1.187157,-4.669110,2.705223,8.090036,-0.036052,-7.324198,-2.569022,1.302918,4.088913,1.502533,8.089917,-4.916851,0.991493,6.406433,4.532768,4.164557,8.147302,-2.825387,3.016262,-0.723433,3.442784,0.063360,-0.514199,5.500584,9.079509,2.019513,-7.951294,6.054145,-7.263748,7.914069,-4.404815,3.692524,-2.279029,-2.496369,5.771226,-6.084799,7.701135,4.146053,-8.570019,-3.204501,6.721535,0.598795,5.925876,-4.408520,6.165116,1.858886,-0.447703,4.511219,-9.278978,-9.682029,-3.845175,-3.001079,-0.168987,2.038488,-1.351724,-2.733775,1.403245,-2.718049,-7.686707,-0.845740,-2.587973,4.462505,9.005993,8.082476,-1.356601,7.536507,-2.205257,9.162689,3.304957,-2.399393,-2.770572,-2.048383,-0.189915,-4.997297,3.414289,-7.414552,-7.922146,-2.577321,-6.690941,-2.037314,9.894754,6.525687,1.742626,9.494057,1.179144,1.025807,-6.855485,-3.781699,-8.265877,-6.544009,9.345539,4.628221,-0.533254,5.053055,7.479095,-5.598429,-1.582351,7.999554,-2.518523,-3.513190,-0.426268,6.016768,4.193630,6.606312,-1.717209,3.490196,-5.079544,5.254763,-0.686077,1.050661,-6.209769,2.525175,1.302232,5.298272,3.906772,6.089046,2.705382,-3.072851,-0.443421,-7.962012,0.697861,8.445701,-8.333843,9.633729,9.069850,-2.395261,-5.033727,-8.882172,-9.680927,0.552472,-5.739336,6.516776,2.990723,-2.220653,4.010425,-2.384075,6.150374,-9.159375,-9.315897,-2.986063,-1.563740,-6.163005,-2.827493,-3.496654,-5.220757,-7.144054,3.255377,-3.372248,-2.398022,-8.051035,4.468469,-7.424251,-6.058134,-9.250908,-4.018077,6.504918,8.090903,1.716750,-7.642372,2.155850,4.870179,7.328252,1.422329,3.932011,6.784031,-7.261704,-5.241170,9.066878,4.135481,-5.751248,-8.384821,9.889919,7.435003,-3.344098,-5.848387,-9.863022,0.267316,-1.121153,9.520745,-1.458992,-8.626651,2.968899,-5.711670,8.724448,-3.077985,6.186796,6.971331], dtype = "float32")#candidate|4503|(3584,)|const|float32
call_4500 = relay.TupleGetItem(func_4270_call(relay.reshape(const_4501.astype('float32'), [14, 16, 1]), relay.reshape(var_4502.astype('float32'), [6, 11, 6]), relay.reshape(const_4503.astype('float32'), [14, 16, 16]), ), 3)
call_4504 = relay.TupleGetItem(func_4274_call(relay.reshape(const_4501.astype('float32'), [14, 16, 1]), relay.reshape(var_4502.astype('float32'), [6, 11, 6]), relay.reshape(const_4503.astype('float32'), [14, 16, 16]), ), 3)
func_1326_call = mod.get_global_var('func_1326')
func_1330_call = mutated_mod.get_global_var('func_1330')
var_4532 = relay.var("var_4532", dtype = "int8", shape = (110, 6))#candidate|4532|(110, 6)|var|int8
call_4531 = relay.TupleGetItem(func_1326_call(relay.reshape(var_4532.astype('int8'), [6, 11, 10]), relay.reshape(var_4532.astype('int8'), [6, 11, 10]), ), 0)
call_4533 = relay.TupleGetItem(func_1330_call(relay.reshape(var_4532.astype('int8'), [6, 11, 10]), relay.reshape(var_4532.astype('int8'), [6, 11, 10]), ), 0)
var_4537 = relay.var("var_4537", dtype = "float64", shape = (5, 15, 9))#candidate|4537|(5, 15, 9)|var|float64
bop_4538 = relay.logical_or(uop_4479.astype('bool'), relay.reshape(var_4537.astype('bool'), relay.shape_of(uop_4479))) # shape=(5, 15, 9)
output = relay.Tuple([call_4484,var_4485,var_4486,bop_4491,call_4500,const_4501,var_4502,const_4503,call_4531,var_4532,bop_4538,])
output2 = relay.Tuple([call_4487,var_4485,var_4486,bop_4491,call_4504,const_4501,var_4502,const_4503,call_4533,var_4532,bop_4538,])
func_4541 = relay.Function([var_4464,var_4485,var_4486,var_4502,var_4532,var_4537,], output)
mod['func_4541'] = func_4541
mod = relay.transform.InferType()(mod)
mutated_mod['func_4541'] = func_4541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4541_call = mutated_mod.get_global_var('func_4541')
var_4543 = relay.var("var_4543", dtype = "float64", shape = (5, 15, 9))#candidate|4543|(5, 15, 9)|var|float64
var_4544 = relay.var("var_4544", dtype = "float32", shape = (480,))#candidate|4544|(480,)|var|float32
var_4545 = relay.var("var_4545", dtype = "float64", shape = (216,))#candidate|4545|(216,)|var|float64
var_4546 = relay.var("var_4546", dtype = "float32", shape = (396,))#candidate|4546|(396,)|var|float32
var_4547 = relay.var("var_4547", dtype = "int8", shape = (110, 6))#candidate|4547|(110, 6)|var|int8
var_4548 = relay.var("var_4548", dtype = "float64", shape = (5, 15, 9))#candidate|4548|(5, 15, 9)|var|float64
call_4542 = func_4541_call(var_4543,var_4544,var_4545,var_4546,var_4547,var_4548,)
output = call_4542
func_4549 = relay.Function([var_4543,var_4544,var_4545,var_4546,var_4547,var_4548,], output)
mutated_mod['func_4549'] = func_4549
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4578 = relay.var("var_4578", dtype = "int8", shape = ())#candidate|4578|()|var|int8
var_4579 = relay.var("var_4579", dtype = "int8", shape = (10, 5, 16))#candidate|4579|(10, 5, 16)|var|int8
bop_4580 = relay.not_equal(var_4578.astype('bool'), var_4579.astype('bool')) # shape=(10, 5, 16)
func_4308_call = mod.get_global_var('func_4308')
func_4312_call = mutated_mod.get_global_var('func_4312')
const_4608 = relay.const([9.438280,-8.742101,7.648469,8.336642,-4.413699,-1.763134,-9.815942,0.158175,-3.157458,3.916193,1.732957,4.407798,7.477456,-4.093105,6.163931,9.577641,-1.790154,2.129255,-2.896176,-6.358016,0.253650,8.091537,-1.501437,-6.303039,-4.827715,6.840978,-5.988451,-1.305662,-7.961562,-6.457237,-4.537170,-6.281338,-5.781743,-5.677136,4.331838,9.503405,6.633806,-5.024086,0.857431,1.423101,7.288375,-7.275433,3.841393,9.082798,5.988421,5.613815,8.428669,-5.847852,8.217647,5.463532,-9.837951,-0.774943,1.221621,1.097513,6.845539,8.240067,-4.498418,-4.791899,-5.052542,8.426179,-6.032364,9.014516,-0.956757,4.980832,-5.254724,-1.200995,0.931732,-9.484747,-2.189145,-9.798290,-2.927154,-5.816673,2.024347,-3.049564,-4.297995,0.679150,3.038600,-7.147595,4.305084,6.293636,-8.224295,-4.098211,-8.694318,8.074651,-3.083964,-6.928731,3.339079,4.520382,-7.240659,-0.447805,5.844152,8.000918,-6.593588,6.361931,2.019699,6.289156,-5.104246,7.653421,-8.002268,4.404857,-7.150591,-3.160272,-4.224287,-4.463338,4.649831,7.498897,6.715156,7.826246,3.032546,8.213643,-6.919443,-6.221993,-0.757365,4.588323,-3.331719,3.513407,6.426830,-1.081392,-5.788401,-3.219057,3.456517,-0.893574,-1.046337,-8.163656,-6.600373,-7.965944,-9.604203,-5.989657,-1.900102,-3.838276,-7.970518,-4.567961,2.490335,-1.557127,6.223502,9.872619,-5.357339,4.891148,-6.041127,-6.413512,9.414973,8.595271,-6.919592,-1.628130,6.067681,3.210339,0.443427,8.977353,0.446347,-7.291440,-4.301258,4.419555,8.940746,2.955315,5.721243,4.766509,-2.682774,-0.051389,-2.534718,-1.278364,9.227258,1.727093,8.004707,3.246071,-1.736354,9.637831,-8.275276,-3.344075,-0.134307,0.285508,4.755926,-2.418732,6.240476,-7.201342,-1.311894,3.711238,8.111211,-7.781051,-9.949242,4.832463,6.823135,3.083046,7.826899,9.962416,-6.711770,5.971349,9.669409,0.794224,2.223367,-4.670695,-6.749870,5.231575,1.652804,-9.218709,-3.856412,-5.491139,0.629981,1.652578,3.653401,-8.017761,4.856657,-2.718466,6.072938,8.397623,9.703325,-9.487287,2.993912,1.572442,6.592773,-7.586086,7.486817,0.908499,1.149735,-2.151014,-2.763701,-1.123423,-3.179023,-1.331353,-0.047513,-5.665117,-5.526368,-6.408339,0.674556,-1.825453,8.716254,-8.844059,4.910326,3.060388,-6.248524,-5.130627,-4.945515,-1.613328,2.534770,2.256318,-0.655706,3.207955,-9.213550,-0.256521,-7.991440,1.431659,-8.033952,-5.410773,3.406264,-1.368273,1.889673,-6.909509,7.056335,6.135903,-9.614670,-0.777676,-6.156465,8.148172,8.535305,-7.715760,-2.681447,-3.154770,4.346419,-1.533044,-3.275146,-5.254335,7.292092,-1.122800,5.051347,8.691365,-4.659472,-5.486059,-9.139708,2.401779,-5.394153,1.937452,6.568054,4.786557,-5.266246,-1.792479,-7.535607,6.135412,1.708590,-0.748879,9.839446,-4.704927,6.259326,-0.243465,-7.206928,-7.399051,-1.134379,5.466060,5.368352,-3.844880,5.202931,-2.416557,-8.083500,4.383481,3.153057,-9.452995,-7.493815,-0.320610,-1.779192,4.490594,7.285846,2.237572,6.358410,9.518099,7.333630,-3.144406,-5.743948,-5.913791,-8.697450,7.862199,0.049625,-8.181916,-9.106307,9.987758,-9.338104,-7.278681,-6.087691,1.721668,-6.250058,-7.123604,-4.370017,-4.844366,-9.084542,5.244884,4.461265,-1.888213,2.851180,-9.312308,-2.586522,-9.709842,-3.877156,-7.209295,-4.631073,-8.000946,-5.403911,-9.428098,2.239663,-2.719591,5.895355,1.665245,-6.775167,2.440155,-8.163479,6.540348,3.711162,0.405570,-8.913378,2.571794,3.239254,-6.116715,-7.202097,1.194434,7.388240,9.311393,0.121244,1.620776,8.644178,3.833954,-5.345523,-2.084480,-5.817222,0.643354,5.145116,4.832362,-4.025258,-8.640199,-2.523529,0.323841,6.176498,-4.258411,2.246023,-9.404756,-3.793766,-7.058731,8.066422,2.135931,3.333409,-7.193067,3.411006,2.074417,3.360383,-0.877873,3.348399,-2.591709,1.981988,-5.205113,-7.609607,6.733960,-2.242359,-2.274321,-4.368772,-0.092018,-1.212175,-3.048473,-0.444538,-9.472774,1.623504,-4.975626,-1.624239,-8.525798,9.446825,-8.451465,6.176226,2.389058,0.870627,3.217348,4.475517,7.574346,2.521814,1.502902,-1.809179,0.973696,-6.225771,-1.157181,-8.731287,-0.147897,8.725171,-1.210372,-9.694377,7.612818,7.816459,5.016521,-2.633440,-0.419159,-8.903759,3.682256,4.828428,4.533220,-3.011014,-2.991056,-2.316054,6.861854,7.828612,-1.501947,0.715664,-3.713387,0.518251,9.716233,-5.499566,4.226551,0.704407,7.693545,9.630737,-8.842986,9.829735,1.072478,-1.756927,1.994166,-1.902649,7.340787,9.847625,-8.067963,-1.247052,-3.123375,6.010212,3.342219,7.499160,-9.403420,7.225343,-4.868494,9.349619,-1.827296,-1.170913,-5.754442,-5.723179,-7.564997,8.308800,-9.082510,-4.405625,-3.991753,-4.173678,-0.285397,5.567302,-4.299685,-5.365888,2.671752,-3.354371,6.962873,0.240611,8.934238,3.057495,-4.624910], dtype = "float32")#candidate|4608|(480,)|const|float32
var_4609 = relay.var("var_4609", dtype = "float64", shape = (216,))#candidate|4609|(216,)|var|float64
call_4607 = relay.TupleGetItem(func_4308_call(relay.reshape(const_4608.astype('float32'), [16, 6, 5]), relay.reshape(var_4609.astype('float64'), [216,]), ), 1)
call_4610 = relay.TupleGetItem(func_4312_call(relay.reshape(const_4608.astype('float32'), [16, 6, 5]), relay.reshape(var_4609.astype('float64'), [216,]), ), 1)
bop_4620 = relay.multiply(call_4607.astype('uint64'), var_4578.astype('uint64')) # shape=(216,)
bop_4623 = relay.multiply(call_4610.astype('uint64'), var_4578.astype('uint64')) # shape=(216,)
bop_4636 = relay.power(var_4579.astype('float64'), var_4578.astype('float64')) # shape=(10, 5, 16)
func_2728_call = mod.get_global_var('func_2728')
func_2731_call = mutated_mod.get_global_var('func_2731')
call_4640 = relay.TupleGetItem(func_2728_call(relay.reshape(bop_4620.astype('float64'), [216,])), 1)
call_4641 = relay.TupleGetItem(func_2731_call(relay.reshape(bop_4620.astype('float64'), [216,])), 1)
func_4541_call = mod.get_global_var('func_4541')
func_4549_call = mutated_mod.get_global_var('func_4549')
var_4647 = relay.var("var_4647", dtype = "float64", shape = (675,))#candidate|4647|(675,)|var|float64
var_4648 = relay.var("var_4648", dtype = "float32", shape = (396,))#candidate|4648|(396,)|var|float32
const_4649 = relay.const([6,-5,-9,10,10,-10,3,7,10,7,-6,4,-7,-8,-4,8,-10,9,-3,-7,-10,-10,-3,-8,-10,-4,-6,-2,-5,-5,-9,1,5,9,10,1,-5,10,9,2,3,-6,2,-5,8,10,-2,-7,2,6,-5,9,-9,-9,-8,-8,7,-1,1,10,5,-9,2,3,5,3,8,10,-2,4,10,-1,5,7,-8,-7,6,10,-3,9,4,-6,5,-10,2,7,7,8,9,-7,-2,-10,2,6,4,-1,-9,-3,-2,-1,6,-6,-5,-4,-10,1,-7,10,-10,-3,2,-5,3,-7,-8,7,8,6,10,10,-4,1,2,1,8,8,-1,2,10,7,2,3,-9,-5,-10,-6,6,6,-9,-9,4,-8,10,-7,1,-8,7,-5,10,-3,5,-7,-9,6,-1,-6,4,-7,5,-5,-7,-1,6,-9,8,-9,3,3,-10,-1,-7,5,2,6,-8,-6,-5,9,5,-10,-4,-7,4,1,2,-6,-1,-10,4,2,8,9,5,7,-8,4,-5,-10,-4,4,3,4,-10,8,-2,-6,-8,-6,-2,6,1,5,4,6,4,-1,1,-2,-2,6,1,-6,6,-6,6,-2,4,2,1,-4,-1,4,4,2,-6,-10,10,-10,10,7,-7,-5,-6,-1,-7,4,3,10,3,3,-2,-8,1,-1,3,-8,-8,-3,10,-3,-8,6,4,9,10,7,-5,4,-3,6,4,-6,7,-7,3,5,-5,-5,7,-6,-3,6,-8,-5,-7,6,-7,2,-2,-10,-8,-8,-5,4,6,8,-3,-9,-7,3,-7,5,-9,-7,-7,8,3,-8,1,-2,-2,-8,7,7,4,-9,-6,7,1,-8,3,4,4,-6,-6,1,1,2,-9,-3,8,5,8,1,6,-10,5,-2,-5,-3,-9,8,6,-7,10,9,3,10,-6,1,-10,8,4,-6,10,-2,8,8,-2,10,-6,8,2,1,10,-9,-2,8,9,-6,7,-10,8,10,5,-1,-8,-2,-10,-8,6,3,-4,-5,8,6,9,-2,-7,8,10,-5,-10,-9,-2,1,4,-10,-6,3,-8,9,6,6,-4,7,4,2,-1,-4,-8,2,10,2,9,-10,-6,-4,-2,8,-5,-10,7,4,-5,-10,5,6,-6,-1,-4,1,10,4,6,-8,5,1,-1,9,-3,-10,-10,4,-7,-10,6,10,-7,-7,-6,-5,2,2,-2,9,9,6,8,-7,2,5,-7,3,-9,8,-7,6,-2,5,1,-1,-5,-4,-6,-5,6,-8,7,10,4,-1,2,2,-10,-8,-1,3,-6,9,8,10,-6,-1,-10,8,9,-6,-9,-5,-7,1,-1,-6,-3,-1,-8,7,9,-6,-8,-6,-6,-6,-3,3,3,8,10,3,8,4,-6,2,8,-6,-4,1,-5,4,-9,7,-3,-8,-10,4,-6,6,9,7,7,2,-6,-3,2,-10,-4,-5,-4,8,7,-2,2,6,5,7,-9,-5,-1,-7,-6,6,-3,-9,-5,9,-10,-6,8,-4,-5,8,9,8,-2,5,-1,-1,3,3,8,-9,-4,1,-6,6,-7,3,8,7,8,1,4,-6,-2,4,-3,-8,-7,9,-5,5,1,-7,-1,10,-6,-1,-3,-5,7,2,-4,7,1,-5,2,8,9,-10,-8,10,-1,4,9,8,-3,-8,-3,6,-10,2,-2,3,6,10,6,-9,2,-3,-7,8,3,4,-8,2,3,10,-4,7,-8,5,-8,3,2,-2,6,8,8,7], dtype = "int8")#candidate|4649|(660,)|const|int8
call_4646 = relay.TupleGetItem(func_4541_call(relay.reshape(var_4647.astype('float64'), [5, 15, 9]), relay.reshape(const_4608.astype('float32'), [480,]), relay.reshape(call_4640.astype('float64'), [216,]), relay.reshape(var_4648.astype('float32'), [396,]), relay.reshape(const_4649.astype('int8'), [110, 6]), relay.reshape(var_4647.astype('float64'), [5, 15, 9]), ), 7)
call_4650 = relay.TupleGetItem(func_4549_call(relay.reshape(var_4647.astype('float64'), [5, 15, 9]), relay.reshape(const_4608.astype('float32'), [480,]), relay.reshape(call_4640.astype('float64'), [216,]), relay.reshape(var_4648.astype('float32'), [396,]), relay.reshape(const_4649.astype('int8'), [110, 6]), relay.reshape(var_4647.astype('float64'), [5, 15, 9]), ), 7)
func_1041_call = mod.get_global_var('func_1041')
func_1045_call = mutated_mod.get_global_var('func_1045')
const_4662 = relay.const([-1.256294,1.635572,-4.745453,7.340756,-0.991497,-7.425687,-8.692469,-2.569976,2.477266,5.564973,7.983333,2.334680,-5.802189,-0.921993,2.083956,5.874239,3.918496,-3.537139,8.986828,-6.944055,-4.237367,-7.630035,6.328088,-6.811183,-9.354012,-6.424857,-8.399463,6.428470,-8.973612,-0.352554,-3.698453,4.544936,-9.494945,-5.406053,-4.910450,-8.089858,7.414916,5.516378,0.319919,-6.330708,0.620690,3.134029,-5.666909,-9.686258,-8.382018,-0.534300,-0.402930,-8.387939,-4.787365,0.194232,-6.107660,5.475642,-6.220926,-4.882055,3.686722,0.901012,6.542331,-5.704190,1.755044,8.452973,2.405280,4.871949,7.981658,1.537849,-9.717336,-8.244557,-7.797563,-0.775893,-7.612526,-3.577696,6.235589,0.472455,-0.391178,-0.976700,-4.259043,0.212943,-0.365937,-3.303129,-1.195285,0.950211,-7.108279,5.504049,1.850159,3.892155,3.225958,7.287323,1.740326,0.015470,-4.526993,-1.825256,8.505078,0.603938,-4.734218,-8.111238,7.880493,6.984587,7.809642,-1.401898,-7.554296,1.109835,6.660822,3.510508,8.578872,-3.407011,-4.621733,-5.844219,-2.857792,6.575191,3.551285,4.911870,1.777237,-4.299289,-6.454634,-4.613550,-6.129501,-9.751054,-1.065026,6.843599,-9.783466,-9.436385,-0.081584,0.859786,-7.760874,5.607848,-8.910916,-3.671166,2.389758,-8.469632,3.121992,-2.494431,-7.660538,5.932694,-9.713543,-4.516751,-0.715005,-8.573725,-2.162108,5.521385,-9.942503,-2.287543,0.197275,5.671858,-0.262210,-9.494280,-9.453708,8.935376,1.829945,1.690989,8.211421,4.538314,-8.405670,-6.166944,9.438980,4.907115,-8.093865,-4.377605,-0.256736,-5.884358,5.067290,-9.153926,-9.893987,2.371104,-0.544329,4.945404,-1.467726,9.137837,-3.575482,1.550789,0.955806,-1.525449,9.125258,-6.965443,-6.694921,-9.604974,9.355563,5.916036,-1.455061,-9.643888,3.535894,4.442575,-9.561975,4.257028,-9.772314,-1.412417,3.680421,-0.693007,4.411292,8.640596,9.033718,5.059702,-6.033388,-1.179309,4.694008,-0.145410,8.229713,4.776041,-0.432500,-6.996217,4.945770,9.075493,0.968534,8.377641,-1.556128,-7.404129,-7.968178,-7.456762,-7.112888,-2.546320,2.114506,9.462268,-1.733638,-0.617635,4.068069,0.949657,1.091548,6.038405,-9.103724,7.039546,0.508054,4.035372,-2.523719,3.466594,-6.022198,-5.550952,-7.034362,-9.945579,-6.871724,3.950830,-6.760499,1.750848,2.630097,-8.461843,7.193108,-8.892310,-6.214674,7.233371,-0.417896,0.339354,-4.333076,-1.459191,7.114454,7.939128,-8.195855,2.527164,2.598989,-6.905466,-1.026296,3.983065,2.531515,-1.043134,0.809557,-8.835303,-7.606507,-0.375029,6.990007,5.787431,-1.328547,6.767777,-3.827111,3.649693,2.582149,-2.126804,-1.379238,2.470151,-5.624144,0.892832,1.276997,2.995953,-0.117274,-6.786800,-9.380985,-0.569298,-8.395367,9.006532,8.514873,6.025157,1.757540,-6.283259,2.189563,7.080344,6.195025,4.326759,-0.221764,8.523542,-8.044433,-2.120435,9.418097,7.402183,-9.337301,-6.251905,5.505854,-4.891098,-5.984636,6.497416,7.231210,0.172981,6.959479,5.527059,5.618328,-8.845835,2.028469,-2.805267,-9.077530,-1.252983,4.926589,-9.607114,-9.321354,9.896224,8.485673,-1.220703,0.017573,2.230396], dtype = "float32")#candidate|4662|(312,)|const|float32
var_4663 = relay.var("var_4663", dtype = "float32", shape = (550, 3))#candidate|4663|(550, 3)|var|float32
call_4661 = relay.TupleGetItem(func_1041_call(relay.reshape(const_4662.astype('float32'), [2, 13, 12]), relay.reshape(var_4663.astype('float32'), [1650,]), relay.reshape(var_4648.astype('float64'), [396,]), ), 2)
call_4664 = relay.TupleGetItem(func_1045_call(relay.reshape(const_4662.astype('float32'), [2, 13, 12]), relay.reshape(var_4663.astype('float32'), [1650,]), relay.reshape(var_4648.astype('float64'), [396,]), ), 2)
func_1747_call = mod.get_global_var('func_1747')
func_1752_call = mutated_mod.get_global_var('func_1752')
const_4674 = relay.const([9.255447,-9.424916,-1.212555,-2.810465,-9.197987,-5.784468,-9.972504,-2.849476,2.208687,1.454478,-1.086171,-1.236316,5.804185,0.480500,0.012523,6.917718,2.626454,-0.134632,8.394192,5.405125,-5.536887,-3.104332,-8.812515,-5.185273,-8.735372,7.712090,8.236498,4.633367,0.483097,1.489015,6.099546,-7.595645,-4.415523,-4.599957,3.983008,-6.916342,9.100618,-4.625996,2.662021,6.577696,-6.917610,-4.406943,-7.685778,-3.021373,-7.824092,-9.633218,-4.086618,6.196960,1.596289,-0.197988,1.530527,-2.117948,-7.951100,8.488615,-3.241926,1.440315,1.238092,-7.366477,3.403773,9.284639,-6.094180,4.236966,-1.129879,4.903115,4.134297,-0.931819,-5.597675,1.147212,9.847167,9.519051,-7.862629,-8.716029,-1.258029,7.345349,2.563296,-6.872255,1.217690,-4.047172,-5.390448,1.002278,-1.861372,-1.518207,8.603414,7.447463,-5.942513,-2.054752,8.543374,-1.456594,1.728997,-1.502591,4.891729,-4.623802,-4.639121,-0.659521,-2.250077,-2.790677,-0.054380,-1.900667,4.236687,-6.131946,-8.637045,-8.302888,-4.742494,7.595233,-6.903339,-9.527857,-0.851326,-5.535525,-2.436864,9.561985,1.766999,2.664949,9.601335,2.583355,9.225529,-7.416477,-6.645441,3.800322,-3.831287,-3.696055,-0.204210,-2.898057,5.223815,-3.091499,3.005837,-2.354842,4.309618,-6.726535,2.498916,9.502381,-4.265614,-4.401943,-1.432143,7.286140,8.268588,-7.594721,-9.421727,-7.424564,6.984263,3.524908,3.052468,0.966826,0.602472,2.819064,4.503655,0.937120,-1.530095,-9.800870,-1.594202,6.892491,7.773313,8.689958,-8.142738,8.918558,-4.030187,7.110304,6.081431,9.297745,-2.518272,2.072761,5.341602,6.682333,4.688012,2.425299,0.684871,0.137736,-4.742222,2.552738,-2.827674,-2.269653,1.855381,-1.778285,3.122891,-6.187944,-0.940903,7.653775,-9.280920,-6.202312,6.783299,4.710477,-2.127515,2.112637,-8.764161,-0.860209,-0.865634,6.142926,-3.217752,-6.567641,0.557168,3.357551,-9.606889,-5.926636,-4.443683,-1.952179,-5.306714,-2.633575,-7.356488,1.139444,-8.011755,-5.384077,-7.813626,1.894686,7.269542,-5.242752,-1.434130,1.019423,5.201596,1.616307,-2.317877,6.945702,-5.866875,3.685695,2.178580,6.591221,-2.437251,-4.404353,0.954268,2.062478,0.901740,-8.163992,-1.868450,4.769814,0.480842,7.947026,-1.661856,-8.248432,-9.928086,-5.845685,-4.141852,-2.632575,0.862541,5.705656,-3.029042,8.435051,3.897160,2.129940,9.443307,8.976324,0.175395,-3.021612,1.528548,-5.190251,7.874628,5.859210,-6.411872,-8.549610,7.551577,4.778109,5.566149,2.497639,-6.023787,-7.679544,8.671890,-7.417717,-9.099488,5.075317,6.224578,9.591776,-5.730868,-6.498488,-7.906076,-2.076940,-8.696195,3.470414,-1.513268,-3.771159,8.875401,3.976009,-5.383910,-5.117488,-4.291386,-9.625708,1.530028,-4.104824,8.330519,2.985780,-5.783346,4.507556,8.435991,-8.829877,3.803158,-9.438002,7.308473,-3.089733,9.131162,-1.384492,-4.715840,3.924261,-4.871913,5.329729,-6.721918,-4.539394,-7.637839,7.804034,-3.788467,9.561180,3.892480,9.635417,4.089794,-1.452072,-5.542306,6.101112,-5.034183,-4.561551,-2.660737,-7.307875,-1.547629,5.642281,-2.813389,-5.669707,-0.002025,-4.233882,0.189687,-6.605388,8.714611,3.400955,7.427676,-6.548682,3.525492,2.150414,-9.445712,-9.274085,-6.275196,7.441058,8.245272,7.620933,-4.898616,0.274916,8.057479,-5.858596,-8.349774,-7.630516,-1.966998,1.706344,-3.945423,-2.205577,-9.867939,6.326323,-2.831205,5.927557,9.003971,-7.039778,9.588314,7.202187,4.150390,3.038955,-5.615322,-0.303134,7.486909,-1.761073,-0.264313,-5.793563,-6.016330,5.724670,1.904320,-8.751775,1.890159,-2.681314,-8.202808,-0.644441,5.882180,0.633316,6.869060,8.566966,-4.533637,-5.745607,-6.466881,5.505598,4.632692,6.391395,-8.568319,4.080075,-2.646721,-1.675393,5.722104,8.528803,-7.017352,-6.335222,-2.644868,-7.069708,-0.102096,9.729813,-2.411058,7.603573,3.056933,-5.693592,-0.685953,6.395417,7.839679,5.567441,-4.967184,5.520901,8.629416,3.437654,3.025810,-8.514982,-1.535595,-2.296015,1.958510,-0.499198,7.191481,-3.352387,-8.524076,-3.670359,7.778685,4.737722,-9.985054,-9.282185,-3.464213,2.634344,-0.853669,0.003236,6.466042,8.760081,6.939861,6.598668,-9.494579,-5.645245,-1.652874,-9.735196,-9.743154,7.690309,-4.115229,9.381086,2.902173,7.771489,-1.654216,0.739103,-2.076748,-7.383019,-3.621525,-4.139257,6.084868,-7.933917,-3.987063,0.835717,-5.309765,4.392823,2.877947,3.892485,-2.430065,-5.909747,-5.555288,-9.155432,-8.593595,-5.708029,0.281504,7.490964,-8.361767,-1.866545,-9.379921,6.769875,-7.077613,4.351805,0.537327,6.069009,8.569556,9.711781,2.721237,1.371721,-6.168494,-4.530270,-9.684733,5.370024,9.601430,5.921867,2.839686,-8.167681,-5.683521,4.368083,7.201195,0.753449,-4.220217,-2.988058,-4.398076,6.965546,3.807596,-1.527419,4.638544,-3.816690,9.738546,-3.487270,6.941271,6.686736,2.200251,8.380145,1.107261,9.020109,1.090536,3.922526,4.348198,2.128439,-2.339566,3.142309,4.887088,0.407808,1.774015,4.111985,-4.123784,-8.427016,-5.032017,-9.902149,-6.069173,5.496380,0.805842,-9.026046,-9.963774,-1.620721,6.550918,-8.123705,6.158318,-4.336348,-9.171643,0.508952,-6.380841,-3.143710,-1.713336,-4.642857,-2.015943,-2.601441,-9.073396,5.858806,-3.322684,7.807524,9.142099,-5.113882,1.375876,8.626695,2.251616,5.304680,6.095464,-9.204997,-8.784232,-8.561961,-7.724381,4.390829,6.375608,9.534812,-7.547150,-9.279408,8.329725,-1.397048,9.335639,-2.831333,1.898109,-8.325017,0.772652,-7.122916,4.239583,-3.967527,1.213158,-3.454581,-3.474895,6.868964,-9.095659,-8.675903,-5.916295,4.219822,3.014953,-0.095583,4.593676,0.300170,1.299732,-6.134661,-0.586033,1.276626,-8.164184,1.436004,2.803899,8.156356,-0.093784,6.479391,5.098767,-4.742203,-8.928521,4.250736,9.260311,-4.572749,-1.067400,3.572957,-0.670063,-9.566467,-6.477315,9.651854,-4.766315,5.454517,3.576447,-6.475528,2.183403,6.762615,0.067412,5.577948,8.858162,-9.190012,9.867154,-8.931289,-5.590105,-6.377300,-4.559801,-2.334916,0.563218,2.888104,1.757540,8.203725,-3.570969,-5.548134,5.729522,-0.301269,-6.305076,-5.711145,-8.224735,4.824975,0.527036,4.186359,8.969453,5.299326,-0.361773,2.558726,-6.068839,-2.205768,9.563279,-1.664838,1.554579,6.692756,0.235881,5.579724,1.738860,-2.253111,-8.355220,-8.063932,-3.985903,-9.485794,0.474924,-6.915424,-6.520639,-3.571133,1.978680,-0.746065,-3.678936,-1.088511,4.622842,2.049686,-6.956083,-6.627336,-9.673366,4.160047,-3.371920,1.982325,0.271692,5.821502,-9.455322,-8.808939,-5.586095,-1.691180,-2.817648,1.708649,-9.022158,-8.340175,-7.390234,-7.314625,-7.375525,0.595066,1.477270,-2.468108,-2.292395,9.387022,9.008319,8.235607,-9.695866,-9.201222,-9.911364,2.365113,6.991860,-5.699448,-0.656845,-1.739844,-7.016534,5.629793,-1.793750,-5.222591,6.926437,8.107392,4.521050,-9.592229,4.819763,4.320917,-2.196121,-1.136918,-1.807387,-0.539574,0.302557,7.441495,-5.783307,-8.651287,-9.271495,-9.474994,-5.007802,6.178370,-2.417517,1.286365,-0.165329,5.127041,2.657219,-1.740159,-3.736838,-7.651879,8.434587,9.932862,-6.740740,-2.295745,6.515422,-1.697965,1.067426,8.226907,-6.734541,7.005594,2.780598,3.898131,-9.675177,7.860151,-1.100667,7.756908,4.980209,-2.894000,-2.976077,0.275214,0.645925,1.306531,1.870677,-6.842634,6.829835,-6.239108,-5.839178,-9.906389,-7.109335,-7.265531,4.439164,-0.763790,-1.188072,8.550610,-6.081617,-3.377060,-3.857263,-0.963765,9.063232,7.890642,-5.994559,1.765419,-8.156650,5.901418,6.616035,4.171120,2.327321,-7.344591,-5.526945,-9.652871,-7.817915,-4.991281,-8.345354,-4.000054,9.330083,2.581739,6.959404,1.496581,-7.489510,-1.546027,-7.641484,-5.462889,-8.313649,4.579556,-6.876381,3.552294,6.664543,-2.121895,-9.706779,1.073359,-1.653008,5.195259,5.778328,2.025531,9.418125,-7.103708,-1.282415,-5.651892,6.047341,5.476991,2.305335,-2.998918,3.591420,4.157371,6.556382,4.962506,7.151397,5.620821,3.422623,-1.924995,2.505121,-6.046915,8.818355,-4.939169,6.699916,9.827636,-0.651120,9.564627,-3.322946,7.904468,3.273125,1.683800,9.397157,9.930917,-1.228066,6.283484,-6.330098,8.134759,-6.214887,-1.443898,6.668028,5.669858,4.900812,5.653798,2.083428,6.363012,-0.937436,4.538178,-8.322261,-3.780823,-9.409464,-5.163834,-1.232267,-4.736867,3.650837,-3.496561,-7.269627,-7.800711,-9.768150,7.983231,-4.560322,-2.240449,-0.845055,-7.667778,-6.491053,8.214459,-1.916342,-2.530726,2.698890,-8.379470,6.823777,2.931761,-1.685887,-9.986389,-2.629677,-8.760479,-5.508734,4.048994,-3.164909,0.440218,-8.582765,6.311724,-4.553717,2.889445,-5.799171,-9.864138,-9.103286,-8.436309,6.218544,0.922355,-3.449794,-9.922984,-8.299109,3.753744,9.010166,-3.886660,4.429153,6.588420,6.522512,7.675505,-5.271353,2.035213,-4.908969,6.520830,-5.714240,7.520423,-3.211211,-5.517842,0.892326,9.422144,-5.557935,-1.069725,6.484030,-5.281968,4.773898,-6.497558,5.656953,-6.853478,3.541155,-8.197684,1.325340,6.096864,1.062702,-6.056004,4.570778,-9.858512,0.387126,-3.551966,-5.135196,6.690461,-7.631268,1.395858,-7.388467,1.340567,5.655391,4.431551,9.109136,-6.591569,-0.088320,2.064023,-1.705837,-7.047562,4.340791,-3.218407,8.764111,8.479608,6.920568,3.312987,-4.702561,-5.959416,-4.195793,-6.997360,-1.217063,8.126058,-5.066363,-2.021414,-1.691140,-5.322211,8.034815,7.515466,8.365026,5.701195,0.181203,-2.289281,0.218418,7.359707,-1.582657,-2.201198,-3.972605,-7.407994,-1.397506,5.360065,6.217818,-9.364005,-1.435851,3.770673,-5.873632,-2.972581,1.121553,-3.405938,9.332240,2.088765,7.807743,-4.246047,9.068130,-7.983846,-8.469958,-4.582074,-8.515631,-1.998044,-2.950570,-2.690971,-1.689979,-1.447726,4.020848,6.029710,-0.051371,-3.618609,-2.120702,5.386410,4.764188,7.912253,5.481202,4.047113,6.427429,-9.041822,9.938218,-9.311822,0.583424,-8.094944,1.403846,-3.288649,-5.453692,-2.217067,7.558940,-8.966726,8.199881,-4.230410,2.725690,-6.800642,-4.462454,-7.960119,5.071333,2.296117,2.769864,5.049318,8.300387,-7.606649,4.797338,-4.190293,-5.317746,6.245357,7.135069,-4.082213,-9.032876,6.009466,9.082925,-3.433861,-0.611256,3.477843,7.683325,4.785119,-1.961635,-1.557585,-6.364383,8.928492,4.214888,-8.369093,-1.975980,8.305173,-0.808102,3.069685,-7.583848,-7.481184,-0.145277,-8.138679,0.370210,-9.611089,7.631629,3.323245,-2.562219,-5.947454,9.804341,-6.667513,6.590320,-1.395800,-8.481506,0.299453,-4.355478,9.586900,-0.472599,-8.482398,2.289053,6.406012,-2.914231,-1.007875,5.631908,-2.096943,-4.348561,9.172606,6.303855,4.246303,4.248825,-1.167835,-7.942096,-7.315321,-4.898781,-6.606819,-5.773804,-5.436099,-8.125857,6.678376,-7.417178,9.531729,-6.932582,-6.243428,-8.396711,2.602585,2.625509,7.924121,5.406253,-4.150146,2.747671,-4.880406,-9.050260,-5.943244,8.630107,0.070579,9.127911,-8.019311,6.522286,3.802261,-4.203794,6.358284,9.120005,-7.281976,3.559588,-7.955962,9.152112,-6.155790,3.717191,1.870041,-3.974884,-8.106877,4.627924,8.672655,-8.724519,-4.404532,3.374377,-8.194831,3.490586,4.811660,8.529606,1.023098,-6.617564,-1.608409,-1.277539,7.241157,-8.881147,-8.027752,-4.878987,-8.596457,5.877246,-4.936701,8.404795,8.027169,5.441158,8.622133,-0.090776,0.621347,-6.159746,-0.296424,6.035067,3.532203,-6.324970,9.222007,4.008589,7.564917,9.345638,3.220921,-4.405251,9.053926,8.506937,-2.591935,0.531756,5.767522,7.354385,-4.340463,0.969409,5.821114,9.731684,-9.926176,-2.475938,6.684406,1.956600,-3.931834,5.313222,7.220962,-4.849964,-3.438071,-7.594264,6.679160,-2.371351,-9.907207,3.463069,2.595068,2.535734,1.869533,7.759250,7.558435,3.581425,-9.768424,9.004802,-6.732792,7.206401,6.615086,-9.897868,6.182087,-6.658499,-2.855244,9.471378,-0.837996,3.896111,3.552029,2.424253,-3.757344,-3.878373,3.279012,-6.736781,-9.835100,2.068414,6.664961,-0.794333,-8.112178,3.294884,4.289039,-2.952036,3.550103,7.335159,-4.758780,8.999201,-1.227061,6.371252,1.751735,7.758554,0.351416,9.959255,-4.704370,8.247724,-6.245020,0.951280,-3.772803,0.927139,4.371116,-6.947446,5.659888,-2.796291,0.911689,-0.708117,-7.463437,-1.872182,-0.977034,-1.160208,-1.707468,2.209376,-8.182416,-5.874586,-8.491725,-3.731235,-6.881781,1.296725,-9.536994,6.782778,9.784755,-7.474879,6.937398,4.541300,-4.220387,-0.623802,9.280470,9.506915,-6.138472,-3.045702,-8.312209,3.757225,7.385228,-9.110352,-2.222701,-0.257110,1.437055,0.813350,5.177150,-0.055856,0.777203,-6.705157,-2.129783,-1.395699,5.460057,1.276678,-0.887992,5.496812,9.086569,0.013868,9.861046,3.057766,0.740477,-2.824871,4.666141,-1.177712,7.573362,-0.104956,6.268560,7.470027,7.672810,-8.487091,8.358931,-9.697441,4.940135,-1.798908,4.742438,-0.029810,6.299308,8.816994,1.419220,9.518679,1.557129,6.848164,-4.506080,5.780164,8.524712,8.144203,5.939357,-5.631633,-7.841345,-9.581847,-5.509160,-6.865277,5.875043,3.720764,5.035247,6.895513,-8.641020,6.428243,4.934031,-2.403107,-1.574127,6.976001,2.076091,9.672721,6.259701,0.079745,-6.247246,7.536464,-6.597681,-9.163280,8.456976,-8.694441,-9.997908,-0.691585,-0.362004,6.788662,2.927826,5.387558,-9.879463,-3.181952,-7.085355,6.439678,9.656600,-1.885160,2.110693,2.135535,-0.450264,-5.874065,-4.057062,8.263821,-7.331822,3.286982,1.169993,-1.059245,5.368916,6.883126,9.306098,-0.395329,8.727814,-0.359348,-0.460006,5.599538,6.427903,8.509234,4.276041,-1.412912,8.258367,5.592802,-4.091925,-1.902370,-8.659548,7.927196,9.610528,-2.996835,-9.614714,4.953822,-3.925029,-7.620479,5.501616,2.839400,-3.006876,-7.701446,-0.862566,-8.633133,3.130857,-7.486194,1.531601,6.481239,-9.841424,0.323504,-7.569913,6.928314,-1.625794,-0.503106,1.333460,-3.881718,-9.561831,-0.797808,-4.461508,2.826222,2.626283,3.719041,-0.001948,1.829346,-8.242434,0.517906,-6.841709,8.112327,-9.510481,-0.318902,-4.528879,3.613447,5.754840,1.296680,4.143153,4.865205,-8.778565,4.896968,-0.385087,5.114364,9.664849,9.844713,4.389068,-7.963488,2.709845,-7.402625,1.412900,-5.498925,4.954999,-2.263040,-6.174211,0.223975,-3.698653,3.336472,-8.583261,3.229919,-5.484510,5.210063,-4.558166,5.529090,-4.883900,9.973336,-7.382212,-3.140891,1.499568,-6.044712,-0.867487,-3.805453,-2.304923,2.367529,0.009334,-0.880510,-7.953984,2.559524,-0.421700,-1.709256,-8.573308,-4.336896,8.006561,-1.098490,-1.659657,-3.719286,4.446755,1.815858,5.987658,-4.151395,-4.112329,-7.467654,-9.002627,8.194296,-8.339595,8.741157,2.397622,6.874748,-3.323437,5.351755,-6.042593,7.271464,-9.956612,0.388050,-7.071830,-9.407697,6.383940,2.435282,3.123295,-0.979294,-8.972089,-4.064740,7.253670,-8.547782,-1.766192,-8.154423,8.640231,-8.198662,4.066114,6.921708,3.169872,-9.893906,-6.395401,-2.282436,-5.272429,-9.675965,-7.529371,-0.779118,-1.032858,7.129524,-1.245378,-5.294726,4.223798,6.133846,-3.363180,-0.811050,8.557746,-0.233779,-9.246951,0.990824,2.140611,6.095785,-2.694257,-4.028902,-2.554685,3.549439,4.127030,9.525914,-1.333431,7.734750,0.560023,-2.939009,-3.331137,3.335916,3.300679,4.292615,-5.322607,-7.189344,-5.590212,1.188339,-6.667612,9.189215,-4.081936,5.252164,-8.931867,-6.531800,-1.412203,-2.717139,2.800542,-9.860838,-6.743253,-4.452082,-6.728842,0.280072,8.095534,-6.100614,-1.465609,1.732248,-7.312369,3.397387,-3.016639,-2.450878,5.196774,3.993940,-7.950925,5.689338,-0.373712,7.300139,5.771188,3.881120,-6.280271,-1.797975,-8.676327,2.211952,-7.636694,0.933037,-7.070870,-2.358964,-9.008688,5.159829,3.561405,5.414703,-5.409439,-1.803677,3.784480,-2.008117,0.926472,-5.622071,-9.068140,-7.339497,9.927623,6.754232,-0.339984,1.997621,-8.669416,7.375834,1.190401,5.601661,-0.941235,7.057774,3.517566,4.845623,9.675293,-6.540910,9.137450,-8.743127,-3.773813,8.248334,0.363740,8.270192,6.824938,6.139648,6.263965,-3.051732,6.739362,-6.812647,4.326044,6.986350,5.724395,-1.688291,7.273696,0.574040,2.757928,-3.033866,1.897595,-1.814598,-7.934914,-2.883997,-6.036368,4.866071,-3.172876,-4.107122,2.825307,-8.887157,-8.385297,-4.038485,-5.383096,6.639474,-6.609961,-1.086903,-5.408360,-3.490800,0.438361,-2.559257,9.246596,6.815196,4.525115,4.625090,7.454112,-2.559436,-1.958009,2.169241,-0.541042,-9.518008,-5.220603,8.874022,9.497676,-4.370558,-0.179507,-0.253220,-9.739723,4.983280,-3.513889,0.575256,8.592741,6.137527,-1.824127,-5.529767,8.849984,1.095953,0.855285,-4.622710,-0.157696,8.648232,-5.473109,-3.260520,6.853457,-5.104847,-2.838541,-2.201732,1.328635,9.935098,-3.084047,5.140626,4.149099,-6.512484,6.885051,1.176705,8.487406,-5.370979,5.511940,-0.204142,-0.799644,-6.066325,-9.622114,-1.488805,-1.705066,4.787633,7.425287,-5.436274,8.925124,-1.397390,-8.838264,-8.022255,-1.475184,9.897189,3.209508,7.131883,-4.911565,-7.515968,-3.345573,3.993531,5.620888,2.838958,6.746738,5.225180,-8.524953,4.128436,7.340555,-6.394244,-6.012642,6.364385,-9.234128,0.182395,-5.371068,1.785599,6.317839,3.872717,-6.168218,9.688638,4.381326,-1.505480,-2.387434,-2.585341,-8.297321,-8.598191,-6.670242,-3.988736,-1.676529,9.805451,-5.617156,8.470526,9.609056,-6.493706,7.037118,0.117828,-3.985295,0.540127,9.279036,-8.681982,-7.169648,-7.900654,6.188451,6.045871,9.801577,-5.177056,-4.381594,5.073722,4.035078,5.407118,0.622139,7.262024,-5.329168,6.872591,-7.738113,9.247590,-5.128433,6.006361,4.447788,2.558488,2.831525,-6.881958,9.309526,-0.856489,4.660117,4.272647,-8.380791,-6.338895,6.428942,4.176210,7.770752,3.001898,-7.911164,1.913279,2.662445,-8.570334,5.324352,-8.102159,-5.259819,7.536756,-1.395856,4.381248,9.834008,-2.957608,3.771613,-6.278133,-4.148280,-8.977736,-3.159321,-4.664037,-8.412321,-9.502369,6.476469,-2.903487,9.331964,1.162406,-1.213255,6.680742,-8.645778,3.308693,2.205827,3.432011,6.820410,-6.955171,2.004959,2.507535,-4.322243,8.748070,0.303839,9.974553,2.576559,-4.848286,3.332111,8.522510,3.312697,1.802411,-6.203062,9.091176,-4.071957,5.059463,-8.916329,2.635979,2.679494,6.022766,-9.262088,3.456643,3.910180,-0.201960,7.881676,7.237263,-8.484860,5.340756,7.557883], dtype = "float64")#candidate|4674|(1820,)|const|float64
var_4675 = relay.var("var_4675", dtype = "int16", shape = (550,))#candidate|4675|(550,)|var|int16
const_4676 = relay.const([[-2.384411],[-2.392584],[-6.652605],[-7.180201],[-2.903202],[0.308422],[9.456289],[-3.719463],[9.655844],[-5.190863],[-8.287206],[8.186103],[9.223606],[-0.862160],[7.475735],[2.673430],[-0.070394],[2.282078],[5.123448],[-9.204141],[-9.297064],[-4.852001],[-2.427476],[2.746696],[-1.527355],[-2.179151],[-8.194063],[-7.104953],[8.638214],[5.574274],[4.188646],[-5.651938],[0.406631],[5.310173],[5.787956],[-2.665994],[3.940419],[0.880148],[7.660622],[4.590782],[4.146567],[7.784107],[9.337142],[1.337071],[-9.106896],[-9.615527],[8.849495],[4.452775],[-0.807628],[2.911281],[-1.517950],[8.475723],[-3.801748],[-6.688740],[9.296317],[-1.800218],[6.796757],[-8.153450],[6.917915],[9.829984],[-7.941721],[-3.822480],[-3.166750],[-1.147065],[-7.701965],[5.460659],[4.468550],[-7.879932],[6.015033],[-8.424884],[-5.217423],[1.070606],[-8.932103],[9.632246],[5.603987],[8.960299],[-1.066207],[3.102125],[3.460614],[7.780887],[-0.308323],[-1.809937],[7.067597],[1.320829],[8.283354],[3.802618],[-2.541021],[-5.232168],[-0.830511],[3.783215],[-0.318767],[2.992559],[-1.499258],[-3.337712],[2.430245],[7.017624],[-9.275534],[7.217425],[-1.982262],[-8.516516],[-3.548555],[7.496375],[1.647712],[7.067070],[9.959286],[3.877450],[4.542317],[-3.365163],[-6.307671],[6.580617],[-3.796997],[2.112306],[3.479622],[-4.522267],[0.729270],[5.943907],[-8.871802],[1.614976],[-1.131615],[5.031043],[9.389102],[-7.604258],[-6.779876],[-5.278000],[2.882086],[-9.956089],[-6.407383],[-0.586951],[-5.798351],[6.689353],[4.790563],[-4.774834],[5.498016],[2.964738],[-4.604597],[-3.519252],[-8.476980],[1.216507],[1.458836],[4.750837],[9.646841],[5.981913],[3.352634],[7.019337],[-9.139452],[9.337686],[-6.513745],[-4.839504],[6.545572],[6.605102],[-1.013320],[8.086698],[-2.986182],[6.727519],[-5.805994],[-3.112787],[-1.648421],[0.096674],[6.148050],[-4.942248],[0.698535],[-2.121117],[5.952890],[-6.519008],[-7.203101],[-5.078232],[4.447438],[4.493792],[-5.445966],[1.543244],[1.466916],[2.503691],[8.821213],[1.876945],[4.534654],[0.526825],[-3.310913],[-8.431860],[-3.780100],[-7.190017],[5.284566],[3.201498],[0.971571],[-4.345219],[-4.660521],[-1.721058],[-4.257015],[7.703708],[5.689407],[-4.192281],[-3.849111],[5.719209],[7.023016],[-8.011811],[-5.237728],[8.076993],[-5.064470],[-3.058144],[5.773134],[1.859335],[6.618460],[-3.346269],[5.971816],[5.561509],[-1.902248],[-4.216893],[5.091653],[5.273784],[2.252473],[-1.352500],[1.566903],[1.011896],[2.829738],[3.506775],[9.697468],[-1.048466],[-5.350878],[-5.296558],[-9.802146],[-7.075765],[0.143388],[-7.215178],[5.396089],[-6.281958],[6.155468],[-5.310384],[-8.561964],[-7.343529],[-7.056468],[-6.428844],[6.125234],[-1.363060],[1.689991],[3.456166],[-1.280283],[4.451520],[-0.894619],[4.165492],[8.749734],[5.031175],[-4.200191],[9.958700],[6.043146],[-8.766621],[9.604762],[9.512177],[1.208332],[7.470544],[-5.903966],[4.908646],[-8.236944],[1.565501],[-7.918159],[-9.376432],[-4.474936],[-4.434283],[-4.882211],[2.723473],[-0.664648],[0.111317],[-3.925062],[-9.520681],[-4.281639],[7.690189],[-6.036727],[9.802241],[0.604255],[-4.124046],[7.792688],[6.856001],[-7.353115],[2.461346],[-1.847022],[-1.412363],[-3.371007],[-4.330711],[1.878362],[1.975277],[-7.723047],[-8.116700],[3.390505],[-9.311178],[-4.999786],[-7.435248],[7.546780],[1.012296],[2.385159],[-5.118718],[3.655239],[-5.942087],[-4.381924],[8.678253],[2.922210],[3.974175],[5.573118],[3.738642],[-4.490367],[2.884680],[-8.919643],[-3.416017],[0.967425],[6.920053],[-0.063097],[-1.233369],[-2.391098],[-3.270683],[-4.806456],[-5.380299],[-5.317029],[1.283730],[-3.633356],[-6.575664],[-3.562976],[8.345638],[7.420262],[7.093795],[-4.278331],[1.856283],[-6.002016],[-5.798149],[7.924395],[-4.894897],[-8.146553],[1.375256],[-8.376299],[-1.677827],[6.606984],[2.355819],[-7.334617],[-6.211889],[5.242234],[6.267353],[-6.987603],[-7.713462],[-9.410356],[-9.424511],[5.586564],[9.274123],[6.169388],[-8.221210],[-4.445519],[-9.681429],[2.500370],[2.542977],[5.361863],[2.402483],[5.533798],[-3.668354],[-3.065067],[3.308084],[9.952079],[-8.533714],[-4.443439],[8.025422],[-4.146189],[8.959771],[-2.237406],[2.911061],[-4.970789],[-1.938031],[-0.528744],[-8.910631],[-6.799629],[-0.506448],[0.275942],[6.503565],[0.538419],[-3.015413],[-3.597088],[5.040808],[4.064137],[3.034687],[2.704459],[-1.071099],[0.088257],[7.820237],[-8.130230],[-0.889655],[-9.717288],[6.424744],[-8.210352],[-6.286322],[-4.370112],[2.587263],[-7.463266],[-0.189455],[3.219766],[-4.586990],[-2.672191],[-7.411361],[0.593330],[3.827748],[8.887692],[-0.173516],[-3.773168],[-7.451611],[-4.147741],[-8.233258],[9.661154],[6.628137],[3.733347],[1.581175],[8.563072],[5.603621],[-9.206659],[-8.333090],[4.657336],[-7.974782],[7.488894],[-4.543604],[-6.886963],[-2.362147],[7.250330],[-9.804650],[-1.598625],[4.758576],[7.393981],[-8.386391],[-8.580811],[-0.970940],[-5.662863],[-4.008228],[-1.132185],[-5.192881],[5.927523],[-4.230456],[0.553226],[-8.350405],[7.432124],[7.268778],[3.386975],[1.869349],[-8.383812],[8.006169],[9.538386],[8.084161],[-1.194115],[5.906236],[-5.676261],[-7.007454],[-1.709792],[-1.973931],[7.667007],[1.266137],[1.384204],[-0.109840],[7.566995],[0.048098],[-2.358156],[-7.887664],[-1.607537],[2.162374],[8.781707],[3.962032],[-2.519129],[2.954184],[-6.069357],[5.663237],[-4.967409],[5.470164],[4.407534],[-9.888867],[6.367782],[-1.758311],[6.898685],[-5.110396],[2.167369],[-1.590437],[-6.108440],[-2.642022],[-4.835436],[-8.717808],[4.237792],[-5.772756],[-0.714216],[9.122948],[-9.370232],[-7.413088],[7.204606],[6.131883],[4.170889],[-4.091853],[1.611208],[4.664130],[9.703266],[-0.099315],[1.491211],[-4.276383],[-7.416305],[-2.098681],[-5.485004],[4.576160],[-1.465857],[8.864529],[-0.541416],[-8.554248],[-6.515127],[-0.701533],[0.741448],[8.820216],[-7.252923],[-1.712768],[-1.072096],[-5.809051],[-6.083118],[7.222763],[9.734897],[0.214462],[-7.584550],[7.118721],[7.985316],[-0.184356],[1.110731],[9.488269],[-9.030365],[8.223479],[-0.598403],[-7.534274],[-6.664809],[-4.816123],[-3.173746],[-2.384041],[-4.254666],[2.795701],[-3.820898],[6.717233],[-3.032212],[6.635590],[5.133198],[-8.111740],[3.826637],[-0.801193],[-9.486559],[1.638959],[3.194275],[6.623590],[9.137321],[3.878908],[9.335144],[8.351060],[-3.979026],[3.304319],[-3.354523],[-1.799384],[4.970237],[-6.252702],[-2.985718],[-8.881683],[2.848156],[5.391292],[5.058206],[-4.672862],[-0.481736],[-9.824427],[-9.587321],[1.908254],[7.552061],[1.644909],[5.292545],[0.540920],[8.967758],[-5.499300],[-7.071316],[-0.737574],[-9.279919],[-2.419092],[-1.026336],[-0.517403],[1.764913],[-5.834875],[-9.509010],[-1.979230],[-2.854317],[-9.623583],[2.518585],[-9.219934],[7.564495],[-0.811302],[5.354954],[6.920684],[-4.805280],[-4.629507],[8.360012],[-4.290380],[4.811471],[-0.048921],[-1.723049],[4.578002],[7.347945],[0.592206],[8.933357],[4.795338],[-0.701376],[-2.174405],[-4.163454],[5.726996],[-1.582051],[0.750209],[-9.877691],[-7.515665],[-5.133784],[-5.275902],[7.456255],[2.183193],[0.687736],[3.381176],[-9.098288],[7.120336],[-4.518168],[-1.416957],[6.708147],[4.954688],[1.313683],[8.379509],[-6.014208],[-7.568190],[4.134488],[-2.718817],[-6.024993],[3.727655],[-6.066206],[0.581196],[0.120115],[8.949571],[-8.531823],[-9.871059],[2.014762],[2.325926],[-9.549283],[-7.174984],[-8.416299],[2.187601],[8.097865],[-8.137121],[8.351263],[8.046531],[-2.360560],[-7.219555],[5.407684],[3.663756],[1.148182],[-3.386443],[-4.927939],[-6.166198],[-7.395793],[9.254184],[8.833603],[-6.587345],[-6.649072],[-0.768974],[-7.022672],[9.781271],[-8.987824],[-1.753754],[2.937801],[-2.211591],[3.847254],[6.253524],[-5.383166],[-9.105355],[2.984378],[-4.671686],[-9.120384],[7.632960],[3.340108],[-6.321072],[-2.616501],[9.790462],[4.818140],[-8.340249],[9.431190],[-5.134157],[1.825880],[-0.255262],[6.610368],[2.965780],[9.262600],[6.955811],[-6.721479],[-4.942655],[-4.824257],[-4.516343],[4.376847],[-5.301011],[5.395232],[7.639242],[2.920152],[-2.658714],[-9.550163],[-5.307390],[8.084169],[-2.920505],[8.359934],[9.735666],[-1.276804],[-8.175572],[-2.850120],[8.123555],[-7.755926],[9.140146],[4.936292],[-0.811582],[-4.084143],[9.417759],[-7.735799],[-8.947195],[6.256183],[-8.005400],[-2.944036],[2.184841],[0.796457],[0.665407],[-0.485332],[3.143256],[-3.683304],[-8.254612],[-8.528497],[-0.068137],[3.328887],[6.851036],[-6.260857],[-0.043847],[-0.307687],[-7.191068],[-1.003358],[3.469733],[2.520364],[1.850502],[-6.932294],[-3.221989],[1.412476],[-1.983596],[-4.569527],[-0.897148],[-4.787983],[0.705736],[0.276227],[8.532639],[-0.061785],[-8.997560],[6.239535],[-3.042546],[2.694885],[-3.972290],[7.435014],[-9.062717],[4.840775],[-9.726214],[-7.822293],[-1.834641],[-4.093214],[5.874100],[8.439664],[3.321052],[-1.476253],[-5.201077],[2.047399],[5.939211],[-0.476491],[-4.527846],[-5.006295],[5.957130],[3.078370],[7.441953],[-0.673547],[2.570701],[8.630324],[5.044124],[6.853324],[-2.551533],[-4.527028],[3.330766],[-9.682183],[-9.056996],[-0.317667],[-5.790424],[-8.300315],[-2.278742],[5.875696],[1.529032],[5.298812],[-2.598205],[8.573374],[7.188521],[-4.957429],[-9.674729],[-0.353123],[-5.679424],[-0.549981],[-0.452495],[-0.856098],[-2.636607],[-1.586328],[-5.867976],[-2.491275],[2.823587],[-6.357482],[4.937700],[2.760232],[-3.373377],[-4.826801],[4.185999],[-3.768036],[3.123510],[-0.324581],[3.574506],[-4.515564],[1.540287],[6.409908],[-0.659633],[5.624539],[5.785529],[2.911389],[6.074892],[-6.371635],[-5.895179],[9.057401],[6.681919],[-3.057368],[-8.007704],[-0.065652],[8.296031],[9.982108],[8.792823],[-3.505601],[3.784977],[-3.275895],[-1.287743],[7.565068],[-7.173832],[5.214448],[-2.714809],[-2.932416],[4.552856],[9.098088],[-3.190436],[7.194171],[-9.749935],[-3.085107],[6.147562],[-2.330242],[9.692851],[-5.229545],[-5.276738],[4.889479],[3.349256],[-1.068307],[0.949625],[6.668832],[9.863976],[0.989177],[6.939906],[5.647596],[0.778288],[7.432720],[-6.567640],[5.300415],[-8.815782],[8.426751],[9.337851],[-6.765780],[-9.119451],[9.287794],[1.101224],[-7.102783],[6.034283],[-6.210781],[-1.671821],[-5.831167],[-0.921549],[6.322140],[2.834828],[-3.805582],[-9.976775],[3.396944],[-4.645237],[-3.598499],[-4.779471],[2.624129],[-3.466835],[-7.707653],[6.446936],[-8.168980],[-9.002281],[2.856362],[4.468066],[1.719656],[-9.514716],[-3.735698],[-6.196169],[-4.811157],[6.189942],[3.780558],[-5.257146],[-7.618205],[-0.494355],[-6.559965],[7.979555],[2.882287],[-1.964446],[-8.883984],[1.221602],[-1.573712],[8.467326],[-5.855043],[-8.823347],[3.198177],[2.620114],[8.640374],[5.601079],[9.644031],[-3.721591],[5.090520],[-5.629897],[8.427395],[1.832222],[-0.803254],[-1.222445],[-8.277984],[-5.015515],[1.019302],[-1.922030],[-3.114720],[0.545032],[4.417489],[5.021870],[-5.334678],[4.920863],[-5.942785],[-0.300856],[-5.988858],[5.013841],[8.482506],[0.874729],[-1.864754],[-3.010844],[1.821116],[-8.507207],[1.014792],[8.972109],[-8.185353],[5.789550],[8.033756],[-1.544774],[-8.029032],[5.024785],[-4.706511],[-1.011667],[-1.349688],[-6.154736],[5.122476],[-0.792699],[1.671962],[-9.588701],[-6.344090],[2.559844],[8.831911],[6.134796],[4.530756],[-6.921677],[1.575591],[-4.620331],[-3.616664],[4.056807],[6.246440],[7.562794],[-2.730884],[0.007155],[-6.806547],[-4.930563],[3.409711],[9.967648],[-4.802849],[9.149322],[-8.129917],[-6.988274],[-2.600809],[-7.314227],[7.657361],[0.212350],[2.396543],[4.337546],[0.752169],[8.781238],[-2.133963],[-5.811124],[0.447400],[-2.341343],[4.349469],[-2.264161],[8.083761],[6.898275],[3.762465],[6.053805],[1.998711],[9.775346],[4.712467],[-3.217167],[3.011009],[2.241598],[-9.179584],[-6.614441],[1.872542],[6.770610],[-7.582222],[8.563068],[-8.120884],[1.725058],[-2.520619],[-2.403629],[-0.891664],[-8.319370],[-3.973534],[-5.846915],[-5.163244],[-4.138526],[0.747358],[-0.777078],[8.604369],[7.521326],[7.088437],[-3.168276],[1.956089],[-3.541306],[-5.612052],[1.948277],[-4.342139],[-5.994829],[8.399840],[5.296353],[-1.464341],[-6.264468],[-6.367538],[9.014523],[-6.751472],[0.029230],[1.338396],[-1.085926],[-8.149473],[-4.454297],[7.821172],[5.556979],[0.196702],[7.176766],[-2.000763],[-9.659023],[-4.955336],[-7.883025],[6.848241],[-4.825455],[5.040694],[-0.066506],[6.185821],[5.005472],[5.927783],[-4.079681],[-9.698307],[-1.629521],[-1.214547],[-2.186635],[-6.980487],[1.635267],[1.758573],[5.855040],[8.968357],[-2.322723],[-3.760297],[1.853577],[6.642832],[2.988079],[-1.669518],[-2.919087],[0.199924],[-1.874730],[-3.996489],[-6.818934],[9.655963],[2.910740],[8.426711],[-9.306083],[-8.001821],[1.603630],[0.412529],[5.724200],[-4.235297],[9.478380],[-3.708480],[3.863018],[-2.582376],[1.328948],[-9.428434],[-4.873973],[-2.720714],[-5.103322],[-8.767074],[-4.383458],[5.513932],[5.907181],[4.942258],[-6.416465],[0.525339],[-2.298561],[9.876183],[2.678815],[-1.308643],[-0.448454],[-3.552774],[-8.153730],[-4.115652],[5.432804],[4.888475],[4.482769],[7.650101],[1.291434],[2.457642],[-8.051057],[0.911097],[7.451810],[-3.447426],[7.725441],[6.790318],[6.067155],[-6.012725],[-3.127977],[-1.491078],[8.492068],[-7.275077],[3.346241],[-3.028672],[-7.968568],[-9.668359],[-8.935270],[1.209190],[-5.850275],[8.810960],[-9.386527],[9.632801],[-4.516402],[-6.037105],[-6.059442],[-8.184324],[-4.394956],[-5.233511],[4.039707],[1.276490],[4.841667],[-0.874183],[1.494255],[7.650979],[-1.314763],[4.235768],[1.363182],[-4.356533],[-6.192373],[2.661113],[-8.934325],[1.505038],[-1.049775],[-5.227322],[-7.361501],[7.646935],[5.119393],[6.686019],[1.815656],[-3.753879],[8.033833],[7.427390],[-8.891751],[8.002889],[-4.974554]], dtype = "float64")#candidate|4676|(1170, 1)|const|float64
call_4673 = relay.TupleGetItem(func_1747_call(relay.reshape(const_4674.astype('float64'), [10, 13, 14]), relay.reshape(var_4675.astype('int16'), [550,]), relay.reshape(const_4676.astype('float64'), [390, 3]), ), 1)
call_4677 = relay.TupleGetItem(func_1752_call(relay.reshape(const_4674.astype('float64'), [10, 13, 14]), relay.reshape(var_4675.astype('int16'), [550,]), relay.reshape(const_4676.astype('float64'), [390, 3]), ), 1)
output = relay.Tuple([bop_4580,const_4608,var_4609,bop_4620,bop_4636,call_4640,call_4646,var_4647,var_4648,const_4649,call_4661,const_4662,var_4663,call_4673,const_4674,var_4675,const_4676,])
output2 = relay.Tuple([bop_4580,const_4608,var_4609,bop_4623,bop_4636,call_4641,call_4650,var_4647,var_4648,const_4649,call_4664,const_4662,var_4663,call_4677,const_4674,var_4675,const_4676,])
func_4680 = relay.Function([var_4578,var_4579,var_4609,var_4647,var_4648,var_4663,var_4675,], output)
mod['func_4680'] = func_4680
mod = relay.transform.InferType()(mod)
var_4681 = relay.var("var_4681", dtype = "int8", shape = ())#candidate|4681|()|var|int8
var_4682 = relay.var("var_4682", dtype = "int8", shape = (10, 5, 16))#candidate|4682|(10, 5, 16)|var|int8
var_4683 = relay.var("var_4683", dtype = "float64", shape = (216,))#candidate|4683|(216,)|var|float64
var_4684 = relay.var("var_4684", dtype = "float64", shape = (675,))#candidate|4684|(675,)|var|float64
var_4685 = relay.var("var_4685", dtype = "float32", shape = (396,))#candidate|4685|(396,)|var|float32
var_4686 = relay.var("var_4686", dtype = "float32", shape = (550, 3))#candidate|4686|(550, 3)|var|float32
var_4687 = relay.var("var_4687", dtype = "int16", shape = (550,))#candidate|4687|(550,)|var|int16
output = func_4680(var_4681,var_4682,var_4683,var_4684,var_4685,var_4686,var_4687,)
func_4688 = relay.Function([var_4681,var_4682,var_4683,var_4684,var_4685,var_4686,var_4687,], output)
mutated_mod['func_4688'] = func_4688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4738 = relay.var("var_4738", dtype = "bool", shape = (10, 10, 4))#candidate|4738|(10, 10, 4)|var|bool
var_4739 = relay.var("var_4739", dtype = "bool", shape = (10, 10, 4))#candidate|4739|(10, 10, 4)|var|bool
bop_4740 = relay.logical_or(var_4738.astype('bool'), relay.reshape(var_4739.astype('bool'), relay.shape_of(var_4738))) # shape=(10, 10, 4)
output = relay.Tuple([bop_4740,])
output2 = relay.Tuple([bop_4740,])
func_4745 = relay.Function([var_4738,var_4739,], output)
mod['func_4745'] = func_4745
mod = relay.transform.InferType()(mod)
var_4746 = relay.var("var_4746", dtype = "bool", shape = (10, 10, 4))#candidate|4746|(10, 10, 4)|var|bool
var_4747 = relay.var("var_4747", dtype = "bool", shape = (10, 10, 4))#candidate|4747|(10, 10, 4)|var|bool
output = func_4745(var_4746,var_4747,)
func_4748 = relay.Function([var_4746,var_4747,], output)
mutated_mod['func_4748'] = func_4748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4837 = relay.var("var_4837", dtype = "uint32", shape = (1, 8, 13))#candidate|4837|(1, 8, 13)|var|uint32
var_4838 = relay.var("var_4838", dtype = "uint32", shape = (14, 8, 13))#candidate|4838|(14, 8, 13)|var|uint32
bop_4839 = relay.maximum(var_4837.astype('uint32'), var_4838.astype('uint32')) # shape=(14, 8, 13)
func_4308_call = mod.get_global_var('func_4308')
func_4312_call = mutated_mod.get_global_var('func_4312')
var_4846 = relay.var("var_4846", dtype = "float32", shape = (480,))#candidate|4846|(480,)|var|float32
var_4847 = relay.var("var_4847", dtype = "float64", shape = (216,))#candidate|4847|(216,)|var|float64
call_4845 = relay.TupleGetItem(func_4308_call(relay.reshape(var_4846.astype('float32'), [16, 6, 5]), relay.reshape(var_4847.astype('float64'), [216,]), ), 1)
call_4848 = relay.TupleGetItem(func_4312_call(relay.reshape(var_4846.astype('float32'), [16, 6, 5]), relay.reshape(var_4847.astype('float64'), [216,]), ), 1)
output = relay.Tuple([bop_4839,call_4845,var_4846,var_4847,])
output2 = relay.Tuple([bop_4839,call_4848,var_4846,var_4847,])
func_4853 = relay.Function([var_4837,var_4838,var_4846,var_4847,], output)
mod['func_4853'] = func_4853
mod = relay.transform.InferType()(mod)
var_4854 = relay.var("var_4854", dtype = "uint32", shape = (1, 8, 13))#candidate|4854|(1, 8, 13)|var|uint32
var_4855 = relay.var("var_4855", dtype = "uint32", shape = (14, 8, 13))#candidate|4855|(14, 8, 13)|var|uint32
var_4856 = relay.var("var_4856", dtype = "float32", shape = (480,))#candidate|4856|(480,)|var|float32
var_4857 = relay.var("var_4857", dtype = "float64", shape = (216,))#candidate|4857|(216,)|var|float64
output = func_4853(var_4854,var_4855,var_4856,var_4857,)
func_4858 = relay.Function([var_4854,var_4855,var_4856,var_4857,], output)
mutated_mod['func_4858'] = func_4858
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5051 = relay.const([[[7.113141,4.988999,-2.855465,0.308663,6.938852,-5.966192,-4.613457],[8.569881,-7.796865,-8.653435,-7.296422,-9.087985,4.339225,9.749999],[-0.457213,-7.594825,0.786343,8.438390,9.178371,1.774744,4.830079],[0.186237,-9.606430,-1.665255,0.935415,-5.847560,-2.391633,-8.887509],[9.201872,-2.192116,-6.281682,-9.970221,-2.377803,-1.025200,-5.181822],[5.205006,0.801955,3.486407,5.656860,3.799316,-6.443471,-2.392815]],[[-2.675204,-7.728137,1.196088,-7.684173,-4.311169,2.647006,-4.851047],[-7.649930,4.508101,-1.189579,-7.566142,-7.768595,-9.198594,-2.700510],[7.534844,7.693397,5.388408,-2.485834,-8.523978,0.369132,5.322110],[-9.062946,-0.231901,-7.614406,-7.254852,-0.884366,-2.847684,-2.917839],[-9.035291,4.225140,5.282003,-3.779999,7.243835,9.583248,0.861450],[-4.503175,-7.030740,-2.461135,5.237402,-3.855068,2.448977,7.399254]]], dtype = "float64")#candidate|5051|(2, 6, 7)|const|float64
uop_5052 = relay.rsqrt(const_5051.astype('float64')) # shape=(2, 6, 7)
bop_5059 = relay.floor_mod(uop_5052.astype('float64'), relay.reshape(const_5051.astype('float64'), relay.shape_of(uop_5052))) # shape=(2, 6, 7)
uop_5065 = relay.acos(const_5051.astype('float32')) # shape=(2, 6, 7)
uop_5080 = relay.sin(const_5051.astype('float32')) # shape=(2, 6, 7)
func_4541_call = mod.get_global_var('func_4541')
func_4549_call = mutated_mod.get_global_var('func_4549')
const_5084 = relay.const([-3.324517,-7.683100,1.786175,7.521332,5.267536,8.644535,-0.630086,7.447343,-8.320880,-2.565880,4.409774,3.501737,5.727754,-7.251517,8.097080,1.871338,3.595310,3.294087,0.585566,-3.915545,-2.475439,-6.980415,-6.258604,2.964290,-1.206344,3.011197,-1.197713,-7.174087,7.597943,-8.195464,5.818262,-9.459299,0.075610,9.265223,-5.858062,7.594821,0.855024,-5.794209,1.495808,1.356116,7.128895,7.898736,8.251778,7.730744,8.249383,2.228236,7.686794,9.981735,5.289706,-4.727016,-6.284032,0.472553,0.465899,5.736439,8.913901,7.626774,-9.514439,1.224955,-2.689336,-6.972228,-1.082773,-3.306521,-4.052698,9.917523,-3.534736,8.034201,4.119106,-4.921561,-7.933444,-6.618724,-1.114971,-0.233682,-9.094198,-9.488640,-5.528930,-2.654115,0.290826,6.400030,7.774774,7.174466,-9.856352,-8.189007,0.406367,-2.576469,0.793234,-7.639685,-8.951261,-8.506581,-8.442082,0.352949,6.353262,1.911332,-5.044603,-7.082962,6.532001,5.525808,6.557525,-2.082785,3.212578,-0.041770,6.905374,-4.937036,-3.263689,-8.456340,-8.104060,5.751966,-8.178808,-4.907255,1.920779,-8.380606,-7.470999,-2.832348,5.134297,2.932263,-9.375728,7.850726,-4.589836,3.098267,-7.124898,1.973407,-9.425855,0.850249,2.287987,7.639643,-8.857563,-1.485715,-6.239401,-2.859613,9.675510,-8.369640,-3.892986,4.748701,1.523629,6.165774,-0.404552,-1.550280,4.337978,8.385267,2.678680,-8.670348,-3.785200,4.306828,3.937931,8.345608,7.629364,-5.465238,3.263695,-9.154041,4.811362,1.256977,-2.006851,-1.897580,3.162045,-8.836288,-1.307579,-8.424663,3.858105,7.914590,-1.404369,3.103029,-2.853945,0.685026,1.125815,1.865660,2.575986,0.157807,-7.354553,9.697234,6.373822,5.009043,-4.835322,4.400533,7.112095,2.824560,7.702151,4.113812,-0.380786,8.049306,-4.928902,-3.134334,8.480765,0.143273,3.214467,6.727484,-4.766830,1.531936,0.750643,3.572738,0.274766,-4.163336,1.270629,8.844955,-1.718379,-0.269463,4.614673,-2.609936,-2.323236,-1.605346,-4.612680,-9.566887,-7.541262,-0.335022,-9.299109,-3.583760,-3.333736,-8.169155,-1.020096,8.609563,2.561796,5.963348,3.283140,8.918150,3.818732,8.974364,-2.149794,2.724266,0.388156,-7.210613,4.672335,-2.371772,1.070829,6.355998,-9.166652,-1.550983,-3.048513,-0.280070,0.965245,5.628025,0.711333,-2.822141,9.227041,2.551572,4.901237,-3.436862,-2.703948,-8.437371,-8.517878,-6.820961,1.013550,-5.589493,-2.552158,3.580215,-4.311461,9.461577,9.891540,2.217646,5.502022,-1.787800,-9.014170,8.438032,5.284207,-1.498686,2.099455,-4.043878,3.399467,5.141664,6.392300,0.664901,0.776618,9.433041,5.703449,8.831116,6.341301,2.706906,7.800410,3.978373,9.663531,-4.863655,-3.237973,4.996582,1.725269,9.363232,2.306118,-1.616456,3.056100,6.584211,7.771901,5.471500,-4.630669,-8.684569,4.480344,-3.333056,-6.117480,-8.189806,7.235984,-3.369820,-8.970941,2.862029,4.180102,-1.610165,-0.713373,7.098978,4.509628,-5.184011,2.712521,4.621218,-7.158127,7.312780,-6.253512,9.879366,0.088227,-5.639540,-7.583811,8.874963,0.699149,-5.829298,-2.743996,2.367175,1.604547,7.048217,4.414126,2.113063,3.407880,-4.656034,-4.996854,4.810522,0.534914,8.113732,-0.635754,7.759905,2.115596,8.895539,3.234824,2.057689,-6.955886,-0.857419,8.672000,-3.478851,-3.197691,-7.708156,-9.306586,9.943366,2.530153,3.243963,7.737971,3.807512,5.006138,-3.499330,-0.138457,8.564599,4.119167,-7.407587,5.332916,5.501977,5.539114,1.097979,0.748585,0.160516,1.013984,-2.224805,-6.360235,0.821347,-7.637493,-9.117528,8.002833,-8.743073,1.657456,8.870099,6.478243,9.723823,-7.388695,-4.175120,1.161696,-5.642906,3.996173,5.417392,1.809976,6.798258,3.825742,-2.396991,1.948196,3.324958,2.187457,3.403747,2.416761,4.394152,3.500902,9.249042,1.001767,-6.866357,5.915188,-9.037706,-7.183101,-3.786636,-2.666270,6.610434,0.289503,-3.880784,9.840265,1.429835,-0.556063,4.946266,8.928835,-3.833806,-7.395718,7.825020,2.665885,-9.656812,8.929754,5.409084,3.645443,2.109701,6.574090,2.164970,6.190262,2.227757,0.176900,-4.094217,6.805727,-1.328531,2.673958,1.981926,1.419885,-8.217804,6.614017,-2.454308,-0.620652,0.851127,-8.862908,9.890615,-3.122145,8.508762,2.615606,-1.185797,4.126317,-4.773134,-6.642514,2.893988,-4.484655,-6.528058,9.762160,-8.893271,-1.218352,3.104716,6.103830,-7.218586,3.140673,1.748011,9.339165,0.623758,-4.937432,4.542829,-1.790721,9.763408,6.733218,-8.732589,-9.750393,-5.298976,-1.234205,7.851109,-8.677772,8.391107,-8.495391,-9.821277,-7.143767,-5.921199,-1.890192,7.957554,-0.502967,3.005916,-7.040977,-8.016983,-0.099173,8.439863,-6.796759,-9.068224,6.513748,-6.777417,2.583109,2.934827,-8.638742,-6.307131,-9.262488,8.421073,-5.462768,-4.163871,-2.094085,-9.447882,1.511240,-2.481961,-5.947693,7.348864,-0.243802,6.362836,-6.481962,-1.462961,-6.035770,5.905555,-3.042481,2.825913,3.728416,-3.057893,-3.529375,6.245701,-4.231693,5.625389,-2.801981,-0.880213,-1.703497,-8.889181,2.421514,-9.873027,-1.201917,-1.052824,-5.871441,5.876144,0.646069,-7.217856,-6.607168,9.206406,5.453900,-3.082229,5.361222,-9.222744,-6.003760,5.299034,9.010361,-6.274253,9.635261,8.369924,-6.814176,-3.989072,-3.392673,-5.614097,-2.265009,1.995376,-5.922735,6.862945,7.248780,-9.229678,0.192362,2.137541,5.062530,-3.438778,-0.874642,-8.187270,-3.808249,-7.502759,4.958342,-8.901794,-7.604358,8.185506,5.901833,2.369608,8.733377,-4.889132,9.809851,1.338771,1.625821,8.017579,1.667251,5.652761,-4.042144,-8.102114,-3.698470,8.953951,7.213257,0.145332,-7.411857,7.358679,-9.264012,-5.051657,0.735392,-2.568421,2.003757,-2.169928,-3.317708,-3.862324,1.953609,-2.071344,4.052248,-4.417273,9.418484,4.766199,-5.955858,0.109238,9.757037,-8.982598,5.026816,6.489698,2.106705,-7.369708,6.289607,-8.966921,4.829608,-7.645180,0.542422,3.642885,6.621747,-6.032084,7.966549,-9.669798,3.183508,4.091623,-6.730126,0.929042,-0.420288,4.051790,-3.915410,-4.530903,-9.322733,0.606609,-3.018353,-7.411063,0.664180,1.234155,-1.881444,5.932153,0.419991,9.401480,-5.586183,6.056468,-7.023430,-3.238666,-5.637298,-3.825978,-1.403447,-4.839108,7.694635,-3.648314,8.996362,2.168371,2.590559,6.064376,-4.799121,-4.996255,5.806239,1.117587,-9.036840,3.482379,3.071315,-5.711328,3.178059,-3.494276,0.805783,7.779211,-4.313303,8.512185,-5.061621,-3.922550,6.915305,0.816026,-6.163828,-8.105921,-9.698574,-6.821691,8.939593,1.537246,1.207018,0.907354,-8.096212,-4.531443,-3.738870,3.882279,-0.199847,6.821299,-0.822398,8.506743,7.186693,-4.757714,4.803032,8.080273,1.726514,9.185440,-2.090690,5.656356,3.081959,-9.916716,0.672977,-5.772282,5.730977,2.314034,-8.831043,7.865913,-3.414902], dtype = "float64")#candidate|5084|(675,)|const|float64
var_5085 = relay.var("var_5085", dtype = "float32", shape = (4, 120))#candidate|5085|(4, 120)|var|float32
var_5086 = relay.var("var_5086", dtype = "float64", shape = (216,))#candidate|5086|(216,)|var|float64
const_5087 = relay.const([[-0.521079,-2.741903,2.679806,-8.891725,0.329890,6.434712,0.342263,-4.090287,2.846850,4.028758,-8.141433,2.784604,0.043543,9.403422,8.126546,-4.775093,1.959290,0.704406,-8.093037,-2.890172,-3.921884,-9.250641,8.897209,4.342969,2.370220,5.313402,8.120025,8.851276,-3.802242,-8.440470,2.239330,2.042507,6.087507,5.564565,4.372455,1.446967,1.574032,3.848558,8.706182,2.732247,6.853443,-8.838739,1.015845,6.558366,-1.646799,-9.567671,-9.654904,2.349563,-7.994297,-9.564812,-7.964833,3.767311,7.057783,-9.254066,-6.611314,-1.611481,4.521231,-6.734971,-7.149840,-7.069745,0.248880,-7.270973,-8.324761,8.519231,4.894152,-4.290566],[9.635114,4.496821,-8.968083,9.987203,-6.645863,1.247752,6.210852,-0.388923,0.620614,-5.318263,7.937781,5.345092,-7.825371,-6.903237,-2.907968,9.242943,3.107309,-9.707680,8.015446,-9.879606,5.332274,5.660948,1.362862,-4.208504,-5.382500,5.248185,-1.914383,6.738149,8.023718,-8.589067,8.257134,1.246937,-4.496280,-9.187189,-1.085616,8.485673,-4.952460,-9.037086,9.316033,1.979858,6.152101,7.086906,0.078717,9.358503,0.699125,-8.076634,1.745199,3.232198,5.986798,3.071185,-3.341071,-4.185547,6.533578,-1.943572,1.604998,-9.819678,-7.997473,-9.318679,5.373664,-2.424407,7.832021,1.782961,-5.191489,7.093100,-5.692424,6.436267],[7.973804,-2.777798,-9.942223,7.341494,-6.098205,4.735355,-7.457340,-5.379685,9.180616,-3.402966,1.017987,5.560952,-0.188148,9.336554,-4.862122,0.577540,-1.685485,-1.962524,-4.659080,0.437857,-3.277263,6.285328,-1.350246,-6.369700,-8.736615,9.567775,-8.279606,3.135241,4.365369,4.660657,-4.916540,7.069515,-6.845742,1.546215,-6.737572,7.249908,4.823096,9.501622,-8.794244,5.331359,-4.019013,-0.535599,-8.653799,3.956956,9.457569,3.592865,6.936163,-2.037500,-8.627613,-9.354140,-0.859789,6.820368,-1.715898,-0.436635,-0.113198,7.262077,-2.626792,3.655661,8.412629,-1.822138,-4.043394,-4.976286,-8.254180,5.769036,2.241504,9.783518],[-2.101252,6.692951,1.171038,3.823584,-2.015253,-5.815260,9.455196,7.913065,-1.516227,2.107288,7.204044,-3.301551,-5.322758,-6.317291,4.138650,-4.538442,7.077219,-7.813503,3.363353,-5.073076,-8.837946,-6.220158,5.748385,1.581812,2.041564,-1.968658,-8.950784,-2.301876,-3.914439,-5.633061,5.009596,5.967714,6.186276,1.569059,-0.104463,-7.766822,8.060341,-5.834744,-8.323895,-8.638507,-4.631679,-3.473575,-3.102384,8.644639,6.309711,-3.107374,-7.669754,1.656763,-6.123571,-2.560741,7.253372,3.427125,3.918191,4.845866,6.547048,6.932481,-5.804974,0.697335,7.377076,8.106269,-8.793567,9.134373,-2.912773,-9.609737,2.030993,7.470484],[7.207948,5.418410,-7.938266,-6.485216,0.593033,4.899582,6.613578,-0.446045,1.662909,-2.827293,3.797619,7.775256,-6.702584,-1.740262,-6.122954,-5.968498,4.607577,5.305960,-0.091438,1.311690,2.391848,0.329590,5.654634,2.995624,-8.992648,1.634420,4.742489,3.363506,-6.111610,-7.736872,6.002278,7.779098,-2.301657,-3.479087,-8.687252,-7.165611,-4.013816,0.031528,3.180573,-3.318382,-8.171652,-5.415626,-9.236518,6.723895,7.053174,-6.965779,9.109761,8.886271,-0.694900,-0.387057,-3.660934,-8.660135,3.754831,-4.550135,8.152292,-7.931359,-3.593301,1.893960,-5.720249,-4.144505,-2.884099,-6.914754,-2.874097,-2.698374,4.986396,1.872151],[4.076851,-3.589206,7.917183,-5.015596,1.905753,-3.066017,6.731887,9.495061,6.206246,9.528206,-3.210385,2.766497,-5.732045,9.654164,-6.849441,6.785654,-5.166433,-1.412298,-2.896024,-9.153573,5.621736,-9.204201,5.004307,-9.605044,5.716405,-8.399757,8.082251,-2.401832,5.269134,4.151368,-2.560745,-6.577793,-2.791946,1.412221,3.421200,0.533187,-2.124995,1.915397,9.629169,-9.782952,9.669579,-2.993633,-5.612912,-5.346340,-7.122633,-8.781206,-8.660608,4.800958,2.680604,-3.417370,2.283708,-5.427217,4.548710,4.340152,8.464948,7.130007,-0.043119,-6.389124,-7.013426,5.843235,-2.465957,5.989482,-0.481442,-4.430260,1.242653,-0.544056]], dtype = "float32")#candidate|5087|(6, 66)|const|float32
var_5088 = relay.var("var_5088", dtype = "int8", shape = (660,))#candidate|5088|(660,)|var|int8
call_5083 = relay.TupleGetItem(func_4541_call(relay.reshape(const_5084.astype('float64'), [5, 15, 9]), relay.reshape(var_5085.astype('float32'), [480,]), relay.reshape(var_5086.astype('float64'), [216,]), relay.reshape(const_5087.astype('float32'), [396,]), relay.reshape(var_5088.astype('int8'), [110, 6]), relay.reshape(const_5084.astype('float64'), [5, 15, 9]), ), 5)
call_5089 = relay.TupleGetItem(func_4549_call(relay.reshape(const_5084.astype('float64'), [5, 15, 9]), relay.reshape(var_5085.astype('float32'), [480,]), relay.reshape(var_5086.astype('float64'), [216,]), relay.reshape(const_5087.astype('float32'), [396,]), relay.reshape(var_5088.astype('int8'), [110, 6]), relay.reshape(const_5084.astype('float64'), [5, 15, 9]), ), 5)
uop_5100 = relay.log10(uop_5052.astype('float32')) # shape=(2, 6, 7)
output = relay.Tuple([bop_5059,uop_5065,uop_5080,call_5083,const_5084,var_5085,var_5086,const_5087,var_5088,uop_5100,])
output2 = relay.Tuple([bop_5059,uop_5065,uop_5080,call_5089,const_5084,var_5085,var_5086,const_5087,var_5088,uop_5100,])
func_5102 = relay.Function([var_5085,var_5086,var_5088,], output)
mod['func_5102'] = func_5102
mod = relay.transform.InferType()(mod)
mutated_mod['func_5102'] = func_5102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5102_call = mutated_mod.get_global_var('func_5102')
var_5104 = relay.var("var_5104", dtype = "float32", shape = (4, 120))#candidate|5104|(4, 120)|var|float32
var_5105 = relay.var("var_5105", dtype = "float64", shape = (216,))#candidate|5105|(216,)|var|float64
var_5106 = relay.var("var_5106", dtype = "int8", shape = (660,))#candidate|5106|(660,)|var|int8
call_5103 = func_5102_call(var_5104,var_5105,var_5106,)
output = call_5103
func_5107 = relay.Function([var_5104,var_5105,var_5106,], output)
mutated_mod['func_5107'] = func_5107
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5366 = relay.var("var_5366", dtype = "uint64", shape = (14, 7, 2))#candidate|5366|(14, 7, 2)|var|uint64
const_5367 = relay.const([[[-2,-3],[-7,-3],[4,-8],[-5,7],[3,-2],[-7,-2],[-1,-1]],[[1,-6],[-2,-1],[4,5],[-8,-5],[9,-4],[5,7],[-4,10]],[[1,2],[7,-4],[-5,-7],[9,-8],[-6,1],[-6,8],[-4,3]],[[3,-3],[-7,6],[-5,4],[-7,10],[4,4],[-3,-5],[-1,-10]],[[7,-3],[7,7],[-5,7],[-5,-9],[-1,-8],[-8,-4],[9,-8]],[[2,7],[9,2],[-10,-9],[1,-4],[-8,-9],[-1,-5],[1,-10]],[[1,-3],[5,-4],[2,2],[4,6],[9,4],[-2,-8],[9,-1]],[[-5,3],[8,10],[-5,-10],[10,-8],[3,-10],[3,-2],[6,-9]],[[-7,5],[3,7],[3,-5],[-2,7],[8,6],[3,-6],[9,-3]],[[-9,-10],[-3,8],[5,7],[5,-10],[10,-6],[-7,10],[8,6]],[[5,2],[2,-10],[-9,2],[6,-5],[5,7],[-3,2],[7,9]],[[9,5],[-5,-9],[1,5],[-10,7],[8,8],[-5,7],[-9,-9]],[[-4,-2],[-4,-8],[-3,7],[8,5],[10,-3],[-4,-2],[-5,-7]],[[1,-1],[-4,9],[-9,6],[-5,8],[-6,-9],[-7,-7],[-5,-9]]], dtype = "uint64")#candidate|5367|(14, 7, 2)|const|uint64
bop_5368 = relay.subtract(var_5366.astype('uint64'), relay.reshape(const_5367.astype('uint64'), relay.shape_of(var_5366))) # shape=(14, 7, 2)
output = relay.Tuple([bop_5368,])
output2 = relay.Tuple([bop_5368,])
func_5376 = relay.Function([var_5366,], output)
mod['func_5376'] = func_5376
mod = relay.transform.InferType()(mod)
var_5377 = relay.var("var_5377", dtype = "uint64", shape = (14, 7, 2))#candidate|5377|(14, 7, 2)|var|uint64
output = func_5376(var_5377)
func_5378 = relay.Function([var_5377], output)
mutated_mod['func_5378'] = func_5378
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5504 = relay.var("var_5504", dtype = "float32", shape = (9, 13, 11))#candidate|5504|(9, 13, 11)|var|float32
uop_5505 = relay.sigmoid(var_5504.astype('float32')) # shape=(9, 13, 11)
bop_5531 = relay.logical_or(uop_5505.astype('bool'), relay.reshape(var_5504.astype('bool'), relay.shape_of(uop_5505))) # shape=(9, 13, 11)
uop_5545 = relay.atanh(var_5504.astype('float32')) # shape=(9, 13, 11)
output = relay.Tuple([bop_5531,uop_5545,])
output2 = relay.Tuple([bop_5531,uop_5545,])
func_5558 = relay.Function([var_5504,], output)
mod['func_5558'] = func_5558
mod = relay.transform.InferType()(mod)
mutated_mod['func_5558'] = func_5558
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5559 = relay.var("var_5559", dtype = "float32", shape = (9, 13, 11))#candidate|5559|(9, 13, 11)|var|float32
func_5558_call = mutated_mod.get_global_var('func_5558')
call_5560 = func_5558_call(var_5559)
output = call_5560
func_5561 = relay.Function([var_5559], output)
mutated_mod['func_5561'] = func_5561
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5624 = relay.const([[[-3.470706,-0.359420,6.686596,-2.031400,-0.255610,-6.214798,-4.813198,9.226741],[5.599387,7.173936,7.280697,1.280089,8.701604,3.159719,3.166220,-8.743303],[0.001823,-7.996005,1.080483,6.696464,-1.977616,-1.194230,-8.316025,-2.919673],[-1.248558,4.850940,1.403568,-3.313262,7.507447,-1.424845,1.304466,-6.154002],[6.875474,0.187974,-2.902668,-6.059839,-7.104122,5.907005,-4.733565,-9.751727]],[[-6.539765,-4.579398,5.975579,-0.470261,6.730670,1.741294,7.923632,5.459292],[-4.635056,2.663467,6.655396,5.573186,-3.013096,2.047908,-3.199699,9.767184],[4.852678,-8.344330,7.962019,4.499417,3.431237,0.317216,-5.917230,5.477780],[2.892211,1.832324,-4.136093,8.423179,-4.883192,2.534584,-1.007364,0.930493],[-3.746064,-8.249790,-6.121816,-4.317142,-6.069241,-8.103486,-7.615369,3.928511]],[[6.730598,9.774170,2.752179,-4.165456,7.584018,-4.148517,8.445213,8.229282],[8.053797,1.354605,9.376765,8.788126,0.875942,-8.210512,5.277374,6.220476],[0.435760,-4.842019,0.682184,-3.300998,-3.560167,7.237077,-2.596452,-1.693749],[-9.689263,5.007439,8.807884,-6.338841,-2.217917,3.012454,-1.948493,-2.106676],[5.932584,8.037050,-5.269171,9.423911,-7.069257,-6.685819,2.631352,4.363302]],[[-4.367914,1.794380,6.774614,-2.426931,-3.953367,-4.305419,-7.712046,-6.229497],[2.652918,7.646325,8.476085,5.700102,6.922329,-3.211992,-3.660964,-7.189717],[-1.030336,-0.789853,6.968979,-5.533547,-5.235121,2.131594,9.827751,-3.005432],[8.220657,-7.488905,-4.175729,-5.873845,9.878830,-5.565243,-8.067488,-0.526621],[-5.163056,9.452612,3.958175,-5.381627,-9.608829,1.033639,4.412998,-9.462413]],[[9.966075,-5.425412,-6.879668,3.842641,9.951124,5.434096,-2.360321,9.118770],[6.723089,3.608116,-2.602324,-3.141985,2.732999,-5.838384,-8.395136,6.756349],[-1.887131,5.994540,-5.274408,-9.652104,9.485402,-8.328408,-5.912469,-6.521143],[-7.184664,-9.165830,1.936926,1.243736,-4.117893,-5.619651,-7.804082,-6.794132],[9.546556,-1.038623,-8.674659,1.443247,-1.732589,-8.134857,4.461428,-7.889407]],[[-3.626472,-0.542937,-3.222548,-2.092195,-4.470718,3.873184,-0.004443,3.715523],[8.673197,4.929052,-2.583058,5.678689,-4.796552,7.037006,9.400077,0.357171],[7.248576,8.777326,5.292718,-9.298920,-3.842434,5.769480,-8.796649,-5.722725],[-8.013774,8.392765,4.481157,8.022314,-0.706695,8.276706,0.460301,8.449442],[9.873955,-6.525200,-3.232497,-0.297294,-6.685096,9.340619,-3.301431,-0.247837]],[[-5.479449,8.826379,5.641489,1.950406,-1.655129,2.849396,-5.078536,-0.913591],[7.746080,-0.728229,0.906064,6.013951,-7.194711,-8.557820,-7.249270,1.014139],[0.244318,-5.274512,-2.515722,-9.001227,7.671403,-3.812636,4.709559,3.120317],[9.820057,-4.642006,-6.334935,-4.962622,0.105044,3.426984,3.078748,-7.119745],[8.037294,4.492574,-8.144553,-3.366175,3.402726,5.781197,5.886487,-8.928532]],[[1.657741,-8.781328,-6.726930,-8.745485,5.981343,9.588753,1.432029,4.347505],[6.583123,-6.490039,7.280138,8.462713,9.407334,2.116467,7.665704,9.627925],[-8.863783,-5.656591,-3.174573,-6.814955,-0.201800,-1.453121,2.467400,-5.879358],[8.305024,5.133172,-7.461614,2.146662,1.124745,-4.613861,-6.207579,7.424007],[0.420769,9.692019,1.489476,-0.849148,-6.010293,0.612514,-4.399288,-0.257816]],[[-5.639289,-3.322517,-3.408387,-7.283492,-7.194907,-8.899747,-5.247925,-9.769332],[5.986040,9.242850,6.921028,-4.656186,-6.667167,-8.022265,8.485805,-7.053607],[-7.359889,-0.747823,2.740436,-4.104345,-4.638637,-3.986768,7.757878,-8.288335],[1.670773,8.343562,7.409589,-7.433430,8.823449,2.937967,3.938142,-0.633582],[-5.177463,-2.001280,3.579231,-2.122489,0.158986,-3.482020,1.263229,1.460678]],[[-1.639061,5.438181,-6.220488,3.449278,-1.501647,-2.539470,9.048358,0.196719],[-5.783478,6.446713,6.674135,0.438306,-6.846186,9.584834,-6.251341,-6.216323],[9.565309,0.336372,4.938859,1.634539,8.959922,9.486421,-3.401421,-5.198153],[-3.434907,-9.215848,1.728915,-5.146443,0.345395,8.994878,-5.505409,-7.151319],[-8.328781,3.425507,-7.667255,3.563352,0.849545,-1.223216,-0.672921,-4.963068]],[[-7.209429,-4.479689,-1.463028,-6.088421,-8.272886,0.397474,3.023136,-5.475322],[5.680418,-9.793587,-7.122523,1.767882,-5.189549,6.510224,5.788642,-6.209412],[-0.913714,8.340105,9.189435,-7.739482,-9.402355,8.106655,8.160391,6.265284],[2.631362,-5.319904,6.562144,5.816669,-1.503882,-7.215632,-3.185096,6.648295],[4.018400,3.453757,-5.385545,-3.436223,-9.024819,2.183477,3.294604,-4.261170]],[[-1.290001,-8.374102,8.571256,7.521780,-5.299339,3.020989,-0.998170,9.832894],[7.971794,0.696388,-6.769077,-5.854639,9.510660,-2.244946,-4.732366,6.548263],[-3.479913,1.685136,-0.729723,0.824610,-7.717947,5.816615,9.393403,2.283783],[-1.199893,5.453818,-3.871251,1.385247,6.045808,1.474293,-9.913344,-4.670810],[-5.358538,-7.507340,-0.802323,-3.543528,-7.476405,-1.109222,-9.878133,2.617988]],[[-7.465411,-4.984223,-9.315642,-6.112537,6.993745,-9.349147,-7.052414,-4.937371],[-1.002153,7.234439,-2.789191,1.298575,-2.954035,5.956503,5.714906,6.258528],[9.417478,2.217553,7.098730,5.980699,4.076286,-4.080065,-2.911728,-7.281819],[-8.617901,7.012254,4.025858,7.601477,-8.833618,4.580896,6.760492,6.662172],[-1.964192,8.999229,-1.211108,-6.751893,-5.360562,-9.482134,-3.265216,4.736487]]], dtype = "float64")#candidate|5624|(13, 5, 8)|const|float64
uop_5625 = relay.cos(const_5624.astype('float64')) # shape=(13, 5, 8)
uop_5631 = relay.tan(uop_5625.astype('float32')) # shape=(13, 5, 8)
bop_5636 = relay.less(const_5624.astype('bool'), relay.reshape(uop_5625.astype('bool'), relay.shape_of(const_5624))) # shape=(13, 5, 8)
uop_5645 = relay.erf(uop_5631.astype('float32')) # shape=(13, 5, 8)
uop_5653 = relay.log(uop_5645.astype('float32')) # shape=(13, 5, 8)
func_4745_call = mod.get_global_var('func_4745')
func_4748_call = mutated_mod.get_global_var('func_4748')
var_5657 = relay.var("var_5657", dtype = "bool", shape = (200, 2))#candidate|5657|(200, 2)|var|bool
call_5656 = relay.TupleGetItem(func_4745_call(relay.reshape(var_5657.astype('bool'), [10, 10, 4]), relay.reshape(var_5657.astype('bool'), [10, 10, 4]), ), 0)
call_5658 = relay.TupleGetItem(func_4748_call(relay.reshape(var_5657.astype('bool'), [10, 10, 4]), relay.reshape(var_5657.astype('bool'), [10, 10, 4]), ), 0)
func_4541_call = mod.get_global_var('func_4541')
func_4549_call = mutated_mod.get_global_var('func_4549')
const_5670 = relay.const([[3.118679,2.167015,-8.971819],[7.003793,7.824085,8.356629],[-9.648872,-8.861271,-9.386253],[-4.350175,5.754808,7.300871],[-3.173164,3.858925,-6.004546],[8.443863,7.615764,-6.134364],[-6.664666,-0.999224,-9.424052],[-8.967706,5.733770,-2.022339],[9.378330,-2.172199,6.230030],[4.717904,-8.905206,3.883053],[2.061835,-7.267553,9.700244],[-6.498236,-4.471681,1.122160],[9.658091,-3.482473,-1.638411],[-2.081591,0.800789,6.134054],[-7.790906,-3.038766,5.422181],[3.679395,-8.364360,5.983236],[-0.790125,-1.207968,-8.985879],[0.019372,9.274169,2.304433],[-7.217585,7.789417,-5.394175],[1.250342,0.720647,9.597194],[4.899582,8.248573,-5.644684],[8.445870,-9.220176,0.183249],[-8.096939,-5.841716,-6.595491],[5.107292,8.588107,-6.140371],[8.090527,-7.656854,5.195837],[1.584558,-6.627784,4.227310],[8.761638,-7.608696,-5.715314],[6.901473,-4.265534,-8.783837],[7.607646,-5.794581,-2.090719],[-2.944716,-5.116034,-9.517738],[-9.167459,-6.302540,-6.878498],[1.734100,-5.106478,1.777761],[1.117411,1.012070,1.545328],[6.673929,-9.493303,6.004041],[-1.969047,-4.449367,9.362787],[5.070755,3.726953,-2.602867],[8.436635,8.272108,6.145523],[-6.884038,6.860361,3.818716],[2.716381,1.022418,-2.502739],[-7.936766,-6.419574,6.659233],[8.446092,8.337189,-0.913897],[-8.238064,6.666337,3.574532],[-1.750244,-2.524973,-5.800162],[-9.093612,-3.248377,9.760750],[6.164231,5.292087,-3.630863],[7.577924,4.953714,-0.130942],[-9.160226,6.723400,4.751556],[4.113006,-3.330296,0.021729],[7.104344,-8.155087,-3.242804],[-5.847524,5.829396,5.143577],[-3.759765,4.491160,-0.485737],[8.612012,-4.616332,-0.060076],[5.388624,-2.510814,7.488949],[-5.300046,8.166119,-9.379047],[-2.031638,8.027497,0.947976],[-1.020806,9.479159,9.401157],[1.708649,9.200296,-7.377782],[4.762481,9.091591,6.772132],[-6.504110,1.813700,8.865814],[1.014904,-1.495175,4.618726],[2.296912,3.511911,-2.659014],[-1.444105,1.140706,7.987000],[-7.628104,6.814661,-3.642102],[-5.563956,2.211446,5.874219],[-4.874527,-7.713323,1.555372],[-1.104605,7.259232,-7.560040],[-0.388662,-3.078685,-3.889884],[3.258460,-2.774496,-4.558952],[-5.677667,8.413755,-2.061018],[-4.634817,1.947497,5.680756],[-5.547990,-3.903022,9.425328],[7.437622,8.140246,3.344296],[-7.480356,-8.469822,1.123339],[5.780851,-0.394897,6.441397],[9.787544,6.392940,4.135773],[-2.168849,-2.653068,7.690009],[8.049509,6.905870,-7.192268],[-0.353460,-4.783131,-3.319330],[5.576502,1.985901,-5.438500],[-2.699345,-2.416777,3.028997],[-4.504913,6.436442,-7.683486],[-2.040058,-6.432677,-0.344452],[-8.280185,6.691901,-4.233056],[-2.302677,3.451601,1.307325],[4.906032,-5.241714,5.223170],[2.650890,4.023460,-1.767927],[3.867729,6.582546,-8.148774],[4.806965,-1.816400,6.525357],[-6.740840,-5.264855,7.696769],[8.332652,7.714225,-0.961166],[5.801048,-7.262748,2.174441],[-9.000762,7.244194,-4.663460],[-7.821832,-5.956082,-2.708430],[0.412677,6.460936,-5.932167],[3.952300,4.334689,9.024426],[2.429250,0.349875,7.031927],[-2.642802,-2.185414,0.209318],[4.861669,-2.538240,-4.048564],[-5.509265,5.844758,3.855617],[-6.945471,9.716402,3.643764],[-2.918405,-8.926126,-7.564119],[-9.187861,7.110004,-3.710385],[4.971379,-4.801774,3.425633],[-6.285302,-7.250318,-1.015926],[6.056019,-7.833303,-8.042937],[-4.617203,-8.748732,2.960964],[-8.514752,5.728085,-8.201160],[5.689697,-8.280939,5.381788],[-8.558645,2.065408,0.795257],[6.538322,-7.199930,6.259434],[6.974446,3.687102,-3.659833],[5.550567,-4.111711,0.519382],[-5.294417,-2.794891,-2.420315],[9.166142,2.952515,-0.308987],[-0.602047,-7.916576,8.950535],[2.642455,2.481812,7.882124],[4.361459,-1.111483,2.219739],[-5.453739,-7.275393,-0.608795],[-3.747818,-8.143209,-8.625987],[-2.776781,-1.195048,-2.187860],[9.622482,-3.128420,-2.964893],[-7.611073,-3.261098,-6.019257],[-0.258970,-5.087216,7.289023],[-8.272314,-3.451459,-0.963304],[9.307274,9.128159,3.934995],[1.795937,3.477142,1.942019],[4.172884,-4.908523,-0.976437],[-8.833032,9.495950,-3.011720],[4.351619,4.175648,3.780250],[7.975559,-8.017614,-0.964064],[-7.972828,-3.815720,6.216688],[5.824484,-7.672778,9.104465],[-8.215702,6.650218,-6.906524],[5.933633,-5.657110,4.142926],[-5.292711,-5.194570,6.782827],[-9.588612,6.755064,2.766625],[-9.764418,2.602340,-3.322832],[6.965680,-2.241252,6.190702],[-7.312172,0.699103,4.210466],[-5.004775,0.998755,-0.999291],[2.628756,-6.095950,-8.889167],[-6.880272,-1.169354,7.105190],[-5.151930,-4.675992,4.937965],[5.746216,-4.193244,9.038848],[4.291290,3.763979,-6.058715],[1.312678,-6.219597,-9.908930],[1.089158,8.167929,7.639579],[1.504839,3.133434,-9.291507],[2.346755,4.196631,-7.944478],[5.930229,-3.571200,-0.631662],[-1.435816,8.699269,9.346034],[5.576735,-9.935909,5.076430],[5.120468,8.931558,-2.902271],[-5.839009,1.689550,5.898915],[-2.378417,3.103593,8.647920],[8.232202,7.075164,-8.267058],[1.827175,3.649499,-9.184499],[2.183623,9.274282,-1.629410],[-9.972412,5.694698,-1.611007],[-6.329262,9.758627,-5.569441],[8.815065,4.342654,-8.107862],[-7.549923,8.330401,6.132863],[-7.894539,-7.677465,9.200753],[3.597806,6.076156,1.626066],[8.568086,-6.123995,3.656097],[7.690607,-8.611903,1.136205],[-8.780630,-8.977776,7.144046],[3.546413,-8.180786,-4.318408],[-6.118055,-3.374026,-8.604904],[-7.393506,9.251647,5.755692],[0.615941,9.346190,6.818212],[-8.614056,-2.201999,6.648356],[-1.485174,5.939827,-8.908881],[-4.767785,8.253641,-2.666007],[-9.784075,5.841072,5.855198],[-7.948307,6.471544,8.731626],[-3.674544,-8.169081,-6.781427],[-3.538834,-5.899798,-0.888949],[3.686487,-2.770135,1.849947],[8.226568,3.185344,4.854897],[5.196847,9.878996,7.199469],[9.815479,-0.950248,2.815691],[9.928772,8.533543,7.327321],[6.809755,-6.464924,-3.353203],[-8.532797,9.857442,-9.074189],[3.733954,-7.740785,8.621336],[4.787527,4.825625,-2.939530],[-0.727860,-3.385866,-5.134137],[0.612787,5.694629,0.698992],[3.998720,7.885254,7.656707],[2.397632,4.048080,2.129491],[-2.267513,4.537245,-9.184431],[-7.019052,5.858768,-2.176706],[-3.405442,9.595616,2.978629],[3.871159,2.964366,3.473085],[4.169428,4.508973,-3.591388],[6.763118,0.837917,-5.630224],[-0.535868,-6.132581,9.183381],[2.657491,1.653576,0.983431],[6.594144,8.545742,7.107768],[9.612037,-3.055411,4.008663],[6.985229,5.248525,3.300593],[-0.947044,-8.007051,-5.289381],[4.523081,8.345953,-0.864967],[1.630296,-9.501331,-3.378676],[5.982930,-1.432632,-3.952761],[-6.102445,-5.345869,-9.473533],[5.292531,9.634253,-6.107827],[-1.199467,-8.565774,-4.375158],[-9.535394,-3.243008,-3.142306],[9.152653,4.563474,5.035647],[1.401506,0.364719,7.863960],[-4.331753,5.779046,-2.072426],[6.718043,4.579992,6.372584],[-8.824392,-0.463704,-8.779293],[-3.831686,-6.017185,4.160680],[9.166452,-0.454121,-8.768590],[1.554942,-1.330451,-2.672905],[-2.121314,7.923507,8.009406],[9.764611,9.158168,8.325963],[-3.211141,2.354419,8.937619],[2.098485,9.138884,0.933103],[0.245563,-0.822032,7.383199],[4.702343,-3.157895,-8.641271],[0.026069,-1.799594,5.458152]], dtype = "float64")#candidate|5670|(225, 3)|const|float64
var_5671 = relay.var("var_5671", dtype = "float32", shape = (480,))#candidate|5671|(480,)|var|float32
var_5672 = relay.var("var_5672", dtype = "float64", shape = (108, 2))#candidate|5672|(108, 2)|var|float64
const_5673 = relay.const([2.837460,3.763618,-0.619591,-1.009026,7.933082,1.898422,-0.567686,0.316236,0.201334,-0.668742,7.220831,9.178654,-8.550292,-0.169746,0.698741,-3.992065,1.730604,-3.295631,-1.862244,1.206453,1.186503,-3.837642,-9.543036,7.612439,7.470251,-4.136958,-1.148060,-7.415326,-7.260906,0.089463,-9.558078,9.663698,4.673191,-3.930663,-5.639367,9.712331,-6.497999,-7.371047,-1.645439,-5.644398,2.293625,-4.523641,-0.974793,-2.946561,7.164588,-8.271179,3.698880,-1.780059,9.098651,6.252711,-0.012597,0.377839,-9.581945,5.978427,1.110602,5.415483,-1.810301,4.201855,-9.687866,7.959292,9.128663,-2.806450,6.361626,3.506102,0.630270,5.478072,5.145693,-1.024415,-1.851968,-8.038645,8.341395,-0.693365,-8.839778,-8.328385,1.940623,-3.802038,8.640639,3.893587,6.317471,-1.022030,3.695841,-9.238533,-5.970457,8.877519,-1.715027,8.024813,0.769263,1.739277,9.272755,-3.938350,-2.085815,3.454423,9.476847,-7.283111,6.474508,9.063946,-4.473213,5.060143,-4.506185,0.711492,9.064131,-8.787978,-2.529433,-6.664924,8.412874,-8.196235,0.245567,-9.649760,0.026433,-0.729268,7.574424,4.724874,3.311130,-1.345855,8.063471,1.926955,-9.639866,6.592727,4.095627,-1.345475,8.395041,-7.791652,-3.539159,3.968637,-7.748453,-4.482304,-7.837410,0.570971,9.468144,4.327663,-5.799031,1.532636,9.621562,5.417711,-4.266757,5.328752,8.324487,-2.931846,-6.013134,9.939509,2.806866,-2.749573,2.211963,-1.454102,-5.703852,-8.753198,-6.827260,0.662709,-5.579272,-0.770026,3.275717,-4.289975,-7.433559,-5.275591,7.663366,6.734411,-2.908386,-7.716444,5.445047,-6.630575,-4.543230,-6.322052,-9.350674,-0.389366,3.971505,4.367959,8.266309,0.255264,-5.926988,-0.160755,1.638216,6.112333,-4.306630,0.161595,-1.188540,0.218167,-9.936530,8.095912,5.250686,-8.358383,-1.826958,0.404683,5.264383,1.571131,4.070710,0.176191,8.975307,-4.405285,-8.608289,-5.811790,0.398239,-2.721804,5.101772,-3.320557,2.719826,8.881698,-4.778552,2.245290,3.572312,7.108161,2.997641,1.793359,7.101681,-6.730565,-5.432726,-1.672974,-5.709098,1.570102,-2.066621,-5.932899,-5.044816,-4.352526,3.537736,3.068745,-9.212103,1.833099,6.701582,0.568737,-2.071292,4.539921,-8.960982,-0.396945,-8.088128,-2.439806,4.276050,-9.090170,0.981694,-5.661140,2.030985,6.064643,-2.327469,2.577821,-1.619870,7.457646,-3.037836,8.681812,-3.906525,5.768764,3.453490,-3.644487,-0.443244,3.471745,2.399013,-6.472373,1.394793,-6.187833,-8.208444,9.747478,-7.323779,1.706509,3.065922,4.782583,-4.754871,-6.030051,7.238809,-6.392849,-0.813738,9.591914,0.487901,-5.511873,4.215532,7.759556,-9.338536,-0.490126,0.638653,7.743735,-6.576126,-6.666415,2.896437,1.360982,5.762660,-2.158231,2.670152,0.733198,-8.257694,6.519338,6.071541,2.221600,0.698819,-5.806182,-8.487930,-0.776153,8.143683,9.699640,0.440323,8.157833,6.883741,-4.713055,1.514328,7.883959,1.993445,7.575596,1.564542,-2.922937,3.362025,0.606269,-1.143327,-9.950110,4.288534,-5.534474,-8.292100,0.061687,-7.381588,-4.143643,-1.924934,0.530827,-7.494232,-5.732964,4.180673,0.191041,3.277123,-9.739737,-0.605790,0.525166,0.386256,-0.530643,3.987960,7.428426,-6.618189,4.585498,2.820491,-3.541067,-1.391317,-8.859286,-8.688866,-7.673329,-8.010829,9.782096,9.326436,-7.099113,5.314972,7.737377,3.368552,-3.699362,-1.078333,-7.857251,-0.880366,-5.291667,4.745822,-7.540999,-5.014143,0.182730,-1.659440,6.161673,-9.433383,-3.673672,-4.915587,-9.403104,-0.083564,3.208824,4.500456,-2.421036,9.094403,-5.929106,1.188392,-8.866451,5.146343,2.780170,-1.144343,2.958173,-5.516191,-9.198206,6.678135,-4.108919,6.716935,9.970758,8.700892,-6.351463,-6.383790,4.429143,-9.989253,3.812140,-2.113135,3.073608,4.929510,2.991615,-3.929073,-0.101282,-7.216611,3.484986,6.006810,-4.261726,-3.463881,8.033369,0.014350,6.147439,-8.772394,4.366857,2.275612,4.313200,-6.710727,-0.430682,1.218915,-7.145046,-0.679026,2.747000], dtype = "float32")#candidate|5673|(396,)|const|float32
var_5674 = relay.var("var_5674", dtype = "int8", shape = (330, 2))#candidate|5674|(330, 2)|var|int8
call_5669 = relay.TupleGetItem(func_4541_call(relay.reshape(const_5670.astype('float64'), [5, 15, 9]), relay.reshape(var_5671.astype('float32'), [480,]), relay.reshape(var_5672.astype('float64'), [216,]), relay.reshape(const_5673.astype('float32'), [396,]), relay.reshape(var_5674.astype('int8'), [110, 6]), relay.reshape(const_5670.astype('float64'), [5, 15, 9]), ), 6)
call_5675 = relay.TupleGetItem(func_4549_call(relay.reshape(const_5670.astype('float64'), [5, 15, 9]), relay.reshape(var_5671.astype('float32'), [480,]), relay.reshape(var_5672.astype('float64'), [216,]), relay.reshape(const_5673.astype('float32'), [396,]), relay.reshape(var_5674.astype('int8'), [110, 6]), relay.reshape(const_5670.astype('float64'), [5, 15, 9]), ), 6)
output = relay.Tuple([bop_5636,uop_5653,call_5656,var_5657,call_5669,const_5670,var_5671,var_5672,const_5673,var_5674,])
output2 = relay.Tuple([bop_5636,uop_5653,call_5658,var_5657,call_5675,const_5670,var_5671,var_5672,const_5673,var_5674,])
func_5692 = relay.Function([var_5657,var_5671,var_5672,var_5674,], output)
mod['func_5692'] = func_5692
mod = relay.transform.InferType()(mod)
var_5693 = relay.var("var_5693", dtype = "bool", shape = (200, 2))#candidate|5693|(200, 2)|var|bool
var_5694 = relay.var("var_5694", dtype = "float32", shape = (480,))#candidate|5694|(480,)|var|float32
var_5695 = relay.var("var_5695", dtype = "float64", shape = (108, 2))#candidate|5695|(108, 2)|var|float64
var_5696 = relay.var("var_5696", dtype = "int8", shape = (330, 2))#candidate|5696|(330, 2)|var|int8
output = func_5692(var_5693,var_5694,var_5695,var_5696,)
func_5697 = relay.Function([var_5693,var_5694,var_5695,var_5696,], output)
mutated_mod['func_5697'] = func_5697
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5836 = relay.const([[[True,True,True,False,True,True,False],[False,False,True,False,True,True,True],[True,False,False,False,True,True,False],[False,False,True,False,True,False,True],[False,False,True,True,True,False,True],[True,True,True,True,False,False,True],[True,True,False,False,True,False,True],[True,True,True,True,True,False,True],[True,True,False,True,True,True,False]],[[True,True,False,False,False,True,True],[False,False,False,True,True,True,False],[True,True,True,False,True,False,True],[False,True,False,True,False,False,False],[True,True,True,False,False,True,False],[False,False,True,True,False,False,False],[False,True,False,True,False,True,True],[True,False,False,False,True,False,True],[True,False,False,False,True,True,True]],[[True,False,True,True,False,True,False],[True,True,True,True,False,True,False],[False,True,True,False,True,True,False],[False,True,True,True,True,True,True],[False,False,False,True,False,False,False],[True,True,True,False,False,False,True],[False,True,True,False,False,False,False],[True,True,False,True,False,False,False],[True,True,False,True,False,False,False]],[[False,False,False,True,True,True,True],[True,True,False,True,True,True,False],[True,True,False,True,False,True,False],[False,True,True,True,False,True,False],[False,True,False,True,False,True,False],[True,False,False,True,False,False,False],[True,False,False,False,True,True,True],[False,False,False,False,True,True,False],[True,False,False,False,True,True,True]],[[True,False,True,True,False,True,False],[False,False,False,True,False,True,False],[True,False,True,True,False,True,False],[True,False,False,False,False,False,False],[False,True,True,True,True,True,False],[False,False,False,False,False,True,False],[False,False,False,False,False,True,True],[False,True,True,True,True,True,True],[False,False,False,False,True,True,True]],[[True,False,False,True,True,False,True],[True,True,True,False,True,True,False],[True,True,True,True,False,True,False],[True,False,False,True,False,False,True],[False,True,True,True,False,True,False],[True,True,True,False,True,True,False],[False,False,False,False,True,False,True],[True,True,False,True,True,False,False],[False,False,False,False,True,True,True]],[[True,False,True,False,True,False,True],[False,True,True,True,False,False,True],[True,False,False,True,True,False,False],[False,False,False,False,False,False,False],[False,True,True,True,True,False,False],[True,True,True,True,False,False,False],[False,False,True,False,False,False,True],[True,False,True,False,True,True,False],[True,False,True,True,True,False,True]],[[True,True,True,False,False,False,True],[False,False,False,True,True,True,True],[True,True,False,True,False,True,True],[True,False,True,False,False,False,False],[False,True,True,True,False,False,True],[False,False,False,False,False,False,True],[True,False,False,True,True,False,False],[True,True,True,False,False,False,True],[False,True,True,False,False,False,True]],[[False,False,False,False,False,True,False],[False,True,False,False,True,False,True],[True,True,True,False,False,False,True],[False,False,False,True,True,True,True],[True,True,True,True,True,True,True],[True,False,False,True,False,False,True],[True,False,False,False,True,True,True],[False,True,False,False,False,False,True],[True,True,True,True,False,False,False]],[[True,True,False,False,False,False,True],[False,False,True,True,False,True,False],[False,True,True,False,False,True,False],[False,True,False,False,False,True,True],[False,True,True,True,False,True,True],[False,True,False,False,True,True,False],[False,True,False,False,False,True,False],[False,False,False,True,True,False,True],[True,True,False,True,False,True,False]],[[True,True,True,True,False,True,False],[False,True,False,False,False,False,False],[False,True,False,False,True,False,True],[False,True,False,True,False,False,False],[True,False,False,False,True,True,True],[True,False,True,True,True,True,True],[True,True,True,True,False,True,False],[True,False,True,True,True,False,False],[True,False,False,False,False,False,False]],[[True,True,False,True,False,True,False],[True,True,False,True,False,True,False],[True,True,False,False,True,False,False],[False,False,False,True,False,True,False],[True,True,False,False,True,False,True],[True,False,False,False,True,False,True],[True,True,False,False,False,False,True],[True,False,True,True,False,True,True],[True,False,True,False,False,True,False]],[[True,False,False,False,False,False,False],[True,False,False,False,True,False,True],[False,False,False,True,True,True,True],[True,False,False,False,True,True,False],[True,False,True,False,False,True,False],[False,True,False,True,True,False,False],[False,False,True,False,True,True,False],[False,False,True,True,False,True,False],[True,False,False,False,False,True,False]],[[True,False,False,True,True,True,True],[False,True,True,True,False,False,True],[True,True,True,True,True,False,False],[True,True,False,True,True,True,True],[False,False,False,True,True,False,False],[False,True,True,True,True,False,False],[True,False,True,False,True,True,True],[False,True,True,False,True,False,True],[False,True,False,False,True,False,True]],[[False,True,False,True,False,True,False],[True,False,False,False,False,True,False],[False,False,True,False,False,True,False],[True,True,True,True,False,False,False],[True,False,True,False,True,True,True],[False,True,True,True,True,True,False],[True,False,False,True,True,False,False],[True,True,False,False,False,False,True],[False,False,True,True,False,True,True]],[[False,False,False,False,True,True,True],[False,False,True,False,True,False,True],[False,False,True,True,True,False,True],[True,False,False,True,False,False,False],[False,True,False,False,True,False,False],[True,False,False,True,False,True,True],[True,True,True,True,True,False,False],[False,False,True,True,False,False,False],[False,False,True,True,True,True,True]]], dtype = "bool")#candidate|5836|(16, 9, 7)|const|bool
const_5837 = relay.const([[[True,False,True,True,False,True,False],[True,False,True,True,True,True,False],[False,True,True,False,True,False,True],[True,True,True,True,False,False,False],[True,False,False,False,False,False,False],[False,True,False,True,True,True,False],[True,False,True,True,False,False,True],[True,False,False,False,True,False,True],[True,False,True,False,False,True,True]],[[False,True,True,False,False,True,False],[False,False,False,True,True,True,False],[True,True,True,False,False,False,False],[True,False,True,True,False,False,True],[True,True,False,True,True,True,False],[True,False,False,True,True,False,False],[False,False,False,True,True,False,True],[True,False,True,True,False,False,False],[False,False,True,True,True,False,True]],[[False,True,True,False,False,True,True],[True,True,False,True,True,False,False],[True,False,True,False,False,False,True],[False,False,True,True,False,True,False],[True,True,True,False,False,False,False],[False,True,True,True,True,True,False],[False,False,False,True,False,True,False],[True,True,True,True,True,True,False],[True,False,True,True,True,False,True]],[[True,True,True,False,False,False,True],[True,False,False,False,False,False,True],[False,False,True,True,True,True,True],[True,False,True,False,False,False,True],[True,True,False,False,False,True,False],[False,False,False,False,False,False,False],[False,False,True,False,False,True,False],[False,False,True,True,False,False,True],[False,True,True,True,False,True,True]],[[False,True,False,False,True,False,False],[True,False,False,True,False,False,True],[True,True,True,True,True,False,False],[True,True,True,True,False,False,False],[False,False,True,False,True,True,False],[False,True,True,True,True,True,False],[False,True,True,True,False,True,False],[True,True,False,False,False,True,True],[False,False,True,False,False,True,False]],[[True,False,True,True,False,False,False],[True,True,False,True,True,True,False],[True,False,False,True,False,False,True],[False,False,True,True,False,False,True],[False,True,False,True,False,True,False],[False,True,False,True,False,False,True],[True,True,True,True,False,False,False],[False,False,True,False,False,False,True],[False,True,True,False,False,True,True]],[[False,False,True,False,True,True,False],[True,True,True,True,True,False,False],[True,False,False,True,True,True,True],[True,False,True,False,True,False,False],[True,True,False,False,True,True,False],[False,True,False,True,False,True,False],[True,False,False,False,False,False,True],[True,False,True,True,False,False,True],[True,False,True,False,True,True,False]],[[False,True,True,False,False,True,True],[False,True,False,False,True,False,False],[True,True,False,True,True,True,False],[True,True,True,False,True,False,False],[False,False,True,False,True,False,False],[True,True,True,True,False,True,True],[True,False,False,True,True,False,False],[False,True,False,True,False,True,True],[True,True,True,True,True,False,True]],[[False,False,True,True,False,False,True],[False,False,False,False,False,False,True],[True,False,True,True,True,True,False],[True,False,True,False,True,False,True],[True,True,False,True,True,True,True],[True,False,False,False,False,False,False],[False,True,True,True,True,False,False],[True,True,False,False,True,True,True],[False,True,False,True,False,True,True]],[[False,False,False,True,False,False,True],[False,False,True,False,True,False,True],[True,False,True,False,True,True,False],[False,False,True,True,False,False,False],[False,True,True,False,True,True,False],[False,True,True,False,False,True,True],[True,True,False,False,False,False,False],[True,True,True,False,False,False,True],[False,False,True,False,True,True,True]],[[True,False,True,True,False,False,True],[False,True,False,True,True,True,False],[True,True,False,False,False,True,False],[False,False,True,False,False,True,True],[False,False,False,True,False,True,False],[False,True,True,False,True,False,False],[False,True,False,True,False,False,True],[False,False,False,True,False,True,True],[False,False,False,False,False,False,True]],[[True,True,True,True,True,True,False],[False,True,False,False,False,False,True],[False,False,False,False,False,False,True],[False,False,True,True,False,True,True],[True,False,True,False,True,False,True],[False,True,True,False,False,True,False],[False,True,True,False,False,False,True],[False,False,False,True,False,True,False],[True,True,True,False,True,False,False]],[[False,True,True,True,False,True,True],[True,False,False,True,False,True,False],[False,True,True,False,False,True,True],[False,True,True,True,False,True,True],[True,True,True,True,False,True,False],[True,False,False,False,False,False,True],[False,True,True,False,True,False,True],[True,False,False,True,True,False,True],[True,True,False,False,False,False,True]],[[True,True,False,False,True,False,False],[True,False,True,False,True,True,False],[False,True,True,True,True,False,True],[False,False,False,True,True,False,True],[True,False,True,False,True,True,False],[False,True,False,False,True,False,False],[False,True,False,True,False,False,False],[False,False,True,False,False,True,False],[True,False,True,False,False,False,True]],[[False,True,True,False,False,False,False],[True,False,False,False,True,True,True],[True,True,True,True,True,True,False],[True,False,False,False,False,True,False],[True,False,True,True,True,True,True],[False,True,False,True,True,False,True],[False,True,False,True,False,False,True],[True,True,True,False,True,True,False],[False,False,True,True,False,False,False]],[[False,True,True,False,False,True,True],[True,False,True,True,True,True,True],[False,True,False,True,False,True,False],[False,False,False,False,False,True,True],[True,False,True,True,True,False,True],[False,False,False,True,False,True,True],[True,True,False,True,False,False,True],[True,True,True,True,True,True,True],[True,True,False,False,True,True,True]]], dtype = "bool")#candidate|5837|(16, 9, 7)|const|bool
bop_5838 = relay.logical_or(const_5836.astype('bool'), relay.reshape(const_5837.astype('bool'), relay.shape_of(const_5836))) # shape=(16, 9, 7)
bop_5841 = relay.right_shift(const_5836.astype('int8'), relay.reshape(const_5837.astype('int8'), relay.shape_of(const_5836))) # shape=(16, 9, 7)
output = relay.Tuple([bop_5838,bop_5841,])
output2 = relay.Tuple([bop_5838,bop_5841,])
func_5854 = relay.Function([], output)
mod['func_5854'] = func_5854
mod = relay.transform.InferType()(mod)
output = func_5854()
func_5855 = relay.Function([], output)
mutated_mod['func_5855'] = func_5855
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5883 = relay.var("var_5883", dtype = "float64", shape = (15, 16, 6))#candidate|5883|(15, 16, 6)|var|float64
var_5884 = relay.var("var_5884", dtype = "float64", shape = (15, 16, 6))#candidate|5884|(15, 16, 6)|var|float64
bop_5885 = relay.floor_divide(var_5883.astype('float64'), relay.reshape(var_5884.astype('float64'), relay.shape_of(var_5883))) # shape=(15, 16, 6)
uop_5892 = relay.log2(var_5884.astype('float32')) # shape=(15, 16, 6)
var_5900 = relay.var("var_5900", dtype = "float32", shape = (15, 16, 6))#candidate|5900|(15, 16, 6)|var|float32
bop_5901 = relay.power(uop_5892.astype('float32'), relay.reshape(var_5900.astype('float32'), relay.shape_of(uop_5892))) # shape=(15, 16, 6)
bop_5907 = relay.logical_and(var_5884.astype('bool'), relay.reshape(var_5883.astype('bool'), relay.shape_of(var_5884))) # shape=(15, 16, 6)
func_4745_call = mod.get_global_var('func_4745')
func_4748_call = mutated_mod.get_global_var('func_4748')
const_5912 = relay.const([[True,True,False,True,False,True,True,False,True,False],[False,True,False,True,False,False,False,False,False,False],[False,False,True,False,False,False,True,True,False,False],[True,False,True,True,True,False,True,False,False,False],[False,False,False,False,False,False,False,False,False,True],[True,True,True,False,True,True,False,False,True,True],[False,False,True,False,True,False,False,False,False,False],[True,False,False,True,True,False,True,True,True,True],[False,False,False,True,False,True,True,True,True,False],[False,False,False,True,False,True,True,False,False,True],[False,True,True,False,False,False,True,True,False,False],[False,False,False,True,False,False,False,True,True,False],[True,True,False,True,False,False,False,True,False,False],[False,False,True,False,False,True,False,True,False,False],[True,True,True,True,False,True,False,False,False,True],[False,True,True,False,False,True,False,False,True,False],[True,True,False,False,True,True,False,False,False,False],[False,False,True,True,True,True,False,True,False,False],[True,False,True,False,True,True,True,True,False,False],[False,True,False,False,True,True,True,True,True,False],[False,False,False,True,True,True,True,False,True,True],[False,False,True,False,False,False,True,True,False,True],[False,False,False,False,False,False,True,False,True,True],[False,True,True,False,True,False,True,False,False,False],[True,True,False,False,True,False,True,False,False,True],[False,False,True,False,False,True,False,True,True,False],[False,True,True,True,True,False,False,True,False,False],[True,True,True,False,False,False,False,True,True,False],[False,True,False,True,True,False,False,False,False,False],[False,False,True,True,False,True,False,False,False,False],[False,True,False,False,True,False,False,False,True,True],[False,True,False,True,False,False,True,False,False,True],[False,False,False,False,True,False,True,True,False,True],[False,False,False,False,False,False,False,True,False,True],[False,False,False,True,True,False,True,True,False,True],[False,True,True,False,True,False,False,False,False,False],[True,False,True,True,False,True,True,False,False,True],[True,True,False,True,False,True,True,True,False,True],[False,True,False,True,True,True,True,False,True,True],[False,False,True,True,False,True,True,True,True,True]], dtype = "bool")#candidate|5912|(40, 10)|const|bool
call_5911 = relay.TupleGetItem(func_4745_call(relay.reshape(const_5912.astype('bool'), [10, 10, 4]), relay.reshape(const_5912.astype('bool'), [10, 10, 4]), ), 0)
call_5913 = relay.TupleGetItem(func_4748_call(relay.reshape(const_5912.astype('bool'), [10, 10, 4]), relay.reshape(const_5912.astype('bool'), [10, 10, 4]), ), 0)
output = relay.Tuple([bop_5885,bop_5901,bop_5907,call_5911,const_5912,])
output2 = relay.Tuple([bop_5885,bop_5901,bop_5907,call_5913,const_5912,])
func_5916 = relay.Function([var_5883,var_5884,var_5900,], output)
mod['func_5916'] = func_5916
mod = relay.transform.InferType()(mod)
mutated_mod['func_5916'] = func_5916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5916_call = mutated_mod.get_global_var('func_5916')
var_5918 = relay.var("var_5918", dtype = "float64", shape = (15, 16, 6))#candidate|5918|(15, 16, 6)|var|float64
var_5919 = relay.var("var_5919", dtype = "float64", shape = (15, 16, 6))#candidate|5919|(15, 16, 6)|var|float64
var_5920 = relay.var("var_5920", dtype = "float32", shape = (15, 16, 6))#candidate|5920|(15, 16, 6)|var|float32
call_5917 = func_5916_call(var_5918,var_5919,var_5920,)
output = call_5917
func_5921 = relay.Function([var_5918,var_5919,var_5920,], output)
mutated_mod['func_5921'] = func_5921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5854_call = mod.get_global_var('func_5854')
func_5855_call = mutated_mod.get_global_var('func_5855')
call_5926 = relay.TupleGetItem(func_5854_call(), 0)
call_5927 = relay.TupleGetItem(func_5855_call(), 0)
func_3339_call = mod.get_global_var('func_3339')
func_3343_call = mutated_mod.get_global_var('func_3343')
var_5938 = relay.var("var_5938", dtype = "float32", shape = (77,))#candidate|5938|(77,)|var|float32
call_5937 = func_3339_call(relay.reshape(var_5938.astype('float32'), [7, 1, 11]), relay.reshape(var_5938.astype('float32'), [7, 1, 11]), )
call_5939 = func_3339_call(relay.reshape(var_5938.astype('float32'), [7, 1, 11]), relay.reshape(var_5938.astype('float32'), [7, 1, 11]), )
func_1326_call = mod.get_global_var('func_1326')
func_1330_call = mutated_mod.get_global_var('func_1330')
var_5941 = relay.var("var_5941", dtype = "int8", shape = (660,))#candidate|5941|(660,)|var|int8
call_5940 = relay.TupleGetItem(func_1326_call(relay.reshape(var_5941.astype('int8'), [6, 11, 10]), relay.reshape(var_5941.astype('int8'), [6, 11, 10]), ), 0)
call_5942 = relay.TupleGetItem(func_1330_call(relay.reshape(var_5941.astype('int8'), [6, 11, 10]), relay.reshape(var_5941.astype('int8'), [6, 11, 10]), ), 0)
output = relay.Tuple([call_5926,call_5937,var_5938,call_5940,var_5941,])
output2 = relay.Tuple([call_5927,call_5939,var_5938,call_5942,var_5941,])
func_5943 = relay.Function([var_5938,var_5941,], output)
mod['func_5943'] = func_5943
mod = relay.transform.InferType()(mod)
mutated_mod['func_5943'] = func_5943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5943_call = mutated_mod.get_global_var('func_5943')
var_5945 = relay.var("var_5945", dtype = "float32", shape = (77,))#candidate|5945|(77,)|var|float32
var_5946 = relay.var("var_5946", dtype = "int8", shape = (660,))#candidate|5946|(660,)|var|int8
call_5944 = func_5943_call(var_5945,var_5946,)
output = call_5944
func_5947 = relay.Function([var_5945,var_5946,], output)
mutated_mod['func_5947'] = func_5947
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5962 = relay.var("var_5962", dtype = "float32", shape = (7, 1, 4))#candidate|5962|(7, 1, 4)|var|float32
uop_5963 = relay.log(var_5962.astype('float32')) # shape=(7, 1, 4)
uop_5967 = relay.sinh(uop_5963.astype('float64')) # shape=(7, 1, 4)
bop_5974 = relay.less(uop_5963.astype('bool'), relay.reshape(uop_5967.astype('bool'), relay.shape_of(uop_5963))) # shape=(7, 1, 4)
func_746_call = mod.get_global_var('func_746')
func_749_call = mutated_mod.get_global_var('func_749')
var_5982 = relay.var("var_5982", dtype = "float32", shape = (1650, 1))#candidate|5982|(1650, 1)|var|float32
call_5981 = relay.TupleGetItem(func_746_call(relay.reshape(var_5982.astype('float32'), [10, 15, 11]), relay.reshape(var_5982.astype('float32'), [10, 15, 11]), ), 0)
call_5983 = relay.TupleGetItem(func_749_call(relay.reshape(var_5982.astype('float32'), [10, 15, 11]), relay.reshape(var_5982.astype('float32'), [10, 15, 11]), ), 0)
output = relay.Tuple([bop_5974,call_5981,var_5982,])
output2 = relay.Tuple([bop_5974,call_5983,var_5982,])
func_5984 = relay.Function([var_5962,var_5982,], output)
mod['func_5984'] = func_5984
mod = relay.transform.InferType()(mod)
mutated_mod['func_5984'] = func_5984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5984_call = mutated_mod.get_global_var('func_5984')
var_5986 = relay.var("var_5986", dtype = "float32", shape = (7, 1, 4))#candidate|5986|(7, 1, 4)|var|float32
var_5987 = relay.var("var_5987", dtype = "float32", shape = (1650, 1))#candidate|5987|(1650, 1)|var|float32
call_5985 = func_5984_call(var_5986,var_5987,)
output = call_5985
func_5988 = relay.Function([var_5986,var_5987,], output)
mutated_mod['func_5988'] = func_5988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5854_call = mod.get_global_var('func_5854')
func_5855_call = mutated_mod.get_global_var('func_5855')
call_6033 = relay.TupleGetItem(func_5854_call(), 1)
call_6034 = relay.TupleGetItem(func_5855_call(), 1)
output = relay.Tuple([call_6033,])
output2 = relay.Tuple([call_6034,])
func_6039 = relay.Function([], output)
mod['func_6039'] = func_6039
mod = relay.transform.InferType()(mod)
mutated_mod['func_6039'] = func_6039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6039_call = mutated_mod.get_global_var('func_6039')
call_6040 = func_6039_call()
output = call_6040
func_6041 = relay.Function([], output)
mutated_mod['func_6041'] = func_6041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5854_call = mod.get_global_var('func_5854')
func_5855_call = mutated_mod.get_global_var('func_5855')
call_6089 = relay.TupleGetItem(func_5854_call(), 1)
call_6090 = relay.TupleGetItem(func_5855_call(), 1)
func_1671_call = mod.get_global_var('func_1671')
func_1676_call = mutated_mod.get_global_var('func_1676')
const_6099 = relay.const(4, dtype = "int16")#candidate|6099|()|const|int16
var_6100 = relay.var("var_6100", dtype = "int16", shape = (192,))#candidate|6100|(192,)|var|int16
var_6101 = relay.var("var_6101", dtype = "int8", shape = (660,))#candidate|6101|(660,)|var|int8
call_6098 = relay.TupleGetItem(func_1671_call(relay.reshape(const_6099.astype('int16'), []), relay.reshape(var_6100.astype('int16'), [16, 12, 1]), relay.reshape(var_6101.astype('int8'), [660,]), ), 0)
call_6102 = relay.TupleGetItem(func_1676_call(relay.reshape(const_6099.astype('int16'), []), relay.reshape(var_6100.astype('int16'), [16, 12, 1]), relay.reshape(var_6101.astype('int8'), [660,]), ), 0)
output = relay.Tuple([call_6089,call_6098,const_6099,var_6100,var_6101,])
output2 = relay.Tuple([call_6090,call_6102,const_6099,var_6100,var_6101,])
func_6109 = relay.Function([var_6100,var_6101,], output)
mod['func_6109'] = func_6109
mod = relay.transform.InferType()(mod)
var_6110 = relay.var("var_6110", dtype = "int16", shape = (192,))#candidate|6110|(192,)|var|int16
var_6111 = relay.var("var_6111", dtype = "int8", shape = (660,))#candidate|6111|(660,)|var|int8
output = func_6109(var_6110,var_6111,)
func_6112 = relay.Function([var_6110,var_6111,], output)
mutated_mod['func_6112'] = func_6112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5854_call = mod.get_global_var('func_5854')
func_5855_call = mutated_mod.get_global_var('func_5855')
call_6135 = relay.TupleGetItem(func_5854_call(), 1)
call_6136 = relay.TupleGetItem(func_5855_call(), 1)
output = call_6135
output2 = call_6136
func_6140 = relay.Function([], output)
mod['func_6140'] = func_6140
mod = relay.transform.InferType()(mod)
output = func_6140()
func_6141 = relay.Function([], output)
mutated_mod['func_6141'] = func_6141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5854_call = mod.get_global_var('func_5854')
func_5855_call = mutated_mod.get_global_var('func_5855')
call_6191 = relay.TupleGetItem(func_5854_call(), 1)
call_6192 = relay.TupleGetItem(func_5855_call(), 1)
uop_6198 = relay.atan(call_6191.astype('float64')) # shape=(16, 9, 7)
uop_6200 = relay.atan(call_6192.astype('float64')) # shape=(16, 9, 7)
var_6216 = relay.var("var_6216", dtype = "float64", shape = (16, 9, 7))#candidate|6216|(16, 9, 7)|var|float64
bop_6217 = relay.floor_mod(uop_6198.astype('float64'), relay.reshape(var_6216.astype('float64'), relay.shape_of(uop_6198))) # shape=(16, 9, 7)
bop_6220 = relay.floor_mod(uop_6200.astype('float64'), relay.reshape(var_6216.astype('float64'), relay.shape_of(uop_6200))) # shape=(16, 9, 7)
output = bop_6217
output2 = bop_6220
func_6223 = relay.Function([var_6216,], output)
mod['func_6223'] = func_6223
mod = relay.transform.InferType()(mod)
mutated_mod['func_6223'] = func_6223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6224 = relay.var("var_6224", dtype = "float64", shape = (16, 9, 7))#candidate|6224|(16, 9, 7)|var|float64
func_6223_call = mutated_mod.get_global_var('func_6223')
call_6225 = func_6223_call(var_6224)
output = call_6225
func_6226 = relay.Function([var_6224], output)
mutated_mod['func_6226'] = func_6226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6140_call = mod.get_global_var('func_6140')
func_6141_call = mutated_mod.get_global_var('func_6141')
call_6234 = func_6140_call()
call_6235 = func_6140_call()
output = call_6234
output2 = call_6235
func_6244 = relay.Function([], output)
mod['func_6244'] = func_6244
mod = relay.transform.InferType()(mod)
mutated_mod['func_6244'] = func_6244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6244_call = mutated_mod.get_global_var('func_6244')
call_6245 = func_6244_call()
output = call_6245
func_6246 = relay.Function([], output)
mutated_mod['func_6246'] = func_6246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6244_call = mod.get_global_var('func_6244')
func_6246_call = mutated_mod.get_global_var('func_6246')
call_6255 = func_6244_call()
call_6256 = func_6244_call()
output = relay.Tuple([call_6255,])
output2 = relay.Tuple([call_6256,])
func_6263 = relay.Function([], output)
mod['func_6263'] = func_6263
mod = relay.transform.InferType()(mod)
output = func_6263()
func_6264 = relay.Function([], output)
mutated_mod['func_6264'] = func_6264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6244_call = mod.get_global_var('func_6244')
func_6246_call = mutated_mod.get_global_var('func_6246')
call_6281 = func_6244_call()
call_6282 = func_6244_call()
func_5943_call = mod.get_global_var('func_5943')
func_5947_call = mutated_mod.get_global_var('func_5947')
var_6320 = relay.var("var_6320", dtype = "float32", shape = (77,))#candidate|6320|(77,)|var|float32
const_6321 = relay.const([[-3],[5],[-8],[6],[-7],[6],[7],[7],[2],[-5],[-4],[3],[-6],[9],[-5],[2],[-9],[-5],[-5],[10],[3],[5],[-1],[3],[2],[4],[-8],[-9],[3],[8],[2],[-9],[8],[-10],[4],[7],[8],[-7],[-4],[2],[10],[-1],[-4],[7],[-8],[-7],[-4],[3],[-10],[-8],[-3],[-2],[-5],[-9],[1],[7],[9],[2],[-8],[-3],[3],[-9],[8],[-10],[3],[3],[-3],[8],[-3],[-8],[-2],[8],[3],[-7],[10],[-7],[9],[1],[-8],[-6],[-10],[-8],[3],[2],[-4],[-4],[7],[8],[-3],[-1],[4],[-7],[4],[2],[2],[-2],[6],[-5],[7],[-7],[-10],[-9],[-5],[5],[1],[-3],[3],[-10],[2],[8],[10],[6],[1],[9],[1],[-9],[8],[-7],[5],[1],[9],[-3],[-7],[-1],[6],[3],[-9],[-6],[-4],[-8],[-10],[7],[-7],[1],[8],[1],[9],[10],[-8],[-5],[10],[2],[10],[-2],[10],[9],[-1],[8],[-1],[-1],[2],[-6],[8],[6],[-9],[-10],[-10],[-2],[8],[-3],[6],[-10],[8],[-6],[-8],[10],[10],[10],[-6],[-4],[5],[5],[6],[-6],[-1],[-5],[-2],[-5],[-5],[-3],[-7],[3],[-1],[-5],[-7],[-1],[3],[-10],[5],[-5],[6],[5],[-7],[10],[9],[-4],[-6],[-4],[-8],[-3],[8],[-9],[-2],[-9],[-4],[5],[-4],[-10],[9],[4],[-5],[4],[3],[-8],[9],[-8],[-7],[-9],[6],[8],[-4],[-10],[3],[1],[9],[-10],[2],[-8],[6],[-10],[7],[-3],[4],[5],[-1],[10],[8],[-4],[-9],[1],[-10],[4],[6],[1],[-6],[-8],[-8],[1],[-2],[2],[1],[-1],[-1],[8],[-1],[7],[1],[-7],[1],[-1],[-8],[2],[-10],[10],[1],[-7],[5],[9],[-4],[5],[7],[7],[1],[-9],[4],[9],[-8],[10],[8],[-2],[-3],[9],[-9],[-5],[7],[-6],[-9],[-6],[-9],[-5],[4],[-4],[7],[-10],[3],[3],[-1],[5],[1],[10],[-9],[-4],[-1],[9],[5],[4],[-9],[10],[2],[2],[2],[-3],[-6],[-2],[8],[6],[-2],[6],[-3],[5],[10],[-5],[-8],[5],[-7],[-5],[-10],[3],[-7],[-4],[-10],[-10],[3],[6],[-2],[3],[-8],[9],[7],[6],[-10],[-4],[-9],[8],[-3],[9],[-5],[4],[7],[-5],[10],[-1],[8],[4],[3],[-9],[1],[5],[10],[4],[-6],[-7],[-5],[8],[-10],[1],[2],[-8],[-1],[6],[-4],[-6],[10],[-7],[-5],[-4],[-7],[1],[-3],[-4],[-1],[-4],[-6],[-3],[-7],[-8],[6],[10],[-7],[6],[1],[2],[-10],[-7],[-1],[7],[5],[-5],[4],[-5],[-9],[-5],[-1],[8],[-3],[10],[4],[-9],[-3],[1],[-9],[-6],[-10],[7],[-10],[-6],[-7],[3],[8],[-6],[8],[5],[7],[10],[4],[6],[10],[10],[-4],[3],[-9],[-3],[1],[-6],[9],[-2],[-7],[-9],[-2],[-6],[10],[10],[5],[-9],[4],[3],[4],[2],[3],[-6],[10],[-7],[4],[-5],[7],[-3],[-5],[-9],[10],[9],[2],[9],[-7],[-1],[1],[-3],[5],[9],[-8],[-8],[-6],[-5],[1],[-1],[-2],[8],[2],[1],[-10],[-2],[-2],[-1],[-4],[8],[5],[-8],[6],[-1],[-7],[-9],[5],[-4],[5],[-8],[10],[6],[-4],[-8],[-7],[10],[-4],[-10],[4],[-9],[-8],[-10],[6],[-9],[1],[-5],[-9],[2],[-8],[-2],[9],[-5],[-2],[5],[-10],[7],[-3],[-10],[4],[1],[9],[8],[-9],[-9],[-3],[1],[5],[-8],[5],[-5],[8],[-3],[-2],[1],[4],[-5],[7],[9],[6],[-2],[3],[2],[1],[6],[-5],[-1],[6],[5],[8],[-6],[-7],[-7],[4],[2],[-6],[-8],[8],[-8],[2],[-5],[7],[-10],[-3],[-3],[-3],[5],[-9],[6],[-8],[3],[3],[-4],[3],[-9],[6],[-4],[3],[7],[10],[-7],[6],[3],[-6],[-9],[7],[10],[-3],[-10],[8],[3],[-5],[-8],[2],[-4],[-3],[5],[5],[-9],[9],[7],[9],[-6],[4],[9],[5],[-8],[1],[-1],[-1],[-7],[-8],[-8],[-2],[-5],[-2],[-7],[-2],[3],[6],[7],[-6],[-4],[-1],[9],[-1],[-6],[1],[-3],[-10],[2],[-3],[-3],[1],[-10],[-8],[10],[2],[-2],[-8],[4],[-9],[8],[6],[-1],[-10],[-8],[-3],[7],[-7],[-10],[-3],[-10],[4],[-7],[4],[4]], dtype = "int8")#candidate|6321|(660, 1)|const|int8
call_6319 = relay.TupleGetItem(func_5943_call(relay.reshape(var_6320.astype('float32'), [77,]), relay.reshape(const_6321.astype('int8'), [660,]), ), 3)
call_6322 = relay.TupleGetItem(func_5947_call(relay.reshape(var_6320.astype('float32'), [77,]), relay.reshape(const_6321.astype('int8'), [660,]), ), 3)
func_1611_call = mod.get_global_var('func_1611')
func_1616_call = mutated_mod.get_global_var('func_1616')
var_6331 = relay.var("var_6331", dtype = "float32", shape = (280,))#candidate|6331|(280,)|var|float32
const_6332 = relay.const([-7.608085,9.044920,-3.125567,-6.019134,7.530117,5.234335,-8.702801,-4.767093,-6.704412,7.375794,5.026923,2.168234,5.912528,4.727707,-4.349730,5.273715,-4.706548,3.860709,9.870480,9.826128,1.394425,1.214862,-3.462559,-1.425432,5.593116,4.031622,5.165980,-9.342872,-8.341408,-9.690329,-3.729353,-1.236205,-5.569970,6.496661,1.862734,-7.479615,5.073757,-6.967161,-6.394889,2.876187,-6.590377,-6.607827,2.544396,-0.938589,-6.938839,4.768802,-6.372516,2.904974,4.518265,7.435791,3.352946,-4.306909,7.099977,-2.900715,4.039463,-0.759655,-0.547263,-0.337293,4.409639,8.571282,7.354656,-5.258798,-3.703646,-6.353789,-5.672503,-9.744550,8.491535,8.986308,0.024818,-9.127137,3.097876,-1.047883,1.085030,1.528459,5.756674,-9.739835,9.645471,8.254668,-2.283361,-3.070946,1.170925,-5.168770,3.267057,2.404999,9.659167,8.885246,-7.981210,-8.528422,-5.840086,0.744245,5.358773,-8.974787,-3.073764,-9.291801,9.980012,-5.645010,-7.930737,-0.340944,-3.882444,-7.529042,4.091363,-0.718385,-6.801208,-9.434383,-8.629268,-8.568213,9.611934,4.783025,-3.309805,4.284546,-6.135331,-7.968345,-8.334666,-6.263379,8.522516,5.997755,-8.776654,-2.761989,-6.749238,-1.749674,-2.017179,-3.860167,0.419041,-7.665119,-2.460358,-4.403836,8.131848,9.393496,8.340441,-9.988328,-8.983599,8.589156,3.668065,1.423006,-5.045469,-8.939823,5.755285,2.486555,-5.436310,-1.479593,4.834535,0.922055,-3.649737,-2.705433,-8.199591,-4.020831,-1.703445,-0.201097,2.497372,-1.385290,7.631223,7.619213,5.292949,8.723234,-7.569610,-5.628906,-9.425454,-5.520170,-4.297202,-1.571739,1.339916,-5.098272,6.800425,0.806011,-0.438039,-5.514810,-5.456779,-2.106010,-9.477235,-9.075631,-7.163351,-3.671988,-1.659038,9.153173,-9.995443,-3.942674,-2.981325,2.918572,4.181156,-0.040160,-6.430708,5.603220,-1.440448,2.457401,9.809915,0.164583,-3.217833,4.203158,-2.517220,-2.308746,-6.992150,-3.533673,9.850524,-8.888584,-9.808451,-9.064405,-1.334830,-1.224664,-5.953786,4.297165,0.260682,5.456775,2.780324,-4.824939,5.761693,-0.792424,7.423297,-4.451907,-3.940833,0.685655,3.294156,-5.541973,3.047889,2.125403,-8.294827,-7.020315,0.946347,0.237284,-1.725743,7.733453,-7.247355,4.298762,-8.140190,-0.903447,4.976927,-8.345240,-3.197067,-1.104158,1.370081,4.920324,-2.210895,3.957340,0.373046,-4.949859,-2.735746,7.324596,5.537788,3.977007,-4.068919,6.544258,8.241640,-2.610057,-5.562651,-9.752040,-8.720985,0.795845,2.902912,8.410948,9.007830,-4.880571,9.120033,3.974091,-9.813591,-4.191612,-5.931117,-9.318608,6.135228,3.130221,7.756259,1.086670,2.440965,6.788879,5.416161,0.195250,-1.022133,8.893201,0.838487,1.235614,2.454566,-2.561942,3.274871,6.699559,-9.967107,-1.993793,-3.714551,5.063307,-5.717298,-8.546431,9.199990,-5.475490,8.438480,8.029228,-7.001413,7.924946,5.735808,-9.143965,-0.088796,4.100175,-2.497964,4.421196,-1.944943,8.277935,7.481056,-8.214558,3.175937,-5.241238,-9.547430,-0.347935,-1.017701,-3.359997,2.416348,-5.077795,7.823187,-6.542197,2.611369,-9.985248,6.886201,-9.103344,-7.997757,3.436934,-4.843131,-1.630598,-5.423720,6.184672,-2.682892,-6.370225,-3.918432,-1.219590,-3.974326,-3.673821,-7.886068,4.879752,-0.582407,-2.933492,1.778937,-5.820324,5.994049,-3.421017,5.766163,3.794134,-7.305859,-9.519058,-7.459497,-4.253161,8.160220,4.081856,5.117851,8.230597,-1.956581,-7.583694,-1.711375,1.242146,-6.907077,3.433944,-6.946963,5.815872,-0.294144,6.994516,-4.933833,6.513957,-7.585317,1.188664,-6.316659,3.346004,-7.626933,-5.063770,1.715936,1.379504,8.185560,9.342471,0.999112,-1.518895,-3.825856,-4.060111,0.486628,6.157038,-8.170769,-2.687209,7.616812,-5.337572,4.779626,-1.963251,-7.858075,-5.580323,-2.228609,4.246804,4.075925,7.837745,-6.224067,-3.418795,-8.570383,5.421177,9.458659,9.997023,-2.615887,-8.731741,-3.104167,-5.239729,-3.730520,-7.757974,-8.715206,-7.708583,-0.179115,-6.765544,-5.654870,-2.603464,-6.529471,2.881718,6.841417,-8.558035,-0.805600,-9.538639,-1.889105,-3.907225,5.892772,4.750933,-7.947993,5.132997,-7.270341,7.874540,9.758681,3.109509,-1.291118,1.929793,9.630024,5.774681,-3.012774,-9.698049,-6.819659,-2.363516,9.898269,3.053855,2.998406,-0.977519,-6.562348,-7.367421,-7.564743,5.417426,9.701979,-3.211843,9.880222,-9.891356,3.096210,-0.106055,5.841194,-6.659736,-2.130582,8.075206,-0.151715,8.872299,1.698265,-1.396855,5.791293,-2.540501,-6.638997,4.837609,-1.304546,-5.586274,-6.101086,1.990896,3.531905,8.574723,-6.280407,9.431858,-2.000388,4.690743,6.162743,5.701787,-9.250889,5.279180,9.737331,-9.609681,-1.265516,6.225286,8.997079,2.395270,-7.865734,-1.005055,5.292438,-6.438699,6.768094,1.604876,0.797627,3.528104,4.549164,5.870963,-7.210536,-9.303599,-2.229550,7.250368,0.930634,-8.108538,1.952123,-4.003818,-2.189466,0.088892,-6.113010,-1.013979,7.440820,3.181286,-7.332694,4.782446,-8.882287,-8.786031,-0.829737,-0.841564,-1.023323,3.650810,-7.349736,-7.046702,-4.042171,-2.949420,-2.428920,7.636097,-7.169235,-5.889139,2.511785,3.235120,-4.034985,-1.723579,-5.454963,-3.063085,7.023903,-6.424546,2.494201,-7.091004,-6.957923,-8.627637,-6.569685,1.473093,1.540512,6.581872,8.776693,-0.612499,-0.320855,-9.336760,-6.988419,8.679543,5.412418,1.171322,-3.259083,-8.345967,-3.709151,-4.566062,-8.567554,4.490843,9.312247,-5.519957,-3.026996,-7.583570,3.323957,4.516806,0.607076,9.181811,-0.718032,0.015565,0.277727,-5.547963,0.650379,-9.297828,-6.167741,0.960505,-3.737259,-4.291316,-0.244528,-5.538743,-7.922344,5.054528,-1.286248,-1.777868,4.567702,-3.979979,0.065511,-8.758332,4.396592,6.685538,1.937871,7.494215,-3.544537,-5.900441,9.013305,8.393621,-3.431055,9.509719,0.316375,5.128312,-1.987604,2.151004,-3.882300,-0.182009,-3.640534,1.043418,-3.270788,-2.184408,5.465173,9.456041,4.307366,-4.413036,-8.168297,-0.256405,6.110067,-9.487919,6.660644,5.315000,-0.449530,9.673393,3.052539,-9.907885,-4.521371,0.203105,7.132549,-9.315415,8.992766,-9.843161,-5.813317,2.688379,-2.913840,3.021227,-5.061857,-7.294484,-5.304769,8.385494,-7.089960,1.434021,-0.294931,-1.723348,-5.064609,-9.614321,1.008486,6.779111,-8.146214,4.662116,-3.436021,-8.671970,-8.549999,7.905598,9.699503,-5.243853,-1.012556,-5.269813,-5.471374,-9.813639,1.795147,-3.381854,1.129498,-8.116050,9.448179,7.372801,5.441662,-2.174243,-8.521315,-4.590049,-0.337282,1.663373,0.446049,-1.704579,1.055843,-9.333310,7.417432,4.207779,-9.435176,-4.386529,-2.896868,7.201005,-2.997691,1.664124,-1.349212,-6.487720,-2.094479,1.507579,7.691736,-3.787035,2.041000,1.964620,1.984192,1.982867,-0.637667,8.174378,0.519929,-1.389101,-1.760036,-7.142248,-5.997809,-8.992996,1.526054,-7.578943,6.113282,5.812249,6.699726,2.470336,2.365660,-8.757878,9.290484,-7.850906,-3.244450,-2.838949,-3.724811,8.038604,5.210518,-1.483224,-0.779303,4.690480,9.666469,-5.862925,2.635850,5.436469,-8.871816,-7.442329,-6.122487,9.519737,-9.283925,5.026788,-3.773597,4.932163,-8.948261,-8.785478,-6.978546,-5.853309,-7.761768,-4.697186,6.062255,6.262788,6.241950,1.825444,-2.190495,-9.532472,-1.349767,-5.825643,2.664018,-0.974318,2.871906,-9.765397,-9.120429,4.928427,7.557154,-0.968060,2.142436,-4.647491,2.223462,-9.365784,-5.448868,-4.050832,7.942690,-9.047714,-0.062776,-1.266430,5.227769,4.556114,-5.761921,9.630154,-8.946175,-9.903029,0.949817,-1.055664,-3.065785,-6.666368,-1.000645,2.755508,5.306207,-0.110487,-3.121926,2.726688,3.998202,9.191755,8.148183,8.658220,-3.585598,-0.251555,-0.042096,-4.063217,1.452138,-9.156085,-9.218960,8.052773,3.162626,2.203847,3.341244,1.785898,-8.361195,-2.465875,8.667962,4.397871,0.327489,6.261699,6.350743,-1.652195,0.337917,-3.812671,-3.915371,6.105122,2.761636,4.796283,-6.383299,7.844786,6.125071,-7.814865,7.525645,-4.311681,8.957340,-6.680205,4.876993,-1.751984,4.117185,-3.225169,-4.426190,1.190639,2.605930,-5.621528,-7.084577,-6.735714,6.987987,-8.139068,-5.324996,0.278593,1.474987,-0.138080,-3.692900,9.470742,5.298261,9.847292,5.730589,0.842630,3.126737,-4.051308,2.822485,5.382651,-7.903541,3.243003,-5.190181,-4.347758,6.178547,4.443098,6.868735,7.227253,-1.749572,0.744075,-2.319091,-2.309956,-2.910936,9.777683,2.609437,9.005565,-3.534861,1.789612,5.698042,-6.944785,-3.150061,5.525099,-5.662440,8.140265,1.744432,0.668640,8.581397,-7.819803,-6.439379,-8.488729,-7.994086,0.916306,-7.621026,-1.370962,0.838855,-2.249613,-8.039043,9.159108,1.173942,9.640597,6.118444,-9.174153,4.885619,8.220178,-4.855637,6.073033,6.514060,8.958475,4.442491,9.443430,7.676995,8.174275,9.304598,-8.843265,0.376099,-4.429924,-9.943039,8.486408,5.276726,-8.879144,-2.808338,-7.894707,-3.548789,-1.995013,2.280574,-3.183585,8.205838,-5.222576,8.950402,4.912488,8.045101,0.215044,-7.824425,5.858928,7.826496,0.410791,8.153076,6.866809,-4.358046,-4.511688,-7.064120,-0.240908,-4.309425,-4.987042,5.067676,-7.132933,8.027206,6.280079,-0.978840,2.844345,-0.854875,-6.918140,7.203489,2.993871,4.615848,4.360256,6.143591,6.499874,4.675012,2.000508,-2.806133,8.169433,0.265963,5.223687,6.590674,-5.325565,-5.050929,8.915737,-5.011629,4.228910,-6.717449,9.417322,-9.978135,7.608275,3.174593,-6.127585,-9.981313,9.867707,-8.972054,-9.254405,-2.491351,6.267975,0.078611,-6.686632,-6.327603,4.078639,-4.165779,-3.090775,0.205213,-8.545833,-6.207994,-5.930118,-3.647678,-5.170176,9.268950,-6.460355,0.194543,-3.250339,3.918306,3.540734,-8.155482,-0.025543,2.061766,1.088028,1.311159,2.668530,-7.833681,-1.590862,-5.023647,-9.174248,7.327517,2.375003,-3.792091,0.093428,-1.079158,3.309124,6.521773,0.892993,-4.782404,-0.412370,7.324478,8.709975,8.848482,-1.894101,7.101798,2.146209,-1.557076,2.862201,-4.864954,-3.634301,4.052419,5.739727,0.100678,-8.039090,1.752503,4.254879,-0.223432,9.432818,2.045983,4.937901,-0.503975,8.261395,7.591675,1.198382,-4.793328,-4.144231,-6.342855,-8.779280,3.478044,3.778506,7.130748,0.533977,-2.020824,-9.192735,-2.521964,-8.557639,-0.469533,4.766221,-8.579193,-5.683251,-2.360633,6.106246,-7.837825,9.993538,-5.879669,3.298284,1.504914,4.700892,6.198612,1.239841,-0.849615,-1.619160,-4.583866,-9.863152,-3.720107,3.453430,-5.601508,3.194422,-7.015059,-0.784145,-8.901452,6.219896,-4.043188,2.566508,-4.285353,0.250881,-2.960226,1.726226,-5.570274,1.385908,-7.605049,6.647893,0.301720,-2.488687,3.493905,-7.802533,-1.591868,-2.325128,1.701190,-4.137320,-5.597228,-2.247302,4.858055,5.158400,0.016688,-1.833339,5.143892,-6.808462,4.247181,4.151891,7.680202,-4.129137,2.948815,-6.095067,-0.933773,-3.709381,4.387815,6.422193,-8.052544,-6.887572,1.522987,-9.482357,-6.969787,-1.594318,8.966958,9.473160,1.522614,-0.001391,-9.945838,5.067485,9.112240,9.911306,-0.305112,1.797582,-1.363766,9.837048,-3.250305,-9.090212,-3.178612,-2.485904,-4.212844,3.264892,7.696342,-7.383516,-2.193324,-0.029926,9.503326,-6.235198,-0.159646,5.884830,3.561103,7.078575,-2.772093,4.475853,-5.783400,-2.876300,2.351741,-4.435470,2.785576,-7.911705,5.433917,5.603883,-4.411490,-8.030996,5.610341,3.203307,-8.909294,-3.071647,9.152808,-5.802082,-2.552055,-3.471321,-0.140653,-6.909228,-9.203368,0.426910,-7.530794,-0.883676,6.085755,6.335298,-0.600442,7.565368,1.805948,7.749618,2.437657,-1.035198,-6.676978,6.008726,-5.009748,-3.435521,-4.391056,-1.238605,-4.279791,-7.939745,7.548598,-7.088006,-7.952566,6.441949,-7.255012,-4.798877,-9.356139,4.544573,-0.116032,5.961914,-7.479928,7.717998,4.197125,5.857773,-6.330265,4.313633,-8.703673,-4.530639,-7.233212,-9.493082], dtype = "float64")#candidate|6332|(1170,)|const|float64
var_6333 = relay.var("var_6333", dtype = "uint32", shape = (2, 56))#candidate|6333|(2, 56)|var|uint32
call_6330 = relay.TupleGetItem(func_1611_call(relay.reshape(var_6331.astype('float32'), [5, 14, 4]), relay.reshape(const_6332.astype('float64'), [10, 117]), relay.reshape(var_6333.astype('uint32'), [112,]), relay.reshape(const_6332.astype('float64'), [10, 117]), ), 1)
call_6334 = relay.TupleGetItem(func_1616_call(relay.reshape(var_6331.astype('float32'), [5, 14, 4]), relay.reshape(const_6332.astype('float64'), [10, 117]), relay.reshape(var_6333.astype('uint32'), [112,]), relay.reshape(const_6332.astype('float64'), [10, 117]), ), 1)
output = relay.Tuple([call_6281,call_6319,var_6320,const_6321,call_6330,var_6331,const_6332,var_6333,])
output2 = relay.Tuple([call_6282,call_6322,var_6320,const_6321,call_6334,var_6331,const_6332,var_6333,])
func_6337 = relay.Function([var_6320,var_6331,var_6333,], output)
mod['func_6337'] = func_6337
mod = relay.transform.InferType()(mod)
var_6338 = relay.var("var_6338", dtype = "float32", shape = (77,))#candidate|6338|(77,)|var|float32
var_6339 = relay.var("var_6339", dtype = "float32", shape = (280,))#candidate|6339|(280,)|var|float32
var_6340 = relay.var("var_6340", dtype = "uint32", shape = (2, 56))#candidate|6340|(2, 56)|var|uint32
output = func_6337(var_6338,var_6339,var_6340,)
func_6341 = relay.Function([var_6338,var_6339,var_6340,], output)
mutated_mod['func_6341'] = func_6341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5854_call = mod.get_global_var('func_5854')
func_5855_call = mutated_mod.get_global_var('func_5855')
call_6464 = relay.TupleGetItem(func_5854_call(), 0)
call_6465 = relay.TupleGetItem(func_5855_call(), 0)
func_2507_call = mod.get_global_var('func_2507')
func_2509_call = mutated_mod.get_global_var('func_2509')
const_6469 = relay.const([-7.412407,-2.147135,-2.772449,-8.823270,-3.177940,7.380048,-6.988763,-5.097504,7.419406,5.184359,6.615067,-5.027756,6.103124,2.765165,1.360046,-9.135585,-7.983653,5.415152,-2.760578,-9.771697,3.087418,-7.721355,-7.331899,-3.764616,-5.862085,9.143723,-1.434208,5.705148,1.727784,-3.157928,4.498757,1.721626,2.036870,-0.054254,-3.772708,-0.662434,-5.090548,0.104185,-0.341056,-8.627903,-3.838837,-3.947906,-0.446399,-1.342927,-7.290998,-8.759532,4.539689,4.287318,3.801235,-3.117500,-5.723981,3.989157,8.043383,0.417938,1.916975,-8.140026,3.342076,-8.819767,-4.094196,6.524368,1.125498,-3.335965,5.669724,-5.712966,4.935242,-4.213278,8.005618,5.899933,1.109266,-1.468416,-6.924563,-7.784172,2.720683,0.653761,3.680281,-5.433055,4.248597,8.155094,-6.571486,3.445317,-0.771630,3.377464,1.776093,6.243536,3.597744,0.400054,-6.071386,6.054889,-3.592820,-0.656147,-6.309476,6.610339,1.233511,-8.681784,-3.626393,-5.129923,-7.086134,-9.873245,-9.066174,-7.348388,-7.812114,9.590159,0.466687,-2.293120,-0.200636,8.067331,-8.488395,-4.477266,6.183474,1.294765,-9.809859,-1.901842,-0.385055,-9.104768,-8.857944,-2.483349,7.529801,-9.904317,8.250574,-2.654785,7.670355,-3.160470,-8.231140,5.851252,2.394926,7.213566,-0.452341,-0.528042,1.138118,7.132009,7.344170,-6.199934,-1.129336,4.904212,3.867354,7.174298,6.315288,-2.057548,-5.779100,9.691819,8.812492,4.714263,0.368886,-7.301498,-1.008311,-8.856752,6.298152,-7.672105,0.496889,4.645070,-9.998078,2.140655,-5.030426,2.907171,-4.220792,1.894970,-4.555822,7.172705,-1.181592,-2.102380,-2.814141,4.746475,4.306332,3.472266,5.204086,1.758718,3.494179,-2.476469,6.167476,-3.216379,-0.692446,5.993638,-6.209733,-1.532538,-6.217254,0.052836,-4.202487,-9.022025,7.217067,-3.677764,5.607886,-9.975085,7.461093,-4.410841,-2.391405,-5.982572,-7.412799,4.970671,-4.895161,-2.782815,-5.332613,4.759587,-1.662805,-6.259597,1.039176,-9.540541,0.334326,2.223081,0.222178,6.235502,-0.193536,2.429716,7.031225,5.242158,-5.340542,-1.589117,-4.801984,8.418733,8.859633,-6.784808,8.664548,0.411944,1.110131,3.081602,3.441239,-2.993850], dtype = "float64")#candidate|6469|(216,)|const|float64
call_6468 = func_2507_call(relay.reshape(const_6469.astype('float64'), [3, 6, 12]))
call_6470 = func_2507_call(relay.reshape(const_6469.astype('float64'), [3, 6, 12]))
func_993_call = mod.get_global_var('func_993')
func_999_call = mutated_mod.get_global_var('func_999')
const_6487 = relay.const([[3,-3,-6,2,8,6,1,-4,-5,4,9,7,8,1,-1,-6,-5,-7,7,-4,1,1,-1,10,5,2,-6,6,-6,9,-9,2,-6,-7,-8,-10,-3,4,7,10,10,3,-4,1,5,-7,-5,-8,-10,5,-8,-7,-7,2,7,-5]], dtype = "uint64")#candidate|6487|(1, 56)|const|uint64
const_6488 = relay.const([-2,-9,-1,2,-9,-9,-7,-4,6,-9,-10,6,-2,8,-9,-6,-8,-3,-9,8,-4,-5,-5,5,-10,6,1,-5,-4,-10,10,3,1,6,3,-8,-9,7,-3,-7,5,4,-7,8,-4,4,4,-1,-5,7,-8,-4,9,3,2,-6,7,-4,10,8,10,-9,9,-9,4,-2,-10,-1,8,2,8,-8,7,9,-3,3,-1,8,-2,-6,-3,-9,5,-6,4,2,6,-6,9,2,4,-7,-8,5,-2,-6,-7,1,-5,-4,3,-2,5,1,3,8,-1,-2,-10,8,-6,-8,-9,9,-6,-4,1,9,2,-2,3,4,-6,2,-3,-9,-5,6,-6,8,7,2,-6,4,10,6,-7,-7,9,9,10,-5,-5,-10,3,4,10,8,4,7,-7,7,-5,6,-6,8,-3,2,3,10,2,5,-7,-9,6,-6,10,6,-2,1,-9,3,-1,1,-8,9,-4,-1,1,5,9,10,-7,-5,3,6,-7,6,-5,-2,-10,5,7,-7,8,-6,3,6,-4,-10,9,9,-6,-3,-1,-6,-6,-5,6,3,-1,-3,-5,-6,-2,-4,-4,-6,-7,1,-4,9,7,4,7,9,8,-4,-3,-2,9,-5,-10,-3,-9,-4,-3,-2,-10,-6,-8,5,-9,9,-1,6,-6,5,3,2,4,5,-1,-8,7,-6,-8,-1,1,-8,8,4,-6,-1,-1,-3,6,-2,8,8,1,10,-6,-6,-10,9,10,-3,6,-9,6,-2,1,1,-2,-5,-4,4,-6,7,9,-4,-1,9,-3,-4,10,1,-10,1,1,6,-2,5,5,4,8,-4,8,-8,-4,8,-8,7,3,-1,5,10,-2,-5,-5,-2,8,-3,1,-5,-4,9,6,-2,-6,-1,-2,8,6,-8], dtype = "uint64")#candidate|6488|(336,)|const|uint64
var_6489 = relay.var("var_6489", dtype = "float32", shape = (1650,))#candidate|6489|(1650,)|var|float32
const_6490 = relay.const([[3.365303,2.809844,-3.508214,2.895889,5.600171,-3.484539,-9.105004,5.783603,-9.953186],[9.151673,-5.131610,-1.046573,-6.781908,5.713960,6.380101,6.545526,-5.202161,4.719972],[5.761915,8.246433,-6.735653,5.767052,-4.479631,-3.741125,1.563268,3.622392,-3.136505],[1.418767,9.099480,3.261032,-2.986451,-8.808941,8.609945,-2.079681,-2.349883,6.234547],[8.881142,-7.725493,4.607820,-2.039352,-9.977851,-5.198457,1.589271,9.144156,3.742196],[-9.699051,3.604950,-7.178993,-6.284820,2.561987,-8.081184,1.197627,-3.039247,-8.130306],[6.758895,-7.794251,-0.073094,-2.047436,-1.919289,6.335203,-3.208954,-9.446763,-1.253973],[-6.336955,7.479137,2.704629,-7.491007,6.557203,-5.221666,9.117065,-4.764314,1.127475],[-6.918307,-4.476928,2.801300,-0.420425,4.181369,-9.737837,1.353114,-1.803545,-9.499768],[1.281529,7.197641,0.097918,-4.018361,8.586999,-6.948400,5.110706,-7.631857,-6.481769],[6.472315,7.659764,1.031323,-1.230561,-4.003884,9.320127,1.807396,2.621020,8.547086],[-3.095968,3.850020,-8.327061,0.153045,2.197940,5.757604,4.670029,-7.249785,-3.884756],[-7.599552,5.626253,5.377613,-5.360057,7.482681,9.700556,-9.663497,-2.589954,0.350023],[-7.670061,-7.518807,-5.589936,1.716771,0.828945,-3.374991,0.908279,-9.993297,9.709392],[3.748135,-9.745892,-3.950985,4.654514,-1.166713,-7.243847,-1.118142,-9.123233,-4.907123],[-6.424310,-8.280349,-2.269673,1.476174,-2.434779,-0.674615,-1.622386,5.175939,-8.562199],[-4.825707,-0.772741,9.787394,8.264618,5.496619,-9.700590,-4.978064,0.185843,-4.244118],[-9.905351,3.450966,-0.662216,-0.844571,3.328823,6.186060,4.841533,0.750398,-8.560143],[6.827550,-3.732504,6.038610,-4.316765,-6.070937,4.423614,2.871223,-3.545809,-0.242605],[-6.168504,2.443746,-6.837740,0.272097,8.461053,5.476061,4.088097,3.740502,-4.154827],[0.716849,-5.050660,-6.628117,-7.802795,1.821576,2.737818,5.223856,2.637185,5.399028],[-4.747723,7.512808,-9.417031,1.919752,1.319934,9.511651,-9.489711,2.099617,-2.032155],[-7.066653,8.862619,-4.976781,9.373089,6.400612,-3.548655,-8.761137,3.544401,-7.951661],[-1.777906,-6.931113,-1.490497,6.152780,-8.231135,-9.832430,4.628900,1.740704,-2.222834],[2.649866,-5.966277,-0.681607,4.030224,5.459477,1.921459,-8.707249,2.161447,2.034229],[5.970774,-8.256056,4.987050,-9.225544,2.610301,-3.037711,7.442000,5.846757,-3.993250],[4.446912,-6.740168,-0.464033,-9.646043,-6.776036,1.166452,-6.144733,-6.882145,-9.931587],[6.433102,-3.199815,3.448014,-0.901410,-1.111918,-5.847450,-4.536914,0.480592,-1.092654],[-8.334353,-0.756571,-8.453561,-1.808035,-3.408997,-3.371511,0.428016,-4.681105,-6.159239],[-1.473355,-9.505202,0.959818,3.174398,-4.055680,-1.613011,-0.634565,-4.964505,0.878429],[4.445899,7.094041,5.792939,-2.289924,3.925538,-3.910738,-1.648642,-3.023491,-6.269818],[0.540978,9.543204,-5.960064,-4.328994,-3.648463,7.097851,-7.825932,-0.205010,7.670092],[5.879826,-1.136064,-4.467997,-8.634867,7.686876,6.027026,-5.827425,0.413849,0.625637],[-1.447775,-3.168377,-2.077485,-8.662841,-8.358393,-6.731714,-7.761756,-7.915293,-5.994753],[-1.205544,0.812866,7.184684,8.875052,-4.277291,-3.514211,-8.763568,8.342433,7.004294],[-6.309955,-0.788215,-9.736622,-2.873607,-7.020410,5.605216,5.281871,-5.949080,8.410953],[-9.687447,8.996831,8.529782,-2.055554,-4.509777,8.099797,6.435179,-8.278253,-0.787359],[-2.007951,2.320425,5.893541,5.614165,-1.452251,-8.854828,3.289310,-2.244380,8.644706],[-6.012332,8.393353,5.404895,4.825168,6.594996,8.494631,-0.565613,-5.596702,-3.355076],[8.470278,3.119433,8.844927,4.387889,-1.238408,-4.086711,-1.678670,2.999163,7.156154],[-0.161607,7.406188,-5.016143,5.439042,-1.430321,4.941232,-8.102243,-5.176330,-5.959601],[2.786482,-7.277182,-4.205767,6.679263,-6.615883,-9.643320,7.338484,-2.836776,-5.357516],[2.006188,4.208599,-1.794672,9.573058,5.217043,-9.126815,3.500571,-9.056016,4.405518],[-1.066266,1.908204,2.071550,4.513137,-1.888021,7.063319,-7.343204,-7.429614,-4.735111],[-9.177097,2.039747,4.776368,-4.237254,1.287512,-2.194758,1.012674,3.066792,9.360170],[-4.756764,-1.846789,-6.318535,-0.892318,-8.501171,3.283790,4.709356,-5.696764,1.064736],[-8.544630,5.287299,-4.421069,-0.149460,-2.534394,-5.733459,-9.575702,-1.265647,9.468874],[-1.283572,-9.497395,3.671567,3.264955,3.679780,7.019793,2.009482,-8.418071,-4.359362],[-5.762898,-9.805438,-7.896591,8.869301,-0.150946,0.699242,-1.037111,8.519994,1.158178],[-8.413809,5.717498,-8.604694,8.428135,-4.716379,-1.751009,-2.902819,1.569391,-5.524950],[-2.329331,-3.457623,5.532156,-8.448603,0.754928,-3.006372,-8.154140,6.014057,0.373496],[3.861964,1.310780,-3.249171,-9.286670,-7.252469,-1.348803,3.088105,-3.746548,2.824337],[-7.198532,-4.252261,3.558375,-4.667392,5.855095,6.475095,5.157736,6.174167,-6.031075],[9.386784,3.305947,-4.902495,-5.049322,-7.009437,3.305712,-9.766070,8.931774,3.626158],[-4.717727,2.163268,6.162477,-6.658824,1.698528,1.128569,4.366856,-3.949220,-1.771578],[-8.094935,-0.915185,-7.397818,-9.256901,5.911782,7.482035,-3.948375,-9.083014,4.841778],[-8.630162,1.258649,-6.246493,3.626394,9.620942,-4.891601,-0.881352,-3.889657,4.685079],[-9.549111,5.036519,1.624291,-3.930235,-4.937955,5.604833,-5.033276,6.431132,1.048607],[-6.352718,-2.479703,-4.540464,-2.092663,6.784398,-1.976302,7.129741,8.584432,-5.788712],[7.560945,-9.567355,-7.806006,6.751414,-2.537782,-7.769037,-8.576299,-9.746258,-1.943766],[2.333356,-1.493066,2.079803,9.827721,4.966365,9.328823,-4.890846,2.715487,9.400604],[-5.796028,-4.104389,7.799876,4.579111,-3.890705,-4.950655,-1.500464,2.598509,8.054391],[8.932544,2.241455,3.810688,2.159468,8.712520,-6.759711,-5.325760,0.453803,0.025798],[0.515996,7.831683,2.603664,-3.261159,9.304428,-5.376979,-0.890373,-3.162481,-3.747974],[-3.021979,5.015593,-5.127942,-0.193791,-3.089535,-8.295668,1.496916,-4.872730,4.902128],[-8.272110,-2.701693,9.332744,-2.204516,-5.118326,5.086791,-9.961872,-4.822324,9.227920],[-1.319101,8.206772,6.254268,-1.563242,9.209712,7.486169,-4.897113,-1.108083,-7.900289],[1.017642,0.875053,2.155820,9.428583,6.212647,5.541344,-5.537927,-2.405616,-0.605979],[8.333869,-6.963802,-5.663073,7.789921,-0.745851,2.348189,8.063214,5.982876,-7.110473],[3.585160,6.016371,-0.516345,6.434658,-7.506096,-0.773737,-2.073279,9.945362,3.759436],[-7.325380,0.800253,-7.386442,4.510190,6.605058,8.976917,5.246395,3.297941,4.677810],[7.905674,4.401765,-8.883871,5.285884,3.271219,-5.748199,-5.181338,-2.243250,8.097496],[-5.956634,-5.979308,6.570680,4.669585,8.309755,6.643254,-1.199980,6.959214,-9.904561],[-7.974295,-8.732577,8.717783,-6.318291,-9.950451,9.029429,9.362775,-4.527287,4.789798],[9.839312,3.081734,-7.482364,6.410876,0.092532,-9.153562,1.499207,4.098700,-9.820507],[-9.829138,-9.244910,3.548898,-2.147911,2.252436,3.724574,-8.704985,-9.416833,5.583741],[7.257132,5.988758,5.288631,-7.894724,-2.220653,5.314792,-5.203887,9.259995,-0.171383],[-4.583726,-1.354189,3.052032,7.323227,-4.633364,1.015393,-8.820379,2.104091,-0.484275],[2.473670,8.951273,-1.121452,-2.362373,-8.543801,-9.572814,7.694345,5.995961,-5.604412],[8.189934,-5.199184,6.923270,0.651005,-2.345072,-3.722887,2.327339,-8.707571,6.245018],[9.090819,8.227982,-4.886968,-7.381131,6.374159,5.021912,4.018434,2.730274,-4.273727],[0.604688,-2.096294,-6.641216,-6.579799,-1.086645,-3.434435,-0.891317,3.172802,9.850507],[5.715828,2.975273,6.418359,-8.704400,4.246790,1.145011,2.889212,8.141772,-8.233835],[-4.199174,-7.307712,9.893455,-9.687973,-5.616108,-8.866412,7.203143,-5.261691,-5.712781],[3.723343,-6.393097,-0.925783,1.693485,-8.446577,0.300545,-3.999307,-1.224881,-4.406835],[-7.943569,7.341648,-1.963095,-5.511229,4.435432,2.549423,0.681291,-2.997416,6.908206],[6.888135,-6.109384,-5.644849,-0.832371,6.295031,2.303156,5.038056,8.664744,-1.828103],[-9.577854,5.491977,4.902237,9.956740,-9.097596,-2.114222,-4.118855,-1.271477,-5.088007],[-7.909771,6.924211,9.356669,3.705407,-6.087083,2.350210,-3.943054,-8.719471,2.438104],[-2.057229,-3.306486,-8.934011,0.148764,-7.360914,-4.691324,-1.364150,8.998250,-8.452058],[-3.661537,1.556868,-0.937208,9.310812,-6.251815,4.947995,-8.717231,-4.981574,-3.287436],[4.216719,6.621271,5.573770,-0.601116,-9.435391,7.880454,-0.436376,-3.974819,3.171705],[-1.744535,-5.122945,-4.441427,-7.745853,0.072736,3.909666,-9.590258,0.316876,-4.540294],[5.088413,-6.323786,-9.248658,-7.604516,0.599280,9.214405,-5.058594,-8.712252,-0.128480],[-5.282111,0.029594,-2.349339,1.227415,1.311606,-4.762392,1.826058,9.241975,-6.341879],[7.043738,-1.263071,9.735600,2.645117,-8.114083,-9.065971,-3.643389,4.166078,1.340509],[-0.921994,-0.722599,0.293921,2.736546,-8.060952,9.892245,3.605577,-9.910968,7.974860],[3.822866,1.009830,-9.240961,-9.049531,-1.186056,-3.472258,8.354713,-2.151907,9.441013],[6.099633,-5.409418,3.705703,-8.919364,-8.846584,-4.643506,-1.685341,2.208892,1.018602],[-5.236912,-3.539687,-2.674344,-2.151174,-0.021888,4.130506,-6.002694,-6.704694,5.119594],[-8.750837,-5.559051,-5.185275,6.511358,-6.370541,-0.009589,-5.754677,-4.285597,1.763292],[-4.381966,-5.098771,-3.247725,-0.447394,-2.232251,4.214452,-3.628446,1.448013,-5.969744],[7.720570,9.484644,-3.813651,-5.277462,-6.700963,-1.364385,0.958695,3.799211,9.913028],[4.962245,-8.346215,-4.491226,0.477120,-3.719836,-5.186064,-3.012301,-0.610329,3.780397],[8.789231,1.877987,-5.212077,4.657680,-5.138544,-1.775924,-4.133580,5.826714,6.895335],[-4.554569,-8.187095,-1.282612,-4.589468,9.040642,-2.274244,3.484971,-1.844037,0.472916],[-3.037123,-7.596745,7.396653,-2.227861,-1.416435,-9.004683,-9.547589,9.568312,7.884478],[2.265556,-1.179779,-9.423317,7.248348,1.434148,3.500739,2.332794,4.281531,-4.059065],[-9.806243,7.432423,7.473950,-4.930127,-2.122879,-2.774184,9.359080,0.087056,-0.541380],[-4.024435,-6.556635,7.191549,-0.828741,2.516685,-2.168973,-0.248774,6.990593,-1.025071],[-0.440265,-1.554243,-8.704193,-2.802556,-8.903003,6.835464,-9.896176,-7.985612,3.101518],[-8.212192,-1.372698,-7.239932,8.800599,9.790009,-1.939581,1.231658,4.577098,1.332739],[3.857026,4.098464,-4.240897,-1.595513,8.435239,3.428250,4.679288,-5.597771,2.786153],[-0.023927,-5.310240,1.740332,2.728134,2.626285,-7.480007,-8.480364,-9.198017,7.610520],[6.046470,8.134025,2.761799,8.346945,-3.653872,-5.113264,-3.670099,9.350545,3.442342],[5.461146,5.671208,1.769774,-4.434679,0.664199,1.340558,8.721952,5.765086,6.697566],[9.015740,7.670376,7.510279,0.601204,-2.233707,-9.098773,-5.100823,5.581370,-7.930556],[8.787148,-9.792640,9.406706,-0.229594,-6.779566,-6.500874,-3.486784,7.130323,1.094832],[2.248853,-8.703341,0.280512,0.921004,6.691433,-8.011346,1.550943,-2.223408,-7.283062],[-1.246601,-9.467680,-1.105677,-8.158371,-1.910370,-3.098975,-0.959531,-0.886954,-1.076496],[0.837087,2.654619,-2.721158,-9.872513,-3.092027,6.157670,3.577964,7.880104,7.596312],[-9.861310,-7.217922,8.403117,-7.567558,-8.748493,-3.521886,4.077988,9.989876,-9.170987],[-2.328001,7.190950,2.458025,8.337667,-8.784590,-7.369688,7.735893,-0.897036,4.441914],[-0.422601,6.541697,2.160670,0.607278,-6.186630,9.830670,-4.009272,0.406984,-8.355102],[1.621908,4.694763,-8.970651,0.073336,-8.019587,3.671326,6.079025,-1.731322,8.622250],[-2.604767,-4.993377,3.049571,-5.683606,6.496808,5.708765,-3.208565,0.545461,8.112923],[-3.427252,1.631472,-8.498045,-5.276742,1.225580,-0.541542,-3.519261,8.092920,8.878501],[6.627896,2.343599,-7.793037,-1.348927,7.080568,-7.627187,-1.606558,0.197419,-2.883751],[-3.578533,3.981138,3.195941,-6.302455,-3.975251,-6.143008,-1.465409,2.224808,-1.147159],[6.160527,2.920231,-9.661428,9.445343,-9.194331,3.121588,-3.238355,0.454512,1.245690]], dtype = "float64")#candidate|6490|(130, 9)|const|float64
call_6486 = relay.TupleGetItem(func_993_call(relay.reshape(const_6487.astype('uint64'), [4, 14, 1]), relay.reshape(const_6488.astype('uint64'), [4, 14, 6]), relay.reshape(var_6489.astype('float32'), [1650,]), relay.reshape(const_6490.astype('float64'), [1170,]), ), 1)
call_6491 = relay.TupleGetItem(func_999_call(relay.reshape(const_6487.astype('uint64'), [4, 14, 1]), relay.reshape(const_6488.astype('uint64'), [4, 14, 6]), relay.reshape(var_6489.astype('float32'), [1650,]), relay.reshape(const_6490.astype('float64'), [1170,]), ), 1)
output = relay.Tuple([call_6464,call_6468,const_6469,call_6486,const_6487,const_6488,var_6489,const_6490,])
output2 = relay.Tuple([call_6465,call_6470,const_6469,call_6491,const_6487,const_6488,var_6489,const_6490,])
func_6493 = relay.Function([var_6489,], output)
mod['func_6493'] = func_6493
mod = relay.transform.InferType()(mod)
mutated_mod['func_6493'] = func_6493
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6494 = relay.var("var_6494", dtype = "float32", shape = (1650,))#candidate|6494|(1650,)|var|float32
func_6493_call = mutated_mod.get_global_var('func_6493')
call_6495 = func_6493_call(var_6494)
output = call_6495
func_6496 = relay.Function([var_6494], output)
mutated_mod['func_6496'] = func_6496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6039_call = mod.get_global_var('func_6039')
func_6041_call = mutated_mod.get_global_var('func_6041')
call_6501 = relay.TupleGetItem(func_6039_call(), 0)
call_6502 = relay.TupleGetItem(func_6041_call(), 0)
output = call_6501
output2 = call_6502
func_6503 = relay.Function([], output)
mod['func_6503'] = func_6503
mod = relay.transform.InferType()(mod)
output = func_6503()
func_6504 = relay.Function([], output)
mutated_mod['func_6504'] = func_6504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6244_call = mod.get_global_var('func_6244')
func_6246_call = mutated_mod.get_global_var('func_6246')
call_6541 = func_6244_call()
call_6542 = func_6244_call()
output = call_6541
output2 = call_6542
func_6546 = relay.Function([], output)
mod['func_6546'] = func_6546
mod = relay.transform.InferType()(mod)
output = func_6546()
func_6547 = relay.Function([], output)
mutated_mod['func_6547'] = func_6547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6140_call = mod.get_global_var('func_6140')
func_6141_call = mutated_mod.get_global_var('func_6141')
call_6556 = func_6140_call()
call_6557 = func_6140_call()
func_1611_call = mod.get_global_var('func_1611')
func_1616_call = mutated_mod.get_global_var('func_1616')
var_6567 = relay.var("var_6567", dtype = "float32", shape = (140, 2))#candidate|6567|(140, 2)|var|float32
const_6568 = relay.const([[-4.772160,-8.930750,5.185089,0.788794,9.396664,-9.505784,-9.302997,2.882194,0.760772,-2.232896,-9.053480,0.566858,-2.032299,-8.787051,-3.120731,-1.336345,9.869061,4.013744,5.765051,6.537554,-5.856176,-6.467253,-7.123512,2.322659,-7.753358,9.024119,-2.054628,9.369584,6.944074,9.638332,6.699632,-5.518991,6.762753,5.647781,-3.502319,3.057337,-0.974144,-0.955016,2.727969,-8.805054,6.537357,4.815441,5.084074,-0.103501,-8.297431,-6.859390,2.475318,-5.220590,-6.957710,-4.269527,-7.815672,-0.123604,6.963817,9.709557,-8.683458,-8.757280,2.193838,-2.525927,-0.539946,3.345716,-9.117056,-9.444207,-9.948963,-6.241498,4.447044,0.584813,5.721197,-1.888517,-5.362605,7.086002,-7.119125,4.445792,7.455043,-9.748654,-5.607340,-2.901415,6.263691,0.347319,5.166084,-2.741537,-4.116535,-8.662512,9.070017,-0.704485,-2.334111,9.557892,9.441878,-6.683386,-8.727370,7.178026,-1.518710,5.202104,-2.986613,6.815518,1.869818,-5.545907,-2.754198,1.789608,-9.898692,1.277703,0.010507,0.153403,2.987001,-9.997206,-2.666928,0.583854,8.584236,-4.127244,2.063831,-5.632553,5.844278,-3.828304,3.637605,-3.804255,0.429606,6.461412,-6.303607,4.768617,-0.197255,0.102232,4.886102,-8.896720,5.298732,6.106826,-0.791991,7.160523,-6.131915,3.567735,9.012106,1.471075,-0.406662,-6.676417,0.568009,-2.565685,1.027104,-0.044950,-9.843284,1.836943,5.584116,-5.164348,-7.721472,-5.330533,1.111029,5.386582,0.334275,9.957716,7.649084,-6.925766,-5.926906,-0.790607,-0.508780,-0.467767,1.448505,-4.988924,-9.926266,2.456023,3.220525,-0.416368,4.655546,7.141365,-4.059009,-7.902988,-6.750913,6.433558,-7.630223,-6.724185,-7.816567,5.680863,3.703932,8.809855,2.128055,-3.265784,-6.058798,9.873994,-4.329988,-4.377738,-2.090507,-9.483118,4.304320,1.540886,-9.120586,-6.691117,-4.673662,-5.395693,9.027482,-3.311641,-8.849454,7.279440,1.635434,2.675739,-3.733475,-9.131027,-3.714892,8.877137,-6.486732,3.912424,4.089518,-3.577918,-8.047790,5.327719,-7.028074,-7.699026,-6.429029,2.165501,-7.679265,-1.075506,-2.941449,4.293304,3.757223,-4.625116,7.487646,-4.930292,0.081808,4.368732,-3.542295,6.876531,-1.320871,1.995794,-6.436721,-1.083335,0.449083,6.639318,3.811230,3.376565,6.084161,1.124957,7.501384,6.661145,-5.748251,-6.333548,7.443894,3.203742,7.961604,8.454842,2.366428,1.370326,-7.294432,-9.207036,7.589866,-7.576688,1.355730,-3.861496,-8.032355,8.576176,-4.578214,1.291144,6.309092,1.484666,0.835489,-8.824932,-8.868068,-2.946359,-4.377369,-9.440746,-8.184189,7.976426,-4.765885,-0.107631,6.090166,1.483291,-2.593593,-5.693094,7.302498,-4.861066,-1.273904,0.374840,-4.305932,3.232272,-1.188655,9.389534,-3.723042,-5.979769,-8.471000,4.380048,-1.582910,8.474406,1.099761,1.941045,4.825241,-6.171074,-7.940096,-5.397980,2.683515,-2.551492,9.752726,-9.521502,-7.861031,4.348370,9.915882,-1.213813,5.225716,-7.409232,0.844742,-7.990972,-4.189374,-6.265255,-1.557146,7.177967,-1.698432,-0.124652,6.146895,-9.644689,8.931142,-3.386933,-0.440885,8.624993,-7.829571,7.642836,1.143526,-1.849534,-7.709781,-6.621694,2.979126,-8.288465,9.862693,-3.099963,8.497993,-7.518976,-7.673523,2.186615,-4.428412,-1.591378,8.146389,-7.902408,8.336662,-2.640165,-0.127613,1.909706,-9.283501,3.481032,-9.631274,1.900884,-1.913883,-9.419614,-6.692943,-4.142599,-8.598096,-0.015648,-2.500813,-6.023473,4.940497,5.578344,-1.769516,-2.407197,-7.103416,-1.796841,0.596126,-3.014693,-4.198028,-0.134666,-9.343892,3.615207,7.456865,-0.253175,-0.709962,-6.856969,6.169783,9.957479,-6.152702,4.499739,-5.539750,6.543020,4.312181,1.444168,-9.576869,-7.833819,-8.432761,-2.465203,1.415816,2.870298,9.880890,-9.397606,6.501483,-1.877358,5.812003,-3.339208,-5.562043,3.366894,3.774035,6.820689,-6.923484,7.178559,6.397328,-3.761837,-8.377817,-4.657740,4.550760,4.130979,1.135285,-1.814900,6.444074,-5.868967,-4.319611,6.160920,-5.001231,-6.551659,-5.287927,-6.648396,0.058805,5.886300,-0.256376,2.433284,-3.498704,3.065295,0.596494,-1.660493,-4.999661,-7.450920,-1.058859,9.755061,-9.499785,9.605255,3.602462,-0.019305,-0.323336,-4.855880,2.722270,9.403364,-0.498708,9.019657,-1.025705,-9.293866,-7.250026,-0.463862,-4.747102,-0.536353,6.890045,-1.127935,4.655217,2.075515,-8.978764,-3.025547,4.568274,8.493611,-8.093743,8.053186,-6.951233,-0.427917,-8.014675,7.863653,-5.922388,1.310354,6.490066,-8.995634,-7.473141,-4.756007,9.677042,1.547847,-6.237601,8.186310,5.741232,-9.862150,-8.001682,5.426830,9.322854,-3.260324,-4.998248,0.411596,0.768194,-6.227028,5.954428,-0.135414,1.629134,1.582651,-1.757283,3.753676,-4.882393,3.388421,-5.087612,9.485080,5.596896,9.527648,-4.594066,3.570216,-2.494943,0.378935,-6.073326,-6.616952,2.598397,-2.548590,-1.197662,-2.155438,5.639068,-7.623278,-3.946634,9.683359,5.865233,2.498259,6.628620,0.805856,-7.449805,4.950050,-5.483121,-4.717255,3.300547,0.787197,-7.383962,-6.486067,6.010581,6.416754,3.397886,7.226072,2.088728,-5.249682,0.028806,-5.178504,-7.104157,-9.231128,-3.956090,3.105375,1.910877,5.597875,-0.365790,5.648374,-7.729582,6.671130,3.196761,-4.530045,0.375078,8.791174,-1.991086,-5.291872,7.075922,9.546881,5.596895,-3.204649,5.212612,2.296348,9.914322,2.835435,7.185300,1.609260,0.708975,-6.599000,-5.900257,7.769449,3.329587,-9.917116,7.553169,-7.078886,-8.493824,7.520426,1.907640,2.179365,-0.141660,-3.958454,0.105361,-6.914432,-7.555628,5.327074,6.107463,4.297551,-7.247447,0.174921,-6.514228,-0.636927,-6.250689,-1.537019,-2.803592,7.710637,2.067453,6.191764,1.046684,7.868679,-2.968787,0.930680,-9.363640,-5.170686,-4.348654,-9.760612,-1.310429,0.418686,-7.835655,-1.516016,9.462729,2.386925,3.829240,8.345358,7.125327,-1.650487,2.880508,6.463786,7.302815,-9.785512,7.150513,-1.597973,9.639539,1.103777,0.328987,9.500702,3.988822,4.615336,2.947580,7.834930,-9.992058,-3.999836,4.086380,9.929963,3.393261,-9.524470,-2.772552,-6.266084,-7.904309,5.173744,3.389276,-0.040923,-4.945859,-4.001702,-1.094125,-2.219095,8.408267,-2.753899,-3.827841,5.421822,6.660334,-3.913758,-7.408209,-8.938040,-1.010494,4.753386,-4.576456,-7.388506,8.894269,-6.050174,3.103284,-5.044678,0.639733,7.459234,-4.604928,5.416321,6.310111,0.929057,4.539727,-4.121512,-9.507029,8.781766,-1.223285,3.413475,-5.014817,7.614752,-8.205804,3.134766,6.727302,3.993261,2.801546,2.929953,-6.147101,6.670929,-7.399931,-8.942046,7.348665,6.656915,2.769538,6.898729,-2.897593,1.664605,6.864376,-7.988613,-3.469327,-1.017980,8.632172,-3.682233,9.267111,5.379003,3.126657,-9.604920,1.712692,-1.019130,-1.851349,9.630586,8.860172,0.465829,3.688943,8.675708,0.727500,9.580552,8.733488,-2.714983,8.317766,2.268978,1.214017,4.019366,9.765310,-6.196007,-2.793309,7.745412,-1.592423,-5.199882,-4.245700,7.901149,8.293554,-4.257733,-3.569837,6.102537,-0.330011,7.155795,-9.624323,6.395231,-2.063357,0.927476,1.398453,-3.787046,1.470121,7.237202,-0.254663,8.388669,8.833008,3.169885,2.874955,-0.878843,7.929171,9.964175,-2.883705,2.003880,-2.187005,2.095910,4.847735,-4.876744,-5.597863,8.170721,-6.942254,7.265840,-7.038524,-5.541816,8.358005,-5.848422,-7.275825,3.336333,-8.728172,8.124275,0.497625,-2.423057,6.993206,-8.117415,-2.777301,-3.986887,-2.992533,-7.558609,-7.449214,-5.843835,7.666198,-2.675985,9.907232,6.161128,3.944243,-5.041894,2.402630,0.584520,1.728501,0.556416,9.279047,1.631718,3.508477,7.162170,-4.097032,5.180291,-6.075678,1.281429,2.183181,8.264480,3.021118,-5.486613,-2.931291,3.751389,2.474933,5.427995,7.793901,-9.748680,-2.979772,-8.822336,-8.140436,9.518790,-2.203566,-3.926705,2.884696,-5.283043,1.573821,0.952388,-1.199457,-7.854824,8.304649,3.332214,-4.828684,8.930178,6.145395,2.832016,-8.273039,-2.359139,3.517573,-4.060962,-3.870157,6.632307,7.424937,3.009645,-4.805447,9.828323,3.536714,-5.691598,4.274276,-1.803112,8.249198,-9.025078,-4.820680,-6.969521,7.349629,-7.728684,1.007748,2.790432,5.034555,5.693273,-6.459726,9.563021,3.379895,4.673967,-7.195329,5.671326,6.806930,7.344823,-6.853859,0.002231,-6.954759,7.735065,-8.681974,5.196579,9.925787,0.710007,2.345060,7.707004,-0.584434,0.606665,-4.210836,-7.050278,-0.957140,-6.651340,-5.917142,-2.095327,8.617599,-1.042671,4.220251,9.167868,-3.131403,-8.014163,-9.690483,-4.804283,3.372137,1.526074,-3.281362,9.181653,8.422423,7.248988,-6.217142,-2.937544,3.979058,1.894845,-5.078658,7.529026,7.251944,2.284079,2.966889,-4.545769,3.068692,9.086416,2.435033,8.924981,-5.893541,-5.804174,-2.203403,-3.034976,-1.538105,-6.809868,0.159513,4.587661,-4.997019,-3.808498,7.887947,-7.351116,-0.845030,-4.214011,-7.181898,-7.370294,2.935535,7.111602,2.759289,2.176051,2.022578,6.070526,-1.506222,7.500646,6.777532,-2.274374,-7.379951,8.800482,-2.316024,8.347035,7.243593,8.088150,-8.288293,8.914605,0.235616,7.421356,-5.176211,8.080785,-6.418668,8.007061,-8.137880,-3.410923,-1.221382,2.325381,6.690020,-2.248740,-5.374078,4.222804,-6.105317,-7.720269,-7.886758,8.683453,-0.872901,5.280262,8.327190,-5.877189,-3.554059,6.186823,4.109333,-3.841375,0.764270,2.506552,-7.391736,-5.974822,7.791809,-9.096054,1.400065,4.781505,-5.682425,-2.907378,6.160218,5.421196,8.477716,6.881051,9.079749,6.732507,-9.039035,-1.324496,-0.378576,3.388902,-3.213615,3.496233,4.854049,5.740832,5.734763,-8.402586,4.306523,-5.084596,-0.609088,5.453562,3.956065,-0.785433,3.366750,4.553360,8.240535,-4.982112,-8.898829,0.244964,-6.344603,-2.365754,-3.583048,-9.374906,-4.206370,-1.760960,-7.824855,9.880497,7.402265,1.856405,-6.825870,-1.559389,-2.205943,9.717091,-8.073269,-1.018535,-4.686955,-4.591676,0.474113,-0.364580,7.037706,-4.055029,-9.110559,-4.302038,3.495491,-5.381744,-8.960530,-4.996888,1.845158,0.150399,-5.899908,-4.792901,-1.923066,-0.474331,-0.748594,-3.177413,2.342857,3.782928,-1.085789,1.372463,-7.301612,6.044718,-6.664436,0.158100,-7.549723,2.038944,-1.619257,9.717094,-9.222327,4.394143,-9.103313,8.373126,-3.017807,2.526499,-2.594578,8.533765,-9.863260,9.455341,-0.417848,3.257335,4.638947,1.722187,-8.913350,5.120639,-8.677352,9.844761,-9.178969,0.936388,-2.704648,5.370279,2.850522,0.048716,3.180633,2.882322,8.023701,-4.671929,9.645390,-5.371408,-5.537111,1.247403,-6.793728,9.783831,3.371349,-4.044789,7.941233,-5.638635,-3.504958,4.392945,-3.807368,7.786971,4.246889,-8.017851,2.966609,-3.169519,-1.273780,5.578895,3.477289,2.142513,8.654183,-1.030744,7.536423,0.682003,-1.230963,-1.005687,1.202583,-3.195522,8.682140,-2.958855,7.447441,9.275939,-3.000666,3.320229,6.863280,-1.991300,-7.234829,-1.910132,7.832740,2.782205,-0.131451,-6.554599,9.363685,-1.572436,8.599835,7.751780,7.623814,4.295273,8.336585,6.004552,0.246988,5.090359,-6.296841,-9.631659,-3.574416,8.091666,6.494355,-9.544603,-3.552478,5.256910,0.459778,5.291589,8.088406,-9.639617,4.297872,-1.401222,5.335712,-6.203435,3.255988,5.731062,-9.924307,-9.415561,-0.992572,-8.574916,5.409958,9.018455,-0.396489,9.750017,9.309735,2.336536,-1.851915,2.065903,2.398756,5.941710,-1.500610,-2.099034,-1.342598,-4.251777,-1.361738,7.904592,7.738972,-3.133237,4.023002,2.790230,-4.905832,6.698941,-4.091747,-2.725832,-9.615539,-2.306585,5.421200,8.663364,1.700723,-6.919429,-6.853229,6.217105,-8.787410,-9.108412,-3.601590,-0.242267,-0.993871,7.635607,9.147467,-8.133390,9.000944,-9.243804,-3.037794,-6.279943,-8.760465,7.468325,5.445305,-4.501260,-2.446801,5.309826,-7.362590,9.889607,-4.814342,-8.599190,0.091182,8.576873]], dtype = "float64")#candidate|6568|(1, 1170)|const|float64
const_6569 = relay.const([-8,4,-6,4,7,9,-7,-5,-3,4,7,-4,8,-5,-5,-4,1,-9,-6,9,9,7,2,8,4,-3,-9,-8,-8,9,-9,6,-1,-7,8,-10,5,2,1,1,5,8,5,-1,1,6,-3,8,-9,-10,-2,-3,-8,-4,-6,-6,-3,3,2,-8,-5,1,-9,1,5,-5,2,5,3,-10,-6,-8,-5,-4,-6,-8,-9,9,9,7,1,-2,-10,-4,-6,-1,-5,9,1,-4,8,-10,-2,-6,-8,6,3,-4,-7,-5,5,5,-5,7,-10,5,-7,-6,3,-2,2,-2], dtype = "uint32")#candidate|6569|(112,)|const|uint32
call_6566 = relay.TupleGetItem(func_1611_call(relay.reshape(var_6567.astype('float32'), [5, 14, 4]), relay.reshape(const_6568.astype('float64'), [10, 117]), relay.reshape(const_6569.astype('uint32'), [112,]), relay.reshape(const_6568.astype('float64'), [10, 117]), ), 0)
call_6570 = relay.TupleGetItem(func_1616_call(relay.reshape(var_6567.astype('float32'), [5, 14, 4]), relay.reshape(const_6568.astype('float64'), [10, 117]), relay.reshape(const_6569.astype('uint32'), [112,]), relay.reshape(const_6568.astype('float64'), [10, 117]), ), 0)
output = relay.Tuple([call_6556,call_6566,var_6567,const_6568,const_6569,])
output2 = relay.Tuple([call_6557,call_6570,var_6567,const_6568,const_6569,])
func_6583 = relay.Function([var_6567,], output)
mod['func_6583'] = func_6583
mod = relay.transform.InferType()(mod)
mutated_mod['func_6583'] = func_6583
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6584 = relay.var("var_6584", dtype = "float32", shape = (140, 2))#candidate|6584|(140, 2)|var|float32
func_6583_call = mutated_mod.get_global_var('func_6583')
call_6585 = func_6583_call(var_6584)
output = call_6585
func_6586 = relay.Function([var_6584], output)
mutated_mod['func_6586'] = func_6586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6263_call = mod.get_global_var('func_6263')
func_6264_call = mutated_mod.get_global_var('func_6264')
call_6592 = relay.TupleGetItem(func_6263_call(), 0)
call_6593 = relay.TupleGetItem(func_6264_call(), 0)
var_6596 = relay.var("var_6596", dtype = "int8", shape = (16, 9, 7))#candidate|6596|(16, 9, 7)|var|int8
bop_6597 = relay.divide(call_6592.astype('float32'), relay.reshape(var_6596.astype('float32'), relay.shape_of(call_6592))) # shape=(16, 9, 7)
bop_6600 = relay.divide(call_6593.astype('float32'), relay.reshape(var_6596.astype('float32'), relay.shape_of(call_6593))) # shape=(16, 9, 7)
output = relay.Tuple([bop_6597,])
output2 = relay.Tuple([bop_6600,])
func_6608 = relay.Function([var_6596,], output)
mod['func_6608'] = func_6608
mod = relay.transform.InferType()(mod)
var_6609 = relay.var("var_6609", dtype = "int8", shape = (16, 9, 7))#candidate|6609|(16, 9, 7)|var|int8
output = func_6608(var_6609)
func_6610 = relay.Function([var_6609], output)
mutated_mod['func_6610'] = func_6610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5854_call = mod.get_global_var('func_5854')
func_5855_call = mutated_mod.get_global_var('func_5855')
call_6614 = relay.TupleGetItem(func_5854_call(), 1)
call_6615 = relay.TupleGetItem(func_5855_call(), 1)
uop_6632 = relay.rsqrt(call_6614.astype('float64')) # shape=(16, 9, 7)
uop_6634 = relay.rsqrt(call_6615.astype('float64')) # shape=(16, 9, 7)
output = relay.Tuple([uop_6632,])
output2 = relay.Tuple([uop_6634,])
func_6636 = relay.Function([], output)
mod['func_6636'] = func_6636
mod = relay.transform.InferType()(mod)
mutated_mod['func_6636'] = func_6636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6636_call = mutated_mod.get_global_var('func_6636')
call_6637 = func_6636_call()
output = call_6637
func_6638 = relay.Function([], output)
mutated_mod['func_6638'] = func_6638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6244_call = mod.get_global_var('func_6244')
func_6246_call = mutated_mod.get_global_var('func_6246')
call_6639 = func_6244_call()
call_6640 = func_6244_call()
uop_6641 = relay.atanh(call_6639.astype('float32')) # shape=(16, 9, 7)
uop_6643 = relay.atanh(call_6640.astype('float32')) # shape=(16, 9, 7)
bop_6649 = relay.bitwise_xor(call_6639.astype('int8'), relay.reshape(uop_6641.astype('int8'), relay.shape_of(call_6639))) # shape=(16, 9, 7)
bop_6652 = relay.bitwise_xor(call_6640.astype('int8'), relay.reshape(uop_6643.astype('int8'), relay.shape_of(call_6640))) # shape=(16, 9, 7)
output = bop_6649
output2 = bop_6652
func_6654 = relay.Function([], output)
mod['func_6654'] = func_6654
mod = relay.transform.InferType()(mod)
mutated_mod['func_6654'] = func_6654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6654_call = mutated_mod.get_global_var('func_6654')
call_6655 = func_6654_call()
output = call_6655
func_6656 = relay.Function([], output)
mutated_mod['func_6656'] = func_6656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6654_call = mod.get_global_var('func_6654')
func_6656_call = mutated_mod.get_global_var('func_6656')
call_6675 = func_6654_call()
call_6676 = func_6654_call()
const_6691 = relay.const([[[-9,-7,6,1,-4,-10,-4],[9,-3,1,10,9,4,-2],[-3,-1,9,3,9,1,-1],[-4,-3,6,4,9,9,9],[2,-8,-8,7,-9,5,6],[-1,8,-3,8,9,9,8],[-8,1,10,-6,8,-8,-8],[5,10,3,1,8,-5,3],[-7,-2,-8,8,4,-8,1]],[[-1,8,3,4,-3,9,-4],[10,-10,10,5,-7,-6,9],[7,-10,9,6,4,-9,5],[-10,-4,-10,-9,-6,-8,7],[6,-10,6,-3,5,-8,-1],[10,4,-9,-10,1,-7,2],[-10,1,-7,-10,8,9,-5],[6,3,-2,-4,7,9,-3],[-7,-2,-6,-4,4,5,9]],[[7,10,-8,7,-3,-10,-5],[10,-7,-5,-3,-4,1,3],[9,-9,-4,8,-3,3,-8],[-6,-3,-2,-3,-1,-5,3],[2,1,6,8,8,-5,2],[7,-2,-2,-1,-9,-1,-1],[3,2,8,7,-5,7,2],[4,-9,-4,8,-9,-2,3],[7,2,8,7,9,-1,10]],[[8,9,6,7,-10,-9,3],[-5,9,-2,6,-4,3,9],[-10,3,1,-1,9,-10,-2],[6,-2,-4,7,-9,4,-5],[9,-3,1,8,-8,-10,9],[-4,8,-6,4,-1,-6,3],[-8,-8,-2,-7,-9,-6,5],[1,-5,7,-8,-6,-5,-5],[-9,-10,7,-3,1,4,6]],[[4,-6,-7,4,6,7,6],[7,2,10,-3,1,7,-6],[1,-1,-3,-2,9,4,-9],[5,4,7,-10,-9,-5,8],[4,5,8,-10,4,-3,1],[-8,10,-6,-7,-2,7,1],[4,5,7,-3,5,-6,-7],[-2,8,-9,-5,-3,-5,1],[-8,7,6,-10,-10,-8,6]],[[4,4,-4,-7,-1,7,7],[8,-7,2,8,3,-1,-9],[-10,2,2,3,8,-8,-4],[-10,-8,-9,-7,-8,9,3],[6,8,8,-9,7,6,-2],[2,-1,5,3,4,-4,-6],[-4,4,10,-6,-3,-9,-7],[-4,9,-6,-8,-10,6,-2],[-8,5,7,4,1,-8,-4]],[[-3,-3,-1,2,-5,-10,-3],[10,-7,6,-2,1,-2,3],[5,8,10,6,8,-1,-8],[7,-5,7,-7,4,-5,5],[-5,9,8,1,-1,-1,3],[-1,1,2,-6,10,1,-1],[8,6,-6,7,-4,-2,-3],[5,5,9,-3,3,-2,-3],[4,-1,-1,8,-2,9,-1]],[[-1,6,-2,-2,-6,-6,4],[-2,10,10,8,8,9,1],[4,-1,-8,-10,9,-3,-7],[-3,-6,-8,1,-10,1,7],[8,8,-1,10,7,10,-2],[-2,-4,9,-10,-8,7,3],[8,8,9,-1,-8,-10,10],[2,4,10,8,8,6,-10],[6,3,-5,-1,10,5,-2]],[[4,4,2,9,-6,1,5],[-1,-2,-10,8,-5,-8,-10],[2,7,-2,9,10,7,-5],[1,-6,6,-7,1,2,6],[-3,-2,-8,9,3,-5,-8],[-9,1,-4,2,2,-6,5],[-1,7,-7,6,-1,5,-7],[-5,5,9,-5,10,4,-7],[7,8,4,1,-6,9,6]],[[-9,6,-9,1,-6,2,6],[-10,-8,-6,6,-4,3,5],[-7,-8,3,4,7,-1,-2],[1,-1,-2,9,-5,-7,-1],[9,4,7,4,-8,-2,-4],[7,8,-5,-10,-7,-2,-3],[1,3,10,-8,1,-6,10],[3,-3,-9,10,-1,10,9],[-10,3,8,3,-5,-4,-3]],[[-5,-10,-7,1,-5,2,1],[-4,4,-5,-9,-4,9,-5],[6,-5,1,9,10,7,-3],[3,-3,-4,-5,3,-2,-8],[6,5,-9,3,10,1,-4],[-7,-9,10,-9,8,-5,-10],[10,7,-1,-10,-7,-2,6],[6,4,-6,-6,-5,-3,1],[-6,5,10,3,-8,-2,5]],[[9,9,-9,9,-8,-2,-1],[9,-2,-4,-10,1,-4,6],[2,-1,-3,6,-5,-7,-1],[-9,-5,4,-3,4,-3,-9],[-4,6,-8,-6,-7,-3,1],[-9,-1,5,-7,1,9,7],[10,2,3,-9,3,2,-2],[-4,2,-5,2,-9,1,2],[5,4,5,1,-2,-1,-8]],[[6,-5,-2,6,2,-7,8],[8,8,9,-3,5,-2,-4],[3,5,3,4,7,-5,7],[-7,-2,6,2,-1,10,9],[-5,5,5,1,-10,-5,4],[-5,4,7,10,-7,9,-7],[5,10,-7,10,-7,-3,-6],[3,10,1,1,-1,3,3],[-5,-8,-6,-10,3,8,1]],[[-4,-10,8,-6,-6,-9,8],[-5,4,3,8,-8,4,-10],[-1,4,9,4,-5,-8,-9],[-8,-9,-10,-2,-2,-4,-1],[-4,-1,-2,-10,-8,-8,-7],[2,3,3,-2,4,-7,6],[-9,-10,-8,7,3,-10,-4],[-1,-5,4,-4,10,3,-2],[10,-2,5,-3,-4,-2,8]],[[9,2,-10,5,-3,-5,7],[-6,-8,8,-7,-3,-7,-9],[-5,3,-8,4,-10,-3,9],[7,-6,6,-9,-4,-7,-7],[6,-5,4,5,-3,-9,9],[7,10,6,6,9,-8,2],[-2,2,-8,8,-5,3,3],[2,-5,-4,2,2,3,3],[-4,9,-7,-3,7,6,-8]],[[1,-2,5,-1,-6,-8,3],[10,5,3,2,-4,-5,-10],[-5,10,2,-7,1,6,5],[8,9,3,3,-7,-8,-2],[2,-1,-2,10,-5,9,-9],[5,-2,1,2,3,-2,2],[1,-2,-8,9,8,-2,-10],[-10,9,-4,-10,-10,9,-8],[4,-2,4,10,-8,9,-2]]], dtype = "int8")#candidate|6691|(16, 9, 7)|const|int8
bop_6692 = relay.multiply(call_6675.astype('uint16'), relay.reshape(const_6691.astype('uint16'), relay.shape_of(call_6675))) # shape=(16, 9, 7)
bop_6695 = relay.multiply(call_6676.astype('uint16'), relay.reshape(const_6691.astype('uint16'), relay.shape_of(call_6676))) # shape=(16, 9, 7)
output = relay.Tuple([bop_6692,])
output2 = relay.Tuple([bop_6695,])
func_6698 = relay.Function([], output)
mod['func_6698'] = func_6698
mod = relay.transform.InferType()(mod)
output = func_6698()
func_6699 = relay.Function([], output)
mutated_mod['func_6699'] = func_6699
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6739 = relay.const([[[-2,-10,3,-8,-8,5,-1,5,-6,10],[-10,-9,4,1,-5,-10,6,-5,-7,1],[-1,9,-9,1,-9,7,8,6,-7,10],[10,9,7,8,-9,3,-7,-4,-7,4],[-8,7,-7,7,-10,6,-4,-9,-10,-9],[7,-1,-4,-1,-1,-9,7,4,9,-10],[8,-2,-2,5,9,5,6,2,-10,-3]],[[9,-2,7,10,9,8,5,-2,-2,-3],[3,-9,-1,-10,-6,-5,-8,1,3,3],[3,-1,-1,7,10,-4,-7,3,-6,10],[10,6,2,-3,-9,9,8,-2,1,-2],[-9,-5,1,-4,-2,8,-2,8,-10,-3],[7,-2,-1,6,4,-4,-6,9,8,-4],[-2,10,5,-9,1,5,-1,-3,-1,-6]],[[-6,-10,-1,10,4,10,6,-9,-10,-7],[8,8,-1,4,1,9,-10,10,7,1],[-5,7,-10,4,3,-2,-5,2,3,-2],[-6,2,9,7,3,9,-8,-9,1,2],[-5,6,-5,8,4,2,10,-8,-5,8],[5,-4,-2,-5,6,-6,2,-3,-10,-4],[-2,6,10,4,3,1,-7,-2,10,9]],[[-5,-9,7,-3,-4,1,3,7,-3,9],[2,3,5,-6,3,10,-2,-4,-2,6],[-3,-1,4,2,-10,-5,-10,-10,4,-9],[5,4,10,-8,4,-8,1,-5,-7,4],[7,10,8,2,7,-8,3,-10,1,-3],[2,-3,-1,9,7,-5,-3,-4,6,2],[7,6,5,3,5,-10,-9,9,-1,-8]],[[-2,-3,-10,7,-2,1,-2,-1,6,2],[2,-6,4,1,-4,6,-3,-10,-7,-1],[7,-10,3,-5,-7,-10,-8,10,-4,9],[-9,3,-5,5,1,3,-1,8,-6,3],[-9,-2,9,-8,10,-8,-4,1,3,3],[3,3,-9,-6,-3,8,-1,-10,-10,-1],[8,1,2,5,-7,1,-4,-4,5,-10]],[[10,-2,-6,-9,-1,-9,4,2,2,-3],[-6,7,-9,5,-2,2,-10,-10,7,7],[4,8,5,-5,-9,-6,-3,7,5,-5],[6,8,4,-6,-9,-10,8,2,1,-2],[6,-7,2,-10,-7,-3,-2,3,-9,6],[2,3,-7,-5,4,1,5,8,6,-4],[3,-8,-8,-1,-9,-5,5,3,2,-2]],[[-5,-8,-1,-10,6,-1,-3,4,-1,-6],[-1,3,8,-10,4,-9,-3,3,-3,2],[-9,8,4,-3,6,3,-2,-5,-2,1],[5,5,6,3,-3,1,-9,-5,-3,-6],[-10,8,7,2,-6,-5,4,-10,-10,-2],[-9,-4,-3,1,-7,-5,-8,-1,-6,-4],[8,5,1,-4,8,5,-10,6,-8,-7]],[[6,6,-7,-8,-7,-5,-4,-7,-4,8],[-7,-1,-2,10,6,8,1,5,-8,1],[7,-10,-6,8,10,-4,-10,3,4,3],[3,1,5,2,-10,1,-8,-2,10,4],[7,6,-3,-1,-4,-6,-6,-1,-4,6],[-5,-3,8,7,7,-9,-9,4,-5,10],[9,-6,-2,8,1,10,-9,-9,10,6]],[[-7,-2,9,10,-10,5,4,-4,10,2],[6,-7,9,-5,-4,-8,5,7,5,9],[-6,7,-8,8,-5,-9,-6,-9,4,6],[4,-9,4,-4,-5,-6,-7,-3,-4,-3],[3,1,10,-4,1,-2,-2,5,-1,6],[-1,-7,5,-3,10,7,8,3,-7,2],[-5,-2,-7,2,5,-6,-10,3,2,4]],[[4,7,9,-9,5,4,-6,-8,5,-5],[-7,5,1,-5,-7,-8,10,2,5,8],[1,-1,-10,3,8,6,-6,-5,2,-3],[8,-8,7,10,1,4,-9,10,6,5],[-1,1,3,-6,5,3,-9,4,3,9],[-3,8,2,3,3,-1,-10,-2,8,9],[-5,9,-5,3,-10,-4,9,-6,9,-8]]], dtype = "int64")#candidate|6739|(10, 7, 10)|const|int64
var_6740 = relay.var("var_6740", dtype = "int64", shape = (10, 7, 10))#candidate|6740|(10, 7, 10)|var|int64
bop_6741 = relay.bitwise_or(const_6739.astype('int64'), relay.reshape(var_6740.astype('int64'), relay.shape_of(const_6739))) # shape=(10, 7, 10)
var_6756 = relay.var("var_6756", dtype = "int64", shape = (10, 7, 10))#candidate|6756|(10, 7, 10)|var|int64
bop_6757 = relay.logical_xor(bop_6741.astype('uint32'), relay.reshape(var_6756.astype('uint32'), relay.shape_of(bop_6741))) # shape=(10, 7, 10)
uop_6768 = relay.tan(const_6739.astype('float32')) # shape=(10, 7, 10)
func_6546_call = mod.get_global_var('func_6546')
func_6547_call = mutated_mod.get_global_var('func_6547')
call_6770 = func_6546_call()
call_6771 = func_6546_call()
uop_6777 = relay.asin(uop_6768.astype('float32')) # shape=(10, 7, 10)
bop_6788 = relay.floor_mod(uop_6777.astype('float32'), relay.reshape(var_6756.astype('float32'), relay.shape_of(uop_6777))) # shape=(10, 7, 10)
func_1168_call = mod.get_global_var('func_1168')
func_1171_call = mutated_mod.get_global_var('func_1171')
var_6795 = relay.var("var_6795", dtype = "uint16", shape = (384,))#candidate|6795|(384,)|var|uint16
call_6794 = func_1168_call(relay.reshape(var_6795.astype('uint16'), [12, 16, 2]), relay.reshape(var_6795.astype('uint16'), [12, 16, 2]), )
call_6796 = func_1168_call(relay.reshape(var_6795.astype('uint16'), [12, 16, 2]), relay.reshape(var_6795.astype('uint16'), [12, 16, 2]), )
uop_6799 = relay.asinh(bop_6788.astype('float32')) # shape=(10, 7, 10)
func_99_call = mod.get_global_var('func_99')
func_102_call = mutated_mod.get_global_var('func_102')
var_6808 = relay.var("var_6808", dtype = "float64", shape = (264, 1))#candidate|6808|(264, 1)|var|float64
call_6807 = relay.TupleGetItem(func_99_call(relay.reshape(var_6808.astype('float64'), [11, 8, 3])), 0)
call_6809 = relay.TupleGetItem(func_102_call(relay.reshape(var_6808.astype('float64'), [11, 8, 3])), 0)
uop_6811 = relay.rsqrt(uop_6799.astype('float32')) # shape=(10, 7, 10)
func_6583_call = mod.get_global_var('func_6583')
func_6586_call = mutated_mod.get_global_var('func_6586')
const_6814 = relay.const([-6.218853,-5.021476,-8.767514,-8.176258,-7.171365,3.602236,-4.074267,6.273699,8.143512,4.025383,-3.528761,5.307045,8.612452,0.822480,-0.538061,1.176874,-2.069213,0.046515,0.800569,3.732666,-8.666140,-5.103403,-5.541957,-9.924086,1.142675,-0.206939,6.112066,-0.869968,4.852172,3.600477,-9.434952,-6.732523,-0.108329,5.319237,9.463543,-8.632192,1.608712,9.616275,-3.700935,7.043970,9.288909,0.751105,-4.311391,5.561721,9.373392,5.514378,2.136813,-8.337240,-0.968591,8.887214,1.716743,3.921629,-0.180784,-7.131335,-9.740724,2.613462,3.863141,-1.162045,-5.662054,-9.826525,-0.219042,1.598087,3.059928,-7.952709,-9.534112,-5.870442,6.174760,-8.832040,-3.343855,-5.239970,3.305405,-6.390943,7.250651,-2.259609,-7.001599,2.911767,-8.382271,2.231964,8.048217,3.124407,4.801869,1.455933,-0.460223,2.792281,-3.705429,5.544820,1.520066,9.330715,2.432580,-2.143189,-7.429692,-8.243213,6.633432,-8.407132,4.791495,-7.292898,0.791679,4.708114,5.001452,-5.731382,9.218556,7.317061,1.713703,2.438688,-5.506623,2.141163,2.451171,-0.414655,8.908168,7.801367,-5.000989,8.219229,8.326855,9.589926,6.359475,0.319811,-5.484266,2.218030,6.135443,-4.564310,1.644272,-3.669810,7.642922,7.343787,9.587988,-0.462016,-5.441106,-1.788925,-7.077770,-5.354750,7.558211,-7.354156,9.559333,-3.187987,-7.766112,-3.156906,-5.843093,8.800220,2.995035,-2.715966,4.474717,2.251317,-5.438781,-2.151502,0.706551,1.965316,-3.833869,-8.276868,8.446246,-7.777165,9.717963,8.781154,9.590920,-7.973554,4.523689,4.666109,6.737250,-2.470817,-9.115139,-3.280549,-4.377277,8.394470,-8.529199,-3.553530,-9.859383,3.776631,2.373775,0.377119,8.729962,-1.710930,-9.886316,-8.872618,-9.494152,0.327631,5.129988,-9.616275,8.939561,-1.852676,-2.586666,-3.167420,7.235528,-3.163257,-9.394356,4.954129,7.892817,7.550940,4.115270,9.089462,-4.227354,8.562131,7.634300,0.807903,3.471031,-4.283269,-5.383991,-9.163497,-9.213567,3.702015,-1.573861,3.279884,-9.207334,2.704968,-9.681857,6.371796,1.262823,-5.006591,-3.512236,-8.902852,1.887099,9.909504,3.024472,6.278399,1.305838,-6.149378,7.040108,8.926304,-6.471052,3.827478,-8.009669,-6.344587,9.752278,-6.856726,-6.443591,2.074071,1.557427,-3.243980,-9.097015,-3.746263,-5.821619,8.344679,-7.173715,0.738670,4.532506,9.551892,4.284431,-1.939326,-4.106510,-6.362040,9.189539,-0.126831,9.990040,5.153230,-8.432872,0.650660,-3.290540,-2.492700,1.642267,-9.682725,3.002630,-2.499921,5.666650,2.847441,2.369409,-1.622340,-6.408112,4.947657,1.426975,3.120175,1.235614,-9.883962,-4.794272,-1.550318,-5.651764,-4.728799,2.538710,-7.180354,4.553957,-7.218877,-7.168361,8.234098,-4.792742,-4.799344,3.501223,3.121147,-7.995275,0.602533,4.605888,-1.093202,-8.317353,2.220947], dtype = "float32")#candidate|6814|(280,)|const|float32
call_6813 = relay.TupleGetItem(func_6583_call(relay.reshape(const_6814.astype('float32'), [140, 2])), 3)
call_6815 = relay.TupleGetItem(func_6586_call(relay.reshape(const_6814.astype('float32'), [140, 2])), 3)
func_5558_call = mod.get_global_var('func_5558')
func_5561_call = mutated_mod.get_global_var('func_5561')
const_6820 = relay.const([-8.395978,-6.308625,-8.648796,-7.487528,5.472826,-5.368749,0.563255,-2.516006,3.340499,9.822109,3.840780,6.597001,2.702723,8.187879,-6.787020,4.384948,-1.850442,9.733333,-5.300833,0.065445,7.267842,2.459548,6.698205,-8.045410,3.670867,2.265382,4.359571,-7.290637,2.356679,9.939902,4.544470,-4.188584,-9.924124,-7.780429,2.084471,3.840810,3.323690,7.118124,-2.473390,3.469465,-6.041673,8.876371,3.323543,-9.038983,3.312992,-8.078153,9.146124,-5.507086,-3.378961,-2.020064,-3.979332,1.615040,-0.856204,1.558344,-5.846329,1.995075,1.059299,-6.636787,-9.222651,4.048116,-5.735518,-9.651758,4.331615,-0.655214,6.801902,5.759693,-9.668638,-5.486874,-5.522653,8.637874,-0.029420,4.909953,7.094679,6.808612,-2.786836,1.481998,-4.528015,-9.934733,-9.905127,-9.008791,1.646309,-5.021616,-6.134735,7.051194,-1.638154,4.207391,1.673050,-5.186875,0.865169,-9.010964,0.963609,-6.600063,-9.286287,0.257236,9.766626,-3.778927,3.313626,-7.992628,0.958891,-4.548889,5.072100,6.985739,-6.746763,8.574308,5.049752,-6.269050,-3.314907,-3.836588,0.825344,0.542320,7.373321,-6.090697,-5.239592,-6.542501,-2.188616,1.207989,2.544139,-0.123363,6.922701,9.692076,6.791787,0.416660,-5.381129,-0.320512,0.218946,2.131261,-5.098519,2.640153,-1.661213,-3.258764,2.702285,-5.650694,-6.601240,-9.019711,9.941021,-4.350395,5.077586,-8.849510,-8.989352,-3.123791,-0.806983,-3.858720,0.184106,-5.156605,-2.594295,-9.494587,-7.307932,-3.126724,7.751387,-4.450578,-6.286885,5.666777,-9.130992,9.861786,6.788570,-7.819659,3.637789,-5.976557,5.997236,8.799368,4.985431,9.853092,-5.823024,8.339797,-8.306102,-9.800885,-2.562742,5.753995,5.830926,3.370468,-9.896390,7.324067,7.031906,-3.508683,-1.640626,-0.664934,2.241416,0.679359,6.650944,6.336716,0.290401,-0.153515,4.920801,-2.026437,-4.193360,8.706315,-7.653734,3.425808,-3.664594,-1.804585,7.890190,5.012163,-1.277226,-8.625426,5.424629,5.120470,-2.463829,-9.780982,9.836457,-9.775831,7.956023,-7.684105,-7.468304,0.926432,2.725039,3.675762,-0.085525,8.084507,-2.132472,-9.581444,3.159094,-3.872501,6.981834,-0.196893,6.478840,-7.196373,-9.373726,-9.212657,-1.075093,-6.297191,4.439172,-9.555555,-9.584077,-7.173864,-6.500105,-8.245391,1.874956,0.541618,6.776132,1.621068,-6.252746,8.311641,9.167690,-2.420897,9.469161,1.993822,-8.205986,-3.181467,-9.972267,6.428364,0.932755,-4.953416,-1.810429,7.092202,1.883445,3.013330,7.225160,2.749494,-6.820839,-6.241176,-5.516533,4.435907,-4.542793,8.438849,-1.045218,2.358723,-8.906533,-1.700354,2.616982,-3.907567,1.253403,-0.369571,7.050647,4.282420,7.756987,5.171616,0.181383,9.676405,6.009427,-6.917078,7.570419,6.021266,-3.945329,9.233245,-4.981598,-9.518457,1.805037,-9.191139,-7.433659,-3.351388,4.826437,4.731224,-3.339775,-2.402312,2.886781,-2.446534,-6.281145,-4.021353,1.462629,-8.902473,-8.316384,2.129522,-2.857406,-9.202115,1.083064,-8.493788,-2.699975,-9.526311,-4.235612,-2.868744,8.719872,8.444002,2.796792,-7.156023,5.023809,-5.522274,-8.381531,0.002095,1.803761,0.421234,-9.349105,8.456452,-0.033931,-1.721540,7.136414,-2.764735,1.552661,-6.064735,-2.604906,1.946824,-1.981626,4.832689,-7.581012,0.518174,-6.631598,-4.432613,-2.484204,3.850653,8.261430,-9.400399,2.385207,-0.489397,-5.989530,2.409818,7.883630,-7.247649,-2.535779,-3.272724,-6.429406,-6.526261,3.764893,0.157408,-4.696334,-2.641753,-1.692583,-2.739536,6.941637,-7.636313,-6.446339,-1.397576,7.276995,6.495734,-4.659990,-3.596529,3.563066,6.106383,7.484868,-0.298679,-7.393552,-1.851026,3.394268,-0.660206,9.692318,-9.165914,-1.876691,8.146615,8.150720,6.076465,0.320683,-9.486695,-3.085671,6.331268,4.854534,2.200895,-7.681361,-9.321238,9.481049,-2.428764,-6.626921,-6.613816,-5.913295,-2.923038,-2.373908,0.255892,7.368827,-0.251116,-2.908571,4.019669,2.332497,7.275854,-8.901964,-1.365464,-6.512088,-6.017524,5.256617,5.833324,3.390839,-8.804448,9.946645,4.188674,6.899515,-5.060725,9.214090,2.030994,-2.351987,-7.761865,9.665445,-7.386340,7.132762,-1.128840,4.360569,-8.276087,2.017417,-2.091452,8.440954,1.540877,6.383630,-7.492681,4.718320,-6.010196,-6.025623,2.593179,3.229052,7.067904,-6.386748,4.764262,5.325715,-9.658386,-2.416368,6.846805,-9.863105,2.852481,-8.235541,-9.823733,8.344557,2.750770,0.519012,7.016328,8.900450,-3.575176,-2.292080,2.103144,7.705906,-5.713003,8.353995,1.695111,-8.018332,8.575194,-6.289681,6.705753,-7.748021,9.084568,5.908055,-6.131179,1.186028,-5.796868,8.132760,3.892199,-7.150082,-6.008411,0.408863,2.632466,-8.167240,-7.826328,8.168692,8.012447,6.096853,3.886653,1.033541,1.352573,-5.200096,3.938171,3.012830,6.384072,-2.234638,6.096784,9.687980,-9.375353,-4.282905,3.132172,-9.963847,9.120072,2.642587,-9.666828,4.226204,-2.830454,2.103404,5.359522,-6.005189,-5.182414,-0.293947,5.745661,3.579547,-2.489937,-9.508875,7.536971,-3.756943,-7.671568,0.723043,-8.181533,-0.212371,9.955305,-3.339904,0.292540,4.860548,-5.175173,2.086030,5.121191,7.546802,-5.948861,2.850227,-1.097187,7.095555,-4.194265,3.246218,7.909642,2.467913,0.810263,4.449234,-6.760815,1.119753,-3.287842,-3.738007,8.769672,8.578949,-5.148310,9.468490,-0.241640,8.685775,6.770035,-7.266791,5.359487,3.045082,6.743478,2.754709,1.411925,-9.782922,3.181495,-0.988991,-9.318784,7.402946,-2.926983,9.928218,0.264311,1.502862,2.061005,6.387282,9.254044,-4.497726,8.452028,9.505769,-1.160963,-9.917275,-0.196806,-5.073385,2.166250,1.915014,-3.827836,-1.325557,-2.422817,-2.029708,3.650373,-7.625768,2.325470,-7.773588,-2.458528,8.493952,7.660816,-2.587792,-7.849910,5.075297,-5.424663,-1.854512,5.832598,-9.340946,-3.755996,-0.197182,-5.514016,5.194304,0.562989,-7.497722,0.803049,-4.347111,-5.009173,-2.993162,0.091632,-6.831706,6.484628,-3.949192,1.456762,-5.732557,6.281157,-8.616649,6.895549,5.075042,4.962426,-2.497964,-4.781476,8.865450,4.693773,3.770144,5.686029,2.982539,-2.499370,-3.310288,-4.948908,-3.046651,5.054667,-7.856969,-4.232440,7.097619,9.734092,-9.060545,-6.263838,-1.203240,2.493079,-7.805566,9.624342,6.810559,7.565583,-7.989591,-2.893601,5.271580,2.655486,-1.109304,-0.892817,4.802818,5.461655,6.566037,4.734487,-5.885686,5.655132,-4.356012,-4.888830,7.741417,2.320505,0.601409,-5.771385,8.276870,-2.270696,5.246529,1.815740,2.053157,-9.807630,-5.201210,-8.678366,-6.650666,5.325435,7.064871,0.634291,4.105764,-8.650807,-1.467894,5.572211,-1.588483,-6.968585,-5.638562,-9.274726,-1.472245,-4.121783,-2.862500,6.144173,4.275065,2.542450,-0.631125,6.260285,1.815705,2.833621,-5.135666,1.707192,-2.792940,-0.440367,1.332127,-0.019944,2.822711,-8.369089,-8.302189,-7.234697,-6.386285,-1.981984,-6.769472,-1.366143,0.961590,-7.492739,0.379987,-4.225357,5.606757,-4.832087,7.564302,-5.745212,-5.583161,-3.158801,5.218793,-2.818681,1.751364,-5.529597,-1.708789,4.176164,-4.014040,3.586787,-1.952724,-7.595310,-3.222641,-4.960081,1.196984,-1.566053,-9.728674,-1.989364,5.588063,5.976276,0.361116,9.337573,9.186379,9.040110,-6.336475,3.759572,-7.212956,-9.020688,-2.111437,-9.867411,8.049695,2.659411,-6.898892,4.399785,-0.944886,-3.782413,6.351262,7.946929,-5.515919,-0.387338,7.334630,6.762756,8.258779,-6.450731,2.156794,-9.104699,8.201259,-9.325156,1.486661,-9.462366,-7.203751,-3.571332,-4.648600,-2.359744,-9.517354,2.144489,-5.268072,-6.320184,-3.051556,-9.339676,2.976889,-5.912484,-7.120696,-1.938878,4.142381,-3.647842,9.119534,2.580793,-3.063629,6.196307,-0.687395,9.049431,4.636860,2.547996,-3.720384,2.921522,-9.117755,1.563181,-5.243547,-9.255575,-8.143548,-8.220260,8.763034,0.743046,7.041434,4.673381,1.742348,4.099030,-0.353781,-0.289451,-0.471776,-2.491356,8.768508,5.764874,-1.696797,4.655641,-1.977244,-0.530092,4.295756,-4.792578,-2.136396,7.109566,-1.904297,9.986477,0.415779,8.755872,5.787262,-5.487835,5.355502,8.012217,3.383700,-6.802057,-1.939646,-8.218364,-2.213126,-9.525285,-4.865067,-0.822603,-4.248969,5.252804,6.915553,6.036932,-5.972490,-3.108174,-2.948551,9.127776,-8.211377,0.431932,5.635498,6.464430,-9.784596,-3.682215,3.715152,8.623982,-9.647883,8.114507,-7.887815,9.754863,-3.462861,-6.647241,4.956324,-5.887230,-3.254474,-7.698650,9.042576,7.720360,0.652755,-1.840380,8.719585,2.268307,-8.824308,0.401076,7.779038,-4.328569,-1.234268,-9.713293,-9.780395,-7.382530,2.215992,-6.149391,-7.999629,-4.630624,-8.868838,-9.641055,2.313939,2.245493,-0.205890,-6.661328,2.527953,1.574021,2.618805,8.275417,-3.673702,-5.718408,-5.188948,9.776064,6.283886,6.976664,-1.996789,1.559267,0.219146,-0.375365,4.365479,2.388116,7.570124,7.771815,8.300602,-9.194968,-6.329054,0.062131,-4.270038,8.889427,-1.086400,9.093603,-1.072749,-1.279452,3.853337,7.076125,4.431050,-3.471003,4.341964,-6.170524,-7.199782,-0.367053,7.825705,-6.483634,-7.864866,8.706081,-8.562082,-0.065379,4.277639,-8.882022,4.945739,-5.631856,-5.511514,4.794742,-2.080176,-3.228976,-6.413614,1.871187,-4.279200,2.892874,5.773610,-0.115989,4.027422,-3.445308,5.449771,-8.692792,-8.368517,-6.893889,6.361764,-8.463210,1.879718,-2.993948,7.446527,7.847061,9.992009,1.991510,-3.467261,-2.843271,-8.492139,-8.565937,9.904891,-9.964840,4.608779,5.603940,-2.817866,-0.621698,-1.744476,5.751289,-3.312859,-5.871137,-0.319375,-4.709119,2.999471,-2.086692,8.553617,7.291944,2.951524,-6.489579,-6.961582,4.339488,9.770440,-5.166827,7.834814,-2.130260,7.121535,2.966390,-3.444155,-7.941893,6.835416,7.197988,7.938536,2.809858,-8.892013,-9.483274,7.837633,1.555663,6.709894,0.083354,6.803943,4.550421,-1.865300,-9.709661,-8.610987,-0.916476,-4.318485,9.236425,-0.811539,-1.962849,-2.105368,-6.919598,5.875920,4.876532,8.430100,9.878201,-0.229299,3.904552,4.806919,8.200976,-9.036091,1.968228,7.201593,7.882430,-7.823206,-4.911300,-9.105381,-4.452213,-5.859468,-4.123024,-2.426436,-5.015305,-8.672543,3.638236,-8.982358,-6.818007,-3.340981,0.097978,-2.629374,-9.644472,-9.673633,3.336349,6.018541,-2.425971,0.885004,6.657824,-3.900859,-8.338413,-1.322671,5.603476,-6.864977,7.847933,8.013510,-8.992336,2.679648,-8.536223,6.215982,-8.048771,-7.334975,-3.548865,-8.603508,1.493993,-1.749177,0.999627,-7.494109,3.133769,-2.519230,3.174660,6.455453,5.407166,-4.052516,-4.093917,-5.864138,-6.730872,-8.703695,-2.226346,3.951840,4.616729,-3.835033,-6.405475,8.113558,0.287697,-4.188095,-0.923383,4.497765,5.398764,6.073749,1.070955,-9.459893,-7.319734,9.529116,0.348325,0.058376,-1.108981,-1.093998,-6.442486,-8.225216,3.113586,-8.160900,-5.691381,-6.119572,-6.773440,0.075442,3.722280,5.856375,-5.106899,-0.625001,1.856145,8.043590,3.734623,-6.617530,4.382321,-6.602111,-8.659805,-8.641780,-7.164137,-7.300138,9.540949,-7.313036,0.122401,-8.578808,-9.096968,-2.678323,-9.509884,1.332212,1.440585,2.753191,-1.567698,4.186828,8.840272,7.399341,-5.884287,-5.643011,-5.680595,-8.157340,-5.511198,6.710612,-1.350723,3.601776,0.162080,-3.121580,-5.060740,-1.245300,6.568516,4.746272,5.889465,-5.744437,-8.068158,8.000262,-8.882640,3.819899,0.918538,7.074811,-2.938394,-1.722218,-7.072764,-7.929119,9.621246,4.060681,-5.677240,7.545130,-7.803386,-0.907356,-1.027621,3.298069,0.313372,5.091889,3.343619,-0.864974,8.191767,-5.016503,-1.618056,2.938655,7.340678,-7.088593,9.215815,4.055899,-7.736157,3.313266,-9.141322,9.397581,1.044019,-2.922164,6.919734,-9.971884,7.687513,-1.041442,0.580881,8.776575,4.803155,-3.535462,4.173066,-0.593199,9.735542,-5.285799,-7.637112,-4.435461,6.845519,-3.652902,5.504937,0.682644,6.837048,-6.914654,1.225122,0.148806,-3.360987,-0.069371,-8.670245,8.455736,-4.522765,7.454767,8.447352,-1.977212,-4.825137,4.080545,1.630278,-3.298267,4.370926,6.622438,9.136177,2.866114,-2.940649,4.967933,-9.328871,2.351876,9.931568,6.219715,-4.489210,6.614978,-9.056425,-9.805652,2.022283,4.135492,-9.305050,-2.776478,0.128634,7.696246,8.421138,-9.403570,6.391269,-2.507820,-1.798571,6.601812,7.878671,1.163292,0.618731,6.574602,6.032894,9.015607,4.449115,2.938383,9.161818,-2.415281,6.052569,-0.934085,-9.555662,9.502248,-3.303123,4.201293,5.473361,-8.922842,1.389704,-3.577568,-8.543915,-7.933885,2.806681,-8.037328,-6.429549,3.254545,-9.397218,-5.570093,-2.761701,2.649476,-5.040267,-7.618866,-3.451142,-9.639998,-5.515446,-1.707262,8.582385,-8.302192,-4.316940,7.147819,9.744236,-1.118899,1.590980,6.976070,4.596246,-0.725027,4.096831,3.138566,6.515943,2.544366,-6.961381,-3.801380,-8.485602,-1.769426,-4.022075,9.583489,-1.035113,7.783930,-4.798479,1.198047,5.276311,5.759847,-1.885578,-1.613905,9.361572,1.110704,9.176060,8.607183,-7.450364,-2.787260,1.297014,0.716609,-9.324661,4.811471], dtype = "float32")#candidate|6820|(1287,)|const|float32
call_6819 = relay.TupleGetItem(func_5558_call(relay.reshape(const_6820.astype('float32'), [9, 13, 11])), 1)
call_6821 = relay.TupleGetItem(func_5561_call(relay.reshape(const_6820.astype('float32'), [9, 13, 11])), 1)
bop_6822 = relay.less(uop_6799.astype('bool'), relay.reshape(var_6756.astype('bool'), relay.shape_of(uop_6799))) # shape=(10, 7, 10)
func_6140_call = mod.get_global_var('func_6140')
func_6141_call = mutated_mod.get_global_var('func_6141')
call_6829 = func_6140_call()
call_6830 = func_6140_call()
func_1747_call = mod.get_global_var('func_1747')
func_1752_call = mutated_mod.get_global_var('func_1752')
var_6842 = relay.var("var_6842", dtype = "float64", shape = (7, 260))#candidate|6842|(7, 260)|var|float64
const_6843 = relay.const([-1,9,-1,5,-1,-3,7,-4,9,-4,2,-7,-9,-9,7,10,-7,7,4,-7,9,6,5,8,1,-9,9,-9,4,-3,-6,-10,-2,2,-1,4,8,-7,-9,8,-6,2,-4,2,-1,-10,8,1,-9,5,-3,-9,9,3,-10,10,10,9,-5,4,6,6,-6,-3,1,2,-8,-4,-6,7,-9,-1,-10,-5,-3,-2,4,4,-6,-2,6,-10,6,5,10,9,-10,-10,-1,5,5,3,-7,9,4,10,-7,8,2,-9,-5,4,1,6,-9,7,10,5,-7,-1,-8,-4,-1,2,6,-8,2,-6,3,4,-3,-8,-1,8,-9,-2,10,-4,8,4,7,-7,-3,-9,-5,10,4,-10,-3,4,9,-9,-1,2,6,5,10,-10,7,9,2,1,-7,10,1,-2,-7,-3,-1,-10,-5,-2,-7,7,-2,5,8,-2,8,5,-6,-4,-7,3,-4,-6,-8,-3,1,-8,-8,8,10,1,4,9,-4,-4,10,8,10,10,-4,-4,4,-9,6,8,-9,-6,-6,2,-8,8,4,1,-2,6,5,-3,10,1,9,-2,2,-9,2,6,-8,7,4,7,-10,-4,-3,-4,-6,10,8,-4,-1,7,-6,3,-1,5,-10,-3,-7,5,-3,4,-6,7,-6,2,-3,1,6,-3,-6,-2,5,7,2,4,3,-5,2,-2,-2,-8,-5,-4,2,-10,10,-5,7,8,5,3,10,4,-9,-2,3,5,8,-1,-1,-9,2,5,-7,9,5,-8,1,8,-10,-10,-2,-5,8,-1,6,7,5,9,5,3,-9,6,5,-1,-4,-10,-8,7,10,5,1,7,-6,-9,2,2,5,3,-9,6,7,-2,-2,3,10,-9,-1,-6,-1,-7,-6,-6,6,10,-4,-1,-4,-8,-5,-6,6,-3,-4,-4,-3,-9,2,2,7,-5,10,-1,-2,-9,-9,-9,2,4,2,-10,10,6,7,2,-1,4,-7,-4,-6,-4,-7,2,7,-5,3,-4,7,7,-9,7,-7,1,-7,-3,-7,-8,1,4,-3,7,-6,-10,-4,-8,-5,-4,5,-6,-10,3,-7,-2,10,-6,-6,-10,-5,-7,7,-3,10,7,-3,-8,-4,-10,4,9,7,7,-8,8,-9,-4,2,-1,5,10,2,10,-10,7,2,8,-1,5,-3,-7,-9,1,10,-6,9,-2,-5,-9,3,-9,-1,-4,-1,4,-3,-8,-1,6,2,-6,-9,4,-1,8,-8,-8,-3,3,-1,-10,7,-7,-9,-2,4,-4,8,-8,2,4,-3,8,5,8,8,8,-7,6,7,-9,-7,5,-2,8,-9,1,-5,5,-10,-3,2,6,8,7,9,8,8,3,8,-1,4,-6,3,-6,-6,-5,-2,-10,-10,-8,5,-7,1,3,1,-4,-10,-3,-4,9,-10,10,3,4,9,4,-8,-8,-3,6,-7,-9,1,-1,1,-4,-2,4,-6,-1], dtype = "int16")#candidate|6843|(550,)|const|int16
call_6841 = relay.TupleGetItem(func_1747_call(relay.reshape(var_6842.astype('float64'), [10, 13, 14]), relay.reshape(const_6843.astype('int16'), [550,]), relay.reshape(call_6813.astype('float64'), [390, 3]), ), 1)
call_6844 = relay.TupleGetItem(func_1752_call(relay.reshape(var_6842.astype('float64'), [10, 13, 14]), relay.reshape(const_6843.astype('int16'), [550,]), relay.reshape(call_6813.astype('float64'), [390, 3]), ), 1)
output = relay.Tuple([bop_6757,call_6770,call_6794,var_6795,call_6807,var_6808,uop_6811,call_6813,const_6814,call_6819,const_6820,bop_6822,call_6829,call_6841,var_6842,const_6843,])
output2 = relay.Tuple([bop_6757,call_6771,call_6796,var_6795,call_6809,var_6808,uop_6811,call_6815,const_6814,call_6821,const_6820,bop_6822,call_6830,call_6844,var_6842,const_6843,])
func_6848 = relay.Function([var_6740,var_6756,var_6795,var_6808,var_6842,], output)
mod['func_6848'] = func_6848
mod = relay.transform.InferType()(mod)
var_6849 = relay.var("var_6849", dtype = "int64", shape = (10, 7, 10))#candidate|6849|(10, 7, 10)|var|int64
var_6850 = relay.var("var_6850", dtype = "int64", shape = (10, 7, 10))#candidate|6850|(10, 7, 10)|var|int64
var_6851 = relay.var("var_6851", dtype = "uint16", shape = (384,))#candidate|6851|(384,)|var|uint16
var_6852 = relay.var("var_6852", dtype = "float64", shape = (264, 1))#candidate|6852|(264, 1)|var|float64
var_6853 = relay.var("var_6853", dtype = "float64", shape = (7, 260))#candidate|6853|(7, 260)|var|float64
output = func_6848(var_6849,var_6850,var_6851,var_6852,var_6853,)
func_6854 = relay.Function([var_6849,var_6850,var_6851,var_6852,var_6853,], output)
mutated_mod['func_6854'] = func_6854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6140_call = mod.get_global_var('func_6140')
func_6141_call = mutated_mod.get_global_var('func_6141')
call_6859 = func_6140_call()
call_6860 = func_6140_call()
func_6263_call = mod.get_global_var('func_6263')
func_6264_call = mutated_mod.get_global_var('func_6264')
call_6862 = relay.TupleGetItem(func_6263_call(), 0)
call_6863 = relay.TupleGetItem(func_6264_call(), 0)
func_6583_call = mod.get_global_var('func_6583')
func_6586_call = mutated_mod.get_global_var('func_6586')
const_6888 = relay.const([[5.101933,8.424990,-4.172072,1.946358,-2.032365,9.373529,-3.802766,-9.015416,0.345341,6.203486,8.077648,-6.486805,8.204042,-8.192141,-0.246501,-9.377267,-2.260720,0.378340,-1.575215,-3.555725,4.603317,3.492039,-4.315549,-7.276336,-7.969877,-5.417165,-2.636990,-6.913131],[9.351592,4.710402,-1.950548,2.173256,4.473179,-0.151092,2.609297,-9.945476,-4.707069,-8.432261,-8.904031,5.355958,-3.928006,-8.581487,-1.555483,-1.162943,0.942430,3.312468,-7.726067,2.620662,-4.535580,9.390391,-1.691665,-2.463883,9.916718,-3.410924,1.900470,3.314467],[4.291306,-0.286123,-1.048463,1.222384,-8.497353,-4.845773,4.964865,-9.430311,2.978399,1.352661,-5.405693,-9.589238,-0.220446,7.903818,-6.782488,-8.290806,-7.221342,3.680898,2.311710,3.360877,-1.992343,-0.506862,2.851497,1.028683,-1.316675,-5.073054,-7.619730,2.842991],[6.017444,-6.370573,7.825245,-2.412384,9.164126,-7.859881,-1.007376,-3.589906,5.674029,3.459249,0.122920,7.891582,4.220268,-2.082953,0.260652,9.107124,-5.134539,-9.986544,-8.819499,-6.645067,7.986583,-5.800607,-7.502819,-9.433987,-8.114940,-8.051194,-7.738455,7.875974],[6.157888,6.096720,6.280563,-1.647080,-4.492425,1.485519,7.845515,-0.764549,2.850160,-5.212287,2.490079,7.764646,-9.489739,0.513280,-9.350255,8.122820,5.149532,-6.237622,8.068504,-2.860342,2.451388,-8.989067,1.119574,2.001863,9.242957,-6.548726,-6.318900,-8.326729],[1.754563,2.185488,2.091355,-0.608774,0.856393,9.965586,7.918183,-2.803786,-3.810981,8.457239,6.734733,-4.875493,-3.574693,5.903049,-4.498907,-8.030134,-1.207557,1.950765,-3.146611,-3.328978,-4.832909,-7.502070,5.439076,7.890062,9.558233,-0.822368,8.111475,2.041782],[0.339321,1.900426,8.768655,-3.829786,7.999662,7.812552,2.741411,-5.460828,4.384931,2.487734,0.445560,-9.444145,8.827187,-3.564644,0.360543,-3.876483,-9.065889,0.299128,5.185594,4.622673,1.564867,-2.086053,-4.497709,0.345497,6.934623,4.313844,2.885707,1.727896],[-8.526320,7.411612,-6.312927,-9.383728,2.948751,-0.505237,1.287998,-7.393199,-7.676111,5.476195,1.239981,-4.185340,2.392753,6.000033,-2.675108,7.563024,-2.256560,-0.292533,1.202603,-7.833202,-4.500284,9.907979,-4.395513,9.794923,1.279185,-5.840285,5.303754,0.201612],[-3.354482,7.448220,-8.941774,6.605217,7.725420,0.478043,-5.630861,-1.279104,-2.661110,3.746777,5.245587,6.722689,0.016348,6.345249,-4.481189,-3.371329,8.667536,8.162769,-6.913624,8.507261,0.211123,-2.640230,-0.926690,-2.368612,3.436011,1.205682,-7.805075,5.937881],[-3.111116,-7.440273,8.657158,9.276983,-6.291988,-8.366823,0.192842,2.542619,-3.331242,8.129787,-2.476973,0.962768,9.517937,-0.023020,3.426817,2.973903,-9.162715,1.226734,-3.425356,-5.833934,0.714853,-3.401860,-1.409102,1.207050,7.245856,6.030286,4.791026,2.028904]], dtype = "float32")#candidate|6888|(10, 28)|const|float32
call_6887 = relay.TupleGetItem(func_6583_call(relay.reshape(const_6888.astype('float32'), [140, 2])), 2)
call_6889 = relay.TupleGetItem(func_6586_call(relay.reshape(const_6888.astype('float32'), [140, 2])), 2)
output = relay.Tuple([call_6859,call_6862,call_6887,const_6888,])
output2 = relay.Tuple([call_6860,call_6863,call_6889,const_6888,])
func_6892 = relay.Function([], output)
mod['func_6892'] = func_6892
mod = relay.transform.InferType()(mod)
mutated_mod['func_6892'] = func_6892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6892_call = mutated_mod.get_global_var('func_6892')
call_6893 = func_6892_call()
output = call_6893
func_6894 = relay.Function([], output)
mutated_mod['func_6894'] = func_6894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5854_call = mod.get_global_var('func_5854')
func_5855_call = mutated_mod.get_global_var('func_5855')
call_6905 = relay.TupleGetItem(func_5854_call(), 1)
call_6906 = relay.TupleGetItem(func_5855_call(), 1)
output = call_6905
output2 = call_6906
func_6910 = relay.Function([], output)
mod['func_6910'] = func_6910
mod = relay.transform.InferType()(mod)
mutated_mod['func_6910'] = func_6910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6910_call = mutated_mod.get_global_var('func_6910')
call_6911 = func_6910_call()
output = call_6911
func_6912 = relay.Function([], output)
mutated_mod['func_6912'] = func_6912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6910_call = mod.get_global_var('func_6910')
func_6912_call = mutated_mod.get_global_var('func_6912')
call_6937 = func_6910_call()
call_6938 = func_6910_call()
output = call_6937
output2 = call_6938
func_6943 = relay.Function([], output)
mod['func_6943'] = func_6943
mod = relay.transform.InferType()(mod)
output = func_6943()
func_6944 = relay.Function([], output)
mutated_mod['func_6944'] = func_6944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6546_call = mod.get_global_var('func_6546')
func_6547_call = mutated_mod.get_global_var('func_6547')
call_6950 = func_6546_call()
call_6951 = func_6546_call()
output = relay.Tuple([call_6950,])
output2 = relay.Tuple([call_6951,])
func_6953 = relay.Function([], output)
mod['func_6953'] = func_6953
mod = relay.transform.InferType()(mod)
output = func_6953()
func_6954 = relay.Function([], output)
mutated_mod['func_6954'] = func_6954
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6987 = relay.const([[[6.371652,1.007961,-4.377613,0.917742,-2.697306,6.557527,-8.427076,-8.479082],[-2.567584,-8.668439,4.746706,1.833725,2.170163,7.452453,3.539780,1.995901],[-8.533062,0.149990,8.155708,-0.164840,-4.013597,-8.319425,-5.573811,-2.973418],[-0.241144,-5.484330,6.151467,6.601071,-9.911392,-9.445950,-7.376532,-2.659865],[-5.531496,4.295466,6.593383,-1.994229,-4.086938,-0.477095,1.476712,6.802519],[-0.828100,1.364537,1.945903,-6.326180,3.844982,4.496617,-5.706481,-7.133752],[-5.212947,-0.226959,5.232824,7.267327,6.823175,-2.865632,1.936626,7.331238],[-7.742256,6.888875,8.718890,5.986595,5.056880,-4.422175,-0.943307,-2.394254],[0.675594,-9.638809,9.998676,-3.766498,-4.923492,-8.762351,-1.119122,2.468922],[-5.300114,-7.604193,-7.429958,0.326669,-1.518792,2.868330,-6.825136,6.602441],[4.004740,9.315233,-6.848012,0.224088,-3.034396,-8.258108,0.975767,3.855671],[-7.273568,-1.560216,6.487073,-6.082175,4.009888,6.274327,-0.307340,8.584028]],[[-8.200305,-6.138332,-4.690962,6.771731,1.557589,7.783151,2.887282,5.420629],[-1.317312,-7.221849,4.086637,-4.169359,8.535964,-8.469434,-6.025073,4.814966],[-6.378462,7.459414,9.718316,-8.803238,-7.120985,-1.166979,-8.158141,-0.759263],[9.689638,2.981490,8.131302,5.764356,2.131342,-1.260869,-3.782709,-4.439451],[-4.329943,5.651323,9.249240,-9.128003,-8.423352,6.773239,-1.810234,1.367211],[1.428852,-7.164518,-4.021198,5.664852,-9.097876,-2.908475,5.802545,4.264725],[-9.113987,4.621130,-0.112493,-5.233548,-1.755085,-9.296257,5.631769,-7.534028],[-7.454049,9.398270,6.570131,-8.001671,3.165195,-2.078443,1.761577,-7.793629],[-1.861635,1.819291,9.220546,7.201610,-7.264088,7.171024,-0.673823,-5.754059],[-0.214259,4.565537,-4.776217,6.525418,-5.759609,-0.939067,-5.257798,-0.882809],[-2.543503,2.118801,2.785425,-3.574768,-9.684558,4.905990,7.969456,8.527411],[2.852412,7.778606,-5.837757,9.022823,-9.500719,4.662098,-8.820662,-5.527029]],[[7.072285,3.201865,-8.926030,-2.319913,2.506115,2.704136,0.463908,-7.609285],[-1.371360,-4.559864,1.187225,8.189331,8.421754,-1.323582,-8.888480,0.485547],[-8.473657,-7.656681,-2.666767,-6.720025,-7.039155,-9.466346,-2.489417,2.143856],[4.714875,-2.860050,0.069664,-7.309672,-8.414228,7.714337,0.502696,-4.046783],[8.014491,5.494772,-4.577441,0.206004,8.299657,-0.453569,-9.222365,-7.864444],[-8.739061,-5.760228,9.721634,-8.052200,3.093466,-9.502050,-2.370029,2.670485],[-7.724334,9.869962,-0.395058,4.744753,2.200706,4.602120,5.755523,1.338149],[-6.475556,-4.121071,-1.403887,7.113873,-5.682675,9.507604,6.718076,-0.492353],[9.284761,-4.874721,-5.923666,3.207240,4.859917,5.858635,2.461619,-3.484738],[6.349310,5.854905,-7.267491,9.276727,-9.687107,8.176789,7.162894,6.284231],[-4.567216,-1.052147,-0.976316,-4.634407,7.478280,-0.950418,-2.163571,-8.328376],[6.273357,0.508611,6.405331,-1.962415,8.835699,1.052124,4.265959,1.885523]],[[-3.480450,-8.654016,-4.597379,-2.159309,2.822878,-7.856219,-1.385377,0.700418],[-2.416619,5.018581,0.246662,7.940211,0.805599,-3.853053,-7.777153,-9.906885],[3.228617,4.733292,9.933806,1.091968,-6.935858,-6.426045,2.277204,8.925287],[9.222392,9.805668,-4.406149,0.214268,7.103171,1.034943,-3.653642,-6.518854],[-9.805287,0.308970,4.088368,-0.510841,-4.699280,-3.751750,-6.295461,7.166318],[-3.982473,7.534419,7.342078,1.599489,-6.187085,-5.661551,-3.799914,-2.341111],[-5.850761,6.668573,2.563034,-3.429977,-9.005892,5.205193,-7.369026,-8.505087],[3.077053,1.467842,4.685865,5.807027,3.145727,-5.619716,-9.606171,7.790730],[-2.519118,-7.331267,-0.751911,2.501934,-9.570825,-2.210597,6.305178,6.413515],[-7.910894,8.970045,4.884586,5.332853,7.701300,0.233922,-1.976967,-3.277866],[9.735731,-1.621968,8.955055,-4.716814,-3.604733,-2.866650,-2.234772,-4.970203],[2.885703,-7.231500,-0.841666,0.397118,4.859686,4.661866,4.131227,-0.337305]],[[2.283010,3.025491,-1.492238,-0.585938,-6.379030,-5.711749,-6.001166,9.756137],[-8.064829,6.996092,4.722193,-0.096262,8.533450,-1.052665,-7.211972,7.739584],[-7.146586,-3.919232,-2.980846,4.285300,-9.862329,1.536810,6.304676,-4.744956],[-3.164890,-1.096539,-8.260978,-8.036984,7.654783,0.828705,8.245854,8.293623],[5.676725,-2.152257,-0.873484,-3.749515,7.537980,0.166346,-7.112595,1.934127],[8.979475,-6.760696,-0.038989,1.627265,8.215957,6.610946,4.247330,-2.269118],[2.994080,8.533427,3.127519,-4.118362,2.520296,3.789615,0.201120,7.954473],[-0.380171,-3.321052,-4.366413,-3.944696,-7.223990,6.218537,-1.341022,-4.529387],[-1.886648,3.279536,1.612844,8.547234,-1.998011,-6.712105,6.622753,-7.121282],[6.067095,-2.547778,9.643867,-2.978488,8.193600,8.702050,7.089945,4.772443],[6.327261,8.521152,-3.516903,-2.514614,1.004099,-6.839719,-9.229824,4.487240],[8.267696,7.313538,-9.625092,6.588672,3.953602,-6.792470,-7.539951,9.923709]],[[-3.811616,7.909781,2.158724,6.070878,-1.897810,0.610051,9.336491,5.749833],[-6.352546,6.325321,-0.501070,-8.691213,5.778036,-8.390262,-8.599478,-2.548902],[0.531408,3.934088,5.377394,4.531587,-3.696643,-5.678297,9.154763,6.587723],[-7.488738,0.798707,9.353767,0.477461,-0.161485,-5.572529,3.396976,3.442078],[-9.736354,1.238425,-0.644626,-5.326913,8.606066,-4.461869,-6.954618,-8.620765],[-4.468990,9.922204,-8.178836,-4.291039,-0.319763,3.097383,6.596898,-0.340009],[-2.527654,1.125355,2.323954,4.678095,-4.360246,9.321933,0.898535,-9.341023],[7.377652,2.407632,-8.951261,-2.201539,4.878607,-0.608762,1.041787,-9.238149],[-2.451448,-8.700394,9.453150,-9.575956,7.523140,-5.600723,8.125941,-2.893327],[-6.273740,-1.275606,1.057352,-1.732367,1.627135,-8.846013,9.558214,-5.781866],[-0.936350,5.846263,-5.184843,-6.092653,-9.205638,0.309814,1.616859,-2.632050],[2.316647,-4.120140,-4.980969,7.032115,5.822869,-8.738469,1.030699,-6.130633]],[[4.185889,8.269473,2.024927,2.813408,2.398108,0.028578,-0.019495,-2.266008],[5.132821,-1.507924,4.094980,2.205607,1.854895,-0.090857,-4.557471,9.074173],[-0.157491,9.947942,-2.668690,7.569535,6.786742,-6.861781,8.661179,-7.483109],[2.694172,-5.959096,-8.193429,5.441774,2.613400,-2.645963,-7.782324,6.229895],[0.942316,-8.092555,1.238921,3.857358,-0.194639,-7.358451,-7.808267,-8.930622],[8.432898,7.721442,-5.816443,-1.797155,-3.258359,0.626047,-8.787272,4.801578],[-6.544697,6.984847,-5.846066,-1.185326,-7.020106,-7.565531,3.822905,-7.774725],[6.851050,0.061922,-7.221840,2.587604,-1.643561,2.189183,0.183023,-1.367326],[-4.942269,4.592626,-4.075090,1.532233,-1.099305,-2.524950,2.992365,-2.170628],[-5.898060,-6.460816,7.177467,3.276724,7.797570,-7.595168,9.048950,-1.891461],[-7.025835,-3.745385,9.231413,4.048029,2.876205,-9.019459,-4.800632,7.787764],[-0.269805,8.451778,4.347872,8.954873,1.700162,2.453676,7.558654,-4.848319]],[[0.038847,-5.101429,1.725846,-6.158767,7.424902,5.856243,-7.843210,-6.379410],[-8.889050,-3.615873,-2.365199,-9.470900,-9.042408,8.276793,6.801922,6.563662],[-7.331897,-7.761068,-2.916476,2.269184,9.735319,8.405284,2.524773,-8.884056],[-9.282756,-7.904595,-5.558540,-5.853631,-9.602837,-3.932774,-0.279209,8.429956],[-4.093761,-9.621602,-7.570890,-7.199282,-7.628191,4.588859,-8.860642,3.335948],[5.109433,0.816590,5.799828,-3.983071,9.081141,8.415579,-1.676746,2.023136],[-2.468069,5.375403,6.690375,-5.982240,-9.700173,3.666160,0.240439,8.177157],[-5.230697,3.940333,-2.601131,-0.608582,-0.541940,7.800822,-8.543324,2.578671],[-9.444162,6.994528,1.917153,1.929758,-8.515407,-9.740961,-3.448144,-9.991904],[-8.201192,-3.041919,2.820924,5.169402,-2.058894,-7.794203,1.146719,-5.302678],[0.137054,3.273092,7.232374,-2.160632,5.360647,-4.601890,-9.479871,9.770631],[-9.531146,3.097643,-7.257171,9.079358,-4.783434,6.379309,-3.096104,3.268227]],[[0.024048,-4.976332,-8.095646,-6.715271,8.010946,7.882915,8.697521,-4.076524],[-9.706054,9.498721,-1.769735,3.553250,1.358204,-7.978425,-6.221372,5.677436],[-3.660109,3.993080,-7.073126,0.813388,-1.647783,0.836144,4.922931,1.232735],[9.571387,-1.196424,1.706963,-5.431315,-1.516339,-5.056855,5.207707,-8.404257],[2.876184,-8.112010,-6.771814,3.204695,-9.038423,-8.805180,9.439926,5.743473],[9.213312,-3.153936,7.933046,2.620717,-5.145861,1.407524,3.651221,8.343622],[2.969836,-3.963481,2.968601,-0.212384,-0.123145,2.349421,-4.777518,-2.152508],[-6.698522,-3.301750,-1.960684,0.074032,-2.532929,-2.311038,6.002779,-8.663221],[7.148147,-0.308472,3.545909,-7.749501,1.590762,2.879559,-4.796751,4.465396],[-5.081287,-0.436425,8.214650,5.627665,-3.021735,8.320689,-2.966255,-0.067580],[-5.515726,-8.081454,0.764390,8.514739,0.587012,-2.427660,3.859592,-2.450935],[-5.660602,-5.500246,7.740836,3.482034,3.957198,5.952800,-7.552938,3.865973]],[[-3.560193,-2.659234,-3.013283,-6.978043,-0.936470,5.646801,4.145299,-3.071276],[-0.925024,0.646697,-0.783008,-8.581147,-7.878255,7.342833,0.789010,9.402667],[4.103460,-1.214627,-0.296346,4.387538,5.656993,-1.416462,-7.560069,-3.152710],[4.259733,-0.071713,-0.566130,2.429203,-0.148928,-3.871209,7.664947,4.986921],[4.989084,-7.226401,4.717986,2.908672,-7.106017,9.830544,-0.216990,0.886501],[4.868300,2.815070,-1.282516,-8.115160,-3.085531,8.211642,3.170033,-0.546966],[-3.070246,-0.035978,-1.431604,-4.477515,5.832998,3.117657,-4.836286,4.635965],[4.297120,9.776920,8.432094,-7.487587,-8.478891,7.432455,5.734243,5.458853],[-7.831356,9.821579,9.561940,9.855735,5.059115,-8.339669,1.259187,3.791754],[-6.257706,8.878942,2.387922,2.447065,5.498894,0.468136,-0.035262,-7.962101],[-1.217313,3.786244,4.333124,-8.572278,-5.201590,-3.371223,-4.897438,-1.423656],[8.593499,-6.877959,0.602907,-6.055520,-7.338866,4.681680,-3.391247,4.809099]],[[9.541077,-6.937194,4.965260,9.607649,9.879624,9.548445,-5.058218,1.189650],[6.313059,-5.802601,6.192635,8.646520,-5.578747,9.456922,-2.187932,5.018286],[4.059777,4.026548,-9.658367,-6.927968,-7.751726,4.165834,0.540798,-3.638582],[-9.929936,-2.982549,-7.214322,1.853922,-8.742117,2.763205,0.025270,2.967396],[6.395896,4.827753,5.426414,6.193222,9.474529,-8.134770,4.476424,-4.157863],[5.638085,-1.474447,-9.281388,-2.879269,-2.889598,-5.198046,-9.225486,-0.283193],[-6.247669,1.081162,-4.646969,7.149213,7.088981,-5.531631,6.622285,-6.383786],[6.406522,-6.475156,-2.311047,2.163798,-3.123243,-2.135198,9.105744,-6.583732],[-2.116026,0.691272,8.579857,9.267854,6.672365,5.520042,-3.822732,2.630448],[-4.299475,9.295032,2.604982,3.295229,-4.167449,-0.717193,2.342635,4.780673],[9.137342,-1.990190,-9.996842,8.633220,1.167619,-3.405444,1.631640,-7.102570],[8.558956,-8.482276,-3.315155,-8.062563,-1.686937,-7.249342,-5.831349,6.164145]],[[-4.871495,-5.563761,0.259740,-4.664279,-5.471606,-8.941049,0.545370,-6.951635],[3.110358,7.098368,-0.256826,-9.461489,-2.751479,-5.018146,7.403679,-3.775072],[1.551029,-2.740592,6.057492,-0.509293,1.870606,7.243760,5.914944,9.224366],[-7.651172,-2.890619,-3.002304,0.637500,0.325099,2.719059,-8.715557,-8.618950],[-4.677931,-7.307780,-7.840890,-3.384537,-9.962705,-2.551417,3.586303,-7.333962],[-8.962188,-8.683161,8.893903,6.579051,-6.109149,9.535387,3.258242,-6.746379],[-0.434667,7.431549,5.957933,-7.690734,8.935024,9.126337,-6.105461,-3.114772],[-4.994780,-0.505589,0.801199,-6.614028,-7.744270,-1.025631,-4.520937,-4.257563],[2.135684,0.673993,9.549089,-6.235173,-7.640697,8.180370,6.553661,2.855885],[-4.331645,-7.564883,3.730424,1.464891,-9.048339,3.173987,2.231568,-0.283212],[1.763015,7.930779,7.956246,4.086545,-8.163568,4.369546,3.108074,9.473203],[-5.402791,7.839037,9.415102,5.989211,-6.950165,-4.257680,-4.340616,-3.431817]]], dtype = "float64")#candidate|6987|(12, 12, 8)|const|float64
uop_6988 = relay.erf(const_6987.astype('float64')) # shape=(12, 12, 8)
uop_7017 = relay.atanh(uop_6988.astype('float32')) # shape=(12, 12, 8)
output = uop_7017
output2 = uop_7017
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

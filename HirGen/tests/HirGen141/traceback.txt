==========mod==========
#[version = "0.0.5"]
def @func_454(%var_428: Tensor[(2, 4, 14), uint32], %var_449: Tensor[(264), float64]) -> (Tensor[(2, 4, 14), uint32], Tensor[(11, 8, 3), float64], Tensor[(264), float64]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 4, 14), uint32] */, dtype="uint32") /* ty=Tensor[(2, 4, 14), uint32] */;
  %1 = shape_of(%var_428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_428, dtype="uint32") /* ty=Tensor[(2, 4, 14), uint32] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %4 = cast(%var_449, dtype="float64") /* ty=Tensor[(264), float64] */;
  %5 = reshape(%4, newshape=[11, 8, 3]) /* ty=Tensor[(11, 8, 3), float64] */;
  %6 = @func_99(%5) /* ty=(Tensor[(11, 8, 3), float64],) */;
  %7 = subtract(%2, %3) /* ty=Tensor[(2, 4, 14), uint32] */;
  %8 = %6.0;
  (%7, %8, %var_449)
}

def @func_1041(%var_1003: Tensor[(2, 13, 12), float32], %var_1026: Tensor[(1650), float32], %var_1037: Tensor[(396), float64]) -> (Tensor[(2, 13, 12), float32], Tensor[(1650), bool], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) {
  %9 = cast(%var_1003, dtype="float32") /* ty=Tensor[(2, 13, 12), float32] */;
  %10 = cast(%var_1026, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %11 = cast(%var_1026, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %12 = reshape(%10, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %13 = reshape(%11, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %14 = @func_746(%12, %13) /* ty=(Tensor[(10, 15, 11), float32], Tensor[(10, 15, 11), float32]) */;
  %15 = %14.1;
  %16 = cast(%15, dtype="bool") /* ty=Tensor[(10, 15, 11), bool] */;
  %17 = shape_of(%var_1026, dtype="int32") /* ty=Tensor[(1), int32] */;
  %18 = cast(%var_1026, dtype="bool") /* ty=Tensor[(1650), bool] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?), bool] */;
  %20 = cast(%var_1037, dtype="float64") /* ty=Tensor[(396), float64] */;
  %21 = reshape(%20, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float64] */;
  %22 = @func_526(%21) /* ty=(Tensor[(6, 11, 6), float64], Tensor[(6, 11, 6), float32]) */;
  %23 = log(%9) /* ty=Tensor[(2, 13, 12), float32] */;
  %24 = equal(%18, %19) /* ty=Tensor[(1650), bool] */;
  %25 = %22.0;
  (%23, %24, %25, %var_1037)
}

def @func_3390(%var_3384: Tensor[(12, 4, 3), int64], %var_3385: Tensor[(12, 4, 3), int64]) -> Tensor[(12, 4, 3), int64] {
  %26 = cast(%var_3385, dtype="int64") /* ty=Tensor[(12, 4, 3), int64] */;
  %27 = shape_of(%var_3384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%var_3384, dtype="int64") /* ty=Tensor[(12, 4, 3), int64] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  add(%28, %29) /* ty=Tensor[(12, 4, 3), int64] */
}

def @func_5984(%var_5962: Tensor[(7, 1, 4), float32], %var_5982: Tensor[(1650, 1), float32]) -> (Tensor[(7, ?, 4), bool], Tensor[(10, 15, 11), float32], Tensor[(1650, 1), float32]) {
  %30 = cast(%var_5962, dtype="float32") /* ty=Tensor[(7, 1, 4), float32] */;
  %31 = log(%30) /* ty=Tensor[(7, 1, 4), float32] */;
  %32 = cast(%31, dtype="float64") /* ty=Tensor[(7, 1, 4), float64] */;
  %33 = sinh(%32) /* ty=Tensor[(7, 1, 4), float64] */;
  %34 = cast(%33, dtype="bool") /* ty=Tensor[(7, 1, 4), bool] */;
  %35 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
  %36 = cast(%31, dtype="bool") /* ty=Tensor[(7, 1, 4), bool] */;
  %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %38 = cast(%var_5982, dtype="float32") /* ty=Tensor[(1650, 1), float32] */;
  %39 = cast(%var_5982, dtype="float32") /* ty=Tensor[(1650, 1), float32] */;
  %40 = reshape(%38, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %41 = reshape(%39, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %42 = @func_746(%40, %41) /* ty=(Tensor[(10, 15, 11), float32], Tensor[(10, 15, 11), float32]) */;
  %43 = less(%36, %37) /* ty=Tensor[(7, ?, 4), bool] */;
  %44 = %42.0;
  (%43, %44, %var_5982)
}

def @func_4082(%var_4063: Tensor[(8, 3, 11), float32]) -> (Tensor[(8, 3, 11), float32],) {
  %45 = cast(%var_4063, dtype="float32") /* ty=Tensor[(8, 3, 11), float32] */;
  %46 = atan(%45) /* ty=Tensor[(8, 3, 11), float32] */;
  (%46,)
}

def @func_2507(%var_2501: Tensor[(3, 6, 12), float64]) -> Tensor[(3, 6, 12), float64] {
  %47 = cast(meta[relay.Constant][1] /* ty=Tensor[(3, 6, 12), float64] */, dtype="float64") /* ty=Tensor[(3, 6, 12), float64] */;
  %48 = shape_of(%var_2501, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%var_2501, dtype="float64") /* ty=Tensor[(3, 6, 12), float64] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%49, %50) /* ty=Tensor[(3, 6, 12), float64] */
}

def @func_526(%var_516: Tensor[(6, 11, 6), float64]) -> (Tensor[(6, 11, 6), float64], Tensor[(6, 11, 6), float32]) {
  %51 = cast(%var_516, dtype="float64") /* ty=Tensor[(6, 11, 6), float64] */;
  %52 = cast(%var_516, dtype="float32") /* ty=Tensor[(6, 11, 6), float32] */;
  %53 = sigmoid(%51) /* ty=Tensor[(6, 11, 6), float64] */;
  %54 = acosh(%52) /* ty=Tensor[(6, 11, 6), float32] */;
  (%53, %54)
}

def @func_1747(%var_1717: Tensor[(10, 13, 14), float64], %var_1724: Tensor[(550), int16], %var_1725: Tensor[(390, 3), float64]) -> (Tensor[(10, 13, 14), float64], Tensor[(2, 56), uint32], Tensor[(550), int16], Tensor[(390, 3), float64], Tensor[(112), uint32]) {
  %55 = cast(%var_1717, dtype="float64") /* ty=Tensor[(10, 13, 14), float64] */;
  %56 = sinh(%55) /* ty=Tensor[(10, 13, 14), float64] */;
  %57 = cast(%56, dtype="float64") /* ty=Tensor[(10, 13, 14), float64] */;
  %58 = cast(%var_1724, dtype="int16") /* ty=Tensor[(550), int16] */;
  %59 = cast(%var_1724, dtype="int16") /* ty=Tensor[(550), int16] */;
  %60 = cast(%var_1725, dtype="float64") /* ty=Tensor[(390, 3), float64] */;
  %61 = cast(meta[relay.Constant][2] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %62 = reshape(%58, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), int16] */;
  %63 = reshape(%59, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), int16] */;
  %64 = reshape(%60, newshape=[5, 234]) /* ty=Tensor[(5, 234), float64] */;
  %65 = reshape(%61, newshape=[2, 56]) /* ty=Tensor[(2, 56), uint32] */;
  %66 = @func_1252(%62, %63, %64, %65) /* ty=(Tensor[(11, 10, 5), bool], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(264, 1), float64], Tensor[(11, 8, 3), float64], Tensor[(13, 10, 9), float64], Tensor[(5, 234), float64], Tensor[(2, 56), uint32]) */;
  %67 = log2(%57) /* ty=Tensor[(10, 13, 14), float64] */;
  %68 = %66.7;
  (%67, %68, %var_1724, %var_1725, meta[relay.Constant][2] /* ty=Tensor[(112), uint32] */)
}

def @func_6636() -> (Tensor[(16, 9, 7), float64],) {
  %69 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
  %70 = %69.1;
  %71 = cast(%70, dtype="float64") /* ty=Tensor[(16, 9, 7), float64] */;
  %72 = rsqrt(%71) /* ty=Tensor[(16, 9, 7), float64] */;
  (%72,)
}

def @func_6608(%var_6596: Tensor[(16, 9, 7), int8]) -> (Tensor[(16, 9, 7), float32],) {
  %73 = @func_6263() /* ty=(Tensor[(16, 9, 7), int8],) */;
  %74 = %73.0;
  %75 = cast(%var_6596, dtype="float32") /* ty=Tensor[(16, 9, 7), float32] */;
  %76 = shape_of(%74, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(%74, dtype="float32") /* ty=Tensor[(16, 9, 7), float32] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %79 = divide(%77, %78) /* ty=Tensor[(16, 9, 7), float32] */;
  (%79,)
}

def @func_6943() -> Tensor[(16, 9, 7), int8] {
  @func_6910() /* ty=Tensor[(16, 9, 7), int8] */
}

def @func_746(%var_705: Tensor[(10, 15, 11), float32], %var_708: Tensor[(10, 15, 11), float32]) -> (Tensor[(10, 15, 11), float32], Tensor[(10, 15, 11), float32]) {
  %80 = cast(%var_705, dtype="float32") /* ty=Tensor[(10, 15, 11), float32] */;
  %81 = acos(%80) /* ty=Tensor[(10, 15, 11), float32] */;
  %82 = cast(%81, dtype="float32") /* ty=Tensor[(10, 15, 11), float32] */;
  %83 = cast(%var_708, dtype="bool") /* ty=Tensor[(10, 15, 11), bool] */;
  %84 = shape_of(%81, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(%81, dtype="bool") /* ty=Tensor[(10, 15, 11), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %87 = equal(%85, %86) /* ty=Tensor[(10, 15, 11), bool] */;
  %88 = cast(%87, dtype="float32") /* ty=Tensor[(10, 15, 11), float32] */;
  %89 = shape_of(%81, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(%81, dtype="float32") /* ty=Tensor[(10, 15, 11), float32] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %92 = sigmoid(%82) /* ty=Tensor[(10, 15, 11), float32] */;
  %93 = power(%90, %91) /* ty=Tensor[(10, 15, 11), float32] */;
  (%92, %93)
}

def @func_5558(%var_5504: Tensor[(9, 13, 11), float32]) -> (Tensor[(9, 13, 11), bool], Tensor[(9, 13, 11), float32]) {
  %94 = cast(%var_5504, dtype="float32") /* ty=Tensor[(9, 13, 11), float32] */;
  %95 = sigmoid(%94) /* ty=Tensor[(9, 13, 11), float32] */;
  %96 = cast(%var_5504, dtype="bool") /* ty=Tensor[(9, 13, 11), bool] */;
  %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%95, dtype="bool") /* ty=Tensor[(9, 13, 11), bool] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %100 = cast(%var_5504, dtype="float32") /* ty=Tensor[(9, 13, 11), float32] */;
  %101 = logical_or(%98, %99) /* ty=Tensor[(9, 13, 11), bool] */;
  %102 = atanh(%100) /* ty=Tensor[(9, 13, 11), float32] */;
  (%101, %102)
}

def @func_3473(%var_3464: Tensor[(7, 5, 11), float64]) -> (Tensor[(7, 5, 11), float64],) {
  %103 = cast(%var_3464, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %104 = tan(%103) /* ty=Tensor[(7, 5, 11), float64] */;
  (%104,)
}

def @func_4308(%var_4276: Tensor[(16, 6, 5), float32], %var_4295: Tensor[(216), float64]) -> (Tensor[(3, 6, 12), float64], Tensor[(216), float64], Tensor[(16, 6, 5), float32]) {
  %105 = cast(%var_4295, dtype="float64") /* ty=Tensor[(216), float64] */;
  %106 = reshape(%105, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %107 = @func_2728(%106) /* ty=(Tensor[(7, 9, 8), float64], Tensor[(3, 6, 12), float64], Tensor[(216), float64]) */;
  %108 = cast(%var_4276, dtype="float32") /* ty=Tensor[(16, 6, 5), float32] */;
  %109 = erf(%108) /* ty=Tensor[(16, 6, 5), float32] */;
  %110 = cast(%109, dtype="uint16") /* ty=Tensor[(16, 6, 5), uint16] */;
  %111 = shape_of(%var_4276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%var_4276, dtype="uint16") /* ty=Tensor[(16, 6, 5), uint16] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %114 = right_shift(%112, %113) /* ty=Tensor[(16, 6, 5), uint16] */;
  %115 = cast(%114, dtype="float64") /* ty=Tensor[(16, 6, 5), float64] */;
  %116 = exp(%115) /* ty=Tensor[(16, 6, 5), float64] */;
  %117 = cast(%116, dtype="float32") /* ty=Tensor[(16, 6, 5), float32] */;
  %118 = %107.1;
  %119 = sinh(%117) /* ty=Tensor[(16, 6, 5), float32] */;
  (%118, %var_4295, %119)
}

def @func_6140() -> Tensor[(16, 9, 7), int8] {
  %120 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
  %120.1
}

def @func_5916(%var_5883: Tensor[(15, 16, 6), float64], %var_5884: Tensor[(15, 16, 6), float64], %var_5900: Tensor[(15, 16, 6), float32]) -> (Tensor[(15, 16, 6), float64], Tensor[(15, 16, 6), float32], Tensor[(15, 16, 6), bool], Tensor[(10, 10, 4), bool], Tensor[(40, 10), bool]) {
  %121 = cast(%var_5884, dtype="float64") /* ty=Tensor[(15, 16, 6), float64] */;
  %122 = shape_of(%var_5883, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%var_5883, dtype="float64") /* ty=Tensor[(15, 16, 6), float64] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %125 = cast(%var_5884, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  %126 = log2(%125) /* ty=Tensor[(15, 16, 6), float32] */;
  %127 = cast(%var_5900, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  %128 = shape_of(%126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(%126, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %131 = cast(%var_5883, dtype="bool") /* ty=Tensor[(15, 16, 6), bool] */;
  %132 = shape_of(%var_5884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%var_5884, dtype="bool") /* ty=Tensor[(15, 16, 6), bool] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %135 = cast(meta[relay.Constant][3] /* ty=Tensor[(40, 10), bool] */, dtype="bool") /* ty=Tensor[(40, 10), bool] */;
  %136 = cast(meta[relay.Constant][3] /* ty=Tensor[(40, 10), bool] */, dtype="bool") /* ty=Tensor[(40, 10), bool] */;
  %137 = reshape(%135, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), bool] */;
  %138 = reshape(%136, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), bool] */;
  %139 = @func_4745(%137, %138) /* ty=(Tensor[(10, 10, 4), bool],) */;
  %140 = floor_divide(%123, %124) /* ty=Tensor[(15, 16, 6), float64] */;
  %141 = power(%129, %130) /* ty=Tensor[(15, 16, 6), float32] */;
  %142 = logical_and(%133, %134) /* ty=Tensor[(15, 16, 6), bool] */;
  %143 = %139.0;
  (%140, %141, %142, %143, meta[relay.Constant][3] /* ty=Tensor[(40, 10), bool] */)
}

def @func_6698() -> (Tensor[(16, 9, 7), uint16],) {
  %144 = @func_6654() /* ty=Tensor[(16, 9, 7), int8] */;
  %145 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 9, 7), int8] */, dtype="uint16") /* ty=Tensor[(16, 9, 7), uint16] */;
  %146 = shape_of(%144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %147 = cast(%144, dtype="uint16") /* ty=Tensor[(16, 9, 7), uint16] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %149 = multiply(%147, %148) /* ty=Tensor[(16, 9, 7), uint16] */;
  (%149,)
}

def @func_993(%var_962: Tensor[(4, 14, 1), uint64], %var_963: Tensor[(4, 14, 6), uint64], %var_970: Tensor[(1650), float32], %var_989: Tensor[(1170), float64]) -> (Tensor[(4, 14, 6), uint64], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(13, 10, 9), float64], Tensor[(112), uint32], Tensor[(264), float64], Tensor[(264), float64], Tensor[(1170), uint16]) {
  %150 = cast(%var_962, dtype="uint64") /* ty=Tensor[(4, 14, 1), uint64] */;
  %151 = cast(%var_963, dtype="uint64") /* ty=Tensor[(4, 14, 6), uint64] */;
  %152 = cast(%var_970, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %153 = cast(%var_970, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %154 = reshape(%152, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %155 = reshape(%153, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %156 = @func_746(%154, %155) /* ty=(Tensor[(10, 15, 11), float32], Tensor[(10, 15, 11), float32]) */;
  %157 = cast(meta[relay.Constant][5] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %158 = cast(meta[relay.Constant][6] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %159 = reshape(%157, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float64] */;
  %160 = reshape(%158, newshape=[28, 4]) /* ty=Tensor[(28, 4), uint32] */;
  %161 = @func_508(%159, %160) /* ty=(Tensor[(13, 10, 9), float64], Tensor[(11, 8, 3), float64], Tensor[(264), float64], Tensor[(28, 4), float64]) */;
  %162 = cast(meta[relay.Constant][6] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %163 = cast(meta[relay.Constant][7] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %164 = reshape(%162, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), uint32] */;
  %165 = reshape(%163, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %166 = @func_454(%164, %165) /* ty=(Tensor[(2, 4, 14), uint32], Tensor[(11, 8, 3), float64], Tensor[(264), float64]) */;
  %167 = cast(%var_989, dtype="uint16") /* ty=Tensor[(1170), uint16] */;
  %168 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(1170), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %169 = cast(meta[relay.Constant][5] /* ty=Tensor[(1170), float64] */, dtype="uint16") /* ty=Tensor[(1170), uint16] */;
  %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %171 = subtract(%150, %151) /* ty=Tensor[(4, 14, 6), uint64] */;
  %172 = %156.0;
  %173 = %161.0;
  %174 = %166.2;
  %175 = left_shift(%169, %170) /* ty=Tensor[(1170), uint16] */;
  (%171, %172, %var_970, %173, meta[relay.Constant][6] /* ty=Tensor[(112), uint32] */, %174, meta[relay.Constant][7] /* ty=Tensor[(264), float64] */, %175)
}

def @func_6039() -> (Tensor[(16, 9, 7), int8],) {
  %176 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
  %177 = %176.1;
  (%177,)
}

def @func_4853(%var_4837: Tensor[(1, 8, 13), uint32], %var_4838: Tensor[(14, 8, 13), uint32], %var_4846: Tensor[(480), float32], %var_4847: Tensor[(216), float64]) -> (Tensor[(14, 8, 13), uint32], Tensor[(216), float64], Tensor[(480), float32], Tensor[(216), float64]) {
  %178 = cast(%var_4837, dtype="uint32") /* ty=Tensor[(1, 8, 13), uint32] */;
  %179 = cast(%var_4838, dtype="uint32") /* ty=Tensor[(14, 8, 13), uint32] */;
  %180 = cast(%var_4846, dtype="float32") /* ty=Tensor[(480), float32] */;
  %181 = cast(%var_4847, dtype="float64") /* ty=Tensor[(216), float64] */;
  %182 = reshape(%180, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), float32] */;
  %183 = reshape(%181, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %184 = @func_4308(%182, %183) /* ty=(Tensor[(3, 6, 12), float64], Tensor[(216), float64], Tensor[(16, 6, 5), float32]) */;
  %185 = maximum(%178, %179) /* ty=Tensor[(14, 8, 13), uint32] */;
  %186 = %184.1;
  (%185, %186, %var_4846, %var_4847)
}

def @func_2728(%var_2724: Tensor[(216), float64]) -> (Tensor[(7, 9, 8), float64], Tensor[(3, 6, 12), float64], Tensor[(216), float64]) {
  %187 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 9, 8), float64] */, dtype="float64") /* ty=Tensor[(7, 9, 8), float64] */;
  %188 = cast(%var_2724, dtype="float64") /* ty=Tensor[(216), float64] */;
  %189 = reshape(%188, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), float64] */;
  %190 = rsqrt(%187) /* ty=Tensor[(7, 9, 8), float64] */;
  %191 = @func_2507(%189) /* ty=Tensor[(3, 6, 12), float64] */;
  (%190, %191, %var_2724)
}

def @func_6654() -> Tensor[(16, 9, 7), int8] {
  %192 = @func_6244() /* ty=Tensor[(16, 9, 7), int8] */;
  %193 = cast(%192, dtype="float32") /* ty=Tensor[(16, 9, 7), float32] */;
  %194 = atanh(%193) /* ty=Tensor[(16, 9, 7), float32] */;
  %195 = cast(%194, dtype="int8") /* ty=Tensor[(16, 9, 7), int8] */;
  %196 = shape_of(%192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %197 = cast(%192, dtype="int8") /* ty=Tensor[(16, 9, 7), int8] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_xor(%197, %198) /* ty=Tensor[(16, 9, 7), int8] */
}

def @func_1671(%var_1662: int16, %var_1663: Tensor[(16, 12, 1), int16], %var_1668: Tensor[(660), int8]) -> (Tensor[(16, 12, 1), bool], Tensor[(6, 11, 10), int8], Tensor[(660), int8]) {
  %199 = cast(%var_1662, dtype="bool") /* ty=bool */;
  %200 = cast(%var_1663, dtype="bool") /* ty=Tensor[(16, 12, 1), bool] */;
  %201 = cast(%var_1668, dtype="int8") /* ty=Tensor[(660), int8] */;
  %202 = cast(%var_1668, dtype="int8") /* ty=Tensor[(660), int8] */;
  %203 = reshape(%201, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int8] */;
  %204 = reshape(%202, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int8] */;
  %205 = @func_1326(%203, %204) /* ty=(Tensor[(6, 11, 10), int8],) */;
  %206 = less_equal(%199, %200) /* ty=Tensor[(16, 12, 1), bool] */;
  %207 = %205.0;
  (%206, %207, %var_1668)
}

def @func_6892() -> (Tensor[(16, 9, 7), int8], Tensor[(16, 9, 7), int8], Tensor[(140, 2), float32], Tensor[(10, 28), float32]) {
  %208 = @func_6263() /* ty=(Tensor[(16, 9, 7), int8],) */;
  %209 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 28), float32] */, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
  %210 = reshape(%209, newshape=[140, 2]) /* ty=Tensor[(140, 2), float32] */;
  %211 = @func_6583(%210) /* ty=(Tensor[(16, 9, 7), int8], Tensor[(5, 14, 4), float32], Tensor[(140, 2), float32], Tensor[(1, 1170), float64], Tensor[(112), uint32]) */;
  %212 = @func_6140() /* ty=Tensor[(16, 9, 7), int8] */;
  %213 = %208.0;
  %214 = %211.2;
  (%212, %213, %214, meta[relay.Constant][9] /* ty=Tensor[(10, 28), float32] */)
}

def @main() -> Tensor[(12, 12, 8), float32] {
  %215 = cast(meta[relay.Constant][10] /* ty=Tensor[(12, 12, 8), float64] */, dtype="float64") /* ty=Tensor[(12, 12, 8), float64] */;
  %216 = erf(%215) /* ty=Tensor[(12, 12, 8), float64] */;
  %217 = cast(%216, dtype="float32") /* ty=Tensor[(12, 12, 8), float32] */;
  atanh(%217) /* ty=Tensor[(12, 12, 8), float32] */
}

def @func_6109(%var_6100: Tensor[(192), int16], %var_6101: Tensor[(660), int8]) -> (Tensor[(16, 9, 7), int8], Tensor[(16, 12, 1), bool], int16, Tensor[(192), int16], Tensor[(660), int8]) {
  %218 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
  %219 = cast(meta[relay.Constant][11] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %220 = cast(%var_6100, dtype="int16") /* ty=Tensor[(192), int16] */;
  %221 = cast(%var_6101, dtype="int8") /* ty=Tensor[(660), int8] */;
  %222 = reshape(%219, newshape=[]) /* ty=int16 */;
  %223 = reshape(%220, newshape=[16, 12, 1]) /* ty=Tensor[(16, 12, 1), int16] */;
  %224 = reshape(%221, newshape=[660]) /* ty=Tensor[(660), int8] */;
  %225 = @func_1671(%222, %223, %224) /* ty=(Tensor[(16, 12, 1), bool], Tensor[(6, 11, 10), int8], Tensor[(660), int8]) */;
  %226 = %218.1;
  %227 = %225.0;
  (%226, %227, meta[relay.Constant][11] /* ty=int16 */, %var_6100, %var_6101)
}

def @func_1326(%var_1316: Tensor[(6, 11, 10), int8], %var_1317: Tensor[(6, 11, 10), int8]) -> (Tensor[(6, 11, 10), int8],) {
  %228 = cast(%var_1317, dtype="int8") /* ty=Tensor[(6, 11, 10), int8] */;
  %229 = shape_of(%var_1316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%var_1316, dtype="int8") /* ty=Tensor[(6, 11, 10), int8] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %232 = logical_xor(%230, %231) /* ty=Tensor[(6, 11, 10), int8] */;
  (%232,)
}

def @func_1611(%var_1589: Tensor[(5, 14, 4), float32], %var_1597: Tensor[(10, 117), float64], %var_1598: Tensor[(112), uint32], %var_1606: Tensor[(10, 117), float64]) -> (Tensor[(5, 14, 4), float32], Tensor[(264), float64], Tensor[(112), uint32], Tensor[(10, 117), float32]) {
  %233 = cast(%var_1589, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
  %234 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(5, 14, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 14, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %237 = cast(%var_1597, dtype="float64") /* ty=Tensor[(10, 117), float64] */;
  %238 = cast(%var_1598, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %239 = reshape(%237, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float64] */;
  %240 = reshape(%238, newshape=[28, 4]) /* ty=Tensor[(28, 4), uint32] */;
  %241 = @func_508(%239, %240) /* ty=(Tensor[(13, 10, 9), float64], Tensor[(11, 8, 3), float64], Tensor[(264), float64], Tensor[(28, 4), float64]) */;
  %242 = cast(%var_1606, dtype="float32") /* ty=Tensor[(10, 117), float32] */;
  %243 = shape_of(%var_1597, dtype="int32") /* ty=Tensor[(2), int32] */;
  %244 = cast(%var_1597, dtype="float32") /* ty=Tensor[(10, 117), float32] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %246 = floor_mod(%235, %236) /* ty=Tensor[(5, 14, 4), float32] */;
  %247 = %241.2;
  %248 = power(%244, %245) /* ty=Tensor[(10, 117), float32] */;
  (%246, %247, %var_1598, %248)
}

def @func_6244() -> Tensor[(16, 9, 7), int8] {
  @func_6140() /* ty=Tensor[(16, 9, 7), int8] */
}

def @func_6848(%var_6740: Tensor[(10, 7, 10), int64], %var_6756: Tensor[(10, 7, 10), int64], %var_6795: Tensor[(384), uint16], %var_6808: Tensor[(264, 1), float64], %var_6842: Tensor[(7, 260), float64]) -> (Tensor[(10, 7, 10), uint32], Tensor[(16, 9, 7), int8], Tensor[(12, 16, 2), uint16], Tensor[(384), uint16], Tensor[(11, 8, 3), float64], Tensor[(264, 1), float64], Tensor[(10, 7, 10), float32], Tensor[(1, 1170), float64], Tensor[(280), float32], Tensor[(9, 13, 11), float32], Tensor[(1287), float32], Tensor[(10, 7, 10), bool], Tensor[(16, 9, 7), int8], Tensor[(2, 56), uint32], Tensor[(7, 260), float64], Tensor[(550), int16]) {
  %249 = cast(%var_6740, dtype="int64") /* ty=Tensor[(10, 7, 10), int64] */;
  %250 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(10, 7, 10), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 7, 10), int64] */, dtype="int64") /* ty=Tensor[(10, 7, 10), int64] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %253 = bitwise_or(%251, %252) /* ty=Tensor[(10, 7, 10), int64] */;
  %254 = cast(%var_6756, dtype="uint32") /* ty=Tensor[(10, 7, 10), uint32] */;
  %255 = shape_of(%253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%253, dtype="uint32") /* ty=Tensor[(10, 7, 10), uint32] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %258 = cast(%var_6795, dtype="uint16") /* ty=Tensor[(384), uint16] */;
  %259 = cast(%var_6795, dtype="uint16") /* ty=Tensor[(384), uint16] */;
  %260 = reshape(%258, newshape=[12, 16, 2]) /* ty=Tensor[(12, 16, 2), uint16] */;
  %261 = reshape(%259, newshape=[12, 16, 2]) /* ty=Tensor[(12, 16, 2), uint16] */;
  %262 = cast(%var_6808, dtype="float64") /* ty=Tensor[(264, 1), float64] */;
  %263 = reshape(%262, newshape=[11, 8, 3]) /* ty=Tensor[(11, 8, 3), float64] */;
  %264 = @func_99(%263) /* ty=(Tensor[(11, 8, 3), float64],) */;
  %265 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 7, 10), int64] */, dtype="float32") /* ty=Tensor[(10, 7, 10), float32] */;
  %266 = tan(%265) /* ty=Tensor[(10, 7, 10), float32] */;
  %267 = cast(%266, dtype="float32") /* ty=Tensor[(10, 7, 10), float32] */;
  %268 = asin(%267) /* ty=Tensor[(10, 7, 10), float32] */;
  %269 = cast(%var_6756, dtype="float32") /* ty=Tensor[(10, 7, 10), float32] */;
  %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%268, dtype="float32") /* ty=Tensor[(10, 7, 10), float32] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %273 = floor_mod(%271, %272) /* ty=Tensor[(10, 7, 10), float32] */;
  %274 = cast(%273, dtype="float32") /* ty=Tensor[(10, 7, 10), float32] */;
  %275 = asinh(%274) /* ty=Tensor[(10, 7, 10), float32] */;
  %276 = cast(%275, dtype="float32") /* ty=Tensor[(10, 7, 10), float32] */;
  %277 = cast(meta[relay.Constant][14] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %278 = reshape(%277, newshape=[140, 2]) /* ty=Tensor[(140, 2), float32] */;
  %279 = @func_6583(%278) /* ty=(Tensor[(16, 9, 7), int8], Tensor[(5, 14, 4), float32], Tensor[(140, 2), float32], Tensor[(1, 1170), float64], Tensor[(112), uint32]) */;
  %280 = cast(meta[relay.Constant][15] /* ty=Tensor[(1287), float32] */, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %281 = reshape(%280, newshape=[9, 13, 11]) /* ty=Tensor[(9, 13, 11), float32] */;
  %282 = @func_5558(%281) /* ty=(Tensor[(9, 13, 11), bool], Tensor[(9, 13, 11), float32]) */;
  %283 = cast(%var_6756, dtype="bool") /* ty=Tensor[(10, 7, 10), bool] */;
  %284 = shape_of(%275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%275, dtype="bool") /* ty=Tensor[(10, 7, 10), bool] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %287 = cast(%var_6842, dtype="float64") /* ty=Tensor[(7, 260), float64] */;
  %288 = cast(meta[relay.Constant][16] /* ty=Tensor[(550), int16] */, dtype="int16") /* ty=Tensor[(550), int16] */;
  %289 = %279.3;
  %290 = cast(%289, dtype="float64") /* ty=Tensor[(1, 1170), float64] */;
  %291 = reshape(%287, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float64] */;
  %292 = reshape(%288, newshape=[550]) /* ty=Tensor[(550), int16] */;
  %293 = reshape(%290, newshape=[390, 3]) /* ty=Tensor[(390, 3), float64] */;
  %294 = @func_1747(%291, %292, %293) /* ty=(Tensor[(10, 13, 14), float64], Tensor[(2, 56), uint32], Tensor[(550), int16], Tensor[(390, 3), float64], Tensor[(112), uint32]) */;
  %295 = logical_xor(%256, %257) /* ty=Tensor[(10, 7, 10), uint32] */;
  %296 = @func_6546() /* ty=Tensor[(16, 9, 7), int8] */;
  %297 = @func_1168(%260, %261) /* ty=Tensor[(12, 16, 2), uint16] */;
  %298 = %264.0;
  %299 = rsqrt(%276) /* ty=Tensor[(10, 7, 10), float32] */;
  %300 = %282.1;
  %301 = less(%285, %286) /* ty=Tensor[(10, 7, 10), bool] */;
  %302 = @func_6140() /* ty=Tensor[(16, 9, 7), int8] */;
  %303 = %294.1;
  (%295, %296, %297, %var_6795, %298, %var_6808, %299, %289, meta[relay.Constant][14] /* ty=Tensor[(280), float32] */, %300, meta[relay.Constant][15] /* ty=Tensor[(1287), float32] */, %301, %302, %303, %var_6842, meta[relay.Constant][16] /* ty=Tensor[(550), int16] */)
}

def @func_6953() -> (Tensor[(16, 9, 7), int8],) {
  %304 = @func_6546() /* ty=Tensor[(16, 9, 7), int8] */;
  (%304,)
}

def @func_6546() -> Tensor[(16, 9, 7), int8] {
  @func_6244() /* ty=Tensor[(16, 9, 7), int8] */
}

def @func_4354(%var_4331: float32, %var_4341: Tensor[(550), int16], %var_4342: Tensor[(390, 3), float64]) -> (Tensor[(10, 11, 1), bool], Tensor[(2, 56), uint32], Tensor[(550), int16], Tensor[(390, 3), float64], Tensor[(112), uint32], Tensor[(10, 11, 1), float32]) {
  %305 = cast(%var_4331, dtype="bool") /* ty=bool */;
  %306 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 11, 1), float32] */, dtype="bool") /* ty=Tensor[(10, 11, 1), bool] */;
  %307 = cast(%var_4341, dtype="int16") /* ty=Tensor[(550), int16] */;
  %308 = cast(%var_4341, dtype="int16") /* ty=Tensor[(550), int16] */;
  %309 = cast(%var_4342, dtype="float64") /* ty=Tensor[(390, 3), float64] */;
  %310 = cast(meta[relay.Constant][18] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %311 = reshape(%307, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), int16] */;
  %312 = reshape(%308, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), int16] */;
  %313 = reshape(%309, newshape=[5, 234]) /* ty=Tensor[(5, 234), float64] */;
  %314 = reshape(%310, newshape=[2, 56]) /* ty=Tensor[(2, 56), uint32] */;
  %315 = @func_1252(%311, %312, %313, %314) /* ty=(Tensor[(11, 10, 5), bool], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(264, 1), float64], Tensor[(11, 8, 3), float64], Tensor[(13, 10, 9), float64], Tensor[(5, 234), float64], Tensor[(2, 56), uint32]) */;
  %316 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 11, 1), float32] */, dtype="float32") /* ty=Tensor[(10, 11, 1), float32] */;
  %317 = not_equal(%305, %306) /* ty=Tensor[(10, 11, 1), bool] */;
  %318 = %315.7;
  %319 = sqrt(%316) /* ty=Tensor[(10, 11, 1), float32] */;
  (%317, %318, %var_4341, %var_4342, meta[relay.Constant][18] /* ty=Tensor[(112), uint32] */, %319)
}

def @func_99(%var_78: Tensor[(11, 8, 3), float64]) -> (Tensor[(11, 8, 3), float64],) {
  %320 = cast(%var_78, dtype="float64") /* ty=Tensor[(11, 8, 3), float64] */;
  %321 = sinh(%320) /* ty=Tensor[(11, 8, 3), float64] */;
  (%321,)
}

def @func_5692(%var_5657: Tensor[(200, 2), bool], %var_5671: Tensor[(480), float32], %var_5672: Tensor[(108, 2), float64], %var_5674: Tensor[(330, 2), int8]) -> (Tensor[(13, 5, 8), bool], Tensor[(13, 5, 8), float32], Tensor[(10, 10, 4), bool], Tensor[(200, 2), bool], Tensor[(396), float32], Tensor[(225, 3), float64], Tensor[(480), float32], Tensor[(108, 2), float64], Tensor[(396), float32], Tensor[(330, 2), int8]) {
  %322 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 5, 8), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 8), float64] */;
  %323 = cos(%322) /* ty=Tensor[(13, 5, 8), float64] */;
  %324 = cast(%323, dtype="bool") /* ty=Tensor[(13, 5, 8), bool] */;
  %325 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(13, 5, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 5, 8), float64] */, dtype="bool") /* ty=Tensor[(13, 5, 8), bool] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %328 = cast(%323, dtype="float32") /* ty=Tensor[(13, 5, 8), float32] */;
  %329 = tan(%328) /* ty=Tensor[(13, 5, 8), float32] */;
  %330 = cast(%329, dtype="float32") /* ty=Tensor[(13, 5, 8), float32] */;
  %331 = erf(%330) /* ty=Tensor[(13, 5, 8), float32] */;
  %332 = cast(%331, dtype="float32") /* ty=Tensor[(13, 5, 8), float32] */;
  %333 = cast(%var_5657, dtype="bool") /* ty=Tensor[(200, 2), bool] */;
  %334 = cast(%var_5657, dtype="bool") /* ty=Tensor[(200, 2), bool] */;
  %335 = reshape(%333, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), bool] */;
  %336 = reshape(%334, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), bool] */;
  %337 = @func_4745(%335, %336) /* ty=(Tensor[(10, 10, 4), bool],) */;
  %338 = cast(meta[relay.Constant][20] /* ty=Tensor[(225, 3), float64] */, dtype="float64") /* ty=Tensor[(225, 3), float64] */;
  %339 = cast(%var_5671, dtype="float32") /* ty=Tensor[(480), float32] */;
  %340 = cast(%var_5672, dtype="float64") /* ty=Tensor[(108, 2), float64] */;
  %341 = cast(meta[relay.Constant][21] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %342 = cast(%var_5674, dtype="int8") /* ty=Tensor[(330, 2), int8] */;
  %343 = cast(meta[relay.Constant][20] /* ty=Tensor[(225, 3), float64] */, dtype="float64") /* ty=Tensor[(225, 3), float64] */;
  %344 = reshape(%338, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %345 = reshape(%339, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %346 = reshape(%340, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %347 = reshape(%341, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %348 = reshape(%342, newshape=[110, 6]) /* ty=Tensor[(110, 6), int8] */;
  %349 = reshape(%343, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %350 = @func_4541(%344, %345, %346, %347, %348, %349) /* ty=(Tensor[(216), float64], Tensor[(480), float32], Tensor[(216), float64], Tensor[(5, 15, 9), uint64], Tensor[(14, 16, 16), bool], Tensor[(224), float32], Tensor[(396), float32], Tensor[(3584), float32], Tensor[(6, 11, 10), int8], Tensor[(110, 6), int8], Tensor[(5, 15, 9), bool]) */;
  %351 = less(%326, %327) /* ty=Tensor[(13, 5, 8), bool] */;
  %352 = log(%332) /* ty=Tensor[(13, 5, 8), float32] */;
  %353 = %337.0;
  %354 = %350.6;
  (%351, %352, %353, %var_5657, %354, meta[relay.Constant][20] /* ty=Tensor[(225, 3), float64] */, %var_5671, %var_5672, meta[relay.Constant][21] /* ty=Tensor[(396), float32] */, %var_5674)
}

def @func_3339(%var_3315: Tensor[(7, 1, 11), float32], %var_3316: Tensor[(7, 1, 11), float32]) -> Tensor[(7, ?, 11), float64] {
  %355 = cast(%var_3316, dtype="bool") /* ty=Tensor[(7, 1, 11), bool] */;
  %356 = shape_of(%var_3315, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%var_3315, dtype="bool") /* ty=Tensor[(7, 1, 11), bool] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %359 = less(%357, %358) /* ty=Tensor[(7, ?, 11), bool] */;
  %360 = cast(%359, dtype="float64") /* ty=Tensor[(7, ?, 11), float64] */;
  %361 = shape_of(%var_3316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%var_3316, dtype="float64") /* ty=Tensor[(7, 1, 11), float64] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%362, %363) /* ty=Tensor[(7, ?, 11), float64] */
}

def @func_4541(%var_4464: Tensor[(5, 15, 9), float64], %var_4485: Tensor[(480), float32], %var_4486: Tensor[(216), float64], %var_4502: Tensor[(396), float32], %var_4532: Tensor[(110, 6), int8], %var_4537: Tensor[(5, 15, 9), float64]) -> (Tensor[(216), float64], Tensor[(480), float32], Tensor[(216), float64], Tensor[(5, 15, 9), uint64], Tensor[(14, 16, 16), bool], Tensor[(224), float32], Tensor[(396), float32], Tensor[(3584), float32], Tensor[(6, 11, 10), int8], Tensor[(110, 6), int8], Tensor[(5, 15, 9), bool]) {
  %364 = cast(%var_4485, dtype="float32") /* ty=Tensor[(480), float32] */;
  %365 = cast(%var_4486, dtype="float64") /* ty=Tensor[(216), float64] */;
  %366 = reshape(%364, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), float32] */;
  %367 = reshape(%365, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %368 = @func_4308(%366, %367) /* ty=(Tensor[(3, 6, 12), float64], Tensor[(216), float64], Tensor[(16, 6, 5), float32]) */;
  %369 = cast(%var_4464, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %370 = cosh(%369) /* ty=Tensor[(5, 15, 9), float64] */;
  %371 = cast(%370, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %372 = erf(%371) /* ty=Tensor[(5, 15, 9), float64] */;
  %373 = cast(%var_4464, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %374 = rsqrt(%373) /* ty=Tensor[(5, 15, 9), float64] */;
  %375 = cast(%374, dtype="uint64") /* ty=Tensor[(5, 15, 9), uint64] */;
  %376 = shape_of(%372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%372, dtype="uint64") /* ty=Tensor[(5, 15, 9), uint64] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %379 = cast(meta[relay.Constant][22] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %380 = cast(%var_4502, dtype="float32") /* ty=Tensor[(396), float32] */;
  %381 = cast(meta[relay.Constant][23] /* ty=Tensor[(3584), float32] */, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %382 = reshape(%379, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
  %383 = reshape(%380, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float32] */;
  %384 = reshape(%381, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %385 = @func_4270(%382, %383, %384) /* ty=(Tensor[(6, 11, 6), uint32], Tensor[(396, ?), uint64], Tensor[(6, 11, 6), int8], Tensor[(14, 16, 16), bool], Tensor[(14, 16, 16), float32]) */;
  %386 = cast(%var_4532, dtype="int8") /* ty=Tensor[(110, 6), int8] */;
  %387 = cast(%var_4532, dtype="int8") /* ty=Tensor[(110, 6), int8] */;
  %388 = reshape(%386, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int8] */;
  %389 = reshape(%387, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int8] */;
  %390 = @func_1326(%388, %389) /* ty=(Tensor[(6, 11, 10), int8],) */;
  %391 = cast(%var_4537, dtype="bool") /* ty=Tensor[(5, 15, 9), bool] */;
  %392 = shape_of(%372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%372, dtype="bool") /* ty=Tensor[(5, 15, 9), bool] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %395 = %368.1;
  %396 = subtract(%377, %378) /* ty=Tensor[(5, 15, 9), uint64] */;
  %397 = %385.3;
  %398 = %390.0;
  %399 = logical_or(%393, %394) /* ty=Tensor[(5, 15, 9), bool] */;
  (%395, %var_4485, %var_4486, %396, %397, meta[relay.Constant][22] /* ty=Tensor[(224), float32] */, %var_4502, meta[relay.Constant][23] /* ty=Tensor[(3584), float32] */, %398, %var_4532, %399)
}

def @func_1168(%var_1154: Tensor[(12, 16, 2), uint16], %var_1155: Tensor[(12, 16, 2), uint16]) -> Tensor[(12, 16, 2), uint16] {
  %400 = cast(%var_1155, dtype="uint16") /* ty=Tensor[(12, 16, 2), uint16] */;
  %401 = shape_of(%var_1154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%var_1154, dtype="uint16") /* ty=Tensor[(12, 16, 2), uint16] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_xor(%402, %403) /* ty=Tensor[(12, 16, 2), uint16] */
}

def @func_508(%var_492: Tensor[(13, 10, 9), float64], %var_503: Tensor[(28, 4), uint32]) -> (Tensor[(13, 10, 9), float64], Tensor[(11, 8, 3), float64], Tensor[(264), float64], Tensor[(28, 4), float64]) {
  %404 = cast(%var_492, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
  %405 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(13, 10, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %406 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 10, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
  %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %408 = cast(%var_503, dtype="uint32") /* ty=Tensor[(28, 4), uint32] */;
  %409 = cast(meta[relay.Constant][25] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %410 = reshape(%408, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), uint32] */;
  %411 = reshape(%409, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %412 = @func_454(%410, %411) /* ty=(Tensor[(2, 4, 14), uint32], Tensor[(11, 8, 3), float64], Tensor[(264), float64]) */;
  %413 = cast(%var_503, dtype="float64") /* ty=Tensor[(28, 4), float64] */;
  %414 = mod(%406, %407) /* ty=Tensor[(13, 10, 9), float64] */;
  %415 = %412.1;
  %416 = log10(%413) /* ty=Tensor[(28, 4), float64] */;
  (%414, %415, meta[relay.Constant][25] /* ty=Tensor[(264), float64] */, %416)
}

def @func_4270(%var_4156: Tensor[(14, 16, 1), float32], %var_4177: Tensor[(6, 11, 6), float32], %var_4212: Tensor[(14, 16, 16), float32]) -> (Tensor[(6, 11, 6), uint32], Tensor[(396, ?), uint64], Tensor[(6, 11, 6), int8], Tensor[(14, 16, 16), bool], Tensor[(14, 16, 16), float32]) {
  %417 = cast(meta[relay.Constant][26] /* ty=Tensor[(396, 1), float64] */, dtype="float64") /* ty=Tensor[(396, 1), float64] */;
  %418 = reshape(%417, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float64] */;
  %419 = @func_526(%418) /* ty=(Tensor[(6, 11, 6), float64], Tensor[(6, 11, 6), float32]) */;
  %420 = %419.1;
  %421 = cast(%var_4177, dtype="uint32") /* ty=Tensor[(6, 11, 6), uint32] */;
  %422 = shape_of(%420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%420, dtype="uint32") /* ty=Tensor[(6, 11, 6), uint32] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %425 = cast(%var_4177, dtype="uint64") /* ty=Tensor[(6, 11, 6), uint64] */;
  %426 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(396, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %427 = cast(meta[relay.Constant][26] /* ty=Tensor[(396, 1), float64] */, dtype="uint64") /* ty=Tensor[(396, 1), uint64] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %429 = cast(meta[relay.Constant][26] /* ty=Tensor[(396, 1), float64] */, dtype="int8") /* ty=Tensor[(396, 1), int8] */;
  %430 = shape_of(%var_4177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%var_4177, dtype="int8") /* ty=Tensor[(6, 11, 6), int8] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %433 = cast(%var_4156, dtype="float32") /* ty=Tensor[(14, 16, 1), float32] */;
  %434 = log(%433) /* ty=Tensor[(14, 16, 1), float32] */;
  %435 = cast(%434, dtype="bool") /* ty=Tensor[(14, 16, 1), bool] */;
  %436 = cast(%var_4212, dtype="bool") /* ty=Tensor[(14, 16, 16), bool] */;
  %437 = cast(%434, dtype="bool") /* ty=Tensor[(14, 16, 1), bool] */;
  %438 = cast(%var_4212, dtype="bool") /* ty=Tensor[(14, 16, 16), bool] */;
  %439 = greater_equal(%437, %438) /* ty=Tensor[(14, 16, 16), bool] */;
  %440 = cast(%439, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
  %441 = bitwise_xor(%423, %424) /* ty=Tensor[(6, 11, 6), uint32] */;
  %442 = multiply(%427, %428) /* ty=Tensor[(396, ?), uint64] */;
  %443 = left_shift(%431, %432) /* ty=Tensor[(6, 11, 6), int8] */;
  %444 = equal(%435, %436) /* ty=Tensor[(14, 16, 16), bool] */;
  %445 = atan(%440) /* ty=Tensor[(14, 16, 16), float32] */;
  (%441, %442, %443, %444, %445)
}

def @func_4680(%var_4578: int8, %var_4579: Tensor[(10, 5, 16), int8], %var_4609: Tensor[(216), float64], %var_4647: Tensor[(675), float64], %var_4648: Tensor[(396), float32], %var_4663: Tensor[(550, 3), float32], %var_4675: Tensor[(550), int16]) -> (Tensor[(10, 5, 16), bool], Tensor[(480), float32], Tensor[(216), float64], Tensor[(216), uint64], Tensor[(10, 5, 16), float64], Tensor[(3, 6, 12), float64], Tensor[(3584), float32], Tensor[(675), float64], Tensor[(396), float32], Tensor[(660), int8], Tensor[(6, 11, 6), float64], Tensor[(312), float32], Tensor[(550, 3), float32], Tensor[(2, 56), uint32], Tensor[(1820), float64], Tensor[(550), int16], Tensor[(1170, 1), float64]) {
  %446 = cast(%var_4578, dtype="bool") /* ty=bool */;
  %447 = cast(%var_4579, dtype="bool") /* ty=Tensor[(10, 5, 16), bool] */;
  %448 = cast(meta[relay.Constant][27] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %449 = cast(%var_4609, dtype="float64") /* ty=Tensor[(216), float64] */;
  %450 = reshape(%448, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), float32] */;
  %451 = reshape(%449, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %452 = @func_4308(%450, %451) /* ty=(Tensor[(3, 6, 12), float64], Tensor[(216), float64], Tensor[(16, 6, 5), float32]) */;
  %453 = %452.1;
  %454 = cast(%453, dtype="uint64") /* ty=Tensor[(216), uint64] */;
  %455 = cast(%var_4578, dtype="uint64") /* ty=uint64 */;
  %456 = cast(%var_4579, dtype="float64") /* ty=Tensor[(10, 5, 16), float64] */;
  %457 = cast(%var_4578, dtype="float64") /* ty=float64 */;
  %458 = multiply(%454, %455) /* ty=Tensor[(216), uint64] */;
  %459 = cast(%458, dtype="float64") /* ty=Tensor[(216), float64] */;
  %460 = reshape(%459, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %461 = @func_2728(%460) /* ty=(Tensor[(7, 9, 8), float64], Tensor[(3, 6, 12), float64], Tensor[(216), float64]) */;
  %462 = cast(%var_4647, dtype="float64") /* ty=Tensor[(675), float64] */;
  %463 = cast(meta[relay.Constant][27] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %464 = %461.1;
  %465 = cast(%464, dtype="float64") /* ty=Tensor[(3, 6, 12), float64] */;
  %466 = cast(%var_4648, dtype="float32") /* ty=Tensor[(396), float32] */;
  %467 = cast(meta[relay.Constant][28] /* ty=Tensor[(660), int8] */, dtype="int8") /* ty=Tensor[(660), int8] */;
  %468 = cast(%var_4647, dtype="float64") /* ty=Tensor[(675), float64] */;
  %469 = reshape(%462, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %470 = reshape(%463, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %471 = reshape(%465, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %472 = reshape(%466, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %473 = reshape(%467, newshape=[110, 6]) /* ty=Tensor[(110, 6), int8] */;
  %474 = reshape(%468, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %475 = @func_4541(%469, %470, %471, %472, %473, %474) /* ty=(Tensor[(216), float64], Tensor[(480), float32], Tensor[(216), float64], Tensor[(5, 15, 9), uint64], Tensor[(14, 16, 16), bool], Tensor[(224), float32], Tensor[(396), float32], Tensor[(3584), float32], Tensor[(6, 11, 10), int8], Tensor[(110, 6), int8], Tensor[(5, 15, 9), bool]) */;
  %476 = cast(meta[relay.Constant][29] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %477 = cast(%var_4663, dtype="float32") /* ty=Tensor[(550, 3), float32] */;
  %478 = cast(%var_4648, dtype="float64") /* ty=Tensor[(396), float64] */;
  %479 = reshape(%476, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), float32] */;
  %480 = reshape(%477, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %481 = reshape(%478, newshape=[396]) /* ty=Tensor[(396), float64] */;
  %482 = @func_1041(%479, %480, %481) /* ty=(Tensor[(2, 13, 12), float32], Tensor[(1650), bool], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) */;
  %483 = cast(meta[relay.Constant][30] /* ty=Tensor[(1820), float64] */, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %484 = cast(%var_4675, dtype="int16") /* ty=Tensor[(550), int16] */;
  %485 = cast(meta[relay.Constant][31] /* ty=Tensor[(1170, 1), float64] */, dtype="float64") /* ty=Tensor[(1170, 1), float64] */;
  %486 = reshape(%483, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float64] */;
  %487 = reshape(%484, newshape=[550]) /* ty=Tensor[(550), int16] */;
  %488 = reshape(%485, newshape=[390, 3]) /* ty=Tensor[(390, 3), float64] */;
  %489 = @func_1747(%486, %487, %488) /* ty=(Tensor[(10, 13, 14), float64], Tensor[(2, 56), uint32], Tensor[(550), int16], Tensor[(390, 3), float64], Tensor[(112), uint32]) */;
  %490 = not_equal(%446, %447) /* ty=Tensor[(10, 5, 16), bool] */;
  %491 = power(%456, %457) /* ty=Tensor[(10, 5, 16), float64] */;
  %492 = %475.7;
  %493 = %482.2;
  %494 = %489.1;
  (%490, meta[relay.Constant][27] /* ty=Tensor[(480), float32] */, %var_4609, %458, %491, %464, %492, %var_4647, %var_4648, meta[relay.Constant][28] /* ty=Tensor[(660), int8] */, %493, meta[relay.Constant][29] /* ty=Tensor[(312), float32] */, %var_4663, %494, meta[relay.Constant][30] /* ty=Tensor[(1820), float64] */, %var_4675, meta[relay.Constant][31] /* ty=Tensor[(1170, 1), float64] */)
}

def @func_6263() -> (Tensor[(16, 9, 7), int8],) {
  %495 = @func_6244() /* ty=Tensor[(16, 9, 7), int8] */;
  (%495,)
}

def @func_2249(%var_2235: float32, %var_2244: Tensor[(1650), float32]) -> (Tensor[(6, 8, 5), float32], Tensor[(10, 15, 11), float32], Tensor[(1650), float32]) {
  %496 = cast(%var_2235, dtype="float32") /* ty=float32 */;
  %497 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 8, 5), float32] */, dtype="float32") /* ty=Tensor[(6, 8, 5), float32] */;
  %498 = cast(%var_2244, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %499 = cast(%var_2244, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %500 = reshape(%498, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %501 = reshape(%499, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %502 = @func_746(%500, %501) /* ty=(Tensor[(10, 15, 11), float32], Tensor[(10, 15, 11), float32]) */;
  %503 = mod(%496, %497) /* ty=Tensor[(6, 8, 5), float32] */;
  %504 = %502.1;
  (%503, %504, %var_2244)
}

def @func_6493(%var_6489: Tensor[(1650), float32]) -> (Tensor[(16, 9, 7), bool], Tensor[(3, 6, 12), float64], Tensor[(216), float64], Tensor[(10, 15, 11), float32], Tensor[(1, 56), uint64], Tensor[(336), uint64], Tensor[(1650), float32], Tensor[(130, 9), float64]) {
  %505 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
  %506 = cast(meta[relay.Constant][33] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %507 = reshape(%506, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), float64] */;
  %508 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 56), uint64] */, dtype="uint64") /* ty=Tensor[(1, 56), uint64] */;
  %509 = cast(meta[relay.Constant][35] /* ty=Tensor[(336), uint64] */, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %510 = cast(%var_6489, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %511 = cast(meta[relay.Constant][36] /* ty=Tensor[(130, 9), float64] */, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
  %512 = reshape(%508, newshape=[4, 14, 1]) /* ty=Tensor[(4, 14, 1), uint64] */;
  %513 = reshape(%509, newshape=[4, 14, 6]) /* ty=Tensor[(4, 14, 6), uint64] */;
  %514 = reshape(%510, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %515 = reshape(%511, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %516 = @func_993(%512, %513, %514, %515) /* ty=(Tensor[(4, 14, 6), uint64], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(13, 10, 9), float64], Tensor[(112), uint32], Tensor[(264), float64], Tensor[(264), float64], Tensor[(1170), uint16]) */;
  %517 = %505.0;
  %518 = @func_2507(%507) /* ty=Tensor[(3, 6, 12), float64] */;
  %519 = %516.1;
  (%517, %518, meta[relay.Constant][33] /* ty=Tensor[(216), float64] */, %519, meta[relay.Constant][34] /* ty=Tensor[(1, 56), uint64] */, meta[relay.Constant][35] /* ty=Tensor[(336), uint64] */, %var_6489, meta[relay.Constant][36] /* ty=Tensor[(130, 9), float64] */)
}

def @func_3993(%var_3944: Tensor[(264), float64], %var_3948: Tensor[(384), uint16], %var_3976: Tensor[(144), int64]) -> (Tensor[(11, 8, 3), float64], Tensor[(112), uint32], Tensor[(264), float64], Tensor[(12, 16, 2), uint16], Tensor[(384), uint16], Tensor[(2, 8, 2), float32], Tensor[(12, 4, 3), int64], Tensor[(144), int64], Tensor[(2, 8, 2), float32]) {
  %520 = cast(meta[relay.Constant][37] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %521 = cast(%var_3944, dtype="float64") /* ty=Tensor[(264), float64] */;
  %522 = reshape(%520, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), uint32] */;
  %523 = reshape(%521, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %524 = @func_454(%522, %523) /* ty=(Tensor[(2, 4, 14), uint32], Tensor[(11, 8, 3), float64], Tensor[(264), float64]) */;
  %525 = cast(%var_3948, dtype="uint16") /* ty=Tensor[(384), uint16] */;
  %526 = cast(%var_3948, dtype="uint16") /* ty=Tensor[(384), uint16] */;
  %527 = reshape(%525, newshape=[12, 16, 2]) /* ty=Tensor[(12, 16, 2), uint16] */;
  %528 = reshape(%526, newshape=[12, 16, 2]) /* ty=Tensor[(12, 16, 2), uint16] */;
  %529 = cast(meta[relay.Constant][38] /* ty=Tensor[(2, 8, 2), float64] */, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
  %530 = exp(%529) /* ty=Tensor[(2, 8, 2), float64] */;
  %531 = cast(%530, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %532 = cast(%var_3976, dtype="int64") /* ty=Tensor[(144), int64] */;
  %533 = cast(%var_3976, dtype="int64") /* ty=Tensor[(144), int64] */;
  %534 = reshape(%532, newshape=[12, 4, 3]) /* ty=Tensor[(12, 4, 3), int64] */;
  %535 = reshape(%533, newshape=[12, 4, 3]) /* ty=Tensor[(12, 4, 3), int64] */;
  %536 = cast(%530, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %537 = %524.1;
  %538 = @func_1168(%527, %528) /* ty=Tensor[(12, 16, 2), uint16] */;
  %539 = tan(%531) /* ty=Tensor[(2, 8, 2), float32] */;
  %540 = @func_3390(%534, %535) /* ty=Tensor[(12, 4, 3), int64] */;
  %541 = asin(%536) /* ty=Tensor[(2, 8, 2), float32] */;
  (%537, meta[relay.Constant][37] /* ty=Tensor[(112), uint32] */, %var_3944, %538, %var_3948, %539, %540, %var_3976, %541)
}

def @func_5943(%var_5938: Tensor[(77), float32], %var_5941: Tensor[(660), int8]) -> (Tensor[(16, 9, 7), bool], Tensor[(7, ?, 11), float64], Tensor[(77), float32], Tensor[(6, 11, 10), int8], Tensor[(660), int8]) {
  %542 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
  %543 = cast(%var_5938, dtype="float32") /* ty=Tensor[(77), float32] */;
  %544 = cast(%var_5938, dtype="float32") /* ty=Tensor[(77), float32] */;
  %545 = reshape(%543, newshape=[7, 1, 11]) /* ty=Tensor[(7, 1, 11), float32] */;
  %546 = reshape(%544, newshape=[7, 1, 11]) /* ty=Tensor[(7, 1, 11), float32] */;
  %547 = cast(%var_5941, dtype="int8") /* ty=Tensor[(660), int8] */;
  %548 = cast(%var_5941, dtype="int8") /* ty=Tensor[(660), int8] */;
  %549 = reshape(%547, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int8] */;
  %550 = reshape(%548, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int8] */;
  %551 = @func_1326(%549, %550) /* ty=(Tensor[(6, 11, 10), int8],) */;
  %552 = %542.0;
  %553 = @func_3339(%545, %546) /* ty=Tensor[(7, ?, 11), float64] */;
  %554 = %551.0;
  (%552, %553, %var_5938, %554, %var_5941)
}

def @func_6337(%var_6320: Tensor[(77), float32], %var_6331: Tensor[(280), float32], %var_6333: Tensor[(2, 56), uint32]) -> (Tensor[(16, 9, 7), int8], Tensor[(6, 11, 10), int8], Tensor[(77), float32], Tensor[(660, 1), int8], Tensor[(264), float64], Tensor[(280), float32], Tensor[(1170), float64], Tensor[(2, 56), uint32]) {
  %555 = cast(%var_6320, dtype="float32") /* ty=Tensor[(77), float32] */;
  %556 = cast(meta[relay.Constant][39] /* ty=Tensor[(660, 1), int8] */, dtype="int8") /* ty=Tensor[(660, 1), int8] */;
  %557 = reshape(%555, newshape=[77]) /* ty=Tensor[(77), float32] */;
  %558 = reshape(%556, newshape=[660]) /* ty=Tensor[(660), int8] */;
  %559 = @func_5943(%557, %558) /* ty=(Tensor[(16, 9, 7), bool], Tensor[(7, ?, 11), float64], Tensor[(77), float32], Tensor[(6, 11, 10), int8], Tensor[(660), int8]) */;
  %560 = cast(%var_6331, dtype="float32") /* ty=Tensor[(280), float32] */;
  %561 = cast(meta[relay.Constant][40] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %562 = cast(%var_6333, dtype="uint32") /* ty=Tensor[(2, 56), uint32] */;
  %563 = cast(meta[relay.Constant][40] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %564 = reshape(%560, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
  %565 = reshape(%561, newshape=[10, 117]) /* ty=Tensor[(10, 117), float64] */;
  %566 = reshape(%562, newshape=[112]) /* ty=Tensor[(112), uint32] */;
  %567 = reshape(%563, newshape=[10, 117]) /* ty=Tensor[(10, 117), float64] */;
  %568 = @func_1611(%564, %565, %566, %567) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(264), float64], Tensor[(112), uint32], Tensor[(10, 117), float32]) */;
  %569 = @func_6244() /* ty=Tensor[(16, 9, 7), int8] */;
  %570 = %559.3;
  %571 = %568.1;
  (%569, %570, %var_6320, meta[relay.Constant][39] /* ty=Tensor[(660, 1), int8] */, %571, %var_6331, meta[relay.Constant][40] /* ty=Tensor[(1170), float64] */, %var_6333)
}

def @func_5376(%var_5366: Tensor[(14, 7, 2), uint64]) -> (Tensor[(14, 7, 2), uint64],) {
  %572 = cast(meta[relay.Constant][41] /* ty=Tensor[(14, 7, 2), uint64] */, dtype="uint64") /* ty=Tensor[(14, 7, 2), uint64] */;
  %573 = shape_of(%var_5366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%var_5366, dtype="uint64") /* ty=Tensor[(14, 7, 2), uint64] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %576 = subtract(%574, %575) /* ty=Tensor[(14, 7, 2), uint64] */;
  (%576,)
}

def @func_6223(%var_6216: Tensor[(16, 9, 7), float64]) -> Tensor[(16, 9, 7), float64] {
  %577 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
  %578 = %577.1;
  %579 = cast(%578, dtype="float64") /* ty=Tensor[(16, 9, 7), float64] */;
  %580 = atan(%579) /* ty=Tensor[(16, 9, 7), float64] */;
  %581 = cast(%var_6216, dtype="float64") /* ty=Tensor[(16, 9, 7), float64] */;
  %582 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%580, dtype="float64") /* ty=Tensor[(16, 9, 7), float64] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%583, %584) /* ty=Tensor[(16, 9, 7), float64] */
}

def @func_4745(%var_4738: Tensor[(10, 10, 4), bool], %var_4739: Tensor[(10, 10, 4), bool]) -> (Tensor[(10, 10, 4), bool],) {
  %585 = cast(%var_4739, dtype="bool") /* ty=Tensor[(10, 10, 4), bool] */;
  %586 = shape_of(%var_4738, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%var_4738, dtype="bool") /* ty=Tensor[(10, 10, 4), bool] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %589 = logical_or(%587, %588) /* ty=Tensor[(10, 10, 4), bool] */;
  (%589,)
}

def @func_6503() -> Tensor[(16, 9, 7), int8] {
  %590 = @func_6039() /* ty=(Tensor[(16, 9, 7), int8],) */;
  %590.0
}

def @func_5102(%var_5085: Tensor[(4, 120), float32], %var_5086: Tensor[(216), float64], %var_5088: Tensor[(660), int8]) -> (Tensor[(2, 6, 7), float64], Tensor[(2, 6, 7), float32], Tensor[(2, 6, 7), float32], Tensor[(224), float32], Tensor[(675), float64], Tensor[(4, 120), float32], Tensor[(216), float64], Tensor[(6, 66), float32], Tensor[(660), int8], Tensor[(2, 6, 7), float32]) {
  %591 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 6, 7), float64] */;
  %592 = rsqrt(%591) /* ty=Tensor[(2, 6, 7), float64] */;
  %593 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 6, 7), float64] */;
  %594 = shape_of(%592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%592, dtype="float64") /* ty=Tensor[(2, 6, 7), float64] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %597 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 6, 7), float64] */, dtype="float32") /* ty=Tensor[(2, 6, 7), float32] */;
  %598 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 6, 7), float64] */, dtype="float32") /* ty=Tensor[(2, 6, 7), float32] */;
  %599 = cast(meta[relay.Constant][43] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %600 = cast(%var_5085, dtype="float32") /* ty=Tensor[(4, 120), float32] */;
  %601 = cast(%var_5086, dtype="float64") /* ty=Tensor[(216), float64] */;
  %602 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 66), float32] */, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %603 = cast(%var_5088, dtype="int8") /* ty=Tensor[(660), int8] */;
  %604 = cast(meta[relay.Constant][43] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %605 = reshape(%599, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %606 = reshape(%600, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %607 = reshape(%601, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %608 = reshape(%602, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %609 = reshape(%603, newshape=[110, 6]) /* ty=Tensor[(110, 6), int8] */;
  %610 = reshape(%604, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %611 = @func_4541(%605, %606, %607, %608, %609, %610) /* ty=(Tensor[(216), float64], Tensor[(480), float32], Tensor[(216), float64], Tensor[(5, 15, 9), uint64], Tensor[(14, 16, 16), bool], Tensor[(224), float32], Tensor[(396), float32], Tensor[(3584), float32], Tensor[(6, 11, 10), int8], Tensor[(110, 6), int8], Tensor[(5, 15, 9), bool]) */;
  %612 = cast(%592, dtype="float32") /* ty=Tensor[(2, 6, 7), float32] */;
  %613 = floor_mod(%595, %596) /* ty=Tensor[(2, 6, 7), float64] */;
  %614 = acos(%597) /* ty=Tensor[(2, 6, 7), float32] */;
  %615 = sin(%598) /* ty=Tensor[(2, 6, 7), float32] */;
  %616 = %611.5;
  %617 = log10(%612) /* ty=Tensor[(2, 6, 7), float32] */;
  (%613, %614, %615, %616, meta[relay.Constant][43] /* ty=Tensor[(675), float64] */, %var_5085, %var_5086, meta[relay.Constant][44] /* ty=Tensor[(6, 66), float32] */, %var_5088, %617)
}

def @func_2840(%var_2789: Tensor[(13, 12, 14), uint64], %var_2802: Tensor[(1170), float64], %var_2819: Tensor[(112), uint32]) -> (Tensor[(13, 12, 14), uint64], Tensor[(56), uint64], Tensor[(336), uint64], Tensor[(1650), float32], Tensor[(1170), float64], Tensor[(1650), float32], Tensor[(550), int16], Tensor[(112), uint32], Tensor[(13, 10, 9), int8]) {
  %618 = cast(%var_2789, dtype="uint64") /* ty=Tensor[(13, 12, 14), uint64] */;
  %619 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(13, 12, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 12, 14), uint64] */, dtype="uint64") /* ty=Tensor[(13, 12, 14), uint64] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %622 = cast(meta[relay.Constant][49] /* ty=Tensor[(550), int16] */, dtype="int16") /* ty=Tensor[(550), int16] */;
  %623 = cast(meta[relay.Constant][49] /* ty=Tensor[(550), int16] */, dtype="int16") /* ty=Tensor[(550), int16] */;
  %624 = cast(meta[relay.Constant][46] /* ty=Tensor[(56), uint64] */, dtype="uint64") /* ty=Tensor[(56), uint64] */;
  %625 = cast(meta[relay.Constant][47] /* ty=Tensor[(336), uint64] */, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %626 = cast(meta[relay.Constant][48] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %627 = cast(%var_2802, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %628 = reshape(%624, newshape=[4, 14, 1]) /* ty=Tensor[(4, 14, 1), uint64] */;
  %629 = reshape(%625, newshape=[4, 14, 6]) /* ty=Tensor[(4, 14, 6), uint64] */;
  %630 = reshape(%626, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %631 = reshape(%627, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %632 = @func_993(%628, %629, %630, %631) /* ty=(Tensor[(4, 14, 6), uint64], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(13, 10, 9), float64], Tensor[(112), uint32], Tensor[(264), float64], Tensor[(264), float64], Tensor[(1170), uint16]) */;
  %633 = %632.3;
  %634 = cast(%633, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
  %635 = asinh(%634) /* ty=Tensor[(13, 10, 9), float64] */;
  %636 = cast(%635, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
  %637 = cast(%var_2819, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %638 = reshape(%622, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), int16] */;
  %639 = reshape(%623, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), int16] */;
  %640 = reshape(%636, newshape=[5, 234]) /* ty=Tensor[(5, 234), float64] */;
  %641 = reshape(%637, newshape=[2, 56]) /* ty=Tensor[(2, 56), uint32] */;
  %642 = @func_1252(%638, %639, %640, %641) /* ty=(Tensor[(11, 10, 5), bool], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(264, 1), float64], Tensor[(11, 8, 3), float64], Tensor[(13, 10, 9), float64], Tensor[(5, 234), float64], Tensor[(2, 56), uint32]) */;
  %643 = cast(%633, dtype="int8") /* ty=Tensor[(13, 10, 9), int8] */;
  %644 = shape_of(%635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(%635, dtype="int8") /* ty=Tensor[(13, 10, 9), int8] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %647 = left_shift(%620, %621) /* ty=Tensor[(13, 12, 14), uint64] */;
  %648 = %642.2;
  %649 = maximum(%645, %646) /* ty=Tensor[(13, 10, 9), int8] */;
  (%647, meta[relay.Constant][46] /* ty=Tensor[(56), uint64] */, meta[relay.Constant][47] /* ty=Tensor[(336), uint64] */, meta[relay.Constant][48] /* ty=Tensor[(1650), float32] */, %var_2802, %648, meta[relay.Constant][49] /* ty=Tensor[(550), int16] */, %var_2819, %649)
}

def @func_1252(%var_1220: Tensor[(11, 10, 5), int16], %var_1221: Tensor[(11, 10, 5), int16], %var_1248: Tensor[(5, 234), float64], %var_1249: Tensor[(2, 56), uint32]) -> (Tensor[(11, 10, 5), bool], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(264, 1), float64], Tensor[(11, 8, 3), float64], Tensor[(13, 10, 9), float64], Tensor[(5, 234), float64], Tensor[(2, 56), uint32]) {
  %650 = cast(%var_1221, dtype="bool") /* ty=Tensor[(11, 10, 5), bool] */;
  %651 = shape_of(%var_1220, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(%var_1220, dtype="bool") /* ty=Tensor[(11, 10, 5), bool] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %654 = cast(meta[relay.Constant][50] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %655 = cast(meta[relay.Constant][50] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %656 = reshape(%654, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %657 = reshape(%655, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %658 = @func_746(%656, %657) /* ty=(Tensor[(10, 15, 11), float32], Tensor[(10, 15, 11), float32]) */;
  %659 = cast(meta[relay.Constant][51] /* ty=Tensor[(264, 1), float64] */, dtype="float64") /* ty=Tensor[(264, 1), float64] */;
  %660 = reshape(%659, newshape=[11, 8, 3]) /* ty=Tensor[(11, 8, 3), float64] */;
  %661 = @func_99(%660) /* ty=(Tensor[(11, 8, 3), float64],) */;
  %662 = %661.0;
  %663 = cast(%662, dtype="float64") /* ty=Tensor[(11, 8, 3), float64] */;
  %664 = cast(%var_1248, dtype="float64") /* ty=Tensor[(5, 234), float64] */;
  %665 = cast(%var_1249, dtype="uint32") /* ty=Tensor[(2, 56), uint32] */;
  %666 = reshape(%664, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float64] */;
  %667 = reshape(%665, newshape=[28, 4]) /* ty=Tensor[(28, 4), uint32] */;
  %668 = @func_508(%666, %667) /* ty=(Tensor[(13, 10, 9), float64], Tensor[(11, 8, 3), float64], Tensor[(264), float64], Tensor[(28, 4), float64]) */;
  %669 = greater_equal(%652, %653) /* ty=Tensor[(11, 10, 5), bool] */;
  %670 = %658.0;
  %671 = sin(%663) /* ty=Tensor[(11, 8, 3), float64] */;
  %672 = %668.0;
  (%669, %670, meta[relay.Constant][50] /* ty=Tensor[(1650), float32] */, meta[relay.Constant][51] /* ty=Tensor[(264, 1), float64] */, %671, %672, %var_1248, %var_1249)
}

def @func_6583(%var_6567: Tensor[(140, 2), float32]) -> (Tensor[(16, 9, 7), int8], Tensor[(5, 14, 4), float32], Tensor[(140, 2), float32], Tensor[(1, 1170), float64], Tensor[(112), uint32]) {
  %673 = cast(%var_6567, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %674 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 1170), float64] */, dtype="float64") /* ty=Tensor[(1, 1170), float64] */;
  %675 = cast(meta[relay.Constant][53] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %676 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 1170), float64] */, dtype="float64") /* ty=Tensor[(1, 1170), float64] */;
  %677 = reshape(%673, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
  %678 = reshape(%674, newshape=[10, 117]) /* ty=Tensor[(10, 117), float64] */;
  %679 = reshape(%675, newshape=[112]) /* ty=Tensor[(112), uint32] */;
  %680 = reshape(%676, newshape=[10, 117]) /* ty=Tensor[(10, 117), float64] */;
  %681 = @func_1611(%677, %678, %679, %680) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(264), float64], Tensor[(112), uint32], Tensor[(10, 117), float32]) */;
  %682 = @func_6140() /* ty=Tensor[(16, 9, 7), int8] */;
  %683 = %681.0;
  (%682, %683, %var_6567, meta[relay.Constant][52] /* ty=Tensor[(1, 1170), float64] */, meta[relay.Constant][53] /* ty=Tensor[(112), uint32] */)
}

def @func_5854() -> (Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) {
  %684 = cast(meta[relay.Constant][55] /* ty=Tensor[(16, 9, 7), bool] */, dtype="bool") /* ty=Tensor[(16, 9, 7), bool] */;
  %685 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(16, 9, 7), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 9, 7), bool] */, dtype="bool") /* ty=Tensor[(16, 9, 7), bool] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %688 = cast(meta[relay.Constant][55] /* ty=Tensor[(16, 9, 7), bool] */, dtype="int8") /* ty=Tensor[(16, 9, 7), int8] */;
  %689 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(16, 9, 7), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 9, 7), bool] */, dtype="int8") /* ty=Tensor[(16, 9, 7), int8] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %692 = logical_or(%686, %687) /* ty=Tensor[(16, 9, 7), bool] */;
  %693 = right_shift(%690, %691) /* ty=Tensor[(16, 9, 7), int8] */;
  (%692, %693)
}

def @func_6910() -> Tensor[(16, 9, 7), int8] {
  %694 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
  %694.1
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6264() -> (Tensor[(16, 9, 7), int8],) {
  %1 = fn () -> (Tensor[(16, 9, 7), int8],) {
    %0 = @func_6244() /* ty=Tensor[(16, 9, 7), int8] */;
    (%0,)
  };
  %1() /* ty=(Tensor[(16, 9, 7), int8],) */
}

def @func_6493(%var_6489: Tensor[(1650), float32]) -> (Tensor[(16, 9, 7), bool], Tensor[(3, 6, 12), float64], Tensor[(216), float64], Tensor[(10, 15, 11), float32], Tensor[(1, 56), uint64], Tensor[(336), uint64], Tensor[(1650), float32], Tensor[(130, 9), float64]) {
  %2 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %4 = reshape(%3, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), float64] */;
  %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 56), uint64] */, dtype="uint64") /* ty=Tensor[(1, 56), uint64] */;
  %6 = cast(meta[relay.Constant][2] /* ty=Tensor[(336), uint64] */, dtype="uint64") /* ty=Tensor[(336), uint64] */;
  %7 = cast(%var_6489, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %8 = cast(meta[relay.Constant][3] /* ty=Tensor[(130, 9), float64] */, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
  %9 = reshape(%5, newshape=[4, 14, 1]) /* ty=Tensor[(4, 14, 1), uint64] */;
  %10 = reshape(%6, newshape=[4, 14, 6]) /* ty=Tensor[(4, 14, 6), uint64] */;
  %11 = reshape(%7, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %12 = reshape(%8, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %13 = @func_993(%9, %10, %11, %12) /* ty=(Tensor[(4, 14, 6), uint64], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(13, 10, 9), float64], Tensor[(112), uint32], Tensor[(264), float64], Tensor[(264), float64], Tensor[(1170), uint16]) */;
  %14 = %2.0;
  %15 = @func_2507(%4) /* ty=Tensor[(3, 6, 12), float64] */;
  %16 = %13.1;
  (%14, %15, meta[relay.Constant][0] /* ty=Tensor[(216), float64] */, %16, meta[relay.Constant][1] /* ty=Tensor[(1, 56), uint64] */, meta[relay.Constant][2] /* ty=Tensor[(336), uint64] */, %var_6489, meta[relay.Constant][3] /* ty=Tensor[(130, 9), float64] */)
}

def @func_5855() -> (Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) {
  %27 = fn () -> (Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) {
    %17 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 9, 7), bool] */, dtype="bool") /* ty=Tensor[(16, 9, 7), bool] */;
    %18 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(16, 9, 7), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %19 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 9, 7), bool] */, dtype="bool") /* ty=Tensor[(16, 9, 7), bool] */;
    %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %21 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 9, 7), bool] */, dtype="int8") /* ty=Tensor[(16, 9, 7), int8] */;
    %22 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(16, 9, 7), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %23 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 9, 7), bool] */, dtype="int8") /* ty=Tensor[(16, 9, 7), int8] */;
    %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %25 = logical_or(%19, %20) /* ty=Tensor[(16, 9, 7), bool] */;
    %26 = right_shift(%23, %24) /* ty=Tensor[(16, 9, 7), int8] */;
    (%25, %26)
  };
  %27() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */
}

def @func_1671(%var_1662: int16, %var_1663: Tensor[(16, 12, 1), int16], %var_1668: Tensor[(660), int8]) -> (Tensor[(16, 12, 1), bool], Tensor[(6, 11, 10), int8], Tensor[(660), int8]) {
  %28 = cast(%var_1662, dtype="bool") /* ty=bool */;
  %29 = cast(%var_1663, dtype="bool") /* ty=Tensor[(16, 12, 1), bool] */;
  %30 = cast(%var_1668, dtype="int8") /* ty=Tensor[(660), int8] */;
  %31 = cast(%var_1668, dtype="int8") /* ty=Tensor[(660), int8] */;
  %32 = reshape(%30, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int8] */;
  %33 = reshape(%31, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int8] */;
  %34 = @func_1326(%32, %33) /* ty=(Tensor[(6, 11, 10), int8],) */;
  %35 = less_equal(%28, %29) /* ty=Tensor[(16, 12, 1), bool] */;
  %36 = %34.0;
  (%35, %36, %var_1668)
}

def @func_5947(%var_5945: Tensor[(77), float32], %var_5946: Tensor[(660), int8]) -> (Tensor[(16, 9, 7), bool], Tensor[(7, ?, 11), float64], Tensor[(77), float32], Tensor[(6, 11, 10), int8], Tensor[(660), int8]) {
  @func_5943(%var_5945, %var_5946) /* ty=(Tensor[(16, 9, 7), bool], Tensor[(7, ?, 11), float64], Tensor[(77), float32], Tensor[(6, 11, 10), int8], Tensor[(660), int8]) */
}

def @func_3394(%var_3392: Tensor[(12, 4, 3), int64], %var_3393: Tensor[(12, 4, 3), int64]) -> Tensor[(12, 4, 3), int64] {
  @func_3390(%var_3392, %var_3393) /* ty=Tensor[(12, 4, 3), int64] */
}

def @func_5561(%var_5559: Tensor[(9, 13, 11), float32]) -> (Tensor[(9, 13, 11), bool], Tensor[(9, 13, 11), float32]) {
  @func_5558(%var_5559) /* ty=(Tensor[(9, 13, 11), bool], Tensor[(9, 13, 11), float32]) */
}

def @func_6547() -> Tensor[(16, 9, 7), int8] {
  %37 = fn () -> Tensor[(16, 9, 7), int8] {
    @func_6244() /* ty=Tensor[(16, 9, 7), int8] */
  };
  %37() /* ty=Tensor[(16, 9, 7), int8] */
}

def @func_1616(%var_1612: Tensor[(5, 14, 4), float32], %var_1613: Tensor[(10, 117), float64], %var_1614: Tensor[(112), uint32], %var_1615: Tensor[(10, 117), float64]) -> (Tensor[(5, 14, 4), float32], Tensor[(264), float64], Tensor[(112), uint32], Tensor[(10, 117), float32]) {
  %54 = fn (%var_1589: Tensor[(5, 14, 4), float32], %var_1597: Tensor[(10, 117), float64], %var_1598: Tensor[(112), uint32], %var_1606: Tensor[(10, 117), float64]) -> (Tensor[(5, 14, 4), float32], Tensor[(264), float64], Tensor[(112), uint32], Tensor[(10, 117), float32]) {
    %38 = cast(%var_1589, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
    %39 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(5, 14, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %40 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 14, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 14, 4), float32] */;
    %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %42 = cast(%var_1597, dtype="float64") /* ty=Tensor[(10, 117), float64] */;
    %43 = cast(%var_1598, dtype="uint32") /* ty=Tensor[(112), uint32] */;
    %44 = reshape(%42, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float64] */;
    %45 = reshape(%43, newshape=[28, 4]) /* ty=Tensor[(28, 4), uint32] */;
    %46 = @func_508(%44, %45) /* ty=(Tensor[(13, 10, 9), float64], Tensor[(11, 8, 3), float64], Tensor[(264), float64], Tensor[(28, 4), float64]) */;
    %47 = cast(%var_1606, dtype="float32") /* ty=Tensor[(10, 117), float32] */;
    %48 = shape_of(%var_1597, dtype="int32") /* ty=Tensor[(2), int32] */;
    %49 = cast(%var_1597, dtype="float32") /* ty=Tensor[(10, 117), float32] */;
    %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %51 = floor_mod(%40, %41) /* ty=Tensor[(5, 14, 4), float32] */;
    %52 = %46.2;
    %53 = power(%49, %50) /* ty=Tensor[(10, 117), float32] */;
    (%51, %52, %var_1598, %53)
  };
  %54(%var_1612, %var_1613, %var_1614, %var_1615) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(264), float64], Tensor[(112), uint32], Tensor[(10, 117), float32]) */
}

def @main() -> Tensor[(12, 12, 8), float32] {
  %55 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 12, 8), float64] */, dtype="float64") /* ty=Tensor[(12, 12, 8), float64] */;
  %56 = erf(%55) /* ty=Tensor[(12, 12, 8), float64] */;
  %57 = cast(%56, dtype="float32") /* ty=Tensor[(12, 12, 8), float32] */;
  atanh(%57) /* ty=Tensor[(12, 12, 8), float32] */
}

def @func_1330(%var_1328: Tensor[(6, 11, 10), int8], %var_1329: Tensor[(6, 11, 10), int8]) -> (Tensor[(6, 11, 10), int8],) {
  @func_1326(%var_1328, %var_1329) /* ty=(Tensor[(6, 11, 10), int8],) */
}

def @func_2252(%var_2250: float32, %var_2251: Tensor[(1650), float32]) -> (Tensor[(6, 8, 5), float32], Tensor[(10, 15, 11), float32], Tensor[(1650), float32]) {
  %67 = fn (%var_2235: float32, %var_2244: Tensor[(1650), float32]) -> (Tensor[(6, 8, 5), float32], Tensor[(10, 15, 11), float32], Tensor[(1650), float32]) {
    %58 = cast(%var_2235, dtype="float32") /* ty=float32 */;
    %59 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 8, 5), float32] */, dtype="float32") /* ty=Tensor[(6, 8, 5), float32] */;
    %60 = cast(%var_2244, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %61 = cast(%var_2244, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %62 = reshape(%60, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
    %63 = reshape(%61, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
    %64 = @func_746(%62, %63) /* ty=(Tensor[(10, 15, 11), float32], Tensor[(10, 15, 11), float32]) */;
    %65 = mod(%58, %59) /* ty=Tensor[(6, 8, 5), float32] */;
    %66 = %64.1;
    (%65, %66, %var_2244)
  };
  %67(%var_2250, %var_2251) /* ty=(Tensor[(6, 8, 5), float32], Tensor[(10, 15, 11), float32], Tensor[(1650), float32]) */
}

def @func_5984(%var_5962: Tensor[(7, 1, 4), float32], %var_5982: Tensor[(1650, 1), float32]) -> (Tensor[(7, ?, 4), bool], Tensor[(10, 15, 11), float32], Tensor[(1650, 1), float32]) {
  %68 = cast(%var_5962, dtype="float32") /* ty=Tensor[(7, 1, 4), float32] */;
  %69 = log(%68) /* ty=Tensor[(7, 1, 4), float32] */;
  %70 = cast(%69, dtype="float64") /* ty=Tensor[(7, 1, 4), float64] */;
  %71 = sinh(%70) /* ty=Tensor[(7, 1, 4), float64] */;
  %72 = cast(%71, dtype="bool") /* ty=Tensor[(7, 1, 4), bool] */;
  %73 = shape_of(%69, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%69, dtype="bool") /* ty=Tensor[(7, 1, 4), bool] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %76 = cast(%var_5982, dtype="float32") /* ty=Tensor[(1650, 1), float32] */;
  %77 = cast(%var_5982, dtype="float32") /* ty=Tensor[(1650, 1), float32] */;
  %78 = reshape(%76, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %79 = reshape(%77, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %80 = @func_746(%78, %79) /* ty=(Tensor[(10, 15, 11), float32], Tensor[(10, 15, 11), float32]) */;
  %81 = less(%74, %75) /* ty=Tensor[(7, ?, 4), bool] */;
  %82 = %80.0;
  (%81, %82, %var_5982)
}

def @func_1676(%var_1673: int16, %var_1674: Tensor[(16, 12, 1), int16], %var_1675: Tensor[(660), int8]) -> (Tensor[(16, 12, 1), bool], Tensor[(6, 11, 10), int8], Tensor[(660), int8]) {
  @func_1671(%var_1673, %var_1674, %var_1675) /* ty=(Tensor[(16, 12, 1), bool], Tensor[(6, 11, 10), int8], Tensor[(660), int8]) */
}

def @func_4541(%var_4464: Tensor[(5, 15, 9), float64], %var_4485: Tensor[(480), float32], %var_4486: Tensor[(216), float64], %var_4502: Tensor[(396), float32], %var_4532: Tensor[(110, 6), int8], %var_4537: Tensor[(5, 15, 9), float64]) -> (Tensor[(216), float64], Tensor[(480), float32], Tensor[(216), float64], Tensor[(5, 15, 9), uint64], Tensor[(14, 16, 16), bool], Tensor[(224), float32], Tensor[(396), float32], Tensor[(3584), float32], Tensor[(6, 11, 10), int8], Tensor[(110, 6), int8], Tensor[(5, 15, 9), bool]) {
  %83 = cast(%var_4485, dtype="float32") /* ty=Tensor[(480), float32] */;
  %84 = cast(%var_4486, dtype="float64") /* ty=Tensor[(216), float64] */;
  %85 = reshape(%83, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), float32] */;
  %86 = reshape(%84, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %87 = @func_4308(%85, %86) /* ty=(Tensor[(3, 6, 12), float64], Tensor[(216), float64], Tensor[(16, 6, 5), float32]) */;
  %88 = cast(%var_4464, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %89 = cosh(%88) /* ty=Tensor[(5, 15, 9), float64] */;
  %90 = cast(%89, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %91 = erf(%90) /* ty=Tensor[(5, 15, 9), float64] */;
  %92 = cast(%var_4464, dtype="float64") /* ty=Tensor[(5, 15, 9), float64] */;
  %93 = rsqrt(%92) /* ty=Tensor[(5, 15, 9), float64] */;
  %94 = cast(%93, dtype="uint64") /* ty=Tensor[(5, 15, 9), uint64] */;
  %95 = shape_of(%91, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(%91, dtype="uint64") /* ty=Tensor[(5, 15, 9), uint64] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %98 = cast(meta[relay.Constant][9] /* ty=Tensor[(224), float32] */, dtype="float32") /* ty=Tensor[(224), float32] */;
  %99 = cast(%var_4502, dtype="float32") /* ty=Tensor[(396), float32] */;
  %100 = cast(meta[relay.Constant][10] /* ty=Tensor[(3584), float32] */, dtype="float32") /* ty=Tensor[(3584), float32] */;
  %101 = reshape(%98, newshape=[14, 16, 1]) /* ty=Tensor[(14, 16, 1), float32] */;
  %102 = reshape(%99, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float32] */;
  %103 = reshape(%100, newshape=[14, 16, 16]) /* ty=Tensor[(14, 16, 16), float32] */;
  %104 = @func_4270(%101, %102, %103) /* ty=(Tensor[(6, 11, 6), uint32], Tensor[(396, ?), uint64], Tensor[(6, 11, 6), int8], Tensor[(14, 16, 16), bool], Tensor[(14, 16, 16), float32]) */;
  %105 = cast(%var_4532, dtype="int8") /* ty=Tensor[(110, 6), int8] */;
  %106 = cast(%var_4532, dtype="int8") /* ty=Tensor[(110, 6), int8] */;
  %107 = reshape(%105, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int8] */;
  %108 = reshape(%106, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int8] */;
  %109 = @func_1326(%107, %108) /* ty=(Tensor[(6, 11, 10), int8],) */;
  %110 = cast(%var_4537, dtype="bool") /* ty=Tensor[(5, 15, 9), bool] */;
  %111 = shape_of(%91, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%91, dtype="bool") /* ty=Tensor[(5, 15, 9), bool] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %114 = %87.1;
  %115 = subtract(%96, %97) /* ty=Tensor[(5, 15, 9), uint64] */;
  %116 = %104.3;
  %117 = %109.0;
  %118 = logical_or(%112, %113) /* ty=Tensor[(5, 15, 9), bool] */;
  (%114, %var_4485, %var_4486, %115, %116, meta[relay.Constant][9] /* ty=Tensor[(224), float32] */, %var_4502, meta[relay.Constant][10] /* ty=Tensor[(3584), float32] */, %117, %var_4532, %118)
}

def @func_6504() -> Tensor[(16, 9, 7), int8] {
  %120 = fn () -> Tensor[(16, 9, 7), int8] {
    %119 = @func_6039() /* ty=(Tensor[(16, 9, 7), int8],) */;
    %119.0
  };
  %120() /* ty=Tensor[(16, 9, 7), int8] */
}

def @func_511(%var_509: Tensor[(13, 10, 9), float64], %var_510: Tensor[(28, 4), uint32]) -> (Tensor[(13, 10, 9), float64], Tensor[(11, 8, 3), float64], Tensor[(264), float64], Tensor[(28, 4), float64]) {
  %134 = fn (%var_492: Tensor[(13, 10, 9), float64], %var_503: Tensor[(28, 4), uint32]) -> (Tensor[(13, 10, 9), float64], Tensor[(11, 8, 3), float64], Tensor[(264), float64], Tensor[(28, 4), float64]) {
    %121 = cast(%var_492, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
    %122 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(13, 10, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %123 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 10, 9), float64] */, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
    %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %125 = cast(%var_503, dtype="uint32") /* ty=Tensor[(28, 4), uint32] */;
    %126 = cast(meta[relay.Constant][12] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
    %127 = reshape(%125, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), uint32] */;
    %128 = reshape(%126, newshape=[264]) /* ty=Tensor[(264), float64] */;
    %129 = @func_454(%127, %128) /* ty=(Tensor[(2, 4, 14), uint32], Tensor[(11, 8, 3), float64], Tensor[(264), float64]) */;
    %130 = cast(%var_503, dtype="float64") /* ty=Tensor[(28, 4), float64] */;
    %131 = mod(%123, %124) /* ty=Tensor[(13, 10, 9), float64] */;
    %132 = %129.1;
    %133 = log10(%130) /* ty=Tensor[(28, 4), float64] */;
    (%131, %132, meta[relay.Constant][12] /* ty=Tensor[(264), float64] */, %133)
  };
  %134(%var_509, %var_510) /* ty=(Tensor[(13, 10, 9), float64], Tensor[(11, 8, 3), float64], Tensor[(264), float64], Tensor[(28, 4), float64]) */
}

def @func_4858(%var_4854: Tensor[(1, 8, 13), uint32], %var_4855: Tensor[(14, 8, 13), uint32], %var_4856: Tensor[(480), float32], %var_4857: Tensor[(216), float64]) -> (Tensor[(14, 8, 13), uint32], Tensor[(216), float64], Tensor[(480), float32], Tensor[(216), float64]) {
  %144 = fn (%var_4837: Tensor[(1, 8, 13), uint32], %var_4838: Tensor[(14, 8, 13), uint32], %var_4846: Tensor[(480), float32], %var_4847: Tensor[(216), float64]) -> (Tensor[(14, 8, 13), uint32], Tensor[(216), float64], Tensor[(480), float32], Tensor[(216), float64]) {
    %135 = cast(%var_4837, dtype="uint32") /* ty=Tensor[(1, 8, 13), uint32] */;
    %136 = cast(%var_4838, dtype="uint32") /* ty=Tensor[(14, 8, 13), uint32] */;
    %137 = cast(%var_4846, dtype="float32") /* ty=Tensor[(480), float32] */;
    %138 = cast(%var_4847, dtype="float64") /* ty=Tensor[(216), float64] */;
    %139 = reshape(%137, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), float32] */;
    %140 = reshape(%138, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %141 = @func_4308(%139, %140) /* ty=(Tensor[(3, 6, 12), float64], Tensor[(216), float64], Tensor[(16, 6, 5), float32]) */;
    %142 = maximum(%135, %136) /* ty=Tensor[(14, 8, 13), uint32] */;
    %143 = %141.1;
    (%142, %143, %var_4846, %var_4847)
  };
  %144(%var_4854, %var_4855, %var_4856, %var_4857) /* ty=(Tensor[(14, 8, 13), uint32], Tensor[(216), float64], Tensor[(480), float32], Tensor[(216), float64]) */
}

def @func_6246() -> Tensor[(16, 9, 7), int8] {
  @func_6244() /* ty=Tensor[(16, 9, 7), int8] */
}

def @func_4082(%var_4063: Tensor[(8, 3, 11), float32]) -> (Tensor[(8, 3, 11), float32],) {
  %145 = cast(%var_4063, dtype="float32") /* ty=Tensor[(8, 3, 11), float32] */;
  %146 = atan(%145) /* ty=Tensor[(8, 3, 11), float32] */;
  (%146,)
}

def @func_2728(%var_2724: Tensor[(216), float64]) -> (Tensor[(7, 9, 8), float64], Tensor[(3, 6, 12), float64], Tensor[(216), float64]) {
  %147 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 9, 8), float64] */, dtype="float64") /* ty=Tensor[(7, 9, 8), float64] */;
  %148 = cast(%var_2724, dtype="float64") /* ty=Tensor[(216), float64] */;
  %149 = reshape(%148, newshape=[3, 6, 12]) /* ty=Tensor[(3, 6, 12), float64] */;
  %150 = rsqrt(%147) /* ty=Tensor[(7, 9, 8), float64] */;
  %151 = @func_2507(%149) /* ty=Tensor[(3, 6, 12), float64] */;
  (%150, %151, %var_2724)
}

def @func_4354(%var_4331: float32, %var_4341: Tensor[(550), int16], %var_4342: Tensor[(390, 3), float64]) -> (Tensor[(10, 11, 1), bool], Tensor[(2, 56), uint32], Tensor[(550), int16], Tensor[(390, 3), float64], Tensor[(112), uint32], Tensor[(10, 11, 1), float32]) {
  %152 = cast(%var_4331, dtype="bool") /* ty=bool */;
  %153 = cast(meta[relay.Constant][14] /* ty=Tensor[(10, 11, 1), float32] */, dtype="bool") /* ty=Tensor[(10, 11, 1), bool] */;
  %154 = cast(%var_4341, dtype="int16") /* ty=Tensor[(550), int16] */;
  %155 = cast(%var_4341, dtype="int16") /* ty=Tensor[(550), int16] */;
  %156 = cast(%var_4342, dtype="float64") /* ty=Tensor[(390, 3), float64] */;
  %157 = cast(meta[relay.Constant][15] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %158 = reshape(%154, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), int16] */;
  %159 = reshape(%155, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), int16] */;
  %160 = reshape(%156, newshape=[5, 234]) /* ty=Tensor[(5, 234), float64] */;
  %161 = reshape(%157, newshape=[2, 56]) /* ty=Tensor[(2, 56), uint32] */;
  %162 = @func_1252(%158, %159, %160, %161) /* ty=(Tensor[(11, 10, 5), bool], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(264, 1), float64], Tensor[(11, 8, 3), float64], Tensor[(13, 10, 9), float64], Tensor[(5, 234), float64], Tensor[(2, 56), uint32]) */;
  %163 = cast(meta[relay.Constant][14] /* ty=Tensor[(10, 11, 1), float32] */, dtype="float32") /* ty=Tensor[(10, 11, 1), float32] */;
  %164 = not_equal(%152, %153) /* ty=Tensor[(10, 11, 1), bool] */;
  %165 = %162.7;
  %166 = sqrt(%163) /* ty=Tensor[(10, 11, 1), float32] */;
  (%164, %165, %var_4341, %var_4342, meta[relay.Constant][15] /* ty=Tensor[(112), uint32] */, %166)
}

def @func_5378(%var_5377: Tensor[(14, 7, 2), uint64]) -> (Tensor[(14, 7, 2), uint64],) {
  %172 = fn (%var_5366: Tensor[(14, 7, 2), uint64]) -> (Tensor[(14, 7, 2), uint64],) {
    %167 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 7, 2), uint64] */, dtype="uint64") /* ty=Tensor[(14, 7, 2), uint64] */;
    %168 = shape_of(%var_5366, dtype="int32") /* ty=Tensor[(3), int32] */;
    %169 = cast(%var_5366, dtype="uint64") /* ty=Tensor[(14, 7, 2), uint64] */;
    %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %171 = subtract(%169, %170) /* ty=Tensor[(14, 7, 2), uint64] */;
    (%171,)
  };
  %172(%var_5377) /* ty=(Tensor[(14, 7, 2), uint64],) */
}

def @func_749(%var_747: Tensor[(10, 15, 11), float32], %var_748: Tensor[(10, 15, 11), float32]) -> (Tensor[(10, 15, 11), float32], Tensor[(10, 15, 11), float32]) {
  %187 = fn (%var_705: Tensor[(10, 15, 11), float32], %var_708: Tensor[(10, 15, 11), float32]) -> (Tensor[(10, 15, 11), float32], Tensor[(10, 15, 11), float32]) {
    %173 = cast(%var_705, dtype="float32") /* ty=Tensor[(10, 15, 11), float32] */;
    %174 = acos(%173) /* ty=Tensor[(10, 15, 11), float32] */;
    %175 = cast(%174, dtype="float32") /* ty=Tensor[(10, 15, 11), float32] */;
    %176 = cast(%var_708, dtype="bool") /* ty=Tensor[(10, 15, 11), bool] */;
    %177 = shape_of(%174, dtype="int32") /* ty=Tensor[(3), int32] */;
    %178 = cast(%174, dtype="bool") /* ty=Tensor[(10, 15, 11), bool] */;
    %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %180 = equal(%178, %179) /* ty=Tensor[(10, 15, 11), bool] */;
    %181 = cast(%180, dtype="float32") /* ty=Tensor[(10, 15, 11), float32] */;
    %182 = shape_of(%174, dtype="int32") /* ty=Tensor[(3), int32] */;
    %183 = cast(%174, dtype="float32") /* ty=Tensor[(10, 15, 11), float32] */;
    %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %185 = sigmoid(%175) /* ty=Tensor[(10, 15, 11), float32] */;
    %186 = power(%183, %184) /* ty=Tensor[(10, 15, 11), float32] */;
    (%185, %186)
  };
  %187(%var_747, %var_748) /* ty=(Tensor[(10, 15, 11), float32], Tensor[(10, 15, 11), float32]) */
}

def @func_3339(%var_3315: Tensor[(7, 1, 11), float32], %var_3316: Tensor[(7, 1, 11), float32]) -> Tensor[(7, ?, 11), float64] {
  %188 = cast(%var_3316, dtype="bool") /* ty=Tensor[(7, 1, 11), bool] */;
  %189 = shape_of(%var_3315, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%var_3315, dtype="bool") /* ty=Tensor[(7, 1, 11), bool] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %192 = less(%190, %191) /* ty=Tensor[(7, ?, 11), bool] */;
  %193 = cast(%192, dtype="float64") /* ty=Tensor[(7, ?, 11), float64] */;
  %194 = shape_of(%var_3316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(%var_3316, dtype="float64") /* ty=Tensor[(7, 1, 11), float64] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%195, %196) /* ty=Tensor[(7, ?, 11), float64] */
}

def @func_6112(%var_6110: Tensor[(192), int16], %var_6111: Tensor[(660), int8]) -> (Tensor[(16, 9, 7), int8], Tensor[(16, 12, 1), bool], int16, Tensor[(192), int16], Tensor[(660), int8]) {
  %207 = fn (%var_6100: Tensor[(192), int16], %var_6101: Tensor[(660), int8]) -> (Tensor[(16, 9, 7), int8], Tensor[(16, 12, 1), bool], int16, Tensor[(192), int16], Tensor[(660), int8]) {
    %197 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
    %198 = cast(meta[relay.Constant][17] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %199 = cast(%var_6100, dtype="int16") /* ty=Tensor[(192), int16] */;
    %200 = cast(%var_6101, dtype="int8") /* ty=Tensor[(660), int8] */;
    %201 = reshape(%198, newshape=[]) /* ty=int16 */;
    %202 = reshape(%199, newshape=[16, 12, 1]) /* ty=Tensor[(16, 12, 1), int16] */;
    %203 = reshape(%200, newshape=[660]) /* ty=Tensor[(660), int8] */;
    %204 = @func_1671(%201, %202, %203) /* ty=(Tensor[(16, 12, 1), bool], Tensor[(6, 11, 10), int8], Tensor[(660), int8]) */;
    %205 = %197.1;
    %206 = %204.0;
    (%205, %206, meta[relay.Constant][17] /* ty=int16 */, %var_6100, %var_6101)
  };
  %207(%var_6110, %var_6111) /* ty=(Tensor[(16, 9, 7), int8], Tensor[(16, 12, 1), bool], int16, Tensor[(192), int16], Tensor[(660), int8]) */
}

def @func_6699() -> (Tensor[(16, 9, 7), uint16],) {
  %214 = fn () -> (Tensor[(16, 9, 7), uint16],) {
    %208 = @func_6654() /* ty=Tensor[(16, 9, 7), int8] */;
    %209 = cast(meta[relay.Constant][18] /* ty=Tensor[(16, 9, 7), int8] */, dtype="uint16") /* ty=Tensor[(16, 9, 7), uint16] */;
    %210 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
    %211 = cast(%208, dtype="uint16") /* ty=Tensor[(16, 9, 7), uint16] */;
    %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %213 = multiply(%211, %212) /* ty=Tensor[(16, 9, 7), uint16] */;
    (%213,)
  };
  %214() /* ty=(Tensor[(16, 9, 7), uint16],) */
}

def @func_4359(%var_4356: float32, %var_4357: Tensor[(550), int16], %var_4358: Tensor[(390, 3), float64]) -> (Tensor[(10, 11, 1), bool], Tensor[(2, 56), uint32], Tensor[(550), int16], Tensor[(390, 3), float64], Tensor[(112), uint32], Tensor[(10, 11, 1), float32]) {
  @func_4354(%var_4356, %var_4357, %var_4358) /* ty=(Tensor[(10, 11, 1), bool], Tensor[(2, 56), uint32], Tensor[(550), int16], Tensor[(390, 3), float64], Tensor[(112), uint32], Tensor[(10, 11, 1), float32]) */
}

def @func_6954() -> (Tensor[(16, 9, 7), int8],) {
  %216 = fn () -> (Tensor[(16, 9, 7), int8],) {
    %215 = @func_6546() /* ty=Tensor[(16, 9, 7), int8] */;
    (%215,)
  };
  %216() /* ty=(Tensor[(16, 9, 7), int8],) */
}

def @func_6610(%var_6609: Tensor[(16, 9, 7), int8]) -> (Tensor[(16, 9, 7), float32],) {
  %224 = fn (%var_6596: Tensor[(16, 9, 7), int8]) -> (Tensor[(16, 9, 7), float32],) {
    %217 = @func_6263() /* ty=(Tensor[(16, 9, 7), int8],) */;
    %218 = %217.0;
    %219 = cast(%var_6596, dtype="float32") /* ty=Tensor[(16, 9, 7), float32] */;
    %220 = shape_of(%218, dtype="int32") /* ty=Tensor[(3), int32] */;
    %221 = cast(%218, dtype="float32") /* ty=Tensor[(16, 9, 7), float32] */;
    %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %223 = divide(%221, %222) /* ty=Tensor[(16, 9, 7), float32] */;
    (%223,)
  };
  %224(%var_6609) /* ty=(Tensor[(16, 9, 7), float32],) */
}

def @func_6226(%var_6224: Tensor[(16, 9, 7), float64]) -> Tensor[(16, 9, 7), float64] {
  @func_6223(%var_6224) /* ty=Tensor[(16, 9, 7), float64] */
}

def @func_2731(%var_2729: Tensor[(216), float64]) -> (Tensor[(7, 9, 8), float64], Tensor[(3, 6, 12), float64], Tensor[(216), float64]) {
  @func_2728(%var_2729) /* ty=(Tensor[(7, 9, 8), float64], Tensor[(3, 6, 12), float64], Tensor[(216), float64]) */
}

def @func_6223(%var_6216: Tensor[(16, 9, 7), float64]) -> Tensor[(16, 9, 7), float64] {
  %225 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
  %226 = %225.1;
  %227 = cast(%226, dtype="float64") /* ty=Tensor[(16, 9, 7), float64] */;
  %228 = atan(%227) /* ty=Tensor[(16, 9, 7), float64] */;
  %229 = cast(%var_6216, dtype="float64") /* ty=Tensor[(16, 9, 7), float64] */;
  %230 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%228, dtype="float64") /* ty=Tensor[(16, 9, 7), float64] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%231, %232) /* ty=Tensor[(16, 9, 7), float64] */
}

def @func_6244() -> Tensor[(16, 9, 7), int8] {
  @func_6140() /* ty=Tensor[(16, 9, 7), int8] */
}

def @func_5916(%var_5883: Tensor[(15, 16, 6), float64], %var_5884: Tensor[(15, 16, 6), float64], %var_5900: Tensor[(15, 16, 6), float32]) -> (Tensor[(15, 16, 6), float64], Tensor[(15, 16, 6), float32], Tensor[(15, 16, 6), bool], Tensor[(10, 10, 4), bool], Tensor[(40, 10), bool]) {
  %233 = cast(%var_5884, dtype="float64") /* ty=Tensor[(15, 16, 6), float64] */;
  %234 = shape_of(%var_5883, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%var_5883, dtype="float64") /* ty=Tensor[(15, 16, 6), float64] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %237 = cast(%var_5884, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  %238 = log2(%237) /* ty=Tensor[(15, 16, 6), float32] */;
  %239 = cast(%var_5900, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  %240 = shape_of(%238, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%238, dtype="float32") /* ty=Tensor[(15, 16, 6), float32] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %243 = cast(%var_5883, dtype="bool") /* ty=Tensor[(15, 16, 6), bool] */;
  %244 = shape_of(%var_5884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%var_5884, dtype="bool") /* ty=Tensor[(15, 16, 6), bool] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %247 = cast(meta[relay.Constant][19] /* ty=Tensor[(40, 10), bool] */, dtype="bool") /* ty=Tensor[(40, 10), bool] */;
  %248 = cast(meta[relay.Constant][19] /* ty=Tensor[(40, 10), bool] */, dtype="bool") /* ty=Tensor[(40, 10), bool] */;
  %249 = reshape(%247, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), bool] */;
  %250 = reshape(%248, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), bool] */;
  %251 = @func_4745(%249, %250) /* ty=(Tensor[(10, 10, 4), bool],) */;
  %252 = floor_divide(%235, %236) /* ty=Tensor[(15, 16, 6), float64] */;
  %253 = power(%241, %242) /* ty=Tensor[(15, 16, 6), float32] */;
  %254 = logical_and(%245, %246) /* ty=Tensor[(15, 16, 6), bool] */;
  %255 = %251.0;
  (%252, %253, %254, %255, meta[relay.Constant][19] /* ty=Tensor[(40, 10), bool] */)
}

def @func_3473(%var_3464: Tensor[(7, 5, 11), float64]) -> (Tensor[(7, 5, 11), float64],) {
  %256 = cast(%var_3464, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %257 = tan(%256) /* ty=Tensor[(7, 5, 11), float64] */;
  (%257,)
}

def @func_6638() -> (Tensor[(16, 9, 7), float64],) {
  @func_6636() /* ty=(Tensor[(16, 9, 7), float64],) */
}

def @func_6910() -> Tensor[(16, 9, 7), int8] {
  %258 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
  %258.1
}

def @func_5921(%var_5918: Tensor[(15, 16, 6), float64], %var_5919: Tensor[(15, 16, 6), float64], %var_5920: Tensor[(15, 16, 6), float32]) -> (Tensor[(15, 16, 6), float64], Tensor[(15, 16, 6), float32], Tensor[(15, 16, 6), bool], Tensor[(10, 10, 4), bool], Tensor[(40, 10), bool]) {
  @func_5916(%var_5918, %var_5919, %var_5920) /* ty=(Tensor[(15, 16, 6), float64], Tensor[(15, 16, 6), float32], Tensor[(15, 16, 6), bool], Tensor[(10, 10, 4), bool], Tensor[(40, 10), bool]) */
}

def @func_6656() -> Tensor[(16, 9, 7), int8] {
  @func_6654() /* ty=Tensor[(16, 9, 7), int8] */
}

def @func_528(%var_527: Tensor[(6, 11, 6), float64]) -> (Tensor[(6, 11, 6), float64], Tensor[(6, 11, 6), float32]) {
  %263 = fn (%var_516: Tensor[(6, 11, 6), float64]) -> (Tensor[(6, 11, 6), float64], Tensor[(6, 11, 6), float32]) {
    %259 = cast(%var_516, dtype="float64") /* ty=Tensor[(6, 11, 6), float64] */;
    %260 = cast(%var_516, dtype="float32") /* ty=Tensor[(6, 11, 6), float32] */;
    %261 = sigmoid(%259) /* ty=Tensor[(6, 11, 6), float64] */;
    %262 = acosh(%260) /* ty=Tensor[(6, 11, 6), float32] */;
    (%261, %262)
  };
  %263(%var_527) /* ty=(Tensor[(6, 11, 6), float64], Tensor[(6, 11, 6), float32]) */
}

def @func_1252(%var_1220: Tensor[(11, 10, 5), int16], %var_1221: Tensor[(11, 10, 5), int16], %var_1248: Tensor[(5, 234), float64], %var_1249: Tensor[(2, 56), uint32]) -> (Tensor[(11, 10, 5), bool], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(264, 1), float64], Tensor[(11, 8, 3), float64], Tensor[(13, 10, 9), float64], Tensor[(5, 234), float64], Tensor[(2, 56), uint32]) {
  %264 = cast(%var_1221, dtype="bool") /* ty=Tensor[(11, 10, 5), bool] */;
  %265 = shape_of(%var_1220, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%var_1220, dtype="bool") /* ty=Tensor[(11, 10, 5), bool] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %268 = cast(meta[relay.Constant][20] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %269 = cast(meta[relay.Constant][20] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %270 = reshape(%268, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %271 = reshape(%269, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %272 = @func_746(%270, %271) /* ty=(Tensor[(10, 15, 11), float32], Tensor[(10, 15, 11), float32]) */;
  %273 = cast(meta[relay.Constant][21] /* ty=Tensor[(264, 1), float64] */, dtype="float64") /* ty=Tensor[(264, 1), float64] */;
  %274 = reshape(%273, newshape=[11, 8, 3]) /* ty=Tensor[(11, 8, 3), float64] */;
  %275 = @func_99(%274) /* ty=(Tensor[(11, 8, 3), float64],) */;
  %276 = %275.0;
  %277 = cast(%276, dtype="float64") /* ty=Tensor[(11, 8, 3), float64] */;
  %278 = cast(%var_1248, dtype="float64") /* ty=Tensor[(5, 234), float64] */;
  %279 = cast(%var_1249, dtype="uint32") /* ty=Tensor[(2, 56), uint32] */;
  %280 = reshape(%278, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float64] */;
  %281 = reshape(%279, newshape=[28, 4]) /* ty=Tensor[(28, 4), uint32] */;
  %282 = @func_508(%280, %281) /* ty=(Tensor[(13, 10, 9), float64], Tensor[(11, 8, 3), float64], Tensor[(264), float64], Tensor[(28, 4), float64]) */;
  %283 = greater_equal(%266, %267) /* ty=Tensor[(11, 10, 5), bool] */;
  %284 = %272.0;
  %285 = sin(%277) /* ty=Tensor[(11, 8, 3), float64] */;
  %286 = %282.0;
  (%283, %284, meta[relay.Constant][20] /* ty=Tensor[(1650), float32] */, meta[relay.Constant][21] /* ty=Tensor[(264, 1), float64] */, %285, %286, %var_1248, %var_1249)
}

def @func_1171(%var_1169: Tensor[(12, 16, 2), uint16], %var_1170: Tensor[(12, 16, 2), uint16]) -> Tensor[(12, 16, 2), uint16] {
  %291 = fn (%var_1154: Tensor[(12, 16, 2), uint16], %var_1155: Tensor[(12, 16, 2), uint16]) -> Tensor[(12, 16, 2), uint16] {
    %287 = cast(%var_1155, dtype="uint16") /* ty=Tensor[(12, 16, 2), uint16] */;
    %288 = shape_of(%var_1154, dtype="int32") /* ty=Tensor[(3), int32] */;
    %289 = cast(%var_1154, dtype="uint16") /* ty=Tensor[(12, 16, 2), uint16] */;
    %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    bitwise_xor(%289, %290) /* ty=Tensor[(12, 16, 2), uint16] */
  };
  %291(%var_1169, %var_1170) /* ty=Tensor[(12, 16, 2), uint16] */
}

def @func_5697(%var_5693: Tensor[(200, 2), bool], %var_5694: Tensor[(480), float32], %var_5695: Tensor[(108, 2), float64], %var_5696: Tensor[(330, 2), int8]) -> (Tensor[(13, 5, 8), bool], Tensor[(13, 5, 8), float32], Tensor[(10, 10, 4), bool], Tensor[(200, 2), bool], Tensor[(396), float32], Tensor[(225, 3), float64], Tensor[(480), float32], Tensor[(108, 2), float64], Tensor[(396), float32], Tensor[(330, 2), int8]) {
  %325 = fn (%var_5657: Tensor[(200, 2), bool], %var_5671: Tensor[(480), float32], %var_5672: Tensor[(108, 2), float64], %var_5674: Tensor[(330, 2), int8]) -> (Tensor[(13, 5, 8), bool], Tensor[(13, 5, 8), float32], Tensor[(10, 10, 4), bool], Tensor[(200, 2), bool], Tensor[(396), float32], Tensor[(225, 3), float64], Tensor[(480), float32], Tensor[(108, 2), float64], Tensor[(396), float32], Tensor[(330, 2), int8]) {
    %292 = cast(meta[relay.Constant][22] /* ty=Tensor[(13, 5, 8), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 8), float64] */;
    %293 = cos(%292) /* ty=Tensor[(13, 5, 8), float64] */;
    %294 = cast(%293, dtype="bool") /* ty=Tensor[(13, 5, 8), bool] */;
    %295 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(13, 5, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %296 = cast(meta[relay.Constant][22] /* ty=Tensor[(13, 5, 8), float64] */, dtype="bool") /* ty=Tensor[(13, 5, 8), bool] */;
    %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %298 = cast(%293, dtype="float32") /* ty=Tensor[(13, 5, 8), float32] */;
    %299 = tan(%298) /* ty=Tensor[(13, 5, 8), float32] */;
    %300 = cast(%299, dtype="float32") /* ty=Tensor[(13, 5, 8), float32] */;
    %301 = erf(%300) /* ty=Tensor[(13, 5, 8), float32] */;
    %302 = cast(%301, dtype="float32") /* ty=Tensor[(13, 5, 8), float32] */;
    %303 = cast(%var_5657, dtype="bool") /* ty=Tensor[(200, 2), bool] */;
    %304 = cast(%var_5657, dtype="bool") /* ty=Tensor[(200, 2), bool] */;
    %305 = reshape(%303, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), bool] */;
    %306 = reshape(%304, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), bool] */;
    %307 = @func_4745(%305, %306) /* ty=(Tensor[(10, 10, 4), bool],) */;
    %308 = cast(meta[relay.Constant][23] /* ty=Tensor[(225, 3), float64] */, dtype="float64") /* ty=Tensor[(225, 3), float64] */;
    %309 = cast(%var_5671, dtype="float32") /* ty=Tensor[(480), float32] */;
    %310 = cast(%var_5672, dtype="float64") /* ty=Tensor[(108, 2), float64] */;
    %311 = cast(meta[relay.Constant][24] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %312 = cast(%var_5674, dtype="int8") /* ty=Tensor[(330, 2), int8] */;
    %313 = cast(meta[relay.Constant][23] /* ty=Tensor[(225, 3), float64] */, dtype="float64") /* ty=Tensor[(225, 3), float64] */;
    %314 = reshape(%308, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
    %315 = reshape(%309, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %316 = reshape(%310, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %317 = reshape(%311, newshape=[396]) /* ty=Tensor[(396), float32] */;
    %318 = reshape(%312, newshape=[110, 6]) /* ty=Tensor[(110, 6), int8] */;
    %319 = reshape(%313, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
    %320 = @func_4541(%314, %315, %316, %317, %318, %319) /* ty=(Tensor[(216), float64], Tensor[(480), float32], Tensor[(216), float64], Tensor[(5, 15, 9), uint64], Tensor[(14, 16, 16), bool], Tensor[(224), float32], Tensor[(396), float32], Tensor[(3584), float32], Tensor[(6, 11, 10), int8], Tensor[(110, 6), int8], Tensor[(5, 15, 9), bool]) */;
    %321 = less(%296, %297) /* ty=Tensor[(13, 5, 8), bool] */;
    %322 = log(%302) /* ty=Tensor[(13, 5, 8), float32] */;
    %323 = %307.0;
    %324 = %320.6;
    (%321, %322, %323, %var_5657, %324, meta[relay.Constant][23] /* ty=Tensor[(225, 3), float64] */, %var_5671, %var_5672, meta[relay.Constant][24] /* ty=Tensor[(396), float32] */, %var_5674)
  };
  %325(%var_5693, %var_5694, %var_5695, %var_5696) /* ty=(Tensor[(13, 5, 8), bool], Tensor[(13, 5, 8), float32], Tensor[(10, 10, 4), bool], Tensor[(200, 2), bool], Tensor[(396), float32], Tensor[(225, 3), float64], Tensor[(480), float32], Tensor[(108, 2), float64], Tensor[(396), float32], Tensor[(330, 2), int8]) */
}

def @func_6586(%var_6584: Tensor[(140, 2), float32]) -> (Tensor[(16, 9, 7), int8], Tensor[(5, 14, 4), float32], Tensor[(140, 2), float32], Tensor[(1, 1170), float64], Tensor[(112), uint32]) {
  @func_6583(%var_6584) /* ty=(Tensor[(16, 9, 7), int8], Tensor[(5, 14, 4), float32], Tensor[(140, 2), float32], Tensor[(1, 1170), float64], Tensor[(112), uint32]) */
}

def @func_3390(%var_3384: Tensor[(12, 4, 3), int64], %var_3385: Tensor[(12, 4, 3), int64]) -> Tensor[(12, 4, 3), int64] {
  %326 = cast(%var_3385, dtype="int64") /* ty=Tensor[(12, 4, 3), int64] */;
  %327 = shape_of(%var_3384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%var_3384, dtype="int64") /* ty=Tensor[(12, 4, 3), int64] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  add(%328, %329) /* ty=Tensor[(12, 4, 3), int64] */
}

def @func_5102(%var_5085: Tensor[(4, 120), float32], %var_5086: Tensor[(216), float64], %var_5088: Tensor[(660), int8]) -> (Tensor[(2, 6, 7), float64], Tensor[(2, 6, 7), float32], Tensor[(2, 6, 7), float32], Tensor[(224), float32], Tensor[(675), float64], Tensor[(4, 120), float32], Tensor[(216), float64], Tensor[(6, 66), float32], Tensor[(660), int8], Tensor[(2, 6, 7), float32]) {
  %330 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 6, 7), float64] */;
  %331 = rsqrt(%330) /* ty=Tensor[(2, 6, 7), float64] */;
  %332 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(2, 6, 7), float64] */;
  %333 = shape_of(%331, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%331, dtype="float64") /* ty=Tensor[(2, 6, 7), float64] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %336 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 6, 7), float64] */, dtype="float32") /* ty=Tensor[(2, 6, 7), float32] */;
  %337 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 6, 7), float64] */, dtype="float32") /* ty=Tensor[(2, 6, 7), float32] */;
  %338 = cast(meta[relay.Constant][26] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %339 = cast(%var_5085, dtype="float32") /* ty=Tensor[(4, 120), float32] */;
  %340 = cast(%var_5086, dtype="float64") /* ty=Tensor[(216), float64] */;
  %341 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 66), float32] */, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %342 = cast(%var_5088, dtype="int8") /* ty=Tensor[(660), int8] */;
  %343 = cast(meta[relay.Constant][26] /* ty=Tensor[(675), float64] */, dtype="float64") /* ty=Tensor[(675), float64] */;
  %344 = reshape(%338, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %345 = reshape(%339, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %346 = reshape(%340, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %347 = reshape(%341, newshape=[396]) /* ty=Tensor[(396), float32] */;
  %348 = reshape(%342, newshape=[110, 6]) /* ty=Tensor[(110, 6), int8] */;
  %349 = reshape(%343, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
  %350 = @func_4541(%344, %345, %346, %347, %348, %349) /* ty=(Tensor[(216), float64], Tensor[(480), float32], Tensor[(216), float64], Tensor[(5, 15, 9), uint64], Tensor[(14, 16, 16), bool], Tensor[(224), float32], Tensor[(396), float32], Tensor[(3584), float32], Tensor[(6, 11, 10), int8], Tensor[(110, 6), int8], Tensor[(5, 15, 9), bool]) */;
  %351 = cast(%331, dtype="float32") /* ty=Tensor[(2, 6, 7), float32] */;
  %352 = floor_mod(%334, %335) /* ty=Tensor[(2, 6, 7), float64] */;
  %353 = acos(%336) /* ty=Tensor[(2, 6, 7), float32] */;
  %354 = sin(%337) /* ty=Tensor[(2, 6, 7), float32] */;
  %355 = %350.5;
  %356 = log10(%351) /* ty=Tensor[(2, 6, 7), float32] */;
  (%352, %353, %354, %355, meta[relay.Constant][26] /* ty=Tensor[(675), float64] */, %var_5085, %var_5086, meta[relay.Constant][27] /* ty=Tensor[(6, 66), float32] */, %var_5088, %356)
}

def @func_2844(%var_2841: Tensor[(13, 12, 14), uint64], %var_2842: Tensor[(1170), float64], %var_2843: Tensor[(112), uint32]) -> (Tensor[(13, 12, 14), uint64], Tensor[(56), uint64], Tensor[(336), uint64], Tensor[(1650), float32], Tensor[(1170), float64], Tensor[(1650), float32], Tensor[(550), int16], Tensor[(112), uint32], Tensor[(13, 10, 9), int8]) {
  %389 = fn (%var_2789: Tensor[(13, 12, 14), uint64], %var_2802: Tensor[(1170), float64], %var_2819: Tensor[(112), uint32]) -> (Tensor[(13, 12, 14), uint64], Tensor[(56), uint64], Tensor[(336), uint64], Tensor[(1650), float32], Tensor[(1170), float64], Tensor[(1650), float32], Tensor[(550), int16], Tensor[(112), uint32], Tensor[(13, 10, 9), int8]) {
    %357 = cast(%var_2789, dtype="uint64") /* ty=Tensor[(13, 12, 14), uint64] */;
    %358 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(13, 12, 14), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %359 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 12, 14), uint64] */, dtype="uint64") /* ty=Tensor[(13, 12, 14), uint64] */;
    %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %361 = cast(meta[relay.Constant][32] /* ty=Tensor[(550), int16] */, dtype="int16") /* ty=Tensor[(550), int16] */;
    %362 = cast(meta[relay.Constant][32] /* ty=Tensor[(550), int16] */, dtype="int16") /* ty=Tensor[(550), int16] */;
    %363 = cast(meta[relay.Constant][29] /* ty=Tensor[(56), uint64] */, dtype="uint64") /* ty=Tensor[(56), uint64] */;
    %364 = cast(meta[relay.Constant][30] /* ty=Tensor[(336), uint64] */, dtype="uint64") /* ty=Tensor[(336), uint64] */;
    %365 = cast(meta[relay.Constant][31] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %366 = cast(%var_2802, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %367 = reshape(%363, newshape=[4, 14, 1]) /* ty=Tensor[(4, 14, 1), uint64] */;
    %368 = reshape(%364, newshape=[4, 14, 6]) /* ty=Tensor[(4, 14, 6), uint64] */;
    %369 = reshape(%365, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
    %370 = reshape(%366, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %371 = @func_993(%367, %368, %369, %370) /* ty=(Tensor[(4, 14, 6), uint64], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(13, 10, 9), float64], Tensor[(112), uint32], Tensor[(264), float64], Tensor[(264), float64], Tensor[(1170), uint16]) */;
    %372 = %371.3;
    %373 = cast(%372, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
    %374 = asinh(%373) /* ty=Tensor[(13, 10, 9), float64] */;
    %375 = cast(%374, dtype="float64") /* ty=Tensor[(13, 10, 9), float64] */;
    %376 = cast(%var_2819, dtype="uint32") /* ty=Tensor[(112), uint32] */;
    %377 = reshape(%361, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), int16] */;
    %378 = reshape(%362, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), int16] */;
    %379 = reshape(%375, newshape=[5, 234]) /* ty=Tensor[(5, 234), float64] */;
    %380 = reshape(%376, newshape=[2, 56]) /* ty=Tensor[(2, 56), uint32] */;
    %381 = @func_1252(%377, %378, %379, %380) /* ty=(Tensor[(11, 10, 5), bool], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(264, 1), float64], Tensor[(11, 8, 3), float64], Tensor[(13, 10, 9), float64], Tensor[(5, 234), float64], Tensor[(2, 56), uint32]) */;
    %382 = cast(%372, dtype="int8") /* ty=Tensor[(13, 10, 9), int8] */;
    %383 = shape_of(%374, dtype="int32") /* ty=Tensor[(3), int32] */;
    %384 = cast(%374, dtype="int8") /* ty=Tensor[(13, 10, 9), int8] */;
    %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %386 = left_shift(%359, %360) /* ty=Tensor[(13, 12, 14), uint64] */;
    %387 = %381.2;
    %388 = maximum(%384, %385) /* ty=Tensor[(13, 10, 9), int8] */;
    (%386, meta[relay.Constant][29] /* ty=Tensor[(56), uint64] */, meta[relay.Constant][30] /* ty=Tensor[(336), uint64] */, meta[relay.Constant][31] /* ty=Tensor[(1650), float32] */, %var_2802, %387, meta[relay.Constant][32] /* ty=Tensor[(550), int16] */, %var_2819, %388)
  };
  %389(%var_2841, %var_2842, %var_2843) /* ty=(Tensor[(13, 12, 14), uint64], Tensor[(56), uint64], Tensor[(336), uint64], Tensor[(1650), float32], Tensor[(1170), float64], Tensor[(1650), float32], Tensor[(550), int16], Tensor[(112), uint32], Tensor[(13, 10, 9), int8]) */
}

def @func_4085(%var_4083: Tensor[(8, 3, 11), float32]) -> (Tensor[(8, 3, 11), float32],) {
  @func_4082(%var_4083) /* ty=(Tensor[(8, 3, 11), float32],) */
}

def @func_6341(%var_6338: Tensor[(77), float32], %var_6339: Tensor[(280), float32], %var_6340: Tensor[(2, 56), uint32]) -> (Tensor[(16, 9, 7), int8], Tensor[(6, 11, 10), int8], Tensor[(77), float32], Tensor[(660, 1), int8], Tensor[(264), float64], Tensor[(280), float32], Tensor[(1170), float64], Tensor[(2, 56), uint32]) {
  %407 = fn (%var_6320: Tensor[(77), float32], %var_6331: Tensor[(280), float32], %var_6333: Tensor[(2, 56), uint32]) -> (Tensor[(16, 9, 7), int8], Tensor[(6, 11, 10), int8], Tensor[(77), float32], Tensor[(660, 1), int8], Tensor[(264), float64], Tensor[(280), float32], Tensor[(1170), float64], Tensor[(2, 56), uint32]) {
    %390 = cast(%var_6320, dtype="float32") /* ty=Tensor[(77), float32] */;
    %391 = cast(meta[relay.Constant][33] /* ty=Tensor[(660, 1), int8] */, dtype="int8") /* ty=Tensor[(660, 1), int8] */;
    %392 = reshape(%390, newshape=[77]) /* ty=Tensor[(77), float32] */;
    %393 = reshape(%391, newshape=[660]) /* ty=Tensor[(660), int8] */;
    %394 = @func_5943(%392, %393) /* ty=(Tensor[(16, 9, 7), bool], Tensor[(7, ?, 11), float64], Tensor[(77), float32], Tensor[(6, 11, 10), int8], Tensor[(660), int8]) */;
    %395 = cast(%var_6331, dtype="float32") /* ty=Tensor[(280), float32] */;
    %396 = cast(meta[relay.Constant][34] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %397 = cast(%var_6333, dtype="uint32") /* ty=Tensor[(2, 56), uint32] */;
    %398 = cast(meta[relay.Constant][34] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %399 = reshape(%395, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
    %400 = reshape(%396, newshape=[10, 117]) /* ty=Tensor[(10, 117), float64] */;
    %401 = reshape(%397, newshape=[112]) /* ty=Tensor[(112), uint32] */;
    %402 = reshape(%398, newshape=[10, 117]) /* ty=Tensor[(10, 117), float64] */;
    %403 = @func_1611(%399, %400, %401, %402) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(264), float64], Tensor[(112), uint32], Tensor[(10, 117), float32]) */;
    %404 = @func_6244() /* ty=Tensor[(16, 9, 7), int8] */;
    %405 = %394.3;
    %406 = %403.1;
    (%404, %405, %var_6320, meta[relay.Constant][33] /* ty=Tensor[(660, 1), int8] */, %406, %var_6331, meta[relay.Constant][34] /* ty=Tensor[(1170), float64] */, %var_6333)
  };
  %407(%var_6338, %var_6339, %var_6340) /* ty=(Tensor[(16, 9, 7), int8], Tensor[(6, 11, 10), int8], Tensor[(77), float32], Tensor[(660, 1), int8], Tensor[(264), float64], Tensor[(280), float32], Tensor[(1170), float64], Tensor[(2, 56), uint32]) */
}

def @func_6041() -> (Tensor[(16, 9, 7), int8],) {
  @func_6039() /* ty=(Tensor[(16, 9, 7), int8],) */
}

def @func_1258(%var_1254: Tensor[(11, 10, 5), int16], %var_1255: Tensor[(11, 10, 5), int16], %var_1256: Tensor[(5, 234), float64], %var_1257: Tensor[(2, 56), uint32]) -> (Tensor[(11, 10, 5), bool], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(264, 1), float64], Tensor[(11, 8, 3), float64], Tensor[(13, 10, 9), float64], Tensor[(5, 234), float64], Tensor[(2, 56), uint32]) {
  @func_1252(%var_1254, %var_1255, %var_1256, %var_1257) /* ty=(Tensor[(11, 10, 5), bool], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(264, 1), float64], Tensor[(11, 8, 3), float64], Tensor[(13, 10, 9), float64], Tensor[(5, 234), float64], Tensor[(2, 56), uint32]) */
}

def @func_5988(%var_5986: Tensor[(7, 1, 4), float32], %var_5987: Tensor[(1650, 1), float32]) -> (Tensor[(7, ?, 4), bool], Tensor[(10, 15, 11), float32], Tensor[(1650, 1), float32]) {
  @func_5984(%var_5986, %var_5987) /* ty=(Tensor[(7, ?, 4), bool], Tensor[(10, 15, 11), float32], Tensor[(1650, 1), float32]) */
}

def @func_6583(%var_6567: Tensor[(140, 2), float32]) -> (Tensor[(16, 9, 7), int8], Tensor[(5, 14, 4), float32], Tensor[(140, 2), float32], Tensor[(1, 1170), float64], Tensor[(112), uint32]) {
  %408 = cast(%var_6567, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %409 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 1170), float64] */, dtype="float64") /* ty=Tensor[(1, 1170), float64] */;
  %410 = cast(meta[relay.Constant][36] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %411 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 1170), float64] */, dtype="float64") /* ty=Tensor[(1, 1170), float64] */;
  %412 = reshape(%408, newshape=[5, 14, 4]) /* ty=Tensor[(5, 14, 4), float32] */;
  %413 = reshape(%409, newshape=[10, 117]) /* ty=Tensor[(10, 117), float64] */;
  %414 = reshape(%410, newshape=[112]) /* ty=Tensor[(112), uint32] */;
  %415 = reshape(%411, newshape=[10, 117]) /* ty=Tensor[(10, 117), float64] */;
  %416 = @func_1611(%412, %413, %414, %415) /* ty=(Tensor[(5, 14, 4), float32], Tensor[(264), float64], Tensor[(112), uint32], Tensor[(10, 117), float32]) */;
  %417 = @func_6140() /* ty=Tensor[(16, 9, 7), int8] */;
  %418 = %416.0;
  (%417, %418, %var_6567, meta[relay.Constant][35] /* ty=Tensor[(1, 1170), float64] */, meta[relay.Constant][36] /* ty=Tensor[(112), uint32] */)
}

def @func_1045(%var_1042: Tensor[(2, 13, 12), float32], %var_1043: Tensor[(1650), float32], %var_1044: Tensor[(396), float64]) -> (Tensor[(2, 13, 12), float32], Tensor[(1650), bool], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) {
  %436 = fn (%var_1003: Tensor[(2, 13, 12), float32], %var_1026: Tensor[(1650), float32], %var_1037: Tensor[(396), float64]) -> (Tensor[(2, 13, 12), float32], Tensor[(1650), bool], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) {
    %419 = cast(%var_1003, dtype="float32") /* ty=Tensor[(2, 13, 12), float32] */;
    %420 = cast(%var_1026, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %421 = cast(%var_1026, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %422 = reshape(%420, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
    %423 = reshape(%421, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
    %424 = @func_746(%422, %423) /* ty=(Tensor[(10, 15, 11), float32], Tensor[(10, 15, 11), float32]) */;
    %425 = %424.1;
    %426 = cast(%425, dtype="bool") /* ty=Tensor[(10, 15, 11), bool] */;
    %427 = shape_of(%var_1026, dtype="int32") /* ty=Tensor[(1), int32] */;
    %428 = cast(%var_1026, dtype="bool") /* ty=Tensor[(1650), bool] */;
    %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?), bool] */;
    %430 = cast(%var_1037, dtype="float64") /* ty=Tensor[(396), float64] */;
    %431 = reshape(%430, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float64] */;
    %432 = @func_526(%431) /* ty=(Tensor[(6, 11, 6), float64], Tensor[(6, 11, 6), float32]) */;
    %433 = log(%419) /* ty=Tensor[(2, 13, 12), float32] */;
    %434 = equal(%428, %429) /* ty=Tensor[(1650), bool] */;
    %435 = %432.0;
    (%433, %434, %435, %var_1037)
  };
  %436(%var_1042, %var_1043, %var_1044) /* ty=(Tensor[(2, 13, 12), float32], Tensor[(1650), bool], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) */
}

def @func_999(%var_995: Tensor[(4, 14, 1), uint64], %var_996: Tensor[(4, 14, 6), uint64], %var_997: Tensor[(1650), float32], %var_998: Tensor[(1170), float64]) -> (Tensor[(4, 14, 6), uint64], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(13, 10, 9), float64], Tensor[(112), uint32], Tensor[(264), float64], Tensor[(264), float64], Tensor[(1170), uint16]) {
  @func_993(%var_995, %var_996, %var_997, %var_998) /* ty=(Tensor[(4, 14, 6), uint64], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(13, 10, 9), float64], Tensor[(112), uint32], Tensor[(264), float64], Tensor[(264), float64], Tensor[(1170), uint16]) */
}

def @func_6636() -> (Tensor[(16, 9, 7), float64],) {
  %437 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
  %438 = %437.1;
  %439 = cast(%438, dtype="float64") /* ty=Tensor[(16, 9, 7), float64] */;
  %440 = rsqrt(%439) /* ty=Tensor[(16, 9, 7), float64] */;
  (%440,)
}

def @func_1752(%var_1749: Tensor[(10, 13, 14), float64], %var_1750: Tensor[(550), int16], %var_1751: Tensor[(390, 3), float64]) -> (Tensor[(10, 13, 14), float64], Tensor[(2, 56), uint32], Tensor[(550), int16], Tensor[(390, 3), float64], Tensor[(112), uint32]) {
  @func_1747(%var_1749, %var_1750, %var_1751) /* ty=(Tensor[(10, 13, 14), float64], Tensor[(2, 56), uint32], Tensor[(550), int16], Tensor[(390, 3), float64], Tensor[(112), uint32]) */
}

def @func_4274(%var_4271: Tensor[(14, 16, 1), float32], %var_4272: Tensor[(6, 11, 6), float32], %var_4273: Tensor[(14, 16, 16), float32]) -> (Tensor[(6, 11, 6), uint32], Tensor[(396, ?), uint64], Tensor[(6, 11, 6), int8], Tensor[(14, 16, 16), bool], Tensor[(14, 16, 16), float32]) {
  %470 = fn (%var_4156: Tensor[(14, 16, 1), float32], %var_4177: Tensor[(6, 11, 6), float32], %var_4212: Tensor[(14, 16, 16), float32]) -> (Tensor[(6, 11, 6), uint32], Tensor[(396, ?), uint64], Tensor[(6, 11, 6), int8], Tensor[(14, 16, 16), bool], Tensor[(14, 16, 16), float32]) {
    %441 = cast(meta[relay.Constant][37] /* ty=Tensor[(396, 1), float64] */, dtype="float64") /* ty=Tensor[(396, 1), float64] */;
    %442 = reshape(%441, newshape=[6, 11, 6]) /* ty=Tensor[(6, 11, 6), float64] */;
    %443 = @func_526(%442) /* ty=(Tensor[(6, 11, 6), float64], Tensor[(6, 11, 6), float32]) */;
    %444 = %443.1;
    %445 = cast(%var_4177, dtype="uint32") /* ty=Tensor[(6, 11, 6), uint32] */;
    %446 = shape_of(%444, dtype="int32") /* ty=Tensor[(3), int32] */;
    %447 = cast(%444, dtype="uint32") /* ty=Tensor[(6, 11, 6), uint32] */;
    %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %449 = cast(%var_4177, dtype="uint64") /* ty=Tensor[(6, 11, 6), uint64] */;
    %450 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(396, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %451 = cast(meta[relay.Constant][37] /* ty=Tensor[(396, 1), float64] */, dtype="uint64") /* ty=Tensor[(396, 1), uint64] */;
    %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %453 = cast(meta[relay.Constant][37] /* ty=Tensor[(396, 1), float64] */, dtype="int8") /* ty=Tensor[(396, 1), int8] */;
    %454 = shape_of(%var_4177, dtype="int32") /* ty=Tensor[(3), int32] */;
    %455 = cast(%var_4177, dtype="int8") /* ty=Tensor[(6, 11, 6), int8] */;
    %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %457 = cast(%var_4156, dtype="float32") /* ty=Tensor[(14, 16, 1), float32] */;
    %458 = log(%457) /* ty=Tensor[(14, 16, 1), float32] */;
    %459 = cast(%458, dtype="bool") /* ty=Tensor[(14, 16, 1), bool] */;
    %460 = cast(%var_4212, dtype="bool") /* ty=Tensor[(14, 16, 16), bool] */;
    %461 = cast(%458, dtype="bool") /* ty=Tensor[(14, 16, 1), bool] */;
    %462 = cast(%var_4212, dtype="bool") /* ty=Tensor[(14, 16, 16), bool] */;
    %463 = greater_equal(%461, %462) /* ty=Tensor[(14, 16, 16), bool] */;
    %464 = cast(%463, dtype="float32") /* ty=Tensor[(14, 16, 16), float32] */;
    %465 = bitwise_xor(%447, %448) /* ty=Tensor[(6, 11, 6), uint32] */;
    %466 = multiply(%451, %452) /* ty=Tensor[(396, ?), uint64] */;
    %467 = left_shift(%455, %456) /* ty=Tensor[(6, 11, 6), int8] */;
    %468 = equal(%459, %460) /* ty=Tensor[(14, 16, 16), bool] */;
    %469 = atan(%464) /* ty=Tensor[(14, 16, 16), float32] */;
    (%465, %466, %467, %468, %469)
  };
  %470(%var_4271, %var_4272, %var_4273) /* ty=(Tensor[(6, 11, 6), uint32], Tensor[(396, ?), uint64], Tensor[(6, 11, 6), int8], Tensor[(14, 16, 16), bool], Tensor[(14, 16, 16), float32]) */
}

def @func_99(%var_78: Tensor[(11, 8, 3), float64]) -> (Tensor[(11, 8, 3), float64],) {
  %471 = cast(%var_78, dtype="float64") /* ty=Tensor[(11, 8, 3), float64] */;
  %472 = sinh(%471) /* ty=Tensor[(11, 8, 3), float64] */;
  (%472,)
}

def @func_5107(%var_5104: Tensor[(4, 120), float32], %var_5105: Tensor[(216), float64], %var_5106: Tensor[(660), int8]) -> (Tensor[(2, 6, 7), float64], Tensor[(2, 6, 7), float32], Tensor[(2, 6, 7), float32], Tensor[(224), float32], Tensor[(675), float64], Tensor[(4, 120), float32], Tensor[(216), float64], Tensor[(6, 66), float32], Tensor[(660), int8], Tensor[(2, 6, 7), float32]) {
  @func_5102(%var_5104, %var_5105, %var_5106) /* ty=(Tensor[(2, 6, 7), float64], Tensor[(2, 6, 7), float32], Tensor[(2, 6, 7), float32], Tensor[(224), float32], Tensor[(675), float64], Tensor[(4, 120), float32], Tensor[(216), float64], Tensor[(6, 66), float32], Tensor[(660), int8], Tensor[(2, 6, 7), float32]) */
}

def @func_4688(%var_4681: int8, %var_4682: Tensor[(10, 5, 16), int8], %var_4683: Tensor[(216), float64], %var_4684: Tensor[(675), float64], %var_4685: Tensor[(396), float32], %var_4686: Tensor[(550, 3), float32], %var_4687: Tensor[(550), int16]) -> (Tensor[(10, 5, 16), bool], Tensor[(480), float32], Tensor[(216), float64], Tensor[(216), uint64], Tensor[(10, 5, 16), float64], Tensor[(3, 6, 12), float64], Tensor[(3584), float32], Tensor[(675), float64], Tensor[(396), float32], Tensor[(660), int8], Tensor[(6, 11, 6), float64], Tensor[(312), float32], Tensor[(550, 3), float32], Tensor[(2, 56), uint32], Tensor[(1820), float64], Tensor[(550), int16], Tensor[(1170, 1), float64]) {
  %522 = fn (%var_4578: int8, %var_4579: Tensor[(10, 5, 16), int8], %var_4609: Tensor[(216), float64], %var_4647: Tensor[(675), float64], %var_4648: Tensor[(396), float32], %var_4663: Tensor[(550, 3), float32], %var_4675: Tensor[(550), int16]) -> (Tensor[(10, 5, 16), bool], Tensor[(480), float32], Tensor[(216), float64], Tensor[(216), uint64], Tensor[(10, 5, 16), float64], Tensor[(3, 6, 12), float64], Tensor[(3584), float32], Tensor[(675), float64], Tensor[(396), float32], Tensor[(660), int8], Tensor[(6, 11, 6), float64], Tensor[(312), float32], Tensor[(550, 3), float32], Tensor[(2, 56), uint32], Tensor[(1820), float64], Tensor[(550), int16], Tensor[(1170, 1), float64]) {
    %473 = cast(%var_4578, dtype="bool") /* ty=bool */;
    %474 = cast(%var_4579, dtype="bool") /* ty=Tensor[(10, 5, 16), bool] */;
    %475 = cast(meta[relay.Constant][38] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %476 = cast(%var_4609, dtype="float64") /* ty=Tensor[(216), float64] */;
    %477 = reshape(%475, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), float32] */;
    %478 = reshape(%476, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %479 = @func_4308(%477, %478) /* ty=(Tensor[(3, 6, 12), float64], Tensor[(216), float64], Tensor[(16, 6, 5), float32]) */;
    %480 = %479.1;
    %481 = cast(%480, dtype="uint64") /* ty=Tensor[(216), uint64] */;
    %482 = cast(%var_4578, dtype="uint64") /* ty=uint64 */;
    %483 = cast(%var_4579, dtype="float64") /* ty=Tensor[(10, 5, 16), float64] */;
    %484 = cast(%var_4578, dtype="float64") /* ty=float64 */;
    %485 = multiply(%481, %482) /* ty=Tensor[(216), uint64] */;
    %486 = cast(%485, dtype="float64") /* ty=Tensor[(216), float64] */;
    %487 = reshape(%486, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %488 = @func_2728(%487) /* ty=(Tensor[(7, 9, 8), float64], Tensor[(3, 6, 12), float64], Tensor[(216), float64]) */;
    %489 = cast(%var_4647, dtype="float64") /* ty=Tensor[(675), float64] */;
    %490 = cast(meta[relay.Constant][38] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %491 = %488.1;
    %492 = cast(%491, dtype="float64") /* ty=Tensor[(3, 6, 12), float64] */;
    %493 = cast(%var_4648, dtype="float32") /* ty=Tensor[(396), float32] */;
    %494 = cast(meta[relay.Constant][39] /* ty=Tensor[(660), int8] */, dtype="int8") /* ty=Tensor[(660), int8] */;
    %495 = cast(%var_4647, dtype="float64") /* ty=Tensor[(675), float64] */;
    %496 = reshape(%489, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
    %497 = reshape(%490, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %498 = reshape(%492, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %499 = reshape(%493, newshape=[396]) /* ty=Tensor[(396), float32] */;
    %500 = reshape(%494, newshape=[110, 6]) /* ty=Tensor[(110, 6), int8] */;
    %501 = reshape(%495, newshape=[5, 15, 9]) /* ty=Tensor[(5, 15, 9), float64] */;
    %502 = @func_4541(%496, %497, %498, %499, %500, %501) /* ty=(Tensor[(216), float64], Tensor[(480), float32], Tensor[(216), float64], Tensor[(5, 15, 9), uint64], Tensor[(14, 16, 16), bool], Tensor[(224), float32], Tensor[(396), float32], Tensor[(3584), float32], Tensor[(6, 11, 10), int8], Tensor[(110, 6), int8], Tensor[(5, 15, 9), bool]) */;
    %503 = cast(meta[relay.Constant][40] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
    %504 = cast(%var_4663, dtype="float32") /* ty=Tensor[(550, 3), float32] */;
    %505 = cast(%var_4648, dtype="float64") /* ty=Tensor[(396), float64] */;
    %506 = reshape(%503, newshape=[2, 13, 12]) /* ty=Tensor[(2, 13, 12), float32] */;
    %507 = reshape(%504, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
    %508 = reshape(%505, newshape=[396]) /* ty=Tensor[(396), float64] */;
    %509 = @func_1041(%506, %507, %508) /* ty=(Tensor[(2, 13, 12), float32], Tensor[(1650), bool], Tensor[(6, 11, 6), float64], Tensor[(396), float64]) */;
    %510 = cast(meta[relay.Constant][41] /* ty=Tensor[(1820), float64] */, dtype="float64") /* ty=Tensor[(1820), float64] */;
    %511 = cast(%var_4675, dtype="int16") /* ty=Tensor[(550), int16] */;
    %512 = cast(meta[relay.Constant][42] /* ty=Tensor[(1170, 1), float64] */, dtype="float64") /* ty=Tensor[(1170, 1), float64] */;
    %513 = reshape(%510, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float64] */;
    %514 = reshape(%511, newshape=[550]) /* ty=Tensor[(550), int16] */;
    %515 = reshape(%512, newshape=[390, 3]) /* ty=Tensor[(390, 3), float64] */;
    %516 = @func_1747(%513, %514, %515) /* ty=(Tensor[(10, 13, 14), float64], Tensor[(2, 56), uint32], Tensor[(550), int16], Tensor[(390, 3), float64], Tensor[(112), uint32]) */;
    %517 = not_equal(%473, %474) /* ty=Tensor[(10, 5, 16), bool] */;
    %518 = power(%483, %484) /* ty=Tensor[(10, 5, 16), float64] */;
    %519 = %502.7;
    %520 = %509.2;
    %521 = %516.1;
    (%517, meta[relay.Constant][38] /* ty=Tensor[(480), float32] */, %var_4609, %485, %518, %491, %519, %var_4647, %var_4648, meta[relay.Constant][39] /* ty=Tensor[(660), int8] */, %520, meta[relay.Constant][40] /* ty=Tensor[(312), float32] */, %var_4663, %521, meta[relay.Constant][41] /* ty=Tensor[(1820), float64] */, %var_4675, meta[relay.Constant][42] /* ty=Tensor[(1170, 1), float64] */)
  };
  %522(%var_4681, %var_4682, %var_4683, %var_4684, %var_4685, %var_4686, %var_4687) /* ty=(Tensor[(10, 5, 16), bool], Tensor[(480), float32], Tensor[(216), float64], Tensor[(216), uint64], Tensor[(10, 5, 16), float64], Tensor[(3, 6, 12), float64], Tensor[(3584), float32], Tensor[(675), float64], Tensor[(396), float32], Tensor[(660), int8], Tensor[(6, 11, 6), float64], Tensor[(312), float32], Tensor[(550, 3), float32], Tensor[(2, 56), uint32], Tensor[(1820), float64], Tensor[(550), int16], Tensor[(1170, 1), float64]) */
}

def @func_4549(%var_4543: Tensor[(5, 15, 9), float64], %var_4544: Tensor[(480), float32], %var_4545: Tensor[(216), float64], %var_4546: Tensor[(396), float32], %var_4547: Tensor[(110, 6), int8], %var_4548: Tensor[(5, 15, 9), float64]) -> (Tensor[(216), float64], Tensor[(480), float32], Tensor[(216), float64], Tensor[(5, 15, 9), uint64], Tensor[(14, 16, 16), bool], Tensor[(224), float32], Tensor[(396), float32], Tensor[(3584), float32], Tensor[(6, 11, 10), int8], Tensor[(110, 6), int8], Tensor[(5, 15, 9), bool]) {
  @func_4541(%var_4543, %var_4544, %var_4545, %var_4546, %var_4547, %var_4548) /* ty=(Tensor[(216), float64], Tensor[(480), float32], Tensor[(216), float64], Tensor[(5, 15, 9), uint64], Tensor[(14, 16, 16), bool], Tensor[(224), float32], Tensor[(396), float32], Tensor[(3584), float32], Tensor[(6, 11, 10), int8], Tensor[(110, 6), int8], Tensor[(5, 15, 9), bool]) */
}

def @func_3343(%var_3341: Tensor[(7, 1, 11), float32], %var_3342: Tensor[(7, 1, 11), float32]) -> Tensor[(7, ?, 11), float64] {
  @func_3339(%var_3341, %var_3342) /* ty=Tensor[(7, ?, 11), float64] */
}

def @func_5943(%var_5938: Tensor[(77), float32], %var_5941: Tensor[(660), int8]) -> (Tensor[(16, 9, 7), bool], Tensor[(7, ?, 11), float64], Tensor[(77), float32], Tensor[(6, 11, 10), int8], Tensor[(660), int8]) {
  %523 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
  %524 = cast(%var_5938, dtype="float32") /* ty=Tensor[(77), float32] */;
  %525 = cast(%var_5938, dtype="float32") /* ty=Tensor[(77), float32] */;
  %526 = reshape(%524, newshape=[7, 1, 11]) /* ty=Tensor[(7, 1, 11), float32] */;
  %527 = reshape(%525, newshape=[7, 1, 11]) /* ty=Tensor[(7, 1, 11), float32] */;
  %528 = cast(%var_5941, dtype="int8") /* ty=Tensor[(660), int8] */;
  %529 = cast(%var_5941, dtype="int8") /* ty=Tensor[(660), int8] */;
  %530 = reshape(%528, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int8] */;
  %531 = reshape(%529, newshape=[6, 11, 10]) /* ty=Tensor[(6, 11, 10), int8] */;
  %532 = @func_1326(%530, %531) /* ty=(Tensor[(6, 11, 10), int8],) */;
  %533 = %523.0;
  %534 = @func_3339(%526, %527) /* ty=Tensor[(7, ?, 11), float64] */;
  %535 = %532.0;
  (%533, %534, %var_5938, %535, %var_5941)
}

def @func_3476(%var_3474: Tensor[(7, 5, 11), float64]) -> (Tensor[(7, 5, 11), float64],) {
  @func_3473(%var_3474) /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_6854(%var_6849: Tensor[(10, 7, 10), int64], %var_6850: Tensor[(10, 7, 10), int64], %var_6851: Tensor[(384), uint16], %var_6852: Tensor[(264, 1), float64], %var_6853: Tensor[(7, 260), float64]) -> (Tensor[(10, 7, 10), uint32], Tensor[(16, 9, 7), int8], Tensor[(12, 16, 2), uint16], Tensor[(384), uint16], Tensor[(11, 8, 3), float64], Tensor[(264, 1), float64], Tensor[(10, 7, 10), float32], Tensor[(1, 1170), float64], Tensor[(280), float32], Tensor[(9, 13, 11), float32], Tensor[(1287), float32], Tensor[(10, 7, 10), bool], Tensor[(16, 9, 7), int8], Tensor[(2, 56), uint32], Tensor[(7, 260), float64], Tensor[(550), int16]) {
  %591 = fn (%var_6740: Tensor[(10, 7, 10), int64], %var_6756: Tensor[(10, 7, 10), int64], %var_6795: Tensor[(384), uint16], %var_6808: Tensor[(264, 1), float64], %var_6842: Tensor[(7, 260), float64]) -> (Tensor[(10, 7, 10), uint32], Tensor[(16, 9, 7), int8], Tensor[(12, 16, 2), uint16], Tensor[(384), uint16], Tensor[(11, 8, 3), float64], Tensor[(264, 1), float64], Tensor[(10, 7, 10), float32], Tensor[(1, 1170), float64], Tensor[(280), float32], Tensor[(9, 13, 11), float32], Tensor[(1287), float32], Tensor[(10, 7, 10), bool], Tensor[(16, 9, 7), int8], Tensor[(2, 56), uint32], Tensor[(7, 260), float64], Tensor[(550), int16]) {
    %536 = cast(%var_6740, dtype="int64") /* ty=Tensor[(10, 7, 10), int64] */;
    %537 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(10, 7, 10), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %538 = cast(meta[relay.Constant][43] /* ty=Tensor[(10, 7, 10), int64] */, dtype="int64") /* ty=Tensor[(10, 7, 10), int64] */;
    %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %540 = bitwise_or(%538, %539) /* ty=Tensor[(10, 7, 10), int64] */;
    %541 = cast(%var_6756, dtype="uint32") /* ty=Tensor[(10, 7, 10), uint32] */;
    %542 = shape_of(%540, dtype="int32") /* ty=Tensor[(3), int32] */;
    %543 = cast(%540, dtype="uint32") /* ty=Tensor[(10, 7, 10), uint32] */;
    %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %545 = cast(%var_6795, dtype="uint16") /* ty=Tensor[(384), uint16] */;
    %546 = cast(%var_6795, dtype="uint16") /* ty=Tensor[(384), uint16] */;
    %547 = reshape(%545, newshape=[12, 16, 2]) /* ty=Tensor[(12, 16, 2), uint16] */;
    %548 = reshape(%546, newshape=[12, 16, 2]) /* ty=Tensor[(12, 16, 2), uint16] */;
    %549 = cast(%var_6808, dtype="float64") /* ty=Tensor[(264, 1), float64] */;
    %550 = reshape(%549, newshape=[11, 8, 3]) /* ty=Tensor[(11, 8, 3), float64] */;
    %551 = @func_99(%550) /* ty=(Tensor[(11, 8, 3), float64],) */;
    %552 = cast(meta[relay.Constant][43] /* ty=Tensor[(10, 7, 10), int64] */, dtype="float32") /* ty=Tensor[(10, 7, 10), float32] */;
    %553 = tan(%552) /* ty=Tensor[(10, 7, 10), float32] */;
    %554 = cast(%553, dtype="float32") /* ty=Tensor[(10, 7, 10), float32] */;
    %555 = asin(%554) /* ty=Tensor[(10, 7, 10), float32] */;
    %556 = cast(%var_6756, dtype="float32") /* ty=Tensor[(10, 7, 10), float32] */;
    %557 = shape_of(%555, dtype="int32") /* ty=Tensor[(3), int32] */;
    %558 = cast(%555, dtype="float32") /* ty=Tensor[(10, 7, 10), float32] */;
    %559 = dyn.reshape(%556, %557, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %560 = floor_mod(%558, %559) /* ty=Tensor[(10, 7, 10), float32] */;
    %561 = cast(%560, dtype="float32") /* ty=Tensor[(10, 7, 10), float32] */;
    %562 = asinh(%561) /* ty=Tensor[(10, 7, 10), float32] */;
    %563 = cast(%562, dtype="float32") /* ty=Tensor[(10, 7, 10), float32] */;
    %564 = cast(meta[relay.Constant][44] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %565 = reshape(%564, newshape=[140, 2]) /* ty=Tensor[(140, 2), float32] */;
    %566 = @func_6583(%565) /* ty=(Tensor[(16, 9, 7), int8], Tensor[(5, 14, 4), float32], Tensor[(140, 2), float32], Tensor[(1, 1170), float64], Tensor[(112), uint32]) */;
    %567 = cast(meta[relay.Constant][45] /* ty=Tensor[(1287), float32] */, dtype="float32") /* ty=Tensor[(1287), float32] */;
    %568 = reshape(%567, newshape=[9, 13, 11]) /* ty=Tensor[(9, 13, 11), float32] */;
    %569 = @func_5558(%568) /* ty=(Tensor[(9, 13, 11), bool], Tensor[(9, 13, 11), float32]) */;
    %570 = cast(%var_6756, dtype="bool") /* ty=Tensor[(10, 7, 10), bool] */;
    %571 = shape_of(%562, dtype="int32") /* ty=Tensor[(3), int32] */;
    %572 = cast(%562, dtype="bool") /* ty=Tensor[(10, 7, 10), bool] */;
    %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %574 = cast(%var_6842, dtype="float64") /* ty=Tensor[(7, 260), float64] */;
    %575 = cast(meta[relay.Constant][46] /* ty=Tensor[(550), int16] */, dtype="int16") /* ty=Tensor[(550), int16] */;
    %576 = %566.3;
    %577 = cast(%576, dtype="float64") /* ty=Tensor[(1, 1170), float64] */;
    %578 = reshape(%574, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float64] */;
    %579 = reshape(%575, newshape=[550]) /* ty=Tensor[(550), int16] */;
    %580 = reshape(%577, newshape=[390, 3]) /* ty=Tensor[(390, 3), float64] */;
    %581 = @func_1747(%578, %579, %580) /* ty=(Tensor[(10, 13, 14), float64], Tensor[(2, 56), uint32], Tensor[(550), int16], Tensor[(390, 3), float64], Tensor[(112), uint32]) */;
    %582 = logical_xor(%543, %544) /* ty=Tensor[(10, 7, 10), uint32] */;
    %583 = @func_6546() /* ty=Tensor[(16, 9, 7), int8] */;
    %584 = @func_1168(%547, %548) /* ty=Tensor[(12, 16, 2), uint16] */;
    %585 = %551.0;
    %586 = rsqrt(%563) /* ty=Tensor[(10, 7, 10), float32] */;
    %587 = %569.1;
    %588 = less(%572, %573) /* ty=Tensor[(10, 7, 10), bool] */;
    %589 = @func_6140() /* ty=Tensor[(16, 9, 7), int8] */;
    %590 = %581.1;
    (%582, %583, %584, %var_6795, %585, %var_6808, %586, %576, meta[relay.Constant][44] /* ty=Tensor[(280), float32] */, %587, meta[relay.Constant][45] /* ty=Tensor[(1287), float32] */, %588, %589, %590, %var_6842, meta[relay.Constant][46] /* ty=Tensor[(550), int16] */)
  };
  %591(%var_6849, %var_6850, %var_6851, %var_6852, %var_6853) /* ty=(Tensor[(10, 7, 10), uint32], Tensor[(16, 9, 7), int8], Tensor[(12, 16, 2), uint16], Tensor[(384), uint16], Tensor[(11, 8, 3), float64], Tensor[(264, 1), float64], Tensor[(10, 7, 10), float32], Tensor[(1, 1170), float64], Tensor[(280), float32], Tensor[(9, 13, 11), float32], Tensor[(1287), float32], Tensor[(10, 7, 10), bool], Tensor[(16, 9, 7), int8], Tensor[(2, 56), uint32], Tensor[(7, 260), float64], Tensor[(550), int16]) */
}

def @func_6496(%var_6494: Tensor[(1650), float32]) -> (Tensor[(16, 9, 7), bool], Tensor[(3, 6, 12), float64], Tensor[(216), float64], Tensor[(10, 15, 11), float32], Tensor[(1, 56), uint64], Tensor[(336), uint64], Tensor[(1650), float32], Tensor[(130, 9), float64]) {
  @func_6493(%var_6494) /* ty=(Tensor[(16, 9, 7), bool], Tensor[(3, 6, 12), float64], Tensor[(216), float64], Tensor[(10, 15, 11), float32], Tensor[(1, 56), uint64], Tensor[(336), uint64], Tensor[(1650), float32], Tensor[(130, 9), float64]) */
}

def @func_6894() -> (Tensor[(16, 9, 7), int8], Tensor[(16, 9, 7), int8], Tensor[(140, 2), float32], Tensor[(10, 28), float32]) {
  @func_6892() /* ty=(Tensor[(16, 9, 7), int8], Tensor[(16, 9, 7), int8], Tensor[(140, 2), float32], Tensor[(10, 28), float32]) */
}

def @func_5558(%var_5504: Tensor[(9, 13, 11), float32]) -> (Tensor[(9, 13, 11), bool], Tensor[(9, 13, 11), float32]) {
  %592 = cast(%var_5504, dtype="float32") /* ty=Tensor[(9, 13, 11), float32] */;
  %593 = sigmoid(%592) /* ty=Tensor[(9, 13, 11), float32] */;
  %594 = cast(%var_5504, dtype="bool") /* ty=Tensor[(9, 13, 11), bool] */;
  %595 = shape_of(%593, dtype="int32") /* ty=Tensor[(3), int32] */;
  %596 = cast(%593, dtype="bool") /* ty=Tensor[(9, 13, 11), bool] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %598 = cast(%var_5504, dtype="float32") /* ty=Tensor[(9, 13, 11), float32] */;
  %599 = logical_or(%596, %597) /* ty=Tensor[(9, 13, 11), bool] */;
  %600 = atanh(%598) /* ty=Tensor[(9, 13, 11), float32] */;
  (%599, %600)
}

def @func_2509(%var_2508: Tensor[(3, 6, 12), float64]) -> Tensor[(3, 6, 12), float64] {
  %605 = fn (%var_2501: Tensor[(3, 6, 12), float64]) -> Tensor[(3, 6, 12), float64] {
    %601 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 6, 12), float64] */, dtype="float64") /* ty=Tensor[(3, 6, 12), float64] */;
    %602 = shape_of(%var_2501, dtype="int32") /* ty=Tensor[(3), int32] */;
    %603 = cast(%var_2501, dtype="float64") /* ty=Tensor[(3, 6, 12), float64] */;
    %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%603, %604) /* ty=Tensor[(3, 6, 12), float64] */
  };
  %605(%var_2508) /* ty=Tensor[(3, 6, 12), float64] */
}

def @func_4312(%var_4310: Tensor[(16, 6, 5), float32], %var_4311: Tensor[(216), float64]) -> (Tensor[(3, 6, 12), float64], Tensor[(216), float64], Tensor[(16, 6, 5), float32]) {
  @func_4308(%var_4310, %var_4311) /* ty=(Tensor[(3, 6, 12), float64], Tensor[(216), float64], Tensor[(16, 6, 5), float32]) */
}

def @func_6912() -> Tensor[(16, 9, 7), int8] {
  @func_6910() /* ty=Tensor[(16, 9, 7), int8] */
}

def @func_6654() -> Tensor[(16, 9, 7), int8] {
  %606 = @func_6244() /* ty=Tensor[(16, 9, 7), int8] */;
  %607 = cast(%606, dtype="float32") /* ty=Tensor[(16, 9, 7), float32] */;
  %608 = atanh(%607) /* ty=Tensor[(16, 9, 7), float32] */;
  %609 = cast(%608, dtype="int8") /* ty=Tensor[(16, 9, 7), int8] */;
  %610 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%606, dtype="int8") /* ty=Tensor[(16, 9, 7), int8] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_xor(%611, %612) /* ty=Tensor[(16, 9, 7), int8] */
}

def @func_457(%var_455: Tensor[(2, 4, 14), uint32], %var_456: Tensor[(264), float64]) -> (Tensor[(2, 4, 14), uint32], Tensor[(11, 8, 3), float64], Tensor[(264), float64]) {
  %622 = fn (%var_428: Tensor[(2, 4, 14), uint32], %var_449: Tensor[(264), float64]) -> (Tensor[(2, 4, 14), uint32], Tensor[(11, 8, 3), float64], Tensor[(264), float64]) {
    %613 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 4, 14), uint32] */, dtype="uint32") /* ty=Tensor[(2, 4, 14), uint32] */;
    %614 = shape_of(%var_428, dtype="int32") /* ty=Tensor[(3), int32] */;
    %615 = cast(%var_428, dtype="uint32") /* ty=Tensor[(2, 4, 14), uint32] */;
    %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %617 = cast(%var_449, dtype="float64") /* ty=Tensor[(264), float64] */;
    %618 = reshape(%617, newshape=[11, 8, 3]) /* ty=Tensor[(11, 8, 3), float64] */;
    %619 = @func_99(%618) /* ty=(Tensor[(11, 8, 3), float64],) */;
    %620 = subtract(%615, %616) /* ty=Tensor[(2, 4, 14), uint32] */;
    %621 = %619.0;
    (%620, %621, %var_449)
  };
  %622(%var_455, %var_456) /* ty=(Tensor[(2, 4, 14), uint32], Tensor[(11, 8, 3), float64], Tensor[(264), float64]) */
}

def @func_4748(%var_4746: Tensor[(10, 10, 4), bool], %var_4747: Tensor[(10, 10, 4), bool]) -> (Tensor[(10, 10, 4), bool],) {
  %628 = fn (%var_4738: Tensor[(10, 10, 4), bool], %var_4739: Tensor[(10, 10, 4), bool]) -> (Tensor[(10, 10, 4), bool],) {
    %623 = cast(%var_4739, dtype="bool") /* ty=Tensor[(10, 10, 4), bool] */;
    %624 = shape_of(%var_4738, dtype="int32") /* ty=Tensor[(3), int32] */;
    %625 = cast(%var_4738, dtype="bool") /* ty=Tensor[(10, 10, 4), bool] */;
    %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %627 = logical_or(%625, %626) /* ty=Tensor[(10, 10, 4), bool] */;
    (%627,)
  };
  %628(%var_4746, %var_4747) /* ty=(Tensor[(10, 10, 4), bool],) */
}

def @func_1747(%var_1717: Tensor[(10, 13, 14), float64], %var_1724: Tensor[(550), int16], %var_1725: Tensor[(390, 3), float64]) -> (Tensor[(10, 13, 14), float64], Tensor[(2, 56), uint32], Tensor[(550), int16], Tensor[(390, 3), float64], Tensor[(112), uint32]) {
  %629 = cast(%var_1717, dtype="float64") /* ty=Tensor[(10, 13, 14), float64] */;
  %630 = sinh(%629) /* ty=Tensor[(10, 13, 14), float64] */;
  %631 = cast(%630, dtype="float64") /* ty=Tensor[(10, 13, 14), float64] */;
  %632 = cast(%var_1724, dtype="int16") /* ty=Tensor[(550), int16] */;
  %633 = cast(%var_1724, dtype="int16") /* ty=Tensor[(550), int16] */;
  %634 = cast(%var_1725, dtype="float64") /* ty=Tensor[(390, 3), float64] */;
  %635 = cast(meta[relay.Constant][49] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %636 = reshape(%632, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), int16] */;
  %637 = reshape(%633, newshape=[11, 10, 5]) /* ty=Tensor[(11, 10, 5), int16] */;
  %638 = reshape(%634, newshape=[5, 234]) /* ty=Tensor[(5, 234), float64] */;
  %639 = reshape(%635, newshape=[2, 56]) /* ty=Tensor[(2, 56), uint32] */;
  %640 = @func_1252(%636, %637, %638, %639) /* ty=(Tensor[(11, 10, 5), bool], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(264, 1), float64], Tensor[(11, 8, 3), float64], Tensor[(13, 10, 9), float64], Tensor[(5, 234), float64], Tensor[(2, 56), uint32]) */;
  %641 = log2(%631) /* ty=Tensor[(10, 13, 14), float64] */;
  %642 = %640.7;
  (%641, %642, %var_1724, %var_1725, meta[relay.Constant][49] /* ty=Tensor[(112), uint32] */)
}

def @func_1326(%var_1316: Tensor[(6, 11, 10), int8], %var_1317: Tensor[(6, 11, 10), int8]) -> (Tensor[(6, 11, 10), int8],) {
  %643 = cast(%var_1317, dtype="int8") /* ty=Tensor[(6, 11, 10), int8] */;
  %644 = shape_of(%var_1316, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(%var_1316, dtype="int8") /* ty=Tensor[(6, 11, 10), int8] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %647 = logical_xor(%645, %646) /* ty=Tensor[(6, 11, 10), int8] */;
  (%647,)
}

def @func_102(%var_100: Tensor[(11, 8, 3), float64]) -> (Tensor[(11, 8, 3), float64],) {
  @func_99(%var_100) /* ty=(Tensor[(11, 8, 3), float64],) */
}

def @func_6944() -> Tensor[(16, 9, 7), int8] {
  %648 = fn () -> Tensor[(16, 9, 7), int8] {
    @func_6910() /* ty=Tensor[(16, 9, 7), int8] */
  };
  %648() /* ty=Tensor[(16, 9, 7), int8] */
}

def @func_993(%var_962: Tensor[(4, 14, 1), uint64], %var_963: Tensor[(4, 14, 6), uint64], %var_970: Tensor[(1650), float32], %var_989: Tensor[(1170), float64]) -> (Tensor[(4, 14, 6), uint64], Tensor[(10, 15, 11), float32], Tensor[(1650), float32], Tensor[(13, 10, 9), float64], Tensor[(112), uint32], Tensor[(264), float64], Tensor[(264), float64], Tensor[(1170), uint16]) {
  %649 = cast(%var_962, dtype="uint64") /* ty=Tensor[(4, 14, 1), uint64] */;
  %650 = cast(%var_963, dtype="uint64") /* ty=Tensor[(4, 14, 6), uint64] */;
  %651 = cast(%var_970, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %652 = cast(%var_970, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %653 = reshape(%651, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %654 = reshape(%652, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float32] */;
  %655 = @func_746(%653, %654) /* ty=(Tensor[(10, 15, 11), float32], Tensor[(10, 15, 11), float32]) */;
  %656 = cast(meta[relay.Constant][50] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %657 = cast(meta[relay.Constant][51] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %658 = reshape(%656, newshape=[13, 10, 9]) /* ty=Tensor[(13, 10, 9), float64] */;
  %659 = reshape(%657, newshape=[28, 4]) /* ty=Tensor[(28, 4), uint32] */;
  %660 = @func_508(%658, %659) /* ty=(Tensor[(13, 10, 9), float64], Tensor[(11, 8, 3), float64], Tensor[(264), float64], Tensor[(28, 4), float64]) */;
  %661 = cast(meta[relay.Constant][51] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
  %662 = cast(meta[relay.Constant][52] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %663 = reshape(%661, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), uint32] */;
  %664 = reshape(%662, newshape=[264]) /* ty=Tensor[(264), float64] */;
  %665 = @func_454(%663, %664) /* ty=(Tensor[(2, 4, 14), uint32], Tensor[(11, 8, 3), float64], Tensor[(264), float64]) */;
  %666 = cast(%var_989, dtype="uint16") /* ty=Tensor[(1170), uint16] */;
  %667 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(1170), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %668 = cast(meta[relay.Constant][50] /* ty=Tensor[(1170), float64] */, dtype="uint16") /* ty=Tensor[(1170), uint16] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %670 = subtract(%649, %650) /* ty=Tensor[(4, 14, 6), uint64] */;
  %671 = %655.0;
  %672 = %660.0;
  %673 = %665.2;
  %674 = left_shift(%668, %669) /* ty=Tensor[(1170), uint16] */;
  (%670, %671, %var_970, %672, meta[relay.Constant][51] /* ty=Tensor[(112), uint32] */, %673, meta[relay.Constant][52] /* ty=Tensor[(264), float64] */, %674)
}

def @func_6039() -> (Tensor[(16, 9, 7), int8],) {
  %675 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
  %676 = %675.1;
  (%676,)
}

def @func_6141() -> Tensor[(16, 9, 7), int8] {
  %678 = fn () -> Tensor[(16, 9, 7), int8] {
    %677 = @func_5854() /* ty=(Tensor[(16, 9, 7), bool], Tensor[(16, 9, 7), int8]) */;
    %677.1
  };
  %678() /* ty=Tensor[(16, 9, 7), int8] */
}

def @func_3997(%var_3994: Tensor[(264), float64], %var_3995: Tensor[(384), uint16], %var_3996: Tensor[(144), int64]) -> (Tensor[(11, 8, 3), float64], Tensor[(112), uint32], Tensor[(264), float64], Tensor[(12, 16, 2), uint16], Tensor[(384), uint16], Tensor[(2, 8, 2), float32], Tensor[(12, 4, 3), int64], Tensor[(144), int64], Tensor[(2, 8, 2), float32]) {
  %701 = fn (%var_3944: Tensor[(264), float64], %var_3948: Tensor[(384), uint16], %var_3976: Tensor[(144), int64]) -> (Tensor[(11, 8, 3), float64], Tensor[(112), uint32], Tensor[(264), float64], Tensor[(12, 16, 2), uint16], Tensor[(384), uint16], Tensor[(2, 8, 2), float32], Tensor[(12, 4, 3), int64], Tensor[(144), int64], Tensor[(2, 8, 2), float32]) {
    %679 = cast(meta[relay.Constant][53] /* ty=Tensor[(112), uint32] */, dtype="uint32") /* ty=Tensor[(112), uint32] */;
    %680 = cast(%var_3944, dtype="float64") /* ty=Tensor[(264), float64] */;
    %681 = reshape(%679, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), uint32] */;
    %682 = reshape(%680, newshape=[264]) /* ty=Tensor[(264), float64] */;
    %683 = @func_454(%681, %682) /* ty=(Tensor[(2, 4, 14), uint32], Tensor[(11, 8, 3), float64], Tensor[(264), float64]) */;
    %684 = cast(%var_3948, dtype="uint16") /* ty=Tensor[(384), uint16] */;
    %685 = cast(%var_3948, dtype="uint16") /* ty=Tensor[(384), uint16] */;
    %686 = reshape(%684, newshape=[12, 16, 2]) /* ty=Tensor[(12, 16, 2), uint16] */;
    %687 = reshape(%685, newshape=[12, 16, 2]) /* ty=Tensor[(12, 16, 2), uint16] */;
    %688 = cast(meta[relay.Constant][54] /* ty=Tensor[(2, 8, 2), float64] */, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
    %689 = exp(%688) /* ty=Tensor[(2, 8, 2), float64] */;
    %690 = cast(%689, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
    %691 = cast(%var_3976, dtype="int64") /* ty=Tensor[(144), int64] */;
    %692 = cast(%var_3976, dtype="int64") /* ty=Tensor[(144), int64] */;
    %693 = reshape(%691, newshape=[12, 4, 3]) /* ty=Tensor[(12, 4, 3), int64] */;
    %694 = reshape(%692, newshape=[12, 4, 3]) /* ty=Tensor[(12, 4, 3), int64] */;
    %695 = cast(%689, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
    %696 = %683.1;
    %697 = @func_1168(%686, %687) /* ty=Tensor[(12, 16, 2), uint16] */;
    %698 = tan(%690) /* ty=Tensor[(2, 8, 2), float32] */;
    %699 = @func_3390(%693, %694) /* ty=Tensor[(12, 4, 3), int64] */;
    %700 = asin(%695) /* ty=Tensor[(2, 8, 2), float32] */;
    (%696, meta[relay.Constant][53] /* ty=Tensor[(112), uint32] */, %var_3944, %697, %var_3948, %698, %699, %var_3976, %700)
  };
  %701(%var_3994, %var_3995, %var_3996) /* ty=(Tensor[(11, 8, 3), float64], Tensor[(112), uint32], Tensor[(264), float64], Tensor[(12, 16, 2), uint16], Tensor[(384), uint16], Tensor[(2, 8, 2), float32], Tensor[(12, 4, 3), int64], Tensor[(144), int64], Tensor[(2, 8, 2), float32]) */
}

def @func_4308(%var_4276: Tensor[(16, 6, 5), float32], %var_4295: Tensor[(216), float64]) -> (Tensor[(3, 6, 12), float64], Tensor[(216), float64], Tensor[(16, 6, 5), float32]) {
  %702 = cast(%var_4295, dtype="float64") /* ty=Tensor[(216), float64] */;
  %703 = reshape(%702, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %704 = @func_2728(%703) /* ty=(Tensor[(7, 9, 8), float64], Tensor[(3, 6, 12), float64], Tensor[(216), float64]) */;
  %705 = cast(%var_4276, dtype="float32") /* ty=Tensor[(16, 6, 5), float32] */;
  %706 = erf(%705) /* ty=Tensor[(16, 6, 5), float32] */;
  %707 = cast(%706, dtype="uint16") /* ty=Tensor[(16, 6, 5), uint16] */;
  %708 = shape_of(%var_4276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%var_4276, dtype="uint16") /* ty=Tensor[(16, 6, 5), uint16] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %711 = right_shift(%709, %710) /* ty=Tensor[(16, 6, 5), uint16] */;
  %712 = cast(%711, dtype="float64") /* ty=Tensor[(16, 6, 5), float64] */;
  %713 = exp(%712) /* ty=Tensor[(16, 6, 5), float64] */;
  %714 = cast(%713, dtype="float32") /* ty=Tensor[(16, 6, 5), float32] */;
  %715 = %704.1;
  %716 = sinh(%714) /* ty=Tensor[(16, 6, 5), float32] */;
  (%715, %var_4295, %716)
}

def @func_6892() -> (Tensor[(16, 9, 7), int8], Tensor[(16, 9, 7), int8], Tensor[(140, 2), float32], Tensor[(10, 28), float32]) {
  %717 = @func_6263() /* ty=(Tensor[(16, 9, 7), int8],) */;
  %718 = cast(meta[relay.Constant][55] /* ty=Tensor[(10, 28), float32] */, dtype="float32") /* ty=Tensor[(10, 28), float32] */;
  %719 = reshape(%718, newshape=[140, 2]) /* ty=Tensor[(140, 2), float32] */;
  %720 = @func_6583(%719) /* ty=(Tensor[(16, 9, 7), int8], Tensor[(5, 14, 4), float32], Tensor[(140, 2), float32], Tensor[(1, 1170), float64], Tensor[(112), uint32]) */;
  %721 = @func_6140() /* ty=Tensor[(16, 9, 7), int8] */;
  %722 = %717.0;
  %723 = %720.2;
  (%721, %722, %723, meta[relay.Constant][55] /* ty=Tensor[(10, 28), float32] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen141/build/output.py:1324: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen141/build/output.py:1329: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen141/build/output.py:1359: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen141/build/output.py:1364: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen141/build/output.py:1369: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen141/build/output.py:1374: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='cuda')

===================================
#[version = "0.0.5"]
type GradCell[T] {
  Raw(T),
  One(fn () -> T),
  Zero(fn () -> T),
}

def @AddGradCell[T](%add: fn (T, T) -> T, %l: GradCell[T], %r: GradCell[T]) -> GradCell[T] {
  %0 = (%l, %r);
  match (%0) {
    (Zero(_), _) => {
      %r
    },
    (_, Zero(_)) => {
      %l
    },
    _ => {
      %1 = match (%l) {
        Raw(%x: T) => {
          %x
        },
        One(%x1: fn () -> T) => {
          %x1()
        },
        Zero(%x2: fn () -> T) => {
          %x2()
        },
      };
      %2 = match (%r) {
        Raw(%x3: T) => {
          %x3
        },
        One(%x4: fn () -> T) => {
          %x4()
        },
        Zero(%x5: fn () -> T) => {
          %x5()
        },
      };
      %3 = %add(%1, %2);
      Raw(%3)
    },
  }
}

def @MultiplyGradCell[T](%multiply: fn (T, T) -> T, %l1: GradCell[T], %r1: GradCell[T]) -> GradCell[T] {
  %4 = (%l1, %r1);
  match (%4) {
    (Zero(_), _) => {
      %l1
    },
    (_, Zero(_)) => {
      %r1
    },
    (One(_), _) => {
      %r1
    },
    (_, One(_)) => {
      %l1
    },
    _ => {
      %5 = match (%l1) {
        Raw(%x6: T) => {
          %x6
        },
        One(%x7: fn () -> T) => {
          %x7()
        },
        Zero(%x8: fn () -> T) => {
          %x8()
        },
      };
      %6 = match (%r1) {
        Raw(%x9: T) => {
          %x9
        },
        One(%x10: fn () -> T) => {
          %x10()
        },
        Zero(%x11: fn () -> T) => {
          %x11()
        },
      };
      %7 = %multiply(%5, %6);
      Raw(%7)
    },
  }
}

def @main() -> (Tensor[(12, 12, 8), float32], ()) {
  %8 = ();
  (meta[relay.Constant][0] /* ty=Tensor[(12, 12, 8), float32] */, %8)
}

def @FromGradCell[T](%g: GradCell[T]) -> T {
  match (%g) {
    Raw(%x12: T) => {
      %x12
    },
    One(%x13: fn () -> T) => {
      %x13()
    },
    Zero(%x14: fn () -> T) => {
      %x14()
    },
  }
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

==========mod==========
#[version = "0.0.5"]
def @func_9875() -> Tensor[(7, 12, 4), float64] {
  %0 = @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %0.1
}

def @func_13448() -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1 = @func_6478() /* ty=(Tensor[(7, 12, 4), float32],) */;
  %2 = @func_3293() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %3 = @func_13385() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %4 = %1.0;
  %5 = %2.0;
  %6 = %3.0;
  (%4, %5, %6)
}

def @func_7585() -> Tensor[(7, 12, 4), float64] {
  %7 = @func_4678() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %7.0
}

def @func_2511() -> (Tensor[(72), uint64],) {
  %8 = @func_2274() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %9 = %8.4;
  (%9,)
}

def @func_5323() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(22), float32], Tensor[(11, 2), float32]) {
  %10 = @func_4875() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 2), float32] */, dtype="float32") /* ty=Tensor[(11, 2), float32] */;
  %12 = reshape(%11, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %13 = @func_2851(%12) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(4, 4, 4), int32], Tensor[(64), float32], Tensor[(22), float32], Tensor[(7, 12, 4), float64]) */;
  %14 = @func_1421() /* ty=Tensor[(7, 12, 4), float64] */;
  %15 = %10.1;
  %16 = %13.4;
  (%14, %15, %16, meta[relay.Constant][0] /* ty=Tensor[(11, 2), float32] */)
}

def @func_3874() -> (Tensor[(72), float32],) {
  %17 = @func_2972() /* ty=(Tensor[(72), float32],) */;
  %18 = %17.0;
  (%18,)
}

def @func_194() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %19 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  %21 = atan(%19) /* ty=Tensor[(7, 12, 4), float64] */;
  %22 = cos(%20) /* ty=Tensor[(7, 12, 4), float64] */;
  (%21, %22)
}

def @func_2367() -> Tensor[(7, 12, 4), float32] {
  @func_2283() /* ty=Tensor[(7, 12, 4), float32] */
}

def @func_1111() -> (Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
  %23 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %24 = @func_813() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %25 = %24.1;
  %26 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
  %27 = %26.2;
  %28 = cast(%27, dtype="float32") /* ty=Tensor[(8, 9, 1), float32] */;
  %29 = shape_of(%25, dtype="int32") /* ty=Tensor[(1), int32] */;
  %30 = cast(%25, dtype="float32") /* ty=Tensor[(72), float32] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?), float32] */;
  %32 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %33 = %32.1;
  %34 = cast(%33, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  %35 = reshape(%34, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
  %36 = @func_968(%35) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %37 = %23.1;
  %38 = mod(%30, %31) /* ty=Tensor[(72), float32] */;
  %39 = %36.0;
  (%37, %38, %33, %39)
}

def @func_968(%var_919: Tensor[(7, 12, 4), float64]) -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %40 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %41 = %40.0;
  %42 = cast(%41, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
  %43 = cast(%var_919, dtype="uint16") /* ty=Tensor[(7, 12, 4), uint16] */;
  %44 = shape_of(%41, dtype="int32") /* ty=Tensor[(3), int32] */;
  %45 = cast(%41, dtype="uint16") /* ty=Tensor[(7, 12, 4), uint16] */;
  %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %47 = @func_745() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %48 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %49 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %50 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %51 = tan(%42) /* ty=Tensor[(7, 12, 4), float32] */;
  %52 = minimum(%45, %46) /* ty=Tensor[(7, 12, 4), uint16] */;
  %53 = %47.0;
  %54 = %48.1;
  %55 = %49.0;
  %56 = %50.2;
  (%51, %52, %53, %54, %55, %56)
}

def @func_8178() -> Tensor[(72), uint64] {
  %57 = @func_7265() /* ty=(Tensor[(72), uint64], Tensor[(11, 3, 6), float32]) */;
  %57.0
}

def @func_13402() -> (Tensor[(7, 12, 4), float64],) {
  %58 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %59 = %58.1;
  (%59,)
}

def @func_8506() -> (Tensor[(7, 12, 4), float32],) {
  %60 = @func_5887() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %61 = %60.1;
  (%61,)
}

def @func_6885() -> (Tensor[(7, 12, 4), float64],) {
  %62 = @func_2132() /* ty=Tensor[(7, 12, 4), float64] */;
  (%62,)
}

def @func_6148() -> (Tensor[(7, 12, 4), float64],) {
  %63 = @func_3317() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %64 = %63.0;
  (%64,)
}

def @func_1596() -> Tensor[(7, 12, 4), float32] {
  %65 = @func_1399() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(18, 4), uint64], Tensor[(72), uint64]) */;
  %65.0
}

def @func_1399() -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(18, 4), uint64], Tensor[(72), uint64]) {
  %66 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %67 = cast(meta[relay.Constant][2] /* ty=Tensor[(18, 4), uint64] */, dtype="uint64") /* ty=Tensor[(18, 4), uint64] */;
  %68 = reshape(%67, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %69 = @func_324(%68) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %70 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
  %71 = %66.0;
  %72 = %69.4;
  %73 = %70.1;
  (%71, %72, meta[relay.Constant][2] /* ty=Tensor[(18, 4), uint64] */, %73)
}

def @func_1755() -> Tensor[(72), uint64] {
  %74 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
  %74.1
}

def @func_1827() -> (Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) {
  %75 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
  %76 = @func_745() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %77 = %75.2;
  %78 = %76.0;
  %79 = @func_1596() /* ty=Tensor[(7, 12, 4), float32] */;
  %80 = @func_1730() /* ty=Tensor[(7, 12, 4), float64] */;
  (%77, %78, %79, %80)
}

def @func_2283() -> Tensor[(7, 12, 4), float32] {
  %81 = @func_1724() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %82 = %81.1;
  %83 = cast(%82, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
  asinh(%83) /* ty=Tensor[(7, 12, 4), float32] */
}

def @func_5014(%var_5004: Tensor[(198), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(6, 11, 3), float32], Tensor[(198), float32], Tensor[(7, 12, 4), float64]) {
  %84 = @func_4185() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %85 = @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %86 = cast(%var_5004, dtype="float32") /* ty=Tensor[(198), float32] */;
  %87 = cast(%var_5004, dtype="float32") /* ty=Tensor[(198), float32] */;
  %88 = reshape(%86, newshape=[6, 11, 3]) /* ty=Tensor[(6, 11, 3), float32] */;
  %89 = reshape(%87, newshape=[6, 11, 3]) /* ty=Tensor[(6, 11, 3), float32] */;
  %90 = @func_2380(%88, %89) /* ty=(Tensor[(6, 11, 3), float32],) */;
  %91 = @func_2717() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %92 = %84.2;
  %93 = %85.1;
  %94 = %90.0;
  %95 = %91.0;
  (%92, %93, %94, %var_5004, %95)
}

def @func_3534(%var_3440: Tensor[(11, 7, 12), int32], %var_3441: Tensor[(11, 7, 12), int32]) -> (Tensor[(11, 7, 12), int32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(336), float32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %96 = cast(%var_3441, dtype="int32") /* ty=Tensor[(11, 7, 12), int32] */;
  %97 = shape_of(%var_3440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%var_3440, dtype="int32") /* ty=Tensor[(11, 7, 12), int32] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %100 = @func_2511() /* ty=(Tensor[(72), uint64],) */;
  %101 = cast(meta[relay.Constant][3] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %102 = reshape(%101, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float32] */;
  %103 = @func_3073(%102) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), int16], Tensor[(7, 12, 4), float64]) */;
  %104 = %100.0;
  %105 = cast(%104, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %106 = reshape(%105, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %107 = @func_324(%106) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %108 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %109 = @func_3317() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %110 = %103.0;
  %111 = cast(%110, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
  %112 = reshape(%111, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float32] */;
  %113 = @func_3073(%112) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), int16], Tensor[(7, 12, 4), float64]) */;
  %114 = add(%98, %99) /* ty=Tensor[(11, 7, 12), int32] */;
  %115 = %107.3;
  %116 = %108.0;
  %117 = @func_731() /* ty=Tensor[(7, 12, 4), float64] */;
  %118 = %109.0;
  %119 = %113.0;
  (%114, %104, %110, meta[relay.Constant][3] /* ty=Tensor[(336), float32] */, %115, %116, %117, %118, %119)
}

def @func_2685() -> (Tensor[(7, 12, 4), float32],) {
  %120 = @func_1596() /* ty=Tensor[(7, 12, 4), float32] */;
  (%120,)
}

def @func_7739(%var_7659: Tensor[(99, 2), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(99, 2), int16]) {
  %121 = cast(%var_7659, dtype="float32") /* ty=Tensor[(99, 2), float32] */;
  %122 = reshape(%121, newshape=[198]) /* ty=Tensor[(198), float32] */;
  %123 = @func_5014(%122) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(6, 11, 3), float32], Tensor[(198), float32], Tensor[(7, 12, 4), float64]) */;
  %124 = @func_4973() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %125 = %124.0;
  %126 = cast(%125, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  %127 = @func_5323() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(22), float32], Tensor[(11, 2), float32]) */;
  %128 = cast(meta[relay.Constant][4] /* ty=Tensor[(99, 2), float32] */, dtype="bool") /* ty=Tensor[(99, 2), bool] */;
  %129 = shape_of(%var_7659, dtype="int32") /* ty=Tensor[(2), int32] */;
  %130 = cast(%var_7659, dtype="bool") /* ty=Tensor[(99, 2), bool] */;
  %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %132 = greater_equal(%130, %131) /* ty=Tensor[(99, 2), bool] */;
  %133 = cast(%132, dtype="int16") /* ty=Tensor[(99, 2), int16] */;
  %134 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(99, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %135 = cast(meta[relay.Constant][4] /* ty=Tensor[(99, 2), float32] */, dtype="int16") /* ty=Tensor[(99, 2), int16] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %137 = %123.4;
  %138 = @func_5179() /* ty=Tensor[(72), float32] */;
  %139 = log10(%126) /* ty=Tensor[(7, 12, 4), float64] */;
  %140 = %127.1;
  %141 = logical_xor(%135, %136) /* ty=Tensor[(99, 2), int16] */;
  (%137, %138, %139, %140, %141)
}

def @func_7912() -> (Tensor[(72), uint64],) {
  %142 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
  %143 = %142.1;
  (%143,)
}

def @func_8010() -> Tensor[(7, 12, 4), float64] {
  @func_3122() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_3425(%var_3387: Tensor[(7, 13, 7), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float32], Tensor[(7, 13, 7), uint16]) {
  %144 = @func_2060() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %145 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %146 = cast(%var_3387, dtype="float32") /* ty=Tensor[(7, 13, 7), float32] */;
  %147 = log10(%146) /* ty=Tensor[(7, 13, 7), float32] */;
  %148 = cast(%var_3387, dtype="uint16") /* ty=Tensor[(7, 13, 7), uint16] */;
  %149 = shape_of(%147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%147, dtype="uint16") /* ty=Tensor[(7, 13, 7), uint16] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %152 = %144.0;
  %153 = %145.0;
  %154 = @func_2367() /* ty=Tensor[(7, 12, 4), float32] */;
  %155 = logical_xor(%150, %151) /* ty=Tensor[(7, 13, 7), uint16] */;
  (%152, %153, %154, %155)
}

def @func_11852() -> Tensor[(8, 9, 1), float32] {
  %156 = @func_3146() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64]) */;
  %156.0
}

def @func_9350() -> (Tensor[(72), uint64],) {
  %157 = @func_8554() /* ty=(Tensor[(72), uint64],) */;
  %158 = %157.0;
  (%158,)
}

def @func_6327() -> (Tensor[(7, 12, 4), float64],) {
  %159 = @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %160 = %159.0;
  (%160,)
}

def @func_369() -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) {
  %161 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %162 = %161.0;
  %163 = cast(%162, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
  %164 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %165 = atanh(%163) /* ty=Tensor[(7, 12, 4), float32] */;
  %166 = %164.0;
  (%165, %166)
}

def @func_7054() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), float32], Tensor[(7, 12, 4), float64], Tensor[(2, 16, 16), float64]) {
  %167 = @func_4875() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %168 = @func_4875() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %169 = @func_4973() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %170 = @func_6112() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %171 = @func_1724() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %172 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %173 = @func_813() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %174 = @func_4016() /* ty=(Tensor[(72), uint64], Tensor[(8, 9, ?), float32]) */;
  %175 = @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */;
  %176 = %167.2;
  %177 = %168.0;
  %178 = %169.2;
  %179 = %170.0;
  %180 = %171.0;
  %181 = %172.0;
  %182 = %173.1;
  %183 = %174.1;
  %184 = @func_5510() /* ty=Tensor[(7, 12, 4), float64] */;
  %185 = %175.1;
  (%176, %177, %178, %179, %180, %181, %182, %183, %184, %185)
}

def @func_11869() -> (Tensor[(7, 12, 4), float64],) {
  %186 = @func_9875() /* ty=Tensor[(7, 12, 4), float64] */;
  (%186,)
}

def @func_13343() -> (Tensor[(7, 12, 4), float32],) {
  %187 = @func_8850() /* ty=(Tensor[(72), float32], Tensor[(7, 12, 4), float32]) */;
  %188 = %187.1;
  (%188,)
}

def @func_10286() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %189 = @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */;
  %190 = @func_9306() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(297), float32], Tensor[(72), uint64]) */;
  %191 = @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %192 = %189.2;
  %193 = %190.0;
  %194 = %191.1;
  (%192, %193, %194)
}

def @func_12484() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %195 = @func_6327() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %196 = @func_5887() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %197 = %195.0;
  %198 = %196.0;
  (%197, %198)
}

def @func_2274() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %199 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %200 = @func_1111() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %201 = @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */;
  %202 = %201.2;
  %203 = cast(%202, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  %204 = log(%203) /* ty=Tensor[(7, 12, 4), float64] */;
  %205 = @func_1934() /* ty=Tensor[(7, 12, 4), float64] */;
  %206 = cast(%205, dtype="uint64") /* ty=Tensor[(7, 12, 4), uint64] */;
  %207 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%204, dtype="uint64") /* ty=Tensor[(7, 12, 4), uint64] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %210 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %211 = %199.1;
  %212 = %200.3;
  %213 = left_shift(%208, %209) /* ty=Tensor[(7, 12, 4), uint64] */;
  %214 = %210.1;
  %215 = @func_1755() /* ty=Tensor[(72), uint64] */;
  (%211, %212, %213, %214, %215)
}

def @func_11467() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(9, 1, 14), float32], Tensor[(126), float32]) {
  %216 = @func_11114() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %217 = @func_9350() /* ty=(Tensor[(72), uint64],) */;
  %218 = cast(meta[relay.Constant][5] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %219 = reshape(%218, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %220 = @func_7088(%219) /* ty=(Tensor[(9, 1, 14), float32],) */;
  %221 = %216.0;
  %222 = %217.0;
  %223 = %220.0;
  (%221, %222, %223, meta[relay.Constant][5] /* ty=Tensor[(126), float32] */)
}

def @func_6649() -> Tensor[(7, 12, 4), float64] {
  %224 = @func_4875() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %224.0
}

def @func_2497() -> (Tensor[(72), float32], Tensor[(72), uint64], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
  %225 = @func_1111() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %226 = cast(meta[relay.Constant][6] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
  %227 = reshape(%226, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), float32] */;
  %228 = @func_637(%227) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(2, ?, 11), bool], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64]) */;
  %229 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %230 = %225.1;
  %231 = %228.1;
  %232 = %229.1;
  %233 = @func_2367() /* ty=Tensor[(7, 12, 4), float32] */;
  (%230, %231, meta[relay.Constant][6] /* ty=Tensor[(22), float32] */, %232, %233)
}

def @func_2380(%var_2374: Tensor[(6, 11, 3), float32], %var_2375: Tensor[(6, 11, 3), float32]) -> (Tensor[(6, 11, 3), float32],) {
  %234 = cast(%var_2375, dtype="float32") /* ty=Tensor[(6, 11, 3), float32] */;
  %235 = shape_of(%var_2374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%var_2374, dtype="float32") /* ty=Tensor[(6, 11, 3), float32] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %238 = mod(%236, %237) /* ty=Tensor[(6, 11, 3), float32] */;
  (%238,)
}

def @func_13498(%var_13493: Tensor[(2, 14, 6), float32], %var_13494: Tensor[(2, 14, 6), float32]) -> Tensor[(2, 14, 6), float32] {
  %239 = cast(%var_13494, dtype="float32") /* ty=Tensor[(2, 14, 6), float32] */;
  %240 = shape_of(%var_13493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%var_13493, dtype="float32") /* ty=Tensor[(2, 14, 6), float32] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%241, %242) /* ty=Tensor[(2, 14, 6), float32] */
}

def @func_9079() -> (Tensor[(72), float32], Tensor[(7, 12, 4), float64]) {
  %243 = @func_2972() /* ty=(Tensor[(72), float32],) */;
  %244 = %243.0;
  %245 = @func_1573() /* ty=Tensor[(7, 12, 4), float64] */;
  (%244, %245)
}

def @func_8463(%var_8458: Tensor[(12, 12, 11), float64]) -> (Tensor[(12, 12, 11), float64],) {
  %246 = cast(%var_8458, dtype="float64") /* ty=Tensor[(12, 12, 11), float64] */;
  %247 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(12, 12, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 12, 11), float64] */, dtype="float64") /* ty=Tensor[(12, 12, 11), float64] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %250 = floor_divide(%248, %249) /* ty=Tensor[(12, 12, 11), float64] */;
  (%250,)
}

def @func_6268() -> (Tensor[(7, 12, 4), float64],) {
  %251 = @func_6148() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %252 = %251.0;
  (%252,)
}

def @func_813() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %253 = @func_745() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %254 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %255 = %253.0;
  %256 = %254.2;
  (%255, %256)
}

def @func_637(%var_602: Tensor[(2, 1, 11), float32]) -> (Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(2, ?, 11), bool], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64]) {
  %257 = cast(meta[relay.Constant][8] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %258 = reshape(%257, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
  %259 = @func_142(%258) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */;
  %260 = cast(%var_602, dtype="float32") /* ty=Tensor[(2, 1, 11), float32] */;
  %261 = log10(%260) /* ty=Tensor[(2, 1, 11), float32] */;
  %262 = cast(%var_602, dtype="bool") /* ty=Tensor[(2, 1, 11), bool] */;
  %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%261, dtype="bool") /* ty=Tensor[(2, 1, 11), bool] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %266 = not_equal(%264, %265) /* ty=Tensor[(2, ?, 11), bool] */;
  %267 = cast(%261, dtype="bool") /* ty=Tensor[(2, 1, 11), bool] */;
  %268 = shape_of(%266, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(%266, dtype="bool") /* ty=Tensor[(2, ?, 11), bool] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %271 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %272 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %273 = %259.0;
  %274 = less_equal(%269, %270) /* ty=Tensor[(2, ?, 11), bool] */;
  %275 = %271.0;
  %276 = %272.3;
  (%273, meta[relay.Constant][8] /* ty=Tensor[(72), uint64] */, %274, %275, %276)
}

def @func_142(%var_133: Tensor[(8, 9, 1), uint64]) -> (Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) {
  %277 = cast(%var_133, dtype="uint64") /* ty=Tensor[(8, 9, 1), uint64] */;
  %278 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(8, 9, 1), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %279 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 9, 1), uint64] */, dtype="uint64") /* ty=Tensor[(8, 9, 1), uint64] */;
  %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %281 = cast(%var_133, dtype="float32") /* ty=Tensor[(8, 9, 1), float32] */;
  %282 = subtract(%279, %280) /* ty=Tensor[(8, 9, ?), uint64] */;
  %283 = erf(%281) /* ty=Tensor[(8, 9, 1), float32] */;
  (%282, %283)
}

def @func_1724() -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %284 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %285 = @func_745() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %286 = %284.0;
  %287 = @func_1421() /* ty=Tensor[(7, 12, 4), float64] */;
  %288 = %285.0;
  (%286, %287, %288)
}

def @func_7088(%var_7085: Tensor[(9, 1, 14), float32]) -> (Tensor[(9, 1, 14), float32],) {
  %289 = cast(%var_7085, dtype="float32") /* ty=Tensor[(9, 1, 14), float32] */;
  %290 = log(%289) /* ty=Tensor[(9, 1, 14), float32] */;
  (%290,)
}

def @func_13385() -> (Tensor[(7, 12, 4), float64],) {
  %291 = @func_4147() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %292 = %291.0;
  (%292,)
}

def @func_9282() -> (Tensor[(72), uint64],) {
  %293 = @func_6545() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float32]) */;
  %294 = %293.0;
  (%294,)
}

def @func_8343() -> Tensor[(72), uint64] {
  @func_4028() /* ty=Tensor[(72), uint64] */
}

def @func_10017() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %295 = @func_7545() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %296 = @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %297 = @func_7265() /* ty=(Tensor[(72), uint64], Tensor[(11, 3, 6), float32]) */;
  %298 = %295.0;
  %299 = %296.1;
  %300 = %297.0;
  (%298, %299, %300)
}

def @func_5826() -> (Tensor[(7, 12, 4), float64],) {
  %301 = @func_4707() /* ty=Tensor[(7, 12, 4), float64] */;
  (%301,)
}

def @func_11534() -> (Tensor[(72), uint64],) {
  %302 = @func_4016() /* ty=(Tensor[(72), uint64], Tensor[(8, 9, ?), float32]) */;
  %303 = %302.0;
  (%303,)
}

def @func_6478() -> (Tensor[(7, 12, 4), float32],) {
  %304 = @func_2283() /* ty=Tensor[(7, 12, 4), float32] */;
  (%304,)
}

def @func_11217() -> Tensor[(8, 9, ?), uint64] {
  %305 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %305.3
}

def @func_11905() -> Tensor[(7, 12, 4), float32] {
  @func_2367() /* ty=Tensor[(7, 12, 4), float32] */
}

def @func_2332() -> Tensor[(7, 12, 4), float64] {
  @func_1421() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_12454(%var_12435: Tensor[(2, 8, 2), uint64]) -> Tensor[(2, 8, 2), float32] {
  %306 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 8, 2), uint64] */, dtype="uint64") /* ty=Tensor[(2, 8, 2), uint64] */;
  %307 = shape_of(%var_12435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%var_12435, dtype="uint64") /* ty=Tensor[(2, 8, 2), uint64] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %310 = bitwise_and(%308, %309) /* ty=Tensor[(2, 8, 2), uint64] */;
  %311 = cast(%var_12435, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %312 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%310, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%313, %314) /* ty=Tensor[(2, 8, 2), float32] */
}

def @func_12636() -> Tensor[(8, 9, 1), float32] {
  %315 = @func_1827() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %315.0
}

def @func_14264() -> Tensor[(8, 9, 1), float32] {
  %316 = @func_3146() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64]) */;
  %316.0
}

def @func_8799() -> (Tensor[(7, 12, 4), float32],) {
  %317 = @func_2283() /* ty=Tensor[(7, 12, 4), float32] */;
  (%317,)
}

def @func_7999() -> Tensor[(7, 12, 4), float64] {
  %318 = @func_6167() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %318.0
}

def @func_5760() -> Tensor[(7, 12, 4), float64] {
  %319 = @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %319.0
}

def @func_10337(%var_10305: Tensor[(70, 6), float32]) -> (Tensor[(2, 15, 14), bool], Tensor[(70, 6), float32], Tensor[(7, 12, 4), float64], Tensor[(5, 5, ?), float32], Tensor[(5, 5, ?), float32]) {
  %320 = cast(%var_10305, dtype="float32") /* ty=Tensor[(70, 6), float32] */;
  %321 = reshape(%320, newshape=[2, 15, 14]) /* ty=Tensor[(2, 15, 14), float32] */;
  %322 = @func_9451(%321) /* ty=(Tensor[(2, 15, 14), float64], Tensor[(2, 15, 14), bool]) */;
  %323 = @func_6515() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %324 = cast(meta[relay.Constant][11] /* ty=Tensor[(5, 5, 1), float32] */, dtype="float32") /* ty=Tensor[(5, 5, 1), float32] */;
  %325 = atanh(%324) /* ty=Tensor[(5, 5, 1), float32] */;
  %326 = cast(%325, dtype="float64") /* ty=Tensor[(5, 5, 1), float64] */;
  %327 = cos(%326) /* ty=Tensor[(5, 5, 1), float64] */;
  %328 = cast(%325, dtype="int8") /* ty=Tensor[(5, 5, 1), int8] */;
  %329 = shape_of(%327, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%327, dtype="int8") /* ty=Tensor[(5, 5, 1), int8] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %332 = left_shift(%330, %331) /* ty=Tensor[(5, 5, ?), int8] */;
  %333 = cast(%332, dtype="float32") /* ty=Tensor[(5, 5, ?), float32] */;
  %334 = cast(%332, dtype="float32") /* ty=Tensor[(5, 5, ?), float32] */;
  %335 = %322.1;
  %336 = %323.0;
  %337 = rsqrt(%333) /* ty=Tensor[(5, 5, ?), float32] */;
  %338 = acos(%334) /* ty=Tensor[(5, 5, ?), float32] */;
  (%335, %var_10305, %336, %337, %338)
}

def @func_3728(%var_3632: Tensor[(72), uint64], %var_3679: Tensor[(2, 16, 16), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(6, 11, 3), float32], Tensor[(198), float32], Tensor[(2, 16, 16), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %339 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %340 = cast(%var_3632, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %341 = reshape(%340, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %342 = @func_324(%341) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %343 = %342.3;
  %344 = cast(%343, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %345 = reshape(%344, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %346 = @func_324(%345) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %347 = @func_2879() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %348 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %349 = cast(meta[relay.Constant][12] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
  %350 = cast(meta[relay.Constant][12] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
  %351 = reshape(%349, newshape=[6, 11, 3]) /* ty=Tensor[(6, 11, 3), float32] */;
  %352 = reshape(%350, newshape=[6, 11, 3]) /* ty=Tensor[(6, 11, 3), float32] */;
  %353 = @func_2380(%351, %352) /* ty=(Tensor[(6, 11, 3), float32],) */;
  %354 = @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */;
  %355 = %354.0;
  %356 = cast(%var_3679, dtype="float64") /* ty=Tensor[(2, 16, 16), float64] */;
  %357 = shape_of(%355, dtype="int32") /* ty=Tensor[(3), int32] */;
  %358 = cast(%355, dtype="float64") /* ty=Tensor[(2, 16, 16), float64] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %360 = divide(%358, %359) /* ty=Tensor[(2, 16, 16), float64] */;
  %361 = cast(%360, dtype="float32") /* ty=Tensor[(2, 16, 16), float32] */;
  %362 = @func_2497() /* ty=(Tensor[(72), float32], Tensor[(72), uint64], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %363 = %339.1;
  %364 = %346.3;
  %365 = %347.0;
  %366 = %348.0;
  %367 = %353.0;
  %368 = sin(%361) /* ty=Tensor[(2, 16, 16), float32] */;
  %369 = %362.3;
  %370 = @func_1573() /* ty=Tensor[(7, 12, 4), float64] */;
  (%363, %343, %var_3632, %364, %365, %366, %367, meta[relay.Constant][12] /* ty=Tensor[(198), float32] */, %368, %369, %370)
}

def @func_6869() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %371 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %372 = @func_6815() /* ty=Tensor[(7, 12, 4), float64] */;
  %373 = %371.0;
  (%372, %373)
}

def @func_12796() -> Tensor[(7, 12, 4), float32] {
  %374 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %374.0
}

def @func_3565() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %375 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %376 = @func_2474() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %377 = %375.1;
  %378 = %376.0;
  (%377, %378)
}

def @func_6765() -> (Tensor[(7, 12, 4), float64],) {
  %379 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %380 = %379.1;
  (%380,)
}

def @func_10374() -> Tensor[(7, 12, 4), float64] {
  %381 = @func_3317() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %381.0
}

def @func_1934() -> Tensor[(7, 12, 4), float64] {
  @func_1421() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_4678() -> (Tensor[(7, 12, 4), float64],) {
  %382 = @func_2060() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %383 = %382.0;
  (%383,)
}

def @func_6447(%var_6368: Tensor[(637), float32], %var_6411: Tensor[(637), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(637), int16], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %384 = cast(%var_6368, dtype="float32") /* ty=Tensor[(637), float32] */;
  %385 = reshape(%384, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), float32] */;
  %386 = @func_3425(%385) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float32], Tensor[(7, 13, 7), uint16]) */;
  %387 = @func_2511() /* ty=(Tensor[(72), uint64],) */;
  %388 = cast(%var_6411, dtype="int8") /* ty=Tensor[(637), int8] */;
  %389 = shape_of(%var_6368, dtype="int32") /* ty=Tensor[(1), int32] */;
  %390 = cast(%var_6368, dtype="int8") /* ty=Tensor[(637), int8] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?), int8] */;
  %392 = maximum(%390, %391) /* ty=Tensor[(637), int8] */;
  %393 = cast(%392, dtype="int16") /* ty=Tensor[(637), int16] */;
  %394 = shape_of(%var_6411, dtype="int32") /* ty=Tensor[(1), int32] */;
  %395 = cast(%var_6411, dtype="int16") /* ty=Tensor[(637), int16] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?), int16] */;
  %397 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %398 = @func_813() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %399 = @func_3122() /* ty=Tensor[(7, 12, 4), float64] */;
  %400 = %386.1;
  %401 = %387.0;
  %402 = @func_1755() /* ty=Tensor[(72), uint64] */;
  %403 = bitwise_xor(%395, %396) /* ty=Tensor[(637), int16] */;
  %404 = %397.0;
  %405 = %398.1;
  (%399, %400, %401, %402, %403, %404, %405)
}

def @func_1421() -> Tensor[(7, 12, 4), float64] {
  %406 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %407 = %406.0;
  %408 = cast(%407, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  cosh(%408) /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_4591(%var_4587: Tensor[(8, 8), float32], %var_4588: Tensor[(22), float32]) -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(4, 4, 4), int32], Tensor[(8, 8), float32], Tensor[(22), float32]) {
  %409 = cast(%var_4587, dtype="float32") /* ty=Tensor[(8, 8), float32] */;
  %410 = cast(%var_4588, dtype="float32") /* ty=Tensor[(22), float32] */;
  %411 = reshape(%409, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %412 = reshape(%410, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %413 = @func_1480(%411, %412) /* ty=(Tensor[(4, 4, 4), int32], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32]) */;
  %414 = @func_2367() /* ty=Tensor[(7, 12, 4), float32] */;
  %415 = @func_2332() /* ty=Tensor[(7, 12, 4), float64] */;
  %416 = %413.0;
  (%414, %415, %416, %var_4587, %var_4588)
}

def @func_2132() -> Tensor[(7, 12, 4), float64] {
  %417 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %417.1
}

def @func_4973() -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) {
  %418 = @func_4016() /* ty=(Tensor[(72), uint64], Tensor[(8, 9, ?), float32]) */;
  %419 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %420 = @func_4475() /* ty=Tensor[(7, 12, 4), float32] */;
  %421 = @func_3122() /* ty=Tensor[(7, 12, 4), float64] */;
  %422 = %418.0;
  %423 = @func_2367() /* ty=Tensor[(7, 12, 4), float32] */;
  %424 = %419.0;
  (%420, %421, %422, %423, %424)
}

def @func_6602() -> Tensor[(72), float32] {
  %425 = @func_3874() /* ty=(Tensor[(72), float32],) */;
  %425.0
}

def @func_10075() -> (Tensor[(?, 6, 13), bool], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float32]) {
  %426 = @func_9390() /* ty=(Tensor[(?, 6, 13), bool],) */;
  %427 = @func_1827() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %428 = @func_6231() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %429 = %426.0;
  %430 = %427.3;
  %431 = %428.1;
  %432 = @func_2283() /* ty=Tensor[(7, 12, 4), float32] */;
  (%429, %430, %431, %432)
}

def @func_1730() -> Tensor[(7, 12, 4), float64] {
  %433 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %433.0
}

def @func_6772() -> (Tensor[(7, 12, 4), float64],) {
  %434 = @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %435 = %434.1;
  (%435,)
}

def @func_2879() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %436 = @func_1573() /* ty=Tensor[(7, 12, 4), float64] */;
  %437 = @func_1573() /* ty=Tensor[(7, 12, 4), float64] */;
  (%436, %437)
}

def @func_13853() -> Tensor[(7, 12, 4), float64] {
  @func_8575() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_13969() -> (Tensor[(72), uint64], Tensor[(15, 10, 10), float32], Tensor[(1500), float32]) {
  %438 = @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %439 = cast(meta[relay.Constant][13] /* ty=Tensor[(1500), float64] */, dtype="float64") /* ty=Tensor[(1500), float64] */;
  %440 = reshape(%439, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), float64] */;
  %441 = cast(meta[relay.Constant][13] /* ty=Tensor[(1500), float64] */, dtype="float32") /* ty=Tensor[(1500), float32] */;
  %442 = %438.0;
  %443 = @func_1971(%440) /* ty=Tensor[(15, 10, 10), float32] */;
  %444 = atanh(%441) /* ty=Tensor[(1500), float32] */;
  (%442, %443, %444)
}

def @func_2851(%var_2833: Tensor[(22), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(4, 4, 4), int32], Tensor[(64), float32], Tensor[(22), float32], Tensor[(7, 12, 4), float64]) {
  %445 = @func_813() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %446 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %447 = cast(meta[relay.Constant][14] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
  %448 = cast(%var_2833, dtype="float32") /* ty=Tensor[(22), float32] */;
  %449 = reshape(%447, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %450 = reshape(%448, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %451 = @func_1480(%449, %450) /* ty=(Tensor[(4, 4, 4), int32], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32]) */;
  %452 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %453 = %445.0;
  %454 = %446.2;
  %455 = %451.0;
  %456 = %452.1;
  (%453, %454, %455, meta[relay.Constant][14] /* ty=Tensor[(64), float32] */, %var_2833, %456)
}

def @func_9390() -> (Tensor[(?, 6, 13), bool],) {
  %457 = @func_8673() /* ty=Tensor[(1, 6, 13), float32] */;
  %458 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 6, 13), float32] */, dtype="uint32") /* ty=Tensor[(1, 6, 13), uint32] */;
  %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%457, dtype="uint32") /* ty=Tensor[(1, 6, 13), uint32] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %462 = left_shift(%460, %461) /* ty=Tensor[(?, 6, 13), uint32] */;
  %463 = cast(%462, dtype="bool") /* ty=Tensor[(?, 6, 13), bool] */;
  %464 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(1, 6, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 6, 13), float32] */, dtype="bool") /* ty=Tensor[(1, 6, 13), bool] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %467 = greater_equal(%465, %466) /* ty=Tensor[(?, 6, 13), bool] */;
  (%467,)
}

def @func_5179() -> Tensor[(72), float32] {
  %468 = @func_3874() /* ty=(Tensor[(72), float32],) */;
  %468.0
}

def @func_8083() -> Tensor[(7, 12, 4), float64] {
  @func_1730() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_4730() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %469 = @func_2511() /* ty=(Tensor[(72), uint64],) */;
  %470 = @func_2879() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %471 = %469.0;
  %472 = @func_4707() /* ty=Tensor[(7, 12, 4), float64] */;
  %473 = %470.0;
  (%471, %472, %473)
}

def @func_10937() -> (Tensor[(13, 15, 6), float64],) {
  %474 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 15, 6), float64] */, dtype="float64") /* ty=Tensor[(13, 15, 6), float64] */;
  %475 = log10(%474) /* ty=Tensor[(13, 15, 6), float64] */;
  (%475,)
}

def @func_10826() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
  %476 = @func_4756() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(72), uint64]) */;
  %477 = @func_6112() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %478 = %476.1;
  %479 = %477.0;
  (%478, %479)
}

def @func_4561(%var_4552: Tensor[(72), uint64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64]) {
  %480 = @func_2474() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %481 = %480.0;
  %482 = cast(%481, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  %483 = cast(%481, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  %484 = reshape(%483, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
  %485 = @func_968(%484) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %486 = @func_1999() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %487 = cast(%var_4552, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %488 = reshape(%487, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %489 = @func_324(%488) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %490 = acosh(%482) /* ty=Tensor[(7, 12, 4), float64] */;
  %491 = %485.1;
  %492 = %486.0;
  %493 = %489.3;
  (%490, %491, %492, %493, %var_4552)
}

def @func_9038() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
  %494 = @func_6327() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %495 = @func_8554() /* ty=(Tensor[(72), uint64],) */;
  %496 = %494.0;
  %497 = @func_2553() /* ty=Tensor[(7, 12, 4), float64] */;
  %498 = %495.0;
  %499 = @func_1730() /* ty=Tensor[(7, 12, 4), float64] */;
  (%496, %497, %498, %499)
}

def @func_4843() -> Tensor[(7, 12, 4), float64] {
  %500 = @func_1999() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %500.1
}

def @func_11280() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %501 = @func_9806() /* ty=Tensor[(7, 12, 4), float64] */;
  %502 = @func_10374() /* ty=Tensor[(7, 12, 4), float64] */;
  (%501, %502)
}

def @func_12894() -> Tensor[(7, 12, 4), float64] {
  %503 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %503.0
}

def @func_14285() -> Tensor[(72), float32] {
  @func_5179() /* ty=Tensor[(72), float32] */
}

def @func_4875() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %504 = @func_3293() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %505 = @func_2879() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %506 = @func_4707() /* ty=Tensor[(7, 12, 4), float64] */;
  %507 = %504.0;
  %508 = %505.0;
  (%506, %507, %508)
}

def @func_9339(%var_9334: Tensor[(13, 14, 10), float32], %var_9335: Tensor[(13, 14, 10), float32]) -> Tensor[(13, 14, 10), float32] {
  %509 = cast(%var_9335, dtype="float32") /* ty=Tensor[(13, 14, 10), float32] */;
  %510 = shape_of(%var_9334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %511 = cast(%var_9334, dtype="float32") /* ty=Tensor[(13, 14, 10), float32] */;
  %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%511, %512) /* ty=Tensor[(13, 14, 10), float32] */
}

def @func_9190(%var_9165: Tensor[(14, 12, 7), bool]) -> (Tensor[(14, 12, 7), bool], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(1, 72), uint64]) {
  %513 = cast(meta[relay.Constant][17] /* ty=Tensor[(14, 12, 7), bool] */, dtype="bool") /* ty=Tensor[(14, 12, 7), bool] */;
  %514 = shape_of(%var_9165, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%var_9165, dtype="bool") /* ty=Tensor[(14, 12, 7), bool] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %517 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 72), uint64] */, dtype="uint64") /* ty=Tensor[(1, 72), uint64] */;
  %518 = reshape(%517, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %519 = @func_324(%518) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %520 = logical_or(%515, %516) /* ty=Tensor[(14, 12, 7), bool] */;
  %521 = @func_2332() /* ty=Tensor[(7, 12, 4), float64] */;
  %522 = %519.0;
  (%520, %521, %522, meta[relay.Constant][18] /* ty=Tensor[(1, 72), uint64] */)
}

def @func_731() -> Tensor[(7, 12, 4), float64] {
  %523 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %523.1
}

def @func_3253(%var_3248: Tensor[(5, 7, 14), float32]) -> (Tensor[(5, 7, 14), float32],) {
  %524 = cast(%var_3248, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %525 = log2(%524) /* ty=Tensor[(5, 7, 14), float32] */;
  (%525,)
}

def @func_8637(%var_8590: Tensor[(9, 13, 4), uint32]) -> (Tensor[(7, 12, 4), float64], Tensor[(9, 13, 4), float32]) {
  %526 = @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %527 = cast(%var_8590, dtype="float32") /* ty=Tensor[(9, 13, 4), float32] */;
  %528 = cos(%527) /* ty=Tensor[(9, 13, 4), float32] */;
  %529 = cast(meta[relay.Constant][19] /* ty=Tensor[(9, 13, 4), uint32] */, dtype="bool") /* ty=Tensor[(9, 13, 4), bool] */;
  %530 = shape_of(%var_8590, dtype="int32") /* ty=Tensor[(3), int32] */;
  %531 = cast(%var_8590, dtype="bool") /* ty=Tensor[(9, 13, 4), bool] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %533 = greater_equal(%531, %532) /* ty=Tensor[(9, 13, 4), bool] */;
  %534 = cast(%533, dtype="float32") /* ty=Tensor[(9, 13, 4), float32] */;
  %535 = shape_of(%528, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(%528, dtype="float32") /* ty=Tensor[(9, 13, 4), float32] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %538 = %526.0;
  %539 = divide(%536, %537) /* ty=Tensor[(9, 13, 4), float32] */;
  (%538, %539)
}

def @func_8061(%var_8019: Tensor[(2, 2, 12), uint64], %var_8020: Tensor[(2, 2, 12), uint64]) -> (Tensor[(2, 2, 12), bool], Tensor[(7, 12, 4), float64]) {
  %540 = cast(%var_8020, dtype="uint64") /* ty=Tensor[(2, 2, 12), uint64] */;
  %541 = shape_of(%var_8019, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%var_8019, dtype="uint64") /* ty=Tensor[(2, 2, 12), uint64] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %544 = maximum(%542, %543) /* ty=Tensor[(2, 2, 12), uint64] */;
  %545 = cast(%544, dtype="bool") /* ty=Tensor[(2, 2, 12), bool] */;
  %546 = shape_of(%var_8019, dtype="int32") /* ty=Tensor[(3), int32] */;
  %547 = cast(%var_8019, dtype="bool") /* ty=Tensor[(2, 2, 12), bool] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %549 = @func_4678() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %550 = greater_equal(%547, %548) /* ty=Tensor[(2, 2, 12), bool] */;
  %551 = %549.0;
  (%550, %551)
}

def @func_11657() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %552 = @func_10826() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %553 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %554 = %552.0;
  %555 = %553.1;
  %556 = @func_8343() /* ty=Tensor[(72), uint64] */;
  (%554, %555, %556)
}

def @func_11114() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %557 = @func_6112() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %558 = @func_9350() /* ty=(Tensor[(72), uint64],) */;
  %559 = %557.0;
  %560 = %558.0;
  (%559, %560)
}

def @func_1480(%var_1443: Tensor[(4, 4, 4), float32], %var_1477: Tensor[(22), float32]) -> (Tensor[(4, 4, 4), int32], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32]) {
  %561 = cast(%var_1443, dtype="float64") /* ty=Tensor[(4, 4, 4), float64] */;
  %562 = rsqrt(%561) /* ty=Tensor[(4, 4, 4), float64] */;
  %563 = cast(%var_1443, dtype="float32") /* ty=Tensor[(4, 4, 4), float32] */;
  %564 = acos(%563) /* ty=Tensor[(4, 4, 4), float32] */;
  %565 = cast(%564, dtype="uint16") /* ty=Tensor[(4, 4, 4), uint16] */;
  %566 = shape_of(%562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%562, dtype="uint16") /* ty=Tensor[(4, 4, 4), uint16] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %569 = bitwise_or(%567, %568) /* ty=Tensor[(4, 4, 4), uint16] */;
  %570 = cast(%569, dtype="int32") /* ty=Tensor[(4, 4, 4), int32] */;
  %571 = shape_of(%var_1443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%var_1443, dtype="int32") /* ty=Tensor[(4, 4, 4), int32] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %574 = @func_813() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %575 = cast(%var_1477, dtype="float32") /* ty=Tensor[(22), float32] */;
  %576 = reshape(%575, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), float32] */;
  %577 = @func_637(%576) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(2, ?, 11), bool], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64]) */;
  %578 = bitwise_xor(%572, %573) /* ty=Tensor[(4, 4, 4), int32] */;
  %579 = %574.1;
  %580 = %577.0;
  (%578, %579, %580, %var_1477)
}

def @func_2060() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %581 = @func_1724() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %582 = @func_1421() /* ty=Tensor[(7, 12, 4), float64] */;
  %583 = %581.1;
  (%582, %583)
}

def @func_10598() -> (Tensor[(7, 12, 4), float32],) {
  %584 = @func_2685() /* ty=(Tensor[(7, 12, 4), float32],) */;
  %585 = %584.0;
  (%585,)
}

def @func_1573() -> Tensor[(7, 12, 4), float64] {
  %586 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %586.1
}

def @func_2186() -> (Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) {
  %587 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 16, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 16, 16), float32] */;
  %588 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 16, 16), float32] */, dtype="float64") /* ty=Tensor[(2, 16, 16), float64] */;
  %589 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %590 = cos(%587) /* ty=Tensor[(2, 16, 16), float32] */;
  %591 = log(%588) /* ty=Tensor[(2, 16, 16), float64] */;
  %592 = %589.2;
  (%590, %591, %592)
}

def @func_3317() -> (Tensor[(7, 12, 4), float64],) {
  %593 = @func_3122() /* ty=Tensor[(7, 12, 4), float64] */;
  (%593,)
}

def @func_2474() -> (Tensor[(7, 12, 4), float64],) {
  %594 = @func_1399() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(18, 4), uint64], Tensor[(72), uint64]) */;
  %595 = %594.1;
  (%595,)
}

def @func_4418(%var_4359: Tensor[(64), float32], %var_4360: Tensor[(22), float32]) -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32], Tensor[(64), float32], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %596 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %597 = @func_2060() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %598 = @func_3975() /* ty=Tensor[(72), uint64] */;
  %599 = cast(%598, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %600 = reshape(%599, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
  %601 = @func_142(%600) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */;
  %602 = cast(%var_4359, dtype="float32") /* ty=Tensor[(64), float32] */;
  %603 = cast(%var_4360, dtype="float32") /* ty=Tensor[(22), float32] */;
  %604 = reshape(%602, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %605 = reshape(%603, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %606 = @func_1480(%604, %605) /* ty=(Tensor[(4, 4, 4), int32], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32]) */;
  %607 = @func_2717() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %608 = @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %609 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %610 = @func_2367() /* ty=Tensor[(7, 12, 4), float32] */;
  %611 = %596.0;
  %612 = %597.1;
  %613 = %601.0;
  %614 = %606.3;
  %615 = @func_2332() /* ty=Tensor[(7, 12, 4), float64] */;
  %616 = @func_1934() /* ty=Tensor[(7, 12, 4), float64] */;
  %617 = %607.0;
  %618 = %608.0;
  %619 = %609.1;
  (%610, %611, %598, %612, %613, %614, %var_4359, %var_4360, %615, %616, %617, %618, %619)
}

def @func_13993() -> (Tensor[(7, 12, 4), float32],) {
  %620 = @func_6545() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float32]) */;
  %621 = %620.1;
  (%621,)
}

def @func_7265() -> (Tensor[(72), uint64], Tensor[(11, 3, 6), float32]) {
  %622 = @func_4756() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(72), uint64]) */;
  %623 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(11, 3, 6), float32] */;
  %624 = sinh(%623) /* ty=Tensor[(11, 3, 6), float32] */;
  %625 = cast(%624, dtype="float32") /* ty=Tensor[(11, 3, 6), float32] */;
  %626 = %622.1;
  %627 = acosh(%625) /* ty=Tensor[(11, 3, 6), float32] */;
  (%626, %627)
}

def @func_1971(%var_1962: Tensor[(15, 10, 10), float64]) -> Tensor[(15, 10, 10), float32] {
  %628 = cast(%var_1962, dtype="float64") /* ty=Tensor[(15, 10, 10), float64] */;
  %629 = sqrt(%628) /* ty=Tensor[(15, 10, 10), float64] */;
  %630 = cast(%629, dtype="float32") /* ty=Tensor[(15, 10, 10), float32] */;
  acos(%630) /* ty=Tensor[(15, 10, 10), float32] */
}

def @func_527() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) {
  %631 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %632 = cast(meta[relay.Constant][22] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %633 = reshape(%632, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %634 = @func_324(%633) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %635 = cast(meta[relay.Constant][22] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %636 = reshape(%635, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
  %637 = @func_142(%636) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */;
  %638 = %631.0;
  %639 = %634.0;
  %640 = %637.0;
  (%638, %639, meta[relay.Constant][22] /* ty=Tensor[(72), uint64] */, %640)
}

def @func_8950(%var_8945: Tensor[(336), float64]) -> (Tensor[(11, 2), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(336), bool]) {
  %641 = @func_5323() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(22), float32], Tensor[(11, 2), float32]) */;
  %642 = cast(meta[relay.Constant][23] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %643 = reshape(%642, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
  %644 = @func_968(%643) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %645 = @func_4185() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %646 = @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %647 = cast(%var_8945, dtype="bool") /* ty=Tensor[(336), bool] */;
  %648 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(336), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %649 = cast(meta[relay.Constant][23] /* ty=Tensor[(336), float64] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?), bool] */;
  %651 = %641.3;
  %652 = %644.4;
  %653 = %645.1;
  %654 = %646.0;
  %655 = greater_equal(%649, %650) /* ty=Tensor[(336), bool] */;
  (%651, %652, %653, %654, %655)
}

def @func_3122() -> Tensor[(7, 12, 4), float64] {
  %656 = @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */;
  %656.2
}

def @func_11078(%var_10998: Tensor[(8, 9, 14), bool]) -> (Tensor[(7, 12, 4), float64], Tensor[(8, 9, 14), int16], Tensor[(11, 9, 3), float32], Tensor[(297), float32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(15, 10, 10), float32], Tensor[(1500), float64], Tensor[(8, 9, ?), float64]) {
  %657 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %658 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %659 = %658.3;
  %660 = cast(%659, dtype="bool") /* ty=Tensor[(8, 9, ?), bool] */;
  %661 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 9, 14), uint64] */, dtype="bool") /* ty=Tensor[(8, 9, 14), bool] */;
  %662 = logical_and(%660, %661) /* ty=Tensor[(8, 9, 14), bool] */;
  %663 = cast(%var_10998, dtype="int16") /* ty=Tensor[(8, 9, 14), int16] */;
  %664 = shape_of(%662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %665 = cast(%662, dtype="int16") /* ty=Tensor[(8, 9, 14), int16] */;
  %666 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %667 = cast(meta[relay.Constant][25] /* ty=Tensor[(297), float32] */, dtype="float32") /* ty=Tensor[(297), float32] */;
  %668 = cast(meta[relay.Constant][25] /* ty=Tensor[(297), float32] */, dtype="float32") /* ty=Tensor[(297), float32] */;
  %669 = cast(%659, dtype="uint64") /* ty=Tensor[(8, 9, ?), uint64] */;
  %670 = reshape(%667, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float32] */;
  %671 = reshape(%668, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float32] */;
  %672 = reshape(%669, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %673 = @func_1278(%670, %671, %672) /* ty=(Tensor[(11, 9, 3), float32], Tensor[(7, 12, 4), float64], Tensor[(11, 9, 3), uint8], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), uint16], Tensor[(72), uint64], Tensor[(11, 9, 3), float32]) */;
  %674 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
  %675 = cast(meta[relay.Constant][26] /* ty=Tensor[(1500), float64] */, dtype="float64") /* ty=Tensor[(1500), float64] */;
  %676 = reshape(%675, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), float64] */;
  %677 = cast(%659, dtype="float64") /* ty=Tensor[(8, 9, ?), float64] */;
  %678 = %657.0;
  %679 = add(%665, %666) /* ty=Tensor[(8, 9, 14), int16] */;
  %680 = %673.7;
  %681 = %674.1;
  %682 = @func_8010() /* ty=Tensor[(7, 12, 4), float64] */;
  %683 = @func_1971(%676) /* ty=Tensor[(15, 10, 10), float32] */;
  %684 = tan(%677) /* ty=Tensor[(8, 9, ?), float64] */;
  (%678, %679, %680, meta[relay.Constant][25] /* ty=Tensor[(297), float32] */, %681, %682, %683, meta[relay.Constant][26] /* ty=Tensor[(1500), float64] */, %684)
}

def @func_3146() -> (Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64]) {
  %685 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
  %686 = %685.2;
  %687 = cast(%686, dtype="float32") /* ty=Tensor[(8, 9, 1), float32] */;
  %688 = @func_2879() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %689 = atanh(%687) /* ty=Tensor[(8, 9, 1), float32] */;
  %690 = %688.0;
  (%689, %690)
}

def @func_6167() -> (Tensor[(7, 12, 4), float64],) {
  %691 = @func_1827() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %692 = %691.1;
  (%692,)
}

def @func_13714() -> (Tensor[(7, 12, 4), float64], Tensor[(?, 6, 13), int16]) {
  %693 = @func_13570() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %694 = @func_9390() /* ty=(Tensor[(?, 6, 13), bool],) */;
  %695 = %694.0;
  %696 = cast(%695, dtype="float32") /* ty=Tensor[(?, 6, 13), float32] */;
  %697 = sigmoid(%696) /* ty=Tensor[(?, 6, 13), float32] */;
  %698 = cast(%695, dtype="int16") /* ty=Tensor[(?, 6, 13), int16] */;
  %699 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%697, dtype="int16") /* ty=Tensor[(?, 6, 13), int16] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %702 = %693.1;
  %703 = maximum(%700, %701) /* ty=Tensor[(?, 6, 13), int16] */;
  (%702, %703)
}

def @func_4147() -> (Tensor[(7, 12, 4), float64],) {
  %704 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %705 = %704.0;
  (%705,)
}

def @func_5213() -> (Tensor[(72), float32],) {
  %706 = @func_3874() /* ty=(Tensor[(72), float32],) */;
  %707 = %706.0;
  (%707,)
}

def @func_6716(%var_6705: Tensor[(1, 512), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(1, 512), float32]) {
  %708 = @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */;
  %709 = cast(meta[relay.Constant][27] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %710 = cast(%var_6705, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %711 = reshape(%709, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %712 = reshape(%710, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), float32] */;
  %713 = @func_3728(%711, %712) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(6, 11, 3), float32], Tensor[(198), float32], Tensor[(2, 16, 16), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %714 = %708.2;
  %715 = %713.5;
  (%714, %715, meta[relay.Constant][27] /* ty=Tensor[(72), uint64] */, %var_6705)
}

def @func_2553() -> Tensor[(7, 12, 4), float64] {
  %716 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %716.0
}

def @func_7648(%var_7634: Tensor[(1, 126), float32]) -> (Tensor[(7, 12, 4), float32], Tensor[(9, 1, 14), float32], Tensor[(1, 126), float32]) {
  %717 = cast(%var_7634, dtype="float32") /* ty=Tensor[(1, 126), float32] */;
  %718 = reshape(%717, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %719 = @func_7088(%718) /* ty=(Tensor[(9, 1, 14), float32],) */;
  %720 = @func_2283() /* ty=Tensor[(7, 12, 4), float32] */;
  %721 = %719.0;
  (%720, %721, %var_7634)
}

def @func_2754() -> (Tensor[(7, 12, 4), float64],) {
  %722 = @func_1421() /* ty=Tensor[(7, 12, 4), float64] */;
  (%722,)
}

def @func_12341(%var_12315: Tensor[(64), float32], %var_12316: Tensor[(11, 2), float32], %var_12327: Tensor[(924), int32]) -> (Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(64), float32], Tensor[(11, 2), float32], Tensor[(7, 12, 4), float64], Tensor[(924), int32]) {
  %723 = @func_5213() /* ty=(Tensor[(72), float32],) */;
  %724 = cast(%var_12315, dtype="float32") /* ty=Tensor[(64), float32] */;
  %725 = cast(%var_12316, dtype="float32") /* ty=Tensor[(11, 2), float32] */;
  %726 = reshape(%724, newshape=[64]) /* ty=Tensor[(64), float32] */;
  %727 = reshape(%725, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %728 = @func_4418(%726, %727) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32], Tensor[(64), float32], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %729 = cast(%var_12327, dtype="int32") /* ty=Tensor[(924), int32] */;
  %730 = reshape(%729, newshape=[924]) /* ty=Tensor[(924), int32] */;
  %731 = @func_5451(%730) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(924), int32]) */;
  %732 = %723.0;
  %733 = %728.3;
  %734 = %731.1;
  (%732, %733, %var_12315, %var_12316, %734, %var_12327)
}

def @func_14216() -> (Tensor[(7, 12, 4), float32],) {
  %735 = @func_1827() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %736 = %735.2;
  (%736,)
}

def @func_8704() -> (Tensor[(7, 12, 4), float64],) {
  %737 = @func_6515() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %738 = %737.1;
  (%738,)
}

def @func_12403(%var_12400: Tensor[(3, 11, 5), float32]) -> Tensor[(3, 11, 5), float32] {
  %739 = cast(%var_12400, dtype="float32") /* ty=Tensor[(3, 11, 5), float32] */;
  atan(%739) /* ty=Tensor[(3, 11, 5), float32] */
}

def @func_4028() -> Tensor[(72), uint64] {
  @func_3975() /* ty=Tensor[(72), uint64] */
}

def @func_12878(%var_12873: Tensor[(16, 14, 14), float64], %var_12874: Tensor[(16, 14, 14), float64]) -> Tensor[(16, 14, 14), float64] {
  %740 = cast(%var_12874, dtype="float64") /* ty=Tensor[(16, 14, 14), float64] */;
  %741 = shape_of(%var_12873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%var_12873, dtype="float64") /* ty=Tensor[(16, 14, 14), float64] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%742, %743) /* ty=Tensor[(16, 14, 14), float64] */
}

def @func_7439() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
  %744 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %745 = @func_3975() /* ty=Tensor[(72), uint64] */;
  %746 = %744.1;
  (%745, %746)
}

def @func_9451(%var_9439: Tensor[(2, 15, 14), float32]) -> (Tensor[(2, 15, 14), float64], Tensor[(2, 15, 14), bool]) {
  %747 = cast(8.6091f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %748 = cast(%var_9439, dtype="bool") /* ty=Tensor[(2, 15, 14), bool] */;
  %749 = greater_equal(%747, %748) /* ty=Tensor[(2, 15, 14), bool] */;
  %750 = cast(%749, dtype="float64") /* ty=Tensor[(2, 15, 14), float64] */;
  %751 = cast(%749, dtype="bool") /* ty=Tensor[(2, 15, 14), bool] */;
  %752 = shape_of(%var_9439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%var_9439, dtype="bool") /* ty=Tensor[(2, 15, 14), bool] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %755 = sinh(%750) /* ty=Tensor[(2, 15, 14), float64] */;
  %756 = greater(%753, %754) /* ty=Tensor[(2, 15, 14), bool] */;
  (%755, %756)
}

def @func_8850() -> (Tensor[(72), float32], Tensor[(7, 12, 4), float32]) {
  %757 = @func_5213() /* ty=(Tensor[(72), float32],) */;
  %758 = %757.0;
  %759 = @func_4475() /* ty=Tensor[(7, 12, 4), float32] */;
  (%758, %759)
}

def @func_11598() -> (Tensor[(72), uint64],) {
  %760 = @func_7265() /* ty=(Tensor[(72), uint64], Tensor[(11, 3, 6), float32]) */;
  %761 = %760.0;
  (%761,)
}

def @func_2717() -> (Tensor[(7, 12, 4), float64],) {
  %762 = @func_1111() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %763 = %762.2;
  (%763,)
}

def @func_11701() -> (Tensor[(13, 15, 6), float64],) {
  %764 = @func_10937() /* ty=(Tensor[(13, 15, 6), float64],) */;
  %765 = %764.0;
  (%765,)
}

def @func_561() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %766 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %767 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %768 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %769 = %766.1;
  %770 = %767.1;
  %771 = %768.1;
  (%769, %770, %771)
}

def @func_5064() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float32]) {
  %772 = @func_4973() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %773 = @func_1111() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %774 = @func_1421() /* ty=Tensor[(7, 12, 4), float64] */;
  %775 = %772.3;
  %776 = %773.3;
  (%774, %775, %776)
}

def @func_9645() -> (Tensor[(7, 12, 4), float64],) {
  %777 = @func_1999() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %778 = %777.0;
  (%778,)
}

def @func_2077() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %779 = @func_745() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %780 = @func_1934() /* ty=Tensor[(7, 12, 4), float64] */;
  %781 = %779.0;
  (%780, %781)
}

def @func_8261(%var_8205: Tensor[(64), float32], %var_8232: Tensor[(22), float32], %var_8238: Tensor[(22), float32], %var_8248: Tensor[(64), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(22), float32], Tensor[(7, 12, 4), float32], Tensor[(2, 16, 16), float32], Tensor[(22), uint16], Tensor[(22), float32], Tensor[(7, 12, 4), float32], Tensor[(126), float32], Tensor[(64), bool]) {
  %782 = @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %783 = @func_1111() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %784 = @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */;
  %785 = cast(%var_8205, dtype="float32") /* ty=Tensor[(64), float32] */;
  %786 = cast(meta[relay.Constant][28] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
  %787 = reshape(%785, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %788 = reshape(%786, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %789 = @func_1480(%787, %788) /* ty=(Tensor[(4, 4, 4), int32], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32]) */;
  %790 = %789.3;
  %791 = cast(%var_8232, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %792 = shape_of(%790, dtype="int32") /* ty=Tensor[(1), int32] */;
  %793 = cast(%790, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %795 = cast(%var_8238, dtype="float32") /* ty=Tensor[(22), float32] */;
  %796 = shape_of(%var_8232, dtype="int32") /* ty=Tensor[(1), int32] */;
  %797 = cast(%var_8232, dtype="float32") /* ty=Tensor[(22), float32] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?), float32] */;
  %799 = cast(meta[relay.Constant][29] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %800 = reshape(%799, newshape=[1, 126]) /* ty=Tensor[(1, 126), float32] */;
  %801 = @func_7648(%800) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(9, 1, 14), float32], Tensor[(1, 126), float32]) */;
  %802 = cast(%var_8248, dtype="bool") /* ty=Tensor[(64), bool] */;
  %803 = shape_of(%var_8205, dtype="int32") /* ty=Tensor[(1), int32] */;
  %804 = cast(%var_8205, dtype="bool") /* ty=Tensor[(64), bool] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?), bool] */;
  %806 = %782.1;
  %807 = %783.3;
  %808 = %784.0;
  %809 = logical_xor(%793, %794) /* ty=Tensor[(22), uint16] */;
  %810 = power(%797, %798) /* ty=Tensor[(22), float32] */;
  %811 = %801.0;
  %812 = less(%804, %805) /* ty=Tensor[(64), bool] */;
  (%806, meta[relay.Constant][28] /* ty=Tensor[(22), float32] */, %807, %808, %809, %810, %811, meta[relay.Constant][29] /* ty=Tensor[(126), float32] */, %812)
}

def @func_10708(%var_10645: Tensor[(15, 16, 8), int64], %var_10646: Tensor[(15, 16, 8), int64]) -> (Tensor[(15, 16, 8), uint32], Tensor[(15, 16, 8), float64], Tensor[(72), uint64]) {
  %813 = cast(%var_10646, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
  %814 = shape_of(%var_10645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%var_10645, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %817 = not_equal(%815, %816) /* ty=Tensor[(15, 16, 8), bool] */;
  %818 = cast(%var_10645, dtype="uint32") /* ty=Tensor[(15, 16, 8), uint32] */;
  %819 = shape_of(%817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %820 = cast(%817, dtype="uint32") /* ty=Tensor[(15, 16, 8), uint32] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %822 = cast(%var_10646, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %823 = asinh(%822) /* ty=Tensor[(15, 16, 8), float32] */;
  %824 = cast(%823, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
  %825 = multiply(%820, %821) /* ty=Tensor[(15, 16, 8), uint32] */;
  %826 = tan(%824) /* ty=Tensor[(15, 16, 8), float64] */;
  %827 = @func_10554() /* ty=Tensor[(72), uint64] */;
  (%825, %826, %827)
}

def @func_13650() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64]) {
  %828 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %829 = @func_813() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %830 = @func_9282() /* ty=(Tensor[(72), uint64],) */;
  %831 = %828.0;
  %832 = %829.1;
  %833 = %830.0;
  (%831, %832, %833)
}

def @func_12781(%var_12750: Tensor[(10, 11, 14), int16], %var_12751: Tensor[(10, 11, 14), int16]) -> (Tensor[(10, 11, 14), int16], Tensor[(7, 12, 4), float64], Tensor[(72), float32]) {
  %834 = cast(%var_12751, dtype="int16") /* ty=Tensor[(10, 11, 14), int16] */;
  %835 = shape_of(%var_12750, dtype="int32") /* ty=Tensor[(3), int32] */;
  %836 = cast(%var_12750, dtype="int16") /* ty=Tensor[(10, 11, 14), int16] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %838 = @func_1724() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %839 = logical_xor(%836, %837) /* ty=Tensor[(10, 11, 14), int16] */;
  %840 = %838.2;
  %841 = @func_6602() /* ty=Tensor[(72), float32] */;
  (%839, %840, %841)
}

def @func_13893() -> (Tensor[(7, 12, 4), float64],) {
  %842 = @func_13385() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %843 = %842.0;
  (%843,)
}

def @func_4016() -> (Tensor[(72), uint64], Tensor[(8, 9, ?), float32]) {
  %844 = @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %845 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %846 = %845.3;
  %847 = cast(%846, dtype="float32") /* ty=Tensor[(8, 9, ?), float32] */;
  %848 = %844.0;
  %849 = sigmoid(%847) /* ty=Tensor[(8, 9, ?), float32] */;
  (%848, %849)
}

def @func_4185() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %850 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %851 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %852 = @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %853 = %850.0;
  %854 = @func_2553() /* ty=Tensor[(7, 12, 4), float64] */;
  %855 = %851.0;
  %856 = %852.0;
  (%853, %854, %855, %856)
}

def @func_11199() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(144), uint64], Tensor[(72), uint64]) {
  %857 = @func_9350() /* ty=(Tensor[(72), uint64],) */;
  %858 = @func_10833() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %859 = cast(meta[relay.Constant][30] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %860 = cast(meta[relay.Constant][30] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
  %861 = reshape(%859, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint64] */;
  %862 = reshape(%860, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint64] */;
  %863 = @func_9568(%861, %862) /* ty=(Tensor[(8, 3, 6), uint64], Tensor[(72), uint64]) */;
  %864 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
  %865 = %857.0;
  %866 = %858.0;
  %867 = @func_5179() /* ty=Tensor[(72), float32] */;
  %868 = @func_10374() /* ty=Tensor[(7, 12, 4), float64] */;
  %869 = %863.1;
  %870 = %864.1;
  (%865, %866, %867, %868, %869, meta[relay.Constant][30] /* ty=Tensor[(144), uint64] */, %870)
}

def @func_324(%var_296: Tensor[(72), uint64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
  %871 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %872 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %873 = cast(%var_296, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %874 = reshape(%873, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
  %875 = @func_142(%874) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */;
  %876 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %877 = %871.0;
  %878 = %872.0;
  %879 = %875.0;
  %880 = %876.1;
  (%877, %878, %879, %var_296, %880)
}

def @func_9269() -> Tensor[(7, 12, 4), float32] {
  %881 = @func_1827() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %881.2
}

def @func_12157() -> Tensor[(8, 9, ?), uint64] {
  @func_11217() /* ty=Tensor[(8, 9, ?), uint64] */
}

def @func_5887() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
  %882 = @func_2685() /* ty=(Tensor[(7, 12, 4), float32],) */;
  %883 = @func_1730() /* ty=Tensor[(7, 12, 4), float64] */;
  %884 = %882.0;
  (%883, %884)
}

def @func_10223() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %885 = @func_6885() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %886 = @func_4707() /* ty=Tensor[(7, 12, 4), float64] */;
  %887 = %885.0;
  (%886, %887)
}

def @func_1278(%var_1217: Tensor[(11, 9, 3), float32], %var_1223: Tensor[(11, 9, 3), float32], %var_1229: Tensor[(72), uint64]) -> (Tensor[(11, 9, 3), float32], Tensor[(7, 12, 4), float64], Tensor[(11, 9, 3), uint8], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), uint16], Tensor[(72), uint64], Tensor[(11, 9, 3), float32]) {
  %888 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 9, 3), float32] */, dtype="float32") /* ty=Tensor[(1, 9, 3), float32] */;
  %889 = cast(%var_1217, dtype="float32") /* ty=Tensor[(11, 9, 3), float32] */;
  %890 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %891 = cast(%var_1223, dtype="uint8") /* ty=Tensor[(11, 9, 3), uint8] */;
  %892 = shape_of(%var_1217, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(%var_1217, dtype="uint8") /* ty=Tensor[(11, 9, 3), uint8] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %895 = cast(%var_1229, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %896 = reshape(%895, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
  %897 = @func_142(%896) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */;
  %898 = %890.1;
  %899 = cast(%898, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  %900 = reshape(%899, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
  %901 = @func_968(%900) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %902 = %897.0;
  %903 = cast(%902, dtype="uint64") /* ty=Tensor[(8, 9, ?), uint64] */;
  %904 = reshape(%903, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %905 = @func_324(%904) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %906 = cast(%var_1217, dtype="float32") /* ty=Tensor[(11, 9, 3), float32] */;
  %907 = acos(%906) /* ty=Tensor[(11, 9, 3), float32] */;
  %908 = cast(%907, dtype="float32") /* ty=Tensor[(11, 9, 3), float32] */;
  %909 = mod(%888, %889) /* ty=Tensor[(11, 9, 3), float32] */;
  %910 = maximum(%893, %894) /* ty=Tensor[(11, 9, 3), uint8] */;
  %911 = %901.1;
  %912 = %905.3;
  %913 = erf(%908) /* ty=Tensor[(11, 9, 3), float32] */;
  (%909, %898, %910, %902, %var_1229, %911, %912, %913)
}

def @func_8554() -> (Tensor[(72), uint64],) {
  %914 = @func_2511() /* ty=(Tensor[(72), uint64],) */;
  %915 = %914.0;
  (%915,)
}

def @func_7976(%var_7971: uint16) -> Tensor[(7, 8, 9), uint16] {
  %916 = cast(%var_7971, dtype="uint16") /* ty=uint16 */;
  %917 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 8, 9), uint16] */, dtype="uint16") /* ty=Tensor[(7, 8, 9), uint16] */;
  add(%916, %917) /* ty=Tensor[(7, 8, 9), uint16] */
}

def @func_11369() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %918 = @func_3293() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %919 = @func_7190() /* ty=Tensor[(7, 12, 4), float64] */;
  %920 = %918.0;
  (%919, %920)
}

def @func_2972() -> (Tensor[(72), float32],) {
  %921 = @func_1111() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %922 = %921.1;
  (%922,)
}

def @func_9306() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(297), float32], Tensor[(72), uint64]) {
  %923 = cast(meta[relay.Constant][33] /* ty=Tensor[(297), float32] */, dtype="float32") /* ty=Tensor[(297), float32] */;
  %924 = cast(meta[relay.Constant][33] /* ty=Tensor[(297), float32] */, dtype="float32") /* ty=Tensor[(297), float32] */;
  %925 = cast(meta[relay.Constant][34] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %926 = reshape(%923, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float32] */;
  %927 = reshape(%924, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float32] */;
  %928 = reshape(%925, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %929 = @func_1278(%926, %927, %928) /* ty=(Tensor[(11, 9, 3), float32], Tensor[(7, 12, 4), float64], Tensor[(11, 9, 3), uint8], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), uint16], Tensor[(72), uint64], Tensor[(11, 9, 3), float32]) */;
  %930 = @func_4843() /* ty=Tensor[(7, 12, 4), float64] */;
  %931 = %929.4;
  (%930, %931, meta[relay.Constant][33] /* ty=Tensor[(297), float32] */, meta[relay.Constant][34] /* ty=Tensor[(72), uint64] */)
}

def @func_9568(%var_9557: Tensor[(8, 3, 6), uint64], %var_9558: Tensor[(8, 3, 6), uint64]) -> (Tensor[(8, 3, 6), uint64], Tensor[(72), uint64]) {
  %932 = cast(%var_9558, dtype="uint64") /* ty=Tensor[(8, 3, 6), uint64] */;
  %933 = shape_of(%var_9557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%var_9557, dtype="uint64") /* ty=Tensor[(8, 3, 6), uint64] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %936 = minimum(%934, %935) /* ty=Tensor[(8, 3, 6), uint64] */;
  %937 = @func_1755() /* ty=Tensor[(72), uint64] */;
  (%936, %937)
}

def @func_11960(%var_11922: Tensor[(11, 3, 6), float32]) -> (Tensor[(11, 3, 6), int32], Tensor[(11, 3, 6), bool], Tensor[(7, 12, 4), float64], Tensor[(11, 3, 6), float32], Tensor[(7, 12, 4), float32]) {
  %938 = @func_7265() /* ty=(Tensor[(72), uint64], Tensor[(11, 3, 6), float32]) */;
  %939 = %938.1;
  %940 = cast(%var_11922, dtype="int32") /* ty=Tensor[(11, 3, 6), int32] */;
  %941 = shape_of(%939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(%939, dtype="int32") /* ty=Tensor[(11, 3, 6), int32] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %944 = cast(%939, dtype="bool") /* ty=Tensor[(11, 3, 6), bool] */;
  %945 = shape_of(%var_11922, dtype="int32") /* ty=Tensor[(3), int32] */;
  %946 = cast(%var_11922, dtype="bool") /* ty=Tensor[(11, 3, 6), bool] */;
  %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %948 = @func_6167() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %949 = cast(%939, dtype="float32") /* ty=Tensor[(11, 3, 6), float32] */;
  %950 = logical_xor(%942, %943) /* ty=Tensor[(11, 3, 6), int32] */;
  %951 = greater_equal(%946, %947) /* ty=Tensor[(11, 3, 6), bool] */;
  %952 = %948.0;
  %953 = tan(%949) /* ty=Tensor[(11, 3, 6), float32] */;
  %954 = @func_1596() /* ty=Tensor[(7, 12, 4), float32] */;
  (%950, %951, %952, %953, %954)
}

def @func_3073(%var_3049: Tensor[(7, 12, 4), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), int16], Tensor[(7, 12, 4), float64]) {
  %955 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %956 = @func_1827() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %957 = %956.2;
  %958 = cast(%957, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
  %959 = exp(%958) /* ty=Tensor[(7, 12, 4), float32] */;
  %960 = cast(%var_3049, dtype="int16") /* ty=Tensor[(7, 12, 4), int16] */;
  %961 = shape_of(%959, dtype="int32") /* ty=Tensor[(3), int32] */;
  %962 = cast(%959, dtype="int16") /* ty=Tensor[(7, 12, 4), int16] */;
  %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %964 = %955.0;
  %965 = maximum(%962, %963) /* ty=Tensor[(7, 12, 4), int16] */;
  %966 = @func_1573() /* ty=Tensor[(7, 12, 4), float64] */;
  (%964, %965, %966)
}

def @func_12269() -> Tensor[(8, 9, 1), float32] {
  %967 = @func_1827() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %967.0
}

def @func_3293() -> (Tensor[(7, 12, 4), float64],) {
  %968 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %969 = %968.0;
  (%969,)
}

def @func_3363() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %970 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %971 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %972 = %970.1;
  %973 = %971.2;
  (%972, %973)
}

def @func_877() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) {
  %974 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %975 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %976 = %975.2;
  %977 = cast(%976, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %978 = reshape(%977, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
  %979 = @func_142(%978) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */;
  %980 = %974.1;
  %981 = %979.1;
  (%980, %976, %981)
}

def @func_3205(%var_3189: Tensor[(7, 12, 4), float64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
  %982 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %983 = @func_731() /* ty=Tensor[(7, 12, 4), float64] */;
  %984 = cast(%var_3189, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
  %985 = shape_of(%983, dtype="int32") /* ty=Tensor[(3), int32] */;
  %986 = cast(%983, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %988 = %982.0;
  %989 = mod(%986, %987) /* ty=Tensor[(7, 12, 4), float32] */;
  (%988, %989)
}

def @func_5510() -> Tensor[(7, 12, 4), float64] {
  %990 = @func_3293() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %990.0
}

def @func_3808() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %991 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %992 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %993 = %992.0;
  %994 = cast(%993, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
  %995 = reshape(%994, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float32] */;
  %996 = @func_3073(%995) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), int16], Tensor[(7, 12, 4), float64]) */;
  %997 = %991.2;
  %998 = %996.0;
  (%997, %993, %998)
}

def @func_6515() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %999 = @func_3363() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1000 = @func_4875() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1001 = %999.0;
  %1002 = %1000.0;
  (%1001, %1002)
}

def @func_10353() -> (Tensor[(72), float32],) {
  %1003 = @func_3874() /* ty=(Tensor[(72), float32],) */;
  %1004 = %1003.0;
  (%1004,)
}

def @func_11782() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1005 = @func_10286() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1006 = @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1007 = %1005.2;
  %1008 = %1006.1;
  (%1007, %1008)
}

def @func_4756() -> (Tensor[(7, 12, 4), float32], Tensor[(72), uint64]) {
  %1009 = @func_2901() /* ty=Tensor[(7, 12, 4), float32] */;
  %1010 = @func_3975() /* ty=Tensor[(72), uint64] */;
  (%1009, %1010)
}

def @func_5451(%var_5422: Tensor[(924), int32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(924), int32]) {
  %1011 = @func_3363() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1012 = cast(%var_5422, dtype="int32") /* ty=Tensor[(924), int32] */;
  %1013 = cast(%var_5422, dtype="int32") /* ty=Tensor[(924), int32] */;
  %1014 = reshape(%1012, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), int32] */;
  %1015 = reshape(%1013, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), int32] */;
  %1016 = @func_3534(%1014, %1015) /* ty=(Tensor[(11, 7, 12), int32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(336), float32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1017 = %1011.0;
  %1018 = %1016.5;
  (%1017, %1018, %var_5422)
}

def @func_13811() -> Tensor[(7, 12, 4), uint64] {
  %1019 = @func_2274() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %1019.2
}

def @func_6545() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float32]) {
  %1020 = @func_2497() /* ty=(Tensor[(72), float32], Tensor[(72), uint64], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %1021 = %1020.1;
  %1022 = @func_2367() /* ty=Tensor[(7, 12, 4), float32] */;
  (%1021, %1022)
}

def @func_7526() -> (Tensor[(7, 12, 4), float64],) {
  %1023 = @func_2497() /* ty=(Tensor[(72), float32], Tensor[(72), uint64], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %1024 = %1023.3;
  (%1024,)
}

def @func_6231() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
  %1025 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1026 = @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1027 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1028 = %1025.1;
  %1029 = %1026.0;
  %1030 = %1027.0;
  (%1028, %1029, %1030)
}

def @func_13253() -> (Tensor[(72), float32], Tensor[(8, 9, ?), uint64], Tensor[(7, 12, 4), float64]) {
  %1031 = @func_5213() /* ty=(Tensor[(72), float32],) */;
  %1032 = %1031.0;
  %1033 = cast(%1032, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %1034 = reshape(%1033, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
  %1035 = @func_142(%1034) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */;
  %1036 = %1035.0;
  %1037 = @func_7190() /* ty=Tensor[(7, 12, 4), float64] */;
  (%1032, %1036, %1037)
}

def @func_12968() -> (Tensor[(5, 7, 13), int16], Tensor[(5, 7, 13), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1038 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(5, 7, 13), float64] */;
  %1039 = asinh(%1038) /* ty=Tensor[(5, 7, 13), float64] */;
  %1040 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 7, 13), float64] */, dtype="int16") /* ty=Tensor[(5, 7, 13), int16] */;
  %1041 = shape_of(%1039, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1042 = cast(%1039, dtype="int16") /* ty=Tensor[(5, 7, 13), int16] */;
  %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1044 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(5, 7, 13), float64] */;
  %1045 = @func_6112() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1046 = @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1047 = left_shift(%1042, %1043) /* ty=Tensor[(5, 7, 13), int16] */;
  %1048 = sigmoid(%1044) /* ty=Tensor[(5, 7, 13), float64] */;
  %1049 = %1045.0;
  %1050 = %1046.2;
  (%1047, %1048, %1049, %1050)
}

def @func_10201(%var_10193: Tensor[(72), uint64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %1051 = @func_5826() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1052 = @func_5887() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %1053 = @func_3363() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1054 = @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1055 = cast(%var_10193, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %1056 = reshape(%1055, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %1057 = @func_324(%1056) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %1058 = %1051.0;
  %1059 = %1052.0;
  %1060 = %1053.1;
  %1061 = %1054.0;
  %1062 = %1057.4;
  (%1058, %1059, %1060, %1061, %1062, %var_10193)
}

def @func_13570() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1063 = @func_6112() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1064 = @func_6167() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1065 = @func_2132() /* ty=Tensor[(7, 12, 4), float64] */;
  %1066 = %1063.0;
  %1067 = %1064.0;
  (%1065, %1066, %1067)
}

def @func_6135() -> (Tensor[(7, 12, 4), float64],) {
  %1068 = @func_5510() /* ty=Tensor[(7, 12, 4), float64] */;
  (%1068,)
}

def @func_504() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1069 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1070 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1071 = %1069.1;
  %1072 = %1070.0;
  (%1071, %1072)
}

def @func_13179() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 132), int32], Tensor[(7, 12, 4), float64]) {
  %1073 = @func_2474() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1074 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 132), int32] */, dtype="int32") /* ty=Tensor[(7, 132), int32] */;
  %1075 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 132), int32] */, dtype="int32") /* ty=Tensor[(7, 132), int32] */;
  %1076 = reshape(%1074, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), int32] */;
  %1077 = reshape(%1075, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), int32] */;
  %1078 = @func_3534(%1076, %1077) /* ty=(Tensor[(11, 7, 12), int32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(336), float32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1079 = @func_11782() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1080 = %1073.0;
  %1081 = %1078.1;
  %1082 = %1079.0;
  (%1080, %1081, meta[relay.Constant][36] /* ty=Tensor[(7, 132), int32] */, %1082)
}

def @func_7545() -> (Tensor[(7, 12, 4), float64],) {
  %1083 = @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1084 = %1083.0;
  (%1084,)
}

def @func_5249() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1085 = @func_3293() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1086 = %1085.0;
  %1087 = cast(%1086, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
  %1088 = reshape(%1087, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float32] */;
  %1089 = @func_3073(%1088) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), int16], Tensor[(7, 12, 4), float64]) */;
  %1090 = @func_2060() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1091 = %1089.2;
  %1092 = %1090.0;
  (%1086, %1091, %1092)
}

def @func_9613(%var_9608: Tensor[(2, 15, 14), int8]) -> (Tensor[(2, 15, 14), bool],) {
  %1093 = cast(%var_9608, dtype="bool") /* ty=Tensor[(2, 15, 14), bool] */;
  %1094 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(2, 15, 14), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1095 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 15, 14), int8] */, dtype="bool") /* ty=Tensor[(2, 15, 14), bool] */;
  %1096 = dyn.reshape(%1093, %1094, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1097 = equal(%1095, %1096) /* ty=Tensor[(2, 15, 14), bool] */;
  (%1097,)
}

def @func_11998(%var_11986: Tensor[(13, 4, 6), int8], %var_11987: Tensor[(13, 4, 6), int8]) -> (Tensor[(13, 4, 6), int8],) {
  %1098 = cast(%var_11987, dtype="int8") /* ty=Tensor[(13, 4, 6), int8] */;
  %1099 = shape_of(%var_11986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1100 = cast(%var_11986, dtype="int8") /* ty=Tensor[(13, 4, 6), int8] */;
  %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1102 = bitwise_xor(%1100, %1101) /* ty=Tensor[(13, 4, 6), int8] */;
  (%1102,)
}

def @func_9662() -> Tensor[(7, 12, 4), float64] {
  @func_5760() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_6112() -> (Tensor[(7, 12, 4), float64],) {
  %1103 = @func_3293() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1104 = %1103.0;
  (%1104,)
}

def @func_12742() -> (Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(72), uint64]) {
  %1105 = @func_6602() /* ty=Tensor[(72), float32] */;
  %1106 = cast(%1105, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %1107 = reshape(%1106, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %1108 = @func_4561(%1107) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64]) */;
  %1109 = @func_4707() /* ty=Tensor[(7, 12, 4), float64] */;
  %1110 = %1108.4;
  (%1109, %1105, %1110)
}

def @func_7140(%var_7123: float64, %var_7124: Tensor[(10, 4, 14), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(7, 13, 7), uint16], Tensor[(637), float32]) {
  %1111 = cast(%var_7123, dtype="float64") /* ty=float64 */;
  %1112 = cast(%var_7124, dtype="float64") /* ty=Tensor[(10, 4, 14), float64] */;
  %1113 = cast(meta[relay.Constant][38] /* ty=Tensor[(637), float32] */, dtype="float32") /* ty=Tensor[(637), float32] */;
  %1114 = reshape(%1113, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), float32] */;
  %1115 = @func_3425(%1114) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float32], Tensor[(7, 13, 7), uint16]) */;
  %1116 = floor_mod(%1111, %1112) /* ty=Tensor[(10, 4, 14), float64] */;
  %1117 = %1115.3;
  (%1116, %1117, meta[relay.Constant][38] /* ty=Tensor[(637), float32] */)
}

def @func_14124() -> (Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64]) {
  %1118 = @func_10286() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1119 = %1118.1;
  %1120 = @func_11217() /* ty=Tensor[(8, 9, ?), uint64] */;
  (%1119, %1120)
}

def @main(%var_14306: int8) -> (Tensor[(2, 1, 1), int8],) {
  %1121 = cast(%var_14306, dtype="int8") /* ty=int8 */;
  %1122 = cast(meta[relay.Constant][39] /* ty=Tensor[(2, 1, 1), int8] */, dtype="int8") /* ty=Tensor[(2, 1, 1), int8] */;
  %1123 = right_shift(%1121, %1122) /* ty=Tensor[(2, 1, 1), int8] */;
  (%1123,)
}

def @func_13593() -> (Tensor[(7, 12, 4), float32],) {
  %1124 = @func_13343() /* ty=(Tensor[(7, 12, 4), float32],) */;
  %1125 = %1124.0;
  (%1125,)
}

def @func_8673() -> Tensor[(1, 6, 13), float32] {
  %1126 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 6, 13), float32] */, dtype="float32") /* ty=Tensor[(1, 6, 13), float32] */;
  log10(%1126) /* ty=Tensor[(1, 6, 13), float32] */
}

def @func_4707() -> Tensor[(7, 12, 4), float64] {
  @func_731() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_6815() -> Tensor[(7, 12, 4), float64] {
  %1127 = @func_6772() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1127.0
}

def @func_9806() -> Tensor[(7, 12, 4), float64] {
  %1128 = @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1128.1
}

def @func_2901() -> Tensor[(7, 12, 4), float32] {
  @func_1596() /* ty=Tensor[(7, 12, 4), float32] */
}

def @func_9983() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(637), float32]) {
  %1129 = @func_9645() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1130 = cast(meta[relay.Constant][41] /* ty=Tensor[(637), float32] */, dtype="float32") /* ty=Tensor[(637), float32] */;
  %1131 = cast(meta[relay.Constant][41] /* ty=Tensor[(637), float32] */, dtype="float32") /* ty=Tensor[(637), float32] */;
  %1132 = reshape(%1130, newshape=[637]) /* ty=Tensor[(637), float32] */;
  %1133 = reshape(%1131, newshape=[637]) /* ty=Tensor[(637), float32] */;
  %1134 = @func_6447(%1132, %1133) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(637), int16], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %1135 = %1129.0;
  %1136 = %1134.1;
  (%1135, %1136, meta[relay.Constant][41] /* ty=Tensor[(637), float32] */)
}

def @func_8759() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1137 = @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1138 = %1137.2;
  %1139 = @func_6649() /* ty=Tensor[(7, 12, 4), float64] */;
  (%1138, %1139)
}

def @func_3975() -> Tensor[(72), uint64] {
  %1140 = @func_2497() /* ty=(Tensor[(72), float32], Tensor[(72), uint64], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %1140.1
}

def @func_10488() -> (Tensor[(7, 12, 4), float64],) {
  %1141 = @func_3122() /* ty=Tensor[(7, 12, 4), float64] */;
  (%1141,)
}

def @func_4856() -> (Tensor[(7, 12, 4), float32],) {
  %1142 = @func_4475() /* ty=Tensor[(7, 12, 4), float32] */;
  (%1142,)
}

def @func_3279() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
  %1143 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1144 = @func_2879() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1145 = @func_2497() /* ty=(Tensor[(72), float32], Tensor[(72), uint64], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %1146 = %1143.0;
  %1147 = %1144.0;
  %1148 = %1145.4;
  (%1146, %1147, %1148)
}

def @func_4475() -> Tensor[(7, 12, 4), float32] {
  @func_2283() /* ty=Tensor[(7, 12, 4), float32] */
}

def @func_8575() -> Tensor[(7, 12, 4), float64] {
  %1149 = @func_1999() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1149.0
}

def @func_9463() -> Tensor[(7, 12, 4), float64] {
  @func_5510() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_745() -> (Tensor[(7, 12, 4), float64],) {
  %1150 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1151 = %1150.1;
  (%1151,)
}

def @func_10529(%var_10522: Tensor[(1, 637), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(1, 637), float32]) {
  %1152 = cast(%var_10522, dtype="float32") /* ty=Tensor[(1, 637), float32] */;
  %1153 = cast(%var_10522, dtype="float32") /* ty=Tensor[(1, 637), float32] */;
  %1154 = reshape(%1152, newshape=[637]) /* ty=Tensor[(637), float32] */;
  %1155 = reshape(%1153, newshape=[637]) /* ty=Tensor[(637), float32] */;
  %1156 = @func_6447(%1154, %1155) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(637), int16], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %1157 = @func_9463() /* ty=Tensor[(7, 12, 4), float64] */;
  %1158 = %1156.3;
  (%1157, %1158, %var_10522)
}

def @func_7190() -> Tensor[(7, 12, 4), float64] {
  %1159 = @func_7054() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), float32], Tensor[(7, 12, 4), float64], Tensor[(2, 16, 16), float64]) */;
  %1159.8
}

def @func_13479() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1160 = @func_6869() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1161 = @func_6112() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1162 = %1160.0;
  %1163 = %1161.0;
  (%1162, %1163)
}

def @func_7801() -> (Tensor[(7, 12, 4), float64],) {
  %1164 = @func_2474() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1165 = %1164.0;
  (%1165,)
}

def @func_3926() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1166 = @func_3293() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1167 = %1166.0;
  %1168 = cast(%1167, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  %1169 = reshape(%1168, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
  %1170 = @func_968(%1169) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %1171 = %1170.3;
  (%1167, %1171)
}

def @func_14189(%var_14186: Tensor[(72), uint64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %1172 = cast(%var_14186, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %1173 = reshape(%1172, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %1174 = @func_324(%1173) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %1175 = @func_2553() /* ty=Tensor[(7, 12, 4), float64] */;
  %1176 = %1174.4;
  (%1175, %1176, %var_14186)
}

def @func_14273() -> Tensor[(1500), float32] {
  %1177 = @func_13969() /* ty=(Tensor[(72), uint64], Tensor[(15, 10, 10), float32], Tensor[(1500), float32]) */;
  %1177.2
}

def @func_10833() -> (Tensor[(7, 12, 4), float64],) {
  %1178 = @func_731() /* ty=Tensor[(7, 12, 4), float64] */;
  (%1178,)
}

def @func_10554() -> Tensor[(72), uint64] {
  %1179 = @func_4730() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1179.0
}

def @func_1999() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1180 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1181 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
  %1182 = %1180.0;
  %1183 = %1181.0;
  (%1182, %1183)
}

def @func_14066() -> (Tensor[(7, 12, 4), float64],) {
  %1184 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1185 = %1184.1;
  (%1185,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1725() -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %5 = fn () -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
    %0 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
    %1 = @func_745() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %2 = %0.0;
    %3 = @func_1421() /* ty=Tensor[(7, 12, 4), float64] */;
    %4 = %1.0;
    (%2, %3, %4)
  };
  %5() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_5761() -> Tensor[(7, 12, 4), float64] {
  %7 = fn () -> Tensor[(7, 12, 4), float64] {
    %6 = @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %6.0
  };
  %7() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_4731() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %13 = fn () -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
    %8 = @func_2511() /* ty=(Tensor[(72), uint64],) */;
    %9 = @func_2879() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %10 = %8.0;
    %11 = @func_4707() /* ty=Tensor[(7, 12, 4), float64] */;
    %12 = %9.0;
    (%10, %11, %12)
  };
  %13() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_4758() -> (Tensor[(7, 12, 4), float32], Tensor[(72), uint64]) {
  @func_4756() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(72), uint64]) */
}

def @func_2973() -> (Tensor[(72), float32],) {
  %16 = fn () -> (Tensor[(72), float32],) {
    %14 = @func_1111() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
    %15 = %14.1;
    (%15,)
  };
  %16() /* ty=(Tensor[(72), float32],) */
}

def @func_9391() -> (Tensor[(?, 6, 13), bool],) {
  %28 = fn () -> (Tensor[(?, 6, 13), bool],) {
    %17 = @func_8673() /* ty=Tensor[(1, 6, 13), float32] */;
    %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 6, 13), float32] */, dtype="uint32") /* ty=Tensor[(1, 6, 13), uint32] */;
    %19 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
    %20 = cast(%17, dtype="uint32") /* ty=Tensor[(1, 6, 13), uint32] */;
    %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %22 = left_shift(%20, %21) /* ty=Tensor[(?, 6, 13), uint32] */;
    %23 = cast(%22, dtype="bool") /* ty=Tensor[(?, 6, 13), bool] */;
    %24 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(1, 6, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 6, 13), float32] */, dtype="bool") /* ty=Tensor[(1, 6, 13), bool] */;
    %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %27 = greater_equal(%25, %26) /* ty=Tensor[(?, 6, 13), bool] */;
    (%27,)
  };
  %28() /* ty=(Tensor[(?, 6, 13), bool],) */
}

def @func_2881() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_2879() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_13995() -> (Tensor[(7, 12, 4), float32],) {
  @func_13993() /* ty=(Tensor[(7, 12, 4), float32],) */
}

def @func_2284() -> Tensor[(7, 12, 4), float32] {
  %32 = fn () -> Tensor[(7, 12, 4), float32] {
    %29 = @func_1724() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %30 = %29.1;
    %31 = cast(%30, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
    asinh(%31) /* ty=Tensor[(7, 12, 4), float32] */
  };
  %32() /* ty=Tensor[(7, 12, 4), float32] */
}

def @func_9808() -> Tensor[(7, 12, 4), float64] {
  @func_9806() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_9080() -> (Tensor[(72), float32], Tensor[(7, 12, 4), float64]) {
  %36 = fn () -> (Tensor[(72), float32], Tensor[(7, 12, 4), float64]) {
    %33 = @func_2972() /* ty=(Tensor[(72), float32],) */;
    %34 = %33.0;
    %35 = @func_1573() /* ty=Tensor[(7, 12, 4), float64] */;
    (%34, %35)
  };
  %36() /* ty=(Tensor[(72), float32], Tensor[(7, 12, 4), float64]) */
}

def @func_2476() -> (Tensor[(7, 12, 4), float64],) {
  @func_2474() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_6232() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
  %43 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
    %37 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %38 = @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %39 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %40 = %37.1;
    %41 = %38.0;
    %42 = %39.0;
    (%40, %41, %42)
  };
  %43() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */
}

def @func_144(%var_143: Tensor[(8, 9, 1), uint64]) -> (Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) {
  %51 = fn (%var_133: Tensor[(8, 9, 1), uint64]) -> (Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) {
    %44 = cast(%var_133, dtype="uint64") /* ty=Tensor[(8, 9, 1), uint64] */;
    %45 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(8, 9, 1), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %46 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 9, 1), uint64] */, dtype="uint64") /* ty=Tensor[(8, 9, 1), uint64] */;
    %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %48 = cast(%var_133, dtype="float32") /* ty=Tensor[(8, 9, 1), float32] */;
    %49 = subtract(%46, %47) /* ty=Tensor[(8, 9, ?), uint64] */;
    %50 = erf(%48) /* ty=Tensor[(8, 9, 1), float32] */;
    (%49, %50)
  };
  %51(%var_143) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */
}

def @func_9306() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(297), float32], Tensor[(72), uint64]) {
  %52 = cast(meta[relay.Constant][2] /* ty=Tensor[(297), float32] */, dtype="float32") /* ty=Tensor[(297), float32] */;
  %53 = cast(meta[relay.Constant][2] /* ty=Tensor[(297), float32] */, dtype="float32") /* ty=Tensor[(297), float32] */;
  %54 = cast(meta[relay.Constant][3] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %55 = reshape(%52, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float32] */;
  %56 = reshape(%53, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float32] */;
  %57 = reshape(%54, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %58 = @func_1278(%55, %56, %57) /* ty=(Tensor[(11, 9, 3), float32], Tensor[(7, 12, 4), float64], Tensor[(11, 9, 3), uint8], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), uint16], Tensor[(72), uint64], Tensor[(11, 9, 3), float32]) */;
  %59 = @func_4843() /* ty=Tensor[(7, 12, 4), float64] */;
  %60 = %58.4;
  (%59, %60, meta[relay.Constant][2] /* ty=Tensor[(297), float32] */, meta[relay.Constant][3] /* ty=Tensor[(72), uint64] */)
}

def @func_13502(%var_13500: Tensor[(2, 14, 6), float32], %var_13501: Tensor[(2, 14, 6), float32]) -> Tensor[(2, 14, 6), float32] {
  @func_13498(%var_13500, %var_13501) /* ty=Tensor[(2, 14, 6), float32] */
}

def @func_732() -> Tensor[(7, 12, 4), float64] {
  %62 = fn () -> Tensor[(7, 12, 4), float64] {
    %61 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %61.1
  };
  %62() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_3365() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_3363() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_10938() -> (Tensor[(13, 15, 6), float64],) {
  %65 = fn () -> (Tensor[(13, 15, 6), float64],) {
    %63 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 15, 6), float64] */, dtype="float64") /* ty=Tensor[(13, 15, 6), float64] */;
    %64 = log10(%63) /* ty=Tensor[(13, 15, 6), float64] */;
    (%64,)
  };
  %65() /* ty=(Tensor[(13, 15, 6), float64],) */
}

def @func_370() -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) {
  %72 = fn () -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) {
    %66 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %67 = %66.0;
    %68 = cast(%67, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
    %69 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %70 = atanh(%68) /* ty=Tensor[(7, 12, 4), float32] */;
    %71 = %69.0;
    (%70, %71)
  };
  %72() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */
}

def @func_10489() -> (Tensor[(7, 12, 4), float64],) {
  %74 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %73 = @func_3122() /* ty=Tensor[(7, 12, 4), float64] */;
    (%73,)
  };
  %74() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_8179() -> Tensor[(72), uint64] {
  %76 = fn () -> Tensor[(72), uint64] {
    %75 = @func_7265() /* ty=(Tensor[(72), uint64], Tensor[(11, 3, 6), float32]) */;
    %75.0
  };
  %76() /* ty=Tensor[(72), uint64] */
}

def @func_12486() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_12484() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_11871() -> (Tensor[(7, 12, 4), float64],) {
  @func_11869() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_968(%var_919: Tensor[(7, 12, 4), float64]) -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %77 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %78 = %77.0;
  %79 = cast(%78, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
  %80 = cast(%var_919, dtype="uint16") /* ty=Tensor[(7, 12, 4), uint16] */;
  %81 = shape_of(%78, dtype="int32") /* ty=Tensor[(3), int32] */;
  %82 = cast(%78, dtype="uint16") /* ty=Tensor[(7, 12, 4), uint16] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %84 = @func_745() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %85 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %86 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %87 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %88 = tan(%79) /* ty=Tensor[(7, 12, 4), float32] */;
  %89 = minimum(%82, %83) /* ty=Tensor[(7, 12, 4), uint16] */;
  %90 = %84.0;
  %91 = %85.1;
  %92 = %86.0;
  %93 = %87.2;
  (%88, %89, %90, %91, %92, %93)
}

def @func_13650() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64]) {
  %94 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %95 = @func_813() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %96 = @func_9282() /* ty=(Tensor[(72), uint64],) */;
  %97 = %94.0;
  %98 = %95.1;
  %99 = %96.0;
  (%97, %98, %99)
}

def @func_1936() -> Tensor[(7, 12, 4), float64] {
  @func_1934() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_6603() -> Tensor[(72), float32] {
  %101 = fn () -> Tensor[(72), float32] {
    %100 = @func_3874() /* ty=(Tensor[(72), float32],) */;
    %100.0
  };
  %101() /* ty=Tensor[(72), float32] */
}

def @func_13572() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_13570() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_10376() -> Tensor[(7, 12, 4), float64] {
  @func_10374() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_9271() -> Tensor[(7, 12, 4), float32] {
  @func_9269() /* ty=Tensor[(7, 12, 4), float32] */
}

def @main(%var_14306: int8) -> (Tensor[(2, 1, 1), int8],) {
  %102 = cast(%var_14306, dtype="int8") /* ty=int8 */;
  %103 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 1, 1), int8] */, dtype="int8") /* ty=Tensor[(2, 1, 1), int8] */;
  %104 = right_shift(%102, %103) /* ty=Tensor[(2, 1, 1), int8] */;
  (%104,)
}

def @func_10337(%var_10305: Tensor[(70, 6), float32]) -> (Tensor[(2, 15, 14), bool], Tensor[(70, 6), float32], Tensor[(7, 12, 4), float64], Tensor[(5, 5, ?), float32], Tensor[(5, 5, ?), float32]) {
  %105 = cast(%var_10305, dtype="float32") /* ty=Tensor[(70, 6), float32] */;
  %106 = reshape(%105, newshape=[2, 15, 14]) /* ty=Tensor[(2, 15, 14), float32] */;
  %107 = @func_9451(%106) /* ty=(Tensor[(2, 15, 14), float64], Tensor[(2, 15, 14), bool]) */;
  %108 = @func_6515() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %109 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 5, 1), float32] */, dtype="float32") /* ty=Tensor[(5, 5, 1), float32] */;
  %110 = atanh(%109) /* ty=Tensor[(5, 5, 1), float32] */;
  %111 = cast(%110, dtype="float64") /* ty=Tensor[(5, 5, 1), float64] */;
  %112 = cos(%111) /* ty=Tensor[(5, 5, 1), float64] */;
  %113 = cast(%110, dtype="int8") /* ty=Tensor[(5, 5, 1), int8] */;
  %114 = shape_of(%112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%112, dtype="int8") /* ty=Tensor[(5, 5, 1), int8] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %117 = left_shift(%115, %116) /* ty=Tensor[(5, 5, ?), int8] */;
  %118 = cast(%117, dtype="float32") /* ty=Tensor[(5, 5, ?), float32] */;
  %119 = cast(%117, dtype="float32") /* ty=Tensor[(5, 5, ?), float32] */;
  %120 = %107.1;
  %121 = %108.0;
  %122 = rsqrt(%118) /* ty=Tensor[(5, 5, ?), float32] */;
  %123 = acos(%119) /* ty=Tensor[(5, 5, ?), float32] */;
  (%120, %var_10305, %121, %122, %123)
}

def @func_5215() -> (Tensor[(72), float32],) {
  @func_5213() /* ty=(Tensor[(72), float32],) */
}

def @func_11217() -> Tensor[(8, 9, ?), uint64] {
  %124 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %124.3
}

def @func_3810() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_2275() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %142 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
    %125 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %126 = @func_1111() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
    %127 = @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */;
    %128 = %127.2;
    %129 = cast(%128, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
    %130 = log(%129) /* ty=Tensor[(7, 12, 4), float64] */;
    %131 = @func_1934() /* ty=Tensor[(7, 12, 4), float64] */;
    %132 = cast(%131, dtype="uint64") /* ty=Tensor[(7, 12, 4), uint64] */;
    %133 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
    %134 = cast(%130, dtype="uint64") /* ty=Tensor[(7, 12, 4), uint64] */;
    %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %136 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
    %137 = %125.1;
    %138 = %126.3;
    %139 = left_shift(%134, %135) /* ty=Tensor[(7, 12, 4), uint64] */;
    %140 = %136.1;
    %141 = @func_1755() /* ty=Tensor[(72), uint64] */;
    (%137, %138, %139, %140, %141)
  };
  %142() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */
}

def @func_3728(%var_3632: Tensor[(72), uint64], %var_3679: Tensor[(2, 16, 16), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(6, 11, 3), float32], Tensor[(198), float32], Tensor[(2, 16, 16), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %143 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %144 = cast(%var_3632, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %145 = reshape(%144, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %146 = @func_324(%145) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %147 = %146.3;
  %148 = cast(%147, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %149 = reshape(%148, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %150 = @func_324(%149) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %151 = @func_2879() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %152 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %153 = cast(meta[relay.Constant][7] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
  %154 = cast(meta[relay.Constant][7] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
  %155 = reshape(%153, newshape=[6, 11, 3]) /* ty=Tensor[(6, 11, 3), float32] */;
  %156 = reshape(%154, newshape=[6, 11, 3]) /* ty=Tensor[(6, 11, 3), float32] */;
  %157 = @func_2380(%155, %156) /* ty=(Tensor[(6, 11, 3), float32],) */;
  %158 = @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */;
  %159 = %158.0;
  %160 = cast(%var_3679, dtype="float64") /* ty=Tensor[(2, 16, 16), float64] */;
  %161 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%159, dtype="float64") /* ty=Tensor[(2, 16, 16), float64] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %164 = divide(%162, %163) /* ty=Tensor[(2, 16, 16), float64] */;
  %165 = cast(%164, dtype="float32") /* ty=Tensor[(2, 16, 16), float32] */;
  %166 = @func_2497() /* ty=(Tensor[(72), float32], Tensor[(72), uint64], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %167 = %143.1;
  %168 = %150.3;
  %169 = %151.0;
  %170 = %152.0;
  %171 = %157.0;
  %172 = sin(%165) /* ty=Tensor[(2, 16, 16), float32] */;
  %173 = %166.3;
  %174 = @func_1573() /* ty=Tensor[(7, 12, 4), float64] */;
  (%167, %147, %var_3632, %168, %169, %170, %171, meta[relay.Constant][7] /* ty=Tensor[(198), float32] */, %172, %173, %174)
}

def @func_3928() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_5180() -> Tensor[(72), float32] {
  %176 = fn () -> Tensor[(72), float32] {
    %175 = @func_3874() /* ty=(Tensor[(72), float32],) */;
    %175.0
  };
  %176() /* ty=Tensor[(72), float32] */
}

def @func_2851(%var_2833: Tensor[(22), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(4, 4, 4), int32], Tensor[(64), float32], Tensor[(22), float32], Tensor[(7, 12, 4), float64]) {
  %177 = @func_813() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %178 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %179 = cast(meta[relay.Constant][8] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
  %180 = cast(%var_2833, dtype="float32") /* ty=Tensor[(22), float32] */;
  %181 = reshape(%179, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %182 = reshape(%180, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %183 = @func_1480(%181, %182) /* ty=(Tensor[(4, 4, 4), int32], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32]) */;
  %184 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %185 = %177.0;
  %186 = %178.2;
  %187 = %183.0;
  %188 = %184.1;
  (%185, %186, %187, meta[relay.Constant][8] /* ty=Tensor[(64), float32] */, %var_2833, %188)
}

def @func_7144(%var_7142: float64, %var_7143: Tensor[(10, 4, 14), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(7, 13, 7), uint16], Tensor[(637), float32]) {
  @func_7140(%var_7142, %var_7143) /* ty=(Tensor[(10, 4, 14), float64], Tensor[(7, 13, 7), uint16], Tensor[(637), float32]) */
}

def @func_6327() -> (Tensor[(7, 12, 4), float64],) {
  %189 = @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %190 = %189.0;
  (%190,)
}

def @func_14068() -> (Tensor[(7, 12, 4), float64],) {
  @func_14066() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_3537(%var_3535: Tensor[(11, 7, 12), int32], %var_3536: Tensor[(11, 7, 12), int32]) -> (Tensor[(11, 7, 12), int32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(336), float32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %215 = fn (%var_3440: Tensor[(11, 7, 12), int32], %var_3441: Tensor[(11, 7, 12), int32]) -> (Tensor[(11, 7, 12), int32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(336), float32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
    %191 = cast(%var_3441, dtype="int32") /* ty=Tensor[(11, 7, 12), int32] */;
    %192 = shape_of(%var_3440, dtype="int32") /* ty=Tensor[(3), int32] */;
    %193 = cast(%var_3440, dtype="int32") /* ty=Tensor[(11, 7, 12), int32] */;
    %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %195 = @func_2511() /* ty=(Tensor[(72), uint64],) */;
    %196 = cast(meta[relay.Constant][9] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
    %197 = reshape(%196, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float32] */;
    %198 = @func_3073(%197) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), int16], Tensor[(7, 12, 4), float64]) */;
    %199 = %195.0;
    %200 = cast(%199, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %201 = reshape(%200, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %202 = @func_324(%201) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
    %203 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %204 = @func_3317() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %205 = %198.0;
    %206 = cast(%205, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
    %207 = reshape(%206, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float32] */;
    %208 = @func_3073(%207) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), int16], Tensor[(7, 12, 4), float64]) */;
    %209 = add(%193, %194) /* ty=Tensor[(11, 7, 12), int32] */;
    %210 = %202.3;
    %211 = %203.0;
    %212 = @func_731() /* ty=Tensor[(7, 12, 4), float64] */;
    %213 = %204.0;
    %214 = %208.0;
    (%209, %199, %205, meta[relay.Constant][9] /* ty=Tensor[(336), float32] */, %210, %211, %212, %213, %214)
  };
  %215(%var_3535, %var_3536) /* ty=(Tensor[(11, 7, 12), int32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(336), float32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_11906() -> Tensor[(7, 12, 4), float32] {
  %216 = fn () -> Tensor[(7, 12, 4), float32] {
    @func_2367() /* ty=Tensor[(7, 12, 4), float32] */
  };
  %216() /* ty=Tensor[(7, 12, 4), float32] */
}

def @func_13403() -> (Tensor[(7, 12, 4), float64],) {
  %219 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %217 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %218 = %217.1;
    (%218,)
  };
  %219() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_11116() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  @func_11114() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */
}

def @func_14265() -> Tensor[(8, 9, 1), float32] {
  %221 = fn () -> Tensor[(8, 9, 1), float32] {
    %220 = @func_3146() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64]) */;
    %220.0
  };
  %221() /* ty=Tensor[(8, 9, 1), float32] */
}

def @func_13387() -> (Tensor[(7, 12, 4), float64],) {
  @func_13385() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_6871() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_6869() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_6135() -> (Tensor[(7, 12, 4), float64],) {
  %222 = @func_5510() /* ty=Tensor[(7, 12, 4), float64] */;
  (%222,)
}

def @func_6774() -> (Tensor[(7, 12, 4), float64],) {
  @func_6772() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_6149() -> (Tensor[(7, 12, 4), float64],) {
  %225 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %223 = @func_3317() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %224 = %223.0;
    (%224,)
  };
  %225() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_7088(%var_7085: Tensor[(9, 1, 14), float32]) -> (Tensor[(9, 1, 14), float32],) {
  %226 = cast(%var_7085, dtype="float32") /* ty=Tensor[(9, 1, 14), float32] */;
  %227 = log(%226) /* ty=Tensor[(9, 1, 14), float32] */;
  (%227,)
}

def @func_6546() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float32]) {
  %231 = fn () -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float32]) {
    %228 = @func_2497() /* ty=(Tensor[(72), float32], Tensor[(72), uint64], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
    %229 = %228.1;
    %230 = @func_2367() /* ty=Tensor[(7, 12, 4), float32] */;
    (%229, %230)
  };
  %231() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float32]) */
}

def @func_11962(%var_11961: Tensor[(11, 3, 6), float32]) -> (Tensor[(11, 3, 6), int32], Tensor[(11, 3, 6), bool], Tensor[(7, 12, 4), float64], Tensor[(11, 3, 6), float32], Tensor[(7, 12, 4), float32]) {
  %249 = fn (%var_11922: Tensor[(11, 3, 6), float32]) -> (Tensor[(11, 3, 6), int32], Tensor[(11, 3, 6), bool], Tensor[(7, 12, 4), float64], Tensor[(11, 3, 6), float32], Tensor[(7, 12, 4), float32]) {
    %232 = @func_7265() /* ty=(Tensor[(72), uint64], Tensor[(11, 3, 6), float32]) */;
    %233 = %232.1;
    %234 = cast(%var_11922, dtype="int32") /* ty=Tensor[(11, 3, 6), int32] */;
    %235 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
    %236 = cast(%233, dtype="int32") /* ty=Tensor[(11, 3, 6), int32] */;
    %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %238 = cast(%233, dtype="bool") /* ty=Tensor[(11, 3, 6), bool] */;
    %239 = shape_of(%var_11922, dtype="int32") /* ty=Tensor[(3), int32] */;
    %240 = cast(%var_11922, dtype="bool") /* ty=Tensor[(11, 3, 6), bool] */;
    %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %242 = @func_6167() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %243 = cast(%233, dtype="float32") /* ty=Tensor[(11, 3, 6), float32] */;
    %244 = logical_xor(%236, %237) /* ty=Tensor[(11, 3, 6), int32] */;
    %245 = greater_equal(%240, %241) /* ty=Tensor[(11, 3, 6), bool] */;
    %246 = %242.0;
    %247 = tan(%243) /* ty=Tensor[(11, 3, 6), float32] */;
    %248 = @func_1596() /* ty=Tensor[(7, 12, 4), float32] */;
    (%244, %245, %246, %247, %248)
  };
  %249(%var_11961) /* ty=(Tensor[(11, 3, 6), int32], Tensor[(11, 3, 6), bool], Tensor[(7, 12, 4), float64], Tensor[(11, 3, 6), float32], Tensor[(7, 12, 4), float32]) */
}

def @func_8799() -> (Tensor[(7, 12, 4), float32],) {
  %250 = @func_2283() /* ty=Tensor[(7, 12, 4), float32] */;
  (%250,)
}

def @func_9342(%var_9340: Tensor[(13, 14, 10), float32], %var_9341: Tensor[(13, 14, 10), float32]) -> Tensor[(13, 14, 10), float32] {
  %255 = fn (%var_9334: Tensor[(13, 14, 10), float32], %var_9335: Tensor[(13, 14, 10), float32]) -> Tensor[(13, 14, 10), float32] {
    %251 = cast(%var_9335, dtype="float32") /* ty=Tensor[(13, 14, 10), float32] */;
    %252 = shape_of(%var_9334, dtype="int32") /* ty=Tensor[(3), int32] */;
    %253 = cast(%var_9334, dtype="float32") /* ty=Tensor[(13, 14, 10), float32] */;
    %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%253, %254) /* ty=Tensor[(13, 14, 10), float32] */
  };
  %255(%var_9340, %var_9341) /* ty=Tensor[(13, 14, 10), float32] */
}

def @func_2854(%var_2852: Tensor[(22), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(4, 4, 4), int32], Tensor[(64), float32], Tensor[(22), float32], Tensor[(7, 12, 4), float64]) {
  @func_2851(%var_2852) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(4, 4, 4), int32], Tensor[(64), float32], Tensor[(22), float32], Tensor[(7, 12, 4), float64]) */
}

def @func_6718(%var_6717: Tensor[(1, 512), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(1, 512), float32]) {
  %264 = fn (%var_6705: Tensor[(1, 512), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(1, 512), float32]) {
    %256 = @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */;
    %257 = cast(meta[relay.Constant][10] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %258 = cast(%var_6705, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
    %259 = reshape(%257, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %260 = reshape(%258, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), float32] */;
    %261 = @func_3728(%259, %260) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(6, 11, 3), float32], Tensor[(198), float32], Tensor[(2, 16, 16), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %262 = %256.2;
    %263 = %261.5;
    (%262, %263, meta[relay.Constant][10] /* ty=Tensor[(72), uint64] */, %var_6705)
  };
  %264(%var_6717) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(1, 512), float32]) */
}

def @func_9983() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(637), float32]) {
  %265 = @func_9645() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %266 = cast(meta[relay.Constant][11] /* ty=Tensor[(637), float32] */, dtype="float32") /* ty=Tensor[(637), float32] */;
  %267 = cast(meta[relay.Constant][11] /* ty=Tensor[(637), float32] */, dtype="float32") /* ty=Tensor[(637), float32] */;
  %268 = reshape(%266, newshape=[637]) /* ty=Tensor[(637), float32] */;
  %269 = reshape(%267, newshape=[637]) /* ty=Tensor[(637), float32] */;
  %270 = @func_6447(%268, %269) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(637), int16], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %271 = %265.0;
  %272 = %270.1;
  (%271, %272, meta[relay.Constant][11] /* ty=Tensor[(637), float32] */)
}

def @func_12742() -> (Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(72), uint64]) {
  %273 = @func_6602() /* ty=Tensor[(72), float32] */;
  %274 = cast(%273, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %275 = reshape(%274, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %276 = @func_4561(%275) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64]) */;
  %277 = @func_4707() /* ty=Tensor[(7, 12, 4), float64] */;
  %278 = %276.4;
  (%277, %273, %278)
}

def @func_10532(%var_10530: Tensor[(1, 637), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(1, 637), float32]) {
  @func_10529(%var_10530) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(1, 637), float32]) */
}

def @func_6168() -> (Tensor[(7, 12, 4), float64],) {
  %281 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %279 = @func_1827() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
    %280 = %279.1;
    (%280,)
  };
  %281() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_10708(%var_10645: Tensor[(15, 16, 8), int64], %var_10646: Tensor[(15, 16, 8), int64]) -> (Tensor[(15, 16, 8), uint32], Tensor[(15, 16, 8), float64], Tensor[(72), uint64]) {
  %282 = cast(%var_10646, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
  %283 = shape_of(%var_10645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%var_10645, dtype="bool") /* ty=Tensor[(15, 16, 8), bool] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %286 = not_equal(%284, %285) /* ty=Tensor[(15, 16, 8), bool] */;
  %287 = cast(%var_10645, dtype="uint32") /* ty=Tensor[(15, 16, 8), uint32] */;
  %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%286, dtype="uint32") /* ty=Tensor[(15, 16, 8), uint32] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %291 = cast(%var_10646, dtype="float32") /* ty=Tensor[(15, 16, 8), float32] */;
  %292 = asinh(%291) /* ty=Tensor[(15, 16, 8), float32] */;
  %293 = cast(%292, dtype="float64") /* ty=Tensor[(15, 16, 8), float64] */;
  %294 = multiply(%289, %290) /* ty=Tensor[(15, 16, 8), uint32] */;
  %295 = tan(%293) /* ty=Tensor[(15, 16, 8), float64] */;
  %296 = @func_10554() /* ty=Tensor[(72), uint64] */;
  (%294, %295, %296)
}

def @func_6772() -> (Tensor[(7, 12, 4), float64],) {
  %297 = @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %298 = %297.1;
  (%298,)
}

def @func_12345(%var_12342: Tensor[(64), float32], %var_12343: Tensor[(11, 2), float32], %var_12344: Tensor[(924), int32]) -> (Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(64), float32], Tensor[(11, 2), float32], Tensor[(7, 12, 4), float64], Tensor[(924), int32]) {
  %311 = fn (%var_12315: Tensor[(64), float32], %var_12316: Tensor[(11, 2), float32], %var_12327: Tensor[(924), int32]) -> (Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(64), float32], Tensor[(11, 2), float32], Tensor[(7, 12, 4), float64], Tensor[(924), int32]) {
    %299 = @func_5213() /* ty=(Tensor[(72), float32],) */;
    %300 = cast(%var_12315, dtype="float32") /* ty=Tensor[(64), float32] */;
    %301 = cast(%var_12316, dtype="float32") /* ty=Tensor[(11, 2), float32] */;
    %302 = reshape(%300, newshape=[64]) /* ty=Tensor[(64), float32] */;
    %303 = reshape(%301, newshape=[22]) /* ty=Tensor[(22), float32] */;
    %304 = @func_4418(%302, %303) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32], Tensor[(64), float32], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %305 = cast(%var_12327, dtype="int32") /* ty=Tensor[(924), int32] */;
    %306 = reshape(%305, newshape=[924]) /* ty=Tensor[(924), int32] */;
    %307 = @func_5451(%306) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(924), int32]) */;
    %308 = %299.0;
    %309 = %304.3;
    %310 = %307.1;
    (%308, %309, %var_12315, %var_12316, %310, %var_12327)
  };
  %311(%var_12342, %var_12343, %var_12344) /* ty=(Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(64), float32], Tensor[(11, 2), float32], Tensor[(7, 12, 4), float64], Tensor[(924), int32]) */
}

def @func_7526() -> (Tensor[(7, 12, 4), float64],) {
  %312 = @func_2497() /* ty=(Tensor[(72), float32], Tensor[(72), uint64], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %313 = %312.3;
  (%313,)
}

def @func_1574() -> Tensor[(7, 12, 4), float64] {
  %315 = fn () -> Tensor[(7, 12, 4), float64] {
    %314 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
    %314.1
  };
  %315() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_2188() -> (Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) {
  @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_2079() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_4875() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %316 = @func_3293() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %317 = @func_2879() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %318 = @func_4707() /* ty=Tensor[(7, 12, 4), float64] */;
  %319 = %316.0;
  %320 = %317.0;
  (%318, %319, %320)
}

def @func_11200() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(144), uint64], Tensor[(72), uint64]) {
  %335 = fn () -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(144), uint64], Tensor[(72), uint64]) {
    %321 = @func_9350() /* ty=(Tensor[(72), uint64],) */;
    %322 = @func_10833() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %323 = cast(meta[relay.Constant][12] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
    %324 = cast(meta[relay.Constant][12] /* ty=Tensor[(144), uint64] */, dtype="uint64") /* ty=Tensor[(144), uint64] */;
    %325 = reshape(%323, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint64] */;
    %326 = reshape(%324, newshape=[8, 3, 6]) /* ty=Tensor[(8, 3, 6), uint64] */;
    %327 = @func_9568(%325, %326) /* ty=(Tensor[(8, 3, 6), uint64], Tensor[(72), uint64]) */;
    %328 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
    %329 = %321.0;
    %330 = %322.0;
    %331 = @func_5179() /* ty=Tensor[(72), float32] */;
    %332 = @func_10374() /* ty=Tensor[(7, 12, 4), float64] */;
    %333 = %327.1;
    %334 = %328.1;
    (%329, %330, %331, %332, %333, meta[relay.Constant][12] /* ty=Tensor[(144), uint64] */, %334)
  };
  %335() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(144), uint64], Tensor[(72), uint64]) */
}

def @func_4857() -> (Tensor[(7, 12, 4), float32],) {
  %337 = fn () -> (Tensor[(7, 12, 4), float32],) {
    %336 = @func_4475() /* ty=Tensor[(7, 12, 4), float32] */;
    (%336,)
  };
  %337() /* ty=(Tensor[(7, 12, 4), float32],) */
}

def @func_3567() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_11369() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %338 = @func_3293() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %339 = @func_7190() /* ty=Tensor[(7, 12, 4), float64] */;
  %340 = %338.0;
  (%339, %340)
}

def @func_12895() -> Tensor[(7, 12, 4), float64] {
  %342 = fn () -> Tensor[(7, 12, 4), float64] {
    %341 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %341.0
  };
  %342() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_7528() -> (Tensor[(7, 12, 4), float64],) {
  @func_7526() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_813() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %343 = @func_745() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %344 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %345 = %343.0;
  %346 = %344.2;
  (%345, %346)
}

def @func_8000() -> Tensor[(7, 12, 4), float64] {
  %348 = fn () -> Tensor[(7, 12, 4), float64] {
    %347 = @func_6167() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %347.0
  };
  %348() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_9615(%var_9614: Tensor[(2, 15, 14), int8]) -> (Tensor[(2, 15, 14), bool],) {
  %354 = fn (%var_9608: Tensor[(2, 15, 14), int8]) -> (Tensor[(2, 15, 14), bool],) {
    %349 = cast(%var_9608, dtype="bool") /* ty=Tensor[(2, 15, 14), bool] */;
    %350 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(2, 15, 14), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %351 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 15, 14), int8] */, dtype="bool") /* ty=Tensor[(2, 15, 14), bool] */;
    %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %353 = equal(%351, %352) /* ty=Tensor[(2, 15, 14), bool] */;
    (%353,)
  };
  %354(%var_9614) /* ty=(Tensor[(2, 15, 14), bool],) */
}

def @func_9877() -> Tensor[(7, 12, 4), float64] {
  @func_9875() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_4974() -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) {
  %362 = fn () -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) {
    %355 = @func_4016() /* ty=(Tensor[(72), uint64], Tensor[(8, 9, ?), float32]) */;
    %356 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %357 = @func_4475() /* ty=Tensor[(7, 12, 4), float32] */;
    %358 = @func_3122() /* ty=Tensor[(7, 12, 4), float64] */;
    %359 = %355.0;
    %360 = @func_2367() /* ty=Tensor[(7, 12, 4), float32] */;
    %361 = %356.0;
    (%357, %358, %359, %360, %361)
  };
  %362() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */
}

def @func_13811() -> Tensor[(7, 12, 4), uint64] {
  %363 = @func_2274() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %363.2
}

def @func_13570() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %364 = @func_6112() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %365 = @func_6167() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %366 = @func_2132() /* ty=Tensor[(7, 12, 4), float64] */;
  %367 = %364.0;
  %368 = %365.0;
  (%366, %367, %368)
}

def @func_12405(%var_12404: Tensor[(3, 11, 5), float32]) -> Tensor[(3, 11, 5), float32] {
  %370 = fn (%var_12400: Tensor[(3, 11, 5), float32]) -> Tensor[(3, 11, 5), float32] {
    %369 = cast(%var_12400, dtype="float32") /* ty=Tensor[(3, 11, 5), float32] */;
    atan(%369) /* ty=Tensor[(3, 11, 5), float32] */
  };
  %370(%var_12404) /* ty=Tensor[(3, 11, 5), float32] */
}

def @func_13254() -> (Tensor[(72), float32], Tensor[(8, 9, ?), uint64], Tensor[(7, 12, 4), float64]) {
  %378 = fn () -> (Tensor[(72), float32], Tensor[(8, 9, ?), uint64], Tensor[(7, 12, 4), float64]) {
    %371 = @func_5213() /* ty=(Tensor[(72), float32],) */;
    %372 = %371.0;
    %373 = cast(%372, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %374 = reshape(%373, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
    %375 = @func_142(%374) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */;
    %376 = %375.0;
    %377 = @func_7190() /* ty=Tensor[(7, 12, 4), float64] */;
    (%372, %376, %377)
  };
  %378() /* ty=(Tensor[(72), float32], Tensor[(8, 9, ?), uint64], Tensor[(7, 12, 4), float64]) */
}

def @func_8344() -> Tensor[(72), uint64] {
  %379 = fn () -> Tensor[(72), uint64] {
    @func_4028() /* ty=Tensor[(72), uint64] */
  };
  %379() /* ty=Tensor[(72), uint64] */
}

def @func_2719() -> (Tensor[(7, 12, 4), float64],) {
  @func_2717() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_8575() -> Tensor[(7, 12, 4), float64] {
  %380 = @func_1999() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %380.0
}

def @func_3205(%var_3189: Tensor[(7, 12, 4), float64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
  %381 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %382 = @func_731() /* ty=Tensor[(7, 12, 4), float64] */;
  %383 = cast(%var_3189, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
  %384 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%382, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %387 = %381.0;
  %388 = mod(%385, %386) /* ty=Tensor[(7, 12, 4), float32] */;
  (%387, %388)
}

def @func_5828() -> (Tensor[(7, 12, 4), float64],) {
  @func_5826() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_1113() -> (Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
  @func_1111() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */
}

def @func_7140(%var_7123: float64, %var_7124: Tensor[(10, 4, 14), float64]) -> (Tensor[(10, 4, 14), float64], Tensor[(7, 13, 7), uint16], Tensor[(637), float32]) {
  %389 = cast(%var_7123, dtype="float64") /* ty=float64 */;
  %390 = cast(%var_7124, dtype="float64") /* ty=Tensor[(10, 4, 14), float64] */;
  %391 = cast(meta[relay.Constant][14] /* ty=Tensor[(637), float32] */, dtype="float32") /* ty=Tensor[(637), float32] */;
  %392 = reshape(%391, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), float32] */;
  %393 = @func_3425(%392) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float32], Tensor[(7, 13, 7), uint16]) */;
  %394 = floor_mod(%389, %390) /* ty=Tensor[(10, 4, 14), float64] */;
  %395 = %393.3;
  (%394, %395, meta[relay.Constant][14] /* ty=Tensor[(637), float32] */)
}

def @func_8953(%var_8951: Tensor[(336), float64]) -> (Tensor[(11, 2), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(336), bool]) {
  @func_8950(%var_8951) /* ty=(Tensor[(11, 2), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(336), bool]) */
}

def @func_9571(%var_9569: Tensor[(8, 3, 6), uint64], %var_9570: Tensor[(8, 3, 6), uint64]) -> (Tensor[(8, 3, 6), uint64], Tensor[(72), uint64]) {
  %402 = fn (%var_9557: Tensor[(8, 3, 6), uint64], %var_9558: Tensor[(8, 3, 6), uint64]) -> (Tensor[(8, 3, 6), uint64], Tensor[(72), uint64]) {
    %396 = cast(%var_9558, dtype="uint64") /* ty=Tensor[(8, 3, 6), uint64] */;
    %397 = shape_of(%var_9557, dtype="int32") /* ty=Tensor[(3), int32] */;
    %398 = cast(%var_9557, dtype="uint64") /* ty=Tensor[(8, 3, 6), uint64] */;
    %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %400 = minimum(%398, %399) /* ty=Tensor[(8, 3, 6), uint64] */;
    %401 = @func_1755() /* ty=Tensor[(72), uint64] */;
    (%400, %401)
  };
  %402(%var_9569, %var_9570) /* ty=(Tensor[(8, 3, 6), uint64], Tensor[(72), uint64]) */
}

def @func_11468() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(9, 1, 14), float32], Tensor[(126), float32]) {
  %411 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(9, 1, 14), float32], Tensor[(126), float32]) {
    %403 = @func_11114() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
    %404 = @func_9350() /* ty=(Tensor[(72), uint64],) */;
    %405 = cast(meta[relay.Constant][15] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %406 = reshape(%405, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
    %407 = @func_7088(%406) /* ty=(Tensor[(9, 1, 14), float32],) */;
    %408 = %403.0;
    %409 = %404.0;
    %410 = %407.0;
    (%408, %409, %410, meta[relay.Constant][15] /* ty=Tensor[(126), float32] */)
  };
  %411() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(9, 1, 14), float32], Tensor[(126), float32]) */
}

def @func_9350() -> (Tensor[(72), uint64],) {
  %412 = @func_8554() /* ty=(Tensor[(72), uint64],) */;
  %413 = %412.0;
  (%413,)
}

def @func_12785(%var_12783: Tensor[(10, 11, 14), int16], %var_12784: Tensor[(10, 11, 14), int16]) -> (Tensor[(10, 11, 14), int16], Tensor[(7, 12, 4), float64], Tensor[(72), float32]) {
  @func_12781(%var_12783, %var_12784) /* ty=(Tensor[(10, 11, 14), int16], Tensor[(7, 12, 4), float64], Tensor[(72), float32]) */
}

def @func_2334() -> Tensor[(7, 12, 4), float64] {
  @func_2332() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_1596() -> Tensor[(7, 12, 4), float32] {
  %414 = @func_1399() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(18, 4), uint64], Tensor[(72), uint64]) */;
  %414.0
}

def @func_13498(%var_13493: Tensor[(2, 14, 6), float32], %var_13494: Tensor[(2, 14, 6), float32]) -> Tensor[(2, 14, 6), float32] {
  %415 = cast(%var_13494, dtype="float32") /* ty=Tensor[(2, 14, 6), float32] */;
  %416 = shape_of(%var_13493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(%var_13493, dtype="float32") /* ty=Tensor[(2, 14, 6), float32] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%417, %418) /* ty=Tensor[(2, 14, 6), float32] */
}

def @func_4421(%var_4419: Tensor[(64), float32], %var_4420: Tensor[(22), float32]) -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32], Tensor[(64), float32], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %443 = fn (%var_4359: Tensor[(64), float32], %var_4360: Tensor[(22), float32]) -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32], Tensor[(64), float32], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
    %419 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %420 = @func_2060() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %421 = @func_3975() /* ty=Tensor[(72), uint64] */;
    %422 = cast(%421, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %423 = reshape(%422, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
    %424 = @func_142(%423) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */;
    %425 = cast(%var_4359, dtype="float32") /* ty=Tensor[(64), float32] */;
    %426 = cast(%var_4360, dtype="float32") /* ty=Tensor[(22), float32] */;
    %427 = reshape(%425, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
    %428 = reshape(%426, newshape=[22]) /* ty=Tensor[(22), float32] */;
    %429 = @func_1480(%427, %428) /* ty=(Tensor[(4, 4, 4), int32], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32]) */;
    %430 = @func_2717() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %431 = @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %432 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %433 = @func_2367() /* ty=Tensor[(7, 12, 4), float32] */;
    %434 = %419.0;
    %435 = %420.1;
    %436 = %424.0;
    %437 = %429.3;
    %438 = @func_2332() /* ty=Tensor[(7, 12, 4), float64] */;
    %439 = @func_1934() /* ty=Tensor[(7, 12, 4), float64] */;
    %440 = %430.0;
    %441 = %431.0;
    %442 = %432.1;
    (%433, %434, %421, %435, %436, %437, %var_4359, %var_4360, %438, %439, %440, %441, %442)
  };
  %443(%var_4419, %var_4420) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32], Tensor[(64), float32], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_1730() -> Tensor[(7, 12, 4), float64] {
  %444 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %444.0
}

def @func_8673() -> Tensor[(1, 6, 13), float32] {
  %445 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 6, 13), float32] */, dtype="float32") /* ty=Tensor[(1, 6, 13), float32] */;
  log10(%445) /* ty=Tensor[(1, 6, 13), float32] */
}

def @func_11371() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_11369() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_13593() -> (Tensor[(7, 12, 4), float32],) {
  %446 = @func_13343() /* ty=(Tensor[(7, 12, 4), float32],) */;
  %447 = %446.0;
  (%447,)
}

def @func_6515() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %448 = @func_3363() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %449 = @func_4875() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %450 = %448.0;
  %451 = %449.0;
  (%450, %451)
}

def @func_5889() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
  @func_5887() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */
}

def @func_3808() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %452 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %453 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %454 = %453.0;
  %455 = cast(%454, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
  %456 = reshape(%455, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float32] */;
  %457 = @func_3073(%456) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), int16], Tensor[(7, 12, 4), float64]) */;
  %458 = %452.2;
  %459 = %457.0;
  (%458, %454, %459)
}

def @func_6450(%var_6448: Tensor[(637), float32], %var_6449: Tensor[(637), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(637), int16], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %482 = fn (%var_6368: Tensor[(637), float32], %var_6411: Tensor[(637), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(637), int16], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
    %460 = cast(%var_6368, dtype="float32") /* ty=Tensor[(637), float32] */;
    %461 = reshape(%460, newshape=[7, 13, 7]) /* ty=Tensor[(7, 13, 7), float32] */;
    %462 = @func_3425(%461) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float32], Tensor[(7, 13, 7), uint16]) */;
    %463 = @func_2511() /* ty=(Tensor[(72), uint64],) */;
    %464 = cast(%var_6411, dtype="int8") /* ty=Tensor[(637), int8] */;
    %465 = shape_of(%var_6368, dtype="int32") /* ty=Tensor[(1), int32] */;
    %466 = cast(%var_6368, dtype="int8") /* ty=Tensor[(637), int8] */;
    %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?), int8] */;
    %468 = maximum(%466, %467) /* ty=Tensor[(637), int8] */;
    %469 = cast(%468, dtype="int16") /* ty=Tensor[(637), int16] */;
    %470 = shape_of(%var_6411, dtype="int32") /* ty=Tensor[(1), int32] */;
    %471 = cast(%var_6411, dtype="int16") /* ty=Tensor[(637), int16] */;
    %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?), int16] */;
    %473 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %474 = @func_813() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
    %475 = @func_3122() /* ty=Tensor[(7, 12, 4), float64] */;
    %476 = %462.1;
    %477 = %463.0;
    %478 = @func_1755() /* ty=Tensor[(72), uint64] */;
    %479 = bitwise_xor(%471, %472) /* ty=Tensor[(637), int16] */;
    %480 = %473.0;
    %481 = %474.1;
    (%475, %476, %477, %478, %479, %480, %481)
  };
  %482(%var_6448, %var_6449) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(637), int16], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */
}

def @func_747() -> (Tensor[(7, 12, 4), float64],) {
  @func_745() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_4030() -> Tensor[(72), uint64] {
  @func_4028() /* ty=Tensor[(72), uint64] */
}

def @func_6479() -> (Tensor[(7, 12, 4), float32],) {
  %484 = fn () -> (Tensor[(7, 12, 4), float32],) {
    %483 = @func_2283() /* ty=Tensor[(7, 12, 4), float32] */;
    (%483,)
  };
  %484() /* ty=(Tensor[(7, 12, 4), float32],) */
}

def @func_3075(%var_3074: Tensor[(7, 12, 4), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), int16], Tensor[(7, 12, 4), float64]) {
  %497 = fn (%var_3049: Tensor[(7, 12, 4), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), int16], Tensor[(7, 12, 4), float64]) {
    %485 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %486 = @func_1827() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
    %487 = %486.2;
    %488 = cast(%487, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
    %489 = exp(%488) /* ty=Tensor[(7, 12, 4), float32] */;
    %490 = cast(%var_3049, dtype="int16") /* ty=Tensor[(7, 12, 4), int16] */;
    %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
    %492 = cast(%489, dtype="int16") /* ty=Tensor[(7, 12, 4), int16] */;
    %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %494 = %485.0;
    %495 = maximum(%492, %493) /* ty=Tensor[(7, 12, 4), int16] */;
    %496 = @func_1573() /* ty=Tensor[(7, 12, 4), float64] */;
    (%494, %495, %496)
  };
  %497(%var_3074) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), int16], Tensor[(7, 12, 4), float64]) */
}

def @func_6517() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_6515() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_745() -> (Tensor[(7, 12, 4), float64],) {
  %498 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %499 = %498.1;
  (%499,)
}

def @func_6112() -> (Tensor[(7, 12, 4), float64],) {
  %500 = @func_3293() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %501 = %500.0;
  (%501,)
}

def @func_5017(%var_5015: Tensor[(198), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(6, 11, 3), float32], Tensor[(198), float32], Tensor[(7, 12, 4), float64]) {
  @func_5014(%var_5015) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(6, 11, 3), float32], Tensor[(198), float32], Tensor[(7, 12, 4), float64]) */
}

def @func_7651(%var_7649: Tensor[(1, 126), float32]) -> (Tensor[(7, 12, 4), float32], Tensor[(9, 1, 14), float32], Tensor[(1, 126), float32]) {
  @func_7648(%var_7649) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(9, 1, 14), float32], Tensor[(1, 126), float32]) */
}

def @func_6869() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %502 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %503 = @func_6815() /* ty=Tensor[(7, 12, 4), float64] */;
  %504 = %502.0;
  (%503, %504)
}

def @func_4679() -> (Tensor[(7, 12, 4), float64],) {
  %507 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %505 = @func_2060() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %506 = %505.0;
    (%506,)
  };
  %507() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_12968() -> (Tensor[(5, 7, 13), int16], Tensor[(5, 7, 13), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %508 = cast(meta[relay.Constant][17] /* ty=Tensor[(5, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(5, 7, 13), float64] */;
  %509 = asinh(%508) /* ty=Tensor[(5, 7, 13), float64] */;
  %510 = cast(meta[relay.Constant][17] /* ty=Tensor[(5, 7, 13), float64] */, dtype="int16") /* ty=Tensor[(5, 7, 13), int16] */;
  %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%509, dtype="int16") /* ty=Tensor[(5, 7, 13), int16] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %514 = cast(meta[relay.Constant][17] /* ty=Tensor[(5, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(5, 7, 13), float64] */;
  %515 = @func_6112() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %516 = @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %517 = left_shift(%512, %513) /* ty=Tensor[(5, 7, 13), int16] */;
  %518 = sigmoid(%514) /* ty=Tensor[(5, 7, 13), float64] */;
  %519 = %515.0;
  %520 = %516.2;
  (%517, %518, %519, %520)
}

def @func_14066() -> (Tensor[(7, 12, 4), float64],) {
  %521 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %522 = %521.1;
  (%522,)
}

def @func_6329() -> (Tensor[(7, 12, 4), float64],) {
  @func_6327() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_7587() -> Tensor[(7, 12, 4), float64] {
  @func_7585() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_2555() -> Tensor[(7, 12, 4), float64] {
  @func_2553() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_14189(%var_14186: Tensor[(72), uint64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %523 = cast(%var_14186, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %524 = reshape(%523, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %525 = @func_324(%524) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
  %526 = @func_2553() /* ty=Tensor[(7, 12, 4), float64] */;
  %527 = %525.4;
  (%526, %527, %var_14186)
}

def @func_4708() -> Tensor[(7, 12, 4), float64] {
  %528 = fn () -> Tensor[(7, 12, 4), float64] {
    @func_731() /* ty=Tensor[(7, 12, 4), float64] */
  };
  %528() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_5066() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float32]) {
  @func_5064() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float32]) */
}

def @func_14125() -> (Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64]) {
  %532 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64]) {
    %529 = @func_10286() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %530 = %529.1;
    %531 = @func_11217() /* ty=Tensor[(8, 9, ?), uint64] */;
    (%530, %531)
  };
  %532() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64]) */
}

def @func_10353() -> (Tensor[(72), float32],) {
  %533 = @func_3874() /* ty=(Tensor[(72), float32],) */;
  %534 = %533.0;
  (%534,)
}

def @func_2902() -> Tensor[(7, 12, 4), float32] {
  %535 = fn () -> Tensor[(7, 12, 4), float32] {
    @func_1596() /* ty=Tensor[(7, 12, 4), float32] */
  };
  %535() /* ty=Tensor[(7, 12, 4), float32] */
}

def @func_4186() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %543 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
    %536 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %537 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %538 = @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %539 = %536.0;
    %540 = @func_2553() /* ty=Tensor[(7, 12, 4), float64] */;
    %541 = %537.0;
    %542 = %538.0;
    (%539, %540, %541, %542)
  };
  %543() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */
}

def @func_13343() -> (Tensor[(7, 12, 4), float32],) {
  %544 = @func_8850() /* ty=(Tensor[(72), float32], Tensor[(7, 12, 4), float32]) */;
  %545 = %544.1;
  (%545,)
}

def @func_6816() -> Tensor[(7, 12, 4), float64] {
  %547 = fn () -> Tensor[(7, 12, 4), float64] {
    %546 = @func_6772() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %546.0
  };
  %547() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_12781(%var_12750: Tensor[(10, 11, 14), int16], %var_12751: Tensor[(10, 11, 14), int16]) -> (Tensor[(10, 11, 14), int16], Tensor[(7, 12, 4), float64], Tensor[(72), float32]) {
  %548 = cast(%var_12751, dtype="int16") /* ty=Tensor[(10, 11, 14), int16] */;
  %549 = shape_of(%var_12750, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%var_12750, dtype="int16") /* ty=Tensor[(10, 11, 14), int16] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %552 = @func_1724() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %553 = logical_xor(%550, %551) /* ty=Tensor[(10, 11, 14), int16] */;
  %554 = %552.2;
  %555 = @func_6602() /* ty=Tensor[(72), float32] */;
  (%553, %554, %555)
}

def @func_13449() -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %562 = fn () -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
    %556 = @func_6478() /* ty=(Tensor[(7, 12, 4), float32],) */;
    %557 = @func_3293() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %558 = @func_13385() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %559 = %556.0;
    %560 = %557.0;
    %561 = %558.0;
    (%559, %560, %561)
  };
  %562() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_9875() -> Tensor[(7, 12, 4), float64] {
  %563 = @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %563.1
}

def @func_13180() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 132), int32], Tensor[(7, 12, 4), float64]) {
  %574 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 132), int32], Tensor[(7, 12, 4), float64]) {
    %564 = @func_2474() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %565 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 132), int32] */, dtype="int32") /* ty=Tensor[(7, 132), int32] */;
    %566 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 132), int32] */, dtype="int32") /* ty=Tensor[(7, 132), int32] */;
    %567 = reshape(%565, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), int32] */;
    %568 = reshape(%566, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), int32] */;
    %569 = @func_3534(%567, %568) /* ty=(Tensor[(11, 7, 12), int32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(336), float32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %570 = @func_11782() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %571 = %564.0;
    %572 = %569.1;
    %573 = %570.0;
    (%571, %572, meta[relay.Constant][18] /* ty=Tensor[(7, 132), int32] */, %573)
  };
  %574() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 132), int32], Tensor[(7, 12, 4), float64]) */
}

def @func_3427(%var_3426: Tensor[(7, 13, 7), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float32], Tensor[(7, 13, 7), uint16]) {
  %587 = fn (%var_3387: Tensor[(7, 13, 7), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float32], Tensor[(7, 13, 7), uint16]) {
    %575 = @func_2060() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %576 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
    %577 = cast(%var_3387, dtype="float32") /* ty=Tensor[(7, 13, 7), float32] */;
    %578 = log10(%577) /* ty=Tensor[(7, 13, 7), float32] */;
    %579 = cast(%var_3387, dtype="uint16") /* ty=Tensor[(7, 13, 7), uint16] */;
    %580 = shape_of(%578, dtype="int32") /* ty=Tensor[(3), int32] */;
    %581 = cast(%578, dtype="uint16") /* ty=Tensor[(7, 13, 7), uint16] */;
    %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %583 = %575.0;
    %584 = %576.0;
    %585 = @func_2367() /* ty=Tensor[(7, 12, 4), float32] */;
    %586 = logical_xor(%581, %582) /* ty=Tensor[(7, 13, 7), uint16] */;
    (%583, %584, %585, %586)
  };
  %587(%var_3426) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float32], Tensor[(7, 13, 7), uint16]) */
}

def @func_8261(%var_8205: Tensor[(64), float32], %var_8232: Tensor[(22), float32], %var_8238: Tensor[(22), float32], %var_8248: Tensor[(64), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(22), float32], Tensor[(7, 12, 4), float32], Tensor[(2, 16, 16), float32], Tensor[(22), uint16], Tensor[(22), float32], Tensor[(7, 12, 4), float32], Tensor[(126), float32], Tensor[(64), bool]) {
  %588 = @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %589 = @func_1111() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %590 = @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */;
  %591 = cast(%var_8205, dtype="float32") /* ty=Tensor[(64), float32] */;
  %592 = cast(meta[relay.Constant][19] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
  %593 = reshape(%591, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %594 = reshape(%592, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %595 = @func_1480(%593, %594) /* ty=(Tensor[(4, 4, 4), int32], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32]) */;
  %596 = %595.3;
  %597 = cast(%var_8232, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %598 = shape_of(%596, dtype="int32") /* ty=Tensor[(1), int32] */;
  %599 = cast(%596, dtype="uint16") /* ty=Tensor[(22), uint16] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %601 = cast(%var_8238, dtype="float32") /* ty=Tensor[(22), float32] */;
  %602 = shape_of(%var_8232, dtype="int32") /* ty=Tensor[(1), int32] */;
  %603 = cast(%var_8232, dtype="float32") /* ty=Tensor[(22), float32] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?), float32] */;
  %605 = cast(meta[relay.Constant][20] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %606 = reshape(%605, newshape=[1, 126]) /* ty=Tensor[(1, 126), float32] */;
  %607 = @func_7648(%606) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(9, 1, 14), float32], Tensor[(1, 126), float32]) */;
  %608 = cast(%var_8248, dtype="bool") /* ty=Tensor[(64), bool] */;
  %609 = shape_of(%var_8205, dtype="int32") /* ty=Tensor[(1), int32] */;
  %610 = cast(%var_8205, dtype="bool") /* ty=Tensor[(64), bool] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?), bool] */;
  %612 = %588.1;
  %613 = %589.3;
  %614 = %590.0;
  %615 = logical_xor(%599, %600) /* ty=Tensor[(22), uint16] */;
  %616 = power(%603, %604) /* ty=Tensor[(22), float32] */;
  %617 = %607.0;
  %618 = less(%610, %611) /* ty=Tensor[(64), bool] */;
  (%612, meta[relay.Constant][19] /* ty=Tensor[(22), float32] */, %613, %614, %615, %616, %617, meta[relay.Constant][20] /* ty=Tensor[(126), float32] */, %618)
}

def @func_11783() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %623 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
    %619 = @func_10286() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %620 = @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %621 = %619.2;
    %622 = %620.1;
    (%621, %622)
  };
  %623() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_1400() -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(18, 4), uint64], Tensor[(72), uint64]) {
  %632 = fn () -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(18, 4), uint64], Tensor[(72), uint64]) {
    %624 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
    %625 = cast(meta[relay.Constant][21] /* ty=Tensor[(18, 4), uint64] */, dtype="uint64") /* ty=Tensor[(18, 4), uint64] */;
    %626 = reshape(%625, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %627 = @func_324(%626) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
    %628 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
    %629 = %624.0;
    %630 = %627.4;
    %631 = %628.1;
    (%629, %630, meta[relay.Constant][21] /* ty=Tensor[(18, 4), uint64] */, %631)
  };
  %632() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(18, 4), uint64], Tensor[(72), uint64]) */
}

def @func_7742(%var_7740: Tensor[(99, 2), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(99, 2), int16]) {
  @func_7739(%var_7740) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(99, 2), int16]) */
}

def @func_563() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_9282() -> (Tensor[(72), uint64],) {
  %633 = @func_6545() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float32]) */;
  %634 = %633.0;
  (%634,)
}

def @func_4149() -> (Tensor[(7, 12, 4), float64],) {
  @func_4147() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_8637(%var_8590: Tensor[(9, 13, 4), uint32]) -> (Tensor[(7, 12, 4), float64], Tensor[(9, 13, 4), float32]) {
  %635 = @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %636 = cast(%var_8590, dtype="float32") /* ty=Tensor[(9, 13, 4), float32] */;
  %637 = cos(%636) /* ty=Tensor[(9, 13, 4), float32] */;
  %638 = cast(meta[relay.Constant][22] /* ty=Tensor[(9, 13, 4), uint32] */, dtype="bool") /* ty=Tensor[(9, 13, 4), bool] */;
  %639 = shape_of(%var_8590, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%var_8590, dtype="bool") /* ty=Tensor[(9, 13, 4), bool] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %642 = greater_equal(%640, %641) /* ty=Tensor[(9, 13, 4), bool] */;
  %643 = cast(%642, dtype="float32") /* ty=Tensor[(9, 13, 4), float32] */;
  %644 = shape_of(%637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %645 = cast(%637, dtype="float32") /* ty=Tensor[(9, 13, 4), float32] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %647 = %635.0;
  %648 = divide(%645, %646) /* ty=Tensor[(9, 13, 4), float32] */;
  (%647, %648)
}

def @func_504() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %649 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %650 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %651 = %649.1;
  %652 = %650.0;
  (%651, %652)
}

def @func_12270() -> Tensor[(8, 9, 1), float32] {
  %654 = fn () -> Tensor[(8, 9, 1), float32] {
    %653 = @func_1827() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
    %653.0
  };
  %654() /* ty=Tensor[(8, 9, 1), float32] */
}

def @func_13715() -> (Tensor[(7, 12, 4), float64], Tensor[(?, 6, 13), int16]) {
  %666 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(?, 6, 13), int16]) {
    %655 = @func_13570() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %656 = @func_9390() /* ty=(Tensor[(?, 6, 13), bool],) */;
    %657 = %656.0;
    %658 = cast(%657, dtype="float32") /* ty=Tensor[(?, 6, 13), float32] */;
    %659 = sigmoid(%658) /* ty=Tensor[(?, 6, 13), float32] */;
    %660 = cast(%657, dtype="int16") /* ty=Tensor[(?, 6, 13), int16] */;
    %661 = shape_of(%659, dtype="int32") /* ty=Tensor[(3), int32] */;
    %662 = cast(%659, dtype="int16") /* ty=Tensor[(?, 6, 13), int16] */;
    %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %664 = %655.1;
    %665 = maximum(%662, %663) /* ty=Tensor[(?, 6, 13), int16] */;
    (%664, %665)
  };
  %666() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(?, 6, 13), int16]) */
}

def @func_12484() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %667 = @func_6327() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %668 = @func_5887() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %669 = %667.0;
  %670 = %668.0;
  (%669, %670)
}

def @func_9039() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
  %677 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
    %671 = @func_6327() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %672 = @func_8554() /* ty=(Tensor[(72), uint64],) */;
    %673 = %671.0;
    %674 = @func_2553() /* ty=Tensor[(7, 12, 4), float64] */;
    %675 = %672.0;
    %676 = @func_1730() /* ty=Tensor[(7, 12, 4), float64] */;
    (%673, %674, %675, %676)
  };
  %677() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */
}

def @func_3732(%var_3730: Tensor[(72), uint64], %var_3731: Tensor[(2, 16, 16), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(6, 11, 3), float32], Tensor[(198), float32], Tensor[(2, 16, 16), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_3728(%var_3730, %var_3731) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(6, 11, 3), float32], Tensor[(198), float32], Tensor[(2, 16, 16), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_1999() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %678 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %679 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
  %680 = %678.0;
  %681 = %679.0;
  (%680, %681)
}

def @func_2384(%var_2382: Tensor[(6, 11, 3), float32], %var_2383: Tensor[(6, 11, 3), float32]) -> (Tensor[(6, 11, 3), float32],) {
  @func_2380(%var_2382, %var_2383) /* ty=(Tensor[(6, 11, 3), float32],) */
}

def @func_2717() -> (Tensor[(7, 12, 4), float64],) {
  %682 = @func_1111() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %683 = %682.2;
  (%683,)
}

def @func_9645() -> (Tensor[(7, 12, 4), float64],) {
  %684 = @func_1999() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %685 = %684.0;
  (%685,)
}

def @func_6137() -> (Tensor[(7, 12, 4), float64],) {
  @func_6135() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_8012() -> Tensor[(7, 12, 4), float64] {
  @func_8010() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_877() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) {
  %686 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %687 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %688 = %687.2;
  %689 = cast(%688, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %690 = reshape(%689, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
  %691 = @func_142(%690) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */;
  %692 = %686.1;
  %693 = %691.1;
  (%692, %688, %693)
}

def @func_2061() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %697 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
    %694 = @func_1724() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %695 = @func_1421() /* ty=Tensor[(7, 12, 4), float64] */;
    %696 = %694.1;
    (%695, %696)
  };
  %697() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_2879() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %698 = @func_1573() /* ty=Tensor[(7, 12, 4), float64] */;
  %699 = @func_1573() /* ty=Tensor[(7, 12, 4), float64] */;
  (%698, %699)
}

def @func_2186() -> (Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) {
  %700 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 16, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 16, 16), float32] */;
  %701 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 16, 16), float32] */, dtype="float64") /* ty=Tensor[(2, 16, 16), float64] */;
  %702 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %703 = cos(%700) /* ty=Tensor[(2, 16, 16), float32] */;
  %704 = log(%701) /* ty=Tensor[(2, 16, 16), float64] */;
  %705 = %702.2;
  (%703, %704, %705)
}

def @func_13595() -> (Tensor[(7, 12, 4), float32],) {
  @func_13593() /* ty=(Tensor[(7, 12, 4), float32],) */
}

def @func_13969() -> (Tensor[(72), uint64], Tensor[(15, 10, 10), float32], Tensor[(1500), float32]) {
  %706 = @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %707 = cast(meta[relay.Constant][24] /* ty=Tensor[(1500), float64] */, dtype="float64") /* ty=Tensor[(1500), float64] */;
  %708 = reshape(%707, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), float64] */;
  %709 = cast(meta[relay.Constant][24] /* ty=Tensor[(1500), float64] */, dtype="float32") /* ty=Tensor[(1500), float32] */;
  %710 = %706.0;
  %711 = @func_1971(%708) /* ty=Tensor[(15, 10, 10), float32] */;
  %712 = atanh(%709) /* ty=Tensor[(1500), float32] */;
  (%710, %711, %712)
}

def @func_13854() -> Tensor[(7, 12, 4), float64] {
  %713 = fn () -> Tensor[(7, 12, 4), float64] {
    @func_8575() /* ty=Tensor[(7, 12, 4), float64] */
  };
  %713() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_2332() -> Tensor[(7, 12, 4), float64] {
  @func_1421() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_3874() -> (Tensor[(72), float32],) {
  %714 = @func_2972() /* ty=(Tensor[(72), float32],) */;
  %715 = %714.0;
  (%715,)
}

def @func_2553() -> Tensor[(7, 12, 4), float64] {
  %716 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %716.0
}

def @func_6649() -> Tensor[(7, 12, 4), float64] {
  %717 = @func_4875() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %717.0
}

def @func_8554() -> (Tensor[(72), uint64],) {
  %718 = @func_2511() /* ty=(Tensor[(72), uint64],) */;
  %719 = %718.0;
  (%719,)
}

def @func_10555() -> Tensor[(72), uint64] {
  %721 = fn () -> Tensor[(72), uint64] {
    %720 = @func_4730() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %720.0
  };
  %721() /* ty=Tensor[(72), uint64] */
}

def @func_11658() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %727 = fn () -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
    %722 = @func_10826() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
    %723 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %724 = %722.0;
    %725 = %723.1;
    %726 = @func_8343() /* ty=Tensor[(72), uint64] */;
    (%724, %725, %726)
  };
  %727() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */
}

def @func_12457(%var_12455: Tensor[(2, 8, 2), uint64]) -> Tensor[(2, 8, 2), float32] {
  @func_12454(%var_12455) /* ty=Tensor[(2, 8, 2), float32] */
}

def @func_2498() -> (Tensor[(72), float32], Tensor[(72), uint64], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
  %737 = fn () -> (Tensor[(72), float32], Tensor[(72), uint64], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
    %728 = @func_1111() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
    %729 = cast(meta[relay.Constant][25] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
    %730 = reshape(%729, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), float32] */;
    %731 = @func_637(%730) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(2, ?, 11), bool], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64]) */;
    %732 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
    %733 = %728.1;
    %734 = %731.1;
    %735 = %732.1;
    %736 = @func_2367() /* ty=Tensor[(7, 12, 4), float32] */;
    (%733, %734, meta[relay.Constant][25] /* ty=Tensor[(22), float32] */, %735, %736)
  };
  %737() /* ty=(Tensor[(72), float32], Tensor[(72), uint64], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */
}

def @func_3363() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %738 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %739 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %740 = %738.1;
  %741 = %739.2;
  (%740, %741)
}

def @func_7648(%var_7634: Tensor[(1, 126), float32]) -> (Tensor[(7, 12, 4), float32], Tensor[(9, 1, 14), float32], Tensor[(1, 126), float32]) {
  %742 = cast(%var_7634, dtype="float32") /* ty=Tensor[(1, 126), float32] */;
  %743 = reshape(%742, newshape=[9, 1, 14]) /* ty=Tensor[(9, 1, 14), float32] */;
  %744 = @func_7088(%743) /* ty=(Tensor[(9, 1, 14), float32],) */;
  %745 = @func_2283() /* ty=Tensor[(7, 12, 4), float32] */;
  %746 = %744.0;
  (%745, %746, %var_7634)
}

def @func_10288() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_10286() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_195() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %751 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
    %747 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
    %748 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
    %749 = atan(%747) /* ty=Tensor[(7, 12, 4), float64] */;
    %750 = cos(%748) /* ty=Tensor[(7, 12, 4), float64] */;
    (%749, %750)
  };
  %751() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_14192(%var_14190: Tensor[(72), uint64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  @func_14189(%var_14190) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */
}

def @func_7546() -> (Tensor[(7, 12, 4), float64],) {
  %754 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %752 = @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %753 = %752.0;
    (%753,)
  };
  %754() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_8675() -> Tensor[(1, 6, 13), float32] {
  @func_8673() /* ty=Tensor[(1, 6, 13), float32] */
}

def @func_4147() -> (Tensor[(7, 12, 4), float64],) {
  %755 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %756 = %755.0;
  (%756,)
}

def @func_10828() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
  @func_10826() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */
}

def @func_4017() -> (Tensor[(72), uint64], Tensor[(8, 9, ?), float32]) {
  %763 = fn () -> (Tensor[(72), uint64], Tensor[(8, 9, ?), float32]) {
    %757 = @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %758 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
    %759 = %758.3;
    %760 = cast(%759, dtype="float32") /* ty=Tensor[(8, 9, ?), float32] */;
    %761 = %757.0;
    %762 = sigmoid(%760) /* ty=Tensor[(8, 9, ?), float32] */;
    (%761, %762)
  };
  %763() /* ty=(Tensor[(72), uint64], Tensor[(8, 9, ?), float32]) */
}

def @func_12878(%var_12873: Tensor[(16, 14, 14), float64], %var_12874: Tensor[(16, 14, 14), float64]) -> Tensor[(16, 14, 14), float64] {
  %764 = cast(%var_12874, dtype="float64") /* ty=Tensor[(16, 14, 14), float64] */;
  %765 = shape_of(%var_12873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%var_12873, dtype="float64") /* ty=Tensor[(16, 14, 14), float64] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%766, %767) /* ty=Tensor[(16, 14, 14), float64] */
}

def @func_326(%var_325: Tensor[(72), uint64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
  %778 = fn (%var_296: Tensor[(72), uint64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
    %768 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %769 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %770 = cast(%var_296, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %771 = reshape(%770, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
    %772 = @func_142(%771) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */;
    %773 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %774 = %768.0;
    %775 = %769.0;
    %776 = %772.0;
    %777 = %773.1;
    (%774, %775, %776, %var_296, %777)
  };
  %778(%var_325) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */
}

def @func_3926() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %779 = @func_3293() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %780 = %779.0;
  %781 = cast(%780, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  %782 = reshape(%781, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
  %783 = @func_968(%782) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %784 = %783.3;
  (%780, %784)
}

def @func_1756() -> Tensor[(72), uint64] {
  %786 = fn () -> Tensor[(72), uint64] {
    %785 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
    %785.1
  };
  %786() /* ty=Tensor[(72), uint64] */
}

def @func_2077() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %787 = @func_745() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %788 = @func_1934() /* ty=Tensor[(7, 12, 4), float64] */;
  %789 = %787.0;
  (%788, %789)
}

def @func_4756() -> (Tensor[(7, 12, 4), float32], Tensor[(72), uint64]) {
  %790 = @func_2901() /* ty=Tensor[(7, 12, 4), float32] */;
  %791 = @func_3975() /* ty=Tensor[(72), uint64] */;
  (%790, %791)
}

def @func_6887() -> (Tensor[(7, 12, 4), float64],) {
  @func_6885() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_10529(%var_10522: Tensor[(1, 637), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(1, 637), float32]) {
  %792 = cast(%var_10522, dtype="float32") /* ty=Tensor[(1, 637), float32] */;
  %793 = cast(%var_10522, dtype="float32") /* ty=Tensor[(1, 637), float32] */;
  %794 = reshape(%792, newshape=[637]) /* ty=Tensor[(637), float32] */;
  %795 = reshape(%793, newshape=[637]) /* ty=Tensor[(637), float32] */;
  %796 = @func_6447(%794, %795) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(72), uint64], Tensor[(72), uint64], Tensor[(637), int16], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %797 = @func_9463() /* ty=Tensor[(7, 12, 4), float64] */;
  %798 = %796.3;
  (%797, %798, %var_10522)
}

def @func_7585() -> Tensor[(7, 12, 4), float64] {
  %799 = @func_4678() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %799.0
}

def @func_12797() -> Tensor[(7, 12, 4), float32] {
  %801 = fn () -> Tensor[(7, 12, 4), float32] {
    %800 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
    %800.0
  };
  %801() /* ty=Tensor[(7, 12, 4), float32] */
}

def @func_8556() -> (Tensor[(72), uint64],) {
  @func_8554() /* ty=(Tensor[(72), uint64],) */
}

def @func_8640(%var_8638: Tensor[(9, 13, 4), uint32]) -> (Tensor[(7, 12, 4), float64], Tensor[(9, 13, 4), float32]) {
  @func_8637(%var_8638) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(9, 13, 4), float32]) */
}

def @func_13813() -> Tensor[(7, 12, 4), uint64] {
  @func_13811() /* ty=Tensor[(7, 12, 4), uint64] */
}

def @func_12744() -> (Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(72), uint64]) {
  @func_12742() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(72), uint64]) */
}

def @func_4877() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_4875() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_2368() -> Tensor[(7, 12, 4), float32] {
  %802 = fn () -> Tensor[(7, 12, 4), float32] {
    @func_2283() /* ty=Tensor[(7, 12, 4), float32] */
  };
  %802() /* ty=Tensor[(7, 12, 4), float32] */
}

def @func_5887() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
  %803 = @func_2685() /* ty=(Tensor[(7, 12, 4), float32],) */;
  %804 = @func_1730() /* ty=Tensor[(7, 12, 4), float64] */;
  %805 = %803.0;
  (%804, %805)
}

def @func_14275() -> Tensor[(1500), float32] {
  @func_14273() /* ty=Tensor[(1500), float32] */
}

def @func_561() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %806 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %807 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %808 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %809 = %806.1;
  %810 = %807.1;
  %811 = %808.1;
  (%809, %810, %811)
}

def @func_528() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) {
  %822 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) {
    %812 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %813 = cast(meta[relay.Constant][27] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %814 = reshape(%813, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %815 = @func_324(%814) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
    %816 = cast(meta[relay.Constant][27] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %817 = reshape(%816, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
    %818 = @func_142(%817) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */;
    %819 = %812.0;
    %820 = %815.0;
    %821 = %818.0;
    (%819, %820, meta[relay.Constant][27] /* ty=Tensor[(72), uint64] */, %821)
  };
  %822() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */
}

def @func_3318() -> (Tensor[(7, 12, 4), float64],) {
  %824 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %823 = @func_3122() /* ty=Tensor[(7, 12, 4), float64] */;
    (%823,)
  };
  %824() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_8465(%var_8464: Tensor[(12, 12, 11), float64]) -> (Tensor[(12, 12, 11), float64],) {
  %830 = fn (%var_8458: Tensor[(12, 12, 11), float64]) -> (Tensor[(12, 12, 11), float64],) {
    %825 = cast(%var_8458, dtype="float64") /* ty=Tensor[(12, 12, 11), float64] */;
    %826 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(12, 12, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %827 = cast(meta[relay.Constant][28] /* ty=Tensor[(12, 12, 11), float64] */, dtype="float64") /* ty=Tensor[(12, 12, 11), float64] */;
    %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %829 = floor_divide(%827, %828) /* ty=Tensor[(12, 12, 11), float64] */;
    (%829,)
  };
  %830(%var_8464) /* ty=(Tensor[(12, 12, 11), float64],) */
}

def @func_7440() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
  %834 = fn () -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
    %831 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %832 = @func_3975() /* ty=Tensor[(72), uint64] */;
    %833 = %831.1;
    (%832, %833)
  };
  %834() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */
}

def @func_1598() -> Tensor[(7, 12, 4), float32] {
  @func_1596() /* ty=Tensor[(7, 12, 4), float32] */
}

def @func_9985() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(637), float32]) {
  @func_9983() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(637), float32]) */
}

def @func_9664() -> Tensor[(7, 12, 4), float64] {
  @func_9662() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_6766() -> (Tensor[(7, 12, 4), float64],) {
  %837 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %835 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
    %836 = %835.1;
    (%836,)
  };
  %837() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_7091(%var_7089: Tensor[(9, 1, 14), float32]) -> (Tensor[(9, 1, 14), float32],) {
  @func_7088(%var_7089) /* ty=(Tensor[(9, 1, 14), float32],) */
}

def @func_1828() -> (Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) {
  %844 = fn () -> (Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) {
    %838 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
    %839 = @func_745() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %840 = %838.2;
    %841 = %839.0;
    %842 = @func_1596() /* ty=Tensor[(7, 12, 4), float32] */;
    %843 = @func_1730() /* ty=Tensor[(7, 12, 4), float64] */;
    (%840, %841, %842, %843)
  };
  %844() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */
}

def @func_9352() -> (Tensor[(72), uint64],) {
  @func_9350() /* ty=(Tensor[(72), uint64],) */
}

def @func_1422() -> Tensor[(7, 12, 4), float64] {
  %848 = fn () -> Tensor[(7, 12, 4), float64] {
    %845 = @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %846 = %845.0;
    %847 = cast(%846, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
    cosh(%847) /* ty=Tensor[(7, 12, 4), float64] */
  };
  %848() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_7191() -> Tensor[(7, 12, 4), float64] {
  %850 = fn () -> Tensor[(7, 12, 4), float64] {
    %849 = @func_7054() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), float32], Tensor[(7, 12, 4), float64], Tensor[(2, 16, 16), float64]) */;
    %849.8
  };
  %850() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_10598() -> (Tensor[(7, 12, 4), float32],) {
  %851 = @func_2685() /* ty=(Tensor[(7, 12, 4), float32],) */;
  %852 = %851.0;
  (%852,)
}

def @func_10340(%var_10338: Tensor[(70, 6), float32]) -> (Tensor[(2, 15, 14), bool], Tensor[(70, 6), float32], Tensor[(7, 12, 4), float64], Tensor[(5, 5, ?), float32], Tensor[(5, 5, ?), float32]) {
  @func_10337(%var_10338) /* ty=(Tensor[(2, 15, 14), bool], Tensor[(70, 6), float32], Tensor[(7, 12, 4), float64], Tensor[(5, 5, ?), float32], Tensor[(5, 5, ?), float32]) */
}

def @func_3256(%var_3254: Tensor[(5, 7, 14), float32]) -> (Tensor[(5, 7, 14), float32],) {
  @func_3253(%var_3254) /* ty=(Tensor[(5, 7, 14), float32],) */
}

def @func_10826() -> (Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) {
  %853 = @func_4756() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(72), uint64]) */;
  %854 = @func_6112() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %855 = %853.1;
  %856 = %854.0;
  (%855, %856)
}

def @func_8705() -> (Tensor[(7, 12, 4), float64],) {
  %859 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %857 = @func_6515() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %858 = %857.1;
    (%858,)
  };
  %859() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_7913() -> (Tensor[(72), uint64],) {
  %862 = fn () -> (Tensor[(72), uint64],) {
    %860 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
    %861 = %860.1;
    (%861,)
  };
  %862() /* ty=(Tensor[(72), uint64],) */
}

def @func_10203(%var_10202: Tensor[(72), uint64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %875 = fn (%var_10193: Tensor[(72), uint64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
    %863 = @func_5826() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %864 = @func_5887() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
    %865 = @func_3363() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %866 = @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %867 = cast(%var_10193, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %868 = reshape(%867, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %869 = @func_324(%868) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
    %870 = %863.0;
    %871 = %864.0;
    %872 = %865.1;
    %873 = %866.0;
    %874 = %869.4;
    (%870, %871, %872, %873, %874, %var_10193)
  };
  %875(%var_10202) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */
}

def @func_8950(%var_8945: Tensor[(336), float64]) -> (Tensor[(11, 2), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(336), bool]) {
  %876 = @func_5323() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(22), float32], Tensor[(11, 2), float32]) */;
  %877 = cast(meta[relay.Constant][29] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %878 = reshape(%877, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
  %879 = @func_968(%878) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %880 = @func_4185() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %881 = @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %882 = cast(%var_8945, dtype="bool") /* ty=Tensor[(336), bool] */;
  %883 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(336), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %884 = cast(meta[relay.Constant][29] /* ty=Tensor[(336), float64] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?), bool] */;
  %886 = %876.3;
  %887 = %879.4;
  %888 = %880.1;
  %889 = %881.0;
  %890 = greater_equal(%884, %885) /* ty=Tensor[(336), bool] */;
  (%886, %887, %888, %889, %890)
}

def @func_8010() -> Tensor[(7, 12, 4), float64] {
  @func_3122() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_13345() -> (Tensor[(7, 12, 4), float32],) {
  @func_13343() /* ty=(Tensor[(7, 12, 4), float32],) */
}

def @func_4844() -> Tensor[(7, 12, 4), float64] {
  %892 = fn () -> Tensor[(7, 12, 4), float64] {
    %891 = @func_1999() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %891.1
  };
  %892() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_6651() -> Tensor[(7, 12, 4), float64] {
  @func_6649() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_3565() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %893 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %894 = @func_2474() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %895 = %893.1;
  %896 = %894.0;
  (%895, %896)
}

def @func_12454(%var_12435: Tensor[(2, 8, 2), uint64]) -> Tensor[(2, 8, 2), float32] {
  %897 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 8, 2), uint64] */, dtype="uint64") /* ty=Tensor[(2, 8, 2), uint64] */;
  %898 = shape_of(%var_12435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%var_12435, dtype="uint64") /* ty=Tensor[(2, 8, 2), uint64] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %901 = bitwise_and(%899, %900) /* ty=Tensor[(2, 8, 2), uint64] */;
  %902 = cast(%var_12435, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %903 = shape_of(%901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %904 = cast(%901, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%904, %905) /* ty=Tensor[(2, 8, 2), float32] */
}

def @func_9647() -> (Tensor[(7, 12, 4), float64],) {
  @func_9645() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_8084() -> Tensor[(7, 12, 4), float64] {
  %906 = fn () -> Tensor[(7, 12, 4), float64] {
    @func_1730() /* ty=Tensor[(7, 12, 4), float64] */
  };
  %906() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_1934() -> Tensor[(7, 12, 4), float64] {
  @func_1421() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_9269() -> Tensor[(7, 12, 4), float32] {
  %907 = @func_1827() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %907.2
}

def @func_11282() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_11280() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_8507() -> (Tensor[(7, 12, 4), float32],) {
  %910 = fn () -> (Tensor[(7, 12, 4), float32],) {
    %908 = @func_5887() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
    %909 = %908.1;
    (%909,)
  };
  %910() /* ty=(Tensor[(7, 12, 4), float32],) */
}

def @func_7054() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), float32], Tensor[(7, 12, 4), float64], Tensor[(2, 16, 16), float64]) {
  %911 = @func_4875() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %912 = @func_4875() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %913 = @func_4973() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %914 = @func_6112() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %915 = @func_1724() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %916 = @func_2754() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %917 = @func_813() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %918 = @func_4016() /* ty=(Tensor[(72), uint64], Tensor[(8, 9, ?), float32]) */;
  %919 = @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */;
  %920 = %911.2;
  %921 = %912.0;
  %922 = %913.2;
  %923 = %914.0;
  %924 = %915.0;
  %925 = %916.0;
  %926 = %917.1;
  %927 = %918.1;
  %928 = @func_5510() /* ty=Tensor[(7, 12, 4), float64] */;
  %929 = %919.1;
  (%920, %921, %922, %923, %924, %925, %926, %927, %928, %929)
}

def @func_11998(%var_11986: Tensor[(13, 4, 6), int8], %var_11987: Tensor[(13, 4, 6), int8]) -> (Tensor[(13, 4, 6), int8],) {
  %930 = cast(%var_11987, dtype="int8") /* ty=Tensor[(13, 4, 6), int8] */;
  %931 = shape_of(%var_11986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %932 = cast(%var_11986, dtype="int8") /* ty=Tensor[(13, 4, 6), int8] */;
  %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %934 = bitwise_xor(%932, %933) /* ty=Tensor[(13, 4, 6), int8] */;
  (%934,)
}

def @func_10076() -> (Tensor[(?, 6, 13), bool], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float32]) {
  %942 = fn () -> (Tensor[(?, 6, 13), bool], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float32]) {
    %935 = @func_9390() /* ty=(Tensor[(?, 6, 13), bool],) */;
    %936 = @func_1827() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
    %937 = @func_6231() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
    %938 = %935.0;
    %939 = %936.3;
    %940 = %937.1;
    %941 = @func_2283() /* ty=Tensor[(7, 12, 4), float32] */;
    (%938, %939, %940, %941)
  };
  %942() /* ty=(Tensor[(?, 6, 13), bool], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float32]) */
}

def @func_3253(%var_3248: Tensor[(5, 7, 14), float32]) -> (Tensor[(5, 7, 14), float32],) {
  %943 = cast(%var_3248, dtype="float32") /* ty=Tensor[(5, 7, 14), float32] */;
  %944 = log2(%943) /* ty=Tensor[(5, 7, 14), float32] */;
  (%944,)
}

def @func_4591(%var_4587: Tensor[(8, 8), float32], %var_4588: Tensor[(22), float32]) -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(4, 4, 4), int32], Tensor[(8, 8), float32], Tensor[(22), float32]) {
  %945 = cast(%var_4587, dtype="float32") /* ty=Tensor[(8, 8), float32] */;
  %946 = cast(%var_4588, dtype="float32") /* ty=Tensor[(22), float32] */;
  %947 = reshape(%945, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %948 = reshape(%946, newshape=[22]) /* ty=Tensor[(22), float32] */;
  %949 = @func_1480(%947, %948) /* ty=(Tensor[(4, 4, 4), int32], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32]) */;
  %950 = @func_2367() /* ty=Tensor[(7, 12, 4), float32] */;
  %951 = @func_2332() /* ty=Tensor[(7, 12, 4), float64] */;
  %952 = %949.0;
  (%950, %951, %952, %var_4587, %var_4588)
}

def @func_12970() -> (Tensor[(5, 7, 13), int16], Tensor[(5, 7, 13), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_12968() /* ty=(Tensor[(5, 7, 13), int16], Tensor[(5, 7, 13), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_11219() -> Tensor[(8, 9, ?), uint64] {
  @func_11217() /* ty=Tensor[(8, 9, ?), uint64] */
}

def @func_8267(%var_8263: Tensor[(64), float32], %var_8264: Tensor[(22), float32], %var_8265: Tensor[(22), float32], %var_8266: Tensor[(64), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(22), float32], Tensor[(7, 12, 4), float32], Tensor[(2, 16, 16), float32], Tensor[(22), uint16], Tensor[(22), float32], Tensor[(7, 12, 4), float32], Tensor[(126), float32], Tensor[(64), bool]) {
  @func_8261(%var_8263, %var_8264, %var_8265, %var_8266) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(22), float32], Tensor[(7, 12, 4), float32], Tensor[(2, 16, 16), float32], Tensor[(22), uint16], Tensor[(22), float32], Tensor[(7, 12, 4), float32], Tensor[(126), float32], Tensor[(64), bool]) */
}

def @func_12636() -> Tensor[(8, 9, 1), float32] {
  %953 = @func_1827() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %953.0
}

def @func_1974(%var_1972: Tensor[(15, 10, 10), float64]) -> Tensor[(15, 10, 10), float32] {
  @func_1971(%var_1972) /* ty=Tensor[(15, 10, 10), float32] */
}

def @func_1111() -> (Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
  %954 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %955 = @func_813() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %956 = %955.1;
  %957 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
  %958 = %957.2;
  %959 = cast(%958, dtype="float32") /* ty=Tensor[(8, 9, 1), float32] */;
  %960 = shape_of(%956, dtype="int32") /* ty=Tensor[(1), int32] */;
  %961 = cast(%956, dtype="float32") /* ty=Tensor[(72), float32] */;
  %962 = dyn.reshape(%959, %960, newshape=[]) /* ty=Tensor[(?), float32] */;
  %963 = @func_369() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %964 = %963.1;
  %965 = cast(%964, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  %966 = reshape(%965, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
  %967 = @func_968(%966) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %968 = %954.1;
  %969 = mod(%961, %962) /* ty=Tensor[(72), float32] */;
  %970 = %967.0;
  (%968, %969, %964, %970)
}

def @func_6269() -> (Tensor[(7, 12, 4), float64],) {
  %973 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %971 = @func_6148() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %972 = %971.0;
    (%972,)
  };
  %973() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_5324() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(22), float32], Tensor[(11, 2), float32]) {
  %981 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(22), float32], Tensor[(11, 2), float32]) {
    %974 = @func_4875() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %975 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 2), float32] */, dtype="float32") /* ty=Tensor[(11, 2), float32] */;
    %976 = reshape(%975, newshape=[22]) /* ty=Tensor[(22), float32] */;
    %977 = @func_2851(%976) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(4, 4, 4), int32], Tensor[(64), float32], Tensor[(22), float32], Tensor[(7, 12, 4), float64]) */;
    %978 = @func_1421() /* ty=Tensor[(7, 12, 4), float64] */;
    %979 = %974.1;
    %980 = %977.4;
    (%978, %979, %980, meta[relay.Constant][31] /* ty=Tensor[(11, 2), float32] */)
  };
  %981() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(22), float32], Tensor[(11, 2), float32]) */
}

def @func_815() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  @func_813() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */
}

def @func_506() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_504() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_8064(%var_8062: Tensor[(2, 2, 12), uint64], %var_8063: Tensor[(2, 2, 12), uint64]) -> (Tensor[(2, 2, 12), bool], Tensor[(7, 12, 4), float64]) {
  %994 = fn (%var_8019: Tensor[(2, 2, 12), uint64], %var_8020: Tensor[(2, 2, 12), uint64]) -> (Tensor[(2, 2, 12), bool], Tensor[(7, 12, 4), float64]) {
    %982 = cast(%var_8020, dtype="uint64") /* ty=Tensor[(2, 2, 12), uint64] */;
    %983 = shape_of(%var_8019, dtype="int32") /* ty=Tensor[(3), int32] */;
    %984 = cast(%var_8019, dtype="uint64") /* ty=Tensor[(2, 2, 12), uint64] */;
    %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %986 = maximum(%984, %985) /* ty=Tensor[(2, 2, 12), uint64] */;
    %987 = cast(%986, dtype="bool") /* ty=Tensor[(2, 2, 12), bool] */;
    %988 = shape_of(%var_8019, dtype="int32") /* ty=Tensor[(3), int32] */;
    %989 = cast(%var_8019, dtype="bool") /* ty=Tensor[(2, 2, 12), bool] */;
    %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %991 = @func_4678() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %992 = greater_equal(%989, %990) /* ty=Tensor[(2, 2, 12), bool] */;
    %993 = %991.0;
    (%992, %993)
  };
  %994(%var_8062, %var_8063) /* ty=(Tensor[(2, 2, 12), bool], Tensor[(7, 12, 4), float64]) */
}

def @func_10355() -> (Tensor[(72), float32],) {
  @func_10353() /* ty=(Tensor[(72), float32],) */
}

def @func_14286() -> Tensor[(72), float32] {
  %995 = fn () -> Tensor[(72), float32] {
    @func_5179() /* ty=Tensor[(72), float32] */
  };
  %995() /* ty=Tensor[(72), float32] */
}

def @func_4028() -> Tensor[(72), uint64] {
  @func_3975() /* ty=Tensor[(72), uint64] */
}

def @func_12158() -> Tensor[(8, 9, ?), uint64] {
  %996 = fn () -> Tensor[(8, 9, ?), uint64] {
    @func_11217() /* ty=Tensor[(8, 9, ?), uint64] */
  };
  %996() /* ty=Tensor[(8, 9, ?), uint64] */
}

def @func_12638() -> Tensor[(8, 9, 1), float32] {
  @func_12636() /* ty=Tensor[(8, 9, 1), float32] */
}

def @func_3294() -> (Tensor[(7, 12, 4), float64],) {
  %999 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %997 = @func_561() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %998 = %997.0;
    (%998,)
  };
  %999() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_4595(%var_4593: Tensor[(8, 8), float32], %var_4594: Tensor[(22), float32]) -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(4, 4, 4), int32], Tensor[(8, 8), float32], Tensor[(22), float32]) {
  @func_4591(%var_4593, %var_4594) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(4, 4, 4), int32], Tensor[(8, 8), float32], Tensor[(22), float32]) */
}

def @func_5064() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float32]) {
  %1000 = @func_4973() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %1001 = @func_1111() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
  %1002 = @func_1421() /* ty=Tensor[(7, 12, 4), float64] */;
  %1003 = %1000.3;
  %1004 = %1001.3;
  (%1002, %1003, %1004)
}

def @func_10374() -> Tensor[(7, 12, 4), float64] {
  %1005 = @func_3317() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1005.0
}

def @func_8759() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1006 = @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1007 = %1006.2;
  %1008 = @func_6649() /* ty=Tensor[(7, 12, 4), float64] */;
  (%1007, %1008)
}

def @func_5213() -> (Tensor[(72), float32],) {
  %1009 = @func_3874() /* ty=(Tensor[(72), float32],) */;
  %1010 = %1009.0;
  (%1010,)
}

def @func_9284() -> (Tensor[(72), uint64],) {
  @func_9282() /* ty=(Tensor[(72), uint64],) */
}

def @func_11280() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1011 = @func_9806() /* ty=Tensor[(7, 12, 4), float64] */;
  %1012 = @func_10374() /* ty=Tensor[(7, 12, 4), float64] */;
  (%1011, %1012)
}

def @func_7056() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), float32], Tensor[(7, 12, 4), float64], Tensor[(2, 16, 16), float64]) {
  @func_7054() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), float32], Tensor[(7, 12, 4), float64], Tensor[(2, 16, 16), float64]) */
}

def @func_13480() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1017 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
    %1013 = @func_6869() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %1014 = @func_6112() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %1015 = %1013.0;
    %1016 = %1014.0;
    (%1015, %1016)
  };
  %1017() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_12882(%var_12880: Tensor[(16, 14, 14), float64], %var_12881: Tensor[(16, 14, 14), float64]) -> Tensor[(16, 14, 14), float64] {
  @func_12878(%var_12880, %var_12881) /* ty=Tensor[(16, 14, 14), float64] */
}

def @func_7739(%var_7659: Tensor[(99, 2), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(72), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(99, 2), int16]) {
  %1018 = cast(%var_7659, dtype="float32") /* ty=Tensor[(99, 2), float32] */;
  %1019 = reshape(%1018, newshape=[198]) /* ty=Tensor[(198), float32] */;
  %1020 = @func_5014(%1019) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(6, 11, 3), float32], Tensor[(198), float32], Tensor[(7, 12, 4), float64]) */;
  %1021 = @func_4973() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
  %1022 = %1021.0;
  %1023 = cast(%1022, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
  %1024 = @func_5323() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(22), float32], Tensor[(11, 2), float32]) */;
  %1025 = cast(meta[relay.Constant][32] /* ty=Tensor[(99, 2), float32] */, dtype="bool") /* ty=Tensor[(99, 2), bool] */;
  %1026 = shape_of(%var_7659, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1027 = cast(%var_7659, dtype="bool") /* ty=Tensor[(99, 2), bool] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1029 = greater_equal(%1027, %1028) /* ty=Tensor[(99, 2), bool] */;
  %1030 = cast(%1029, dtype="int16") /* ty=Tensor[(99, 2), int16] */;
  %1031 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(99, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1032 = cast(meta[relay.Constant][32] /* ty=Tensor[(99, 2), float32] */, dtype="int16") /* ty=Tensor[(99, 2), int16] */;
  %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1034 = %1020.4;
  %1035 = @func_5179() /* ty=Tensor[(72), float32] */;
  %1036 = log10(%1023) /* ty=Tensor[(7, 12, 4), float64] */;
  %1037 = %1024.1;
  %1038 = logical_xor(%1032, %1033) /* ty=Tensor[(99, 2), int16] */;
  (%1034, %1035, %1036, %1037, %1038)
}

def @func_11869() -> (Tensor[(7, 12, 4), float64],) {
  %1039 = @func_9875() /* ty=Tensor[(7, 12, 4), float64] */;
  (%1039,)
}

def @func_13993() -> (Tensor[(7, 12, 4), float32],) {
  %1040 = @func_6545() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float32]) */;
  %1041 = %1040.1;
  (%1041,)
}

def @func_14217() -> (Tensor[(7, 12, 4), float32],) {
  %1044 = fn () -> (Tensor[(7, 12, 4), float32],) {
    %1042 = @func_1827() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64]) */;
    %1043 = %1042.2;
    (%1043,)
  };
  %1044() /* ty=(Tensor[(7, 12, 4), float32],) */
}

def @func_4563(%var_4562: Tensor[(72), uint64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64]) {
  %1059 = fn (%var_4552: Tensor[(72), uint64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64]) {
    %1045 = @func_2474() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %1046 = %1045.0;
    %1047 = cast(%1046, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
    %1048 = cast(%1046, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
    %1049 = reshape(%1048, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
    %1050 = @func_968(%1049) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
    %1051 = @func_1999() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %1052 = cast(%var_4552, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %1053 = reshape(%1052, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %1054 = @func_324(%1053) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
    %1055 = acosh(%1047) /* ty=Tensor[(7, 12, 4), float64] */;
    %1056 = %1050.1;
    %1057 = %1051.0;
    %1058 = %1054.3;
    (%1055, %1056, %1057, %1058, %var_4552)
  };
  %1059(%var_4562) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64]) */
}

def @func_3876() -> (Tensor[(72), float32],) {
  @func_3874() /* ty=(Tensor[(72), float32],) */
}

def @func_2380(%var_2374: Tensor[(6, 11, 3), float32], %var_2375: Tensor[(6, 11, 3), float32]) -> (Tensor[(6, 11, 3), float32],) {
  %1060 = cast(%var_2375, dtype="float32") /* ty=Tensor[(6, 11, 3), float32] */;
  %1061 = shape_of(%var_2374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1062 = cast(%var_2374, dtype="float32") /* ty=Tensor[(6, 11, 3), float32] */;
  %1063 = dyn.reshape(%1060, %1061, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1064 = mod(%1062, %1063) /* ty=Tensor[(6, 11, 3), float32] */;
  (%1064,)
}

def @func_11599() -> (Tensor[(72), uint64],) {
  %1067 = fn () -> (Tensor[(72), uint64],) {
    %1065 = @func_7265() /* ty=(Tensor[(72), uint64], Tensor[(11, 3, 6), float32]) */;
    %1066 = %1065.0;
    (%1066,)
  };
  %1067() /* ty=(Tensor[(72), uint64],) */
}

def @func_12002(%var_12000: Tensor[(13, 4, 6), int8], %var_12001: Tensor[(13, 4, 6), int8]) -> (Tensor[(13, 4, 6), int8],) {
  @func_11998(%var_12000, %var_12001) /* ty=(Tensor[(13, 4, 6), int8],) */
}

def @func_10712(%var_10710: Tensor[(15, 16, 8), int64], %var_10711: Tensor[(15, 16, 8), int64]) -> (Tensor[(15, 16, 8), uint32], Tensor[(15, 16, 8), float64], Tensor[(72), uint64]) {
  @func_10708(%var_10710, %var_10711) /* ty=(Tensor[(15, 16, 8), uint32], Tensor[(15, 16, 8), float64], Tensor[(72), uint64]) */
}

def @func_5512() -> Tensor[(7, 12, 4), float64] {
  @func_5510() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_3280() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
  %1074 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
    %1068 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %1069 = @func_2879() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %1070 = @func_2497() /* ty=(Tensor[(72), float32], Tensor[(72), uint64], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
    %1071 = %1068.0;
    %1072 = %1069.0;
    %1073 = %1070.4;
    (%1071, %1072, %1073)
  };
  %1074() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */
}

def @func_8801() -> (Tensor[(7, 12, 4), float32],) {
  @func_8799() /* ty=(Tensor[(7, 12, 4), float32],) */
}

def @func_971(%var_969: Tensor[(7, 12, 4), float64]) -> (Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  @func_968(%var_969) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */
}

def @func_1971(%var_1962: Tensor[(15, 10, 10), float64]) -> Tensor[(15, 10, 10), float32] {
  %1075 = cast(%var_1962, dtype="float64") /* ty=Tensor[(15, 10, 10), float64] */;
  %1076 = sqrt(%1075) /* ty=Tensor[(15, 10, 10), float64] */;
  %1077 = cast(%1076, dtype="float32") /* ty=Tensor[(15, 10, 10), float32] */;
  acos(%1077) /* ty=Tensor[(15, 10, 10), float32] */
}

def @func_1483(%var_1481: Tensor[(4, 4, 4), float32], %var_1482: Tensor[(22), float32]) -> (Tensor[(4, 4, 4), int32], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32]) {
  %1098 = fn (%var_1443: Tensor[(4, 4, 4), float32], %var_1477: Tensor[(22), float32]) -> (Tensor[(4, 4, 4), int32], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32]) {
    %1078 = cast(%var_1443, dtype="float64") /* ty=Tensor[(4, 4, 4), float64] */;
    %1079 = rsqrt(%1078) /* ty=Tensor[(4, 4, 4), float64] */;
    %1080 = cast(%var_1443, dtype="float32") /* ty=Tensor[(4, 4, 4), float32] */;
    %1081 = acos(%1080) /* ty=Tensor[(4, 4, 4), float32] */;
    %1082 = cast(%1081, dtype="uint16") /* ty=Tensor[(4, 4, 4), uint16] */;
    %1083 = shape_of(%1079, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1084 = cast(%1079, dtype="uint16") /* ty=Tensor[(4, 4, 4), uint16] */;
    %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1086 = bitwise_or(%1084, %1085) /* ty=Tensor[(4, 4, 4), uint16] */;
    %1087 = cast(%1086, dtype="int32") /* ty=Tensor[(4, 4, 4), int32] */;
    %1088 = shape_of(%var_1443, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1089 = cast(%var_1443, dtype="int32") /* ty=Tensor[(4, 4, 4), int32] */;
    %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1091 = @func_813() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
    %1092 = cast(%var_1477, dtype="float32") /* ty=Tensor[(22), float32] */;
    %1093 = reshape(%1092, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), float32] */;
    %1094 = @func_637(%1093) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(2, ?, 11), bool], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64]) */;
    %1095 = bitwise_xor(%1089, %1090) /* ty=Tensor[(4, 4, 4), int32] */;
    %1096 = %1091.1;
    %1097 = %1094.0;
    (%1095, %1096, %1097, %var_1477)
  };
  %1098(%var_1481, %var_1482) /* ty=(Tensor[(4, 4, 4), int32], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64], Tensor[(22), float32]) */
}

def @func_1282(%var_1279: Tensor[(11, 9, 3), float32], %var_1280: Tensor[(11, 9, 3), float32], %var_1281: Tensor[(72), uint64]) -> (Tensor[(11, 9, 3), float32], Tensor[(7, 12, 4), float64], Tensor[(11, 9, 3), uint8], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), uint16], Tensor[(72), uint64], Tensor[(11, 9, 3), float32]) {
  %1125 = fn (%var_1217: Tensor[(11, 9, 3), float32], %var_1223: Tensor[(11, 9, 3), float32], %var_1229: Tensor[(72), uint64]) -> (Tensor[(11, 9, 3), float32], Tensor[(7, 12, 4), float64], Tensor[(11, 9, 3), uint8], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), uint16], Tensor[(72), uint64], Tensor[(11, 9, 3), float32]) {
    %1099 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 9, 3), float32] */, dtype="float32") /* ty=Tensor[(1, 9, 3), float32] */;
    %1100 = cast(%var_1217, dtype="float32") /* ty=Tensor[(11, 9, 3), float32] */;
    %1101 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %1102 = cast(%var_1223, dtype="uint8") /* ty=Tensor[(11, 9, 3), uint8] */;
    %1103 = shape_of(%var_1217, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1104 = cast(%var_1217, dtype="uint8") /* ty=Tensor[(11, 9, 3), uint8] */;
    %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1106 = cast(%var_1229, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %1107 = reshape(%1106, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
    %1108 = @func_142(%1107) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */;
    %1109 = %1101.1;
    %1110 = cast(%1109, dtype="float64") /* ty=Tensor[(7, 12, 4), float64] */;
    %1111 = reshape(%1110, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float64] */;
    %1112 = @func_968(%1111) /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint16], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
    %1113 = %1108.0;
    %1114 = cast(%1113, dtype="uint64") /* ty=Tensor[(8, 9, ?), uint64] */;
    %1115 = reshape(%1114, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %1116 = @func_324(%1115) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
    %1117 = cast(%var_1217, dtype="float32") /* ty=Tensor[(11, 9, 3), float32] */;
    %1118 = acos(%1117) /* ty=Tensor[(11, 9, 3), float32] */;
    %1119 = cast(%1118, dtype="float32") /* ty=Tensor[(11, 9, 3), float32] */;
    %1120 = mod(%1099, %1100) /* ty=Tensor[(11, 9, 3), float32] */;
    %1121 = maximum(%1104, %1105) /* ty=Tensor[(11, 9, 3), uint8] */;
    %1122 = %1112.1;
    %1123 = %1116.3;
    %1124 = erf(%1119) /* ty=Tensor[(11, 9, 3), float32] */;
    (%1120, %1109, %1121, %1113, %var_1229, %1122, %1123, %1124)
  };
  %1125(%var_1279, %var_1280, %var_1281) /* ty=(Tensor[(11, 9, 3), float32], Tensor[(7, 12, 4), float64], Tensor[(11, 9, 3), uint8], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), uint16], Tensor[(72), uint64], Tensor[(11, 9, 3), float32]) */
}

def @func_11114() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %1126 = @func_6112() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1127 = @func_9350() /* ty=(Tensor[(72), uint64],) */;
  %1128 = %1126.0;
  %1129 = %1127.0;
  (%1128, %1129)
}

def @func_9662() -> Tensor[(7, 12, 4), float64] {
  @func_5760() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_7976(%var_7971: uint16) -> Tensor[(7, 8, 9), uint16] {
  %1130 = cast(%var_7971, dtype="uint16") /* ty=uint16 */;
  %1131 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 8, 9), uint16] */, dtype="uint16") /* ty=Tensor[(7, 8, 9), uint16] */;
  add(%1130, %1131) /* ty=Tensor[(7, 8, 9), uint16] */
}

def @func_10600() -> (Tensor[(7, 12, 4), float32],) {
  @func_10598() /* ty=(Tensor[(7, 12, 4), float32],) */
}

def @func_3208(%var_3206: Tensor[(7, 12, 4), float64]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) {
  @func_3205(%var_3206) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */
}

def @func_13385() -> (Tensor[(7, 12, 4), float64],) {
  %1132 = @func_4147() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1133 = %1132.0;
  (%1133,)
}

def @func_4476() -> Tensor[(7, 12, 4), float32] {
  %1134 = fn () -> Tensor[(7, 12, 4), float32] {
    @func_2283() /* ty=Tensor[(7, 12, 4), float32] */
  };
  %1134() /* ty=Tensor[(7, 12, 4), float32] */
}

def @func_5826() -> (Tensor[(7, 12, 4), float64],) {
  %1135 = @func_4707() /* ty=Tensor[(7, 12, 4), float64] */;
  (%1135,)
}

def @func_11535() -> (Tensor[(72), uint64],) {
  %1138 = fn () -> (Tensor[(72), uint64],) {
    %1136 = @func_4016() /* ty=(Tensor[(72), uint64], Tensor[(8, 9, ?), float32]) */;
    %1137 = %1136.0;
    (%1137,)
  };
  %1138() /* ty=(Tensor[(72), uint64],) */
}

def @func_14273() -> Tensor[(1500), float32] {
  %1139 = @func_13969() /* ty=(Tensor[(72), uint64], Tensor[(15, 10, 10), float32], Tensor[(1500), float32]) */;
  %1139.2
}

def @func_639(%var_638: Tensor[(2, 1, 11), float32]) -> (Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(2, ?, 11), bool], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64]) {
  %1160 = fn (%var_602: Tensor[(2, 1, 11), float32]) -> (Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(2, ?, 11), bool], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64]) {
    %1140 = cast(meta[relay.Constant][35] /* ty=Tensor[(72), uint64] */, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %1141 = reshape(%1140, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
    %1142 = @func_142(%1141) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(8, 9, 1), float32]) */;
    %1143 = cast(%var_602, dtype="float32") /* ty=Tensor[(2, 1, 11), float32] */;
    %1144 = log10(%1143) /* ty=Tensor[(2, 1, 11), float32] */;
    %1145 = cast(%var_602, dtype="bool") /* ty=Tensor[(2, 1, 11), bool] */;
    %1146 = shape_of(%1144, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1147 = cast(%1144, dtype="bool") /* ty=Tensor[(2, 1, 11), bool] */;
    %1148 = dyn.reshape(%1145, %1146, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1149 = not_equal(%1147, %1148) /* ty=Tensor[(2, ?, 11), bool] */;
    %1150 = cast(%1144, dtype="bool") /* ty=Tensor[(2, 1, 11), bool] */;
    %1151 = shape_of(%1149, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1152 = cast(%1149, dtype="bool") /* ty=Tensor[(2, ?, 11), bool] */;
    %1153 = dyn.reshape(%1150, %1151, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1154 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %1155 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
    %1156 = %1142.0;
    %1157 = less_equal(%1152, %1153) /* ty=Tensor[(2, ?, 11), bool] */;
    %1158 = %1154.0;
    %1159 = %1155.3;
    (%1156, meta[relay.Constant][35] /* ty=Tensor[(72), uint64] */, %1157, %1158, %1159)
  };
  %1160(%var_638) /* ty=(Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(2, ?, 11), bool], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64]) */
}

def @func_6885() -> (Tensor[(7, 12, 4), float64],) {
  %1161 = @func_2132() /* ty=Tensor[(7, 12, 4), float64] */;
  (%1161,)
}

def @func_2133() -> Tensor[(7, 12, 4), float64] {
  %1163 = fn () -> Tensor[(7, 12, 4), float64] {
    %1162 = @func_194() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %1162.1
  };
  %1163() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_7266() -> (Tensor[(72), uint64], Tensor[(11, 3, 6), float32]) {
  %1170 = fn () -> (Tensor[(72), uint64], Tensor[(11, 3, 6), float32]) {
    %1164 = @func_4756() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(72), uint64]) */;
    %1165 = cast(meta[relay.Constant][36] /* ty=Tensor[(11, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(11, 3, 6), float32] */;
    %1166 = sinh(%1165) /* ty=Tensor[(11, 3, 6), float32] */;
    %1167 = cast(%1166, dtype="float32") /* ty=Tensor[(11, 3, 6), float32] */;
    %1168 = %1164.1;
    %1169 = acosh(%1167) /* ty=Tensor[(11, 3, 6), float32] */;
    (%1168, %1169)
  };
  %1170() /* ty=(Tensor[(72), uint64], Tensor[(11, 3, 6), float32]) */
}

def @func_10223() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1171 = @func_6885() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1172 = @func_4707() /* ty=Tensor[(7, 12, 4), float64] */;
  %1173 = %1171.0;
  (%1172, %1173)
}

def @func_2686() -> (Tensor[(7, 12, 4), float32],) {
  %1175 = fn () -> (Tensor[(7, 12, 4), float32],) {
    %1174 = @func_1596() /* ty=Tensor[(7, 12, 4), float32] */;
    (%1174,)
  };
  %1175() /* ty=(Tensor[(7, 12, 4), float32],) */
}

def @func_3147() -> (Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64]) {
  %1182 = fn () -> (Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64]) {
    %1176 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
    %1177 = %1176.2;
    %1178 = cast(%1177, dtype="float32") /* ty=Tensor[(8, 9, 1), float32] */;
    %1179 = @func_2879() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %1180 = atanh(%1178) /* ty=Tensor[(8, 9, 1), float32] */;
    %1181 = %1179.0;
    (%1180, %1181)
  };
  %1182() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64]) */
}

def @func_7979(%var_7977: uint16) -> Tensor[(7, 8, 9), uint16] {
  @func_7976(%var_7977) /* ty=Tensor[(7, 8, 9), uint16] */
}

def @func_7802() -> (Tensor[(7, 12, 4), float64],) {
  %1185 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %1183 = @func_2474() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %1184 = %1183.0;
    (%1184,)
  };
  %1185() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_11078(%var_10998: Tensor[(8, 9, 14), bool]) -> (Tensor[(7, 12, 4), float64], Tensor[(8, 9, 14), int16], Tensor[(11, 9, 3), float32], Tensor[(297), float32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(15, 10, 10), float32], Tensor[(1500), float64], Tensor[(8, 9, ?), float64]) {
  %1186 = @func_2077() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1187 = @func_527() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, ?), uint64]) */;
  %1188 = %1187.3;
  %1189 = cast(%1188, dtype="bool") /* ty=Tensor[(8, 9, ?), bool] */;
  %1190 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 9, 14), uint64] */, dtype="bool") /* ty=Tensor[(8, 9, 14), bool] */;
  %1191 = logical_and(%1189, %1190) /* ty=Tensor[(8, 9, 14), bool] */;
  %1192 = cast(%var_10998, dtype="int16") /* ty=Tensor[(8, 9, 14), int16] */;
  %1193 = shape_of(%1191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1194 = cast(%1191, dtype="int16") /* ty=Tensor[(8, 9, 14), int16] */;
  %1195 = dyn.reshape(%1192, %1193, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1196 = cast(meta[relay.Constant][38] /* ty=Tensor[(297), float32] */, dtype="float32") /* ty=Tensor[(297), float32] */;
  %1197 = cast(meta[relay.Constant][38] /* ty=Tensor[(297), float32] */, dtype="float32") /* ty=Tensor[(297), float32] */;
  %1198 = cast(%1188, dtype="uint64") /* ty=Tensor[(8, 9, ?), uint64] */;
  %1199 = reshape(%1196, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float32] */;
  %1200 = reshape(%1197, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float32] */;
  %1201 = reshape(%1198, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %1202 = @func_1278(%1199, %1200, %1201) /* ty=(Tensor[(11, 9, 3), float32], Tensor[(7, 12, 4), float64], Tensor[(11, 9, 3), uint8], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), uint16], Tensor[(72), uint64], Tensor[(11, 9, 3), float32]) */;
  %1203 = @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */;
  %1204 = cast(meta[relay.Constant][39] /* ty=Tensor[(1500), float64] */, dtype="float64") /* ty=Tensor[(1500), float64] */;
  %1205 = reshape(%1204, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), float64] */;
  %1206 = cast(%1188, dtype="float64") /* ty=Tensor[(8, 9, ?), float64] */;
  %1207 = %1186.0;
  %1208 = add(%1194, %1195) /* ty=Tensor[(8, 9, 14), int16] */;
  %1209 = %1202.7;
  %1210 = %1203.1;
  %1211 = @func_8010() /* ty=Tensor[(7, 12, 4), float64] */;
  %1212 = @func_1971(%1205) /* ty=Tensor[(15, 10, 10), float32] */;
  %1213 = tan(%1206) /* ty=Tensor[(8, 9, ?), float64] */;
  (%1207, %1208, %1209, meta[relay.Constant][38] /* ty=Tensor[(297), float32] */, %1210, %1211, %1212, meta[relay.Constant][39] /* ty=Tensor[(1500), float64] */, %1213)
}

def @func_2755() -> (Tensor[(7, 12, 4), float64],) {
  %1215 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %1214 = @func_1421() /* ty=Tensor[(7, 12, 4), float64] */;
    (%1214,)
  };
  %1215() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_2001() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_1999() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_5014(%var_5004: Tensor[(198), float32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(6, 11, 3), float32], Tensor[(198), float32], Tensor[(7, 12, 4), float64]) {
  %1216 = @func_4185() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
  %1217 = @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1218 = cast(%var_5004, dtype="float32") /* ty=Tensor[(198), float32] */;
  %1219 = cast(%var_5004, dtype="float32") /* ty=Tensor[(198), float32] */;
  %1220 = reshape(%1218, newshape=[6, 11, 3]) /* ty=Tensor[(6, 11, 3), float32] */;
  %1221 = reshape(%1219, newshape=[6, 11, 3]) /* ty=Tensor[(6, 11, 3), float32] */;
  %1222 = @func_2380(%1220, %1221) /* ty=(Tensor[(6, 11, 3), float32],) */;
  %1223 = @func_2717() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1224 = %1216.2;
  %1225 = %1217.1;
  %1226 = %1222.0;
  %1227 = %1223.0;
  (%1224, %1225, %1226, %var_5004, %1227)
}

def @func_879() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) {
  @func_877() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(8, 9, 1), float32]) */
}

def @func_11702() -> (Tensor[(13, 15, 6), float64],) {
  %1230 = fn () -> (Tensor[(13, 15, 6), float64],) {
    %1228 = @func_10937() /* ty=(Tensor[(13, 15, 6), float64],) */;
    %1229 = %1228.0;
    (%1229,)
  };
  %1230() /* ty=(Tensor[(13, 15, 6), float64],) */
}

def @func_9192(%var_9191: Tensor[(14, 12, 7), bool]) -> (Tensor[(14, 12, 7), bool], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(1, 72), uint64]) {
  %1241 = fn (%var_9165: Tensor[(14, 12, 7), bool]) -> (Tensor[(14, 12, 7), bool], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(1, 72), uint64]) {
    %1231 = cast(meta[relay.Constant][40] /* ty=Tensor[(14, 12, 7), bool] */, dtype="bool") /* ty=Tensor[(14, 12, 7), bool] */;
    %1232 = shape_of(%var_9165, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1233 = cast(%var_9165, dtype="bool") /* ty=Tensor[(14, 12, 7), bool] */;
    %1234 = dyn.reshape(%1231, %1232, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1235 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 72), uint64] */, dtype="uint64") /* ty=Tensor[(1, 72), uint64] */;
    %1236 = reshape(%1235, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %1237 = @func_324(%1236) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), uint64], Tensor[(7, 12, 4), float64]) */;
    %1238 = logical_or(%1233, %1234) /* ty=Tensor[(14, 12, 7), bool] */;
    %1239 = @func_2332() /* ty=Tensor[(7, 12, 4), float64] */;
    %1240 = %1237.0;
    (%1238, %1239, %1240, meta[relay.Constant][41] /* ty=Tensor[(1, 72), uint64] */)
  };
  %1241(%var_9191) /* ty=(Tensor[(14, 12, 7), bool], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(1, 72), uint64]) */
}

def @func_2512() -> (Tensor[(72), uint64],) {
  %1244 = fn () -> (Tensor[(72), uint64],) {
    %1242 = @func_2274() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), uint64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */;
    %1243 = %1242.4;
    (%1243,)
  };
  %1244() /* ty=(Tensor[(72), uint64],) */
}

def @func_8577() -> Tensor[(7, 12, 4), float64] {
  @func_8575() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_13971() -> (Tensor[(72), uint64], Tensor[(15, 10, 10), float32], Tensor[(1500), float32]) {
  @func_13969() /* ty=(Tensor[(72), uint64], Tensor[(15, 10, 10), float32], Tensor[(1500), float32]) */
}

def @func_9308() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(297), float32], Tensor[(72), uint64]) {
  @func_9306() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(297), float32], Tensor[(72), uint64]) */
}

def @func_13894() -> (Tensor[(7, 12, 4), float64],) {
  %1247 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %1245 = @func_13385() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %1246 = %1245.0;
    (%1246,)
  };
  %1247() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_3123() -> Tensor[(7, 12, 4), float64] {
  %1249 = fn () -> Tensor[(7, 12, 4), float64] {
    %1248 = @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */;
    %1248.2
  };
  %1249() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_10018() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
  %1256 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) {
    %1250 = @func_7545() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %1251 = @func_3926() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %1252 = @func_7265() /* ty=(Tensor[(72), uint64], Tensor[(11, 3, 6), float32]) */;
    %1253 = %1250.0;
    %1254 = %1251.1;
    %1255 = %1252.0;
    (%1253, %1254, %1255)
  };
  %1256() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(72), uint64]) */
}

def @func_13652() -> (Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64]) {
  @func_13650() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(72), uint64]) */
}

def @func_10834() -> (Tensor[(7, 12, 4), float64],) {
  %1258 = fn () -> (Tensor[(7, 12, 4), float64],) {
    %1257 = @func_731() /* ty=Tensor[(7, 12, 4), float64] */;
    (%1257,)
  };
  %1258() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_5250() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1267 = fn () -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
    %1259 = @func_3293() /* ty=(Tensor[(7, 12, 4), float64],) */;
    %1260 = %1259.0;
    %1261 = cast(%1260, dtype="float32") /* ty=Tensor[(7, 12, 4), float32] */;
    %1262 = reshape(%1261, newshape=[7, 12, 4]) /* ty=Tensor[(7, 12, 4), float32] */;
    %1263 = @func_3073(%1262) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), int16], Tensor[(7, 12, 4), float64]) */;
    %1264 = @func_2060() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %1265 = %1263.2;
    %1266 = %1264.0;
    (%1260, %1265, %1266)
  };
  %1267() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_6114() -> (Tensor[(7, 12, 4), float64],) {
  @func_6112() /* ty=(Tensor[(7, 12, 4), float64],) */
}

def @func_10286() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  %1268 = @func_2186() /* ty=(Tensor[(2, 16, 16), float32], Tensor[(2, 16, 16), float64], Tensor[(7, 12, 4), float64]) */;
  %1269 = @func_9306() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(72), uint64], Tensor[(297), float32], Tensor[(72), uint64]) */;
  %1270 = @func_3565() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1271 = %1268.2;
  %1272 = %1269.0;
  %1273 = %1270.1;
  (%1271, %1272, %1273)
}

def @func_9806() -> Tensor[(7, 12, 4), float64] {
  %1274 = @func_3808() /* ty=(Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
  %1274.1
}

def @func_11853() -> Tensor[(8, 9, 1), float32] {
  %1276 = fn () -> Tensor[(8, 9, 1), float32] {
    %1275 = @func_3146() /* ty=(Tensor[(8, 9, 1), float32], Tensor[(7, 12, 4), float64]) */;
    %1275.0
  };
  %1276() /* ty=Tensor[(8, 9, 1), float32] */
}

def @func_9453(%var_9452: Tensor[(2, 15, 14), float32]) -> (Tensor[(2, 15, 14), float64], Tensor[(2, 15, 14), bool]) {
  %1287 = fn (%var_9439: Tensor[(2, 15, 14), float32]) -> (Tensor[(2, 15, 14), float64], Tensor[(2, 15, 14), bool]) {
    %1277 = cast(8.6091f /* ty=float32 */, dtype="bool") /* ty=bool */;
    %1278 = cast(%var_9439, dtype="bool") /* ty=Tensor[(2, 15, 14), bool] */;
    %1279 = greater_equal(%1277, %1278) /* ty=Tensor[(2, 15, 14), bool] */;
    %1280 = cast(%1279, dtype="float64") /* ty=Tensor[(2, 15, 14), float64] */;
    %1281 = cast(%1279, dtype="bool") /* ty=Tensor[(2, 15, 14), bool] */;
    %1282 = shape_of(%var_9439, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1283 = cast(%var_9439, dtype="bool") /* ty=Tensor[(2, 15, 14), bool] */;
    %1284 = dyn.reshape(%1281, %1282, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1285 = sinh(%1280) /* ty=Tensor[(2, 15, 14), float64] */;
    %1286 = greater(%1283, %1284) /* ty=Tensor[(2, 15, 14), bool] */;
    (%1285, %1286)
  };
  %1287(%var_9452) /* ty=(Tensor[(2, 15, 14), float64], Tensor[(2, 15, 14), bool]) */
}

def @func_10225() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_10223() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_11081(%var_11079: Tensor[(8, 9, 14), bool]) -> (Tensor[(7, 12, 4), float64], Tensor[(8, 9, 14), int16], Tensor[(11, 9, 3), float32], Tensor[(297), float32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(15, 10, 10), float32], Tensor[(1500), float64], Tensor[(8, 9, ?), float64]) {
  @func_11078(%var_11079) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(8, 9, 14), int16], Tensor[(11, 9, 3), float32], Tensor[(297), float32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(15, 10, 10), float32], Tensor[(1500), float64], Tensor[(8, 9, ?), float64]) */
}

def @func_2474() -> (Tensor[(7, 12, 4), float64],) {
  %1288 = @func_1399() /* ty=(Tensor[(7, 12, 4), float32], Tensor[(7, 12, 4), float64], Tensor[(18, 4), uint64], Tensor[(72), uint64]) */;
  %1289 = %1288.1;
  (%1289,)
}

def @func_8851() -> (Tensor[(72), float32], Tensor[(7, 12, 4), float32]) {
  %1293 = fn () -> (Tensor[(72), float32], Tensor[(7, 12, 4), float32]) {
    %1290 = @func_5213() /* ty=(Tensor[(72), float32],) */;
    %1291 = %1290.0;
    %1292 = @func_4475() /* ty=Tensor[(7, 12, 4), float32] */;
    (%1291, %1292)
  };
  %1293() /* ty=(Tensor[(72), float32], Tensor[(7, 12, 4), float32]) */
}

def @func_3976() -> Tensor[(72), uint64] {
  %1295 = fn () -> Tensor[(72), uint64] {
    %1294 = @func_2497() /* ty=(Tensor[(72), float32], Tensor[(72), uint64], Tensor[(22), float32], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float32]) */;
    %1294.1
  };
  %1295() /* ty=Tensor[(72), uint64] */
}

def @func_5453(%var_5452: Tensor[(924), int32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(924), int32]) {
  %1304 = fn (%var_5422: Tensor[(924), int32]) -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(924), int32]) {
    %1296 = @func_3363() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %1297 = cast(%var_5422, dtype="int32") /* ty=Tensor[(924), int32] */;
    %1298 = cast(%var_5422, dtype="int32") /* ty=Tensor[(924), int32] */;
    %1299 = reshape(%1297, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), int32] */;
    %1300 = reshape(%1298, newshape=[11, 7, 12]) /* ty=Tensor[(11, 7, 12), int32] */;
    %1301 = @func_3534(%1299, %1300) /* ty=(Tensor[(11, 7, 12), int32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(336), float32], Tensor[(72), uint64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */;
    %1302 = %1296.0;
    %1303 = %1301.5;
    (%1302, %1303, %var_5422)
  };
  %1304(%var_5452) /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64], Tensor[(924), int32]) */
}

def @func_8761() -> (Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) {
  @func_8759() /* ty=(Tensor[(7, 12, 4), float64], Tensor[(7, 12, 4), float64]) */
}

def @func_9464() -> Tensor[(7, 12, 4), float64] {
  %1305 = fn () -> Tensor[(7, 12, 4), float64] {
    @func_5510() /* ty=Tensor[(7, 12, 4), float64] */
  };
  %1305() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_1732() -> Tensor[(7, 12, 4), float64] {
  @func_1730() /* ty=Tensor[(7, 12, 4), float64] */
}

def @func_5510() -> Tensor[(7, 12, 4), float64] {
  %1306 = @func_3293() /* ty=(Tensor[(7, 12, 4), float64],) */;
  %1306.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen509/build/output.py:4544: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen509/build/output.py", line 4549, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(2) tvmgen_default_fused_right_shift_kernel0(signed char* __restrict__ T_right_shift, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  T_right_shift[(((int)threadIdx.x))] = (placeholder[(0)] >> placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


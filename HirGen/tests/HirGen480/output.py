import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_17 = relay.var("var_17", dtype = "float64", shape = (15, 1, 9))#candidate|17|(15, 1, 9)|var|float64
var_18 = relay.var("var_18", dtype = "float64", shape = (15, 16, 9))#candidate|18|(15, 16, 9)|var|float64
bop_19 = relay.less_equal(var_17.astype('bool'), var_18.astype('bool')) # shape=(15, 16, 9)
output = bop_19
output2 = bop_19
func_48 = relay.Function([var_17,var_18,], output)
mod['func_48'] = func_48
mod = relay.transform.InferType()(mod)
var_49 = relay.var("var_49", dtype = "float64", shape = (15, 1, 9))#candidate|49|(15, 1, 9)|var|float64
var_50 = relay.var("var_50", dtype = "float64", shape = (15, 16, 9))#candidate|50|(15, 16, 9)|var|float64
output = func_48(var_49,var_50,)
func_51 = relay.Function([var_49,var_50,], output)
mutated_mod['func_51'] = func_51
mutated_mod = relay.transform.InferType()(mutated_mod)
var_344 = relay.var("var_344", dtype = "float32", shape = (10, 12, 8))#candidate|344|(10, 12, 8)|var|float32
uop_345 = relay.log2(var_344.astype('float32')) # shape=(10, 12, 8)
bop_367 = relay.right_shift(uop_345.astype('uint32'), relay.reshape(var_344.astype('uint32'), relay.shape_of(uop_345))) # shape=(10, 12, 8)
output = relay.Tuple([bop_367,])
output2 = relay.Tuple([bop_367,])
func_372 = relay.Function([var_344,], output)
mod['func_372'] = func_372
mod = relay.transform.InferType()(mod)
mutated_mod['func_372'] = func_372
mutated_mod = relay.transform.InferType()(mutated_mod)
var_373 = relay.var("var_373", dtype = "float32", shape = (10, 12, 8))#candidate|373|(10, 12, 8)|var|float32
func_372_call = mutated_mod.get_global_var('func_372')
call_374 = func_372_call(var_373)
output = call_374
func_375 = relay.Function([var_373], output)
mutated_mod['func_375'] = func_375
mutated_mod = relay.transform.InferType()(mutated_mod)
var_732 = relay.var("var_732", dtype = "float64", shape = (13, 6, 14))#candidate|732|(13, 6, 14)|var|float64
uop_733 = relay.asinh(var_732.astype('float64')) # shape=(13, 6, 14)
output = uop_733
output2 = uop_733
func_737 = relay.Function([var_732,], output)
mod['func_737'] = func_737
mod = relay.transform.InferType()(mod)
mutated_mod['func_737'] = func_737
mutated_mod = relay.transform.InferType()(mutated_mod)
var_738 = relay.var("var_738", dtype = "float64", shape = (13, 6, 14))#candidate|738|(13, 6, 14)|var|float64
func_737_call = mutated_mod.get_global_var('func_737')
call_739 = func_737_call(var_738)
output = call_739
func_740 = relay.Function([var_738], output)
mutated_mod['func_740'] = func_740
mutated_mod = relay.transform.InferType()(mutated_mod)
var_859 = relay.var("var_859", dtype = "float32", shape = (13, 1, 12))#candidate|859|(13, 1, 12)|var|float32
uop_860 = relay.rsqrt(var_859.astype('float32')) # shape=(13, 1, 12)
bop_866 = relay.bitwise_xor(var_859.astype('uint32'), relay.reshape(uop_860.astype('uint32'), relay.shape_of(var_859))) # shape=(13, 1, 12)
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
const_872 = relay.const([[-3.307505,-2.478161,4.083470,7.187904,-4.132966,-5.872037,8.595940,1.634918,-2.318333],[0.364531,-4.165045,5.213790,-9.208309,-7.171281,-7.549616,-4.625862,2.453961,3.069472],[9.044660,3.496491,6.460558,-8.241977,7.532722,-4.116376,5.272307,-5.585332,8.884355],[-7.208613,7.318416,-5.792320,9.536917,-7.002318,2.485288,0.006646,1.068325,-0.769916],[-9.908751,0.019358,-4.461180,6.532338,9.841197,8.456433,5.949162,-9.865308,-7.540254],[-9.860538,5.770555,-8.794823,-4.023516,-0.520388,-6.928969,-9.650240,4.716960,1.720601],[5.790187,2.394839,-4.593024,6.605106,5.703326,-6.511297,-5.900705,5.102244,-8.433384],[-4.840744,6.345116,-4.193827,2.378033,-8.388330,-0.598829,-5.020823,-6.466959,-4.762327],[-8.434132,-7.847235,3.317883,5.566064,0.064857,7.846019,1.959704,-3.706366,-9.762204],[-7.953434,4.960485,-6.005952,-4.000880,0.029660,9.501061,-8.752765,-1.130063,3.457684],[7.432239,2.271945,8.622791,-2.394614,9.570821,6.803429,4.434975,7.436250,-7.311154],[-1.395719,2.719959,8.126436,9.576599,-0.448659,-9.778732,3.200213,9.210979,-1.228548],[-1.811272,5.304480,4.953292,5.734886,-0.456751,4.963595,0.411404,-1.359864,0.317311],[6.103569,1.474005,-5.331780,7.263849,9.224634,7.774392,1.509821,8.348937,8.983877],[6.532396,7.033702,9.873072,-4.618519,0.377475,9.020314,-3.626972,6.956530,0.808891]], dtype = "float64")#candidate|872|(15, 9)|const|float64
const_873 = relay.const([6.052937,-3.468845,2.356041,1.653627,-2.561077,0.213647,-0.591052,-4.786917,6.138615,8.632836,-3.086251,3.541201,9.800280,-5.068418,4.943134,-8.881121,-3.463308,0.298396,-6.009099,-1.688768,2.786351,-2.646024,-7.875646,-9.800652,-0.015637,7.238888,9.464066,0.269737,0.272858,6.263332,-0.711221,2.087869,-1.087838,-6.413881,1.895814,5.434797,-8.723063,-6.549901,-6.416959,2.879950,7.545456,-6.615931,0.505840,0.592335,5.018050,-2.568251,-5.001128,-7.961688,-4.611165,3.372378,9.076536,9.888848,8.534323,-0.892794,-8.097126,-2.199840,-6.178192,7.867993,-5.388003,-2.849689,7.206696,3.761889,-8.941882,4.014534,-0.558486,-4.696180,2.014769,-3.102505,-2.964148,3.351572,-8.480723,-3.586475,-6.356639,-4.014442,-5.232121,-4.957627,0.684814,-9.129974,9.858254,4.197125,-6.364335,1.787336,1.463624,-2.927886,-8.377259,-8.930513,-5.279945,-3.357598,-6.973835,9.794310,8.105672,6.616933,-5.293882,3.456104,6.720198,0.360343,-2.467777,3.012467,-8.743007,4.683381,5.983532,1.399568,-2.087688,-7.073330,2.598816,-0.037129,6.215517,4.787384,8.985811,5.771441,6.854469,-3.548264,6.547114,0.302397,-6.702933,0.998220,4.246240,0.154320,-3.648376,-7.274593,1.172287,-4.766934,-9.911272,-7.726398,-0.207005,-9.056750,9.127942,-7.607902,1.388144,-5.195922,-2.778139,2.910065,5.612767,-0.606297,0.548443,6.903508,0.653942,3.423724,8.059347,1.266846,-6.401444,-8.683220,-3.243382,-0.805408,-2.821280,5.064104,-3.526821,-7.273025,5.719115,4.552904,-6.826431,-8.268867,8.860194,5.671464,9.654036,-6.670239,6.449305,8.271047,3.600771,0.468455,2.976182,8.494554,9.714288,8.788659,-3.296972,2.612608,8.147937,-9.710631,-6.206537,2.408217,-8.050076,7.247514,-2.665343,8.294204,-6.149263,-5.948817,-2.061195,-9.194381,5.119052,-2.724732,-1.588717,-7.715069,0.239493,-6.398713,4.536741,-9.571547,-5.128594,4.759464,-6.647923,-1.735636,3.219024,-8.570945,-8.978986,6.034049,-8.747141,7.903132,-1.172957,-5.689214,-5.492803,4.475309,5.398462,3.532017,6.708155,-6.026215,-1.642979,-0.859425,1.714127,7.433059,0.905958,-0.808359,-5.716155,7.199139,6.083687,8.258453,-2.374857,7.405854,-4.106242,2.130870,3.138762,8.893499,1.390342,3.737513,7.634439,-7.654693,-2.478748,-0.956070,1.442376,1.205629,-9.036020,-8.052264,8.545879,-5.387469,6.499820,2.589717,8.488282,-5.474128,-1.127078,-2.155999,-7.602714,8.594037,7.936043,6.332984,4.017475,6.962957,0.572433,-8.046143,-7.929949,-4.448319,5.210783,-3.119646,3.045125,5.739842,2.686188,3.814144,-7.547348,-3.887285,-4.943358,-0.736652,-5.677763,7.896141,-9.666096,-3.656165,-5.084575,-9.031633,-5.840632,9.078457,0.607865,8.435010,-4.322494,-5.400638,0.007496,-0.193617,-1.882231,3.926619,-4.967837,0.772908,7.880788,0.401304,-0.745002,3.468759,6.272353,-8.175179,4.500161,4.502244,-0.156234,-5.802492,-4.049693,-2.808564,-3.998760,0.514053,-4.206177,6.377226,-7.441964,-9.134274,-3.878530,3.731569,-0.523939,-7.047979,5.915801,1.975640,5.815224,-5.954801,-3.438183,-3.472483,-0.480865,4.764909,-0.140108,-6.273305,-1.876135,-9.690933,-6.062257,-0.195206,5.796514,-8.842930,-4.993726,0.486963,-1.012261,8.061747,-9.286754,9.651419,7.043844,9.878883,0.761811,-7.357219,-5.978647,-1.500690,-4.414482,5.268968,8.350393,-9.604823,6.229005,7.091483,1.425783,-1.088002,-0.594000,3.711214,0.955357,-6.365215,-3.988397,-6.020264,0.960833,-7.963407,3.696413,0.847874,3.918211,-4.433750,1.633931,-7.511567,-4.219778,-2.729593,-3.123945,-2.735125,8.423406,-5.874070,9.356494,-9.896161,0.205920,-1.594162,1.150375,8.176669,6.769170,6.276658,0.113716,-0.361878,7.375505,1.630116,-0.575080,6.864020,-2.033399,1.258013,-3.535625,-1.234682,-0.658318,-2.188576,-5.344889,6.672220,3.587055,3.753483,-5.382080,-4.136444,-7.697271,-6.505642,7.824390,-3.057131,7.305912,4.215415,-5.925724,-0.936431,-1.777186,-2.055430,-9.907284,-1.516420,-3.328867,7.745842,2.070608,-7.117977,3.445325,-1.217287,-1.411960,-7.078950,9.009316,2.623827,8.602060,-4.225124,-2.514467,-7.763850,-4.470556,-9.870367,-3.715220,-6.864813,5.906549,-5.579750,6.748156,4.497598,6.892066,9.320190,8.393664,-9.977206,-2.411446,-5.037081,3.332462,-8.605020,-5.431694,1.703076,-5.655832,-4.858451,-6.076009,-5.782514,-7.477750,-7.304696,3.129001,-8.655961,-6.222900,3.504849,2.536298,-9.017879,-3.539987,5.488101,6.947470,-0.595921,-2.794836,-8.229034,6.019474,-5.212349,-2.002000,3.604574,-5.554796,5.901641,7.526091,-8.621385,-9.855355,5.835130,1.179986,3.947684,0.736558,-1.365426,2.357009,4.560962,2.554560,-3.230581,-1.150281,2.585787,9.320771,9.756143,4.081066,9.428525,-6.557035,-5.799071,3.160906,3.586156,1.550126,-4.391619,-9.308389,9.367918,9.450644,5.634721,-8.225346,9.121602,1.358221,-1.251909,-1.177289,9.560166,-6.569018,-8.190167,5.925740,2.581129,1.573292,7.441433,4.445291,4.679071,-0.235439,-1.001976,6.341878,-2.924583,-0.326099,8.220746,2.945279,-4.169396,-7.484204,4.490474,-9.487766,8.585511,8.335350,9.515584,3.265676,2.008139,0.346695,-1.780254,4.999498,-1.582136,6.296960,-8.119796,-8.034613,8.441597,2.607139,-3.616503,9.597537,4.005226,9.475517,6.963541,6.188475,-8.953132,-2.225969,8.372618,-9.794349,7.880445,0.368266,-8.101891,-0.831405,4.336175,-8.475781,7.814034,7.794420,-1.281842,1.147369,2.624770,8.309312,-8.310462,6.868342,1.873540,2.720529,1.162315,2.465987,-0.676666,5.835346,0.760733,1.738418,9.303777,-5.254093,9.761885,2.183983,-2.497955,5.533693,-4.981703,9.461545,-4.788918,4.758961,9.921533,6.250265,-4.756248,2.620485,-0.148604,2.635405,4.731597,-8.272759,4.709601,-1.594891,-3.343373,-6.265600,-9.044225,-7.993499,-8.682059,-7.473055,-2.225914,8.283636,4.261908,2.729343,-8.369869,3.944814,-7.641739,-5.413937,-9.529715,1.231142,-0.108786,5.608192,2.016143,6.322500,3.002281,-1.921808,4.668630,7.214576,-1.430620,9.096268,0.235790,9.878708,-2.035089,5.388046,-1.627716,5.910682,3.027103,6.755414,-5.799418,-6.903060,-6.814189,-0.689374,4.722091,-8.043520,-3.759378,-8.874098,5.398756,5.342688,5.250309,-0.761714,7.595702,1.873142,-4.445430,-3.202990,5.928887,1.008184,0.854687,-0.599404,1.260288,-7.840770,-8.220857,2.332002,-8.315235,8.635928,8.442941,2.104356,5.113486,6.049152,4.173888,-5.758643,6.013592,7.363390,0.023022,0.238836,-6.501630,-6.197954,-9.055499,-0.068045,-6.998337,-8.389567,7.251168,7.415138,-3.618630,5.454660,-4.419090,7.394637,1.416571,-5.120843,-2.698252,6.156913,9.032913,7.491496,9.274403,1.558107,1.594406,9.746242,8.518502,8.544259,-3.542998,-8.921522,-5.455556,-0.570439,-0.445416,2.074420,-9.375951,4.082979,-9.700539,6.669395,2.785562,-3.442126,-3.135223,0.254831,-9.659521,-9.759818,7.215360,7.922974,-3.748861,8.456800,-9.888496,9.511033,2.580264,-9.260653,4.575510,8.013803,-3.169417,1.438535,-6.514428,9.603220,5.142664,2.462939,-7.442678,-6.120510,-0.565308,4.316944,-0.671550,0.665653,6.661588,-0.850818,2.121092,2.996065,3.859317,-3.641465,-4.652954,-3.077605,8.112370,-5.136806,-2.024078,-9.788758,1.324297,0.148415,-5.827570,1.986775,-8.440747,-5.659093,-2.753529,-4.636962,-2.974521,5.435796,-6.944457,-1.137247,6.263343,3.698803,-6.344596,-0.606537,7.173108,4.410448,-5.922212,9.656053,-7.368753,-9.174992,-7.459578,-2.559582,1.689755,2.516123,6.192748,-5.970460,-5.840290,-9.963954,2.577498,-3.884936,-6.189435,8.123494,5.876668,-1.800566,-8.848123,-0.302161,9.307861,-1.514651,-4.724139,-8.438938,5.577872,-6.912046,-3.257656,-0.969585,0.736421,-3.568552,1.491469,-8.026412,-3.676209,-6.347320,7.089852,0.377316,-5.850057,4.488582,8.355216,-1.720184,-7.897531,2.503698,-2.609822,8.185404,-5.110125,8.120326,0.479601,-2.661828,-7.870474,-3.634225,8.119926,-4.383962,6.529466,-9.876696,3.648303,-6.428149,7.205999,-4.093102,0.397026,7.503733,2.787208,3.486343,-3.206267,3.993104,4.397643,-8.203650,4.811914,-7.039297,1.407959,-9.918549,8.063049,-6.361207,-9.226160,-2.316154,-7.989714,2.766163,6.255688,-7.583294,1.462186,-4.876275,-7.395207,6.663046,-7.503013,-6.629032,6.375918,-2.603999,0.463106,3.804098,-7.068569,-4.380710,-9.306745,-9.869212,-8.280149,8.039979,-6.534632,-0.207480,0.327975,6.756930,7.420582,4.711546,-3.038067,-4.270462,-3.001171,5.577224,0.604445,-6.470768,2.828558,7.986235,4.132404,7.754494,7.451210,-7.158646,-8.043999,-1.698173,-3.493453,-2.683529,4.677951,-2.237571,-5.791190,-9.864060,9.774855,7.914751,-3.820121,5.650366,-8.847219,9.390156,-5.809513,-9.715004,1.394609,5.422477,-0.481782,-9.074800,-4.524282,6.371547,-5.692753,-6.020623,-7.342418,6.390692,7.277500,3.599317,7.542373,8.143437,-3.440132,-5.206988,-4.173064,5.050316,9.887548,-0.289351,9.588192,1.908080,-3.910922,6.700739,2.963771,8.310224,0.389820,-0.705601,9.776407,2.055579,9.712253,-8.746717,2.174379,-3.093308,5.382867,-3.832199,3.770612,9.982895,4.355955,-2.637041,1.920263,2.035795,-3.574405,2.505763,8.261720,-6.217142,2.202185,-9.918918,-6.735504,9.694957,-7.007665,-9.140493,3.374916,9.335027,2.550099,-8.899700,3.068283,2.698976,1.642732,5.472356,4.429638,-3.263754,-1.043159,7.983413,4.260349,0.486605,-6.774719,1.412577,4.744910,0.216211,5.269123,3.374858,6.790863,-4.246846,7.480741,-2.645528,0.581481,3.211585,5.441640,5.708663,-8.803590,-2.136977,-9.723106,-7.191172,-3.725746,-7.272912,8.710310,-9.863096,7.145115,-9.399290,2.991823,5.296716,6.350735,-2.637117,-6.882629,4.723165,-4.051367,2.718744,-8.634076,-2.412663,0.734163,-0.172505,-5.711876,-7.054775,4.811516,5.563904,8.515593,-2.593904,7.338818,6.361947,-3.952203,-0.662657,2.421012,0.828770,-3.642899,-3.184700,4.276719,-7.160160,-4.441302,0.472863,8.501447,-0.521434,5.969522,3.891719,5.414091,-6.091544,-8.006180,1.698790,1.469994,7.462321,-8.423102,0.454392,-3.478272,-1.197825,-9.227008,-6.006269,-5.659734,-3.817071,8.611180,-1.933213,8.274676,-5.130969,-8.728266,5.388933,3.209961,7.599392,-6.197924,1.131768,-0.036402,4.640133,2.198683,2.887932,-3.173140,3.632931,6.730644,2.017775,1.749110,-8.823744,5.000965,5.903241,-4.286624,-6.673314,9.269867,6.953118,9.770310,8.270887,5.409051,-3.231909,-5.665552,4.418864,-8.183971,-4.993794,1.179562,3.685500,-8.701851,6.796592,5.013405,-5.408952,7.206199,-3.543450,-5.776098,0.559909,-2.589531,-5.640756,5.388689,2.876691,-4.406860,2.441912,-6.551268,-3.826070,9.654426,-5.777976,7.163731,-9.742256,-8.875880,-2.915170,-9.368817,-8.075726,4.984792,1.446971,4.814561,-2.735565,3.408984,2.481107,-3.516502,-0.134890,1.880789,-6.918344,4.068327,3.297617,-7.497320,1.155483,7.341475,7.748534,-5.719915,4.382055,3.885986,0.141445,-6.180381,9.223153,-6.864402,-2.666696,-6.857803,-2.127141,2.407359,3.832440,9.418127,-3.694292,6.618019,-0.098248,3.061825,2.397831,6.379932,2.193201,7.423960,2.419250,-3.167465,0.808589,-2.908437,7.582021,0.267894,4.742600,0.322672,1.146502,-0.959506,-6.117597,9.750948,-3.903133,-8.752385,-5.849031,-2.283211,8.849782,-7.502703,6.995497,-3.639066,-3.742580,-1.191872,3.012179,-2.959329,-1.419326,-8.636488,-0.298038,-4.762143,-2.054859,-9.215073,-4.356760,-3.337010,9.986465,-3.684213,-3.363951,0.693987,-0.791864,-0.936944,1.530583,-0.897252,2.199395,-5.508983,-0.308526,1.034223,6.080362,-5.195989,-5.907581,4.204427,0.395651,7.686267,5.425549,-2.088257,-0.947745,8.238716,1.630703,5.956991,-1.224016,-3.289231,-1.450315,9.043064,1.421331,5.397908,4.299087,-4.187773,-2.622335,-3.153728,-2.905241,2.980048,5.332520,3.539350,-6.589765,-5.116621,-8.382745,7.096046,-8.216760,0.716828,-4.839230,8.100522,1.042479,-3.739369,1.414192,8.369225,-6.541756,-3.959305,4.514580,-6.264678,-5.923810,-9.048754,-2.795047,7.065625,9.165128,-5.808458,8.964006,0.864400,7.614434,-8.214467,-5.457063,7.542031,-3.871697,-8.159070,9.053493,1.542972,2.763844,-0.774684,-9.421016,-2.184162,-3.008262,0.798117,4.435396,4.972186,9.538797,9.586322,1.375311,-8.311040,3.103745,-3.035287,6.684801,-8.836510,7.563066,-5.008629,7.943892,5.627781,-8.358936,9.374815,3.366872,-0.856334,0.639689,-1.985859,-4.476220,-8.058642,-0.217320,-0.630542,7.899845,-3.118780,-7.222072,-3.385105,-7.540408,8.532554,-3.044865,-0.429607,9.642333,-3.535400,-5.882895,-4.781890,8.032894,-1.470718,0.874129,-1.267695,-4.337816,8.124145,3.089868,-8.655732,-4.202237,-2.934716,-5.674816,-5.727636,-7.643839,-9.611835,-7.344982,8.946111,-9.621431,6.305252,8.830246,-4.000554,-3.765123,-3.410998,1.768870,4.599786,-3.265233,-2.835321,-3.733161,3.734372,-0.377677,-1.574255,-2.280727,-5.095722,3.481854,-4.337141,4.332462,-6.651826,-4.562061,-7.313867,5.540409,0.074512,1.019982,9.222227,3.585522,-0.230299,-3.136941,-1.391582,2.395555,3.679099,-4.313140,2.219368,-2.462492,2.944196,-0.143265,-1.065366,-3.141421,6.216320,-9.362546,0.819373,5.484772,0.719789,-4.221523,-7.369448,-7.946876,3.982586,6.606097,5.318178,-3.294006,1.373774,-4.320450,4.722022,8.702614,-0.008480,1.086103,9.297676,-6.402882,-9.168685,-1.001490,-1.384936,9.778451,1.846512,-9.841676,-3.847745,-3.839575,5.055670,-0.578562,7.157211,8.456971,4.240670,2.768962,-4.061500,0.533689,5.235863,3.730622,-3.710360,8.859974,-9.004967,-8.557719,-6.578071,-9.055536,0.531768,-2.942291,-2.337735,1.015641,-4.912905,7.301140,-0.951527,-7.155427,-8.849975,7.217968,-1.032196,2.560782,-2.936965,7.233531,-6.289672,-8.566791,-5.200378,-6.150161,-9.218471,-6.110474,-0.522221,4.134563,-9.640149,-0.454000,-7.384432,-3.502735,-2.815808,4.411718,2.845808,-9.957322,-8.723997,-7.330516,2.299785,5.133615,-8.385042,6.104000,4.976358,5.481674,-7.742441,3.458532,0.012016,4.052027,2.011168,-4.463277,7.566359,-4.164667,3.245319,7.595722,2.574517,-1.672066,-4.182543,-2.454255,3.609535,-6.454433,-5.182897,-9.376813,0.550192,7.559817,-1.077526,0.491247,-4.757818,8.784030,-6.314470,3.120804,3.967155,3.534987,0.632914,-2.123877,3.160867,-6.177464,-6.897614,1.727889,-8.129976,-6.248061,-4.770865,-0.299338,7.520914,-1.050162,-4.165400,2.831806,-1.984609,-0.423329,-3.706878,-8.875741,3.534775,2.024389,0.375067,5.742766,-8.281034,-9.765096,1.175381,8.752276,-6.471797,0.639400,4.331026,-7.329935,3.218925,9.541984,6.111790,-2.116819,-1.392003,-2.029124,-3.657933,9.789695,5.873540,-1.548661,1.392235,7.661589,8.947825,-3.768194,3.929126,-6.121928,2.404213,1.742262,5.106155,9.686109,8.955977,0.320974,6.316100,-7.110883,-8.841217,-8.364806,7.374236,0.133622,-3.042593,0.642804,6.778456,-9.121586,-0.370452,3.380016,0.281166,7.114242,2.413186,8.664885,-9.580070,1.077325,-0.145754,-0.727832,-5.430864,-5.107642,5.638383,-9.330966,-1.518273,-5.303870,-8.521083,-2.287746,-2.534933,5.309353,8.046458,4.267299,-7.723604,-0.886185,-7.186698,-6.919544,8.583918,0.297388,0.726248,9.436001,-0.465953,-1.193810,0.758634,7.038011,-4.856129,9.737375,1.368282,9.948411,-4.129110,-4.261574,-6.837809,0.638525,1.295011,8.314914,-4.579826,-3.715760,-2.645196,-1.292786,-5.100144,1.551914,-7.032964,-3.818004,5.561574,7.046730,4.855595,-5.857677,5.087975,5.122089,-3.602775,6.055504,5.187956,-4.339273,-7.141902,-2.808311,-0.689847,3.354640,-1.840847,-6.806281,-1.263187,5.486232,4.131911,7.848312,7.919310,1.704699,6.873015,9.513916,6.378707,-9.445646,-0.183612,-4.265408,0.545019,5.252502,1.310955,6.024978,6.297728,7.879958,2.450748,3.995753,-5.207579,-6.580398,4.551743,-4.833411,9.940938,-3.442853,5.011874,-6.832299,6.389526,6.329983,9.093170,-9.235080,7.853602,7.964693,-8.976489,-2.410108,-2.181479,9.362247,-7.734298,-5.691861,-9.481402,4.758598,4.627643,-2.591853,8.353721,6.749649,7.981009,7.546096,1.263058,4.470501,-1.912587,-0.300726,-0.824107,-7.696826,-8.025392,9.686447,-6.261576,-8.112415,-0.569515,-6.536916,-4.374614,2.019359,4.834111,7.853995,6.269648,-4.241785,-2.995731,-0.909360,-1.959170,3.512782,4.856356,-5.470464,5.420035,0.660004,9.850533,9.524003,8.514484,5.339639,7.630336,-7.610704,1.978544,-5.123531,1.998335,8.359980,-8.649808,-2.978972,2.864894,0.505046,-2.015510,-0.236518,-3.046703,4.015930,-1.529354,-6.441927,0.744596,1.996023,0.749093,-0.173719,-1.523463,5.224033,-0.277446,3.446529,-8.213428,-7.607501,8.246930,-7.271986,-5.515789,-7.352696,1.845620,7.217669,3.718014,2.593610,-9.460344,0.269253,1.628769,2.261715,4.381979,7.997983,5.847439,-9.905152,4.448943,-4.465942,-0.330292,-9.897154,0.257897,8.956719,-9.092173,-8.998887,-7.801705,-2.144636,-1.528498,-6.866293,-8.227791,6.839941,1.812139,-8.531469,-0.802193,1.798240,7.385036,-3.121228,0.138641,8.661471,0.140166,-1.288615,-9.055447,4.753696,2.697566,-5.811193,-3.052823,6.292064,1.616493,-4.862111,1.508023,-9.507972,7.384613,0.114594,-7.851539,7.466170,-3.852488,-8.773688,-6.277652,0.707258,6.775729,0.281991,8.511411,6.435903,-4.606674,2.041957,0.837392,1.038293,-2.050209,7.257811,6.914763,-5.950113,5.778734,-1.164790,1.424669,6.713454,9.258447,-1.437880,1.503521,0.040846,0.168312,4.649357,2.440980,0.777712,-5.915292,-3.051913,4.526539,4.745215,2.764431,-1.835982,-9.242628,0.842599,-9.013559,-8.004185,-1.423922,-5.200593,-2.526547,-2.234119,-3.256861,-3.489628,9.482520,-0.085901,7.551873,4.797408,-2.784704,4.857082,2.527089,-1.774808,-1.953939,1.175290,4.190291,-7.761005,-4.790717,4.014063,9.679409,1.430864,-7.602543,0.589166,0.225847,0.132044,1.984471,-3.094266,4.164480,-3.513368,-1.106048,-3.995573,0.351135,0.353808,-3.211899,-2.232346,-6.319614,-0.632920,-0.195061,5.398985,-8.987811,0.556233,5.478096,-5.787945,-8.501270,9.023039,-3.389629,-1.906494,-0.330046,4.530902,-3.090026,-7.328745,0.628713,-4.043084,2.982060,-5.116409,-9.412529,4.262794,3.484486,-1.539977,-3.175407,-3.089372,-9.234379,8.834580,3.573195,7.341212,-5.656626,-0.036104,-2.908590,7.060048,-5.155967,9.799357,2.528450,0.956329,-5.740983,9.836566,0.944763,1.034511,-3.845906,-3.483246,-9.465646,-9.556664,-6.616090,-8.356957,8.599800,-7.386151,9.921248,-9.133383,-0.372893,-8.490929,7.779938,8.599773,0.244449,-0.629927,8.805562,2.368033,-2.493747,8.749775,1.426359,8.029174,1.219063,-4.090217,6.843684,-0.292509,-2.111771,-3.864497,-0.804789,-2.504707,3.251568,8.864207,-3.249344,-5.941573,-6.764246,3.422974,0.700353,-6.206015,-6.566297,-8.350660,6.185165,7.735325,9.179711,-3.913768,9.617262,2.289438,3.710571,-1.689015,-5.838369,3.438515,-8.082114,-1.427293,3.812782,-3.970530,5.472912,-7.304840,3.730608,9.667974,8.719024,-7.072041,-6.910125,7.795465,9.514805,7.969581,-1.117439,-3.817832,5.798747,0.907893,-5.131089,-0.523377,-9.666323,-0.647410,-1.562653,-0.966586,2.828595,4.563500,-4.572137,-2.752767,-2.590970,6.658624,-9.279533,9.309141,-2.527803,-4.716034,-5.742662,0.751145,4.953068,8.089289,3.958998,-2.439384,-3.051767,-8.507819,-4.878167,-7.807430,5.346715,-0.700409,-5.975971,6.806779,-7.330228,5.187878,3.546838,1.547938,-1.340890,-4.706255,-8.327405,3.168793,-9.713462,9.976190,-0.093806,8.719397,-5.018255,6.660687,6.583661,9.944642,-3.754153,4.735527,8.333540,6.332803,5.916452,5.119104,-9.237426,-2.619204,4.121379,5.297623,-4.956222,1.878978,-6.902802,1.993010,0.883557,4.739271,7.648663,9.072360,9.414510,-2.856826,6.342485,-8.338312,-7.333994,-7.398062,1.139175,6.632343,2.942485,-6.354865,7.385926,0.631064,-0.183612,7.562352,3.642530,8.878021,4.657915,3.874686,4.961075,-0.918416,0.971643,1.548724,-8.430015,-2.539491,9.395302,-5.158857,-1.223561,-4.583618,-7.087313,-7.785738,-2.525154,0.667578,5.609743,-4.009039,-4.377600,1.382750,-7.976979,-9.888413,2.793664,-2.965803,9.264105,-5.444992,-9.471542,7.774617,-7.956349,4.526312,1.461157,-6.086579,4.590047,9.419674,2.863667,5.180732,-3.746559,-5.326108,-6.508423,-0.324922,8.067284,7.752318,0.348164,7.659047,-3.266487,4.679172,9.670000,4.420258,-7.385767,-2.271809,1.903948,8.119617,-0.659922,8.589198,-2.487542,-8.374363,-2.333565,-6.147168,-4.361063,8.510359,-4.506576,-3.545085,-3.089862,-3.763245,4.601650,-6.948939,1.245200,-7.883627,-8.572161,-7.275199,9.181251,-4.477474,5.027113,-8.748633,-6.415786,-3.387292,-5.992722,-1.170702,-8.730399,1.411495,-7.756647,-3.103999,-6.371569,1.295262,7.805146,7.391195,-9.652124,-1.446594,-4.332310,-4.063736,5.441342,9.199813,8.381630,-4.385130,6.445945,5.581017,-5.054815,0.896914,-0.821732,8.729335,-8.940131,5.918111,-8.003224,-2.132752,-2.294965,-9.279505,-9.972345,2.138719,5.602132,7.824379,4.845428,-7.771589,9.267224,-6.837205,-4.458918,6.658024,8.473019,-9.608820,-4.563294,-6.320995,1.538724,-1.830467,0.978825,8.038885,-3.490497,5.516280,-2.717447,6.543841,5.009378,1.814891,4.100329,-9.377838,3.541718,-9.681270,-1.589275,-3.814659,5.936346,9.236076,-9.255611,-8.253873,8.410230,6.786263,1.487500,2.260752,-0.649093,5.724306,1.398643,-3.874873,-1.612753,4.899000,-0.288872,-8.372771,-0.984665,-5.483579,-4.409272,6.113315,-4.475842,6.931398,0.796728,-8.204745,-4.514777,9.971938,8.065248,-2.607801,5.666373,-0.119330,-2.435997,5.093726,-6.590082,4.363832,-0.863960,9.143765,7.402079,5.231872,4.012531,7.141068,1.279075,-4.956352,-3.118219,-5.025514,-2.250822,6.051917,7.838406,8.656931,-6.462328,-4.690581,-7.170090,1.446025,3.054584,-3.131550,-0.895774,-7.969960,5.180160,8.557730,8.322277,1.487786,-5.069517,-0.827753,8.242944,-9.087825,5.276971,1.150313,-9.047853,2.278224,1.795886,-7.856154,0.368097], dtype = "float64")#candidate|873|(2160,)|const|float64
call_871 = func_48_call(relay.reshape(const_872.astype('float64'), [15, 1, 9]), relay.reshape(const_873.astype('float64'), [15, 16, 9]), )
call_874 = func_48_call(relay.reshape(const_872.astype('float64'), [15, 1, 9]), relay.reshape(const_873.astype('float64'), [15, 16, 9]), )
output = relay.Tuple([bop_866,call_871,const_872,const_873,])
output2 = relay.Tuple([bop_866,call_874,const_872,const_873,])
func_879 = relay.Function([var_859,], output)
mod['func_879'] = func_879
mod = relay.transform.InferType()(mod)
mutated_mod['func_879'] = func_879
mutated_mod = relay.transform.InferType()(mutated_mod)
var_880 = relay.var("var_880", dtype = "float32", shape = (13, 1, 12))#candidate|880|(13, 1, 12)|var|float32
func_879_call = mutated_mod.get_global_var('func_879')
call_881 = func_879_call(var_880)
output = call_881
func_882 = relay.Function([var_880], output)
mutated_mod['func_882'] = func_882
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1007 = relay.var("var_1007", dtype = "int16", shape = ())#candidate|1007|()|var|int16
var_1008 = relay.var("var_1008", dtype = "int16", shape = (14, 13, 1))#candidate|1008|(14, 13, 1)|var|int16
bop_1009 = relay.logical_xor(var_1007.astype('int16'), var_1008.astype('int16')) # shape=(14, 13, 1)
bop_1018 = relay.greater_equal(var_1007.astype('bool'), var_1008.astype('bool')) # shape=(14, 13, 1)
output = relay.Tuple([bop_1009,bop_1018,])
output2 = relay.Tuple([bop_1009,bop_1018,])
func_1023 = relay.Function([var_1007,var_1008,], output)
mod['func_1023'] = func_1023
mod = relay.transform.InferType()(mod)
var_1024 = relay.var("var_1024", dtype = "int16", shape = ())#candidate|1024|()|var|int16
var_1025 = relay.var("var_1025", dtype = "int16", shape = (14, 13, 1))#candidate|1025|(14, 13, 1)|var|int16
output = func_1023(var_1024,var_1025,)
func_1026 = relay.Function([var_1024,var_1025,], output)
mutated_mod['func_1026'] = func_1026
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1057 = relay.var("var_1057", dtype = "int64", shape = ())#candidate|1057|()|var|int64
var_1058 = relay.var("var_1058", dtype = "int64", shape = (8, 4, 5))#candidate|1058|(8, 4, 5)|var|int64
bop_1059 = relay.greater(var_1057.astype('bool'), var_1058.astype('bool')) # shape=(8, 4, 5)
func_737_call = mod.get_global_var('func_737')
func_740_call = mutated_mod.get_global_var('func_740')
const_1063 = relay.const([[-4.924905,0.521646],[7.293104,-7.781334],[8.683543,6.835917],[4.694432,5.424351],[5.186570,-0.094511],[-9.721235,-1.913776],[-5.705244,-9.648060],[5.770181,-4.019287],[7.388342,0.301590],[-4.262200,-6.007603],[-2.934862,0.634164],[9.601262,0.975568],[-0.327328,-8.986321],[-3.769924,-3.390139],[-4.752518,0.287154],[-2.285372,1.215216],[7.229318,-4.266955],[-8.534314,-3.600006],[3.107721,5.073624],[-6.800585,9.421438],[-9.686749,5.327431],[-8.500157,5.053751],[-3.654274,7.076880],[-5.792078,-9.696408],[5.384655,4.186107],[-0.095490,0.856846],[-1.473046,-4.458625],[7.745209,6.937486],[7.943710,-1.453810],[-3.552062,-0.502310],[-9.701759,6.696146],[-7.362848,8.880567],[2.622372,-2.080055],[-5.010922,3.731002],[-2.158558,0.802413],[3.942649,7.675852],[8.775659,-4.152755],[3.302644,-5.068779],[-5.906390,6.828426],[0.301402,7.940732],[2.806167,-2.484763],[4.796979,-9.864776],[-5.338868,4.395101],[2.773315,-1.447063],[-7.591214,-1.510879],[-5.469030,9.940715],[5.671619,9.984427],[5.461766,6.477254],[-8.051570,-0.473532],[4.639006,8.757654],[-2.712886,2.442081],[4.610984,-7.361204],[-8.231212,-3.047924],[7.185652,-1.659000],[-7.868922,-5.665236],[-5.917264,-7.689644],[7.840350,-3.073767],[-9.768562,-4.154898],[-9.868742,-5.866195],[-2.010280,5.178630],[7.562964,2.757380],[4.660293,9.251621],[6.723595,-4.203173],[9.804252,6.783009],[2.361024,5.483381],[0.449609,8.236858],[2.090560,-3.666589],[-8.029876,6.308305],[9.796501,6.741500],[-6.904509,-4.240702],[-0.524170,7.544376],[3.922571,-4.195071],[-1.870228,-2.947099],[-6.312984,3.794143],[1.658030,3.634177],[2.300818,-1.688299],[8.371842,4.040966],[-6.146372,9.654422],[-9.574534,0.411812],[7.850916,0.830849],[1.843936,-3.373584],[1.474651,-2.520100],[5.525232,-5.812448],[-9.444804,9.772075],[-1.731449,9.898259],[-3.769716,1.520423],[7.659636,-5.562808],[4.229401,-9.809915],[-1.896138,-6.679364],[-5.466675,-9.902966],[-3.840291,-8.343205],[6.303147,-0.845842],[-4.530237,0.963330],[-8.716299,-1.996016],[7.845846,6.076945],[-7.118798,1.872954],[-2.404861,-2.135911],[-8.613260,-7.192862],[2.607495,0.127632],[-7.251970,5.220830],[3.860609,9.036588],[6.112658,0.158249],[-3.936366,2.318697],[-2.184281,6.838978],[-9.471516,6.532719],[3.111370,2.755592],[-9.935543,3.687851],[-7.755459,-4.808073],[3.169807,-2.600306],[5.861272,1.861415],[-0.139098,-9.280346],[-9.395473,8.324915],[3.753310,9.900976],[-9.148966,8.667753],[-1.744300,0.496999],[1.412535,-6.455296],[2.993665,-3.636390],[0.461468,-1.158096],[-9.856951,-9.488286],[9.417712,-0.807676],[9.987591,6.912199],[-8.421927,-8.789909],[1.737349,-8.467733],[6.250706,-7.708365],[4.372303,6.054404],[-8.176024,-7.919456],[-2.730124,1.890861],[-0.007475,-2.581365],[-0.923231,0.341685],[4.915694,9.608739],[2.380993,8.014921],[-5.658351,9.491352],[-7.427833,-2.896413],[-1.143728,-0.987199],[-1.824838,-5.710360],[3.068814,-8.816235],[-2.015138,-9.787210],[2.077622,2.342065],[4.667868,-5.680392],[-7.651934,9.589874],[-8.663085,2.034879],[-5.754648,-6.353011],[-1.744710,3.981425],[8.263971,2.680688],[1.113994,0.154265],[9.316142,8.026809],[-6.876440,-0.158490],[1.217724,6.536332],[-2.462740,4.197490],[-7.502232,7.388738],[-6.062252,-1.601944],[-7.579879,-9.500926],[-3.022978,-9.519051],[-6.681789,-8.586475],[0.869934,0.316227],[9.096556,6.320572],[8.396611,-0.665279],[-7.591805,-3.958694],[0.644446,-0.746128],[-1.255419,9.002744],[9.902300,-9.379263],[-2.008080,-6.188718],[-8.492707,-3.489740],[-9.203589,2.468772],[-1.559362,-3.228784],[9.953166,-1.196739],[0.935427,-4.782219],[5.763315,-4.326588],[6.927757,-5.148079],[-0.856673,-4.279623],[-2.942114,-0.923589],[-7.886142,-3.353243],[4.527415,3.827299],[-9.696382,5.826095],[-6.792315,2.715741],[-0.997013,-7.527390],[1.801551,5.735661],[4.230477,-2.300733],[-1.710677,0.097230],[-1.741860,-8.369891],[-9.316993,-7.625021],[4.225022,-2.283604],[7.501565,7.573192],[-1.146483,5.796144],[-5.982504,6.496566],[-1.969755,6.012064],[-0.054650,2.792866],[-3.159002,-5.333455],[5.529429,4.298219],[8.522301,0.188341],[-9.323532,-9.901378],[-2.173541,-3.134571],[-9.760617,8.969506],[9.947577,8.699722],[8.595747,-8.024991],[-3.756850,-2.208193],[5.680905,-8.682706],[0.939696,9.457838],[-5.913822,-1.755932],[0.051610,6.892326],[-0.797442,7.324135],[3.470195,8.661569],[4.028181,3.867739],[6.507707,-6.989889],[1.419190,4.638354],[-0.012674,-5.638335],[-9.196839,7.434093],[5.166716,1.704640],[0.371186,0.190308],[3.427194,6.772225],[-8.528466,6.588332],[-5.958989,-0.664722],[-5.622152,3.178002],[-5.968981,-2.789252],[-8.471238,4.945983],[-3.711796,-4.639922],[6.284430,5.376610],[-4.131012,3.059930],[1.736074,-5.251792],[-7.584872,1.548153],[-5.265329,1.178169],[0.135808,5.851300],[-5.792808,7.027847],[6.633199,-9.259423],[-1.950081,-0.573060],[9.355799,9.349260],[-8.752752,-1.307933],[7.513717,7.080768],[-4.470465,-7.985653],[-8.084358,-3.332001],[-2.823938,-2.643062],[3.422967,-7.036136],[-4.064411,-5.574625],[2.737175,-5.546327],[-1.504971,-0.915296],[-7.189082,7.303907],[6.547027,-9.535368],[-0.477622,-9.717109],[4.644823,-0.937616],[1.822451,-6.012921],[4.860879,1.236869],[-6.344592,-0.297192],[3.615633,-9.903009],[1.656311,-0.132024],[-4.553012,-7.329013],[3.491476,7.307110],[2.364612,1.535670],[8.599219,-1.961875],[6.868589,7.127018],[6.160803,-0.950909],[-9.608490,4.912627],[-3.050260,-6.641042],[-6.402605,9.324244],[3.307154,-8.424057],[2.594216,-3.979444],[1.164566,6.844193],[-6.252188,2.042834],[3.902426,-7.519454],[-9.523914,1.177330],[-4.183547,7.152404],[-7.473033,-7.444669],[-8.109183,1.680233],[0.370828,-4.888610],[-1.322859,5.877108],[-6.165289,1.547262],[-9.225411,5.266239],[5.554778,9.946777],[4.163722,-9.131567],[-3.876708,4.417404],[-7.716363,-2.416637],[-3.839143,-9.179327],[-7.788440,-6.203205],[-2.700851,-0.901010],[2.308784,-0.664317],[-9.842737,-4.937391],[-5.636942,-0.853134],[-8.780937,5.565950],[-3.455201,-9.599033],[-1.298487,2.631747],[-2.782317,5.206466],[3.646166,0.412424],[-9.201752,7.673435],[5.610207,-1.348164],[6.397437,-6.023771],[-2.343763,-2.150616],[3.065581,-9.343228],[5.478830,7.719806],[1.280128,0.636375],[-3.021435,2.710214],[-4.369437,-2.265780],[8.587041,3.724780],[3.928915,-8.181893],[-1.957839,-1.829045],[0.922682,4.386993],[-9.227888,-0.262727],[-9.332787,8.756212],[-0.849623,8.149241],[1.280742,-3.751681],[-8.719890,1.092123],[-1.161580,3.391626],[-1.747810,-5.418658],[-8.969488,7.766531],[-9.804903,-1.787251],[6.950190,-9.356485],[5.834752,-2.894578],[7.854964,4.873282],[-3.443050,6.906672],[-6.504530,7.274199],[-2.349288,-9.263120],[-6.024570,5.796755],[1.185081,8.922955],[6.947075,-2.344816],[9.550454,-9.524384],[9.440992,-6.362897],[-6.484245,-9.303846],[-1.104370,-9.822905],[-9.355905,-0.232673],[-3.642140,1.376699],[0.110207,-6.531507],[-0.572623,8.675760],[6.738426,-1.094691],[2.522729,-4.181551],[-1.867727,-7.614257],[5.769687,2.753172],[9.171197,-4.949629],[-4.782351,6.672697],[-8.017172,-4.900114],[-2.962123,-7.531904],[8.941611,4.568557],[8.673606,2.959196],[-5.395075,-3.415694],[-1.948942,4.925318],[2.422627,0.560962],[-1.018827,-0.879791],[-7.475604,6.817670],[-2.593668,-9.464698],[3.492020,4.103259],[9.076408,-4.751313],[-5.872091,1.071980],[5.649456,8.572579],[-9.896634,-5.025390],[3.057091,4.262307],[1.168765,2.585037],[-1.311411,-5.455764],[0.992330,-9.664386],[-3.128310,-8.778957],[-8.869430,8.503453],[7.960963,-5.758534],[8.515891,-6.522574],[1.310837,-1.922529],[-8.841641,8.761053],[3.156461,-3.600324],[4.506083,8.011998],[-1.588850,-6.853432],[-1.550884,-0.895210],[-6.649839,5.786827],[4.056423,4.065483],[-0.597330,5.736478],[0.091204,8.619624],[-7.800381,1.495223],[0.813478,2.881058],[-6.941720,-6.437693],[6.048106,-8.889094],[4.399697,1.024683],[0.082956,-1.705522],[-4.086841,8.026007],[-0.106098,-7.439468],[-7.733973,-2.144777],[2.544210,4.989111],[9.308075,-0.043788],[-3.381960,9.885204],[-5.069900,-0.137592],[2.355517,0.949493],[1.263745,9.139843],[-3.138022,-1.678707],[6.793224,-3.725916],[6.271781,-5.340658],[1.528821,0.057667],[-1.044737,6.709671],[-2.123466,-0.984866],[-4.497898,5.469186],[-8.679223,1.218826],[0.692267,-8.591940],[-2.320040,2.760770],[-0.818128,4.765341],[-7.708077,-3.616836],[5.603553,1.720884],[8.754550,8.630433],[-2.939821,3.752040],[8.550594,9.683505],[3.326321,7.605896],[-2.345968,2.688653],[-6.757644,-5.270851],[8.024477,6.402344],[-4.802709,-7.044224],[5.653573,-2.172438],[5.662234,-4.935683],[-9.265853,2.644707],[5.038051,-2.994510],[5.864265,6.153507],[-7.106469,-3.882383],[-4.457989,-5.296794],[-9.862648,-8.483446],[-4.465332,7.125162],[0.685740,-6.998605],[2.935537,2.110487],[-3.624928,-0.362491],[6.016344,9.560474],[5.488940,0.944236],[-2.124269,5.825683],[5.437392,-8.869263],[-8.337094,7.665086],[9.994632,1.903157],[3.913542,-6.673671],[-8.414140,7.695424],[-3.373786,5.614954],[-5.792448,5.569223],[-4.832676,8.247148],[-0.494027,1.310300],[-5.312770,-0.726567],[-0.620095,-9.414997],[-0.516804,2.185375],[-6.208248,-2.313049],[-0.993898,-7.105504],[7.741498,8.071751],[-4.840110,2.511673],[-4.283029,7.499696],[7.578033,-3.461535],[-6.078906,9.666146],[9.351829,1.351762],[3.039023,-2.759132],[-1.433663,-7.019966],[-8.194782,0.955352],[-7.818634,-7.331643],[-4.116335,4.444848],[8.911913,6.949449],[5.567445,3.924431],[-2.844583,-9.083990],[-6.089973,8.920237],[4.313018,-2.914734],[9.608918,5.089186],[-5.584426,-8.618850],[6.590679,-7.692912],[1.503867,-6.291403],[-4.848063,-8.110400],[1.620306,-2.786154],[3.548127,-0.658990],[8.406306,0.491898],[-8.298027,4.667278],[-4.846202,1.045295],[9.111420,-5.790462],[-8.670654,0.595008],[-8.019680,5.797567],[-4.248632,-9.669485],[9.400488,6.472607],[3.364011,9.939747],[3.527307,5.370694],[-1.049859,8.690080],[-7.667096,-1.033209],[9.064851,-5.245399],[9.104196,0.417804],[1.829868,-9.609977],[-3.864119,-9.523896],[-2.496280,5.293103],[-8.335233,3.190789],[-0.593263,-7.776104],[-5.956031,9.377289],[1.722446,-4.916223],[5.381840,-3.496295],[8.701707,6.240604],[-9.768525,0.803515],[7.258595,-6.026250],[0.866172,-1.861382],[6.992330,3.796503],[4.532316,0.237655],[-8.028427,-9.523796],[8.314298,-0.006814],[0.209565,-1.101099],[7.743635,-2.836252],[-1.675611,-8.253761],[-9.842148,9.050082],[-8.708007,7.701699],[6.665996,-5.996310],[-0.197085,9.682336],[2.831930,-1.257002],[2.390850,6.322582],[2.778045,4.874018],[-2.876725,4.939799],[-5.208506,-3.036591],[4.198975,1.033598],[-4.638859,-0.172267],[-6.638499,-6.608289],[-5.951826,-5.500447],[2.344376,-6.264764],[2.051291,5.662161],[-6.616525,-1.051319],[8.963666,2.114562],[-9.900738,-5.413532],[-6.263569,-0.821180],[-3.579803,-6.170304],[8.079942,6.263165],[-0.058765,1.660628],[5.884928,-1.985179],[-7.988197,6.956275],[6.810925,-9.232530],[0.960707,3.381033],[-0.844962,-9.199375],[-8.305426,2.321740],[9.628529,6.193974],[-9.315408,4.904421],[4.276977,6.583194],[-3.465200,8.037393],[1.662057,1.288478],[-1.814628,-4.974896],[-0.578902,-8.149083],[-3.465598,2.579176],[-0.488198,1.650727],[0.567309,-1.426087],[-1.466059,-3.991997],[-4.663414,1.625019],[-9.391471,-9.507781],[3.944174,9.757444],[3.507112,-4.403783],[2.347201,7.746191],[-8.792125,-7.479153],[2.411626,-0.516301],[1.674901,-7.170772],[0.631606,5.178964],[4.089908,-6.343495],[1.485535,-8.779358],[0.066348,-3.325101],[-0.432211,-8.910722],[-9.499979,0.676165],[-8.756939,-6.487546],[-3.794075,3.349950],[-7.310909,5.331812],[2.686346,-0.501599],[5.509446,0.250636],[7.081425,9.567634],[-1.778247,6.033896],[4.304214,-2.398983],[-6.681832,5.548323],[-4.177437,-4.720169],[8.329824,-9.837723],[-7.471839,1.663975],[5.877830,-9.213212]], dtype = "float64")#candidate|1063|(546, 2)|const|float64
call_1062 = func_737_call(relay.reshape(const_1063.astype('float64'), [13, 6, 14]))
call_1064 = func_737_call(relay.reshape(const_1063.astype('float64'), [13, 6, 14]))
output = relay.Tuple([bop_1059,call_1062,const_1063,])
output2 = relay.Tuple([bop_1059,call_1064,const_1063,])
func_1067 = relay.Function([var_1057,var_1058,], output)
mod['func_1067'] = func_1067
mod = relay.transform.InferType()(mod)
mutated_mod['func_1067'] = func_1067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1067_call = mutated_mod.get_global_var('func_1067')
var_1069 = relay.var("var_1069", dtype = "int64", shape = ())#candidate|1069|()|var|int64
var_1070 = relay.var("var_1070", dtype = "int64", shape = (8, 4, 5))#candidate|1070|(8, 4, 5)|var|int64
call_1068 = func_1067_call(var_1069,var_1070,)
output = call_1068
func_1071 = relay.Function([var_1069,var_1070,], output)
mutated_mod['func_1071'] = func_1071
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1085 = relay.const([[[-5,-10,-1,-1,6,2,4,-2,-10,-9,9],[8,-8,-10,-8,4,6,-10,-4,3,-2,3],[9,-7,4,3,-1,1,-5,6,-4,9,-6],[-6,10,10,6,-10,-9,-8,-4,8,-4,-7],[-8,4,-5,3,-2,2,8,-3,-5,3,-1],[7,-2,1,2,4,-2,3,1,-1,-4,-4],[6,1,2,3,3,-9,3,-8,9,-6,-2],[10,-6,6,-7,6,-8,3,1,7,6,-6],[7,7,-7,9,-3,-3,-4,-2,-9,-2,-5]],[[1,3,-9,-4,-1,10,9,10,-9,8,5],[-10,1,-7,-8,-2,-10,7,-5,4,-3,5],[-4,-1,9,4,9,10,7,7,-2,6,-3],[9,3,-5,10,10,4,-6,9,8,7,-2],[-5,-10,7,9,7,7,1,-8,-3,-4,10],[-1,-1,-8,6,1,-8,-10,-6,-4,-7,5],[-6,-1,-3,-7,5,3,6,-4,-3,4,5],[6,-1,4,-5,7,6,-10,3,4,-3,5],[8,2,4,3,-9,3,-3,-9,-8,10,4]],[[-4,5,-6,5,-10,1,-4,-7,6,-10,-6],[-6,1,-1,1,-9,2,-3,4,10,-2,-5],[9,5,-8,4,8,-8,7,10,-5,-3,6],[-7,-3,-6,1,-1,-5,-6,3,-6,-2,-2],[4,-7,4,9,-5,10,-5,-4,10,-7,-6],[-6,4,2,6,7,7,-2,5,2,-8,-1],[-1,-1,4,5,-2,-7,-5,-2,-4,-5,-6],[-3,-8,2,-9,1,10,2,10,2,-10,-8],[-9,-10,-3,3,9,10,-2,5,9,-3,8]],[[3,-3,-1,7,2,4,-10,-4,-6,-10,2],[3,5,-3,-1,2,-2,2,-9,-7,-6,2],[7,10,9,-10,-3,-10,4,-7,-8,-2,3],[6,-2,7,-3,7,-3,3,-8,6,-5,2],[-10,8,-7,8,2,-5,6,-6,9,9,10],[-7,-5,4,7,-3,4,-5,-10,2,-7,-8],[-9,4,-10,1,6,-10,10,3,1,-6,-5],[-7,-4,-9,-8,-5,-5,-4,-1,5,-2,8],[-1,9,7,9,6,9,7,-10,8,9,-4]],[[6,-5,-3,-8,-8,4,-10,-5,-4,-7,3],[-4,-6,-8,-4,5,10,-3,-8,7,-9,-5],[1,10,-3,10,-8,10,-7,-8,-3,-10,-4],[7,3,7,-3,3,-4,-1,1,-4,-6,-2],[3,3,-4,8,-8,-9,8,-5,2,-7,2],[-5,1,-1,-4,-9,4,4,7,-5,6,5],[1,5,9,-10,-1,-1,6,9,-8,8,2],[-1,3,-3,-1,-5,10,8,3,10,4,-6],[5,2,-4,7,-2,7,6,6,-2,-2,2]],[[-2,9,-1,-5,-3,4,6,-6,6,-1,5],[4,-7,-4,-9,-8,-5,4,9,-5,-10,8],[9,-8,1,-9,-7,8,7,2,2,8,-8],[-3,10,9,-9,5,-8,2,-2,-6,3,-4],[9,8,-9,-7,9,-4,-2,-8,-8,10,7],[7,-4,-10,-8,7,4,9,2,-10,7,-9],[-7,-1,-3,2,2,9,4,-3,6,2,-5],[-3,6,-1,7,2,-8,-10,-4,1,4,2],[-1,-2,4,9,4,10,5,-3,-1,6,-7]],[[-2,-9,-7,-5,10,-3,-3,8,-8,-3,-10],[-10,-1,-7,-2,-5,5,9,8,-2,-8,-3],[-6,2,-1,4,3,4,7,-3,8,-5,-6],[7,-6,2,-8,4,4,-7,1,8,-7,10],[-6,5,4,8,-4,-2,6,6,-9,-7,8],[-9,5,-5,-10,8,-9,-1,-3,-1,-6,7],[6,-5,6,7,-5,-5,4,5,-8,-1,4],[-9,2,3,-4,-9,6,7,-7,-7,3,-5],[5,-2,-10,9,-4,10,2,-6,-6,9,1]],[[5,4,-2,-6,-5,-4,-2,-9,-10,-3,1],[-6,2,-1,3,8,-10,9,-1,-9,-6,1],[-9,2,5,2,9,-2,9,3,-7,-1,5],[-9,7,-3,2,2,6,1,-7,9,10,-8],[-7,2,-4,-1,4,-7,9,-5,-6,2,-9],[5,-7,-4,8,-7,-3,-8,-3,7,-10,-10],[4,10,10,-2,-7,7,-3,-5,10,-7,3],[9,-4,-5,1,-3,-1,-5,-5,2,-5,-7],[9,-1,-6,-4,-6,6,9,6,9,3,10]],[[-4,4,-8,6,-1,-7,-4,3,-3,10,10],[-3,9,4,3,-1,-1,-3,-8,-2,4,1],[6,7,-4,-9,6,9,-3,1,-6,-2,-9],[-4,4,6,-9,7,3,-3,10,-9,3,4],[-10,-1,-9,-5,-8,5,-7,9,8,-1,9],[-7,-7,5,-4,-5,6,-3,1,-3,-5,10],[-1,-9,-6,-1,-6,5,-5,-3,-1,-3,6],[-2,-2,-5,-5,-2,-7,-5,-1,9,-5,9],[3,8,2,-3,-5,-7,-1,-5,-1,-3,8]]], dtype = "int32")#candidate|1085|(9, 9, 11)|const|int32
const_1086 = relay.const([[[-8,-10,10,-4,7,8,-10,3,-4,-8,9],[-8,-1,-8,-3,-9,-2,8,2,-3,-1,10],[9,-1,-4,-7,8,9,-2,-10,-4,5,-9],[-7,7,1,2,-7,-9,-8,-7,6,-10,7],[-4,8,8,-3,8,-10,-2,1,4,-7,-8],[6,9,1,8,3,4,9,7,-1,-2,10],[-3,7,10,-10,8,4,-9,7,2,9,-3],[10,-8,5,-3,3,-7,-1,4,-7,-7,-10],[-7,-4,-8,7,-1,3,9,1,-4,-5,-7]],[[-10,-10,-5,-10,-5,-1,6,-2,-3,1,6],[4,1,4,-1,-6,3,-9,-5,1,-6,9],[-4,-6,-5,4,8,-1,-8,-6,-5,1,8],[-4,9,-3,2,10,4,-4,4,2,-8,2],[7,4,-2,-10,4,-5,1,-1,-1,-8,8],[8,2,5,-3,5,-7,-10,5,-9,-3,-6],[-4,9,2,4,1,-4,-2,-4,-8,-2,7],[3,-1,-5,-1,-3,9,-2,-1,-1,-10,9],[5,-4,-10,9,-8,3,7,8,-8,4,-4]],[[6,-5,-10,-3,-5,-10,-3,-5,2,-7,5],[-3,-3,-5,-6,-3,4,1,-3,3,-3,8],[7,-8,-9,4,-8,-8,-5,8,-1,6,-9],[1,1,9,-9,10,10,-5,-3,-4,3,4],[6,1,-2,-5,6,-2,-10,-3,-8,6,-4],[-9,-1,10,9,-4,-7,-4,-4,2,5,-8],[-5,-5,-5,2,-4,-6,8,-9,-1,1,7],[-9,-4,-10,-4,-5,9,-1,3,-4,6,1],[8,-8,2,1,7,-10,-10,2,-7,1,9]],[[10,7,10,-6,7,9,-4,-7,10,-4,6],[9,8,-7,1,2,1,-5,-3,9,4,-7],[9,-3,9,7,1,-5,1,-9,9,6,-3],[10,10,7,-7,2,10,3,5,5,8,-7],[4,-3,-7,5,-8,5,-4,3,9,-5,3],[8,-10,3,5,-6,6,-1,8,3,1,-5],[-2,-4,6,-8,9,-8,-1,6,-1,-4,-2],[9,1,6,-10,8,-9,-1,-4,-7,-4,-4],[6,-10,10,3,9,10,2,3,-6,3,3]],[[-4,2,-2,4,3,5,6,-7,7,-9,-7],[4,-2,-1,8,9,-3,-1,1,-10,-7,8],[-10,10,-3,6,-1,-10,-1,-10,-6,-10,1],[-3,-9,7,-10,7,3,9,8,8,6,-4],[10,7,-4,5,8,-8,-5,-1,3,6,7],[2,1,-7,-7,-5,5,-2,-8,-6,7,1],[10,-6,2,-7,-7,6,-8,-8,-4,-1,-6],[-9,2,-1,9,2,6,2,-1,-6,-9,-8],[-5,-1,9,7,-7,-10,-10,-9,-2,8,-10]],[[-5,1,-1,6,-5,-4,-10,-10,-8,3,-7],[6,-4,8,8,4,1,7,-4,-1,-3,-9],[10,2,-6,6,2,1,4,-9,9,6,-9],[-4,-5,5,-10,3,-4,9,-1,-5,-9,-8],[6,-5,-1,9,-3,4,-7,-10,-3,-8,9],[7,2,-3,-8,6,-8,-3,2,-8,2,-5],[-1,8,7,1,3,7,9,8,1,-3,7],[-8,5,-5,8,-10,4,-4,-3,-8,4,2],[5,3,8,-3,-2,-5,6,8,10,6,-3]],[[7,-7,2,10,5,6,9,5,-8,-2,-6],[2,4,-9,6,-1,7,5,9,3,-3,3],[-2,6,5,-2,-8,-2,-6,1,4,2,1],[-3,7,4,7,-1,-8,-9,-5,-4,7,5],[9,-5,9,-4,-7,1,-3,3,4,8,-1],[5,-2,-8,6,-2,1,-6,7,3,9,9],[10,-1,-5,8,-6,1,3,6,-5,2,10],[-10,-2,-2,-8,-2,-4,-3,-9,-7,4,-4],[-9,6,-1,-4,8,7,-9,-10,1,-3,2]],[[5,7,-8,-2,-9,3,7,-4,4,-6,-2],[1,10,-4,6,-1,7,3,-10,-10,-7,4],[8,6,-2,4,-7,-7,-6,2,-7,4,-10],[1,-1,-8,-5,-2,-4,4,3,1,-4,9],[-1,1,5,-6,-2,4,10,-4,8,-8,8],[-8,2,1,2,-6,-4,-3,-4,-3,-7,-4],[2,-2,5,3,-1,-4,-2,1,-8,7,5],[10,-10,-8,1,2,1,2,-3,9,7,9],[10,-3,8,-8,-9,-2,1,-6,3,6,3]],[[10,-4,-1,4,-8,1,-1,-1,-2,9,-1],[-8,-3,-6,-5,-8,4,3,2,-7,-10,-4],[-7,-1,-7,-7,-1,7,3,2,2,-2,1],[-4,-3,-3,-1,-5,2,-9,8,-9,-8,2],[10,1,5,10,9,9,7,6,-9,-6,10],[-1,-3,7,7,-5,3,-10,-9,4,-6,-3],[-7,9,-1,8,-2,10,-9,7,6,4,-9],[-10,5,-8,9,2,-10,1,-7,7,-9,-5],[5,6,-3,3,-3,2,-8,-8,4,10,-2]]], dtype = "int32")#candidate|1086|(9, 9, 11)|const|int32
bop_1087 = relay.bitwise_or(const_1085.astype('int32'), relay.reshape(const_1086.astype('int32'), relay.shape_of(const_1085))) # shape=(9, 9, 11)
uop_1091 = relay.rsqrt(const_1086.astype('float64')) # shape=(9, 9, 11)
output = relay.Tuple([bop_1087,uop_1091,])
output2 = relay.Tuple([bop_1087,uop_1091,])
func_1100 = relay.Function([], output)
mod['func_1100'] = func_1100
mod = relay.transform.InferType()(mod)
mutated_mod['func_1100'] = func_1100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1100_call = mutated_mod.get_global_var('func_1100')
call_1101 = func_1100_call()
output = call_1101
func_1102 = relay.Function([], output)
mutated_mod['func_1102'] = func_1102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1100_call = mod.get_global_var('func_1100')
func_1102_call = mutated_mod.get_global_var('func_1102')
call_1118 = relay.TupleGetItem(func_1100_call(), 1)
call_1119 = relay.TupleGetItem(func_1102_call(), 1)
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
const_1122 = relay.const([-5.968905,-5.117988,-7.951070,9.918195,2.541977,-5.805951,8.061868,3.199621,-8.161453,6.945074,1.155453,8.616274,9.134786,-7.919633,-7.781620,-2.975334,7.023297,5.394064,8.863205,4.312830,-7.801364,-4.295295,6.454893,-6.275875,-1.320651,-6.636842,-6.026425,3.572919,6.935256,1.300452,-1.132281,5.177583,-4.866072,1.959252,3.761502,-4.879695,-9.302745,0.416906,-6.221555,8.485244,6.918543,4.834260,-3.617406,7.995300,-9.043820,3.050518,-6.504543,-1.141444,-1.156297,-4.873761,-2.825272,4.820968,-9.165087,-8.721751,-2.421294,2.244234,2.408360,-7.166761,4.890476,-0.980019,-3.657744,-4.465085,-7.584828,3.665686,2.445764,-3.498476,6.617960,-3.245775,-2.996536,-0.410554,4.314298,-4.592885,-2.340224,-4.489486,-2.280057,2.923319,-7.633796,8.472173,-1.486731,2.734916,-7.150276,-6.378746,-1.229803,7.640560,4.614308,4.658311,6.424500,-8.403583,-5.220317,2.124677,1.726246,0.131798,4.801251,-1.862296,-7.903612,6.869165,6.031049,-4.652687,-1.187948,-4.939750,5.141614,-1.731703,2.089074,5.127239,0.057024,-1.547838,1.745388,6.249409,-9.699521,3.906347,2.445308,7.602163,-4.533237,-5.959393,-9.176792,-8.456446,3.769575,-0.817699,1.274138,-1.269094,7.637486,9.817712,9.903189,6.069935,-8.300691,-8.404418,7.857064,-0.191082,0.290805,-7.988216,7.472662,9.034796,-2.394725,5.036375,0.617741], dtype = "float64")#candidate|1122|(135,)|const|float64
var_1123 = relay.var("var_1123", dtype = "float64", shape = (180, 12))#candidate|1123|(180, 12)|var|float64
call_1121 = func_48_call(relay.reshape(const_1122.astype('float64'), [15, 1, 9]), relay.reshape(var_1123.astype('float64'), [15, 16, 9]), )
call_1124 = func_48_call(relay.reshape(const_1122.astype('float64'), [15, 1, 9]), relay.reshape(var_1123.astype('float64'), [15, 16, 9]), )
func_372_call = mod.get_global_var('func_372')
func_375_call = mutated_mod.get_global_var('func_375')
var_1128 = relay.var("var_1128", dtype = "float32", shape = (10, 96))#candidate|1128|(10, 96)|var|float32
call_1127 = relay.TupleGetItem(func_372_call(relay.reshape(var_1128.astype('float32'), [10, 12, 8])), 0)
call_1129 = relay.TupleGetItem(func_375_call(relay.reshape(var_1128.astype('float32'), [10, 12, 8])), 0)
func_372_call = mod.get_global_var('func_372')
func_375_call = mutated_mod.get_global_var('func_375')
call_1131 = relay.TupleGetItem(func_372_call(relay.reshape(call_1127.astype('float32'), [10, 12, 8])), 0)
call_1132 = relay.TupleGetItem(func_375_call(relay.reshape(call_1127.astype('float32'), [10, 12, 8])), 0)
uop_1135 = relay.rsqrt(var_1123.astype('float32')) # shape=(180, 12)
bop_1137 = relay.greater_equal(var_1128.astype('bool'), relay.reshape(call_1127.astype('bool'), relay.shape_of(var_1128))) # shape=(10, 96)
bop_1140 = relay.greater_equal(var_1128.astype('bool'), relay.reshape(call_1129.astype('bool'), relay.shape_of(var_1128))) # shape=(10, 96)
var_1161 = relay.var("var_1161", dtype = "float32", shape = (180, 12))#candidate|1161|(180, 12)|var|float32
bop_1162 = relay.subtract(uop_1135.astype('int8'), relay.reshape(var_1161.astype('int8'), relay.shape_of(uop_1135))) # shape=(180, 12)
bop_1168 = relay.floor_divide(uop_1135.astype('float64'), relay.reshape(var_1123.astype('float64'), relay.shape_of(uop_1135))) # shape=(180, 12)
var_1171 = relay.var("var_1171", dtype = "float32", shape = (180, 12))#candidate|1171|(180, 12)|var|float32
bop_1172 = relay.bitwise_xor(uop_1135.astype('int64'), relay.reshape(var_1171.astype('int64'), relay.shape_of(uop_1135))) # shape=(180, 12)
func_1100_call = mod.get_global_var('func_1100')
func_1102_call = mutated_mod.get_global_var('func_1102')
call_1179 = relay.TupleGetItem(func_1100_call(), 1)
call_1180 = relay.TupleGetItem(func_1102_call(), 1)
func_1100_call = mod.get_global_var('func_1100')
func_1102_call = mutated_mod.get_global_var('func_1102')
call_1183 = relay.TupleGetItem(func_1100_call(), 0)
call_1184 = relay.TupleGetItem(func_1102_call(), 0)
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
call_1189 = func_48_call(relay.reshape(const_1122.astype('float64'), [15, 1, 9]), relay.reshape(call_1121.astype('float64'), [15, 16, 9]), )
call_1190 = func_48_call(relay.reshape(const_1122.astype('float64'), [15, 1, 9]), relay.reshape(call_1121.astype('float64'), [15, 16, 9]), )
func_1100_call = mod.get_global_var('func_1100')
func_1102_call = mutated_mod.get_global_var('func_1102')
call_1196 = relay.TupleGetItem(func_1100_call(), 1)
call_1197 = relay.TupleGetItem(func_1102_call(), 1)
bop_1198 = relay.equal(bop_1172.astype('bool'), relay.reshape(var_1161.astype('bool'), relay.shape_of(bop_1172))) # shape=(180, 12)
output = relay.Tuple([call_1118,call_1121,const_1122,call_1131,bop_1137,bop_1162,bop_1168,call_1179,call_1183,call_1189,call_1196,bop_1198,])
output2 = relay.Tuple([call_1119,call_1124,const_1122,call_1132,bop_1140,bop_1162,bop_1168,call_1180,call_1184,call_1190,call_1197,bop_1198,])
func_1203 = relay.Function([var_1123,var_1128,var_1161,var_1171,], output)
mod['func_1203'] = func_1203
mod = relay.transform.InferType()(mod)
mutated_mod['func_1203'] = func_1203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1203_call = mutated_mod.get_global_var('func_1203')
var_1205 = relay.var("var_1205", dtype = "float64", shape = (180, 12))#candidate|1205|(180, 12)|var|float64
var_1206 = relay.var("var_1206", dtype = "float32", shape = (10, 96))#candidate|1206|(10, 96)|var|float32
var_1207 = relay.var("var_1207", dtype = "float32", shape = (180, 12))#candidate|1207|(180, 12)|var|float32
var_1208 = relay.var("var_1208", dtype = "float32", shape = (180, 12))#candidate|1208|(180, 12)|var|float32
call_1204 = func_1203_call(var_1205,var_1206,var_1207,var_1208,)
output = call_1204
func_1209 = relay.Function([var_1205,var_1206,var_1207,var_1208,], output)
mutated_mod['func_1209'] = func_1209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1100_call = mod.get_global_var('func_1100')
func_1102_call = mutated_mod.get_global_var('func_1102')
call_1242 = relay.TupleGetItem(func_1100_call(), 1)
call_1243 = relay.TupleGetItem(func_1102_call(), 1)
uop_1248 = relay.asin(call_1242.astype('float32')) # shape=(9, 9, 11)
uop_1250 = relay.asin(call_1243.astype('float32')) # shape=(9, 9, 11)
output = uop_1248
output2 = uop_1250
func_1253 = relay.Function([], output)
mod['func_1253'] = func_1253
mod = relay.transform.InferType()(mod)
mutated_mod['func_1253'] = func_1253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mutated_mod.get_global_var('func_1253')
call_1254 = func_1253_call()
output = call_1254
func_1255 = relay.Function([], output)
mutated_mod['func_1255'] = func_1255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_1259 = func_1253_call()
call_1260 = func_1253_call()
func_879_call = mod.get_global_var('func_879')
func_882_call = mutated_mod.get_global_var('func_882')
const_1264 = relay.const([2.079981,-7.946459,0.695286,-5.943150,-4.755084,-9.153464,6.881609,-9.054440,-7.756630,9.661486,-0.853992,0.806798,-2.465077,-8.581750,-5.018058,6.706694,-7.134494,-5.804860,-4.038105,4.855808,1.077631,8.248415,-3.807776,-7.789639,-9.283908,3.326376,1.488984,-7.099534,-9.094965,3.292904,5.074252,-4.612778,-2.725985,8.368178,-5.297626,-5.122065,8.115132,-6.511544,8.965203,-9.255607,-5.104551,0.050960,-4.269355,5.222520,-6.518508,8.620668,6.796167,4.692949,-1.828143,4.189796,-1.986417,-6.749722,0.669775,4.082097,6.202962,-8.560891,5.705889,5.637944,6.793667,-8.951875,-5.779002,5.337249,8.504685,2.840284,-5.601796,-9.808495,-4.567490,-7.621097,8.266687,7.509269,4.546357,5.065355,6.800639,-9.679725,7.244344,-4.453273,-1.856657,-3.672594,6.407917,-0.443245,-1.867000,-2.888366,7.051335,-3.639605,-3.878265,-3.765224,3.702917,-2.333051,-6.654075,0.958562,2.234992,3.980962,-9.563769,4.277124,-6.158111,7.860847,4.954941,8.500503,-1.329406,8.181146,9.604963,-3.815461,7.010674,3.394992,4.493314,-3.950040,5.052071,-4.934776,6.375911,1.878636,9.393725,-2.655389,-7.594349,-4.178875,8.272817,0.412094,4.634422,6.380866,-3.000146,-4.849927,1.151880,-4.679412,6.064456,-9.898854,-7.424095,-7.516322,-3.904753,-0.835007,-9.463382,8.050597,5.682196,5.972625,-6.673634,9.589053,2.081666,-4.629233,-2.774152,0.645257,-2.645491,-4.013029,9.340453,-5.208110,0.572444,-6.558438,7.553376,7.235926,-5.966269,6.847852,5.246232,8.011678,2.270445,-9.543679,-1.407838,6.503001,4.548944,-4.515210], dtype = "float32")#candidate|1264|(156,)|const|float32
call_1263 = relay.TupleGetItem(func_879_call(relay.reshape(const_1264.astype('float32'), [13, 1, 12])), 3)
call_1265 = relay.TupleGetItem(func_882_call(relay.reshape(const_1264.astype('float32'), [13, 1, 12])), 3)
func_372_call = mod.get_global_var('func_372')
func_375_call = mutated_mod.get_global_var('func_375')
var_1291 = relay.var("var_1291", dtype = "float32", shape = (60, 16))#candidate|1291|(60, 16)|var|float32
call_1290 = relay.TupleGetItem(func_372_call(relay.reshape(var_1291.astype('float32'), [10, 12, 8])), 0)
call_1292 = relay.TupleGetItem(func_375_call(relay.reshape(var_1291.astype('float32'), [10, 12, 8])), 0)
const_1305 = relay.const([[3.017449,3.391432,-2.077273,-5.615354,-4.694718,-9.422149,1.446741,3.426802,8.481667,-2.248781,-4.600725,6.759280,-8.166132,2.661275,9.585505,2.584357],[7.366019,-1.800877,-2.803375,-6.733166,0.198067,9.486617,0.950765,7.161767,4.275508,-7.849254,-8.102863,3.097168,5.433811,7.080870,2.182508,0.469277],[3.021082,-3.489507,-6.578695,-1.783149,6.487792,-3.286635,-0.769296,1.430513,-5.000181,0.093389,6.478365,5.734344,-5.136044,3.193003,0.109147,-9.086130],[-8.166724,-8.412354,-1.823937,4.346596,2.585941,-1.778467,4.585410,0.001556,2.403537,-4.089926,9.689968,5.750875,-2.831481,9.992843,2.582851,-9.361401],[-9.287273,-3.240084,-5.202954,1.730651,-6.988995,4.388189,6.985229,8.217885,-0.539546,-5.609784,5.991616,8.115868,-5.091568,-9.599114,-4.427393,-1.494180],[6.129955,8.439566,-7.494809,6.187636,-2.700257,-5.838611,-2.382554,-2.552638,9.166264,-4.699935,-6.740348,2.819082,2.142348,-7.375118,-0.524839,-8.273185],[-8.919830,9.101449,-2.549168,3.007019,-5.988366,8.483285,4.858532,1.795820,-7.388807,7.061758,1.038761,7.096837,-3.383364,-3.069865,-9.309630,6.576628],[3.155609,7.714472,2.281746,-1.946016,-4.121894,-7.453528,-0.667344,3.415420,-7.248684,5.662733,7.516196,-7.250273,4.287305,-9.042099,0.944264,-1.245417],[2.925887,9.175692,-6.925035,-5.054084,1.126930,-1.815001,-1.691557,-4.054837,-4.633584,-8.863702,-2.399512,-3.273301,5.805085,-2.762584,-8.394434,3.483966],[-2.775506,-3.744157,4.246968,-0.736082,-9.715521,-4.329936,-6.275043,6.078901,-0.251990,-0.615313,-9.705563,-2.564206,9.848667,-5.315840,2.674027,1.308882],[-4.958362,-1.703529,-7.921486,-4.143673,7.632077,0.580870,5.749580,7.744700,-4.577004,2.564906,-3.104398,7.812776,-6.618535,4.518861,9.349707,5.820910],[-4.662142,5.787616,-7.735410,6.396245,-7.514826,4.164293,8.281887,-4.306449,-7.239493,-1.539291,5.831048,6.369542,-0.013614,-1.436761,2.972939,4.233661],[9.915961,1.153380,5.085560,-5.735257,7.687435,0.089975,-6.965084,3.680712,5.768985,1.997072,7.712866,-3.716724,0.079514,4.471777,3.424464,-7.634444],[-9.219954,-5.637330,0.134851,1.474010,5.432713,1.854583,-7.261012,-0.976865,0.250780,9.709395,-8.628580,-6.061594,-0.215325,7.864556,-3.872530,-1.142840],[3.963759,-8.234557,9.540076,0.327962,1.740907,-1.686669,6.198420,6.526655,-0.104844,8.332834,7.874467,-1.691062,-2.474490,8.110514,-0.373398,5.900331],[-9.810161,-6.286298,5.857813,-9.732069,-4.384324,4.217178,-5.436132,-3.563633,4.421185,8.512390,8.425697,-4.698875,6.574469,0.055798,6.453663,8.650340],[-4.689829,-7.230150,-2.778702,-6.412295,8.654930,-2.494422,1.953372,1.581784,6.297497,5.424520,-0.717406,-7.735185,1.275932,6.029677,-6.045143,-7.399322],[-9.578391,-2.494875,-0.826511,-8.286013,-3.254137,6.387335,2.387884,-9.904920,0.995747,-2.485511,9.938398,-1.239081,-5.583194,-0.706926,-2.993884,6.459061],[3.885526,4.068750,7.106508,0.135386,3.200140,9.329583,1.028160,0.751199,8.425607,1.171667,-5.054848,7.296390,7.054268,6.283305,-6.537900,6.755973],[-0.528537,2.180112,-9.691711,-6.605908,5.774405,-5.635437,5.776799,-9.565765,7.163814,-9.098145,0.510125,-9.500434,8.806623,-8.083532,6.003758,6.904873],[1.026243,6.847193,3.928947,6.356749,7.189203,-2.958053,3.213895,2.663646,-0.342429,-1.590337,4.341520,-1.349004,-4.133572,-0.962063,-5.570421,5.319516],[2.056685,9.700617,-8.669567,6.683016,3.148732,3.076303,-1.814079,2.324210,-9.274216,-2.227549,5.249333,-8.154962,-8.420892,7.009417,-5.240272,-6.391218],[4.782794,-4.066156,-9.197214,2.635464,0.043127,-4.453424,5.049494,-4.495982,0.391016,8.792172,-2.849116,-9.478682,-3.900824,6.789598,-5.417370,-4.409794],[-1.993307,-2.698293,2.879026,-8.588118,-8.098079,-2.950427,-3.855968,2.215839,-0.467041,-0.328867,-4.079538,3.919599,-3.749470,2.203077,-7.626596,-1.714509],[-9.275485,2.257417,-5.307165,2.014072,-1.475299,-3.351477,-1.514035,-0.307706,-8.495057,0.277981,5.388875,-8.422663,-5.439967,-3.670581,0.303543,3.112637],[5.263535,6.287246,-6.273958,-6.264774,0.163554,5.835992,-6.250739,-7.365313,9.382107,3.879109,-5.955179,-1.982053,0.477470,3.540664,-2.939148,8.070255],[8.614936,4.499072,8.949942,-5.281271,3.038135,-3.533167,2.433029,-0.648621,7.885233,5.042263,7.934396,-8.514041,-9.875270,-8.030983,-2.491532,0.399412],[-0.767104,2.733580,-0.796089,-9.502242,6.596911,-3.556219,3.195339,2.114903,-5.301116,-3.921773,9.367178,1.797849,-1.133751,-8.832974,9.749526,-8.556587],[-0.508358,4.006073,7.443717,-8.914489,-8.158227,5.702557,-2.748523,-4.135382,4.124339,-4.094340,0.016085,0.725595,3.142561,-0.726265,6.412258,1.127308],[-2.340555,-3.662262,-3.977607,1.560564,3.669421,9.044902,1.318948,3.848810,-5.499155,1.676501,7.027669,-0.035393,-8.349840,7.085217,6.853482,-5.476619],[0.028487,-0.065095,4.960130,-4.173961,-1.500480,-4.156211,-2.361061,5.539103,-4.013235,-4.463908,5.730127,-2.087481,-6.454583,4.348555,-4.336212,0.017248],[-8.176350,-7.250961,4.812478,9.278124,-8.205429,-3.942276,1.477331,4.771064,-1.559205,0.013311,-3.745081,-5.168463,8.290132,7.948709,8.090732,4.056140],[-2.468186,3.370349,-2.116342,4.268816,0.656853,9.380032,0.407281,-0.159591,2.439216,8.082250,2.251590,-4.448894,2.753449,8.206519,-0.539789,1.209800],[-1.213058,4.168802,2.087834,5.334192,-4.562412,7.585855,4.008460,9.989667,6.992352,7.169057,-6.830820,8.476315,3.631877,-8.200209,7.550485,-3.249214],[5.983530,-0.194309,-9.262537,6.825305,0.346479,1.068752,-6.660330,1.630049,7.710915,-5.276000,-2.263922,-2.172765,-1.076321,2.296207,-4.039950,6.978673],[6.533437,-8.212435,2.962851,-9.351283,-4.902528,-8.705113,6.616562,-4.631079,-8.188416,-2.736222,-6.002112,-0.348188,-5.295065,-9.142036,8.608319,-4.812533],[9.226148,-7.620141,-0.827907,4.939032,-4.441561,7.696951,1.322159,5.883469,-2.217213,-1.624965,-1.121313,-4.209375,3.995759,9.788818,-8.599279,4.426480],[-1.947773,1.992459,3.587050,4.783922,-6.976901,6.210313,-4.769794,0.156330,-5.149385,4.301085,-1.123144,2.713089,-4.099352,-6.635797,-5.443794,-5.922294],[7.568843,6.991912,1.538075,7.844937,9.158158,0.812778,1.433729,3.669195,9.024085,-3.162006,-4.527771,0.800009,-5.681228,0.880383,1.736052,8.889034],[2.523137,0.142573,8.949338,-3.243133,8.276583,-0.673081,-2.965008,8.045030,-1.154835,6.969665,1.536129,0.675152,-9.451610,4.059791,-0.995127,1.371818],[0.708204,-9.163226,7.544373,-1.731755,8.023612,0.341374,-0.757003,9.691403,-9.317672,4.519801,9.306670,9.783970,7.167334,9.303441,5.252786,-2.843191],[-9.648527,8.129783,5.584117,-5.426594,-6.790750,0.093189,-4.420417,3.490245,9.909414,7.944291,8.967697,2.727374,4.124635,-4.933105,3.860958,1.663534],[-5.251990,3.457970,-3.140527,-5.649440,6.418694,0.690026,-4.486906,-1.667207,2.095899,-2.725100,-5.636905,-5.182445,-5.011774,-2.931175,6.682052,4.825519],[-2.818391,0.683971,8.029619,0.121341,5.168939,-2.832444,9.752180,-8.943917,-7.205906,0.675494,-4.625634,-3.952340,-8.934792,-5.523271,2.441683,2.656264],[-1.778721,-9.717836,-8.731464,-0.415757,8.106326,4.634498,9.941764,3.010795,-0.693926,-4.055721,-5.050248,-0.773202,4.380318,-1.360727,-0.904919,-3.008483],[1.121984,-9.580563,-2.965196,2.378855,-3.968459,-2.484789,-2.437908,4.112895,-0.552066,6.838679,4.820879,4.959869,-3.649363,6.444296,-7.772781,9.430505],[-0.336136,4.947745,-4.440044,-2.935939,-3.967777,-3.400549,2.627111,7.659518,6.943959,-4.995207,-1.156323,3.661029,-1.426714,-8.409163,-8.245868,-6.540989],[3.227204,7.351514,-8.117330,-5.902430,-7.559359,-0.452490,0.525672,0.612162,-6.153492,8.736724,-7.925295,-5.113874,2.419560,7.778264,-4.576346,-5.302290],[6.111008,-5.111403,-8.570856,-5.073973,6.382438,-4.014728,1.625246,-8.678340,8.073261,-1.037660,-0.177061,-7.714532,5.163006,-1.267055,4.363154,-1.229198],[-3.576886,3.647896,4.054242,-9.262136,-3.778104,0.371411,-0.176495,5.526626,7.201213,9.428404,-0.678992,2.125422,2.921293,-8.084393,1.994911,-5.317311],[6.963918,-0.181256,5.488584,9.146695,9.591888,4.498671,-5.778754,1.937180,4.452756,-5.643082,2.204665,1.620298,3.021507,3.742544,-8.054031,-2.133107],[9.075968,8.914630,4.156356,-0.679073,3.600230,0.642174,4.202775,-0.978343,3.141288,-3.981031,-5.841774,-4.788498,5.827922,-7.540884,8.210374,6.870758],[9.639536,1.711156,-5.821125,4.722045,-6.063456,3.956273,-5.247667,-6.435458,-1.660639,-1.553150,-7.727446,-6.094790,-6.537489,-1.236263,-1.840824,5.660246],[-8.889581,-9.116138,-0.092272,-8.049628,-7.939819,-1.288599,1.500509,2.245971,-1.319297,2.448286,-2.926119,-2.447101,-6.453034,-0.973591,2.747207,4.809120],[-7.417572,-1.843285,5.827597,4.900338,-5.036322,-9.032103,-6.900359,-0.627184,1.686950,-1.968766,6.835030,5.404118,6.216973,-6.380094,2.275318,-7.705926],[-1.835689,-6.748434,7.295629,0.236508,-0.936292,-5.090652,8.170929,4.971414,-5.051526,-1.912164,-2.087567,2.462110,7.982326,-9.995030,8.024119,8.076995],[4.505403,-6.956982,4.633408,8.480063,2.076231,4.593892,-7.200227,-9.165929,-9.541449,-5.935948,-9.339242,-0.315142,-8.438095,-7.339427,4.432635,3.331937],[7.492836,5.706087,4.992054,-2.768222,-3.304335,-0.206200,-8.165353,9.333754,0.600029,-5.399713,-0.467364,-0.707029,6.707029,-2.709295,-6.994851,-5.894927],[3.678623,-0.443585,-8.941142,-7.171097,-1.716966,1.293380,5.313722,1.500757,-8.433424,-4.474688,-2.298563,2.514523,4.663857,-5.860516,4.364716,1.894501],[3.385423,-2.386706,3.976287,-0.500810,4.425963,-7.163592,1.049528,8.307059,6.312971,-2.472777,-1.486157,-3.839326,1.236983,2.136128,2.838410,-3.415661]], dtype = "float32")#candidate|1305|(60, 16)|const|float32
bop_1306 = relay.greater(var_1291.astype('bool'), relay.reshape(const_1305.astype('bool'), relay.shape_of(var_1291))) # shape=(60, 16)
output = relay.Tuple([call_1259,call_1263,const_1264,call_1290,bop_1306,])
output2 = relay.Tuple([call_1260,call_1265,const_1264,call_1292,bop_1306,])
func_1309 = relay.Function([var_1291,], output)
mod['func_1309'] = func_1309
mod = relay.transform.InferType()(mod)
mutated_mod['func_1309'] = func_1309
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1310 = relay.var("var_1310", dtype = "float32", shape = (60, 16))#candidate|1310|(60, 16)|var|float32
func_1309_call = mutated_mod.get_global_var('func_1309')
call_1311 = func_1309_call(var_1310)
output = call_1311
func_1312 = relay.Function([var_1310], output)
mutated_mod['func_1312'] = func_1312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1100_call = mod.get_global_var('func_1100')
func_1102_call = mutated_mod.get_global_var('func_1102')
call_1335 = relay.TupleGetItem(func_1100_call(), 0)
call_1336 = relay.TupleGetItem(func_1102_call(), 0)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_1350 = func_1253_call()
call_1351 = func_1253_call()
func_1023_call = mod.get_global_var('func_1023')
func_1026_call = mutated_mod.get_global_var('func_1026')
const_1364 = relay.const(7, dtype = "int16")#candidate|1364|()|const|int16
const_1365 = relay.const([-8,-8,-4,4,3,7,9,4,2,9,3,1,-5,-7,-6,2,-1,-4,-3,-1,8,-4,1,-10,3,8,-1,-2,-3,-1,-9,4,-3,-5,7,-1,-5,1,2,-8,5,2,5,2,-3,7,-8,-4,-1,7,6,-10,4,8,5,10,-9,5,8,-4,-10,7,-3,-9,1,-2,-6,9,-4,-6,2,-10,-10,-7,-2,-3,3,10,-10,-10,-7,-1,5,-4,8,9,-8,3,1,8,2,-6,1,8,-9,4,1,10,5,6,-4,3,3,9,5,-9,-1,9,3,3,10,-9,-3,6,4,3,-6,-1,-2,4,10,-4,8,-2,5,-4,-5,5,-5,9,-4,1,-9,-2,5,-10,-9,5,-10,-10,-4,-9,1,-8,8,8,-10,-5,-1,1,10,8,-6,9,-2,2,-5,-5,-6,5,-10,7,9,-8,6,6,-1,-9,9,-2,7,9,6,10,-8,-7,5,-8,-5,-7,-6,-10], dtype = "int16")#candidate|1365|(182,)|const|int16
call_1363 = relay.TupleGetItem(func_1023_call(relay.reshape(const_1364.astype('int16'), []), relay.reshape(const_1365.astype('int16'), [14, 13, 1]), ), 1)
call_1366 = relay.TupleGetItem(func_1026_call(relay.reshape(const_1364.astype('int16'), []), relay.reshape(const_1365.astype('int16'), [14, 13, 1]), ), 1)
output = relay.Tuple([call_1335,call_1350,call_1363,const_1364,const_1365,])
output2 = relay.Tuple([call_1336,call_1351,call_1366,const_1364,const_1365,])
func_1370 = relay.Function([], output)
mod['func_1370'] = func_1370
mod = relay.transform.InferType()(mod)
mutated_mod['func_1370'] = func_1370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1370_call = mutated_mod.get_global_var('func_1370')
call_1371 = func_1370_call()
output = call_1371
func_1372 = relay.Function([], output)
mutated_mod['func_1372'] = func_1372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_1373 = relay.TupleGetItem(func_1370_call(), 1)
call_1374 = relay.TupleGetItem(func_1372_call(), 1)
func_1309_call = mod.get_global_var('func_1309')
func_1312_call = mutated_mod.get_global_var('func_1312')
const_1382 = relay.const([[-8.462866,-0.953615],[-1.560594,-1.714096],[-3.371572,-4.806691],[-9.316967,7.984496],[6.202490,-9.051530],[-0.871139,-6.168988],[-8.515119,-6.653307],[-0.194642,0.267764],[-2.457969,6.004851],[-6.097773,5.208348],[1.611580,3.016936],[7.133087,2.477228],[4.602833,9.577410],[-6.097754,-6.933730],[5.907328,6.465481],[-6.611350,-4.236921],[7.802395,4.919715],[1.215609,-5.496947],[3.326160,-4.120316],[-7.891491,1.184132],[-7.695667,-7.099466],[-8.524034,8.405937],[3.613796,-1.927455],[7.471471,-8.100376],[-8.382542,-9.429866],[6.436025,-4.428856],[9.994325,1.515366],[4.327807,5.140439],[0.543476,-1.186392],[-0.115931,2.750529],[2.825700,6.086745],[-8.769554,5.644963],[-2.936533,-0.620991],[-1.251837,-7.205534],[-6.937265,2.558415],[-4.275190,4.706341],[-4.530660,-5.568707],[0.826596,-6.348730],[5.936378,0.897574],[-3.453959,-4.027221],[4.533704,-8.782015],[-0.601143,0.699699],[-9.025428,-2.515064],[7.754913,-5.312254],[3.042806,-1.298530],[-0.827859,4.490968],[1.437468,2.867148],[4.974122,-4.016015],[-7.222731,-1.933974],[1.275772,9.850465],[7.681965,-4.264756],[6.677440,-1.097355],[1.041453,2.798702],[-3.224782,8.602725],[-5.358302,5.187303],[2.493784,-1.224489],[-1.351810,-1.199245],[-1.209834,4.019068],[1.827747,-3.541569],[-0.389174,5.917895],[5.219584,8.268700],[-1.710673,2.721534],[9.363771,-7.961653],[-4.010524,-5.263921],[-0.377187,-3.721742],[7.506390,-6.676439],[-4.599810,8.154996],[0.430388,-8.845833],[-5.359758,-8.638707],[2.927219,4.493759],[-5.599990,2.759119],[-1.293622,5.746677],[-7.860311,2.828825],[6.349592,-0.236653],[-6.322817,-4.226550],[-9.973085,-7.644339],[-9.951823,6.143731],[6.199998,-4.694043],[1.051365,-7.783791],[-5.177538,-9.852072],[-3.088527,-8.246847],[1.903384,1.867676],[-4.118426,7.468570],[-8.737165,7.802477],[0.815858,-7.842263],[1.404349,-0.631542],[-8.504874,-0.086409],[1.197448,2.077432],[-1.398737,2.810398],[-1.283941,0.767443],[9.570625,-4.065148],[6.635361,-2.906864],[-5.338614,5.083666],[-6.379172,-1.883114],[-5.487528,1.486327],[1.175240,4.400450],[-8.810106,0.925407],[9.155476,3.899106],[-1.486017,9.991358],[-3.929551,-7.689522],[-3.392703,-7.082687],[7.331911,-8.332299],[-1.447739,0.155429],[-6.799570,0.879806],[-8.497510,-6.810522],[-6.512417,-5.892415],[4.684647,-8.488023],[3.486160,-7.600501],[-7.880520,-1.516889],[-6.484746,1.669500],[-9.984249,-9.662207],[-8.070409,0.512329],[5.731530,-3.315011],[-9.415491,-5.145809],[-6.448412,5.917069],[4.869731,-9.672154],[-8.950333,2.988257],[1.408712,0.283741],[-9.383845,-9.182562],[-2.122931,6.258558],[2.209116,5.279974],[-1.246652,7.176366],[-3.024353,-8.355712],[7.463263,9.533448],[-0.702814,-0.210059],[5.231860,9.460645],[6.138542,-8.732872],[-6.308253,7.146155],[-2.346146,8.825701],[-3.031786,0.301055],[2.752312,-5.732505],[-0.906399,-3.685117],[0.692761,-1.268900],[0.435422,-1.041524],[-0.438485,-6.196059],[-4.425649,-6.592157],[-2.066751,6.339821],[5.147043,0.602599],[-7.979219,0.612808],[7.196121,6.143400],[-1.103146,4.273553],[-5.710767,-9.920074],[3.199531,5.740983],[9.807715,-7.044086],[2.761083,-7.738205],[-6.643715,0.457040],[-0.456937,-9.785757],[-8.704717,-7.372500],[7.054170,-0.125286],[6.696424,-5.487942],[6.514991,-8.957581],[-5.990502,-4.868004],[-8.814172,-4.351193],[-4.812684,2.390428],[-9.783778,-5.214554],[-9.300250,2.499642],[3.678959,9.030332],[-6.414003,0.266382],[8.089619,-7.034369],[-7.837882,2.556507],[-7.118895,9.065843],[1.406690,2.816058],[-3.674032,-0.312134],[-9.016295,2.088267],[-2.726843,-9.467359],[-8.970310,-2.219964],[8.503130,9.377110],[-3.077197,-3.475355],[-4.531727,7.590953],[-1.583603,9.692149],[8.695474,3.546044],[8.953097,2.979199],[5.066510,7.882443],[5.758117,3.817418],[-1.093484,-4.905359],[9.791635,0.198298],[-7.453021,5.892384],[8.782790,-6.701919],[8.902782,-4.686354],[-3.525672,-3.711266],[9.162484,2.287906],[2.608031,4.479663],[-7.335051,-9.859886],[-3.435314,7.632534],[6.895867,-0.189905],[-0.010322,9.895956],[-3.657091,-4.343348],[1.844416,1.912184],[-8.719515,0.855940],[8.420553,-6.508175],[-7.823097,-8.868964],[-8.760312,9.527597],[-8.855991,9.377857],[-8.494233,-0.353037],[-2.653192,0.576288],[8.683810,5.950935],[-2.502579,-9.727606],[4.340997,6.218807],[4.681151,7.196305],[3.635248,3.713644],[-7.892233,-3.711210],[4.000282,8.200952],[-8.876986,7.103522],[9.163613,9.877104],[2.597586,-4.404060],[-9.709487,-6.798715],[7.793734,-7.737985],[6.441863,-5.843604],[-9.584985,-6.697035],[-3.237303,4.665579],[5.415088,-6.589209],[9.648012,-6.420755],[9.694461,-1.519356],[-5.920115,-4.382896],[-3.513621,-6.839705],[-5.626322,4.969080],[-4.652595,6.839764],[0.440945,5.649241],[8.477398,-7.807713],[5.589746,-6.198017],[6.372204,5.220820],[3.024283,5.393532],[-9.811283,5.384754],[-5.002071,3.326440],[0.683721,6.179276],[5.497550,4.402212],[9.238477,-8.046587],[-7.052228,5.619490],[4.574619,8.039872],[-8.461231,-3.423825],[-8.028772,-4.215384],[-2.204562,0.726291],[-9.676033,-9.743048],[2.787228,-7.664405],[8.529305,-8.799559],[6.656395,1.906057],[-3.647581,-9.424885],[6.832839,1.326198],[-6.245418,2.065972],[3.344165,-6.103147],[5.005639,4.264306],[-8.345983,1.390552],[-5.476638,5.934581],[-1.123808,-6.010640],[0.253047,6.652904],[5.265271,7.585676],[-9.185796,-7.183233],[0.108868,1.343180],[-8.282255,-0.703070],[1.743190,-4.701949],[5.922472,2.669671],[3.265191,-1.143438],[-1.515776,4.833757],[-3.602109,-9.836607],[6.657164,-8.289903],[8.946878,-8.799367],[-5.784242,5.343548],[-5.316897,-5.516184],[3.839398,2.196033],[8.635001,-1.238405],[-2.267904,-4.376854],[-7.081034,1.953871],[5.152970,-2.031132],[-4.095737,-9.788279],[2.494970,-3.690793],[-9.834511,0.905463],[-9.592177,-5.561678],[-7.077714,-8.856498],[-1.711100,4.445298],[4.973213,6.244729],[-2.022932,0.757454],[-3.156010,-4.125863],[1.123690,1.405632],[3.968318,-3.163210],[-3.634782,7.999733],[8.695373,0.314302],[-9.218393,-2.587798],[5.529065,7.690733],[8.245239,-7.614924],[-8.197388,-5.973302],[1.910898,2.016942],[-7.932303,3.588217],[-2.512367,-8.705890],[-3.772619,-5.684703],[-0.913687,-0.783906],[-6.688553,-0.339427],[-3.791435,6.117106],[8.017001,7.203303],[3.901643,4.766279],[-4.991689,-1.875495],[5.169041,-7.183167],[-1.006171,2.050770],[8.845369,2.660851],[2.919557,2.864196],[-6.077627,-6.324551],[-0.474886,0.827818],[3.822506,-3.075281],[4.470960,-0.006942],[3.615026,-5.356610],[1.494524,-3.404509],[5.607829,-3.408799],[6.062754,-4.993085],[-0.742126,5.296921],[-0.069805,5.506229],[2.484939,1.856045],[-2.955494,-1.621849],[-0.694837,-9.705715],[-8.334099,-6.120731],[-6.957949,-6.804951],[5.431774,6.927917],[1.167588,-4.537341],[5.013836,2.171986],[5.913686,6.897192],[2.422473,9.271402],[-8.649987,3.159884],[0.539853,-7.156312],[3.045096,1.708238],[-0.690835,-4.219153],[-7.565687,7.134971],[-9.393204,-1.828545],[-7.697443,-5.207837],[8.734608,3.421067],[0.795628,-3.321168],[8.732068,-7.849365],[9.804241,9.474234],[-3.981806,-8.842499],[-8.641514,0.088006],[-3.785999,0.035729],[6.284470,-7.614313],[7.975655,9.866314],[3.439767,1.979316],[-9.433099,9.552771],[-6.133567,6.534078],[-3.655134,1.517464],[-1.064274,-3.917724],[-7.263243,7.704594],[7.120339,8.539289],[6.696801,3.248894],[-0.194389,8.968380],[-3.234652,2.155408],[7.436379,7.192844],[-8.967886,1.020621],[3.508188,2.160354],[0.196210,-9.556012],[1.863893,8.035096],[-9.084441,2.108132],[-4.025430,7.692729],[6.585188,4.703017],[-4.705184,-4.575041],[6.168377,2.686170],[5.428783,-5.429566],[6.216016,7.393690],[-3.202983,4.243508],[1.441185,-0.657142],[-1.046255,-8.924028],[-5.589629,-8.435272],[1.645222,6.484954],[-6.415260,9.681928],[1.715428,-8.596636],[-2.508280,4.454975],[6.106354,5.177627],[3.329444,-1.037483],[-4.786439,9.871014],[-5.907785,4.918360],[0.521391,-2.165146],[1.255325,0.039473],[1.189126,9.911376],[-9.505614,8.715771],[3.438865,-7.798014],[-0.322416,-3.037565],[-2.780443,4.936028],[-7.657355,-2.609700],[9.319578,6.815882],[-4.496731,5.706382],[4.952868,-0.158565],[-2.519308,0.888500],[-0.011203,-1.089889],[-0.352084,5.568568],[8.315486,5.894347],[1.594181,5.263368],[-5.868751,4.085453],[8.869221,-8.676712],[6.015928,-7.175257],[-2.305774,-2.433372],[-0.218945,4.770588],[2.201085,3.615498],[4.703411,-1.743480],[-1.493956,8.788273],[0.805403,2.351708],[-5.305911,0.140140],[-3.186896,7.880335],[8.031404,-7.862660],[-6.411289,-7.050923],[-7.512459,-9.486701],[-8.970812,8.409409],[-4.408274,2.579223],[3.896236,1.549869],[-2.742700,-7.567658],[-2.731627,-4.574080],[7.769072,7.847348],[-6.168219,0.619121],[5.591113,4.816314],[7.739645,-3.586237],[0.412023,8.296976],[6.709877,-7.426631],[0.597599,-1.851145],[-7.003899,7.563993],[7.230669,-5.732677],[-1.300729,1.433172],[1.852768,9.036961],[3.820829,5.855465],[7.147042,1.263605],[5.510486,-5.321243],[-5.249104,-3.594983],[1.002575,-2.229688],[6.255710,9.056207],[0.639309,3.666650],[5.156825,6.675718],[1.140116,0.013379],[8.376052,9.780325],[1.451067,4.894129],[-9.716020,-9.012374],[2.490349,7.187560],[0.430118,-0.789164],[5.874079,-4.345465],[-4.861961,0.676766],[-7.563543,-0.364057],[9.247445,-1.554191],[6.858405,6.092227],[2.973369,-2.450972],[-7.489181,9.393665],[-3.015755,-5.227025],[-2.117043,-2.196191],[-4.919871,-3.112100],[-7.278353,-2.653940],[-9.538716,-0.367461],[-9.699086,7.049370],[-7.902528,-6.824126],[0.456974,-4.835310],[8.892180,1.668975],[4.516900,-2.506730],[8.142026,-1.604731],[6.981987,-0.912217],[6.202066,-9.640281],[-2.006461,-2.228361],[6.286531,9.577401],[-6.026083,-3.033582],[3.555882,5.156538],[4.257475,-3.604007],[-6.750512,-3.131596],[-5.422255,6.731354],[-8.625532,6.443043],[-5.721250,6.941697],[4.568110,-6.284141],[-4.758359,4.980353],[5.726478,6.382900],[5.569525,1.585178],[-6.599232,3.506936],[-3.960522,9.371824],[-1.919197,5.377957],[-4.873543,-2.428469],[-2.594163,6.826578],[1.763556,-7.236794],[-4.147781,9.192644],[8.877731,9.095298],[3.269858,-3.562152],[-8.898480,-9.263273],[4.459482,7.471322],[-2.697758,2.808025],[-4.485042,6.031159],[5.317209,-1.282444],[0.759833,9.154425],[9.631494,3.296190],[-8.759937,-6.473714],[2.324908,7.040773],[4.390875,-1.467735],[1.955411,-9.570506],[-4.559351,9.148599],[9.140313,1.967576],[-5.965656,1.531861]], dtype = "float32")#candidate|1382|(480, 2)|const|float32
call_1381 = relay.TupleGetItem(func_1309_call(relay.reshape(const_1382.astype('float32'), [60, 16])), 1)
call_1383 = relay.TupleGetItem(func_1312_call(relay.reshape(const_1382.astype('float32'), [60, 16])), 1)
func_879_call = mod.get_global_var('func_879')
func_882_call = mutated_mod.get_global_var('func_882')
const_1385 = relay.const([1.763514,7.883988,-8.303435,1.347675,-2.958562,-3.054128,8.414486,-5.887782,2.764636,-6.834239,-1.275750,9.618565,9.039084,1.714357,1.763604,4.554096,0.247491,-8.006773,3.611824,-5.711182,2.370660,-9.656796,-0.325322,-8.989700,1.068719,0.194590,7.151501,-5.402257,0.946562,6.733810,-9.792399,0.634871,1.855539,4.191545,6.565477,-7.359805,-9.538968,6.793617,9.524175,-2.537608,-4.738721,-1.628019,-3.851946,-6.536999,6.198309,-0.380757,6.380049,2.134393,1.599272,8.792406,8.909059,-8.762427,-0.603756,-5.590307,9.095758,-5.928585,-4.222766,7.567184,9.840198,-9.549562,9.514825,-2.204331,-9.661782,2.191863,-0.869913,-2.981028,-1.997517,-8.360664,7.885806,5.553419,5.940623,-6.404214,-4.310239,3.843510,-1.731854,-8.935092,-7.249466,-5.024526,5.335717,1.694770,-4.154563,8.795598,-9.501085,-4.159034,-1.891250,-2.454653,5.067143,-5.760638,-5.307186,-9.582511,0.548904,-8.617120,7.453945,1.892062,-9.392815,5.261265,-1.295689,5.902244,-2.975200,-3.078783,1.173924,-8.981741,-6.543127,6.418109,-4.522958,2.116872,-9.488776,-1.115775,-6.202923,-3.719785,-2.427177,2.421851,-2.801801,4.975401,-4.049582,-2.321061,-0.162498,7.337845,8.673475,5.401747,-3.048634,7.774967,-4.929667,-7.602274,1.453464,4.951009,-6.939091,9.821522,1.944838,9.093112,-7.660412,-7.028405,7.389708,4.735966,-4.255016,-3.703370,2.083897,3.740954,7.500926,-6.571042,2.305947,-9.276151,3.256493,-0.605003,-5.294313,-4.379652,7.024959,9.232617,-9.322951,7.989766,5.065812,2.673740,-8.134472,-1.168623,1.285971,-1.480533], dtype = "float32")#candidate|1385|(156,)|const|float32
call_1384 = relay.TupleGetItem(func_879_call(relay.reshape(const_1385.astype('float32'), [13, 1, 12])), 0)
call_1386 = relay.TupleGetItem(func_882_call(relay.reshape(const_1385.astype('float32'), [13, 1, 12])), 0)
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
var_1394 = relay.var("var_1394", dtype = "float64", shape = (135,))#candidate|1394|(135,)|var|float64
call_1393 = func_48_call(relay.reshape(var_1394.astype('float64'), [15, 1, 9]), relay.reshape(call_1381.astype('float64'), [15, 16, 9]), )
call_1395 = func_48_call(relay.reshape(var_1394.astype('float64'), [15, 1, 9]), relay.reshape(call_1381.astype('float64'), [15, 16, 9]), )
bop_1399 = relay.floor_divide(call_1384.astype('float32'), relay.reshape(const_1385.astype('float32'), relay.shape_of(call_1384))) # shape=(13, 1, 12)
bop_1402 = relay.floor_divide(call_1386.astype('float32'), relay.reshape(const_1385.astype('float32'), relay.shape_of(call_1386))) # shape=(13, 1, 12)
uop_1414 = relay.log10(const_1382.astype('float64')) # shape=(480, 2)
func_372_call = mod.get_global_var('func_372')
func_375_call = mutated_mod.get_global_var('func_375')
call_1417 = relay.TupleGetItem(func_372_call(relay.reshape(const_1382.astype('float32'), [10, 12, 8])), 0)
call_1418 = relay.TupleGetItem(func_375_call(relay.reshape(const_1382.astype('float32'), [10, 12, 8])), 0)
output = relay.Tuple([call_1373,call_1381,call_1393,var_1394,bop_1399,uop_1414,call_1417,])
output2 = relay.Tuple([call_1374,call_1383,call_1395,var_1394,bop_1402,uop_1414,call_1418,])
func_1437 = relay.Function([var_1394,], output)
mod['func_1437'] = func_1437
mod = relay.transform.InferType()(mod)
var_1438 = relay.var("var_1438", dtype = "float64", shape = (135,))#candidate|1438|(135,)|var|float64
output = func_1437(var_1438)
func_1439 = relay.Function([var_1438], output)
mutated_mod['func_1439'] = func_1439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_1470 = func_1253_call()
call_1471 = func_1253_call()
func_1203_call = mod.get_global_var('func_1203')
func_1209_call = mutated_mod.get_global_var('func_1209')
const_1473 = relay.const([[0.292753,-8.701942,6.680577,4.768285,8.586730,1.951299],[7.787816,-1.826543,-9.832409,0.626545,0.947836,-2.670186],[-7.889286,1.339309,-3.261378,5.891565,-8.912914,5.895289],[-5.416041,7.280157,-9.755785,0.534252,-6.090856,1.145237],[-5.717915,-7.217328,-0.695231,-8.159175,-4.371449,2.297327],[6.893170,-0.048154,-9.646788,-9.713038,4.044700,-6.602206],[-4.854797,1.363788,-7.264316,0.261544,6.060213,-7.485461],[7.004680,-7.371847,-4.616623,-8.363944,-5.989161,3.548484],[2.035639,-2.768298,-8.243081,-6.039335,-7.509331,2.293491],[-9.603160,-0.219301,7.846777,7.375422,3.366899,-7.165239],[-6.352320,9.212399,-6.172888,0.359635,-2.566415,-5.734476],[5.483539,-1.705819,-1.257073,-9.048715,-9.077624,-9.530080],[2.548525,-9.869949,-1.911051,8.718926,-7.272795,2.728053],[0.932940,-7.692473,-4.095069,-9.683980,8.555661,-8.402257],[7.853356,-5.620659,9.459684,8.618656,-3.940930,1.836205],[-3.200324,0.225937,9.037256,5.035683,-5.492889,0.589407],[-5.604866,-5.697312,-3.288016,9.823905,2.687017,2.005788],[2.734326,4.171208,4.788565,-4.596528,6.178511,-8.180488],[-9.813670,-2.716333,8.026536,-1.476417,0.602262,5.374096],[5.877316,4.894626,-8.378064,3.673044,2.887848,8.863174],[3.769614,8.982389,-8.839312,1.450483,8.380242,9.624817],[5.576883,1.998981,-3.651316,-3.175571,6.505968,-0.812279],[3.756203,8.378242,-1.861435,6.245135,-8.309899,6.055132],[-9.066161,-1.587978,-7.415238,-2.586531,3.712079,-1.776800],[-6.447576,8.706024,9.818896,0.785437,8.473446,3.495698],[5.479826,5.171714,8.997769,-9.209830,8.115938,-3.993871],[-1.657963,-8.437089,-0.366860,3.493594,3.372227,-8.735572],[-7.356053,7.713600,8.151918,-7.049933,7.993464,-0.138053],[-9.452026,-4.632940,6.522430,9.503451,1.748081,7.688123],[-4.857616,-7.176969,5.518245,-4.981095,-8.590214,9.458115],[1.374916,1.612827,5.964218,3.224302,-2.331170,-6.325716],[-8.987761,-2.071884,1.695070,9.264218,-2.234211,5.719773],[7.590594,-4.195361,-8.605449,8.234675,1.162391,-6.931373],[-2.293001,-1.724970,-2.900888,4.760891,-1.275447,-2.890552],[4.946377,3.389561,-1.186802,-0.366055,4.359388,9.375487],[-3.974417,8.040609,2.836840,6.185291,1.795546,4.471381],[-4.178655,5.760843,-0.765084,-5.922331,2.628561,7.623459],[-5.326456,6.804739,-3.325319,2.356576,6.542360,-1.559057],[5.451641,5.918514,8.471776,-7.825944,9.421330,-4.238761],[7.434270,6.783786,1.108116,-4.321569,-3.705864,6.517366],[7.869857,-2.724902,7.966789,8.630946,-2.896408,8.731983],[6.594531,7.176506,3.727630,-1.126718,-8.525169,-9.680432],[9.843821,1.032237,-9.609666,-5.985198,-4.185092,3.143309],[-3.901619,-3.315800,1.036893,-3.123013,7.499836,5.189406],[-1.493896,5.449408,5.637348,-8.746140,5.600455,0.697416],[-1.930352,3.974823,-6.811578,-7.349860,9.807203,9.289596],[-3.277850,-3.154567,4.591427,4.120807,9.825905,-7.473825],[-9.879470,8.446650,-6.007298,0.260602,8.592197,8.697491],[3.469631,-0.046624,-6.303781,4.358512,6.964981,-9.279487],[1.356130,-8.174736,8.977384,-3.767916,1.993277,0.688940],[-6.083916,-0.331743,9.735075,2.811914,4.222138,4.201111],[3.722645,9.196976,-9.467040,9.616700,8.017149,9.438517],[-0.800099,-2.705189,0.894396,2.431205,-7.973513,4.737483],[-5.492405,5.308887,-4.609661,5.834238,5.006040,3.133739],[1.179051,-0.887185,-5.840541,6.414611,8.094576,1.469285],[2.418856,-7.420924,-2.811049,0.090318,-5.875340,3.037372],[1.193436,-3.606303,8.608137,5.774582,-5.018000,4.874321],[8.997258,6.268540,-8.951663,6.116364,7.515295,4.914595],[-7.921126,-5.053922,8.553171,6.146220,4.138555,-3.551780],[5.948804,3.278305,9.538954,0.861409,6.951932,2.559513],[3.088489,5.010511,-3.277751,-8.617994,9.189971,9.609634],[-1.689759,1.175414,-3.341009,-2.249760,2.711762,5.904798],[-0.367469,5.371700,8.970184,7.693935,-9.338454,9.641834],[-9.065700,5.131427,3.478800,-2.321916,4.169237,8.542115],[7.623657,-1.526932,9.312881,8.158709,-9.949530,2.238946],[1.345673,-6.872672,2.283577,-6.260309,5.619345,7.610434],[-3.074626,2.241076,1.943920,4.284217,-5.202602,-1.508822],[8.144625,-7.644687,-0.780435,6.118266,-9.334439,6.034587],[-3.532947,6.525057,6.507324,-7.839176,9.455087,-0.540027],[-9.078965,3.775243,1.388968,-6.713583,-3.643122,-6.764402],[-0.517383,-9.264823,3.247305,-5.132335,-0.590353,5.264289],[-6.868832,6.969156,7.855559,-5.382152,-3.144043,7.216176],[3.266500,-7.259143,-8.613925,1.702115,0.868470,0.162566],[4.638774,-7.838755,-2.040720,-4.436459,2.874260,-7.179296],[0.808722,-8.959932,-4.969191,6.352628,4.223866,4.596318],[-5.012318,-0.556448,5.921233,-0.094927,9.560649,-4.989561],[-3.284541,-0.922614,-0.624801,6.395039,1.211797,5.846737],[8.614425,-7.774021,2.493337,-0.742466,-6.245756,9.027599],[-4.634939,-2.624686,-9.982425,3.547295,1.214066,-6.425855],[-1.698720,4.029540,6.125991,-1.200969,5.157016,1.736814],[-7.447049,-9.775727,-5.967094,-7.488568,5.377316,-8.886634],[0.988110,4.590795,8.210273,2.302647,1.053699,0.801255],[2.432707,8.768538,-2.981336,8.124899,-9.646530,8.183052],[9.027182,4.600769,5.012883,-1.474680,-6.932445,6.136906],[1.874922,6.284723,-5.868555,0.143888,-2.286803,-6.196726],[5.144141,-4.126661,-0.787355,-2.687481,8.190766,-5.671916],[9.428882,-9.808114,-9.375224,9.909746,-6.708045,-9.714924],[-7.036475,-1.546958,-1.888992,0.075025,3.565614,8.255780],[-7.973499,9.030073,-6.783290,-1.708462,2.015201,1.297892],[-9.035550,2.520664,6.627225,6.797642,-0.355649,5.461271],[1.429759,-6.852105,-8.226004,-7.397252,-8.775800,-6.784219],[3.695213,-8.650891,7.787183,2.997063,7.547686,-7.369030],[-7.005691,-8.497087,-1.009990,-1.983810,-9.477827,-1.765462],[-2.572259,3.931921,-0.795787,9.703318,-7.650885,-2.030484],[3.208926,-8.825376,0.575049,-9.406372,-3.408674,-1.540146],[-8.110275,-9.602085,2.417021,4.620576,6.090470,-6.720232],[-0.366420,-8.773812,-4.082238,2.669517,-9.894109,-0.650979],[-9.679490,7.535432,2.812835,4.406582,-2.162206,-3.639770],[-8.241897,-8.468210,8.299197,-7.609510,-0.620063,-8.713673],[0.472522,4.303356,9.666770,5.680248,-4.853479,9.217019],[-0.331196,3.476979,-5.508498,1.260773,7.219063,2.966282],[-7.286653,-2.886830,-3.535776,0.310662,-2.081509,8.733214],[-3.109554,-2.083580,3.329036,-0.286806,-8.102843,5.202573],[-9.282319,-1.670746,-3.720082,-2.514884,6.538266,9.533900],[7.036038,3.041949,1.371522,-7.316937,-0.204719,-5.221226],[-2.596449,3.198528,-6.509751,0.359949,9.620328,-8.072578],[9.209143,8.994695,-7.407111,-3.434479,2.678073,2.439959],[-3.319987,1.390412,-8.509171,2.415155,-8.103354,-4.353272],[7.476249,5.894605,6.915492,-4.221245,-9.701585,3.868418],[-0.842401,3.818440,7.206141,4.151567,-0.935625,-0.367722],[-0.242644,4.103758,6.693310,-6.671509,8.926194,7.769053],[4.353993,-9.575777,3.976272,-8.198556,8.964138,-6.695077],[7.008304,1.382904,-4.664424,-6.881319,2.628927,7.121721],[0.703922,3.118197,-0.640822,5.920768,-0.769083,7.600083],[8.640623,3.653719,7.651342,-8.680316,9.028193,-2.945845],[3.223337,4.364273,-0.193251,3.670480,-3.863063,2.060336],[-3.632248,-1.217480,-3.276648,-0.517180,-3.125236,-4.163900],[8.848393,-0.383354,-4.304116,-1.397210,3.368914,-6.502667],[2.937878,-1.408295,-2.844805,-5.070339,-4.838570,2.915480],[-0.829899,9.810351,-8.794559,5.670039,-8.425729,-5.919416],[-9.179504,-8.251717,-7.338129,-2.418859,2.829363,9.080705],[-8.584837,-9.750056,2.249457,0.156300,5.070712,-6.045822],[-2.797782,-4.698577,8.468920,-5.166169,0.467180,1.107247],[8.102227,1.835473,-5.110171,3.178974,-7.376714,-0.071104],[5.506897,-3.576873,-5.885627,-0.585612,-3.516377,7.110917],[-1.743563,7.942216,-3.113210,3.540002,-4.149630,-2.981558],[-5.300059,2.698862,4.939420,-7.801867,9.070536,-1.064608],[9.786792,5.834185,7.603656,9.284851,-7.122724,2.317190],[5.132178,-0.252181,-3.454920,7.276991,-4.870331,2.213753],[-7.496324,9.159435,-1.771617,7.926541,-9.673156,5.934960],[8.196125,8.521066,-0.754726,-8.570095,-9.833342,5.228447],[-9.407093,5.782444,-3.725078,-7.546723,-4.238120,-9.685210],[0.145058,-0.918410,-7.474297,2.177716,-1.872454,1.041640],[-8.642527,-4.798207,6.230138,9.918694,-8.304677,-6.805848],[2.302684,1.313844,-1.540585,5.481258,0.850516,-4.656007],[4.392842,4.528652,-2.761226,-6.013997,3.189397,4.523949],[8.436996,-7.255251,7.240915,-4.735189,2.621867,-1.448095],[7.973958,-6.681537,0.092680,8.621317,-3.222737,-3.943498],[0.279513,8.049982,-2.491826,5.888033,2.607723,1.469637],[8.757275,-6.817147,-0.905251,-4.959873,-4.020613,-8.823639],[7.326631,-0.395104,3.464896,6.366169,-5.125837,6.617028],[6.297188,-4.228277,-6.758361,-7.661319,9.741550,-0.587293],[8.455508,1.770988,0.954489,-4.296723,7.244532,7.144391],[1.921407,-8.032211,8.104477,-0.513900,-1.583530,-3.276121],[1.332970,-6.145364,2.340318,-5.907032,-2.520200,-9.026627],[1.790828,-1.627109,3.375590,1.545657,-6.086751,-5.879765],[9.239022,2.786197,8.357983,-5.674561,-0.237871,7.176690],[-6.731440,-5.888670,-3.309063,-3.484246,2.383865,-4.073614],[-4.624610,-5.462567,7.362229,6.495911,1.053222,3.744681],[-7.444191,9.191197,-3.080362,-3.344991,-1.786305,4.672717],[5.258438,2.401221,6.440662,4.918908,3.523117,-3.997507],[7.082246,-9.919231,-1.798074,6.028694,2.197200,1.855877],[-8.560277,-3.959049,3.455724,3.146846,-9.286271,7.038256],[-7.607396,7.055631,-2.563577,5.609192,3.452467,6.828516],[9.270677,-4.304118,8.674693,-8.957806,4.598933,5.489441],[3.474294,2.022810,0.086920,1.159098,-1.807239,6.061703],[-7.692207,-7.030627,-9.361109,-0.256308,-4.453636,0.605568],[-9.604364,7.367362,-8.040731,-4.433893,7.403741,7.000037],[7.368603,5.350559,-5.901360,-3.141573,4.143709,-2.916438],[-4.712969,2.591589,-4.584833,7.215163,-8.656347,-9.324191],[7.707875,-6.630020,5.511436,3.873671,-7.256964,-3.435740],[8.867189,-5.540294,6.734436,0.570733,0.572743,-6.363690],[4.974655,-7.123725,2.421120,-9.144381,-9.445946,3.389019],[9.759636,-6.941337,1.617145,-6.843424,3.437693,4.974983],[6.973873,3.519169,8.375314,-0.627276,2.054433,1.308881],[-5.867170,2.969639,-3.953803,-8.440844,3.800770,-6.880055],[0.651527,8.303402,6.972821,1.506478,7.656611,7.659304],[-3.779110,0.097492,-9.386941,-2.439608,4.046140,4.220818],[7.902565,2.512713,-2.777007,8.986153,-6.075477,4.013086],[-1.545820,-6.616999,5.451317,-4.751237,-5.532753,9.624732],[-3.918127,7.854067,1.871503,-7.821083,-1.576888,6.378175],[4.777152,-9.597980,7.540565,8.762387,-7.852926,-5.077365],[4.264706,3.810731,-1.606203,-3.502436,1.274896,-3.628824],[5.898468,2.447374,-0.193030,-8.262289,9.097610,8.221152],[-6.848675,-9.556642,0.949448,-5.791659,-7.922990,-4.392224],[-3.642994,1.745002,-1.813398,-2.701861,-0.728775,2.935340],[-4.226748,-6.003463,-7.358722,2.121763,-4.301069,5.092998],[-2.078870,-7.815184,1.806318,3.282034,-4.312736,1.560200],[4.532051,-0.316085,4.397475,-3.388575,9.663583,-4.764984],[8.975350,0.209016,7.044527,4.511270,-2.394977,-1.567711],[-5.800945,-6.901574,5.742001,1.000246,9.531193,-5.627786],[8.221553,4.796348,-4.566991,-5.980789,3.785804,9.523514],[-5.989308,-5.178381,0.440234,-2.363555,-5.889272,-4.257548],[4.370343,-8.393414,3.897723,2.337629,-4.520927,9.625227],[-7.658289,-0.557719,2.086575,0.468172,-4.963652,0.251884],[-0.907074,3.889100,-4.353864,-5.106685,1.239385,-7.012202],[-6.726422,9.395995,-8.515872,5.199255,-2.776518,-1.966652],[8.503676,5.622600,2.213622,9.837337,-2.769369,4.729252],[-2.355022,-0.870519,-0.599258,-2.140477,6.376044,3.743432],[8.885916,-9.503408,-4.332499,2.647982,-0.433542,7.296924],[3.502798,-0.032504,0.868045,-3.223516,4.702401,1.710862],[-6.623075,-1.140230,4.684596,7.251963,-6.306734,-9.067069],[7.249896,7.712992,-4.582986,9.582116,2.942215,-0.758150],[8.545559,1.132936,9.894920,6.980834,-4.074964,4.618594],[4.675033,-0.686077,5.128737,9.001894,2.611252,-6.066333],[2.165720,2.822350,0.550073,-0.502214,0.086175,-8.633093],[-6.942481,-5.531469,5.785900,7.456213,-9.820964,9.045958],[-0.902954,-2.276289,6.963749,-8.065603,2.468539,7.182132],[8.714660,2.079242,6.639582,2.585595,6.693839,3.663079],[-9.412821,-2.157258,-3.986136,-2.353739,-7.431336,-4.927082],[2.642673,-0.116046,6.830599,-3.911092,8.567044,9.880605],[6.440098,0.395005,-2.245244,4.577655,2.443892,5.691520],[3.217210,-9.068246,9.872558,0.779539,2.641126,2.405671],[-7.545399,2.809028,0.870907,-3.166407,-0.847665,-7.820244],[-5.712897,8.409093,5.388916,-7.081227,-9.093453,-2.756400],[5.445636,-5.632708,6.951231,2.114742,3.677165,-3.009046],[2.652702,3.856368,-7.130517,-5.279015,-0.077299,-3.587890],[9.964669,-5.908599,0.561147,2.406946,6.205481,-2.625199],[7.254179,-6.035441,-7.321482,2.266586,7.999900,9.936169],[-5.343382,8.082413,8.250076,-0.108988,-1.753665,-0.093317],[9.158866,-1.694779,-0.043227,-5.150726,5.866860,-7.479039],[4.919067,6.419664,3.664002,-7.818942,4.683056,-1.487448],[7.735428,8.753657,7.405142,0.340178,8.298111,9.887063],[-4.914526,0.036360,-7.428806,-8.956470,1.173686,8.237286],[-0.126354,1.398738,4.401546,6.598607,-8.617079,-6.568491],[-0.978958,7.437741,8.902812,2.526922,-2.063556,3.871454],[2.545939,-6.897356,-3.638081,1.800929,5.811607,-2.714633],[-4.472941,6.239315,-1.500034,-6.997083,7.676666,-7.649225],[1.974239,3.895369,-2.471920,-7.832755,-8.031493,-4.220479],[-9.885940,7.989530,-9.787777,-1.908782,4.278975,-0.210111],[2.671450,8.229137,-2.678537,-9.969332,0.873947,5.784995],[-3.474359,2.767042,-2.297675,0.084271,6.630932,-8.460971],[-3.602017,-7.369241,-5.333290,4.979794,-8.824978,-7.890662],[-1.822728,-0.408658,-0.812963,3.108005,8.434795,8.995316],[6.240684,5.842307,-6.618446,-2.575283,-9.944766,-6.517273],[2.441188,2.446978,-4.808483,-5.323750,-5.804094,3.265145],[-9.015940,2.303919,9.455621,6.339797,-5.777592,-3.028674],[-3.241237,9.122302,0.896600,3.762638,-9.377203,-5.697996],[6.207723,8.899877,3.317945,-8.302568,-8.902329,-8.473140],[7.743238,-9.440883,-3.302125,-3.663692,1.929495,9.670073],[5.457700,-1.001327,7.841974,8.164484,2.235191,-0.305185],[1.716613,4.748409,6.092388,9.306159,7.770736,-6.561146],[-3.663654,6.497517,-8.849136,5.829867,2.327708,8.158591],[-4.702707,3.848428,-2.205422,0.022098,2.088242,6.143613],[-6.400808,9.195962,-7.146433,1.709988,-5.815630,-8.480578],[3.229108,-7.891992,3.694864,-4.932901,-8.491928,-9.126676],[5.275570,-4.863651,-9.485998,6.674664,5.229713,-9.231263],[-0.952500,-2.745751,-1.576978,-6.762937,-5.229914,4.178091],[-8.924159,-7.012102,3.707933,9.421764,-4.943531,2.680084],[1.440326,9.132278,0.581946,-4.349972,3.048771,-1.376408],[-1.197117,0.326761,-6.209648,-2.385298,-7.343357,5.600704],[4.693193,3.611526,5.310113,-4.454002,9.708144,8.130212],[-8.977962,9.957137,-9.186922,9.526466,-9.966091,-9.008400],[0.196375,0.728411,9.223383,-6.640313,-4.023461,-5.276630],[-7.817918,-0.905010,-9.810385,0.723922,-3.154713,-8.188917],[-7.970633,8.114744,-8.612784,5.351125,-2.873485,-8.779999],[-9.616100,5.972037,-6.175180,-8.060555,-5.567200,-1.272060],[-6.757768,5.501460,-7.837987,2.880697,-1.429847,1.767971],[-3.265679,-8.720343,-0.944639,-9.035115,8.872518,5.313734],[8.934216,1.523434,-2.291160,-4.233940,9.260152,0.371477],[0.003795,-8.838878,4.167958,9.189972,9.546810,8.421582],[-4.387210,-0.375980,8.001079,1.481889,8.465879,-2.775585],[-5.017624,-8.269073,7.745599,-5.146658,-1.614182,-1.504779],[-1.004684,-7.971054,5.527954,3.677548,8.263446,-6.067679],[5.622686,-6.117204,-5.928761,0.674777,8.015408,-3.132087],[8.583349,-7.508904,0.693990,-5.318478,-2.722477,7.843431],[-1.766384,2.468870,-2.459494,-6.990217,0.356804,-0.819998],[4.707627,-3.237974,5.139877,4.117613,5.522587,2.241827],[-6.563843,9.714947,-7.020466,5.139731,3.095005,-6.263421],[-9.223880,-9.003926,2.668681,2.942973,-2.992324,-4.136368],[-8.008733,-2.599023,4.647323,-2.295337,7.467601,-0.283893],[5.691891,-5.503485,-2.597330,-1.545753,2.698769,-5.940551],[-5.103132,-2.265727,6.251633,-0.236454,-5.364997,-6.924253],[-4.254856,-1.508225,-5.595182,7.034928,-2.178644,-7.687092],[8.758452,2.151485,2.810334,4.308976,2.925748,-4.104019],[-6.644064,-6.117240,-8.370313,-2.062905,7.630288,-2.051347],[5.911456,1.706096,-4.973383,-0.565534,0.358763,-9.173130],[6.569704,-0.135602,5.875714,-4.583180,0.961039,8.061379],[6.036374,9.521102,-4.518399,-4.014743,0.506392,9.116098],[2.275718,3.218493,2.211123,-0.445413,-1.191015,7.034572],[4.960135,2.806059,-4.575480,-4.325838,1.475438,-6.006412],[-0.951374,0.519063,8.155950,9.517124,6.393123,8.607544],[-4.233566,9.890474,-9.630296,1.285398,-6.022598,-5.328834],[9.002591,-7.820278,-9.096924,-2.106107,2.170149,0.546394],[-7.194571,-0.575152,7.676507,-8.432868,0.918654,-7.869781],[-4.319631,8.726573,9.563105,3.898233,1.843970,8.222504],[-2.486341,-1.997811,9.975261,-7.604833,-4.026178,2.026639],[-7.677377,5.843681,-2.438623,8.392707,7.109959,2.329326],[8.928754,0.563387,7.162194,-6.424087,-5.381164,6.843557],[-2.737746,8.605359,-7.860815,2.682410,-0.523876,-1.780165],[-7.600102,5.060656,9.728297,-5.487944,9.982679,8.565176],[-4.254899,0.476258,-5.398780,7.018497,-3.065623,7.368108],[3.066484,-7.935692,1.017352,-2.748007,-6.166560,-7.764781],[2.549847,-2.741110,-1.814516,0.589720,-7.078320,-6.826336],[6.392016,5.566705,-1.278986,7.813524,6.316047,-2.247057],[-0.840524,0.557201,-7.867218,-8.164577,-8.983593,6.015359],[-9.294631,-4.619961,6.374543,4.473793,-8.321232,-8.500193],[4.803343,-8.698953,6.451019,-9.681834,-4.822676,1.611785],[4.134550,-8.630993,-4.432985,-5.248836,-5.208800,6.026838],[8.184851,-5.549130,-3.096650,5.001933,-5.627644,-5.894792],[-3.459235,-9.212488,-1.396773,1.050090,6.627655,-3.921151],[6.749727,6.521274,7.446932,9.271343,7.259371,-4.660451],[2.779323,-5.352330,5.681891,2.684889,5.666313,-5.842505],[5.515584,8.882336,8.350769,4.065928,-1.393998,-9.778849],[8.751884,8.714675,-7.834462,-1.234097,8.281355,2.304304],[-0.629775,-8.198111,-6.828097,1.400589,-3.292886,0.918870],[-9.749980,6.138738,9.367192,-4.594570,8.415873,8.012559],[9.676471,5.763430,-3.107964,-3.089525,-7.119702,-3.925418],[7.415698,-3.547115,-1.079027,-1.687418,-6.478299,-1.562412],[1.711600,0.357875,-8.951892,-2.255487,-6.834150,-4.135148],[1.107528,5.431677,8.997199,-1.222165,-9.550105,-3.667097],[-5.307936,7.755682,-8.977907,-0.268221,5.341673,1.003156],[7.298686,8.879161,4.745327,-5.254311,-2.571150,-4.605631],[-0.917048,7.703299,-8.897390,0.859401,-7.316268,1.542434],[-7.399996,-2.792906,5.151834,1.880039,-4.269220,9.193522],[-5.801655,-6.655445,0.924844,-8.712773,8.236445,-7.975871],[-9.061048,4.052638,4.388581,4.634947,-6.010775,5.133379],[3.631758,-0.268056,1.930929,-3.754340,-2.310961,1.405637],[2.506343,4.473839,7.602643,-3.999458,7.837158,-6.437449],[7.444356,2.801968,2.196295,0.942165,0.517210,-5.265876],[8.844043,2.121753,5.052414,-8.305193,-2.770547,-3.966078],[0.658630,5.347955,-6.223766,7.186436,-6.142234,6.915276],[0.872757,-2.373463,4.622437,-6.402873,3.213966,-9.084663],[-1.474589,-7.787765,-1.154386,-2.085896,5.929549,-5.212308],[6.721817,7.226536,-0.968927,4.646301,-7.439683,4.315810],[1.546229,-2.828302,2.489217,2.763216,8.320748,-4.280431],[-8.196178,-9.093917,2.866185,3.579539,-3.353171,-9.255790],[-9.327947,7.645490,7.678169,-1.603236,-3.425651,-8.025462],[5.674577,7.792166,2.592328,-1.309578,-7.932113,6.223455],[8.186690,-7.818716,-1.041887,1.500726,-8.661284,1.544662],[5.885697,-5.830666,-8.069854,6.783376,2.295090,1.329790],[-1.139133,-4.813648,-4.882779,-6.256923,0.192165,7.495569],[1.989343,-5.483015,3.916648,-9.500142,1.207439,-6.669332],[8.298297,6.260541,-1.633853,8.405107,-3.780504,9.067518],[4.493200,-9.470296,-9.892543,-6.940936,-7.738840,-4.951085],[-9.351263,-8.176911,2.650382,-3.201827,-2.667252,8.600573],[-7.910288,-4.855157,7.535731,0.130599,2.465504,4.137461],[1.955100,-1.806339,-4.769997,-1.504732,6.954201,-3.503711],[6.316061,2.831931,-6.568378,4.040290,1.387816,5.630672],[3.032684,3.373875,-5.736543,7.546922,9.533164,-8.699867],[-1.558045,-0.384781,0.033019,-9.950032,4.234689,5.012334],[8.937425,-2.369787,-5.618763,8.879301,-9.454609,-5.306319],[4.826100,1.445819,5.391733,-5.598180,-8.896138,5.117386],[6.240659,-7.056809,4.818729,-2.437328,-4.206847,3.432652],[-4.289991,6.626693,-4.186861,0.199066,2.998120,-3.964037],[-2.618084,-3.788535,2.570514,7.519782,8.490276,-9.110054],[1.785447,6.973679,8.679941,-9.589903,0.007546,9.434942],[8.259131,6.970666,4.966480,-6.704155,-9.364620,-9.552996],[-8.143657,-2.097463,0.614333,9.005201,9.747266,8.704658],[3.659628,-5.240478,5.377854,-0.274391,5.332820,4.489657],[8.172185,-1.767696,-7.692311,-1.882763,-0.645459,-1.772972],[0.010901,-6.697257,9.158576,3.279238,4.975021,6.502350],[9.494739,-6.958520,-0.659520,9.478042,9.130044,9.546242],[-0.205482,-6.098435,1.597689,2.595661,-8.677868,5.104003],[7.338477,6.108635,8.718464,9.036715,-2.263995,4.307248],[4.828838,3.291447,-4.266382,-7.275878,-2.697220,-8.585832],[2.554270,-1.617839,9.542489,1.603725,-4.143802,-4.400005],[-9.737116,5.708392,7.651833,4.617652,0.686574,7.679433],[5.241972,0.386160,-2.868769,9.205305,3.947188,-8.843180],[-6.384428,8.893736,-8.449937,-3.630715,4.300662,3.078498],[-9.553374,4.609480,5.792824,6.068451,-1.697753,-8.109371],[-7.416776,-2.696487,2.202093,5.611989,9.397162,9.177614],[-3.138052,-5.376955,1.557757,-2.174958,-6.858282,4.069108],[-2.852540,-4.076400,3.149501,0.789684,4.091593,7.399440],[-2.595700,-8.219141,1.758067,2.607325,4.903556,7.309116],[-2.372950,-5.457236,5.679712,-8.593092,-4.836521,-5.814381],[-1.390067,-3.982276,-3.164131,-6.050595,-2.872880,-9.328945],[-7.553488,5.193638,4.245611,-0.105627,-7.253585,-5.654009],[3.662077,8.573453,5.108228,6.229144,9.242240,9.536796],[-6.134083,8.675626,-3.532263,-6.435261,1.923767,-9.643787]], dtype = "float64")#candidate|1473|(360, 6)|const|float64
const_1474 = relay.const([5.386969,7.468872,-5.269483,9.489700,1.711847,1.831697,-3.487357,-3.738857,-8.242727,2.709984,6.073429,-1.864747,4.444837,6.022806,3.372821,-0.769668,-1.055260,3.589020,-7.035866,-7.368524,-9.490651,-8.626293,5.418546,1.469669,-0.453173,-7.081100,-0.738317,9.032502,-3.420562,-8.423594,-4.430565,-7.753479,8.291271,4.808567,-3.512745,9.234795,5.156938,0.404818,-4.381954,5.492146,1.119786,-3.828236,-0.856015,2.344073,-9.736489,-5.148454,-3.555310,4.635587,9.012818,1.647466,-4.859381,-6.067860,8.287457,-9.456443,-8.474921,-2.882683,-8.708422,4.377398,-2.889498,1.498251,6.546251,-6.028791,-6.340524,3.444240,-1.640033,-1.053676,4.388817,6.627673,-7.492322,-7.419164,8.722692,1.320318,1.584791,-6.674709,7.542371,-3.614052,8.129132,5.829185,-7.346915,4.954244,9.010870,2.196819,-0.436601,5.163712,2.970498,7.150666,6.886351,-9.297603,-7.511079,-8.874121,-6.804613,-4.853387,1.889020,6.132521,-6.968528,4.385774,-1.161874,-7.111218,2.474499,-8.696363,0.264921,3.752275,-6.342582,5.052871,-9.813157,-5.708707,-2.701023,-4.927196,-1.780233,0.513581,6.105760,2.498024,8.699846,-4.501299,0.865736,1.854935,5.205722,3.012212,-6.251300,-2.059128,5.591196,5.216763,5.091518,0.637810,-3.843048,-2.316963,9.780356,5.269524,0.440586,5.402846,-5.339783,7.831551,0.032010,9.058243,1.429328,-5.047308,3.967326,-0.604990,-8.895476,-5.653944,-3.778741,-2.997460,-7.441147,-6.798639,8.185182,2.233621,3.116724,8.898261,5.404100,-1.193568,-7.145787,0.300930,0.515420,-8.383323,-0.220536,-3.655534,4.718854,-8.348633,-9.237346,3.177567,9.696669,-3.229429,5.221745,6.856386,-1.953237,2.119154,6.407252,-8.109836,-5.658773,-3.594013,-6.307239,2.730473,0.347118,0.634238,2.583345,1.317777,8.657030,7.155421,-2.474388,-1.684773,-0.585607,1.966754,-5.398405,-3.977638,7.083722,5.470114,1.227771,4.695413,9.992965,5.494594,-5.017524,5.803173,-2.293611,-2.315952,7.846753,6.094884,9.910609,9.828481,7.310041,-6.840842,-1.499733,-1.161861,4.623557,-4.010675,-2.059534,5.221691,9.110154,4.921152,3.737113,-2.889658,-1.853536,-2.749623,-0.544973,0.363705,-8.918748,-5.780522,-8.818844,-7.921258,5.175948,-0.611431,-9.279576,-8.463010,-6.471316,9.981933,8.633304,-1.739867,-1.766752,1.165548,9.960754,-7.662196,4.383210,-7.645388,0.408022,8.741380,-6.762526,-1.820859,9.599433,-7.513547,-6.194175,4.618191,0.519429,8.675268,-8.882566,-0.396741,-3.274922,3.814333,-7.842709,7.523899,9.441054,-1.089298,-0.923688,-3.335499,5.987621,3.532611,7.548855,9.661449,-3.000632,-3.393914,-7.196427,-4.478591,8.628982,-0.560976,-9.433197,6.215176,-2.861427,2.351798,-1.827046,-5.698786,-3.139269,-6.951947,-8.642833,-5.870264,-1.378448,0.578569,2.035953,7.554957,-1.646291,-4.278181,8.227234,-1.986268,8.009207,-2.505762,2.312596,1.972055,-1.337354,1.254288,-2.886041,-5.050071,-0.297573,6.290295,4.587951,-7.252924,-7.045354,-5.130331,-7.238472,4.722613,-4.963984,-7.456819,-5.561360,4.205966,4.310820,1.077426,-6.599769,-6.493221,8.474239,2.277137,0.318707,-1.057267,-0.918032,2.070247,3.795757,8.764533,4.826025,-4.619565,4.740053,-9.597370,-6.262685,-0.988717,5.821515,-7.587570,-7.861194,-5.937405,4.138030,0.628197,5.792331,7.617238,6.352440,2.239687,-0.342894,-3.188136,8.556489,-0.194972,-0.229888,9.081124,4.930226,5.494794,9.347412,4.465260,-7.417832,-0.040988,-9.434855,7.460509,-3.618112,-8.391127,-5.527754,5.048871,5.110006,2.927591,-2.207184,-6.815645,-3.535806,-4.342589,9.050077,4.919280,-2.822255,5.504563,3.117566,8.517000,9.111874,-2.951690,-1.830338,-6.897202,5.950092,-5.846260,-2.431513,5.469908,-3.742292,-2.695860,-1.319058,6.311684,7.105949,3.779756,7.545735,1.244331,-7.847929,-2.923840,3.221353,-2.032725,2.560251,-5.063420,5.648294,-2.412536,5.804387,9.725542,-1.725544,4.175360,-2.597854,-6.836193,7.845793,-4.739403,5.948796,-2.613538,2.683511,2.981560,2.357777,-8.666880,-4.609979,-0.969942,4.763516,0.706166,4.365902,-3.554549,2.120750,4.284554,-2.730741,-9.656234,7.104413,-3.408802,8.867775,4.447238,0.234439,-8.166358,-8.935045,-8.399061,-1.224513,-5.662668,-2.407788,9.379233,0.914592,-7.607357,4.859686,-5.759848,0.675433,1.231169,-5.233775,-2.752413,6.713081,7.579449,4.907959,6.150929,2.717110,9.193902,-4.298025,5.889136,-1.018421,7.247349,-5.995150,-0.635890,-1.585128,9.188975,-9.696228,2.489396,-1.228385,0.163012,-4.183605,4.584315,-1.520135,0.916720,-2.313140,0.525315,-0.400691,-0.781683,-8.199467,-5.240612,-6.121180,6.794533,5.129798,-0.762058,-5.169528,-1.984629,2.467244,-1.790617,-7.895733,-2.035355,3.003583,1.646102,2.271496,-4.858766,-9.612615,-8.605270,-6.209436,2.285734,-7.981305,1.777044,-1.608941,2.236277,-9.475752,9.906883,1.102076,5.813373,4.383137,-3.509591,-1.872092,-6.975733,-2.163265,5.781234,7.314355,-2.394739,2.632560,-4.728145,8.244364,2.741657,9.216180,8.377943,-8.284806,6.470673,5.891495,-3.321966,3.410376,0.981966,-4.912363,-2.348615,0.295463,2.515213,8.880227,-9.178263,-5.749898,-3.593298,3.598706,-9.985720,-9.396541,6.705557,-3.183507,4.429279,2.168624,6.718923,5.876627,6.912998,-0.461905,6.326219,-4.514291,8.697526,4.050005,-5.543559,2.225462,0.930051,6.150248,9.416633,-0.198729,0.221147,0.088071,8.792287,-2.353590,-6.092328,-8.921215,-1.787646,8.600161,2.063724,3.840030,2.306902,-9.457277,-1.101166,-1.681191,1.857211,-5.769790,-9.828243,5.324028,7.360316,-6.690818,2.812856,8.278106,0.948478,0.999000,-8.938862,-6.273268,4.977997,-3.839583,-8.882705,7.196593,7.013721,-1.024057,-7.155517,-4.149302,-8.706578,7.189997,8.215162,4.160543,0.283029,1.124974,-2.278106,-2.378014,-5.312959,7.801453,4.430528,5.782526,8.150302,-5.072901,8.203527,3.618431,9.278127,8.128867,4.404280,6.955267,6.360279,-2.434826,-8.876424,6.010700,4.007793,-3.994181,-6.916619,-2.958079,0.173323,8.962816,2.686004,-7.445567,4.863410,5.836252,1.479581,6.856196,9.995576,-4.661506,-2.937243,-5.815437,-9.405181,-3.727850,-1.431014,-3.696324,5.488944,2.359161,-9.666657,6.528805,2.343964,2.328620,1.537856,-1.394691,-5.441300,8.383580,-7.983046,1.426865,-3.821722,6.742654,-9.868288,-9.498837,9.275376,-5.619742,-6.662769,0.629666,-4.743763,-1.677602,-5.843983,-4.641153,3.487048,8.924260,3.297382,-0.800658,3.909945,4.912363,-2.357366,8.557273,0.408618,3.528996,-8.183670,8.257711,0.415197,-4.756785,-6.450502,9.715020,-1.021150,-4.362372,0.028385,4.707966,-5.945937,-1.184714,4.087104,8.170531,9.117768,-9.032352,6.383743,-5.814704,9.361185,-8.248028,2.993470,6.786101,2.034304,6.750845,-7.219956,1.289090,1.823686,5.212634,6.078976,9.387128,-7.059492,-6.279749,-3.136616,-0.409789,-1.389439,0.050590,-3.654193,6.997657,-7.926194,-8.222352,-2.738369,-5.544624,3.473246,-1.710001,-9.055480,1.027244,6.594863,-9.087679,-1.975651,1.735327,-1.373323,-6.297351,6.453629,-6.402714,4.588453,-7.808418,-5.801372,4.316771,5.274192,-9.144281,-2.121853,-8.195078,-7.737909,1.356263,9.094245,9.986926,5.038154,4.461652,2.875202,9.360591,-8.228540,-6.337654,-7.332440,4.793883,3.595108,9.490601,7.263926,1.068425,-1.991802,7.338910,6.402723,6.040550,-4.040131,9.969615,-8.817107,-7.772844,2.101380,0.704697,9.383663,6.744934,2.108579,-5.781951,-6.369743,-1.310524,-1.903403,-0.397363,-4.780880,-0.569801,-0.820269,-8.333384,-1.888436,-4.016309,-1.644591,8.313858,-9.245399,-2.006222,8.780311,-0.103196,1.961186,1.601832,-2.810556,1.274754,7.190011,-2.654488,-4.498030,1.354178,8.190677,-5.066920,9.249590,5.368165,-8.285865,8.417080,-0.717425,8.985712,-0.391588,5.878934,-9.566064,1.744882,9.021788,-1.369401,1.045575,-4.331267,0.532442,-2.797607,0.938791,-0.106409,6.289463,3.442527,1.388029,0.210042,4.295338,1.445944,-7.843574,-4.598238,-0.144679,5.533408,-3.703442,-6.059819,-4.744628,-7.088957,5.518317,6.044101,0.767029,-0.578593,2.640290,-6.138615,1.022055,-9.351218,1.324819,6.566678,0.427468,6.251746,-9.033943,1.083747,-0.458296,-8.577611,-8.930107,-9.222446,7.879187,4.079802,4.440736,3.159220,7.168542,-2.194647,-1.232252,-3.090327,-5.235938,7.963127,5.065639,0.413998,5.314040,7.602424,6.439561,2.630233,8.491637,2.363787,-6.381031,9.059237,-5.956577,-3.729021,8.629139,1.182237,-8.278282,-3.915023,4.992401,1.317370,-2.737840,0.698593,6.935008,-6.418848,4.136122,3.921664,-7.995180,5.066608,-9.432193,-6.001537,-9.042617,1.973845,-1.484373,-9.898592,1.339769,-8.850164,0.136454,8.821646,-2.519584,7.379181,9.465297,-1.251900,4.081031,-6.150113,7.161025,6.582880,-1.660405,8.644237,-8.384568,9.769628,5.911120,8.181855,2.421383,4.782770,-2.157705,8.366326,4.341447,-2.689103,0.497210,-9.850135,8.922090,-0.232398,-5.592430,-4.641923,2.606173,-2.042195,-6.005987,4.712717,-7.185052,6.986206,6.470538,-9.804393,-5.395125,9.018699,-5.178898,4.907259,9.743205,3.773399,1.998747,2.797471,3.041799,9.266401,7.648880,5.523043,-9.028123,9.203044,6.523483,-8.565519,-8.768800,5.027333,-7.990172,-5.141908,-7.650978,1.076357,7.637838,0.629071,6.419988,-8.637792,1.943482,-7.908282,5.195093,-8.280059,-8.764348,-2.770167,-2.528964,8.935913,-2.929090,5.483875,3.139792,-6.444555,2.642761,-7.002868,2.083014,4.516754,-0.378144,-6.379107,4.721029,2.670691,9.038718,-6.136286,4.856256,-6.749397,7.839311,6.731778,6.586433,-2.629130,0.728865,9.022713,2.795643,4.508783,-4.180431,5.982519,-4.660497,2.952064,5.521002,-6.636903,4.194815,-9.302272,-4.150843,-5.631010,-3.350567,-2.018171,2.834364], dtype = "float32")#candidate|1474|(960,)|const|float32
call_1472 = relay.TupleGetItem(func_1203_call(relay.reshape(const_1473.astype('float64'), [180, 12]), relay.reshape(const_1474.astype('float32'), [10, 96]), relay.reshape(const_1473.astype('float32'), [180, 12]), relay.reshape(const_1473.astype('float32'), [180, 12]), ), 11)
call_1475 = relay.TupleGetItem(func_1209_call(relay.reshape(const_1473.astype('float64'), [180, 12]), relay.reshape(const_1474.astype('float32'), [10, 96]), relay.reshape(const_1473.astype('float32'), [180, 12]), relay.reshape(const_1473.astype('float32'), [180, 12]), ), 11)
func_879_call = mod.get_global_var('func_879')
func_882_call = mutated_mod.get_global_var('func_882')
const_1498 = relay.const([1.636953,3.014557,-7.440553,1.141249,8.978791,-2.959704,-4.762427,-6.473118,0.603400,5.034735,-9.962982,-9.460065,6.666470,-7.184423,-1.807390,-4.694575,-9.579560,-7.970061,-7.653321,-5.633025,9.226723,-1.987331,2.816104,8.330165,-3.912262,9.611648,-8.160599,7.660555,7.422382,0.934645,9.891796,2.914507,6.599239,-1.227783,-1.302976,4.609089,4.250771,5.642809,4.144647,5.076505,0.790255,-1.766759,7.806468,3.445091,6.466073,-8.555163,-2.579988,-6.464085,7.420996,8.700316,2.310741,-1.679133,9.679820,-8.539142,-6.040614,-7.605116,-5.949886,-3.497086,3.284558,7.903314,-7.069357,6.402069,9.182344,-0.845867,1.219450,-1.833094,-2.056878,0.687756,-7.143742,-3.901948,-1.264688,8.522556,1.217361,-2.231359,6.722542,7.988534,3.296628,6.176120,-6.316297,1.089884,2.920250,4.347809,-8.417764,0.639017,-6.427403,-8.769709,2.673734,9.988436,6.490527,3.469568,9.501756,-0.135850,1.265456,-6.735026,2.274284,4.196829,3.733620,-2.262834,-2.553981,4.530681,-5.770723,8.257284,7.760869,-3.471354,-9.719750,2.268178,3.593129,-5.812176,9.115997,-3.127153,-4.184411,-1.870699,-3.006667,-5.613388,-8.232379,1.418253,9.981768,-2.419581,-8.196567,5.715320,-1.805640,-0.014797,-7.935385,1.795065,2.480013,-1.026850,8.054296,-1.327515,8.195300,-7.505728,-7.621904,-1.299319,-7.088426,-5.894182,-0.945609,3.534717,-1.755378,-8.377991,-4.106044,8.930495,7.379422,-4.595706,-6.249527,8.145042,3.286195,4.326137,1.032452,4.163076,8.332921,-3.939030,7.005855,-1.668358,-5.122225,-9.057431,-6.614934,-5.803120], dtype = "float32")#candidate|1498|(156,)|const|float32
call_1497 = relay.TupleGetItem(func_879_call(relay.reshape(const_1498.astype('float32'), [13, 1, 12])), 2)
call_1499 = relay.TupleGetItem(func_882_call(relay.reshape(const_1498.astype('float32'), [13, 1, 12])), 2)
output = relay.Tuple([call_1470,call_1472,const_1473,const_1474,call_1497,const_1498,])
output2 = relay.Tuple([call_1471,call_1475,const_1473,const_1474,call_1499,const_1498,])
func_1505 = relay.Function([], output)
mod['func_1505'] = func_1505
mod = relay.transform.InferType()(mod)
mutated_mod['func_1505'] = func_1505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mutated_mod.get_global_var('func_1505')
call_1506 = func_1505_call()
output = call_1506
func_1507 = relay.Function([], output)
mutated_mod['func_1507'] = func_1507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
call_1511 = relay.TupleGetItem(func_1505_call(), 1)
call_1512 = relay.TupleGetItem(func_1507_call(), 1)
uop_1513 = relay.atanh(call_1511.astype('float64')) # shape=(180, 12)
uop_1515 = relay.atanh(call_1512.astype('float64')) # shape=(180, 12)
uop_1517 = relay.sinh(uop_1513.astype('float32')) # shape=(180, 12)
uop_1519 = relay.sinh(uop_1515.astype('float32')) # shape=(180, 12)
output = uop_1517
output2 = uop_1519
func_1525 = relay.Function([], output)
mod['func_1525'] = func_1525
mod = relay.transform.InferType()(mod)
output = func_1525()
func_1526 = relay.Function([], output)
mutated_mod['func_1526'] = func_1526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1525_call = mod.get_global_var('func_1525')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_1556 = func_1525_call()
call_1557 = func_1525_call()
output = relay.Tuple([call_1556,])
output2 = relay.Tuple([call_1557,])
func_1566 = relay.Function([], output)
mod['func_1566'] = func_1566
mod = relay.transform.InferType()(mod)
output = func_1566()
func_1567 = relay.Function([], output)
mutated_mod['func_1567'] = func_1567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1525_call = mod.get_global_var('func_1525')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_1614 = func_1525_call()
call_1615 = func_1525_call()
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
var_1643 = relay.var("var_1643", dtype = "float64", shape = (135,))#candidate|1643|(135,)|var|float64
call_1642 = func_48_call(relay.reshape(var_1643.astype('float64'), [15, 1, 9]), relay.reshape(call_1614.astype('float64'), [15, 16, 9]), )
call_1644 = func_48_call(relay.reshape(var_1643.astype('float64'), [15, 1, 9]), relay.reshape(call_1614.astype('float64'), [15, 16, 9]), )
uop_1665 = relay.sigmoid(call_1642.astype('float64')) # shape=(15, 16, 9)
uop_1667 = relay.sigmoid(call_1644.astype('float64')) # shape=(15, 16, 9)
bop_1678 = relay.bitwise_and(call_1614.astype('uint64'), relay.reshape(call_1642.astype('uint64'), relay.shape_of(call_1614))) # shape=(180, 12)
bop_1681 = relay.bitwise_and(call_1615.astype('uint64'), relay.reshape(call_1644.astype('uint64'), relay.shape_of(call_1615))) # shape=(180, 12)
bop_1686 = relay.floor_divide(uop_1665.astype('float32'), relay.reshape(call_1642.astype('float32'), relay.shape_of(uop_1665))) # shape=(15, 16, 9)
bop_1689 = relay.floor_divide(uop_1667.astype('float32'), relay.reshape(call_1644.astype('float32'), relay.shape_of(uop_1667))) # shape=(15, 16, 9)
func_1437_call = mod.get_global_var('func_1437')
func_1439_call = mutated_mod.get_global_var('func_1439')
call_1699 = relay.TupleGetItem(func_1437_call(relay.reshape(var_1643.astype('float64'), [135,])), 2)
call_1700 = relay.TupleGetItem(func_1439_call(relay.reshape(var_1643.astype('float64'), [135,])), 2)
bop_1702 = relay.minimum(bop_1686.astype('int64'), relay.reshape(uop_1665.astype('int64'), relay.shape_of(bop_1686))) # shape=(15, 16, 9)
bop_1705 = relay.minimum(bop_1689.astype('int64'), relay.reshape(uop_1667.astype('int64'), relay.shape_of(bop_1689))) # shape=(15, 16, 9)
bop_1706 = relay.not_equal(uop_1665.astype('bool'), relay.reshape(bop_1702.astype('bool'), relay.shape_of(uop_1665))) # shape=(15, 16, 9)
bop_1709 = relay.not_equal(uop_1667.astype('bool'), relay.reshape(bop_1705.astype('bool'), relay.shape_of(uop_1667))) # shape=(15, 16, 9)
var_1720 = relay.var("var_1720", dtype = "bool", shape = (15, 16, 9))#candidate|1720|(15, 16, 9)|var|bool
bop_1721 = relay.subtract(bop_1706.astype('uint64'), relay.reshape(var_1720.astype('uint64'), relay.shape_of(bop_1706))) # shape=(15, 16, 9)
bop_1724 = relay.subtract(bop_1709.astype('uint64'), relay.reshape(var_1720.astype('uint64'), relay.shape_of(bop_1709))) # shape=(15, 16, 9)
output = relay.Tuple([var_1643,bop_1678,call_1699,bop_1721,])
output2 = relay.Tuple([var_1643,bop_1681,call_1700,bop_1724,])
func_1738 = relay.Function([var_1643,var_1720,], output)
mod['func_1738'] = func_1738
mod = relay.transform.InferType()(mod)
mutated_mod['func_1738'] = func_1738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1738_call = mutated_mod.get_global_var('func_1738')
var_1740 = relay.var("var_1740", dtype = "float64", shape = (135,))#candidate|1740|(135,)|var|float64
var_1741 = relay.var("var_1741", dtype = "bool", shape = (15, 16, 9))#candidate|1741|(15, 16, 9)|var|bool
call_1739 = func_1738_call(var_1740,var_1741,)
output = call_1739
func_1742 = relay.Function([var_1740,var_1741,], output)
mutated_mod['func_1742'] = func_1742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_1747 = func_1253_call()
call_1748 = func_1253_call()
func_1023_call = mod.get_global_var('func_1023')
func_1026_call = mutated_mod.get_global_var('func_1026')
const_1770 = relay.const(1, dtype = "int16")#candidate|1770|()|const|int16
const_1771 = relay.const([1,6,-2,1,-9,-2,-6,8,-1,7,1,-1,3,-4,-3,4,-2,7,7,8,1,-8,6,-4,4,-4,-9,-1,-2,7,-4,1,-3,2,10,-4,9,-7,8,4,5,7,5,-6,-5,-4,6,-4,8,7,-5,7,4,9,-5,4,-2,-4,10,-4,5,-3,5,-7,3,-1,6,-2,-1,-2,5,8,8,-4,2,-5,-8,-7,8,-8,-8,1,6,-4,-4,5,6,-9,-5,-5,1,-5,2,1,-6,3,7,-9,9,2,-2,5,2,2,-6,-8,9,-7,-7,-1,9,-6,9,-1,-1,-2,-2,10,-10,3,1,5,7,3,10,7,-9,4,-2,-6,8,5,6,5,-8,-2,-4,-9,8,-6,-7,6,10,5,6,3,1,5,-3,-5,-3,-10,-5,7,-2,-10,8,6,-7,-9,4,7,10,-5,4,-4,9,1,2,5,-3,-2,2,-10,-8,-10,-9,-8,-8,-3,-4,-9], dtype = "int16")#candidate|1771|(182,)|const|int16
call_1769 = relay.TupleGetItem(func_1023_call(relay.reshape(const_1770.astype('int16'), []), relay.reshape(const_1771.astype('int16'), [14, 13, 1]), ), 0)
call_1772 = relay.TupleGetItem(func_1026_call(relay.reshape(const_1770.astype('int16'), []), relay.reshape(const_1771.astype('int16'), [14, 13, 1]), ), 0)
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
var_1775 = relay.var("var_1775", dtype = "float64", shape = (135,))#candidate|1775|(135,)|var|float64
var_1776 = relay.var("var_1776", dtype = "float64", shape = (2160,))#candidate|1776|(2160,)|var|float64
call_1774 = func_48_call(relay.reshape(var_1775.astype('float64'), [15, 1, 9]), relay.reshape(var_1776.astype('float64'), [15, 16, 9]), )
call_1777 = func_48_call(relay.reshape(var_1775.astype('float64'), [15, 1, 9]), relay.reshape(var_1776.astype('float64'), [15, 16, 9]), )
func_1203_call = mod.get_global_var('func_1203')
func_1209_call = mutated_mod.get_global_var('func_1209')
const_1783 = relay.const([[9.308554,-0.836879,8.052769,0.358189,-6.317020,-2.719678,0.391850,4.043075,6.965515,-8.315787,0.442741,7.036451,6.303200,-2.979337,-2.393845,5.919239,-3.972504,-9.432297,1.205069,-6.596288,-7.292603,2.060235,-7.158732,1.694941,8.454906,0.563139,-1.963910,1.582129,7.633732,9.155255,8.345480,9.915976,1.556742,8.972706,-9.729167,-4.189767,6.119631,-6.433922,-0.250836,6.778339,6.674272,-0.536305,-8.075054,0.009614,6.389317,3.304246,5.836608,-0.526864,3.322293,4.410299,2.360107,-5.668946,-0.155477,-7.375041,-0.660682,-5.642265,-3.469954,8.464377,-8.296759,2.917285,3.405470,-6.683345,6.619051,1.905252,7.042386,-9.383795,-4.415491,8.089635,4.538092,3.097901,0.435928,3.585484,-5.232196,-2.627558,4.264166,-4.972864,2.821473,2.978662,-4.280734,1.310957,-6.202726,-6.772855,-5.811108,7.464775,-3.404399,5.031105,-7.573721,8.041413,3.897652,4.114338,6.622981,6.161647,-1.814979,-9.525681,-8.073879,-2.838405,5.274633,0.984920,-2.549645,-2.888100,-0.510361,6.930647,-3.882330,0.765588,-4.095020,5.362993,2.767539,-2.023366,8.029018,-9.893157,-2.617936,-2.270421,1.853203,9.086859,-6.151413,-2.182248,9.843155,8.369877,5.648861,2.802931,3.939554,6.658181,-5.567286,0.110437,-1.011326,8.231796,-4.817257,4.117820,7.469332,-8.855472,-2.074719,-7.592769,-9.231740,2.586428,0.442721,7.643460,6.546137,3.984113,4.298011,-3.957582,-6.884289,-2.663309,6.347888,-4.327339,3.295715,8.459932,-5.531086,4.357527,2.897742,-6.796511,-4.974622,-7.666662,-2.016536,1.608748,-9.086625,-2.713408,1.167771,5.899465,-2.094079,2.368213,-8.570486,7.046557,7.806000,7.547126,2.992987,9.653172,-2.818280,-0.787782,1.235873,-7.495061,4.540392,-2.655866,7.725177,5.800421,6.908687,0.450012,6.086385,-0.681052,-1.031121,-9.528334,5.069474,2.446340,7.550756,9.073941,8.893335,-9.809610,-5.114594,7.390758,-3.702333,1.627283,5.066880,-2.670543,5.364379,6.520058,-0.668243,1.210541,8.452268,0.588848,-9.205165,8.990859,-7.879217,-4.016778,-1.525637,1.395909,0.247909,3.014736,7.799443,6.932416,-0.124103,-5.330088,-1.716583,4.182343,-7.849365,-7.387904,0.580978,-0.089147,9.049145,-7.265330,-2.491191,4.321968,-4.627435,4.497527,-7.695037,-1.024202,5.534886,0.520817,-1.016474,-1.293774,-3.700404,-8.480897,-9.978370,4.374328,6.155703,-4.465952,7.844940,5.665468,-4.437142,-0.833226,-8.004608,6.124527,5.309405,7.629420,2.747013,9.275020,2.509758,4.492382,-4.952997,7.152571,-4.650161,-8.998694,3.717832,8.405292,-1.318753,-1.484749,-7.143175,-7.576454,7.533914,-9.239629,5.393812,-0.165510,5.443085,9.248724,-7.201533,4.214323,-4.043480,8.052023,-4.724522,3.681484,-0.035726,1.597369,6.686908,-2.833337,7.046526,-1.784138,-5.617803,9.274033,-1.008010,-2.965441,-7.420890,-9.839582,2.197582,-4.527093,-0.687421,-2.134669,-0.941983,-0.804543,5.839345,-4.404304,0.372569,-4.595623,3.082864,7.903510,-8.186142,-3.161092,4.447624,4.029169,-6.993514,-5.637853,8.348984,0.047801,-5.676107,6.077296,5.400581,1.443338,-3.429574,-5.865010,2.203954,-4.300737,4.304175,-0.264247,7.774396,8.217830,-4.858557,-7.356905,-3.780993,7.661930,7.443376,5.462763,-2.469553,7.526684,-8.522469,-0.164020,3.697040,0.913906,4.262749,-9.951518,6.270230,2.811411,3.881656,5.285552,2.481294,3.249587,7.351816,8.560197,4.973516,0.833809,6.361003,8.870127,-4.983357,5.829611,2.881983,-1.201960,-4.296329,-2.047714,8.186587,7.112860,-3.230654,-4.529375,4.575366,8.511638,-3.340428,-0.808992,-5.332321,7.680400,-4.615406,-2.892748,-1.185448,-8.098770,-1.593810,-4.484943,-7.268744,8.382260,-5.870987,3.534267,8.820483,-3.874742,9.298921,5.363646,7.769038,-0.119536,-8.080182,8.105658,5.134514,4.703325,-6.134999,6.426800,3.021368,8.184167,-6.940674,-9.965593,1.646728,-4.559823,3.382486,-2.809177,-2.368880,8.936513,0.872391,7.995417,-3.110702,1.358104,-6.530448,-7.126625,9.435474,-1.440043,-1.032572,5.664225,1.010837,-8.540857,-2.574997,7.793367,2.405105,2.159716,2.786299,6.796906,5.515234,-1.256179,1.870320,1.061710,-4.635225,9.031820,-8.336099,-4.588443,-5.388703,2.827683,1.978258,3.726961,6.707058,-1.424037,0.795192,-5.963103,-8.492797,-1.803221,6.583379,-0.941595,7.870121,-2.940541,-7.044741,-6.952603,0.760347,6.073093,-5.830365,5.787842,2.596478,1.200768,0.860314,8.327805,-5.259498,-2.985540,-3.145797,-1.115057,-4.974357,6.149138,2.705640,6.203855,7.220073,-6.232258,2.060055,3.182235,4.082513,1.541461,0.530202,-6.458317,-2.416953,2.161995,6.702949,4.516029,8.472669,-3.061823,-4.648920,3.200512,6.450406,1.534334,-4.779038,7.275648,7.073182,-9.206933,-8.002633,9.950429,2.088746,7.859685,-9.032508,-6.679980,0.581643,-2.855607,-4.764778,-9.182513,8.019605,-7.137366,-1.933653,9.025764,-9.816813,-3.494242,-5.175232,-4.061745,7.606238,-0.233465,-1.157160,0.539654,-0.330395,0.581098,0.298588,-2.198764,7.102307,-0.571162,-3.876532,-7.369134,-8.411133,4.211874,-6.585572,-4.524421,5.005325,7.636636,-5.903771,-1.798623,-8.329685,1.762741,3.172959,0.781262,5.293251,-8.977046,7.337671,-1.588002,-4.083005,1.625179,0.932653,-8.326252,-4.040033,-8.571332,-6.089740,8.800925,-9.105622,-3.777089,-1.173944,0.598421,-0.890490,-0.035967,-4.240883,3.099598,-9.433084,9.951880,-3.399940,5.755373,1.344621,7.004286,-7.819925,-6.097785,-3.540405,-5.490524,-3.275608,-6.431228,4.317339,6.290948,5.857292,-9.324841,8.433779,-1.580377,1.919916,-2.675784,0.056201,-9.256476,1.902840,5.078987,-5.654188,-4.275627,8.707417,9.261767,0.591793,-5.134739,3.420865,5.000707,-3.605686,-9.881931,1.047981,-7.750222,3.406123,-9.377018,7.791150,-9.878083,9.673021,0.837609,6.826470,0.722088,0.629452,9.529038,0.255330,6.180483,-1.734807,7.152284,-2.607655,9.183123,8.066585,-5.673421,6.335872,-9.870833,-5.135034,1.536595,-5.779669,-9.882869,-5.141212,-3.195601,-0.138260,2.185196,2.929725,-6.849570,-1.336996,6.324041,9.121736,-5.297868,-9.531534,6.579583,-8.759630,-2.929859,-3.138471,-7.509530,6.121067,-8.313985,-2.330423,-0.158940,-2.891206,-1.183072,-2.324089,-4.711711,0.717170,-7.228879,2.980331,-4.407070,-8.944262,-8.864021,-3.176710,8.358928,0.100260,0.564137,6.486179,-2.301908,6.755882,-9.332941,-3.534327,6.956488,-9.519465,-5.354355,-1.157858,7.191677,3.263553,2.577490,0.954761,4.571093,-9.733186,-7.085822,4.299028,8.390265,7.205629,-8.300649,1.422293,-5.730840,-3.561906,2.148485,6.240532,0.999579,7.266308,-0.346473,-5.033676,3.984548,6.347310,-6.525351,-7.409495,0.775106,-9.987553,-9.128463,6.103642,2.030315,4.002763,-2.424390,3.332427,8.975508,-8.991689,6.293802,-7.298150,4.127525,9.984580,-6.467904,-4.737076,4.922494,2.953046,-9.757129,-4.686994,-6.742288,-1.010095,9.211691,2.115827,-8.006565,-5.289092,-8.684708,2.462803,-7.950022,0.655722,-2.463291,-7.220367,-9.162192,5.503779,7.117244,-8.842984,3.392715,-5.460038,7.239163,-7.633083,-5.354903,4.931481,3.802654,-0.073811,9.795425,-5.778840,3.743849,-8.330438,-0.275110,-2.685385,1.629932,-0.197277,-1.878794,6.766452,-4.064263,9.318018,7.409511,0.288966,8.305659,-1.863950,2.552872,3.620963,-9.383165,2.538954,0.439097,-3.295664,-7.708610,-4.172518,7.363341,-5.240379,8.234311,-2.756791,5.335652,0.713208,-0.956405,0.073231,-4.879391,-0.327100,-9.119949,0.689907,-6.764351,4.270924,-9.633941,8.096323,8.673016,7.562487,1.371405,1.193045,3.164051,-1.318708,5.109256,-4.006200,-9.070473,-9.087281,-0.566705,-2.152234,3.548348,6.893114,2.491357,4.454837,3.811069,0.967649,7.484416,9.166322,2.458612,-7.878926,7.601326,-4.189376,9.014853,8.101488,4.596251,-6.502951,4.733865,-9.370270,-8.780620,9.782318,0.376178,1.236119,-1.111524,7.956425,-2.296885,-4.477811,-3.415385,5.358275,9.808731,4.388604,-7.766117,5.410187,-3.376526,8.231380,5.475961,-5.334754,9.701392,9.814579,-4.298710,-3.226613,-3.748545,-7.687661,1.324023,6.996957,-9.123364,2.626864,-0.971454,-9.913929,7.897877,-8.910515,7.508879,6.309327,-7.359298,-4.219218,6.582237,7.713121,6.198293,2.098418,9.169374,0.760785,6.723496,-9.617566,8.270352,-7.507576,-0.468232,4.909225,7.489472,7.518783,-2.738264,-1.377822,-9.861781,3.450417,-1.182774,-0.341891,1.101797,6.636916,6.624331,4.906001,1.610550,9.040463,-5.258451,4.700421,1.797396,5.430939,-7.074949,2.834071,1.691671,-4.890482,4.856875,5.680687,-1.809239,-7.418769,-8.974498,-1.433041,2.577673,-9.252949,-1.284379,-2.652143,-5.420147,2.452103,2.329817,5.559368,-4.428959,-9.962494,-1.582304,-3.564112,5.070744,-0.269833,-9.991236,1.608805,-1.241548,8.948981,0.953858,-2.469109,4.326380,-6.552931,6.377250,1.446963,4.784005,0.697170,8.396996,-1.604464,-3.600150,4.389501,8.774986,0.713578,-5.608958,-1.666786,-6.090437,5.826717,0.872596,-2.708317,6.385423,-7.154321,-2.712787,-0.651597,9.154952,-1.297069,-6.245028,3.926952,-8.350771,8.894300,3.259583,-5.282093,7.489813,-1.784230,5.440882,0.805615,-1.589543,0.650727,0.369030,4.097532,-0.569062,4.716646,0.081833,-6.319424,8.396690,-3.458818,5.641581,-5.835503,-4.828961,2.587903,1.525670,-2.360868,-1.590833,-2.617060,0.302352,6.115351,8.988770,-5.382085,2.718481,-0.760758,0.784966,5.335069,3.315954,7.610990,-1.419453,1.605610,7.412557,-8.656780,8.653755,8.773358,-4.697765,-0.933820,8.545165,-0.086670,3.415533,6.933781,6.816069,-4.550819,-5.169328,-8.782355,-4.314554,2.258119,2.976588,-0.073217,-8.762814,6.345921,-2.250787,3.978919,8.634464,-1.886522,-5.997967,0.213272,-3.230411,5.963195,9.383114,-5.651536,6.644847]], dtype = "float32")#candidate|1783|(1, 960)|const|float32
call_1782 = relay.TupleGetItem(func_1203_call(relay.reshape(var_1776.astype('float64'), [180, 12]), relay.reshape(const_1783.astype('float32'), [10, 96]), relay.reshape(var_1776.astype('float32'), [180, 12]), relay.reshape(var_1776.astype('float32'), [180, 12]), ), 3)
call_1784 = relay.TupleGetItem(func_1209_call(relay.reshape(var_1776.astype('float64'), [180, 12]), relay.reshape(const_1783.astype('float32'), [10, 96]), relay.reshape(var_1776.astype('float32'), [180, 12]), relay.reshape(var_1776.astype('float32'), [180, 12]), ), 3)
output = relay.Tuple([call_1747,call_1769,const_1770,const_1771,call_1774,var_1775,var_1776,call_1782,const_1783,])
output2 = relay.Tuple([call_1748,call_1772,const_1770,const_1771,call_1777,var_1775,var_1776,call_1784,const_1783,])
func_1795 = relay.Function([var_1775,var_1776,], output)
mod['func_1795'] = func_1795
mod = relay.transform.InferType()(mod)
var_1796 = relay.var("var_1796", dtype = "float64", shape = (135,))#candidate|1796|(135,)|var|float64
var_1797 = relay.var("var_1797", dtype = "float64", shape = (2160,))#candidate|1797|(2160,)|var|float64
output = func_1795(var_1796,var_1797,)
func_1798 = relay.Function([var_1796,var_1797,], output)
mutated_mod['func_1798'] = func_1798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
call_1805 = relay.TupleGetItem(func_1505_call(), 4)
call_1806 = relay.TupleGetItem(func_1507_call(), 4)
output = call_1805
output2 = call_1806
func_1809 = relay.Function([], output)
mod['func_1809'] = func_1809
mod = relay.transform.InferType()(mod)
mutated_mod['func_1809'] = func_1809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1809_call = mutated_mod.get_global_var('func_1809')
call_1810 = func_1809_call()
output = call_1810
func_1811 = relay.Function([], output)
mutated_mod['func_1811'] = func_1811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_1829 = func_1253_call()
call_1830 = func_1253_call()
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
var_1832 = relay.var("var_1832", dtype = "float64", shape = (135,))#candidate|1832|(135,)|var|float64
var_1833 = relay.var("var_1833", dtype = "float64", shape = (2160,))#candidate|1833|(2160,)|var|float64
call_1831 = func_48_call(relay.reshape(var_1832.astype('float64'), [15, 1, 9]), relay.reshape(var_1833.astype('float64'), [15, 16, 9]), )
call_1834 = func_48_call(relay.reshape(var_1832.astype('float64'), [15, 1, 9]), relay.reshape(var_1833.astype('float64'), [15, 16, 9]), )
func_1525_call = mod.get_global_var('func_1525')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_1844 = func_1525_call()
call_1845 = func_1525_call()
func_1437_call = mod.get_global_var('func_1437')
func_1439_call = mutated_mod.get_global_var('func_1439')
call_1855 = relay.TupleGetItem(func_1437_call(relay.reshape(var_1832.astype('float64'), [135,])), 4)
call_1856 = relay.TupleGetItem(func_1439_call(relay.reshape(var_1832.astype('float64'), [135,])), 4)
var_1858 = relay.var("var_1858", dtype = "float32", shape = (9, 9, 11))#candidate|1858|(9, 9, 11)|var|float32
bop_1859 = relay.power(call_1829.astype('float64'), relay.reshape(var_1858.astype('float64'), relay.shape_of(call_1829))) # shape=(9, 9, 11)
bop_1862 = relay.power(call_1830.astype('float64'), relay.reshape(var_1858.astype('float64'), relay.shape_of(call_1830))) # shape=(9, 9, 11)
func_1809_call = mod.get_global_var('func_1809')
func_1811_call = mutated_mod.get_global_var('func_1811')
call_1875 = func_1809_call()
call_1876 = func_1809_call()
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
call_1878 = func_48_call(relay.reshape(var_1832.astype('float64'), [15, 1, 9]), relay.reshape(call_1831.astype('float64'), [15, 16, 9]), )
call_1879 = func_48_call(relay.reshape(var_1832.astype('float64'), [15, 1, 9]), relay.reshape(call_1831.astype('float64'), [15, 16, 9]), )
output = relay.Tuple([call_1831,var_1832,var_1833,call_1844,call_1855,bop_1859,call_1875,call_1878,])
output2 = relay.Tuple([call_1834,var_1832,var_1833,call_1845,call_1856,bop_1862,call_1876,call_1879,])
func_1880 = relay.Function([var_1832,var_1833,var_1858,], output)
mod['func_1880'] = func_1880
mod = relay.transform.InferType()(mod)
mutated_mod['func_1880'] = func_1880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1880_call = mutated_mod.get_global_var('func_1880')
var_1882 = relay.var("var_1882", dtype = "float64", shape = (135,))#candidate|1882|(135,)|var|float64
var_1883 = relay.var("var_1883", dtype = "float64", shape = (2160,))#candidate|1883|(2160,)|var|float64
var_1884 = relay.var("var_1884", dtype = "float32", shape = (9, 9, 11))#candidate|1884|(9, 9, 11)|var|float32
call_1881 = func_1880_call(var_1882,var_1883,var_1884,)
output = call_1881
func_1885 = relay.Function([var_1882,var_1883,var_1884,], output)
mutated_mod['func_1885'] = func_1885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1910 = relay.var("var_1910", dtype = "float64", shape = (1, 1, 3))#candidate|1910|(1, 1, 3)|var|float64
var_1911 = relay.var("var_1911", dtype = "float64", shape = (9, 9, 3))#candidate|1911|(9, 9, 3)|var|float64
bop_1912 = relay.floor_divide(var_1910.astype('float64'), var_1911.astype('float64')) # shape=(9, 9, 3)
func_737_call = mod.get_global_var('func_737')
func_740_call = mutated_mod.get_global_var('func_740')
const_1921 = relay.const([-6.013063,-1.379962,-1.190090,-2.141631,-1.887575,8.509502,3.825735,-6.602733,9.250129,-2.866394,-1.844963,3.950962,7.108487,-2.048199,2.175070,-5.026660,2.436605,8.476636,1.880850,6.492330,-1.387927,-4.059375,-1.646689,-4.930827,3.609802,9.036046,-9.012373,-5.293657,-4.602340,5.136539,8.221170,8.723209,-9.609550,-5.032968,-4.480512,0.541925,-4.576226,5.606386,9.031576,3.389439,-1.994810,-4.082186,5.536995,-9.010453,5.373475,8.393497,1.032037,2.019653,2.698598,0.472053,-6.293897,-5.862293,-6.793158,5.672418,-1.311544,-0.770560,4.566815,0.220878,6.435455,-7.298304,2.306475,1.301892,-6.167223,-0.491955,-8.206243,-7.482169,7.483884,-5.457988,-5.865117,0.074234,-7.349849,0.421201,-2.642510,-4.849161,-0.345469,-3.920676,-1.532597,-0.874602,-1.976177,-1.935405,-8.581079,1.454224,1.476481,-1.146147,-0.381690,-3.723775,1.986560,-9.959041,5.136084,-1.635015,-6.774454,9.794343,-7.129499,8.161992,5.331155,-0.099727,-5.473437,8.920282,2.048693,9.058381,3.889989,-0.819721,1.953729,-9.561389,0.489367,-1.328625,0.930772,-2.859992,4.308726,-6.556394,2.912871,4.790563,3.260701,8.787708,-3.945237,-4.298862,3.793594,-0.020216,2.454896,9.844081,6.716655,-8.116688,9.265214,6.992596,9.977360,9.135535,-5.740479,-2.964624,2.827080,-6.092634,2.468848,1.844773,6.512809,3.404214,-2.253739,1.384595,2.337074,-5.339801,-3.988786,8.440185,-5.786906,-5.961390,1.504468,-7.885415,-1.359478,-7.642569,6.963852,-4.877747,-4.586325,3.656546,-5.079615,-1.221614,4.190125,9.436019,-8.364893,4.115636,3.480580,3.561773,-0.215502,-4.704739,-2.019039,-0.140264,-1.166201,-8.363563,0.510048,-3.446375,-9.039981,2.802738,7.242471,1.069255,6.552373,-0.482247,-2.058460,-4.525729,3.024754,-3.301596,4.439057,0.172678,3.616249,-1.073671,-9.325281,0.078776,-6.391602,-2.940315,6.939030,1.608763,-7.744589,6.316746,-6.303373,5.051114,-4.370953,7.314375,9.121525,-3.342185,5.967368,4.126212,4.281991,-2.709916,6.780266,6.847876,1.922980,2.892251,8.390971,-8.135904,-0.471788,9.948930,4.077487,7.834941,-4.772219,-6.001701,-4.248261,4.994549,-5.672781,8.055286,-4.826955,-5.002748,-7.452459,5.693491,-0.113777,3.249715,4.036348,-6.718976,9.360492,0.315573,9.436013,3.859682,7.551852,3.198010,2.051071,9.950835,8.735797,5.359125,-7.222466,2.279789,-2.705070,7.467184,-2.185685,2.769685,5.854670,2.365579,-0.040284,9.379491,0.476910,3.736328,2.064011,-6.994365,-4.568515,-2.306086,-2.451628,1.764537,-5.361850,-3.467291,-3.386504,0.514144,3.735078,-6.397129,0.287159,1.598064,-4.709219,2.491646,-6.464834,9.821974,2.552731,1.247380,5.056065,1.395747,0.027398,-9.141415,4.066469,-9.600615,-3.733114,-4.378716,-9.743547,-1.297539,-5.257978,-8.521198,1.440363,8.254525,-4.138573,-3.976901,8.008653,7.380885,-0.268466,1.958725,8.390367,-4.073456,-2.363739,-5.653289,-4.193849,-7.997456,-3.827843,4.589636,-2.446398,3.980562,8.477450,-7.148506,1.575957,-2.065998,-5.199454,3.016760,0.322256,0.953317,-6.693317,-7.880900,0.718816,6.440851,9.661255,7.900957,0.350905,-3.269190,2.179389,4.680693,3.216690,-0.136710,7.041892,6.978023,3.491379,7.984073,-0.078380,-5.730067,-4.703943,-7.189002,9.545179,6.341278,-4.270621,8.791159,-9.942741,-8.974772,-6.080926,5.380948,-8.374089,-8.166720,-7.626387,7.536211,7.922388,-0.660410,2.621268,-9.884951,-1.210945,4.016382,6.498458,-2.136746,8.238169,3.332386,7.671789,-6.651769,-9.389861,9.334332,-4.951694,7.126414,2.371144,2.271283,-1.290317,2.894518,2.195512,6.614367,4.514536,-7.424675,-3.774621,4.183871,8.761301,7.562147,-5.018070,-0.192137,6.225767,6.929672,0.538906,8.164113,-5.120286,-0.434750,6.033096,-5.180956,-9.184782,-3.283287,0.954351,-7.143715,6.518977,-7.006807,1.641926,-9.090087,-1.688937,2.811880,-6.078535,-6.938264,0.848788,-0.157423,-1.427076,4.739284,3.403777,-6.480543,3.790966,5.743009,-3.812912,6.549937,-0.254169,7.102242,6.201526,-8.903050,5.735581,-1.576704,-6.099564,-7.758700,1.121913,6.036098,8.240381,6.512333,-1.818726,6.603700,-2.658940,-3.554373,-0.733587,-0.766861,-8.782237,5.872588,6.732980,-3.381032,-6.279995,-3.542926,7.401078,-1.237988,4.169487,9.915295,2.976814,0.587377,5.756937,-3.319839,4.584389,7.671871,-7.444282,9.643689,-0.369152,3.713103,-3.042042,0.889984,0.325413,-9.679406,2.355284,-8.990716,-9.941128,4.945967,-0.612327,8.385724,-0.974286,5.986223,6.490497,-6.316147,3.774441,-7.389699,4.085317,3.663509,-5.369018,-4.852120,0.167717,-9.506438,-9.820984,-2.994447,9.663917,-3.412622,-1.769771,-9.540318,-6.425478,-4.142659,-3.776427,-4.843999,-0.295072,-6.707522,6.402295,-3.189241,-8.516856,3.353183,-3.450979,8.843761,8.722804,3.968558,8.819903,-0.057060,-2.756669,1.555883,1.509787,4.189655,3.590215,-5.217407,-1.393843,-5.257836,7.444458,4.124995,6.356963,-9.530353,-6.863697,-3.256549,0.078780,1.922924,3.274001,1.594815,-8.851135,-2.331526,-4.481085,8.277013,-6.528452,5.936301,2.775394,5.598344,1.368272,2.092164,-5.015216,-6.260005,-8.662606,3.459693,-4.621123,6.106948,9.694298,3.864806,-0.428874,-1.411228,-2.455759,0.489799,-7.634892,-8.799538,-7.975774,6.339219,3.108330,-3.203936,-6.084423,-4.624753,-4.412792,4.607773,7.297098,-1.484610,6.172401,-6.263535,-2.180650,4.439098,7.493905,2.509050,-4.550885,-7.443716,-1.377328,3.333906,-1.211350,1.532402,4.953100,9.600593,3.522438,4.781730,-1.511247,-5.442593,4.329543,-5.208883,1.598288,-5.924727,-9.352376,-4.964581,6.299597,4.166769,3.485830,8.973078,-0.463208,3.353877,-3.563930,-9.395177,9.123171,5.956839,6.929704,5.233657,7.132151,-8.089300,-8.540818,-2.351225,-3.320830,5.633240,6.869575,2.782267,0.999070,6.316557,2.810683,9.210823,4.384511,6.400163,-5.184977,2.187091,-3.822337,8.398319,-4.552121,-6.687942,-7.260386,-8.850335,-7.967612,0.437324,2.100668,7.389415,-2.559286,5.602542,-2.333256,-7.008716,0.762646,-0.204011,8.754388,-4.259068,-4.483713,4.609699,-5.439216,-2.892287,0.096281,4.109082,-9.206829,3.307021,6.492701,-8.948854,8.725482,-7.835892,3.038304,-3.365435,-8.538222,-5.939446,8.377938,5.057584,-4.589915,1.635658,7.745723,-2.920705,1.071527,8.180562,-2.789332,-2.758994,-9.163463,-0.471024,-7.068148,3.132007,0.385878,7.836574,3.240394,-2.230450,-3.631457,0.104578,-1.205152,8.091846,3.712174,-1.666327,3.648479,8.311372,5.263513,1.723639,-4.189447,5.621776,-5.404727,-8.381615,7.287895,4.704224,-5.928547,-3.198239,-2.440786,0.653242,-6.732928,1.126220,-5.841087,3.071846,-1.590140,2.413547,7.975311,-3.945711,9.843783,2.970535,-0.354329,-7.634756,6.973994,4.224532,4.011055,6.442564,3.936981,9.285364,5.664647,5.856278,2.814211,-5.830315,8.554370,-5.100006,-4.839136,-4.574313,0.090974,5.296786,7.182073,-8.750995,6.330721,-2.298733,7.760010,2.100086,-0.649068,-4.701808,5.483031,3.299871,-9.522337,-7.121729,6.978067,5.316155,8.712603,-9.880006,2.999593,1.008961,-6.401154,9.987252,6.755031,7.103389,-1.689356,4.570032,-2.029532,-8.403835,3.579314,1.988672,0.934809,6.400533,-9.177186,8.994892,-6.697157,-8.272723,-2.023686,-3.873081,-8.131834,-9.504715,-1.838616,7.709918,-9.073491,5.401231,-3.351568,-5.518005,1.242766,-9.646031,6.808571,3.565312,1.457316,2.971808,-7.915719,6.018424,9.526124,2.713425,-9.285864,-1.256954,-7.415203,-6.321831,8.709141,1.071854,-7.467888,-9.076702,6.548026,2.202365,4.281598,7.909325,5.142911,3.084217,-6.942452,-2.826406,9.573697,9.520809,-0.741394,-7.396492,-7.467965,-7.312158,5.065007,8.184960,-4.023391,1.547742,0.380181,0.131264,-6.440851,1.102642,0.660735,8.627379,-5.932655,8.612011,-1.556401,-4.366687,7.905347,3.899507,9.414315,5.286275,9.751860,-3.720149,5.813572,4.202725,-4.492407,-3.544040,-1.295680,-2.895745,-3.258821,3.956319,8.976988,-8.898829,-2.188074,2.503314,-6.258278,-4.704319,-4.670841,-0.612572,-3.131512,4.998383,-1.056803,1.426530,1.043335,5.795620,3.115909,-0.433666,6.802021,5.726711,-9.887703,8.581957,0.922302,-0.900381,-2.822048,-1.483124,1.880371,2.736516,8.193097,-8.011107,-1.189868,5.389932,3.835010,-5.288449,-8.304373,-6.816462,1.836937,5.150754,5.584251,-9.452379,-1.218911,8.506636,-2.172712,0.522846,0.130138,-4.622689,2.255746,5.304489,5.485578,4.866418,2.939464,-4.976234,-2.868196,3.267373,8.493232,5.037231,-4.282301,9.934124,-8.684845,4.978658,2.171280,0.816296,2.233816,6.662028,8.297073,-4.908068,-5.071179,6.278415,-8.493534,5.858038,-2.240550,1.323819,4.932836,6.176630,7.051066,8.560064,-5.741987,6.460085,1.382745,-8.554933,-3.398607,3.014108,1.196063,8.750660,2.677212,0.138023,4.167198,1.801508,-7.430804,-6.667995,4.925870,-5.780079,6.820186,1.797087,-0.005421,7.980494,-3.993342,0.620861,8.259898,3.494259,0.922306,-5.370669,1.290575,3.713772,-8.155174,6.258100,0.164382,6.099304,8.872078,2.565946,-9.370122,-5.516837,6.561993,-8.168965,-5.089311,-1.687210,-1.945311,3.799007,-4.966471,7.330437,-1.452367,-0.022874,-6.020669,-9.279249,-8.828703,4.073294,-7.867903,3.653246,-3.254196,-5.158157,8.646973,-5.401865,7.624907,9.966488,4.221669,-0.213569,3.281324,1.649854,-4.441673,0.521469,-5.643007,3.980163,4.568127,-6.698113,-1.447297,-4.238778,6.260306,-8.732532,-4.452718,-9.796446,-7.411854,-1.731370,7.991652,-4.424553,9.801052,-8.067653,-7.535008,9.132172,-7.137440,0.661192,-5.135074,-7.039262,5.742624,4.415076,-9.447452,5.965265,-2.522342,-5.463436,9.259327,-0.029796,4.244744,-8.958710,-2.579332,5.617389,-6.432797,-0.346275,-3.920839,-8.896010,2.663936,-1.761709,-4.241396,-5.718130,3.729099,-5.841469,3.766205,0.731373,-1.304122,7.869368,5.419336,5.697547,4.947210,0.342815,8.294626,9.379492,5.416368,-0.703118,4.781227,-3.729505,-7.596317,-0.185085,1.006594,-5.453354,0.336364,2.851720,-8.780917,-1.121193,-4.099161,6.727660,-3.097962,-6.042154,-3.390620,4.207840,1.853521,-1.676027,-5.943466,-4.124347,6.157741,4.359950,-3.029185,6.906712,-6.211377,-4.100483,7.966719,-3.362941,6.208339,3.382144,6.876988,4.018293,8.148047,-9.984662,-1.136823,9.954735,2.800984,2.456416,6.568212,-7.385933,-0.588069,-7.132865,3.149384,5.827009,4.383051,-5.021053,5.866136,-3.072138,-7.004028,2.678017,0.393072,-6.982193,5.259592,-6.062384,-1.304338,-5.460648,7.926748,4.494061,2.855465,1.170345,0.197722,-1.534259,-2.526176,3.751884,6.487383,6.717342,-1.312875,-1.801581,7.301567,-7.582798,1.966606,7.268739,-0.484010,6.486183,5.246427,-6.942000,7.217388,-6.336876,8.862886,-1.239365,-5.815509,5.187991,7.094682,-1.409200,-8.714829,-0.034148,-8.355848,2.672344,-4.201797,-9.955512,0.303586,5.934186,9.816862,-9.304757,7.020294,-5.101670,0.106195,-4.253529,6.559448,9.107292,-4.938457,2.694329,4.949659,6.339744,-8.451633,-1.978192,-3.275266,-7.628867,6.023088,0.321591,2.539072,-2.029994,4.304132,8.342193], dtype = "float64")#candidate|1921|(1092,)|const|float64
call_1920 = func_737_call(relay.reshape(const_1921.astype('float64'), [13, 6, 14]))
call_1922 = func_737_call(relay.reshape(const_1921.astype('float64'), [13, 6, 14]))
bop_1923 = relay.add(bop_1912.astype('float64'), relay.reshape(var_1911.astype('float64'), relay.shape_of(bop_1912))) # shape=(9, 9, 3)
output = relay.Tuple([call_1920,const_1921,bop_1923,])
output2 = relay.Tuple([call_1922,const_1921,bop_1923,])
func_1928 = relay.Function([var_1910,var_1911,], output)
mod['func_1928'] = func_1928
mod = relay.transform.InferType()(mod)
mutated_mod['func_1928'] = func_1928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1928_call = mutated_mod.get_global_var('func_1928')
var_1930 = relay.var("var_1930", dtype = "float64", shape = (1, 1, 3))#candidate|1930|(1, 1, 3)|var|float64
var_1931 = relay.var("var_1931", dtype = "float64", shape = (9, 9, 3))#candidate|1931|(9, 9, 3)|var|float64
call_1929 = func_1928_call(var_1930,var_1931,)
output = call_1929
func_1932 = relay.Function([var_1930,var_1931,], output)
mutated_mod['func_1932'] = func_1932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1100_call = mod.get_global_var('func_1100')
func_1102_call = mutated_mod.get_global_var('func_1102')
call_2003 = relay.TupleGetItem(func_1100_call(), 0)
call_2004 = relay.TupleGetItem(func_1102_call(), 0)
func_1437_call = mod.get_global_var('func_1437')
func_1439_call = mutated_mod.get_global_var('func_1439')
var_2006 = relay.var("var_2006", dtype = "float64", shape = (135,))#candidate|2006|(135,)|var|float64
call_2005 = relay.TupleGetItem(func_1437_call(relay.reshape(var_2006.astype('float64'), [135,])), 4)
call_2007 = relay.TupleGetItem(func_1439_call(relay.reshape(var_2006.astype('float64'), [135,])), 4)
const_2011 = relay.const([-5.554028,8.535111,-6.438062,-2.366017,-6.709088,-8.917042,-3.235300,-7.188133,5.400752,8.059234,8.373453,8.060500,-6.475758,9.910635,6.438244,-9.743402,8.404775,4.713364,-6.842113,-4.090444,-7.358384,-9.901421,6.589802,3.512243,-4.541133,-5.583795,-1.426295,4.906028,-5.100928,2.074789,5.811244,0.153186,6.437185,-9.179974,-6.189745,-1.194285,-1.402165,-1.879672,2.498666,-1.482360,-2.490691,4.434562,8.517049,5.774080,-4.680837,2.338596,-3.253611,-7.177740,9.958195,-7.192284,7.074559,-5.989011,0.974173,8.177975,-3.073652,-1.199445,3.220718,-8.611597,-3.448942,-6.555551,-6.018168,-8.053151,-4.933620,1.489478,-8.859675,-2.809459,-7.309847,2.401699,6.762091,5.307313,-2.781942,-7.146744,4.036068,-2.547042,-6.492169,-3.860288,-8.145676,-0.959585,3.401304,-2.863675,5.611664,7.635668,1.890101,2.110776,-2.166395,1.591176,-7.283009,-9.573615,-0.865434,9.857281,4.685243,9.924923,-6.886348,-2.878179,7.505324,4.339584,3.884833,2.972931,5.719610,0.697348,4.020660,7.878988,-1.811068,6.607959,-6.301053,-0.738138,2.312395,-7.064603,2.528229,5.922015,4.776925,2.572486,-2.176335,-0.620926,9.463071,0.823828,-5.500430,-5.663472,-9.701832,3.720595,-8.435952,-6.438051,8.015991,1.667647,9.296042,-3.548570,-3.398824,-2.710384,-1.900914,-1.440161,-5.680439,-9.040586,-9.894497,-9.940764,-7.909817], dtype = "float64")#candidate|2011|(135,)|const|float64
bop_2012 = relay.bitwise_xor(var_2006.astype('uint16'), relay.reshape(const_2011.astype('uint16'), relay.shape_of(var_2006))) # shape=(135,)
var_2022 = relay.var("var_2022", dtype = "int32", shape = (9, 9, 11))#candidate|2022|(9, 9, 11)|var|int32
bop_2023 = relay.less_equal(call_2003.astype('bool'), relay.reshape(var_2022.astype('bool'), relay.shape_of(call_2003))) # shape=(9, 9, 11)
bop_2026 = relay.less_equal(call_2004.astype('bool'), relay.reshape(var_2022.astype('bool'), relay.shape_of(call_2004))) # shape=(9, 9, 11)
output = relay.Tuple([call_2005,bop_2012,bop_2023,])
output2 = relay.Tuple([call_2007,bop_2012,bop_2026,])
func_2033 = relay.Function([var_2006,var_2022,], output)
mod['func_2033'] = func_2033
mod = relay.transform.InferType()(mod)
var_2034 = relay.var("var_2034", dtype = "float64", shape = (135,))#candidate|2034|(135,)|var|float64
var_2035 = relay.var("var_2035", dtype = "int32", shape = (9, 9, 11))#candidate|2035|(9, 9, 11)|var|int32
output = func_2033(var_2034,var_2035,)
func_2036 = relay.Function([var_2034,var_2035,], output)
mutated_mod['func_2036'] = func_2036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1525_call = mod.get_global_var('func_1525')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_2058 = func_1525_call()
call_2059 = func_1525_call()
var_2066 = relay.var("var_2066", dtype = "float32", shape = (180, 12))#candidate|2066|(180, 12)|var|float32
bop_2067 = relay.add(call_2058.astype('float32'), relay.reshape(var_2066.astype('float32'), relay.shape_of(call_2058))) # shape=(180, 12)
bop_2070 = relay.add(call_2059.astype('float32'), relay.reshape(var_2066.astype('float32'), relay.shape_of(call_2059))) # shape=(180, 12)
output = bop_2067
output2 = bop_2070
func_2076 = relay.Function([var_2066,], output)
mod['func_2076'] = func_2076
mod = relay.transform.InferType()(mod)
var_2077 = relay.var("var_2077", dtype = "float32", shape = (180, 12))#candidate|2077|(180, 12)|var|float32
output = func_2076(var_2077)
func_2078 = relay.Function([var_2077], output)
mutated_mod['func_2078'] = func_2078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_2174 = relay.TupleGetItem(func_1370_call(), 4)
call_2175 = relay.TupleGetItem(func_1372_call(), 4)
output = call_2174
output2 = call_2175
func_2188 = relay.Function([], output)
mod['func_2188'] = func_2188
mod = relay.transform.InferType()(mod)
mutated_mod['func_2188'] = func_2188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2188_call = mutated_mod.get_global_var('func_2188')
call_2189 = func_2188_call()
output = call_2189
func_2190 = relay.Function([], output)
mutated_mod['func_2190'] = func_2190
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1566_call = mod.get_global_var('func_1566')
func_1567_call = mutated_mod.get_global_var('func_1567')
call_2216 = relay.TupleGetItem(func_1566_call(), 0)
call_2217 = relay.TupleGetItem(func_1567_call(), 0)
output = call_2216
output2 = call_2217
func_2230 = relay.Function([], output)
mod['func_2230'] = func_2230
mod = relay.transform.InferType()(mod)
mutated_mod['func_2230'] = func_2230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2230_call = mutated_mod.get_global_var('func_2230')
call_2231 = func_2230_call()
output = call_2231
func_2232 = relay.Function([], output)
mutated_mod['func_2232'] = func_2232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_2237 = func_1253_call()
call_2238 = func_1253_call()
var_2249 = relay.var("var_2249", dtype = "float32", shape = (9, 9, 11))#candidate|2249|(9, 9, 11)|var|float32
bop_2250 = relay.divide(call_2237.astype('float32'), relay.reshape(var_2249.astype('float32'), relay.shape_of(call_2237))) # shape=(9, 9, 11)
bop_2253 = relay.divide(call_2238.astype('float32'), relay.reshape(var_2249.astype('float32'), relay.shape_of(call_2238))) # shape=(9, 9, 11)
uop_2254 = relay.log(var_2249.astype('float32')) # shape=(9, 9, 11)
func_1100_call = mod.get_global_var('func_1100')
func_1102_call = mutated_mod.get_global_var('func_1102')
call_2257 = relay.TupleGetItem(func_1100_call(), 0)
call_2258 = relay.TupleGetItem(func_1102_call(), 0)
output = relay.Tuple([bop_2250,uop_2254,call_2257,])
output2 = relay.Tuple([bop_2253,uop_2254,call_2258,])
func_2265 = relay.Function([var_2249,], output)
mod['func_2265'] = func_2265
mod = relay.transform.InferType()(mod)
mutated_mod['func_2265'] = func_2265
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2266 = relay.var("var_2266", dtype = "float32", shape = (9, 9, 11))#candidate|2266|(9, 9, 11)|var|float32
func_2265_call = mutated_mod.get_global_var('func_2265')
call_2267 = func_2265_call(var_2266)
output = call_2267
func_2268 = relay.Function([var_2266], output)
mutated_mod['func_2268'] = func_2268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1809_call = mod.get_global_var('func_1809')
func_1811_call = mutated_mod.get_global_var('func_1811')
call_2270 = func_1809_call()
call_2271 = func_1809_call()
output = call_2270
output2 = call_2271
func_2273 = relay.Function([], output)
mod['func_2273'] = func_2273
mod = relay.transform.InferType()(mod)
mutated_mod['func_2273'] = func_2273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2273_call = mutated_mod.get_global_var('func_2273')
call_2274 = func_2273_call()
output = call_2274
func_2275 = relay.Function([], output)
mutated_mod['func_2275'] = func_2275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1566_call = mod.get_global_var('func_1566')
func_1567_call = mutated_mod.get_global_var('func_1567')
call_2295 = relay.TupleGetItem(func_1566_call(), 0)
call_2296 = relay.TupleGetItem(func_1567_call(), 0)
output = call_2295
output2 = call_2296
func_2298 = relay.Function([], output)
mod['func_2298'] = func_2298
mod = relay.transform.InferType()(mod)
output = func_2298()
func_2299 = relay.Function([], output)
mutated_mod['func_2299'] = func_2299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1566_call = mod.get_global_var('func_1566')
func_1567_call = mutated_mod.get_global_var('func_1567')
call_2303 = relay.TupleGetItem(func_1566_call(), 0)
call_2304 = relay.TupleGetItem(func_1567_call(), 0)
uop_2325 = relay.acosh(call_2303.astype('float32')) # shape=(180, 12)
uop_2327 = relay.acosh(call_2304.astype('float32')) # shape=(180, 12)
func_2273_call = mod.get_global_var('func_2273')
func_2275_call = mutated_mod.get_global_var('func_2275')
call_2338 = func_2273_call()
call_2339 = func_2273_call()
uop_2340 = relay.exp(uop_2325.astype('float32')) # shape=(180, 12)
uop_2342 = relay.exp(uop_2327.astype('float32')) # shape=(180, 12)
output = relay.Tuple([call_2338,uop_2340,])
output2 = relay.Tuple([call_2339,uop_2342,])
func_2345 = relay.Function([], output)
mod['func_2345'] = func_2345
mod = relay.transform.InferType()(mod)
output = func_2345()
func_2346 = relay.Function([], output)
mutated_mod['func_2346'] = func_2346
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2360 = relay.const([[[5.532957,8.831590,-0.577434,3.472945,5.343646,8.556031,-5.923925,5.113592,-6.116976,1.279557,-5.602604,3.682288,-9.949443],[-1.703106,9.190083,-0.647059,7.170833,-4.606574,1.924892,5.717439,6.245114,-9.886424,-1.211690,2.158655,-6.702874,-9.861065],[-7.955764,9.288202,2.295460,3.469017,-2.953823,7.055392,1.691167,6.372589,-7.964719,0.677906,6.707733,5.319443,9.057499],[-9.581817,5.268598,-0.105894,-8.681123,-5.685879,-7.385726,-3.799758,-8.130318,-9.447766,8.961917,-2.128462,1.315445,4.023968],[0.286607,-7.070978,5.549965,-4.441438,1.624708,2.946518,3.409518,-3.908824,5.258042,-1.537093,-4.157611,2.528238,-6.294180],[1.092081,8.271970,-2.056045,5.419307,-4.330751,2.222512,-3.623216,7.404989,-2.179724,1.437196,-3.727478,7.153622,-4.727751],[-8.092136,0.759853,5.203117,-2.761591,-8.291347,-4.218597,9.281264,-1.801738,0.291497,3.862712,-8.958527,1.620242,-8.140089],[-0.707585,-1.460977,-5.831621,-5.879529,1.845111,-3.957080,2.942778,-9.741016,2.206145,-0.127309,-3.199249,-4.208718,-9.389501],[0.328138,-4.322314,-2.339360,0.581872,-3.076079,9.523285,-9.460277,-1.571397,-0.644417,3.832194,4.819690,-3.356645,-6.086991],[-6.919144,-4.240898,-6.850545,-5.250165,-3.505420,8.322928,-1.282971,6.830435,5.245716,-8.818389,-5.709890,6.613305,-4.226230],[-3.335934,-0.575537,2.796556,0.707409,6.547436,-4.334851,7.422107,-8.420136,-6.445569,-7.640719,-8.102045,5.746118,0.739036],[0.353567,0.801010,-3.559683,-8.445496,0.106431,9.521411,-3.120006,-9.915907,-7.381320,7.334600,-2.935748,5.881745,7.782960]],[[-0.626926,3.155434,-0.433644,-5.138457,-9.988118,-4.643414,8.936372,-6.019724,-5.344499,-2.886639,9.861988,-1.978530,6.508670],[7.009972,9.008266,3.117777,4.894234,-6.661549,3.119382,-1.666072,1.273201,8.473449,-2.981627,5.638649,-6.269053,5.860636],[-9.198489,-4.903208,-5.510002,5.742786,-2.202443,-6.123956,0.684310,5.917070,6.948043,-8.484128,-3.287697,-6.509580,1.493242],[-8.469668,8.496071,-9.681112,8.803608,2.886037,-8.025991,-0.025509,4.141195,-4.090001,5.429424,-9.201828,0.704963,1.469288],[-6.113768,-9.583999,4.868718,3.742113,-6.077747,-2.494353,-8.168240,-8.966362,-2.028974,4.798052,7.058022,-3.070843,3.365812],[9.239083,5.926348,8.447851,-6.697613,-7.588159,-5.997800,-7.393911,8.313070,-4.843086,1.487588,-3.315918,8.859756,5.788087],[1.389251,9.227937,-6.952200,-1.590125,9.648292,6.513111,2.097482,2.548866,0.472674,5.198867,1.661600,-2.066674,-9.614941],[-2.209481,-9.889943,-4.374394,-5.349202,4.066507,-7.297145,-1.963047,6.066824,-3.904967,7.843493,-7.881089,5.560687,6.335633],[8.485885,8.235863,-8.790308,-2.380005,-2.987010,4.310030,-8.410208,4.999919,-0.284186,3.206670,-8.908997,-4.004257,2.395638],[-8.854149,-4.357352,0.896912,-5.058740,5.426574,9.677979,1.212995,-1.858153,-2.746273,2.667177,-4.038657,1.772503,1.204825],[8.574676,-2.998175,-7.929845,1.427041,-6.342561,9.737155,-6.510868,-9.471342,-8.335127,4.881336,-8.712888,2.546613,3.282947],[2.573469,6.243516,-2.127925,-7.188249,-5.719043,-5.000958,-0.267632,-9.877394,9.601540,-6.366174,-8.717013,7.514092,-1.826094]],[[7.423473,-5.405170,5.259133,-3.641854,-2.791231,8.086981,0.352865,-6.891550,2.162886,-0.981488,-2.083258,-3.824039,1.505327],[4.502394,-2.870642,-4.633620,6.824344,9.200466,-6.416645,-7.884479,-7.054702,-5.193820,7.190749,0.188794,1.926965,-1.070028],[3.634823,-2.258156,-6.449187,-0.218121,8.992586,-8.088035,9.526893,8.420096,8.516879,-5.881221,2.399786,2.345443,1.703164],[-4.144003,3.064904,-1.833855,4.175825,3.138518,-5.546280,8.862142,5.435267,8.408268,3.765132,-6.301740,-4.638575,-5.013843],[5.075360,-7.240420,3.417533,9.992985,0.565602,2.619906,9.296216,-8.397412,-7.097085,0.286120,-1.859934,-0.305955,-8.009112],[-1.422957,-1.785621,-7.613609,1.222471,-1.377994,0.390559,9.529544,-3.015671,-4.493533,2.802269,8.643876,-5.600532,9.846215],[2.895940,-8.945998,8.426100,-0.848372,8.484161,5.359314,0.303543,9.313424,-8.543542,-0.686132,-2.022192,-9.837024,7.241511],[8.800610,-5.894863,-9.668555,2.114063,2.018772,-3.772997,-1.703783,0.883315,-2.206036,5.555183,4.559074,-2.264482,-8.070766],[-0.034499,-7.814827,6.186892,0.262057,6.388919,4.897861,-0.790914,5.851614,4.657551,6.462745,8.548043,3.444058,0.547801],[-1.228456,-7.573092,-2.663113,9.270794,6.111516,1.468420,1.592166,-9.438238,2.551235,1.528202,2.374122,-4.048107,6.347227],[-1.680069,-9.696147,-0.119782,2.737731,-8.544586,4.654293,1.007930,-5.909238,-6.056330,5.514322,-4.451555,4.201687,9.119664],[-4.944822,5.034040,8.484350,0.228330,-3.348828,5.454734,-4.412822,8.376509,5.551733,-1.913532,5.447962,9.326148,-0.519340]],[[0.917489,-7.797671,-0.775754,-5.612307,-3.647798,-7.687235,-3.936671,8.014467,-8.427498,6.016930,-2.154573,-9.563853,-0.362927],[3.037878,-1.222656,8.165842,9.379326,-1.965919,4.553343,-9.085679,6.910662,2.590875,3.930552,6.522638,-9.322252,9.041529],[9.758327,-7.912865,-0.050912,-8.706811,1.236973,-0.196573,4.080345,-9.080366,-6.464059,-8.677849,7.288171,3.207367,5.744827],[5.801413,0.260145,-8.562489,-2.592279,-1.248300,-4.775688,-5.714534,-1.704986,-5.867583,9.640830,-2.467047,7.592886,3.983288],[-5.927621,1.412482,5.927067,-4.079131,-5.641925,-3.438637,6.579958,3.009409,7.117738,2.119522,-0.084917,1.174695,-7.743213],[8.961185,-2.908034,7.892569,0.132714,-8.604309,0.436562,2.536122,8.175256,-0.141948,-9.379968,-5.337242,5.123274,-2.286972],[-1.865499,-3.792282,7.473603,-2.892541,-1.989349,9.212997,7.812403,8.300706,-9.863316,-3.823981,-2.469013,-9.925563,-2.506965],[-4.616950,-9.212069,6.417985,-4.538977,5.792035,-7.464472,4.292055,9.572335,-5.558328,5.866230,5.773638,9.892414,9.340235],[2.502742,-8.925116,6.247336,1.644165,6.840540,-1.350782,-1.285256,-6.793571,2.380080,-2.535895,-9.919849,0.830722,-2.970331],[3.362015,-1.437240,3.810876,-8.830144,4.342167,-5.184729,9.242038,-0.358779,2.767422,8.817738,3.004166,2.639161,-6.274515],[-0.597841,7.207953,-6.060272,-9.093777,-8.056131,-9.287729,-4.347908,-5.804673,2.978628,-9.373835,3.743363,-8.897939,7.526318],[9.398365,1.811837,-1.391510,-6.119637,-3.854118,-8.616136,0.631161,-7.639562,8.249299,-4.391018,0.512000,8.850283,1.983861]]], dtype = "float64")#candidate|2360|(4, 12, 13)|const|float64
const_2361 = relay.const([[[-8.586139,8.580604,-3.668395,9.356229,-8.080302,-1.248995,-1.112694,-5.759703,2.586388,-3.593732,5.703318,-3.056526,-7.875730],[-1.086859,-7.833771,2.677629,7.493570,6.187747,-6.937223,-5.825738,-3.665121,7.355770,-8.693029,-5.720727,3.760236,-7.575428],[3.325063,2.077004,1.890611,2.159579,-3.154355,-2.768037,4.242159,8.248455,-6.508463,9.248234,-3.218824,3.966192,-5.658372],[3.039977,-6.769401,-1.308973,-0.323715,6.213761,1.987175,-6.483914,-8.374135,1.496983,-1.029391,6.275844,0.689122,6.272505],[4.722586,-8.783574,-3.155733,2.496142,7.430508,3.641387,-4.010289,3.546311,0.777234,3.774219,-2.548841,-2.095621,5.228987],[5.223633,-4.794590,-8.497650,-3.184820,3.304118,-2.057966,5.071999,-6.497468,-0.787041,-2.658420,-0.455215,3.965532,6.495642],[0.762693,-3.196030,5.093252,4.284706,-5.843186,9.893005,-5.327997,4.854326,-4.403865,-3.022488,4.096845,2.520665,6.876582],[-2.452596,6.257758,-4.788717,3.785671,4.978766,5.351390,-5.331908,-7.557991,-3.315298,-0.522236,-7.891817,-8.409143,3.648661],[3.181538,3.928489,-0.949075,5.345018,7.200684,-4.053546,-6.425384,6.381219,-0.155606,4.072741,-2.916086,4.650141,1.470288],[9.897072,8.791590,-4.183312,0.037472,1.174679,6.015194,4.044009,-2.991548,7.826285,3.548573,-8.913775,-8.414648,-2.887955],[6.050845,1.867141,2.392949,2.405220,0.088441,8.454998,8.115943,-2.487767,0.517827,-4.478121,-8.297448,-0.258985,-3.727799],[6.761337,-4.655110,4.710860,-3.134286,5.665862,7.944824,-9.100434,-2.070840,6.354408,-9.303994,-1.088549,1.075067,4.281222]],[[-6.838652,9.004892,6.813752,8.292098,5.059763,2.825118,5.058990,7.849081,9.937206,3.082422,-9.972061,-5.014281,-3.571856],[-3.236300,8.768799,1.674696,-0.510683,-3.097590,-8.622056,2.745219,6.941605,0.342104,0.421851,1.287173,-4.520270,-4.836856],[-9.690879,7.472460,9.636878,-7.367142,4.629661,-5.891254,5.805611,1.468327,-9.061818,2.642299,-8.471293,-2.013961,4.883200],[-5.418080,-1.250247,-1.655306,6.137011,-7.799877,-1.136608,5.213220,-7.458607,0.766139,3.194225,1.569192,7.455010,8.699704],[4.808568,-7.180769,8.548046,-4.782400,8.402166,-4.975515,-4.536982,-6.030302,-3.997437,7.933950,6.207558,-8.972278,6.718706],[6.522657,-5.386336,-9.007077,-0.846896,-6.127539,-6.618092,-2.942905,-0.466241,-3.392463,2.746379,1.666024,3.513605,-5.507730],[8.672214,0.285689,4.692465,9.452993,5.411553,4.496071,-5.740339,2.619754,0.551304,5.596831,1.638468,-0.237443,-9.842631],[-3.713938,-1.105367,-4.711858,7.543958,8.466000,-8.164114,-8.040307,-3.961975,-3.875279,0.766207,0.688059,3.170979,-0.351008],[7.294680,3.955722,-0.559531,6.543571,-7.035303,-3.844264,8.234723,-3.072282,0.626092,5.823305,3.875826,-0.163147,2.983375],[2.162343,-0.371551,8.413133,-3.967204,2.563401,-5.710528,-2.681157,1.901703,-5.227800,-9.133724,-9.452168,3.467088,9.560274],[6.856986,-7.453092,-9.899350,4.905609,9.092874,-7.976124,1.484058,3.551982,-6.998485,3.435749,-5.447382,-0.446665,-4.272803],[-3.261049,-7.229679,-1.653174,-3.391814,-5.685318,-0.040140,0.264124,9.732990,-3.801160,-6.237608,-8.754635,7.533824,-3.844065]],[[-7.672008,-8.802589,1.150013,-8.990427,-0.882988,-3.310542,3.220889,5.703626,-6.728097,-9.492797,-8.185704,5.461354,-7.957802],[0.373022,3.708164,9.105260,-4.580559,-8.278980,0.301042,6.283770,-9.678322,-0.599653,2.250963,1.266758,-3.168157,8.084294],[-9.223974,2.933380,-1.051534,-9.901675,-4.212906,4.272034,4.149819,6.403453,6.513290,9.976830,-7.266757,4.228866,3.651388],[2.418676,-9.636900,2.519931,0.454954,7.180045,3.500047,8.312339,-2.711952,4.327864,2.246947,-4.671308,9.620886,-6.318672],[0.725486,1.366175,-4.473325,-0.465507,6.226095,-1.870295,8.436222,9.035562,3.869888,-8.899764,1.532473,-4.862347,-6.688160],[9.955596,-3.140435,4.519712,-3.496775,-9.750424,-5.436135,3.231217,-1.110910,-7.949543,-8.773165,1.691567,8.436617,1.705607],[0.985353,1.341079,-5.132036,2.737677,-1.568693,-8.773357,-8.912036,0.668139,1.253911,-4.923244,-9.150276,2.001167,-9.867344],[9.809046,8.779344,2.496217,-4.791621,-9.792966,0.816694,2.473647,8.354816,-4.179003,-9.902505,-1.288040,0.112484,-8.995478],[5.823741,-2.448456,-0.850561,2.114900,-1.402333,-1.945066,7.798674,4.754378,-8.544790,-5.677481,-6.097929,5.118370,4.352344],[-3.013297,1.417763,-2.735884,8.895954,-9.864642,-2.232438,8.599117,-4.471719,7.541368,-2.670784,9.754598,6.828282,-0.506891],[-7.265861,8.998486,5.174044,-3.538495,-0.298765,-4.952001,3.700957,5.278408,-8.479915,-3.107859,-1.237999,2.438500,-5.660172],[5.297753,-4.164720,6.972312,-3.255380,-0.256908,0.464624,-3.875839,-5.094805,4.556614,7.733776,3.346222,4.620410,0.351642]],[[-5.242166,-2.686151,4.791571,-2.006732,-7.172701,-2.482934,-3.587141,-2.359362,-1.627718,6.690141,4.452593,-3.323590,2.206100],[0.960406,-6.382533,-8.701310,6.405405,5.910658,3.706841,-0.339502,-3.136787,-8.654823,-2.531393,-0.186703,0.605646,9.156478],[-3.325356,9.822719,4.085204,-6.050200,3.083318,-8.665746,7.931489,1.876623,-8.092568,-0.569940,7.075323,0.114763,-0.252611],[-9.638877,-2.575758,-7.807790,7.206685,-6.820078,-7.200839,-7.105920,-8.908632,-2.423267,5.512821,-6.295392,-2.943021,-7.951072],[5.465084,3.141645,9.502943,7.605640,4.023564,-0.821157,3.087294,6.841788,6.664206,-7.138990,6.900256,0.776178,-9.886681],[-2.092414,0.191703,-7.488460,-5.046248,-9.694359,6.062690,6.661030,4.925949,-5.926240,0.420789,9.111706,0.230076,-8.582280],[-3.599473,9.582432,3.683782,1.268284,-2.760142,6.901149,3.381132,-1.381026,3.683394,2.198569,6.547436,8.635974,-2.606653],[6.940170,-8.675292,-8.635011,-5.856262,-1.022088,0.906775,-0.324449,5.375345,-6.868235,2.477132,-9.239550,9.352162,3.059196],[3.162958,0.180941,9.615724,9.015844,-7.730234,3.092337,-4.934649,-0.680090,7.388304,2.400816,-2.922561,-9.162046,5.933557],[-8.589503,-7.811217,4.493004,-3.967545,2.405824,-6.846235,-0.504047,-5.865774,9.597500,5.930706,-2.665950,-3.960787,5.659008],[-0.764226,-8.764640,-4.489428,-2.996460,-0.786596,-4.616874,-9.505661,9.208226,1.701498,8.848448,3.244321,-9.278689,-7.666453],[9.564096,-8.861557,2.178368,-7.992032,-3.117888,-2.173823,-5.978729,8.956354,0.733061,-0.782956,-1.239552,-6.958915,-9.188530]]], dtype = "float64")#candidate|2361|(4, 12, 13)|const|float64
bop_2362 = relay.power(const_2360.astype('float64'), relay.reshape(const_2361.astype('float64'), relay.shape_of(const_2360))) # shape=(4, 12, 13)
uop_2368 = relay.sin(bop_2362.astype('float32')) # shape=(4, 12, 13)
func_1067_call = mod.get_global_var('func_1067')
func_1071_call = mutated_mod.get_global_var('func_1071')
const_2380 = relay.const(7, dtype = "int64")#candidate|2380|()|const|int64
const_2381 = relay.const([-5,1,10,-3,1,-5,-7,6,-5,9,5,9,9,7,-7,-6,-5,-4,-1,6,-10,3,-5,-1,2,-10,-10,-9,6,-8,8,5,-1,10,7,3,7,5,5,-2,10,5,10,10,2,9,1,3,3,3,-9,9,4,-8,2,7,-4,1,-8,10,-10,-10,-2,-3,4,5,6,-9,-10,1,-9,-5,3,-6,10,3,-4,-10,-5,1,1,-3,2,5,-1,5,7,2,7,-2,-4,4,9,-6,7,4,-3,-4,2,-4,-8,-2,8,-6,4,1,-5,7,9,10,1,5,-2,-7,-10,7,2,4,7,-7,8,-10,5,8,-3,1,4,-5,6,-1,5,-6,-1,-6,-10,9,3,2,-7,1,9,-3,9,-9,10,-3,2,-1,-2,1,-2,-8,2,-10,-10,-8,-2,-4,-10,7], dtype = "int64")#candidate|2381|(160,)|const|int64
call_2379 = relay.TupleGetItem(func_1067_call(relay.reshape(const_2380.astype('int64'), []), relay.reshape(const_2381.astype('int64'), [8, 4, 5]), ), 2)
call_2382 = relay.TupleGetItem(func_1071_call(relay.reshape(const_2380.astype('int64'), []), relay.reshape(const_2381.astype('int64'), [8, 4, 5]), ), 2)
func_737_call = mod.get_global_var('func_737')
func_740_call = mutated_mod.get_global_var('func_740')
call_2388 = func_737_call(relay.reshape(call_2379.astype('float64'), [13, 6, 14]))
call_2389 = func_737_call(relay.reshape(call_2379.astype('float64'), [13, 6, 14]))
output = relay.Tuple([uop_2368,call_2379,const_2380,const_2381,call_2388,])
output2 = relay.Tuple([uop_2368,call_2382,const_2380,const_2381,call_2389,])
func_2390 = relay.Function([], output)
mod['func_2390'] = func_2390
mod = relay.transform.InferType()(mod)
output = func_2390()
func_2391 = relay.Function([], output)
mutated_mod['func_2391'] = func_2391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_2423 = func_1253_call()
call_2424 = func_1253_call()
func_2076_call = mod.get_global_var('func_2076')
func_2078_call = mutated_mod.get_global_var('func_2078')
var_2426 = relay.var("var_2426", dtype = "float32", shape = (60, 36))#candidate|2426|(60, 36)|var|float32
call_2425 = func_2076_call(relay.reshape(var_2426.astype('float32'), [180, 12]))
call_2427 = func_2076_call(relay.reshape(var_2426.astype('float32'), [180, 12]))
func_1928_call = mod.get_global_var('func_1928')
func_1932_call = mutated_mod.get_global_var('func_1932')
var_2430 = relay.var("var_2430", dtype = "float64", shape = (3,))#candidate|2430|(3,)|var|float64
var_2431 = relay.var("var_2431", dtype = "float64", shape = (243,))#candidate|2431|(243,)|var|float64
call_2429 = relay.TupleGetItem(func_1928_call(relay.reshape(var_2430.astype('float64'), [1, 1, 3]), relay.reshape(var_2431.astype('float64'), [9, 9, 3]), ), 2)
call_2432 = relay.TupleGetItem(func_1932_call(relay.reshape(var_2430.astype('float64'), [1, 1, 3]), relay.reshape(var_2431.astype('float64'), [9, 9, 3]), ), 2)
func_2188_call = mod.get_global_var('func_2188')
func_2190_call = mutated_mod.get_global_var('func_2190')
call_2433 = func_2188_call()
call_2434 = func_2188_call()
func_2298_call = mod.get_global_var('func_2298')
func_2299_call = mutated_mod.get_global_var('func_2299')
call_2440 = func_2298_call()
call_2441 = func_2298_call()
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_2443 = relay.TupleGetItem(func_1370_call(), 3)
call_2444 = relay.TupleGetItem(func_1372_call(), 3)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_2446 = relay.TupleGetItem(func_1370_call(), 0)
call_2447 = relay.TupleGetItem(func_1372_call(), 0)
output = relay.Tuple([call_2423,call_2425,var_2426,call_2429,var_2430,var_2431,call_2433,call_2440,call_2443,call_2446,])
output2 = relay.Tuple([call_2424,call_2427,var_2426,call_2432,var_2430,var_2431,call_2434,call_2441,call_2444,call_2447,])
func_2454 = relay.Function([var_2426,var_2430,var_2431,], output)
mod['func_2454'] = func_2454
mod = relay.transform.InferType()(mod)
mutated_mod['func_2454'] = func_2454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2454_call = mutated_mod.get_global_var('func_2454')
var_2456 = relay.var("var_2456", dtype = "float32", shape = (60, 36))#candidate|2456|(60, 36)|var|float32
var_2457 = relay.var("var_2457", dtype = "float64", shape = (3,))#candidate|2457|(3,)|var|float64
var_2458 = relay.var("var_2458", dtype = "float64", shape = (243,))#candidate|2458|(243,)|var|float64
call_2455 = func_2454_call(var_2456,var_2457,var_2458,)
output = call_2455
func_2459 = relay.Function([var_2456,var_2457,var_2458,], output)
mutated_mod['func_2459'] = func_2459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2298_call = mod.get_global_var('func_2298')
func_2299_call = mutated_mod.get_global_var('func_2299')
call_2493 = func_2298_call()
call_2494 = func_2298_call()
func_1437_call = mod.get_global_var('func_1437')
func_1439_call = mutated_mod.get_global_var('func_1439')
var_2497 = relay.var("var_2497", dtype = "float64", shape = (1, 135))#candidate|2497|(1, 135)|var|float64
call_2496 = relay.TupleGetItem(func_1437_call(relay.reshape(var_2497.astype('float64'), [135,])), 1)
call_2498 = relay.TupleGetItem(func_1439_call(relay.reshape(var_2497.astype('float64'), [135,])), 1)
func_2454_call = mod.get_global_var('func_2454')
func_2459_call = mutated_mod.get_global_var('func_2459')
var_2504 = relay.var("var_2504", dtype = "float64", shape = (3, 1))#candidate|2504|(3, 1)|var|float64
var_2505 = relay.var("var_2505", dtype = "float64", shape = (243,))#candidate|2505|(243,)|var|float64
call_2503 = relay.TupleGetItem(func_2454_call(relay.reshape(call_2496.astype('float32'), [60, 36]), relay.reshape(var_2504.astype('float64'), [3,]), relay.reshape(var_2505.astype('float64'), [243,]), ), 2)
call_2506 = relay.TupleGetItem(func_2459_call(relay.reshape(call_2496.astype('float32'), [60, 36]), relay.reshape(var_2504.astype('float64'), [3,]), relay.reshape(var_2505.astype('float64'), [243,]), ), 2)
var_2509 = relay.var("var_2509", dtype = "float64", shape = (6, 135))#candidate|2509|(6, 135)|var|float64
bop_2510 = relay.minimum(var_2497.astype('int8'), var_2509.astype('int8')) # shape=(6, 135)
output = relay.Tuple([call_2493,call_2496,call_2503,var_2504,var_2505,bop_2510,])
output2 = relay.Tuple([call_2494,call_2498,call_2506,var_2504,var_2505,bop_2510,])
func_2517 = relay.Function([var_2497,var_2504,var_2505,var_2509,], output)
mod['func_2517'] = func_2517
mod = relay.transform.InferType()(mod)
mutated_mod['func_2517'] = func_2517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2517_call = mutated_mod.get_global_var('func_2517')
var_2519 = relay.var("var_2519", dtype = "float64", shape = (1, 135))#candidate|2519|(1, 135)|var|float64
var_2520 = relay.var("var_2520", dtype = "float64", shape = (3, 1))#candidate|2520|(3, 1)|var|float64
var_2521 = relay.var("var_2521", dtype = "float64", shape = (243,))#candidate|2521|(243,)|var|float64
var_2522 = relay.var("var_2522", dtype = "float64", shape = (6, 135))#candidate|2522|(6, 135)|var|float64
call_2518 = func_2517_call(var_2519,var_2520,var_2521,var_2522,)
output = call_2518
func_2523 = relay.Function([var_2519,var_2520,var_2521,var_2522,], output)
mutated_mod['func_2523'] = func_2523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
call_2537 = relay.TupleGetItem(func_1505_call(), 1)
call_2538 = relay.TupleGetItem(func_1507_call(), 1)
var_2539 = relay.var("var_2539", dtype = "bool", shape = (180, 12))#candidate|2539|(180, 12)|var|bool
bop_2540 = relay.greater(call_2537.astype('bool'), relay.reshape(var_2539.astype('bool'), relay.shape_of(call_2537))) # shape=(180, 12)
bop_2543 = relay.greater(call_2538.astype('bool'), relay.reshape(var_2539.astype('bool'), relay.shape_of(call_2538))) # shape=(180, 12)
output = relay.Tuple([bop_2540,])
output2 = relay.Tuple([bop_2543,])
func_2545 = relay.Function([var_2539,], output)
mod['func_2545'] = func_2545
mod = relay.transform.InferType()(mod)
mutated_mod['func_2545'] = func_2545
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2546 = relay.var("var_2546", dtype = "bool", shape = (180, 12))#candidate|2546|(180, 12)|var|bool
func_2545_call = mutated_mod.get_global_var('func_2545')
call_2547 = func_2545_call(var_2546)
output = call_2547
func_2548 = relay.Function([var_2546], output)
mutated_mod['func_2548'] = func_2548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1100_call = mod.get_global_var('func_1100')
func_1102_call = mutated_mod.get_global_var('func_1102')
call_2577 = relay.TupleGetItem(func_1100_call(), 0)
call_2578 = relay.TupleGetItem(func_1102_call(), 0)
var_2612 = relay.var("var_2612", dtype = "int32", shape = (9, 9, 11))#candidate|2612|(9, 9, 11)|var|int32
bop_2613 = relay.logical_or(call_2577.astype('bool'), relay.reshape(var_2612.astype('bool'), relay.shape_of(call_2577))) # shape=(9, 9, 11)
bop_2616 = relay.logical_or(call_2578.astype('bool'), relay.reshape(var_2612.astype('bool'), relay.shape_of(call_2578))) # shape=(9, 9, 11)
func_1203_call = mod.get_global_var('func_1203')
func_1209_call = mutated_mod.get_global_var('func_1209')
var_2631 = relay.var("var_2631", dtype = "float64", shape = (2160,))#candidate|2631|(2160,)|var|float64
var_2632 = relay.var("var_2632", dtype = "float32", shape = (960,))#candidate|2632|(960,)|var|float32
call_2630 = relay.TupleGetItem(func_1203_call(relay.reshape(var_2631.astype('float64'), [180, 12]), relay.reshape(var_2632.astype('float32'), [10, 96]), relay.reshape(var_2631.astype('float32'), [180, 12]), relay.reshape(var_2631.astype('float32'), [180, 12]), ), 1)
call_2633 = relay.TupleGetItem(func_1209_call(relay.reshape(var_2631.astype('float64'), [180, 12]), relay.reshape(var_2632.astype('float32'), [10, 96]), relay.reshape(var_2631.astype('float32'), [180, 12]), relay.reshape(var_2631.astype('float32'), [180, 12]), ), 1)
func_2273_call = mod.get_global_var('func_2273')
func_2275_call = mutated_mod.get_global_var('func_2275')
call_2635 = func_2273_call()
call_2636 = func_2273_call()
func_2076_call = mod.get_global_var('func_2076')
func_2078_call = mutated_mod.get_global_var('func_2078')
call_2648 = func_2076_call(relay.reshape(var_2631.astype('float32'), [180, 12]))
call_2649 = func_2076_call(relay.reshape(var_2631.astype('float32'), [180, 12]))
output = relay.Tuple([bop_2613,call_2630,var_2631,var_2632,call_2635,call_2648,])
output2 = relay.Tuple([bop_2616,call_2633,var_2631,var_2632,call_2636,call_2649,])
func_2659 = relay.Function([var_2612,var_2631,var_2632,], output)
mod['func_2659'] = func_2659
mod = relay.transform.InferType()(mod)
var_2660 = relay.var("var_2660", dtype = "int32", shape = (9, 9, 11))#candidate|2660|(9, 9, 11)|var|int32
var_2661 = relay.var("var_2661", dtype = "float64", shape = (2160,))#candidate|2661|(2160,)|var|float64
var_2662 = relay.var("var_2662", dtype = "float32", shape = (960,))#candidate|2662|(960,)|var|float32
output = func_2659(var_2660,var_2661,var_2662,)
func_2663 = relay.Function([var_2660,var_2661,var_2662,], output)
mutated_mod['func_2663'] = func_2663
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2683 = relay.var("var_2683", dtype = "uint8", shape = (11, 10, 9))#candidate|2683|(11, 10, 9)|var|uint8
var_2684 = relay.var("var_2684", dtype = "uint8", shape = (11, 10, 9))#candidate|2684|(11, 10, 9)|var|uint8
bop_2685 = relay.subtract(var_2683.astype('uint8'), relay.reshape(var_2684.astype('uint8'), relay.shape_of(var_2683))) # shape=(11, 10, 9)
bop_2693 = relay.logical_or(bop_2685.astype('bool'), relay.reshape(var_2683.astype('bool'), relay.shape_of(bop_2685))) # shape=(11, 10, 9)
func_2545_call = mod.get_global_var('func_2545')
func_2548_call = mutated_mod.get_global_var('func_2548')
var_2697 = relay.var("var_2697", dtype = "bool", shape = (1080, 2))#candidate|2697|(1080, 2)|var|bool
call_2696 = relay.TupleGetItem(func_2545_call(relay.reshape(var_2697.astype('bool'), [180, 12])), 0)
call_2698 = relay.TupleGetItem(func_2548_call(relay.reshape(var_2697.astype('bool'), [180, 12])), 0)
output = relay.Tuple([bop_2693,call_2696,var_2697,])
output2 = relay.Tuple([bop_2693,call_2698,var_2697,])
func_2712 = relay.Function([var_2683,var_2684,var_2697,], output)
mod['func_2712'] = func_2712
mod = relay.transform.InferType()(mod)
mutated_mod['func_2712'] = func_2712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2712_call = mutated_mod.get_global_var('func_2712')
var_2714 = relay.var("var_2714", dtype = "uint8", shape = (11, 10, 9))#candidate|2714|(11, 10, 9)|var|uint8
var_2715 = relay.var("var_2715", dtype = "uint8", shape = (11, 10, 9))#candidate|2715|(11, 10, 9)|var|uint8
var_2716 = relay.var("var_2716", dtype = "bool", shape = (1080, 2))#candidate|2716|(1080, 2)|var|bool
call_2713 = func_2712_call(var_2714,var_2715,var_2716,)
output = call_2713
func_2717 = relay.Function([var_2714,var_2715,var_2716,], output)
mutated_mod['func_2717'] = func_2717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
call_2753 = relay.TupleGetItem(func_1505_call(), 3)
call_2754 = relay.TupleGetItem(func_1507_call(), 3)
output = call_2753
output2 = call_2754
func_2760 = relay.Function([], output)
mod['func_2760'] = func_2760
mod = relay.transform.InferType()(mod)
mutated_mod['func_2760'] = func_2760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2760_call = mutated_mod.get_global_var('func_2760')
call_2761 = func_2760_call()
output = call_2761
func_2762 = relay.Function([], output)
mutated_mod['func_2762'] = func_2762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
call_2778 = relay.TupleGetItem(func_1505_call(), 2)
call_2779 = relay.TupleGetItem(func_1507_call(), 2)
func_2230_call = mod.get_global_var('func_2230')
func_2232_call = mutated_mod.get_global_var('func_2232')
call_2780 = func_2230_call()
call_2781 = func_2230_call()
func_2659_call = mod.get_global_var('func_2659')
func_2663_call = mutated_mod.get_global_var('func_2663')
const_2783 = relay.const([10,-8,-8,1,8,6,8,-1,-3,2,-7,-3,-1,4,-6,1,-10,-2,-9,4,-1,-7,2,-3,-10,5,7,8,2,1,3,-3,1,9,2,-7,6,3,2,2,-2,1,-2,-9,-1,4,2,-4,5,-3,1,-2,-4,4,3,-9,-3,-4,7,3,6,1,7,3,1,10,5,-10,9,6,1,6,-4,-1,4,1,3,9,9,3,7,-3,-7,3,6,5,5,-1,2,1,8,-7,6,-3,8,-5,9,-1,-1,-10,4,-2,9,-9,9,-8,-4,10,-10,4,-6,7,7,2,2,4,-9,6,-2,-6,5,-8,10,-8,10,10,-1,1,-3,-7,-5,3,-7,-10,4,-10,2,9,-7,-2,-6,-2,9,6,-8,-7,2,-7,-8,8,4,2,-7,10,5,10,6,10,-7,9,9,-8,-7,10,1,9,9,5,-2,9,-9,-1,-2,2,9,-5,-7,-9,-8,-2,-8,-6,2,-2,-6,-2,-1,10,5,-3,3,-3,2,7,-1,-9,-9,8,4,-6,3,5,-2,-9,7,3,1,2,-6,-3,7,-7,-7,-10,7,1,-5,-5,-1,5,-6,8,4,1,9,8,6,-4,2,-3,-1,10,1,2,10,2,8,5,1,2,2,8,7,10,-8,-8,-7,3,-4,2,6,1,-3,4,4,4,7,-5,-3,-4,8,-10,-10,5,-1,9,-8,-1,-9,-2,2,9,7,-4,9,-3,-1,3,7,-7,-2,8,-9,10,-4,10,-10,5,-3,10,-8,10,-8,-1,9,-5,-6,-3,-10,4,-7,1,-3,5,-7,9,-7,-7,2,-2,-7,3,2,10,-9,7,9,3,4,10,-2,9,8,4,3,10,-5,-5,9,8,-2,-3,-2,-2,2,-8,-3,-4,2,-2,6,-6,4,-7,-9,-8,9,-1,-8,7,-7,4,3,-10,8,1,3,-4,-9,10,7,8,-1,-8,3,7,-2,9,-1,-10,2,-2,9,4,8,-7,-3,-2,5,1,5,10,-1,3,-2,10,6,-1,-7,-4,-10,-9,-7,5,-10,2,4,-5,2,6,2,-8,-5,5,5,-6,-2,5,-5,3,-7,-3,8,-8,5,-2,10,-7,-10,-1,-2,9,-2,-3,-7,2,-5,6,2,-4,10,6,-8,8,-5,-3,6,1,6,-4,-4,6,-3,1,-6,4,2,7,5,8,-4,9,10,-7,7,9,10,-1,8,10,-8,2,-6,-8,6,-3,8,8,5,6,9,-3,1,-3,5,-4,8,3,-7,-5,8,1,1,3,9,7,-5,6,-6,2,2,6,-2,-4,-9,-9,-8,-10,4,-6,-3,8,5,1,-2,-3,-10,4,8,-2,8,2,4,6,7,2,7,7,5,-3,4,-1,7,-8,-5,9,-2,3,5,7,-3,2,-8,-2,-9,-9,-1,7,6,-2,-6,8,2,-7,1,8,10,4,9,10,-8,-2,7,-8,7,-8,1,-4,-5,9,-2,10,7,1,-9,-7,-9,-10,8,-1,-8,-9,-5,1,1,-6,8,-6,-1,4,-7,-10,10,3,8,3,5,6,-5,9,-8,1,-2,-3,-4,-6,-10,9,6,7,8,-9,-2,-10,-1,-2,-6,7,10,3,-10,6,5,7,-7,-5,-6,7,-9,-6,-8,3,3,-1,1,8,-3,1,-10,-9,-5,-2,-9,9,-6,10,5,-7,3,-1,4,-8,-6,6,7,4,10,-3,7,-8,-6,8,-4,-10,-4,5,-2,6,-10,-3,8,1,3,8,5,-4,8,4,6,-1,7,-10,-9,-7,7,-7,7,-2,1,2,-7,7,-8,-7,7,7,-6,-4,-1,5,3,4,10,-2,-5,-7,1,-8,-4,-3,5,-6,-7,5,1,8,9,-4,8,-2,-10,-7,-2,10,-2,-7,-5,7,3,-1,-9,8,1,-1,-8,3,-1,-9,-5,-8,-3,3,10,-9,-1,9,1,10,-1,-2,3,9,6,-6,8,-10,-1,-9,5,3,-10,6,10,-3,8,-10,-1,-4,6,9,-3,6,-4,-4,5,-4,2,8,7,-2,9,5,-10,6,-8,1,6,7,4,-10,1,-6,8,-4,7,10,-8,5,-6,4,-8,9,-4,-5,-10,-9,-10,3,-1,3,-2,4,-1,-8,10,5,8,-3,10,3,4,2,-7,4,-3,7,-1,5,-8,1,4,-5,9,5,5,-9,9,2,8,5,-2,-7,1,-7,5,-8,-3,1,10,-1,-3,-3,4,8,1,3,6,-8,-2,-8,4,-5,-9,-9,2,4,-2,10,4,8,-3,-1,-1,-8,8,9,3,1,10,-1,-1,2,3,1,-9,-5,10,-1,-6,3,6,6,-5,9,6,-2,8,2,5,1,10], dtype = "int32")#candidate|2783|(891,)|const|int32
const_2784 = relay.const([3.206345,-2.427791,-5.972781,-2.355611,-8.289989,7.248992,-7.535173,-0.322358,-6.958974,-4.127045,6.276455,0.689288,-5.537603,0.189272,-5.514886,2.864153,-8.669319,3.206690,-9.975277,-1.026114,7.227008,-6.317683,-6.202458,9.763887,-5.358885,-0.236841,-5.302963,-2.668739,-1.189908,3.195487,-6.425034,-8.537288,-9.010253,-1.451470,1.928837,-3.511778,-5.501290,-6.284274,6.326224,3.813709,5.671055,3.345204,3.138357,8.018295,0.424502,-6.139838,6.739164,-6.395276,-4.248888,-4.663502,6.795431,-7.063339,-9.596873,-1.680519,-6.234321,9.224449,-5.123176,-2.745289,7.542628,1.414404,-0.556178,-9.480088,-3.525472,8.682042,1.696056,-1.571176,-7.501423,-9.600644,-5.415891,9.638192,-4.761056,-2.513164,4.158905,-5.007119,-9.012772,-2.159082,5.274624,-9.170650,5.182594,6.828625,-7.273392,-1.885615,-6.550693,6.377271,6.655655,-2.019600,0.578155,-7.077112,4.581617,8.434973,-5.767445,-3.233754,5.740766,9.558153,-4.700081,1.285769,7.878674,-5.547181,8.107110,-2.579215,-1.284861,-3.918248,4.133395,-5.668438,-0.369970,6.110079,4.129593,-6.620839,-1.816037,-6.902575,-7.971987,3.773829,4.729990,-2.463231,3.624854,4.965984,0.601057,-7.544082,8.715165,5.384511,-5.622483,-7.831560,-8.552890,-2.901519,6.565211,8.560240,7.577605,9.172971,-6.952998,6.937236,-3.534731,6.363752,-7.106494,-4.607238,9.482499,3.613739,-1.644242,9.987645,7.902313,-2.632531,-2.395864,-8.670327,-4.634416,-0.543078,2.132323,7.388927,4.036915,3.766084,-4.620651,5.459380,8.988848,7.823179,-3.371326,-9.776560,7.351549,-5.736899,8.057623,7.060911,-5.391831,-1.204142,1.080400,5.226281,8.482613,-0.242700,1.698030,9.574211,8.140966,-9.361059,7.583501,5.472673,7.754746,6.491405,-7.488696,9.247427,-5.459790,5.676069,4.833571,-4.681843,4.451413,-4.373037,-3.037453,-5.478077,-5.740182,-3.192250,8.671377,-9.361250,4.150006,4.592403,-1.727099,8.680714,6.669314,-0.293168,8.752855,0.732710,-9.255934,7.286122,4.207609,-0.772043,8.011194,0.133392,-6.374317,1.716770,3.720978,2.521252,9.344179,9.754987,2.872125,1.736214,-2.298253,-7.044488,-2.945202,-6.110899,2.056451,-1.950250,5.236083,6.512522,7.042044,4.682915,-1.415942,8.851415,2.482681,-9.031107,-5.554746,-7.286759,-5.139387,3.750611,-8.079007,-1.639465,-7.193705,-9.406860,-7.176203,0.274938,0.734855,3.763229,-4.730514,4.660299,7.641504,-1.319837,-5.625728,-4.418722,2.613933,7.203176,1.671219,9.827837,-2.048938,4.252407,-9.816658,0.645540,-1.698602,3.166304,0.319489,-3.516852,-9.877999,-1.848035,9.302491,8.076046,8.009895,0.039057,-2.381228,-4.929960,-3.568406,1.787656,5.904448,-7.907716,8.774476,-3.390490,0.043010,3.596125,6.087814,-8.093979,7.050597,-4.745527,-8.772158,5.135648,-0.540111,-9.876904,-3.711640,0.997294,-3.142908,0.960443,5.918335,-5.890983,-0.794733,-1.305241,0.618762,0.301825,-9.993036,1.596188,6.140219,1.797479,2.178705,-5.324271,-9.054627,3.473663,-3.276232,-4.722071,-8.703014,-1.673707,7.898840,-1.906761,3.173560,3.036287,9.108880,-9.004117,7.169034,0.197633,9.938280,-8.436373,5.750700,-9.141985,-1.110296,-0.536359,1.343867,-7.787765,4.989802,-6.978754,-0.449675,2.810963,-6.567252,-2.729231,7.002081,-0.543108,7.507163,-2.734383,-2.104045,-5.425003,-2.129969,5.644204,2.851378,-5.646231,2.562448,7.024177,-3.308714,3.984253,1.639603,-2.388484,2.500120,4.123118,-3.910906,-0.483738,1.833830,6.852044,6.816340,2.796606,-8.174029,0.906602,-5.998768,0.656880,7.662796,-7.489692,-2.346451,-2.069834,1.860634,9.311415,5.979218,9.200969,-5.047842,-1.842170,7.288093,9.364389,5.260431,0.326919,1.708984,-9.828127,-8.253945,5.782801,-9.492902,-0.263313,-7.650412,5.321542,2.983559,-9.835956,4.730788,0.592227,-8.495031,9.773483,-9.391025,-2.694462,6.564590,-7.920006,1.912979,7.123998,2.457384,2.163166,4.188255,-0.377738,6.194902,-8.254692,6.566149,-4.972007,-2.648195,-7.439062,-0.861348,2.352254,4.763501,3.180955,7.878046,-5.462330,7.930934,-2.192093,-8.769635,6.214611,2.269181,6.478380,-1.649352,8.276269,2.374089,9.022189,-9.964633,2.474139,-1.809541,-2.994642,7.676481,6.398716,-9.881726,3.001163,-0.827550,9.201865,0.780461,-3.388859,-4.569655,-3.519408,7.617191,2.008690,-2.385455,-7.689948,-5.654466,1.750979,4.701968,-7.800629,-1.573513,4.895847,-2.504140,0.507387,9.008500,6.036747,1.008085,7.232237,6.285039,-9.697694,0.182136,2.206083,8.046450,-6.017812,2.640422,-9.206822,-5.531674,-1.666576,-5.352415,-1.826558,0.490535,3.488108,-8.531766,-2.006502,-8.191012,6.212187,8.519563,9.252827,8.428903,3.935402,-1.646911,1.749296,8.193443,7.507561,4.603503,5.541847,-8.217210,2.785861,7.122746,-4.809802,-6.200103,-8.785885,-9.080732,-3.049736,0.456791,-0.236896,5.432720,-9.310829,0.916090,8.710672,-0.650929,-1.064272,7.978723,5.758713,1.607730,-6.044879,5.858360,0.401577,-9.583796,-2.218110,3.287065,5.225825,-3.026984,-1.040880,-3.669215,-1.290689,-0.303557,6.546367,-6.939925,8.457162,-0.161006,3.653383,-9.009551,-0.489360,-0.075251,-6.953560,7.087772,-0.272875,4.414592,-4.678699,-3.642790,-7.247990,8.063425,5.705713,-2.461108,5.507328,-3.441294,0.303694,3.121530,-3.516258,-0.854516,0.786311,-2.321043,6.977842,-4.276499,6.283069,-8.726903,-0.110051,8.215894,2.971499,-8.003383,5.902555,2.170422,8.166427,-7.894430,-0.638042,-4.230389,-0.780891,4.592947,-5.652871,1.436627,1.769418,-0.087403,5.123429,7.435766,2.459766,8.052193,-1.512146,5.787345,2.870291,4.545043,-1.165875,-1.864823,3.882723,-8.245954,0.967418,1.478453,4.661482,-1.241094,-5.358810,3.457383,3.145387,-0.073673,0.185710,3.922037,2.343437,-0.563301,-7.490482,-9.056375,1.744393,-9.265548,4.230883,3.242256,6.027926,3.713471,8.618314,9.330350,-3.167865,-8.460834,-7.558978,-0.400122,1.978597,9.797049,8.737681,2.266498,3.647323,-9.317398,7.188972,0.309267,0.945035,-9.536473,-2.055056,-7.401886,1.290069,-5.080309,-6.459816,3.076269,-9.133914,-3.887831,8.094385,-4.906645,2.714181,5.922598,-7.538013,1.463345,1.233673,-3.328907,0.226925,-1.436488,3.775925,-4.296390,-3.364284,8.125827,3.476175,-3.676399,8.188009,4.220253,6.459063,-8.359498,6.985815,-8.519170,6.344942,-2.667749,6.193184,-4.330514,-0.455568,-0.983317,-3.491393,2.192675,8.306469,-4.067144,-6.857742,6.504000,-2.398808,7.231590,4.898726,0.905856,-0.130386,-9.886372,-4.724985,-8.863610,4.052530,8.688510,0.864832,6.179638,8.521754,7.040620,6.883481,7.247920,-7.335622,-3.278962,-5.901567,0.649621,1.765903,-9.587360,-1.097778,-5.101894,-7.304111,0.597704,-3.829592,-9.532218,7.544400,6.642512,2.156996,-2.755061,7.190141,0.553044,-7.217350,-1.580947,-0.770864,-9.141067,-0.324692,3.860269,-8.842039,-4.079889,9.353760,-5.743918,-6.659409,-4.090767,4.889962,-6.332555,1.795262,-7.410968,-5.692962,4.906999,-8.087127,7.444140,4.267852,1.769726,4.155309,-6.762035,-8.420313,8.237774,0.756757,-7.549840,3.000355,2.312621,0.946517,-3.683413,3.515997,-6.745302,1.907243,-4.251314,-1.169162,2.920814,2.803409,8.704890,-2.839578,-6.650177,-6.101241,-0.294528,8.110582,-2.412190,-1.570971,-7.768530,-2.051377,1.186258,-4.905867,-4.803162,7.788214,8.266768,-4.741309,-9.427169,2.644435,-6.022507,-3.156199,7.576532,-4.951354,-1.246513,6.982791,-8.550517,2.940801,7.922755,3.608344,1.340292,4.385353,3.684826,9.849165,4.510133,7.956495,-8.067759,-7.857336,6.341580,2.938891,4.288502,6.506314,-8.536100,1.648905,-4.173949,-7.733022,4.920592,-6.858567,6.737974,4.218431,0.621846,-8.306331,-8.004457,3.105560,0.602164,7.884386,1.000869,1.608323,2.175975,-2.981733,9.533908,9.209301,-4.685449,-0.654477,2.438888,-6.859071,-8.629954,-5.214852,-6.446520,-5.641257,-3.691558,-2.858498,-8.325125,-1.169355,1.774606,-9.346630,1.955279,8.035397,3.375422,4.668998,7.391201,4.467310,-4.882585,-7.061658,-0.474436,-3.712400,-4.306680,-7.736901,-0.336641,6.886501,5.956070,8.782154,7.820701,2.924162,-2.070660,-4.866997,-4.185070,2.072945,8.194526,1.683507,-1.307394,8.287991,6.775919,-3.197171,-9.120541,3.785398,8.403358,-4.330331,9.037229,5.403975,-2.560971,-5.382606,-4.658263,0.034413,3.008259,6.581808,-8.316631,9.475496,-2.104413,-1.022406,8.313808,4.970311,-8.676675,0.334761,3.912229,7.029985,-1.941503,-6.453015,7.761143,3.741056,3.694940,-6.447678,7.427271,3.383174,2.089131,-9.900654,6.753074,6.503257,4.391868,8.051003,-9.989097,-1.750321,-2.168619,0.410421,-4.932579,2.684312,0.723979,8.400786,1.329525,-1.897172,-8.844167,3.307747,-7.051054,3.214491,1.895155,-1.267409,6.009543,9.708831,-0.858964,5.440822,0.637547,-0.964392,0.162362,5.929235,-9.541751,5.475855,-1.698426,-8.382990,-1.658265,-5.298900,-4.170272,9.614477,5.297515,-4.880704,4.700802,-6.843781,-2.457591,0.277556,-4.519715,-1.385040,-4.053751,-2.417457,-8.137833,-2.385814,-3.141534,-4.768486,9.166810,4.495201,-1.540831,-3.497235,3.788376,-5.741315,8.985625,3.994759,-1.289530,-7.060099,-8.780063,1.279944,7.962821,9.977207,-4.684204,0.309467,5.085918,-1.362289,-7.395426,0.975826,3.539001,2.964874,6.102163,4.768672,-2.945184,-6.460932,-1.564433,8.757639,3.332023,3.726103,-4.639693,-9.343095,9.037620,-8.244173,8.905794,-5.352367,8.347446,-1.979117,-0.352328,4.908998,3.878811,0.687331,6.103525,-7.933421,3.730328,3.670990,-2.893175,9.618202,-0.932863,7.260279,1.934000,7.028590,9.999802,2.309226,0.582482,-2.479416,7.206062,-0.555219,-5.199591,4.934013,-4.820967,7.917907,-5.440968,8.509772,-3.906559,4.280531,-3.693919,5.573561,-0.013489,7.492069], dtype = "float32")#candidate|2784|(960,)|const|float32
call_2782 = relay.TupleGetItem(func_2659_call(relay.reshape(const_2783.astype('int32'), [9, 9, 11]), relay.reshape(call_2780.astype('float64'), [2160,]), relay.reshape(const_2784.astype('float32'), [960,]), ), 3)
call_2785 = relay.TupleGetItem(func_2663_call(relay.reshape(const_2783.astype('int32'), [9, 9, 11]), relay.reshape(call_2780.astype('float64'), [2160,]), relay.reshape(const_2784.astype('float32'), [960,]), ), 3)
output = relay.Tuple([call_2778,call_2780,call_2782,const_2783,const_2784,])
output2 = relay.Tuple([call_2779,call_2781,call_2785,const_2783,const_2784,])
func_2789 = relay.Function([], output)
mod['func_2789'] = func_2789
mod = relay.transform.InferType()(mod)
mutated_mod['func_2789'] = func_2789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2789_call = mutated_mod.get_global_var('func_2789')
call_2790 = func_2789_call()
output = call_2790
func_2791 = relay.Function([], output)
mutated_mod['func_2791'] = func_2791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1809_call = mod.get_global_var('func_1809')
func_1811_call = mutated_mod.get_global_var('func_1811')
call_2924 = func_1809_call()
call_2925 = func_1809_call()
output = relay.Tuple([call_2924,])
output2 = relay.Tuple([call_2925,])
func_2928 = relay.Function([], output)
mod['func_2928'] = func_2928
mod = relay.transform.InferType()(mod)
output = func_2928()
func_2929 = relay.Function([], output)
mutated_mod['func_2929'] = func_2929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2345_call = mod.get_global_var('func_2345')
func_2346_call = mutated_mod.get_global_var('func_2346')
call_2995 = relay.TupleGetItem(func_2345_call(), 0)
call_2996 = relay.TupleGetItem(func_2346_call(), 0)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_3007 = func_1253_call()
call_3008 = func_1253_call()
output = relay.Tuple([call_2995,call_3007,])
output2 = relay.Tuple([call_2996,call_3008,])
func_3017 = relay.Function([], output)
mod['func_3017'] = func_3017
mod = relay.transform.InferType()(mod)
output = func_3017()
func_3018 = relay.Function([], output)
mutated_mod['func_3018'] = func_3018
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3024 = relay.var("var_3024", dtype = "int16", shape = (8, 5, 5))#candidate|3024|(8, 5, 5)|var|int16
var_3025 = relay.var("var_3025", dtype = "int16", shape = (8, 5, 5))#candidate|3025|(8, 5, 5)|var|int16
bop_3026 = relay.not_equal(var_3024.astype('bool'), relay.reshape(var_3025.astype('bool'), relay.shape_of(var_3024))) # shape=(8, 5, 5)
output = relay.Tuple([bop_3026,])
output2 = relay.Tuple([bop_3026,])
func_3039 = relay.Function([var_3024,var_3025,], output)
mod['func_3039'] = func_3039
mod = relay.transform.InferType()(mod)
var_3040 = relay.var("var_3040", dtype = "int16", shape = (8, 5, 5))#candidate|3040|(8, 5, 5)|var|int16
var_3041 = relay.var("var_3041", dtype = "int16", shape = (8, 5, 5))#candidate|3041|(8, 5, 5)|var|int16
output = func_3039(var_3040,var_3041,)
func_3042 = relay.Function([var_3040,var_3041,], output)
mutated_mod['func_3042'] = func_3042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2345_call = mod.get_global_var('func_2345')
func_2346_call = mutated_mod.get_global_var('func_2346')
call_3093 = relay.TupleGetItem(func_2345_call(), 1)
call_3094 = relay.TupleGetItem(func_2346_call(), 1)
var_3100 = relay.var("var_3100", dtype = "float32", shape = (180, 12))#candidate|3100|(180, 12)|var|float32
bop_3101 = relay.less(call_3093.astype('bool'), relay.reshape(var_3100.astype('bool'), relay.shape_of(call_3093))) # shape=(180, 12)
bop_3104 = relay.less(call_3094.astype('bool'), relay.reshape(var_3100.astype('bool'), relay.shape_of(call_3094))) # shape=(180, 12)
output = relay.Tuple([bop_3101,])
output2 = relay.Tuple([bop_3104,])
func_3110 = relay.Function([var_3100,], output)
mod['func_3110'] = func_3110
mod = relay.transform.InferType()(mod)
var_3111 = relay.var("var_3111", dtype = "float32", shape = (180, 12))#candidate|3111|(180, 12)|var|float32
output = func_3110(var_3111)
func_3112 = relay.Function([var_3111], output)
mutated_mod['func_3112'] = func_3112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2928_call = mod.get_global_var('func_2928')
func_2929_call = mutated_mod.get_global_var('func_2929')
call_3150 = relay.TupleGetItem(func_2928_call(), 0)
call_3151 = relay.TupleGetItem(func_2929_call(), 0)
output = relay.Tuple([call_3150,])
output2 = relay.Tuple([call_3151,])
func_3152 = relay.Function([], output)
mod['func_3152'] = func_3152
mod = relay.transform.InferType()(mod)
output = func_3152()
func_3153 = relay.Function([], output)
mutated_mod['func_3153'] = func_3153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_3156 = func_1253_call()
call_3157 = func_1253_call()
output = relay.Tuple([call_3156,])
output2 = relay.Tuple([call_3157,])
func_3163 = relay.Function([], output)
mod['func_3163'] = func_3163
mod = relay.transform.InferType()(mod)
mutated_mod['func_3163'] = func_3163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3163_call = mutated_mod.get_global_var('func_3163')
call_3164 = func_3163_call()
output = call_3164
func_3165 = relay.Function([], output)
mutated_mod['func_3165'] = func_3165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3163_call = mod.get_global_var('func_3163')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_3183 = relay.TupleGetItem(func_3163_call(), 0)
call_3184 = relay.TupleGetItem(func_3165_call(), 0)
output = relay.Tuple([call_3183,])
output2 = relay.Tuple([call_3184,])
func_3241 = relay.Function([], output)
mod['func_3241'] = func_3241
mod = relay.transform.InferType()(mod)
mutated_mod['func_3241'] = func_3241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3241_call = mutated_mod.get_global_var('func_3241')
call_3242 = func_3241_call()
output = call_3242
func_3243 = relay.Function([], output)
mutated_mod['func_3243'] = func_3243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_3403 = relay.TupleGetItem(func_1370_call(), 1)
call_3404 = relay.TupleGetItem(func_1372_call(), 1)
func_2712_call = mod.get_global_var('func_2712')
func_2717_call = mutated_mod.get_global_var('func_2717')
const_3406 = relay.const([-6,-10,-4,-10,4,-9,4,9,1,3,4,-2,9,7,2,-3,-4,1,6,6,-1,-10,-4,7,9,-3,7,7,9,5,-1,-2,-1,-4,2,10,7,-2,-9,8,10,-10,7,6,3,-7,-10,-9,2,10,7,9,10,-7,-2,-6,4,-1,5,-9,7,-3,7,-9,-7,-2,9,-8,-5,-7,-10,9,-10,7,6,-2,-9,1,6,4,-9,10,2,-8,-3,-3,-9,-6,-3,-2,6,5,8,-3,5,10,6,1,-7,4,-5,4,-1,3,-3,6,-9,-9,6,3,-1,-3,-10,6,5,-9,9,4,-2,-6,2,-8,-3,-9,-9,10,5,9,-8,-3,5,5,5,-5,-6,4,5,8,7,8,-10,-7,10,10,-9,4,7,7,9,-9,-3,1,-6,-7,-8,10,1,-3,-3,2,-10,-5,6,-10,-4,-7,3,6,-1,-4,-5,-7,2,-9,4,7,8,4,-6,6,-3,-8,3,8,4,-2,-8,7,-8,-7,8,10,-5,-7,-7,2,5,8,3,-3,10,10,-4,-10,-1,-9,-10,-2,-3,8,1,-2,10,-8,8,4,7,-7,-8,5,3,-10,-3,8,3,-8,7,-3,-9,-2,2,-8,9,-4,-2,8,-5,8,1,3,-1,-8,-10,5,-2,10,-4,-7,-4,2,9,3,8,-1,-9,-3,-7,1,2,9,-5,-1,7,-4,6,9,5,9,-7,-2,-5,7,6,9,3,3,5,9,-2,3,8,-5,-7,-6,-5,9,3,-1,-5,8,-6,-8,-7,-3,1,-6,1,1,6,-2,-8,-10,-8,-10,1,1,-1,10,-7,4,10,-6,-5,-9,-6,1,-4,5,-4,-7,4,-2,-8,-10,5,10,8,-8,-2,-6,-10,2,-10,5,3,6,-1,-2,-9,1,-10,1,6,-1,-6,7,-5,-9,-6,-6,-8,6,-3,6,1,-7,-10,-9,8,5,8,-2,-10,8,7,3,-8,-5,-7,4,10,-1,10,7,1,-1,-1,-3,-4,-7,5,-6,-10,6,2,5,9,-2,-5,6,8,-6,10,2,-10,-5,-8,10,10,5,-5,-5,6,3,6,-1,9,-5,-9,-3,5,-6,6,1,3,9,-6,-4,4,6,-9,6,6,-6,-10,6,6,-6,-9,10,3,-1,6,1,-5,9,6,1,-7,-9,-6,2,-6,-4,-7,8,-8,7,4,-3,7,-2,-7,6,-10,3,-9,-7,5,-9,-8,10,-8,9,7,1,-5,-8,8,8,-9,3,6,-5,1,-3,3,-6,-2,-2,-8,4,10,8,8,-3,7,-6,-5,-5,-5,9,4,10,2,-7,-7,-6,5,-4,-9,9,-4,-10,6,-7,-4,10,2,5,3,8,5,6,7,-2,-6,2,-5,-9,8,3,-2,9,6,10,8,-7,2,-2,3,7,6,-9,4,4,-4,3,2,10,7,-5,-9,-7,-8,-10,-4,2,8,1,-7,-1,1,-7,-7,-1,8,-9,-2,8,7,3,-6,-1,4,6,6,4,-3,-2,-9,-3,1,-6,8,5,1,-7,10,-1,2,10,5,7,7,8,-2,-7,-5,-8,-6,-8,-8,5,-7,-6,4,-8,2,-8,-7,-8,-9,4,7,-9,-4,1,-6,-3,3,-1,-7,-7,-6,-1,3,-4,4,10,-1,-4,8,10,-2,-6,-4,1,7,4,4,6,3,-2,9,10,-1,-4,10,2,9,-4,-6,-4,-4,8,-4,-5,-6,5,1,3,10,2,3,1,-3,-5,-1,-3,9,-2,6,1,-8,-5,-2,2,8,-1,9,5,6,-2,8,3,-5,-10,4,-2,8,1,8,1,7,-8,-5,-8,-10,-9,6,-6,6,-3,-7,-5,2,6,-1,-5,10,-7,-8,-5,7,-9,-7,3,2,6,-1,-6,-8,3,1,2,-5,6,5,-2,-5,-5,-5,-6,6,-6,-4,10,-7,5,-4,7,5,-3,-5,3,3,4,8,-4,-3,-1,-5,3,7,9,-5,1,10,-10,-8,-6,-1,-8,10,1,-4,-4,-5,-10,5,4,-4,9,10,10,2,-8,6,-10,-9,2,7,-2,-3,7,-10,9,7,-9,-9,4,6,-4,1,1,-9,5,10,-8,-8,2,-5,3,1,8,2,1,5,2,-3,8,-7,8,10,2,-3,7,5,2,1,-8,-4,-1,-6,7,-6,-1,-9,2,-7,7,-9,9,-2,2,3,-6,-8,-7,10,6,-2,10,-8,-9,7,6,-10,-9,-6,-6,10,-5,1,-7,-10,8,1,-3,2,-3,-8,4,4,2,4,-8,-2,-5,8,3,-6,-10,-10,-4,-5,-1,6,2,-9,-9,-2,9,1,-6,-7,-7,-1,10,9,6,-2,8,-4,-7,5,-8,-4,-3,-5,4,-2,-7,-7,6,10,2,1,-10,-2,-10,5,-6,-8,-2,1,-7,6,-6,10,2,4,-1,-4,1,-10,-5,-8,-1,-1,1,8,5,-1,-10,-2,2,6,2,6,8,-2,-8,3,9,2,-5,8,-8,-8,-2,1,-6,-9,7,-10,1,7,6,-1,-3,5,-7,8,1,-4,-8,-9,1,3,-5,-2,-8,-8,-10,-9,5,-5,-6,8,10,-2,-6,-5,1,5,-4,4,10,4,2,5,7,10,2,3,-9,-2,-10], dtype = "uint8")#candidate|3406|(990,)|const|uint8
var_3407 = relay.var("var_3407", dtype = "bool", shape = (2160,))#candidate|3407|(2160,)|var|bool
call_3405 = relay.TupleGetItem(func_2712_call(relay.reshape(const_3406.astype('uint8'), [11, 10, 9]), relay.reshape(const_3406.astype('uint8'), [11, 10, 9]), relay.reshape(var_3407.astype('bool'), [1080, 2]), ), 2)
call_3408 = relay.TupleGetItem(func_2717_call(relay.reshape(const_3406.astype('uint8'), [11, 10, 9]), relay.reshape(const_3406.astype('uint8'), [11, 10, 9]), relay.reshape(var_3407.astype('bool'), [1080, 2]), ), 2)
func_2760_call = mod.get_global_var('func_2760')
func_2762_call = mutated_mod.get_global_var('func_2762')
call_3415 = func_2760_call()
call_3416 = func_2760_call()
output = relay.Tuple([call_3403,call_3405,const_3406,var_3407,call_3415,])
output2 = relay.Tuple([call_3404,call_3408,const_3406,var_3407,call_3416,])
func_3433 = relay.Function([var_3407,], output)
mod['func_3433'] = func_3433
mod = relay.transform.InferType()(mod)
mutated_mod['func_3433'] = func_3433
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3434 = relay.var("var_3434", dtype = "bool", shape = (2160,))#candidate|3434|(2160,)|var|bool
func_3433_call = mutated_mod.get_global_var('func_3433')
call_3435 = func_3433_call(var_3434)
output = call_3435
func_3436 = relay.Function([var_3434], output)
mutated_mod['func_3436'] = func_3436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1809_call = mod.get_global_var('func_1809')
func_1811_call = mutated_mod.get_global_var('func_1811')
call_3498 = func_1809_call()
call_3499 = func_1809_call()
func_1566_call = mod.get_global_var('func_1566')
func_1567_call = mutated_mod.get_global_var('func_1567')
call_3504 = relay.TupleGetItem(func_1566_call(), 0)
call_3505 = relay.TupleGetItem(func_1567_call(), 0)
func_1525_call = mod.get_global_var('func_1525')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_3506 = func_1525_call()
call_3507 = func_1525_call()
output = relay.Tuple([call_3498,call_3504,call_3506,])
output2 = relay.Tuple([call_3499,call_3505,call_3507,])
func_3510 = relay.Function([], output)
mod['func_3510'] = func_3510
mod = relay.transform.InferType()(mod)
output = func_3510()
func_3511 = relay.Function([], output)
mutated_mod['func_3511'] = func_3511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2928_call = mod.get_global_var('func_2928')
func_2929_call = mutated_mod.get_global_var('func_2929')
call_3512 = relay.TupleGetItem(func_2928_call(), 0)
call_3513 = relay.TupleGetItem(func_2929_call(), 0)
func_1437_call = mod.get_global_var('func_1437')
func_1439_call = mutated_mod.get_global_var('func_1439')
call_3514 = relay.TupleGetItem(func_1437_call(relay.reshape(call_3512.astype('float64'), [135,])), 0)
call_3515 = relay.TupleGetItem(func_1439_call(relay.reshape(call_3512.astype('float64'), [135,])), 0)
output = relay.Tuple([call_3512,call_3514,])
output2 = relay.Tuple([call_3513,call_3515,])
func_3526 = relay.Function([], output)
mod['func_3526'] = func_3526
mod = relay.transform.InferType()(mod)
output = func_3526()
func_3527 = relay.Function([], output)
mutated_mod['func_3527'] = func_3527
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3543 = relay.var("var_3543", dtype = "uint32", shape = (15, 10, 16))#candidate|3543|(15, 10, 16)|var|uint32
var_3544 = relay.var("var_3544", dtype = "uint32", shape = (15, 10, 16))#candidate|3544|(15, 10, 16)|var|uint32
bop_3545 = relay.less(var_3543.astype('bool'), relay.reshape(var_3544.astype('bool'), relay.shape_of(var_3543))) # shape=(15, 10, 16)
func_1100_call = mod.get_global_var('func_1100')
func_1102_call = mutated_mod.get_global_var('func_1102')
call_3566 = relay.TupleGetItem(func_1100_call(), 1)
call_3567 = relay.TupleGetItem(func_1102_call(), 1)
func_3241_call = mod.get_global_var('func_3241')
func_3243_call = mutated_mod.get_global_var('func_3243')
call_3568 = relay.TupleGetItem(func_3241_call(), 0)
call_3569 = relay.TupleGetItem(func_3243_call(), 0)
func_2188_call = mod.get_global_var('func_2188')
func_2190_call = mutated_mod.get_global_var('func_2190')
call_3573 = func_2188_call()
call_3574 = func_2188_call()
output = relay.Tuple([bop_3545,call_3566,call_3568,call_3573,])
output2 = relay.Tuple([bop_3545,call_3567,call_3569,call_3574,])
func_3578 = relay.Function([var_3543,var_3544,], output)
mod['func_3578'] = func_3578
mod = relay.transform.InferType()(mod)
mutated_mod['func_3578'] = func_3578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3578_call = mutated_mod.get_global_var('func_3578')
var_3580 = relay.var("var_3580", dtype = "uint32", shape = (15, 10, 16))#candidate|3580|(15, 10, 16)|var|uint32
var_3581 = relay.var("var_3581", dtype = "uint32", shape = (15, 10, 16))#candidate|3581|(15, 10, 16)|var|uint32
call_3579 = func_3578_call(var_3580,var_3581,)
output = call_3579
func_3582 = relay.Function([var_3580,var_3581,], output)
mutated_mod['func_3582'] = func_3582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2928_call = mod.get_global_var('func_2928')
func_2929_call = mutated_mod.get_global_var('func_2929')
call_3632 = relay.TupleGetItem(func_2928_call(), 0)
call_3633 = relay.TupleGetItem(func_2929_call(), 0)
func_2712_call = mod.get_global_var('func_2712')
func_2717_call = mutated_mod.get_global_var('func_2717')
var_3640 = relay.var("var_3640", dtype = "uint8", shape = (990,))#candidate|3640|(990,)|var|uint8
const_3641 = relay.const([True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False,False,True,True,True,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,True,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,False,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,False,True,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,True,False,False,True,True,True,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,False,False,False,False,True,True,True,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,False,False,True,True,True,False,True,False,True,False,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,True,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,True,True,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,True,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,True,False,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False,False,True,False,False,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,False,True,False,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True,False,True,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,False,False,False,True], dtype = "bool")#candidate|3641|(2160,)|const|bool
call_3639 = relay.TupleGetItem(func_2712_call(relay.reshape(var_3640.astype('uint8'), [11, 10, 9]), relay.reshape(var_3640.astype('uint8'), [11, 10, 9]), relay.reshape(const_3641.astype('bool'), [1080, 2]), ), 1)
call_3642 = relay.TupleGetItem(func_2717_call(relay.reshape(var_3640.astype('uint8'), [11, 10, 9]), relay.reshape(var_3640.astype('uint8'), [11, 10, 9]), relay.reshape(const_3641.astype('bool'), [1080, 2]), ), 1)
output = relay.Tuple([call_3632,call_3639,var_3640,const_3641,])
output2 = relay.Tuple([call_3633,call_3642,var_3640,const_3641,])
func_3665 = relay.Function([var_3640,], output)
mod['func_3665'] = func_3665
mod = relay.transform.InferType()(mod)
var_3666 = relay.var("var_3666", dtype = "uint8", shape = (990,))#candidate|3666|(990,)|var|uint8
output = func_3665(var_3666)
func_3667 = relay.Function([var_3666], output)
mutated_mod['func_3667'] = func_3667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2760_call = mod.get_global_var('func_2760')
func_2762_call = mutated_mod.get_global_var('func_2762')
call_3680 = func_2760_call()
call_3681 = func_2760_call()
func_2789_call = mod.get_global_var('func_2789')
func_2791_call = mutated_mod.get_global_var('func_2791')
call_3687 = relay.TupleGetItem(func_2789_call(), 4)
call_3688 = relay.TupleGetItem(func_2791_call(), 4)
output = relay.Tuple([call_3680,call_3687,])
output2 = relay.Tuple([call_3681,call_3688,])
func_3695 = relay.Function([], output)
mod['func_3695'] = func_3695
mod = relay.transform.InferType()(mod)
output = func_3695()
func_3696 = relay.Function([], output)
mutated_mod['func_3696'] = func_3696
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3700 = relay.var("var_3700", dtype = "int16", shape = (12, 11, 10))#candidate|3700|(12, 11, 10)|var|int16
var_3701 = relay.var("var_3701", dtype = "int16", shape = (12, 11, 10))#candidate|3701|(12, 11, 10)|var|int16
bop_3702 = relay.less_equal(var_3700.astype('bool'), relay.reshape(var_3701.astype('bool'), relay.shape_of(var_3700))) # shape=(12, 11, 10)
func_1928_call = mod.get_global_var('func_1928')
func_1932_call = mutated_mod.get_global_var('func_1932')
const_3722 = relay.const([-1.361337,-6.809775,9.909769], dtype = "float64")#candidate|3722|(3,)|const|float64
const_3723 = relay.const([[1.591385,-9.419966,3.003604,-4.331564,5.314345,-1.382713,7.320878,-9.640794,5.427089],[-6.202076,0.829173,5.304505,-5.116109,2.535815,-9.677348,-8.479800,9.360969,-2.288348],[-0.963626,-5.861035,-0.488364,-3.511942,-0.480245,-5.530954,6.773025,5.955928,8.608162],[5.549020,5.079853,-5.520700,1.046639,-8.938066,-4.618026,5.420341,8.998184,-0.899755],[-7.673361,5.555998,-1.072170,-0.526970,6.982882,-1.917034,-5.351946,-1.542846,-7.103068],[-2.031180,-4.966458,-2.707498,1.481392,8.061923,6.718342,-3.411711,-2.176443,-3.647534],[0.304713,-4.160136,-6.729471,2.183752,3.119338,4.590709,-6.370276,5.792553,-5.941472],[7.334634,6.714283,-7.247076,5.498692,-8.940067,0.312615,-8.823053,5.820199,0.649173],[1.852224,2.367988,-8.164574,-7.713851,-9.078006,3.058598,-4.569389,-7.288842,4.530701],[-2.616437,8.610907,3.675404,-0.248527,4.312186,-1.943648,7.297305,4.983181,-9.433426],[1.600653,-6.911532,-4.840939,-3.966254,2.121305,-1.873490,-4.506559,7.413544,7.878811],[-9.588686,-0.216127,-6.707277,-7.138193,-7.540085,-8.922424,4.598518,6.460335,6.544118],[-6.620216,-6.131969,-0.927994,-0.072716,-6.300604,-6.988108,-6.835430,4.730576,-0.187937],[-4.534781,4.447557,-5.397950,6.602216,-0.259208,3.531428,1.890454,4.746053,2.889633],[-5.376647,-2.730296,7.762807,7.284111,1.468458,-2.493420,-6.166398,-2.760490,7.957997],[2.684151,8.520364,-8.640715,5.696757,-4.011353,5.653559,-6.607334,1.725994,-3.215029],[4.261307,6.495674,-8.051631,-6.431713,-1.899146,0.106799,7.077136,-3.865627,-5.911462],[8.155115,-1.497999,-4.719860,-1.431758,-4.481578,-3.978705,-7.283435,-0.690637,-4.529104],[-9.015285,9.551661,-6.534132,-1.686153,3.501495,-1.138384,8.668654,1.560645,9.648112],[-6.147543,-0.949300,1.320585,1.629293,-0.394267,9.686071,2.415663,9.582391,-1.455973],[8.802966,0.359651,-8.621519,-2.450095,8.300973,9.877165,9.305811,-9.259229,-1.772517],[-1.809383,-2.747038,8.806882,-2.450793,2.612621,0.555690,4.033936,-7.773977,1.153119],[-9.065821,2.494347,1.868106,-8.978949,-6.498557,-8.206309,-4.277246,-0.529797,0.766554],[8.519273,-5.226474,0.799658,-7.916143,-5.945303,1.470677,5.877393,5.567504,-9.158401],[-0.981672,-1.384005,2.708575,4.641950,4.373912,-6.850668,-1.276572,-6.676535,-9.435065],[-2.586619,-2.706138,-1.598370,2.548152,3.016753,-4.739467,1.302396,-7.711883,3.539195],[8.564686,-7.253899,-4.521804,2.807458,-5.288788,-9.891249,-2.616228,1.500631,1.783973]], dtype = "float64")#candidate|3723|(27, 9)|const|float64
call_3721 = relay.TupleGetItem(func_1928_call(relay.reshape(const_3722.astype('float64'), [1, 1, 3]), relay.reshape(const_3723.astype('float64'), [9, 9, 3]), ), 2)
call_3724 = relay.TupleGetItem(func_1932_call(relay.reshape(const_3722.astype('float64'), [1, 1, 3]), relay.reshape(const_3723.astype('float64'), [9, 9, 3]), ), 2)
output = relay.Tuple([bop_3702,call_3721,const_3722,const_3723,])
output2 = relay.Tuple([bop_3702,call_3724,const_3722,const_3723,])
func_3729 = relay.Function([var_3700,var_3701,], output)
mod['func_3729'] = func_3729
mod = relay.transform.InferType()(mod)
mutated_mod['func_3729'] = func_3729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3729_call = mutated_mod.get_global_var('func_3729')
var_3731 = relay.var("var_3731", dtype = "int16", shape = (12, 11, 10))#candidate|3731|(12, 11, 10)|var|int16
var_3732 = relay.var("var_3732", dtype = "int16", shape = (12, 11, 10))#candidate|3732|(12, 11, 10)|var|int16
call_3730 = func_3729_call(var_3731,var_3732,)
output = call_3730
func_3733 = relay.Function([var_3731,var_3732,], output)
mutated_mod['func_3733'] = func_3733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_3738 = relay.TupleGetItem(func_1370_call(), 0)
call_3739 = relay.TupleGetItem(func_1372_call(), 0)
func_3241_call = mod.get_global_var('func_3241')
func_3243_call = mutated_mod.get_global_var('func_3243')
call_3741 = relay.TupleGetItem(func_3241_call(), 0)
call_3742 = relay.TupleGetItem(func_3243_call(), 0)
uop_3746 = relay.tan(call_3738.astype('float32')) # shape=(9, 9, 11)
uop_3748 = relay.tan(call_3739.astype('float32')) # shape=(9, 9, 11)
output = relay.Tuple([call_3741,uop_3746,])
output2 = relay.Tuple([call_3742,uop_3748,])
func_3749 = relay.Function([], output)
mod['func_3749'] = func_3749
mod = relay.transform.InferType()(mod)
mutated_mod['func_3749'] = func_3749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3749_call = mutated_mod.get_global_var('func_3749')
call_3750 = func_3749_call()
output = call_3750
func_3751 = relay.Function([], output)
mutated_mod['func_3751'] = func_3751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2390_call = mod.get_global_var('func_2390')
func_2391_call = mutated_mod.get_global_var('func_2391')
call_3849 = relay.TupleGetItem(func_2390_call(), 3)
call_3850 = relay.TupleGetItem(func_2391_call(), 3)
output = relay.Tuple([call_3849,])
output2 = relay.Tuple([call_3850,])
func_3859 = relay.Function([], output)
mod['func_3859'] = func_3859
mod = relay.transform.InferType()(mod)
mutated_mod['func_3859'] = func_3859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3859_call = mutated_mod.get_global_var('func_3859')
call_3860 = func_3859_call()
output = call_3860
func_3861 = relay.Function([], output)
mutated_mod['func_3861'] = func_3861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1525_call = mod.get_global_var('func_1525')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_3902 = func_1525_call()
call_3903 = func_1525_call()
func_2659_call = mod.get_global_var('func_2659')
func_2663_call = mutated_mod.get_global_var('func_2663')
var_3918 = relay.var("var_3918", dtype = "int32", shape = (891,))#candidate|3918|(891,)|var|int32
var_3919 = relay.var("var_3919", dtype = "float32", shape = (960,))#candidate|3919|(960,)|var|float32
call_3917 = relay.TupleGetItem(func_2659_call(relay.reshape(var_3918.astype('int32'), [9, 9, 11]), relay.reshape(call_3902.astype('float64'), [2160,]), relay.reshape(var_3919.astype('float32'), [960,]), ), 0)
call_3920 = relay.TupleGetItem(func_2663_call(relay.reshape(var_3918.astype('int32'), [9, 9, 11]), relay.reshape(call_3902.astype('float64'), [2160,]), relay.reshape(var_3919.astype('float32'), [960,]), ), 0)
uop_3949 = relay.acos(var_3918.astype('float32')) # shape=(891,)
func_3110_call = mod.get_global_var('func_3110')
func_3112_call = mutated_mod.get_global_var('func_3112')
call_3954 = relay.TupleGetItem(func_3110_call(relay.reshape(call_3902.astype('float32'), [180, 12])), 0)
call_3955 = relay.TupleGetItem(func_3112_call(relay.reshape(call_3902.astype('float32'), [180, 12])), 0)
func_737_call = mod.get_global_var('func_737')
func_740_call = mutated_mod.get_global_var('func_740')
var_3957 = relay.var("var_3957", dtype = "float64", shape = (1092,))#candidate|3957|(1092,)|var|float64
call_3956 = func_737_call(relay.reshape(var_3957.astype('float64'), [13, 6, 14]))
call_3958 = func_737_call(relay.reshape(var_3957.astype('float64'), [13, 6, 14]))
output = relay.Tuple([call_3902,call_3917,var_3919,uop_3949,call_3954,call_3956,var_3957,])
output2 = relay.Tuple([call_3903,call_3920,var_3919,uop_3949,call_3955,call_3958,var_3957,])
func_3964 = relay.Function([var_3918,var_3919,var_3957,], output)
mod['func_3964'] = func_3964
mod = relay.transform.InferType()(mod)
var_3965 = relay.var("var_3965", dtype = "int32", shape = (891,))#candidate|3965|(891,)|var|int32
var_3966 = relay.var("var_3966", dtype = "float32", shape = (960,))#candidate|3966|(960,)|var|float32
var_3967 = relay.var("var_3967", dtype = "float64", shape = (1092,))#candidate|3967|(1092,)|var|float64
output = func_3964(var_3965,var_3966,var_3967,)
func_3968 = relay.Function([var_3965,var_3966,var_3967,], output)
mutated_mod['func_3968'] = func_3968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2760_call = mod.get_global_var('func_2760')
func_2762_call = mutated_mod.get_global_var('func_2762')
call_3974 = func_2760_call()
call_3975 = func_2760_call()
output = call_3974
output2 = call_3975
func_3986 = relay.Function([], output)
mod['func_3986'] = func_3986
mod = relay.transform.InferType()(mod)
mutated_mod['func_3986'] = func_3986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3986_call = mutated_mod.get_global_var('func_3986')
call_3987 = func_3986_call()
output = call_3987
func_3988 = relay.Function([], output)
mutated_mod['func_3988'] = func_3988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3986_call = mod.get_global_var('func_3986')
func_3988_call = mutated_mod.get_global_var('func_3988')
call_3992 = func_3986_call()
call_3993 = func_3986_call()
output = relay.Tuple([call_3992,])
output2 = relay.Tuple([call_3993,])
func_4000 = relay.Function([], output)
mod['func_4000'] = func_4000
mod = relay.transform.InferType()(mod)
output = func_4000()
func_4001 = relay.Function([], output)
mutated_mod['func_4001'] = func_4001
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4040 = relay.var("var_4040", dtype = "float64", shape = (10, 4, 3))#candidate|4040|(10, 4, 3)|var|float64
uop_4041 = relay.asinh(var_4040.astype('float64')) # shape=(10, 4, 3)
output = uop_4041
output2 = uop_4041
func_4043 = relay.Function([var_4040,], output)
mod['func_4043'] = func_4043
mod = relay.transform.InferType()(mod)
mutated_mod['func_4043'] = func_4043
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4044 = relay.var("var_4044", dtype = "float64", shape = (10, 4, 3))#candidate|4044|(10, 4, 3)|var|float64
func_4043_call = mutated_mod.get_global_var('func_4043')
call_4045 = func_4043_call(var_4044)
output = call_4045
func_4046 = relay.Function([var_4044], output)
mutated_mod['func_4046'] = func_4046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3526_call = mod.get_global_var('func_3526')
func_3527_call = mutated_mod.get_global_var('func_3527')
call_4048 = relay.TupleGetItem(func_3526_call(), 0)
call_4049 = relay.TupleGetItem(func_3527_call(), 0)
output = call_4048
output2 = call_4049
func_4056 = relay.Function([], output)
mod['func_4056'] = func_4056
mod = relay.transform.InferType()(mod)
mutated_mod['func_4056'] = func_4056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4056_call = mutated_mod.get_global_var('func_4056')
call_4057 = func_4056_call()
output = call_4057
func_4058 = relay.Function([], output)
mutated_mod['func_4058'] = func_4058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3695_call = mod.get_global_var('func_3695')
func_3696_call = mutated_mod.get_global_var('func_3696')
call_4059 = relay.TupleGetItem(func_3695_call(), 0)
call_4060 = relay.TupleGetItem(func_3696_call(), 0)
output = call_4059
output2 = call_4060
func_4061 = relay.Function([], output)
mod['func_4061'] = func_4061
mod = relay.transform.InferType()(mod)
output = func_4061()
func_4062 = relay.Function([], output)
mutated_mod['func_4062'] = func_4062
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4103 = relay.var("var_4103", dtype = "float64", shape = ())#candidate|4103|()|var|float64
var_4104 = relay.var("var_4104", dtype = "float64", shape = (6, 4, 11))#candidate|4104|(6, 4, 11)|var|float64
bop_4105 = relay.greater(var_4103.astype('bool'), var_4104.astype('bool')) # shape=(6, 4, 11)
output = bop_4105
output2 = bop_4105
func_4112 = relay.Function([var_4103,var_4104,], output)
mod['func_4112'] = func_4112
mod = relay.transform.InferType()(mod)
var_4113 = relay.var("var_4113", dtype = "float64", shape = ())#candidate|4113|()|var|float64
var_4114 = relay.var("var_4114", dtype = "float64", shape = (6, 4, 11))#candidate|4114|(6, 4, 11)|var|float64
output = func_4112(var_4113,var_4114,)
func_4115 = relay.Function([var_4113,var_4114,], output)
mutated_mod['func_4115'] = func_4115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3510_call = mod.get_global_var('func_3510')
func_3511_call = mutated_mod.get_global_var('func_3511')
call_4117 = relay.TupleGetItem(func_3510_call(), 1)
call_4118 = relay.TupleGetItem(func_3511_call(), 1)
func_3578_call = mod.get_global_var('func_3578')
func_3582_call = mutated_mod.get_global_var('func_3582')
const_4129 = relay.const([6,-1,-4,3,8,4,4,10,8,5,10,9,1,-1,-4,1,6,5,6,-1,-7,-4,8,-2,6,8,1,-3,-7,7,7,-3,8,4,7,8,-10,-4,-6,7,-4,-7,-2,9,-5,5,4,4,6,-6,3,7,-6,-4,-7,-4,5,8,-4,-1,5,10,1,-1,-3,-2,-3,-4,1,-1,10,-1,-9,-4,-8,-1,-8,4,6,-8,4,-5,-8,6,-8,8,-6,-1,-8,9,10,2,-10,7,2,3,3,5,-1,-1,-1,5,7,-4,2,2,-1,10,-1,-7,2,10,-2,-7,7,-9,6,-6,1,10,1,-5,-6,-6,-2,9,3,-9,4,7,5,-10,2,-6,3,-6,7,9,-8,10,7,4,-1,-6,-1,8,9,-7,-1,-3,8,-1,5,-10,-4,-3,-2,-1,-1,9,10,-6,-5,-9,7,-5,3,3,7,-1,4,1,2,-10,-9,-5,-8,7,5,2,-7,-10,-4,-8,-4,1,4,5,-4,-1,4,3,6,-5,-7,4,5,-6,-8,-7,5,2,10,5,2,10,-9,-8,-4,-7,-2,-6,-6,-4,-9,7,-1,-1,-8,-6,2,6,10,8,9,-8,8,-7,-8,-9,2,-1,8,-3,-10,-5,-6,6,7,1,-1,8,-2,-4,-4,9,2,8,-2,4,-1,-4,4,-4,-4,-8,5,-4,10,9,-2,1,-8,2,1,10,9,-10,6,5,-8,-4,-10,2,-6,-4,-9,10,4,-7,-2,-9,-3,-3,1,-8,2,6,10,-9,-8,5,-6,5,9,-6,-9,1,4,-10,3,-5,-7,6,-8,-4,-8,4,-3,5,-2,-2,-8,2,8,-6,-7,-7,-4,4,8,8,6,-1,2,-3,-8,5,10,7,-9,-1,6,5,-1,-1,8,6,-3,4,-4,2,-2,2,-4,9,2,4,-8,-9,9,-1,-9,-2,5,-10,5,-2,6,-8,-3,-8,9,-4,-2,-7,10,9,-4,-4,8,-9,-5,-9,-5,5,-6,-4,6,3,10,10,-7,-1,-9,1,2,-10,10,-8,-8,4,8,8,-7,-2,10,-7,3,9,7,-9,9,6,9,-4,-8,1,-8,8,2,10,-3,3,7,8,-4,-2,8,-2,-1,4,-7,-5,-5,-10,-4,3,9,3,-7,-1,8,4,3,-3,-2,-6,-3,4,4,7,6,5,-5,1,-9,-3,-10,-5,4,-7,-6,-5,-2,6,-5,-3,-10,-6,7,7,4,3,8,4,7,-8,4,9,-6,-3,-6,2,5,3,7,-5,3,-4,-9,2,-2,6,-8,4,-10,5,-3,3,6,9,-7,6,-6,10,-9,-9,5,-6,10,6,-7,5,-7,8,-4,9,-3,1,5,3,6,-4,-7,5,-10,-7,-2,-7,-9,-6,-3,-6,2,-6,-1,-3,-10,1,9,7,8,6,-4,-3,-1,-10,4,1,-5,6,-7,-6,-8,-6,-4,-8,-7,-4,-9,-8,6,5,3,-7,-4,-6,-2,7,9,8,-8,-6,1,6,7,-10,-1,2,-2,2,-3,-8,3,6,-1,-7,-9,2,5,1,3,4,8,-7,6,-10,-10,-6,6,-6,4,-5,-6,-6,8,-2,9,-2,1,-1,1,-8,10,3,-3,2,-2,-4,-6,1,8,-5,-9,-5,-8,-1,-10,7,2,7,-1,-7,-7,-3,-1,-9,8,-7,-10,-9,-1,-7,-7,2,-6,-7,7,2,-4,9,1,-4,1,-6,-6,-9,-5,-9,-1,-4,-9,8,4,9,6,5,5,8,3,-7,1,7,4,-10,6,-6,6,8,-3,-10,-5,6,-4,-8,-10,-5,2,-7,-5,-5,-1,-5,-4,-7,-10,-6,1,6,8,-10,8,-7,7,-9,1,3,-5,-10,-1,-6,5,-7,5,10,7,10,-7,-8,-3,7,2,-7,-10,8,4,-2,7,5,-5,5,-7,9,-4,-8,-5,10,-9,-4,3,-10,-7,6,-4,-6,-6,-10,6,6,-8,6,3,9,-4,-9,-9,4,1,-10,10,3,4,8,-5,-1,-1,4,-4,6,-10,-5,-3,-2,8,9,-7,4,8,-3,-6,-5,3,3,-6,5,3,2,-8,2,10,4,4,1,7,6,-10,4,-10,-1,5,2,-6,6,3,-10,9,-8,-1,6,5,-3,3,-6,-4,1,3,-9,-10,-10,3,3,3,7,-2,-2,-7,2,2,-4,7,6,-9,-8,10,-1,10,-4,-9,9,-6,-10,7,4,2,-6,3,10,6,2,-5,-8,-9,10,-5,-9,9,5,-1,-5,-7,3,-2,-6,10,4,-3,2,5,7,-10,-1,8,-5,5,4,-3,-5,-2,3,1,7,10,-5,3,4,-10,2,-1,9,-9,1,1,-6,9,5,7,-3,3,-1,-9,10,2,-9,1,2,-10,3,-10,-4,-8,-10,-3,3,2,4,1,-3,6,-7,-8,10,-9,-9,9,10,4,-4,3,-5,-1,6,-3,-6,-1,-9,-9,8,9,9,-3,-7,6,-4,-9,4,7,6,1,2,-3,2,7,10,-9,8,-7,-9,-6,-2,3,9,-7,4,4,-1,-5,9,-5,2,9,8,-4,-8,1,9,7,-5,-10,-2,5,3,8,-3,-2,-9,-4,-4,-3,1,2,7,6,6,3,4,3,7,9,4,-7,-10,-9,9,9,-5,10,2,8,-5,6,-6,-7,10,-2,-7,9,-10,-4,-10,1,-3,9,-10,-3,-7,-4,-10,7,5,6,8,9,-4,9,5,-9,-4,6,-7,-6,-2,9,-1,5,6,8,-7,-2,-2,-4,2,7,-4,-9,-4,5,-7,-9,1,-4,5,10,1,-4,-4,9,-2,1,9,-6,5,10,-6,-8,-5,5,-4,-4,7,-7,-8,7,5,5,8,-9,-5,-4,-2,-9,7,-6,8,-8,-10,6,-3,8,-2,4,-6,-2,-5,-1,9,3,5,6,1,-8,1,9,-8,-4,1,10,-2,-8,9,2,-3,-5,-4,2,7,6,-4,3,-1,-2,-6,10,5,5,-1,-3,3,3,-8,-5,-2,4,6,-10,6,-7,-6,-2,-7,6,-5,-2,-8,-8,-7,3,3,-9,-5,-6,-3,-5,2,-2,6,6,-9,-4,3,-3,-4,-4,-2,-8,2,-9,-8,3,-4,8,-3,5,-3,8,10,8,6,3,-3,-6,-6,1,1,-4,9,9,4,-5,-3,-3,-4,7,3,9,-2,2,-10,-1,-6,-8,-5,-8,-10,-8,-6,4,-3,10,-10,1,-4,9,7,6,5,8,-2,-10,9,-3,-10,3,-9,-7,-1,-10,-5,-10,-9,6,2,-3,-2,7,1,-4,-9,4,1,-7,-2,-7,6,-9,-4,8,-1,-2,-3,4,-9,7,-7,-7,2,1,3,-1,3,-5,-5,5,-3,8,-4,-2,-1,4,-7,6,-7,3,3,2,-2,-5,1,4,6,1,-4,-6,1,-3,-3,8,-6,-3,-5,-8,-3,7,-4,-7,2,-4,-3,1,2,-2,5,-6,-5,3,-1,8,-4,7,3,-10,-4,-1,-7,-10,-6,-2,6,-3,7,10,7,-4,-2,-10,-7,-10,-7,9,-3,10,3,2,2,-2,-3,8,2,-10,-3,9,-1,10,-2,-1,-7,-6,-5,-4,8,-7,-10,-9,-7,7,1,7,-7,-9,5,7,3,4,4,6,-4,2,-7,6,-2,-3,1,5,8,-10,-6,-7,-10,6,9,-5,4,-8,-8,3,7,3,6,7,-3,-9,2,5,-6,-6,-10,9,8,-5,2,-6,-5,-9,8,7,3,-10,1,-8,6,-4,-5,-2,-10,9,4,3,8,-2,-7,8,4,-8,-3,6,2,-8,4,-2,-7,-8,-8,-2,-4,5,-1,3,2,2,10,5,-9,9,-4,-10,1,2,1,-8,-6,6,7,-5,-5,-4,-7,6,-3,9,-5,-8,9,8,4,4,-10,-9,2,-5,3,1,-8,5,-2,-1,-5,3,-7,-1,6,2,8,4,5,8,-9,-9,-3,-10,-1,2,-10,-8,-4,9,-6,10,10,5,-3,5,-9,-9,-9,9,-2,3,-6,10,-2,1,-7,4,-3,5,2,-8,-4,-5,-7,-10,7,-2,6,2,8,8,2,-5,2,3,-9,5,7,6,-8,5,-10,10,-9,-4,6,4,-5,-5,10,1,8,-3,-7,10,-5,-3,-2,-1,-5,-9,8,-9,2,-9,1,-2,-5,-5,-5,-2,-10,5,7,-4,-4,3,6,-4,5,3,-5,-6,-3,5,-6,8,3,9,-1,4,7,7,9,-4,-7,4,-5,2,-3,-3,7,6,-5,10,9,-1,-3,-10,10,-1,-2,-8,-5,-2,-1,-9,6,-6,10,7,2,-4,6,1,9,-2,-5,7,-3,10,5,10,-5,-2,-4,4,7,-5,5,1,-6,-4,-5,2,-9,-2,2,-6,10,-3,9,4,-9,-10,-3,-8,-4,-1,-3,-9,-7,-9,-4,-7,-4,-1,-2,-10,-4,-5,1,-7,6,-6,-2,3,5,-8,6,-3,10,3,1,-2,4,-1,3,-2,7,-9,-4,-8,-6,-7,-6,3,6,-7,-9,-1,8,-10,1,3,-1,-9,-7,-3,5,-5,10,-6,-6,-5,-4,10,8,5,3,7,10,-8,-5,10,-10,-1,-3,-9,2,1,-8,-7,2,-6,-10,8,1,7,-4,-5,9,5,7,-8,7,6,-4,-2,7,-9,2,-6,-3,8,9,-4,-1,2,-2,-8,4,4,7,2,3,10,1,6,-1,1,-10,-2,-3,-1,-7,-6,1,8,-6,-1,-4,-2,-8,-8,7,-1,-4,7,7,4,7,4,-2,7,3,-6,-10,9,-9,9,6,-4,-2,10,1,3,8,7,10,-5,-3,-7,9,2,-4,-5,-4,-3,-2,-8,-10,8,-10,5,8,-10,-3,5,-6,-4,-2,3,10,2,2,2,1,-10,-6,1,-9,6,-2,3,-9,-8,-8,5,-10,7,-7,4,8,2,-10,-9,-6,10,5,7,2,5,8,-5,8,-2,8,6,-1,1,1,-10,-4,-6,6,7,9,-6,-3,-7,3,-8,5,-9,2,8,2,10,-10,7,10,-4,5,5,-2,-10,2,-8,-2,1,-8,7,1,-6,-4,9,-8,-10,-4,2,9,-3,-2,6,-7,-9,-10,-5,-4,1,5,-1,-2,7,-7,-4,-2,7,-7,9,-2,8,-5,-2,-5,8,-1,-4,-9,3,-1,4,5,9,-6,5,-7,9,-8,-10,4,-3,-6,-9,10,-4,-8,-4,2,4,-2,-6,-6,10,6,6,-9,-6,-8,1,-7,-8,-3,-8,8,1,-3,-8,3,-2,9,10,1,-2,-1,6,5,-2,8,3,4,-5,-2,7,-2,-6,-8,-8,2,-9,-2,10,-9,-8,-4,3,7,-6,-1,-6,-1,4,9,-10,2,6,4,-5,-10,-2,-4,-2,-2,-1,3,-6,10,-6,1,-1,-7,9,3,-6,7,-7,10,-3,10,-5,-9,-9,-8,9,-3,4,-7,1,9,3,3,8,-1,-6,-2,6,-2,2,10,-1,10,-10,10,-9,7,6,1,-5,-4,-5,-4,8,6,7,-1,-6,6,10,-9,7,-10,-8,-9,-5,-6,7,-1,-7,9,10,4,1,-4,-6,-9,-9,-9,1,-1,-9,7,8,-5,5,-9,-3,3,-3,-6,-1,3,5,-10,10,-5,8,-6,-9,9,4,1,1,3,4,-4,-6,7,-10,10,-6,-8,-6,-1,5,1,2,-7,7,-8,9,5,8,7,-9,-6,1,-3,10,1,6,5,3,2,3,-2,9,-10,-3,4,5,1,6,10,-8,1,5,3,-1,-10,2,-9,-3,-9,-5,8,-3,-5,-1,-6,7,4,-3,-10,1,-9,3,-5,6,-3,-6,-2,-10,-9,1,1,-3,10,1,2,-1,4,-8,2,-2,8,6,7,6,-8,-1,7,-5,2,8,-7,-3,-2,-9,-9,-9,-6,-7,-2,9,4,-10,-4,1,-10,-7,7,-9,5,3,-8,-10,-9,9,4,3,8,10,-8,-9,9,5,-8,-4,2,-6,4,-9,5,-4,6,6,1,-7,8,-7,-1,-4,9,-1,-7,-5,3,4,10,6,7,9,9,-7,1,3,-10,-3,6,4,-3,4,1,-3,-8,-6,-2,-3,2,-9,7,6,-10,8,5,7,9,3,3,-10,8,6,-10,10,-10,-6,10,4,-3,5,-4,-7,6,-2,9,-10,5,-6,4,8,6,10,-8,-7,7,-10,-4,4,8,-1,-8,-3,-8,2,6,5,-4,9,9,4,7,9,-2,3,10,4,-6,1,-5,-5,2,4,-5,1,-8,-4,-10,8,5,-9,-7,3,1,7,-8,10,4,-10,-4,5,-6,9,-3,8,-10,4,-2,-3,2,3,-4,-2,5,-7,2,3,2,-4,8,-2,-10,6,-3,7,8,-7,-4,-9,10,-10,-8,10,4], dtype = "uint32")#candidate|4129|(2400,)|const|uint32
call_4128 = relay.TupleGetItem(func_3578_call(relay.reshape(const_4129.astype('uint32'), [15, 10, 16]), relay.reshape(const_4129.astype('uint32'), [15, 10, 16]), ), 3)
call_4130 = relay.TupleGetItem(func_3582_call(relay.reshape(const_4129.astype('uint32'), [15, 10, 16]), relay.reshape(const_4129.astype('uint32'), [15, 10, 16]), ), 3)
output = relay.Tuple([call_4117,call_4128,const_4129,])
output2 = relay.Tuple([call_4118,call_4130,const_4129,])
func_4132 = relay.Function([], output)
mod['func_4132'] = func_4132
mod = relay.transform.InferType()(mod)
mutated_mod['func_4132'] = func_4132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4132_call = mutated_mod.get_global_var('func_4132')
call_4133 = func_4132_call()
output = call_4133
func_4134 = relay.Function([], output)
mutated_mod['func_4134'] = func_4134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3526_call = mod.get_global_var('func_3526')
func_3527_call = mutated_mod.get_global_var('func_3527')
call_4150 = relay.TupleGetItem(func_3526_call(), 0)
call_4151 = relay.TupleGetItem(func_3527_call(), 0)
output = call_4150
output2 = call_4151
func_4159 = relay.Function([], output)
mod['func_4159'] = func_4159
mod = relay.transform.InferType()(mod)
output = func_4159()
func_4160 = relay.Function([], output)
mutated_mod['func_4160'] = func_4160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_4163 = func_1253_call()
call_4164 = func_1253_call()
func_1309_call = mod.get_global_var('func_1309')
func_1312_call = mutated_mod.get_global_var('func_1312')
const_4168 = relay.const([[-3.961065],[5.212441],[-5.156468],[3.876742],[-1.894299],[4.369389],[9.647363],[6.157792],[-8.831215],[-1.808791],[8.572548],[0.768759],[-9.270771],[8.438955],[0.711218],[-3.125669],[-0.423767],[-2.452414],[4.078330],[-4.834325],[-4.666586],[-6.276639],[2.386731],[4.874931],[5.404383],[-8.916919],[2.187657],[-8.073391],[-2.930176],[2.888070],[-3.503038],[-5.232340],[4.000345],[3.829302],[-1.335875],[3.929211],[1.414886],[-7.092368],[8.378920],[-8.503632],[5.160639],[8.643285],[9.516068],[-3.877915],[2.533188],[6.113692],[6.778727],[-7.866316],[1.759428],[-8.220068],[-9.599202],[-6.017926],[3.843931],[-8.542112],[-6.936757],[7.525877],[6.501813],[-6.280741],[-2.459470],[6.910313],[-6.849661],[7.492972],[-1.251808],[1.123943],[6.440379],[3.229503],[8.680698],[6.581712],[-9.476044],[2.914253],[7.464817],[9.179861],[6.451888],[2.383957],[-5.431875],[-3.547246],[8.183307],[9.311647],[8.533474],[9.261613],[-7.331699],[-6.033468],[-8.033847],[-1.707009],[8.707259],[4.322334],[2.036565],[-6.518781],[5.145551],[-6.719408],[-4.700867],[-7.800506],[6.607639],[9.311429],[-2.386152],[0.810184],[2.614553],[-0.030856],[-1.093382],[-0.865027],[-9.436868],[-8.541684],[-9.194512],[6.570143],[-7.848890],[-3.032252],[-8.852326],[-8.793404],[-9.536828],[-5.594320],[6.758005],[6.600331],[-1.763683],[-1.348990],[-7.590778],[-8.830819],[4.613282],[-8.377481],[6.164596],[0.123522],[-0.639976],[-8.671445],[-6.812512],[-3.429369],[-4.577900],[-0.392675],[-4.468829],[-7.100976],[1.634225],[2.905022],[-7.880374],[5.446718],[-9.959636],[3.338029],[5.601983],[3.276430],[-6.731572],[-5.952092],[9.809349],[5.117480],[6.011894],[6.631836],[1.664388],[-6.217684],[-6.682752],[1.348887],[-7.194137],[-5.834910],[-5.957709],[-0.021272],[-5.203525],[6.031501],[-6.435158],[-1.130733],[-7.377999],[7.870006],[0.043012],[-1.160322],[8.216671],[3.123498],[-3.624174],[-4.869905],[9.685980],[-9.447809],[-9.442502],[2.382102],[-0.274801],[-8.086187],[-0.816798],[-7.801632],[-7.655334],[2.330497],[-0.468448],[5.226778],[-7.775811],[-3.292435],[0.688721],[9.216571],[6.267116],[-7.764526],[3.914361],[7.947849],[4.984386],[-4.810488],[-9.002127],[-0.947163],[-0.347920],[-1.567692],[4.747089],[-1.956695],[-2.728652],[5.615082],[6.356763],[7.901376],[-1.126980],[6.508887],[6.541924],[3.021071],[-1.443240],[4.488446],[4.410116],[0.807932],[2.873316],[-6.980098],[3.650445],[-2.425734],[7.561661],[3.328118],[5.793846],[-3.479035],[8.390119],[5.725610],[-3.813947],[3.644913],[-6.360689],[4.438936],[-5.398749],[6.418954],[-4.168722],[8.647919],[7.904023],[8.365374],[5.231392],[7.175593],[1.073786],[-9.334112],[2.593595],[-8.633549],[-6.685919],[-4.635534],[-9.781012],[-5.317207],[4.242052],[-0.611206],[-8.946988],[8.527361],[2.913683],[-8.585666],[-3.924326],[5.477833],[3.613409],[-5.497095],[2.770386],[-1.948968],[-1.241550],[-5.805459],[-3.255848],[9.644751],[5.427942],[8.770188],[8.836867],[8.381819],[-5.716057],[1.491196],[1.949462],[-0.193589],[-0.329277],[-8.140997],[0.919629],[-2.948598],[2.741847],[-6.047638],[9.733580],[7.559791],[8.309226],[-1.989935],[-1.967883],[-0.015406],[-5.781721],[1.862350],[-0.991672],[-1.699837],[-2.587100],[0.130577],[-7.385757],[5.107669],[-3.621435],[9.364007],[6.859190],[-9.860801],[-0.347198],[-3.592621],[-9.414509],[0.424311],[-3.969940],[5.416323],[-4.236711],[-2.355682],[-8.928895],[1.724760],[9.300819],[-7.428327],[-6.342797],[4.879066],[0.291704],[1.874275],[1.423803],[-0.455565],[-9.044593],[-2.818207],[-5.067871],[3.464981],[7.921593],[9.721217],[2.947249],[-1.526919],[4.857279],[3.728590],[2.267406],[3.476307],[-6.499857],[-7.237697],[-4.649981],[-3.733857],[-8.533849],[-3.132359],[-1.838972],[7.395750],[4.890013],[9.573918],[6.125878],[6.538695],[-8.098129],[7.247156],[3.371957],[-7.387250],[0.046175],[5.169468],[2.814142],[-0.836670],[-1.389872],[-2.707224],[-3.925976],[5.788939],[-1.372209],[2.400759],[-9.723070],[-2.675766],[7.277313],[-4.768419],[0.672794],[-8.126756],[3.429684],[-4.038364],[3.470600],[-9.644253],[6.005215],[-2.512357],[6.160668],[9.646694],[-7.764478],[9.619593],[4.257630],[-0.733759],[1.704226],[-3.653751],[1.228090],[9.946503],[-4.354406],[-3.852861],[-9.735073],[-2.879090],[4.800718],[-6.147735],[-3.375376],[5.539293],[-3.763244],[2.159801],[-7.444791],[-0.682539],[5.171275],[-0.168321],[8.459643],[7.795541],[-5.547782],[-6.236513],[3.570638],[-3.379210],[0.644116],[4.041666],[9.657601],[1.127559],[7.093347],[4.885370],[-7.475788],[-8.106337],[-9.757730],[-5.532283],[-7.782372],[-4.250274],[5.396429],[-5.842956],[5.871626],[-8.119848],[7.966536],[-7.536471],[-7.766032],[-2.643078],[-5.577538],[5.169268],[4.324236],[-2.964133],[5.171138],[9.936161],[8.494002],[-6.927751],[-5.380209],[8.792993],[9.007612],[1.894777],[1.051543],[1.773995],[5.343190],[4.003065],[-8.036073],[-7.253984],[-7.167004],[4.722246],[9.457402],[-7.263205],[-7.498845],[-1.427661],[4.980132],[-0.194730],[1.562757],[6.540001],[4.606518],[-1.624168],[-2.945774],[0.405520],[-0.800510],[-7.293571],[-1.322714],[-0.022775],[-9.090381],[-3.877327],[4.978105],[-4.833864],[-3.164989],[-5.407529],[-5.183372],[-1.618229],[-9.589587],[-1.089220],[5.384443],[8.429694],[3.912430],[-3.610073],[-2.218843],[0.463366],[0.508653],[0.376430],[-1.164864],[7.127171],[5.626819],[-7.258822],[1.782352],[0.492901],[8.780941],[-4.392640],[0.217547],[0.651558],[9.019646],[6.379779],[-7.777519],[0.771002],[-9.598466],[8.439845],[-3.479250],[-3.188071],[-8.483174],[9.757328],[8.927469],[1.226097],[-3.988557],[2.033020],[-8.790489],[-5.180508],[1.751588],[7.857799],[-8.282406],[1.737971],[0.934277],[-7.462307],[-7.191047],[8.149719],[5.563920],[-2.439187],[-0.506381],[-8.852856],[-5.662365],[-7.110543],[-1.863328],[-9.840122],[-1.673990],[2.056045],[-9.241077],[-9.743173],[2.569963],[4.536176],[9.213351],[-2.114072],[2.501522],[8.695766],[3.806325],[-1.745598],[-1.209159],[-0.718676],[1.715220],[-9.955849],[-6.140017],[0.539734],[-0.833866],[-8.936854],[-5.895259],[6.547266],[7.211763],[-5.376699],[8.577098],[-3.583068],[0.655490],[-8.399270],[1.345924],[-7.385888],[3.326330],[2.872437],[2.394433],[8.167010],[-6.298935],[8.627794],[7.953647],[-7.554150],[6.669144],[-1.671861],[-2.170489],[4.211085],[8.467863],[6.415246],[-4.060700],[-2.221961],[-5.998670],[1.809839],[-5.769096],[-4.996296],[-7.362375],[9.728437],[-4.413473],[-2.492509],[-5.458488],[-4.562675],[9.082416],[2.245320],[5.857209],[-9.768924],[-4.393314],[-1.533954],[-9.767759],[-3.760201],[-3.018518],[6.272803],[3.754447],[-1.819358],[-5.862985],[7.490032],[2.035412],[6.283295],[8.304283],[-5.037459],[-6.564843],[-8.126595],[7.659388],[2.319984],[-5.046416],[-7.909684],[-8.056088],[1.141704],[-3.007402],[-8.844438],[5.243212],[4.618684],[4.454905],[8.065373],[9.983617],[-7.597955],[-5.307351],[4.630352],[0.328460],[1.052825],[-3.715774],[-6.061894],[4.941027],[-3.307667],[0.168682],[-3.244116],[-4.457889],[-9.417242],[5.535389],[-7.068634],[5.859446],[-1.014869],[9.870366],[1.774270],[-2.652613],[-5.227461],[-2.782858],[-7.483169],[8.976002],[1.758125],[7.247153],[4.787192],[5.692257],[6.892442],[7.343758],[-2.239216],[-6.720132],[5.246311],[-3.009310],[-1.072894],[6.525538],[8.231895],[8.385108],[-8.410533],[2.433250],[-6.426242],[1.035954],[-4.961566],[9.327079],[0.404049],[-1.542996],[2.885393],[-0.629829],[-9.756464],[0.848140],[-7.034585],[-7.969296],[-6.087522],[2.176441],[-3.884791],[-2.783118],[2.519891],[-3.829294],[-9.366953],[0.377644],[-4.067311],[4.842473],[4.407127],[-6.394506],[-0.077780],[-7.499650],[7.762765],[8.030308],[7.851100],[-0.382999],[5.598231],[-6.104322],[-4.027146],[-9.152436],[-5.966037],[4.486084],[8.233909],[-0.062472],[-8.191112],[3.644384],[-4.467978],[4.670374],[-8.476131],[4.553264],[7.039677],[9.452578],[-3.284082],[4.526066],[-1.298627],[2.541896],[-7.769924],[5.716309],[-6.865206],[-9.945577],[4.971757],[8.718029],[3.539658],[9.190919],[9.682947],[5.960602],[-3.779820],[6.927579],[-8.970912],[8.999783],[7.558650],[8.448886],[7.722969],[2.852510],[-9.123733],[7.827242],[2.203611],[6.596042],[4.858483],[-6.091829],[1.976299],[-7.935939],[-6.354508],[-8.600368],[-4.157012],[4.663689],[7.301712],[2.459625],[-1.113660],[-0.826569],[-6.828774],[-3.491525],[-0.724362],[1.872055],[-6.716772],[4.379701],[9.521448],[6.943939],[7.648233],[7.410374],[0.165032],[8.769035],[2.324314],[-0.805747],[-3.124552],[6.944128],[-3.381408],[-9.907603],[5.716079],[-1.891870],[-1.312100],[-7.371063],[8.885586],[8.786296],[2.473751],[2.193191],[-6.412104],[9.129896],[0.901142],[4.206534],[-1.422234],[8.292082],[-1.306805],[-5.850573],[2.067633],[5.886874],[-0.791802],[2.873054],[2.209016],[-9.503610],[1.871093],[8.983427],[7.727637],[-0.890069],[-9.877401],[-7.015632],[-6.068979],[1.479591],[3.009974],[-7.968985],[4.879241],[-6.202470],[5.901587],[7.381662],[4.640432],[-4.551960],[8.381064],[-8.174113],[-8.371972],[-3.881736],[-4.522886],[-8.715061],[-7.355963],[7.482551],[0.223111],[-8.862263],[8.059833],[-8.325767],[-1.730391],[5.646315],[4.780147],[0.785025],[4.091915],[3.315323],[-2.529583],[8.872622],[-3.131572],[6.843460],[1.177352],[1.717037],[-9.254384],[3.217466],[-1.400594],[9.032397],[-2.047956],[-8.609052],[-7.206577],[-9.573519],[6.821139],[9.278037],[0.138397],[-3.987049],[-2.732502],[-6.812868],[-3.626223],[-9.181483],[7.204561],[-6.161213],[5.376681],[9.814379],[-8.339202],[-0.177416],[8.612972],[4.250120],[-0.970281],[-7.362914],[0.106003],[-7.866076],[-2.375333],[1.494781],[-7.693556],[3.906811],[-3.508014],[9.314852],[0.714324],[0.356108],[7.578571],[-1.890802],[-9.355957],[3.331418],[9.501979],[2.856238],[2.038061],[-4.891805],[-5.022717],[-3.561005],[-8.439287],[6.118994],[-8.998863],[-2.795660],[8.714054],[7.347083],[2.095457],[5.825657],[5.508874],[3.323416],[-8.155472],[9.953009],[-2.191551],[6.029569],[-3.097671],[6.465137],[7.081769],[6.503759],[1.210037],[-0.076383],[5.501771],[2.303880],[0.777135],[-4.777002],[-4.110313],[1.889161],[-1.105108],[-2.539536],[1.074613],[-1.679479],[3.346451],[-7.118934],[-9.657609],[-7.808819],[0.961574],[-5.886748],[6.857994],[-4.950716],[-5.493856],[4.733722],[-6.013513],[1.329048],[-3.869345],[3.605208],[7.909930],[2.026473],[5.531822],[8.148920],[5.986148],[5.604647],[-5.032992],[2.545627],[-2.809038],[0.036810],[-4.470351],[2.068463],[1.245787],[-9.649510],[-3.995730],[7.426423],[5.150535],[-3.110433],[-1.848705],[-9.072353],[-8.922444],[9.062886],[9.493263],[-3.900288],[-8.182488],[-9.525687],[-0.078871],[4.731200],[-8.205628],[7.749325],[2.825892],[-7.991448],[4.420134],[7.160415],[-6.936008],[0.968416],[8.947606],[-4.823701],[5.740948],[-2.864760],[-4.447015],[9.767419],[-5.924510],[-3.390778],[-2.782390],[7.478984],[9.188000],[-5.843673],[4.487374],[-6.328695],[8.774503],[-6.373437],[-5.499367],[7.148086],[4.405762],[1.106529],[-2.602325],[-5.037331],[8.207902],[6.719574],[9.002152],[7.982883],[-7.923549],[2.772966],[2.880265],[2.145828],[-8.055616],[-1.457678],[-2.391619],[-2.010224],[0.459401],[8.507993],[-4.037422],[9.912181],[9.459486],[8.262763],[5.041428],[3.861957],[-3.514418],[8.658706],[-1.466723],[-9.323309],[-1.662545]], dtype = "float32")#candidate|4168|(960, 1)|const|float32
call_4167 = relay.TupleGetItem(func_1309_call(relay.reshape(const_4168.astype('float32'), [60, 16])), 1)
call_4169 = relay.TupleGetItem(func_1312_call(relay.reshape(const_4168.astype('float32'), [60, 16])), 1)
func_2345_call = mod.get_global_var('func_2345')
func_2346_call = mutated_mod.get_global_var('func_2346')
call_4183 = relay.TupleGetItem(func_2345_call(), 0)
call_4184 = relay.TupleGetItem(func_2346_call(), 0)
var_4185 = relay.var("var_4185", dtype = "float32", shape = (960, 16))#candidate|4185|(960, 16)|var|float32
bop_4186 = relay.power(const_4168.astype('float32'), var_4185.astype('float32')) # shape=(960, 16)
output = relay.Tuple([call_4163,call_4167,call_4183,bop_4186,])
output2 = relay.Tuple([call_4164,call_4169,call_4184,bop_4186,])
func_4212 = relay.Function([var_4185,], output)
mod['func_4212'] = func_4212
mod = relay.transform.InferType()(mod)
mutated_mod['func_4212'] = func_4212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4213 = relay.var("var_4213", dtype = "float32", shape = (960, 16))#candidate|4213|(960, 16)|var|float32
func_4212_call = mutated_mod.get_global_var('func_4212')
call_4214 = func_4212_call(var_4213)
output = call_4214
func_4215 = relay.Function([var_4213], output)
mutated_mod['func_4215'] = func_4215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_4263 = func_1253_call()
call_4264 = func_1253_call()
output = call_4263
output2 = call_4264
func_4276 = relay.Function([], output)
mod['func_4276'] = func_4276
mod = relay.transform.InferType()(mod)
mutated_mod['func_4276'] = func_4276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4276_call = mutated_mod.get_global_var('func_4276')
call_4277 = func_4276_call()
output = call_4277
func_4278 = relay.Function([], output)
mutated_mod['func_4278'] = func_4278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1100_call = mod.get_global_var('func_1100')
func_1102_call = mutated_mod.get_global_var('func_1102')
call_4400 = relay.TupleGetItem(func_1100_call(), 1)
call_4401 = relay.TupleGetItem(func_1102_call(), 1)
output = call_4400
output2 = call_4401
func_4402 = relay.Function([], output)
mod['func_4402'] = func_4402
mod = relay.transform.InferType()(mod)
mutated_mod['func_4402'] = func_4402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4402_call = mutated_mod.get_global_var('func_4402')
call_4403 = func_4402_call()
output = call_4403
func_4404 = relay.Function([], output)
mutated_mod['func_4404'] = func_4404
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4477 = relay.var("var_4477", dtype = "uint8", shape = (4, 8, 8))#candidate|4477|(4, 8, 8)|var|uint8
var_4478 = relay.var("var_4478", dtype = "uint8", shape = (4, 8, 8))#candidate|4478|(4, 8, 8)|var|uint8
bop_4479 = relay.greater_equal(var_4477.astype('bool'), relay.reshape(var_4478.astype('bool'), relay.shape_of(var_4477))) # shape=(4, 8, 8)
func_2230_call = mod.get_global_var('func_2230')
func_2232_call = mutated_mod.get_global_var('func_2232')
call_4483 = func_2230_call()
call_4484 = func_2230_call()
func_2659_call = mod.get_global_var('func_2659')
func_2663_call = mutated_mod.get_global_var('func_2663')
var_4498 = relay.var("var_4498", dtype = "int32", shape = (891, 1))#candidate|4498|(891, 1)|var|int32
const_4499 = relay.const([-1.420053,-2.207052,-6.603632,-6.172482,1.318678,2.356364,5.954585,-2.901296,-7.907400,-8.857339,5.636502,9.837791,6.394168,8.515876,2.859231,8.955979,-1.970877,2.148356,-4.774245,-2.761843,-7.199515,-0.218295,-4.787829,-0.731218,-9.242151,7.957976,-6.588101,9.014869,1.733089,-2.551071,-1.424451,-7.585432,0.120174,5.536172,-0.057371,7.421952,4.968427,-7.244096,2.004779,-7.422877,8.647246,7.110126,-9.825041,7.827292,2.519455,-7.272984,8.839921,-7.442043,-7.387076,5.342832,0.277305,-6.039902,-2.856091,-0.897701,0.982994,5.288238,7.624747,-3.100850,-9.085335,8.733541,0.377829,8.910408,-8.318734,-8.461036,2.794475,0.462216,-3.647377,3.846576,-8.414389,-9.876333,-9.184340,-4.983936,3.888487,4.308412,-2.161966,2.345405,-1.228703,1.169984,1.198699,-6.882445,1.552413,5.787749,0.066789,-5.986875,0.524105,4.288683,1.882094,8.105489,5.370534,-7.594146,2.274496,7.751671,-6.693831,-3.145991,-8.302038,-7.815109,0.599612,-3.821171,-0.888708,-2.229216,7.790025,2.997090,-5.099673,4.171198,3.215958,3.128048,-4.127952,-0.397313,7.015820,-3.646214,3.094914,1.077648,-4.473192,3.256512,9.184049,-1.104715,-9.652546,2.957300,-8.655632,-2.833173,-4.501798,-9.693553,-2.177854,7.302888,-1.210776,-4.327642,-9.901214,-3.534208,4.884893,9.516628,3.997552,3.632238,5.338229,-5.042081,-7.758412,9.736239,8.657913,1.523061,-6.029198,7.812707,-6.590093,9.184647,-7.221389,1.152709,5.852838,-3.339208,9.988455,-0.412660,-9.902623,-5.113540,1.984751,9.246701,-0.067533,7.778968,7.920312,9.809622,-2.414101,-1.807835,-6.748817,-4.902486,-3.879437,-6.210472,-9.316169,-5.034299,-8.231047,5.748268,-6.633297,-0.329628,2.824304,3.619550,-6.710107,-1.799640,5.780312,1.527005,1.580507,-3.866815,-9.396710,9.701022,6.136178,8.832661,-9.877119,-4.267263,2.347435,9.566107,-9.246415,4.454523,4.499196,7.910053,-4.938649,-3.319769,-9.296961,6.527681,-8.421637,3.714204,-6.640065,7.106713,-9.981809,8.026057,-8.205190,-1.154530,-7.058300,0.046074,-6.096261,-0.027926,-3.604078,-8.732034,0.873707,5.296843,-6.426715,-3.372364,-1.722062,2.720790,6.889130,-1.135884,-1.302603,-7.093055,3.718679,-2.282924,-6.646657,-3.115373,-3.230360,9.763082,5.734768,8.676592,1.823018,-8.593421,6.061322,-2.229537,9.317074,-8.353358,-0.320641,-0.163962,-2.884363,1.017647,8.079504,4.864358,-2.602831,-4.967772,-9.991634,9.543568,9.578879,0.345848,2.830037,2.952533,-5.189488,-2.241685,-0.684043,-3.135912,-6.214012,0.321558,-5.007681,8.202617,9.517697,-9.575381,0.436704,9.815142,2.711082,7.790499,1.756242,8.017454,-6.334318,-6.788108,-6.481724,9.807607,-1.845826,7.817791,-9.599413,5.287993,-7.227287,2.638662,9.877307,-1.876694,6.885047,5.021453,-0.302340,-8.410710,3.391301,6.387327,-4.653248,-0.322954,6.766660,7.208027,-6.063747,7.284357,-8.789993,-1.127375,8.437987,-1.680583,-9.832655,7.244661,5.146319,8.991421,-7.417539,-7.744545,1.176303,5.569575,-8.905526,-7.304388,3.230157,8.484503,-2.975851,5.146027,-0.300334,-0.294974,-0.460713,6.099418,-6.510475,-1.981300,4.751277,8.108003,5.371380,9.613490,7.009261,-0.822377,6.403938,-4.816038,6.006522,-4.591575,8.959371,-4.451151,-4.628440,9.605464,-9.091302,-0.638307,2.455644,-3.423672,-4.972676,-7.189273,-1.118681,8.347791,1.275069,3.054939,5.499910,-0.204375,0.289084,-8.957868,8.593276,-6.882207,3.455009,1.879574,-7.432079,8.515738,-2.634540,-1.421703,-7.637914,-1.426767,2.295886,-5.247132,8.903061,7.715088,3.776236,4.104266,-1.970539,-2.929989,-5.559408,-0.828638,-1.832836,5.962999,6.021025,0.267237,8.554675,9.379825,2.816555,-8.031168,9.154880,8.377673,3.489194,2.888770,-6.873177,-6.413051,0.109425,1.464217,-0.294966,-7.698481,-2.917284,-3.386145,-7.866239,-3.509900,5.757686,-6.966401,0.835306,-9.176935,-4.214742,-8.154841,6.043965,5.197929,8.527176,-0.209889,-4.902908,3.197392,-1.074745,-4.562467,-9.314980,6.007711,5.168837,-7.590518,5.241349,-3.957498,-1.773667,3.996921,7.157295,-1.693622,9.696801,-9.529163,-2.729980,5.305203,7.694591,0.214100,-8.531799,-5.015634,-8.829053,-3.173826,6.765857,-9.510609,9.187659,9.316020,-5.646137,0.496112,0.539325,8.074290,-4.895026,-4.450522,0.787946,4.383872,-8.369425,4.505895,-9.045204,2.526130,-7.236098,7.234099,3.701676,-5.534502,-7.613466,3.661856,-2.975587,3.036317,6.873951,-3.136909,1.745266,3.941179,9.345454,1.047771,-9.433222,2.510377,-7.948131,6.077264,-3.991508,9.363877,5.170741,-3.527055,-5.467724,-5.404107,9.916266,-2.037254,-7.088409,7.411331,-1.492867,9.884929,2.559994,-5.641158,1.837646,2.371416,2.910073,6.367668,2.345103,-4.527951,2.965726,-5.941878,-4.155178,-0.369912,-0.658751,-3.122198,-5.906860,7.254556,3.290706,2.862365,0.235741,-8.568308,0.547635,-9.382793,9.779695,-4.110843,3.012182,9.511294,0.266416,3.469387,9.336101,1.593135,7.002734,8.742960,-0.720143,-6.994736,0.670147,-8.572262,-6.615981,-3.889074,-9.113760,-9.134425,0.525002,1.046373,5.244797,-9.263637,-7.306079,-7.823558,-1.006234,-8.960721,-2.912997,2.434723,3.973270,3.331698,-9.916730,4.496711,-3.155957,-8.532361,-0.715133,0.359836,-7.228495,-2.468419,7.295554,7.439837,6.559508,-0.536602,-8.358623,8.632911,7.954008,6.989387,-1.957148,-6.905206,-7.155896,-9.055764,-3.117912,6.044901,8.949385,-1.454319,-1.914665,2.380822,7.216376,-5.494580,5.998100,-5.605129,-0.623015,-7.499374,-9.846401,2.787054,9.528341,1.847083,6.468170,6.818346,3.537163,7.173943,1.807362,9.801375,-7.454989,-0.569356,2.432804,3.805669,-2.310749,9.836345,-0.129696,8.014680,-6.589149,-7.284023,6.022323,7.865747,4.012183,8.632073,9.305922,8.842102,-1.721508,9.848803,-2.436182,1.921553,-6.028530,-4.911603,5.324086,-3.534306,-5.370579,-4.427514,-4.677878,-0.800033,-5.453916,-7.383637,-3.791467,-3.808694,0.518755,5.278731,-1.271522,-4.529768,7.986461,2.648148,0.298130,-1.620776,-1.264176,0.253444,-7.430275,-7.658982,5.157962,-6.148669,1.162795,-0.035872,-8.475910,-3.796603,-1.593434,4.468628,6.080407,2.820940,6.575534,4.692014,-7.826562,-1.801518,-7.949612,2.856828,-2.453834,-6.970500,-7.793703,-9.633487,-4.708986,3.348193,-4.846504,-4.716507,-1.104088,-7.255659,0.340305,4.228537,-0.058462,5.101948,7.771147,5.638616,-6.573306,0.174258,-5.331078,-7.073134,-8.324525,-3.342505,-0.230414,9.724150,-9.126596,-8.689022,8.714846,3.416737,-0.171742,-0.778430,5.766733,7.946340,8.339769,3.181837,-0.632962,-8.926840,9.107000,9.140062,4.093480,-2.731157,-4.387502,-6.256624,6.245398,-7.457697,-5.669925,9.131025,-6.816986,6.370285,3.613856,5.055426,-5.347329,-4.494827,-9.367976,-8.185474,-9.666914,7.683493,8.572214,-2.910051,5.487872,-3.963850,-4.194955,-3.576489,-3.191906,-5.628430,-2.506866,-1.571362,-8.471847,-6.480063,-3.142154,-2.471894,-0.298418,-7.587049,5.365848,-9.704237,1.956071,-3.697303,-3.118514,-1.903144,5.252917,-9.466114,-5.059977,-0.547297,3.902421,-9.161600,2.959288,8.194573,-3.359302,-4.032175,-3.940513,5.565851,1.238478,4.555961,-4.500899,1.796389,2.187055,0.403764,-6.513884,-1.473585,-4.231059,2.831945,0.344950,0.871572,-1.996655,-8.152001,-7.199850,-7.391452,4.905051,0.583182,3.194592,5.448953,-6.507077,8.944087,7.690815,2.384344,-8.542240,9.303723,0.713029,4.239892,-7.310101,-2.746810,9.720462,2.157589,9.695982,-4.387715,0.616057,1.693465,-5.119590,-1.423260,-7.264515,-2.079328,-7.339564,-0.276663,-2.611178,-4.422577,0.050859,-3.809485,8.200615,-0.573641,-1.067332,-8.867861,-6.612398,-1.020766,-8.544705,-1.694419,-5.769847,8.065847,3.821186,-3.947155,1.299993,-7.103762,8.550937,-9.936584,-5.258400,4.318594,6.249643,-0.874984,9.481665,1.165017,9.675743,-3.021311,-4.287238,3.440903,-4.016027,9.070667,-2.513682,-1.516851,-9.536214,-7.726689,5.016608,-6.326014,8.043979,2.487363,0.352822,-3.399832,-4.853852,-4.498899,-6.929614,-1.983034,9.869646,9.680764,-2.859606,1.737368,-0.021372,1.959776,-1.077748,-3.781100,0.187936,-8.959151,-1.365250,2.284234,-8.585962,2.991896,5.704209,8.992166,-8.841685,-9.107675,-3.800405,3.612086,-9.878975,0.511687,-4.038422,-7.321544,2.782312,-0.137638,-3.808508,-8.685751,3.571677,0.102509,-0.006943,8.365677,1.737014,8.233538,-3.174549,-3.656137,5.046485,0.484489,-4.852399,2.254812,-3.492477,5.332226,-7.331270,4.106127,-0.106000,-5.529359,1.419573,8.034619,-6.179703,9.313582,3.468306,9.114178,0.535325,3.173591,-3.714330,2.506440,-9.521371,6.688016,-6.611774,8.347469,-6.625630,9.614924,9.273072,-4.012107,8.665447,-4.408457,-0.081842,-4.084382,-2.535784,8.280931,-5.988214,-5.938763,8.397620,4.762805,-4.902828,-7.018952,3.587497,8.638614,-8.289017,-5.684856,2.015891,5.722735,-5.014711,9.569293,1.835174,0.775103,7.217761,-6.163101,-7.380973,-1.742139,-0.760051,0.805385,7.689308,1.104637,-5.916200,7.021359,-2.502140,1.582656,-4.305464,-2.399623,6.067859,-1.929868,9.067121,-0.304475,-3.941996,-9.552414,6.351809,-3.033171,-9.833668,8.245547,3.662139,-6.848746,5.160549,-7.892990,-2.185390,7.222445,5.893743,-5.201537,-3.504192,-7.461525,-3.485226,-3.106498,-9.921464,-6.079688,-5.959537,4.081879,-1.464356,6.507958,-8.409411,-9.291096,-0.514988,-3.073449,3.730083,-4.493189,1.845689,-9.688451,-5.855658,-6.735453,-6.584920,2.518860,-8.857417,-7.298032,7.987879,-3.144742,-1.481939,-6.000643,-2.727406,-9.962819,-8.249086,8.133213,6.818672,3.028144,-1.054432,-7.311599,-7.662281,7.866492,-8.666275,0.240073,-6.524286,5.633912,-2.711102,6.800316,8.356560,-1.955726,8.766196,9.017313,-4.946969,-0.314026,-1.578080,3.539618], dtype = "float32")#candidate|4499|(960,)|const|float32
call_4497 = relay.TupleGetItem(func_2659_call(relay.reshape(var_4498.astype('int32'), [9, 9, 11]), relay.reshape(call_4483.astype('float64'), [2160,]), relay.reshape(const_4499.astype('float32'), [960,]), ), 1)
call_4500 = relay.TupleGetItem(func_2663_call(relay.reshape(var_4498.astype('int32'), [9, 9, 11]), relay.reshape(call_4483.astype('float64'), [2160,]), relay.reshape(const_4499.astype('float32'), [960,]), ), 1)
func_2545_call = mod.get_global_var('func_2545')
func_2548_call = mutated_mod.get_global_var('func_2548')
call_4507 = relay.TupleGetItem(func_2545_call(relay.reshape(call_4497.astype('bool'), [180, 12])), 0)
call_4508 = relay.TupleGetItem(func_2548_call(relay.reshape(call_4497.astype('bool'), [180, 12])), 0)
bop_4513 = relay.bitwise_xor(const_4499.astype('uint8'), var_4498.astype('uint8')) # shape=(891, 960)
output = relay.Tuple([bop_4479,call_4483,call_4497,call_4507,bop_4513,])
output2 = relay.Tuple([bop_4479,call_4484,call_4500,call_4508,bop_4513,])
func_4519 = relay.Function([var_4477,var_4478,var_4498,], output)
mod['func_4519'] = func_4519
mod = relay.transform.InferType()(mod)
var_4520 = relay.var("var_4520", dtype = "uint8", shape = (4, 8, 8))#candidate|4520|(4, 8, 8)|var|uint8
var_4521 = relay.var("var_4521", dtype = "uint8", shape = (4, 8, 8))#candidate|4521|(4, 8, 8)|var|uint8
var_4522 = relay.var("var_4522", dtype = "int32", shape = (891, 1))#candidate|4522|(891, 1)|var|int32
output = func_4519(var_4520,var_4521,var_4522,)
func_4523 = relay.Function([var_4520,var_4521,var_4522,], output)
mutated_mod['func_4523'] = func_4523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1809_call = mod.get_global_var('func_1809')
func_1811_call = mutated_mod.get_global_var('func_1811')
call_4559 = func_1809_call()
call_4560 = func_1809_call()
func_3163_call = mod.get_global_var('func_3163')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_4575 = relay.TupleGetItem(func_3163_call(), 0)
call_4576 = relay.TupleGetItem(func_3165_call(), 0)
output = relay.Tuple([call_4559,call_4575,])
output2 = relay.Tuple([call_4560,call_4576,])
func_4580 = relay.Function([], output)
mod['func_4580'] = func_4580
mod = relay.transform.InferType()(mod)
mutated_mod['func_4580'] = func_4580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4580_call = mutated_mod.get_global_var('func_4580')
call_4581 = func_4580_call()
output = call_4581
func_4582 = relay.Function([], output)
mutated_mod['func_4582'] = func_4582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4615 = relay.var("var_4615", dtype = "float64", shape = ())#candidate|4615|()|var|float64
var_4616 = relay.var("var_4616", dtype = "float64", shape = (8, 3, 2))#candidate|4616|(8, 3, 2)|var|float64
bop_4617 = relay.greater_equal(var_4615.astype('bool'), var_4616.astype('bool')) # shape=(8, 3, 2)
func_2390_call = mod.get_global_var('func_2390')
func_2391_call = mutated_mod.get_global_var('func_2391')
call_4620 = relay.TupleGetItem(func_2390_call(), 4)
call_4621 = relay.TupleGetItem(func_2391_call(), 4)
func_737_call = mod.get_global_var('func_737')
func_740_call = mutated_mod.get_global_var('func_740')
call_4627 = func_737_call(relay.reshape(call_4620.astype('float64'), [13, 6, 14]))
call_4628 = func_737_call(relay.reshape(call_4620.astype('float64'), [13, 6, 14]))
func_3241_call = mod.get_global_var('func_3241')
func_3243_call = mutated_mod.get_global_var('func_3243')
call_4629 = relay.TupleGetItem(func_3241_call(), 0)
call_4630 = relay.TupleGetItem(func_3243_call(), 0)
func_3749_call = mod.get_global_var('func_3749')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_4636 = relay.TupleGetItem(func_3749_call(), 1)
call_4637 = relay.TupleGetItem(func_3751_call(), 1)
output = relay.Tuple([bop_4617,call_4620,call_4627,call_4629,call_4636,])
output2 = relay.Tuple([bop_4617,call_4621,call_4628,call_4630,call_4637,])
func_4645 = relay.Function([var_4615,var_4616,], output)
mod['func_4645'] = func_4645
mod = relay.transform.InferType()(mod)
var_4646 = relay.var("var_4646", dtype = "float64", shape = ())#candidate|4646|()|var|float64
var_4647 = relay.var("var_4647", dtype = "float64", shape = (8, 3, 2))#candidate|4647|(8, 3, 2)|var|float64
output = func_4645(var_4646,var_4647,)
func_4648 = relay.Function([var_4646,var_4647,], output)
mutated_mod['func_4648'] = func_4648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4159_call = mod.get_global_var('func_4159')
func_4160_call = mutated_mod.get_global_var('func_4160')
call_4674 = func_4159_call()
call_4675 = func_4159_call()
output = relay.Tuple([call_4674,])
output2 = relay.Tuple([call_4675,])
func_4677 = relay.Function([], output)
mod['func_4677'] = func_4677
mod = relay.transform.InferType()(mod)
mutated_mod['func_4677'] = func_4677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4677_call = mutated_mod.get_global_var('func_4677')
call_4678 = func_4677_call()
output = call_4678
func_4679 = relay.Function([], output)
mutated_mod['func_4679'] = func_4679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4000_call = mod.get_global_var('func_4000')
func_4001_call = mutated_mod.get_global_var('func_4001')
call_4717 = relay.TupleGetItem(func_4000_call(), 0)
call_4718 = relay.TupleGetItem(func_4001_call(), 0)
func_4132_call = mod.get_global_var('func_4132')
func_4134_call = mutated_mod.get_global_var('func_4134')
call_4722 = relay.TupleGetItem(func_4132_call(), 1)
call_4723 = relay.TupleGetItem(func_4134_call(), 1)
func_1525_call = mod.get_global_var('func_1525')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_4736 = func_1525_call()
call_4737 = func_1525_call()
func_2789_call = mod.get_global_var('func_2789')
func_2791_call = mutated_mod.get_global_var('func_2791')
call_4744 = relay.TupleGetItem(func_2789_call(), 4)
call_4745 = relay.TupleGetItem(func_2791_call(), 4)
func_3695_call = mod.get_global_var('func_3695')
func_3696_call = mutated_mod.get_global_var('func_3696')
call_4746 = relay.TupleGetItem(func_3695_call(), 0)
call_4747 = relay.TupleGetItem(func_3696_call(), 0)
func_48_call = mod.get_global_var('func_48')
func_51_call = mutated_mod.get_global_var('func_51')
var_4751 = relay.var("var_4751", dtype = "float64", shape = (45, 3))#candidate|4751|(45, 3)|var|float64
call_4750 = func_48_call(relay.reshape(var_4751.astype('float64'), [15, 1, 9]), relay.reshape(call_4736.astype('float64'), [15, 16, 9]), )
call_4752 = func_48_call(relay.reshape(var_4751.astype('float64'), [15, 1, 9]), relay.reshape(call_4736.astype('float64'), [15, 16, 9]), )
func_1738_call = mod.get_global_var('func_1738')
func_1742_call = mutated_mod.get_global_var('func_1742')
call_4756 = relay.TupleGetItem(func_1738_call(relay.reshape(var_4751.astype('float64'), [135,]), relay.reshape(call_4736.astype('bool'), [15, 16, 9]), ), 0)
call_4757 = relay.TupleGetItem(func_1742_call(relay.reshape(var_4751.astype('float64'), [135,]), relay.reshape(call_4736.astype('bool'), [15, 16, 9]), ), 0)
func_1067_call = mod.get_global_var('func_1067')
func_1071_call = mutated_mod.get_global_var('func_1071')
const_4760 = relay.const(-4, dtype = "int64")#candidate|4760|()|const|int64
const_4761 = relay.const([[2,-1,6,10,-3,-8,6,-2,-6,-5,-4,-4,-7,-5,-5,-1,7,-2,2,-4,6,-8,9,-9,10,-8,2,7,2,-2,-4,-4,7,-5,-1,1,-10,2,-7,-4,6,3,3,1,3,4,6,-10,5,-9,-6,-6,9,6,8,5,2,-1,-8,-2,-6,10,-4,5,8,10,4,10,1,-9,6,2,-2,2,-7,-10,-1,-5,1,-8],[5,2,-1,3,8,2,6,1,9,7,-10,-1,7,7,7,6,-1,-1,1,-6,-6,3,2,-9,9,-9,4,9,-7,9,4,-7,-6,-9,2,5,4,9,2,-9,5,10,-9,1,7,-1,9,-6,-6,-1,-2,4,4,4,-3,-7,-2,-10,-5,-8,-2,3,-6,-6,6,1,-4,6,10,2,-2,4,5,6,4,2,2,7,8,2]], dtype = "int64")#candidate|4761|(2, 80)|const|int64
call_4759 = relay.TupleGetItem(func_1067_call(relay.reshape(const_4760.astype('int64'), []), relay.reshape(const_4761.astype('int64'), [8, 4, 5]), ), 2)
call_4762 = relay.TupleGetItem(func_1071_call(relay.reshape(const_4760.astype('int64'), []), relay.reshape(const_4761.astype('int64'), [8, 4, 5]), ), 2)
output = relay.Tuple([call_4717,call_4722,call_4736,call_4744,call_4746,call_4750,var_4751,call_4756,call_4759,const_4760,const_4761,])
output2 = relay.Tuple([call_4718,call_4723,call_4737,call_4745,call_4747,call_4752,var_4751,call_4757,call_4762,const_4760,const_4761,])
func_4777 = relay.Function([var_4751,], output)
mod['func_4777'] = func_4777
mod = relay.transform.InferType()(mod)
mutated_mod['func_4777'] = func_4777
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4778 = relay.var("var_4778", dtype = "float64", shape = (45, 3))#candidate|4778|(45, 3)|var|float64
func_4777_call = mutated_mod.get_global_var('func_4777')
call_4779 = func_4777_call(var_4778)
output = call_4779
func_4780 = relay.Function([var_4778], output)
mutated_mod['func_4780'] = func_4780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2760_call = mod.get_global_var('func_2760')
func_2762_call = mutated_mod.get_global_var('func_2762')
call_4806 = func_2760_call()
call_4807 = func_2760_call()
output = relay.Tuple([call_4806,])
output2 = relay.Tuple([call_4807,])
func_4842 = relay.Function([], output)
mod['func_4842'] = func_4842
mod = relay.transform.InferType()(mod)
mutated_mod['func_4842'] = func_4842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4842_call = mutated_mod.get_global_var('func_4842')
call_4843 = func_4842_call()
output = call_4843
func_4844 = relay.Function([], output)
mutated_mod['func_4844'] = func_4844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1100_call = mod.get_global_var('func_1100')
func_1102_call = mutated_mod.get_global_var('func_1102')
call_4905 = relay.TupleGetItem(func_1100_call(), 1)
call_4906 = relay.TupleGetItem(func_1102_call(), 1)
var_4921 = relay.var("var_4921", dtype = "float64", shape = (9, 9, 11))#candidate|4921|(9, 9, 11)|var|float64
bop_4922 = relay.subtract(call_4905.astype('uint8'), relay.reshape(var_4921.astype('uint8'), relay.shape_of(call_4905))) # shape=(9, 9, 11)
bop_4925 = relay.subtract(call_4906.astype('uint8'), relay.reshape(var_4921.astype('uint8'), relay.shape_of(call_4906))) # shape=(9, 9, 11)
output = bop_4922
output2 = bop_4925
func_4929 = relay.Function([var_4921,], output)
mod['func_4929'] = func_4929
mod = relay.transform.InferType()(mod)
var_4930 = relay.var("var_4930", dtype = "float64", shape = (9, 9, 11))#candidate|4930|(9, 9, 11)|var|float64
output = func_4929(var_4930)
func_4931 = relay.Function([var_4930], output)
mutated_mod['func_4931'] = func_4931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2789_call = mod.get_global_var('func_2789')
func_2791_call = mutated_mod.get_global_var('func_2791')
call_4962 = relay.TupleGetItem(func_2789_call(), 4)
call_4963 = relay.TupleGetItem(func_2791_call(), 4)
func_4677_call = mod.get_global_var('func_4677')
func_4679_call = mutated_mod.get_global_var('func_4679')
call_4974 = relay.TupleGetItem(func_4677_call(), 0)
call_4975 = relay.TupleGetItem(func_4679_call(), 0)
output = relay.Tuple([call_4962,call_4974,])
output2 = relay.Tuple([call_4963,call_4975,])
func_4994 = relay.Function([], output)
mod['func_4994'] = func_4994
mod = relay.transform.InferType()(mod)
mutated_mod['func_4994'] = func_4994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4994_call = mutated_mod.get_global_var('func_4994')
call_4995 = func_4994_call()
output = call_4995
func_4996 = relay.Function([], output)
mutated_mod['func_4996'] = func_4996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3241_call = mod.get_global_var('func_3241')
func_3243_call = mutated_mod.get_global_var('func_3243')
call_5041 = relay.TupleGetItem(func_3241_call(), 0)
call_5042 = relay.TupleGetItem(func_3243_call(), 0)
uop_5056 = relay.acosh(call_5041.astype('float64')) # shape=(9, 9, 11)
uop_5058 = relay.acosh(call_5042.astype('float64')) # shape=(9, 9, 11)
output = uop_5056
output2 = uop_5058
func_5059 = relay.Function([], output)
mod['func_5059'] = func_5059
mod = relay.transform.InferType()(mod)
output = func_5059()
func_5060 = relay.Function([], output)
mutated_mod['func_5060'] = func_5060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2345_call = mod.get_global_var('func_2345')
func_2346_call = mutated_mod.get_global_var('func_2346')
call_5064 = relay.TupleGetItem(func_2345_call(), 1)
call_5065 = relay.TupleGetItem(func_2346_call(), 1)
output = call_5064
output2 = call_5065
func_5069 = relay.Function([], output)
mod['func_5069'] = func_5069
mod = relay.transform.InferType()(mod)
mutated_mod['func_5069'] = func_5069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5069_call = mutated_mod.get_global_var('func_5069')
call_5070 = func_5069_call()
output = call_5070
func_5071 = relay.Function([], output)
mutated_mod['func_5071'] = func_5071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3749_call = mod.get_global_var('func_3749')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_5083 = relay.TupleGetItem(func_3749_call(), 1)
call_5084 = relay.TupleGetItem(func_3751_call(), 1)
uop_5088 = relay.log2(call_5083.astype('float64')) # shape=(9, 9, 11)
uop_5090 = relay.log2(call_5084.astype('float64')) # shape=(9, 9, 11)
func_1067_call = mod.get_global_var('func_1067')
func_1071_call = mutated_mod.get_global_var('func_1071')
const_5097 = relay.const(-9, dtype = "int64")#candidate|5097|()|const|int64
var_5098 = relay.var("var_5098", dtype = "int64", shape = (160,))#candidate|5098|(160,)|var|int64
call_5096 = relay.TupleGetItem(func_1067_call(relay.reshape(const_5097.astype('int64'), []), relay.reshape(var_5098.astype('int64'), [8, 4, 5]), ), 2)
call_5099 = relay.TupleGetItem(func_1071_call(relay.reshape(const_5097.astype('int64'), []), relay.reshape(var_5098.astype('int64'), [8, 4, 5]), ), 2)
func_4061_call = mod.get_global_var('func_4061')
func_4062_call = mutated_mod.get_global_var('func_4062')
call_5105 = func_4061_call()
call_5106 = func_4061_call()
bop_5107 = relay.multiply(const_5097.astype('float64'), call_5083.astype('float64')) # shape=(9, 9, 11)
bop_5110 = relay.multiply(const_5097.astype('float64'), call_5084.astype('float64')) # shape=(9, 9, 11)
func_3241_call = mod.get_global_var('func_3241')
func_3243_call = mutated_mod.get_global_var('func_3243')
call_5123 = relay.TupleGetItem(func_3241_call(), 0)
call_5124 = relay.TupleGetItem(func_3243_call(), 0)
const_5132 = relay.const([[[-5.021334,7.970485,7.320423,1.747492,9.584023,7.513002,4.898161,7.153472,-8.721888,-0.201874,6.664332],[-8.557577,-4.274522,2.550164,2.359258,-7.559550,8.507230,2.805326,0.650876,-1.072294,-4.196767,-5.562641],[-8.271663,-8.318852,-9.038000,-9.761652,8.535425,7.428001,3.335833,6.199090,-2.740622,-9.101787,6.005410],[-6.677580,-3.326588,9.674948,-8.637938,-8.414510,8.909106,-8.056026,4.185796,4.159840,9.363017,-5.159542],[-6.949921,6.584158,3.323707,-5.507812,4.812060,-6.131939,9.874148,-5.183711,2.104115,-4.201887,-5.282405],[0.409221,0.591298,-4.975388,1.717770,7.808174,-5.508113,-2.053026,-4.763656,-5.935461,5.652278,5.541082],[-7.723218,0.471578,-4.842465,-9.862018,-5.992759,-1.580578,-9.730428,-7.579133,-6.351664,1.874453,-2.835407],[-7.734368,-9.428788,-0.349381,9.026530,1.629289,-8.991773,-6.715847,-4.400439,8.008204,-7.440894,9.337592],[-3.581231,-1.727888,3.755818,4.145048,-1.510519,3.730498,-5.909656,-5.640317,0.271149,7.189498,-1.537875]],[[9.302803,-1.637741,6.082362,-3.798027,8.152467,-7.376024,1.624342,-9.744850,5.998586,8.742505,8.661069],[2.494507,5.561561,6.793384,-6.999983,-1.117487,0.489308,-6.994711,9.211571,2.565672,0.982326,2.001233],[3.958536,8.899514,-8.796240,5.888460,-7.990300,0.766434,-2.259615,-6.970002,0.987084,-7.947815,8.163818],[3.542888,8.512727,0.812256,1.681773,-5.797162,-8.793419,7.232881,-8.481363,2.041578,4.569654,-8.819331],[0.254070,-0.939754,-7.525353,3.255325,2.254494,-2.868101,1.224573,7.839246,-7.261741,-6.630529,7.948517],[6.740683,-5.746344,-9.209417,-9.150168,7.615295,9.287096,-6.425051,-6.863673,7.262582,-6.467232,9.015886],[-9.980857,-0.495538,-5.377251,2.584881,3.399950,7.587202,6.163025,5.985357,-7.171723,-7.133687,6.030928],[3.529060,-0.797583,5.991036,4.881065,9.169871,-1.730284,-1.750698,-1.146465,-5.463261,0.764248,8.694242],[-8.076090,-4.673301,-6.871620,-8.870162,1.765458,3.399742,6.423033,-5.649885,1.050937,-2.972812,-2.414444]],[[-1.817838,-3.431790,-1.451886,-8.414402,8.422360,-7.490938,-4.096767,-4.052269,-6.518226,-3.982163,3.088542],[9.445071,-9.731261,1.871674,-0.267094,-9.391071,-2.177548,8.597299,-9.213780,2.286459,-4.083506,1.921445],[-1.184232,-6.293620,8.782275,-9.392995,-1.217282,-0.018325,1.753201,8.557752,7.425763,-4.100314,-7.750911],[-8.659779,-1.183999,-1.163148,-8.634052,3.805073,8.434132,4.621020,-2.871847,-2.615017,3.477404,-5.302746],[-6.642183,-5.271287,7.288334,-4.952909,9.761849,-7.009323,-2.651555,-3.239439,-3.296609,1.762664,7.277565],[-8.208960,-4.694002,-0.636920,2.715875,-8.463681,-4.231859,-0.575967,-3.173833,-4.949116,1.023776,7.399896],[0.159480,-5.101802,8.698115,-4.234082,7.815078,-5.747142,7.861146,3.297765,4.008513,-7.056128,8.396372],[2.493484,5.749004,7.465249,-4.071050,-6.106982,-7.634175,5.131440,-3.890744,2.546640,-6.643320,-0.383175],[-5.087180,7.878184,0.869760,-2.207318,-6.110606,-7.572347,5.194045,-6.675184,-5.159890,9.836307,-7.360260]],[[-6.550901,-2.182776,-9.125007,-7.131903,-1.545913,-8.011703,-0.946329,-1.148830,-5.059423,6.183246,-2.205082],[-5.879610,-1.113493,-9.143954,-5.386710,1.120168,8.374693,-6.181570,-4.065642,-5.716480,0.859878,-2.797292],[6.431273,-9.153568,9.882868,-9.095023,-2.034817,3.002247,-0.346077,0.041479,-2.614770,2.602708,-7.885832],[4.359182,-7.365035,-4.332153,-7.470582,-4.443435,7.117714,-5.224572,-2.780262,-3.495602,7.204488,7.908396],[0.329629,-7.578734,6.267872,-7.600258,5.890356,1.031051,9.714332,-8.790509,-5.292302,2.462004,6.664932],[5.826529,1.071598,5.952889,2.903363,-9.142998,7.572933,-7.212539,-3.989251,-1.704469,-7.920222,-9.563790],[6.479159,3.793990,2.978987,3.285058,-6.143609,-1.878934,7.053665,0.050918,-0.262438,8.166231,-8.038982],[3.902368,-0.958145,4.428614,3.847190,0.998755,-6.441223,-1.597000,4.084117,-7.487639,-6.585804,9.744619],[-3.004127,-3.246042,-6.027264,-0.127574,7.459236,-8.481322,-9.657643,-7.986766,5.817812,-4.667291,6.529847]],[[8.618200,3.595889,-3.280961,-8.011025,8.539722,-6.741664,2.487800,6.819387,-1.451430,5.437453,8.408015],[-1.439589,7.167900,2.667952,4.562634,2.928044,0.664136,-7.382633,-8.292061,-7.930131,-1.427949,-9.378914],[7.456211,6.481733,-6.116919,-2.532512,-8.491315,-8.869024,-2.894107,-5.171092,-2.915100,-2.261519,-4.992515],[6.607305,9.163119,-8.439051,3.709820,-8.319298,-0.754131,-6.695100,-2.474471,-5.356176,4.261541,8.585480],[-5.815392,8.636511,2.278285,5.104323,-6.881008,-1.958736,-9.689752,1.701402,9.150046,-9.989062,-9.956217],[5.218674,-4.249112,5.359266,-6.229333,2.644584,-9.562243,3.970041,2.917709,3.717502,9.880195,4.554783],[-5.507583,8.575162,-7.197949,-6.487824,-9.956958,-9.361417,8.258341,-6.669269,-3.673882,0.870368,-0.570101],[-6.250877,1.702040,-9.747255,2.944782,-5.506479,-1.703655,-1.062398,9.862915,7.238509,-6.296265,-4.716655],[-7.886928,3.314782,7.899967,5.224728,5.517244,5.034133,-3.411134,0.869720,9.209829,9.211090,-7.867101]],[[1.790636,-6.185233,9.437037,-8.303300,1.272601,3.280115,5.591873,2.701627,-4.715896,-8.692792,0.531555],[3.417514,-9.656642,-3.696242,8.700700,3.471029,-2.061231,0.534445,-7.865082,-3.722111,-4.920347,-5.567556],[-2.700841,1.223300,-6.139559,-7.875495,-1.829296,9.023651,-2.146919,-0.460695,-4.604935,-9.720949,-2.934113],[-3.959268,7.427937,-3.084113,-3.478009,8.547077,-7.197440,-9.575651,-1.391239,-2.318913,-3.676557,-7.864703],[7.830181,-2.453872,-3.423900,-9.579366,7.557085,-4.215295,0.496413,-2.125290,5.009436,-4.829937,-8.459871],[9.709792,3.525188,9.811867,1.682547,0.038234,4.383283,-6.157113,-3.680617,-9.088212,7.038810,1.910249],[9.985718,3.308301,7.481248,-6.718414,-7.990611,0.589815,7.732941,0.028614,-3.199646,8.504399,6.398331],[8.800150,-4.739365,7.407877,-7.367068,1.671370,-8.607906,8.028668,-5.333047,-6.334909,1.665979,0.347371],[-5.155664,5.562115,7.350292,-7.063134,-4.445913,-6.414385,7.110491,-1.309441,-4.025225,0.873737,-3.412357]],[[2.903620,-9.951776,7.137334,4.766708,-9.183427,-8.903264,-4.472914,-8.278406,-6.933525,-7.013277,-1.444403],[-8.402636,-9.096226,-6.927430,8.178612,-0.585402,2.731941,-5.529996,-4.134935,7.622462,-6.654527,-1.540582],[6.331418,5.743955,0.924616,3.031740,-9.643214,-2.376337,-9.605256,-0.492129,-7.905492,-2.279295,-0.304750],[-5.062302,-2.374779,3.613934,1.153470,9.679275,6.657302,-4.777648,1.893353,-7.500993,6.112274,-0.142520],[7.886964,-7.772981,9.817108,1.048101,1.978136,-6.207413,-5.412912,-4.236955,3.001367,-2.332579,0.621542],[4.883021,-2.760921,-4.276909,-3.769751,-5.104181,8.448375,4.778022,0.340346,-8.260880,2.084940,2.997155],[1.632768,4.101352,7.227141,6.965827,8.014546,2.105015,-0.043961,8.515616,-9.576073,-5.130005,-2.675990],[-7.196986,-5.974805,3.566276,4.192801,1.556692,-3.844000,2.433777,7.615960,-2.351822,5.548818,-6.346496],[1.377526,5.373422,6.542322,-6.084173,6.165406,-3.382416,4.072591,3.068044,-5.787418,0.339746,-6.217904]],[[-4.824274,6.482836,-6.145549,3.433507,-0.698665,-6.763654,-8.126210,6.339500,-6.901114,-8.971974,7.528466],[-8.070073,-6.920562,4.583601,0.443688,1.631715,1.305350,3.284275,3.100024,8.516710,0.219604,8.257051],[0.056323,-8.698898,-0.284130,-3.875836,1.745705,-6.723194,9.384056,2.625670,5.067506,6.701751,-4.171474],[-7.710469,8.415532,8.008498,-5.978514,-0.482331,-8.109512,7.815384,1.207995,-3.076924,-1.445558,7.378538],[-5.910025,-9.909473,7.455182,1.851344,-0.828742,1.713467,5.740345,4.393577,-0.512775,5.842653,-1.560802],[5.801818,3.952969,-4.702277,-5.518922,3.752065,9.092629,5.996314,2.599567,-5.842178,-9.235194,9.171771],[-1.328272,0.147213,6.521350,9.298910,0.417187,1.600263,-7.240091,-5.917431,1.506569,-2.975765,-0.783266],[6.294435,-4.250438,7.119487,-8.420561,-3.559381,1.807042,8.374475,-4.007603,9.212309,6.105136,-8.088415],[-1.706586,-6.148400,3.334130,-8.371295,-7.850634,1.105840,9.586279,-3.951674,-1.052634,6.268275,-9.794989]],[[-9.762256,8.026334,3.172249,-2.864336,0.769152,-2.183722,9.955737,-6.203151,4.172294,9.625428,9.977190],[-7.106273,-6.252852,-4.269891,-8.984659,-8.430485,5.228436,-6.100671,-2.754017,0.443584,-5.564633,-3.493937],[5.205168,8.646208,7.347612,1.967548,-1.083833,-3.566884,-1.367420,-1.994283,-6.934661,4.313471,-7.593233],[-8.210625,8.207330,-1.397512,0.618605,4.303494,6.826668,-1.739032,7.128167,9.089851,8.948584,7.933610],[-0.180947,-4.959171,-3.825099,4.762020,-3.875444,-8.523921,9.613990,3.084761,8.339693,1.274649,2.682126],[5.874390,9.387126,-4.400128,4.927383,0.878279,5.615840,-3.148728,6.323367,8.496233,3.601666,3.215279],[-2.214074,2.751810,0.640941,5.460295,-0.317519,-9.153743,0.204794,-8.744763,-1.014648,5.031572,-0.991435],[6.741103,0.958327,1.643963,-3.765335,6.873038,0.061742,-2.786616,0.835659,8.698110,6.585171,2.543991],[3.657170,5.468150,0.288637,5.075231,-7.594117,-2.587403,5.081537,-9.157491,-3.037478,1.112420,-2.634867]]], dtype = "float64")#candidate|5132|(9, 9, 11)|const|float64
bop_5133 = relay.floor_mod(uop_5088.astype('float64'), relay.reshape(const_5132.astype('float64'), relay.shape_of(uop_5088))) # shape=(9, 9, 11)
bop_5136 = relay.floor_mod(uop_5090.astype('float64'), relay.reshape(const_5132.astype('float64'), relay.shape_of(uop_5090))) # shape=(9, 9, 11)
output = relay.Tuple([call_5096,var_5098,call_5105,bop_5107,call_5123,bop_5133,])
output2 = relay.Tuple([call_5099,var_5098,call_5106,bop_5110,call_5124,bop_5136,])
func_5154 = relay.Function([var_5098,], output)
mod['func_5154'] = func_5154
mod = relay.transform.InferType()(mod)
mutated_mod['func_5154'] = func_5154
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5155 = relay.var("var_5155", dtype = "int64", shape = (160,))#candidate|5155|(160,)|var|int64
func_5154_call = mutated_mod.get_global_var('func_5154')
call_5156 = func_5154_call(var_5155)
output = call_5156
func_5157 = relay.Function([var_5155], output)
mutated_mod['func_5157'] = func_5157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3859_call = mod.get_global_var('func_3859')
func_3861_call = mutated_mod.get_global_var('func_3861')
call_5202 = relay.TupleGetItem(func_3859_call(), 0)
call_5203 = relay.TupleGetItem(func_3861_call(), 0)
func_3665_call = mod.get_global_var('func_3665')
func_3667_call = mutated_mod.get_global_var('func_3667')
var_5228 = relay.var("var_5228", dtype = "uint8", shape = (990,))#candidate|5228|(990,)|var|uint8
call_5227 = relay.TupleGetItem(func_3665_call(relay.reshape(var_5228.astype('uint8'), [990,])), 1)
call_5229 = relay.TupleGetItem(func_3667_call(relay.reshape(var_5228.astype('uint8'), [990,])), 1)
output = relay.Tuple([call_5202,call_5227,var_5228,])
output2 = relay.Tuple([call_5203,call_5229,var_5228,])
func_5240 = relay.Function([var_5228,], output)
mod['func_5240'] = func_5240
mod = relay.transform.InferType()(mod)
mutated_mod['func_5240'] = func_5240
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5241 = relay.var("var_5241", dtype = "uint8", shape = (990,))#candidate|5241|(990,)|var|uint8
func_5240_call = mutated_mod.get_global_var('func_5240')
call_5242 = func_5240_call(var_5241)
output = call_5242
func_5243 = relay.Function([var_5241], output)
mutated_mod['func_5243'] = func_5243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4000_call = mod.get_global_var('func_4000')
func_4001_call = mutated_mod.get_global_var('func_4001')
call_5326 = relay.TupleGetItem(func_4000_call(), 0)
call_5327 = relay.TupleGetItem(func_4001_call(), 0)
output = call_5326
output2 = call_5327
func_5348 = relay.Function([], output)
mod['func_5348'] = func_5348
mod = relay.transform.InferType()(mod)
output = func_5348()
func_5349 = relay.Function([], output)
mutated_mod['func_5349'] = func_5349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2928_call = mod.get_global_var('func_2928')
func_2929_call = mutated_mod.get_global_var('func_2929')
call_5390 = relay.TupleGetItem(func_2928_call(), 0)
call_5391 = relay.TupleGetItem(func_2929_call(), 0)
output = relay.Tuple([call_5390,])
output2 = relay.Tuple([call_5391,])
func_5398 = relay.Function([], output)
mod['func_5398'] = func_5398
mod = relay.transform.InferType()(mod)
output = func_5398()
func_5399 = relay.Function([], output)
mutated_mod['func_5399'] = func_5399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3695_call = mod.get_global_var('func_3695')
func_3696_call = mutated_mod.get_global_var('func_3696')
call_5421 = relay.TupleGetItem(func_3695_call(), 1)
call_5422 = relay.TupleGetItem(func_3696_call(), 1)
func_1370_call = mod.get_global_var('func_1370')
func_1372_call = mutated_mod.get_global_var('func_1372')
call_5423 = relay.TupleGetItem(func_1370_call(), 0)
call_5424 = relay.TupleGetItem(func_1372_call(), 0)
output = relay.Tuple([call_5421,call_5423,])
output2 = relay.Tuple([call_5422,call_5424,])
func_5438 = relay.Function([], output)
mod['func_5438'] = func_5438
mod = relay.transform.InferType()(mod)
mutated_mod['func_5438'] = func_5438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5438_call = mutated_mod.get_global_var('func_5438')
call_5439 = func_5438_call()
output = call_5439
func_5440 = relay.Function([], output)
mutated_mod['func_5440'] = func_5440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4159_call = mod.get_global_var('func_4159')
func_4160_call = mutated_mod.get_global_var('func_4160')
call_5447 = func_4159_call()
call_5448 = func_4159_call()
output = call_5447
output2 = call_5448
func_5449 = relay.Function([], output)
mod['func_5449'] = func_5449
mod = relay.transform.InferType()(mod)
mutated_mod['func_5449'] = func_5449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5449_call = mutated_mod.get_global_var('func_5449')
call_5450 = func_5449_call()
output = call_5450
func_5451 = relay.Function([], output)
mutated_mod['func_5451'] = func_5451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3241_call = mod.get_global_var('func_3241')
func_3243_call = mutated_mod.get_global_var('func_3243')
call_5500 = relay.TupleGetItem(func_3241_call(), 0)
call_5501 = relay.TupleGetItem(func_3243_call(), 0)
var_5519 = relay.var("var_5519", dtype = "float32", shape = (9, 9, 11))#candidate|5519|(9, 9, 11)|var|float32
bop_5520 = relay.bitwise_and(call_5500.astype('int64'), relay.reshape(var_5519.astype('int64'), relay.shape_of(call_5500))) # shape=(9, 9, 11)
bop_5523 = relay.bitwise_and(call_5501.astype('int64'), relay.reshape(var_5519.astype('int64'), relay.shape_of(call_5501))) # shape=(9, 9, 11)
func_1809_call = mod.get_global_var('func_1809')
func_1811_call = mutated_mod.get_global_var('func_1811')
call_5524 = func_1809_call()
call_5525 = func_1809_call()
func_4519_call = mod.get_global_var('func_4519')
func_4523_call = mutated_mod.get_global_var('func_4523')
var_5541 = relay.var("var_5541", dtype = "uint8", shape = (256,))#candidate|5541|(256,)|var|uint8
call_5540 = relay.TupleGetItem(func_4519_call(relay.reshape(var_5541.astype('uint8'), [4, 8, 8]), relay.reshape(var_5541.astype('uint8'), [4, 8, 8]), relay.reshape(call_5500.astype('int32'), [891, 1]), ), 2)
call_5542 = relay.TupleGetItem(func_4523_call(relay.reshape(var_5541.astype('uint8'), [4, 8, 8]), relay.reshape(var_5541.astype('uint8'), [4, 8, 8]), relay.reshape(call_5500.astype('int32'), [891, 1]), ), 2)
var_5558 = relay.var("var_5558", dtype = "float32", shape = (9, 9, 11))#candidate|5558|(9, 9, 11)|var|float32
bop_5559 = relay.maximum(var_5519.astype('float32'), relay.reshape(var_5558.astype('float32'), relay.shape_of(var_5519))) # shape=(9, 9, 11)
output = relay.Tuple([bop_5520,call_5524,call_5540,var_5541,bop_5559,])
output2 = relay.Tuple([bop_5523,call_5525,call_5542,var_5541,bop_5559,])
func_5562 = relay.Function([var_5519,var_5541,var_5558,], output)
mod['func_5562'] = func_5562
mod = relay.transform.InferType()(mod)
var_5563 = relay.var("var_5563", dtype = "float32", shape = (9, 9, 11))#candidate|5563|(9, 9, 11)|var|float32
var_5564 = relay.var("var_5564", dtype = "uint8", shape = (256,))#candidate|5564|(256,)|var|uint8
var_5565 = relay.var("var_5565", dtype = "float32", shape = (9, 9, 11))#candidate|5565|(9, 9, 11)|var|float32
output = func_5562(var_5563,var_5564,var_5565,)
func_5566 = relay.Function([var_5563,var_5564,var_5565,], output)
mutated_mod['func_5566'] = func_5566
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5598 = relay.var("var_5598", dtype = "float32", shape = (3, 15, 5))#candidate|5598|(3, 15, 5)|var|float32
var_5599 = relay.var("var_5599", dtype = "float32", shape = (3, 15, 5))#candidate|5599|(3, 15, 5)|var|float32
bop_5600 = relay.mod(var_5598.astype('float32'), relay.reshape(var_5599.astype('float32'), relay.shape_of(var_5598))) # shape=(3, 15, 5)
func_2345_call = mod.get_global_var('func_2345')
func_2346_call = mutated_mod.get_global_var('func_2346')
call_5604 = relay.TupleGetItem(func_2345_call(), 0)
call_5605 = relay.TupleGetItem(func_2346_call(), 0)
uop_5623 = relay.sin(var_5599.astype('float64')) # shape=(3, 15, 5)
output = relay.Tuple([bop_5600,call_5604,uop_5623,])
output2 = relay.Tuple([bop_5600,call_5605,uop_5623,])
func_5640 = relay.Function([var_5598,var_5599,], output)
mod['func_5640'] = func_5640
mod = relay.transform.InferType()(mod)
var_5641 = relay.var("var_5641", dtype = "float32", shape = (3, 15, 5))#candidate|5641|(3, 15, 5)|var|float32
var_5642 = relay.var("var_5642", dtype = "float32", shape = (3, 15, 5))#candidate|5642|(3, 15, 5)|var|float32
output = func_5640(var_5641,var_5642,)
func_5643 = relay.Function([var_5641,var_5642,], output)
mutated_mod['func_5643'] = func_5643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2188_call = mod.get_global_var('func_2188')
func_2190_call = mutated_mod.get_global_var('func_2190')
call_5711 = func_2188_call()
call_5712 = func_2188_call()
func_1880_call = mod.get_global_var('func_1880')
func_1885_call = mutated_mod.get_global_var('func_1885')
var_5729 = relay.var("var_5729", dtype = "float64", shape = (135,))#candidate|5729|(135,)|var|float64
const_5730 = relay.const([[-2.715320,-9.048644,-0.627863,-3.088279,1.051946,-1.801744,5.445620,-4.232179,-1.367886,-3.179728,-1.526475,-0.490687,1.093227,5.922779,-0.876245,3.208029,7.973013,4.487853,-2.909689,7.294552,-5.597013,-2.635957,3.974888,2.774534,-4.894673,-3.362131,4.378012,-6.890704,-7.327759,-4.559031,8.664888,-8.169896,-1.857609,1.603012,3.880785,-4.918565,-7.723855,0.110872,3.840250,8.366656,-0.582372,-7.404323,-0.845560,1.407781,-8.745930,-0.627161,7.157922,-1.335074,-2.402019,-2.971729,5.744226,1.086865,3.852711,7.142810,-8.481788,4.695743,-8.801799,-7.218058,-8.749424,-9.653399,8.238365,-7.687345,7.570681,-0.498254,-9.810912,8.561679,7.687931,3.894757,-7.118006,-4.964277,4.141498,0.328252,0.420455,1.931328,2.070909,6.919993,-1.236595,9.598143,-4.331080,9.232401,-5.548269,-5.027166,3.976954,5.873294,-8.812197,-5.407391,4.494229,-8.307550,4.985439,-9.667935,6.705001,-6.102438,8.612524,3.474220,9.179227,8.311925,6.332750,-2.060094,4.460958,-9.478107,0.497578,-7.071292,6.421362,7.686695,-4.293652,0.310422,4.434610,5.327051,-0.545498,4.855048,0.581121,4.191479,-5.338224,3.309420,8.613827,-1.083130,8.776085,9.581324,3.584122,1.204838,-8.225643,5.744842,-3.713493,1.857145,3.598033,9.665003,7.139206,6.703707,-5.364922,2.185017,1.352709,-8.441379,-2.532889,1.311910,-0.359170,9.995153,0.092242,9.113085,3.786060,-0.550363,0.338265,8.128930,2.613441,-7.506416,-7.899133,2.857612,5.096097,-8.596370,-8.729282,7.884239,-9.065677,8.741029,1.761250,-1.149516,2.911766,1.459579,-9.224134,0.442119,-4.708237,6.625977,-7.887107,-2.041691,-0.159626,6.655756,-2.067591,4.099168,-5.506439,-6.626669,6.334150,-6.564516,-1.552638,3.204045,9.303412,-7.432921,9.861076,-4.256438,-6.948104,9.949818,3.092582,5.032795,-1.179237,-4.987306,-3.762101,-2.154879,0.898271,-6.098004,2.199776,-1.405650,7.418866,-4.673917,-1.207782,-2.757929,7.258676,5.562249,-5.508727,-2.808326,-8.186602,5.360816,0.694910,-4.853709,5.833908,-6.730720,5.753798,5.449843,4.011790,8.786517,-1.857469,6.922222,1.260905,-4.292715,7.877748,-6.111356,8.222581,-1.570966,-4.417409,-2.729783,-4.608750,-2.808684,9.834289,-4.106062,0.958040,8.691893,9.980146,8.522716,3.896702,-6.315689,-6.789764,-2.648699,5.803133,-3.405798,-1.891087,5.922739,-2.453473,-4.918623,8.687359,-0.833428,-4.470237,-1.342725,-1.472206,-0.624214,7.689727,5.453642,-6.943643,2.341282,-7.176489,8.375399,-6.572392,3.793460,-9.360636,8.421529,-2.369121,-0.748297,7.154347,-4.465754,-6.695531,0.771389,-5.769245,1.651210,8.456817,-0.861862,-6.100573,-7.710539,-6.828301,0.263773,4.320017,-7.337100,4.903387,-4.132863,3.287394,-1.136176,2.566260,2.761438,-9.764535,-3.211022,4.021545,-8.336389,-0.576527,5.003967,-2.620465,6.241632,3.631622,-9.084876,-9.990063,2.784426,0.085770,6.326865,8.330300,-4.020694,5.840206,0.907931,6.293989,5.763635,-1.332396,-8.222853,3.082543,-8.812378,0.570601,2.445506,5.307664,0.895526,3.188583,-7.540314,8.203882,-2.718067,4.282503,-7.836288,2.602542,6.702199,-1.240870,3.646559,7.446094,-9.820164,-8.822538,7.054724,-6.744164,-0.722200,3.659552,-8.592293,-5.442598,-6.222708,1.916301,-8.988177,-8.605703,-1.452952,-4.256927,-8.437561,-3.892971,-2.793842,6.778427,-1.003305,0.804533,2.531965,6.440599,2.387595,-4.462996,-8.343309,-8.857227,3.764128,-7.091382,7.339202,1.321374,-8.191382,-4.095802,-7.786038,-1.800339,6.384412,7.563320,4.155858,4.556448,-6.807125,-0.145419,6.953907,-2.574567,9.516159,-7.817225,9.840586,-9.396331,7.976345,-6.028043,-9.708418,0.264107,-8.423142,-1.945294,9.895899,0.706125,-3.825687,-8.380410,-1.401471,-4.384226,8.730291,9.636626,-6.142731,1.066495,-5.812380,7.086741,-7.292168,6.094933,8.273901,-3.408639,1.589016,7.263336,7.429238,5.645756,-8.752742,0.683995,-5.659636,-5.648645,9.642074,5.524619,4.630477,-9.787788,5.995935,1.616901,-2.381311,2.257657,1.652334,3.547293,4.240037,-4.753626,-0.476864,3.678307,-5.247448,9.119852,4.470010,-8.149782,8.567275,9.095150,-9.761028,2.717866,-9.069118,-3.997616,5.303954,2.599061,-1.488770,-2.518148,0.794340,9.016128,1.572654,2.574999,1.268365,-7.815434,6.475921,2.673220,-5.589283,-6.766025,-3.079938,-4.473821,-4.903183,-0.113641,7.253038,1.145308,-8.257610,6.392650,1.573695,4.438742,-1.801614,1.722422,1.896403,2.664287,8.366927,-5.890394,-3.211160,-8.458496,-8.470930,4.162957,7.069180,3.394635,7.336968,-7.189360,0.416684,-6.824498,5.232220,2.604213,-3.903821,-3.295821,-0.792195,6.146824,2.670706,2.982421,-9.201188,0.205898,4.705895,-7.349858,9.318064,6.885179,-0.272802,-4.632426,0.109837,-2.894794,-1.366274,-9.409668,9.198967,2.853489,1.226883,8.970583,1.143462,6.665445,1.741219,-2.278974,-7.766929,7.515348,0.260307,-6.729308,-8.373632,-7.112253,4.174495,3.955827,6.446125,5.465910,-1.322277,-5.479454,-2.381077,-9.993864,7.675840,-6.775483,2.080718,-6.718640,-2.111631,7.017476,8.639261,0.572801,-4.348014,-6.011461,-2.361677,-5.460315,-0.665105,-0.258187,0.435247,-1.495992,9.910610,-9.099037,-3.750333,7.635228,-7.357406,4.831205,1.001700,-4.861629,-6.544064,3.971599,6.107815,7.135934,-6.622628,-2.850708,-8.339456,3.847463,5.088592,-9.479101,-4.689615,-3.967068,4.514892,3.902213,7.402673,-1.156369,-8.939953,-7.482379,-1.736542,8.290223,2.803749,-6.354016,-3.871843,-6.549570,4.049358,9.613149,-5.010516,-3.877819,-8.433252,-0.013347,-7.000909,4.785389,-5.842253,-4.031947,7.654077,-5.596584,2.488965,-2.243034,-2.749340,9.890409,-6.850947,8.824503,6.624927,-4.734537,5.148877,7.120619,5.503095,-0.960314,-0.569542,-3.631813,-5.158258,-6.971937,3.494448,1.617931,9.429178,-3.810581,-0.151243,2.823599,4.853064,6.747088,-2.250662,-4.944034,8.190898,-4.332964,5.446140,4.772103,8.687199,9.622928,-7.826384,-2.757708,-9.004528,5.257274,-4.836641,-4.953370,-7.854142,0.228245,-6.669888,8.700299,-4.174280,6.789225,-8.942020,-4.734441,-8.314226,9.855194,-5.429050,4.238864,-7.220235,7.687195,1.647084,-8.285561,0.586854,-7.098367,-6.993212,9.633034,4.153625,-9.190995,7.018641,6.239130,3.582632,9.584520,-3.428208,-1.897903,6.614404,-0.770289,2.063746,9.887188,-7.232206,-7.986779,2.722665,1.044315,-9.505743,-2.580387,-4.617776,1.100758,-2.718681,-6.784018,0.008966,5.508309,-2.486256,8.647721,4.859270,8.626865,6.145294,-6.153768,0.847302,0.309612,1.349454,-3.446599,-0.650159,1.210458,-0.398111,0.592580,-5.109615,-7.490274,-9.697669,-2.580249,-7.318081,3.892916,5.519148,-3.961637,-4.473187,-7.377470,-0.119364,7.045467,9.131014,1.111289,-5.233203,4.059216,-4.723084,-6.060527,-6.039505,-3.069541,-9.251535,-6.658716,8.782930,-5.620024,-7.632007,8.590879,4.276003,4.616248,-1.974707,-4.352621,-3.268481,4.067183,-2.431492,6.490533,9.971769,1.962582,-5.367842,0.303884,4.928339,4.293693,1.238858,-3.865274,1.218702,6.821422,-9.896917,6.216604,9.476718,8.901430,-8.520002,-4.803715,-1.003362,7.846587,0.054787,-4.054961,-9.782301,7.169640,8.187242,4.521996,3.283098,-3.924534,-3.940082,-5.408917,-6.346214,6.939403,7.188253,-0.620354,-7.593651,-1.550548,4.382284,-4.423066,-4.017939,5.402124,6.845699,-7.841232,2.016634,-4.485077,-5.209170,0.437968,3.761768,5.517110,0.659489,-5.145863,6.494383,1.306585,-7.930927,0.160041,7.107598,-2.034230,2.657121,-4.157846,6.445716,-0.432762,7.018965,-2.019948,1.430259,7.152436,-9.229925,-5.163092,-3.270731,-0.599803,1.895301,2.700663,-2.515007,7.550264,0.391505,-4.452718,-4.507050,-1.320625,-3.886221,-7.977974,5.399310,-6.442139,-5.633876,1.960710,1.023556,5.702458,1.322700,1.480691,-9.565209,4.754830,-3.313481,-5.478807,0.465232,0.187596,3.743129,4.781454,7.651485,-8.233610,-0.116053,8.103310,6.653175,-6.577080,7.008742,-2.300572,-8.063741,0.525927,2.920302,7.587204,4.877534,3.977852,0.767583,7.973756,-1.209106,-7.805993,2.124601,-7.816520,-5.219518,-7.288311,5.347114,1.755828,-3.912265,-2.199285,-3.554787,-1.793359,-6.824435,-4.100975,-9.108458,8.565485,-3.044330,3.335302,7.681307,-4.066927,-8.580680,5.312951,-7.140532,9.436235,-3.936491,-3.088890,-0.229099,-6.038972,-2.688435,-6.226610,-2.201926,-6.212496,0.590661,-5.237496,1.435526,-6.176924,8.307959,4.799451,-4.762053,2.029494,9.172482,8.793179,-5.975578,-9.214201,-9.855702,-3.554112,-6.329143,6.793451,-5.014262,-6.808812,9.548633,-3.497044,2.691236,-4.175411,-7.556795,-2.040339,4.392882,5.578980,6.802715,4.070429,-1.121369,-9.009088,-2.841001,-2.725213,5.584887,-5.106843,2.836499,-3.290865,0.364054,-6.735023,-6.531742,1.733208,-2.633257,7.013937,-9.587553,-2.430803,-0.711409,-0.890061,-9.246539,-5.427403,9.560954,-5.212982,3.112840,3.179349,0.921414,-8.459240,-6.685327,-8.692724,8.640642,-7.044569,-1.084303,-2.227415,6.861552,7.225815,-7.508963,-4.145135,-3.431232,-0.408857,8.069313,-8.302759,-7.955877,-2.124387,-0.044122,9.347473,-2.323928,-2.146515,-2.493878,-6.236556,1.136810,-9.349047,8.277027,8.445879,3.889631,2.754558,-2.499366,-4.048384,-6.099800,7.337029,8.321543,-9.407265,8.760212,-5.791928,-4.797919,4.097684,-1.411263,1.427480,-2.624100,5.728773,-6.681656,-0.377817,3.657821,7.953014,1.111539,-7.586778,-6.271086,2.000688,4.337831,3.306694,-2.886954,4.904167,-3.217136,-4.323823,-5.352874,1.266170,-5.282938,4.048560,-6.448544,1.318917,6.505411,-7.609672,3.268863,4.711791,0.349703,-2.529763,-3.283311,-1.189759,-8.639939,5.627388,-6.201789,4.577768,7.251878,-3.739537,-5.574136,0.366403,-0.326691,1.403338,0.551156,-7.317380,9.447641,-9.883173,8.151770,0.789042,6.154468,-6.045571,6.542211,-5.732504,-7.180153,-3.263693,5.304215,-8.491414,7.448673,4.281787,8.927708,3.506566,-7.165035,-3.055428,-8.779653,5.353551,-5.850875,4.350303,0.892402,-5.975252,6.593423,-2.834726,9.659948,-0.971036,-4.902636,8.424039,7.101268,4.722324,8.861003,2.397746,9.819905,4.247731,-9.644679,0.234025,5.601916,6.873312,-0.368320,3.145739,9.543827,-6.592979,1.205599,2.829274,-3.396465,-5.990145,-1.610151,3.917714,-4.622493,0.909137,4.534599,-2.778863,8.675411,6.181170,-7.982154,0.767257,-4.539111,2.167122,7.529454,9.122961,6.776958,2.472971,7.161696,3.273552,-8.531503,3.263771,6.443599,-4.712281,8.750309,-7.345982,-9.334188,9.178508,4.897347,-4.460920,6.665243,-5.259209,0.776341,-4.817182,-2.146914,-3.876030,7.164719,9.502812,8.323064,9.048193,5.213427,-6.234421,8.829808,1.375749,1.625280,6.273883,1.062959,2.312929,-5.508075,3.501452,-5.075655,1.705929,0.101931,-3.035074,-8.034850,-5.198295,-9.724798,4.610887,-7.279924,-4.097594,-8.941001,8.074238,-0.938605,-0.342309,-1.416336,7.492184,7.092988,-5.491179,2.592165,3.609437,-5.971692,-6.822034,3.162013,-7.972203,-4.604713],[0.161975,1.946717,-9.784142,9.947722,-1.101392,-6.881702,-9.035873,-0.238921,3.412302,-8.082847,6.673730,-8.663075,5.792702,4.071183,7.244284,-7.664678,-5.495514,4.363526,2.532734,3.075487,0.384286,-2.068714,0.572602,-0.198382,-7.562814,4.028406,-2.074634,8.312016,3.003796,5.053820,-0.483571,1.797569,1.979386,2.319018,-3.628470,-5.643782,1.427055,1.167168,6.140427,7.729574,-2.918202,9.047733,-1.859367,-4.008030,8.617562,-2.265080,-3.626239,-2.576163,3.391161,-5.615580,-9.249020,2.338724,2.153561,-6.168024,-9.747775,4.900493,9.591663,7.068950,0.265753,7.884603,-2.183015,1.291811,-4.128650,-7.937479,4.944001,4.940984,-9.854272,7.758484,5.434174,-9.860381,6.689220,9.245330,6.188517,-0.686917,-2.269222,3.472289,-0.055156,6.322249,2.747265,-3.172301,3.084280,-1.464769,-9.760206,8.424309,-0.144615,0.590364,8.409107,-0.163536,-3.133897,-6.936622,-2.923153,7.876031,-3.235520,8.526206,-3.932656,-9.255181,7.552382,0.299167,1.496052,-6.511859,8.941088,6.828947,-6.530567,7.352319,5.597051,2.713334,4.089809,-9.416159,-8.962681,3.299714,0.980342,-1.790903,8.426961,-2.360418,-4.454690,-8.951084,-8.682284,9.067559,6.994241,1.913021,-4.505463,-2.413295,6.699170,6.010112,7.623943,4.053902,-4.090046,3.664027,2.386101,-4.640172,-7.291893,1.064284,0.778948,3.291255,1.738957,6.129052,-9.055734,-9.215583,-8.194407,4.555322,-7.703130,-6.245575,-8.577278,-8.570653,1.062731,7.246588,6.524843,-0.195514,3.432820,4.085347,6.198585,-2.972625,9.606307,3.374123,-3.382893,0.382413,3.318953,-3.715331,5.495068,-5.171141,3.063412,3.376331,-3.605150,0.810027,6.870704,8.199811,2.681102,-3.012299,-6.127906,-7.314787,-6.069794,6.941715,1.043838,0.744193,6.678103,1.711515,-9.609329,4.734946,1.723151,-3.264220,-2.372923,8.811519,-0.344246,-4.749178,0.960754,4.232531,-6.769051,-0.765081,-3.025271,-4.523260,0.983836,0.278445,-5.427956,-7.967963,8.977667,9.785106,-3.151599,-5.415641,-7.054626,1.506366,4.628282,-1.737010,-8.192594,-8.438750,-8.480075,-4.102532,-9.043777,7.687967,-4.141028,-8.227829,5.471815,7.191912,-0.599957,-0.731843,-8.925140,9.687571,-0.267812,7.396575,-1.354026,-1.050950,8.682444,-6.273967,-5.366472,-3.710422,5.664211,-4.621198,-8.292694,4.199410,4.411148,-2.451096,9.163838,-1.978772,0.964298,-9.027033,7.303013,-2.087476,1.454129,-9.754291,1.707751,2.324789,-1.617780,7.846598,9.014997,0.497593,-6.699739,9.684959,1.353815,6.764747,2.083631,-3.317932,-2.546874,3.883388,7.035188,6.894837,5.851529,-0.440639,1.382421,-6.212191,-4.750180,7.043385,0.140429,-9.856408,-1.234300,1.956532,-4.785047,-1.110874,7.265641,-8.936627,-6.008361,8.824581,-4.198167,4.214356,0.363450,8.705702,7.408829,-8.972784,7.492487,-5.982426,-5.777492,9.376799,3.082803,-0.417651,-9.158207,-6.314850,-3.378049,-2.623478,1.554756,-4.771777,0.392570,-0.862340,1.286211,-1.690144,3.052673,-3.930371,-2.368956,-0.374964,-5.865391,-1.561617,-6.117155,6.861793,-3.047793,6.101001,5.075674,-3.593695,8.240492,7.548965,9.512886,0.076378,-2.141185,1.696752,-7.442046,6.239286,-0.078961,5.564227,-5.917984,6.805886,-8.636199,-6.288913,2.857097,-3.947643,1.120559,0.214793,4.669219,1.455692,-7.509069,6.095978,5.655975,2.957459,-3.548335,-3.205043,9.357301,-9.635084,-0.490477,6.214408,9.061202,6.647024,-9.983864,-9.580740,0.859561,7.517726,-1.121287,-8.232385,4.055483,1.805737,-2.300184,-7.555182,7.288597,4.339730,6.618766,3.787491,0.131119,9.434259,9.668035,2.964701,-0.445023,0.865766,6.044029,-1.794879,5.719018,6.119206,8.258976,-2.205912,-6.382417,-6.262425,-5.674634,-9.015312,-4.138777,1.582481,9.310826,5.096234,-9.087819,-4.334630,-5.742421,-6.165699,-6.325044,-9.201976,-9.358071,1.561026,-6.533511,-5.720430,6.304185,-3.471335,2.795729,-6.547451,1.886147,-7.515387,-4.276780,3.147085,5.838031,-9.018702,4.575684,8.047727,3.711341,-4.265850,-4.488699,9.787435,-0.854875,-5.603519,2.867137,-7.794937,-6.607127,-5.960648,-1.418410,1.114232,-8.052014,9.048372,-0.063310,1.893728,7.075146,-3.487287,-7.347585,-2.816981,7.557146,-1.237039,7.239124,8.375059,7.619548,-3.897508,-6.049247,0.736410,1.741213,-8.462230,0.583549,-0.489853,-4.509484,5.018915,-1.138803,8.471142,-3.767115,-4.108779,-8.721117,7.427244,-0.998654,0.844340,3.295775,5.736429,-0.019307,7.328219,1.705701,-6.679336,-3.256884,-9.472332,7.621959,-0.194400,-4.141702,3.760551,6.499521,-2.237103,-7.707688,-9.305920,6.038504,7.190000,7.637132,9.565532,-0.438606,-5.776375,2.236975,3.763875,-8.077703,-5.664310,-7.520175,-9.703640,-3.255621,8.019407,-9.067712,1.706117,8.729972,7.129475,2.777845,9.282062,1.225240,-7.270932,4.460099,4.407497,7.652774,-6.836519,-8.350186,7.839959,8.737726,2.008645,-5.817203,5.071746,5.896500,4.918247,-8.619217,-0.682005,-0.248327,-1.309858,-7.671982,-7.803185,-5.042631,-3.230315,1.449877,0.351607,-6.979190,-4.640039,9.297138,7.064026,6.656169,9.208774,1.581082,1.657039,-0.339210,8.040503,4.191135,4.854555,-2.411595,-2.878261,3.099636,8.352819,2.484754,3.156291,5.828933,4.690416,0.261644,-2.106150,3.216408,-2.901521,-0.747703,-0.207718,6.602488,4.601393,9.562520,1.824244,2.941119,9.124123,0.476827,-3.549616,6.225307,3.258972,-5.070597,0.957904,4.277373,-2.967880,-3.163079,7.590740,-4.127811,8.283457,0.398651,-7.091425,3.963171,0.349087,-7.020330,-4.049741,4.740626,-9.283043,1.154629,5.177981,-6.790886,-0.104974,6.376513,-9.627281,-0.901458,2.903503,6.748653,2.893409,2.782079,4.797912,-7.412191,9.339756,9.294645,0.609167,-8.850127,5.514261,-8.296526,5.679543,2.649234,8.847122,7.870282,4.646118,2.221203,-3.700260,5.594745,-8.827888,6.874739,-3.739389,-2.346188,3.266918,-4.385119,4.437182,3.288979,-2.563293,-2.797468,-3.408520,5.061869,-0.839859,-8.637885,9.319151,-3.010600,8.957875,-6.367189,-5.525771,-5.940698,7.629917,-9.295239,2.793197,3.880038,9.032639,-0.322518,6.534040,3.361382,-5.155084,-5.042449,-2.983677,7.510549,-6.940414,1.501703,-0.903095,0.501742,-9.491154,-0.245974,7.667429,-6.987493,-9.444984,-0.303808,-7.405928,4.511450,-4.181627,-9.102552,4.327179,-2.218055,8.039941,-2.141057,3.068848,9.857080,-9.380341,-3.015742,6.977023,-8.728590,3.526972,-3.564722,-0.957556,-4.862003,4.819686,2.311349,-1.689922,5.088734,2.106508,-1.617074,0.412928,1.856247,1.944767,1.849113,-5.612089,-1.899619,-9.109603,1.917057,6.160502,4.308154,-7.527470,1.902462,7.926604,6.553774,-7.238175,4.750603,1.736049,7.466560,-0.638417,-2.240617,-4.204185,-8.756658,3.887401,-2.894596,6.729202,4.372725,-8.712403,7.390560,8.079436,2.824011,-6.199560,4.791297,3.782622,-0.661371,3.218025,-7.799591,-4.813917,3.419964,-1.812387,-3.552867,3.823336,3.153795,-5.630455,3.738781,6.458859,9.461735,-2.900195,-8.856237,-3.088765,5.742318,8.320973,5.614785,6.653770,0.243105,-2.559753,8.413231,3.068674,-8.511144,9.936238,-3.287779,-3.472514,-2.673284,-4.002117,-4.944970,-4.150944,5.496742,6.228937,9.018410,7.888489,-6.655593,-2.796376,9.396901,-0.840265,3.029880,-1.274036,5.167399,2.008510,5.061686,-7.354143,-6.660149,4.942938,-5.978677,3.228668,0.802927,-1.238295,-8.150277,-9.415607,-3.172633,6.213337,-8.717565,7.050963,-9.459736,-5.988369,7.398761,0.621410,2.235206,2.653761,4.445244,1.422044,4.985560,-7.920628,-0.094659,7.153915,-3.430967,-4.853415,-7.057847,-7.663768,-5.481560,-4.860626,0.120848,-0.292147,2.133643,-7.463158,-9.066190,1.594986,5.068905,9.837956,-9.495335,-7.364440,-9.733862,-1.859487,4.262357,1.716374,1.960756,8.191444,-8.086828,6.016468,8.589073,-4.283242,5.051084,8.068494,-5.649989,-5.245550,6.251671,2.228795,2.180909,3.437651,-6.180856,-5.542242,-7.409415,-0.930384,0.421792,-4.460087,3.529710,-2.582717,9.161996,6.212534,2.040672,-5.611691,-7.593860,-7.288332,1.442979,-0.529660,-0.855980,5.055767,-3.243123,5.358445,5.494369,-6.194879,0.350622,8.032140,-5.975925,-3.178124,-0.257885,3.578687,-2.404882,-3.792723,5.794575,3.472176,-4.538595,-0.056312,-6.278955,-2.561847,-6.857255,-4.338059,-7.051020,-2.741800,-9.525001,-7.220833,6.768505,6.150785,9.423964,-0.284636,5.306550,-5.394682,-1.084977,-4.349554,7.563598,5.039720,-6.288773,3.006175,1.274736,5.012343,-1.383890,8.890796,6.276404,3.536288,-1.670933,6.770693,1.008262,4.561384,5.999666,-0.888293,4.877900,-9.974519,5.974816,-1.894382,0.050373,-7.364022,2.946527,4.373932,-6.509423,5.438015,-5.828182,-9.511319,-9.279019,-5.254996,-3.717370,-5.950673,-7.470852,0.952635,-3.356839,-6.738967,6.837184,1.661238,-3.808289,-7.281391,4.122615,-6.238681,-6.336869,7.574577,-0.248260,-8.429970,-0.082199,-4.674502,1.584372,-4.047928,6.815029,2.149115,4.109406,5.944463,-0.558505,3.679854,6.975462,0.805034,-1.127654,5.964679,-3.069832,5.642412,-9.578173,9.021059,8.212489,-0.521063,8.983363,-1.716130,-2.760164,-5.465964,0.488710,7.153884,3.372844,-6.709721,2.079816,1.337061,-7.932986,0.256726,-3.002061,-8.671828,-4.498544,8.286834,7.970910,2.571847,1.309687,-5.435497,9.231865,-2.879171,-2.840676,-7.183288,-8.872568,-7.077294,4.395140,6.609112,-9.339174,5.616080,-0.197973,-9.588483,-2.273061,-9.989425,-1.778586,-1.536379,-7.379485,-9.232347,-1.849996,-8.057575,-6.652163,0.201764,-4.495492,-7.560147,-0.015717,-2.901959,-8.747314,-7.817558,-2.429505,-8.528876,1.518820,-6.845337,9.217832,4.409293,6.767210,-9.023299,-3.637714,9.791819,9.512483,0.050868,-1.408213,-7.651420,3.322466,7.545283,0.856005,-8.044754,9.445200,-4.920297,7.876309,-2.682292,-4.720132,0.820651,-6.268205,1.354975,-3.992694,7.092196,-1.234715,8.083213,9.798109,5.357417,-1.344168,2.866127,-6.747891,4.233184,3.736382,5.830590,-3.689696,-3.723168,0.535491,-4.481132,7.668001,-0.394546,-9.416625,3.496495,3.073725,-2.638612,-3.959253,8.673341,-9.136923,-6.123786,-2.640538,5.222408,-1.622446,4.642279,0.735884,9.155339,0.676315,7.928183,7.833648,0.110401,4.338507,7.620911,-4.984612,8.697577,7.583273,-1.080114,3.909746,-1.742177,-8.122228,1.544196,-7.043282,-4.058277,5.997425,3.936651,-2.964636,6.128159,-8.903282,4.299610,3.605594,7.965414,-3.345933,-7.831011,2.647624,-9.001733,-2.463937,-1.025578,-2.198485,-0.613625,-4.491990,2.625641,7.312020,-0.167308,4.339937,-9.086603,-2.718763,1.249355,1.539497,-7.116119,-3.474730,-9.044112,1.521654,5.430660,6.173498,0.052451,5.805101,-9.840828,6.528331,4.286329,-4.160130,5.558266,0.442747,-4.268572,-2.135626,-5.997393,5.294985,3.065371,8.051248,-1.853446,-1.154107,-8.769104,-0.912007,-9.424533,0.186590,-0.717684,7.343467,6.530359,-7.262244,-2.359602,-2.650938,-5.363866,8.930020,-0.867219,-8.390297,-0.701709,-2.728426,8.461191,3.983609,-1.394545]], dtype = "float64")#candidate|5730|(2, 1080)|const|float64
const_5731 = relay.const([-7.912756,1.546075,-6.252897,0.627840,-4.570201,-2.927383,2.714011,-5.289017,3.867382,4.690625,2.936674,7.193919,-6.705788,-8.685731,-4.293045,4.947633,-7.829862,-9.727106,-6.584835,9.422365,5.769046,-8.469573,7.254191,-0.650126,9.198356,-8.139367,-7.803322,-9.167820,-9.184861,-3.693685,-9.243526,7.423963,4.267987,1.461390,-0.647518,-8.907810,-3.539398,-2.158041,-8.259308,-0.534430,-3.610485,-5.013118,-9.393523,-9.673405,1.795028,-2.512171,-0.894965,-4.599931,6.221049,0.211406,5.842092,1.776286,-3.616901,6.170518,-0.764161,8.412643,-5.501605,-9.760289,-7.198749,0.115939,1.440923,0.668578,-5.301418,4.710303,2.800898,3.029188,5.337764,-8.927012,-0.126526,-2.655420,0.860210,-1.451201,4.769130,1.533223,5.890416,-0.768800,-4.458468,-6.084096,6.390096,-4.250238,-9.491671,6.417782,-3.272279,8.855175,0.315071,8.253653,6.810656,4.812571,-1.905187,-8.160194,4.336390,9.330679,-0.024650,-4.442877,5.582275,-6.050514,-1.275601,5.814200,1.449245,-2.881549,-4.737787,-3.794730,2.954984,5.534784,-2.427530,0.615899,-7.438259,6.792611,-7.387659,-4.415498,-7.676856,3.990001,8.571167,7.681955,6.551973,5.594332,0.684756,-2.209360,4.585066,5.258683,9.302999,-5.588840,6.427376,6.708412,9.797795,0.578755,-1.067652,3.574712,-3.364680,3.115463,-8.179188,4.667764,-3.579908,-1.388886,8.660395,5.140292,-2.259511,-4.017250,4.326649,2.361984,-3.003429,-7.068974,9.072117,-6.153610,-2.548378,5.154337,-7.975399,-2.295434,-0.081589,5.277373,-4.130084,1.129334,-5.983028,-6.970452,6.922686,-6.281528,8.406751,-2.569574,-0.690444,-5.136992,-8.764126,8.431152,-8.792603,4.288873,-2.307300,9.955094,0.099146,2.180958,-6.637701,4.728662,0.887084,3.560886,-8.903932,6.428919,-9.768430,4.926752,-5.856109,-7.790449,9.840793,2.159187,-4.602333,-1.926982,4.169711,8.158360,-3.038248,9.188644,-3.595205,-7.186118,2.925009,-1.454433,8.070886,-9.354039,-8.031781,-8.703660,6.313479,-6.165843,-7.497247,7.216653,-2.999981,-0.577460,-3.802699,5.120677,-2.415689,4.763111,6.133038,-7.212602,-5.518631,-5.350907,1.111991,-2.096623,4.952558,-5.544556,8.594259,9.717931,-7.076611,-3.465796,-4.475886,1.681401,1.232911,-6.273056,-4.559626,4.655608,1.775470,-8.461160,4.800466,4.519528,9.107352,-1.082486,-6.652356,-4.004092,4.658501,5.582996,-1.363172,2.847522,4.506124,1.111784,-8.556544,-5.826816,-7.745553,-4.394434,1.760610,-3.512640,4.864056,-5.974858,7.395010,-3.347690,3.418341,-3.567698,-8.869653,-0.976466,0.060625,-9.007854,-8.286262,9.195320,8.078051,-5.891623,-5.266850,3.433275,-5.836338,4.346161,-9.632353,-2.645390,4.496668,-9.007707,-9.553349,8.291382,-6.687376,3.125512,7.738650,0.945405,-5.503887,6.955068,3.291865,-6.543152,-2.852497,0.590979,6.373432,9.376666,-3.149706,5.948181,-6.835350,-9.562834,-4.289429,9.042306,-1.266247,-5.620451,6.542937,7.005184,-9.331272,-0.658739,6.958216,5.192035,3.056955,2.134069,-7.446042,1.384113,-2.074493,0.637558,5.138286,-9.964875,-7.618826,7.811926,-8.519685,-4.232330,-4.415580,-1.135693,-9.354499,9.838896,-4.520240,8.836236,6.678703,7.433973,-5.241474,-5.789233,9.886561,6.368680,5.809109,5.843218,-5.406065,-4.370353,-7.605174,-9.333188,-2.073641,7.920068,2.013149,-0.036621,7.539121,-9.480643,-1.186237,8.793156,1.480483,0.997664,4.550201,-2.244405,-7.591130,9.401075,7.777167,8.622587,0.819761,-3.592505,6.078859,9.725243,-0.988514,-5.823559,-9.142235,9.819492,8.591025,-0.459938,8.675346,-6.257108,1.395090,7.847876,1.416788,-6.615641,9.289104,4.820283,7.816346,1.712231,-1.253119,1.146005,1.931039,-3.244814,0.592434,-4.203974,-4.727242,1.747245,-8.254848,-5.949195,8.003378,-0.797936,-4.202653,-2.877024,-3.367630,6.187908,9.489589,8.267289,4.156805,9.761674,-5.909482,-5.498424,-7.349989,-0.347367,-4.583364,7.039972,4.007630,-0.077087,8.675242,-1.673640,-0.399656,2.477237,-3.867463,-2.043956,-2.407052,-0.772221,7.763069,9.725500,-1.798526,-2.281452,4.130992,5.634664,1.321721,-5.357584,-4.542659,-3.029936,-2.636356,-3.108136,-6.383418,4.939360,0.294328,9.940153,-6.519179,-6.119223,-3.826379,3.924185,-6.438593,2.701172,-2.349528,1.126952,-2.093942,7.551112,6.727346,2.790989,-9.906194,-2.557852,-0.411644,3.639212,4.703322,-2.567131,-4.347027,8.647084,-2.063607,2.938035,-1.777490,0.364748,-3.798364,4.224676,-8.547222,-5.308746,3.738063,-7.903466,-5.415729,-4.375151,-8.526769,-6.519949,-8.573397,8.961509,-5.264723,8.454129,1.566305,9.216274,9.866290,8.531787,1.439339,2.888314,3.934284,-2.439486,0.435034,3.386024,5.615508,-0.280003,5.432478,-0.568181,-5.564531,-6.671281,-6.803599,-7.835818,-5.621596,-4.240977,4.444607,7.081865,1.396165,-8.217498,-1.674836,-6.597839,7.731423,-4.584997,2.032831,-2.541340,-0.876825,2.062036,-1.515960,9.456702,-5.841246,-6.772473,0.547610,-0.729661,-4.452924,8.857718,-5.973926,-1.677935,-8.041195,-3.071379,-9.626149,-6.746605,4.076802,4.618601,4.057800,-1.078351,-6.603635,8.554617,-5.700981,2.295262,-6.997624,-9.853357,-6.251769,0.834175,6.231513,-7.625941,-5.860818,-3.672514,9.674878,-4.689159,-3.957421,-8.822189,1.131778,-8.831317,9.701647,-6.208567,-1.296956,-5.697433,-8.512317,-8.127290,6.107351,3.176020,2.016403,7.856254,0.156365,1.004203,-0.643653,8.993968,8.042582,-6.837991,4.921136,-9.068896,3.956902,-8.839832,-2.829521,4.367681,-2.615354,-7.499436,-3.916921,-2.997934,9.344803,-7.309222,1.268798,7.992326,4.249612,8.607745,4.088354,6.169158,-0.585090,-8.333581,-1.912008,-1.994046,-6.914814,-9.094586,-5.769826,-3.790401,-4.195645,7.805362,-6.893242,-5.209819,-0.483647,-2.278039,0.586072,-1.807223,-1.980175,6.381998,-6.402084,9.295409,-8.655698,-1.594641,-7.567294,-5.857570,0.090775,-8.471881,-5.878185,2.408428,-6.365936,-0.499117,8.307296,9.864627,2.345253,-2.000149,-3.151175,-2.595371,1.056789,1.243678,-9.187336,-6.179196,3.818314,4.540696,7.083425,7.201244,9.133314,-1.708351,-2.477376,-5.293646,-7.434752,-2.445196,-1.583490,9.017142,7.967759,5.872197,-1.143801,5.282536,-1.443244,3.473421,4.888129,8.363105,7.135576,-1.675641,7.078334,1.051520,2.171364,-5.999248,1.345117,-6.556756,-7.597418,-2.881565,2.732549,-3.156047,-9.563301,-6.605961,-0.773169,-6.763493,0.031186,-1.249682,7.324172,-4.530733,7.013073,-4.345547,-4.904177,9.921841,-6.534388,5.067602,4.136154,5.884862,6.431798,2.375535,3.554539,8.765021,-3.459081,2.108422,-5.996707,9.998260,-1.624377,-6.578383,-9.439892,8.220751,8.571025,-6.621080,9.339405,-0.427168,8.922886,-4.142873,-0.265893,9.182247,4.929351,-5.261487,-3.365964,6.957868,-5.827930,2.519672,3.202365,8.442593,7.120154,8.336675,-1.310276,-8.596120,-2.256877,-1.779118,-3.783341,6.593873,4.274534,6.747881,9.528649,-7.641093,-7.233477,-4.710884,7.859522,-0.283267,-4.695334,0.027167,-0.835240,-9.338848,-2.509237,8.828763,9.301317,9.063040,-5.056462,-7.372433,5.210973,0.238064,8.601627,-5.962930,-1.575106,9.269667,-8.901352,1.475653,-3.574833,6.027081,-6.922540,-7.950607,-2.222499,-4.201088,-3.643732,-9.035601,-2.028237,-3.900712,-3.824629,-9.197866,4.297383,5.762603,-8.892452,-4.528619,-2.879936,2.495615,-4.534839,-7.144439,3.791208,-9.247279,-2.113670,-2.581553,-8.221452,-0.421263,1.032798,3.701878,-3.684620,-4.048412,1.346814,-8.250381,8.403640,2.165235,3.275059,-4.256944,-2.777530,-4.482684,8.755153,0.451441,8.853954,-1.397477,-9.640674,-4.540292,-5.303048,4.411204,1.246725,-1.526720,-9.251772,2.979500,9.813321,-1.016903,-0.562686,-4.932865,2.509041,0.508334,8.751098,5.354515,-9.157045,7.446189,6.533813,-1.925323,-3.229153,4.204923,-0.870528,-2.734678,-7.220273,-3.390028,1.733007,-1.127459,-7.185857,-7.697616,-7.427625,-6.684983,7.189173,3.201887,-2.998706,9.256038,-3.655198,4.850094,7.834773,1.863134,7.123883,-7.077272,-8.789523,2.949787,5.595254,7.757499,-3.413629,-0.629304,1.943653,-2.956386,9.428244,-3.568771,-1.227429,3.757696,6.729117,2.583183,-9.160765,5.542497,-3.525217,9.075686,-0.918115,4.380115,-4.405932,-8.321718,-3.547944,-2.372738,4.546778,7.315658,-0.397551,0.417632,4.643154,-3.329008,1.789182,1.485973,1.710169,5.653815,6.787029,-6.830997,-4.510445,1.179206,6.716271,-4.081918,-6.457562,-8.712510,-2.280659,-0.667142,-6.748464,7.892838,-7.443810,3.522869,-8.424303,-0.425998,-3.100173,8.981267,6.278964,5.986525,-4.550646,8.533934,0.678854,-1.326171,-5.849049,-4.582893,4.273190,-2.560769,-5.450386,0.426028,-2.715629,-9.584148,-0.830527,9.006429,-8.086404,-6.260544,-8.569448,3.962706,5.697272,-8.763332,-4.787412,-1.738311,-0.121503,7.274038,7.866623,4.956990,-7.849929,-9.877552,-0.908106,4.698901,-4.891270,1.266790,9.140196,-2.300214,-8.704348,-7.497309,4.272782,3.260393,5.181655,-8.035125,7.237609,-2.305395,8.205083,1.540792,-3.199034,-3.503805,-7.278645,-5.800009,-3.165131,0.278752,4.440304,2.106966,-7.620289], dtype = "float32")#candidate|5731|(891,)|const|float32
call_5728 = relay.TupleGetItem(func_1880_call(relay.reshape(var_5729.astype('float64'), [135,]), relay.reshape(const_5730.astype('float64'), [2160,]), relay.reshape(const_5731.astype('float32'), [9, 9, 11]), ), 7)
call_5732 = relay.TupleGetItem(func_1885_call(relay.reshape(var_5729.astype('float64'), [135,]), relay.reshape(const_5730.astype('float64'), [2160,]), relay.reshape(const_5731.astype('float32'), [9, 9, 11]), ), 7)
func_4929_call = mod.get_global_var('func_4929')
func_4931_call = mutated_mod.get_global_var('func_4931')
call_5757 = func_4929_call(relay.reshape(const_5731.astype('float64'), [9, 9, 11]))
call_5758 = func_4929_call(relay.reshape(const_5731.astype('float64'), [9, 9, 11]))
func_2265_call = mod.get_global_var('func_2265')
func_2268_call = mutated_mod.get_global_var('func_2268')
call_5759 = relay.TupleGetItem(func_2265_call(relay.reshape(const_5731.astype('float32'), [9, 9, 11])), 1)
call_5760 = relay.TupleGetItem(func_2268_call(relay.reshape(const_5731.astype('float32'), [9, 9, 11])), 1)
func_1023_call = mod.get_global_var('func_1023')
func_1026_call = mutated_mod.get_global_var('func_1026')
const_5762 = relay.const(-8, dtype = "int16")#candidate|5762|()|const|int16
call_5761 = relay.TupleGetItem(func_1023_call(relay.reshape(const_5762.astype('int16'), []), relay.reshape(call_5711.astype('int16'), [14, 13, 1]), ), 1)
call_5763 = relay.TupleGetItem(func_1026_call(relay.reshape(const_5762.astype('int16'), []), relay.reshape(call_5711.astype('int16'), [14, 13, 1]), ), 1)
func_2712_call = mod.get_global_var('func_2712')
func_2717_call = mutated_mod.get_global_var('func_2717')
var_5765 = relay.var("var_5765", dtype = "uint8", shape = (990,))#candidate|5765|(990,)|var|uint8
call_5764 = relay.TupleGetItem(func_2712_call(relay.reshape(var_5765.astype('uint8'), [11, 10, 9]), relay.reshape(var_5765.astype('uint8'), [11, 10, 9]), relay.reshape(call_5728.astype('bool'), [1080, 2]), ), 1)
call_5766 = relay.TupleGetItem(func_2717_call(relay.reshape(var_5765.astype('uint8'), [11, 10, 9]), relay.reshape(var_5765.astype('uint8'), [11, 10, 9]), relay.reshape(call_5728.astype('bool'), [1080, 2]), ), 1)
func_4276_call = mod.get_global_var('func_4276')
func_4278_call = mutated_mod.get_global_var('func_4278')
call_5769 = func_4276_call()
call_5770 = func_4276_call()
var_5776 = relay.var("var_5776", dtype = "int16", shape = (10, 1, 15))#candidate|5776|(10, 1, 15)|var|int16
bop_5777 = relay.add(const_5762.astype('int8'), var_5776.astype('int8')) # shape=(10, 1, 15)
uop_5787 = relay.atan(call_5761.astype('float64')) # shape=(14, 13, 1)
uop_5789 = relay.atan(call_5763.astype('float64')) # shape=(14, 13, 1)
output = relay.Tuple([call_5711,call_5728,var_5729,const_5730,const_5731,call_5757,call_5759,call_5764,var_5765,call_5769,bop_5777,uop_5787,])
output2 = relay.Tuple([call_5712,call_5732,var_5729,const_5730,const_5731,call_5758,call_5760,call_5766,var_5765,call_5770,bop_5777,uop_5789,])
func_5792 = relay.Function([var_5729,var_5765,var_5776,], output)
mod['func_5792'] = func_5792
mod = relay.transform.InferType()(mod)
mutated_mod['func_5792'] = func_5792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5792_call = mutated_mod.get_global_var('func_5792')
var_5794 = relay.var("var_5794", dtype = "float64", shape = (135,))#candidate|5794|(135,)|var|float64
var_5795 = relay.var("var_5795", dtype = "uint8", shape = (990,))#candidate|5795|(990,)|var|uint8
var_5796 = relay.var("var_5796", dtype = "int16", shape = (10, 1, 15))#candidate|5796|(10, 1, 15)|var|int16
call_5793 = func_5792_call(var_5794,var_5795,var_5796,)
output = call_5793
func_5797 = relay.Function([var_5794,var_5795,var_5796,], output)
mutated_mod['func_5797'] = func_5797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5059_call = mod.get_global_var('func_5059')
func_5060_call = mutated_mod.get_global_var('func_5060')
call_5835 = func_5059_call()
call_5836 = func_5059_call()
uop_5837 = relay.cosh(call_5835.astype('float64')) # shape=(9, 9, 11)
uop_5839 = relay.cosh(call_5836.astype('float64')) # shape=(9, 9, 11)
output = uop_5837
output2 = uop_5839
func_5840 = relay.Function([], output)
mod['func_5840'] = func_5840
mod = relay.transform.InferType()(mod)
mutated_mod['func_5840'] = func_5840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5840_call = mutated_mod.get_global_var('func_5840')
call_5841 = func_5840_call()
output = call_5841
func_5842 = relay.Function([], output)
mutated_mod['func_5842'] = func_5842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
call_5860 = relay.TupleGetItem(func_1505_call(), 0)
call_5861 = relay.TupleGetItem(func_1507_call(), 0)
uop_5865 = relay.sqrt(call_5860.astype('float32')) # shape=(9, 9, 11)
uop_5867 = relay.sqrt(call_5861.astype('float32')) # shape=(9, 9, 11)
uop_5872 = relay.acos(uop_5865.astype('float64')) # shape=(9, 9, 11)
uop_5874 = relay.acos(uop_5867.astype('float64')) # shape=(9, 9, 11)
func_4842_call = mod.get_global_var('func_4842')
func_4844_call = mutated_mod.get_global_var('func_4844')
call_5891 = relay.TupleGetItem(func_4842_call(), 0)
call_5892 = relay.TupleGetItem(func_4844_call(), 0)
output = relay.Tuple([uop_5872,call_5891,])
output2 = relay.Tuple([uop_5874,call_5892,])
func_5901 = relay.Function([], output)
mod['func_5901'] = func_5901
mod = relay.transform.InferType()(mod)
mutated_mod['func_5901'] = func_5901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5901_call = mutated_mod.get_global_var('func_5901')
call_5902 = func_5901_call()
output = call_5902
func_5903 = relay.Function([], output)
mutated_mod['func_5903'] = func_5903
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5910 = relay.var("var_5910", dtype = "int64", shape = (13, 14, 16))#candidate|5910|(13, 14, 16)|var|int64
var_5911 = relay.var("var_5911", dtype = "int64", shape = (13, 14, 16))#candidate|5911|(13, 14, 16)|var|int64
bop_5912 = relay.equal(var_5910.astype('bool'), relay.reshape(var_5911.astype('bool'), relay.shape_of(var_5910))) # shape=(13, 14, 16)
uop_5920 = relay.sqrt(var_5910.astype('float64')) # shape=(13, 14, 16)
output = relay.Tuple([bop_5912,uop_5920,])
output2 = relay.Tuple([bop_5912,uop_5920,])
func_5930 = relay.Function([var_5910,var_5911,], output)
mod['func_5930'] = func_5930
mod = relay.transform.InferType()(mod)
mutated_mod['func_5930'] = func_5930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5930_call = mutated_mod.get_global_var('func_5930')
var_5932 = relay.var("var_5932", dtype = "int64", shape = (13, 14, 16))#candidate|5932|(13, 14, 16)|var|int64
var_5933 = relay.var("var_5933", dtype = "int64", shape = (13, 14, 16))#candidate|5933|(13, 14, 16)|var|int64
call_5931 = func_5930_call(var_5932,var_5933,)
output = call_5931
func_5934 = relay.Function([var_5932,var_5933,], output)
mutated_mod['func_5934'] = func_5934
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5942 = relay.const(-2, dtype = "uint64")#candidate|5942|()|const|uint64
const_5943 = relay.const([[[-3,-6,9,-1,-4,-10,4,-1,10,-2,2,10,-2,8],[1,3,-2,2,-5,-6,3,-5,-4,3,-8,7,-6,9],[7,7,-3,3,-3,9,-5,7,8,6,-10,8,-3,-8],[-1,-7,6,10,6,5,6,7,6,1,8,8,4,6]],[[2,-6,-2,-5,7,-6,-9,-2,4,6,3,-5,-5,-9],[-10,6,-10,9,3,10,9,3,-8,3,-6,3,-8,-2],[-3,2,7,-7,8,9,-8,-3,7,-7,3,-9,10,-2],[-10,3,-5,-7,1,-9,8,4,9,6,-3,2,-2,-9]],[[-5,-3,5,-8,-9,5,9,-2,-4,-4,2,-10,1,-3],[5,7,2,4,-4,-8,-7,6,6,2,4,4,6,-3],[8,-3,-7,-4,10,6,10,8,6,-3,2,4,-3,-2],[-4,9,-2,-8,3,-9,8,7,-9,7,-1,-8,8,-8]],[[2,-4,-6,2,-5,6,10,1,1,8,-4,-3,-5,-7],[7,-6,5,7,4,9,10,7,3,10,9,1,-4,8],[9,6,3,5,3,9,-3,-7,6,-5,-4,-2,-6,6],[-9,-1,4,-2,-9,-4,1,10,-2,1,10,6,2,9]],[[-10,9,-3,-6,10,-3,7,3,-1,-3,9,10,9,-5],[3,-2,1,10,4,1,6,-2,1,10,-8,4,7,7],[9,1,-8,-5,-2,4,-5,-9,9,1,-9,-2,3,2],[-10,-8,-5,-3,9,1,-6,-9,-10,-1,2,-10,10,5]],[[10,3,-10,-10,-7,-7,4,-10,-3,-3,-9,-1,-4,-1],[-5,-2,-6,6,6,-1,1,-1,-6,-7,-2,-1,5,-10],[-4,-7,-7,-5,-4,3,7,6,3,-6,10,9,6,-1],[-3,1,-3,-8,9,-7,4,-4,-3,-10,-8,5,-2,10]],[[-4,10,-3,5,-1,-8,6,-3,3,-3,8,3,2,5],[-4,-3,-5,6,-3,-6,3,5,9,-2,-7,-1,10,2],[3,7,10,6,10,5,-2,-8,-7,6,10,8,-5,-2],[-2,9,2,5,-6,9,-2,9,-7,10,-9,10,8,-1]],[[-7,-10,-7,-8,-4,3,5,-6,-8,2,-2,-1,-1,-4],[-9,2,10,-8,-10,8,-1,-4,2,-3,4,6,-8,-1],[-8,-5,-2,6,8,8,2,2,6,-2,-7,-7,-2,9],[9,-6,6,5,-10,-9,5,-6,3,4,7,8,-1,-5]],[[7,3,-3,-1,2,-9,7,1,-7,-10,-9,2,10,-8],[-2,-4,-6,-2,-7,1,1,2,-8,-1,-1,5,-7,6],[6,8,10,6,-10,6,-5,7,-7,-5,3,9,-9,6],[3,3,7,-7,3,4,6,-1,6,-9,6,-7,-2,-2]],[[3,8,1,5,-1,6,10,7,7,4,-5,-8,9,-1],[2,-3,-1,-2,10,-10,-4,7,6,7,-4,-9,-6,-2],[-2,7,6,10,-10,-2,2,1,10,-7,4,2,-6,6],[7,8,-1,-5,2,-8,10,3,6,9,4,4,1,-3]],[[-6,1,-9,5,4,8,-5,-10,-8,8,-9,-2,2,-2],[-10,2,-5,1,1,-3,4,-3,-10,6,6,-2,1,-9],[-7,-6,5,5,10,-2,-2,6,-6,6,9,-4,6,-1],[9,7,-10,-7,2,5,-9,-1,-1,6,-5,5,-4,1]]], dtype = "uint64")#candidate|5943|(11, 4, 14)|const|uint64
bop_5944 = relay.left_shift(const_5942.astype('uint64'), const_5943.astype('uint64')) # shape=(11, 4, 14)
uop_5947 = relay.tan(bop_5944.astype('float32')) # shape=(11, 4, 14)
var_5976 = relay.var("var_5976", dtype = "float32", shape = (11, 4, 14))#candidate|5976|(11, 4, 14)|var|float32
bop_5977 = relay.greater_equal(uop_5947.astype('bool'), relay.reshape(var_5976.astype('bool'), relay.shape_of(uop_5947))) # shape=(11, 4, 14)
func_5069_call = mod.get_global_var('func_5069')
func_5071_call = mutated_mod.get_global_var('func_5071')
call_5980 = func_5069_call()
call_5981 = func_5069_call()
var_5985 = relay.var("var_5985", dtype = "bool", shape = (11, 4, 14))#candidate|5985|(11, 4, 14)|var|bool
bop_5986 = relay.power(bop_5977.astype('float64'), relay.reshape(var_5985.astype('float64'), relay.shape_of(bop_5977))) # shape=(11, 4, 14)
output = relay.Tuple([call_5980,bop_5986,])
output2 = relay.Tuple([call_5981,bop_5986,])
func_5989 = relay.Function([var_5976,var_5985,], output)
mod['func_5989'] = func_5989
mod = relay.transform.InferType()(mod)
mutated_mod['func_5989'] = func_5989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5989_call = mutated_mod.get_global_var('func_5989')
var_5991 = relay.var("var_5991", dtype = "float32", shape = (11, 4, 14))#candidate|5991|(11, 4, 14)|var|float32
var_5992 = relay.var("var_5992", dtype = "bool", shape = (11, 4, 14))#candidate|5992|(11, 4, 14)|var|bool
call_5990 = func_5989_call(var_5991,var_5992,)
output = call_5990
func_5993 = relay.Function([var_5991,var_5992,], output)
mutated_mod['func_5993'] = func_5993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5901_call = mod.get_global_var('func_5901')
func_5903_call = mutated_mod.get_global_var('func_5903')
call_6007 = relay.TupleGetItem(func_5901_call(), 0)
call_6008 = relay.TupleGetItem(func_5903_call(), 0)
uop_6009 = relay.sigmoid(call_6007.astype('float32')) # shape=(9, 9, 11)
uop_6011 = relay.sigmoid(call_6008.astype('float32')) # shape=(9, 9, 11)
func_4677_call = mod.get_global_var('func_4677')
func_4679_call = mutated_mod.get_global_var('func_4679')
call_6014 = relay.TupleGetItem(func_4677_call(), 0)
call_6015 = relay.TupleGetItem(func_4679_call(), 0)
output = relay.Tuple([uop_6009,call_6014,])
output2 = relay.Tuple([uop_6011,call_6015,])
func_6024 = relay.Function([], output)
mod['func_6024'] = func_6024
mod = relay.transform.InferType()(mod)
output = func_6024()
func_6025 = relay.Function([], output)
mutated_mod['func_6025'] = func_6025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4056_call = mod.get_global_var('func_4056')
func_4058_call = mutated_mod.get_global_var('func_4058')
call_6047 = func_4056_call()
call_6048 = func_4056_call()
func_3964_call = mod.get_global_var('func_3964')
func_3968_call = mutated_mod.get_global_var('func_3968')
var_6087 = relay.var("var_6087", dtype = "int32", shape = (891,))#candidate|6087|(891,)|var|int32
const_6088 = relay.const([[-2.337311,-8.343948,-8.659717,1.805064,-0.314438,-3.993215,-0.003501,-0.589307,-0.519944,8.757304,5.884332,-4.183212,-4.224604,1.440636,-4.111114,7.528885,7.778046,1.712437,-8.087954,-1.560777,5.005378,-0.010100,-8.778141,-0.018686,-4.150460,-9.113080,2.068793,-5.020459,8.175489,-1.512088,-7.602145,-7.826681,9.177338,3.220663,-5.139531,-1.680695,-1.461996,2.182176,3.981912,-8.588446,3.155531,-1.029753,2.302211,7.109471,-9.064416,-7.937834,8.149500,9.582722],[-4.444665,-6.716531,-5.390114,9.697767,4.164807,3.820322,-5.493500,-3.125443,-3.512071,9.046761,4.982537,-3.509701,-6.046228,4.250442,1.554428,6.858661,5.454416,-5.120201,-9.585996,3.833706,5.603947,1.417918,-6.109885,1.339512,-7.924927,-7.483248,2.915686,6.371082,9.758101,-6.845289,5.500269,9.987777,5.707478,-9.801710,0.166198,-7.684860,-0.332559,-8.592627,8.769823,-2.203011,-9.157152,-9.715320,4.600228,-1.037139,-5.895704,-0.810312,-3.209756,-7.890382],[0.447810,8.706889,-4.945285,9.593402,3.025981,4.667166,-2.057448,-3.255450,-2.722948,-6.926777,4.711881,7.263850,6.316252,4.547142,4.102963,-4.692056,4.001187,9.701120,1.439102,-6.636514,-2.474843,9.003615,0.225825,-7.853616,-6.720776,-6.541052,4.262709,7.264578,7.118271,-9.909836,5.188543,0.916710,-9.505814,-2.753454,-5.695203,7.556147,2.253416,6.803527,-2.231423,-7.302928,-5.196964,-9.821271,-9.859887,3.159907,5.780272,-0.262345,-3.784248,8.062508],[-0.923386,-3.975384,-0.180990,-9.155338,-2.919944,4.401144,6.723513,-8.826970,-8.251919,1.230946,-9.843985,-6.294307,-4.886301,-8.976662,-1.665990,2.690226,-7.727169,6.954281,0.820624,-6.559654,8.186319,0.818866,9.064157,6.302327,-3.893023,5.292394,4.351130,-9.457962,-1.476951,-3.608692,-3.964190,-0.996268,6.345839,-4.295924,6.981239,-5.512408,-6.022577,5.948933,7.886847,5.909673,8.100611,1.981353,-1.725357,-2.712918,-4.090027,6.324231,-9.672924,8.985759],[-6.657364,7.269489,-2.834742,-4.245931,2.704026,8.678117,-6.878485,-4.197552,1.796129,-5.771776,-5.829732,-5.723522,5.963328,7.145702,7.381527,5.107331,-7.481246,2.462252,2.921706,8.313078,6.034499,3.932385,0.117131,3.692111,0.041713,-0.991310,-8.816908,4.654267,1.968695,-6.567760,6.173441,-7.477345,-8.890175,3.614478,7.908179,-7.702464,6.263506,2.942452,1.340352,3.974544,-5.201853,-9.910939,-8.403637,5.786544,2.779047,4.407122,3.268109,-6.613248],[2.708019,4.677382,0.727974,-4.889732,-3.772149,4.033206,-8.828268,-2.629612,0.808477,-8.817986,-9.665400,6.921070,8.660576,3.247621,-5.879779,-3.631737,8.313435,-2.894026,6.223061,8.791851,-3.867573,2.767425,1.178585,-2.714335,0.559038,-3.936173,-5.639348,5.593368,-8.992263,-0.881544,-5.378877,5.863790,3.489541,-7.191195,-4.453651,-1.707826,4.949311,0.730225,1.869129,5.356152,-5.349013,9.672716,7.640367,-2.527494,6.328676,-5.888031,3.848728,9.125590],[4.503074,2.779831,5.536220,5.729627,-0.135574,2.342553,-9.108337,-6.940528,-6.854167,0.119053,-4.043610,-8.451731,-9.363573,0.729143,-4.507793,-4.918239,1.888617,5.071159,3.621429,0.408195,4.120201,-8.966660,0.224964,5.929731,-9.953853,6.802011,-0.111485,-8.604399,-0.545345,8.977541,-3.783674,-1.703345,5.785458,-1.446144,-7.800505,-0.311351,-7.268756,4.009434,1.349692,8.066891,4.205852,-5.579197,-5.772362,0.681188,8.702167,1.149613,-9.522840,9.251417],[9.837022,1.118014,3.104691,-4.549817,-6.329401,9.990680,-4.672190,9.937336,7.740807,9.500527,-9.732371,-2.004067,5.265017,1.755690,1.388028,-5.842000,-3.653159,6.275968,1.003227,7.584171,7.404516,-1.757967,5.287905,-2.982985,3.232371,8.643012,-4.626593,2.564825,3.329145,8.404622,4.626222,-3.587812,6.302529,2.459446,8.596277,-4.776075,3.465195,-3.157558,-3.870018,5.059239,-6.398388,3.229470,-8.934755,6.206469,1.463561,6.749306,-4.420790,-0.421729],[9.573359,-9.659357,-0.551524,5.476309,4.026320,8.478291,-7.753029,-7.429925,2.346692,6.070779,-4.441596,4.070377,-8.942338,9.611167,-5.977338,-4.379415,6.148559,-5.242474,-5.289058,-1.237628,5.020172,7.889157,-4.362437,9.495194,-4.449675,-3.418505,0.598154,-8.836645,-1.683687,-3.690061,-7.760942,-6.859232,6.874195,1.120164,-0.034311,-5.925453,0.905216,-3.554209,2.699160,8.640163,-2.590391,-4.261633,-7.768146,7.319886,-1.247021,7.745078,1.458222,5.029465],[9.435657,-1.016315,-9.792194,0.792588,-4.693494,5.942788,1.832187,5.954801,-0.292874,5.183040,5.668514,5.140275,-4.538733,-3.485744,-1.241027,3.230692,-3.032994,-8.455705,-1.798404,1.180985,7.136540,-2.256767,9.827190,-3.627734,8.499613,-4.294620,9.289480,0.358463,8.517279,7.972410,6.124318,3.146933,-7.351682,-5.073941,7.198707,9.007144,-7.118996,-3.363470,-7.192938,-8.284781,-5.566497,-5.947373,-0.807752,-3.013675,5.211784,-4.428588,-4.300648,-9.931093],[3.527000,2.105637,-3.051277,8.004020,-4.019441,3.678039,-2.440589,-1.674030,-1.410720,-0.802020,-6.884265,-5.117600,-0.239213,-6.973895,-4.478543,2.427233,5.085039,4.949644,-5.440329,3.603477,-8.684697,2.623104,-4.543495,8.738812,-1.490311,6.163216,-0.147288,-8.110602,-3.432524,6.366389,4.769234,-9.523072,6.766891,5.460399,-0.753374,-4.438089,7.002655,-7.376105,-8.855767,-7.585728,1.067831,5.725416,-8.749365,9.630077,9.718953,5.131387,7.036524,5.293145],[8.829247,-3.648169,9.841090,-9.736546,-4.863191,-1.743700,7.316145,9.578065,0.273201,-4.337043,-8.760906,-1.465052,3.318366,0.890338,-8.887168,1.853936,4.694389,8.968226,6.810814,4.730977,-9.410710,-9.778924,-8.463526,6.534763,-2.683765,0.414528,8.936975,-1.260058,-6.408572,1.729312,5.762893,-8.203890,4.925290,9.857364,-6.320876,-4.980527,4.537503,-0.420284,6.411096,8.581025,7.788466,-2.062754,-9.991408,4.047141,-0.950873,0.362043,-0.266091,-6.170874],[-6.197898,-2.510209,-8.555246,2.290040,0.915677,-3.322708,9.300984,-2.019004,-4.139618,6.912789,-1.962498,3.077003,-4.429489,-5.327113,8.849940,-4.609737,-1.627937,-9.173031,6.359256,-8.302929,2.656897,0.191288,-6.219225,7.639858,5.317223,-6.200327,-4.218616,-1.232458,-5.092344,1.997121,-0.423894,7.824563,-0.047125,2.770880,-2.258369,-9.801880,-4.733183,-9.617082,5.750052,-3.329337,2.396362,-3.256864,-8.114302,-3.003575,2.339567,-0.984648,7.620609,5.905322],[6.224957,0.990283,-9.078830,8.672602,-2.872334,-0.840982,-5.905457,-9.178142,3.017739,7.632772,4.962623,-9.765038,8.173437,-3.755963,5.255491,-9.160640,6.329091,-3.208720,1.271611,-8.521103,2.521777,7.970547,3.477700,5.347747,3.208516,8.712625,-3.971869,5.295121,-2.991496,-8.520602,6.636730,3.278323,1.004307,8.241953,6.033885,-5.861129,-3.852875,-2.234413,6.088722,-2.113331,-6.037961,9.420959,7.998465,-7.142919,9.999962,3.267031,1.958630,4.415249],[-6.400351,4.858218,-9.035429,3.816121,-1.190039,6.330381,4.767816,-6.409942,0.370308,1.594489,-7.565522,-6.295185,-4.148372,1.712503,-3.635085,-5.104026,7.814349,4.770772,0.367491,-0.608649,-3.595348,8.762705,7.958785,-7.268302,-4.191647,9.175296,8.547276,-1.961849,-9.060254,-2.710003,-7.470940,9.277538,-1.410909,7.956624,2.856493,1.732922,1.418036,-7.317775,-3.883387,2.616499,-1.037003,-9.562291,7.896279,5.722537,-3.376689,-7.541131,3.352284,-6.222891],[-8.214255,9.064090,6.235852,-2.306222,-1.722523,9.280489,8.727578,0.060150,8.367712,6.261626,-7.551954,-7.311297,-1.417983,6.514788,0.716720,-2.460451,3.954950,0.911719,-2.762770,-4.837688,-2.843295,-4.322224,-4.297711,9.397548,8.637457,-0.889711,-0.848343,-9.014729,-4.313376,-6.385431,6.777287,7.486388,-0.844338,1.357115,-2.334029,6.356091,4.988957,-8.707434,1.403731,0.881734,5.014549,-9.855782,4.643535,-2.735847,-9.931730,2.326153,4.529940,8.394851],[1.482041,9.738403,-9.527090,0.345517,-8.199260,0.508248,6.500617,-0.262676,3.085576,-6.574379,2.645764,-6.977445,3.240974,1.819318,-4.178592,5.399150,5.902957,-7.654266,8.168185,8.938045,3.849519,-4.647635,2.943124,5.451849,4.977788,9.880499,7.533864,4.744010,0.626529,7.968959,8.344660,-6.369722,2.187824,-5.160051,-0.100355,-6.738684,-4.983127,-5.072615,2.522891,-1.832774,-3.116383,8.041172,1.675389,-1.230143,0.001875,7.022110,-9.497726,5.245948],[-5.695450,4.356356,5.523598,-6.596413,-6.226279,-6.099448,9.440888,-1.746640,-2.078946,1.923312,-2.667983,8.729254,7.057620,-9.749150,-1.529008,-7.787149,3.901302,2.147440,6.256257,1.134792,-2.494674,-8.796119,-7.490083,5.577040,-7.019972,3.354376,1.771893,7.504472,8.804043,-4.093723,9.504798,-3.383687,-9.085824,-8.793501,4.068526,1.161148,4.417476,2.185504,6.898074,-7.001839,7.497745,-6.768803,-0.696670,-3.022627,-7.178733,6.926096,7.158060,-6.078118],[7.965877,3.410229,-3.758611,7.464619,-6.915020,-6.683756,6.677565,-9.696087,-9.229107,6.406837,-3.317523,-4.475598,3.742702,-0.471813,3.807381,-2.177234,6.069230,5.125679,8.228600,2.281346,-9.189537,0.887325,0.279462,-8.968059,-0.826780,-7.358204,7.260868,0.434244,4.209997,9.943130,4.198632,5.031887,-4.711477,-9.639844,3.759862,6.690765,2.305942,-9.603193,-9.358594,-1.323971,-0.991928,9.849176,3.571683,-8.855025,6.208085,8.251359,-5.827021,9.809119],[-6.413556,-4.237330,-5.230703,8.816268,-7.973810,-2.238967,-9.158757,2.277687,3.684721,1.758605,-1.738007,8.314732,9.437921,-9.319746,-2.037640,-7.507819,6.547327,-0.679416,7.039543,-0.080765,4.393867,-8.379502,1.508362,0.806604,4.783058,-4.625881,-0.684360,0.042251,-9.870657,4.883051,8.364646,6.847607,-8.992382,-1.967069,7.090601,7.125245,1.292064,3.016844,-9.216604,-5.398732,7.948568,9.262948,-3.372394,0.572394,-8.640705,5.106708,5.365392,-4.700146]], dtype = "float32")#candidate|6088|(20, 48)|const|float32
const_6089 = relay.const([3.756984,4.000648,-9.368597,-4.061744,4.593929,-0.133118,5.972801,3.781966,-9.667638,-4.637141,4.733653,9.202363,8.917330,1.666322,-8.163860,4.477669,2.408565,6.055565,5.491201,-5.637122,-7.349420,3.042640,-5.751516,0.210017,-3.824544,0.445730,-7.234674,-7.791437,9.693749,-4.603825,-8.469559,7.278293,-6.347680,2.896846,-6.792991,1.745064,5.351040,-4.453181,8.479925,-6.819467,-5.976636,0.682165,-5.238230,-9.430083,9.079732,-2.630056,-2.764877,-2.175600,-9.310199,4.535416,7.644348,3.461704,0.091624,8.848571,8.491359,-8.977986,4.224875,-6.844350,5.124194,9.587508,4.683811,-7.081010,-2.407680,3.910791,6.028264,3.581173,3.697659,4.520296,0.894949,7.267199,-8.600565,-8.751051,1.011891,-5.785219,7.509325,-4.347951,9.747279,-0.426439,7.146032,-0.150000,-6.565962,2.702226,-1.113751,5.530866,4.242841,-0.832869,-6.640628,-7.141897,-6.778436,2.645064,-8.837399,-0.183376,-2.638702,4.782557,-8.293292,-7.028273,-4.675229,-8.109438,-2.059832,-1.160854,-3.994078,-8.206603,8.949540,2.338673,0.570652,0.474255,-8.858389,0.853194,-8.179235,-7.859377,-5.986459,-6.712251,-3.805285,0.057826,-9.743353,4.834328,-6.214554,2.899279,-8.090593,0.415575,6.136212,5.773806,9.409345,5.583043,-1.268624,-0.822855,-1.825177,7.885293,-4.693966,-7.609619,-6.712704,2.857549,8.773793,-0.794515,0.552698,0.082208,-2.264034,-4.839923,2.610282,3.905841,7.100308,-4.392226,-8.759837,0.476688,-9.359310,0.864199,8.203861,6.631125,-8.643734,-6.954178,-2.318235,-8.958384,-4.532482,-6.784760,-6.835750,5.486441,2.494265,-7.020313,8.589863,-1.506871,9.405298,-5.407502,9.180357,1.071212,3.597745,2.374796,2.635060,-7.864547,0.298873,9.657093,6.235016,2.334123,-7.318803,-5.477186,3.024524,5.679486,8.632586,5.295699,4.547860,-9.269919,-9.314502,-3.996325,3.759519,-0.361709,1.284228,8.915802,-1.141933,-4.183287,-5.811805,0.782319,2.108601,-7.587177,-9.577087,7.779800,-9.342656,7.143570,-1.982511,-2.130035,-7.260016,-5.917609,-6.948835,-6.787600,-6.131743,6.808455,-9.374914,6.114516,4.890421,-4.920620,5.487621,6.285486,5.155410,3.298471,8.997010,1.838298,-6.317502,2.433393,2.100782,8.704696,-3.190194,-9.222791,2.341728,9.948263,4.360261,7.808912,1.870414,-0.375183,2.455666,-3.483600,3.795624,-4.279734,0.700968,-8.786196,-8.174341,6.076787,-5.617505,7.881561,2.294723,-7.723620,-8.595774,5.517936,3.604795,-7.620750,8.676930,3.896645,-7.479936,-7.889432,1.673190,8.735081,4.011379,1.897529,-2.992223,2.381096,4.501567,4.897972,1.273097,5.735219,-0.050621,1.273811,9.926198,2.993134,9.502921,8.236111,-1.671297,-4.838535,7.537926,-1.087317,-9.472267,9.162323,4.969158,5.749730,-8.708177,9.484159,-0.360440,-5.061242,5.196924,6.735037,-1.475640,-3.405405,7.674702,-3.724868,-2.268561,6.611241,-5.680970,-2.317051,0.018752,7.050546,-1.524598,-2.744156,5.517313,-3.607591,-7.419819,1.899648,7.864042,-4.573115,-4.400418,3.928275,6.910565,2.007300,-4.762267,8.670900,9.117518,4.524505,-1.115858,-5.234500,-8.486066,-6.396587,4.046433,6.082887,7.723062,7.686536,-6.629517,-4.254637,4.372535,-3.657824,7.648593,9.842016,-6.482207,2.966300,1.522141,-4.934596,-2.938307,-0.404629,5.869072,-0.935810,4.327772,-7.777202,8.030855,2.900085,8.884199,-1.081727,-6.985293,7.988720,-5.990012,6.683957,7.034942,7.370115,-1.096409,4.476393,-0.461771,9.733043,0.913035,8.623595,-3.620103,-7.188695,-3.752746,6.381214,-9.713186,1.691110,8.771321,-2.101828,5.441071,-1.625809,-0.392431,3.052665,-0.905682,-3.312481,-2.708926,-2.812813,3.332469,-3.513011,4.891858,-1.886280,2.919066,-3.026696,-3.736646,1.465534,-4.859915,9.137938,2.816069,4.662390,0.423119,4.847058,-9.128116,4.600879,-0.983560,1.808794,2.737130,-4.479673,-7.329889,8.789804,3.872996,-6.555568,-7.671889,-8.231648,-7.413826,6.968195,-8.440699,4.718634,-9.831458,-7.106723,9.070955,-5.912484,6.484793,5.567756,8.798979,-0.890164,0.745040,8.644321,-3.390068,8.995031,4.475160,9.579128,0.311409,-1.510058,8.918792,8.355678,4.473309,1.912799,-4.203468,-9.020015,7.915764,-1.906099,2.103374,-8.789703,-0.546481,-2.747219,3.205454,9.679469,-8.502062,-7.091067,-3.535054,-8.848817,-6.118593,-6.144071,-9.592042,-9.405396,0.344480,-7.588898,-5.635576,-3.777524,-5.139358,5.921358,-5.088503,2.263890,-8.245285,-5.196215,9.410942,-3.614629,-4.352827,-2.905521,1.014172,-7.437834,0.930342,3.830607,-8.178228,-6.128237,-3.635387,-3.180045,-4.408778,-3.202597,8.835207,9.479357,2.532080,-8.282726,-5.026066,9.517717,-7.589128,-1.323564,-4.580615,3.618594,-3.429799,-7.853158,2.199176,7.676497,-1.352432,5.122339,9.148915,-0.684602,-6.860503,-8.304567,4.403311,9.963997,-8.458631,7.550925,9.072696,4.620697,9.760990,1.467181,-2.244091,-5.433295,-2.178670,-8.551089,5.769591,-8.293605,-8.002337,-3.635355,-9.589354,7.490930,-4.278097,-2.413026,5.291183,9.098324,0.792456,-6.894453,4.162639,-6.726421,-7.472704,2.270286,1.682872,2.929368,2.957315,4.179651,4.847484,-3.275249,4.870541,-6.142654,-4.400951,6.889238,-5.898870,0.798467,3.327148,7.722761,-9.745951,8.813520,-3.388922,6.015002,-6.388512,-6.009119,3.269759,0.558984,0.687173,-2.219344,6.734582,3.749933,9.923097,-6.190944,-4.249708,-7.006836,-9.974921,-5.721790,-8.664620,-9.185316,-8.068526,9.859679,3.484033,-8.158752,-9.318073,-3.376566,5.696174,6.746084,-2.887411,4.783407,7.357043,-2.500972,3.730584,-2.276622,-0.988732,-4.571161,7.553211,5.610987,8.009375,1.806696,-4.731037,9.393532,3.724731,-1.253237,-9.261417,-8.659823,3.019221,-7.146067,6.342477,-7.111902,6.709143,-3.342427,-1.982169,-7.092114,-2.408704,4.266854,9.723483,-8.073920,2.159065,1.300012,-3.635241,4.264880,-8.976355,-6.637483,6.219355,8.385859,3.006770,9.871971,3.911654,9.649863,-2.740726,-8.599376,-4.365691,-8.478382,3.078458,3.460430,-7.039509,5.372895,-1.793150,-9.545868,8.096000,2.213782,-7.584795,-0.856905,-2.371775,4.011070,8.569725,-7.254499,-0.976026,2.223982,-2.625769,0.222573,-3.213144,9.340094,-0.930448,-7.486551,-7.153081,-2.490885,-3.595162,-1.407519,7.138846,5.913064,-2.769283,-3.790843,5.972477,-2.173911,-4.375827,-7.233503,6.896534,-1.551037,3.105502,8.924015,-1.108971,-4.808762,-3.376400,2.931476,-3.187552,-6.381483,-4.627660,8.352787,6.151327,-1.768969,4.707861,-1.721010,-8.553703,-7.378757,6.131072,0.066339,-7.560145,-0.230585,7.051177,-2.210749,8.690618,-1.946088,0.872703,3.135510,0.639730,-6.476156,-8.608473,6.219118,4.225576,-7.572911,7.043542,-8.248212,-8.524548,0.656995,-8.560062,8.066322,-8.162299,-1.104413,-6.426187,-6.939322,5.908192,-3.353756,2.888599,-9.230455,-8.952402,9.286529,6.854718,2.878742,6.349385,6.719247,-0.037681,1.116505,-0.091364,-7.044254,6.383721,-9.549230,5.506905,-5.972806,2.882539,-5.621541,9.891566,3.105584,4.074517,-4.425902,9.143720,5.165882,7.238587,8.923654,-2.286399,-4.353041,-8.192954,-0.389422,7.620520,8.440813,9.450027,-1.855018,9.568836,5.134014,-5.527254,8.191108,6.830480,9.243124,0.914472,-5.773021,-8.613742,6.052436,-4.781860,2.910448,-4.047342,-5.073765,-1.692523,1.511957,-8.436675,-1.370662,-5.065095,1.195443,-8.905053,-9.751956,0.746463,8.162943,6.674995,-1.574822,-4.714703,-3.126051,-6.000454,9.363538,7.607990,0.288601,0.875672,2.312354,6.411263,-2.321745,7.979058,-5.295920,2.172461,8.431509,-7.293056,-5.200585,5.458715,-6.257232,1.831636,-3.037285,-3.644385,9.001689,9.048845,6.904622,1.259939,4.419651,3.609338,1.978826,0.485435,8.684688,-6.643443,4.354211,-0.283470,-1.966242,1.361280,3.118663,-3.139262,1.086746,1.768339,-9.635964,-8.649366,8.259891,6.065782,5.250620,1.014970,2.620804,-4.883174,6.725220,-4.356405,7.094705,-9.495642,2.588201,4.016781,2.990645,9.505744,7.374289,9.757541,2.396881,4.423906,8.944864,-7.562393,-5.938455,4.766420,1.188279,8.800244,1.438173,2.524079,-0.371654,-3.358597,3.926649,-7.763349,2.401053,-6.418247,-0.087497,6.177795,-5.203689,-0.735910,6.116813,7.816225,7.919309,9.675261,-6.359437,1.793421,9.871984,-5.774059,-1.642187,2.935842,-0.895177,-6.110080,6.948452,9.342967,0.232221,-5.185468,9.553788,-8.114760,8.323431,-0.152968,-9.250547,-8.278512,9.689917,6.613664,3.737918,2.748798,-1.510514,2.446484,-7.059063,2.100930,-5.505559,-8.302787,0.274877,9.023585,-4.169780,8.754366,2.238361,-0.049227,-6.715330,-3.815284,-0.256184,-9.722452,-8.302890,-5.804098,-1.296121,-5.727878,7.936785,-8.461016,5.791832,0.537315,5.817515,7.953860,4.673297,1.251197,5.414135,4.214626,-4.954011,-5.177024,0.908504,8.185826,-8.593446,6.643616,-5.057866,8.221784,7.365114,9.205785,8.841765,0.370162,-5.084514,-4.607596,3.960141,2.226128,5.729473,-8.203338,-4.382125,-9.286557,2.705691,-6.971428,-1.994412,-0.297378,3.447996,-3.029281,-3.299787,7.735361,9.445924,-2.884831,5.144416,-1.574236,8.926249,-2.840527,-1.614061,-3.001183,-5.675014,1.467035,-0.345542,-0.441104,6.600098,-6.028554,-4.546804,-5.389892,-9.424625,-0.166685,-8.724232,-2.537001,3.709763,5.889362,-8.094382,-5.890486,-6.899240,3.507650,1.007932,-6.146623,-6.932212,-6.444315,-0.255190,-8.590923,1.484328,3.243224,8.812115,3.005213,-6.289276,-1.851908,-6.251650,0.136556,-8.536275,-8.493882,-8.452641,-4.959470,1.980087,8.636007,3.067683,-7.589034,4.987498,-6.573772,-6.362293,4.039793,-0.164195,5.811020,-8.653227,-8.893855,1.254795,-0.047833,9.527141,-5.675358,4.187635,2.770227,-1.813015,8.701498,9.946432,-9.480472,1.522248,-0.258281,-1.337655,9.274479,-3.661899,5.803434,-1.981233,8.871221,3.417299,-0.694745,2.088956,9.232719,-6.479634,5.159238,7.010161,7.926835,-5.373610,-0.506729,6.597686,8.091880,6.594974,2.033115,4.324099,-0.860616,-7.728381,2.930863,-6.528782,3.405822,-8.187850,-4.914844,3.308478,-9.083591,9.335898,-0.717725,-6.910883,-7.898398,-6.644470,3.506823,-1.910779,-1.798907,6.604119,-4.046683,9.113517,-8.146707,9.039389,1.160378,-8.747338,-9.351826,-4.637862,-0.421183,-7.903565,8.490483,-2.266859,-6.667836,-3.961218,7.850321,8.242517,0.161038,-2.595908,-7.443517,-9.755948,-7.698931,7.633061,-8.225318,3.215783,1.708138,9.717461,-0.157515,5.343577,-5.793064,-4.895664,1.075244,4.702812,-8.573928,-2.149032,9.776488,-8.054229,6.015082,-2.349211,6.728065,-8.090540,-7.684285,7.007559,9.130049,0.830474,-9.782365,-8.822222,1.651672,-8.982065,3.506168,-4.347787,9.391129,-5.655827,2.771734,-6.418768,-5.316099,0.180079,-4.838441,3.525672,1.904954,9.835330,-5.926006,-1.018694,-0.728080,7.947174,0.353957,-1.550596,-4.806345,-7.118558,-2.752723,2.977483,5.423901,7.187426,5.953751,-1.203900,9.351005,0.534133,2.550178,-7.429579,-6.547939,1.811829,3.010469,7.676047,-3.992846,7.605902,-1.769291,8.891621,5.139056,-5.496762,0.682526,-0.975269,-5.425821,6.669027,5.615517,2.652072,8.854066,0.499903,2.480776,0.829789], dtype = "float64")#candidate|6089|(1092,)|const|float64
call_6086 = relay.TupleGetItem(func_3964_call(relay.reshape(var_6087.astype('int32'), [891,]), relay.reshape(const_6088.astype('float32'), [960,]), relay.reshape(const_6089.astype('float64'), [1092,]), ), 3)
call_6090 = relay.TupleGetItem(func_3968_call(relay.reshape(var_6087.astype('int32'), [891,]), relay.reshape(const_6088.astype('float32'), [960,]), relay.reshape(const_6089.astype('float64'), [1092,]), ), 3)
output = relay.Tuple([call_6047,call_6086,var_6087,const_6088,const_6089,])
output2 = relay.Tuple([call_6048,call_6090,var_6087,const_6088,const_6089,])
func_6092 = relay.Function([var_6087,], output)
mod['func_6092'] = func_6092
mod = relay.transform.InferType()(mod)
mutated_mod['func_6092'] = func_6092
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6093 = relay.var("var_6093", dtype = "int32", shape = (891,))#candidate|6093|(891,)|var|int32
func_6092_call = mutated_mod.get_global_var('func_6092')
call_6094 = func_6092_call(var_6093)
output = call_6094
func_6095 = relay.Function([var_6093], output)
mutated_mod['func_6095'] = func_6095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4159_call = mod.get_global_var('func_4159')
func_4160_call = mutated_mod.get_global_var('func_4160')
call_6100 = func_4159_call()
call_6101 = func_4159_call()
func_6092_call = mod.get_global_var('func_6092')
func_6095_call = mutated_mod.get_global_var('func_6095')
var_6111 = relay.var("var_6111", dtype = "int32", shape = (99, 9))#candidate|6111|(99, 9)|var|int32
call_6110 = relay.TupleGetItem(func_6092_call(relay.reshape(var_6111.astype('int32'), [891,])), 0)
call_6112 = relay.TupleGetItem(func_6095_call(relay.reshape(var_6111.astype('int32'), [891,])), 0)
uop_6116 = relay.asinh(var_6111.astype('float32')) # shape=(99, 9)
output = relay.Tuple([call_6100,call_6110,uop_6116,])
output2 = relay.Tuple([call_6101,call_6112,uop_6116,])
func_6120 = relay.Function([var_6111,], output)
mod['func_6120'] = func_6120
mod = relay.transform.InferType()(mod)
mutated_mod['func_6120'] = func_6120
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6121 = relay.var("var_6121", dtype = "int32", shape = (99, 9))#candidate|6121|(99, 9)|var|int32
func_6120_call = mutated_mod.get_global_var('func_6120')
call_6122 = func_6120_call(var_6121)
output = call_6122
func_6123 = relay.Function([var_6121], output)
mutated_mod['func_6123'] = func_6123
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6135 = relay.const([[[7.640082,-5.720169,0.783200,9.141817,-1.122632,-0.428130,1.314288],[-1.990287,5.067416,-0.752178,3.158134,-1.035870,-8.005980,-7.955397],[-2.502164,-0.621152,-0.572848,1.458510,7.669173,7.860728,-3.666039]],[[6.402007,-1.714395,1.099911,9.425001,-5.855436,-4.187038,9.444087],[-5.919751,-5.378878,1.721126,-5.479174,8.368327,8.254278,-9.066031],[0.229725,8.624441,-1.027165,-1.372467,3.723049,-4.128187,-9.492971]],[[-7.638673,1.421252,8.142268,6.006983,-8.286390,-1.745780,2.653091],[-4.998824,6.369461,-2.903426,-8.840282,-6.428544,-3.782511,-7.799108],[2.781908,-4.886032,-5.963710,9.608721,2.790029,-9.731078,-5.799241]],[[-1.546876,-3.578819,-9.179523,-6.524241,-5.740379,3.166494,9.297367],[-6.660156,-2.691904,-4.052746,9.904485,-1.594016,-7.710400,-4.915817],[2.108146,6.171876,-8.437724,-5.611955,9.014532,-6.584971,5.872770]],[[-1.176631,6.997789,-0.881415,5.111150,-7.445085,8.429327,7.732105],[4.882832,-0.519830,-3.544244,-2.014640,-0.970471,4.724030,4.080394],[8.671342,-9.008791,7.514702,8.084699,5.908363,-2.618927,1.885888]],[[3.962421,6.822437,-2.550511,0.749688,0.310052,-4.039528,3.867688],[-9.689509,6.972212,2.326519,7.760109,8.242054,5.820887,5.084738],[4.362241,8.498862,7.933152,4.901829,1.601716,0.320182,-2.019965]],[[-4.946446,5.034871,-5.860137,-8.593123,-5.901673,-2.788455,-8.768036],[4.565748,7.859124,7.541388,7.473776,7.831722,-7.268847,5.999741],[4.307638,1.577106,3.750191,-5.020916,9.276684,-6.971461,2.959815]],[[-2.119887,-1.537361,7.573757,-6.341525,-3.848190,-9.170192,-6.084002],[-5.363674,-7.936019,7.036451,5.841196,-6.858078,-0.766091,7.810085],[-2.224271,0.760205,-4.670471,-5.494502,3.556621,-9.023242,-4.323171]],[[5.497573,-5.138309,-0.955761,8.941601,-7.768081,5.780711,5.171442],[0.273849,-0.369775,9.266011,-8.600289,2.898099,2.946250,2.330560],[-7.951390,-9.748128,-8.518192,-8.262382,0.804773,-8.304290,-4.586976]],[[0.314205,6.617071,-4.112078,-5.244202,0.244669,-6.505288,0.012088],[8.519863,2.250214,-1.711873,4.345825,-6.000201,0.667353,0.100024],[-3.556768,8.507710,0.710512,-3.326020,-3.444923,4.747428,9.552419]],[[-3.634485,-3.318530,7.570161,-9.190450,0.120426,-4.462476,3.273198],[-6.248412,6.323115,-2.423487,-7.411972,5.391504,-3.754092,4.871473],[1.666520,9.191299,3.769902,6.781910,0.546147,-3.982058,8.943083]]], dtype = "float64")#candidate|6135|(11, 3, 7)|const|float64
uop_6136 = relay.log(const_6135.astype('float64')) # shape=(11, 3, 7)
var_6142 = relay.var("var_6142", dtype = "float64", shape = (11, 3, 7))#candidate|6142|(11, 3, 7)|var|float64
bop_6143 = relay.minimum(uop_6136.astype('uint16'), relay.reshape(var_6142.astype('uint16'), relay.shape_of(uop_6136))) # shape=(11, 3, 7)
output = relay.Tuple([bop_6143,])
output2 = relay.Tuple([bop_6143,])
func_6170 = relay.Function([var_6142,], output)
mod['func_6170'] = func_6170
mod = relay.transform.InferType()(mod)
mutated_mod['func_6170'] = func_6170
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6171 = relay.var("var_6171", dtype = "float64", shape = (11, 3, 7))#candidate|6171|(11, 3, 7)|var|float64
func_6170_call = mutated_mod.get_global_var('func_6170')
call_6172 = func_6170_call(var_6171)
output = call_6172
func_6173 = relay.Function([var_6171], output)
mutated_mod['func_6173'] = func_6173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5398_call = mod.get_global_var('func_5398')
func_5399_call = mutated_mod.get_global_var('func_5399')
call_6185 = relay.TupleGetItem(func_5398_call(), 0)
call_6186 = relay.TupleGetItem(func_5399_call(), 0)
func_1203_call = mod.get_global_var('func_1203')
func_1209_call = mutated_mod.get_global_var('func_1209')
const_6192 = relay.const([[7.922014,7.321689],[5.090915,6.747356],[0.410323,-9.464556],[1.181844,2.345108],[1.382477,8.370880],[-4.447475,-8.526840],[-5.744373,-0.419931],[-0.267101,-4.857908],[6.948750,-7.453465],[-6.626435,7.794849],[-1.641513,-8.026268],[-7.547944,-0.249264],[-7.181812,8.994529],[0.856229,8.529785],[-0.742173,9.934694],[1.054076,-8.779835],[3.526487,1.974361],[9.344384,6.220266],[-0.617969,2.594982],[-8.466110,5.004675],[6.278793,1.882921],[-7.814196,-9.683081],[-6.111046,9.266476],[-3.372340,-8.837769],[-9.703541,6.070798],[-6.338251,2.814693],[-4.023345,-3.468453],[7.306467,1.830678],[-3.859200,0.521550],[-8.325802,9.351138],[0.444489,-2.596566],[2.212241,-5.759260],[-7.246669,9.820047],[-4.682961,6.046308],[1.513907,6.111869],[0.352878,0.562288],[0.837133,-0.049597],[-7.612140,-0.772865],[3.996897,0.860699],[-1.882204,-0.608640],[-6.534579,7.273275],[3.396358,4.300284],[-6.920426,0.786332],[-1.016359,-4.626343],[2.173567,5.117896],[-0.335351,-8.039223],[-4.749097,-1.555677],[5.764424,5.141727],[-5.007264,-1.220782],[2.412648,-5.609999],[9.420352,-2.997681],[-4.312506,2.575996],[3.166686,-8.467174],[5.246504,4.470925],[-4.392595,-2.070316],[6.647535,0.045946],[-3.856668,4.577123],[-3.248067,-2.702720],[4.852359,4.335102],[2.375433,1.277791],[8.886510,-5.599299],[-3.180572,-7.650546],[-9.652044,-3.278689],[-0.790244,0.880755],[-5.020381,-3.025654],[2.118068,-0.982836],[3.908788,-2.317870],[-4.941615,-3.125189],[2.482031,-4.478246],[-3.237591,2.447741],[3.478348,-4.123414],[2.787610,7.447545],[-4.696278,-9.325233],[-4.787014,-9.900556],[-3.746155,-6.693003],[8.057862,-7.719968],[6.900956,-8.436776],[6.993647,-4.703835],[-8.136785,-8.957892],[7.686054,3.708934],[-8.296784,6.394831],[-4.028855,-8.660734],[-1.027554,7.983114],[1.336662,7.391752],[5.669388,5.434534],[0.230829,2.453817],[-9.286993,3.636821],[6.653337,-6.077985],[7.206472,-5.100371],[4.339108,-5.316044],[4.161371,5.148376],[-6.693691,-3.581922],[7.866153,-8.354137],[5.183544,-7.066004],[-8.209888,3.376592],[-9.611428,5.899671],[4.815449,9.362091],[-9.896963,4.915691],[3.200775,0.885600],[1.856238,0.262045],[8.369243,7.372699],[-3.337690,-3.948675],[9.291611,-8.136255],[0.016988,7.794740],[-2.186577,-0.876280],[4.583779,-9.679209],[-4.117165,-2.714965],[0.364318,-5.610036],[0.447885,-4.881004],[1.200455,-4.450248],[-8.294146,-4.758124],[-5.776320,8.342338],[-2.757685,-2.614628],[6.494362,2.373718],[-8.501195,8.638336],[3.607561,-2.906674],[9.688893,-4.294871],[6.462006,7.124249],[-1.776403,-5.546756],[-5.963573,7.315925],[5.446605,-2.977697],[-6.482261,-0.486493],[1.076011,1.088492],[-6.847627,3.256057],[-9.832566,-6.820187],[4.566652,7.349726],[-9.973808,-8.684100],[1.647517,5.998737],[8.933341,0.894398],[1.748788,-8.934564],[1.863191,-2.354145],[8.783355,7.143840],[4.891815,-0.529835],[-6.377081,-6.861601],[1.014163,1.696853],[-9.267114,4.432460],[-0.056271,-1.101162],[-1.588071,-1.168628],[-3.400666,6.064038],[-7.791562,3.420686],[2.839143,-6.375102],[3.155037,-6.033307],[-3.443375,-7.130922],[-6.956719,-7.524494],[-4.865292,0.554328],[-9.266109,2.982456],[-5.788378,-3.211691],[4.986033,-6.679221],[6.836977,-6.505453],[-1.586850,1.408630],[-3.659189,3.456735],[3.891727,1.557988],[-7.207915,8.587231],[-0.214639,2.740890],[1.109601,-7.890739],[5.991452,8.398056],[9.804647,-5.708797],[-5.350205,-3.820778],[1.649827,-8.922961],[-4.818743,-5.900528],[-3.900357,6.149290],[-1.244203,5.314664],[-0.374935,1.143161],[-2.884922,8.648314],[-8.145786,4.583810],[2.502308,-7.022281],[-8.859332,-5.948655],[-9.255720,8.171951],[-6.289002,-1.333079],[-2.940740,-5.496783],[4.526555,-1.308889],[8.524861,6.763263],[0.626806,-0.675844],[3.098286,5.314487],[6.041469,-3.076144],[1.688667,-6.089947],[-2.858189,-2.502471],[-0.857702,8.996473],[-0.700015,-8.674046],[0.976908,-6.415768],[-8.557111,-9.676218],[8.935833,3.662567],[2.927853,-2.476838],[-0.479378,-5.764286],[9.242432,2.007496],[6.304840,5.535936],[-6.628179,0.669734],[-2.548116,9.936437],[0.029103,-0.253746],[2.728093,3.423149],[3.599342,2.058462],[0.140789,-4.494849],[1.989521,-2.887385],[-5.951000,-3.185101],[1.144922,0.831554],[3.300441,6.858066],[-7.180201,9.295260],[2.111456,-7.852072],[0.030637,-1.312533],[3.569256,3.186282],[-5.978484,1.567468],[-2.495053,-7.916157],[-0.636912,2.800105],[-3.745791,-6.938285],[-6.767601,-8.344362],[-1.660204,-1.014960],[0.483862,-8.335585],[5.394671,2.577246],[-7.821430,-5.135561],[-9.471784,-1.196441],[-4.469574,2.652164],[-6.654320,1.899859],[1.731240,4.079934],[-5.506388,6.295403],[-3.879564,-4.604026],[-8.208498,-0.899752],[7.617534,9.240217],[6.544249,-3.854693],[0.824739,-8.771701],[3.820957,-6.975831],[9.083132,-7.796438],[1.094463,7.694673],[-2.643871,7.296999],[4.987696,6.287051],[-7.473771,3.050474],[-1.348614,-6.672309],[7.347689,-9.895205],[-3.770378,9.956879],[-2.668365,-0.651429],[-6.496834,9.690893],[7.228386,0.188526],[-0.063213,2.558289],[5.962415,-1.714795],[-6.610540,1.859447],[5.585249,-8.102573],[-4.743982,-3.074996],[-1.242362,-7.651398],[-4.085547,3.118122],[-5.104349,6.983760],[6.336386,9.870312],[0.448441,-8.267811],[-7.274668,0.733069],[6.317078,-9.572479],[5.229494,-1.777261],[4.366489,-0.209705],[1.758738,8.740450],[-6.815653,-4.012543],[-9.484563,-0.290444],[-0.753051,8.410914],[-4.378091,-3.234257],[2.182856,5.933793],[8.390852,-0.664828],[-9.570925,6.719801],[-2.832650,0.927211],[7.431093,-8.378483],[-4.254181,9.200459],[8.565126,7.191534],[3.133960,-0.145870],[-8.084783,7.985859],[8.658461,-9.333551],[4.774534,6.524455],[5.147980,-9.787364],[7.522935,-0.555317],[-8.881497,-8.520486],[-8.599697,2.304568],[6.093261,-4.631413],[-9.240594,-2.447025],[2.519181,9.424405],[-8.829345,-8.116231],[-1.258702,-6.702073],[8.957607,6.117860],[-9.902701,-5.834415],[5.748020,-4.147745],[2.251277,8.612395],[-1.598040,2.891524],[-0.009408,-0.815013],[-5.101362,-9.006303],[-7.240488,-4.102098],[9.492985,0.447149],[5.038545,0.127919],[5.644099,0.055619],[-3.396315,-8.490786],[-3.941982,4.365601],[3.511450,7.457448],[-6.404014,-1.444290],[-2.440349,2.907648],[-0.400119,3.956518],[-0.531627,-8.508535],[-0.951071,-1.467852],[-5.006534,-8.691479],[-7.732149,-8.789546],[9.828159,4.933252],[9.014601,-1.053184],[-3.143330,-4.547602],[-2.966524,-9.298367],[-2.329386,0.061426],[8.498073,3.379166],[-9.953635,-7.301769],[0.190235,-1.793202],[7.635867,0.544341],[9.179910,-6.097558],[5.534725,-0.230386],[6.224045,-4.377978],[-0.453292,-2.402248],[6.005977,8.808448],[7.467844,-1.862118],[-9.236111,-1.738373],[0.047482,4.948824],[4.905214,-0.671173],[-0.405752,9.768146],[-1.077395,2.939952],[2.002444,-3.879458],[6.500383,-4.716220],[3.450852,-1.960160],[-5.186035,5.600793],[-2.077745,-0.549647],[8.075470,-4.403564],[-8.131369,3.577543],[5.657242,3.070809],[-4.237363,5.135037],[4.889738,4.545775],[-4.672662,0.873966],[-7.259254,-4.546608],[4.780139,-3.629137],[-3.082293,-6.483176],[-5.894580,9.387058],[-4.475228,-1.520809],[-4.623353,-1.268831],[-8.147703,-1.058401],[9.714648,8.483030],[4.823445,-9.732298],[-2.796864,2.806396],[4.050389,6.170007],[3.059442,4.734037],[8.306689,-7.813387],[7.880119,-4.796241],[-0.422242,7.587421],[-6.116355,4.476097],[-1.070848,-5.090500],[4.731530,0.493683],[2.433382,-4.411254],[6.592924,-3.085679],[-3.442353,-4.073191],[3.836502,6.069536],[-2.694315,-3.931657],[9.186803,-0.945558],[2.648657,-2.354347],[-7.485812,-2.115997],[7.679369,-3.781700],[-0.839099,2.917082],[0.770687,7.715874],[-5.628910,3.312592],[1.569769,0.145394],[3.709790,-3.539230],[-6.394618,0.271987],[2.256875,-1.516872],[9.651873,4.657094],[2.806631,-9.346637],[6.495437,-4.796864],[-6.819613,-4.205042],[5.214887,-1.231189],[4.770033,5.004182],[0.681050,-8.097474],[-3.493757,6.173211],[4.240951,-3.753443],[-8.517001,1.946238],[-1.550248,2.990113],[4.288177,-2.446875],[-9.103981,-3.513507],[0.759906,3.878225],[-7.141550,0.943582],[5.987890,-8.641633],[-9.808100,9.309237],[2.157630,-9.772877],[-7.657698,-4.392137],[7.409291,-5.717734],[6.397117,1.057062],[2.363594,-1.823117],[-0.746809,-0.675292],[-3.000769,-6.612207],[2.921840,6.244955],[-4.290910,-2.969335],[-5.960556,2.265824],[9.972538,1.169538],[-2.903092,-2.311310],[7.284873,4.808681],[-5.878279,3.286370],[3.764241,1.028663],[-2.400592,5.655107],[-2.812487,6.041166],[2.618119,-5.109978],[8.764830,5.593560],[-4.828125,2.916659],[-2.844363,1.789232],[-1.759430,-9.125538],[-6.379407,9.480568],[-9.828835,-8.135360],[-6.653906,1.716498],[-8.200588,8.551175],[1.760722,7.718407],[-8.774046,-0.832400],[3.484531,2.736638],[-9.950084,4.561575],[-9.835067,1.007591],[-6.024791,1.963706],[-4.103576,-8.022425],[0.774623,-6.766422],[-9.565869,-3.374100],[-6.744077,-2.489259],[1.816180,8.593948],[1.069669,-6.285156],[9.188044,-5.977756],[2.270489,9.079797],[7.495430,-7.178530],[9.805829,6.194630],[-5.739139,-8.805443],[-7.513109,6.728475],[-0.480786,-3.477213],[7.532016,5.050556],[-3.405221,-4.687383],[-7.913894,5.329069],[8.711104,-0.627813],[-2.095376,3.245350],[8.190538,6.481844],[-2.381394,0.411433],[-7.873260,-6.929546],[9.276709,-6.852875],[7.473416,8.861872],[-4.977067,7.888488],[5.840351,-4.483713],[-6.795927,-7.951113],[5.387792,9.243642],[-3.552908,1.656773],[-5.568581,1.606821],[3.797842,-7.977877],[-8.074551,-1.477759],[-0.435868,6.496865],[7.427908,-1.349141],[4.234098,-5.975116],[-8.697623,-0.005276],[-8.851386,9.882858],[4.751942,-1.806167],[7.286777,8.308714],[6.127653,-4.631042],[-7.142014,3.319851],[-2.819097,9.691450],[-0.055565,-6.295938],[4.210884,-0.116756],[-0.070509,0.906201],[-2.821448,4.162052],[-6.972186,8.974958],[-1.177023,4.470510],[8.261311,1.322252],[-3.801785,1.657052],[-4.423935,-7.178528],[-7.220968,0.522789],[-0.042440,-2.491834],[2.871897,-6.099800],[6.104222,0.336800],[-3.568386,-2.670879],[7.727114,4.210742],[-4.120622,-6.165530],[-7.292409,-1.221465],[6.835201,-9.891406],[-2.092810,-1.631957],[-9.533949,0.411530],[3.298933,3.939599],[-0.896049,9.665295],[7.992475,9.908675],[-2.623536,-4.833044],[-0.524881,8.145813],[8.431447,-3.120061],[2.509060,5.332442],[8.915298,0.024403],[0.706504,-9.246561],[-4.607121,7.651072],[-3.938822,9.301288],[-7.401609,-9.132215],[-4.156542,9.158338],[6.220055,-7.898712],[-2.793302,-1.670964],[-8.596142,-8.287858],[-2.609341,5.587545],[3.607341,1.629676],[-7.562060,-0.281486],[-0.949980,6.323382],[-0.987073,-5.416944],[-0.624073,-0.849267],[-9.675256,3.755854],[-2.281083,-5.724901],[-5.451790,9.492135],[-4.656408,-2.395940],[9.697289,-2.845519],[6.065768,0.759674],[-3.525683,8.377187],[-1.859710,5.202890],[-9.899548,5.261971],[0.564669,2.462732],[-4.514710,7.031976],[0.522459,7.454638],[-0.656994,3.434817],[8.971596,9.036735],[-2.220129,7.273993],[8.364645,-1.101070],[7.276242,-4.031731],[3.712169,-1.768963],[9.943744,3.679075],[6.499957,8.759507],[-9.363039,5.220704],[5.356991,9.967365],[1.550522,-1.131400],[5.514047,-1.466577],[3.718669,3.166811],[5.002842,-1.635275],[6.995943,4.712253],[-2.133569,-3.436889],[8.542547,-6.108128],[8.503044,5.814323],[-5.200561,4.962749],[-2.605577,-8.367534],[-1.140326,-2.099682],[-0.868932,-8.888638],[-4.865673,-1.844979],[5.487553,1.424029],[4.393475,0.979799],[4.141583,1.947223],[7.956776,-0.153079],[0.635489,9.801885],[-6.747476,2.099349],[-7.051879,1.042428],[2.444470,7.029090],[-3.204813,-6.290235],[-0.634000,-9.182811],[-5.200464,-4.923725],[-5.839836,6.367926],[6.487258,-5.247950],[-4.010342,-7.473459],[8.241933,-2.104744],[-7.751737,7.630568],[-3.870357,-8.294334],[-7.006378,0.245024],[-6.630343,-9.937896],[-8.258305,-8.269448],[-0.102942,3.832173],[-0.486718,1.859189],[0.431502,3.624162],[7.476801,9.906819],[-4.285667,-8.815871],[-6.694832,5.589544],[7.472241,-1.079271],[6.007993,-5.443537],[3.687539,-8.111724],[0.744255,0.143013],[7.370893,-1.302498],[-7.122653,2.650689],[3.729158,7.092290],[0.212472,6.179100],[-9.460023,-2.539455],[-3.265473,5.429505],[-9.523357,-1.206770],[0.311292,5.301842],[-5.271463,7.229768],[5.564462,7.272847],[-0.047119,-5.495351],[6.897039,3.082231],[8.296396,9.205169],[-8.100564,5.524056],[-8.188770,-9.942165],[-2.069948,1.237951],[-5.967212,6.907036],[3.890459,-0.958068],[0.457683,3.912702],[-1.747891,-2.248836],[-8.098589,-7.851809],[-2.539706,1.915429],[0.921311,-9.388175],[4.038769,-5.910024],[-8.425798,5.062636],[-7.297022,7.531650],[6.239401,-6.310048],[4.997270,1.471604],[-6.255406,-2.599106],[-5.159588,2.855568],[-7.608809,0.744248],[6.221411,1.549852],[8.890822,8.675226],[-0.787338,0.364997],[0.451133,-6.591789],[-8.860863,-5.941955],[0.361146,4.971954],[9.432345,8.347255],[-2.596295,9.070369],[-4.139848,7.078471],[-8.254712,9.196698],[8.884189,-3.492620],[-4.744117,-9.132599],[-4.302985,8.017618],[1.284619,2.936381],[3.233486,-1.619433],[2.832744,-3.584720],[-0.453735,8.587170],[-3.802436,-3.105496],[0.433454,8.253141],[6.404994,-1.966625],[-8.043290,4.897955],[-1.413701,-0.874189],[0.493347,8.727965],[5.418522,-6.988548],[6.811428,-6.699080],[-4.405106,-8.331530],[4.716996,7.876262],[8.568985,-3.919089],[3.931249,5.775395],[5.980805,8.997855],[4.849727,5.969355],[-1.386022,-8.910255],[-6.191339,-8.114592],[3.014801,-4.467144],[-1.360102,9.699153],[-1.865874,1.883397],[1.907402,4.061163],[5.165081,7.549915],[-9.697257,5.950807],[-3.015694,-6.418129],[-1.081062,5.245044],[6.643043,-9.495072],[3.363146,8.989830],[6.020265,2.935669],[-0.692245,6.726320],[-3.795107,-6.998850],[-7.458575,2.279834],[8.826076,7.806279],[-8.888346,-9.392927],[-4.233330,4.805194],[-5.448973,2.078726],[-9.232479,0.530901],[-6.912944,-5.080694],[8.034174,1.777656],[-6.779435,0.619834],[-1.776825,7.919519],[1.626583,6.021655],[-5.806951,-7.826124],[3.076050,-9.755775],[-1.740544,-4.252998],[5.008067,5.732594],[0.627905,-2.787476],[-9.240627,-8.143205],[-9.007606,6.144498],[3.465232,9.437946],[-3.555603,-8.622675],[-2.777580,7.652858],[-4.836051,9.973611],[-2.420098,0.254279],[7.430102,9.236730],[5.826148,-8.394264],[7.608703,5.906978],[-0.702102,-4.041974],[-7.654553,3.072108],[1.319045,-1.810202],[-7.671121,1.214855],[-6.083218,4.869396],[-4.681967,5.859310],[-8.124276,6.332948],[-6.689963,-7.274693],[-7.070276,0.266398],[5.393055,5.292813],[3.509876,0.817390],[4.865109,-4.908821],[6.503929,3.147148],[-9.428495,5.652681],[-9.479177,-1.668770],[0.182990,-0.718235],[0.662877,0.236314],[-6.757575,7.639664],[-9.337016,1.640497],[-6.273534,8.237732],[7.258674,2.952500],[-7.907901,-9.461429],[-2.413277,3.359283],[2.616108,3.124034],[0.446497,-4.940668],[6.546075,3.985681],[-2.476820,8.035679],[-4.296641,-9.792910],[0.445684,9.650960],[-5.974535,-4.487515],[-4.812851,-2.105851],[9.091723,-8.808237],[-4.677299,-0.005938],[-7.689741,7.563633],[0.521044,5.232239],[-3.314254,1.322043],[-4.517608,9.282336],[4.806102,9.862222],[3.895241,9.862957],[4.086422,7.078205],[-2.370935,4.614569],[7.307234,0.205256],[6.596408,-5.896955],[-3.373817,5.189872],[-9.661102,0.505795],[-3.058723,5.010275],[8.272454,6.093379],[-5.668190,-5.341550],[-3.664258,8.772669],[0.873171,-8.045617],[-7.719659,-6.707090],[1.279109,5.624869],[-2.487015,9.082331],[4.750924,-4.701852],[1.254950,7.639178],[-4.621829,1.236411],[7.876186,-8.902960],[9.267760,6.690535],[6.678923,0.849810],[5.001213,-2.522542],[6.200823,-8.135760],[-3.911121,2.376673],[-8.199837,3.053637],[4.065213,-0.675029],[1.777404,6.600782],[3.957655,-4.561455],[-6.494392,1.991797],[-3.454312,4.389549],[0.666006,-7.311379],[-0.338800,-8.154024],[-2.310641,7.668594],[-8.379629,-1.429539],[-5.118939,-9.571804],[-8.715745,-2.138207],[-7.262508,-9.641524],[8.125243,6.941153],[-0.387444,-0.817966],[3.301433,6.380085],[-9.126653,7.255085],[-3.519925,-8.815915],[3.525234,2.115986],[-8.509410,-4.338792],[6.150467,3.822611],[-8.234180,-0.925196],[5.673783,6.397702],[6.026695,-1.032984],[7.065562,-0.023954],[-2.484472,-1.490422],[1.014527,5.451961],[1.242442,9.774370],[3.140611,1.729692],[9.233974,-3.174394],[-1.895197,3.069902],[-7.534715,6.406874],[-3.122319,-1.686289],[7.026156,-8.051691],[-0.969488,-2.724700],[-1.672232,-3.339808],[-4.737350,2.803699],[2.872804,-9.575788],[-7.066421,0.432827],[-8.093448,-7.605702],[-0.085430,5.492002],[-4.715776,0.946162],[5.664649,-4.877446],[4.494728,2.612300],[8.323138,0.189568],[-0.024756,-8.527224],[7.060005,-9.728465],[6.422042,-5.890671],[6.854490,5.217495],[-8.555193,-5.195238],[-9.876513,6.164621],[4.313266,1.824319],[5.349639,-2.850088],[5.771293,-8.461132],[-8.188818,-2.830395],[-8.874034,-4.253921],[-2.924245,1.538271],[-0.907628,-2.298231],[-2.711264,-6.549724],[4.533483,-7.764802],[-0.492029,-2.577976],[-9.905990,-9.754568],[8.417353,-4.314446],[-7.008496,2.885829],[-2.589572,4.679347],[-8.254471,5.407988],[5.026551,7.157936],[5.958777,2.912375],[-0.661060,6.428989],[0.194105,5.439845],[-1.828298,-8.653585],[-0.531739,0.740556],[-5.617503,0.979281],[7.828030,1.807774],[-7.267327,6.453649],[0.483257,2.039635],[-1.753668,-7.257286],[9.178101,2.350350],[5.288027,-9.437566],[6.219299,-2.930204],[-3.205216,7.402157],[-6.182420,-2.432068],[2.457479,-3.546560],[-3.406780,-8.553615],[2.562028,-0.014791],[-0.587608,-4.316899],[8.722061,-3.338148],[5.676560,-8.854228],[-1.625472,6.255046],[9.617060,-6.726029],[8.977286,2.149693],[-5.730273,-7.569500],[-2.359656,-1.295250],[-5.712777,-1.524760],[0.732307,3.495110],[4.389287,-5.471969],[9.780112,-0.961478],[8.482539,7.361309],[1.882012,4.833536],[-6.847626,2.093766],[-0.952587,4.191669],[9.887264,3.234311],[-3.594878,7.768102],[-8.370160,-5.508608],[2.765212,-9.508866],[4.731301,3.859980],[-2.773301,-2.929090],[-1.961675,5.128710],[-6.572021,-2.512784],[-2.040249,-9.657568],[-4.608996,-3.224446],[-6.359499,-0.892871],[3.784102,-9.564417],[-1.159241,-5.482356],[-0.592464,2.289963],[-3.605205,-7.549060],[4.427300,-0.824069],[-1.982583,0.257221],[-6.567988,8.590184],[-9.451699,-0.433547],[9.500218,-8.561971],[-5.702901,-5.540147],[9.544699,-9.141048],[2.561418,-9.269747],[1.765058,-7.582717],[-5.984985,-8.803335],[-5.986825,3.454513],[7.771299,-4.877446],[-8.622094,-7.017307],[2.160227,-2.241003],[-1.361493,2.395039],[1.371113,-4.676979],[-3.056541,-0.225178],[-0.728725,-6.961103],[-3.251565,8.561588],[4.618048,-9.905200],[-9.720416,7.039267],[-8.470381,8.693543],[-7.908473,-9.737611],[-4.150459,-3.017322],[7.437769,0.344164],[1.979881,-2.269865],[1.368663,6.746070],[-8.229672,7.754310],[-4.404513,-7.956534],[-7.874513,9.400116],[-8.144932,-0.153242],[-4.734850,-7.109173],[0.770275,-1.833021],[9.674596,-3.587165],[-6.026407,3.934554],[-8.532117,-1.894839],[9.380592,1.478696],[-6.294321,-3.392796],[-8.410345,6.805677],[9.389101,-4.607439],[-5.413366,3.164896],[-3.131244,-5.413168],[9.819864,8.894038],[-8.011720,-9.389548],[-7.449446,4.838876],[-2.563446,-0.705845],[-4.224900,-2.988515],[4.560571,-2.300546],[6.243056,7.233428],[-1.678737,-8.190848],[3.852799,6.462264],[5.547039,-9.767194],[1.335073,-0.067739],[0.323781,-9.535361],[1.651157,-7.556637],[1.162331,-6.885820],[-8.498113,-5.892622],[1.279787,5.502578],[-9.770038,4.856044],[-7.257210,-3.233523],[7.172320,-2.566519],[6.958325,6.534969],[7.069744,8.492927],[-8.624194,0.364413],[9.435757,5.760805],[-3.992399,9.311381],[8.740725,9.762702],[-2.059157,7.355492],[-0.277175,2.734129],[-8.433514,-6.357773],[-3.524180,9.566781],[5.203494,4.456973],[-9.358277,-6.495908],[1.748822,-2.240025],[-1.442217,6.006065],[4.391946,-0.744268],[-8.127204,3.830897],[-0.143800,-7.169541],[7.676249,-7.399223],[-6.049738,5.858728],[-4.590764,2.617538],[1.250074,4.937006],[2.190811,0.799832],[9.647937,1.883032],[7.781018,2.849867],[-2.379323,-1.126315],[1.381606,7.076764],[-7.475559,-3.912463],[-8.554459,1.662941],[5.373526,3.419963],[2.857048,7.093562],[-7.036318,-7.208533],[2.090687,-1.835682],[1.733996,4.323753],[5.795487,-6.636725],[1.982636,-6.933424],[-0.537427,-1.908328],[-8.369682,4.998032],[-9.837382,0.169697],[9.821137,-0.896178],[7.264871,-9.265875],[5.874747,8.030148],[-2.703267,-8.658121],[-1.638672,3.563875],[-5.777751,5.025085],[3.385219,-0.274412],[0.482882,1.160552],[9.676198,-4.587090],[-3.111655,6.387031],[-7.779782,-5.886669],[-1.131586,4.579694],[5.063039,-7.750359],[-4.863855,6.963027],[-5.951935,5.647856],[1.322395,-8.841978],[-5.573617,3.589578],[4.814767,-6.382306],[5.768818,2.594686],[0.556511,-9.027312],[6.335179,2.839418],[-7.657292,-6.518471],[-2.664962,5.984786],[-7.210130,3.804484],[-8.363720,2.164195],[1.661608,4.339140],[-4.232794,2.820223],[3.559415,-1.171567],[-4.765652,-0.647057],[-5.068891,3.650086],[-4.537323,-0.799103],[-8.853280,1.732461],[-4.095289,-2.355439],[-7.017262,-4.191645],[-2.142076,6.683663],[-5.688866,4.063767],[0.970675,5.700174],[-7.250868,-0.072862],[2.603457,9.797483],[-3.083900,-6.292740],[1.671768,2.400909],[3.117286,-1.725912],[6.296381,3.810584],[8.961747,-1.689176],[6.518741,5.136114],[-4.957096,-9.958501],[-3.427676,7.777462],[0.538781,-2.387808],[-3.761052,-7.424382],[2.278852,-3.328398],[-7.144359,-4.043658],[-4.013839,-6.406095],[4.175895,5.984306],[-6.745038,4.421864],[0.274371,8.030687],[0.821678,4.535701],[5.958335,3.666848],[-9.748869,0.083699],[4.503288,-8.203567],[-7.944244,6.381324],[-5.752927,5.046791],[7.260063,-3.762137],[5.806134,1.644891],[9.524630,9.527712],[-2.162789,8.508871],[-2.507174,-0.602976],[3.103873,6.965308],[6.335648,7.072457],[3.610642,-0.884586],[2.890032,1.403588],[5.811751,1.904313],[6.602440,4.794499],[6.124549,-1.877714],[-8.954647,-6.438476],[2.292690,2.014548],[-0.741472,5.506960],[-3.479369,-0.814650],[-7.080331,-1.388891],[-2.598811,-8.281192],[-9.346822,-3.340747],[-1.097134,4.569535],[1.716690,-3.815598],[5.094368,3.803332],[-9.691628,0.291543],[0.793074,7.169062],[5.943270,6.123007],[4.023096,9.357031],[3.950839,-7.139437],[-2.590413,-3.901016],[5.619361,3.481221],[5.258736,-5.360146],[8.592499,-9.875138],[-3.294291,-1.514729],[7.606346,5.312403],[2.821977,1.424897],[-6.438541,-2.477855],[9.921871,-4.278762],[-0.137929,-4.513137],[0.886780,2.072950],[-0.502171,0.461164],[6.063712,9.063746],[7.609349,-2.042181],[4.187097,9.981206],[7.195165,3.556538],[6.325407,7.914890],[0.506513,9.082870],[-5.027647,2.090760],[-0.664594,4.095946],[-3.738310,-3.735127],[-6.867490,-1.016238],[-9.207937,5.090697],[6.699293,0.886937],[8.144867,-6.111840],[-4.400847,5.895366],[5.615840,9.797746],[4.026693,0.850061],[6.176857,7.200191],[-1.176514,-6.211878],[7.659397,-1.164718],[-6.020210,8.528443],[-0.192182,-3.156667],[6.524636,-1.613022],[-1.378727,-8.630817],[-0.133803,7.667794],[-1.241582,3.996686],[-7.549093,4.409172],[-6.619990,-1.815345],[2.987754,-7.478698],[-7.390766,-1.625428],[-8.136119,-2.754580],[0.639138,-9.102934],[-1.502999,6.635387],[-0.297872,-8.015363],[-3.790916,-7.701148],[9.322322,4.449287],[1.107234,8.021080],[-0.501667,6.037373],[-2.703569,5.950067],[7.018601,5.511750],[3.521539,-7.341713],[-0.733907,-4.840158],[-5.576627,5.830836],[-4.669556,9.526986],[-2.585217,2.990015],[-1.885165,0.487081],[-1.927780,-2.507507],[-7.211305,6.212810]], dtype = "float64")#candidate|6192|(1080, 2)|const|float64
const_6193 = relay.const([-7.734641,-6.794615,-2.617735,0.784890,1.160802,-7.383198,6.766052,-5.237849,8.071413,-8.457503,2.649401,7.316305,-9.049989,8.203562,-0.584202,3.115066,2.345650,0.929944,4.125619,-3.987180,2.887134,-0.165274,-0.949358,4.793568,-8.368540,0.544319,-1.833863,2.518020,5.003252,-6.618784,5.153607,1.782340,-3.181199,7.464129,3.286691,-6.418211,-8.618589,6.496473,2.530162,-2.666447,-4.963823,4.705437,-4.635104,4.311546,-0.958325,4.404266,-8.673026,-1.151520,-3.852516,-1.437955,0.355927,-4.832671,-7.347006,-8.686763,-7.757171,0.759214,-3.941670,-3.315502,-5.653645,-6.941262,4.384382,-2.144279,-3.965472,-5.706291,-4.969511,-4.554098,7.991195,-6.375530,-0.630252,-7.815572,5.778888,2.859205,-5.937356,7.823767,-4.815600,8.262873,8.385551,7.854436,-1.347113,-2.218690,-1.328668,-6.940994,-5.032044,1.431131,3.237930,2.317975,-0.583692,-5.623205,-7.245506,4.321989,-5.578460,7.322153,-2.166192,5.299203,-0.126305,-7.062652,8.391975,2.555086,1.221467,-2.206021,-4.711355,1.911752,3.728040,3.208023,9.482343,-1.712251,-0.855871,-2.316182,-5.469176,7.870852,5.103847,4.570986,3.223731,-1.797903,-1.361046,4.691714,0.877392,5.384291,5.289765,-3.232457,3.954170,-8.417955,-8.120546,-8.225946,-6.848406,-0.374444,5.159027,-9.312891,-6.997817,5.276725,-1.600020,0.029828,-0.314124,-8.038502,3.619781,-0.717732,4.904671,-5.087401,2.227337,-8.314742,6.603417,-2.201083,-9.620516,7.208390,8.503715,5.437041,0.806089,6.971133,6.590292,9.395118,8.800494,8.902243,-1.476370,-5.946902,8.502879,-2.011843,2.720437,0.609826,9.429411,-7.235982,-6.676267,-3.070405,-6.554830,4.443123,3.764046,9.588972,-3.002345,7.862431,-8.394385,6.726182,-9.432118,-5.534476,-3.533790,-5.213886,-1.968098,-3.479340,-9.977684,3.184389,9.172054,6.277109,6.233351,3.483908,6.000610,8.458221,-4.858461,2.847585,-6.113895,1.295064,-0.306162,-1.435095,-0.068421,0.540583,-6.704439,-2.354916,7.104583,-2.498452,-3.695366,-1.608361,4.823282,2.945059,-7.911167,-8.307558,6.019526,5.761205,0.917875,-9.952838,0.813393,6.837394,-0.984629,5.545673,7.991214,0.325503,6.202834,1.760421,1.342329,-1.968569,-7.464377,-5.845211,-2.969810,4.036593,7.251082,-0.349376,2.658201,-4.979557,3.640061,9.850402,-7.349066,-8.834906,-4.452542,-9.368727,-7.967270,-1.912245,6.407848,-8.689111,-9.333575,-6.847177,-9.090656,-0.389764,-9.857257,3.707344,-5.261182,-6.973863,0.188342,-2.641780,-9.385170,1.245350,-2.431564,9.668567,-3.798672,7.259896,4.460007,3.434677,-9.287898,3.795921,-9.242849,-5.269499,8.787227,3.509571,3.741536,2.145687,-9.685140,0.826942,-6.526438,8.338996,-1.390190,5.934253,-4.603847,8.822139,8.615676,6.786151,-4.067105,-7.052630,-9.723149,-1.570261,-0.829565,9.983351,6.941500,9.073855,-8.026152,-2.632909,0.845168,-1.029917,-9.154353,2.251924,5.410036,-3.189091,-4.902578,6.827254,-5.703832,0.030343,2.712902,-7.174582,9.093825,-0.171715,-3.373109,-7.407293,5.422335,2.075483,1.417933,1.595418,9.698857,-8.622645,-2.280384,-1.373556,5.884904,6.676573,-9.093360,3.756314,5.240041,2.808436,8.647655,-5.990475,3.637514,-2.442136,-8.257122,2.397294,9.843728,6.951013,7.178155,1.698897,5.878564,-9.448917,-5.048959,5.572169,7.292054,3.060315,6.939638,6.749792,0.872625,8.930322,0.361387,8.598263,-6.060546,6.045707,-8.196656,-9.388071,9.467622,6.164683,3.827543,-3.582965,-8.884488,2.592817,2.935487,-5.360015,-8.860144,-0.459606,-7.073950,8.141477,-6.603915,-9.899337,6.451695,0.536116,6.318448,-7.958181,3.896812,-1.066291,-9.511097,5.726870,-9.551186,-0.789722,0.367826,2.106579,-7.337791,-6.920585,3.718007,4.560317,-0.579204,9.657607,9.048267,-9.088465,-2.768645,-2.053929,-4.474061,-6.932396,0.750126,4.144776,7.365904,-4.065073,8.762207,4.238119,-1.245797,2.212167,0.199735,-2.473882,-8.813373,7.241981,7.440892,9.421621,-6.268660,7.128966,-6.177308,-8.707108,1.414310,8.479566,-4.627954,5.281889,0.672138,3.015244,8.690326,-1.900907,-8.873107,2.950340,8.890974,6.917226,-3.603852,-3.165612,6.099888,3.840226,7.628282,-3.465047,8.828006,-2.557234,-3.543278,9.853737,-1.440678,-9.695069,0.082336,-3.806283,-0.609558,-3.958403,-8.348214,-3.796850,-3.021731,-0.815994,-4.456084,3.578709,-9.661280,1.669137,1.660031,2.291263,-8.293182,-8.914891,8.222024,-7.073287,-2.545576,-6.912809,9.153990,-0.240232,-2.924926,-7.420622,1.527090,-2.730075,0.780341,2.567737,-6.415481,-9.148095,-8.887277,6.924660,-2.867159,7.257663,-2.782843,6.451174,-9.968042,2.232912,9.480008,-3.200735,5.810211,-7.058179,-5.541729,5.838490,-0.590183,7.839523,-0.339991,-0.370618,-7.484889,1.695806,-9.438377,9.117561,9.180887,5.970306,-3.306883,7.704104,1.005840,-9.761586,3.816556,-5.179267,-8.919858,-4.567226,-5.141770,6.340506,3.206066,-7.492366,5.116680,-8.158737,-7.999733,0.613445,6.478032,5.364766,2.834178,-8.560977,3.227251,-4.222246,-5.653405,0.923316,-4.868702,-8.085213,0.615495,5.354858,-1.086240,3.040750,9.443217,6.574864,-1.885496,8.695379,-6.914565,-4.800754,7.339083,5.279320,-6.509077,-8.429872,5.296058,-1.437258,1.612592,-3.423076,5.379532,9.615835,-6.950827,-9.413566,2.602602,-4.049030,2.792671,4.710365,-6.847662,7.332340,0.237121,3.031236,-9.325189,-6.449705,6.819763,0.478621,-4.895656,6.703428,2.541486,1.810700,-6.413632,-9.257468,1.398167,-9.224315,2.615155,-6.707565,3.763101,9.190491,3.113503,-5.651098,-4.908389,8.226025,-3.403311,-2.182360,-2.947825,-6.257213,5.093716,8.272018,-7.476983,-4.503428,5.242494,0.258618,-1.916286,-6.006219,-4.472317,-8.815055,-6.159212,2.486055,1.114774,-5.003060,-0.167766,-7.259359,6.208650,-2.095237,1.271788,0.167808,2.390984,1.375849,-5.111468,5.308317,-3.912531,0.976034,6.532505,7.532236,-4.973461,7.756866,-8.528539,3.822752,0.190316,-8.507308,-3.838315,7.706264,-6.550499,-4.846268,-1.977024,5.620121,8.725000,5.016902,3.008411,9.103748,-6.029338,-4.802281,-2.586290,-7.141784,7.026734,-5.519267,5.988216,8.571792,0.897382,-4.904274,4.731463,-7.783276,-0.686232,-7.970742,0.822216,-8.881070,-4.757109,-0.152034,-6.450394,-7.969861,2.267549,5.363794,-6.534847,-8.331934,-6.260305,1.645824,-9.214091,8.095535,4.858214,5.802936,1.265380,-2.060237,-4.888690,7.245514,4.505137,6.578127,-3.226876,7.959645,4.430220,-1.734047,-7.850465,-4.956008,-7.878029,-3.446370,5.441856,-3.124012,6.261361,-8.669505,3.757706,-3.808322,9.405479,-3.932186,-9.171381,-0.748775,6.127872,-1.368368,-3.958052,9.735273,-8.684822,-4.241786,2.411564,-8.977065,4.989150,-0.168002,-0.285308,4.137980,-8.185154,-0.982462,-7.264426,5.871531,1.417160,7.335247,-4.018738,-0.171129,-5.080763,-9.233690,1.781878,-0.324632,9.019861,-5.466176,1.939114,0.843366,8.516208,6.541831,-5.426837,5.753733,-6.110211,0.473688,7.265677,1.394644,-1.590479,5.036630,-8.806690,-1.616742,1.862239,-0.337488,-6.741507,-0.449585,2.824695,0.973692,-7.902571,3.312240,-6.842905,7.571146,2.863434,0.289536,-1.213846,4.116175,9.849028,-6.546205,-3.490543,2.999829,-9.405391,-2.480471,7.950046,5.805433,8.721781,-3.583060,3.955214,8.900967,-5.319327,-6.889479,-5.428036,-5.741405,2.270613,-8.002857,0.788741,5.617065,1.652181,1.466715,6.676116,6.484266,3.663229,-4.078917,9.085350,3.208772,6.459537,4.427280,-2.957502,4.347757,-8.688902,8.438081,0.063659,-0.642230,8.844107,-1.504966,-3.061510,6.661240,5.668294,9.943557,6.990961,5.233301,-2.185104,-9.815141,-8.615275,0.766494,4.587089,-5.567764,9.599790,-0.856903,-1.789041,8.484143,-1.070100,-2.879062,4.858091,-8.093758,9.133930,5.204645,-0.507503,-3.141283,1.393137,-5.572756,-4.596931,3.604723,9.859480,-8.779620,-5.888943,-6.548250,-2.870078,8.951295,-5.855925,8.246093,7.674392,-8.463542,-6.594986,-5.197734,-5.936256,6.523689,1.681968,-4.181502,-9.962941,-4.191713,-2.581606,7.013121,7.028313,-9.480839,-7.110231,6.900296,-7.727214,-3.041316,-3.680672,-7.840219,3.460317,-5.405084,8.558093,0.510755,5.699105,-2.831147,-5.474777,3.982120,-7.603892,-1.427790,5.056491,-7.122631,6.933264,-8.800052,6.502274,-8.718213,-1.082426,0.076776,9.030478,4.288013,-2.918536,-1.765151,3.106868,0.203190,-7.272289,1.861254,5.308538,8.622885,-9.044185,3.071150,1.598561,-4.803044,-6.086138,3.480996,-1.671303,-9.493549,-0.366780,8.250268,-2.312078,-1.231174,-1.159735,-8.934632,2.509800,-0.338882,-4.275657,-4.199925,4.887731,0.755567,-6.170932,8.595256,-9.431077,-1.582751,6.861509,-6.537033,-2.522120,-7.301242,-9.420518,-1.585191,-1.620228,0.010954,-3.218171,-3.151355,-3.836244,7.234029,-6.673871,7.529190,3.919361,-4.796576,-1.688230,-4.546813,7.294187,0.701946,-8.563507,9.603139,4.813607,6.854776,-7.866855,8.472700,2.242617,-1.158131,-4.969727,-1.175742,5.701897,-0.440369,-1.555753,-4.046671,3.347235,4.359854,0.688877,-9.050721,-7.433870,6.584636,-6.700201,8.793184,3.264134,6.160428,-3.792027,8.037737,-7.379059,3.097648,1.552986,-1.219902,1.229023,-3.187383,6.975178,2.476756,-2.211973,-9.697578,-5.316098,-5.564721,5.043596,5.408576,-0.072809,2.396227,-5.349984,9.767352,-7.514042,-8.141894,7.998553,1.629346,6.583919,-3.695319,9.973494,-9.167734,2.411560,1.361635,0.435867,-1.030069,-7.988082,-8.323510,-2.499289,-4.512550,-9.401796,-5.431964,7.838604,-5.556033,8.928801,-7.772018,0.295101,-5.598975,9.367984,-5.488117,-0.908501,-6.110516,-4.056451,4.074917,-6.453515,-1.201212,-9.996042,7.945098,-8.689952,-8.176968,-3.351930,-3.892017,-4.061007,-1.497304,-2.403863,-3.597205,8.580361,5.298000,8.385983,-5.026001,-5.240674,-0.706192], dtype = "float32")#candidate|6193|(960,)|const|float32
call_6191 = relay.TupleGetItem(func_1203_call(relay.reshape(const_6192.astype('float64'), [180, 12]), relay.reshape(const_6193.astype('float32'), [10, 96]), relay.reshape(const_6192.astype('float32'), [180, 12]), relay.reshape(const_6192.astype('float32'), [180, 12]), ), 9)
call_6194 = relay.TupleGetItem(func_1209_call(relay.reshape(const_6192.astype('float64'), [180, 12]), relay.reshape(const_6193.astype('float32'), [10, 96]), relay.reshape(const_6192.astype('float32'), [180, 12]), relay.reshape(const_6192.astype('float32'), [180, 12]), ), 9)
func_6092_call = mod.get_global_var('func_6092')
func_6095_call = mutated_mod.get_global_var('func_6095')
var_6196 = relay.var("var_6196", dtype = "int32", shape = (891,))#candidate|6196|(891,)|var|int32
call_6195 = relay.TupleGetItem(func_6092_call(relay.reshape(var_6196.astype('int32'), [891,])), 1)
call_6197 = relay.TupleGetItem(func_6095_call(relay.reshape(var_6196.astype('int32'), [891,])), 1)
func_4929_call = mod.get_global_var('func_4929')
func_4931_call = mutated_mod.get_global_var('func_4931')
call_6229 = func_4929_call(relay.reshape(var_6196.astype('float64'), [9, 9, 11]))
call_6230 = func_4929_call(relay.reshape(var_6196.astype('float64'), [9, 9, 11]))
output = relay.Tuple([call_6185,call_6191,const_6192,const_6193,call_6195,var_6196,call_6229,])
output2 = relay.Tuple([call_6186,call_6194,const_6192,const_6193,call_6197,var_6196,call_6230,])
func_6235 = relay.Function([var_6196,], output)
mod['func_6235'] = func_6235
mod = relay.transform.InferType()(mod)
var_6236 = relay.var("var_6236", dtype = "int32", shape = (891,))#candidate|6236|(891,)|var|int32
output = func_6235(var_6236)
func_6237 = relay.Function([var_6236], output)
mutated_mod['func_6237'] = func_6237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4677_call = mod.get_global_var('func_4677')
func_4679_call = mutated_mod.get_global_var('func_4679')
call_6242 = relay.TupleGetItem(func_4677_call(), 0)
call_6243 = relay.TupleGetItem(func_4679_call(), 0)
func_3163_call = mod.get_global_var('func_3163')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_6246 = relay.TupleGetItem(func_3163_call(), 0)
call_6247 = relay.TupleGetItem(func_3165_call(), 0)
output = relay.Tuple([call_6242,call_6246,])
output2 = relay.Tuple([call_6243,call_6247,])
func_6267 = relay.Function([], output)
mod['func_6267'] = func_6267
mod = relay.transform.InferType()(mod)
output = func_6267()
func_6268 = relay.Function([], output)
mutated_mod['func_6268'] = func_6268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3859_call = mod.get_global_var('func_3859')
func_3861_call = mutated_mod.get_global_var('func_3861')
call_6308 = relay.TupleGetItem(func_3859_call(), 0)
call_6309 = relay.TupleGetItem(func_3861_call(), 0)
func_4056_call = mod.get_global_var('func_4056')
func_4058_call = mutated_mod.get_global_var('func_4058')
call_6311 = func_4056_call()
call_6312 = func_4056_call()
output = relay.Tuple([call_6308,call_6311,])
output2 = relay.Tuple([call_6309,call_6312,])
func_6313 = relay.Function([], output)
mod['func_6313'] = func_6313
mod = relay.transform.InferType()(mod)
mutated_mod['func_6313'] = func_6313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6313_call = mutated_mod.get_global_var('func_6313')
call_6314 = func_6313_call()
output = call_6314
func_6315 = relay.Function([], output)
mutated_mod['func_6315'] = func_6315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3749_call = mod.get_global_var('func_3749')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_6318 = relay.TupleGetItem(func_3749_call(), 1)
call_6319 = relay.TupleGetItem(func_3751_call(), 1)
output = relay.Tuple([call_6318,])
output2 = relay.Tuple([call_6319,])
func_6326 = relay.Function([], output)
mod['func_6326'] = func_6326
mod = relay.transform.InferType()(mod)
mutated_mod['func_6326'] = func_6326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6326_call = mutated_mod.get_global_var('func_6326')
call_6327 = func_6326_call()
output = call_6327
func_6328 = relay.Function([], output)
mutated_mod['func_6328'] = func_6328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6326_call = mod.get_global_var('func_6326')
func_6328_call = mutated_mod.get_global_var('func_6328')
call_6339 = relay.TupleGetItem(func_6326_call(), 0)
call_6340 = relay.TupleGetItem(func_6328_call(), 0)
output = relay.Tuple([call_6339,])
output2 = relay.Tuple([call_6340,])
func_6366 = relay.Function([], output)
mod['func_6366'] = func_6366
mod = relay.transform.InferType()(mod)
mutated_mod['func_6366'] = func_6366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6366_call = mutated_mod.get_global_var('func_6366')
call_6367 = func_6366_call()
output = call_6367
func_6368 = relay.Function([], output)
mutated_mod['func_6368'] = func_6368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2345_call = mod.get_global_var('func_2345')
func_2346_call = mutated_mod.get_global_var('func_2346')
call_6383 = relay.TupleGetItem(func_2345_call(), 1)
call_6384 = relay.TupleGetItem(func_2346_call(), 1)
uop_6401 = relay.log(call_6383.astype('float64')) # shape=(180, 12)
uop_6403 = relay.log(call_6384.astype('float64')) # shape=(180, 12)
func_6366_call = mod.get_global_var('func_6366')
func_6368_call = mutated_mod.get_global_var('func_6368')
call_6417 = relay.TupleGetItem(func_6366_call(), 0)
call_6418 = relay.TupleGetItem(func_6368_call(), 0)
output = relay.Tuple([uop_6401,call_6417,])
output2 = relay.Tuple([uop_6403,call_6418,])
func_6430 = relay.Function([], output)
mod['func_6430'] = func_6430
mod = relay.transform.InferType()(mod)
mutated_mod['func_6430'] = func_6430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6430_call = mutated_mod.get_global_var('func_6430')
call_6431 = func_6430_call()
output = call_6431
func_6432 = relay.Function([], output)
mutated_mod['func_6432'] = func_6432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4132_call = mod.get_global_var('func_4132')
func_4134_call = mutated_mod.get_global_var('func_4134')
call_6462 = relay.TupleGetItem(func_4132_call(), 1)
call_6463 = relay.TupleGetItem(func_4134_call(), 1)
output = relay.Tuple([call_6462,])
output2 = relay.Tuple([call_6463,])
func_6492 = relay.Function([], output)
mod['func_6492'] = func_6492
mod = relay.transform.InferType()(mod)
mutated_mod['func_6492'] = func_6492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6492_call = mutated_mod.get_global_var('func_6492')
call_6493 = func_6492_call()
output = call_6493
func_6494 = relay.Function([], output)
mutated_mod['func_6494'] = func_6494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2298_call = mod.get_global_var('func_2298')
func_2299_call = mutated_mod.get_global_var('func_2299')
call_6509 = func_2298_call()
call_6510 = func_2298_call()
output = call_6509
output2 = call_6510
func_6512 = relay.Function([], output)
mod['func_6512'] = func_6512
mod = relay.transform.InferType()(mod)
mutated_mod['func_6512'] = func_6512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6512_call = mutated_mod.get_global_var('func_6512')
call_6513 = func_6512_call()
output = call_6513
func_6514 = relay.Function([], output)
mutated_mod['func_6514'] = func_6514
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6535 = relay.var("var_6535", dtype = "int8", shape = (8, 1, 10))#candidate|6535|(8, 1, 10)|var|int8
const_6536 = relay.const([[[1,7,-6,1,8,2,-3,-10,-8,-7],[6,-5,-2,-5,-7,-8,-7,-2,-1,4],[-2,-1,-3,-1,-6,3,4,6,-7,2],[10,-6,7,9,2,9,-4,-8,3,-7],[-10,2,-8,-9,9,-9,-3,7,-3,-10],[-4,9,-1,-4,-8,7,9,9,-8,-2],[-10,-8,-8,-3,-3,-7,3,-4,5,-1],[7,1,7,-5,8,2,2,3,6,10]],[[10,-8,-3,9,10,-1,10,-5,1,10],[9,1,5,-1,1,-2,-9,8,-3,-2],[-9,-2,-6,-3,-8,8,8,-1,5,-6],[3,1,-10,-6,6,-8,4,3,8,8],[-1,-5,8,-4,8,-3,-9,3,-3,-6],[10,5,3,-3,-6,-7,7,-9,-8,10],[-4,6,-7,-5,-9,-1,-5,4,-8,1],[10,-2,1,-4,4,-4,-8,4,-1,-8]],[[-9,9,7,6,-2,9,6,-9,-3,-8],[6,5,-4,9,-7,-6,-8,-2,10,-2],[4,4,-5,9,-5,-4,10,-7,6,10],[5,-2,10,-9,4,5,-5,8,-10,-5],[-3,-8,-8,-9,-2,-10,4,-9,-7,-7],[2,-9,-8,6,-3,5,-1,2,7,-4],[8,-6,-7,9,5,-7,7,-3,-2,-5],[1,-2,4,-2,3,9,-1,8,-2,-3]],[[2,-4,-5,-5,8,-1,-1,-3,-7,7],[-10,-5,-1,-10,7,-10,5,-7,-2,7],[-2,1,1,10,7,-10,-4,-10,6,-10],[5,-4,-5,-1,3,7,4,1,-1,3],[-8,7,-8,1,-8,8,2,-4,-3,1],[10,-1,7,-2,-5,-6,-10,7,1,1],[-8,3,-1,4,-1,-7,-7,9,-2,-2],[-6,2,-3,-3,4,6,-2,-1,-7,4]],[[3,2,4,2,2,5,-2,5,5,-2],[1,2,-8,-6,-9,2,6,2,5,7],[7,7,-8,-7,-8,3,-8,3,-9,10],[1,-2,7,-4,7,2,-3,7,1,6],[4,9,6,7,-2,3,-10,8,-8,-10],[6,-1,10,4,-4,1,2,2,-5,-1],[-6,10,-1,3,-3,-4,-6,-7,5,-10],[-2,4,4,-1,-5,-3,9,8,2,-7]],[[8,-3,8,-3,-3,-9,3,-10,1,5],[4,-8,-3,-2,2,9,3,-2,-2,-4],[-7,2,8,8,-1,-7,1,7,4,9],[9,3,10,4,2,8,3,-1,10,-2],[10,-8,-5,-5,4,-4,-1,-6,-4,-4],[-8,-6,-2,4,6,-5,-3,9,7,6],[9,-6,-7,-3,5,-7,-2,6,2,8],[-5,-6,3,8,-9,-1,4,-1,4,-4]],[[-5,-5,-6,3,-2,5,3,8,7,5],[-2,-6,-8,9,-5,2,-6,7,8,9],[2,-7,-5,2,-3,-10,7,-3,-5,6],[5,-7,5,-2,-7,-4,5,5,-8,-2],[6,-8,-7,8,3,-1,-4,-1,6,3],[-4,-4,8,-9,-8,1,-4,-7,-8,-5],[10,1,-4,-2,-6,4,10,9,9,8],[8,3,8,2,-6,-9,3,-10,-2,9]],[[-5,-6,-3,7,-2,1,-4,-1,-6,-8],[-2,-9,-5,-3,-1,-5,-5,5,7,-2],[-9,-10,-7,5,5,-6,-10,-3,-7,-4],[-9,7,1,4,4,-8,8,5,-8,-9],[-6,4,-3,3,-3,8,-5,8,7,-5],[-7,-5,10,2,-10,2,9,2,-3,2],[1,8,5,5,7,2,-2,10,-6,-9],[-5,-4,7,8,2,-3,-8,-2,-6,-4]]], dtype = "int8")#candidate|6536|(8, 8, 10)|const|int8
bop_6537 = relay.subtract(var_6535.astype('int8'), const_6536.astype('int8')) # shape=(8, 8, 10)
func_737_call = mod.get_global_var('func_737')
func_740_call = mutated_mod.get_global_var('func_740')
const_6547 = relay.const([2.552892,3.304873,4.860630,-6.965438,4.127478,0.160533,-5.592259,-8.617478,6.374868,-2.780014,9.701818,0.772803,-3.248335,7.515041,-9.848284,-9.544778,-6.527913,-4.996167,4.362500,-9.713471,4.835990,-5.912272,-5.422150,6.747228,-7.468380,-8.880595,6.497972,-9.334423,-7.840145,9.678564,9.782097,7.577106,-0.339660,-6.531283,-8.816288,-7.494304,-2.606321,5.713852,3.627584,-0.180657,0.381090,-3.392087,-0.258974,-2.417166,-0.925551,2.382195,3.089869,7.859459,-8.285999,-7.143008,0.930641,-3.611351,6.684077,-7.332045,-6.233153,-2.575314,1.057248,0.440977,-4.016351,7.394331,3.566527,-1.780268,8.951374,-7.330320,0.605421,-7.224519,-6.937525,-0.978744,-2.014199,-3.199608,0.991231,-7.905024,7.711730,-3.244079,5.671492,9.037209,-9.196556,-9.952124,8.210411,-5.141152,8.645656,1.883057,4.195026,7.654045,-4.856885,7.830464,-2.813643,3.321335,6.906209,9.379620,6.506561,5.371805,6.281881,8.368472,9.152465,5.966237,-0.136606,-2.411811,8.950735,0.052824,1.479866,2.267186,0.608231,-8.759803,5.271720,4.640604,-4.873848,-1.647977,-8.137459,-1.613382,8.068920,-6.293017,5.902676,-9.227009,-9.121739,-9.308250,-4.364512,-5.743766,-4.163267,-5.117247,-9.505650,-8.645829,-5.487452,-9.858240,-0.276182,-3.194027,3.877156,3.948935,0.445416,5.784170,-8.754760,-5.232074,1.386045,-8.976057,7.216685,2.173802,-4.811594,-6.160462,8.401813,-5.433783,9.463929,1.879814,9.553603,7.810365,-8.859780,3.465306,6.344055,6.202370,-3.192798,-8.439394,-5.673122,0.786981,-4.712243,-1.879037,6.310212,4.354919,1.959771,6.989862,-1.441464,-2.612614,2.661102,3.119186,6.010251,9.749335,-7.392643,0.064138,-7.964947,5.897037,-4.670498,-8.066349,-6.296111,-0.429263,-3.016173,6.270001,2.774667,-1.079243,2.257811,2.890582,-4.244213,-4.750356,-1.397880,-1.969561,-2.030616,7.144048,3.558504,-7.152867,-9.073707,0.993470,-0.289767,4.890711,-4.154126,-6.033182,4.006084,-8.336806,2.078373,-1.122276,-2.471582,-3.885668,-2.134102,2.333316,9.982320,-0.578774,5.647030,-5.445175,-4.666694,0.758494,0.647451,-6.792435,9.743994,2.415249,1.161633,-7.859073,-4.222240,-5.892559,0.814511,-8.118480,-8.108402,-4.549250,-8.989888,3.835987,-4.709595,-1.902470,5.510378,-7.040271,1.512831,9.859060,2.655170,9.547497,-1.395910,-0.795035,4.156146,-9.093555,6.574207,9.128790,7.071853,-0.715749,3.675695,-2.957087,8.266437,0.483666,-2.288937,0.747394,6.677385,3.827650,3.513223,3.303335,-6.456828,-3.391706,-4.213600,7.930064,-8.217775,5.027599,-5.262379,-5.464524,-4.078583,5.132119,-8.159911,-1.934959,2.993507,5.324091,3.341909,6.439060,-1.659171,-3.007787,-2.480041,2.276864,4.291314,-0.009647,-1.649977,-2.819718,1.519332,8.971198,-1.992645,6.134341,7.911574,-9.945835,5.746102,-2.300476,9.162320,-3.546168,-0.590995,8.137844,-0.729228,-7.286143,-0.551970,3.478622,-2.065373,-8.501640,-6.961789,-6.993934,-0.432353,-0.167008,-1.397731,-0.359594,2.049755,6.871773,-7.528457,-7.292691,1.679418,1.012149,4.790325,1.907570,8.362285,-1.881810,7.414420,6.230606,-5.836311,2.286237,-7.409626,-9.374723,-1.313677,1.195495,-8.156996,4.767882,-0.785073,-4.316147,0.036504,9.765274,0.195173,-8.128199,-1.738269,-5.197185,4.388885,-0.159431,8.782305,-6.902369,-8.097588,-4.934600,4.213719,-1.884818,-6.026696,4.100218,-5.849249,-5.052261,-0.709503,-2.616654,-2.992060,1.325780,-6.839810,8.116501,1.123285,4.191123,-2.085906,-4.558674,1.066354,0.660221,4.946501,1.362029,-5.786809,2.084701,-5.241514,6.433760,2.285645,1.202081,-2.583687,4.123637,-8.245735,-1.360563,4.719044,-9.572183,2.018455,-8.792412,-6.957450,8.557851,-8.072376,2.466823,-4.509729,8.704148,-7.455067,-0.928847,-1.187856,-8.908876,-2.850484,6.567145,6.020991,5.492331,7.019570,-4.129958,2.963262,-0.150533,-8.137155,6.599452,5.636651,-1.207039,4.228226,-7.412189,7.364144,-4.126981,2.120248,8.206881,1.579020,-5.375421,-8.656813,-5.330931,-9.952180,4.702464,-5.380361,0.258883,-3.691244,4.594749,-1.737512,2.868706,-7.447244,-5.747229,8.896633,7.035984,-1.455623,2.556583,-8.273616,-8.365926,0.401863,3.587458,-3.694936,2.678451,1.914880,-3.189871,-9.920912,3.852712,4.604250,7.911623,2.776572,8.786014,-6.688259,-4.540995,-1.649878,5.419776,2.555035,-1.814874,1.706522,-7.497274,-6.834778,6.931632,-3.294247,-9.049247,-2.168283,-5.076369,-3.082865,5.345316,-8.071640,0.583161,-6.461238,-0.972855,3.966001,-3.785677,-6.452353,5.318358,4.758218,-8.878681,3.366156,-8.603475,-2.762686,2.169374,-9.470205,9.793194,9.386134,-4.017751,7.407787,0.072617,5.675496,6.424586,-1.064939,-7.126908,7.808825,9.218262,6.012222,-8.364980,-4.652941,-8.487071,-7.766515,8.329846,-5.553533,-5.573259,7.146458,4.036333,1.095708,-3.778406,2.833539,9.254540,7.557503,-7.259090,-1.616888,-8.381322,-6.280573,-3.475667,-6.891377,-2.243508,1.396764,-8.626596,-4.555230,4.989778,6.152648,8.107733,-8.211360,8.559461,4.727794,0.938392,1.478291,-5.247402,-4.862118,-9.342497,0.234236,-2.194887,9.793655,5.869188,-7.190293,6.267252,-7.956781,-7.566994,-4.680109,3.540247,0.430698,9.554702,-2.783190,4.246258,-1.048615,-3.730264,-6.192766,-9.719401,5.598345,-1.965857,-7.271297,9.066355,-6.554545,-4.053559,-6.176280,9.764224,-8.780962,-4.716356,-2.130695,1.007325,2.094794,-7.021710,-3.341523,-0.961903,-8.270979,7.546481,-7.894252,-8.276036,7.703109,1.241944,-2.235353,8.206355,-0.894720,6.629364,4.204635,0.801341,-6.458262,5.868510,3.559681,3.893438,-8.868488,-5.810112,3.750078,0.690429,5.444586,-1.435828,1.889025,-5.076771,3.103890,3.519183,9.881889,-7.955239,-9.940837,-0.970126,9.327467,-6.691471,7.812135,-5.305640,1.405373,8.362364,0.630672,-1.156037,8.797981,-3.011928,-4.972141,-6.346973,-7.941225,-1.389774,-2.214009,-5.306786,-6.120857,3.035306,-7.408336,-4.446522,6.899451,-4.092912,-3.275192,-3.412881,-5.149638,-2.007368,-6.265083,-0.890609,9.690375,3.480965,9.976171,3.097675,-3.047268,8.400874,6.164580,-7.772356,7.692432,9.093082,6.302831,-1.095433,-3.342050,0.783682,7.271307,4.533672,-8.361657,-6.682587,2.110356,2.249929,-3.397191,-5.081903,-8.281121,-2.396752,0.772803,2.377573,6.081296,-9.788410,1.568776,-2.864807,3.627606,6.169986,3.074694,-3.930816,-0.395062,-4.641485,-5.346854,-5.196115,-5.100408,0.866567,-1.166932,-7.026508,-3.611824,5.214789,-1.539942,-4.797721,2.511477,5.545930,6.175933,6.189568,7.191234,-5.433572,-1.830868,3.477148,6.158606,4.628154,4.849848,-3.255359,-3.610763,3.860368,4.494165,2.686338,-8.159450,2.942680,-6.345517,5.089994,2.341637,5.998965,-0.436661,-1.215906,1.694151,3.716534,5.126755,-3.844454,0.158392,8.834305,5.103127,4.268539,2.331270,3.616702,-1.453311,-8.433212,-3.426461,1.556068,-3.955410,6.292203,4.651365,-6.750171,-5.749444,5.862007,3.358459,-0.994145,7.330226,-3.972067,2.952224,-0.312384,-5.045912,4.291141,-1.950084,0.411211,-9.920002,2.506042,1.190433,-0.137882,-7.498203,1.254113,-8.554165,1.032560,4.797558,3.562260,4.586408,-3.897352,-2.292879,3.729032,5.548191,0.756693,4.465537,7.416212,-1.162070,-7.300747,6.957344,-8.970458,5.249684,5.629662,4.951630,9.449479,-1.569791,-1.910878,1.940546,-2.402107,-2.267958,-1.434909,-7.721078,-7.658600,-6.131327,7.382841,-9.717869,7.335236,7.365586,7.128987,0.521772,-7.397729,-6.122068,-0.212901,-2.675654,-5.151083,-0.631758,-7.522646,7.254938,-7.845054,2.784808,2.533664,5.233379,3.434667,-2.494899,-3.553255,-4.613322,2.221587,4.285618,-1.309628,-6.097603,4.124979,-3.397194,7.518661,-1.148479,9.934466,-9.185375,-1.147499,8.895158,-0.280419,-6.477554,-9.533039,8.050318,7.878973,7.511600,-1.113303,1.797911,3.183206,7.718736,4.307423,-3.000692,1.340770,5.629826,-9.703502,-3.862065,-2.681692,8.963640,4.242268,5.035323,-4.026050,-6.611832,-6.502997,-0.358616,5.752547,0.504568,1.631753,0.020426,-9.744321,-2.142205,-1.872364,2.486607,8.722370,7.265927,-8.699560,-8.995448,9.047791,2.516476,-0.473591,0.032093,-1.714324,-4.390696,-0.801710,-7.383190,-8.034111,-1.496579,9.686256,-0.461149,-1.514543,7.692864,-7.947896,2.540897,1.777247,4.916340,-8.372369,4.417423,7.236521,4.472601,-9.289053,-6.814018,-5.500421,3.450298,3.828240,8.036203,0.188407,-1.081193,-5.046181,0.823233,-9.093763,6.112481,-8.935772,7.260076,-0.410952,8.249556,5.834210,2.100854,-5.499264,7.135971,-6.135880,-0.301188,-2.678890,4.752017,-7.495722,-3.616086,-5.177772,-3.185530,-5.437561,-5.043300,-3.982072,9.238549,-6.484154,3.689371,1.357677,-3.721379,5.512500,7.845333,2.596700,-4.005616,-1.931162,-5.928262,-6.661524,3.465730,5.623258,0.352649,9.231764,3.432354,-2.294604,2.012923,9.018765,8.760422,-1.079463,-1.468080,-2.239727,6.004476,7.492982,4.676671,-1.362012,7.249209,-2.034013,1.316684,0.446893,0.817466,-4.924129,-5.440522,-1.311608,-0.671788,-6.515306,-2.829128,-3.887769,8.597621,-7.042567,3.606927,3.232343,-4.319628,-9.685310,-5.187441,-1.746501,4.980945,-9.092788,-4.373577,9.515379,4.013689,-1.020616,-9.625709,2.680297,-8.097216,-3.723759,9.771903,-1.042429,-7.946584,0.102823,9.718678,-6.560142,-6.047375,-0.299548,-0.079261,-7.559609,0.860039,9.182853,4.379591,-0.163091,-4.070394,3.259510,-0.313237,7.597762,-5.379373,8.266843,-0.133890,-8.195703,-5.394972,-4.592254,9.476646,-8.113745,8.286268,-3.465138,5.521708,-1.784776,-4.617013,9.597793,-6.446915,2.149594,5.737610,-2.496416,-8.566615,7.170251,8.391980,3.988543,-8.839008,5.480543,-0.016167,-1.026903,-4.420620,9.044746,-6.708574,-4.618425,-6.957444,-2.335006,-4.926458,5.300837,9.856612,-4.459070,-5.905849,2.723597,5.998525,-1.369536,9.228620,4.681714,-1.346488,-9.515846,6.233256,4.580046,-1.657344,-1.950790,-7.766904,4.061389,-3.619892,-7.464421,-5.625280,8.309120,-5.347624,6.190416,-5.212891,-6.896937,9.431829,5.504494,3.128647,-3.898408,-3.554903,-7.879846,8.768353,5.997526,5.211780,-9.913458,6.177804,-3.306335,-7.653866,2.483401,-5.586792,5.925170,-3.387917,7.686897,2.212875,3.736054,-0.257845,-4.352663,-0.074567,4.515540,4.621233,1.892677,3.632359,-1.017687,7.228421,-7.902572,8.337579,5.671517,-3.314352,8.468233,8.555843,-4.697103,0.400614,6.038648,-5.335009,2.677816,-2.770029,-0.569791,-9.596904,1.793718,3.195353,-3.286209,0.677798,-8.433781,-6.817288,1.590764,1.600790,6.231566,-1.938342,-2.934147,8.169492,-3.748409,-1.528764,1.038863,-5.287385,-8.421069,-9.216585,-3.669240,-2.511079,2.711883,0.569405,-5.829678,-3.767046,2.277699,-8.261282,3.363277,7.967942,-7.565478,0.285910,5.029822,-0.870967,9.295895,-6.684106,6.212047,-3.519663,4.847507,5.330458,-3.363573,9.371533,9.234360,0.033546,1.287470,-0.632100,-5.441612,5.077207,5.725605,6.098433,-8.493410,7.005286,2.074888,-5.599401,9.549424,-7.448532,-8.555491,8.491348,-9.187944,-8.350879,9.437300,2.731704,-1.661221,9.598611,-8.377202,-0.397125,-6.997887], dtype = "float64")#candidate|6547|(1092,)|const|float64
call_6546 = func_737_call(relay.reshape(const_6547.astype('float64'), [13, 6, 14]))
call_6548 = func_737_call(relay.reshape(const_6547.astype('float64'), [13, 6, 14]))
func_4132_call = mod.get_global_var('func_4132')
func_4134_call = mutated_mod.get_global_var('func_4134')
call_6555 = relay.TupleGetItem(func_4132_call(), 2)
call_6556 = relay.TupleGetItem(func_4134_call(), 2)
func_2712_call = mod.get_global_var('func_2712')
func_2717_call = mutated_mod.get_global_var('func_2717')
var_6573 = relay.var("var_6573", dtype = "uint8", shape = (990,))#candidate|6573|(990,)|var|uint8
const_6574 = relay.const([True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,False,False,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,True,False,False,True,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,True,True,True,True,True,True,False,False,False,True,False,True,True,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,True,True,True,False,False,True,True,False,False,True,False,False,False,False,False,True,True,True,False,False,True,False,False,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,True,False,True,False,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,False,True,False,True,False,False,False,True,True,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,True,True,False,False,False,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,False,False,False,False,False,True,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False,False,True,True,True,True,True,True,True,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,True,True,True,True,False,False,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,True,False,False,True,True,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,True,False,True,False,False,True,True,False,False,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,False,False,True,True,False,False,True,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,True,False,True,False,False,False,False,False,True,False,True,True,False,True,False,True,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,False,False,False,False,True,True,False,False,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,True,False,False,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,False,True,True,False,True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,False,False,False,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,True,False,False,False,True,True,True,True,True,False,True,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,False,False,False,False,False,False,False,False,False,False,True,False,False,False,False,False,False,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,False,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,False,True,True,False,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,False,True,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,True,False,True,True,False,True,True,False,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,False], dtype = "bool")#candidate|6574|(2160,)|const|bool
call_6572 = relay.TupleGetItem(func_2712_call(relay.reshape(var_6573.astype('uint8'), [11, 10, 9]), relay.reshape(var_6573.astype('uint8'), [11, 10, 9]), relay.reshape(const_6574.astype('bool'), [1080, 2]), ), 1)
call_6575 = relay.TupleGetItem(func_2717_call(relay.reshape(var_6573.astype('uint8'), [11, 10, 9]), relay.reshape(var_6573.astype('uint8'), [11, 10, 9]), relay.reshape(const_6574.astype('bool'), [1080, 2]), ), 1)
output = relay.Tuple([bop_6537,call_6546,const_6547,call_6555,call_6572,var_6573,const_6574,])
output2 = relay.Tuple([bop_6537,call_6548,const_6547,call_6556,call_6575,var_6573,const_6574,])
func_6576 = relay.Function([var_6535,var_6573,], output)
mod['func_6576'] = func_6576
mod = relay.transform.InferType()(mod)
mutated_mod['func_6576'] = func_6576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6576_call = mutated_mod.get_global_var('func_6576')
var_6578 = relay.var("var_6578", dtype = "int8", shape = (8, 1, 10))#candidate|6578|(8, 1, 10)|var|int8
var_6579 = relay.var("var_6579", dtype = "uint8", shape = (990,))#candidate|6579|(990,)|var|uint8
call_6577 = func_6576_call(var_6578,var_6579,)
output = call_6577
func_6580 = relay.Function([var_6578,var_6579,], output)
mutated_mod['func_6580'] = func_6580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4842_call = mod.get_global_var('func_4842')
func_4844_call = mutated_mod.get_global_var('func_4844')
call_6615 = relay.TupleGetItem(func_4842_call(), 0)
call_6616 = relay.TupleGetItem(func_4844_call(), 0)
output = call_6615
output2 = call_6616
func_6645 = relay.Function([], output)
mod['func_6645'] = func_6645
mod = relay.transform.InferType()(mod)
mutated_mod['func_6645'] = func_6645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6645_call = mutated_mod.get_global_var('func_6645')
call_6646 = func_6645_call()
output = call_6646
func_6647 = relay.Function([], output)
mutated_mod['func_6647'] = func_6647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4402_call = mod.get_global_var('func_4402')
func_4404_call = mutated_mod.get_global_var('func_4404')
call_6665 = func_4402_call()
call_6666 = func_4402_call()
output = call_6665
output2 = call_6666
func_6678 = relay.Function([], output)
mod['func_6678'] = func_6678
mod = relay.transform.InferType()(mod)
mutated_mod['func_6678'] = func_6678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6678_call = mutated_mod.get_global_var('func_6678')
call_6679 = func_6678_call()
output = call_6679
func_6680 = relay.Function([], output)
mutated_mod['func_6680'] = func_6680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1525_call = mod.get_global_var('func_1525')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_6706 = func_1525_call()
call_6707 = func_1525_call()
output = call_6706
output2 = call_6707
func_6708 = relay.Function([], output)
mod['func_6708'] = func_6708
mod = relay.transform.InferType()(mod)
output = func_6708()
func_6709 = relay.Function([], output)
mutated_mod['func_6709'] = func_6709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6708_call = mod.get_global_var('func_6708')
func_6709_call = mutated_mod.get_global_var('func_6709')
call_6730 = func_6708_call()
call_6731 = func_6708_call()
var_6738 = relay.var("var_6738", dtype = "float32", shape = (180, 12))#candidate|6738|(180, 12)|var|float32
bop_6739 = relay.less_equal(call_6730.astype('bool'), relay.reshape(var_6738.astype('bool'), relay.shape_of(call_6730))) # shape=(180, 12)
bop_6742 = relay.less_equal(call_6731.astype('bool'), relay.reshape(var_6738.astype('bool'), relay.shape_of(call_6731))) # shape=(180, 12)
bop_6743 = relay.floor_mod(call_6730.astype('float64'), relay.reshape(bop_6739.astype('float64'), relay.shape_of(call_6730))) # shape=(180, 12)
bop_6746 = relay.floor_mod(call_6731.astype('float64'), relay.reshape(bop_6742.astype('float64'), relay.shape_of(call_6731))) # shape=(180, 12)
output = bop_6743
output2 = bop_6746
func_6751 = relay.Function([var_6738,], output)
mod['func_6751'] = func_6751
mod = relay.transform.InferType()(mod)
mutated_mod['func_6751'] = func_6751
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6752 = relay.var("var_6752", dtype = "float32", shape = (180, 12))#candidate|6752|(180, 12)|var|float32
func_6751_call = mutated_mod.get_global_var('func_6751')
call_6753 = func_6751_call(var_6752)
output = call_6753
func_6754 = relay.Function([var_6752], output)
mutated_mod['func_6754'] = func_6754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1253_call = mod.get_global_var('func_1253')
func_1255_call = mutated_mod.get_global_var('func_1255')
call_6764 = func_1253_call()
call_6765 = func_1253_call()
output = relay.Tuple([call_6764,])
output2 = relay.Tuple([call_6765,])
func_6782 = relay.Function([], output)
mod['func_6782'] = func_6782
mod = relay.transform.InferType()(mod)
output = func_6782()
func_6783 = relay.Function([], output)
mutated_mod['func_6783'] = func_6783
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6843 = relay.var("var_6843", dtype = "float32", shape = (7, 6, 6))#candidate|6843|(7, 6, 6)|var|float32
uop_6844 = relay.log10(var_6843.astype('float32')) # shape=(7, 6, 6)
func_5840_call = mod.get_global_var('func_5840')
func_5842_call = mutated_mod.get_global_var('func_5842')
call_6846 = func_5840_call()
call_6847 = func_5840_call()
uop_6858 = relay.exp(var_6843.astype('float64')) # shape=(7, 6, 6)
bop_6860 = relay.not_equal(uop_6844.astype('bool'), relay.reshape(uop_6858.astype('bool'), relay.shape_of(uop_6844))) # shape=(7, 6, 6)
output = relay.Tuple([call_6846,bop_6860,])
output2 = relay.Tuple([call_6847,bop_6860,])
func_6878 = relay.Function([var_6843,], output)
mod['func_6878'] = func_6878
mod = relay.transform.InferType()(mod)
mutated_mod['func_6878'] = func_6878
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6879 = relay.var("var_6879", dtype = "float32", shape = (7, 6, 6))#candidate|6879|(7, 6, 6)|var|float32
func_6878_call = mutated_mod.get_global_var('func_6878')
call_6880 = func_6878_call(var_6879)
output = call_6880
func_6881 = relay.Function([var_6879], output)
mutated_mod['func_6881'] = func_6881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4580_call = mod.get_global_var('func_4580')
func_4582_call = mutated_mod.get_global_var('func_4582')
call_6889 = relay.TupleGetItem(func_4580_call(), 0)
call_6890 = relay.TupleGetItem(func_4582_call(), 0)
func_5792_call = mod.get_global_var('func_5792')
func_5797_call = mutated_mod.get_global_var('func_5797')
const_6897 = relay.const([[-10,-3,-1,3,-4,-4,-6,-6,-9,2,-1,-5,9,2,2,8,-4,-1,1,-7,-8,7,-1,-4,8,-8,4,-2,1,-2,3,-7,9,1,1,-9,10,2,-9,-2,4,-7,-5,-3,2,-1,5,1,-7,6,-10,-8,-10,-4,7,-7,-5,-3,-3,9,2,-2,10,-1,-8,7,-3,-10,5,4,-9,-7,5,-7,8,6,5,-7,3,-6,-6,-9,-9,-3,-5,10,-8,-2,-9,-1,-6,7,5,8,1,-1,6,7,8,-2,7,-7,-1,5,-10,6,-3,7,8,-8,-9,7,8,3,-2,-9,8,-1,6,6,-2,10,-9,3,-4,8,9,-1,7,-3,2,9,1,-7,-8,3,-9,-7,-1,6,3,-1,9,-3,7,-9,-9,8,-10,7,2,-10,-4,-1,-9,-10,-3,9,4,-2,8,-1,10,7,8,8,3,-3,6,1,3,10,-4,-9,10,9,-3,-5,2,4,7,10,-1,6,-4,-5,-10,-2,3,-5,3,3,4,8,1,6,4,-7],[-8,4,-9,1,-3,6,-4,-1,4,-2,1,8,2,1,9,-4,-2,-1,7,-2,2,-6,-10,-3,10,-7,-5,-4,-9,6,-4,5,7,7,-5,-4,-9,-5,-9,5,6,-2,-5,2,3,1,6,-3,1,9,-1,7,5,-8,2,4,5,1,-2,3,-10,-5,2,3,8,-1,7,8,10,8,1,-10,-8,8,3,-7,8,1,-8,3,-6,-6,10,7,-3,-2,7,-3,-4,-6,4,1,-5,-2,-7,-10,9,8,-1,-1,-9,9,6,10,-4,-6,2,-10,10,-10,7,1,-8,-7,-1,-5,3,6,-5,7,7,-8,1,-5,-10,-9,7,-4,9,5,-2,-10,-4,2,7,1,-5,2,-6,8,-2,-6,-6,-3,4,5,-8,-8,-3,2,-10,-3,-1,-10,2,7,-4,10,-5,-5,10,-4,-4,1,-5,-9,-5,9,-7,-6,-8,10,8,-1,4,-4,3,5,4,-7,8,-3,8,2,4,2,-3,-3,-6,-7,-10,7,1,-3,9,-4,-5,1],[-1,-7,-2,-5,5,7,-2,-4,-5,8,-4,-1,-2,-9,3,10,-4,7,8,-1,1,6,10,8,2,1,8,10,-10,6,-10,5,3,-8,-5,-6,6,-10,2,2,-5,-2,9,-2,3,-10,2,5,-7,-6,3,-9,-4,5,-6,-1,-2,-3,-7,7,2,-2,-3,8,1,2,-6,3,9,-5,5,-9,3,5,6,-1,-1,3,-10,-4,6,7,9,1,7,7,4,-8,-8,6,-7,2,-7,-2,5,2,-3,3,-10,-4,-10,1,-4,10,2,-6,2,8,3,8,5,-1,-8,4,9,-5,8,-5,-4,6,3,-8,-2,-4,-4,4,2,-2,10,-10,-4,1,2,-4,-3,4,-4,8,-7,-10,-5,-4,10,1,4,10,-6,-9,7,5,-6,7,-1,6,7,1,-10,3,1,-7,-5,2,-8,-2,-8,6,-5,-4,7,-4,-5,10,-10,-3,-5,5,-9,-3,-9,3,-9,-1,-1,-3,-8,7,-2,9,10,-2,-6,6,7,2,2,3,-6,8],[-3,10,-7,-5,3,-10,7,9,2,-9,-5,-5,8,-8,6,4,8,1,10,-4,-9,6,-8,-1,10,-7,3,-2,2,7,-8,7,4,1,3,7,-10,10,-7,6,9,10,9,-4,2,1,2,-7,-6,-10,-4,3,-9,-9,1,2,3,5,4,3,9,-7,1,-9,2,8,-6,9,-3,10,6,-8,-5,-2,-10,-6,-10,4,-9,-10,2,-9,8,-4,6,5,-9,2,-5,3,-9,6,4,-9,-1,-5,7,-3,-2,6,-2,-10,3,5,4,3,8,1,9,6,10,-5,7,-2,7,-7,-10,-10,-6,-2,2,4,-7,2,6,8,-1,-3,-2,-9,4,8,10,-8,2,7,-7,5,-5,-10,5,6,-2,6,5,-3,-1,4,10,8,-4,-7,7,5,-9,10,4,3,5,1,7,1,-6,9,-7,-9,3,3,8,-1,-4,4,-9,7,-6,-3,4,-1,9,6,7,6,-1,-2,-7,-9,-4,-1,8,6,-6,-7,3,1,-9,7,-2,8],[3,6,10,3,8,6,1,10,-1,8,-6,-5,7,3,-6,-5,-10,1,8,-4,7,10,2,-7,-8,8,-5,-1,4,2,-4,10,-1,1,-2,-6,7,-9,8,3,-3,2,-3,-10,6,8,2,1,9,-3,-1,2,-6,8,-8,-10,1,9,-6,2,5,-1,7,2,-5,7,-5,5,-9,-3,-5,8,-6,1,-9,5,2,3,-7,-5,10,-10,10,-6,8,8,4,-9,-4,-4,3,9,3,-5,4,5,-2,1,-10,-1,-6,-2,-4,1,-1,-2,-2,8,-2,-8,-2,2,-9,6,-10,10,5,-6,-2,10,4,8,5,-5,-10,3,7,-6,8,8,8,-4,9,-5,-9,-4,6,-2,7,-8,-8,9,-4,-2,8,8,7,10,-4,-4,-9,-7,-10,8,4,-4,-4,-2,9,-1,-5,4,3,-5,-10,-9,9,6,4,-9,-9,-5,-6,-3,10,-6,5,6,-6,6,-1,-7,-2,4,-8,-6,-3,-3,-7,-8,10,-1,-3,-4,9,-7,4,3]], dtype = "uint8")#candidate|6897|(5, 198)|const|uint8
var_6898 = relay.var("var_6898", dtype = "int16", shape = (5, 30))#candidate|6898|(5, 30)|var|int16
call_6896 = relay.TupleGetItem(func_5792_call(relay.reshape(call_6889.astype('float64'), [135,]), relay.reshape(const_6897.astype('uint8'), [990,]), relay.reshape(var_6898.astype('int16'), [10, 1, 15]), ), 1)
call_6899 = relay.TupleGetItem(func_5797_call(relay.reshape(call_6889.astype('float64'), [135,]), relay.reshape(const_6897.astype('uint8'), [990,]), relay.reshape(var_6898.astype('int16'), [10, 1, 15]), ), 1)
uop_6910 = relay.erf(const_6897.astype('float32')) # shape=(5, 198)
func_2265_call = mod.get_global_var('func_2265')
func_2268_call = mutated_mod.get_global_var('func_2268')
var_6915 = relay.var("var_6915", dtype = "float32", shape = (891,))#candidate|6915|(891,)|var|float32
call_6914 = relay.TupleGetItem(func_2265_call(relay.reshape(var_6915.astype('float32'), [9, 9, 11])), 2)
call_6916 = relay.TupleGetItem(func_2268_call(relay.reshape(var_6915.astype('float32'), [9, 9, 11])), 2)
bop_6919 = relay.subtract(uop_6910.astype('int64'), relay.reshape(const_6897.astype('int64'), relay.shape_of(uop_6910))) # shape=(5, 198)
func_3163_call = mod.get_global_var('func_3163')
func_3165_call = mutated_mod.get_global_var('func_3165')
call_6926 = relay.TupleGetItem(func_3163_call(), 0)
call_6927 = relay.TupleGetItem(func_3165_call(), 0)
output = relay.Tuple([call_6889,call_6896,var_6898,call_6914,var_6915,bop_6919,call_6926,])
output2 = relay.Tuple([call_6890,call_6899,var_6898,call_6916,var_6915,bop_6919,call_6927,])
func_6928 = relay.Function([var_6898,var_6915,], output)
mod['func_6928'] = func_6928
mod = relay.transform.InferType()(mod)
mutated_mod['func_6928'] = func_6928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6928_call = mutated_mod.get_global_var('func_6928')
var_6930 = relay.var("var_6930", dtype = "int16", shape = (5, 30))#candidate|6930|(5, 30)|var|int16
var_6931 = relay.var("var_6931", dtype = "float32", shape = (891,))#candidate|6931|(891,)|var|float32
call_6929 = func_6928_call(var_6930,var_6931,)
output = call_6929
func_6932 = relay.Function([var_6930,var_6931,], output)
mutated_mod['func_6932'] = func_6932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4159_call = mod.get_global_var('func_4159')
func_4160_call = mutated_mod.get_global_var('func_4160')
call_6938 = func_4159_call()
call_6939 = func_4159_call()
func_4777_call = mod.get_global_var('func_4777')
func_4780_call = mutated_mod.get_global_var('func_4780')
call_6952 = relay.TupleGetItem(func_4777_call(relay.reshape(call_6938.astype('float64'), [45, 3])), 10)
call_6953 = relay.TupleGetItem(func_4780_call(relay.reshape(call_6938.astype('float64'), [45, 3])), 10)
output = relay.Tuple([call_6938,call_6952,])
output2 = relay.Tuple([call_6939,call_6953,])
func_6960 = relay.Function([], output)
mod['func_6960'] = func_6960
mod = relay.transform.InferType()(mod)
output = func_6960()
func_6961 = relay.Function([], output)
mutated_mod['func_6961'] = func_6961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2298_call = mod.get_global_var('func_2298')
func_2299_call = mutated_mod.get_global_var('func_2299')
call_6970 = func_2298_call()
call_6971 = func_2298_call()
uop_6972 = relay.atan(call_6970.astype('float64')) # shape=(180, 12)
uop_6974 = relay.atan(call_6971.astype('float64')) # shape=(180, 12)
uop_6977 = relay.cosh(uop_6972.astype('float32')) # shape=(180, 12)
uop_6979 = relay.cosh(uop_6974.astype('float32')) # shape=(180, 12)
output = uop_6977
output2 = uop_6979
func_6987 = relay.Function([], output)
mod['func_6987'] = func_6987
mod = relay.transform.InferType()(mod)
mutated_mod['func_6987'] = func_6987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6987_call = mutated_mod.get_global_var('func_6987')
call_6988 = func_6987_call()
output = call_6988
func_6989 = relay.Function([], output)
mutated_mod['func_6989'] = func_6989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4132_call = mod.get_global_var('func_4132')
func_4134_call = mutated_mod.get_global_var('func_4134')
call_6995 = relay.TupleGetItem(func_4132_call(), 1)
call_6996 = relay.TupleGetItem(func_4134_call(), 1)
func_3964_call = mod.get_global_var('func_3964')
func_3968_call = mutated_mod.get_global_var('func_3968')
var_6999 = relay.var("var_6999", dtype = "int32", shape = (891,))#candidate|6999|(891,)|var|int32
const_7000 = relay.const([3.571461,7.586919,5.029985,5.752662,-6.400068,-6.919314,1.927134,2.907016,-8.138548,-8.254260,6.045846,-5.364160,9.090742,1.009944,0.354668,-4.548675,-4.843657,-8.374165,0.378658,9.044889,-6.167385,3.159633,-5.124565,4.729327,-4.123393,7.685875,9.923848,-2.181668,9.014751,2.910444,-1.661702,3.237335,-0.701323,-9.675743,4.053005,2.776244,5.882487,0.116620,-0.222073,-8.666137,-7.899257,-4.758219,7.959393,3.160407,-3.196954,-1.834438,-3.842087,3.342220,2.187986,-4.782197,8.747143,9.810666,-1.554653,-3.623809,0.783348,-8.323603,5.350934,9.855125,1.145699,4.392056,4.971408,-4.242213,-6.865114,-6.275226,-3.465289,-0.311943,3.976088,-6.306122,6.900610,-7.654229,-7.080840,-8.158970,5.328312,-7.048937,-0.706331,-5.576215,1.439114,7.941402,-6.743690,-8.309933,9.066015,7.229761,-6.320749,-5.885782,-1.854108,-4.466805,2.352716,-4.932516,-5.261571,5.990163,1.605267,-1.726054,5.446698,-3.671988,-2.052790,-9.284792,0.643111,-8.099954,6.272501,7.477815,2.242029,-2.833731,2.930947,1.361426,-7.205051,-8.058100,-0.176076,-4.338769,4.572046,6.988555,9.174385,6.716121,8.848967,-4.140985,-6.780201,6.910757,2.682619,2.435693,-2.177513,-3.487103,1.092880,-7.440290,-1.970896,1.285299,8.242010,2.149221,-3.202488,-2.050888,-7.699476,0.731872,-1.083847,-7.836606,-9.804159,-3.565083,-4.173780,8.711654,-1.031186,6.717804,4.740166,-9.223920,8.422848,3.915893,-8.969686,-1.642277,2.563995,2.374872,-0.512232,3.689218,2.457965,7.518440,5.187552,-6.914062,3.885846,-6.631181,-4.124577,7.029901,-1.552796,-6.949134,-2.867502,5.741671,-4.300009,-5.381584,-8.776584,5.875522,8.211696,9.227492,-6.168401,-6.128400,9.564245,-6.330496,6.530595,8.479974,-4.579489,-0.447199,-8.311365,-4.552396,7.963141,5.508446,0.220661,4.434048,-3.292754,0.957287,-3.306646,-1.769550,-7.846639,-5.960458,-6.153834,6.941761,3.760181,-9.632728,8.374556,-6.677260,5.566092,-4.037243,-8.761663,0.757017,-4.996561,6.573077,9.414088,-2.317318,-3.048353,6.972859,-5.197504,-0.182141,0.731362,-9.741032,8.202068,6.214939,-6.127157,8.821676,8.587930,7.124140,7.393049,8.408423,-3.118020,-4.939901,-9.390684,-1.860829,-7.331270,-1.400387,2.808199,-1.739558,7.292043,0.885179,7.212771,-1.736188,0.904684,-4.589721,2.009957,9.414414,2.158022,-3.685651,-1.081259,8.913970,2.021085,-7.670245,-8.960406,-7.987114,-1.286253,8.176495,-9.211575,-6.723548,-2.624162,1.317153,-7.902617,6.957922,-0.316991,0.920762,-3.636554,-8.709911,-2.441894,-0.253428,8.773686,-4.531924,-9.038936,-1.031683,-8.407216,2.454704,3.281195,-4.730845,5.835746,-0.012581,9.256605,-8.546261,-6.318786,-1.748612,4.214052,8.507591,2.519336,-3.851304,4.805980,-4.354878,-4.266911,-2.633356,-4.409377,4.225304,4.029271,-9.493118,-8.350413,-6.416363,7.665461,0.636260,-9.413276,7.110126,0.665917,9.454403,-0.534297,-5.402035,9.090858,5.036699,1.003204,-8.550872,-7.330439,2.218316,9.669859,9.509132,-3.021437,-6.168881,3.129101,-0.675074,7.295319,1.288739,-0.981130,-6.247436,9.734304,9.769031,2.531271,0.844811,-5.844761,-1.827808,-7.337669,-9.117980,-4.031145,6.859018,1.937697,-0.573773,-0.780698,-7.415767,3.085885,-1.104403,-3.675728,7.771297,5.622526,2.730326,-1.039013,-5.402905,8.153919,3.896459,3.979137,9.933431,7.838496,2.129593,-6.075123,-2.654141,0.956184,-8.494741,-4.457252,9.600420,-4.928035,-3.910783,-9.404990,0.033968,1.591138,2.019381,-2.709197,3.476303,9.366520,5.996696,6.885099,5.052064,-9.406169,-7.616830,-9.308775,3.183871,4.254040,1.334972,-8.101164,1.706857,6.670541,-8.353637,-2.096382,0.729561,-4.407129,7.867088,-9.752966,-6.381940,-3.224408,-3.617635,-3.217955,9.744230,0.799103,0.705649,3.237009,0.028255,-7.502400,-5.801723,-2.951932,-0.322000,-7.305928,-3.833707,-9.413350,-0.945747,9.720030,2.771693,-6.486546,1.920554,7.868480,9.034686,-4.963430,-2.822118,-7.511057,5.419285,-1.500123,5.027122,2.726326,-3.614482,1.581417,-6.058298,4.840896,-4.089739,-3.053867,5.650085,8.500977,-8.328853,3.323049,-1.966530,-5.068138,-3.797826,9.621683,0.424349,7.554863,-2.114770,-3.698097,-8.872902,2.152513,7.808205,-0.919583,4.979725,4.970817,3.353728,-5.346600,-9.517254,6.102065,-7.953316,1.175700,7.914827,6.685996,9.307323,-5.265503,6.616804,-7.364867,0.521615,2.629236,-9.911082,0.285247,9.825910,0.319355,-2.965460,6.180204,9.724790,-9.756112,3.993226,9.207416,-0.100785,-5.074940,4.821096,-8.098951,-9.517565,5.232528,5.479424,-2.603135,1.705586,-1.169693,7.038043,-4.549539,-6.124326,5.027480,-2.820343,-2.530016,9.916817,-3.051948,-9.591363,8.724181,-1.464911,9.686915,6.476489,-9.357587,-9.738702,-9.309895,-7.172343,-3.766959,-1.408201,3.682995,-0.734352,0.125916,-6.202930,-8.933952,-2.577205,2.440888,4.285362,-9.299336,4.671203,4.841703,-5.425185,2.653999,-4.449973,7.287552,3.955820,5.909562,2.791432,2.909812,-8.639243,-1.443941,-3.898661,6.618240,-6.967126,-6.307048,-2.171191,7.638988,-7.156951,-9.219436,0.843298,6.963208,-7.960563,-6.956552,6.867963,8.638700,-7.165957,-3.785337,-9.384652,-1.050340,-6.665372,-0.015176,-8.553354,7.287242,-6.348341,5.858895,3.627348,-9.474615,5.661712,8.789829,1.494164,-4.847241,-1.204861,-1.016057,-9.438632,-2.954705,0.017755,8.049679,-2.168930,-0.728310,-4.361336,-5.946654,-5.993209,4.293857,-5.046181,-7.104016,-0.715394,7.196728,-5.688372,9.286004,-8.543567,4.658031,-0.922496,7.762718,3.587678,8.924736,4.024465,0.070732,-8.231927,4.898773,-9.818363,-0.397464,-3.400500,3.688668,9.794371,7.748369,-2.532284,-1.647844,9.391740,-0.948161,5.215784,7.217515,6.771712,4.346789,1.561680,-2.603857,-0.620276,-6.503873,-9.791889,7.637838,-1.228543,5.839603,7.239365,1.710968,6.488183,3.526823,3.315412,1.439716,-8.130207,1.915197,7.514180,2.131945,-5.251117,-6.004243,2.001370,3.925968,-4.717415,6.212566,-5.611021,7.597544,-3.986512,-5.054497,2.677202,-4.672092,-4.568530,2.686021,-1.715303,-6.665540,8.075717,1.413400,-1.139729,-1.280845,-9.326137,3.499288,5.051827,-6.266748,2.597441,8.815296,0.387704,-2.604892,8.246031,7.957698,-2.218959,6.059354,3.266341,6.142747,6.464514,-2.991106,7.113057,-4.150888,-3.408373,-9.399118,2.260931,-7.983367,4.109735,7.601722,3.550924,-1.248586,-6.660614,3.137613,3.876993,2.138089,-7.695002,-9.433554,0.372992,-6.811351,9.747981,-3.212270,8.383148,4.662371,1.785187,9.082599,-7.030350,9.569770,8.088730,-0.563379,9.354958,2.823005,5.236260,2.358311,-4.562721,9.188741,-0.686406,4.193325,-6.318856,-4.366191,9.599529,-0.104629,-5.227682,-9.484353,-2.695427,-0.482606,-9.891815,-4.655702,2.168102,1.823644,9.326400,9.002257,-8.720951,0.970811,-5.747785,-7.942597,-5.856349,5.696959,-6.943152,-0.366811,-3.274363,-3.589371,1.972395,-5.591705,-4.757404,-6.248671,-4.839599,0.846844,-1.335004,-2.152926,6.596869,-9.741207,8.269880,-1.768634,2.805880,2.619744,7.815883,2.780952,-2.131288,1.229914,3.778542,-8.819352,5.959680,-9.527030,9.228237,-4.092458,9.232182,-4.673245,-1.332403,3.873549,6.382122,4.854125,-6.921114,9.638221,6.770585,-4.682258,8.066153,-8.574397,-4.288694,-2.349173,4.285499,-4.585056,-4.828106,-1.475655,0.306889,-9.276712,-8.812774,4.838947,-3.236202,3.561819,1.811739,-8.508595,-0.659298,-9.159757,6.908449,-7.781624,2.490268,-8.408787,0.791118,5.817661,-1.410256,-3.408511,6.042980,8.731092,-5.299018,2.162976,-6.575792,-2.208811,9.160572,-6.021907,-7.241229,9.685280,1.093259,2.567503,-7.004245,-5.537922,-4.228613,7.163845,-6.367957,-8.542263,2.731953,8.698527,3.633617,1.758712,-9.376372,-9.142753,-8.113890,-7.442069,6.702821,7.532605,-4.627064,-0.100808,-2.891589,7.110163,-4.002192,7.648427,3.895506,-8.272350,1.472444,1.578955,9.160469,-9.022347,-9.955343,7.252532,-1.939999,5.212872,-8.913019,0.260001,-5.178725,-3.818625,-9.003635,-3.048591,-2.914308,9.062150,-8.485455,9.826866,-6.204112,-9.230376,-3.810010,-6.791055,-2.890733,-8.709188,8.748621,7.529954,-1.750505,-9.978843,3.130717,-5.198085,1.360634,3.093737,9.091147,7.045812,-3.336221,-0.457019,-4.952801,1.368434,-7.445406,6.736987,-0.070275,6.844571,-6.348240,2.272667,6.321056,0.786792,9.090620,-9.047705,9.258673,-1.968026,0.513419,0.568189,3.076214,-8.668095,-7.690649,3.262965,-1.974125,2.429602,7.118774,5.580811,-4.620205,6.857677,2.653193,-6.985158,-6.160438,2.623976,8.416857,9.138431,1.634758,2.844300,5.125033,-4.635704,4.163534,1.041442,1.701116,2.651475,0.601126,4.166588,8.533482,-1.776013,3.529561,4.906818,-4.660240,3.630502,1.636746,5.919873,-7.950070,-4.374589,9.496908,-5.989767,-6.458317,-9.826886,-9.218074,9.591445,-9.770092,2.203525,5.933162,-9.803315,4.200430,9.917792,-2.781054,-5.016721,6.940480,5.872913,-1.325543,1.092750,7.980697,-5.520262,6.955349,1.613872,0.903985,3.138623,-8.930122,-0.943191,-3.745776,-6.723083,-5.909629,7.202800,8.122301,-0.311229,-8.762230,1.341331,-0.282577,1.679800,6.727956,9.635102,-5.034520,0.654478,-5.444072,-1.779903,9.150162,-9.218614,1.560293,3.352977,-3.510774,-2.267873,4.092368,-4.633097,-3.485291,-4.155983,2.256874,-5.017278,-4.610266,-0.280559,-3.927385,8.388148,3.143312,9.838341,5.226863,1.900545,7.920630,-7.578688,5.755012,-6.223374,7.633815,4.704381,-6.763107,-8.814963,2.481360,4.945551,7.276554,-9.433139,-5.162056,-6.122540,-5.231782,6.761815,3.040607,9.348279,1.525606,-7.668465,-2.968154,4.679744,-1.291172,5.591895,-0.579579,0.812839,-9.286049,-6.219354,0.682945,-7.473795,-1.443538,0.587668,-3.033972,6.261373,-5.708132], dtype = "float32")#candidate|7000|(960,)|const|float32
var_7001 = relay.var("var_7001", dtype = "float64", shape = (1092,))#candidate|7001|(1092,)|var|float64
call_6998 = relay.TupleGetItem(func_3964_call(relay.reshape(var_6999.astype('int32'), [891,]), relay.reshape(const_7000.astype('float32'), [960,]), relay.reshape(var_7001.astype('float64'), [1092,]), ), 1)
call_7002 = relay.TupleGetItem(func_3968_call(relay.reshape(var_6999.astype('int32'), [891,]), relay.reshape(const_7000.astype('float32'), [960,]), relay.reshape(var_7001.astype('float64'), [1092,]), ), 1)
func_5449_call = mod.get_global_var('func_5449')
func_5451_call = mutated_mod.get_global_var('func_5451')
call_7005 = func_5449_call()
call_7006 = func_5449_call()
func_6708_call = mod.get_global_var('func_6708')
func_6709_call = mutated_mod.get_global_var('func_6709')
call_7026 = func_6708_call()
call_7027 = func_6708_call()
var_7032 = relay.var("var_7032", dtype = "bool", shape = (9, 9, 11))#candidate|7032|(9, 9, 11)|var|bool
bop_7033 = relay.minimum(call_6998.astype('int64'), relay.reshape(var_7032.astype('int64'), relay.shape_of(call_6998))) # shape=(9, 9, 11)
bop_7036 = relay.minimum(call_7002.astype('int64'), relay.reshape(var_7032.astype('int64'), relay.shape_of(call_7002))) # shape=(9, 9, 11)
func_3695_call = mod.get_global_var('func_3695')
func_3696_call = mutated_mod.get_global_var('func_3696')
call_7038 = relay.TupleGetItem(func_3695_call(), 1)
call_7039 = relay.TupleGetItem(func_3696_call(), 1)
output = relay.Tuple([call_6995,var_6999,const_7000,var_7001,call_7005,call_7026,bop_7033,call_7038,])
output2 = relay.Tuple([call_6996,var_6999,const_7000,var_7001,call_7006,call_7027,bop_7036,call_7039,])
func_7054 = relay.Function([var_6999,var_7001,var_7032,], output)
mod['func_7054'] = func_7054
mod = relay.transform.InferType()(mod)
mutated_mod['func_7054'] = func_7054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7054_call = mutated_mod.get_global_var('func_7054')
var_7056 = relay.var("var_7056", dtype = "int32", shape = (891,))#candidate|7056|(891,)|var|int32
var_7057 = relay.var("var_7057", dtype = "float64", shape = (1092,))#candidate|7057|(1092,)|var|float64
var_7058 = relay.var("var_7058", dtype = "bool", shape = (9, 9, 11))#candidate|7058|(9, 9, 11)|var|bool
call_7055 = func_7054_call(var_7056,var_7057,var_7058,)
output = call_7055
func_7059 = relay.Function([var_7056,var_7057,var_7058,], output)
mutated_mod['func_7059'] = func_7059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1566_call = mod.get_global_var('func_1566')
func_1567_call = mutated_mod.get_global_var('func_1567')
call_7087 = relay.TupleGetItem(func_1566_call(), 0)
call_7088 = relay.TupleGetItem(func_1567_call(), 0)
output = relay.Tuple([call_7087,])
output2 = relay.Tuple([call_7088,])
func_7095 = relay.Function([], output)
mod['func_7095'] = func_7095
mod = relay.transform.InferType()(mod)
output = func_7095()
func_7096 = relay.Function([], output)
mutated_mod['func_7096'] = func_7096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3695_call = mod.get_global_var('func_3695')
func_3696_call = mutated_mod.get_global_var('func_3696')
call_7188 = relay.TupleGetItem(func_3695_call(), 1)
call_7189 = relay.TupleGetItem(func_3696_call(), 1)
output = call_7188
output2 = call_7189
func_7195 = relay.Function([], output)
mod['func_7195'] = func_7195
mod = relay.transform.InferType()(mod)
output = func_7195()
func_7196 = relay.Function([], output)
mutated_mod['func_7196'] = func_7196
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7261 = relay.var("var_7261", dtype = "float32", shape = (16, 12, 9))#candidate|7261|(16, 12, 9)|var|float32
uop_7262 = relay.log(var_7261.astype('float32')) # shape=(16, 12, 9)
output = uop_7262
output2 = uop_7262
func_7264 = relay.Function([var_7261,], output)
mod['func_7264'] = func_7264
mod = relay.transform.InferType()(mod)
mutated_mod['func_7264'] = func_7264
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7265 = relay.var("var_7265", dtype = "float32", shape = (16, 12, 9))#candidate|7265|(16, 12, 9)|var|float32
func_7264_call = mutated_mod.get_global_var('func_7264')
call_7266 = func_7264_call(var_7265)
output = call_7266
func_7267 = relay.Function([var_7265], output)
mutated_mod['func_7267'] = func_7267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5348_call = mod.get_global_var('func_5348')
func_5349_call = mutated_mod.get_global_var('func_5349')
call_7284 = func_5348_call()
call_7285 = func_5348_call()
output = call_7284
output2 = call_7285
func_7286 = relay.Function([], output)
mod['func_7286'] = func_7286
mod = relay.transform.InferType()(mod)
mutated_mod['func_7286'] = func_7286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7286_call = mutated_mod.get_global_var('func_7286')
call_7287 = func_7286_call()
output = call_7287
func_7288 = relay.Function([], output)
mutated_mod['func_7288'] = func_7288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3749_call = mod.get_global_var('func_3749')
func_3751_call = mutated_mod.get_global_var('func_3751')
call_7306 = relay.TupleGetItem(func_3749_call(), 0)
call_7307 = relay.TupleGetItem(func_3751_call(), 0)
output = relay.Tuple([call_7306,])
output2 = relay.Tuple([call_7307,])
func_7321 = relay.Function([], output)
mod['func_7321'] = func_7321
mod = relay.transform.InferType()(mod)
output = func_7321()
func_7322 = relay.Function([], output)
mutated_mod['func_7322'] = func_7322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5840_call = mod.get_global_var('func_5840')
func_5842_call = mutated_mod.get_global_var('func_5842')
call_7375 = func_5840_call()
call_7376 = func_5840_call()
func_6235_call = mod.get_global_var('func_6235')
func_6237_call = mutated_mod.get_global_var('func_6237')
call_7378 = relay.TupleGetItem(func_6235_call(relay.reshape(call_7375.astype('int32'), [891,])), 0)
call_7379 = relay.TupleGetItem(func_6237_call(relay.reshape(call_7375.astype('int32'), [891,])), 0)
func_6576_call = mod.get_global_var('func_6576')
func_6580_call = mutated_mod.get_global_var('func_6580')
var_7387 = relay.var("var_7387", dtype = "int8", shape = (80,))#candidate|7387|(80,)|var|int8
const_7388 = relay.const([[-2],[-7],[1],[-6],[1],[9],[-9],[9],[5],[6],[-3],[-3],[-7],[-4],[2],[10],[-6],[-8],[4],[2],[-5],[-3],[-4],[-4],[8],[-1],[6],[2],[10],[4],[5],[-5],[-10],[-7],[-1],[10],[-10],[10],[7],[-2],[-3],[4],[7],[-3],[-5],[9],[9],[-2],[-1],[3],[-10],[9],[8],[-3],[-3],[-10],[10],[-4],[-3],[3],[3],[9],[-10],[-3],[9],[-4],[-1],[-10],[-10],[5],[-10],[10],[10],[-6],[-2],[-8],[-3],[-9],[7],[-5],[-7],[7],[9],[8],[10],[5],[-8],[-7],[-10],[9],[4],[-8],[-4],[1],[6],[10],[-4],[-1],[4],[-4],[-3],[-2],[5],[-7],[-4],[10],[-6],[4],[-3],[3],[-2],[3],[10],[1],[-3],[8],[-6],[-5],[10],[10],[10],[2],[6],[8],[-3],[-9],[4],[3],[5],[-9],[10],[2],[-8],[9],[-1],[-1],[-6],[-7],[-1],[2],[-5],[-10],[-2],[-6],[8],[-3],[3],[-4],[-2],[-10],[-1],[4],[-6],[-10],[5],[10],[2],[3],[-5],[-8],[2],[-1],[7],[-9],[-8],[10],[2],[9],[-6],[-4],[10],[2],[-3],[7],[-2],[9],[6],[-3],[7],[2],[1],[-7],[7],[-10],[4],[3],[-7],[7],[2],[6],[-10],[-9],[6],[1],[-4],[-1],[6],[-7],[-5],[-7],[10],[-2],[-9],[-6],[6],[4],[-8],[-2],[7],[-2],[-8],[-7],[2],[-1],[-2],[3],[-10],[-10],[7],[-9],[-8],[6],[-8],[-2],[4],[7],[6],[8],[7],[-2],[-8],[2],[3],[7],[5],[-10],[-9],[-9],[-7],[-1],[5],[-4],[-9],[7],[-10],[6],[6],[-5],[9],[9],[-8],[-7],[7],[3],[6],[-8],[-9],[10],[-5],[-5],[-7],[-2],[-10],[-2],[-1],[-10],[-1],[-3],[2],[-4],[-9],[9],[-5],[7],[5],[-4],[4],[5],[-4],[-10],[9],[-1],[9],[-9],[-1],[9],[-5],[5],[7],[-7],[-3],[-5],[6],[-10],[7],[5],[-4],[-6],[-10],[3],[-8],[-9],[-3],[3],[8],[10],[-1],[-8],[-5],[7],[-10],[9],[9],[-6],[10],[2],[4],[-3],[10],[4],[-7],[9],[1],[7],[8],[9],[-8],[-4],[4],[8],[9],[-4],[-3],[-7],[6],[-1],[10],[-1],[7],[-7],[3],[5],[-4],[10],[6],[4],[10],[-8],[8],[8],[-1],[-4],[-8],[9],[6],[10],[-4],[3],[-3],[8],[3],[-7],[-9],[-7],[-2],[-10],[5],[3],[-1],[-9],[-10],[6],[-4],[-2],[4],[-8],[-1],[9],[10],[8],[5],[7],[1],[1],[10],[-1],[-9],[-6],[8],[1],[9],[6],[-4],[9],[-4],[-8],[-6],[9],[2],[-1],[2],[-5],[-1],[-5],[1],[10],[5],[8],[-4],[5],[-6],[7],[5],[1],[-7],[-2],[-4],[-9],[9],[5],[-2],[-8],[10],[8],[4],[2],[-6],[4],[-6],[-3],[-7],[2],[-3],[8],[9],[-2],[8],[-9],[5],[-2],[3],[-3],[-4],[4],[-1],[-3],[-9],[2],[7],[4],[3],[6],[5],[10],[3],[2],[-8],[6],[-1],[-2],[-5],[-3],[-9],[8],[6],[10],[7],[1],[-1],[5],[4],[9],[2],[4],[6],[-6],[-8],[-7],[5],[-2],[9],[-10],[-8],[-10],[3],[3],[3],[-9],[-9],[-8],[8],[10],[-2],[-4],[-4],[8],[10],[10],[9],[9],[7],[9],[-5],[-7],[-3],[3],[-9],[-9],[10],[8],[2],[5],[-3],[2],[-9],[2],[-10],[-8],[-9],[-1],[-9],[6],[-5],[-9],[-10],[9],[4],[-6],[1],[7],[-8],[7],[-9],[-4],[9],[-1],[-10],[-6],[-1],[2],[-1],[-5],[-4],[-2],[-10],[6],[7],[5],[6],[4],[-7],[-6],[3],[-5],[-7],[8],[-7],[5],[-6],[8],[-5],[6],[-6],[7],[2],[-1],[-8],[7],[-9],[6],[9],[-5],[8],[10],[6],[-2],[4],[2],[10],[-6],[-1],[-1],[-4],[-2],[1],[8],[-3],[6],[1],[-5],[-8],[8],[6],[-4],[9],[9],[6],[1],[-8],[-2],[3],[9],[-3],[5],[-5],[-2],[9],[6],[10],[-10],[-1],[1],[8],[-9],[6],[-7],[3],[5],[5],[3],[2],[4],[7],[-5],[-2],[-8],[-3],[-2],[10],[9],[-5],[7],[4],[-6],[-1],[8],[6],[5],[2],[10],[6],[-6],[-6],[9],[-2],[-2],[-7],[-6],[10],[-8],[1],[-6],[-8],[8],[-2],[3],[-6],[-6],[9],[-8],[6],[-9],[10],[1],[-5],[3],[-5],[-3],[-4],[2],[-1],[2],[5],[-2],[5],[-5],[-2],[1],[-10],[-2],[-1],[3],[7],[-10],[8],[7],[-6],[1],[-8],[4],[-2],[2],[7],[-6],[8],[-2],[-6],[-7],[-2],[6],[-9],[-1],[1],[-4],[2],[-2],[-1],[10],[10],[3],[-5],[-8],[-1],[-6],[4],[-2],[4],[-7],[3],[3],[9],[2],[2],[8],[-10],[-1],[-5],[8],[6],[8],[5],[-4],[-1],[-3],[2],[2],[3],[-3],[-7],[-6],[-9],[2],[8],[1],[-5],[5],[-9],[8],[-9],[6],[8],[3],[3],[-6],[-5],[9],[-1],[-10],[-10],[-2],[-10],[-4],[5],[-10],[-4],[-4],[-4],[4],[2],[-10],[-2],[5],[-8],[2],[-7],[-7],[-9],[-7],[5],[-9],[-2],[1],[-1],[-3],[-5],[-2],[-10],[10],[-1],[9],[7],[7],[7],[2],[-9],[-10],[3],[9],[6],[-7],[-5],[-8],[7],[6],[-2],[-7],[1],[5],[-8],[-1],[-8],[-10],[-2],[-3],[10],[-9],[-2],[-1],[-5],[-10],[-4],[-4],[-3],[-4],[-7],[-7],[-5],[4],[-7],[6],[-10],[2],[10],[-2],[2],[1],[-10],[-10],[5],[-5],[-8],[5],[-1],[-9],[-9],[-4],[9],[-10],[3],[5],[-5],[3],[1],[-10],[7],[7],[8],[-9],[3],[7],[-4],[-1],[-1],[4],[-5],[9],[-5],[-9],[6],[-1],[5],[-10],[-1],[3],[-8],[8],[-5],[7],[-1],[10],[-1],[-8],[-1],[-3],[6],[-4],[3],[5],[-5],[-10],[1],[7],[8],[-2],[6],[-5],[-10],[5],[7],[2],[3],[4],[2],[-2],[10],[-1],[3],[-8],[1],[-7],[3],[6],[-2],[9],[-1],[5],[-7],[-4],[10],[7],[9],[4],[-4],[-2],[-6],[4],[1],[-5],[4],[-4],[-4],[-1],[-10],[1],[10],[-4],[4],[2],[2],[-4],[4],[-8],[-1],[10],[6],[10],[-5],[-3],[5],[-6],[2],[7],[-10],[5],[-4],[-10],[1],[3],[-2],[7],[7],[10],[-8],[8],[6],[10],[6],[7],[8],[-7],[3],[1],[7],[7],[-7],[7],[-2],[7],[-9],[3],[10],[5],[-3],[-1],[-4],[-5],[6],[-4],[10],[-10]], dtype = "uint8")#candidate|7388|(990, 1)|const|uint8
call_7386 = relay.TupleGetItem(func_6576_call(relay.reshape(var_7387.astype('int8'), [8, 1, 10]), relay.reshape(const_7388.astype('uint8'), [990,]), ), 3)
call_7389 = relay.TupleGetItem(func_6580_call(relay.reshape(var_7387.astype('int8'), [8, 1, 10]), relay.reshape(const_7388.astype('uint8'), [990,]), ), 3)
func_2298_call = mod.get_global_var('func_2298')
func_2299_call = mutated_mod.get_global_var('func_2299')
call_7395 = func_2298_call()
call_7396 = func_2298_call()
bop_7397 = relay.greater_equal(const_7388.astype('bool'), var_7387.astype('bool')) # shape=(990, 80)
func_4132_call = mod.get_global_var('func_4132')
func_4134_call = mutated_mod.get_global_var('func_4134')
call_7411 = relay.TupleGetItem(func_4132_call(), 1)
call_7412 = relay.TupleGetItem(func_4134_call(), 1)
output = relay.Tuple([call_7375,call_7378,call_7386,call_7395,bop_7397,call_7411,])
output2 = relay.Tuple([call_7376,call_7379,call_7389,call_7396,bop_7397,call_7412,])
func_7419 = relay.Function([var_7387,], output)
mod['func_7419'] = func_7419
mod = relay.transform.InferType()(mod)
var_7420 = relay.var("var_7420", dtype = "int8", shape = (80,))#candidate|7420|(80,)|var|int8
output = func_7419(var_7420)
func_7421 = relay.Function([var_7420], output)
mutated_mod['func_7421'] = func_7421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4580_call = mod.get_global_var('func_4580')
func_4582_call = mutated_mod.get_global_var('func_4582')
call_7427 = relay.TupleGetItem(func_4580_call(), 1)
call_7428 = relay.TupleGetItem(func_4582_call(), 1)
func_1505_call = mod.get_global_var('func_1505')
func_1507_call = mutated_mod.get_global_var('func_1507')
call_7433 = relay.TupleGetItem(func_1505_call(), 3)
call_7434 = relay.TupleGetItem(func_1507_call(), 3)
func_2188_call = mod.get_global_var('func_2188')
func_2190_call = mutated_mod.get_global_var('func_2190')
call_7440 = func_2188_call()
call_7441 = func_2188_call()
func_737_call = mod.get_global_var('func_737')
func_740_call = mutated_mod.get_global_var('func_740')
const_7513 = relay.const([-4.135837,6.792022,-4.464418,-1.417035,-2.271938,9.600263,7.395417,6.302407,-3.041399,4.422939,-3.480710,-3.127886,3.417271,8.378731,-9.346976,-2.757971,9.397639,2.419736,-2.569449,-6.182902,-2.575163,4.310235,3.419727,-0.743454,0.289034,-4.333387,-8.207688,8.498386,-9.570975,-2.664682,-6.910507,-6.369393,-4.361124,4.365429,4.451389,2.786169,9.073575,0.917055,-6.418260,-4.053872,-7.518565,5.449617,4.140098,-9.874247,0.423324,-1.261365,6.507401,-7.939885,-3.197486,8.451837,6.744852,-5.960645,3.570164,0.270103,4.237890,3.206774,-9.414259,-5.430944,6.083310,-6.668553,1.070310,-9.688045,4.634017,-6.471970,-9.332491,3.125619,-5.423526,-8.164855,1.272904,0.755360,-6.552847,-8.369135,4.333897,-9.732323,7.577570,-6.410953,-9.826213,-3.175277,7.513715,4.956023,-2.779168,3.499904,-9.973406,-3.423873,8.617494,-9.355191,-0.737707,-2.519512,9.040587,-2.912357,3.871050,7.258865,-3.754587,0.939067,-9.372549,2.082133,6.932475,-0.192884,8.325254,-0.629147,-2.141052,-8.513889,9.967217,4.401288,8.212594,-3.675472,-6.740954,-2.486928,5.370190,-7.678283,7.062413,-8.724620,-5.444500,-2.613270,8.550606,-6.201982,-5.970517,-9.659019,9.677724,-9.060068,2.485826,-5.044068,9.423231,-3.021462,-0.450146,-3.725147,7.158834,2.928308,0.355745,0.469142,-8.139611,3.747627,-8.838102,-0.476742,3.969052,-5.261715,9.156784,-0.770911,-1.979669,3.488820,0.775949,-5.991416,-6.958390,-2.419806,8.537225,-2.257585,2.363425,-5.753091,2.010818,6.294977,-0.973947,-9.057844,-6.293893,-6.966036,4.346842,-1.586030,6.813312,8.415539,-5.462826,-4.517478,1.018712,2.776122,-1.594152,-7.936226,-6.340496,-0.251207,-0.262475,8.280501,1.236104,7.708392,7.920899,3.801712,-6.641182,7.527060,-7.928459,-9.185995,-3.960249,-2.594370,-1.076587,3.325395,-0.536869,0.261557,-2.224453,-8.322668,-0.232503,-8.374827,7.194474,-9.311065,5.299630,-0.143347,1.617454,0.626606,-8.883476,-1.957508,2.162052,0.285857,3.729484,-8.183807,6.246745,1.798188,-5.150680,-4.864508,0.715562,1.946679,-7.146896,-2.990435,-6.982317,8.848292,7.514920,1.958382,0.339308,7.001387,2.371979,-0.334515,-2.397019,-8.216979,-2.722173,-6.902732,-2.784646,-0.151451,5.529016,-6.023950,-0.092345,-4.771346,-9.695946,-7.378815,-4.379154,-5.487102,0.298901,0.251568,8.352586,-8.286670,-1.212886,5.311944,-8.207023,5.958170,7.063854,-9.285023,1.815096,1.770717,-8.913829,-3.715271,7.043863,2.216460,7.774648,-7.578709,-4.391500,-0.840017,9.650308,9.604284,0.099173,3.351856,3.792478,9.147606,-6.926268,-3.789325,-8.612302,-6.978642,0.962713,4.773255,-1.024308,4.912831,-6.261406,0.138346,-1.332360,-0.374271,6.839277,-6.496770,3.735252,6.140423,-8.250726,-6.804610,-7.442621,4.158346,-0.767763,3.414501,-8.793075,-8.555277,-7.207875,4.184519,-7.826537,0.934897,2.251574,-7.616138,7.939974,1.812036,9.930882,-6.161710,-9.488872,-8.060817,-6.604235,9.759911,-8.235012,-5.208226,0.302559,5.337876,0.234227,2.460756,-3.854270,0.900583,2.461850,-3.736083,-6.387355,2.976917,-9.683129,-5.535370,9.943297,5.727980,5.257872,-1.704032,7.326794,-7.970476,-3.374105,-6.173452,-9.468240,-8.955941,-4.089429,-7.409368,-9.949921,1.988015,4.596762,9.340151,2.716924,6.693444,-3.383739,4.748515,6.266086,-5.237564,1.089461,8.137391,-6.727165,3.844669,-4.216024,-0.236507,4.002834,2.806837,1.343638,3.202602,6.122348,6.276962,4.969668,-6.244975,-8.221523,-6.473763,3.651333,5.362714,-3.454564,-5.448305,0.458786,7.456443,-2.024594,3.624964,2.917729,-1.449056,4.013296,9.280555,-4.355557,-2.553630,-1.012087,-3.871375,-7.841591,-5.820751,-0.284809,8.182202,3.077804,3.694468,7.586213,7.254995,2.955948,8.465050,5.213127,8.802646,-3.715078,-7.783071,6.291039,-5.288443,3.971638,-0.003156,6.688632,7.754148,-6.524122,-0.483465,6.688242,-2.151565,4.205481,-1.332542,-8.819312,-4.939880,0.718695,-7.610920,7.260192,-5.317238,1.582228,6.574425,-9.430073,5.774153,6.011130,-7.873064,5.988436,1.903929,-9.490894,8.326249,-6.666915,-0.232911,-8.569451,-6.716721,2.679298,-2.515907,1.861476,-7.844095,-1.682548,-3.898052,1.234810,5.033416,4.205418,-0.518583,-2.886830,7.671879,5.285707,-2.832685,-8.655778,-9.658518,0.622954,-0.741465,-9.952135,-9.691879,-7.697446,-7.248026,3.662262,-5.667160,-3.886718,-7.243336,-9.908696,0.083648,6.802518,3.604110,-0.497699,-9.956348,6.245785,-2.798753,5.578314,-3.363385,1.678766,3.376158,-1.446322,-4.247053,-9.625446,8.698273,-8.056056,6.977625,-7.553623,6.121310,-4.702679,-4.893493,-2.156175,0.656609,3.135110,8.836171,-5.779311,3.299481,-0.858958,0.459445,3.935200,6.020871,-2.310869,2.131991,9.164498,1.767595,-0.744756,1.666367,9.824221,-0.660637,7.797127,1.444747,5.650732,-9.000364,-3.688647,-0.876273,6.051036,3.019858,-3.228110,-2.235483,1.404763,9.259187,-9.565424,-7.063968,7.279064,-7.591446,-1.979789,-8.345482,9.434584,6.456235,5.778170,3.136962,0.457599,-9.788891,0.550311,-8.581919,-1.342382,6.250804,-4.885747,-1.515932,-0.326283,-6.324709,3.372702,-9.653016,-4.503700,-2.002720,-2.036262,-2.543303,9.110104,0.484215,6.745493,6.040317,-0.071636,-1.817071,5.388075,-2.615999,-6.525161,-6.226303,-7.419996,-1.634598,3.948077,-5.529277,-9.485686,2.349419,3.845657,-4.679084,-7.882469,-4.854775,-7.511359,-3.646762,-8.697305,-0.468538,2.555400,-7.995561,9.638851,-8.638613,7.078447,-2.835264,4.991245,9.715660,3.122474,-8.414702,-5.739141,-2.825496,7.355723,-9.089001,2.223975,-4.666950,0.556945,-3.810502,3.879840,7.272801,7.782614,-0.428149,-3.852095,8.216440,-5.071706,5.782564,7.193940,8.274131,-8.565805,-1.860325,-9.431296,3.563288,4.672826,8.253570,-7.703184,4.337478,-1.148921,6.033404,-2.021958,-3.122648,-2.004874,0.191522,4.814775,-5.735124,-3.948752,-9.614208,-6.828199,-0.775416,9.765004,-9.116053,6.898615,-5.657656,-9.489628,-0.005677,-8.117854,5.645361,-7.906131,-5.769556,8.100341,-4.065180,5.372305,2.925524,-2.043925,8.801904,0.576865,0.873300,-4.570255,-5.423289,3.813494,1.386415,-5.280881,-1.215179,5.821157,-1.316760,-0.545869,-7.340238,7.590105,2.495903,0.835731,-7.259161,-4.210195,0.797965,2.413078,8.244143,-7.121234,-8.602472,1.968680,-3.551775,-3.875951,-3.305462,2.669538,-7.703222,-4.136257,-8.327518,7.750402,-1.594743,-6.220042,-5.842482,6.359743,0.729551,-2.078905,-5.784967,-4.539092,-6.235387,-9.113442,5.615044,4.342566,-4.999497,1.529462,2.551993,1.157158,9.854430,-5.656824,2.742028,1.319263,5.981021,1.849669,-3.030553,-7.677993,-0.386701,0.154470,-1.390905,0.833164,-9.470919,6.302438,0.245618,1.451910,1.985150,-8.464623,8.692748,6.049787,1.632241,8.332683,-5.035641,-2.956218,-6.717189,3.912701,-3.853590,8.828451,9.227954,0.862640,-9.496053,7.856609,-4.835960,-6.211391,-6.459685,-8.889184,-4.121669,5.638892,-4.851038,2.055206,0.753756,0.222331,-2.647684,-1.689015,-3.443941,-1.201714,-4.514357,-4.219286,-8.859450,-4.520053,-9.939369,-3.891792,-3.277361,6.311591,-7.825800,8.019683,7.325824,7.731871,-8.383752,-5.272284,8.944708,1.759820,-4.969675,-4.085660,-8.680268,6.717455,-1.131762,-4.011901,8.942555,4.901242,-3.671621,8.258960,3.005420,4.374649,-5.457923,-2.844488,9.589262,9.122549,0.964949,-0.881870,9.116418,-5.319273,0.236571,-8.774624,7.364538,-3.648525,4.422710,0.504017,7.932686,-8.928583,-2.414425,2.327394,-3.900751,-6.333597,3.396587,6.289464,-8.875249,-2.855281,-8.519911,7.162073,-8.541598,-7.847949,2.167743,-4.223525,-6.906209,3.543896,-8.959786,-1.015695,0.968568,-3.363300,8.265765,2.894914,-9.669392,-7.161119,9.409023,-9.066042,6.008708,6.727253,-6.561273,5.431719,-6.103536,-7.702760,-0.771412,7.237148,5.422833,-0.134388,6.107273,-6.151654,1.042453,1.529619,-3.551055,-9.915266,-8.318571,5.969596,8.234284,9.177427,3.278969,-0.656215,1.372470,6.559155,-7.561271,1.351491,-3.117076,6.195921,-2.299012,-8.773666,-2.641612,7.849372,-4.440398,6.605755,3.940932,7.215346,-1.920437,-7.012100,2.485919,-1.655126,8.727906,2.347228,-7.549848,6.613981,6.435765,2.744324,-8.375490,-2.050282,2.782693,8.172266,6.075131,3.870765,-7.338368,2.060018,-6.070478,9.922023,7.141880,4.956237,1.508370,7.433748,-8.148166,-7.382188,0.005990,2.514327,5.657421,3.680378,2.556947,-1.075139,8.311017,0.236245,-5.934165,3.943823,1.098695,8.537260,-5.824395,-3.389930,5.944189,6.300445,8.813310,-4.428609,6.518101,0.202789,-1.130615,0.946749,4.197567,9.932468,6.000469,-4.174553,1.336987,-0.344775,-9.683920,-9.061707,9.614515,-7.154266,-2.997296,4.746901,-8.430464,-7.117618,6.699916,-3.268908,-2.525229,-5.894191,7.142619,9.304191,-0.933692,-4.311204,-7.743689,-6.596155,-7.219577,-8.483505,5.180528,0.073598,9.743947,4.840078,8.179093,3.578212,0.489863,4.180193,-7.147009,-0.957411,-2.818115,0.148697,5.852544,7.721954,-9.195807,2.621608,8.498263,-4.905667,-1.213430,4.683422,9.286846,-1.996039,-4.425843,6.326043,-5.296198,5.179065,-7.768508,3.064970,3.728482,-6.198573,-4.227047,0.195588,-8.761827,-5.820063,7.145169,-0.802819,2.867044,-0.926647,-7.196191,-0.315067,0.501640,-9.226713,8.950419,0.411364,-2.415998,-8.259340,9.506641,-2.028053,8.348108,5.512768,3.263948,-1.672419,-6.572266,-2.151725,-8.232788,8.164117,6.635652,-7.960823,7.357914,4.634546,8.808279,-5.567539,5.697211,-2.714925,-0.725302,-8.998797,9.191577,-2.737223,5.324888,-2.853828,5.045474,5.821858,5.662734,1.343589,7.250901,-9.609298,2.695346,-9.827244,-5.019975,8.528072,-9.547803,-7.065683,-0.051124,9.462726,4.229453,-9.011241,2.007723,5.308230,2.282847,0.211563,3.158764,7.244584,-0.006934,-4.693281,-9.334309,2.493479,6.586295,-6.797910,-2.588007,1.285698,9.498533,0.236346,6.452227,-6.820509,1.890099,7.436883,5.827846,3.619449,-6.594996,-9.916241,-9.361334,3.684909,4.488345,4.019002,6.416082,-8.723067,-8.080213,7.642793,-6.082630,-2.157912,0.116623,1.138524,-7.119783,7.507173,-5.934068,0.678340,6.932243,-8.559915,-8.596271,1.947469,-3.360277,2.584403,9.743090,-7.857374,-5.708770,6.262969,-3.601927,-6.139001,-9.499694,-7.930772,-6.810054,5.556267,-4.144120,-7.553984,1.247354,0.915263,7.974028,7.117869,4.222671,2.940213,-2.362101,-2.210744,6.927913,-8.923160,-0.625807,-8.821075,-2.937990,-8.070959,8.624171,-6.719779,-1.048198,-8.936157,-1.039549,-4.745380,2.128330,0.490198,4.397560,-7.719043,-2.597961,-9.577793,1.074445,7.126497,-4.144323,1.014024,8.645436,-8.338733,4.467530,0.945913,-3.499991,7.947132,4.521706,-5.087380,-6.309923,4.728337,9.338057,0.460847,-0.498038,-6.979104,5.306703,-7.608850,5.687430,-3.604545,0.986065,-4.749817,-0.891961,3.775924,-5.682754,-4.453029,7.144273,-2.494325,9.521550,0.246617,-1.903458,-4.439863,0.279282,-0.475849,6.298618,9.826446,7.749669,7.984331,-9.497577,6.501548,-9.892007,6.671659,-9.536269,-6.288365,-4.350207,9.249676,2.842655,-6.519802,3.543002], dtype = "float64")#candidate|7513|(1092,)|const|float64
call_7512 = func_737_call(relay.reshape(const_7513.astype('float64'), [13, 6, 14]))
call_7514 = func_737_call(relay.reshape(const_7513.astype('float64'), [13, 6, 14]))
output = relay.Tuple([call_7427,call_7433,call_7440,call_7512,const_7513,])
output2 = relay.Tuple([call_7428,call_7434,call_7441,call_7514,const_7513,])
func_7515 = relay.Function([], output)
mod['func_7515'] = func_7515
mod = relay.transform.InferType()(mod)
mutated_mod['func_7515'] = func_7515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7515_call = mutated_mod.get_global_var('func_7515')
call_7516 = func_7515_call()
output = call_7516
func_7517 = relay.Function([], output)
mutated_mod['func_7517'] = func_7517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5398_call = mod.get_global_var('func_5398')
func_5399_call = mutated_mod.get_global_var('func_5399')
call_7559 = relay.TupleGetItem(func_5398_call(), 0)
call_7560 = relay.TupleGetItem(func_5399_call(), 0)
output = relay.Tuple([call_7559,])
output2 = relay.Tuple([call_7560,])
func_7561 = relay.Function([], output)
mod['func_7561'] = func_7561
mod = relay.transform.InferType()(mod)
output = func_7561()
func_7562 = relay.Function([], output)
mutated_mod['func_7562'] = func_7562
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7599 = relay.const([[[5.815960,5.222359,0.208033,-1.972242,-5.330684,3.097132],[-2.185151,-2.272258,7.408382,-4.022338,-2.774580,0.361787]],[[-9.345290,-2.142876,-2.616672,1.723814,1.426257,-6.969225],[9.723312,1.035639,-7.745802,6.980411,0.013169,-5.763801]],[[8.651143,7.730181,1.126751,-9.124547,-3.410531,3.335844],[-3.992185,0.639701,4.561927,5.050189,-1.508164,-3.570804]],[[6.609959,4.149092,7.163568,5.270680,1.145864,7.738350],[7.064756,-7.280221,-8.115564,2.334375,2.364028,-6.640242]],[[-0.143885,5.548961,-8.409332,0.957271,6.988695,-2.739769],[-1.081162,-9.859727,0.282008,-1.930674,3.232655,-9.141178]],[[-2.295326,-7.290261,-7.426062,-0.673429,-5.918079,1.244332],[-5.351898,-9.496050,-8.602415,-7.929828,2.457658,-2.449515]],[[-5.609796,7.035888,0.547041,2.486359,0.492383,2.749884],[4.736835,-5.726318,-9.575007,-5.450539,-1.731961,-0.699673]],[[-6.237540,3.864849,6.683263,-4.526559,7.165487,3.610221],[5.188959,-1.814362,9.655195,8.451491,-4.291404,-0.776777]],[[1.176142,1.476237,-4.463794,-0.895026,-3.007191,-6.381529],[4.711523,-9.475790,-4.230619,-8.862080,-0.140950,0.485874]],[[-2.382773,-0.947548,-0.217250,2.370095,-6.002882,-1.629216],[7.459461,6.198828,-7.764422,0.912080,-1.424703,-0.050523]],[[-4.500612,-4.949687,-9.234466,-7.410383,-2.466728,7.562312],[1.908493,8.795983,2.128163,-0.380884,-1.779560,-6.718152]],[[1.012043,1.574561,6.252567,4.717451,-9.208998,6.380702],[3.796995,9.752991,-3.859304,-9.432011,-2.044311,4.603290]],[[9.202090,-6.380729,6.921778,7.478738,-7.433735,-9.739679],[-0.796737,6.684686,-5.142102,1.004310,-9.141066,6.221746]]], dtype = "float64")#candidate|7599|(13, 2, 6)|const|float64
var_7600 = relay.var("var_7600", dtype = "float64", shape = (13, 2, 6))#candidate|7600|(13, 2, 6)|var|float64
bop_7601 = relay.mod(const_7599.astype('float64'), relay.reshape(var_7600.astype('float64'), relay.shape_of(const_7599))) # shape=(13, 2, 6)
output = bop_7601
output2 = bop_7601
func_7605 = relay.Function([var_7600,], output)
mod['func_7605'] = func_7605
mod = relay.transform.InferType()(mod)
mutated_mod['func_7605'] = func_7605
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7606 = relay.var("var_7606", dtype = "float64", shape = (13, 2, 6))#candidate|7606|(13, 2, 6)|var|float64
func_7605_call = mutated_mod.get_global_var('func_7605')
call_7607 = func_7605_call(var_7606)
output = call_7607
func_7608 = relay.Function([var_7606], output)
mutated_mod['func_7608'] = func_7608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1525_call = mod.get_global_var('func_1525')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_7623 = func_1525_call()
call_7624 = func_1525_call()
func_1437_call = mod.get_global_var('func_1437')
func_1439_call = mutated_mod.get_global_var('func_1439')
var_7626 = relay.var("var_7626", dtype = "float64", shape = (135,))#candidate|7626|(135,)|var|float64
call_7625 = relay.TupleGetItem(func_1437_call(relay.reshape(var_7626.astype('float64'), [135,])), 4)
call_7627 = relay.TupleGetItem(func_1439_call(relay.reshape(var_7626.astype('float64'), [135,])), 4)
uop_7641 = relay.erf(call_7625.astype('float32')) # shape=(13, 1, 12)
uop_7643 = relay.erf(call_7627.astype('float32')) # shape=(13, 1, 12)
func_5562_call = mod.get_global_var('func_5562')
func_5566_call = mutated_mod.get_global_var('func_5566')
const_7651 = relay.const([1.959757,9.379707,-0.283405,9.145614,-5.702074,-8.507688,4.012402,-9.076317,-0.516619,-4.657342,-6.838109,9.297559,0.641547,6.932262,9.907540,-3.350073,4.928434,-5.241622,3.145798,3.405430,-9.206282,6.159506,5.817945,1.142908,0.906853,0.937955,6.103273,-0.660351,1.747460,9.735260,-2.153785,5.734011,4.853997,6.470291,-5.628038,4.204568,0.147189,-5.449792,-2.946846,-8.264311,7.147898,-5.785920,0.508325,3.926408,-5.448908,0.658855,-9.781775,-3.283767,-1.853774,-4.604619,-2.710267,4.760378,6.997407,2.753727,1.543801,3.897025,4.414766,7.780937,-5.408285,6.985943,4.921376,-5.536025,7.647683,-9.873016,-6.995994,-3.747660,-9.379099,-9.555172,7.909575,4.686862,-2.710015,-0.546365,-4.205298,-4.424490,-8.089351,2.187935,-7.540829,-6.272734,5.000535,5.607364,1.572634,-2.240436,-0.355050,1.256656,-7.737558,-7.489237,6.244287,-2.464614,8.420442,0.234521,-3.750000,6.599291,-7.668544,6.742828,-1.648901,4.097020,-7.081038,6.010987,5.390425,9.575790,-5.805225,-6.340556,-3.076409,3.028498,0.371896,8.827530,-5.655528,-6.324383,-6.213846,-2.981874,-5.067134,3.854112,0.768414,7.499176,9.836877,5.320742,3.294849,-1.948179,-5.999796,3.289907,-8.019381,-5.438019,7.595008,2.274492,-4.737389,9.163326,6.703535,7.855907,8.064279,4.157420,8.881251,-2.562649,-6.222071,-9.383523,0.755130,-3.675528,8.170389,-6.843600,8.035556,-6.692672,3.097262,8.064176,-8.437514,0.913532,4.743184,4.069239,2.777279,6.407128,-6.593477,3.225630,0.794223,6.954591,-8.345786,-6.383055,1.737533,0.163308,-6.469904,8.574877,3.510992,-8.242977,-5.219304,-5.556373,-7.957390,4.004565,2.555334,-9.397217,1.919532,2.049891,6.853547,9.369359,0.016456,5.012691,9.063870,-1.937970,3.380733,-2.710579,-5.432770,-3.733405,-0.583888,5.869677,-4.948264,0.388644,4.389171,4.763149,-4.293359,8.082665,6.951139,8.811940,-7.228578,1.389068,-9.565798,1.833329,-7.221540,2.885760,2.089477,7.007949,-9.607926,0.036359,7.779297,-4.849311,-1.442814,4.756494,-5.854460,-5.718455,3.651769,6.166353,0.021950,-2.876460,-3.652563,8.565330,0.351867,1.924438,3.819797,8.826611,4.610849,-6.787350,-4.233319,3.151800,-7.838425,1.767523,0.302071,7.346734,5.190725,3.942246,-1.406087,9.274198,5.142129,3.340499,-5.433303,6.963272,5.493315,5.852889,-0.757832,-4.626043,-9.472436,-6.628412,-4.176923,8.813008,7.015343,8.326300,7.885017,5.104319,5.253747,7.557678,-2.653998,6.441355,-7.532515,4.452659,9.355882,1.843353,5.199926,-8.403191,5.525700,3.663357,-7.233139,-7.657051,0.530510,-6.104219,7.622977,-1.401910,-2.676931,9.433049,-3.978806,9.176292,-1.489453,-6.735828,-3.989513,-8.052047,-4.917280,3.787338,-6.171307,-3.029099,8.651235,2.069717,-0.523222,-1.482886,4.371856,3.033460,-3.587360,-7.200885,9.197628,-3.122867,7.165806,1.290354,-6.087710,-1.249093,8.234374,5.084541,3.063343,9.896434,-9.185422,-9.460736,8.740973,-2.709028,4.968037,-8.779063,3.122151,-9.342284,3.928410,-1.947657,-6.144820,5.421920,2.364952,8.659730,5.682040,-9.164932,-7.995768,2.189423,-3.916086,-9.571736,-1.464083,-8.449040,8.024937,-0.709762,-8.138073,9.808059,9.595687,-6.903944,1.422434,1.048572,-8.656412,-2.370132,3.872516,-8.138625,2.577238,5.411975,-0.188653,5.917658,-9.397390,-8.832938,-4.225109,-7.261463,-1.617336,-9.234644,-7.449156,-2.718667,0.955218,7.054018,0.998691,-9.499234,-1.601749,-1.808201,7.502764,4.809811,-8.631127,1.096377,0.645963,-5.941092,-6.091878,4.096211,0.868960,-0.538936,-6.170165,3.156031,4.560857,1.009188,6.104446,-4.274968,5.767296,-8.066863,-9.491441,9.314109,5.995930,1.740684,-8.946753,-9.792134,0.728150,9.690197,1.461465,6.437495,-5.447193,-8.230954,-8.189055,0.441039,-4.763355,3.896709,8.602938,-0.011276,5.168930,-8.905320,-8.672319,9.585003,8.133378,-1.143821,7.861653,-0.576220,-4.914906,7.311097,6.253914,-7.612760,-5.890964,-6.704752,-1.021402,3.705959,3.836743,-1.807819,-4.832743,6.534494,-6.752318,-8.757764,0.474061,2.063783,-3.317519,-6.168256,1.541518,2.999079,8.996041,5.969274,0.089857,3.528560,1.481117,-8.250713,5.017802,4.272882,0.095964,8.254265,-5.571955,-3.287906,2.403049,3.454873,-7.737759,-8.998353,-4.524320,9.688790,-2.829241,-3.138608,-8.606947,-3.316144,-6.133532,8.015466,6.382209,-8.772674,-3.638178,-9.489253,-0.747134,-6.576971,1.501904,-5.714676,2.077130,7.947559,-6.025836,2.424051,-7.422298,-1.619762,0.795676,0.326237,-9.260159,6.392995,-8.957799,-5.930947,7.769462,6.390727,5.098694,-2.173254,-3.745449,3.282396,-2.584609,5.028412,-3.567739,9.411609,-2.662042,-1.335953,0.786561,9.565663,-7.697995,-8.092359,-7.673557,-0.318447,8.470391,-1.051649,-5.063804,-5.396935,-6.878257,6.137199,0.623639,0.047408,3.161970,-0.676390,5.312309,7.966535,0.301039,9.295463,7.398386,5.856035,-5.260338,-7.614527,2.910694,8.763236,2.516620,-9.848831,-1.783121,-1.620275,-5.929944,-2.922115,-8.417393,4.157160,1.715155,0.258043,-1.359088,2.959221,8.794531,2.356474,-0.912195,-4.862094,0.722095,-1.366589,-9.427929,-7.895727,1.007192,-5.978746,-1.714961,6.496100,-7.109287,-5.462903,2.249372,-9.984954,-3.061573,-3.533220,-9.439238,-5.269583,9.869955,1.240820,4.965059,-6.625068,-9.344526,-2.381640,-8.182125,-3.746491,-7.360547,1.860268,-6.980829,-7.875127,3.722321,4.849121,-8.874331,-1.176528,-7.374304,1.940659,2.167720,-1.783929,4.917725,-9.552442,-3.547902,-1.071094,6.508939,1.472712,9.101382,-0.735268,-8.309366,3.617798,7.336358,-7.670116,2.271235,4.554124,-9.084399,6.354988,-9.107953,6.895417,-6.785876,-9.471150,-9.215615,-6.524212,8.634743,-1.250440,-1.822796,-5.999325,1.902387,-5.820993,0.875419,2.084042,7.891829,3.641545,-0.957954,9.018781,-0.829496,1.821134,4.551633,0.740720,-4.480740,-7.200455,3.665846,2.931734,5.762896,4.263615,2.096700,-0.598295,4.741176,5.612895,2.985642,6.658487,-4.250628,-4.715505,-9.783155,-7.043960,3.274300,1.379997,-5.302292,-5.226933,-3.461803,-6.950499,-8.605506,9.113362,-2.338024,-6.175233,3.400908,1.719043,-2.686667,1.578199,0.992131,8.364700,-1.904740,4.772996,7.290099,-0.172624,-8.530040,-9.520971,-7.197086,-0.902297,-9.718031,-8.447184,-6.751443,6.242676,7.616499,1.173430,-2.125589,0.859291,-6.955993,2.036913,-2.974551,8.983145,-6.380773,-6.438093,7.475067,6.250438,1.228594,3.090662,-1.959576,-1.531790,4.068301,-3.766088,-6.199653,-0.331181,7.380262,8.799667,-8.542890,-3.669535,-9.635561,6.609081,7.157192,1.150320,-8.607393,5.875486,5.176798,-5.968397,9.291394,-4.607994,-6.283625,-0.445715,2.596691,-3.105568,9.627596,-9.004750,4.276835,4.629688,7.849192,1.080930,-4.600602,-8.839526,-7.917429,-0.097982,0.497219,7.896445,-9.880272,2.041005,9.869850,3.085180,-5.720931,-8.220121,2.330699,1.554760,-0.953482,-5.787374,4.787097,-3.574876,3.017645,9.000534,-1.687772,-8.820401,0.900217,-3.290233,9.639284,6.683935,4.023510,7.022895,6.874430,6.385727,8.050228,-8.286901,-5.360321,-2.239697,-8.853602,3.017744,9.533202,2.129744,9.639965,0.105891,4.278850,1.852317,0.673458,3.600414,9.993540,-6.319209,-0.963154,7.869619,-6.531795,-9.744242,9.746863,0.976159,3.307694,5.296431,-7.703143,-0.866362,4.587103,-8.212920,-6.162711,-6.631728,4.128460,7.329370,6.535262,-4.912586,-9.688741,-1.924020,-9.181913,-5.361294,-5.891915,0.850580,9.203498,-3.501282,8.921275,4.324272,-2.409797,2.117470,-6.205412,2.309720,8.506012,0.319702,-8.240148,4.536984,4.317370,4.770521,-3.558909,-2.297116,-9.193774,-2.183535,-3.652553,2.458279,1.675322,-9.132245,9.806954,-7.578622,3.230370,8.764194,8.801485,0.314656,-0.214340,8.820151,1.414042,-9.238097,-2.147049,3.730617,-7.054658,-7.246195,3.227253,-3.732770,-3.469988,1.752135,-0.475525,-9.099710,8.347283,3.926030,-9.718659,-8.146648,-7.352840,0.686059,-5.251370,7.879005,2.457023,-2.672996,-2.557325,-3.546517,5.691330,1.148151,-3.095773,-9.416933,6.472508,6.334256,-2.668764,0.010060,5.600517,0.225250,0.896117,-2.950252,-5.233659,9.988623,4.251878,-4.552697,1.555530,3.435492,6.221097,3.800033,9.553237,-4.969253,3.058840,-2.642489,-6.863700,-8.177648,7.639092,-4.524012,3.629225,-3.229088,4.632382,-7.567037,-6.427033,-7.758319,8.217539,-9.646923,2.978735,-0.088828,-2.642573,4.550879,-4.351432,-2.458957,-5.319310,-4.687358,-9.322570,8.925269,2.605463,-6.989321,7.225426,6.862495,7.809171,6.337296,-2.570407,4.493635,-0.478311,3.212820,-1.116013,-7.415793,-3.486810,-7.430989,-9.756727,3.924810,2.876270,2.845837,-3.994741,8.206040,1.689648,-2.540714,-9.446833,-9.243672,-1.309493,-3.342961,-3.509350,-0.806362,0.338199,3.811310,-2.044430,9.016471,2.939231,-1.023055,7.582959,3.298533,-0.497937,-7.439996,8.461706,4.031686,-6.683861,-0.613466,7.231221,3.411891,6.067119,-2.916220,8.797008,-1.799197,-5.855498,1.348437,-4.735063,-3.452005,-3.929672,-3.240208,-9.719003], dtype = "float32")#candidate|7651|(891,)|const|float32
var_7652 = relay.var("var_7652", dtype = "uint8", shape = (256,))#candidate|7652|(256,)|var|uint8
call_7650 = relay.TupleGetItem(func_5562_call(relay.reshape(const_7651.astype('float32'), [9, 9, 11]), relay.reshape(var_7652.astype('uint8'), [256,]), relay.reshape(const_7651.astype('float32'), [9, 9, 11]), ), 4)
call_7653 = relay.TupleGetItem(func_5566_call(relay.reshape(const_7651.astype('float32'), [9, 9, 11]), relay.reshape(var_7652.astype('uint8'), [256,]), relay.reshape(const_7651.astype('float32'), [9, 9, 11]), ), 4)
output = relay.Tuple([call_7623,var_7626,uop_7641,call_7650,const_7651,var_7652,])
output2 = relay.Tuple([call_7624,var_7626,uop_7643,call_7653,const_7651,var_7652,])
func_7656 = relay.Function([var_7626,var_7652,], output)
mod['func_7656'] = func_7656
mod = relay.transform.InferType()(mod)
var_7657 = relay.var("var_7657", dtype = "float64", shape = (135,))#candidate|7657|(135,)|var|float64
var_7658 = relay.var("var_7658", dtype = "uint8", shape = (256,))#candidate|7658|(256,)|var|uint8
output = func_7656(var_7657,var_7658,)
func_7659 = relay.Function([var_7657,var_7658,], output)
mutated_mod['func_7659'] = func_7659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2760_call = mod.get_global_var('func_2760')
func_2762_call = mutated_mod.get_global_var('func_2762')
call_7661 = func_2760_call()
call_7662 = func_2760_call()
func_1880_call = mod.get_global_var('func_1880')
func_1885_call = mutated_mod.get_global_var('func_1885')
var_7684 = relay.var("var_7684", dtype = "float64", shape = (135,))#candidate|7684|(135,)|var|float64
var_7685 = relay.var("var_7685", dtype = "float64", shape = (2160,))#candidate|7685|(2160,)|var|float64
const_7686 = relay.const([-8.649472,0.774575,9.205026,3.998077,-0.854679,-3.848838,-3.687640,-9.758681,4.710803,-6.863138,9.897284,-2.904381,-1.268681,-8.842578,-9.771362,3.372350,7.307662,9.464026,1.859860,4.186845,-2.750147,-4.799330,4.878975,-1.061374,1.550468,-7.259702,0.333717,0.458783,0.277952,2.786084,5.248388,4.817156,2.928972,5.632094,6.672655,-1.761368,-9.495106,-8.808319,-5.396482,-9.542218,-4.392120,-2.571321,-2.013361,3.079352,-8.359234,5.353651,4.117508,-9.769742,4.975311,1.454815,-9.953628,-9.658140,8.198306,5.082270,-5.059518,0.624281,-1.187967,-2.660890,9.099621,8.228162,-3.709354,1.124618,0.560566,-1.650033,9.524326,8.880989,-4.322527,2.359849,-7.923041,0.809159,-5.450251,5.583745,-7.417291,4.379539,0.570506,5.261640,7.667095,1.225783,1.000916,-2.611783,-3.928291,-1.060376,3.881589,-0.522698,-7.762002,-2.777846,-6.856882,-6.527659,3.843236,6.277983,-1.481790,-9.002631,2.868446,-4.638357,-4.224120,-2.960387,-2.381059,6.701144,-1.549865,5.973748,9.218855,3.514924,-6.881759,-1.029521,-7.145233,-6.666023,6.635475,-3.925191,0.061329,6.196127,5.434229,-1.572921,-4.364269,-0.895733,9.495210,-2.042493,1.603448,-8.944226,8.862151,-1.568078,-7.877922,-4.415885,6.935241,5.277901,8.399776,-1.766356,-6.564727,-9.740622,-4.898032,7.239894,-3.137358,-1.483229,9.563633,6.158919,-7.026035,-0.494658,4.092956,-0.631685,-6.106070,7.585758,-7.405440,-0.158427,-7.517502,6.195420,7.989276,-5.373990,-1.804465,-1.189348,9.332350,-7.073744,6.607139,3.145156,9.632793,2.646287,2.335826,2.100443,6.730129,-3.357834,-5.788298,-4.387073,-4.124177,-4.024648,-1.721531,-8.817393,-9.727589,6.103482,-2.338196,-3.091479,-5.564704,5.602205,-5.938907,0.394735,-2.622610,0.837316,2.644390,0.368612,-4.582710,0.832765,-9.352425,5.647514,-4.530457,-1.938798,2.024704,8.775594,-7.179907,7.538057,6.060312,-7.132772,-8.751297,7.155735,-0.146496,5.150258,-1.610326,3.395977,-0.935535,9.630022,0.348726,7.731451,0.563427,-7.450670,7.442943,-3.476675,-5.330405,2.949313,3.598521,-8.285192,2.894622,-5.930060,-2.739141,-9.136703,-0.847579,-0.124422,4.108543,-8.584829,-1.139078,-5.910905,-3.682391,-4.265382,-5.992437,2.243682,-0.744312,4.591637,7.090838,1.298457,1.215514,5.672270,-7.617598,0.445369,1.028271,-4.265370,-2.676877,-8.588746,0.371607,6.906388,-7.958826,8.595644,-0.303621,-9.305695,2.773317,-0.351361,0.719367,-8.883782,6.578435,3.877639,-6.731239,-8.082041,-7.627594,1.641364,6.888538,9.023415,-8.691686,1.509912,3.102456,-1.573882,8.885131,1.162750,-6.509428,-8.375164,2.114639,7.080183,8.742417,-5.838557,-7.541434,-4.039192,-9.429093,0.071975,-6.118927,-7.861666,-9.979924,-5.816575,1.199393,-3.007454,-2.842498,2.450758,-1.524564,7.073194,-2.353273,2.346648,4.604923,-0.771596,-6.863805,-1.747137,-3.337107,-9.614072,-4.081245,9.255088,2.605338,1.375142,-9.723286,4.910878,7.265218,8.955416,2.203507,-9.872615,-9.823801,-6.950504,-6.416239,2.677564,8.108971,2.020723,5.770630,5.098296,-9.533897,-0.151694,6.645647,0.038123,-9.431214,-6.526951,-2.731821,-0.067405,-7.589810,7.717411,-6.280350,4.790146,-9.234616,3.713898,2.978210,-8.025932,8.371014,9.871851,8.608948,-4.963802,6.088502,8.048951,4.930778,-7.294534,-4.542128,1.314513,-2.442486,4.600506,4.218857,-9.740293,5.917867,8.745308,1.861498,-4.553135,5.027210,-6.236576,7.029513,-4.619263,-6.229929,-0.447211,-5.703933,8.531722,7.505406,-8.732664,7.823792,1.945870,3.864725,4.277306,5.318795,6.874691,-4.885761,4.940671,6.468555,1.926695,-7.500424,2.662090,3.741666,-5.773673,6.013887,2.836333,2.971588,3.153230,1.883127,-5.583027,-0.722120,-7.584207,9.863064,3.886200,0.992858,-3.985251,-1.601571,6.333770,-5.801331,-1.987732,-0.473366,-0.254445,2.844635,-3.969395,3.295735,1.882364,5.541750,-7.809387,-5.781401,1.367084,-5.344851,2.117961,6.243243,-8.418929,-2.383462,6.339249,5.015544,5.928048,-9.934490,1.075937,-3.365276,0.512975,-9.360987,-3.779848,2.231548,8.569854,-0.830585,1.206120,4.292460,2.736246,-4.196172,-4.109506,7.463395,-0.008078,9.263016,0.778270,9.734789,8.675155,-9.501581,-5.205862,-1.201877,-9.066127,-8.255022,-5.794987,0.386370,-8.553046,1.315642,6.032965,-1.691734,-7.290974,-5.491672,6.154233,-4.718837,1.230008,-3.059214,3.304456,4.518438,6.051462,1.187061,2.376931,-4.304247,-2.810294,-7.761725,-5.111754,-5.366107,1.312734,-0.146766,-5.808721,3.801082,5.035160,7.436376,-3.539259,-7.585706,-8.949445,-9.920908,0.759795,9.839853,-1.829292,5.760592,-9.440886,8.430073,-3.180631,-1.540263,-4.137847,3.057976,-5.002319,-9.921959,3.524893,-9.073393,-9.145309,-2.249880,5.894762,-0.290394,2.704670,-4.717909,5.396927,7.088595,3.344201,-7.259874,-5.872867,-5.258584,-2.645881,3.356270,0.190821,1.472419,-8.928214,0.104674,-1.917117,9.485131,-7.106119,2.552456,1.455078,1.315877,3.904071,2.041011,9.379432,-5.192255,-3.963613,-0.366751,5.842062,-0.276103,6.333115,-4.599473,5.130403,1.609577,0.113418,2.370607,-0.796750,-7.968416,-9.246676,9.533712,7.804951,8.894095,1.474701,1.472955,2.455232,9.006413,-9.505047,-8.711209,5.868195,4.265152,9.637853,-5.538202,9.567929,6.976011,-8.849216,-4.436166,-5.487006,4.090382,5.821686,-6.871986,-1.102207,8.033611,0.604864,-0.697662,4.482463,-5.105516,-1.434739,-6.954350,3.529860,5.369965,-9.086874,8.832378,0.652276,8.943201,6.668297,-6.115322,1.885999,-2.299449,8.491591,1.402792,-1.592300,3.682106,-4.779165,6.483718,5.829967,3.830684,-9.887868,-1.393350,-3.656740,-5.519355,-4.430947,6.968732,-2.008140,-7.350121,9.220637,-8.589197,1.349966,-1.929126,-3.000604,4.067905,0.226243,1.626113,3.198942,1.414195,4.964976,-9.123651,-5.589959,9.435754,9.723332,7.234571,-7.459135,2.871840,5.352852,7.022815,2.445477,-4.177624,-4.890917,-8.789870,8.165629,1.637066,9.203956,-3.718234,5.422799,-1.628069,-9.760678,9.024614,3.941210,-1.544142,6.709113,-9.463643,5.901562,9.303644,8.160564,7.986772,1.275083,3.809335,-7.210488,0.184280,-0.625646,5.348991,9.352046,3.446051,0.696763,9.737849,8.081807,9.804746,-8.143975,-8.045945,-9.400511,3.765941,-7.144719,-4.293319,-2.769605,1.046666,9.592618,1.821656,3.895083,1.600527,7.760800,5.053766,4.869429,1.649496,1.984648,8.867290,2.050134,-5.176752,5.585631,7.797956,-0.534565,-0.940538,0.269482,-6.707334,-7.476577,8.001655,-7.751442,4.145846,3.011791,-3.805241,-8.717637,-2.630466,-5.561373,-9.016578,4.387078,0.731210,-7.563411,7.420250,-6.427281,-4.742771,9.586456,-3.761497,7.382096,8.155228,-1.587468,2.936156,3.955458,-5.670518,-8.380803,-6.473452,-8.713495,5.777797,2.807286,-5.016792,-9.976021,0.749622,-6.172634,-9.385877,7.512051,-5.506313,8.789882,-4.544830,4.900408,-7.868530,4.262793,2.237789,-2.191772,-2.888342,7.380103,2.092366,-8.397849,-1.548013,-5.019187,-7.608296,-4.561966,3.781222,-3.094401,6.321496,9.463260,-2.244032,-9.711217,-9.766918,-8.295134,-7.837742,-7.211422,-0.945712,-7.224804,8.067606,7.376970,-0.822977,2.529151,8.591761,-6.027850,0.735580,-3.916942,-1.229871,-5.022353,0.657181,-9.791482,-2.356627,-3.043372,8.691310,1.801652,8.481182,-3.007444,3.771179,-6.008563,6.565662,0.805382,-9.078077,-7.007679,-1.191597,2.699389,-1.577730,1.437440,-1.975424,5.439689,3.391251,3.948126,9.126999,-8.565019,1.048202,4.130756,9.993332,4.954620,-9.249998,3.704872,-7.149725,-2.858508,-8.211924,-2.540057,6.779977,-0.586857,-2.908361,-3.787627,7.751032,-5.881093,6.738575,6.870699,-7.657833,-1.806751,7.289053,0.995692,-2.670654,-2.354119,-4.034455,-9.411465,-2.034704,-0.935015,-7.228772,-1.323607,3.642134,-6.606413,-3.953258,-9.246901,-0.680209,9.800335,-5.252467,-2.351299,-8.652219,3.873490,9.157571,1.555897,-2.307703,-8.010244,-7.119754,-4.138122,-0.547961,-2.422365,-7.106114,0.913006,7.960318,-4.290369,-2.669265,-9.289284,5.999861,7.536707,7.210010,-0.955982,-6.793703,-7.113354,6.836158,-5.556620,3.100969,-1.499478,5.683459,5.666483,-3.415475,-5.425220,-2.578964,-4.294823,-3.884441,-7.227281,-1.982380,8.106240,1.752933,6.294618,-2.131687,-9.707028,-6.176807,-6.098863,2.624514,-7.451921,9.917845,-5.356569,6.444124,-8.712739,-9.639109,-2.581093,4.332268,8.442429,4.372237,-0.249753,-7.878598,-5.305588,4.842374,4.131997,-6.403718,6.519399,-3.178104,5.901926,-5.866051,-3.796144,-8.095296,8.009552,-5.604983,-2.161105,7.756478,-9.958851,-2.863058,-1.384557,0.300978,-6.192172,8.090504,9.363671,3.356638,5.010788,-1.600834,-6.804037,-6.955681,3.468065,-8.017807,1.602677,-3.297855,7.056102,-9.437363,-4.910087,4.383027,9.019144,-5.068231,8.798673,2.934211,4.714611,-8.924164,-7.238884,5.494392,1.473262,1.411465,1.010228,-3.636686,-8.690726,-7.373302,-3.470668,1.256231,-0.368206,5.985509,9.329720,9.491012,-9.711462,-5.754131,-9.730467,-5.495229,1.833877,-3.783584,5.986690,-2.717802], dtype = "float32")#candidate|7686|(891,)|const|float32
call_7683 = relay.TupleGetItem(func_1880_call(relay.reshape(var_7684.astype('float64'), [135,]), relay.reshape(var_7685.astype('float64'), [2160,]), relay.reshape(const_7686.astype('float32'), [9, 9, 11]), ), 1)
call_7687 = relay.TupleGetItem(func_1885_call(relay.reshape(var_7684.astype('float64'), [135,]), relay.reshape(var_7685.astype('float64'), [2160,]), relay.reshape(const_7686.astype('float32'), [9, 9, 11]), ), 1)
var_7698 = relay.var("var_7698", dtype = "float32", shape = (891,))#candidate|7698|(891,)|var|float32
bop_7699 = relay.bitwise_and(const_7686.astype('uint64'), relay.reshape(var_7698.astype('uint64'), relay.shape_of(const_7686))) # shape=(891,)
func_7321_call = mod.get_global_var('func_7321')
func_7322_call = mutated_mod.get_global_var('func_7322')
call_7711 = relay.TupleGetItem(func_7321_call(), 0)
call_7712 = relay.TupleGetItem(func_7322_call(), 0)
func_3986_call = mod.get_global_var('func_3986')
func_3988_call = mutated_mod.get_global_var('func_3988')
call_7714 = func_3986_call()
call_7715 = func_3986_call()
output = relay.Tuple([call_7661,call_7683,var_7684,var_7685,bop_7699,call_7711,call_7714,])
output2 = relay.Tuple([call_7662,call_7687,var_7684,var_7685,bop_7699,call_7712,call_7715,])
func_7736 = relay.Function([var_7684,var_7685,var_7698,], output)
mod['func_7736'] = func_7736
mod = relay.transform.InferType()(mod)
mutated_mod['func_7736'] = func_7736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7736_call = mutated_mod.get_global_var('func_7736')
var_7738 = relay.var("var_7738", dtype = "float64", shape = (135,))#candidate|7738|(135,)|var|float64
var_7739 = relay.var("var_7739", dtype = "float64", shape = (2160,))#candidate|7739|(2160,)|var|float64
var_7740 = relay.var("var_7740", dtype = "float32", shape = (891,))#candidate|7740|(891,)|var|float32
call_7737 = func_7736_call(var_7738,var_7739,var_7740,)
output = call_7737
func_7741 = relay.Function([var_7738,var_7739,var_7740,], output)
mutated_mod['func_7741'] = func_7741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3859_call = mod.get_global_var('func_3859')
func_3861_call = mutated_mod.get_global_var('func_3861')
call_7776 = relay.TupleGetItem(func_3859_call(), 0)
call_7777 = relay.TupleGetItem(func_3861_call(), 0)
func_1023_call = mod.get_global_var('func_1023')
func_1026_call = mutated_mod.get_global_var('func_1026')
var_7779 = relay.var("var_7779", dtype = "int16", shape = ())#candidate|7779|()|var|int16
const_7780 = relay.const([-7,3,2,-8,-7,-8,-6,-6,-7,-1,1,10,10,5,4,-10,2,3,-3,6,7,-9,-8,-4,-5,5,8,2,-9,4,6,6,-9,-3,-2,-2,-4,-4,5,7,-4,-6,10,-10,6,6,-8,-9,3,-1,2,6,2,8,7,-7,-10,3,2,2,-7,-7,1,4,-9,-1,-8,-9,-6,-10,-4,3,-10,5,8,-8,-6,-10,3,2,-10,-5,9,-9,-2,-7,-5,-10,7,-7,-5,-9,-1,9,-6,-10,-6,-3,8,2,-10,-6,-1,10,-6,-10,3,1,2,-10,4,3,4,7,-7,-3,7,-1,-10,4,-9,6,-8,6,10,6,-7,-2,-4,-4,-7,9,-8,4,-5,-5,-7,-6,9,-2,-9,1,-9,8,3,6,1,-7,8,-9,2,-7,5,3,-7,-3,5,-4,-6,-8,6,-10,-9,-8,-8,2,-2,-8,-4,3,8,-10,9,-9,-8,-5,-1,5,-1,9,-1,9], dtype = "int16")#candidate|7780|(182,)|const|int16
call_7778 = relay.TupleGetItem(func_1023_call(relay.reshape(var_7779.astype('int16'), []), relay.reshape(const_7780.astype('int16'), [14, 13, 1]), ), 1)
call_7781 = relay.TupleGetItem(func_1026_call(relay.reshape(var_7779.astype('int16'), []), relay.reshape(const_7780.astype('int16'), [14, 13, 1]), ), 1)
bop_7799 = relay.logical_or(var_7779.astype('bool'), call_7778.astype('bool')) # shape=(14, 13, 1)
bop_7802 = relay.logical_or(var_7779.astype('bool'), call_7781.astype('bool')) # shape=(14, 13, 1)
output = relay.Tuple([call_7776,const_7780,bop_7799,])
output2 = relay.Tuple([call_7777,const_7780,bop_7802,])
F = relay.Function([var_7779,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7779,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

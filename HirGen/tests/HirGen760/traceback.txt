==========mod==========
#[version = "0.0.5"]
def @func_13199(%var_13175: Tensor[(900), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %0 = @func_8054() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1 = cast(%var_13175, dtype="int16") /* ty=Tensor[(900), int16] */;
  %2 = cast(%var_13175, dtype="int16") /* ty=Tensor[(900), int16] */;
  %3 = reshape(%1, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %4 = reshape(%2, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %5 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %6 = %0.0;
  %7 = @func_11589() /* ty=Tensor[(14, 15, 16), float64] */;
  %8 = @func_2088(%3, %4) /* ty=Tensor[(9, 10, 10), bool] */;
  %9 = @func_12904() /* ty=Tensor[(14, 15, 16), float64] */;
  %10 = %5.0;
  (%6, %7, %8, %var_13175, %9, %10)
}

def @func_8181() -> Tensor[(14, 15, 16), float64] {
  %11 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %11.0
}

def @func_3394(%var_3350: Tensor[(4, 3, 1), int32], %var_3351: Tensor[(4, 3, 4), int32], %var_3370: Tensor[(90, 10), int16], %var_3380: Tensor[(9, 10, 10), bool]) -> (Tensor[(4, 3, 4), bool], Tensor[(90, 10), int16], Tensor[(9, 10, 10), int32]) {
  %12 = cast(%var_3350, dtype="bool") /* ty=Tensor[(4, 3, 1), bool] */;
  %13 = cast(%var_3351, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
  %14 = cast(%var_3370, dtype="int16") /* ty=Tensor[(90, 10), int16] */;
  %15 = cast(%var_3370, dtype="int16") /* ty=Tensor[(90, 10), int16] */;
  %16 = reshape(%14, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %17 = reshape(%15, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %18 = @func_2088(%16, %17) /* ty=Tensor[(9, 10, 10), bool] */;
  %19 = cast(%var_3380, dtype="int32") /* ty=Tensor[(9, 10, 10), int32] */;
  %20 = shape_of(%18, dtype="int32") /* ty=Tensor[(3), int32] */;
  %21 = cast(%18, dtype="int32") /* ty=Tensor[(9, 10, 10), int32] */;
  %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %23 = less(%12, %13) /* ty=Tensor[(4, 3, 4), bool] */;
  %24 = bitwise_and(%21, %22) /* ty=Tensor[(9, 10, 10), int32] */;
  (%23, %var_3370, %24)
}

def @func_13511() -> (Tensor[(15, 3, 14), float64],) {
  %25 = @func_12070() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32], Tensor[(14, 15, 16), float64]) */;
  %26 = %25.1;
  (%26,)
}

def @func_5515() -> (Tensor[(14, 15, 16), float64],) {
  %27 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %28 = %27.1;
  (%28,)
}

def @func_16435(%var_16410: Tensor[(448), float32]) -> (Tensor[(14, 15, 16), float32], Tensor[(448), float32], Tensor[(448), float32], Tensor[(5, 4, 10), bool]) {
  %29 = @func_7284() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %30 = %29.1;
  %31 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 15, 16), float64] */, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %32 = shape_of(%30, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%30, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %35 = cast(%var_16410, dtype="float32") /* ty=Tensor[(448), float32] */;
  %36 = reshape(%35, newshape=[448]) /* ty=Tensor[(448), float32] */;
  %37 = @func_15086(%36) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 11, 5), float32], Tensor[(448), float32]) */;
  %38 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %39 = floor_mod(%33, %34) /* ty=Tensor[(14, 15, 16), float32] */;
  %40 = %37.2;
  %41 = %38.2;
  (%39, %40, %var_16410, %41)
}

def @func_8123() -> (Tensor[(14, 15, 16), float64],) {
  %42 = @func_5786() /* ty=Tensor[(14, 15, 16), float64] */;
  (%42,)
}

def @func_4242(%var_4230: Tensor[(200), int16]) -> (Tensor[(15, 9, 12), int64], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(3, 7, 6), bool], Tensor[(126), float32]) {
  %43 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 9, 12), int64] */, dtype="int64") /* ty=Tensor[(1, 9, 12), int64] */;
  %44 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 9, 12), int64] */, dtype="int64") /* ty=Tensor[(15, 9, 12), int64] */;
  %45 = cast(%var_4230, dtype="int16") /* ty=Tensor[(200), int16] */;
  %46 = cast(%var_4230, dtype="int16") /* ty=Tensor[(200), int16] */;
  %47 = reshape(%45, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
  %48 = reshape(%46, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
  %49 = cast(meta[relay.Constant][3] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %50 = reshape(%49, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %51 = right_shift(%43, %44) /* ty=Tensor[(15, 9, 12), int64] */;
  %52 = @func_112(%47, %48) /* ty=Tensor[(5, 4, 10), bool] */;
  %53 = @func_940(%50) /* ty=Tensor[(3, 7, 6), bool] */;
  (%51, %52, %var_4230, %53, meta[relay.Constant][3] /* ty=Tensor[(126), float32] */)
}

def @func_5538() -> (Tensor[(14, 15, 16), float64],) {
  %54 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %55 = %54.0;
  (%55,)
}

def @func_12725() -> Tensor[(14, 15, 16), float64] {
  %56 = @func_10334() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %56.0
}

def @func_15958() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %57 = @func_15261() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %58 = %57.0;
  %59 = @func_12447() /* ty=Tensor[(14, 15, 16), float64] */;
  (%58, %59)
}

def @func_6384(%var_6312: Tensor[(480), float64], %var_6370: Tensor[(14, 15, 16), float64]) -> (Tensor[(5, 4, 10), bool], Tensor[(5, 16, 6), float64], Tensor[(480), float64], Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), uint64]) {
  %60 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %61 = cast(%var_6312, dtype="float64") /* ty=Tensor[(480), float64] */;
  %62 = reshape(%61, newshape=[5, 16, 6]) /* ty=Tensor[(5, 16, 6), float64] */;
  %63 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %64 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %65 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %66 = %65.1;
  %67 = cast(%var_6370, dtype="uint64") /* ty=Tensor[(14, 15, 16), uint64] */;
  %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%66, dtype="uint64") /* ty=Tensor[(14, 15, 16), uint64] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %71 = %60.2;
  %72 = @func_4072(%62) /* ty=Tensor[(5, 16, 6), float64] */;
  %73 = %63.2;
  %74 = %64.0;
  %75 = right_shift(%69, %70) /* ty=Tensor[(14, 15, 16), uint64] */;
  (%71, %72, %var_6312, %73, %74, %75)
}

def @func_6961(%var_6947: Tensor[(242), int8], %var_6949: Tensor[(900), int16], %var_6950: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(200), int16], Tensor[(900), int16], Tensor[(2178), int8]) {
  %76 = @func_6622() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %77 = %76.0;
  %78 = cast(%77, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %79 = cast(%var_6947, dtype="int8") /* ty=Tensor[(242), int8] */;
  %80 = cast(meta[relay.Constant][4] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %81 = cast(%var_6949, dtype="int16") /* ty=Tensor[(900), int16] */;
  %82 = cast(%var_6950, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %83 = reshape(%79, newshape=[1, 242]) /* ty=Tensor[(1, 242), int8] */;
  %84 = reshape(%80, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %85 = reshape(%81, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %86 = reshape(%82, newshape=[9, 242]) /* ty=Tensor[(9, 242), int8] */;
  %87 = @func_5484(%83, %84, %85, %86) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), float32], Tensor[(9, 242), bool], Tensor[(9, 242), bool], Tensor[(9, 242), float64]) */;
  %88 = log2(%78) /* ty=Tensor[(14, 15, 16), float64] */;
  %89 = %87.4;
  (%88, %89, %var_6947, meta[relay.Constant][4] /* ty=Tensor[(200), int16] */, %var_6949, %var_6950)
}

def @func_9725() -> (Tensor[(14, 15, 16), float64],) {
  %90 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
  (%90,)
}

def @func_11329() -> Tensor[(14, 15, 16), float64] {
  %91 = @func_10140() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16]) */;
  %91.3
}

def @func_16024() -> (Tensor[(14, 15, 16), float64], Tensor[(5, 16, 6), float64], Tensor[(4, 120), float64]) {
  %92 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 120), float64] */, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
  %93 = reshape(%92, newshape=[5, 16, 6]) /* ty=Tensor[(5, 16, 6), float64] */;
  %94 = @func_9910() /* ty=Tensor[(14, 15, 16), float64] */;
  %95 = @func_4072(%93) /* ty=Tensor[(5, 16, 6), float64] */;
  (%94, %95, meta[relay.Constant][5] /* ty=Tensor[(4, 120), float64] */)
}

def @func_15433(%var_15412: Tensor[(630), int32]) -> (Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32]) {
  %96 = @func_12779() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %97 = cast(%var_15412, dtype="int32") /* ty=Tensor[(630), int32] */;
  %98 = cast(%var_15412, dtype="int32") /* ty=Tensor[(630), int32] */;
  %99 = reshape(%97, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
  %100 = reshape(%98, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
  %101 = %96.0;
  %102 = @func_10413(%99, %100) /* ty=Tensor[(15, 3, 14), float64] */;
  (%101, %102, %var_15412)
}

def @func_15929() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %103 = @func_11539() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %104 = @func_13724() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %105 = %103.0;
  %106 = %104.1;
  %107 = @func_13810() /* ty=Tensor[(14, 15, 16), float64] */;
  (%105, %106, %107)
}

def @func_7284() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %108 = @func_6622() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %109 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %110 = %108.0;
  %111 = %109.0;
  (%110, %111)
}

def @func_12327() -> (Tensor[(320), float32],) {
  %112 = @func_10815() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(242), int8], Tensor[(900), int16], Tensor[(2178, 1), int8], Tensor[(320), float32], Tensor[(80, 4), float32], Tensor[(200), int16]) */;
  %113 = %112.5;
  (%113,)
}

def @func_9337() -> Tensor[(14, 15, 16), float64] {
  @func_9031() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_9031() -> Tensor[(14, 15, 16), float64] {
  @func_7581() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_13308(%var_13304: Tensor[(1, 900), int16], %var_13305: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(200), int16], Tensor[(1, 900), int16], Tensor[(2178), int8]) {
  %114 = cast(meta[relay.Constant][6] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %115 = cast(meta[relay.Constant][7] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %116 = cast(%var_13304, dtype="int16") /* ty=Tensor[(1, 900), int16] */;
  %117 = cast(%var_13305, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %118 = reshape(%114, newshape=[1, 242]) /* ty=Tensor[(1, 242), int8] */;
  %119 = reshape(%115, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %120 = reshape(%116, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %121 = reshape(%117, newshape=[9, 242]) /* ty=Tensor[(9, 242), int8] */;
  %122 = @func_5484(%118, %119, %120, %121) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), float32], Tensor[(9, 242), bool], Tensor[(9, 242), bool], Tensor[(9, 242), float64]) */;
  %123 = @func_12904() /* ty=Tensor[(14, 15, 16), float64] */;
  %124 = %122.5;
  (%123, %124, meta[relay.Constant][6] /* ty=Tensor[(242), int8] */, meta[relay.Constant][7] /* ty=Tensor[(200), int16] */, %var_13304, %var_13305)
}

def @func_9057() -> (Tensor[(14, 15, 16), float64], Tensor[(5, 16, 6), float64], Tensor[(480), float64]) {
  %125 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %126 = cast(meta[relay.Constant][8] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %127 = reshape(%126, newshape=[5, 16, 6]) /* ty=Tensor[(5, 16, 6), float64] */;
  %128 = %125.0;
  %129 = @func_4072(%127) /* ty=Tensor[(5, 16, 6), float64] */;
  (%128, %129, meta[relay.Constant][8] /* ty=Tensor[(480), float64] */)
}

def @func_9872() -> Tensor[(14, 15, 16), float64] {
  @func_7157() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_8788() -> (Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64], Tensor[(528), float64], Tensor[(900), int16], Tensor[(14, 15, 16), float64]) {
  %130 = cast(meta[relay.Constant][9] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %131 = cast(meta[relay.Constant][9] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %132 = cast(meta[relay.Constant][10] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %133 = reshape(%130, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), float64] */;
  %134 = reshape(%131, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), float64] */;
  %135 = reshape(%132, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %136 = @func_2812(%133, %134, %135) /* ty=(Tensor[(8, 6, 11), float64], Tensor[(8, 6, 11), int8], Tensor[(9, 10, 10), bool], Tensor[(900), int16]) */;
  %137 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %138 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
  %139 = %136.0;
  %140 = %137.0;
  (%138, %139, meta[relay.Constant][9] /* ty=Tensor[(528), float64] */, meta[relay.Constant][10] /* ty=Tensor[(900), int16] */, %140)
}

def @func_1940(%var_1926: Tensor[(5, 14, 12), float64]) -> (Tensor[(5, 14, 12), float64], Tensor[(5, 4, 10), bool], Tensor[(200), int16]) {
  %141 = cast(%var_1926, dtype="float64") /* ty=Tensor[(5, 14, 12), float64] */;
  %142 = cast(meta[relay.Constant][11] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %143 = cast(meta[relay.Constant][11] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %144 = reshape(%142, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
  %145 = reshape(%143, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
  %146 = acos(%141) /* ty=Tensor[(5, 14, 12), float64] */;
  %147 = @func_112(%144, %145) /* ty=Tensor[(5, 4, 10), bool] */;
  (%146, %147, meta[relay.Constant][11] /* ty=Tensor[(200), int16] */)
}

def @func_14565() -> (Tensor[(300), bool],) {
  %148 = @func_7211() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(5, 12, 5), bool], Tensor[(300), bool]) */;
  %149 = %148.3;
  (%149,)
}

def @func_16066() -> Tensor[(14, 15, 16), float64] {
  %150 = @func_10929() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %150.0
}

def @func_9971() -> (Tensor[(14, 15, 16), float64],) {
  %151 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %152 = %151.0;
  (%152,)
}

def @func_12210() -> (Tensor[(14, 15, 16), float64],) {
  %153 = @func_7157() /* ty=Tensor[(14, 15, 16), float64] */;
  (%153,)
}

def @func_11501() -> (Tensor[(14, 15, 16), float32],) {
  %154 = @func_6056() /* ty=Tensor[(14, 15, 16), float32] */;
  (%154,)
}

def @func_7471(%var_7442: Tensor[(528), float64], %var_7443: Tensor[(900), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(528), float64], Tensor[(900), int16]) {
  %155 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %156 = cast(%var_7442, dtype="float64") /* ty=Tensor[(528), float64] */;
  %157 = cast(%var_7442, dtype="float64") /* ty=Tensor[(528), float64] */;
  %158 = cast(%var_7443, dtype="int16") /* ty=Tensor[(900), int16] */;
  %159 = reshape(%156, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), float64] */;
  %160 = reshape(%157, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), float64] */;
  %161 = reshape(%158, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %162 = @func_2812(%159, %160, %161) /* ty=(Tensor[(8, 6, 11), float64], Tensor[(8, 6, 11), int8], Tensor[(9, 10, 10), bool], Tensor[(900), int16]) */;
  %163 = @func_5786() /* ty=Tensor[(14, 15, 16), float64] */;
  %164 = %155.1;
  %165 = %162.3;
  (%163, %164, %165, %var_7442, %var_7443)
}

def @func_10334() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %166 = @func_9971() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %167 = %166.0;
  %168 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
  (%167, %168)
}

def @func_10285(%var_10226: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(160, 2), float32], Tensor[(242), int8], Tensor[(200), int16], Tensor[(900), int16], Tensor[(2178), float64], Tensor[(9, 242), float64]) {
  %169 = @func_9316() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %170 = @func_8054() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %171 = cast(meta[relay.Constant][12] /* ty=Tensor[(160, 2), float32] */, dtype="float32") /* ty=Tensor[(160, 2), float32] */;
  %172 = reshape(%171, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %173 = @func_9551(%172) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 12, 5), bool], Tensor[(320), float32], Tensor[(200), int16]) */;
  %174 = cast(%var_10226, dtype="float64") /* ty=Tensor[(2178), float64] */;
  %175 = cast(meta[relay.Constant][13] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %176 = cast(meta[relay.Constant][14] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %177 = cast(meta[relay.Constant][15] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %178 = cast(%var_10226, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %179 = reshape(%175, newshape=[1, 242]) /* ty=Tensor[(1, 242), int8] */;
  %180 = reshape(%176, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %181 = reshape(%177, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %182 = reshape(%178, newshape=[9, 242]) /* ty=Tensor[(9, 242), int8] */;
  %183 = @func_5484(%179, %180, %181, %182) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), float32], Tensor[(9, 242), bool], Tensor[(9, 242), bool], Tensor[(9, 242), float64]) */;
  %184 = %183.5;
  %185 = cast(%184, dtype="float32") /* ty=Tensor[(9, 242), float32] */;
  %186 = sqrt(%185) /* ty=Tensor[(9, 242), float32] */;
  %187 = cast(%186, dtype="float32") /* ty=Tensor[(9, 242), float32] */;
  %188 = acos(%187) /* ty=Tensor[(9, 242), float32] */;
  %189 = cast(%188, dtype="uint32") /* ty=Tensor[(9, 242), uint32] */;
  %190 = shape_of(%186, dtype="int32") /* ty=Tensor[(2), int32] */;
  %191 = cast(%186, dtype="uint32") /* ty=Tensor[(9, 242), uint32] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %193 = subtract(%191, %192) /* ty=Tensor[(9, 242), uint32] */;
  %194 = cast(%193, dtype="float32") /* ty=Tensor[(9, 242), float32] */;
  %195 = cos(%194) /* ty=Tensor[(9, 242), float32] */;
  %196 = cast(%195, dtype="float64") /* ty=Tensor[(9, 242), float64] */;
  %197 = %169.0;
  %198 = %170.0;
  %199 = %173.2;
  %200 = erf(%174) /* ty=Tensor[(2178), float64] */;
  %201 = sin(%196) /* ty=Tensor[(9, 242), float64] */;
  (%197, %198, %199, meta[relay.Constant][12] /* ty=Tensor[(160, 2), float32] */, meta[relay.Constant][13] /* ty=Tensor[(242), int8] */, meta[relay.Constant][14] /* ty=Tensor[(200), int16] */, meta[relay.Constant][15] /* ty=Tensor[(900), int16] */, %200, %201)
}

def @func_2561(%var_2549: Tensor[(900), int16]) -> (Tensor[(13, 16, 2), bool], Tensor[(9, 11, 5), float32], Tensor[(495), float32], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(14, 2, 16), float32], Tensor[(448), float32]) {
  %202 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 16, 2), int64] */, dtype="bool") /* ty=Tensor[(13, 16, 2), bool] */;
  %203 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(13, 16, 2), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %204 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 16, 2), int64] */, dtype="bool") /* ty=Tensor[(13, 16, 2), bool] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %206 = cast(meta[relay.Constant][18] /* ty=Tensor[(495), float32] */, dtype="float32") /* ty=Tensor[(495), float32] */;
  %207 = cast(meta[relay.Constant][18] /* ty=Tensor[(495), float32] */, dtype="float32") /* ty=Tensor[(495), float32] */;
  %208 = reshape(%206, newshape=[9, 11, 5]) /* ty=Tensor[(9, 11, 5), float32] */;
  %209 = reshape(%207, newshape=[9, 11, 5]) /* ty=Tensor[(9, 11, 5), float32] */;
  %210 = cast(%var_2549, dtype="int16") /* ty=Tensor[(900), int16] */;
  %211 = cast(%var_2549, dtype="int16") /* ty=Tensor[(900), int16] */;
  %212 = reshape(%210, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %213 = reshape(%211, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %214 = cast(meta[relay.Constant][19] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %215 = cast(meta[relay.Constant][19] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %216 = reshape(%214, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %217 = reshape(%215, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %218 = @func_471(%216, %217) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(14, 2, 16), bool]) */;
  %219 = equal(%204, %205) /* ty=Tensor[(13, 16, 2), bool] */;
  %220 = @func_1266(%208, %209) /* ty=Tensor[(9, 11, 5), float32] */;
  %221 = @func_2088(%212, %213) /* ty=Tensor[(9, 10, 10), bool] */;
  %222 = %218.0;
  (%219, %220, meta[relay.Constant][18] /* ty=Tensor[(495), float32] */, %221, %var_2549, %222, meta[relay.Constant][19] /* ty=Tensor[(448), float32] */)
}

def @func_11778() -> Tensor[(14, 15, 16), float32] {
  %223 = @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */;
  %223.0
}

def @func_4946(%var_4878: Tensor[(200), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(126), float32], Tensor[(320), float32], Tensor[(126, 200), int64], Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64], Tensor[(242), float32], Tensor[(126, 242), int16], Tensor[(126, 242), bool], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool]) {
  %224 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %225 = cast(meta[relay.Constant][20] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %226 = cast(meta[relay.Constant][21] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %227 = reshape(%225, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %228 = reshape(%226, newshape=[18, 50]) /* ty=Tensor[(18, 50), int16] */;
  %229 = @func_3286(%227, %228) /* ty=(Tensor[(3, 7, 6), bool], Tensor[(126), float32], Tensor[(2, 12, 14), float64], Tensor[(9, 10, 10), bool], Tensor[(18, 50), int16]) */;
  %230 = cast(meta[relay.Constant][22] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %231 = cast(meta[relay.Constant][23] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %232 = cast(%var_4878, dtype="int16") /* ty=Tensor[(200), int16] */;
  %233 = cast(meta[relay.Constant][21] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %234 = reshape(%230, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), int8] */;
  %235 = reshape(%231, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %236 = reshape(%232, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %237 = reshape(%233, newshape=[3, 300]) /* ty=Tensor[(3, 300), int16] */;
  %238 = @func_4143(%234, %235, %236, %237) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */;
  %239 = cast(%var_4878, dtype="int64") /* ty=Tensor[(200), int64] */;
  %240 = cast(meta[relay.Constant][20] /* ty=Tensor[(126, 1), float32] */, dtype="int64") /* ty=Tensor[(126, 1), int64] */;
  %241 = cast(meta[relay.Constant][23] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %242 = cast(%var_4878, dtype="int16") /* ty=Tensor[(200), int16] */;
  %243 = reshape(%241, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float32] */;
  %244 = reshape(%242, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %245 = @func_670(%243, %244) /* ty=(Tensor[(16, 4, 5), float32], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(5, 4, 10), bool]) */;
  %246 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %247 = cast(meta[relay.Constant][22] /* ty=Tensor[(242), int8] */, dtype="float64") /* ty=Tensor[(242), float64] */;
  %248 = asin(%247) /* ty=Tensor[(242), float64] */;
  %249 = cast(%248, dtype="float32") /* ty=Tensor[(242), float32] */;
  %250 = cast(%248, dtype="float32") /* ty=Tensor[(242), float32] */;
  %251 = cos(%250) /* ty=Tensor[(242), float32] */;
  %252 = cast(%251, dtype="bool") /* ty=Tensor[(242), bool] */;
  %253 = cast(meta[relay.Constant][20] /* ty=Tensor[(126, 1), float32] */, dtype="bool") /* ty=Tensor[(126, 1), bool] */;
  %254 = less(%252, %253) /* ty=Tensor[(126, 242), bool] */;
  %255 = cast(%254, dtype="int16") /* ty=Tensor[(126, 242), int16] */;
  %256 = cast(%251, dtype="int16") /* ty=Tensor[(242), int16] */;
  %257 = cast(%251, dtype="float64") /* ty=Tensor[(242), float64] */;
  %258 = cast(%254, dtype="float64") /* ty=Tensor[(126, 242), float64] */;
  %259 = mod(%257, %258) /* ty=Tensor[(126, 242), float64] */;
  %260 = cast(%254, dtype="bool") /* ty=Tensor[(126, 242), bool] */;
  %261 = shape_of(%259, dtype="int32") /* ty=Tensor[(2), int32] */;
  %262 = cast(%259, dtype="bool") /* ty=Tensor[(126, 242), bool] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %264 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %265 = %229.3;
  %266 = cast(%265, dtype="int16") /* ty=Tensor[(9, 10, 10), int16] */;
  %267 = cast(%265, dtype="int16") /* ty=Tensor[(9, 10, 10), int16] */;
  %268 = reshape(%266, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %269 = reshape(%267, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %270 = %224.0;
  %271 = %238.7;
  %272 = right_shift(%239, %240) /* ty=Tensor[(126, 200), int64] */;
  %273 = %245.3;
  %274 = %246.0;
  %275 = log2(%249) /* ty=Tensor[(242), float32] */;
  %276 = add(%255, %256) /* ty=Tensor[(126, 242), int16] */;
  %277 = less_equal(%262, %263) /* ty=Tensor[(126, 242), bool] */;
  %278 = %264.0;
  %279 = @func_2088(%268, %269) /* ty=Tensor[(9, 10, 10), bool] */;
  (%270, %265, meta[relay.Constant][21] /* ty=Tensor[(900), int16] */, %271, meta[relay.Constant][23] /* ty=Tensor[(320), float32] */, %272, %273, %274, %275, %276, %277, %278, %279)
}

def @func_5786() -> Tensor[(14, 15, 16), float64] {
  %280 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %280.0
}

def @func_14548() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %281 = @func_9365() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %282 = @func_9031() /* ty=Tensor[(14, 15, 16), float64] */;
  %283 = %281.0;
  (%282, %283)
}

def @func_14355(%var_14327: Tensor[(56), uint8]) -> (Tensor[(14, 15, 16), float64], Tensor[(7, 8, 13), int16], Tensor[(56), uint8], Tensor[(728), uint8], Tensor[(14, 15, 16), float64]) {
  %284 = @func_10140() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16]) */;
  %285 = cast(%var_14327, dtype="uint8") /* ty=Tensor[(56), uint8] */;
  %286 = cast(meta[relay.Constant][24] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %287 = reshape(%285, newshape=[7, 8, 1]) /* ty=Tensor[(7, 8, 1), uint8] */;
  %288 = reshape(%286, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), uint8] */;
  %289 = @func_9971() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %290 = %284.4;
  %291 = @func_5611(%287, %288) /* ty=Tensor[(7, 8, 13), int16] */;
  %292 = %289.0;
  (%290, %291, %var_14327, meta[relay.Constant][24] /* ty=Tensor[(728), uint8] */, %292)
}

def @func_12341() -> Tensor[(14, 15, 16), float64] {
  @func_9031() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_12070() -> (Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32], Tensor[(14, 15, 16), float64]) {
  %293 = @func_10929() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %294 = cast(meta[relay.Constant][25] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %295 = cast(meta[relay.Constant][25] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %296 = reshape(%294, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
  %297 = reshape(%295, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
  %298 = %293.0;
  %299 = @func_10413(%296, %297) /* ty=Tensor[(15, 3, 14), float64] */;
  %300 = @func_9960() /* ty=Tensor[(14, 15, 16), float64] */;
  (%298, %299, meta[relay.Constant][25] /* ty=Tensor[(630), int32] */, %300)
}

def @func_14656() -> Tensor[(14, 15, 16), float64] {
  %301 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %301.0
}

def @func_15768(%var_15673: Tensor[(15, 9, 8), float64], %var_15674: Tensor[(15, 9, 8), float64], %var_15757: Tensor[(200), int16]) -> (Tensor[(15, 9, 8), float64], Tensor[(15, 9, 8), float64], Tensor[(14, 15, 16), float64], Tensor[(15, 9, 8), int16], Tensor[(3, 7, 6), bool], Tensor[(200), int16]) {
  %302 = cast(%var_15674, dtype="float64") /* ty=Tensor[(15, 9, 8), float64] */;
  %303 = shape_of(%var_15673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%var_15673, dtype="float64") /* ty=Tensor[(15, 9, 8), float64] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %306 = cast(%var_15674, dtype="float64") /* ty=Tensor[(15, 9, 8), float64] */;
  %307 = cosh(%306) /* ty=Tensor[(15, 9, 8), float64] */;
  %308 = cast(%307, dtype="float64") /* ty=Tensor[(15, 9, 8), float64] */;
  %309 = @func_13724() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %310 = cast(%307, dtype="float64") /* ty=Tensor[(15, 9, 8), float64] */;
  %311 = sinh(%310) /* ty=Tensor[(15, 9, 8), float64] */;
  %312 = cast(%311, dtype="int16") /* ty=Tensor[(15, 9, 8), int16] */;
  %313 = shape_of(%var_15673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(%var_15673, dtype="int16") /* ty=Tensor[(15, 9, 8), int16] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %316 = cast(%var_15757, dtype="int16") /* ty=Tensor[(200), int16] */;
  %317 = reshape(%316, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %318 = @func_4242(%317) /* ty=(Tensor[(15, 9, 12), int64], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(3, 7, 6), bool], Tensor[(126), float32]) */;
  %319 = floor_mod(%304, %305) /* ty=Tensor[(15, 9, 8), float64] */;
  %320 = asin(%308) /* ty=Tensor[(15, 9, 8), float64] */;
  %321 = %309.1;
  %322 = subtract(%314, %315) /* ty=Tensor[(15, 9, 8), int16] */;
  %323 = %318.3;
  (%319, %320, %321, %322, %323, %var_15757)
}

def @func_9482(%var_9461: float32, %var_9462: Tensor[(1, 6, 9), float32], %var_9480: Tensor[(11, 7), float64]) -> (Tensor[(1, 6, 9), float32], Tensor[(14, 15, 16), float64], Tensor[(7, 1, 11), float64], Tensor[(11, 7), float64]) {
  %324 = cast(%var_9461, dtype="float32") /* ty=float32 */;
  %325 = cast(%var_9462, dtype="float32") /* ty=Tensor[(1, 6, 9), float32] */;
  %326 = @func_8123() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %327 = cast(%var_9480, dtype="float64") /* ty=Tensor[(11, 7), float64] */;
  %328 = reshape(%327, newshape=[7, 1, 11]) /* ty=Tensor[(7, 1, 11), float64] */;
  %329 = divide(%324, %325) /* ty=Tensor[(1, 6, 9), float32] */;
  %330 = %326.0;
  %331 = @func_6553(%328) /* ty=Tensor[(7, 1, 11), float64] */;
  (%329, %330, %331, %var_9480)
}

def @func_11075() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %332 = @func_10929() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %333 = @func_8123() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %334 = %332.0;
  %335 = %333.0;
  (%334, %335)
}

def @func_11539() -> (Tensor[(14, 15, 16), float64],) {
  %336 = @func_9316() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %337 = %336.0;
  (%337,)
}

def @func_471(%var_460: Tensor[(14, 2, 16), float32], %var_466: Tensor[(14, 2, 16), float32]) -> (Tensor[(14, 2, 16), float32], Tensor[(14, 2, 16), bool]) {
  %338 = cast(%var_460, dtype="float32") /* ty=Tensor[(14, 2, 16), float32] */;
  %339 = cast(%var_466, dtype="bool") /* ty=Tensor[(14, 2, 16), bool] */;
  %340 = shape_of(%var_460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%var_460, dtype="bool") /* ty=Tensor[(14, 2, 16), bool] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %343 = rsqrt(%338) /* ty=Tensor[(14, 2, 16), float32] */;
  %344 = greater(%341, %342) /* ty=Tensor[(14, 2, 16), bool] */;
  (%343, %344)
}

def @func_15878() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 11, 14), float64], Tensor[(2156), float64]) {
  %345 = cast(meta[relay.Constant][26] /* ty=Tensor[(2156), uint16] */, dtype="uint16") /* ty=Tensor[(2156), uint16] */;
  %346 = cast(meta[relay.Constant][26] /* ty=Tensor[(2156), uint16] */, dtype="uint16") /* ty=Tensor[(2156), uint16] */;
  %347 = reshape(%345, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), uint16] */;
  %348 = reshape(%346, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), uint16] */;
  %349 = cast(meta[relay.Constant][26] /* ty=Tensor[(2156), uint16] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %350 = @func_12341() /* ty=Tensor[(14, 15, 16), float64] */;
  %351 = @func_14733(%347, %348) /* ty=Tensor[(14, 11, 14), float64] */;
  %352 = tan(%349) /* ty=Tensor[(2156), float64] */;
  (%350, %351, %352)
}

def @func_12511() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %353 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
  %354 = @func_9396() /* ty=Tensor[(14, 15, 16), float64] */;
  %355 = @func_5786() /* ty=Tensor[(14, 15, 16), float64] */;
  (%353, %354, %355)
}

def @func_12779() -> (Tensor[(14, 15, 16), float64],) {
  %356 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %357 = %356.0;
  (%357,)
}

def @func_5484(%var_5429: Tensor[(1, 242), int8], %var_5431: Tensor[(200), int16], %var_5432: Tensor[(900), int16], %var_5480: Tensor[(9, 242), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), float32], Tensor[(9, 242), bool], Tensor[(9, 242), bool], Tensor[(9, 242), float64]) {
  %358 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %359 = cast(%var_5429, dtype="int8") /* ty=Tensor[(1, 242), int8] */;
  %360 = cast(meta[relay.Constant][27] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %361 = cast(%var_5431, dtype="int16") /* ty=Tensor[(200), int16] */;
  %362 = cast(%var_5432, dtype="int16") /* ty=Tensor[(900), int16] */;
  %363 = reshape(%359, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), int8] */;
  %364 = reshape(%360, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %365 = reshape(%361, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %366 = reshape(%362, newshape=[3, 300]) /* ty=Tensor[(3, 300), int16] */;
  %367 = @func_4143(%363, %364, %365, %366) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */;
  %368 = %367.6;
  %369 = cast(%var_5432, dtype="float32") /* ty=Tensor[(900), float32] */;
  %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%368, dtype="float32") /* ty=Tensor[(9, 10, 10), float32] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %373 = cast(%var_5429, dtype="bool") /* ty=Tensor[(1, 242), bool] */;
  %374 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 242), int8] */, dtype="bool") /* ty=Tensor[(9, 242), bool] */;
  %375 = less(%373, %374) /* ty=Tensor[(9, 242), bool] */;
  %376 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 242), int8] */, dtype="bool") /* ty=Tensor[(9, 242), bool] */;
  %377 = shape_of(%375, dtype="int32") /* ty=Tensor[(2), int32] */;
  %378 = cast(%375, dtype="bool") /* ty=Tensor[(9, 242), bool] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %380 = cast(%var_5429, dtype="bool") /* ty=Tensor[(1, 242), bool] */;
  %381 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 242), int8] */, dtype="bool") /* ty=Tensor[(9, 242), bool] */;
  %382 = logical_or(%380, %381) /* ty=Tensor[(9, 242), bool] */;
  %383 = cast(%375, dtype="bool") /* ty=Tensor[(9, 242), bool] */;
  %384 = shape_of(%382, dtype="int32") /* ty=Tensor[(2), int32] */;
  %385 = cast(%382, dtype="bool") /* ty=Tensor[(9, 242), bool] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %387 = cast(%var_5480, dtype="float64") /* ty=Tensor[(9, 242), float64] */;
  %388 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(9, 242), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %389 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 242), int8] */, dtype="float64") /* ty=Tensor[(9, 242), float64] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %391 = %358.0;
  %392 = floor_mod(%371, %372) /* ty=Tensor[(9, 10, 10), float32] */;
  %393 = greater(%378, %379) /* ty=Tensor[(9, 242), bool] */;
  %394 = logical_and(%385, %386) /* ty=Tensor[(9, 242), bool] */;
  %395 = floor_divide(%389, %390) /* ty=Tensor[(9, 242), float64] */;
  (%391, meta[relay.Constant][27] /* ty=Tensor[(320), float32] */, %var_5431, %392, %393, %394, %395)
}

def @func_8315() -> Tensor[(14, 15, 16), float32] {
  %396 = @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */;
  %396.0
}

def @func_8509(%var_8507: Tensor[(126, 1), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(3, 7, 6), bool], Tensor[(126, 1), float32]) {
  %397 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %398 = cast(%var_8507, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %399 = reshape(%398, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %400 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
  %401 = %397.0;
  %402 = @func_940(%399) /* ty=Tensor[(3, 7, 6), bool] */;
  (%400, %401, %402, %var_8507)
}

def @func_5861(%var_5854: Tensor[(11, 22), int8], %var_5857: Tensor[(22, 99), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), float32], Tensor[(11, 22), int8], Tensor[(100, 2), int16], Tensor[(900), int16], Tensor[(22, 99), int8]) {
  %403 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %404 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %405 = cast(%var_5854, dtype="int8") /* ty=Tensor[(11, 22), int8] */;
  %406 = cast(meta[relay.Constant][29] /* ty=Tensor[(100, 2), int16] */, dtype="int16") /* ty=Tensor[(100, 2), int16] */;
  %407 = cast(meta[relay.Constant][30] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %408 = cast(%var_5857, dtype="int8") /* ty=Tensor[(22, 99), int8] */;
  %409 = reshape(%405, newshape=[1, 242]) /* ty=Tensor[(1, 242), int8] */;
  %410 = reshape(%406, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %411 = reshape(%407, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %412 = reshape(%408, newshape=[9, 242]) /* ty=Tensor[(9, 242), int8] */;
  %413 = @func_5484(%409, %410, %411, %412) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), float32], Tensor[(9, 242), bool], Tensor[(9, 242), bool], Tensor[(9, 242), float64]) */;
  %414 = %403.0;
  %415 = %404.1;
  %416 = %413.3;
  (%414, %415, %416, %var_5854, meta[relay.Constant][29] /* ty=Tensor[(100, 2), int16] */, meta[relay.Constant][30] /* ty=Tensor[(900), int16] */, %var_5857)
}

def @func_9800(%var_9793: Tensor[(900), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(528), float64], Tensor[(900), int16]) {
  %417 = @func_8054() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %418 = cast(meta[relay.Constant][31] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %419 = cast(%var_9793, dtype="int16") /* ty=Tensor[(900), int16] */;
  %420 = reshape(%418, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %421 = reshape(%419, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %422 = @func_7471(%420, %421) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(528), float64], Tensor[(900), int16]) */;
  %423 = %417.0;
  %424 = %422.1;
  (%423, %424, meta[relay.Constant][31] /* ty=Tensor[(528), float64] */, %var_9793)
}

def @func_7933() -> Tensor[(14, 15, 16), float32] {
  %425 = @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */;
  %425.0
}

def @func_14710() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %426 = @func_11955() /* ty=Tensor[(14, 15, 16), float64] */;
  %427 = @func_12725() /* ty=Tensor[(14, 15, 16), float64] */;
  (%426, %427)
}

def @func_8248(%var_8202: Tensor[(14, 15, 16), float32], %var_8209: Tensor[(14, 15, 16), float32]) -> (Tensor[(14, 15, 16), uint16], Tensor[(14, 15, 16), float32], Tensor[(14, 15, 16), float64]) {
  %428 = @func_6056() /* ty=Tensor[(14, 15, 16), float32] */;
  %429 = cast(%var_8202, dtype="uint16") /* ty=Tensor[(14, 15, 16), uint16] */;
  %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%428, dtype="uint16") /* ty=Tensor[(14, 15, 16), uint16] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %433 = cast(%var_8209, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %434 = shape_of(%var_8202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%var_8202, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %437 = @func_7993() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %438 = minimum(%431, %432) /* ty=Tensor[(14, 15, 16), uint16] */;
  %439 = mod(%435, %436) /* ty=Tensor[(14, 15, 16), float32] */;
  %440 = %437.0;
  (%438, %439, %440)
}

def @func_10413(%var_10387: Tensor[(15, 3, 14), int32], %var_10388: Tensor[(15, 3, 14), int32]) -> Tensor[(15, 3, 14), float64] {
  %441 = cast(%var_10388, dtype="int32") /* ty=Tensor[(15, 3, 14), int32] */;
  %442 = shape_of(%var_10387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%var_10387, dtype="int32") /* ty=Tensor[(15, 3, 14), int32] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %445 = add(%443, %444) /* ty=Tensor[(15, 3, 14), int32] */;
  %446 = cast(%var_10387, dtype="float64") /* ty=Tensor[(15, 3, 14), float64] */;
  %447 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%445, dtype="float64") /* ty=Tensor[(15, 3, 14), float64] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%448, %449) /* ty=Tensor[(15, 3, 14), float64] */
}

def @func_6056() -> Tensor[(14, 15, 16), float32] {
  %450 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %451 = %450.0;
  %452 = cast(%451, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  atan(%452) /* ty=Tensor[(14, 15, 16), float32] */
}

def @func_10596(%var_10563: Tensor[(108), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(?, 9, 12), float32], Tensor[(108), float32], Tensor[(15, 3, 14), float64], Tensor[(630), int32], Tensor[(480), float64]) {
  %453 = @func_9316() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %454 = cast(%var_10563, dtype="float32") /* ty=Tensor[(108), float32] */;
  %455 = reshape(%454, newshape=[1, 9, 12]) /* ty=Tensor[(1, 9, 12), float32] */;
  %456 = @func_9694(%455) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(448), float32], Tensor[(?, 9, 12), float32]) */;
  %457 = cast(meta[relay.Constant][32] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %458 = cast(meta[relay.Constant][32] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %459 = reshape(%457, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
  %460 = reshape(%458, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
  %461 = @func_9057() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(5, 16, 6), float64], Tensor[(480), float64]) */;
  %462 = %453.0;
  %463 = %456.2;
  %464 = @func_10413(%459, %460) /* ty=Tensor[(15, 3, 14), float64] */;
  %465 = %461.2;
  (%462, %463, %var_10563, %464, meta[relay.Constant][32] /* ty=Tensor[(630), int32] */, %465)
}

def @func_10929() -> (Tensor[(14, 15, 16), float64],) {
  %466 = @func_9725() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %467 = %466.0;
  (%467,)
}

def @func_10301() -> (Tensor[(14, 15, 16), float64],) {
  %468 = @func_8380() /* ty=Tensor[(14, 15, 16), float64] */;
  (%468,)
}

def @func_10375() -> (Tensor[(14, 15, 16), float64],) {
  %469 = @func_8876() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %470 = %469.0;
  (%470,)
}

def @func_4846() -> (Tensor[(14, 15, 16), float64],) {
  %471 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 15, 16), float64] */, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %472 = cos(%471) /* ty=Tensor[(14, 15, 16), float64] */;
  (%472,)
}

def @func_9365() -> (Tensor[(14, 15, 16), float64],) {
  %473 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %474 = %473.0;
  (%474,)
}

def @func_15184(%var_15171: Tensor[(77, 1), float64]) -> (Tensor[(14, 15, 16), float32], Tensor[(11, 7), float64], float32, Tensor[(54), float32], Tensor[(77, 1), float32]) {
  %475 = @func_11014() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32]) */;
  %476 = cast(8.05215f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %477 = cast(meta[relay.Constant][34] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %478 = cast(%var_15171, dtype="float64") /* ty=Tensor[(77, 1), float64] */;
  %479 = reshape(%476, newshape=[]) /* ty=float32 */;
  %480 = reshape(%477, newshape=[1, 6, 9]) /* ty=Tensor[(1, 6, 9), float32] */;
  %481 = reshape(%478, newshape=[11, 7]) /* ty=Tensor[(11, 7), float64] */;
  %482 = @func_9482(%479, %480, %481) /* ty=(Tensor[(1, 6, 9), float32], Tensor[(14, 15, 16), float64], Tensor[(7, 1, 11), float64], Tensor[(11, 7), float64]) */;
  %483 = cast(%var_15171, dtype="float32") /* ty=Tensor[(77, 1), float32] */;
  %484 = %475.1;
  %485 = %482.3;
  %486 = cosh(%483) /* ty=Tensor[(77, 1), float32] */;
  (%484, %485, 8.05215f /* ty=float32 */, meta[relay.Constant][34] /* ty=Tensor[(54), float32] */, %486)
}

def @func_9122(%var_9117: Tensor[(320), float32], %var_9118: Tensor[(50, 4), int16]) -> (Tensor[(14, 15, 16), float32], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool], Tensor[(320), float32], Tensor[(50, 4), int16]) {
  %487 = cast(%var_9117, dtype="float32") /* ty=Tensor[(320), float32] */;
  %488 = cast(%var_9118, dtype="int16") /* ty=Tensor[(50, 4), int16] */;
  %489 = reshape(%487, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float32] */;
  %490 = reshape(%488, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %491 = @func_670(%489, %490) /* ty=(Tensor[(16, 4, 5), float32], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(5, 4, 10), bool]) */;
  %492 = @func_7933() /* ty=Tensor[(14, 15, 16), float32] */;
  %493 = @func_9031() /* ty=Tensor[(14, 15, 16), float64] */;
  %494 = %491.3;
  (%492, %493, %494, %var_9117, %var_9118)
}

def @func_6015(%var_5996: int32, %var_5997: Tensor[(1, 5, 12), int32]) -> (Tensor[(1, 5, 12), int32],) {
  %495 = cast(%var_5996, dtype="int32") /* ty=int32 */;
  %496 = cast(%var_5997, dtype="int32") /* ty=Tensor[(1, 5, 12), int32] */;
  %497 = maximum(%495, %496) /* ty=Tensor[(1, 5, 12), int32] */;
  (%497,)
}

def @func_9960() -> Tensor[(14, 15, 16), float64] {
  @func_8380() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_10054(%var_10052: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), int32], Tensor[(12), int32], Tensor[(2, 24), int32], Tensor[(2178), int8]) {
  %498 = @func_9971() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %499 = cast(meta[relay.Constant][35] /* ty=Tensor[(12), int32] */, dtype="int32") /* ty=Tensor[(12), int32] */;
  %500 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 24), int32] */, dtype="int32") /* ty=Tensor[(2, 24), int32] */;
  %501 = cast(%var_10052, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %502 = reshape(%499, newshape=[12]) /* ty=Tensor[(12), int32] */;
  %503 = reshape(%500, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %504 = reshape(%501, newshape=[2178]) /* ty=Tensor[(2178), int8] */;
  %505 = @func_9179(%502, %503, %504) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(900), int16], Tensor[(242), int8], Tensor[(9, 10, 10), int32], Tensor[(12), int32], Tensor[(48), int32], Tensor[(2178), uint64]) */;
  %506 = %498.0;
  %507 = %505.3;
  (%506, %507, meta[relay.Constant][35] /* ty=Tensor[(12), int32] */, meta[relay.Constant][36] /* ty=Tensor[(2, 24), int32] */, %var_10052)
}

def @func_11014() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32]) {
  %508 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %509 = %508.1;
  %510 = @func_10036() /* ty=Tensor[(14, 15, 16), float32] */;
  (%509, %510)
}

def @func_7211() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(5, 12, 5), bool], Tensor[(300), bool]) {
  %511 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %512 = @func_5929() /* ty=Tensor[(14, 15, 16), float64] */;
  %513 = cast(%512, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %514 = cast(meta[relay.Constant][37] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %515 = reshape(%514, newshape=[5, 12, 5]) /* ty=Tensor[(5, 12, 5), bool] */;
  %516 = %511.0;
  %517 = tan(%513) /* ty=Tensor[(14, 15, 16), float32] */;
  %518 = @func_2204(%515) /* ty=Tensor[(5, 12, 5), bool] */;
  (%516, %517, %518, meta[relay.Constant][37] /* ty=Tensor[(300), bool] */)
}

def @func_7993() -> (Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %519 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %520 = %519.0;
  %521 = cast(%520, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %522 = reshape(%521, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float64] */;
  %523 = @func_5099(%522) /* ty=(Tensor[(14, 15, 16), bool], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(14, 2, 16), bool], Tensor[(448), float32]) */;
  %524 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %525 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %526 = %523.1;
  %527 = %524.0;
  %528 = %525.0;
  (%520, %526, %527, %528)
}

def @func_11841() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %529 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %530 = @func_8876() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %531 = %529.0;
  %532 = %530.0;
  %533 = @func_9396() /* ty=Tensor[(14, 15, 16), float64] */;
  %534 = @func_11329() /* ty=Tensor[(14, 15, 16), float64] */;
  (%531, %532, %533, %534)
}

def @func_15394(%var_15367: Tensor[(320), float32], %var_15368: Tensor[(200), int16], %var_15369: Tensor[(450, 2), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(200), int16], Tensor[(242), int8], Tensor[(320), float32], Tensor[(200), int16], Tensor[(450, 2), int16], Tensor[(14, 15, 16), float64]) {
  %535 = @func_7284() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %536 = cast(meta[relay.Constant][38] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %537 = cast(%var_15367, dtype="float32") /* ty=Tensor[(320), float32] */;
  %538 = cast(%var_15368, dtype="int16") /* ty=Tensor[(200), int16] */;
  %539 = cast(%var_15369, dtype="int16") /* ty=Tensor[(450, 2), int16] */;
  %540 = reshape(%536, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), int8] */;
  %541 = reshape(%537, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %542 = reshape(%538, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %543 = reshape(%539, newshape=[3, 300]) /* ty=Tensor[(3, 300), int16] */;
  %544 = @func_4143(%540, %541, %542, %543) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */;
  %545 = %535.0;
  %546 = @func_10036() /* ty=Tensor[(14, 15, 16), float32] */;
  %547 = %544.8;
  %548 = @func_13319() /* ty=Tensor[(14, 15, 16), float64] */;
  (%545, %546, %547, meta[relay.Constant][38] /* ty=Tensor[(242), int8] */, %var_15367, %var_15368, %var_15369, %548)
}

def @func_6495(%var_6478: Tensor[(528), float64], %var_6491: Tensor[(60), int32]) -> (Tensor[(14, 15, 16), float32], Tensor[(9, 10, 10), bool], Tensor[(528), float64], Tensor[(900), int16], Tensor[(1, 5, 12), int32], int32, Tensor[(60), int32]) {
  %549 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %550 = %549.0;
  %551 = cast(%550, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %552 = cast(%var_6478, dtype="float64") /* ty=Tensor[(528), float64] */;
  %553 = cast(%var_6478, dtype="float64") /* ty=Tensor[(528), float64] */;
  %554 = cast(meta[relay.Constant][39] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %555 = reshape(%552, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), float64] */;
  %556 = reshape(%553, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), float64] */;
  %557 = reshape(%554, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %558 = @func_2812(%555, %556, %557) /* ty=(Tensor[(8, 6, 11), float64], Tensor[(8, 6, 11), int8], Tensor[(9, 10, 10), bool], Tensor[(900), int16]) */;
  %559 = cast(9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %560 = cast(%var_6491, dtype="int32") /* ty=Tensor[(60), int32] */;
  %561 = reshape(%559, newshape=[]) /* ty=int32 */;
  %562 = reshape(%560, newshape=[1, 5, 12]) /* ty=Tensor[(1, 5, 12), int32] */;
  %563 = @func_6015(%561, %562) /* ty=(Tensor[(1, 5, 12), int32],) */;
  %564 = atanh(%551) /* ty=Tensor[(14, 15, 16), float32] */;
  %565 = %558.2;
  %566 = %563.0;
  (%564, %565, %var_6478, meta[relay.Constant][39] /* ty=Tensor[(900), int16] */, %566, 9 /* ty=int32 */, %var_6491)
}

def @func_13548() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %567 = @func_10929() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %568 = %567.0;
  %569 = @func_12725() /* ty=Tensor[(14, 15, 16), float64] */;
  (%568, %569)
}

def @func_16498() -> Tensor[(14, 15, 16), float64] {
  %570 = @func_10895() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %570.0
}

def @func_13319() -> Tensor[(14, 15, 16), float64] {
  %571 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %571.0
}

def @func_12904() -> Tensor[(14, 15, 16), float64] {
  %572 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %572.1
}

def @func_940(%var_923: Tensor[(3, 7, 6), float32]) -> Tensor[(3, 7, 6), bool] {
  %573 = cast(%var_923, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %574 = sigmoid(%573) /* ty=Tensor[(3, 7, 6), float32] */;
  %575 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 7, 6), float32] */, dtype="bool") /* ty=Tensor[(3, 7, 6), bool] */;
  %576 = shape_of(%574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(%574, dtype="bool") /* ty=Tensor[(3, 7, 6), bool] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%577, %578) /* ty=Tensor[(3, 7, 6), bool] */
}

def @func_11296(%var_11172: Tensor[(840), float64], %var_11223: Tensor[(320), float32], %var_11286: Tensor[(630), int32]) -> (Tensor[(14, 15, 16), float32], Tensor[(5, 14, 12), float64], Tensor[(840), float64], Tensor[(14, 15, 16), float64], Tensor[(7, 1, 11), float64], Tensor[(77), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(320), float32], Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32]) {
  %579 = cast(%var_11172, dtype="float64") /* ty=Tensor[(840), float64] */;
  %580 = reshape(%579, newshape=[5, 14, 12]) /* ty=Tensor[(5, 14, 12), float64] */;
  %581 = @func_1940(%580) /* ty=(Tensor[(5, 14, 12), float64], Tensor[(5, 4, 10), bool], Tensor[(200), int16]) */;
  %582 = cast(meta[relay.Constant][41] /* ty=Tensor[(77), float64] */, dtype="float64") /* ty=Tensor[(77), float64] */;
  %583 = reshape(%582, newshape=[7, 1, 11]) /* ty=Tensor[(7, 1, 11), float64] */;
  %584 = @func_9281() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %585 = cast(%var_11223, dtype="float32") /* ty=Tensor[(320), float32] */;
  %586 = reshape(%585, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %587 = @func_9551(%586) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 12, 5), bool], Tensor[(320), float32], Tensor[(200), int16]) */;
  %588 = @func_7540() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %589 = cast(%var_11286, dtype="int32") /* ty=Tensor[(630), int32] */;
  %590 = cast(%var_11286, dtype="int32") /* ty=Tensor[(630), int32] */;
  %591 = reshape(%589, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
  %592 = reshape(%590, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
  %593 = @func_6056() /* ty=Tensor[(14, 15, 16), float32] */;
  %594 = %581.0;
  %595 = @func_9396() /* ty=Tensor[(14, 15, 16), float64] */;
  %596 = @func_6553(%583) /* ty=Tensor[(7, 1, 11), float64] */;
  %597 = %584.0;
  %598 = %587.0;
  %599 = %588.0;
  %600 = @func_10413(%591, %592) /* ty=Tensor[(15, 3, 14), float64] */;
  (%593, %594, %var_11172, %595, %596, meta[relay.Constant][41] /* ty=Tensor[(77), float64] */, %597, %598, %var_11223, %599, %600, %var_11286)
}

def @func_14079(%var_14063: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(2178), int8], Tensor[(14, 15, 16), float64]) {
  %601 = @func_12511() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %602 = %601.0;
  %603 = cast(%602, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %604 = cast(%var_14063, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %605 = reshape(%603, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float64] */;
  %606 = reshape(%604, newshape=[2178]) /* ty=Tensor[(2178), int8] */;
  %607 = @func_7847(%605, %606) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), bool], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(450, 2), int16], Tensor[(2178), int8], Tensor[(14, 15, 16), float32], Tensor[(528), float64], Tensor[(60), int32], Tensor[(3, 7, 6), int32], Tensor[(1, 200), int16], Tensor[(3, 7, 6), float64]) */;
  %608 = @func_10815() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(242), int8], Tensor[(900), int16], Tensor[(2178, 1), int8], Tensor[(320), float32], Tensor[(80, 4), float32], Tensor[(200), int16]) */;
  %609 = %607.0;
  %610 = %608.0;
  (%602, %609, %var_14063, %610)
}

def @func_7157() -> Tensor[(14, 15, 16), float64] {
  %611 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %611.0
}

def @func_7687() -> Tensor[(14, 15, 16), float64] {
  @func_5786() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_8098(%var_8088: Tensor[(242), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(1, 5, 12), int32], int32, Tensor[(60), int32], Tensor[(3, 300), int16], Tensor[(242), int8], Tensor[(320), float32], Tensor[(200), int16], Tensor[(900), int16]) {
  %612 = @func_8054() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %613 = cast(7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %614 = cast(meta[relay.Constant][42] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %615 = reshape(%613, newshape=[]) /* ty=int32 */;
  %616 = reshape(%614, newshape=[1, 5, 12]) /* ty=Tensor[(1, 5, 12), int32] */;
  %617 = @func_6015(%615, %616) /* ty=(Tensor[(1, 5, 12), int32],) */;
  %618 = cast(%var_8088, dtype="int8") /* ty=Tensor[(242), int8] */;
  %619 = cast(meta[relay.Constant][43] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %620 = cast(meta[relay.Constant][44] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %621 = cast(meta[relay.Constant][45] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %622 = reshape(%618, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), int8] */;
  %623 = reshape(%619, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %624 = reshape(%620, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %625 = reshape(%621, newshape=[3, 300]) /* ty=Tensor[(3, 300), int16] */;
  %626 = @func_4143(%622, %623, %624, %625) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */;
  %627 = %612.0;
  %628 = %617.0;
  %629 = %626.5;
  (%627, %628, 7 /* ty=int32 */, meta[relay.Constant][42] /* ty=Tensor[(60), int32] */, %629, %var_8088, meta[relay.Constant][43] /* ty=Tensor[(320), float32] */, meta[relay.Constant][44] /* ty=Tensor[(200), int16] */, meta[relay.Constant][45] /* ty=Tensor[(900), int16] */)
}

def @func_5929() -> Tensor[(14, 15, 16), float64] {
  %630 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %630.0
}

def @func_11738() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32]) {
  %631 = @func_9396() /* ty=Tensor[(14, 15, 16), float64] */;
  %632 = @func_7933() /* ty=Tensor[(14, 15, 16), float32] */;
  (%631, %632)
}

def @func_11955() -> Tensor[(14, 15, 16), float64] {
  %633 = @func_9971() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %633.0
}

def @func_10815() -> (Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(242), int8], Tensor[(900), int16], Tensor[(2178, 1), int8], Tensor[(320), float32], Tensor[(80, 4), float32], Tensor[(200), int16]) {
  %634 = @func_9587() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %635 = cast(meta[relay.Constant][46] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %636 = cast(meta[relay.Constant][47] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %637 = cast(meta[relay.Constant][48] /* ty=Tensor[(2178, 1), int8] */, dtype="int8") /* ty=Tensor[(2178, 1), int8] */;
  %638 = reshape(%635, newshape=[242]) /* ty=Tensor[(242), int8] */;
  %639 = reshape(%636, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %640 = reshape(%637, newshape=[2178]) /* ty=Tensor[(2178), int8] */;
  %641 = @func_6961(%638, %639, %640) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(200), int16], Tensor[(900), int16], Tensor[(2178), int8]) */;
  %642 = cast(meta[relay.Constant][46] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %643 = cast(meta[relay.Constant][49] /* ty=Tensor[(80, 4), float32] */, dtype="float32") /* ty=Tensor[(80, 4), float32] */;
  %644 = cast(meta[relay.Constant][50] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %645 = %641.4;
  %646 = cast(%645, dtype="int16") /* ty=Tensor[(900), int16] */;
  %647 = reshape(%642, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), int8] */;
  %648 = reshape(%643, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %649 = reshape(%644, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %650 = reshape(%646, newshape=[3, 300]) /* ty=Tensor[(3, 300), int16] */;
  %651 = @func_4143(%647, %648, %649, %650) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */;
  %652 = %634.0;
  %653 = %651.2;
  (%652, %645, meta[relay.Constant][46] /* ty=Tensor[(242), int8] */, meta[relay.Constant][47] /* ty=Tensor[(900), int16] */, meta[relay.Constant][48] /* ty=Tensor[(2178, 1), int8] */, %653, meta[relay.Constant][49] /* ty=Tensor[(80, 4), float32] */, meta[relay.Constant][50] /* ty=Tensor[(200), int16] */)
}

def @func_13151() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %654 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %655 = @func_12070() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32], Tensor[(14, 15, 16), float64]) */;
  %656 = %654.0;
  %657 = %655.3;
  %658 = @func_11955() /* ty=Tensor[(14, 15, 16), float64] */;
  %659 = @func_9396() /* ty=Tensor[(14, 15, 16), float64] */;
  (%656, %657, %658, %659)
}

def @func_15086(%var_15082: Tensor[(448), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 11, 5), float32], Tensor[(448), float32]) {
  %660 = @func_11075() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %661 = cast(%var_15082, dtype="float32") /* ty=Tensor[(448), float32] */;
  %662 = reshape(%661, newshape=[448]) /* ty=Tensor[(448), float32] */;
  %663 = @func_10529(%662) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(900), int16], Tensor[(448), float32], Tensor[(9, 11, 5), float32], Tensor[(14, 2, 16), float32], Tensor[(14, 15, 16), float64]) */;
  %664 = %660.0;
  %665 = %663.3;
  (%664, %665, %var_15082)
}

def @func_9587() -> (Tensor[(14, 15, 16), float64],) {
  %666 = @func_8788() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64], Tensor[(528), float64], Tensor[(900), int16], Tensor[(14, 15, 16), float64]) */;
  %667 = %666.0;
  (%667,)
}

def @func_13876() -> (Tensor[(8, 6, 11), float64],) {
  %668 = @func_8862() /* ty=(Tensor[(8, 6, 11), float64], Tensor[(14, 15, 16), float64]) */;
  %669 = %668.0;
  (%669,)
}

def @func_8380() -> Tensor[(14, 15, 16), float64] {
  %670 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %670.0
}

def @func_12129(%var_12118: Tensor[(15, 12, 3), uint8], %var_12119: Tensor[(15, 12, 3), uint8]) -> Tensor[(15, 12, 3), uint8] {
  %671 = cast(%var_12119, dtype="uint8") /* ty=Tensor[(15, 12, 3), uint8] */;
  %672 = shape_of(%var_12118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%var_12118, dtype="uint8") /* ty=Tensor[(15, 12, 3), uint8] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  maximum(%673, %674) /* ty=Tensor[(15, 12, 3), uint8] */
}

def @func_12447() -> Tensor[(14, 15, 16), float64] {
  %675 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %675.0
}

def @func_1266(%var_1257: Tensor[(9, 11, 5), float32], %var_1258: Tensor[(9, 11, 5), float32]) -> Tensor[(9, 11, 5), float32] {
  %676 = cast(%var_1258, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %677 = shape_of(%var_1257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%var_1257, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%678, %679) /* ty=Tensor[(9, 11, 5), float32] */
}

def @func_5099(%var_5072: Tensor[(14, 15, 16), float64]) -> (Tensor[(14, 15, 16), bool], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(14, 2, 16), bool], Tensor[(448), float32]) {
  %680 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %681 = %680.0;
  %682 = cast(%var_5072, dtype="bool") /* ty=Tensor[(14, 15, 16), bool] */;
  %683 = shape_of(%681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%681, dtype="bool") /* ty=Tensor[(14, 15, 16), bool] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %686 = cast(meta[relay.Constant][51] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %687 = reshape(%686, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %688 = @func_4242(%687) /* ty=(Tensor[(15, 9, 12), int64], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(3, 7, 6), bool], Tensor[(126), float32]) */;
  %689 = cast(meta[relay.Constant][52] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %690 = cast(meta[relay.Constant][52] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %691 = reshape(%689, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %692 = reshape(%690, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %693 = @func_471(%691, %692) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(14, 2, 16), bool]) */;
  %694 = greater(%684, %685) /* ty=Tensor[(14, 15, 16), bool] */;
  %695 = %688.1;
  %696 = %693.1;
  (%694, %695, meta[relay.Constant][51] /* ty=Tensor[(200), int16] */, %696, meta[relay.Constant][52] /* ty=Tensor[(448), float32] */)
}

def @func_14992() -> (Tensor[(14, 15, 16), float64],) {
  %697 = @func_10301() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %698 = %697.0;
  (%698,)
}

def @func_15261() -> (Tensor[(14, 15, 16), float64],) {
  %699 = @func_13810() /* ty=Tensor[(14, 15, 16), float64] */;
  (%699,)
}

def @func_4143(%var_4096: Tensor[(2, 11, 11), int8], %var_4103: Tensor[(320), float32], %var_4104: Tensor[(200), int16], %var_4114: Tensor[(3, 300), int16]) -> (Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) {
  %700 = cast(%var_4096, dtype="int8") /* ty=Tensor[(2, 11, 11), int8] */;
  %701 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(2, 11, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(meta[relay.Constant][53] /* ty=Tensor[(2, 11, 11), int8] */, dtype="int8") /* ty=Tensor[(2, 11, 11), int8] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %704 = cast(%var_4103, dtype="float32") /* ty=Tensor[(320), float32] */;
  %705 = cast(%var_4104, dtype="int16") /* ty=Tensor[(200), int16] */;
  %706 = reshape(%704, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float32] */;
  %707 = reshape(%705, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %708 = @func_670(%706, %707) /* ty=(Tensor[(16, 4, 5), float32], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(5, 4, 10), bool]) */;
  %709 = cast(%var_4114, dtype="int16") /* ty=Tensor[(3, 300), int16] */;
  %710 = cast(%var_4114, dtype="int16") /* ty=Tensor[(3, 300), int16] */;
  %711 = reshape(%709, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %712 = reshape(%710, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %713 = cast(meta[relay.Constant][54] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %714 = @func_2088(%711, %712) /* ty=Tensor[(9, 10, 10), bool] */;
  %715 = cast(%714, dtype="int16") /* ty=Tensor[(9, 10, 10), int16] */;
  %716 = reshape(%713, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %717 = reshape(%715, newshape=[18, 50]) /* ty=Tensor[(18, 50), int16] */;
  %718 = @func_3286(%716, %717) /* ty=(Tensor[(3, 7, 6), bool], Tensor[(126), float32], Tensor[(2, 12, 14), float64], Tensor[(9, 10, 10), bool], Tensor[(18, 50), int16]) */;
  %719 = %708.0;
  %720 = cast(%719, dtype="float32") /* ty=Tensor[(16, 4, 5), float32] */;
  %721 = cast(%var_4104, dtype="int16") /* ty=Tensor[(200), int16] */;
  %722 = reshape(%720, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float32] */;
  %723 = reshape(%721, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %724 = @func_670(%722, %723) /* ty=(Tensor[(16, 4, 5), float32], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(5, 4, 10), bool]) */;
  %725 = subtract(%702, %703) /* ty=Tensor[(2, 11, 11), int8] */;
  %726 = %718.3;
  %727 = %724.2;
  (%725, %719, %var_4103, %var_4104, %714, %var_4114, %726, meta[relay.Constant][54] /* ty=Tensor[(126), float32] */, %727)
}

def @func_12593(%var_12565: Tensor[(60, 14), float64], %var_12566: Tensor[(320), float32], %var_12567: Tensor[(630), int32], %var_12573: Tensor[(480), float64]) -> (Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(60, 14), float64], Tensor[(320), float32], Tensor[(630), int32], Tensor[(5, 16, 6), float64], Tensor[(480), float64]) {
  %728 = cast(%var_12565, dtype="float64") /* ty=Tensor[(60, 14), float64] */;
  %729 = cast(%var_12566, dtype="float32") /* ty=Tensor[(320), float32] */;
  %730 = cast(%var_12567, dtype="int32") /* ty=Tensor[(630), int32] */;
  %731 = reshape(%728, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %732 = reshape(%729, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %733 = reshape(%730, newshape=[630]) /* ty=Tensor[(630), int32] */;
  %734 = @func_11296(%731, %732, %733) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 14, 12), float64], Tensor[(840), float64], Tensor[(14, 15, 16), float64], Tensor[(7, 1, 11), float64], Tensor[(77), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(320), float32], Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32]) */;
  %735 = cast(%var_12573, dtype="float64") /* ty=Tensor[(480), float64] */;
  %736 = reshape(%735, newshape=[5, 16, 6]) /* ty=Tensor[(5, 16, 6), float64] */;
  %737 = @func_12274() /* ty=Tensor[(14, 15, 16), float64] */;
  %738 = %734.10;
  %739 = @func_4072(%736) /* ty=Tensor[(5, 16, 6), float64] */;
  (%737, %738, %var_12565, %var_12566, %var_12567, %739, %var_12573)
}

def @func_9316() -> (Tensor[(14, 15, 16), float64],) {
  %740 = @func_8380() /* ty=Tensor[(14, 15, 16), float64] */;
  (%740,)
}

def @func_10865() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %741 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %742 = @func_8862() /* ty=(Tensor[(8, 6, 11), float64], Tensor[(14, 15, 16), float64]) */;
  %743 = %741.0;
  %744 = %742.1;
  (%743, %744)
}

def @func_8135() -> Tensor[(14, 15, 16), float64] {
  @func_7687() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_7847(%var_7734: Tensor[(14, 15, 16), float64], %var_7770: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), bool], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(450, 2), int16], Tensor[(2178), int8], Tensor[(14, 15, 16), float32], Tensor[(528), float64], Tensor[(60), int32], Tensor[(3, 7, 6), int32], Tensor[(1, 200), int16], Tensor[(3, 7, 6), float64]) {
  %745 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %746 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %747 = @func_7687() /* ty=Tensor[(14, 15, 16), float64] */;
  %748 = cast(%var_7734, dtype="bool") /* ty=Tensor[(14, 15, 16), bool] */;
  %749 = shape_of(%747, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%747, dtype="bool") /* ty=Tensor[(14, 15, 16), bool] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %752 = cast(meta[relay.Constant][55] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %753 = cast(meta[relay.Constant][56] /* ty=Tensor[(450, 2), int16] */, dtype="int16") /* ty=Tensor[(450, 2), int16] */;
  %754 = cast(%var_7770, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %755 = reshape(%752, newshape=[242]) /* ty=Tensor[(242), int8] */;
  %756 = reshape(%753, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %757 = reshape(%754, newshape=[2178]) /* ty=Tensor[(2178), int8] */;
  %758 = @func_6961(%755, %756, %757) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(200), int16], Tensor[(900), int16], Tensor[(2178), int8]) */;
  %759 = cast(meta[relay.Constant][57] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %760 = cast(meta[relay.Constant][58] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %761 = reshape(%759, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %762 = reshape(%760, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %763 = @func_6495(%761, %762) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(9, 10, 10), bool], Tensor[(528), float64], Tensor[(900), int16], Tensor[(1, 5, 12), int32], int32, Tensor[(60), int32]) */;
  %764 = cast(meta[relay.Constant][59] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %765 = reshape(%764, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %766 = @func_940(%765) /* ty=Tensor[(3, 7, 6), bool] */;
  %767 = cast(%766, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %768 = asinh(%767) /* ty=Tensor[(3, 7, 6), float32] */;
  %769 = cast(meta[relay.Constant][59] /* ty=Tensor[(126), float32] */, dtype="int32") /* ty=Tensor[(126), int32] */;
  %770 = shape_of(%768, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(%768, dtype="int32") /* ty=Tensor[(3, 7, 6), int32] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %773 = @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */;
  %774 = cast(meta[relay.Constant][59] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %775 = shape_of(%768, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%768, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %778 = power(%776, %777) /* ty=Tensor[(3, 7, 6), float32] */;
  %779 = cast(%778, dtype="float64") /* ty=Tensor[(3, 7, 6), float64] */;
  %780 = %745.0;
  %781 = %746.0;
  %782 = equal(%750, %751) /* ty=Tensor[(14, 15, 16), bool] */;
  %783 = %758.1;
  %784 = %763.0;
  %785 = left_shift(%771, %772) /* ty=Tensor[(3, 7, 6), int32] */;
  %786 = %773.2;
  %787 = sqrt(%779) /* ty=Tensor[(3, 7, 6), float64] */;
  (%780, %781, %782, %783, meta[relay.Constant][55] /* ty=Tensor[(242), int8] */, meta[relay.Constant][56] /* ty=Tensor[(450, 2), int16] */, %var_7770, %784, meta[relay.Constant][57] /* ty=Tensor[(528), float64] */, meta[relay.Constant][58] /* ty=Tensor[(60), int32] */, %785, %786, %787)
}

def @func_12998(%var_12956: Tensor[(450, 2), int16], %var_12969: Tensor[(495), float32], %var_12980: Tensor[(80, 4), float32]) -> (Tensor[(2, 11, 11), int8], Tensor[(242), int8], Tensor[(200), int16], Tensor[(450, 2), int16], Tensor[(14, 15, 16), float64], Tensor[(9, 11, 5), float32], Tensor[(495), float32], Tensor[(6, 320), bool], Tensor[(80, 4), uint16], Tensor[(14, 15, 16), float64], Tensor[(80, 4), bool]) {
  %788 = cast(meta[relay.Constant][60] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %789 = @func_10815() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(242), int8], Tensor[(900), int16], Tensor[(2178, 1), int8], Tensor[(320), float32], Tensor[(80, 4), float32], Tensor[(200), int16]) */;
  %790 = %789.6;
  %791 = cast(%790, dtype="float32") /* ty=Tensor[(80, 4), float32] */;
  %792 = cast(meta[relay.Constant][61] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %793 = cast(%var_12956, dtype="int16") /* ty=Tensor[(450, 2), int16] */;
  %794 = reshape(%788, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), int8] */;
  %795 = reshape(%791, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %796 = reshape(%792, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %797 = reshape(%793, newshape=[3, 300]) /* ty=Tensor[(3, 300), int16] */;
  %798 = @func_4143(%794, %795, %796, %797) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */;
  %799 = @func_9316() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %800 = cast(%var_12969, dtype="float32") /* ty=Tensor[(495), float32] */;
  %801 = cast(%var_12969, dtype="float32") /* ty=Tensor[(495), float32] */;
  %802 = reshape(%800, newshape=[9, 11, 5]) /* ty=Tensor[(9, 11, 5), float32] */;
  %803 = reshape(%801, newshape=[9, 11, 5]) /* ty=Tensor[(9, 11, 5), float32] */;
  %804 = cast(%790, dtype="float32") /* ty=Tensor[(80, 4), float32] */;
  %805 = erf(%804) /* ty=Tensor[(80, 4), float32] */;
  %806 = cast(%805, dtype="float32") /* ty=Tensor[(80, 4), float32] */;
  %807 = cast(meta[relay.Constant][61] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %808 = reshape(%806, newshape=[1, 320]) /* ty=Tensor[(1, 320), float32] */;
  %809 = reshape(%807, newshape=[100, 2]) /* ty=Tensor[(100, 2), int16] */;
  %810 = @func_5293(%808, %809) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(200), int16], Tensor[(100, 2), int16], Tensor[(6, 320), bool], Tensor[(5, 12, 5), bool], Tensor[(300), bool]) */;
  %811 = cast(%var_12980, dtype="uint16") /* ty=Tensor[(80, 4), uint16] */;
  %812 = shape_of(%805, dtype="int32") /* ty=Tensor[(2), int32] */;
  %813 = cast(%805, dtype="uint16") /* ty=Tensor[(80, 4), uint16] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %815 = @func_8123() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %816 = cast(%790, dtype="float32") /* ty=Tensor[(80, 4), float32] */;
  %817 = sinh(%816) /* ty=Tensor[(80, 4), float32] */;
  %818 = cast(%817, dtype="bool") /* ty=Tensor[(80, 4), bool] */;
  %819 = shape_of(%805, dtype="int32") /* ty=Tensor[(2), int32] */;
  %820 = cast(%805, dtype="bool") /* ty=Tensor[(80, 4), bool] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %822 = %798.0;
  %823 = %799.0;
  %824 = @func_1266(%802, %803) /* ty=Tensor[(9, 11, 5), float32] */;
  %825 = %810.3;
  %826 = bitwise_xor(%813, %814) /* ty=Tensor[(80, 4), uint16] */;
  %827 = %815.0;
  %828 = less_equal(%820, %821) /* ty=Tensor[(80, 4), bool] */;
  (%822, meta[relay.Constant][60] /* ty=Tensor[(242), int8] */, meta[relay.Constant][61] /* ty=Tensor[(200), int16] */, %var_12956, %823, %824, %var_12969, %825, %826, %827, %828)
}

def @func_7027() -> (Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) {
  %829 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %830 = %829.0;
  %831 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %832 = %831.0;
  %833 = cast(%832, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %834 = shape_of(%830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %835 = cast(%830, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %837 = cast(meta[relay.Constant][62] /* ty=Tensor[(1, 200), int16] */, dtype="int16") /* ty=Tensor[(1, 200), int16] */;
  %838 = cast(meta[relay.Constant][62] /* ty=Tensor[(1, 200), int16] */, dtype="int16") /* ty=Tensor[(1, 200), int16] */;
  %839 = reshape(%837, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
  %840 = reshape(%838, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
  %841 = subtract(%835, %836) /* ty=Tensor[(14, 15, 16), float32] */;
  %842 = @func_112(%839, %840) /* ty=Tensor[(5, 4, 10), bool] */;
  (%841, %842, meta[relay.Constant][62] /* ty=Tensor[(1, 200), int16] */)
}

def @func_10895() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %843 = @func_8123() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %844 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
  %845 = %843.0;
  (%844, %845)
}

def @func_9179(%var_9158: Tensor[(12), int32], %var_9159: Tensor[(48), int32], %var_9166: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float32], Tensor[(900), int16], Tensor[(242), int8], Tensor[(9, 10, 10), int32], Tensor[(12), int32], Tensor[(48), int32], Tensor[(2178), uint64]) {
  %846 = cast(meta[relay.Constant][63] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %847 = cast(meta[relay.Constant][64] /* ty=Tensor[(2178), int8] */, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %848 = reshape(%846, newshape=[11, 22]) /* ty=Tensor[(11, 22), int8] */;
  %849 = reshape(%847, newshape=[22, 99]) /* ty=Tensor[(22, 99), int8] */;
  %850 = @func_5861(%848, %849) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), float32], Tensor[(11, 22), int8], Tensor[(100, 2), int16], Tensor[(900), int16], Tensor[(22, 99), int8]) */;
  %851 = cast(%var_9158, dtype="int32") /* ty=Tensor[(12), int32] */;
  %852 = cast(%var_9159, dtype="int32") /* ty=Tensor[(48), int32] */;
  %853 = %850.5;
  %854 = cast(%853, dtype="int16") /* ty=Tensor[(900), int16] */;
  %855 = cast(%853, dtype="bool") /* ty=Tensor[(900), bool] */;
  %856 = reshape(%851, newshape=[4, 3, 1]) /* ty=Tensor[(4, 3, 1), int32] */;
  %857 = reshape(%852, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), int32] */;
  %858 = reshape(%854, newshape=[90, 10]) /* ty=Tensor[(90, 10), int16] */;
  %859 = reshape(%855, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), bool] */;
  %860 = @func_3394(%856, %857, %858, %859) /* ty=(Tensor[(4, 3, 4), bool], Tensor[(90, 10), int16], Tensor[(9, 10, 10), int32]) */;
  %861 = cast(%var_9166, dtype="uint64") /* ty=Tensor[(2178), uint64] */;
  %862 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(2178), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %863 = cast(meta[relay.Constant][64] /* ty=Tensor[(2178), int8] */, dtype="uint64") /* ty=Tensor[(2178), uint64] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %865 = @func_7933() /* ty=Tensor[(14, 15, 16), float32] */;
  %866 = %860.2;
  %867 = right_shift(%863, %864) /* ty=Tensor[(2178), uint64] */;
  (%865, %853, meta[relay.Constant][63] /* ty=Tensor[(242), int8] */, %866, %var_9158, %var_9159, %867)
}

def @func_10529(%var_10482: Tensor[(448), float32]) -> (Tensor[(14, 15, 16), float32], Tensor[(900), int16], Tensor[(448), float32], Tensor[(9, 11, 5), float32], Tensor[(14, 2, 16), float32], Tensor[(14, 15, 16), float64]) {
  %868 = @func_8054() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %869 = %868.0;
  %870 = cast(%869, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %871 = cast(meta[relay.Constant][65] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %872 = reshape(%871, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %873 = @func_2561(%872) /* ty=(Tensor[(13, 16, 2), bool], Tensor[(9, 11, 5), float32], Tensor[(495), float32], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(14, 2, 16), float32], Tensor[(448), float32]) */;
  %874 = %873.1;
  %875 = cast(%874, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
  %876 = cast(%var_10482, dtype="float32") /* ty=Tensor[(448), float32] */;
  %877 = cast(%var_10482, dtype="float32") /* ty=Tensor[(448), float32] */;
  %878 = reshape(%876, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %879 = reshape(%877, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %880 = @func_471(%878, %879) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(14, 2, 16), bool]) */;
  %881 = %880.0;
  %882 = cast(%881, dtype="float32") /* ty=Tensor[(14, 2, 16), float32] */;
  %883 = @func_8123() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %884 = sin(%870) /* ty=Tensor[(14, 15, 16), float32] */;
  %885 = rsqrt(%875) /* ty=Tensor[(9, 11, 5), float32] */;
  %886 = asinh(%882) /* ty=Tensor[(14, 2, 16), float32] */;
  %887 = %883.0;
  (%884, meta[relay.Constant][65] /* ty=Tensor[(900), int16] */, %var_10482, %885, %886, %887)
}

def @func_112(%var_97: Tensor[(5, 4, 10), int16], %var_98: Tensor[(5, 4, 10), int16]) -> Tensor[(5, 4, 10), bool] {
  %888 = cast(%var_98, dtype="bool") /* ty=Tensor[(5, 4, 10), bool] */;
  %889 = shape_of(%var_97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %890 = cast(%var_97, dtype="bool") /* ty=Tensor[(5, 4, 10), bool] */;
  %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%890, %891) /* ty=Tensor[(5, 4, 10), bool] */
}

def @func_16142() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %892 = @func_15958() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %893 = @func_14656() /* ty=Tensor[(14, 15, 16), float64] */;
  %894 = %892.0;
  %895 = @func_7157() /* ty=Tensor[(14, 15, 16), float64] */;
  (%893, %894, %895)
}

def @func_5293(%var_5238: Tensor[(1, 320), float32], %var_5239: Tensor[(100, 2), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(200), int16], Tensor[(100, 2), int16], Tensor[(6, 320), bool], Tensor[(5, 12, 5), bool], Tensor[(300), bool]) {
  %896 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %897 = cast(%var_5238, dtype="float32") /* ty=Tensor[(1, 320), float32] */;
  %898 = cast(%var_5239, dtype="int16") /* ty=Tensor[(100, 2), int16] */;
  %899 = reshape(%897, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float32] */;
  %900 = reshape(%898, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %901 = @func_670(%899, %900) /* ty=(Tensor[(16, 4, 5), float32], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(5, 4, 10), bool]) */;
  %902 = cast(%var_5238, dtype="bool") /* ty=Tensor[(1, 320), bool] */;
  %903 = cast(meta[relay.Constant][66] /* ty=Tensor[(6, 320), float32] */, dtype="bool") /* ty=Tensor[(6, 320), bool] */;
  %904 = cast(meta[relay.Constant][67] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %905 = reshape(%904, newshape=[5, 12, 5]) /* ty=Tensor[(5, 12, 5), bool] */;
  %906 = %896.0;
  %907 = %901.2;
  %908 = less_equal(%902, %903) /* ty=Tensor[(6, 320), bool] */;
  %909 = @func_2204(%905) /* ty=Tensor[(5, 12, 5), bool] */;
  (%906, %907, %var_5239, %908, %909, meta[relay.Constant][67] /* ty=Tensor[(300), bool] */)
}

def @func_9910() -> Tensor[(14, 15, 16), float64] {
  @func_7687() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_5648() -> Tensor[(14, 15, 16), float64] {
  %910 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %911 = %910.0;
  %912 = cast(%911, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  sigmoid(%912) /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_9396() -> Tensor[(14, 15, 16), float64] {
  @func_9337() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_16226() -> (Tensor[(14, 15, 16), float64],) {
  %913 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %914 = %913.0;
  (%914,)
}

def @func_5611(%var_5585: Tensor[(7, 8, 1), uint8], %var_5586: Tensor[(7, 8, 13), uint8]) -> Tensor[(7, 8, 13), int16] {
  %915 = cast(%var_5585, dtype="uint8") /* ty=Tensor[(7, 8, 1), uint8] */;
  %916 = cast(%var_5586, dtype="uint8") /* ty=Tensor[(7, 8, 13), uint8] */;
  %917 = subtract(%915, %916) /* ty=Tensor[(7, 8, 13), uint8] */;
  %918 = cast(%917, dtype="int16") /* ty=Tensor[(7, 8, 13), int16] */;
  %919 = cast(%var_5585, dtype="int16") /* ty=Tensor[(7, 8, 1), int16] */;
  add(%918, %919) /* ty=Tensor[(7, 8, 13), int16] */
}

def @func_9281() -> (Tensor[(14, 15, 16), float64],) {
  %920 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
  (%920,)
}

def @func_13658() -> (Tensor[(14, 15, 16), float64],) {
  %921 = @func_10815() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(242), int8], Tensor[(900), int16], Tensor[(2178, 1), int8], Tensor[(320), float32], Tensor[(80, 4), float32], Tensor[(200), int16]) */;
  %922 = %921.0;
  (%922,)
}

def @func_13992() -> (Tensor[(14, 15, 16), float64],) {
  %923 = @func_7157() /* ty=Tensor[(14, 15, 16), float64] */;
  (%923,)
}

def @func_13724() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %924 = @func_10140() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16]) */;
  %925 = @func_8054() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %926 = %924.1;
  %927 = %925.0;
  (%926, %927)
}

def @func_9386() -> (Tensor[(14, 15, 16), float64],) {
  %928 = @func_9316() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %929 = %928.0;
  (%929,)
}

def @func_5578() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %930 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %931 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %932 = %930.0;
  %933 = %931.0;
  (%932, %933)
}

def @func_16482(%var_16468: Tensor[(9, 8, 14), bool]) -> (Tensor[(9, 8, 14), bool], Tensor[(14, 15, 16), float64], Tensor[(9, 8, 14), int64]) {
  %934 = cast(%var_16468, dtype="bool") /* ty=Tensor[(9, 8, 14), bool] */;
  %935 = shape_of(meta[relay.Constant][68] /* ty=Tensor[(9, 8, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %936 = cast(meta[relay.Constant][68] /* ty=Tensor[(9, 8, 14), bool] */, dtype="bool") /* ty=Tensor[(9, 8, 14), bool] */;
  %937 = dyn.reshape(%934, %935, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %938 = @func_14530() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %939 = cast(meta[relay.Constant][69] /* ty=Tensor[(9, 8, 14), bool] */, dtype="int64") /* ty=Tensor[(9, 8, 14), int64] */;
  %940 = shape_of(%var_16468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %941 = cast(%var_16468, dtype="int64") /* ty=Tensor[(9, 8, 14), int64] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %943 = logical_or(%936, %937) /* ty=Tensor[(9, 8, 14), bool] */;
  %944 = %938.0;
  %945 = logical_xor(%941, %942) /* ty=Tensor[(9, 8, 14), int64] */;
  (%943, %944, %945)
}

def @func_2812(%var_2786: Tensor[(8, 6, 11), float64], %var_2792: Tensor[(8, 6, 11), float64], %var_2809: Tensor[(900), int16]) -> (Tensor[(8, 6, 11), float64], Tensor[(8, 6, 11), int8], Tensor[(9, 10, 10), bool], Tensor[(900), int16]) {
  %946 = cast(%var_2786, dtype="float64") /* ty=Tensor[(8, 6, 11), float64] */;
  %947 = cosh(%946) /* ty=Tensor[(8, 6, 11), float64] */;
  %948 = cast(%var_2792, dtype="float64") /* ty=Tensor[(8, 6, 11), float64] */;
  %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%947, dtype="float64") /* ty=Tensor[(8, 6, 11), float64] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %952 = cast(%var_2792, dtype="int8") /* ty=Tensor[(8, 6, 11), int8] */;
  %953 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%947, dtype="int8") /* ty=Tensor[(8, 6, 11), int8] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %956 = cast(%var_2809, dtype="int16") /* ty=Tensor[(900), int16] */;
  %957 = cast(%var_2809, dtype="int16") /* ty=Tensor[(900), int16] */;
  %958 = reshape(%956, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %959 = reshape(%957, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %960 = floor_divide(%950, %951) /* ty=Tensor[(8, 6, 11), float64] */;
  %961 = bitwise_and(%954, %955) /* ty=Tensor[(8, 6, 11), int8] */;
  %962 = @func_2088(%958, %959) /* ty=Tensor[(9, 10, 10), bool] */;
  (%960, %961, %962, %var_2809)
}

def @main(%var_16511: uint8) -> (Tensor[(300), bool], Tensor[(495), float32], uint8, Tensor[(15, 9, 8), int16], Tensor[(1, 1080), float64], Tensor[(200), int16], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(2178), int8], Tensor[(112, 2), float64]) {
  %963 = @func_14565() /* ty=(Tensor[(300), bool],) */;
  %964 = cast(%var_16511, dtype="uint8") /* ty=uint8 */;
  %965 = cast(meta[relay.Constant][70] /* ty=Tensor[(112, 2), uint8] */, dtype="uint8") /* ty=Tensor[(112, 2), uint8] */;
  %966 = reshape(%964, newshape=[]) /* ty=uint8 */;
  %967 = reshape(%965, newshape=[7, 16, 2]) /* ty=Tensor[(7, 16, 2), uint8] */;
  %968 = @func_5724(%966, %967) /* ty=(Tensor[(7, 16, 2), bool], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(495), float32]) */;
  %969 = cast(meta[relay.Constant][71] /* ty=Tensor[(1, 1080), float64] */, dtype="float64") /* ty=Tensor[(1, 1080), float64] */;
  %970 = cast(meta[relay.Constant][71] /* ty=Tensor[(1, 1080), float64] */, dtype="float64") /* ty=Tensor[(1, 1080), float64] */;
  %971 = cast(meta[relay.Constant][72] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %972 = reshape(%969, newshape=[15, 9, 8]) /* ty=Tensor[(15, 9, 8), float64] */;
  %973 = reshape(%970, newshape=[15, 9, 8]) /* ty=Tensor[(15, 9, 8), float64] */;
  %974 = reshape(%971, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %975 = @func_15768(%972, %973, %974) /* ty=(Tensor[(15, 9, 8), float64], Tensor[(15, 9, 8), float64], Tensor[(14, 15, 16), float64], Tensor[(15, 9, 8), int16], Tensor[(3, 7, 6), bool], Tensor[(200), int16]) */;
  %976 = cast(meta[relay.Constant][73] /* ty=Tensor[(2178), int8] */, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %977 = reshape(%976, newshape=[2178]) /* ty=Tensor[(2178), int8] */;
  %978 = @func_10054(%977) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), int32], Tensor[(12), int32], Tensor[(2, 24), int32], Tensor[(2178), int8]) */;
  %979 = cast(meta[relay.Constant][70] /* ty=Tensor[(112, 2), uint8] */, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
  %980 = %963.0;
  %981 = %968.4;
  %982 = %975.3;
  %983 = @func_8380() /* ty=Tensor[(14, 15, 16), float64] */;
  %984 = %978.0;
  %985 = asinh(%979) /* ty=Tensor[(112, 2), float64] */;
  (%980, %981, %var_16511, %982, meta[relay.Constant][71] /* ty=Tensor[(1, 1080), float64] */, meta[relay.Constant][72] /* ty=Tensor[(200), int16] */, %983, %984, meta[relay.Constant][73] /* ty=Tensor[(2178), int8] */, %985)
}

def @func_5122(%var_5106: Tensor[(13, 13, 14), int64], %var_5107: Tensor[(13, 13, 14), int64], %var_5118: Tensor[(200), int16]) -> (Tensor[(13, 13, 14), bool], Tensor[(200), int16], Tensor[(200), int16]) {
  %986 = cast(%var_5107, dtype="bool") /* ty=Tensor[(13, 13, 14), bool] */;
  %987 = shape_of(%var_5106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %988 = cast(%var_5106, dtype="bool") /* ty=Tensor[(13, 13, 14), bool] */;
  %989 = dyn.reshape(%986, %987, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %990 = cast(%var_5118, dtype="int16") /* ty=Tensor[(200), int16] */;
  %991 = reshape(%990, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %992 = @func_4242(%991) /* ty=(Tensor[(15, 9, 12), int64], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(3, 7, 6), bool], Tensor[(126), float32]) */;
  %993 = greater(%988, %989) /* ty=Tensor[(13, 13, 14), bool] */;
  %994 = %992.2;
  (%993, %994, %var_5118)
}

def @func_14733(%var_14719: Tensor[(14, 11, 14), uint16], %var_14720: Tensor[(14, 11, 14), uint16]) -> Tensor[(14, 11, 14), float64] {
  %995 = cast(%var_14720, dtype="uint16") /* ty=Tensor[(14, 11, 14), uint16] */;
  %996 = shape_of(%var_14719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %997 = cast(%var_14719, dtype="uint16") /* ty=Tensor[(14, 11, 14), uint16] */;
  %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %999 = multiply(%997, %998) /* ty=Tensor[(14, 11, 14), uint16] */;
  %1000 = cast(%var_14719, dtype="float64") /* ty=Tensor[(14, 11, 14), float64] */;
  %1001 = shape_of(%999, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1002 = cast(%999, dtype="float64") /* ty=Tensor[(14, 11, 14), float64] */;
  %1003 = dyn.reshape(%1000, %1001, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%1002, %1003) /* ty=Tensor[(14, 11, 14), float64] */
}

def @func_14381() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %1004 = @func_10140() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16]) */;
  %1005 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
  %1006 = %1004.0;
  (%1005, %1006)
}

def @func_16287() -> (Tensor[(14, 15, 16), float64],) {
  %1007 = @func_9872() /* ty=Tensor[(14, 15, 16), float64] */;
  (%1007,)
}

def @func_2204(%var_2197: Tensor[(5, 12, 5), bool]) -> Tensor[(5, 12, 5), bool] {
  %1008 = cast(meta[relay.Constant][74] /* ty=Tensor[(5, 12, 5), bool] */, dtype="bool") /* ty=Tensor[(5, 12, 5), bool] */;
  %1009 = shape_of(%var_2197, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1010 = cast(%var_2197, dtype="bool") /* ty=Tensor[(5, 12, 5), bool] */;
  %1011 = dyn.reshape(%1008, %1009, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1010, %1011) /* ty=Tensor[(5, 12, 5), bool] */
}

def @func_8876() -> (Tensor[(14, 15, 16), float64],) {
  %1012 = @func_8054() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1013 = %1012.0;
  (%1013,)
}

def @func_670(%var_639: Tensor[(16, 4, 5), float32], %var_655: Tensor[(200), int16]) -> (Tensor[(16, 4, 5), float32], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(5, 4, 10), bool]) {
  %1014 = cast(%var_639, dtype="float32") /* ty=Tensor[(16, 4, 5), float32] */;
  %1015 = cast(%var_655, dtype="int16") /* ty=Tensor[(200), int16] */;
  %1016 = cast(%var_655, dtype="int16") /* ty=Tensor[(200), int16] */;
  %1017 = reshape(%1015, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
  %1018 = reshape(%1016, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
  %1019 = cast(%var_655, dtype="int16") /* ty=Tensor[(200), int16] */;
  %1020 = @func_112(%1017, %1018) /* ty=Tensor[(5, 4, 10), bool] */;
  %1021 = cast(%1020, dtype="int16") /* ty=Tensor[(5, 4, 10), int16] */;
  %1022 = reshape(%1019, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
  %1023 = reshape(%1021, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
  %1024 = sigmoid(%1014) /* ty=Tensor[(16, 4, 5), float32] */;
  %1025 = @func_112(%1022, %1023) /* ty=Tensor[(5, 4, 10), bool] */;
  (%1024, %1020, %var_655, %1025)
}

def @func_11589() -> Tensor[(14, 15, 16), float64] {
  %1026 = @func_8788() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64], Tensor[(528), float64], Tensor[(900), int16], Tensor[(14, 15, 16), float64]) */;
  %1026.4
}

def @func_7540() -> (Tensor[(14, 15, 16), float64],) {
  %1027 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %1028 = %1027.0;
  (%1028,)
}

def @func_15663() -> (Tensor[(14, 15, 16), float64],) {
  %1029 = @func_12367() /* ty=Tensor[(14, 15, 16), float64] */;
  %1030 = cast(%1029, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %1031 = log10(%1030) /* ty=Tensor[(14, 15, 16), float64] */;
  (%1031,)
}

def @func_15641() -> (Tensor[(14, 15, 16), float64],) {
  %1032 = @func_10375() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1033 = %1032.0;
  (%1033,)
}

def @func_9551(%var_9543: Tensor[(320), float32]) -> (Tensor[(14, 15, 16), float32], Tensor[(5, 12, 5), bool], Tensor[(320), float32], Tensor[(200), int16]) {
  %1034 = cast(%var_9543, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1035 = cast(meta[relay.Constant][75] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %1036 = reshape(%1034, newshape=[1, 320]) /* ty=Tensor[(1, 320), float32] */;
  %1037 = reshape(%1035, newshape=[100, 2]) /* ty=Tensor[(100, 2), int16] */;
  %1038 = @func_5293(%1036, %1037) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(200), int16], Tensor[(100, 2), int16], Tensor[(6, 320), bool], Tensor[(5, 12, 5), bool], Tensor[(300), bool]) */;
  %1039 = @func_8315() /* ty=Tensor[(14, 15, 16), float32] */;
  %1040 = %1038.4;
  (%1039, %1040, %var_9543, meta[relay.Constant][75] /* ty=Tensor[(200), int16] */)
}

def @func_8862() -> (Tensor[(8, 6, 11), float64], Tensor[(14, 15, 16), float64]) {
  %1041 = @func_8788() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64], Tensor[(528), float64], Tensor[(900), int16], Tensor[(14, 15, 16), float64]) */;
  %1042 = %1041.1;
  %1043 = @func_8181() /* ty=Tensor[(14, 15, 16), float64] */;
  (%1042, %1043)
}

def @func_5347() -> (Tensor[(14, 15, 16), float64],) {
  %1044 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1045 = %1044.0;
  (%1045,)
}

def @func_11688(%var_11664: Tensor[(12, 16, 8), float32]) -> (Tensor[(12, 16, 8), float32],) {
  %1046 = cast(%var_11664, dtype="float32") /* ty=Tensor[(12, 16, 8), float32] */;
  %1047 = tan(%1046) /* ty=Tensor[(12, 16, 8), float32] */;
  (%1047,)
}

def @func_13630(%var_13624: Tensor[(126), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(3, 7, 6), bool], Tensor[(126), float32]) {
  %1048 = @func_9316() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1049 = @func_7540() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1050 = cast(%var_13624, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1051 = reshape(%1050, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %1052 = %1048.0;
  %1053 = %1049.0;
  %1054 = @func_940(%1051) /* ty=Tensor[(3, 7, 6), bool] */;
  (%1052, %1053, %1054, %var_13624)
}

def @func_13810() -> Tensor[(14, 15, 16), float64] {
  %1055 = @func_11841() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %1055.3
}

def @func_9943() -> Tensor[(14, 15, 16), float32] {
  @func_7933() /* ty=Tensor[(14, 15, 16), float32] */
}

def @func_10140() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16]) {
  %1056 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1057 = @func_9587() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1058 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1059 = @func_8788() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64], Tensor[(528), float64], Tensor[(900), int16], Tensor[(14, 15, 16), float64]) */;
  %1060 = @func_5648() /* ty=Tensor[(14, 15, 16), float64] */;
  %1061 = @func_5786() /* ty=Tensor[(14, 15, 16), float64] */;
  %1062 = %1056.0;
  %1063 = %1057.0;
  %1064 = %1058.0;
  %1065 = %1059.3;
  (%1060, %1061, %1062, %1063, %1064, %1065)
}

def @func_14530() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %1066 = @func_13658() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1067 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %1068 = %1066.0;
  %1069 = %1067.0;
  (%1068, %1069)
}

def @func_5323() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) {
  %1070 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1071 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1072 = %1071.0;
  %1073 = cast(%1072, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %1074 = reshape(%1073, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float64] */;
  %1075 = @func_5099(%1074) /* ty=(Tensor[(14, 15, 16), bool], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(14, 2, 16), bool], Tensor[(448), float32]) */;
  %1076 = %1070.0;
  %1077 = %1075.1;
  (%1076, %1072, %1077)
}

def @func_2088(%var_2068: Tensor[(9, 10, 10), int16], %var_2069: Tensor[(9, 10, 10), int16]) -> Tensor[(9, 10, 10), bool] {
  %1078 = cast(%var_2069, dtype="bool") /* ty=Tensor[(9, 10, 10), bool] */;
  %1079 = shape_of(%var_2068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1080 = cast(%var_2068, dtype="bool") /* ty=Tensor[(9, 10, 10), bool] */;
  %1081 = dyn.reshape(%1078, %1079, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1080, %1081) /* ty=Tensor[(9, 10, 10), bool] */
}

def @func_6622() -> (Tensor[(14, 15, 16), float64],) {
  %1082 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %1083 = %1082.0;
  (%1083,)
}

def @func_8054() -> (Tensor[(14, 15, 16), float64],) {
  %1084 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1085 = %1084.0;
  (%1085,)
}

def @func_14479() -> (Tensor[(8, 6, 11), float64],) {
  %1086 = @func_13876() /* ty=(Tensor[(8, 6, 11), float64],) */;
  %1087 = %1086.0;
  (%1087,)
}

def @func_11411(%var_11355: Tensor[(4, 7, 11), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(4, 7, 11), float32], Tensor[(5, 4, 10), bool]) {
  %1088 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1089 = cast(%var_11355, dtype="float32") /* ty=Tensor[(4, 7, 11), float32] */;
  %1090 = cosh(%1089) /* ty=Tensor[(4, 7, 11), float32] */;
  %1091 = cast(%1090, dtype="float32") /* ty=Tensor[(4, 7, 11), float32] */;
  %1092 = %1088.0;
  %1093 = cast(%1092, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %1094 = reshape(%1093, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float64] */;
  %1095 = @func_5099(%1094) /* ty=(Tensor[(14, 15, 16), bool], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(14, 2, 16), bool], Tensor[(448), float32]) */;
  %1096 = asinh(%1091) /* ty=Tensor[(4, 7, 11), float32] */;
  %1097 = %1095.1;
  (%1092, %1096, %1097)
}

def @func_7891() -> Tensor[(14, 15, 16), float64] {
  @func_7581() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_15240(%var_15231: Tensor[(900, 1), int16]) -> (Tensor[(14, 15, 16), float32], Tensor[(9, 10, 10), bool], Tensor[(900, 1), int16]) {
  %1098 = @func_11501() /* ty=(Tensor[(14, 15, 16), float32],) */;
  %1099 = cast(%var_15231, dtype="int16") /* ty=Tensor[(900, 1), int16] */;
  %1100 = cast(%var_15231, dtype="int16") /* ty=Tensor[(900, 1), int16] */;
  %1101 = reshape(%1099, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %1102 = reshape(%1100, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %1103 = %1098.0;
  %1104 = @func_2088(%1101, %1102) /* ty=Tensor[(9, 10, 10), bool] */;
  (%1103, %1104, %var_15231)
}

def @func_14305(%var_14285: Tensor[(9, 10, 10), int32]) -> (Tensor[(14, 15, 16), float64], Tensor[(2178), int8], Tensor[(9, 10, 10), float32]) {
  %1105 = @func_8123() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1106 = cast(meta[relay.Constant][76] /* ty=Tensor[(2178), int8] */, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %1107 = reshape(%1106, newshape=[2178]) /* ty=Tensor[(2178), int8] */;
  %1108 = @func_10054(%1107) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), int32], Tensor[(12), int32], Tensor[(2, 24), int32], Tensor[(2178), int8]) */;
  %1109 = %1108.1;
  %1110 = cast(%var_14285, dtype="bool") /* ty=Tensor[(9, 10, 10), bool] */;
  %1111 = shape_of(%1109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1112 = cast(%1109, dtype="bool") /* ty=Tensor[(9, 10, 10), bool] */;
  %1113 = dyn.reshape(%1110, %1111, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1114 = equal(%1112, %1113) /* ty=Tensor[(9, 10, 10), bool] */;
  %1115 = cast(%1114, dtype="float32") /* ty=Tensor[(9, 10, 10), float32] */;
  %1116 = sinh(%1115) /* ty=Tensor[(9, 10, 10), float32] */;
  %1117 = cast(%1116, dtype="float32") /* ty=Tensor[(9, 10, 10), float32] */;
  %1118 = %1105.0;
  %1119 = acosh(%1117) /* ty=Tensor[(9, 10, 10), float32] */;
  (%1118, meta[relay.Constant][76] /* ty=Tensor[(2178), int8] */, %1119)
}

def @func_7581() -> Tensor[(14, 15, 16), float64] {
  @func_7157() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_10036() -> Tensor[(14, 15, 16), float32] {
  @func_6056() /* ty=Tensor[(14, 15, 16), float32] */
}

def @func_12367() -> Tensor[(14, 15, 16), float64] {
  %1120 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %1120.0
}

def @func_7136(%var_7105: Tensor[(10, 20), int16], %var_7106: Tensor[(1, 900), int16], %var_7115: Tensor[(2366), int64]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(242), int8], Tensor[(320), float32], Tensor[(10, 20), int16], Tensor[(1, 900), int16], Tensor[(200), int16], Tensor[(2366), int64], int32, Tensor[(24, 22), float64], Tensor[(60), int32]) {
  %1121 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1122 = cast(meta[relay.Constant][77] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %1123 = cast(meta[relay.Constant][78] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1124 = cast(%var_7105, dtype="int16") /* ty=Tensor[(10, 20), int16] */;
  %1125 = cast(%var_7106, dtype="int16") /* ty=Tensor[(1, 900), int16] */;
  %1126 = reshape(%1122, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), int8] */;
  %1127 = reshape(%1123, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %1128 = reshape(%1124, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %1129 = reshape(%1125, newshape=[3, 300]) /* ty=Tensor[(3, 300), int16] */;
  %1130 = @func_4143(%1126, %1127, %1128, %1129) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */;
  %1131 = cast(%var_7115, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %1132 = cast(%var_7115, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %1133 = cast(%var_7105, dtype="int16") /* ty=Tensor[(10, 20), int16] */;
  %1134 = reshape(%1131, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
  %1135 = reshape(%1132, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
  %1136 = reshape(%1133, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %1137 = @func_5122(%1134, %1135, %1136) /* ty=(Tensor[(13, 13, 14), bool], Tensor[(200), int16], Tensor[(200), int16]) */;
  %1138 = cast(meta[relay.Constant][79] /* ty=Tensor[(24, 22), float64] */, dtype="float64") /* ty=Tensor[(24, 22), float64] */;
  %1139 = cast(meta[relay.Constant][80] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1140 = reshape(%1138, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %1141 = reshape(%1139, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %1142 = @func_6495(%1140, %1141) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(9, 10, 10), bool], Tensor[(528), float64], Tensor[(900), int16], Tensor[(1, 5, 12), int32], int32, Tensor[(60), int32]) */;
  %1143 = %1121.0;
  %1144 = @func_5648() /* ty=Tensor[(14, 15, 16), float64] */;
  %1145 = %1130.2;
  %1146 = %1137.1;
  %1147 = %1142.5;
  (%1143, %1144, %1145, meta[relay.Constant][77] /* ty=Tensor[(242), int8] */, meta[relay.Constant][78] /* ty=Tensor[(320), float32] */, %var_7105, %var_7106, %1146, %var_7115, %1147, meta[relay.Constant][79] /* ty=Tensor[(24, 22), float64] */, meta[relay.Constant][80] /* ty=Tensor[(60), int32] */)
}

def @func_10753() -> (Tensor[(14, 15, 16), float64],) {
  %1148 = @func_7157() /* ty=Tensor[(14, 15, 16), float64] */;
  (%1148,)
}

def @func_14765() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %1149 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1150 = @func_10301() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1151 = %1149.0;
  %1152 = %1150.0;
  (%1151, %1152)
}

def @func_16094() -> (Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64]) {
  %1153 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %1154 = @func_8862() /* ty=(Tensor[(8, 6, 11), float64], Tensor[(14, 15, 16), float64]) */;
  %1155 = %1153.1;
  %1156 = %1154.0;
  (%1155, %1156)
}

def @func_15330() -> Tensor[(14, 15, 16), float32] {
  %1157 = @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */;
  %1157.0
}

def @func_10924() -> Tensor[(14, 15, 16), float64] {
  %1158 = @func_10334() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %1158.0
}

def @func_13227() -> (Tensor[(14, 15, 16), float32],) {
  %1159 = @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */;
  %1160 = %1159.0;
  (%1160,)
}

def @func_4072(%var_4062: Tensor[(5, 16, 6), float64]) -> Tensor[(5, 16, 6), float64] {
  %1161 = cast(%var_4062, dtype="float64") /* ty=Tensor[(5, 16, 6), float64] */;
  asin(%1161) /* ty=Tensor[(5, 16, 6), float64] */
}

def @func_14890() -> (Tensor[(14, 15, 16), float64],) {
  %1162 = @func_14710() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %1163 = %1162.1;
  (%1163,)
}

def @func_8609(%var_8558: Tensor[(13, 16, 9), float32]) -> (Tensor[(13, 16, 9), float32], Tensor[(14, 15, 16), float32], Tensor[(14, 15, 16), float64]) {
  %1164 = cast(%var_8558, dtype="float32") /* ty=Tensor[(13, 16, 9), float32] */;
  %1165 = sigmoid(%1164) /* ty=Tensor[(13, 16, 9), float32] */;
  %1166 = @func_7933() /* ty=Tensor[(14, 15, 16), float32] */;
  %1167 = @func_7157() /* ty=Tensor[(14, 15, 16), float64] */;
  (%1165, %1166, %1167)
}

def @func_9694(%var_9650: Tensor[(1, 9, 12), float32]) -> (Tensor[(14, 2, 16), float32], Tensor[(448), float32], Tensor[(?, 9, 12), float32]) {
  %1168 = cast(meta[relay.Constant][81] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %1169 = cast(meta[relay.Constant][81] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %1170 = reshape(%1168, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %1171 = reshape(%1169, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %1172 = @func_471(%1170, %1171) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(14, 2, 16), bool]) */;
  %1173 = cast(%var_9650, dtype="float32") /* ty=Tensor[(1, 9, 12), float32] */;
  %1174 = tan(%1173) /* ty=Tensor[(1, 9, 12), float32] */;
  %1175 = cast(%var_9650, dtype="float32") /* ty=Tensor[(1, 9, 12), float32] */;
  %1176 = shape_of(%1174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1177 = cast(%1174, dtype="float32") /* ty=Tensor[(1, 9, 12), float32] */;
  %1178 = dyn.reshape(%1175, %1176, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1179 = %1172.0;
  %1180 = mod(%1177, %1178) /* ty=Tensor[(?, 9, 12), float32] */;
  (%1179, meta[relay.Constant][81] /* ty=Tensor[(448), float32] */, %1180)
}

def @func_11529() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %1181 = @func_10301() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1182 = @func_10929() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1183 = %1181.0;
  %1184 = %1182.0;
  (%1183, %1184)
}

def @func_6553(%var_6547: Tensor[(7, 1, 11), float64]) -> Tensor[(7, 1, 11), float64] {
  %1185 = cast(%var_6547, dtype="float64") /* ty=Tensor[(7, 1, 11), float64] */;
  exp(%1185) /* ty=Tensor[(7, 1, 11), float64] */
}

def @func_13796() -> (Tensor[(14, 15, 16), float64],) {
  %1186 = @func_9872() /* ty=Tensor[(14, 15, 16), float64] */;
  (%1186,)
}

def @func_13340() -> Tensor[(14, 15, 16), float64] {
  %1187 = @func_9386() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1187.0
}

def @func_5724(%var_5671: uint8, %var_5672: Tensor[(7, 16, 2), uint8]) -> (Tensor[(7, 16, 2), bool], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(495), float32]) {
  %1188 = cast(%var_5671, dtype="bool") /* ty=bool */;
  %1189 = cast(%var_5672, dtype="bool") /* ty=Tensor[(7, 16, 2), bool] */;
  %1190 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1191 = cast(meta[relay.Constant][82] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %1192 = cast(meta[relay.Constant][82] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %1193 = reshape(%1191, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %1194 = reshape(%1192, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %1195 = @func_2088(%1193, %1194) /* ty=Tensor[(9, 10, 10), bool] */;
  %1196 = cast(%1195, dtype="int16") /* ty=Tensor[(9, 10, 10), int16] */;
  %1197 = reshape(%1196, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %1198 = @func_2561(%1197) /* ty=(Tensor[(13, 16, 2), bool], Tensor[(9, 11, 5), float32], Tensor[(495), float32], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(14, 2, 16), float32], Tensor[(448), float32]) */;
  %1199 = not_equal(%1188, %1189) /* ty=Tensor[(7, 16, 2), bool] */;
  %1200 = %1190.0;
  %1201 = %1198.2;
  (%1199, %1200, %1195, meta[relay.Constant][82] /* ty=Tensor[(900), int16] */, %1201)
}

def @func_12274() -> Tensor[(14, 15, 16), float64] {
  %1202 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1202.0
}

def @func_14262() -> (Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64]) {
  %1203 = @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */;
  %1204 = %1203.1;
  %1205 = @func_11589() /* ty=Tensor[(14, 15, 16), float64] */;
  (%1204, %1205)
}

def @func_12874() -> Tensor[(14, 15, 16), float64] {
  @func_8380() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_13427(%var_13386: Tensor[(5, 4, 10), bool]) -> (Tensor[(5, 4, 10), int16], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) {
  %1206 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %1207 = %1206.2;
  %1208 = cast(%var_13386, dtype="int16") /* ty=Tensor[(5, 4, 10), int16] */;
  %1209 = shape_of(%1207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1210 = cast(%1207, dtype="int16") /* ty=Tensor[(5, 4, 10), int16] */;
  %1211 = dyn.reshape(%1208, %1209, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1212 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1213 = %1212.0;
  %1214 = cast(%1213, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %1215 = reshape(%1214, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float64] */;
  %1216 = @func_5099(%1215) /* ty=(Tensor[(14, 15, 16), bool], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(14, 2, 16), bool], Tensor[(448), float32]) */;
  %1217 = right_shift(%1210, %1211) /* ty=Tensor[(5, 4, 10), int16] */;
  %1218 = %1216.1;
  (%1217, %1213, %1218)
}

def @func_3286(%var_3259: Tensor[(126), float32], %var_3276: Tensor[(18, 50), int16]) -> (Tensor[(3, 7, 6), bool], Tensor[(126), float32], Tensor[(2, 12, 14), float64], Tensor[(9, 10, 10), bool], Tensor[(18, 50), int16]) {
  %1219 = cast(%var_3259, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1220 = reshape(%1219, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %1221 = cast(meta[relay.Constant][83] /* ty=Tensor[(2, 12, 14), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 14), float32] */;
  %1222 = exp(%1221) /* ty=Tensor[(2, 12, 14), float32] */;
  %1223 = cast(%1222, dtype="float64") /* ty=Tensor[(2, 12, 14), float64] */;
  %1224 = cast(%var_3276, dtype="int16") /* ty=Tensor[(18, 50), int16] */;
  %1225 = cast(%var_3276, dtype="int16") /* ty=Tensor[(18, 50), int16] */;
  %1226 = reshape(%1224, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %1227 = reshape(%1225, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %1228 = @func_940(%1220) /* ty=Tensor[(3, 7, 6), bool] */;
  %1229 = sinh(%1223) /* ty=Tensor[(2, 12, 14), float64] */;
  %1230 = @func_2088(%1226, %1227) /* ty=Tensor[(9, 10, 10), bool] */;
  (%1228, %var_3259, %1229, %1230, %var_3276)
}

def @func_6154() -> (Tensor[(14, 15, 16), float64],) {
  %1231 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1232 = %1231.0;
  (%1232,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9872() -> Tensor[(14, 15, 16), float64] {
  @func_7157() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_8864() -> (Tensor[(8, 6, 11), float64], Tensor[(14, 15, 16), float64]) {
  @func_8862() /* ty=(Tensor[(8, 6, 11), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_14479() -> (Tensor[(8, 6, 11), float64],) {
  %0 = @func_13876() /* ty=(Tensor[(8, 6, 11), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_11842() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %8 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
    %2 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %3 = @func_8876() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %4 = %2.0;
    %5 = %3.0;
    %6 = @func_9396() /* ty=Tensor[(14, 15, 16), float64] */;
    %7 = @func_11329() /* ty=Tensor[(14, 15, 16), float64] */;
    (%4, %5, %6, %7)
  };
  %8() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_13633(%var_13631: Tensor[(126), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(3, 7, 6), bool], Tensor[(126), float32]) {
  @func_13630(%var_13631) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(3, 7, 6), bool], Tensor[(126), float32]) */
}

def @func_14530() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %9 = @func_13658() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %10 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %11 = %9.0;
  %12 = %10.0;
  (%11, %12)
}

def @func_3399(%var_3395: Tensor[(4, 3, 1), int32], %var_3396: Tensor[(4, 3, 4), int32], %var_3397: Tensor[(90, 10), int16], %var_3398: Tensor[(9, 10, 10), bool]) -> (Tensor[(4, 3, 4), bool], Tensor[(90, 10), int16], Tensor[(9, 10, 10), int32]) {
  %26 = fn (%var_3350: Tensor[(4, 3, 1), int32], %var_3351: Tensor[(4, 3, 4), int32], %var_3370: Tensor[(90, 10), int16], %var_3380: Tensor[(9, 10, 10), bool]) -> (Tensor[(4, 3, 4), bool], Tensor[(90, 10), int16], Tensor[(9, 10, 10), int32]) {
    %13 = cast(%var_3350, dtype="bool") /* ty=Tensor[(4, 3, 1), bool] */;
    %14 = cast(%var_3351, dtype="bool") /* ty=Tensor[(4, 3, 4), bool] */;
    %15 = cast(%var_3370, dtype="int16") /* ty=Tensor[(90, 10), int16] */;
    %16 = cast(%var_3370, dtype="int16") /* ty=Tensor[(90, 10), int16] */;
    %17 = reshape(%15, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
    %18 = reshape(%16, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
    %19 = @func_2088(%17, %18) /* ty=Tensor[(9, 10, 10), bool] */;
    %20 = cast(%var_3380, dtype="int32") /* ty=Tensor[(9, 10, 10), int32] */;
    %21 = shape_of(%19, dtype="int32") /* ty=Tensor[(3), int32] */;
    %22 = cast(%19, dtype="int32") /* ty=Tensor[(9, 10, 10), int32] */;
    %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %24 = less(%13, %14) /* ty=Tensor[(4, 3, 4), bool] */;
    %25 = bitwise_and(%22, %23) /* ty=Tensor[(9, 10, 10), int32] */;
    (%24, %var_3370, %25)
  };
  %26(%var_3395, %var_3396, %var_3397, %var_3398) /* ty=(Tensor[(4, 3, 4), bool], Tensor[(90, 10), int16], Tensor[(9, 10, 10), int32]) */
}

def @func_14711() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %29 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
    %27 = @func_11955() /* ty=Tensor[(14, 15, 16), float64] */;
    %28 = @func_12725() /* ty=Tensor[(14, 15, 16), float64] */;
    (%27, %28)
  };
  %29() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_14890() -> (Tensor[(14, 15, 16), float64],) {
  %30 = @func_14710() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %31 = %30.1;
  (%31,)
}

def @func_10302() -> (Tensor[(14, 15, 16), float64],) {
  %33 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %32 = @func_8380() /* ty=Tensor[(14, 15, 16), float64] */;
    (%32,)
  };
  %33() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_13992() -> (Tensor[(14, 15, 16), float64],) {
  %34 = @func_7157() /* ty=Tensor[(14, 15, 16), float64] */;
  (%34,)
}

def @func_6058() -> Tensor[(14, 15, 16), float32] {
  @func_6056() /* ty=Tensor[(14, 15, 16), float32] */
}

def @func_11330() -> Tensor[(14, 15, 16), float64] {
  %36 = fn () -> Tensor[(14, 15, 16), float64] {
    %35 = @func_10140() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16]) */;
    %35.3
  };
  %36() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_15772(%var_15769: Tensor[(15, 9, 8), float64], %var_15770: Tensor[(15, 9, 8), float64], %var_15771: Tensor[(200), int16]) -> (Tensor[(15, 9, 8), float64], Tensor[(15, 9, 8), float64], Tensor[(14, 15, 16), float64], Tensor[(15, 9, 8), int16], Tensor[(3, 7, 6), bool], Tensor[(200), int16]) {
  %59 = fn (%var_15673: Tensor[(15, 9, 8), float64], %var_15674: Tensor[(15, 9, 8), float64], %var_15757: Tensor[(200), int16]) -> (Tensor[(15, 9, 8), float64], Tensor[(15, 9, 8), float64], Tensor[(14, 15, 16), float64], Tensor[(15, 9, 8), int16], Tensor[(3, 7, 6), bool], Tensor[(200), int16]) {
    %37 = cast(%var_15674, dtype="float64") /* ty=Tensor[(15, 9, 8), float64] */;
    %38 = shape_of(%var_15673, dtype="int32") /* ty=Tensor[(3), int32] */;
    %39 = cast(%var_15673, dtype="float64") /* ty=Tensor[(15, 9, 8), float64] */;
    %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %41 = cast(%var_15674, dtype="float64") /* ty=Tensor[(15, 9, 8), float64] */;
    %42 = cosh(%41) /* ty=Tensor[(15, 9, 8), float64] */;
    %43 = cast(%42, dtype="float64") /* ty=Tensor[(15, 9, 8), float64] */;
    %44 = @func_13724() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
    %45 = cast(%42, dtype="float64") /* ty=Tensor[(15, 9, 8), float64] */;
    %46 = sinh(%45) /* ty=Tensor[(15, 9, 8), float64] */;
    %47 = cast(%46, dtype="int16") /* ty=Tensor[(15, 9, 8), int16] */;
    %48 = shape_of(%var_15673, dtype="int32") /* ty=Tensor[(3), int32] */;
    %49 = cast(%var_15673, dtype="int16") /* ty=Tensor[(15, 9, 8), int16] */;
    %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %51 = cast(%var_15757, dtype="int16") /* ty=Tensor[(200), int16] */;
    %52 = reshape(%51, newshape=[200]) /* ty=Tensor[(200), int16] */;
    %53 = @func_4242(%52) /* ty=(Tensor[(15, 9, 12), int64], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(3, 7, 6), bool], Tensor[(126), float32]) */;
    %54 = floor_mod(%39, %40) /* ty=Tensor[(15, 9, 8), float64] */;
    %55 = asin(%43) /* ty=Tensor[(15, 9, 8), float64] */;
    %56 = %44.1;
    %57 = subtract(%49, %50) /* ty=Tensor[(15, 9, 8), int16] */;
    %58 = %53.3;
    (%54, %55, %56, %57, %58, %var_15757)
  };
  %59(%var_15769, %var_15770, %var_15771) /* ty=(Tensor[(15, 9, 8), float64], Tensor[(15, 9, 8), float64], Tensor[(14, 15, 16), float64], Tensor[(15, 9, 8), int16], Tensor[(3, 7, 6), bool], Tensor[(200), int16]) */
}

def @func_10817() -> (Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(242), int8], Tensor[(900), int16], Tensor[(2178, 1), int8], Tensor[(320), float32], Tensor[(80, 4), float32], Tensor[(200), int16]) {
  @func_10815() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(242), int8], Tensor[(900), int16], Tensor[(2178, 1), int8], Tensor[(320), float32], Tensor[(80, 4), float32], Tensor[(200), int16]) */
}

def @func_13429(%var_13428: Tensor[(5, 4, 10), bool]) -> (Tensor[(5, 4, 10), int16], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) {
  %73 = fn (%var_13386: Tensor[(5, 4, 10), bool]) -> (Tensor[(5, 4, 10), int16], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) {
    %60 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
    %61 = %60.2;
    %62 = cast(%var_13386, dtype="int16") /* ty=Tensor[(5, 4, 10), int16] */;
    %63 = shape_of(%61, dtype="int32") /* ty=Tensor[(3), int32] */;
    %64 = cast(%61, dtype="int16") /* ty=Tensor[(5, 4, 10), int16] */;
    %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %66 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %67 = %66.0;
    %68 = cast(%67, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
    %69 = reshape(%68, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float64] */;
    %70 = @func_5099(%69) /* ty=(Tensor[(14, 15, 16), bool], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(14, 2, 16), bool], Tensor[(448), float32]) */;
    %71 = right_shift(%64, %65) /* ty=Tensor[(5, 4, 10), int16] */;
    %72 = %70.1;
    (%71, %67, %72)
  };
  %73(%var_13428) /* ty=(Tensor[(5, 4, 10), int16], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */
}

def @func_2561(%var_2549: Tensor[(900), int16]) -> (Tensor[(13, 16, 2), bool], Tensor[(9, 11, 5), float32], Tensor[(495), float32], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(14, 2, 16), float32], Tensor[(448), float32]) {
  %74 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 16, 2), int64] */, dtype="bool") /* ty=Tensor[(13, 16, 2), bool] */;
  %75 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(13, 16, 2), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 16, 2), int64] */, dtype="bool") /* ty=Tensor[(13, 16, 2), bool] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %78 = cast(meta[relay.Constant][2] /* ty=Tensor[(495), float32] */, dtype="float32") /* ty=Tensor[(495), float32] */;
  %79 = cast(meta[relay.Constant][2] /* ty=Tensor[(495), float32] */, dtype="float32") /* ty=Tensor[(495), float32] */;
  %80 = reshape(%78, newshape=[9, 11, 5]) /* ty=Tensor[(9, 11, 5), float32] */;
  %81 = reshape(%79, newshape=[9, 11, 5]) /* ty=Tensor[(9, 11, 5), float32] */;
  %82 = cast(%var_2549, dtype="int16") /* ty=Tensor[(900), int16] */;
  %83 = cast(%var_2549, dtype="int16") /* ty=Tensor[(900), int16] */;
  %84 = reshape(%82, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %85 = reshape(%83, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %86 = cast(meta[relay.Constant][3] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %87 = cast(meta[relay.Constant][3] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %88 = reshape(%86, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %89 = reshape(%87, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %90 = @func_471(%88, %89) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(14, 2, 16), bool]) */;
  %91 = equal(%76, %77) /* ty=Tensor[(13, 16, 2), bool] */;
  %92 = @func_1266(%80, %81) /* ty=Tensor[(9, 11, 5), float32] */;
  %93 = @func_2088(%84, %85) /* ty=Tensor[(9, 10, 10), bool] */;
  %94 = %90.0;
  (%91, %92, meta[relay.Constant][2] /* ty=Tensor[(495), float32] */, %93, %var_2549, %94, meta[relay.Constant][3] /* ty=Tensor[(448), float32] */)
}

def @func_7159() -> Tensor[(14, 15, 16), float64] {
  @func_7157() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_8609(%var_8558: Tensor[(13, 16, 9), float32]) -> (Tensor[(13, 16, 9), float32], Tensor[(14, 15, 16), float32], Tensor[(14, 15, 16), float64]) {
  %95 = cast(%var_8558, dtype="float32") /* ty=Tensor[(13, 16, 9), float32] */;
  %96 = sigmoid(%95) /* ty=Tensor[(13, 16, 9), float32] */;
  %97 = @func_7933() /* ty=Tensor[(14, 15, 16), float32] */;
  %98 = @func_7157() /* ty=Tensor[(14, 15, 16), float64] */;
  (%96, %97, %98)
}

def @func_9125(%var_9123: Tensor[(320), float32], %var_9124: Tensor[(50, 4), int16]) -> (Tensor[(14, 15, 16), float32], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool], Tensor[(320), float32], Tensor[(50, 4), int16]) {
  %107 = fn (%var_9117: Tensor[(320), float32], %var_9118: Tensor[(50, 4), int16]) -> (Tensor[(14, 15, 16), float32], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool], Tensor[(320), float32], Tensor[(50, 4), int16]) {
    %99 = cast(%var_9117, dtype="float32") /* ty=Tensor[(320), float32] */;
    %100 = cast(%var_9118, dtype="int16") /* ty=Tensor[(50, 4), int16] */;
    %101 = reshape(%99, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float32] */;
    %102 = reshape(%100, newshape=[200]) /* ty=Tensor[(200), int16] */;
    %103 = @func_670(%101, %102) /* ty=(Tensor[(16, 4, 5), float32], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(5, 4, 10), bool]) */;
    %104 = @func_7933() /* ty=Tensor[(14, 15, 16), float32] */;
    %105 = @func_9031() /* ty=Tensor[(14, 15, 16), float64] */;
    %106 = %103.3;
    (%104, %105, %106, %var_9117, %var_9118)
  };
  %107(%var_9123, %var_9124) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool], Tensor[(320), float32], Tensor[(50, 4), int16]) */
}

def @func_14532() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  @func_14530() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_13798() -> (Tensor[(14, 15, 16), float64],) {
  @func_13796() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_12276() -> Tensor[(14, 15, 16), float64] {
  @func_12274() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_12448() -> Tensor[(14, 15, 16), float64] {
  %109 = fn () -> Tensor[(14, 15, 16), float64] {
    %108 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %108.0
  };
  %109() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_4244(%var_4243: Tensor[(200), int16]) -> (Tensor[(15, 9, 12), int64], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(3, 7, 6), bool], Tensor[(126), float32]) {
  %121 = fn (%var_4230: Tensor[(200), int16]) -> (Tensor[(15, 9, 12), int64], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(3, 7, 6), bool], Tensor[(126), float32]) {
    %110 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 9, 12), int64] */, dtype="int64") /* ty=Tensor[(1, 9, 12), int64] */;
    %111 = cast(meta[relay.Constant][5] /* ty=Tensor[(15, 9, 12), int64] */, dtype="int64") /* ty=Tensor[(15, 9, 12), int64] */;
    %112 = cast(%var_4230, dtype="int16") /* ty=Tensor[(200), int16] */;
    %113 = cast(%var_4230, dtype="int16") /* ty=Tensor[(200), int16] */;
    %114 = reshape(%112, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
    %115 = reshape(%113, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
    %116 = cast(meta[relay.Constant][6] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %117 = reshape(%116, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
    %118 = right_shift(%110, %111) /* ty=Tensor[(15, 9, 12), int64] */;
    %119 = @func_112(%114, %115) /* ty=Tensor[(5, 4, 10), bool] */;
    %120 = @func_940(%117) /* ty=Tensor[(3, 7, 6), bool] */;
    (%118, %119, %var_4230, %120, meta[relay.Constant][6] /* ty=Tensor[(126), float32] */)
  };
  %121(%var_4243) /* ty=(Tensor[(15, 9, 12), int64], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(3, 7, 6), bool], Tensor[(126), float32]) */
}

def @func_9366() -> (Tensor[(14, 15, 16), float64],) {
  %124 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %122 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %123 = %122.0;
    (%123,)
  };
  %124() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_15399(%var_15396: Tensor[(320), float32], %var_15397: Tensor[(200), int16], %var_15398: Tensor[(450, 2), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(200), int16], Tensor[(242), int8], Tensor[(320), float32], Tensor[(200), int16], Tensor[(450, 2), int16], Tensor[(14, 15, 16), float64]) {
  @func_15394(%var_15396, %var_15397, %var_15398) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(200), int16], Tensor[(242), int8], Tensor[(320), float32], Tensor[(200), int16], Tensor[(450, 2), int16], Tensor[(14, 15, 16), float64]) */
}

def @func_14357(%var_14356: Tensor[(56), uint8]) -> (Tensor[(14, 15, 16), float64], Tensor[(7, 8, 13), int16], Tensor[(56), uint8], Tensor[(728), uint8], Tensor[(14, 15, 16), float64]) {
  %134 = fn (%var_14327: Tensor[(56), uint8]) -> (Tensor[(14, 15, 16), float64], Tensor[(7, 8, 13), int16], Tensor[(56), uint8], Tensor[(728), uint8], Tensor[(14, 15, 16), float64]) {
    %125 = @func_10140() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16]) */;
    %126 = cast(%var_14327, dtype="uint8") /* ty=Tensor[(56), uint8] */;
    %127 = cast(meta[relay.Constant][7] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
    %128 = reshape(%126, newshape=[7, 8, 1]) /* ty=Tensor[(7, 8, 1), uint8] */;
    %129 = reshape(%127, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), uint8] */;
    %130 = @func_9971() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %131 = %125.4;
    %132 = @func_5611(%128, %129) /* ty=Tensor[(7, 8, 13), int16] */;
    %133 = %130.0;
    (%131, %132, %var_14327, meta[relay.Constant][7] /* ty=Tensor[(728), uint8] */, %133)
  };
  %134(%var_14356) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(7, 8, 13), int16], Tensor[(56), uint8], Tensor[(728), uint8], Tensor[(14, 15, 16), float64]) */
}

def @func_8862() -> (Tensor[(8, 6, 11), float64], Tensor[(14, 15, 16), float64]) {
  %135 = @func_8788() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64], Tensor[(528), float64], Tensor[(900), int16], Tensor[(14, 15, 16), float64]) */;
  %136 = %135.1;
  %137 = @func_8181() /* ty=Tensor[(14, 15, 16), float64] */;
  (%136, %137)
}

def @func_9553(%var_9552: Tensor[(320), float32]) -> (Tensor[(14, 15, 16), float32], Tensor[(5, 12, 5), bool], Tensor[(320), float32], Tensor[(200), int16]) {
  %145 = fn (%var_9543: Tensor[(320), float32]) -> (Tensor[(14, 15, 16), float32], Tensor[(5, 12, 5), bool], Tensor[(320), float32], Tensor[(200), int16]) {
    %138 = cast(%var_9543, dtype="float32") /* ty=Tensor[(320), float32] */;
    %139 = cast(meta[relay.Constant][8] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
    %140 = reshape(%138, newshape=[1, 320]) /* ty=Tensor[(1, 320), float32] */;
    %141 = reshape(%139, newshape=[100, 2]) /* ty=Tensor[(100, 2), int16] */;
    %142 = @func_5293(%140, %141) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(200), int16], Tensor[(100, 2), int16], Tensor[(6, 320), bool], Tensor[(5, 12, 5), bool], Tensor[(300), bool]) */;
    %143 = @func_8315() /* ty=Tensor[(14, 15, 16), float32] */;
    %144 = %142.4;
    (%143, %144, %var_9543, meta[relay.Constant][8] /* ty=Tensor[(200), int16] */)
  };
  %145(%var_9552) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 12, 5), bool], Tensor[(320), float32], Tensor[(200), int16]) */
}

def @func_11411(%var_11355: Tensor[(4, 7, 11), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(4, 7, 11), float32], Tensor[(5, 4, 10), bool]) {
  %146 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %147 = cast(%var_11355, dtype="float32") /* ty=Tensor[(4, 7, 11), float32] */;
  %148 = cosh(%147) /* ty=Tensor[(4, 7, 11), float32] */;
  %149 = cast(%148, dtype="float32") /* ty=Tensor[(4, 7, 11), float32] */;
  %150 = %146.0;
  %151 = cast(%150, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %152 = reshape(%151, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float64] */;
  %153 = @func_5099(%152) /* ty=(Tensor[(14, 15, 16), bool], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(14, 2, 16), bool], Tensor[(448), float32]) */;
  %154 = asinh(%149) /* ty=Tensor[(4, 7, 11), float32] */;
  %155 = %153.1;
  (%150, %154, %155)
}

def @func_6015(%var_5996: int32, %var_5997: Tensor[(1, 5, 12), int32]) -> (Tensor[(1, 5, 12), int32],) {
  %156 = cast(%var_5996, dtype="int32") /* ty=int32 */;
  %157 = cast(%var_5997, dtype="int32") /* ty=Tensor[(1, 5, 12), int32] */;
  %158 = maximum(%156, %157) /* ty=Tensor[(1, 5, 12), int32] */;
  (%158,)
}

def @func_5929() -> Tensor[(14, 15, 16), float64] {
  %159 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %159.0
}

def @func_16142() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %160 = @func_15958() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %161 = @func_14656() /* ty=Tensor[(14, 15, 16), float64] */;
  %162 = %160.0;
  %163 = @func_7157() /* ty=Tensor[(14, 15, 16), float64] */;
  (%161, %162, %163)
}

def @func_7475(%var_7473: Tensor[(528), float64], %var_7474: Tensor[(900), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(528), float64], Tensor[(900), int16]) {
  @func_7471(%var_7473, %var_7474) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(528), float64], Tensor[(900), int16]) */
}

def @func_5865(%var_5863: Tensor[(11, 22), int8], %var_5864: Tensor[(22, 99), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), float32], Tensor[(11, 22), int8], Tensor[(100, 2), int16], Tensor[(900), int16], Tensor[(22, 99), int8]) {
  @func_5861(%var_5863, %var_5864) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), float32], Tensor[(11, 22), int8], Tensor[(100, 2), int16], Tensor[(900), int16], Tensor[(22, 99), int8]) */
}

def @func_940(%var_923: Tensor[(3, 7, 6), float32]) -> Tensor[(3, 7, 6), bool] {
  %164 = cast(%var_923, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %165 = sigmoid(%164) /* ty=Tensor[(3, 7, 6), float32] */;
  %166 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 7, 6), float32] */, dtype="bool") /* ty=Tensor[(3, 7, 6), bool] */;
  %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(%165, dtype="bool") /* ty=Tensor[(3, 7, 6), bool] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%168, %169) /* ty=Tensor[(3, 7, 6), bool] */
}

def @func_11541() -> (Tensor[(14, 15, 16), float64],) {
  @func_11539() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_115(%var_113: Tensor[(5, 4, 10), int16], %var_114: Tensor[(5, 4, 10), int16]) -> Tensor[(5, 4, 10), bool] {
  %174 = fn (%var_97: Tensor[(5, 4, 10), int16], %var_98: Tensor[(5, 4, 10), int16]) -> Tensor[(5, 4, 10), bool] {
    %170 = cast(%var_98, dtype="bool") /* ty=Tensor[(5, 4, 10), bool] */;
    %171 = shape_of(%var_97, dtype="int32") /* ty=Tensor[(3), int32] */;
    %172 = cast(%var_97, dtype="bool") /* ty=Tensor[(5, 4, 10), bool] */;
    %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%172, %173) /* ty=Tensor[(5, 4, 10), bool] */
  };
  %174(%var_113, %var_114) /* ty=Tensor[(5, 4, 10), bool] */
}

def @func_10141() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16]) {
  %185 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16]) {
    %175 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %176 = @func_9587() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %177 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %178 = @func_8788() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64], Tensor[(528), float64], Tensor[(900), int16], Tensor[(14, 15, 16), float64]) */;
    %179 = @func_5648() /* ty=Tensor[(14, 15, 16), float64] */;
    %180 = @func_5786() /* ty=Tensor[(14, 15, 16), float64] */;
    %181 = %175.0;
    %182 = %176.0;
    %183 = %177.0;
    %184 = %178.3;
    (%179, %180, %181, %182, %183, %184)
  };
  %185() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16]) */
}

def @func_15931() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  @func_15929() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_12071() -> (Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32], Tensor[(14, 15, 16), float64]) {
  %194 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32], Tensor[(14, 15, 16), float64]) {
    %186 = @func_10929() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %187 = cast(meta[relay.Constant][10] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
    %188 = cast(meta[relay.Constant][10] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
    %189 = reshape(%187, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
    %190 = reshape(%188, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
    %191 = %186.0;
    %192 = @func_10413(%189, %190) /* ty=Tensor[(15, 3, 14), float64] */;
    %193 = @func_9960() /* ty=Tensor[(14, 15, 16), float64] */;
    (%191, %192, meta[relay.Constant][10] /* ty=Tensor[(630), int32] */, %193)
  };
  %194() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32], Tensor[(14, 15, 16), float64]) */
}

def @func_13201(%var_13200: Tensor[(900), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %206 = fn (%var_13175: Tensor[(900), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
    %195 = @func_8054() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %196 = cast(%var_13175, dtype="int16") /* ty=Tensor[(900), int16] */;
    %197 = cast(%var_13175, dtype="int16") /* ty=Tensor[(900), int16] */;
    %198 = reshape(%196, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
    %199 = reshape(%197, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
    %200 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %201 = %195.0;
    %202 = @func_11589() /* ty=Tensor[(14, 15, 16), float64] */;
    %203 = @func_2088(%198, %199) /* ty=Tensor[(9, 10, 10), bool] */;
    %204 = @func_12904() /* ty=Tensor[(14, 15, 16), float64] */;
    %205 = %200.0;
    (%201, %202, %203, %var_13175, %204, %205)
  };
  %206(%var_13200) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_4948(%var_4947: Tensor[(200), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(126), float32], Tensor[(320), float32], Tensor[(126, 200), int64], Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64], Tensor[(242), float32], Tensor[(126, 242), int16], Tensor[(126, 242), bool], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool]) {
  %263 = fn (%var_4878: Tensor[(200), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(126), float32], Tensor[(320), float32], Tensor[(126, 200), int64], Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64], Tensor[(242), float32], Tensor[(126, 242), int16], Tensor[(126, 242), bool], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool]) {
    %207 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %208 = cast(meta[relay.Constant][11] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
    %209 = cast(meta[relay.Constant][12] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
    %210 = reshape(%208, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %211 = reshape(%209, newshape=[18, 50]) /* ty=Tensor[(18, 50), int16] */;
    %212 = @func_3286(%210, %211) /* ty=(Tensor[(3, 7, 6), bool], Tensor[(126), float32], Tensor[(2, 12, 14), float64], Tensor[(9, 10, 10), bool], Tensor[(18, 50), int16]) */;
    %213 = cast(meta[relay.Constant][13] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
    %214 = cast(meta[relay.Constant][14] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %215 = cast(%var_4878, dtype="int16") /* ty=Tensor[(200), int16] */;
    %216 = cast(meta[relay.Constant][12] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
    %217 = reshape(%213, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), int8] */;
    %218 = reshape(%214, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %219 = reshape(%215, newshape=[200]) /* ty=Tensor[(200), int16] */;
    %220 = reshape(%216, newshape=[3, 300]) /* ty=Tensor[(3, 300), int16] */;
    %221 = @func_4143(%217, %218, %219, %220) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */;
    %222 = cast(%var_4878, dtype="int64") /* ty=Tensor[(200), int64] */;
    %223 = cast(meta[relay.Constant][11] /* ty=Tensor[(126, 1), float32] */, dtype="int64") /* ty=Tensor[(126, 1), int64] */;
    %224 = cast(meta[relay.Constant][14] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %225 = cast(%var_4878, dtype="int16") /* ty=Tensor[(200), int16] */;
    %226 = reshape(%224, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float32] */;
    %227 = reshape(%225, newshape=[200]) /* ty=Tensor[(200), int16] */;
    %228 = @func_670(%226, %227) /* ty=(Tensor[(16, 4, 5), float32], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(5, 4, 10), bool]) */;
    %229 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %230 = cast(meta[relay.Constant][13] /* ty=Tensor[(242), int8] */, dtype="float64") /* ty=Tensor[(242), float64] */;
    %231 = asin(%230) /* ty=Tensor[(242), float64] */;
    %232 = cast(%231, dtype="float32") /* ty=Tensor[(242), float32] */;
    %233 = cast(%231, dtype="float32") /* ty=Tensor[(242), float32] */;
    %234 = cos(%233) /* ty=Tensor[(242), float32] */;
    %235 = cast(%234, dtype="bool") /* ty=Tensor[(242), bool] */;
    %236 = cast(meta[relay.Constant][11] /* ty=Tensor[(126, 1), float32] */, dtype="bool") /* ty=Tensor[(126, 1), bool] */;
    %237 = less(%235, %236) /* ty=Tensor[(126, 242), bool] */;
    %238 = cast(%237, dtype="int16") /* ty=Tensor[(126, 242), int16] */;
    %239 = cast(%234, dtype="int16") /* ty=Tensor[(242), int16] */;
    %240 = cast(%234, dtype="float64") /* ty=Tensor[(242), float64] */;
    %241 = cast(%237, dtype="float64") /* ty=Tensor[(126, 242), float64] */;
    %242 = mod(%240, %241) /* ty=Tensor[(126, 242), float64] */;
    %243 = cast(%237, dtype="bool") /* ty=Tensor[(126, 242), bool] */;
    %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(2), int32] */;
    %245 = cast(%242, dtype="bool") /* ty=Tensor[(126, 242), bool] */;
    %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %247 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %248 = %212.3;
    %249 = cast(%248, dtype="int16") /* ty=Tensor[(9, 10, 10), int16] */;
    %250 = cast(%248, dtype="int16") /* ty=Tensor[(9, 10, 10), int16] */;
    %251 = reshape(%249, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
    %252 = reshape(%250, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
    %253 = %207.0;
    %254 = %221.7;
    %255 = right_shift(%222, %223) /* ty=Tensor[(126, 200), int64] */;
    %256 = %228.3;
    %257 = %229.0;
    %258 = log2(%232) /* ty=Tensor[(242), float32] */;
    %259 = add(%238, %239) /* ty=Tensor[(126, 242), int16] */;
    %260 = less_equal(%245, %246) /* ty=Tensor[(126, 242), bool] */;
    %261 = %247.0;
    %262 = @func_2088(%251, %252) /* ty=Tensor[(9, 10, 10), bool] */;
    (%253, %248, meta[relay.Constant][12] /* ty=Tensor[(900), int16] */, %254, meta[relay.Constant][14] /* ty=Tensor[(320), float32] */, %255, %256, %257, %258, %259, %260, %261, %262)
  };
  %263(%var_4947) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(126), float32], Tensor[(320), float32], Tensor[(126, 200), int64], Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64], Tensor[(242), float32], Tensor[(126, 242), int16], Tensor[(126, 242), bool], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool]) */
}

def @func_5293(%var_5238: Tensor[(1, 320), float32], %var_5239: Tensor[(100, 2), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(200), int16], Tensor[(100, 2), int16], Tensor[(6, 320), bool], Tensor[(5, 12, 5), bool], Tensor[(300), bool]) {
  %264 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %265 = cast(%var_5238, dtype="float32") /* ty=Tensor[(1, 320), float32] */;
  %266 = cast(%var_5239, dtype="int16") /* ty=Tensor[(100, 2), int16] */;
  %267 = reshape(%265, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float32] */;
  %268 = reshape(%266, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %269 = @func_670(%267, %268) /* ty=(Tensor[(16, 4, 5), float32], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(5, 4, 10), bool]) */;
  %270 = cast(%var_5238, dtype="bool") /* ty=Tensor[(1, 320), bool] */;
  %271 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 320), float32] */, dtype="bool") /* ty=Tensor[(6, 320), bool] */;
  %272 = cast(meta[relay.Constant][16] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
  %273 = reshape(%272, newshape=[5, 12, 5]) /* ty=Tensor[(5, 12, 5), bool] */;
  %274 = %264.0;
  %275 = %269.2;
  %276 = less_equal(%270, %271) /* ty=Tensor[(6, 320), bool] */;
  %277 = @func_2204(%273) /* ty=Tensor[(5, 12, 5), bool] */;
  (%274, %275, %var_5239, %276, %277, meta[relay.Constant][16] /* ty=Tensor[(300), bool] */)
}

def @func_943(%var_941: Tensor[(3, 7, 6), float32]) -> Tensor[(3, 7, 6), bool] {
  @func_940(%var_941) /* ty=Tensor[(3, 7, 6), bool] */
}

def @func_7542() -> (Tensor[(14, 15, 16), float64],) {
  @func_7540() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_5325() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) {
  @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */
}

def @func_11014() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32]) {
  %278 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %279 = %278.1;
  %280 = @func_10036() /* ty=Tensor[(14, 15, 16), float32] */;
  (%279, %280)
}

def @func_10929() -> (Tensor[(14, 15, 16), float64],) {
  %281 = @func_9725() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %282 = %281.0;
  (%282,)
}

def @func_15929() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %283 = @func_11539() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %284 = @func_13724() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %285 = %283.0;
  %286 = %284.1;
  %287 = @func_13810() /* ty=Tensor[(14, 15, 16), float64] */;
  (%285, %286, %287)
}

def @func_15394(%var_15367: Tensor[(320), float32], %var_15368: Tensor[(200), int16], %var_15369: Tensor[(450, 2), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(200), int16], Tensor[(242), int8], Tensor[(320), float32], Tensor[(200), int16], Tensor[(450, 2), int16], Tensor[(14, 15, 16), float64]) {
  %288 = @func_7284() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %289 = cast(meta[relay.Constant][17] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %290 = cast(%var_15367, dtype="float32") /* ty=Tensor[(320), float32] */;
  %291 = cast(%var_15368, dtype="int16") /* ty=Tensor[(200), int16] */;
  %292 = cast(%var_15369, dtype="int16") /* ty=Tensor[(450, 2), int16] */;
  %293 = reshape(%289, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), int8] */;
  %294 = reshape(%290, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %295 = reshape(%291, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %296 = reshape(%292, newshape=[3, 300]) /* ty=Tensor[(3, 300), int16] */;
  %297 = @func_4143(%293, %294, %295, %296) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */;
  %298 = %288.0;
  %299 = @func_10036() /* ty=Tensor[(14, 15, 16), float32] */;
  %300 = %297.8;
  %301 = @func_13319() /* ty=Tensor[(14, 15, 16), float64] */;
  (%298, %299, %300, meta[relay.Constant][17] /* ty=Tensor[(242), int8] */, %var_15367, %var_15368, %var_15369, %301)
}

def @func_11779() -> Tensor[(14, 15, 16), float32] {
  %303 = fn () -> Tensor[(14, 15, 16), float32] {
    %302 = @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */;
    %302.0
  };
  %303() /* ty=Tensor[(14, 15, 16), float32] */
}

def @func_7689() -> Tensor[(14, 15, 16), float64] {
  @func_7687() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_10531(%var_10530: Tensor[(448), float32]) -> (Tensor[(14, 15, 16), float32], Tensor[(900), int16], Tensor[(448), float32], Tensor[(9, 11, 5), float32], Tensor[(14, 2, 16), float32], Tensor[(14, 15, 16), float64]) {
  %324 = fn (%var_10482: Tensor[(448), float32]) -> (Tensor[(14, 15, 16), float32], Tensor[(900), int16], Tensor[(448), float32], Tensor[(9, 11, 5), float32], Tensor[(14, 2, 16), float32], Tensor[(14, 15, 16), float64]) {
    %304 = @func_8054() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %305 = %304.0;
    %306 = cast(%305, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
    %307 = cast(meta[relay.Constant][18] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
    %308 = reshape(%307, newshape=[900]) /* ty=Tensor[(900), int16] */;
    %309 = @func_2561(%308) /* ty=(Tensor[(13, 16, 2), bool], Tensor[(9, 11, 5), float32], Tensor[(495), float32], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(14, 2, 16), float32], Tensor[(448), float32]) */;
    %310 = %309.1;
    %311 = cast(%310, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
    %312 = cast(%var_10482, dtype="float32") /* ty=Tensor[(448), float32] */;
    %313 = cast(%var_10482, dtype="float32") /* ty=Tensor[(448), float32] */;
    %314 = reshape(%312, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
    %315 = reshape(%313, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
    %316 = @func_471(%314, %315) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(14, 2, 16), bool]) */;
    %317 = %316.0;
    %318 = cast(%317, dtype="float32") /* ty=Tensor[(14, 2, 16), float32] */;
    %319 = @func_8123() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %320 = sin(%306) /* ty=Tensor[(14, 15, 16), float32] */;
    %321 = rsqrt(%311) /* ty=Tensor[(9, 11, 5), float32] */;
    %322 = asinh(%318) /* ty=Tensor[(14, 2, 16), float32] */;
    %323 = %319.0;
    (%320, meta[relay.Constant][18] /* ty=Tensor[(900), int16] */, %var_10482, %321, %322, %323)
  };
  %324(%var_10530) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(900), int16], Tensor[(448), float32], Tensor[(9, 11, 5), float32], Tensor[(14, 2, 16), float32], Tensor[(14, 15, 16), float64]) */
}

def @func_9032() -> Tensor[(14, 15, 16), float64] {
  %325 = fn () -> Tensor[(14, 15, 16), float64] {
    @func_7581() /* ty=Tensor[(14, 15, 16), float64] */
  };
  %325() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_16482(%var_16468: Tensor[(9, 8, 14), bool]) -> (Tensor[(9, 8, 14), bool], Tensor[(14, 15, 16), float64], Tensor[(9, 8, 14), int64]) {
  %326 = cast(%var_16468, dtype="bool") /* ty=Tensor[(9, 8, 14), bool] */;
  %327 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(9, 8, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(meta[relay.Constant][19] /* ty=Tensor[(9, 8, 14), bool] */, dtype="bool") /* ty=Tensor[(9, 8, 14), bool] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %330 = @func_14530() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %331 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 8, 14), bool] */, dtype="int64") /* ty=Tensor[(9, 8, 14), int64] */;
  %332 = shape_of(%var_16468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%var_16468, dtype="int64") /* ty=Tensor[(9, 8, 14), int64] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %335 = logical_or(%328, %329) /* ty=Tensor[(9, 8, 14), bool] */;
  %336 = %330.0;
  %337 = logical_xor(%333, %334) /* ty=Tensor[(9, 8, 14), int64] */;
  (%335, %336, %337)
}

def @func_12329() -> (Tensor[(320), float32],) {
  @func_12327() /* ty=(Tensor[(320), float32],) */
}

def @func_11530() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %342 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
    %338 = @func_10301() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %339 = @func_10929() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %340 = %338.0;
    %341 = %339.0;
    (%340, %341)
  };
  %342() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_15088(%var_15087: Tensor[(448), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 11, 5), float32], Tensor[(448), float32]) {
  %349 = fn (%var_15082: Tensor[(448), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 11, 5), float32], Tensor[(448), float32]) {
    %343 = @func_11075() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
    %344 = cast(%var_15082, dtype="float32") /* ty=Tensor[(448), float32] */;
    %345 = reshape(%344, newshape=[448]) /* ty=Tensor[(448), float32] */;
    %346 = @func_10529(%345) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(900), int16], Tensor[(448), float32], Tensor[(9, 11, 5), float32], Tensor[(14, 2, 16), float32], Tensor[(14, 15, 16), float64]) */;
    %347 = %343.0;
    %348 = %346.3;
    (%347, %348, %var_15082)
  };
  %349(%var_15087) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 11, 5), float32], Tensor[(448), float32]) */
}

def @func_8182() -> Tensor[(14, 15, 16), float64] {
  %351 = fn () -> Tensor[(14, 15, 16), float64] {
    %350 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %350.0
  };
  %351() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_15187(%var_15185: Tensor[(77, 1), float64]) -> (Tensor[(14, 15, 16), float32], Tensor[(11, 7), float64], float32, Tensor[(54), float32], Tensor[(77, 1), float32]) {
  @func_15184(%var_15185) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(11, 7), float64], float32, Tensor[(54), float32], Tensor[(77, 1), float32]) */
}

def @func_9588() -> (Tensor[(14, 15, 16), float64],) {
  %354 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %352 = @func_8788() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64], Tensor[(528), float64], Tensor[(900), int16], Tensor[(14, 15, 16), float64]) */;
    %353 = %352.0;
    (%353,)
  };
  %354() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_9694(%var_9650: Tensor[(1, 9, 12), float32]) -> (Tensor[(14, 2, 16), float32], Tensor[(448), float32], Tensor[(?, 9, 12), float32]) {
  %355 = cast(meta[relay.Constant][21] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %356 = cast(meta[relay.Constant][21] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %357 = reshape(%355, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %358 = reshape(%356, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
  %359 = @func_471(%357, %358) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(14, 2, 16), bool]) */;
  %360 = cast(%var_9650, dtype="float32") /* ty=Tensor[(1, 9, 12), float32] */;
  %361 = tan(%360) /* ty=Tensor[(1, 9, 12), float32] */;
  %362 = cast(%var_9650, dtype="float32") /* ty=Tensor[(1, 9, 12), float32] */;
  %363 = shape_of(%361, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%361, dtype="float32") /* ty=Tensor[(1, 9, 12), float32] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %366 = %359.0;
  %367 = mod(%364, %365) /* ty=Tensor[(?, 9, 12), float32] */;
  (%366, meta[relay.Constant][21] /* ty=Tensor[(448), float32] */, %367)
}

def @func_10285(%var_10226: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(160, 2), float32], Tensor[(242), int8], Tensor[(200), int16], Tensor[(900), int16], Tensor[(2178), float64], Tensor[(9, 242), float64]) {
  %368 = @func_9316() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %369 = @func_8054() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %370 = cast(meta[relay.Constant][22] /* ty=Tensor[(160, 2), float32] */, dtype="float32") /* ty=Tensor[(160, 2), float32] */;
  %371 = reshape(%370, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %372 = @func_9551(%371) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 12, 5), bool], Tensor[(320), float32], Tensor[(200), int16]) */;
  %373 = cast(%var_10226, dtype="float64") /* ty=Tensor[(2178), float64] */;
  %374 = cast(meta[relay.Constant][23] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %375 = cast(meta[relay.Constant][24] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %376 = cast(meta[relay.Constant][25] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %377 = cast(%var_10226, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %378 = reshape(%374, newshape=[1, 242]) /* ty=Tensor[(1, 242), int8] */;
  %379 = reshape(%375, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %380 = reshape(%376, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %381 = reshape(%377, newshape=[9, 242]) /* ty=Tensor[(9, 242), int8] */;
  %382 = @func_5484(%378, %379, %380, %381) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), float32], Tensor[(9, 242), bool], Tensor[(9, 242), bool], Tensor[(9, 242), float64]) */;
  %383 = %382.5;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(9, 242), float32] */;
  %385 = sqrt(%384) /* ty=Tensor[(9, 242), float32] */;
  %386 = cast(%385, dtype="float32") /* ty=Tensor[(9, 242), float32] */;
  %387 = acos(%386) /* ty=Tensor[(9, 242), float32] */;
  %388 = cast(%387, dtype="uint32") /* ty=Tensor[(9, 242), uint32] */;
  %389 = shape_of(%385, dtype="int32") /* ty=Tensor[(2), int32] */;
  %390 = cast(%385, dtype="uint32") /* ty=Tensor[(9, 242), uint32] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %392 = subtract(%390, %391) /* ty=Tensor[(9, 242), uint32] */;
  %393 = cast(%392, dtype="float32") /* ty=Tensor[(9, 242), float32] */;
  %394 = cos(%393) /* ty=Tensor[(9, 242), float32] */;
  %395 = cast(%394, dtype="float64") /* ty=Tensor[(9, 242), float64] */;
  %396 = %368.0;
  %397 = %369.0;
  %398 = %372.2;
  %399 = erf(%373) /* ty=Tensor[(2178), float64] */;
  %400 = sin(%395) /* ty=Tensor[(9, 242), float64] */;
  (%396, %397, %398, meta[relay.Constant][22] /* ty=Tensor[(160, 2), float32] */, meta[relay.Constant][23] /* ty=Tensor[(242), int8] */, meta[relay.Constant][24] /* ty=Tensor[(200), int16] */, meta[relay.Constant][25] /* ty=Tensor[(900), int16] */, %399, %400)
}

def @func_10417(%var_10415: Tensor[(15, 3, 14), int32], %var_10416: Tensor[(15, 3, 14), int32]) -> Tensor[(15, 3, 14), float64] {
  @func_10413(%var_10415, %var_10416) /* ty=Tensor[(15, 3, 14), float64] */
}

def @func_12367() -> Tensor[(14, 15, 16), float64] {
  %401 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %401.0
}

def @func_4072(%var_4062: Tensor[(5, 16, 6), float64]) -> Tensor[(5, 16, 6), float64] {
  %402 = cast(%var_4062, dtype="float64") /* ty=Tensor[(5, 16, 6), float64] */;
  asin(%402) /* ty=Tensor[(5, 16, 6), float64] */
}

def @func_9697(%var_9695: Tensor[(1, 9, 12), float32]) -> (Tensor[(14, 2, 16), float32], Tensor[(448), float32], Tensor[(?, 9, 12), float32]) {
  @func_9694(%var_9695) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(448), float32], Tensor[(?, 9, 12), float32]) */
}

def @func_14548() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %403 = @func_9365() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %404 = @func_9031() /* ty=Tensor[(14, 15, 16), float64] */;
  %405 = %403.0;
  (%404, %405)
}

def @func_11738() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32]) {
  %406 = @func_9396() /* ty=Tensor[(14, 15, 16), float64] */;
  %407 = @func_7933() /* ty=Tensor[(14, 15, 16), float32] */;
  (%406, %407)
}

def @func_14305(%var_14285: Tensor[(9, 10, 10), int32]) -> (Tensor[(14, 15, 16), float64], Tensor[(2178), int8], Tensor[(9, 10, 10), float32]) {
  %408 = @func_8123() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %409 = cast(meta[relay.Constant][26] /* ty=Tensor[(2178), int8] */, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %410 = reshape(%409, newshape=[2178]) /* ty=Tensor[(2178), int8] */;
  %411 = @func_10054(%410) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), int32], Tensor[(12), int32], Tensor[(2, 24), int32], Tensor[(2178), int8]) */;
  %412 = %411.1;
  %413 = cast(%var_14285, dtype="bool") /* ty=Tensor[(9, 10, 10), bool] */;
  %414 = shape_of(%412, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(%412, dtype="bool") /* ty=Tensor[(9, 10, 10), bool] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %417 = equal(%415, %416) /* ty=Tensor[(9, 10, 10), bool] */;
  %418 = cast(%417, dtype="float32") /* ty=Tensor[(9, 10, 10), float32] */;
  %419 = sinh(%418) /* ty=Tensor[(9, 10, 10), float32] */;
  %420 = cast(%419, dtype="float32") /* ty=Tensor[(9, 10, 10), float32] */;
  %421 = %408.0;
  %422 = acosh(%420) /* ty=Tensor[(9, 10, 10), float32] */;
  (%421, meta[relay.Constant][26] /* ty=Tensor[(2178), int8] */, %422)
}

def @func_8317() -> Tensor[(14, 15, 16), float32] {
  @func_8315() /* ty=Tensor[(14, 15, 16), float32] */
}

def @func_10755() -> (Tensor[(14, 15, 16), float64],) {
  @func_10753() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_13994() -> (Tensor[(14, 15, 16), float64],) {
  @func_13992() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_5484(%var_5429: Tensor[(1, 242), int8], %var_5431: Tensor[(200), int16], %var_5432: Tensor[(900), int16], %var_5480: Tensor[(9, 242), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), float32], Tensor[(9, 242), bool], Tensor[(9, 242), bool], Tensor[(9, 242), float64]) {
  %423 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %424 = cast(%var_5429, dtype="int8") /* ty=Tensor[(1, 242), int8] */;
  %425 = cast(meta[relay.Constant][27] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %426 = cast(%var_5431, dtype="int16") /* ty=Tensor[(200), int16] */;
  %427 = cast(%var_5432, dtype="int16") /* ty=Tensor[(900), int16] */;
  %428 = reshape(%424, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), int8] */;
  %429 = reshape(%425, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %430 = reshape(%426, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %431 = reshape(%427, newshape=[3, 300]) /* ty=Tensor[(3, 300), int16] */;
  %432 = @func_4143(%428, %429, %430, %431) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */;
  %433 = %432.6;
  %434 = cast(%var_5432, dtype="float32") /* ty=Tensor[(900), float32] */;
  %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%433, dtype="float32") /* ty=Tensor[(9, 10, 10), float32] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %438 = cast(%var_5429, dtype="bool") /* ty=Tensor[(1, 242), bool] */;
  %439 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 242), int8] */, dtype="bool") /* ty=Tensor[(9, 242), bool] */;
  %440 = less(%438, %439) /* ty=Tensor[(9, 242), bool] */;
  %441 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 242), int8] */, dtype="bool") /* ty=Tensor[(9, 242), bool] */;
  %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(2), int32] */;
  %443 = cast(%440, dtype="bool") /* ty=Tensor[(9, 242), bool] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %445 = cast(%var_5429, dtype="bool") /* ty=Tensor[(1, 242), bool] */;
  %446 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 242), int8] */, dtype="bool") /* ty=Tensor[(9, 242), bool] */;
  %447 = logical_or(%445, %446) /* ty=Tensor[(9, 242), bool] */;
  %448 = cast(%440, dtype="bool") /* ty=Tensor[(9, 242), bool] */;
  %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(2), int32] */;
  %450 = cast(%447, dtype="bool") /* ty=Tensor[(9, 242), bool] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %452 = cast(%var_5480, dtype="float64") /* ty=Tensor[(9, 242), float64] */;
  %453 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(9, 242), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %454 = cast(meta[relay.Constant][28] /* ty=Tensor[(9, 242), int8] */, dtype="float64") /* ty=Tensor[(9, 242), float64] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %456 = %423.0;
  %457 = floor_mod(%436, %437) /* ty=Tensor[(9, 10, 10), float32] */;
  %458 = greater(%443, %444) /* ty=Tensor[(9, 242), bool] */;
  %459 = logical_and(%450, %451) /* ty=Tensor[(9, 242), bool] */;
  %460 = floor_divide(%454, %455) /* ty=Tensor[(9, 242), float64] */;
  (%456, meta[relay.Constant][27] /* ty=Tensor[(320), float32] */, %var_5431, %457, %458, %459, %460)
}

def @func_8511(%var_8510: Tensor[(126, 1), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(3, 7, 6), bool], Tensor[(126, 1), float32]) {
  %467 = fn (%var_8507: Tensor[(126, 1), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(3, 7, 6), bool], Tensor[(126, 1), float32]) {
    %461 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %462 = cast(%var_8507, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
    %463 = reshape(%462, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
    %464 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
    %465 = %461.0;
    %466 = @func_940(%463) /* ty=Tensor[(3, 7, 6), bool] */;
    (%464, %465, %466, %var_8507)
  };
  %467(%var_8510) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(3, 7, 6), bool], Tensor[(126, 1), float32]) */
}

def @func_11539() -> (Tensor[(14, 15, 16), float64],) {
  %468 = @func_9316() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %469 = %468.0;
  (%469,)
}

def @func_13796() -> (Tensor[(14, 15, 16), float64],) {
  %470 = @func_9872() /* ty=Tensor[(14, 15, 16), float64] */;
  (%470,)
}

def @func_5538() -> (Tensor[(14, 15, 16), float64],) {
  %471 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %472 = %471.0;
  (%472,)
}

def @func_5101(%var_5100: Tensor[(14, 15, 16), float64]) -> (Tensor[(14, 15, 16), bool], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(14, 2, 16), bool], Tensor[(448), float32]) {
  %490 = fn (%var_5072: Tensor[(14, 15, 16), float64]) -> (Tensor[(14, 15, 16), bool], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(14, 2, 16), bool], Tensor[(448), float32]) {
    %473 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %474 = %473.0;
    %475 = cast(%var_5072, dtype="bool") /* ty=Tensor[(14, 15, 16), bool] */;
    %476 = shape_of(%474, dtype="int32") /* ty=Tensor[(3), int32] */;
    %477 = cast(%474, dtype="bool") /* ty=Tensor[(14, 15, 16), bool] */;
    %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %479 = cast(meta[relay.Constant][29] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
    %480 = reshape(%479, newshape=[200]) /* ty=Tensor[(200), int16] */;
    %481 = @func_4242(%480) /* ty=(Tensor[(15, 9, 12), int64], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(3, 7, 6), bool], Tensor[(126), float32]) */;
    %482 = cast(meta[relay.Constant][30] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
    %483 = cast(meta[relay.Constant][30] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
    %484 = reshape(%482, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
    %485 = reshape(%483, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), float32] */;
    %486 = @func_471(%484, %485) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(14, 2, 16), bool]) */;
    %487 = greater(%477, %478) /* ty=Tensor[(14, 15, 16), bool] */;
    %488 = %481.1;
    %489 = %486.1;
    (%487, %488, meta[relay.Constant][29] /* ty=Tensor[(200), int16] */, %489, meta[relay.Constant][30] /* ty=Tensor[(448), float32] */)
  };
  %490(%var_5100) /* ty=(Tensor[(14, 15, 16), bool], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(14, 2, 16), bool], Tensor[(448), float32]) */
}

def @func_10375() -> (Tensor[(14, 15, 16), float64],) {
  %491 = @func_8876() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %492 = %491.0;
  (%492,)
}

def @func_12876() -> Tensor[(14, 15, 16), float64] {
  @func_12874() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_8136() -> Tensor[(14, 15, 16), float64] {
  %493 = fn () -> Tensor[(14, 15, 16), float64] {
    @func_7687() /* ty=Tensor[(14, 15, 16), float64] */
  };
  %493() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_14992() -> (Tensor[(14, 15, 16), float64],) {
  %494 = @func_10301() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %495 = %494.0;
  (%495,)
}

def @func_475(%var_473: Tensor[(14, 2, 16), float32], %var_474: Tensor[(14, 2, 16), float32]) -> (Tensor[(14, 2, 16), float32], Tensor[(14, 2, 16), bool]) {
  @func_471(%var_473, %var_474) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(14, 2, 16), bool]) */
}

def @func_7471(%var_7442: Tensor[(528), float64], %var_7443: Tensor[(900), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(528), float64], Tensor[(900), int16]) {
  %496 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %497 = cast(%var_7442, dtype="float64") /* ty=Tensor[(528), float64] */;
  %498 = cast(%var_7442, dtype="float64") /* ty=Tensor[(528), float64] */;
  %499 = cast(%var_7443, dtype="int16") /* ty=Tensor[(900), int16] */;
  %500 = reshape(%497, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), float64] */;
  %501 = reshape(%498, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), float64] */;
  %502 = reshape(%499, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %503 = @func_2812(%500, %501, %502) /* ty=(Tensor[(8, 6, 11), float64], Tensor[(8, 6, 11), int8], Tensor[(9, 10, 10), bool], Tensor[(900), int16]) */;
  %504 = @func_5786() /* ty=Tensor[(14, 15, 16), float64] */;
  %505 = %496.1;
  %506 = %503.3;
  (%504, %505, %506, %var_7442, %var_7443)
}

def @func_14766() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %511 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
    %507 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %508 = @func_10301() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %509 = %507.0;
    %510 = %508.0;
    (%509, %510)
  };
  %511() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_9184(%var_9181: Tensor[(12), int32], %var_9182: Tensor[(48), int32], %var_9183: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float32], Tensor[(900), int16], Tensor[(242), int8], Tensor[(9, 10, 10), int32], Tensor[(12), int32], Tensor[(48), int32], Tensor[(2178), uint64]) {
  @func_9179(%var_9181, %var_9182, %var_9183) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(900), int16], Tensor[(242), int8], Tensor[(9, 10, 10), int32], Tensor[(12), int32], Tensor[(48), int32], Tensor[(2178), uint64]) */
}

def @func_11077() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  @func_11075() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_16227() -> (Tensor[(14, 15, 16), float64],) {
  %514 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %512 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
    %513 = %512.0;
    (%513,)
  };
  %514() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_12327() -> (Tensor[(320), float32],) {
  %515 = @func_10815() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(242), int8], Tensor[(900), int16], Tensor[(2178, 1), int8], Tensor[(320), float32], Tensor[(80, 4), float32], Tensor[(200), int16]) */;
  %516 = %515.5;
  (%516,)
}

def @func_13321() -> Tensor[(14, 15, 16), float64] {
  @func_13319() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_13548() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %517 = @func_10929() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %518 = %517.0;
  %519 = @func_12725() /* ty=Tensor[(14, 15, 16), float64] */;
  (%518, %519)
}

def @func_13810() -> Tensor[(14, 15, 16), float64] {
  %520 = @func_11841() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %520.3
}

def @func_13308(%var_13304: Tensor[(1, 900), int16], %var_13305: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(200), int16], Tensor[(1, 900), int16], Tensor[(2178), int8]) {
  %521 = cast(meta[relay.Constant][31] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %522 = cast(meta[relay.Constant][32] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %523 = cast(%var_13304, dtype="int16") /* ty=Tensor[(1, 900), int16] */;
  %524 = cast(%var_13305, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %525 = reshape(%521, newshape=[1, 242]) /* ty=Tensor[(1, 242), int8] */;
  %526 = reshape(%522, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %527 = reshape(%523, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %528 = reshape(%524, newshape=[9, 242]) /* ty=Tensor[(9, 242), int8] */;
  %529 = @func_5484(%525, %526, %527, %528) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), float32], Tensor[(9, 242), bool], Tensor[(9, 242), bool], Tensor[(9, 242), float64]) */;
  %530 = @func_12904() /* ty=Tensor[(14, 15, 16), float64] */;
  %531 = %529.5;
  (%530, %531, meta[relay.Constant][31] /* ty=Tensor[(242), int8] */, meta[relay.Constant][32] /* ty=Tensor[(200), int16] */, %var_13304, %var_13305)
}

def @func_5490(%var_5486: Tensor[(1, 242), int8], %var_5487: Tensor[(200), int16], %var_5488: Tensor[(900), int16], %var_5489: Tensor[(9, 242), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), float32], Tensor[(9, 242), bool], Tensor[(9, 242), bool], Tensor[(9, 242), float64]) {
  @func_5484(%var_5486, %var_5487, %var_5488, %var_5489) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), float32], Tensor[(9, 242), bool], Tensor[(9, 242), bool], Tensor[(9, 242), float64]) */
}

def @func_6387(%var_6385: Tensor[(480), float64], %var_6386: Tensor[(14, 15, 16), float64]) -> (Tensor[(5, 4, 10), bool], Tensor[(5, 16, 6), float64], Tensor[(480), float64], Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), uint64]) {
  %548 = fn (%var_6312: Tensor[(480), float64], %var_6370: Tensor[(14, 15, 16), float64]) -> (Tensor[(5, 4, 10), bool], Tensor[(5, 16, 6), float64], Tensor[(480), float64], Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), uint64]) {
    %532 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
    %533 = cast(%var_6312, dtype="float64") /* ty=Tensor[(480), float64] */;
    %534 = reshape(%533, newshape=[5, 16, 6]) /* ty=Tensor[(5, 16, 6), float64] */;
    %535 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
    %536 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %537 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
    %538 = %537.1;
    %539 = cast(%var_6370, dtype="uint64") /* ty=Tensor[(14, 15, 16), uint64] */;
    %540 = shape_of(%538, dtype="int32") /* ty=Tensor[(3), int32] */;
    %541 = cast(%538, dtype="uint64") /* ty=Tensor[(14, 15, 16), uint64] */;
    %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %543 = %532.2;
    %544 = @func_4072(%534) /* ty=Tensor[(5, 16, 6), float64] */;
    %545 = %535.2;
    %546 = %536.0;
    %547 = right_shift(%541, %542) /* ty=Tensor[(14, 15, 16), uint64] */;
    (%543, %544, %var_6312, %545, %546, %547)
  };
  %548(%var_6385, %var_6386) /* ty=(Tensor[(5, 4, 10), bool], Tensor[(5, 16, 6), float64], Tensor[(480), float64], Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), uint64]) */
}

def @func_12274() -> Tensor[(14, 15, 16), float64] {
  %549 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %549.0
}

def @func_5127(%var_5124: Tensor[(13, 13, 14), int64], %var_5125: Tensor[(13, 13, 14), int64], %var_5126: Tensor[(200), int16]) -> (Tensor[(13, 13, 14), bool], Tensor[(200), int16], Tensor[(200), int16]) {
  @func_5122(%var_5124, %var_5125, %var_5126) /* ty=(Tensor[(13, 13, 14), bool], Tensor[(200), int16], Tensor[(200), int16]) */
}

def @func_7140(%var_7137: Tensor[(10, 20), int16], %var_7138: Tensor[(1, 900), int16], %var_7139: Tensor[(2366), int64]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(242), int8], Tensor[(320), float32], Tensor[(10, 20), int16], Tensor[(1, 900), int16], Tensor[(200), int16], Tensor[(2366), int64], int32, Tensor[(24, 22), float64], Tensor[(60), int32]) {
  %577 = fn (%var_7105: Tensor[(10, 20), int16], %var_7106: Tensor[(1, 900), int16], %var_7115: Tensor[(2366), int64]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(242), int8], Tensor[(320), float32], Tensor[(10, 20), int16], Tensor[(1, 900), int16], Tensor[(200), int16], Tensor[(2366), int64], int32, Tensor[(24, 22), float64], Tensor[(60), int32]) {
    %550 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %551 = cast(meta[relay.Constant][33] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
    %552 = cast(meta[relay.Constant][34] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %553 = cast(%var_7105, dtype="int16") /* ty=Tensor[(10, 20), int16] */;
    %554 = cast(%var_7106, dtype="int16") /* ty=Tensor[(1, 900), int16] */;
    %555 = reshape(%551, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), int8] */;
    %556 = reshape(%552, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %557 = reshape(%553, newshape=[200]) /* ty=Tensor[(200), int16] */;
    %558 = reshape(%554, newshape=[3, 300]) /* ty=Tensor[(3, 300), int16] */;
    %559 = @func_4143(%555, %556, %557, %558) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */;
    %560 = cast(%var_7115, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %561 = cast(%var_7115, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %562 = cast(%var_7105, dtype="int16") /* ty=Tensor[(10, 20), int16] */;
    %563 = reshape(%560, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
    %564 = reshape(%561, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
    %565 = reshape(%562, newshape=[200]) /* ty=Tensor[(200), int16] */;
    %566 = @func_5122(%563, %564, %565) /* ty=(Tensor[(13, 13, 14), bool], Tensor[(200), int16], Tensor[(200), int16]) */;
    %567 = cast(meta[relay.Constant][35] /* ty=Tensor[(24, 22), float64] */, dtype="float64") /* ty=Tensor[(24, 22), float64] */;
    %568 = cast(meta[relay.Constant][36] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
    %569 = reshape(%567, newshape=[528]) /* ty=Tensor[(528), float64] */;
    %570 = reshape(%568, newshape=[60]) /* ty=Tensor[(60), int32] */;
    %571 = @func_6495(%569, %570) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(9, 10, 10), bool], Tensor[(528), float64], Tensor[(900), int16], Tensor[(1, 5, 12), int32], int32, Tensor[(60), int32]) */;
    %572 = %550.0;
    %573 = @func_5648() /* ty=Tensor[(14, 15, 16), float64] */;
    %574 = %559.2;
    %575 = %566.1;
    %576 = %571.5;
    (%572, %573, %574, meta[relay.Constant][33] /* ty=Tensor[(242), int8] */, meta[relay.Constant][34] /* ty=Tensor[(320), float32] */, %var_7105, %var_7106, %575, %var_7115, %576, meta[relay.Constant][35] /* ty=Tensor[(24, 22), float64] */, meta[relay.Constant][36] /* ty=Tensor[(60), int32] */)
  };
  %577(%var_7137, %var_7138, %var_7139) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(242), int8], Tensor[(320), float32], Tensor[(10, 20), int16], Tensor[(1, 900), int16], Tensor[(200), int16], Tensor[(2366), int64], int32, Tensor[(24, 22), float64], Tensor[(60), int32]) */
}

def @func_7851(%var_7849: Tensor[(14, 15, 16), float64], %var_7850: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), bool], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(450, 2), int16], Tensor[(2178), int8], Tensor[(14, 15, 16), float32], Tensor[(528), float64], Tensor[(60), int32], Tensor[(3, 7, 6), int32], Tensor[(1, 200), int16], Tensor[(3, 7, 6), float64]) {
  @func_7847(%var_7849, %var_7850) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), bool], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(450, 2), int16], Tensor[(2178), int8], Tensor[(14, 15, 16), float32], Tensor[(528), float64], Tensor[(60), int32], Tensor[(3, 7, 6), int32], Tensor[(1, 200), int16], Tensor[(3, 7, 6), float64]) */
}

def @func_14565() -> (Tensor[(300), bool],) {
  %578 = @func_7211() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(5, 12, 5), bool], Tensor[(300), bool]) */;
  %579 = %578.3;
  (%579,)
}

def @func_2204(%var_2197: Tensor[(5, 12, 5), bool]) -> Tensor[(5, 12, 5), bool] {
  %580 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 12, 5), bool] */, dtype="bool") /* ty=Tensor[(5, 12, 5), bool] */;
  %581 = shape_of(%var_2197, dtype="int32") /* ty=Tensor[(3), int32] */;
  %582 = cast(%var_2197, dtype="bool") /* ty=Tensor[(5, 12, 5), bool] */;
  %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%582, %583) /* ty=Tensor[(5, 12, 5), bool] */
}

def @func_5579() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %588 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
    %584 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %585 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %586 = %584.0;
    %587 = %585.0;
    (%586, %587)
  };
  %588() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_8251(%var_8249: Tensor[(14, 15, 16), float32], %var_8250: Tensor[(14, 15, 16), float32]) -> (Tensor[(14, 15, 16), uint16], Tensor[(14, 15, 16), float32], Tensor[(14, 15, 16), float64]) {
  %602 = fn (%var_8202: Tensor[(14, 15, 16), float32], %var_8209: Tensor[(14, 15, 16), float32]) -> (Tensor[(14, 15, 16), uint16], Tensor[(14, 15, 16), float32], Tensor[(14, 15, 16), float64]) {
    %589 = @func_6056() /* ty=Tensor[(14, 15, 16), float32] */;
    %590 = cast(%var_8202, dtype="uint16") /* ty=Tensor[(14, 15, 16), uint16] */;
    %591 = shape_of(%589, dtype="int32") /* ty=Tensor[(3), int32] */;
    %592 = cast(%589, dtype="uint16") /* ty=Tensor[(14, 15, 16), uint16] */;
    %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %594 = cast(%var_8209, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
    %595 = shape_of(%var_8202, dtype="int32") /* ty=Tensor[(3), int32] */;
    %596 = cast(%var_8202, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
    %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %598 = @func_7993() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
    %599 = minimum(%592, %593) /* ty=Tensor[(14, 15, 16), uint16] */;
    %600 = mod(%596, %597) /* ty=Tensor[(14, 15, 16), float32] */;
    %601 = %598.0;
    (%599, %600, %601)
  };
  %602(%var_8249, %var_8250) /* ty=(Tensor[(14, 15, 16), uint16], Tensor[(14, 15, 16), float32], Tensor[(14, 15, 16), float64]) */
}

def @func_5861(%var_5854: Tensor[(11, 22), int8], %var_5857: Tensor[(22, 99), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), float32], Tensor[(11, 22), int8], Tensor[(100, 2), int16], Tensor[(900), int16], Tensor[(22, 99), int8]) {
  %603 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %604 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %605 = cast(%var_5854, dtype="int8") /* ty=Tensor[(11, 22), int8] */;
  %606 = cast(meta[relay.Constant][38] /* ty=Tensor[(100, 2), int16] */, dtype="int16") /* ty=Tensor[(100, 2), int16] */;
  %607 = cast(meta[relay.Constant][39] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %608 = cast(%var_5857, dtype="int8") /* ty=Tensor[(22, 99), int8] */;
  %609 = reshape(%605, newshape=[1, 242]) /* ty=Tensor[(1, 242), int8] */;
  %610 = reshape(%606, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %611 = reshape(%607, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %612 = reshape(%608, newshape=[9, 242]) /* ty=Tensor[(9, 242), int8] */;
  %613 = @func_5484(%609, %610, %611, %612) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), float32], Tensor[(9, 242), bool], Tensor[(9, 242), bool], Tensor[(9, 242), float64]) */;
  %614 = %603.0;
  %615 = %604.1;
  %616 = %613.3;
  (%614, %615, %616, %var_5854, meta[relay.Constant][38] /* ty=Tensor[(100, 2), int16] */, meta[relay.Constant][39] /* ty=Tensor[(900), int16] */, %var_5857)
}

def @func_7891() -> Tensor[(14, 15, 16), float64] {
  @func_7581() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_2207(%var_2205: Tensor[(5, 12, 5), bool]) -> Tensor[(5, 12, 5), bool] {
  @func_2204(%var_2205) /* ty=Tensor[(5, 12, 5), bool] */
}

def @func_8612(%var_8610: Tensor[(13, 16, 9), float32]) -> (Tensor[(13, 16, 9), float32], Tensor[(14, 15, 16), float32], Tensor[(14, 15, 16), float64]) {
  @func_8609(%var_8610) /* ty=(Tensor[(13, 16, 9), float32], Tensor[(14, 15, 16), float32], Tensor[(14, 15, 16), float64]) */
}

def @func_12211() -> (Tensor[(14, 15, 16), float64],) {
  %618 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %617 = @func_7157() /* ty=Tensor[(14, 15, 16), float64] */;
    (%617,)
  };
  %618() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_9396() -> Tensor[(14, 15, 16), float64] {
  @func_9337() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_9486(%var_9483: float32, %var_9484: Tensor[(1, 6, 9), float32], %var_9485: Tensor[(11, 7), float64]) -> (Tensor[(1, 6, 9), float32], Tensor[(14, 15, 16), float64], Tensor[(7, 1, 11), float64], Tensor[(11, 7), float64]) {
  %627 = fn (%var_9461: float32, %var_9462: Tensor[(1, 6, 9), float32], %var_9480: Tensor[(11, 7), float64]) -> (Tensor[(1, 6, 9), float32], Tensor[(14, 15, 16), float64], Tensor[(7, 1, 11), float64], Tensor[(11, 7), float64]) {
    %619 = cast(%var_9461, dtype="float32") /* ty=float32 */;
    %620 = cast(%var_9462, dtype="float32") /* ty=Tensor[(1, 6, 9), float32] */;
    %621 = @func_8123() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %622 = cast(%var_9480, dtype="float64") /* ty=Tensor[(11, 7), float64] */;
    %623 = reshape(%622, newshape=[7, 1, 11]) /* ty=Tensor[(7, 1, 11), float64] */;
    %624 = divide(%619, %620) /* ty=Tensor[(1, 6, 9), float32] */;
    %625 = %621.0;
    %626 = @func_6553(%623) /* ty=Tensor[(7, 1, 11), float64] */;
    (%624, %625, %626, %var_9480)
  };
  %627(%var_9483, %var_9484, %var_9485) /* ty=(Tensor[(1, 6, 9), float32], Tensor[(14, 15, 16), float64], Tensor[(7, 1, 11), float64], Tensor[(11, 7), float64]) */
}

def @func_6965(%var_6962: Tensor[(242), int8], %var_6963: Tensor[(900), int16], %var_6964: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(200), int16], Tensor[(900), int16], Tensor[(2178), int8]) {
  %642 = fn (%var_6947: Tensor[(242), int8], %var_6949: Tensor[(900), int16], %var_6950: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(200), int16], Tensor[(900), int16], Tensor[(2178), int8]) {
    %628 = @func_6622() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %629 = %628.0;
    %630 = cast(%629, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
    %631 = cast(%var_6947, dtype="int8") /* ty=Tensor[(242), int8] */;
    %632 = cast(meta[relay.Constant][40] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
    %633 = cast(%var_6949, dtype="int16") /* ty=Tensor[(900), int16] */;
    %634 = cast(%var_6950, dtype="int8") /* ty=Tensor[(2178), int8] */;
    %635 = reshape(%631, newshape=[1, 242]) /* ty=Tensor[(1, 242), int8] */;
    %636 = reshape(%632, newshape=[200]) /* ty=Tensor[(200), int16] */;
    %637 = reshape(%633, newshape=[900]) /* ty=Tensor[(900), int16] */;
    %638 = reshape(%634, newshape=[9, 242]) /* ty=Tensor[(9, 242), int8] */;
    %639 = @func_5484(%635, %636, %637, %638) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), float32], Tensor[(9, 242), bool], Tensor[(9, 242), bool], Tensor[(9, 242), float64]) */;
    %640 = log2(%630) /* ty=Tensor[(14, 15, 16), float64] */;
    %641 = %639.4;
    (%640, %641, %var_6947, meta[relay.Constant][40] /* ty=Tensor[(200), int16] */, %var_6949, %var_6950)
  };
  %642(%var_6962, %var_6963, %var_6964) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(200), int16], Tensor[(900), int16], Tensor[(2178), int8]) */
}

def @func_6556(%var_6554: Tensor[(7, 1, 11), float64]) -> Tensor[(7, 1, 11), float64] {
  @func_6553(%var_6554) /* ty=Tensor[(7, 1, 11), float64] */
}

def @func_10335() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %646 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
    %643 = @func_9971() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %644 = %643.0;
    %645 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
    (%644, %645)
  };
  %646() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_12598(%var_12594: Tensor[(60, 14), float64], %var_12595: Tensor[(320), float32], %var_12596: Tensor[(630), int32], %var_12597: Tensor[(480), float64]) -> (Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(60, 14), float64], Tensor[(320), float32], Tensor[(630), int32], Tensor[(5, 16, 6), float64], Tensor[(480), float64]) {
  %659 = fn (%var_12565: Tensor[(60, 14), float64], %var_12566: Tensor[(320), float32], %var_12567: Tensor[(630), int32], %var_12573: Tensor[(480), float64]) -> (Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(60, 14), float64], Tensor[(320), float32], Tensor[(630), int32], Tensor[(5, 16, 6), float64], Tensor[(480), float64]) {
    %647 = cast(%var_12565, dtype="float64") /* ty=Tensor[(60, 14), float64] */;
    %648 = cast(%var_12566, dtype="float32") /* ty=Tensor[(320), float32] */;
    %649 = cast(%var_12567, dtype="int32") /* ty=Tensor[(630), int32] */;
    %650 = reshape(%647, newshape=[840]) /* ty=Tensor[(840), float64] */;
    %651 = reshape(%648, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %652 = reshape(%649, newshape=[630]) /* ty=Tensor[(630), int32] */;
    %653 = @func_11296(%650, %651, %652) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 14, 12), float64], Tensor[(840), float64], Tensor[(14, 15, 16), float64], Tensor[(7, 1, 11), float64], Tensor[(77), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(320), float32], Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32]) */;
    %654 = cast(%var_12573, dtype="float64") /* ty=Tensor[(480), float64] */;
    %655 = reshape(%654, newshape=[5, 16, 6]) /* ty=Tensor[(5, 16, 6), float64] */;
    %656 = @func_12274() /* ty=Tensor[(14, 15, 16), float64] */;
    %657 = %653.10;
    %658 = @func_4072(%655) /* ty=Tensor[(5, 16, 6), float64] */;
    (%656, %657, %var_12565, %var_12566, %var_12567, %658, %var_12573)
  };
  %659(%var_12594, %var_12595, %var_12596, %var_12597) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(60, 14), float64], Tensor[(320), float32], Tensor[(630), int32], Tensor[(5, 16, 6), float64], Tensor[(480), float64]) */
}

def @func_7212() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(5, 12, 5), bool], Tensor[(300), bool]) {
  %668 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(5, 12, 5), bool], Tensor[(300), bool]) {
    %660 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %661 = @func_5929() /* ty=Tensor[(14, 15, 16), float64] */;
    %662 = cast(%661, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
    %663 = cast(meta[relay.Constant][41] /* ty=Tensor[(300), bool] */, dtype="bool") /* ty=Tensor[(300), bool] */;
    %664 = reshape(%663, newshape=[5, 12, 5]) /* ty=Tensor[(5, 12, 5), bool] */;
    %665 = %660.0;
    %666 = tan(%662) /* ty=Tensor[(14, 15, 16), float32] */;
    %667 = @func_2204(%664) /* ty=Tensor[(5, 12, 5), bool] */;
    (%665, %666, %667, meta[relay.Constant][41] /* ty=Tensor[(300), bool] */)
  };
  %668() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(5, 12, 5), bool], Tensor[(300), bool]) */
}

def @func_14550() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  @func_14548() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_7284() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %669 = @func_6622() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %670 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %671 = %669.0;
  %672 = %670.0;
  (%671, %672)
}

def @func_12132(%var_12130: Tensor[(15, 12, 3), uint8], %var_12131: Tensor[(15, 12, 3), uint8]) -> Tensor[(15, 12, 3), uint8] {
  %677 = fn (%var_12118: Tensor[(15, 12, 3), uint8], %var_12119: Tensor[(15, 12, 3), uint8]) -> Tensor[(15, 12, 3), uint8] {
    %673 = cast(%var_12119, dtype="uint8") /* ty=Tensor[(15, 12, 3), uint8] */;
    %674 = shape_of(%var_12118, dtype="int32") /* ty=Tensor[(3), int32] */;
    %675 = cast(%var_12118, dtype="uint8") /* ty=Tensor[(15, 12, 3), uint8] */;
    %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    maximum(%675, %676) /* ty=Tensor[(15, 12, 3), uint8] */
  };
  %677(%var_12130, %var_12131) /* ty=Tensor[(15, 12, 3), uint8] */
}

def @func_8315() -> Tensor[(14, 15, 16), float32] {
  %678 = @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */;
  %678.0
}

def @func_2816(%var_2813: Tensor[(8, 6, 11), float64], %var_2814: Tensor[(8, 6, 11), float64], %var_2815: Tensor[(900), int16]) -> (Tensor[(8, 6, 11), float64], Tensor[(8, 6, 11), int8], Tensor[(9, 10, 10), bool], Tensor[(900), int16]) {
  %696 = fn (%var_2786: Tensor[(8, 6, 11), float64], %var_2792: Tensor[(8, 6, 11), float64], %var_2809: Tensor[(900), int16]) -> (Tensor[(8, 6, 11), float64], Tensor[(8, 6, 11), int8], Tensor[(9, 10, 10), bool], Tensor[(900), int16]) {
    %679 = cast(%var_2786, dtype="float64") /* ty=Tensor[(8, 6, 11), float64] */;
    %680 = cosh(%679) /* ty=Tensor[(8, 6, 11), float64] */;
    %681 = cast(%var_2792, dtype="float64") /* ty=Tensor[(8, 6, 11), float64] */;
    %682 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
    %683 = cast(%680, dtype="float64") /* ty=Tensor[(8, 6, 11), float64] */;
    %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %685 = cast(%var_2792, dtype="int8") /* ty=Tensor[(8, 6, 11), int8] */;
    %686 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
    %687 = cast(%680, dtype="int8") /* ty=Tensor[(8, 6, 11), int8] */;
    %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %689 = cast(%var_2809, dtype="int16") /* ty=Tensor[(900), int16] */;
    %690 = cast(%var_2809, dtype="int16") /* ty=Tensor[(900), int16] */;
    %691 = reshape(%689, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
    %692 = reshape(%690, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
    %693 = floor_divide(%683, %684) /* ty=Tensor[(8, 6, 11), float64] */;
    %694 = bitwise_and(%687, %688) /* ty=Tensor[(8, 6, 11), int8] */;
    %695 = @func_2088(%691, %692) /* ty=Tensor[(9, 10, 10), bool] */;
    (%693, %694, %695, %var_2809)
  };
  %696(%var_2813, %var_2814, %var_2815) /* ty=(Tensor[(8, 6, 11), float64], Tensor[(8, 6, 11), int8], Tensor[(9, 10, 10), bool], Tensor[(900), int16]) */
}

def @func_15642() -> (Tensor[(14, 15, 16), float64],) {
  %699 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %697 = @func_10375() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %698 = %697.0;
    (%698,)
  };
  %699() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_15263() -> (Tensor[(14, 15, 16), float64],) {
  @func_15261() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_1940(%var_1926: Tensor[(5, 14, 12), float64]) -> (Tensor[(5, 14, 12), float64], Tensor[(5, 4, 10), bool], Tensor[(200), int16]) {
  %700 = cast(%var_1926, dtype="float64") /* ty=Tensor[(5, 14, 12), float64] */;
  %701 = cast(meta[relay.Constant][42] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %702 = cast(meta[relay.Constant][42] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %703 = reshape(%701, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
  %704 = reshape(%702, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
  %705 = acos(%700) /* ty=Tensor[(5, 14, 12), float64] */;
  %706 = @func_112(%703, %704) /* ty=Tensor[(5, 4, 10), bool] */;
  (%705, %706, meta[relay.Constant][42] /* ty=Tensor[(200), int16] */)
}

def @func_5931() -> Tensor[(14, 15, 16), float64] {
  @func_5929() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_13659() -> (Tensor[(14, 15, 16), float64],) {
  %709 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %707 = @func_10815() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(242), int8], Tensor[(900), int16], Tensor[(2178, 1), int8], Tensor[(320), float32], Tensor[(80, 4), float32], Tensor[(200), int16]) */;
    %708 = %707.0;
    (%708,)
  };
  %709() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_5323() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) {
  %710 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %711 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %712 = %711.0;
  %713 = cast(%712, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %714 = reshape(%713, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float64] */;
  %715 = @func_5099(%714) /* ty=(Tensor[(14, 15, 16), bool], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(14, 2, 16), bool], Tensor[(448), float32]) */;
  %716 = %710.0;
  %717 = %715.1;
  (%716, %712, %717)
}

def @func_9802(%var_9801: Tensor[(900), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(528), float64], Tensor[(900), int16]) {
  %726 = fn (%var_9793: Tensor[(900), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(528), float64], Tensor[(900), int16]) {
    %718 = @func_8054() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %719 = cast(meta[relay.Constant][43] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
    %720 = cast(%var_9793, dtype="int16") /* ty=Tensor[(900), int16] */;
    %721 = reshape(%719, newshape=[528]) /* ty=Tensor[(528), float64] */;
    %722 = reshape(%720, newshape=[900]) /* ty=Tensor[(900), int16] */;
    %723 = @func_7471(%721, %722) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(528), float64], Tensor[(900), int16]) */;
    %724 = %718.0;
    %725 = %723.1;
    (%724, %725, meta[relay.Constant][43] /* ty=Tensor[(528), float64] */, %var_9793)
  };
  %726(%var_9801) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(528), float64], Tensor[(900), int16]) */
}

def @func_8877() -> (Tensor[(14, 15, 16), float64],) {
  %729 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %727 = @func_8054() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %728 = %727.0;
    (%728,)
  };
  %729() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_10288(%var_10286: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(160, 2), float32], Tensor[(242), int8], Tensor[(200), int16], Tensor[(900), int16], Tensor[(2178), float64], Tensor[(9, 242), float64]) {
  @func_10285(%var_10286) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(320), float32], Tensor[(160, 2), float32], Tensor[(242), int8], Tensor[(200), int16], Tensor[(900), int16], Tensor[(2178), float64], Tensor[(9, 242), float64]) */
}

def @func_471(%var_460: Tensor[(14, 2, 16), float32], %var_466: Tensor[(14, 2, 16), float32]) -> (Tensor[(14, 2, 16), float32], Tensor[(14, 2, 16), bool]) {
  %730 = cast(%var_460, dtype="float32") /* ty=Tensor[(14, 2, 16), float32] */;
  %731 = cast(%var_466, dtype="bool") /* ty=Tensor[(14, 2, 16), bool] */;
  %732 = shape_of(%var_460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(%var_460, dtype="bool") /* ty=Tensor[(14, 2, 16), bool] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %735 = rsqrt(%730) /* ty=Tensor[(14, 2, 16), float32] */;
  %736 = greater(%733, %734) /* ty=Tensor[(14, 2, 16), bool] */;
  (%735, %736)
}

def @func_4148(%var_4144: Tensor[(2, 11, 11), int8], %var_4145: Tensor[(320), float32], %var_4146: Tensor[(200), int16], %var_4147: Tensor[(3, 300), int16]) -> (Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) {
  %765 = fn (%var_4096: Tensor[(2, 11, 11), int8], %var_4103: Tensor[(320), float32], %var_4104: Tensor[(200), int16], %var_4114: Tensor[(3, 300), int16]) -> (Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) {
    %737 = cast(%var_4096, dtype="int8") /* ty=Tensor[(2, 11, 11), int8] */;
    %738 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(2, 11, 11), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %739 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 11, 11), int8] */, dtype="int8") /* ty=Tensor[(2, 11, 11), int8] */;
    %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %741 = cast(%var_4103, dtype="float32") /* ty=Tensor[(320), float32] */;
    %742 = cast(%var_4104, dtype="int16") /* ty=Tensor[(200), int16] */;
    %743 = reshape(%741, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float32] */;
    %744 = reshape(%742, newshape=[200]) /* ty=Tensor[(200), int16] */;
    %745 = @func_670(%743, %744) /* ty=(Tensor[(16, 4, 5), float32], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(5, 4, 10), bool]) */;
    %746 = cast(%var_4114, dtype="int16") /* ty=Tensor[(3, 300), int16] */;
    %747 = cast(%var_4114, dtype="int16") /* ty=Tensor[(3, 300), int16] */;
    %748 = reshape(%746, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
    %749 = reshape(%747, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
    %750 = cast(meta[relay.Constant][45] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %751 = @func_2088(%748, %749) /* ty=Tensor[(9, 10, 10), bool] */;
    %752 = cast(%751, dtype="int16") /* ty=Tensor[(9, 10, 10), int16] */;
    %753 = reshape(%750, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %754 = reshape(%752, newshape=[18, 50]) /* ty=Tensor[(18, 50), int16] */;
    %755 = @func_3286(%753, %754) /* ty=(Tensor[(3, 7, 6), bool], Tensor[(126), float32], Tensor[(2, 12, 14), float64], Tensor[(9, 10, 10), bool], Tensor[(18, 50), int16]) */;
    %756 = %745.0;
    %757 = cast(%756, dtype="float32") /* ty=Tensor[(16, 4, 5), float32] */;
    %758 = cast(%var_4104, dtype="int16") /* ty=Tensor[(200), int16] */;
    %759 = reshape(%757, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float32] */;
    %760 = reshape(%758, newshape=[200]) /* ty=Tensor[(200), int16] */;
    %761 = @func_670(%759, %760) /* ty=(Tensor[(16, 4, 5), float32], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(5, 4, 10), bool]) */;
    %762 = subtract(%739, %740) /* ty=Tensor[(2, 11, 11), int8] */;
    %763 = %755.3;
    %764 = %761.2;
    (%762, %756, %var_4103, %var_4104, %751, %var_4114, %763, meta[relay.Constant][45] /* ty=Tensor[(126), float32] */, %764)
  };
  %765(%var_4144, %var_4145, %var_4146, %var_4147) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */
}

def @func_14481() -> (Tensor[(8, 6, 11), float64],) {
  @func_14479() /* ty=(Tensor[(8, 6, 11), float64],) */
}

def @func_16095() -> (Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64]) {
  %770 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64]) {
    %766 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
    %767 = @func_8862() /* ty=(Tensor[(8, 6, 11), float64], Tensor[(14, 15, 16), float64]) */;
    %768 = %766.1;
    %769 = %767.0;
    (%768, %769)
  };
  %770() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64]) */
}

def @func_6495(%var_6478: Tensor[(528), float64], %var_6491: Tensor[(60), int32]) -> (Tensor[(14, 15, 16), float32], Tensor[(9, 10, 10), bool], Tensor[(528), float64], Tensor[(900), int16], Tensor[(1, 5, 12), int32], int32, Tensor[(60), int32]) {
  %771 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %772 = %771.0;
  %773 = cast(%772, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %774 = cast(%var_6478, dtype="float64") /* ty=Tensor[(528), float64] */;
  %775 = cast(%var_6478, dtype="float64") /* ty=Tensor[(528), float64] */;
  %776 = cast(meta[relay.Constant][46] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %777 = reshape(%774, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), float64] */;
  %778 = reshape(%775, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), float64] */;
  %779 = reshape(%776, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %780 = @func_2812(%777, %778, %779) /* ty=(Tensor[(8, 6, 11), float64], Tensor[(8, 6, 11), int8], Tensor[(9, 10, 10), bool], Tensor[(900), int16]) */;
  %781 = cast(9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %782 = cast(%var_6491, dtype="int32") /* ty=Tensor[(60), int32] */;
  %783 = reshape(%781, newshape=[]) /* ty=int32 */;
  %784 = reshape(%782, newshape=[1, 5, 12]) /* ty=Tensor[(1, 5, 12), int32] */;
  %785 = @func_6015(%783, %784) /* ty=(Tensor[(1, 5, 12), int32],) */;
  %786 = atanh(%773) /* ty=Tensor[(14, 15, 16), float32] */;
  %787 = %780.2;
  %788 = %785.0;
  (%786, %787, %var_6478, meta[relay.Constant][46] /* ty=Tensor[(900), int16] */, %788, 9 /* ty=int32 */, %var_6491)
}

def @func_12779() -> (Tensor[(14, 15, 16), float64],) {
  %789 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %790 = %789.0;
  (%790,)
}

def @func_10413(%var_10387: Tensor[(15, 3, 14), int32], %var_10388: Tensor[(15, 3, 14), int32]) -> Tensor[(15, 3, 14), float64] {
  %791 = cast(%var_10388, dtype="int32") /* ty=Tensor[(15, 3, 14), int32] */;
  %792 = shape_of(%var_10387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %793 = cast(%var_10387, dtype="int32") /* ty=Tensor[(15, 3, 14), int32] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %795 = add(%793, %794) /* ty=Tensor[(15, 3, 14), int32] */;
  %796 = cast(%var_10387, dtype="float64") /* ty=Tensor[(15, 3, 14), float64] */;
  %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%795, dtype="float64") /* ty=Tensor[(15, 3, 14), float64] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%798, %799) /* ty=Tensor[(15, 3, 14), float64] */
}

def @func_7847(%var_7734: Tensor[(14, 15, 16), float64], %var_7770: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), bool], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(450, 2), int16], Tensor[(2178), int8], Tensor[(14, 15, 16), float32], Tensor[(528), float64], Tensor[(60), int32], Tensor[(3, 7, 6), int32], Tensor[(1, 200), int16], Tensor[(3, 7, 6), float64]) {
  %800 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %801 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %802 = @func_7687() /* ty=Tensor[(14, 15, 16), float64] */;
  %803 = cast(%var_7734, dtype="bool") /* ty=Tensor[(14, 15, 16), bool] */;
  %804 = shape_of(%802, dtype="int32") /* ty=Tensor[(3), int32] */;
  %805 = cast(%802, dtype="bool") /* ty=Tensor[(14, 15, 16), bool] */;
  %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %807 = cast(meta[relay.Constant][47] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %808 = cast(meta[relay.Constant][48] /* ty=Tensor[(450, 2), int16] */, dtype="int16") /* ty=Tensor[(450, 2), int16] */;
  %809 = cast(%var_7770, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %810 = reshape(%807, newshape=[242]) /* ty=Tensor[(242), int8] */;
  %811 = reshape(%808, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %812 = reshape(%809, newshape=[2178]) /* ty=Tensor[(2178), int8] */;
  %813 = @func_6961(%810, %811, %812) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(200), int16], Tensor[(900), int16], Tensor[(2178), int8]) */;
  %814 = cast(meta[relay.Constant][49] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %815 = cast(meta[relay.Constant][50] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %816 = reshape(%814, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %817 = reshape(%815, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %818 = @func_6495(%816, %817) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(9, 10, 10), bool], Tensor[(528), float64], Tensor[(900), int16], Tensor[(1, 5, 12), int32], int32, Tensor[(60), int32]) */;
  %819 = cast(meta[relay.Constant][51] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %820 = reshape(%819, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %821 = @func_940(%820) /* ty=Tensor[(3, 7, 6), bool] */;
  %822 = cast(%821, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %823 = asinh(%822) /* ty=Tensor[(3, 7, 6), float32] */;
  %824 = cast(meta[relay.Constant][51] /* ty=Tensor[(126), float32] */, dtype="int32") /* ty=Tensor[(126), int32] */;
  %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%823, dtype="int32") /* ty=Tensor[(3, 7, 6), int32] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %828 = @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */;
  %829 = cast(meta[relay.Constant][51] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %830 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(%823, dtype="float32") /* ty=Tensor[(3, 7, 6), float32] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %833 = power(%831, %832) /* ty=Tensor[(3, 7, 6), float32] */;
  %834 = cast(%833, dtype="float64") /* ty=Tensor[(3, 7, 6), float64] */;
  %835 = %800.0;
  %836 = %801.0;
  %837 = equal(%805, %806) /* ty=Tensor[(14, 15, 16), bool] */;
  %838 = %813.1;
  %839 = %818.0;
  %840 = left_shift(%826, %827) /* ty=Tensor[(3, 7, 6), int32] */;
  %841 = %828.2;
  %842 = sqrt(%834) /* ty=Tensor[(3, 7, 6), float64] */;
  (%835, %836, %837, %838, meta[relay.Constant][47] /* ty=Tensor[(242), int8] */, meta[relay.Constant][48] /* ty=Tensor[(450, 2), int16] */, %var_7770, %839, meta[relay.Constant][49] /* ty=Tensor[(528), float64] */, meta[relay.Constant][50] /* ty=Tensor[(60), int32] */, %840, %841, %842)
}

def @func_5349() -> (Tensor[(14, 15, 16), float64],) {
  @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_15240(%var_15231: Tensor[(900, 1), int16]) -> (Tensor[(14, 15, 16), float32], Tensor[(9, 10, 10), bool], Tensor[(900, 1), int16]) {
  %843 = @func_11501() /* ty=(Tensor[(14, 15, 16), float32],) */;
  %844 = cast(%var_15231, dtype="int16") /* ty=Tensor[(900, 1), int16] */;
  %845 = cast(%var_15231, dtype="int16") /* ty=Tensor[(900, 1), int16] */;
  %846 = reshape(%844, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %847 = reshape(%845, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %848 = %843.0;
  %849 = @func_2088(%846, %847) /* ty=Tensor[(9, 10, 10), bool] */;
  (%848, %849, %var_15231)
}

def @func_5614(%var_5612: Tensor[(7, 8, 1), uint8], %var_5613: Tensor[(7, 8, 13), uint8]) -> Tensor[(7, 8, 13), int16] {
  %855 = fn (%var_5585: Tensor[(7, 8, 1), uint8], %var_5586: Tensor[(7, 8, 13), uint8]) -> Tensor[(7, 8, 13), int16] {
    %850 = cast(%var_5585, dtype="uint8") /* ty=Tensor[(7, 8, 1), uint8] */;
    %851 = cast(%var_5586, dtype="uint8") /* ty=Tensor[(7, 8, 13), uint8] */;
    %852 = subtract(%850, %851) /* ty=Tensor[(7, 8, 13), uint8] */;
    %853 = cast(%852, dtype="int16") /* ty=Tensor[(7, 8, 13), int16] */;
    %854 = cast(%var_5585, dtype="int16") /* ty=Tensor[(7, 8, 1), int16] */;
    add(%853, %854) /* ty=Tensor[(7, 8, 13), int16] */
  };
  %855(%var_5612, %var_5613) /* ty=Tensor[(7, 8, 13), int16] */
}

def @func_6623() -> (Tensor[(14, 15, 16), float64],) {
  %858 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %856 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
    %857 = %856.0;
    (%857,)
  };
  %858() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_5728(%var_5726: uint8, %var_5727: Tensor[(7, 16, 2), uint8]) -> (Tensor[(7, 16, 2), bool], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(495), float32]) {
  @func_5724(%var_5726, %var_5727) /* ty=(Tensor[(7, 16, 2), bool], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(495), float32]) */
}

def @func_10054(%var_10052: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), int32], Tensor[(12), int32], Tensor[(2, 24), int32], Tensor[(2178), int8]) {
  %859 = @func_9971() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %860 = cast(meta[relay.Constant][52] /* ty=Tensor[(12), int32] */, dtype="int32") /* ty=Tensor[(12), int32] */;
  %861 = cast(meta[relay.Constant][53] /* ty=Tensor[(2, 24), int32] */, dtype="int32") /* ty=Tensor[(2, 24), int32] */;
  %862 = cast(%var_10052, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %863 = reshape(%860, newshape=[12]) /* ty=Tensor[(12), int32] */;
  %864 = reshape(%861, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %865 = reshape(%862, newshape=[2178]) /* ty=Tensor[(2178), int8] */;
  %866 = @func_9179(%863, %864, %865) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(900), int16], Tensor[(242), int8], Tensor[(9, 10, 10), int32], Tensor[(12), int32], Tensor[(48), int32], Tensor[(2178), uint64]) */;
  %867 = %859.0;
  %868 = %866.3;
  (%867, %868, meta[relay.Constant][52] /* ty=Tensor[(12), int32] */, meta[relay.Constant][53] /* ty=Tensor[(2, 24), int32] */, %var_10052)
}

def @func_11300(%var_11297: Tensor[(840), float64], %var_11298: Tensor[(320), float32], %var_11299: Tensor[(630), int32]) -> (Tensor[(14, 15, 16), float32], Tensor[(5, 14, 12), float64], Tensor[(840), float64], Tensor[(14, 15, 16), float64], Tensor[(7, 1, 11), float64], Tensor[(77), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(320), float32], Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32]) {
  %891 = fn (%var_11172: Tensor[(840), float64], %var_11223: Tensor[(320), float32], %var_11286: Tensor[(630), int32]) -> (Tensor[(14, 15, 16), float32], Tensor[(5, 14, 12), float64], Tensor[(840), float64], Tensor[(14, 15, 16), float64], Tensor[(7, 1, 11), float64], Tensor[(77), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(320), float32], Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32]) {
    %869 = cast(%var_11172, dtype="float64") /* ty=Tensor[(840), float64] */;
    %870 = reshape(%869, newshape=[5, 14, 12]) /* ty=Tensor[(5, 14, 12), float64] */;
    %871 = @func_1940(%870) /* ty=(Tensor[(5, 14, 12), float64], Tensor[(5, 4, 10), bool], Tensor[(200), int16]) */;
    %872 = cast(meta[relay.Constant][54] /* ty=Tensor[(77), float64] */, dtype="float64") /* ty=Tensor[(77), float64] */;
    %873 = reshape(%872, newshape=[7, 1, 11]) /* ty=Tensor[(7, 1, 11), float64] */;
    %874 = @func_9281() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %875 = cast(%var_11223, dtype="float32") /* ty=Tensor[(320), float32] */;
    %876 = reshape(%875, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %877 = @func_9551(%876) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 12, 5), bool], Tensor[(320), float32], Tensor[(200), int16]) */;
    %878 = @func_7540() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %879 = cast(%var_11286, dtype="int32") /* ty=Tensor[(630), int32] */;
    %880 = cast(%var_11286, dtype="int32") /* ty=Tensor[(630), int32] */;
    %881 = reshape(%879, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
    %882 = reshape(%880, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
    %883 = @func_6056() /* ty=Tensor[(14, 15, 16), float32] */;
    %884 = %871.0;
    %885 = @func_9396() /* ty=Tensor[(14, 15, 16), float64] */;
    %886 = @func_6553(%873) /* ty=Tensor[(7, 1, 11), float64] */;
    %887 = %874.0;
    %888 = %877.0;
    %889 = %878.0;
    %890 = @func_10413(%881, %882) /* ty=Tensor[(15, 3, 14), float64] */;
    (%883, %884, %var_11172, %885, %886, meta[relay.Constant][54] /* ty=Tensor[(77), float64] */, %887, %888, %var_11223, %889, %890, %var_11286)
  };
  %891(%var_11297, %var_11298, %var_11299) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 14, 12), float64], Tensor[(840), float64], Tensor[(14, 15, 16), float64], Tensor[(7, 1, 11), float64], Tensor[(77), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32], Tensor[(320), float32], Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32]) */
}

def @func_14262() -> (Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64]) {
  %892 = @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */;
  %893 = %892.1;
  %894 = @func_11589() /* ty=Tensor[(14, 15, 16), float64] */;
  (%893, %894)
}

def @func_16024() -> (Tensor[(14, 15, 16), float64], Tensor[(5, 16, 6), float64], Tensor[(4, 120), float64]) {
  %895 = cast(meta[relay.Constant][55] /* ty=Tensor[(4, 120), float64] */, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
  %896 = reshape(%895, newshape=[5, 16, 6]) /* ty=Tensor[(5, 16, 6), float64] */;
  %897 = @func_9910() /* ty=Tensor[(14, 15, 16), float64] */;
  %898 = @func_4072(%896) /* ty=Tensor[(5, 16, 6), float64] */;
  (%897, %898, meta[relay.Constant][55] /* ty=Tensor[(4, 120), float64] */)
}

def @func_16499() -> Tensor[(14, 15, 16), float64] {
  %900 = fn () -> Tensor[(14, 15, 16), float64] {
    %899 = @func_10895() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
    %899.0
  };
  %900() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_6156() -> (Tensor[(14, 15, 16), float64],) {
  @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_9943() -> Tensor[(14, 15, 16), float32] {
  @func_7933() /* ty=Tensor[(14, 15, 16), float32] */
}

def @func_10866() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %905 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
    %901 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %902 = @func_8862() /* ty=(Tensor[(8, 6, 11), float64], Tensor[(14, 15, 16), float64]) */;
    %903 = %901.0;
    %904 = %902.1;
    (%903, %904)
  };
  %905() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_7687() -> Tensor[(14, 15, 16), float64] {
  @func_5786() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_5724(%var_5671: uint8, %var_5672: Tensor[(7, 16, 2), uint8]) -> (Tensor[(7, 16, 2), bool], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(495), float32]) {
  %906 = cast(%var_5671, dtype="bool") /* ty=bool */;
  %907 = cast(%var_5672, dtype="bool") /* ty=Tensor[(7, 16, 2), bool] */;
  %908 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %909 = cast(meta[relay.Constant][56] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %910 = cast(meta[relay.Constant][56] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %911 = reshape(%909, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %912 = reshape(%910, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
  %913 = @func_2088(%911, %912) /* ty=Tensor[(9, 10, 10), bool] */;
  %914 = cast(%913, dtype="int16") /* ty=Tensor[(9, 10, 10), int16] */;
  %915 = reshape(%914, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %916 = @func_2561(%915) /* ty=(Tensor[(13, 16, 2), bool], Tensor[(9, 11, 5), float32], Tensor[(495), float32], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(14, 2, 16), float32], Tensor[(448), float32]) */;
  %917 = not_equal(%906, %907) /* ty=Tensor[(7, 16, 2), bool] */;
  %918 = %908.0;
  %919 = %916.2;
  (%917, %918, %913, meta[relay.Constant][56] /* ty=Tensor[(900), int16] */, %919)
}

def @func_12726() -> Tensor[(14, 15, 16), float64] {
  %921 = fn () -> Tensor[(14, 15, 16), float64] {
    %920 = @func_10334() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
    %920.0
  };
  %921() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_8380() -> Tensor[(14, 15, 16), float64] {
  %922 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
  %922.0
}

def @func_6019(%var_6017: int32, %var_6018: Tensor[(1, 5, 12), int32]) -> (Tensor[(1, 5, 12), int32],) {
  @func_6015(%var_6017, %var_6018) /* ty=(Tensor[(1, 5, 12), int32],) */
}

def @func_15243(%var_15241: Tensor[(900, 1), int16]) -> (Tensor[(14, 15, 16), float32], Tensor[(9, 10, 10), bool], Tensor[(900, 1), int16]) {
  @func_15240(%var_15241) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(9, 10, 10), bool], Tensor[(900, 1), int16]) */
}

def @func_9282() -> (Tensor[(14, 15, 16), float64],) {
  %924 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %923 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
    (%923,)
  };
  %924() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_6056() -> Tensor[(14, 15, 16), float32] {
  %925 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %926 = %925.0;
  %927 = cast(%926, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  atan(%927) /* ty=Tensor[(14, 15, 16), float32] */
}

def @func_5787() -> Tensor[(14, 15, 16), float64] {
  %929 = fn () -> Tensor[(14, 15, 16), float64] {
    %928 = @func_5578() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
    %928.0
  };
  %929() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_14383() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  @func_14381() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_13724() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %930 = @func_10140() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16]) */;
  %931 = @func_8054() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %932 = %930.1;
  %933 = %931.0;
  (%932, %933)
}

def @func_4847() -> (Tensor[(14, 15, 16), float64],) {
  %936 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %934 = cast(meta[relay.Constant][57] /* ty=Tensor[(14, 15, 16), float64] */, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
    %935 = cos(%934) /* ty=Tensor[(14, 15, 16), float64] */;
    (%935,)
  };
  %936() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_8100(%var_8099: Tensor[(242), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(1, 5, 12), int32], int32, Tensor[(60), int32], Tensor[(3, 300), int16], Tensor[(242), int8], Tensor[(320), float32], Tensor[(200), int16], Tensor[(900), int16]) {
  %955 = fn (%var_8088: Tensor[(242), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(1, 5, 12), int32], int32, Tensor[(60), int32], Tensor[(3, 300), int16], Tensor[(242), int8], Tensor[(320), float32], Tensor[(200), int16], Tensor[(900), int16]) {
    %937 = @func_8054() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %938 = cast(7 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %939 = cast(meta[relay.Constant][58] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
    %940 = reshape(%938, newshape=[]) /* ty=int32 */;
    %941 = reshape(%939, newshape=[1, 5, 12]) /* ty=Tensor[(1, 5, 12), int32] */;
    %942 = @func_6015(%940, %941) /* ty=(Tensor[(1, 5, 12), int32],) */;
    %943 = cast(%var_8088, dtype="int8") /* ty=Tensor[(242), int8] */;
    %944 = cast(meta[relay.Constant][59] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %945 = cast(meta[relay.Constant][60] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
    %946 = cast(meta[relay.Constant][61] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
    %947 = reshape(%943, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), int8] */;
    %948 = reshape(%944, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %949 = reshape(%945, newshape=[200]) /* ty=Tensor[(200), int16] */;
    %950 = reshape(%946, newshape=[3, 300]) /* ty=Tensor[(3, 300), int16] */;
    %951 = @func_4143(%947, %948, %949, %950) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */;
    %952 = %937.0;
    %953 = %942.0;
    %954 = %951.5;
    (%952, %953, 7 /* ty=int32 */, meta[relay.Constant][58] /* ty=Tensor[(60), int32] */, %954, %var_8088, meta[relay.Constant][59] /* ty=Tensor[(320), float32] */, meta[relay.Constant][60] /* ty=Tensor[(200), int16] */, meta[relay.Constant][61] /* ty=Tensor[(900), int16] */)
  };
  %955(%var_8099) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(1, 5, 12), int32], int32, Tensor[(60), int32], Tensor[(3, 300), int16], Tensor[(242), int8], Tensor[(320), float32], Tensor[(200), int16], Tensor[(900), int16]) */
}

def @func_2088(%var_2068: Tensor[(9, 10, 10), int16], %var_2069: Tensor[(9, 10, 10), int16]) -> Tensor[(9, 10, 10), bool] {
  %956 = cast(%var_2069, dtype="bool") /* ty=Tensor[(9, 10, 10), bool] */;
  %957 = shape_of(%var_2068, dtype="int32") /* ty=Tensor[(3), int32] */;
  %958 = cast(%var_2068, dtype="bool") /* ty=Tensor[(9, 10, 10), bool] */;
  %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%958, %959) /* ty=Tensor[(9, 10, 10), bool] */
}

def @func_8124() -> (Tensor[(14, 15, 16), float64],) {
  %961 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %960 = @func_5786() /* ty=Tensor[(14, 15, 16), float64] */;
    (%960,)
  };
  %961() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_14381() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %962 = @func_10140() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(900), int16]) */;
  %963 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
  %964 = %962.0;
  (%963, %964)
}

def @func_8382() -> Tensor[(14, 15, 16), float64] {
  @func_8380() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_15261() -> (Tensor[(14, 15, 16), float64],) {
  %965 = @func_13810() /* ty=Tensor[(14, 15, 16), float64] */;
  (%965,)
}

def @func_9317() -> (Tensor[(14, 15, 16), float64],) {
  %967 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %966 = @func_8380() /* ty=Tensor[(14, 15, 16), float64] */;
    (%966,)
  };
  %967() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_3289(%var_3287: Tensor[(126), float32], %var_3288: Tensor[(18, 50), int16]) -> (Tensor[(3, 7, 6), bool], Tensor[(126), float32], Tensor[(2, 12, 14), float64], Tensor[(9, 10, 10), bool], Tensor[(18, 50), int16]) {
  %980 = fn (%var_3259: Tensor[(126), float32], %var_3276: Tensor[(18, 50), int16]) -> (Tensor[(3, 7, 6), bool], Tensor[(126), float32], Tensor[(2, 12, 14), float64], Tensor[(9, 10, 10), bool], Tensor[(18, 50), int16]) {
    %968 = cast(%var_3259, dtype="float32") /* ty=Tensor[(126), float32] */;
    %969 = reshape(%968, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
    %970 = cast(meta[relay.Constant][62] /* ty=Tensor[(2, 12, 14), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 14), float32] */;
    %971 = exp(%970) /* ty=Tensor[(2, 12, 14), float32] */;
    %972 = cast(%971, dtype="float64") /* ty=Tensor[(2, 12, 14), float64] */;
    %973 = cast(%var_3276, dtype="int16") /* ty=Tensor[(18, 50), int16] */;
    %974 = cast(%var_3276, dtype="int16") /* ty=Tensor[(18, 50), int16] */;
    %975 = reshape(%973, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
    %976 = reshape(%974, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), int16] */;
    %977 = @func_940(%969) /* ty=Tensor[(3, 7, 6), bool] */;
    %978 = sinh(%972) /* ty=Tensor[(2, 12, 14), float64] */;
    %979 = @func_2088(%975, %976) /* ty=Tensor[(9, 10, 10), bool] */;
    (%977, %var_3259, %978, %979, %var_3276)
  };
  %980(%var_3287, %var_3288) /* ty=(Tensor[(3, 7, 6), bool], Tensor[(126), float32], Tensor[(2, 12, 14), float64], Tensor[(9, 10, 10), bool], Tensor[(18, 50), int16]) */
}

def @func_2564(%var_2562: Tensor[(900), int16]) -> (Tensor[(13, 16, 2), bool], Tensor[(9, 11, 5), float32], Tensor[(495), float32], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(14, 2, 16), float32], Tensor[(448), float32]) {
  @func_2561(%var_2562) /* ty=(Tensor[(13, 16, 2), bool], Tensor[(9, 11, 5), float32], Tensor[(495), float32], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(14, 2, 16), float32], Tensor[(448), float32]) */
}

def @func_11956() -> Tensor[(14, 15, 16), float64] {
  %982 = fn () -> Tensor[(14, 15, 16), float64] {
    %981 = @func_9971() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %981.0
  };
  %982() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_12781() -> (Tensor[(14, 15, 16), float64],) {
  @func_12779() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_12513() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  @func_12511() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_9972() -> (Tensor[(14, 15, 16), float64],) {
  %985 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %983 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %984 = %983.0;
    (%984,)
  };
  %985() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_13319() -> Tensor[(14, 15, 16), float64] {
  %986 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %986.0
}

def @func_7935() -> Tensor[(14, 15, 16), float32] {
  @func_7933() /* ty=Tensor[(14, 15, 16), float32] */
}

def @func_9727() -> (Tensor[(14, 15, 16), float64],) {
  @func_9725() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_8789() -> (Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64], Tensor[(528), float64], Tensor[(900), int16], Tensor[(14, 15, 16), float64]) {
  %998 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64], Tensor[(528), float64], Tensor[(900), int16], Tensor[(14, 15, 16), float64]) {
    %987 = cast(meta[relay.Constant][63] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
    %988 = cast(meta[relay.Constant][63] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
    %989 = cast(meta[relay.Constant][64] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
    %990 = reshape(%987, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), float64] */;
    %991 = reshape(%988, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), float64] */;
    %992 = reshape(%989, newshape=[900]) /* ty=Tensor[(900), int16] */;
    %993 = @func_2812(%990, %991, %992) /* ty=(Tensor[(8, 6, 11), float64], Tensor[(8, 6, 11), int8], Tensor[(9, 10, 10), bool], Tensor[(900), int16]) */;
    %994 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %995 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
    %996 = %993.0;
    %997 = %994.0;
    (%995, %996, meta[relay.Constant][63] /* ty=Tensor[(528), float64] */, meta[relay.Constant][64] /* ty=Tensor[(900), int16] */, %997)
  };
  %998() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64], Tensor[(528), float64], Tensor[(900), int16], Tensor[(14, 15, 16), float64]) */
}

def @func_10037() -> Tensor[(14, 15, 16), float32] {
  %999 = fn () -> Tensor[(14, 15, 16), float32] {
    @func_6056() /* ty=Tensor[(14, 15, 16), float32] */
  };
  %999() /* ty=Tensor[(14, 15, 16), float32] */
}

def @func_5648() -> Tensor[(14, 15, 16), float64] {
  %1000 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1001 = %1000.0;
  %1002 = cast(%1001, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  sigmoid(%1002) /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_13630(%var_13624: Tensor[(126), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(3, 7, 6), bool], Tensor[(126), float32]) {
  %1003 = @func_9316() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1004 = @func_7540() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1005 = cast(%var_13624, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1006 = reshape(%1005, newshape=[3, 7, 6]) /* ty=Tensor[(3, 7, 6), float32] */;
  %1007 = %1003.0;
  %1008 = %1004.0;
  %1009 = @func_940(%1006) /* ty=Tensor[(3, 7, 6), bool] */;
  (%1007, %1008, %1009, %var_13624)
}

def @func_7157() -> Tensor[(14, 15, 16), float64] {
  %1010 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1010.0
}

def @func_14264() -> (Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64]) {
  @func_14262() /* ty=(Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64]) */
}

def @func_13227() -> (Tensor[(14, 15, 16), float32],) {
  %1011 = @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */;
  %1012 = %1011.0;
  (%1012,)
}

def @func_15880() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 11, 14), float64], Tensor[(2156), float64]) {
  @func_15878() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 11, 14), float64], Tensor[(2156), float64]) */
}

def @func_9058() -> (Tensor[(14, 15, 16), float64], Tensor[(5, 16, 6), float64], Tensor[(480), float64]) {
  %1018 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(5, 16, 6), float64], Tensor[(480), float64]) {
    %1013 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %1014 = cast(meta[relay.Constant][65] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
    %1015 = reshape(%1014, newshape=[5, 16, 6]) /* ty=Tensor[(5, 16, 6), float64] */;
    %1016 = %1013.0;
    %1017 = @func_4072(%1015) /* ty=Tensor[(5, 16, 6), float64] */;
    (%1016, %1017, meta[relay.Constant][65] /* ty=Tensor[(480), float64] */)
  };
  %1018() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(5, 16, 6), float64], Tensor[(480), float64]) */
}

def @func_7582() -> Tensor[(14, 15, 16), float64] {
  %1019 = fn () -> Tensor[(14, 15, 16), float64] {
    @func_7157() /* ty=Tensor[(14, 15, 16), float64] */
  };
  %1019() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_9912() -> Tensor[(14, 15, 16), float64] {
  @func_9910() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_9398() -> Tensor[(14, 15, 16), float64] {
  @func_9396() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_11740() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32]) {
  @func_11738() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32]) */
}

def @main(%var_16511: uint8) -> (Tensor[(300), bool], Tensor[(495), float32], uint8, Tensor[(15, 9, 8), int16], Tensor[(1, 1080), float64], Tensor[(200), int16], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(2178), int8], Tensor[(112, 2), float64]) {
  %1020 = @func_14567() /* ty=(Tensor[(300), bool],) */;
  %1021 = cast(%var_16511, dtype="uint8") /* ty=uint8 */;
  %1022 = cast(meta[relay.Constant][66] /* ty=Tensor[(112, 2), uint8] */, dtype="uint8") /* ty=Tensor[(112, 2), uint8] */;
  %1023 = reshape(%1021, newshape=[]) /* ty=uint8 */;
  %1024 = reshape(%1022, newshape=[7, 16, 2]) /* ty=Tensor[(7, 16, 2), uint8] */;
  %1025 = @func_5728(%1023, %1024) /* ty=(Tensor[(7, 16, 2), bool], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), bool], Tensor[(900), int16], Tensor[(495), float32]) */;
  %1026 = cast(meta[relay.Constant][67] /* ty=Tensor[(1, 1080), float64] */, dtype="float64") /* ty=Tensor[(1, 1080), float64] */;
  %1027 = cast(meta[relay.Constant][67] /* ty=Tensor[(1, 1080), float64] */, dtype="float64") /* ty=Tensor[(1, 1080), float64] */;
  %1028 = cast(meta[relay.Constant][68] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %1029 = reshape(%1026, newshape=[15, 9, 8]) /* ty=Tensor[(15, 9, 8), float64] */;
  %1030 = reshape(%1027, newshape=[15, 9, 8]) /* ty=Tensor[(15, 9, 8), float64] */;
  %1031 = reshape(%1028, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %1032 = @func_15772(%1029, %1030, %1031) /* ty=(Tensor[(15, 9, 8), float64], Tensor[(15, 9, 8), float64], Tensor[(14, 15, 16), float64], Tensor[(15, 9, 8), int16], Tensor[(3, 7, 6), bool], Tensor[(200), int16]) */;
  %1033 = cast(meta[relay.Constant][69] /* ty=Tensor[(2178), int8] */, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %1034 = reshape(%1033, newshape=[2178]) /* ty=Tensor[(2178), int8] */;
  %1035 = @func_10057(%1034) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), int32], Tensor[(12), int32], Tensor[(2, 24), int32], Tensor[(2178), int8]) */;
  %1036 = cast(meta[relay.Constant][66] /* ty=Tensor[(112, 2), uint8] */, dtype="float64") /* ty=Tensor[(112, 2), float64] */;
  %1037 = %1020.0;
  %1038 = %1025.4;
  %1039 = %1032.3;
  %1040 = @func_8380() /* ty=Tensor[(14, 15, 16), float64] */;
  %1041 = %1035.0;
  %1042 = asinh(%1036) /* ty=Tensor[(112, 2), float64] */;
  (%1037, %1038, %var_16511, %1039, meta[relay.Constant][67] /* ty=Tensor[(1, 1080), float64] */, meta[relay.Constant][68] /* ty=Tensor[(200), int16] */, %1040, %1041, meta[relay.Constant][69] /* ty=Tensor[(2178), int8] */, %1042)
}

def @func_11591() -> Tensor[(14, 15, 16), float64] {
  @func_11589() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_4075(%var_4073: Tensor[(5, 16, 6), float64]) -> Tensor[(5, 16, 6), float64] {
  @func_4072(%var_4073) /* ty=Tensor[(5, 16, 6), float64] */
}

def @func_15435(%var_15434: Tensor[(630), int32]) -> (Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32]) {
  %1050 = fn (%var_15412: Tensor[(630), int32]) -> (Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32]) {
    %1043 = @func_12779() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %1044 = cast(%var_15412, dtype="int32") /* ty=Tensor[(630), int32] */;
    %1045 = cast(%var_15412, dtype="int32") /* ty=Tensor[(630), int32] */;
    %1046 = reshape(%1044, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
    %1047 = reshape(%1045, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
    %1048 = %1043.0;
    %1049 = @func_10413(%1046, %1047) /* ty=Tensor[(15, 3, 14), float64] */;
    (%1048, %1049, %var_15412)
  };
  %1050(%var_15434) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32]) */
}

def @func_1943(%var_1941: Tensor[(5, 14, 12), float64]) -> (Tensor[(5, 14, 12), float64], Tensor[(5, 4, 10), bool], Tensor[(200), int16]) {
  @func_1940(%var_1941) /* ty=(Tensor[(5, 14, 12), float64], Tensor[(5, 4, 10), bool], Tensor[(200), int16]) */
}

def @func_13726() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  @func_13724() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_7933() -> Tensor[(14, 15, 16), float32] {
  %1051 = @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */;
  %1051.0
}

def @func_11075() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %1052 = @func_10929() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1053 = @func_8123() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1054 = %1052.0;
  %1055 = %1053.0;
  (%1054, %1055)
}

def @func_16288() -> (Tensor[(14, 15, 16), float64],) {
  %1057 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %1056 = @func_9872() /* ty=Tensor[(14, 15, 16), float64] */;
    (%1056,)
  };
  %1057() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_12343() -> Tensor[(14, 15, 16), float64] {
  @func_12341() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_7994() -> (Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %1068 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
    %1058 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %1059 = %1058.0;
    %1060 = cast(%1059, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
    %1061 = reshape(%1060, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float64] */;
    %1062 = @func_5099(%1061) /* ty=(Tensor[(14, 15, 16), bool], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(14, 2, 16), bool], Tensor[(448), float32]) */;
    %1063 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %1064 = @func_5515() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %1065 = %1062.1;
    %1066 = %1063.0;
    %1067 = %1064.0;
    (%1059, %1065, %1066, %1067)
  };
  %1068() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_11691(%var_11689: Tensor[(12, 16, 8), float32]) -> (Tensor[(12, 16, 8), float32],) {
  @func_11688(%var_11689) /* ty=(Tensor[(12, 16, 8), float32],) */
}

def @func_7027() -> (Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) {
  %1069 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1070 = %1069.0;
  %1071 = @func_5347() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1072 = %1071.0;
  %1073 = cast(%1072, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %1074 = shape_of(%1070, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1075 = cast(%1070, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %1076 = dyn.reshape(%1073, %1074, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1077 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 200), int16] */, dtype="int16") /* ty=Tensor[(1, 200), int16] */;
  %1078 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 200), int16] */, dtype="int16") /* ty=Tensor[(1, 200), int16] */;
  %1079 = reshape(%1077, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
  %1080 = reshape(%1078, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
  %1081 = subtract(%1075, %1076) /* ty=Tensor[(14, 15, 16), float32] */;
  %1082 = @func_112(%1079, %1080) /* ty=Tensor[(5, 4, 10), bool] */;
  (%1081, %1082, meta[relay.Constant][70] /* ty=Tensor[(1, 200), int16] */)
}

def @func_7286() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  @func_7284() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_13312(%var_13310: Tensor[(1, 900), int16], %var_13311: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(200), int16], Tensor[(1, 900), int16], Tensor[(2178), int8]) {
  @func_13308(%var_13310, %var_13311) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(200), int16], Tensor[(1, 900), int16], Tensor[(2178), int8]) */
}

def @func_13229() -> (Tensor[(14, 15, 16), float32],) {
  @func_13227() /* ty=(Tensor[(14, 15, 16), float32],) */
}

def @func_13002(%var_12999: Tensor[(450, 2), int16], %var_13000: Tensor[(495), float32], %var_13001: Tensor[(80, 4), float32]) -> (Tensor[(2, 11, 11), int8], Tensor[(242), int8], Tensor[(200), int16], Tensor[(450, 2), int16], Tensor[(14, 15, 16), float64], Tensor[(9, 11, 5), float32], Tensor[(495), float32], Tensor[(6, 320), bool], Tensor[(80, 4), uint16], Tensor[(14, 15, 16), float64], Tensor[(80, 4), bool]) {
  %1124 = fn (%var_12956: Tensor[(450, 2), int16], %var_12969: Tensor[(495), float32], %var_12980: Tensor[(80, 4), float32]) -> (Tensor[(2, 11, 11), int8], Tensor[(242), int8], Tensor[(200), int16], Tensor[(450, 2), int16], Tensor[(14, 15, 16), float64], Tensor[(9, 11, 5), float32], Tensor[(495), float32], Tensor[(6, 320), bool], Tensor[(80, 4), uint16], Tensor[(14, 15, 16), float64], Tensor[(80, 4), bool]) {
    %1083 = cast(meta[relay.Constant][71] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
    %1084 = @func_10815() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(242), int8], Tensor[(900), int16], Tensor[(2178, 1), int8], Tensor[(320), float32], Tensor[(80, 4), float32], Tensor[(200), int16]) */;
    %1085 = %1084.6;
    %1086 = cast(%1085, dtype="float32") /* ty=Tensor[(80, 4), float32] */;
    %1087 = cast(meta[relay.Constant][72] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
    %1088 = cast(%var_12956, dtype="int16") /* ty=Tensor[(450, 2), int16] */;
    %1089 = reshape(%1083, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), int8] */;
    %1090 = reshape(%1086, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %1091 = reshape(%1087, newshape=[200]) /* ty=Tensor[(200), int16] */;
    %1092 = reshape(%1088, newshape=[3, 300]) /* ty=Tensor[(3, 300), int16] */;
    %1093 = @func_4143(%1089, %1090, %1091, %1092) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */;
    %1094 = @func_9316() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %1095 = cast(%var_12969, dtype="float32") /* ty=Tensor[(495), float32] */;
    %1096 = cast(%var_12969, dtype="float32") /* ty=Tensor[(495), float32] */;
    %1097 = reshape(%1095, newshape=[9, 11, 5]) /* ty=Tensor[(9, 11, 5), float32] */;
    %1098 = reshape(%1096, newshape=[9, 11, 5]) /* ty=Tensor[(9, 11, 5), float32] */;
    %1099 = cast(%1085, dtype="float32") /* ty=Tensor[(80, 4), float32] */;
    %1100 = erf(%1099) /* ty=Tensor[(80, 4), float32] */;
    %1101 = cast(%1100, dtype="float32") /* ty=Tensor[(80, 4), float32] */;
    %1102 = cast(meta[relay.Constant][72] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
    %1103 = reshape(%1101, newshape=[1, 320]) /* ty=Tensor[(1, 320), float32] */;
    %1104 = reshape(%1102, newshape=[100, 2]) /* ty=Tensor[(100, 2), int16] */;
    %1105 = @func_5293(%1103, %1104) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(200), int16], Tensor[(100, 2), int16], Tensor[(6, 320), bool], Tensor[(5, 12, 5), bool], Tensor[(300), bool]) */;
    %1106 = cast(%var_12980, dtype="uint16") /* ty=Tensor[(80, 4), uint16] */;
    %1107 = shape_of(%1100, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1108 = cast(%1100, dtype="uint16") /* ty=Tensor[(80, 4), uint16] */;
    %1109 = dyn.reshape(%1106, %1107, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %1110 = @func_8123() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %1111 = cast(%1085, dtype="float32") /* ty=Tensor[(80, 4), float32] */;
    %1112 = sinh(%1111) /* ty=Tensor[(80, 4), float32] */;
    %1113 = cast(%1112, dtype="bool") /* ty=Tensor[(80, 4), bool] */;
    %1114 = shape_of(%1100, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1115 = cast(%1100, dtype="bool") /* ty=Tensor[(80, 4), bool] */;
    %1116 = dyn.reshape(%1113, %1114, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1117 = %1093.0;
    %1118 = %1094.0;
    %1119 = @func_1266(%1097, %1098) /* ty=Tensor[(9, 11, 5), float32] */;
    %1120 = %1105.3;
    %1121 = bitwise_xor(%1108, %1109) /* ty=Tensor[(80, 4), uint16] */;
    %1122 = %1110.0;
    %1123 = less_equal(%1115, %1116) /* ty=Tensor[(80, 4), bool] */;
    (%1117, meta[relay.Constant][71] /* ty=Tensor[(242), int8] */, meta[relay.Constant][72] /* ty=Tensor[(200), int16] */, %var_12956, %1118, %1119, %var_12969, %1120, %1121, %1122, %1123)
  };
  %1124(%var_12999, %var_13000, %var_13001) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(242), int8], Tensor[(200), int16], Tensor[(450, 2), int16], Tensor[(14, 15, 16), float64], Tensor[(9, 11, 5), float32], Tensor[(495), float32], Tensor[(6, 320), bool], Tensor[(80, 4), uint16], Tensor[(14, 15, 16), float64], Tensor[(80, 4), bool]) */
}

def @func_5347() -> (Tensor[(14, 15, 16), float64],) {
  %1125 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1126 = %1125.0;
  (%1126,)
}

def @func_9387() -> (Tensor[(14, 15, 16), float64],) {
  %1129 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %1127 = @func_9316() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %1128 = %1127.0;
    (%1128,)
  };
  %1129() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_14736(%var_14734: Tensor[(14, 11, 14), uint16], %var_14735: Tensor[(14, 11, 14), uint16]) -> Tensor[(14, 11, 14), float64] {
  %1139 = fn (%var_14719: Tensor[(14, 11, 14), uint16], %var_14720: Tensor[(14, 11, 14), uint16]) -> Tensor[(14, 11, 14), float64] {
    %1130 = cast(%var_14720, dtype="uint16") /* ty=Tensor[(14, 11, 14), uint16] */;
    %1131 = shape_of(%var_14719, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1132 = cast(%var_14719, dtype="uint16") /* ty=Tensor[(14, 11, 14), uint16] */;
    %1133 = dyn.reshape(%1130, %1131, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1134 = multiply(%1132, %1133) /* ty=Tensor[(14, 11, 14), uint16] */;
    %1135 = cast(%var_14719, dtype="float64") /* ty=Tensor[(14, 11, 14), float64] */;
    %1136 = shape_of(%1134, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1137 = cast(%1134, dtype="float64") /* ty=Tensor[(14, 11, 14), float64] */;
    %1138 = dyn.reshape(%1135, %1136, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_divide(%1137, %1138) /* ty=Tensor[(14, 11, 14), float64] */
  };
  %1139(%var_14734, %var_14735) /* ty=Tensor[(14, 11, 14), float64] */
}

def @func_12369() -> Tensor[(14, 15, 16), float64] {
  @func_12367() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_16144() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  @func_16142() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_11502() -> (Tensor[(14, 15, 16), float32],) {
  %1141 = fn () -> (Tensor[(14, 15, 16), float32],) {
    %1140 = @func_6056() /* ty=Tensor[(14, 15, 16), float32] */;
    (%1140,)
  };
  %1141() /* ty=(Tensor[(14, 15, 16), float32],) */
}

def @func_6553(%var_6547: Tensor[(7, 1, 11), float64]) -> Tensor[(7, 1, 11), float64] {
  %1142 = cast(%var_6547, dtype="float64") /* ty=Tensor[(7, 1, 11), float64] */;
  exp(%1142) /* ty=Tensor[(7, 1, 11), float64] */
}

def @func_12341() -> Tensor[(14, 15, 16), float64] {
  @func_9031() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_2092(%var_2090: Tensor[(9, 10, 10), int16], %var_2091: Tensor[(9, 10, 10), int16]) -> Tensor[(9, 10, 10), bool] {
  @func_2088(%var_2090, %var_2091) /* ty=Tensor[(9, 10, 10), bool] */
}

def @func_11688(%var_11664: Tensor[(12, 16, 8), float32]) -> (Tensor[(12, 16, 8), float32],) {
  %1143 = cast(%var_11664, dtype="float32") /* ty=Tensor[(12, 16, 8), float32] */;
  %1144 = tan(%1143) /* ty=Tensor[(12, 16, 8), float32] */;
  (%1144,)
}

def @func_16485(%var_16483: Tensor[(9, 8, 14), bool]) -> (Tensor[(9, 8, 14), bool], Tensor[(14, 15, 16), float64], Tensor[(9, 8, 14), int64]) {
  @func_16482(%var_16483) /* ty=(Tensor[(9, 8, 14), bool], Tensor[(14, 15, 16), float64], Tensor[(9, 8, 14), int64]) */
}

def @func_13812() -> Tensor[(14, 15, 16), float64] {
  @func_13810() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_7893() -> Tensor[(14, 15, 16), float64] {
  @func_7891() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_9725() -> (Tensor[(14, 15, 16), float64],) {
  %1145 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
  (%1145,)
}

def @func_13342() -> Tensor[(14, 15, 16), float64] {
  @func_13340() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_10596(%var_10563: Tensor[(108), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(?, 9, 12), float32], Tensor[(108), float32], Tensor[(15, 3, 14), float64], Tensor[(630), int32], Tensor[(480), float64]) {
  %1146 = @func_9316() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1147 = cast(%var_10563, dtype="float32") /* ty=Tensor[(108), float32] */;
  %1148 = reshape(%1147, newshape=[1, 9, 12]) /* ty=Tensor[(1, 9, 12), float32] */;
  %1149 = @func_9694(%1148) /* ty=(Tensor[(14, 2, 16), float32], Tensor[(448), float32], Tensor[(?, 9, 12), float32]) */;
  %1150 = cast(meta[relay.Constant][73] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %1151 = cast(meta[relay.Constant][73] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %1152 = reshape(%1150, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
  %1153 = reshape(%1151, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), int32] */;
  %1154 = @func_9057() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(5, 16, 6), float64], Tensor[(480), float64]) */;
  %1155 = %1146.0;
  %1156 = %1149.2;
  %1157 = @func_10413(%1152, %1153) /* ty=Tensor[(15, 3, 14), float64] */;
  %1158 = %1154.2;
  (%1155, %1156, %var_10563, %1157, meta[relay.Constant][73] /* ty=Tensor[(630), int32] */, %1158)
}

def @func_14567() -> (Tensor[(300), bool],) {
  @func_14565() /* ty=(Tensor[(300), bool],) */
}

def @func_14892() -> (Tensor[(14, 15, 16), float64],) {
  @func_14890() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_10925() -> Tensor[(14, 15, 16), float64] {
  %1160 = fn () -> Tensor[(14, 15, 16), float64] {
    %1159 = @func_10334() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
    %1159.0
  };
  %1160() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_5122(%var_5106: Tensor[(13, 13, 14), int64], %var_5107: Tensor[(13, 13, 14), int64], %var_5118: Tensor[(200), int16]) -> (Tensor[(13, 13, 14), bool], Tensor[(200), int16], Tensor[(200), int16]) {
  %1161 = cast(%var_5107, dtype="bool") /* ty=Tensor[(13, 13, 14), bool] */;
  %1162 = shape_of(%var_5106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1163 = cast(%var_5106, dtype="bool") /* ty=Tensor[(13, 13, 14), bool] */;
  %1164 = dyn.reshape(%1161, %1162, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1165 = cast(%var_5118, dtype="int16") /* ty=Tensor[(200), int16] */;
  %1166 = reshape(%1165, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %1167 = @func_4242(%1166) /* ty=(Tensor[(15, 9, 12), int64], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(3, 7, 6), bool], Tensor[(126), float32]) */;
  %1168 = greater(%1163, %1164) /* ty=Tensor[(13, 13, 14), bool] */;
  %1169 = %1167.2;
  (%1168, %1169, %var_5118)
}

def @func_12906() -> Tensor[(14, 15, 16), float64] {
  @func_12904() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_9179(%var_9158: Tensor[(12), int32], %var_9159: Tensor[(48), int32], %var_9166: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float32], Tensor[(900), int16], Tensor[(242), int8], Tensor[(9, 10, 10), int32], Tensor[(12), int32], Tensor[(48), int32], Tensor[(2178), uint64]) {
  %1170 = cast(meta[relay.Constant][74] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %1171 = cast(meta[relay.Constant][75] /* ty=Tensor[(2178), int8] */, dtype="int8") /* ty=Tensor[(2178), int8] */;
  %1172 = reshape(%1170, newshape=[11, 22]) /* ty=Tensor[(11, 22), int8] */;
  %1173 = reshape(%1171, newshape=[22, 99]) /* ty=Tensor[(22, 99), int8] */;
  %1174 = @func_5861(%1172, %1173) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), float32], Tensor[(11, 22), int8], Tensor[(100, 2), int16], Tensor[(900), int16], Tensor[(22, 99), int8]) */;
  %1175 = cast(%var_9158, dtype="int32") /* ty=Tensor[(12), int32] */;
  %1176 = cast(%var_9159, dtype="int32") /* ty=Tensor[(48), int32] */;
  %1177 = %1174.5;
  %1178 = cast(%1177, dtype="int16") /* ty=Tensor[(900), int16] */;
  %1179 = cast(%1177, dtype="bool") /* ty=Tensor[(900), bool] */;
  %1180 = reshape(%1175, newshape=[4, 3, 1]) /* ty=Tensor[(4, 3, 1), int32] */;
  %1181 = reshape(%1176, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), int32] */;
  %1182 = reshape(%1178, newshape=[90, 10]) /* ty=Tensor[(90, 10), int16] */;
  %1183 = reshape(%1179, newshape=[9, 10, 10]) /* ty=Tensor[(9, 10, 10), bool] */;
  %1184 = @func_3394(%1180, %1181, %1182, %1183) /* ty=(Tensor[(4, 3, 4), bool], Tensor[(90, 10), int16], Tensor[(9, 10, 10), int32]) */;
  %1185 = cast(%var_9166, dtype="uint64") /* ty=Tensor[(2178), uint64] */;
  %1186 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(2178), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1187 = cast(meta[relay.Constant][75] /* ty=Tensor[(2178), int8] */, dtype="uint64") /* ty=Tensor[(2178), uint64] */;
  %1188 = dyn.reshape(%1185, %1186, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %1189 = @func_7933() /* ty=Tensor[(14, 15, 16), float32] */;
  %1190 = %1184.2;
  %1191 = right_shift(%1187, %1188) /* ty=Tensor[(2178), uint64] */;
  (%1189, %1177, meta[relay.Constant][74] /* ty=Tensor[(242), int8] */, %1190, %var_9158, %var_9159, %1191)
}

def @func_15184(%var_15171: Tensor[(77, 1), float64]) -> (Tensor[(14, 15, 16), float32], Tensor[(11, 7), float64], float32, Tensor[(54), float32], Tensor[(77, 1), float32]) {
  %1192 = @func_11014() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32]) */;
  %1193 = cast(8.05215f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1194 = cast(meta[relay.Constant][76] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1195 = cast(%var_15171, dtype="float64") /* ty=Tensor[(77, 1), float64] */;
  %1196 = reshape(%1193, newshape=[]) /* ty=float32 */;
  %1197 = reshape(%1194, newshape=[1, 6, 9]) /* ty=Tensor[(1, 6, 9), float32] */;
  %1198 = reshape(%1195, newshape=[11, 7]) /* ty=Tensor[(11, 7), float64] */;
  %1199 = @func_9482(%1196, %1197, %1198) /* ty=(Tensor[(1, 6, 9), float32], Tensor[(14, 15, 16), float64], Tensor[(7, 1, 11), float64], Tensor[(11, 7), float64]) */;
  %1200 = cast(%var_15171, dtype="float32") /* ty=Tensor[(77, 1), float32] */;
  %1201 = %1192.1;
  %1202 = %1199.3;
  %1203 = cosh(%1200) /* ty=Tensor[(77, 1), float32] */;
  (%1201, %1202, 8.05215f /* ty=float32 */, meta[relay.Constant][76] /* ty=Tensor[(54), float32] */, %1203)
}

def @func_16067() -> Tensor[(14, 15, 16), float64] {
  %1205 = fn () -> Tensor[(14, 15, 16), float64] {
    %1204 = @func_10929() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %1204.0
  };
  %1205() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_11016() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32]) {
  @func_11014() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float32]) */
}

def @func_6499(%var_6497: Tensor[(528), float64], %var_6498: Tensor[(60), int32]) -> (Tensor[(14, 15, 16), float32], Tensor[(9, 10, 10), bool], Tensor[(528), float64], Tensor[(900), int16], Tensor[(1, 5, 12), int32], int32, Tensor[(60), int32]) {
  @func_6495(%var_6497, %var_6498) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(9, 10, 10), bool], Tensor[(528), float64], Tensor[(900), int16], Tensor[(1, 5, 12), int32], int32, Tensor[(60), int32]) */
}

def @func_10895() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %1206 = @func_8123() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1207 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
  %1208 = %1206.0;
  (%1207, %1208)
}

def @func_16026() -> (Tensor[(14, 15, 16), float64], Tensor[(5, 16, 6), float64], Tensor[(4, 120), float64]) {
  @func_16024() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(5, 16, 6), float64], Tensor[(4, 120), float64]) */
}

def @func_5516() -> (Tensor[(14, 15, 16), float64],) {
  %1211 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %1209 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
    %1210 = %1209.1;
    (%1210,)
  };
  %1211() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_10057(%var_10055: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), int32], Tensor[(12), int32], Tensor[(2, 24), int32], Tensor[(2178), int8]) {
  @func_10054(%var_10055) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 10, 10), int32], Tensor[(12), int32], Tensor[(2, 24), int32], Tensor[(2178), int8]) */
}

def @func_15878() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 11, 14), float64], Tensor[(2156), float64]) {
  %1212 = cast(meta[relay.Constant][77] /* ty=Tensor[(2156), uint16] */, dtype="uint16") /* ty=Tensor[(2156), uint16] */;
  %1213 = cast(meta[relay.Constant][77] /* ty=Tensor[(2156), uint16] */, dtype="uint16") /* ty=Tensor[(2156), uint16] */;
  %1214 = reshape(%1212, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), uint16] */;
  %1215 = reshape(%1213, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), uint16] */;
  %1216 = cast(meta[relay.Constant][77] /* ty=Tensor[(2156), uint16] */, dtype="float64") /* ty=Tensor[(2156), float64] */;
  %1217 = @func_12341() /* ty=Tensor[(14, 15, 16), float64] */;
  %1218 = @func_14733(%1214, %1215) /* ty=Tensor[(14, 11, 14), float64] */;
  %1219 = tan(%1216) /* ty=Tensor[(2156), float64] */;
  (%1217, %1218, %1219)
}

def @func_9945() -> Tensor[(14, 15, 16), float32] {
  @func_9943() /* ty=Tensor[(14, 15, 16), float32] */
}

def @func_10931() -> (Tensor[(14, 15, 16), float64],) {
  @func_10929() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_11414(%var_11412: Tensor[(4, 7, 11), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(4, 7, 11), float32], Tensor[(5, 4, 10), bool]) {
  @func_11411(%var_11412) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(4, 7, 11), float32], Tensor[(5, 4, 10), bool]) */
}

def @func_11589() -> Tensor[(14, 15, 16), float64] {
  %1220 = @func_8788() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(8, 6, 11), float64], Tensor[(528), float64], Tensor[(900), int16], Tensor[(14, 15, 16), float64]) */;
  %1220.4
}

def @func_10897() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  @func_10895() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_7540() -> (Tensor[(14, 15, 16), float64],) {
  %1221 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %1222 = %1221.0;
  (%1222,)
}

def @func_15332() -> Tensor[(14, 15, 16), float32] {
  @func_15330() /* ty=Tensor[(14, 15, 16), float32] */
}

def @func_14994() -> (Tensor[(14, 15, 16), float64],) {
  @func_14992() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_13512() -> (Tensor[(15, 3, 14), float64],) {
  %1225 = fn () -> (Tensor[(15, 3, 14), float64],) {
    %1223 = @func_12070() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32], Tensor[(14, 15, 16), float64]) */;
    %1224 = %1223.1;
    (%1224,)
  };
  %1225() /* ty=(Tensor[(15, 3, 14), float64],) */
}

def @func_5540() -> (Tensor[(14, 15, 16), float64],) {
  @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_13152() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %1232 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
    %1226 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %1227 = @func_12070() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(15, 3, 14), float64], Tensor[(630), int32], Tensor[(14, 15, 16), float64]) */;
    %1228 = %1226.0;
    %1229 = %1227.3;
    %1230 = @func_11955() /* ty=Tensor[(14, 15, 16), float64] */;
    %1231 = @func_9396() /* ty=Tensor[(14, 15, 16), float64] */;
    (%1228, %1229, %1230, %1231)
  };
  %1232() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_10599(%var_10597: Tensor[(108), float32]) -> (Tensor[(14, 15, 16), float64], Tensor[(?, 9, 12), float32], Tensor[(108), float32], Tensor[(15, 3, 14), float64], Tensor[(630), int32], Tensor[(480), float64]) {
  @func_10596(%var_10597) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(?, 9, 12), float32], Tensor[(108), float32], Tensor[(15, 3, 14), float64], Tensor[(630), int32], Tensor[(480), float64]) */
}

def @func_9338() -> Tensor[(14, 15, 16), float64] {
  %1233 = fn () -> Tensor[(14, 15, 16), float64] {
    @func_9031() /* ty=Tensor[(14, 15, 16), float64] */
  };
  %1233() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_15330() -> Tensor[(14, 15, 16), float32] {
  %1234 = @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */;
  %1234.0
}

def @func_13877() -> (Tensor[(8, 6, 11), float64],) {
  %1237 = fn () -> (Tensor[(8, 6, 11), float64],) {
    %1235 = @func_8862() /* ty=(Tensor[(8, 6, 11), float64], Tensor[(14, 15, 16), float64]) */;
    %1236 = %1235.0;
    (%1236,)
  };
  %1237() /* ty=(Tensor[(8, 6, 11), float64],) */
}

def @func_13550() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  @func_13548() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_9910() -> Tensor[(14, 15, 16), float64] {
  @func_7687() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_12874() -> Tensor[(14, 15, 16), float64] {
  @func_8380() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_7029() -> (Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) {
  @func_7027() /* ty=(Tensor[(14, 15, 16), float32], Tensor[(5, 4, 10), bool], Tensor[(1, 200), int16]) */
}

def @func_12904() -> Tensor[(14, 15, 16), float64] {
  %1238 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
  %1238.1
}

def @func_5297(%var_5295: Tensor[(1, 320), float32], %var_5296: Tensor[(100, 2), int16]) -> (Tensor[(14, 15, 16), float64], Tensor[(200), int16], Tensor[(100, 2), int16], Tensor[(6, 320), bool], Tensor[(5, 12, 5), bool], Tensor[(300), bool]) {
  @func_5293(%var_5295, %var_5296) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(200), int16], Tensor[(100, 2), int16], Tensor[(6, 320), bool], Tensor[(5, 12, 5), bool], Tensor[(300), bool]) */
}

def @func_1269(%var_1267: Tensor[(9, 11, 5), float32], %var_1268: Tensor[(9, 11, 5), float32]) -> Tensor[(9, 11, 5), float32] {
  %1243 = fn (%var_1257: Tensor[(9, 11, 5), float32], %var_1258: Tensor[(9, 11, 5), float32]) -> Tensor[(9, 11, 5), float32] {
    %1239 = cast(%var_1258, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
    %1240 = shape_of(%var_1257, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1241 = cast(%var_1257, dtype="float32") /* ty=Tensor[(9, 11, 5), float32] */;
    %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%1241, %1242) /* ty=Tensor[(9, 11, 5), float32] */
  };
  %1243(%var_1267, %var_1268) /* ty=Tensor[(9, 11, 5), float32] */
}

def @func_6154() -> (Tensor[(14, 15, 16), float64],) {
  %1244 = @func_5538() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1245 = %1244.0;
  (%1245,)
}

def @func_16437(%var_16436: Tensor[(448), float32]) -> (Tensor[(14, 15, 16), float32], Tensor[(448), float32], Tensor[(448), float32], Tensor[(5, 4, 10), bool]) {
  %1259 = fn (%var_16410: Tensor[(448), float32]) -> (Tensor[(14, 15, 16), float32], Tensor[(448), float32], Tensor[(448), float32], Tensor[(5, 4, 10), bool]) {
    %1246 = @func_7284() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
    %1247 = %1246.1;
    %1248 = cast(meta[relay.Constant][78] /* ty=Tensor[(14, 15, 16), float64] */, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
    %1249 = shape_of(%1247, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1250 = cast(%1247, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
    %1251 = dyn.reshape(%1248, %1249, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1252 = cast(%var_16410, dtype="float32") /* ty=Tensor[(448), float32] */;
    %1253 = reshape(%1252, newshape=[448]) /* ty=Tensor[(448), float32] */;
    %1254 = @func_15086(%1253) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 11, 5), float32], Tensor[(448), float32]) */;
    %1255 = @func_5323() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(5, 4, 10), bool]) */;
    %1256 = floor_mod(%1250, %1251) /* ty=Tensor[(14, 15, 16), float32] */;
    %1257 = %1254.2;
    %1258 = %1255.2;
    (%1256, %1257, %var_16410, %1258)
  };
  %1259(%var_16436) /* ty=(Tensor[(14, 15, 16), float32], Tensor[(448), float32], Tensor[(448), float32], Tensor[(5, 4, 10), bool]) */
}

def @func_8055() -> (Tensor[(14, 15, 16), float64],) {
  %1262 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %1260 = @func_4846() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %1261 = %1260.0;
    (%1261,)
  };
  %1262() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_5650() -> Tensor[(14, 15, 16), float64] {
  @func_5648() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_10377() -> (Tensor[(14, 15, 16), float64],) {
  @func_10375() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_12511() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %1263 = @func_7891() /* ty=Tensor[(14, 15, 16), float64] */;
  %1264 = @func_9396() /* ty=Tensor[(14, 15, 16), float64] */;
  %1265 = @func_5786() /* ty=Tensor[(14, 15, 16), float64] */;
  (%1263, %1264, %1265)
}

def @func_15664() -> (Tensor[(14, 15, 16), float64],) {
  %1269 = fn () -> (Tensor[(14, 15, 16), float64],) {
    %1266 = @func_12367() /* ty=Tensor[(14, 15, 16), float64] */;
    %1267 = cast(%1266, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
    %1268 = log10(%1267) /* ty=Tensor[(14, 15, 16), float64] */;
    (%1268,)
  };
  %1269() /* ty=(Tensor[(14, 15, 16), float64],) */
}

def @func_10815() -> (Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(242), int8], Tensor[(900), int16], Tensor[(2178, 1), int8], Tensor[(320), float32], Tensor[(80, 4), float32], Tensor[(200), int16]) {
  %1270 = @func_9587() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1271 = cast(meta[relay.Constant][79] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %1272 = cast(meta[relay.Constant][80] /* ty=Tensor[(900), int16] */, dtype="int16") /* ty=Tensor[(900), int16] */;
  %1273 = cast(meta[relay.Constant][81] /* ty=Tensor[(2178, 1), int8] */, dtype="int8") /* ty=Tensor[(2178, 1), int8] */;
  %1274 = reshape(%1271, newshape=[242]) /* ty=Tensor[(242), int8] */;
  %1275 = reshape(%1272, newshape=[900]) /* ty=Tensor[(900), int16] */;
  %1276 = reshape(%1273, newshape=[2178]) /* ty=Tensor[(2178), int8] */;
  %1277 = @func_6961(%1274, %1275, %1276) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(200), int16], Tensor[(900), int16], Tensor[(2178), int8]) */;
  %1278 = cast(meta[relay.Constant][79] /* ty=Tensor[(242), int8] */, dtype="int8") /* ty=Tensor[(242), int8] */;
  %1279 = cast(meta[relay.Constant][82] /* ty=Tensor[(80, 4), float32] */, dtype="float32") /* ty=Tensor[(80, 4), float32] */;
  %1280 = cast(meta[relay.Constant][83] /* ty=Tensor[(200), int16] */, dtype="int16") /* ty=Tensor[(200), int16] */;
  %1281 = %1277.4;
  %1282 = cast(%1281, dtype="int16") /* ty=Tensor[(900), int16] */;
  %1283 = reshape(%1278, newshape=[2, 11, 11]) /* ty=Tensor[(2, 11, 11), int8] */;
  %1284 = reshape(%1279, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %1285 = reshape(%1280, newshape=[200]) /* ty=Tensor[(200), int16] */;
  %1286 = reshape(%1282, newshape=[3, 300]) /* ty=Tensor[(3, 300), int16] */;
  %1287 = @func_4143(%1283, %1284, %1285, %1286) /* ty=(Tensor[(2, 11, 11), int8], Tensor[(16, 4, 5), float32], Tensor[(320), float32], Tensor[(200), int16], Tensor[(9, 10, 10), bool], Tensor[(3, 300), int16], Tensor[(9, 10, 10), bool], Tensor[(126), float32], Tensor[(200), int16]) */;
  %1288 = %1270.0;
  %1289 = %1287.2;
  (%1288, %1281, meta[relay.Constant][79] /* ty=Tensor[(242), int8] */, meta[relay.Constant][80] /* ty=Tensor[(900), int16] */, meta[relay.Constant][81] /* ty=Tensor[(2178, 1), int8] */, %1289, meta[relay.Constant][82] /* ty=Tensor[(80, 4), float32] */, meta[relay.Constant][83] /* ty=Tensor[(200), int16] */)
}

def @func_14308(%var_14306: Tensor[(9, 10, 10), int32]) -> (Tensor[(14, 15, 16), float64], Tensor[(2178), int8], Tensor[(9, 10, 10), float32]) {
  @func_14305(%var_14306) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(2178), int8], Tensor[(9, 10, 10), float32]) */
}

def @func_14657() -> Tensor[(14, 15, 16), float64] {
  %1291 = fn () -> Tensor[(14, 15, 16), float64] {
    %1290 = @func_6154() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %1290.0
  };
  %1291() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_13340() -> Tensor[(14, 15, 16), float64] {
  %1292 = @func_9386() /* ty=(Tensor[(14, 15, 16), float64],) */;
  %1292.0
}

def @func_14081(%var_14080: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(2178), int8], Tensor[(14, 15, 16), float64]) {
  %1303 = fn (%var_14063: Tensor[(2178), int8]) -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(2178), int8], Tensor[(14, 15, 16), float64]) {
    %1293 = @func_12511() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */;
    %1294 = %1293.0;
    %1295 = cast(%1294, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
    %1296 = cast(%var_14063, dtype="int8") /* ty=Tensor[(2178), int8] */;
    %1297 = reshape(%1295, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float64] */;
    %1298 = reshape(%1296, newshape=[2178]) /* ty=Tensor[(2178), int8] */;
    %1299 = @func_7847(%1297, %1298) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), bool], Tensor[(9, 242), bool], Tensor[(242), int8], Tensor[(450, 2), int16], Tensor[(2178), int8], Tensor[(14, 15, 16), float32], Tensor[(528), float64], Tensor[(60), int32], Tensor[(3, 7, 6), int32], Tensor[(1, 200), int16], Tensor[(3, 7, 6), float64]) */;
    %1300 = @func_10815() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(900), int16], Tensor[(242), int8], Tensor[(900), int16], Tensor[(2178, 1), int8], Tensor[(320), float32], Tensor[(80, 4), float32], Tensor[(200), int16]) */;
    %1301 = %1299.0;
    %1302 = %1300.0;
    (%1294, %1301, %var_14063, %1302)
  };
  %1303(%var_14080) /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64], Tensor[(2178), int8], Tensor[(14, 15, 16), float64]) */
}

def @func_9961() -> Tensor[(14, 15, 16), float64] {
  %1304 = fn () -> Tensor[(14, 15, 16), float64] {
    @func_8380() /* ty=Tensor[(14, 15, 16), float64] */
  };
  %1304() /* ty=Tensor[(14, 15, 16), float64] */
}

def @func_673(%var_671: Tensor[(16, 4, 5), float32], %var_672: Tensor[(200), int16]) -> (Tensor[(16, 4, 5), float32], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(5, 4, 10), bool]) {
  %1317 = fn (%var_639: Tensor[(16, 4, 5), float32], %var_655: Tensor[(200), int16]) -> (Tensor[(16, 4, 5), float32], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(5, 4, 10), bool]) {
    %1305 = cast(%var_639, dtype="float32") /* ty=Tensor[(16, 4, 5), float32] */;
    %1306 = cast(%var_655, dtype="int16") /* ty=Tensor[(200), int16] */;
    %1307 = cast(%var_655, dtype="int16") /* ty=Tensor[(200), int16] */;
    %1308 = reshape(%1306, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
    %1309 = reshape(%1307, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
    %1310 = cast(%var_655, dtype="int16") /* ty=Tensor[(200), int16] */;
    %1311 = @func_112(%1308, %1309) /* ty=Tensor[(5, 4, 10), bool] */;
    %1312 = cast(%1311, dtype="int16") /* ty=Tensor[(5, 4, 10), int16] */;
    %1313 = reshape(%1310, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
    %1314 = reshape(%1312, newshape=[5, 4, 10]) /* ty=Tensor[(5, 4, 10), int16] */;
    %1315 = sigmoid(%1305) /* ty=Tensor[(16, 4, 5), float32] */;
    %1316 = @func_112(%1313, %1314) /* ty=Tensor[(5, 4, 10), bool] */;
    (%1315, %1311, %var_655, %1316)
  };
  %1317(%var_671, %var_672) /* ty=(Tensor[(16, 4, 5), float32], Tensor[(5, 4, 10), bool], Tensor[(200), int16], Tensor[(5, 4, 10), bool]) */
}

def @func_10753() -> (Tensor[(14, 15, 16), float64],) {
  %1318 = @func_7157() /* ty=Tensor[(14, 15, 16), float64] */;
  (%1318,)
}

def @func_15959() -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
  %1322 = fn () -> (Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) {
    %1319 = @func_15261() /* ty=(Tensor[(14, 15, 16), float64],) */;
    %1320 = %1319.0;
    %1321 = @func_12447() /* ty=Tensor[(14, 15, 16), float64] */;
    (%1320, %1321)
  };
  %1322() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(14, 15, 16), float64]) */
}

def @func_9874() -> Tensor[(14, 15, 16), float64] {
  @func_9872() /* ty=Tensor[(14, 15, 16), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen760/build/output.py", line 3867, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:08:05] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_39 = relay.var("var_39", dtype = "float32", shape = (16, 5, 9))#candidate|39|(16, 5, 9)|var|float32
uop_40 = relay.acosh(var_39.astype('float32')) # shape=(16, 5, 9)
output = uop_40
output2 = uop_40
func_57 = relay.Function([var_39,], output)
mod['func_57'] = func_57
mod = relay.transform.InferType()(mod)
mutated_mod['func_57'] = func_57
mutated_mod = relay.transform.InferType()(mutated_mod)
var_58 = relay.var("var_58", dtype = "float32", shape = (16, 5, 9))#candidate|58|(16, 5, 9)|var|float32
func_57_call = mutated_mod.get_global_var('func_57')
call_59 = func_57_call(var_58)
output = call_59
func_60 = relay.Function([var_58], output)
mutated_mod['func_60'] = func_60
mutated_mod = relay.transform.InferType()(mutated_mod)
var_151 = relay.var("var_151", dtype = "uint32", shape = (11, 12, 1))#candidate|151|(11, 12, 1)|var|uint32
var_152 = relay.var("var_152", dtype = "uint32", shape = (11, 12, 5))#candidate|152|(11, 12, 5)|var|uint32
bop_153 = relay.multiply(var_151.astype('uint32'), var_152.astype('uint32')) # shape=(11, 12, 5)
output = bop_153
output2 = bop_153
func_161 = relay.Function([var_151,var_152,], output)
mod['func_161'] = func_161
mod = relay.transform.InferType()(mod)
var_162 = relay.var("var_162", dtype = "uint32", shape = (11, 12, 1))#candidate|162|(11, 12, 1)|var|uint32
var_163 = relay.var("var_163", dtype = "uint32", shape = (11, 12, 5))#candidate|163|(11, 12, 5)|var|uint32
output = func_161(var_162,var_163,)
func_164 = relay.Function([var_162,var_163,], output)
mutated_mod['func_164'] = func_164
mutated_mod = relay.transform.InferType()(mutated_mod)
var_357 = relay.var("var_357", dtype = "float64", shape = (13, 12, 11))#candidate|357|(13, 12, 11)|var|float64
const_358 = relay.constdtype = "float64")#candidate|358|(13, 12, 11)|const|float64
bop_359 = relay.greater_equal(var_357.astype('bool'), relay.reshape(const_358.astype('bool'), relay.shape_of(var_357))) # shape=(13, 12, 11)
func_57_call = mod.get_global_var('func_57')
func_60_call = mutated_mod.get_global_var('func_60')
var_380 = relay.var("var_380", dtype = "float32", shape = (720,))#candidate|380|(720,)|var|float32
call_379 = func_57_call(relay.reshape(var_380.astype('float32'), [16, 5, 9]))
call_381 = func_57_call(relay.reshape(var_380.astype('float32'), [16, 5, 9]))
output = relay.Tuple([bop_359,call_379,var_380,])
output2 = relay.Tuple([bop_359,call_381,var_380,])
func_383 = relay.Function([var_357,var_380,], output)
mod['func_383'] = func_383
mod = relay.transform.InferType()(mod)
mutated_mod['func_383'] = func_383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_383_call = mutated_mod.get_global_var('func_383')
var_385 = relay.var("var_385", dtype = "float64", shape = (13, 12, 11))#candidate|385|(13, 12, 11)|var|float64
var_386 = relay.var("var_386", dtype = "float32", shape = (720,))#candidate|386|(720,)|var|float32
call_384 = func_383_call(var_385,var_386,)
output = call_384
func_387 = relay.Function([var_385,var_386,], output)
mutated_mod['func_387'] = func_387
mutated_mod = relay.transform.InferType()(mutated_mod)
var_553 = relay.var("var_553", dtype = "int32", shape = (11, 11, 9))#candidate|553|(11, 11, 9)|var|int32
var_554 = relay.var("var_554", dtype = "int32", shape = (11, 11, 9))#candidate|554|(11, 11, 9)|var|int32
bop_555 = relay.subtract(var_553.astype('int32'), relay.reshape(var_554.astype('int32'), relay.shape_of(var_553))) # shape=(11, 11, 9)
output = relay.Tuple([bop_555,])
output2 = relay.Tuple([bop_555,])
func_560 = relay.Function([var_553,var_554,], output)
mod['func_560'] = func_560
mod = relay.transform.InferType()(mod)
mutated_mod['func_560'] = func_560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_560_call = mutated_mod.get_global_var('func_560')
var_562 = relay.var("var_562", dtype = "int32", shape = (11, 11, 9))#candidate|562|(11, 11, 9)|var|int32
var_563 = relay.var("var_563", dtype = "int32", shape = (11, 11, 9))#candidate|563|(11, 11, 9)|var|int32
call_561 = func_560_call(var_562,var_563,)
output = call_561
func_564 = relay.Function([var_562,var_563,], output)
mutated_mod['func_564'] = func_564
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1187 = relay.const([[[1.039814,6.788194,7.054789,-7.884533,4.710247,2.347939,1.049458,-6.639373,4.292996],[-9.721471,-6.067575,9.259688,-9.535742,3.459301,9.657317,6.801783,-8.439682,-5.003123],[4.162612,9.813618,6.303120,5.263005,5.708378,8.135002,-8.941891,-8.969521,-2.551161],[-3.845945,0.508856,-9.696916,-4.802765,-2.024557,-6.898956,-6.421328,7.127838,-3.306171],[2.220786,3.535082,8.442673,6.017180,-0.955752,-6.734997,-8.286476,8.494526,-6.075663],[-6.444015,-2.304754,-9.098054,-1.559065,-2.234849,-9.818038,-7.230608,0.312557,6.190732],[-5.408830,-3.126174,-1.024946,2.359679,-9.018715,-0.684823,-9.408133,4.435253,3.321080],[7.245044,5.242052,1.591797,-6.864415,9.547920,1.048976,-5.822604,5.454214,6.865457],[1.356438,-1.964251,3.209597,9.891648,-9.098482,-7.681774,-8.470230,5.012612,-7.625137],[2.675200,-6.348826,-4.156595,5.469859,6.066272,2.779240,-3.970500,4.193233,-0.605841],[-5.108905,-0.878335,4.117183,-9.392830,-4.910074,2.293407,8.297082,1.031280,2.658965],[5.999659,-5.303615,6.856560,5.018050,-1.423254,0.122279,-8.950180,-5.927773,-8.587431],[0.316158,8.313260,-8.386486,-1.387739,-6.580089,7.424024,4.575515,-3.153354,9.109514],[-6.569150,-9.198794,7.937404,5.663964,0.594774,-3.120861,4.624728,-9.818580,1.888918]]], dtype = "float64")#candidate|1187|(1, 14, 9)|const|float64
uop_1188 = relay.acos(const_1187.astype('float64')) # shape=(1, 14, 9)
bop_1190 = relay.bitwise_or(uop_1188.astype('int32'), relay.reshape(const_1187.astype('int32'), relay.shape_of(uop_1188))) # shape=(1, 14, 9)
uop_1193 = relay.sqrt(uop_1188.astype('float32')) # shape=(1, 14, 9)
func_560_call = mod.get_global_var('func_560')
func_564_call = mutated_mod.get_global_var('func_564')
var_1197 = relay.var("var_1197", dtype = "int32", shape = (1089, 1))#candidate|1197|(1089, 1)|var|int32
call_1196 = relay.TupleGetItem(func_560_call(relay.reshape(var_1197.astype('int32'), [11, 11, 9]), relay.reshape(var_1197.astype('int32'), [11, 11, 9]), ), 0)
call_1198 = relay.TupleGetItem(func_564_call(relay.reshape(var_1197.astype('int32'), [11, 11, 9]), relay.reshape(var_1197.astype('int32'), [11, 11, 9]), ), 0)
bop_1209 = relay.not_equal(uop_1193.astype('bool'), relay.reshape(bop_1190.astype('bool'), relay.shape_of(uop_1193))) # shape=(1, 14, 9)
func_560_call = mod.get_global_var('func_560')
func_564_call = mutated_mod.get_global_var('func_564')
call_1213 = relay.TupleGetItem(func_560_call(relay.reshape(var_1197.astype('int32'), [11, 11, 9]), relay.reshape(call_1196.astype('int32'), [11, 11, 9]), ), 0)
call_1214 = relay.TupleGetItem(func_564_call(relay.reshape(var_1197.astype('int32'), [11, 11, 9]), relay.reshape(call_1196.astype('int32'), [11, 11, 9]), ), 0)
const_1215 = relay.const([[[True,False,True,False,True,True,True,True,False],[False,True,False,True,False,False,False,True,False],[False,True,True,True,True,False,True,False,False],[False,False,False,True,True,False,False,True,False],[True,True,True,True,True,False,False,False,False],[False,False,False,False,False,True,True,True,False],[True,True,False,True,True,False,False,False,False],[False,False,True,False,False,False,False,True,False],[False,True,False,True,True,True,True,True,True],[False,False,True,False,False,False,False,True,True],[True,True,False,True,False,False,False,False,False],[True,False,False,True,True,True,True,False,True],[False,True,False,False,True,True,True,True,True],[True,True,False,False,False,False,False,True,False]],[[True,False,False,True,True,True,True,False,False],[True,True,False,False,False,True,False,False,False],[True,True,True,False,False,False,True,False,True],[True,True,False,True,False,False,True,True,True],[False,True,True,False,False,True,False,False,True],[True,False,True,True,False,False,False,False,False],[True,True,False,False,False,True,False,True,True],[True,True,True,False,True,False,False,False,False],[True,False,False,False,False,False,True,True,False],[True,False,True,True,True,False,True,True,True],[True,True,False,False,False,True,True,True,True],[True,True,True,True,False,True,True,False,True],[False,True,True,False,False,True,True,True,False],[False,False,True,True,True,False,True,False,True]],[[True,True,False,False,True,True,True,False,True],[False,False,True,False,False,False,True,False,False],[False,False,True,False,False,True,True,True,True],[True,False,True,False,True,False,False,True,True],[True,False,False,False,True,False,True,True,False],[True,False,False,True,False,False,False,False,False],[False,True,True,True,False,False,False,True,True],[False,True,True,False,True,True,False,True,False],[False,True,True,False,False,True,False,False,True],[True,False,True,True,False,False,True,True,True],[True,True,False,False,False,True,True,False,False],[True,False,False,True,False,True,True,False,True],[False,False,True,False,True,False,True,True,False],[False,False,False,True,True,True,True,True,True]],[[False,True,True,True,False,True,True,True,True],[False,False,True,True,True,False,True,True,True],[True,False,False,True,False,False,True,True,True],[True,False,True,False,True,False,False,False,False],[True,True,True,True,True,False,False,False,True],[False,True,False,False,False,False,False,False,True],[True,True,False,False,False,True,True,True,False],[True,True,False,True,False,True,True,True,False],[True,False,False,False,False,False,False,False,False],[False,True,False,True,False,False,False,False,False],[True,False,True,True,True,False,True,True,True],[False,False,False,False,True,False,False,True,True],[False,True,True,True,True,False,True,True,False],[True,True,True,False,False,True,True,True,False]],[[False,False,True,True,False,True,True,False,False],[False,False,True,True,True,False,False,False,False],[True,True,True,True,True,False,False,True,False],[True,False,True,False,False,True,True,True,True],[True,True,True,True,True,True,True,False,False],[True,False,False,True,True,False,False,True,True],[False,True,False,False,True,False,True,True,True],[False,False,False,True,True,True,False,True,False],[False,False,False,False,True,True,True,True,False],[True,True,True,False,False,True,False,False,False],[False,False,True,True,False,True,False,False,True],[True,False,False,False,False,False,False,True,True],[True,False,False,False,True,False,True,True,False],[False,True,False,False,True,False,True,True,True]],[[True,True,True,False,False,True,False,False,False],[False,True,True,True,False,True,False,False,False],[False,False,True,False,False,False,False,True,True],[True,False,False,False,True,True,True,True,False],[False,True,False,False,True,True,True,True,False],[False,True,False,False,True,False,True,True,True],[True,True,False,True,False,False,True,False,False],[True,True,True,True,False,True,True,False,False],[True,False,True,True,False,False,True,True,True],[False,False,False,True,False,False,True,True,False],[True,False,True,True,True,False,True,False,False],[False,False,True,False,True,True,False,False,True],[False,True,False,False,True,True,False,False,True],[False,True,False,True,True,False,False,False,False]],[[False,True,False,True,True,False,False,False,True],[True,False,True,False,False,True,True,False,False],[False,True,True,True,True,False,True,False,True],[True,False,False,True,True,True,False,False,True],[False,False,True,False,True,True,True,True,True],[False,False,False,True,False,True,False,True,False],[False,False,True,False,False,True,False,True,False],[True,True,False,False,False,False,True,False,True],[False,True,True,False,False,True,False,True,False],[True,True,True,True,True,False,False,True,False],[False,True,True,False,True,True,True,True,True],[True,True,True,True,True,False,False,True,False],[True,True,True,True,False,False,True,False,False],[True,False,True,True,False,True,False,True,False]],[[True,False,True,False,True,False,True,False,False],[False,False,True,False,False,True,False,True,True],[False,False,True,False,True,False,False,False,False],[True,True,True,True,False,True,False,True,True],[True,False,True,True,False,False,False,True,False],[True,True,True,True,True,False,False,False,True],[False,False,False,True,True,True,False,False,True],[False,False,False,True,True,True,False,False,True],[False,True,False,False,False,True,False,True,True],[False,False,True,True,False,True,True,True,False],[False,False,False,False,False,False,False,True,False],[True,True,False,True,False,True,True,False,False],[True,False,True,False,False,True,True,False,False],[False,True,True,False,False,True,False,False,True]],[[False,False,False,False,False,False,True,True,False],[False,False,False,False,True,True,False,True,True],[True,False,True,True,False,True,True,False,True],[False,False,True,False,True,True,False,True,True],[False,False,False,False,True,True,True,True,False],[False,True,False,True,True,False,True,False,True],[False,True,True,True,False,False,False,False,True],[True,False,False,True,True,True,True,True,False],[False,False,True,True,False,True,True,False,False],[True,True,False,False,True,False,False,False,False],[False,False,False,True,True,False,True,False,True],[False,False,True,False,False,True,False,True,False],[True,False,False,True,False,True,True,False,False],[True,False,False,True,False,False,True,True,True]],[[False,True,False,True,True,False,False,False,False],[False,False,False,False,True,False,False,False,False],[True,True,True,True,True,True,True,False,False],[True,False,True,False,False,False,False,True,False],[False,False,False,True,False,False,True,False,True],[True,False,True,False,True,False,True,False,True],[False,True,False,False,False,False,False,False,False],[False,True,True,False,True,True,False,False,True],[False,True,True,True,True,True,False,True,False],[True,False,False,False,False,True,False,True,True],[False,True,False,False,True,True,False,False,False],[True,False,True,True,True,False,False,False,True],[False,True,False,False,False,False,True,False,True],[False,True,False,False,True,True,False,False,False]],[[True,False,False,True,True,True,False,False,False],[True,True,False,False,True,True,True,True,True],[True,False,False,False,True,True,False,True,False],[True,True,False,False,False,False,False,True,False],[True,False,False,True,True,True,False,True,False],[True,False,False,True,False,False,True,False,True],[False,True,False,False,False,True,True,False,True],[True,True,True,True,False,True,False,False,False],[True,False,True,False,True,False,False,False,False],[False,True,False,False,True,True,False,False,False],[False,True,False,True,False,True,False,False,False],[True,False,False,True,True,False,True,True,True],[True,True,False,True,False,True,True,False,True],[True,False,True,True,False,False,True,False,False]],[[True,False,False,True,False,False,True,True,False],[True,False,True,False,True,True,False,False,True],[False,False,True,True,True,True,False,False,False],[False,True,False,False,False,False,True,True,False],[True,False,False,True,True,False,True,False,False],[False,False,False,True,False,False,False,True,True],[True,True,True,True,True,True,True,False,True],[False,True,True,False,False,True,False,False,True],[True,True,True,True,True,True,True,False,False],[False,False,True,True,True,True,True,True,False],[False,False,False,True,False,True,False,True,False],[False,True,False,True,False,True,False,True,False],[True,True,False,True,True,False,True,False,True],[False,True,False,False,True,True,True,True,True]],[[False,True,False,False,True,False,False,False,False],[True,False,False,True,False,True,True,True,False],[True,False,False,True,False,False,True,True,True],[False,False,False,False,False,False,False,True,True],[False,True,False,True,True,False,True,False,False],[False,False,False,False,True,False,False,False,True],[False,False,False,False,False,False,False,False,False],[False,True,True,False,True,True,False,False,False],[False,True,False,True,True,False,True,True,False],[True,False,False,False,False,False,False,False,True],[False,True,True,True,True,False,False,True,False],[True,True,False,True,False,False,False,True,True],[False,False,True,False,True,True,True,False,True],[True,False,False,False,True,True,False,False,False]]], dtype = "bool")#candidate|1215|(13, 14, 9)|const|bool
bop_1216 = relay.multiply(bop_1209.astype('int32'), const_1215.astype('int32')) # shape=(13, 14, 9)
bop_1224 = relay.minimum(uop_1188.astype('uint16'), relay.reshape(bop_1209.astype('uint16'), relay.shape_of(uop_1188))) # shape=(1, 14, 9)
output = relay.Tuple([call_1196,var_1197,call_1213,bop_1216,bop_1224,])
output2 = relay.Tuple([call_1198,var_1197,call_1214,bop_1216,bop_1224,])
func_1227 = relay.Function([var_1197,], output)
mod['func_1227'] = func_1227
mod = relay.transform.InferType()(mod)
var_1228 = relay.var("var_1228", dtype = "int32", shape = (1089, 1))#candidate|1228|(1089, 1)|var|int32
output = func_1227(var_1228)
func_1229 = relay.Function([var_1228], output)
mutated_mod['func_1229'] = func_1229
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1389 = relay.var("var_1389", dtype = "float64", shape = (10, 4))#candidate|1389|(10, 4)|var|float64
uop_1390 = relay.acosh(var_1389.astype('float64')) # shape=(10, 4)
func_57_call = mod.get_global_var('func_57')
func_60_call = mutated_mod.get_global_var('func_60')
var_1397 = relay.var("var_1397", dtype = "float32", shape = (720,))#candidate|1397|(720,)|var|float32
call_1396 = func_57_call(relay.reshape(var_1397.astype('float32'), [16, 5, 9]))
call_1398 = func_57_call(relay.reshape(var_1397.astype('float32'), [16, 5, 9]))
func_1227_call = mod.get_global_var('func_1227')
func_1229_call = mutated_mod.get_global_var('func_1229')
var_1410 = relay.var("var_1410", dtype = "int32", shape = (1089,))#candidate|1410|(1089,)|var|int32
call_1409 = relay.TupleGetItem(func_1227_call(relay.reshape(var_1410.astype('int32'), [1089, 1])), 3)
call_1411 = relay.TupleGetItem(func_1229_call(relay.reshape(var_1410.astype('int32'), [1089, 1])), 3)
output = relay.Tuple([uop_1390,call_1396,var_1397,call_1409,var_1410,])
output2 = relay.Tuple([uop_1390,call_1398,var_1397,call_1411,var_1410,])
func_1413 = relay.Function([var_1389,var_1397,var_1410,], output)
mod['func_1413'] = func_1413
mod = relay.transform.InferType()(mod)
var_1414 = relay.var("var_1414", dtype = "float64", shape = (10, 4))#candidate|1414|(10, 4)|var|float64
var_1415 = relay.var("var_1415", dtype = "float32", shape = (720,))#candidate|1415|(720,)|var|float32
var_1416 = relay.var("var_1416", dtype = "int32", shape = (1089,))#candidate|1416|(1089,)|var|int32
output = func_1413(var_1414,var_1415,var_1416,)
func_1417 = relay.Function([var_1414,var_1415,var_1416,], output)
mutated_mod['func_1417'] = func_1417
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1574 = relay.var("var_1574", dtype = "uint8", shape = (16, 10, 10))#candidate|1574|(16, 10, 10)|var|uint8
var_1575 = relay.var("var_1575", dtype = "uint8", shape = (16, 10, 10))#candidate|1575|(16, 10, 10)|var|uint8
bop_1576 = relay.bitwise_and(var_1574.astype('uint8'), relay.reshape(var_1575.astype('uint8'), relay.shape_of(var_1574))) # shape=(16, 10, 10)
uop_1585 = relay.exp(bop_1576.astype('float64')) # shape=(16, 10, 10)
output = uop_1585
output2 = uop_1585
func_1587 = relay.Function([var_1574,var_1575,], output)
mod['func_1587'] = func_1587
mod = relay.transform.InferType()(mod)
var_1588 = relay.var("var_1588", dtype = "uint8", shape = (16, 10, 10))#candidate|1588|(16, 10, 10)|var|uint8
var_1589 = relay.var("var_1589", dtype = "uint8", shape = (16, 10, 10))#candidate|1589|(16, 10, 10)|var|uint8
output = func_1587(var_1588,var_1589,)
func_1590 = relay.Function([var_1588,var_1589,], output)
mutated_mod['func_1590'] = func_1590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1654 = relay.var("var_1654", dtype = "float64", shape = (14, 16, 2))#candidate|1654|(14, 16, 2)|var|float64
uop_1655 = relay.exp(var_1654.astype('float64')) # shape=(14, 16, 2)
func_1413_call = mod.get_global_var('func_1413')
func_1417_call = mutated_mod.get_global_var('func_1417')
var_1662 = relay.var("var_1662", dtype = "float64", shape = (40,))#candidate|1662|(40,)|var|float64
var_1663 = relay.var("var_1663", dtype = "float32", shape = (720,))#candidate|1663|(720,)|var|float32
var_1664 = relay.var("var_1664", dtype = "int32", shape = (121, 9))#candidate|1664|(121, 9)|var|int32
call_1661 = relay.TupleGetItem(func_1413_call(relay.reshape(var_1662.astype('float64'), [10, 4]), relay.reshape(var_1663.astype('float32'), [720,]), relay.reshape(var_1664.astype('int32'), [1089,]), ), 1)
call_1665 = relay.TupleGetItem(func_1417_call(relay.reshape(var_1662.astype('float64'), [10, 4]), relay.reshape(var_1663.astype('float32'), [720,]), relay.reshape(var_1664.astype('int32'), [1089,]), ), 1)
var_1666 = relay.var("var_1666", dtype = "int32", shape = (121, 9))#candidate|1666|(121, 9)|var|int32
bop_1667 = relay.floor_divide(var_1664.astype('float32'), relay.reshape(var_1666.astype('float32'), relay.shape_of(var_1664))) # shape=(121, 9)
output = relay.Tuple([uop_1655,call_1661,var_1662,var_1663,bop_1667,])
output2 = relay.Tuple([uop_1655,call_1665,var_1662,var_1663,bop_1667,])
func_1675 = relay.Function([var_1654,var_1662,var_1663,var_1664,var_1666,], output)
mod['func_1675'] = func_1675
mod = relay.transform.InferType()(mod)
var_1676 = relay.var("var_1676", dtype = "float64", shape = (14, 16, 2))#candidate|1676|(14, 16, 2)|var|float64
var_1677 = relay.var("var_1677", dtype = "float64", shape = (40,))#candidate|1677|(40,)|var|float64
var_1678 = relay.var("var_1678", dtype = "float32", shape = (720,))#candidate|1678|(720,)|var|float32
var_1679 = relay.var("var_1679", dtype = "int32", shape = (121, 9))#candidate|1679|(121, 9)|var|int32
var_1680 = relay.var("var_1680", dtype = "int32", shape = (121, 9))#candidate|1680|(121, 9)|var|int32
output = func_1675(var_1676,var_1677,var_1678,var_1679,var_1680,)
func_1681 = relay.Function([var_1676,var_1677,var_1678,var_1679,var_1680,], output)
mutated_mod['func_1681'] = func_1681
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1931 = relay.var("var_1931", dtype = "float64", shape = (1, 12, 6))#candidate|1931|(1, 12, 6)|var|float64
var_1932 = relay.var("var_1932", dtype = "float64", shape = (7, 12, 6))#candidate|1932|(7, 12, 6)|var|float64
bop_1933 = relay.subtract(var_1931.astype('float64'), var_1932.astype('float64')) # shape=(7, 12, 6)
func_1227_call = mod.get_global_var('func_1227')
func_1229_call = mutated_mod.get_global_var('func_1229')
var_1943 = relay.var("var_1943", dtype = "int32", shape = (1089,))#candidate|1943|(1089,)|var|int32
call_1942 = relay.TupleGetItem(func_1227_call(relay.reshape(var_1943.astype('int32'), [1089, 1])), 3)
call_1944 = relay.TupleGetItem(func_1229_call(relay.reshape(var_1943.astype('int32'), [1089, 1])), 3)
func_161_call = mod.get_global_var('func_161')
func_164_call = mutated_mod.get_global_var('func_164')
const_1974 = relay.const([7,-7,-1,-2,2,-2,-8,-1,-2,4,-6,-5,-1,9,6,-6,-9,1,7,-6,-9,-7,3,5,10,-3,-4,7,3,-7,-9,4,-3,10,10,-10,6,7,-5,7,2,4,-2,5,-8,-4,3,-6,5,-8,-2,6,-8,-7,3,-8,6,5,2,3,10,8,-7,10,10,9,-10,10,-5,-9,-1,-7,1,-6,2,5,-9,5,-9,10,-7,-1,-3,3,8,-10,2,-7,-7,-4,-4,-1,3,-9,-3,10,-9,4,-2,1,2,-10,-9,5,-9,5,9,-6,-3,5,-5,5,7,-5,-8,-8,10,-5,4,4,-3,9,-6,4,-10,-5,-5,-9,2,1,2,2], dtype = "uint32")#candidate|1974|(132,)|const|uint32
const_1975 = relay.const([10,-9,5,3,3,10,9,8,7,6,6,-1,8,4,5,7,3,8,-7,3,-10,-7,5,5,-9,-7,7,-1,1,-4,-7,2,8,-9,2,-5,6,-1,9,10,-7,4,5,10,1,10,7,-9,3,2,-1,-8,-2,8,7,3,7,7,-5,5,2,-5,9,-6,3,10,8,10,8,-3,-8,-8,-4,-6,-3,4,-8,4,2,-4,1,-10,1,-1,10,2,10,4,5,2,10,-3,6,10,1,-4,5,3,4,4,6,3,-6,-2,6,10,2,6,3,8,9,6,6,1,1,-5,1,-5,-4,9,10,5,3,2,7,-1,1,-2,7,8,-9,9,2,7,10,3,-3,4,10,-3,-3,5,2,-3,-3,8,-8,1,10,4,-4,-2,5,-5,1,2,-2,9,4,-4,-7,-8,1,2,7,-3,-3,8,-10,-3,-2,-4,1,10,-9,2,-9,8,-10,-1,-8,-8,9,1,2,10,-10,-10,-2,-6,-5,7,-1,-3,-7,7,-7,10,-2,7,6,8,6,7,-8,-8,-3,8,2,-4,4,-6,-8,-8,1,4,5,-5,10,8,9,3,-3,-8,10,3,5,4,-8,-4,8,-8,10,3,-5,7,6,-8,1,-1,-7,-3,-6,4,1,-4,-5,-1,6,-4,2,-7,-3,9,-8,-3,7,-7,-4,8,8,4,6,6,-9,5,6,-4,-6,3,3,8,3,-2,6,-4,-2,8,6,-10,-6,8,6,1,3,5,-9,4,10,-2,-6,1,-5,-7,-4,-5,1,-2,-5,8,-8,-4,8,10,-3,-6,-9,8,7,6,-2,2,4,10,-9,-9,-1,-4,10,7,-8,-4,-10,-10,6,6,7,-1,4,-2,10,-9,-4,-10,-9,-8,7,-2,4,4,8,-10,-10,7,2,6,-1,-3,-8,-9,-7,1,-1,-5,-9,-5,-10,3,5,3,-9,9,4,7,2,-6,-5,5,4,-8,-8,1,7,-10,-3,-10,-2,6,-1,-5,-1,2,-1,-9,-8,9,10,-5,-3,-1,-8,1,-2,-5,2,-5,-4,-6,-5,-10,-1,-10,7,10,-10,8,-2,7,8,6,-3,-2,8,-2,4,-8,10,-6,1,9,-6,9,-6,1,-8,3,-8,10,4,10,3,2,4,-10,-3,8,4,7,-4,3,5,-5,2,8,-7,-5,-6,2,9,7,-1,-3,-2,4,-1,10,-4,1,-2,3,9,10,8,-5,3,9,9,-10,2,-9,-2,9,7,1,10,1,-5,5,2,-10,-4,-3,-1,-3,9,-6,-4,7,6,3,4,-5,4,2,-10,2,-9,4,-8,-3,-3,-7,5,-10,-2,6,8,4,-1,-9,9,4,6,10,-7,2,3,8,-1,-8,3,8,-7,-3,-1,1,6,7,-5,8,9,3,7,-9,-2,-1,3,6,6,-10,4,4,-9,1,-8,-6,-9,9,2,4,7,9,-9,-1,6,9,-7,9,-5,-7,-9,2,-4,4,10,-10,-5,8,5,8,-5,3,-9,-5,3,9,-7,-2,5,4,5,-4,-2,6,-4,-1,9,-8,-4,-5,6,-3,-9,3,10,-9,3,7,8,5,6,-10,7,5,2,2,-6,-3,9,-8,5,-6,-1,-6,-4,10,6,-7,9,-8,-2,10,-5,-4,1,5,-1,4,4,2,2,10,-3,3,-6,2,-3,-9,-7,5,7,4,1,-2,10,2,6,-10,-6,-1,-3,-4,9,-5,8,-6,9,3,-10,2], dtype = "uint32")#candidate|1975|(660,)|const|uint32
call_1973 = func_161_call(relay.reshape(const_1974.astype('uint32'), [11, 12, 1]), relay.reshape(const_1975.astype('uint32'), [11, 12, 5]), )
call_1976 = func_161_call(relay.reshape(const_1974.astype('uint32'), [11, 12, 1]), relay.reshape(const_1975.astype('uint32'), [11, 12, 5]), )
func_1587_call = mod.get_global_var('func_1587')
func_1590_call = mutated_mod.get_global_var('func_1590')
var_1985 = relay.var("var_1985", dtype = "uint8", shape = (1600,))#candidate|1985|(1600,)|var|uint8
call_1984 = func_1587_call(relay.reshape(var_1985.astype('uint8'), [16, 10, 10]), relay.reshape(var_1985.astype('uint8'), [16, 10, 10]), )
call_1986 = func_1587_call(relay.reshape(var_1985.astype('uint8'), [16, 10, 10]), relay.reshape(var_1985.astype('uint8'), [16, 10, 10]), )
bop_1989 = relay.logical_or(call_1973.astype('bool'), relay.reshape(const_1975.astype('bool'), relay.shape_of(call_1973))) # shape=(11, 12, 5)
bop_1992 = relay.logical_or(call_1976.astype('bool'), relay.reshape(const_1975.astype('bool'), relay.shape_of(call_1976))) # shape=(11, 12, 5)
output = relay.Tuple([bop_1933,call_1942,var_1943,const_1974,call_1984,var_1985,bop_1989,])
output2 = relay.Tuple([bop_1933,call_1944,var_1943,const_1974,call_1986,var_1985,bop_1992,])
func_1995 = relay.Function([var_1931,var_1932,var_1943,var_1985,], output)
mod['func_1995'] = func_1995
mod = relay.transform.InferType()(mod)
mutated_mod['func_1995'] = func_1995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1995_call = mutated_mod.get_global_var('func_1995')
var_1997 = relay.var("var_1997", dtype = "float64", shape = (1, 12, 6))#candidate|1997|(1, 12, 6)|var|float64
var_1998 = relay.var("var_1998", dtype = "float64", shape = (7, 12, 6))#candidate|1998|(7, 12, 6)|var|float64
var_1999 = relay.var("var_1999", dtype = "int32", shape = (1089,))#candidate|1999|(1089,)|var|int32
var_2000 = relay.var("var_2000", dtype = "uint8", shape = (1600,))#candidate|2000|(1600,)|var|uint8
call_1996 = func_1995_call(var_1997,var_1998,var_1999,var_2000,)
output = call_1996
func_2001 = relay.Function([var_1997,var_1998,var_1999,var_2000,], output)
mutated_mod['func_2001'] = func_2001
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2032 = relay.var("var_2032", dtype = "int32", shape = ())#candidate|2032|()|var|int32
var_2033 = relay.var("var_2033", dtype = "int32", shape = (7, 10, 9))#candidate|2033|(7, 10, 9)|var|int32
bop_2034 = relay.multiply(var_2032.astype('int32'), var_2033.astype('int32')) # shape=(7, 10, 9)
func_161_call = mod.get_global_var('func_161')
func_164_call = mutated_mod.get_global_var('func_164')
const_2066 = relay.const([-5,8,7,-6,-8,-4,-8,3,-10,-10,3,-3,-9,4,-6,-7,-1,-1,-6,-9,7,3,8,7,-8,4,-6,4,6,3,-4,5,5,8,-4,-6,-10,8,-6,8,1,7,9,-7,9,6,-2,3,-6,1,-5,3,-7,-5,-6,-6,5,8,-7,6,5,-3,3,-6,-4,1,3,7,4,2,-5,9,-6,-1,-2,-10,10,-5,9,4,-6,7,10,1,7,6,-4,1,3,-4,2,-1,-9,-7,-6,4,-5,-3,-4,-1,-8,3,3,5,-8,9,4,2,8,4,10,8,-8,2,-5,-4,-1,8,-1,-8,-1,10,-8,-9,-4,10,10,1,9,1,-8,9], dtype = "uint32")#candidate|2066|(132,)|const|uint32
var_2067 = relay.var("var_2067", dtype = "uint32", shape = (1, 660))#candidate|2067|(1, 660)|var|uint32
call_2065 = func_161_call(relay.reshape(const_2066.astype('uint32'), [11, 12, 1]), relay.reshape(var_2067.astype('uint32'), [11, 12, 5]), )
call_2068 = func_161_call(relay.reshape(const_2066.astype('uint32'), [11, 12, 1]), relay.reshape(var_2067.astype('uint32'), [11, 12, 5]), )
output = relay.Tuple([bop_2034,call_2065,const_2066,var_2067,])
output2 = relay.Tuple([bop_2034,call_2068,const_2066,var_2067,])
func_2076 = relay.Function([var_2032,var_2033,var_2067,], output)
mod['func_2076'] = func_2076
mod = relay.transform.InferType()(mod)
var_2077 = relay.var("var_2077", dtype = "int32", shape = ())#candidate|2077|()|var|int32
var_2078 = relay.var("var_2078", dtype = "int32", shape = (7, 10, 9))#candidate|2078|(7, 10, 9)|var|int32
var_2079 = relay.var("var_2079", dtype = "uint32", shape = (1, 660))#candidate|2079|(1, 660)|var|uint32
output = func_2076(var_2077,var_2078,var_2079,)
func_2080 = relay.Function([var_2077,var_2078,var_2079,], output)
mutated_mod['func_2080'] = func_2080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2091 = relay.var("var_2091", dtype = "float32", shape = (13, 13))#candidate|2091|(13, 13)|var|float32
var_2092 = relay.var("var_2092", dtype = "float32", shape = (13, 13))#candidate|2092|(13, 13)|var|float32
bop_2093 = relay.maximum(var_2091.astype('float32'), relay.reshape(var_2092.astype('float32'), relay.shape_of(var_2091))) # shape=(13, 13)
func_383_call = mod.get_global_var('func_383')
func_387_call = mutated_mod.get_global_var('func_387')
const_2120 = relay.const([9.629551,2.852215,7.831551,-5.183687,5.722465,8.774636,0.268075,-7.537455,1.067992,6.124302,-8.040455,3.818818,7.430645,-2.949347,1.704851,-5.004743,5.095448,-7.831092,0.836523,-3.567300,-0.167866,2.779515,4.151761,-0.872098,-4.916791,6.290922,-4.816656,-7.614398,3.601781,-7.582219,-0.722092,8.454462,-1.255379,-1.341519,-0.450820,-8.818952,-6.357219,-2.038571,7.449220,-2.872654,0.736153,-1.516761,-3.482472,8.843508,6.469037,-2.140024,5.905098,-6.244057,0.110504,7.032782,2.492488,-4.441300,8.565615,7.140779,1.595499,-2.098591,7.182770,-1.520198,-2.632359,9.286365,9.374030,3.035703,-1.172421,-0.312423,1.450156,5.700895,4.046379,-9.587189,0.846035,-5.142769,-6.912898,3.497289,1.349689,8.839037,2.541915,-2.768075,9.104867,6.499295,6.088892,1.140420,1.314244,1.203988,0.019934,-2.501059,-6.065602,8.704058,4.288969,-2.957381,3.195880,-9.470122,0.799051,4.190316,8.164164,-2.720244,3.584872,6.568431,-3.490186,5.936820,-1.595430,-0.513388,-9.948637,6.665487,-7.530891,7.242262,-8.168576,0.610037,-1.581558,-8.761880,9.164577,-4.382141,-8.514669,-1.624739,-6.137547,-4.784732,5.321954,4.389535,1.539406,3.981149,9.453399,6.848225,0.572515,6.655816,5.106437,3.377465,-0.089047,3.152783,1.305786,4.067649,-6.840142,-3.177922,0.374468,1.635709,1.237189,-1.897187,4.827076,-6.392683,-5.153618,-0.060969,7.806501,9.528290,6.564928,-0.483302,-6.489738,7.073963,-0.530409,-5.589665,6.416832,-7.888358,-6.163571,6.150803,-0.101763,-1.210665,6.773572,-3.172618,-3.763234,-6.195650,9.904774,-3.465914,8.048073,-7.517325,-1.486739,9.118193,-1.112105,-0.324342,-0.584509,5.536491,4.014697,-0.691425,-8.443627,7.357556,-7.004760,1.226255,-4.875146,5.171136,4.618555,9.928229,-8.257659,8.099699,-1.420373,2.165405,-3.903711,8.144201,9.985584,-0.081809,9.465560,-9.175500,-7.248977,4.192353,-0.545929,-6.922105,-0.292425,9.288768,-0.843485,7.670675,-4.426549,0.444397,9.250783,-3.917564,-9.892712,5.604506,-8.242072,5.919347,7.993596,8.249539,2.458278,3.322002,-8.388577,-3.688313,7.700354,2.868180,2.157578,-1.144482,-7.834965,6.963520,-7.314118,-6.967659,-4.468712,6.223895,-4.064269,5.208711,-3.840437,2.738217,1.403232,2.981920,0.437842,-7.196125,2.262998,-4.720970,9.373451,5.860537,-2.710693,-0.070637,7.824132,-7.042222,5.550194,-4.933742,-5.690100,-9.453734,6.636741,-3.568584,-7.896696,9.622400,-5.555574,7.885428,0.040918,9.428026,-1.434678,0.263290,9.101111,4.699930,0.105588,-1.624910,3.632340,-9.678542,-3.811056,-0.740028,1.736725,-1.274493,9.746751,-7.876066,-1.854888,-8.929679,1.612342,8.167298,0.353440,2.267988,-2.780096,-3.056691,-8.999567,-1.235092,9.709878,-5.824203,4.494825,-6.364173,-6.934505,1.140136,-2.597424,-8.634314,1.015883,-8.288253,-8.312822,-4.381056,6.764017,8.111177,1.039069,-0.313223,-0.903795,3.065544,-2.561557,-2.114220,-5.164685,0.908925,9.839175,2.917111,3.325076,5.942246,9.838150,-6.812920,-3.824619,9.653825,-6.730229,-6.767439,-0.313249,-9.213200,-9.645751,1.778428,-4.176250,2.658226,-7.934314,2.309243,2.699433,-6.621808,-6.794735,5.835812,-3.955922,-2.941786,3.928699,8.608505,-2.266959,-5.611054,-6.570349,-0.608186,-9.510999,-7.526985,-7.101482,3.640761,-0.686194,-6.386980,-1.263572,7.091949,-2.846329,5.036872,-4.570065,5.508145,-5.732236,6.924770,-2.452102,-5.449190,-1.003065,0.041091,-8.073048,-5.961673,-8.373525,5.605753,-9.098190,1.049305,-8.538230,-3.229799,5.685263,9.023671,1.182576,-2.700312,-6.325224,5.773601,8.354998,5.813773,6.463555,-0.579861,1.123224,-8.691020,-4.766588,-4.227198,2.378441,-4.933903,3.549217,-9.490558,-3.853174,-0.470344,9.023507,3.732343,-9.488041,-0.747846,-1.288762,-7.364153,-8.700380,-0.946674,-8.779533,8.604366,3.982325,2.632430,-3.274516,-1.204894,-4.232587,7.596475,-8.079650,0.174264,-4.445366,-2.875996,-4.848412,-4.598856,5.724690,-2.618546,2.057586,9.995429,3.594498,4.936652,5.859806,-3.899889,-9.297759,5.757033,8.679953,-1.591356,6.229654,-9.895703,3.338698,-0.119858,0.338676,-5.555614,1.977931,-1.359007,-3.113544,-0.902076,5.994492,-8.585144,-0.931716,-5.235806,-9.821722,8.335670,7.014220,7.980447,-4.436111,7.665152,-1.546218,1.926244,-4.480852,-4.945955,8.667694,-3.164155,-9.450600,6.056301,-3.599725,-3.927380,-5.935410,-6.825416,5.615563,-0.397849,-1.530372,-3.147398,7.359415,-6.998968,0.196830,3.138676,5.001691,4.134422,-6.909206,-7.642218,-0.286722,7.634104,2.337272,-3.596034,6.518961,-2.857427,-4.946897,2.359764,-9.439170,2.320486,-9.184450,7.989896,-7.246235,3.538796,4.201054,-8.334128,-1.160492,-4.046524,5.387591,2.574338,3.850386,-1.908832,-3.806591,8.643099,2.224759,-4.935089,3.051773,0.981685,-0.229461,-8.921512,3.492156,7.832466,-8.462153,7.544624,-2.418047,1.049867,-6.515235,0.930223,3.743359,-8.056745,-9.240853,-7.628237,-7.545625,1.984301,1.489289,-8.817199,-3.683302,-7.009817,2.667680,0.412009,-6.767809,6.314855,-4.897020,2.540504,5.882108,1.396138,-4.424148,-2.275913,6.483522,1.409495,3.333512,9.703868,1.321385,0.376668,0.108949,-3.017286,1.815325,3.641013,4.568376,1.791424,-9.676211,-1.320862,-2.636838,6.256608,-0.444120,-7.749523,-8.740752,-9.995625,-0.269298,-2.680190,-0.149134,6.985253,-0.445444,2.198613,-4.001415,-0.061831,9.689682,5.021772,9.012469,-2.328971,-8.083227,-1.894579,-9.557875,-5.230666,-4.393388,6.098278,-3.657090,-1.886831,6.955139,-0.084599,-5.375954,-5.501794,6.356656,1.965729,-4.177935,-3.334835,2.955743,1.432190,1.705110,-0.956551,-1.244792,-6.501727,-9.882661,8.717596,3.692481,7.638684,-6.968563,1.372215,-9.659569,9.432257,-1.225632,6.736551,-1.972226,-1.634177,-9.666688,2.016185,-4.862556,0.703673,-3.114536,-5.675112,-4.975907,0.161874,1.388390,-5.082901,6.502054,-9.192955,-9.212751,7.226990,-7.832443,-3.864858,-0.254606,2.648439,-7.383170,-6.863837,1.600750,-0.485606,-0.499317,-7.851192,-5.257832,3.054442,-0.518881,-5.984714,3.122692,8.045079,2.802928,0.955683,6.211684,-6.654317,8.488917,-6.629333,4.546000,2.046123,-2.976736,1.698473,-4.246539,6.001133,-0.552632,9.741864,0.974862,7.285227,5.819366,2.871566,6.779074,-6.038188,-6.861155,9.201709,4.820575,2.334997,-6.961329,-7.280227,-3.070186,-5.013558,4.211237,-6.644001,-9.635597,1.449759,-4.939490,4.117384,-6.348131,4.124495,-7.639652,-7.529948,7.371324,-4.382262,-0.450111,-4.791636,-0.548982,2.484557,1.743686,-0.023425,4.324939,6.594608,-3.870275,3.752937,-9.766179,8.709203,9.268782,-6.079411,-8.359392,1.257751,4.580798,3.058884,-8.716917,-0.840899,-4.633413,0.627556,-7.866941,-1.487031,9.172942,-6.470768,-6.671473,9.533363,6.221940,-8.571967,-1.087118,7.147835,7.914934,8.516384,5.627980,0.945865,-5.302476,-7.676473,6.340863,-0.435699,-7.524436,-6.261436,-8.717423,2.404044,1.506178,1.218227,8.891837,-8.221557,8.516584,-2.443197,1.076674,9.560420,-4.325525,-9.480069,-0.151489,4.976128,8.401560,9.715161,7.338297,-0.509692,-0.481558,-8.395512,-1.119631,-5.151066,-5.922839,-5.179639,9.450250,1.027879,0.994569,7.507571,-9.567576,6.224820,6.850499,-9.432499,2.710916,8.290539,-9.124531,0.455383,-6.985335,7.496380,-2.999460,-5.808782,5.342741,1.617984,-7.740693,-1.312514,1.976543,-8.273838,-5.908746,8.120220,1.131637,6.746543,-8.639721,-8.244196,-2.941089,9.100995,-5.898002,-2.730557,-7.986679,-8.770535,9.372461,3.277199,-8.795232,0.096240,-2.635388,-8.503762,4.847888,-0.271485,-6.795836,7.128644,-2.528752,2.834842,-5.373097,-3.667077,-4.760242,7.618232,0.213704,-2.625463,3.050761,-1.169599,2.120122,3.832401,-5.827438,-7.596115,5.034084,5.077820,2.378191,-3.365956,7.391701,-6.499338,2.225138,9.918171,-4.669141,6.790692,9.840049,-9.490283,-2.396196,6.517458,9.349761,-6.409684,7.189983,-4.937711,-1.701448,1.096451,5.377436,1.976238,4.077868,8.468240,2.363714,7.208252,-2.738223,3.288520,-2.267128,8.660348,-8.584337,-5.561195,9.075561,-1.617925,0.537659,3.002597,2.552629,0.092892,1.558983,7.600799,7.201375,8.474706,-9.132386,0.971519,-0.902829,-1.112716,-6.341074,-6.126925,8.632862,5.346318,-7.469627,5.252552,-9.023610,2.417862,8.374694,-9.797942,8.033256,-5.407647,-3.959841,-7.239374,-8.250127,9.397338,9.798045,-9.873920,0.352675,1.598486,4.713134,1.244738,-4.702092,7.889093,3.324051,-2.765062,-6.575930,-1.170560,-6.558804,1.216275,3.844431,0.760205,-0.892904,7.711619,-4.709972,-2.830508,6.003883,7.115841,-8.763454,8.626757,-1.219480,-5.546770,-3.184309,8.271429,-2.289403,8.592718,9.806845,-2.206008,5.166964,3.601843,5.478337,2.533468,-2.873948,-3.926845,5.530098,-0.117345,0.579810,-7.788859,-8.199391,7.540291,-9.548825,-0.858390,6.608178,-6.559317,2.592752,-6.972033,8.492894,8.646179,-0.995880,-2.013156,-8.411565,2.192841,9.510112,7.483453,1.967733,-9.274260,-7.928528,-2.558702,-6.092286,-1.281116,-7.822174,-8.179871,-1.430554,5.797782,2.716532,-4.755716,6.078817,1.675633,-4.689205,-8.320160,0.765688,0.001928,4.918835,-0.707427,-7.435050,2.832460,6.460112,-9.823584,-3.679333,4.818990,3.925604,7.181260,1.759482,-9.465839,6.421257,-6.679003,0.701082,-8.697204,0.504916,-9.849115,7.539319,-7.507058,3.419840,-9.689821,7.632990,9.239736,-0.950179,6.193111,-3.902105,2.472241,-1.123707,-7.057732,0.253722,-2.726228,9.596178,5.491656,8.376849,-3.964486,-4.150702,-9.819099,-1.427609,5.754571,-8.124874,-4.853495,-5.824110,-8.650787,3.743277,-2.472008,-4.383701,2.339639,-3.080229,-3.018648,1.186922,-9.663507,-2.507647,9.649317,9.747647,0.275463,0.589451,-6.390594,9.595217,-8.932889,0.775833,8.291834,0.036693,-2.459763,1.932792,7.984311,6.596275,0.022634,-0.181837,-6.649955,1.303931,4.833355,3.743218,-6.004893,5.550313,-4.627431,1.541816,-9.930504,-3.059652,-3.469880,7.935397,-5.838463,-2.390786,-3.552868,-6.944033,-1.077425,-6.804670,-9.767291,0.686132,-9.073754,4.055793,8.459551,1.864532,-3.704688,-5.265788,0.182837,-4.321021,-9.143935,1.079744,-7.156081,5.161015,0.189762,-7.615184,-4.719954,-5.722514,-6.359857,3.196520,7.975509,6.879709,-2.554229,-5.860330,-0.825910,-7.516436,4.029276,0.969755,3.423386,-7.263614,6.112532,8.669390,-7.200216,-7.579393,1.415025,9.953746,-8.489391,-4.627668,-9.482816,2.802338,-1.855899,-0.256047,0.823686,0.165417,-0.736549,-1.200462,-5.553042,9.452894,2.018589,-9.027212,2.786330,0.986941,-8.156932,9.104244,0.543828,0.457230,-9.520274,2.492724,-1.011674,-7.419280,6.963817,-4.193198,-7.824579,-4.273494,4.961031,9.321256,-6.846257,6.256776,-4.988673,-2.630187,8.990636,7.308996,9.117494,5.186224,9.233043,-7.785178,-0.229321,9.505063,4.116926,9.123235,-4.400697,1.248968,2.158063,5.711690,7.013492,5.103962,-4.704470,-3.864721,-4.230501,2.377988,-3.426945,-4.991088,-3.712374,4.918900,5.749695,-2.681569,2.598345,2.775663,-4.681700,4.829573,-4.219226,-2.581128,9.059058,-4.743614,4.747488,-8.559127,2.317855,-1.398749,-1.744067,6.907363,-8.609944,3.682955,-7.409109,2.426034,1.896784,-3.885805,2.908875,-5.616668,-5.907168,-2.228141,-8.224972,2.011180,6.344764,8.086012,3.806196,-5.572564,5.125377,-5.818336,-2.228077,-3.940071,-3.434048,2.681893,-8.418804,-7.582055,-7.517649,-3.044654,5.350448,-2.035396,6.131339,-1.586246,5.428913,2.352963,-0.545078,-8.389034,3.763564,4.725903,0.705674,3.402258,-3.296649,-0.420871,4.520747,-1.173155,-4.837292,8.544519,-1.399386,7.032577,-6.830324,-4.070239,-4.605233,7.802662,-7.757409,4.772057,7.884027,8.845009,-3.649354,-6.814206,-2.157042,3.736310,-2.175457,-5.456851,-5.764235,-8.420601,-4.285048,-8.550157,9.126103,-4.831230,-3.500823,3.988254,8.688859,9.356271,0.182140,0.299434,-9.028887,-2.827164,2.259768,-6.613824,-2.516685,4.421969,8.620689,2.347859,0.962726,-8.898449,2.499253,-9.273096,-3.109265,6.917549,6.492616,3.427744,9.403594,-8.938845,3.875275,-2.894705,9.638399,-9.833208,6.835626,4.707158,-7.725655,-2.671758,-4.609100,-0.179374,0.643004,-0.755279,-6.466472,-0.558691,7.008378,-4.857225,0.286726,7.557714,-1.221144,-4.201949,6.145541,4.534730,4.955162,-9.367715,-1.447042,0.586879,-2.659775,-8.266918,3.645211,-7.393928,-7.158350,5.502891,3.451996,-0.292493,6.997939,-5.567792,2.302920,-2.677458,9.498216,-8.333001,3.758201,9.284140,7.129498,-4.562325,7.319348,7.021920,8.646658,6.722609,0.608162,3.785509,-2.880290,-2.179042,7.386130,6.528140,7.226432,-0.123830,5.526711,-9.313989,1.215715,9.246284,4.084092,-8.329850,-7.386457,1.531873,-5.382609,-1.730156,-5.480910,-3.016406,8.860945,1.585371,1.295318,3.594331,4.275405,4.911504,-7.540987,9.475129,3.262560,-3.992534,-1.109246,-1.493441,-2.866086,7.534366,2.190503,-3.431103,9.028649,3.192623,1.140499,8.327106,-4.090737,-3.025769,-0.499099,-4.367179,4.778387,4.584519,-6.937224,-3.752829,-5.874805,-7.238580,0.304670,-7.992445,-8.468471,1.559183,-0.414918,-6.180968,2.740949,0.550262,2.368659,-5.164261,-4.604397,-2.914361,2.545672,-7.627437,-9.882529,0.612371,8.044721,0.515074,6.185417,-9.125155,6.238870,-2.311581,3.206939,-8.674737,5.822377,5.062853,-1.526281,-0.707251,4.604061,9.629026,2.669991,5.103979,-4.025035,-1.605233,-4.400570,9.348096,-4.476721,-5.714848,7.869469,-6.518452,4.289225,0.439813,4.298437,9.401025,-0.243458,-9.949688,9.723349,-5.333877,-4.437359,4.922591,0.443107,7.925160,-9.557416,9.260679,-0.067476,-3.052165,-4.651470,-0.525844,-0.760142,-9.906091,-7.247850,-9.769385,-4.777180,-5.061525,-2.583077,4.024364,-6.762257,2.106469,3.604767,9.331512,-6.789687,9.393219,1.608643,-0.520019,-3.550841,-4.820329,3.418550,-7.543776,9.094648,8.916597,5.538782,-1.641643,7.283092,-5.330736,-8.398432,-1.205163,-9.458788,7.909284,1.427209,1.311973,-9.234939,8.872219,-1.933580,-3.131221,-1.980335,6.218239,-9.610585,4.569872,1.853463,-9.802512,3.084479,-5.872591,0.971788,9.568591,6.570402,-3.983970,-0.526176,-4.090085,5.663256,0.495900,-9.748768,1.139959,-2.279800,-5.123655,4.090189,9.104050,0.724379,-7.173741,-5.727919,-0.764898,-6.408803,8.239816,-8.579218,6.853778,-8.854516,6.684515,-5.604388,-2.091480,1.091909,-0.113599,9.095564,-2.943250,-7.615043,0.317979,-0.822122,-3.561327,-3.598544,-9.080248,8.495020,7.391524,-7.343394,-1.939486,1.776711,7.143521,6.762917,2.199191,0.656919,-8.623490,-0.227752,-3.579649,0.051043,8.370815,1.912893,-9.153472,-5.766954,-2.222553,-6.110733,8.640175,3.933587,-3.614239,-1.354852,-0.079223,6.328073,2.240851,-7.212357,8.629955,8.249801,-2.415639,-2.988152,2.703225,-0.065387,8.419446,2.736792,-1.014176,7.211423,0.549330,2.147447,7.058357,-7.941571,-8.556809,8.590736,-4.067247,6.920386,3.995693,4.986530,-3.318962,-9.227185,-5.125440,-4.301718,0.572544,-9.230489,4.361893,-0.108710,-8.576840,-7.005664,1.871424,-8.487899,-5.550989,-5.784849,7.359788,-9.938791,8.880196,1.476744,-4.324892,4.210969,2.544226,0.586081,0.879408,-0.575457,-0.566263,-7.286896,-2.302809,-5.956993,-5.990850,-5.019473,-5.365226,6.815917,2.653350,-1.184908,-8.087126,4.356832,5.777724,3.096648,-9.331479,-9.245877,-4.391142,3.948744,-4.336446,4.623388,-0.210006,-1.309101,-1.194167,2.151314,9.264290,-0.864031,0.865580,1.059178,-4.134683,7.351780,-5.557032,7.883581,-8.389956,9.878799,-8.997940,-4.242162,-3.813930,-4.259824,-2.673071,5.408961,0.057573,-5.067553,9.516345,4.934655,-2.630385,7.259072,-4.518407,0.719546,3.986951,1.722604,8.414439,-8.364343,4.041910,-4.988506,-1.855655,4.120376,9.427701,-0.047942,1.297452,-8.366087,-9.636932,3.312626,5.368614,-2.339904,0.725845,-9.006207,8.169022,5.053459,4.815396,-7.612156,6.203960,6.509676,6.430725,5.403777,7.513217,-9.599205,9.374727,1.371923,-9.252089,7.305521,0.937025,-9.507947,9.122488,6.455725,-5.869111,-7.719088,9.839870,-8.622036,-1.637769,-9.658434,-9.718413,0.239706,-8.667176,-1.588361,-9.529576,-5.642997,9.251412,-7.848539,-1.810006,-0.439153,-9.856240,-0.085808,-3.492619,-2.609372,1.906212,7.989920,-3.679064,5.468775,8.706302,2.478218,-0.687301,8.506669,3.928214,-8.448431,-7.816965,-3.782222,1.675678,-4.031134,1.595501,-3.667381,5.980181,-9.668099,9.497691,-6.978694,0.058500,-9.353971,-5.199665,-5.246226,-3.560356,7.773867,7.819347,8.375734,3.271501,-9.698286,-8.289714,1.853773,-1.822463,3.768203,9.633421,-4.695441,-3.846551,-2.725590,2.747220,-4.753510,0.286880,-0.649971,3.055434,-0.554248,5.275368,2.572079,6.863691,-2.338343,0.496575,8.816845,3.439282,4.430196,6.680479,-5.370431,-2.335743,-4.737250,2.692841,-7.816618,-1.494889,3.072329,-7.513040,0.833669,9.065793,4.650604,-7.572733,0.785116,0.479574,1.598326,4.764894,2.325112,-2.842714,7.243571,-7.198682,-4.008403,-1.428376,-8.303963,-7.075810,0.565682,4.952420,-1.002219,9.632544,-5.659741,0.534748,1.383790,4.300699,-6.408525,-5.032612,2.760758,-6.077762,2.722053,5.226633,6.588336,-9.523458,2.082365,4.092711,4.853527,-5.783365,7.979338,5.242684,-0.793415,7.445559,-7.231549,-2.115816,-5.999939,0.287229,-3.052250,-8.189912,-3.064623,-1.420176,-2.651762,-1.413836,-1.066740,7.763972,-3.912281,0.669877,-0.650471], dtype = "float64")#candidate|2120|(1716,)|const|float64
const_2121 = relay.const([[-1.412732],[3.880828],[4.779992],[-3.414806],[-4.575124],[3.292990],[3.482279],[-4.458516],[-3.562810],[3.039035],[-5.171628],[4.008189],[-2.398582],[1.643488],[7.148637],[6.878251],[9.959666],[-4.774833],[-0.552367],[-5.193873],[4.706160],[-4.267539],[0.641165],[-0.083715],[-4.509225],[-2.016951],[-4.230276],[5.445186],[3.715727],[-6.008375],[9.485251],[-0.815866],[-4.628673],[0.079795],[-3.210787],[2.379972],[0.972444],[-1.488712],[-0.945481],[8.580416],[-4.311221],[0.063397],[6.317889],[7.663776],[5.715892],[7.406050],[-3.190540],[2.858974],[-4.826657],[6.870015],[-1.973789],[-2.051619],[-7.655552],[7.384933],[-4.128826],[-9.413552],[-8.372305],[2.066115],[-7.148583],[-0.520814],[-8.440801],[-0.830717],[-3.475256],[5.713510],[-3.739103],[7.719917],[9.359959],[5.573300],[-5.036578],[-2.375261],[4.842795],[6.891754],[-8.855767],[8.662241],[-5.513667],[-0.051761],[-6.497579],[3.664885],[-2.755398],[0.642469],[3.747633],[-1.848711],[1.664841],[0.778768],[-9.030923],[-0.467721],[-9.977531],[9.213131],[-1.075396],[5.454209],[3.781358],[-0.613618],[2.663557],[-2.793482],[-9.896641],[-0.145197],[-7.139942],[9.029197],[-2.324906],[7.118024],[-0.951904],[-1.978784],[3.038384],[-9.751075],[9.056270],[-5.246860],[2.586382],[-5.959331],[-8.561997],[4.493333],[-5.554809],[7.250344],[-2.642826],[-6.589349],[3.758475],[3.205558],[2.050272],[-7.314478],[7.954414],[5.931600],[-2.573383],[5.569597],[-7.077194],[-3.744621],[-8.776391],[8.175794],[-2.286475],[7.292239],[6.098751],[2.064035],[3.472588],[1.226965],[5.479778],[-2.326312],[-8.862766],[8.099628],[0.312018],[-3.620777],[-7.120020],[8.179521],[-3.326337],[1.114988],[8.275916],[8.341564],[6.954618],[1.311357],[9.758617],[4.885092],[-7.763656],[-2.961714],[8.311268],[7.543661],[-3.611366],[-9.162409],[2.765456],[-1.506105],[8.590598],[-1.042640],[-6.403022],[4.466383],[-4.929434],[3.742783],[7.480257],[-4.284984],[-7.928700],[-1.192380],[-7.369153],[-6.974092],[-8.289188],[4.692720],[-3.003024],[8.323496],[-1.845295],[-7.717361],[-2.401325],[-3.422676],[-5.739244],[-2.852277],[-7.314014],[2.171002],[5.036699],[3.073147],[-1.097420],[3.451666],[-9.949744],[-1.913301],[-9.721636],[-0.263492],[5.193821],[8.980370],[8.434772],[-4.008373],[6.305203],[7.364531],[-5.684281],[-8.635063],[9.354511],[0.215034],[-6.225185],[-5.225578],[-2.794052],[6.697060],[-6.015255],[5.901855],[0.590319],[8.033332],[-6.773131],[-3.183416],[7.087301],[5.325814],[4.193390],[5.049516],[6.198209],[-8.960697],[1.021700],[6.379033],[5.138723],[-3.691798],[-9.246793],[6.689324],[1.271395],[-5.526705],[-2.856507],[0.272677],[2.907439],[0.532565],[7.466105],[4.938529],[-7.198173],[-1.154682],[-0.152835],[9.542072],[-3.377000],[8.742356],[4.994328],[-3.446515],[-1.670721],[-7.406156],[-8.573313],[-8.213928],[-7.984086],[-3.013750],[-2.717508],[8.035451],[5.484310],[0.285252],[3.565270],[6.872938],[-3.288427],[-2.228822],[5.671679],[-8.260151],[-0.009924],[-2.913495],[0.063755],[-6.822074],[1.083613],[6.221348],[-1.237170],[-4.366563],[-1.776194],[8.502439],[-7.898589],[6.417554],[4.635456],[-9.645454],[5.116175],[-8.151647],[9.727749],[-1.293217],[3.816310],[-3.035147],[7.769523],[9.066248],[-9.749170],[8.505186],[9.440474],[-7.487169],[6.512994],[-9.304105],[-8.041035],[0.233146],[-0.775549],[0.458888],[-7.053488],[-3.336485],[-8.061790],[-0.949068],[-6.671012],[5.879912],[0.104484],[9.190746],[8.607175],[-1.775235],[3.424703],[8.624302],[6.006407],[2.039508],[2.016854],[5.024543],[-6.911930],[1.497871],[2.600893],[-8.391652],[8.426681],[-2.118342],[-2.323244],[4.247925],[-3.774252],[-5.998573],[7.385471],[5.289682],[-5.572161],[-3.744052],[2.684090],[-7.313297],[4.958453],[-6.049238],[8.316920],[-7.999402],[-4.982677],[-6.844899],[-6.076853],[-9.709123],[9.819745],[-1.723600],[-7.696630],[-8.969325],[5.074787],[-6.093775],[-5.852316],[-6.357079],[1.961670],[-0.296780],[-6.352391],[7.459153],[-6.413270],[2.304212],[-0.959801],[1.788272],[5.065094],[-9.968417],[0.839232],[-0.596520],[8.644202],[9.689638],[0.829687],[5.851413],[-7.341153],[-8.949642],[-9.169276],[8.498427],[2.188633],[5.996777],[-2.432501],[0.401227],[-4.470412],[2.925283],[-2.541201],[-4.573444],[2.480340],[-1.905828],[-6.287940],[1.217493],[3.218659],[8.245590],[9.629978],[-0.323203],[2.183282],[-1.527679],[-5.030380],[3.929111],[1.987120],[-2.912622],[1.477671],[5.466334],[-0.353066],[1.552057],[4.548228],[0.137424],[-3.343855],[-2.404012],[8.803008],[-5.296879],[-5.096752],[-4.104628],[5.326497],[-7.440634],[5.907575],[-0.795965],[5.490724],[0.985381],[8.095845],[-3.637608],[8.321967],[-2.733045],[-1.552880],[2.083515],[7.587469],[9.710382],[6.627270],[1.142212],[8.839767],[5.755316],[-0.146158],[1.635415],[-1.385273],[-1.170309],[-1.415549],[-5.740645],[-3.416075],[4.514777],[-0.995265],[3.172326],[8.297194],[0.532464],[-0.800969],[4.604935],[-4.034553],[-0.355657],[-3.605386],[2.871710],[-9.381463],[8.685761],[-8.382032],[-7.186468],[-2.423115],[-1.697768],[9.357097],[-1.557670],[-5.954778],[1.089614],[-9.360943],[-1.656702],[9.226239],[-8.041324],[8.474770],[-2.423031],[3.675340],[-3.536494],[-2.198027],[-2.643145],[-1.930936],[5.100139],[-9.289697],[-1.190019],[7.723688],[-8.016516],[-8.054625],[4.467265],[6.649614],[-6.416415],[3.162358],[1.716346],[-3.514668],[-2.387042],[-0.440687],[0.707910],[0.829282],[-3.163080],[-8.981862],[-6.745297],[-7.758754],[-9.091679],[-8.097628],[0.945013],[8.523360],[-3.588868],[-8.878561],[2.133716],[2.373812],[7.373310],[-7.744696],[-2.513146],[6.224503],[-3.207389],[-0.689914],[-4.687621],[9.899708],[7.815599],[-4.645336],[4.371056],[-7.780927],[-3.825953],[6.433933],[7.182120],[8.371302],[6.575589],[0.764261],[-6.619154],[-6.798800],[7.259316],[6.437921],[-5.167842],[-4.790057],[-7.310376],[-1.804463],[-2.784093],[3.202799],[6.021963],[-5.901614],[1.371252],[-7.745638],[1.312099],[3.170560],[-7.506020],[-9.296319],[-5.494526],[8.390690],[-9.160205],[-7.978737],[-5.541353],[5.883688],[-5.785877],[3.740348],[9.427210],[-2.287325],[-8.483786],[6.762491],[2.511616],[0.014723],[7.637264],[2.110089],[0.275641],[-9.333803],[-1.478008],[2.046577],[6.277277],[2.526914],[4.337857],[7.878184],[-9.989537],[-0.301572],[-2.259038],[-3.103003],[-3.369907],[-6.448908],[-2.908633],[0.319376],[-1.535590],[2.759125],[-8.368945],[-3.952029],[8.935115],[9.556108],[-3.616639],[-2.007637],[9.687319],[6.144278],[-9.397407],[3.089726],[9.699882],[-4.043097],[6.730256],[-4.451905],[3.162876],[-3.626993],[-5.112380],[3.200369],[-1.305069],[-4.132211],[-6.133264],[9.098859],[5.688772],[4.469595],[-5.817169],[-7.957634],[-2.300123],[0.010157],[-5.934046],[-9.128999],[-6.532093],[-3.282112],[8.462565],[-6.799252],[-5.445683],[-2.194691],[0.380855],[-2.100014],[4.736225],[3.635473],[-3.616653],[1.593505],[-2.790256],[-9.171226],[-2.446273],[7.850296],[8.032570],[7.915027],[5.069353],[-2.902346],[5.162751],[-6.893994],[-8.252344],[8.592951],[0.368384],[-3.177265],[2.065084],[-3.285705],[-4.190558],[-8.849827],[1.976975],[5.761248],[6.884420],[2.233756],[1.860134],[3.203465],[0.078298],[0.699197],[-2.057001],[4.845161],[9.301420],[-8.999617],[0.638816],[3.392021],[0.969244],[4.541706],[0.892788],[-5.733536],[3.404638],[1.515716],[8.490432],[8.146038],[4.457223],[8.892562],[-9.987099],[0.743886],[-0.076674],[-4.268496],[-6.009871],[5.175446],[8.208673],[1.419582],[-4.799360],[-4.392708],[2.423733],[-9.985181],[-5.929811],[2.951540],[-3.507230],[5.655510],[0.674130],[1.503046],[-5.234329],[-9.725382],[2.691603],[1.684676],[-2.481332],[5.923409],[-9.732254],[-5.123824],[7.565664],[-6.380328],[7.965870],[3.529888],[-9.515667],[-1.158232],[0.412876],[7.236223],[0.072149],[8.894607],[-2.298363],[9.301800],[0.458696],[3.260961],[-7.345645],[5.756532],[-5.906187],[9.692625],[-8.650809],[9.346469],[-1.338893],[-4.076421],[5.130658],[7.249939],[2.484524],[6.997395],[2.818633],[-5.374627],[1.092853],[-9.686554],[-5.953199],[-4.200560],[-1.769349],[-6.980133],[-4.548008],[9.052455],[4.805302],[9.099342],[-7.606298],[7.703653],[5.875971],[9.156210],[3.472028],[6.229132],[0.344970],[0.067441],[8.264269],[-9.211181],[9.273946],[-8.785285],[-9.795860],[-5.426170],[-1.978321],[4.750506],[1.122625],[-9.005542],[2.669549],[8.460347],[-1.280510],[-3.722558],[2.599359],[9.659395],[2.027298],[-4.468291],[-8.035613],[-9.929222],[-7.042517],[-4.862773],[-6.108458]], dtype = "float32")#candidate|2121|(720, 1)|const|float32
call_2119 = relay.TupleGetItem(func_383_call(relay.reshape(const_2120.astype('float64'), [13, 12, 11]), relay.reshape(const_2121.astype('float32'), [720,]), ), 0)
call_2122 = relay.TupleGetItem(func_387_call(relay.reshape(const_2120.astype('float64'), [13, 12, 11]), relay.reshape(const_2121.astype('float32'), [720,]), ), 0)
func_560_call = mod.get_global_var('func_560')
func_564_call = mutated_mod.get_global_var('func_564')
const_2124 = relay.const([[-1],[-9],[-7],[-4],[-3],[10],[4],[6],[-7],[-9],[9],[-9],[-8],[-7],[-2],[3],[2],[-8],[9],[3],[4],[-5],[-3],[4],[9],[2],[-1],[-2],[-1],[9],[-10],[9],[-6],[-10],[-9],[-9],[8],[-3],[9],[2],[5],[8],[5],[2],[3],[-1],[6],[4],[7],[9],[6],[-10],[3],[7],[1],[10],[3],[1],[-7],[8],[-4],[2],[1],[2],[-7],[5],[-8],[-10],[-8],[-3],[-8],[6],[-10],[-3],[-8],[9],[-2],[-2],[7],[2],[-6],[1],[-3],[6],[-10],[4],[-1],[-9],[-5],[-2],[-3],[-7],[-3],[7],[-4],[6],[-9],[-3],[-8],[6],[8],[-3],[-10],[4],[5],[10],[-6],[-3],[5],[-9],[-1],[10],[-1],[-2],[2],[6],[8],[2],[4],[-3],[9],[-6],[-10],[6],[-9],[8],[-9],[9],[1],[-1],[-9],[-4],[-8],[7],[10],[10],[-7],[6],[7],[5],[-6],[-5],[-1],[-7],[6],[-5],[4],[-6],[-6],[4],[-6],[7],[3],[1],[7],[8],[-10],[10],[-9],[-4],[-6],[-4],[8],[5],[-4],[8],[-5],[3],[10],[10],[1],[1],[-10],[3],[-2],[6],[5],[10],[-9],[-5],[-4],[-3],[10],[9],[-10],[-7],[6],[10],[-1],[-7],[1],[-10],[-3],[-8],[-5],[-5],[8],[8],[-2],[9],[-5],[-10],[-8],[-6],[5],[-1],[7],[3],[-4],[-2],[5],[-8],[3],[-4],[2],[-6],[-2],[7],[-9],[9],[8],[-2],[-5],[-5],[-7],[-6],[2],[9],[1],[-10],[-9],[-9],[5],[10],[-10],[-9],[3],[1],[8],[5],[-3],[-10],[-6],[-2],[-4],[-9],[1],[3],[3],[-1],[4],[-1],[-5],[3],[10],[-1],[-10],[10],[9],[10],[-6],[-6],[6],[-4],[-3],[-1],[-7],[4],[-7],[-5],[6],[10],[6],[9],[-1],[1],[-7],[-4],[-6],[-1],[5],[8],[8],[-6],[-8],[10],[9],[-7],[7],[2],[-6],[-5],[2],[5],[8],[-7],[-1],[7],[-6],[2],[5],[9],[1],[9],[-3],[-8],[-4],[1],[2],[3],[5],[5],[6],[5],[6],[-7],[1],[-3],[3],[4],[2],[6],[-7],[-3],[-4],[-1],[8],[-5],[9],[-6],[9],[-5],[9],[-3],[-9],[10],[-9],[1],[-3],[4],[-3],[-6],[-4],[-7],[1],[7],[-7],[10],[-10],[10],[-10],[-3],[5],[6],[10],[-5],[9],[-6],[-2],[-6],[-6],[-5],[-5],[9],[-8],[7],[9],[10],[5],[2],[-7],[10],[8],[-9],[-1],[-5],[9],[-10],[-3],[-10],[-9],[-10],[8],[-2],[3],[8],[-9],[-8],[-6],[-9],[-3],[4],[4],[-6],[4],[-7],[-4],[3],[4],[-3],[-7],[1],[-1],[5],[7],[4],[8],[-3],[3],[-9],[-7],[4],[-3],[3],[10],[6],[-9],[5],[7],[7],[4],[5],[-1],[-2],[8],[-3],[-8],[-6],[2],[8],[-5],[1],[-3],[-6],[-4],[4],[6],[10],[6],[4],[-5],[-8],[-6],[4],[2],[-1],[-8],[1],[-7],[-2],[1],[1],[-5],[-7],[-2],[6],[-9],[-10],[7],[-4],[6],[7],[8],[-7],[-6],[7],[5],[5],[8],[-5],[-2],[-10],[5],[8],[2],[2],[9],[-3],[-7],[3],[-9],[1],[10],[-6],[-7],[-3],[-1],[-3],[-10],[8],[-5],[1],[-10],[-3],[5],[10],[-8],[-8],[6],[-1],[6],[-5],[-4],[3],[9],[10],[-2],[8],[-7],[10],[-6],[-6],[3],[5],[9],[-4],[7],[-1],[-6],[-6],[8],[1],[-7],[3],[-1],[-6],[3],[-3],[7],[6],[3],[10],[-9],[-2],[-7],[-4],[-4],[-4],[-3],[5],[-10],[-10],[2],[-7],[-1],[-4],[5],[4],[-4],[1],[-5],[-6],[-7],[8],[-9],[-5],[-5],[-2],[-10],[7],[-2],[-4],[4],[10],[-4],[-1],[5],[8],[2],[-5],[10],[-10],[7],[-1],[10],[6],[8],[10],[-2],[1],[-3],[-5],[-4],[4],[8],[6],[9],[2],[-9],[3],[-2],[5],[1],[-3],[8],[-8],[-6],[3],[7],[-5],[5],[4],[9],[-10],[-2],[10],[-1],[3],[10],[6],[-10],[3],[1],[-6],[-3],[5],[4],[4],[7],[2],[8],[-3],[-6],[-3],[-2],[8],[-5],[-8],[7],[5],[6],[-8],[1],[-6],[7],[-10],[-1],[-5],[1],[5],[7],[5],[-2],[-8],[-8],[-1],[-5],[7],[-2],[-6],[10],[-5],[1],[7],[-6],[-3],[-4],[8],[-3],[9],[1],[6],[-8],[2],[5],[-8],[-6],[-5],[2],[6],[2],[2],[-10],[-4],[-7],[4],[2],[4],[4],[-9],[-5],[-3],[1],[-7],[8],[1],[-7],[-8],[3],[1],[6],[8],[9],[7],[9],[2],[4],[-9],[5],[-5],[1],[5],[-9],[6],[6],[4],[5],[9],[5],[7],[3],[-9],[7],[1],[4],[-5],[4],[-5],[-2],[6],[8],[-1],[1],[7],[7],[9],[-5],[8],[-6],[6],[-6],[7],[10],[6],[-10],[-1],[2],[3],[1],[1],[-8],[-9],[-9],[-7],[-5],[-5],[3],[-5],[-1],[-6],[-3],[3],[-6],[-3],[8],[4],[-2],[-1],[9],[6],[-10],[-6],[-2],[-7],[-2],[-7],[-7],[-4],[-7],[-1],[-9],[-3],[7],[2],[9],[-9],[-10],[3],[10],[6],[-2],[-8],[-3],[5],[9],[7],[10],[-9],[-1],[2],[-10],[10],[-9],[-3],[-2],[10],[-1],[-6],[-1],[6],[-4],[8],[-10],[-10],[1],[-10],[4],[-2],[-4],[2],[3],[1],[-10],[-10],[-7],[-3],[-9],[6],[1],[10],[-9],[-4],[2],[-8],[10],[-2],[3],[8],[-2],[8],[-7],[10],[-3],[7],[2],[7],[-10],[4],[8],[10],[-3],[-2],[-8],[2],[1],[9],[1],[5],[-6],[2],[-10],[9],[10],[3],[9],[-8],[6],[1],[-2],[-3],[-2],[-2],[4],[1],[-10],[7],[-1],[-9],[4],[-1],[-5],[-5],[8],[-4],[10],[-3],[2],[7],[3],[-5],[10],[4],[-10],[2],[-4],[7],[1],[10],[-10],[10],[-4],[2],[8],[-1],[9],[5],[-7],[1],[-1],[1],[8],[-5],[-2],[8],[1],[-1],[9],[-10],[-5],[10],[-4],[3],[2],[-9],[7],[-8],[-10],[3],[10],[-3],[9],[6],[9],[7],[-5],[-8],[-1],[-10],[-5],[6],[1],[-6],[-9],[-2],[-10],[9],[-10],[7],[9],[3],[-2],[4],[-10],[-6],[5],[6],[6],[-8],[10],[-3],[6],[-8],[-7],[6],[-1],[-9],[-8],[6],[-9],[-4],[4],[2],[-1],[-6],[-2],[-9],[-1],[3],[-6],[-3],[7],[-1],[6],[4],[8],[2],[7],[2],[6],[-7],[7],[5],[5],[-7],[8],[-7],[3],[-10],[3],[-4],[2],[-3],[-2],[5],[2],[-6],[-7],[10],[-10],[2],[-6],[-3],[-5],[8],[8],[1],[10],[9],[8],[9],[7],[1],[-6],[-8],[8],[4],[-7],[3],[-1],[1],[4],[1],[5],[-5],[-5],[3],[10],[6],[6],[10],[-1],[10],[-3],[-3],[-5],[-8],[-6],[3],[9],[4],[-10],[6],[2],[-6],[3],[4],[2],[6],[-6],[-4],[3],[10],[-10],[-1],[-10],[-5],[-4],[2],[10],[-6],[-4],[10],[6],[-3],[-5],[3],[-8],[-9],[7],[9],[7],[-8],[2],[8],[-8],[6],[-7],[-7],[-2],[-5],[-9],[5],[5],[-8],[-6],[-10],[1],[-3],[-9]], dtype = "int32")#candidate|2124|(1089, 1)|const|int32
call_2123 = relay.TupleGetItem(func_560_call(relay.reshape(const_2124.astype('int32'), [11, 11, 9]), relay.reshape(const_2124.astype('int32'), [11, 11, 9]), ), 0)
call_2125 = relay.TupleGetItem(func_564_call(relay.reshape(const_2124.astype('int32'), [11, 11, 9]), relay.reshape(const_2124.astype('int32'), [11, 11, 9]), ), 0)
uop_2127 = relay.asinh(const_2124.astype('float64')) # shape=(1089, 1)
uop_2130 = relay.log2(uop_2127.astype('float32')) # shape=(1089, 1)
bop_2136 = relay.bitwise_or(uop_2130.astype('uint64'), relay.reshape(const_2124.astype('uint64'), relay.shape_of(uop_2130))) # shape=(1089, 1)
output = relay.Tuple([bop_2093,call_2119,const_2120,const_2121,call_2123,bop_2136,])
output2 = relay.Tuple([bop_2093,call_2122,const_2120,const_2121,call_2125,bop_2136,])
func_2142 = relay.Function([var_2091,var_2092,], output)
mod['func_2142'] = func_2142
mod = relay.transform.InferType()(mod)
var_2143 = relay.var("var_2143", dtype = "float32", shape = (13, 13))#candidate|2143|(13, 13)|var|float32
var_2144 = relay.var("var_2144", dtype = "float32", shape = (13, 13))#candidate|2144|(13, 13)|var|float32
output = func_2142(var_2143,var_2144,)
func_2145 = relay.Function([var_2143,var_2144,], output)
mutated_mod['func_2145'] = func_2145
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2182 = relay.var("var_2182", dtype = "float64", shape = (3, 8, 6))#candidate|2182|(3, 8, 6)|var|float64
uop_2183 = relay.log2(var_2182.astype('float64')) # shape=(3, 8, 6)
func_560_call = mod.get_global_var('func_560')
func_564_call = mutated_mod.get_global_var('func_564')
const_2186 = relay.const([-6,-4,9,7,6,-8,-6,1,4,-1,8,5,3,2,-1,-5,8,-3,-9,3,-2,-10,-1,-8,10,-5,-7,6,2,-5,-3,-10,-4,-1,3,8,-5,6,9,3,5,-10,8,-2,6,-3,-2,1,10,-8,-4,-10,5,6,-10,-5,-7,-9,1,-7,-9,-5,7,-6,5,-10,2,-1,4,1,8,-10,3,2,-1,10,-9,-2,10,-3,-3,6,-3,-2,-6,-2,1,9,-3,7,-10,-5,-3,-7,-6,7,-5,5,-2,4,10,-10,10,-6,-2,1,1,3,5,-4,-2,10,-6,5,2,5,5,-4,7,-2,-4,-1,8,-6,5,4,4,5,9,-7,-9,-2,8,-1,-7,-3,5,5,-7,-4,4,10,-4,-6,-4,3,-5,-8,-4,-7,-2,-1,4,10,-8,6,4,7,-10,10,-10,-9,-9,-8,-6,3,7,4,-1,-5,-9,-10,6,1,-4,1,-4,-9,-7,-6,-3,-10,-7,4,-1,9,-9,-2,-10,-2,-4,8,-3,-2,3,-1,9,9,-10,-5,9,10,5,-2,7,-9,6,10,4,10,-2,-6,-4,8,-5,4,7,3,-8,-4,10,7,-1,-5,-10,2,6,2,2,-6,1,2,-4,9,-1,-6,-6,-9,9,-10,9,-1,-2,8,3,1,-4,3,8,-1,-4,-2,-9,7,-4,-8,-1,-1,4,-6,-5,-10,-10,8,-4,6,5,8,8,-3,4,-7,-2,9,8,-2,10,4,4,7,1,6,3,10,-1,4,-6,-10,1,-4,-5,-4,8,-7,7,2,7,-6,4,-2,10,-8,-8,5,-10,-10,5,1,9,-6,2,-6,8,1,-9,4,-10,-6,-3,-8,9,-9,10,-8,8,7,3,-10,7,-10,-4,-6,9,3,-2,-8,-8,5,-8,1,8,7,3,-2,-9,-9,-9,5,6,1,-10,-6,5,-8,-4,-9,9,4,3,4,-8,-3,9,-4,-10,10,-3,8,-10,1,7,6,7,-8,6,2,-7,1,-5,-1,-10,-4,-9,-1,1,3,-3,2,9,-10,-5,8,-7,10,-6,8,-3,-10,-5,9,6,-3,-1,9,-8,6,1,-5,-5,-4,-5,-10,5,9,3,-7,2,-8,-7,-4,7,-6,3,9,-6,10,3,8,-10,-9,6,1,-8,-10,7,-9,3,-3,9,-4,-2,4,4,5,-10,-8,4,4,-10,6,10,2,-5,2,6,8,-2,-3,-8,-10,-7,-5,-8,1,-7,7,-6,-3,-3,-6,-10,-7,9,-9,-10,-5,9,-8,-1,7,9,5,3,8,-2,-5,1,7,1,6,8,10,3,6,-8,2,-7,5,-9,-7,7,5,3,-7,9,10,7,5,-10,6,4,-7,8,-2,-5,6,-3,2,-5,2,4,-9,2,1,-5,-1,-6,1,-8,-9,-3,7,-7,2,7,6,-8,2,-1,3,1,-6,-2,-9,9,5,4,-8,8,5,-5,-7,-9,4,-2,-9,-1,-10,-9,5,-8,2,2,-6,-9,8,-3,-9,-1,-6,10,-6,8,5,-4,7,-3,-5,-8,-7,-4,-3,9,-1,4,7,-1,-6,8,8,4,-5,6,-1,-3,-3,5,-3,-9,9,4,-7,7,-3,7,-9,9,-7,8,-9,-8,7,8,8,-8,3,2,-4,5,6,-1,2,-2,4,7,-10,-6,8,1,-3,4,-9,-6,-7,-2,-3,-9,4,-6,-1,10,9,10,-1,-7,10,-10,8,-3,7,10,-10,-8,2,3,-8,7,-10,-9,8,5,7,-6,-1,2,6,-9,10,-3,1,6,-10,1,9,-10,5,-6,1,7,-3,-10,-10,-7,6,5,-7,-9,1,6,-1,9,-4,-8,7,6,8,-10,3,-1,9,-6,-4,-5,8,-6,-10,5,-10,-8,2,-6,8,-9,5,-9,5,-3,4,-5,-9,-9,6,2,9,-2,4,9,5,-4,-7,5,10,-10,-3,-7,8,3,4,-1,-7,-3,-2,-2,2,7,9,-3,9,-7,8,7,2,1,5,-8,-4,3,7,1,1,1,10,-3,9,1,4,5,-8,-3,-6,-7,-3,-6,-6,-2,-5,-1,8,5,-5,-5,6,6,-4,-1,9,-1,-8,3,-4,-3,7,-7,9,10,-10,-3,-5,-4,-8,-9,1,-9,9,-3,8,-3,3,10,3,5,7,2,7,-8,1,1,-9,10,-4,-2,-2,-7,-6,4,7,5,-9,5,-2,-2,2,4,-6,1,1,10,8,-6,-4,-6,-4,-6,-9,-1,-2,4,8,5,-6,2,10,1,-1,6,9,-6,-4,-6,-1,-4,9,9,7,9,-2,1,5,2,8,1,2,10,10,-7,-2,6,-8,-7,8,-10,-9,4,4,-9,-6,10,6,1,6,6,8,9,6,-3,-4,-7,-6,4,-9,-10,3,-10,-2,6,-1,-7,-4,-7,4,7,4,8,4,-8,7,7,-2,1,-2,-5,1,3,10,-8,-1,2,-10,5,-4,-9,5,-5,5,-2,-4,9,8,-3,-4,-3,-7,-2,5,10,-4,-4,-7,5,-4,-8,-3,4,-8,10,-7,1,-7,-10,2,-4,1,7,-5,-9,-1,-7,-3,-4,9,5,6,-1,-8,-7,-5,9,9,5,8,4,10,-4,4,3,3,-1,-3,3,-5,2,-1,5,6,-5,3,-8,1,-5,-1,8,6,4,-4,-9,-9,-9,3,-2,6,-7,-5,2,-6,-2,-5,2,2,9,5,6,-10,-6,-1,-3,-6,-7,-5,6,6,-10,-8,2,-8,-7,10,1,-8,-4,5,-7,-10,-1,-5,-8,-7,-4,1,-7,1,-6,-7,5,-1,-6,8,7,-10,-5,-5,8,1,7,1,3,-7,-3,5,10,6,-4,1,-2,-8,-8,10,-5,9,5,7,2,-6,-8,2,6,-6,-4,-10,10], dtype = "int32")#candidate|2186|(1089,)|const|int32
call_2185 = relay.TupleGetItem(func_560_call(relay.reshape(const_2186.astype('int32'), [11, 11, 9]), relay.reshape(const_2186.astype('int32'), [11, 11, 9]), ), 0)
call_2187 = relay.TupleGetItem(func_564_call(relay.reshape(const_2186.astype('int32'), [11, 11, 9]), relay.reshape(const_2186.astype('int32'), [11, 11, 9]), ), 0)
var_2190 = relay.var("var_2190", dtype = "float64", shape = (3, 8, 6))#candidate|2190|(3, 8, 6)|var|float64
bop_2191 = relay.greater_equal(uop_2183.astype('bool'), relay.reshape(var_2190.astype('bool'), relay.shape_of(uop_2183))) # shape=(3, 8, 6)
func_1413_call = mod.get_global_var('func_1413')
func_1417_call = mutated_mod.get_global_var('func_1417')
const_2201 = relay.const([-8.453284,-4.186097,6.626575,-9.694315,-1.083966,3.796227,8.721500,-2.245333,0.658545,8.994621,-6.756503,-8.604645,-8.869629,6.681994,-0.225478,-9.586963,4.255272,3.212799,-9.772964,-3.987310,3.144863,-4.117460,4.609214,6.749491,-8.267874,-2.148611,5.316753,-3.853825,4.856507,1.356627,7.572656,-6.351831,1.888485,4.871070,8.598315,-9.149534,3.360975,-3.417517,6.668512,0.912488], dtype = "float64")#candidate|2201|(40,)|const|float64
var_2202 = relay.var("var_2202", dtype = "float32", shape = (1, 720))#candidate|2202|(1, 720)|var|float32
call_2200 = relay.TupleGetItem(func_1413_call(relay.reshape(const_2201.astype('float64'), [10, 4]), relay.reshape(var_2202.astype('float32'), [720,]), relay.reshape(call_2185.astype('int32'), [1089,]), ), 1)
call_2203 = relay.TupleGetItem(func_1417_call(relay.reshape(const_2201.astype('float64'), [10, 4]), relay.reshape(var_2202.astype('float32'), [720,]), relay.reshape(call_2185.astype('int32'), [1089,]), ), 1)
func_2076_call = mod.get_global_var('func_2076')
func_2080_call = mutated_mod.get_global_var('func_2080')
const_2209 = relay.const(-5, dtype = "int32")#candidate|2209|()|const|int32
const_2210 = relay.const([10,-10,-4,4,-7,-10,3,8,-7,3,-3,9,-3,-7,1,-2,10,1,2,-6,4,-8,8,-8,-8,6,-7,-5,9,9,-3,-3,4,5,-7,2,8,10,-8,10,1,-7,10,-1,3,-1,2,9,7,-9,-4,-6,1,-8,-4,4,4,-4,-5,-5,6,7,9,-1,10,1,-10,-8,-2,-1,5,-4,1,5,-4,8,-6,5,3,-4,-5,-8,-3,-10,-3,1,-10,-6,2,9,-2,5,6,-7,-5,1,-5,9,-7,3,3,7,1,-4,-5,-1,4,6,6,-8,-4,3,9,-7,4,-6,6,-8,-7,9,9,-10,6,2,9,4,-8,3,10,4,10,1,-5,2,-3,-5,-3,-7,1,2,9,5,5,-7,-8,9,10,5,-8,7,-1,8,-7,6,6,2,-4,-5,3,-3,2,2,-3,9,-7,5,-1,4,7,10,8,1,8,-10,-9,-3,-7,4,3,1,4,-8,10,6,9,-3,7,8,9,6,3,8,6,9,-7,-9,-10,-9,6,10,-1,-4,-4,-4,2,-8,3,4,7,-9,8,9,-3,-10,2,-6,-10,3,-5,-4,1,2,9,-1,1,-5,8,-9,-2,1,7,-9,10,-9,-1,1,-9,3,-1,4,-6,3,3,-4,8,-9,5,-2,-9,9,7,1,-5,4,1,-7,7,3,-9,4,-4,-4,10,3,10,3,-4,-3,-9,4,-5,8,-9,1,-10,7,8,1,1,1,-6,9,9,6,9,9,-10,-5,10,9,2,1,9,-2,-6,2,-7,1,-2,-3,6,4,-9,-5,6,-8,-1,-10,1,-3,-3,8,-5,-6,-5,-10,1,8,-5,-10,6,9,6,-8,-1,3,-7,6,9,10,2,-6,-6,-4,7,1,-3,1,-10,-8,1,5,-2,1,-4,7,3,-9,-8,-9,9,10,-10,5,1,3,3,-1,10,10,5,7,3,-6,-9,7,4,-3,-8,6,-10,-1,-8,1,6,-1,-9,8,4,-2,-10,-2,6,-1,-4,4,-8,8,-9,6,-8,-6,-7,8,10,-6,-9,-5,6,1,-4,5,-2,-8,1,8,-2,6,-1,-3,-4,-1,9,-10,-3,6,-6,9,-3,-8,-10,-4,1,2,-4,-4,3,-3,-5,-1,2,6,-10,5,-2,10,7,6,3,1,2,8,-3,2,-2,6,4,-3,5,-10,10,10,-3,9,-4,-5,-8,-6,2,8,-2,-1,6,-1,-3,-9,10,-2,4,8,2,6,4,10,1,3,2,-10,-7,1,-1,-3,-8,3,-8,1,4,-1,-1,-6,9,-6,3,-9,-8,-10,-1,-1,2,2,-4,-2,-4,9,-4,-8,4,5,-1,-10,7,7,5,-6,1,-6,2,-5,1,-2,7,-9,5,10,10,-2,-10,-2,6,-1,-7,3,-7,8,10,-4,-1,2,8,-1,-4,3,5,-8,-5,-9,7,4,10,-3,-3,9,-1,1,5,-8,-8,-2,8,1,10,-8,3,3,3,4,-5,1,6,-5,-5,-9,-4,3,8,7,-5,6,-6,-1,-7,6,-10,7,-10,-8,-7,-5,5,-5,3,2,7,-8,-9,4,4,7,9,-3,-8,2,-7,6,-7,6,5,10,7,4,6,1,10,-7,2,5,-10,-5,6,-8,4,-6,1,-10,-5,6,4,5,-7,-2], dtype = "int32")#candidate|2210|(630,)|const|int32
var_2211 = relay.var("var_2211", dtype = "uint32", shape = (660,))#candidate|2211|(660,)|var|uint32
call_2208 = relay.TupleGetItem(func_2076_call(relay.reshape(const_2209.astype('int32'), []), relay.reshape(const_2210.astype('int32'), [7, 10, 9]), relay.reshape(var_2211.astype('uint32'), [1, 660]), ), 3)
call_2212 = relay.TupleGetItem(func_2080_call(relay.reshape(const_2209.astype('int32'), []), relay.reshape(const_2210.astype('int32'), [7, 10, 9]), relay.reshape(var_2211.astype('uint32'), [1, 660]), ), 3)
func_161_call = mod.get_global_var('func_161')
func_164_call = mutated_mod.get_global_var('func_164')
var_2218 = relay.var("var_2218", dtype = "uint32", shape = (132,))#candidate|2218|(132,)|var|uint32
call_2217 = func_161_call(relay.reshape(var_2218.astype('uint32'), [11, 12, 1]), relay.reshape(call_2208.astype('uint32'), [11, 12, 5]), )
call_2219 = func_161_call(relay.reshape(var_2218.astype('uint32'), [11, 12, 1]), relay.reshape(call_2208.astype('uint32'), [11, 12, 5]), )
output = relay.Tuple([call_2185,const_2186,bop_2191,call_2200,const_2201,var_2202,call_2208,const_2209,const_2210,var_2211,call_2217,var_2218,])
output2 = relay.Tuple([call_2187,const_2186,bop_2191,call_2203,const_2201,var_2202,call_2212,const_2209,const_2210,var_2211,call_2219,var_2218,])
func_2223 = relay.Function([var_2182,var_2190,var_2202,var_2211,var_2218,], output)
mod['func_2223'] = func_2223
mod = relay.transform.InferType()(mod)
mutated_mod['func_2223'] = func_2223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2223_call = mutated_mod.get_global_var('func_2223')
var_2225 = relay.var("var_2225", dtype = "float64", shape = (3, 8, 6))#candidate|2225|(3, 8, 6)|var|float64
var_2226 = relay.var("var_2226", dtype = "float64", shape = (3, 8, 6))#candidate|2226|(3, 8, 6)|var|float64
var_2227 = relay.var("var_2227", dtype = "float32", shape = (1, 720))#candidate|2227|(1, 720)|var|float32
var_2228 = relay.var("var_2228", dtype = "uint32", shape = (660,))#candidate|2228|(660,)|var|uint32
var_2229 = relay.var("var_2229", dtype = "uint32", shape = (132,))#candidate|2229|(132,)|var|uint32
call_2224 = func_2223_call(var_2225,var_2226,var_2227,var_2228,var_2229,)
output = call_2224
func_2230 = relay.Function([var_2225,var_2226,var_2227,var_2228,var_2229,], output)
mutated_mod['func_2230'] = func_2230
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2345 = relay.const([[[-8,-6,-3,-3],[-6,3,-8,-5],[1,9,-6,-7],[6,1,1,3],[-4,-10,-6,7]],[[-3,-2,-1,1],[4,-7,9,-9],[4,-2,1,-4],[6,2,-6,-6],[1,9,-6,3]],[[10,-2,-4,7],[1,2,-7,-7],[-10,-7,-9,-9],[-10,4,1,-5],[5,-2,-10,-8]],[[-10,-3,9,-2],[-10,-7,-9,-1],[7,6,-1,8],[10,-7,-1,-1],[7,10,3,-5]],[[8,-2,-10,-7],[-6,-2,-3,5],[2,-4,-8,6],[9,3,7,-3],[-2,3,7,1]],[[-4,-10,-5,2],[8,-2,3,4],[-3,1,7,-6],[-10,2,-2,1],[-8,-5,-6,2]],[[-5,2,2,9],[5,5,6,2],[2,-3,9,-10],[-5,-1,4,-8],[-6,8,-8,-3]],[[-10,6,2,4],[-6,-8,-1,3],[7,-10,5,-1],[-8,-9,9,9],[2,5,-7,-10]],[[6,-9,8,4],[6,-6,1,4],[-8,6,-6,-5],[2,2,9,-4],[10,3,-5,-3]],[[2,-2,7,-2],[8,2,-3,-2],[-9,8,-6,4],[-6,-6,-7,-2],[10,-3,1,-2]],[[3,4,-3,5],[-3,-9,-3,-7],[-3,10,3,8],[-9,10,6,10],[8,-7,2,-2]],[[-5,6,-5,7],[-7,7,-2,-1],[5,10,3,-3],[5,1,-4,-4],[5,6,-4,-7]],[[3,-1,10,3],[-5,-7,2,3],[-9,-5,-7,-1],[9,-2,2,4],[-7,10,10,1]],[[6,-8,-7,8],[-3,-9,1,5],[-5,3,-10,5],[-5,-5,8,-2],[3,5,-9,5]]], dtype = "int64")#candidate|2345|(14, 5, 4)|const|int64
const_2346 = relay.const([[[-3,-7,-10,-8],[-2,9,10,-5],[-1,3,-2,-9],[4,10,4,-3],[-10,-9,9,-1]],[[4,-2,-8,-1],[7,-7,3,-4],[6,3,9,8],[8,-2,-7,-7],[-4,9,7,-1]],[[6,-5,-3,-5],[3,10,-6,3],[-8,-1,7,5],[-9,3,4,2],[3,-8,8,-7]],[[3,-5,6,5],[3,8,-3,1],[-9,10,10,5],[9,2,-9,8],[-8,3,1,7]],[[-3,3,-10,-2],[1,-2,1,-6],[1,8,9,-3],[1,1,5,5],[5,-6,6,-3]],[[9,10,5,2],[6,-5,8,-1],[6,-8,-2,-9],[-4,-3,2,-7],[-3,2,-5,-3]],[[4,5,8,8],[8,4,-10,-8],[-7,-5,6,1],[9,9,-6,2],[-2,2,4,5]],[[6,3,-2,2],[-9,10,7,9],[5,-9,-2,-10],[9,-6,2,7],[1,-5,9,4]],[[-2,-7,8,-6],[-4,5,-5,10],[-9,-7,10,-8],[-3,5,10,-2],[-8,3,3,-10]],[[-4,2,-9,5],[1,-8,7,-3],[1,-2,1,-5],[-1,4,2,10],[8,7,-6,-3]],[[4,1,9,2],[4,-3,6,-4],[10,10,4,8],[-3,7,-7,10],[6,-5,-7,-7]],[[10,6,9,4],[1,-1,-5,-7],[6,-10,8,4],[-1,-9,7,9],[-5,5,8,3]],[[-3,-4,-5,-7],[-7,-4,6,9],[1,6,-1,7],[-2,9,-2,-9],[9,5,6,-7]],[[-10,-8,-2,-4],[2,-1,6,8],[-2,6,-1,1],[10,-8,-2,7],[-7,-6,9,-4]]], dtype = "int64")#candidate|2346|(14, 5, 4)|const|int64
bop_2347 = relay.subtract(const_2345.astype('int64'), relay.reshape(const_2346.astype('int64'), relay.shape_of(const_2345))) # shape=(14, 5, 4)
output = relay.Tuple([bop_2347,])
output2 = relay.Tuple([bop_2347,])
func_2355 = relay.Function([], output)
mod['func_2355'] = func_2355
mod = relay.transform.InferType()(mod)
mutated_mod['func_2355'] = func_2355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2355_call = mutated_mod.get_global_var('func_2355')
call_2356 = func_2355_call()
output = call_2356
func_2357 = relay.Function([], output)
mutated_mod['func_2357'] = func_2357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2355_call = mod.get_global_var('func_2355')
func_2357_call = mutated_mod.get_global_var('func_2357')
call_2375 = relay.TupleGetItem(func_2355_call(), 0)
call_2376 = relay.TupleGetItem(func_2357_call(), 0)
func_1413_call = mod.get_global_var('func_1413')
func_1417_call = mutated_mod.get_global_var('func_1417')
const_2382 = relay.const([-4.945398,-0.672384,5.230648,7.317864,-4.329776,-0.268629,-4.992760,-4.949323,4.386743,3.824038,0.222448,-7.054306,0.133613,-7.552484,8.466460,4.055506,-7.764550,8.275580,9.580369,7.164819,-7.507174,9.137746,3.428908,-7.148523,8.643216,1.209007,-9.568034,7.080945,-5.957581,-6.323573,2.862144,-6.932111,5.690972,2.796712,-5.450914,6.974831,1.230757,7.845265,-1.780839,8.098147], dtype = "float64")#candidate|2382|(40,)|const|float64
const_2383 = relay.const([-8.738942,4.682872,-4.561135,-2.933068,1.544357,4.884298,-7.156007,-8.255428,9.928677,-0.276762,-7.279768,-6.419782,1.952989,-9.183002,-4.499342,-3.781797,5.549863,-1.020654,-3.708704,6.260335,7.110275,-5.814587,-8.986666,-3.035317,-7.158350,-1.692897,-1.504028,-9.315362,-0.108216,-0.273290,-2.208635,9.441807,-3.779085,6.336553,9.065189,-1.075943,1.272376,-2.960512,0.545659,2.269040,1.880670,-8.498415,-0.155634,-5.199104,-2.465954,-8.525413,7.046414,-4.728379,3.212477,-6.208505,-4.156304,3.560950,-2.929919,9.743801,-6.944085,8.161903,-5.364367,9.745593,-4.446272,7.730949,-0.386683,3.824101,-7.161010,7.251901,7.216575,-5.879024,-3.497993,8.329326,9.551845,0.498479,-9.273661,-1.583639,-7.754470,4.133253,2.718889,3.884675,-9.989997,8.301783,-1.670287,-4.387166,3.547200,-9.639649,-8.321735,-5.377419,-5.373089,3.131709,-2.639744,-7.966067,5.040743,-3.090397,-5.800689,-1.576848,-2.937210,0.062435,-7.555499,5.151028,-9.359479,-3.885903,1.165791,4.049696,-5.152108,-7.302193,-3.848122,5.784707,7.502371,-4.252355,-7.999721,-3.287474,-4.881795,5.796016,-3.815921,-6.601494,-2.067502,1.548256,4.532660,-2.900953,-7.037836,6.239041,6.481430,-5.195100,-4.529463,-4.049724,-1.316311,5.998778,4.615365,4.503172,5.721386,-1.319444,-9.415290,-5.742325,-8.957750,6.995572,9.179018,3.349623,-9.079327,6.918225,-6.753648,9.657314,8.549934,-2.300608,1.333724,-7.254061,1.731248,8.444073,-6.200251,-6.605043,-0.983010,6.049053,-7.855896,-9.093359,6.938409,9.888528,2.947898,-3.818856,5.697539,5.672932,-7.044653,-3.124926,7.129941,-1.994759,8.759973,-3.150873,-9.685464,8.334622,1.357854,5.915744,-0.329182,-9.085402,3.227448,-9.650863,4.419594,-7.161057,2.867355,-5.806106,-7.981005,-3.193493,8.360431,6.783260,4.815346,-7.423118,-1.868072,2.772738,-3.605198,-3.894175,-0.107975,-8.862072,4.288466,8.473674,8.320228,6.579449,-0.761380,9.117294,-5.103997,-4.534127,-5.055876,-5.182081,-9.569541,4.961556,-2.297478,9.234934,-9.876151,-7.933840,-3.734057,-6.136929,8.776078,6.693520,9.397970,3.143301,4.398837,8.389356,-5.718188,-4.683145,2.416325,1.452564,8.215907,-3.920353,6.538022,3.752582,8.102208,2.001330,0.034623,-5.194231,-9.938569,6.107801,6.798421,6.952594,-9.094255,0.317669,8.890639,1.570962,9.334758,-4.394251,9.326257,-4.996221,8.822436,6.075499,-6.211285,3.995098,-4.230401,-2.126985,-4.372514,1.134596,1.365152,-6.342229,-1.332678,5.859298,-3.173904,-2.941224,-1.518020,-6.734492,-2.632369,-7.070017,0.453237,6.714780,-5.672802,-2.185258,0.676045,-9.660464,-8.533335,2.816718,-7.294299,-6.868165,-5.325577,-8.016963,1.213835,-7.717421,2.896402,-2.028828,2.066478,-7.614980,1.875795,-6.003691,-3.126490,1.464321,2.286862,0.559556,3.783464,-5.363489,-0.763078,-8.903177,5.044679,-6.310286,-9.188229,-5.232328,-1.091101,7.867081,7.969850,1.598627,-6.746596,-2.635593,4.780702,-2.217036,9.338301,1.768638,5.704982,9.441254,-6.134057,8.409146,-2.873884,-4.976096,-3.065534,-6.737046,6.910780,-4.278671,-5.658251,-2.481898,-2.449382,-9.546142,6.217248,-1.836170,-6.169123,-0.420764,2.580417,3.762851,1.868277,-4.992621,5.688265,1.033285,-1.916157,4.262476,-1.587679,7.737785,-6.597803,-2.442587,7.153986,-3.531417,-1.832647,-6.233057,2.398943,3.792466,-9.628772,-7.757496,-5.853187,-2.528647,4.066169,5.715472,0.062891,8.872831,-1.953411,-6.862940,-7.323931,3.991942,8.968847,-9.945228,8.799731,2.249768,8.756920,-8.895979,7.879178,9.500434,-2.187903,-3.986316,7.688766,4.440069,2.717077,2.396632,-6.115127,-9.629182,-1.286692,-4.531492,-6.331615,2.648026,-7.509011,0.683583,7.636265,-5.494595,9.021623,1.475745,-1.366556,-9.724524,-9.584271,4.288990,4.102416,-0.184054,-0.931487,6.579865,-2.374933,7.366679,-6.901208,-7.957590,6.112423,4.736051,2.745657,4.949250,8.922331,1.261427,4.529703,1.755262,-3.340413,-5.660507,-0.249553,2.363679,8.702989,3.268359,5.647806,8.490254,3.663870,8.301717,6.646430,-0.130061,0.838143,8.726057,3.448583,6.702783,-2.464081,-5.226475,0.165219,-8.726617,-2.839352,3.729565,5.511609,-1.977507,3.080807,-9.042059,-7.892417,-1.241438,-5.681819,-2.794557,-3.602700,-3.305538,-8.387511,4.859323,-9.105380,-5.373023,-0.361026,7.668153,-1.577436,-8.255004,4.984624,-5.351029,4.778453,6.154888,-9.754839,1.290192,3.719174,-6.194481,9.535709,-1.318905,4.708243,-4.424874,-5.156445,0.058625,-7.645096,-0.300096,-7.502283,6.837090,0.719056,-6.114683,7.538969,-0.610915,4.067447,-8.963169,4.394783,-0.027359,1.161749,-1.712270,-9.514461,-0.878254,5.221309,7.719081,4.728249,5.446929,2.885365,0.930061,-9.007022,-0.791813,-2.196707,-4.013100,6.107419,-9.867400,2.144318,-5.367051,-1.338066,-4.450942,0.488593,-7.265485,0.127427,-7.769829,3.025595,6.012077,1.219768,1.756976,-0.845767,2.883376,-1.320029,-6.211486,-9.059749,-8.495840,1.779385,-5.639314,-1.688955,3.599326,7.134102,-0.525677,9.925768,-7.589172,8.902840,-1.387281,0.237683,5.947208,8.229564,2.367725,-7.782417,8.957558,2.546196,6.646831,-9.845555,5.429706,-3.905048,-9.676307,2.590678,-5.980386,-0.756231,-3.587878,6.213078,2.801551,2.786934,-6.539168,-1.760629,2.639254,-5.219230,3.312201,8.511126,-1.284000,4.602368,-3.652381,4.157962,1.207584,9.697489,3.073926,-8.555044,-2.435984,4.221794,3.820429,-2.697675,4.926570,6.916066,8.013001,0.370531,-8.497844,-4.934729,7.316086,-2.163203,7.944240,-5.678070,-6.465410,9.712094,-5.033223,6.256734,3.787438,-8.961033,-1.046744,2.061056,5.201648,9.476608,1.369232,-3.621388,0.657562,-5.545029,-5.932281,0.867823,4.107476,8.872721,-2.278387,8.343364,-8.819829,-8.030095,-1.397175,-0.060526,5.480226,5.745952,2.467162,3.783196,-3.184213,3.323462,9.046706,2.103609,-5.995061,-4.748508,-6.349965,-1.931079,-2.343642,6.631775,-0.189386,-9.281163,-6.858712,0.870131,4.996436,-9.740842,-2.278800,-0.621978,7.155253,-8.630477,1.486275,-7.148140,-9.085521,-7.315019,7.034816,3.476927,-4.734893,6.113927,-3.547046,-5.188303,-1.259754,5.368501,0.464425,-4.469956,-9.478981,-9.568224,6.466586,7.365463,6.444857,-1.514784,7.078242,-7.222922,2.973419,-8.864627,-3.281675,0.384882,-4.063159,6.404250,5.967281,-6.445512,-6.680297,7.836203,1.092622,-0.301978,-8.744249,1.648795,-3.079053,8.107947,-4.459557,5.812341,4.336818,0.482514,-2.939062,9.562854,-3.234404,3.878200,-5.256860,-5.526156,6.878951,-4.630621,-2.574084,4.338755,0.226705,-8.717818,9.706160,3.213241,6.697191,-6.226403,1.818759,7.480621,8.069163,2.817713,2.990593,8.863539,-1.860256,-7.621685,9.007906,2.039695,5.139426,-4.646311,-0.705868,0.168375,-3.406784,2.264383,9.459501,7.193096,9.776594,-8.821301,2.239516,7.298747,1.693625,-8.940160,4.219593,3.742395,9.181167,7.685472,0.491455,2.050250,-8.711131,-5.207289,5.859184,-1.865049,-1.794508,6.909545,-6.556850,4.068160,6.663600,8.866615,4.731892,1.646263,-8.741823,-1.455135,5.162013,-9.688016,-3.477554,1.357346,-9.784910,-6.362936,-6.846133,-7.123177,-2.321202,-1.104573,8.762174,0.897018,-4.277498,-4.919063,2.306169,8.398550,-1.366463,3.482748,-3.693623,6.172487,-7.459798,7.659154,8.190520,-7.130975,5.977392], dtype = "float32")#candidate|2383|(720,)|const|float32
const_2384 = relay.const([3,9,-7,8,-2,6,1,6,1,2,-4,-6,-7,-7,10,-5,-10,-4,-3,-1,-9,1,-7,10,8,1,-10,-9,1,-8,-5,-3,9,-6,-2,-9,1,10,4,7,1,-6,-6,-10,4,-7,-10,6,10,4,-8,-2,3,-9,4,-1,-8,8,5,-3,5,-9,-4,4,6,7,-1,5,5,-10,-3,-7,-1,7,2,-4,3,2,8,-3,-6,-10,-1,2,10,6,5,4,-8,-2,2,9,-1,1,1,-8,4,5,-3,-3,8,-8,-3,-9,-3,3,-10,9,5,3,-5,4,-8,-5,3,6,7,4,-8,3,5,7,10,7,9,3,10,1,6,9,-6,-1,-10,-5,8,-10,-5,8,-6,-3,6,8,5,4,-7,-1,1,-6,-6,1,-6,-9,-9,-8,-6,9,7,10,7,3,10,-7,-5,3,-1,-9,5,-9,9,-9,-8,-6,8,-9,1,-8,-6,-1,-7,6,9,6,5,8,3,-6,-8,6,-10,8,8,2,3,7,-10,-8,8,10,-7,7,6,1,-8,9,-3,-1,6,-5,1,-7,-6,-7,-8,10,-7,-7,10,8,-8,-8,-5,4,-4,-10,-2,3,3,6,1,9,3,-1,-6,3,-6,-7,-1,4,-1,-10,1,-2,-7,6,-4,-4,-2,2,-3,-4,-7,4,1,5,2,6,1,10,8,-4,2,1,-2,-2,9,8,6,-6,-9,10,6,-7,-5,3,-2,6,-6,7,-2,-4,4,1,-5,-6,7,10,-3,-10,-3,-2,1,-10,-6,6,-6,1,4,10,10,-8,4,-2,-2,-5,-7,-1,-4,-7,7,-10,-4,5,-4,9,-10,1,-4,3,5,-10,-5,-5,1,-1,5,-1,4,-9,10,-4,-5,-6,-10,-5,-5,9,8,-8,4,-7,-3,-10,-4,-7,4,-7,-8,8,-2,-3,9,-8,6,4,-7,10,9,7,6,-10,-9,1,-7,-5,5,-7,-10,9,-1,5,-6,-8,-5,-10,10,3,-6,7,7,-4,10,7,4,-5,1,-3,-6,-5,7,-4,-7,8,-5,-7,-7,-7,2,-6,-9,1,2,8,6,-1,-1,2,5,-1,5,5,1,-8,3,9,-6,4,6,-5,5,5,-4,4,-5,2,-5,1,-8,-6,2,4,6,5,10,-4,10,1,-6,-5,-1,2,-3,-9,1,-5,3,-2,-7,-2,-9,-2,-8,2,9,9,-4,6,-4,-2,2,-2,5,7,1,9,-8,8,3,3,7,3,-3,-1,-6,5,-8,-5,9,5,1,-1,-4,-6,8,10,-1,7,4,2,8,-7,4,-1,6,-4,-9,-6,3,1,-1,-5,6,8,-9,-9,2,5,-10,1,-2,4,2,-6,4,-6,-8,9,4,-5,2,2,-10,9,5,7,-5,-1,-1,-1,4,-1,-8,-6,10,7,-5,-5,8,-8,-2,-2,-8,-5,8,5,5,4,-8,8,-4,-1,4,8,10,6,-1,-10,-1,-9,2,3,-1,3,-9,-7,-7,-6,4,4,-9,5,-1,10,-1,1,4,3,2,5,8,-8,2,-6,7,-2,2,-6,-4,5,7,1,1,-7,1,-6,-3,5,-6,4,3,-10,3,10,-4,3,4,-3,7,7,9,10,-6,9,-8,-7,-9,7,-3,-9,5,-8,-5,3,-10,-1,-4,3,6,3,-7,6,-7,5,-4,-9,-6,8,-10,3,-1,-1,7,-4,7,8,8,-7,-9,-5,9,-9,-2,6,8,-2,-6,-4,6,-8,7,-9,10,-10,-2,-9,10,8,7,-2,5,-5,-6,6,9,8,-9,-3,-3,-9,9,-6,8,-8,7,-1,5,-5,-7,4,-6,5,7,6,10,-7,-3,-7,8,-7,7,-9,-6,-5,7,2,-2,-9,-5,-1,10,4,-10,6,8,4,1,-10,-8,-3,-4,10,-2,-5,6,3,-3,-9,10,2,9,5,-7,-9,10,4,7,-8,-3,-7,8,-4,1,-5,-1,10,10,1,10,6,4,-4,4,-1,6,7,-1,6,-6,-2,-7,-10,8,8,-3,-8,6,9,7,-8,-1,-10,8,2,-6,-5,-7,-9,6,2,2,10,5,10,1,-8,3,-5,-3,-6,-3,1,-4,6,-10,3,2,1,-3,1,9,8,-9,-4,4,-3,-9,-9,-7,-6,7,10,-1,7,2,-1,9,-2,4,1,5,7,8,-10,-2,3,-4,-7,2,10,-5,-4,10,-3,3,4,-9,6,6,-6,10,8,-10,10,10,-7,-1,-9,8,-7,7,-3,-2,-8,4,-5,-3,10,-7,-7,-10,-1,-5,4,-4,6,-2,-10,9,1,3,-8,10,-8,-6,-5,9,-7,-8,-10,2,6,7,8,-5,9,-8,4,5,-6,-9,7,-9,-2,7,-1,-8,-5,-4,-2,6,9,-6,-2,7,2,-1,1,7,-6,5,-3,6,-1,1,-1,3,-10,5,2,4,-7,4,2,3,-4,-9,5,-5,8,-8,-4,1,1,-10,7,4,-6,1,-10,9,-5,2,-2,6,6,10,-6,6,6,-8,-1,-8,3,-6,-6,-6,3,-2,-7,-6,-4,-3,-5,6,6,-6,-8,-5,-6,3,-5,-4,9,5,6,-6,-6,-9,-9,-4,-8,-1,5,-7,-8,2,1,4,-1,3,8,6,-10,7,-1,-4,1,7,-3,8,5,7,-5,-4,-7,4,10,-1,8,-10,9,7,-3,-8,9,8,-4,-9,-5,7,-2,1,-2,2,10,-8,10,-1,-2,-9,-2,4,-3,7,8,2,-7,-3,3,1,-1,-4,-8,2,-3,10,8,-3,9,-9,-6,-10,-1,-5,2,2,7,-4,3,5,-7,-1,-1,7,6,8,6,6,2,-4,7,8,1,9,8,-10,-10,-1,5,10,4,3,7,7,-1,4,4,4,-5,-1], dtype = "int32")#candidate|2384|(1089,)|const|int32
call_2381 = relay.TupleGetItem(func_1413_call(relay.reshape(const_2382.astype('float64'), [10, 4]), relay.reshape(const_2383.astype('float32'), [720,]), relay.reshape(const_2384.astype('int32'), [1089,]), ), 3)
call_2385 = relay.TupleGetItem(func_1417_call(relay.reshape(const_2382.astype('float64'), [10, 4]), relay.reshape(const_2383.astype('float32'), [720,]), relay.reshape(const_2384.astype('int32'), [1089,]), ), 3)
func_1413_call = mod.get_global_var('func_1413')
func_1417_call = mutated_mod.get_global_var('func_1417')
call_2399 = relay.TupleGetItem(func_1413_call(relay.reshape(const_2382.astype('float64'), [10, 4]), relay.reshape(const_2383.astype('float32'), [720,]), relay.reshape(const_2384.astype('int32'), [1089,]), ), 2)
call_2400 = relay.TupleGetItem(func_1417_call(relay.reshape(const_2382.astype('float64'), [10, 4]), relay.reshape(const_2383.astype('float32'), [720,]), relay.reshape(const_2384.astype('int32'), [1089,]), ), 2)
output = relay.Tuple([call_2375,call_2381,const_2382,const_2383,const_2384,call_2399,])
output2 = relay.Tuple([call_2376,call_2385,const_2382,const_2383,const_2384,call_2400,])
func_2403 = relay.Function([], output)
mod['func_2403'] = func_2403
mod = relay.transform.InferType()(mod)
output = func_2403()
func_2404 = relay.Function([], output)
mutated_mod['func_2404'] = func_2404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2355_call = mod.get_global_var('func_2355')
func_2357_call = mutated_mod.get_global_var('func_2357')
call_2423 = relay.TupleGetItem(func_2355_call(), 0)
call_2424 = relay.TupleGetItem(func_2357_call(), 0)
output = call_2423
output2 = call_2424
func_2427 = relay.Function([], output)
mod['func_2427'] = func_2427
mod = relay.transform.InferType()(mod)
mutated_mod['func_2427'] = func_2427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2427_call = mutated_mod.get_global_var('func_2427')
call_2428 = func_2427_call()
output = call_2428
func_2429 = relay.Function([], output)
mutated_mod['func_2429'] = func_2429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2355_call = mod.get_global_var('func_2355')
func_2357_call = mutated_mod.get_global_var('func_2357')
call_2462 = relay.TupleGetItem(func_2355_call(), 0)
call_2463 = relay.TupleGetItem(func_2357_call(), 0)
output = call_2462
output2 = call_2463
func_2464 = relay.Function([], output)
mod['func_2464'] = func_2464
mod = relay.transform.InferType()(mod)
mutated_mod['func_2464'] = func_2464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2464_call = mutated_mod.get_global_var('func_2464')
call_2465 = func_2464_call()
output = call_2465
func_2466 = relay.Function([], output)
mutated_mod['func_2466'] = func_2466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2403_call = mod.get_global_var('func_2403')
func_2404_call = mutated_mod.get_global_var('func_2404')
call_2499 = relay.TupleGetItem(func_2403_call(), 4)
call_2500 = relay.TupleGetItem(func_2404_call(), 4)
output = relay.Tuple([call_2499,])
output2 = relay.Tuple([call_2500,])
func_2502 = relay.Function([], output)
mod['func_2502'] = func_2502
mod = relay.transform.InferType()(mod)
output = func_2502()
func_2503 = relay.Function([], output)
mutated_mod['func_2503'] = func_2503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2427_call = mod.get_global_var('func_2427')
func_2429_call = mutated_mod.get_global_var('func_2429')
call_2546 = func_2427_call()
call_2547 = func_2427_call()
uop_2556 = relay.acos(call_2546.astype('float32')) # shape=(14, 5, 4)
uop_2558 = relay.acos(call_2547.astype('float32')) # shape=(14, 5, 4)
output = relay.Tuple([uop_2556,])
output2 = relay.Tuple([uop_2558,])
func_2559 = relay.Function([], output)
mod['func_2559'] = func_2559
mod = relay.transform.InferType()(mod)
mutated_mod['func_2559'] = func_2559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2559_call = mutated_mod.get_global_var('func_2559')
call_2560 = func_2559_call()
output = call_2560
func_2561 = relay.Function([], output)
mutated_mod['func_2561'] = func_2561
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2688 = relay.var("var_2688", dtype = "int8", shape = (6, 13, 13))#candidate|2688|(6, 13, 13)|var|int8
const_2689 = relay.const([[[7,1,5,4,5,-3,10,9,-5,4,10,4,4],[-4,1,-4,7,10,7,1,3,-8,-1,-3,-4,4],[-2,9,10,1,-5,4,10,-6,-9,9,-5,3,6],[10,-4,3,3,-2,-3,6,9,2,3,6,-6,-2],[-4,7,-2,9,1,1,-3,-9,-7,-6,5,6,5],[10,9,-4,-6,2,-8,-3,2,-5,7,3,8,-10],[7,-1,-10,-6,2,9,-1,-7,1,-7,1,9,-5],[2,2,-6,-8,3,-9,-4,-1,8,-5,10,-4,10],[-7,3,-3,-5,5,-4,-2,8,8,-2,-6,-2,7],[6,6,-5,6,7,1,4,7,8,7,-1,-9,-5],[-3,-5,-8,2,-8,9,6,-3,9,-4,5,6,-9],[8,-7,-2,-1,-3,-7,-5,3,-9,1,6,9,-8],[2,-8,-10,9,-3,-10,-6,-5,9,8,-5,10,8]],[[8,6,4,10,8,-2,9,-8,10,-3,8,7,7],[4,-10,3,-2,3,-8,-9,5,3,-5,-3,6,-3],[2,-2,-4,6,9,-9,8,-6,-7,3,6,-3,9],[-7,-4,1,10,4,-10,-7,10,1,-10,-6,-1,6],[-7,8,5,-4,6,6,9,-10,-2,7,3,-2,4],[-7,-9,4,-1,5,-10,8,2,-1,-6,9,8,-2],[3,-1,1,4,10,-7,4,1,-1,-9,-5,-4,-3],[-8,9,9,3,-9,-9,-6,4,-4,-7,2,3,3],[-4,-8,-9,6,-6,10,-9,6,3,-7,-9,-5,5],[6,-1,-6,5,-1,-10,-2,4,-8,10,-10,-7,-2],[-9,5,-6,-4,2,-9,-3,3,9,-2,7,5,3],[2,4,10,-3,-7,-8,4,-10,8,5,-7,-7,7],[-8,-3,8,2,-3,5,-9,-3,-3,8,-1,-7,8]],[[-9,4,2,10,2,3,10,-8,2,-9,-4,-1,6],[-9,-8,-10,5,-5,-5,-2,-3,-4,-1,-9,-10,7],[1,-6,-1,1,-5,8,-4,-7,-8,-9,-4,-3,5],[-9,10,-7,-5,7,10,-5,8,5,6,4,-10,2],[-6,-10,-9,-4,-6,-8,-5,-9,3,-4,-7,5,-2],[5,2,8,4,-6,9,-10,4,8,-2,-6,10,6],[-8,1,9,-2,3,8,-9,10,6,-5,-7,10,1],[-4,6,10,-10,6,9,10,-9,9,3,-4,-9,-7],[-3,8,5,-6,-2,6,9,1,1,10,-10,-6,10],[9,-2,-8,5,10,7,-2,-4,1,2,3,-5,-3],[-4,5,-2,3,-5,8,6,2,4,10,-4,-3,-7],[2,-9,-7,6,7,8,-2,3,-5,-6,10,-10,-9],[-5,1,-1,2,-7,-5,2,-1,-1,3,2,3,-4]],[[-9,-5,-7,5,2,10,-7,4,-10,-1,-5,5,-10],[-8,7,6,-6,-6,-1,10,8,7,7,-5,-8,-9],[3,-2,10,-6,4,3,-4,3,-4,1,5,7,-1],[-10,-1,1,4,8,5,-1,7,9,4,7,6,-8],[-5,-6,7,5,-6,5,10,-2,-9,-6,-6,8,-8],[8,2,-9,-10,3,-9,-9,-3,-5,-10,-1,-9,-5],[-1,-4,7,-5,7,6,-6,-9,5,2,-4,4,3],[3,2,6,3,4,-2,-7,-4,-10,-1,-9,-7,-8],[-9,5,8,3,-7,5,1,-10,-10,-3,1,7,2],[-10,-7,10,-1,-8,-4,-10,2,-3,-5,-5,3,9],[3,7,2,-4,8,-4,8,7,-3,-5,2,-7,2],[-10,-3,-8,-7,-2,2,5,-10,8,-3,2,-4,2],[-4,1,-2,-8,3,1,-10,-6,-1,-4,-2,-10,9]],[[-2,10,9,10,9,-2,-8,6,-3,-2,-1,-4,3],[9,-2,7,3,5,-1,-1,-8,1,10,-5,4,-3],[-10,1,-2,9,3,7,3,-8,-6,7,6,8,-5],[-8,-10,-3,-8,8,-7,6,-4,5,-3,-4,-6,3],[-10,5,-3,2,5,-8,10,-5,-2,8,-5,5,-8],[7,1,5,10,-7,-6,-8,6,4,-1,-4,3,1],[5,-6,-5,8,-2,9,6,6,-9,-10,2,3,-6],[-6,-9,5,-3,10,3,-5,-2,10,2,-9,-2,-4],[-7,-8,3,10,-3,9,-7,1,8,6,10,-9,3],[3,-9,2,3,-8,5,2,6,-1,10,-4,10,8],[7,-2,7,6,2,3,9,6,3,2,-7,2,-9],[-8,6,10,-3,-2,10,6,7,9,-3,9,-3,3],[8,-9,-2,7,-3,9,-1,-8,-10,-3,6,-2,9]],[[4,4,1,-5,-8,-9,4,2,-10,6,-4,-2,5],[10,-8,-9,-10,2,-7,-4,-5,-10,5,-4,-6,2],[-9,8,-4,-1,7,7,-5,7,-7,6,3,2,-9],[2,-9,7,9,-9,-4,-5,2,-6,-10,-6,-5,-8],[-10,6,-9,7,3,3,1,-4,6,-6,1,3,7],[6,-6,10,-9,5,7,5,10,-3,-3,8,6,6],[-5,7,-2,4,1,2,-2,-7,3,-10,-1,-3,-10],[4,4,3,2,-1,-5,2,1,-8,-5,2,9,10],[-3,-6,4,10,1,9,-3,10,7,6,8,-1,-10],[-10,2,-9,-2,9,7,6,-3,3,-7,-6,5,-2],[-7,-5,-3,4,-4,2,9,4,3,4,-4,1,-10],[-6,8,-9,1,10,8,1,8,-9,-9,5,-4,-5],[7,-2,1,-3,7,4,5,-2,-9,-6,8,-5,10]]], dtype = "int8")#candidate|2689|(6, 13, 13)|const|int8
bop_2690 = relay.right_shift(var_2688.astype('int8'), relay.reshape(const_2689.astype('int8'), relay.shape_of(var_2688))) # shape=(6, 13, 13)
bop_2693 = relay.less(var_2688.astype('bool'), relay.reshape(const_2689.astype('bool'), relay.shape_of(var_2688))) # shape=(6, 13, 13)
func_1227_call = mod.get_global_var('func_1227')
func_1229_call = mutated_mod.get_global_var('func_1229')
var_2702 = relay.var("var_2702", dtype = "int32", shape = (1089,))#candidate|2702|(1089,)|var|int32
call_2701 = relay.TupleGetItem(func_1227_call(relay.reshape(var_2702.astype('int32'), [1089, 1])), 3)
call_2703 = relay.TupleGetItem(func_1229_call(relay.reshape(var_2702.astype('int32'), [1089, 1])), 3)
uop_2714 = relay.cosh(const_2689.astype('float32')) # shape=(6, 13, 13)
var_2717 = relay.var("var_2717", dtype = "int32", shape = (1089,))#candidate|2717|(1089,)|var|int32
bop_2718 = relay.less_equal(var_2702.astype('bool'), relay.reshape(var_2717.astype('bool'), relay.shape_of(var_2702))) # shape=(1089,)
func_2223_call = mod.get_global_var('func_2223')
func_2230_call = mutated_mod.get_global_var('func_2230')
const_2722 = relay.const([-0.181575,-4.582055,-7.337391,-3.658465,8.284918,3.205350,-2.305657,6.393591,-2.957899,0.274551,-1.334220,-5.755551,-8.289745,-3.669968,1.781117,-5.652932,8.980754,-2.083627,-8.416888,0.669592,-5.346769,-5.232807,9.531828,5.775574,-0.878127,9.785200,-8.124167,4.417966,0.124769,-9.463972,-6.763737,-5.138590,-7.785672,1.364886,8.850347,-9.601012,1.611912,5.309331,-7.792525,-5.043669,0.992125,6.538829,0.920166,4.780547,-3.630008,-4.450069,-3.627621,-9.702545,1.912402,2.126672,-0.096651,2.347537,2.926744,-3.902591,2.055318,-5.545078,-9.926393,-9.248155,-2.562691,-3.164889,7.790838,3.045936,6.073668,-1.260803,3.679514,-7.147641,9.199417,-0.098798,-3.002426,-7.489077,4.179763,-2.999756,-8.285817,-9.590209,-3.103516,-8.737540,7.896545,7.850918,7.778471,1.335112,-9.795885,4.595614,2.179471,-5.672352,-4.459210,4.095332,4.355370,-3.003075,-5.143443,-6.149829,6.109954,0.096215,0.261180,-5.033713,-0.195940,2.992339,0.357497,3.307218,-4.301913,-0.902362,-4.380987,4.684507,9.038597,-3.749491,-8.079959,6.562972,0.284657,-8.109001,8.202593,3.933525,-6.090810,-6.871782,3.251760,5.902418,0.659217,9.871232,3.678145,5.194554,-3.484631,5.029018,1.485858,-0.581383,0.323605,3.892765,0.277544,-2.100085,3.075361,6.901983,-9.951538,7.036324,-8.254466,-0.225883,9.586358,3.329101,2.380777,-6.181978,6.588336,9.805934,0.054350,2.823656,1.856628,-6.221277,0.138030,-7.290224], dtype = "float64")#candidate|2722|(144,)|const|float64
const_2723 = relay.const([2.791650,-2.209190,3.435521,0.134847,-4.794620,-8.399163,1.002329,-1.625639,3.887106,-8.043080,-4.993330,3.358356,-9.420106,-9.715226,2.288758,9.538558,-0.481499,8.862226,5.575602,3.144120,9.644333,9.830479,4.402753,8.367419,2.882493,9.502044,7.937997,-1.343687,-7.595147,-2.131447,3.060958,-7.536795,6.361272,0.574393,-7.093225,-2.512274,8.846350,-7.616384,6.249983,7.756486,-7.705976,-8.373172,8.885750,6.733424,-4.747671,5.551039,7.576438,0.858219,5.765233,5.650999,-7.934377,7.632311,7.688817,-7.431271,-4.952169,9.584118,-6.917468,-3.208312,0.727204,-2.673472,3.897185,2.773666,5.753741,8.818484,-0.405875,6.390167,-4.560399,-0.845023,-2.792157,-7.575799,-3.061131,6.934759,-7.167688,-4.363101,4.797754,5.671752,5.952161,4.024112,6.440710,9.806993,6.774840,-3.635140,-7.035418,1.909865,-0.643361,8.073292,-0.370474,1.363814,-8.506510,-5.182321,-2.038316,4.533020,-0.096888,9.607146,6.992083,2.743098,4.175407,4.705305,-1.291885,-4.138105,-3.802803,9.460240,4.338373,7.597535,1.227287,1.322908,2.443907,2.915137,-9.292378,-7.813367,5.033072,-2.346830,4.767645,-9.312362,4.260601,-2.815148,-3.274799,-1.826968,3.549507,-0.738881,2.770111,-0.945665,-5.432880,-7.263767,-6.209028,-0.793201,3.488551,-3.023097,-8.693161,-5.759690,-9.286944,-1.943564,0.465444,-1.198856,-7.838158,3.673971,-6.848098,7.879642,1.507349,6.921121,-2.274788,7.637416,3.229271,-0.999408,1.721679,1.275450,-7.697339,-7.014030,-3.708513,-8.474308,4.092078,-6.310194,7.650202,-1.536761,3.363631,1.570031,-1.043007,3.173169,-8.491834,0.281178,2.342191,6.417195,-5.201699,2.173619,-4.166107,-3.234381,9.085417,-3.524802,-5.195136,0.785356,-7.637250,8.201716,7.363194,-0.304988,-4.032308,5.281382,-5.271897,3.994490,5.860865,9.473593,-7.894081,9.320550,-2.139717,8.067515,0.710323,0.098831,5.576059,-1.254318,8.042299,-7.925060,-6.750456,6.325758,7.816174,-6.824931,9.004652,-9.430941,9.023742,6.608780,4.791011,-0.020389,3.215732,6.253422,-7.179703,-2.406784,-6.246882,6.072363,-6.394676,-0.850037,-7.727939,-4.906365,-4.553276,0.993057,4.545654,-5.135926,5.331641,4.516800,-6.144197,3.702812,-1.681992,-5.334855,7.383923,5.733023,8.828757,3.940346,-4.713795,8.846472,-3.863396,-6.494031,-2.017271,5.827403,7.306050,-8.513843,7.985821,-6.989901,4.547725,-8.621412,0.510328,9.244352,2.894880,-5.062965,-4.956720,0.630796,-1.791636,-4.012802,-4.889885,2.800977,-4.748592,2.541982,8.851402,3.974652,-6.186796,2.807861,-9.876462,-9.709078,2.873775,0.546534,3.501774,5.276898,6.451546,-4.449044,1.538816,3.844720,3.402385,7.831536,7.465373,-9.179714,-8.943345,3.397441,-3.345786,7.873519,-9.036593,5.240601,9.099583,8.611377,0.239866,-5.266118,6.968862,-7.737367,-8.786360,-6.584140,2.129585,4.124103,-9.819999,-0.874862,0.889167,8.139937,-5.729136,2.522087,7.720540,-7.507548,-1.704114,4.087331,2.622681,-7.479591,5.397020,2.857294,2.935084,-2.741194,1.643506,-0.603972,-5.446050,-0.781971,0.920422,-6.339323,-8.937099,7.454364,9.404216,8.567350,-7.389165,-7.679283,-2.720194,-5.986310,5.287613,5.610037,2.024033,8.083108,7.993534,4.459509,2.749592,2.596403,-5.910559,-5.700374,9.905025,-7.300415,4.785304,2.297362,-4.864670,-3.963053,2.046505,-8.379450,6.655851,-9.532578,1.785242,0.692526,-3.096109,5.627382,0.694937,-1.283818,1.866199,6.172121,-7.773466,-9.580365,-8.283279,-1.124707,-7.814523,0.979886,-3.891732,2.228403,0.656066,-9.655899,4.517567,-0.965187,8.887495,-2.230524,-2.974661,9.189523,-1.588177,9.240186,-7.813467,-9.615222,5.115160,6.932331,-5.808557,7.235422,8.243637,0.493465,4.827490,-1.319108,-1.618390,2.214713,-6.470516,9.045705,-1.442721,2.582045,-0.555795,-5.717979,8.370399,9.036578,-5.162179,0.297155,-6.251966,-1.070300,2.420042,-0.099090,7.376542,-4.920234,7.950207,4.932624,-5.819301,-4.096620,-6.630729,-3.689028,-5.676035,4.094187,5.384090,5.526397,8.996177,1.735892,-2.075865,1.055179,-2.108049,3.949521,9.753935,6.172013,6.607390,5.329887,-0.807912,-6.936811,6.081488,2.751803,-3.126136,9.611955,0.826390,-8.509682,-7.717513,9.126531,8.612089,-9.313219,4.490409,1.397107,-6.630022,9.559311,-9.620668,3.752157,4.360918,-6.565223,9.829623,-3.351246,4.274726,-0.320459,-0.951574,-9.292733,-5.362341,-0.524822,-8.765891,3.123832,-0.490088,-4.348849,-5.117042,5.897451,-5.394673,8.391689,3.392242,-1.687612,2.209266,-4.744723,7.369159,0.280972,-5.616503,7.196624,2.890060,3.474622,8.861132,4.514824,6.171690,-6.429978,-8.972112,-1.982756,0.243223,-0.301949,7.285915,-6.742622,2.266058,9.456129,3.349098,7.862051,2.590617,1.736077,-7.057275,-8.549254,1.138951,7.013468,-8.457312,7.778795,3.266666,-8.956801,-7.416950,7.825483,7.365019,4.665343,2.116799,9.666539,5.905917,-7.151631,9.700211,-3.467568,2.467969,8.972597,2.173123,1.249138,-3.051026,4.106465,-3.885364,3.479857,9.712226,-9.045756,3.823214,1.080410,-8.758185,-4.059115,-0.519862,-6.501966,-4.025632,-2.030049,-1.554634,-9.067819,1.643377,-0.221554,-0.817276,3.364364,-3.830332,9.648598,-0.888677,4.463099,-8.141314,-2.117044,-3.706708,-3.771205,-6.280766,-3.579338,-3.615639,-3.691404,-8.461912,1.593272,-7.071414,1.068004,-1.065721,-6.518496,5.163033,-8.503092,8.283663,6.615814,8.563961,-4.955263,-3.912813,9.618277,-2.613984,-8.365584,-6.185539,6.182433,1.496924,5.380328,3.623248,-6.661523,7.174960,-8.205006,3.422776,-0.427666,8.317034,5.768624,3.018632,-3.225823,-3.800489,5.416635,-1.329852,8.130573,9.666294,-6.943802,-7.335349,3.916549,9.949484,-6.769684,2.921122,3.674318,0.936971,-1.359178,1.648027,-7.851075,-1.999611,-0.618645,0.820840,-5.968014,4.767909,4.906235,5.604219,3.742700,5.599734,8.443695,8.650576,2.371130,7.442094,1.014636,2.764142,-3.925159,5.457945,-6.171596,-8.239466,9.638951,6.163702,9.409580,-6.692460,7.657352,-2.069928,-3.235885,-7.516450,1.062370,-1.538145,-2.308508,-9.609598,9.369015,-8.091738,-1.067121,-6.143697,-6.545194,8.026711,-7.381710,-2.936638,0.990755,-2.407877,-8.226117,0.746485,0.942666,8.002339,3.545551,-6.869893,5.150292,2.865559,-6.392909,-7.048235,8.119336,-9.902865,4.593883,-0.345324,-9.147027,-7.981384,0.818785,-3.391815,0.232130,-6.314920,6.525151,3.696820,4.022532,8.498425,-7.285048,-8.829900,1.149376,7.213811,-0.770274,3.328347,8.514680,5.241206,6.813202,9.915209,2.201072,-9.659668,-7.948283,-5.976189,-3.959456,1.280077,8.207732,-8.296870,8.753918,6.197628,7.312567,-8.863243,-6.277023,8.740180,2.950685,9.508067,0.984380,8.078934,3.054553,9.466764,9.208211,9.347274,8.366377,3.563822,3.909369,-6.699635,8.058421,0.110142,-4.097501,-9.098974,8.337475,7.661586,7.120610,4.226972,-1.472175,-3.983459,7.725693,-4.975843,6.210891,1.248525,-5.233943,-3.180727,-6.960574,4.034314,-5.626948,-7.211807,7.987976,-7.655937,0.199902,-6.167346,3.214936,2.606818,-6.377039,5.349430,-8.594265,-1.878222,-2.870108,-8.743935,9.892497,0.007740,3.600243,3.770238,3.553078,1.325843,6.008427,-4.382221,-0.768935,-5.507744,5.846697,6.460982,-2.429476,-8.837066,-4.439700,-9.453232,0.662596,7.603952,4.145066], dtype = "float32")#candidate|2723|(720,)|const|float32
const_2724 = relay.const([-5,-5,5,1,-4,-1,1,5,-10,3,3,-6,2,-8,6,-8,-4,7,8,3,1,5,9,-7,10,-10,-1,-6,2,10,9,3,3,-5,10,-5,3,4,-1,-3,-1,6,1,5,-7,-5,4,-4,-8,2,-8,-8,6,-4,-4,-9,-2,-9,8,10,10,4,1,-3,-6,6,1,-6,9,3,7,-10,-9,-5,2,2,9,8,-5,-9,-5,6,1,2,-2,-3,8,-1,10,-4,9,6,4,-10,-4,-10,5,4,10,6,-2,-2,-2,-7,-8,7,-7,-7,-9,-1,-7,-2,9,-10,2,10,7,-4,4,1,2,-9,-3,3,-5,-6,5,9,-6,2,7,3,5,-2,1,-3,1,4,-2,7,1,-4,-3,-10,-3,8,8,3,9,6,-9,2,3,-6,-5,4,8,2,-8,2,-9,-1,-10,-10,-2,-8,5,4,6,-3,-5,-6,-3,-6,-3,4,7,-8,-2,7,-5,6,2,8,-10,-8,-9,9,5,5,-4,-9,-4,9,5,9,-8,10,7,-10,2,-3,4,-5,9,-6,-10,-5,2,-10,9,-9,-6,-9,-8,9,8,-2,-6,-9,6,-8,-2,3,-7,3,4,-7,10,1,-6,9,-4,4,6,3,-3,-10,-5,9,6,2,-3,-10,4,2,-4,3,9,-8,-5,1,-3,10,-6,2,2,-3,10,9,-7,-5,1,-10,7,7,8,-7,1,-1,-8,-8,-6,7,-4,-3,9,-1,7,-3,9,6,10,-2,-3,-7,-7,-1,-5,2,-7,10,4,8,-7,6,3,-5,5,3,2,9,4,-4,-2,-10,-3,7,-6,-9,-6,-6,6,1,1,-1,5,-2,-4,9,5,5,10,7,6,6,2,-10,-7,2,-8,-9,-5,-1,-9,2,-10,6,-10,-7,-9,-8,-6,9,-1,1,4,-2,3,5,-6,8,8,7,6,-4,-6,6,-1,7,-8,1,8,-10,-9,-3,-5,-2,-2,1,-2,3,-7,3,-7,-2,-9,-6,8,-10,-10,1,-3,-8,-1,-2,-6,-2,7,-5,-8,-7,1,5,-9,6,7,7,-8,4,-6,2,-3,-6,-2,3,7,-6,-5,-8,4,-6,-9,1,-9,-9,-9,-8,-7,-3,7,-6,7,-3,-3,-7,-4,9,5,3,3,9,-4,6,-1,-10,-4,3,8,-4,-8,7,-3,7,6,-3,5,1,-9,1,-6,10,-9,1,-2,8,5,4,-4,9,-5,9,4,-9,6,7,-1,10,-2,7,6,-4,5,-1,10,-8,-10,-3,8,-1,2,-6,5,-2,7,-2,7,5,5,10,4,10,-7,-2,5,-7,1,1,-1,4,-4,-2,4,2,3,-5,-10,-3,-10,-9,-8,3,2,-5,8,-1,-8,3,10,3,5,-10,-5,-1,-10,9,9,-7,-5,-5,4,3,-9,-5,-2,-4,-6,-2,-9,-3,3,7,3,4,8,1,7,5,-2,7,-1,-1,-5,-8,-3,-3,5,2,-4,8,-8,-4,-4,-1,3,10,-8,1,-3,-8,-1,5,-1,-6,3,-6,4,4,-1,6,-2,6,-7,-5,-5,7,4,-4,10,9,-3,-4,5,4,-4,9,-9,8,-5,8,-6,8,8,-8,-1,2,1,2,6,1,-8,-8,9,-3,-8,4,6,7,-5,4,1,-9,-4,8,9,-3,-2,-4,-6,-7,9,-2,5,-1,-4,6,3,-8,8,-8,-5,-4,2,10,-6,-4,-10,2,-8,6,7,7,-7,8,1,2,7,-3,-5,-8], dtype = "uint32")#candidate|2724|(660,)|const|uint32
const_2725 = relay.const([[1,7,-10,-2,-8,9,-1,6,4,10,3,-3,-1,1,-8,-8,-8,4,5,-9,7,2,-10,-5,-4,-6,-2,9,7,-7,-5,-2,1,1,10,-8,-7,-6,-1,-3,-7,9,1,3,7,3,-6,-7,10,4,9,10,4,-2,8,7,6,5,5,-5,9,-8,-2,-5,-4,-6,-10,-8,-2,-9,-6,8,-6,1,-10,-8,6,-7,1,-3,-10,8,5,6,6,2,4,8,-10,3,-7,10,-7,2,-8,2,3,-7,8,10,1,-8,9,-4,4,10,10,-5,-8,2,-1,5,6,4,7,8,5,2,-1,-4,6,6,-5,-3,-7,2,-1,2,1,3,-2,-6]], dtype = "uint32")#candidate|2725|(1, 132)|const|uint32
call_2721 = relay.TupleGetItem(func_2223_call(relay.reshape(const_2722.astype('float64'), [3, 8, 6]), relay.reshape(const_2722.astype('float64'), [3, 8, 6]), relay.reshape(const_2723.astype('float32'), [1, 720]), relay.reshape(const_2724.astype('uint32'), [660,]), relay.reshape(const_2725.astype('uint32'), [132,]), ), 8)
call_2726 = relay.TupleGetItem(func_2230_call(relay.reshape(const_2722.astype('float64'), [3, 8, 6]), relay.reshape(const_2722.astype('float64'), [3, 8, 6]), relay.reshape(const_2723.astype('float32'), [1, 720]), relay.reshape(const_2724.astype('uint32'), [660,]), relay.reshape(const_2725.astype('uint32'), [132,]), ), 8)
func_57_call = mod.get_global_var('func_57')
func_60_call = mutated_mod.get_global_var('func_60')
call_2736 = func_57_call(relay.reshape(const_2723.astype('float32'), [16, 5, 9]))
call_2737 = func_57_call(relay.reshape(const_2723.astype('float32'), [16, 5, 9]))
func_2076_call = mod.get_global_var('func_2076')
func_2080_call = mutated_mod.get_global_var('func_2080')
var_2739 = relay.var("var_2739", dtype = "int32", shape = ())#candidate|2739|()|var|int32
call_2738 = relay.TupleGetItem(func_2076_call(relay.reshape(var_2739.astype('int32'), []), relay.reshape(call_2721.astype('int32'), [7, 10, 9]), relay.reshape(const_2724.astype('uint32'), [1, 660]), ), 3)
call_2740 = relay.TupleGetItem(func_2080_call(relay.reshape(var_2739.astype('int32'), []), relay.reshape(call_2721.astype('int32'), [7, 10, 9]), relay.reshape(const_2724.astype('uint32'), [1, 660]), ), 3)
func_2223_call = mod.get_global_var('func_2223')
func_2230_call = mutated_mod.get_global_var('func_2230')
call_2743 = relay.TupleGetItem(func_2223_call(relay.reshape(const_2722.astype('float64'), [3, 8, 6]), relay.reshape(const_2722.astype('float64'), [3, 8, 6]), relay.reshape(call_2736.astype('float32'), [1, 720]), relay.reshape(const_2724.astype('uint32'), [660,]), relay.reshape(const_2725.astype('uint32'), [132,]), ), 10)
call_2744 = relay.TupleGetItem(func_2230_call(relay.reshape(const_2722.astype('float64'), [3, 8, 6]), relay.reshape(const_2722.astype('float64'), [3, 8, 6]), relay.reshape(call_2736.astype('float32'), [1, 720]), relay.reshape(const_2724.astype('uint32'), [660,]), relay.reshape(const_2725.astype('uint32'), [132,]), ), 10)
var_2745 = relay.var("var_2745", dtype = "float32", shape = (6, 13, 13))#candidate|2745|(6, 13, 13)|var|float32
bop_2746 = relay.less_equal(uop_2714.astype('bool'), relay.reshape(var_2745.astype('bool'), relay.shape_of(uop_2714))) # shape=(6, 13, 13)
func_383_call = mod.get_global_var('func_383')
func_387_call = mutated_mod.get_global_var('func_387')
const_2759 = relay.const([[9.389861,7.828883,9.864339,8.924324,-8.778538,-2.514200,3.184817,7.195978,2.556964,4.828632,5.729715,6.595273,3.433488,-0.750336,-2.426545,3.716538,-7.780331,4.401645,-7.814077,-7.542388,4.264309,-7.173923,1.457351,2.979327,-7.381463,8.198457,-1.873835,-2.295584,-2.065691,8.508981,-0.384155,-3.107971,5.223303,-6.783498,2.351601,-6.423215,0.560103,3.419122,-2.986036,8.532810,2.129021,8.747252,3.475103,0.088892,-3.834234,-7.173091,4.145729,8.340421,-4.191278,-0.458505,-0.926129,-1.026443,8.738031,0.423613,3.094514,-3.294027,0.874563,-0.401874,-7.275030,-7.308340,-0.513732,2.628132,-3.687738,-4.055574,-2.587264,-0.819813,3.642503,-0.998149,-3.977220,-3.166779,-0.619347,-8.928913,-0.155248,-3.275116,-1.890997,-1.440069,0.763223,5.966928,-9.910647,-4.829893,-2.124700,-8.657647,5.899825,6.401291,-6.492537,5.092812,-0.817556,-4.867723,-7.356444,5.830863,-0.234058,3.334433,3.133458,6.112218,-6.652545,-1.769252,-3.903911,-0.842652,4.245917,4.302514,-4.749460,-2.507668,-4.867006,9.224892,8.244554,2.026906,-9.717683,9.312437,9.681582,-1.058708,-4.607258,4.251156,7.332655,6.046831,5.725949,-2.972810,1.225074,-8.110555,2.980651,8.800322,5.530105,-6.429559,4.033136,1.335611,-4.515815,9.849262,8.121421,9.340491,-3.421180,9.320490,1.481576,9.247044,4.365499,-4.707746,-0.983903,0.648915,1.658809,7.323664,-3.508450,7.416304,-0.779209,1.329524,2.540765,-0.783483,3.147184,3.402415,3.540634,-5.610142,9.265314,-9.634543,-1.739004,9.255830,7.451978,-6.171896,1.067235,9.552715],[-1.443991,4.086169,6.552091,-5.435793,-2.730045,-3.696518,-6.018599,-6.495046,9.785760,0.624920,-2.913862,0.193343,-9.749293,5.294365,-6.049892,2.806086,-3.723713,-5.904983,3.207718,-5.348244,3.904788,2.262243,5.057789,2.278089,-4.996240,-3.447004,3.208701,1.391803,-0.314908,2.550197,4.808066,3.982090,-0.126095,0.221867,-2.469729,8.392903,-3.748159,-3.019312,-3.204220,6.536082,-9.309978,0.715932,2.689920,2.421735,-3.057092,-1.288435,-7.850472,8.116637,-7.462819,-9.526967,-5.941736,-0.129761,-4.573298,3.483584,-9.588244,-3.711846,-7.606150,-0.131881,-5.144718,8.663693,-6.284288,-5.199767,-2.247043,6.829479,-3.796381,4.013280,0.996351,-5.507488,-5.327016,-9.226075,-9.550756,-2.762355,9.227883,-3.613700,-9.264729,-6.203987,-6.679653,3.190427,-3.154550,9.599745,-2.909946,2.133229,-3.817514,-8.805987,0.653352,5.632933,1.484231,0.304826,-1.083404,-6.467340,0.906982,9.390381,1.454693,-3.932296,-9.731316,-0.340868,8.405817,-0.630971,7.979907,-6.852641,-5.695723,-3.381654,6.453348,-6.509558,-8.068473,9.626502,4.994699,2.105993,4.827901,-6.830985,5.332370,8.480899,-4.087835,-5.659551,-9.071240,3.539793,-7.309363,-9.940409,1.509041,0.691757,6.176681,0.765273,2.604042,5.122653,4.514239,-9.925948,-1.174838,9.916540,-3.812613,1.799656,-8.351921,9.310904,-8.820411,3.659789,-5.824188,7.534225,8.601314,-5.421283,9.855961,6.683871,5.239232,8.465298,1.925962,-1.140237,-0.431876,-7.361875,-1.462751,1.891278,0.037352,-8.350164,9.652173,6.053067,3.040309,-7.597350,0.357019,5.911694],[1.059643,5.139566,9.627890,-9.663861,0.856310,-2.035550,-1.323994,-3.471683,-7.726064,2.731974,7.048328,-7.152920,-4.378373,0.344699,5.978831,-2.847065,-8.229274,1.135965,-6.388266,9.495482,9.636931,1.985724,-2.021016,9.969369,9.059948,-2.466623,-7.974076,4.977481,9.294167,-0.479573,5.881450,-4.426752,-1.814554,7.627400,5.780422,-8.329766,-1.340381,0.274512,-0.233861,-6.109538,5.100459,-1.075208,9.116451,6.119715,-6.851458,5.551893,-2.072974,9.716621,-7.817804,8.164132,-4.098329,-5.903496,-6.605310,4.420764,-6.400020,-4.530720,-9.646475,0.262690,-8.864666,6.981075,6.874530,-3.703916,-0.811155,-3.338673,-2.942143,-6.900587,-8.179238,0.621474,-2.968270,2.151559,-5.685212,7.003192,-2.841813,3.294382,3.713221,9.520127,8.220409,-5.589539,-4.065430,-7.527465,0.162434,7.164253,0.138126,-6.298839,5.938012,0.160110,4.856747,-8.244124,7.547414,-4.641400,-6.802746,1.446080,3.314794,8.513594,2.991039,-9.841974,5.290620,-4.756078,-4.905061,-2.720703,-7.881812,-9.655883,-5.405136,6.435275,-0.411599,-6.710690,1.265950,-7.613030,-7.795477,-7.888064,-7.398344,-7.194663,-1.688104,-2.929189,0.033289,-6.121784,-7.252681,8.765293,-1.743247,9.496547,-3.910981,4.677910,7.230428,-6.486157,-0.656693,9.642849,8.780291,-1.984489,-1.108374,-3.404949,8.757638,8.142237,1.232092,2.743676,2.418416,-7.220642,-0.444106,-3.889640,-6.030824,8.018879,0.544071,9.309410,-4.111282,7.052894,-7.907821,-0.535113,-7.471728,-2.306745,-8.299737,5.168226,-2.760421,1.210218,-0.036514,-3.927780,-0.175885,1.861414],[7.963928,-1.240034,-4.506249,-6.657678,-7.962463,-3.653612,6.191431,-7.992201,-9.592102,1.001981,-7.678147,-6.506332,-0.207713,4.025047,-4.015042,1.390143,0.862426,-1.402035,3.537709,-0.609894,9.853220,-4.532417,2.692078,8.942340,2.848338,-1.283338,8.986417,-9.311228,-3.318678,0.153711,-5.800294,-5.413991,-7.377778,8.038528,9.789027,5.227525,-4.581945,5.209342,3.976014,-4.004171,-8.043140,-6.122996,5.216994,5.351176,-5.917040,-3.289852,4.327604,-1.697200,1.744876,3.104730,7.835605,-0.584962,9.949455,-2.498135,-3.556087,4.436773,2.461230,-2.324201,-5.556575,-4.949797,-5.273774,1.077029,1.831536,-2.476196,9.913188,-3.205634,-3.341827,-3.836712,-9.514593,-2.250753,3.845662,8.308506,1.958723,1.616636,-3.302046,-9.011926,2.644531,-1.282581,6.118040,2.093087,9.306876,-5.623718,-1.204971,2.179420,4.644447,3.802204,1.939285,4.909956,2.509307,-9.322767,9.642041,-3.550103,-5.531527,8.699938,1.438160,-1.537994,-0.282821,9.797032,1.142396,-2.202632,-5.486608,-1.134329,-4.961440,7.578439,-0.009205,0.401140,-7.433597,-1.647089,0.651846,2.000968,1.739595,9.833873,-0.273269,-7.805882,1.920978,-9.330192,0.304649,6.976278,-7.074727,4.317017,-1.517715,-2.160778,-1.808371,9.384105,8.984404,4.674843,-0.868913,-2.906066,4.939869,-5.421955,6.815641,-8.174811,9.000430,1.701577,-4.076677,2.367953,7.841690,-7.283341,-4.304109,9.832194,-5.587425,-6.735593,7.647046,0.727794,-1.684156,3.910719,-6.883168,-5.303432,3.943391,0.898422,-2.426405,-8.446102,8.722270,2.790476,-2.434371,6.234429],[7.067352,8.307437,-6.965327,7.588345,2.302707,2.224086,7.181877,9.946783,9.310695,-2.077287,2.068253,2.263702,9.451449,7.509044,-9.428132,-1.750356,-9.858336,-9.817586,-5.370276,7.329285,2.735966,3.453958,-7.459808,8.287440,-9.045184,0.919699,6.718316,-1.336778,-7.870049,-6.138013,-5.332158,-1.952475,7.401825,2.699331,3.556101,4.933255,3.741926,7.798961,0.987104,1.203055,-6.312183,-6.070770,-0.087857,9.161934,-2.088481,2.559551,-2.048742,8.109616,-2.709157,-7.338418,-6.283895,-5.815914,-3.608098,1.185110,0.674303,4.960925,-0.545778,1.186673,-1.964515,2.621700,-8.139095,4.672705,-0.902875,-1.061777,-4.687334,-0.414200,-4.400990,-3.063042,-6.047798,2.836597,9.639954,-9.392201,-3.907418,-5.545959,-1.395508,5.051086,-3.144193,8.238405,0.068219,8.428783,-7.862058,-5.965776,5.209007,-3.634436,2.365983,9.914371,-1.023151,-9.181347,7.108995,-8.450151,-6.523458,-7.334113,-6.296936,9.294807,-6.151326,0.084141,8.217474,5.093716,0.127397,-5.575092,4.535295,1.692433,5.999620,-5.445295,-8.328485,-1.285150,-4.582653,9.580736,9.088232,8.790826,2.118567,-8.732465,-5.692429,6.905615,9.957627,-9.802215,3.427276,0.830685,4.566898,9.351428,-5.405429,-6.925981,3.232946,4.000358,4.998003,-5.404226,-2.746196,7.035910,-6.120799,-3.350074,-8.617040,0.619338,-2.081144,5.641405,-9.673025,4.107014,-2.711889,-6.679606,2.854239,-1.646241,-5.441225,2.743880,-5.581124,0.231389,-3.996120,-7.562761,9.233324,-3.580346,-6.693140,0.022552,7.727949,1.531613,5.574075,3.432231,-2.523359,5.228523],[-9.690195,0.043939,1.473646,9.166645,-6.363450,-1.680664,7.181371,9.712742,-5.652674,3.686449,1.549228,-8.729726,-7.247991,8.085098,8.899458,5.709039,6.319511,-6.759022,5.503615,-8.302205,-3.526652,4.898172,-1.591096,3.631170,-1.551463,-5.591361,-7.030836,-9.188042,-7.922020,6.829338,-7.212331,2.867345,7.763639,-5.168663,5.488147,-0.750242,6.353072,-3.348257,-8.662296,6.361691,-7.528391,-4.509583,-2.840385,7.485636,-0.857255,-0.729392,7.619687,-6.084856,-4.328518,7.765373,-1.904405,2.742249,-8.785490,0.485393,4.896373,1.207992,-1.713850,-3.036270,-4.468763,5.349124,-0.023744,0.012978,7.237683,-0.267394,-3.460717,7.723383,2.777493,-5.870393,-0.964142,-6.304622,-7.221423,5.655966,0.362985,1.550958,7.506091,-8.570739,9.650060,7.724946,-4.241283,-8.515234,-7.372408,8.689647,-0.868536,6.346354,7.193769,-2.145756,1.224036,-0.609803,-8.434740,-1.657330,-7.491713,0.378861,-0.587335,-4.344118,8.939852,5.958891,-5.168633,3.476715,-0.126912,-2.191982,1.770662,-7.281841,-3.181306,4.068122,-1.060436,9.002368,3.530077,-9.332360,1.974115,-9.574301,6.988753,-8.128764,-7.777581,-1.904469,-9.893378,-5.758877,-8.175885,-0.880548,8.081057,4.370590,8.902976,-6.696242,8.038260,-1.413901,7.658158,0.454557,-8.123575,-6.062889,-3.829690,-2.312548,3.139190,-9.820742,2.811172,1.299440,-3.949192,-7.707508,9.959856,-6.020021,-0.975735,8.101959,8.259864,-0.529132,9.469768,-4.378058,-8.965591,-3.655313,9.466809,9.985822,-0.364231,0.279307,7.436655,-1.009185,-1.239046,5.179124,-5.433836,-0.561815],[-1.848092,6.193265,-1.297768,5.909031,-9.872692,-4.455311,-4.279156,-5.924952,-1.311609,2.276603,-0.645241,-0.737336,7.189720,6.469883,7.213629,6.944303,-3.343676,2.729797,8.930857,9.097026,-5.332029,6.523821,6.255900,3.001866,-8.575927,3.994636,4.685848,6.115273,-6.229699,-3.326069,5.733689,0.685792,-8.588385,-2.154404,4.584988,-9.791029,6.703592,-5.001897,1.326683,2.093883,-5.042304,-7.524671,-1.593517,-1.962556,-1.866027,-1.405651,2.083377,-4.107774,-6.175521,2.624835,-5.684477,-2.901900,8.849018,4.308992,-3.203540,-2.521496,2.170975,-3.862372,0.870163,-4.374703,9.852848,8.791104,-9.188607,2.513571,-8.485681,-3.756838,-6.440194,-7.566811,9.299573,-7.605544,-0.571422,6.994759,-7.289820,-9.365654,-5.779586,4.054494,3.121512,-5.805638,-0.528798,7.405248,-8.743688,-8.239749,-9.410108,0.625876,-0.435175,7.693772,-4.910771,-7.719548,0.745880,-6.769965,-7.693395,8.346407,-5.154736,6.661287,8.587743,7.390149,2.521317,-5.443096,0.213840,2.847150,-0.063612,-4.430432,1.121874,5.863497,0.171675,3.637672,4.313079,-5.081457,-3.198746,2.714388,-5.759682,-4.536902,-8.703619,8.668282,-4.441272,1.326452,4.071757,8.034603,-0.935849,1.428718,2.989213,7.827446,-2.352222,-9.051685,-3.776164,-1.931617,9.101648,-8.997384,-1.037432,2.004586,-4.603044,1.364825,-9.824960,4.051819,2.022958,2.788007,2.162898,4.240938,-8.725351,-9.589583,6.420652,3.566898,2.822581,-1.723842,9.579314,-6.495317,-5.246186,0.384023,5.814993,-2.309481,-5.266009,7.271451,-4.678186,9.607288,-1.848785,3.387027],[-4.844794,-7.561175,-2.107785,6.051047,-0.896109,-8.872305,0.369671,-8.360948,-9.363119,7.581890,-4.535345,-7.774220,-2.101606,4.011316,0.515229,-8.660429,4.579923,-9.013988,-5.579840,2.559782,7.676780,7.800711,2.418135,5.899256,-4.048664,-5.017110,0.424342,-8.439990,-4.139146,5.730885,-4.394225,-9.292483,-0.730855,-5.534437,-5.749539,-9.179648,6.680175,4.865730,1.296809,-7.298522,5.743485,-1.792498,8.320691,-5.158915,-2.161617,1.250440,-0.472026,-5.137728,-6.676319,6.147276,-7.370324,1.978197,4.250973,-5.392727,6.806220,2.611530,-1.760558,-6.060483,-5.560148,4.907015,-4.979897,7.042336,-5.658968,4.189636,-5.382674,-7.242868,-8.135807,-7.628948,-2.214762,-3.532904,4.772049,-4.523059,3.836058,9.467119,-3.731980,-4.286252,-2.048647,0.383935,5.222710,7.990800,0.369086,-7.063892,0.589777,1.273025,-6.688159,-7.262922,3.889475,6.095880,5.259709,-0.449239,5.259035,-4.868135,3.654697,9.148813,-1.194432,-5.500577,-2.366911,-4.463628,-4.911770,8.239612,7.587150,-9.858217,-8.215326,-8.846885,6.985224,1.981118,2.110094,-0.344685,2.236105,-9.886279,-2.647231,9.058675,9.894011,9.782672,-1.321659,-1.028665,-0.337687,-2.842452,-9.842096,-9.296362,-4.710943,2.479551,0.598115,-8.223916,4.027328,-1.587696,8.171384,-5.758635,3.131835,-0.678254,-5.834260,-6.174326,-2.305515,5.862961,6.643915,-3.959157,-6.980420,4.611835,8.882858,-9.908176,-2.796566,-2.863488,4.042851,3.053053,-7.546974,-1.497114,-1.650110,4.589673,4.738404,-9.489404,-9.277791,-8.196067,-7.519357,-7.014260,9.362844,-2.337041],[-0.160032,-0.613611,0.464136,-6.125225,5.157088,-9.529350,4.442166,-9.278757,-4.251525,1.021900,8.950671,2.184131,-8.091021,1.436641,8.046709,2.911986,8.217588,6.122419,7.843091,-3.066184,-0.903008,1.947119,2.966095,-2.691727,-6.727381,-8.897105,-8.342427,4.125689,-0.533866,-8.980200,-4.062174,9.722928,9.137371,-1.526246,-4.084589,-6.709163,0.186096,8.218941,2.801139,-2.744007,6.172063,-2.519283,9.500688,-6.406757,-3.887738,3.531642,8.801879,-5.397218,6.700322,0.373054,-3.250972,-6.738304,1.017175,-4.614658,9.161381,-4.853393,6.421438,-7.353708,-3.616385,-9.540632,-7.701512,5.999732,-3.572591,-2.188102,-7.686035,-5.626248,4.721730,-4.438682,-2.848167,-0.861744,-1.728692,-0.890521,4.013940,-7.162905,-9.817560,-9.691596,-8.271295,-7.396375,-6.305535,-5.432484,-2.310000,6.469631,9.347945,0.150486,-3.846064,4.900933,-8.213872,-4.011630,3.749532,-4.234914,-7.170678,-2.877347,-5.041352,7.049521,7.287642,-1.732363,-3.601544,-0.798250,9.243180,6.047277,5.827393,-6.820751,0.949470,0.573013,5.018319,-8.562884,-0.055791,-5.357532,2.468328,2.888809,6.957569,-9.145057,9.782430,5.520708,-9.613963,-2.522961,-6.977540,-8.492207,-0.052044,-4.226682,8.166190,3.580269,0.460687,-4.194988,5.647460,0.473122,5.895085,3.451847,-9.206045,-0.103439,2.208928,-0.936062,3.218722,0.884847,-5.396461,-5.591105,-8.942480,-8.278858,9.282057,-6.992617,-0.321198,-7.763335,-3.845565,7.596332,-1.727370,3.366154,-9.882878,0.776679,-3.795582,9.006352,-6.971042,-9.450661,1.154882,-7.712025,-4.082349,-1.829632],[8.160413,-1.838330,-3.793846,-3.830135,3.121436,-2.551084,-4.022266,-8.891661,3.306007,8.915092,5.119840,-8.540050,-8.472978,1.177151,-1.430446,-0.188112,-6.282471,9.362291,-7.118980,-4.443223,2.557057,5.655065,-6.198636,1.215585,-5.487268,-6.558895,-0.807445,-1.485839,3.630363,5.950991,1.133360,5.469649,2.278712,-6.206014,4.710323,4.586536,-4.849004,-4.713633,-1.649090,-7.085574,-9.822262,-0.631752,0.904992,-3.105638,6.165827,-3.319036,2.249261,-4.118779,-0.071370,-2.302585,9.428275,1.519915,-6.355792,7.526856,1.988800,2.680681,-3.000023,-3.868165,5.539873,-4.909796,7.598172,6.698899,7.164271,6.258346,0.190036,0.876753,9.842523,-2.685275,-2.155662,6.777115,6.572600,9.837982,-0.951677,2.628837,-5.669802,-1.824800,0.182532,-4.350319,-5.714422,-4.376416,2.908668,-7.865959,-3.676953,7.213003,-5.937133,-8.432435,5.317773,0.703888,-5.662871,7.308002,3.327768,-1.467750,-4.435798,6.648855,-6.737529,-1.134748,0.515421,-0.643126,6.778101,-7.332382,-8.740093,1.638213,-6.922168,-0.086045,1.609332,-6.392883,3.678098,0.354754,3.321779,-4.858643,7.858489,-3.824576,-9.449254,-2.671960,-6.355804,4.794199,-5.757404,-5.891710,-6.583323,8.342741,7.941974,-8.271772,-1.974225,-6.434026,-1.780443,2.936928,2.999911,-9.850757,-7.014247,1.768156,1.088263,-0.428579,5.311171,-4.793214,6.583404,0.747651,1.760759,4.077384,-4.393667,-8.036276,3.416328,-3.758552,9.985679,-4.146200,3.106087,-3.900013,-2.356305,-1.046322,6.955337,0.164083,-6.680068,7.830146,-3.965897,4.964494,-9.152649,9.011061],[8.814182,-0.405876,-0.234225,2.913943,-0.485655,-2.992290,-1.192700,-1.023673,-2.652474,-6.080087,6.390294,-5.311540,-1.302677,-9.634635,9.424086,-6.979985,4.736826,1.650659,0.164152,6.983929,-8.754776,5.455926,2.676193,5.271377,8.425863,-5.921043,2.069384,7.402811,7.685685,1.919285,8.350196,8.394781,-5.595042,4.511791,9.851770,-9.674697,-4.183413,-1.717010,0.155815,6.702278,8.878015,1.191892,7.215657,2.780141,-4.402213,3.918483,-7.044303,-6.917555,-7.893262,7.135498,0.262881,6.812018,9.460075,9.299083,3.720984,4.926649,-6.316270,-9.918763,2.035591,-0.002157,-8.622378,-7.091861,1.245024,3.405821,-3.417349,7.022377,-4.043216,3.500534,7.673932,8.506651,-9.464258,3.277416,9.036381,-1.975643,0.474824,6.924560,-8.231449,1.644295,-3.038920,3.777694,0.555813,-1.089958,-3.692663,7.222093,-6.821530,-1.561344,6.628277,-1.759773,2.239125,-8.439233,7.552464,-6.272246,4.037414,6.633349,6.636420,-0.272154,-1.348861,-0.794510,-5.428309,-7.866286,-5.073165,0.207441,-3.011454,2.837777,-5.509942,7.276875,3.862975,-8.075298,6.680536,-6.163327,-7.777860,7.607152,-6.223204,9.330754,6.841664,6.445149,0.594806,2.397162,-1.750390,5.476804,-0.432298,2.810633,5.498419,-8.536952,0.154749,9.298388,0.221634,-0.638979,-4.322453,9.018082,0.932509,-8.226245,5.353201,1.289283,-2.477643,0.818303,3.785231,-9.385188,-0.863848,5.764206,1.701486,5.739130,3.759430,-3.977526,-5.393900,0.626984,0.589415,-9.647110,6.899322,-5.515693,-9.926935,8.877184,-6.078302,-6.647026,-2.767928,6.460391]], dtype = "float64")#candidate|2759|(11, 156)|const|float64
call_2758 = relay.TupleGetItem(func_383_call(relay.reshape(const_2759.astype('float64'), [13, 12, 11]), relay.reshape(call_2736.astype('float32'), [720,]), ), 1)
call_2760 = relay.TupleGetItem(func_387_call(relay.reshape(const_2759.astype('float64'), [13, 12, 11]), relay.reshape(call_2736.astype('float32'), [720,]), ), 1)
output = relay.Tuple([bop_2690,bop_2693,call_2701,bop_2718,call_2721,const_2722,const_2723,const_2724,const_2725,call_2736,call_2738,var_2739,call_2743,bop_2746,call_2758,const_2759,])
output2 = relay.Tuple([bop_2690,bop_2693,call_2703,bop_2718,call_2726,const_2722,const_2723,const_2724,const_2725,call_2737,call_2740,var_2739,call_2744,bop_2746,call_2760,const_2759,])
func_2763 = relay.Function([var_2688,var_2702,var_2717,var_2739,var_2745,], output)
mod['func_2763'] = func_2763
mod = relay.transform.InferType()(mod)
mutated_mod['func_2763'] = func_2763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2763_call = mutated_mod.get_global_var('func_2763')
var_2765 = relay.var("var_2765", dtype = "int8", shape = (6, 13, 13))#candidate|2765|(6, 13, 13)|var|int8
var_2766 = relay.var("var_2766", dtype = "int32", shape = (1089,))#candidate|2766|(1089,)|var|int32
var_2767 = relay.var("var_2767", dtype = "int32", shape = (1089,))#candidate|2767|(1089,)|var|int32
var_2768 = relay.var("var_2768", dtype = "int32", shape = ())#candidate|2768|()|var|int32
var_2769 = relay.var("var_2769", dtype = "float32", shape = (6, 13, 13))#candidate|2769|(6, 13, 13)|var|float32
call_2764 = func_2763_call(var_2765,var_2766,var_2767,var_2768,var_2769,)
output = call_2764
func_2770 = relay.Function([var_2765,var_2766,var_2767,var_2768,var_2769,], output)
mutated_mod['func_2770'] = func_2770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_2783 = relay.TupleGetItem(func_2502_call(), 0)
call_2784 = relay.TupleGetItem(func_2503_call(), 0)
uop_2798 = relay.atanh(call_2783.astype('float32')) # shape=(1089,)
uop_2800 = relay.atanh(call_2784.astype('float32')) # shape=(1089,)
output = uop_2798
output2 = uop_2800
func_2801 = relay.Function([], output)
mod['func_2801'] = func_2801
mod = relay.transform.InferType()(mod)
output = func_2801()
func_2802 = relay.Function([], output)
mutated_mod['func_2802'] = func_2802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2355_call = mod.get_global_var('func_2355')
func_2357_call = mutated_mod.get_global_var('func_2357')
call_2808 = relay.TupleGetItem(func_2355_call(), 0)
call_2809 = relay.TupleGetItem(func_2357_call(), 0)
func_2403_call = mod.get_global_var('func_2403')
func_2404_call = mutated_mod.get_global_var('func_2404')
call_2818 = relay.TupleGetItem(func_2403_call(), 4)
call_2819 = relay.TupleGetItem(func_2404_call(), 4)
func_2559_call = mod.get_global_var('func_2559')
func_2561_call = mutated_mod.get_global_var('func_2561')
call_2820 = relay.TupleGetItem(func_2559_call(), 0)
call_2821 = relay.TupleGetItem(func_2561_call(), 0)
output = relay.Tuple([call_2808,call_2818,call_2820,])
output2 = relay.Tuple([call_2809,call_2819,call_2821,])
func_2828 = relay.Function([], output)
mod['func_2828'] = func_2828
mod = relay.transform.InferType()(mod)
output = func_2828()
func_2829 = relay.Function([], output)
mutated_mod['func_2829'] = func_2829
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2878 = relay.var("var_2878", dtype = "uint16", shape = (1, 13, 15))#candidate|2878|(1, 13, 15)|var|uint16
var_2879 = relay.var("var_2879", dtype = "uint16", shape = (15, 13, 15))#candidate|2879|(15, 13, 15)|var|uint16
bop_2880 = relay.greater(var_2878.astype('bool'), var_2879.astype('bool')) # shape=(15, 13, 15)
func_1587_call = mod.get_global_var('func_1587')
func_1590_call = mutated_mod.get_global_var('func_1590')
const_2888 = relay.const([-3,-2,4,3,-5,-4,-2,8,8,8,-8,-10,1,-4,-2,-5,-8,3,-8,-3,-7,-8,1,3,-1,7,-9,4,3,-5,10,1,-8,-4,-3,1,-2,-1,4,6,-6,7,-10,-5,10,7,1,8,2,-8,-8,7,8,5,-3,-1,2,4,10,2,-9,-10,6,-2,1,-3,8,7,7,10,-2,9,-9,-5,-2,1,-7,4,10,-2,-7,-7,7,3,-7,6,-3,3,-7,3,5,-1,-4,6,2,-4,-6,-5,7,9,-10,3,-9,5,3,5,1,-2,2,8,9,4,3,6,-7,3,-9,1,3,4,-4,-7,7,-10,9,-5,-8,-4,10,2,-7,7,3,6,5,-3,-10,-2,10,-8,-9,-9,-3,9,-5,3,6,-9,-9,5,4,-1,-6,3,-6,-9,5,-4,-3,2,-4,1,6,-8,-5,-6,-1,-5,-3,-7,9,-6,3,3,-2,3,1,-7,4,-1,-10,-9,-6,-10,-1,8,10,-6,-3,-9,5,3,6,2,-7,8,-10,8,9,4,2,4,7,5,9,7,5,-10,1,-10,5,-6,5,10,2,6,8,-6,-1,7,6,-6,5,2,9,6,8,-8,6,6,2,1,-3,-6,-9,-4,6,-6,5,-7,-7,-6,-5,-9,4,8,-9,-7,6,-7,-6,-10,1,3,3,10,-5,7,3,-2,3,-5,8,5,5,1,-4,-4,-8,-3,-9,4,-1,5,-9,5,6,2,-1,-10,-10,-8,1,-3,8,-3,-1,10,-10,-8,-1,-8,-2,-1,-1,9,-1,8,-8,-2,-7,3,1,-9,-10,9,1,-10,-10,-6,-1,2,2,3,-3,4,1,-7,5,-5,-5,8,-4,9,-9,-4,-9,-2,10,-1,-4,2,-4,-10,-3,6,9,-3,4,6,-8,6,1,-8,-7,2,4,5,-3,9,-1,-5,10,-3,2,10,2,-7,5,-3,-6,2,-1,10,-3,1,5,-4,3,-1,-1,-5,6,5,9,4,5,7,-4,-1,7,2,-7,9,6,-7,3,-9,7,-2,5,4,-3,-5,6,-5,7,7,4,8,-7,8,-8,-3,-4,-1,-3,7,4,3,10,-4,-7,-5,-8,2,7,-7,8,9,-5,1,5,-3,1,-2,-6,-2,-9,4,9,3,8,10,-10,-10,-9,-4,-8,-5,5,-4,6,-3,-4,-2,-3,-8,7,-10,4,3,-10,8,-3,9,-2,8,10,3,-8,-4,10,-5,7,-5,3,6,4,-1,9,-7,-4,9,6,-5,-6,7,-10,-4,-6,-10,6,2,2,-1,5,3,2,-1,-5,3,5,9,10,2,4,-7,-10,4,-4,2,-10,-7,9,9,4,5,-1,5,-10,1,3,-4,-7,-4,3,10,-2,-6,-7,-3,8,-2,-2,4,8,-6,1,3,-8,1,-2,5,-8,-5,5,-5,5,3,6,1,-1,2,-7,-2,-9,-8,-3,-7,5,5,-7,2,10,3,-3,8,1,7,-5,7,-3,-7,10,-9,-3,5,-7,-5,-6,-2,3,2,10,-4,-2,8,-7,-4,-8,-4,-9,2,7,2,-4,-2,-4,10,6,8,-6,3,-1,10,2,-10,-2,7,-10,3,-3,10,9,-1,8,5,8,-5,7,-8,-9,7,3,-1,3,6,10,5,-7,-6,-8,9,1,4,-9,-6,-3,2,-7,8,8,7,-9,9,1,-1,8,-4,3,-4,2,-5,-3,2,9,-3,1,6,2,-8,-1,-1,-8,-6,3,-7,2,-10,8,-6,-2,-5,8,-5,-5,5,-1,-4,3,3,-4,3,-2,-2,6,9,-8,1,6,-10,8,-8,4,-9,6,7,10,-7,-4,5,8,8,-8,5,6,6,3,-4,-8,5,2,-5,3,-9,10,7,-7,7,7,-1,7,8,3,-8,4,6,-7,-2,-10,7,4,1,10,-1,10,-9,-1,-9,-8,7,10,10,4,-8,-5,-6,9,-2,-5,-6,-7,2,-2,2,7,4,5,-5,-7,1,5,1,-5,3,-8,-5,-3,-2,-9,5,-6,-3,6,-7,-8,5,8,-9,2,4,-2,4,-5,10,-1,-10,-5,-9,9,-4,-6,4,8,8,-9,10,1,-7,-10,-10,4,-9,3,2,4,2,-6,6,10,-5,-8,10,-9,-8,4,2,-10,-8,1,-4,5,-6,2,6,8,3,-6,-7,-10,6,5,-3,-10,-5,-1,7,4,-7,-7,-8,-4,-5,4,5,-7,1,2,-4,-4,-5,-9,-9,8,-9,8,-4,-10,3,8,-1,1,-6,3,7,-10,-2,-5,-2,-8,-1,-2,-1,1,8,1,6,-1,-7,6,-4,6,-5,-9,-7,-10,7,1,-4,-9,-4,4,-4,-4,-9,-7,-7,1,6,-3,-8,9,-6,-1,-5,-5,-3,-8,-3,-2,-5,5,1,-5,5,10,-2,-9,3,9,2,-6,-2,-4,1,7,-4,-9,8,4,4,7,4,2,-7,5,6,6,8,-3,7,-4,-4,-6,6,4,-3,-4,6,-4,9,-4,-9,-5,2,5,-9,8,9,-4,3,3,-10,1,-4,-10,-2,-10,-5,-9,4,-4,-2,-6,6,4,-9,-3,5,-6,-1,-6,1,6,-2,2,-1,-8,-9,-2,8,6,4,-8,-5,9,-1,1,-10,7,-3,7,5,7,-4,1,-4,9,6,8,-10,-7,2,2,-6,6,-5,-3,10,6,-6,4,-4,9,-8,1,-6,10,8,-9,-10,4,-8,6,7,-10,9,-5,6,-2,5,-4,-4,8,-8,-8,2,4,9,9,-1,8,-4,-2,-1,7,-8,4,7,5,8,2,5,3,-7,9,1,10,4,-6,-8,8,3,-9,-3,6,8,-5,-5,9,1,9,-7,9,-3,-4,-9,-7,6,5,-10,5,2,-3,8,-8,-9,-3,8,-10,7,1,8,-10,-4,6,-7,-4,-8,-5,-8,-7,2,5,-10,-2,-1,-4,-3,-3,-9,-2,7,3,-4,6,-3,-1,1,-6,3,7,-1,10,5,-2,2,9,4,9,-2,10,-5,10,-8,-6,-4,-2,-6,-10,8,3,10,3,6,3,-6,3,5,9,2,4,-10,1,-1,-7,7,-8,4,2,-3,7,-8,-3,6,6,-7,1,7,3,5,6,10,8,7,-3,4,2,-10,5,-6,3,-3,3,8,-7,-8,6,9,1,5,8,5,1,6,-3,-9,8,-3,-2,-8,8,2,-3,10,-10,-9,-4,10,-2,-1,3,-1,10,3,-7,-10,5,8,6,-4,-5,-5,-7,-4,5,4,-5,-8,-3,6,-2,-6,10,-6,4,-3,3,5,6,1,-7,9,1,7,-10,5,-3,2,-3,-2,-8,-5,4,3,1,1,-10,-10,-2,7,1,-6,1,10,4,-2,-6,5,8,1,-3,-7,-5,-6,-3,-8,6,-1,-2,2,2,10,2,-9,5,-10,-2,-3,-4,-5,5,3,9,-6,-4,7,-2,-3,4,5,-10,8,-1,-3,4,-2,-3,-8,-1,-5,3,-1,9,-1,4,2,2,9,3,-8,2,-3,7,9,-6,-2,-6,-7,-7,-10,6,-8,-2,-10,9,-3,10,-5,-9,-8,9,-5,-5,2,3,-4,1,-5,-8,-1,5,-7,-4,-5,-9,10,-2,-4,9,8,7,-9,3,3,-1,8,2,2,-10,-7,-1,-8,1,-10,8,-2,-10,-3,-7,4,-5,-3,-10,1,5,8,6,-8,7,-9,4,10,-2,-6,-1,6,-5,-3,5,2,3,-3,5,5,-9,-7,-6,8,-9,-9,-7,8,-4,-6,4,-9,7,7,-5,-3,9,-7,8,6,-2,-10,10,2,1,-2,-3,4,-3,3,5,2,8,10,-7,-3,-9,-9,-3,2,-6,-8,5,10,-3,8,8,2,1,2,-6,8,-8,-6,-9,-4,5,5,-6,-10,9,8,1,-5,-2,2,-2,5,9,-4,2,-3,-1,-6,7,-7,5,-6,-5,-1,-10,7,5,-3,-5,-3,6,-1,6,4,-3,-10,8,9,8,2,-2,1,3,2,-2,3,2,-5,-1,-2,1,7,9,-3,-5,-7,6,-4,4,6,-2,-6,-3,3,-9,2,-6,-9,4,-1,1,-8,8,5,-10,1,-10,-6,-7,8,-3,-8,-1,5,-3,6,6,8,-6,5,-3,-7,3,-5,4,8,6,-8,5,4,-10,1,-4,10,-3,5,-3,-1,6,7,-1,-7,3,6,1,-5,10,-8,4,-4,5,4,-4,4,-1,1,-8,-9,-6,-8,-4,-9,-8,9,-5,8,4,7], dtype = "uint8")#candidate|2888|(1600,)|const|uint8
call_2887 = func_1587_call(relay.reshape(const_2888.astype('uint8'), [16, 10, 10]), relay.reshape(const_2888.astype('uint8'), [16, 10, 10]), )
call_2889 = func_1587_call(relay.reshape(const_2888.astype('uint8'), [16, 10, 10]), relay.reshape(const_2888.astype('uint8'), [16, 10, 10]), )
bop_2892 = relay.minimum(call_2887.astype('int32'), relay.reshape(const_2888.astype('int32'), relay.shape_of(call_2887))) # shape=(16, 10, 10)
bop_2895 = relay.minimum(call_2889.astype('int32'), relay.reshape(const_2888.astype('int32'), relay.shape_of(call_2889))) # shape=(16, 10, 10)
uop_2896 = relay.sigmoid(const_2888.astype('float64')) # shape=(1600,)
func_2801_call = mod.get_global_var('func_2801')
func_2802_call = mutated_mod.get_global_var('func_2802')
call_2909 = func_2801_call()
call_2910 = func_2801_call()
output = relay.Tuple([bop_2880,bop_2892,uop_2896,call_2909,])
output2 = relay.Tuple([bop_2880,bop_2895,uop_2896,call_2910,])
func_2930 = relay.Function([var_2878,var_2879,], output)
mod['func_2930'] = func_2930
mod = relay.transform.InferType()(mod)
mutated_mod['func_2930'] = func_2930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2930_call = mutated_mod.get_global_var('func_2930')
var_2932 = relay.var("var_2932", dtype = "uint16", shape = (1, 13, 15))#candidate|2932|(1, 13, 15)|var|uint16
var_2933 = relay.var("var_2933", dtype = "uint16", shape = (15, 13, 15))#candidate|2933|(15, 13, 15)|var|uint16
call_2931 = func_2930_call(var_2932,var_2933,)
output = call_2931
func_2934 = relay.Function([var_2932,var_2933,], output)
mutated_mod['func_2934'] = func_2934
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2939 = relay.const([[[1.386470,-8.758319,-9.502317,-6.413365,-4.181595,9.429356,0.872299,1.734762,1.823259,4.602954,-9.014159,-3.692455,6.510574]],[[0.378170,-3.130019,-6.589235,8.117368,-5.995041,9.237312,-7.484319,0.854227,9.019537,2.713114,-3.792328,6.884419,-4.607055]],[[-7.663630,5.267300,4.810548,-5.781144,5.939754,6.658303,9.107727,-6.517460,0.180289,0.924278,-4.843144,0.884269,2.848199]],[[8.123590,-6.474594,4.278137,-8.343823,-6.069979,9.791622,5.615152,1.002630,-4.918498,6.043514,8.431103,6.266088,6.306118]],[[9.569526,8.763142,2.461118,3.818577,-9.368831,-3.883859,1.997539,-0.622382,9.751131,0.713163,0.809564,8.878547,-5.366736]],[[2.408642,2.672204,-2.744596,2.034084,-5.196231,-8.040119,-8.720421,-7.985816,6.306543,9.859796,-6.482193,3.095985,-9.857852]],[[8.467720,5.714446,-7.621320,6.360995,-3.450088,8.768764,6.427687,-9.156050,6.641431,7.623096,1.141182,-6.912400,-1.552092]],[[4.565185,-1.178295,-2.352351,1.939193,-7.260695,-6.296064,-9.388139,5.549677,3.691460,7.850872,-5.900711,-3.738996,-0.807335]],[[-1.008732,5.004441,9.081196,-7.927368,-8.776965,-6.350104,5.019413,8.491127,-8.130375,-9.211324,7.763582,4.957106,7.705719]],[[-8.569868,1.255776,4.931552,3.212865,-9.614047,9.872337,-6.680623,-2.432555,4.885593,5.432477,4.714175,-4.741207,6.965754]],[[0.077036,-9.418453,-8.906923,5.378972,2.557308,2.883988,9.633544,-2.169598,4.384527,-3.795395,7.137615,4.821606,-4.609390]],[[-5.917831,-2.351224,7.810579,-6.496707,-4.131362,-8.422306,-4.544348,-5.125206,-0.555552,-3.900456,-9.569051,6.290907,6.171872]],[[-9.570561,-2.305035,7.157004,-7.090611,-9.046751,-2.466697,9.274501,-4.401177,-1.575583,-6.013844,-7.487388,-7.246624,5.016363]]], dtype = "float32")#candidate|2939|(13, 1, 13)|const|float32
uop_2940 = relay.acosh(const_2939.astype('float32')) # shape=(13, 1, 13)
output = uop_2940
output2 = uop_2940
func_2950 = relay.Function([], output)
mod['func_2950'] = func_2950
mod = relay.transform.InferType()(mod)
output = func_2950()
func_2951 = relay.Function([], output)
mutated_mod['func_2951'] = func_2951
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2959 = relay.const([[[-0.083335,-8.404351,-2.556473,-1.168995,7.947547,2.381155,-1.234753,-3.166480,-1.310513,-9.742913,-8.651968,-6.565453,-7.020341,-7.046127,1.352308],[1.272254,-8.297660,6.932731,-1.601906,-4.366615,3.649986,-4.995359,2.969778,8.332734,0.617148,-7.749077,-2.293981,5.960485,-2.030524,-9.660491],[2.809689,4.140856,4.348844,-5.709978,-2.759319,0.825479,-8.977491,2.237131,3.543700,-5.816834,-0.671038,-4.133830,0.627633,7.061069,6.691001],[1.375626,0.459228,-6.422320,9.419754,2.070489,-9.714678,-6.700027,-9.199630,-9.933783,-8.545994,-3.397210,5.153392,3.854595,-0.406278,-0.838259],[-7.357942,-8.985467,-7.654416,-0.562668,-1.183483,-1.020729,-3.520798,5.381135,-4.299801,-9.249998,-8.432218,-5.251973,5.645732,-0.280962,-4.190649],[-9.949235,-4.546387,9.097717,3.905458,0.416345,8.567532,-0.783434,-0.162027,-7.477268,0.903236,8.598542,-3.689239,-6.625411,0.913109,1.679380],[6.314835,-7.142784,3.050710,1.621375,7.592845,-7.939994,-5.756992,-8.525214,-0.140769,0.471830,-0.159632,-5.843255,-9.498009,-7.523282,8.154066],[-1.890155,0.030710,0.846643,-3.224649,-5.477742,0.849393,-6.514624,2.878300,-2.059463,6.472162,-5.337124,-3.508870,-0.133258,2.728104,-3.377872],[0.002558,6.262354,1.599020,6.774195,5.555080,1.770617,-5.662201,-1.034582,-6.767499,9.779743,6.685442,6.718822,-2.136204,-8.443445,0.941651],[1.123600,2.764206,6.034972,7.572278,-2.144201,-2.257350,3.636321,2.803710,9.709225,-5.891536,-6.474901,-2.659936,6.075950,6.325917,-3.586003],[-2.819608,7.461903,-4.791155,-0.343542,6.086056,3.115989,-2.483210,-1.980045,-9.308225,9.305568,1.883778,-3.984176,-1.506755,-9.151312,-6.097123],[-2.291692,-3.522771,-0.809207,-7.506169,-9.438663,-5.384713,-7.072977,-8.581664,-2.721108,-1.593750,0.840476,2.255655,2.323007,0.582169,-8.629253],[-7.332690,-6.950579,-1.572352,8.394037,0.068643,9.092707,5.347619,-8.978411,-4.158628,1.983714,1.020635,-8.776224,-0.102530,-8.848723,-3.589706],[0.396065,0.812349,4.620106,4.659578,-0.090045,1.762212,-9.724176,8.504508,-2.093135,9.495535,-6.952774,6.548588,-6.012561,-6.921740,4.106662],[4.824504,3.902066,2.132302,-1.526068,-3.974835,6.756092,-5.398129,-7.376210,6.696807,-5.327328,-2.318559,1.040452,7.916257,-3.914943,-0.385776],[-7.265100,-4.641563,-0.714140,2.582055,-7.102832,1.039882,4.596337,4.578371,-0.194477,-9.656699,-7.822310,8.633326,-1.619132,0.743701,8.949404]],[[4.570739,5.870164,4.864538,8.105136,-7.467455,-2.450508,6.874478,-7.327665,-5.145895,3.604349,1.307935,1.879631,0.825618,1.487208,-7.067986],[-7.444481,6.965129,-6.151251,9.196542,0.568413,9.300321,-5.539452,5.934615,-8.183705,6.010011,-8.949885,4.519201,4.800452,-2.549728,2.966722],[3.066313,-9.613407,6.187883,-0.257482,-3.478310,-7.580328,1.054078,-4.008951,7.710379,-6.135834,3.340393,1.722608,7.401518,9.975367,-7.390825],[-5.499810,0.781882,-2.073570,2.256750,7.888118,-5.353291,-2.350664,-2.537503,-6.370070,1.384136,-3.209733,1.172920,4.699221,7.571607,-9.300002],[6.465199,3.904106,9.624964,9.425171,-9.281893,-0.607224,-9.760875,0.173760,-5.230835,8.944076,-3.020006,-0.892247,1.456443,-4.044008,-9.748963],[-2.165173,-9.391089,-2.714304,4.180485,-9.161418,3.480065,-3.784332,1.023815,-5.270485,5.926445,9.456266,-8.238257,-0.952351,0.369502,-5.285564],[7.087780,4.019157,-9.725249,-3.637896,8.351013,-0.438357,0.663144,3.950180,-3.152314,-9.275779,9.360299,2.013217,6.577529,4.723776,6.220523],[6.775040,2.918517,-4.039566,-2.127715,2.706646,8.896518,-9.339253,1.074018,-6.920007,-2.394908,7.346073,-1.506515,6.112300,-1.905765,8.700581],[-2.999400,0.040796,2.787522,9.557012,-4.002231,-8.894325,-1.769918,-0.285623,-1.898269,1.520462,-8.266706,-6.529979,-1.257675,-2.032209,-8.414754],[-8.935668,-7.117630,-3.237048,9.539346,-9.348668,3.577116,0.336982,7.337340,8.154828,-1.872419,-2.221557,4.877378,-7.624997,-4.715175,7.976591],[-1.127007,5.859683,5.140791,-9.930941,-1.980161,-8.638963,2.876704,8.395713,1.834210,-1.561923,-4.624417,-9.808381,6.024959,3.255186,-5.739784],[2.024604,-7.312527,1.757588,-1.395742,-3.304170,-1.291865,-6.990586,-1.532855,8.604779,-7.191657,-6.043603,-3.716951,4.059380,0.388471,-5.292889],[1.957794,-1.983671,-7.991362,4.327771,9.585443,6.823924,-1.511454,-1.142059,-9.886631,-4.972115,6.287693,9.594616,-1.956081,-9.074701,2.610612],[8.404154,-2.709091,-9.953611,9.518978,5.242392,6.671092,0.863247,4.027512,-1.841520,4.728992,-9.195152,9.447735,-4.660075,-7.455381,2.881337],[3.143952,-2.895494,-8.046495,9.093466,-1.781759,2.963853,3.384243,9.327757,-0.003087,-5.324448,8.385995,-5.313552,-9.626371,-5.841205,0.671805],[-8.882263,-8.830706,-7.593904,3.302993,-5.157074,2.374445,8.593581,-5.124848,5.274167,9.788944,-0.468429,-7.420282,2.259399,-7.674851,-5.495709]],[[-3.223791,-4.247755,9.718706,2.312222,-2.398513,2.837150,8.897599,9.932044,5.004832,-6.351080,-8.435237,5.144348,-4.984119,-8.390866,-2.265277],[-3.023310,4.585003,0.143683,-4.315711,-4.379266,7.846906,-8.799539,-6.605268,-1.653810,-9.895679,-5.837950,-4.572099,5.382695,8.848562,4.060420],[-9.291627,-3.543100,-9.563611,2.821356,-8.918251,-6.860262,7.657762,3.722480,-7.118137,8.378053,-6.869625,3.987773,-0.767561,0.782861,-3.626769],[7.603129,9.038805,3.544271,-3.471883,-4.059206,-5.943420,-2.917128,0.683511,6.049208,2.233766,-6.715713,5.099543,-2.326174,-2.694723,1.865137],[-4.223008,-7.760590,-9.072184,-5.887245,-2.328760,7.935218,6.501381,-6.097613,0.025379,-3.555858,-1.297619,3.191177,-0.071405,1.959425,1.408384],[-2.737928,-1.638745,6.755059,-8.827113,8.982314,-9.649200,0.713525,-2.353214,-0.276211,5.083542,-5.225312,7.484679,1.130133,-2.633967,2.777095],[5.514578,4.966813,-3.765992,-1.203192,-6.137876,2.744631,4.328089,-1.686003,-6.214244,4.647714,4.405654,2.872297,7.655986,8.855453,-7.932053],[-4.980229,-7.986884,0.611025,-0.738049,9.132166,4.110645,-4.023422,3.543591,-1.303116,1.056636,3.599831,8.026157,-5.158011,-9.530642,-8.369097],[-2.573232,-4.230251,7.301685,5.756362,-8.001886,-8.540873,2.377081,-7.381760,-4.966197,-0.358356,-6.095879,-6.549945,-2.278353,2.679374,-1.505894],[6.223608,-4.815174,6.944946,2.152891,7.074019,3.036874,9.017578,-6.719920,5.678308,-2.399644,0.875467,-0.486179,3.887023,-9.729578,6.055273],[-9.601144,9.012227,-5.070408,-2.735224,2.906636,8.036210,-5.829499,3.139667,-7.138516,9.172226,-0.747484,-6.200125,-6.071696,4.222859,-4.264839],[-4.738748,-4.163291,0.994710,-0.504883,-3.683170,7.612871,9.739125,5.494652,2.047710,2.695764,-2.932550,1.751443,-2.616246,-5.707054,-3.937319],[-1.030932,-2.415832,-5.033978,-9.698875,9.273375,-7.077500,-3.353135,-3.338763,-9.752062,-4.717008,-8.003422,6.981534,7.067854,-6.546494,0.315705],[-9.774005,8.817382,-6.195742,-9.994367,-8.897775,-7.407028,-0.271753,-6.497648,-5.603186,-6.277670,0.427858,6.669651,-5.055687,-4.935552,3.678438],[5.309436,-2.318394,-9.494759,-5.820299,9.297418,-3.582122,2.576051,-8.127134,-1.478121,-0.277525,3.890760,1.061576,-6.489605,1.585144,-3.499250],[4.453531,-3.872646,-8.513553,-1.999931,1.868947,-5.941799,2.738788,9.983620,1.578122,-3.140441,-1.957189,4.348556,6.606217,-9.857409,3.178409]],[[5.420873,-5.253006,-5.136416,-1.267597,-6.477295,-1.520639,5.947235,-8.785956,9.262176,-2.880186,-5.295523,-3.492408,3.816303,5.552003,-3.443958],[-1.973612,0.860652,-2.618489,-2.847365,5.032258,-2.677443,6.914885,0.783392,-7.758929,6.650306,5.443551,-7.326722,-8.359121,6.466234,2.000804],[-0.403488,8.524974,-1.857925,0.252366,-2.671187,0.361550,-4.947704,-3.672328,2.218721,-8.184992,-1.119803,-2.659472,7.975611,-2.032544,-6.966335],[1.671974,0.857388,2.987828,-3.044384,-2.383625,0.220504,0.679031,-4.390509,7.923598,6.614912,0.266566,7.105856,-4.272723,-0.076390,8.368047],[-1.459843,6.970044,2.538705,3.694598,7.362007,-6.601306,-0.033849,-4.757913,-8.749983,-3.995071,1.978184,6.671993,3.143818,-9.094125,-5.707416],[-3.105453,-8.945890,-1.691105,-1.888346,2.508187,-8.845407,-7.763475,5.798806,8.048208,9.259755,7.827785,4.435353,3.514499,-2.920172,-6.350600],[-3.215265,2.573756,-5.207643,-0.050761,-6.494941,-7.696909,-7.787789,5.628985,5.830803,4.583262,-4.014251,-4.440414,4.016157,-4.421182,4.985031],[-8.658022,9.754151,-2.066231,4.019606,5.317537,-0.024304,-4.059390,-3.540816,-0.995649,9.012010,-4.595682,1.347079,0.477168,4.028846,-6.904099],[9.182079,-1.316181,8.630408,-7.174164,1.814323,-6.598759,-0.011130,-0.329624,-5.896588,-8.967687,-0.062846,3.756133,2.036979,-2.812832,-2.805486],[7.023400,6.723115,-2.903646,-8.342356,-5.401716,-0.942360,5.972171,7.391478,-6.089522,0.668605,3.489653,9.049305,3.074318,-0.102978,7.420258],[-9.138309,-9.168496,-7.566771,-9.519490,8.250062,0.807508,0.869129,-7.508589,-1.244765,-8.702011,-7.881311,-3.949366,-9.897368,-7.479245,3.395643],[8.202145,6.266861,-6.925726,8.672381,-2.179077,1.426344,-0.606340,8.392939,9.702833,9.657408,5.508035,-7.968364,-2.615209,2.009851,7.863595],[-7.566869,-9.190876,-6.819981,-3.165538,-0.161015,-6.727113,-0.967471,-0.376982,-7.742283,6.007959,-9.144248,5.920987,-4.543939,1.338900,-8.623120],[4.624281,-0.354565,-0.158267,-9.272673,-0.191230,-0.996175,-0.367510,8.297770,-2.963599,-5.021123,-6.800403,-4.691023,7.848503,4.252204,-3.416648],[4.514536,-9.653095,5.462669,-0.615286,0.123471,-7.324371,-2.660922,-6.436916,-3.012023,0.463189,3.269415,1.033016,5.656879,-7.842271,5.399345],[-2.553575,-5.639588,-7.902612,-6.997405,5.184717,9.749468,0.914399,-9.302564,-7.810341,-5.457445,-5.609642,6.567183,0.168999,-6.697867,7.637712]],[[-3.090287,3.386679,-1.346740,-4.027286,-1.443127,9.868750,-4.555746,7.100778,-6.287410,0.711044,6.900262,-9.761426,4.221538,9.826021,-9.126256],[5.202530,4.039459,0.527860,0.465387,-3.991254,-8.614664,6.527950,-3.257095,2.795911,-0.141747,7.807947,-7.015106,-0.964484,4.955499,-1.327746],[-2.750729,-4.566086,-1.859881,-9.524599,2.625555,5.167283,-5.162366,-3.263238,-8.331103,6.531113,-4.356234,-7.017528,2.755546,-1.425422,7.518391],[-2.329047,8.338634,4.335858,-7.282123,6.216168,-7.291762,4.528235,5.503580,1.267990,-9.247172,1.672252,4.733067,4.097895,-6.890193,2.034097],[-7.569578,-0.849136,-4.435445,6.033169,1.660891,-4.752541,-7.968195,-0.142302,-1.857983,6.899221,-3.136905,2.144356,-0.445977,-2.995145,0.814193],[-0.470679,5.366018,3.376982,-3.538715,1.839752,1.800122,8.335342,1.841576,6.426906,9.013031,-2.702160,3.731304,5.299469,6.910848,4.826227],[4.257427,-5.543452,-9.389156,-4.677053,0.847917,-3.536225,-9.299306,-4.732136,4.285815,0.609105,-9.830796,-6.486173,4.257283,7.267070,-8.043412],[7.670698,0.978538,-1.964967,9.856922,-3.558574,-5.171424,1.166902,7.106966,0.008052,-6.541240,9.257983,-8.993747,-7.091751,-8.787187,-3.904323],[-6.403297,-7.835471,-2.766947,4.993202,-8.743703,-1.074383,-1.059633,4.060296,0.893374,-4.462630,7.338350,-6.004903,-5.831256,7.637951,-7.106709],[3.300059,-2.885967,-6.638566,-9.670780,-0.610244,-2.984255,-9.729152,9.972694,-2.807892,-1.210520,-4.348877,-7.557588,4.500452,0.037837,1.635292],[6.930357,6.212862,3.670705,-3.672598,0.322113,-9.736259,0.941295,0.147054,-8.873237,3.572773,-2.659081,-9.317744,-6.648415,3.272558,-4.450534],[1.390167,1.927395,9.852893,3.100647,8.780957,5.192727,-0.998241,-3.348314,2.652162,4.208588,3.550359,-5.389957,-2.014073,0.758953,-3.992780],[6.228696,6.817546,-2.678269,8.793086,-1.249043,5.314158,-4.804638,-7.450929,9.483677,2.697377,-2.805628,-7.013542,-1.017378,1.875636,9.415733],[4.719504,-0.950129,6.726241,-1.572917,-8.613009,3.102293,-9.938539,2.031486,-6.769192,-4.765103,3.197112,-5.200984,2.531957,-5.826672,1.415947],[-0.726863,-1.485372,2.760600,-4.585081,-6.942464,7.087936,-8.522954,7.515263,-1.040723,-1.580593,7.098494,-5.279217,8.694325,-9.953490,-8.046487],[8.093661,9.649891,4.226035,-7.837608,-9.242455,-4.499503,-4.793531,3.580143,-9.571121,-3.649448,-7.367186,-4.834420,0.803302,-6.987708,-2.596258]]], dtype = "float32")#candidate|2959|(5, 16, 15)|const|float32
uop_2960 = relay.log2(const_2959.astype('float32')) # shape=(5, 16, 15)
func_2142_call = mod.get_global_var('func_2142')
func_2145_call = mutated_mod.get_global_var('func_2145')
const_2996 = relay.const([5.557640,-0.931998,2.922876,-4.378727,-0.349284,5.179871,6.971100,8.544369,9.920636,9.607420,2.492825,5.940316,-8.604833,-0.959592,-0.399125,0.023039,5.015351,3.657165,2.098671,6.740595,0.482175,-6.241126,-1.684204,-1.350158,-4.376806,-4.608496,-1.778962,-2.811946,-1.538051,-1.217812,-2.271350,8.973545,2.976587,-5.776334,-1.997293,8.061819,-1.195739,5.197088,3.032149,-8.136266,8.192723,3.925787,7.940333,-2.473538,6.264621,-0.562093,7.072160,7.966516,5.240673,8.186689,2.397162,6.043785,-1.001162,3.429350,0.102505,-3.630913,-6.569066,-9.089775,6.505863,5.281224,1.071385,-2.872189,9.975215,-4.890273,5.653576,9.454159,-5.420994,1.521912,3.561580,-7.294726,-9.930251,7.425414,4.981198,-8.364804,-7.432300,5.109462,-7.901437,-8.115957,8.009329,-7.097035,-3.014213,-8.314378,-5.317523,-2.337653,-9.680424,-6.780890,7.600318,2.494151,7.810519,4.876840,8.227521,-3.649656,5.544835,-5.567985,9.415619,2.253651,-6.161500,-3.332337,0.041786,-2.453798,2.129685,7.796180,-8.938774,1.500219,-1.006104,9.466411,1.712277,6.516025,9.891547,-9.420643,-9.924885,-0.915125,6.737549,-5.076804,4.919101,-8.230329,3.515572,4.453971,-5.137790,-6.368832,-7.322403,-7.725584,8.298489,-9.492646,1.707167,4.505610,-9.548066,-4.008289,-3.381572,0.060510,2.548926,-9.390300,1.674245,-8.165366,1.456423,-4.235683,2.611846,5.934977,3.899533,7.328095,-7.419128,-0.022487,-2.551691,-9.422569,8.447114,6.455889,3.541991,-5.394762,8.886764,-9.864598,5.840779,-5.235678,-2.854425,5.444469,5.372536,-7.239868,4.270738,1.223822,-7.535214,-9.730099,7.213579,-2.265918,4.332338,1.560053,-3.345280,7.791360,-3.053555,-3.946126,-5.947417], dtype = "float32")#candidate|2996|(169,)|const|float32
call_2995 = relay.TupleGetItem(func_2142_call(relay.reshape(const_2996.astype('float32'), [13, 13]), relay.reshape(const_2996.astype('float32'), [13, 13]), ), 0)
call_2997 = relay.TupleGetItem(func_2145_call(relay.reshape(const_2996.astype('float32'), [13, 13]), relay.reshape(const_2996.astype('float32'), [13, 13]), ), 0)
output = relay.Tuple([uop_2960,call_2995,const_2996,])
output2 = relay.Tuple([uop_2960,call_2997,const_2996,])
func_2998 = relay.Function([], output)
mod['func_2998'] = func_2998
mod = relay.transform.InferType()(mod)
mutated_mod['func_2998'] = func_2998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2998_call = mutated_mod.get_global_var('func_2998')
call_2999 = func_2998_call()
output = call_2999
func_3000 = relay.Function([], output)
mutated_mod['func_3000'] = func_3000
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3096 = relay.var("var_3096", dtype = "float64", shape = (7, 15, 4))#candidate|3096|(7, 15, 4)|var|float64
uop_3097 = relay.erf(var_3096.astype('float64')) # shape=(7, 15, 4)
func_2998_call = mod.get_global_var('func_2998')
func_3000_call = mutated_mod.get_global_var('func_3000')
call_3100 = relay.TupleGetItem(func_2998_call(), 1)
call_3101 = relay.TupleGetItem(func_3000_call(), 1)
uop_3122 = relay.sinh(call_3100.astype('float64')) # shape=(13, 13)
uop_3124 = relay.sinh(call_3101.astype('float64')) # shape=(13, 13)
output = relay.Tuple([uop_3097,uop_3122,])
output2 = relay.Tuple([uop_3097,uop_3124,])
func_3146 = relay.Function([var_3096,], output)
mod['func_3146'] = func_3146
mod = relay.transform.InferType()(mod)
mutated_mod['func_3146'] = func_3146
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3147 = relay.var("var_3147", dtype = "float64", shape = (7, 15, 4))#candidate|3147|(7, 15, 4)|var|float64
func_3146_call = mutated_mod.get_global_var('func_3146')
call_3148 = func_3146_call(var_3147)
output = call_3148
func_3149 = relay.Function([var_3147], output)
mutated_mod['func_3149'] = func_3149
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3151 = relay.const([[[-0.506854,-9.861396,4.919115,1.278811,-5.052212,-5.520211],[-1.551018,-7.735882,-7.113785,1.734510,-8.571090,8.471138],[-3.818071,8.640056,-3.952711,-5.360588,-6.732679,8.240037]],[[9.509134,2.080780,7.652850,1.694718,-3.867313,8.369090],[1.938070,-0.180008,-5.000379,6.009245,-9.597523,-0.290228],[4.107058,-9.358642,4.095191,9.687772,-4.006881,9.179275]],[[-4.666330,-0.254511,-6.320774,4.153870,-9.862442,0.741915],[1.414443,7.088978,4.811415,-9.865128,-6.640159,-2.082607],[2.417091,-0.220085,-4.884997,6.352469,-8.784495,9.724663]],[[7.589788,1.427026,0.642849,-8.122757,2.822073,-4.079047],[9.412271,6.539765,5.443820,-4.236514,9.472447,5.783928],[-6.700668,-1.059326,-5.625451,2.717418,-4.398430,2.148333]],[[8.160700,0.568157,-0.569775,1.678835,-7.945922,0.007568],[-7.035664,-4.958550,1.803562,3.742770,-6.333413,-8.043571],[-8.788369,-5.941952,-0.434905,-8.070586,-7.256263,-0.020983]],[[9.290388,-8.017865,-8.304331,-5.157605,0.378443,-9.119357],[-2.302850,-8.350669,2.235160,5.181342,-2.515544,8.831984],[5.272066,-9.470287,5.495825,-6.530169,-2.602090,-9.341603]],[[1.146357,6.454484,-1.328638,5.107969,-8.173226,9.845510],[-8.278587,3.757903,7.160443,-8.370079,-2.893682,-7.430176],[4.481369,-0.348307,3.381845,8.596864,2.007812,-0.176627]],[[-9.034341,-5.800850,6.763954,5.714540,-1.036328,6.079821],[4.653196,5.375459,-9.295596,9.360120,-2.530646,-2.687376],[-7.382458,-9.754867,-0.684561,9.336145,-2.004155,7.984162]],[[-5.040572,-1.139330,6.896846,-2.053032,8.378320,-1.320051],[5.461656,7.196801,-0.290756,1.886341,1.167996,-9.260896],[-6.582598,6.916836,-8.182576,8.834234,5.830625,2.405410]],[[1.191404,2.971220,6.883456,-7.654974,2.710028,6.534649],[3.545806,-2.466565,-0.747257,7.958470,5.029942,-0.077990],[7.221440,-7.589700,0.907788,-9.463550,8.340248,9.795330]],[[7.595819,5.848669,7.740806,-1.230562,2.074014,-3.117289],[-4.936400,1.515605,-7.053344,2.873913,9.556002,-6.522127],[6.584590,6.618824,-8.365756,-1.863050,-0.660448,-1.434106]],[[-6.995843,0.838983,5.730472,6.818118,5.806218,2.807640],[-5.554378,5.879529,-6.812919,-9.704850,-1.924302,-4.602476],[-9.900688,6.496611,-0.599491,8.572249,-2.511663,6.697892]],[[-6.614713,4.917095,5.114048,2.809190,9.570518,7.081085],[-3.937004,-4.190958,5.738317,7.792434,1.130098,-5.682975],[-0.433074,-4.330973,-8.208386,-8.626186,-2.715943,-6.513163]],[[4.297049,-9.304409,7.397395,-0.918765,4.056831,-2.813668],[-3.826807,2.700663,-1.543201,9.203657,6.839514,-8.977408],[5.598819,-6.853734,-8.926312,3.568736,-8.375059,1.774121]],[[0.939041,5.642439,-9.870749,1.303622,0.658798,-6.780792],[1.876150,-4.993931,5.566659,-3.347411,4.993358,-3.051273],[-6.315983,4.287153,1.814493,-9.894799,5.638774,-3.375435]],[[2.300898,-8.482005,-8.213940,4.376572,-4.955262,-5.016960],[-8.843133,3.740806,7.664479,6.950214,3.862703,-7.347901],[3.303752,-2.606473,-2.053723,-3.277920,-3.543576,-6.767704]]], dtype = "float64")#candidate|3151|(16, 3, 6)|const|float64
uop_3152 = relay.cos(const_3151.astype('float64')) # shape=(16, 3, 6)
func_57_call = mod.get_global_var('func_57')
func_60_call = mutated_mod.get_global_var('func_60')
const_3155 = relay.const([[6.175685,8.535216,-6.214344,5.408202,-1.200280,-2.057121,-3.737410,-3.419427,3.838414,6.114717,-3.147427,-1.182819,-6.078773,8.190265,-5.606556,-2.944879,-1.251117,4.189203,0.477101,-8.948907,-7.927364,-5.594917,-0.683806,6.093964,4.462147,-7.625849,3.629201,1.958549,8.489680,-3.578201,-2.061422,4.286146,-7.458968,7.347859,3.853183,0.122159,-6.358285,1.067702,-3.374938,-9.402629,6.419604,-9.092830,9.853971,7.217271,-7.719503,0.950104,-7.598705,5.688370,5.335610,8.983024,3.037080,-0.350988,-4.347150,-8.317990,-5.139189,0.830538,9.868337,-1.534496,3.947114,2.988843,1.596601,-4.684279,3.632993,-7.023113,-8.957182,-3.920464,-2.534395,4.427885,-9.722518,-6.578127,-6.035176,-4.440035,0.913827,9.432935,-3.742753,-0.204255,5.212944,-3.427885,3.134551,2.654287,-7.820819,9.301606,-1.168119,3.271231,-4.746060,8.972817,3.317727,-4.442782,7.486855,-7.943209,5.675147,4.440100,9.030941,7.406796,7.464125,2.110430,-4.824630,-7.726147,6.012573,6.046025,9.563529,4.187116,6.500764,7.307598,4.369920,-1.295604,6.741357,7.266447,3.275136,5.968754,2.547270,-8.357589,3.899969,-5.883585,5.846086,-3.253827,-6.602087,5.409840,9.232804,-5.405419,-3.633145,7.185535,6.504923,9.778509,-8.330025,2.207795,0.292417,3.164875,-5.298853,2.355974,-6.307731,6.614552,2.921294,-1.510292,5.055840,2.665694,3.304818,7.325047,8.970262,-6.657975,1.518725,6.434209,7.198540,6.683506,-8.537442,1.768915,-4.865197,-2.194837,-7.419750,8.007607,2.131426,2.047226,1.599958,9.403095,1.802204,-7.547916,3.799134,7.264952,9.247467,1.671661,-9.886755,-1.904907,0.910790,-7.571758,2.431617,4.495222,1.835752,9.827981,-6.900360,5.919731,-0.560822,-1.739370,-7.495256,5.813383,0.026780,7.752875,1.954557,-7.196623,-8.025976,-7.616192,-5.519068,4.878507,7.832107,5.644725,5.763648,4.734698,-6.998268,-4.285985,-8.192517,-6.429977,-9.944920,6.770236,0.568655,-1.940760,-7.324178,7.556682,-7.467538,-1.512788,-4.502978,1.775608,4.780867,9.076789,0.544595,-2.642042,6.435922,7.209412,-6.197483,-6.218260,-0.584238,-5.639923,3.824439,-1.309082,-9.905361,5.425415,-5.467945,-0.542778,-3.602212,3.873734,1.906324,4.246169,7.128616,-3.096726,3.877665,8.750868,6.428310,-5.159826,-7.351270,1.721133,-2.037594,4.551734,0.342941,-3.762822,9.541395,6.976076,3.588553,-6.696327,1.321272,-8.515560,0.756259,5.652298,2.282273,9.747471,-0.939070,-7.342719,-5.732050,1.179147,-0.060914,8.631924,8.256066,-1.477239,5.940640,2.924905,-0.752927,5.391577,-1.175459,-4.983098,-7.668360,4.128791,-8.648043,5.726757,5.877420,4.920374,-2.607930,2.169718,8.058848,-3.704259,-7.350320,-9.792848,-1.047959,-0.950714,-0.381397,-0.701256,3.504393,2.984212,-0.967802,-3.474305,3.526081,1.720262,-6.449748,5.689631,-6.227884,-2.358618,-4.234306,9.964237,-2.128199,7.250360,5.001111,5.208854,3.780791,-6.993082,-1.100322,4.778293,-6.754474,6.836890,5.034045,2.354739,1.615412,1.627264,-8.791076,-0.784250,-8.824525,4.977811,0.526461,-7.754089,9.876406,-9.860744,6.098220,3.995318,-7.181656,-7.548039,5.434979,-3.207754,1.599243,-7.279499,-4.298030,-1.127522,-9.026364,-8.642843,1.021008,-2.733064,-1.478485,-0.557018,-8.051030,8.720560,-6.316724,7.823279,3.515515,-2.197948,5.742122,-0.618157,1.048234,-7.445273,-5.954718,-8.320498,-3.217126,-0.985276,5.238405,-7.484918,-6.254701,5.391523,-8.116965,0.722448,-9.933815,-2.167937,-1.120774,1.527779,-0.390820,-7.291126,1.421080,-2.851271,4.415815,-3.913685,5.492845,6.429583,-5.869362,-3.526909,3.673662,2.839277,-4.604235,8.352766,-5.626829,-3.122862,-0.988379,-5.336716,6.950652,5.607768,4.740518,-9.609859,1.524408,5.798612,-5.576717,-3.981425,8.478838,1.090706,2.331880,-2.201563,3.431732,-7.075824,2.631146,2.978077,0.408632,-3.106028,-7.537263,8.876670,-1.614165,-3.151330,7.132281,-1.138410,-0.207960,-7.411852,-1.540904,5.427507,5.266738,7.624348,-0.117471,-5.961006,-8.854082,4.054071,6.323982,-4.603826,9.211362,-0.498214,6.575736,0.643019,-8.042809,1.299912,-5.358024,-5.161371,5.182540,5.573746,2.022107,9.833614,-9.459592,-9.453254,-6.228281,3.505692,5.113761,-5.592540,-0.507961,-7.075380,4.267282,6.133584,7.154449,4.537567,8.379361,-6.406637,-2.762204,-8.484947,-7.763667,-9.711368,0.184342,-7.815334,1.910404,2.879742,-9.680479,-6.702379,-0.308132,-5.576472,-2.593583,-2.298467,-3.029324,-8.258642,-7.370705,0.695124,2.835270,6.382048,9.324760,-7.192443,-8.845654,-5.496607,6.731199,-6.583982,-8.705378,5.568327,7.967256,-3.613281,6.888526,-7.325417,-5.346214,-9.887388,-7.613880,-5.531539,-2.718124,-0.380463,2.422619,6.582746,-0.734118,-6.441116,-7.322090,7.082381,8.679276,2.049265,-4.754473,-2.385884,3.914471,-8.451504,8.510550,8.121426,1.605328,-9.740033,-9.889002,-8.112053,-0.908005,6.033728,-6.357827,-5.283976,0.524860,-6.921475,0.506764,-9.802261,-1.916491,-0.398379,6.272703,4.446187,-8.171680,8.256538,5.397342,3.328357,-6.886986,8.001080,8.619265,-7.185345,0.177753,-9.007784,-8.479159,-8.651047,7.213863,-4.090702,-2.641853,-8.968374,2.683198,-5.731716,2.518396,-1.029496,-5.659855,-2.728777,7.918591,-5.995981,-7.792758,-8.542565,5.197350,2.922278,4.386632,-4.140433,4.404815,-6.257507,-4.364040,3.140835,-2.184995,-2.414492,9.938516,-0.797742,0.588779,-5.356220,3.776643,-3.819846,1.530934,-3.269256,8.203977,-8.711977,2.204002,-1.327452,9.137356,5.367192,9.330183,1.562297,-1.153984,-9.841579,-3.798469,3.846863,0.533220,2.438401,6.030256,7.667884,-7.488176,3.835680,3.323237,4.217771,-3.537176,-8.443279,-5.718727,-5.494084,-1.460958,2.739553,9.476597,-6.098317,-1.273399,5.998528,5.671441,4.590475,7.072966,6.839096,-4.299452,9.772027,4.613846,-3.975502,8.219835,6.599314,5.801312,2.728484,9.017737,3.881438,2.184387,-9.383880,-0.367893,-5.485955,-7.288033,-7.199334,-5.818324,0.009530,8.833159,-3.772786,3.230892,-1.596855,-9.136339,3.838539,-0.668720,1.487789,-6.588698,-8.877078,9.791093,-8.586445,5.504201,-4.565087,-0.291996,0.343804,-4.749828,4.061356,6.685283,-5.596018,0.433469,-6.432851,5.997905,1.364994,9.203362,-6.351693,-2.179949,-1.030734,4.564337,8.257242,6.102313,5.003458,-7.879961,8.286570,7.184603,0.931556,0.066430,-8.466584,-0.369408,-9.832926,3.840664,-8.133822,7.416584,8.288501,-4.845126,0.809537,-1.846751,9.278112,1.559654,-1.866388,-8.068244,8.952375,8.673346,-8.975071,3.249547,5.070227,2.331502,-6.442221,1.728883,7.119030,-3.375216,4.740619,-0.237653,-7.746987,8.005964,-8.031283,-7.031248,3.244041,5.117925,0.655038,7.236332,8.854371,1.149362,3.152036,-2.027885,-6.529403,3.553116,9.076434,-4.959966,3.581148,-7.840641,9.462244,9.409722,0.789730,7.065720,1.005253,0.014245,5.587664,-0.438442,2.969485,-4.270596,-5.741033,2.345329,9.896240,5.119845,2.626750,-5.346834,-7.470498,-6.350199,-0.574117,9.035335,-0.605596,-6.203074,3.692868,-0.793520,3.853692,-4.977803,1.435843,3.747998,6.343839,8.249267,8.624126,7.257141,-0.332589,4.974829,3.604687,-4.765471,2.475971,-0.313954,-1.451316,-9.026013,1.291540,2.917609,-3.765863,6.789536,1.553653,4.386503,-5.810276,-9.204957,-1.953711]], dtype = "float32")#candidate|3155|(1, 720)|const|float32
call_3154 = func_57_call(relay.reshape(const_3155.astype('float32'), [16, 5, 9]))
call_3156 = func_57_call(relay.reshape(const_3155.astype('float32'), [16, 5, 9]))
output = relay.Tuple([uop_3152,call_3154,const_3155,])
output2 = relay.Tuple([uop_3152,call_3156,const_3155,])
func_3160 = relay.Function([], output)
mod['func_3160'] = func_3160
mod = relay.transform.InferType()(mod)
mutated_mod['func_3160'] = func_3160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3160_call = mutated_mod.get_global_var('func_3160')
call_3161 = func_3160_call()
output = call_3161
func_3162 = relay.Function([], output)
mutated_mod['func_3162'] = func_3162
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3163 = relay.var("var_3163", dtype = "float64", shape = (11, 5, 2))#candidate|3163|(11, 5, 2)|var|float64
var_3164 = relay.var("var_3164", dtype = "float64", shape = (11, 5, 2))#candidate|3164|(11, 5, 2)|var|float64
bop_3165 = relay.floor_divide(var_3163.astype('float64'), relay.reshape(var_3164.astype('float64'), relay.shape_of(var_3163))) # shape=(11, 5, 2)
output = relay.Tuple([bop_3165,])
output2 = relay.Tuple([bop_3165,])
func_3171 = relay.Function([var_3163,var_3164,], output)
mod['func_3171'] = func_3171
mod = relay.transform.InferType()(mod)
var_3172 = relay.var("var_3172", dtype = "float64", shape = (11, 5, 2))#candidate|3172|(11, 5, 2)|var|float64
var_3173 = relay.var("var_3173", dtype = "float64", shape = (11, 5, 2))#candidate|3173|(11, 5, 2)|var|float64
output = func_3171(var_3172,var_3173,)
func_3174 = relay.Function([var_3172,var_3173,], output)
mutated_mod['func_3174'] = func_3174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2801_call = mod.get_global_var('func_2801')
func_2802_call = mutated_mod.get_global_var('func_2802')
call_3176 = func_2801_call()
call_3177 = func_2801_call()
output = call_3176
output2 = call_3177
func_3180 = relay.Function([], output)
mod['func_3180'] = func_3180
mod = relay.transform.InferType()(mod)
mutated_mod['func_3180'] = func_3180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3180_call = mutated_mod.get_global_var('func_3180')
call_3181 = func_3180_call()
output = call_3181
func_3182 = relay.Function([], output)
mutated_mod['func_3182'] = func_3182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3180_call = mod.get_global_var('func_3180')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_3187 = func_3180_call()
call_3188 = func_3180_call()
output = relay.Tuple([call_3187,])
output2 = relay.Tuple([call_3188,])
func_3189 = relay.Function([], output)
mod['func_3189'] = func_3189
mod = relay.transform.InferType()(mod)
output = func_3189()
func_3190 = relay.Function([], output)
mutated_mod['func_3190'] = func_3190
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3193 = relay.var("var_3193", dtype = "int64", shape = (5, 16, 1))#candidate|3193|(5, 16, 1)|var|int64
var_3194 = relay.var("var_3194", dtype = "int64", shape = (5, 16, 13))#candidate|3194|(5, 16, 13)|var|int64
bop_3195 = relay.less(var_3193.astype('bool'), var_3194.astype('bool')) # shape=(5, 16, 13)
bop_3198 = relay.less_equal(var_3193.astype('bool'), bop_3195.astype('bool')) # shape=(5, 16, 13)
output = relay.Tuple([bop_3198,])
output2 = relay.Tuple([bop_3198,])
func_3204 = relay.Function([var_3193,var_3194,], output)
mod['func_3204'] = func_3204
mod = relay.transform.InferType()(mod)
var_3205 = relay.var("var_3205", dtype = "int64", shape = (5, 16, 1))#candidate|3205|(5, 16, 1)|var|int64
var_3206 = relay.var("var_3206", dtype = "int64", shape = (5, 16, 13))#candidate|3206|(5, 16, 13)|var|int64
output = func_3204(var_3205,var_3206,)
func_3207 = relay.Function([var_3205,var_3206,], output)
mutated_mod['func_3207'] = func_3207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3189_call = mod.get_global_var('func_3189')
func_3190_call = mutated_mod.get_global_var('func_3190')
call_3337 = relay.TupleGetItem(func_3189_call(), 0)
call_3338 = relay.TupleGetItem(func_3190_call(), 0)
output = call_3337
output2 = call_3338
func_3343 = relay.Function([], output)
mod['func_3343'] = func_3343
mod = relay.transform.InferType()(mod)
mutated_mod['func_3343'] = func_3343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3343_call = mutated_mod.get_global_var('func_3343')
call_3344 = func_3343_call()
output = call_3344
func_3345 = relay.Function([], output)
mutated_mod['func_3345'] = func_3345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2559_call = mod.get_global_var('func_2559')
func_2561_call = mutated_mod.get_global_var('func_2561')
call_3372 = relay.TupleGetItem(func_2559_call(), 0)
call_3373 = relay.TupleGetItem(func_2561_call(), 0)
output = call_3372
output2 = call_3373
func_3383 = relay.Function([], output)
mod['func_3383'] = func_3383
mod = relay.transform.InferType()(mod)
mutated_mod['func_3383'] = func_3383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3383_call = mutated_mod.get_global_var('func_3383')
call_3384 = func_3383_call()
output = call_3384
func_3385 = relay.Function([], output)
mutated_mod['func_3385'] = func_3385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2950_call = mod.get_global_var('func_2950')
func_2951_call = mutated_mod.get_global_var('func_2951')
call_3401 = func_2950_call()
call_3402 = func_2950_call()
output = call_3401
output2 = call_3402
func_3415 = relay.Function([], output)
mod['func_3415'] = func_3415
mod = relay.transform.InferType()(mod)
mutated_mod['func_3415'] = func_3415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3415_call = mutated_mod.get_global_var('func_3415')
call_3416 = func_3415_call()
output = call_3416
func_3417 = relay.Function([], output)
mutated_mod['func_3417'] = func_3417
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3444 = relay.var("var_3444", dtype = "int64", shape = (16, 3, 3))#candidate|3444|(16, 3, 3)|var|int64
var_3445 = relay.var("var_3445", dtype = "int64", shape = (16, 3, 3))#candidate|3445|(16, 3, 3)|var|int64
bop_3446 = relay.less(var_3444.astype('bool'), relay.reshape(var_3445.astype('bool'), relay.shape_of(var_3444))) # shape=(16, 3, 3)
output = bop_3446
output2 = bop_3446
func_3464 = relay.Function([var_3444,var_3445,], output)
mod['func_3464'] = func_3464
mod = relay.transform.InferType()(mod)
mutated_mod['func_3464'] = func_3464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3464_call = mutated_mod.get_global_var('func_3464')
var_3466 = relay.var("var_3466", dtype = "int64", shape = (16, 3, 3))#candidate|3466|(16, 3, 3)|var|int64
var_3467 = relay.var("var_3467", dtype = "int64", shape = (16, 3, 3))#candidate|3467|(16, 3, 3)|var|int64
call_3465 = func_3464_call(var_3466,var_3467,)
output = call_3465
func_3468 = relay.Function([var_3466,var_3467,], output)
mutated_mod['func_3468'] = func_3468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2403_call = mod.get_global_var('func_2403')
func_2404_call = mutated_mod.get_global_var('func_2404')
call_3481 = relay.TupleGetItem(func_2403_call(), 0)
call_3482 = relay.TupleGetItem(func_2404_call(), 0)
output = call_3481
output2 = call_3482
func_3484 = relay.Function([], output)
mod['func_3484'] = func_3484
mod = relay.transform.InferType()(mod)
mutated_mod['func_3484'] = func_3484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3484_call = mutated_mod.get_global_var('func_3484')
call_3485 = func_3484_call()
output = call_3485
func_3486 = relay.Function([], output)
mutated_mod['func_3486'] = func_3486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3343_call = mod.get_global_var('func_3343')
func_3345_call = mutated_mod.get_global_var('func_3345')
call_3534 = func_3343_call()
call_3535 = func_3343_call()
output = call_3534
output2 = call_3535
func_3546 = relay.Function([], output)
mod['func_3546'] = func_3546
mod = relay.transform.InferType()(mod)
output = func_3546()
func_3547 = relay.Function([], output)
mutated_mod['func_3547'] = func_3547
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3600 = relay.var("var_3600", dtype = "float64", shape = (5, 7, 2))#candidate|3600|(5, 7, 2)|var|float64
uop_3601 = relay.acosh(var_3600.astype('float64')) # shape=(5, 7, 2)
output = uop_3601
output2 = uop_3601
func_3618 = relay.Function([var_3600,], output)
mod['func_3618'] = func_3618
mod = relay.transform.InferType()(mod)
mutated_mod['func_3618'] = func_3618
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3619 = relay.var("var_3619", dtype = "float64", shape = (5, 7, 2))#candidate|3619|(5, 7, 2)|var|float64
func_3618_call = mutated_mod.get_global_var('func_3618')
call_3620 = func_3618_call(var_3619)
output = call_3620
func_3621 = relay.Function([var_3619], output)
mutated_mod['func_3621'] = func_3621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3180_call = mod.get_global_var('func_3180')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_3661 = func_3180_call()
call_3662 = func_3180_call()
output = relay.Tuple([call_3661,])
output2 = relay.Tuple([call_3662,])
func_3663 = relay.Function([], output)
mod['func_3663'] = func_3663
mod = relay.transform.InferType()(mod)
mutated_mod['func_3663'] = func_3663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3663_call = mutated_mod.get_global_var('func_3663')
call_3664 = func_3663_call()
output = call_3664
func_3665 = relay.Function([], output)
mutated_mod['func_3665'] = func_3665
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3717 = relay.var("var_3717", dtype = "uint32", shape = (9, 4, 6))#candidate|3717|(9, 4, 6)|var|uint32
const_3718 = relay.const([[[10,-8,10,-9,-3,4],[1,-9,6,-1,7,-5],[-2,4,7,3,10,4],[-9,8,8,-6,-3,-9]],[[-10,-9,6,2,9,6],[-6,3,10,5,-2,3],[-4,-10,4,7,10,1],[-1,6,10,4,-10,-3]],[[6,-2,-2,8,-6,2],[-10,3,4,5,-8,-3],[-10,-6,6,1,-9,10],[-1,-7,1,-6,8,-8]],[[-3,8,-4,10,10,6],[-7,-9,1,-8,-2,-7],[6,-1,-3,7,-3,-7],[-5,-3,-7,2,6,-10]],[[3,-7,-5,-7,2,-5],[8,-10,6,8,-8,-8],[-9,-9,-2,-2,-9,9],[5,-6,3,-1,5,1]],[[-3,-5,-9,-6,-3,-3],[-3,9,4,-9,3,8],[-9,8,2,-7,8,6],[5,6,-4,-1,6,3]],[[10,-10,9,1,-9,-4],[-6,-8,5,2,3,-5],[8,7,8,5,4,-10],[-5,5,-10,7,-1,2]],[[8,-3,-3,1,6,7],[-8,3,8,-6,-6,9],[9,-4,2,6,2,-4],[-10,8,10,4,-10,9]],[[10,-2,-6,2,10,6],[2,3,-3,-10,-1,3],[-8,9,-3,7,-6,10],[4,7,-8,6,-7,7]]], dtype = "uint32")#candidate|3718|(9, 4, 6)|const|uint32
bop_3719 = relay.less(var_3717.astype('bool'), relay.reshape(const_3718.astype('bool'), relay.shape_of(var_3717))) # shape=(9, 4, 6)
func_3546_call = mod.get_global_var('func_3546')
func_3547_call = mutated_mod.get_global_var('func_3547')
call_3726 = func_3546_call()
call_3727 = func_3546_call()
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_3735 = relay.TupleGetItem(func_2502_call(), 0)
call_3736 = relay.TupleGetItem(func_2503_call(), 0)
output = relay.Tuple([bop_3719,call_3726,call_3735,])
output2 = relay.Tuple([bop_3719,call_3727,call_3736,])
func_3737 = relay.Function([var_3717,], output)
mod['func_3737'] = func_3737
mod = relay.transform.InferType()(mod)
mutated_mod['func_3737'] = func_3737
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3738 = relay.var("var_3738", dtype = "uint32", shape = (9, 4, 6))#candidate|3738|(9, 4, 6)|var|uint32
func_3737_call = mutated_mod.get_global_var('func_3737')
call_3739 = func_3737_call(var_3738)
output = call_3739
func_3740 = relay.Function([var_3738], output)
mutated_mod['func_3740'] = func_3740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2828_call = mod.get_global_var('func_2828')
func_2829_call = mutated_mod.get_global_var('func_2829')
call_3761 = relay.TupleGetItem(func_2828_call(), 2)
call_3762 = relay.TupleGetItem(func_2829_call(), 2)
func_3383_call = mod.get_global_var('func_3383')
func_3385_call = mutated_mod.get_global_var('func_3385')
call_3779 = func_3383_call()
call_3780 = func_3383_call()
uop_3786 = relay.tan(call_3779.astype('float32')) # shape=(14, 5, 4)
uop_3788 = relay.tan(call_3780.astype('float32')) # shape=(14, 5, 4)
bop_3797 = relay.bitwise_or(uop_3786.astype('int8'), relay.reshape(call_3761.astype('int8'), relay.shape_of(uop_3786))) # shape=(14, 5, 4)
bop_3800 = relay.bitwise_or(uop_3788.astype('int8'), relay.reshape(call_3762.astype('int8'), relay.shape_of(uop_3788))) # shape=(14, 5, 4)
func_3383_call = mod.get_global_var('func_3383')
func_3385_call = mutated_mod.get_global_var('func_3385')
call_3807 = func_3383_call()
call_3808 = func_3383_call()
func_2464_call = mod.get_global_var('func_2464')
func_2466_call = mutated_mod.get_global_var('func_2466')
call_3815 = func_2464_call()
call_3816 = func_2464_call()
func_3464_call = mod.get_global_var('func_3464')
func_3468_call = mutated_mod.get_global_var('func_3468')
const_3827 = relay.const([2,4,-8,-3,-1,-1,10,10,-7,-6,10,-6,-3,7,3,-7,-9,-8,8,-5,-6,3,-4,1,-10,6,1,10,-9,3,-2,10,-1,-10,2,7,4,4,-3,-1,4,-4,1,10,-10,5,5,-7,4,5,-5,-3,-4,-6,6,9,-7,6,8,8,-10,2,-8,2,-6,-7,-1,9,1,-10,5,6,6,-9,-7,2,10,1,-3,-10,-9,-10,-9,-6,6,-7,7,2,5,-8,8,2,-4,-4,7,7,-10,6,10,2,-10,-5,-4,2,8,-4,10,4,10,-4,-1,2,-2,3,-2,5,5,9,-9,-9,-3,-3,8,8,5,-4,4,2,-4,-5,-1,6,-10,-3,8,-8,-4,3,-8,1,-4,2,1,-2], dtype = "int64")#candidate|3827|(144,)|const|int64
call_3826 = func_3464_call(relay.reshape(const_3827.astype('int64'), [16, 3, 3]), relay.reshape(const_3827.astype('int64'), [16, 3, 3]), )
call_3828 = func_3464_call(relay.reshape(const_3827.astype('int64'), [16, 3, 3]), relay.reshape(const_3827.astype('int64'), [16, 3, 3]), )
func_1995_call = mod.get_global_var('func_1995')
func_2001_call = mutated_mod.get_global_var('func_2001')
var_3836 = relay.var("var_3836", dtype = "float64", shape = (72,))#candidate|3836|(72,)|var|float64
const_3837 = relay.const([[3.222272,7.354740],[9.690026,2.346546],[-7.232819,1.810175],[4.399163,-1.596986],[-7.191423,-0.296746],[6.944053,7.041018],[8.419350,1.466610],[-3.154889,0.797710],[8.739130,-5.045692],[-5.050034,-0.777457],[2.508352,-8.523450],[3.943241,-5.356631],[-8.311327,-5.850876],[4.584196,4.074512],[-6.167645,-1.437814],[6.128621,-7.029891],[-0.097995,4.092564],[-0.304304,2.412796],[3.583382,1.174861],[-7.526767,8.208290],[-8.114142,9.517306],[8.428519,-1.839099],[3.161756,-8.040891],[-1.705728,0.675607],[-9.117817,7.070856],[-4.811017,-1.936123],[-7.173560,0.065569],[3.138445,-1.101777],[-9.851921,2.796416],[-6.039876,6.235745],[-5.480676,-7.324411],[-5.474664,-0.306072],[-8.479078,4.031303],[-7.647123,3.591149],[9.096774,-0.756665],[1.454039,-8.184343],[-2.031782,4.185691],[1.506816,-3.061589],[-1.850609,7.975335],[-2.233473,3.710460],[9.569728,-3.013370],[0.410224,7.498171],[-3.178114,5.930361],[-4.826696,3.828450],[-4.300542,7.680879],[2.220944,2.962740],[-3.012774,-0.245961],[-3.312045,9.863850],[-0.944094,-1.274563],[4.192473,8.597821],[5.348229,0.986872],[-3.765050,-2.744699],[5.502587,7.609928],[3.988376,6.593167],[1.448543,-6.918686],[5.459381,5.103575],[0.973224,3.671791],[6.740553,-6.657454],[-9.265070,-7.937860],[-6.965287,2.004468],[-9.367928,-4.597229],[7.370299,6.861331],[7.693995,5.090149],[-2.750700,6.924392],[-3.565363,-4.585473],[2.949416,-6.445546],[0.745397,-9.009552],[1.790370,3.361466],[-5.641535,4.948315],[6.933965,-8.339729],[-5.722487,-9.410866],[7.154484,5.999657],[-8.234092,5.309838],[-5.781992,7.356892],[8.896188,-1.299483],[4.017510,-1.282644],[8.708944,-8.247079],[9.545419,-9.351424],[-6.406026,-3.468689],[-1.602896,4.759657],[9.907537,-6.079417],[-2.040053,3.788267],[7.793775,-1.888285],[-5.121466,7.294091],[-1.170860,-1.298264],[-1.343715,0.356366],[4.134520,-9.719097],[1.292041,4.932671],[6.559288,9.797104],[7.964218,6.098731],[-7.270942,-8.507946],[-1.142803,-5.905372],[5.723860,-4.495451],[6.782182,-6.460546],[8.837460,-3.758319],[-6.035794,-4.901095],[8.183161,8.905588],[-0.304146,-7.954705],[-1.504878,9.649852],[-9.293606,5.369604],[1.591151,7.426527],[5.396837,4.598447],[4.812450,-9.312633],[2.681399,4.459076],[-2.704443,-0.500420],[9.846585,6.585280],[5.039200,-5.797842],[-6.379183,8.948919],[-1.264655,6.361913],[-2.967352,-6.821133],[-4.121784,8.667776],[4.674811,0.952950],[5.896944,8.708107],[-4.140414,-3.399906],[4.675875,9.153410],[-3.012533,0.245978],[7.248476,-3.539436],[-5.892366,3.604095],[2.532555,-9.046672],[9.379368,-4.636402],[4.563458,2.763741],[-9.700442,7.293983],[3.203321,-0.937295],[4.564906,-8.958559],[-8.963736,-6.302455],[3.355279,6.333847],[-3.917351,-0.362664],[7.038497,-1.955672],[-8.667365,-8.472075],[5.517953,-4.642255],[-0.621548,-9.207727],[9.893843,6.637557],[-7.680508,-4.591969],[0.948947,-6.704287],[8.924073,-9.294845],[-8.046732,-9.609753],[-3.850134,4.180400],[-8.313168,-2.712686],[-9.938969,8.698674],[7.571217,9.351176],[-7.186588,-5.306343],[-1.745748,-9.838945],[7.108822,-1.553318],[2.243191,-0.699548],[-6.769611,-1.555536],[6.043446,8.329770],[0.242683,5.798445],[4.831483,-5.961465],[-6.846886,-4.615586],[-5.402979,3.920713],[6.465710,1.452592],[-2.749707,-7.648414],[0.178094,9.190272],[-9.077078,5.921533],[3.855815,-5.971752],[0.338827,5.552925],[1.946853,-6.315252],[-0.750252,3.355442],[-3.673916,-5.007342],[-5.503987,1.199479],[8.184915,2.576846],[0.656443,-6.849074],[4.763527,-8.055911],[4.895098,9.111789],[4.417833,-7.466075],[3.534701,1.141080],[-7.474615,-2.327343],[-2.763218,3.101866],[-2.404381,7.235999],[7.711670,1.393156],[3.608645,3.680479],[0.697231,6.346909],[7.970699,-6.102675],[-8.052577,-0.950218],[7.168663,8.547595],[-7.710693,-5.850486],[7.421123,-7.060249],[5.594869,-8.219274],[5.646046,6.845905],[-8.983887,9.643445],[9.731027,-3.107986],[9.562695,-0.032890],[0.256872,5.158481],[-7.072476,-3.675008],[4.399200,-0.605058],[-8.166146,5.190209],[1.743168,-5.153401],[-4.801759,2.983436],[0.386584,8.989927],[-3.641952,-7.330841],[3.393112,0.578334],[8.158229,-6.236260],[-5.143232,1.554459],[5.417696,2.314238],[0.278205,-4.606868],[0.787860,9.755199],[2.855008,-5.518608],[1.084379,8.446475],[-8.115161,-5.965582],[-3.513676,-6.618466],[-3.586992,-9.147978],[1.957818,-1.589861],[1.059814,-1.540592],[-4.939373,-4.110204],[-3.906008,3.297713],[2.946777,-3.066350],[0.423217,5.980059],[5.077499,-3.418221],[8.636828,0.077089],[-8.910525,7.613172],[-3.097337,0.795436],[-8.788861,-9.912430],[-2.683619,-9.010684],[-1.770307,2.163221],[9.879896,-6.019571],[-2.637758,-8.775529],[9.036070,-2.901878],[4.781089,8.831712],[2.751141,-7.396519],[-3.321914,-0.382467],[-3.128457,-7.510489],[-2.679826,-9.866677],[-0.559216,-5.299064],[-8.732685,-6.803997],[3.043707,9.238647],[3.730968,-4.341850],[2.412781,-6.861244],[-8.391103,-0.237912],[6.873283,3.505812],[-9.047726,3.190226],[-3.186271,-9.230255],[5.997075,-1.169547],[6.815044,7.055156],[4.577718,-2.729922],[3.169965,-6.378865],[7.635489,-5.327291],[-8.380685,-0.676331],[-9.810202,1.156508],[-3.709892,2.166918],[0.216197,-1.125588],[8.715739,9.781462],[2.580262,-3.614564],[-5.078244,-1.978523],[3.275642,-9.540943],[5.245992,6.322164],[-8.225623,-6.237352],[-8.290615,-1.886015],[-7.207723,-5.448236],[6.310841,-1.366701],[1.203862,9.708678],[8.452838,-6.633220],[-7.773131,-0.110259]], dtype = "float64")#candidate|3837|(252, 2)|const|float64
const_3838 = relay.const([-3,5,-1,-3,-9,3,3,-9,-1,-4,-6,-9,10,9,-1,6,-5,-9,9,1,6,-8,-2,-1,-6,7,3,-2,5,7,-10,-7,5,-3,7,-4,10,5,-1,-6,-1,-10,2,-9,1,-1,8,8,-6,-10,7,-10,-8,-10,1,-5,-10,9,6,8,-4,10,1,-7,-9,1,-3,-2,6,-9,9,-1,10,2,8,3,1,5,-1,8,-1,5,-10,6,-10,-2,10,7,-3,-6,-1,4,2,3,-2,-3,-1,-9,-9,6,-2,8,4,-4,6,-10,6,-8,-3,-4,-3,-8,-9,-5,1,-8,2,7,-1,4,8,2,-8,-4,1,-8,7,1,2,-2,9,-8,-6,-8,-3,-4,-6,6,-7,5,-10,-6,-8,3,-5,4,7,-9,-6,-1,7,1,2,-7,10,8,-6,9,3,5,8,-4,-1,9,-7,-6,6,8,-5,-8,9,-4,-10,1,4,-1,-5,-9,-7,-6,1,-1,-1,4,5,10,-7,9,7,3,5,-6,-1,7,-5,4,-4,4,3,-1,1,-2,-8,-8,-10,6,6,-6,-9,7,-5,-10,6,-6,4,-7,9,-3,-2,-1,1,10,1,6,-8,-4,4,3,9,-8,7,6,-7,-4,-10,-3,-4,10,-6,7,-1,-8,6,4,-9,8,10,-3,-3,-5,-3,3,1,5,2,-1,5,-8,1,8,-4,7,8,-10,8,-3,-6,-8,-2,4,9,4,7,6,-4,7,9,-2,5,-10,-9,-3,9,-2,8,-4,-1,10,-2,5,9,4,7,6,7,-8,1,1,-5,-3,-9,8,5,8,-4,-1,-7,2,-10,8,8,-4,-7,9,10,-5,-6,8,10,-1,1,9,9,-1,-4,6,5,9,9,-6,-1,-7,-3,-10,-3,7,-5,1,10,10,-1,5,10,-9,-3,5,5,1,-9,1,2,-5,6,8,7,9,-8,-5,-8,5,-1,-5,6,-6,-7,-6,-7,-7,-8,1,6,-5,-4,-3,7,4,-2,-6,-7,1,7,4,-10,-9,5,-4,-9,5,9,6,6,6,10,-4,2,10,5,-5,2,-3,-1,-8,-8,-4,9,-5,-9,-2,-10,-6,4,-2,-8,5,-1,7,-5,-4,5,10,-7,10,-5,-5,-1,-5,-6,5,4,-6,-8,8,-7,8,10,8,4,-5,10,-4,-2,-7,6,2,4,8,10,-7,8,-1,-7,8,-4,-2,3,-7,-5,-3,6,2,5,2,-5,2,-8,6,1,9,-6,-2,-5,6,-1,2,4,7,-3,7,-10,3,-2,-3,2,-10,3,9,-1,9,-4,1,-2,-9,9,-4,5,-7,6,-1,2,-9,3,2,-5,-8,-1,-6,9,-9,-3,7,2,-6,6,9,1,4,9,10,8,-10,-6,1,6,-4,-4,-7,-7,-5,10,-2,3,5,-3,-4,2,9,4,3,-1,-9,8,-9,8,-7,-7,9,6,-2,8,1,3,10,-1,9,10,8,5,2,-3,-4,-1,-2,9,-7,3,-9,-9,6,-1,-3,-5,8,10,5,-10,-6,4,-7,6,-9,3,5,-8,3,8,-8,-9,-4,6,-2,8,7,-8,4,10,2,5,5,-10,1,-4,-10,-7,2,4,10,-4,8,5,5,-9,-1,4,-6,-4,-10,-9,-3,-7,-10,1,-6,10,6,-6,-1,5,7,-7,2,3,-2,-6,-9,-2,-3,10,7,-3,-3,1,4,-3,-5,-8,-4,3,-3,2,2,-10,6,-6,8,-5,8,7,2,-5,-2,8,-1,-1,1,-6,-7,10,6,6,7,9,7,-9,5,10,4,1,-10,-2,6,-4,6,-6,-9,-10,-4,-4,-2,2,5,-3,1,-6,6,1,-10,5,-8,2,-3,-6,1,10,10,-1,5,6,9,6,-4,7,2,1,5,9,-6,-7,-4,-10,-2,-3,-4,2,3,-1,2,10,-2,-4,-4,6,-8,7,-3,-10,8,1,-10,-7,10,-1,-6,6,4,6,3,-8,-5,4,-3,-3,6,5,7,-3,10,9,5,-7,-5,6,4,-10,-10,7,1,-6,-3,6,-5,-7,1,4,-1,-4,3,-6,-6,8,-3,1,6,-2,8,-9,5,7,-1,-3,-1,7,-6,3,-9,8,-5,-5,-8,-9,5,9,-3,-7,9,-5,6,6,-6,4,7,7,-2,-2,1,7,9,-7,6,5,3,-8,3,-3,-5,4,2,4,8,-6,-7,-7,3,-9,8,-6,5,2,-10,-8,-5,-6,8,2,-8,-4,-3,1,5,-5,-3,7,-5,-7,5,9,-10,8,-7,-3,-9,7,-10,-8,-8,9,1,1,-5,2,-4,4,8,-1,10,-7,10,1,-4,-4,-1,6,-1,10,5,-9,-3,-4,-3,-5,6,-4,-5,4,-5,2,5,9,-4,3,-1,10,-5,6,-7,3,-2,-10,5,6,4,5,5,7,-3,1,-5,9,-5,-8,-5,-6,1,3,9,5,9,-5,5,6,-2,-1,7,-7,-6,-5,-7,9,-6,-3,4,-10,-9,9,-7,-2,-3,-6,-5,-5,9,4,-10,5,7,-2,-7,6,-7,9,-2,-5,-6,-7,5,1,-1,-3,8,-8,-7,6,3,1,8,6,-3,-7,3,7,6,-3,3,-10,3,5,-8,-5,4,-3,-7,2,-9,6,-3,-9,3,9,-5,8,-9,-7,8,10,-7,4,-9,4,7,9,5,2,9,5,-10,-1,9,-6,1,1,-8,-3,-5,-6,-7,4,-2,-1,8,4,-2,-7,-4,-10,-10,2,-7,-4,2,-5,-4,10,-7,-6,8,5,4,2,6,2,2,3,-10,4,-4,8,9,-5,-2,3,10,9,1,-3,-3,4,-10,9,-1,-10,9,6,-10,4,9,-2,-5,-2,-2,5,9,-5,6,9,-4,-4,-8,2,-1,-10], dtype = "int32")#candidate|3838|(1089,)|const|int32
var_3839 = relay.var("var_3839", dtype = "uint8", shape = (1600,))#candidate|3839|(1600,)|var|uint8
call_3835 = relay.TupleGetItem(func_1995_call(relay.reshape(var_3836.astype('float64'), [1, 12, 6]), relay.reshape(const_3837.astype('float64'), [7, 12, 6]), relay.reshape(const_3838.astype('int32'), [1089,]), relay.reshape(var_3839.astype('uint8'), [1600,]), ), 6)
call_3840 = relay.TupleGetItem(func_2001_call(relay.reshape(var_3836.astype('float64'), [1, 12, 6]), relay.reshape(const_3837.astype('float64'), [7, 12, 6]), relay.reshape(const_3838.astype('int32'), [1089,]), relay.reshape(var_3839.astype('uint8'), [1600,]), ), 6)
func_3737_call = mod.get_global_var('func_3737')
func_3740_call = mutated_mod.get_global_var('func_3740')
var_3844 = relay.var("var_3844", dtype = "uint32", shape = (216,))#candidate|3844|(216,)|var|uint32
call_3843 = relay.TupleGetItem(func_3737_call(relay.reshape(var_3844.astype('uint32'), [9, 4, 6])), 1)
call_3845 = relay.TupleGetItem(func_3740_call(relay.reshape(var_3844.astype('uint32'), [9, 4, 6])), 1)
uop_3850 = relay.log10(call_3835.astype('float32')) # shape=(11, 12, 5)
uop_3852 = relay.log10(call_3840.astype('float32')) # shape=(11, 12, 5)
bop_3855 = relay.bitwise_and(uop_3850.astype('int64'), relay.reshape(call_3835.astype('int64'), relay.shape_of(uop_3850))) # shape=(11, 12, 5)
bop_3858 = relay.bitwise_and(uop_3852.astype('int64'), relay.reshape(call_3840.astype('int64'), relay.shape_of(uop_3852))) # shape=(11, 12, 5)
output = relay.Tuple([bop_3797,call_3807,call_3815,call_3826,const_3827,var_3836,const_3837,const_3838,var_3839,call_3843,var_3844,bop_3855,])
output2 = relay.Tuple([bop_3800,call_3808,call_3816,call_3828,const_3827,var_3836,const_3837,const_3838,var_3839,call_3845,var_3844,bop_3858,])
func_3862 = relay.Function([var_3836,var_3839,var_3844,], output)
mod['func_3862'] = func_3862
mod = relay.transform.InferType()(mod)
var_3863 = relay.var("var_3863", dtype = "float64", shape = (72,))#candidate|3863|(72,)|var|float64
var_3864 = relay.var("var_3864", dtype = "uint8", shape = (1600,))#candidate|3864|(1600,)|var|uint8
var_3865 = relay.var("var_3865", dtype = "uint32", shape = (216,))#candidate|3865|(216,)|var|uint32
output = func_3862(var_3863,var_3864,var_3865,)
func_3866 = relay.Function([var_3863,var_3864,var_3865,], output)
mutated_mod['func_3866'] = func_3866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3189_call = mod.get_global_var('func_3189')
func_3190_call = mutated_mod.get_global_var('func_3190')
call_3868 = relay.TupleGetItem(func_3189_call(), 0)
call_3869 = relay.TupleGetItem(func_3190_call(), 0)
func_3862_call = mod.get_global_var('func_3862')
func_3866_call = mutated_mod.get_global_var('func_3866')
var_3871 = relay.var("var_3871", dtype = "float64", shape = (72,))#candidate|3871|(72,)|var|float64
const_3872 = relay.const([6,10,5,9,5,-3,-8,9,1,10,-10,6,-8,8,-10,4,-6,8,-4,-1,4,9,7,7,-10,7,10,2,10,3,-8,-6,3,-8,-2,5,5,7,-4,1,-3,-3,-2,10,-4,-1,-4,-9,-2,4,-5,9,-3,-3,-3,10,-3,-9,-6,6,-4,4,-8,4,9,-6,-7,6,3,8,4,-4,-8,1,-1,-6,5,-2,-5,3,-4,-10,-3,-2,8,4,7,10,-10,3,-7,6,-1,5,5,-9,6,-2,8,7,6,-9,-1,8,9,3,-2,-7,1,6,7,-7,-5,-2,-4,10,-2,1,-9,5,2,-1,8,7,8,-5,9,10,10,-10,2,-4,-10,-8,-6,4,-2,4,4,9,-5,9,-8,-1,-2,5,-2,10,4,2,2,1,2,6,-7,8,-1,7,7,-2,-10,4,-5,-5,-6,-2,4,4,9,3,-5,9,9,7,-7,-4,-7,-8,-7,-3,1,-1,9,10,-3,5,4,-6,-1,9,-4,-4,3,3,-6,-3,10,-1,-9,-6,-3,-4,4,-10,-5,-2,3,-1,-7,-8,-1,-9,5,1,-10,-10,-9,-10,4,-7,-8,-9,-4,-7,5,5,6,-10,-3,-7,-9,3,-1,10,-2,4,7,-1,2,-3,3,4,1,10,-4,-6,-6,-10,2,2,-8,-4,-10,7,4,10,9,7,-9,-5,-6,7,-9,-10,-8,7,-9,-2,-7,-10,8,-8,-7,8,-4,10,-5,1,-5,-5,3,10,2,-10,10,9,3,6,2,5,-8,-5,3,6,-9,2,4,6,5,-4,10,-4,3,-3,5,-1,3,7,4,-4,6,-4,10,-4,-8,2,4,-8,-8,-1,9,10,-8,7,-10,-4,9,-5,-10,5,-9,-5,-5,-1,-6,-9,-4,8,-6,5,-8,-10,-1,-5,6,-10,-7,10,-1,-8,-3,3,-6,1,-6,5,7,10,-2,10,4,-5,-4,6,7,-4,1,-8,-8,6,-7,-9,-8,-4,-3,2,-4,-10,-3,-6,10,-1,-5,7,-9,-7,-6,3,-5,-6,-1,8,7,-4,4,-1,7,-5,-10,-8,-5,-7,3,-5,-9,9,-1,-5,-4,-9,8,5,1,-10,2,1,-4,8,-10,-6,-8,-9,1,-7,3,-1,5,6,6,6,5,7,8,7,-2,9,9,9,1,2,4,-5,-1,-5,-7,7,2,1,1,8,-2,-3,4,-8,-8,9,6,-10,-6,-4,-10,7,4,10,8,1,6,1,-6,4,-3,-3,-10,-4,10,9,8,1,-4,1,2,3,6,7,5,5,8,-7,-2,3,10,3,-6,3,-9,3,6,9,-10,-5,10,4,-7,4,-1,-1,-9,-10,1,6,-6,1,-4,8,-7,-8,-1,4,-1,-5,-7,5,3,2,9,-5,-6,-8,7,4,-7,2,3,5,-6,10,9,9,1,7,1,4,10,-8,8,-2,4,-4,-10,3,-1,9,-8,-3,2,-6,4,2,4,1,-2,6,7,-5,10,2,2,-3,-2,9,8,8,-7,-8,-10,10,1,10,-9,4,-4,1,8,4,10,-5,-1,2,5,9,-8,7,-9,7,3,-7,8,1,-4,7,10,-2,-8,1,4,-7,8,-2,-5,5,10,3,2,5,2,-7,7,5,6,9,5,2,1,10,-5,-4,-9,-3,2,4,-2,-6,2,4,-7,-8,8,6,6,-7,-3,5,9,-10,8,7,-4,-10,-6,4,9,8,6,1,9,4,-9,3,-9,-1,8,-8,2,-9,-4,4,7,-3,3,6,1,8,-8,-8,-6,5,-8,6,-1,-6,10,-10,-1,1,-8,8,8,9,-8,5,7,-10,3,3,-3,-2,-1,3,7,6,2,3,1,-5,1,5,-2,-1,2,-10,4,-9,4,7,-7,-7,8,-8,3,7,5,-10,-6,-1,-6,3,-5,-5,6,10,-4,10,-8,10,-4,-3,-1,-8,-5,-5,-2,-1,5,-5,9,-2,-4,-6,3,-2,-4,-7,-10,-2,-4,4,-7,2,-10,-3,-4,-3,-9,9,-2,2,7,-1,-4,10,9,-5,-10,8,-6,10,-6,-6,-9,-9,-7,-8,-10,-9,-9,-2,4,5,-4,3,-2,10,3,4,-3,2,-4,4,9,-8,-4,-7,10,2,4,6,8,5,3,1,2,6,6,-2,5,3,2,10,1,10,9,3,-5,7,10,4,3,-8,1,-4,-9,10,7,7,-3,-5,-4,-8,-9,-7,-4,8,10,-8,5,-9,-1,8,-10,5,-2,6,9,7,8,6,2,1,2,-4,3,1,-4,-1,-2,8,7,1,7,-5,-1,-8,6,6,-9,5,6,6,-5,-6,3,2,-9,9,3,4,-6,-7,-2,-2,-3,-4,3,3,-9,4,5,4,-2,-4,7,-7,10,9,6,4,-6,-2,-10,-6,4,-1,-7,6,7,4,-6,1,6,-8,9,4,2,-4,-1,-1,2,5,-6,1,-9,-9,8,2,8,-8,2,2,-8,-6,9,-3,9,2,-6,-9,10,1,6,1,3,-2,-1,-1,-3,7,4,4,-5,9,1,-10,5,-8,5,6,-1,5,5,1,2,-1,-6,-2,-5,-4,-8,-7,8,-6,5,2,-10,-7,4,-4,-4,5,-4,-10,-7,-5,-1,-9,-8,-1,-7,-8,-4,4,1,-6,-3,-4,9,5,-10,-2,3,-9,6,-1,-7,-2,3,8,-3,8,5,-2,6,2,-8,-9,6,1,10,-7,-2,-9,-4,-9,-1,-3,-1,-3,-6,4,-1,-6,-1,-1,8,9,6,5,4,6,-2,-4,-8,9,1,-8,6,-9,1,-7,7,-9,5,2,-9,-7,-1,-4,-5,3,-6,-10,6,-9,-9,-6,-6,9,8,-3,2,-7,-8,-4,-4,2,-9,-4,2,-2,10,7,-2,7,10,6,-9,-6,4,1,6,-9,6,2,7,-8,3,-2,4,4,9,-7,-2,7,-1,-5,-4,6,10,-9,-3,3,-6,10,4,5,5,-6,-3,3,3,-2,4,8,-5,10,-6,5,-8,2,-8,-9,-9,10,-8,-5,-2,-10,7,2,-7,-2,-5,-6,10,7,7,3,-9,-5,7,-9,-10,-5,7,9,-10,-6,5,-6,-10,-7,8,-10,-2,-5,-8,7,-3,5,2,1,-4,-4,9,-8,-4,-5,-4,1,-3,-4,-3,10,-3,-4,-10,6,-4,-5,-4,-3,7,-3,6,-6,2,-1,-8,9,-8,8,-9,-2,-5,-7,1,9,1,-8,6,7,1,-3,1,-2,-4,-4,3,6,-4,-10,5,4,1,-5,5,7,10,-7,-1,-7,-7,9,-1,-1,10,-10,1,2,-6,-9,9,-7,7,9,2,4,-10,-1,-10,6,4,-8,1,-6,-9,8,-2,-6,-10,8,4,3,-7,-3,-9,-8,4,-7,-7,2,10,3,-8,1,-5,-1,-1,1,9,4,4,2,-7,2,3,-10,-7,-5,2,-2,4,-6,-8,-4,4,6,1,5,-8,-4,5,6,-6,5,-6,7,-10,9,-3,-4,3,4,-9,-4,5,10,1,-2,-8,7,3,5,8,-1,9,7,-7,-5,-9,5,-6,-4,2,4,-2,-3,-4,10,4,-2,-1,4,1,6,8,-1,-8,-1,-10,10,5,-9,-6,10,10,-5,-4,-9,-8,-2,6,-1,2,-5,-7,6,-2,1,-2,8,-7,-5,9,6,8,-6,-5,1,8,-10,4,-7,9,-2,10,-4,-10,8,2,-1,-3,-7,3,-4,7,-8,-9,5,4,8,-9,3,-1,1,4,-4,-8,-5,-10,-3,-2,7,-9,-9,4,-9,2,-2,-4,4,6,6,10,6,10,-8,4,6,-10,6,-6,4,-8,9,-3,1,3,-7,7,-5,-5,-1,-10,10,-4,1,5,8,-6,-5,-1,10,4,-7,1,9,-6,-4,-7,-6,5,5,-5,-3,-9,1,7,-4,-1,1,4,9,-8,6,-9,10,-10,-4,-7,9,5,6,5,2,-10,9,1,-5,1,8,-6,6,3,-4,-4,6,2,3,1,-3,-6,-6,10,-8,7,-5,-4,10,8,8,4,3,-6,-3,-2,10,1,-7,-9,4,-10,-8,7,-4,9,-8,7,-1,10,2,2,-9,9,-4,10,-4,-4,-9,-8,7,-8,-2,-8,10,9,-7,-5,4,4,-2,-5,-9,9,-1,10,6,-2,-4,3,8,7,5,-4,8,8,-2,-6,-3,8,2,3,-7,8,7,5,-5,1,-6,2,2,-4,4,-7,5,-2,-5,-4,-2,-4,-6], dtype = "uint8")#candidate|3872|(1600,)|const|uint8
var_3873 = relay.var("var_3873", dtype = "uint32", shape = (216,))#candidate|3873|(216,)|var|uint32
call_3870 = relay.TupleGetItem(func_3862_call(relay.reshape(var_3871.astype('float64'), [72,]), relay.reshape(const_3872.astype('uint8'), [1600,]), relay.reshape(var_3873.astype('uint32'), [216,]), ), 6)
call_3874 = relay.TupleGetItem(func_3866_call(relay.reshape(var_3871.astype('float64'), [72,]), relay.reshape(const_3872.astype('uint8'), [1600,]), relay.reshape(var_3873.astype('uint32'), [216,]), ), 6)
output = relay.Tuple([call_3868,call_3870,var_3871,const_3872,var_3873,])
output2 = relay.Tuple([call_3869,call_3874,var_3871,const_3872,var_3873,])
func_3900 = relay.Function([var_3871,var_3873,], output)
mod['func_3900'] = func_3900
mod = relay.transform.InferType()(mod)
mutated_mod['func_3900'] = func_3900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3900_call = mutated_mod.get_global_var('func_3900')
var_3902 = relay.var("var_3902", dtype = "float64", shape = (72,))#candidate|3902|(72,)|var|float64
var_3903 = relay.var("var_3903", dtype = "uint32", shape = (216,))#candidate|3903|(216,)|var|uint32
call_3901 = func_3900_call(var_3902,var_3903,)
output = call_3901
func_3904 = relay.Function([var_3902,var_3903,], output)
mutated_mod['func_3904'] = func_3904
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3977 = relay.var("var_3977", dtype = "float32", shape = (11, 15, 16))#candidate|3977|(11, 15, 16)|var|float32
uop_3978 = relay.rsqrt(var_3977.astype('float32')) # shape=(11, 15, 16)
func_1413_call = mod.get_global_var('func_1413')
func_1417_call = mutated_mod.get_global_var('func_1417')
const_3988 = relay.const([[9.286442,7.650100],[-1.380611,3.671275],[-4.897513,6.298090],[3.491045,-3.160637],[2.445357,2.371670],[5.911965,-9.133405],[0.042465,7.250028],[0.218837,-7.998450],[7.855338,-4.974763],[0.016375,2.527334],[5.258937,-2.233686],[-8.977580,-6.118904],[9.242229,5.603964],[5.879722,9.105597],[4.816983,-0.696182],[9.735323,6.931486],[8.687017,-0.925753],[9.826420,-5.658134],[-7.271108,9.456094],[-2.086317,9.172728]], dtype = "float64")#candidate|3988|(20, 2)|const|float64
var_3989 = relay.var("var_3989", dtype = "float32", shape = (12, 60))#candidate|3989|(12, 60)|var|float32
var_3990 = relay.var("var_3990", dtype = "int32", shape = (1089,))#candidate|3990|(1089,)|var|int32
call_3987 = relay.TupleGetItem(func_1413_call(relay.reshape(const_3988.astype('float64'), [10, 4]), relay.reshape(var_3989.astype('float32'), [720,]), relay.reshape(var_3990.astype('int32'), [1089,]), ), 3)
call_3991 = relay.TupleGetItem(func_1417_call(relay.reshape(const_3988.astype('float64'), [10, 4]), relay.reshape(var_3989.astype('float32'), [720,]), relay.reshape(var_3990.astype('int32'), [1089,]), ), 3)
output = relay.Tuple([uop_3978,call_3987,const_3988,var_3989,var_3990,])
output2 = relay.Tuple([uop_3978,call_3991,const_3988,var_3989,var_3990,])
func_4013 = relay.Function([var_3977,var_3989,var_3990,], output)
mod['func_4013'] = func_4013
mod = relay.transform.InferType()(mod)
var_4014 = relay.var("var_4014", dtype = "float32", shape = (11, 15, 16))#candidate|4014|(11, 15, 16)|var|float32
var_4015 = relay.var("var_4015", dtype = "float32", shape = (12, 60))#candidate|4015|(12, 60)|var|float32
var_4016 = relay.var("var_4016", dtype = "int32", shape = (1089,))#candidate|4016|(1089,)|var|int32
output = func_4013(var_4014,var_4015,var_4016,)
func_4017 = relay.Function([var_4014,var_4015,var_4016,], output)
mutated_mod['func_4017'] = func_4017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2403_call = mod.get_global_var('func_2403')
func_2404_call = mutated_mod.get_global_var('func_2404')
call_4072 = relay.TupleGetItem(func_2403_call(), 3)
call_4073 = relay.TupleGetItem(func_2404_call(), 3)
output = call_4072
output2 = call_4073
func_4075 = relay.Function([], output)
mod['func_4075'] = func_4075
mod = relay.transform.InferType()(mod)
mutated_mod['func_4075'] = func_4075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4075_call = mutated_mod.get_global_var('func_4075')
call_4076 = func_4075_call()
output = call_4076
func_4077 = relay.Function([], output)
mutated_mod['func_4077'] = func_4077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3189_call = mod.get_global_var('func_3189')
func_3190_call = mutated_mod.get_global_var('func_3190')
call_4152 = relay.TupleGetItem(func_3189_call(), 0)
call_4153 = relay.TupleGetItem(func_3190_call(), 0)
output = call_4152
output2 = call_4153
func_4178 = relay.Function([], output)
mod['func_4178'] = func_4178
mod = relay.transform.InferType()(mod)
output = func_4178()
func_4179 = relay.Function([], output)
mutated_mod['func_4179'] = func_4179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2801_call = mod.get_global_var('func_2801')
func_2802_call = mutated_mod.get_global_var('func_2802')
call_4186 = func_2801_call()
call_4187 = func_2801_call()
uop_4196 = relay.log2(call_4186.astype('float64')) # shape=(1089,)
uop_4198 = relay.log2(call_4187.astype('float64')) # shape=(1089,)
output = relay.Tuple([uop_4196,])
output2 = relay.Tuple([uop_4198,])
func_4202 = relay.Function([], output)
mod['func_4202'] = func_4202
mod = relay.transform.InferType()(mod)
output = func_4202()
func_4203 = relay.Function([], output)
mutated_mod['func_4203'] = func_4203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2828_call = mod.get_global_var('func_2828')
func_2829_call = mutated_mod.get_global_var('func_2829')
call_4204 = relay.TupleGetItem(func_2828_call(), 0)
call_4205 = relay.TupleGetItem(func_2829_call(), 0)
output = call_4204
output2 = call_4205
func_4207 = relay.Function([], output)
mod['func_4207'] = func_4207
mod = relay.transform.InferType()(mod)
output = func_4207()
func_4208 = relay.Function([], output)
mutated_mod['func_4208'] = func_4208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4207_call = mod.get_global_var('func_4207')
func_4208_call = mutated_mod.get_global_var('func_4208')
call_4282 = func_4207_call()
call_4283 = func_4207_call()
func_3900_call = mod.get_global_var('func_3900')
func_3904_call = mutated_mod.get_global_var('func_3904')
var_4290 = relay.var("var_4290", dtype = "float64", shape = (72,))#candidate|4290|(72,)|var|float64
const_4291 = relay.const([-10,4,4,6,-8,7,10,8,-3,-1,-6,-1,1,-10,5,8,2,5,-10,3,1,-9,-2,-8,5,-7,8,-4,8,-5,-1,-10,-5,-9,8,-2,-2,4,7,10,-1,10,4,8,10,-7,-8,-4,-2,7,-6,2,9,3,-6,-5,1,8,-3,-9,2,2,3,-3,8,6,9,4,-2,4,-2,-8,-6,10,3,-2,5,4,-9,-4,7,5,-8,3,-5,-1,-8,2,5,5,3,-4,-1,-8,-7,1,2,3,-4,1,5,-8,1,9,4,-8,9,-5,2,3,6,7,-10,10,-7,3,5,7,3,-3,-7,-4,-3,-9,4,6,7,-10,4,-9,2,-4,-5,-2,6,5,-8,-2,-2,8,4,-8,9,-8,-9,-5,10,8,4,-4,-7,4,10,8,6,7,-2,-10,4,-6,-6,-6,4,-2,5,-7,-4,8,6,5,-4,3,-9,6,1,-8,5,-3,-7,-5,2,-5,-4,2,8,3,2,-7,7,4,-7,6,6,9,6,-6,-8,5,-3,-10,-6,5,9,1,-7,-5,-7,4,-10,-7,-9,-5,3,6,10,-8], dtype = "uint32")#candidate|4291|(216,)|const|uint32
call_4289 = relay.TupleGetItem(func_3900_call(relay.reshape(var_4290.astype('float64'), [72,]), relay.reshape(const_4291.astype('uint32'), [216,]), ), 1)
call_4292 = relay.TupleGetItem(func_3904_call(relay.reshape(var_4290.astype('float64'), [72,]), relay.reshape(const_4291.astype('uint32'), [216,]), ), 1)
uop_4296 = relay.erf(call_4289.astype('float32')) # shape=(252, 2)
uop_4298 = relay.erf(call_4292.astype('float32')) # shape=(252, 2)
bop_4299 = relay.minimum(uop_4296.astype('float64'), relay.reshape(call_4289.astype('float64'), relay.shape_of(uop_4296))) # shape=(252, 2)
bop_4302 = relay.minimum(uop_4298.astype('float64'), relay.reshape(call_4292.astype('float64'), relay.shape_of(uop_4298))) # shape=(252, 2)
output = relay.Tuple([call_4282,var_4290,const_4291,bop_4299,])
output2 = relay.Tuple([call_4283,var_4290,const_4291,bop_4302,])
func_4312 = relay.Function([var_4290,], output)
mod['func_4312'] = func_4312
mod = relay.transform.InferType()(mod)
mutated_mod['func_4312'] = func_4312
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4313 = relay.var("var_4313", dtype = "float64", shape = (72,))#candidate|4313|(72,)|var|float64
func_4312_call = mutated_mod.get_global_var('func_4312')
call_4314 = func_4312_call(var_4313)
output = call_4314
func_4315 = relay.Function([var_4313], output)
mutated_mod['func_4315'] = func_4315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4178_call = mod.get_global_var('func_4178')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_4327 = func_4178_call()
call_4328 = func_4178_call()
uop_4329 = relay.sin(call_4327.astype('float64')) # shape=(1089,)
uop_4331 = relay.sin(call_4328.astype('float64')) # shape=(1089,)
func_1413_call = mod.get_global_var('func_1413')
func_1417_call = mutated_mod.get_global_var('func_1417')
const_4364 = relay.const([[6.443047,6.972580,-8.615685,4.959542,-7.776524,-4.463327,9.740719,7.497908,-6.463560,4.816805,8.255843,-3.193900,-0.772144,4.182516,-1.265340,2.304389,2.481247,-1.982833,-7.527690,-0.835572],[8.491291,-7.802896,-9.627790,9.558180,-9.304052,6.999064,-6.587244,-3.666513,1.922463,4.446621,-6.797681,8.469058,-5.176964,-9.445899,4.986636,2.980874,1.475773,5.878173,-6.989131,2.661178]], dtype = "float64")#candidate|4364|(2, 20)|const|float64
const_4365 = relay.const([[5.144445,-2.979327,-2.878047,8.774548],[-9.066510,9.599811,-1.542696,2.169612],[-4.230553,6.306096,-1.160414,-3.698952],[-9.947610,8.518928,3.687414,-1.120833],[8.872023,6.100036,6.327915,-0.005836],[-4.055791,-2.558643,-4.323271,3.607181],[9.772929,9.142222,-7.836993,6.017973],[1.447047,0.489654,-1.367488,4.838888],[-5.855853,2.469334,1.455448,2.286012],[-8.498042,-9.971332,5.847155,1.658139],[-1.261845,3.213658,-5.891304,-7.892187],[6.481827,-9.195165,0.037328,6.439192],[-8.061141,3.639193,-4.808949,-6.306162],[6.552470,-2.704143,-5.532725,5.501549],[-0.850710,0.812321,1.338675,-7.792241],[0.609199,-1.143619,0.922598,-7.991377],[5.530199,9.661706,-5.764137,-6.024817],[9.051510,-5.601911,-8.890346,-1.298690],[-0.099292,8.934549,0.765478,-0.532570],[-1.988053,0.216220,6.314245,9.670586],[-7.236895,-5.140695,-2.336463,-7.587383],[0.431102,0.888422,-3.673397,-9.291266],[5.335031,-1.842607,-1.540783,0.380143],[9.183552,-7.871284,-0.331751,4.560963],[-6.722333,0.536586,-8.117337,-7.249129],[3.637089,5.627050,-1.555789,-3.645515],[9.430096,-7.897382,-7.419806,-8.356369],[8.532080,-3.731121,4.531451,-5.443935],[6.041434,-7.018784,9.743219,-3.730731],[8.521770,-6.375679,3.962443,8.318797],[3.597466,-6.034096,-5.150884,5.074461],[9.229407,1.567615,-7.268764,3.247183],[-9.027736,3.334697,-6.073730,-3.974700],[-0.195459,6.656279,5.739920,-3.546042],[9.989401,-6.449715,-1.774856,3.452204],[9.775386,-4.590129,-0.038411,-8.536853],[4.869498,-6.026866,5.530530,9.584819],[9.558574,1.727062,-7.884609,0.864871],[2.807692,6.197142,1.316399,0.797318],[2.473669,-9.431929,3.399205,-6.515765],[5.077072,2.593973,3.674049,-2.207145],[5.295308,-2.131597,4.768861,3.405700],[1.394884,-0.749301,0.242531,-7.343443],[4.919278,-0.402154,2.912202,-3.273867],[7.855450,9.073839,-3.133139,6.335426],[1.438030,2.545620,0.557016,0.225912],[6.982036,-1.827334,-1.034009,-1.184675],[9.023277,-7.242286,1.647893,8.904639],[-8.904903,-5.995565,-7.651250,1.787781],[9.067935,6.021754,7.082740,3.108858],[-4.409741,-4.426090,-8.754306,6.673054],[9.992741,-4.592021,-5.988633,-6.642327],[-1.904150,1.912417,-8.723856,3.910278],[-6.256058,8.857645,2.799001,-9.503291],[-5.983034,-8.101177,0.442164,-2.174427],[-3.319881,-0.499114,9.958190,7.943978],[4.185990,-6.974650,2.629068,1.702026],[-2.116295,-8.782489,4.894898,-7.797233],[7.920760,2.249893,-4.882805,6.871834],[-3.073300,2.192698,-2.987917,-2.687492],[7.607469,-9.349178,-0.208500,-9.962395],[-8.962801,-6.188763,-8.174469,8.684082],[-0.505814,-6.192647,-1.274512,5.816489],[2.064141,-1.330231,5.179052,3.895023],[-9.576077,-9.180635,0.502680,9.557108],[8.124969,-3.951304,-9.875839,4.415121],[-2.016094,1.978703,3.534594,4.704416],[1.598468,2.664136,-6.573480,-8.255771],[-1.021820,7.527849,5.081453,8.695065],[0.322804,-1.748744,7.075355,-1.692725],[-5.438228,-9.095905,-6.201809,-8.646647],[-4.549787,-7.166905,8.193697,6.238092],[6.898775,9.033622,3.126181,2.753892],[-8.543140,9.379758,4.511199,0.263880],[9.793958,-9.099489,-2.857573,-5.076169],[-0.067111,6.331574,4.862787,8.875871],[-8.335033,3.266749,6.038344,-9.269850],[2.388111,3.356371,0.199432,-0.371601],[-1.425324,-6.310217,0.947577,7.351069],[7.044878,8.779131,1.499023,-2.813866],[-5.631826,-2.590535,-0.470655,4.096711],[-0.796624,2.762903,-6.249823,-1.429198],[-9.958640,9.870371,9.152390,6.033420],[1.825536,8.093575,2.495399,-2.827930],[-8.125821,2.321608,6.234648,-9.753197],[9.876930,1.939112,3.252873,-2.198132],[-1.484595,6.941666,3.673826,0.468756],[-6.878584,6.357098,-9.675810,7.453056],[-0.015973,5.295718,0.234232,8.696224],[3.104199,-2.856418,9.779636,-2.433186],[-7.199477,2.385328,-4.620515,1.418905],[-0.773332,-6.569226,-2.759831,1.397001],[-2.542587,5.195746,-9.708630,-4.224333],[6.328192,-7.719246,-8.570093,5.674130],[-9.962763,-9.477176,4.200187,9.511516],[-4.265764,-3.249675,7.963451,-2.157618],[-9.117899,-6.560928,-4.745126,6.066416],[0.683842,-0.797653,-6.044463,1.968448],[6.962676,-1.459953,5.949205,-8.434666],[8.425086,-0.209557,-9.056552,5.425450],[-4.989070,7.044405,-1.817030,4.881592],[-8.603485,4.014905,7.785373,0.932439],[-5.579184,2.709573,-8.083108,-7.417066],[-1.354927,-3.713045,1.441486,5.723138],[1.241091,-4.690647,6.393832,-1.639994],[-5.962086,6.672462,-7.529420,-1.023801],[-8.600383,-7.718077,6.469350,-6.232576],[5.190607,-8.875024,-0.086894,3.183137],[-7.914696,-7.948247,2.600898,6.733489],[-2.121978,4.484985,8.962768,-4.997258],[8.844832,-1.444097,3.180391,-0.078716],[-5.065245,8.834096,-2.375253,-9.779554],[-2.287952,6.495261,8.501806,1.648025],[9.722035,-2.091096,-5.352332,-7.567356],[4.069171,-2.491703,2.549391,-4.889490],[5.624897,0.652090,-3.972184,-9.558620],[-0.269650,-7.884138,-0.924645,7.818183],[-2.264118,8.758084,-6.025774,-6.327291],[-0.839044,-3.521928,3.097109,8.388506],[-3.578365,-3.667644,9.167719,-7.788973],[-8.352118,9.894671,-7.309583,-1.023892],[6.048523,-5.571204,6.668441,1.638141],[0.633487,-1.621522,-0.431241,-5.845522],[-7.035610,6.899381,8.441701,6.677699],[-1.239004,2.261820,9.889943,6.863136],[1.150474,1.187710,-8.475322,-2.585038],[-5.945238,-6.288050,4.598526,-7.215767],[-8.147318,6.405521,1.127808,1.523210],[2.772537,-6.210628,9.476135,6.999923],[8.770748,1.123759,-4.235104,-5.072248],[-0.394742,7.959258,6.781292,5.273168],[-9.217984,4.768374,5.550306,3.888446],[2.001021,-1.068133,-2.881165,7.359802],[-4.857448,5.389827,8.278406,9.222532],[2.658007,7.900905,-2.736565,-6.291006],[0.833978,-0.025335,-4.043896,6.178159],[-1.339906,-3.733470,-0.848791,-0.223618],[8.858876,9.664872,5.337647,-7.049698],[1.455295,3.840054,5.803474,-6.031975],[-8.659517,8.900016,0.662903,-8.121215],[-9.598714,-1.712307,0.182145,3.940712],[-3.827234,2.498843,-1.377537,-4.551892],[1.589905,4.595338,5.539964,5.525663],[7.371011,2.363455,5.870662,-6.170604],[-1.640284,-2.070420,8.202559,-6.254110],[-4.306641,-2.458084,-9.448404,8.250235],[-3.390675,-4.708661,-2.170613,3.188140],[-6.494918,-4.840738,2.925766,-3.833934],[8.554372,0.476680,-8.422963,3.515968],[5.891811,8.728027,-9.769976,2.394992],[-3.457812,7.481748,1.735101,-1.485898],[7.642783,0.338792,9.067446,-6.300601],[5.820762,1.475200,-6.137754,-3.678985],[-8.981600,8.415711,-9.666656,-0.449815],[-2.506170,-0.309910,-4.146809,9.826649],[2.372614,-9.784177,-2.629379,-7.248125],[-4.236353,-3.808833,-4.838648,-7.025429],[-5.366149,8.902619,-9.097036,5.177034],[2.817773,-5.919890,-8.778199,8.582343],[5.310803,-1.766699,9.439100,6.908525],[6.174800,-9.624670,-0.167249,-9.512494],[-8.190306,-2.264913,8.435794,3.037589],[8.167438,8.045092,2.534025,0.423444],[-3.444201,6.472112,-2.535117,-0.222966],[-0.545780,1.608777,3.055411,5.113493],[-8.943112,7.334101,-1.433048,-0.945841],[-0.500969,1.974888,2.697924,-4.224456],[0.656330,0.951996,-6.187191,5.644450],[-7.969884,-3.460390,-4.285872,8.049176],[4.348896,6.954630,0.057175,3.705658],[9.066270,7.280300,8.634801,-1.580709],[7.962619,4.877873,5.633167,-7.874245],[8.402207,-2.264105,6.044277,-4.090441],[-1.779100,-5.884354,-8.651750,8.034394],[-7.402268,-7.139603,5.776152,-2.957811],[-1.795718,-5.906568,-9.671554,9.173022],[0.765420,-8.394639,2.111934,4.092942],[-1.863365,9.118291,7.289170,-8.398140],[5.395193,-9.411687,5.797524,-0.418235],[-6.594717,-2.182857,8.194205,-7.268809]], dtype = "float32")#candidate|4365|(180, 4)|const|float32
call_4363 = relay.TupleGetItem(func_1413_call(relay.reshape(const_4364.astype('float64'), [10, 4]), relay.reshape(const_4365.astype('float32'), [720,]), relay.reshape(call_4327.astype('int32'), [1089,]), ), 2)
call_4366 = relay.TupleGetItem(func_1417_call(relay.reshape(const_4364.astype('float64'), [10, 4]), relay.reshape(const_4365.astype('float32'), [720,]), relay.reshape(call_4327.astype('int32'), [1089,]), ), 2)
uop_4367 = relay.asin(uop_4329.astype('float32')) # shape=(1089,)
uop_4369 = relay.asin(uop_4331.astype('float32')) # shape=(1089,)
output = relay.Tuple([call_4363,const_4364,const_4365,uop_4367,])
output2 = relay.Tuple([call_4366,const_4364,const_4365,uop_4369,])
func_4371 = relay.Function([], output)
mod['func_4371'] = func_4371
mod = relay.transform.InferType()(mod)
mutated_mod['func_4371'] = func_4371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4371_call = mutated_mod.get_global_var('func_4371')
call_4372 = func_4371_call()
output = call_4372
func_4373 = relay.Function([], output)
mutated_mod['func_4373'] = func_4373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3189_call = mod.get_global_var('func_3189')
func_3190_call = mutated_mod.get_global_var('func_3190')
call_4473 = relay.TupleGetItem(func_3189_call(), 0)
call_4474 = relay.TupleGetItem(func_3190_call(), 0)
uop_4485 = relay.cos(call_4473.astype('float64')) # shape=(1089,)
uop_4487 = relay.cos(call_4474.astype('float64')) # shape=(1089,)
func_3204_call = mod.get_global_var('func_3204')
func_3207_call = mutated_mod.get_global_var('func_3207')
const_4493 = relay.const([[-6,9,-7,2,10,4,-6,-1,-10,-3,-7,-10,1,-3,-1,-6,-6,-2,-2,9,-6,9,-5,9,9,-8,1,3,1,1,-4,10,-9,-7,1,-5,6,-2,-6,10],[5,4,-7,7,4,1,4,2,-6,-4,-2,5,-7,-10,-10,-2,10,10,-4,5,-5,-10,10,2,-8,4,-9,7,-5,-9,-7,9,-9,-5,6,-3,-10,1,2,5]], dtype = "int64")#candidate|4493|(2, 40)|const|int64
var_4494 = relay.var("var_4494", dtype = "int64", shape = (1040,))#candidate|4494|(1040,)|var|int64
call_4492 = relay.TupleGetItem(func_3204_call(relay.reshape(const_4493.astype('int64'), [5, 16, 1]), relay.reshape(var_4494.astype('int64'), [5, 16, 13]), ), 0)
call_4495 = relay.TupleGetItem(func_3207_call(relay.reshape(const_4493.astype('int64'), [5, 16, 1]), relay.reshape(var_4494.astype('int64'), [5, 16, 13]), ), 0)
output = relay.Tuple([uop_4485,call_4492,const_4493,var_4494,])
output2 = relay.Tuple([uop_4487,call_4495,const_4493,var_4494,])
func_4496 = relay.Function([var_4494,], output)
mod['func_4496'] = func_4496
mod = relay.transform.InferType()(mod)
var_4497 = relay.var("var_4497", dtype = "int64", shape = (1040,))#candidate|4497|(1040,)|var|int64
output = func_4496(var_4497)
func_4498 = relay.Function([var_4497], output)
mutated_mod['func_4498'] = func_4498
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4539 = relay.var("var_4539", dtype = "float32", shape = (9, 10, 15))#candidate|4539|(9, 10, 15)|var|float32
uop_4540 = relay.asin(var_4539.astype('float32')) # shape=(9, 10, 15)
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_4542 = relay.TupleGetItem(func_2502_call(), 0)
call_4543 = relay.TupleGetItem(func_2503_call(), 0)
func_2223_call = mod.get_global_var('func_2223')
func_2230_call = mutated_mod.get_global_var('func_2230')
const_4548 = relay.const([9.675256,5.608004,-1.584053,2.790444,4.648145,9.957038,3.361644,1.970764,-7.522452,4.392335,0.520787,-9.243171,-0.525573,4.745837,-5.375051,-1.275666,3.227021,8.269655,-2.052285,-9.719568,-6.325026,6.820682,-7.561841,5.255569,-7.889316,4.580473,-6.755054,-0.145802,-4.523928,-8.006114,8.750384,3.647537,-4.730994,-1.606273,0.397569,6.297687,-5.750785,8.760365,9.588990,-0.629835,0.342359,6.366520,8.911088,-6.749429,1.818839,-5.091189,3.553269,-8.231566,-3.389668,-8.020306,0.871184,3.175167,-7.695306,-5.231909,8.794278,7.044105,-3.751412,-1.729302,4.033779,-5.257341,-5.861868,4.239383,-7.017805,9.427981,6.825652,-5.132379,7.440704,-9.333797,-1.084113,2.119714,9.404032,-4.932671,1.311741,5.135263,1.310734,-6.489101,-8.374097,1.323098,6.088120,-8.999706,3.532585,9.594674,-2.265107,-5.975387,-8.378396,9.703500,8.744161,5.290990,-7.368144,2.132328,-4.581257,7.446274,6.227222,1.066090,-6.747839,0.774299,-8.884084,-4.747622,4.231439,5.464154,2.259916,9.658778,-6.639823,0.299360,-3.876447,-4.198988,-2.367307,0.381462,3.705919,-6.687729,-7.718927,5.963509,-2.328381,-4.117998,-3.483874,9.071970,-6.655049,-1.387048,-2.203838,7.975619,-5.478450,7.671903,-9.256951,2.521277,-8.142707,8.440152,5.583254,4.045249,-4.997407,8.726958,-7.957990,-8.904578,-3.683944,4.400051,6.579721,2.010595,3.231730,-4.667544,0.539681,5.621741,-1.428099,3.498834,1.452465,2.853097], dtype = "float64")#candidate|4548|(144,)|const|float64
var_4549 = relay.var("var_4549", dtype = "float32", shape = (720,))#candidate|4549|(720,)|var|float32
const_4550 = relay.const([[1,-7,-3,-10,-3,-8,3,4,-9,-3,-8,-8,2,2,3,5,-3,-3,-3,3,-9,-6,-7,4,-7,10,5,8,9,7,-5,-4,-5,7,1,-6,10,-3,-2,5,-4,-5,-3,8,5,2,10,-8,-4,-4,4,-5,4,3,3,-7,1,7,3,5,-3,-7,4,9,-2,-3,5,-1,4,-6,2,-5,3,8,-7,5,-10,4,-10,4,-8,-8,-2,3,-5,-4,-10,1,-9,9,-1,-6,9,-7,-7,-2,-5,-9,1,5,-10,-4,-6,-4,-1,-2,9,5,10,-8,-2,-3,1,6,-3,-10,9,-3,-9,1,2,-4,3,-1,-9,1,7,10,5,10,6,3,3,4,5,-2,1,1,3,-7,1,6,2,-8,2,7,9,5,7,4,7,2,1,-9,5,9,-4,4,10,2,-1,10,-10,9,-6,-3,8,10,9,6,-7,-8,1,-8,-3,3,-1,3,9,1,7,-2,-9,6,4,-2,8,-6,1,10,-4,9,7,7,5,3,3,-7,-8,2,7,-6,3,4,4,1,6,-3,3,-8,9,-10,-9,-5,-4,-10,1,5,-8,10,-10,9,-3,8,-6,6,-8,-8,-7,-5,-1,9,-10,8,3,9,-8,-9,5,-1,-4,4,5,-2,-6,3,-1,-9,-9,9,2,-5,-8,-5,4,4,3,3,-2,10,9,5,-6,-10,-9,6,7,-6,-6,10,7,9,3,-7,6,-3,1,-6,2,1,-5,5,-8,8,3,7,1,-9,-9,-9,4,-1,-10,3,1,3,2,-7,-10,8,3,3,-1,-10,1,-5,-1,-9,3,5,5,-9,8,9,3,9,-1,3,5,2,3,10,-6,-7,2,-5,9,-5,-2,-5,2,-4,-8,-6,-8,-8,10,5,10,6,-3,10,5,-9,2,5,-7,8,3,8,-4,2,-8,-9,8,-10,-6,-5,8,9,9,7,-2,3,10,-9,-10,8,8,6,-5,-1,9,-4,-9,8,-1,-3,-9,-8,-8,3,8,5,3,5,8,-10,1,5,-1,5,-7,4,-5,-4,1,-10,-1,8,6,1,-9,-4,-7,8,1,9,-4,-5,7,-1,-9,7,5,3,9,9,6,-8,-2,2,-4,1,-4,-6,-6,-9,-9,6,-2,-7,-4,8,-2,5,-7,-5,-8,8,3,-2,2,-5,-8,4,9,-10,10,4,-6,-3,-6,1,-7,5,-4,2,-10,4,-7,7,-10,2,5,-1,5,-6,-6,-2,-8,4,3,6,4,-1,-10,10,5,1,8,-3,-10,1,-5,-9,-9,5,-3,-7,-4,-8,9,6,10,6,-3,-8,-7,9,3,7,2,-7,-2,2,5,10,-7,-7,-6,-4,1,2,-4,-10,-8,10,8,5,-2,-7,6,-10,-6,2,10,-2,2,7,-4,3,-5,-4,-8,4,-7,-6,8,7,-3,-7,7,-1,1,4,-8,-9,-8,5,-1,8,2,2,8,-4,-8,-3,10,3,6,9,4,5,1,2,3,-2,1,-2,3,1,1,-6,10,2,-9,-9,1,7,-6,-7,-8,-3,-5,10,-3,9,7,-4,-7,4,-9,10,-7,-3,-7,-3,1,4,10,-2,-4,-8,-8,-9,-9,2,-6,-10,-1,-7,5,-1,-5,-2,8,-10,7,-3,-10,-10,5,-9,-4,5,5,-2,-3,7,-10,5,-3,10,2,-4,6,-3,6,4,-4,3,-1,10,-2,2,-5,7,1,-9,1,-7,-7,-9,-4,-1,2,-8,3,-8]], dtype = "uint32")#candidate|4550|(1, 660)|const|uint32
var_4551 = relay.var("var_4551", dtype = "uint32", shape = (132,))#candidate|4551|(132,)|var|uint32
call_4547 = relay.TupleGetItem(func_2223_call(relay.reshape(const_4548.astype('float64'), [3, 8, 6]), relay.reshape(const_4548.astype('float64'), [3, 8, 6]), relay.reshape(var_4549.astype('float32'), [1, 720]), relay.reshape(const_4550.astype('uint32'), [660,]), relay.reshape(var_4551.astype('uint32'), [132,]), ), 9)
call_4552 = relay.TupleGetItem(func_2230_call(relay.reshape(const_4548.astype('float64'), [3, 8, 6]), relay.reshape(const_4548.astype('float64'), [3, 8, 6]), relay.reshape(var_4549.astype('float32'), [1, 720]), relay.reshape(const_4550.astype('uint32'), [660,]), relay.reshape(var_4551.astype('uint32'), [132,]), ), 9)
output = relay.Tuple([uop_4540,call_4542,call_4547,const_4548,var_4549,const_4550,var_4551,])
output2 = relay.Tuple([uop_4540,call_4543,call_4552,const_4548,var_4549,const_4550,var_4551,])
func_4578 = relay.Function([var_4539,var_4549,var_4551,], output)
mod['func_4578'] = func_4578
mod = relay.transform.InferType()(mod)
mutated_mod['func_4578'] = func_4578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4578_call = mutated_mod.get_global_var('func_4578')
var_4580 = relay.var("var_4580", dtype = "float32", shape = (9, 10, 15))#candidate|4580|(9, 10, 15)|var|float32
var_4581 = relay.var("var_4581", dtype = "float32", shape = (720,))#candidate|4581|(720,)|var|float32
var_4582 = relay.var("var_4582", dtype = "uint32", shape = (132,))#candidate|4582|(132,)|var|uint32
call_4579 = func_4578_call(var_4580,var_4581,var_4582,)
output = call_4579
func_4583 = relay.Function([var_4580,var_4581,var_4582,], output)
mutated_mod['func_4583'] = func_4583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2950_call = mod.get_global_var('func_2950')
func_2951_call = mutated_mod.get_global_var('func_2951')
call_4597 = func_2950_call()
call_4598 = func_2950_call()
output = call_4597
output2 = call_4598
func_4601 = relay.Function([], output)
mod['func_4601'] = func_4601
mod = relay.transform.InferType()(mod)
mutated_mod['func_4601'] = func_4601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4601_call = mutated_mod.get_global_var('func_4601')
call_4602 = func_4601_call()
output = call_4602
func_4603 = relay.Function([], output)
mutated_mod['func_4603'] = func_4603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3415_call = mod.get_global_var('func_3415')
func_3417_call = mutated_mod.get_global_var('func_3417')
call_4610 = func_3415_call()
call_4611 = func_3415_call()
uop_4619 = relay.rsqrt(call_4610.astype('float32')) # shape=(13, 1, 13)
uop_4621 = relay.rsqrt(call_4611.astype('float32')) # shape=(13, 1, 13)
const_4626 = relay.const([[[-1.030351,3.247743,5.576416,3.099727,-0.337691,-0.308719,-3.703308,-9.763792,-8.610975,6.476752,-7.048848,2.930026,-7.629000],[6.721723,9.149380,-2.624647,4.578885,-6.603815,-7.374230,-4.356160,-2.834993,8.752205,8.268862,2.048284,3.998499,-4.688768],[-2.271294,-3.457204,3.569203,2.926674,-9.334390,-9.491493,-0.976486,8.386853,-8.991790,5.977574,-0.010122,7.833274,-4.090515],[3.812655,8.193298,1.821836,-3.146857,7.104370,1.115655,-8.277255,-7.057080,-2.499806,8.131920,2.332380,7.661502,-7.048335],[9.513051,-4.554982,-1.482225,-2.138194,0.068551,1.851328,9.460602,0.927845,-9.597895,6.571444,-2.806853,4.889051,0.247903],[6.310019,6.734982,-2.403156,5.118079,5.565625,-0.371734,-3.391264,0.224817,9.494712,-2.163439,-3.187960,-3.872884,9.824688]],[[1.514145,-9.052323,3.816026,4.878898,1.338090,9.266296,-1.980074,-5.014333,-3.079999,6.430347,8.317547,5.222167,1.983020],[-7.348104,0.216157,8.102035,-7.031544,0.851193,9.869140,-5.184494,-2.151960,-3.692927,-3.821778,4.138820,0.629582,7.387677],[-5.428495,-3.333256,-6.605947,5.349252,-3.904742,-0.297719,2.146086,-1.941472,-3.633424,7.390456,-3.101128,-2.046510,4.654862],[-5.158733,-7.304065,6.205073,-4.502597,-4.319730,-6.597209,-5.117387,-9.131733,5.643208,-6.874285,7.974839,-6.634548,5.002499],[-0.655545,-0.969466,9.478517,-2.617143,-9.616678,-4.971048,9.140186,5.995940,8.112313,-8.353947,-0.460474,9.055627,1.367871],[1.790736,9.572390,-5.542349,-0.441031,7.749613,2.828750,9.960113,2.848492,-9.497374,0.262204,-3.415523,8.987977,-7.551178]],[[-4.469236,-7.903351,-8.316988,-0.145704,-5.572072,4.435329,8.452450,4.969832,-8.007575,-0.907362,-5.241758,-3.986811,-0.390976],[-6.650418,9.698900,2.261968,-2.657976,4.410611,6.886230,0.814324,0.551848,0.998249,3.080150,6.152273,6.011706,-2.053023],[1.656529,2.837397,0.641904,3.643114,0.273109,0.047273,1.624452,-9.286950,-5.612315,-4.303976,4.034966,-9.287051,-5.973488],[-1.974720,9.154378,-2.560607,-5.475406,-6.973307,2.625608,-3.459692,-8.433579,6.411825,0.752454,-1.073489,2.308280,3.665285],[-0.887143,1.525411,2.179647,6.440238,-2.395840,9.005033,7.777372,9.115493,-3.444744,7.679213,8.298077,-3.019393,4.216439],[-8.086978,1.739112,0.417234,6.444987,6.018096,-7.249316,9.828840,-6.181538,6.681738,-1.394802,-7.836463,2.706493,2.645687]],[[-9.843966,1.945829,-9.338746,-8.785569,5.322226,-1.440755,5.799366,1.767571,-0.125139,-1.199268,-5.281366,-0.899105,-2.290243],[9.420514,5.565539,-3.610901,-4.585422,2.241557,6.282587,-2.592046,6.789571,0.763682,-7.288940,-4.304997,8.509608,1.392129],[2.357360,-0.925860,8.806376,3.977246,-3.352292,-6.387813,7.426637,-8.751403,-6.452883,1.934505,1.022837,-6.602924,1.881938],[-4.481853,8.312920,-7.726017,8.900914,0.795249,-5.079554,9.135306,-9.457239,7.012870,6.181656,3.344605,7.763130,8.358195],[8.639993,-2.116778,7.450877,-2.707091,5.359251,7.826824,5.017109,7.038687,2.286172,4.017744,-0.915530,6.750209,-3.475760],[6.259337,9.968888,-4.553514,-8.559368,7.305906,8.927140,5.072273,3.916231,3.493800,9.416399,-4.515734,-0.141699,-8.145156]],[[3.172708,-1.867701,-0.983355,2.284278,6.401153,7.692465,-8.972369,1.706921,-9.598475,-8.329264,3.207852,-8.568715,-9.400231],[8.314210,-1.765337,-5.781817,8.077494,0.712507,-0.648068,4.513490,-6.175656,-2.914954,8.409979,-4.196420,-5.634037,3.708938],[5.699109,-9.341332,9.024048,-4.603583,3.778529,3.410909,2.400792,4.011082,1.735362,0.998176,2.250213,-9.458899,8.380322],[-8.454852,-3.273642,9.175886,3.607636,8.409795,4.419630,1.630115,-5.845427,5.013150,1.998547,-1.518638,3.970971,5.791705],[4.970430,-3.554599,-7.713636,-5.306809,-7.207808,-9.315671,3.797409,-4.532347,1.143842,0.797720,-2.668199,-4.549088,3.110641],[-8.544288,-6.197986,6.653080,-5.727118,0.476646,-7.850382,1.302036,1.508268,9.163045,5.884683,-6.783660,4.279102,0.817753]],[[-2.070503,4.375678,-0.190363,3.077489,5.575895,-3.387304,-9.834688,1.949015,8.769187,7.049369,-8.129332,9.897022,5.503052],[7.064590,7.940367,-6.235716,-0.217134,-1.720548,-8.159160,0.884207,-7.147854,2.273317,3.881897,-4.830554,5.373326,-4.108360],[-0.780545,1.464034,0.396554,-2.030146,8.018596,-7.499051,-0.721886,-9.299909,-8.962794,4.782219,8.302995,8.727359,0.778090],[7.245740,-0.060254,-6.599319,9.240025,-9.574014,-5.872925,-8.038873,6.943162,6.245465,4.474302,-0.616591,-0.146720,-2.768023],[-6.086467,-5.447999,3.790667,-3.737599,5.999350,-6.275493,5.618471,3.508424,0.634411,9.313475,0.626933,5.918406,1.113405],[-6.366208,3.408339,2.777035,7.597460,0.756600,-1.097082,-1.875181,-1.253890,-6.313733,2.599275,-9.421269,5.431407,6.973444]],[[-8.290425,4.529239,2.496118,7.441898,0.778947,-7.496633,1.554292,1.412053,-8.394646,5.355312,0.826631,-2.613242,-1.253502],[1.262103,-5.729119,-4.342909,7.563843,-0.534187,7.639071,3.351869,5.881993,6.438211,2.482689,-5.336713,-1.486347,3.278266],[1.339793,-0.445527,-4.846479,-1.980284,9.954700,3.896352,-2.345937,0.600338,-1.421909,-4.193030,-1.994237,-3.268476,0.939534],[9.473449,-0.388870,5.387209,-9.056869,3.548002,7.284203,-4.157420,-3.298991,-8.916986,6.989481,0.354020,-3.097164,7.652634],[2.057660,3.124665,-1.559047,3.394898,3.143516,7.893596,-9.331515,-6.484779,-4.962266,-6.908616,-1.300224,5.200810,-2.716610],[6.367446,1.842409,-1.967671,-5.589067,0.218854,-9.858746,-6.773961,2.763492,-2.278160,-3.229832,0.706989,4.959271,-8.443781]],[[-6.750047,6.747142,-4.621324,-5.068925,-4.185154,-9.363382,-7.453350,4.849370,-4.654634,-7.887543,3.747130,-9.221112,9.611465],[-3.475788,0.924618,-0.166523,4.766730,1.390970,6.145105,9.936969,-6.678115,-6.369428,1.561283,9.133557,3.015163,5.568013],[-4.696811,0.834827,0.316874,-8.640543,-9.270887,1.321094,0.363535,6.926204,-8.144587,-5.788772,-4.924030,9.846173,-2.384531],[-2.705130,-8.841968,7.477625,8.439903,-2.657260,-0.711066,0.544972,3.357578,-3.593345,5.453994,9.528207,-9.965507,-5.215101],[8.321163,-7.176824,9.210745,6.655628,-1.719598,-8.118965,5.648422,2.734353,-9.595985,-1.688901,9.711569,-9.333162,-8.338991],[-1.729780,5.294259,-3.062931,-1.664407,-1.791940,3.097680,5.785949,-0.192266,3.878365,-5.459077,-2.711605,0.872471,-9.128133]],[[8.797660,-9.389126,9.832094,8.208096,3.831823,5.779368,-3.679262,4.703769,0.668772,-2.605554,3.068520,-4.240427,-1.018520],[-7.273255,1.368026,-7.832358,0.459868,2.379533,3.238285,8.158959,-9.163434,-3.770064,-6.127256,-5.241139,-4.245210,-9.736741],[-4.194251,0.638837,1.076576,-1.872899,-5.994995,6.129521,6.080006,-1.342579,5.852358,-8.363600,-9.559294,0.717050,-1.050745],[7.529373,-9.762656,-2.531226,-1.243563,5.557146,1.411424,-8.240581,-3.313745,6.756797,-0.664693,-5.011199,9.692151,0.901188],[1.024282,5.689152,-6.862751,-6.213837,-0.620692,5.118046,-3.689347,-4.760814,6.823871,8.907128,-3.968669,9.235708,1.444749],[6.378278,-5.059587,-7.881670,2.361259,-9.569892,-6.776970,-0.822594,1.728381,0.082403,-5.599339,-4.823956,1.066201,7.475157]],[[-2.536788,-1.214476,-5.464131,3.840319,2.127565,-0.159010,0.760731,-4.718369,4.787511,-5.433569,8.333011,-5.124099,6.626194],[4.431273,-4.612795,-1.579692,8.051939,-4.870233,-9.128846,4.740574,-1.240847,-1.797518,-2.723464,9.982316,6.185281,-7.309999],[-6.335664,-4.339300,3.523512,-3.190951,-0.185890,5.862701,5.323827,0.308390,9.545407,7.153654,-5.167299,0.543422,4.986985],[-4.244428,-3.297365,3.849255,0.691181,-1.614774,7.376356,0.045648,5.488519,2.791503,-0.736851,3.196745,3.757794,5.690407],[-1.262277,-4.908844,-6.819148,6.815074,-1.573505,3.362869,-3.047554,-3.993413,-6.019213,-4.674515,-4.222884,-2.252888,-1.714821],[-3.375435,3.264444,-8.064408,-1.412701,2.608818,2.909381,4.940119,0.082464,-9.656345,-3.558356,9.434917,-2.857328,8.484145]],[[3.014326,5.878798,2.287486,-5.538733,-9.970807,-9.574695,7.433399,6.230783,-1.154720,-4.062221,8.243819,-7.946509,-4.418572],[-2.554057,5.503434,7.817292,3.609831,-5.099676,2.307803,6.288836,8.658800,-7.451352,6.836161,-7.732064,3.769268,7.009967],[0.653787,-9.826762,1.697023,-8.489796,-3.325784,-2.154337,-9.886951,-0.562436,9.757428,1.710734,-7.652365,4.159061,2.839358],[4.734337,1.963328,7.935388,-8.025575,-9.756686,-2.182724,-5.849133,-7.474787,2.657722,-5.175520,-6.786387,6.944898,-7.673275],[-3.925145,-0.590796,9.786763,-5.536892,-2.077529,6.648912,4.451362,5.121183,-5.159684,7.883517,-2.031754,-5.739612,-4.645305],[-1.493931,-0.859199,5.269581,-2.956293,9.109718,-7.609184,-0.060419,4.999303,1.047362,8.737816,4.181568,1.074301,5.023976]],[[6.964677,-5.748790,-7.440341,2.763588,5.950355,8.602833,-6.383348,-0.136831,-6.793011,-6.335637,-0.591099,7.568228,-8.819494],[-4.351841,5.863043,2.118803,9.504364,-4.695963,-5.510241,-2.157386,8.085142,6.434219,-0.061477,-2.745691,5.678081,3.274629],[-1.478634,0.837197,7.282625,-7.373994,7.820064,9.558538,2.933376,7.863390,2.427372,-5.380919,7.505832,1.527729,0.648966],[1.324044,-7.464648,-1.444410,2.581587,2.810806,1.952648,2.017224,1.698591,2.681543,-7.489761,-4.279069,8.818523,-9.478974],[-9.803242,-8.965627,3.148292,-1.225489,-3.992459,0.504493,9.662593,-1.801064,-0.090840,0.626995,-8.334128,2.588925,4.485397],[5.890959,-5.162387,-4.742540,6.569704,-9.926057,-8.305885,-5.341181,1.428772,-9.451430,-3.211952,-0.672377,-8.604868,-2.595527]],[[-8.294053,7.122086,7.828466,-8.610687,6.421828,-0.948795,-1.397703,9.583913,-4.916956,5.122863,1.568503,-2.777202,7.549522],[9.055821,-3.801589,-3.213888,5.594990,4.189112,-1.240166,-0.437959,-7.790173,-3.790579,3.826051,4.014066,7.400680,4.318030],[-0.300499,-5.932391,-0.376755,2.598079,6.684328,-6.607898,2.328711,0.304422,0.201497,2.446946,3.499783,-8.050686,-3.089615],[-4.562029,6.368936,-0.530756,4.004715,2.386835,-6.097175,-0.181280,-1.790807,-0.009870,-6.405841,-5.704903,5.609650,3.391457],[8.893816,9.989132,3.869049,-4.050056,-1.014380,-7.489305,3.109273,4.296576,-7.889906,-9.545798,-8.391894,7.682819,-2.637262],[2.704710,3.029031,-7.349579,-2.732499,-5.344598,8.763184,-8.724162,-4.221312,7.116537,-7.321924,6.287804,5.555514,-3.592620]]], dtype = "float32")#candidate|4626|(13, 6, 13)|const|float32
bop_4627 = relay.bitwise_or(uop_4619.astype('uint64'), const_4626.astype('uint64')) # shape=(13, 6, 13)
bop_4630 = relay.bitwise_or(uop_4621.astype('uint64'), const_4626.astype('uint64')) # shape=(13, 6, 13)
output = bop_4627
output2 = bop_4630
func_4631 = relay.Function([], output)
mod['func_4631'] = func_4631
mod = relay.transform.InferType()(mod)
mutated_mod['func_4631'] = func_4631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4631_call = mutated_mod.get_global_var('func_4631')
call_4632 = func_4631_call()
output = call_4632
func_4633 = relay.Function([], output)
mutated_mod['func_4633'] = func_4633
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4683 = relay.const([[[3.008447,-4.841480,-1.420411,-4.581998,-8.164979,-6.985483],[5.394530,-0.377264,-3.711435,5.802628,-5.544603,-8.147551],[-7.427472,-0.348514,-9.575679,5.466016,-4.659343,-8.443574],[3.388553,-3.378168,-0.028207,-6.014900,-1.619948,0.967777],[6.867791,4.865849,-2.495644,-0.450444,8.175666,9.148307],[-8.836482,0.968560,-8.138444,5.423113,-3.883329,-1.418340],[-9.120151,9.894744,6.318042,4.673147,0.861838,-3.657709],[9.990554,-9.026722,7.275463,-9.088429,2.773369,-4.411756],[-2.100710,1.679143,-4.766074,4.090062,7.167358,4.760627],[0.970029,8.903437,-4.992337,4.156834,-9.516017,-7.768866]],[[6.948880,5.821277,-9.532760,1.345617,-0.116981,9.360157],[-6.094829,1.190025,8.044411,-0.414654,-6.210261,-6.780230],[-6.985879,-9.086220,8.468117,-7.612023,9.643143,9.212367],[-2.484974,-6.305151,-6.947371,4.378976,3.702083,-2.260566],[9.264239,4.838846,-9.342210,-8.090735,0.790735,-4.737406],[3.206726,-7.025918,-5.004957,-6.480215,-2.910930,6.956529],[8.366278,1.064689,-8.882033,4.143658,-8.553102,2.799137],[-1.210889,9.172469,-1.779325,4.864836,1.976399,-2.292624],[0.255386,-5.554832,-6.014290,-4.237746,-1.822216,-6.840814],[9.455185,-9.314269,-6.166130,2.393256,-6.295551,0.316880]],[[-2.451274,-7.442983,-4.183418,7.984498,-7.987207,3.894303],[-1.317573,-1.550429,6.894560,9.587614,-7.184229,-0.947266],[0.537552,-3.996726,5.384246,-0.088848,-9.916035,2.609594],[0.815717,-8.765552,-3.434911,-8.772752,-5.439690,0.757051],[3.940933,-0.539983,-9.489642,6.414987,-6.102151,7.161645],[4.657067,8.728196,6.395419,-0.276396,-0.761783,-1.114132],[-1.823300,8.661515,6.224583,-8.438728,4.424672,-3.521246],[3.994511,2.060686,7.472410,8.861362,-8.717289,-5.015668],[8.328894,-7.525258,-0.068108,-4.526270,-8.137992,8.618141],[-9.095145,-5.098255,-4.057031,-4.975030,-6.317477,-9.312915]],[[-1.210084,-6.946328,-2.683485,-4.877723,3.099775,1.302308],[0.847776,-6.431572,4.803803,8.749003,2.644728,2.977325],[0.618912,-2.046310,6.355282,5.112442,-3.903611,-0.463231],[1.634855,1.172180,-8.371415,-4.619147,-8.183129,0.801180],[-5.380790,-7.926528,-1.696573,8.976137,1.239872,-5.724365],[-9.344411,-4.907495,1.963267,-0.009752,-4.496809,-5.024426],[-0.066980,-8.637412,5.256552,9.003369,7.784531,-8.150230],[3.669794,5.342596,6.406510,-2.280657,9.361554,-9.871785],[6.770932,2.015837,-2.259695,-3.990170,-8.868570,-8.623253],[-2.844745,7.689724,3.424067,-9.391017,-1.985562,4.999485]],[[6.956656,8.014374,-8.835354,5.195153,-3.973035,1.434288],[-2.358534,-6.888054,4.973425,7.386884,-9.734894,6.500569],[-8.264502,-3.920002,2.693440,-2.691272,5.416078,2.450129],[3.336142,-3.915916,-0.825318,2.772539,5.553432,5.160131],[-6.176361,2.828410,-0.949641,-5.471333,-8.304261,5.818430],[-8.475740,-6.044526,8.420063,9.032455,-5.539021,3.863846],[-2.326380,-7.515727,-6.158090,-1.451742,-2.217802,6.024654],[-2.175026,9.590511,-5.389914,-7.958436,-5.955195,5.348481],[-6.992161,-2.675605,-9.135192,7.203141,-2.612684,-6.746668],[-4.482035,5.004072,-7.019680,1.802373,-8.113073,3.697097]],[[9.496212,7.356902,-0.651228,5.965314,-6.687363,-7.764557],[7.491820,9.071349,2.757410,-5.465364,-8.279663,-4.614153],[-0.528707,0.072436,-6.329212,-1.245474,-9.128184,8.988313],[-9.280232,7.662974,-4.538233,3.181859,-2.352114,-7.175236],[-1.358388,2.903156,-0.168655,-5.035026,3.251650,-0.073451],[-7.058116,2.823366,-1.807146,-8.918722,5.950416,1.318467],[8.972885,-1.672922,4.703097,9.182605,9.166545,-3.821881],[-8.538349,7.432235,-7.592589,0.782984,-9.852635,6.966196],[4.394409,5.847553,-6.461619,-4.926288,9.409352,4.915827],[9.472106,-3.670109,7.881021,6.687982,7.167656,6.973819]],[[-8.962765,8.674265,3.047103,4.747361,-0.474981,5.845291],[-1.677084,-7.790893,-3.184339,-7.574395,-0.226810,1.870045],[-9.474132,0.062520,2.860446,4.301371,7.862503,-4.729729],[-6.832569,5.114649,-8.122204,5.611965,-3.052302,-5.939426],[7.809993,3.481458,8.792358,7.546598,7.795804,-0.014456],[0.320937,-5.272169,-9.927221,5.864771,-5.422556,7.689642],[5.499452,0.720327,-9.063251,5.357310,6.254672,6.489664],[1.569404,-9.922633,0.911921,6.205852,-5.934322,9.396359],[-0.517810,5.782224,7.918611,9.045768,2.244853,-3.050204],[-8.658272,7.779695,-1.878506,-3.237541,3.642850,-3.244278]],[[2.768344,9.104430,7.300852,-2.927479,4.821590,5.240221],[-8.185319,-1.699032,5.234984,7.937162,-6.622584,9.604855],[4.850625,-5.183212,-5.968383,0.360662,-3.301960,-8.884388],[2.490181,2.184052,-6.501414,9.222199,1.235901,5.942867],[5.126357,-3.123311,5.743580,-3.017368,5.703182,-8.202330],[-6.927508,-5.351721,-8.377178,-6.067296,8.867702,1.048844],[-1.780988,1.303617,-8.852030,8.949757,9.119215,9.757936],[5.893647,-0.039208,-3.938719,1.458452,-5.697210,1.412284],[-2.934066,4.394280,4.471680,2.183502,9.838902,8.806090],[3.677309,3.282788,-3.763539,-2.426526,6.841717,-3.640058]],[[0.179221,-8.831700,8.509246,-9.252744,8.371196,-6.990619],[-0.199346,6.830145,-4.579536,0.880265,3.882814,-1.712775],[9.107741,8.022944,7.939931,-1.261938,0.626672,6.890888],[-3.003980,-7.446607,7.226667,-6.734015,6.068821,4.737057],[-9.872860,9.549936,-9.704121,5.962572,-2.535635,-2.264239],[4.014117,-3.094783,9.708499,6.538896,-6.895115,6.433092],[-1.908318,7.296695,2.508799,7.299461,-5.197498,5.384579],[4.943818,-4.685209,-0.680069,1.570623,-3.629058,-7.080235],[9.664319,2.002115,-5.888398,3.412100,8.812879,-9.941163],[-9.973717,-6.519841,-1.251092,6.511737,9.964895,-3.751789]],[[-0.347434,3.833885,7.850257,-7.995696,9.212502,-9.895240],[-9.931782,2.862608,9.359498,8.033376,5.677205,-8.666423],[8.864760,2.689777,9.469743,-8.376367,-3.943810,-4.091703],[-2.709401,-9.666769,5.245868,0.111428,2.184602,5.092548],[-3.576936,-1.539657,-3.849521,2.399569,-4.396546,-2.640758],[-9.551747,5.791274,-9.464065,8.252158,-6.591562,5.305450],[-6.748796,8.627586,0.600907,-7.294317,7.459972,0.188512],[0.164878,-0.046220,-3.331849,-2.572351,8.768565,1.356453],[0.269442,-4.238687,-4.162309,3.905594,-7.911605,-3.734226],[9.950866,5.720865,7.604691,8.486883,-3.053891,-0.113632]],[[-9.785080,9.926278,-2.173886,-0.520455,9.306694,8.639431],[-0.419781,2.453035,-8.528825,-8.537540,-6.884755,-4.331003],[-6.160878,4.319068,9.617685,3.938972,-0.488348,-2.192236],[4.528907,-4.833147,4.975865,8.473880,5.016892,7.393407],[-7.272354,5.581859,0.085639,0.431942,5.814645,-1.739334],[-9.908416,8.796552,2.437295,-3.732027,-6.282497,4.588316],[-9.907591,4.298319,8.583262,8.614479,-4.087734,8.600371],[3.386873,9.685541,4.144735,8.238117,-7.900564,-6.934876],[-1.717132,-8.674528,2.429626,2.514844,-1.787835,5.696052],[5.659816,-4.312464,-5.009377,3.765610,-4.183121,-5.067538]],[[0.657664,9.263767,-8.845917,5.507524,-9.722057,2.374587],[2.563329,-6.062550,2.699769,-7.304261,-1.236536,-5.437821],[-4.815645,-2.957731,8.598896,-2.471715,9.681298,-7.107954],[8.231338,-0.188985,6.830186,8.060654,-4.386244,7.146521],[-9.741067,-2.093881,-9.266332,4.307431,6.152067,3.227551],[-4.267018,8.863641,5.980177,-1.744361,1.772990,7.860856],[-3.297532,1.948156,-6.638512,2.890712,-7.016051,5.123656],[-8.259857,7.288995,0.503483,-6.531359,-0.930915,3.837818],[9.752417,-5.414864,-9.458581,-3.874530,1.027768,-9.698958],[-4.680896,-1.344763,4.043365,3.536430,-1.820398,4.929829]],[[4.300301,7.590194,5.399093,5.178337,-7.653833,8.779822],[7.676936,-3.620551,-0.921966,-0.253156,-8.042279,4.985660],[3.102201,8.232705,-2.940214,3.884390,6.737904,2.910535],[2.885627,8.817084,2.090145,-5.083954,-3.340474,6.972774],[4.838308,9.171849,-6.400832,-4.593800,3.983192,9.349697],[-0.389148,8.025308,3.888071,8.034229,-0.452268,5.301532],[8.452447,-2.996299,-0.339733,-5.266738,-1.898545,6.812517],[0.698586,-9.477962,2.140044,-5.898513,-8.827707,3.242404],[-9.198303,-8.191289,-4.558177,-3.385290,8.835231,4.436309],[-1.234606,-4.170819,-0.338488,6.884283,6.490747,-7.177399]]], dtype = "float32")#candidate|4683|(13, 10, 6)|const|float32
uop_4684 = relay.log10(const_4683.astype('float32')) # shape=(13, 10, 6)
bop_4686 = relay.mod(uop_4684.astype('float64'), relay.reshape(const_4683.astype('float64'), relay.shape_of(uop_4684))) # shape=(13, 10, 6)
uop_4690 = relay.atanh(const_4683.astype('float32')) # shape=(13, 10, 6)
func_3663_call = mod.get_global_var('func_3663')
func_3665_call = mutated_mod.get_global_var('func_3665')
call_4694 = relay.TupleGetItem(func_3663_call(), 0)
call_4695 = relay.TupleGetItem(func_3665_call(), 0)
func_4013_call = mod.get_global_var('func_4013')
func_4017_call = mutated_mod.get_global_var('func_4017')
var_4700 = relay.var("var_4700", dtype = "float32", shape = (660, 4))#candidate|4700|(660, 4)|var|float32
const_4701 = relay.const([0.526302,7.111496,-1.062632,-0.081665,-6.254932,9.815219,-2.511458,-7.061418,-2.737836,0.534689,-1.517132,-4.616596,1.454718,-5.204172,-0.348482,8.226051,8.029609,5.616633,0.661897,-1.025932,6.276387,-8.584841,-7.782101,9.994256,3.800910,-8.033666,-8.033012,6.908555,9.442666,1.228744,-8.367881,-9.637309,0.649410,1.559345,3.728832,3.472471,8.244268,7.417601,-1.832042,-1.761642,4.989230,-6.893705,-4.161747,7.076634,0.383194,1.213383,0.845450,9.168954,9.713412,-9.012485,2.099754,-2.917419,0.722893,-8.021183,-3.001102,4.242979,0.690941,-9.957477,9.616182,4.036000,-7.703146,7.034276,-3.861867,-6.175029,9.137039,9.554903,-3.857170,-5.347954,2.541286,-8.418053,5.365427,7.406245,9.766778,-5.859355,8.401883,1.140471,7.342364,8.703295,-9.792392,0.867003,-7.261195,-0.397371,-2.385149,-8.556100,8.278121,-4.883779,3.958018,8.311811,8.976139,6.333784,2.602894,-9.397328,3.301229,7.988914,7.605252,-9.605781,5.340750,9.221461,7.321429,4.689365,-9.421710,2.299321,1.019495,-7.124960,3.935855,6.396872,-7.149702,1.275648,5.531846,4.894341,8.512241,9.390144,-6.068186,1.548368,-9.155562,-0.732346,-6.472289,-8.931780,-7.492010,-3.684850,8.298082,6.100344,5.369980,1.194294,1.139036,0.230347,-6.514755,5.841554,8.563323,-4.785103,3.661199,-9.585251,9.729542,1.905311,2.761095,4.587395,8.314118,9.891988,6.679600,1.404519,3.841354,0.441308,1.627788,4.610983,7.106201,6.216985,-4.627092,-5.645098,-6.138833,-6.542022,6.726986,-8.138717,-0.450309,2.243204,9.986098,-0.823827,-0.833201,-1.143763,-3.155294,-6.576333,-2.469670,-5.810409,-2.728878,-2.345732,-0.103688,-4.931396,-8.367123,-1.062827,-8.782845,-1.840863,-5.693782,7.666470,-4.507832,7.201192,7.631415,3.428211,8.993273,-5.129507,-2.074103,-1.551687,1.743889,7.454304,-1.125135,-1.421895,0.431711,-2.770666,6.688656,-6.687861,5.383535,-2.549374,-1.115524,-7.678684,1.299800,9.013299,7.924532,-2.692848,-3.493022,-2.699657,9.779586,-8.127665,5.048467,2.323158,-4.336891,3.437482,3.354134,-6.410716,6.325572,1.995298,9.023465,-5.834439,-3.053358,-7.624705,-8.862569,1.244409,2.582199,6.041761,-9.704914,-9.057484,-2.148785,2.578587,2.848415,8.788774,-8.825239,-4.953428,7.240293,4.947004,2.201782,6.679677,-9.041301,-4.072239,-2.673502,8.600501,-2.459964,1.813737,1.193886,-7.550009,-1.520846,7.825932,-0.220691,-4.681789,-4.590021,3.792391,4.262677,-4.889557,-0.489141,-2.150694,-7.635964,7.024216,3.668372,1.689602,3.002744,0.290313,-8.198656,8.614406,-2.136275,-9.095297,4.572086,5.079237,-7.185679,-1.997779,-4.296194,7.064329,-2.617285,6.151071,7.706707,-9.442358,-1.694785,-4.326602,-6.139414,9.271004,-0.770358,-3.647477,5.906884,-2.725887,0.759335,-9.118693,9.661293,-8.128149,2.301989,1.194456,-3.120723,6.028740,-2.406170,2.818211,4.025731,0.087493,8.888911,8.851417,7.842110,-5.516239,5.319242,-3.765304,3.927744,-2.917414,-6.848980,3.941176,-3.848239,4.485887,4.761600,9.982227,6.956357,-0.198566,-4.635828,-6.928980,7.696781,-8.458792,6.963101,-1.724318,3.186204,3.408051,-3.189239,9.606983,-3.289003,8.142323,5.443850,-2.607779,-7.934343,3.681837,5.681687,-2.476000,0.715017,9.287575,-8.990168,0.530910,-0.118180,9.672458,8.105006,9.457886,-8.718512,9.750218,-9.217779,-5.982779,-9.381018,2.337718,1.121270,9.553622,5.943609,-4.848169,-4.735267,4.082464,-0.454852,4.060111,8.360722,4.406090,-7.855480,-0.461618,5.342380,5.652909,-0.124141,2.841532,-2.378958,-6.680082,9.324814,9.622652,-7.066441,-7.399899,-1.110059,4.903315,3.268274,2.225960,3.912245,-3.230508,-4.892763,7.568808,-2.458502,6.231151,0.603276,-8.974939,-5.000975,-3.126874,3.488292,0.587713,-6.613681,6.068492,-8.986785,2.397754,-8.107015,-1.511555,2.015136,-5.892986,-0.030897,4.127154,5.675534,-8.665007,8.524630,8.087516,6.733703,-7.625773,3.302340,0.414847,-7.595966,3.629924,-6.532792,-4.065007,9.119039,-4.957486,-8.465842,1.491341,4.853675,2.272036,-8.939407,3.521526,0.255669,-6.464939,-5.383165,-8.106934,-1.262768,2.724703,2.528828,0.892369,-6.631901,-0.039949,1.016883,1.355918,8.620285,3.702950,9.147992,-3.830981,0.933924,9.574751,-0.297323,-3.954452,9.398246,-5.429013,9.492944,-3.937767,3.311752,-8.877286,-3.689028,8.031007,-8.016841,-2.286149,-1.148671,1.197546,2.499741,3.115563,-8.131463,-8.053521,1.200989,8.663453,-0.218391,2.777561,-5.559823,-8.909176,8.068692,0.488722,8.550488,9.061280,-3.170158,2.368820,5.061368,6.134487,-1.693856,4.215807,-3.910872,8.212161,-0.655080,-0.090682,-9.824880,-5.225440,0.442576,-1.699983,0.257716,-2.195088,-7.848950,9.602353,-5.814208,5.740297,-1.355803,-3.287222,5.229553,-9.952833,-5.600998,4.555155,5.700205,-5.592355,7.286019,0.392925,-7.202813,-8.164046,5.091462,-7.320634,-0.872937,4.824113,7.596452,-9.154435,0.656655,-6.968880,2.173701,-9.631222,2.474265,9.731075,7.196459,0.138518,-5.123415,-3.024446,2.809725,0.195714,8.744201,5.335696,3.697910,1.923282,-4.470597,-0.223321,4.087511,-2.161218,-1.052668,3.185843,4.711238,3.377239,-4.724530,0.333274,2.468780,-8.617637,9.662070,7.871317,1.543846,8.099231,-9.355994,2.692499,0.994240,5.928018,-8.014479,8.765208,0.811138,5.761659,3.333122,-3.300797,-1.240177,9.509125,-0.968681,-5.842817,2.970586,1.146473,9.700280,-1.258556,-6.829067,-3.183457,-6.821531,-6.900162,8.348537,-1.968202,5.651715,1.108171,8.593295,5.065793,7.731133,5.587954,-0.797836,-2.675177,8.381451,-6.899658,-9.624665,-8.068472,-8.641607,9.751645,7.382434,-7.749595,-3.543044,-8.511113,-5.365336,3.791801,7.473437,6.638803,0.234260,9.398915,-6.535693,-6.570795,2.160111,5.255763,-7.522693,3.281991,-3.952147,-0.109091,6.716053,-4.008563,-6.971900,1.403140,-0.813076,2.546732,-7.333765,2.277652,-5.376617,-3.804015,-7.362613,-6.315999,-4.952821,-4.813889,6.161162,3.219008,7.974320,1.970111,8.060893,5.565249,3.987855,5.069724,-9.116551,-1.930012,-2.373647,-1.592173,-2.669524,9.767442,-5.490743,-9.543032,-0.908446,-0.410037,4.799527,-1.342216,-3.631778,2.735801,-4.840762,0.750039,3.330495,-9.026793,-2.063226,-9.476117,9.341580,1.274309,-8.296261,5.316324,1.516640,-1.499162,3.410723,5.508243,1.712024,4.216063,9.234919,-9.101810,-4.637422,9.242141,0.482693,-0.283139,5.886403,-5.744820,3.669423,3.348064,6.283069,4.953713,-6.495312,-5.986214,1.267771,8.253262,-3.762660,8.651524,-0.339147,-2.905898,6.377927,-5.839063,-7.253284,-8.264103,8.794905,9.362445,6.179918,6.988457,3.006003,3.079540,-8.274636,-6.084037,-3.476675,7.706682,-4.037993,-2.834877,-2.793085,-4.594367,3.033402,-3.691581,-5.924917,9.738378,8.691682,2.393119,-9.568499,5.346148,-0.560016,-0.940545,-0.315585,6.684884,3.288875,-5.107356,7.873280,-7.278771,1.528623,6.666451,-7.299153,5.971997,8.001012,1.617379,-9.467059,-9.101335,-6.809446,0.201484,0.694249,7.531922,9.707583,-0.936039,-8.374117,0.498024,-1.553330,-0.317336,-1.414688,-5.271681,-1.335993,1.809359,-4.330637,8.224916,-5.872861,3.066651,-2.910735,-8.315603,-8.718110,-5.579510,-6.622945,-3.013301,-4.845774,3.939094,2.741237,-8.486124,1.963083,-0.756667,-0.683822,-9.171516], dtype = "float32")#candidate|4701|(720,)|const|float32
call_4699 = relay.TupleGetItem(func_4013_call(relay.reshape(var_4700.astype('float32'), [11, 15, 16]), relay.reshape(const_4701.astype('float32'), [12, 60]), relay.reshape(call_4694.astype('int32'), [1089,]), ), 1)
call_4702 = relay.TupleGetItem(func_4017_call(relay.reshape(var_4700.astype('float32'), [11, 15, 16]), relay.reshape(const_4701.astype('float32'), [12, 60]), relay.reshape(call_4694.astype('int32'), [1089,]), ), 1)
func_3546_call = mod.get_global_var('func_3546')
func_3547_call = mutated_mod.get_global_var('func_3547')
call_4703 = func_3546_call()
call_4704 = func_3546_call()
uop_4715 = relay.exp(call_4703.astype('float64')) # shape=(1089,)
uop_4717 = relay.exp(call_4704.astype('float64')) # shape=(1089,)
output = relay.Tuple([bop_4686,uop_4690,call_4694,call_4699,var_4700,const_4701,uop_4715,])
output2 = relay.Tuple([bop_4686,uop_4690,call_4695,call_4702,var_4700,const_4701,uop_4717,])
func_4721 = relay.Function([var_4700,], output)
mod['func_4721'] = func_4721
mod = relay.transform.InferType()(mod)
mutated_mod['func_4721'] = func_4721
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4722 = relay.var("var_4722", dtype = "float32", shape = (660, 4))#candidate|4722|(660, 4)|var|float32
func_4721_call = mutated_mod.get_global_var('func_4721')
call_4723 = func_4721_call(var_4722)
output = call_4723
func_4724 = relay.Function([var_4722], output)
mutated_mod['func_4724'] = func_4724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4075_call = mod.get_global_var('func_4075')
func_4077_call = mutated_mod.get_global_var('func_4077')
call_4761 = func_4075_call()
call_4762 = func_4075_call()
func_3160_call = mod.get_global_var('func_3160')
func_3162_call = mutated_mod.get_global_var('func_3162')
call_4765 = relay.TupleGetItem(func_3160_call(), 0)
call_4766 = relay.TupleGetItem(func_3162_call(), 0)
func_3180_call = mod.get_global_var('func_3180')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_4782 = func_3180_call()
call_4783 = func_3180_call()
output = relay.Tuple([call_4761,call_4765,call_4782,])
output2 = relay.Tuple([call_4762,call_4766,call_4783,])
func_4798 = relay.Function([], output)
mod['func_4798'] = func_4798
mod = relay.transform.InferType()(mod)
output = func_4798()
func_4799 = relay.Function([], output)
mutated_mod['func_4799'] = func_4799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3663_call = mod.get_global_var('func_3663')
func_3665_call = mutated_mod.get_global_var('func_3665')
call_4800 = relay.TupleGetItem(func_3663_call(), 0)
call_4801 = relay.TupleGetItem(func_3665_call(), 0)
output = relay.Tuple([call_4800,])
output2 = relay.Tuple([call_4801,])
func_4804 = relay.Function([], output)
mod['func_4804'] = func_4804
mod = relay.transform.InferType()(mod)
mutated_mod['func_4804'] = func_4804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4804_call = mutated_mod.get_global_var('func_4804')
call_4805 = func_4804_call()
output = call_4805
func_4806 = relay.Function([], output)
mutated_mod['func_4806'] = func_4806
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3343_call = mod.get_global_var('func_3343')
func_3345_call = mutated_mod.get_global_var('func_3345')
call_4828 = func_3343_call()
call_4829 = func_3343_call()
func_2801_call = mod.get_global_var('func_2801')
func_2802_call = mutated_mod.get_global_var('func_2802')
call_4832 = func_2801_call()
call_4833 = func_2801_call()
func_3464_call = mod.get_global_var('func_3464')
func_3468_call = mutated_mod.get_global_var('func_3468')
const_4835 = relay.const([-8,-8,-3,9,4,-3,5,5,10,8,-6,-1,-3,-1,2,8,2,-6,8,4,-1,3,6,10,1,-9,4,2,-4,-8,8,8,-4,4,10,-4,-4,-10,4,-8,8,1,-9,1,-3,-4,9,-2,6,4,3,10,-4,8,8,10,7,-2,-4,2,4,-10,-7,5,-10,1,7,-1,-10,9,-8,6,10,-2,10,2,9,8,-6,-9,-2,-8,-2,9,9,-3,-7,-10,6,-3,-5,4,-7,-10,-5,-7,-1,-5,-5,6,4,-1,-8,-8,-5,5,-6,-6,9,-7,-4,1,-1,-10,-5,-2,-8,10,6,-4,-10,2,6,-10,1,9,-2,-5,-9,9,3,-2,4,9,-9,2,-10,5,10,2,3,-9,4,-5], dtype = "int64")#candidate|4835|(144,)|const|int64
call_4834 = func_3464_call(relay.reshape(const_4835.astype('int64'), [16, 3, 3]), relay.reshape(const_4835.astype('int64'), [16, 3, 3]), )
call_4836 = func_3464_call(relay.reshape(const_4835.astype('int64'), [16, 3, 3]), relay.reshape(const_4835.astype('int64'), [16, 3, 3]), )
func_2403_call = mod.get_global_var('func_2403')
func_2404_call = mutated_mod.get_global_var('func_2404')
call_4852 = relay.TupleGetItem(func_2403_call(), 3)
call_4853 = relay.TupleGetItem(func_2404_call(), 3)
func_2403_call = mod.get_global_var('func_2403')
func_2404_call = mutated_mod.get_global_var('func_2404')
call_4892 = relay.TupleGetItem(func_2403_call(), 1)
call_4893 = relay.TupleGetItem(func_2404_call(), 1)
var_4904 = relay.var("var_4904", dtype = "float32", shape = (720,))#candidate|4904|(720,)|var|float32
bop_4905 = relay.bitwise_or(call_4852.astype('int32'), relay.reshape(var_4904.astype('int32'), relay.shape_of(call_4852))) # shape=(720,)
bop_4908 = relay.bitwise_or(call_4853.astype('int32'), relay.reshape(var_4904.astype('int32'), relay.shape_of(call_4853))) # shape=(720,)
func_4312_call = mod.get_global_var('func_4312')
func_4315_call = mutated_mod.get_global_var('func_4315')
const_4919 = relay.const([-4.202849,-7.885908,9.835593,-6.048769,3.872059,-0.843619,9.704614,-3.724289,9.177014,1.911778,-3.992831,-0.523534,1.668456,3.756483,-2.530109,-8.016275,1.795534,-7.764369,8.977720,-8.738188,2.330868,1.753778,-9.119354,9.840997,-5.872138,-1.263374,8.878634,-4.279654,-5.606926,-7.835170,4.750094,3.701237,4.236097,0.284009,-1.079988,-2.544349,-3.985739,-3.395570,5.537422,-0.969598,-0.379352,-5.026180,-4.691483,-2.270990,-9.074261,5.894131,-3.455956,0.355122,-5.572190,-9.248399,-8.963814,-3.970888,-5.158034,6.251218,-8.504944,-2.679627,-7.757602,2.056844,0.979635,3.691836,-3.057386,8.336907,3.120070,-9.090709,2.152200,8.654153,9.476615,-3.236331,-9.778213,8.443238,-1.570623,-5.472085], dtype = "float64")#candidate|4919|(72,)|const|float64
call_4918 = relay.TupleGetItem(func_4312_call(relay.reshape(const_4919.astype('float64'), [72,])), 2)
call_4920 = relay.TupleGetItem(func_4315_call(relay.reshape(const_4919.astype('float64'), [72,])), 2)
func_4207_call = mod.get_global_var('func_4207')
func_4208_call = mutated_mod.get_global_var('func_4208')
call_4922 = func_4207_call()
call_4923 = func_4207_call()
func_3180_call = mod.get_global_var('func_3180')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_4949 = func_3180_call()
call_4950 = func_3180_call()
func_383_call = mod.get_global_var('func_383')
func_387_call = mutated_mod.get_global_var('func_387')
const_4954 = relay.const([[-7.856392,2.816954,-4.653163,-2.377701,-0.515876,-2.469963,2.493946,-5.127920,-0.332789,-1.393164,-3.344637,-1.081791,8.132314,-5.104584,-7.230035,2.823158,8.007006,-6.239501,7.052553,-9.385707,2.778599,-1.320963,-3.264873,-4.119665,-5.772970,-2.624519,-8.429856,-9.392800,6.741079,-4.173981,9.715335,-4.380981,-4.924005,-2.944664,-3.693499,-2.549795,2.285473,-7.137372,2.235508,5.332890,9.700309,-7.129784,-8.790701,4.394585,2.610830,9.735180,6.214327,7.297073,-5.095443,6.886316,6.671484,9.531398,3.811120,-2.298788,-2.161425,-7.994613,-0.391915,-6.133782,0.054346,-6.505555,5.377173,3.737455,3.938461,-9.881649,1.403614,-0.313777,0.611705,9.060812,-8.862107,2.226130,2.540331,-2.584572,0.308550,-2.834315,1.763562,4.692560,6.278918,6.781291],[-4.356408,-6.615233,-6.106146,-5.717813,-3.060552,-2.487345,7.731851,-7.401254,0.036377,-7.258013,7.708483,9.744305,1.456755,1.442193,-7.596183,-9.656697,-9.691762,-9.885697,4.861151,4.351694,-4.337195,-8.118003,3.060249,1.185260,-2.434852,0.323628,-0.190556,-8.214371,-0.544461,-8.309290,-7.307189,1.396044,-5.261045,9.468927,-3.286640,7.820317,-3.743666,-4.437631,-0.034196,-5.412424,-1.606322,-1.864442,4.050393,-4.491121,-6.472966,-7.840168,2.640770,-5.849061,2.807873,-9.758889,-6.108038,-7.739882,4.562858,-0.736231,-2.836678,-7.219469,0.687096,-5.109694,9.843857,-4.102690,9.655563,3.376802,-2.559512,-7.338316,5.689292,0.393100,6.088215,4.983221,-5.727307,-4.488710,-3.773716,5.445277,-3.350186,-3.795969,3.385673,1.018919,0.406227,6.816431],[-7.202238,5.212588,-1.368920,0.530515,9.317260,9.220915,1.058827,-2.106958,-5.751914,4.958168,0.616225,2.877994,-5.067250,-3.129438,1.630316,0.484368,9.456447,0.829982,8.605483,3.833564,3.144588,-2.293032,4.882473,9.735407,8.270586,-3.291871,-0.878552,8.656034,-4.894944,2.745616,1.851527,-7.390750,6.433798,4.073150,-2.049544,3.271482,0.906825,-0.368411,0.265301,-2.724059,-2.893038,2.052048,-0.058291,7.831321,-3.009321,-4.716272,7.178135,6.108446,8.219605,8.990091,7.648026,5.107361,3.101171,4.828423,5.326353,9.528981,-6.570570,4.613230,2.040216,-5.480104,1.746359,3.829065,0.962868,5.022375,5.993127,-5.959990,-8.391658,5.346509,-9.748864,-9.520216,9.527928,8.987038,-6.635255,-4.574320,-0.089836,-6.972011,-1.600287,-3.600749],[-5.569045,-7.485538,5.565526,-2.317381,-2.577936,2.710088,1.375969,0.837235,7.351357,-9.004336,9.498060,8.316257,5.569141,2.324305,0.178900,5.071935,0.093006,-5.003419,4.963969,-8.918617,-0.683996,-2.206187,8.894498,-7.591882,-0.714952,4.986636,-8.383707,5.258872,-6.187764,3.723971,5.407415,9.784722,-9.390865,3.804605,-2.810313,0.954340,5.317714,-6.002950,4.941514,1.406429,-6.186248,2.329448,2.345348,-4.771344,0.820920,9.347226,6.883380,-5.690942,-8.933166,1.943950,2.128198,-8.587840,-0.295121,-8.730029,6.460510,3.117762,-6.442118,-4.424660,-3.740418,5.671231,-2.922890,-4.420487,6.602912,8.467738,-6.653736,-8.970344,-4.100176,-0.271333,-6.405281,-7.899669,-5.738609,6.105338,5.395519,-5.186987,-2.420627,1.109396,-6.838384,-8.313930],[-8.051512,-5.100765,-8.203361,1.407997,3.385839,5.683294,-0.868436,1.562154,-3.438719,3.223180,9.369576,4.529004,9.006100,-9.999843,-2.700444,3.997181,0.215808,5.085179,-3.687085,-8.286905,-5.416018,8.044811,2.044709,9.397444,2.215935,2.198936,-2.618625,4.067161,-2.777775,4.525817,-6.697557,1.482217,-5.118247,-9.489406,7.870602,-5.571292,-4.261285,-7.940283,7.312911,1.189089,-2.808565,2.235106,2.253323,-5.136141,-7.787412,-2.773777,-9.092070,-5.393752,-2.245586,-9.351106,4.665576,4.447149,-4.954141,-5.715469,4.640830,2.346377,-8.978976,-5.874980,5.503938,9.367101,0.031231,-1.252562,-4.932399,-4.845371,3.075078,-5.141289,-1.338287,9.478405,-1.905688,-3.758106,2.354689,8.085655,-0.475612,-7.158476,8.647916,7.529927,6.086416,-9.056970],[7.073509,3.197661,7.350359,3.620196,0.570881,1.738275,-6.456992,-5.323348,8.528949,-4.037472,3.212027,7.145658,-3.286720,9.322919,-2.002150,6.104032,9.069703,6.352796,3.434165,-6.243341,7.978555,-4.653936,0.889078,4.915448,-7.408821,-0.052051,-6.919004,-9.455860,-1.716035,2.946464,-9.202477,-4.417387,1.573843,-0.397802,2.145395,0.360465,-8.425389,-9.482435,-1.159787,-5.582215,8.664342,3.613696,-5.765587,1.891062,9.112802,-3.818492,0.553363,6.227546,-7.860636,1.960756,-4.787570,-8.728310,-6.265245,-0.052871,-3.139153,-3.699880,8.175531,-1.255411,5.007003,6.740361,-5.092198,-6.125227,-4.523409,-0.496913,-9.914151,-2.673315,-0.203497,7.761255,-6.412756,-0.833928,2.960821,-3.797331,-4.315958,-6.527808,-5.566821,-7.701595,7.434138,7.036194],[7.420200,-9.154013,7.982105,-1.048846,6.836125,7.859290,-8.764496,1.899892,-4.936889,-0.026503,-3.690254,-0.845937,-0.660686,2.743531,-7.672646,-9.108865,-1.071255,4.364219,3.585476,1.953374,5.961573,-2.237404,-0.568546,1.040963,-5.107210,2.109946,9.559254,3.948053,2.311395,4.659819,1.988949,4.299796,5.371480,-8.444595,-5.609749,0.772743,-3.862177,2.759360,8.993564,2.665935,0.946765,-4.372114,-1.374531,-0.154896,-6.447285,3.145755,0.171404,9.394509,1.147640,-6.889328,-0.329399,-7.760137,9.753482,5.078106,-5.593536,-9.958748,-4.775025,-8.123861,6.292074,-1.456376,7.769391,0.667239,-8.987839,8.920428,-8.724481,1.854045,7.534500,2.844999,-9.945849,-3.563730,8.526597,-9.487841,3.325223,8.053984,3.129271,1.098229,5.520718,-0.258092],[9.374083,-8.283764,3.217547,-8.085369,5.157326,0.258892,8.599837,-6.808407,2.414376,-4.925298,-7.450295,7.294774,2.868730,-8.586721,0.956983,-0.038434,-4.652587,5.785763,-9.553559,-6.378576,3.061925,5.203822,2.285551,-2.235112,-6.138909,-0.794170,-2.149379,5.796784,-9.306317,-7.619962,-7.150752,-2.767014,6.605172,-6.738060,-6.154641,1.694032,-7.309993,-5.018219,0.042325,-1.539464,2.947636,-0.782673,-0.165571,4.349136,9.608674,0.052251,-8.213062,-7.060245,9.375145,8.847656,9.690388,7.511867,-2.521097,-2.186348,-7.426939,5.118545,7.958008,3.450998,7.854402,-5.508930,3.817093,-5.702740,3.382062,0.416350,7.600174,-8.196646,-8.004867,6.202450,3.360956,-6.589600,-3.088209,3.569830,2.568686,-0.828808,8.903555,4.123771,-2.360738,-6.561694],[-4.944036,-1.053714,3.672425,-4.104379,-4.574936,-5.243360,5.294324,-9.679956,-4.892457,8.634668,-4.046064,0.992517,-3.881111,-1.174880,-0.352924,4.301480,6.922168,9.133579,-5.407412,-9.581133,2.216577,2.048635,0.621636,-3.366550,1.243221,6.977364,3.332191,-1.370596,9.984138,-4.073158,5.570229,-8.209612,4.811839,5.778166,9.344802,0.164671,-3.377789,-8.415938,-8.642019,-1.756961,-2.876413,2.198457,-1.885653,-6.191742,8.849390,8.149290,-9.501046,5.350056,3.130487,1.231567,-5.431350,3.872928,4.452367,-1.245312,7.288417,-2.445269,-5.960318,3.160173,6.544862,-9.760989,6.878796,6.616789,4.054014,7.429913,-0.198291,1.289937,8.924314,9.002043,-1.353126,-9.724106,-4.692153,-6.431741,7.433377,4.734971,0.133051,5.494773,-7.998306,-2.599313],[7.379853,-2.803898,-8.882264,-6.002336,1.216866,2.589992,2.887832,5.146117,-2.309506,-8.455782,0.176629,-9.351448,3.018376,7.656072,-1.710379,4.378946,-4.528705,2.510159,3.678344,-0.649761,-4.629491,0.826539,-3.657023,6.140883,-5.037710,-0.315851,-8.953378,-1.682637,-4.164767,2.056195,1.078675,-4.667570,-2.403731,-0.045660,5.861797,-8.572258,-5.245768,7.608204,-7.245979,9.586372,-9.889541,5.533612,-4.723455,-3.388073,4.318308,-0.959950,-9.625890,-1.024832,-3.765304,-2.087255,-2.829175,4.103857,-1.408662,9.196971,-4.698414,2.578944,-8.846686,2.810689,-9.567787,0.413535,2.144300,-5.282777,-6.945405,-6.982158,-2.814429,-9.960311,-2.059315,1.630022,-7.919276,1.430365,-3.435675,2.555632,3.414140,7.179698,-3.375423,-6.726691,-4.504763,9.184970],[7.478015,-1.426864,-8.796117,-4.057745,-3.304705,-7.939611,-0.377894,7.809689,-4.467276,6.552213,6.543598,-9.605962,3.837270,1.821408,3.983383,-5.560463,0.325485,-3.928057,9.261180,-5.252514,6.279346,-7.414375,-6.740635,-6.121835,-7.276672,3.603511,-2.214656,7.215510,-9.533864,-4.080010,1.732476,-1.038865,5.674136,1.475454,-5.081146,-4.696573,-8.754022,9.667694,2.313327,5.474671,-8.984773,4.251240,-8.831663,-0.860154,-1.389009,0.826501,-9.454259,-9.715153,-4.071537,-9.459888,0.566099,-3.280705,-9.316893,-2.145868,8.663243,9.829714,-5.693365,1.576704,-6.086463,8.470380,-9.453646,-7.738005,2.054194,-9.047440,-7.777531,-4.606202,7.801696,2.037970,-6.955143,0.312592,-0.369051,8.253750,-5.195427,5.640897,9.894079,6.119889,6.401619,-9.575227],[-5.802238,7.312078,5.964343,-6.780129,-2.535082,-9.783296,7.080403,1.741060,6.048801,7.940405,2.935982,-1.056940,5.305850,-5.444744,4.214399,4.382894,0.673526,5.067494,-7.407902,9.849430,3.394625,-3.160120,-3.703262,-6.528869,-4.793813,3.793650,8.846322,-2.278304,8.312158,8.375058,4.380499,-5.773722,6.159493,-6.171145,8.601470,4.017826,9.112849,2.036021,5.499117,9.880004,1.352007,1.399889,-0.176541,-9.489098,-1.965309,2.758360,-8.101561,-7.233889,8.605780,-1.707734,-4.345648,5.425712,1.404291,2.038849,7.033938,-3.366667,1.809209,8.069712,-7.170983,6.651127,5.970662,-6.860169,-8.649602,-2.785761,6.898907,-1.473543,-3.827227,-1.755089,1.837173,-3.754975,-9.467723,0.174841,-1.763680,-2.386949,-4.109806,0.480378,-2.875434,-8.530155],[-1.074619,-0.585670,2.233536,8.659465,-6.701355,6.226572,-3.066064,-9.704029,-6.909075,-5.622697,-2.943705,8.074033,2.715397,7.677160,4.948226,-2.781074,-9.000724,0.925069,-2.017044,8.950040,-6.358575,-7.709724,-4.456703,-8.116241,-1.287081,1.368370,8.641276,-8.068674,7.026812,-9.735053,6.708092,-2.144496,8.392451,5.802505,-2.972335,-0.975067,0.030949,0.313538,-0.309944,-6.960989,7.198628,6.544349,4.363172,0.560063,5.227581,8.884274,-4.104456,-2.831769,1.436660,2.162392,-6.730247,3.886331,-8.478215,7.466455,-1.513235,-2.098011,4.211215,-6.225338,7.134200,2.974748,1.847560,8.099485,-6.625814,0.437290,1.228329,-2.576998,-8.174211,8.938670,-6.559595,0.376052,-6.677367,-7.263866,-8.059272,-7.899806,-6.433694,-9.350056,-4.559925,-1.214929],[-6.089535,5.655887,-6.229271,4.834927,9.264812,-8.563883,-7.009255,-7.257944,8.345091,-6.805072,5.915425,5.380883,1.278709,1.939781,0.356874,-3.555338,2.563773,0.149518,0.858085,-2.747141,2.919702,9.794571,1.414036,-5.385256,-9.975643,-2.881660,-5.660438,-2.962921,9.627554,0.807952,2.562885,-7.940287,9.057246,-8.589344,1.480345,1.489479,6.222072,-4.425501,-9.248274,3.327608,5.925844,-0.563712,7.658970,2.318027,-6.781380,8.473083,3.090901,-5.853632,6.136375,2.693693,-6.190744,4.635555,9.419092,-0.213406,2.809292,3.126285,1.655533,-4.319491,-4.307980,6.790617,-7.807620,-7.606439,8.930524,3.257821,1.571397,5.911137,1.847384,-0.781735,-1.973878,3.998690,-4.273229,-9.719795,-8.774930,1.741316,8.639345,-1.908836,1.516785,4.103187],[1.804348,-9.810164,4.343457,-0.641814,-9.203655,-3.534105,3.607049,-0.971283,-6.835321,8.048721,9.395999,7.283150,-7.725200,1.328413,-7.113419,-4.731358,0.404789,-3.444766,-2.759442,5.349379,9.316229,9.917860,9.433156,9.987649,-7.196555,2.774767,9.432617,-2.231707,-1.072898,4.198411,-7.929229,-0.797695,-7.372821,2.382744,-5.451858,-8.340909,-3.345573,-9.767565,2.543157,1.215156,2.292611,-9.430166,3.597252,-1.017061,-6.842852,-4.854966,5.203456,-3.766296,9.435450,-8.790153,-4.877869,-3.486117,-9.984418,9.326923,-2.146549,1.234231,5.547918,-3.108267,2.962153,-9.770314,-7.937204,-5.538989,2.440613,-1.921220,-5.147935,-2.869449,7.686462,0.291430,-9.609005,1.492541,4.726841,-5.783226,-0.877148,4.332806,3.167053,4.823839,-1.722600,0.550368],[-5.681314,8.636281,-2.441044,-9.620900,-4.945757,3.581352,-8.761124,3.542562,5.701783,-9.670902,-0.730577,6.790227,0.866595,9.219043,0.953660,8.994985,-2.963129,-4.645117,6.419029,-4.274086,6.998489,-5.046443,5.710437,3.536405,7.341995,-4.087946,-9.370241,2.932102,6.734507,2.061445,0.682526,-3.268660,1.179692,-8.596807,2.176314,-1.362528,-7.314176,-2.268581,-7.109325,-2.059952,3.333830,9.929411,2.816102,2.692517,-4.427782,0.468440,-7.856828,6.703305,-6.078142,-8.320147,9.915777,-4.975811,2.975071,1.348964,8.796807,8.276837,-7.920816,-5.491588,2.732761,-3.248919,-3.337383,5.730801,-6.133485,7.221909,-0.878447,-8.201176,-8.370048,7.094933,-5.116166,-2.921782,-3.256742,-7.986705,-2.686752,-0.885873,2.438078,3.713431,-0.101947,-1.262663],[-3.638961,-3.703420,9.316067,-5.634938,7.204559,6.298896,-2.734806,5.745833,4.612922,2.270388,-6.473252,9.066496,9.345907,-2.327713,8.017230,-0.447037,-0.869723,-9.886185,5.354126,0.205994,-0.400562,-0.152020,-8.928005,2.246650,-1.583302,-6.951393,3.233995,-4.771164,-0.297606,-2.983694,5.477091,6.920892,7.138479,4.850898,-6.752738,-5.292946,1.972710,9.486018,-7.159090,5.115020,-8.383585,-9.727761,8.394625,-9.235355,0.076567,5.487306,2.050357,-8.272645,-1.164408,6.220011,-1.502839,0.197088,0.723704,-6.577659,3.316512,-0.671431,8.635274,5.018655,7.353272,-8.238364,9.957145,9.321733,7.410667,2.376059,4.791958,-9.407892,-3.457484,0.593355,9.491719,-2.379975,3.699030,-7.099384,4.196914,6.476535,9.748885,5.666457,9.121892,1.966292],[-7.873075,-6.826816,4.402114,2.078755,-6.831109,6.795768,-0.565959,-2.784657,-6.550477,-2.621340,8.687775,-0.320958,-4.217182,3.935806,-5.369827,-0.867962,8.846249,-3.415361,6.410071,5.580861,-3.018502,2.381441,-5.322541,-8.458264,-9.715418,-7.047511,-8.548015,-2.304469,-6.080962,-7.459618,-9.490546,6.518247,0.695928,9.091859,1.874166,-1.918228,2.313556,7.097826,-8.795913,9.462778,-6.505927,-5.228756,-9.299707,5.353090,-9.313943,-2.656008,-6.062340,-0.716479,3.167425,6.824898,-8.208302,3.844772,6.702359,4.021132,-8.565230,1.381651,-2.929579,-2.726857,-0.028446,5.315620,4.458653,-9.782714,1.041671,-4.271593,-5.489564,-3.576225,9.503852,-6.539752,-0.440064,-5.801776,-3.862726,6.492771,0.379044,-4.569621,-2.969220,-7.357590,3.166842,8.407639],[-6.335371,9.726410,4.770249,2.288695,2.787287,-4.668062,-1.055499,6.699471,-5.006237,0.690885,-6.375097,9.060321,-6.520391,-2.971196,-9.196276,-7.966450,1.866580,0.949552,8.696339,-2.540965,6.955714,-6.193826,6.209894,-0.338372,7.331715,-8.214097,2.643769,-1.885463,4.609222,0.148217,-5.274405,-3.423616,-4.984529,1.679820,7.635145,-0.717920,-5.014465,-8.683077,-4.992675,5.832130,-9.147631,6.067468,4.214791,4.827768,3.537803,9.149843,5.534281,8.722996,4.129627,9.717791,-1.166925,1.221711,1.801021,2.533856,3.814092,8.172157,-0.202789,9.824189,-5.099256,-4.214306,-2.030675,6.781638,-4.005877,1.566229,9.850268,-9.895907,-1.308411,-9.161548,1.947809,-9.382568,-7.310847,-0.680611,-1.327491,5.199197,2.421425,-4.905414,1.020932,0.860656],[6.227776,5.398280,3.647546,-0.052807,-2.429980,1.526188,-2.530958,-5.581647,3.087599,9.979682,-0.213882,-1.161480,8.003552,8.641997,4.002639,-5.711489,3.377597,6.558510,4.478432,3.876366,1.934651,2.365384,-5.962324,-9.801614,-9.632620,6.690545,-3.973606,-5.289688,9.051234,-4.642366,-0.019726,7.592962,9.735430,3.427196,-7.496176,-8.171963,6.304044,-2.174453,6.680842,-4.816461,-5.408542,-1.537019,8.886133,-1.088854,3.633758,6.515678,1.321306,3.051793,-7.221582,8.637766,0.049254,-1.327654,1.582442,-9.179301,1.928948,2.270672,7.558384,3.261258,-2.975915,6.158052,-7.417753,-7.666262,7.646559,-4.881358,-8.499278,-2.197974,8.256715,-3.506332,6.429502,3.970534,7.316894,1.778890,4.749068,-3.611928,-8.729266,9.245154,-1.499825,8.396229],[0.599786,7.992666,5.512443,-9.884476,-0.206489,-9.176734,0.049132,1.267754,-0.784384,1.466637,4.357640,2.450120,2.468628,-7.648065,-1.817474,1.310479,-2.643189,9.208011,5.480749,-5.585802,2.987447,3.883940,7.928285,0.029538,6.492503,5.711620,-3.938549,2.810214,2.837002,-3.286674,5.934219,0.987966,-0.210891,1.256649,-3.465558,-8.285902,-3.306864,0.245299,-4.286874,2.772838,8.419720,-6.197471,-6.004843,-7.020371,7.607648,4.984579,-0.296261,-7.850055,-4.871037,-1.030016,-0.641520,-2.289169,6.784748,-7.916332,-7.053196,4.280802,-4.540108,-3.453729,5.507042,-1.213164,7.968129,3.231865,-2.212867,-7.680996,-6.508861,-9.067149,7.552183,3.659920,-7.730310,-5.439567,-2.341682,-4.887291,5.345138,6.253487,6.882512,-5.006644,1.178449,6.553939],[4.497888,-5.608694,-7.397859,-5.864353,9.026758,-2.115751,8.534975,6.402036,0.272139,-1.456633,-1.171777,9.654104,4.586634,-0.409300,-8.754141,6.883193,8.092750,7.694050,-6.407230,-6.335484,0.672195,8.187250,6.316749,-6.372422,-8.732106,-7.259523,-8.811456,4.147687,4.506801,4.014498,9.131464,3.255048,-8.463844,-4.840658,2.333483,6.524955,-6.488343,9.784661,0.109675,-9.830718,9.895985,-0.397032,-3.495503,0.931812,6.582863,1.794662,9.391934,1.254251,6.584916,-9.159323,-7.415858,-6.996851,-8.377913,8.171875,5.567716,-1.249951,-0.838664,0.044705,-4.201624,-3.099504,5.713067,-6.431132,-2.363400,-4.559042,8.132885,-2.618513,-1.966558,-9.990865,9.378663,-0.302751,9.611673,4.448276,9.942982,7.568098,2.001676,9.561057,6.806820,-4.907047]], dtype = "float64")#candidate|4954|(22, 78)|const|float64
call_4953 = relay.TupleGetItem(func_383_call(relay.reshape(const_4954.astype('float64'), [13, 12, 11]), relay.reshape(bop_4905.astype('float32'), [720,]), ), 1)
call_4955 = relay.TupleGetItem(func_387_call(relay.reshape(const_4954.astype('float64'), [13, 12, 11]), relay.reshape(bop_4905.astype('float32'), [720,]), ), 1)
func_2142_call = mod.get_global_var('func_2142')
func_2145_call = mutated_mod.get_global_var('func_2145')
const_4959 = relay.const([[-4.775193],[-6.908312],[-1.984449],[-1.552284],[-1.963585],[-5.110300],[-0.547608],[-1.736296],[6.747669],[7.053710],[7.520382],[-9.911731],[-5.718477],[-9.675951],[-7.087690],[-4.250066],[-9.474793],[-2.972643],[9.487614],[-0.884721],[6.017036],[-9.577484],[6.031792],[8.976889],[8.864587],[2.160631],[-4.959653],[8.699475],[1.071458],[-9.248115],[-2.641407],[7.074315],[7.739485],[-3.296359],[-4.575603],[-2.179617],[2.154341],[2.943621],[-4.192863],[5.845609],[0.720932],[-7.399476],[-2.159577],[-8.975874],[8.776687],[-1.289422],[-4.491397],[-6.133829],[5.829580],[-1.177059],[8.347614],[-4.463131],[2.881525],[2.266487],[-0.038287],[5.110869],[-6.193983],[-1.696578],[0.457838],[-2.177992],[6.538085],[3.212815],[-0.908220],[4.866674],[-5.000195],[8.766526],[-8.693891],[-6.211653],[-5.557597],[5.566510],[6.205893],[-4.841910],[-2.853162],[-4.131072],[-0.993725],[-6.791959],[9.877431],[4.225858],[2.387306],[-4.796951],[-7.419302],[-2.390583],[2.591979],[-4.996020],[-1.242848],[-3.642673],[9.773672],[2.299576],[4.713448],[9.257077],[4.566919],[5.150324],[9.868764],[-5.351191],[4.386163],[-2.599788],[5.719943],[5.321202],[-4.916777],[-5.976772],[2.234493],[-3.050086],[4.065091],[6.930964],[8.574570],[-9.419495],[-2.008683],[-4.344724],[-8.706218],[6.424998],[6.930214],[8.294113],[-2.667916],[0.094950],[9.320550],[8.945978],[-6.575013],[3.375781],[-0.277321],[5.339523],[7.942453],[-1.294757],[1.104664],[-6.359854],[6.311090],[-7.866606],[2.700363],[0.929302],[-4.233807],[-6.856953],[-8.611579],[-4.205569],[9.765981],[6.992211],[-4.619998],[-8.043320],[-5.850402],[-1.620595],[8.065705],[-9.493769],[-9.213640],[8.978634],[-6.103205],[7.564923],[4.872074],[-6.893032],[5.176225],[-5.587923],[-1.752390],[-8.587091],[-7.299631],[3.013733],[5.032355],[8.468379],[-6.500330],[-1.764296],[-2.769377],[-0.536512],[-6.191322],[5.736779],[-1.203294],[-9.357961],[-9.827450],[-6.872943],[-0.869183],[-0.813188],[3.919524],[8.895730],[0.034097]], dtype = "float32")#candidate|4959|(169, 1)|const|float32
call_4958 = relay.TupleGetItem(func_2142_call(relay.reshape(const_4959.astype('float32'), [13, 13]), relay.reshape(const_4959.astype('float32'), [13, 13]), ), 4)
call_4960 = relay.TupleGetItem(func_2145_call(relay.reshape(const_4959.astype('float32'), [13, 13]), relay.reshape(const_4959.astype('float32'), [13, 13]), ), 4)
output = relay.Tuple([call_4828,call_4832,call_4834,const_4835,call_4892,bop_4905,call_4918,const_4919,call_4922,call_4949,call_4953,const_4954,call_4958,const_4959,])
output2 = relay.Tuple([call_4829,call_4833,call_4836,const_4835,call_4893,bop_4908,call_4920,const_4919,call_4923,call_4950,call_4955,const_4954,call_4960,const_4959,])
func_4966 = relay.Function([var_4904,], output)
mod['func_4966'] = func_4966
mod = relay.transform.InferType()(mod)
var_4967 = relay.var("var_4967", dtype = "float32", shape = (720,))#candidate|4967|(720,)|var|float32
output = func_4966(var_4967)
func_4968 = relay.Function([var_4967], output)
mutated_mod['func_4968'] = func_4968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3415_call = mod.get_global_var('func_3415')
func_3417_call = mutated_mod.get_global_var('func_3417')
call_4973 = func_3415_call()
call_4974 = func_3415_call()
var_4985 = relay.var("var_4985", dtype = "float32", shape = (13, 10, 13))#candidate|4985|(13, 10, 13)|var|float32
bop_4986 = relay.minimum(call_4973.astype('uint16'), var_4985.astype('uint16')) # shape=(13, 10, 13)
bop_4989 = relay.minimum(call_4974.astype('uint16'), var_4985.astype('uint16')) # shape=(13, 10, 13)
output = relay.Tuple([bop_4986,])
output2 = relay.Tuple([bop_4989,])
func_4997 = relay.Function([var_4985,], output)
mod['func_4997'] = func_4997
mod = relay.transform.InferType()(mod)
mutated_mod['func_4997'] = func_4997
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4998 = relay.var("var_4998", dtype = "float32", shape = (13, 10, 13))#candidate|4998|(13, 10, 13)|var|float32
func_4997_call = mutated_mod.get_global_var('func_4997')
call_4999 = func_4997_call(var_4998)
output = call_4999
func_5000 = relay.Function([var_4998], output)
mutated_mod['func_5000'] = func_5000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3383_call = mod.get_global_var('func_3383')
func_3385_call = mutated_mod.get_global_var('func_3385')
call_5046 = func_3383_call()
call_5047 = func_3383_call()
func_3180_call = mod.get_global_var('func_3180')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_5050 = func_3180_call()
call_5051 = func_3180_call()
output = relay.Tuple([call_5046,call_5050,])
output2 = relay.Tuple([call_5047,call_5051,])
func_5069 = relay.Function([], output)
mod['func_5069'] = func_5069
mod = relay.transform.InferType()(mod)
mutated_mod['func_5069'] = func_5069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5069_call = mutated_mod.get_global_var('func_5069')
call_5070 = func_5069_call()
output = call_5070
func_5071 = relay.Function([], output)
mutated_mod['func_5071'] = func_5071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3160_call = mod.get_global_var('func_3160')
func_3162_call = mutated_mod.get_global_var('func_3162')
call_5087 = relay.TupleGetItem(func_3160_call(), 1)
call_5088 = relay.TupleGetItem(func_3162_call(), 1)
var_5093 = relay.var("var_5093", dtype = "float32", shape = (16, 5, 9))#candidate|5093|(16, 5, 9)|var|float32
bop_5094 = relay.logical_and(call_5087.astype('bool'), relay.reshape(var_5093.astype('bool'), relay.shape_of(call_5087))) # shape=(16, 5, 9)
bop_5097 = relay.logical_and(call_5088.astype('bool'), relay.reshape(var_5093.astype('bool'), relay.shape_of(call_5088))) # shape=(16, 5, 9)
output = bop_5094
output2 = bop_5097
func_5103 = relay.Function([var_5093,], output)
mod['func_5103'] = func_5103
mod = relay.transform.InferType()(mod)
mutated_mod['func_5103'] = func_5103
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5104 = relay.var("var_5104", dtype = "float32", shape = (16, 5, 9))#candidate|5104|(16, 5, 9)|var|float32
func_5103_call = mutated_mod.get_global_var('func_5103')
call_5105 = func_5103_call(var_5104)
output = call_5105
func_5106 = relay.Function([var_5104], output)
mutated_mod['func_5106'] = func_5106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_5117 = relay.TupleGetItem(func_2502_call(), 0)
call_5118 = relay.TupleGetItem(func_2503_call(), 0)
output = relay.Tuple([call_5117,])
output2 = relay.Tuple([call_5118,])
func_5135 = relay.Function([], output)
mod['func_5135'] = func_5135
mod = relay.transform.InferType()(mod)
output = func_5135()
func_5136 = relay.Function([], output)
mutated_mod['func_5136'] = func_5136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5142 = relay.var("var_5142", dtype = "float64", shape = (7, 12, 9))#candidate|5142|(7, 12, 9)|var|float64
uop_5143 = relay.atanh(var_5142.astype('float64')) # shape=(7, 12, 9)
func_4075_call = mod.get_global_var('func_4075')
func_4077_call = mutated_mod.get_global_var('func_4077')
call_5158 = func_4075_call()
call_5159 = func_4075_call()
uop_5171 = relay.tan(uop_5143.astype('float32')) # shape=(7, 12, 9)
func_4631_call = mod.get_global_var('func_4631')
func_4633_call = mutated_mod.get_global_var('func_4633')
call_5191 = func_4631_call()
call_5192 = func_4631_call()
func_3146_call = mod.get_global_var('func_3146')
func_3149_call = mutated_mod.get_global_var('func_3149')
var_5196 = relay.var("var_5196", dtype = "float64", shape = (420,))#candidate|5196|(420,)|var|float64
call_5195 = relay.TupleGetItem(func_3146_call(relay.reshape(var_5196.astype('float64'), [7, 15, 4])), 1)
call_5197 = relay.TupleGetItem(func_3149_call(relay.reshape(var_5196.astype('float64'), [7, 15, 4])), 1)
func_161_call = mod.get_global_var('func_161')
func_164_call = mutated_mod.get_global_var('func_164')
const_5204 = relay.const([5,-10,9,-1,-8,7,3,7,2,3,5,4,7,-10,-7,8,3,8,-5,6,5,9,7,-10,-8,-10,-10,-10,8,-3,-9,10,10,5,6,1,9,3,-8,6,-7,10,1,-6,9,8,2,-1,-4,8,-10,-5,-8,4,1,-3,-8,-8,2,10,3,9,-3,-8,7,-1,4,5,-4,10,-8,-4,6,5,-7,-9,-2,6,1,2,-9,-6,-9,-4,9,-8,9,-5,-5,-4,5,5,-4,-3,-4,-4,10,-5,-10,-3,5,5,-3,-10,3,5,9,-7,8,9,-7,-4,-2,7,9,10,9,-7,-8,-5,3,8,7,-7,5,8,1,-8,-2,-7,-5,5], dtype = "uint32")#candidate|5204|(132,)|const|uint32
var_5205 = relay.var("var_5205", dtype = "uint32", shape = (660,))#candidate|5205|(660,)|var|uint32
call_5203 = func_161_call(relay.reshape(const_5204.astype('uint32'), [11, 12, 1]), relay.reshape(var_5205.astype('uint32'), [11, 12, 5]), )
call_5206 = func_161_call(relay.reshape(const_5204.astype('uint32'), [11, 12, 1]), relay.reshape(var_5205.astype('uint32'), [11, 12, 5]), )
uop_5217 = relay.cosh(uop_5171.astype('float64')) # shape=(7, 12, 9)
uop_5230 = relay.exp(uop_5217.astype('float64')) # shape=(7, 12, 9)
output = relay.Tuple([call_5158,call_5191,call_5195,var_5196,call_5203,const_5204,var_5205,uop_5230,])
output2 = relay.Tuple([call_5159,call_5192,call_5197,var_5196,call_5206,const_5204,var_5205,uop_5230,])
func_5234 = relay.Function([var_5142,var_5196,var_5205,], output)
mod['func_5234'] = func_5234
mod = relay.transform.InferType()(mod)
mutated_mod['func_5234'] = func_5234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5234_call = mutated_mod.get_global_var('func_5234')
var_5236 = relay.var("var_5236", dtype = "float64", shape = (7, 12, 9))#candidate|5236|(7, 12, 9)|var|float64
var_5237 = relay.var("var_5237", dtype = "float64", shape = (420,))#candidate|5237|(420,)|var|float64
var_5238 = relay.var("var_5238", dtype = "uint32", shape = (660,))#candidate|5238|(660,)|var|uint32
call_5235 = func_5234_call(var_5236,var_5237,var_5238,)
output = call_5235
func_5239 = relay.Function([var_5236,var_5237,var_5238,], output)
mutated_mod['func_5239'] = func_5239
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5249 = relay.const(-5.335962, dtype = "float64")#candidate|5249|()|const|float64
var_5250 = relay.var("var_5250", dtype = "float64", shape = (15, 10, 3))#candidate|5250|(15, 10, 3)|var|float64
bop_5251 = relay.less_equal(const_5249.astype('bool'), var_5250.astype('bool')) # shape=(15, 10, 3)
uop_5255 = relay.cosh(bop_5251.astype('float64')) # shape=(15, 10, 3)
output = relay.Tuple([uop_5255,])
output2 = relay.Tuple([uop_5255,])
func_5268 = relay.Function([var_5250,], output)
mod['func_5268'] = func_5268
mod = relay.transform.InferType()(mod)
mutated_mod['func_5268'] = func_5268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5269 = relay.var("var_5269", dtype = "float64", shape = (15, 10, 3))#candidate|5269|(15, 10, 3)|var|float64
func_5268_call = mutated_mod.get_global_var('func_5268')
call_5270 = func_5268_call(var_5269)
output = call_5270
func_5271 = relay.Function([var_5269], output)
mutated_mod['func_5271'] = func_5271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3160_call = mod.get_global_var('func_3160')
func_3162_call = mutated_mod.get_global_var('func_3162')
call_5302 = relay.TupleGetItem(func_3160_call(), 1)
call_5303 = relay.TupleGetItem(func_3162_call(), 1)
uop_5316 = relay.log10(call_5302.astype('float64')) # shape=(16, 5, 9)
uop_5318 = relay.log10(call_5303.astype('float64')) # shape=(16, 5, 9)
output = relay.Tuple([uop_5316,])
output2 = relay.Tuple([uop_5318,])
func_5321 = relay.Function([], output)
mod['func_5321'] = func_5321
mod = relay.transform.InferType()(mod)
output = func_5321()
func_5322 = relay.Function([], output)
mutated_mod['func_5322'] = func_5322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4202_call = mod.get_global_var('func_4202')
func_4203_call = mutated_mod.get_global_var('func_4203')
call_5362 = relay.TupleGetItem(func_4202_call(), 0)
call_5363 = relay.TupleGetItem(func_4203_call(), 0)
var_5369 = relay.var("var_5369", dtype = "float64", shape = (1089,))#candidate|5369|(1089,)|var|float64
bop_5370 = relay.multiply(call_5362.astype('float64'), relay.reshape(var_5369.astype('float64'), relay.shape_of(call_5362))) # shape=(1089,)
bop_5373 = relay.multiply(call_5363.astype('float64'), relay.reshape(var_5369.astype('float64'), relay.shape_of(call_5363))) # shape=(1089,)
output = bop_5370
output2 = bop_5373
func_5376 = relay.Function([var_5369,], output)
mod['func_5376'] = func_5376
mod = relay.transform.InferType()(mod)
mutated_mod['func_5376'] = func_5376
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5377 = relay.var("var_5377", dtype = "float64", shape = (1089,))#candidate|5377|(1089,)|var|float64
func_5376_call = mutated_mod.get_global_var('func_5376')
call_5378 = func_5376_call(var_5377)
output = call_5378
func_5379 = relay.Function([var_5377], output)
mutated_mod['func_5379'] = func_5379
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5465 = relay.var("var_5465", dtype = "float32", shape = (3, 16, 14))#candidate|5465|(3, 16, 14)|var|float32
const_5466 = relay.const([[[8.009274,6.890883,6.886995,7.488542,-7.243091,7.169844,-9.060880,6.567590,9.321348,-4.160944,2.668754,9.874426,8.749632,-8.023636],[-1.271498,-2.823968,-0.073526,7.426922,2.010771,-0.045819,-9.595732,-6.233651,-7.051244,4.559338,9.227935,5.656924,0.064719,-5.143186],[5.274957,-4.390174,-7.501305,0.194064,-1.699782,-4.100581,6.152729,5.599079,9.170945,9.673776,7.228949,5.471663,-8.463236,7.466855],[3.967013,-6.802631,-1.092209,-6.437082,9.711156,-0.043307,-7.868447,8.784396,2.366389,-8.358587,-3.790997,-8.407701,-0.821430,-5.547528],[-0.779698,-4.789357,8.851783,-0.890136,6.078298,-2.012982,-4.892028,4.144710,-1.286846,2.409302,2.845356,-7.943775,0.193195,-9.215819],[-1.865763,-6.304458,-6.322210,-9.159464,5.293677,-2.218947,7.685706,9.369955,1.896959,-8.691010,6.807991,6.438142,7.620103,-5.558621],[-4.648927,-1.716034,5.580384,6.350635,-9.354806,0.820323,0.629865,-7.382440,-0.157978,-6.077094,-0.571817,0.721336,-3.354165,6.209478],[-1.729685,-6.800370,-6.791122,2.501786,5.891035,3.531467,-7.399412,7.966332,-8.189937,-0.617991,5.366077,-1.784996,-1.936449,1.001623],[-2.021908,-9.678480,-2.589979,9.606101,-5.233293,-5.305147,-0.552624,2.157615,-6.434364,-1.925984,-4.091394,-2.121966,1.635690,-4.069249],[-6.828852,1.812173,-2.054886,-6.770208,-0.956383,8.173268,-6.756609,2.837102,4.034805,-0.490670,4.422987,4.144774,3.736976,-5.448908],[-6.818206,-0.237261,-6.496039,-2.403390,-1.683473,-7.402817,-2.809506,7.205936,1.138343,6.875800,5.178942,6.944240,-0.039481,-9.263227],[-6.181044,7.578170,2.746816,1.575536,4.425707,-0.809126,-6.581714,-5.358182,-5.876032,-3.745277,-9.364476,0.414702,1.974029,9.921700],[9.724852,4.961389,-4.387525,-4.983910,7.945719,0.434427,5.650769,-8.720944,-4.607979,8.881502,-7.032653,5.326005,3.023639,-0.826878],[4.310938,1.450705,6.460258,-8.946783,3.829530,-6.350148,-4.346756,0.316206,8.389492,-6.976047,-0.068875,5.359760,8.436731,-1.869263],[7.739514,1.240431,-3.966622,1.027963,0.559783,1.447920,-9.326167,7.546666,1.849064,0.562999,-6.708107,4.224290,7.833516,9.135616],[6.295437,5.777570,-1.053366,1.746904,3.763555,9.296295,-8.923939,8.621516,-4.003959,2.292990,4.384911,-1.503664,-1.760967,6.689066]],[[-2.345800,-0.433313,-5.019029,-9.855737,-0.097430,3.446006,-6.916150,2.208084,3.621930,-0.757084,7.688214,2.810682,-0.715582,8.894868],[8.483973,-3.176729,0.949648,2.603928,-3.054891,3.858803,6.441092,6.068315,3.342340,-5.718705,2.108837,-5.101280,4.967268,-0.920316],[7.447351,-3.999914,-2.593739,5.607230,-5.742372,9.351520,-7.897209,5.669859,8.833814,-5.261621,3.825292,5.604640,6.434153,-7.163415],[9.097304,-5.139316,-2.395435,-2.389614,0.092655,-8.562941,-6.388495,-2.314918,-7.854446,2.473576,-7.717143,-4.300885,-2.356356,4.340797],[7.039950,-0.116575,-0.378680,-9.287354,-3.931213,5.745861,-3.614175,0.942550,4.805178,9.591602,4.021952,6.858361,-7.808007,-6.760123],[0.295142,-2.383814,3.176101,0.468378,5.182280,-4.599634,-8.218478,3.588305,2.755306,-5.309741,9.205160,2.329410,-3.704211,-5.192712],[-6.913922,2.162938,-5.073609,1.934981,4.377604,1.367542,-4.991917,-7.700505,6.867915,6.447011,-2.292986,6.868777,0.097225,-8.948533],[7.799047,5.434017,7.557122,1.023765,-3.980254,4.399197,-7.863203,6.373141,-0.238586,3.430243,0.062490,2.861985,-2.879623,9.308537],[9.310237,1.118272,8.012649,-3.285118,-2.185415,-2.407569,-0.692792,-6.058381,0.171552,7.259211,9.100092,9.084380,4.418765,-0.149298],[-5.943558,-5.308997,2.365071,-6.457444,-7.662462,-4.588954,0.915252,1.851076,-5.647255,-9.014503,0.365047,-7.863537,-8.754734,-2.289030],[-6.481387,-1.666024,-7.460333,-5.864085,-5.820113,-0.862622,9.739053,3.463066,-3.707535,4.310222,-7.294698,-5.036361,9.967008,-5.019192],[-0.667277,-3.804924,4.708941,1.066554,7.297743,-1.356756,2.656673,-3.981332,7.475054,9.982954,-1.321785,-6.995228,-4.891485,5.643979],[4.818979,0.032200,-3.240586,-3.782445,-3.054973,7.408315,2.849776,-4.088785,4.097514,-1.040128,-8.135032,-1.376945,-8.773326,-9.879171],[6.434734,-6.909532,0.593714,-1.833271,0.084090,-4.420373,5.180495,5.943261,0.110735,7.084678,-3.508452,1.565894,4.393376,-4.389932],[-4.169282,-7.131550,-3.630527,1.986587,-0.385798,3.483516,-0.844807,-7.896334,8.887056,1.437176,6.489288,0.790291,-6.749206,-3.970127],[-9.427912,6.571291,7.853577,-9.267705,-3.647118,-4.889770,-7.299621,7.035385,4.469495,-0.864654,0.753749,7.811335,-7.743723,1.745175]],[[9.665038,-1.755753,-7.623340,-6.532947,6.525882,2.452479,-3.445975,-4.861443,6.254413,-5.950674,6.382901,2.169611,-0.314801,0.752188],[-7.003876,4.936693,1.033681,5.091268,9.591230,5.474900,6.809904,-9.314017,-6.862952,-7.810634,-1.373228,-9.521733,7.633262,1.995374],[-1.045148,-9.298945,8.262507,-5.015052,7.226704,-9.816340,-5.300995,1.981675,-6.922268,2.828100,-9.940862,-7.947501,-2.351400,3.771881],[-5.075544,6.290373,8.487778,3.298249,5.077154,9.213896,-6.619294,4.959074,-3.679211,-6.436652,3.935511,5.647036,9.263120,-7.639973],[6.708549,4.273593,-6.142747,-7.341008,-6.252542,-8.449447,-7.785822,-2.269904,1.442761,8.766918,-0.047980,-7.800252,5.018365,5.979937],[8.935366,7.914066,9.127396,7.118333,4.716998,-0.689029,6.781116,-0.405792,-6.743408,-3.479839,-2.776855,6.649894,7.940589,-7.976443],[-2.292124,8.919823,-4.763863,-8.685655,3.949865,7.527236,2.268200,-8.751636,5.819764,-0.838160,5.020816,3.867418,-9.204061,-3.584180],[3.565781,2.759896,6.579761,9.879749,2.020669,6.186784,7.968944,3.985204,-1.853551,-8.074958,-5.353989,-7.073361,8.877537,-8.454974],[-3.056838,-3.811065,7.207409,4.726841,-2.983382,-3.078349,-4.196077,3.286239,1.419035,4.144526,-3.753241,6.164937,-3.564303,6.358758],[6.328829,-7.017620,-4.915142,5.560034,-3.301648,-6.217040,-6.785254,-1.870176,4.708814,-0.462430,-2.150389,-6.382376,2.896451,-9.580913],[3.184134,-8.965588,1.887917,3.886604,3.822515,7.300079,7.559207,-0.244906,4.456549,1.092514,-1.062281,2.101818,2.258532,-5.930634],[2.819210,-6.350286,-2.718328,3.203571,7.060546,5.748122,-1.741512,-0.656351,6.030564,8.344549,0.550345,9.968138,-5.511980,3.813304],[-8.797025,6.481652,-5.914704,1.052178,-5.078299,-8.372288,8.172363,-3.831327,-7.081650,7.769206,9.817312,-4.442146,5.399232,9.414899],[-7.184749,9.096701,-5.407019,-0.972228,1.074365,7.967670,8.893892,3.695738,9.907831,-8.537126,5.067860,7.161294,-1.144491,5.961561],[6.442486,3.548941,2.095087,4.586311,1.855007,-0.843039,4.109084,-0.145754,7.296902,4.265951,1.869200,8.122668,3.054167,-8.011394],[-3.009761,-7.565249,-2.797472,-5.008204,-5.217832,2.031388,4.483235,-8.700933,6.483906,1.095607,9.183999,5.860016,-0.893293,3.833890]]], dtype = "float32")#candidate|5466|(3, 16, 14)|const|float32
bop_5467 = relay.floor_mod(var_5465.astype('float32'), relay.reshape(const_5466.astype('float32'), relay.shape_of(var_5465))) # shape=(3, 16, 14)
func_5135_call = mod.get_global_var('func_5135')
func_5136_call = mutated_mod.get_global_var('func_5136')
call_5493 = relay.TupleGetItem(func_5135_call(), 0)
call_5494 = relay.TupleGetItem(func_5136_call(), 0)
uop_5508 = relay.sqrt(bop_5467.astype('float64')) # shape=(3, 16, 14)
func_2464_call = mod.get_global_var('func_2464')
func_2466_call = mutated_mod.get_global_var('func_2466')
call_5516 = func_2464_call()
call_5517 = func_2464_call()
output = relay.Tuple([call_5493,uop_5508,call_5516,])
output2 = relay.Tuple([call_5494,uop_5508,call_5517,])
func_5524 = relay.Function([var_5465,], output)
mod['func_5524'] = func_5524
mod = relay.transform.InferType()(mod)
var_5525 = relay.var("var_5525", dtype = "float32", shape = (3, 16, 14))#candidate|5525|(3, 16, 14)|var|float32
output = func_5524(var_5525)
func_5526 = relay.Function([var_5525], output)
mutated_mod['func_5526'] = func_5526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5321_call = mod.get_global_var('func_5321')
func_5322_call = mutated_mod.get_global_var('func_5322')
call_5532 = relay.TupleGetItem(func_5321_call(), 0)
call_5533 = relay.TupleGetItem(func_5322_call(), 0)
func_1995_call = mod.get_global_var('func_1995')
func_2001_call = mutated_mod.get_global_var('func_2001')
const_5535 = relay.const([-9.192765,-0.087448,-6.066146,1.411045,-4.861865,0.645617,-0.214165,8.858192,3.824279,-8.198643,4.666666,5.244906,-2.229917,3.360194,4.684992,-1.933894,9.346310,-2.636122,-5.601222,-3.703795,9.169914,2.206565,2.844924,-7.272486,0.470032,-4.397304,-2.987748,0.527570,-6.406218,-8.424732,9.396287,6.175376,8.739086,7.038855,4.798781,-4.928300,8.204267,5.466473,-8.149050,-3.308008,-3.928358,-9.432041,-0.630965,6.677905,9.490624,-0.817419,-5.186310,3.573184,7.652276,8.332312,-0.914201,-1.726407,3.012509,-1.254534,0.979991,-7.493771,-2.222440,-7.244500,-9.415807,7.486964,1.388377,-5.173622,5.414053,6.120270,-5.396167,9.976562,1.888037,3.740416,6.973813,-5.463212,-8.003381,-5.750331], dtype = "float64")#candidate|5535|(72,)|const|float64
var_5536 = relay.var("var_5536", dtype = "float64", shape = (504,))#candidate|5536|(504,)|var|float64
var_5537 = relay.var("var_5537", dtype = "int32", shape = (1, 1089))#candidate|5537|(1, 1089)|var|int32
const_5538 = relay.const([[3],[-4],[-10],[3],[-9],[5],[7],[4],[-10],[-1],[-1],[-8],[4],[-7],[-8],[-3],[-2],[-1],[2],[-6],[10],[3],[-9],[-7],[1],[8],[8],[5],[5],[-9],[3],[-6],[-8],[7],[1],[-3],[9],[8],[-2],[-1],[-2],[6],[-8],[-2],[-5],[6],[2],[2],[8],[-2],[-5],[10],[2],[5],[5],[-6],[4],[9],[-5],[5],[-3],[-7],[-2],[6],[10],[-9],[-4],[10],[8],[-9],[-1],[10],[-9],[9],[1],[1],[4],[8],[8],[-8],[-2],[5],[7],[-4],[-3],[8],[10],[-9],[-8],[-10],[-2],[-10],[2],[2],[9],[-8],[6],[-7],[-1],[8],[3],[-5],[-3],[-1],[-5],[-9],[-3],[-3],[4],[-5],[-7],[6],[-6],[-6],[5],[10],[9],[3],[2],[-4],[-5],[5],[-9],[-1],[6],[-8],[8],[-8],[-8],[-3],[10],[2],[-1],[-3],[7],[1],[10],[9],[4],[4],[5],[5],[-7],[-2],[-7],[9],[10],[-9],[6],[-5],[9],[4],[2],[9],[-3],[-10],[-5],[6],[7],[-9],[4],[-4],[-9],[7],[-2],[10],[-10],[1],[8],[-2],[2],[-3],[-6],[-9],[6],[-9],[-3],[-9],[3],[10],[10],[-9],[4],[4],[1],[-5],[7],[-10],[-7],[-8],[-4],[-7],[8],[-3],[-2],[8],[-3],[-4],[-10],[-9],[4],[4],[3],[6],[2],[7],[1],[-6],[8],[9],[10],[-3],[4],[-10],[-4],[5],[-4],[-3],[4],[1],[5],[3],[1],[-4],[9],[-10],[1],[-2],[9],[-1],[-10],[4],[7],[4],[-9],[9],[-10],[10],[4],[-2],[-7],[1],[-6],[-3],[4],[7],[-2],[9],[8],[-3],[8],[-1],[-8],[2],[4],[6],[6],[9],[10],[-6],[-8],[10],[4],[9],[3],[-1],[6],[9],[-4],[6],[5],[-1],[-9],[3],[-4],[4],[2],[4],[-5],[1],[5],[-9],[5],[-4],[1],[1],[4],[-8],[-4],[-2],[10],[2],[2],[-9],[9],[7],[4],[-6],[5],[10],[-2],[3],[2],[-8],[-2],[5],[-8],[5],[3],[1],[8],[5],[-3],[10],[10],[4],[-2],[-7],[8],[-1],[8],[4],[4],[-10],[-7],[-6],[-6],[-4],[-1],[6],[8],[-3],[-9],[-5],[6],[7],[3],[-1],[-3],[2],[1],[-5],[-1],[7],[5],[1],[-5],[4],[-5],[-1],[4],[-6],[-3],[3],[-8],[-8],[-5],[6],[-3],[-5],[-8],[2],[3],[9],[4],[10],[10],[-4],[-2],[1],[-2],[-7],[-3],[10],[-7],[4],[5],[9],[3],[-7],[-8],[4],[2],[-2],[-7],[-2],[-3],[5],[-5],[-2],[1],[-8],[-2],[-4],[4],[2],[8],[-1],[6],[-3],[-8],[1],[8],[-7],[-10],[-5],[-5],[-9],[1],[1],[-5],[-7],[-3],[-3],[4],[3],[5],[-5],[-1],[-7],[-1],[3],[-7],[-2],[8],[-4],[-8],[-7],[-1],[-9],[8],[-9],[7],[5],[-6],[8],[5],[3],[6],[10],[1],[-6],[-7],[10],[-3],[5],[3],[4],[9],[8],[4],[-5],[7],[-10],[-3],[4],[6],[-3],[-3],[3],[3],[9],[1],[8],[7],[-5],[9],[-9],[-8],[-9],[1],[7],[5],[2],[-4],[-8],[-2],[-7],[-2],[-3],[8],[-9],[10],[7],[-7],[10],[-2],[-7],[8],[9],[-4],[-3],[3],[9],[2],[6],[2],[10],[1],[1],[-4],[8],[-10],[4],[-6],[-2],[-7],[-5],[4],[8],[6],[7],[-7],[-3],[2],[8],[6],[1],[3],[-6],[6],[9],[4],[6],[8],[3],[5],[-5],[4],[-5],[-9],[-2],[1],[1],[-9],[-4],[4],[8],[7],[-5],[5],[-10],[-5],[-7],[10],[-5],[4],[-6],[-3],[8],[-5],[-6],[-4],[-8],[-8],[6],[8],[-6],[-1],[-3],[-4],[2],[8],[-3],[-8],[-2],[3],[-3],[-2],[-10],[1],[-4],[3],[3],[4],[7],[-6],[7],[8],[6],[1],[8],[-6],[5],[-1],[6],[4],[-4],[-1],[-1],[4],[-4],[8],[4],[-1],[3],[-8],[8],[-3],[10],[9],[-5],[-10],[-9],[5],[-8],[9],[-9],[5],[-4],[-4],[10],[9],[4],[2],[-5],[3],[-3],[-10],[-4],[4],[4],[-7],[-2],[-6],[1],[-5],[-2],[1],[-8],[9],[4],[-5],[5],[-1],[2],[2],[-1],[-1],[-1],[1],[-7],[-3],[5],[-4],[-4],[8],[6],[-7],[1],[-9],[-3],[9],[8],[-7],[6],[-1],[6],[-3],[-5],[-4],[9],[1],[7],[6],[5],[-9],[6],[6],[-7],[-3],[3],[-6],[-7],[2],[6],[-2],[-9],[-10],[-10],[2],[-4],[8],[10],[-4],[-7],[10],[10],[-10],[4],[8],[5],[-5],[-5],[-1],[-3],[-2],[6],[7],[-6],[-5],[-7],[-2],[2],[5],[-2],[-6],[-4],[-3],[7],[-6],[9],[-9],[10],[2],[-8],[-8],[3],[-5],[1],[-1],[-4],[-2],[-9],[7],[-1],[8],[3],[-4],[5],[8],[7],[10],[3],[5],[5],[9],[-4],[-8],[-7],[6],[-10],[-7],[-2],[-5],[-1],[2],[-6],[-7],[10],[-4],[-9],[-4],[5],[-3],[1],[-10],[6],[5],[10],[-6],[-2],[8],[1],[-10],[7],[-7],[9],[7],[-5],[6],[-2],[8],[-4],[5],[-2],[7],[-9],[5],[-8],[10],[1],[2],[-9],[5],[1],[-2],[8],[2],[-1],[-9],[8],[-9],[9],[-7],[-1],[2],[4],[-3],[5],[9],[-9],[-1],[-10],[-10],[2],[6],[-3],[8],[-10],[-7],[-4],[2],[-5],[5],[3],[5],[4],[9],[-1],[-5],[-6],[4],[5],[-1],[9],[-4],[9],[2],[-1],[3],[10],[5],[4],[-8],[-1],[-9],[-3],[8],[8],[-2],[9],[1],[4],[-3],[10],[-10],[-2],[4],[7],[2],[-6],[-6],[-7],[-8],[-6],[-4],[-8],[5],[6],[-6],[2],[7],[-1],[1],[-7],[-7],[-5],[4],[1],[-8],[4],[-2],[-5],[-2],[-2],[9],[6],[-7],[9],[4],[-10],[-8],[8],[-8],[-6],[4],[8],[-10],[-2],[6],[-5],[-10],[-1],[8],[5],[-5],[-7],[-2],[7],[-1],[-8],[-2],[-2],[1],[-7],[10],[4],[-4],[6],[-4],[-8],[-6],[3],[9],[7],[2],[-7],[-4],[-7],[5],[-4],[7],[-4],[2],[5],[-1],[-8],[-7],[4],[-9],[-7],[10],[5],[5],[1],[-3],[6],[4],[1],[1],[3],[-6],[-10],[1],[8],[-7],[-1],[9],[1],[8],[-5],[-6],[1],[4],[-5],[9],[-7],[-10],[-9],[-1],[1],[1],[4],[-9],[-7],[6],[8],[-4],[3],[2],[-3],[7],[-5],[8],[-8],[-10],[-8],[-2],[-5],[7],[6],[4],[7],[-4],[8],[-8],[6],[-2],[2],[6],[9],[-6],[8],[-9],[-9],[-5],[-2],[-10],[10],[1],[1],[-10],[5],[-9],[-4],[-7],[-10],[9],[-1],[3],[9],[-6],[10],[1],[-1],[10],[2],[-8],[-4],[1],[1],[-10],[-1],[2],[-9],[5],[-4],[8],[8],[-6],[2],[2],[5],[-8],[-6],[-4],[9],[1],[-3],[5],[8],[10],[2],[6],[9],[-10],[9],[4],[1],[-3],[-3],[5],[1],[3],[6],[7],[-9],[-6],[9],[10],[5],[9],[-9],[7],[5],[6],[-7],[1],[6],[5],[5],[8],[3],[2],[7],[7],[1],[5],[1],[1],[-2],[-5],[1],[-8],[-3],[10],[6],[-9],[-1],[10],[6],[-9],[5],[8],[-6],[1],[9],[8],[5],[6],[10],[3],[4],[-7],[-6],[5],[4],[8],[8],[7],[-8],[-3],[-6],[6],[6],[9],[-10],[3],[8],[-10],[-7],[-6],[-9],[-2],[2],[-2],[-8],[7],[5],[-7],[-7],[-8],[-9],[-10],[-3],[1],[5],[10],[-2],[10],[10],[2],[8],[-3],[-5],[7],[-5],[1],[-8],[-2],[1],[-10],[3],[-8],[-10],[6],[-2],[-9],[-10],[-5],[-3],[8],[-7],[-5],[-10],[-5],[-2],[-7],[5],[-7],[8],[9],[4],[10],[2],[-10],[6],[-4],[-7],[-8],[-6],[9],[-10],[-3],[6],[1],[5],[-3],[8],[2],[7],[-7],[-10],[-7],[-10],[7],[10],[3],[4],[6],[-8],[-5],[-7],[-10],[10],[-6],[-6],[1],[4],[4],[-5],[-1],[8],[-4],[2],[4],[8],[-10],[8],[1],[4],[8],[-2],[5],[-6],[-1],[1],[-5],[-6],[1],[10],[-7],[-7],[-3],[-7],[-4],[4],[10],[-10],[4],[-5],[9],[9],[-6],[5],[-4],[-5],[5],[-7],[8],[5],[-4],[1],[-6],[8],[-8],[-9],[10],[-1],[4],[6],[-10],[8],[-4],[4],[-1],[-1],[7],[-9],[-4],[7],[4],[7],[3],[-2],[1],[-6],[10],[6],[10],[-5],[8],[-6],[-9],[-2],[-3],[-5],[4],[-3],[-9],[5],[-3],[-4],[-6],[9],[10],[-7],[-10],[-7],[-7],[4],[-7],[-1],[10],[-9],[8],[-2],[4],[6],[-6],[-6],[-6],[7],[7],[7],[-1],[7],[9],[-9],[9],[1],[-2],[8],[8],[-8],[8],[-1],[8],[-2],[-1],[10],[-1],[2],[-3],[10],[-10],[9],[3],[8],[3],[6],[-1],[-6],[4],[-5],[-9],[7],[-1],[10],[9],[-6],[-1],[1],[-2],[5],[-6],[-9],[-7],[-9],[2],[-6],[-8],[-1],[-1],[3],[-10],[-8],[-3],[5],[7],[-3],[3],[3],[6],[3],[-5],[-1],[1],[4],[-2],[1],[-5],[3],[6],[-3],[9],[10],[-9],[-4],[-5],[3],[7],[3],[-7],[-7],[3],[10],[-6],[5],[-8],[9],[-6],[1],[-1],[8],[-3],[4],[-8],[-5],[5],[1],[1],[5],[4],[-1],[8],[-2],[-6],[10],[8],[-1],[-3],[-9],[3],[4],[-8],[-3],[8],[-6],[10],[5],[-5],[4],[7],[-9],[6],[-4],[-7],[9],[-8],[6],[-2],[5],[-1],[-2],[-8],[8],[-3],[-7],[8],[7],[-7],[2],[5],[4],[6],[9],[10],[-8],[5],[-1],[9],[8],[-2],[6],[10],[2],[6],[3],[-7],[5],[8],[-1],[-8],[-1],[-1],[5],[2],[5],[8],[-1],[-7],[-8],[-9],[4],[-10],[9],[-5],[-8],[1],[7],[2],[5],[-5],[5],[4],[-4],[1],[1],[4],[7],[-8],[-2],[1],[7],[9],[-6],[-6],[-2],[-3],[-4],[5],[5],[-1],[7],[6],[1],[-4],[-9],[5],[7],[-2],[5],[-7],[-10],[-6],[-7],[-4],[8],[-1],[-1],[10],[-2],[-5],[9],[1],[-3],[10],[2],[5],[-8],[-6],[-3],[-9],[8],[-5],[-8],[-10],[-1],[-5],[6],[6],[-8],[7],[6],[10],[6],[-10],[8],[7],[1],[4],[-9],[2],[-3],[8],[-3],[-9],[5],[-1],[-2],[6],[8],[-7],[9],[-2],[-8],[-2],[3],[4],[-2],[-5],[9],[6],[-4],[4],[5],[-3],[9],[-9],[4],[9],[-10],[-8],[4],[8],[4],[-1],[-9]], dtype = "uint8")#candidate|5538|(1600, 1)|const|uint8
call_5534 = relay.TupleGetItem(func_1995_call(relay.reshape(const_5535.astype('float64'), [1, 12, 6]), relay.reshape(var_5536.astype('float64'), [7, 12, 6]), relay.reshape(var_5537.astype('int32'), [1089,]), relay.reshape(const_5538.astype('uint8'), [1600,]), ), 4)
call_5539 = relay.TupleGetItem(func_2001_call(relay.reshape(const_5535.astype('float64'), [1, 12, 6]), relay.reshape(var_5536.astype('float64'), [7, 12, 6]), relay.reshape(var_5537.astype('int32'), [1089,]), relay.reshape(const_5538.astype('uint8'), [1600,]), ), 4)
output = relay.Tuple([call_5532,call_5534,const_5535,var_5536,var_5537,const_5538,])
output2 = relay.Tuple([call_5533,call_5539,const_5535,var_5536,var_5537,const_5538,])
func_5544 = relay.Function([var_5536,var_5537,], output)
mod['func_5544'] = func_5544
mod = relay.transform.InferType()(mod)
var_5545 = relay.var("var_5545", dtype = "float64", shape = (504,))#candidate|5545|(504,)|var|float64
var_5546 = relay.var("var_5546", dtype = "int32", shape = (1, 1089))#candidate|5546|(1, 1089)|var|int32
output = func_5544(var_5545,var_5546,)
func_5547 = relay.Function([var_5545,var_5546,], output)
mutated_mod['func_5547'] = func_5547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4202_call = mod.get_global_var('func_4202')
func_4203_call = mutated_mod.get_global_var('func_4203')
call_5568 = relay.TupleGetItem(func_4202_call(), 0)
call_5569 = relay.TupleGetItem(func_4203_call(), 0)
var_5580 = relay.var("var_5580", dtype = "float64", shape = (1089,))#candidate|5580|(1089,)|var|float64
bop_5581 = relay.logical_and(call_5568.astype('bool'), relay.reshape(var_5580.astype('bool'), relay.shape_of(call_5568))) # shape=(1089,)
bop_5584 = relay.logical_and(call_5569.astype('bool'), relay.reshape(var_5580.astype('bool'), relay.shape_of(call_5569))) # shape=(1089,)
var_5590 = relay.var("var_5590", dtype = "float64", shape = (1089,))#candidate|5590|(1089,)|var|float64
bop_5591 = relay.floor_divide(var_5580.astype('float64'), relay.reshape(var_5590.astype('float64'), relay.shape_of(var_5580))) # shape=(1089,)
func_1675_call = mod.get_global_var('func_1675')
func_1681_call = mutated_mod.get_global_var('func_1681')
const_5596 = relay.const([[-8.896296,5.771699,-2.492382,4.385447],[8.309347,8.994172,1.562143,7.983625],[-2.037071,-4.477249,3.369220,8.699839],[8.429589,7.564632,8.665487,-2.839216],[-0.416996,0.326246,2.897406,-6.181814],[6.268112,-8.186675,0.942121,8.873857],[3.923331,-7.147761,9.255463,0.534128],[-4.410659,-9.538427,8.684815,1.254191],[-2.010649,-8.638174,-6.315989,6.002001],[-8.198039,-9.701450,7.459114,-7.752989],[1.907468,4.541934,-8.747654,-0.289853],[-0.438890,2.293247,2.700315,6.834301],[8.596188,8.093935,-1.633711,-7.168576],[-6.816895,4.471342,-7.106628,8.151162],[-3.229379,-4.198936,5.677402,1.177368],[-7.272135,5.156649,0.693202,0.448373],[-1.828642,-7.923575,5.289146,-9.613759],[0.506881,-7.089554,2.739763,-6.745788],[-7.267903,-1.868061,1.720856,1.384893],[-3.774639,2.934875,9.820059,5.661666],[6.052980,6.441317,-8.081396,5.184066],[5.876831,9.883136,4.950797,-0.309405],[5.232514,8.942906,-3.563466,-5.469816],[-4.613804,-0.285691,-6.274831,3.113100],[-9.427633,0.997674,-1.143008,-4.733202],[-3.408045,-4.516620,8.416217,0.844214],[-1.433049,7.246151,-5.194806,7.259779],[1.922478,-7.603908,6.461320,-3.112004],[-1.686538,-8.977726,-0.634252,-0.565810],[6.039601,-2.687873,2.403209,4.099126],[-5.823358,-5.695630,-5.829137,3.193567],[-1.501149,1.161677,-2.657557,6.844742],[8.173865,8.462400,-7.393725,-6.877955],[2.897390,5.449468,1.029911,-2.886269],[7.864253,-8.349475,-7.808770,-8.859272],[4.061663,8.313505,5.099467,0.349488],[-9.980159,-2.152877,-4.056392,-9.370955],[8.077341,8.998649,-2.020569,-1.184118],[-4.506456,3.772572,4.003382,4.115969],[-7.473070,-7.431305,2.642587,-7.809970],[-5.382799,2.915299,-9.694343,-1.948493],[5.365275,-1.572260,8.422583,0.365655],[1.823508,7.818148,-0.964125,9.990377],[5.103022,-7.053685,7.946494,-9.649234],[1.747855,4.529869,-8.127999,0.391166],[4.567653,9.425548,4.321500,-3.366934],[-6.052911,3.868019,7.503580,3.473233],[-5.405348,1.127736,-1.048246,5.613633],[8.162673,3.750833,2.472139,9.027561],[-2.160911,0.193869,-7.919038,-7.733821],[0.468391,9.018721,7.736475,6.359406],[3.726470,4.147619,4.784281,2.945095],[3.225469,-4.628917,-7.665962,5.696025],[-0.977811,-1.357806,5.748906,5.759711],[-0.147146,2.840500,0.045392,7.896709],[4.850159,5.252966,2.277365,-4.115640],[1.865992,2.621498,-5.392565,5.260338],[-8.823567,6.840036,-8.328678,-0.828355],[-7.080013,-2.119614,7.329208,-4.133312],[1.390520,3.850810,-1.789724,0.634523],[-5.102550,7.135666,-7.030513,8.608431],[-8.463076,-3.582839,-5.051649,9.381384],[-4.374769,-1.856997,4.594609,-4.057817],[-4.229739,-3.722334,5.171150,9.672334],[-1.343520,0.154883,7.291187,0.920680],[2.714164,-7.801634,6.096203,-6.151256],[-7.975602,1.948671,2.113486,-9.808836],[2.998071,8.346851,-4.492967,-5.430811],[9.061601,5.652877,-7.256071,0.846222],[-6.710850,5.900763,4.889214,6.475611],[3.535170,-9.949314,3.674026,-4.643340],[3.342250,3.141668,-6.847441,-9.280276],[8.013256,-2.179240,8.381655,-9.530331],[-2.179569,8.838802,9.125632,5.137256],[5.861819,-7.883494,-2.412769,4.834486],[-0.101964,1.822140,-9.585757,-1.279753],[-1.845677,7.097616,-4.449826,6.120264],[-6.824775,0.047391,-0.776362,-6.640882],[-3.501669,-9.600930,2.002839,-1.422816],[-8.819872,9.460738,9.332941,1.265491],[-7.042562,8.709019,-2.957101,5.930379],[4.003922,-2.380951,6.769970,6.380313],[4.528381,-0.067596,4.550808,-4.275140],[6.961718,-4.874600,-4.284780,-1.348466],[3.020334,6.737778,-9.643326,-3.481588],[0.483437,9.876420,7.008609,-0.333573],[-9.215111,4.117312,4.218052,-6.328444],[8.759898,-2.304586,-7.118985,2.833826],[-4.916465,1.749313,0.348178,1.018597],[-6.781732,-5.880427,2.062458,4.615142],[6.232582,-4.173009,-2.829822,1.064797],[7.280392,7.131109,-0.398669,1.599187],[-9.471706,-4.411557,-6.294069,-5.685508],[-0.881728,-1.466254,-4.290740,-1.515815],[5.320748,-7.219941,5.594636,1.064598],[7.846095,-5.480068,0.112960,3.269416],[-1.792701,-0.671608,6.706620,6.885238],[5.590909,8.316722,7.095709,2.186141],[-9.425593,4.618522,-4.013290,3.309996],[0.440031,1.141090,2.557615,-2.914692],[-7.429963,8.605110,-3.747567,-5.402285],[-6.793110,7.234397,1.137959,-0.982026],[-5.264187,2.064254,6.782877,4.324736],[-6.896586,3.596228,1.610209,3.661628],[-3.535584,9.672618,1.788408,-5.611472],[2.577499,-5.267896,3.937703,1.449682],[-3.573637,-2.251301,7.469682,-0.151813],[-3.819118,6.045119,-3.064858,-6.452303],[1.081705,9.793699,3.944516,4.959803],[9.956586,5.198106,-6.562020,-2.406311],[6.455266,-0.614244,-3.987412,-0.206026],[1.446482,-8.573547,-9.732663,-1.221267]], dtype = "float64")#candidate|5596|(112, 4)|const|float64
var_5597 = relay.var("var_5597", dtype = "float64", shape = (10, 4))#candidate|5597|(10, 4)|var|float64
const_5598 = relay.const([-6.130180,2.912351,-3.818032,8.384493,7.649449,-2.080421,-6.369693,0.630178,2.118640,5.863913,-3.023349,9.400902,6.938829,-4.591720,6.868236,2.367180,3.769733,-7.451646,6.132466,7.227153,-8.761619,-4.639136,8.493500,9.969998,3.707201,-9.920740,2.659314,2.470276,3.569925,6.425199,9.549748,-4.865987,8.634452,4.581143,-1.350334,5.211614,-2.080302,-2.980211,0.982246,-3.379344,-1.321526,-1.506913,-6.015478,1.745696,6.965700,-7.316227,6.351546,-2.564643,0.215903,-9.168307,-6.773980,-3.766683,7.507370,-2.241685,8.796338,-5.009313,6.411441,1.625476,-4.532912,-9.433019,6.483296,-7.006764,2.275662,5.903307,-1.236848,5.142539,2.201367,6.365749,-3.826694,7.208618,-6.362514,7.175749,3.900659,7.534589,5.745447,7.394124,-2.057052,-0.784824,-0.620106,1.570386,5.248964,5.045981,-1.129865,6.588017,-7.477323,-9.343869,-1.198155,3.636273,-0.645484,4.488284,-7.323624,-3.051871,9.795389,-4.587901,-7.669107,-4.614414,-0.815364,-0.848391,0.877778,9.155032,0.790267,-0.950447,-9.098078,1.526679,7.722614,-6.509505,7.591186,-8.096214,3.078080,0.578580,-2.775713,2.352280,3.734304,-5.605906,-8.996890,6.156794,9.431446,6.410289,1.973906,0.752762,-7.629599,-3.658851,-8.051022,-4.706750,7.398759,-2.262678,5.960872,3.346578,6.354550,6.180883,1.095623,9.624819,5.511700,-0.037762,5.095951,1.144317,-3.700121,-6.111920,-7.521790,-5.895852,-3.466566,-4.197575,4.647189,-7.906818,1.259268,-6.735567,-5.483534,3.844008,-3.369422,-4.630167,9.087016,8.861904,0.123501,7.165454,-7.541281,-5.227013,-0.810575,7.550274,-6.253250,-0.402034,4.804460,-5.104196,3.632229,2.941877,-5.664477,0.384194,8.666131,8.195165,-2.737134,5.379608,-8.916074,1.679487,-1.872556,-5.148255,9.106483,-4.569667,2.484410,-0.413208,-2.751197,9.303291,-4.098239,9.011928,8.296806,-0.584576,4.759546,0.322939,6.743807,-1.920823,9.711310,-2.588817,6.867462,4.329341,-7.254121,6.538579,-0.656987,9.829413,-4.746405,-9.856242,6.817387,2.781063,-4.903910,-9.081498,-7.366611,6.194455,-9.446209,-6.758563,-4.816411,-3.379337,5.304621,-2.012599,-6.071889,-6.297405,-9.593280,3.188634,-4.245682,-9.303674,1.060551,-8.837046,7.980031,5.650856,-8.321602,3.140697,6.784334,0.718397,-9.745826,-5.952236,4.051368,8.668284,-1.130798,6.904234,8.379668,5.044965,-8.500166,-9.840880,-4.441507,4.055414,1.610208,9.126073,4.924716,-7.601587,-3.500017,-4.268132,0.207974,5.720497,-1.822735,-9.812853,-7.936345,-8.543173,-9.075512,-3.268408,-0.922927,7.698889,6.223299,1.035141,9.957969,-0.632468,-2.691672,3.537599,-5.487766,9.722501,8.695100,-1.379038,-2.940074,-7.918179,-7.944406,7.587760,4.198312,-4.819283,0.080853,7.397403,0.247822,3.994344,-1.452537,-5.502301,0.829866,-5.968169,1.803425,8.462064,1.515915,-1.950541,-9.469481,5.836498,-6.630683,-9.420332,1.911718,-4.948729,7.236663,-1.021649,-1.482852,-4.855177,3.514515,-6.911999,-6.888767,-9.856382,-4.232956,8.279415,-2.936330,-2.132619,-1.572413,-3.060747,-2.463466,8.143590,-6.189699,7.424403,-9.097848,0.064252,-6.798230,-5.725811,2.369319,8.197188,-7.969202,-3.096410,7.654180,4.439031,-0.759064,1.394204,0.424085,-0.963872,-3.675101,-3.124459,-7.757295,-9.674800,-2.757501,3.004997,4.651286,5.579363,6.002626,-8.522640,-9.277203,-7.007819,-9.804099,2.602403,-5.856334,6.128941,8.335263,4.437076,6.257591,4.137230,9.989287,5.194636,8.624383,-3.580150,9.337079,2.504883,-3.800948,-7.160584,2.790317,-5.798817,7.672776,-6.410389,-3.299855,-0.423499,-3.909873,9.575185,-3.379941,-5.615342,9.667288,-0.053035,-6.905281,-7.930989,-8.443181,7.917824,-0.539927,2.812746,4.406854,-1.095712,-4.462822,-1.579403,-7.446984,-5.387242,-2.084565,-8.573619,4.558034,-6.978623,-7.682069,-6.744446,9.018852,-9.637953,-8.413330,-9.079806,-8.565231,4.144623,5.992154,9.506400,0.191163,7.486174,-7.930045,1.077494,-6.720263,2.259484,-5.423049,1.259427,4.265606,9.255532,-5.714280,-8.001657,-2.329427,7.078326,7.140563,-9.569761,-8.978690,-9.399468,6.559410,-4.170682,-9.725929,5.929583,3.205446,-7.205990,-4.528560,-1.819921,6.483643,5.242242,-6.427338,-7.627805,4.565769,-5.855544,-6.537474,4.956733,-2.935718,9.425581,9.556830,8.349713,-5.033423,-5.691451,4.463155,4.235954,6.360242,5.944233,4.074146,4.739704,-9.893492,-2.000153,-9.731857,-8.933950,0.084712,9.524492,-7.499648,9.518214,2.859495,-0.538511,8.322095,9.952770,-9.592326,-9.365996,-6.475800,6.896587,-6.762689,6.226514,8.553533,9.918484,-9.937842,4.662588,-5.975971,5.898703,-0.643455,-4.708010,4.928032,-9.804832,-4.423702,0.999947,-8.262617,3.148597,-6.228191,-5.774016,4.769261,-1.772836,-8.045186,-0.625436,-0.221057,-2.172916,1.872986,-4.037714,3.227385,0.707602,-6.845215,-2.550612,5.523363,8.785225,3.261185,6.243717,9.582621,-7.540157,3.226592,-7.791950,-3.717752,7.622430,-6.324220,-4.442272,-3.617760,6.230433,-5.106912,-0.187733,-3.658649,9.978065,2.349800,-4.764957,-8.124939,-4.456319,9.004673,6.994781,-5.967539,-6.164848,9.962791,-1.059016,-1.546110,-0.361249,4.428484,-8.871458,-3.712078,3.310056,-9.160917,-3.733391,-8.479683,-2.564078,-5.975193,1.793225,-3.925186,6.109137,-1.661086,-0.846771,7.880658,8.907014,6.121910,-4.541908,2.690509,7.784307,3.857238,-9.686608,-8.686454,-9.355341,2.740568,5.328617,8.412219,6.834777,-0.904238,-5.437886,-0.675475,0.324905,4.981536,1.259184,7.132946,-4.590740,-4.224870,9.116205,1.278933,8.059674,4.771918,6.556639,1.200479,0.405720,-9.560460,-5.325657,8.387139,-3.803508,4.489067,-4.892515,-0.123087,-0.999291,5.403166,5.970004,8.992485,7.820798,-8.149964,6.272534,0.450053,3.097048,-7.020720,-9.907725,1.783963,-3.362118,-2.331156,-1.163183,0.359019,-5.526671,-3.187353,8.638412,-9.612786,-6.400760,2.675294,4.928166,-1.149040,-5.056382,-7.982554,7.667723,2.719862,-8.715872,-9.073659,-8.277467,7.929195,-0.478297,9.980213,4.261260,9.558205,-3.570543,1.215829,9.277725,-9.978321,-5.037061,6.464635,8.996433,8.828794,-3.505578,-2.486389,1.519864,7.095310,6.820721,-7.276202,2.534183,-6.985745,-7.389243,2.537417,-7.468162,-4.279579,-4.561263,-2.926768,-7.227370,2.521635,5.132972,-8.767188,-9.834352,-8.048018,-2.670670,-4.605719,-6.431655,6.626077,7.978542,0.569393,-8.101253,-6.162711,1.408449,-8.572528,8.518023,-6.859640,8.682265,2.076318,1.321410,9.766782,-4.896796,8.842832,7.205383,-4.072319,0.135544,-9.581740,4.155682,-4.074964,9.560570,-8.105414,-3.235849,0.428216,7.497293,0.324197,-8.077288,-5.561082,3.575495,-4.776125,-5.268476,2.308137,-6.247171,-3.237975,-0.809406,-0.126176,9.784263,-1.015199,3.102440,-9.931901,3.678614,5.857605,-6.293928,-9.583853,5.218159,-5.167904,5.793417,5.459132,7.962877,1.433715,-0.499548,7.004543,7.573490,-8.874631,1.016323,1.802861,-1.653695,0.616861,3.318167,-9.591817,-5.731991,-2.432815,-8.198094,6.587322,3.730797,-1.480683,-1.153179,-3.674467,7.657192,-8.314801,1.270313,3.034017,0.583591,-5.122972,4.897857,5.511464,-9.182971,7.364247,-7.995576,-4.561744,-4.748881,6.551102,9.935624,-6.571573,-8.514843,2.035596,-3.364160,-0.149050,5.877694,-5.371887,2.827773,-8.383724,-3.332345,1.545143,-8.201727], dtype = "float32")#candidate|5598|(720,)|const|float32
call_5595 = relay.TupleGetItem(func_1675_call(relay.reshape(const_5596.astype('float64'), [14, 16, 2]), relay.reshape(var_5597.astype('float64'), [40,]), relay.reshape(const_5598.astype('float32'), [720,]), relay.reshape(call_5568.astype('int32'), [121, 9]), relay.reshape(bop_5581.astype('int32'), [121, 9]), ), 4)
call_5599 = relay.TupleGetItem(func_1681_call(relay.reshape(const_5596.astype('float64'), [14, 16, 2]), relay.reshape(var_5597.astype('float64'), [40,]), relay.reshape(const_5598.astype('float32'), [720,]), relay.reshape(call_5568.astype('int32'), [121, 9]), relay.reshape(bop_5581.astype('int32'), [121, 9]), ), 4)
uop_5602 = relay.acosh(var_5590.astype('float64')) # shape=(1089,)
bop_5609 = relay.less(uop_5602.astype('bool'), relay.reshape(bop_5581.astype('bool'), relay.shape_of(uop_5602))) # shape=(1089,)
bop_5612 = relay.less(uop_5602.astype('bool'), relay.reshape(bop_5584.astype('bool'), relay.shape_of(uop_5602))) # shape=(1089,)
output = relay.Tuple([bop_5591,call_5595,const_5596,var_5597,const_5598,bop_5609,])
output2 = relay.Tuple([bop_5591,call_5599,const_5596,var_5597,const_5598,bop_5612,])
func_5617 = relay.Function([var_5580,var_5590,var_5597,], output)
mod['func_5617'] = func_5617
mod = relay.transform.InferType()(mod)
mutated_mod['func_5617'] = func_5617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5617_call = mutated_mod.get_global_var('func_5617')
var_5619 = relay.var("var_5619", dtype = "float64", shape = (1089,))#candidate|5619|(1089,)|var|float64
var_5620 = relay.var("var_5620", dtype = "float64", shape = (1089,))#candidate|5620|(1089,)|var|float64
var_5621 = relay.var("var_5621", dtype = "float64", shape = (10, 4))#candidate|5621|(10, 4)|var|float64
call_5618 = func_5617_call(var_5619,var_5620,var_5621,)
output = call_5618
func_5622 = relay.Function([var_5619,var_5620,var_5621,], output)
mutated_mod['func_5622'] = func_5622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3180_call = mod.get_global_var('func_3180')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_5624 = func_3180_call()
call_5625 = func_3180_call()
var_5627 = relay.var("var_5627", dtype = "float32", shape = (1089,))#candidate|5627|(1089,)|var|float32
bop_5628 = relay.right_shift(call_5624.astype('uint8'), relay.reshape(var_5627.astype('uint8'), relay.shape_of(call_5624))) # shape=(1089,)
bop_5631 = relay.right_shift(call_5625.astype('uint8'), relay.reshape(var_5627.astype('uint8'), relay.shape_of(call_5625))) # shape=(1089,)
func_2502_call = mod.get_global_var('func_2502')
func_2503_call = mutated_mod.get_global_var('func_2503')
call_5633 = relay.TupleGetItem(func_2502_call(), 0)
call_5634 = relay.TupleGetItem(func_2503_call(), 0)
func_1995_call = mod.get_global_var('func_1995')
func_2001_call = mutated_mod.get_global_var('func_2001')
const_5639 = relay.const([1.239121,-4.359368,-2.680701,4.873194,4.351118,4.714217,-5.590558,1.551260,8.742590,-4.129751,-5.247090,-7.276438,-5.403342,8.952610,-0.869280,9.571221,7.753912,0.005556,3.238713,1.984541,-4.528338,0.320974,-4.297070,6.590544,-9.088288,1.667226,-6.935866,8.508271,-9.211180,-8.613564,-7.955100,-2.053514,-8.849371,4.739070,1.308213,-8.868479,-7.557602,-7.330064,-3.696868,-0.008272,-5.959030,-2.964713,6.843054,6.350820,-3.925842,-0.585784,1.580370,-5.806276,-3.040047,-6.688443,-7.599292,-1.710315,-0.658872,-4.517008,-5.785368,0.372664,-4.558089,8.568018,-4.215935,0.152987,1.804198,7.898551,7.980277,-1.278596,5.537492,7.420331,0.717021,-6.980910,-2.260735,5.368730,7.006771,5.802311], dtype = "float64")#candidate|5639|(72,)|const|float64
var_5640 = relay.var("var_5640", dtype = "float64", shape = (504,))#candidate|5640|(504,)|var|float64
const_5641 = relay.const([2,9,-4,1,5,-7,6,-2,7,7,-9,1,3,-6,2,-2,-7,-4,-1,-3,9,-5,-5,-2,-10,-6,-3,9,-1,-4,-10,-9,9,-10,-8,-5,10,-4,8,9,4,-8,-2,-3,-2,8,-5,-1,-10,-5,1,-7,-1,-9,-4,8,4,7,3,-3,-8,10,-9,10,-1,10,-6,-4,6,7,-4,10,-10,-5,8,1,10,1,-10,1,-7,-5,7,-7,5,-7,-8,-6,-5,-3,-1,-10,4,2,-6,7,-5,-4,4,-7,7,7,-2,-4,-3,9,1,-5,-5,-1,10,-2,-2,7,-8,-4,-8,-10,3,-7,-3,10,-8,-9,2,3,1,6,10,1,8,4,-8,6,8,-8,2,5,3,-2,-7,6,10,3,-3,-9,4,9,-8,5,-10,7,1,1,-7,8,10,1,-3,-10,-1,-9,2,6,3,-6,-4,-5,6,-8,1,-8,-9,-8,5,1,7,-10,-8,-9,-8,3,1,-9,-6,-1,-3,7,-9,-6,-5,10,-7,-2,-7,-5,7,8,-8,6,-4,-2,-7,-10,-5,1,-3,1,3,4,-4,6,-9,-1,3,-4,4,5,6,-8,-6,-9,1,-1,-3,4,-6,-9,7,5,-5,7,4,3,-1,-10,-3,6,-9,8,-1,-7,5,3,6,-1,6,4,-4,-1,9,4,8,-6,6,-9,8,-6,-6,6,7,-4,-9,-3,7,-10,5,8,3,-10,-8,5,-9,-3,-10,-6,8,9,10,2,8,-2,3,6,-4,4,7,1,2,8,3,-8,4,10,-3,-1,-4,4,5,-5,8,2,-1,-1,7,5,-5,-2,-4,5,5,-8,1,8,2,4,5,5,-8,-8,-8,-4,-10,6,-1,1,8,-6,-1,-6,10,-1,5,8,4,8,-1,-9,-3,4,7,-1,-5,6,3,-7,10,-5,-7,10,-3,5,5,4,8,-1,5,10,8,6,-5,-4,4,-4,6,-4,4,-2,3,6,-8,-6,8,-5,-1,-10,7,-3,-5,1,1,-10,-5,6,10,1,1,-3,5,-9,-10,-5,5,5,7,3,3,4,8,6,-4,-8,-4,7,-10,8,-7,4,-2,-2,-6,8,-8,7,-4,6,10,6,6,5,-10,-3,-7,9,-7,-8,-3,4,9,-9,-6,3,-10,2,-2,1,2,-1,2,-8,-8,-4,3,4,9,6,-8,-3,-10,4,4,6,-9,4,-6,2,9,8,-4,-3,-6,10,10,4,-10,1,-2,-1,3,-4,-8,-6,-2,8,-9,-9,-1,-10,-4,-10,3,-10,8,7,7,-4,-8,3,-5,4,-5,8,5,7,-4,-6,8,-9,-7,10,8,2,-4,-5,-9,2,5,-8,-10,2,3,9,3,-10,8,6,-5,3,-5,-8,-9,-6,4,5,-2,8,-4,-9,-8,-7,10,-2,4,-6,-4,-3,9,-9,5,7,-2,1,5,-3,10,1,5,-6,-9,-8,-9,9,-10,8,-2,-1,1,10,-3,-9,5,4,3,1,-4,-8,1,10,-6,7,3,-2,-3,8,-7,10,7,4,-5,4,3,2,-7,-5,9,1,-1,6,-9,-9,-3,10,2,10,6,-5,-5,-3,7,5,2,-10,1,7,2,6,-3,-5,-8,-10,-10,5,2,-8,-10,7,-9,4,-2,-9,5,8,-2,2,-2,8,9,-7,-5,-2,-8,-6,-3,-8,-9,9,-6,1,2,10,8,-5,-5,-8,7,-5,8,-3,-10,-5,-2,3,1,-6,9,-8,7,-4,6,-1,3,-10,-7,-1,6,8,-2,5,-6,10,-10,2,10,10,-1,10,8,4,-3,-4,5,-8,-2,-2,-8,2,1,-5,-2,-8,7,7,-6,-3,-10,-9,-7,-3,1,-7,-8,-7,5,-9,-9,1,2,3,3,-8,-3,7,3,-10,5,-1,8,-3,10,-9,-8,-6,10,-10,-7,5,5,-3,2,-1,3,-4,-10,4,-9,-10,5,7,7,-8,8,-8,7,-1,7,10,6,10,8,-7,-7,2,-4,9,10,10,3,3,9,1,-8,5,4,9,9,9,-4,8,-3,1,-4,-1,9,9,10,2,-2,1,2,7,7,-5,-8,10,2,3,2,-5,10,7,-5,-9,7,4,-3,9,9,-2,1,-8,-3,8,-9,-4,-8,-10,-1,-3,-10,-8,-10,-2,10,-7,5,-3,8,-4,6,-5,-3,1,-3,-4,3,-5,-8,-3,-2,9,-8,8,6,1,3,10,1,2,6,-1,6,4,-5,-2,9,-8,8,3,9,-7,1,10,9,-10,-6,5,-6,-7,6,-10,5,-4,-4,-6,-2,-7,2,-5,-9,-5,-5,-8,9,-2,7,2,7,-2,2,6,-2,-6,-2,5,-7,6,-3,3,-10,-9,-6,-8,8,6,9,-5,-6,-7,-4,-2,5,5,4,3,4,10,6,4,7,5,3,9,3,-10,8,-9,9,2,3,-7,9,8,-7,-9,-2,2,-4,-5,-7,-3,-6,-8,8,10,9,-10,-7,4,-1,-10,-7,8,-3,10,9,-5,-8,4,6,7,1,4,6,-4,10,1,4,1,-4,7,4,10,6,-8,-8,-8,2,9,-1,-6,6,-10,-9,-10,-2,8,-1,-8,4,1,-2,-1,2,-4,-4,4,10,-2,5,-5,1,4,2,2,9,8,-4,-6,10,7,-10,5,3,2,1,6,1,-5,2,-10,1,-10,6,9,-6,3,-7,8,6,-1,-7,1,5,-2,-3,7,8,-9,3,-4,8,5,-6,7,-6,10,-5,1,7,6,6,4,-9,10,-4,-3,2,8,-4,1,-5,-3,-2,-8,-10,6,6,-9,4,-10,-6,1,-2,7,3,-4,-8,9,-3,-6,-1,-6,4,-3,7,-9,6,-10,-8,-2,4,1,5,10,5,1,-8,-3,4,-3,1,5,-1,-4,3,-9,-6,-7,-10,-8,-2,-3,8,5,3,-3,9,2,5,8,-5,-3,9,1,8,4,-8,2,-4,8,-6,-2,8,-6,1,9,1,5,3,-7,5,2,-10,-9,-3,2,7,6,-9,10,-6,-3,2,-9,6,-5,9,2,2,-4,8,6,-1,1,-9,-9,10,4,-2,9,8,6,-1,-7,-2,10,8,-7,2,-8,-9,-6,10,2,-10,9,5,5,6,1,-4,1,-8,-2,6,-9,-8,-5,4,2,8,-2,-7,-1,3,-4,-2,1,-3,10,7,-2,4,-5,7,-2,9,10,-3,10,4,4,-10,7,10,-1,-7,-1,-2,-9,4,-4,7,8,6,7,1,-9,6,4,-5,2,8,5,10,9,-7,-6,8,4,1,7,5,-4,-3,-9,-1,-2,-4,1,3,9,-4,2,-8,-5,2,-2,-7,7,5,10,-5,-7,9,7,9,-2,3,-2,-4,2,8,-10,2,-6,-3,3,9,9,9,2,3,8,1,9,-10,1,8,-4,9,9,6,-10,-3,3,-6,-9,-10,-7,8,6,10,7,-9,10,1,-9,-1,-2,-1,-6,1,-8,-2,-3,4,10,7,3,6,-5,5,4,5,2,-2,-5,-2,3,9,-6,-5,8,-2,7,6,-7,-6,-9,-8,8,-9,-10,-5,7,-10,6,9,-9,-7,-1,8,6,-10,8,-7,-5,-9,-7,1,-8,-7,8,10,-9,4,4,9,-10,6,-6,-4,7,-9,8,8,-10,-2,-1,8,1,-9,5,-4,8,3,-3,6,-8,4,-6,2,5,6,6,5,7,-2,-3,-7,8,-4,7,-1,-8,1,-5,-10,6,-8,2,-2,1,-1,-2,-5,8,-1,1,10,-5,3,-7,-2,-3,-7,-8,-3,-5,-1,-5,-7,-8,-8,8,-8,2,-5,-6,-1,-1,-5,-7,8,-5,9,7,-2,4,-4,1,-9,5,3,-3,2,5,3,-6,-6,-1,-10,2,-1,-6,-3,9,10,-6,-5,9,2,-5,-6,7,-3,-6,7,8,6,-5,9,-9,-7,-3,-3,-10,-6,4,-9,3,-1,6,7,-8,-6,-2,-8,-5,5,5,-2,-4,3,10,9,3,-4,-10,3,-6,2,5,8,-4,1,10,8,2,10,-1,-9,10,3,4,9,-6,-7,-2,-2,5,-8,7,-7,-5,-2,7,-3,5,-7,4,9,7,-1,-9,7,-4,-9,9,9,4,-2,-5,7,3,-8,-10,-6,-3,7,-10,7,9,5,3,-4,9,5,-3,3,6,4,10,-4,7,-8,8,-10,-1,-7,-3,9,-8,-6,-9,-8,4,-3,-2,-9,10,5,-1,5,2,-6,2,6,2], dtype = "uint8")#candidate|5641|(1600,)|const|uint8
call_5638 = relay.TupleGetItem(func_1995_call(relay.reshape(const_5639.astype('float64'), [1, 12, 6]), relay.reshape(var_5640.astype('float64'), [7, 12, 6]), relay.reshape(var_5627.astype('int32'), [1089,]), relay.reshape(const_5641.astype('uint8'), [1600,]), ), 6)
call_5642 = relay.TupleGetItem(func_2001_call(relay.reshape(const_5639.astype('float64'), [1, 12, 6]), relay.reshape(var_5640.astype('float64'), [7, 12, 6]), relay.reshape(var_5627.astype('int32'), [1089,]), relay.reshape(const_5641.astype('uint8'), [1600,]), ), 6)
func_4371_call = mod.get_global_var('func_4371')
func_4373_call = mutated_mod.get_global_var('func_4373')
call_5648 = relay.TupleGetItem(func_4371_call(), 3)
call_5649 = relay.TupleGetItem(func_4373_call(), 3)
output = relay.Tuple([bop_5628,call_5633,call_5638,const_5639,var_5640,const_5641,call_5648,])
output2 = relay.Tuple([bop_5631,call_5634,call_5642,const_5639,var_5640,const_5641,call_5649,])
func_5650 = relay.Function([var_5627,var_5640,], output)
mod['func_5650'] = func_5650
mod = relay.transform.InferType()(mod)
mutated_mod['func_5650'] = func_5650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5650_call = mutated_mod.get_global_var('func_5650')
var_5652 = relay.var("var_5652", dtype = "float32", shape = (1089,))#candidate|5652|(1089,)|var|float32
var_5653 = relay.var("var_5653", dtype = "float64", shape = (504,))#candidate|5653|(504,)|var|float64
call_5651 = func_5650_call(var_5652,var_5653,)
output = call_5651
func_5654 = relay.Function([var_5652,var_5653,], output)
mutated_mod['func_5654'] = func_5654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3343_call = mod.get_global_var('func_3343')
func_3345_call = mutated_mod.get_global_var('func_3345')
call_5692 = func_3343_call()
call_5693 = func_3343_call()
output = call_5692
output2 = call_5693
func_5703 = relay.Function([], output)
mod['func_5703'] = func_5703
mod = relay.transform.InferType()(mod)
output = func_5703()
func_5704 = relay.Function([], output)
mutated_mod['func_5704'] = func_5704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3160_call = mod.get_global_var('func_3160')
func_3162_call = mutated_mod.get_global_var('func_3162')
call_5709 = relay.TupleGetItem(func_3160_call(), 1)
call_5710 = relay.TupleGetItem(func_3162_call(), 1)
var_5717 = relay.var("var_5717", dtype = "float32", shape = (16, 5, 9))#candidate|5717|(16, 5, 9)|var|float32
bop_5718 = relay.equal(call_5709.astype('bool'), relay.reshape(var_5717.astype('bool'), relay.shape_of(call_5709))) # shape=(16, 5, 9)
bop_5721 = relay.equal(call_5710.astype('bool'), relay.reshape(var_5717.astype('bool'), relay.shape_of(call_5710))) # shape=(16, 5, 9)
uop_5723 = relay.exp(call_5709.astype('float64')) # shape=(16, 5, 9)
uop_5725 = relay.exp(call_5710.astype('float64')) # shape=(16, 5, 9)
func_3618_call = mod.get_global_var('func_3618')
func_3621_call = mutated_mod.get_global_var('func_3621')
const_5728 = relay.const([-1.708560,1.632628,2.555571,7.014735,6.955986,0.953677,-7.047389,3.288245,2.619704,1.234049,-4.367691,4.143633,5.575865,8.012708,-2.272054,8.465957,0.918503,4.253707,-4.448053,1.726182,-2.995551,9.482175,-9.779355,7.132449,-8.340848,-1.512799,-0.273977,1.145832,1.222788,6.462986,7.183617,-2.235754,4.347591,-3.815822,-6.255836,-6.007181,-4.022714,5.737680,-7.304380,-6.822999,2.724055,-6.268559,-1.395706,1.225400,-2.519013,-8.246655,2.146096,-9.480790,-2.961007,-0.215084,9.520315,-5.846527,2.337188,-8.863623,-9.427939,-1.711051,6.263017,1.880557,-2.923002,0.184345,2.147773,-1.755607,-0.840200,-8.847720,6.200098,8.646257,1.086224,-5.014263,8.857025,-8.851903], dtype = "float64")#candidate|5728|(70,)|const|float64
call_5727 = func_3618_call(relay.reshape(const_5728.astype('float64'), [5, 7, 2]))
call_5729 = func_3618_call(relay.reshape(const_5728.astype('float64'), [5, 7, 2]))
bop_5731 = relay.not_equal(bop_5718.astype('bool'), relay.reshape(var_5717.astype('bool'), relay.shape_of(bop_5718))) # shape=(16, 5, 9)
bop_5734 = relay.not_equal(bop_5721.astype('bool'), relay.reshape(var_5717.astype('bool'), relay.shape_of(bop_5721))) # shape=(16, 5, 9)
output = relay.Tuple([uop_5723,call_5727,const_5728,bop_5731,])
output2 = relay.Tuple([uop_5725,call_5729,const_5728,bop_5734,])
func_5748 = relay.Function([var_5717,], output)
mod['func_5748'] = func_5748
mod = relay.transform.InferType()(mod)
mutated_mod['func_5748'] = func_5748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5749 = relay.var("var_5749", dtype = "float32", shape = (16, 5, 9))#candidate|5749|(16, 5, 9)|var|float32
func_5748_call = mutated_mod.get_global_var('func_5748')
call_5750 = func_5748_call(var_5749)
output = call_5750
func_5751 = relay.Function([var_5749], output)
mutated_mod['func_5751'] = func_5751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3383_call = mod.get_global_var('func_3383')
func_3385_call = mutated_mod.get_global_var('func_3385')
call_5788 = func_3383_call()
call_5789 = func_3383_call()
func_3862_call = mod.get_global_var('func_3862')
func_3866_call = mutated_mod.get_global_var('func_3866')
var_5816 = relay.var("var_5816", dtype = "float64", shape = (36, 2))#candidate|5816|(36, 2)|var|float64
const_5817 = relay.const([-9,6,-2,-1,-8,3,-4,-3,-8,-6,-8,-10,-5,-7,-10,-9,-7,-6,-2,7,-7,5,-1,-6,1,-5,-8,-8,-7,-2,-1,-8,6,1,-1,7,9,9,2,-8,-9,6,9,-10,10,3,-5,-2,-5,10,-9,3,-2,-7,-10,-1,-7,-8,-10,-3,10,-2,7,7,-6,7,5,5,-4,4,-9,-5,-2,3,3,4,1,10,1,9,6,7,8,1,-6,8,-9,-2,-9,-5,-10,-6,7,9,3,7,6,1,6,9,-8,-5,-1,-10,-1,-1,-5,4,-2,10,-2,5,1,-5,-9,-8,1,-5,-10,5,1,-4,4,10,2,-1,7,6,3,4,6,-8,5,3,10,9,-5,-10,3,-7,10,-1,6,-4,9,-1,-9,-1,-4,-2,-2,6,7,8,-5,-7,3,-1,-5,7,4,8,9,-10,6,7,-4,-5,10,3,8,-10,9,-1,-6,-10,-6,-4,10,10,-5,-3,-4,9,2,9,1,-3,9,-5,-2,-5,-3,-7,-4,-8,6,9,-8,1,-2,3,10,-4,-2,5,-5,-4,1,1,8,6,9,-1,-4,10,-3,-9,-1,-1,3,-8,-8,7,4,7,-9,6,-6,8,1,4,-1,8,-8,-6,7,-9,6,6,-8,-4,4,7,-8,10,3,5,8,7,-6,-7,6,-8,4,2,5,-8,-9,10,10,-9,5,6,-1,9,5,-8,4,1,2,-1,-3,-7,-6,10,-7,8,6,7,-6,-3,-4,9,-9,-5,6,-9,5,-1,-2,-6,3,5,7,-5,8,-3,10,-2,2,1,3,9,5,10,3,8,-9,5,5,-10,-9,7,5,-2,7,7,3,-10,7,8,6,-8,-1,5,-3,10,8,-5,9,9,1,5,-1,-4,7,-10,2,-1,9,10,1,-7,-1,9,8,-5,-6,-2,-7,7,2,8,5,8,5,7,-2,-4,-7,-1,3,-3,-8,5,-5,1,2,-1,1,1,7,-2,4,-2,-1,5,10,-2,-7,4,-1,-7,-6,-10,-8,-3,-10,-6,2,-7,-2,6,4,-10,9,1,1,-5,-8,4,-5,-3,-3,-1,-8,8,3,-9,4,-8,-3,4,-6,-3,-3,10,-3,5,3,-10,8,-8,4,8,9,2,4,8,-5,4,-7,8,-9,-5,-10,-1,5,-9,-1,6,4,3,-3,8,1,8,8,7,8,8,-9,6,2,-2,6,-2,7,8,6,10,10,7,-3,-5,-10,-10,-4,2,4,7,-3,10,-4,-2,6,10,-1,4,-1,6,2,10,-2,1,8,8,9,-3,-8,-3,-8,-2,10,-2,5,-4,-4,6,-1,-4,9,2,3,2,10,-6,10,7,4,-3,-7,-9,-3,9,-1,5,-8,-7,2,-10,5,-3,6,5,9,-10,-4,1,1,3,4,2,-5,-1,-10,-1,1,-10,-4,-6,4,3,-2,-7,-4,-6,8,-8,-1,-10,-2,-6,7,-9,-10,7,-8,3,-5,-6,3,-7,4,-4,6,3,-6,-2,-4,5,-5,-9,-3,4,3,6,4,6,9,-2,-5,5,-4,6,8,-4,-4,-6,5,4,2,5,5,3,-3,-1,9,-2,4,3,-1,-5,-9,-3,-2,4,9,9,1,8,-4,2,4,8,-2,-10,-7,-8,-7,-3,-8,-3,6,-10,4,1,-4,3,7,-8,2,3,-6,-6,-4,1,5,8,8,10,-4,9,-6,-10,6,5,7,-9,-9,-5,3,-4,2,4,9,-9,7,-3,-2,9,2,-8,-1,1,2,-4,3,-7,-9,-4,-5,3,5,-6,-10,7,-10,-10,-1,-1,-10,8,-3,10,-6,-10,9,4,1,3,6,3,4,-6,-8,-8,2,-2,2,6,-8,10,2,-3,3,-4,5,-4,-3,-6,7,-7,-3,-5,3,-5,-10,8,7,6,-7,-9,-10,-5,-3,-1,-8,-1,-9,8,-8,1,-5,1,-10,4,-7,-4,-7,-9,-2,3,1,1,-8,2,-9,3,1,10,1,3,-8,-7,5,-7,8,-7,4,9,-6,-8,-3,10,5,7,5,-3,6,10,-8,8,-9,-3,2,6,2,-2,-5,8,4,5,5,2,8,3,-3,1,8,6,7,-10,6,-3,6,-8,-9,8,10,7,6,-5,-3,-10,10,2,7,-6,4,1,-5,8,3,9,-10,3,-8,-4,5,-1,1,2,-5,-9,10,-9,-3,8,-5,-1,-5,2,5,2,1,2,-9,9,3,-5,10,-7,-10,-8,1,-1,-4,-8,8,-6,7,2,6,-2,-9,-1,8,1,2,5,9,-2,9,-1,-3,-8,8,-6,9,-3,-4,7,-4,-2,-10,-2,2,-3,5,8,2,8,-3,-6,4,-1,6,2,8,8,10,-8,-5,1,-4,8,2,8,10,-10,-3,-1,-10,-9,-7,-8,-7,7,-7,10,7,7,-3,7,-9,6,-7,-1,1,7,6,-5,4,-3,-10,2,2,-9,4,-8,4,-7,10,9,-7,-9,4,6,-6,6,-5,-5,10,1,1,-9,3,5,-3,7,3,-6,10,2,2,-3,-8,3,-2,2,-6,-10,8,-4,-2,-4,7,-9,-2,4,-10,-1,3,8,2,1,-2,7,-6,2,10,-10,-6,5,-1,3,5,-2,10,6,-10,10,-9,6,5,-3,6,3,6,1,6,9,-8,2,10,9,-6,-6,3,-10,9,-7,-1,-10,-10,-2,-5,-10,3,2,-7,-5,-8,-7,2,1,-3,10,-1,-8,-1,9,-3,-10,8,-10,-1,-9,-6,1,-4,-1,3,10,2,-4,10,9,-10,-2,9,5,-8,10,-1,-4,-3,3,-8,1,2,-3,9,-10,10,-1,-5,-10,9,7,-9,4,-7,10,-1,-7,6,-7,-9,6,-8,-10,-3,6,-8,-1,-3,1,-3,7,-9,7,2,10,3,-3,-5,6,3,10,-2,-10,-8,-6,9,-5,8,6,7,5,6,-1,-3,8,6,7,1,-6,8,1,7,-8,7,-7,3,-4,-2,-9,1,-2,9,8,7,-10,6,-2,7,-8,-7,-9,-10,7,-10,-8,-6,-10,10,-5,-2,1,6,2,7,-8,-6,-3,3,-10,-8,4,9,-9,5,-3,8,-6,-9,-10,8,-9,8,-3,-3,4,9,3,3,6,-7,5,-5,2,7,10,-9,-10,-10,7,-5,-5,8,-4,-2,-9,9,4,4,6,5,9,-5,-2,3,10,-8,-4,-3,-7,7,3,1,10,1,-1,1,4,-10,-3,-6,2,-8,-10,5,7,5,-9,-5,-4,-4,5,-4,3,5,-8,1,-5,-8,-1,4,6,5,-10,4,-7,8,4,-2,5,-3,6,-4,-4,-6,5,2,-3,-9,-7,6,9,-9,5,2,-7,-4,-10,4,1,8,3,-9,6,9,1,1,-9,-5,-2,-4,-1,-1,-7,4,6,5,-3,-6,-4,-4,10,9,8,4,10,-8,-8,-3,-8,4,2,-5,-8,3,6,9,7,-7,-1,-4,3,-3,4,8,6,8,-1,-10,-2,1,4,-7,-7,5,-7,10,-2,-1,-10,10,10,3,-9,-2,-9,10,-4,-2,3,-8,8,-2,-2,9,-3,7,5,7,-4,6,2,7,-4,7,-8,-10,5,-7,7,9,4,-5,10,6,1,-7,9,6,-3,-3,-10,-7,6,-1,1,5,10,6,-2,-1,-4,5,-4,-9,6,8,-6,10,-1,9,3,-7,3,-10,-6,9,1,5,5,-2,5,-8,9,5,10,-1,-7,7,-4,7,10,-1,-2,-8,-10,9,-2,-8,-6,10,6,-1,2,5,5,-9,9,-9,8,-7,8,4,4,3,-7,-6,-6,6,-4,-7,2,-5,-8,4,-2,4,9,-1,2,-5,-9,-1,-7,-7,7,-2,-2,2,1,-5,8,-4,9,-4,-1,9,-7,9,7,-6,1,-5,-7,2,6,-3,-7,3,-2,7,3,5,8,7,9,-4,-1,1,8,6,-1,8,5,3,6,3,10,3,-2,-5,-2,-1,-10,3,-6,-1,7,4,-1,-9,9,-8,10,6,10,2,2,8,-6,9,-7,10,10,-6,-10,-7,7,-7,7,-6,7,-2,1,-3,9,8,10,2,9,10,2,-10,3,5,-3,8,1,10,-9,7,-5,-4,1,7,-3,-3,2,-6,-3,6,4,-9,-5,-6,-2,-2,8,-3,3,2,5,-3,-9,4,1,-1,4,-1,8,3,2,8,1,-10,-1,2,-8,-5,-5,-10,-6,3,-8,9,2,6,7,-4,5], dtype = "uint8")#candidate|5817|(1600,)|const|uint8
const_5818 = relay.const([-8,2,-2,-2,5,5,-2,3,5,-6,4,-10,5,-1,2,7,-1,-4,8,-9,-8,4,5,10,9,-6,7,6,-2,2,-1,3,-8,4,-5,-8,-9,4,8,-3,-9,10,5,-8,2,-2,-9,-4,2,-4,5,9,-4,10,-7,9,-10,-4,6,3,-3,1,-9,-10,5,7,6,3,-9,2,-6,3,-3,-2,-10,8,-9,5,6,-9,3,-10,-4,-1,-8,10,-5,1,-2,6,7,5,-3,-3,8,-1,-8,10,-5,-6,3,8,-10,5,-9,4,-6,-1,-9,-9,8,8,10,9,-8,-10,-10,-10,-5,-10,7,-2,1,4,-10,7,-5,-6,-2,2,-8,2,1,8,-6,-2,-4,-5,-10,7,2,-7,-8,1,8,1,-6,-5,6,2,-4,2,-9,-3,6,8,-3,-6,-10,2,-10,3,9,-10,-1,-4,7,1,4,4,5,7,-10,10,10,7,8,-6,8,-1,-10,-4,-2,2,10,-4,-9,10,6,7,-3,-7,-4,7,3,-3,-10,8,1,-7,-6,-3,-6,2,4,-9,6,7,1,4,-1,-6,3,4,-4,4], dtype = "uint32")#candidate|5818|(216,)|const|uint32
call_5815 = relay.TupleGetItem(func_3862_call(relay.reshape(var_5816.astype('float64'), [72,]), relay.reshape(const_5817.astype('uint8'), [1600,]), relay.reshape(const_5818.astype('uint32'), [216,]), ), 7)
call_5819 = relay.TupleGetItem(func_3866_call(relay.reshape(var_5816.astype('float64'), [72,]), relay.reshape(const_5817.astype('uint8'), [1600,]), relay.reshape(const_5818.astype('uint32'), [216,]), ), 7)
func_2930_call = mod.get_global_var('func_2930')
func_2934_call = mutated_mod.get_global_var('func_2934')
var_5828 = relay.var("var_5828", dtype = "uint16", shape = (195,))#candidate|5828|(195,)|var|uint16
var_5829 = relay.var("var_5829", dtype = "uint16", shape = (2925,))#candidate|5829|(2925,)|var|uint16
call_5827 = relay.TupleGetItem(func_2930_call(relay.reshape(var_5828.astype('uint16'), [1, 13, 15]), relay.reshape(var_5829.astype('uint16'), [15, 13, 15]), ), 1)
call_5830 = relay.TupleGetItem(func_2934_call(relay.reshape(var_5828.astype('uint16'), [1, 13, 15]), relay.reshape(var_5829.astype('uint16'), [15, 13, 15]), ), 1)
uop_5834 = relay.log(call_5788.astype('float32')) # shape=(14, 5, 4)
uop_5836 = relay.log(call_5789.astype('float32')) # shape=(14, 5, 4)
output = relay.Tuple([call_5815,var_5816,const_5817,const_5818,call_5827,var_5828,var_5829,uop_5834,])
output2 = relay.Tuple([call_5819,var_5816,const_5817,const_5818,call_5830,var_5828,var_5829,uop_5836,])
func_5842 = relay.Function([var_5816,var_5828,var_5829,], output)
mod['func_5842'] = func_5842
mod = relay.transform.InferType()(mod)
var_5843 = relay.var("var_5843", dtype = "float64", shape = (36, 2))#candidate|5843|(36, 2)|var|float64
var_5844 = relay.var("var_5844", dtype = "uint16", shape = (195,))#candidate|5844|(195,)|var|uint16
var_5845 = relay.var("var_5845", dtype = "uint16", shape = (2925,))#candidate|5845|(2925,)|var|uint16
output = func_5842(var_5843,var_5844,var_5845,)
func_5846 = relay.Function([var_5843,var_5844,var_5845,], output)
mutated_mod['func_5846'] = func_5846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4178_call = mod.get_global_var('func_4178')
func_4179_call = mutated_mod.get_global_var('func_4179')
call_5888 = func_4178_call()
call_5889 = func_4178_call()
func_3415_call = mod.get_global_var('func_3415')
func_3417_call = mutated_mod.get_global_var('func_3417')
call_5894 = func_3415_call()
call_5895 = func_3415_call()
func_4966_call = mod.get_global_var('func_4966')
func_4968_call = mutated_mod.get_global_var('func_4968')
const_5918 = relay.const([[-7.917248,-7.476523,-3.758052,-0.093146,-6.661694,-4.407736,-2.823791,-1.984034,-2.025224,-3.150798,-5.976250,-5.984633,4.410730,4.547224,-4.034675,2.140387,-9.008947,-3.264613,8.453713,-9.671282,1.579143,5.536986,9.329594,-1.830544,1.843138,-0.994890,3.313142,-3.936315,-5.301917,-7.867287,-6.000402,9.000083,-2.858025,-4.543649,-6.803440,5.175792,2.089292,0.902637,-5.618167,8.740749,-9.601512,-9.960689,-1.278738,-0.093784,-1.708347,7.921921,2.355966,-2.619572,-7.837717,8.766015,7.830874,-8.004226,4.491320,4.748083,-8.954726,-2.583148,-7.813771,-6.939435,7.678628,0.741415,8.137568,4.744416,3.108915,-1.003183,-2.949548,-7.021368,-0.686572,-7.269390,-2.962635,-8.534842,-2.454691,-7.921152,7.989100,4.428117,9.333036,-9.198926,-7.041220,5.067530,8.043401,2.758379,1.485908,-4.207823,9.945939,-8.677679,-7.389878,-8.589501,8.582271,-0.945809,9.079330,3.868864,-2.181346,6.432569,5.027164,8.927166,9.617072,-4.662444,-0.277570,-7.158355,-0.002059,-5.064490,8.665884,2.477161,5.084591,2.329863,-3.145180,0.795393,6.878877,0.394031,-2.608376,3.554423,6.430010,-7.199388,-8.348854,2.193655,6.380282,-1.094410,-8.775659,3.588216,1.131432,-0.334178,-0.946643,-1.718582,4.102762,-9.583119,-1.080451,5.292510,-0.927002,-7.548508,-9.105386,6.860327,8.026380,4.967857,0.028188,1.495162,4.934378,-8.835741,9.598124,2.622498,-3.336178,-9.981562,-9.961095,5.409741,-9.098764,6.711172,0.943199,-4.453713,-3.717127,5.728245,4.429584,-7.828123,-7.331069,-6.876960,-7.074066,-8.204429,0.338502,3.506715,-2.689258,-4.374866,-1.738189,-6.599826,-9.708564,-7.615702,-5.814356,3.859481,-4.122703,-0.211994,-2.865148,6.719224,9.544619,-3.060388,-0.490597,-5.258465,-2.075034,3.617987,-8.159494,-2.132152,8.959762,-3.461115,-2.990836,1.899764,4.488278,-5.899537,-7.542194,-4.098296,9.269402,-9.405052,5.471713,4.240576,-3.208788,-3.506876,-4.707862,9.228959,-1.136611,8.102524,1.964851,4.600325,-7.949822,5.571423,6.747274,-7.199509,-7.701260,3.352469,7.517414,9.701446,1.878180,8.448736,-0.121103,5.331747,-2.342545,-3.101879,6.122094,-0.865256,3.113377,-1.641197,-0.768360,2.779132,-0.997399,-2.670470,9.384871,4.956724,7.617915,-3.823117,8.568352,-8.559197,-4.402100,-0.392574,8.677511,-6.286505,-6.706187,1.599295,6.018702,6.893603,9.717526,-8.279531,2.376857,-6.050608,-2.609479,-0.347406,-9.743074,2.468621,1.492606,9.893228,-1.843532,4.658000,-9.709425,6.341298,-2.612097,0.479327,-6.133766,-6.668343,2.268703,1.466503,-1.672448,-4.176820,-5.417116,6.350356,9.675240,-5.676506,-4.405907,-7.885730,9.474951,8.883180,-8.085819,5.008894,-4.620371,-8.454012,-9.589088,4.877916,3.747537,-6.214086,3.234722,-5.178035,-8.227038,-5.358098,-8.489368,9.752774,8.955065,0.959459,-3.041247,-4.645176,1.542252,-6.029065,-3.354987,-9.039149,6.671199,-4.164483,-0.102281,7.169493,9.379260,-9.024133,-0.731561,2.979878,-2.383243,6.224684,-9.537659,0.598504,-0.105510,8.375114,4.262667,0.201135,-1.936890,7.903338,-9.137837,5.905709,-1.574407,1.393996,-1.403689,-8.932109,-9.873870,5.427979,-6.136105,-7.093739,-1.153833,1.847755,1.111499,1.553248,-6.646878,-8.446574,6.587757,6.773364,5.171109,6.097601,0.387776,-5.122185,4.430376,-8.307090,-9.012250,2.904827,9.150348,-1.174079,1.646507,-6.183838,-2.075301,-6.294357,4.756331,-2.553004,-9.283190,-6.824941,1.615785,6.802716,-1.861429,-3.257215,-5.040835,7.054433,6.491918,-9.674794,0.251756,-5.035999,-9.397057,-1.007758,-2.981516,-6.579879,-5.253881,0.522067,-7.441766,-7.968299,-0.173042,3.958483,-1.849584,-2.664607,0.947160,-9.076449,-0.642361,-8.806633,3.116990,-8.549887,8.013125,0.633577,7.170338,-9.965506,2.362778,-2.421779,2.993531,8.482220,-5.320155,7.014073,-1.339775,4.843501,4.195827,6.554104,-4.814116,-4.875878,4.721328,9.729556,-9.011232,-6.104018,-6.961474,-0.666304,-2.703445,-9.345392,5.607769,-7.288689,1.073918,-5.500143,-1.960406,-0.855453,6.466639,-1.160839,-1.761688,1.890942,2.305744,-4.947966,-8.205161,-8.923039,-2.373789,-0.545274,-9.036766,-3.127861,-2.628093,-1.352731,-3.629783,2.245111,-6.851899,-7.944023,2.034223,7.170526,5.779922,-2.878056,-5.258247,9.617953,3.337762,5.155365,-9.090140,-6.986236,-6.678186,9.966389,4.710069,5.565049,5.388688,-1.727111,6.843571,4.141863,5.265010,6.009591,-1.947286,1.504271,-8.188895,-0.782816,-4.600762,1.615854,5.879091,4.189324,6.175649,-5.462755,5.824610,7.477393,5.651594,7.830867,-6.438506,-3.098564,8.646753,3.028619,-1.256843,7.624847,-8.944257,-6.236356,3.122724,-4.425113,-8.116669,4.540319,2.725692,-6.100100,-2.455976,8.583641,-3.203187,3.075425,4.156991,5.636782,-1.745806,-9.023473,7.738572,6.410694,9.880052,6.158913,-2.891967,6.996999,1.948217,-7.076261,9.849846,5.813721,-3.126163,-2.009006,8.565255,6.092291,-7.786584,-0.473795,-0.293935,-3.984148,2.493065,4.340368,3.542466,7.650685,6.757067,-4.290513,0.790944,-6.802938,-3.835905,-2.252034,9.317902,-7.965616,9.051702,3.724220,-9.649251,7.110636,-4.157571,2.010950,8.850030,-8.792810,2.396083,-5.579156,-4.736220,-0.600831,2.831698,-5.881403,-6.931881,-7.894098,0.114683,-0.638567,6.135139,0.265723,-8.085820,9.844129,4.569708,-1.652445,-9.358707,-8.367429,-1.506189,-0.069260,6.692818,-8.605286,9.488226,1.874914,-8.284507,-0.399245,-2.981506,4.676740,-3.300088,-9.729840,0.460602,-0.642435,6.125327,-5.294443,2.762546,0.630870,-4.753840,9.178307,-2.363556,-9.357146,-5.804878,0.968388,3.041705,2.738305,6.483757,2.220138,9.187163,3.798714,-2.957855,-9.678210,-8.913450,-2.059727,9.390555,-9.061499,0.802143,-7.949417,3.051562,-8.574498,7.412818,-1.968602,7.062058,8.889016,-3.998870,-5.565306,-6.317397,-5.959333,-2.795930,2.898277,-1.004830,-9.243126,2.371520,9.236802,-6.660406,8.767930,-1.352567,-2.328004,4.385277,-5.049829,-2.959793,0.649138,0.516562,2.799800,-0.227655,0.990268,-3.325446,-4.687017,-3.725275,-3.627698,5.020205,-5.276315,-2.936649,-1.548965,-9.827049,2.878621,3.102784,-2.785773,-0.681886,-3.772457,-2.833087,-4.711151,6.750190,-5.079217,-9.152314,-4.294815,-1.607470,9.698444,-4.231119,3.860106,-9.570293,5.753845,9.397429,-8.552064,-3.737994,-4.238549,-6.355578,2.175756,-1.972157,-4.101509,5.198495,-9.289426,5.329596,-3.492894,3.101865,0.223089,-0.542370,2.190682,-5.494159,0.415832,7.411989,0.988088,-2.823876,1.144792,8.756635,-0.314474,3.546909,-8.619390,-5.258602,-9.506853,-3.635155,-9.035898,-6.732548,-7.225707,0.195635,1.842842,-9.861063,0.170595,-1.507729,0.684580,-5.858645,-8.861976,-2.199409,-2.623991,5.627130,6.737091,-2.376209,-0.061142,5.199326,5.497145,-0.987636,4.500509,-1.329633,-8.780579,-3.169214,-8.052108,9.029245,-5.970483,0.728247,-6.871048,4.927250,2.364070,9.010978,-1.039895,-6.228843,-4.508540,5.208664,8.132554,-9.926168,-6.265979,0.005517,7.694896,1.562535,5.098131,-8.256845,2.448300,7.507222,-7.704012,-3.353445,7.769782,-5.487692,4.154874,-3.894878,4.175665,-1.627215,8.554199,-4.412785,-1.974539,-8.480035,1.073379,-6.850084,-2.446683,7.040213,-8.083504,1.758770,-6.305472,1.644796,4.270707,9.926763,-7.845590,-6.774877,1.102039,-8.952537,-7.202506]], dtype = "float32")#candidate|5918|(1, 720)|const|float32
call_5917 = relay.TupleGetItem(func_4966_call(relay.reshape(const_5918.astype('float32'), [720,])), 5)
call_5919 = relay.TupleGetItem(func_4968_call(relay.reshape(const_5918.astype('float32'), [720,])), 5)
output = relay.Tuple([call_5888,call_5894,call_5917,const_5918,])
output2 = relay.Tuple([call_5889,call_5895,call_5919,const_5918,])
func_5923 = relay.Function([], output)
mod['func_5923'] = func_5923
mod = relay.transform.InferType()(mod)
mutated_mod['func_5923'] = func_5923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5923_call = mutated_mod.get_global_var('func_5923')
call_5924 = func_5923_call()
output = call_5924
func_5925 = relay.Function([], output)
mutated_mod['func_5925'] = func_5925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5069_call = mod.get_global_var('func_5069')
func_5071_call = mutated_mod.get_global_var('func_5071')
call_5931 = relay.TupleGetItem(func_5069_call(), 1)
call_5932 = relay.TupleGetItem(func_5071_call(), 1)
output = call_5931
output2 = call_5932
func_5937 = relay.Function([], output)
mod['func_5937'] = func_5937
mod = relay.transform.InferType()(mod)
output = func_5937()
func_5938 = relay.Function([], output)
mutated_mod['func_5938'] = func_5938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2403_call = mod.get_global_var('func_2403')
func_2404_call = mutated_mod.get_global_var('func_2404')
call_5962 = relay.TupleGetItem(func_2403_call(), 1)
call_5963 = relay.TupleGetItem(func_2404_call(), 1)
func_2930_call = mod.get_global_var('func_2930')
func_2934_call = mutated_mod.get_global_var('func_2934')
const_5970 = relay.const([5,1,-3,-2,-10,5,3,-3,8,-3,-5,9,-2,2,10,-6,-9,8,-9,-6,7,8,-5,2,3,8,-10,5,8,1,7,6,6,7,8,-4,-7,7,-5,5,4,7,-2,6,-2,-1,-6,-2,-1,-8,4,-4,-4,3,9,7,-3,7,-1,-7,-2,1,-3,10,1,5,-10,6,-1,5,-1,3,-9,9,-5,-2,-5,5,-5,4,-3,-3,7,8,10,-5,-6,-5,9,4,10,-1,6,-3,-10,-6,3,7,9,-7,9,-10,-2,-9,-6,-5,8,1,1,-4,10,-6,-1,2,-8,-9,-3,-3,3,-6,-6,7,-8,-7,-4,-1,-3,9,10,4,-2,-7,3,10,2,6,8,2,-4,6,-4,-4,6,2,5,-5,10,-2,2,10,-1,-3,-10,6,8,3,2,8,1,5,-6,2,10,1,-9,7,-7,-10,7,-2,9,4,5,9,-4,9,-5,-7,9,9,1,8,8,9,-4,-8,-6,-6,8,6,-2,-1,-8,-1,10], dtype = "uint16")#candidate|5970|(195,)|const|uint16
var_5971 = relay.var("var_5971", dtype = "uint16", shape = (195, 15))#candidate|5971|(195, 15)|var|uint16
call_5969 = relay.TupleGetItem(func_2930_call(relay.reshape(const_5970.astype('uint16'), [1, 13, 15]), relay.reshape(var_5971.astype('uint16'), [15, 13, 15]), ), 1)
call_5972 = relay.TupleGetItem(func_2934_call(relay.reshape(const_5970.astype('uint16'), [1, 13, 15]), relay.reshape(var_5971.astype('uint16'), [15, 13, 15]), ), 1)
func_5923_call = mod.get_global_var('func_5923')
func_5925_call = mutated_mod.get_global_var('func_5925')
call_5977 = relay.TupleGetItem(func_5923_call(), 1)
call_5978 = relay.TupleGetItem(func_5925_call(), 1)
uop_5985 = relay.log10(var_5971.astype('float64')) # shape=(195, 15)
func_5376_call = mod.get_global_var('func_5376')
func_5379_call = mutated_mod.get_global_var('func_5379')
const_5992 = relay.const([6.160338,1.632511,-3.880528,7.866343,-3.692667,3.115986,5.591073,-9.419616,3.611357,-2.468420,-0.943200,3.975765,2.179885,-1.653111,-7.268335,7.592135,6.279295,-5.208640,9.129869,-8.372182,3.587357,-8.739632,4.694678,-1.858490,9.724807,-4.049153,-6.522035,-4.751831,-3.601329,-4.351985,-0.149820,-9.429600,2.885550,1.001334,1.419078,-1.700125,4.630201,9.948077,1.440088,8.444860,4.037815,-0.014947,-4.750431,6.675172,-3.269614,9.215953,6.988267,-8.230911,-6.429737,4.716583,6.204423,-4.394918,-5.718927,3.360006,-6.766252,-1.263153,9.146161,7.091899,5.118348,-0.560321,7.448618,-4.270433,8.005498,8.752399,9.183154,6.054741,-3.388899,4.721998,-5.673183,-4.882580,-3.452362,-3.440520,5.170137,6.540970,-2.617723,-1.354113,7.542570,-8.544780,-2.779669,-1.158284,8.021445,-2.914810,6.268096,-6.899197,5.541469,-7.446544,-8.964397,6.401757,2.665924,-8.659025,-2.015588,6.499965,-1.319634,-0.033154,4.392931,-8.590250,4.176540,-6.790753,-1.881510,-6.951536,1.610696,9.772183,1.153894,4.099632,3.560204,-8.965447,7.011899,6.108188,2.633759,-8.292474,-3.202280,8.887824,4.455287,7.479678,4.584310,2.205219,-8.077334,-1.424367,9.315016,-1.829677,6.630249,-4.432209,-8.146440,-8.931296,-3.968171,-8.650239,5.455622,-8.795988,4.335031,7.814125,9.431508,6.848229,1.512435,3.419682,-3.717761,-6.997287,-8.726970,-8.168915,-5.702254,-6.375414,4.376064,-1.297133,2.005302,2.268179,-4.337550,6.779133,-2.653947,5.716687,-0.556899,-3.299531,1.891867,-9.610324,-2.892086,-9.133002,-6.068352,2.635325,-8.786465,-3.862781,-3.647136,-9.352764,-0.482751,-1.106956,4.148704,0.496025,-4.050199,-4.943650,-2.580462,7.125744,9.242269,8.112198,-6.900296,0.411028,-5.437148,-9.094654,8.387278,9.140868,-3.367937,-1.249437,-5.059893,1.337781,-4.837524,-5.466168,3.515461,6.306405,9.688774,-8.158267,5.223874,-4.570937,5.559925,-5.262527,-8.474959,1.927204,7.797917,-9.104321,7.743560,-1.006323,6.836995,-8.003054,-5.800479,9.326589,-1.312986,9.446627,6.834561,-2.922116,4.644083,4.297590,-2.813957,-2.930572,5.698447,5.709707,7.120086,-7.552558,-7.494531,0.926648,-0.572651,7.123843,-2.258573,-3.756466,-4.913014,-2.212702,6.082433,5.643470,-7.219268,2.871787,-5.024783,-8.460466,-7.221581,-2.157165,2.859252,1.818781,-2.237588,3.800664,0.339483,-9.925615,-3.838985,7.626001,9.767197,5.541582,9.627380,9.948561,-1.468576,4.575692,-4.040249,0.985673,2.619840,9.039659,8.497865,-7.399540,-0.041531,7.234887,6.388123,-5.365938,7.392484,8.446078,-9.273457,6.030607,-2.405905,4.245223,-8.018579,2.790360,5.143016,-8.933949,0.234521,0.444965,8.941085,-7.709272,-9.585010,8.810493,-1.541718,-5.907652,9.498436,2.693762,-8.445244,-4.853338,-6.134633,-5.692816,-7.085408,-4.685507,7.408376,3.470117,-4.062842,7.601546,-1.040463,6.629703,4.536908,6.628449,4.017624,9.174994,4.791966,-7.095113,8.526196,8.729413,7.945380,8.590285,-8.412793,-3.241772,-5.429403,7.524078,-6.105196,5.510720,-5.451207,9.055242,-1.057804,5.292645,-5.772967,4.907859,-2.615138,-7.797494,-2.224323,-2.924791,-1.121132,-3.776989,-8.292487,-7.568814,-6.134659,2.122371,-3.751247,-5.047042,2.189292,8.076483,6.706337,6.944715,1.382485,-0.363740,6.019138,-5.665372,5.778018,-1.345315,-9.809629,-3.873205,-0.342961,0.615423,-8.017353,8.413683,4.882403,-4.473871,3.353397,-5.589130,9.997017,4.761364,0.535513,-0.108394,-8.532171,3.292329,5.252469,2.496907,3.799172,6.079692,-9.302013,9.040485,6.645765,-8.490472,0.748239,3.905501,1.949301,9.158165,9.632970,6.907051,-6.407161,-9.560851,3.847657,1.683822,3.140561,-3.431657,-5.289907,3.344577,6.958246,-9.684533,6.516669,7.424302,-0.202617,7.131836,5.687411,4.611793,0.061844,2.520035,0.660918,4.983637,5.736708,-6.491159,2.229623,3.145044,-1.245409,7.826404,-2.982954,-8.917057,7.491437,-8.901875,4.001091,-8.868887,2.154626,4.074343,8.763166,0.180112,-9.367357,-1.705424,-9.435167,2.971685,1.129636,-3.476461,8.562306,7.416651,-8.929040,5.265249,3.976741,6.226054,-9.705819,-1.725901,4.794375,-2.883635,6.277540,-5.241759,8.654524,-7.468918,-1.259104,-4.058786,-9.461479,1.913626,9.545166,-1.320292,-0.311670,7.181077,-7.806348,-3.971881,-6.930442,4.595984,7.024252,8.524715,7.768643,-9.131810,-7.920683,-4.149930,-4.938727,3.870349,-2.466395,-3.205092,9.073183,7.325944,8.832415,-5.133858,9.967585,-3.710457,9.683526,6.151128,0.440027,-4.875980,-2.174468,-9.843786,-2.816437,-8.024902,3.015148,-6.255237,-8.186599,-4.628158,4.352442,6.194774,3.369805,-6.378520,2.758749,3.489779,4.958537,-6.861682,-9.772396,-9.234410,2.489461,-8.122416,0.523497,8.483980,-0.385816,-7.665582,-3.092179,-4.857846,8.067800,-1.123796,-1.562439,0.347886,-9.880021,6.808120,7.144094,3.326555,-0.537092,7.120595,-3.140145,-9.361972,7.957652,4.887791,-4.068344,0.832796,-8.631005,5.609490,0.104521,-2.228122,-8.446576,8.141368,2.783209,-2.501418,-7.354618,9.733392,1.196043,0.172047,-3.227375,-5.720449,2.151575,-6.194778,-7.372079,-2.495391,7.220998,1.835715,0.606871,5.995179,4.913818,-1.573947,6.298636,8.555659,0.434080,4.731377,8.392604,3.385870,2.149958,-2.790319,9.892200,-0.681880,9.865074,-0.973794,-2.371717,1.483908,-4.578321,9.645109,9.641507,-3.320576,5.785220,2.290510,4.661126,5.068408,-1.080680,-9.791514,4.293835,-2.894002,-7.960326,4.619693,-4.366242,1.202667,-8.384938,2.430199,8.416842,1.503472,9.873424,3.184815,1.447439,-7.677594,-6.844201,6.027349,4.914115,-9.359134,-2.622010,-6.219930,-5.908459,6.581232,-0.244416,-0.467911,-2.504519,-1.481853,-5.413856,9.300286,1.664748,-4.069022,-1.414955,5.593395,5.175010,-9.000960,6.020656,8.035041,-1.227256,-2.053752,9.413661,-2.113777,-6.920385,0.485788,-2.586602,-9.107181,-2.189323,6.731060,-8.266245,-8.666736,-8.713758,-7.219028,9.074920,2.215556,-2.127921,-3.160602,-5.546183,-2.433490,-7.460166,-1.070234,-6.012605,-3.736120,2.131121,5.355325,-1.746689,6.466190,-1.463096,-3.752185,0.443690,9.355821,6.695190,8.866851,-6.287592,7.120164,-6.136584,9.630244,-4.197343,7.580390,3.102076,-7.593541,1.021203,-0.828296,8.814589,9.188209,-4.041867,-4.298986,4.523491,-7.229793,7.888497,-5.674281,9.288977,-9.777242,4.936037,1.921372,3.073506,-1.248452,5.537516,-3.505593,3.538802,-9.068502,9.117370,5.841827,-8.555099,-9.474599,7.527601,6.315103,7.545162,9.270036,-0.426788,5.869035,-9.312259,-5.967866,7.783963,-0.013542,-8.954511,-0.569157,5.607656,-9.528438,1.593612,-4.321767,9.004798,0.788572,0.363048,7.917086,8.794470,9.302881,-2.770289,-7.984967,9.968064,-5.228412,6.523789,6.938416,8.239244,-7.621558,-2.748908,8.986462,3.776339,-8.217054,2.423112,-0.070419,2.093238,-2.231680,9.071634,8.429955,5.722745,-1.609067,-3.699867,-1.568038,-7.584696,4.352435,9.855477,-3.346065,2.993187,4.041625,9.524808,-7.814946,-3.109728,-0.280327,0.628337,-5.862571,-5.984852,2.269553,-0.117204,-9.810748,-0.124669,7.689087,-6.073688,-2.946980,7.171541,0.148188,3.170528,9.759301,-6.656042,0.617898,5.192613,7.017020,9.511046,-3.044599,-6.821859,-5.718012,-1.551846,-1.860704,6.622628,9.924083,-8.375954,7.710646,-5.092193,5.538751,8.371850,-1.316251,-2.327174,-1.554591,-6.936291,0.549111,9.033971,1.252047,-7.672867,-1.310230,8.607028,-8.936444,-7.401106,3.005696,-6.954425,-8.585346,-8.832073,-0.173483,-6.090875,-7.154011,1.078227,3.133822,6.759320,1.846299,-9.714780,7.712538,4.247639,0.837424,-5.938277,-3.751640,-6.509609,-7.850661,3.135149,0.569025,5.642283,-9.062701,-2.590615,9.628595,-7.143763,7.986844,-4.674588,-5.483392,-7.269433,-4.438540,9.835545,1.318777,0.479653,-2.962741,-2.323240,-7.319400,9.744159,-0.786061,-4.545812,6.489214,-6.955376,0.667295,1.847139,-3.424798,3.877014,-0.607643,2.483034,-5.190684,4.700809,6.819669,3.013952,0.595578,-0.851712,-1.598440,0.628364,-7.547047,-0.539737,6.489392,9.613166,6.910072,-9.091790,4.124527,6.500088,-9.746342,-4.290769,-9.522707,6.395448,-6.536384,3.952932,-6.478566,-0.478425,3.786614,-7.720418,6.623852,-5.773393,-4.197602,-0.256051,4.648492,-5.137912,0.926986,6.766185,-9.713068,1.562111,5.342884,9.779242,-0.913660,-9.035242,-9.683977,-5.250706,-5.342562,-1.439100,4.337411,7.111786,-6.191159,-0.478174,-9.082164,9.125910,-7.068531,-5.227529,9.297143,6.218381,2.786310,4.222527,-5.709580,8.550299,1.441767,2.024429,3.426615,7.335831,-1.837430,2.811576,0.620860,8.837647,0.077762,9.604299,5.318283,-3.331049,-7.266692,-3.134167,5.901046,-7.503908,4.698071,9.069840,-6.430523,-3.264912,-9.787649,5.324812,-4.311561,1.525969,-4.292173,8.436282,5.454444,6.919702,4.692800,-5.940585,5.476011,3.698317,3.705317,7.636384,5.123852,-2.403907,0.517197,-8.420748,7.306572,-2.437290,-4.677717,0.922499,5.865811,-5.378182,1.902426,-1.504062,1.306085,4.990270,-7.634240,-1.850306,0.496836,-0.884934,-9.294464,-8.090671,-2.863043,-6.836997,-7.615376,6.997298,-8.654141,6.735458,-2.576372,-7.690012,4.425832,-2.860053,5.210340,-1.599558,-2.202911,3.387656,9.653195,-4.940132,-6.296463,-3.018747,-2.840219,5.702104,0.617641,-9.711791,-1.105643,6.034202,5.137528,6.386709,-2.518142,0.241226,-7.139469,-2.635624,-8.420782,-3.753856,4.620344,-0.215777,-3.455459,-8.729200,-8.033743,5.851155,6.049521,-1.121417,6.712284,0.495292,5.173463,-5.614361,-8.739727,1.603052,5.461573,1.587043,4.208754,-1.015737,4.976958,2.577805,-1.468879,-9.097890,-5.346299,-3.557583,1.420671,1.708491,-9.640064,-3.069573,-6.986639,8.544170,2.666794,-0.155720,-7.041465,-3.573800,6.874901,0.713130,3.818428,-1.967185,1.493804,6.943546,-0.803248,3.881425,-2.527096,7.339639,-2.914878,-8.659118,-2.092702,-8.961565,9.827989,-8.084904,-9.323995,-6.867927,-2.383806,6.085611,9.608880,-4.517320,-8.788585,-0.723351,3.604046,9.477367,1.212901,-0.700951,6.541362,-0.733275,4.005851,8.761452,0.706832,0.091828,-5.679041,4.841572,3.708569,-4.561229,2.787922,-9.702096,-9.273941,-9.544096,6.094870,8.260636,9.373281,-7.953649,3.432781,2.638208,1.646182,-5.084121,9.313403,-9.922962,2.042504,-3.033998,5.755488,4.050630,3.809221,8.858994,-8.996060,9.911243,0.203680,1.849816,1.923595,4.700917,8.009617,4.008886,9.615784,-4.308426,-5.467747,0.494911,1.484532,3.273738,6.202766,-7.301702,-5.637535,3.063104,3.822379,-7.815728,8.671191,8.599039,1.049126,-3.188927,-5.451054,5.642472,1.527725,4.097294,0.031753,1.637077,2.462623,9.218167,8.450232,4.350965,2.941850,-9.333610,6.861930,6.650318,-9.136564,9.097695,-8.269332,3.114212,-2.576212,3.735590,2.167092,-7.140913,-6.316625,-1.682187,-6.390760,-7.908863,6.896892,8.976968,-1.876056,1.380621,-8.472879,-6.069531,3.576106,-6.035390,-0.159538,-4.172884,7.518363,-9.756195,-3.550634,6.334524,9.895772,-3.878557,-9.408896,4.526973,-7.443844,0.915526], dtype = "float64")#candidate|5992|(1089,)|const|float64
call_5991 = func_5376_call(relay.reshape(const_5992.astype('float64'), [1089,]))
call_5993 = func_5376_call(relay.reshape(const_5992.astype('float64'), [1089,]))
output = relay.Tuple([call_5962,call_5969,const_5970,call_5977,uop_5985,call_5991,const_5992,])
output2 = relay.Tuple([call_5963,call_5972,const_5970,call_5978,uop_5985,call_5993,const_5992,])
func_5996 = relay.Function([var_5971,], output)
mod['func_5996'] = func_5996
mod = relay.transform.InferType()(mod)
mutated_mod['func_5996'] = func_5996
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5997 = relay.var("var_5997", dtype = "uint16", shape = (195, 15))#candidate|5997|(195, 15)|var|uint16
func_5996_call = mutated_mod.get_global_var('func_5996')
call_5998 = func_5996_call(var_5997)
output = call_5998
func_5999 = relay.Function([var_5997], output)
mutated_mod['func_5999'] = func_5999
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6106 = relay.constdtype = "float32")#candidate|6106|(7, 2, 16)|const|float32
uop_6107 = relay.acosh(const_6106.astype('float32')) # shape=(7, 2, 16)
output = uop_6107
output2 = uop_6107
func_6114 = relay.Function([], output)
mod['func_6114'] = func_6114
mod = relay.transform.InferType()(mod)
mutated_mod['func_6114'] = func_6114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6114_call = mutated_mod.get_global_var('func_6114')
call_6115 = func_6114_call()
output = call_6115
func_6116 = relay.Function([], output)
mutated_mod['func_6116'] = func_6116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3415_call = mod.get_global_var('func_3415')
func_3417_call = mutated_mod.get_global_var('func_3417')
call_6145 = func_3415_call()
call_6146 = func_3415_call()
uop_6155 = relay.erf(call_6145.astype('float64')) # shape=(13, 1, 13)
uop_6157 = relay.erf(call_6146.astype('float64')) # shape=(13, 1, 13)
uop_6158 = relay.log(uop_6155.astype('float64')) # shape=(13, 1, 13)
uop_6160 = relay.log(uop_6157.astype('float64')) # shape=(13, 1, 13)
bop_6162 = relay.greater(call_6145.astype('bool'), relay.reshape(uop_6155.astype('bool'), relay.shape_of(call_6145))) # shape=(13, 1, 13)
bop_6165 = relay.greater(call_6146.astype('bool'), relay.reshape(uop_6157.astype('bool'), relay.shape_of(call_6146))) # shape=(13, 1, 13)
uop_6184 = relay.cosh(call_6145.astype('float64')) # shape=(13, 1, 13)
uop_6186 = relay.cosh(call_6146.astype('float64')) # shape=(13, 1, 13)
output = relay.Tuple([uop_6158,bop_6162,uop_6184,])
output2 = relay.Tuple([uop_6160,bop_6165,uop_6186,])
func_6192 = relay.Function([], output)
mod['func_6192'] = func_6192
mod = relay.transform.InferType()(mod)
output = func_6192()
func_6193 = relay.Function([], output)
mutated_mod['func_6193'] = func_6193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4207_call = mod.get_global_var('func_4207')
func_4208_call = mutated_mod.get_global_var('func_4208')
call_6257 = func_4207_call()
call_6258 = func_4207_call()
func_3618_call = mod.get_global_var('func_3618')
func_3621_call = mutated_mod.get_global_var('func_3621')
const_6266 = relay.const([-4.093881,-6.476574,-9.692338,-9.768926,-9.425868,-5.086049,2.239486,-9.341979,-5.135892,5.155918,3.140622,4.136019,-1.276198,4.076916,3.797620,-9.221225,-5.570698,-6.955052,0.937283,8.905052,-3.507577,-6.270223,-2.842665,7.730224,-7.480005,-5.450497,-3.236957,-5.989722,-0.871743,-8.056226,6.871626,2.752132,6.340687,-8.951965,-8.628177,8.215532,8.912534,8.044095,-3.564367,-0.004771,0.317237,-0.745780,7.369216,-3.495415,-2.280390,1.682854,-9.762563,3.706804,-3.703083,-6.919982,2.446951,-3.983882,9.116727,4.058773,-5.110202,-8.028664,-9.901788,3.929285,1.063643,6.763307,0.856533,6.063124,-7.738334,4.710367,9.667117,8.080821,5.780640,6.489268,8.291392,-4.213214], dtype = "float64")#candidate|6266|(70,)|const|float64
call_6265 = func_3618_call(relay.reshape(const_6266.astype('float64'), [5, 7, 2]))
call_6267 = func_3618_call(relay.reshape(const_6266.astype('float64'), [5, 7, 2]))
func_4798_call = mod.get_global_var('func_4798')
func_4799_call = mutated_mod.get_global_var('func_4799')
call_6272 = relay.TupleGetItem(func_4798_call(), 0)
call_6273 = relay.TupleGetItem(func_4799_call(), 0)
func_4997_call = mod.get_global_var('func_4997')
func_5000_call = mutated_mod.get_global_var('func_5000')
const_6284 = relay.const([9.058846,-8.325399,6.342088,3.875795,3.369251,-3.153561,-6.482686,-7.571868,5.204077,6.902222,9.808080,1.251472,-1.927736,4.315950,5.144984,2.868512,-5.872333,-7.688615,-5.682294,9.535787,8.640386,9.877621,-0.073579,-5.714379,1.195496,-6.669340,4.296628,7.579496,-3.169532,3.359014,-9.552191,-1.684566,-8.344999,-9.048441,3.733883,-7.803611,3.645348,-0.156337,-9.840192,8.359430,-5.649205,-8.555303,1.637279,4.812103,-9.081178,-1.741695,-3.656603,7.493048,7.456222,4.238368,-2.461924,3.346611,-2.172480,9.826036,-6.089032,-1.869495,-3.166818,-5.631270,-2.181682,-2.229583,-6.085176,6.483170,7.644302,1.484870,-8.416892,6.601878,0.642666,-8.816122,0.858952,-5.360900,-0.489674,-3.289846,6.025807,7.808509,5.410510,-8.642444,-2.688934,-0.084030,0.670858,-3.289633,-0.716530,-9.717649,-2.088230,3.028675,-7.851668,1.048650,-1.693124,-7.465768,6.419121,6.650836,6.877635,-8.750869,6.966676,2.537934,8.567340,-1.180129,-3.670291,8.212851,1.583459,-0.689960,-8.915904,4.667708,4.658048,-5.526625,6.849032,2.611994,9.320768,-0.790091,-4.330030,5.336179,6.859519,-1.978681,-0.918725,-6.762624,-4.598449,-7.336795,-8.866879,-9.353870,2.044701,-0.846868,-6.417924,9.700274,-0.859264,4.707171,5.971218,-5.925232,-3.601207,-1.395007,-4.137165,9.641949,3.175998,9.645119,9.270624,-8.249212,-7.763299,5.848624,-9.200359,-2.560966,-6.407732,-2.639618,4.994392,-1.044211,9.267004,-1.187418,5.672291,-3.124527,0.891897,-8.712593,9.027036,6.915486,-2.665998,3.711107,5.793157,7.232662,1.936183,-2.282285,-7.282247,-4.977818,4.506029,9.417017,-2.339355,-9.003443,2.933260,-9.876221,6.626870,-3.045730,-2.177037,-0.232011,8.266892,7.102621,6.577293,7.508999,-0.355387,8.222108,8.708826,-1.070798,3.647654,3.174886,-6.935731,5.094790,-9.166942,0.673905,8.380238,-7.955207,1.144563,6.679222,5.061156,-1.196839,1.078978,-1.118092,-1.546707,-3.257727,7.584785,-1.377969,-4.031337,6.456960,7.804915,7.723591,-4.161548,7.878222,-2.953041,3.905406,-1.792572,9.938467,2.523042,-8.727898,2.068502,9.318632,-9.039849,-6.903100,-7.750658,6.390834,-4.612519,-9.180872,3.331181,-7.575125,9.510938,7.976201,4.509954,9.462426,-2.631783,-5.198410,-4.137249,-7.587501,9.485097,8.200560,-5.778358,6.970925,-1.611247,-7.867991,9.490493,6.116188,-8.594217,-7.485121,3.659609,-4.398292,7.169549,7.375065,5.882205,6.607283,-5.527883,-9.226262,7.871535,0.899634,9.385044,8.080278,-8.084495,4.508018,-0.042682,-0.245929,5.839987,9.411890,8.199833,7.180545,6.001545,3.304719,1.887838,-2.307525,7.408499,-7.336224,5.181610,-7.212530,-5.068539,-3.023208,1.696930,2.707298,-8.940292,-4.033357,6.252576,-6.496616,-3.948823,8.775918,9.598119,-9.495159,5.295481,4.384638,7.179141,8.032667,-2.133821,-1.647502,-0.216391,-7.726123,-0.648136,2.236960,-6.179613,-0.906693,2.944723,4.603649,-5.665059,-5.490768,-2.726121,-0.884593,6.703856,-2.755460,-7.381808,6.302679,-7.913533,7.925644,-9.930456,-8.359885,-2.580380,0.143058,-0.060338,-2.669640,8.998960,8.915986,-1.070481,5.237186,7.391784,9.443489,-4.817835,-9.405367,7.706491,4.154144,-5.124960,-0.366528,1.032468,3.863680,-8.226655,-3.550984,-3.648611,-7.956184,5.149570,-3.690214,0.100711,-2.223006,-3.684274,-8.507139,-1.486903,-7.880871,0.698678,3.114420,-3.766102,4.776079,-8.966445,-1.172794,0.500154,-9.739306,-3.295473,1.965013,-1.430846,1.759696,-4.488564,-3.713478,-0.784359,-4.298123,-6.083757,-0.225860,-0.832410,6.492224,5.224035,3.603577,-2.339076,5.452383,-5.466520,-6.729466,2.388073,8.029007,4.286308,-7.010539,-2.330515,-5.789133,0.471335,-3.083242,-3.949564,-8.246157,8.970557,-6.348544,3.075550,9.634744,-5.790822,0.360599,7.075017,9.440251,-5.205764,-5.813539,-8.009162,1.644640,3.235370,2.141645,-3.241428,3.943467,6.538799,2.101046,-6.321650,-5.469320,4.505550,-0.046555,5.938828,0.459926,6.580067,-5.696646,-0.093900,8.199886,1.817371,3.223463,7.476031,-8.959755,-8.344725,1.524017,-7.115614,4.155625,5.091908,-3.686079,-9.318664,0.328908,-4.378853,9.535225,8.543469,-3.823343,-3.499824,-6.184646,0.655302,-3.387334,1.702676,-3.851211,-4.298936,9.588875,6.662408,-2.381194,0.938106,9.559074,9.044436,5.351078,-9.235425,-8.599823,1.267271,-0.584518,6.803177,0.339073,-2.518976,-9.077479,6.291234,0.766683,9.346421,-3.012329,0.233786,-8.667835,9.163648,2.047743,-0.258763,-5.980519,8.262080,-5.860397,4.502782,6.942699,6.505479,-2.825565,8.142310,6.931116,9.365040,2.014055,3.348862,-0.755719,7.207817,-8.954035,7.662237,-6.626292,0.688932,3.048440,-2.220759,7.019636,-3.605937,-9.914221,4.725151,-9.783412,-7.195977,1.242768,-2.487186,-4.810102,4.226555,8.763484,4.332467,6.943174,-6.986177,9.116366,2.625651,-2.235551,9.329654,4.008359,-6.525992,6.607329,-0.085240,-2.348667,-3.440711,-5.287339,-0.249350,-8.683157,4.618561,-4.639114,-9.912441,-1.445089,-7.137948,7.476937,-3.105595,-5.033236,8.634216,7.217543,-1.377347,-2.473188,-5.791097,7.416013,-1.469141,-6.535438,6.794103,3.478298,-3.019765,-9.949297,-8.587456,-5.252067,-9.125257,7.340983,3.460301,1.287253,-0.659518,-1.498396,0.669175,4.971543,-2.096814,5.944292,2.153578,4.243539,6.467750,-4.193213,-9.005975,-8.738995,-5.743826,-4.672133,-9.497263,7.758423,9.994565,2.998963,9.352263,-4.961166,-4.222581,-1.460603,-6.989048,5.226990,8.890204,6.878604,4.210716,-8.641192,4.093466,3.305910,1.511779,-8.187400,-8.912737,2.269240,5.034260,5.420237,2.803178,2.557404,-4.201676,5.298224,-9.526213,4.766554,-6.775310,0.251896,-9.057509,0.003274,-7.503459,-7.357180,2.028757,-3.071910,1.143219,-7.556471,7.490805,-5.584149,3.491206,4.745175,-2.329719,8.976461,6.021707,-2.063384,8.618412,1.787350,6.877021,-0.484081,1.617339,7.465542,0.063843,9.383771,6.041586,-2.225481,-2.115938,8.577340,-1.307425,4.750113,2.510850,8.930134,-0.472969,-6.937786,-6.966111,-6.926611,-4.020287,-5.690602,-2.491451,-4.908000,0.665138,-2.079725,0.960375,-8.460633,-1.541225,5.991254,6.147753,-4.971179,2.632345,2.627352,1.851973,0.239510,-4.280711,4.524122,7.028985,-4.556421,-1.981572,-6.645821,-9.235449,1.169374,4.495806,6.123964,7.901331,-2.522917,-7.202008,-8.177134,2.991878,1.913027,2.569031,-8.907244,7.349028,9.949011,5.574067,6.669039,-5.369260,-7.887224,2.121925,-8.526037,9.753287,3.895113,0.901607,-0.717860,8.673905,-2.840193,-0.780804,3.945870,5.790359,-4.717852,7.981901,0.845045,-1.887313,9.850542,1.637609,6.478005,-5.178307,-8.899496,-5.779326,-7.525723,3.740580,8.831085,-6.731174,6.707670,8.937545,-8.319631,9.874086,9.793086,-3.859174,9.423622,-1.494465,-4.231284,6.496639,-6.136710,5.469837,0.084198,1.937401,1.411718,5.022537,-4.525668,-7.614318,8.321073,-5.130732,7.719108,6.809170,-0.117080,5.407538,-6.459226,9.105666,1.187037,-0.795295,8.302828,4.063459,3.082683,8.878568,4.792520,-7.256455,2.330290,5.411981,5.925502,0.587232,7.888267,6.323578,2.383555,-1.730132,8.609774,2.450198,6.722788,8.644647,-8.259229,-3.522528,-1.415500,-2.425387,4.155945,4.403261,5.781160,-6.000207,6.861885,-0.422940,-8.450260,7.948608,9.164755,1.820191,5.198517,7.337540,5.723232,-3.156136,4.757714,-8.452088,-5.825411,2.252169,-1.782032,-1.811961,8.635586,8.561776,-2.924112,-4.322962,1.012482,-0.851720,-5.750597,-3.091711,7.059925,-3.066794,-4.215070,7.508465,-0.926175,-5.713469,-4.393367,-8.724385,1.155763,6.532612,3.100855,-9.366323,8.639187,4.563864,-4.540523,-3.268886,-4.385210,-6.538363,8.822206,-5.489509,0.027105,-9.107813,1.054832,4.095504,-8.802908,-3.125016,-9.695121,7.117880,3.234548,-8.433514,-6.324823,3.571210,3.065443,4.359761,7.211208,-6.213103,-7.006001,-5.054983,9.440689,1.170727,3.756244,7.174285,-4.212564,8.923850,-4.056416,6.223080,-0.862344,5.219816,2.552244,-0.274196,-0.713210,3.731490,-9.650994,7.889937,4.449865,3.407271,-1.506708,8.703630,3.424800,4.477978,-3.230858,4.409630,8.830494,-4.946039,5.735252,-9.174625,0.101673,6.539669,9.526744,5.699682,7.601474,6.203555,-1.325146,-7.273659,-5.961600,7.263956,-0.719743,2.432289,4.938446,-0.774240,0.754948,4.787187,-7.320134,-9.637745,7.683193,4.176429,-0.727624,-3.671122,3.387039,5.871116,-9.655928,-3.817504,0.625324,9.602069,5.522294,2.759473,-6.679308,1.935962,8.647844,-7.836448,6.902740,4.156312,2.081408,-5.787491,-4.009893,-4.071614,-9.344315,-7.078325,-6.199419,6.944706,4.386523,-6.974860,2.070385,4.620228,0.976561,4.414002,5.455215,2.326416,-5.015977,6.143975,4.237007,-3.121448,-3.875856,8.852028,-6.369639,-8.651662,7.074433,1.151872,-8.661984,-5.964100,-2.670889,-9.313961,-3.366144,-6.021776,-4.959828,-6.914198,8.742312,6.491206,3.527055,0.831863,8.910058,8.879423,-9.724926,1.356108,7.817099,7.573393,6.965931,5.654026,0.748700,4.191049,3.993840,8.811289,-7.273033,-0.806590,0.524932,3.151696,4.281788,3.351646,0.894442,-8.615562,-7.779742,-7.286012,-3.936282,-2.723062,-6.208034,8.028574,7.755850,-0.524771,3.649415,4.786824,-6.903833,-1.949235,1.660621,-2.987824,-0.524736,-3.317255,-3.051319,0.967687,-8.105645,-9.073671,5.486168,2.544814,-8.278063,-4.290048,-5.743469,-9.662024,-4.767655,3.407916,-1.763267,-0.386484,-3.052520,-1.385273,5.106945,3.032827,2.170366,-6.553641,1.731670,6.132719,-8.868348,-7.319462,4.066852,0.368719,5.615542,4.097234,-2.433032,-0.378901,-4.975342,2.952466,-4.886065,-1.193319,-9.736610,-0.767842,-6.108076,4.593928,9.118658,4.206144,-7.709156,-2.818582,6.128653,-4.077312,8.030562,8.185998,5.249980,-3.428034,3.177104,7.933187,8.975707,-4.322911,6.950174,-5.025248,0.327878,0.847460,5.452710,3.442534,8.302465,-0.204867,-8.477917,6.496594,1.788419,-2.630985,-3.913798,-4.965790,4.749157,1.132123,9.629118,-5.999094,1.625287,-5.030217,1.019704,-4.876119,8.303416,-4.217639,-4.854619,4.003133,7.889979,-1.762023,9.107600,0.354892,4.551399,6.699272,3.259349,3.713703,9.372139,5.429568,3.367101,-9.921519,-3.083212,7.855858,-3.557691,-5.071809,-0.937655,8.474786,-5.525440,-6.160793,5.231914,-0.027762,2.386606,6.444823,0.303801,-0.447482,-8.059592,-1.602052,1.950127,0.328865,-5.248779,2.436101,3.125421,5.834946,7.442158,6.946571,6.057846,8.641191,-0.084363,-4.295869,4.173785,-4.881490,4.402418,8.458344,-0.462398,-3.053741,-5.993059,8.245735,-4.800652,6.000533,1.060478,-8.552707,-6.088983,0.592722,-0.061268,1.536414,-8.607092,-2.286297,-9.401319,-9.370504,-6.555523,1.456677,-0.528798,-2.689867,2.049817,2.445345,7.352361,-8.616910,3.158301,-4.957504,0.257618,-8.379268,0.913616,4.066903,-9.369102,2.583056,-9.634556,7.821093,1.669875,9.348588,-8.670756,6.790705,-4.199800,4.366277,-3.218629,6.175794,9.084125,6.978395,-4.961908,-3.697709,4.484489,-3.655464,8.774759,-0.437366,5.021132,1.637331,-9.926242,1.645546,-9.049287,9.911956,-6.788140,-2.916829,-4.324720,0.055990,-5.455115,1.565910,9.270342,9.534984,8.371317,9.931059,4.194494,-3.394969,-8.910707,-7.215995,6.953160,1.178263,6.631544,9.169028,1.752069,-9.089508,3.182635,2.494447,9.700647,8.095939,9.101477,-4.455668,7.027727,-6.700009,-9.945480,3.121686,-5.470893,-5.868976,-7.433360,7.664974,-3.240060,-4.010660,3.333033,-5.624406,-4.208368,-6.877351,-1.727015,4.300334,4.395815,1.981523,-4.496400,1.099148,2.324042,-8.049045,-3.357830,-5.023858,-8.222400,-9.260995,-6.645999,-1.447708,-5.748973,-1.246505,3.235963,-7.674129,-5.168537,3.309291,-5.394131,6.608608,-1.084736,-8.524433,-9.753203,8.328573,9.015877,-3.565716,-9.625787,-0.434442,8.397089,2.678632,-2.881025,-5.892165,-8.091229,-2.579516,-4.711024,-2.444939,5.488959,4.838293,4.471065,-2.649707,-5.536394,7.787025,-8.309155,7.028964,-4.695902,-4.356007,3.469696,7.671854,-3.546743,-4.655036,-8.157839,2.098533,2.048276,0.691910,6.945073,4.986582,-2.926394,-9.851460,7.423374,5.148080,3.575380,-2.031109,-1.396190,-5.904432,9.016159,0.414300,6.570772,-0.906696,-9.849820,-9.679458,9.450126,7.537468,-4.632715,-1.434425,-7.717409,2.316375,-4.951995,-3.985161,-3.457218,6.240699,4.078138,1.399517,-5.714398,-9.187792,7.813459,-3.516739,-7.148728,-7.385659,-0.753989,-0.323630,-6.714387,-1.096347,-9.560608,8.858110,9.013218,-8.869380,-1.797157,1.061221,8.089047,0.832727,-5.576057,-5.778663,7.168111,5.454225,4.291620,-9.224834,-7.977113,-1.083203,3.715840,2.190144,3.715035,-9.104967,6.428299,-1.167702,0.802912,4.962429,0.288833,-3.091675,-4.988872,-3.250027,-9.441037,-6.347547,7.705308,7.093205,-8.320573,5.029464,-7.602868,8.087324,-0.907443,7.585018,8.618106,6.767221,-1.102737,-8.785809,-1.778908,-9.492581,0.158890,3.914380,-3.563549,-9.388921,5.523460,-9.742491,0.999313,7.785685,1.608738,0.206108,4.882478,1.034387,-4.904593,-6.639101,9.271816,7.735421,7.846785,4.856630,1.767453,4.286058,-2.844751,5.465547,0.090753,2.160310,6.867518,-1.776794,0.800215,-8.694382,7.075422,-5.824372,5.442063,6.729922,-6.492354,-1.921388,-0.854004,-7.983261,7.504893,-0.901333,-7.715102,7.321787,-7.371349,-9.588385,-0.843020,-2.594215,-4.575919,-4.816354,-0.034334,-4.055167,-4.190682,4.434342,-2.032770,7.552524,3.944267,3.864589,7.639637,2.208112,-6.171111,-3.596456,-7.721282,-6.900185,6.553676,-4.034600,-9.526603,4.295939,-7.710076,-0.493509,-4.551471,-9.800111,4.210658,-2.320261,3.102242,4.189943,3.841092,-8.057258,-1.625468,-0.231409,9.159212,2.349041,-8.539733,-4.874158,4.246196,2.274285,2.216763,8.875359,8.634949,8.145705,9.865451,-5.496055,-6.376975,-1.382750,4.363901,0.518610,-2.096543,4.258310,4.568115,3.954816,-8.440690,-1.780622,-2.685822,-8.316786,9.619965,-8.196364,-2.917351,-7.220284,6.330845,0.611192,8.617288,0.855288,-7.155093,-5.420880,2.141099,-5.590682,0.001047,2.846806,0.313806,9.242459,8.626373,2.887100,1.465436,8.281901,9.739334,1.310087,4.707612,-6.856106,4.254301,2.749969,-3.056333,-3.590555,-6.687842,2.829803,-0.678778,3.499024,1.263817,9.200654,-2.552702,5.188986,-1.687157,-5.849936,-2.244703,9.665644,-4.227351,-9.466452,-1.965589,-0.731137,-0.764804,-9.196186,-4.500686,-5.601558,6.044444,-0.608305,-0.051311,6.514371,2.250955,-8.494515,-0.542761,2.835917,-4.908152,7.294094,4.229193,-5.869001,1.580423,-8.229498,-3.270519,8.972369,-0.371918,7.148755,-9.751632,2.492079,-0.900576,4.841511,1.480577,8.765492,-6.780816,3.124411,-1.878415,6.849347,-8.610019,-2.080240,-2.098005,-9.304261,1.810434,-7.121189,-9.949310,6.618514,0.520291,3.785076,-7.499109,6.382573,9.183295,-5.618523,-0.501771,-3.662022,0.066841,5.721128,-7.610383,-3.180744,1.328984,8.870159,7.993140,-5.714235,9.738041,9.996372,7.780379,-4.829509,7.075258,-1.703481,-7.605974,2.501714,6.637256,-9.927782,-1.717224,-1.259054,1.779669,-1.183554,-2.730735,6.964015,-2.999231,4.296121,0.299751,1.717383,-3.866111,-7.085235,-7.104219,-9.798644,-1.034550,2.146782,-3.602037,-8.574871,-3.136167,-4.852632,-3.229440,-1.848317,-8.890534,-6.693284,-8.986353,0.963451,6.490311,8.354565,5.899802,-7.329333,-4.030756,-3.370066,7.221047,-8.563715,6.724377,-3.459255,2.228307,8.701559,3.688852,4.067796,0.191266,-7.710105,3.424633,-8.329506,-7.209166,-7.568922,-5.579713,0.560799,-0.801544,4.089228,-6.879647,7.191223,0.455875,7.484133,-3.972770,-8.151146,1.270182,-2.420553,-4.478642,1.063652,2.748831,-0.820048,8.316004,3.578037,4.398611,6.446880,7.393546,6.296800,9.041882,5.623555,-8.353770,1.655658,-9.721859,-2.855815,-7.944115,5.787694,5.890192,-4.497675,2.060069,-4.191777,-8.845859,-9.236127,-0.272574,-8.479203,5.312339,1.399825,9.387864,0.315478,9.035161,7.007331,-1.770143,2.418069,-1.027907,-3.545083,-9.525509,-1.870456,-0.607991,-8.688845,1.003190,6.560370,-6.956563,-4.530759,8.727494,0.899495,3.100315,6.889698,-5.850396,2.935017,-5.502648,-6.273922,2.713222,1.330927,-7.562001,-8.169330,3.690316,-0.087094,6.391960,3.690775,-5.815288,5.923401,0.061825,7.657257,6.998163,-4.776342,-3.020250,-0.249769,-1.235981,-6.103815,2.631797,-5.599643,-1.150990,-9.333664,7.293660,-8.340089,0.240820,0.963551,-7.851863,-0.513653,3.350032,9.953056,4.984529,8.362503,-1.957153,-2.770096,5.310742,-4.239802,0.782356,0.455484,-1.392959,6.804875,1.778977,9.616559,3.409970,6.675241,-5.069881,9.465999,9.692774,0.519921,-6.075323,3.502651,-7.256877,2.669011,3.840460,-2.638434,-6.787656,5.234597,-7.545052,-4.976684,-0.499534,3.075546,-6.630176,-4.335194,6.800644,2.999079,-1.671934,1.157007,-5.935785,-4.650174,2.973966,-0.180133,-7.026272,1.839671,-6.342980,5.240046,-1.002320,6.242174,0.732897,-9.030609,-4.179683,-4.599582,-9.855571,7.996210,-4.449573,-7.231538,7.259018,7.014447,-0.274017,-3.388170,-5.284831,2.382758,-0.887961,-3.013701,1.959706,2.710331,-4.349269,-3.257360,3.736259,-3.125014,9.751317,-5.629730,8.963163], dtype = "float32")#candidate|6284|(1690,)|const|float32
call_6283 = relay.TupleGetItem(func_4997_call(relay.reshape(const_6284.astype('float32'), [13, 10, 13])), 0)
call_6285 = relay.TupleGetItem(func_5000_call(relay.reshape(const_6284.astype('float32'), [13, 10, 13])), 0)
func_3464_call = mod.get_global_var('func_3464')
func_3468_call = mutated_mod.get_global_var('func_3468')
var_6294 = relay.var("var_6294", dtype = "int64", shape = (144,))#candidate|6294|(144,)|var|int64
call_6293 = func_3464_call(relay.reshape(var_6294.astype('int64'), [16, 3, 3]), relay.reshape(var_6294.astype('int64'), [16, 3, 3]), )
call_6295 = func_3464_call(relay.reshape(var_6294.astype('int64'), [16, 3, 3]), relay.reshape(var_6294.astype('int64'), [16, 3, 3]), )
output = relay.Tuple([call_6257,call_6265,const_6266,call_6272,call_6283,const_6284,call_6293,var_6294,])
output2 = relay.Tuple([call_6258,call_6267,const_6266,call_6273,call_6285,const_6284,call_6295,var_6294,])
func_6305 = relay.Function([var_6294,], output)
mod['func_6305'] = func_6305
mod = relay.transform.InferType()(mod)
mutated_mod['func_6305'] = func_6305
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6306 = relay.var("var_6306", dtype = "int64", shape = (144,))#candidate|6306|(144,)|var|int64
func_6305_call = mutated_mod.get_global_var('func_6305')
call_6307 = func_6305_call(var_6306)
output = call_6307
func_6308 = relay.Function([var_6306], output)
mutated_mod['func_6308'] = func_6308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4631_call = mod.get_global_var('func_4631')
func_4633_call = mutated_mod.get_global_var('func_4633')
call_6370 = func_4631_call()
call_6371 = func_4631_call()
output = relay.Tuple([call_6370,])
output2 = relay.Tuple([call_6371,])
func_6373 = relay.Function([], output)
mod['func_6373'] = func_6373
mod = relay.transform.InferType()(mod)
output = func_6373()
func_6374 = relay.Function([], output)
mutated_mod['func_6374'] = func_6374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6386 = relay.var("var_6386", dtype = "uint32", shape = (1, 8, 14))#candidate|6386|(1, 8, 14)|var|uint32
var_6387 = relay.var("var_6387", dtype = "uint32", shape = (14, 8, 14))#candidate|6387|(14, 8, 14)|var|uint32
bop_6388 = relay.equal(var_6386.astype('bool'), var_6387.astype('bool')) # shape=(14, 8, 14)
uop_6401 = relay.acosh(bop_6388.astype('float32')) # shape=(14, 8, 14)
bop_6404 = relay.logical_xor(uop_6401.astype('uint8'), var_6386.astype('uint8')) # shape=(14, 8, 14)
output = bop_6404
output2 = bop_6404
func_6408 = relay.Function([var_6386,var_6387,], output)
mod['func_6408'] = func_6408
mod = relay.transform.InferType()(mod)
mutated_mod['func_6408'] = func_6408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6408_call = mutated_mod.get_global_var('func_6408')
var_6410 = relay.var("var_6410", dtype = "uint32", shape = (1, 8, 14))#candidate|6410|(1, 8, 14)|var|uint32
var_6411 = relay.var("var_6411", dtype = "uint32", shape = (14, 8, 14))#candidate|6411|(14, 8, 14)|var|uint32
call_6409 = func_6408_call(var_6410,var_6411,)
output = call_6409
func_6412 = relay.Function([var_6410,var_6411,], output)
mutated_mod['func_6412'] = func_6412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3663_call = mod.get_global_var('func_3663')
func_3665_call = mutated_mod.get_global_var('func_3665')
call_6435 = relay.TupleGetItem(func_3663_call(), 0)
call_6436 = relay.TupleGetItem(func_3665_call(), 0)
output = relay.Tuple([call_6435,])
output2 = relay.Tuple([call_6436,])
func_6452 = relay.Function([], output)
mod['func_6452'] = func_6452
mod = relay.transform.InferType()(mod)
mutated_mod['func_6452'] = func_6452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6452_call = mutated_mod.get_global_var('func_6452')
call_6453 = func_6452_call()
output = call_6453
func_6454 = relay.Function([], output)
mutated_mod['func_6454'] = func_6454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4631_call = mod.get_global_var('func_4631')
func_4633_call = mutated_mod.get_global_var('func_4633')
call_6457 = func_4631_call()
call_6458 = func_4631_call()
uop_6461 = relay.cos(call_6457.astype('float64')) # shape=(13, 6, 13)
uop_6463 = relay.cos(call_6458.astype('float64')) # shape=(13, 6, 13)
func_5376_call = mod.get_global_var('func_5376')
func_5379_call = mutated_mod.get_global_var('func_5379')
const_6466 = relay.const([5.991068,-5.657342,6.528332,0.047315,7.703729,-2.041065,-5.008589,-0.391555,4.301018,-0.810778,-6.115408,-2.464148,2.999226,-4.586043,0.402358,-0.732660,-0.225487,2.752994,-9.630263,1.886945,-7.124490,4.479525,-7.963598,1.111928,-5.349194,7.243816,-3.908853,-8.886315,6.477809,9.910249,-1.590055,8.792871,-9.808653,-5.973891,4.275284,-2.032262,1.859437,3.679365,5.632467,2.138818,-5.542479,-3.566327,8.852444,-8.383378,6.587520,4.567001,-3.041593,9.579004,-5.536816,0.110125,7.610357,8.044361,5.025232,-1.729538,9.288318,-3.779549,3.685857,7.393199,-4.563254,8.370910,7.810266,3.195774,8.138020,-2.614328,-9.921250,-8.269960,6.935517,-8.625303,-9.615282,6.058862,5.618529,5.154050,7.219675,4.355067,-6.499958,9.582679,9.314422,5.206704,6.970973,-8.672982,-6.774237,-4.440561,8.803085,-3.653772,7.374854,6.659598,-6.912058,1.817301,2.136053,0.061789,3.722159,2.191445,0.128940,-8.441725,-3.831002,-1.619513,8.239659,-0.792040,6.072832,-1.163845,4.037324,7.088313,-4.390518,8.144439,9.304327,3.636369,2.396831,-7.354019,-9.894427,-6.003541,6.032213,0.421832,8.169726,2.775254,-4.923615,2.643246,-6.556971,4.861098,-1.631544,-6.224122,8.776379,-5.298535,7.182430,5.565777,6.228083,-7.611118,-5.829277,4.996163,-9.365993,1.588628,-4.934269,-8.460901,6.076407,7.889344,-6.360736,-0.210532,-6.233892,-6.776924,8.574020,2.915043,9.855051,0.238852,5.674250,9.390962,-3.466101,-7.575591,-1.169076,9.869750,7.603164,9.377694,-0.401418,0.107243,-0.727811,-3.432611,-5.071453,1.403305,-3.780840,2.636785,1.601553,1.869389,0.092662,1.331015,-3.779534,-6.857557,3.106413,6.585091,2.985184,-8.133456,-9.042731,3.087406,-2.594503,3.631546,4.692009,-3.117929,7.792367,-2.895137,-9.357200,-5.846702,-2.937785,-0.663687,-8.421327,-5.224922,-4.653466,-7.369264,4.498298,0.499223,-3.310847,-2.514961,-9.058052,-6.860056,-0.064136,-9.795131,-7.530789,9.357487,0.462405,2.933599,3.384188,1.630959,-1.081905,9.127643,2.264615,-7.480799,5.141956,-4.857017,6.411596,3.148869,1.287797,-1.659512,7.170495,0.731044,7.564700,-4.557027,-8.749235,0.146919,0.964659,-0.634215,7.896961,-5.387765,-7.025629,-8.030296,-3.703795,2.322426,-4.825628,1.313163,-6.423865,-4.240649,2.041941,-4.239290,5.398150,9.989944,-1.673592,9.328143,-7.817313,-2.326153,-3.840784,-2.983179,0.222211,2.170074,-5.050171,2.525650,7.502893,-0.718203,-3.632530,-4.639347,-6.412453,8.633532,3.336119,9.198024,-4.282977,-3.671486,-0.928869,4.413515,6.163752,3.343294,-8.625486,-5.376030,2.041995,-7.271652,8.068100,5.759471,-7.540669,5.500804,0.565280,1.217295,-1.023950,3.018143,0.158258,-8.318909,4.413959,-2.153675,-6.524107,2.922102,5.497866,-2.488164,-9.708335,9.318686,-9.984659,-8.683006,9.425800,0.454250,-9.497672,-5.859818,-8.437235,-2.890584,1.249863,9.417728,1.884895,6.181264,-8.164382,9.909476,8.161163,-3.713958,5.905273,1.666892,-2.972812,5.212416,2.559011,-6.710753,-6.404244,0.572663,8.973244,-6.061309,5.131656,-9.111094,7.153159,-5.298803,-4.682512,-9.168794,-4.589025,-1.900132,-9.882612,4.063352,0.615108,1.870573,-8.811586,8.136831,5.340775,-2.511051,2.517243,3.241432,-5.314608,0.839271,-1.562359,6.482548,-8.386777,5.762259,7.411876,-1.571608,7.115451,-0.212769,7.466442,5.856753,0.121574,0.291213,-7.785139,4.254965,3.379850,5.257157,-8.918352,-7.081013,-4.876834,-5.494242,-0.857293,6.862970,-1.608133,4.537622,3.955139,5.714728,-3.246079,-4.160511,6.842609,4.489424,-4.173214,-8.244078,2.570536,0.525388,-6.771746,4.204935,6.332329,-2.474103,9.224054,1.268256,4.423900,2.089413,0.066428,-8.698149,-0.047193,7.219820,3.393943,5.036226,-5.073256,-4.438610,-5.917438,3.251771,-5.881943,-8.476479,8.099214,0.129779,-3.996633,-0.401255,-6.866277,-0.166888,8.467316,3.302906,4.803916,6.689564,-3.840701,-5.156720,-8.011458,-3.876873,-7.607261,-6.452434,-4.036464,-6.409375,-5.577598,-9.115061,8.781500,2.558729,9.877940,0.721217,-2.501490,-7.358456,7.730404,5.949418,5.207538,-1.551139,-5.808817,5.122863,-0.135401,4.574672,5.310169,0.197651,-1.423894,3.474192,-9.831509,-1.134006,9.237863,8.790751,-7.131737,-8.897532,-8.854282,1.607922,4.414041,1.253200,-3.845307,0.610324,-5.047518,-7.259221,2.089694,-4.056701,3.441251,-7.708063,-5.113793,8.059191,7.648730,-3.789532,-1.133081,-1.993545,-1.518655,-5.767351,4.707127,-2.942129,-4.670647,-4.012866,-0.676885,0.287773,-6.413505,4.790436,5.141413,0.196025,-7.747606,-9.095600,9.646126,8.923122,-8.868062,-3.880851,4.934620,-0.450066,4.424065,3.316661,5.527701,7.494741,5.748390,-8.785074,3.349816,4.562424,3.761389,1.503676,-7.477725,8.339686,-8.678626,-8.897295,-5.661685,0.306310,-1.582375,-8.241342,-8.954730,1.447556,-5.696936,-9.392186,1.962718,9.765453,-0.665050,0.921174,4.618792,8.900099,-5.757815,4.908958,-5.317016,-5.185950,-0.502974,9.555267,8.891521,-5.917265,-6.830359,3.420275,-2.029940,0.556980,3.363740,8.443202,6.600366,-4.014493,6.117277,-6.268693,6.688804,-9.479415,0.117623,-4.736427,-1.313022,-7.001251,9.717542,-0.232273,1.455551,-7.003550,-8.659353,1.401782,0.103958,8.961178,-1.024513,-4.730014,-0.163866,1.477589,-9.226337,-2.692306,-1.903297,-9.379075,7.579682,6.266588,-6.454881,3.208156,8.623758,-1.486546,4.728002,6.706446,8.866748,9.919308,-5.775107,-1.320560,-0.897303,9.450765,8.042152,-3.546202,-4.651187,6.033193,-7.027620,0.662367,-9.160898,-8.679200,0.522011,7.581795,8.379818,0.166783,2.933734,1.816745,-8.495022,-0.431585,-7.322066,-9.029419,-8.135643,4.594158,2.339102,-1.638707,-9.877830,3.546201,9.139749,-0.611480,7.805535,-2.668369,5.796761,-9.789611,0.866817,-6.503579,1.987881,-0.359413,-9.366590,-9.619564,2.408753,0.931526,1.040866,6.995253,2.527542,-1.949429,8.176582,8.380078,-1.498168,8.358740,-1.017436,3.077664,-0.219022,1.933702,1.375098,-0.982952,0.017195,-5.279429,-9.574873,7.282134,5.649340,-5.277571,-2.005978,-8.323527,5.801909,-0.532311,3.478793,-7.109929,-0.631120,-2.074595,0.091556,-8.465119,6.730034,-3.058076,-8.771608,5.116422,8.819517,8.847641,-4.693720,-3.649093,3.256217,4.058051,-2.309063,-8.936968,-2.015476,-9.395477,-5.746922,-3.285002,2.699548,6.532766,-3.518860,3.336568,7.475824,1.938825,-2.267298,0.658381,1.897437,-3.179889,-1.568109,-9.193405,-0.497503,3.823418,1.859436,-1.707974,-1.459197,-1.192139,-3.568007,-6.206278,-4.507591,8.958502,7.140555,-5.270905,-6.350302,-8.735002,-7.418594,8.832743,9.919481,0.192708,-3.777455,0.997027,0.834191,7.089363,9.639934,7.753845,1.902004,1.660914,-1.250994,1.883705,-0.738157,4.778723,-7.452446,5.486332,3.363380,-1.491557,-2.294489,-9.205994,-0.762257,-9.856089,1.370679,5.304433,-5.426697,1.034674,6.650581,4.120316,-3.751529,-1.372995,0.674039,-3.615900,-2.971801,-8.741886,-1.603575,-4.313949,-8.901151,4.911124,4.373340,0.698290,1.497296,-0.736459,7.293978,-3.502770,-7.502664,9.377908,1.999347,7.268766,-8.230368,-5.693154,-9.801836,4.956599,2.054967,4.423470,-1.457166,6.989361,0.870144,-1.843592,9.310761,2.830662,7.729550,-4.808511,-0.978727,-8.735517,0.310588,-1.457466,2.749450,5.160594,-4.584059,2.473191,7.778785,-2.424255,-0.056543,4.366865,9.576234,-3.270091,5.733225,2.351950,-4.145779,2.290770,5.613493,4.001144,4.379239,1.489459,6.881777,-3.462350,8.815040,-5.755636,6.906508,-7.613453,-2.806257,8.499067,5.789697,5.128710,-7.493444,9.163863,-7.573623,3.546131,9.354579,0.985543,5.511926,3.153719,-4.491402,5.911886,-3.492624,7.489979,-4.611898,-7.319672,1.737263,7.878217,-6.731635,6.278398,8.357905,0.323682,-5.834903,-5.103977,-4.946849,-2.566403,6.884652,0.685312,4.420496,-3.281713,9.942292,2.383574,-5.891926,5.226039,-3.968511,-4.527942,7.681529,-2.093913,-3.625462,0.987109,8.712032,-0.685182,8.587364,-9.627906,-9.619937,-1.949702,5.916405,-1.946576,-8.008023,5.345052,7.077898,3.160990,3.082636,-0.985143,-2.608315,-3.188220,4.718481,-2.677623,-8.438817,-6.867456,6.971279,4.873723,-3.770298,-5.589791,2.032325,5.822539,1.438559,2.336882,3.807752,5.062373,5.222448,0.874417,-7.679636,-5.036981,-0.572205,1.530455,3.479323,-1.463011,-7.110903,6.871112,-0.553016,-9.973527,1.618279,-8.765728,7.602810,-2.511723,-8.539732,-5.708336,6.758229,7.173081,4.828056,8.272127,3.040328,-1.049958,-6.619140,2.570561,5.575676,6.199896,8.659999,7.399672,4.976905,-7.266719,9.951277,-3.437467,2.362183,-0.805172,-5.502381,4.169237,2.497647,4.431283,6.176289,0.696416,5.093754,3.644560,-6.583032,0.288589,-1.723917,7.198337,-0.950931,-3.710820,-1.537773,-2.923978,-3.286805,-4.753661,-3.961262,-3.900757,5.626756,-6.668870,-3.634489,1.096830,-1.680964,-2.104381,-8.673425,-7.133902,2.770710,-1.029748,6.758846,-1.111988,9.978251,2.912046,-9.659659,0.076537,7.608365,-3.236011,-0.281002,1.037002,2.782326,1.034696,5.385928,-7.053610,6.166350,-5.562718,-8.924755,-5.430056,-4.546350,2.618347,4.818573,-2.559535,-3.594441,-5.845278,-3.993609,0.966049,5.498633,-0.722479,-3.119382,4.736358,5.120421,-8.420833,-3.998554,8.024636,-1.796705,-4.857270,-2.166820,1.134835,5.142341,7.420096,2.221702,3.628618,9.449781,5.483470,3.146622,4.810294,1.285158,-9.097761,2.031092,-6.509880,-4.152974,3.135190,7.518743,2.989208,0.012170,-8.882659,5.423349,3.203820,6.430207,-2.959997,-5.621753,-8.769933,8.029983,9.199648,-7.835932,-1.239239,-7.887396,4.358095,-0.309253,7.953457,7.553282,-9.713125,8.659491,-9.463632,2.118511,5.793033,-4.896071,3.564497,-5.947574,-3.354723,-6.811562,1.920773,5.142920,-0.478408,2.560098,6.901832,1.949278,8.256773,6.045786,-9.766215,-8.993253,-1.952711,8.040840,-4.861541,4.798950,-4.637387,-3.878252,-7.439911,0.838864,2.379050,-4.862142,6.501011,1.225577,0.380832,-4.080814,8.712372,7.655299,-1.748113,7.246348,5.318324,6.103127,-1.032094,5.313671,4.286261,8.201074,-8.130498,5.617428,9.642322,-6.022731,-0.685778,-4.272313,-7.734138,2.560993,-8.794568,4.155493,0.606023,-6.154396,-8.731370,0.835427,-9.923201,0.721722,-5.260721,-7.350297,0.948437,-5.916961,-7.238304,1.011634,0.610581,6.387754,3.734866,8.064644,1.971581,-1.454154,4.588880,-0.376587,-8.056609,-1.606971,-1.547085,-2.459714,-3.407977,8.396959,-2.627241,4.733121,-8.609688,4.384572,4.440316,-8.736749,-6.298190,5.428515,-1.095991,1.565975,9.104799,-7.612530,7.279491,3.439913,6.815132,-4.802166,1.819564,8.144483,-5.408417,8.027522,0.283656,-0.427474,-9.523719,-7.500015,4.700237,3.308380,9.917932,4.899538,-5.463193,-7.895633,6.234309,7.372677,-8.401653,-4.183099,-5.713620,1.462420,-1.827833,1.567783,3.353528,7.119058,-2.436053,5.820382,-3.617510,-4.784706,0.789747,1.927982,7.130020,0.723514,1.980404,-9.689570,5.884677,-5.984381,0.024637,-1.385372,8.229891,-0.051990,-3.060373,9.828550], dtype = "float64")#candidate|6466|(1089,)|const|float64
call_6465 = func_5376_call(relay.reshape(const_6466.astype('float64'), [1089,]))
call_6467 = func_5376_call(relay.reshape(const_6466.astype('float64'), [1089,]))
func_5069_call = mod.get_global_var('func_5069')
func_5071_call = mutated_mod.get_global_var('func_5071')
call_6484 = relay.TupleGetItem(func_5069_call(), 1)
call_6485 = relay.TupleGetItem(func_5071_call(), 1)
output = relay.Tuple([uop_6461,call_6465,const_6466,call_6484,])
output2 = relay.Tuple([uop_6463,call_6467,const_6466,call_6485,])
func_6490 = relay.Function([], output)
mod['func_6490'] = func_6490
mod = relay.transform.InferType()(mod)
output = func_6490()
func_6491 = relay.Function([], output)
mutated_mod['func_6491'] = func_6491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4798_call = mod.get_global_var('func_4798')
func_4799_call = mutated_mod.get_global_var('func_4799')
call_6503 = relay.TupleGetItem(func_4798_call(), 2)
call_6504 = relay.TupleGetItem(func_4799_call(), 2)
func_4997_call = mod.get_global_var('func_4997')
func_5000_call = mutated_mod.get_global_var('func_5000')
const_6520 = relay.const([9.023967,-9.191937,-8.218911,-5.115480,5.866137,-7.750637,4.890033,4.006437,-6.584976,-5.014098,-4.969467,-9.788834,0.185563,0.150543,0.809611,2.578970,2.065696,-2.583466,4.310284,6.010423,-4.239059,1.684058,-3.291140,0.559821,-0.865677,7.619384,6.901001,0.910068,7.173441,1.394764,7.872157,5.372614,9.177208,-9.982224,6.539920,5.367691,8.158090,2.084590,1.803537,4.443179,-9.728904,-0.165112,-3.849063,-1.131451,-3.017182,9.935367,-7.479413,-2.057243,-1.323932,3.041175,8.692726,6.698199,5.317817,-5.608526,2.833725,-4.835163,-0.879057,7.253094,2.775201,-1.612168,-3.630823,7.095552,9.656743,-4.756785,-4.708527,9.172131,-0.856918,-0.676252,6.049673,-9.540257,-9.519423,-3.070721,0.510740,-1.026977,1.885523,-9.294978,-3.636844,9.618224,-7.914017,1.440673,6.683437,-5.756506,1.380958,1.109664,3.015432,-7.606123,8.542311,-4.431272,-7.666370,0.474745,2.590257,0.906944,5.921372,2.126530,-6.280802,-0.923250,4.363004,8.106773,9.536650,7.912893,-9.996645,4.515994,-1.240232,-2.704672,-3.041872,3.698745,-9.291464,5.147706,6.057288,6.397482,1.859052,4.576817,-5.203536,6.947373,5.445240,-6.642699,-8.321605,9.618236,8.706698,-5.728473,4.208478,3.573248,-4.433805,9.095973,-9.305924,-4.070967,-3.154805,-4.308623,-8.960851,9.417449,4.414147,-9.418246,6.446150,-7.979211,0.993759,-4.174649,-5.214396,-5.372329,-4.377285,-6.208015,-4.548063,-9.497714,-0.810189,3.824940,-7.848724,0.892064,-1.431545,-8.336435,9.408220,-7.085471,1.584021,-0.286259,0.176317,-5.320214,-2.452833,-4.616783,5.020921,-5.839500,9.536860,7.417222,-6.933556,6.350899,-4.772256,-2.286441,7.696385,-8.121671,2.079425,-8.223133,-2.082030,-6.797703,-4.814047,7.122685,1.637810,0.668000,-1.573346,-5.567047,9.454226,6.479435,9.973647,-0.701306,3.798134,9.748827,9.232887,6.956726,9.406054,-6.193913,-6.344783,7.371096,1.132879,-2.195808,4.107859,-3.010868,2.064803,-8.420651,1.591846,7.845905,-9.244962,1.693310,-0.387033,2.119148,-8.754672,1.158107,2.763485,-3.662796,-6.243547,-6.157142,-6.940626,-5.651417,8.353899,-8.602729,6.227962,4.453519,4.465868,5.447920,4.081255,2.993970,1.846332,-0.790767,3.091394,6.435676,3.799401,-5.668901,4.368758,7.575040,6.542310,0.967667,3.678462,-4.314403,-1.135385,8.809935,-1.551702,7.169833,1.587051,8.849115,3.561776,-7.477672,-8.288449,-5.595315,-4.133840,-3.429396,4.909928,-5.631002,-8.189888,9.646185,6.192643,-4.141341,2.266278,9.810753,4.794170,-0.213272,8.381469,-7.278873,4.603912,9.195747,-7.809685,7.298838,-9.442152,7.116301,7.342183,9.548094,5.976224,-0.938173,1.561499,1.302568,-5.760896,5.290207,1.182575,-4.524590,-9.867026,-9.220769,2.910721,7.246083,0.267560,2.143771,3.817853,9.356792,-9.339358,-3.700953,6.247766,9.724459,7.041422,-4.118604,-0.402498,4.427310,-6.678869,6.818690,4.912239,7.298812,1.259170,0.815413,4.722942,3.615013,5.487672,-5.800592,-0.322307,-2.646791,-9.169049,-5.044738,7.963588,-1.034773,2.209181,-8.287380,-6.756616,6.943706,-8.214200,-8.418745,-8.167348,8.798650,4.232742,-6.417268,6.386910,7.576172,8.242910,-8.101836,0.065636,6.516607,6.763223,-5.502511,9.753003,3.853134,-8.371846,-4.629734,-2.260577,-9.338674,2.596695,4.981865,-9.273417,-3.225801,-1.907043,-3.668120,7.314590,-8.108939,8.242229,-2.516100,-6.117618,-5.068153,-8.824730,0.843913,1.263123,-6.037832,6.806783,4.305727,1.666927,4.490466,3.416433,2.411929,3.477663,8.204692,-8.298525,-0.238940,2.405911,-8.296388,7.228887,-5.979930,4.307278,2.031634,-9.420524,-2.282221,-1.189215,6.470226,-9.803268,8.481485,-4.599262,-0.482161,-6.182881,-3.381235,-8.313093,2.554640,-1.162302,-4.854135,7.355318,-3.616501,-2.872827,4.310382,7.076573,-8.780855,7.225584,8.543324,-8.691150,5.769711,-9.984028,7.002697,-2.313771,-5.214361,-7.860960,-2.098121,-6.396062,-8.692303,-0.417335,-7.416699,-2.003046,1.366890,-0.005349,-3.863387,-3.884403,5.291376,0.795949,3.973817,-9.860722,-3.883396,-2.978311,-6.698587,-6.503010,-2.045273,-0.627479,-3.968093,4.963773,-9.737560,-7.041659,4.359371,-4.877275,-5.008693,3.865453,2.585292,8.522506,-1.293878,4.198423,4.918685,3.061967,-3.976894,-9.798146,0.905884,-5.033054,7.852646,-7.752179,6.723596,0.010967,-0.242563,-2.515608,-4.530405,9.051591,9.501004,4.068032,-6.530819,-5.562712,-5.306423,3.997983,1.002264,-8.155361,0.906170,1.023993,2.802482,-2.506269,9.805176,-6.288947,-6.192004,-6.596757,-4.164725,-4.075805,6.217941,7.576091,2.169640,6.391439,-0.307696,3.891242,-3.882500,-6.665703,-8.291322,5.447423,4.238360,7.049886,8.722437,-8.925459,-1.261026,3.903978,3.269594,5.612947,6.366158,8.849189,-8.705747,3.862631,6.424226,4.060216,-4.628207,0.137376,-9.282014,-3.527556,4.019388,5.194639,2.726452,7.906087,2.748038,-3.363076,3.527839,-7.836918,-3.669936,-7.285383,1.292718,5.266869,-5.400141,-8.997530,-3.017944,-2.796275,1.344795,8.939079,-3.905009,0.140349,6.282722,0.856662,-5.137257,3.477629,0.946712,-2.987211,4.582441,7.892522,6.363322,-5.065285,-4.921849,5.321094,-2.530745,-1.277129,7.308249,-8.964133,5.836031,8.000900,6.708141,6.687498,-0.622615,4.858438,3.281494,9.162709,-1.747421,-6.921552,-0.766544,-0.748021,-7.546397,-7.929863,7.003296,9.440078,-5.537742,-9.736082,0.825543,-6.706435,1.397349,6.875868,-1.406447,6.561725,-7.307660,2.032292,8.328135,2.614707,4.211341,4.344899,-6.713914,0.043465,0.161416,-5.876191,3.720065,-0.230945,-5.265932,-6.126704,-8.823878,-0.828057,7.532169,-2.617614,5.975641,2.800638,5.745354,5.159407,2.754664,-7.438906,-1.561278,2.720742,7.578494,3.999360,8.574070,2.501186,3.431371,-1.373223,8.368051,-9.074608,-8.927288,1.376183,-6.795172,4.627382,-4.200757,6.498634,-6.208361,-8.912198,-3.750101,9.576192,4.478413,-1.541961,-0.525837,-6.206444,2.242553,8.308661,-7.315189,6.625455,5.735501,-5.120377,-6.231694,1.483412,-0.561943,-1.798411,0.676009,-7.296522,-2.420738,8.750399,9.925477,3.141713,-5.860888,-2.246720,2.801940,-3.066517,-9.055421,-3.630048,-3.399643,3.516949,-4.940115,4.026343,2.096449,-5.744071,-8.988785,1.064312,7.062102,-4.773172,6.931346,-2.378608,-6.416862,8.314154,3.017955,8.595619,1.999491,-6.850733,0.471266,0.041220,4.304991,-2.240034,-9.016703,0.367516,-2.504571,9.810446,-1.311489,3.851220,-0.464111,4.864409,-9.438146,8.961227,4.318866,2.199790,-8.795124,-0.641352,4.926823,2.967826,-6.380397,6.634541,8.136577,-0.280054,0.393145,-8.573902,-2.093934,6.683900,5.310815,7.865644,5.147196,4.891555,2.106862,8.866106,-6.035247,-2.658431,-8.284358,-7.806287,4.395794,0.541601,-9.745598,-0.551442,-3.484280,6.266505,5.956151,-1.451377,-4.923681,-1.709399,7.282990,-2.183506,-4.126604,-9.907516,-9.367528,-4.600371,1.646461,-7.942174,-3.642316,9.518037,3.403094,-7.305113,6.733567,9.463820,-4.975284,7.092791,1.565229,4.283522,3.835818,-4.119847,-1.891095,4.321665,0.190268,5.316943,-1.325760,-9.492881,-8.115943,-7.003054,1.855796,6.449609,2.673144,-3.360835,-4.404355,3.768694,9.898610,6.675146,-1.514426,-2.146863,9.791573,8.729225,-1.542306,0.308107,-9.966036,-4.776204,2.126547,8.206430,-7.646750,2.745761,-0.029398,-1.073003,6.410962,6.246624,-6.724894,1.989689,-7.137592,-4.806247,-7.646044,9.310676,2.934990,-6.322732,7.315897,-5.306281,3.250430,-7.365707,-8.710339,-7.703420,-5.364318,0.174367,6.230133,-7.539866,-0.798577,-3.582871,-5.932042,9.895156,2.803472,-3.419730,-1.476833,-3.617589,6.314952,5.951955,-4.919920,0.238869,7.008195,8.712942,6.683190,-4.487064,-2.955135,-6.621827,-2.714752,3.057604,0.586976,-4.206060,-3.498931,-1.709204,0.969661,2.498616,1.180640,0.704198,1.008423,2.593936,-7.217390,-2.515675,-1.819700,-8.664577,0.290923,-8.755089,6.123606,-0.717555,1.545980,4.853232,-4.736241,-4.187809,0.393959,-6.624176,6.788054,9.884124,-6.109188,-9.717691,-5.343928,5.296227,-4.599766,5.767751,3.840961,0.970210,-5.637453,1.144204,1.978220,-6.916603,1.042923,-5.469289,-8.443044,1.751027,5.217867,7.469483,-6.075126,1.670840,-0.395613,-3.813872,-5.927735,-0.301524,3.555326,5.379721,-1.987663,3.435804,5.869144,-2.698162,-3.482411,-5.480981,7.270772,2.083626,-4.941720,0.026449,7.780923,-7.380616,6.344796,-3.585210,0.095544,-0.362106,5.601745,9.003650,5.580783,-7.649358,6.108492,7.968744,-4.022899,-2.242161,-6.807669,3.495215,-3.636760,4.274117,7.985185,-5.209435,-9.044880,-8.055602,-7.296198,-2.489713,1.457116,8.494022,4.170718,8.920155,-2.139617,-4.310843,0.419664,-5.689737,-4.809673,-8.754971,-3.382383,-4.319322,5.887487,-7.662546,-0.033025,2.131062,-3.541513,3.234760,6.730065,7.413521,-6.084940,-0.272830,-9.218769,6.139762,0.713602,-6.382733,-6.255154,-6.591712,4.441599,-2.677696,4.460543,0.616235,-7.253536,2.291574,4.070874,4.011421,-1.810550,-2.151300,4.326732,6.687237,2.088210,-3.410318,-6.221948,0.097829,3.365614,-4.793759,8.168136,-9.544244,-2.470420,0.182303,2.332332,3.203821,6.646237,-4.910715,-2.227794,5.937965,5.376537,9.557091,-1.168417,2.006752,-9.794325,-2.002156,2.206206,-3.450373,-3.728378,5.671298,-1.701477,0.828878,-3.322111,-8.938333,-8.394873,-1.636256,3.417758,0.438594,-6.809762,-7.662366,-1.658079,-7.577508,5.823541,8.331442,0.302044,3.090965,-1.559622,3.763662,-2.032074,3.085250,0.420525,-2.209950,0.452740,-9.332360,-7.829549,3.384346,3.164547,-9.708740,-6.337107,-9.702116,1.172576,5.934970,-8.782837,-4.782281,8.949862,7.931827,-4.323949,7.082443,-0.318537,3.313024,-7.826602,8.812442,5.085754,0.295374,-7.513210,2.388409,1.192043,2.583949,6.356588,6.827349,3.210583,1.969457,-4.783519,6.175342,-7.192405,-7.425628,6.735037,-5.339037,7.995454,-4.526924,3.715689,8.776149,6.734441,-4.376167,0.814118,2.406964,0.174596,-0.125201,2.803043,-1.674186,-0.606007,0.495855,-4.714624,-6.252985,4.943549,4.695828,-3.521961,0.205716,7.138819,-1.940267,0.728844,1.405028,-6.207564,2.351427,-8.159628,4.162608,-0.314817,-5.114553,-4.569724,-0.634026,-3.680457,-9.931106,5.829995,-1.712452,-8.851436,3.422307,-1.589023,-6.180220,-4.216533,-3.899203,9.925254,9.496804,-8.165863,-0.324886,9.329647,-2.822880,8.671686,-6.577237,9.046938,3.524041,-6.883473,9.215582,-7.167443,7.974817,9.077372,4.944834,-9.604789,-2.235910,-0.386804,1.819327,-4.086129,8.213202,3.442992,-3.641776,-7.064943,-4.457432,-1.525742,4.121798,0.186284,8.867205,6.400198,4.139107,0.994710,-3.402341,-2.613781,9.310335,-4.326494,-0.795999,4.611790,-5.936490,5.046138,-6.702450,-9.427394,-0.855138,-3.847519,6.107257,-2.301241,0.027698,-0.787953,3.435257,-3.110471,1.786120,-6.551173,-7.439748,-6.757385,4.966389,8.011441,6.795826,-3.769503,2.423353,3.608313,-5.029841,8.219822,-5.796998,3.727875,-0.098792,-5.176641,-2.285501,-5.457952,-3.984183,9.438452,-4.044927,6.512147,3.545341,6.041066,7.999359,1.705487,-7.611220,0.459849,-8.277945,-7.545507,-6.734270,2.307093,7.134157,5.740801,-2.406042,-3.241518,4.161780,6.473362,7.540121,7.331426,1.522131,-2.107377,9.775828,-5.965015,-9.439069,2.411436,-0.520267,-7.739302,-3.748320,2.718142,-4.431404,6.371438,-1.129040,-6.242497,9.468929,-9.757286,-3.878211,-2.702427,-2.235718,-7.544428,7.691211,-0.341248,-5.781122,-7.753222,-5.647781,6.138106,8.812783,4.482554,8.995274,8.073855,9.442320,-5.489093,-2.833707,-1.150909,4.325070,1.735669,-6.977083,-6.757630,-9.652942,0.913024,3.955792,-8.490493,1.906512,-1.014639,9.818231,5.764853,2.436637,7.671807,-6.121315,-5.802475,-5.926470,-5.624664,6.219348,8.309591,6.901369,4.704802,4.997423,0.401963,5.447698,-8.227252,2.575190,6.661629,4.176113,-5.434915,-2.016901,5.033413,4.995246,9.864954,9.755792,-0.765944,9.587447,0.686655,2.640905,5.170147,-5.446997,-3.807193,9.117420,-6.557190,-0.480568,-8.637142,7.016541,7.440205,-5.427884,-8.959352,8.802066,-6.538499,-3.712092,1.081163,2.472911,-7.812406,-6.806275,4.340823,-4.545746,-2.720764,3.144707,-0.761784,0.802338,5.261519,-6.653016,3.827604,-9.420363,7.079376,7.269446,0.777372,7.688904,-0.592063,-7.447722,-4.544828,9.339382,4.643831,4.923074,3.272594,0.968420,-1.945712,-4.191946,1.053353,-9.967568,1.211165,8.462452,-4.871388,-2.045274,4.118421,-0.382898,-7.045992,-6.652805,-2.691915,6.620537,-1.087936,-8.037950,-7.736372,-7.192318,-7.433348,-7.733226,-8.378436,-5.261733,8.604019,0.262962,3.940002,-0.494081,4.844220,6.509105,-2.463180,-7.190646,7.359431,-1.899665,6.812211,3.956252,6.375781,-0.919148,4.464633,-9.105181,7.065633,2.143947,3.141396,-8.021586,2.366153,4.587969,-8.077507,-8.236502,-6.960433,-8.298528,-9.777390,9.153260,1.245464,6.012069,-3.398002,5.863401,-8.638002,-7.923243,-0.126562,-4.498337,-8.997609,-1.234209,8.227353,-8.825365,2.473022,-4.181140,-8.059186,5.564572,6.370254,5.952505,-3.982605,3.435668,2.039213,-2.684631,2.930999,2.802393,-7.410065,-2.160592,9.827813,-7.892923,2.954289,-7.402289,-8.733417,-7.639804,-7.983402,-0.165931,-8.880303,1.661310,1.054570,-5.070249,9.674032,2.653418,0.097397,5.611926,-4.170969,8.073846,-6.753275,-2.393109,7.658178,-5.568632,-3.490672,-8.898647,0.404483,-6.383362,0.870055,5.617170,4.826764,2.760143,-8.285007,3.329584,-9.379612,8.415831,-0.556764,8.714981,-1.053562,5.987536,-7.989664,0.298420,-0.520190,1.435965,-6.311865,-5.050324,2.562440,-6.803438,-1.693987,-1.816132,-9.241941,-3.755497,1.576211,-4.509528,5.742373,-0.636038,3.351514,5.726862,-2.644675,-9.344407,5.758386,-2.946762,-0.104154,0.229865,-5.750436,1.651704,3.147856,5.846248,7.204335,-3.984827,5.068260,5.343983,-7.575810,-9.011390,0.243998,-1.374898,4.628077,2.139512,9.949036,9.161312,-0.033280,4.932297,-2.831415,7.345404,-1.612823,-3.605587,-9.805254,1.109073,4.658463,9.568615,-0.502661,4.806185,-4.550770,8.466369,9.411071,6.427659,5.349890,5.025123,5.119516,0.352010,-0.591719,-3.775465,5.693377,-6.806732,8.994134,7.705427,9.344559,-5.578331,5.430046,8.526618,-6.945036,6.003555,4.234743,8.144918,6.618959,3.763800,-7.701924,-6.682554,5.876805,-4.837777,5.193760,-2.194162,1.950303,-6.524147,-9.230699,3.831469,1.864324,-6.221076,-9.433903,2.036974,-3.400067,2.296785,-6.111640,2.268283,-5.680674,0.342138,4.063632,-7.350007,-8.763964,-0.271768,8.188850,0.891857,-0.564824,9.282265,2.342700,-8.498906,0.730447,-6.067783,4.118648,6.847143,-4.018426,2.648731,-5.378674,-5.922702,3.783621,8.436570,-0.440574,2.504292,-9.958686,5.607577,4.098127,-3.029697,-2.705836,6.166101,-2.793398,8.162824,2.609572,-8.026405,7.725875,-1.904047,5.039048,2.073669,-8.852009,-6.946752,9.293652,-2.310165,9.805286,-2.053874,1.592556,-6.956862,-3.295662,-3.686964,-0.632505,-4.113111,3.631161,-3.375285,-0.891052,0.296798,-1.532730,-0.360137,1.758565,8.017125,2.155830,-0.283265,9.238026,-7.108721,5.613295,7.403605,5.299144,1.233566,-5.892696,-5.955940,1.390326,3.810986,7.967468,7.359953,-3.721295,-8.570617,-6.597818,-1.692925,8.788113,-1.227206,-1.456145,-1.431249,9.992431,-9.840080,-8.994276,-8.423519,-5.471078,5.128300,7.272911,4.613296,9.828675,0.070386,-5.034654,7.102640,-2.431700,-2.515201,8.878197,5.283959,-6.964201,-4.084559,-8.252069,-1.959852,-6.883175,-9.454669,0.522795,3.624201,5.887399,-6.804294,1.968301,4.413158,1.461213,-0.367805,8.923667,0.286636,8.666278,-3.749617,8.039879,7.207025,-3.275304,3.141653,2.789283,9.273862,-2.778918,-7.620886,2.442786,2.807562,-3.886438,-4.913426,9.296917,6.426443,4.282208,-4.206134,8.784947,4.396282,-3.212104,8.916574,4.925792,-1.553584,-1.287839,8.410667,4.607333,5.435910,-5.819206,6.581767,0.438888,1.310986,-5.490237,6.943797,1.076306,8.665737,-5.204857,0.330292,8.567688,5.944594,-1.358678,-1.961238,5.369858,8.405464,0.760176,-2.638295,-5.156512,0.195396,4.300520,-4.533946,2.951286,-7.937223,-2.369852,-6.174516,-5.441165,9.975853,-7.746317,-2.826370,1.991160,-1.602502,-7.507912,-9.905067,-1.892833,0.515927,-7.297627,-1.540184,2.650671,3.329678,-7.916259,-8.884819,9.429410,2.340155,4.954949,-5.418643,-4.389192,7.587889,6.912081,0.053633,2.202584,5.786842,-1.234632,-5.578251,6.226877,0.248718,6.093804,-2.882836,2.611174,-4.413577,4.977387,-7.588221,2.457666,-4.166178,8.189044,-1.181373,-6.962733,-8.722724,7.310587,-0.524676,8.195511,-8.127946,8.726491,5.652291,4.426868,9.848382,-6.488779,-6.315956,7.901407,-3.513150,-2.956573,-2.381292,0.094888,1.891733,1.727188,9.140468,8.453195,1.331893,-0.512056,5.108200,-0.916227,-1.483414,-5.845874,7.977621,3.017516,-6.635034,-6.584024,-4.989517,-6.001156,0.876820,7.842952,-4.997095,-0.498632,-9.253063,-4.087524,-1.290827,-3.568181,-0.529460,8.473467,3.854297,6.414284,-2.958618,-2.942276,6.432671,-9.736994,-6.247852,8.071348,-2.792585,-5.790068,-1.986954,0.116138,9.065193,9.733248], dtype = "float32")#candidate|6520|(1690,)|const|float32
call_6519 = relay.TupleGetItem(func_4997_call(relay.reshape(const_6520.astype('float32'), [13, 10, 13])), 0)
call_6521 = relay.TupleGetItem(func_5000_call(relay.reshape(const_6520.astype('float32'), [13, 10, 13])), 0)
uop_6528 = relay.sinh(call_6503.astype('float64')) # shape=(1089,)
uop_6530 = relay.sinh(call_6504.astype('float64')) # shape=(1089,)
func_3546_call = mod.get_global_var('func_3546')
func_3547_call = mutated_mod.get_global_var('func_3547')
call_6536 = func_3546_call()
call_6537 = func_3546_call()
bop_6547 = relay.logical_or(const_6520.astype('bool'), relay.reshape(call_6519.astype('bool'), relay.shape_of(const_6520))) # shape=(1690,)
bop_6550 = relay.logical_or(const_6520.astype('bool'), relay.reshape(call_6521.astype('bool'), relay.shape_of(const_6520))) # shape=(1690,)
func_3618_call = mod.get_global_var('func_3618')
func_3621_call = mutated_mod.get_global_var('func_3621')
var_6563 = relay.var("var_6563", dtype = "float64", shape = (70, 1))#candidate|6563|(70, 1)|var|float64
call_6562 = func_3618_call(relay.reshape(var_6563.astype('float64'), [5, 7, 2]))
call_6564 = func_3618_call(relay.reshape(var_6563.astype('float64'), [5, 7, 2]))
output = relay.Tuple([uop_6528,call_6536,bop_6547,call_6562,var_6563,])
output2 = relay.Tuple([uop_6530,call_6537,bop_6550,call_6564,var_6563,])
func_6568 = relay.Function([var_6563,], output)
mod['func_6568'] = func_6568
mod = relay.transform.InferType()(mod)
mutated_mod['func_6568'] = func_6568
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6569 = relay.var("var_6569", dtype = "float64", shape = (70, 1))#candidate|6569|(70, 1)|var|float64
func_6568_call = mutated_mod.get_global_var('func_6568')
call_6570 = func_6568_call(var_6569)
output = call_6570
func_6571 = relay.Function([var_6569], output)
mutated_mod['func_6571'] = func_6571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3546_call = mod.get_global_var('func_3546')
func_3547_call = mutated_mod.get_global_var('func_3547')
call_6615 = func_3546_call()
call_6616 = func_3546_call()
output = relay.Tuple([call_6615,])
output2 = relay.Tuple([call_6616,])
func_6621 = relay.Function([], output)
mod['func_6621'] = func_6621
mod = relay.transform.InferType()(mod)
mutated_mod['func_6621'] = func_6621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6621_call = mutated_mod.get_global_var('func_6621')
call_6622 = func_6621_call()
output = call_6622
func_6623 = relay.Function([], output)
mutated_mod['func_6623'] = func_6623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2828_call = mod.get_global_var('func_2828')
func_2829_call = mutated_mod.get_global_var('func_2829')
call_6708 = relay.TupleGetItem(func_2828_call(), 2)
call_6709 = relay.TupleGetItem(func_2829_call(), 2)
output = call_6708
output2 = call_6709
func_6710 = relay.Function([], output)
mod['func_6710'] = func_6710
mod = relay.transform.InferType()(mod)
output = func_6710()
func_6711 = relay.Function([], output)
mutated_mod['func_6711'] = func_6711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2828_call = mod.get_global_var('func_2828')
func_2829_call = mutated_mod.get_global_var('func_2829')
call_6728 = relay.TupleGetItem(func_2828_call(), 0)
call_6729 = relay.TupleGetItem(func_2829_call(), 0)
output = call_6728
output2 = call_6729
func_6747 = relay.Function([], output)
mod['func_6747'] = func_6747
mod = relay.transform.InferType()(mod)
mutated_mod['func_6747'] = func_6747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6747_call = mutated_mod.get_global_var('func_6747')
call_6748 = func_6747_call()
output = call_6748
func_6749 = relay.Function([], output)
mutated_mod['func_6749'] = func_6749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2801_call = mod.get_global_var('func_2801')
func_2802_call = mutated_mod.get_global_var('func_2802')
call_6763 = func_2801_call()
call_6764 = func_2801_call()
func_4804_call = mod.get_global_var('func_4804')
func_4806_call = mutated_mod.get_global_var('func_4806')
call_6774 = relay.TupleGetItem(func_4804_call(), 0)
call_6775 = relay.TupleGetItem(func_4806_call(), 0)
func_2223_call = mod.get_global_var('func_2223')
func_2230_call = mutated_mod.get_global_var('func_2230')
const_6786 = relay.const([[-5.953220,-3.848795,4.960608,-3.442422,1.695139,-9.788385,-5.609046,4.580901,-3.645673,6.866305,-7.021175,-3.146609,1.069667,4.374818,-7.681015,6.286298,0.435763,1.132466],[5.359002,9.759047,-0.395300,3.494072,6.105143,3.983971,-1.366645,-0.066999,-9.212329,5.723881,-1.632224,3.462358,-6.909544,-2.660599,2.375612,-2.448624,8.531423,5.158098],[3.425139,4.933034,-2.820530,-0.327654,4.654644,7.326474,-0.606372,-8.443378,-5.120795,8.385679,-3.214091,-9.101578,1.211086,-4.338841,-0.025450,4.820615,-1.285666,-0.845674],[8.254892,4.058411,-2.762921,-1.438650,0.953581,0.145110,2.896405,0.961821,-0.772900,9.252964,-4.563598,2.718627,8.014846,9.160089,4.439662,-1.347654,-9.030730,4.896686],[8.982091,0.002761,-8.572099,-0.354725,-1.288384,4.186864,3.968282,-7.466603,-3.686567,2.909718,-8.251769,3.640975,-6.900354,-9.172892,-4.506924,4.253277,-0.245970,-7.319701],[-7.064602,-3.202251,-3.854926,6.424083,-1.071210,-6.162686,4.237398,-9.507450,-9.006241,4.879759,-7.526582,3.176347,-0.558697,-5.208153,-1.495720,4.595628,2.438004,8.222147],[-2.400298,0.679398,-0.676502,0.015564,3.033094,-8.963806,-2.034644,3.551316,8.955044,5.781391,6.798489,-3.859355,-5.919127,-3.123066,2.679319,-4.734258,1.794964,-2.658425],[6.928761,6.010175,-8.165076,-3.253720,-5.777152,0.892198,-1.677726,0.306299,-8.167972,0.563831,5.190780,-9.409205,1.375595,-0.685650,-2.438987,8.939849,3.318089,3.641384]], dtype = "float64")#candidate|6786|(8, 18)|const|float64
var_6787 = relay.var("var_6787", dtype = "float32", shape = (720,))#candidate|6787|(720,)|var|float32
var_6788 = relay.var("var_6788", dtype = "uint32", shape = (1, 660))#candidate|6788|(1, 660)|var|uint32
var_6789 = relay.var("var_6789", dtype = "uint32", shape = (132,))#candidate|6789|(132,)|var|uint32
call_6785 = relay.TupleGetItem(func_2223_call(relay.reshape(const_6786.astype('float64'), [3, 8, 6]), relay.reshape(const_6786.astype('float64'), [3, 8, 6]), relay.reshape(var_6787.astype('float32'), [1, 720]), relay.reshape(var_6788.astype('uint32'), [660,]), relay.reshape(var_6789.astype('uint32'), [132,]), ), 0)
call_6790 = relay.TupleGetItem(func_2230_call(relay.reshape(const_6786.astype('float64'), [3, 8, 6]), relay.reshape(const_6786.astype('float64'), [3, 8, 6]), relay.reshape(var_6787.astype('float32'), [1, 720]), relay.reshape(var_6788.astype('uint32'), [660,]), relay.reshape(var_6789.astype('uint32'), [132,]), ), 0)
var_6795 = relay.var("var_6795", dtype = "uint32", shape = (12, 660))#candidate|6795|(12, 660)|var|uint32
bop_6796 = relay.floor_mod(var_6788.astype('float64'), var_6795.astype('float64')) # shape=(12, 660)
output = relay.Tuple([call_6763,call_6774,call_6785,const_6786,var_6787,var_6789,bop_6796,])
output2 = relay.Tuple([call_6764,call_6775,call_6790,const_6786,var_6787,var_6789,bop_6796,])
func_6812 = relay.Function([var_6787,var_6788,var_6789,var_6795,], output)
mod['func_6812'] = func_6812
mod = relay.transform.InferType()(mod)
mutated_mod['func_6812'] = func_6812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6812_call = mutated_mod.get_global_var('func_6812')
var_6814 = relay.var("var_6814", dtype = "float32", shape = (720,))#candidate|6814|(720,)|var|float32
var_6815 = relay.var("var_6815", dtype = "uint32", shape = (1, 660))#candidate|6815|(1, 660)|var|uint32
var_6816 = relay.var("var_6816", dtype = "uint32", shape = (132,))#candidate|6816|(132,)|var|uint32
var_6817 = relay.var("var_6817", dtype = "uint32", shape = (12, 660))#candidate|6817|(12, 660)|var|uint32
call_6813 = func_6812_call(var_6814,var_6815,var_6816,var_6817,)
output = call_6813
func_6818 = relay.Function([var_6814,var_6815,var_6816,var_6817,], output)
mutated_mod['func_6818'] = func_6818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3415_call = mod.get_global_var('func_3415')
func_3417_call = mutated_mod.get_global_var('func_3417')
call_6832 = func_3415_call()
call_6833 = func_3415_call()
output = relay.Tuple([call_6832,])
output2 = relay.Tuple([call_6833,])
func_6845 = relay.Function([], output)
mod['func_6845'] = func_6845
mod = relay.transform.InferType()(mod)
mutated_mod['func_6845'] = func_6845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6845_call = mutated_mod.get_global_var('func_6845')
call_6846 = func_6845_call()
output = call_6846
func_6847 = relay.Function([], output)
mutated_mod['func_6847'] = func_6847
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6860 = relay.var("var_6860", dtype = "float64", shape = (11, 1, 10))#candidate|6860|(11, 1, 10)|var|float64
var_6861 = relay.var("var_6861", dtype = "float64", shape = (11, 6, 10))#candidate|6861|(11, 6, 10)|var|float64
bop_6862 = relay.floor_mod(var_6860.astype('float64'), var_6861.astype('float64')) # shape=(11, 6, 10)
output = relay.Tuple([bop_6862,])
output2 = relay.Tuple([bop_6862,])
F = relay.Function([var_6860,var_6861,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6860,var_6861,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

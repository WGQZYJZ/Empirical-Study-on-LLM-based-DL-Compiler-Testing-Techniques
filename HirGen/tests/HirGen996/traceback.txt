==========mod==========
#[version = "0.0.5"]
def @func_3424(%var_3414: Tensor[(14, 12, 10), float64]) -> (Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) {
  %0 = @func_3332() /* ty=(Tensor[(14, 12, 10), float64],) */;
  %1 = %0.0;
  %2 = cast(%var_3414, dtype="bool") /* ty=Tensor[(14, 12, 10), bool] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%1, dtype="bool") /* ty=Tensor[(14, 12, 10), bool] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %6 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %7 = greater(%4, %5) /* ty=Tensor[(14, 12, 10), bool] */;
  %8 = %6.0;
  (%7, %8)
}

def @func_4734() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %9 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %10 = @func_2542() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %11 = @func_3615() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %12 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  %13 = %9.0;
  %14 = %10.0;
  %15 = %11.0;
  (%12, %13, %14, %15)
}

def @func_12163(%var_12152: Tensor[(12, 140), float32]) -> (Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), bool], Tensor[(12, 140), float32], Tensor[(4, 468), float64]) {
  %16 = @func_6714() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) */;
  %17 = %16.0;
  %18 = cast(%var_12152, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %19 = shape_of(%17, dtype="int32") /* ty=Tensor[(2), int32] */;
  %20 = cast(%17, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %22 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 468), float64] */, dtype="float64") /* ty=Tensor[(4, 468), float64] */;
  %23 = reshape(%22, newshape=[1872]) /* ty=Tensor[(1872), float64] */;
  %24 = @func_5721(%23) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(14, 12, 10), bool], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), int64]) */;
  %25 = @func_9525() /* ty=Tensor[(9, 5, 6), float64] */;
  %26 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
  %27 = not_equal(%20, %21) /* ty=Tensor[(12, 140), bool] */;
  %28 = %24.1;
  (%25, %26, %27, %28, meta[relay.Constant][0] /* ty=Tensor[(4, 468), float64] */)
}

def @func_14957() -> (Tensor[(11, 11, 5), float64], Tensor[(420, 4), uint64]) {
  %29 = @func_9638() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(420, 4), float32]) */;
  %30 = %29.2;
  %31 = cast(%30, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
  %32 = asinh(%31) /* ty=Tensor[(420, 4), float64] */;
  %33 = cast(%30, dtype="uint64") /* ty=Tensor[(420, 4), uint64] */;
  %34 = shape_of(%32, dtype="int32") /* ty=Tensor[(2), int32] */;
  %35 = cast(%32, dtype="uint64") /* ty=Tensor[(420, 4), uint64] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %37 = @func_4638() /* ty=Tensor[(11, 11, 5), float64] */;
  %38 = bitwise_and(%35, %36) /* ty=Tensor[(420, 4), uint64] */;
  (%37, %38)
}

def @func_7445() -> (float32, Tensor[(12, 140), float64]) {
  %39 = @func_7122() /* ty=(Tensor[(14, 12, 10), int64], Tensor[(14, 12, 10), float32], Tensor[(13, 10, 5), float32], Tensor[(1, 650), float32], Tensor[(14, 1, 12), float32], float32) */;
  %40 = @func_5140() /* ty=(Tensor[(12, 140), float64],) */;
  %41 = %39.5;
  %42 = %40.0;
  (%41, %42)
}

def @func_9091() -> (Tensor[(11, 11, 5), float64],) {
  %43 = @func_5455() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %44 = %43.0;
  (%44,)
}

def @func_2078(%var_2051: Tensor[(1680), float32], %var_2066: Tensor[(650), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(1680), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(14, 12, 10), float32]) {
  %45 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %46 = cast(%var_2051, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %47 = cast(%var_2051, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %48 = reshape(%46, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %49 = reshape(%47, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %50 = @func_1107(%48, %49) /* ty=(Tensor[(14, 12, 10), float32], Tensor[(14, 12, 10), float64]) */;
  %51 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %52 = cast(%var_2066, dtype="float32") /* ty=Tensor[(650), float32] */;
  %53 = reshape(%52, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float32] */;
  %54 = @func_480(%53) /* ty=(Tensor[(13, 10, 5), float32],) */;
  %55 = %50.1;
  %56 = cast(%55, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %57 = cast(%var_2051, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %58 = reshape(%56, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %59 = reshape(%57, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %60 = @func_1107(%58, %59) /* ty=(Tensor[(14, 12, 10), float32], Tensor[(14, 12, 10), float64]) */;
  %61 = %45.0;
  %62 = %51.0;
  %63 = %54.0;
  %64 = %60.0;
  (%61, %55, %var_2051, %62, %63, %var_2066, %64)
}

def @func_8693() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) {
  %65 = @func_2542() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %66 = cast(meta[relay.Constant][1] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
  %67 = reshape(%66, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %68 = @func_5369(%67) /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(11, 11, 5), float64]) */;
  %69 = @func_4855() /* ty=(Tensor[(12, 140), float32],) */;
  %70 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %71 = @func_4638() /* ty=Tensor[(11, 11, 5), float64] */;
  %72 = %65.0;
  %73 = %68.2;
  %74 = %69.0;
  %75 = %70.0;
  (%71, %72, %73, meta[relay.Constant][1] /* ty=Tensor[(650), float32] */, %74, %75)
}

def @func_11592() -> (Tensor[(12, 140), uint8], Tensor[(15, 12, 12), float32]) {
  %76 = @func_7672() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %77 = %76.0;
  %78 = cast(meta[relay.Constant][2] /* ty=Tensor[(12, 140), float32] */, dtype="uint8") /* ty=Tensor[(12, 140), uint8] */;
  %79 = shape_of(%77, dtype="int32") /* ty=Tensor[(2), int32] */;
  %80 = cast(%77, dtype="uint8") /* ty=Tensor[(12, 140), uint8] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %82 = bitwise_xor(%80, %81) /* ty=Tensor[(12, 140), uint8] */;
  %83 = @func_10186() /* ty=Tensor[(15, 12, 12), float32] */;
  (%82, %83)
}

def @func_9500() -> (Tensor[(12, 140), float32],) {
  %84 = @func_4178() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) */;
  %85 = %84.0;
  (%85,)
}

def @func_2474(%var_2460: Tensor[(14, 12, 10), float64]) -> (Tensor[(14, 12, 10), float32],) {
  %86 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %87 = %86.1;
  %88 = cast(%var_2460, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(%87, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %92 = divide(%90, %91) /* ty=Tensor[(14, 12, 10), float32] */;
  (%92,)
}

def @func_1107(%var_1046: Tensor[(14, 12, 10), float32], %var_1047: Tensor[(14, 12, 10), float32]) -> (Tensor[(14, 12, 10), float32], Tensor[(14, 12, 10), float64]) {
  %93 = cast(%var_1047, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %94 = shape_of(%var_1046, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(%var_1046, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %97 = cast(%var_1047, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %98 = mod(%95, %96) /* ty=Tensor[(14, 12, 10), float32] */;
  %99 = exp(%97) /* ty=Tensor[(14, 12, 10), float64] */;
  (%98, %99)
}

def @func_8076() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64]) {
  %100 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %101 = %100.1;
  %102 = cast(%101, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %103 = cast(%101, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %104 = reshape(%102, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %105 = reshape(%103, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %106 = @func_1107(%104, %105) /* ty=(Tensor[(14, 12, 10), float32], Tensor[(14, 12, 10), float64]) */;
  %107 = cast(%101, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %108 = reshape(%107, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %109 = @func_4479(%108) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(1680), float32]) */;
  %110 = %106.1;
  %111 = %109.0;
  (%101, %110, %111)
}

def @func_7030(%var_7017: Tensor[(15, 4, 8), float64], %var_7027: Tensor[(1680), float32]) -> (Tensor[(15, 4, 8), float64], Tensor[(11, 11, 5), float64], Tensor[(1680), float32]) {
  %112 = cast(%var_7017, dtype="float64") /* ty=Tensor[(15, 4, 8), float64] */;
  %113 = cast(%var_7027, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %114 = reshape(%113, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %115 = @func_5985(%114) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float64]) */;
  %116 = sinh(%112) /* ty=Tensor[(15, 4, 8), float64] */;
  %117 = %115.0;
  (%116, %117, %var_7027)
}

def @func_14584() -> (Tensor[(15, 12, 12), float32],) {
  %118 = @func_10186() /* ty=Tensor[(15, 12, 12), float32] */;
  (%118,)
}

def @func_5055() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float32]) {
  %119 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
  %120 = cast(%119, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %121 = reshape(%120, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %122 = @func_2474(%121) /* ty=(Tensor[(14, 12, 10), float32],) */;
  %123 = %122.0;
  (%119, %123)
}

def @func_8562() -> Tensor[(12, 140), float32] {
  %124 = @func_5055() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float32]) */;
  %124.0
}

def @func_11223() -> (Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(325, 2), float32]) {
  %125 = @func_6599() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %126 = cast(meta[relay.Constant][3] /* ty=Tensor[(325, 2), float32] */, dtype="float32") /* ty=Tensor[(325, 2), float32] */;
  %127 = reshape(%126, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float32] */;
  %128 = @func_480(%127) /* ty=(Tensor[(13, 10, 5), float32],) */;
  %129 = %125.0;
  %130 = %128.0;
  (%129, %130, meta[relay.Constant][3] /* ty=Tensor[(325, 2), float32] */)
}

def @func_13318() -> (Tensor[(11, 11, 5), float64],) {
  %131 = @func_11485() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %132 = %131.0;
  (%132,)
}

def @func_14202() -> Tensor[(12, 140), float32] {
  %133 = @func_6971() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %133.2
}

def @func_7633() -> Tensor[(14, 12, 10), float64] {
  %134 = @func_3764() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) */;
  %134.1
}

def @func_1962() -> (Tensor[(11, 11, 5), float64],) {
  %135 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
  %136 = log(%135) /* ty=Tensor[(11, 11, 5), float64] */;
  (%136,)
}

def @func_3478() -> Tensor[(12, 140), float32] {
  %137 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %137.2
}

def @func_6655() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %138 = @func_5455() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %139 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %140 = %138.0;
  %141 = %139.1;
  (%140, %141)
}

def @func_6049() -> (Tensor[(11, 11, 5), float64],) {
  %142 = @func_3522() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) */;
  %143 = %142.0;
  (%143,)
}

def @func_6467() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), int64]) {
  %144 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %145 = @func_3666() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %146 = @func_5301() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64]) */;
  %147 = %144.2;
  %148 = %145.1;
  %149 = %146.1;
  (%147, %148, %149)
}

def @func_6824() -> Tensor[(12, 140), float32] {
  %150 = @func_4855() /* ty=(Tensor[(12, 140), float32],) */;
  %150.0
}

def @func_3522() -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) {
  %151 = @func_2728() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %152 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %153 = %151.0;
  %154 = %152.1;
  (%153, %154)
}

def @func_8106() -> Tensor[(12, 140), float32] {
  @func_2498() /* ty=Tensor[(12, 140), float32] */
}

def @func_9182(%var_9132: Tensor[(9, 650), bool], %var_9177: Tensor[(9, 650), float32]) -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(9, 650), uint32]) {
  %155 = @func_6467() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), int64]) */;
  %156 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %157 = @func_5455() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %158 = %155.1;
  %159 = cast(%158, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %160 = reshape(%159, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %161 = @func_4118(%160) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool]) */;
  %162 = %161.2;
  %163 = cast(%162, dtype="float64") /* ty=Tensor[(?, 650), float64] */;
  %164 = cast(%var_9132, dtype="float64") /* ty=Tensor[(9, 650), float64] */;
  %165 = floor_mod(%163, %164) /* ty=Tensor[(9, 650), float64] */;
  %166 = cast(%165, dtype="float32") /* ty=Tensor[(9, 650), float32] */;
  %167 = erf(%166) /* ty=Tensor[(9, 650), float32] */;
  %168 = cast(%var_9177, dtype="uint32") /* ty=Tensor[(9, 650), uint32] */;
  %169 = shape_of(%167, dtype="int32") /* ty=Tensor[(2), int32] */;
  %170 = cast(%167, dtype="uint32") /* ty=Tensor[(9, 650), uint32] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %172 = %156.0;
  %173 = %157.0;
  %174 = minimum(%170, %171) /* ty=Tensor[(9, 650), uint32] */;
  (%158, %172, %173, %174)
}

def @func_10186() -> Tensor[(15, 12, 12), float32] {
  %175 = @func_6519() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
  %175.0
}

def @func_2415(%var_2397: Tensor[(1680), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32]) {
  %176 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %177 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %178 = cast(%var_2397, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %179 = cast(meta[relay.Constant][5] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
  %180 = reshape(%178, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %181 = reshape(%179, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %182 = @func_2078(%180, %181) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(1680), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(14, 12, 10), float32]) */;
  %183 = %182.4;
  %184 = cast(%183, dtype="float32") /* ty=Tensor[(13, 10, 5), float32] */;
  %185 = %176.0;
  %186 = %177.0;
  %187 = log(%184) /* ty=Tensor[(13, 10, 5), float32] */;
  (%185, %var_2397, meta[relay.Constant][5] /* ty=Tensor[(650), float32] */, %186, %187)
}

def @func_13775(%var_13733: Tensor[(165), float32], %var_13750: Tensor[(650), float32]) -> (Tensor[(78, 2), uint32], Tensor[(1, 13, 12), uint32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(5, 11, 3), float32], Tensor[(165), float32], Tensor[(14, 12, 10), int64], Tensor[(12, 140), float32], Tensor[(650), float32], Tensor[(12, 140), float32]) {
  %188 = @func_13249() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(1, 13, 12), uint32], Tensor[(78, 2), uint32]) */;
  %189 = @func_6096() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(1, 13, 12), uint32], Tensor[(156), uint32]) */;
  %190 = @func_12229() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %191 = @func_6519() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
  %192 = cast(%var_13733, dtype="float32") /* ty=Tensor[(165), float32] */;
  %193 = cast(%var_13733, dtype="float32") /* ty=Tensor[(165), float32] */;
  %194 = reshape(%192, newshape=[5, 11, 3]) /* ty=Tensor[(5, 11, 3), float32] */;
  %195 = reshape(%193, newshape=[5, 11, 3]) /* ty=Tensor[(5, 11, 3), float32] */;
  %196 = @func_9568(%194, %195) /* ty=(Tensor[(5, 11, 3), float32],) */;
  %197 = cast(%var_13750, dtype="float32") /* ty=Tensor[(650), float32] */;
  %198 = reshape(%197, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %199 = @func_2855(%198) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) */;
  %200 = @func_11259() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 7, 4), uint64], Tensor[(392), uint64], Tensor[(12, 140), float32]) */;
  %201 = %188.3;
  %202 = %189.2;
  %203 = @func_7633() /* ty=Tensor[(14, 12, 10), float64] */;
  %204 = %190.0;
  %205 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  %206 = %191.1;
  %207 = %196.0;
  %208 = @func_7650() /* ty=Tensor[(14, 12, 10), int64] */;
  %209 = %199.0;
  %210 = %200.3;
  (%201, %202, %203, %204, %205, %206, %207, %var_13733, %208, %209, %var_13750, %210)
}

def @func_13669() -> (Tensor[(14, 12, 10), bool],) {
  %211 = @func_5807() /* ty=Tensor[(14, 12, 10), bool] */;
  (%211,)
}

def @func_6213() -> (Tensor[(12, 140), float64],) {
  %212 = @func_4413() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float64]) */;
  %213 = %212.1;
  (%213,)
}

def @func_5219() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %214 = @func_3522() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) */;
  %215 = @func_3832() /* ty=Tensor[(11, 11, 5), float64] */;
  %216 = %214.0;
  %217 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
  (%215, %216, %217)
}

def @func_13975() -> Tensor[(12, 140), float32] {
  @func_12253() /* ty=Tensor[(12, 140), float32] */
}

def @func_6599() -> (Tensor[(11, 11, 5), float64],) {
  %218 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  (%218,)
}

def @func_12253() -> Tensor[(12, 140), float32] {
  %219 = @func_4247() /* ty=(Tensor[(12, 140), float32],) */;
  %219.0
}

def @func_12036() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %220 = @func_11974() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %221 = @func_4247() /* ty=(Tensor[(12, 140), float32],) */;
  %222 = @func_5892() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %223 = %220.1;
  %224 = %221.0;
  %225 = %222.1;
  (%223, %224, %225)
}

def @func_6783(%var_6774: Tensor[(12, 140), float32]) -> (Tensor[(156), uint32], Tensor[(12, 140), float32]) {
  %226 = @func_6096() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(1, 13, 12), uint32], Tensor[(156), uint32]) */;
  %227 = @func_4692() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
  %228 = %227.1;
  %229 = cast(%var_6774, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %230 = shape_of(%228, dtype="int32") /* ty=Tensor[(2), int32] */;
  %231 = cast(%228, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %233 = %226.3;
  %234 = power(%231, %232) /* ty=Tensor[(12, 140), float32] */;
  (%233, %234)
}

def @func_7517(%var_7470: Tensor[(1872), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), bool], Tensor[(12, 140), float32]) {
  %235 = @func_2681() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %236 = @func_4413() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float64]) */;
  %237 = %236.0;
  %238 = cast(%237, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %239 = cast(%var_7470, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %240 = cast(%237, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %241 = reshape(%238, newshape=[12, 140]) /* ty=Tensor[(12, 140), float64] */;
  %242 = reshape(%239, newshape=[12, 156]) /* ty=Tensor[(12, 156), float64] */;
  %243 = reshape(%240, newshape=[12, 140]) /* ty=Tensor[(12, 140), bool] */;
  %244 = @func_3159(%241, %242, %243) /* ty=(Tensor[(12, 140), int32], Tensor[(1, 12, 13), float64], Tensor[(12, 156), uint16], Tensor[(12, 140), uint8]) */;
  %245 = @func_5140() /* ty=(Tensor[(12, 140), float64],) */;
  %246 = %245.0;
  %247 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %248 = %247.0;
  %249 = cast(%248, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %250 = shape_of(%246, dtype="int32") /* ty=Tensor[(2), int32] */;
  %251 = cast(%246, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %253 = cast(%248, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %254 = %235.0;
  %255 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  %256 = %244.1;
  %257 = greater_equal(%251, %252) /* ty=Tensor[(12, 140), bool] */;
  %258 = sinh(%253) /* ty=Tensor[(12, 140), float32] */;
  (%254, %237, %255, %256, %var_7470, %257, %258)
}

def @func_14386() -> (Tensor[(11, 11, 5), float64],) {
  %259 = @func_7077() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %260 = %259.0;
  (%260,)
}

def @func_3313(%var_3276: Tensor[(1, 650), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(2, 650), int16], Tensor[(1, 650), float64]) {
  %261 = @func_2728() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %262 = cast(%var_3276, dtype="float32") /* ty=Tensor[(1, 650), float32] */;
  %263 = reshape(%262, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %264 = @func_2855(%263) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) */;
  %265 = cast(%var_3276, dtype="int16") /* ty=Tensor[(1, 650), int16] */;
  %266 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 650), float32] */, dtype="int16") /* ty=Tensor[(2, 650), int16] */;
  %267 = cast(%var_3276, dtype="float64") /* ty=Tensor[(1, 650), float64] */;
  %268 = %261.0;
  %269 = %264.3;
  %270 = subtract(%265, %266) /* ty=Tensor[(2, 650), int16] */;
  %271 = atanh(%267) /* ty=Tensor[(1, 650), float64] */;
  (%268, %269, %270, %271)
}

def @func_4178() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) {
  %272 = @func_3541() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
  %273 = %272.0;
  %274 = cast(%273, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %275 = reshape(%274, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %276 = @func_3424(%275) /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
  %277 = %276.0;
  (%273, %277)
}

def @func_14244() -> Tensor[(11, 11, 5), float64] {
  %278 = @func_7077() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %278.0
}

def @func_10233() -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32]) {
  %279 = @func_7672() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %280 = @func_9026() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %281 = %280.0;
  %282 = cast(%281, dtype="float32") /* ty=Tensor[(11, 11, 5), float32] */;
  %283 = @func_9500() /* ty=(Tensor[(12, 140), float32],) */;
  %284 = %279.1;
  %285 = log10(%282) /* ty=Tensor[(11, 11, 5), float32] */;
  %286 = %283.0;
  (%284, %285, %286)
}

def @func_6033() -> (Tensor[(14, 12, 10), float64],) {
  %287 = @func_3332() /* ty=(Tensor[(14, 12, 10), float64],) */;
  %288 = %287.0;
  (%288,)
}

def @func_3078() -> Tensor[(11, 11, 5), float64] {
  %289 = @func_2589() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %289.0
}

def @func_4158() -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) {
  %290 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %291 = %290.0;
  %292 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  (%291, %292)
}

def @func_12229() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %293 = @func_9328() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %294 = @func_5248() /* ty=Tensor[(11, 11, 5), float64] */;
  %295 = %293.2;
  (%294, %295)
}

def @func_2589() -> (Tensor[(11, 11, 5), float64],) {
  %296 = @func_2542() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %297 = %296.0;
  (%297,)
}

def @func_4803(%var_4774: Tensor[(156), float64]) -> (Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(156), float64]) {
  %298 = @func_2681() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %299 = %298.0;
  %300 = cast(%299, dtype="float32") /* ty=Tensor[(11, 11, 5), float32] */;
  %301 = cast(%var_4774, dtype="float64") /* ty=Tensor[(156), float64] */;
  %302 = reshape(%301, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
  %303 = @func_2998(%302) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(11, 11, 5), float64]) */;
  %304 = atanh(%300) /* ty=Tensor[(11, 11, 5), float32] */;
  %305 = @func_3478() /* ty=Tensor[(12, 140), float32] */;
  %306 = %303.1;
  (%304, %305, %306, %var_4774)
}

def @func_10995() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(15, 6, 2), int32], Tensor[(180), int32]) {
  %307 = @func_8076() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64]) */;
  %308 = @func_8076() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64]) */;
  %309 = cast(meta[relay.Constant][7] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %310 = cast(meta[relay.Constant][7] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %311 = reshape(%309, newshape=[15, 6, 2]) /* ty=Tensor[(15, 6, 2), int32] */;
  %312 = reshape(%310, newshape=[15, 6, 2]) /* ty=Tensor[(15, 6, 2), int32] */;
  %313 = @func_10038(%311, %312) /* ty=(Tensor[(15, 6, 2), int32], Tensor[(12, 140), float32]) */;
  %314 = %307.2;
  %315 = %308.0;
  %316 = %313.0;
  (%314, %315, %316, meta[relay.Constant][7] /* ty=Tensor[(180), int32] */)
}

def @func_12431() -> (Tensor[(12, 140), float32],) {
  %317 = @func_6467() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), int64]) */;
  %318 = %317.1;
  (%318,)
}

def @func_10638() -> (Tensor[(12, 140), float32],) {
  %319 = @func_8106() /* ty=Tensor[(12, 140), float32] */;
  %320 = cast(%319, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %321 = asin(%320) /* ty=Tensor[(12, 140), float32] */;
  (%321,)
}

def @func_9688() -> (Tensor[(11, 11, 5), float64],) {
  %322 = @func_4905() /* ty=(Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64]) */;
  %323 = %322.1;
  (%323,)
}

def @func_14909() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %324 = @func_6599() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %325 = @func_12328() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %326 = %324.0;
  %327 = %325.0;
  (%326, %327)
}

def @func_8395() -> (Tensor[(11, 11, 5), float64],) {
  %328 = @func_4680() /* ty=Tensor[(11, 11, 5), float64] */;
  (%328,)
}

def @func_10916() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float32], Tensor[(14, 12, 10), float32]) {
  %329 = @func_5455() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %330 = %329.0;
  %331 = cast(%330, dtype="float32") /* ty=Tensor[(11, 11, 5), float32] */;
  %332 = @func_5055() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float32]) */;
  %333 = @func_9921() /* ty=Tensor[(11, 11, 5), float64] */;
  %334 = @func_10280() /* ty=Tensor[(12, 140), float32] */;
  %335 = @func_2941() /* ty=Tensor[(11, 11, 5), float64] */;
  %336 = acosh(%331) /* ty=Tensor[(11, 11, 5), float32] */;
  %337 = %332.1;
  (%333, %334, %335, %336, %337)
}

def @func_13821() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %338 = @func_4158() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
  %339 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %340 = %338.0;
  %341 = %339.0;
  (%340, %341)
}

def @func_7303(%var_7296: float32) -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], float32) {
  %342 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %343 = @func_3888() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %344 = %343.1;
  %345 = cast(%344, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
  %346 = cast(%var_7296, dtype="float32") /* ty=float32 */;
  %347 = reshape(%346, newshape=[]) /* ty=float32 */;
  %348 = @func_3970(%347) /* ty=(Tensor[(14, 1, 12), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %349 = %342.0;
  %350 = asin(%345) /* ty=Tensor[(11, 11, 5), float64] */;
  %351 = %348.1;
  (%349, %350, %351, %var_7296)
}

def @main() -> (Tensor[(420, 4), float64],) {
  %352 = @func_14957() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(420, 4), uint64]) */;
  %353 = %352.1;
  %354 = cast(%353, dtype="float32") /* ty=Tensor[(420, 4), float32] */;
  %355 = atanh(%354) /* ty=Tensor[(420, 4), float32] */;
  %356 = cast(%355, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
  %357 = acos(%356) /* ty=Tensor[(420, 4), float64] */;
  (%357,)
}

def @func_5140() -> (Tensor[(12, 140), float64],) {
  %358 = @func_4413() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float64]) */;
  %359 = %358.1;
  (%359,)
}

def @func_13864() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), bool]) {
  %360 = @func_7077() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %361 = @func_9857() /* ty=(Tensor[(1680), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) */;
  %362 = @func_12717() /* ty=Tensor[(11, 11, 5), float64] */;
  %363 = %360.0;
  %364 = %361.2;
  %365 = @func_8018() /* ty=Tensor[(11, 11, 5), bool] */;
  (%362, %363, %364, %365)
}

def @func_13955() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %366 = @func_8262() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %367 = %366.0;
  %368 = @func_11917() /* ty=Tensor[(12, 140), float32] */;
  (%367, %368)
}

def @func_14731() -> (Tensor[(12, 140), bool], Tensor[(1680), float32], Tensor[(15, 12, 12), int16]) {
  %369 = cast(meta[relay.Constant][8] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %370 = reshape(%369, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %371 = @func_14584() /* ty=(Tensor[(15, 12, 12), float32],) */;
  %372 = %371.0;
  %373 = cast(%372, dtype="float32") /* ty=Tensor[(15, 12, 12), float32] */;
  %374 = sqrt(%373) /* ty=Tensor[(15, 12, 12), float32] */;
  %375 = cast(%372, dtype="float64") /* ty=Tensor[(15, 12, 12), float64] */;
  %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%374, dtype="float64") /* ty=Tensor[(15, 12, 12), float64] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %379 = floor_divide(%377, %378) /* ty=Tensor[(15, 12, 12), float64] */;
  %380 = cast(%379, dtype="int16") /* ty=Tensor[(15, 12, 12), int16] */;
  %381 = shape_of(%374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%374, dtype="int16") /* ty=Tensor[(15, 12, 12), int16] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %384 = @func_4519(%370) /* ty=Tensor[(12, 140), bool] */;
  %385 = minimum(%382, %383) /* ty=Tensor[(15, 12, 12), int16] */;
  (%384, meta[relay.Constant][8] /* ty=Tensor[(1680), float32] */, %385)
}

def @func_12003() -> (Tensor[(11, 11, 5), float64], Tensor[(15, 14, 7), float32], Tensor[(1470), float32]) {
  %386 = @func_5219() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %387 = cast(meta[relay.Constant][9] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %388 = cast(meta[relay.Constant][9] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %389 = reshape(%387, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), float32] */;
  %390 = reshape(%388, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), float32] */;
  %391 = @func_10727(%389, %390) /* ty=(Tensor[(15, 14, 7), float32], Tensor[(12, 140), float32]) */;
  %392 = %386.0;
  %393 = %391.0;
  (%392, %393, meta[relay.Constant][9] /* ty=Tensor[(1470), float32] */)
}

def @func_14408() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), uint8], Tensor[(1680), float64], Tensor[(1872), float64]) {
  %394 = @func_12003() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(15, 14, 7), float32], Tensor[(1470), float32]) */;
  %395 = cast(meta[relay.Constant][10] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %396 = cast(meta[relay.Constant][11] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %397 = cast(meta[relay.Constant][10] /* ty=Tensor[(1680), float64] */, dtype="bool") /* ty=Tensor[(1680), bool] */;
  %398 = reshape(%395, newshape=[12, 140]) /* ty=Tensor[(12, 140), float64] */;
  %399 = reshape(%396, newshape=[12, 156]) /* ty=Tensor[(12, 156), float64] */;
  %400 = reshape(%397, newshape=[12, 140]) /* ty=Tensor[(12, 140), bool] */;
  %401 = @func_3159(%398, %399, %400) /* ty=(Tensor[(12, 140), int32], Tensor[(1, 12, 13), float64], Tensor[(12, 156), uint16], Tensor[(12, 140), uint8]) */;
  %402 = %394.0;
  %403 = %401.3;
  (%402, %403, meta[relay.Constant][10] /* ty=Tensor[(1680), float64] */, meta[relay.Constant][11] /* ty=Tensor[(1872), float64] */)
}

def @func_14144(%var_14095: Tensor[(4, 11, 1), float32]) -> (Tensor[(4, 11, 1), float32], Tensor[(14, 12, 10), bool], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %404 = cast(%var_14095, dtype="float32") /* ty=Tensor[(4, 11, 1), float32] */;
  %405 = @func_9857() /* ty=(Tensor[(1680), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) */;
  %406 = log(%404) /* ty=Tensor[(4, 11, 1), float32] */;
  %407 = %405.2;
  %408 = @func_10008() /* ty=Tensor[(12, 140), float32] */;
  %409 = @func_5329() /* ty=Tensor[(11, 11, 5), float64] */;
  %410 = @func_8440() /* ty=Tensor[(12, 140), float32] */;
  (%406, %407, %408, %409, %410)
}

def @func_14775() -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %411 = @func_9688() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %412 = %411.0;
  %413 = cast(%412, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
  %414 = reshape(%413, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), float64] */;
  %415 = @func_7841(%414) /* ty=(Tensor[(14, 12, 10), int64], Tensor[(11, 11, 5), uint16], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64]) */;
  %416 = @func_4905() /* ty=(Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64]) */;
  %417 = @func_5301() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64]) */;
  %418 = @func_11157() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %419 = @func_12061() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %420 = %415.0;
  %421 = %416.1;
  %422 = %417.1;
  %423 = %418.1;
  %424 = %419.0;
  (%412, %420, %421, %422, %423, %424)
}

def @func_8891() -> (Tensor[(12, 140), float32], Tensor[(14, 1, 12), float32], float32) {
  %425 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %426 = cast(-9.51241f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %427 = reshape(%426, newshape=[]) /* ty=float32 */;
  %428 = @func_3970(%427) /* ty=(Tensor[(14, 1, 12), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %429 = %425.0;
  %430 = %428.0;
  (%429, %430, -9.51241f /* ty=float32 */)
}

def @func_3060() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %431 = @func_2542() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %432 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %433 = %431.0;
  %434 = %432.0;
  (%433, %434)
}

def @func_4905() -> (Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64]) {
  %435 = @func_3361() /* ty=Tensor[(11, 11, 5), float64] */;
  %436 = cast(meta[relay.Constant][12] /* ty=Tensor[(11, 11, 5), float64] */, dtype="bool") /* ty=Tensor[(11, 11, 5), bool] */;
  %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%435, dtype="bool") /* ty=Tensor[(11, 11, 5), bool] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %440 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %441 = logical_and(%438, %439) /* ty=Tensor[(11, 11, 5), bool] */;
  %442 = %440.0;
  (%441, %442)
}

def @func_14850() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %443 = @func_9804() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) */;
  %444 = @func_10995() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(15, 6, 2), int32], Tensor[(180), int32]) */;
  %445 = @func_9500() /* ty=(Tensor[(12, 140), float32],) */;
  %446 = %443.0;
  %447 = %444.0;
  %448 = @func_12580() /* ty=Tensor[(11, 11, 5), float64] */;
  %449 = @func_12511() /* ty=Tensor[(11, 11, 5), float64] */;
  %450 = @func_6824() /* ty=Tensor[(12, 140), float32] */;
  %451 = %445.0;
  %452 = @func_14535() /* ty=Tensor[(12, 140), float32] */;
  (%446, %447, %448, %449, %450, %451, %452)
}

def @func_4692() -> (Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) {
  %453 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(15, 12, 12), float32] */;
  %454 = cos(%453) /* ty=Tensor[(15, 12, 12), float32] */;
  %455 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
  (%454, %455)
}

def @func_10727(%var_10702: Tensor[(15, 14, 7), float32], %var_10703: Tensor[(15, 14, 7), float32]) -> (Tensor[(15, 14, 7), float32], Tensor[(12, 140), float32]) {
  %456 = cast(%var_10703, dtype="float32") /* ty=Tensor[(15, 14, 7), float32] */;
  %457 = shape_of(%var_10702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%var_10702, dtype="float32") /* ty=Tensor[(15, 14, 7), float32] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %460 = power(%458, %459) /* ty=Tensor[(15, 14, 7), float32] */;
  %461 = @func_8603() /* ty=Tensor[(12, 140), float32] */;
  (%460, %461)
}

def @func_3888() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %462 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %463 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %464 = %462.0;
  %465 = %463.0;
  (%464, %465)
}

def @func_2941() -> Tensor[(11, 11, 5), float64] {
  %466 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %466.0
}

def @func_5892() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %467 = @func_4441() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %468 = %467.0;
  %469 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
  (%468, %469)
}

def @func_5369(%var_5355: Tensor[(650), float32]) -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(11, 11, 5), float64]) {
  %470 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %471 = %470.1;
  %472 = cast(%471, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %473 = reshape(%472, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %474 = @func_4118(%473) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool]) */;
  %475 = %474.3;
  %476 = cast(%475, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %477 = cast(%var_5355, dtype="float32") /* ty=Tensor[(650), float32] */;
  %478 = reshape(%476, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %479 = reshape(%477, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %480 = @func_2078(%478, %479) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(1680), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(14, 12, 10), float32]) */;
  %481 = @func_4734() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %482 = %480.1;
  %483 = %481.0;
  (%471, %475, %482, %var_5355, %483)
}

def @func_10038(%var_10028: Tensor[(15, 6, 2), int32], %var_10029: Tensor[(15, 6, 2), int32]) -> (Tensor[(15, 6, 2), int32], Tensor[(12, 140), float32]) {
  %484 = cast(%var_10029, dtype="int32") /* ty=Tensor[(15, 6, 2), int32] */;
  %485 = shape_of(%var_10028, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%var_10028, dtype="int32") /* ty=Tensor[(15, 6, 2), int32] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %488 = @func_8693() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
  %489 = subtract(%486, %487) /* ty=Tensor[(15, 6, 2), int32] */;
  %490 = %488.4;
  (%489, %490)
}

def @func_6061() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) {
  %491 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %492 = @func_6033() /* ty=(Tensor[(14, 12, 10), float64],) */;
  %493 = %491.0;
  %494 = %492.0;
  (%493, %494)
}

def @func_6008() -> Tensor[(11, 11, 5), float64] {
  @func_5329() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_8440() -> Tensor[(12, 140), float32] {
  %495 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %495.0
}

def @func_8018() -> Tensor[(11, 11, 5), bool] {
  %496 = @func_4905() /* ty=(Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64]) */;
  %496.0
}

def @func_7841(%var_7818: Tensor[(11, 11, 5), float64]) -> (Tensor[(14, 12, 10), int64], Tensor[(11, 11, 5), uint16], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64]) {
  %497 = @func_6049() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %498 = %497.0;
  %499 = cast(%var_7818, dtype="uint16") /* ty=Tensor[(11, 11, 5), uint16] */;
  %500 = shape_of(%498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%498, dtype="uint16") /* ty=Tensor[(11, 11, 5), uint16] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %503 = cast(meta[relay.Constant][14] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
  %504 = reshape(%503, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float32] */;
  %505 = @func_7732(%504) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(1680), float32], Tensor[(13, 10, 5), uint32]) */;
  %506 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %507 = @func_7650() /* ty=Tensor[(14, 12, 10), int64] */;
  %508 = multiply(%501, %502) /* ty=Tensor[(11, 11, 5), uint16] */;
  %509 = %505.2;
  %510 = %506.0;
  (%507, %508, %509, meta[relay.Constant][14] /* ty=Tensor[(650), float32] */, %510)
}

def @func_3409() -> (Tensor[(11, 11, 5), float64],) {
  %511 = @func_3060() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %512 = %511.1;
  (%512,)
}

def @func_3541() -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) {
  %513 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %514 = @func_3060() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %515 = %513.0;
  %516 = %514.1;
  (%515, %516)
}

def @func_3361() -> Tensor[(11, 11, 5), float64] {
  %517 = @func_2728() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %517.0
}

def @func_12580() -> Tensor[(11, 11, 5), float64] {
  @func_4680() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_12061() -> (Tensor[(11, 11, 5), float64],) {
  %518 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %519 = %518.0;
  (%519,)
}

def @func_11877(%var_11859: Tensor[(14, 7, 8), float32], %var_11860: Tensor[(14, 7, 8), float32]) -> Tensor[(14, 7, 8), bool] {
  %520 = cast(%var_11860, dtype="bool") /* ty=Tensor[(14, 7, 8), bool] */;
  %521 = shape_of(%var_11859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%var_11859, dtype="bool") /* ty=Tensor[(14, 7, 8), bool] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%522, %523) /* ty=Tensor[(14, 7, 8), bool] */
}

def @func_13144() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %524 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %525 = @func_11071() /* ty=Tensor[(12, 140), float32] */;
  %526 = %524.1;
  (%525, %526)
}

def @func_13618(%var_13556: Tensor[(1680), float32], %var_13557: Tensor[(325, 2), float32]) -> (Tensor[(15, 12, 12), float32], Tensor[(1470), float32], Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(392), uint64], Tensor[(325, 2), int32], Tensor[(325, 2), uint64]) {
  %527 = @func_6519() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
  %528 = @func_12003() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(15, 14, 7), float32], Tensor[(1470), float32]) */;
  %529 = cast(%var_13556, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %530 = cast(%var_13557, dtype="float32") /* ty=Tensor[(325, 2), float32] */;
  %531 = reshape(%529, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %532 = reshape(%530, newshape=[65, 10]) /* ty=Tensor[(65, 10), float32] */;
  %533 = @func_8840(%531, %532) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(1680), float32], Tensor[(65, 10), float32], Tensor[(11, 11, 5), float64]) */;
  %534 = @func_11259() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 7, 4), uint64], Tensor[(392), uint64], Tensor[(12, 140), float32]) */;
  %535 = cast(%var_13557, dtype="float64") /* ty=Tensor[(325, 2), float64] */;
  %536 = sigmoid(%535) /* ty=Tensor[(325, 2), float64] */;
  %537 = cast(%536, dtype="float32") /* ty=Tensor[(325, 2), float32] */;
  %538 = asinh(%537) /* ty=Tensor[(325, 2), float32] */;
  %539 = cast(%536, dtype="int32") /* ty=Tensor[(325, 2), int32] */;
  %540 = shape_of(%538, dtype="int32") /* ty=Tensor[(2), int32] */;
  %541 = cast(%538, dtype="int32") /* ty=Tensor[(325, 2), int32] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %543 = cast(%536, dtype="uint64") /* ty=Tensor[(325, 2), uint64] */;
  %544 = shape_of(%538, dtype="int32") /* ty=Tensor[(2), int32] */;
  %545 = cast(%538, dtype="uint64") /* ty=Tensor[(325, 2), uint64] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %547 = %527.0;
  %548 = %528.2;
  %549 = %533.4;
  %550 = %534.2;
  %551 = bitwise_xor(%541, %542) /* ty=Tensor[(325, 2), int32] */;
  %552 = logical_xor(%545, %546) /* ty=Tensor[(325, 2), uint64] */;
  (%547, %548, %549, %var_13556, %550, %551, %552)
}

def @func_10468() -> (Tensor[(11, 11, 5), float64],) {
  %553 = @func_3541() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
  %554 = %553.1;
  (%554,)
}

def @func_7122() -> (Tensor[(14, 12, 10), int64], Tensor[(14, 12, 10), float32], Tensor[(13, 10, 5), float32], Tensor[(1, 650), float32], Tensor[(14, 1, 12), float32], float32) {
  %555 = @func_5301() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64]) */;
  %556 = %555.1;
  %557 = cast(%556, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %558 = reshape(%557, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %559 = @func_2474(%558) /* ty=(Tensor[(14, 12, 10), float32],) */;
  %560 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 650), float32] */, dtype="float32") /* ty=Tensor[(1, 650), float32] */;
  %561 = reshape(%560, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float32] */;
  %562 = @func_480(%561) /* ty=(Tensor[(13, 10, 5), float32],) */;
  %563 = cast(1.46688f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %564 = reshape(%563, newshape=[]) /* ty=float32 */;
  %565 = @func_3970(%564) /* ty=(Tensor[(14, 1, 12), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %566 = %559.0;
  %567 = %562.0;
  %568 = %565.0;
  (%556, %566, %567, meta[relay.Constant][15] /* ty=Tensor[(1, 650), float32] */, %568, 1.46688f /* ty=float32 */)
}

def @func_6235() -> (Tensor[(12, 140), float32],) {
  %569 = @func_4692() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
  %570 = %569.1;
  (%570,)
}

def @func_11974() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %571 = @func_4734() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %572 = @func_4572() /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
  %573 = %571.0;
  %574 = %572.1;
  (%573, %574)
}

def @func_8352() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %575 = @func_6008() /* ty=Tensor[(11, 11, 5), float64] */;
  %576 = @func_5329() /* ty=Tensor[(11, 11, 5), float64] */;
  (%575, %576)
}

def @func_4855() -> (Tensor[(12, 140), float32],) {
  %577 = @func_4295() /* ty=Tensor[(12, 140), float32] */;
  (%577,)
}

def @func_11661() -> (Tensor[(14, 12, 10), float32],) {
  %578 = @func_10916() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float32], Tensor[(14, 12, 10), float32]) */;
  %579 = %578.4;
  (%579,)
}

def @func_2764() -> (Tensor[(12, 140), float32],) {
  %580 = @func_2498() /* ty=Tensor[(12, 140), float32] */;
  (%580,)
}

def @func_9026() -> (Tensor[(11, 11, 5), float64],) {
  %581 = @func_3409() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %582 = %581.0;
  (%582,)
}

def @func_8316() -> (Tensor[(12, 140), float64],) {
  %583 = @func_5140() /* ty=(Tensor[(12, 140), float64],) */;
  %584 = %583.0;
  (%584,)
}

def @func_2277() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %585 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %586 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %587 = %585.0;
  %588 = %586.2;
  (%587, %588)
}

def @func_7389() -> (Tensor[(8, 2, 4), float64], Tensor[(12, 140), float32]) {
  %589 = cast(meta[relay.Constant][16] /* ty=Tensor[(8, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 2, 4), float64] */;
  %590 = atanh(%589) /* ty=Tensor[(8, 2, 4), float64] */;
  %591 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
  (%590, %591)
}

def @func_12670() -> (Tensor[(14, 12, 10), float64], Tensor[(13, 10, 5), float32], Tensor[(12, 140), float32]) {
  %592 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %593 = %592.1;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %595 = reshape(%594, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %596 = @func_2415(%595) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32]) */;
  %597 = %596.4;
  %598 = @func_10008() /* ty=Tensor[(12, 140), float32] */;
  (%593, %597, %598)
}

def @func_8167() -> (Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64], Tensor[(1680), float64]) {
  %599 = cast(meta[relay.Constant][17] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %600 = reshape(%599, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %601 = @func_3727(%600) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) */;
  %602 = @func_8018() /* ty=Tensor[(11, 11, 5), bool] */;
  %603 = %601.1;
  (%602, %603, meta[relay.Constant][17] /* ty=Tensor[(1680), float64] */)
}

def @func_14864() -> Tensor[(11, 11, 5), float64] {
  %604 = @func_5892() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %604.0
}

def @func_2542() -> (Tensor[(11, 11, 5), float64],) {
  %605 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %606 = %605.0;
  (%606,)
}

def @func_8545() -> Tensor[(14, 12, 10), int64] {
  @func_7650() /* ty=Tensor[(14, 12, 10), int64] */
}

def @func_10250() -> Tensor[(11, 11, 5), float64] {
  %607 = @func_6889() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %607.1
}

def @func_13964() -> (Tensor[(12, 140), float32],) {
  %608 = @func_12253() /* ty=Tensor[(12, 140), float32] */;
  (%608,)
}

def @func_3332() -> (Tensor[(14, 12, 10), float64],) {
  %609 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %610 = %609.1;
  (%610,)
}

def @func_4638() -> Tensor[(11, 11, 5), float64] {
  %611 = @func_3522() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) */;
  %611.0
}

def @func_12328() -> (Tensor[(11, 11, 5), float64],) {
  %612 = @func_12036() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %613 = %612.0;
  (%613,)
}

def @func_5455() -> (Tensor[(11, 11, 5), float64],) {
  %614 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %615 = %614.0;
  (%615,)
}

def @func_2728() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %616 = @func_2681() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %617 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %618 = %616.0;
  %619 = %617.0;
  (%618, %619)
}

def @func_7672() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %620 = @func_5892() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %621 = @func_6235() /* ty=(Tensor[(12, 140), float32],) */;
  %622 = %620.1;
  %623 = %621.0;
  (%622, %623)
}

def @func_11307() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %624 = @func_9857() /* ty=(Tensor[(1680), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) */;
  %625 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %626 = @func_8167() /* ty=(Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64], Tensor[(1680), float64]) */;
  %627 = @func_3832() /* ty=Tensor[(11, 11, 5), float64] */;
  %628 = %624.1;
  %629 = %625.0;
  %630 = %626.1;
  (%627, %628, %629, %630)
}

def @func_7986(%var_7906: Tensor[(650), float32]) -> (Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64], Tensor[(2, 650), float64], Tensor[(2, 650), bool], Tensor[(11, 11, 5), float64], Tensor[(2, 650), float64]) {
  %631 = @func_7214() /* ty=(Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 1, 12), float32], float32) */;
  %632 = @func_6049() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %633 = cast(%var_7906, dtype="float32") /* ty=Tensor[(650), float32] */;
  %634 = reshape(%633, newshape=[1, 650]) /* ty=Tensor[(1, 650), float32] */;
  %635 = @func_3313(%634) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(2, 650), int16], Tensor[(1, 650), float64]) */;
  %636 = %635.2;
  %637 = cast(%636, dtype="float64") /* ty=Tensor[(2, 650), float64] */;
  %638 = cast(%636, dtype="float32") /* ty=Tensor[(2, 650), float32] */;
  %639 = cos(%638) /* ty=Tensor[(2, 650), float32] */;
  %640 = cast(%639, dtype="bool") /* ty=Tensor[(2, 650), bool] */;
  %641 = cast(%var_7906, dtype="bool") /* ty=Tensor[(650), bool] */;
  %642 = cast(%639, dtype="float32") /* ty=Tensor[(2, 650), float32] */;
  %643 = sin(%642) /* ty=Tensor[(2, 650), float32] */;
  %644 = cast(%643, dtype="float64") /* ty=Tensor[(2, 650), float64] */;
  %645 = erf(%644) /* ty=Tensor[(2, 650), float64] */;
  %646 = cast(%645, dtype="float32") /* ty=Tensor[(2, 650), float32] */;
  %647 = cosh(%646) /* ty=Tensor[(2, 650), float32] */;
  %648 = cast(%647, dtype="float64") /* ty=Tensor[(2, 650), float64] */;
  %649 = %631.0;
  %650 = %632.0;
  %651 = sigmoid(%637) /* ty=Tensor[(2, 650), float64] */;
  %652 = less_equal(%640, %641) /* ty=Tensor[(2, 650), bool] */;
  %653 = @func_7645() /* ty=Tensor[(11, 11, 5), float64] */;
  %654 = log2(%648) /* ty=Tensor[(2, 650), float64] */;
  (%649, %650, %651, %652, %653, %654)
}

def @func_9328() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %655 = @func_6049() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %656 = @func_8395() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %657 = %655.0;
  %658 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  %659 = %656.0;
  (%657, %658, %659)
}

def @func_3459() -> (Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %660 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 5, 6), float64] */, dtype="float64") /* ty=Tensor[(9, 5, 6), float64] */;
  %661 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %662 = cosh(%660) /* ty=Tensor[(9, 5, 6), float64] */;
  %663 = @func_2498() /* ty=Tensor[(12, 140), float32] */;
  %664 = %661.0;
  (%662, %663, %664)
}

def @func_3615() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %665 = @func_3409() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %666 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %667 = %665.0;
  %668 = %666.0;
  (%667, %668)
}

def @func_10008() -> Tensor[(12, 140), float32] {
  %669 = @func_4855() /* ty=(Tensor[(12, 140), float32],) */;
  %669.0
}

def @func_11433() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %670 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %671 = @func_11157() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %672 = %670.0;
  %673 = @func_5807() /* ty=Tensor[(14, 12, 10), bool] */;
  %674 = %671.0;
  %675 = @func_8440() /* ty=Tensor[(12, 140), float32] */;
  (%672, %673, %674, %675)
}

def @func_4413() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float64]) {
  %676 = @func_3666() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %677 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
  %678 = cast(%677, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %679 = %676.1;
  %680 = sqrt(%678) /* ty=Tensor[(12, 140), float64] */;
  (%679, %680)
}

def @func_12511() -> Tensor[(11, 11, 5), float64] {
  %681 = @func_3888() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %681.1
}

def @func_2998(%var_2983: Tensor[(1, 12, 13), float64]) -> (Tensor[(1, 12, 13), float64], Tensor[(11, 11, 5), float64]) {
  %682 = cast(%var_2983, dtype="float64") /* ty=Tensor[(1, 12, 13), float64] */;
  %683 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %684 = asinh(%682) /* ty=Tensor[(1, 12, 13), float64] */;
  %685 = %683.0;
  (%684, %685)
}

def @func_11045() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float64]) {
  %686 = @func_3060() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %687 = @func_10233() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32]) */;
  %688 = %687.2;
  %689 = cast(%688, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %690 = %686.1;
  %691 = @func_10008() /* ty=Tensor[(12, 140), float32] */;
  %692 = rsqrt(%689) /* ty=Tensor[(12, 140), float64] */;
  (%690, %691, %692)
}

def @func_6889() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %693 = @func_6599() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %694 = @func_4680() /* ty=Tensor[(11, 11, 5), float64] */;
  %695 = cast(%694, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
  %696 = %693.0;
  %697 = erf(%695) /* ty=Tensor[(11, 11, 5), float64] */;
  (%696, %697)
}

def @func_9857() -> (Tensor[(1680), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) {
  %698 = @func_8167() /* ty=(Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64], Tensor[(1680), float64]) */;
  %699 = @func_4178() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) */;
  %700 = %698.2;
  %701 = @func_4638() /* ty=Tensor[(11, 11, 5), float64] */;
  %702 = %699.1;
  (%700, %701, %702)
}

def @func_3796() -> Tensor[(12, 140), float32] {
  %703 = @func_3541() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
  %703.0
}

def @func_2855(%var_2839: Tensor[(650), float32]) -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) {
  %704 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %705 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %706 = %704.2;
  %707 = cast(%706, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %708 = cast(%var_2839, dtype="float32") /* ty=Tensor[(650), float32] */;
  %709 = reshape(%707, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %710 = reshape(%708, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %711 = @func_2078(%709, %710) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(1680), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(14, 12, 10), float32]) */;
  %712 = %705.0;
  %713 = %711.4;
  (%706, %712, %713, %var_2839)
}

def @func_3727(%var_3714: Tensor[(14, 12, 10), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) {
  %714 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %715 = @func_3060() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %716 = %715.0;
  %717 = cast(%716, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
  %718 = @func_3332() /* ty=(Tensor[(14, 12, 10), float64],) */;
  %719 = %718.0;
  %720 = cast(%var_3714, dtype="bool") /* ty=Tensor[(14, 12, 10), bool] */;
  %721 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %722 = cast(%719, dtype="bool") /* ty=Tensor[(14, 12, 10), bool] */;
  %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %724 = %714.0;
  %725 = asinh(%717) /* ty=Tensor[(11, 11, 5), float64] */;
  %726 = greater_equal(%722, %723) /* ty=Tensor[(14, 12, 10), bool] */;
  (%724, %725, %726)
}

def @func_5721(%var_5698: Tensor[(1872), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(14, 12, 10), bool], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), int64]) {
  %727 = @func_2589() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %728 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %729 = cast(meta[relay.Constant][19] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %730 = reshape(%729, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %731 = @func_4803(%730) /* ty=(Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(156), float64]) */;
  %732 = %728.1;
  %733 = cast(%732, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %734 = reshape(%733, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %735 = @func_3424(%734) /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
  %736 = @func_4572() /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
  %737 = %736.0;
  %738 = cast(%737, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %739 = cast(%var_5698, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %740 = %735.0;
  %741 = cast(%740, dtype="bool") /* ty=Tensor[(14, 12, 10), bool] */;
  %742 = reshape(%738, newshape=[12, 140]) /* ty=Tensor[(12, 140), float64] */;
  %743 = reshape(%739, newshape=[12, 156]) /* ty=Tensor[(12, 156), float64] */;
  %744 = reshape(%741, newshape=[12, 140]) /* ty=Tensor[(12, 140), bool] */;
  %745 = @func_3159(%742, %743, %744) /* ty=(Tensor[(12, 140), int32], Tensor[(1, 12, 13), float64], Tensor[(12, 156), uint16], Tensor[(12, 140), uint8]) */;
  %746 = @func_3478() /* ty=Tensor[(12, 140), float32] */;
  %747 = cast(%746, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %748 = log10(%747) /* ty=Tensor[(12, 140), float64] */;
  %749 = cast(%737, dtype="int64") /* ty=Tensor[(14, 12, 10), int64] */;
  %750 = shape_of(%748, dtype="int32") /* ty=Tensor[(2), int32] */;
  %751 = cast(%748, dtype="int64") /* ty=Tensor[(12, 140), int64] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %753 = %727.0;
  %754 = %731.3;
  %755 = %745.1;
  %756 = bitwise_and(%751, %752) /* ty=Tensor[(12, 140), int64] */;
  (%753, %732, %754, meta[relay.Constant][19] /* ty=Tensor[(156), float64] */, %740, %755, %var_5698, %756)
}

def @func_12717() -> Tensor[(11, 11, 5), float64] {
  %757 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %757.0
}

def @func_6714() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) {
  %758 = @func_3522() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) */;
  %759 = @func_3478() /* ty=Tensor[(12, 140), float32] */;
  %760 = %758.1;
  (%759, %760)
}

def @func_10280() -> Tensor[(12, 140), float32] {
  %761 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %761.0
}

def @func_10388(%var_10382: Tensor[(605), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(605), float64], Tensor[(12, 140), float32]) {
  %762 = cast(%var_10382, dtype="float64") /* ty=Tensor[(605), float64] */;
  %763 = reshape(%762, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), float64] */;
  %764 = @func_5134(%763) /* ty=(Tensor[(11, 11, 5), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %765 = @func_8440() /* ty=Tensor[(12, 140), float32] */;
  %766 = cast(%765, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %767 = %764.2;
  %768 = cos(%766) /* ty=Tensor[(12, 140), float32] */;
  (%767, %var_10382, %768)
}

def @func_11259() -> (Tensor[(11, 11, 5), float64], Tensor[(14, 7, 4), uint64], Tensor[(392), uint64], Tensor[(12, 140), float32]) {
  %769 = cast(meta[relay.Constant][20] /* ty=Tensor[(392), uint64] */, dtype="uint64") /* ty=Tensor[(392), uint64] */;
  %770 = cast(meta[relay.Constant][20] /* ty=Tensor[(392), uint64] */, dtype="uint64") /* ty=Tensor[(392), uint64] */;
  %771 = reshape(%769, newshape=[14, 7, 4]) /* ty=Tensor[(14, 7, 4), uint64] */;
  %772 = reshape(%770, newshape=[14, 7, 4]) /* ty=Tensor[(14, 7, 4), uint64] */;
  %773 = @func_8986(%771, %772) /* ty=(Tensor[(14, 7, 4), uint64],) */;
  %774 = @func_8440() /* ty=Tensor[(12, 140), float32] */;
  %775 = cast(%774, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %776 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  %777 = %773.0;
  %778 = sin(%775) /* ty=Tensor[(12, 140), float32] */;
  (%776, %777, meta[relay.Constant][20] /* ty=Tensor[(392), uint64] */, %778)
}

def @func_9371() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(15, 12, 12), float32]) {
  %779 = @func_9026() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %780 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %781 = @func_6655() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %782 = @func_6519() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
  %783 = %779.0;
  %784 = %780.0;
  %785 = %781.0;
  %786 = %782.0;
  (%783, %784, %785, %786)
}

def @func_5134(%var_5083: Tensor[(11, 11, 5), float64]) -> (Tensor[(11, 11, 5), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %787 = @func_2542() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %788 = %787.0;
  %789 = cast(%var_5083, dtype="float32") /* ty=Tensor[(11, 11, 5), float32] */;
  %790 = shape_of(%788, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(%788, dtype="float32") /* ty=Tensor[(11, 11, 5), float32] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %793 = @func_4441() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %794 = divide(%791, %792) /* ty=Tensor[(11, 11, 5), float32] */;
  %795 = %793.0;
  %796 = @func_2941() /* ty=Tensor[(11, 11, 5), float64] */;
  (%794, %795, %796)
}

def @func_12933(%var_12902: int16, %var_12903: Tensor[(8, 1, 2), int16]) -> (Tensor[(8, 1, 2), bool], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %797 = cast(%var_12902, dtype="bool") /* ty=bool */;
  %798 = cast(%var_12903, dtype="bool") /* ty=Tensor[(8, 1, 2), bool] */;
  %799 = @func_9500() /* ty=(Tensor[(12, 140), float32],) */;
  %800 = greater_equal(%797, %798) /* ty=Tensor[(8, 1, 2), bool] */;
  %801 = %799.0;
  %802 = @func_8562() /* ty=Tensor[(12, 140), float32] */;
  (%800, %801, %802)
}

def @func_4479(%var_4472: Tensor[(1680), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(1680), float32]) {
  %803 = cast(%var_4472, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %804 = reshape(%803, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %805 = @func_4118(%804) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool]) */;
  %806 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  %807 = %805.4;
  (%806, %807, %var_4472)
}

def @func_13426() -> (Tensor[(12, 140), float32],) {
  %808 = @func_6519() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
  %809 = %808.1;
  (%809,)
}

def @func_13469() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %810 = @func_3615() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %811 = @func_10638() /* ty=(Tensor[(12, 140), float32],) */;
  %812 = %810.1;
  %813 = %811.0;
  (%812, %813)
}

def @func_8986(%var_8947: Tensor[(14, 7, 4), uint64], %var_8948: Tensor[(14, 7, 4), uint64]) -> (Tensor[(14, 7, 4), uint64],) {
  %814 = cast(%var_8948, dtype="uint64") /* ty=Tensor[(14, 7, 4), uint64] */;
  %815 = shape_of(%var_8947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %816 = cast(%var_8947, dtype="uint64") /* ty=Tensor[(14, 7, 4), uint64] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %818 = maximum(%816, %817) /* ty=Tensor[(14, 7, 4), uint64] */;
  (%818,)
}

def @func_5301() -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64]) {
  %819 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %820 = @func_4572() /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
  %821 = %820.0;
  %822 = cast(%821, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %823 = log2(%822) /* ty=Tensor[(14, 12, 10), float32] */;
  %824 = cast(%821, dtype="bool") /* ty=Tensor[(14, 12, 10), bool] */;
  %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%823, dtype="bool") /* ty=Tensor[(14, 12, 10), bool] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %828 = not_equal(%826, %827) /* ty=Tensor[(14, 12, 10), bool] */;
  %829 = cast(%828, dtype="int64") /* ty=Tensor[(14, 12, 10), int64] */;
  %830 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(%823, dtype="int64") /* ty=Tensor[(14, 12, 10), int64] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %833 = %819.0;
  %834 = add(%831, %832) /* ty=Tensor[(14, 12, 10), int64] */;
  (%833, %834)
}

def @func_7077() -> (Tensor[(11, 11, 5), float64],) {
  %835 = @func_6889() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %836 = %835.1;
  (%836,)
}

def @func_14535() -> Tensor[(12, 140), float32] {
  @func_6824() /* ty=Tensor[(12, 140), float32] */
}

def @func_3585() -> (Tensor[(12, 140), float32],) {
  %837 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %838 = %837.0;
  (%838,)
}

def @func_5758(%var_5745: Tensor[(12, 140), float32]) -> Tensor[(12, 140), float32] {
  %839 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %840 = %839.2;
  %841 = cast(%var_5745, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %842 = shape_of(%840, dtype="int32") /* ty=Tensor[(2), int32] */;
  %843 = cast(%840, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  add(%843, %844) /* ty=Tensor[(12, 140), float32] */
}

def @func_9473() -> Tensor[(14, 12, 10), bool] {
  %845 = @func_4178() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) */;
  %845.1
}

def @func_10432(%var_10405: Tensor[(7, 16, 14), float32]) -> (Tensor[(7, 16, 14), float64],) {
  %846 = cast(%var_10405, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
  %847 = sqrt(%846) /* ty=Tensor[(7, 16, 14), float32] */;
  %848 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 16, 14), float32] */, dtype="float64") /* ty=Tensor[(7, 16, 14), float64] */;
  %849 = shape_of(%847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(%847, dtype="float64") /* ty=Tensor[(7, 16, 14), float64] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %852 = power(%850, %851) /* ty=Tensor[(7, 16, 14), float64] */;
  (%852,)
}

def @func_6096() -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(1, 13, 12), uint32], Tensor[(156), uint32]) {
  %853 = @func_6061() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) */;
  %854 = @func_5455() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %855 = cast(meta[relay.Constant][22] /* ty=Tensor[(156), uint32] */, dtype="uint32") /* ty=Tensor[(156), uint32] */;
  %856 = reshape(%855, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), uint32] */;
  %857 = @func_5777(%856) /* ty=(Tensor[(1, 13, 12), uint32],) */;
  %858 = %853.0;
  %859 = %854.0;
  %860 = %857.0;
  (%858, %859, %860, meta[relay.Constant][22] /* ty=Tensor[(156), uint32] */)
}

def @func_9463(%var_9450: Tensor[(156), float64]) -> (float32, Tensor[(156), float64], Tensor[(156), float64]) {
  %861 = @func_8891() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 1, 12), float32], float32) */;
  %862 = cast(%var_9450, dtype="float64") /* ty=Tensor[(156), float64] */;
  %863 = reshape(%862, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %864 = @func_4803(%863) /* ty=(Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(156), float64]) */;
  %865 = %861.2;
  %866 = %864.3;
  (%865, %866, %var_9450)
}

def @func_13538() -> (Tensor[(14, 12, 10), float64],) {
  %867 = @func_3332() /* ty=(Tensor[(14, 12, 10), float64],) */;
  %868 = %867.0;
  (%868,)
}

def @func_4680() -> Tensor[(11, 11, 5), float64] {
  @func_3361() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_8927() -> (Tensor[(11, 11, 5), float64],) {
  %869 = @func_4734() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %870 = %869.2;
  (%870,)
}

def @func_8919() -> (Tensor[(11, 11, 5), float64],) {
  %871 = @func_2941() /* ty=Tensor[(11, 11, 5), float64] */;
  (%871,)
}

def @func_12564() -> Tensor[(11, 11, 5), float64] {
  %872 = @func_9857() /* ty=(Tensor[(1680), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) */;
  %872.1
}

def @func_5807() -> Tensor[(14, 12, 10), bool] {
  %873 = @func_4572() /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
  %873.0
}

def @func_14059(%var_14054: float32) -> (Tensor[(14, 12, 10), float64], Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64], float32) {
  %874 = @func_3332() /* ty=(Tensor[(14, 12, 10), float64],) */;
  %875 = @func_4178() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) */;
  %876 = cast(%var_14054, dtype="float32") /* ty=float32 */;
  %877 = reshape(%876, newshape=[]) /* ty=float32 */;
  %878 = @func_3970(%877) /* ty=(Tensor[(14, 1, 12), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %879 = %874.0;
  %880 = %875.1;
  %881 = %878.1;
  (%879, %880, %881, %var_14054)
}

def @func_14542() -> (Tensor[(11, 11, 5), float64],) {
  %882 = @func_3888() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %883 = %882.0;
  (%883,)
}

def @func_5825() -> (Tensor[(12, 140), float64], Tensor[(12, 140), float32]) {
  %884 = @func_5140() /* ty=(Tensor[(12, 140), float64],) */;
  %885 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %886 = %884.0;
  %887 = %885.1;
  (%886, %887)
}

def @func_14487() -> (Tensor[(11, 11, 5), float64],) {
  %888 = @func_4680() /* ty=Tensor[(11, 11, 5), float64] */;
  (%888,)
}

def @func_2498() -> Tensor[(12, 140), float32] {
  %889 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %890 = %889.1;
  %891 = cast(%890, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  asinh(%891) /* ty=Tensor[(12, 140), float32] */
}

def @func_11071() -> Tensor[(12, 140), float32] {
  %892 = @func_4247() /* ty=(Tensor[(12, 140), float32],) */;
  %892.0
}

def @func_8603() -> Tensor[(12, 140), float32] {
  %893 = @func_3666() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %893.1
}

def @func_12413(%var_12406: Tensor[(650), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(650), float32]) {
  %894 = @func_4572() /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
  %895 = cast(%var_12406, dtype="float32") /* ty=Tensor[(650), float32] */;
  %896 = reshape(%895, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %897 = @func_5369(%896) /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(11, 11, 5), float64]) */;
  %898 = %894.1;
  %899 = %897.3;
  (%898, %899, %var_12406)
}

def @func_10798() -> (Tensor[(11, 11, 5), float64],) {
  %900 = @func_10468() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %901 = %900.0;
  (%901,)
}

def @func_6990() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %902 = @func_6714() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) */;
  %903 = @func_4158() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
  %904 = %902.0;
  %905 = %903.0;
  (%904, %905)
}

def @func_12986(%var_12967: Tensor[(1872), float64]) -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), float32]) {
  %906 = @func_12670() /* ty=(Tensor[(14, 12, 10), float64], Tensor[(13, 10, 5), float32], Tensor[(12, 140), float32]) */;
  %907 = @func_8589() /* ty=(Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64]) */;
  %908 = @func_9091() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %909 = %906.2;
  %910 = cast(%909, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %911 = cast(%var_12967, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %912 = cast(%909, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %913 = reshape(%910, newshape=[12, 140]) /* ty=Tensor[(12, 140), float64] */;
  %914 = reshape(%911, newshape=[12, 156]) /* ty=Tensor[(12, 156), float64] */;
  %915 = reshape(%912, newshape=[12, 140]) /* ty=Tensor[(12, 140), bool] */;
  %916 = @func_3159(%913, %914, %915) /* ty=(Tensor[(12, 140), int32], Tensor[(1, 12, 13), float64], Tensor[(12, 156), uint16], Tensor[(12, 140), uint8]) */;
  %917 = %907.1;
  %918 = %908.0;
  %919 = %916.1;
  %920 = @func_3478() /* ty=Tensor[(12, 140), float32] */;
  (%909, %917, %918, %919, %var_12967, %920)
}

def @func_5985(%var_5977: Tensor[(12, 140), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float64]) {
  %921 = @func_3478() /* ty=Tensor[(12, 140), float32] */;
  %922 = cast(%var_5977, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %923 = shape_of(%921, dtype="int32") /* ty=Tensor[(2), int32] */;
  %924 = cast(%921, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %926 = @func_3361() /* ty=Tensor[(11, 11, 5), float64] */;
  %927 = floor_divide(%924, %925) /* ty=Tensor[(12, 140), float64] */;
  (%926, %927)
}

def @func_12695() -> (Tensor[(14, 12, 10), float32],) {
  %928 = @func_7122() /* ty=(Tensor[(14, 12, 10), int64], Tensor[(14, 12, 10), float32], Tensor[(13, 10, 5), float32], Tensor[(1, 650), float32], Tensor[(14, 1, 12), float32], float32) */;
  %929 = %928.1;
  (%929,)
}

def @func_9420(%var_9413: Tensor[(15, 12, 12), float32]) -> (Tensor[(15, 12, 12), uint8],) {
  %930 = @func_9371() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(15, 12, 12), float32]) */;
  %931 = %930.3;
  %932 = cast(%var_9413, dtype="uint8") /* ty=Tensor[(15, 12, 12), uint8] */;
  %933 = shape_of(%931, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%931, dtype="uint8") /* ty=Tensor[(15, 12, 12), uint8] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %936 = add(%934, %935) /* ty=Tensor[(15, 12, 12), uint8] */;
  (%936,)
}

def @func_3764() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) {
  %937 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %938 = %937.0;
  %939 = cast(%938, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %940 = cast(%938, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %941 = reshape(%939, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %942 = reshape(%940, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %943 = @func_1107(%941, %942) /* ty=(Tensor[(14, 12, 10), float32], Tensor[(14, 12, 10), float64]) */;
  %944 = %943.1;
  (%938, %944)
}

def @func_3159(%var_3117: Tensor[(12, 140), float64], %var_3145: Tensor[(12, 156), float64], %var_3151: Tensor[(12, 140), bool]) -> (Tensor[(12, 140), int32], Tensor[(1, 12, 13), float64], Tensor[(12, 156), uint16], Tensor[(12, 140), uint8]) {
  %945 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %946 = %945.2;
  %947 = cast(%946, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %948 = acos(%947) /* ty=Tensor[(12, 140), float64] */;
  %949 = cast(%var_3117, dtype="int32") /* ty=Tensor[(12, 140), int32] */;
  %950 = shape_of(%948, dtype="int32") /* ty=Tensor[(2), int32] */;
  %951 = cast(%948, dtype="int32") /* ty=Tensor[(12, 140), int32] */;
  %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %953 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 156), float64] */, dtype="float64") /* ty=Tensor[(1, 156), float64] */;
  %954 = reshape(%953, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
  %955 = @func_2998(%954) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(11, 11, 5), float64]) */;
  %956 = %955.0;
  %957 = cast(%956, dtype="float64") /* ty=Tensor[(1, 12, 13), float64] */;
  %958 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 156), float64] */, dtype="uint16") /* ty=Tensor[(1, 156), uint16] */;
  %959 = cast(%var_3145, dtype="uint16") /* ty=Tensor[(12, 156), uint16] */;
  %960 = cast(%var_3117, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %961 = shape_of(%948, dtype="int32") /* ty=Tensor[(2), int32] */;
  %962 = cast(%948, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %964 = greater(%962, %963) /* ty=Tensor[(12, 140), bool] */;
  %965 = cast(%var_3151, dtype="uint8") /* ty=Tensor[(12, 140), uint8] */;
  %966 = shape_of(%964, dtype="int32") /* ty=Tensor[(2), int32] */;
  %967 = cast(%964, dtype="uint8") /* ty=Tensor[(12, 140), uint8] */;
  %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %969 = maximum(%951, %952) /* ty=Tensor[(12, 140), int32] */;
  %970 = log2(%957) /* ty=Tensor[(1, 12, 13), float64] */;
  %971 = left_shift(%958, %959) /* ty=Tensor[(12, 156), uint16] */;
  %972 = bitwise_or(%967, %968) /* ty=Tensor[(12, 140), uint8] */;
  (%969, %970, %971, %972)
}

def @func_7732(%var_7708: Tensor[(13, 10, 5), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(1680), float32], Tensor[(13, 10, 5), uint32]) {
  %973 = @func_2542() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %974 = cast(meta[relay.Constant][24] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %975 = reshape(%974, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %976 = @func_6783(%975) /* ty=(Tensor[(156), uint32], Tensor[(12, 140), float32]) */;
  %977 = %976.1;
  %978 = cast(%977, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %979 = reshape(%978, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %980 = @func_2415(%979) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32]) */;
  %981 = %980.4;
  %982 = cast(%var_7708, dtype="uint32") /* ty=Tensor[(13, 10, 5), uint32] */;
  %983 = shape_of(%981, dtype="int32") /* ty=Tensor[(3), int32] */;
  %984 = cast(%981, dtype="uint32") /* ty=Tensor[(13, 10, 5), uint32] */;
  %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %986 = %973.0;
  %987 = right_shift(%984, %985) /* ty=Tensor[(13, 10, 5), uint32] */;
  (%986, %977, meta[relay.Constant][24] /* ty=Tensor[(1680), float32] */, %987)
}

def @func_12838() -> (Tensor[(11, 11, 5), float64],) {
  %988 = @func_8076() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64]) */;
  %989 = %988.2;
  (%989,)
}

def @func_3666() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %990 = @func_3541() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
  %991 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %992 = %990.0;
  %993 = %991.1;
  (%992, %993)
}

def @func_7214() -> (Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 1, 12), float32], float32) {
  %994 = @func_5825() /* ty=(Tensor[(12, 140), float64], Tensor[(12, 140), float32]) */;
  %995 = %994.1;
  %996 = cast(%995, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %997 = @func_3615() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %998 = cast(-6.65456f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %999 = reshape(%998, newshape=[]) /* ty=float32 */;
  %1000 = @func_3970(%999) /* ty=(Tensor[(14, 1, 12), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %1001 = atan(%996) /* ty=Tensor[(12, 140), float64] */;
  %1002 = %997.1;
  %1003 = %1000.0;
  (%1001, %1002, %1003, -6.65456f /* ty=float32 */)
}

def @func_5777(%var_5773: Tensor[(1, 13, 12), uint32]) -> (Tensor[(1, 13, 12), uint32],) {
  %1004 = cast(meta[relay.Constant][25] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1005 = cast(%var_5773, dtype="uint32") /* ty=Tensor[(1, 13, 12), uint32] */;
  %1006 = left_shift(%1004, %1005) /* ty=Tensor[(1, 13, 12), uint32] */;
  (%1006,)
}

def @func_480(%var_474: Tensor[(13, 10, 5), float32]) -> (Tensor[(13, 10, 5), float32],) {
  %1007 = cast(%var_474, dtype="float32") /* ty=Tensor[(13, 10, 5), float32] */;
  %1008 = cosh(%1007) /* ty=Tensor[(13, 10, 5), float32] */;
  (%1008,)
}

def @func_11485() -> (Tensor[(11, 11, 5), float64],) {
  %1009 = @func_5455() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1010 = %1009.0;
  (%1010,)
}

def @func_9525() -> Tensor[(9, 5, 6), float64] {
  %1011 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %1011.0
}

def @func_5329() -> Tensor[(11, 11, 5), float64] {
  @func_5248() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_14649() -> (Tensor[(14, 1, 12), float32],) {
  %1012 = @func_7214() /* ty=(Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 1, 12), float32], float32) */;
  %1013 = %1012.2;
  (%1013,)
}

def @func_4519(%var_4514: Tensor[(12, 140), float32]) -> Tensor[(12, 140), bool] {
  %1014 = @func_2498() /* ty=Tensor[(12, 140), float32] */;
  %1015 = cast(%var_4514, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %1016 = shape_of(%1014, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1017 = cast(%1014, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  logical_or(%1017, %1018) /* ty=Tensor[(12, 140), bool] */
}

def @func_6971() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %1019 = @func_6889() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %1020 = @func_4572() /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
  %1021 = @func_4692() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
  %1022 = %1019.1;
  %1023 = %1020.1;
  %1024 = %1021.1;
  (%1022, %1023, %1024)
}

def @func_9568(%var_9561: Tensor[(5, 11, 3), float32], %var_9562: Tensor[(5, 11, 3), float32]) -> (Tensor[(5, 11, 3), float32],) {
  %1025 = cast(%var_9562, dtype="float32") /* ty=Tensor[(5, 11, 3), float32] */;
  %1026 = shape_of(%var_9561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1027 = cast(%var_9561, dtype="float32") /* ty=Tensor[(5, 11, 3), float32] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1029 = divide(%1027, %1028) /* ty=Tensor[(5, 11, 3), float32] */;
  (%1029,)
}

def @func_12079() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %1030 = @func_9500() /* ty=(Tensor[(12, 140), float32],) */;
  %1031 = @func_10250() /* ty=Tensor[(11, 11, 5), float64] */;
  %1032 = %1030.0;
  (%1031, %1032)
}

def @func_7645() -> Tensor[(11, 11, 5), float64] {
  %1033 = @func_2589() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1033.0
}

def @func_2322() -> (Tensor[(11, 11, 5), float64],) {
  %1034 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %1035 = %1034.0;
  (%1035,)
}

def @func_4247() -> (Tensor[(12, 140), float32],) {
  %1036 = @func_4178() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) */;
  %1037 = %1036.0;
  (%1037,)
}

def @func_4118(%var_4041: Tensor[(12, 140), float32]) -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool]) {
  %1038 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %1039 = %1038.2;
  %1040 = cast(%var_4041, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %1041 = shape_of(%1039, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1042 = cast(%1039, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1044 = equal(%1042, %1043) /* ty=Tensor[(12, 140), bool] */;
  %1045 = cast(%var_4041, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %1046 = shape_of(%1044, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1047 = cast(%1044, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1049 = @func_2681() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %1050 = cast(meta[relay.Constant][26] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
  %1051 = reshape(%1050, newshape=[1, 650]) /* ty=Tensor[(1, 650), float32] */;
  %1052 = @func_3313(%1051) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(2, 650), int16], Tensor[(1, 650), float64]) */;
  %1053 = %1052.3;
  %1054 = cast(meta[relay.Constant][26] /* ty=Tensor[(650), float32] */, dtype="bool") /* ty=Tensor[(650), bool] */;
  %1055 = shape_of(%1053, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1056 = cast(%1053, dtype="bool") /* ty=Tensor[(1, 650), bool] */;
  %1057 = dyn.reshape(%1054, %1055, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1058 = cast(%1053, dtype="float32") /* ty=Tensor[(1, 650), float32] */;
  %1059 = cos(%1058) /* ty=Tensor[(1, 650), float32] */;
  %1060 = cast(meta[relay.Constant][26] /* ty=Tensor[(650), float32] */, dtype="uint32") /* ty=Tensor[(650), uint32] */;
  %1061 = shape_of(%1059, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1062 = cast(%1059, dtype="uint32") /* ty=Tensor[(1, 650), uint32] */;
  %1063 = dyn.reshape(%1060, %1061, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1064 = subtract(%1062, %1063) /* ty=Tensor[(?, 650), uint32] */;
  %1065 = cast(%1053, dtype="bool") /* ty=Tensor[(1, 650), bool] */;
  %1066 = shape_of(%1064, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1067 = cast(%1064, dtype="bool") /* ty=Tensor[(?, 650), bool] */;
  %1068 = dyn.reshape(%1065, %1066, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1069 = multiply(%1047, %1048) /* ty=Tensor[(12, 140), float32] */;
  %1070 = %1049.0;
  %1071 = greater_equal(%1056, %1057) /* ty=Tensor[(?, 650), bool] */;
  %1072 = @func_2498() /* ty=Tensor[(12, 140), float32] */;
  %1073 = @func_2941() /* ty=Tensor[(11, 11, 5), float64] */;
  %1074 = less(%1067, %1068) /* ty=Tensor[(?, 650), bool] */;
  (%1069, %1070, %1071, %1072, %1073, %1074)
}

def @func_8858() -> (Tensor[(11, 11, 5), float64],) {
  %1075 = @func_4441() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1076 = %1075.0;
  (%1076,)
}

def @func_8840(%var_8817: Tensor[(1680), float32], %var_8818: Tensor[(65, 10), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(1680), float32], Tensor[(65, 10), float32], Tensor[(11, 11, 5), float64]) {
  %1077 = @func_8352() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %1078 = cast(%var_8817, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %1079 = cast(%var_8818, dtype="float32") /* ty=Tensor[(65, 10), float32] */;
  %1080 = reshape(%1078, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %1081 = reshape(%1079, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %1082 = @func_2078(%1080, %1081) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(1680), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(14, 12, 10), float32]) */;
  %1083 = %1077.1;
  %1084 = %1082.5;
  %1085 = @func_4680() /* ty=Tensor[(11, 11, 5), float64] */;
  (%1083, %1084, %var_8817, %var_8818, %1085)
}

def @func_8262() -> (Tensor[(11, 11, 5), float64],) {
  %1086 = @func_4441() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1087 = %1086.0;
  (%1087,)
}

def @func_5007(%var_4918: Tensor[(650), float32], %var_4941: Tensor[(12, 140), float32]) -> (Tensor[(325, 2), float32], Tensor[(650), float32], Tensor[(12, 140), uint8], Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(12, 140), uint32]) {
  %1088 = cast(%var_4918, dtype="float32") /* ty=Tensor[(650), float32] */;
  %1089 = reshape(%1088, newshape=[325, 2]) /* ty=Tensor[(325, 2), float32] */;
  %1090 = @func_2925(%1089) /* ty=(Tensor[(12, 140), bool], Tensor[(11, 11, 5), float64], Tensor[(325, 2), float32], Tensor[(11, 11, 5), float64]) */;
  %1091 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %1092 = %1091.0;
  %1093 = cast(%1092, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %1094 = erf(%1093) /* ty=Tensor[(12, 140), float32] */;
  %1095 = cast(%var_4941, dtype="uint32") /* ty=Tensor[(12, 140), uint32] */;
  %1096 = shape_of(%1094, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1097 = cast(%1094, dtype="uint32") /* ty=Tensor[(12, 140), uint32] */;
  %1098 = dyn.reshape(%1095, %1096, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1099 = minimum(%1097, %1098) /* ty=Tensor[(12, 140), uint32] */;
  %1100 = cast(%var_4941, dtype="uint8") /* ty=Tensor[(12, 140), uint8] */;
  %1101 = shape_of(%1099, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1102 = cast(%1099, dtype="uint8") /* ty=Tensor[(12, 140), uint8] */;
  %1103 = dyn.reshape(%1100, %1101, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1104 = cast(%1092, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %1105 = reshape(%1104, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %1106 = @func_4479(%1105) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(1680), float32]) */;
  %1107 = cast(%var_4918, dtype="float32") /* ty=Tensor[(650), float32] */;
  %1108 = reshape(%1107, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %1109 = @func_2855(%1108) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) */;
  %1110 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %1111 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %1112 = cast(%1094, dtype="uint32") /* ty=Tensor[(12, 140), uint32] */;
  %1113 = shape_of(%1092, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1114 = cast(%1092, dtype="uint32") /* ty=Tensor[(12, 140), uint32] */;
  %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1116 = %1090.2;
  %1117 = logical_xor(%1102, %1103) /* ty=Tensor[(12, 140), uint8] */;
  %1118 = %1106.1;
  %1119 = %1109.3;
  %1120 = %1110.0;
  %1121 = %1111.0;
  %1122 = right_shift(%1114, %1115) /* ty=Tensor[(12, 140), uint32] */;
  (%1116, %var_4918, %1117, %1118, %1119, %1120, %1121, %1122)
}

def @func_2681() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %1123 = @func_2589() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1124 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %1125 = %1123.0;
  %1126 = %1124.1;
  (%1125, %1126)
}

def @func_3970(%var_3954: float32) -> (Tensor[(14, 1, 12), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %1127 = cast(%var_3954, dtype="float32") /* ty=float32 */;
  %1128 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 1, 12), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 12), float32] */;
  %1129 = @func_3060() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %1130 = mod(%1127, %1128) /* ty=Tensor[(14, 1, 12), float32] */;
  %1131 = %1129.0;
  %1132 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  (%1130, %1131, %1132)
}

def @func_13249() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(1, 13, 12), uint32], Tensor[(78, 2), uint32]) {
  %1133 = @func_8693() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
  %1134 = cast(meta[relay.Constant][28] /* ty=Tensor[(78, 2), uint32] */, dtype="uint32") /* ty=Tensor[(78, 2), uint32] */;
  %1135 = reshape(%1134, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), uint32] */;
  %1136 = @func_5777(%1135) /* ty=(Tensor[(1, 13, 12), uint32],) */;
  %1137 = %1133.5;
  %1138 = @func_10280() /* ty=Tensor[(12, 140), float32] */;
  %1139 = %1136.0;
  (%1137, %1138, %1139, meta[relay.Constant][28] /* ty=Tensor[(78, 2), uint32] */)
}

def @func_4295() -> Tensor[(12, 140), float32] {
  %1140 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %1140.0
}

def @func_6519() -> (Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) {
  %1141 = @func_4692() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
  %1142 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %1143 = %1141.0;
  %1144 = %1142.0;
  (%1143, %1144)
}

def @func_12780() -> (Tensor[(14, 12, 10), float32],) {
  %1145 = @func_11661() /* ty=(Tensor[(14, 12, 10), float32],) */;
  %1146 = %1145.0;
  (%1146,)
}

def @func_2226() -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) {
  %1147 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1148 = %1147.0;
  %1149 = cast(%1148, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
  %1150 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 140), float32] */, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %1151 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 140), float32] */, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %1152 = reshape(%1150, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %1153 = reshape(%1151, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %1154 = @func_1107(%1152, %1153) /* ty=(Tensor[(14, 12, 10), float32], Tensor[(14, 12, 10), float64]) */;
  %1155 = sigmoid(%1149) /* ty=Tensor[(11, 11, 5), float64] */;
  %1156 = %1154.1;
  (%1155, %1156, meta[relay.Constant][29] /* ty=Tensor[(12, 140), float32] */)
}

def @func_4441() -> (Tensor[(11, 11, 5), float64],) {
  %1157 = @func_3409() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1158 = %1157.0;
  (%1158,)
}

def @func_13051(%var_13012: Tensor[(1872), float64]) -> (Tensor[(14, 12, 10), bool], Tensor[(1872), float64], Tensor[(12, 140), bool]) {
  %1159 = cast(%var_13012, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %1160 = reshape(%1159, newshape=[1872]) /* ty=Tensor[(1872), float64] */;
  %1161 = @func_5721(%1160) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(14, 12, 10), bool], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), int64]) */;
  %1162 = @func_11071() /* ty=Tensor[(12, 140), float32] */;
  %1163 = cast(%1162, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %1164 = acosh(%1163) /* ty=Tensor[(12, 140), float32] */;
  %1165 = cast(%1164, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %1166 = shape_of(%1162, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1167 = cast(%1162, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %1168 = dyn.reshape(%1165, %1166, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1169 = %1161.4;
  %1170 = logical_and(%1167, %1168) /* ty=Tensor[(12, 140), bool] */;
  (%1169, %var_13012, %1170)
}

def @func_3832() -> Tensor[(11, 11, 5), float64] {
  %1171 = @func_3409() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1171.0
}

def @func_2925(%var_2910: Tensor[(325, 2), float32]) -> (Tensor[(12, 140), bool], Tensor[(11, 11, 5), float64], Tensor[(325, 2), float32], Tensor[(11, 11, 5), float64]) {
  %1172 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %1173 = %1172.0;
  %1174 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %1175 = %1174.0;
  %1176 = cast(%1175, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %1177 = shape_of(%1173, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1178 = cast(%1173, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %1179 = dyn.reshape(%1176, %1177, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1180 = less_equal(%1178, %1179) /* ty=Tensor[(12, 140), bool] */;
  %1181 = cast(%1180, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %1182 = cast(%var_2910, dtype="float32") /* ty=Tensor[(325, 2), float32] */;
  %1183 = reshape(%1181, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %1184 = reshape(%1182, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %1185 = @func_2078(%1183, %1184) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(1680), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(14, 12, 10), float32]) */;
  %1186 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1187 = %1185.3;
  %1188 = %1186.0;
  (%1180, %1187, %var_2910, %1188)
}

def @func_9638() -> (Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(420, 4), float32]) {
  %1189 = cast(meta[relay.Constant][30] /* ty=Tensor[(420, 4), float32] */, dtype="float32") /* ty=Tensor[(420, 4), float32] */;
  %1190 = reshape(%1189, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %1191 = @func_2415(%1190) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32]) */;
  %1192 = @func_3361() /* ty=Tensor[(11, 11, 5), float64] */;
  %1193 = %1191.1;
  (%1192, %1193, meta[relay.Constant][30] /* ty=Tensor[(420, 4), float32] */)
}

def @func_5248() -> Tensor[(11, 11, 5), float64] {
  %1194 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1194.0
}

def @func_11157() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %1195 = @func_4734() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %1196 = %1195.2;
  %1197 = @func_3361() /* ty=Tensor[(11, 11, 5), float64] */;
  %1198 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
  (%1196, %1197, %1198)
}

def @func_11854() -> (Tensor[(12, 140), float32],) {
  %1199 = @func_4855() /* ty=(Tensor[(12, 140), float32],) */;
  %1200 = %1199.0;
  (%1200,)
}

def @func_4572() -> (Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) {
  %1201 = @func_4178() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) */;
  %1202 = %1201.1;
  %1203 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  (%1202, %1203)
}

def @func_8589() -> (Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64]) {
  %1204 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %1205 = %1204.0;
  %1206 = cast(%1205, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %1207 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1208 = log(%1206) /* ty=Tensor[(12, 140), float64] */;
  %1209 = %1207.0;
  (%1208, %1209)
}

def @func_7596(%var_7594: Tensor[(1680), float64]) -> (Tensor[(15, 12, 12), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64]) {
  %1210 = @func_6519() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
  %1211 = cast(meta[relay.Constant][31] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %1212 = reshape(%1211, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %1213 = @func_4803(%1212) /* ty=(Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(156), float64]) */;
  %1214 = cast(%var_7594, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %1215 = reshape(%1214, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %1216 = @func_2474(%1215) /* ty=(Tensor[(14, 12, 10), float32],) */;
  %1217 = %1210.0;
  %1218 = %1213.3;
  %1219 = @func_6008() /* ty=Tensor[(11, 11, 5), float64] */;
  %1220 = %1216.0;
  (%1217, %1218, meta[relay.Constant][31] /* ty=Tensor[(156), float64] */, %1219, %1220, %var_7594)
}

def @func_9921() -> Tensor[(11, 11, 5), float64] {
  @func_4680() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_11366() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], float32, Tensor[(11, 11, 5), float64]) {
  %1221 = @func_2681() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %1222 = @func_7214() /* ty=(Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 1, 12), float32], float32) */;
  %1223 = @func_9091() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1224 = @func_4638() /* ty=Tensor[(11, 11, 5), float64] */;
  %1225 = %1221.1;
  %1226 = %1222.3;
  %1227 = %1223.0;
  (%1224, %1225, %1226, %1227)
}

def @func_12200() -> Tensor[(12, 140), float32] {
  %1228 = @func_8076() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64]) */;
  %1228.0
}

def @func_13906() -> (Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) {
  %1229 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %1230 = %1229.1;
  %1231 = cast(%1230, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %1232 = reshape(%1231, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %1233 = @func_5758(%1232) /* ty=Tensor[(12, 140), float32] */;
  (%1230, %1233)
}

def @func_7650() -> Tensor[(14, 12, 10), int64] {
  %1234 = @func_5301() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64]) */;
  %1234.1
}

def @func_9804() -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) {
  %1235 = @func_3409() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1236 = @func_6714() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) */;
  %1237 = %1236.1;
  %1238 = cast(%1237, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %1239 = %1235.0;
  %1240 = asin(%1238) /* ty=Tensor[(14, 12, 10), float64] */;
  (%1239, %1240)
}

def @func_14336(%var_14333: Tensor[(156), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(156), float64]) {
  %1241 = cast(%var_14333, dtype="float64") /* ty=Tensor[(156), float64] */;
  %1242 = reshape(%1241, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
  %1243 = @func_2998(%1242) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(11, 11, 5), float64]) */;
  %1244 = @func_3361() /* ty=Tensor[(11, 11, 5), float64] */;
  %1245 = %1243.1;
  (%1244, %1245, %var_14333)
}

def @func_11917() -> Tensor[(12, 140), float32] {
  %1246 = @func_10233() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32]) */;
  %1246.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8892() -> (Tensor[(12, 140), float32], Tensor[(14, 1, 12), float32], float32) {
  %6 = fn () -> (Tensor[(12, 140), float32], Tensor[(14, 1, 12), float32], float32) {
    %0 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
    %1 = cast(-9.51241f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %2 = reshape(%1, newshape=[]) /* ty=float32 */;
    %3 = @func_3970(%2) /* ty=(Tensor[(14, 1, 12), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %4 = %0.0;
    %5 = %3.0;
    (%4, %5, -9.51241f /* ty=float32 */)
  };
  %6() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 1, 12), float32], float32) */
}

def @func_11157() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %7 = @func_4734() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %8 = %7.2;
  %9 = @func_3361() /* ty=Tensor[(11, 11, 5), float64] */;
  %10 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
  (%8, %9, %10)
}

def @func_14584() -> (Tensor[(15, 12, 12), float32],) {
  %11 = @func_10186() /* ty=Tensor[(15, 12, 12), float32] */;
  (%11,)
}

def @func_2477(%var_2475: Tensor[(14, 12, 10), float64]) -> (Tensor[(14, 12, 10), float32],) {
  @func_2474(%var_2475) /* ty=(Tensor[(14, 12, 10), float32],) */
}

def @func_14864() -> Tensor[(11, 11, 5), float64] {
  %12 = @func_5892() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %12.0
}

def @func_8019() -> Tensor[(11, 11, 5), bool] {
  %14 = fn () -> Tensor[(11, 11, 5), bool] {
    %13 = @func_4905() /* ty=(Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64]) */;
    %13.0
  };
  %14() /* ty=Tensor[(11, 11, 5), bool] */
}

def @func_3315(%var_3314: Tensor[(1, 650), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(2, 650), int16], Tensor[(1, 650), float64]) {
  %26 = fn (%var_3276: Tensor[(1, 650), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(2, 650), int16], Tensor[(1, 650), float64]) {
    %15 = @func_2728() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %16 = cast(%var_3276, dtype="float32") /* ty=Tensor[(1, 650), float32] */;
    %17 = reshape(%16, newshape=[650]) /* ty=Tensor[(650), float32] */;
    %18 = @func_2855(%17) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) */;
    %19 = cast(%var_3276, dtype="int16") /* ty=Tensor[(1, 650), int16] */;
    %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 650), float32] */, dtype="int16") /* ty=Tensor[(2, 650), int16] */;
    %21 = cast(%var_3276, dtype="float64") /* ty=Tensor[(1, 650), float64] */;
    %22 = %15.0;
    %23 = %18.3;
    %24 = subtract(%19, %20) /* ty=Tensor[(2, 650), int16] */;
    %25 = atanh(%21) /* ty=Tensor[(1, 650), float64] */;
    (%22, %23, %24, %25)
  };
  %26(%var_3314) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(2, 650), int16], Tensor[(1, 650), float64]) */
}

def @func_6008() -> Tensor[(11, 11, 5), float64] {
  @func_5329() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_5761(%var_5759: Tensor[(12, 140), float32]) -> Tensor[(12, 140), float32] {
  @func_5758(%var_5759) /* ty=Tensor[(12, 140), float32] */
}

def @func_2500() -> Tensor[(12, 140), float32] {
  @func_2498() /* ty=Tensor[(12, 140), float32] */
}

def @func_4159() -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) {
  %30 = fn () -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) {
    %27 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
    %28 = %27.0;
    %29 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
    (%28, %29)
  };
  %30() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */
}

def @func_7647() -> Tensor[(11, 11, 5), float64] {
  @func_7645() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_9639() -> (Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(420, 4), float32]) {
  %36 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(420, 4), float32]) {
    %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(420, 4), float32] */, dtype="float32") /* ty=Tensor[(420, 4), float32] */;
    %32 = reshape(%31, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
    %33 = @func_2415(%32) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32]) */;
    %34 = @func_3361() /* ty=Tensor[(11, 11, 5), float64] */;
    %35 = %33.1;
    (%34, %35, meta[relay.Constant][1] /* ty=Tensor[(420, 4), float32] */)
  };
  %36() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(420, 4), float32]) */
}

def @func_10280() -> Tensor[(12, 140), float32] {
  %37 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %37.0
}

def @func_3424(%var_3414: Tensor[(14, 12, 10), float64]) -> (Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) {
  %38 = @func_3332() /* ty=(Tensor[(14, 12, 10), float64],) */;
  %39 = %38.0;
  %40 = cast(%var_3414, dtype="bool") /* ty=Tensor[(14, 12, 10), bool] */;
  %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%39, dtype="bool") /* ty=Tensor[(14, 12, 10), bool] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %44 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %45 = greater(%42, %43) /* ty=Tensor[(14, 12, 10), bool] */;
  %46 = %44.0;
  (%45, %46)
}

def @func_8352() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %47 = @func_6008() /* ty=Tensor[(11, 11, 5), float64] */;
  %48 = @func_5329() /* ty=Tensor[(11, 11, 5), float64] */;
  (%47, %48)
}

def @func_6601() -> (Tensor[(11, 11, 5), float64],) {
  @func_6599() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_3587() -> (Tensor[(12, 140), float32],) {
  @func_3585() /* ty=(Tensor[(12, 140), float32],) */
}

def @func_12328() -> (Tensor[(11, 11, 5), float64],) {
  %49 = @func_12036() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %50 = %49.0;
  (%50,)
}

def @func_14062(%var_14060: float32) -> (Tensor[(14, 12, 10), float64], Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64], float32) {
  @func_14059(%var_14060) /* ty=(Tensor[(14, 12, 10), float64], Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64], float32) */
}

def @func_4736() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  @func_4734() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_10250() -> Tensor[(11, 11, 5), float64] {
  %51 = @func_6889() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %51.1
}

def @func_7735(%var_7733: Tensor[(13, 10, 5), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(1680), float32], Tensor[(13, 10, 5), uint32]) {
  @func_7732(%var_7733) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(1680), float32], Tensor[(13, 10, 5), uint32]) */
}

def @func_12431() -> (Tensor[(12, 140), float32],) {
  %52 = @func_6467() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), int64]) */;
  %53 = %52.1;
  (%53,)
}

def @func_13956() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %57 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
    %54 = @func_8262() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %55 = %54.0;
    %56 = @func_11917() /* ty=Tensor[(12, 140), float32] */;
    (%55, %56)
  };
  %57() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */
}

def @func_4907() -> (Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64]) {
  @func_4905() /* ty=(Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64]) */
}

def @func_11046() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float64]) {
  %65 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float64]) {
    %58 = @func_3060() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %59 = @func_10233() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32]) */;
    %60 = %59.2;
    %61 = cast(%60, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
    %62 = %58.1;
    %63 = @func_10008() /* ty=Tensor[(12, 140), float32] */;
    %64 = rsqrt(%61) /* ty=Tensor[(12, 140), float64] */;
    (%62, %63, %64)
  };
  %65() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float64]) */
}

def @func_12581() -> Tensor[(11, 11, 5), float64] {
  %66 = fn () -> Tensor[(11, 11, 5), float64] {
    @func_4680() /* ty=Tensor[(11, 11, 5), float64] */
  };
  %66() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_8316() -> (Tensor[(12, 140), float64],) {
  %67 = @func_5140() /* ty=(Tensor[(12, 140), float64],) */;
  %68 = %67.0;
  (%68,)
}

def @func_11261() -> (Tensor[(11, 11, 5), float64], Tensor[(14, 7, 4), uint64], Tensor[(392), uint64], Tensor[(12, 140), float32]) {
  @func_11259() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 7, 4), uint64], Tensor[(392), uint64], Tensor[(12, 140), float32]) */
}

def @func_12839() -> (Tensor[(11, 11, 5), float64],) {
  %71 = fn () -> (Tensor[(11, 11, 5), float64],) {
    %69 = @func_8076() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64]) */;
    %70 = %69.2;
    (%70,)
  };
  %71() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_13051(%var_13012: Tensor[(1872), float64]) -> (Tensor[(14, 12, 10), bool], Tensor[(1872), float64], Tensor[(12, 140), bool]) {
  %72 = cast(%var_13012, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %73 = reshape(%72, newshape=[1872]) /* ty=Tensor[(1872), float64] */;
  %74 = @func_5721(%73) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(14, 12, 10), bool], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), int64]) */;
  %75 = @func_11071() /* ty=Tensor[(12, 140), float32] */;
  %76 = cast(%75, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %77 = acosh(%76) /* ty=Tensor[(12, 140), float32] */;
  %78 = cast(%77, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %79 = shape_of(%75, dtype="int32") /* ty=Tensor[(2), int32] */;
  %80 = cast(%75, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %82 = %74.4;
  %83 = logical_and(%80, %81) /* ty=Tensor[(12, 140), bool] */;
  (%82, %var_13012, %83)
}

def @func_3062() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  @func_3060() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_14144(%var_14095: Tensor[(4, 11, 1), float32]) -> (Tensor[(4, 11, 1), float32], Tensor[(14, 12, 10), bool], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %84 = cast(%var_14095, dtype="float32") /* ty=Tensor[(4, 11, 1), float32] */;
  %85 = @func_9857() /* ty=(Tensor[(1680), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) */;
  %86 = log(%84) /* ty=Tensor[(4, 11, 1), float32] */;
  %87 = %85.2;
  %88 = @func_10008() /* ty=Tensor[(12, 140), float32] */;
  %89 = @func_5329() /* ty=Tensor[(11, 11, 5), float64] */;
  %90 = @func_8440() /* ty=Tensor[(12, 140), float32] */;
  (%86, %87, %88, %89, %90)
}

def @func_9501() -> (Tensor[(12, 140), float32],) {
  %93 = fn () -> (Tensor[(12, 140), float32],) {
    %91 = @func_4178() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) */;
    %92 = %91.0;
    (%92,)
  };
  %93() /* ty=(Tensor[(12, 140), float32],) */
}

def @func_5330() -> Tensor[(11, 11, 5), float64] {
  %94 = fn () -> Tensor[(11, 11, 5), float64] {
    @func_5248() /* ty=Tensor[(11, 11, 5), float64] */
  };
  %94() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_5826() -> (Tensor[(12, 140), float64], Tensor[(12, 140), float32]) {
  %99 = fn () -> (Tensor[(12, 140), float64], Tensor[(12, 140), float32]) {
    %95 = @func_5140() /* ty=(Tensor[(12, 140), float64],) */;
    %96 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
    %97 = %95.0;
    %98 = %96.1;
    (%97, %98)
  };
  %99() /* ty=(Tensor[(12, 140), float64], Tensor[(12, 140), float32]) */
}

def @func_3890() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  @func_3888() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_11366() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], float32, Tensor[(11, 11, 5), float64]) {
  %100 = @func_2681() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %101 = @func_7214() /* ty=(Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 1, 12), float32], float32) */;
  %102 = @func_9091() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %103 = @func_4638() /* ty=Tensor[(11, 11, 5), float64] */;
  %104 = %100.1;
  %105 = %101.3;
  %106 = %102.0;
  (%103, %104, %105, %106)
}

def @func_9568(%var_9561: Tensor[(5, 11, 3), float32], %var_9562: Tensor[(5, 11, 3), float32]) -> (Tensor[(5, 11, 3), float32],) {
  %107 = cast(%var_9562, dtype="float32") /* ty=Tensor[(5, 11, 3), float32] */;
  %108 = shape_of(%var_9561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%var_9561, dtype="float32") /* ty=Tensor[(5, 11, 3), float32] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %111 = divide(%109, %110) /* ty=Tensor[(5, 11, 3), float32] */;
  (%111,)
}

def @func_14911() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  @func_14909() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_10252() -> Tensor[(11, 11, 5), float64] {
  @func_10250() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_4519(%var_4514: Tensor[(12, 140), float32]) -> Tensor[(12, 140), bool] {
  %112 = @func_2498() /* ty=Tensor[(12, 140), float32] */;
  %113 = cast(%var_4514, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %114 = shape_of(%112, dtype="int32") /* ty=Tensor[(2), int32] */;
  %115 = cast(%112, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  logical_or(%115, %116) /* ty=Tensor[(12, 140), bool] */
}

def @func_5721(%var_5698: Tensor[(1872), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(14, 12, 10), bool], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), int64]) {
  %117 = @func_2589() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %118 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %119 = cast(meta[relay.Constant][2] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %120 = reshape(%119, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %121 = @func_4803(%120) /* ty=(Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(156), float64]) */;
  %122 = %118.1;
  %123 = cast(%122, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %124 = reshape(%123, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %125 = @func_3424(%124) /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
  %126 = @func_4572() /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
  %127 = %126.0;
  %128 = cast(%127, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %129 = cast(%var_5698, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %130 = %125.0;
  %131 = cast(%130, dtype="bool") /* ty=Tensor[(14, 12, 10), bool] */;
  %132 = reshape(%128, newshape=[12, 140]) /* ty=Tensor[(12, 140), float64] */;
  %133 = reshape(%129, newshape=[12, 156]) /* ty=Tensor[(12, 156), float64] */;
  %134 = reshape(%131, newshape=[12, 140]) /* ty=Tensor[(12, 140), bool] */;
  %135 = @func_3159(%132, %133, %134) /* ty=(Tensor[(12, 140), int32], Tensor[(1, 12, 13), float64], Tensor[(12, 156), uint16], Tensor[(12, 140), uint8]) */;
  %136 = @func_3478() /* ty=Tensor[(12, 140), float32] */;
  %137 = cast(%136, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %138 = log10(%137) /* ty=Tensor[(12, 140), float64] */;
  %139 = cast(%127, dtype="int64") /* ty=Tensor[(14, 12, 10), int64] */;
  %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(2), int32] */;
  %141 = cast(%138, dtype="int64") /* ty=Tensor[(12, 140), int64] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %143 = %117.0;
  %144 = %121.3;
  %145 = %135.1;
  %146 = bitwise_and(%141, %142) /* ty=Tensor[(12, 140), int64] */;
  (%143, %122, %144, meta[relay.Constant][2] /* ty=Tensor[(156), float64] */, %130, %145, %var_5698, %146)
}

def @func_10042(%var_10040: Tensor[(15, 6, 2), int32], %var_10041: Tensor[(15, 6, 2), int32]) -> (Tensor[(15, 6, 2), int32], Tensor[(12, 140), float32]) {
  @func_10038(%var_10040, %var_10041) /* ty=(Tensor[(15, 6, 2), int32], Tensor[(12, 140), float32]) */
}

def @func_6215() -> (Tensor[(12, 140), float64],) {
  @func_6213() /* ty=(Tensor[(12, 140), float64],) */
}

def @func_3585() -> (Tensor[(12, 140), float32],) {
  %147 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %148 = %147.0;
  (%148,)
}

def @func_12165(%var_12164: Tensor[(12, 140), float32]) -> (Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), bool], Tensor[(12, 140), float32], Tensor[(4, 468), float64]) {
  %162 = fn (%var_12152: Tensor[(12, 140), float32]) -> (Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), bool], Tensor[(12, 140), float32], Tensor[(4, 468), float64]) {
    %149 = @func_6714() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) */;
    %150 = %149.0;
    %151 = cast(%var_12152, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
    %152 = shape_of(%150, dtype="int32") /* ty=Tensor[(2), int32] */;
    %153 = cast(%150, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
    %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %155 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 468), float64] */, dtype="float64") /* ty=Tensor[(4, 468), float64] */;
    %156 = reshape(%155, newshape=[1872]) /* ty=Tensor[(1872), float64] */;
    %157 = @func_5721(%156) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(14, 12, 10), bool], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), int64]) */;
    %158 = @func_9525() /* ty=Tensor[(9, 5, 6), float64] */;
    %159 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
    %160 = not_equal(%153, %154) /* ty=Tensor[(12, 140), bool] */;
    %161 = %157.1;
    (%158, %159, %160, %161, meta[relay.Constant][3] /* ty=Tensor[(4, 468), float64] */)
  };
  %162(%var_12164) /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), bool], Tensor[(12, 140), float32], Tensor[(4, 468), float64]) */
}

def @func_2681() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %163 = @func_2589() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %164 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %165 = %163.0;
  %166 = %164.1;
  (%165, %166)
}

def @func_2858(%var_2856: Tensor[(650), float32]) -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) {
  @func_2855(%var_2856) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) */
}

def @func_4479(%var_4472: Tensor[(1680), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(1680), float32]) {
  %167 = cast(%var_4472, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %168 = reshape(%167, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %169 = @func_4118(%168) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool]) */;
  %170 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  %171 = %169.4;
  (%170, %171, %var_4472)
}

def @func_14147(%var_14145: Tensor[(4, 11, 1), float32]) -> (Tensor[(4, 11, 1), float32], Tensor[(14, 12, 10), bool], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  @func_14144(%var_14145) /* ty=(Tensor[(4, 11, 1), float32], Tensor[(14, 12, 10), bool], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */
}

def @func_12415(%var_12414: Tensor[(650), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(650), float32]) {
  %178 = fn (%var_12406: Tensor[(650), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(650), float32]) {
    %172 = @func_4572() /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
    %173 = cast(%var_12406, dtype="float32") /* ty=Tensor[(650), float32] */;
    %174 = reshape(%173, newshape=[650]) /* ty=Tensor[(650), float32] */;
    %175 = @func_5369(%174) /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(11, 11, 5), float64]) */;
    %176 = %172.1;
    %177 = %175.3;
    (%176, %177, %var_12406)
  };
  %178(%var_12414) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(650), float32]) */
}

def @func_3764() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) {
  %179 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %180 = %179.0;
  %181 = cast(%180, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %182 = cast(%180, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %183 = reshape(%181, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %184 = reshape(%182, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %185 = @func_1107(%183, %184) /* ty=(Tensor[(14, 12, 10), float32], Tensor[(14, 12, 10), float64]) */;
  %186 = %185.1;
  (%180, %186)
}

def @func_3163(%var_3160: Tensor[(12, 140), float64], %var_3161: Tensor[(12, 156), float64], %var_3162: Tensor[(12, 140), bool]) -> (Tensor[(12, 140), int32], Tensor[(1, 12, 13), float64], Tensor[(12, 156), uint16], Tensor[(12, 140), uint8]) {
  %215 = fn (%var_3117: Tensor[(12, 140), float64], %var_3145: Tensor[(12, 156), float64], %var_3151: Tensor[(12, 140), bool]) -> (Tensor[(12, 140), int32], Tensor[(1, 12, 13), float64], Tensor[(12, 156), uint16], Tensor[(12, 140), uint8]) {
    %187 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
    %188 = %187.2;
    %189 = cast(%188, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
    %190 = acos(%189) /* ty=Tensor[(12, 140), float64] */;
    %191 = cast(%var_3117, dtype="int32") /* ty=Tensor[(12, 140), int32] */;
    %192 = shape_of(%190, dtype="int32") /* ty=Tensor[(2), int32] */;
    %193 = cast(%190, dtype="int32") /* ty=Tensor[(12, 140), int32] */;
    %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %195 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 156), float64] */, dtype="float64") /* ty=Tensor[(1, 156), float64] */;
    %196 = reshape(%195, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
    %197 = @func_2998(%196) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(11, 11, 5), float64]) */;
    %198 = %197.0;
    %199 = cast(%198, dtype="float64") /* ty=Tensor[(1, 12, 13), float64] */;
    %200 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 156), float64] */, dtype="uint16") /* ty=Tensor[(1, 156), uint16] */;
    %201 = cast(%var_3145, dtype="uint16") /* ty=Tensor[(12, 156), uint16] */;
    %202 = cast(%var_3117, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
    %203 = shape_of(%190, dtype="int32") /* ty=Tensor[(2), int32] */;
    %204 = cast(%190, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
    %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %206 = greater(%204, %205) /* ty=Tensor[(12, 140), bool] */;
    %207 = cast(%var_3151, dtype="uint8") /* ty=Tensor[(12, 140), uint8] */;
    %208 = shape_of(%206, dtype="int32") /* ty=Tensor[(2), int32] */;
    %209 = cast(%206, dtype="uint8") /* ty=Tensor[(12, 140), uint8] */;
    %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %211 = maximum(%193, %194) /* ty=Tensor[(12, 140), int32] */;
    %212 = log2(%199) /* ty=Tensor[(1, 12, 13), float64] */;
    %213 = left_shift(%200, %201) /* ty=Tensor[(12, 156), uint16] */;
    %214 = bitwise_or(%209, %210) /* ty=Tensor[(12, 140), uint8] */;
    (%211, %212, %213, %214)
  };
  %215(%var_3160, %var_3161, %var_3162) /* ty=(Tensor[(12, 140), int32], Tensor[(1, 12, 13), float64], Tensor[(12, 156), uint16], Tensor[(12, 140), uint8]) */
}

def @func_8859() -> (Tensor[(11, 11, 5), float64],) {
  %218 = fn () -> (Tensor[(11, 11, 5), float64],) {
    %216 = @func_4441() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %217 = %216.0;
    (%217,)
  };
  %218() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_12936(%var_12934: int16, %var_12935: Tensor[(8, 1, 2), int16]) -> (Tensor[(8, 1, 2), bool], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %225 = fn (%var_12902: int16, %var_12903: Tensor[(8, 1, 2), int16]) -> (Tensor[(8, 1, 2), bool], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
    %219 = cast(%var_12902, dtype="bool") /* ty=bool */;
    %220 = cast(%var_12903, dtype="bool") /* ty=Tensor[(8, 1, 2), bool] */;
    %221 = @func_9500() /* ty=(Tensor[(12, 140), float32],) */;
    %222 = greater_equal(%219, %220) /* ty=Tensor[(8, 1, 2), bool] */;
    %223 = %221.0;
    %224 = @func_8562() /* ty=Tensor[(12, 140), float32] */;
    (%222, %223, %224)
  };
  %225(%var_12934, %var_12935) /* ty=(Tensor[(8, 1, 2), bool], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */
}

def @func_6236() -> (Tensor[(12, 140), float32],) {
  %228 = fn () -> (Tensor[(12, 140), float32],) {
    %226 = @func_4692() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
    %227 = %226.1;
    (%227,)
  };
  %228() /* ty=(Tensor[(12, 140), float32],) */
}

def @func_8076() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64]) {
  %229 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %230 = %229.1;
  %231 = cast(%230, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %232 = cast(%230, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %233 = reshape(%231, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %234 = reshape(%232, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
  %235 = @func_1107(%233, %234) /* ty=(Tensor[(14, 12, 10), float32], Tensor[(14, 12, 10), float64]) */;
  %236 = cast(%230, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %237 = reshape(%236, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %238 = @func_4479(%237) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(1680), float32]) */;
  %239 = %235.1;
  %240 = %238.0;
  (%230, %239, %240)
}

def @func_3409() -> (Tensor[(11, 11, 5), float64],) {
  %241 = @func_3060() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %242 = %241.1;
  (%242,)
}

def @func_3834() -> Tensor[(11, 11, 5), float64] {
  @func_3832() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_9420(%var_9413: Tensor[(15, 12, 12), float32]) -> (Tensor[(15, 12, 12), uint8],) {
  %243 = @func_9371() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(15, 12, 12), float32]) */;
  %244 = %243.3;
  %245 = cast(%var_9413, dtype="uint8") /* ty=Tensor[(15, 12, 12), uint8] */;
  %246 = shape_of(%244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%244, dtype="uint8") /* ty=Tensor[(15, 12, 12), uint8] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %249 = add(%247, %248) /* ty=Tensor[(15, 12, 12), uint8] */;
  (%249,)
}

def @func_14535() -> Tensor[(12, 140), float32] {
  @func_6824() /* ty=Tensor[(12, 140), float32] */
}

def @func_7634() -> Tensor[(14, 12, 10), float64] {
  %251 = fn () -> Tensor[(14, 12, 10), float64] {
    %250 = @func_3764() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) */;
    %250.1
  };
  %251() /* ty=Tensor[(14, 12, 10), float64] */
}

def @func_7988(%var_7987: Tensor[(650), float32]) -> (Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64], Tensor[(2, 650), float64], Tensor[(2, 650), bool], Tensor[(11, 11, 5), float64], Tensor[(2, 650), float64]) {
  %276 = fn (%var_7906: Tensor[(650), float32]) -> (Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64], Tensor[(2, 650), float64], Tensor[(2, 650), bool], Tensor[(11, 11, 5), float64], Tensor[(2, 650), float64]) {
    %252 = @func_7214() /* ty=(Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 1, 12), float32], float32) */;
    %253 = @func_6049() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %254 = cast(%var_7906, dtype="float32") /* ty=Tensor[(650), float32] */;
    %255 = reshape(%254, newshape=[1, 650]) /* ty=Tensor[(1, 650), float32] */;
    %256 = @func_3313(%255) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(2, 650), int16], Tensor[(1, 650), float64]) */;
    %257 = %256.2;
    %258 = cast(%257, dtype="float64") /* ty=Tensor[(2, 650), float64] */;
    %259 = cast(%257, dtype="float32") /* ty=Tensor[(2, 650), float32] */;
    %260 = cos(%259) /* ty=Tensor[(2, 650), float32] */;
    %261 = cast(%260, dtype="bool") /* ty=Tensor[(2, 650), bool] */;
    %262 = cast(%var_7906, dtype="bool") /* ty=Tensor[(650), bool] */;
    %263 = cast(%260, dtype="float32") /* ty=Tensor[(2, 650), float32] */;
    %264 = sin(%263) /* ty=Tensor[(2, 650), float32] */;
    %265 = cast(%264, dtype="float64") /* ty=Tensor[(2, 650), float64] */;
    %266 = erf(%265) /* ty=Tensor[(2, 650), float64] */;
    %267 = cast(%266, dtype="float32") /* ty=Tensor[(2, 650), float32] */;
    %268 = cosh(%267) /* ty=Tensor[(2, 650), float32] */;
    %269 = cast(%268, dtype="float64") /* ty=Tensor[(2, 650), float64] */;
    %270 = %252.0;
    %271 = %253.0;
    %272 = sigmoid(%258) /* ty=Tensor[(2, 650), float64] */;
    %273 = less_equal(%261, %262) /* ty=Tensor[(2, 650), bool] */;
    %274 = @func_7645() /* ty=Tensor[(11, 11, 5), float64] */;
    %275 = log2(%269) /* ty=Tensor[(2, 650), float64] */;
    (%270, %271, %272, %273, %274, %275)
  };
  %276(%var_7987) /* ty=(Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64], Tensor[(2, 650), float64], Tensor[(2, 650), bool], Tensor[(11, 11, 5), float64], Tensor[(2, 650), float64]) */
}

def @func_1107(%var_1046: Tensor[(14, 12, 10), float32], %var_1047: Tensor[(14, 12, 10), float32]) -> (Tensor[(14, 12, 10), float32], Tensor[(14, 12, 10), float64]) {
  %277 = cast(%var_1047, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %278 = shape_of(%var_1046, dtype="int32") /* ty=Tensor[(3), int32] */;
  %279 = cast(%var_1046, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %281 = cast(%var_1047, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %282 = mod(%279, %280) /* ty=Tensor[(14, 12, 10), float32] */;
  %283 = exp(%281) /* ty=Tensor[(14, 12, 10), float64] */;
  (%282, %283)
}

def @func_14246() -> Tensor[(11, 11, 5), float64] {
  @func_14244() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_7673() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %288 = fn () -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
    %284 = @func_5892() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
    %285 = @func_6235() /* ty=(Tensor[(12, 140), float32],) */;
    %286 = %284.1;
    %287 = %285.0;
    (%286, %287)
  };
  %288() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */
}

def @func_8695() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) {
  @func_8693() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */
}

def @func_3060() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %289 = @func_2542() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %290 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %291 = %289.0;
  %292 = %290.0;
  (%291, %292)
}

def @func_11073() -> Tensor[(12, 140), float32] {
  @func_11071() /* ty=Tensor[(12, 140), float32] */
}

def @func_14650() -> (Tensor[(14, 1, 12), float32],) {
  %295 = fn () -> (Tensor[(14, 1, 12), float32],) {
    %293 = @func_7214() /* ty=(Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 1, 12), float32], float32) */;
    %294 = %293.2;
    (%294,)
  };
  %295() /* ty=(Tensor[(14, 1, 12), float32],) */
}

def @func_12780() -> (Tensor[(14, 12, 10), float32],) {
  %296 = @func_11661() /* ty=(Tensor[(14, 12, 10), float32],) */;
  %297 = %296.0;
  (%297,)
}

def @func_12695() -> (Tensor[(14, 12, 10), float32],) {
  %298 = @func_7122() /* ty=(Tensor[(14, 12, 10), int64], Tensor[(14, 12, 10), float32], Tensor[(13, 10, 5), float32], Tensor[(1, 650), float32], Tensor[(14, 1, 12), float32], float32) */;
  %299 = %298.1;
  (%299,)
}

def @func_11435() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  @func_11433() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */
}

def @func_8603() -> Tensor[(12, 140), float32] {
  %300 = @func_3666() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %300.1
}

def @func_5779(%var_5778: Tensor[(1, 13, 12), uint32]) -> (Tensor[(1, 13, 12), uint32],) {
  %304 = fn (%var_5773: Tensor[(1, 13, 12), uint32]) -> (Tensor[(1, 13, 12), uint32],) {
    %301 = cast(meta[relay.Constant][5] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %302 = cast(%var_5773, dtype="uint32") /* ty=Tensor[(1, 13, 12), uint32] */;
    %303 = left_shift(%301, %302) /* ty=Tensor[(1, 13, 12), uint32] */;
    (%303,)
  };
  %304(%var_5778) /* ty=(Tensor[(1, 13, 12), uint32],) */
}

def @func_3798() -> Tensor[(12, 140), float32] {
  @func_3796() /* ty=Tensor[(12, 140), float32] */
}

def @func_1963() -> (Tensor[(11, 11, 5), float64],) {
  %307 = fn () -> (Tensor[(11, 11, 5), float64],) {
    %305 = cast(meta[relay.Constant][6] /* ty=Tensor[(11, 11, 5), float64] */, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
    %306 = log(%305) /* ty=Tensor[(11, 11, 5), float64] */;
    (%306,)
  };
  %307() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_10008() -> Tensor[(12, 140), float32] {
  %308 = @func_4855() /* ty=(Tensor[(12, 140), float32],) */;
  %308.0
}

def @func_6097() -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(1, 13, 12), uint32], Tensor[(156), uint32]) {
  %317 = fn () -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(1, 13, 12), uint32], Tensor[(156), uint32]) {
    %309 = @func_6061() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) */;
    %310 = @func_5455() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %311 = cast(meta[relay.Constant][7] /* ty=Tensor[(156), uint32] */, dtype="uint32") /* ty=Tensor[(156), uint32] */;
    %312 = reshape(%311, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), uint32] */;
    %313 = @func_5777(%312) /* ty=(Tensor[(1, 13, 12), uint32],) */;
    %314 = %309.0;
    %315 = %310.0;
    %316 = %313.0;
    (%314, %315, %316, meta[relay.Constant][7] /* ty=Tensor[(156), uint32] */)
  };
  %317() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(1, 13, 12), uint32], Tensor[(156), uint32]) */
}

def @func_5007(%var_4918: Tensor[(650), float32], %var_4941: Tensor[(12, 140), float32]) -> (Tensor[(325, 2), float32], Tensor[(650), float32], Tensor[(12, 140), uint8], Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(12, 140), uint32]) {
  %318 = cast(%var_4918, dtype="float32") /* ty=Tensor[(650), float32] */;
  %319 = reshape(%318, newshape=[325, 2]) /* ty=Tensor[(325, 2), float32] */;
  %320 = @func_2925(%319) /* ty=(Tensor[(12, 140), bool], Tensor[(11, 11, 5), float64], Tensor[(325, 2), float32], Tensor[(11, 11, 5), float64]) */;
  %321 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %322 = %321.0;
  %323 = cast(%322, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %324 = erf(%323) /* ty=Tensor[(12, 140), float32] */;
  %325 = cast(%var_4941, dtype="uint32") /* ty=Tensor[(12, 140), uint32] */;
  %326 = shape_of(%324, dtype="int32") /* ty=Tensor[(2), int32] */;
  %327 = cast(%324, dtype="uint32") /* ty=Tensor[(12, 140), uint32] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %329 = minimum(%327, %328) /* ty=Tensor[(12, 140), uint32] */;
  %330 = cast(%var_4941, dtype="uint8") /* ty=Tensor[(12, 140), uint8] */;
  %331 = shape_of(%329, dtype="int32") /* ty=Tensor[(2), int32] */;
  %332 = cast(%329, dtype="uint8") /* ty=Tensor[(12, 140), uint8] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %334 = cast(%322, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %335 = reshape(%334, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %336 = @func_4479(%335) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(1680), float32]) */;
  %337 = cast(%var_4918, dtype="float32") /* ty=Tensor[(650), float32] */;
  %338 = reshape(%337, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %339 = @func_2855(%338) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) */;
  %340 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %341 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %342 = cast(%324, dtype="uint32") /* ty=Tensor[(12, 140), uint32] */;
  %343 = shape_of(%322, dtype="int32") /* ty=Tensor[(2), int32] */;
  %344 = cast(%322, dtype="uint32") /* ty=Tensor[(12, 140), uint32] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %346 = %320.2;
  %347 = logical_xor(%332, %333) /* ty=Tensor[(12, 140), uint8] */;
  %348 = %336.1;
  %349 = %339.3;
  %350 = %340.0;
  %351 = %341.0;
  %352 = right_shift(%344, %345) /* ty=Tensor[(12, 140), uint32] */;
  (%346, %var_4918, %347, %348, %349, %350, %351, %352)
}

def @func_7446() -> (float32, Tensor[(12, 140), float64]) {
  %357 = fn () -> (float32, Tensor[(12, 140), float64]) {
    %353 = @func_7122() /* ty=(Tensor[(14, 12, 10), int64], Tensor[(14, 12, 10), float32], Tensor[(13, 10, 5), float32], Tensor[(1, 650), float32], Tensor[(14, 1, 12), float32], float32) */;
    %354 = @func_5140() /* ty=(Tensor[(12, 140), float64],) */;
    %355 = %353.5;
    %356 = %354.0;
    (%355, %356)
  };
  %357() /* ty=(float32, Tensor[(12, 140), float64]) */
}

def @func_10010() -> Tensor[(12, 140), float32] {
  @func_10008() /* ty=Tensor[(12, 140), float32] */
}

def @func_4179() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) {
  %364 = fn () -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) {
    %358 = @func_3541() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
    %359 = %358.0;
    %360 = cast(%359, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
    %361 = reshape(%360, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
    %362 = @func_3424(%361) /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
    %363 = %362.0;
    (%359, %363)
  };
  %364() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) */
}

def @func_7078() -> (Tensor[(11, 11, 5), float64],) {
  %367 = fn () -> (Tensor[(11, 11, 5), float64],) {
    %365 = @func_6889() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %366 = %365.1;
    (%366,)
  };
  %367() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_11225() -> (Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(325, 2), float32]) {
  @func_11223() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(325, 2), float32]) */
}

def @func_9186(%var_9184: Tensor[(9, 650), bool], %var_9185: Tensor[(9, 650), float32]) -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(9, 650), uint32]) {
  @func_9182(%var_9184, %var_9185) /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(9, 650), uint32]) */
}

def @func_5893() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %371 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
    %368 = @func_4441() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %369 = %368.0;
    %370 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
    (%369, %370)
  };
  %371() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */
}

def @func_3615() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %372 = @func_3409() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %373 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %374 = %372.0;
  %375 = %373.0;
  (%374, %375)
}

def @func_3427(%var_3425: Tensor[(14, 12, 10), float64]) -> (Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) {
  @func_3424(%var_3425) /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */
}

def @func_3766() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) {
  @func_3764() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) */
}

def @func_6468() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), int64]) {
  %382 = fn () -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), int64]) {
    %376 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
    %377 = @func_3666() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
    %378 = @func_5301() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64]) */;
    %379 = %376.2;
    %380 = %377.1;
    %381 = %378.1;
    (%379, %380, %381)
  };
  %382() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), int64]) */
}

def @func_14244() -> Tensor[(11, 11, 5), float64] {
  %383 = @func_7077() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %383.0
}

def @func_14339(%var_14337: Tensor[(156), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(156), float64]) {
  @func_14336(%var_14337) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(156), float64]) */
}

def @func_4905() -> (Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64]) {
  %384 = @func_3361() /* ty=Tensor[(11, 11, 5), float64] */;
  %385 = cast(meta[relay.Constant][8] /* ty=Tensor[(11, 11, 5), float64] */, dtype="bool") /* ty=Tensor[(11, 11, 5), bool] */;
  %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%384, dtype="bool") /* ty=Tensor[(11, 11, 5), bool] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %389 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %390 = logical_and(%387, %388) /* ty=Tensor[(11, 11, 5), bool] */;
  %391 = %389.0;
  (%390, %391)
}

def @func_4415() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float64]) {
  @func_4413() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float64]) */
}

def @func_12062() -> (Tensor[(11, 11, 5), float64],) {
  %394 = fn () -> (Tensor[(11, 11, 5), float64],) {
    %392 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %393 = %392.0;
    (%393,)
  };
  %394() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_6061() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) {
  %395 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %396 = @func_6033() /* ty=(Tensor[(14, 12, 10), float64],) */;
  %397 = %395.0;
  %398 = %396.0;
  (%397, %398)
}

def @func_5057() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float32]) {
  @func_5055() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float32]) */
}

def @func_8564() -> Tensor[(12, 140), float32] {
  @func_8562() /* ty=Tensor[(12, 140), float32] */
}

def @func_10916() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float32], Tensor[(14, 12, 10), float32]) {
  %399 = @func_5455() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %400 = %399.0;
  %401 = cast(%400, dtype="float32") /* ty=Tensor[(11, 11, 5), float32] */;
  %402 = @func_5055() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float32]) */;
  %403 = @func_9921() /* ty=Tensor[(11, 11, 5), float64] */;
  %404 = @func_10280() /* ty=Tensor[(12, 140), float32] */;
  %405 = @func_2941() /* ty=Tensor[(11, 11, 5), float64] */;
  %406 = acosh(%401) /* ty=Tensor[(11, 11, 5), float32] */;
  %407 = %402.1;
  (%403, %404, %405, %406, %407)
}

def @func_4120(%var_4119: Tensor[(12, 140), float32]) -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool]) {
  %445 = fn (%var_4041: Tensor[(12, 140), float32]) -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool]) {
    %408 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
    %409 = %408.2;
    %410 = cast(%var_4041, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
    %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(2), int32] */;
    %412 = cast(%409, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
    %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %414 = equal(%412, %413) /* ty=Tensor[(12, 140), bool] */;
    %415 = cast(%var_4041, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
    %416 = shape_of(%414, dtype="int32") /* ty=Tensor[(2), int32] */;
    %417 = cast(%414, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
    %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %419 = @func_2681() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
    %420 = cast(meta[relay.Constant][9] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
    %421 = reshape(%420, newshape=[1, 650]) /* ty=Tensor[(1, 650), float32] */;
    %422 = @func_3313(%421) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(2, 650), int16], Tensor[(1, 650), float64]) */;
    %423 = %422.3;
    %424 = cast(meta[relay.Constant][9] /* ty=Tensor[(650), float32] */, dtype="bool") /* ty=Tensor[(650), bool] */;
    %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(2), int32] */;
    %426 = cast(%423, dtype="bool") /* ty=Tensor[(1, 650), bool] */;
    %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %428 = cast(%423, dtype="float32") /* ty=Tensor[(1, 650), float32] */;
    %429 = cos(%428) /* ty=Tensor[(1, 650), float32] */;
    %430 = cast(meta[relay.Constant][9] /* ty=Tensor[(650), float32] */, dtype="uint32") /* ty=Tensor[(650), uint32] */;
    %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(2), int32] */;
    %432 = cast(%429, dtype="uint32") /* ty=Tensor[(1, 650), uint32] */;
    %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %434 = subtract(%432, %433) /* ty=Tensor[(?, 650), uint32] */;
    %435 = cast(%423, dtype="bool") /* ty=Tensor[(1, 650), bool] */;
    %436 = shape_of(%434, dtype="int32") /* ty=Tensor[(2), int32] */;
    %437 = cast(%434, dtype="bool") /* ty=Tensor[(?, 650), bool] */;
    %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %439 = multiply(%417, %418) /* ty=Tensor[(12, 140), float32] */;
    %440 = %419.0;
    %441 = greater_equal(%426, %427) /* ty=Tensor[(?, 650), bool] */;
    %442 = @func_2498() /* ty=Tensor[(12, 140), float32] */;
    %443 = @func_2941() /* ty=Tensor[(11, 11, 5), float64] */;
    %444 = less(%437, %438) /* ty=Tensor[(?, 650), bool] */;
    (%439, %440, %441, %442, %443, %444)
  };
  %445(%var_4119) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool]) */
}

def @func_12782() -> (Tensor[(14, 12, 10), float32],) {
  @func_12780() /* ty=(Tensor[(14, 12, 10), float32],) */
}

def @func_7389() -> (Tensor[(8, 2, 4), float64], Tensor[(12, 140), float32]) {
  %446 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 2, 4), float64] */;
  %447 = atanh(%446) /* ty=Tensor[(8, 2, 4), float64] */;
  %448 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
  (%447, %448)
}

def @func_9858() -> (Tensor[(1680), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) {
  %454 = fn () -> (Tensor[(1680), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) {
    %449 = @func_8167() /* ty=(Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64], Tensor[(1680), float64]) */;
    %450 = @func_4178() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) */;
    %451 = %449.2;
    %452 = @func_4638() /* ty=Tensor[(11, 11, 5), float64] */;
    %453 = %450.1;
    (%451, %452, %453)
  };
  %454() /* ty=(Tensor[(1680), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) */
}

def @func_11308() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %462 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
    %455 = @func_9857() /* ty=(Tensor[(1680), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) */;
    %456 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %457 = @func_8167() /* ty=(Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64], Tensor[(1680), float64]) */;
    %458 = @func_3832() /* ty=Tensor[(11, 11, 5), float64] */;
    %459 = %455.1;
    %460 = %456.0;
    %461 = %457.1;
    (%458, %459, %460, %461)
  };
  %462() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_9371() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(15, 12, 12), float32]) {
  %463 = @func_9026() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %464 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %465 = @func_6655() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %466 = @func_6519() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
  %467 = %463.0;
  %468 = %464.0;
  %469 = %465.0;
  %470 = %466.0;
  (%467, %468, %469, %470)
}

def @func_12717() -> Tensor[(11, 11, 5), float64] {
  %471 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %471.0
}

def @func_2415(%var_2397: Tensor[(1680), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32]) {
  %472 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %473 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %474 = cast(%var_2397, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %475 = cast(meta[relay.Constant][11] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
  %476 = reshape(%474, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %477 = reshape(%475, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %478 = @func_2078(%476, %477) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(1680), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(14, 12, 10), float32]) */;
  %479 = %478.4;
  %480 = cast(%479, dtype="float32") /* ty=Tensor[(13, 10, 5), float32] */;
  %481 = %472.0;
  %482 = %473.0;
  %483 = log(%480) /* ty=Tensor[(13, 10, 5), float32] */;
  (%481, %var_2397, meta[relay.Constant][11] /* ty=Tensor[(650), float32] */, %482, %483)
}

def @func_5724(%var_5722: Tensor[(1872), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(14, 12, 10), bool], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), int64]) {
  @func_5721(%var_5722) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(14, 12, 10), bool], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), int64]) */
}

def @func_13428() -> (Tensor[(12, 140), float32],) {
  @func_13426() /* ty=(Tensor[(12, 140), float32],) */
}

def @func_10390(%var_10389: Tensor[(605), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(605), float64], Tensor[(12, 140), float32]) {
  %491 = fn (%var_10382: Tensor[(605), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(605), float64], Tensor[(12, 140), float32]) {
    %484 = cast(%var_10382, dtype="float64") /* ty=Tensor[(605), float64] */;
    %485 = reshape(%484, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), float64] */;
    %486 = @func_5134(%485) /* ty=(Tensor[(11, 11, 5), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %487 = @func_8440() /* ty=Tensor[(12, 140), float32] */;
    %488 = cast(%487, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
    %489 = %486.2;
    %490 = cos(%488) /* ty=Tensor[(12, 140), float32] */;
    (%489, %var_10382, %490)
  };
  %491(%var_10389) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(605), float64], Tensor[(12, 140), float32]) */
}

def @func_6051() -> (Tensor[(11, 11, 5), float64],) {
  @func_6049() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_3333() -> (Tensor[(14, 12, 10), float64],) {
  %494 = fn () -> (Tensor[(14, 12, 10), float64],) {
    %492 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
    %493 = %492.1;
    (%493,)
  };
  %494() /* ty=(Tensor[(14, 12, 10), float64],) */
}

def @func_8843(%var_8841: Tensor[(1680), float32], %var_8842: Tensor[(65, 10), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(1680), float32], Tensor[(65, 10), float32], Tensor[(11, 11, 5), float64]) {
  %504 = fn (%var_8817: Tensor[(1680), float32], %var_8818: Tensor[(65, 10), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(1680), float32], Tensor[(65, 10), float32], Tensor[(11, 11, 5), float64]) {
    %495 = @func_8352() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %496 = cast(%var_8817, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %497 = cast(%var_8818, dtype="float32") /* ty=Tensor[(65, 10), float32] */;
    %498 = reshape(%496, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
    %499 = reshape(%497, newshape=[650]) /* ty=Tensor[(650), float32] */;
    %500 = @func_2078(%498, %499) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(1680), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(14, 12, 10), float32]) */;
    %501 = %495.1;
    %502 = %500.5;
    %503 = @func_4680() /* ty=Tensor[(11, 11, 5), float64] */;
    (%501, %502, %var_8817, %var_8818, %503)
  };
  %504(%var_8841, %var_8842) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(1680), float32], Tensor[(65, 10), float32], Tensor[(11, 11, 5), float64]) */
}

def @func_13864() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), bool]) {
  %505 = @func_7077() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %506 = @func_9857() /* ty=(Tensor[(1680), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) */;
  %507 = @func_12717() /* ty=Tensor[(11, 11, 5), float64] */;
  %508 = %505.0;
  %509 = %506.2;
  %510 = @func_8018() /* ty=Tensor[(11, 11, 5), bool] */;
  (%507, %508, %509, %510)
}

def @func_13966() -> (Tensor[(12, 140), float32],) {
  @func_13964() /* ty=(Tensor[(12, 140), float32],) */
}

def @func_14410() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), uint8], Tensor[(1680), float64], Tensor[(1872), float64]) {
  @func_14408() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), uint8], Tensor[(1680), float64], Tensor[(1872), float64]) */
}

def @func_11975() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %515 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
    %511 = @func_4734() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %512 = @func_4572() /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
    %513 = %511.0;
    %514 = %512.1;
    (%513, %514)
  };
  %515() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_11259() -> (Tensor[(11, 11, 5), float64], Tensor[(14, 7, 4), uint64], Tensor[(392), uint64], Tensor[(12, 140), float32]) {
  %516 = cast(meta[relay.Constant][12] /* ty=Tensor[(392), uint64] */, dtype="uint64") /* ty=Tensor[(392), uint64] */;
  %517 = cast(meta[relay.Constant][12] /* ty=Tensor[(392), uint64] */, dtype="uint64") /* ty=Tensor[(392), uint64] */;
  %518 = reshape(%516, newshape=[14, 7, 4]) /* ty=Tensor[(14, 7, 4), uint64] */;
  %519 = reshape(%517, newshape=[14, 7, 4]) /* ty=Tensor[(14, 7, 4), uint64] */;
  %520 = @func_8986(%518, %519) /* ty=(Tensor[(14, 7, 4), uint64],) */;
  %521 = @func_8440() /* ty=Tensor[(12, 140), float32] */;
  %522 = cast(%521, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %523 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  %524 = %520.0;
  %525 = sin(%522) /* ty=Tensor[(12, 140), float32] */;
  (%523, %524, meta[relay.Constant][12] /* ty=Tensor[(392), uint64] */, %525)
}

def @func_9093() -> (Tensor[(11, 11, 5), float64],) {
  @func_9091() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_3970(%var_3954: float32) -> (Tensor[(14, 1, 12), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %526 = cast(%var_3954, dtype="float32") /* ty=float32 */;
  %527 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 1, 12), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 12), float32] */;
  %528 = @func_3060() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %529 = mod(%526, %527) /* ty=Tensor[(14, 1, 12), float32] */;
  %530 = %528.0;
  %531 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  (%529, %530, %531)
}

def @func_4692() -> (Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) {
  %532 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(15, 12, 12), float32] */;
  %533 = cos(%532) /* ty=Tensor[(15, 12, 12), float32] */;
  %534 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
  (%533, %534)
}

def @func_2728() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %535 = @func_2681() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %536 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %537 = %535.0;
  %538 = %536.0;
  (%537, %538)
}

def @func_7519(%var_7518: Tensor[(1872), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), bool], Tensor[(12, 140), float32]) {
  %563 = fn (%var_7470: Tensor[(1872), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), bool], Tensor[(12, 140), float32]) {
    %539 = @func_2681() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
    %540 = @func_4413() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float64]) */;
    %541 = %540.0;
    %542 = cast(%541, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
    %543 = cast(%var_7470, dtype="float64") /* ty=Tensor[(1872), float64] */;
    %544 = cast(%541, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
    %545 = reshape(%542, newshape=[12, 140]) /* ty=Tensor[(12, 140), float64] */;
    %546 = reshape(%543, newshape=[12, 156]) /* ty=Tensor[(12, 156), float64] */;
    %547 = reshape(%544, newshape=[12, 140]) /* ty=Tensor[(12, 140), bool] */;
    %548 = @func_3159(%545, %546, %547) /* ty=(Tensor[(12, 140), int32], Tensor[(1, 12, 13), float64], Tensor[(12, 156), uint16], Tensor[(12, 140), uint8]) */;
    %549 = @func_5140() /* ty=(Tensor[(12, 140), float64],) */;
    %550 = %549.0;
    %551 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
    %552 = %551.0;
    %553 = cast(%552, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
    %554 = shape_of(%550, dtype="int32") /* ty=Tensor[(2), int32] */;
    %555 = cast(%550, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
    %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %557 = cast(%552, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
    %558 = %539.0;
    %559 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
    %560 = %548.1;
    %561 = greater_equal(%555, %556) /* ty=Tensor[(12, 140), bool] */;
    %562 = sinh(%557) /* ty=Tensor[(12, 140), float32] */;
    (%558, %541, %559, %560, %var_7470, %561, %562)
  };
  %563(%var_7518) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), bool], Tensor[(12, 140), float32]) */
}

def @func_6715() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) {
  %567 = fn () -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) {
    %564 = @func_3522() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) */;
    %565 = @func_3478() /* ty=Tensor[(12, 140), float32] */;
    %566 = %564.1;
    (%565, %566)
  };
  %567() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) */
}

def @func_14202() -> Tensor[(12, 140), float32] {
  %568 = @func_6971() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %568.2
}

def @func_9329() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %574 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
    %569 = @func_6049() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %570 = @func_8395() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %571 = %569.0;
    %572 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
    %573 = %570.0;
    (%571, %572, %573)
  };
  %574() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_7598(%var_7597: Tensor[(1680), float64]) -> (Tensor[(15, 12, 12), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64]) {
  %586 = fn (%var_7594: Tensor[(1680), float64]) -> (Tensor[(15, 12, 12), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64]) {
    %575 = @func_6519() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
    %576 = cast(meta[relay.Constant][15] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
    %577 = reshape(%576, newshape=[156]) /* ty=Tensor[(156), float64] */;
    %578 = @func_4803(%577) /* ty=(Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(156), float64]) */;
    %579 = cast(%var_7594, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %580 = reshape(%579, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
    %581 = @func_2474(%580) /* ty=(Tensor[(14, 12, 10), float32],) */;
    %582 = %575.0;
    %583 = %578.3;
    %584 = @func_6008() /* ty=Tensor[(11, 11, 5), float64] */;
    %585 = %581.0;
    (%582, %583, meta[relay.Constant][15] /* ty=Tensor[(156), float64] */, %584, %585, %var_7594)
  };
  %586(%var_7597) /* ty=(Tensor[(15, 12, 12), float32], Tensor[(156), float64], Tensor[(156), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float32], Tensor[(1680), float64]) */
}

def @func_10730(%var_10728: Tensor[(15, 14, 7), float32], %var_10729: Tensor[(15, 14, 7), float32]) -> (Tensor[(15, 14, 7), float32], Tensor[(12, 140), float32]) {
  %593 = fn (%var_10702: Tensor[(15, 14, 7), float32], %var_10703: Tensor[(15, 14, 7), float32]) -> (Tensor[(15, 14, 7), float32], Tensor[(12, 140), float32]) {
    %587 = cast(%var_10703, dtype="float32") /* ty=Tensor[(15, 14, 7), float32] */;
    %588 = shape_of(%var_10702, dtype="int32") /* ty=Tensor[(3), int32] */;
    %589 = cast(%var_10702, dtype="float32") /* ty=Tensor[(15, 14, 7), float32] */;
    %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %591 = power(%589, %590) /* ty=Tensor[(15, 14, 7), float32] */;
    %592 = @func_8603() /* ty=Tensor[(12, 140), float32] */;
    (%591, %592)
  };
  %593(%var_10728, %var_10729) /* ty=(Tensor[(15, 14, 7), float32], Tensor[(12, 140), float32]) */
}

def @func_6992() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  @func_6990() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */
}

def @func_10996() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(15, 6, 2), int32], Tensor[(180), int32]) {
  %604 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(15, 6, 2), int32], Tensor[(180), int32]) {
    %594 = @func_8076() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64]) */;
    %595 = @func_8076() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64]) */;
    %596 = cast(meta[relay.Constant][16] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
    %597 = cast(meta[relay.Constant][16] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
    %598 = reshape(%596, newshape=[15, 6, 2]) /* ty=Tensor[(15, 6, 2), int32] */;
    %599 = reshape(%597, newshape=[15, 6, 2]) /* ty=Tensor[(15, 6, 2), int32] */;
    %600 = @func_10038(%598, %599) /* ty=(Tensor[(15, 6, 2), int32], Tensor[(12, 140), float32]) */;
    %601 = %594.2;
    %602 = %595.0;
    %603 = %600.0;
    (%601, %602, %603, meta[relay.Constant][16] /* ty=Tensor[(180), int32] */)
  };
  %604() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(15, 6, 2), int32], Tensor[(180), int32]) */
}

def @func_2683() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  @func_2681() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */
}

def @func_8441() -> Tensor[(12, 140), float32] {
  %606 = fn () -> Tensor[(12, 140), float32] {
    %605 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
    %605.0
  };
  %606() /* ty=Tensor[(12, 140), float32] */
}

def @func_13778(%var_13776: Tensor[(165), float32], %var_13777: Tensor[(650), float32]) -> (Tensor[(78, 2), uint32], Tensor[(1, 13, 12), uint32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(5, 11, 3), float32], Tensor[(165), float32], Tensor[(14, 12, 10), int64], Tensor[(12, 140), float32], Tensor[(650), float32], Tensor[(12, 140), float32]) {
  %630 = fn (%var_13733: Tensor[(165), float32], %var_13750: Tensor[(650), float32]) -> (Tensor[(78, 2), uint32], Tensor[(1, 13, 12), uint32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(5, 11, 3), float32], Tensor[(165), float32], Tensor[(14, 12, 10), int64], Tensor[(12, 140), float32], Tensor[(650), float32], Tensor[(12, 140), float32]) {
    %607 = @func_13249() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(1, 13, 12), uint32], Tensor[(78, 2), uint32]) */;
    %608 = @func_6096() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(1, 13, 12), uint32], Tensor[(156), uint32]) */;
    %609 = @func_12229() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %610 = @func_6519() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
    %611 = cast(%var_13733, dtype="float32") /* ty=Tensor[(165), float32] */;
    %612 = cast(%var_13733, dtype="float32") /* ty=Tensor[(165), float32] */;
    %613 = reshape(%611, newshape=[5, 11, 3]) /* ty=Tensor[(5, 11, 3), float32] */;
    %614 = reshape(%612, newshape=[5, 11, 3]) /* ty=Tensor[(5, 11, 3), float32] */;
    %615 = @func_9568(%613, %614) /* ty=(Tensor[(5, 11, 3), float32],) */;
    %616 = cast(%var_13750, dtype="float32") /* ty=Tensor[(650), float32] */;
    %617 = reshape(%616, newshape=[650]) /* ty=Tensor[(650), float32] */;
    %618 = @func_2855(%617) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) */;
    %619 = @func_11259() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 7, 4), uint64], Tensor[(392), uint64], Tensor[(12, 140), float32]) */;
    %620 = %607.3;
    %621 = %608.2;
    %622 = @func_7633() /* ty=Tensor[(14, 12, 10), float64] */;
    %623 = %609.0;
    %624 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
    %625 = %610.1;
    %626 = %615.0;
    %627 = @func_7650() /* ty=Tensor[(14, 12, 10), int64] */;
    %628 = %618.0;
    %629 = %619.3;
    (%620, %621, %622, %623, %624, %625, %626, %var_13733, %627, %628, %var_13750, %629)
  };
  %630(%var_13776, %var_13777) /* ty=(Tensor[(78, 2), uint32], Tensor[(1, 13, 12), uint32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(5, 11, 3), float32], Tensor[(165), float32], Tensor[(14, 12, 10), int64], Tensor[(12, 140), float32], Tensor[(650), float32], Tensor[(12, 140), float32]) */
}

def @func_2928(%var_2926: Tensor[(325, 2), float32]) -> (Tensor[(12, 140), bool], Tensor[(11, 11, 5), float64], Tensor[(325, 2), float32], Tensor[(11, 11, 5), float64]) {
  @func_2925(%var_2926) /* ty=(Tensor[(12, 140), bool], Tensor[(11, 11, 5), float64], Tensor[(325, 2), float32], Tensor[(11, 11, 5), float64]) */
}

def @func_8591() -> (Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64]) {
  @func_8589() /* ty=(Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_2498() -> Tensor[(12, 140), float32] {
  %631 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %632 = %631.1;
  %633 = cast(%632, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  asinh(%633) /* ty=Tensor[(12, 140), float32] */
}

def @func_12988(%var_12987: Tensor[(1872), float64]) -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), float32]) {
  %649 = fn (%var_12967: Tensor[(1872), float64]) -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), float32]) {
    %634 = @func_12670() /* ty=(Tensor[(14, 12, 10), float64], Tensor[(13, 10, 5), float32], Tensor[(12, 140), float32]) */;
    %635 = @func_8589() /* ty=(Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64]) */;
    %636 = @func_9091() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %637 = %634.2;
    %638 = cast(%637, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
    %639 = cast(%var_12967, dtype="float64") /* ty=Tensor[(1872), float64] */;
    %640 = cast(%637, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
    %641 = reshape(%638, newshape=[12, 140]) /* ty=Tensor[(12, 140), float64] */;
    %642 = reshape(%639, newshape=[12, 156]) /* ty=Tensor[(12, 156), float64] */;
    %643 = reshape(%640, newshape=[12, 140]) /* ty=Tensor[(12, 140), bool] */;
    %644 = @func_3159(%641, %642, %643) /* ty=(Tensor[(12, 140), int32], Tensor[(1, 12, 13), float64], Tensor[(12, 156), uint16], Tensor[(12, 140), uint8]) */;
    %645 = %635.1;
    %646 = %636.0;
    %647 = %644.1;
    %648 = @func_3478() /* ty=Tensor[(12, 140), float32] */;
    (%637, %645, %646, %647, %var_12967, %648)
  };
  %649(%var_12987) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(1, 12, 13), float64], Tensor[(1872), float64], Tensor[(12, 140), float32]) */
}

def @func_2589() -> (Tensor[(11, 11, 5), float64],) {
  %650 = @func_2542() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %651 = %650.0;
  (%651,)
}

def @func_6520() -> (Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) {
  %656 = fn () -> (Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) {
    %652 = @func_4692() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
    %653 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
    %654 = %652.0;
    %655 = %653.0;
    (%654, %655)
  };
  %656() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */
}

def @func_9474() -> Tensor[(14, 12, 10), bool] {
  %658 = fn () -> Tensor[(14, 12, 10), bool] {
    %657 = @func_4178() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) */;
    %657.1
  };
  %658() /* ty=Tensor[(14, 12, 10), bool] */
}

def @func_9805() -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) {
  %665 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) {
    %659 = @func_3409() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %660 = @func_6714() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) */;
    %661 = %660.1;
    %662 = cast(%661, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
    %663 = %659.0;
    %664 = asin(%662) /* ty=Tensor[(14, 12, 10), float64] */;
    (%663, %664)
  };
  %665() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) */
}

def @func_7843(%var_7842: Tensor[(11, 11, 5), float64]) -> (Tensor[(14, 12, 10), int64], Tensor[(11, 11, 5), uint16], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64]) {
  %680 = fn (%var_7818: Tensor[(11, 11, 5), float64]) -> (Tensor[(14, 12, 10), int64], Tensor[(11, 11, 5), uint16], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64]) {
    %666 = @func_6049() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %667 = %666.0;
    %668 = cast(%var_7818, dtype="uint16") /* ty=Tensor[(11, 11, 5), uint16] */;
    %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
    %670 = cast(%667, dtype="uint16") /* ty=Tensor[(11, 11, 5), uint16] */;
    %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %672 = cast(meta[relay.Constant][17] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
    %673 = reshape(%672, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float32] */;
    %674 = @func_7732(%673) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(1680), float32], Tensor[(13, 10, 5), uint32]) */;
    %675 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %676 = @func_7650() /* ty=Tensor[(14, 12, 10), int64] */;
    %677 = multiply(%670, %671) /* ty=Tensor[(11, 11, 5), uint16] */;
    %678 = %674.2;
    %679 = %675.0;
    (%676, %677, %678, meta[relay.Constant][17] /* ty=Tensor[(650), float32] */, %679)
  };
  %680(%var_7842) /* ty=(Tensor[(14, 12, 10), int64], Tensor[(11, 11, 5), uint16], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64]) */
}

def @func_13320() -> (Tensor[(11, 11, 5), float64],) {
  @func_13318() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_12200() -> Tensor[(12, 140), float32] {
  %681 = @func_8076() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64]) */;
  %681.0
}

def @func_10186() -> Tensor[(15, 12, 12), float32] {
  %682 = @func_6519() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
  %682.0
}

def @func_12005() -> (Tensor[(11, 11, 5), float64], Tensor[(15, 14, 7), float32], Tensor[(1470), float32]) {
  @func_12003() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(15, 14, 7), float32], Tensor[(1470), float32]) */
}

def @func_13822() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %687 = fn () -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
    %683 = @func_4158() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
    %684 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
    %685 = %683.0;
    %686 = %684.0;
    (%685, %686)
  };
  %687() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */
}

def @func_13866() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), bool]) {
  @func_13864() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), bool]) */
}

def @func_14776() -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %702 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
    %688 = @func_9688() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %689 = %688.0;
    %690 = cast(%689, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
    %691 = reshape(%690, newshape=[11, 11, 5]) /* ty=Tensor[(11, 11, 5), float64] */;
    %692 = @func_7841(%691) /* ty=(Tensor[(14, 12, 10), int64], Tensor[(11, 11, 5), uint16], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64]) */;
    %693 = @func_4905() /* ty=(Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64]) */;
    %694 = @func_5301() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64]) */;
    %695 = @func_11157() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
    %696 = @func_12061() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %697 = %692.0;
    %698 = %693.1;
    %699 = %694.1;
    %700 = %695.1;
    %701 = %696.0;
    (%689, %697, %698, %699, %700, %701)
  };
  %702() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_14959() -> (Tensor[(11, 11, 5), float64], Tensor[(420, 4), uint64]) {
  @func_14957() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(420, 4), uint64]) */
}

def @func_6035() -> (Tensor[(14, 12, 10), float64],) {
  @func_6033() /* ty=(Tensor[(14, 12, 10), float64],) */
}

def @func_5369(%var_5355: Tensor[(650), float32]) -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(11, 11, 5), float64]) {
  %703 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %704 = %703.1;
  %705 = cast(%704, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %706 = reshape(%705, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %707 = @func_4118(%706) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool]) */;
  %708 = %707.3;
  %709 = cast(%708, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %710 = cast(%var_5355, dtype="float32") /* ty=Tensor[(650), float32] */;
  %711 = reshape(%709, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %712 = reshape(%710, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %713 = @func_2078(%711, %712) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(1680), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(14, 12, 10), float32]) */;
  %714 = @func_4734() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %715 = %713.1;
  %716 = %714.0;
  (%704, %708, %715, %var_5355, %716)
}

def @func_11071() -> Tensor[(12, 140), float32] {
  %717 = @func_4247() /* ty=(Tensor[(12, 140), float32],) */;
  %717.0
}

def @func_6063() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) {
  @func_6061() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) */
}

def @func_5456() -> (Tensor[(11, 11, 5), float64],) {
  %720 = fn () -> (Tensor[(11, 11, 5), float64],) {
    %718 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %719 = %718.0;
    (%719,)
  };
  %720() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_3617() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  @func_3615() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_13669() -> (Tensor[(14, 12, 10), bool],) {
  %721 = @func_5807() /* ty=Tensor[(14, 12, 10), bool] */;
  (%721,)
}

def @func_3668() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  @func_3666() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */
}

def @func_9572(%var_9570: Tensor[(5, 11, 3), float32], %var_9571: Tensor[(5, 11, 3), float32]) -> (Tensor[(5, 11, 3), float32],) {
  @func_9568(%var_9570, %var_9571) /* ty=(Tensor[(5, 11, 3), float32],) */
}

def @func_7216() -> (Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 1, 12), float32], float32) {
  @func_7214() /* ty=(Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 1, 12), float32], float32) */
}

def @func_8078() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64]) {
  @func_8076() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_3478() -> Tensor[(12, 140), float32] {
  %722 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %722.2
}

def @main() -> (Tensor[(420, 4), float64],) {
  %723 = @func_14959() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(420, 4), uint64]) */;
  %724 = %723.1;
  %725 = cast(%724, dtype="float32") /* ty=Tensor[(420, 4), float32] */;
  %726 = atanh(%725) /* ty=Tensor[(420, 4), float32] */;
  %727 = cast(%726, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
  %728 = acos(%727) /* ty=Tensor[(420, 4), float64] */;
  (%728,)
}

def @func_2730() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  @func_2728() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_5809() -> Tensor[(14, 12, 10), bool] {
  @func_5807() /* ty=Tensor[(14, 12, 10), bool] */
}

def @func_14544() -> (Tensor[(11, 11, 5), float64],) {
  @func_14542() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_11661() -> (Tensor[(14, 12, 10), float32],) {
  %729 = @func_10916() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float32], Tensor[(14, 12, 10), float32]) */;
  %730 = %729.4;
  (%730,)
}

def @func_14059(%var_14054: float32) -> (Tensor[(14, 12, 10), float64], Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64], float32) {
  %731 = @func_3332() /* ty=(Tensor[(14, 12, 10), float64],) */;
  %732 = @func_4178() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) */;
  %733 = cast(%var_14054, dtype="float32") /* ty=float32 */;
  %734 = reshape(%733, newshape=[]) /* ty=float32 */;
  %735 = @func_3970(%734) /* ty=(Tensor[(14, 1, 12), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %736 = %731.0;
  %737 = %732.1;
  %738 = %735.1;
  (%736, %737, %738, %var_14054)
}

def @func_10469() -> (Tensor[(11, 11, 5), float64],) {
  %741 = fn () -> (Tensor[(11, 11, 5), float64],) {
    %739 = @func_3541() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
    %740 = %739.1;
    (%740,)
  };
  %741() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_4413() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float64]) {
  %742 = @func_3666() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %743 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
  %744 = cast(%743, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %745 = %742.1;
  %746 = sqrt(%744) /* ty=Tensor[(12, 140), float64] */;
  (%745, %746)
}

def @func_3666() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %747 = @func_3541() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
  %748 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %749 = %747.0;
  %750 = %748.1;
  (%749, %750)
}

def @func_11881(%var_11879: Tensor[(14, 7, 8), float32], %var_11880: Tensor[(14, 7, 8), float32]) -> Tensor[(14, 7, 8), bool] {
  @func_11877(%var_11879, %var_11880) /* ty=Tensor[(14, 7, 8), bool] */
}

def @func_4572() -> (Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) {
  %751 = @func_4178() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) */;
  %752 = %751.1;
  %753 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  (%752, %753)
}

def @func_6656() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %758 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
    %754 = @func_5455() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %755 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
    %756 = %754.0;
    %757 = %755.1;
    (%756, %757)
  };
  %758() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */
}

def @func_11487() -> (Tensor[(11, 11, 5), float64],) {
  @func_11485() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_4248() -> (Tensor[(12, 140), float32],) {
  %761 = fn () -> (Tensor[(12, 140), float32],) {
    %759 = @func_4178() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool]) */;
    %760 = %759.0;
    (%760,)
  };
  %761() /* ty=(Tensor[(12, 140), float32],) */
}

def @func_14387() -> (Tensor[(11, 11, 5), float64],) {
  %764 = fn () -> (Tensor[(11, 11, 5), float64],) {
    %762 = @func_7077() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %763 = %762.0;
    (%763,)
  };
  %764() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_4734() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %765 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %766 = @func_2542() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %767 = @func_3615() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %768 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  %769 = %765.0;
  %770 = %766.0;
  %771 = %767.0;
  (%768, %769, %770, %771)
}

def @func_3796() -> Tensor[(12, 140), float32] {
  %772 = @func_3541() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
  %772.0
}

def @func_9028() -> (Tensor[(11, 11, 5), float64],) {
  @func_9026() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_14204() -> Tensor[(12, 140), float32] {
  @func_14202() /* ty=Tensor[(12, 140), float32] */
}

def @func_3888() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %773 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %774 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %775 = %773.0;
  %776 = %774.0;
  (%775, %776)
}

def @func_5758(%var_5745: Tensor[(12, 140), float32]) -> Tensor[(12, 140), float32] {
  %777 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %778 = %777.2;
  %779 = cast(%var_5745, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %780 = shape_of(%778, dtype="int32") /* ty=Tensor[(2), int32] */;
  %781 = cast(%778, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  add(%781, %782) /* ty=Tensor[(12, 140), float32] */
}

def @func_10235() -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32]) {
  @func_10233() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32]) */
}

def @func_13538() -> (Tensor[(14, 12, 10), float64],) {
  %783 = @func_3332() /* ty=(Tensor[(14, 12, 10), float64],) */;
  %784 = %783.0;
  (%784,)
}

def @func_9526() -> Tensor[(9, 5, 6), float64] {
  %786 = fn () -> Tensor[(9, 5, 6), float64] {
    %785 = @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
    %785.0
  };
  %786() /* ty=Tensor[(9, 5, 6), float64] */
}

def @func_2942() -> Tensor[(11, 11, 5), float64] {
  %788 = fn () -> Tensor[(11, 11, 5), float64] {
    %787 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %787.0
  };
  %788() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_7124() -> (Tensor[(14, 12, 10), int64], Tensor[(14, 12, 10), float32], Tensor[(13, 10, 5), float32], Tensor[(1, 650), float32], Tensor[(14, 1, 12), float32], float32) {
  @func_7122() /* ty=(Tensor[(14, 12, 10), int64], Tensor[(14, 12, 10), float32], Tensor[(13, 10, 5), float32], Tensor[(1, 650), float32], Tensor[(14, 1, 12), float32], float32) */
}

def @func_8693() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) {
  %789 = @func_2542() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %790 = cast(meta[relay.Constant][18] /* ty=Tensor[(650), float32] */, dtype="float32") /* ty=Tensor[(650), float32] */;
  %791 = reshape(%790, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %792 = @func_5369(%791) /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(11, 11, 5), float64]) */;
  %793 = @func_4855() /* ty=(Tensor[(12, 140), float32],) */;
  %794 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %795 = @func_4638() /* ty=Tensor[(11, 11, 5), float64] */;
  %796 = %789.0;
  %797 = %792.2;
  %798 = %793.0;
  %799 = %794.0;
  (%795, %796, %797, meta[relay.Constant][18] /* ty=Tensor[(650), float32] */, %798, %799)
}

def @func_3480() -> Tensor[(12, 140), float32] {
  @func_3478() /* ty=Tensor[(12, 140), float32] */
}

def @func_5055() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), float32]) {
  %800 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
  %801 = cast(%800, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %802 = reshape(%801, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %803 = @func_2474(%802) /* ty=(Tensor[(14, 12, 10), float32],) */;
  %804 = %803.0;
  (%800, %804)
}

def @func_11433() -> (Tensor[(12, 140), float32], Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %805 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %806 = @func_11157() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %807 = %805.0;
  %808 = @func_5807() /* ty=Tensor[(14, 12, 10), bool] */;
  %809 = %806.0;
  %810 = @func_8440() /* ty=Tensor[(12, 140), float32] */;
  (%807, %808, %809, %810)
}

def @func_12433() -> (Tensor[(12, 140), float32],) {
  @func_12431() /* ty=(Tensor[(12, 140), float32],) */
}

def @func_6972() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %817 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
    %811 = @func_6889() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %812 = @func_4572() /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
    %813 = @func_4692() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
    %814 = %811.1;
    %815 = %812.1;
    %816 = %813.1;
    (%814, %815, %816)
  };
  %817() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */
}

def @func_12036() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %818 = @func_11974() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %819 = @func_4247() /* ty=(Tensor[(12, 140), float32],) */;
  %820 = @func_5892() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %821 = %818.1;
  %822 = %819.0;
  %823 = %820.1;
  (%821, %822, %823)
}

def @func_8920() -> (Tensor[(11, 11, 5), float64],) {
  %825 = fn () -> (Tensor[(11, 11, 5), float64],) {
    %824 = @func_2941() /* ty=Tensor[(11, 11, 5), float64] */;
    (%824,)
  };
  %825() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_12671() -> (Tensor[(14, 12, 10), float64], Tensor[(13, 10, 5), float32], Tensor[(12, 140), float32]) {
  %833 = fn () -> (Tensor[(14, 12, 10), float64], Tensor[(13, 10, 5), float32], Tensor[(12, 140), float32]) {
    %826 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
    %827 = %826.1;
    %828 = cast(%827, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
    %829 = reshape(%828, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
    %830 = @func_2415(%829) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32]) */;
    %831 = %830.4;
    %832 = @func_10008() /* ty=Tensor[(12, 140), float32] */;
    (%827, %831, %832)
  };
  %833() /* ty=(Tensor[(14, 12, 10), float64], Tensor[(13, 10, 5), float32], Tensor[(12, 140), float32]) */
}

def @func_9465(%var_9464: Tensor[(156), float64]) -> (float32, Tensor[(156), float64], Tensor[(156), float64]) {
  %840 = fn (%var_9450: Tensor[(156), float64]) -> (float32, Tensor[(156), float64], Tensor[(156), float64]) {
    %834 = @func_8891() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 1, 12), float32], float32) */;
    %835 = cast(%var_9450, dtype="float64") /* ty=Tensor[(156), float64] */;
    %836 = reshape(%835, newshape=[156]) /* ty=Tensor[(156), float64] */;
    %837 = @func_4803(%836) /* ty=(Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(156), float64]) */;
    %838 = %834.2;
    %839 = %837.3;
    (%838, %839, %var_9450)
  };
  %840(%var_9464) /* ty=(float32, Tensor[(156), float64], Tensor[(156), float64]) */
}

def @func_8546() -> Tensor[(14, 12, 10), int64] {
  %841 = fn () -> Tensor[(14, 12, 10), int64] {
    @func_7650() /* ty=Tensor[(14, 12, 10), int64] */
  };
  %841() /* ty=Tensor[(14, 12, 10), int64] */
}

def @func_2227() -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) {
  %852 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) {
    %842 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %843 = %842.0;
    %844 = cast(%843, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
    %845 = cast(meta[relay.Constant][19] /* ty=Tensor[(12, 140), float32] */, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
    %846 = cast(meta[relay.Constant][19] /* ty=Tensor[(12, 140), float32] */, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
    %847 = reshape(%845, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
    %848 = reshape(%846, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
    %849 = @func_1107(%847, %848) /* ty=(Tensor[(14, 12, 10), float32], Tensor[(14, 12, 10), float64]) */;
    %850 = sigmoid(%844) /* ty=Tensor[(11, 11, 5), float64] */;
    %851 = %849.1;
    (%850, %851, meta[relay.Constant][19] /* ty=Tensor[(12, 140), float32] */)
  };
  %852() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */
}

def @func_14866() -> Tensor[(11, 11, 5), float64] {
  @func_14864() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_5011(%var_5009: Tensor[(650), float32], %var_5010: Tensor[(12, 140), float32]) -> (Tensor[(325, 2), float32], Tensor[(650), float32], Tensor[(12, 140), uint8], Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(12, 140), uint32]) {
  @func_5007(%var_5009, %var_5010) /* ty=(Tensor[(325, 2), float32], Tensor[(650), float32], Tensor[(12, 140), uint8], Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(12, 140), uint32]) */
}

def @func_8605() -> Tensor[(12, 140), float32] {
  @func_8603() /* ty=Tensor[(12, 140), float32] */
}

def @func_13964() -> (Tensor[(12, 140), float32],) {
  %853 = @func_12253() /* ty=Tensor[(12, 140), float32] */;
  (%853,)
}

def @func_14336(%var_14333: Tensor[(156), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(156), float64]) {
  %854 = cast(%var_14333, dtype="float64") /* ty=Tensor[(156), float64] */;
  %855 = reshape(%854, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
  %856 = @func_2998(%855) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(11, 11, 5), float64]) */;
  %857 = @func_3361() /* ty=Tensor[(11, 11, 5), float64] */;
  %858 = %856.1;
  (%857, %858, %var_14333)
}

def @func_11663() -> (Tensor[(14, 12, 10), float32],) {
  @func_11661() /* ty=(Tensor[(14, 12, 10), float32],) */
}

def @func_8107() -> Tensor[(12, 140), float32] {
  %859 = fn () -> Tensor[(12, 140), float32] {
    @func_2498() /* ty=Tensor[(12, 140), float32] */
  };
  %859() /* ty=Tensor[(12, 140), float32] */
}

def @func_5301() -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64]) {
  %860 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %861 = @func_4572() /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
  %862 = %861.0;
  %863 = cast(%862, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %864 = log2(%863) /* ty=Tensor[(14, 12, 10), float32] */;
  %865 = cast(%862, dtype="bool") /* ty=Tensor[(14, 12, 10), bool] */;
  %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%864, dtype="bool") /* ty=Tensor[(14, 12, 10), bool] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %869 = not_equal(%867, %868) /* ty=Tensor[(14, 12, 10), bool] */;
  %870 = cast(%869, dtype="int64") /* ty=Tensor[(14, 12, 10), int64] */;
  %871 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(%864, dtype="int64") /* ty=Tensor[(14, 12, 10), int64] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %874 = %860.0;
  %875 = add(%872, %873) /* ty=Tensor[(14, 12, 10), int64] */;
  (%874, %875)
}

def @func_8354() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  @func_8352() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_3461() -> (Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  @func_3459() /* ty=(Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */
}

def @func_9091() -> (Tensor[(11, 11, 5), float64],) {
  %876 = @func_5455() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %877 = %876.0;
  (%877,)
}

def @func_6010() -> Tensor[(11, 11, 5), float64] {
  @func_6008() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_12566() -> Tensor[(11, 11, 5), float64] {
  @func_12564() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_13976() -> Tensor[(12, 140), float32] {
  %878 = fn () -> Tensor[(12, 140), float32] {
    @func_12253() /* ty=Tensor[(12, 140), float32] */
  };
  %878() /* ty=Tensor[(12, 140), float32] */
}

def @func_2081(%var_2079: Tensor[(1680), float32], %var_2080: Tensor[(650), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(1680), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(14, 12, 10), float32]) {
  %899 = fn (%var_2051: Tensor[(1680), float32], %var_2066: Tensor[(650), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(1680), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(14, 12, 10), float32]) {
    %879 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %880 = cast(%var_2051, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %881 = cast(%var_2051, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %882 = reshape(%880, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
    %883 = reshape(%881, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
    %884 = @func_1107(%882, %883) /* ty=(Tensor[(14, 12, 10), float32], Tensor[(14, 12, 10), float64]) */;
    %885 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %886 = cast(%var_2066, dtype="float32") /* ty=Tensor[(650), float32] */;
    %887 = reshape(%886, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float32] */;
    %888 = @func_480(%887) /* ty=(Tensor[(13, 10, 5), float32],) */;
    %889 = %884.1;
    %890 = cast(%889, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
    %891 = cast(%var_2051, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %892 = reshape(%890, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
    %893 = reshape(%891, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float32] */;
    %894 = @func_1107(%892, %893) /* ty=(Tensor[(14, 12, 10), float32], Tensor[(14, 12, 10), float64]) */;
    %895 = %879.0;
    %896 = %885.0;
    %897 = %888.0;
    %898 = %894.0;
    (%895, %889, %var_2051, %896, %897, %var_2066, %898)
  };
  %899(%var_2079, %var_2080) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(1680), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(14, 12, 10), float32]) */
}

def @func_3000(%var_2999: Tensor[(1, 12, 13), float64]) -> (Tensor[(1, 12, 13), float64], Tensor[(11, 11, 5), float64]) {
  %904 = fn (%var_2983: Tensor[(1, 12, 13), float64]) -> (Tensor[(1, 12, 13), float64], Tensor[(11, 11, 5), float64]) {
    %900 = cast(%var_2983, dtype="float64") /* ty=Tensor[(1, 12, 13), float64] */;
    %901 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %902 = asinh(%900) /* ty=Tensor[(1, 12, 13), float64] */;
    %903 = %901.0;
    (%902, %903)
  };
  %904(%var_2999) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_5249() -> Tensor[(11, 11, 5), float64] {
  %906 = fn () -> Tensor[(11, 11, 5), float64] {
    %905 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %905.0
  };
  %906() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_483(%var_481: Tensor[(13, 10, 5), float32]) -> (Tensor[(13, 10, 5), float32],) {
  @func_480(%var_481) /* ty=(Tensor[(13, 10, 5), float32],) */
}

def @func_3542() -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) {
  %911 = fn () -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) {
    %907 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
    %908 = @func_3060() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %909 = %907.0;
    %910 = %908.1;
    (%909, %910)
  };
  %911() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */
}

def @func_9922() -> Tensor[(11, 11, 5), float64] {
  %912 = fn () -> Tensor[(11, 11, 5), float64] {
    @func_4680() /* ty=Tensor[(11, 11, 5), float64] */
  };
  %912() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_6785(%var_6784: Tensor[(12, 140), float32]) -> (Tensor[(156), uint32], Tensor[(12, 140), float32]) {
  %922 = fn (%var_6774: Tensor[(12, 140), float32]) -> (Tensor[(156), uint32], Tensor[(12, 140), float32]) {
    %913 = @func_6096() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(1, 13, 12), uint32], Tensor[(156), uint32]) */;
    %914 = @func_4692() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
    %915 = %914.1;
    %916 = cast(%var_6774, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
    %917 = shape_of(%915, dtype="int32") /* ty=Tensor[(2), int32] */;
    %918 = cast(%915, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
    %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %920 = %913.3;
    %921 = power(%918, %919) /* ty=Tensor[(12, 140), float32] */;
    (%920, %921)
  };
  %922(%var_6784) /* ty=(Tensor[(156), uint32], Tensor[(12, 140), float32]) */
}

def @func_13054(%var_13052: Tensor[(1872), float64]) -> (Tensor[(14, 12, 10), bool], Tensor[(1872), float64], Tensor[(12, 140), bool]) {
  @func_13051(%var_13052) /* ty=(Tensor[(14, 12, 10), bool], Tensor[(1872), float64], Tensor[(12, 140), bool]) */
}

def @func_11223() -> (Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(325, 2), float32]) {
  %923 = @func_6599() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %924 = cast(meta[relay.Constant][20] /* ty=Tensor[(325, 2), float32] */, dtype="float32") /* ty=Tensor[(325, 2), float32] */;
  %925 = reshape(%924, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float32] */;
  %926 = @func_480(%925) /* ty=(Tensor[(13, 10, 5), float32],) */;
  %927 = %923.0;
  %928 = %926.0;
  (%927, %928, meta[relay.Constant][20] /* ty=Tensor[(325, 2), float32] */)
}

def @func_3729(%var_3728: Tensor[(14, 12, 10), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) {
  %942 = fn (%var_3714: Tensor[(14, 12, 10), float64]) -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) {
    %929 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %930 = @func_3060() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %931 = %930.0;
    %932 = cast(%931, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
    %933 = @func_3332() /* ty=(Tensor[(14, 12, 10), float64],) */;
    %934 = %933.0;
    %935 = cast(%var_3714, dtype="bool") /* ty=Tensor[(14, 12, 10), bool] */;
    %936 = shape_of(%934, dtype="int32") /* ty=Tensor[(3), int32] */;
    %937 = cast(%934, dtype="bool") /* ty=Tensor[(14, 12, 10), bool] */;
    %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %939 = %929.0;
    %940 = asinh(%932) /* ty=Tensor[(11, 11, 5), float64] */;
    %941 = greater_equal(%937, %938) /* ty=Tensor[(14, 12, 10), bool] */;
    (%939, %940, %941)
  };
  %942(%var_3728) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) */
}

def @func_13249() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(1, 13, 12), uint32], Tensor[(78, 2), uint32]) {
  %943 = @func_8693() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
  %944 = cast(meta[relay.Constant][21] /* ty=Tensor[(78, 2), uint32] */, dtype="uint32") /* ty=Tensor[(78, 2), uint32] */;
  %945 = reshape(%944, newshape=[1, 13, 12]) /* ty=Tensor[(1, 13, 12), uint32] */;
  %946 = @func_5777(%945) /* ty=(Tensor[(1, 13, 12), uint32],) */;
  %947 = %943.5;
  %948 = @func_10280() /* ty=Tensor[(12, 140), float32] */;
  %949 = %946.0;
  (%947, %948, %949, meta[relay.Constant][21] /* ty=Tensor[(78, 2), uint32] */)
}

def @func_10798() -> (Tensor[(11, 11, 5), float64],) {
  %950 = @func_10468() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %951 = %950.0;
  (%951,)
}

def @func_3079() -> Tensor[(11, 11, 5), float64] {
  %953 = fn () -> Tensor[(11, 11, 5), float64] {
    %952 = @func_2589() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %952.0
  };
  %953() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_3459() -> (Tensor[(9, 5, 6), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %954 = cast(meta[relay.Constant][22] /* ty=Tensor[(9, 5, 6), float64] */, dtype="float64") /* ty=Tensor[(9, 5, 6), float64] */;
  %955 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %956 = cosh(%954) /* ty=Tensor[(9, 5, 6), float64] */;
  %957 = @func_2498() /* ty=Tensor[(12, 140), float32] */;
  %958 = %955.0;
  (%956, %957, %958)
}

def @func_14732() -> (Tensor[(12, 140), bool], Tensor[(1680), float32], Tensor[(15, 12, 12), int16]) {
  %976 = fn () -> (Tensor[(12, 140), bool], Tensor[(1680), float32], Tensor[(15, 12, 12), int16]) {
    %959 = cast(meta[relay.Constant][23] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %960 = reshape(%959, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
    %961 = @func_14584() /* ty=(Tensor[(15, 12, 12), float32],) */;
    %962 = %961.0;
    %963 = cast(%962, dtype="float32") /* ty=Tensor[(15, 12, 12), float32] */;
    %964 = sqrt(%963) /* ty=Tensor[(15, 12, 12), float32] */;
    %965 = cast(%962, dtype="float64") /* ty=Tensor[(15, 12, 12), float64] */;
    %966 = shape_of(%964, dtype="int32") /* ty=Tensor[(3), int32] */;
    %967 = cast(%964, dtype="float64") /* ty=Tensor[(15, 12, 12), float64] */;
    %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %969 = floor_divide(%967, %968) /* ty=Tensor[(15, 12, 12), float64] */;
    %970 = cast(%969, dtype="int16") /* ty=Tensor[(15, 12, 12), int16] */;
    %971 = shape_of(%964, dtype="int32") /* ty=Tensor[(3), int32] */;
    %972 = cast(%964, dtype="int16") /* ty=Tensor[(15, 12, 12), int16] */;
    %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %974 = @func_4519(%960) /* ty=Tensor[(12, 140), bool] */;
    %975 = minimum(%972, %973) /* ty=Tensor[(15, 12, 12), int16] */;
    (%974, meta[relay.Constant][23] /* ty=Tensor[(1680), float32] */, %975)
  };
  %976() /* ty=(Tensor[(12, 140), bool], Tensor[(1680), float32], Tensor[(15, 12, 12), int16]) */
}

def @func_14542() -> (Tensor[(11, 11, 5), float64],) {
  %977 = @func_3888() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %978 = %977.0;
  (%978,)
}

def @func_6033() -> (Tensor[(14, 12, 10), float64],) {
  %979 = @func_3332() /* ty=(Tensor[(14, 12, 10), float64],) */;
  %980 = %979.0;
  (%980,)
}

def @func_12330() -> (Tensor[(11, 11, 5), float64],) {
  @func_12328() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_13671() -> (Tensor[(14, 12, 10), bool],) {
  @func_13669() /* ty=(Tensor[(14, 12, 10), bool],) */
}

def @func_5136(%var_5135: Tensor[(11, 11, 5), float64]) -> (Tensor[(11, 11, 5), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %991 = fn (%var_5083: Tensor[(11, 11, 5), float64]) -> (Tensor[(11, 11, 5), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
    %981 = @func_2542() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %982 = %981.0;
    %983 = cast(%var_5083, dtype="float32") /* ty=Tensor[(11, 11, 5), float32] */;
    %984 = shape_of(%982, dtype="int32") /* ty=Tensor[(3), int32] */;
    %985 = cast(%982, dtype="float32") /* ty=Tensor[(11, 11, 5), float32] */;
    %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %987 = @func_4441() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %988 = divide(%985, %986) /* ty=Tensor[(11, 11, 5), float32] */;
    %989 = %987.0;
    %990 = @func_2941() /* ty=Tensor[(11, 11, 5), float64] */;
    (%988, %989, %990)
  };
  %991(%var_5135) /* ty=(Tensor[(11, 11, 5), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_8263() -> (Tensor[(11, 11, 5), float64],) {
  %994 = fn () -> (Tensor[(11, 11, 5), float64],) {
    %992 = @func_4441() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %993 = %992.0;
    (%993,)
  };
  %994() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_12512() -> Tensor[(11, 11, 5), float64] {
  %996 = fn () -> Tensor[(11, 11, 5), float64] {
    %995 = @func_3888() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %995.1
  };
  %996() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_7391() -> (Tensor[(8, 2, 4), float64], Tensor[(12, 140), float32]) {
  @func_7389() /* ty=(Tensor[(8, 2, 4), float64], Tensor[(12, 140), float32]) */
}

def @func_9026() -> (Tensor[(11, 11, 5), float64],) {
  %997 = @func_3409() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %998 = %997.0;
  (%998,)
}

def @func_14957() -> (Tensor[(11, 11, 5), float64], Tensor[(420, 4), uint64]) {
  %999 = @func_9638() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(420, 4), float32]) */;
  %1000 = %999.2;
  %1001 = cast(%1000, dtype="float64") /* ty=Tensor[(420, 4), float64] */;
  %1002 = asinh(%1001) /* ty=Tensor[(420, 4), float64] */;
  %1003 = cast(%1000, dtype="uint64") /* ty=Tensor[(420, 4), uint64] */;
  %1004 = shape_of(%1002, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1005 = cast(%1002, dtype="uint64") /* ty=Tensor[(420, 4), uint64] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1007 = @func_4638() /* ty=Tensor[(11, 11, 5), float64] */;
  %1008 = bitwise_and(%1005, %1006) /* ty=Tensor[(420, 4), uint64] */;
  (%1007, %1008)
}

def @func_4296() -> Tensor[(12, 140), float32] {
  %1010 = fn () -> Tensor[(12, 140), float32] {
    %1009 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
    %1009.0
  };
  %1010() /* ty=Tensor[(12, 140), float32] */
}

def @func_2474(%var_2460: Tensor[(14, 12, 10), float64]) -> (Tensor[(14, 12, 10), float32],) {
  %1011 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %1012 = %1011.1;
  %1013 = cast(%var_2460, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %1014 = shape_of(%1012, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1015 = cast(%1012, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1017 = divide(%1015, %1016) /* ty=Tensor[(14, 12, 10), float32] */;
  (%1017,)
}

def @func_8589() -> (Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64]) {
  %1018 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %1019 = %1018.0;
  %1020 = cast(%1019, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %1021 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1022 = log(%1020) /* ty=Tensor[(12, 140), float64] */;
  %1023 = %1021.0;
  (%1022, %1023)
}

def @func_5140() -> (Tensor[(12, 140), float64],) {
  %1024 = @func_4413() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float64]) */;
  %1025 = %1024.1;
  (%1025,)
}

def @func_12003() -> (Tensor[(11, 11, 5), float64], Tensor[(15, 14, 7), float32], Tensor[(1470), float32]) {
  %1026 = @func_5219() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %1027 = cast(meta[relay.Constant][24] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1028 = cast(meta[relay.Constant][24] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %1029 = reshape(%1027, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), float32] */;
  %1030 = reshape(%1028, newshape=[15, 14, 7]) /* ty=Tensor[(15, 14, 7), float32] */;
  %1031 = @func_10727(%1029, %1030) /* ty=(Tensor[(15, 14, 7), float32], Tensor[(12, 140), float32]) */;
  %1032 = %1026.0;
  %1033 = %1031.0;
  (%1032, %1033, meta[relay.Constant][24] /* ty=Tensor[(1470), float32] */)
}

def @func_8990(%var_8988: Tensor[(14, 7, 4), uint64], %var_8989: Tensor[(14, 7, 4), uint64]) -> (Tensor[(14, 7, 4), uint64],) {
  @func_8986(%var_8988, %var_8989) /* ty=(Tensor[(14, 7, 4), uint64],) */
}

def @func_13146() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  @func_13144() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */
}

def @func_14586() -> (Tensor[(15, 12, 12), float32],) {
  @func_14584() /* ty=(Tensor[(15, 12, 12), float32],) */
}

def @func_2277() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %1034 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1035 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %1036 = %1034.0;
  %1037 = %1035.2;
  (%1036, %1037)
}

def @func_4857() -> (Tensor[(12, 140), float32],) {
  @func_4855() /* ty=(Tensor[(12, 140), float32],) */
}

def @func_6891() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  @func_6889() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_7214() -> (Tensor[(12, 140), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 1, 12), float32], float32) {
  %1038 = @func_5825() /* ty=(Tensor[(12, 140), float64], Tensor[(12, 140), float32]) */;
  %1039 = %1038.1;
  %1040 = cast(%1039, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %1041 = @func_3615() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %1042 = cast(-6.65456f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1043 = reshape(%1042, newshape=[]) /* ty=float32 */;
  %1044 = @func_3970(%1043) /* ty=(Tensor[(14, 1, 12), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %1045 = atan(%1040) /* ty=Tensor[(12, 140), float64] */;
  %1046 = %1041.1;
  %1047 = %1044.0;
  (%1045, %1046, %1047, -6.65456f /* ty=float32 */)
}

def @func_6990() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %1048 = @func_6714() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64]) */;
  %1049 = @func_4158() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
  %1050 = %1048.0;
  %1051 = %1049.0;
  (%1050, %1051)
}

def @func_2855(%var_2839: Tensor[(650), float32]) -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32]) {
  %1052 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %1053 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %1054 = %1052.2;
  %1055 = cast(%1054, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %1056 = cast(%var_2839, dtype="float32") /* ty=Tensor[(650), float32] */;
  %1057 = reshape(%1055, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %1058 = reshape(%1056, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %1059 = @func_2078(%1057, %1058) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(1680), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(14, 12, 10), float32]) */;
  %1060 = %1053.0;
  %1061 = %1059.4;
  (%1054, %1060, %1061, %var_2839)
}

def @func_3523() -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) {
  %1066 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) {
    %1062 = @func_2728() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %1063 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
    %1064 = %1062.0;
    %1065 = %1063.1;
    (%1064, %1065)
  };
  %1066() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) */
}

def @func_13144() -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %1067 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %1068 = @func_11071() /* ty=Tensor[(12, 140), float32] */;
  %1069 = %1067.1;
  (%1068, %1069)
}

def @func_7651() -> Tensor[(14, 12, 10), int64] {
  %1071 = fn () -> Tensor[(14, 12, 10), int64] {
    %1070 = @func_5301() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64]) */;
    %1070.1
  };
  %1071() /* ty=Tensor[(14, 12, 10), int64] */
}

def @func_480(%var_474: Tensor[(13, 10, 5), float32]) -> (Tensor[(13, 10, 5), float32],) {
  %1072 = cast(%var_474, dtype="float32") /* ty=Tensor[(13, 10, 5), float32] */;
  %1073 = cosh(%1072) /* ty=Tensor[(13, 10, 5), float32] */;
  (%1073,)
}

def @func_11159() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  @func_11157() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */
}

def @func_8169() -> (Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64], Tensor[(1680), float64]) {
  @func_8167() /* ty=(Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64], Tensor[(1680), float64]) */
}

def @func_10434(%var_10433: Tensor[(7, 16, 14), float32]) -> (Tensor[(7, 16, 14), float64],) {
  %1081 = fn (%var_10405: Tensor[(7, 16, 14), float32]) -> (Tensor[(7, 16, 14), float64],) {
    %1074 = cast(%var_10405, dtype="float32") /* ty=Tensor[(7, 16, 14), float32] */;
    %1075 = sqrt(%1074) /* ty=Tensor[(7, 16, 14), float32] */;
    %1076 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 16, 14), float32] */, dtype="float64") /* ty=Tensor[(7, 16, 14), float64] */;
    %1077 = shape_of(%1075, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1078 = cast(%1075, dtype="float64") /* ty=Tensor[(7, 16, 14), float64] */;
    %1079 = dyn.reshape(%1076, %1077, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1080 = power(%1078, %1079) /* ty=Tensor[(7, 16, 14), float64] */;
    (%1080,)
  };
  %1081(%var_10433) /* ty=(Tensor[(7, 16, 14), float64],) */
}

def @func_9423(%var_9421: Tensor[(15, 12, 12), float32]) -> (Tensor[(15, 12, 12), uint8],) {
  @func_9420(%var_9421) /* ty=(Tensor[(15, 12, 12), uint8],) */
}

def @func_12253() -> Tensor[(12, 140), float32] {
  %1082 = @func_4247() /* ty=(Tensor[(12, 140), float32],) */;
  %1082.0
}

def @func_8396() -> (Tensor[(11, 11, 5), float64],) {
  %1084 = fn () -> (Tensor[(11, 11, 5), float64],) {
    %1083 = @func_4680() /* ty=Tensor[(11, 11, 5), float64] */;
    (%1083,)
  };
  %1084() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_2418(%var_2416: Tensor[(1680), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32]) {
  @func_2415(%var_2416) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32]) */
}

def @func_2542() -> (Tensor[(11, 11, 5), float64],) {
  %1085 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %1086 = %1085.0;
  (%1086,)
}

def @func_3362() -> Tensor[(11, 11, 5), float64] {
  %1088 = fn () -> Tensor[(11, 11, 5), float64] {
    %1087 = @func_2728() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %1087.0
  };
  %1088() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_7305(%var_7304: float32) -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], float32) {
  %1099 = fn (%var_7296: float32) -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], float32) {
    %1089 = @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */;
    %1090 = @func_3888() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %1091 = %1090.1;
    %1092 = cast(%1091, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
    %1093 = cast(%var_7296, dtype="float32") /* ty=float32 */;
    %1094 = reshape(%1093, newshape=[]) /* ty=float32 */;
    %1095 = @func_3970(%1094) /* ty=(Tensor[(14, 1, 12), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %1096 = %1089.0;
    %1097 = asin(%1092) /* ty=Tensor[(11, 11, 5), float64] */;
    %1098 = %1095.1;
    (%1096, %1097, %1098, %var_7296)
  };
  %1099(%var_7304) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], float32) */
}

def @func_4805(%var_4804: Tensor[(156), float64]) -> (Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(156), float64]) {
  %1109 = fn (%var_4774: Tensor[(156), float64]) -> (Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(156), float64]) {
    %1100 = @func_2681() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
    %1101 = %1100.0;
    %1102 = cast(%1101, dtype="float32") /* ty=Tensor[(11, 11, 5), float32] */;
    %1103 = cast(%var_4774, dtype="float64") /* ty=Tensor[(156), float64] */;
    %1104 = reshape(%1103, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float64] */;
    %1105 = @func_2998(%1104) /* ty=(Tensor[(1, 12, 13), float64], Tensor[(11, 11, 5), float64]) */;
    %1106 = atanh(%1102) /* ty=Tensor[(11, 11, 5), float32] */;
    %1107 = @func_3478() /* ty=Tensor[(12, 140), float32] */;
    %1108 = %1105.1;
    (%1106, %1107, %1108, %var_4774)
  };
  %1109(%var_4804) /* ty=(Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(156), float64]) */
}

def @func_1111(%var_1109: Tensor[(14, 12, 10), float32], %var_1110: Tensor[(14, 12, 10), float32]) -> (Tensor[(14, 12, 10), float32], Tensor[(14, 12, 10), float64]) {
  @func_1107(%var_1109, %var_1110) /* ty=(Tensor[(14, 12, 10), float32], Tensor[(14, 12, 10), float64]) */
}

def @func_9373() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(15, 12, 12), float32]) {
  @func_9371() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(15, 12, 12), float32]) */
}

def @func_4681() -> Tensor[(11, 11, 5), float64] {
  %1110 = fn () -> Tensor[(11, 11, 5), float64] {
    @func_3361() /* ty=Tensor[(11, 11, 5), float64] */
  };
  %1110() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_5372(%var_5370: Tensor[(650), float32]) -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(11, 11, 5), float64]) {
  @func_5369(%var_5370) /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(11, 11, 5), float64]) */
}

def @func_14408() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), uint8], Tensor[(1680), float64], Tensor[(1872), float64]) {
  %1111 = @func_12003() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(15, 14, 7), float32], Tensor[(1470), float32]) */;
  %1112 = cast(meta[relay.Constant][26] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %1113 = cast(meta[relay.Constant][27] /* ty=Tensor[(1872), float64] */, dtype="float64") /* ty=Tensor[(1872), float64] */;
  %1114 = cast(meta[relay.Constant][26] /* ty=Tensor[(1680), float64] */, dtype="bool") /* ty=Tensor[(1680), bool] */;
  %1115 = reshape(%1112, newshape=[12, 140]) /* ty=Tensor[(12, 140), float64] */;
  %1116 = reshape(%1113, newshape=[12, 156]) /* ty=Tensor[(12, 156), float64] */;
  %1117 = reshape(%1114, newshape=[12, 140]) /* ty=Tensor[(12, 140), bool] */;
  %1118 = @func_3159(%1115, %1116, %1117) /* ty=(Tensor[(12, 140), int32], Tensor[(1, 12, 13), float64], Tensor[(12, 156), uint16], Tensor[(12, 140), uint8]) */;
  %1119 = %1111.0;
  %1120 = %1118.3;
  (%1119, %1120, meta[relay.Constant][26] /* ty=Tensor[(1680), float64] */, meta[relay.Constant][27] /* ty=Tensor[(1872), float64] */)
}

def @func_2591() -> (Tensor[(11, 11, 5), float64],) {
  @func_2589() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_11368() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], float32, Tensor[(11, 11, 5), float64]) {
  @func_11366() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], float32, Tensor[(11, 11, 5), float64]) */
}

def @func_4522(%var_4520: Tensor[(12, 140), float32]) -> Tensor[(12, 140), bool] {
  @func_4519(%var_4520) /* ty=Tensor[(12, 140), bool] */
}

def @func_10800() -> (Tensor[(11, 11, 5), float64],) {
  @func_10798() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_5987(%var_5986: Tensor[(12, 140), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float64]) {
  %1128 = fn (%var_5977: Tensor[(12, 140), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float64]) {
    %1121 = @func_3478() /* ty=Tensor[(12, 140), float32] */;
    %1122 = cast(%var_5977, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
    %1123 = shape_of(%1121, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1124 = cast(%1121, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
    %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1126 = @func_3361() /* ty=Tensor[(11, 11, 5), float64] */;
    %1127 = floor_divide(%1124, %1125) /* ty=Tensor[(12, 140), float64] */;
    (%1126, %1127)
  };
  %1128(%var_5986) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float64]) */
}

def @func_8562() -> Tensor[(12, 140), float32] {
  %1129 = @func_5055() /* ty=(Tensor[(12, 140), float32], Tensor[(14, 12, 10), float32]) */;
  %1129.0
}

def @func_10233() -> (Tensor[(12, 140), float32], Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32]) {
  %1130 = @func_7672() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
  %1131 = @func_9026() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1132 = %1131.0;
  %1133 = cast(%1132, dtype="float32") /* ty=Tensor[(11, 11, 5), float32] */;
  %1134 = @func_9500() /* ty=(Tensor[(12, 140), float32],) */;
  %1135 = %1130.1;
  %1136 = log10(%1133) /* ty=Tensor[(11, 11, 5), float32] */;
  %1137 = %1134.0;
  (%1135, %1136, %1137)
}

def @func_4855() -> (Tensor[(12, 140), float32],) {
  %1138 = @func_4295() /* ty=Tensor[(12, 140), float32] */;
  (%1138,)
}

def @func_10639() -> (Tensor[(12, 140), float32],) {
  %1142 = fn () -> (Tensor[(12, 140), float32],) {
    %1139 = @func_8106() /* ty=Tensor[(12, 140), float32] */;
    %1140 = cast(%1139, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
    %1141 = asin(%1140) /* ty=Tensor[(12, 140), float32] */;
    (%1141,)
  };
  %1142() /* ty=(Tensor[(12, 140), float32],) */
}

def @func_6825() -> Tensor[(12, 140), float32] {
  %1144 = fn () -> Tensor[(12, 140), float32] {
    %1143 = @func_4855() /* ty=(Tensor[(12, 140), float32],) */;
    %1143.0
  };
  %1144() /* ty=Tensor[(12, 140), float32] */
}

def @func_9689() -> (Tensor[(11, 11, 5), float64],) {
  %1147 = fn () -> (Tensor[(11, 11, 5), float64],) {
    %1145 = @func_4905() /* ty=(Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64]) */;
    %1146 = %1145.1;
    (%1146,)
  };
  %1147() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_12255() -> Tensor[(12, 140), float32] {
  @func_12253() /* ty=Tensor[(12, 140), float32] */
}

def @func_10038(%var_10028: Tensor[(15, 6, 2), int32], %var_10029: Tensor[(15, 6, 2), int32]) -> (Tensor[(15, 6, 2), int32], Tensor[(12, 140), float32]) {
  %1148 = cast(%var_10029, dtype="int32") /* ty=Tensor[(15, 6, 2), int32] */;
  %1149 = shape_of(%var_10028, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1150 = cast(%var_10028, dtype="int32") /* ty=Tensor[(15, 6, 2), int32] */;
  %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1152 = @func_8693() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(650), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64]) */;
  %1153 = subtract(%1150, %1151) /* ty=Tensor[(15, 6, 2), int32] */;
  %1154 = %1152.4;
  (%1153, %1154)
}

def @func_7645() -> Tensor[(11, 11, 5), float64] {
  %1155 = @func_2589() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1155.0
}

def @func_11485() -> (Tensor[(11, 11, 5), float64],) {
  %1156 = @func_5455() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1157 = %1156.0;
  (%1157,)
}

def @func_13540() -> (Tensor[(14, 12, 10), float64],) {
  @func_13538() /* ty=(Tensor[(14, 12, 10), float64],) */
}

def @func_14488() -> (Tensor[(11, 11, 5), float64],) {
  %1159 = fn () -> (Tensor[(11, 11, 5), float64],) {
    %1158 = @func_4680() /* ty=Tensor[(11, 11, 5), float64] */;
    (%1158,)
  };
  %1159() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_3832() -> Tensor[(11, 11, 5), float64] {
  %1160 = @func_3409() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1160.0
}

def @func_2279() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */
}

def @func_7122() -> (Tensor[(14, 12, 10), int64], Tensor[(14, 12, 10), float32], Tensor[(13, 10, 5), float32], Tensor[(1, 650), float32], Tensor[(14, 1, 12), float32], float32) {
  %1161 = @func_5301() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64]) */;
  %1162 = %1161.1;
  %1163 = cast(%1162, dtype="float64") /* ty=Tensor[(14, 12, 10), float64] */;
  %1164 = reshape(%1163, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %1165 = @func_2474(%1164) /* ty=(Tensor[(14, 12, 10), float32],) */;
  %1166 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 650), float32] */, dtype="float32") /* ty=Tensor[(1, 650), float32] */;
  %1167 = reshape(%1166, newshape=[13, 10, 5]) /* ty=Tensor[(13, 10, 5), float32] */;
  %1168 = @func_480(%1167) /* ty=(Tensor[(13, 10, 5), float32],) */;
  %1169 = cast(1.46688f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1170 = reshape(%1169, newshape=[]) /* ty=float32 */;
  %1171 = @func_3970(%1170) /* ty=(Tensor[(14, 1, 12), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %1172 = %1165.0;
  %1173 = %1168.0;
  %1174 = %1171.0;
  (%1162, %1172, %1173, meta[relay.Constant][28] /* ty=Tensor[(1, 650), float32] */, %1174, 1.46688f /* ty=float32 */)
}

def @func_8167() -> (Tensor[(11, 11, 5), bool], Tensor[(11, 11, 5), float64], Tensor[(1680), float64]) {
  %1175 = cast(meta[relay.Constant][29] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %1176 = reshape(%1175, newshape=[14, 12, 10]) /* ty=Tensor[(14, 12, 10), float64] */;
  %1177 = @func_3727(%1176) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) */;
  %1178 = @func_8018() /* ty=Tensor[(11, 11, 5), bool] */;
  %1179 = %1177.1;
  (%1178, %1179, meta[relay.Constant][29] /* ty=Tensor[(1680), float64] */)
}

def @func_3411() -> (Tensor[(11, 11, 5), float64],) {
  @func_3409() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_14850() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  %1180 = @func_9804() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) */;
  %1181 = @func_10995() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(15, 6, 2), int32], Tensor[(180), int32]) */;
  %1182 = @func_9500() /* ty=(Tensor[(12, 140), float32],) */;
  %1183 = %1180.0;
  %1184 = %1181.0;
  %1185 = @func_12580() /* ty=Tensor[(11, 11, 5), float64] */;
  %1186 = @func_12511() /* ty=Tensor[(11, 11, 5), float64] */;
  %1187 = @func_6824() /* ty=Tensor[(12, 140), float32] */;
  %1188 = %1182.0;
  %1189 = @func_14535() /* ty=Tensor[(12, 140), float32] */;
  (%1183, %1184, %1185, %1186, %1187, %1188, %1189)
}

def @func_13618(%var_13556: Tensor[(1680), float32], %var_13557: Tensor[(325, 2), float32]) -> (Tensor[(15, 12, 12), float32], Tensor[(1470), float32], Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(392), uint64], Tensor[(325, 2), int32], Tensor[(325, 2), uint64]) {
  %1190 = @func_6519() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
  %1191 = @func_12003() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(15, 14, 7), float32], Tensor[(1470), float32]) */;
  %1192 = cast(%var_13556, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %1193 = cast(%var_13557, dtype="float32") /* ty=Tensor[(325, 2), float32] */;
  %1194 = reshape(%1192, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %1195 = reshape(%1193, newshape=[65, 10]) /* ty=Tensor[(65, 10), float32] */;
  %1196 = @func_8840(%1194, %1195) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(650), float32], Tensor[(1680), float32], Tensor[(65, 10), float32], Tensor[(11, 11, 5), float64]) */;
  %1197 = @func_11259() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 7, 4), uint64], Tensor[(392), uint64], Tensor[(12, 140), float32]) */;
  %1198 = cast(%var_13557, dtype="float64") /* ty=Tensor[(325, 2), float64] */;
  %1199 = sigmoid(%1198) /* ty=Tensor[(325, 2), float64] */;
  %1200 = cast(%1199, dtype="float32") /* ty=Tensor[(325, 2), float32] */;
  %1201 = asinh(%1200) /* ty=Tensor[(325, 2), float32] */;
  %1202 = cast(%1199, dtype="int32") /* ty=Tensor[(325, 2), int32] */;
  %1203 = shape_of(%1201, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1204 = cast(%1201, dtype="int32") /* ty=Tensor[(325, 2), int32] */;
  %1205 = dyn.reshape(%1202, %1203, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1206 = cast(%1199, dtype="uint64") /* ty=Tensor[(325, 2), uint64] */;
  %1207 = shape_of(%1201, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1208 = cast(%1201, dtype="uint64") /* ty=Tensor[(325, 2), uint64] */;
  %1209 = dyn.reshape(%1206, %1207, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1210 = %1190.0;
  %1211 = %1191.2;
  %1212 = %1196.4;
  %1213 = %1197.2;
  %1214 = bitwise_xor(%1204, %1205) /* ty=Tensor[(325, 2), int32] */;
  %1215 = logical_xor(%1208, %1209) /* ty=Tensor[(325, 2), uint64] */;
  (%1210, %1211, %1212, %var_13556, %1213, %1214, %1215)
}

def @func_11855() -> (Tensor[(12, 140), float32],) {
  %1218 = fn () -> (Tensor[(12, 140), float32],) {
    %1216 = @func_4855() /* ty=(Tensor[(12, 140), float32],) */;
    %1217 = %1216.0;
    (%1217,)
  };
  %1218() /* ty=(Tensor[(12, 140), float32],) */
}

def @func_8986(%var_8947: Tensor[(14, 7, 4), uint64], %var_8948: Tensor[(14, 7, 4), uint64]) -> (Tensor[(14, 7, 4), uint64],) {
  %1219 = cast(%var_8948, dtype="uint64") /* ty=Tensor[(14, 7, 4), uint64] */;
  %1220 = shape_of(%var_8947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1221 = cast(%var_8947, dtype="uint64") /* ty=Tensor[(14, 7, 4), uint64] */;
  %1222 = dyn.reshape(%1219, %1220, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1223 = maximum(%1221, %1222) /* ty=Tensor[(14, 7, 4), uint64] */;
  (%1223,)
}

def @func_13622(%var_13620: Tensor[(1680), float32], %var_13621: Tensor[(325, 2), float32]) -> (Tensor[(15, 12, 12), float32], Tensor[(1470), float32], Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(392), uint64], Tensor[(325, 2), int32], Tensor[(325, 2), uint64]) {
  @func_13618(%var_13620, %var_13621) /* ty=(Tensor[(15, 12, 12), float32], Tensor[(1470), float32], Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(392), uint64], Tensor[(325, 2), int32], Tensor[(325, 2), uint64]) */
}

def @func_5142() -> (Tensor[(12, 140), float64],) {
  @func_5140() /* ty=(Tensor[(12, 140), float64],) */
}

def @func_12202() -> Tensor[(12, 140), float32] {
  @func_12200() /* ty=Tensor[(12, 140), float32] */
}

def @func_8927() -> (Tensor[(11, 11, 5), float64],) {
  %1224 = @func_4734() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
  %1225 = %1224.2;
  (%1225,)
}

def @func_12230() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %1229 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
    %1226 = @func_9328() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %1227 = @func_5248() /* ty=Tensor[(11, 11, 5), float64] */;
    %1228 = %1226.2;
    (%1227, %1228)
  };
  %1229() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_6599() -> (Tensor[(11, 11, 5), float64],) {
  %1230 = @func_3078() /* ty=Tensor[(11, 11, 5), float64] */;
  (%1230,)
}

def @func_12564() -> Tensor[(11, 11, 5), float64] {
  %1231 = @func_9857() /* ty=(Tensor[(1680), float64], Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), bool]) */;
  %1231.1
}

def @func_13251() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(1, 13, 12), uint32], Tensor[(78, 2), uint32]) {
  @func_13249() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(1, 13, 12), uint32], Tensor[(78, 2), uint32]) */
}

def @func_12038() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  @func_12036() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */
}

def @func_13908() -> (Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) {
  @func_13906() /* ty=(Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */
}

def @func_8318() -> (Tensor[(12, 140), float64],) {
  @func_8316() /* ty=(Tensor[(12, 140), float64],) */
}

def @func_12697() -> (Tensor[(14, 12, 10), float32],) {
  @func_12695() /* ty=(Tensor[(14, 12, 10), float32],) */
}

def @func_4639() -> Tensor[(11, 11, 5), float64] {
  %1233 = fn () -> Tensor[(11, 11, 5), float64] {
    %1232 = @func_3522() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) */;
    %1232.0
  };
  %1233() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_8929() -> (Tensor[(11, 11, 5), float64],) {
  @func_8927() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_7030(%var_7017: Tensor[(15, 4, 8), float64], %var_7027: Tensor[(1680), float32]) -> (Tensor[(15, 4, 8), float64], Tensor[(11, 11, 5), float64], Tensor[(1680), float32]) {
  %1234 = cast(%var_7017, dtype="float64") /* ty=Tensor[(15, 4, 8), float64] */;
  %1235 = cast(%var_7027, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %1236 = reshape(%1235, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %1237 = @func_5985(%1236) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float64]) */;
  %1238 = sinh(%1234) /* ty=Tensor[(15, 4, 8), float64] */;
  %1239 = %1237.0;
  (%1238, %1239, %var_7027)
}

def @func_13318() -> (Tensor[(11, 11, 5), float64],) {
  %1240 = @func_11485() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1241 = %1240.0;
  (%1241,)
}

def @func_10918() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float32], Tensor[(14, 12, 10), float32]) {
  @func_10916() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float32], Tensor[(14, 12, 10), float32]) */
}

def @func_11877(%var_11859: Tensor[(14, 7, 8), float32], %var_11860: Tensor[(14, 7, 8), float32]) -> Tensor[(14, 7, 8), bool] {
  %1242 = cast(%var_11860, dtype="bool") /* ty=Tensor[(14, 7, 8), bool] */;
  %1243 = shape_of(%var_11859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1244 = cast(%var_11859, dtype="bool") /* ty=Tensor[(14, 7, 8), bool] */;
  %1245 = dyn.reshape(%1242, %1243, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1244, %1245) /* ty=Tensor[(14, 7, 8), bool] */
}

def @func_5220() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %1250 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
    %1246 = @func_3522() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) */;
    %1247 = @func_3832() /* ty=Tensor[(11, 11, 5), float64] */;
    %1248 = %1246.0;
    %1249 = @func_3796() /* ty=Tensor[(12, 140), float32] */;
    (%1247, %1248, %1249)
  };
  %1250() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */
}

def @func_6049() -> (Tensor[(11, 11, 5), float64],) {
  %1251 = @func_3522() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64]) */;
  %1252 = %1251.0;
  (%1252,)
}

def @func_4694() -> (Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) {
  @func_4692() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */
}

def @func_5807() -> Tensor[(14, 12, 10), bool] {
  %1253 = @func_4572() /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */;
  %1253.0
}

def @func_2544() -> (Tensor[(11, 11, 5), float64],) {
  @func_2542() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_7034(%var_7032: Tensor[(15, 4, 8), float64], %var_7033: Tensor[(1680), float32]) -> (Tensor[(15, 4, 8), float64], Tensor[(11, 11, 5), float64], Tensor[(1680), float32]) {
  @func_7030(%var_7032, %var_7033) /* ty=(Tensor[(15, 4, 8), float64], Tensor[(11, 11, 5), float64], Tensor[(1680), float32]) */
}

def @func_9182(%var_9132: Tensor[(9, 650), bool], %var_9177: Tensor[(9, 650), float32]) -> (Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(9, 650), uint32]) {
  %1254 = @func_6467() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(14, 12, 10), int64]) */;
  %1255 = @func_3585() /* ty=(Tensor[(12, 140), float32],) */;
  %1256 = @func_5455() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1257 = %1254.1;
  %1258 = cast(%1257, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %1259 = reshape(%1258, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %1260 = @func_4118(%1259) /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool], Tensor[(12, 140), float32], Tensor[(11, 11, 5), float64], Tensor[(?, 650), bool]) */;
  %1261 = %1260.2;
  %1262 = cast(%1261, dtype="float64") /* ty=Tensor[(?, 650), float64] */;
  %1263 = cast(%var_9132, dtype="float64") /* ty=Tensor[(9, 650), float64] */;
  %1264 = floor_mod(%1262, %1263) /* ty=Tensor[(9, 650), float64] */;
  %1265 = cast(%1264, dtype="float32") /* ty=Tensor[(9, 650), float32] */;
  %1266 = erf(%1265) /* ty=Tensor[(9, 650), float32] */;
  %1267 = cast(%var_9177, dtype="uint32") /* ty=Tensor[(9, 650), uint32] */;
  %1268 = shape_of(%1266, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1269 = cast(%1266, dtype="uint32") /* ty=Tensor[(9, 650), uint32] */;
  %1270 = dyn.reshape(%1267, %1268, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1271 = %1255.0;
  %1272 = %1256.0;
  %1273 = minimum(%1269, %1270) /* ty=Tensor[(9, 650), uint32] */;
  (%1257, %1271, %1272, %1273)
}

def @func_12719() -> Tensor[(11, 11, 5), float64] {
  @func_12717() /* ty=Tensor[(11, 11, 5), float64] */
}

def @func_2324() -> (Tensor[(11, 11, 5), float64],) {
  @func_2322() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_3973(%var_3971: float32) -> (Tensor[(14, 1, 12), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  @func_3970(%var_3971) /* ty=(Tensor[(14, 1, 12), float32], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */
}

def @func_4574() -> (Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) {
  @func_4572() /* ty=(Tensor[(14, 12, 10), bool], Tensor[(11, 11, 5), float64]) */
}

def @func_2765() -> (Tensor[(12, 140), float32],) {
  %1275 = fn () -> (Tensor[(12, 140), float32],) {
    %1274 = @func_2498() /* ty=Tensor[(12, 140), float32] */;
    (%1274,)
  };
  %1275() /* ty=(Tensor[(12, 140), float32],) */
}

def @func_14537() -> Tensor[(12, 140), float32] {
  @func_14535() /* ty=Tensor[(12, 140), float32] */
}

def @func_4482(%var_4480: Tensor[(1680), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(1680), float32]) {
  @func_4479(%var_4480) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(1680), float32]) */
}

def @func_6213() -> (Tensor[(12, 140), float64],) {
  %1276 = @func_4413() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float64]) */;
  %1277 = %1276.1;
  (%1277,)
}

def @func_13426() -> (Tensor[(12, 140), float32],) {
  %1278 = @func_6519() /* ty=(Tensor[(15, 12, 12), float32], Tensor[(12, 140), float32]) */;
  %1279 = %1278.1;
  (%1279,)
}

def @func_2925(%var_2910: Tensor[(325, 2), float32]) -> (Tensor[(12, 140), bool], Tensor[(11, 11, 5), float64], Tensor[(325, 2), float32], Tensor[(11, 11, 5), float64]) {
  %1280 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %1281 = %1280.0;
  %1282 = @func_2764() /* ty=(Tensor[(12, 140), float32],) */;
  %1283 = %1282.0;
  %1284 = cast(%1283, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %1285 = shape_of(%1281, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1286 = cast(%1281, dtype="bool") /* ty=Tensor[(12, 140), bool] */;
  %1287 = dyn.reshape(%1284, %1285, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1288 = less_equal(%1286, %1287) /* ty=Tensor[(12, 140), bool] */;
  %1289 = cast(%1288, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %1290 = cast(%var_2910, dtype="float32") /* ty=Tensor[(325, 2), float32] */;
  %1291 = reshape(%1289, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %1292 = reshape(%1290, newshape=[650]) /* ty=Tensor[(650), float32] */;
  %1293 = @func_2078(%1291, %1292) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(1680), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32], Tensor[(650), float32], Tensor[(14, 12, 10), float32]) */;
  %1294 = @func_1962() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1295 = %1293.3;
  %1296 = %1294.0;
  (%1288, %1295, %var_2910, %1296)
}

def @func_11918() -> Tensor[(12, 140), float32] {
  %1298 = fn () -> Tensor[(12, 140), float32] {
    %1297 = @func_10233() /* ty=(Tensor[(12, 140), float32], Tensor[(11, 11, 5), float32], Tensor[(12, 140), float32]) */;
    %1297.0
  };
  %1298() /* ty=Tensor[(12, 140), float32] */
}

def @func_14852() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) {
  @func_14850() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */
}

def @func_11593() -> (Tensor[(12, 140), uint8], Tensor[(15, 12, 12), float32]) {
  %1307 = fn () -> (Tensor[(12, 140), uint8], Tensor[(15, 12, 12), float32]) {
    %1299 = @func_7672() /* ty=(Tensor[(12, 140), float32], Tensor[(12, 140), float32]) */;
    %1300 = %1299.0;
    %1301 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 140), float32] */, dtype="uint8") /* ty=Tensor[(12, 140), uint8] */;
    %1302 = shape_of(%1300, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1303 = cast(%1300, dtype="uint8") /* ty=Tensor[(12, 140), uint8] */;
    %1304 = dyn.reshape(%1301, %1302, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %1305 = bitwise_xor(%1303, %1304) /* ty=Tensor[(12, 140), uint8] */;
    %1306 = @func_10186() /* ty=Tensor[(15, 12, 12), float32] */;
    (%1305, %1306)
  };
  %1307() /* ty=(Tensor[(12, 140), uint8], Tensor[(15, 12, 12), float32]) */
}

def @func_4443() -> (Tensor[(11, 11, 5), float64],) {
  @func_4441() /* ty=(Tensor[(11, 11, 5), float64],) */
}

def @func_10282() -> Tensor[(12, 140), float32] {
  @func_10280() /* ty=Tensor[(12, 140), float32] */
}

def @func_10188() -> Tensor[(15, 12, 12), float32] {
  @func_10186() /* ty=Tensor[(15, 12, 12), float32] */
}

def @func_12080() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %1311 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
    %1308 = @func_9500() /* ty=(Tensor[(12, 140), float32],) */;
    %1309 = @func_10250() /* ty=Tensor[(11, 11, 5), float64] */;
    %1310 = %1308.0;
    (%1309, %1310)
  };
  %1311() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */
}

def @func_13906() -> (Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) {
  %1312 = @func_2226() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), float64], Tensor[(12, 140), float32]) */;
  %1313 = %1312.1;
  %1314 = cast(%1313, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %1315 = reshape(%1314, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %1316 = @func_5758(%1315) /* ty=Tensor[(12, 140), float32] */;
  (%1313, %1316)
}

def @func_2322() -> (Tensor[(11, 11, 5), float64],) {
  %1317 = @func_2277() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */;
  %1318 = %1317.0;
  (%1318,)
}

def @func_6889() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %1319 = @func_6599() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1320 = @func_4680() /* ty=Tensor[(11, 11, 5), float64] */;
  %1321 = cast(%1320, dtype="float64") /* ty=Tensor[(11, 11, 5), float64] */;
  %1322 = %1319.0;
  %1323 = erf(%1321) /* ty=Tensor[(11, 11, 5), float64] */;
  (%1322, %1323)
}

def @func_7732(%var_7708: Tensor[(13, 10, 5), float32]) -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32], Tensor[(1680), float32], Tensor[(13, 10, 5), uint32]) {
  %1324 = @func_2542() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1325 = cast(meta[relay.Constant][31] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %1326 = reshape(%1325, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %1327 = @func_6783(%1326) /* ty=(Tensor[(156), uint32], Tensor[(12, 140), float32]) */;
  %1328 = %1327.1;
  %1329 = cast(%1328, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %1330 = reshape(%1329, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %1331 = @func_2415(%1330) /* ty=(Tensor[(11, 11, 5), float64], Tensor[(1680), float32], Tensor[(650), float32], Tensor[(11, 11, 5), float64], Tensor[(13, 10, 5), float32]) */;
  %1332 = %1331.4;
  %1333 = cast(%var_7708, dtype="uint32") /* ty=Tensor[(13, 10, 5), uint32] */;
  %1334 = shape_of(%1332, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1335 = cast(%1332, dtype="uint32") /* ty=Tensor[(13, 10, 5), uint32] */;
  %1336 = dyn.reshape(%1333, %1334, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1337 = %1324.0;
  %1338 = right_shift(%1335, %1336) /* ty=Tensor[(13, 10, 5), uint32] */;
  (%1337, %1328, meta[relay.Constant][31] /* ty=Tensor[(1680), float32] */, %1338)
}

def @func_4441() -> (Tensor[(11, 11, 5), float64],) {
  %1339 = @func_3409() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1340 = %1339.0;
  (%1340,)
}

def @func_13470() -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
  %1345 = fn () -> (Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) {
    %1341 = @func_3615() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) */;
    %1342 = @func_10638() /* ty=(Tensor[(12, 140), float32],) */;
    %1343 = %1341.1;
    %1344 = %1342.0;
    (%1343, %1344)
  };
  %1345() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(12, 140), float32]) */
}

def @func_5303() -> (Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64]) {
  @func_5301() /* ty=(Tensor[(11, 11, 5), float64], Tensor[(14, 12, 10), int64]) */
}

def @func_14909() -> (Tensor[(11, 11, 5), float64], Tensor[(11, 11, 5), float64]) {
  %1346 = @func_6599() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1347 = @func_12328() /* ty=(Tensor[(11, 11, 5), float64],) */;
  %1348 = %1346.0;
  %1349 = %1347.0;
  (%1348, %1349)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_6785() -> (Tensor[(16, 4, 2), float32],) {
  %0 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  %3 = rsqrt(%2) /* ty=Tensor[(16, 4, 2), float64] */;
  %4 = cast(%3, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
  %5 = exp(%4) /* ty=Tensor[(16, 4, 2), float32] */;
  (%5,)
}

def @func_8699() -> Tensor[(16, 4, 2), float64] {
  @func_4451() /* ty=Tensor[(16, 4, 2), float64] */
}

def @func_8737() -> (Tensor[(12, 9, 1), float64],) {
  %6 = @func_5369() /* ty=(Tensor[(12, 9, ?), bool], Tensor[(12, 9, 1), float64]) */;
  %7 = %6.1;
  (%7,)
}

def @func_7521(%var_7507: Tensor[(1040, 2), float32]) -> (Tensor[(16, 4, 2), float32], Tensor[(2080), float32], Tensor[(1040, 2), float32], Tensor[(1755), float32]) {
  %8 = cast(%var_7507, dtype="float32") /* ty=Tensor[(1040, 2), float32] */;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %10 = reshape(%8, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %11 = reshape(%9, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %12 = @func_6382(%10, %11) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(16, 13, 10), float32], Tensor[(2080), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(144, 1), int64], Tensor[(1755), float32]) */;
  %13 = @func_7257() /* ty=Tensor[(16, 4, 2), float32] */;
  %14 = %12.2;
  (%13, %14, %var_7507, meta[relay.Constant][0] /* ty=Tensor[(1755), float32] */)
}

def @func_5278(%var_5249: Tensor[(7, 16, 6), float32], %var_5254: Tensor[(30), uint8], %var_5256: Tensor[(144), int64], %var_5257: Tensor[(1755), float32]) -> (Tensor[(7, 16, 6), float32], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(2520), int64]) {
  %15 = cast(%var_5249, dtype="float32") /* ty=Tensor[(7, 16, 6), float32] */;
  %16 = cast(%var_5254, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(2520), float32] */, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %18 = cast(%var_5256, dtype="int64") /* ty=Tensor[(144), int64] */;
  %19 = cast(%var_5257, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %20 = reshape(%16, newshape=[3, 5, 2]) /* ty=Tensor[(3, 5, 2), uint8] */;
  %21 = reshape(%17, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %22 = reshape(%18, newshape=[1, 144]) /* ty=Tensor[(1, 144), int64] */;
  %23 = reshape(%19, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %24 = @func_2210(%20, %21, %22, %23) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(2, 6, 12), float64], Tensor[(1, 144), int64], Tensor[(128), float64], Tensor[(1755), float32]) */;
  %25 = %24.1;
  %26 = cast(%25, dtype="int64") /* ty=Tensor[(12, 14, 15), int64] */;
  %27 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(2520), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %28 = cast(meta[relay.Constant][1] /* ty=Tensor[(2520), float32] */, dtype="int64") /* ty=Tensor[(2520), int64] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?), int64] */;
  %30 = cosh(%15) /* ty=Tensor[(7, 16, 6), float32] */;
  %31 = bitwise_or(%28, %29) /* ty=Tensor[(2520), int64] */;
  (%30, %var_5254, %var_5256, %var_5257, %31)
}

def @func_5491(%var_5483: Tensor[(1755), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(10, 832), float64], Tensor[(8320), float64], Tensor[(1, 144), int64], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) {
  %32 = cast(meta[relay.Constant][2] /* ty=Tensor[(8320), float64] */, dtype="float64") /* ty=Tensor[(8320), float64] */;
  %33 = reshape(%32, newshape=[10, 832]) /* ty=Tensor[(10, 832), float64] */;
  %34 = @func_5307(%33) /* ty=(Tensor[(10, 832), float64],) */;
  %35 = cast(meta[relay.Constant][3] /* ty=Tensor[(30), uint8] */, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %36 = cast(meta[relay.Constant][4] /* ty=Tensor[(2520), float32] */, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %37 = cast(meta[relay.Constant][5] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %38 = cast(%var_5483, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %39 = reshape(%35, newshape=[3, 5, 2]) /* ty=Tensor[(3, 5, 2), uint8] */;
  %40 = reshape(%36, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %41 = reshape(%37, newshape=[1, 144]) /* ty=Tensor[(1, 144), int64] */;
  %42 = reshape(%38, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %43 = @func_2210(%39, %40, %41, %42) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(2, 6, 12), float64], Tensor[(1, 144), int64], Tensor[(128), float64], Tensor[(1755), float32]) */;
  %44 = @func_4388() /* ty=Tensor[(16, 4, 2), float64] */;
  %45 = %34.0;
  %46 = %43.4;
  (%44, %45, meta[relay.Constant][2] /* ty=Tensor[(8320), float64] */, %46, meta[relay.Constant][3] /* ty=Tensor[(30), uint8] */, meta[relay.Constant][4] /* ty=Tensor[(2520), float32] */, meta[relay.Constant][5] /* ty=Tensor[(144), int64] */, %var_5483)
}

def @func_8730() -> Tensor[(16, 4, 2), float64] {
  @func_4388() /* ty=Tensor[(16, 4, 2), float64] */
}

def @func_5036(%var_5010: Tensor[(30), uint8], %var_5012: Tensor[(144), int64]) -> (Tensor[(16, 4, 2), float64], Tensor[(3, 5, 2), bool], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) {
  %47 = @func_4441() /* ty=(Tensor[(16, 4, 2), float64],) */;
  %48 = cast(%var_5010, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %49 = cast(meta[relay.Constant][6] /* ty=Tensor[(2520), float32] */, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %50 = cast(%var_5012, dtype="int64") /* ty=Tensor[(144), int64] */;
  %51 = cast(meta[relay.Constant][7] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %52 = reshape(%48, newshape=[3, 5, 2]) /* ty=Tensor[(3, 5, 2), uint8] */;
  %53 = reshape(%49, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %54 = reshape(%50, newshape=[1, 144]) /* ty=Tensor[(1, 144), int64] */;
  %55 = reshape(%51, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %56 = @func_2210(%52, %53, %54, %55) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(2, 6, 12), float64], Tensor[(1, 144), int64], Tensor[(128), float64], Tensor[(1755), float32]) */;
  %57 = %47.0;
  %58 = %56.0;
  (%57, %58, %var_5010, meta[relay.Constant][6] /* ty=Tensor[(2520), float32] */, %var_5012, meta[relay.Constant][7] /* ty=Tensor[(1755), float32] */)
}

def @func_3879(%var_3850: Tensor[(14, 4, 5), float32], %var_3856: Tensor[(144), int64], %var_3857: Tensor[(1755), float32], %var_3875: Tensor[(14, 4, 5), float32]) -> (Tensor[(128), float64], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(14, 4, 5), uint8]) {
  %59 = cast(meta[relay.Constant][8] /* ty=Tensor[(30), uint8] */, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %60 = cast(%var_3856, dtype="int64") /* ty=Tensor[(144), int64] */;
  %61 = cast(%var_3857, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %62 = reshape(%59, newshape=[5, 6]) /* ty=Tensor[(5, 6), uint8] */;
  %63 = reshape(%60, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %64 = reshape(%61, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %65 = @func_2399(%62, %63, %64) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(5, 6), uint8], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(15, 13, 9), float32], Tensor[(16, 1, 8), float64], Tensor[(128), float64], Tensor[(15, 13, 9), float32], Tensor[(12, 14, 15), float32], Tensor[(?, 14, 5), uint64]) */;
  %66 = cast(%var_3850, dtype="float32") /* ty=Tensor[(14, 4, 5), float32] */;
  %67 = sinh(%66) /* ty=Tensor[(14, 4, 5), float32] */;
  %68 = cast(%var_3875, dtype="uint8") /* ty=Tensor[(14, 4, 5), uint8] */;
  %69 = shape_of(%67, dtype="int32") /* ty=Tensor[(3), int32] */;
  %70 = cast(%67, dtype="uint8") /* ty=Tensor[(14, 4, 5), uint8] */;
  %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %72 = %65.7;
  %73 = bitwise_or(%70, %71) /* ty=Tensor[(14, 4, 5), uint8] */;
  (%72, meta[relay.Constant][8] /* ty=Tensor[(30), uint8] */, %var_3856, %var_3857, %73)
}

def @func_7015(%var_7000: Tensor[(150, 1), int32], %var_7007: Tensor[(420), int64]) -> (Tensor[(16, 4, 2), float64], Tensor[(15, 13, 9), float32], Tensor[(1755), float32], Tensor[(1, 15, 10), int32], Tensor[(150, 1), int32], Tensor[(16, 4, 2), float64], Tensor[(420), int64]) {
  %74 = @func_4451() /* ty=Tensor[(16, 4, 2), float64] */;
  %75 = cast(%74, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  %76 = cast(meta[relay.Constant][9] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %77 = reshape(%76, newshape=[15, 13, 9]) /* ty=Tensor[(15, 13, 9), float32] */;
  %78 = @func_229(%77) /* ty=(Tensor[(15, 13, 9), float32],) */;
  %79 = cast(%var_7000, dtype="int32") /* ty=Tensor[(150, 1), int32] */;
  %80 = reshape(%79, newshape=[1, 15, 10]) /* ty=Tensor[(1, 15, 10), int32] */;
  %81 = @func_6926(%80) /* ty=(Tensor[(1, 15, 10), int32], Tensor[(16, 4, 2), int64]) */;
  %82 = cast(%var_7007, dtype="int64") /* ty=Tensor[(420), int64] */;
  %83 = cast(%var_7007, dtype="int64") /* ty=Tensor[(420), int64] */;
  %84 = cast(%var_7007, dtype="float64") /* ty=Tensor[(420), float64] */;
  %85 = reshape(%82, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
  %86 = reshape(%83, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
  %87 = reshape(%84, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), float64] */;
  %88 = @func_4596(%85, %86, %87) /* ty=(Tensor[(7, 15, 4), int64], Tensor[(7, 15, 4), float32], Tensor[(13, 8, 8), float32], Tensor[(1, 832), float64], Tensor[(16, 4, 2), float64], Tensor[(7, 15, 4), int8]) */;
  %89 = erf(%75) /* ty=Tensor[(16, 4, 2), float64] */;
  %90 = %78.0;
  %91 = %81.0;
  %92 = %88.4;
  (%89, %90, meta[relay.Constant][9] /* ty=Tensor[(1755), float32] */, %91, %var_7000, %92, %var_7007)
}

def @func_7957() -> (Tensor[(16, 4, 2), float32],) {
  %93 = @func_4964() /* ty=Tensor[(16, 4, 2), float32] */;
  (%93,)
}

def @func_7482() -> (Tensor[(420), int64], Tensor[(12, 9, 1), float64]) {
  %94 = @func_5369() /* ty=(Tensor[(12, 9, ?), bool], Tensor[(12, 9, 1), float64]) */;
  %95 = @func_5393() /* ty=Tensor[(420), int64] */;
  %96 = %94.1;
  (%95, %96)
}

def @func_3461(%var_3454: Tensor[(16, 13, 10), float32]) -> Tensor[(16, 13, 10), float32] {
  %97 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 13, 10), float32] */, dtype="float32") /* ty=Tensor[(16, 13, 10), float32] */;
  %98 = shape_of(%var_3454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%var_3454, dtype="float32") /* ty=Tensor[(16, 13, 10), float32] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%99, %100) /* ty=Tensor[(16, 13, 10), float32] */
}

def @func_5994(%var_5978: Tensor[(16, 4, 2), float64]) -> (Tensor[(16, 4, 2), uint8], Tensor[(16, 4, 2), float32], Tensor[(16, 4, 2), float32], Tensor[(7, 15, 4), float32], Tensor[(420), int64]) {
  %101 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %102 = %101.0;
  %103 = cast(%var_5978, dtype="uint8") /* ty=Tensor[(16, 4, 2), uint8] */;
  %104 = shape_of(%102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%102, dtype="uint8") /* ty=Tensor[(16, 4, 2), uint8] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %107 = cast(%var_5978, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
  %108 = cast(%var_5978, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
  %109 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), int64] */, dtype="int64") /* ty=Tensor[(420), int64] */;
  %110 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), int64] */, dtype="int64") /* ty=Tensor[(420), int64] */;
  %111 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), int64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %112 = reshape(%109, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
  %113 = reshape(%110, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
  %114 = reshape(%111, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), float64] */;
  %115 = @func_4596(%112, %113, %114) /* ty=(Tensor[(7, 15, 4), int64], Tensor[(7, 15, 4), float32], Tensor[(13, 8, 8), float32], Tensor[(1, 832), float64], Tensor[(16, 4, 2), float64], Tensor[(7, 15, 4), int8]) */;
  %116 = subtract(%105, %106) /* ty=Tensor[(16, 4, 2), uint8] */;
  %117 = atan(%107) /* ty=Tensor[(16, 4, 2), float32] */;
  %118 = atanh(%108) /* ty=Tensor[(16, 4, 2), float32] */;
  %119 = %115.1;
  (%116, %117, %118, %119, meta[relay.Constant][11] /* ty=Tensor[(420), int64] */)
}

def @func_6088() -> (Tensor[(16, 4, 2), int64],) {
  %120 = @func_4904() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %121 = %120.0;
  (%121,)
}

def @func_8287() -> Tensor[(1755), float32] {
  %122 = @func_6655() /* ty=(Tensor[(16, 4, 2), float32], Tensor[(10, 832), float64], Tensor[(1755), float32], Tensor[(13, 8, 8), float32], Tensor[(832, 1), float64]) */;
  %123 = %122.2;
  %124 = cast(%123, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %125 = asin(%124) /* ty=Tensor[(1755), float64] */;
  %126 = cast(%125, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %127 = sin(%126) /* ty=Tensor[(1755), float64] */;
  %128 = cast(%125, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %129 = shape_of(%127, dtype="int32") /* ty=Tensor[(1), int32] */;
  %130 = cast(%127, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?), float32] */;
  floor_mod(%130, %131) /* ty=Tensor[(1755), float32] */
}

def @func_8633() -> (Tensor[(420), int64],) {
  %132 = @func_7556() /* ty=Tensor[(420), int64] */;
  (%132,)
}

def @func_6055(%var_6023: float32, %var_6024: Tensor[(210), float32], %var_6025: Tensor[(144), int64]) -> (Tensor[(16, 4, 2), float64], Tensor[(2520), float32], float32, Tensor[(210), float32], Tensor[(144), int64], Tensor[(2520), float32], Tensor[(2520), float64]) {
  %133 = cast(%var_6023, dtype="float32") /* ty=float32 */;
  %134 = cast(%var_6024, dtype="float32") /* ty=Tensor[(210), float32] */;
  %135 = cast(%var_6025, dtype="int64") /* ty=Tensor[(144), int64] */;
  %136 = cast(meta[relay.Constant][12] /* ty=Tensor[(2520), float32] */, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %137 = reshape(%133, newshape=[]) /* ty=float32 */;
  %138 = reshape(%134, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float32] */;
  %139 = reshape(%135, newshape=[2, 72]) /* ty=Tensor[(2, 72), int64] */;
  %140 = reshape(%136, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %141 = @func_4723(%137, %138, %139, %140) /* ty=(Tensor[(2, 15, 7), float32], Tensor[(13, 8, 8), float32], Tensor[(2, 72), int64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32]) */;
  %142 = cast(meta[relay.Constant][12] /* ty=Tensor[(2520), float32] */, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %143 = cast(meta[relay.Constant][12] /* ty=Tensor[(2520), float32] */, dtype="float64") /* ty=Tensor[(2520), float64] */;
  %144 = @func_4451() /* ty=Tensor[(16, 4, 2), float64] */;
  %145 = %141.4;
  %146 = acosh(%142) /* ty=Tensor[(2520), float32] */;
  %147 = asin(%143) /* ty=Tensor[(2520), float64] */;
  (%144, %145, %var_6023, %var_6024, %var_6025, %146, %147)
}

def @func_6382(%var_6371: Tensor[(2080), float32], %var_6380: Tensor[(1755), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(16, 13, 10), float32], Tensor[(2080), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(144, 1), int64], Tensor[(1755), float32]) {
  %148 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %149 = cast(%var_6371, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %150 = reshape(%149, newshape=[16, 13, 10]) /* ty=Tensor[(16, 13, 10), float32] */;
  %151 = cast(meta[relay.Constant][13] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %152 = cast(meta[relay.Constant][14] /* ty=Tensor[(144, 1), int64] */, dtype="int64") /* ty=Tensor[(144, 1), int64] */;
  %153 = cast(%var_6380, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %154 = cast(meta[relay.Constant][13] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %155 = reshape(%151, newshape=[14, 4, 5]) /* ty=Tensor[(14, 4, 5), float32] */;
  %156 = reshape(%152, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %157 = reshape(%153, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %158 = reshape(%154, newshape=[14, 4, 5]) /* ty=Tensor[(14, 4, 5), float32] */;
  %159 = @func_3879(%155, %156, %157, %158) /* ty=(Tensor[(128), float64], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(14, 4, 5), uint8]) */;
  %160 = %148.0;
  %161 = @func_3461(%150) /* ty=Tensor[(16, 13, 10), float32] */;
  %162 = %159.4;
  (%160, %161, %var_6371, %162, meta[relay.Constant][13] /* ty=Tensor[(280), float32] */, meta[relay.Constant][14] /* ty=Tensor[(144, 1), int64] */, %var_6380)
}

def @func_6231(%var_6188: Tensor[(13, 8, 8), float32]) -> Tensor[(13, 8, 8), int32] {
  %163 = @func_5944() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(13, 8, 8), float32], Tensor[(16, 4, 2), float64]) */;
  %164 = %163.1;
  %165 = cast(%var_6188, dtype="float64") /* ty=Tensor[(13, 8, 8), float64] */;
  %166 = shape_of(%164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%164, dtype="float64") /* ty=Tensor[(13, 8, 8), float64] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %169 = maximum(%167, %168) /* ty=Tensor[(13, 8, 8), float64] */;
  %170 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %171 = %170.1;
  %172 = cast(%171, dtype="int32") /* ty=Tensor[(1, 832), int32] */;
  %173 = shape_of(%169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%169, dtype="int32") /* ty=Tensor[(13, 8, 8), int32] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  right_shift(%174, %175) /* ty=Tensor[(13, 8, 8), int32] */
}

def @func_8661(%var_8646: Tensor[(30), uint8], %var_8652: Tensor[(150), int32]) -> (Tensor[(16, 4, 2), float32], Tensor[(2520), int64], Tensor[(672), float32], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(150), int32], Tensor[(330, 1), int64], Tensor[(150), int32]) {
  %176 = cast(meta[relay.Constant][15] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %177 = cast(%var_8646, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %178 = cast(meta[relay.Constant][16] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %179 = cast(meta[relay.Constant][17] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %180 = reshape(%176, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float32] */;
  %181 = reshape(%177, newshape=[30]) /* ty=Tensor[(30), uint8] */;
  %182 = reshape(%178, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %183 = reshape(%179, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %184 = @func_5278(%180, %181, %182, %183) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(2520), int64]) */;
  %185 = cast(meta[relay.Constant][18] /* ty=Tensor[(330, 1), int64] */, dtype="int64") /* ty=Tensor[(330, 1), int64] */;
  %186 = cast(meta[relay.Constant][18] /* ty=Tensor[(330, 1), int64] */, dtype="int64") /* ty=Tensor[(330, 1), int64] */;
  %187 = cast(%var_8652, dtype="int32") /* ty=Tensor[(150), int32] */;
  %188 = reshape(%185, newshape=[3, 11, 10]) /* ty=Tensor[(3, 11, 10), int64] */;
  %189 = reshape(%186, newshape=[3, 11, 10]) /* ty=Tensor[(3, 11, 10), int64] */;
  %190 = reshape(%187, newshape=[150]) /* ty=Tensor[(150), int32] */;
  %191 = @func_7048(%188, %189, %190) /* ty=(Tensor[(3, 11, 10), bool], Tensor[(16, 4, 2), int64], Tensor[(150), int32]) */;
  %192 = @func_4964() /* ty=Tensor[(16, 4, 2), float32] */;
  %193 = %184.4;
  %194 = %191.2;
  (%192, %193, meta[relay.Constant][15] /* ty=Tensor[(672), float32] */, %var_8646, meta[relay.Constant][16] /* ty=Tensor[(144), int64] */, meta[relay.Constant][17] /* ty=Tensor[(1755), float32] */, %194, meta[relay.Constant][18] /* ty=Tensor[(330, 1), int64] */, %var_8652)
}

def @func_8049(%var_8034: Tensor[(104, 20), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(16, 4, 2), float32], Tensor[(7, 15, 4), float32], Tensor[(1755), float32], Tensor[(104, 20), float32]) {
  %195 = @func_6785() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %196 = %195.0;
  %197 = cast(%196, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  %198 = reshape(%197, newshape=[16, 4, 2]) /* ty=Tensor[(16, 4, 2), float64] */;
  %199 = @func_5994(%198) /* ty=(Tensor[(16, 4, 2), uint8], Tensor[(16, 4, 2), float32], Tensor[(16, 4, 2), float32], Tensor[(7, 15, 4), float32], Tensor[(420), int64]) */;
  %200 = cast(%var_8034, dtype="float32") /* ty=Tensor[(104, 20), float32] */;
  %201 = reshape(%200, newshape=[1040, 2]) /* ty=Tensor[(1040, 2), float32] */;
  %202 = @func_7521(%201) /* ty=(Tensor[(16, 4, 2), float32], Tensor[(2080), float32], Tensor[(1040, 2), float32], Tensor[(1755), float32]) */;
  %203 = cast(%var_8034, dtype="float32") /* ty=Tensor[(104, 20), float32] */;
  %204 = @func_5163() /* ty=Tensor[(16, 4, 2), float64] */;
  %205 = %199.3;
  %206 = %202.3;
  %207 = sqrt(%203) /* ty=Tensor[(104, 20), float32] */;
  (%204, %196, %205, %206, %207)
}

def @func_7909() -> (Tensor[(420), int64], Tensor[(16, 4, 2), float32]) {
  %208 = @func_7482() /* ty=(Tensor[(420), int64], Tensor[(12, 9, 1), float64]) */;
  %209 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %210 = %208.0;
  %211 = %209.0;
  (%210, %211)
}

def @func_6755(%var_6717: float32, %var_6718: Tensor[(210), float32], %var_6719: Tensor[(144), int64], %var_6720: Tensor[(2520), float32], %var_6748: Tensor[(1755, 1), float32]) -> (Tensor[(16, 4, 2), float32], Tensor[(12, 14, 15), float32], float32, Tensor[(210), float32], Tensor[(144), int64], Tensor[(2520), float32], Tensor[(1755), float32], Tensor[(1755, 1), float32]) {
  %212 = @func_5525() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %213 = cast(%var_6717, dtype="float32") /* ty=float32 */;
  %214 = cast(%var_6718, dtype="float32") /* ty=Tensor[(210), float32] */;
  %215 = cast(%var_6719, dtype="int64") /* ty=Tensor[(144), int64] */;
  %216 = cast(%var_6720, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %217 = reshape(%213, newshape=[]) /* ty=float32 */;
  %218 = reshape(%214, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float32] */;
  %219 = reshape(%215, newshape=[2, 72]) /* ty=Tensor[(2, 72), int64] */;
  %220 = reshape(%216, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %221 = @func_4723(%217, %218, %219, %220) /* ty=(Tensor[(2, 15, 7), float32], Tensor[(13, 8, 8), float32], Tensor[(2, 72), int64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32]) */;
  %222 = cast(%var_6748, dtype="float32") /* ty=Tensor[(1755, 1), float32] */;
  %223 = reshape(%222, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %224 = @func_5491(%223) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(10, 832), float64], Tensor[(8320), float64], Tensor[(1, 144), int64], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) */;
  %225 = %212.0;
  %226 = %221.3;
  %227 = %224.7;
  (%225, %226, %var_6717, %var_6718, %var_6719, %var_6720, %227, %var_6748)
}

def @func_5307(%var_5291: Tensor[(10, 832), float64]) -> (Tensor[(10, 832), float64],) {
  %228 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %229 = %228.1;
  %230 = cast(%229, dtype="bool") /* ty=Tensor[(1, 832), bool] */;
  %231 = cast(%var_5291, dtype="bool") /* ty=Tensor[(10, 832), bool] */;
  %232 = greater(%230, %231) /* ty=Tensor[(10, 832), bool] */;
  %233 = cast(%232, dtype="float64") /* ty=Tensor[(10, 832), float64] */;
  %234 = sigmoid(%233) /* ty=Tensor[(10, 832), float64] */;
  (%234,)
}

def @func_219(%var_209: Tensor[(12, 14, 15), float32]) -> (Tensor[(12, 14, 15), float32],) {
  %235 = cast(%var_209, dtype="float32") /* ty=Tensor[(12, 14, 15), float32] */;
  %236 = sinh(%235) /* ty=Tensor[(12, 14, 15), float32] */;
  (%236,)
}

def @func_8212() -> (Tensor[(16, 4, 2), int64],) {
  %237 = @func_4904() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %238 = %237.0;
  (%238,)
}

def @func_8134(%var_8129: Tensor[(16, 4, 2), int64]) -> Tensor[(16, 4, 2), uint32] {
  %239 = @func_6563() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64]) */;
  %240 = %239.2;
  %241 = cast(%var_8129, dtype="uint32") /* ty=Tensor[(16, 4, 2), uint32] */;
  %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%240, dtype="uint32") /* ty=Tensor[(16, 4, 2), uint32] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_xor(%243, %244) /* ty=Tensor[(16, 4, 2), uint32] */
}

def @func_4904() -> (Tensor[(16, 4, 2), int64],) {
  %245 = @func_4388() /* ty=Tensor[(16, 4, 2), float64] */;
  %246 = cast(%245, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  %247 = sinh(%246) /* ty=Tensor[(16, 4, 2), float64] */;
  %248 = cast(%247, dtype="int64") /* ty=Tensor[(16, 4, 2), int64] */;
  %249 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%245, dtype="int64") /* ty=Tensor[(16, 4, 2), int64] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %252 = bitwise_or(%250, %251) /* ty=Tensor[(16, 4, 2), int64] */;
  %253 = cast(meta[relay.Constant][19] /* ty=Tensor[(16, 4, 2), int64] */, dtype="int64") /* ty=Tensor[(16, 4, 2), int64] */;
  %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%252, dtype="int64") /* ty=Tensor[(16, 4, 2), int64] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %257 = logical_xor(%255, %256) /* ty=Tensor[(16, 4, 2), int64] */;
  (%257,)
}

def @func_4225(%var_4213: Tensor[(16, 4, 2), float32]) -> (Tensor[(16, 4, 2), bool],) {
  %258 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %259 = %258.0;
  %260 = cast(%var_4213, dtype="bool") /* ty=Tensor[(16, 4, 2), bool] */;
  %261 = shape_of(%259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %262 = cast(%259, dtype="bool") /* ty=Tensor[(16, 4, 2), bool] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %264 = greater(%262, %263) /* ty=Tensor[(16, 4, 2), bool] */;
  (%264,)
}

def @func_6926(%var_6905: Tensor[(1, 15, 10), int32]) -> (Tensor[(1, 15, 10), int32], Tensor[(16, 4, 2), int64]) {
  %265 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %266 = cast(%var_6905, dtype="int32") /* ty=Tensor[(1, 15, 10), int32] */;
  %267 = @func_6563() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64]) */;
  %268 = maximum(%265, %266) /* ty=Tensor[(1, 15, 10), int32] */;
  %269 = %267.0;
  (%268, %269)
}

def @func_4356(%var_4245: Tensor[(210), float64], %var_4246: Tensor[(585, 3), float32], %var_4312: Tensor[(280), float32], %var_4334: Tensor[(2520), float32]) -> (Tensor[(144), int64], Tensor[(210), float64], Tensor[(585, 3), float32], Tensor[(16, 4, 2), float32], Tensor[(16, 13, 10), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(15, 13, 9), float32], Tensor[(104, 20), float32]) {
  %270 = cast(%var_4245, dtype="float64") /* ty=Tensor[(210), float64] */;
  %271 = cast(%var_4246, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %272 = reshape(%270, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float64] */;
  %273 = reshape(%271, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %274 = @func_4113(%272, %273) /* ty=(Tensor[(3, 5, 14), float64], Tensor[(16, 13, 10), float32], Tensor[(2080), float64], Tensor[(3, 5, 14), float64], Tensor[(144), int64], Tensor[(280), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(12, 14, 15), float32], Tensor[(3, 840), float32]) */;
  %275 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %276 = %275.0;
  %277 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %278 = %277.0;
  %279 = cast(%278, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
  %280 = shape_of(%276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %281 = cast(%276, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %283 = cast(meta[relay.Constant][20] /* ty=Tensor[(104, 20), float32] */, dtype="float32") /* ty=Tensor[(104, 20), float32] */;
  %284 = reshape(%283, newshape=[16, 13, 10]) /* ty=Tensor[(16, 13, 10), float32] */;
  %285 = cast(%var_4312, dtype="float32") /* ty=Tensor[(280), float32] */;
  %286 = %274.4;
  %287 = cast(%286, dtype="int64") /* ty=Tensor[(144), int64] */;
  %288 = cast(%var_4246, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %289 = cast(%var_4312, dtype="float32") /* ty=Tensor[(280), float32] */;
  %290 = reshape(%285, newshape=[14, 4, 5]) /* ty=Tensor[(14, 4, 5), float32] */;
  %291 = reshape(%287, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %292 = reshape(%288, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %293 = reshape(%289, newshape=[14, 4, 5]) /* ty=Tensor[(14, 4, 5), float32] */;
  %294 = @func_3879(%290, %291, %292, %293) /* ty=(Tensor[(128), float64], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(14, 4, 5), uint8]) */;
  %295 = cast(meta[relay.Constant][21] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %296 = reshape(%295, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
  %297 = cast(%var_4334, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %298 = reshape(%297, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), float32] */;
  %299 = @func_219(%298) /* ty=(Tensor[(12, 14, 15), float32],) */;
  %300 = cast(%var_4246, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %301 = reshape(%300, newshape=[15, 13, 9]) /* ty=Tensor[(15, 13, 9), float32] */;
  %302 = @func_229(%301) /* ty=(Tensor[(15, 13, 9), float32],) */;
  %303 = cast(meta[relay.Constant][20] /* ty=Tensor[(104, 20), float32] */, dtype="float64") /* ty=Tensor[(104, 20), float64] */;
  %304 = cos(%303) /* ty=Tensor[(104, 20), float64] */;
  %305 = cast(%304, dtype="float32") /* ty=Tensor[(104, 20), float32] */;
  %306 = mod(%281, %282) /* ty=Tensor[(16, 4, 2), float32] */;
  %307 = @func_3461(%284) /* ty=Tensor[(16, 13, 10), float32] */;
  %308 = %294.4;
  %309 = @func_132(%296) /* ty=Tensor[(13, 8, 8), float32] */;
  %310 = %299.0;
  %311 = %302.0;
  %312 = acosh(%305) /* ty=Tensor[(104, 20), float32] */;
  (%286, %var_4245, %var_4246, %306, %307, %308, %var_4312, %309, meta[relay.Constant][21] /* ty=Tensor[(832), float64] */, %310, %var_4334, %311, %312)
}

def @func_4723(%var_4707: float32, %var_4708: Tensor[(2, 15, 7), float32], %var_4713: Tensor[(2, 72), int64], %var_4718: Tensor[(2520), float32]) -> (Tensor[(2, 15, 7), float32], Tensor[(13, 8, 8), float32], Tensor[(2, 72), int64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32]) {
  %313 = cast(%var_4707, dtype="float32") /* ty=float32 */;
  %314 = cast(%var_4708, dtype="float32") /* ty=Tensor[(2, 15, 7), float32] */;
  %315 = cast(%var_4713, dtype="int64") /* ty=Tensor[(2, 72), int64] */;
  %316 = reshape(%315, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %317 = @func_4406(%316) /* ty=(Tensor[(16, 4, 2), float32], Tensor[(13, 8, 8), float32], Tensor[(144), int64], Tensor[(15, 117), float32]) */;
  %318 = cast(%var_4718, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %319 = reshape(%318, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), float32] */;
  %320 = @func_219(%319) /* ty=(Tensor[(12, 14, 15), float32],) */;
  %321 = mod(%313, %314) /* ty=Tensor[(2, 15, 7), float32] */;
  %322 = %317.1;
  %323 = %320.0;
  (%321, %322, %var_4713, %323, %var_4718)
}

def @func_5140() -> (Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) {
  %324 = @func_4904() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %325 = cast(meta[relay.Constant][22] /* ty=Tensor[(144, 1), int64] */, dtype="int64") /* ty=Tensor[(144, 1), int64] */;
  %326 = reshape(%325, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %327 = @func_4406(%326) /* ty=(Tensor[(16, 4, 2), float32], Tensor[(13, 8, 8), float32], Tensor[(144), int64], Tensor[(15, 117), float32]) */;
  %328 = %324.0;
  %329 = %327.3;
  (%328, %329, meta[relay.Constant][22] /* ty=Tensor[(144, 1), int64] */)
}

def @func_6310(%var_6271: Tensor[(144, 15), int64], %var_6287: Tensor[(144, 15), float32], %var_6308: Tensor[(672), float32]) -> (Tensor[(30), uint8], Tensor[(1755), float32], Tensor[(144, 15), float32], Tensor[(16, 4, 2), float64], Tensor[(2520), int64], Tensor[(672), float32]) {
  %330 = cast(meta[relay.Constant][23] /* ty=Tensor[(30), uint8] */, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %331 = @func_5140() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) */;
  %332 = %331.2;
  %333 = cast(%332, dtype="int64") /* ty=Tensor[(144, 1), int64] */;
  %334 = cast(meta[relay.Constant][24] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %335 = reshape(%330, newshape=[5, 6]) /* ty=Tensor[(5, 6), uint8] */;
  %336 = reshape(%333, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %337 = reshape(%334, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %338 = @func_2399(%335, %336, %337) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(5, 6), uint8], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(15, 13, 9), float32], Tensor[(16, 1, 8), float64], Tensor[(128), float64], Tensor[(15, 13, 9), float32], Tensor[(12, 14, 15), float32], Tensor[(?, 14, 5), uint64]) */;
  %339 = %338.4;
  %340 = cast(%339, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %341 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(1755), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %342 = cast(meta[relay.Constant][24] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?), float32] */;
  %344 = cast(%332, dtype="float32") /* ty=Tensor[(144, 1), float32] */;
  %345 = cast(%var_6271, dtype="float32") /* ty=Tensor[(144, 15), float32] */;
  %346 = subtract(%344, %345) /* ty=Tensor[(144, 15), float32] */;
  %347 = cast(%var_6287, dtype="uint32") /* ty=Tensor[(144, 15), uint32] */;
  %348 = shape_of(%346, dtype="int32") /* ty=Tensor[(2), int32] */;
  %349 = cast(%346, dtype="uint32") /* ty=Tensor[(144, 15), uint32] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %351 = logical_xor(%349, %350) /* ty=Tensor[(144, 15), uint32] */;
  %352 = cast(%351, dtype="float32") /* ty=Tensor[(144, 15), float32] */;
  %353 = cosh(%352) /* ty=Tensor[(144, 15), float32] */;
  %354 = cast(%353, dtype="float32") /* ty=Tensor[(144, 15), float32] */;
  %355 = cast(%var_6308, dtype="float32") /* ty=Tensor[(672), float32] */;
  %356 = cast(meta[relay.Constant][23] /* ty=Tensor[(30), uint8] */, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %357 = cast(%332, dtype="int64") /* ty=Tensor[(144, 1), int64] */;
  %358 = cast(meta[relay.Constant][24] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %359 = reshape(%355, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float32] */;
  %360 = reshape(%356, newshape=[30]) /* ty=Tensor[(30), uint8] */;
  %361 = reshape(%357, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %362 = reshape(%358, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %363 = @func_5278(%359, %360, %361, %362) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(2520), int64]) */;
  %364 = divide(%342, %343) /* ty=Tensor[(1755), float32] */;
  %365 = erf(%354) /* ty=Tensor[(144, 15), float32] */;
  %366 = @func_5163() /* ty=Tensor[(16, 4, 2), float64] */;
  %367 = %363.4;
  (meta[relay.Constant][23] /* ty=Tensor[(30), uint8] */, %364, %365, %366, %367, %var_6308)
}

def @func_4406(%var_4401: Tensor[(144), int64]) -> (Tensor[(16, 4, 2), float32], Tensor[(13, 8, 8), float32], Tensor[(144), int64], Tensor[(15, 117), float32]) {
  %368 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %369 = cast(%var_4401, dtype="int64") /* ty=Tensor[(144), int64] */;
  %370 = %368.0;
  %371 = cast(%370, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  %372 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 117), float32] */, dtype="float32") /* ty=Tensor[(15, 117), float32] */;
  %373 = reshape(%369, newshape=[2, 6, 12]) /* ty=Tensor[(2, 6, 12), int64] */;
  %374 = reshape(%371, newshape=[2, 64]) /* ty=Tensor[(2, 64), float64] */;
  %375 = reshape(%372, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %376 = @func_1844(%373, %374, %375) /* ty=(Tensor[(16, 1, 8), float64], Tensor[(2, 64), float64], Tensor[(13, 8, 8), float32], Tensor[(15, 13, 9), float32], Tensor[(1755), float32], Tensor[(2, 6, 12), bool], Tensor[(2, 6, 12), float64]) */;
  %377 = %376.2;
  (%370, %377, %var_4401, meta[relay.Constant][25] /* ty=Tensor[(15, 117), float32] */)
}

def @func_5944() -> (Tensor[(16, 4, 2), int64], Tensor[(13, 8, 8), float32], Tensor[(16, 4, 2), float64]) {
  %378 = @func_5140() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) */;
  %379 = %378.0;
  %380 = cast(%379, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  %381 = reshape(%380, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float64] */;
  %382 = @func_1529(%381) /* ty=(Tensor[(16, 1, 8), float64], Tensor[(832), float64], Tensor[(13, 8, 8), float32]) */;
  %383 = %382.2;
  %384 = @func_4388() /* ty=Tensor[(16, 4, 2), float64] */;
  (%379, %383, %384)
}

def @func_5201() -> (Tensor[(420), int64],) {
  %385 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %386 = %385.2;
  (%386,)
}

def @func_7808(%var_7775: Tensor[(5, 42), float32], %var_7777: Tensor[(1, 2520), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(16, 4, 2), int64], Tensor[(12, 14, 15), float32], float32, Tensor[(5, 42), float32], Tensor[(144), int64], Tensor[(1, 2520), float32], Tensor[(585, 3), float32], Tensor[(1, 2520), float32], Tensor[(30), uint8]) {
  %387 = @func_5525() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %388 = %387.0;
  %389 = cast(%388, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  %390 = @func_6088() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %391 = cast(8.00265f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %392 = cast(%var_7775, dtype="float32") /* ty=Tensor[(5, 42), float32] */;
  %393 = cast(meta[relay.Constant][26] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %394 = cast(%var_7777, dtype="float32") /* ty=Tensor[(1, 2520), float32] */;
  %395 = cast(meta[relay.Constant][27] /* ty=Tensor[(585, 3), float32] */, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %396 = reshape(%391, newshape=[]) /* ty=float32 */;
  %397 = reshape(%392, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %398 = reshape(%393, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %399 = reshape(%394, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %400 = reshape(%395, newshape=[1755, 1]) /* ty=Tensor[(1755, 1), float32] */;
  %401 = @func_6755(%396, %397, %398, %399, %400) /* ty=(Tensor[(16, 4, 2), float32], Tensor[(12, 14, 15), float32], float32, Tensor[(210), float32], Tensor[(144), int64], Tensor[(2520), float32], Tensor[(1755), float32], Tensor[(1755, 1), float32]) */;
  %402 = cast(meta[relay.Constant][28] /* ty=Tensor[(30), uint8] */, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %403 = cast(meta[relay.Constant][26] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %404 = cast(meta[relay.Constant][27] /* ty=Tensor[(585, 3), float32] */, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %405 = reshape(%402, newshape=[5, 6]) /* ty=Tensor[(5, 6), uint8] */;
  %406 = reshape(%403, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %407 = reshape(%404, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %408 = @func_2399(%405, %406, %407) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(5, 6), uint8], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(15, 13, 9), float32], Tensor[(16, 1, 8), float64], Tensor[(128), float64], Tensor[(15, 13, 9), float32], Tensor[(12, 14, 15), float32], Tensor[(?, 14, 5), uint64]) */;
  %409 = sigmoid(%389) /* ty=Tensor[(16, 4, 2), float64] */;
  %410 = %390.0;
  %411 = %401.1;
  %412 = %408.2;
  (%409, %410, %411, 8.00265f /* ty=float32 */, %var_7775, meta[relay.Constant][26] /* ty=Tensor[(144), int64] */, %var_7777, meta[relay.Constant][27] /* ty=Tensor[(585, 3), float32] */, %412, meta[relay.Constant][28] /* ty=Tensor[(30), uint8] */)
}

def @func_5525() -> (Tensor[(16, 4, 2), float32],) {
  %413 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %414 = %413.0;
  (%414,)
}

def @func_4964() -> Tensor[(16, 4, 2), float32] {
  %415 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %415.0
}

def @func_1844(%var_1795: Tensor[(2, 6, 12), int64], %var_1801: Tensor[(2, 64), float64], %var_1829: Tensor[(1755), float32]) -> (Tensor[(16, 1, 8), float64], Tensor[(2, 64), float64], Tensor[(13, 8, 8), float32], Tensor[(15, 13, 9), float32], Tensor[(1755), float32], Tensor[(2, 6, 12), bool], Tensor[(2, 6, 12), float64]) {
  %416 = cast(%var_1801, dtype="float64") /* ty=Tensor[(2, 64), float64] */;
  %417 = reshape(%416, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float64] */;
  %418 = @func_1529(%417) /* ty=(Tensor[(16, 1, 8), float64], Tensor[(832), float64], Tensor[(13, 8, 8), float32]) */;
  %419 = cast(%var_1801, dtype="float64") /* ty=Tensor[(2, 64), float64] */;
  %420 = reshape(%419, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float64] */;
  %421 = @func_1529(%420) /* ty=(Tensor[(16, 1, 8), float64], Tensor[(832), float64], Tensor[(13, 8, 8), float32]) */;
  %422 = cast(%var_1829, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %423 = reshape(%422, newshape=[15, 13, 9]) /* ty=Tensor[(15, 13, 9), float32] */;
  %424 = @func_229(%423) /* ty=(Tensor[(15, 13, 9), float32],) */;
  %425 = cast(%var_1795, dtype="int64") /* ty=Tensor[(2, 6, 12), int64] */;
  %426 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(2, 6, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %427 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 6, 12), int64] */, dtype="int64") /* ty=Tensor[(2, 6, 12), int64] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %429 = maximum(%427, %428) /* ty=Tensor[(2, 6, 12), int64] */;
  %430 = cast(%var_1795, dtype="bool") /* ty=Tensor[(2, 6, 12), bool] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%429, dtype="bool") /* ty=Tensor[(2, 6, 12), bool] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %434 = cast(%var_1795, dtype="float64") /* ty=Tensor[(2, 6, 12), float64] */;
  %435 = %418.0;
  %436 = %421.2;
  %437 = %424.0;
  %438 = greater_equal(%432, %433) /* ty=Tensor[(2, 6, 12), bool] */;
  %439 = sin(%434) /* ty=Tensor[(2, 6, 12), float64] */;
  (%435, %var_1801, %436, %437, %var_1829, %438, %439)
}

def @func_7257() -> Tensor[(16, 4, 2), float32] {
  @func_4964() /* ty=Tensor[(16, 4, 2), float32] */
}

def @func_6563() -> (Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64]) {
  %440 = @func_4904() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %441 = @func_4904() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %442 = @func_6088() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %443 = %440.0;
  %444 = %441.0;
  %445 = %442.0;
  (%443, %444, %445)
}

def @func_5615(%var_5578: float32, %var_5579: Tensor[(210), float32], %var_5581: Tensor[(2520), float32], %var_5606: Tensor[(30), uint8], %var_5607: Tensor[(585, 3), float32]) -> (Tensor[(1, 832), float64], Tensor[(2, 15, 7), float32], float32, Tensor[(210), float32], Tensor[(2520), float32], Tensor[(7, 15, 4), float32], Tensor[(420), int64], Tensor[(16, 4, 2), float64], Tensor[(24, 6), float32], Tensor[(30), uint8], Tensor[(672), float32], Tensor[(30), uint8], Tensor[(585, 3), float32], Tensor[(24, 6), float32]) {
  %446 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %447 = cast(%var_5578, dtype="float32") /* ty=float32 */;
  %448 = cast(%var_5579, dtype="float32") /* ty=Tensor[(210), float32] */;
  %449 = cast(meta[relay.Constant][30] /* ty=Tensor[(24, 6), int64] */, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %450 = cast(%var_5581, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %451 = reshape(%447, newshape=[]) /* ty=float32 */;
  %452 = reshape(%448, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float32] */;
  %453 = reshape(%449, newshape=[2, 72]) /* ty=Tensor[(2, 72), int64] */;
  %454 = reshape(%450, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %455 = @func_4723(%451, %452, %453, %454) /* ty=(Tensor[(2, 15, 7), float32], Tensor[(13, 8, 8), float32], Tensor[(2, 72), int64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32]) */;
  %456 = cast(meta[relay.Constant][31] /* ty=Tensor[(420), int64] */, dtype="int64") /* ty=Tensor[(420), int64] */;
  %457 = cast(meta[relay.Constant][31] /* ty=Tensor[(420), int64] */, dtype="int64") /* ty=Tensor[(420), int64] */;
  %458 = cast(meta[relay.Constant][31] /* ty=Tensor[(420), int64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %459 = reshape(%456, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
  %460 = reshape(%457, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
  %461 = reshape(%458, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), float64] */;
  %462 = @func_4596(%459, %460, %461) /* ty=(Tensor[(7, 15, 4), int64], Tensor[(7, 15, 4), float32], Tensor[(13, 8, 8), float32], Tensor[(1, 832), float64], Tensor[(16, 4, 2), float64], Tensor[(7, 15, 4), int8]) */;
  %463 = @func_4441() /* ty=(Tensor[(16, 4, 2), float64],) */;
  %464 = cast(meta[relay.Constant][30] /* ty=Tensor[(24, 6), int64] */, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %465 = sinh(%464) /* ty=Tensor[(24, 6), float32] */;
  %466 = cast(%465, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %467 = cast(meta[relay.Constant][32] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %468 = cast(%var_5606, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %469 = cast(meta[relay.Constant][30] /* ty=Tensor[(24, 6), int64] */, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %470 = cast(%var_5607, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %471 = reshape(%467, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float32] */;
  %472 = reshape(%468, newshape=[30]) /* ty=Tensor[(30), uint8] */;
  %473 = reshape(%469, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %474 = reshape(%470, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %475 = @func_5278(%471, %472, %473, %474) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(2520), int64]) */;
  %476 = cast(meta[relay.Constant][33] /* ty=Tensor[(24, 6), float32] */, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %477 = shape_of(%465, dtype="int32") /* ty=Tensor[(2), int32] */;
  %478 = cast(%465, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %480 = %446.1;
  %481 = %455.0;
  %482 = %462.1;
  %483 = %463.0;
  %484 = erf(%466) /* ty=Tensor[(24, 6), float32] */;
  %485 = %475.1;
  %486 = mod(%478, %479) /* ty=Tensor[(24, 6), float32] */;
  (%480, %481, %var_5578, %var_5579, %var_5581, %482, meta[relay.Constant][31] /* ty=Tensor[(420), int64] */, %483, %484, %485, meta[relay.Constant][32] /* ty=Tensor[(672), float32] */, %var_5606, %var_5607, %486)
}

def @func_7708(%var_7685: uint16) -> (Tensor[(11, 5, 15), uint16],) {
  %487 = cast(%var_7685, dtype="uint16") /* ty=uint16 */;
  %488 = cast(meta[relay.Constant][34] /* ty=Tensor[(11, 5, 15), uint16] */, dtype="uint16") /* ty=Tensor[(11, 5, 15), uint16] */;
  %489 = maximum(%487, %488) /* ty=Tensor[(11, 5, 15), uint16] */;
  (%489,)
}

def @func_4441() -> (Tensor[(16, 4, 2), float64],) {
  %490 = @func_4388() /* ty=Tensor[(16, 4, 2), float64] */;
  (%490,)
}

def @func_132(%var_100: Tensor[(13, 8, 8), float64]) -> Tensor[(13, 8, 8), float32] {
  %491 = cast(meta[relay.Constant][35] /* ty=Tensor[(13, 8, 8), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 8), float64] */;
  %492 = shape_of(%var_100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %493 = cast(%var_100, dtype="float64") /* ty=Tensor[(13, 8, 8), float64] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %495 = mod(%493, %494) /* ty=Tensor[(13, 8, 8), float64] */;
  %496 = cast(%495, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
  sqrt(%496) /* ty=Tensor[(13, 8, 8), float32] */
}

def @func_8163() -> (Tensor[(420), int64],) {
  %497 = @func_7556() /* ty=Tensor[(420), int64] */;
  (%497,)
}

def @func_5717(%var_5649: Tensor[(6, 13, 15), uint16]) -> (Tensor[(6, 13, 15), uint16], Tensor[(16, 4, 2), int64], Tensor[(2520), float32], Tensor[(1755), float32], Tensor[(6, 13, 15), uint64]) {
  %498 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 13, 15), uint16] */, dtype="uint16") /* ty=Tensor[(6, 13, 15), uint16] */;
  %499 = shape_of(%var_5649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%var_5649, dtype="uint16") /* ty=Tensor[(6, 13, 15), uint16] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %502 = @func_5140() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) */;
  %503 = cast(meta[relay.Constant][37] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %504 = reshape(%503, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %505 = @func_5491(%504) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(10, 832), float64], Tensor[(8320), float64], Tensor[(1, 144), int64], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) */;
  %506 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 13, 15), uint16] */, dtype="float32") /* ty=Tensor[(6, 13, 15), float32] */;
  %507 = asin(%506) /* ty=Tensor[(6, 13, 15), float32] */;
  %508 = cast(%507, dtype="float64") /* ty=Tensor[(6, 13, 15), float64] */;
  %509 = log(%508) /* ty=Tensor[(6, 13, 15), float64] */;
  %510 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 13, 15), float64] */, dtype="uint64") /* ty=Tensor[(6, 13, 15), uint64] */;
  %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%509, dtype="uint64") /* ty=Tensor[(6, 13, 15), uint64] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %514 = bitwise_or(%500, %501) /* ty=Tensor[(6, 13, 15), uint16] */;
  %515 = %502.0;
  %516 = %505.5;
  %517 = left_shift(%512, %513) /* ty=Tensor[(6, 13, 15), uint64] */;
  (%514, %515, %516, meta[relay.Constant][37] /* ty=Tensor[(1755), float32] */, %517)
}

def @func_229(%var_226: Tensor[(15, 13, 9), float32]) -> (Tensor[(15, 13, 9), float32],) {
  %518 = cast(%var_226, dtype="float32") /* ty=Tensor[(15, 13, 9), float32] */;
  %519 = exp(%518) /* ty=Tensor[(15, 13, 9), float32] */;
  (%519,)
}

def @func_8474(%var_8429: Tensor[(8, 3, 9), float32]) -> (Tensor[(8, 3, 9), bool], Tensor[(16, 4, 2), float64]) {
  %520 = cast(%var_8429, dtype="float32") /* ty=Tensor[(8, 3, 9), float32] */;
  %521 = asin(%520) /* ty=Tensor[(8, 3, 9), float32] */;
  %522 = cast(%var_8429, dtype="bool") /* ty=Tensor[(8, 3, 9), bool] */;
  %523 = shape_of(%521, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(%521, dtype="bool") /* ty=Tensor[(8, 3, 9), bool] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %526 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %527 = logical_and(%524, %525) /* ty=Tensor[(8, 3, 9), bool] */;
  %528 = %526.0;
  (%527, %528)
}

def @func_4451() -> Tensor[(16, 4, 2), float64] {
  %529 = @func_4441() /* ty=(Tensor[(16, 4, 2), float64],) */;
  %529.0
}

def @func_5393() -> Tensor[(420), int64] {
  %530 = @func_5201() /* ty=(Tensor[(420), int64],) */;
  %530.0
}

def @func_4113(%var_4070: Tensor[(3, 5, 14), float64], %var_4087: Tensor[(1755), float32]) -> (Tensor[(3, 5, 14), float64], Tensor[(16, 13, 10), float32], Tensor[(2080), float64], Tensor[(3, 5, 14), float64], Tensor[(144), int64], Tensor[(280), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(12, 14, 15), float32], Tensor[(3, 840), float32]) {
  %531 = cast(%var_4070, dtype="float64") /* ty=Tensor[(3, 5, 14), float64] */;
  %532 = cast(meta[relay.Constant][39] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %533 = reshape(%532, newshape=[16, 13, 10]) /* ty=Tensor[(16, 13, 10), float32] */;
  %534 = cast(meta[relay.Constant][39] /* ty=Tensor[(2080), float32] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %535 = cast(%var_4070, dtype="float64") /* ty=Tensor[(3, 5, 14), float64] */;
  %536 = cast(meta[relay.Constant][40] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %537 = cast(meta[relay.Constant][41] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %538 = cast(%var_4087, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %539 = cast(meta[relay.Constant][40] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %540 = reshape(%536, newshape=[14, 4, 5]) /* ty=Tensor[(14, 4, 5), float32] */;
  %541 = reshape(%537, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %542 = reshape(%538, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %543 = reshape(%539, newshape=[14, 4, 5]) /* ty=Tensor[(14, 4, 5), float32] */;
  %544 = @func_3879(%540, %541, %542, %543) /* ty=(Tensor[(128), float64], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(14, 4, 5), uint8]) */;
  %545 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 840), float32] */, dtype="float32") /* ty=Tensor[(3, 840), float32] */;
  %546 = reshape(%545, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), float32] */;
  %547 = @func_219(%546) /* ty=(Tensor[(12, 14, 15), float32],) */;
  %548 = acos(%531) /* ty=Tensor[(3, 5, 14), float64] */;
  %549 = @func_3461(%533) /* ty=Tensor[(16, 13, 10), float32] */;
  %550 = log(%534) /* ty=Tensor[(2080), float64] */;
  %551 = rsqrt(%535) /* ty=Tensor[(3, 5, 14), float64] */;
  %552 = %544.2;
  %553 = %547.0;
  (%548, %549, %550, %551, %552, meta[relay.Constant][40] /* ty=Tensor[(280), float32] */, meta[relay.Constant][41] /* ty=Tensor[(144), int64] */, %var_4087, %553, meta[relay.Constant][42] /* ty=Tensor[(3, 840), float32] */)
}

def @func_4596(%var_4479: Tensor[(7, 15, 4), int64], %var_4480: Tensor[(7, 15, 4), int64], %var_4587: Tensor[(7, 15, 4), float64]) -> (Tensor[(7, 15, 4), int64], Tensor[(7, 15, 4), float32], Tensor[(13, 8, 8), float32], Tensor[(1, 832), float64], Tensor[(16, 4, 2), float64], Tensor[(7, 15, 4), int8]) {
  %554 = cast(%var_4480, dtype="int64") /* ty=Tensor[(7, 15, 4), int64] */;
  %555 = shape_of(%var_4479, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%var_4479, dtype="int64") /* ty=Tensor[(7, 15, 4), int64] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %558 = cast(%var_4480, dtype="float32") /* ty=Tensor[(7, 15, 4), float32] */;
  %559 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 832), float64] */, dtype="float64") /* ty=Tensor[(1, 832), float64] */;
  %560 = reshape(%559, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
  %561 = @func_4441() /* ty=(Tensor[(16, 4, 2), float64],) */;
  %562 = cast(%var_4480, dtype="float64") /* ty=Tensor[(7, 15, 4), float64] */;
  %563 = rsqrt(%562) /* ty=Tensor[(7, 15, 4), float64] */;
  %564 = cast(%563, dtype="float32") /* ty=Tensor[(7, 15, 4), float32] */;
  %565 = sinh(%564) /* ty=Tensor[(7, 15, 4), float32] */;
  %566 = cast(%565, dtype="float32") /* ty=Tensor[(7, 15, 4), float32] */;
  %567 = log(%566) /* ty=Tensor[(7, 15, 4), float32] */;
  %568 = cast(%567, dtype="float64") /* ty=Tensor[(7, 15, 4), float64] */;
  %569 = exp(%568) /* ty=Tensor[(7, 15, 4), float64] */;
  %570 = cast(%var_4587, dtype="int8") /* ty=Tensor[(7, 15, 4), int8] */;
  %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%569, dtype="int8") /* ty=Tensor[(7, 15, 4), int8] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %574 = bitwise_xor(%556, %557) /* ty=Tensor[(7, 15, 4), int64] */;
  %575 = acosh(%558) /* ty=Tensor[(7, 15, 4), float32] */;
  %576 = @func_132(%560) /* ty=Tensor[(13, 8, 8), float32] */;
  %577 = %561.0;
  %578 = bitwise_or(%572, %573) /* ty=Tensor[(7, 15, 4), int8] */;
  (%574, %575, %576, meta[relay.Constant][43] /* ty=Tensor[(1, 832), float64] */, %577, %578)
}

def @func_7856() -> (Tensor[(16, 4, 2), int64],) {
  %579 = @func_4904() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %580 = %579.0;
  (%580,)
}

def @main(%var_8811: Tensor[(9, 2, 13), int16], %var_8812: Tensor[(9, 2, 13), int16]) -> (Tensor[(9, 2, 13), int16], Tensor[(9, 2, 13), float64], Tensor[(9, 2, 13), float64]) {
  %581 = cast(%var_8812, dtype="int16") /* ty=Tensor[(9, 2, 13), int16] */;
  %582 = shape_of(%var_8811, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%var_8811, dtype="int16") /* ty=Tensor[(9, 2, 13), int16] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %585 = cast(%var_8812, dtype="float64") /* ty=Tensor[(9, 2, 13), float64] */;
  %586 = cast(%var_8812, dtype="float32") /* ty=Tensor[(9, 2, 13), float32] */;
  %587 = sin(%586) /* ty=Tensor[(9, 2, 13), float32] */;
  %588 = cast(%587, dtype="float64") /* ty=Tensor[(9, 2, 13), float64] */;
  %589 = right_shift(%583, %584) /* ty=Tensor[(9, 2, 13), int16] */;
  %590 = asin(%585) /* ty=Tensor[(9, 2, 13), float64] */;
  %591 = log(%588) /* ty=Tensor[(9, 2, 13), float64] */;
  (%589, %590, %591)
}

def @func_8411() -> (Tensor[(16, 4, 2), int64],) {
  %592 = @func_5140() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) */;
  %593 = %592.0;
  (%593,)
}

def @func_5751(%var_5745: Tensor[(30), uint8]) -> (Tensor[(15, 117), float32], Tensor[(16, 4, 2), float32], Tensor[(585, 3), float32], float32, Tensor[(210), float32], Tensor[(2520, 1), float32], Tensor[(30), uint8]) {
  %594 = @func_5140() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) */;
  %595 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %596 = cast(-0.536793f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %597 = cast(meta[relay.Constant][44] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %598 = cast(meta[relay.Constant][45] /* ty=Tensor[(2520, 1), float32] */, dtype="float32") /* ty=Tensor[(2520, 1), float32] */;
  %599 = cast(%var_5745, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %600 = %594.1;
  %601 = cast(%600, dtype="float32") /* ty=Tensor[(15, 117), float32] */;
  %602 = reshape(%596, newshape=[]) /* ty=float32 */;
  %603 = reshape(%597, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %604 = reshape(%598, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %605 = reshape(%599, newshape=[30]) /* ty=Tensor[(30), uint8] */;
  %606 = reshape(%601, newshape=[585, 3]) /* ty=Tensor[(585, 3), float32] */;
  %607 = @func_5615(%602, %603, %604, %605, %606) /* ty=(Tensor[(1, 832), float64], Tensor[(2, 15, 7), float32], float32, Tensor[(210), float32], Tensor[(2520), float32], Tensor[(7, 15, 4), float32], Tensor[(420), int64], Tensor[(16, 4, 2), float64], Tensor[(24, 6), float32], Tensor[(30), uint8], Tensor[(672), float32], Tensor[(30), uint8], Tensor[(585, 3), float32], Tensor[(24, 6), float32]) */;
  %608 = %595.0;
  %609 = %607.12;
  (%600, %608, %609, -0.536793f /* ty=float32 */, meta[relay.Constant][44] /* ty=Tensor[(210), float32] */, meta[relay.Constant][45] /* ty=Tensor[(2520, 1), float32] */, %var_5745)
}

def @func_2399(%var_2356: Tensor[(5, 6), uint8], %var_2358: Tensor[(144), int64], %var_2359: Tensor[(1755), float32]) -> (Tensor[(3, 5, 2), bool], Tensor[(5, 6), uint8], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(15, 13, 9), float32], Tensor[(16, 1, 8), float64], Tensor[(128), float64], Tensor[(15, 13, 9), float32], Tensor[(12, 14, 15), float32], Tensor[(?, 14, 5), uint64]) {
  %610 = cast(%var_2356, dtype="uint8") /* ty=Tensor[(5, 6), uint8] */;
  %611 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 2520), float32] */, dtype="float32") /* ty=Tensor[(1, 2520), float32] */;
  %612 = cast(%var_2358, dtype="int64") /* ty=Tensor[(144), int64] */;
  %613 = cast(%var_2359, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %614 = reshape(%610, newshape=[3, 5, 2]) /* ty=Tensor[(3, 5, 2), uint8] */;
  %615 = reshape(%611, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %616 = reshape(%612, newshape=[1, 144]) /* ty=Tensor[(1, 144), int64] */;
  %617 = reshape(%613, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %618 = @func_2210(%614, %615, %616, %617) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(2, 6, 12), float64], Tensor[(1, 144), int64], Tensor[(128), float64], Tensor[(1755), float32]) */;
  %619 = cast(%var_2359, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %620 = reshape(%619, newshape=[15, 13, 9]) /* ty=Tensor[(15, 13, 9), float32] */;
  %621 = @func_229(%620) /* ty=(Tensor[(15, 13, 9), float32],) */;
  %622 = cast(meta[relay.Constant][47] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %623 = reshape(%622, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float64] */;
  %624 = @func_1529(%623) /* ty=(Tensor[(16, 1, 8), float64], Tensor[(832), float64], Tensor[(13, 8, 8), float32]) */;
  %625 = %621.0;
  %626 = cast(%625, dtype="float32") /* ty=Tensor[(15, 13, 9), float32] */;
  %627 = reshape(%626, newshape=[15, 13, 9]) /* ty=Tensor[(15, 13, 9), float32] */;
  %628 = @func_229(%627) /* ty=(Tensor[(15, 13, 9), float32],) */;
  %629 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 2520), float32] */, dtype="float32") /* ty=Tensor[(1, 2520), float32] */;
  %630 = reshape(%629, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), float32] */;
  %631 = @func_219(%630) /* ty=(Tensor[(12, 14, 15), float32],) */;
  %632 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 14, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 14, 5), float64] */;
  %633 = tan(%632) /* ty=Tensor[(1, 14, 5), float64] */;
  %634 = cast(%633, dtype="float32") /* ty=Tensor[(1, 14, 5), float32] */;
  %635 = log2(%634) /* ty=Tensor[(1, 14, 5), float32] */;
  %636 = cast(%635, dtype="float32") /* ty=Tensor[(1, 14, 5), float32] */;
  %637 = log10(%636) /* ty=Tensor[(1, 14, 5), float32] */;
  %638 = cast(%637, dtype="uint64") /* ty=Tensor[(1, 14, 5), uint64] */;
  %639 = shape_of(%633, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%633, dtype="uint64") /* ty=Tensor[(1, 14, 5), uint64] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %642 = %618.0;
  %643 = %624.0;
  %644 = %628.0;
  %645 = %631.0;
  %646 = multiply(%640, %641) /* ty=Tensor[(?, 14, 5), uint64] */;
  (%642, %var_2356, meta[relay.Constant][46] /* ty=Tensor[(1, 2520), float32] */, %var_2358, %var_2359, %625, %643, meta[relay.Constant][47] /* ty=Tensor[(128), float64] */, %644, %645, %646)
}

def @func_4995() -> (Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) {
  %647 = cast(meta[relay.Constant][49] /* ty=Tensor[(420), int64] */, dtype="int64") /* ty=Tensor[(420), int64] */;
  %648 = cast(meta[relay.Constant][49] /* ty=Tensor[(420), int64] */, dtype="int64") /* ty=Tensor[(420), int64] */;
  %649 = cast(meta[relay.Constant][49] /* ty=Tensor[(420), int64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %650 = reshape(%647, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
  %651 = reshape(%648, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
  %652 = reshape(%649, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), float64] */;
  %653 = @func_4596(%650, %651, %652) /* ty=(Tensor[(7, 15, 4), int64], Tensor[(7, 15, 4), float32], Tensor[(13, 8, 8), float32], Tensor[(1, 832), float64], Tensor[(16, 4, 2), float64], Tensor[(7, 15, 4), int8]) */;
  %654 = @func_4388() /* ty=Tensor[(16, 4, 2), float64] */;
  %655 = %653.3;
  (%654, %655, meta[relay.Constant][49] /* ty=Tensor[(420), int64] */)
}

def @func_5901(%var_5809: Tensor[(4, 13, 16), float64], %var_5810: Tensor[(4, 13, 16), float64], %var_5820: Tensor[(210), float64], %var_5821: Tensor[(1755), float32], %var_5823: Tensor[(2520), float32], %var_5895: Tensor[(16, 4, 2), int64]) -> (Tensor[(210), float64], Tensor[(210), float64], Tensor[(1755), float32], Tensor[(280), float32], Tensor[(2520), float32], Tensor[(420), int64], Tensor[(4, 13, 16), bool], Tensor[(4, 13, 16), uint64], Tensor[(6, 13, 15), uint64], Tensor[(1170), uint16], Tensor[(16, 4, 2), int16]) {
  %656 = cast(%var_5820, dtype="float64") /* ty=Tensor[(210), float64] */;
  %657 = cast(%var_5821, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %658 = cast(meta[relay.Constant][50] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %659 = cast(%var_5823, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %660 = reshape(%656, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %661 = reshape(%657, newshape=[585, 3]) /* ty=Tensor[(585, 3), float32] */;
  %662 = reshape(%658, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %663 = reshape(%659, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %664 = @func_4356(%660, %661, %662, %663) /* ty=(Tensor[(144), int64], Tensor[(210), float64], Tensor[(585, 3), float32], Tensor[(16, 4, 2), float32], Tensor[(16, 13, 10), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(15, 13, 9), float32], Tensor[(104, 20), float32]) */;
  %665 = cast(%var_5810, dtype="float64") /* ty=Tensor[(4, 13, 16), float64] */;
  %666 = shape_of(%var_5809, dtype="int32") /* ty=Tensor[(3), int32] */;
  %667 = cast(%var_5809, dtype="float64") /* ty=Tensor[(4, 13, 16), float64] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %669 = divide(%667, %668) /* ty=Tensor[(4, 13, 16), float64] */;
  %670 = cast(%var_5809, dtype="bool") /* ty=Tensor[(4, 13, 16), bool] */;
  %671 = shape_of(%669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%669, dtype="bool") /* ty=Tensor[(4, 13, 16), bool] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %674 = cast(%669, dtype="uint64") /* ty=Tensor[(4, 13, 16), uint64] */;
  %675 = shape_of(%var_5810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%var_5810, dtype="uint64") /* ty=Tensor[(4, 13, 16), uint64] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %678 = cast(meta[relay.Constant][51] /* ty=Tensor[(1170), uint16] */, dtype="uint16") /* ty=Tensor[(1170), uint16] */;
  %679 = reshape(%678, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), uint16] */;
  %680 = @func_5717(%679) /* ty=(Tensor[(6, 13, 15), uint16], Tensor[(16, 4, 2), int64], Tensor[(2520), float32], Tensor[(1755), float32], Tensor[(6, 13, 15), uint64]) */;
  %681 = @func_4904() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %682 = %681.0;
  %683 = cast(%var_5895, dtype="int16") /* ty=Tensor[(16, 4, 2), int16] */;
  %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%682, dtype="int16") /* ty=Tensor[(16, 4, 2), int16] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %687 = %664.1;
  %688 = @func_5393() /* ty=Tensor[(420), int64] */;
  %689 = less(%672, %673) /* ty=Tensor[(4, 13, 16), bool] */;
  %690 = bitwise_or(%676, %677) /* ty=Tensor[(4, 13, 16), uint64] */;
  %691 = %680.4;
  %692 = minimum(%685, %686) /* ty=Tensor[(16, 4, 2), int16] */;
  (%687, %var_5820, %var_5821, meta[relay.Constant][50] /* ty=Tensor[(280), float32] */, %var_5823, %688, %689, %690, %691, meta[relay.Constant][51] /* ty=Tensor[(1170), uint16] */, %692)
}

def @func_6407(%var_6401: Tensor[(16, 4, 2), float64]) -> (Tensor[(16, 4, 2), uint8],) {
  %693 = @func_4451() /* ty=Tensor[(16, 4, 2), float64] */;
  %694 = cast(%var_6401, dtype="uint8") /* ty=Tensor[(16, 4, 2), uint8] */;
  %695 = shape_of(%693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %696 = cast(%693, dtype="uint8") /* ty=Tensor[(16, 4, 2), uint8] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %698 = right_shift(%696, %697) /* ty=Tensor[(16, 4, 2), uint8] */;
  (%698,)
}

def @func_6655() -> (Tensor[(16, 4, 2), float32], Tensor[(10, 832), float64], Tensor[(1755), float32], Tensor[(13, 8, 8), float32], Tensor[(832, 1), float64]) {
  %699 = @func_4964() /* ty=Tensor[(16, 4, 2), float32] */;
  %700 = cast(%699, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
  %701 = cast(meta[relay.Constant][52] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %702 = reshape(%701, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %703 = @func_5491(%702) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(10, 832), float64], Tensor[(8320), float64], Tensor[(1, 144), int64], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) */;
  %704 = cast(meta[relay.Constant][53] /* ty=Tensor[(832, 1), float64] */, dtype="float64") /* ty=Tensor[(832, 1), float64] */;
  %705 = reshape(%704, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
  %706 = acosh(%700) /* ty=Tensor[(16, 4, 2), float32] */;
  %707 = %703.1;
  %708 = @func_132(%705) /* ty=Tensor[(13, 8, 8), float32] */;
  (%706, %707, meta[relay.Constant][52] /* ty=Tensor[(1755), float32] */, %708, meta[relay.Constant][53] /* ty=Tensor[(832, 1), float64] */)
}

def @func_7048(%var_7029: Tensor[(3, 11, 10), int64], %var_7030: Tensor[(3, 11, 10), int64], %var_7040: Tensor[(150), int32]) -> (Tensor[(3, 11, 10), bool], Tensor[(16, 4, 2), int64], Tensor[(150), int32]) {
  %709 = cast(%var_7030, dtype="bool") /* ty=Tensor[(3, 11, 10), bool] */;
  %710 = shape_of(%var_7029, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%var_7029, dtype="bool") /* ty=Tensor[(3, 11, 10), bool] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %713 = cast(%var_7040, dtype="int32") /* ty=Tensor[(150), int32] */;
  %714 = reshape(%713, newshape=[1, 15, 10]) /* ty=Tensor[(1, 15, 10), int32] */;
  %715 = @func_6926(%714) /* ty=(Tensor[(1, 15, 10), int32], Tensor[(16, 4, 2), int64]) */;
  %716 = greater_equal(%711, %712) /* ty=Tensor[(3, 11, 10), bool] */;
  %717 = %715.1;
  (%716, %717, %var_7040)
}

def @func_7389(%var_7371: Tensor[(672), float32], %var_7373: Tensor[(1755), float32]) -> (Tensor[(16, 4, 2), int64], Tensor[(2160), int64], Tensor[(672), float32], Tensor[(1755), bool]) {
  %718 = @func_6088() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %719 = cast(meta[relay.Constant][54] /* ty=Tensor[(2160), int64] */, dtype="int64") /* ty=Tensor[(2160), int64] */;
  %720 = cast(meta[relay.Constant][54] /* ty=Tensor[(2160), int64] */, dtype="float32") /* ty=Tensor[(2160), float32] */;
  %721 = cast(%var_7371, dtype="float32") /* ty=Tensor[(672), float32] */;
  %722 = reshape(%719, newshape=[144, 15]) /* ty=Tensor[(144, 15), int64] */;
  %723 = reshape(%720, newshape=[144, 15]) /* ty=Tensor[(144, 15), float32] */;
  %724 = reshape(%721, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %725 = @func_6310(%722, %723, %724) /* ty=(Tensor[(30), uint8], Tensor[(1755), float32], Tensor[(144, 15), float32], Tensor[(16, 4, 2), float64], Tensor[(2520), int64], Tensor[(672), float32]) */;
  %726 = %725.1;
  %727 = cast(%var_7373, dtype="bool") /* ty=Tensor[(1755), bool] */;
  %728 = shape_of(%726, dtype="int32") /* ty=Tensor[(1), int32] */;
  %729 = cast(%726, dtype="bool") /* ty=Tensor[(1755), bool] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?), bool] */;
  %731 = %718.0;
  %732 = greater(%729, %730) /* ty=Tensor[(1755), bool] */;
  (%731, meta[relay.Constant][54] /* ty=Tensor[(2160), int64] */, %var_7371, %732)
}

def @func_7556() -> Tensor[(420), int64] {
  %733 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %733.2
}

def @func_2210(%var_2181: Tensor[(3, 5, 2), uint8], %var_2189: Tensor[(2520), float32], %var_2206: Tensor[(1, 144), int64], %var_2208: Tensor[(1755), float32]) -> (Tensor[(3, 5, 2), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(2, 6, 12), float64], Tensor[(1, 144), int64], Tensor[(128), float64], Tensor[(1755), float32]) {
  %734 = cast(meta[relay.Constant][55] /* ty=Tensor[(3, 5, 2), uint8] */, dtype="bool") /* ty=Tensor[(3, 5, 2), bool] */;
  %735 = shape_of(%var_2181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %736 = cast(%var_2181, dtype="bool") /* ty=Tensor[(3, 5, 2), bool] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %738 = cast(%var_2189, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %739 = reshape(%738, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), float32] */;
  %740 = @func_219(%739) /* ty=(Tensor[(12, 14, 15), float32],) */;
  %741 = cast(%var_2189, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %742 = cast(%var_2206, dtype="int64") /* ty=Tensor[(1, 144), int64] */;
  %743 = cast(meta[relay.Constant][56] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %744 = cast(%var_2208, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %745 = reshape(%742, newshape=[2, 6, 12]) /* ty=Tensor[(2, 6, 12), int64] */;
  %746 = reshape(%743, newshape=[2, 64]) /* ty=Tensor[(2, 64), float64] */;
  %747 = reshape(%744, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %748 = @func_1844(%745, %746, %747) /* ty=(Tensor[(16, 1, 8), float64], Tensor[(2, 64), float64], Tensor[(13, 8, 8), float32], Tensor[(15, 13, 9), float32], Tensor[(1755), float32], Tensor[(2, 6, 12), bool], Tensor[(2, 6, 12), float64]) */;
  %749 = equal(%736, %737) /* ty=Tensor[(3, 5, 2), bool] */;
  %750 = %740.0;
  %751 = sinh(%741) /* ty=Tensor[(2520), float32] */;
  %752 = %748.6;
  (%749, %750, %751, %752, %var_2206, meta[relay.Constant][56] /* ty=Tensor[(128), float64] */, %var_2208)
}

def @func_7675(%var_7591: Tensor[(10, 15, 9), float32], %var_7623: Tensor[(3, 840), float32]) -> (Tensor[(15, 117), float32], Tensor[(210), float64], Tensor[(140, 2), float32], Tensor[(10, 15, 9), uint8], Tensor[(3, 840), float64], Tensor[(10, 15, 9), bool], Tensor[(13, 8, 8), bool]) {
  %753 = @func_5140() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) */;
  %754 = cast(%var_7591, dtype="float32") /* ty=Tensor[(10, 15, 9), float32] */;
  %755 = atan(%754) /* ty=Tensor[(10, 15, 9), float32] */;
  %756 = cast(%755, dtype="float64") /* ty=Tensor[(10, 15, 9), float64] */;
  %757 = erf(%756) /* ty=Tensor[(10, 15, 9), float64] */;
  %758 = cast(%var_7591, dtype="uint8") /* ty=Tensor[(10, 15, 9), uint8] */;
  %759 = shape_of(%757, dtype="int32") /* ty=Tensor[(3), int32] */;
  %760 = cast(%757, dtype="uint8") /* ty=Tensor[(10, 15, 9), uint8] */;
  %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %762 = cast(%var_7623, dtype="float64") /* ty=Tensor[(3, 840), float64] */;
  %763 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(3, 840), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %764 = cast(meta[relay.Constant][59] /* ty=Tensor[(3, 840), float32] */, dtype="float64") /* ty=Tensor[(3, 840), float64] */;
  %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %766 = cast(meta[relay.Constant][60] /* ty=Tensor[(10, 15, 9), float32] */, dtype="bool") /* ty=Tensor[(10, 15, 9), bool] */;
  %767 = shape_of(%755, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%755, dtype="bool") /* ty=Tensor[(10, 15, 9), bool] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %770 = cast(meta[relay.Constant][57] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %771 = %753.1;
  %772 = cast(%771, dtype="float32") /* ty=Tensor[(15, 117), float32] */;
  %773 = cast(meta[relay.Constant][58] /* ty=Tensor[(140, 2), float32] */, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %774 = cast(meta[relay.Constant][59] /* ty=Tensor[(3, 840), float32] */, dtype="float32") /* ty=Tensor[(3, 840), float32] */;
  %775 = reshape(%770, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %776 = reshape(%772, newshape=[585, 3]) /* ty=Tensor[(585, 3), float32] */;
  %777 = reshape(%773, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %778 = reshape(%774, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %779 = @func_4356(%775, %776, %777, %778) /* ty=(Tensor[(144), int64], Tensor[(210), float64], Tensor[(585, 3), float32], Tensor[(16, 4, 2), float32], Tensor[(16, 13, 10), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(15, 13, 9), float32], Tensor[(104, 20), float32]) */;
  %780 = %779.7;
  %781 = cast(meta[relay.Constant][61] /* ty=Tensor[(13, 8, 8), float32] */, dtype="bool") /* ty=Tensor[(13, 8, 8), bool] */;
  %782 = shape_of(%780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %783 = cast(%780, dtype="bool") /* ty=Tensor[(13, 8, 8), bool] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %785 = logical_xor(%760, %761) /* ty=Tensor[(10, 15, 9), uint8] */;
  %786 = multiply(%764, %765) /* ty=Tensor[(3, 840), float64] */;
  %787 = logical_and(%768, %769) /* ty=Tensor[(10, 15, 9), bool] */;
  %788 = greater_equal(%783, %784) /* ty=Tensor[(13, 8, 8), bool] */;
  (%771, meta[relay.Constant][57] /* ty=Tensor[(210), float64] */, meta[relay.Constant][58] /* ty=Tensor[(140, 2), float32] */, %785, %786, %787, %788)
}

def @func_1529(%var_1512: Tensor[(16, 1, 8), float64]) -> (Tensor[(16, 1, 8), float64], Tensor[(832), float64], Tensor[(13, 8, 8), float32]) {
  %789 = cast(%var_1512, dtype="float64") /* ty=Tensor[(16, 1, 8), float64] */;
  %790 = cast(meta[relay.Constant][62] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %791 = reshape(%790, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
  %792 = @func_132(%791) /* ty=Tensor[(13, 8, 8), float32] */;
  %793 = cast(%792, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
  %794 = sigmoid(%789) /* ty=Tensor[(16, 1, 8), float64] */;
  %795 = log10(%793) /* ty=Tensor[(13, 8, 8), float32] */;
  (%794, meta[relay.Constant][62] /* ty=Tensor[(832), float64] */, %795)
}

def @func_6482(%var_6473: Tensor[(195, 9), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(144), int64], Tensor[(195, 9), float32], Tensor[(16, 4, 2), float32]) {
  %796 = @func_4451() /* ty=Tensor[(16, 4, 2), float64] */;
  %797 = cast(meta[relay.Constant][63] /* ty=Tensor[(16, 4, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%796, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %801 = cast(%var_6473, dtype="float32") /* ty=Tensor[(195, 9), float32] */;
  %802 = reshape(%801, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %803 = @func_5491(%802) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(10, 832), float64], Tensor[(8320), float64], Tensor[(1, 144), int64], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) */;
  %804 = @func_5944() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(13, 8, 8), float32], Tensor[(16, 4, 2), float64]) */;
  %805 = %804.0;
  %806 = cast(%805, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
  %807 = floor_divide(%799, %800) /* ty=Tensor[(16, 4, 2), float64] */;
  %808 = %803.6;
  %809 = cos(%806) /* ty=Tensor[(16, 4, 2), float32] */;
  (%807, %808, %var_6473, %809)
}

def @func_4388() -> Tensor[(16, 4, 2), float64] {
  %810 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %811 = %810.0;
  %812 = cast(%811, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  cosh(%812) /* ty=Tensor[(16, 4, 2), float64] */
}

def @func_8309(%var_8303: Tensor[(13, 3, 12), int8]) -> Tensor[(13, 3, 12), bool] {
  %813 = cast(meta[relay.Constant][64] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %814 = cast(%var_8303, dtype="bool") /* ty=Tensor[(13, 3, 12), bool] */;
  greater(%813, %814) /* ty=Tensor[(13, 3, 12), bool] */
}

def @func_4164() -> (Tensor[(16, 4, 2), float32],) {
  %815 = cast(meta[relay.Constant][65] /* ty=Tensor[(16, 4, 2), float32] */, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
  %816 = asin(%815) /* ty=Tensor[(16, 4, 2), float32] */;
  (%816,)
}

def @func_5163() -> Tensor[(16, 4, 2), float64] {
  %817 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %817.0
}

def @func_8079(%var_8071: Tensor[(1, 15, 7), float32], %var_8072: Tensor[(8, 15, 7), float32]) -> Tensor[(8, 15, 7), float32] {
  %818 = cast(%var_8071, dtype="float32") /* ty=Tensor[(1, 15, 7), float32] */;
  %819 = cast(%var_8072, dtype="float32") /* ty=Tensor[(8, 15, 7), float32] */;
  mod(%818, %819) /* ty=Tensor[(8, 15, 7), float32] */
}

def @func_6169(%var_6112: Tensor[(30), uint8], %var_6122: Tensor[(5, 351), float32], %var_6123: Tensor[(280), float32], %var_6124: Tensor[(6, 420), float32], %var_6158: Tensor[(128), float32]) -> (Tensor[(420), int64], Tensor[(144), int64], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(16, 13, 10), float32], Tensor[(210), float64], Tensor[(280), float32], Tensor[(6, 420), float32], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(16, 4, 2), bool], Tensor[(128), float32], Tensor[(5, 351), float32]) {
  %820 = cast(%var_6112, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %821 = cast(meta[relay.Constant][66] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %822 = reshape(%820, newshape=[30]) /* ty=Tensor[(30), uint8] */;
  %823 = reshape(%821, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %824 = @func_5036(%822, %823) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(3, 5, 2), bool], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) */;
  %825 = cast(meta[relay.Constant][67] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %826 = cast(%var_6122, dtype="float32") /* ty=Tensor[(5, 351), float32] */;
  %827 = cast(%var_6123, dtype="float32") /* ty=Tensor[(280), float32] */;
  %828 = cast(%var_6124, dtype="float32") /* ty=Tensor[(6, 420), float32] */;
  %829 = reshape(%825, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %830 = reshape(%826, newshape=[585, 3]) /* ty=Tensor[(585, 3), float32] */;
  %831 = reshape(%827, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %832 = reshape(%828, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %833 = @func_4356(%829, %830, %831, %832) /* ty=(Tensor[(144), int64], Tensor[(210), float64], Tensor[(585, 3), float32], Tensor[(16, 4, 2), float32], Tensor[(16, 13, 10), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(15, 13, 9), float32], Tensor[(104, 20), float32]) */;
  %834 = cast(%var_6112, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %835 = cast(meta[relay.Constant][66] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %836 = cast(%var_6122, dtype="float32") /* ty=Tensor[(5, 351), float32] */;
  %837 = reshape(%834, newshape=[5, 6]) /* ty=Tensor[(5, 6), uint8] */;
  %838 = reshape(%835, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %839 = reshape(%836, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %840 = @func_2399(%837, %838, %839) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(5, 6), uint8], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(15, 13, 9), float32], Tensor[(16, 1, 8), float64], Tensor[(128), float64], Tensor[(15, 13, 9), float32], Tensor[(12, 14, 15), float32], Tensor[(?, 14, 5), uint64]) */;
  %841 = cast(%var_6112, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %842 = %824.4;
  %843 = cast(%842, dtype="int64") /* ty=Tensor[(144), int64] */;
  %844 = reshape(%841, newshape=[30]) /* ty=Tensor[(30), uint8] */;
  %845 = reshape(%843, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %846 = @func_5036(%844, %845) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(3, 5, 2), bool], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) */;
  %847 = cast(%var_6158, dtype="float32") /* ty=Tensor[(128), float32] */;
  %848 = reshape(%847, newshape=[16, 4, 2]) /* ty=Tensor[(16, 4, 2), float32] */;
  %849 = @func_4225(%848) /* ty=(Tensor[(16, 4, 2), bool],) */;
  %850 = cast(%var_6122, dtype="float32") /* ty=Tensor[(5, 351), float32] */;
  %851 = @func_5393() /* ty=Tensor[(420), int64] */;
  %852 = %833.4;
  %853 = %840.2;
  %854 = %846.4;
  %855 = %849.0;
  %856 = cosh(%850) /* ty=Tensor[(5, 351), float32] */;
  (%851, %842, %var_6112, meta[relay.Constant][66] /* ty=Tensor[(144), int64] */, %852, meta[relay.Constant][67] /* ty=Tensor[(210), float64] */, %var_6123, %var_6124, %853, %854, %855, %var_6158, %856)
}

def @func_8499() -> Tensor[(420), int64] {
  @func_7556() /* ty=Tensor[(420), int64] */
}

def @func_5369() -> (Tensor[(12, 9, ?), bool], Tensor[(12, 9, 1), float64]) {
  %857 = cast(meta[relay.Constant][68] /* ty=Tensor[(12, 9, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %858 = cosh(%857) /* ty=Tensor[(12, 9, 1), float64] */;
  %859 = cast(meta[relay.Constant][68] /* ty=Tensor[(12, 9, 1), float64] */, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %860 = shape_of(%858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %861 = cast(%858, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %863 = cast(meta[relay.Constant][68] /* ty=Tensor[(12, 9, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %864 = not_equal(%861, %862) /* ty=Tensor[(12, 9, ?), bool] */;
  %865 = sinh(%863) /* ty=Tensor[(12, 9, 1), float64] */;
  (%864, %865)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5717(%var_5649: Tensor[(6, 13, 15), uint16]) -> (Tensor[(6, 13, 15), uint16], Tensor[(16, 4, 2), int64], Tensor[(2520), float32], Tensor[(1755), float32], Tensor[(6, 13, 15), uint64]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 13, 15), uint16] */, dtype="uint16") /* ty=Tensor[(6, 13, 15), uint16] */;
  %1 = shape_of(%var_5649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_5649, dtype="uint16") /* ty=Tensor[(6, 13, 15), uint16] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %4 = @func_5140() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) */;
  %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %6 = reshape(%5, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %7 = @func_5491(%6) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(10, 832), float64], Tensor[(8320), float64], Tensor[(1, 144), int64], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) */;
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 13, 15), uint16] */, dtype="float32") /* ty=Tensor[(6, 13, 15), float32] */;
  %9 = asin(%8) /* ty=Tensor[(6, 13, 15), float32] */;
  %10 = cast(%9, dtype="float64") /* ty=Tensor[(6, 13, 15), float64] */;
  %11 = log(%10) /* ty=Tensor[(6, 13, 15), float64] */;
  %12 = cast(meta[relay.Constant][2] /* ty=Tensor[(6, 13, 15), float64] */, dtype="uint64") /* ty=Tensor[(6, 13, 15), uint64] */;
  %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%11, dtype="uint64") /* ty=Tensor[(6, 13, 15), uint64] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %16 = bitwise_or(%2, %3) /* ty=Tensor[(6, 13, 15), uint16] */;
  %17 = %4.0;
  %18 = %7.5;
  %19 = left_shift(%14, %15) /* ty=Tensor[(6, 13, 15), uint64] */;
  (%16, %17, %18, meta[relay.Constant][1] /* ty=Tensor[(1755), float32] */, %19)
}

def @func_5720(%var_5718: Tensor[(6, 13, 15), uint16]) -> (Tensor[(6, 13, 15), uint16], Tensor[(16, 4, 2), int64], Tensor[(2520), float32], Tensor[(1755), float32], Tensor[(6, 13, 15), uint64]) {
  @func_5717(%var_5718) /* ty=(Tensor[(6, 13, 15), uint16], Tensor[(16, 4, 2), int64], Tensor[(2520), float32], Tensor[(1755), float32], Tensor[(6, 13, 15), uint64]) */
}

def @func_7910() -> (Tensor[(420), int64], Tensor[(16, 4, 2), float32]) {
  %24 = fn () -> (Tensor[(420), int64], Tensor[(16, 4, 2), float32]) {
    %20 = @func_7482() /* ty=(Tensor[(420), int64], Tensor[(12, 9, 1), float64]) */;
    %21 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
    %22 = %20.0;
    %23 = %21.0;
    (%22, %23)
  };
  %24() /* ty=(Tensor[(420), int64], Tensor[(16, 4, 2), float32]) */
}

def @func_5283(%var_5279: Tensor[(7, 16, 6), float32], %var_5280: Tensor[(30), uint8], %var_5281: Tensor[(144), int64], %var_5282: Tensor[(1755), float32]) -> (Tensor[(7, 16, 6), float32], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(2520), int64]) {
  %42 = fn (%var_5249: Tensor[(7, 16, 6), float32], %var_5254: Tensor[(30), uint8], %var_5256: Tensor[(144), int64], %var_5257: Tensor[(1755), float32]) -> (Tensor[(7, 16, 6), float32], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(2520), int64]) {
    %25 = cast(%var_5249, dtype="float32") /* ty=Tensor[(7, 16, 6), float32] */;
    %26 = cast(%var_5254, dtype="uint8") /* ty=Tensor[(30), uint8] */;
    %27 = cast(meta[relay.Constant][3] /* ty=Tensor[(2520), float32] */, dtype="float32") /* ty=Tensor[(2520), float32] */;
    %28 = cast(%var_5256, dtype="int64") /* ty=Tensor[(144), int64] */;
    %29 = cast(%var_5257, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %30 = reshape(%26, newshape=[3, 5, 2]) /* ty=Tensor[(3, 5, 2), uint8] */;
    %31 = reshape(%27, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
    %32 = reshape(%28, newshape=[1, 144]) /* ty=Tensor[(1, 144), int64] */;
    %33 = reshape(%29, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %34 = @func_2210(%30, %31, %32, %33) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(2, 6, 12), float64], Tensor[(1, 144), int64], Tensor[(128), float64], Tensor[(1755), float32]) */;
    %35 = %34.1;
    %36 = cast(%35, dtype="int64") /* ty=Tensor[(12, 14, 15), int64] */;
    %37 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(2520), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %38 = cast(meta[relay.Constant][3] /* ty=Tensor[(2520), float32] */, dtype="int64") /* ty=Tensor[(2520), int64] */;
    %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?), int64] */;
    %40 = cosh(%25) /* ty=Tensor[(7, 16, 6), float32] */;
    %41 = bitwise_or(%38, %39) /* ty=Tensor[(2520), int64] */;
    (%40, %var_5254, %var_5256, %var_5257, %41)
  };
  %42(%var_5279, %var_5280, %var_5281, %var_5282) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(2520), int64]) */
}

def @func_8309(%var_8303: Tensor[(13, 3, 12), int8]) -> Tensor[(13, 3, 12), bool] {
  %43 = cast(meta[relay.Constant][4] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %44 = cast(%var_8303, dtype="bool") /* ty=Tensor[(13, 3, 12), bool] */;
  greater(%43, %44) /* ty=Tensor[(13, 3, 12), bool] */
}

def @func_8661(%var_8646: Tensor[(30), uint8], %var_8652: Tensor[(150), int32]) -> (Tensor[(16, 4, 2), float32], Tensor[(2520), int64], Tensor[(672), float32], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(150), int32], Tensor[(330, 1), int64], Tensor[(150), int32]) {
  %45 = cast(meta[relay.Constant][5] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %46 = cast(%var_8646, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %47 = cast(meta[relay.Constant][6] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %48 = cast(meta[relay.Constant][7] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %49 = reshape(%45, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float32] */;
  %50 = reshape(%46, newshape=[30]) /* ty=Tensor[(30), uint8] */;
  %51 = reshape(%47, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %52 = reshape(%48, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %53 = @func_5278(%49, %50, %51, %52) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(2520), int64]) */;
  %54 = cast(meta[relay.Constant][8] /* ty=Tensor[(330, 1), int64] */, dtype="int64") /* ty=Tensor[(330, 1), int64] */;
  %55 = cast(meta[relay.Constant][8] /* ty=Tensor[(330, 1), int64] */, dtype="int64") /* ty=Tensor[(330, 1), int64] */;
  %56 = cast(%var_8652, dtype="int32") /* ty=Tensor[(150), int32] */;
  %57 = reshape(%54, newshape=[3, 11, 10]) /* ty=Tensor[(3, 11, 10), int64] */;
  %58 = reshape(%55, newshape=[3, 11, 10]) /* ty=Tensor[(3, 11, 10), int64] */;
  %59 = reshape(%56, newshape=[150]) /* ty=Tensor[(150), int32] */;
  %60 = @func_7048(%57, %58, %59) /* ty=(Tensor[(3, 11, 10), bool], Tensor[(16, 4, 2), int64], Tensor[(150), int32]) */;
  %61 = @func_4964() /* ty=Tensor[(16, 4, 2), float32] */;
  %62 = %53.4;
  %63 = %60.2;
  (%61, %62, meta[relay.Constant][5] /* ty=Tensor[(672), float32] */, %var_8646, meta[relay.Constant][6] /* ty=Tensor[(144), int64] */, meta[relay.Constant][7] /* ty=Tensor[(1755), float32] */, %63, meta[relay.Constant][8] /* ty=Tensor[(330, 1), int64] */, %var_8652)
}

def @func_6929(%var_6927: Tensor[(1, 15, 10), int32]) -> (Tensor[(1, 15, 10), int32], Tensor[(16, 4, 2), int64]) {
  @func_6926(%var_6927) /* ty=(Tensor[(1, 15, 10), int32], Tensor[(16, 4, 2), int64]) */
}

def @func_8413() -> (Tensor[(16, 4, 2), int64],) {
  @func_8411() /* ty=(Tensor[(16, 4, 2), int64],) */
}

def @func_8634() -> (Tensor[(420), int64],) {
  %65 = fn () -> (Tensor[(420), int64],) {
    %64 = @func_7556() /* ty=Tensor[(420), int64] */;
    (%64,)
  };
  %65() /* ty=(Tensor[(420), int64],) */
}

def @func_5039(%var_5037: Tensor[(30), uint8], %var_5038: Tensor[(144), int64]) -> (Tensor[(16, 4, 2), float64], Tensor[(3, 5, 2), bool], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) {
  %78 = fn (%var_5010: Tensor[(30), uint8], %var_5012: Tensor[(144), int64]) -> (Tensor[(16, 4, 2), float64], Tensor[(3, 5, 2), bool], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) {
    %66 = @func_4441() /* ty=(Tensor[(16, 4, 2), float64],) */;
    %67 = cast(%var_5010, dtype="uint8") /* ty=Tensor[(30), uint8] */;
    %68 = cast(meta[relay.Constant][9] /* ty=Tensor[(2520), float32] */, dtype="float32") /* ty=Tensor[(2520), float32] */;
    %69 = cast(%var_5012, dtype="int64") /* ty=Tensor[(144), int64] */;
    %70 = cast(meta[relay.Constant][10] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %71 = reshape(%67, newshape=[3, 5, 2]) /* ty=Tensor[(3, 5, 2), uint8] */;
    %72 = reshape(%68, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
    %73 = reshape(%69, newshape=[1, 144]) /* ty=Tensor[(1, 144), int64] */;
    %74 = reshape(%70, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %75 = @func_2210(%71, %72, %73, %74) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(2, 6, 12), float64], Tensor[(1, 144), int64], Tensor[(128), float64], Tensor[(1755), float32]) */;
    %76 = %66.0;
    %77 = %75.0;
    (%76, %77, %var_5010, meta[relay.Constant][9] /* ty=Tensor[(2520), float32] */, %var_5012, meta[relay.Constant][10] /* ty=Tensor[(1755), float32] */)
  };
  %78(%var_5037, %var_5038) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(3, 5, 2), bool], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) */
}

def @func_5994(%var_5978: Tensor[(16, 4, 2), float64]) -> (Tensor[(16, 4, 2), uint8], Tensor[(16, 4, 2), float32], Tensor[(16, 4, 2), float32], Tensor[(7, 15, 4), float32], Tensor[(420), int64]) {
  %79 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %80 = %79.0;
  %81 = cast(%var_5978, dtype="uint8") /* ty=Tensor[(16, 4, 2), uint8] */;
  %82 = shape_of(%80, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(%80, dtype="uint8") /* ty=Tensor[(16, 4, 2), uint8] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %85 = cast(%var_5978, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
  %86 = cast(%var_5978, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
  %87 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), int64] */, dtype="int64") /* ty=Tensor[(420), int64] */;
  %88 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), int64] */, dtype="int64") /* ty=Tensor[(420), int64] */;
  %89 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), int64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %90 = reshape(%87, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
  %91 = reshape(%88, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
  %92 = reshape(%89, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), float64] */;
  %93 = @func_4596(%90, %91, %92) /* ty=(Tensor[(7, 15, 4), int64], Tensor[(7, 15, 4), float32], Tensor[(13, 8, 8), float32], Tensor[(1, 832), float64], Tensor[(16, 4, 2), float64], Tensor[(7, 15, 4), int8]) */;
  %94 = subtract(%83, %84) /* ty=Tensor[(16, 4, 2), uint8] */;
  %95 = atan(%85) /* ty=Tensor[(16, 4, 2), float32] */;
  %96 = atanh(%86) /* ty=Tensor[(16, 4, 2), float32] */;
  %97 = %93.1;
  (%94, %95, %96, %97, meta[relay.Constant][11] /* ty=Tensor[(420), int64] */)
}

def @func_6655() -> (Tensor[(16, 4, 2), float32], Tensor[(10, 832), float64], Tensor[(1755), float32], Tensor[(13, 8, 8), float32], Tensor[(832, 1), float64]) {
  %98 = @func_4964() /* ty=Tensor[(16, 4, 2), float32] */;
  %99 = cast(%98, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
  %100 = cast(meta[relay.Constant][12] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %101 = reshape(%100, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %102 = @func_5491(%101) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(10, 832), float64], Tensor[(8320), float64], Tensor[(1, 144), int64], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) */;
  %103 = cast(meta[relay.Constant][13] /* ty=Tensor[(832, 1), float64] */, dtype="float64") /* ty=Tensor[(832, 1), float64] */;
  %104 = reshape(%103, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
  %105 = acosh(%99) /* ty=Tensor[(16, 4, 2), float32] */;
  %106 = %102.1;
  %107 = @func_132(%104) /* ty=Tensor[(13, 8, 8), float32] */;
  (%105, %106, meta[relay.Constant][12] /* ty=Tensor[(1755), float32] */, %107, meta[relay.Constant][13] /* ty=Tensor[(832, 1), float64] */)
}

def @func_8287() -> Tensor[(1755), float32] {
  %108 = @func_6655() /* ty=(Tensor[(16, 4, 2), float32], Tensor[(10, 832), float64], Tensor[(1755), float32], Tensor[(13, 8, 8), float32], Tensor[(832, 1), float64]) */;
  %109 = %108.2;
  %110 = cast(%109, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %111 = asin(%110) /* ty=Tensor[(1755), float64] */;
  %112 = cast(%111, dtype="float64") /* ty=Tensor[(1755), float64] */;
  %113 = sin(%112) /* ty=Tensor[(1755), float64] */;
  %114 = cast(%111, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %115 = shape_of(%113, dtype="int32") /* ty=Tensor[(1), int32] */;
  %116 = cast(%113, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?), float32] */;
  floor_mod(%116, %117) /* ty=Tensor[(1755), float32] */
}

def @func_6175(%var_6170: Tensor[(30), uint8], %var_6171: Tensor[(5, 351), float32], %var_6172: Tensor[(280), float32], %var_6173: Tensor[(6, 420), float32], %var_6174: Tensor[(128), float32]) -> (Tensor[(420), int64], Tensor[(144), int64], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(16, 13, 10), float32], Tensor[(210), float64], Tensor[(280), float32], Tensor[(6, 420), float32], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(16, 4, 2), bool], Tensor[(128), float32], Tensor[(5, 351), float32]) {
  %155 = fn (%var_6112: Tensor[(30), uint8], %var_6122: Tensor[(5, 351), float32], %var_6123: Tensor[(280), float32], %var_6124: Tensor[(6, 420), float32], %var_6158: Tensor[(128), float32]) -> (Tensor[(420), int64], Tensor[(144), int64], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(16, 13, 10), float32], Tensor[(210), float64], Tensor[(280), float32], Tensor[(6, 420), float32], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(16, 4, 2), bool], Tensor[(128), float32], Tensor[(5, 351), float32]) {
    %118 = cast(%var_6112, dtype="uint8") /* ty=Tensor[(30), uint8] */;
    %119 = cast(meta[relay.Constant][14] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
    %120 = reshape(%118, newshape=[30]) /* ty=Tensor[(30), uint8] */;
    %121 = reshape(%119, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %122 = @func_5036(%120, %121) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(3, 5, 2), bool], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) */;
    %123 = cast(meta[relay.Constant][15] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %124 = cast(%var_6122, dtype="float32") /* ty=Tensor[(5, 351), float32] */;
    %125 = cast(%var_6123, dtype="float32") /* ty=Tensor[(280), float32] */;
    %126 = cast(%var_6124, dtype="float32") /* ty=Tensor[(6, 420), float32] */;
    %127 = reshape(%123, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %128 = reshape(%124, newshape=[585, 3]) /* ty=Tensor[(585, 3), float32] */;
    %129 = reshape(%125, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %130 = reshape(%126, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
    %131 = @func_4356(%127, %128, %129, %130) /* ty=(Tensor[(144), int64], Tensor[(210), float64], Tensor[(585, 3), float32], Tensor[(16, 4, 2), float32], Tensor[(16, 13, 10), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(15, 13, 9), float32], Tensor[(104, 20), float32]) */;
    %132 = cast(%var_6112, dtype="uint8") /* ty=Tensor[(30), uint8] */;
    %133 = cast(meta[relay.Constant][14] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
    %134 = cast(%var_6122, dtype="float32") /* ty=Tensor[(5, 351), float32] */;
    %135 = reshape(%132, newshape=[5, 6]) /* ty=Tensor[(5, 6), uint8] */;
    %136 = reshape(%133, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %137 = reshape(%134, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %138 = @func_2399(%135, %136, %137) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(5, 6), uint8], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(15, 13, 9), float32], Tensor[(16, 1, 8), float64], Tensor[(128), float64], Tensor[(15, 13, 9), float32], Tensor[(12, 14, 15), float32], Tensor[(?, 14, 5), uint64]) */;
    %139 = cast(%var_6112, dtype="uint8") /* ty=Tensor[(30), uint8] */;
    %140 = %122.4;
    %141 = cast(%140, dtype="int64") /* ty=Tensor[(144), int64] */;
    %142 = reshape(%139, newshape=[30]) /* ty=Tensor[(30), uint8] */;
    %143 = reshape(%141, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %144 = @func_5036(%142, %143) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(3, 5, 2), bool], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) */;
    %145 = cast(%var_6158, dtype="float32") /* ty=Tensor[(128), float32] */;
    %146 = reshape(%145, newshape=[16, 4, 2]) /* ty=Tensor[(16, 4, 2), float32] */;
    %147 = @func_4225(%146) /* ty=(Tensor[(16, 4, 2), bool],) */;
    %148 = cast(%var_6122, dtype="float32") /* ty=Tensor[(5, 351), float32] */;
    %149 = @func_5393() /* ty=Tensor[(420), int64] */;
    %150 = %131.4;
    %151 = %138.2;
    %152 = %144.4;
    %153 = %147.0;
    %154 = cosh(%148) /* ty=Tensor[(5, 351), float32] */;
    (%149, %140, %var_6112, meta[relay.Constant][14] /* ty=Tensor[(144), int64] */, %150, meta[relay.Constant][15] /* ty=Tensor[(210), float64] */, %var_6123, %var_6124, %151, %152, %153, %var_6158, %154)
  };
  %155(%var_6170, %var_6171, %var_6172, %var_6173, %var_6174) /* ty=(Tensor[(420), int64], Tensor[(144), int64], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(16, 13, 10), float32], Tensor[(210), float64], Tensor[(280), float32], Tensor[(6, 420), float32], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(16, 4, 2), bool], Tensor[(128), float32], Tensor[(5, 351), float32]) */
}

def @func_8701() -> Tensor[(16, 4, 2), float64] {
  @func_8699() /* ty=Tensor[(16, 4, 2), float64] */
}

def @func_4441() -> (Tensor[(16, 4, 2), float64],) {
  %156 = @func_4388() /* ty=Tensor[(16, 4, 2), float64] */;
  (%156,)
}

def @func_2403(%var_2400: Tensor[(5, 6), uint8], %var_2401: Tensor[(144), int64], %var_2402: Tensor[(1755), float32]) -> (Tensor[(3, 5, 2), bool], Tensor[(5, 6), uint8], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(15, 13, 9), float32], Tensor[(16, 1, 8), float64], Tensor[(128), float64], Tensor[(15, 13, 9), float32], Tensor[(12, 14, 15), float32], Tensor[(?, 14, 5), uint64]) {
  %194 = fn (%var_2356: Tensor[(5, 6), uint8], %var_2358: Tensor[(144), int64], %var_2359: Tensor[(1755), float32]) -> (Tensor[(3, 5, 2), bool], Tensor[(5, 6), uint8], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(15, 13, 9), float32], Tensor[(16, 1, 8), float64], Tensor[(128), float64], Tensor[(15, 13, 9), float32], Tensor[(12, 14, 15), float32], Tensor[(?, 14, 5), uint64]) {
    %157 = cast(%var_2356, dtype="uint8") /* ty=Tensor[(5, 6), uint8] */;
    %158 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 2520), float32] */, dtype="float32") /* ty=Tensor[(1, 2520), float32] */;
    %159 = cast(%var_2358, dtype="int64") /* ty=Tensor[(144), int64] */;
    %160 = cast(%var_2359, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %161 = reshape(%157, newshape=[3, 5, 2]) /* ty=Tensor[(3, 5, 2), uint8] */;
    %162 = reshape(%158, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
    %163 = reshape(%159, newshape=[1, 144]) /* ty=Tensor[(1, 144), int64] */;
    %164 = reshape(%160, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %165 = @func_2210(%161, %162, %163, %164) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(2, 6, 12), float64], Tensor[(1, 144), int64], Tensor[(128), float64], Tensor[(1755), float32]) */;
    %166 = cast(%var_2359, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %167 = reshape(%166, newshape=[15, 13, 9]) /* ty=Tensor[(15, 13, 9), float32] */;
    %168 = @func_229(%167) /* ty=(Tensor[(15, 13, 9), float32],) */;
    %169 = cast(meta[relay.Constant][17] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
    %170 = reshape(%169, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float64] */;
    %171 = @func_1529(%170) /* ty=(Tensor[(16, 1, 8), float64], Tensor[(832), float64], Tensor[(13, 8, 8), float32]) */;
    %172 = %168.0;
    %173 = cast(%172, dtype="float32") /* ty=Tensor[(15, 13, 9), float32] */;
    %174 = reshape(%173, newshape=[15, 13, 9]) /* ty=Tensor[(15, 13, 9), float32] */;
    %175 = @func_229(%174) /* ty=(Tensor[(15, 13, 9), float32],) */;
    %176 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 2520), float32] */, dtype="float32") /* ty=Tensor[(1, 2520), float32] */;
    %177 = reshape(%176, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), float32] */;
    %178 = @func_219(%177) /* ty=(Tensor[(12, 14, 15), float32],) */;
    %179 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 14, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 14, 5), float64] */;
    %180 = tan(%179) /* ty=Tensor[(1, 14, 5), float64] */;
    %181 = cast(%180, dtype="float32") /* ty=Tensor[(1, 14, 5), float32] */;
    %182 = log2(%181) /* ty=Tensor[(1, 14, 5), float32] */;
    %183 = cast(%182, dtype="float32") /* ty=Tensor[(1, 14, 5), float32] */;
    %184 = log10(%183) /* ty=Tensor[(1, 14, 5), float32] */;
    %185 = cast(%184, dtype="uint64") /* ty=Tensor[(1, 14, 5), uint64] */;
    %186 = shape_of(%180, dtype="int32") /* ty=Tensor[(3), int32] */;
    %187 = cast(%180, dtype="uint64") /* ty=Tensor[(1, 14, 5), uint64] */;
    %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %189 = %165.0;
    %190 = %171.0;
    %191 = %175.0;
    %192 = %178.0;
    %193 = multiply(%187, %188) /* ty=Tensor[(?, 14, 5), uint64] */;
    (%189, %var_2356, meta[relay.Constant][16] /* ty=Tensor[(1, 2520), float32] */, %var_2358, %var_2359, %172, %190, meta[relay.Constant][17] /* ty=Tensor[(128), float64] */, %191, %192, %193)
  };
  %194(%var_2400, %var_2401, %var_2402) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(5, 6), uint8], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(15, 13, 9), float32], Tensor[(16, 1, 8), float64], Tensor[(128), float64], Tensor[(15, 13, 9), float32], Tensor[(12, 14, 15), float32], Tensor[(?, 14, 5), uint64]) */
}

def @func_5371() -> (Tensor[(12, 9, ?), bool], Tensor[(12, 9, 1), float64]) {
  @func_5369() /* ty=(Tensor[(12, 9, ?), bool], Tensor[(12, 9, 1), float64]) */
}

def @func_4443() -> (Tensor[(16, 4, 2), float64],) {
  @func_4441() /* ty=(Tensor[(16, 4, 2), float64],) */
}

def @func_6089() -> (Tensor[(16, 4, 2), int64],) {
  %197 = fn () -> (Tensor[(16, 4, 2), int64],) {
    %195 = @func_4904() /* ty=(Tensor[(16, 4, 2), int64],) */;
    %196 = %195.0;
    (%196,)
  };
  %197() /* ty=(Tensor[(16, 4, 2), int64],) */
}

def @func_8477(%var_8475: Tensor[(8, 3, 9), float32]) -> (Tensor[(8, 3, 9), bool], Tensor[(16, 4, 2), float64]) {
  @func_8474(%var_8475) /* ty=(Tensor[(8, 3, 9), bool], Tensor[(16, 4, 2), float64]) */
}

def @func_3464(%var_3462: Tensor[(16, 13, 10), float32]) -> Tensor[(16, 13, 10), float32] {
  @func_3461(%var_3462) /* ty=Tensor[(16, 13, 10), float32] */
}

def @func_3879(%var_3850: Tensor[(14, 4, 5), float32], %var_3856: Tensor[(144), int64], %var_3857: Tensor[(1755), float32], %var_3875: Tensor[(14, 4, 5), float32]) -> (Tensor[(128), float64], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(14, 4, 5), uint8]) {
  %198 = cast(meta[relay.Constant][19] /* ty=Tensor[(30), uint8] */, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %199 = cast(%var_3856, dtype="int64") /* ty=Tensor[(144), int64] */;
  %200 = cast(%var_3857, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %201 = reshape(%198, newshape=[5, 6]) /* ty=Tensor[(5, 6), uint8] */;
  %202 = reshape(%199, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %203 = reshape(%200, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %204 = @func_2399(%201, %202, %203) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(5, 6), uint8], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(15, 13, 9), float32], Tensor[(16, 1, 8), float64], Tensor[(128), float64], Tensor[(15, 13, 9), float32], Tensor[(12, 14, 15), float32], Tensor[(?, 14, 5), uint64]) */;
  %205 = cast(%var_3850, dtype="float32") /* ty=Tensor[(14, 4, 5), float32] */;
  %206 = sinh(%205) /* ty=Tensor[(14, 4, 5), float32] */;
  %207 = cast(%var_3875, dtype="uint8") /* ty=Tensor[(14, 4, 5), uint8] */;
  %208 = shape_of(%206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%206, dtype="uint8") /* ty=Tensor[(14, 4, 5), uint8] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %211 = %204.7;
  %212 = bitwise_or(%209, %210) /* ty=Tensor[(14, 4, 5), uint8] */;
  (%211, meta[relay.Constant][19] /* ty=Tensor[(30), uint8] */, %var_3856, %var_3857, %212)
}

def @func_8165() -> (Tensor[(420), int64],) {
  @func_8163() /* ty=(Tensor[(420), int64],) */
}

def @func_4389() -> Tensor[(16, 4, 2), float64] {
  %216 = fn () -> Tensor[(16, 4, 2), float64] {
    %213 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
    %214 = %213.0;
    %215 = cast(%214, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
    cosh(%215) /* ty=Tensor[(16, 4, 2), float64] */
  };
  %216() /* ty=Tensor[(16, 4, 2), float64] */
}

def @func_6485(%var_6483: Tensor[(195, 9), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(144), int64], Tensor[(195, 9), float32], Tensor[(16, 4, 2), float32]) {
  @func_6482(%var_6483) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(144), int64], Tensor[(195, 9), float32], Tensor[(16, 4, 2), float32]) */
}

def @func_6657() -> (Tensor[(16, 4, 2), float32], Tensor[(10, 832), float64], Tensor[(1755), float32], Tensor[(13, 8, 8), float32], Tensor[(832, 1), float64]) {
  @func_6655() /* ty=(Tensor[(16, 4, 2), float32], Tensor[(10, 832), float64], Tensor[(1755), float32], Tensor[(13, 8, 8), float32], Tensor[(832, 1), float64]) */
}

def @func_6563() -> (Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64]) {
  %217 = @func_4904() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %218 = @func_4904() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %219 = @func_6088() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %220 = %217.0;
  %221 = %218.0;
  %222 = %219.0;
  (%220, %221, %222)
}

def @func_3461(%var_3454: Tensor[(16, 13, 10), float32]) -> Tensor[(16, 13, 10), float32] {
  %223 = cast(meta[relay.Constant][20] /* ty=Tensor[(16, 13, 10), float32] */, dtype="float32") /* ty=Tensor[(16, 13, 10), float32] */;
  %224 = shape_of(%var_3454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %225 = cast(%var_3454, dtype="float32") /* ty=Tensor[(16, 13, 10), float32] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%225, %226) /* ty=Tensor[(16, 13, 10), float32] */
}

def @func_4228(%var_4226: Tensor[(16, 4, 2), float32]) -> (Tensor[(16, 4, 2), bool],) {
  @func_4225(%var_4226) /* ty=(Tensor[(16, 4, 2), bool],) */
}

def @func_6385(%var_6383: Tensor[(2080), float32], %var_6384: Tensor[(1755), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(16, 13, 10), float32], Tensor[(2080), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(144, 1), int64], Tensor[(1755), float32]) {
  %242 = fn (%var_6371: Tensor[(2080), float32], %var_6380: Tensor[(1755), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(16, 13, 10), float32], Tensor[(2080), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(144, 1), int64], Tensor[(1755), float32]) {
    %227 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
    %228 = cast(%var_6371, dtype="float32") /* ty=Tensor[(2080), float32] */;
    %229 = reshape(%228, newshape=[16, 13, 10]) /* ty=Tensor[(16, 13, 10), float32] */;
    %230 = cast(meta[relay.Constant][21] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %231 = cast(meta[relay.Constant][22] /* ty=Tensor[(144, 1), int64] */, dtype="int64") /* ty=Tensor[(144, 1), int64] */;
    %232 = cast(%var_6380, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %233 = cast(meta[relay.Constant][21] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %234 = reshape(%230, newshape=[14, 4, 5]) /* ty=Tensor[(14, 4, 5), float32] */;
    %235 = reshape(%231, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %236 = reshape(%232, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %237 = reshape(%233, newshape=[14, 4, 5]) /* ty=Tensor[(14, 4, 5), float32] */;
    %238 = @func_3879(%234, %235, %236, %237) /* ty=(Tensor[(128), float64], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(14, 4, 5), uint8]) */;
    %239 = %227.0;
    %240 = @func_3461(%229) /* ty=Tensor[(16, 13, 10), float32] */;
    %241 = %238.4;
    (%239, %240, %var_6371, %241, meta[relay.Constant][21] /* ty=Tensor[(280), float32] */, meta[relay.Constant][22] /* ty=Tensor[(144, 1), int64] */, %var_6380)
  };
  %242(%var_6383, %var_6384) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(16, 13, 10), float32], Tensor[(2080), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(144, 1), int64], Tensor[(1755), float32]) */
}

def @func_8699() -> Tensor[(16, 4, 2), float64] {
  @func_4451() /* ty=Tensor[(16, 4, 2), float64] */
}

def @func_222(%var_220: Tensor[(12, 14, 15), float32]) -> (Tensor[(12, 14, 15), float32],) {
  @func_219(%var_220) /* ty=(Tensor[(12, 14, 15), float32],) */
}

def @func_5142() -> (Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) {
  @func_5140() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) */
}

def @func_8474(%var_8429: Tensor[(8, 3, 9), float32]) -> (Tensor[(8, 3, 9), bool], Tensor[(16, 4, 2), float64]) {
  %243 = cast(%var_8429, dtype="float32") /* ty=Tensor[(8, 3, 9), float32] */;
  %244 = asin(%243) /* ty=Tensor[(8, 3, 9), float32] */;
  %245 = cast(%var_8429, dtype="bool") /* ty=Tensor[(8, 3, 9), bool] */;
  %246 = shape_of(%244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%244, dtype="bool") /* ty=Tensor[(8, 3, 9), bool] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %249 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %250 = logical_and(%247, %248) /* ty=Tensor[(8, 3, 9), bool] */;
  %251 = %249.0;
  (%250, %251)
}

def @func_8213() -> (Tensor[(16, 4, 2), int64],) {
  %254 = fn () -> (Tensor[(16, 4, 2), int64],) {
    %252 = @func_4904() /* ty=(Tensor[(16, 4, 2), int64],) */;
    %253 = %252.0;
    (%253,)
  };
  %254() /* ty=(Tensor[(16, 4, 2), int64],) */
}

def @func_8737() -> (Tensor[(12, 9, 1), float64],) {
  %255 = @func_5369() /* ty=(Tensor[(12, 9, ?), bool], Tensor[(12, 9, 1), float64]) */;
  %256 = %255.1;
  (%256,)
}

def @func_5393() -> Tensor[(420), int64] {
  %257 = @func_5201() /* ty=(Tensor[(420), int64],) */;
  %257.0
}

def @func_1531(%var_1530: Tensor[(16, 1, 8), float64]) -> (Tensor[(16, 1, 8), float64], Tensor[(832), float64], Tensor[(13, 8, 8), float32]) {
  %265 = fn (%var_1512: Tensor[(16, 1, 8), float64]) -> (Tensor[(16, 1, 8), float64], Tensor[(832), float64], Tensor[(13, 8, 8), float32]) {
    %258 = cast(%var_1512, dtype="float64") /* ty=Tensor[(16, 1, 8), float64] */;
    %259 = cast(meta[relay.Constant][23] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
    %260 = reshape(%259, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
    %261 = @func_132(%260) /* ty=Tensor[(13, 8, 8), float32] */;
    %262 = cast(%261, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
    %263 = sigmoid(%258) /* ty=Tensor[(16, 1, 8), float64] */;
    %264 = log10(%262) /* ty=Tensor[(13, 8, 8), float32] */;
    (%263, meta[relay.Constant][23] /* ty=Tensor[(832), float64] */, %264)
  };
  %265(%var_1530) /* ty=(Tensor[(16, 1, 8), float64], Tensor[(832), float64], Tensor[(13, 8, 8), float32]) */
}

def @func_5622(%var_5617: float32, %var_5618: Tensor[(210), float32], %var_5619: Tensor[(2520), float32], %var_5620: Tensor[(30), uint8], %var_5621: Tensor[(585, 3), float32]) -> (Tensor[(1, 832), float64], Tensor[(2, 15, 7), float32], float32, Tensor[(210), float32], Tensor[(2520), float32], Tensor[(7, 15, 4), float32], Tensor[(420), int64], Tensor[(16, 4, 2), float64], Tensor[(24, 6), float32], Tensor[(30), uint8], Tensor[(672), float32], Tensor[(30), uint8], Tensor[(585, 3), float32], Tensor[(24, 6), float32]) {
  @func_5615(%var_5617, %var_5618, %var_5619, %var_5620, %var_5621) /* ty=(Tensor[(1, 832), float64], Tensor[(2, 15, 7), float32], float32, Tensor[(210), float32], Tensor[(2520), float32], Tensor[(7, 15, 4), float32], Tensor[(420), int64], Tensor[(16, 4, 2), float64], Tensor[(24, 6), float32], Tensor[(30), uint8], Tensor[(672), float32], Tensor[(30), uint8], Tensor[(585, 3), float32], Tensor[(24, 6), float32]) */
}

def @func_4117(%var_4115: Tensor[(3, 5, 14), float64], %var_4116: Tensor[(1755), float32]) -> (Tensor[(3, 5, 14), float64], Tensor[(16, 13, 10), float32], Tensor[(2080), float64], Tensor[(3, 5, 14), float64], Tensor[(144), int64], Tensor[(280), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(12, 14, 15), float32], Tensor[(3, 840), float32]) {
  @func_4113(%var_4115, %var_4116) /* ty=(Tensor[(3, 5, 14), float64], Tensor[(16, 13, 10), float32], Tensor[(2080), float64], Tensor[(3, 5, 14), float64], Tensor[(144), int64], Tensor[(280), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(12, 14, 15), float32], Tensor[(3, 840), float32]) */
}

def @func_6565() -> (Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64]) {
  @func_6563() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64]) */
}

def @func_8731() -> Tensor[(16, 4, 2), float64] {
  %266 = fn () -> Tensor[(16, 4, 2), float64] {
    @func_4388() /* ty=Tensor[(16, 4, 2), float64] */
  };
  %266() /* ty=Tensor[(16, 4, 2), float64] */
}

def @func_8289() -> Tensor[(1755), float32] {
  @func_8287() /* ty=Tensor[(1755), float32] */
}

def @func_6231(%var_6188: Tensor[(13, 8, 8), float32]) -> Tensor[(13, 8, 8), int32] {
  %267 = @func_5944() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(13, 8, 8), float32], Tensor[(16, 4, 2), float64]) */;
  %268 = %267.1;
  %269 = cast(%var_6188, dtype="float64") /* ty=Tensor[(13, 8, 8), float64] */;
  %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%268, dtype="float64") /* ty=Tensor[(13, 8, 8), float64] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %273 = maximum(%271, %272) /* ty=Tensor[(13, 8, 8), float64] */;
  %274 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %275 = %274.1;
  %276 = cast(%275, dtype="int32") /* ty=Tensor[(1, 832), int32] */;
  %277 = shape_of(%273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %278 = cast(%273, dtype="int32") /* ty=Tensor[(13, 8, 8), int32] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  right_shift(%278, %279) /* ty=Tensor[(13, 8, 8), int32] */
}

def @func_4966() -> Tensor[(16, 4, 2), float32] {
  @func_4964() /* ty=Tensor[(16, 4, 2), float32] */
}

def @func_219(%var_209: Tensor[(12, 14, 15), float32]) -> (Tensor[(12, 14, 15), float32],) {
  %280 = cast(%var_209, dtype="float32") /* ty=Tensor[(12, 14, 15), float32] */;
  %281 = sinh(%280) /* ty=Tensor[(12, 14, 15), float32] */;
  (%281,)
}

def @func_4225(%var_4213: Tensor[(16, 4, 2), float32]) -> (Tensor[(16, 4, 2), bool],) {
  %282 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %283 = %282.0;
  %284 = cast(%var_4213, dtype="bool") /* ty=Tensor[(16, 4, 2), bool] */;
  %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%283, dtype="bool") /* ty=Tensor[(16, 4, 2), bool] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %288 = greater(%286, %287) /* ty=Tensor[(16, 4, 2), bool] */;
  (%288,)
}

def @func_5997(%var_5995: Tensor[(16, 4, 2), float64]) -> (Tensor[(16, 4, 2), uint8], Tensor[(16, 4, 2), float32], Tensor[(16, 4, 2), float32], Tensor[(7, 15, 4), float32], Tensor[(420), int64]) {
  @func_5994(%var_5995) /* ty=(Tensor[(16, 4, 2), uint8], Tensor[(16, 4, 2), float32], Tensor[(16, 4, 2), float32], Tensor[(7, 15, 4), float32], Tensor[(420), int64]) */
}

def @func_229(%var_226: Tensor[(15, 13, 9), float32]) -> (Tensor[(15, 13, 9), float32],) {
  %289 = cast(%var_226, dtype="float32") /* ty=Tensor[(15, 13, 9), float32] */;
  %290 = exp(%289) /* ty=Tensor[(15, 13, 9), float32] */;
  (%290,)
}

def @func_4113(%var_4070: Tensor[(3, 5, 14), float64], %var_4087: Tensor[(1755), float32]) -> (Tensor[(3, 5, 14), float64], Tensor[(16, 13, 10), float32], Tensor[(2080), float64], Tensor[(3, 5, 14), float64], Tensor[(144), int64], Tensor[(280), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(12, 14, 15), float32], Tensor[(3, 840), float32]) {
  %291 = cast(%var_4070, dtype="float64") /* ty=Tensor[(3, 5, 14), float64] */;
  %292 = cast(meta[relay.Constant][24] /* ty=Tensor[(2080), float32] */, dtype="float32") /* ty=Tensor[(2080), float32] */;
  %293 = reshape(%292, newshape=[16, 13, 10]) /* ty=Tensor[(16, 13, 10), float32] */;
  %294 = cast(meta[relay.Constant][24] /* ty=Tensor[(2080), float32] */, dtype="float64") /* ty=Tensor[(2080), float64] */;
  %295 = cast(%var_4070, dtype="float64") /* ty=Tensor[(3, 5, 14), float64] */;
  %296 = cast(meta[relay.Constant][25] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %297 = cast(meta[relay.Constant][26] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %298 = cast(%var_4087, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %299 = cast(meta[relay.Constant][25] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %300 = reshape(%296, newshape=[14, 4, 5]) /* ty=Tensor[(14, 4, 5), float32] */;
  %301 = reshape(%297, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %302 = reshape(%298, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %303 = reshape(%299, newshape=[14, 4, 5]) /* ty=Tensor[(14, 4, 5), float32] */;
  %304 = @func_3879(%300, %301, %302, %303) /* ty=(Tensor[(128), float64], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(14, 4, 5), uint8]) */;
  %305 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 840), float32] */, dtype="float32") /* ty=Tensor[(3, 840), float32] */;
  %306 = reshape(%305, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), float32] */;
  %307 = @func_219(%306) /* ty=(Tensor[(12, 14, 15), float32],) */;
  %308 = acos(%291) /* ty=Tensor[(3, 5, 14), float64] */;
  %309 = @func_3461(%293) /* ty=Tensor[(16, 13, 10), float32] */;
  %310 = log(%294) /* ty=Tensor[(2080), float64] */;
  %311 = rsqrt(%295) /* ty=Tensor[(3, 5, 14), float64] */;
  %312 = %304.2;
  %313 = %307.0;
  (%308, %309, %310, %311, %312, meta[relay.Constant][25] /* ty=Tensor[(280), float32] */, meta[relay.Constant][26] /* ty=Tensor[(144), int64] */, %var_4087, %313, meta[relay.Constant][27] /* ty=Tensor[(3, 840), float32] */)
}

def @func_2216(%var_2212: Tensor[(3, 5, 2), uint8], %var_2213: Tensor[(2520), float32], %var_2214: Tensor[(1, 144), int64], %var_2215: Tensor[(1755), float32]) -> (Tensor[(3, 5, 2), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(2, 6, 12), float64], Tensor[(1, 144), int64], Tensor[(128), float64], Tensor[(1755), float32]) {
  @func_2210(%var_2212, %var_2213, %var_2214, %var_2215) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(2, 6, 12), float64], Tensor[(1, 144), int64], Tensor[(128), float64], Tensor[(1755), float32]) */
}

def @func_7015(%var_7000: Tensor[(150, 1), int32], %var_7007: Tensor[(420), int64]) -> (Tensor[(16, 4, 2), float64], Tensor[(15, 13, 9), float32], Tensor[(1755), float32], Tensor[(1, 15, 10), int32], Tensor[(150, 1), int32], Tensor[(16, 4, 2), float64], Tensor[(420), int64]) {
  %314 = @func_4451() /* ty=Tensor[(16, 4, 2), float64] */;
  %315 = cast(%314, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  %316 = cast(meta[relay.Constant][28] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %317 = reshape(%316, newshape=[15, 13, 9]) /* ty=Tensor[(15, 13, 9), float32] */;
  %318 = @func_229(%317) /* ty=(Tensor[(15, 13, 9), float32],) */;
  %319 = cast(%var_7000, dtype="int32") /* ty=Tensor[(150, 1), int32] */;
  %320 = reshape(%319, newshape=[1, 15, 10]) /* ty=Tensor[(1, 15, 10), int32] */;
  %321 = @func_6926(%320) /* ty=(Tensor[(1, 15, 10), int32], Tensor[(16, 4, 2), int64]) */;
  %322 = cast(%var_7007, dtype="int64") /* ty=Tensor[(420), int64] */;
  %323 = cast(%var_7007, dtype="int64") /* ty=Tensor[(420), int64] */;
  %324 = cast(%var_7007, dtype="float64") /* ty=Tensor[(420), float64] */;
  %325 = reshape(%322, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
  %326 = reshape(%323, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
  %327 = reshape(%324, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), float64] */;
  %328 = @func_4596(%325, %326, %327) /* ty=(Tensor[(7, 15, 4), int64], Tensor[(7, 15, 4), float32], Tensor[(13, 8, 8), float32], Tensor[(1, 832), float64], Tensor[(16, 4, 2), float64], Tensor[(7, 15, 4), int8]) */;
  %329 = erf(%315) /* ty=Tensor[(16, 4, 2), float64] */;
  %330 = %318.0;
  %331 = %321.0;
  %332 = %328.4;
  (%329, %330, meta[relay.Constant][28] /* ty=Tensor[(1755), float32] */, %331, %var_7000, %332, %var_7007)
}

def @func_5751(%var_5745: Tensor[(30), uint8]) -> (Tensor[(15, 117), float32], Tensor[(16, 4, 2), float32], Tensor[(585, 3), float32], float32, Tensor[(210), float32], Tensor[(2520, 1), float32], Tensor[(30), uint8]) {
  %333 = @func_5140() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) */;
  %334 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %335 = cast(-0.536793f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %336 = cast(meta[relay.Constant][29] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %337 = cast(meta[relay.Constant][30] /* ty=Tensor[(2520, 1), float32] */, dtype="float32") /* ty=Tensor[(2520, 1), float32] */;
  %338 = cast(%var_5745, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %339 = %333.1;
  %340 = cast(%339, dtype="float32") /* ty=Tensor[(15, 117), float32] */;
  %341 = reshape(%335, newshape=[]) /* ty=float32 */;
  %342 = reshape(%336, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %343 = reshape(%337, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %344 = reshape(%338, newshape=[30]) /* ty=Tensor[(30), uint8] */;
  %345 = reshape(%340, newshape=[585, 3]) /* ty=Tensor[(585, 3), float32] */;
  %346 = @func_5615(%341, %342, %343, %344, %345) /* ty=(Tensor[(1, 832), float64], Tensor[(2, 15, 7), float32], float32, Tensor[(210), float32], Tensor[(2520), float32], Tensor[(7, 15, 4), float32], Tensor[(420), int64], Tensor[(16, 4, 2), float64], Tensor[(24, 6), float32], Tensor[(30), uint8], Tensor[(672), float32], Tensor[(30), uint8], Tensor[(585, 3), float32], Tensor[(24, 6), float32]) */;
  %347 = %334.0;
  %348 = %346.12;
  (%339, %347, %348, -0.536793f /* ty=float32 */, meta[relay.Constant][29] /* ty=Tensor[(210), float32] */, meta[relay.Constant][30] /* ty=Tensor[(2520, 1), float32] */, %var_5745)
}

def @func_5165() -> Tensor[(16, 4, 2), float64] {
  @func_5163() /* ty=Tensor[(16, 4, 2), float64] */
}

def @func_5494(%var_5492: Tensor[(1755), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(10, 832), float64], Tensor[(8320), float64], Tensor[(1, 144), int64], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) {
  @func_5491(%var_5492) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(10, 832), float64], Tensor[(8320), float64], Tensor[(1, 144), int64], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) */
}

def @func_232(%var_230: Tensor[(15, 13, 9), float32]) -> (Tensor[(15, 13, 9), float32],) {
  @func_229(%var_230) /* ty=(Tensor[(15, 13, 9), float32],) */
}

def @func_7053(%var_7050: Tensor[(3, 11, 10), int64], %var_7051: Tensor[(3, 11, 10), int64], %var_7052: Tensor[(150), int32]) -> (Tensor[(3, 11, 10), bool], Tensor[(16, 4, 2), int64], Tensor[(150), int32]) {
  @func_7048(%var_7050, %var_7051, %var_7052) /* ty=(Tensor[(3, 11, 10), bool], Tensor[(16, 4, 2), int64], Tensor[(150), int32]) */
}

def @func_8499() -> Tensor[(420), int64] {
  @func_7556() /* ty=Tensor[(420), int64] */
}

def @func_2210(%var_2181: Tensor[(3, 5, 2), uint8], %var_2189: Tensor[(2520), float32], %var_2206: Tensor[(1, 144), int64], %var_2208: Tensor[(1755), float32]) -> (Tensor[(3, 5, 2), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(2, 6, 12), float64], Tensor[(1, 144), int64], Tensor[(128), float64], Tensor[(1755), float32]) {
  %349 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 5, 2), uint8] */, dtype="bool") /* ty=Tensor[(3, 5, 2), bool] */;
  %350 = shape_of(%var_2181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %351 = cast(%var_2181, dtype="bool") /* ty=Tensor[(3, 5, 2), bool] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %353 = cast(%var_2189, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %354 = reshape(%353, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), float32] */;
  %355 = @func_219(%354) /* ty=(Tensor[(12, 14, 15), float32],) */;
  %356 = cast(%var_2189, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %357 = cast(%var_2206, dtype="int64") /* ty=Tensor[(1, 144), int64] */;
  %358 = cast(meta[relay.Constant][32] /* ty=Tensor[(128), float64] */, dtype="float64") /* ty=Tensor[(128), float64] */;
  %359 = cast(%var_2208, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %360 = reshape(%357, newshape=[2, 6, 12]) /* ty=Tensor[(2, 6, 12), int64] */;
  %361 = reshape(%358, newshape=[2, 64]) /* ty=Tensor[(2, 64), float64] */;
  %362 = reshape(%359, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %363 = @func_1844(%360, %361, %362) /* ty=(Tensor[(16, 1, 8), float64], Tensor[(2, 64), float64], Tensor[(13, 8, 8), float32], Tensor[(15, 13, 9), float32], Tensor[(1755), float32], Tensor[(2, 6, 12), bool], Tensor[(2, 6, 12), float64]) */;
  %364 = equal(%351, %352) /* ty=Tensor[(3, 5, 2), bool] */;
  %365 = %355.0;
  %366 = sinh(%356) /* ty=Tensor[(2520), float32] */;
  %367 = %363.6;
  (%364, %365, %366, %367, %var_2206, meta[relay.Constant][32] /* ty=Tensor[(128), float64] */, %var_2208)
}

def @func_7812(%var_7810: Tensor[(5, 42), float32], %var_7811: Tensor[(1, 2520), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(16, 4, 2), int64], Tensor[(12, 14, 15), float32], float32, Tensor[(5, 42), float32], Tensor[(144), int64], Tensor[(1, 2520), float32], Tensor[(585, 3), float32], Tensor[(1, 2520), float32], Tensor[(30), uint8]) {
  @func_7808(%var_7810, %var_7811) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(16, 4, 2), int64], Tensor[(12, 14, 15), float32], float32, Tensor[(5, 42), float32], Tensor[(144), int64], Tensor[(1, 2520), float32], Tensor[(585, 3), float32], Tensor[(1, 2520), float32], Tensor[(30), uint8]) */
}

def @func_8312(%var_8310: Tensor[(13, 3, 12), int8]) -> Tensor[(13, 3, 12), bool] {
  @func_8309(%var_8310) /* ty=Tensor[(13, 3, 12), bool] */
}

def @func_6786() -> (Tensor[(16, 4, 2), float32],) {
  %374 = fn () -> (Tensor[(16, 4, 2), float32],) {
    %368 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
    %369 = %368.0;
    %370 = cast(%369, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
    %371 = rsqrt(%370) /* ty=Tensor[(16, 4, 2), float64] */;
    %372 = cast(%371, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
    %373 = exp(%372) /* ty=Tensor[(16, 4, 2), float32] */;
    (%373,)
  };
  %374() /* ty=(Tensor[(16, 4, 2), float32],) */
}

def @func_4996() -> (Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) {
  %384 = fn () -> (Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) {
    %375 = cast(meta[relay.Constant][33] /* ty=Tensor[(420), int64] */, dtype="int64") /* ty=Tensor[(420), int64] */;
    %376 = cast(meta[relay.Constant][33] /* ty=Tensor[(420), int64] */, dtype="int64") /* ty=Tensor[(420), int64] */;
    %377 = cast(meta[relay.Constant][33] /* ty=Tensor[(420), int64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %378 = reshape(%375, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
    %379 = reshape(%376, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
    %380 = reshape(%377, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), float64] */;
    %381 = @func_4596(%378, %379, %380) /* ty=(Tensor[(7, 15, 4), int64], Tensor[(7, 15, 4), float32], Tensor[(13, 8, 8), float32], Tensor[(1, 832), float64], Tensor[(16, 4, 2), float64], Tensor[(7, 15, 4), int8]) */;
    %382 = @func_4388() /* ty=Tensor[(16, 4, 2), float64] */;
    %383 = %381.3;
    (%382, %383, meta[relay.Constant][33] /* ty=Tensor[(420), int64] */)
  };
  %384() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */
}

def @main(%var_8811: Tensor[(9, 2, 13), int16], %var_8812: Tensor[(9, 2, 13), int16]) -> (Tensor[(9, 2, 13), int16], Tensor[(9, 2, 13), float64], Tensor[(9, 2, 13), float64]) {
  %385 = cast(%var_8812, dtype="int16") /* ty=Tensor[(9, 2, 13), int16] */;
  %386 = shape_of(%var_8811, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%var_8811, dtype="int16") /* ty=Tensor[(9, 2, 13), int16] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %389 = cast(%var_8812, dtype="float64") /* ty=Tensor[(9, 2, 13), float64] */;
  %390 = cast(%var_8812, dtype="float32") /* ty=Tensor[(9, 2, 13), float32] */;
  %391 = sin(%390) /* ty=Tensor[(9, 2, 13), float32] */;
  %392 = cast(%391, dtype="float64") /* ty=Tensor[(9, 2, 13), float64] */;
  %393 = right_shift(%387, %388) /* ty=Tensor[(9, 2, 13), int16] */;
  %394 = asin(%389) /* ty=Tensor[(9, 2, 13), float64] */;
  %395 = log(%392) /* ty=Tensor[(9, 2, 13), float64] */;
  (%393, %394, %395)
}

def @func_7958() -> (Tensor[(16, 4, 2), float32],) {
  %397 = fn () -> (Tensor[(16, 4, 2), float32],) {
    %396 = @func_4964() /* ty=Tensor[(16, 4, 2), float32] */;
    (%396,)
  };
  %397() /* ty=(Tensor[(16, 4, 2), float32],) */
}

def @func_8411() -> (Tensor[(16, 4, 2), int64],) {
  %398 = @func_5140() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) */;
  %399 = %398.0;
  (%399,)
}

def @func_8079(%var_8071: Tensor[(1, 15, 7), float32], %var_8072: Tensor[(8, 15, 7), float32]) -> Tensor[(8, 15, 7), float32] {
  %400 = cast(%var_8071, dtype="float32") /* ty=Tensor[(1, 15, 7), float32] */;
  %401 = cast(%var_8072, dtype="float32") /* ty=Tensor[(8, 15, 7), float32] */;
  mod(%400, %401) /* ty=Tensor[(8, 15, 7), float32] */
}

def @func_8665(%var_8663: Tensor[(30), uint8], %var_8664: Tensor[(150), int32]) -> (Tensor[(16, 4, 2), float32], Tensor[(2520), int64], Tensor[(672), float32], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(150), int32], Tensor[(330, 1), int64], Tensor[(150), int32]) {
  @func_8661(%var_8663, %var_8664) /* ty=(Tensor[(16, 4, 2), float32], Tensor[(2520), int64], Tensor[(672), float32], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(150), int32], Tensor[(330, 1), int64], Tensor[(150), int32]) */
}

def @func_6234(%var_6232: Tensor[(13, 8, 8), float32]) -> Tensor[(13, 8, 8), int32] {
  @func_6231(%var_6232) /* ty=Tensor[(13, 8, 8), int32] */
}

def @func_7524(%var_7522: Tensor[(1040, 2), float32]) -> (Tensor[(16, 4, 2), float32], Tensor[(2080), float32], Tensor[(1040, 2), float32], Tensor[(1755), float32]) {
  @func_7521(%var_7522) /* ty=(Tensor[(16, 4, 2), float32], Tensor[(2080), float32], Tensor[(1040, 2), float32], Tensor[(1755), float32]) */
}

def @func_7808(%var_7775: Tensor[(5, 42), float32], %var_7777: Tensor[(1, 2520), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(16, 4, 2), int64], Tensor[(12, 14, 15), float32], float32, Tensor[(5, 42), float32], Tensor[(144), int64], Tensor[(1, 2520), float32], Tensor[(585, 3), float32], Tensor[(1, 2520), float32], Tensor[(30), uint8]) {
  %402 = @func_5525() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %403 = %402.0;
  %404 = cast(%403, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  %405 = @func_6088() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %406 = cast(8.00265f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %407 = cast(%var_7775, dtype="float32") /* ty=Tensor[(5, 42), float32] */;
  %408 = cast(meta[relay.Constant][34] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %409 = cast(%var_7777, dtype="float32") /* ty=Tensor[(1, 2520), float32] */;
  %410 = cast(meta[relay.Constant][35] /* ty=Tensor[(585, 3), float32] */, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %411 = reshape(%406, newshape=[]) /* ty=float32 */;
  %412 = reshape(%407, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %413 = reshape(%408, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %414 = reshape(%409, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %415 = reshape(%410, newshape=[1755, 1]) /* ty=Tensor[(1755, 1), float32] */;
  %416 = @func_6755(%411, %412, %413, %414, %415) /* ty=(Tensor[(16, 4, 2), float32], Tensor[(12, 14, 15), float32], float32, Tensor[(210), float32], Tensor[(144), int64], Tensor[(2520), float32], Tensor[(1755), float32], Tensor[(1755, 1), float32]) */;
  %417 = cast(meta[relay.Constant][36] /* ty=Tensor[(30), uint8] */, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %418 = cast(meta[relay.Constant][34] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %419 = cast(meta[relay.Constant][35] /* ty=Tensor[(585, 3), float32] */, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %420 = reshape(%417, newshape=[5, 6]) /* ty=Tensor[(5, 6), uint8] */;
  %421 = reshape(%418, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %422 = reshape(%419, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %423 = @func_2399(%420, %421, %422) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(5, 6), uint8], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(15, 13, 9), float32], Tensor[(16, 1, 8), float64], Tensor[(128), float64], Tensor[(15, 13, 9), float32], Tensor[(12, 14, 15), float32], Tensor[(?, 14, 5), uint64]) */;
  %424 = sigmoid(%404) /* ty=Tensor[(16, 4, 2), float64] */;
  %425 = %405.0;
  %426 = %416.1;
  %427 = %423.2;
  (%424, %425, %426, 8.00265f /* ty=float32 */, %var_7775, meta[relay.Constant][34] /* ty=Tensor[(144), int64] */, %var_7777, meta[relay.Constant][35] /* ty=Tensor[(585, 3), float32] */, %427, meta[relay.Constant][36] /* ty=Tensor[(30), uint8] */)
}

def @func_8501() -> Tensor[(420), int64] {
  @func_8499() /* ty=Tensor[(420), int64] */
}

def @func_6059(%var_6056: float32, %var_6057: Tensor[(210), float32], %var_6058: Tensor[(144), int64]) -> (Tensor[(16, 4, 2), float64], Tensor[(2520), float32], float32, Tensor[(210), float32], Tensor[(144), int64], Tensor[(2520), float32], Tensor[(2520), float64]) {
  %443 = fn (%var_6023: float32, %var_6024: Tensor[(210), float32], %var_6025: Tensor[(144), int64]) -> (Tensor[(16, 4, 2), float64], Tensor[(2520), float32], float32, Tensor[(210), float32], Tensor[(144), int64], Tensor[(2520), float32], Tensor[(2520), float64]) {
    %428 = cast(%var_6023, dtype="float32") /* ty=float32 */;
    %429 = cast(%var_6024, dtype="float32") /* ty=Tensor[(210), float32] */;
    %430 = cast(%var_6025, dtype="int64") /* ty=Tensor[(144), int64] */;
    %431 = cast(meta[relay.Constant][37] /* ty=Tensor[(2520), float32] */, dtype="float32") /* ty=Tensor[(2520), float32] */;
    %432 = reshape(%428, newshape=[]) /* ty=float32 */;
    %433 = reshape(%429, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float32] */;
    %434 = reshape(%430, newshape=[2, 72]) /* ty=Tensor[(2, 72), int64] */;
    %435 = reshape(%431, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
    %436 = @func_4723(%432, %433, %434, %435) /* ty=(Tensor[(2, 15, 7), float32], Tensor[(13, 8, 8), float32], Tensor[(2, 72), int64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32]) */;
    %437 = cast(meta[relay.Constant][37] /* ty=Tensor[(2520), float32] */, dtype="float32") /* ty=Tensor[(2520), float32] */;
    %438 = cast(meta[relay.Constant][37] /* ty=Tensor[(2520), float32] */, dtype="float64") /* ty=Tensor[(2520), float64] */;
    %439 = @func_4451() /* ty=Tensor[(16, 4, 2), float64] */;
    %440 = %436.4;
    %441 = acosh(%437) /* ty=Tensor[(2520), float32] */;
    %442 = asin(%438) /* ty=Tensor[(2520), float64] */;
    (%439, %440, %var_6023, %var_6024, %var_6025, %441, %442)
  };
  %443(%var_6056, %var_6057, %var_6058) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(2520), float32], float32, Tensor[(210), float32], Tensor[(144), int64], Tensor[(2520), float32], Tensor[(2520), float64]) */
}

def @func_7521(%var_7507: Tensor[(1040, 2), float32]) -> (Tensor[(16, 4, 2), float32], Tensor[(2080), float32], Tensor[(1040, 2), float32], Tensor[(1755), float32]) {
  %444 = cast(%var_7507, dtype="float32") /* ty=Tensor[(1040, 2), float32] */;
  %445 = cast(meta[relay.Constant][38] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %446 = reshape(%444, newshape=[2080]) /* ty=Tensor[(2080), float32] */;
  %447 = reshape(%445, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %448 = @func_6382(%446, %447) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(16, 13, 10), float32], Tensor[(2080), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(144, 1), int64], Tensor[(1755), float32]) */;
  %449 = @func_7257() /* ty=Tensor[(16, 4, 2), float32] */;
  %450 = %448.2;
  (%449, %450, %var_7507, meta[relay.Constant][38] /* ty=Tensor[(1755), float32] */)
}

def @func_5395() -> Tensor[(420), int64] {
  @func_5393() /* ty=Tensor[(420), int64] */
}

def @func_8137(%var_8135: Tensor[(16, 4, 2), int64]) -> Tensor[(16, 4, 2), uint32] {
  @func_8134(%var_8135) /* ty=Tensor[(16, 4, 2), uint32] */
}

def @func_5140() -> (Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) {
  %451 = @func_4904() /* ty=(Tensor[(16, 4, 2), int64],) */;
  %452 = cast(meta[relay.Constant][39] /* ty=Tensor[(144, 1), int64] */, dtype="int64") /* ty=Tensor[(144, 1), int64] */;
  %453 = reshape(%452, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %454 = @func_4406(%453) /* ty=(Tensor[(16, 4, 2), float32], Tensor[(13, 8, 8), float32], Tensor[(144), int64], Tensor[(15, 117), float32]) */;
  %455 = %451.0;
  %456 = %454.3;
  (%455, %456, meta[relay.Constant][39] /* ty=Tensor[(144, 1), int64] */)
}

def @func_7482() -> (Tensor[(420), int64], Tensor[(12, 9, 1), float64]) {
  %457 = @func_5369() /* ty=(Tensor[(12, 9, ?), bool], Tensor[(12, 9, 1), float64]) */;
  %458 = @func_5393() /* ty=Tensor[(420), int64] */;
  %459 = %457.1;
  (%458, %459)
}

def @func_7259() -> Tensor[(16, 4, 2), float32] {
  @func_7257() /* ty=Tensor[(16, 4, 2), float32] */
}

def @func_5202() -> (Tensor[(420), int64],) {
  %462 = fn () -> (Tensor[(420), int64],) {
    %460 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
    %461 = %460.2;
    (%461,)
  };
  %462() /* ty=(Tensor[(420), int64],) */
}

def @func_5310(%var_5308: Tensor[(10, 832), float64]) -> (Tensor[(10, 832), float64],) {
  @func_5307(%var_5308) /* ty=(Tensor[(10, 832), float64],) */
}

def @func_4905() -> (Tensor[(16, 4, 2), int64],) {
  %476 = fn () -> (Tensor[(16, 4, 2), int64],) {
    %463 = @func_4388() /* ty=Tensor[(16, 4, 2), float64] */;
    %464 = cast(%463, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
    %465 = sinh(%464) /* ty=Tensor[(16, 4, 2), float64] */;
    %466 = cast(%465, dtype="int64") /* ty=Tensor[(16, 4, 2), int64] */;
    %467 = shape_of(%463, dtype="int32") /* ty=Tensor[(3), int32] */;
    %468 = cast(%463, dtype="int64") /* ty=Tensor[(16, 4, 2), int64] */;
    %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %470 = bitwise_or(%468, %469) /* ty=Tensor[(16, 4, 2), int64] */;
    %471 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 4, 2), int64] */, dtype="int64") /* ty=Tensor[(16, 4, 2), int64] */;
    %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
    %473 = cast(%470, dtype="int64") /* ty=Tensor[(16, 4, 2), int64] */;
    %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %475 = logical_xor(%473, %474) /* ty=Tensor[(16, 4, 2), int64] */;
    (%475,)
  };
  %476() /* ty=(Tensor[(16, 4, 2), int64],) */
}

def @func_7708(%var_7685: uint16) -> (Tensor[(11, 5, 15), uint16],) {
  %477 = cast(%var_7685, dtype="uint16") /* ty=uint16 */;
  %478 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 5, 15), uint16] */, dtype="uint16") /* ty=Tensor[(11, 5, 15), uint16] */;
  %479 = maximum(%477, %478) /* ty=Tensor[(11, 5, 15), uint16] */;
  (%479,)
}

def @func_8163() -> (Tensor[(420), int64],) {
  %480 = @func_7556() /* ty=Tensor[(420), int64] */;
  (%480,)
}

def @func_4452() -> Tensor[(16, 4, 2), float64] {
  %482 = fn () -> Tensor[(16, 4, 2), float64] {
    %481 = @func_4441() /* ty=(Tensor[(16, 4, 2), float64],) */;
    %481.0
  };
  %482() /* ty=Tensor[(16, 4, 2), float64] */
}

def @func_4165() -> (Tensor[(16, 4, 2), float32],) {
  %485 = fn () -> (Tensor[(16, 4, 2), float32],) {
    %483 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 4, 2), float32] */, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
    %484 = asin(%483) /* ty=Tensor[(16, 4, 2), float32] */;
    (%484,)
  };
  %485() /* ty=(Tensor[(16, 4, 2), float32],) */
}

def @func_7257() -> Tensor[(16, 4, 2), float32] {
  @func_4964() /* ty=Tensor[(16, 4, 2), float32] */
}

def @func_6482(%var_6473: Tensor[(195, 9), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(144), int64], Tensor[(195, 9), float32], Tensor[(16, 4, 2), float32]) {
  %486 = @func_4451() /* ty=Tensor[(16, 4, 2), float64] */;
  %487 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 4, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  %488 = shape_of(%486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%486, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %491 = cast(%var_6473, dtype="float32") /* ty=Tensor[(195, 9), float32] */;
  %492 = reshape(%491, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %493 = @func_5491(%492) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(10, 832), float64], Tensor[(8320), float64], Tensor[(1, 144), int64], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) */;
  %494 = @func_5944() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(13, 8, 8), float32], Tensor[(16, 4, 2), float64]) */;
  %495 = %494.0;
  %496 = cast(%495, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
  %497 = floor_divide(%489, %490) /* ty=Tensor[(16, 4, 2), float64] */;
  %498 = %493.6;
  %499 = cos(%496) /* ty=Tensor[(16, 4, 2), float32] */;
  (%497, %498, %var_6473, %499)
}

def @func_5754(%var_5752: Tensor[(30), uint8]) -> (Tensor[(15, 117), float32], Tensor[(16, 4, 2), float32], Tensor[(585, 3), float32], float32, Tensor[(210), float32], Tensor[(2520, 1), float32], Tensor[(30), uint8]) {
  @func_5751(%var_5752) /* ty=(Tensor[(15, 117), float32], Tensor[(16, 4, 2), float32], Tensor[(585, 3), float32], float32, Tensor[(210), float32], Tensor[(2520, 1), float32], Tensor[(30), uint8]) */
}

def @func_6761(%var_6756: float32, %var_6757: Tensor[(210), float32], %var_6758: Tensor[(144), int64], %var_6759: Tensor[(2520), float32], %var_6760: Tensor[(1755, 1), float32]) -> (Tensor[(16, 4, 2), float32], Tensor[(12, 14, 15), float32], float32, Tensor[(210), float32], Tensor[(144), int64], Tensor[(2520), float32], Tensor[(1755), float32], Tensor[(1755, 1), float32]) {
  %516 = fn (%var_6717: float32, %var_6718: Tensor[(210), float32], %var_6719: Tensor[(144), int64], %var_6720: Tensor[(2520), float32], %var_6748: Tensor[(1755, 1), float32]) -> (Tensor[(16, 4, 2), float32], Tensor[(12, 14, 15), float32], float32, Tensor[(210), float32], Tensor[(144), int64], Tensor[(2520), float32], Tensor[(1755), float32], Tensor[(1755, 1), float32]) {
    %500 = @func_5525() /* ty=(Tensor[(16, 4, 2), float32],) */;
    %501 = cast(%var_6717, dtype="float32") /* ty=float32 */;
    %502 = cast(%var_6718, dtype="float32") /* ty=Tensor[(210), float32] */;
    %503 = cast(%var_6719, dtype="int64") /* ty=Tensor[(144), int64] */;
    %504 = cast(%var_6720, dtype="float32") /* ty=Tensor[(2520), float32] */;
    %505 = reshape(%501, newshape=[]) /* ty=float32 */;
    %506 = reshape(%502, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float32] */;
    %507 = reshape(%503, newshape=[2, 72]) /* ty=Tensor[(2, 72), int64] */;
    %508 = reshape(%504, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
    %509 = @func_4723(%505, %506, %507, %508) /* ty=(Tensor[(2, 15, 7), float32], Tensor[(13, 8, 8), float32], Tensor[(2, 72), int64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32]) */;
    %510 = cast(%var_6748, dtype="float32") /* ty=Tensor[(1755, 1), float32] */;
    %511 = reshape(%510, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %512 = @func_5491(%511) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(10, 832), float64], Tensor[(8320), float64], Tensor[(1, 144), int64], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) */;
    %513 = %500.0;
    %514 = %509.3;
    %515 = %512.7;
    (%513, %514, %var_6717, %var_6718, %var_6719, %var_6720, %515, %var_6748)
  };
  %516(%var_6756, %var_6757, %var_6758, %var_6759, %var_6760) /* ty=(Tensor[(16, 4, 2), float32], Tensor[(12, 14, 15), float32], float32, Tensor[(210), float32], Tensor[(144), int64], Tensor[(2520), float32], Tensor[(1755), float32], Tensor[(1755, 1), float32]) */
}

def @func_5944() -> (Tensor[(16, 4, 2), int64], Tensor[(13, 8, 8), float32], Tensor[(16, 4, 2), float64]) {
  %517 = @func_5140() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) */;
  %518 = %517.0;
  %519 = cast(%518, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
  %520 = reshape(%519, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float64] */;
  %521 = @func_1529(%520) /* ty=(Tensor[(16, 1, 8), float64], Tensor[(832), float64], Tensor[(13, 8, 8), float32]) */;
  %522 = %521.2;
  %523 = @func_4388() /* ty=Tensor[(16, 4, 2), float64] */;
  (%518, %522, %523)
}

def @func_7711(%var_7709: uint16) -> (Tensor[(11, 5, 15), uint16],) {
  @func_7708(%var_7709) /* ty=(Tensor[(11, 5, 15), uint16],) */
}

def @func_7678(%var_7676: Tensor[(10, 15, 9), float32], %var_7677: Tensor[(3, 840), float32]) -> (Tensor[(15, 117), float32], Tensor[(210), float64], Tensor[(140, 2), float32], Tensor[(10, 15, 9), uint8], Tensor[(3, 840), float64], Tensor[(10, 15, 9), bool], Tensor[(13, 8, 8), bool]) {
  %560 = fn (%var_7591: Tensor[(10, 15, 9), float32], %var_7623: Tensor[(3, 840), float32]) -> (Tensor[(15, 117), float32], Tensor[(210), float64], Tensor[(140, 2), float32], Tensor[(10, 15, 9), uint8], Tensor[(3, 840), float64], Tensor[(10, 15, 9), bool], Tensor[(13, 8, 8), bool]) {
    %524 = @func_5140() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) */;
    %525 = cast(%var_7591, dtype="float32") /* ty=Tensor[(10, 15, 9), float32] */;
    %526 = atan(%525) /* ty=Tensor[(10, 15, 9), float32] */;
    %527 = cast(%526, dtype="float64") /* ty=Tensor[(10, 15, 9), float64] */;
    %528 = erf(%527) /* ty=Tensor[(10, 15, 9), float64] */;
    %529 = cast(%var_7591, dtype="uint8") /* ty=Tensor[(10, 15, 9), uint8] */;
    %530 = shape_of(%528, dtype="int32") /* ty=Tensor[(3), int32] */;
    %531 = cast(%528, dtype="uint8") /* ty=Tensor[(10, 15, 9), uint8] */;
    %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %533 = cast(%var_7623, dtype="float64") /* ty=Tensor[(3, 840), float64] */;
    %534 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(3, 840), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %535 = cast(meta[relay.Constant][46] /* ty=Tensor[(3, 840), float32] */, dtype="float64") /* ty=Tensor[(3, 840), float64] */;
    %536 = dyn.reshape(%533, %534, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %537 = cast(meta[relay.Constant][47] /* ty=Tensor[(10, 15, 9), float32] */, dtype="bool") /* ty=Tensor[(10, 15, 9), bool] */;
    %538 = shape_of(%526, dtype="int32") /* ty=Tensor[(3), int32] */;
    %539 = cast(%526, dtype="bool") /* ty=Tensor[(10, 15, 9), bool] */;
    %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %541 = cast(meta[relay.Constant][44] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %542 = %524.1;
    %543 = cast(%542, dtype="float32") /* ty=Tensor[(15, 117), float32] */;
    %544 = cast(meta[relay.Constant][45] /* ty=Tensor[(140, 2), float32] */, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
    %545 = cast(meta[relay.Constant][46] /* ty=Tensor[(3, 840), float32] */, dtype="float32") /* ty=Tensor[(3, 840), float32] */;
    %546 = reshape(%541, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %547 = reshape(%543, newshape=[585, 3]) /* ty=Tensor[(585, 3), float32] */;
    %548 = reshape(%544, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %549 = reshape(%545, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
    %550 = @func_4356(%546, %547, %548, %549) /* ty=(Tensor[(144), int64], Tensor[(210), float64], Tensor[(585, 3), float32], Tensor[(16, 4, 2), float32], Tensor[(16, 13, 10), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(15, 13, 9), float32], Tensor[(104, 20), float32]) */;
    %551 = %550.7;
    %552 = cast(meta[relay.Constant][48] /* ty=Tensor[(13, 8, 8), float32] */, dtype="bool") /* ty=Tensor[(13, 8, 8), bool] */;
    %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
    %554 = cast(%551, dtype="bool") /* ty=Tensor[(13, 8, 8), bool] */;
    %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %556 = logical_xor(%531, %532) /* ty=Tensor[(10, 15, 9), uint8] */;
    %557 = multiply(%535, %536) /* ty=Tensor[(3, 840), float64] */;
    %558 = logical_and(%539, %540) /* ty=Tensor[(10, 15, 9), bool] */;
    %559 = greater_equal(%554, %555) /* ty=Tensor[(13, 8, 8), bool] */;
    (%542, meta[relay.Constant][44] /* ty=Tensor[(210), float64] */, meta[relay.Constant][45] /* ty=Tensor[(140, 2), float32] */, %556, %557, %558, %559)
  };
  %560(%var_7676, %var_7677) /* ty=(Tensor[(15, 117), float32], Tensor[(210), float64], Tensor[(140, 2), float32], Tensor[(10, 15, 9), uint8], Tensor[(3, 840), float64], Tensor[(10, 15, 9), bool], Tensor[(13, 8, 8), bool]) */
}

def @func_1848(%var_1845: Tensor[(2, 6, 12), int64], %var_1846: Tensor[(2, 64), float64], %var_1847: Tensor[(1755), float32]) -> (Tensor[(16, 1, 8), float64], Tensor[(2, 64), float64], Tensor[(13, 8, 8), float32], Tensor[(15, 13, 9), float32], Tensor[(1755), float32], Tensor[(2, 6, 12), bool], Tensor[(2, 6, 12), float64]) {
  %585 = fn (%var_1795: Tensor[(2, 6, 12), int64], %var_1801: Tensor[(2, 64), float64], %var_1829: Tensor[(1755), float32]) -> (Tensor[(16, 1, 8), float64], Tensor[(2, 64), float64], Tensor[(13, 8, 8), float32], Tensor[(15, 13, 9), float32], Tensor[(1755), float32], Tensor[(2, 6, 12), bool], Tensor[(2, 6, 12), float64]) {
    %561 = cast(%var_1801, dtype="float64") /* ty=Tensor[(2, 64), float64] */;
    %562 = reshape(%561, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float64] */;
    %563 = @func_1529(%562) /* ty=(Tensor[(16, 1, 8), float64], Tensor[(832), float64], Tensor[(13, 8, 8), float32]) */;
    %564 = cast(%var_1801, dtype="float64") /* ty=Tensor[(2, 64), float64] */;
    %565 = reshape(%564, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float64] */;
    %566 = @func_1529(%565) /* ty=(Tensor[(16, 1, 8), float64], Tensor[(832), float64], Tensor[(13, 8, 8), float32]) */;
    %567 = cast(%var_1829, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %568 = reshape(%567, newshape=[15, 13, 9]) /* ty=Tensor[(15, 13, 9), float32] */;
    %569 = @func_229(%568) /* ty=(Tensor[(15, 13, 9), float32],) */;
    %570 = cast(%var_1795, dtype="int64") /* ty=Tensor[(2, 6, 12), int64] */;
    %571 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(2, 6, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %572 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 6, 12), int64] */, dtype="int64") /* ty=Tensor[(2, 6, 12), int64] */;
    %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %574 = maximum(%572, %573) /* ty=Tensor[(2, 6, 12), int64] */;
    %575 = cast(%var_1795, dtype="bool") /* ty=Tensor[(2, 6, 12), bool] */;
    %576 = shape_of(%574, dtype="int32") /* ty=Tensor[(3), int32] */;
    %577 = cast(%574, dtype="bool") /* ty=Tensor[(2, 6, 12), bool] */;
    %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %579 = cast(%var_1795, dtype="float64") /* ty=Tensor[(2, 6, 12), float64] */;
    %580 = %563.0;
    %581 = %566.2;
    %582 = %569.0;
    %583 = greater_equal(%577, %578) /* ty=Tensor[(2, 6, 12), bool] */;
    %584 = sin(%579) /* ty=Tensor[(2, 6, 12), float64] */;
    (%580, %var_1801, %581, %582, %var_1829, %583, %584)
  };
  %585(%var_1845, %var_1846, %var_1847) /* ty=(Tensor[(16, 1, 8), float64], Tensor[(2, 64), float64], Tensor[(13, 8, 8), float32], Tensor[(15, 13, 9), float32], Tensor[(1755), float32], Tensor[(2, 6, 12), bool], Tensor[(2, 6, 12), float64]) */
}

def @func_6407(%var_6401: Tensor[(16, 4, 2), float64]) -> (Tensor[(16, 4, 2), uint8],) {
  %586 = @func_4451() /* ty=Tensor[(16, 4, 2), float64] */;
  %587 = cast(%var_6401, dtype="uint8") /* ty=Tensor[(16, 4, 2), uint8] */;
  %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%586, dtype="uint8") /* ty=Tensor[(16, 4, 2), uint8] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %591 = right_shift(%589, %590) /* ty=Tensor[(16, 4, 2), uint8] */;
  (%591,)
}

def @func_4964() -> Tensor[(16, 4, 2), float32] {
  %592 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %592.0
}

def @func_134(%var_133: Tensor[(13, 8, 8), float64]) -> Tensor[(13, 8, 8), float32] {
  %599 = fn (%var_100: Tensor[(13, 8, 8), float64]) -> Tensor[(13, 8, 8), float32] {
    %593 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 8, 8), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 8), float64] */;
    %594 = shape_of(%var_100, dtype="int32") /* ty=Tensor[(3), int32] */;
    %595 = cast(%var_100, dtype="float64") /* ty=Tensor[(13, 8, 8), float64] */;
    %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %597 = mod(%595, %596) /* ty=Tensor[(13, 8, 8), float64] */;
    %598 = cast(%597, dtype="float32") /* ty=Tensor[(13, 8, 8), float32] */;
    sqrt(%598) /* ty=Tensor[(13, 8, 8), float32] */
  };
  %599(%var_133) /* ty=Tensor[(13, 8, 8), float32] */
}

def @func_4729(%var_4725: float32, %var_4726: Tensor[(2, 15, 7), float32], %var_4727: Tensor[(2, 72), int64], %var_4728: Tensor[(2520), float32]) -> (Tensor[(2, 15, 7), float32], Tensor[(13, 8, 8), float32], Tensor[(2, 72), int64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32]) {
  @func_4723(%var_4725, %var_4726, %var_4727, %var_4728) /* ty=(Tensor[(2, 15, 7), float32], Tensor[(13, 8, 8), float32], Tensor[(2, 72), int64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32]) */
}

def @func_6410(%var_6408: Tensor[(16, 4, 2), float64]) -> (Tensor[(16, 4, 2), uint8],) {
  @func_6407(%var_6408) /* ty=(Tensor[(16, 4, 2), uint8],) */
}

def @func_5491(%var_5483: Tensor[(1755), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(10, 832), float64], Tensor[(8320), float64], Tensor[(1, 144), int64], Tensor[(30), uint8], Tensor[(2520), float32], Tensor[(144), int64], Tensor[(1755), float32]) {
  %600 = cast(meta[relay.Constant][51] /* ty=Tensor[(8320), float64] */, dtype="float64") /* ty=Tensor[(8320), float64] */;
  %601 = reshape(%600, newshape=[10, 832]) /* ty=Tensor[(10, 832), float64] */;
  %602 = @func_5307(%601) /* ty=(Tensor[(10, 832), float64],) */;
  %603 = cast(meta[relay.Constant][52] /* ty=Tensor[(30), uint8] */, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %604 = cast(meta[relay.Constant][53] /* ty=Tensor[(2520), float32] */, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %605 = cast(meta[relay.Constant][54] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %606 = cast(%var_5483, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %607 = reshape(%603, newshape=[3, 5, 2]) /* ty=Tensor[(3, 5, 2), uint8] */;
  %608 = reshape(%604, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %609 = reshape(%605, newshape=[1, 144]) /* ty=Tensor[(1, 144), int64] */;
  %610 = reshape(%606, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %611 = @func_2210(%607, %608, %609, %610) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(2, 6, 12), float64], Tensor[(1, 144), int64], Tensor[(128), float64], Tensor[(1755), float32]) */;
  %612 = @func_4388() /* ty=Tensor[(16, 4, 2), float64] */;
  %613 = %602.0;
  %614 = %611.4;
  (%612, %613, meta[relay.Constant][51] /* ty=Tensor[(8320), float64] */, %614, meta[relay.Constant][52] /* ty=Tensor[(30), uint8] */, meta[relay.Constant][53] /* ty=Tensor[(2520), float32] */, meta[relay.Constant][54] /* ty=Tensor[(144), int64] */, %var_5483)
}

def @func_8083(%var_8081: Tensor[(1, 15, 7), float32], %var_8082: Tensor[(8, 15, 7), float32]) -> Tensor[(8, 15, 7), float32] {
  @func_8079(%var_8081, %var_8082) /* ty=Tensor[(8, 15, 7), float32] */
}

def @func_4723(%var_4707: float32, %var_4708: Tensor[(2, 15, 7), float32], %var_4713: Tensor[(2, 72), int64], %var_4718: Tensor[(2520), float32]) -> (Tensor[(2, 15, 7), float32], Tensor[(13, 8, 8), float32], Tensor[(2, 72), int64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32]) {
  %615 = cast(%var_4707, dtype="float32") /* ty=float32 */;
  %616 = cast(%var_4708, dtype="float32") /* ty=Tensor[(2, 15, 7), float32] */;
  %617 = cast(%var_4713, dtype="int64") /* ty=Tensor[(2, 72), int64] */;
  %618 = reshape(%617, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %619 = @func_4406(%618) /* ty=(Tensor[(16, 4, 2), float32], Tensor[(13, 8, 8), float32], Tensor[(144), int64], Tensor[(15, 117), float32]) */;
  %620 = cast(%var_4718, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %621 = reshape(%620, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), float32] */;
  %622 = @func_219(%621) /* ty=(Tensor[(12, 14, 15), float32],) */;
  %623 = mod(%615, %616) /* ty=Tensor[(2, 15, 7), float32] */;
  %624 = %619.1;
  %625 = %622.0;
  (%623, %624, %var_4713, %625, %var_4718)
}

def @func_8134(%var_8129: Tensor[(16, 4, 2), int64]) -> Tensor[(16, 4, 2), uint32] {
  %626 = @func_6563() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64]) */;
  %627 = %626.2;
  %628 = cast(%var_8129, dtype="uint32") /* ty=Tensor[(16, 4, 2), uint32] */;
  %629 = shape_of(%627, dtype="int32") /* ty=Tensor[(3), int32] */;
  %630 = cast(%627, dtype="uint32") /* ty=Tensor[(16, 4, 2), uint32] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_xor(%630, %631) /* ty=Tensor[(16, 4, 2), uint32] */
}

def @func_7019(%var_7017: Tensor[(150, 1), int32], %var_7018: Tensor[(420), int64]) -> (Tensor[(16, 4, 2), float64], Tensor[(15, 13, 9), float32], Tensor[(1755), float32], Tensor[(1, 15, 10), int32], Tensor[(150, 1), int32], Tensor[(16, 4, 2), float64], Tensor[(420), int64]) {
  @func_7015(%var_7017, %var_7018) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(15, 13, 9), float32], Tensor[(1755), float32], Tensor[(1, 15, 10), int32], Tensor[(150, 1), int32], Tensor[(16, 4, 2), float64], Tensor[(420), int64]) */
}

def @func_6314(%var_6311: Tensor[(144, 15), int64], %var_6312: Tensor[(144, 15), float32], %var_6313: Tensor[(672), float32]) -> (Tensor[(30), uint8], Tensor[(1755), float32], Tensor[(144, 15), float32], Tensor[(16, 4, 2), float64], Tensor[(2520), int64], Tensor[(672), float32]) {
  %670 = fn (%var_6271: Tensor[(144, 15), int64], %var_6287: Tensor[(144, 15), float32], %var_6308: Tensor[(672), float32]) -> (Tensor[(30), uint8], Tensor[(1755), float32], Tensor[(144, 15), float32], Tensor[(16, 4, 2), float64], Tensor[(2520), int64], Tensor[(672), float32]) {
    %632 = cast(meta[relay.Constant][55] /* ty=Tensor[(30), uint8] */, dtype="uint8") /* ty=Tensor[(30), uint8] */;
    %633 = @func_5140() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(15, 117), float32], Tensor[(144, 1), int64]) */;
    %634 = %633.2;
    %635 = cast(%634, dtype="int64") /* ty=Tensor[(144, 1), int64] */;
    %636 = cast(meta[relay.Constant][56] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %637 = reshape(%632, newshape=[5, 6]) /* ty=Tensor[(5, 6), uint8] */;
    %638 = reshape(%635, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %639 = reshape(%636, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %640 = @func_2399(%637, %638, %639) /* ty=(Tensor[(3, 5, 2), bool], Tensor[(5, 6), uint8], Tensor[(1, 2520), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(15, 13, 9), float32], Tensor[(16, 1, 8), float64], Tensor[(128), float64], Tensor[(15, 13, 9), float32], Tensor[(12, 14, 15), float32], Tensor[(?, 14, 5), uint64]) */;
    %641 = %640.4;
    %642 = cast(%641, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %643 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(1755), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %644 = cast(meta[relay.Constant][56] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?), float32] */;
    %646 = cast(%634, dtype="float32") /* ty=Tensor[(144, 1), float32] */;
    %647 = cast(%var_6271, dtype="float32") /* ty=Tensor[(144, 15), float32] */;
    %648 = subtract(%646, %647) /* ty=Tensor[(144, 15), float32] */;
    %649 = cast(%var_6287, dtype="uint32") /* ty=Tensor[(144, 15), uint32] */;
    %650 = shape_of(%648, dtype="int32") /* ty=Tensor[(2), int32] */;
    %651 = cast(%648, dtype="uint32") /* ty=Tensor[(144, 15), uint32] */;
    %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %653 = logical_xor(%651, %652) /* ty=Tensor[(144, 15), uint32] */;
    %654 = cast(%653, dtype="float32") /* ty=Tensor[(144, 15), float32] */;
    %655 = cosh(%654) /* ty=Tensor[(144, 15), float32] */;
    %656 = cast(%655, dtype="float32") /* ty=Tensor[(144, 15), float32] */;
    %657 = cast(%var_6308, dtype="float32") /* ty=Tensor[(672), float32] */;
    %658 = cast(meta[relay.Constant][55] /* ty=Tensor[(30), uint8] */, dtype="uint8") /* ty=Tensor[(30), uint8] */;
    %659 = cast(%634, dtype="int64") /* ty=Tensor[(144, 1), int64] */;
    %660 = cast(meta[relay.Constant][56] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %661 = reshape(%657, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float32] */;
    %662 = reshape(%658, newshape=[30]) /* ty=Tensor[(30), uint8] */;
    %663 = reshape(%659, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %664 = reshape(%660, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %665 = @func_5278(%661, %662, %663, %664) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(2520), int64]) */;
    %666 = divide(%644, %645) /* ty=Tensor[(1755), float32] */;
    %667 = erf(%656) /* ty=Tensor[(144, 15), float32] */;
    %668 = @func_5163() /* ty=Tensor[(16, 4, 2), float64] */;
    %669 = %665.4;
    (meta[relay.Constant][55] /* ty=Tensor[(30), uint8] */, %666, %667, %668, %669, %var_6308)
  };
  %670(%var_6311, %var_6312, %var_6313) /* ty=(Tensor[(30), uint8], Tensor[(1755), float32], Tensor[(144, 15), float32], Tensor[(16, 4, 2), float64], Tensor[(2520), int64], Tensor[(672), float32]) */
}

def @func_5369() -> (Tensor[(12, 9, ?), bool], Tensor[(12, 9, 1), float64]) {
  %671 = cast(meta[relay.Constant][57] /* ty=Tensor[(12, 9, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %672 = cosh(%671) /* ty=Tensor[(12, 9, 1), float64] */;
  %673 = cast(meta[relay.Constant][57] /* ty=Tensor[(12, 9, 1), float64] */, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %674 = shape_of(%672, dtype="int32") /* ty=Tensor[(3), int32] */;
  %675 = cast(%672, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %677 = cast(meta[relay.Constant][57] /* ty=Tensor[(12, 9, 1), float64] */, dtype="float64") /* ty=Tensor[(12, 9, 1), float64] */;
  %678 = not_equal(%675, %676) /* ty=Tensor[(12, 9, ?), bool] */;
  %679 = sinh(%677) /* ty=Tensor[(12, 9, 1), float64] */;
  (%678, %679)
}

def @func_7857() -> (Tensor[(16, 4, 2), int64],) {
  %682 = fn () -> (Tensor[(16, 4, 2), int64],) {
    %680 = @func_4904() /* ty=(Tensor[(16, 4, 2), int64],) */;
    %681 = %680.0;
    (%681,)
  };
  %682() /* ty=(Tensor[(16, 4, 2), int64],) */
}

def @func_5163() -> Tensor[(16, 4, 2), float64] {
  %683 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %683.0
}

def @func_5946() -> (Tensor[(16, 4, 2), int64], Tensor[(13, 8, 8), float32], Tensor[(16, 4, 2), float64]) {
  @func_5944() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(13, 8, 8), float32], Tensor[(16, 4, 2), float64]) */
}

def @func_7484() -> (Tensor[(420), int64], Tensor[(12, 9, 1), float64]) {
  @func_7482() /* ty=(Tensor[(420), int64], Tensor[(12, 9, 1), float64]) */
}

def @func_8051(%var_8050: Tensor[(104, 20), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(16, 4, 2), float32], Tensor[(7, 15, 4), float32], Tensor[(1755), float32], Tensor[(104, 20), float32]) {
  %697 = fn (%var_8034: Tensor[(104, 20), float32]) -> (Tensor[(16, 4, 2), float64], Tensor[(16, 4, 2), float32], Tensor[(7, 15, 4), float32], Tensor[(1755), float32], Tensor[(104, 20), float32]) {
    %684 = @func_6785() /* ty=(Tensor[(16, 4, 2), float32],) */;
    %685 = %684.0;
    %686 = cast(%685, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
    %687 = reshape(%686, newshape=[16, 4, 2]) /* ty=Tensor[(16, 4, 2), float64] */;
    %688 = @func_5994(%687) /* ty=(Tensor[(16, 4, 2), uint8], Tensor[(16, 4, 2), float32], Tensor[(16, 4, 2), float32], Tensor[(7, 15, 4), float32], Tensor[(420), int64]) */;
    %689 = cast(%var_8034, dtype="float32") /* ty=Tensor[(104, 20), float32] */;
    %690 = reshape(%689, newshape=[1040, 2]) /* ty=Tensor[(1040, 2), float32] */;
    %691 = @func_7521(%690) /* ty=(Tensor[(16, 4, 2), float32], Tensor[(2080), float32], Tensor[(1040, 2), float32], Tensor[(1755), float32]) */;
    %692 = cast(%var_8034, dtype="float32") /* ty=Tensor[(104, 20), float32] */;
    %693 = @func_5163() /* ty=Tensor[(16, 4, 2), float64] */;
    %694 = %688.3;
    %695 = %691.3;
    %696 = sqrt(%692) /* ty=Tensor[(104, 20), float32] */;
    (%693, %685, %694, %695, %696)
  };
  %697(%var_8050) /* ty=(Tensor[(16, 4, 2), float64], Tensor[(16, 4, 2), float32], Tensor[(7, 15, 4), float32], Tensor[(1755), float32], Tensor[(104, 20), float32]) */
}

def @func_6926(%var_6905: Tensor[(1, 15, 10), int32]) -> (Tensor[(1, 15, 10), int32], Tensor[(16, 4, 2), int64]) {
  %698 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %699 = cast(%var_6905, dtype="int32") /* ty=Tensor[(1, 15, 10), int32] */;
  %700 = @func_6563() /* ty=(Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64], Tensor[(16, 4, 2), int64]) */;
  %701 = maximum(%698, %699) /* ty=Tensor[(1, 15, 10), int32] */;
  %702 = %700.0;
  (%701, %702)
}

def @func_4361(%var_4357: Tensor[(210), float64], %var_4358: Tensor[(585, 3), float32], %var_4359: Tensor[(280), float32], %var_4360: Tensor[(2520), float32]) -> (Tensor[(144), int64], Tensor[(210), float64], Tensor[(585, 3), float32], Tensor[(16, 4, 2), float32], Tensor[(16, 13, 10), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(15, 13, 9), float32], Tensor[(104, 20), float32]) {
  %746 = fn (%var_4245: Tensor[(210), float64], %var_4246: Tensor[(585, 3), float32], %var_4312: Tensor[(280), float32], %var_4334: Tensor[(2520), float32]) -> (Tensor[(144), int64], Tensor[(210), float64], Tensor[(585, 3), float32], Tensor[(16, 4, 2), float32], Tensor[(16, 13, 10), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(15, 13, 9), float32], Tensor[(104, 20), float32]) {
    %703 = cast(%var_4245, dtype="float64") /* ty=Tensor[(210), float64] */;
    %704 = cast(%var_4246, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
    %705 = reshape(%703, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float64] */;
    %706 = reshape(%704, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %707 = @func_4113(%705, %706) /* ty=(Tensor[(3, 5, 14), float64], Tensor[(16, 13, 10), float32], Tensor[(2080), float64], Tensor[(3, 5, 14), float64], Tensor[(144), int64], Tensor[(280), float32], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(12, 14, 15), float32], Tensor[(3, 840), float32]) */;
    %708 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
    %709 = %708.0;
    %710 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
    %711 = %710.0;
    %712 = cast(%711, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
    %713 = shape_of(%709, dtype="int32") /* ty=Tensor[(3), int32] */;
    %714 = cast(%709, dtype="float32") /* ty=Tensor[(16, 4, 2), float32] */;
    %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %716 = cast(meta[relay.Constant][58] /* ty=Tensor[(104, 20), float32] */, dtype="float32") /* ty=Tensor[(104, 20), float32] */;
    %717 = reshape(%716, newshape=[16, 13, 10]) /* ty=Tensor[(16, 13, 10), float32] */;
    %718 = cast(%var_4312, dtype="float32") /* ty=Tensor[(280), float32] */;
    %719 = %707.4;
    %720 = cast(%719, dtype="int64") /* ty=Tensor[(144), int64] */;
    %721 = cast(%var_4246, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
    %722 = cast(%var_4312, dtype="float32") /* ty=Tensor[(280), float32] */;
    %723 = reshape(%718, newshape=[14, 4, 5]) /* ty=Tensor[(14, 4, 5), float32] */;
    %724 = reshape(%720, newshape=[144]) /* ty=Tensor[(144), int64] */;
    %725 = reshape(%721, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %726 = reshape(%722, newshape=[14, 4, 5]) /* ty=Tensor[(14, 4, 5), float32] */;
    %727 = @func_3879(%723, %724, %725, %726) /* ty=(Tensor[(128), float64], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(14, 4, 5), uint8]) */;
    %728 = cast(meta[relay.Constant][59] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
    %729 = reshape(%728, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
    %730 = cast(%var_4334, dtype="float32") /* ty=Tensor[(2520), float32] */;
    %731 = reshape(%730, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), float32] */;
    %732 = @func_219(%731) /* ty=(Tensor[(12, 14, 15), float32],) */;
    %733 = cast(%var_4246, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
    %734 = reshape(%733, newshape=[15, 13, 9]) /* ty=Tensor[(15, 13, 9), float32] */;
    %735 = @func_229(%734) /* ty=(Tensor[(15, 13, 9), float32],) */;
    %736 = cast(meta[relay.Constant][58] /* ty=Tensor[(104, 20), float32] */, dtype="float64") /* ty=Tensor[(104, 20), float64] */;
    %737 = cos(%736) /* ty=Tensor[(104, 20), float64] */;
    %738 = cast(%737, dtype="float32") /* ty=Tensor[(104, 20), float32] */;
    %739 = mod(%714, %715) /* ty=Tensor[(16, 4, 2), float32] */;
    %740 = @func_3461(%717) /* ty=Tensor[(16, 13, 10), float32] */;
    %741 = %727.4;
    %742 = @func_132(%729) /* ty=Tensor[(13, 8, 8), float32] */;
    %743 = %732.0;
    %744 = %735.0;
    %745 = acosh(%738) /* ty=Tensor[(104, 20), float32] */;
    (%719, %var_4245, %var_4246, %739, %740, %741, %var_4312, %742, meta[relay.Constant][59] /* ty=Tensor[(832), float64] */, %743, %var_4334, %744, %745)
  };
  %746(%var_4357, %var_4358, %var_4359, %var_4360) /* ty=(Tensor[(144), int64], Tensor[(210), float64], Tensor[(585, 3), float32], Tensor[(16, 4, 2), float32], Tensor[(16, 13, 10), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(15, 13, 9), float32], Tensor[(104, 20), float32]) */
}

def @func_5615(%var_5578: float32, %var_5579: Tensor[(210), float32], %var_5581: Tensor[(2520), float32], %var_5606: Tensor[(30), uint8], %var_5607: Tensor[(585, 3), float32]) -> (Tensor[(1, 832), float64], Tensor[(2, 15, 7), float32], float32, Tensor[(210), float32], Tensor[(2520), float32], Tensor[(7, 15, 4), float32], Tensor[(420), int64], Tensor[(16, 4, 2), float64], Tensor[(24, 6), float32], Tensor[(30), uint8], Tensor[(672), float32], Tensor[(30), uint8], Tensor[(585, 3), float32], Tensor[(24, 6), float32]) {
  %747 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %748 = cast(%var_5578, dtype="float32") /* ty=float32 */;
  %749 = cast(%var_5579, dtype="float32") /* ty=Tensor[(210), float32] */;
  %750 = cast(meta[relay.Constant][60] /* ty=Tensor[(24, 6), int64] */, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %751 = cast(%var_5581, dtype="float32") /* ty=Tensor[(2520), float32] */;
  %752 = reshape(%748, newshape=[]) /* ty=float32 */;
  %753 = reshape(%749, newshape=[2, 15, 7]) /* ty=Tensor[(2, 15, 7), float32] */;
  %754 = reshape(%750, newshape=[2, 72]) /* ty=Tensor[(2, 72), int64] */;
  %755 = reshape(%751, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
  %756 = @func_4723(%752, %753, %754, %755) /* ty=(Tensor[(2, 15, 7), float32], Tensor[(13, 8, 8), float32], Tensor[(2, 72), int64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32]) */;
  %757 = cast(meta[relay.Constant][61] /* ty=Tensor[(420), int64] */, dtype="int64") /* ty=Tensor[(420), int64] */;
  %758 = cast(meta[relay.Constant][61] /* ty=Tensor[(420), int64] */, dtype="int64") /* ty=Tensor[(420), int64] */;
  %759 = cast(meta[relay.Constant][61] /* ty=Tensor[(420), int64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %760 = reshape(%757, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
  %761 = reshape(%758, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), int64] */;
  %762 = reshape(%759, newshape=[7, 15, 4]) /* ty=Tensor[(7, 15, 4), float64] */;
  %763 = @func_4596(%760, %761, %762) /* ty=(Tensor[(7, 15, 4), int64], Tensor[(7, 15, 4), float32], Tensor[(13, 8, 8), float32], Tensor[(1, 832), float64], Tensor[(16, 4, 2), float64], Tensor[(7, 15, 4), int8]) */;
  %764 = @func_4441() /* ty=(Tensor[(16, 4, 2), float64],) */;
  %765 = cast(meta[relay.Constant][60] /* ty=Tensor[(24, 6), int64] */, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %766 = sinh(%765) /* ty=Tensor[(24, 6), float32] */;
  %767 = cast(%766, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %768 = cast(meta[relay.Constant][62] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %769 = cast(%var_5606, dtype="uint8") /* ty=Tensor[(30), uint8] */;
  %770 = cast(meta[relay.Constant][60] /* ty=Tensor[(24, 6), int64] */, dtype="int64") /* ty=Tensor[(24, 6), int64] */;
  %771 = cast(%var_5607, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %772 = reshape(%768, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float32] */;
  %773 = reshape(%769, newshape=[30]) /* ty=Tensor[(30), uint8] */;
  %774 = reshape(%770, newshape=[144]) /* ty=Tensor[(144), int64] */;
  %775 = reshape(%771, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %776 = @func_5278(%772, %773, %774, %775) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(2520), int64]) */;
  %777 = cast(meta[relay.Constant][63] /* ty=Tensor[(24, 6), float32] */, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %778 = shape_of(%766, dtype="int32") /* ty=Tensor[(2), int32] */;
  %779 = cast(%766, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %781 = %747.1;
  %782 = %756.0;
  %783 = %763.1;
  %784 = %764.0;
  %785 = erf(%767) /* ty=Tensor[(24, 6), float32] */;
  %786 = %776.1;
  %787 = mod(%779, %780) /* ty=Tensor[(24, 6), float32] */;
  (%781, %782, %var_5578, %var_5579, %var_5581, %783, meta[relay.Constant][61] /* ty=Tensor[(420), int64] */, %784, %785, %786, meta[relay.Constant][62] /* ty=Tensor[(672), float32] */, %var_5606, %var_5607, %787)
}

def @func_4600(%var_4597: Tensor[(7, 15, 4), int64], %var_4598: Tensor[(7, 15, 4), int64], %var_4599: Tensor[(7, 15, 4), float64]) -> (Tensor[(7, 15, 4), int64], Tensor[(7, 15, 4), float32], Tensor[(13, 8, 8), float32], Tensor[(1, 832), float64], Tensor[(16, 4, 2), float64], Tensor[(7, 15, 4), int8]) {
  %813 = fn (%var_4479: Tensor[(7, 15, 4), int64], %var_4480: Tensor[(7, 15, 4), int64], %var_4587: Tensor[(7, 15, 4), float64]) -> (Tensor[(7, 15, 4), int64], Tensor[(7, 15, 4), float32], Tensor[(13, 8, 8), float32], Tensor[(1, 832), float64], Tensor[(16, 4, 2), float64], Tensor[(7, 15, 4), int8]) {
    %788 = cast(%var_4480, dtype="int64") /* ty=Tensor[(7, 15, 4), int64] */;
    %789 = shape_of(%var_4479, dtype="int32") /* ty=Tensor[(3), int32] */;
    %790 = cast(%var_4479, dtype="int64") /* ty=Tensor[(7, 15, 4), int64] */;
    %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %792 = cast(%var_4480, dtype="float32") /* ty=Tensor[(7, 15, 4), float32] */;
    %793 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 832), float64] */, dtype="float64") /* ty=Tensor[(1, 832), float64] */;
    %794 = reshape(%793, newshape=[13, 8, 8]) /* ty=Tensor[(13, 8, 8), float64] */;
    %795 = @func_4441() /* ty=(Tensor[(16, 4, 2), float64],) */;
    %796 = cast(%var_4480, dtype="float64") /* ty=Tensor[(7, 15, 4), float64] */;
    %797 = rsqrt(%796) /* ty=Tensor[(7, 15, 4), float64] */;
    %798 = cast(%797, dtype="float32") /* ty=Tensor[(7, 15, 4), float32] */;
    %799 = sinh(%798) /* ty=Tensor[(7, 15, 4), float32] */;
    %800 = cast(%799, dtype="float32") /* ty=Tensor[(7, 15, 4), float32] */;
    %801 = log(%800) /* ty=Tensor[(7, 15, 4), float32] */;
    %802 = cast(%801, dtype="float64") /* ty=Tensor[(7, 15, 4), float64] */;
    %803 = exp(%802) /* ty=Tensor[(7, 15, 4), float64] */;
    %804 = cast(%var_4587, dtype="int8") /* ty=Tensor[(7, 15, 4), int8] */;
    %805 = shape_of(%803, dtype="int32") /* ty=Tensor[(3), int32] */;
    %806 = cast(%803, dtype="int8") /* ty=Tensor[(7, 15, 4), int8] */;
    %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %808 = bitwise_xor(%790, %791) /* ty=Tensor[(7, 15, 4), int64] */;
    %809 = acosh(%792) /* ty=Tensor[(7, 15, 4), float32] */;
    %810 = @func_132(%794) /* ty=Tensor[(13, 8, 8), float32] */;
    %811 = %795.0;
    %812 = bitwise_or(%806, %807) /* ty=Tensor[(7, 15, 4), int8] */;
    (%808, %809, %810, meta[relay.Constant][64] /* ty=Tensor[(1, 832), float64] */, %811, %812)
  };
  %813(%var_4597, %var_4598, %var_4599) /* ty=(Tensor[(7, 15, 4), int64], Tensor[(7, 15, 4), float32], Tensor[(13, 8, 8), float32], Tensor[(1, 832), float64], Tensor[(16, 4, 2), float64], Tensor[(7, 15, 4), int8]) */
}

def @func_5525() -> (Tensor[(16, 4, 2), float32],) {
  %814 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
  %815 = %814.0;
  (%815,)
}

def @func_8739() -> (Tensor[(12, 9, 1), float64],) {
  @func_8737() /* ty=(Tensor[(12, 9, 1), float64],) */
}

def @func_5307(%var_5291: Tensor[(10, 832), float64]) -> (Tensor[(10, 832), float64],) {
  %816 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
  %817 = %816.1;
  %818 = cast(%817, dtype="bool") /* ty=Tensor[(1, 832), bool] */;
  %819 = cast(%var_5291, dtype="bool") /* ty=Tensor[(10, 832), bool] */;
  %820 = greater(%818, %819) /* ty=Tensor[(10, 832), bool] */;
  %821 = cast(%820, dtype="float64") /* ty=Tensor[(10, 832), float64] */;
  %822 = sigmoid(%821) /* ty=Tensor[(10, 832), float64] */;
  (%822,)
}

def @func_4408(%var_4407: Tensor[(144), int64]) -> (Tensor[(16, 4, 2), float32], Tensor[(13, 8, 8), float32], Tensor[(144), int64], Tensor[(15, 117), float32]) {
  %833 = fn (%var_4401: Tensor[(144), int64]) -> (Tensor[(16, 4, 2), float32], Tensor[(13, 8, 8), float32], Tensor[(144), int64], Tensor[(15, 117), float32]) {
    %823 = @func_4164() /* ty=(Tensor[(16, 4, 2), float32],) */;
    %824 = cast(%var_4401, dtype="int64") /* ty=Tensor[(144), int64] */;
    %825 = %823.0;
    %826 = cast(%825, dtype="float64") /* ty=Tensor[(16, 4, 2), float64] */;
    %827 = cast(meta[relay.Constant][65] /* ty=Tensor[(15, 117), float32] */, dtype="float32") /* ty=Tensor[(15, 117), float32] */;
    %828 = reshape(%824, newshape=[2, 6, 12]) /* ty=Tensor[(2, 6, 12), int64] */;
    %829 = reshape(%826, newshape=[2, 64]) /* ty=Tensor[(2, 64), float64] */;
    %830 = reshape(%827, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %831 = @func_1844(%828, %829, %830) /* ty=(Tensor[(16, 1, 8), float64], Tensor[(2, 64), float64], Tensor[(13, 8, 8), float32], Tensor[(15, 13, 9), float32], Tensor[(1755), float32], Tensor[(2, 6, 12), bool], Tensor[(2, 6, 12), float64]) */;
    %832 = %831.2;
    (%825, %832, %var_4401, meta[relay.Constant][65] /* ty=Tensor[(15, 117), float32] */)
  };
  %833(%var_4407) /* ty=(Tensor[(16, 4, 2), float32], Tensor[(13, 8, 8), float32], Tensor[(144), int64], Tensor[(15, 117), float32]) */
}

def @func_5908(%var_5902: Tensor[(4, 13, 16), float64], %var_5903: Tensor[(4, 13, 16), float64], %var_5904: Tensor[(210), float64], %var_5905: Tensor[(1755), float32], %var_5906: Tensor[(2520), float32], %var_5907: Tensor[(16, 4, 2), int64]) -> (Tensor[(210), float64], Tensor[(210), float64], Tensor[(1755), float32], Tensor[(280), float32], Tensor[(2520), float32], Tensor[(420), int64], Tensor[(4, 13, 16), bool], Tensor[(4, 13, 16), uint64], Tensor[(6, 13, 15), uint64], Tensor[(1170), uint16], Tensor[(16, 4, 2), int16]) {
  %871 = fn (%var_5809: Tensor[(4, 13, 16), float64], %var_5810: Tensor[(4, 13, 16), float64], %var_5820: Tensor[(210), float64], %var_5821: Tensor[(1755), float32], %var_5823: Tensor[(2520), float32], %var_5895: Tensor[(16, 4, 2), int64]) -> (Tensor[(210), float64], Tensor[(210), float64], Tensor[(1755), float32], Tensor[(280), float32], Tensor[(2520), float32], Tensor[(420), int64], Tensor[(4, 13, 16), bool], Tensor[(4, 13, 16), uint64], Tensor[(6, 13, 15), uint64], Tensor[(1170), uint16], Tensor[(16, 4, 2), int16]) {
    %834 = cast(%var_5820, dtype="float64") /* ty=Tensor[(210), float64] */;
    %835 = cast(%var_5821, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %836 = cast(meta[relay.Constant][66] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %837 = cast(%var_5823, dtype="float32") /* ty=Tensor[(2520), float32] */;
    %838 = reshape(%834, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %839 = reshape(%835, newshape=[585, 3]) /* ty=Tensor[(585, 3), float32] */;
    %840 = reshape(%836, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %841 = reshape(%837, newshape=[2520]) /* ty=Tensor[(2520), float32] */;
    %842 = @func_4356(%838, %839, %840, %841) /* ty=(Tensor[(144), int64], Tensor[(210), float64], Tensor[(585, 3), float32], Tensor[(16, 4, 2), float32], Tensor[(16, 13, 10), float32], Tensor[(14, 4, 5), uint8], Tensor[(280), float32], Tensor[(13, 8, 8), float32], Tensor[(832), float64], Tensor[(12, 14, 15), float32], Tensor[(2520), float32], Tensor[(15, 13, 9), float32], Tensor[(104, 20), float32]) */;
    %843 = cast(%var_5810, dtype="float64") /* ty=Tensor[(4, 13, 16), float64] */;
    %844 = shape_of(%var_5809, dtype="int32") /* ty=Tensor[(3), int32] */;
    %845 = cast(%var_5809, dtype="float64") /* ty=Tensor[(4, 13, 16), float64] */;
    %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %847 = divide(%845, %846) /* ty=Tensor[(4, 13, 16), float64] */;
    %848 = cast(%var_5809, dtype="bool") /* ty=Tensor[(4, 13, 16), bool] */;
    %849 = shape_of(%847, dtype="int32") /* ty=Tensor[(3), int32] */;
    %850 = cast(%847, dtype="bool") /* ty=Tensor[(4, 13, 16), bool] */;
    %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %852 = cast(%847, dtype="uint64") /* ty=Tensor[(4, 13, 16), uint64] */;
    %853 = shape_of(%var_5810, dtype="int32") /* ty=Tensor[(3), int32] */;
    %854 = cast(%var_5810, dtype="uint64") /* ty=Tensor[(4, 13, 16), uint64] */;
    %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %856 = cast(meta[relay.Constant][67] /* ty=Tensor[(1170), uint16] */, dtype="uint16") /* ty=Tensor[(1170), uint16] */;
    %857 = reshape(%856, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), uint16] */;
    %858 = @func_5717(%857) /* ty=(Tensor[(6, 13, 15), uint16], Tensor[(16, 4, 2), int64], Tensor[(2520), float32], Tensor[(1755), float32], Tensor[(6, 13, 15), uint64]) */;
    %859 = @func_4904() /* ty=(Tensor[(16, 4, 2), int64],) */;
    %860 = %859.0;
    %861 = cast(%var_5895, dtype="int16") /* ty=Tensor[(16, 4, 2), int16] */;
    %862 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
    %863 = cast(%860, dtype="int16") /* ty=Tensor[(16, 4, 2), int16] */;
    %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %865 = %842.1;
    %866 = @func_5393() /* ty=Tensor[(420), int64] */;
    %867 = less(%850, %851) /* ty=Tensor[(4, 13, 16), bool] */;
    %868 = bitwise_or(%854, %855) /* ty=Tensor[(4, 13, 16), uint64] */;
    %869 = %858.4;
    %870 = minimum(%863, %864) /* ty=Tensor[(16, 4, 2), int16] */;
    (%865, %var_5820, %var_5821, meta[relay.Constant][66] /* ty=Tensor[(280), float32] */, %var_5823, %866, %867, %868, %869, meta[relay.Constant][67] /* ty=Tensor[(1170), uint16] */, %870)
  };
  %871(%var_5902, %var_5903, %var_5904, %var_5905, %var_5906, %var_5907) /* ty=(Tensor[(210), float64], Tensor[(210), float64], Tensor[(1755), float32], Tensor[(280), float32], Tensor[(2520), float32], Tensor[(420), int64], Tensor[(4, 13, 16), bool], Tensor[(4, 13, 16), uint64], Tensor[(6, 13, 15), uint64], Tensor[(1170), uint16], Tensor[(16, 4, 2), int16]) */
}

def @func_5527() -> (Tensor[(16, 4, 2), float32],) {
  @func_5525() /* ty=(Tensor[(16, 4, 2), float32],) */
}

def @func_7392(%var_7390: Tensor[(672), float32], %var_7391: Tensor[(1755), float32]) -> (Tensor[(16, 4, 2), int64], Tensor[(2160), int64], Tensor[(672), float32], Tensor[(1755), bool]) {
  %887 = fn (%var_7371: Tensor[(672), float32], %var_7373: Tensor[(1755), float32]) -> (Tensor[(16, 4, 2), int64], Tensor[(2160), int64], Tensor[(672), float32], Tensor[(1755), bool]) {
    %872 = @func_6088() /* ty=(Tensor[(16, 4, 2), int64],) */;
    %873 = cast(meta[relay.Constant][68] /* ty=Tensor[(2160), int64] */, dtype="int64") /* ty=Tensor[(2160), int64] */;
    %874 = cast(meta[relay.Constant][68] /* ty=Tensor[(2160), int64] */, dtype="float32") /* ty=Tensor[(2160), float32] */;
    %875 = cast(%var_7371, dtype="float32") /* ty=Tensor[(672), float32] */;
    %876 = reshape(%873, newshape=[144, 15]) /* ty=Tensor[(144, 15), int64] */;
    %877 = reshape(%874, newshape=[144, 15]) /* ty=Tensor[(144, 15), float32] */;
    %878 = reshape(%875, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %879 = @func_6310(%876, %877, %878) /* ty=(Tensor[(30), uint8], Tensor[(1755), float32], Tensor[(144, 15), float32], Tensor[(16, 4, 2), float64], Tensor[(2520), int64], Tensor[(672), float32]) */;
    %880 = %879.1;
    %881 = cast(%var_7373, dtype="bool") /* ty=Tensor[(1755), bool] */;
    %882 = shape_of(%880, dtype="int32") /* ty=Tensor[(1), int32] */;
    %883 = cast(%880, dtype="bool") /* ty=Tensor[(1755), bool] */;
    %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?), bool] */;
    %885 = %872.0;
    %886 = greater(%883, %884) /* ty=Tensor[(1755), bool] */;
    (%885, meta[relay.Constant][68] /* ty=Tensor[(2160), int64] */, %var_7371, %886)
  };
  %887(%var_7390, %var_7391) /* ty=(Tensor[(16, 4, 2), int64], Tensor[(2160), int64], Tensor[(672), float32], Tensor[(1755), bool]) */
}

def @func_7048(%var_7029: Tensor[(3, 11, 10), int64], %var_7030: Tensor[(3, 11, 10), int64], %var_7040: Tensor[(150), int32]) -> (Tensor[(3, 11, 10), bool], Tensor[(16, 4, 2), int64], Tensor[(150), int32]) {
  %888 = cast(%var_7030, dtype="bool") /* ty=Tensor[(3, 11, 10), bool] */;
  %889 = shape_of(%var_7029, dtype="int32") /* ty=Tensor[(3), int32] */;
  %890 = cast(%var_7029, dtype="bool") /* ty=Tensor[(3, 11, 10), bool] */;
  %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %892 = cast(%var_7040, dtype="int32") /* ty=Tensor[(150), int32] */;
  %893 = reshape(%892, newshape=[1, 15, 10]) /* ty=Tensor[(1, 15, 10), int32] */;
  %894 = @func_6926(%893) /* ty=(Tensor[(1, 15, 10), int32], Tensor[(16, 4, 2), int64]) */;
  %895 = greater_equal(%890, %891) /* ty=Tensor[(3, 11, 10), bool] */;
  %896 = %894.1;
  (%895, %896, %var_7040)
}

def @func_7557() -> Tensor[(420), int64] {
  %898 = fn () -> Tensor[(420), int64] {
    %897 = @func_4995() /* ty=(Tensor[(16, 4, 2), float64], Tensor[(1, 832), float64], Tensor[(420), int64]) */;
    %897.2
  };
  %898() /* ty=Tensor[(420), int64] */
}

def @func_3885(%var_3881: Tensor[(14, 4, 5), float32], %var_3882: Tensor[(144), int64], %var_3883: Tensor[(1755), float32], %var_3884: Tensor[(14, 4, 5), float32]) -> (Tensor[(128), float64], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(14, 4, 5), uint8]) {
  @func_3879(%var_3881, %var_3882, %var_3883, %var_3884) /* ty=(Tensor[(128), float64], Tensor[(30), uint8], Tensor[(144), int64], Tensor[(1755), float32], Tensor[(14, 4, 5), uint8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen251/build/output.py:1894: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen251/build/output.py", line 1899, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(234) tvmgen_default_fused_cast_sin_cast_log_kernel0(double* __restrict__ T_log, short* __restrict__ placeholder) {
  T_log[(((int)threadIdx.x))] = log(((double)__sinf(((float)placeholder[(((int)threadIdx.x))]))));
}

extern "C" __global__ void __launch_bounds__(234) tvmgen_default_fused_cast_asin_kernel0(double* __restrict__ T_asin, short* __restrict__ placeholder) {
  T_asin[(((int)threadIdx.x))] = asin(((double)placeholder[(((int)threadIdx.x))]));
}

extern "C" __global__ void __launch_bounds__(234) tvmgen_default_fused_reshape_right_shift_kernel0(short* __restrict__ T_right_shift, short* __restrict__ placeholder, short* __restrict__ placeholder1) {
  T_right_shift[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] >> placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


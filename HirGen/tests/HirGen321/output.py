import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_40 = relay.const([[[-3.963426,7.672256,-9.020005],[-7.419002,-8.061657,8.070928],[-8.720483,-6.936608,4.993533],[-7.125136,7.244726,7.212544],[3.147828,0.398627,2.831644],[-6.220766,3.495674,-0.118073],[7.724642,8.701812,9.197261],[-1.902595,-1.600418,-6.377395],[4.116710,8.131029,2.079062],[-8.460946,-5.037030,3.062105],[-2.619775,-6.548516,5.863496],[2.836337,3.925836,1.723159],[9.850170,-1.974518,-7.805711],[1.287236,8.031003,-3.082660],[2.456469,6.435959,-7.619034],[-0.694417,-1.006889,-2.841648]],[[6.347267,4.681122,8.884464],[6.654399,-5.382949,-8.158670],[-1.073534,2.214980,-9.924531],[-1.461044,-8.609500,9.604424],[-5.812299,9.671450,-4.443728],[4.289057,5.789794,8.798851],[4.922276,6.684264,-8.527608],[-2.877554,4.009473,5.251112],[1.627233,-2.249299,0.195146],[9.856326,5.876566,0.474953],[-5.377292,6.996492,1.599281],[-9.241973,1.223197,-8.405550],[3.442761,0.756674,-4.281136],[-0.821829,-1.959831,0.189180],[2.456321,-6.828980,4.814673],[-3.626694,-4.538178,7.795026]],[[-8.141297,-5.175854,4.797992],[-6.212002,3.537225,-2.762951],[-8.967915,9.033904,2.794930],[-7.414382,6.126969,0.729901],[-3.390321,5.479843,9.866805],[-6.716231,-5.465732,0.864178],[-7.036465,0.653370,5.663377],[2.414975,-2.822919,8.494488],[-3.229883,-9.497411,-6.034410],[-1.136922,-4.176801,1.882736],[5.479690,6.566831,-9.678798],[1.297005,-5.319579,-0.764587],[-3.699952,3.655081,-3.723821],[-9.081086,0.030580,9.598817],[-0.374284,-3.191533,4.419278],[-7.214837,-8.954276,-0.323106]],[[2.246635,1.399595,-3.254205],[2.861951,0.373121,-6.044170],[0.859871,-2.810685,2.479442],[-5.329381,-4.548301,-9.377052],[-3.282291,-1.837113,0.121198],[3.633906,-8.824408,-4.770048],[-1.322775,-9.278019,1.495256],[-1.389200,9.173937,4.986499],[-8.999559,3.834288,-9.944433],[-0.758429,-1.113840,0.430846],[3.624886,-1.709768,8.381186],[0.144765,0.596928,-1.700802],[-1.337515,0.871977,9.796823],[-9.436360,3.999712,-0.056745],[-2.122325,-9.538511,6.336454],[-9.540340,6.197437,4.570321]],[[8.224299,-7.414823,-9.025669],[5.828622,8.764550,-2.799995],[5.381552,-1.107520,-1.453672],[8.496595,4.278424,-8.650309],[6.217027,-9.342244,0.470291],[-7.182579,-6.960573,0.894881],[4.784212,9.217368,-1.446384],[1.808408,-6.848576,-0.311340],[4.769335,5.118887,6.908746],[8.970535,-2.657703,2.941908],[0.171922,0.117880,3.131292],[-2.792933,6.499540,4.804754],[-9.181411,-8.828360,0.295960],[1.207664,-7.799401,3.187826],[-3.955760,-2.095608,-6.428839],[9.472585,4.864816,8.739935]],[[8.761051,1.042395,9.837314],[-3.809910,-9.042273,0.029710],[3.727915,-1.055495,4.620944],[-3.261177,-1.479814,9.805680],[-7.919879,0.786017,6.679020],[-6.927279,-0.692201,7.509511],[0.623945,9.631963,-8.348205],[2.945909,-7.099999,3.068097],[2.351399,6.730397,0.115346],[3.669226,0.112157,9.641314],[7.655052,-9.695242,-9.092611],[-1.179669,4.613678,7.010601],[-6.407406,-9.059108,-3.317576],[-5.739323,9.047819,0.266894],[-3.706775,-5.636777,9.159547],[-9.278639,-0.739556,2.215724]],[[9.697511,-9.335891,3.992645],[-3.138934,-9.030579,-4.662236],[9.083513,-0.503437,6.760977],[3.770643,-5.151050,3.915371],[5.183807,6.001000,-4.278364],[-1.374678,-1.195371,1.020385],[-5.293279,4.366839,-9.741805],[3.192634,-4.105324,-9.565732],[-0.652162,-5.695424,8.133012],[-7.612521,2.221264,-7.286626],[-3.735286,7.155014,0.971104],[3.368085,8.889938,-9.741305],[-3.330676,0.654736,-0.274815],[-4.742850,6.246025,7.896122],[5.490675,6.958312,8.435095],[-6.404335,8.008465,-9.041713]],[[-2.241033,-8.336442,-1.508785],[6.457867,5.398420,-0.119261],[-2.652779,-4.621701,8.540404],[2.926780,1.834293,5.990169],[-1.828973,6.912342,-2.300323],[7.848610,7.036723,-0.387960],[-5.269607,-2.240816,-7.046156],[2.660344,-0.716690,-3.439607],[-4.245505,-7.970913,-8.374052],[-9.266162,0.584163,-1.421228],[-1.705544,7.548909,-7.814919],[1.649867,0.788164,-0.355327],[-1.050344,9.005512,1.124406],[-5.046199,4.572820,9.022186],[4.389280,-8.758439,0.219510],[-5.442808,-9.123229,7.256252]],[[2.711104,-7.511289,2.830561],[-1.850181,-2.401144,-0.769099],[3.330669,0.473529,2.033456],[-1.405674,0.265608,5.932955],[-0.823631,-6.933912,2.116125],[2.052686,-6.159151,-5.017118],[-3.082900,-1.913755,-3.296416],[-3.147050,7.670745,-3.984334],[-7.933470,0.630677,5.028593],[8.612025,-2.444615,1.691598],[4.844713,-8.776027,-7.030821],[9.291424,8.560597,5.350916],[-0.361920,0.420855,-2.011019],[-1.341396,0.860345,-7.844527],[7.231244,-4.054884,4.081125],[0.483299,-5.003670,-1.351757]]], dtype = "float32")#candidate|40|(9, 16, 3)|const|float32
var_41 = relay.var("var_41", dtype = "float32", shape = (9, 16, 3))#candidate|41|(9, 16, 3)|var|float32
bop_42 = relay.divide(const_40.astype('float32'), relay.reshape(var_41.astype('float32'), relay.shape_of(const_40))) # shape=(9, 16, 3)
uop_45 = relay.acosh(bop_42.astype('float64')) # shape=(9, 16, 3)
output = uop_45
output2 = uop_45
func_57 = relay.Function([var_41,], output)
mod['func_57'] = func_57
mod = relay.transform.InferType()(mod)
var_58 = relay.var("var_58", dtype = "float32", shape = (9, 16, 3))#candidate|58|(9, 16, 3)|var|float32
output = func_57(var_58)
func_59 = relay.Function([var_58], output)
mutated_mod['func_59'] = func_59
mutated_mod = relay.transform.InferType()(mutated_mod)
const_145 = relay.const([[[-5,4],[-9,3],[10,9],[5,6],[-4,1],[8,4],[10,-2],[7,1],[-9,5],[-1,-7],[-2,-10]],[[8,9],[6,5],[-6,9],[3,3],[7,2],[-6,-6],[-5,7],[-9,4],[-6,1],[-5,-5],[5,10]],[[-5,-10],[4,8],[6,8],[-7,9],[-3,-5],[-6,-10],[-3,3],[-1,6],[4,8],[-7,-8],[2,-4]],[[-3,9],[8,5],[-2,-6],[-10,-3],[-1,-6],[-6,-3],[-5,-5],[8,-10],[-6,7],[2,-9],[-6,9]],[[3,-8],[-2,9],[1,10],[6,-4],[7,-7],[2,-7],[5,1],[1,9],[4,8],[2,-6],[3,10]],[[3,8],[-8,5],[9,6],[-7,9],[-7,-10],[6,6],[9,-4],[10,-4],[9,-5],[4,-1],[-1,1]],[[2,-4],[8,9],[-5,-5],[-1,-5],[-4,3],[8,2],[-9,9],[10,10],[9,2],[-9,3],[-7,6]],[[-7,8],[1,-5],[-3,-5],[2,4],[1,3],[-7,7],[-5,10],[9,2],[9,7],[3,-1],[3,-7]],[[-9,8],[-5,9],[-7,6],[9,5],[-1,5],[-7,2],[-8,-4],[-10,-7],[-4,-6],[-5,8],[5,3]],[[-9,-3],[-7,4],[5,-4],[10,4],[-1,-6],[6,-3],[-1,3],[7,2],[-4,10],[-5,5],[-10,-3]],[[-9,8],[-7,-4],[-6,-2],[-9,3],[-10,-4],[1,-6],[-6,-6],[-2,-5],[-5,-10],[7,3],[-2,-2]],[[-1,9],[-1,-6],[4,-9],[-4,9],[6,-6],[8,3],[-9,-1],[-3,-4],[-2,-4],[5,-5],[3,-1]],[[1,-5],[-3,7],[-7,9],[7,9],[-4,4],[7,9],[1,2],[10,-3],[3,-7],[8,-10],[-4,-3]]], dtype = "uint8")#candidate|145|(13, 11, 2)|const|uint8
var_146 = relay.var("var_146", dtype = "uint8", shape = (13, 11, 2))#candidate|146|(13, 11, 2)|var|uint8
bop_147 = relay.minimum(const_145.astype('uint8'), relay.reshape(var_146.astype('uint8'), relay.shape_of(const_145))) # shape=(13, 11, 2)
func_57_call = mod.get_global_var('func_57')
func_59_call = mutated_mod.get_global_var('func_59')
var_152 = relay.var("var_152", dtype = "float32", shape = (1, 432))#candidate|152|(1, 432)|var|float32
call_151 = func_57_call(relay.reshape(var_152.astype('float32'), [9, 16, 3]))
call_153 = func_57_call(relay.reshape(var_152.astype('float32'), [9, 16, 3]))
output = relay.Tuple([bop_147,call_151,var_152,])
output2 = relay.Tuple([bop_147,call_153,var_152,])
func_159 = relay.Function([var_146,var_152,], output)
mod['func_159'] = func_159
mod = relay.transform.InferType()(mod)
mutated_mod['func_159'] = func_159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_159_call = mutated_mod.get_global_var('func_159')
var_161 = relay.var("var_161", dtype = "uint8", shape = (13, 11, 2))#candidate|161|(13, 11, 2)|var|uint8
var_162 = relay.var("var_162", dtype = "float32", shape = (1, 432))#candidate|162|(1, 432)|var|float32
call_160 = func_159_call(var_161,var_162,)
output = call_160
func_163 = relay.Function([var_161,var_162,], output)
mutated_mod['func_163'] = func_163
mutated_mod = relay.transform.InferType()(mutated_mod)
const_168 = relay.const([[[-6.834569,8.348904,-6.261538,5.503973,-8.401969,6.519611]],[[-9.000272,-9.207774,5.987737,6.747583,-6.778270,-0.041179]],[[3.647105,-3.811418,2.735544,-4.836179,-4.688294,4.555078]],[[4.089521,8.974907,-4.520094,4.157653,-1.113927,-3.402472]],[[7.810383,7.466935,-6.231942,-1.417210,7.880065,8.105488]],[[5.998770,-5.589696,-3.223246,-1.479039,7.034139,1.602576]],[[-0.551178,-0.161242,-1.869639,9.170010,5.107857,-4.977595]],[[-7.932134,0.013697,2.112961,7.932799,-4.709423,-9.021688]],[[4.155250,-5.513002,-9.678773,-1.938910,-1.134912,5.040473]],[[-8.597674,3.158974,3.927330,8.138940,-5.983038,4.949462]],[[0.192503,-7.813529,4.332659,-0.481042,-8.177529,3.476917]],[[-0.025484,2.485420,-4.546628,-7.880545,6.194435,-8.887869]]], dtype = "float32")#candidate|168|(12, 1, 6)|const|float32
uop_169 = relay.sinh(const_168.astype('float32')) # shape=(12, 1, 6)
bop_173 = relay.minimum(uop_169.astype('int64'), relay.reshape(const_168.astype('int64'), relay.shape_of(uop_169))) # shape=(12, 1, 6)
output = bop_173
output2 = bop_173
func_176 = relay.Function([], output)
mod['func_176'] = func_176
mod = relay.transform.InferType()(mod)
output = func_176()
func_177 = relay.Function([], output)
mutated_mod['func_177'] = func_177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_176_call = mod.get_global_var('func_176')
func_177_call = mutated_mod.get_global_var('func_177')
call_215 = func_176_call()
call_216 = func_176_call()
output = call_215
output2 = call_216
func_223 = relay.Function([], output)
mod['func_223'] = func_223
mod = relay.transform.InferType()(mod)
mutated_mod['func_223'] = func_223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_223_call = mutated_mod.get_global_var('func_223')
call_224 = func_223_call()
output = call_224
func_225 = relay.Function([], output)
mutated_mod['func_225'] = func_225
mutated_mod = relay.transform.InferType()(mutated_mod)
const_233 = relay.constdtype = "float64")#candidate|233|(15, 14, 11)|const|float64
var_234 = relay.var("var_234", dtype = "float64", shape = (15, 14, 11))#candidate|234|(15, 14, 11)|var|float64
bop_235 = relay.floor_mod(const_233.astype('float64'), relay.reshape(var_234.astype('float64'), relay.shape_of(const_233))) # shape=(15, 14, 11)
func_176_call = mod.get_global_var('func_176')
func_177_call = mutated_mod.get_global_var('func_177')
call_240 = func_176_call()
call_241 = func_176_call()
func_57_call = mod.get_global_var('func_57')
func_59_call = mutated_mod.get_global_var('func_59')
var_250 = relay.var("var_250", dtype = "float32", shape = (432,))#candidate|250|(432,)|var|float32
call_249 = func_57_call(relay.reshape(var_250.astype('float32'), [9, 16, 3]))
call_251 = func_57_call(relay.reshape(var_250.astype('float32'), [9, 16, 3]))
bop_252 = relay.right_shift(var_250.astype('int64'), relay.reshape(call_249.astype('int64'), relay.shape_of(var_250))) # shape=(432,)
bop_255 = relay.right_shift(var_250.astype('int64'), relay.reshape(call_251.astype('int64'), relay.shape_of(var_250))) # shape=(432,)
uop_261 = relay.cos(const_233.astype('float32')) # shape=(15, 14, 11)
bop_272 = relay.bitwise_or(uop_261.astype('int64'), relay.reshape(bop_235.astype('int64'), relay.shape_of(uop_261))) # shape=(15, 14, 11)
output = relay.Tuple([call_240,bop_252,bop_272,])
output2 = relay.Tuple([call_241,bop_255,bop_272,])
func_276 = relay.Function([var_234,var_250,], output)
mod['func_276'] = func_276
mod = relay.transform.InferType()(mod)
var_277 = relay.var("var_277", dtype = "float64", shape = (15, 14, 11))#candidate|277|(15, 14, 11)|var|float64
var_278 = relay.var("var_278", dtype = "float32", shape = (432,))#candidate|278|(432,)|var|float32
output = func_276(var_277,var_278,)
func_279 = relay.Function([var_277,var_278,], output)
mutated_mod['func_279'] = func_279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_176_call = mod.get_global_var('func_176')
func_177_call = mutated_mod.get_global_var('func_177')
call_292 = func_176_call()
call_293 = func_176_call()
output = relay.Tuple([call_292,])
output2 = relay.Tuple([call_293,])
func_298 = relay.Function([], output)
mod['func_298'] = func_298
mod = relay.transform.InferType()(mod)
output = func_298()
func_299 = relay.Function([], output)
mutated_mod['func_299'] = func_299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_176_call = mod.get_global_var('func_176')
func_177_call = mutated_mod.get_global_var('func_177')
call_361 = func_176_call()
call_362 = func_176_call()
func_176_call = mod.get_global_var('func_176')
func_177_call = mutated_mod.get_global_var('func_177')
call_375 = func_176_call()
call_376 = func_176_call()
func_276_call = mod.get_global_var('func_276')
func_279_call = mutated_mod.get_global_var('func_279')
const_380 = relay.const([1.017665,9.226441,-5.576475,3.455247,-2.461207,1.858775,-4.783100,-8.024615,4.297268,2.839959,6.711040,-2.231776,-7.317339,1.722697,-5.073993,-9.789774,-8.300862,3.764967,1.241217,8.715627,-1.261569,1.822149,-0.959989,-6.529902,5.031972,-2.520435,-2.462097,-7.432807,-2.858466,-3.836569,-2.739458,-6.493682,7.827628,-0.603282,-8.131310,-4.086365,-3.145518,7.256749,8.074267,-8.580141,9.447170,6.515644,4.224886,4.697779,9.715325,-9.149430,-9.016440,3.780472,-6.550176,-1.074066,7.553828,8.549905,-8.970211,-2.213411,-3.203900,-9.133360,6.398976,8.150882,6.367766,-4.039585,2.957511,4.579900,1.437298,3.799701,-1.515815,-9.696849,-4.966896,0.488462,-5.690811,9.244023,-7.181513,9.878505,5.889250,-1.065480,1.751088,-4.029075,8.977886,-7.842945,-1.359560,-3.064968,9.906477,-2.444742,6.714565,-6.319675,8.044878,-3.463820,3.831113,2.643156,9.530026,-7.892288,1.966309,6.260492,-5.610347,9.491735,9.407277,6.242771,3.470050,-0.895053,4.763219,-8.809041,-3.011528,-5.181623,-8.655569,1.614404,3.959506,-0.668272,-0.953266,6.133959,8.484791,0.236366,-4.781198,5.402775,-9.422713,-7.065661,-9.531394,-2.175784,-5.704962,1.536894,-9.177899,-9.679757,-8.187267,-2.041517,-9.950605,1.229140,7.656167,-0.494393,2.141119,8.267073,6.766288,3.743041,-6.060659,7.200718,-0.433900,-4.206354,1.817280,-0.265153,9.468301,-9.344561,-4.814487,-4.011493,-1.816698,8.881609,-4.088863,5.024464,0.610156,-8.429456,-5.670730,-6.174598,-0.699027,0.541026,8.298687,8.478390,6.673116,-4.577273,6.661838,2.682742,9.274929,1.647081,8.213643,8.227427,1.543398,-4.172699,2.897280,-5.097722,3.466454,3.718753,1.613524,-6.965502,-7.308009,-5.933586,5.384617,6.659373,-1.309093,-8.083654,8.395281,-6.834796,5.014452,-7.112515,6.696867,-7.553142,2.525897,1.785701,-4.769840,4.679867,-6.483864,-0.882515,8.105441,-8.408404,-3.899135,9.310932,4.315641,-6.241039,-4.600972,0.058280,1.287037,4.113997,-2.333837,6.827644,-0.961849,1.108637,-5.992988,-3.120885,-8.371359,-6.012418,7.634447,-6.166373,2.199541,-2.369848,-3.038783,-0.248311,7.884281,-1.480181,-0.737723,0.903833,-6.227615,-3.443984,-7.012689,-3.407588,4.527200,-7.870271,-4.646773,2.301058,8.351987,4.219132,-5.411926,-4.296463,9.706409,1.633362,-1.000279,-2.056656,4.981212,-1.366174,8.782940,-8.721115,3.421819,-5.965788,-2.520811,7.120469,2.640723,0.784288,-9.855247,6.316336,-6.052351,-7.894945,7.157987,3.997606,5.397179,9.666937,-5.082944,8.632754,-4.731748,1.030269,-8.162558,-1.402987,2.686559,1.869592,2.580711,-0.200493,2.683720,4.352103,1.328084,6.459805,-5.170907,-8.854766,4.084151,-7.405367,2.345469,-5.475931,-6.531213,0.289522,-5.695911,-3.122459,4.844082,3.624770,6.147838,-8.737190,9.479994,3.100295,-6.142500,-5.088025,0.663806,3.140467,-5.732359,-7.247443,-9.045599,-5.766456,-0.003526,9.540478,2.454637,-1.318635,3.611846,-7.646529,1.361192,-0.668613,8.516505,4.708617,1.382511,9.719117,-4.242764,-4.792185,7.464500,2.185692,3.357303,1.756475,8.803336,2.187767,-7.192989,8.257316,4.559013,6.339577,-4.667205,-4.132752,8.798600,2.012565,0.091542,4.438028,-5.267362,1.560278,8.492958,9.399470,-4.228083,3.678184,-7.932655,-9.651836,-4.923901,-7.834351,-6.190080,-2.774544,-5.596119,9.819077,2.700246,-9.592407,6.076734,-7.563717,-5.867987,5.571737,-4.150236,-3.625857,4.413084,3.832324,-2.940498,-1.670363,-9.089962,2.544533,-1.832510,-6.126977,1.658946,-6.005616,-1.480825,3.300648,-0.632824,-1.444392,3.489382,1.063665,3.920242,-7.402737,-1.335779,2.770354,0.809907,7.543609,3.872339,3.689504,-8.958978,-5.605638,-4.754900,7.197198,-0.020212,-8.143200,-8.240608,6.135393,-3.183983,-9.851091,-6.192036,9.042966,-5.633255,-2.850490,-2.901743,-6.060824,6.249602,-7.604894,-5.425420,-4.995479,3.089206,-2.588127,-6.128363,0.132597,6.290358,1.473478,6.396670,1.396925,9.281171,-7.927314,1.896488,-1.530234,6.449320,6.487208,-7.690645,-1.560820,-9.566798,-6.374323,-6.368626,9.593469,7.571712,-0.033585,3.099332,-9.655940,6.386426,-8.666554,2.254484,2.878347,2.008088,-7.360656,-6.698978,0.768720,2.384086,8.787660,-0.755212,8.852371,7.429329,-1.102782,8.856874,2.294160,3.294157,0.698933,-0.166744,9.799818,9.738085,1.412643,8.089325,-9.818035,-9.991362,-4.348876,-4.897349,-6.531782,8.804863,-7.472491,3.262773,5.247682,-8.320506,1.669541,6.685090,-8.323036,-0.357417,-2.476960,2.352657,-4.709102,-6.246585,-0.616567,-3.588735,-9.207166,2.456756,-7.574684,-1.290091,-7.463051,3.650909,7.162031,-9.798630,1.746794,-5.927817,-4.304797,4.063717,6.785615,-7.986967,-7.463363,6.360648,-2.527187,-8.478440,4.880084,0.595097,0.970767,-0.366274,2.953767,-3.006383,4.933843,3.487650,-0.039328,7.315095,-5.673613,5.630417,-0.304069,-7.208639,-6.563940,-2.855441,0.699498,0.486096,-8.944077,-6.529217,-9.068268,-7.140214,9.291577,-1.671962,-0.249599,4.952712,1.052422,-7.570124,0.979926,-5.661507,1.594175,-8.503411,-3.634607,2.048385,2.568541,5.081271,-4.118206,8.774968,2.907635,-7.755634,4.809954,-8.558580,-3.237596,9.354361,3.799278,9.476693,-2.413843,-5.723568,9.817867,7.626640,4.861189,6.111065,-0.139688,1.115147,-6.129121,-0.213429,8.076251,-3.037538,3.443204,-0.115855,1.990120,8.089807,2.846634,7.997408,2.559763,3.477664,8.195280,-5.090474,6.309948,7.485200,5.992960,-8.162796,-0.321835,6.284966,-8.156792,2.879067,4.521945,9.863683,-8.884656,-1.422958,3.362184,-3.262067,-9.416736,-5.406857,-4.260450,1.211745,2.180896,-0.641737,-2.745833,1.259883,5.062113,-6.777506,3.721314,5.541354,-4.762784,5.063150,6.714902,-1.035035,4.902091,-0.960076,-2.109656,0.156799,9.493288,-9.226656,9.359896,-5.808939,-6.214551,-8.867618,-6.117825,8.024379,7.829508,-2.602818,-0.431741,-4.485110,8.241046,4.437671,-5.566091,-4.838768,-4.997583,0.409967,-2.144310,0.835107,-4.973608,0.302902,3.368248,-3.348057,4.405837,-0.924601,4.164985,5.630786,0.586839,0.507174,-0.741640,8.779629,-8.582474,-8.813727,-7.880132,6.848526,9.249895,0.898280,7.619136,8.705788,-0.574122,-9.612250,-4.597469,-6.412634,-5.833500,8.956541,1.530583,2.871733,5.585145,0.002341,4.144831,7.690346,0.280592,-8.588392,-6.338297,1.306348,6.278979,-0.056802,-8.113799,2.504421,-6.508471,5.758871,3.354876,1.324039,-6.711667,-6.974554,8.664053,5.710889,-6.351703,7.392232,5.404668,2.317643,-0.938606,3.495506,-5.351493,4.948845,0.573344,0.423960,-8.596262,-0.775823,5.992126,-2.351493,-6.054562,6.746184,8.530375,1.782500,1.067288,6.464733,-4.501831,-0.822996,4.409328,-4.097081,-5.158665,0.042017,-4.209151,-2.052401,-9.648167,0.290146,-5.545700,0.938749,8.950789,-6.910594,3.187914,7.403904,-9.445221,4.225537,5.393420,1.093682,0.234590,-0.953526,-4.129813,6.903115,-9.382393,3.858579,9.355142,-5.070554,2.153661,2.982021,2.754523,-8.821389,2.573506,6.128478,6.745760,-4.372512,-9.600802,3.778901,8.614252,4.722557,4.157019,-6.318472,-0.862670,4.337054,-8.797972,-1.091763,7.186175,3.036215,-1.137557,-0.835116,6.561845,-3.735149,4.789933,-4.267552,-0.047816,-2.522483,-0.290229,-0.507861,-4.793660,-9.964254,5.826903,-3.294639,-0.462597,2.774084,-2.844006,-8.230163,-0.065177,6.281722,-6.936581,4.361289,-9.741303,-0.464627,-6.595071,1.593497,4.306781,2.359054,-0.942239,7.567682,-0.735891,-2.889301,-5.206545,-6.529252,8.243642,9.690546,-8.064873,9.172459,-9.856992,0.606691,-6.363639,6.859961,9.638833,-5.772247,-8.951662,-6.154344,-2.225027,-1.483799,1.159350,-7.110178,-0.882223,8.216869,-8.971449,0.297610,-6.284579,0.848392,7.569452,-6.891612,-0.343390,9.837984,6.099577,2.328867,-2.610170,-3.548046,-3.663433,-8.888132,-9.826149,8.971008,-0.393830,-7.251506,-2.910650,-9.736423,-5.757083,-5.727947,3.108947,-1.091816,0.325547,1.741233,4.562197,8.398598,-3.056620,-9.117152,7.579773,4.160214,8.550035,3.907225,4.327274,3.270254,-2.653049,-9.924586,3.345276,-0.203872,-4.524877,-8.882724,-6.098411,-7.143291,-1.954466,0.903681,-9.865611,1.116745,-8.924701,7.915181,-0.296642,-6.435555,-3.014569,3.038307,2.691431,-5.903451,9.276034,6.847026,5.487421,-5.695642,-8.489216,2.277890,-4.367092,-0.987991,6.460691,-9.180338,7.811250,4.186179,-2.577459,9.934355,-1.794097,5.318113,9.828920,1.019161,-6.822253,-5.189595,-2.923779,-5.161051,-9.120179,5.057946,-6.348177,-9.232118,-2.520540,-2.247259,-6.978087,-6.905272,5.529640,-4.553073,-1.987690,8.002081,7.143436,-8.976337,-1.746177,-0.494138,7.049227,-7.483163,8.517097,3.907554,-2.019796,-3.946059,-4.157175,-2.750047,6.836979,-0.940591,-7.080878,-3.667122,9.107085,6.243926,2.546085,-3.247546,-8.286928,8.392201,3.466452,0.953127,-6.207035,-0.862828,2.459876,-2.640467,9.141441,-2.091897,0.604215,5.439791,5.690885,-7.886590,-8.269649,-0.433385,0.140705,1.566772,-0.382470,8.819443,-8.249531,9.487914,-3.565269,-8.121614,-2.657118,4.041620,-0.959968,-8.906599,-3.946414,-0.543094,-5.737758,4.340662,-9.824194,-5.313240,0.730876,4.443963,-3.218706,6.904889,7.483837,-2.747282,1.889719,8.625364,5.774247,3.724815,-6.932299,-6.370909,-1.905351,-9.052633,-8.515841,-2.312133,-5.334008,-5.818026,-5.079376,0.860400,6.112387,-8.911287,-4.132214,-8.670281,0.117245,4.969744,-6.388639,-7.780000,8.917271,7.850005,-3.663619,1.073706,-7.038286,9.438069,-3.934543,-3.635086,-2.749645,-9.287645,-6.607662,-9.486169,-8.243212,4.357156,-4.732788,-5.846576,-7.248939,2.108688,1.738176,-7.080689,-7.880908,-6.485155,-2.894873,5.369793,7.527961,5.911610,-1.159185,-7.621296,2.706820,0.204315,3.087698,5.868825,-4.877262,-8.482430,-8.398415,9.140663,-2.760840,2.148339,-0.558030,-0.322144,-0.485870,4.806075,0.850021,2.663265,5.637220,-2.393388,-6.527990,-5.719422,9.174099,-7.965732,8.208455,-9.209631,-9.692460,5.405891,-1.733025,-0.363617,7.469950,-0.832685,6.872958,-4.871931,-5.604537,-3.743866,-5.591058,5.843619,7.202478,6.435163,2.730854,2.060891,1.928546,-7.860076,-0.647143,-4.723194,-9.757053,-1.888158,9.294279,-2.244504,-2.413073,-8.141563,-6.958502,-9.153403,-4.474542,-6.277097,2.212008,6.855241,-9.270366,5.249729,-5.061655,5.253306,-1.389188,1.184316,-4.377393,8.972094,-4.963587,6.527786,-4.013349,-1.415366,-9.090822,-3.568422,-6.832738,-2.604866,-2.581784,6.724965,-1.146975,1.919955,2.007131,-1.942877,6.357610,-5.014822,5.433131,-0.927762,7.503231,-2.150810,4.628509,1.778789,-3.748994,1.882689,3.308262,-8.692358,9.773797,-0.311852,-7.866245,-3.803498,8.394563,8.294637,-8.493416,-4.820227,-7.187609,7.655855,6.326684,-7.665055,2.753275,-4.234633,-8.939470,-7.075720,0.571354,-5.955685,5.864264,4.428289,7.569580,5.823372,-8.171220,2.855210,4.567889,-8.295414,-4.647442,-9.554316,-0.924610,-1.782288,4.788733,-7.874947,-8.436622,-6.731426,1.930338,-6.795490,-2.950745,5.541639,3.078250,-7.101178,1.301778,5.752057,8.576046,2.000207,8.128399,-9.175280,-2.903407,7.404467,-4.589549,-4.950387,2.573069,-1.771345,2.254821,-5.857544,8.288336,1.872265,5.663971,-5.821423,-1.436744,5.997839,0.572399,9.816781,-7.806333,-6.874327,-3.200423,2.554212,2.280752,-4.614182,6.807695,8.766050,7.241814,5.560994,-9.978288,5.682563,-0.020724,-9.544428,-0.305505,6.383750,-5.903971,1.086561,8.516064,-9.228046,6.037210,6.812503,7.894098,5.201418,9.257320,7.675198,-3.775712,-5.737813,5.465364,-0.449711,-4.377843,1.905321,-6.332267,-7.758891,6.973617,-8.724071,8.963466,8.106239,8.260279,4.251942,9.052285,-9.546201,5.510779,-3.282133,6.593271,-5.069614,5.894879,-3.298103,2.496778,9.336203,8.971931,4.949993,3.801867,9.778146,2.813548,7.217599,9.685157,-1.193703,-4.072907,-9.862718,1.045212,-4.199358,-8.058302,-2.658698,5.035721,-7.971570,-4.544304,6.229346,-8.781420,-1.134502,1.932226,-5.324605,1.478958,5.900387,-7.129438,2.321937,-0.118722,-5.489027,-2.457007,-9.648493,-8.886580,-2.005158,-0.128577,-9.740691,-2.846838,-0.396932,-7.102685,-9.259846,3.359988,4.349163,4.558996,-6.143198,-7.568411,-3.394545,3.444529,-4.340387,9.747030,-1.958962,-8.118066,-4.470311,5.203515,-2.329626,-9.104516,9.659046,-1.322313,0.162701,0.080692,-0.375401,-7.786480,-9.922338,4.916241,1.853082,1.452151,7.693999,-5.180697,-1.657406,-7.032634,3.136439,-6.897840,6.550249,4.496236,-1.555891,-1.767419,5.318975,-5.139979,-7.263935,-2.777237,-2.884225,-9.515073,-6.563081,-0.615390,-5.906861,2.176938,7.435808,5.909663,3.044686,6.506454,9.443697,-7.535943,-1.678242,9.158353,-2.329639,-4.400413,9.693193,-4.335311,4.909920,1.546644,-4.267753,2.464269,-3.451295,-2.527814,6.225317,1.365337,9.329657,0.862608,-0.375318,-6.744354,5.423360,-3.772989,0.817138,-4.379112,8.947843,0.791306,-7.263171,8.428256,9.746248,-9.235855,0.247890,9.164366,3.644932,-5.526623,3.385937,1.259676,8.623343,-3.161098,-5.437998,1.417088,-8.853209,5.195412,5.502608,0.623729,-9.900238,2.659780,3.800913,-7.674407,-0.846299,0.717149,-6.825421,-5.135020,-7.261175,-7.870757,1.996700,-3.867669,-2.465197,-2.686103,-9.792681,-7.339359,-3.274279,-5.026911,3.476098,-9.837025,2.862536,5.962785,-2.543913,6.605137,-7.383570,-7.677745,4.106344,4.837373,-7.648477,8.149851,7.102576,-4.931291,7.624224,-3.907660,7.159486,-9.197679,-0.693048,-2.902894,2.125811,4.098284,-6.006966,4.355684,-7.525229,6.132161,2.557791,8.367574,0.536611,-1.358130,-8.264996,6.341306,1.703460,-3.993841,8.634599,2.939330,-7.030549,2.992066,-6.678989,-7.027646,3.366329,6.946833,-5.422109,-5.753279,-8.879569,-7.733641,4.185378,5.243904,-5.738660,-5.084256,-6.512354,-5.516893,-6.251996,0.448476,4.559519,0.914654,-6.786038,3.838681,0.007989,-5.634716,-6.587401,-4.291604,-8.957136,-9.952100,6.942263,-8.087595,-4.966753,-5.487209,-4.897929,7.786219,0.055884,7.388028,-0.091939,-3.311774,-9.635532,3.941842,0.660441,-7.145327,7.134061,-5.244727,9.514724,3.701627,-1.990543,-0.806137,7.789131,-2.223438,-2.746657,-1.243979,-8.335247,-7.797006,9.864389,9.547310,6.821918,-9.345933,-9.604077,8.200468,-5.772056,-1.847296,-4.514494,7.522294,-2.847333,-9.786367,3.343217,0.027976,8.751164,-1.190213,-4.823071,1.381550,7.788134,-7.594252,4.323740,4.263458,-9.236270,-3.707709,-5.756621,8.294854,0.092756,7.392522,-4.839496,-7.301452,-4.193093,7.224909,-8.870897,-8.539051,-9.235421,6.139782,-7.977733,6.577492,-6.855414,1.060087,-2.793207,-7.131658,-9.973779,-8.507249,-3.652921,-3.924379,-6.991679,8.289524,0.082066,-1.812447,3.838242,1.379317,4.601839,-4.303324,-4.881573,-4.640292,-8.735938,-3.719346,0.501189,-0.244693,9.979890,-4.203574,-3.198372,-1.679322,-1.202345,1.758643,-3.597435,2.807239,-4.519208,-6.553455,-5.512538,6.540605,9.873621,2.702332,-2.185768,-2.016092,1.946031,1.816061,5.195402,4.422739,7.720256,2.973952,4.158774,5.338800,-5.058521,-3.245436,-6.235152,-9.443447,8.617479,-6.801878,4.235449,6.384167,-4.390089,-3.671866,-1.816320,8.959418,-3.437648,7.164059,5.471330,2.832494,-2.462726,-2.779824,9.949610,-8.552389,3.272760,1.935439,-0.134773,0.788423,1.240945,-1.796585,0.316543,6.543418,-2.787296,1.485580,1.578904,7.432004,-7.233066,0.987758,-2.299772,-8.171133,-9.819092,-8.086434,-2.303903,8.304056,2.028236,9.671103,8.595652,0.982819,2.260644,-9.157907,4.752681,1.993484,9.346841,-2.126147,-9.103434,3.627035,-7.528440,8.740522,3.459357,-2.703551,-0.254748,6.505641,6.162955,4.350532,5.327801,7.291761,-3.735080,-2.915759,9.995545,9.752911,6.378276,9.978671,2.865434,-1.550928,7.460380,9.412856,-2.350264,-3.088405,2.868122,8.486015,8.560373,-1.918947,4.651251,2.135978,4.246731,-6.709146,-7.449188,-5.972821,3.912824,-3.293884,6.328650,-5.766557,5.698699,2.688824,0.661306,8.109127,-6.499501,-8.356249,3.053163,-8.584931,-0.097365,7.572534,-6.532565,-3.675442,4.401786,2.455759,4.166542,-2.038023,-7.507286,7.552609,-6.795102,-5.364517,-3.660964,-3.678193,-0.065858,-9.489409,-5.879285,1.701439,8.231413,-2.177953,1.394364,-1.825419,4.627744,8.862186,-2.339314,1.079483,0.799060,6.232677,-1.418075,1.098320,1.147737,-1.152531,-9.538075,-8.939838,4.817845,-4.224790,-4.487051,3.981076,1.856761,5.736737,-5.535861,6.342105,-1.943365,9.434680,-4.703495,-4.882068,7.529039,9.946734,-5.269939,8.171927,-6.382390,-6.155655,-8.097219,2.120350,-4.225619,-3.226484,4.098577,1.069286,-7.794864,1.436244,1.433643,-9.941131,-6.925859,-1.294269,-9.046525,-1.275248,0.643891,0.670584,4.604496,-2.985200,-1.992169,-5.120486,-3.857634,9.419694,-9.066444,0.568448,-2.960393,-0.222689,-9.370420,-0.948047,9.889253,3.819626,3.019812,-9.996613,0.546612,1.965966,3.959073,-3.765816,7.929358,1.268224,-7.909319,9.407378,-8.113939,4.993328,2.769027,7.951585,-0.268513,6.023517,-0.190478,-4.531339,-8.261672,0.857193,5.367011,0.331567,6.096918,7.041843,-6.031436,5.057480,-6.750587,5.872358,-3.973311,-3.165822,2.664176,-4.941547,-0.836372,-3.629762,-7.421107,-8.418548,9.028032,-7.093360,-8.552661,-7.967090,2.742892,-2.429840,-5.235352,6.314745,-1.913397,1.226942,7.644792,9.560907,9.743397,8.959662,4.259489,1.206453,1.143429,-6.307743,9.062571,-8.710030,-7.270386,4.250101,-7.381063,3.604078,-2.963193,1.416416,-3.509981,7.972959,-7.791533,-3.361774,2.651859,-4.373983,0.392785,-4.366131,1.887400,0.743101,9.283900,-2.716606,9.690495,1.076995,-5.042051,-1.006901,9.611817,-4.239943,-2.791707,-6.402607,9.877772,-7.532557,5.959884,5.004808,-6.032858,-8.182855,6.671731,6.430720,-9.449305,1.376478,6.140251,7.852710,4.924003,-2.641654,-1.175873,5.616852,0.628949,7.681031,3.300872,1.698002,1.149390,8.129188,-8.412473,-1.080253,0.456322,-3.646859,6.432772,-8.560069,7.652533,-0.037727,9.201840,4.892581,9.759991,9.447760,-4.445143,-7.576256,-5.833130,-7.596314,0.626852,8.080785,-2.679392,6.533609,1.564414,2.283036,2.264880,7.292781,8.582097,2.606950,7.801493,4.142770,-3.947075,7.399818,-7.097409,6.672468,-2.324689,-4.325078,-5.941522,-4.773598,5.772694,1.520309,0.351043,5.957602,9.405308,-7.028724,1.503145,-7.858515,3.825522,-8.947041,-1.589937,8.316290,-2.727630,1.865886,-2.426772,6.651156,4.343071,-4.747630,9.855582,-7.173311,-6.746811,9.489455,-6.979511,4.633971,8.302357,1.640443,-2.306304,7.938219,1.313153,1.470913,-6.844150,7.514053,1.459104,1.653499,-8.114648,-1.605595,-5.060094,-9.633170,4.757923,-3.272406,-7.842968,-4.427381,6.736120,6.712466,7.802996,-8.175674,6.916574,2.547182,8.963790,9.426425,-2.699583,-5.993501,3.299595,-3.165007,9.270167,-8.568807,-4.073850,-5.030736,-4.967443,-0.656158,-9.782291,4.225179,0.476513,6.907723,3.630967,-0.112025,-1.071733,-4.692305,1.428404,-7.199050,-1.037507,-0.565054,-6.813662,-0.946146,6.571158,-1.153402,8.688652,2.703666,-1.998871,4.239058,-9.432006,-8.002078,-6.203976,-3.705794,8.081924,-1.021822,2.338872,-6.129185,1.415636,-9.415377,-8.672638,6.000812,0.904085,-2.397940,9.506342,5.866239,2.692472,-7.595420,2.164041,0.549076,5.370665,-7.453141,7.286976,-1.668331,1.497009,3.707944,6.484931,3.767579,3.310256,1.077008,1.725756,-7.959124,-1.454548,-6.352524,-5.393932,-7.038341,-1.821508,-0.759216,7.845698,-4.417422,-2.162698,-4.364940,-7.565657,-9.292586,6.377760,-2.861618,-0.558869,4.113798,6.661836,-0.389151,-7.599010,-7.884521,2.001925,-5.804644,5.967407,1.627542,-7.509902,-4.923454,0.513087,-7.149276,-1.812676,6.498705,-8.357059,7.065839,6.073454,7.418906,-4.339521,-1.324971,-1.235308,-0.310509,8.889816,7.782728,-4.365058,8.418383,-9.143662,-2.286657,-3.042685,-7.172686,1.504372,6.981354,8.188828,-5.173675,-8.450491,-1.196622,5.700899,-7.908027,-5.426335,-9.650029,0.664422,9.393877,0.297195,-7.240140,2.888348,-4.245785,-2.730259,3.315621,-9.716101,4.867192,-0.794802,-7.868208,9.261543,3.619218,-5.064728,-5.355650,7.169304,-7.779132,9.808064,-3.452252,4.198821,3.695787,-6.861464,7.192176,-1.024087,7.367022,-4.484514,-8.595658,8.869971,-3.147393,3.444463,2.332474,-0.724018,-6.988020,7.748180,-4.056050,0.533996,-6.166727,0.937998,6.040783,5.251971,-5.529331,-1.815694,8.882155,-3.743036,0.306064,-1.453850,-4.458146,-6.063193,-8.220551,-8.739992,-5.667080,6.154393,7.309763,0.164212,-0.133010,-9.085111,-7.221503,-1.448753,-2.426077,3.412882,-9.604603,-5.914349,-4.756486,2.219412,-2.592247,-7.579156,-6.890674,-3.628868,-1.477587,-6.509523,-9.751205,5.570852,9.449901,-0.242859,8.418787,5.626968,3.436195,-0.915862,1.555551,-8.656973,5.808911,-3.768987,-5.439189,-0.844051,-5.311694,-2.220128,2.705609,-7.280059,6.659172,-6.207390,-0.950692,-1.598345,6.612664,-9.959503,0.234772,3.680918,7.721192,-0.898027,-1.506257,-7.960833,4.715085,6.190971,-2.679295,3.337214,-3.699757,-7.900884,6.592353,-2.913243,-2.223918,9.368473,2.987268,-8.511100,9.393395,5.424698,8.024633,-3.553342,-6.547909,4.608759,8.908288,-4.775138,-2.042576,2.984611,6.802175,6.501328,-7.473316,9.113900,2.984687,-2.152804,-7.687839,-5.161708,2.277100,-7.108615,-3.012730,-5.388889,-0.284219,0.503668,-9.020463,7.667232,-0.985187,0.474718,5.330478,-7.497846,-1.587125,3.939950,-7.519973,4.812400,2.522511,2.392350,1.029232,2.335106,-7.950304,1.688548,9.173038,4.543610,9.296730,-0.677121,0.452599,4.688579,7.232613,0.470432,-6.826524,9.459702,-7.136104,3.180860,9.853433,-1.612862,6.725985,-7.476911,-2.189649,-7.300874,-8.506246,-2.069692,5.449584,5.147602,8.208797,3.409263,3.047000,3.875213,6.174719,-1.886987,2.564990,7.756856,-0.807407,-4.171944,0.434190,-3.781313,4.327975,5.564700,-9.426152,-5.357314,2.780150,5.840899,-2.381107,2.542565,5.602295,-5.176502,-1.748496,2.032823,4.878813,6.997174,-4.987034,-5.923682,-3.941594,-5.425523,3.393942,-3.491557,-0.198405,8.241485,-9.139496,8.745135,-4.806291,5.514097,4.198090,6.044534,-0.630247,3.409152,-0.152447,-9.683399,0.767245,7.725208,6.266412,-0.289940,5.158198,1.872388,-9.749182,1.662240,-6.869912,7.109608,0.225397,6.689580,1.713244,-3.685526,-3.342925,-7.822765,-7.929114,-5.952958,-5.690985,0.367301,5.876831,7.623883,0.540709,-8.506351,4.016496,9.620479,7.345410,-0.318670,5.427869,-7.500318,-0.211707,-5.730112,1.773203,-6.706267,6.774517,3.281135,-1.811764,-6.579081,-8.446629,-3.588707,-9.196677,-2.143024,-3.580434,-8.047489,-6.767728,0.861505,4.718937,1.139143,0.462860,-6.677585,7.277373,5.829732,1.430667,-0.946495,-8.866915,7.951396,-1.082086,-7.102256,1.849372,0.892855,-7.021719,-9.033117,-6.667559,-0.643732,9.255720,-9.071834,-8.935689,3.855040,8.276599,7.192888,-4.859087,-2.853754,9.006234,5.907719,5.328340,-9.603136,8.099090,1.151828,-7.523411,2.068256,4.566368,-3.433066,1.731904,9.307303,8.905935,2.596789,9.771402,4.524800,-6.501948,4.903179,9.279987,1.617704,-6.369594,-8.117112,-9.027973,2.316254,9.337223,-0.932861,2.763643,8.516421,-5.544922,-1.979382,-5.827495,-0.307121,-4.522003,-4.918763,4.623516,-5.059516,-8.221363,-9.777363,5.163090,-6.718416,-6.169812,6.230751,-8.706577,-8.156888,8.407341,9.551464,-0.131494,4.017963,0.686553,-4.391724,3.907421], dtype = "float64")#candidate|380|(2310,)|const|float64
const_381 = relay.const([6.783129,7.970888,3.353483,-4.899121,4.144774,9.317615,9.812464,-6.457450,-7.060966,1.383659,1.633397,3.021150,9.065488,-0.015575,0.103099,8.443453,-0.804199,-6.018337,-4.452540,4.840873,-1.743061,8.364958,4.363822,-8.065275,8.837136,9.584515,-4.774605,-2.191475,-5.466441,-7.892504,4.526631,-4.971870,-8.667605,0.769981,9.849990,-6.219044,-2.103425,4.430806,0.386385,9.055027,9.288981,4.237942,-5.656443,-0.312392,6.179055,-8.301953,-4.611783,-3.761790,3.239250,5.756349,-1.772799,-3.770176,3.300624,3.447022,9.152742,0.192924,3.084814,7.645157,9.550890,-1.596747,-6.033103,9.627380,6.050238,-1.185642,8.938944,5.394880,4.091859,-8.205735,-1.222105,-0.822226,6.507907,-2.315392,-5.356132,-5.664095,1.717708,-4.691966,4.757568,-1.607671,-6.632142,2.754295,-9.728797,7.263317,9.870421,6.536699,2.088658,2.159640,8.382477,-9.618388,9.486712,9.271594,0.454963,3.025224,1.827712,-1.563027,-4.782062,-0.017150,-9.002488,-1.615616,0.249404,7.399173,1.131437,9.381332,0.713021,1.158327,-9.450531,6.915667,-0.694992,-0.488558,8.954109,1.926928,1.714046,-5.023665,-3.588490,7.516856,-3.962972,-3.535976,3.584165,9.956761,8.710202,-4.792068,9.037733,-1.454048,-7.187575,-6.094216,5.310345,6.583227,2.556797,-4.810860,-6.663436,8.875109,3.318665,7.103970,-9.974785,8.616602,2.868416,5.509004,5.231857,-7.805244,1.588760,9.290551,8.323770,8.124074,0.464042,-7.795275,6.630806,-8.297861,7.562600,1.261071,-6.377077,-9.369947,-7.608355,5.074148,9.439129,3.376983,-6.420982,5.564188,7.885056,-3.141184,-0.083754,0.629923,-9.220196,-1.264344,4.997389,9.376630,-5.623287,7.159923,-5.872868,6.641576,-4.062418,-9.180581,6.850985,-1.261431,-2.641677,9.598002,9.026872,-4.576506,8.847535,-4.875483,-6.517644,-2.748592,7.604187,-9.631901,-5.348803,4.707016,-9.832369,4.197603,7.827814,2.287991,-9.191272,-9.403827,3.377335,-8.111401,-9.191470,2.686045,-0.997225,0.497846,8.113088,2.726463,2.981618,-1.555226,-5.953582,-1.149299,-4.252912,2.630232,-3.771787,-1.282648,-3.948903,-8.242730,8.925595,-3.143682,-3.350113,4.474166,6.902749,5.101072,4.867386,-1.279052,-7.382603,7.139510,-4.585351,1.053118,3.725860,-7.310727,-2.341001,-6.858344,-2.381406,-3.161862,-7.985361,-9.818333,-9.209994,3.716097,-8.710923,-2.748080,-4.624209,8.023171,-6.563099,0.296123,-1.330084,-5.533807,1.144039,3.919049,9.683939,-9.863966,0.328900,3.280850,-2.504558,-6.464617,-8.908358,3.080610,-9.830748,-8.368409,-6.965415,-4.201995,2.060941,5.216318,2.762845,8.296353,-6.635934,7.496974,-5.037460,-7.838254,5.730573,7.878352,0.064873,-7.201848,1.418545,-5.539372,-8.482995,7.121081,1.379616,-2.569098,0.885136,0.194137,8.461304,9.953361,9.925860,6.950338,-0.752230,2.718550,9.841151,-9.079866,-2.119208,-7.554010,9.908332,-5.499967,7.709975,-6.677040,-3.456242,-1.083782,-2.722671,-6.446900,7.336576,-1.057857,-4.659785,6.944479,9.091244,3.441162,0.976139,-4.388539,2.694395,0.675235,-6.947587,0.289523,-0.725390,-1.244184,2.183925,-0.415460,-3.409664,2.835638,-4.689754,7.380706,-2.798496,1.370059,-5.882120,-8.340353,3.876115,-0.369529,4.841643,-6.902306,-1.070718,-1.284329,6.923062,-3.893521,8.679693,2.604279,1.751380,4.294098,2.335527,5.567233,8.238780,8.118249,0.764133,-6.346502,5.309903,-8.726320,8.739796,3.571399,-8.265375,6.731000,8.145078,5.169303,0.445823,-3.626151,-2.120445,-9.300959,-1.255901,-1.844954,-8.930636,-9.495130,9.639139,5.572189,-0.675015,-9.041165,-2.517501,-3.778584,-6.865000,-8.267567,4.961570,-0.524437,-6.252233,3.280069,-3.383184,1.395969,-9.921762,-7.058341,-7.847924,-3.470746,-4.519832,4.652511,-6.060346,1.029412,-3.326016,-1.054042,-0.191360,0.325481,-7.252622,8.154464,-3.413183,2.692665,3.083657,-6.504707,4.742755,-6.581488,9.767972,-4.760186,3.916680,-6.079813,-1.728258,4.776941,6.752483,8.939116,2.439029,-8.550414,0.209813,-1.350552,6.234954,8.957267,-6.554569,5.241986,8.564273,9.030438,2.304704,-0.734750,1.767499,-2.269231,-8.556429,-1.591930,5.919876,4.028567,-1.657072,0.435785,3.049830,-1.299180,-0.457503,7.741242,1.732180,-5.835631,8.763814,-5.440343,6.186212,0.019195,1.188738,1.310381,1.989804,3.403738,2.502345,4.684861,1.755069,-6.238337,5.877825,-8.750253,-8.377524,3.507240], dtype = "float32")#candidate|381|(432,)|const|float32
call_379 = relay.TupleGetItem(func_276_call(relay.reshape(const_380.astype('float64'), [15, 14, 11]), relay.reshape(const_381.astype('float32'), [432,]), ), 2)
call_382 = relay.TupleGetItem(func_279_call(relay.reshape(const_380.astype('float64'), [15, 14, 11]), relay.reshape(const_381.astype('float32'), [432,]), ), 2)
output = relay.Tuple([call_361,call_375,call_379,const_380,const_381,])
output2 = relay.Tuple([call_362,call_376,call_382,const_380,const_381,])
func_396 = relay.Function([], output)
mod['func_396'] = func_396
mod = relay.transform.InferType()(mod)
output = func_396()
func_397 = relay.Function([], output)
mutated_mod['func_397'] = func_397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_396_call = mod.get_global_var('func_396')
func_397_call = mutated_mod.get_global_var('func_397')
call_439 = relay.TupleGetItem(func_396_call(), 2)
call_440 = relay.TupleGetItem(func_397_call(), 2)
func_223_call = mod.get_global_var('func_223')
func_225_call = mutated_mod.get_global_var('func_225')
call_451 = func_223_call()
call_452 = func_223_call()
output = relay.Tuple([call_439,call_451,])
output2 = relay.Tuple([call_440,call_452,])
func_457 = relay.Function([], output)
mod['func_457'] = func_457
mod = relay.transform.InferType()(mod)
output = func_457()
func_458 = relay.Function([], output)
mutated_mod['func_458'] = func_458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_176_call = mod.get_global_var('func_176')
func_177_call = mutated_mod.get_global_var('func_177')
call_479 = func_176_call()
call_480 = func_176_call()
const_491 = relay.const([[[6,-10,2,8,7,-10]],[[-3,5,-8,-10,-3,9]],[[-7,8,-7,-9,8,6]],[[9,-7,-2,-5,1,-4]],[[4,10,-2,-7,-5,5]],[[5,5,-7,-5,-6,3]],[[9,-2,2,1,-2,3]],[[-7,7,7,-6,-7,-8]],[[-3,-1,5,-7,-3,-5]],[[9,-1,7,6,-6,8]],[[4,6,4,-6,-6,5]],[[10,-8,-5,8,-10,-6]]], dtype = "int64")#candidate|491|(12, 1, 6)|const|int64
bop_492 = relay.less(call_479.astype('bool'), relay.reshape(const_491.astype('bool'), relay.shape_of(call_479))) # shape=(12, 1, 6)
bop_495 = relay.less(call_480.astype('bool'), relay.reshape(const_491.astype('bool'), relay.shape_of(call_480))) # shape=(12, 1, 6)
var_508 = relay.var("var_508", dtype = "int64", shape = (12, 2, 6))#candidate|508|(12, 2, 6)|var|int64
bop_509 = relay.less_equal(call_479.astype('bool'), var_508.astype('bool')) # shape=(12, 2, 6)
bop_512 = relay.less_equal(call_480.astype('bool'), var_508.astype('bool')) # shape=(12, 2, 6)
output = relay.Tuple([bop_492,bop_509,])
output2 = relay.Tuple([bop_495,bop_512,])
func_513 = relay.Function([var_508,], output)
mod['func_513'] = func_513
mod = relay.transform.InferType()(mod)
var_514 = relay.var("var_514", dtype = "int64", shape = (12, 2, 6))#candidate|514|(12, 2, 6)|var|int64
output = func_513(var_514)
func_515 = relay.Function([var_514], output)
mutated_mod['func_515'] = func_515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_223_call = mod.get_global_var('func_223')
func_225_call = mutated_mod.get_global_var('func_225')
call_533 = func_223_call()
call_534 = func_223_call()
output = relay.Tuple([call_533,])
output2 = relay.Tuple([call_534,])
func_537 = relay.Function([], output)
mod['func_537'] = func_537
mod = relay.transform.InferType()(mod)
output = func_537()
func_538 = relay.Function([], output)
mutated_mod['func_538'] = func_538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_396_call = mod.get_global_var('func_396')
func_397_call = mutated_mod.get_global_var('func_397')
call_572 = relay.TupleGetItem(func_396_call(), 3)
call_573 = relay.TupleGetItem(func_397_call(), 3)
uop_576 = relay.log10(call_572.astype('float32')) # shape=(2310,)
uop_578 = relay.log10(call_573.astype('float32')) # shape=(2310,)
func_276_call = mod.get_global_var('func_276')
func_279_call = mutated_mod.get_global_var('func_279')
const_587 = relay.const([4.371568,-6.598545,-1.748031,-6.939373,1.490683,3.775679,9.343773,-0.484098,7.792017,5.104702,2.995521,7.403772,-3.739574,4.639705,0.820401,4.962195,-6.933018,4.476095,-4.692510,8.479172,-2.533483,6.412190,-4.156178,-4.480063,9.997919,-3.382408,-5.092334,-3.727901,4.566373,-4.532947,-5.697014,9.501676,2.188193,0.643417,-0.078018,-3.998006,3.011600,7.971729,5.852860,9.285498,3.629437,-0.046384,6.351574,8.222823,-4.687561,6.396028,1.679973,-8.997770,-4.447013,-0.331783,-3.906650,9.011799,-1.178983,0.957297,-2.654097,-9.120122,-0.389271,6.153089,7.549628,-1.026672,-2.816280,-9.377641,-8.794778,1.494983,-5.610112,-6.280044,-7.908315,-6.062551,-4.507509,-1.519005,-5.579866,-5.344791,5.098606,0.676146,-1.267631,5.674544,8.900985,-0.320413,-3.255981,-1.180475,9.167436,3.944274,4.236931,-4.573241,3.842039,-6.110639,6.856053,-5.305425,0.466735,6.529803,5.581423,-9.637761,-5.072953,-3.391452,-8.768431,4.605340,1.394061,0.761466,-4.701269,-8.282970,1.675663,-1.373554,-8.298351,4.639244,-3.544614,9.771685,7.400320,-0.155662,8.689876,-6.515968,-5.626649,9.584597,-0.048535,-6.821165,5.342571,-0.972975,0.809733,7.128403,8.175174,3.070365,-9.637309,4.847921,6.404202,4.837103,0.646895,-9.651425,-9.121264,2.631275,9.746217,2.781852,1.087863,4.853760,-3.692478,-9.506651,2.451081,7.934512,-5.784161,-2.412679,1.264549,-0.691423,7.114014,-3.906113,9.007664,9.233575,4.979961,2.100767,-3.621192,1.625665,3.410403,9.169878,-8.882886,-0.766197,7.405361,-6.569795,9.305336,3.224303,6.643136,-5.683111,-9.629934,9.748569,-9.602144,-1.153418,3.433241,-7.956769,8.300651,-0.714184,-6.370498,-8.854812,5.508106,-3.889576,-7.333350,4.815321,4.541499,-6.595494,6.623676,4.507431,-2.107819,4.148575,-7.022093,-2.179596,1.681390,4.530037,-4.398166,3.890768,-3.611542,-8.476354,-8.902990,-7.301215,3.066787,7.496175,5.236671,-4.167675,-9.880865,0.122765,6.343717,-5.298829,-0.397034,6.495141,8.402920,-4.967807,-2.940159,-9.643108,8.980147,0.300713,4.310723,7.652955,4.763355,-2.197114,8.831338,-5.272972,-1.729591,8.763948,-4.366631,7.622460,-1.058320,3.483080,-4.093737,9.444726,4.792156,-4.206047,9.095642,5.623504,6.558698,-3.358593,2.456411,-1.453085,3.150771,1.017413,-6.062947,4.430282,-6.794210,1.294067,9.403900,-3.658983,9.853136,6.493514,7.573734,-9.420496,5.303095,5.761033,1.705342,-7.018313,-6.961895,2.788880,-7.899352,9.816782,6.533273,0.242206,2.339519,7.270829,-9.089667,9.988120,1.909010,-5.602177,-4.508580,-2.970865,0.439523,-1.124660,-2.320361,-5.352605,-3.223345,5.449972,8.139503,-4.402566,4.121138,1.430954,8.726593,5.045571,-1.488147,6.931392,2.171215,6.397464,-8.206334,-1.282803,7.193770,1.863298,-1.980432,5.671080,8.830424,-9.242783,-2.980718,-1.478745,-1.924715,-1.697785,3.117847,7.073487,7.645466,-8.310863,-6.972841,-2.702962,8.121566,-6.484601,1.050745,4.371489,3.810489,3.847965,-7.487798,9.990568,5.926071,9.049352,6.381925,4.917868,2.406800,-9.287700,2.986920,8.461766,-2.548689,-9.905898,-0.357467,-8.901484,-5.067834,6.644501,4.985994,7.234410,-5.484186,-0.183557,-2.893519,1.752255,7.114574,9.705265,-3.475152,8.165408,-0.755988,-3.708260,-7.589776,9.569272,-5.490021,4.495693,9.177945,-3.901451,2.149505,-4.636745,9.909373,-5.203810,7.269970,3.400210,-1.194468,2.814550,-2.280539,7.567738,-7.552568,3.161750,3.025120,1.692737,-7.336133,4.019368,-2.869882,2.157151,8.105073,-0.479549,0.205881,-6.859487,-7.355962,2.293162,-6.975961,4.487811,0.557139,5.967332,3.969093,3.327298,2.340450,-9.990151,-3.985988,4.613906,3.751669,0.483673,5.849715,-0.494544,9.787194,-3.818041,0.855372,-6.802601,2.569297,6.124638,-3.988345,-0.470808,2.139032,6.889324,-2.292168,3.460073,-9.912086,-0.590762,0.154399,-3.645609,-4.587997,-7.247168,-9.621330,-5.260723,-3.522386,1.785206,3.284377,-6.727759,-3.272929,-7.787670,-1.393006,-6.574509,-0.025756,-5.289298,2.467028,-6.866207,-7.031924,5.645889,-9.860100,-7.423116,-0.464430,3.161351,3.912972,-0.126862,-1.738713,-1.757045,4.200883,9.705035,8.440976,6.389823,-6.887205,1.956084,-7.462171,-3.306814,-5.684519,5.698171,-2.584679,-4.516561,1.623188,0.647014,-3.514469,-9.276898,-3.051167,2.910432,-3.275252,-8.759763,3.257635,2.646151], dtype = "float32")#candidate|587|(432,)|const|float32
call_586 = relay.TupleGetItem(func_276_call(relay.reshape(uop_576.astype('float64'), [15, 14, 11]), relay.reshape(const_587.astype('float32'), [432,]), ), 1)
call_588 = relay.TupleGetItem(func_279_call(relay.reshape(uop_576.astype('float64'), [15, 14, 11]), relay.reshape(const_587.astype('float32'), [432,]), ), 1)
output = relay.Tuple([uop_576,call_586,const_587,])
output2 = relay.Tuple([uop_578,call_588,const_587,])
func_592 = relay.Function([], output)
mod['func_592'] = func_592
mod = relay.transform.InferType()(mod)
output = func_592()
func_593 = relay.Function([], output)
mutated_mod['func_593'] = func_593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_298_call = mod.get_global_var('func_298')
func_299_call = mutated_mod.get_global_var('func_299')
call_600 = relay.TupleGetItem(func_298_call(), 0)
call_601 = relay.TupleGetItem(func_299_call(), 0)
func_276_call = mod.get_global_var('func_276')
func_279_call = mutated_mod.get_global_var('func_279')
var_607 = relay.var("var_607", dtype = "float64", shape = (2310,))#candidate|607|(2310,)|var|float64
var_608 = relay.var("var_608", dtype = "float32", shape = (432,))#candidate|608|(432,)|var|float32
call_606 = relay.TupleGetItem(func_276_call(relay.reshape(var_607.astype('float64'), [15, 14, 11]), relay.reshape(var_608.astype('float32'), [432,]), ), 1)
call_609 = relay.TupleGetItem(func_279_call(relay.reshape(var_607.astype('float64'), [15, 14, 11]), relay.reshape(var_608.astype('float32'), [432,]), ), 1)
output = relay.Tuple([call_600,call_606,var_607,var_608,])
output2 = relay.Tuple([call_601,call_609,var_607,var_608,])
func_610 = relay.Function([var_607,var_608,], output)
mod['func_610'] = func_610
mod = relay.transform.InferType()(mod)
mutated_mod['func_610'] = func_610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_610_call = mutated_mod.get_global_var('func_610')
var_612 = relay.var("var_612", dtype = "float64", shape = (2310,))#candidate|612|(2310,)|var|float64
var_613 = relay.var("var_613", dtype = "float32", shape = (432,))#candidate|613|(432,)|var|float32
call_611 = func_610_call(var_612,var_613,)
output = call_611
func_614 = relay.Function([var_612,var_613,], output)
mutated_mod['func_614'] = func_614
mutated_mod = relay.transform.InferType()(mutated_mod)
var_652 = relay.var("var_652", dtype = "uint32", shape = ())#candidate|652|()|var|uint32
var_653 = relay.var("var_653", dtype = "uint32", shape = (4, 10, 14))#candidate|653|(4, 10, 14)|var|uint32
bop_654 = relay.less(var_652.astype('bool'), var_653.astype('bool')) # shape=(4, 10, 14)
output = bop_654
output2 = bop_654
func_657 = relay.Function([var_652,var_653,], output)
mod['func_657'] = func_657
mod = relay.transform.InferType()(mod)
var_658 = relay.var("var_658", dtype = "uint32", shape = ())#candidate|658|()|var|uint32
var_659 = relay.var("var_659", dtype = "uint32", shape = (4, 10, 14))#candidate|659|(4, 10, 14)|var|uint32
output = func_657(var_658,var_659,)
func_660 = relay.Function([var_658,var_659,], output)
mutated_mod['func_660'] = func_660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_592_call = mod.get_global_var('func_592')
func_593_call = mutated_mod.get_global_var('func_593')
call_728 = relay.TupleGetItem(func_592_call(), 1)
call_729 = relay.TupleGetItem(func_593_call(), 1)
func_457_call = mod.get_global_var('func_457')
func_458_call = mutated_mod.get_global_var('func_458')
call_731 = relay.TupleGetItem(func_457_call(), 0)
call_732 = relay.TupleGetItem(func_458_call(), 0)
func_276_call = mod.get_global_var('func_276')
func_279_call = mutated_mod.get_global_var('func_279')
call_734 = relay.TupleGetItem(func_276_call(relay.reshape(call_731.astype('float64'), [15, 14, 11]), relay.reshape(call_728.astype('float32'), [432,]), ), 0)
call_735 = relay.TupleGetItem(func_279_call(relay.reshape(call_731.astype('float64'), [15, 14, 11]), relay.reshape(call_728.astype('float32'), [432,]), ), 0)
output = relay.Tuple([call_728,call_731,call_734,])
output2 = relay.Tuple([call_729,call_732,call_735,])
func_746 = relay.Function([], output)
mod['func_746'] = func_746
mod = relay.transform.InferType()(mod)
output = func_746()
func_747 = relay.Function([], output)
mutated_mod['func_747'] = func_747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_176_call = mod.get_global_var('func_176')
func_177_call = mutated_mod.get_global_var('func_177')
call_759 = func_176_call()
call_760 = func_176_call()
const_766 = relay.const([[[-1,-9,8,-9,-5,-7],[9,-10,1,2,2,-8],[-7,-1,-8,-6,-10,1],[-8,8,-9,8,-3,5]],[[-4,-9,4,-3,-2,7],[-1,-8,9,10,2,-1],[-7,10,-7,5,-1,-10],[-2,6,-7,-3,-6,-3]],[[2,2,-3,6,-2,-9],[-3,-10,9,-9,-3,4],[-6,8,1,6,-5,9],[1,-8,-4,-2,9,9]],[[-2,-8,1,-2,-2,10],[-4,-7,7,8,1,-1],[-3,10,-4,2,7,-8],[-4,7,3,-9,4,-7]],[[-4,-8,-1,10,3,5],[-10,3,7,-8,-4,-8],[4,7,5,-10,-8,-4],[9,-2,5,-10,-6,-4]],[[6,5,9,-8,-3,3],[-8,-7,-1,-5,6,-5],[-9,-9,7,10,-5,5],[2,-7,8,-1,2,3]],[[10,4,-9,10,-3,3],[-2,5,-1,1,4,6],[-7,10,-8,3,-3,7],[-7,2,-6,1,-1,5]],[[-7,-5,6,2,-2,-5],[5,8,6,-4,2,2],[-10,-6,-1,2,7,8],[-1,-9,3,1,1,-10]],[[5,-9,-9,-5,-5,-9],[-1,-4,-8,-4,-1,2],[-6,-3,-6,-5,6,-10],[-6,-3,5,7,3,-8]],[[4,-2,4,10,-10,-8],[-8,7,-6,1,9,3],[6,-4,3,-3,-4,1],[-10,-10,4,5,3,-7]],[[7,3,2,4,5,-10],[-7,-5,-10,9,-5,-2],[-10,-4,9,4,-1,-5],[-10,-4,6,5,-9,-4]],[[-5,10,-1,3,-9,4],[10,7,-4,4,-1,1],[4,-9,-6,-1,6,-5],[2,-10,-6,-1,4,-8]]], dtype = "int64")#candidate|766|(12, 4, 6)|const|int64
bop_767 = relay.floor_mod(call_759.astype('float32'), const_766.astype('float32')) # shape=(12, 4, 6)
bop_770 = relay.floor_mod(call_760.astype('float32'), const_766.astype('float32')) # shape=(12, 4, 6)
output = relay.Tuple([bop_767,])
output2 = relay.Tuple([bop_770,])
func_775 = relay.Function([], output)
mod['func_775'] = func_775
mod = relay.transform.InferType()(mod)
mutated_mod['func_775'] = func_775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mutated_mod.get_global_var('func_775')
call_776 = func_775_call()
output = call_776
func_777 = relay.Function([], output)
mutated_mod['func_777'] = func_777
mutated_mod = relay.transform.InferType()(mutated_mod)
var_846 = relay.var("var_846", dtype = "int8", shape = (12, 5, 5))#candidate|846|(12, 5, 5)|var|int8
var_847 = relay.var("var_847", dtype = "int8", shape = (12, 5, 5))#candidate|847|(12, 5, 5)|var|int8
bop_848 = relay.left_shift(var_846.astype('int8'), relay.reshape(var_847.astype('int8'), relay.shape_of(var_846))) # shape=(12, 5, 5)
uop_851 = relay.cosh(var_847.astype('float64')) # shape=(12, 5, 5)
bop_856 = relay.mod(bop_848.astype('float64'), relay.reshape(uop_851.astype('float64'), relay.shape_of(bop_848))) # shape=(12, 5, 5)
bop_864 = relay.greater(bop_856.astype('bool'), relay.reshape(bop_848.astype('bool'), relay.shape_of(bop_856))) # shape=(12, 5, 5)
output = relay.Tuple([bop_864,])
output2 = relay.Tuple([bop_864,])
func_871 = relay.Function([var_846,var_847,], output)
mod['func_871'] = func_871
mod = relay.transform.InferType()(mod)
var_872 = relay.var("var_872", dtype = "int8", shape = (12, 5, 5))#candidate|872|(12, 5, 5)|var|int8
var_873 = relay.var("var_873", dtype = "int8", shape = (12, 5, 5))#candidate|873|(12, 5, 5)|var|int8
output = func_871(var_872,var_873,)
func_874 = relay.Function([var_872,var_873,], output)
mutated_mod['func_874'] = func_874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_298_call = mod.get_global_var('func_298')
func_299_call = mutated_mod.get_global_var('func_299')
call_891 = relay.TupleGetItem(func_298_call(), 0)
call_892 = relay.TupleGetItem(func_299_call(), 0)
uop_899 = relay.sigmoid(call_891.astype('float32')) # shape=(12, 1, 6)
uop_901 = relay.sigmoid(call_892.astype('float32')) # shape=(12, 1, 6)
func_592_call = mod.get_global_var('func_592')
func_593_call = mutated_mod.get_global_var('func_593')
call_902 = relay.TupleGetItem(func_592_call(), 1)
call_903 = relay.TupleGetItem(func_593_call(), 1)
bop_913 = relay.power(uop_899.astype('float32'), relay.reshape(call_891.astype('float32'), relay.shape_of(uop_899))) # shape=(12, 1, 6)
bop_916 = relay.power(uop_901.astype('float32'), relay.reshape(call_892.astype('float32'), relay.shape_of(uop_901))) # shape=(12, 1, 6)
bop_935 = relay.mod(bop_913.astype('float64'), relay.reshape(uop_899.astype('float64'), relay.shape_of(bop_913))) # shape=(12, 1, 6)
bop_938 = relay.mod(bop_916.astype('float64'), relay.reshape(uop_901.astype('float64'), relay.shape_of(bop_916))) # shape=(12, 1, 6)
func_298_call = mod.get_global_var('func_298')
func_299_call = mutated_mod.get_global_var('func_299')
call_954 = relay.TupleGetItem(func_298_call(), 0)
call_955 = relay.TupleGetItem(func_299_call(), 0)
func_396_call = mod.get_global_var('func_396')
func_397_call = mutated_mod.get_global_var('func_397')
call_958 = relay.TupleGetItem(func_396_call(), 3)
call_959 = relay.TupleGetItem(func_397_call(), 3)
var_966 = relay.var("var_966", dtype = "float64", shape = (2310,))#candidate|966|(2310,)|var|float64
bop_967 = relay.minimum(call_958.astype('float32'), relay.reshape(var_966.astype('float32'), relay.shape_of(call_958))) # shape=(2310,)
bop_970 = relay.minimum(call_959.astype('float32'), relay.reshape(var_966.astype('float32'), relay.shape_of(call_959))) # shape=(2310,)
func_513_call = mod.get_global_var('func_513')
func_515_call = mutated_mod.get_global_var('func_515')
const_977 = relay.const([-5,7,4,3,-1,-10,8,-5,3,-7,7,-2,4,3,7,2,-1,-8,-6,-2,3,-10,-10,-6,-4,-2,9,-7,-5,-8,2,-4,10,-9,5,5,-3,-1,-4,6,1,1,3,-5,-8,-1,-3,-3,-9,1,-4,-3,3,-10,2,7,3,3,3,2,-3,2,-10,-10,7,-4,-8,-8,3,-10,-1,8,2,-7,1,8,6,1,5,6,3,-3,-7,3,-6,-4,-1,-10,-2,-10,10,-9,8,-2,-1,4,-6,-6,7,-2,-4,1,-9,-10,2,5,10,6,-4,-10,7,-9,-3,8,4,-5,8,-6,9,-9,-6,2,-8,3,-9,7,6,-10,10,-9,10,5,-9,5,6,10,-8,-5,5,8,-10,-1,-2,-7], dtype = "int64")#candidate|977|(144,)|const|int64
call_976 = relay.TupleGetItem(func_513_call(relay.reshape(const_977.astype('int64'), [12, 2, 6])), 0)
call_978 = relay.TupleGetItem(func_515_call(relay.reshape(const_977.astype('int64'), [12, 2, 6])), 0)
func_159_call = mod.get_global_var('func_159')
func_163_call = mutated_mod.get_global_var('func_163')
var_1011 = relay.var("var_1011", dtype = "uint8", shape = (286,))#candidate|1011|(286,)|var|uint8
call_1010 = relay.TupleGetItem(func_159_call(relay.reshape(var_1011.astype('uint8'), [13, 11, 2]), relay.reshape(call_902.astype('float32'), [1, 432]), ), 1)
call_1012 = relay.TupleGetItem(func_163_call(relay.reshape(var_1011.astype('uint8'), [13, 11, 2]), relay.reshape(call_902.astype('float32'), [1, 432]), ), 1)
output = relay.Tuple([call_902,bop_935,call_954,bop_967,call_976,const_977,call_1010,var_1011,])
output2 = relay.Tuple([call_903,bop_938,call_955,bop_970,call_978,const_977,call_1012,var_1011,])
func_1015 = relay.Function([var_966,var_1011,], output)
mod['func_1015'] = func_1015
mod = relay.transform.InferType()(mod)
mutated_mod['func_1015'] = func_1015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1015_call = mutated_mod.get_global_var('func_1015')
var_1017 = relay.var("var_1017", dtype = "float64", shape = (2310,))#candidate|1017|(2310,)|var|float64
var_1018 = relay.var("var_1018", dtype = "uint8", shape = (286,))#candidate|1018|(286,)|var|uint8
call_1016 = func_1015_call(var_1017,var_1018,)
output = call_1016
func_1019 = relay.Function([var_1017,var_1018,], output)
mutated_mod['func_1019'] = func_1019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_223_call = mod.get_global_var('func_223')
func_225_call = mutated_mod.get_global_var('func_225')
call_1038 = func_223_call()
call_1039 = func_223_call()
output = call_1038
output2 = call_1039
func_1041 = relay.Function([], output)
mod['func_1041'] = func_1041
mod = relay.transform.InferType()(mod)
mutated_mod['func_1041'] = func_1041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mutated_mod.get_global_var('func_1041')
call_1042 = func_1041_call()
output = call_1042
func_1043 = relay.Function([], output)
mutated_mod['func_1043'] = func_1043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_298_call = mod.get_global_var('func_298')
func_299_call = mutated_mod.get_global_var('func_299')
call_1079 = relay.TupleGetItem(func_298_call(), 0)
call_1080 = relay.TupleGetItem(func_299_call(), 0)
var_1081 = relay.var("var_1081", dtype = "int64", shape = (12, 4, 6))#candidate|1081|(12, 4, 6)|var|int64
bop_1082 = relay.not_equal(call_1079.astype('bool'), var_1081.astype('bool')) # shape=(12, 4, 6)
bop_1085 = relay.not_equal(call_1080.astype('bool'), var_1081.astype('bool')) # shape=(12, 4, 6)
bop_1095 = relay.left_shift(var_1081.astype('uint16'), call_1079.astype('uint16')) # shape=(12, 4, 6)
bop_1098 = relay.left_shift(var_1081.astype('uint16'), call_1080.astype('uint16')) # shape=(12, 4, 6)
uop_1104 = relay.exp(bop_1082.astype('float32')) # shape=(12, 4, 6)
uop_1106 = relay.exp(bop_1085.astype('float32')) # shape=(12, 4, 6)
output = relay.Tuple([bop_1095,uop_1104,])
output2 = relay.Tuple([bop_1098,uop_1106,])
func_1107 = relay.Function([var_1081,], output)
mod['func_1107'] = func_1107
mod = relay.transform.InferType()(mod)
mutated_mod['func_1107'] = func_1107
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1108 = relay.var("var_1108", dtype = "int64", shape = (12, 4, 6))#candidate|1108|(12, 4, 6)|var|int64
func_1107_call = mutated_mod.get_global_var('func_1107')
call_1109 = func_1107_call(var_1108)
output = call_1109
func_1110 = relay.Function([var_1108], output)
mutated_mod['func_1110'] = func_1110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_777_call = mutated_mod.get_global_var('func_777')
call_1189 = relay.TupleGetItem(func_775_call(), 0)
call_1190 = relay.TupleGetItem(func_777_call(), 0)
var_1193 = relay.var("var_1193", dtype = "float32", shape = (12, 4, 6))#candidate|1193|(12, 4, 6)|var|float32
bop_1194 = relay.bitwise_and(call_1189.astype('uint16'), relay.reshape(var_1193.astype('uint16'), relay.shape_of(call_1189))) # shape=(12, 4, 6)
bop_1197 = relay.bitwise_and(call_1190.astype('uint16'), relay.reshape(var_1193.astype('uint16'), relay.shape_of(call_1190))) # shape=(12, 4, 6)
func_276_call = mod.get_global_var('func_276')
func_279_call = mutated_mod.get_global_var('func_279')
const_1210 = relay.const([[-5.956918,-4.103755,2.591561],[1.184168,-2.351171,-2.353398],[-8.066891,5.717699,-4.506786],[-9.639260,-4.477237,-8.803930],[-7.192098,0.265953,-4.253664],[-7.183387,1.419560,-7.982676],[-6.161448,-0.896810,5.222064],[5.985089,-3.550824,-5.388575],[4.933257,2.613581,8.361781],[-7.364240,7.461571,9.665020],[4.387329,-6.116125,-9.145718],[9.439428,-7.105235,-4.125915],[4.948901,-8.841302,-3.669813],[-2.130533,5.583997,9.644970],[7.784196,-0.773209,9.068887],[-9.420434,6.047412,0.686093],[0.207883,1.727874,6.487113],[-9.148411,9.921446,-1.546963],[8.693320,8.654709,-2.984803],[3.324033,5.799012,-2.632169],[7.451596,9.789723,0.066967],[2.987202,0.452912,-8.647224],[-2.345036,8.213953,6.421960],[2.116261,-7.087824,9.494605],[8.770713,-9.234664,-7.808625],[-3.732011,3.986521,3.258601],[-1.571713,-9.227090,4.974493],[-2.639167,2.377753,6.699916],[7.868162,9.839259,-0.505988],[-7.434659,1.113444,-5.973336],[2.515015,-4.445851,-8.402893],[4.510250,-5.238509,-3.015540],[6.279700,8.881614,9.320387],[7.127718,3.542361,-6.527749],[-9.584909,5.761645,-1.867771],[8.096119,-8.252555,-3.666010],[3.351890,-2.720494,7.859935],[3.919397,1.952915,3.899196],[-7.631913,-3.300104,9.558599],[3.666779,3.038133,-9.338412],[-5.838215,-3.656695,1.688517],[9.222170,-8.214357,-0.062562],[-0.334988,-5.827823,-7.794662],[-9.393925,0.057013,-9.317141],[-9.644803,-6.137570,-6.847723],[5.054555,-7.780581,-2.681377],[-5.183840,0.613588,9.748223],[2.954696,5.447850,1.314610],[3.486735,-3.772013,-4.175875],[-6.847276,-6.129772,4.958322],[0.104230,4.024427,-6.221399],[9.304403,3.987590,5.120294],[-8.312121,4.942833,0.300027],[6.147159,-3.472010,0.007404],[-9.278436,0.189947,-4.076527],[6.405181,8.695112,6.829265],[-2.956226,2.853414,8.202237],[-9.612176,0.645695,-9.200878],[8.645240,8.934277,2.252086],[-3.638543,-3.199279,2.629480],[-7.004920,-0.307874,4.184963],[6.172315,-0.869222,-9.233985],[-4.496543,9.714073,-0.289493],[-9.519861,1.200534,4.234511],[-0.673693,-9.192890,-2.240548],[7.603659,2.398095,-1.360970],[8.671986,-2.974434,-4.788947],[-0.169973,-9.458543,-7.908164],[6.270663,-0.532650,2.980145],[8.244744,9.681209,-9.263891],[3.056354,5.573742,-2.208993],[-2.992773,5.862421,4.426282],[1.351972,-3.584417,-7.006066],[-7.057096,8.947704,-3.547408],[-5.187228,-1.212745,-2.740824],[4.907909,-3.057046,-1.448169],[1.580868,4.388670,9.788877],[-9.676742,-9.726280,-6.021848],[-2.360174,-6.558753,1.054080],[-9.358693,-6.176532,-1.256774],[5.395311,9.598876,-8.716469],[-7.619997,-2.139816,-3.010209],[6.723097,-8.157855,-6.387673],[-2.293594,4.881845,-0.841743],[8.315135,-4.977677,-5.876672],[-4.887147,4.632456,8.738349],[6.973893,7.188599,9.403293],[-0.752214,-3.340925,-3.840757],[8.464996,9.563391,4.540404],[-2.550942,-7.818435,6.622622],[2.958624,2.434485,5.796882],[-3.290875,-1.608678,-1.099740],[2.965509,-3.120240,4.128113],[-6.410985,2.585763,7.300668],[-3.808136,-0.525380,-2.583448],[9.907099,9.705233,-9.353585],[9.373478,-1.131797,-4.165242],[-1.089771,7.990812,-0.902492],[6.013623,6.257922,-8.050422],[-4.932164,-0.378826,-7.847368],[-4.288321,-6.250359,-9.202700],[-5.196464,4.973946,5.657996],[4.351190,-8.837531,8.543699],[9.505659,9.281057,9.118126],[2.396843,-6.198749,-1.970066],[-7.698229,-3.575005,1.223855],[-2.808401,7.562640,-6.925698],[0.220875,-0.522080,-9.388696],[-0.114375,-7.733562,-9.187088],[-8.492329,8.684815,-2.383117],[5.896709,-8.173810,4.111460],[-9.706359,7.466738,-8.125496],[-3.363297,5.440338,5.379106],[-6.744573,2.256821,4.143801],[4.100232,9.948447,4.263588],[-7.267845,9.373224,-3.147842],[-2.931675,-2.856718,-9.894312],[9.026413,-2.904519,7.826360],[-3.017112,-1.787587,1.256505],[-4.161491,5.514946,7.569013],[1.436435,5.993511,8.471342],[1.883929,-6.038058,3.019793],[-7.311212,5.234389,-1.306788],[-3.735612,2.164276,-0.267045],[6.105892,1.552050,5.483419],[8.149049,-1.165496,1.379901],[-9.264106,-8.737109,-3.422448],[-4.428245,-0.492825,7.033210],[-1.544199,-0.689410,-7.207292],[-8.546105,2.045896,-2.298681],[8.177861,2.556716,-1.401116],[6.449728,8.257088,1.518543],[7.523474,2.749146,-3.686712],[-3.478585,-7.425432,-8.673612],[-4.584147,-9.884248,-0.866571],[-6.861830,-8.213241,4.686535],[-7.430504,-7.529885,-5.556711],[8.489416,7.308960,-4.682199],[1.733861,-4.520943,7.619254],[9.291607,-7.596912,7.320182],[-2.529043,-7.829604,8.261470],[-8.809254,-6.460674,5.232300],[-8.602097,-9.185793,6.266812],[3.208241,-5.487997,6.792974],[-7.055878,0.251967,-7.929014],[0.899580,-9.244846,-3.727326],[-8.008542,7.362605,8.476595],[0.466052,8.594955,1.912122],[-1.347066,8.514425,-5.990949],[-6.495102,7.461960,5.896119],[-9.338728,5.380889,-0.321190],[-0.145289,-3.274649,0.843836],[9.565152,5.636879,8.809550],[4.772386,-4.460136,-4.533029],[7.752935,0.844516,-9.853556],[0.399735,-9.330967,3.902928],[-3.790712,7.308641,6.230412],[-4.251706,8.105988,4.179764],[-6.840465,0.335021,7.341251],[4.194131,-5.661184,-6.512762],[-5.889564,-7.174181,-4.163817],[7.806521,0.650416,0.791067],[-2.709377,6.428115,8.117032],[-8.888632,-5.986876,-1.592239],[5.620769,-7.463066,3.411346],[-2.265433,-4.173989,-9.569243],[-1.001262,4.045713,-1.313476],[-6.959546,-0.401152,-7.972031],[-2.705004,6.156094,-6.274009],[-3.726950,-3.458811,-0.884994],[9.518205,2.797139,0.704433],[-9.704290,5.196192,7.460755],[-2.160073,-8.875707,-6.078441],[7.899811,3.352717,3.866380],[-7.425358,8.358316,-1.393981],[-4.653016,-8.953820,-8.939228],[1.223112,1.725233,-5.672322],[-2.255338,-7.339339,-1.939407],[-5.674562,9.316360,-9.916561],[9.796371,3.600413,9.851639],[-6.175408,3.625984,4.453394],[-4.085318,3.157383,-2.855992],[6.404157,-1.707651,8.228449],[-0.946592,-9.303711,-2.127458],[-3.181651,-7.905708,-8.393611],[5.967907,8.618056,-9.260846],[-5.478231,-0.124220,-6.600300],[-8.926908,4.760876,-5.107270],[0.235916,-1.329008,-4.397113],[-4.494934,1.038098,-4.072168],[6.770876,-9.749585,4.417134],[6.079237,-4.305220,0.209463],[-7.926424,-8.400313,-1.887704],[8.743760,1.992429,-8.560059],[-9.926020,-7.747765,7.555369],[3.762419,-6.966349,5.456415],[-8.882735,-3.179598,-8.606075],[-0.981237,1.013465,5.189450],[0.645069,2.207228,-5.376881],[-0.556306,-7.519650,-2.937338],[-9.990174,-0.418410,-1.952246],[-9.241017,6.060437,8.991774],[-8.751638,-4.314916,-7.621678],[6.038448,-3.549813,-9.130279],[-0.647729,0.673838,0.688176],[-7.469356,-0.984966,-5.807436],[6.634040,8.714880,7.630475],[-7.399297,-0.953023,2.070332],[-6.968030,-9.670611,0.047502],[-3.839311,-8.020832,3.849082],[6.133340,9.981803,-8.910903],[-3.015071,-5.419768,-5.455237],[-9.641412,4.605103,-6.306395],[5.541267,8.424362,5.597203],[-5.312104,8.247834,-8.111876],[-4.294866,-5.755224,4.545181],[-1.578012,-1.873524,4.955240],[-1.747914,-2.375271,2.695069],[7.260019,7.813406,-0.898172],[6.702596,-0.492673,5.004348],[1.293775,9.452297,2.230286],[8.325419,-0.019093,-3.569939],[-7.672003,-4.494328,-1.574712],[5.495443,-9.014213,8.727747],[-0.999233,-5.458000,3.107723],[5.159334,2.124945,-0.180991],[9.331870,-5.370328,-8.408419],[6.606821,-7.736593,7.863021],[5.036688,-1.767305,6.395183],[3.710177,-5.375826,9.306243],[0.915853,3.041138,4.937564],[-4.209145,7.160747,-3.941063],[9.499983,-3.483498,9.313326],[8.150507,3.171706,0.102578],[0.756601,-4.571683,-1.494091],[6.337513,-0.640761,-7.747347],[-1.620246,-6.467609,-9.912455],[0.197514,-3.104297,9.324770],[5.645793,8.298321,-1.223355],[-2.703596,7.152340,2.349443],[-8.625325,6.421318,6.022995],[-5.321064,-8.637125,6.269292],[7.406997,0.623668,3.987280],[-5.080207,3.689616,8.511634],[-6.822497,5.516695,-2.684481],[0.509374,4.363201,6.626893],[-7.939568,-2.226996,-7.817509],[6.704942,2.508265,7.025011],[7.413373,5.950635,2.714928],[-1.980373,-3.050755,4.526279],[6.403733,3.999466,-0.475105],[3.259846,-5.148943,6.116131],[-8.384416,4.577322,6.851844],[-0.801881,-9.111480,0.415338],[-5.906019,0.946934,7.383538],[3.218590,6.843917,7.268669],[1.963406,-0.995557,2.626241],[-3.358391,7.617489,9.809880],[-6.617461,3.955299,0.419652],[4.814915,6.501366,4.108788],[1.140731,4.676694,5.174864],[-4.051137,5.720965,4.466919],[8.806770,-8.711879,4.377996],[5.456389,5.028012,-1.082248],[-5.775678,-2.797974,-4.912886],[-1.997780,-7.799783,-5.238141],[4.149989,-2.065396,6.539746],[6.252130,6.710546,2.223664],[7.594971,7.932222,-0.418727],[8.506247,2.945448,-1.779501],[2.580508,0.290791,-2.264688],[-3.681244,5.908544,-9.947266],[-4.255568,5.817957,-2.557780],[-0.261674,3.138834,-3.546428],[8.320361,-5.915179,-2.192450],[-5.247629,-0.916362,4.563265],[7.986299,-6.018717,7.001218],[4.194250,-2.478317,0.456964],[-1.209149,-6.600052,5.433059],[1.938476,-0.537528,7.320233],[-2.581320,4.118790,-3.521802],[6.333149,-7.990865,-0.773549],[-7.286936,2.479601,-5.407828],[9.469932,-5.863715,-3.102880],[1.142534,-8.982140,-3.217414],[-9.377567,1.924764,4.065440],[-6.313312,6.214513,-4.778542],[-5.623575,4.312469,8.375115],[5.909831,-6.398213,-5.307577],[8.980683,-9.141551,6.931289],[-8.927552,8.387236,6.637619],[1.944397,3.700118,-0.725821],[-9.152561,2.112955,-5.789545],[3.535732,3.471530,9.022274],[-5.258669,3.106623,-0.046427],[8.048753,-6.495233,-7.088861],[5.170954,-7.061541,-3.499776],[-7.174579,2.352977,0.370915],[-9.450585,6.601349,-6.915993],[1.867349,-1.151577,-1.853238],[-9.078768,4.809034,-7.370351],[-7.316338,5.263758,6.423224],[-0.647164,-1.242967,4.497519],[2.475746,-9.516470,1.433318],[-8.983783,1.517419,-0.128419],[5.059100,-1.941098,2.545857],[7.489092,-6.884448,-4.246227],[-1.454951,-6.772096,3.760426],[-9.896463,4.651567,2.817041],[-8.743139,-2.031100,-6.966301],[4.566339,9.357644,-3.916233],[-5.080483,-8.686391,-5.458505],[-3.374135,0.771836,7.171885],[-9.512750,-8.067696,-4.340806],[7.992758,2.281080,1.011424],[-2.860251,8.529694,-9.454163],[-8.987757,7.345070,5.465444],[-4.379902,4.006376,-2.797340],[-4.641792,-2.611445,6.040888],[-6.427795,3.242246,-0.836413],[-8.762519,6.716783,-8.936855],[7.651567,4.510047,8.383368],[2.359889,-0.784255,-0.718515],[6.900309,-7.381131,4.585620],[9.476457,-4.356489,3.858004],[9.447281,5.698390,1.081480],[-2.363912,-3.157290,-9.436713],[-7.176598,5.789897,-1.196460],[-4.327528,-0.809710,8.180563],[-6.996373,-4.881827,-6.661318],[6.773593,7.297908,-6.175859],[-5.378303,3.878701,-0.807611],[-0.029037,4.369830,-5.945722],[5.748657,-6.383392,6.212710],[1.123864,-3.253911,-8.899243],[6.285316,-3.812769,-8.005847],[-3.793040,9.552766,6.882457],[1.750099,-2.491934,-6.977532],[-6.345490,6.544134,0.281475],[-2.332293,-5.436727,-1.041557],[3.602873,-3.085341,-8.631746],[2.268854,9.056777,2.889581],[-2.631819,5.845815,6.947051],[0.839580,2.797682,-2.186768],[0.928681,-3.572535,5.624877],[-9.206133,-4.252556,-9.188840],[6.493705,2.341524,-6.106362],[-3.967934,9.381852,-9.360753],[9.384042,-2.965100,-0.543206],[8.375246,-1.280853,-6.250727],[5.158182,-1.377126,7.180040],[-6.466350,-9.400485,-9.752607],[-7.252247,-8.761118,-8.201977],[8.664649,-7.228214,-9.970330],[-2.598807,3.311336,3.826517],[7.400671,-0.782973,2.100813],[-5.859981,0.696252,0.682451],[-8.199279,-8.284845,-9.893335],[2.529745,-4.913013,9.656711],[-4.157336,-3.125806,-1.605830],[3.103961,-2.615353,-5.022102],[-6.478266,-6.365345,4.471274],[1.546398,7.356689,-8.384565],[-1.206765,8.746514,-4.974516],[1.275628,3.877403,-8.922592],[-7.687219,7.757603,0.974248],[-7.929007,-8.272921,7.280930],[-5.882930,0.057245,-6.538962],[7.596764,1.035505,5.010299],[-1.508840,2.984742,7.935896],[2.789034,1.140793,-6.117414],[-7.201632,-7.850057,1.632474],[6.820310,-9.092279,-5.464369],[-3.080131,4.817019,-8.298286],[6.828614,-7.152684,-3.373781],[-9.034825,7.922128,-5.993220],[3.723048,-7.354046,-2.467972],[5.584073,4.144571,-3.692506],[6.135868,-2.408997,8.355764],[9.301317,3.033930,8.416060],[2.071185,1.153843,0.529161],[9.929585,8.143389,8.419571],[0.253639,2.011877,-5.926557],[-1.594763,-0.243954,8.335561],[-1.944316,8.359508,-5.829390],[2.412327,-4.319472,-7.050228],[2.832721,-9.630474,4.878089],[-7.037240,3.593812,7.111256],[7.312365,4.986248,-3.031598],[4.970321,0.291140,-5.697653],[4.025421,-3.543449,0.356709],[-8.854821,-7.031204,6.918708],[-2.723345,-6.242509,0.373075],[6.916512,-6.415102,-9.462472],[4.207857,3.436730,-8.903270],[-9.477925,7.150599,-3.082307],[1.229828,8.514113,5.028203],[3.299394,-1.910690,1.902620],[-4.080349,7.820839,4.744560],[9.784677,7.348913,-5.792057],[5.447326,-4.894383,8.156996],[1.799329,4.035661,-2.305483],[7.756038,-5.953431,3.893225],[2.961448,-6.474656,-9.242836],[-6.136126,7.197723,-4.961341],[-7.428833,-4.610363,2.500999],[4.125109,7.754672,3.979922],[4.949510,3.006869,2.174361],[-1.496351,-0.910360,8.589890],[-8.077019,9.567671,2.712907],[4.258073,4.495961,-9.227100],[0.399225,4.935372,-0.962063],[-9.181160,4.237614,8.945652],[0.288977,1.282567,1.859657],[-2.337461,-1.804565,1.464322],[-7.385739,6.165668,-2.678693],[-6.448272,3.566929,-0.596237],[-3.513768,-1.952322,3.149749],[-3.347994,3.002140,-0.346591],[-9.832375,-7.024517,-8.469576],[2.430064,7.070778,-8.671987],[-3.404126,6.547521,-7.914052],[-9.387147,8.675079,-7.672541],[-7.458318,4.206174,-3.775153],[-5.523793,-0.603403,-4.454851],[-5.788504,2.505066,-1.674954],[-5.879337,-5.138830,9.021925],[7.973192,-7.486143,-0.742627],[1.314024,4.525617,-3.663704],[4.938506,8.680109,6.285476],[-7.868996,4.638948,4.266421],[-9.685428,-3.382476,-2.959572],[8.001810,3.675815,-0.049456],[1.822122,2.537452,-5.292250],[-1.605194,-8.416682,2.881324],[0.456576,-8.858220,-4.195608],[5.566514,7.593893,8.169194],[2.189338,5.081538,-1.309109],[-7.611783,-9.632416,2.746603],[1.138437,-9.385227,8.564914],[7.673179,9.801310,8.604014],[-9.635618,-1.697947,-5.503237],[8.194513,6.779777,3.901399],[-2.755897,9.950025,0.516021],[6.130227,-3.943577,-4.783252],[7.421884,2.344811,7.860676],[-7.499946,7.794320,8.298476],[9.883046,3.117686,-4.131486],[-0.887778,-0.001168,9.831506],[-4.380109,-4.557107,-0.471121],[-1.070715,-3.880748,-8.639728],[-7.741305,1.868844,-1.682893],[-8.505747,1.624674,-4.057082],[-9.223722,-1.246894,-9.107517],[-4.560604,-0.154529,3.837585],[4.542798,7.215661,0.890025],[-1.697143,-4.812852,1.033422],[-1.621311,-6.965957,1.863642],[9.838759,-4.009262,-2.510245],[6.299311,2.394993,2.471170],[-0.907815,1.549066,9.989386],[-5.782155,-9.663073,5.198569],[4.254011,7.131672,-0.438712],[-7.878232,-3.765115,7.737444],[0.060096,8.147884,2.839799],[3.550031,-6.892484,5.999163],[-1.897482,6.652647,-6.878438],[-2.008673,-1.802966,-5.017183],[5.923755,7.960385,8.989769],[-4.038800,2.711611,7.333741],[0.648132,1.426889,8.270953],[5.963856,-0.525617,6.634342],[1.361693,-0.544454,0.530849],[-4.534364,5.939539,2.867234],[1.730659,5.490400,1.805535],[3.230171,3.768900,-0.207604],[3.555770,-0.400068,-0.268897],[-3.241301,-6.828974,-7.060681],[4.034442,-6.027156,-0.811242],[6.862607,6.114603,-0.251594],[-1.158310,6.378904,-0.242708],[-2.269506,8.931222,2.027448],[-6.174384,-0.271060,-0.970600],[8.669183,0.216902,-4.725202],[2.770836,1.518319,-1.306142],[7.613613,5.766271,5.918304],[5.308890,3.659935,-5.000773],[-2.392752,7.694647,8.157076],[1.069988,5.867031,-5.989452],[-3.882651,-4.401643,2.187517],[-8.731527,7.030600,6.546477],[2.041561,-1.820297,-4.176440],[-2.932764,-7.830619,8.693886],[3.753218,-0.693606,3.174463],[3.448877,-1.136416,-0.587007],[-3.645990,-0.145541,-5.910864],[-4.480641,-7.766004,0.077482],[-6.548386,-6.688361,2.234219],[-3.244538,-6.015346,7.233298],[-9.908460,-2.856192,-2.375424],[-8.723907,3.613190,-2.069238],[-6.772560,8.578131,-1.985679],[6.844619,-3.493372,7.841668],[4.268447,0.426080,-5.338146],[-8.144062,0.080343,2.199663],[9.609262,-8.234761,-4.416729],[-0.816393,-5.798475,-9.004783],[-2.150218,8.211404,3.831993],[-8.260877,-6.965385,-2.136567],[6.610050,6.034966,1.423690],[-2.559216,-3.437119,2.569884],[-3.421499,-1.507282,-8.735768],[2.474227,-7.020792,3.203586],[9.152032,8.714185,0.683083],[-3.899246,-3.005021,0.246380],[-9.145636,-8.321178,0.602777],[2.254648,8.584352,-3.167824],[-2.909964,8.436039,-4.394695],[-2.306120,-5.874926,4.370812],[-7.369510,-6.327936,-9.532308],[-9.053782,-4.223772,2.504200],[1.986001,3.600258,-5.057726],[-2.743469,9.731246,-1.706504],[-0.335488,8.116932,-5.268423],[6.095595,-9.669529,3.349194],[2.686848,1.075759,-7.525963],[8.705858,9.729591,-1.810048],[-4.176393,0.487605,-3.168888],[2.724907,-5.666675,-2.137188],[-8.279415,0.822598,1.131789],[6.231276,8.593994,-8.968834],[8.671182,4.288992,-4.312693],[4.899265,-4.035191,-6.503835],[-4.132787,1.373580,-0.705811],[0.384336,2.171049,8.318373],[7.707800,-2.866288,3.026613],[-0.507487,-8.534207,-0.160281],[5.430970,-1.495797,-1.148847],[1.402334,-4.271312,8.293336],[-3.282316,3.327937,-2.095521],[-1.432496,3.072175,-3.626936],[-7.592311,-5.314693,-8.950220],[9.110335,-9.467611,1.224114],[6.964345,1.047802,0.580064],[-9.736295,6.743770,-1.530692],[8.308347,4.813326,5.068132],[9.110152,-3.031188,-7.127437],[-9.611654,-4.644167,6.377415],[0.673076,-6.969254,5.676753],[-8.613973,8.024522,1.985087],[1.138951,4.590555,-5.310957],[-7.124178,-6.902366,0.698284],[4.223398,-5.244932,-3.804056],[5.847508,-5.875285,-2.375410],[6.743949,-9.186028,-3.496360],[-8.402890,-9.486454,-7.930242],[-6.081627,-7.208019,0.860292],[-8.610694,-1.156297,-0.464768],[-3.874418,-2.293628,-1.936311],[-5.991494,5.281933,-1.850891],[2.129977,2.375511,-1.432619],[-4.523618,-9.970567,3.112334],[-5.100351,-8.283449,5.304397],[5.824597,-1.754337,-1.233050],[-0.737404,6.282930,2.267323],[6.703396,-4.856597,-2.888318],[-9.790368,-5.266496,-1.964874],[-7.135586,0.702843,1.746380],[9.990941,-1.532574,-8.641227],[-0.053825,-2.071090,9.724848],[-8.154222,-4.208105,0.597907],[1.422057,1.546142,2.636980],[-6.944850,-8.185594,-0.717730],[-4.351522,-9.046802,-3.706435],[8.285203,5.830300,-4.297095],[-9.880613,0.347096,3.176191],[5.514213,-9.766638,-5.754074],[-7.659560,0.357041,-1.396039],[-7.181395,6.195557,-0.569726],[-0.430082,0.429599,9.338621],[-9.942570,-2.658156,-8.953623],[-0.146688,-8.077279,-0.817682],[-0.025764,7.327906,5.540340],[-9.258058,-1.637785,-7.627579],[4.002103,6.031348,-9.705840],[-5.184077,-8.336738,-9.405406],[-4.103462,-4.683905,3.384586],[-7.294571,-8.055349,7.243362],[3.927398,3.570916,1.111989],[-0.399969,-1.012680,7.884910],[-2.411199,2.589571,-6.669411],[9.093136,9.258693,-9.044117],[-6.655454,-8.094811,-5.230677],[-6.842092,7.565354,-0.010075],[0.499772,6.223816,-2.968152],[-9.438922,-2.179892,6.468062],[7.299710,-8.574132,-4.382526],[6.476236,2.042389,6.797514],[5.928666,5.059329,-9.936561],[-4.246401,4.401394,4.533220],[-5.293137,-9.255430,-0.484616],[-9.242726,4.812147,-0.070243],[0.476656,-8.122122,0.231025],[-9.454212,-7.868026,-4.548234],[5.849585,-5.353677,-6.601462],[-5.153579,-3.969933,-1.247674],[-3.767650,-0.567832,6.100286],[-6.127569,8.442730,0.877458],[-0.392786,2.900620,9.161861],[5.136953,-9.856608,1.646240],[-8.974853,-1.576094,1.629490],[0.424289,4.565230,5.857486],[-4.108863,5.161546,-3.636778],[-3.307169,-6.335729,6.848017],[0.974328,6.811799,9.858029],[8.013656,-0.568966,-5.073607],[-0.248699,-8.217139,7.222450],[-7.716294,3.562844,8.525236],[-2.085912,-0.735573,-3.525809],[-3.332639,1.391511,8.643043],[8.165476,-1.082867,-1.235210],[8.249576,-5.654937,-5.811749],[8.936527,5.595335,-2.576772],[-4.454640,-7.804314,-3.127912],[3.384603,8.331279,-7.705571],[8.763602,8.778624,4.142440],[-5.216166,-7.492176,-3.252706],[-7.074232,9.160390,-2.396174],[8.929942,-1.990576,-3.272854],[-1.434544,2.917467,-4.215241],[-7.536712,3.241078,9.912627],[-4.104589,0.391478,-2.797865],[4.990475,7.728971,-6.183725],[1.291229,8.126245,0.171989],[-3.672527,3.945335,3.679558],[8.864721,8.907289,8.475299],[9.653939,-5.260165,-2.634911],[1.471768,9.331141,-6.561614],[-4.836480,9.064424,9.319631],[9.818623,-6.318050,-6.287916],[-7.773536,-9.558071,-7.589869],[-5.503937,0.932977,9.647790],[7.897358,2.779742,1.498797],[-2.959140,7.994460,3.549116],[2.472911,-1.383205,8.212432],[5.190144,-2.083037,9.120276],[-3.546884,7.611542,-7.224862],[1.958348,3.909088,8.369401],[0.178325,-2.360096,6.776589],[7.382809,3.636040,6.559136],[-3.067411,-9.173278,-2.667821],[-2.052066,-4.851404,-1.095299],[-2.981181,-1.960377,-6.331743],[-0.792041,-4.740938,5.574887],[5.691802,-6.994924,-2.291735],[4.482087,-3.821510,-5.539736],[-2.920638,5.142967,-3.451698],[4.390807,-0.610156,-0.535150],[2.007531,-8.486583,1.343869],[-8.007300,-2.337592,0.619355],[-6.680346,-0.845175,0.654396],[9.733053,0.546501,-9.674102],[-2.170462,-4.523421,4.744567],[3.445681,0.532461,-6.314922],[3.056167,3.997980,8.061060],[3.756198,-6.883127,9.692783],[-0.592513,6.514039,2.289830],[3.440549,1.165203,-1.175263],[-7.158700,-2.826944,6.849831],[-7.974636,3.061996,3.285224],[4.806955,-1.928060,-6.212513],[1.315453,-8.905868,-9.592035],[-6.645565,5.990149,9.974552],[-7.024375,4.840724,1.852327],[-0.710509,-7.542621,-4.014988],[-0.882343,-4.271449,2.011700],[-9.077155,2.129484,4.621983],[9.684774,6.478062,3.766345],[-3.191443,-7.570477,-7.320390],[8.762061,0.654662,-3.109378],[0.532244,0.323534,6.309972],[-8.682757,6.635276,-5.080339],[4.524669,-7.025487,-2.586606],[7.431002,-7.329445,6.046671],[2.474548,2.305103,-0.599073],[-3.424451,-9.724523,8.634011],[-4.991196,-3.149457,8.674473],[-7.459545,-1.673724,1.011288],[6.923633,0.524126,-1.023928],[-7.994730,0.879477,-4.343106],[-2.258227,4.102194,8.086329],[-3.271298,-7.726377,7.013948],[-4.891946,-6.553444,3.436117],[9.390471,-9.704876,-7.843051],[5.763014,7.921963,-2.109044],[-7.191162,-6.757560,8.290321],[-6.306540,-8.886488,-5.553666],[-7.287978,2.973065,7.070368],[-8.441738,4.590052,-1.742919],[7.517948,7.106608,-6.049584],[8.189150,-7.469450,1.307932],[7.003991,3.357335,-7.739399],[3.297788,-0.943408,-5.638171],[7.969844,4.495846,5.800530],[-9.950488,3.897172,3.219446],[6.669949,9.414448,3.447581],[-2.831889,-2.449219,-3.187849],[9.727919,-1.061666,-9.348273],[-2.721613,7.800317,5.878344],[1.606714,-5.146287,3.130646],[-7.418307,-7.169259,-0.370049],[-2.988968,-1.419291,-5.305792],[-4.346769,-9.397715,-5.366030],[8.561339,5.864049,-6.754653],[9.730214,-8.479469,-7.257369],[-0.106307,8.094582,-8.353414],[-3.723055,-8.063577,-5.447492],[9.210412,-2.423894,0.364742],[-3.331025,6.814278,2.542436],[-6.307608,2.994434,-5.768256],[-3.934576,7.752598,9.968274],[0.497200,-6.584447,-2.247472],[1.030551,8.372449,-8.106705],[-1.600817,5.514205,-4.784645],[0.340379,-1.898396,9.556860],[-0.887602,6.255342,7.261926],[-1.141941,-9.656138,-8.524194],[6.095372,-5.177049,-9.002990],[6.575835,0.397635,-2.862708],[8.422737,4.680071,7.351082],[3.174948,-4.783074,0.252846],[5.394417,7.060257,-8.148110],[0.570651,9.463147,0.772375],[-4.681109,-6.090585,9.937497],[5.381980,-9.114462,-4.057948],[0.646673,7.284677,-9.929042],[-6.256030,-9.905112,9.901309],[0.917228,-9.831512,-9.674985],[-0.955204,-4.428512,8.255972],[-6.995868,7.278517,7.461901],[-1.189194,9.470369,-0.186900],[-0.508825,0.085128,-3.051915],[2.995816,8.708782,-1.221240],[8.369810,-6.301067,9.155943],[-3.112820,-0.976767,-0.646464],[6.342976,3.141571,1.538169],[3.743368,-9.457664,-8.252014],[9.551595,-8.595311,-9.382026],[4.077162,-8.020844,9.174344],[5.445352,6.000618,2.806917],[7.647170,-0.304911,5.866798],[-3.906099,5.459132,-5.762276],[-5.965032,1.633972,-0.686605],[5.739945,-0.135723,-9.256213],[-1.962172,3.261431,3.847117],[1.973765,7.621328,8.064905],[9.450368,0.042670,-4.853997],[4.788303,-3.341684,-7.956756],[-8.783211,-4.238379,7.225386],[-8.951387,-2.568968,5.444563],[4.601432,-7.443950,-4.170729],[8.730305,1.856181,-8.535571],[-0.566761,-6.936162,-7.633793],[-8.288461,1.447124,9.805374],[1.212068,-9.582999,0.627490],[2.702043,-0.065304,-7.967103],[-3.680218,4.838046,-6.226004],[3.639433,8.250774,8.871530],[-5.486086,-4.660223,-2.470623],[-1.209128,7.301366,8.970141]], dtype = "float64")#candidate|1210|(770, 3)|const|float64
var_1211 = relay.var("var_1211", dtype = "float32", shape = (432,))#candidate|1211|(432,)|var|float32
call_1209 = relay.TupleGetItem(func_276_call(relay.reshape(const_1210.astype('float64'), [15, 14, 11]), relay.reshape(var_1211.astype('float32'), [432,]), ), 0)
call_1212 = relay.TupleGetItem(func_279_call(relay.reshape(const_1210.astype('float64'), [15, 14, 11]), relay.reshape(var_1211.astype('float32'), [432,]), ), 0)
var_1221 = relay.var("var_1221", dtype = "float64", shape = (770, 3))#candidate|1221|(770, 3)|var|float64
bop_1222 = relay.logical_xor(const_1210.astype('uint16'), relay.reshape(var_1221.astype('uint16'), relay.shape_of(const_1210))) # shape=(770, 3)
uop_1227 = relay.sqrt(bop_1194.astype('float64')) # shape=(12, 4, 6)
uop_1229 = relay.sqrt(bop_1197.astype('float64')) # shape=(12, 4, 6)
bop_1233 = relay.bitwise_xor(uop_1227.astype('int16'), relay.reshape(bop_1194.astype('int16'), relay.shape_of(uop_1227))) # shape=(12, 4, 6)
bop_1236 = relay.bitwise_xor(uop_1229.astype('int16'), relay.reshape(bop_1197.astype('int16'), relay.shape_of(uop_1229))) # shape=(12, 4, 6)
uop_1242 = relay.atan(uop_1227.astype('float64')) # shape=(12, 4, 6)
uop_1244 = relay.atan(uop_1229.astype('float64')) # shape=(12, 4, 6)
const_1253 = relay.const([[[-8.654500,-9.962264,1.999825,-7.867970,-7.023646,-1.999175],[8.059919,-2.149650,5.586734,9.566757,-8.073730,4.299224],[1.643476,-0.161539,-3.987333,-0.430722,4.269962,-6.121000],[8.584064,3.338607,-2.763832,-8.168215,-5.120448,-1.704988]],[[-9.472696,-1.598403,-5.066588,-5.711767,7.520302,7.794869],[-9.048354,-6.364529,-6.961279,-5.850463,-5.500855,0.525583],[3.452177,-3.677766,-2.172887,5.087705,4.256306,3.823172],[3.645312,6.432367,3.193096,-0.044584,4.239836,8.592820]],[[8.906618,8.452098,0.417910,-9.263933,9.991374,-9.973308],[-8.814778,-6.449212,1.254909,4.446731,4.602533,1.870618],[0.175980,-2.972948,6.757901,-6.361413,1.087084,-4.166497],[-3.909793,0.592200,7.240589,8.178251,8.190945,5.211797]],[[-9.874286,6.177159,-0.168423,-8.648950,-8.999860,-8.784148],[-0.180073,4.805838,-1.237479,-5.061806,-5.171946,-7.025616],[3.581855,9.874092,-1.121184,3.963100,7.562884,-1.009940],[-7.322181,5.228848,-9.520437,-8.436486,-6.101757,-5.835500]],[[7.854733,2.536385,4.961945,6.683906,-8.808597,6.715461],[-8.697337,4.909459,-1.388959,7.440220,-7.469011,9.824709],[-2.483109,2.085089,1.995165,1.619647,-3.580577,6.410699],[1.466135,-7.980613,2.363985,-3.547063,-2.403976,-3.000306]],[[0.012512,0.585670,-7.349727,-8.124408,-5.836576,-2.415353],[-6.941498,-7.908951,-1.851499,-3.289559,0.432009,8.873770],[-4.672438,-0.486951,5.912219,4.938609,-1.705393,-2.506052],[-3.282830,6.187840,-6.853550,-5.588219,2.441211,4.977559]],[[-1.147730,6.166258,-3.972922,7.507376,-3.362381,-0.117205],[-9.977927,7.304340,-0.292848,1.302619,-1.550120,-8.439725],[-6.297971,6.370016,4.051179,-4.239687,-6.159398,2.794817],[-8.521931,-2.800365,-5.216886,0.621493,-3.714705,5.437129]],[[-6.398110,6.925716,4.560439,-1.413010,6.339207,-2.847852],[-6.628839,-8.562735,-9.808652,-0.151431,-8.641921,-5.180801],[4.871524,3.263851,-6.324428,-0.338327,-4.888159,2.296874],[5.416105,3.207914,-8.626771,-9.992191,-9.272889,1.705646]],[[-3.861727,-6.704386,-0.260029,-2.879326,-9.664456,-4.732623],[-1.288361,4.441643,-2.520574,6.813707,-5.204479,-1.444933],[-0.781736,-1.528230,-3.941827,0.893161,5.431905,6.461228],[-3.386424,1.556089,-7.153787,6.067565,-5.341621,1.723088]],[[-1.231009,3.483230,7.595485,0.858999,-9.912661,2.063619],[7.630964,1.884775,-2.864532,1.310990,-1.236320,8.847199],[-7.256095,-6.412745,3.106186,0.834790,-2.419189,7.174856],[8.647600,5.286453,-3.339755,-2.831088,5.569826,-5.960786]],[[-9.234513,4.582607,-1.086052,8.536322,6.745927,3.651206],[7.712726,-3.378885,4.385758,-3.820874,-5.163840,-9.727021],[-5.495282,4.768200,1.374194,1.022353,4.715366,-0.589844],[6.189203,-6.933735,1.879855,7.991635,-5.852797,-6.642304]],[[0.404093,-4.975919,-1.367337,-9.022676,0.668194,8.755308],[1.032065,5.774119,2.121707,-4.000828,5.985759,4.875326],[2.918151,-2.453599,5.489033,1.039583,7.210768,-3.032529],[9.735928,-2.540666,-2.578118,8.802681,-9.337347,-6.315787]]], dtype = "float64")#candidate|1253|(12, 4, 6)|const|float64
bop_1254 = relay.equal(uop_1242.astype('bool'), relay.reshape(const_1253.astype('bool'), relay.shape_of(uop_1242))) # shape=(12, 4, 6)
bop_1257 = relay.equal(uop_1244.astype('bool'), relay.reshape(const_1253.astype('bool'), relay.shape_of(uop_1244))) # shape=(12, 4, 6)
output = relay.Tuple([call_1209,var_1211,bop_1222,bop_1233,bop_1254,])
output2 = relay.Tuple([call_1212,var_1211,bop_1222,bop_1236,bop_1257,])
func_1259 = relay.Function([var_1193,var_1211,var_1221,], output)
mod['func_1259'] = func_1259
mod = relay.transform.InferType()(mod)
mutated_mod['func_1259'] = func_1259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1259_call = mutated_mod.get_global_var('func_1259')
var_1261 = relay.var("var_1261", dtype = "float32", shape = (12, 4, 6))#candidate|1261|(12, 4, 6)|var|float32
var_1262 = relay.var("var_1262", dtype = "float32", shape = (432,))#candidate|1262|(432,)|var|float32
var_1263 = relay.var("var_1263", dtype = "float64", shape = (770, 3))#candidate|1263|(770, 3)|var|float64
call_1260 = func_1259_call(var_1261,var_1262,var_1263,)
output = call_1260
func_1264 = relay.Function([var_1261,var_1262,var_1263,], output)
mutated_mod['func_1264'] = func_1264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_396_call = mod.get_global_var('func_396')
func_397_call = mutated_mod.get_global_var('func_397')
call_1271 = relay.TupleGetItem(func_396_call(), 1)
call_1272 = relay.TupleGetItem(func_397_call(), 1)
uop_1273 = relay.asinh(call_1271.astype('float64')) # shape=(12, 1, 6)
uop_1275 = relay.asinh(call_1272.astype('float64')) # shape=(12, 1, 6)
func_775_call = mod.get_global_var('func_775')
func_777_call = mutated_mod.get_global_var('func_777')
call_1281 = relay.TupleGetItem(func_775_call(), 0)
call_1282 = relay.TupleGetItem(func_777_call(), 0)
output = relay.Tuple([uop_1273,call_1281,])
output2 = relay.Tuple([uop_1275,call_1282,])
func_1292 = relay.Function([], output)
mod['func_1292'] = func_1292
mod = relay.transform.InferType()(mod)
output = func_1292()
func_1293 = relay.Function([], output)
mutated_mod['func_1293'] = func_1293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_223_call = mod.get_global_var('func_223')
func_225_call = mutated_mod.get_global_var('func_225')
call_1354 = func_223_call()
call_1355 = func_223_call()
const_1358 = relay.const([[[-6,-4,-8,-3,1,-9],[-10,7,7,-1,10,9],[-4,-5,-6,-6,-4,7],[3,-6,6,7,4,-7]],[[3,1,9,-9,2,-7],[9,-3,6,-4,-10,5],[8,3,8,-2,-9,4],[-2,2,5,4,-3,-6]],[[7,-9,-10,6,-8,1],[-8,-5,-5,-4,2,-3],[-5,2,6,-8,9,1],[-2,1,-5,-6,-5,-1]],[[-1,-9,10,3,-9,-5],[4,9,1,-5,8,-2],[6,7,10,4,-2,8],[5,9,-8,-10,-8,-6]],[[-10,1,-6,-2,-3,-6],[6,8,-2,-3,-8,2],[7,-6,2,3,4,-3],[-8,-5,-3,-8,2,8]],[[10,3,-4,-2,7,-7],[4,5,5,-10,-1,6],[9,-5,-7,7,4,5],[-2,-10,-7,-2,-6,-8]],[[-4,-4,7,-1,3,7],[10,-9,-1,4,-1,6],[9,8,-4,-6,9,3],[9,2,9,4,-3,-4]],[[7,-2,2,8,-6,7],[-7,8,5,1,7,-10],[3,8,8,2,1,6],[10,5,2,-7,8,-4]],[[9,9,-7,6,2,5],[7,-5,-1,-2,-7,-6],[10,10,1,1,9,9],[8,7,-9,-9,-2,-5]],[[-5,4,3,-5,-5,10],[-10,7,-10,9,-2,-7],[-1,-5,1,7,-6,-10],[-1,3,1,-4,-6,-10]],[[9,-4,6,-2,-8,-1],[9,-4,9,6,-10,-7],[-2,-10,4,-5,-1,-4],[4,5,2,-10,-4,-6]],[[10,-4,-10,-1,-2,1],[3,8,8,-3,9,4],[-6,2,1,-4,1,3],[-8,4,-7,5,2,6]]], dtype = "int64")#candidate|1358|(12, 4, 6)|const|int64
bop_1359 = relay.logical_or(call_1354.astype('bool'), const_1358.astype('bool')) # shape=(12, 4, 6)
bop_1362 = relay.logical_or(call_1355.astype('bool'), const_1358.astype('bool')) # shape=(12, 4, 6)
uop_1363 = relay.erf(const_1358.astype('float32')) # shape=(12, 4, 6)
uop_1372 = relay.asinh(uop_1363.astype('float64')) # shape=(12, 4, 6)
func_298_call = mod.get_global_var('func_298')
func_299_call = mutated_mod.get_global_var('func_299')
call_1382 = relay.TupleGetItem(func_298_call(), 0)
call_1383 = relay.TupleGetItem(func_299_call(), 0)
func_1107_call = mod.get_global_var('func_1107')
func_1110_call = mutated_mod.get_global_var('func_1110')
call_1384 = relay.TupleGetItem(func_1107_call(relay.reshape(uop_1372.astype('int64'), [12, 4, 6])), 0)
call_1385 = relay.TupleGetItem(func_1110_call(relay.reshape(uop_1372.astype('int64'), [12, 4, 6])), 0)
output = relay.Tuple([bop_1359,uop_1372,call_1382,call_1384,])
output2 = relay.Tuple([bop_1362,uop_1372,call_1383,call_1385,])
func_1392 = relay.Function([], output)
mod['func_1392'] = func_1392
mod = relay.transform.InferType()(mod)
output = func_1392()
func_1393 = relay.Function([], output)
mutated_mod['func_1393'] = func_1393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1292_call = mod.get_global_var('func_1292')
func_1293_call = mutated_mod.get_global_var('func_1293')
call_1426 = relay.TupleGetItem(func_1292_call(), 0)
call_1427 = relay.TupleGetItem(func_1293_call(), 0)
func_159_call = mod.get_global_var('func_159')
func_163_call = mutated_mod.get_global_var('func_163')
const_1429 = relay.const([8,-1,7,10,-1,2,-9,10,-9,-9,-3,4,-9,-8,-3,-7,1,5,2,-4,4,-8,6,-4,-7,7,-3,9,-5,10,-9,3,5,-8,3,-1,9,-9,-9,4,-5,-5,4,-2,-2,9,7,3,-9,-8,4,-1,-9,2,3,-4,-6,9,-3,-1,1,-8,3,2,-4,-6,10,-5,-8,-6,2,-9,9,10,-9,8,-2,-8,-10,9,-1,-2,2,9,-4,-1,5,5,-10,-7,-8,8,-3,-7,9,7,-10,-2,-6,-4,-7,7,9,-7,8,9,-1,8,-7,9,10,9,-4,-4,-1,-3,5,10,1,-4,-1,5,-4,-6,-7,-9,8,6,-7,6,-1,6,-6,-2,2,-8,-1,-5,-7,5,3,-10,2,-6,-8,-8,-9,7,-1,-6,6,-5,8,-3,-10,-8,4,7,6,6,-6,-5,7,2,-10,10,-2,-5,7,-7,8,-2,-5,-10,-2,7,9,3,-3,-3,-3,8,-1,8,-3,-7,-10,5,7,6,-10,-7,4,-6,-5,9,3,5,-2,-2,-8,6,-7,3,6,3,-4,-6,10,-5,-10,-5,4,5,-3,-1,-5,8,7,3,-1,-1,9,-5,-9,4,-7,-2,-8,-6,-5,9,3,-1,-9,6,-3,6,6,8,4,-9,-2,-1,-10,-9,-4,-7,8,-9,-2,-6,4,4,-3,-9,6,-5,9,-9,5,-5,8,7,-8,2,1,-3,-10,-5,1,8,-2,-8,-1,9,4,-8,-4,8,-1,-1,8,5,3,9], dtype = "uint8")#candidate|1429|(286,)|const|uint8
var_1430 = relay.var("var_1430", dtype = "float32", shape = (432,))#candidate|1430|(432,)|var|float32
call_1428 = relay.TupleGetItem(func_159_call(relay.reshape(const_1429.astype('uint8'), [13, 11, 2]), relay.reshape(var_1430.astype('float32'), [1, 432]), ), 0)
call_1431 = relay.TupleGetItem(func_163_call(relay.reshape(const_1429.astype('uint8'), [13, 11, 2]), relay.reshape(var_1430.astype('float32'), [1, 432]), ), 0)
func_1107_call = mod.get_global_var('func_1107')
func_1110_call = mutated_mod.get_global_var('func_1110')
const_1449 = relay.const([5,9,6,-4,10,10,7,-4,-8,6,6,7,6,-9,1,10,8,1,1,-1,-1,5,-2,8,-9,-7,6,3,9,-3,-2,6,2,7,3,6,-8,3,-10,-9,-5,6,-2,5,2,4,1,-7,-9,6,-10,-7,5,-8,1,6,6,9,-2,3,-2,-10,-9,6,9,10,-6,10,9,8,7,-7,-7,-3,1,-3,-5,8,9,-1,-7,8,8,-7,-7,-6,-9,9,1,7,10,-7,-4,-8,-10,-1,-10,2,-8,4,2,-10,-4,8,-3,-7,4,7,-10,1,3,-9,-1,-10,10,4,5,6,3,5,9,-8,-8,1,1,2,-1,5,-3,-1,-9,8,7,5,8,-7,-2,9,3,9,-1,-5,1,-4,-7,9,10,-1,-1,-8,-6,3,-3,9,-2,7,9,-6,6,-7,7,-10,-5,-3,-7,3,-9,1,-7,-7,9,2,9,-8,-10,-7,-3,1,8,-4,8,-8,2,-8,-10,-9,8,-4,-1,-2,-1,7,6,4,3,-10,-3,-5,-8,5,-7,-6,8,-4,4,10,-6,1,-5,7,1,9,6,9,9,3,-8,5,-10,-7,-6,2,-3,6,-8,-8,-2,2,-4,-5,5,-3,8,-1,8,5,-4,-7,-1,-9,-8,7,7,-2,-8,-6,-7,-6,-6,5,4,7,6,8,-7,-6,5,8,1,-3,-7,4,7,-10,6,8,-5,1,-10,-1,-6,-3,10,-3,1,2,4,-3,5,-7,-9,4,-1,-5,5,-8,-3,-4], dtype = "int64")#candidate|1449|(288,)|const|int64
call_1448 = relay.TupleGetItem(func_1107_call(relay.reshape(const_1449.astype('int64'), [12, 4, 6])), 0)
call_1450 = relay.TupleGetItem(func_1110_call(relay.reshape(const_1449.astype('int64'), [12, 4, 6])), 0)
output = relay.Tuple([call_1426,call_1428,const_1429,var_1430,call_1448,const_1449,])
output2 = relay.Tuple([call_1427,call_1431,const_1429,var_1430,call_1450,const_1449,])
func_1452 = relay.Function([var_1430,], output)
mod['func_1452'] = func_1452
mod = relay.transform.InferType()(mod)
mutated_mod['func_1452'] = func_1452
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1453 = relay.var("var_1453", dtype = "float32", shape = (432,))#candidate|1453|(432,)|var|float32
func_1452_call = mutated_mod.get_global_var('func_1452')
call_1454 = func_1452_call(var_1453)
output = call_1454
func_1455 = relay.Function([var_1453], output)
mutated_mod['func_1455'] = func_1455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_396_call = mod.get_global_var('func_396')
func_397_call = mutated_mod.get_global_var('func_397')
call_1462 = relay.TupleGetItem(func_396_call(), 2)
call_1463 = relay.TupleGetItem(func_397_call(), 2)
func_1259_call = mod.get_global_var('func_1259')
func_1264_call = mutated_mod.get_global_var('func_1264')
const_1476 = relay.const([[3.294515,-4.477160,-9.848000,-0.885259,-1.535530,9.239486,0.595716,-6.206588,-7.340928,7.810282,6.456227,9.110145],[-0.876715,-6.869081,-2.626587,-2.533559,9.319589,1.143842,-6.740088,-6.919498,-7.460423,-9.043312,4.833341,4.578698],[2.113981,8.673556,1.023671,1.313177,6.611201,-9.040741,0.223440,-9.267377,-2.131143,-5.933113,1.257280,8.700074],[9.816584,-3.839690,-6.244383,-9.388548,-5.476675,-1.507017,-2.935121,-4.640691,5.663522,4.449932,7.248209,7.426876],[-5.099506,-2.448350,1.663783,8.872882,-5.643710,1.038687,-7.926837,-6.669594,3.339648,-6.325777,-1.748978,3.202616],[6.779260,-7.778470,-7.822483,-3.952601,5.112784,7.070333,-6.533628,7.487096,-2.741455,2.204367,-8.715690,7.995703],[8.912723,7.416302,-8.982173,1.057019,-5.113303,7.171752,-2.141424,2.389295,-9.618981,-4.518887,2.973878,7.408240],[-5.832828,-4.963195,-6.840253,-8.885409,8.347179,7.521227,-9.135225,-6.129326,-5.064153,-8.798313,8.149959,3.885606],[-1.300413,0.229461,5.245020,3.474615,6.865832,2.561032,4.928710,3.158760,7.931996,2.329159,-7.929293,-2.443482],[7.439488,9.544956,-0.859704,-6.183658,-8.946904,5.672671,8.568006,9.121022,-4.792155,-9.880412,-5.827006,8.006711],[7.638750,1.501604,-1.672304,-6.894867,-2.819315,-7.045278,-4.918351,9.673151,-3.714533,6.206526,2.688388,6.268461],[1.659759,-3.845117,9.855269,1.613098,-5.142306,-6.251995,3.578016,-7.368457,-9.047801,-6.824528,8.984129,5.879153],[-1.063747,2.842754,5.085730,-3.083402,3.850998,-8.012945,-0.774269,8.765965,5.403437,6.483138,-4.409833,-0.038731],[-3.973666,-7.148427,2.616903,-6.159938,-3.997993,7.729804,-5.261635,-1.436617,-4.299201,-0.441136,-8.779616,8.158752],[-7.842345,-1.180859,-9.690642,8.375606,-6.882296,0.840467,-3.225310,9.092035,2.236918,-6.010603,-7.889985,5.206409],[-4.884525,9.459264,2.418356,-2.461653,2.987834,6.603224,2.173866,5.222242,-7.848493,1.298299,-1.196431,8.568055],[-8.612284,4.008819,-1.606770,4.205510,-7.148891,9.340391,-5.358011,6.132739,3.613435,1.267163,-1.278426,-8.215986],[8.412374,5.909096,-6.716249,-0.874451,-5.675117,-8.148775,-1.672792,1.822183,-5.396408,8.040593,-5.639701,2.347798],[3.645210,6.560246,0.427447,-3.890382,9.931577,-7.407888,-4.401392,-9.908569,-4.155890,3.008558,2.886856,8.820563],[5.387617,-7.200800,-8.248127,1.621223,-8.528476,1.380586,-2.461529,0.451219,8.055962,-9.635288,-9.930010,-7.639048],[5.015462,7.030505,6.137521,-5.993375,2.268136,-3.451017,-2.342266,7.708110,-3.081714,-2.987295,-5.297487,2.937506],[4.558240,3.081812,-6.892790,-7.079149,3.971658,-4.665593,3.871182,-4.986443,1.407686,-1.399719,-0.677152,4.466139],[-7.334881,-4.645357,9.342407,-0.330903,7.905078,-6.166903,7.651459,7.618330,-4.884370,9.044418,-8.417402,9.226025],[5.683474,-3.440354,6.713607,-4.889758,5.681570,2.038511,-1.001422,-9.960935,5.682968,-1.163259,6.937916,-0.557127]], dtype = "float32")#candidate|1476|(24, 12)|const|float32
const_1477 = relay.const([4.386524,-1.253810,-5.586680,-6.442225,-5.315292,0.593141,8.521010,-9.862222,-0.687114,9.751136,5.519517,4.348609,4.995279,-8.303845,8.152688,4.763647,-1.244644,0.882308,-8.185360,5.008312,8.681083,-1.143989,7.714602,-6.061955,9.039463,7.912253,8.846882,-8.480635,-2.603499,-4.953541,-9.026291,-4.959765,0.746317,-4.132163,-8.972644,-1.440144,-5.480430,-2.982152,4.197754,-8.504708,6.396339,4.421033,-7.400327,8.260591,-0.739572,-6.237609,7.074172,-8.477499,6.740675,-9.546505,-1.568198,7.760798,-9.855330,-6.031196,-2.271699,-6.519010,-9.952649,8.225423,8.181798,-8.560757,-3.509907,5.618061,7.087607,-5.201976,-6.607811,-1.749718,6.740029,0.219439,-0.498367,7.308813,-2.080212,-8.103588,4.632063,1.890610,-3.390880,-6.692704,8.644228,3.297845,3.858960,4.498678,-8.956350,-6.174266,1.455320,6.950795,2.720048,-5.201086,6.693465,4.735585,-7.876950,3.920273,-2.794657,3.213206,3.213810,-4.224658,-3.185323,-7.773630,-0.837690,-6.783588,6.195217,9.604461,-2.252512,-9.302248,-6.250877,-8.016313,0.403329,2.274805,-4.401187,1.240968,1.390498,-6.022915,0.601420,3.180556,-3.651733,9.781663,7.182527,-8.908982,-4.600978,7.315946,-9.887117,-1.446466,-0.847597,9.741869,-4.347352,-3.803233,8.528748,-3.854215,-3.763737,-8.904033,3.088975,-3.250803,-7.297163,4.029716,3.379258,2.682419,-3.797067,5.635711,8.400336,5.367982,1.295222,-5.761057,1.510924,4.169009,-5.296828,-7.878278,0.960517,-2.411831,3.283708,5.969340,1.224732,5.123945,-7.174404,-8.420370,3.864641,3.473187,8.901011,0.962637,-7.285616,-0.978381,-3.391896,3.349879,1.379996,5.132579,2.595814,-0.706230,4.615881,-1.763488,-0.612222,-1.582158,7.424642,1.114369,7.141586,8.459766,8.909521,-5.891882,-0.359277,-8.590254,6.706187,-3.209906,-5.756047,9.988923,-9.767158,5.534666,-4.932793,5.022220,0.184324,3.709350,9.342970,5.167736,-2.687292,1.729177,0.432910,5.584265,9.646829,9.562074,-6.500877,-5.451157,-0.957182,5.595457,6.871777,-0.649967,4.992757,1.994396,-3.105845,-7.397258,-1.206160,1.406406,3.448383,-5.699568,1.529944,-5.151180,3.831054,-6.504922,-9.139846,-1.340194,-5.349186,-6.214902,-4.876804,9.448784,-1.100379,-4.273868,8.826653,-3.540284,-1.764277,0.847027,-9.535997,2.336702,-5.789329,-1.228814,7.095652,-1.863832,7.292848,-5.697960,-0.584684,5.969684,6.240927,1.985618,5.021715,1.265593,5.258135,6.946996,-2.310167,0.644427,1.843193,3.786266,-3.903974,-6.012671,-1.578669,-6.001005,-3.759466,-2.285912,0.930333,-4.534200,6.750810,-1.654337,9.616765,2.095445,-4.996765,-7.322305,-8.668963,-8.931996,-1.884022,-2.056020,4.879776,6.227316,-4.703805,8.037465,-3.077453,4.680253,6.500703,-9.213850,3.370456,-5.663269,-5.862983,1.789670,-5.502606,9.066977,9.411121,-0.607769,-3.425752,-8.805903,2.406703,-5.812537,-8.970294,0.675262,7.822905,-2.970462,7.463126,-7.347074,0.997468,-2.371744,-9.171527,-3.955739,-0.264901,-3.000636,5.579884,3.661691,3.838067,-0.876403,8.900602,7.261429,5.760726,-1.270123,5.252138,-2.491039,-5.345499,-6.526100,-9.125912,-4.303430,3.933692,-4.371848,-3.475640,2.551259,8.881441,3.184419,-1.009229,-2.775045,-3.496751,-5.232831,6.222291,-2.578250,-5.906890,-1.861356,-1.321629,2.633523,-0.962060,-4.530182,5.383248,-6.078657,1.127260,-4.850649,-8.146465,1.144448,2.564580,-5.549959,-0.162239,-8.497241,-5.235265,9.800521,-0.423386,-9.812285,-6.160340,8.808474,2.287503,8.576453,8.459833,-4.485366,-2.476017,-7.696479,4.561023,-4.418591,6.891565,-1.509717,-6.858949,-4.753020,-0.110461,3.642058,9.181900,3.486810,-9.158188,0.088965,-1.139939,2.884043,1.355333,-8.523650,7.416328,-8.339664,1.051217,-6.952156,8.935454,-0.671036,6.506072,-0.392173,-3.106770,2.384916,-5.791651,-8.627121,-5.757186,1.778311,5.208097,8.954640,5.998736,-0.224949,-0.622755,-0.172030,6.234502,-7.589598,-4.537421,-1.947636,-0.222492,7.229210,-8.326178,7.531000,3.542477,1.337225,-6.317928,3.088111,-8.729077,-0.656207,-3.690931,-2.701810,-8.739439,1.942419,-7.288633,8.991013,4.454180,5.988967,7.740035,1.581461,-3.591242,9.399668,4.605885,-7.746464,-5.953803,-5.724956,8.072670,7.975157,7.529568,-6.717806,-8.917774,-4.008515,-7.099546,9.690964,-5.603911,-2.805317,7.538084,2.838225,6.150032,9.581861,1.929784,-5.788880,-0.050312,-3.004187], dtype = "float32")#candidate|1477|(432,)|const|float32
call_1475 = relay.TupleGetItem(func_1259_call(relay.reshape(const_1476.astype('float32'), [12, 4, 6]), relay.reshape(const_1477.astype('float32'), [432,]), relay.reshape(call_1462.astype('float64'), [770, 3]), ), 0)
call_1478 = relay.TupleGetItem(func_1264_call(relay.reshape(const_1476.astype('float32'), [12, 4, 6]), relay.reshape(const_1477.astype('float32'), [432,]), relay.reshape(call_1462.astype('float64'), [770, 3]), ), 0)
func_746_call = mod.get_global_var('func_746')
func_747_call = mutated_mod.get_global_var('func_747')
call_1479 = relay.TupleGetItem(func_746_call(), 0)
call_1480 = relay.TupleGetItem(func_747_call(), 0)
func_657_call = mod.get_global_var('func_657')
func_660_call = mutated_mod.get_global_var('func_660')
var_1484 = relay.var("var_1484", dtype = "uint32", shape = ())#candidate|1484|()|var|uint32
var_1485 = relay.var("var_1485", dtype = "uint32", shape = (560,))#candidate|1485|(560,)|var|uint32
call_1483 = func_657_call(relay.reshape(var_1484.astype('uint32'), []), relay.reshape(var_1485.astype('uint32'), [4, 10, 14]), )
call_1486 = func_657_call(relay.reshape(var_1484.astype('uint32'), []), relay.reshape(var_1485.astype('uint32'), [4, 10, 14]), )
output = relay.Tuple([call_1462,call_1475,const_1476,const_1477,call_1479,call_1483,var_1484,var_1485,])
output2 = relay.Tuple([call_1463,call_1478,const_1476,const_1477,call_1480,call_1486,var_1484,var_1485,])
func_1491 = relay.Function([var_1484,var_1485,], output)
mod['func_1491'] = func_1491
mod = relay.transform.InferType()(mod)
var_1492 = relay.var("var_1492", dtype = "uint32", shape = ())#candidate|1492|()|var|uint32
var_1493 = relay.var("var_1493", dtype = "uint32", shape = (560,))#candidate|1493|(560,)|var|uint32
output = func_1491(var_1492,var_1493,)
func_1494 = relay.Function([var_1492,var_1493,], output)
mutated_mod['func_1494'] = func_1494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_396_call = mod.get_global_var('func_396')
func_397_call = mutated_mod.get_global_var('func_397')
call_1525 = relay.TupleGetItem(func_396_call(), 4)
call_1526 = relay.TupleGetItem(func_397_call(), 4)
func_276_call = mod.get_global_var('func_276')
func_279_call = mutated_mod.get_global_var('func_279')
var_1539 = relay.var("var_1539", dtype = "float64", shape = (2310,))#candidate|1539|(2310,)|var|float64
call_1538 = relay.TupleGetItem(func_276_call(relay.reshape(var_1539.astype('float64'), [15, 14, 11]), relay.reshape(call_1525.astype('float32'), [432,]), ), 2)
call_1540 = relay.TupleGetItem(func_279_call(relay.reshape(var_1539.astype('float64'), [15, 14, 11]), relay.reshape(call_1525.astype('float32'), [432,]), ), 2)
output = relay.Tuple([call_1525,call_1538,var_1539,])
output2 = relay.Tuple([call_1526,call_1540,var_1539,])
func_1543 = relay.Function([var_1539,], output)
mod['func_1543'] = func_1543
mod = relay.transform.InferType()(mod)
mutated_mod['func_1543'] = func_1543
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1544 = relay.var("var_1544", dtype = "float64", shape = (2310,))#candidate|1544|(2310,)|var|float64
func_1543_call = mutated_mod.get_global_var('func_1543')
call_1545 = func_1543_call(var_1544)
output = call_1545
func_1546 = relay.Function([var_1544], output)
mutated_mod['func_1546'] = func_1546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_396_call = mod.get_global_var('func_396')
func_397_call = mutated_mod.get_global_var('func_397')
call_1630 = relay.TupleGetItem(func_396_call(), 2)
call_1631 = relay.TupleGetItem(func_397_call(), 2)
func_537_call = mod.get_global_var('func_537')
func_538_call = mutated_mod.get_global_var('func_538')
call_1638 = relay.TupleGetItem(func_537_call(), 0)
call_1639 = relay.TupleGetItem(func_538_call(), 0)
uop_1673 = relay.cos(call_1638.astype('float64')) # shape=(12, 1, 6)
uop_1675 = relay.cos(call_1639.astype('float64')) # shape=(12, 1, 6)
output = relay.Tuple([call_1630,uop_1673,])
output2 = relay.Tuple([call_1631,uop_1675,])
func_1684 = relay.Function([], output)
mod['func_1684'] = func_1684
mod = relay.transform.InferType()(mod)
output = func_1684()
func_1685 = relay.Function([], output)
mutated_mod['func_1685'] = func_1685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_777_call = mutated_mod.get_global_var('func_777')
call_1827 = relay.TupleGetItem(func_775_call(), 0)
call_1828 = relay.TupleGetItem(func_777_call(), 0)
func_1684_call = mod.get_global_var('func_1684')
func_1685_call = mutated_mod.get_global_var('func_1685')
call_1829 = relay.TupleGetItem(func_1684_call(), 1)
call_1830 = relay.TupleGetItem(func_1685_call(), 1)
output = relay.Tuple([call_1827,call_1829,])
output2 = relay.Tuple([call_1828,call_1830,])
func_1833 = relay.Function([], output)
mod['func_1833'] = func_1833
mod = relay.transform.InferType()(mod)
output = func_1833()
func_1834 = relay.Function([], output)
mutated_mod['func_1834'] = func_1834
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1872 = relay.var("var_1872", dtype = "float64", shape = (9, 5, 2))#candidate|1872|(9, 5, 2)|var|float64
uop_1873 = relay.exp(var_1872.astype('float64')) # shape=(9, 5, 2)
uop_1881 = relay.atan(var_1872.astype('float32')) # shape=(9, 5, 2)
output = relay.Tuple([uop_1873,uop_1881,])
output2 = relay.Tuple([uop_1873,uop_1881,])
func_1884 = relay.Function([var_1872,], output)
mod['func_1884'] = func_1884
mod = relay.transform.InferType()(mod)
mutated_mod['func_1884'] = func_1884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1885 = relay.var("var_1885", dtype = "float64", shape = (9, 5, 2))#candidate|1885|(9, 5, 2)|var|float64
func_1884_call = mutated_mod.get_global_var('func_1884')
call_1886 = func_1884_call(var_1885)
output = call_1886
func_1887 = relay.Function([var_1885], output)
mutated_mod['func_1887'] = func_1887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_537_call = mod.get_global_var('func_537')
func_538_call = mutated_mod.get_global_var('func_538')
call_1954 = relay.TupleGetItem(func_537_call(), 0)
call_1955 = relay.TupleGetItem(func_538_call(), 0)
func_871_call = mod.get_global_var('func_871')
func_874_call = mutated_mod.get_global_var('func_874')
var_1976 = relay.var("var_1976", dtype = "int8", shape = (150, 2))#candidate|1976|(150, 2)|var|int8
call_1975 = relay.TupleGetItem(func_871_call(relay.reshape(var_1976.astype('int8'), [12, 5, 5]), relay.reshape(var_1976.astype('int8'), [12, 5, 5]), ), 0)
call_1977 = relay.TupleGetItem(func_874_call(relay.reshape(var_1976.astype('int8'), [12, 5, 5]), relay.reshape(var_1976.astype('int8'), [12, 5, 5]), ), 0)
func_1833_call = mod.get_global_var('func_1833')
func_1834_call = mutated_mod.get_global_var('func_1834')
call_1979 = relay.TupleGetItem(func_1833_call(), 1)
call_1980 = relay.TupleGetItem(func_1834_call(), 1)
const_1992 = relay.const([[[-9.034993,-5.556088,0.874983,9.687875,0.871707,-1.235990],[-2.993333,5.496042,4.816042,9.822386,-1.245444,3.546724],[-1.828568,-6.445871,2.867030,-8.981404,-3.502076,5.902593],[3.498467,5.811604,-3.453245,-3.585569,5.601420,-8.849252],[-0.608860,6.754548,8.360868,7.213761,1.927992,-1.752562],[8.767367,0.016651,6.373232,-0.864335,9.855426,-7.225877],[1.085014,5.537707,-6.728110,1.148976,3.448038,3.071357],[1.958297,-2.078047,3.185402,3.168139,5.533482,-9.171757]],[[1.209854,0.296469,0.397259,7.814471,-5.012019,5.430444],[-9.894852,1.632432,4.374352,-1.553585,4.934022,8.610001],[-0.070492,-1.228881,8.717304,-7.933472,8.171028,-2.689501],[8.188608,3.327262,-0.691503,-3.862134,7.352520,-6.011291],[8.957097,1.162399,6.616863,1.916079,-4.050696,-6.148329],[-9.537281,-3.976149,-9.700864,-1.422896,-6.160344,-7.374898],[-6.790795,8.614891,-6.114188,-2.705167,3.174608,2.407273],[6.636323,-9.920557,-2.667803,4.729082,8.387140,-9.279733]],[[-1.851032,-9.675013,-8.718302,7.639967,3.357411,-2.733765],[-2.885945,5.132776,-9.293539,1.168452,7.807942,2.534622],[-1.681941,6.328352,1.321560,8.137602,-2.652541,-2.471695],[-6.933880,-3.675399,9.381193,-3.447820,0.670470,1.822363],[-6.244848,0.639933,-5.960215,6.695142,-3.961192,-5.531095],[-7.451534,3.637678,8.119538,3.698601,-9.971170,-1.346995],[-3.527317,6.158486,-6.119749,4.719132,9.885301,5.925591],[-4.254618,-8.267284,5.860230,-0.323068,3.875426,-9.153308]],[[6.624730,-8.419643,4.620972,2.469102,0.736537,-9.809033],[5.659088,-9.811076,-6.035347,-7.574917,-8.645244,5.969564],[-3.946127,9.290535,-8.892352,-4.052967,4.428551,7.539002],[5.789983,-7.019892,0.805572,0.712176,0.679533,-6.196036],[2.299301,-3.125101,3.788289,1.924651,3.292510,1.502589],[-6.863282,5.889639,8.054924,5.909548,-7.487547,9.811305],[-2.943007,-0.755070,1.331285,7.259437,-4.370666,-2.226597],[-8.224985,4.410433,1.361877,5.803111,-8.466426,1.338004]],[[9.822751,5.666008,2.016112,5.652384,7.728177,3.535088],[-5.859972,6.337191,-8.141467,4.070839,1.816079,-5.209867],[9.272262,-7.736040,-1.000381,9.297252,-0.310582,4.873990],[-6.801757,9.422993,5.702745,-1.291125,-9.149774,-2.630095],[3.149229,7.603465,-7.099920,0.339368,7.911664,2.428602],[-7.376196,2.598293,5.448435,-1.752040,8.612422,8.396937],[-6.536985,9.195606,5.649974,7.497066,9.927307,2.615935],[-1.517336,1.046145,8.898637,3.311747,-4.886271,-2.988103]],[[-7.365464,2.533439,1.791465,-2.746321,-8.073937,-8.354306],[9.221068,-1.868303,-1.510099,-6.065653,9.309577,-7.031547],[-2.441320,-6.431294,-8.457525,6.495142,3.791827,-5.857571],[3.229240,-0.322022,-8.507763,-4.018569,-1.661683,-3.149696],[-2.849357,2.086774,1.372768,-2.980386,2.238068,-9.557495],[-2.701925,-7.802160,-8.074998,-7.650494,6.409863,4.394521],[9.335374,7.817621,-3.964912,-1.877230,-2.048176,-1.827204],[5.432605,-0.116015,1.331515,-2.739414,-3.339718,7.094969]],[[9.495008,-9.265333,-9.513748,9.227850,4.287706,4.109822],[-4.342269,9.513965,3.702165,-2.001875,-2.280653,-7.006103],[8.077637,2.328304,1.899605,-2.752756,-5.276355,-9.384801],[-4.572596,-1.274190,-1.636746,-8.921124,7.838499,-6.257557],[6.676351,7.806533,6.934288,-3.527733,-0.532024,-8.958393],[-3.843613,4.758170,7.920291,-4.131248,4.108473,-6.676837],[-0.742444,-2.771624,-7.665612,0.214703,-6.092759,8.728498],[-1.383021,-4.671180,-3.796977,-3.065936,-1.701597,7.254104]],[[7.845741,7.217020,3.815636,2.451174,-6.830616,1.783854],[-0.332141,3.722844,-7.898181,-0.919065,-6.861355,0.339940],[2.214753,1.701653,7.597699,3.733077,-4.470074,8.552040],[-3.626752,-9.128077,0.512867,9.456966,-3.342847,-3.161260],[-6.859447,0.658602,8.611538,0.386306,-0.126848,-9.188426],[7.293042,4.760339,4.528630,5.525616,8.777981,-2.389882],[-6.710241,-8.783484,-4.643890,2.467669,2.477505,9.412588],[5.245401,1.357386,-1.923422,-7.795124,9.818548,2.525877]],[[-3.785770,3.620664,-3.649195,-1.552175,9.821427,4.513284],[8.448299,-4.992743,3.464388,-6.453344,-6.935508,3.999678],[4.094537,5.915702,1.664859,5.309668,2.323728,5.843164],[5.590862,-9.030609,-2.627165,-9.199347,-1.880860,-3.796104],[1.093636,3.920164,-0.357204,-6.711293,-0.651334,-7.775807],[-5.420112,3.585123,-6.893865,-0.620383,3.414322,4.142849],[-4.886826,1.573429,-7.958736,8.081565,-9.129654,-1.638246],[6.061352,5.071438,-9.736585,5.805322,4.402368,-9.694353]],[[6.957811,3.848293,-4.783020,-9.902172,5.046803,3.426004],[5.605059,1.841060,7.219090,-1.254116,-4.590911,-1.769128],[3.235578,4.698626,4.018773,5.194167,-3.725907,4.914297],[9.791350,-3.667681,3.118466,-6.900787,-4.828597,1.288632],[0.982825,-3.106665,2.179995,-5.040061,-4.710072,0.126420],[-0.222092,-1.253268,-6.700025,3.890403,4.340009,-2.545128],[2.600859,9.202116,-8.615281,-8.149401,-9.092444,7.683459],[1.721033,-6.609381,2.581038,9.990743,-0.600089,5.306208]],[[2.732873,-6.852590,-7.081546,-5.654128,-0.937077,6.590814],[-9.577763,-9.177878,-5.833108,-6.543214,-0.231515,2.407521],[-7.729216,7.297342,-7.096214,2.590606,1.425536,-0.557930],[-3.626625,1.341053,-3.449709,7.319145,-9.662080,2.820099],[7.060199,7.630091,-7.589775,-8.430856,0.621028,-5.379570],[-4.584902,-9.042260,0.224086,4.950506,8.308211,-9.577803],[2.806243,-6.435266,-7.047257,-4.098276,2.872625,6.600198],[-6.390406,-3.323649,4.112275,5.774461,4.478422,3.005713]],[[-3.330702,-7.677030,3.883610,8.478806,2.401804,6.830919],[0.208404,4.526063,1.142292,-3.368736,-6.027064,3.309203],[7.397906,8.044095,-9.981855,-0.595096,5.071017,-1.789057],[3.291464,0.570542,0.888234,-9.094492,-6.331095,2.833891],[-1.637682,1.961903,2.613101,-0.868212,3.656801,7.938950],[-2.939567,-2.340887,-1.129062,1.703107,-7.277448,-3.561290],[1.139773,-3.005237,1.022458,9.877854,-0.796735,-2.151335],[1.851741,-7.323371,5.566833,9.541523,5.105379,3.668273]]], dtype = "float64")#candidate|1992|(12, 8, 6)|const|float64
bop_1993 = relay.bitwise_xor(call_1979.astype('int64'), const_1992.astype('int64')) # shape=(12, 8, 6)
bop_1996 = relay.bitwise_xor(call_1980.astype('int64'), const_1992.astype('int64')) # shape=(12, 8, 6)
bop_2000 = relay.bitwise_and(var_1976.astype('uint64'), relay.reshape(call_1975.astype('uint64'), relay.shape_of(var_1976))) # shape=(150, 2)
bop_2003 = relay.bitwise_and(var_1976.astype('uint64'), relay.reshape(call_1977.astype('uint64'), relay.shape_of(var_1976))) # shape=(150, 2)
output = relay.Tuple([call_1954,bop_1993,bop_2000,])
output2 = relay.Tuple([call_1955,bop_1996,bop_2003,])
func_2009 = relay.Function([var_1976,], output)
mod['func_2009'] = func_2009
mod = relay.transform.InferType()(mod)
var_2010 = relay.var("var_2010", dtype = "int8", shape = (150, 2))#candidate|2010|(150, 2)|var|int8
output = func_2009(var_2010)
func_2011 = relay.Function([var_2010], output)
mutated_mod['func_2011'] = func_2011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_396_call = mod.get_global_var('func_396')
func_397_call = mutated_mod.get_global_var('func_397')
call_2016 = relay.TupleGetItem(func_396_call(), 2)
call_2017 = relay.TupleGetItem(func_397_call(), 2)
output = relay.Tuple([call_2016,])
output2 = relay.Tuple([call_2017,])
func_2022 = relay.Function([], output)
mod['func_2022'] = func_2022
mod = relay.transform.InferType()(mod)
mutated_mod['func_2022'] = func_2022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2022_call = mutated_mod.get_global_var('func_2022')
call_2023 = func_2022_call()
output = call_2023
func_2024 = relay.Function([], output)
mutated_mod['func_2024'] = func_2024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_746_call = mod.get_global_var('func_746')
func_747_call = mutated_mod.get_global_var('func_747')
call_2057 = relay.TupleGetItem(func_746_call(), 1)
call_2058 = relay.TupleGetItem(func_747_call(), 1)
output = relay.Tuple([call_2057,])
output2 = relay.Tuple([call_2058,])
func_2076 = relay.Function([], output)
mod['func_2076'] = func_2076
mod = relay.transform.InferType()(mod)
mutated_mod['func_2076'] = func_2076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2076_call = mutated_mod.get_global_var('func_2076')
call_2077 = func_2076_call()
output = call_2077
func_2078 = relay.Function([], output)
mutated_mod['func_2078'] = func_2078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mod.get_global_var('func_1041')
func_1043_call = mutated_mod.get_global_var('func_1043')
call_2082 = func_1041_call()
call_2083 = func_1041_call()
func_1292_call = mod.get_global_var('func_1292')
func_1293_call = mutated_mod.get_global_var('func_1293')
call_2098 = relay.TupleGetItem(func_1292_call(), 1)
call_2099 = relay.TupleGetItem(func_1293_call(), 1)
func_1107_call = mod.get_global_var('func_1107')
func_1110_call = mutated_mod.get_global_var('func_1110')
call_2100 = relay.TupleGetItem(func_1107_call(relay.reshape(call_2098.astype('int64'), [12, 4, 6])), 0)
call_2101 = relay.TupleGetItem(func_1110_call(relay.reshape(call_2098.astype('int64'), [12, 4, 6])), 0)
output = relay.Tuple([call_2082,call_2098,call_2100,])
output2 = relay.Tuple([call_2083,call_2099,call_2101,])
func_2104 = relay.Function([], output)
mod['func_2104'] = func_2104
mod = relay.transform.InferType()(mod)
output = func_2104()
func_2105 = relay.Function([], output)
mutated_mod['func_2105'] = func_2105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1292_call = mod.get_global_var('func_1292')
func_1293_call = mutated_mod.get_global_var('func_1293')
call_2114 = relay.TupleGetItem(func_1292_call(), 0)
call_2115 = relay.TupleGetItem(func_1293_call(), 0)
const_2123 = relay.const([[[-8.722115,9.375971,2.857472,5.720370,8.581047,-3.298204],[8.674299,7.397062,5.048415,-3.125862,0.781833,6.741599],[-6.438605,2.612217,3.047163,-8.159391,-4.948994,6.936821],[9.726098,0.198118,3.968223,6.646259,7.414353,0.010618],[-4.537363,3.734771,-7.138001,-9.436902,-2.102054,5.749735],[-5.335601,2.346862,3.409682,3.269555,8.083200,-0.096527],[-1.593839,3.951023,-7.726053,-1.832267,8.582922,-3.623821],[2.694108,-6.895497,-1.826899,2.694644,9.100498,-5.847195],[9.326495,3.646833,-0.223623,9.565294,6.594166,6.766945],[3.871326,2.242154,4.994084,7.152260,-4.833253,3.929848]],[[3.086761,9.512633,0.814621,-9.988885,4.830787,-7.233209],[4.249837,-4.136497,-4.393865,-8.561387,-1.633155,-1.141351],[5.234844,-7.173860,4.805139,6.376743,-9.789744,4.682380],[-6.405753,-4.607158,1.938538,8.860451,6.766237,-9.326603],[1.417915,6.502649,-1.379608,-6.138675,6.790100,0.537708],[-2.590861,-3.539261,8.789913,-9.872925,2.840118,-6.636526],[5.510924,2.981291,5.686345,4.320078,-6.776286,-1.683519],[-4.457723,-8.753882,6.344314,4.759637,-1.273971,-4.664135],[4.556367,1.129891,-8.504946,-6.005249,-0.244476,-5.023827],[4.346270,-1.885895,-9.912090,-6.645262,9.440897,0.813731]],[[-3.071571,-9.749404,-0.995782,-5.339507,-7.980315,-3.335349],[6.474983,-6.425373,-1.420631,-7.930505,-0.044686,7.882302],[1.280952,-3.382962,-5.808457,-1.385935,-2.426205,-5.594107],[2.592639,-0.050689,-0.917539,-4.166113,7.742499,9.157713],[3.818988,5.601969,6.306242,1.068196,-7.216375,1.130966],[1.180683,3.384502,6.684990,-4.743600,7.807609,-0.317651],[1.453875,6.851525,5.960637,-3.469199,-9.593094,9.434367],[-9.888254,2.219092,-1.492665,4.907950,-7.282389,5.043453],[-8.601304,-2.112023,-4.204971,-7.136176,-6.743208,6.243973],[-8.433334,-5.091697,8.209341,-1.761036,-3.292991,3.419272]],[[9.417581,-6.398947,8.347398,8.610283,3.414186,3.051360],[-4.705281,7.231248,-9.397721,-1.342302,-8.610964,6.763994],[-8.045735,5.139918,0.522248,2.954729,-8.446437,-6.649177],[6.512957,9.893649,-4.396654,8.309726,-3.178480,4.702924],[6.405860,-8.591929,-7.905642,4.399674,2.959694,-8.575006],[9.552204,3.299734,3.697685,-0.126329,0.311864,-8.392948],[-3.544246,-6.144497,-1.206530,5.265314,-9.115224,-4.386138],[-7.806068,0.132040,-7.688649,-0.029961,-5.934744,9.432095],[-1.483865,-9.673237,-7.260017,3.471495,-3.584431,2.581977],[4.081931,-4.322060,-4.254406,-7.239436,3.193390,7.289151]],[[2.527169,3.081148,0.399590,-3.137489,-1.009614,-1.942468],[9.213458,-6.030853,8.718409,-5.911387,-7.729342,-0.276961],[0.251241,4.551414,8.891121,6.183573,2.897423,-7.617156],[8.550315,-3.382357,1.753931,-6.709827,-3.581493,9.315294],[1.436777,-7.154583,-6.800610,-2.285826,4.647510,-5.771726],[-9.362227,-2.715347,3.681960,7.428524,6.209300,-8.594725],[-1.149898,7.584275,4.842956,-3.117340,-3.178645,1.899405],[-0.886422,4.949348,8.079593,-7.081459,8.955096,2.341992],[8.148918,9.907942,-9.324532,6.286815,5.058326,0.163803],[7.157406,1.297234,-0.771720,5.849540,-0.013013,9.993221]],[[-0.752657,-4.654259,-9.111971,-9.071814,-5.754395,-4.099070],[-5.925835,3.626612,-6.846521,-4.016890,-4.416683,8.891028],[-2.043925,1.677777,2.201694,6.905724,-3.189781,0.941197],[4.124408,-1.749702,-7.248993,7.750193,7.350984,-7.170798],[5.795616,5.878631,-7.388746,8.252776,7.363099,0.846035],[5.841858,4.683215,-4.713614,-4.927265,-5.875534,9.798012],[0.934266,3.839319,5.666874,-3.801156,7.054635,5.869743],[-5.691343,-8.025047,4.223110,8.290653,-1.729561,0.504882],[7.491031,4.931062,-5.347358,-6.610887,6.664466,-5.011217],[3.302993,6.029427,1.035266,-4.805975,5.367221,7.041167]],[[6.467246,4.855976,0.234792,-8.051668,-0.256593,4.452187],[2.207545,-3.019563,7.234472,4.534589,4.860910,5.765035],[5.771505,5.485722,9.809519,-8.999531,8.468984,-0.585119],[-3.498266,6.277954,-4.819142,7.216238,4.251320,-3.222538],[9.097797,4.385899,1.097855,9.374095,0.436129,4.991755],[0.828604,9.541083,-2.292904,-4.294461,-0.322696,6.457690],[-8.617698,-6.743759,9.822792,-3.719914,2.265832,2.487073],[7.006630,9.638755,1.736617,6.680869,-9.559420,2.471851],[-9.978144,4.264918,-7.854877,-1.315889,-3.338007,-6.565239],[9.388799,-9.325619,-3.154979,8.841575,-7.781913,-7.655430]],[[-3.670048,-3.839634,-9.707377,0.429655,2.625057,-0.836008],[5.693515,-0.967725,0.660675,7.224382,-0.093656,6.349176],[-4.591741,-6.902943,-3.484617,-5.321068,-1.767197,6.245963],[4.594188,6.269328,-1.633994,-4.547168,-7.961010,6.340837],[0.088270,6.819584,-0.811388,-5.516807,1.856695,2.035585],[-2.004392,-2.109995,-0.745433,6.486994,-4.241239,7.313449],[-4.575620,9.542269,-6.351990,5.973991,7.659420,6.107120],[8.806201,-2.877726,-8.641446,-5.393272,-6.415348,2.220036],[2.933098,-6.744032,-7.436699,-1.961940,5.687140,2.011025],[-6.386840,3.856016,3.591117,6.927626,-3.876731,-5.224605]],[[5.381607,7.681185,7.674313,-7.540620,-9.365887,9.597806],[-9.755923,5.884693,4.042728,-9.337372,5.329408,2.298273],[-5.066462,-4.559734,5.334511,-2.730935,5.355203,-2.886143],[-9.472193,8.137298,8.667579,1.986739,-4.890196,9.166663],[-8.618990,6.370124,4.820190,-8.174179,4.078637,-5.274310],[8.842011,8.126685,6.368941,-5.282155,5.915123,-8.703196],[-4.405664,-8.560513,-5.387803,-5.540083,7.028345,8.331924],[-0.863499,7.054055,-5.941543,-4.188354,-2.078185,-3.143306],[8.313198,9.781676,0.212021,8.009266,-7.429780,-5.408726],[9.351231,9.509387,1.059552,1.862093,-0.956597,1.211243]],[[7.067587,1.344327,-4.722438,9.242965,-0.216966,-9.553794],[-3.298088,9.415317,6.320212,5.628575,-0.568493,-4.134727],[0.467609,5.896184,-8.999835,-2.047180,4.115678,9.256132],[-4.685842,2.333147,9.692822,-8.567301,-0.995692,-4.256328],[8.977424,-2.431639,-6.394494,2.442814,8.465662,-9.793415],[-0.961551,3.894943,-6.305343,9.542384,7.593143,8.072817],[-8.351186,-9.544770,9.725143,-2.629768,-7.915151,-8.266983],[5.294698,9.990138,-3.534500,-1.552372,-5.264038,-9.454109],[-2.331349,6.177536,1.184622,0.382141,-1.079993,-6.857401],[-3.599930,4.295872,9.876996,-5.718577,5.871064,1.503182]],[[9.451723,-7.048142,4.357871,-1.870165,-4.608709,6.227808],[-0.443553,9.843504,-7.839806,-7.270753,5.046554,-6.404953],[7.237990,9.451101,-6.880070,-5.526349,1.486195,4.958207],[-3.377240,-9.918631,-0.589947,-4.415828,-0.857074,4.442286],[6.097861,-0.203873,6.941562,5.562905,2.897612,-6.613947],[-7.022523,2.114933,1.730819,-9.045177,-0.407119,9.941818],[9.374370,6.347341,5.306763,-0.177934,-8.266798,6.961389],[4.842443,-8.359332,-5.443527,-0.174566,3.088444,-8.807662],[6.671388,-9.264797,8.275998,-5.691776,3.582921,7.721736],[-6.369902,7.171451,-4.176183,2.171627,-0.934840,-3.392900]],[[-1.535735,1.640153,-9.956445,-4.433038,-8.584960,2.375671],[-8.670208,-5.981785,9.631360,1.674837,-8.391560,-8.028227],[1.616664,-1.110599,8.521338,-0.210390,-0.345965,5.594535],[8.555814,-5.232358,1.693910,-9.690265,6.418917,1.978978],[-8.000473,-0.536508,-0.788319,0.681262,-8.673660,4.145885],[-2.665524,7.749522,5.743259,6.952929,7.511170,-6.518987],[5.406772,-7.592517,-8.145960,9.896501,-9.040227,4.119244],[-2.688455,8.569325,-0.150307,-9.339718,-0.424872,8.210240],[-0.070832,0.419140,-7.362731,-6.695789,-3.405838,-0.294036],[2.618673,9.025431,-3.849487,-8.269627,2.079268,9.000110]]], dtype = "float64")#candidate|2123|(12, 10, 6)|const|float64
bop_2124 = relay.multiply(call_2114.astype('int8'), const_2123.astype('int8')) # shape=(12, 10, 6)
bop_2127 = relay.multiply(call_2115.astype('int8'), const_2123.astype('int8')) # shape=(12, 10, 6)
func_1543_call = mod.get_global_var('func_1543')
func_1546_call = mutated_mod.get_global_var('func_1546')
const_2137 = relay.const([7.521120,-7.113767,-8.481581,3.160194,-3.556055,3.365781,-7.933779,3.596096,8.988695,5.406789,7.799819,4.963995,4.055844,4.915391,-2.977831,-2.012650,4.078932,-3.855504,4.251678,-5.391693,8.085142,-0.577509,-0.503207,-5.217858,2.543152,-3.219143,3.484539,-1.562338,1.093114,-9.633760,-3.407375,8.104592,3.496488,-2.492106,9.650910,-4.389415,-0.519768,6.556077,-9.962933,-3.327441,9.854181,6.355713,-5.473669,2.383240,7.139071,4.963093,-7.649199,0.326854,-0.051939,5.999942,-2.457151,-7.794979,-6.532252,9.730432,7.917622,-2.880103,-1.255409,-8.667493,6.503793,-2.722988,0.091862,0.287481,8.095670,9.470797,-2.963195,7.294892,1.960092,5.466307,6.850902,-7.557313,-0.378903,7.966268,-3.349591,1.418928,-9.766869,-1.121907,6.882171,3.427923,-5.778794,-0.326755,0.392759,3.967199,8.740584,-1.886246,9.211471,0.306954,-2.982904,2.136623,-0.783913,-6.509699,-2.969342,-5.083839,-1.289315,-5.762833,8.332047,5.338734,0.870680,7.386351,6.884322,9.730701,-7.981418,-6.191794,-5.977594,-8.640712,-0.635981,5.370180,0.059602,-2.627503,0.977735,1.540706,4.222293,-9.586670,4.253584,6.512856,6.603944,-3.592040,-5.844714,-1.329469,-7.099457,4.129867,-1.545534,4.837952,1.421534,8.709187,6.709302,1.424568,-4.300498,9.290811,3.513217,-2.370724,3.520509,-1.287753,-2.220452,-9.149799,1.406687,7.256414,-5.054554,-9.849860,6.017920,5.809777,-7.605942,4.344978,-3.729715,-2.559623,-7.607215,-0.057301,1.920625,5.076985,-5.879095,-5.120544,7.337164,1.185264,5.045682,4.987670,4.070240,6.852511,4.989615,-1.054194,4.064211,0.877365,-2.016465,6.036549,3.936773,9.808324,6.247548,8.001411,1.795069,-1.190429,-6.120953,9.621428,-3.026569,5.398766,-6.731186,6.541577,2.714297,5.187080,2.207487,7.503580,8.669658,-0.691063,1.104491,1.766168,-6.712324,2.651553,-4.802525,-1.456826,7.816510,-0.298386,-0.520740,3.494755,4.104702,4.414665,6.606183,3.503928,7.699813,2.589589,0.874096,2.732778,2.711074,2.099249,-5.869711,-4.254927,4.469258,6.033249,3.619143,6.269376,7.379237,6.920441,-0.832269,8.660847,-6.629455,-1.288846,3.008733,8.130711,-8.152348,-3.946591,-7.443376,-5.069278,-5.302628,5.158369,-7.725704,-9.085485,7.761933,-2.186030,-5.412588,3.832606,7.138485,-2.548729,-4.369697,4.599833,-7.724843,2.678308,-2.126879,4.773649,7.089095,-3.403201,1.598321,4.661765,-4.514116,-7.327094,2.393052,6.039571,2.848421,2.948257,8.993181,-5.827038,4.037842,4.221027,2.668290,-7.302721,2.446124,-3.467734,7.820143,-6.718069,-6.190174,-8.966840,-5.853489,-4.893842,6.670623,9.695238,-9.927835,0.337203,9.070806,7.135576,0.992534,3.549354,3.623317,1.945326,7.078467,-0.144299,1.452904,3.225280,8.363028,6.252298,-6.963446,1.123384,9.934822,-7.772460,5.095850,7.128740,4.591867,-0.954436,6.792192,5.942111,8.799720,-7.412233,-8.445802,-9.158519,8.289641,-9.541364,1.858018,-1.763010,-3.414322,1.311322,-2.409505,-1.676236,-1.140468,-8.584538,2.745764,-5.120302,-2.402435,0.691281,3.092439,-3.476665,2.902862,-1.885558,-8.076193,2.109751,6.358118,2.258582,-8.608192,6.013166,-5.514847,-2.717955,7.361733,-4.120552,8.822687,-1.037430,2.059637,0.378453,4.457282,5.183313,-0.184640,6.089038,-2.578826,1.073812,-4.718237,6.171630,0.808021,-9.891643,-8.607849,-2.852897,-8.885477,-0.128566,1.474284,7.138929,2.355382,-1.428897,0.930169,0.027892,-1.139276,-5.029770,3.244561,5.988100,9.862197,6.994403,-1.968424,2.376811,-2.489751,9.752149,5.011891,2.422594,4.716700,-3.277377,8.246341,-5.399960,9.412276,-1.540912,-6.431763,8.718982,-7.547500,-9.113452,-0.971037,2.754495,5.116867,-7.808672,5.341644,-9.108438,5.608134,-0.143630,-5.248036,1.364535,7.712770,0.170394,1.967501,-9.683863,1.840000,4.472278,-1.118917,8.960395,1.550031,5.514804,8.322535,6.328375,-9.023396,3.664391,0.626916,-7.374914,-0.431825,-0.945173,-5.697635,6.743610,9.815190,2.366846,-4.285279,-2.290897,-4.198917,-6.783507,3.400393,3.167335,0.050550,-3.240214,4.915314,-8.507011,-1.655810,3.482991,5.661488,4.148049,9.244189,-5.770195,8.514535,7.603626,-1.994942,9.392175,-4.548162,-8.448005,5.890563,-7.864091,7.911935,-8.341500,8.847361,1.894679,8.804134,-2.468158,2.960715,-8.828837,6.294625,8.507861,8.933467,6.115395,2.660220,-7.603425,-9.104187,1.612010,9.053595,-5.231927,4.220861,2.129164,-8.243444,-6.492939,-5.566540,-0.727883,-9.442320,-4.877185,-3.130013,8.781479,4.315136,-0.729673,-3.469609,2.634922,8.234609,9.508915,2.616427,0.107701,-6.713502,-5.579338,-0.679072,-0.298861,-2.992885,3.937165,-2.734753,-6.212840,-6.857739,2.000743,-5.563811,-4.670029,-3.669782,-8.205644,-3.162551,0.557409,4.233957,4.398612,-4.528375,8.716658,-1.096614,7.197318,1.277056,-0.464865,-1.845955,3.647267,9.368546,9.081983,6.881156,5.045296,3.487428,-5.583883,-9.044449,9.466579,0.898601,4.585447,8.973547,-5.770813,-1.141656,-6.536819,-4.251720,9.969062,3.307528,-7.372245,3.426413,-2.566142,-3.330954,2.677573,-6.120230,-4.441875,4.126286,-2.207839,-2.379705,-1.224788,2.998334,-0.108152,-3.727844,8.520276,-5.968107,-2.676007,-2.318849,-5.449003,4.836539,5.627859,-4.586406,4.204731,-4.072710,-7.271264,-4.120053,5.653454,7.176501,3.195455,-4.069067,4.575576,-8.254910,-5.939205,-2.406922,-0.001380,-7.094698,-9.330086,3.071088,1.425378,7.891848,-7.579936,-2.013342,0.168412,1.926973,8.071560,-2.743304,-7.629336,-7.402046,7.196529,-9.094619,-0.672990,1.904278,8.741255,-9.911137,-4.012553,9.681326,1.250340,8.590590,0.272469,1.136911,-9.545659,-3.188920,5.212562,2.366787,6.293141,-6.730634,-5.126900,-4.751404,-4.545997,-4.950242,-6.233706,0.460365,6.500859,9.600150,-1.086797,8.428433,-5.580168,4.976053,-7.125450,-3.686071,-5.797466,9.156702,-6.470407,3.154481,-0.142181,-5.387248,8.457744,-8.280910,-8.785414,1.803521,5.246809,0.594144,-6.948144,4.527504,1.950754,4.390198,-1.576029,-8.621641,-2.088482,4.891663,-9.809790,-6.039793,5.663612,-1.372740,-1.949095,-0.329616,4.936043,2.626702,3.586180,-2.516849,-9.954526,-7.681479,5.216686,7.932994,-7.313127,-6.210117,-9.878616,-2.573332,-4.698880,5.457820,1.691056,-5.443143,2.089150,-4.724613,-5.376921,0.724299,-1.248130,7.306433,2.608871,-9.787696,5.625141,-2.473420,7.005634,4.246182,7.311640,-1.610532,7.591023,4.657930,-9.557801,1.162529,7.948568,8.760110,-9.855301,3.146656,3.115877,-1.473888,-9.271563,9.638864,8.733300,3.119029,5.154544,4.506311,-9.916105,-1.893237,9.987574,5.572711,-5.719491,-8.448409,5.589807,-1.940817,3.295519,6.525055,3.146297,4.257273,-6.373909,-8.005884,-4.096292,-9.027205,-0.927883,8.793242,-6.099444,-3.534225,6.159566,4.977268,-4.216160,-2.093961,-2.486935,-4.955753,-5.618056,9.107856,-7.121679,-9.453704,0.420672,-9.310200,6.142736,5.711696,-7.855879,5.809682,3.659598,4.903251,-6.971144,3.239520,8.662318,2.300189,-9.987125,-9.087840,-0.876551,9.299169,4.624241,6.871301,-1.720455,-9.149511,5.432551,-4.865968,3.723817,-6.186747,1.526985,-1.527865,8.660676,-1.088746,-8.792562,3.228540,-5.020135,8.734718,-9.721450,-2.650701,4.001475,9.977022,-9.044536,8.612497,3.815637,-9.249938,-4.823757,-2.562069,-0.673731,9.374208,2.946216,2.622506,5.032640,-3.496655,6.516490,-8.213003,6.163063,4.221633,-1.481111,9.674334,1.329533,-6.824006,7.083475,3.271853,-9.464679,-8.925144,4.575789,4.752296,-8.787565,-3.655725,-4.789888,1.893738,0.216531,-1.573130,9.761496,1.435508,5.142491,-9.297264,-5.687107,-6.616539,-3.189547,0.585486,-2.160649,5.447031,-4.137512,-7.554955,-2.721254,-2.555417,7.637400,6.129488,9.199627,8.388921,4.826967,3.552037,5.282612,-4.042095,-2.767301,-8.989256,-3.880291,-4.598544,7.731886,8.431134,-2.922062,2.866592,-9.717804,-0.986567,-5.922835,-5.875972,-4.316323,5.884206,2.731880,6.064595,1.651052,-2.001873,1.235510,-1.302187,-1.601810,7.714295,-1.537480,-3.556339,6.685848,-1.462686,-3.227459,6.245227,-1.400343,-8.014176,-3.612371,0.984037,9.534482,0.167747,-8.217645,-4.154963,-5.774923,4.631257,-6.414918,9.094406,5.000530,8.085421,7.780924,-5.565876,-8.663892,9.494447,-9.010321,-1.670713,9.563296,6.245929,-6.848781,-8.210783,8.704195,3.013796,9.459151,6.082592,-7.512842,-6.798786,-5.737327,2.262475,8.880655,3.639307,9.793534,-0.106191,-5.320293,6.207842,6.808044,0.919115,4.289958,-1.196401,3.870611,4.967684,2.598201,5.958927,-9.009613,-5.373010,-4.419569,-1.374927,0.618570,-8.266760,-2.321125,-3.539669,3.782917,-8.845511,-7.663757,1.013936,-1.680010,2.283132,-9.066220,5.046701,6.078715,-6.908718,-5.638084,-5.476231,7.490560,4.548903,-5.767853,3.657908,8.084105,-1.780696,2.885604,8.092516,2.986682,4.929529,-9.891509,-1.597933,-7.529320,1.460497,2.566006,-9.655318,-2.164301,-4.497409,-1.284452,-3.744367,4.135681,2.219826,-0.134717,4.458511,-3.148673,9.236372,9.895449,-4.891513,-8.743183,-9.065387,1.474145,2.286135,-7.603469,-4.186527,8.819721,-5.692887,-8.208897,8.924719,1.769030,-2.672533,1.817958,-1.715435,1.837139,-0.940516,-0.975708,-4.388940,-6.194915,8.563406,1.079834,0.102748,-2.911128,-5.143260,1.370523,4.565723,-8.444655,-8.280166,0.170374,-9.543864,-0.684437,-4.036244,-7.683214,-2.432866,-1.747359,1.121623,-3.765678,2.974398,4.961416,0.527892,1.173989,5.113928,-8.329374,-2.587455,-6.765011,-6.139837,5.709241,6.201761,7.474413,-0.971928,7.999481,-0.496167,-5.214929,-1.173715,3.348094,1.632478,-4.334246,-7.457972,-3.923336,-3.891364,7.762984,4.624704,8.774305,-7.425733,5.579164,3.016286,8.688941,-4.913919,8.903218,3.211243,-0.560502,7.019604,6.859259,8.345089,-6.440538,-9.005892,-4.013824,0.036801,-1.558120,0.633004,-2.232945,-8.429820,-4.313968,-9.130682,4.442759,-8.077417,-1.123242,-9.202669,1.173183,6.124110,5.104050,6.127698,-9.195544,2.684805,8.920699,-3.848645,3.135133,3.317153,9.905101,1.177494,7.064579,-3.046627,-6.384476,8.960337,-0.044692,1.696267,-8.958904,8.835439,8.520722,5.796288,9.170038,1.103089,-1.180514,-5.219690,-7.401194,-5.497034,1.364700,6.972278,3.319775,3.691105,7.982927,4.141955,-5.667033,-5.164984,8.000903,-4.735455,2.109260,-6.542611,-1.909303,8.245354,-0.423319,-2.845236,-5.794356,8.970106,-9.126718,5.110997,-0.465491,6.307729,-2.045982,-8.107545,8.029578,-6.726326,-0.766599,-2.139411,-6.250054,7.882286,8.238653,-1.536855,9.232000,4.719069,0.195691,-6.490544,0.200580,-0.314023,7.933996,2.368357,8.122255,-1.562456,-2.138437,-0.390603,-2.383992,-1.075439,4.072535,-9.724585,-9.641890,-4.653474,-2.417612,9.265072,-8.855978,3.436301,3.288314,-0.401068,0.105567,-7.094032,0.284762,-8.420248,9.532930,7.820662,3.329612,4.978755,7.467801,1.233308,-3.441162,5.447167,-8.664225,0.664090,7.227740,-8.681745,-1.998890,0.080379,4.326567,4.665014,-3.832290,5.450687,-7.712690,7.625920,-1.072995,-3.069891,-0.707900,4.120487,-3.911219,-9.610812,-7.780999,-1.384416,4.067484,-1.103617,4.619882,7.669304,-5.648482,-3.403925,-3.287035,-9.496661,-2.982012,6.243331,-8.642786,-0.916470,6.455116,2.256255,2.102149,-9.512747,7.556857,-3.279424,2.315646,-8.746710,-5.382885,-6.885209,-5.504528,-1.069709,7.818736,9.581890,-1.504328,4.934328,-0.252443,-3.440157,-1.563178,2.546245,1.868624,0.752274,5.037612,8.911267,-7.303152,-7.353237,-7.104747,3.761560,0.886365,-1.821539,-5.183039,6.726040,-1.483629,6.486357,5.578004,-9.090241,-9.661210,9.197661,3.328847,3.541299,-5.012135,-5.729919,-4.602110,8.842519,9.312232,-5.277518,6.929022,-2.204132,4.798368,-0.790945,-1.053881,8.571102,-7.488081,8.920227,7.199941,5.461784,-1.628491,1.827344,-7.505745,-8.322201,-5.278581,6.003133,5.211849,0.476796,8.993879,9.553966,-4.171334,-2.137245,3.756542,-0.551173,8.979350,-0.924504,0.933918,-2.939100,-2.104820,1.387637,4.831123,-5.603152,6.972860,8.358319,-3.330290,-6.074486,-6.737400,1.059000,-6.145339,-9.753098,-5.880390,-7.925719,-9.434549,3.428897,8.550440,8.012007,0.643914,3.091132,7.407157,-4.560089,9.122293,-5.704681,7.098021,4.106591,2.165375,2.686524,7.238248,-1.429038,8.090677,-1.959345,-0.581861,4.372553,-2.679941,-1.138388,-5.236708,0.173281,-3.319529,8.061142,1.634535,9.463980,-1.257391,-5.193159,-6.929454,-0.636428,-1.768081,7.364880,-4.268315,9.862117,6.467672,2.614583,-8.401532,-4.701762,-1.759003,-9.137100,-2.125698,7.879731,6.625484,-3.693605,-0.953166,3.385666,-1.316176,0.343820,5.014585,4.360242,9.895275,-7.478639,5.473807,-1.963402,-7.409635,1.901217,-2.601290,-9.064025,9.377042,-5.059526,1.346812,-8.662001,-7.991646,-0.353009,-6.765231,-5.118550,-7.447081,7.855506,9.101440,-8.494464,2.967658,4.212912,-1.668310,0.878802,-2.960532,6.360381,1.866813,6.760350,5.373604,9.560136,4.950612,6.091584,3.380298,9.705572,-0.291561,-1.681620,-0.048348,-3.955517,4.161688,-8.799044,3.084132,9.478374,8.975303,-2.825668,3.141499,7.159893,0.955395,-7.284859,9.268003,-1.009386,1.160941,3.588056,-9.502257,-2.143023,5.299399,0.761902,-7.237637,2.250174,-0.963019,8.012578,-7.678713,-9.892028,5.313568,-7.747572,9.065219,3.176122,5.497508,-6.124335,-1.198604,-7.047008,1.635779,-4.332992,-9.412699,0.918039,5.862103,-3.829457,2.371945,5.703445,-9.598447,-9.932441,-8.126378,-9.760089,-1.220226,4.277368,-3.835562,6.384075,-1.468705,8.017404,5.825739,1.987217,3.365996,-2.806118,-6.160252,-1.943716,4.191925,-2.684292,-6.928906,-6.048919,9.882702,2.038864,6.561486,4.450176,-0.790977,-1.953112,-0.652604,-1.734880,-9.943548,-8.088909,-3.058934,0.138837,7.562624,-2.794771,-7.289484,5.882202,-7.112250,7.387736,0.395804,0.746650,-7.680399,2.533940,4.952715,-5.162390,4.298422,4.001532,3.804073,4.620819,-8.908191,-2.920927,-3.215057,9.958718,-4.088731,-4.876705,8.950601,9.981581,-6.513800,-6.890809,-4.747635,8.970395,-5.046819,-2.126091,5.401075,-2.766039,0.287946,-4.640254,-2.905911,-8.558152,2.314463,-3.197925,7.589808,-4.355456,9.057085,2.524913,2.971366,1.184757,0.778345,-9.655178,8.018283,1.478598,6.021687,7.071584,9.035239,2.248046,-8.116599,4.764282,1.141506,0.521246,0.608977,9.180620,1.254935,-6.169900,-5.271831,2.465184,3.879641,-9.177344,3.235883,7.078037,0.882155,5.216880,-6.353177,8.293066,-8.025336,-3.207984,-8.792559,-1.498182,-3.706078,-7.518696,5.844422,3.189388,-3.789810,-0.633536,3.021396,-4.036971,-3.655479,-6.074466,5.685233,-7.558139,7.633313,5.944788,-3.077740,9.767568,-0.702059,4.540131,-4.991884,-9.126010,-1.109057,-0.159194,-9.215221,6.116146,-5.140703,-6.751165,0.700738,4.412541,0.362061,-4.678647,-4.262568,2.689149,-6.805838,5.017671,6.639878,0.239155,-4.735438,8.845247,2.060827,8.321715,-1.107442,0.342883,-2.296270,-0.674466,3.438234,-0.911364,6.028397,-3.913262,-6.095762,-5.377728,5.348271,-9.137538,2.713410,0.620299,-7.509456,-5.791491,-9.901202,-5.369928,-9.033920,-0.737496,-4.390627,6.325363,-9.071485,3.016837,4.803547,-2.474041,7.592756,-9.940223,-8.690374,1.687197,-9.090022,-9.980996,0.691974,-8.329787,7.800118,4.931593,2.704376,6.091908,-0.898395,-2.428718,-3.317653,4.733374,0.597091,-9.316453,1.521153,-7.683594,7.414089,-5.838463,-6.153177,-8.721378,0.010144,7.217826,6.159580,0.709723,6.573362,4.980060,-4.594576,2.631741,2.171450,-3.888940,-5.900947,-8.327388,9.380342,-4.461730,7.767903,3.390048,7.564154,1.847079,-5.686974,-5.651162,5.741077,3.949230,-2.007984,9.155378,3.614615,-5.705634,1.257186,7.825688,0.029814,-6.035876,3.938504,-7.170587,-3.354230,0.213792,-5.996630,-3.192571,3.172767,4.623996,-1.578437,5.190582,-2.895779,8.920417,8.228615,-9.971230,2.178727,9.866661,2.028822,6.736491,-8.984092,-8.211713,-9.369048,-8.046654,-0.439026,-0.013093,-7.109437,-0.363276,5.483838,-2.655127,2.868296,-2.518269,4.208910,9.502797,4.555481,-4.659051,5.131604,-2.298805,8.985186,7.107761,-0.128494,2.190092,-3.200229,-3.260072,0.223454,-2.767002,4.441504,3.407620,-2.489976,2.529420,2.957729,9.086847,-1.439335,2.275780,-5.405662,-2.357122,-6.680462,-0.958153,6.398410,-0.880036,4.675355,6.247717,1.591407,-2.758145,1.258930,5.732748,1.775063,6.481962,-4.133860,-0.149554,-4.429083,-1.866869,-9.828132,8.138880,4.075224,-5.702963,-0.872564,5.726095,3.294869,7.943640,-7.200463,6.779037,-2.507950,6.840947,8.341042,1.168917,-4.769499,-2.877800,-2.639456,0.013590,-1.881740,6.860670,6.031595,-0.736660,-0.598736,-7.518554,2.229508,-0.989703,-1.023365,-9.596987,1.486029,9.399163,9.293042,-9.643910,3.381569,7.743734,-3.268748,-5.853555,-2.416666,-8.026461,8.087458,4.787996,-0.586463,-4.147958,2.483188,3.463802,-6.955145,1.025296,-0.194495,-9.139547,1.636442,0.037828,-9.599417,9.870806,4.542293,0.826196,-7.256441,7.522932,-6.777125,-8.588055,-2.099376,5.486616,-5.681378,9.348973,-3.165744,0.931679,6.912414,9.299097,-9.891274,-3.963721,-0.945513,-3.376943,-1.711918,-7.718060,6.897999,1.165699,-9.387299,8.071078,5.717863,6.203066,-0.099615,6.812735,-7.386811,3.078425,6.315000,-7.893266,6.682667,8.904980,-8.482175,-6.750094,-1.512057,8.501027,-2.268647,6.036749,1.616091,-0.926094,0.140487,-5.035555,-3.337955,7.648668,5.450604,-2.394122,-1.029576,0.665561,6.071449,3.584095,5.087582,-7.905911,4.731377,6.918961,-0.135551,-1.709498,4.901781,2.092820,-8.267348,9.850195,-4.811990,-7.237769,3.316966,2.051034,9.436525,-7.315405,-2.306419,8.500095,2.662187,-2.929079,-3.357865,5.262673,8.212389,3.317944,0.099642,-6.076454,-3.618385,1.591577,-2.862912,-4.607474,2.073507,-4.490257,4.704120,6.469604,-6.845231,4.097291,-8.987073,-5.054765,1.407521,1.459129,-1.862163,8.733297,-8.171914,1.730788,2.502361,-4.375979,-4.512631,-4.011451,-0.672932,-4.291423,-8.600516,9.846886,3.560261,-5.851070,-3.799481,9.549768,2.246761,7.848220,1.686402,-6.446379,6.926509,8.012465,7.928704,0.106504,1.819716,-2.056027,8.020175,-1.985448,8.910934,-6.676951,-1.650246,5.273316,-4.188017,9.924032,2.467195,-8.881025,7.678720,-1.824705,-2.423176,-1.620314,-8.695597,1.242155,7.713233,-4.343925,-0.456310,-2.516570,-1.548892,7.774270,-3.053943,0.438748,-2.181461,-8.525046,9.900409,2.250659,0.792940,-4.435505,-2.518539,1.472656,5.345850,4.661577,-0.633419,2.989805,2.547611,8.585876,9.968969,9.503195,7.170299,5.733710,-7.685597,-5.475002,4.772092,1.281647,-0.581249,9.920017,-9.549305,8.328282,-7.005154,-1.269920,5.799961,1.538630,-9.438590,4.164995,1.138584,-1.153023,4.439602,8.410546,8.674196,-3.954053,3.259954,-0.821275,-7.805873,3.841455,-9.689216,-8.302377,7.768763,-9.081751,-6.762820,4.157448,8.058714,-4.990464,-8.933039,6.580771,-7.207192,6.933667,1.298237,-2.648993,-6.904156,-7.579475,9.695412,-1.091898,-5.104753,-4.560584,-1.339272,-4.776296,7.446208,-4.138293,-4.412931,-4.249440,-2.947017,5.409754,4.342900,8.013335,9.841195,-5.189669,3.885428,9.953948,2.003698,-0.964817,-7.068416,9.155594,8.213314,5.695838,3.505236,3.091591,-6.421679,8.527607,-3.935180,2.237814,-9.706499,-7.232491,-6.199353,-5.627704,1.166989,-5.776706,4.116582,9.294983,9.736173,8.703361,-8.564155,-9.295898,5.108490,-9.865369,3.546486,2.980890,3.913341,4.772843,6.802078,-6.563643,-3.792070,-8.775330,-6.050960,1.385990,5.660548,5.449700,0.517727,-6.910032,3.891152,-3.029227,-3.100473,6.929759,2.535018,3.947168,-2.328095,3.140520,-9.841279,-4.055393,9.597120,3.731929,-9.785893,6.377275,-6.046336,-8.709662,-4.198351,-2.479553,-3.039700,5.811886,-1.203692,3.395277,-7.354214,-1.804320,-7.080588,5.492692,-5.635414,-4.422129,5.655140,-5.724302,8.701637,-4.936388,8.066958,-3.945049,-6.965436,5.361191,7.514293,0.428929,0.629682,-6.658172,-3.880851,6.878256,-5.730128,-3.095762,0.939191,-1.957207,9.525499,0.634287,9.945958,8.318980,6.902612,1.575425,9.192651,-9.473962,-2.202800,-4.348135,-2.410572,4.247406,-1.338154,6.004022,-3.770978,-3.843674,-3.288303,-7.692462,-1.824234,8.352241,-9.439953,-7.112490,6.709209,-0.001661,5.382106,-5.843448,-7.713116,7.502660,6.139293,1.423356,-8.395707,-3.707841,0.767084,-3.574203,-5.236693,8.247167,-9.761910,-3.945322,-6.052407,8.297741,2.526470,4.039501,7.631169,-7.553139,9.860832,-6.983973,-7.543712,-2.992182,8.093310,6.051577,-0.352497,-8.238265,-0.130431,-0.178067,2.680308,-8.560649,-5.390294,2.017712,-5.418124,-7.414748,7.810927,1.385899,7.363245,6.240268,1.688491,-0.312942,8.819455,-9.191419,2.093091,-3.442113,8.799414,-3.508094,-9.804803,1.434902,1.206916,0.032540,6.958387,-4.639122,-1.097157,5.708110,-4.305641,-2.445725,4.934030,5.468441,1.339716,3.659255,9.429704,-2.883768,0.508106,-2.531538,-5.919234,1.005667,4.430915,-4.811100,7.494576,8.757993,-0.460593,5.723965,-4.061618,-7.460832,-0.165884,-4.754481,6.016069,-5.699189,0.876405,-5.657072,-9.499395,9.428800,3.964922,7.576158,3.840183,1.583925,-9.523826,1.257843,2.557937,4.350247,-5.967400,2.904718,-1.170376,-2.285305,6.622821,3.050001,0.365265,3.319835,0.234642,9.467102,0.172973,-8.155495,-2.664785,-4.003717,6.827665,2.577332,-5.606895,-8.613205,-7.947266,-4.534751,2.165652,5.773844,-6.581208,2.926521,-4.166066,-4.856747,9.838136,1.299404,1.160960,-3.390184,3.768003,-5.325656,-0.017226,3.820684,0.744661,-3.617293,0.138699,7.203464,-5.655901,5.226968,-4.486692,-0.165360,-2.422926,3.238491,-7.531698,0.133715,9.129963,7.768096,-1.814449,9.384092,-9.221690,-9.205608,5.401565,1.968934,-1.817310,-0.594067,-8.419240,2.683166,9.447400,-4.985858,-4.409265,0.374884,5.523855,8.676288,0.652873,-4.098643,9.711210,-3.225566,-8.704938,-3.494546,-9.877916,2.538004,-5.922999,-2.233955,8.157690,9.677508,-4.136698,-7.954808,5.299130,3.252839,-2.017641,-7.084318,-4.511815,-0.029828,-0.803834,1.403125,-5.453219,4.824941,4.698732,-7.350942,1.110050,-0.083136,-7.435060,8.165332,8.524856,9.790756,-8.344608,2.834526,-9.527905,-5.478067,-4.764483,3.809544,-4.700836,6.628270,-8.085599,0.102489,0.925325,3.919776,-8.735111,7.599623,0.817255,9.493540,-6.873087,-9.273187,-9.620049,8.839398,0.495073,3.919279,-9.100733,6.922390,-4.481994,-7.168478,2.996509,-1.913759,-7.552654,4.786208,-3.831511,-8.134706,1.924928,2.861301,4.536492,-3.402269,3.133426,-8.110840,7.476332,0.194276,-3.928305,8.651299,1.904423,5.893080,-2.946334,-0.454095,9.374508,6.987643,4.188707,2.608367,-0.543389,6.533931,5.399495,8.790872,-1.314631,6.866085,-7.155460,-4.606790,-5.014164,6.396719,-8.931354,1.829201,-0.557471,-0.442637,5.388355,-8.220544,2.037535,4.196146,-4.407273,2.006997,1.486200,1.843260,-8.388894,-0.665505,-9.414890,1.670996,0.248491,-9.807609,4.526045,4.020142,-0.152164,-7.110422,-6.031477,2.094424,-7.079294,4.689484,3.736729,3.987083,-3.682648,-5.346545,-5.794993,0.781275,-7.450442,5.398663,-9.116978,-8.431927,3.567726,-3.156991,-4.256414,-5.756768,3.061224,8.863925,-6.754956,-6.782264,-3.392916,0.734427,-9.457596,-1.501038,5.909341,-2.862159,-6.492313,-3.372596,-9.126720,3.836860,-5.521730,6.616872,1.670647,-4.104836,-6.888901,-2.533624,2.706745], dtype = "float64")#candidate|2137|(2310,)|const|float64
call_2136 = relay.TupleGetItem(func_1543_call(relay.reshape(const_2137.astype('float64'), [2310,])), 2)
call_2138 = relay.TupleGetItem(func_1546_call(relay.reshape(const_2137.astype('float64'), [2310,])), 2)
uop_2150 = relay.log2(const_2137.astype('float32')) # shape=(2310,)
func_1292_call = mod.get_global_var('func_1292')
func_1293_call = mutated_mod.get_global_var('func_1293')
call_2152 = relay.TupleGetItem(func_1292_call(), 1)
call_2153 = relay.TupleGetItem(func_1293_call(), 1)
output = relay.Tuple([bop_2124,call_2136,uop_2150,call_2152,])
output2 = relay.Tuple([bop_2127,call_2138,uop_2150,call_2153,])
func_2157 = relay.Function([], output)
mod['func_2157'] = func_2157
mod = relay.transform.InferType()(mod)
output = func_2157()
func_2158 = relay.Function([], output)
mutated_mod['func_2158'] = func_2158
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2274 = relay.var("var_2274", dtype = "uint32", shape = (1, 2, 5))#candidate|2274|(1, 2, 5)|var|uint32
var_2275 = relay.var("var_2275", dtype = "uint32", shape = (9, 2, 5))#candidate|2275|(9, 2, 5)|var|uint32
bop_2276 = relay.not_equal(var_2274.astype('bool'), var_2275.astype('bool')) # shape=(9, 2, 5)
func_159_call = mod.get_global_var('func_159')
func_163_call = mutated_mod.get_global_var('func_163')
const_2284 = relay.const([[3,6,-6,7,-9,-5,1,5,4,6,-10,-10,8,-7,-2,-3,-4,2,3,10,-4,-10,7,-6,1,-10,-2,-3,2,9,4,-8,-2,8,10,7,5,10,-7,2,-8,-8,-5,-3,3,-1,-6,3,7,-3,-1,10,-10,-7,7,-4,4,-7,2,-5,2,2,-3,5,-8,9,-1,-7,-9,7,-4,3,4,6,-10,1,-7,1,7,1,6,-7,9,9,8,6,-8,1,-8,8,-8,-1,1,4,-10,5,5,5,8,1,-10,10,-7,8,8,3,-4,-10,8,4,10,-6,-3,-6,2,7,-6,10,5,-9,5,-10,8,-3,-5,6,6,10,-10,-8,-8,6,1,-7,3,1,10,6,-1,-4,-6,6,2,-9,6,7,-4,8,-9,2,-1,-10,4,8,-7,-6,5,-2,7,3,1,-7,-3,10,10,-3,-7,-3,-1,8,5,10,5,-9,5,8,-2,-3,-10,6,-7,2,-4,-4,-5,-4,6,2,-5,-4,3,-8,-8,9,-6,-7,-5,-6,3,-5,-2,-1,-4,8,4,-2,7,-1,3,-1,6,-5,-7,10,-10,-10,-8,9,-4,1,-2,-4,-3,1,4,8,-10,-10,3,-6,-9,-5,7,-8,4,8,10,-4,4,10,7,-9,8,-3,9,4,-8,-4,-7,-8,10,7,-6,5,-6,2,-3,-10,8,4,7,-7,10,-1,-6,6,-5,-9,3,2,9,3,-5,-6,8,-4,9,1,-5,-4,3,8,-4,10,-1,9]], dtype = "uint8")#candidate|2284|(1, 286)|const|uint8
var_2285 = relay.var("var_2285", dtype = "float32", shape = (432,))#candidate|2285|(432,)|var|float32
call_2283 = relay.TupleGetItem(func_159_call(relay.reshape(const_2284.astype('uint8'), [13, 11, 2]), relay.reshape(var_2285.astype('float32'), [1, 432]), ), 0)
call_2286 = relay.TupleGetItem(func_163_call(relay.reshape(const_2284.astype('uint8'), [13, 11, 2]), relay.reshape(var_2285.astype('float32'), [1, 432]), ), 0)
output = relay.Tuple([bop_2276,call_2283,const_2284,var_2285,])
output2 = relay.Tuple([bop_2276,call_2286,const_2284,var_2285,])
func_2294 = relay.Function([var_2274,var_2275,var_2285,], output)
mod['func_2294'] = func_2294
mod = relay.transform.InferType()(mod)
mutated_mod['func_2294'] = func_2294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2294_call = mutated_mod.get_global_var('func_2294')
var_2296 = relay.var("var_2296", dtype = "uint32", shape = (1, 2, 5))#candidate|2296|(1, 2, 5)|var|uint32
var_2297 = relay.var("var_2297", dtype = "uint32", shape = (9, 2, 5))#candidate|2297|(9, 2, 5)|var|uint32
var_2298 = relay.var("var_2298", dtype = "float32", shape = (432,))#candidate|2298|(432,)|var|float32
call_2295 = func_2294_call(var_2296,var_2297,var_2298,)
output = call_2295
func_2299 = relay.Function([var_2296,var_2297,var_2298,], output)
mutated_mod['func_2299'] = func_2299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_223_call = mod.get_global_var('func_223')
func_225_call = mutated_mod.get_global_var('func_225')
call_2304 = func_223_call()
call_2305 = func_223_call()
output = relay.Tuple([call_2304,])
output2 = relay.Tuple([call_2305,])
func_2314 = relay.Function([], output)
mod['func_2314'] = func_2314
mod = relay.transform.InferType()(mod)
mutated_mod['func_2314'] = func_2314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2314_call = mutated_mod.get_global_var('func_2314')
call_2315 = func_2314_call()
output = call_2315
func_2316 = relay.Function([], output)
mutated_mod['func_2316'] = func_2316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2076_call = mod.get_global_var('func_2076')
func_2078_call = mutated_mod.get_global_var('func_2078')
call_2319 = relay.TupleGetItem(func_2076_call(), 0)
call_2320 = relay.TupleGetItem(func_2078_call(), 0)
output = relay.Tuple([call_2319,])
output2 = relay.Tuple([call_2320,])
func_2333 = relay.Function([], output)
mod['func_2333'] = func_2333
mod = relay.transform.InferType()(mod)
mutated_mod['func_2333'] = func_2333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2333_call = mutated_mod.get_global_var('func_2333')
call_2334 = func_2333_call()
output = call_2334
func_2335 = relay.Function([], output)
mutated_mod['func_2335'] = func_2335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_592_call = mod.get_global_var('func_592')
func_593_call = mutated_mod.get_global_var('func_593')
call_2361 = relay.TupleGetItem(func_592_call(), 0)
call_2362 = relay.TupleGetItem(func_593_call(), 0)
output = relay.Tuple([call_2361,])
output2 = relay.Tuple([call_2362,])
func_2380 = relay.Function([], output)
mod['func_2380'] = func_2380
mod = relay.transform.InferType()(mod)
output = func_2380()
func_2381 = relay.Function([], output)
mutated_mod['func_2381'] = func_2381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1684_call = mod.get_global_var('func_1684')
func_1685_call = mutated_mod.get_global_var('func_1685')
call_2401 = relay.TupleGetItem(func_1684_call(), 0)
call_2402 = relay.TupleGetItem(func_1685_call(), 0)
func_2022_call = mod.get_global_var('func_2022')
func_2024_call = mutated_mod.get_global_var('func_2024')
call_2408 = relay.TupleGetItem(func_2022_call(), 0)
call_2409 = relay.TupleGetItem(func_2024_call(), 0)
func_537_call = mod.get_global_var('func_537')
func_538_call = mutated_mod.get_global_var('func_538')
call_2413 = relay.TupleGetItem(func_537_call(), 0)
call_2414 = relay.TupleGetItem(func_538_call(), 0)
func_2009_call = mod.get_global_var('func_2009')
func_2011_call = mutated_mod.get_global_var('func_2011')
var_2423 = relay.var("var_2423", dtype = "int8", shape = (50, 6))#candidate|2423|(50, 6)|var|int8
call_2422 = relay.TupleGetItem(func_2009_call(relay.reshape(var_2423.astype('int8'), [150, 2])), 2)
call_2424 = relay.TupleGetItem(func_2011_call(relay.reshape(var_2423.astype('int8'), [150, 2])), 2)
func_537_call = mod.get_global_var('func_537')
func_538_call = mutated_mod.get_global_var('func_538')
call_2427 = relay.TupleGetItem(func_537_call(), 0)
call_2428 = relay.TupleGetItem(func_538_call(), 0)
func_1392_call = mod.get_global_var('func_1392')
func_1393_call = mutated_mod.get_global_var('func_1393')
call_2435 = relay.TupleGetItem(func_1392_call(), 1)
call_2436 = relay.TupleGetItem(func_1393_call(), 1)
bop_2445 = relay.greater_equal(call_2422.astype('bool'), relay.reshape(var_2423.astype('bool'), relay.shape_of(call_2422))) # shape=(150, 2)
bop_2448 = relay.greater_equal(call_2424.astype('bool'), relay.reshape(var_2423.astype('bool'), relay.shape_of(call_2424))) # shape=(150, 2)
func_223_call = mod.get_global_var('func_223')
func_225_call = mutated_mod.get_global_var('func_225')
call_2456 = func_223_call()
call_2457 = func_223_call()
output = relay.Tuple([call_2401,call_2408,call_2413,call_2427,call_2435,bop_2445,call_2456,])
output2 = relay.Tuple([call_2402,call_2409,call_2414,call_2428,call_2436,bop_2448,call_2457,])
func_2469 = relay.Function([var_2423,], output)
mod['func_2469'] = func_2469
mod = relay.transform.InferType()(mod)
mutated_mod['func_2469'] = func_2469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2470 = relay.var("var_2470", dtype = "int8", shape = (50, 6))#candidate|2470|(50, 6)|var|int8
func_2469_call = mutated_mod.get_global_var('func_2469')
call_2471 = func_2469_call(var_2470)
output = call_2471
func_2472 = relay.Function([var_2470], output)
mutated_mod['func_2472'] = func_2472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_592_call = mod.get_global_var('func_592')
func_593_call = mutated_mod.get_global_var('func_593')
call_2493 = relay.TupleGetItem(func_592_call(), 2)
call_2494 = relay.TupleGetItem(func_593_call(), 2)
func_2022_call = mod.get_global_var('func_2022')
func_2024_call = mutated_mod.get_global_var('func_2024')
call_2503 = relay.TupleGetItem(func_2022_call(), 0)
call_2504 = relay.TupleGetItem(func_2024_call(), 0)
output = relay.Tuple([call_2493,call_2503,])
output2 = relay.Tuple([call_2494,call_2504,])
func_2505 = relay.Function([], output)
mod['func_2505'] = func_2505
mod = relay.transform.InferType()(mod)
output = func_2505()
func_2506 = relay.Function([], output)
mutated_mod['func_2506'] = func_2506
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2538 = relay.var("var_2538", dtype = "float64", shape = (13, 12, 6))#candidate|2538|(13, 12, 6)|var|float64
uop_2539 = relay.asin(var_2538.astype('float64')) # shape=(13, 12, 6)
output = relay.Tuple([uop_2539,])
output2 = relay.Tuple([uop_2539,])
func_2561 = relay.Function([var_2538,], output)
mod['func_2561'] = func_2561
mod = relay.transform.InferType()(mod)
mutated_mod['func_2561'] = func_2561
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2562 = relay.var("var_2562", dtype = "float64", shape = (13, 12, 6))#candidate|2562|(13, 12, 6)|var|float64
func_2561_call = mutated_mod.get_global_var('func_2561')
call_2563 = func_2561_call(var_2562)
output = call_2563
func_2564 = relay.Function([var_2562], output)
mutated_mod['func_2564'] = func_2564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_537_call = mod.get_global_var('func_537')
func_538_call = mutated_mod.get_global_var('func_538')
call_2585 = relay.TupleGetItem(func_537_call(), 0)
call_2586 = relay.TupleGetItem(func_538_call(), 0)
func_1292_call = mod.get_global_var('func_1292')
func_1293_call = mutated_mod.get_global_var('func_1293')
call_2591 = relay.TupleGetItem(func_1292_call(), 0)
call_2592 = relay.TupleGetItem(func_1293_call(), 0)
bop_2606 = relay.greater(call_2585.astype('bool'), relay.reshape(call_2591.astype('bool'), relay.shape_of(call_2585))) # shape=(12, 1, 6)
bop_2609 = relay.greater(call_2586.astype('bool'), relay.reshape(call_2592.astype('bool'), relay.shape_of(call_2586))) # shape=(12, 1, 6)
func_2009_call = mod.get_global_var('func_2009')
func_2011_call = mutated_mod.get_global_var('func_2011')
const_2612 = relay.const([-5,-9,4,3,6,-8,2,-8,-2,10,-9,-8,-9,3,8,-10,-9,-5,4,2,3,-6,-7,2,3,9,10,-10,-10,7,-5,2,-5,-6,5,10,-10,-5,-1,8,10,-8,7,-9,1,6,2,-9,-6,-7,4,1,6,-1,-4,10,6,-4,6,-9,-9,10,-4,-8,5,-1,3,-3,7,-5,-2,-5,-3,-3,-4,5,-9,7,-5,4,-2,-8,-7,3,4,-5,3,5,10,-6,-10,2,-7,3,-5,3,-1,2,2,10,-3,2,-6,3,-7,-2,9,8,-2,9,7,-3,-3,-6,10,10,-2,1,-3,6,3,-9,-4,10,10,-5,1,7,5,-8,-1,10,3,3,-8,-6,-9,-7,3,-2,9,2,-7,4,4,9,-10,-9,2,1,-1,5,3,6,9,1,-5,-10,1,6,-5,1,4,2,-1,8,-9,3,-4,8,-7,3,-1,4,-6,9,5,-1,-9,-7,-4,-2,1,-3,-4,-10,9,5,-6,-3,-1,-6,-2,7,7,-10,2,-4,-7,6,9,4,-9,9,8,-8,4,-5,-10,-8,6,-10,9,-9,-4,-8,1,2,-9,-7,-4,-5,-8,7,-1,-7,-10,-3,-4,5,-9,2,5,2,-6,2,-4,10,-5,10,-9,-3,5,-10,-10,8,8,-1,-3,-8,2,10,-6,7,-7,-9,7,7,-10,2,2,9,-7,4,3,-2,-3,-2,3,2,8,8,3,-9,2,3,1,-3,-4,10,-2,-4,-5,6,8,9,9,-3,-3,-5,4,-9,2,3,1,-3,6,-8,6,8], dtype = "int8")#candidate|2612|(300,)|const|int8
call_2611 = relay.TupleGetItem(func_2009_call(relay.reshape(const_2612.astype('int8'), [150, 2])), 0)
call_2613 = relay.TupleGetItem(func_2011_call(relay.reshape(const_2612.astype('int8'), [150, 2])), 0)
output = relay.Tuple([bop_2606,call_2611,const_2612,])
output2 = relay.Tuple([bop_2609,call_2613,const_2612,])
func_2616 = relay.Function([], output)
mod['func_2616'] = func_2616
mod = relay.transform.InferType()(mod)
mutated_mod['func_2616'] = func_2616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2616_call = mutated_mod.get_global_var('func_2616')
call_2617 = func_2616_call()
output = call_2617
func_2618 = relay.Function([], output)
mutated_mod['func_2618'] = func_2618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2076_call = mod.get_global_var('func_2076')
func_2078_call = mutated_mod.get_global_var('func_2078')
call_2619 = relay.TupleGetItem(func_2076_call(), 0)
call_2620 = relay.TupleGetItem(func_2078_call(), 0)
var_2642 = relay.var("var_2642", dtype = "int64", shape = (15, 14, 11))#candidate|2642|(15, 14, 11)|var|int64
bop_2643 = relay.not_equal(call_2619.astype('bool'), relay.reshape(var_2642.astype('bool'), relay.shape_of(call_2619))) # shape=(15, 14, 11)
bop_2646 = relay.not_equal(call_2620.astype('bool'), relay.reshape(var_2642.astype('bool'), relay.shape_of(call_2620))) # shape=(15, 14, 11)
output = bop_2643
output2 = bop_2646
func_2647 = relay.Function([var_2642,], output)
mod['func_2647'] = func_2647
mod = relay.transform.InferType()(mod)
var_2648 = relay.var("var_2648", dtype = "int64", shape = (15, 14, 11))#candidate|2648|(15, 14, 11)|var|int64
output = func_2647(var_2648)
func_2649 = relay.Function([var_2648], output)
mutated_mod['func_2649'] = func_2649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_592_call = mod.get_global_var('func_592')
func_593_call = mutated_mod.get_global_var('func_593')
call_2692 = relay.TupleGetItem(func_592_call(), 2)
call_2693 = relay.TupleGetItem(func_593_call(), 2)
func_513_call = mod.get_global_var('func_513')
func_515_call = mutated_mod.get_global_var('func_515')
const_2717 = relay.const([3,10,8,4,4,4,2,-5,-9,-3,4,-4,-9,4,7,-6,-1,-10,8,8,-8,1,10,-6,2,10,9,2,-6,2,2,-4,4,-3,-8,8,1,5,-7,10,10,-5,4,7,-4,5,-8,-8,-3,-7,-1,-4,-4,4,9,1,6,10,-3,-1,-7,4,5,8,-4,6,1,8,10,9,7,-1,-7,-4,2,-9,10,-4,7,3,-8,9,-9,-7,8,-10,-7,10,4,4,7,-4,-1,4,-2,-1,5,10,-6,3,-2,-9,-6,2,-10,5,-4,-8,9,2,8,10,5,7,8,3,5,-10,10,-10,-10,2,3,-8,-2,4,6,-3,-5,-2,2,-4,9,7,-5,2,1,-1,3,-9,-4,7,8,-10], dtype = "int64")#candidate|2717|(144,)|const|int64
call_2716 = relay.TupleGetItem(func_513_call(relay.reshape(const_2717.astype('int64'), [12, 2, 6])), 1)
call_2718 = relay.TupleGetItem(func_515_call(relay.reshape(const_2717.astype('int64'), [12, 2, 6])), 1)
func_159_call = mod.get_global_var('func_159')
func_163_call = mutated_mod.get_global_var('func_163')
var_2728 = relay.var("var_2728", dtype = "uint8", shape = (286,))#candidate|2728|(286,)|var|uint8
call_2727 = relay.TupleGetItem(func_159_call(relay.reshape(var_2728.astype('uint8'), [13, 11, 2]), relay.reshape(call_2692.astype('float32'), [1, 432]), ), 1)
call_2729 = relay.TupleGetItem(func_163_call(relay.reshape(var_2728.astype('uint8'), [13, 11, 2]), relay.reshape(call_2692.astype('float32'), [1, 432]), ), 1)
func_276_call = mod.get_global_var('func_276')
func_279_call = mutated_mod.get_global_var('func_279')
const_2737 = relay.const([-0.665484,-4.681960,5.565361,-6.190394,1.927352,2.321521,-6.102400,-1.188756,-8.398559,-9.535261,-2.082448,-0.984449,-0.763065,-8.614619,-0.508220,-6.083475,-3.986641,-7.040519,4.103153,3.954169,2.066432,-3.073066,-2.270123,3.268199,0.626316,4.240459,-7.863262,8.512756,2.045377,-2.653458,6.535184,-0.579484,-0.313100,4.933532,9.154734,-6.447888,8.000911,6.062201,-3.426303,7.748221,-8.910751,1.671819,-6.696401,-4.878504,4.523321,2.210806,1.413755,-8.822449,-4.518060,0.582720,-5.821823,-8.667911,-2.349908,2.829735,-6.474332,-1.535153,-0.207515,4.018735,-9.209566,-2.421983,8.108958,-0.296754,-5.463540,-2.656194,-4.018888,-8.023448,7.757958,-2.315386,-5.761858,-3.539660,-7.010705,-0.318800,6.686891,3.598394,0.823878,4.432427,9.909876,1.138890,-7.021230,-8.128595,3.152437,-5.899125,9.733054,-6.712319,-0.135160,5.037096,9.732667,4.806259,3.810816,-7.914587,4.304552,4.197572,9.367053,-4.931351,-7.718684,-0.573827,0.383410,5.430814,5.767090,6.610708,-1.746868,7.815948,-7.958950,-4.631166,7.155258,-2.955818,-2.664251,-0.653855,-7.113791,-3.667392,2.180973,-5.284379,2.094709,-9.814524,4.792071,-5.901619,-3.630213,9.260644,2.876519,-9.424073,-0.576839,1.568015,1.540042,-4.436092,-9.105935,-4.963953,3.226035,-0.728520,-6.231941,8.208109,-8.925284,-3.740174,7.432347,7.916801,7.648505,-4.234335,-0.640052,9.982275,9.398644,3.744983,-1.512928,6.080534,-7.518016,-1.703961,-9.595008,-3.587119,3.976755,3.183389,-6.935091,7.813402,3.015573,0.345262,1.354485,7.984104,-9.862746,-6.469732,-0.396849,-8.153179,-6.143984,-0.829373,2.712612,9.832960,1.004331,9.564131,-4.096690,4.503380,-7.160636,3.336735,2.785997,-4.584696,-6.698173,-5.197289,2.157159,5.463941,5.865170,-5.578194,6.084902,-0.284143,5.444316,-7.576090,-6.309439,7.451743,7.343383,6.093333,3.802031,-7.563100,-4.521267,-0.880969,-0.734945,0.241757,1.741721,-8.655480,-9.722593,0.186767,-4.736694,9.139119,-3.822033,-8.807489,3.204927,-2.588383,9.144358,-4.999629,-5.245904,2.792908,3.417433,-9.219450,5.476797,4.758862,3.910802,7.393987,-5.076510,0.821087,5.120693,-4.371713,4.970768,1.598421,-6.241758,-5.425476,-4.231618,7.957406,9.855864,2.135537,-5.979483,-5.579436,4.804105,9.886358,-1.198173,-5.942296,-2.626354,-6.601608,-6.701722,0.592787,-0.578700,0.662440,9.071630,-4.627727,-3.308903,0.795435,-1.140485,4.589686,1.778176,5.330794,8.398668,1.537090,9.166554,6.534390,0.617960,-3.780498,-8.206462,4.933772,-0.872088,-7.376135,0.714661,6.714525,5.090489,1.074128,3.708490,-5.782676,1.079768,9.925386,-2.308472,-0.921883,6.958311,0.619031,-2.596768,1.398141,-3.904346,8.003557,-5.162373,7.031275,0.883938,-9.279397,9.681481,7.442194,6.980180,5.517307,5.740395,3.249251,-1.897666,1.730152,0.426200,4.350554,-2.587777,7.978514,5.217622,1.398054,-0.703280,-9.819730,-2.856568,-3.626569,-4.409947,9.414459,7.080459,-9.578328,9.019767,-9.513257,-0.243989,-0.220592,-1.229798,6.872994,-5.359719,5.810705,2.379735,9.120529,8.633183,9.829991,2.190757,-0.943957,6.076388,8.234567,-7.797586,-7.495740,7.147280,6.374459,-8.327929,-6.464010,2.183989,2.172516,0.764872,1.922228,-9.200212,-4.562336,8.095510,-9.643849,0.242790,-2.692424,0.561361,-7.632881,1.963365,0.360826,5.597372,2.555619,1.703064,2.629141,0.457531,7.616284,3.144819,4.069362,-9.726866,7.230696,6.513640,1.307186,-0.984711,-9.929405,-6.321676,-1.739817,1.927015,-6.033042,-9.058075,8.586127,-8.432583,-1.283812,-8.325354,7.029907,3.981980,-6.062592,-2.692946,-7.547224,5.510301,-6.942890,-6.422424,7.409008,-5.240408,-9.943359,7.781053,-0.218125,-2.160665,7.533495,5.616786,-4.323674,-0.920602,6.196240,-2.250539,9.721950,-4.431867,3.309450,-3.642189,-4.553053,8.771225,-7.637825,-7.117962,-5.737759,9.122386,8.826190,-1.211534,6.860861,-6.807668,1.917500,-8.738002,6.449881,5.067545,6.314366,6.068088,-8.570494,-0.446989,-2.057195,-1.618646,-8.205794,-8.836708,-7.284546,3.034836,1.504603,-1.849876,-8.342449,-6.899497,-3.091564,5.505919,2.918124,3.433689,9.533804,-5.105750,4.141919,-0.623563,-7.670396,1.603286,-9.485142,5.385701,8.588793,-4.062116,-7.509298,0.414986,-6.978618,4.840961,7.468289,-9.788955,-8.956304,-2.865665,2.235933,2.779290,-3.286460,-7.046134,9.736992,-9.927170,7.879207,4.511382,6.842402,-2.524135,0.728856,-9.835844,1.109425,3.527634,4.693424,8.895027,-7.754077,9.464266,9.290978,7.061322,4.676933,6.603867,1.049795,-8.262803,2.736540,-4.790099,-6.782294,-8.041636,8.204219,-7.806766,0.715146,9.428174,-0.860302,-9.285742,-8.850313,6.609626,-7.802572,9.365994,4.562936,-5.400239,-1.673588,6.759633,5.524977,-6.118908,4.912115,-4.558272,-5.702755,-7.749995,-4.946316,2.480059,3.222847,-1.185072,4.385636,2.329153,1.089737,-6.584003,-9.104829,3.903544,9.225959,2.232903,-5.662704,7.281465,5.507376,7.169724,7.138241,6.864045,9.729275,-6.833479,2.673054,1.078951,9.512963,-3.234602,7.117585,-4.500870,-0.244308,5.988168,6.524767,4.869190,5.544730,-3.804940,3.446815,3.844732,4.143183,-8.630127,5.048225,5.850443,4.951605,-1.872010,5.878258,4.957825,-5.686753,-2.198043,8.619214,0.929818,7.836560,7.997153,4.231030,4.250768,-9.210336,6.705449,-7.026806,8.453001,-0.593264,-9.021733,-0.362802,1.806420,2.658997,-8.360924,-9.076253,6.710596,4.217106,-8.894823,9.636405,8.587906,6.602731,2.652390,4.717577,8.134903,-0.850256,-7.495675,2.192577,-3.179024,9.982601,-8.110322,-3.430235,1.932330,-8.509964,-8.386228,-8.573831,-2.506194,-4.998541,5.372539,-9.936449,0.248106,-4.986483,3.860349,-9.206088,-0.912586,-7.475901,1.888952,-5.061707,-5.813046,-3.547625,-9.675971,-1.653243,1.763819,-0.782213,-1.056886,0.367390,-4.090247,9.887854,-8.130016,0.407298,-4.220872,4.773216,-0.981481,-8.217982,-7.061075,0.306269,6.629192,5.140944,-8.058573,3.784069,-9.505354,-2.743104,1.072429,-0.812305,7.348284,-2.900966,7.614490,7.681625,-1.640304,-6.360906,4.940816,2.535344,6.370832,9.446924,8.083419,1.049428,3.848791,-2.993799,3.341133,-8.843599,-1.774750,-8.330249,-7.399957,7.306969,-7.112295,-7.827261,9.019293,-7.290658,-2.971302,-2.307625,8.058377,-2.750078,7.809759,8.056376,3.936809,-2.757567,-3.023837,-3.123809,-2.406114,2.943187,6.237252,-1.613331,-0.500133,-8.111248,-8.440412,-3.149422,-2.836802,0.029451,8.230546,-5.340352,-7.315611,-4.013601,-5.883715,-5.572313,-0.104733,5.178856,1.431079,-0.079984,-1.685392,-0.257977,6.067660,-9.905144,5.477674,8.629331,-4.898959,-4.196590,-1.857887,-1.834751,7.503195,-1.263284,-1.472053,6.600062,2.358985,1.629892,-5.130120,9.432393,-5.153098,8.360918,6.690566,-2.777915,8.318261,-0.379916,5.113878,-1.806193,0.949538,-7.994816,-5.634788,1.562202,5.947950,6.424437,9.637113,0.133507,5.262538,5.990382,-6.303932,-6.047564,-9.083958,2.685548,3.280137,-0.432525,-5.449251,9.409088,5.924005,6.395571,4.920304,-0.390701,5.571621,3.142394,0.588426,2.400167,-6.354044,2.463153,-6.126061,1.004358,-0.555331,8.250072,-9.757387,6.738695,7.492296,0.006019,3.785501,8.570691,9.486475,3.367420,-9.863088,-1.742225,0.265051,0.698995,5.564545,7.708069,8.237151,-7.735488,5.485948,3.725479,-3.785649,-6.896768,-6.454449,-1.563280,-5.816221,-3.250933,-1.645360,9.014617,-1.932658,-0.438722,5.359203,1.322472,-0.147522,4.481762,9.178148,-0.046014,9.459944,-3.571723,0.425437,2.922668,-7.081658,-3.812901,8.579255,-2.002332,-7.090400,7.634411,9.441214,-6.524571,-1.310760,7.373946,-2.469147,-6.214342,-4.298118,-0.539874,3.193380,7.528032,1.562525,2.551759,-8.429927,7.778582,-4.131128,-6.859243,2.617481,4.257264,-9.277256,-2.012618,-6.533270,-4.595687,6.326119,-9.718312,6.994281,-3.801084,3.261458,7.505072,-3.753614,2.025800,4.664295,-8.370714,-6.894974,-3.369527,-5.221596,-3.841726,7.676246,-5.502892,1.075291,-1.911191,-3.853157,6.927621,-3.821319,6.864246,5.299958,6.533579,7.853951,-1.397626,3.286518,-0.465095,6.418551,-1.282227,-0.653704,7.909226,-5.497602,-6.162256,-5.354658,-2.245615,-5.878124,5.141940,-4.348300,-6.362026,-7.204453,-1.709180,2.736285,-8.462817,5.953417,-4.277057,3.904977,3.874503,1.945755,-9.657571,7.573530,-4.790095,3.226687,-6.396643,-2.496758,2.957004,0.118611,-4.499651,-3.894324,2.010440,7.671835,9.318774,4.625532,-4.450316,-5.295754,-9.252625,-2.238609,2.795811,6.019816,8.392106,-2.043489,-3.850296,-6.687285,3.114683,6.801687,-7.220159,-0.224701,6.529825,-5.144682,-5.038633,3.495230,2.568092,7.915654,0.872189,-1.516230,-7.214968,4.580712,-6.541187,1.340522,-0.871368,-3.747400,1.364369,4.209864,-2.894521,0.819379,-2.345480,4.156774,-3.786968,1.365218,3.255865,-2.385552,-6.128603,7.445494,-5.796417,-4.612397,9.202193,8.762670,3.169835,-3.915903,3.875691,-9.565418,-6.826186,5.739236,-1.816877,-6.842833,-5.156035,8.420753,-5.787290,6.224279,3.867980,9.266055,-0.057293,-7.451817,2.930694,2.332633,-3.259690,4.794891,1.266704,6.927439,6.807518,-7.478359,-9.392633,-1.655237,-1.226913,0.682433,-2.042849,-2.257093,-5.708411,-0.097854,2.293739,-2.547502,-3.143167,-0.933955,-8.898845,5.000269,3.096197,9.943111,-1.903736,-0.493013,0.981368,-7.489411,9.230872,-3.244283,9.287390,3.674561,-5.670632,-1.101315,7.477740,-1.030728,-2.042816,2.018888,0.061758,-2.754838,0.051957,-9.038627,-2.422565,-9.162054,-8.400820,2.686693,7.074954,-4.923730,-2.429990,-4.171424,-9.918790,1.006559,6.058931,-7.677312,2.982262,-7.009724,-0.515377,7.095197,9.758426,-2.399919,-2.856383,-5.851704,-9.293192,2.098611,1.844204,0.364525,8.335121,5.356345,1.971507,2.085390,-1.208057,2.426720,2.560671,6.366965,-3.981271,-5.516134,-2.699332,0.066723,9.891091,0.044840,-9.490967,-7.939041,-0.661532,-5.941209,-0.372991,-2.801800,6.250411,9.202889,5.217030,-3.667872,-6.246157,-8.380324,5.547958,2.658570,6.135971,6.110496,2.866049,6.774057,7.186550,-1.936874,5.777682,-4.860953,-3.204202,4.570056,3.078170,-5.883267,-8.098902,-7.263203,-0.174642,9.720882,-5.663441,9.492996,-6.076762,4.558315,4.447458,6.107529,5.672425,1.484574,3.767471,8.056788,-6.058094,-0.410673,-2.064807,-1.746662,1.310700,-1.884515,3.173452,3.316831,-0.170324,2.790039,-2.628982,6.133588,8.106802,-1.788536,6.459881,8.037208,9.770783,7.100056,-4.526973,-1.515983,7.766840,3.128379,-3.986041,-1.167371,-9.666882,-5.199439,2.828991,-3.165653,9.519418,2.559794,-2.062440,-4.975239,8.277858,7.785397,-3.325015,6.055050,8.585646,-2.820820,8.119042,-4.559176,-9.583991,5.755088,-4.405999,-2.641682,-8.153439,3.234855,-0.199315,-7.237431,9.957207,4.878571,3.192689,9.363559,-6.937003,-8.075229,-3.427579,4.850189,-1.221350,-3.953580,-3.064247,-6.687321,2.845628,2.570923,6.677066,1.636591,1.545135,-8.096980,1.582190,3.857271,4.212930,1.717110,9.619411,4.797573,1.179256,-8.573010,-3.487528,-4.629441,-4.273607,-3.583613,7.403963,-0.899096,-0.583249,2.112869,-2.895216,7.908219,6.005957,-1.465663,1.635269,-2.808896,9.585221,-1.838292,8.349969,3.598576,-6.951677,1.508939,0.783652,8.119865,0.568644,9.313555,0.411018,1.976497,-4.841273,6.635556,8.389371,-6.231842,1.441176,9.041809,-6.031746,-2.645768,-0.143259,-7.118152,-2.198786,0.457681,9.032332,4.047880,-4.139226,7.146769,-0.560582,-3.362972,-2.829508,1.142959,-9.937097,-3.307962,3.415173,5.502743,-0.582926,-2.901683,6.657552,-5.294891,-0.279011,-9.188164,7.561528,7.447982,-4.109444,9.632067,0.252694,-4.920397,0.046982,-4.387958,-5.168869,-2.896119,5.369935,9.916730,8.357993,3.676166,0.100460,-6.083373,3.668041,0.767959,2.054674,-9.919095,7.674885,-1.002307,6.625476,3.051285,2.146886,3.340377,-1.146444,5.728008,-9.377412,-9.141829,-9.023209,-8.918704,-5.337230,-3.610966,6.136448,-4.583848,4.599888,5.572162,9.092444,-2.650036,8.257157,-8.728644,-9.306070,0.922501,-7.016510,4.656904,-0.198691,7.671864,2.706983,-1.052194,-4.242749,4.585381,-2.222733,8.786723,9.696111,-9.987382,8.289146,7.005757,-0.067921,-7.053044,-5.368422,-0.080601,-8.501427,7.608523,9.982894,-5.787032,4.605679,3.706622,-7.550223,3.839670,9.960124,-4.033871,-2.164026,-6.192462,-3.216075,-6.030259,-5.489686,8.779767,-0.636613,-7.365088,5.337212,0.392199,-6.221494,-2.873590,6.811411,9.990649,4.429709,9.587070,7.924344,-3.768712,8.017999,-3.754802,2.460679,-4.829941,-8.731139,0.163165,2.619609,-8.038016,-1.536290,-5.878770,7.625252,-8.043761,-7.365836,-7.184804,3.864311,2.045445,7.216396,5.193151,-7.557402,-6.238056,-2.862973,-1.460373,7.975389,-0.554480,6.693870,3.473939,-4.709564,7.863643,-4.516876,-4.606998,-7.366699,-8.480880,5.734943,6.510659,9.614859,-3.393892,0.833863,8.903269,-7.284698,-1.577562,-6.263323,-7.832723,2.401380,5.809323,8.072590,-6.213825,-2.216985,-6.769148,-8.093714,3.750365,1.864034,8.286199,-8.730426,1.291044,-4.076591,-3.859817,-2.287659,8.735925,-0.891031,4.258967,-7.192090,9.360044,-7.509450,-5.365372,8.916678,-9.722022,-0.130836,-3.392940,-0.212865,8.426214,3.638700,6.928798,-6.922031,-0.286767,-0.678337,-7.785937,3.783872,0.723735,6.123657,-0.018713,3.979907,-8.982617,-7.056213,-5.098884,-6.751661,-1.651962,4.801886,8.606515,-0.941324,-1.566852,0.222130,-9.510683,-7.582683,-1.123351,8.613093,4.679513,6.632476,-7.286200,-8.891746,-0.425799,-0.186474,-4.095096,3.762296,9.672383,1.044915,-0.830723,0.242060,7.960821,-7.855917,7.998416,-8.877830,-3.868855,-1.499114,-5.661393,7.203005,-7.442326,7.987275,6.406972,-5.665654,-4.591441,-1.607767,7.332403,5.543279,6.123165,-2.190552,-0.956991,1.558831,1.254824,4.496096,-7.889477,-3.428556,4.059724,-2.542379,-9.755481,7.107061,-2.688177,6.091880,7.718409,5.670469,-1.530719,-5.970036,-3.464899,7.221470,0.622822,3.924808,3.598654,-2.114786,5.808656,1.978300,-6.320826,4.434643,-1.961014,-8.198932,8.756988,3.963637,4.972848,-9.332631,2.849660,3.243130,6.438735,6.472249,7.264298,3.882775,-0.941981,-9.055682,5.658153,1.789374,5.191604,-6.236332,8.618632,-7.685867,9.696050,0.884381,2.999556,2.316005,1.297171,1.774274,8.212727,-9.095037,-3.684020,-6.435476,-2.616255,0.693419,9.168733,-0.568604,2.168443,5.322463,-2.788417,-6.849716,-2.788160,-7.298611,-4.400819,-6.168727,-0.426892,9.643458,2.704652,-2.845189,1.747383,5.057422,5.348664,-5.862020,9.994973,6.649437,-0.274418,6.953696,-3.015476,-6.416635,3.262550,-1.140215,9.540302,-6.040374,9.254704,-9.961257,5.763219,2.199698,-5.723779,0.150354,3.980598,3.967295,-4.464228,-9.233551,-2.638531,1.480165,1.050911,9.813477,9.680234,-2.924554,-0.513405,-9.531573,-1.888664,8.401258,2.069822,-6.928397,8.631380,-6.958585,-6.027212,-8.956785,3.834305,1.064686,6.139430,-9.008994,-7.142252,0.618968,6.919902,-6.312075,0.647104,-0.997787,8.789618,-3.350745,-1.473972,-4.378609,6.414505,0.374986,1.737154,-1.192868,1.957155,6.857619,3.266395,2.365928,-3.777500,-1.663368,9.576467,-3.553555,-3.866517,0.634385,6.723389,6.036234,9.795285,-0.330800,2.760146,8.669324,3.508917,7.025463,-0.053643,4.124429,-9.029644,-9.580596,3.684779,-8.668801,2.420725,-2.590441,-9.306903,-4.310035,3.737443,-0.981144,7.686187,6.481614,-0.487423,7.868011,3.446607,-7.860577,-0.688454,4.871221,1.517498,2.795114,-5.463567,-6.048188,-1.058511,-8.191203,3.079711,-4.824598,-3.018798,6.597574,-7.435190,0.840761,5.308787,-1.494541,3.162658,9.774417,6.410709,1.199411,8.603589,-8.038106,-8.115338,8.521974,8.870664,-2.592073,7.702572,4.060586,-6.655633,-9.103511,-3.587261,-9.000209,-8.927068,-1.316737,-1.752591,6.587129,6.782606,5.357714,-1.191741,0.798378,7.835173,-2.194837,9.828417,-5.011944,-8.092666,-8.654046,8.763519,-8.729670,-2.958514,-8.359509,4.417154,-8.189629,4.290743,-4.202153,-8.879892,-8.124729,-7.635076,1.789210,-0.798986,0.071801,-9.512420,3.342795,-4.403251,2.795284,-1.100664,-1.229159,-1.872403,0.440797,-7.672729,6.514041,5.745215,-4.139635,-4.637008,-0.746053,-6.461938,-5.128192,1.461261,-6.697561,5.585331,-3.751764,9.707823,6.043436,-5.307307,-9.241176,8.977903,3.809567,5.900909,-8.545531,8.123676,-1.374663,-2.232909,-2.825680,-7.164420,-7.925476,8.651983,1.767401,9.342969,-1.637914,9.424375,-7.992483,-9.556041,-7.511372,-1.411259,-4.610086,7.580423,8.750733,7.055837,1.959576,-7.678211,2.620836,-8.921463,3.563443,-3.725577,1.217955,-9.721903,-2.730588,-9.584787,-5.789987,9.842977,-5.761896,5.691386,-6.125305,-4.276219,-7.229689,7.747053,-0.555952,-4.125140,3.801162,3.002223,2.336884,2.082017,-9.341356,-6.801480,-5.590615,1.294725,-3.247281,-8.267126,7.462329,-3.638939,2.551905,-0.540320,5.893793,1.265901,9.055154,-2.273301,-8.668842,-9.713466,0.442729,5.472472,-7.816422,-0.780320,4.169070,6.372948,6.028732,-9.526597,-9.922621,-0.764624,-6.838925,-9.635890,-9.265478,-8.147717,-6.160976,-1.936585,8.568545,7.609043,-2.866815,-4.127755,-1.496207,8.103726,2.316362,2.956198,-1.977630,9.241003,9.389232,-7.558238,-3.174425,4.990448,5.201924,-9.856088,9.790052,-4.972496,-3.428080,-6.907343,-4.380839,-8.231281,8.632015,9.836283,-5.440705,-0.217238,9.545416,1.555888,3.965635,-2.999893,-8.532736,8.785304,2.794420,-3.498374,-7.151112,-0.268839,-7.143045,-5.995996,-1.042545,5.838662,5.670488,1.212534,-2.707263,-1.015700,0.685774,-6.712521,-0.884619,9.553743,2.804301,0.282811,-3.437627,-3.160690,-7.010738,0.436512,1.165145,3.996039,-4.301946,9.541468,-7.053013,2.239882,-5.247403,5.937839,7.093035,-0.007163,-4.372711,1.247471,-2.937950,1.119011,-9.578814,2.729130,6.318299,-4.025029,5.816860,-2.920797,-5.805817,6.539517,1.101771,3.909081,-2.087691,6.613701,2.959318,8.025592,1.511335,-7.958977,9.577057,5.758213,5.538825,6.613929,2.535102,-7.992806,5.001963,-5.055219,-0.322633,7.811161,-0.896145,-9.940040,9.017923,0.588467,-0.874269,0.669635,4.260557,0.305879,-3.192538,-1.174993,-6.740316,0.766037,-9.228415,5.297360,2.724423,9.575314,8.897567,0.414871,-7.637426,6.192107,0.877753,-4.358270,2.195524,4.621243,-5.885064,9.439535,-5.661298,-3.553583,3.488148,9.842356,5.973759,-7.327759,-2.335114,2.490183,-1.226628,-4.474311,9.230358,-0.642437,-8.606993,7.506830,3.124171,4.053181,8.103834,4.507040,6.130898,-7.479131,8.191598,-0.651154,-7.466629,-1.831596,-5.841708,-4.880056,-0.984260,4.606039,-7.170504,9.124396,5.739162,1.673005,3.545843,1.217801,-5.212153,9.987427,-0.660435,7.846019,9.408501,6.347302,-8.973930,-3.123232,4.819679,6.829229,-5.160678,7.207109,-7.078240,-4.821561,5.343428,-3.145530,7.106837,-6.679324,2.540897,4.043744,9.052799,4.780889,-7.547610,-7.173562,4.671753,-7.018392,3.070794,2.045034,-4.441563,7.746917,-8.375579,1.896131,8.270688,7.815360,-9.807292,9.306139,-1.052007,2.778101,-7.217999,-9.349814,-4.539797,2.966336,-3.476618,7.793047,1.829847,1.340730,-1.664089,0.435451,-3.814880,1.403577,8.163129,-8.812947,9.426973,1.570601,-5.552367,9.626106,-8.198753,-1.412879,4.829637,2.547307,-1.251736,-9.235661,-2.145598,-0.920865,6.885611,2.522698,-1.031138,-9.285925,8.166704,-8.684385,8.151097,-1.160558,-5.231741,-7.713052,-4.787889,-4.753860,-1.798058,-8.705291,9.848871,0.816772,-2.794568,2.971769,5.829587,-3.624591,3.714222,-4.227534,-8.005327,-0.850983,4.791296,-2.428989,5.236922,-9.111137,-7.025752,-9.286827,9.441281,-1.048453,-7.733035,-4.475536,7.519715,-3.601534,8.821631,3.909124,-5.479044,4.455801,-8.397517,9.590863,-6.376714,-8.898175,-9.372541,-0.508780,-3.803250,9.164023,5.569817,-2.831771,-7.257765,6.748211,8.855445,0.815086,6.527303,9.603453,3.695675,6.184474,-7.118285,-8.371739,-7.598276,-9.244627,1.401786,2.846231,-2.480137,0.661948,-3.453991,-9.810510,5.911865,5.127858,-7.734897,-1.108016,-1.332124,-6.366424,8.231823,0.068289,3.388115,5.683632,-0.648155,8.665755,-3.081326,2.014500,-0.614144,2.262948,-9.598977,-1.350247,0.702347,-4.615617,-4.163688,2.071335,8.971766,9.913714,-3.063662,2.825570,2.359792,3.290698,5.757643,-3.157576,7.869383,3.100461,1.511133,-4.975985,-8.263082,-9.372227,6.036745,6.762449,-7.989186,-0.652740,3.418434,1.568815,-2.385319,-6.144010,-0.515113,9.140321,-5.620841,0.328558,-3.730494,2.210267,-0.077107,4.988467,2.095020,-9.948438,1.701194,-5.725680,-7.152159,2.561539,2.233320,-7.870430,0.252511,7.700038,-1.685073,5.195983,-0.807293,6.520090,-1.729397,1.878547,0.395061,2.318450,-7.248331,5.716076,-2.300736,2.857913,7.568710,8.479320,-9.774776,-4.664996,4.835543,7.266629,-9.595367,-7.827029,-8.425925,-4.715291,7.356876,-5.680101,-6.678780,-9.086639,6.895572,-2.139264,4.572470,5.881885,-2.602953,-2.525255,8.348943,6.309484,-2.558642,-7.519873,3.236350,9.845452,-3.623271,-8.720383,4.839174,3.529832,4.528742,6.815289,7.831438,-0.366061,5.287521,6.449695,-4.469475,-2.998131,-6.974334,5.274096,-6.702315,-8.827554,2.283213,1.069032,9.018981,6.852134,-6.659679,6.758505,8.057449,5.255189,-8.957061,5.598850,9.351806,-0.406463,-4.077618,-7.482428,-2.178780,8.860537,1.640879,-2.198946,-0.260913,6.379489,2.098264,-3.265906,-0.321937,0.058280,1.073559,-4.240204,-1.691943,-1.849113,-4.173339,5.406055,-2.622292,-4.131589,6.146173,-4.738483,-3.115861,-0.458751,2.715500,-5.645724,-5.674198,-6.075345,-5.351560,8.326308,1.816324,5.884861,-2.400050,-1.982509,-1.661161,-5.519616,-7.803287,8.277439,3.135240,-5.953071,-9.167787,-1.955013,-3.330665,-2.762718,7.534071,3.496859,-9.769462,9.794457,-4.851645,3.437365,-3.247934,-5.439777,-0.370272,-0.775739,-7.453795,-7.697577,9.022997,4.097701,-9.245149,0.894735,9.090856,-5.281786,9.135941,-9.516368,-6.259601,-5.843562,-1.239543,8.035890,-2.540198,-3.300420,-2.758823,-7.912891,6.879285,7.679454,7.121704,-4.485737,4.827118,-6.603851,-7.389162,-8.704604,-6.021687,6.737280,-1.707419,-3.303123,-3.049287,9.304513,7.243216,2.584721,6.173959,-3.342795,2.808339,-2.022024,-8.934103,7.711950,0.829421,8.493819,5.921199,-5.730790,3.026273,-4.742447,3.773341,-5.733325,4.785119,-6.537439,-9.896241,-6.679897,8.382144,-7.655419,2.412620,-7.671287,-7.864646,1.688454,-6.766054,4.462144,-8.235528,-9.939119,2.381703,-6.953401,-6.183079,1.693773,-3.542684,-9.125713,-9.811772,9.158590,-8.105102,4.390095,0.298580,-7.193107,-8.753790,3.045535,-0.834649,4.957345,-4.081622,-1.402613,-9.123337,7.427216,1.109952,-7.813960,-3.331459,-9.645143,2.425639,1.598657,-1.375667,-9.433203,2.786814,4.496146,4.223449,4.226556,-0.340034,-4.939287,-9.252594,2.449560,3.718260,9.023226,8.618011,4.669990,8.841097,2.897245,-8.541337,8.492637,7.147711,7.962486,9.953266,-8.858919,7.327517,-0.364822,-8.617007,8.589288,7.375570,-1.555098,-0.859651,7.989927,-6.829983,3.004849,-5.916898,0.112621,4.783626,6.966395,0.062471,9.625254,-1.568399,-8.022407,5.888485,6.677683,2.411011,-3.005267,4.007908,4.343851,-9.261879,-4.882646,0.353026,0.668995,9.305904,1.361728,-2.968255,4.512799,-9.027884,-9.157398,3.312583,-2.935774,6.251153,4.705675,-4.211846,-9.872824,3.102498,-0.774462,-8.076983], dtype = "float64")#candidate|2737|(2310,)|const|float64
call_2736 = relay.TupleGetItem(func_276_call(relay.reshape(const_2737.astype('float64'), [15, 14, 11]), relay.reshape(call_2727.astype('float32'), [432,]), ), 2)
call_2738 = relay.TupleGetItem(func_279_call(relay.reshape(const_2737.astype('float64'), [15, 14, 11]), relay.reshape(call_2727.astype('float32'), [432,]), ), 2)
func_2314_call = mod.get_global_var('func_2314')
func_2316_call = mutated_mod.get_global_var('func_2316')
call_2741 = relay.TupleGetItem(func_2314_call(), 0)
call_2742 = relay.TupleGetItem(func_2316_call(), 0)
output = relay.Tuple([call_2692,call_2716,const_2717,call_2727,var_2728,call_2736,const_2737,call_2741,])
output2 = relay.Tuple([call_2693,call_2718,const_2717,call_2729,var_2728,call_2738,const_2737,call_2742,])
func_2747 = relay.Function([var_2728,], output)
mod['func_2747'] = func_2747
mod = relay.transform.InferType()(mod)
var_2748 = relay.var("var_2748", dtype = "uint8", shape = (286,))#candidate|2748|(286,)|var|uint8
output = func_2747(var_2748)
func_2749 = relay.Function([var_2748], output)
mutated_mod['func_2749'] = func_2749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2076_call = mod.get_global_var('func_2076')
func_2078_call = mutated_mod.get_global_var('func_2078')
call_2761 = relay.TupleGetItem(func_2076_call(), 0)
call_2762 = relay.TupleGetItem(func_2078_call(), 0)
func_1491_call = mod.get_global_var('func_1491')
func_1494_call = mutated_mod.get_global_var('func_1494')
const_2765 = relay.const(-9, dtype = "uint32")#candidate|2765|()|const|uint32
var_2766 = relay.var("var_2766", dtype = "uint32", shape = (560,))#candidate|2766|(560,)|var|uint32
call_2764 = relay.TupleGetItem(func_1491_call(relay.reshape(const_2765.astype('uint32'), []), relay.reshape(var_2766.astype('uint32'), [560,]), ), 0)
call_2767 = relay.TupleGetItem(func_1494_call(relay.reshape(const_2765.astype('uint32'), []), relay.reshape(var_2766.astype('uint32'), [560,]), ), 0)
bop_2791 = relay.bitwise_and(call_2761.astype('uint16'), relay.reshape(call_2764.astype('uint16'), relay.shape_of(call_2761))) # shape=(15, 14, 11)
bop_2794 = relay.bitwise_and(call_2762.astype('uint16'), relay.reshape(call_2767.astype('uint16'), relay.shape_of(call_2762))) # shape=(15, 14, 11)
func_2022_call = mod.get_global_var('func_2022')
func_2024_call = mutated_mod.get_global_var('func_2024')
call_2797 = relay.TupleGetItem(func_2022_call(), 0)
call_2798 = relay.TupleGetItem(func_2024_call(), 0)
output = relay.Tuple([const_2765,var_2766,bop_2791,call_2797,])
output2 = relay.Tuple([const_2765,var_2766,bop_2794,call_2798,])
func_2800 = relay.Function([var_2766,], output)
mod['func_2800'] = func_2800
mod = relay.transform.InferType()(mod)
var_2801 = relay.var("var_2801", dtype = "uint32", shape = (560,))#candidate|2801|(560,)|var|uint32
output = func_2800(var_2801)
func_2802 = relay.Function([var_2801], output)
mutated_mod['func_2802'] = func_2802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_592_call = mod.get_global_var('func_592')
func_593_call = mutated_mod.get_global_var('func_593')
call_2815 = relay.TupleGetItem(func_592_call(), 1)
call_2816 = relay.TupleGetItem(func_593_call(), 1)
func_2076_call = mod.get_global_var('func_2076')
func_2078_call = mutated_mod.get_global_var('func_2078')
call_2824 = relay.TupleGetItem(func_2076_call(), 0)
call_2825 = relay.TupleGetItem(func_2078_call(), 0)
func_176_call = mod.get_global_var('func_176')
func_177_call = mutated_mod.get_global_var('func_177')
call_2826 = func_176_call()
call_2827 = func_176_call()
output = relay.Tuple([call_2815,call_2824,call_2826,])
output2 = relay.Tuple([call_2816,call_2825,call_2827,])
func_2840 = relay.Function([], output)
mod['func_2840'] = func_2840
mod = relay.transform.InferType()(mod)
output = func_2840()
func_2841 = relay.Function([], output)
mutated_mod['func_2841'] = func_2841
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2876 = relay.const([[[8.554761,0.610577,2.341575,4.078231,9.663805,3.648628,0.287117,-8.606251,-1.617675,-6.518835,5.675594],[5.200419,7.244175,3.551127,-6.510504,-3.332092,-8.871899,4.733266,-3.527303,-8.489323,1.976243,-7.851818]],[[-3.418641,8.858226,0.995172,-6.494454,-1.250438,-9.659637,4.037087,-9.113659,-7.585976,1.092898,-0.336923],[-2.822743,7.526441,4.435037,1.797551,-1.973308,-7.714725,-5.751580,8.728889,1.314362,-9.992303,-7.689304]],[[2.633441,5.364580,4.556606,-2.827928,-1.781174,8.793489,9.052142,-8.209435,-6.335027,-3.527713,-2.428701],[-4.548061,8.122683,7.807305,-5.444692,5.574679,5.543793,6.024657,3.919974,-0.791339,0.948961,-1.335733]],[[-6.836529,8.308450,5.345385,-8.590840,-9.906444,0.051611,-0.357657,7.213129,-7.972386,-1.136484,5.951996],[8.965369,9.645944,-9.081678,7.524305,1.149195,-3.627060,-6.429643,3.010370,0.446316,7.460188,6.963743]],[[-2.133976,-3.692409,-2.050644,-0.263792,1.021316,-8.602666,3.311755,4.854039,5.798522,8.906326,5.602976],[8.271292,-0.209406,-7.473142,-6.084807,8.215729,-8.620710,3.508584,-3.635036,-7.042492,2.696548,-2.218484]],[[-0.570767,8.133602,-1.034371,7.076578,-1.219430,-7.926489,1.100923,1.478322,3.404779,-3.736502,-4.091520],[-1.692511,6.657964,-1.337891,4.931907,-7.883553,-1.780707,-4.469669,-1.510979,-1.050236,-7.004501,5.368496]],[[3.010506,0.318926,4.342097,-3.620255,-0.987019,-4.037375,-8.444153,-4.914370,5.199635,5.590595,0.944738],[-6.489655,3.818383,-1.529346,-1.775724,6.269206,-3.902056,-0.510002,2.177166,-1.322530,1.215739,4.004467]],[[9.060376,6.182770,-9.928649,0.958747,-8.447035,5.064557,-3.360684,-9.924138,3.221539,0.522272,-1.447549],[4.909011,-1.329838,5.111943,-4.469976,0.666302,8.953020,-2.437974,7.528190,5.074770,-5.688119,1.060739]],[[-3.679165,1.830258,-1.866672,-6.805924,-3.488675,-6.748335,6.061487,-6.524266,-7.172815,4.519039,-6.327027],[-4.126969,3.108262,-5.914233,-1.721905,2.311470,2.487820,5.365411,8.300212,-6.517856,1.186166,-6.110597]],[[5.930574,7.544830,3.918599,8.005397,-2.854936,3.316347,5.896583,6.559035,-9.985934,-0.429413,9.816050],[1.658641,6.223123,-9.563854,-2.490483,6.687771,5.321642,6.761846,-6.876511,2.507304,-0.796164,-0.532121]],[[-1.397552,-9.192628,-9.040608,-3.346200,-6.906829,-7.943961,0.620875,-0.056834,-7.682861,0.421408,-2.536690],[-3.788717,6.585598,-4.799693,-3.421515,8.750746,-8.935077,9.303816,7.806012,6.536128,9.691556,4.393146]],[[-4.797591,-7.953881,-7.183650,1.636258,2.273514,5.121708,0.091675,-4.672403,-5.107313,-0.667349,6.188818],[-3.719667,8.336134,-4.093029,8.401320,1.523077,-4.371796,-7.344515,-2.894558,2.124339,2.090980,-1.518788]],[[-5.533015,7.736576,6.505481,-9.707768,2.271066,1.565463,-0.863441,-4.761283,2.141796,3.112448,5.356240],[-5.385344,1.005918,9.189988,-8.040378,0.307626,3.725993,-5.463842,-3.935773,0.552169,2.482064,-1.756140]],[[9.963130,5.808121,7.087459,-7.574340,4.126871,-0.346549,-9.748730,9.824876,8.085974,-1.805126,5.792991],[9.243723,2.849336,-7.182478,4.383562,-4.613058,4.731134,-1.660034,-2.666211,1.217740,7.741061,3.372563]]], dtype = "float64")#candidate|2876|(14, 2, 11)|const|float64
uop_2877 = relay.asinh(const_2876.astype('float64')) # shape=(14, 2, 11)
func_2076_call = mod.get_global_var('func_2076')
func_2078_call = mutated_mod.get_global_var('func_2078')
call_2883 = relay.TupleGetItem(func_2076_call(), 0)
call_2884 = relay.TupleGetItem(func_2078_call(), 0)
output = relay.Tuple([uop_2877,call_2883,])
output2 = relay.Tuple([uop_2877,call_2884,])
func_2901 = relay.Function([], output)
mod['func_2901'] = func_2901
mod = relay.transform.InferType()(mod)
output = func_2901()
func_2902 = relay.Function([], output)
mutated_mod['func_2902'] = func_2902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1833_call = mod.get_global_var('func_1833')
func_1834_call = mutated_mod.get_global_var('func_1834')
call_2903 = relay.TupleGetItem(func_1833_call(), 0)
call_2904 = relay.TupleGetItem(func_1834_call(), 0)
uop_2918 = relay.log10(call_2903.astype('float64')) # shape=(12, 4, 6)
uop_2920 = relay.log10(call_2904.astype('float64')) # shape=(12, 4, 6)
func_537_call = mod.get_global_var('func_537')
func_538_call = mutated_mod.get_global_var('func_538')
call_2931 = relay.TupleGetItem(func_537_call(), 0)
call_2932 = relay.TupleGetItem(func_538_call(), 0)
uop_2934 = relay.acosh(uop_2918.astype('float64')) # shape=(12, 4, 6)
uop_2936 = relay.acosh(uop_2920.astype('float64')) # shape=(12, 4, 6)
output = relay.Tuple([call_2931,uop_2934,])
output2 = relay.Tuple([call_2932,uop_2936,])
func_2940 = relay.Function([], output)
mod['func_2940'] = func_2940
mod = relay.transform.InferType()(mod)
output = func_2940()
func_2941 = relay.Function([], output)
mutated_mod['func_2941'] = func_2941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_223_call = mod.get_global_var('func_223')
func_225_call = mutated_mod.get_global_var('func_225')
call_2954 = func_223_call()
call_2955 = func_223_call()
func_610_call = mod.get_global_var('func_610')
func_614_call = mutated_mod.get_global_var('func_614')
const_2986 = relay.const([2.044160,1.358849,8.417011,5.717534,-7.483394,-1.705518,7.960605,4.746855,4.559222,9.192158,3.615716,2.600501,-8.921452,-1.547324,-4.440022,-7.847277,-9.180517,-3.577472,-5.720414,-1.309279,-3.374799,-1.175202,3.993483,1.536800,-9.749739,5.357447,3.657028,9.199056,-0.473806,7.720844,-1.113824,-0.989543,-3.793680,6.541620,-5.601432,3.285524,-6.753780,-0.195402,4.177848,-0.264581,-0.787780,1.845629,-6.530308,7.437943,1.832820,6.022107,-3.736980,-9.818091,8.086215,6.059382,9.680398,-7.490482,-9.529530,-1.778875,7.709008,1.896282,-1.897468,7.941251,1.736206,5.191202,9.013039,6.188486,-0.548446,-3.935772,7.767519,0.012790,-6.086755,-2.056890,-1.992715,5.765048,8.528806,8.101196,0.450056,4.228049,-8.792585,2.627715,7.195910,4.922837,-7.793171,1.417119,-9.690133,2.182890,7.982621,4.112945,-2.836173,1.441408,-6.063634,7.966186,3.058483,-0.914187,-1.211593,4.327902,-8.833435,3.189301,8.239890,-6.251543,-4.307135,-7.216458,2.790386,0.134405,-7.257766,-7.803068,-8.879410,4.853155,-6.515108,4.878747,8.325777,-9.877494,1.110901,1.667592,4.440697,-2.434353,3.279843,0.680799,1.914877,-3.225897,2.680582,-3.757035,-3.347242,0.540621,8.980261,3.728306,9.892483,9.375919,-4.394020,7.870294,-9.668802,0.021838,1.906650,1.834816,8.569412,-7.490191,-4.806668,-5.810945,-9.297036,2.272687,-4.401825,2.561422,-4.018105,4.237628,6.663278,-8.258189,-1.938134,8.230719,-9.008505,-6.138625,-4.888723,-6.048233,8.650542,3.139274,-4.737405,-9.288221,-7.158216,2.975671,-3.924934,9.537557,8.229938,7.023803,6.712993,1.412224,8.227685,9.567344,4.258122,-7.409260,9.667797,-5.540366,-2.514441,-0.176707,-6.917661,-2.061574,-2.631715,-7.567392,7.824056,-5.177508,-2.761206,5.341143,9.054829,8.893136,-1.987329,-8.546566,-3.403880,-0.576503,1.951051,1.604742,-2.101046,-1.904558,6.503206,-3.172548,-4.086581,8.221649,4.105704,9.278198,2.936698,0.668892,-7.316916,7.027513,-2.894028,-2.609141,1.087714,-0.158811,1.795361,-0.422597,1.681520,2.740956,6.731233,2.521018,0.203656,-5.047880,4.293438,2.440559,7.232759,-9.110137,-2.384914,2.429858,-6.793451,1.540807,-1.205536,-2.463062,-6.513836,5.603314,-0.249355,-4.051211,0.628152,2.434377,-3.304878,7.333655,3.522839,-1.018145,-8.943382,1.418915,3.531305,-8.620750,6.378945,2.046036,-4.673692,8.225698,0.193589,0.030077,-5.123528,-1.398068,5.067575,-2.640030,1.720372,-3.728678,-1.552565,2.139533,-8.202657,3.876928,-1.005845,7.205092,-1.795579,-8.422232,0.495291,-3.794318,-2.225455,-7.309750,-2.979357,-0.482455,9.492361,8.345442,4.357088,7.772415,-0.670475,3.649138,-6.188840,-7.390933,0.748802,-1.688318,-3.454222,4.986851,7.491486,-8.650122,-9.631336,-8.902183,8.239544,-6.412526,-4.520028,-0.257888,-9.287866,9.356588,-8.226896,2.517530,-4.305175,-9.453496,2.566475,2.723007,-2.346475,-1.809285,3.494996,-9.381858,8.916453,9.678966,6.483048,-0.428052,9.990644,-6.575720,7.837519,1.881158,4.031149,-2.883935,7.276199,-3.753254,6.401096,7.572752,8.071355,9.823130,-2.309517,-8.646109,-0.876819,7.757949,-0.498736,-9.933190,-2.999934,-3.010667,3.294181,-9.783356,-7.140855,-9.801775,5.746360,-1.206553,-7.512736,2.659491,-2.466988,-1.161452,8.331097,-3.187561,5.378054,6.147457,8.178944,3.681092,2.352821,8.509459,-6.282476,4.617370,0.500627,-7.860266,-5.401520,-2.859934,6.064513,4.873229,1.460654,9.420592,-7.091629,-1.283780,-1.083858,5.658030,9.794442,0.097485,-1.787165,9.261851,7.740802,2.943363,-6.574163,-2.440786,-1.456215,-9.937214,-9.097725,-0.759482,-3.274719,-8.804050,7.917935,-1.156898,-3.700402,-0.499739,8.794956,0.012405,-3.601456,-0.984400,-3.025626,-6.518788,-2.820888,-0.536459,-8.375991,-9.590684,2.329021,3.554010,-5.697155,1.993684,-8.921057,4.828526,-0.969036,-9.665146,-9.255770,1.087518,9.794100,3.663773,-7.747422,-3.518280,3.853133,5.944215,6.857528,7.424904,6.312527,5.761834,-1.270646,3.130671,6.741136,1.410014,-5.180930,-3.715729,2.053279,2.864176,-5.967269,-1.822606,-9.924921,-4.662203,7.120761,1.222172,3.330589,-4.349240,-3.530280,-8.078896,7.710312,4.644695,-1.840003,6.630253,4.327604,0.989213,4.954976,9.280134,6.918031,7.055678,7.227445,3.587321,3.120109,5.077027,6.817192,5.408344,0.926336,-5.466486,2.839021,4.146560,4.251320,-5.720742,2.125462,-3.925904,5.073428,2.066870,4.619372,7.814701,-5.130360,-1.542691,-2.169168,-0.857058,-4.214406,7.446748,-4.371316,-6.042039,6.553899,-3.467269,1.170012,-5.694600,7.755086,2.968311,-2.689630,2.157672,8.012188,8.049968,-7.155349,-4.706277,-9.740351,-2.581124,-6.641639,-4.752180,2.066162,-0.560050,-0.598092,3.799311,-5.805558,-9.730951,-2.021832,3.817832,8.369114,9.998139,-1.973009,-8.879282,-5.440357,-2.138908,3.662303,-5.348667,6.526557,2.898976,4.364731,3.778891,-9.252407,9.767303,-2.789729,-5.451122,5.043281,1.373616,4.809267,-6.993077,-5.642238,5.618672,-4.546394,-2.631554,-8.504341,8.316715,-6.406800,-9.789924,-0.805864,2.036068,-3.350946,-4.445883,-6.179212,-7.725801,1.368234,0.003273,8.460738,6.056191,-6.279392,6.831755,-9.403926,2.100555,-5.871216,3.775271,7.664068,2.836662,-8.836563,8.044857,9.570797,3.688530,-2.201916,-4.404113,3.233411,8.208050,2.964520,-5.144567,4.254744,-8.458414,3.455296,-2.399160,6.467099,0.562763,8.179186,-8.573781,-8.204149,4.312779,-6.756129,-9.658324,-5.806028,2.065196,-6.148354,0.502373,3.393341,9.298995,7.497895,6.354089,5.002958,-4.304049,4.716540,4.684266,-6.402829,9.745502,-8.045069,-8.093849,7.238662,-6.817137,-8.665185,-0.116438,-3.514403,-1.866448,4.175299,-1.480500,-2.662028,-0.879264,2.607422,2.355474,-5.332999,-0.599823,-6.822557,8.612427,-5.554205,-0.528195,8.808378,4.471992,-4.073990,7.636979,6.751481,8.735559,6.897298,-0.774893,7.612286,-3.389339,-4.436982,9.249294,-4.055327,-9.322117,-4.935493,8.306001,6.492739,9.598021,-7.522537,-8.704574,-9.531772,-3.827487,5.247238,-6.892657,-0.426052,-6.152966,8.565245,-3.834705,2.784471,4.637494,4.944152,5.430635,2.840917,-4.966739,-0.285565,0.031473,-3.153559,-8.501033,-3.895726,9.470783,4.940856,5.223827,5.649452,-0.690413,6.443585,-5.429648,-4.777742,2.833574,8.551874,-3.588067,-7.794243,-9.183719,0.502833,-7.587663,-6.921656,-9.809230,-1.968178,-9.089865,7.259503,-6.883636,-5.473066,8.695303,-1.958722,-6.616856,1.057386,8.719680,8.105779,-4.244657,-8.379180,-9.511047,-3.595355,7.663406,5.386075,-8.078207,-3.638627,5.789621,-3.312426,-2.271979,0.070085,-0.285458,7.565229,9.393780,8.392403,0.354655,-3.914565,-0.927311,-8.303078,1.518095,-8.263974,6.179940,-8.545153,1.128074,4.905177,-1.668556,0.327973,3.151232,-8.959140,3.291804,2.158873,-3.372717,-4.479413,-9.116976,-0.746331,-2.937012,-8.279934,8.803668,-9.932667,7.472223,-2.557259,2.974785,-2.100118,-5.106100,6.742816,-1.461911,-3.004151,-2.385127,-4.614456,-0.819769,7.392143,9.796979,-5.477247,-6.851316,9.190199,-0.362399,4.536853,8.383576,7.065697,5.205883,6.676456,9.838365,-2.535473,9.094614,-6.941184,1.550278,-7.162304,5.253534,1.125800,-3.717504,4.423347,0.075153,-1.732343,-7.533247,-4.406129,-4.463939,-3.144515,-7.777948,1.744842,1.214871,8.883487,1.106682,1.316998,-7.056016,4.713182,2.384931,3.314622,4.635370,-8.348386,1.024408,9.042479,-7.704023,2.025386,-4.170862,-6.672555,2.646426,-5.754272,-4.813506,6.736874,4.214374,1.275645,-3.471502,5.749468,-5.813892,5.331691,-7.433697,9.281536,-8.243252,8.811225,8.912716,-8.637472,3.172924,-1.977533,-7.113024,-0.988269,-9.395982,9.893520,4.027029,-1.173361,-4.793807,8.744251,1.852105,5.050693,-3.530489,-0.187157,9.103823,-8.589716,-6.079804,-6.793389,-0.817217,-9.739018,-6.377722,9.277454,-4.957905,6.982212,-1.883754,3.710546,6.948115,2.133039,-2.790789,4.964077,0.269927,-6.607706,-7.222993,-8.948276,-6.887424,6.269276,-0.063516,-8.259344,7.949097,5.377089,-2.279388,1.003652,-5.090202,4.650494,-6.228259,-0.865688,-2.921717,4.505209,5.267034,-7.485098,-2.960160,-2.766290,-0.304793,7.718487,-0.613555,3.101999,-9.836927,-1.624206,-5.678987,4.273671,-4.185726,-1.701570,-9.850562,-5.233212,8.800438,5.300301,-1.263352,4.629194,-2.894363,-4.777375,7.469610,-4.086134,-0.518323,-1.185396,-4.839635,-6.645634,2.093720,-6.793905,-6.291401,1.559209,8.251283,-9.868336,-1.256876,-6.988483,-3.293798,1.242511,2.020264,2.837663,-8.712991,-1.409915,0.907184,-0.884702,5.482761,4.504956,0.180251,0.022176,2.929452,-7.084101,9.561745,4.591944,-4.712958,-1.484897,-0.664701,8.706393,1.453151,3.154770,-1.263647,-6.434756,-1.251283,-1.261213,-4.017499,-8.546522,9.853284,-5.109663,-3.534269,-7.485743,-0.725153,-3.341555,6.442672,-9.126870,3.091003,2.786776,0.265419,2.892796,0.081149,7.150423,2.689988,-5.967277,-9.254314,-8.211002,-0.619500,1.591991,8.817108,4.707452,-7.454419,1.784211,9.431655,7.754281,-7.672979,2.025920,-4.614842,-4.927168,-1.063301,-2.511308,5.458802,3.683664,-9.429545,-3.621578,-8.301906,-5.127455,6.956134,-8.873461,-5.474375,6.304059,-0.291722,7.266097,1.971945,9.801755,-4.659646,7.730384,-0.931412,7.690465,3.137439,-9.869544,2.458238,-9.992718,-1.099052,0.913024,7.726243,-8.748115,0.137190,-6.080300,6.491340,3.412670,-2.113109,5.318082,4.764432,1.353338,-3.911864,0.310054,-2.380987,6.406762,-8.090611,9.171086,2.541995,-8.308527,8.572690,-2.361418,-1.019994,-6.166005,-1.898977,0.010214,-0.175040,-6.950561,-0.733718,-0.777053,-4.108125,6.507151,8.458095,-6.995727,-4.514113,7.987719,9.543016,-1.900686,6.835325,-5.629285,-9.440854,-8.819081,-3.405208,-3.228004,-2.335849,2.693728,-5.659895,4.938540,-9.722399,-9.264541,-8.452546,-6.455803,3.514689,9.793632,-6.727388,-2.446938,5.740039,0.217641,-8.636772,-1.070500,2.578120,2.656853,6.246000,4.820454,-8.728230,-1.008196,2.865871,-0.191006,-6.910294,-8.763449,-7.830661,7.763266,1.467592,1.461569,-5.665065,-1.684825,-8.249220,0.680506,-8.045260,1.523965,0.861253,-6.335125,-3.637283,3.579520,-9.632057,6.269815,5.806525,4.088665,-3.716985,-7.245491,-0.746768,-2.639111,-7.958564,-8.065120,-5.553955,9.807001,-2.452900,-5.697264,-0.048184,5.987377,5.824409,5.380614,5.027840,8.070516,-1.841601,8.291929,-0.002208,9.145937,5.554109,-7.558102,6.830016,0.372861,3.384102,-1.173376,-3.004802,-1.401986,0.312031,-3.624049,-1.986494,-9.580603,6.209872,-6.527407,6.952190,-9.202281,6.244232,-2.645901,-2.202646,-2.616583,6.264409,4.070640,-0.244945,-1.984695,-1.687549,4.839472,-2.080429,7.583458,6.586758,-8.232817,4.169183,2.893205,6.750572,7.763396,-2.929813,5.491694,-3.316492,8.642817,-1.215200,-0.758003,-3.652968,-5.663296,3.030769,-4.831591,7.321880,8.298481,4.249725,4.215844,-3.984620,-9.320606,6.084747,8.342628,-9.392872,-7.047020,-9.264658,8.523166,-7.765387,6.350350,9.556782,-0.013749,-0.937537,2.034412,6.321193,-5.743404,2.553340,-0.557085,-7.913138,9.244223,-0.468144,-5.992409,-3.982398,3.762755,8.356305,4.134927,-4.370730,0.443119,9.225449,-9.157974,8.286609,5.186295,7.423765,8.956677,1.011795,-4.683989,6.392615,-0.263615,6.408677,-2.861446,-4.072186,4.759546,-9.236373,-5.268936,-2.111534,-0.520954,0.594572,-8.822675,8.261540,5.640737,-4.177910,-6.369634,-4.390463,-5.519695,-4.045626,-2.610523,-1.657858,7.502394,-8.409789,-6.816542,-1.954612,-8.554964,-9.362738,-2.212082,6.851625,-5.809750,9.107009,6.952616,0.489373,0.209323,-6.822458,1.739449,-3.330538,9.570639,-4.131934,2.413788,-0.408028,-5.996446,-4.520390,-0.495342,-5.726653,-3.274143,7.312077,6.331435,9.955361,-6.955981,-5.746923,-5.568170,-6.566999,9.644512,8.941807,7.400045,8.159083,6.708283,-6.129463,2.348192,-7.535584,4.696506,0.348546,1.311663,9.151356,-6.151045,5.394098,-5.959082,9.957554,-4.684201,-1.909862,-1.007872,2.799930,-8.991148,-2.226825,8.872834,9.653194,-9.536700,4.959167,8.983269,-7.184960,7.123028,-6.967338,6.802172,6.166492,-9.040146,-0.544786,8.110883,-7.530617,3.247459,6.957082,-7.230059,3.171815,0.412858,-8.658445,-2.759920,2.136728,-6.888961,4.791955,2.228080,5.802611,3.359303,-1.363009,3.826902,-1.004713,8.095655,8.053697,-2.750805,0.431604,-3.857151,-5.615100,-8.594933,-0.610771,0.661611,-7.294375,-6.352679,-9.194566,0.510192,5.211351,-4.475067,-4.470697,4.571669,8.136358,-2.336386,-1.146222,-2.839018,9.341535,-9.257213,0.399046,-3.314173,-5.107769,4.982551,-9.247589,3.424143,3.960977,4.579054,-8.684076,-2.858801,-0.029089,-0.065404,0.213330,0.513001,2.856545,-2.367071,5.920836,-2.856709,7.873593,-7.505298,5.921411,4.798379,4.246756,-0.005549,-8.528727,7.500929,9.525851,2.252581,-0.023986,-9.048237,-9.719165,-6.911878,8.316912,0.197172,-4.426130,-9.030523,4.716152,1.883081,-6.579760,-5.750102,-3.962655,2.500544,9.145840,-8.715014,5.369541,3.061651,7.952845,9.742468,9.851052,7.210450,-5.706753,4.523774,-4.342219,3.263666,-5.839104,7.531890,2.656056,-1.839396,5.627031,8.251731,4.655463,-8.411677,-1.331346,3.544523,-9.891821,-2.123896,-7.535146,-4.336836,-1.415570,1.797511,-4.999759,0.475356,0.451109,-3.831383,-1.395959,7.172829,8.750842,-4.775009,8.007679,5.318728,-3.692189,1.101950,9.257705,5.218392,4.591918,-7.085897,0.280719,6.056250,3.256988,7.316679,6.089142,-6.376720,-9.827774,9.907558,-8.058411,7.499990,-0.933869,-2.429325,8.705863,6.749394,-1.213819,-6.284415,2.482882,7.666549,0.608050,-9.130853,7.749920,0.905357,9.876796,-9.169238,2.044415,-7.473630,-8.754165,4.697163,0.068239,-6.507530,-9.067516,5.659283,-0.707164,8.582147,-7.714481,9.696239,-9.734781,8.765617,3.222039,9.933048,-7.976916,-0.627657,-3.383863,-3.354693,-1.956433,-8.965839,4.320142,-4.652269,-9.538484,1.323396,3.000466,-3.557722,-8.849445,4.394096,5.005433,-0.026615,-4.354417,-9.961472,6.991203,-8.918443,1.829061,-5.036179,0.082289,8.400218,-7.260612,-5.833323,2.781961,9.205655,-2.478131,4.561896,-8.977354,2.955112,-6.101531,8.359963,-3.693252,1.378556,-4.808929,-9.074547,-3.533863,6.169372,7.122759,-9.369235,8.655936,-6.501742,-7.319087,6.129057,3.517732,0.263597,2.950449,7.286184,9.811410,8.979959,6.465792,8.788497,3.708905,-6.480694,-9.397639,4.116422,4.914039,7.150823,6.657663,-1.962678,-4.896243,-9.652019,-5.430916,1.124391,-0.848148,-5.901317,8.287312,7.287175,-1.427782,0.562643,-2.936668,-5.444659,-3.341500,4.872229,7.329781,-5.790583,-9.178746,2.134909,9.604502,-1.321332,7.895253,2.377282,-6.341108,-0.649352,-1.197871,9.581982,-2.188718,-1.840542,7.501875,4.935960,1.048884,-5.739192,-4.791519,1.393537,8.152588,-8.027483,-7.818328,7.815020,-7.669426,5.554109,4.546066,-9.338310,6.842286,-4.269498,-6.685359,1.425461,1.554617,3.182117,6.943757,8.939608,-3.099726,1.963286,0.420723,9.901573,-7.142098,2.679277,4.383619,-8.437048,-6.652977,-5.279494,-9.503739,0.377102,4.477538,4.071092,9.268347,5.403867,-9.473408,-8.507429,6.516295,-8.815707,-1.003691,2.250542,3.906499,-1.549666,-0.936607,-3.938417,-8.297412,9.572418,2.458748,-4.509322,3.068209,-2.502670,2.453950,-7.172460,8.235839,-1.019175,-3.953525,6.311453,6.363225,2.065363,-7.293815,-6.063468,3.091162,8.105904,0.654154,1.922375,3.429750,-1.479766,-6.048535,-3.981686,3.734777,-4.228652,-3.891879,4.896012,7.224020,-9.503675,9.569782,7.322340,-3.713770,2.192224,-6.586332,-7.035828,-3.412794,-5.635282,4.998878,-5.960831,-4.503854,-0.518073,7.211494,-9.599117,5.275169,-5.042876,-9.628706,4.238138,-1.695549,-4.112371,-0.434407,8.073563,4.408645,9.584358,-7.945352,-0.810053,-3.248819,0.432406,-1.849976,9.243064,-5.234638,-5.077067,2.076770,5.098182,-6.194115,-6.745862,9.809775,-7.736879,-3.505986,2.410499,0.300488,9.410281,2.235300,3.369475,-5.250995,9.747809,1.453771,3.712890,7.533828,-3.451328,-9.038940,-2.014626,-6.081895,6.223119,8.082264,0.605681,-3.220154,-5.935264,-1.797807,4.261664,-0.095391,5.049563,1.153144,-3.052000,-8.584552,-1.072473,-0.042810,-0.370229,1.316519,9.851813,-0.828088,-4.518606,5.732883,-9.307328,-1.271125,-5.298203,-9.486797,-7.070422,0.738777,4.979901,-5.955749,-5.675467,-0.015133,6.998700,-7.631229,-7.532728,-3.978460,0.199889,-3.041490,7.149698,-1.549327,6.555153,9.824138,-5.349509,0.368851,-3.334802,0.085647,-9.919585,5.418231,-1.938235,-0.277958,1.583325,1.228229,-0.525747,-1.499256,-0.931695,1.739880,-0.644410,-5.634053,3.658844,-8.380182,3.254005,5.607421,8.801878,0.806306,-1.573877,7.354224,-6.498384,3.511839,-4.317635,-1.711988,-6.378033,-5.783442,8.234317,4.603952,-3.578093,-5.592946,6.821029,3.276614,3.204262,-4.420666,-8.977914,5.739563,-8.623322,2.834794,-8.756836,-7.992050,-1.908477,1.844068,4.109151,-0.912078,-7.944271,8.381193,-9.089886,5.375408,2.935691,-5.828665,7.697552,2.524048,-5.827311,-5.361588,-0.660076,1.939570,4.638663,-9.535032,0.904477,0.821383,-8.253111,3.541624,3.447857,-8.045384,7.076358,4.098867,-3.514760,-4.423120,4.357728,6.196822,5.867481,-7.824348,-0.920409,3.943287,-6.640317,0.285935,1.507318,0.117210,8.512812,-9.051467,-7.523323,5.339690,-4.719392,1.191188,-3.945090,6.684066,9.539987,1.139785,6.329679,9.461195,6.851649,-9.962806,-0.585931,4.843564,6.036957,-6.104067,9.657294,-5.639396,1.580504,-7.652592,-5.821247,-0.370162,1.510314,4.294269,-0.278714,-4.607043,-9.248534,5.293892,2.126014,-1.462104,-3.275618,-7.010080,8.932989,1.164055,1.991889,-6.300681,0.891590,2.134789,-3.218127,7.311205,-4.697364,-3.126901,-9.636363,2.183755,4.436787,-1.376800,-2.033320,4.375658,4.884786,-4.745803,-9.049269,1.969371,4.707554,1.729043,2.686252,7.989757,-2.978237,-2.886058,8.343103,-7.334207,-1.023607,-1.940035,-0.692184,-9.206372,-9.590267,-8.725097,3.799239,-0.405978,-7.690222,7.327598,8.295926,5.819078,-4.129216,-8.568979,9.113566,-3.134735,-7.595749,-5.975002,7.009320,-3.244085,-2.333854,-5.577240,-9.075675,-7.856106,-2.757202,4.963592,-4.411204,-3.895858,-8.609582,-0.352442,8.399601,6.944449,1.914367,-8.698928,-8.657096,-1.351830,3.163189,1.934609,-3.441398,8.784892,5.225848,-8.327202,3.155474,-0.283406,9.508686,-4.069750,-2.885346,-2.854538,5.231616,-8.636472,-1.874033,-0.502510,4.356048,2.389024,-9.197103,3.988482,0.956829,8.716654,-7.565085,8.273678,0.562131,-2.423380,7.765103,6.121323,-3.396306,8.446563,2.277395,-2.092121,9.538407,-5.723518,-5.570787,5.033557,1.282376,5.123232,-9.226268,7.798604,-9.028620,0.136508,2.428337,-3.832479,-1.411980,-4.018440,-4.551162,1.459083,-9.792368,1.368274,7.057148,0.887751,4.638948,-1.604526,7.311666,5.880835,7.494648,6.188503,-8.460475,-1.966438,1.537339,-2.589258,-6.193689,9.413924,4.186108,3.932587,6.632270,1.053790,4.973637,8.387340,7.286759,-6.137233,3.449870,4.751333,-7.896707,0.909566,-3.265766,2.172063,7.459419,-1.701548,0.573234,6.048219,-7.529155,7.323056,-4.151478,-7.083247,-3.343051,-7.931501,-9.181112,3.859052,-2.957452,0.274605,-1.318776,2.943058,0.321756,-6.126996,2.892877,-1.913617,-0.951195,-8.162786,-5.027286,-1.673669,0.688183,-2.479633,2.494154,-4.495383,-5.131368,-4.967549,-9.742672,-8.361324,5.029238,-2.942596,-0.720707,-2.931463,4.471540,8.806555,7.464021,-8.897936,4.953394,4.939939,-6.785835,-4.436155,0.288987,9.294893,-3.367708,3.910619,-0.187575,-6.891836,-1.546271,4.672750,8.334390,7.762414,-5.026381,-8.678804,3.509982,-6.798948,7.067945,-7.038253,-6.341868,5.790849,-8.090341,-4.412306,-6.933071,7.979260,-7.279829,-5.554829,-3.500415,-9.638610,9.919188,-9.083530,-4.323928,-5.266671,4.291553,-1.558361,-0.236556,-7.319826,3.941085,2.589726,7.105272,-4.204033,8.700639,-4.041422,5.466904,3.605746,1.655106,3.004403,-9.899976,3.065875,-4.503650,0.340111,7.768679,8.842519,1.913074,2.489876,-3.956238,-4.391003,-2.940522,6.661874,8.524839,3.333696,-4.795936,2.187381,-4.580405,-9.125917,-4.982743,-0.978655,9.814360,-7.134852,-9.116682,7.865161,-1.925192,1.896360,-9.928299,-5.247013,1.646658,-1.382508,-2.414446,-0.779173,8.720438,2.258369,5.840961,4.202234,-9.063808,5.012583,2.908149,8.730206,-9.812558,6.407227,4.765119,-3.647954,8.172152,-8.491707,-7.411831,-8.058867,8.457994,-8.832486,7.946107,1.953037,7.528020,2.499919,0.932036,-8.108646,9.320129,7.639960,2.049228,7.113190,-8.154352,-8.764135,-2.100562,-4.506500,0.948232,-1.695727,3.103995,-0.115483,-6.558061,1.770067,-5.685394,0.484330,2.711658,-7.143490,4.066436,6.512719,1.800554,-0.848799,7.108443,1.125977,7.777578,8.222834,6.944956,-2.607501,7.206647,2.847107,9.638385,5.772956,2.020473,-1.144511,9.660972,2.643729,6.566141,2.095368,-2.720931,1.324941,-3.857027,-4.992013,-2.303856,-9.174116,3.880967,2.713615,-3.005986,4.398953,-7.515646,-8.065420,-4.041991,-6.849561,-5.390951,-7.025390,-4.631427,-6.403393,-9.200707,-4.068943,3.010852,2.792970,6.492278,-4.019463,6.681957,5.771115,3.324845,-1.880538,7.078366,9.276182,-2.539188,5.548013,-3.519158,9.690808,-1.535490,0.700010,-9.861327,-1.196425,-2.649350,-3.244661,9.414275,1.119334,7.083435,-5.364160,8.888217,-3.362456,0.816222,-1.665462,-9.209549,-0.278973,-6.507679,-5.757008,-6.353978,-2.221339,2.489384,7.432420,-0.154109,2.088168,-8.922205,8.590017,-8.232532,4.262596,6.240010,8.427237,7.960483,-7.709223,5.534590,0.128292,-1.770643,-0.112256,-2.685704,-5.071889,3.690689,-0.166910,2.005162,4.453425,-4.320397,4.013530,-1.440833,6.344297,-5.140003,4.142295,-8.975320,-4.329273,-0.374415,2.216008,-8.494682,-4.395383,0.142739,9.030598,-1.625787,-4.844112,9.929370,-9.158701,-3.018037,1.881596,1.930112,8.157618,5.896801,-3.849422,-2.569632,-3.927864,0.286029,-8.718688,-0.336123,5.803460,-4.070143,4.302974,8.970965,-1.380227,3.161881,3.284861,-2.708961,-8.708715,-3.700020,-2.926646,-5.633235,2.965603,2.767783,7.560885,8.604271,-6.437016,-5.830189,8.470182,4.304207,-3.224823,7.449665,4.645151,-0.725597,-1.983079,9.961109,7.071409,6.895276,9.457411,3.484762,-7.060063,-0.476017,-1.487060,-3.394035,-6.789418,3.735491,-5.476952,-0.144200,6.700483,-4.133321,9.446501,-0.503326,4.393620,8.617254,-4.425657,8.770208,2.358070,9.846111,1.564245,1.466828,8.504866,-3.852643,-1.231756,9.013767,6.223859,8.862556,0.893051,4.490111,8.916372,-8.591673,1.339912,2.116871,8.486196,3.370483,-9.830992,-6.761241,3.121799,-4.246843,-5.439035,5.539719,1.529049,-5.218340,-4.634587,9.713144,3.158518,2.534643,-0.594026,7.737368,9.299390,-5.129309,-1.039598,4.041375,5.076828,3.297635,-2.641292,5.581047,0.218920,-1.877641,4.956003,3.029335,4.680646,-9.559814,2.439676,2.740752,-2.296922,2.406542,1.973580,-8.646704,-2.612784,-9.008997,9.592244,-9.286888,8.396315,-7.298845,-2.147444,6.785827,0.702830,5.397291,-8.045053,1.273347,-0.087274,1.720361,-5.295012,-6.097557,8.162535,9.646683,-7.671346,4.674983,-5.111155,1.483675,8.417866,2.864871,-4.505834,-9.362997,9.760434,5.245556,-2.957833,4.452524,-3.033998,6.625288,-6.671027,-9.294618,-5.138018,0.108090,-2.497983,9.066080,2.000642,-8.091146,-4.856457], dtype = "float64")#candidate|2986|(2310,)|const|float64
var_2987 = relay.var("var_2987", dtype = "float32", shape = (4, 108))#candidate|2987|(4, 108)|var|float32
call_2985 = relay.TupleGetItem(func_610_call(relay.reshape(const_2986.astype('float64'), [2310,]), relay.reshape(var_2987.astype('float32'), [432,]), ), 0)
call_2988 = relay.TupleGetItem(func_614_call(relay.reshape(const_2986.astype('float64'), [2310,]), relay.reshape(var_2987.astype('float32'), [432,]), ), 0)
func_223_call = mod.get_global_var('func_223')
func_225_call = mutated_mod.get_global_var('func_225')
call_2989 = func_223_call()
call_2990 = func_223_call()
output = relay.Tuple([call_2954,call_2985,const_2986,var_2987,call_2989,])
output2 = relay.Tuple([call_2955,call_2988,const_2986,var_2987,call_2990,])
func_2999 = relay.Function([var_2987,], output)
mod['func_2999'] = func_2999
mod = relay.transform.InferType()(mod)
mutated_mod['func_2999'] = func_2999
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3000 = relay.var("var_3000", dtype = "float32", shape = (4, 108))#candidate|3000|(4, 108)|var|float32
func_2999_call = mutated_mod.get_global_var('func_2999')
call_3001 = func_2999_call(var_3000)
output = call_3001
func_3002 = relay.Function([var_3000], output)
mutated_mod['func_3002'] = func_3002
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3004 = relay.const([[[-9.413137,6.036702,-9.671900,8.833761,-4.059917,4.040094,-2.950234,8.690296,-9.395251],[0.048684,2.324770,-9.024470,-3.518614,-6.253173,-3.137871,-5.167670,9.864485,-6.433639],[-6.089592,-0.263788,-3.908430,6.651724,-1.826974,-0.241849,-1.326343,-2.595177,-8.540751],[3.182111,-0.878378,-4.053827,4.107991,5.197245,-1.478819,-8.241836,-2.743852,-8.187100],[1.108600,0.832758,-0.402081,-6.858900,2.007556,-7.532944,3.981892,-4.573265,7.513918],[-4.162001,7.111016,-1.447647,2.276743,3.798368,7.018122,-6.489987,4.220486,6.950634],[-4.844636,-8.855536,-6.678460,1.572688,-6.295969,-0.487345,-3.763860,-4.584551,-9.838999],[1.790624,-9.983353,1.519879,-0.646102,-3.683493,3.689087,9.028140,5.021039,7.202535],[-0.777670,-2.295298,-2.199250,2.776698,6.678967,0.571969,-3.265422,-9.540599,6.535521],[-2.968756,5.371140,6.479911,-4.610250,-1.271925,-8.830135,-1.385515,-8.241624,6.360621],[9.881218,8.166348,-3.446775,-8.571291,-5.830192,4.973594,4.515278,0.106661,-3.495936]],[[9.837732,-7.191261,8.633615,-2.234297,3.604154,-3.064004,4.177434,5.510249,-5.763393],[5.538550,-5.309538,6.094281,1.778150,-9.484960,-4.160362,7.128977,3.021299,3.162015],[-6.500949,-7.908129,3.044679,-5.327852,-7.948176,9.937756,-1.629623,-7.927061,-7.073141],[-0.513976,-0.279986,7.194728,-4.318547,-4.355493,-1.104257,-2.524254,6.563759,-3.762956],[4.202965,-4.974638,3.028660,-1.562366,-4.487372,-3.558567,6.653924,5.555340,8.381453],[-7.238757,8.206801,-8.075577,-1.314146,4.114476,3.280042,-1.697712,-9.997040,4.909842],[0.189907,7.092185,-1.569686,-9.506391,5.199528,3.961622,-6.400462,-6.115649,-9.542305],[8.998277,7.368561,1.241521,2.972102,7.219093,-4.698886,7.038912,-2.833773,9.708293],[-1.887172,-7.063324,3.075405,6.620835,7.153021,-3.599591,-4.868409,5.140630,-1.286494],[-2.104914,-8.364973,8.350774,-0.989415,-4.073707,-0.423320,5.721792,-1.091205,-3.709232],[7.949137,8.160090,5.207621,5.761043,-7.014953,8.117226,5.279748,-7.131778,5.082602]],[[-8.080226,-5.159268,-7.578455,-9.557272,5.772951,-1.860831,7.215948,8.053516,-1.447219],[-5.270631,-5.856164,-1.212187,0.313677,-7.816680,-0.525353,4.094989,7.666748,2.741357],[-1.648447,-4.442159,-5.930624,4.833960,-0.858523,5.344556,7.389403,-1.447845,-2.815293],[7.891065,-7.161287,0.802383,6.001278,6.935659,-4.249585,3.152943,1.769360,-4.763241],[-1.410362,8.680487,7.189735,6.135003,-1.691431,-2.994858,0.238621,-4.296944,9.450775],[-7.289184,-5.378827,-5.663242,-3.444273,-5.098592,4.424363,-6.793780,-9.402197,-7.840059],[-4.851135,7.565861,-7.235176,3.306929,4.794191,0.182381,4.551490,-7.883841,-9.689889],[-3.672077,-5.152554,-2.636122,7.119672,2.298317,-8.965171,6.560965,3.363252,1.345664],[5.234241,2.624830,-2.834478,5.985192,-9.490510,0.091202,-0.195093,-5.204292,-8.998269],[-5.932507,0.921460,-3.798711,-8.037020,-5.786856,-9.650956,5.556433,-6.262260,-0.279940],[9.441610,-0.891883,7.679621,-4.617714,0.278861,-2.656605,9.986990,9.710522,-0.309313]],[[-6.649509,-7.971405,8.223441,-7.896338,-7.442760,4.309541,0.889789,-4.266365,1.287349],[-2.024785,-7.871596,-1.467938,0.612874,4.636229,-2.861563,-8.641733,-1.009416,1.535630],[9.159677,-0.064885,-0.306157,3.662732,8.915688,1.624539,6.719681,-5.646731,2.190618],[6.456610,5.449653,9.495984,-8.887425,-0.492569,-1.052045,-2.656404,-2.644605,4.877128],[6.662327,-0.219768,1.557234,9.327164,1.261413,-2.380164,-3.533033,-8.944427,-7.003602],[9.486319,3.787233,-0.681686,0.326730,-4.203095,5.040605,-7.758579,-9.451180,9.699037],[-6.635102,-5.780697,9.955593,-9.550153,-6.570139,9.794734,-0.562594,-0.420126,-9.000767],[-6.001946,6.198534,1.605851,-0.396747,3.544043,1.975564,-2.466023,6.991828,9.979717],[8.198448,-1.810898,-7.924139,1.528966,-3.063898,0.462984,-4.312221,-9.499578,-7.376639],[-7.076734,2.577932,7.039500,3.740270,-6.488640,-0.910536,5.884117,7.713094,-7.738395],[1.867389,3.141516,9.580691,-8.972501,-9.013320,5.602014,7.529694,0.490788,-8.652470]],[[7.215826,9.839636,-2.022091,2.974661,7.236673,-1.034895,4.929773,9.879280,8.651031],[6.065456,-4.401646,9.521059,-0.284192,-6.557601,9.784630,-2.267573,-4.589909,3.297000],[1.089477,-9.413802,8.436830,-8.151013,-9.997814,9.522150,-9.745483,1.743894,-6.420477],[0.005366,4.899505,5.569739,-2.670771,1.909511,3.805941,1.603880,-9.455404,1.572541],[-7.797119,-6.426188,-0.330106,8.844072,-1.386855,4.418997,1.042710,3.900232,-2.500144],[9.843528,-8.608753,2.397327,6.830842,-0.494230,-4.086304,-9.192162,-7.585654,5.440102],[-5.168521,8.629485,-0.408692,-8.833294,0.142795,-9.047128,-6.511044,-8.875884,3.796444],[-1.537719,2.899919,-2.714745,-9.146029,-1.976776,3.580988,1.318327,-5.487971,-0.497263],[-5.488912,-0.662057,-7.871132,8.771996,2.074477,5.315054,-0.129467,2.570131,-2.007419],[6.437744,-8.481433,3.654491,-6.061534,-2.060902,-0.046426,6.598493,3.068488,-7.511630],[-1.316076,-5.661462,-2.190474,-6.194798,9.983370,-6.570615,5.579277,-0.169037,5.960486]],[[3.018887,9.899695,8.363465,-4.335035,-9.312469,-8.072301,3.193630,-1.347531,-3.763365],[1.491438,8.302649,3.488672,4.629330,-8.860625,-0.424427,2.674278,9.513883,9.020591],[-1.095464,2.098381,2.348028,-5.954377,-5.093255,-3.659315,4.057402,-8.044515,-5.806297],[-1.249553,-4.754760,-8.369982,-1.928522,7.762911,-7.593344,-7.478411,-2.046063,4.854101],[-5.017292,4.913746,-9.287924,2.858133,5.596056,3.725177,2.393851,4.319986,-5.756170],[2.419917,-8.317096,-5.926017,2.428672,4.396727,-7.742989,-6.306188,-1.759732,1.973778],[8.607063,-2.406505,-6.740286,0.074936,4.730251,-1.205063,-9.815075,2.070747,-5.824794],[8.716784,-8.821849,9.933004,0.405949,5.818905,8.675985,-3.954543,-2.762086,-9.682936],[-7.131385,-2.790577,-4.285799,5.275544,-9.786712,6.184141,-0.815541,3.661232,-5.066180],[8.339041,-0.955502,2.872019,-0.600378,-1.497192,0.149613,1.027165,-2.714090,9.021266],[-0.099864,6.109382,1.652177,7.110924,6.964709,2.385919,-7.346860,1.774769,9.865692]],[[-5.306988,8.580308,-7.796711,4.085846,-8.760569,-4.397196,8.406330,3.922073,0.805854],[5.608276,-9.572059,4.452801,-6.386470,6.325916,-8.078324,1.735820,-6.726440,-6.451768],[0.860408,-4.015047,7.938607,1.475145,-5.928478,-2.711038,-0.690156,-3.770092,-2.578326],[-0.493498,0.787320,2.869797,-2.613797,8.511144,6.277045,-3.064279,7.187602,-4.614632],[7.181560,8.008982,-1.465131,9.928885,-0.480327,-2.563865,-9.090284,4.491607,-1.244476],[8.719950,6.907360,8.823918,-5.917481,7.788932,-4.230158,1.578583,-2.678322,8.148252],[-0.492543,8.526833,6.245876,8.039150,-2.973104,8.989159,5.454574,7.193929,1.616732],[9.076772,-0.068640,-4.366003,5.752700,-7.899042,-2.724466,-1.848591,7.018291,5.870305],[5.289733,-7.376101,-6.682597,-9.143394,-7.567128,-6.870306,-4.623621,-6.843781,2.065410],[-7.812765,-8.487248,-4.264847,-9.037083,7.383055,-2.409091,-6.333842,1.260803,6.008022],[6.888058,-5.337428,2.427277,5.797107,-1.063575,0.448796,-8.042513,-9.799770,-9.374613]],[[-3.588913,-9.788521,-8.720338,-2.136897,-9.339001,4.005976,1.651577,-0.852380,9.353864],[2.974876,6.012664,-8.463476,2.879343,-1.170216,2.651660,-6.893339,-3.330928,6.283430],[7.152812,2.606182,8.815456,2.756417,0.543545,-0.455211,3.593472,-3.596268,-9.668831],[8.921013,2.689219,0.947927,6.002556,-9.821433,-9.863360,-1.886106,-8.145658,-2.834142],[0.103099,-9.694149,0.097204,7.038181,-0.659442,2.291435,-1.232029,-4.779535,0.719159],[-7.733080,5.503551,-9.071595,-4.508039,0.366424,-0.858712,-6.138730,3.650502,0.418115],[-4.415838,-0.305359,-0.658166,6.048375,-0.460709,-0.063808,6.721420,-3.904314,-7.113236],[8.897994,-0.397360,9.747997,-5.481613,-5.931375,-0.563749,-8.406537,-3.798147,-5.878463],[-7.576411,6.506429,5.673401,-5.403058,-0.888983,-3.433681,6.871032,9.976122,-4.715777],[7.809889,-9.587713,5.970277,8.633291,6.464366,-1.686783,-2.519598,4.731117,3.065683],[7.937949,-1.301161,3.210972,-5.069742,-9.220718,-7.905659,-7.347176,8.434661,6.126082]]], dtype = "float64")#candidate|3004|(8, 11, 9)|const|float64
uop_3005 = relay.atan(const_3004.astype('float64')) # shape=(8, 11, 9)
func_396_call = mod.get_global_var('func_396')
func_397_call = mutated_mod.get_global_var('func_397')
call_3009 = relay.TupleGetItem(func_396_call(), 3)
call_3010 = relay.TupleGetItem(func_397_call(), 3)
func_1684_call = mod.get_global_var('func_1684')
func_1685_call = mutated_mod.get_global_var('func_1685')
call_3012 = relay.TupleGetItem(func_1684_call(), 0)
call_3013 = relay.TupleGetItem(func_1685_call(), 0)
func_746_call = mod.get_global_var('func_746')
func_747_call = mutated_mod.get_global_var('func_747')
call_3029 = relay.TupleGetItem(func_746_call(), 1)
call_3030 = relay.TupleGetItem(func_747_call(), 1)
func_2561_call = mod.get_global_var('func_2561')
func_2564_call = mutated_mod.get_global_var('func_2564')
var_3032 = relay.var("var_3032", dtype = "float64", shape = (936,))#candidate|3032|(936,)|var|float64
call_3031 = relay.TupleGetItem(func_2561_call(relay.reshape(var_3032.astype('float64'), [13, 12, 6])), 0)
call_3033 = relay.TupleGetItem(func_2564_call(relay.reshape(var_3032.astype('float64'), [13, 12, 6])), 0)
output = relay.Tuple([uop_3005,call_3009,call_3012,call_3029,call_3031,var_3032,])
output2 = relay.Tuple([uop_3005,call_3010,call_3013,call_3030,call_3033,var_3032,])
func_3037 = relay.Function([var_3032,], output)
mod['func_3037'] = func_3037
mod = relay.transform.InferType()(mod)
mutated_mod['func_3037'] = func_3037
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3038 = relay.var("var_3038", dtype = "float64", shape = (936,))#candidate|3038|(936,)|var|float64
func_3037_call = mutated_mod.get_global_var('func_3037')
call_3039 = func_3037_call(var_3038)
output = call_3039
func_3040 = relay.Function([var_3038], output)
mutated_mod['func_3040'] = func_3040
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3059 = relay.const(-0.716016, dtype = "float64")#candidate|3059|()|const|float64
var_3060 = relay.var("var_3060", dtype = "float64", shape = (13, 1, 12))#candidate|3060|(13, 1, 12)|var|float64
bop_3061 = relay.mod(const_3059.astype('float64'), var_3060.astype('float64')) # shape=(13, 1, 12)
output = relay.Tuple([bop_3061,])
output2 = relay.Tuple([bop_3061,])
func_3066 = relay.Function([var_3060,], output)
mod['func_3066'] = func_3066
mod = relay.transform.InferType()(mod)
var_3067 = relay.var("var_3067", dtype = "float64", shape = (13, 1, 12))#candidate|3067|(13, 1, 12)|var|float64
output = func_3066(var_3067)
func_3068 = relay.Function([var_3067], output)
mutated_mod['func_3068'] = func_3068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_396_call = mod.get_global_var('func_396')
func_397_call = mutated_mod.get_global_var('func_397')
call_3106 = relay.TupleGetItem(func_396_call(), 2)
call_3107 = relay.TupleGetItem(func_397_call(), 2)
var_3120 = relay.var("var_3120", dtype = "int64", shape = (15, 14, 11))#candidate|3120|(15, 14, 11)|var|int64
bop_3121 = relay.floor_divide(call_3106.astype('float32'), relay.reshape(var_3120.astype('float32'), relay.shape_of(call_3106))) # shape=(15, 14, 11)
bop_3124 = relay.floor_divide(call_3107.astype('float32'), relay.reshape(var_3120.astype('float32'), relay.shape_of(call_3107))) # shape=(15, 14, 11)
func_1015_call = mod.get_global_var('func_1015')
func_1019_call = mutated_mod.get_global_var('func_1019')
const_3135 = relay.const([[4,1,-7,10,-2,10,1,3,4,-5,4],[7,-5,-4,10,6,-8,-5,-3,1,-1,7],[6,2,-7,-6,6,6,2,4,6,5,6],[8,-4,-5,9,9,-2,-7,5,2,9,-5],[-8,2,-8,9,-8,5,6,-8,-4,2,5],[-6,3,4,-6,4,7,-1,6,10,4,7],[-7,-7,-2,-8,-8,-9,-4,4,1,5,5],[-2,-3,4,-8,-9,6,10,5,-8,4,-6],[2,8,10,-1,1,-8,8,4,-3,-2,1],[8,10,10,3,2,-8,9,6,-6,7,-1],[-6,-10,-10,-7,-4,6,8,10,2,7,4],[9,-7,-7,9,-7,5,-1,10,5,-2,8],[6,1,1,7,3,-7,3,5,4,-6,-9],[-5,6,3,-2,7,-10,-6,-6,6,1,10],[-7,-5,-8,1,9,-8,-7,-2,-3,-7,-7],[4,5,5,-5,-1,1,-5,-8,-8,-4,3],[-7,-10,-4,-3,-9,-8,-1,4,7,8,1],[7,-8,8,9,-3,8,9,2,5,-3,10],[6,-7,7,-9,9,-2,8,10,3,8,-9],[-3,10,-6,3,-4,8,-9,9,7,-5,4],[9,3,-7,3,-7,-9,-4,-10,1,-5,-7],[7,-6,3,-1,5,9,2,-8,-4,-9,3],[-1,4,7,2,6,2,-2,-3,10,-3,-3],[-8,9,-7,-6,6,3,9,1,-4,1,-1],[10,5,10,-10,-4,6,-2,-6,5,-8,-1],[-8,10,-1,7,3,-4,7,8,-8,10,10]], dtype = "uint8")#candidate|3135|(26, 11)|const|uint8
call_3134 = relay.TupleGetItem(func_1015_call(relay.reshape(var_3120.astype('float64'), [2310,]), relay.reshape(const_3135.astype('uint8'), [286,]), ), 7)
call_3136 = relay.TupleGetItem(func_1019_call(relay.reshape(var_3120.astype('float64'), [2310,]), relay.reshape(const_3135.astype('uint8'), [286,]), ), 7)
output = relay.Tuple([bop_3121,call_3134,const_3135,])
output2 = relay.Tuple([bop_3124,call_3136,const_3135,])
func_3141 = relay.Function([var_3120,], output)
mod['func_3141'] = func_3141
mod = relay.transform.InferType()(mod)
mutated_mod['func_3141'] = func_3141
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3142 = relay.var("var_3142", dtype = "int64", shape = (15, 14, 11))#candidate|3142|(15, 14, 11)|var|int64
func_3141_call = mutated_mod.get_global_var('func_3141')
call_3143 = func_3141_call(var_3142)
output = call_3143
func_3144 = relay.Function([var_3142], output)
mutated_mod['func_3144'] = func_3144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2333_call = mod.get_global_var('func_2333')
func_2335_call = mutated_mod.get_global_var('func_2335')
call_3168 = relay.TupleGetItem(func_2333_call(), 0)
call_3169 = relay.TupleGetItem(func_2335_call(), 0)
output = call_3168
output2 = call_3169
func_3174 = relay.Function([], output)
mod['func_3174'] = func_3174
mod = relay.transform.InferType()(mod)
mutated_mod['func_3174'] = func_3174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3174_call = mutated_mod.get_global_var('func_3174')
call_3175 = func_3174_call()
output = call_3175
func_3176 = relay.Function([], output)
mutated_mod['func_3176'] = func_3176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_396_call = mod.get_global_var('func_396')
func_397_call = mutated_mod.get_global_var('func_397')
call_3229 = relay.TupleGetItem(func_396_call(), 3)
call_3230 = relay.TupleGetItem(func_397_call(), 3)
output = relay.Tuple([call_3229,])
output2 = relay.Tuple([call_3230,])
func_3263 = relay.Function([], output)
mod['func_3263'] = func_3263
mod = relay.transform.InferType()(mod)
mutated_mod['func_3263'] = func_3263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3263_call = mutated_mod.get_global_var('func_3263')
call_3264 = func_3263_call()
output = call_3264
func_3265 = relay.Function([], output)
mutated_mod['func_3265'] = func_3265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_746_call = mod.get_global_var('func_746')
func_747_call = mutated_mod.get_global_var('func_747')
call_3353 = relay.TupleGetItem(func_746_call(), 2)
call_3354 = relay.TupleGetItem(func_747_call(), 2)
output = call_3353
output2 = call_3354
func_3355 = relay.Function([], output)
mod['func_3355'] = func_3355
mod = relay.transform.InferType()(mod)
output = func_3355()
func_3356 = relay.Function([], output)
mutated_mod['func_3356'] = func_3356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_537_call = mod.get_global_var('func_537')
func_538_call = mutated_mod.get_global_var('func_538')
call_3374 = relay.TupleGetItem(func_537_call(), 0)
call_3375 = relay.TupleGetItem(func_538_call(), 0)
uop_3380 = relay.erf(call_3374.astype('float64')) # shape=(12, 1, 6)
uop_3382 = relay.erf(call_3375.astype('float64')) # shape=(12, 1, 6)
output = uop_3380
output2 = uop_3382
func_3403 = relay.Function([], output)
mod['func_3403'] = func_3403
mod = relay.transform.InferType()(mod)
output = func_3403()
func_3404 = relay.Function([], output)
mutated_mod['func_3404'] = func_3404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2157_call = mod.get_global_var('func_2157')
func_2158_call = mutated_mod.get_global_var('func_2158')
call_3408 = relay.TupleGetItem(func_2157_call(), 2)
call_3409 = relay.TupleGetItem(func_2158_call(), 2)
output = relay.Tuple([call_3408,])
output2 = relay.Tuple([call_3409,])
func_3410 = relay.Function([], output)
mod['func_3410'] = func_3410
mod = relay.transform.InferType()(mod)
mutated_mod['func_3410'] = func_3410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3410_call = mutated_mod.get_global_var('func_3410')
call_3411 = func_3410_call()
output = call_3411
func_3412 = relay.Function([], output)
mutated_mod['func_3412'] = func_3412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2314_call = mod.get_global_var('func_2314')
func_2316_call = mutated_mod.get_global_var('func_2316')
call_3418 = relay.TupleGetItem(func_2314_call(), 0)
call_3419 = relay.TupleGetItem(func_2316_call(), 0)
func_2009_call = mod.get_global_var('func_2009')
func_2011_call = mutated_mod.get_global_var('func_2011')
const_3423 = relay.const([-4,-6,10,8,4,6,2,-8,1,10,4,9,-1,-2,-1,-7,-1,6,7,-7,2,7,-9,8,8,-9,8,-6,1,7,7,7,-7,1,-8,4,-2,-7,7,10,-3,-8,8,-10,-2,-3,1,8,4,1,-10,4,-8,-4,6,8,4,10,2,3,9,4,5,-9,5,-10,6,8,5,-7,-5,-10,-3,-3,2,-8,1,10,-5,-4,8,-7,8,-6,-7,-1,8,-3,4,5,-1,5,-6,-7,-4,3,-5,-8,-4,-3,7,-3,-9,-7,10,7,4,3,-8,1,1,6,2,8,-8,7,9,2,6,-9,1,10,-7,-7,5,-7,-2,4,-4,-4,-3,8,2,-10,-9,-7,-4,-8,-9,-7,5,-1,-4,-2,7,-3,-6,-4,10,7,4,4,10,-10,8,-5,9,9,3,4,-7,2,-7,-2,-2,-8,4,4,-3,6,10,-4,7,4,5,10,6,-7,-10,-2,1,-7,-4,-10,-3,-10,-8,-2,10,-5,-6,8,8,-5,-6,9,8,4,-8,1,-1,-6,5,-3,6,9,2,-3,5,-9,6,-10,-7,-8,-9,8,-8,-6,-4,10,-7,-1,-8,-1,6,-6,9,9,-10,-1,-6,8,3,8,3,7,-9,-10,7,-2,1,-5,5,8,-1,-6,-10,-10,10,-2,8,-4,-2,-3,-6,-3,-6,1,2,-1,-2,1,-1,9,-1,-6,-2,5,5,-4,7,-1,-6,4,-4,5,2,-10,-7,6,-7,6,-3,7,2,-10,-1,-10,5,-6,-1,-7,-7,7,3,3,-8,-1,-1,-8], dtype = "int8")#candidate|3423|(300,)|const|int8
call_3422 = relay.TupleGetItem(func_2009_call(relay.reshape(const_3423.astype('int8'), [150, 2])), 2)
call_3424 = relay.TupleGetItem(func_2011_call(relay.reshape(const_3423.astype('int8'), [150, 2])), 2)
func_1292_call = mod.get_global_var('func_1292')
func_1293_call = mutated_mod.get_global_var('func_1293')
call_3425 = relay.TupleGetItem(func_1292_call(), 1)
call_3426 = relay.TupleGetItem(func_1293_call(), 1)
output = relay.Tuple([call_3418,call_3422,const_3423,call_3425,])
output2 = relay.Tuple([call_3419,call_3424,const_3423,call_3426,])
func_3427 = relay.Function([], output)
mod['func_3427'] = func_3427
mod = relay.transform.InferType()(mod)
output = func_3427()
func_3428 = relay.Function([], output)
mutated_mod['func_3428'] = func_3428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1041_call = mod.get_global_var('func_1041')
func_1043_call = mutated_mod.get_global_var('func_1043')
call_3439 = func_1041_call()
call_3440 = func_1041_call()
output = call_3439
output2 = call_3440
func_3447 = relay.Function([], output)
mod['func_3447'] = func_3447
mod = relay.transform.InferType()(mod)
mutated_mod['func_3447'] = func_3447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3447_call = mutated_mod.get_global_var('func_3447')
call_3448 = func_3447_call()
output = call_3448
func_3449 = relay.Function([], output)
mutated_mod['func_3449'] = func_3449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_176_call = mod.get_global_var('func_176')
func_177_call = mutated_mod.get_global_var('func_177')
call_3476 = func_176_call()
call_3477 = func_176_call()
func_775_call = mod.get_global_var('func_775')
func_777_call = mutated_mod.get_global_var('func_777')
call_3498 = relay.TupleGetItem(func_775_call(), 0)
call_3499 = relay.TupleGetItem(func_777_call(), 0)
output = relay.Tuple([call_3476,call_3498,])
output2 = relay.Tuple([call_3477,call_3499,])
func_3514 = relay.Function([], output)
mod['func_3514'] = func_3514
mod = relay.transform.InferType()(mod)
mutated_mod['func_3514'] = func_3514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3514_call = mutated_mod.get_global_var('func_3514')
call_3515 = func_3514_call()
output = call_3515
func_3516 = relay.Function([], output)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1833_call = mod.get_global_var('func_1833')
func_1834_call = mutated_mod.get_global_var('func_1834')
call_3583 = relay.TupleGetItem(func_1833_call(), 1)
call_3584 = relay.TupleGetItem(func_1834_call(), 1)
func_2840_call = mod.get_global_var('func_2840')
func_2841_call = mutated_mod.get_global_var('func_2841')
call_3590 = relay.TupleGetItem(func_2840_call(), 2)
call_3591 = relay.TupleGetItem(func_2841_call(), 2)
bop_3593 = relay.less_equal(call_3590.astype('bool'), relay.reshape(call_3583.astype('bool'), relay.shape_of(call_3590))) # shape=(12, 1, 6)
bop_3596 = relay.less_equal(call_3591.astype('bool'), relay.reshape(call_3584.astype('bool'), relay.shape_of(call_3591))) # shape=(12, 1, 6)
bop_3597 = relay.maximum(call_3583.astype('float32'), relay.reshape(call_3590.astype('float32'), relay.shape_of(call_3583))) # shape=(12, 1, 6)
bop_3600 = relay.maximum(call_3584.astype('float32'), relay.reshape(call_3591.astype('float32'), relay.shape_of(call_3584))) # shape=(12, 1, 6)
func_2157_call = mod.get_global_var('func_2157')
func_2158_call = mutated_mod.get_global_var('func_2158')
call_3601 = relay.TupleGetItem(func_2157_call(), 1)
call_3602 = relay.TupleGetItem(func_2158_call(), 1)
output = relay.Tuple([bop_3593,bop_3597,call_3601,])
output2 = relay.Tuple([bop_3596,bop_3600,call_3602,])
func_3609 = relay.Function([], output)
mod['func_3609'] = func_3609
mod = relay.transform.InferType()(mod)
output = func_3609()
func_3610 = relay.Function([], output)
mutated_mod['func_3610'] = func_3610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1292_call = mod.get_global_var('func_1292')
func_1293_call = mutated_mod.get_global_var('func_1293')
call_3616 = relay.TupleGetItem(func_1292_call(), 1)
call_3617 = relay.TupleGetItem(func_1293_call(), 1)
output = call_3616
output2 = call_3617
func_3624 = relay.Function([], output)
mod['func_3624'] = func_3624
mod = relay.transform.InferType()(mod)
output = func_3624()
func_3625 = relay.Function([], output)
mutated_mod['func_3625'] = func_3625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1833_call = mod.get_global_var('func_1833')
func_1834_call = mutated_mod.get_global_var('func_1834')
call_3628 = relay.TupleGetItem(func_1833_call(), 0)
call_3629 = relay.TupleGetItem(func_1834_call(), 0)
output = relay.Tuple([call_3628,])
output2 = relay.Tuple([call_3629,])
func_3638 = relay.Function([], output)
mod['func_3638'] = func_3638
mod = relay.transform.InferType()(mod)
output = func_3638()
func_3639 = relay.Function([], output)
mutated_mod['func_3639'] = func_3639
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3650 = relay.const([[[-0.621658,2.943227,3.748483,-0.906047,4.001016,-6.842529,-7.884785,-0.598855,-4.124321,0.089200,-8.388774,-9.733974,6.589474],[-4.357746,-2.310746,-1.836506,4.841551,-2.561500,9.767841,9.225826,3.622926,-1.312462,-2.596194,-8.127289,-5.490799,5.350943],[0.853359,0.366100,-9.563253,-9.871470,0.944143,3.933487,-9.820862,-0.973747,2.287512,-0.539942,4.047334,-1.221201,9.975123],[-6.147008,-3.591099,-0.788787,6.247090,-3.406819,-2.177082,5.229713,9.897044,-8.754477,-8.769476,1.317587,-8.613082,6.529020],[6.458953,9.420321,-3.579856,-1.466129,6.956210,-6.570887,-4.313256,-7.437063,2.892131,-2.458134,2.702204,7.724878,2.353110],[8.342622,-3.657223,-2.559476,-0.348323,9.675452,7.304597,4.984633,-7.864869,-1.754539,-3.438491,5.382076,-6.867870,-7.479019],[-8.724620,3.205582,-3.984104,4.494168,6.416305,-6.909551,7.884207,-1.518938,7.557935,-1.893167,-1.329544,-5.655569,3.034472],[-8.134871,-8.985002,0.297609,-5.725978,-9.656286,2.511001,-9.569046,0.968355,-3.829623,-2.780298,-6.704866,-6.119269,5.146479],[1.149226,1.748945,-1.142399,-9.923268,-1.441948,2.431077,-0.492133,-1.971480,-2.383934,6.121943,9.145435,-8.346766,-1.701989]],[[-5.054041,9.501251,9.454278,0.049307,-6.843789,4.596607,-3.687283,-7.855818,-7.605934,-7.482318,1.501256,7.963629,-3.852286],[-2.942255,-8.746951,1.023386,-6.944379,9.923119,0.262452,-0.343169,-0.369734,-8.161801,-6.381053,-7.739820,-2.406797,9.129024],[0.859151,-4.079777,6.931035,1.745503,0.284624,-2.619427,5.136581,-9.638694,7.518637,-9.777956,-1.467117,-1.395424,-0.227862],[0.579227,1.594419,-1.622204,-8.013445,0.135399,8.314602,3.775085,2.740506,-1.467797,7.586978,-8.509621,-0.944817,-2.774899],[6.857521,8.505346,-8.492666,-7.743524,2.210909,-8.058512,5.166354,1.392466,-4.881115,-4.201283,0.463554,0.970616,9.088303],[8.544543,-2.789318,-2.235708,-9.699051,9.359735,-8.980943,4.124591,-3.610016,7.265784,0.226633,3.411689,-6.873395,5.442650],[-8.893827,-7.480219,-6.157451,0.191669,-6.466724,1.738757,2.769593,7.201348,-0.105168,5.081919,-3.168570,0.983929,-4.491189],[-9.031164,-6.110457,-3.455689,-7.960448,-5.519270,-6.913323,3.255844,1.942318,2.170196,-8.924974,-8.817444,6.191033,7.206482],[5.151169,1.474078,7.411035,-9.263909,-7.377189,7.088068,2.125901,7.248586,9.181643,-2.699708,6.827247,-2.583576,-5.156485]],[[4.963824,-2.306961,-3.692533,6.993253,8.692803,6.244904,-5.562394,-2.622443,-3.331023,0.529789,6.227097,-3.537499,5.335922],[-8.739437,7.918041,-7.974822,-6.031603,-6.165910,-7.802306,8.722762,-8.435265,0.506533,-1.821374,-3.488087,-9.619420,-1.477976],[4.531991,3.845486,6.960247,-0.040501,2.832820,1.925623,9.555775,-1.978334,7.973119,-7.910961,-0.844494,-7.177171,6.159928],[3.908763,-5.149349,-2.498025,-2.195024,-4.489694,7.885771,8.435906,4.988983,-3.721607,-3.397414,4.423410,-6.081568,0.838795],[6.283915,0.877868,4.141065,-7.383688,5.473287,7.536502,3.199933,5.950007,-2.103581,9.435705,0.860546,-0.811415,-6.418174],[1.390050,7.013524,9.144820,-7.168384,-3.323728,3.414566,3.910845,8.696895,-4.207040,-8.443028,0.863803,-0.383516,-6.939871],[-4.415883,8.552105,-3.452319,-5.192198,-6.538192,6.969112,-3.282171,-0.856146,-0.598767,-3.649732,-5.132112,-3.428638,-6.371706],[6.825231,-9.306836,-4.628086,-4.078866,9.723347,-4.525322,4.261361,2.784622,7.680826,-0.412372,1.010324,8.717693,-8.980894],[5.775773,-0.857664,-1.354883,-9.080629,-5.204886,1.275277,9.311446,9.041148,-1.283451,-6.417739,1.796798,-5.031072,2.857763]],[[3.684125,4.268688,-1.784014,-4.767119,5.957070,-6.708051,-3.266626,-8.334742,6.422566,-9.705940,-0.582647,2.267576,0.288489],[-5.886315,-7.557465,1.045337,4.105729,1.106753,3.164909,-8.813165,-5.290247,7.219195,7.097392,2.810791,3.392071,-5.030765],[-2.640981,-1.110892,-4.022521,4.900206,-4.551525,-0.116172,-3.548467,5.880640,-4.656090,-3.657064,-3.540330,5.036614,5.178095],[-4.098635,-3.532759,-3.027213,9.244474,-2.975407,-2.744167,-9.196245,7.655466,-7.769497,0.696331,7.780002,6.403973,-7.265034],[6.658763,-1.627012,-6.474134,9.263444,0.495073,-3.298030,-1.587503,-2.440249,-0.468459,1.814361,-4.106101,9.314388,1.414942],[3.620833,-4.662494,-5.499370,3.903718,5.137121,-1.962467,-3.845575,-2.671114,-7.621245,-1.397949,8.156574,1.241154,-7.919037],[-4.510846,6.712986,-2.088897,9.366616,4.430617,2.804975,-3.535497,-1.236012,0.912846,-2.885709,7.354682,9.098606,6.348722],[7.852336,1.328582,-7.140513,9.190718,-1.259359,-4.949794,1.183363,7.927326,-8.299847,6.167391,-1.478078,-5.078050,-0.722028],[7.210635,8.818247,7.331152,-1.811568,-4.863431,-0.382637,-4.473760,7.282564,-5.954984,-5.243269,1.663173,6.240326,-9.021453]],[[-2.294504,-9.471387,-4.907493,-0.963507,8.557180,-9.715673,-6.996658,-7.021437,0.289151,5.874896,-1.380463,5.632336,-0.297537],[3.889815,7.820171,8.797406,-9.796885,-7.187811,-8.956925,-4.539343,-1.190003,6.122292,1.242123,-7.246926,-0.990379,-1.450517],[9.970761,-0.006211,-0.913123,-8.113146,1.670038,1.231764,9.313428,-1.948840,-5.086187,0.608649,-4.483461,-2.954031,8.538583],[-2.598090,-3.403802,-3.178769,-6.673435,2.873042,-9.765488,-0.261529,-1.579798,-5.882677,4.274060,2.941970,7.762077,2.651931],[0.827381,-2.260428,-0.410896,-9.265572,2.074419,-0.477831,2.525822,-4.329341,9.856558,6.983764,7.050650,-3.999936,2.031071],[-5.860055,-4.612111,-2.524199,8.262112,-9.488410,2.887302,4.368489,7.122738,-4.205926,2.599536,8.363228,6.698501,-0.904254],[-6.156165,3.068141,-6.465925,-6.484713,4.878382,-2.081837,4.450111,-9.409920,-2.268752,5.937681,-0.123749,-5.556418,9.552644],[-7.714601,3.338280,4.223234,7.926458,4.968829,-9.317128,7.840450,-7.700923,9.923423,-7.337869,-2.568796,7.139496,3.759943],[4.319486,7.095184,9.137053,6.797091,8.526934,-0.624636,2.334935,-9.508789,5.012233,-1.941907,-6.992958,-9.087588,5.958870]],[[5.088174,-7.577476,-0.164915,-7.682268,-9.490933,-7.063554,-8.961069,-0.561536,-4.050485,-1.930685,-0.179436,-0.821912,5.617710],[-7.749092,-3.858475,-3.526421,-4.065832,-8.777588,-1.449759,-7.025353,-1.148038,-9.890268,-3.691291,5.758038,7.075432,-8.404518],[6.584279,-7.417249,7.918163,-7.067485,-7.341390,7.317582,-5.800157,-9.207621,-7.164954,0.354652,3.273418,-3.259441,3.825185],[-3.485192,3.358388,-6.575870,-7.978090,-8.898406,2.988598,2.501344,0.431356,-6.684296,-8.358370,2.570655,0.025463,5.286547],[-8.070607,1.009953,0.874668,-5.795441,-7.641604,9.941710,5.338534,-3.738760,0.510653,6.628803,-8.550653,-0.551642,-2.734389],[9.124120,-3.809069,-6.565388,-3.664472,-7.065494,0.139799,3.622617,3.795919,-9.562792,-6.238805,9.531106,-5.382445,-8.510427],[-5.874461,7.872857,-9.462590,5.262741,7.723163,-7.080361,7.276991,6.895791,2.338744,-4.117721,-9.514675,-5.001162,7.636793],[-7.040745,-6.129635,-1.423826,3.507420,5.487893,-8.457141,-2.781397,-7.231183,-8.767151,-8.520230,-8.829175,-9.022546,-1.512777],[-7.720982,0.355734,7.093955,4.571560,-5.914988,-0.833002,-4.803346,-0.251386,-7.229096,-5.342050,9.654167,-5.360429,0.334642]],[[6.364058,7.430885,-0.832164,-4.184110,5.257322,7.869254,6.425213,-6.185581,3.077232,2.486573,-2.187144,-2.413723,-8.633316],[7.559387,0.093342,-0.230775,-8.860198,6.201560,8.867831,-1.285405,2.081338,7.097098,6.000465,-7.447990,-6.212129,-3.759244],[-1.837805,-8.631048,-1.693212,5.113328,-2.956396,9.326171,-4.184612,3.446134,-4.470504,-8.374270,4.342414,0.367873,-0.283340],[2.973153,0.795901,5.257528,-4.381909,6.406793,3.418442,3.755346,-6.820091,-0.754972,7.715962,-0.363764,0.510849,7.009311],[-9.082819,7.134036,-9.120884,-0.779059,0.955236,6.485904,3.986470,-1.936124,-2.165041,-7.113218,-1.012220,1.597693,-2.168348],[-2.870410,-1.733136,-5.134907,-0.355635,3.763150,-3.462290,-9.831726,4.886523,8.642110,-7.059563,9.757537,7.691122,4.102654],[-4.289250,4.573186,-5.039417,-8.585547,8.571472,-6.439354,6.503645,0.372920,1.591655,1.748260,2.681009,2.171491,-8.200455],[-5.401605,-7.093092,-7.346496,-6.622318,2.275098,0.891307,-2.847877,-7.105978,-3.789712,-6.722536,9.187409,3.327951,7.231569],[3.001407,8.630993,1.545339,-2.378698,3.061603,4.506750,-6.377322,3.057624,-4.986440,6.365599,-2.675925,-2.514079,1.604560]],[[-7.780116,-1.328354,6.929682,-3.493645,-6.640995,8.079481,1.192099,3.539439,-0.142586,3.128771,6.044385,5.452024,-4.191074],[-1.740516,5.345982,-5.626004,-6.717038,3.678278,-6.600612,-8.761718,6.599152,0.209577,6.805822,4.544370,0.542295,3.696646],[3.134608,1.294001,-1.076241,-9.606269,1.536441,1.998307,-5.853205,3.512375,-5.646381,1.251257,0.469950,-0.761074,6.787008],[0.196518,-1.523646,4.508990,8.870654,9.089454,-5.478736,3.740580,-3.447247,8.374289,0.973959,5.053533,1.696112,-4.693938],[-5.696236,8.301503,-4.551072,-9.458308,6.742337,-1.660757,-2.012890,-2.875285,-6.062335,-8.342145,-6.560238,8.074364,-2.752083],[4.424701,2.644149,5.714615,-4.984193,2.966033,1.656583,9.532308,5.188854,0.126348,4.938744,-6.831429,-0.082446,-2.827713],[-3.965199,-0.958454,-0.524283,-4.000210,8.808942,2.719444,-4.496953,3.041593,-9.729743,-9.007865,-6.427574,6.447947,0.078693],[5.430780,-2.471347,-9.749976,7.500951,-6.020551,-4.314249,4.255085,-6.566453,4.645217,6.088712,-0.904815,4.431297,9.025751],[-6.007688,1.455985,-8.459196,0.770415,-4.135824,-7.607950,2.915235,-2.939447,1.157284,4.941426,-3.701452,9.606216,1.682332]],[[-8.009761,-0.680247,8.172941,-5.133762,5.045890,4.990815,-9.042352,-5.726081,-2.374668,2.338436,-2.330768,-5.168402,-8.828499],[-1.200931,6.262782,5.890006,7.445145,1.104552,-2.761661,3.132534,3.239316,1.824208,8.314524,-8.382628,7.581531,-1.329424],[-5.304392,0.113464,8.445579,-6.193954,-8.520118,-8.172456,-2.119453,-8.578022,-1.650588,-0.999885,-0.337254,5.976429,1.234315],[6.712160,5.031173,-9.263663,8.505646,-9.281196,-7.829304,1.443029,-2.894363,-1.240845,5.465827,1.386295,-3.399031,1.018016],[7.521408,-6.495112,-2.204717,5.638899,9.008867,-4.224401,-8.809924,-0.243004,4.809065,1.832068,4.060942,-6.934263,-8.343573],[-2.007084,4.140629,7.867296,-3.636323,-5.605704,-9.008384,-9.453680,1.733997,-6.650336,2.584399,-0.220849,-7.255635,-2.865430],[9.436594,-6.008884,7.193591,7.578187,2.041710,9.839061,-4.634451,-5.758839,-9.742885,9.244350,3.741728,6.336866,-2.787879],[-6.462230,5.185559,-3.918139,2.832340,-3.638309,-4.307270,-3.940772,-4.694830,6.746459,4.193381,6.562519,7.035793,6.987871],[-9.026944,8.666456,3.751298,3.960872,8.861739,8.592647,8.177697,6.905395,7.797097,3.552773,0.364942,6.048421,-8.304262]],[[-7.698193,1.748396,5.507582,-6.094292,-1.161614,-8.613982,-8.761023,2.729786,-8.803104,5.380109,-2.948325,6.172303,0.415404],[2.893958,7.155160,6.669102,8.155640,-0.582490,1.173060,9.309005,-0.435703,5.469248,9.169156,-6.226860,1.636399,1.241216],[9.157855,4.840084,-4.800322,3.946945,2.343521,3.194773,4.246784,6.103121,4.024580,-8.798387,-4.950171,-8.433796,-7.622512],[9.739104,1.274993,-0.241426,-6.718736,5.781052,-1.720816,-5.520648,3.106130,-4.816022,3.940128,0.612419,-2.786341,-2.842657],[-2.164406,3.617723,-3.220010,-8.624226,4.852413,-0.103455,0.458283,-4.956989,-0.435499,3.785850,2.889248,-1.654462,1.010135],[6.322429,0.827896,-2.962801,-4.124397,-6.564084,-8.220868,-3.434255,2.688211,0.657116,-2.149155,-9.668184,6.470310,4.792854],[8.759247,0.991518,6.506784,8.826738,9.289499,-3.908970,4.179596,-2.570747,-8.511644,8.879102,3.416928,-2.755046,3.022874],[-8.323552,-0.463275,6.604099,8.636144,-5.123272,2.319994,6.422015,4.543853,-3.755153,-2.834679,-1.361911,-3.957957,6.347787],[6.503399,1.982478,-0.540905,3.534392,6.444644,2.641692,5.796657,-1.271445,0.143559,2.934083,7.157116,4.708261,-9.352134]],[[-9.826305,5.464998,-9.540982,2.045714,6.111793,5.940130,-5.945095,1.120775,1.206119,8.704701,9.376641,5.738867,8.523452],[4.884554,8.826758,2.633753,-4.032669,4.594748,1.577432,-4.507437,-4.046481,8.656630,9.571678,-2.992226,5.439651,-5.985611],[-1.416788,-6.075907,-1.996487,-8.679156,7.251412,-3.621645,5.800602,3.646310,-3.245999,5.397879,5.970183,-5.675908,-1.535145],[-2.549068,-8.315962,-6.181374,-6.968541,8.998731,-5.344556,-3.595872,8.020366,0.481399,-5.786828,0.007851,5.479465,-2.940543],[6.896705,9.477786,4.391440,6.631293,-8.416992,4.848414,-1.371700,7.990670,-8.162983,2.352778,-0.114631,-7.292157,0.065656],[-8.763159,3.942304,4.908272,7.558307,-0.978028,-3.243059,-5.969573,7.984002,-9.813648,-3.498659,0.639005,2.384685,-6.837692],[0.450705,4.278084,-4.101453,3.781435,-8.160240,-0.196682,2.322981,-3.363172,5.290259,-1.000384,-5.839489,-2.616534,2.753210],[-0.093986,-6.322011,-7.852803,9.166745,-2.100406,3.641477,6.305916,8.804997,4.021207,-1.612132,-6.756019,0.268943,3.381249],[9.007415,-3.014703,5.729412,-5.924227,-1.121841,7.948612,-0.430236,4.195393,-1.326428,5.225767,9.082440,-9.850787,-3.486959]],[[4.665826,-9.194730,-1.990293,-0.984372,-9.246550,2.317410,-2.134021,8.721472,9.785686,4.878444,-9.897512,-6.287695,7.746588],[-7.232454,2.292178,9.926399,-0.240459,2.396305,9.533724,-5.814574,8.908735,-5.207240,3.374799,-5.434602,8.960421,0.848393],[0.058990,3.077767,7.559135,-3.216171,4.000754,2.214048,4.575930,-9.509586,0.012661,-6.487340,-8.165739,-4.789249,2.527579],[-1.573763,-3.719691,-7.763883,7.217857,9.844577,7.308383,-1.432260,8.881387,4.964123,-1.974443,8.987133,-7.678709,1.750888],[8.460437,-8.495607,-2.629278,7.024681,-9.790637,-8.324383,-9.393740,8.529571,7.594275,-1.783492,4.206351,-6.310574,1.078735],[0.388723,6.440794,-9.242376,-8.939091,0.828135,4.596977,-0.466189,-6.568465,-1.009592,-2.622111,6.218368,3.330978,-4.782647],[2.722913,-9.068887,-3.856821,-8.724874,-2.050395,-0.093855,5.737317,7.879408,9.895698,-1.077648,-9.522582,-2.017291,-3.893758],[1.700091,3.244223,1.712444,-3.037883,8.798723,5.712466,-7.530497,-5.314067,8.011734,3.607069,-9.997217,-8.175195,-3.419681],[8.289102,5.886296,-3.763753,4.064450,-7.373841,-3.260812,7.653419,1.903207,2.275171,-5.956920,5.541422,1.308635,1.781873]]], dtype = "float32")#candidate|3650|(12, 9, 13)|const|float32
var_3651 = relay.var("var_3651", dtype = "float32", shape = (12, 9, 13))#candidate|3651|(12, 9, 13)|var|float32
bop_3652 = relay.greater(const_3650.astype('bool'), relay.reshape(var_3651.astype('bool'), relay.shape_of(const_3650))) # shape=(12, 9, 13)
uop_3661 = relay.sin(bop_3652.astype('float64')) # shape=(12, 9, 13)
func_3447_call = mod.get_global_var('func_3447')
func_3449_call = mutated_mod.get_global_var('func_3449')
call_3666 = func_3447_call()
call_3667 = func_3447_call()
output = relay.Tuple([uop_3661,call_3666,])
output2 = relay.Tuple([uop_3661,call_3667,])
func_3674 = relay.Function([var_3651,], output)
mod['func_3674'] = func_3674
mod = relay.transform.InferType()(mod)
var_3675 = relay.var("var_3675", dtype = "float32", shape = (12, 9, 13))#candidate|3675|(12, 9, 13)|var|float32
output = func_3674(var_3675)
func_3676 = relay.Function([var_3675], output)
mutated_mod['func_3676'] = func_3676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3355_call = mod.get_global_var('func_3355')
func_3356_call = mutated_mod.get_global_var('func_3356')
call_3686 = func_3355_call()
call_3687 = func_3355_call()
const_3692 = relay.const([[[-3,-1,-6,-7,-1,-7],[-6,2,10,7,10,-7],[10,-8,-1,-10,-7,-3],[2,-9,6,7,-10,3],[6,-5,5,1,-4,-10],[-5,1,3,-4,-3,-6],[-10,8,-4,9,1,6],[-8,3,6,-8,4,-3],[-3,-2,10,5,2,10],[-6,-8,7,-5,1,-8],[1,-9,7,-4,9,-9],[5,-10,7,3,-3,2]],[[-4,-4,5,5,-9,-5],[-8,-9,4,-7,1,-5],[7,4,8,-9,-3,9],[-8,5,9,-6,-8,6],[-2,-2,10,1,-5,9],[-1,6,-3,1,9,1],[-6,7,-1,-6,5,5],[-5,-3,1,6,2,3],[6,9,10,5,8,-9],[-2,3,5,3,4,2],[7,5,-9,7,4,3],[7,-1,-10,3,7,1]],[[5,2,9,-3,4,-8],[-10,-2,-2,-8,5,-1],[2,-8,1,1,-3,-5],[8,1,-8,7,-5,-2],[-6,-5,2,5,-3,2],[-2,1,-7,8,-6,9],[1,2,9,-4,-6,3],[6,-3,10,-4,-10,8],[1,5,8,-1,-4,-6],[9,-5,10,5,9,-6],[5,3,-6,3,10,7],[5,-6,3,1,1,-8]],[[-5,6,3,5,3,3],[1,-7,7,-7,-1,9],[-5,7,6,7,-10,-9],[7,1,2,-7,2,-3],[9,-1,-5,4,3,-7],[9,-4,1,2,-5,-7],[-6,1,-10,9,4,-10],[2,-8,9,4,3,7],[-9,-1,-1,-5,-5,-7],[9,-6,7,2,4,-4],[9,-1,8,-6,6,-3],[-6,-3,5,7,9,-8]],[[1,-8,4,-8,-2,5],[4,6,9,-6,-10,-5],[1,10,7,-8,2,3],[-10,8,7,-1,-3,2],[8,6,-7,2,4,9],[4,10,-5,-9,-6,-6],[-10,-6,4,4,8,-10],[2,-4,-6,8,2,5],[2,4,-2,-3,-5,-5],[8,1,-1,8,2,10],[9,-7,5,-10,-7,7],[3,2,-8,9,8,10]],[[2,3,-4,-2,-10,-3],[3,5,8,-1,-1,-10],[-2,3,-10,9,2,6],[4,8,8,-2,3,-5],[7,-1,-1,-7,2,2],[4,-6,5,4,-1,-5],[4,-2,-3,9,2,-10],[2,5,9,10,9,4],[9,5,-10,10,8,-2],[-10,-4,-10,-7,-2,-8],[10,-6,5,4,8,5],[10,4,9,10,7,-2]],[[-6,1,1,-3,-9,-9],[9,-10,3,-6,1,10],[6,-7,-1,9,-8,-9],[2,-10,-9,7,4,-6],[3,7,-10,3,-4,8],[-1,-5,1,-10,4,-6],[-10,-2,10,-9,-9,-6],[5,4,2,-5,3,6],[3,-7,-7,-1,-5,1],[-2,6,-1,10,-2,5],[8,-6,1,-5,9,3],[-6,-3,9,4,-8,-3]],[[-3,-3,7,8,8,-8],[-8,-5,-6,3,5,3],[-1,7,7,8,-3,6],[1,-7,2,9,-8,-8],[-3,8,-8,3,-6,-1],[-10,-5,-2,-5,9,-9],[5,10,2,-2,9,-4],[9,-8,-8,9,8,3],[9,10,-7,-6,8,-10],[5,5,9,3,-7,-4],[8,2,-1,3,-10,5],[-3,-4,10,1,-5,9]],[[6,-4,3,-7,-3,-6],[-2,4,3,3,-2,-6],[8,-8,-4,9,-9,4],[-10,2,9,-8,10,-7],[3,10,5,-8,3,-8],[-2,-6,9,-4,10,4],[5,-4,-6,-9,-9,6],[5,8,1,5,-2,-6],[-3,-2,6,4,-10,8],[7,6,-6,-9,8,9],[3,3,-4,-8,1,10],[6,3,-2,1,-8,-7]],[[-1,7,6,-7,9,6],[-2,10,4,3,6,5],[4,-9,-5,9,5,-3],[4,-1,1,8,-2,7],[2,6,-3,-8,-7,1],[5,5,-10,2,10,8],[-3,-5,7,-10,9,7],[-5,8,1,-1,1,-6],[-6,-4,-2,-8,-9,9],[-4,-4,-5,4,5,-1],[5,-3,-9,7,9,-4],[4,-5,6,8,3,2]],[[5,7,1,-6,-1,3],[10,-9,-3,-10,-6,1],[-9,1,-5,1,2,9],[9,10,-6,1,-4,5],[-3,6,9,1,-10,-1],[9,2,3,7,-7,-1],[-1,-9,3,2,-6,-5],[-8,5,3,1,-10,-5],[4,-7,10,-6,-10,-4],[6,9,6,8,-2,-2],[-9,-9,7,3,6,4],[8,5,-4,3,8,-3]],[[7,10,4,-6,-4,3],[-9,-5,-6,8,-9,-6],[-3,5,2,-8,1,2],[-8,10,3,5,10,6],[-7,2,9,-10,-8,6],[3,10,-1,-1,3,3],[3,-8,6,-8,10,10],[1,-4,7,10,-5,5],[-3,5,6,-1,-3,-1],[-7,-3,-3,8,5,1],[-3,1,1,6,-10,1],[-8,-6,-3,10,-8,-7]]], dtype = "int64")#candidate|3692|(12, 12, 6)|const|int64
bop_3693 = relay.left_shift(call_3686.astype('int64'), const_3692.astype('int64')) # shape=(12, 12, 6)
bop_3696 = relay.left_shift(call_3687.astype('int64'), const_3692.astype('int64')) # shape=(12, 12, 6)
output = bop_3693
output2 = bop_3696
func_3704 = relay.Function([], output)
mod['func_3704'] = func_3704
mod = relay.transform.InferType()(mod)
mutated_mod['func_3704'] = func_3704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3704_call = mutated_mod.get_global_var('func_3704')
call_3705 = func_3704_call()
output = call_3705
func_3706 = relay.Function([], output)
mutated_mod['func_3706'] = func_3706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1392_call = mod.get_global_var('func_1392')
func_1393_call = mutated_mod.get_global_var('func_1393')
call_3749 = relay.TupleGetItem(func_1392_call(), 1)
call_3750 = relay.TupleGetItem(func_1393_call(), 1)
output = relay.Tuple([call_3749,])
output2 = relay.Tuple([call_3750,])
func_3753 = relay.Function([], output)
mod['func_3753'] = func_3753
mod = relay.transform.InferType()(mod)
mutated_mod['func_3753'] = func_3753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3753_call = mutated_mod.get_global_var('func_3753')
call_3754 = func_3753_call()
output = call_3754
func_3755 = relay.Function([], output)
mutated_mod['func_3755'] = func_3755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1292_call = mod.get_global_var('func_1292')
func_1293_call = mutated_mod.get_global_var('func_1293')
call_3837 = relay.TupleGetItem(func_1292_call(), 1)
call_3838 = relay.TupleGetItem(func_1293_call(), 1)
var_3841 = relay.var("var_3841", dtype = "float32", shape = (12, 4, 6))#candidate|3841|(12, 4, 6)|var|float32
bop_3842 = relay.less(call_3837.astype('bool'), relay.reshape(var_3841.astype('bool'), relay.shape_of(call_3837))) # shape=(12, 4, 6)
bop_3845 = relay.less(call_3838.astype('bool'), relay.reshape(var_3841.astype('bool'), relay.shape_of(call_3838))) # shape=(12, 4, 6)
output = bop_3842
output2 = bop_3845
func_3847 = relay.Function([var_3841,], output)
mod['func_3847'] = func_3847
mod = relay.transform.InferType()(mod)
var_3848 = relay.var("var_3848", dtype = "float32", shape = (12, 4, 6))#candidate|3848|(12, 4, 6)|var|float32
output = func_3847(var_3848)
func_3849 = relay.Function([var_3848], output)
mutated_mod['func_3849'] = func_3849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1684_call = mod.get_global_var('func_1684')
func_1685_call = mutated_mod.get_global_var('func_1685')
call_3920 = relay.TupleGetItem(func_1684_call(), 1)
call_3921 = relay.TupleGetItem(func_1685_call(), 1)
const_3928 = relay.const([[[0.702729,-3.879946,9.352974,1.903910,9.766471,4.181442],[-6.883119,-2.369161,2.015824,-4.537469,4.102853,2.235124],[2.666990,-9.242346,0.143131,-2.633235,6.383898,-5.368719]],[[-1.876093,-3.501399,7.807379,8.207270,7.136847,-9.736679],[0.946813,8.798532,-9.196819,3.363027,0.834407,-8.916499],[-9.663351,3.464992,-9.799489,-1.253267,-9.418260,-7.487943]],[[-6.469009,3.383211,4.955350,-4.849322,-2.734991,-0.286755],[-6.482189,-5.181838,9.554501,9.892442,-3.456096,1.618227],[-7.135485,7.196395,-5.031669,-9.771489,1.135275,-8.567642]],[[-5.103976,0.965645,-7.902199,5.116804,3.510508,-7.849682],[-5.949874,-1.992846,5.642191,8.235378,6.605272,-6.078806],[-9.841622,3.684099,-0.911513,7.156472,-2.025939,3.029276]],[[-3.135040,-8.362991,-5.135088,-6.374523,-2.290166,9.748105],[-4.056302,2.523555,4.312434,8.328088,6.725216,0.805926],[2.975473,-1.603981,8.412012,-1.914439,-8.179164,-2.639374]],[[-4.557633,0.171571,0.731065,-3.772861,-2.584631,-8.332876],[5.299779,3.824366,-9.918614,-7.833743,8.894532,4.872673],[-5.529083,-6.320418,-5.111688,1.620460,1.357922,2.151621]],[[-4.083632,-9.813740,-4.233078,-1.001292,9.628745,-0.119493],[0.525373,1.403758,9.722203,3.227261,-6.007574,-4.229138],[-0.024507,0.846000,-2.937982,1.665388,-4.932994,0.238427]],[[-9.034955,-6.830347,-1.522385,5.794745,9.459238,-9.222915],[0.195870,-2.482899,-4.307765,5.600422,0.648114,-8.452617],[4.978807,-1.125145,-0.473378,-0.192634,3.156658,-2.623754]],[[5.314585,7.003937,-1.591036,7.375504,-7.801297,3.435573],[-3.795536,3.872072,-7.310197,-5.106296,1.502757,0.294872],[-4.978735,-9.920716,9.154916,7.493399,-8.777243,0.212804]],[[0.047941,7.246811,1.000609,-8.904673,7.807686,3.730852],[7.188704,2.881461,-3.692065,-6.916495,3.358671,-1.387781],[2.689189,3.788244,0.044260,-9.774746,-8.454037,-8.532362]],[[9.879838,6.426995,-9.792151,-7.005201,-0.105451,8.840601],[-2.701912,-9.142135,-7.253397,-5.511089,-2.904086,-3.306657],[6.652498,-9.527652,-7.885371,3.699924,5.294299,-7.636027]],[[7.900998,-9.945147,-7.359653,-9.373384,3.586243,-8.689029],[8.141491,-5.158383,8.245986,1.906234,1.983949,-2.649539],[-9.886346,1.244179,-3.042395,-6.613499,-8.239356,-6.089241]]], dtype = "float64")#candidate|3928|(12, 3, 6)|const|float64
bop_3929 = relay.logical_xor(call_3920.astype('int8'), const_3928.astype('int8')) # shape=(12, 3, 6)
bop_3932 = relay.logical_xor(call_3921.astype('int8'), const_3928.astype('int8')) # shape=(12, 3, 6)
func_2561_call = mod.get_global_var('func_2561')
func_2564_call = mutated_mod.get_global_var('func_2564')
var_3944 = relay.var("var_3944", dtype = "float64", shape = (936,))#candidate|3944|(936,)|var|float64
call_3943 = relay.TupleGetItem(func_2561_call(relay.reshape(var_3944.astype('float64'), [13, 12, 6])), 0)
call_3945 = relay.TupleGetItem(func_2564_call(relay.reshape(var_3944.astype('float64'), [13, 12, 6])), 0)
output = relay.Tuple([bop_3929,call_3943,var_3944,])
output2 = relay.Tuple([bop_3932,call_3945,var_3944,])
func_3956 = relay.Function([var_3944,], output)
mod['func_3956'] = func_3956
mod = relay.transform.InferType()(mod)
var_3957 = relay.var("var_3957", dtype = "float64", shape = (936,))#candidate|3957|(936,)|var|float64
output = func_3956(var_3957)
func_3958 = relay.Function([var_3957], output)
mutated_mod['func_3958'] = func_3958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3403_call = mod.get_global_var('func_3403')
func_3404_call = mutated_mod.get_global_var('func_3404')
call_4007 = func_3403_call()
call_4008 = func_3403_call()
func_159_call = mod.get_global_var('func_159')
func_163_call = mutated_mod.get_global_var('func_163')
var_4013 = relay.var("var_4013", dtype = "uint8", shape = (26, 11))#candidate|4013|(26, 11)|var|uint8
var_4014 = relay.var("var_4014", dtype = "float32", shape = (432,))#candidate|4014|(432,)|var|float32
call_4012 = relay.TupleGetItem(func_159_call(relay.reshape(var_4013.astype('uint8'), [13, 11, 2]), relay.reshape(var_4014.astype('float32'), [1, 432]), ), 1)
call_4015 = relay.TupleGetItem(func_163_call(relay.reshape(var_4013.astype('uint8'), [13, 11, 2]), relay.reshape(var_4014.astype('float32'), [1, 432]), ), 1)
output = relay.Tuple([call_4007,call_4012,var_4013,var_4014,])
output2 = relay.Tuple([call_4008,call_4015,var_4013,var_4014,])
func_4016 = relay.Function([var_4013,var_4014,], output)
mod['func_4016'] = func_4016
mod = relay.transform.InferType()(mod)
var_4017 = relay.var("var_4017", dtype = "uint8", shape = (26, 11))#candidate|4017|(26, 11)|var|uint8
var_4018 = relay.var("var_4018", dtype = "float32", shape = (432,))#candidate|4018|(432,)|var|float32
output = func_4016(var_4017,var_4018,)
func_4019 = relay.Function([var_4017,var_4018,], output)
mutated_mod['func_4019'] = func_4019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1392_call = mod.get_global_var('func_1392')
func_1393_call = mutated_mod.get_global_var('func_1393')
call_4026 = relay.TupleGetItem(func_1392_call(), 2)
call_4027 = relay.TupleGetItem(func_1393_call(), 2)
output = call_4026
output2 = call_4027
func_4040 = relay.Function([], output)
mod['func_4040'] = func_4040
mod = relay.transform.InferType()(mod)
mutated_mod['func_4040'] = func_4040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4040_call = mutated_mod.get_global_var('func_4040')
call_4041 = func_4040_call()
output = call_4041
func_4042 = relay.Function([], output)
mutated_mod['func_4042'] = func_4042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2505_call = mod.get_global_var('func_2505')
func_2506_call = mutated_mod.get_global_var('func_2506')
call_4098 = relay.TupleGetItem(func_2505_call(), 1)
call_4099 = relay.TupleGetItem(func_2506_call(), 1)
func_2157_call = mod.get_global_var('func_2157')
func_2158_call = mutated_mod.get_global_var('func_2158')
call_4115 = relay.TupleGetItem(func_2157_call(), 2)
call_4116 = relay.TupleGetItem(func_2158_call(), 2)
var_4118 = relay.var("var_4118", dtype = "float32", shape = (2310,))#candidate|4118|(2310,)|var|float32
bop_4119 = relay.subtract(call_4115.astype('float32'), relay.reshape(var_4118.astype('float32'), relay.shape_of(call_4115))) # shape=(2310,)
bop_4122 = relay.subtract(call_4116.astype('float32'), relay.reshape(var_4118.astype('float32'), relay.shape_of(call_4116))) # shape=(2310,)
output = relay.Tuple([call_4098,bop_4119,])
output2 = relay.Tuple([call_4099,bop_4122,])
func_4125 = relay.Function([var_4118,], output)
mod['func_4125'] = func_4125
mod = relay.transform.InferType()(mod)
var_4126 = relay.var("var_4126", dtype = "float32", shape = (2310,))#candidate|4126|(2310,)|var|float32
output = func_4125(var_4126)
func_4127 = relay.Function([var_4126], output)
mutated_mod['func_4127'] = func_4127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2157_call = mod.get_global_var('func_2157')
func_2158_call = mutated_mod.get_global_var('func_2158')
call_4129 = relay.TupleGetItem(func_2157_call(), 2)
call_4130 = relay.TupleGetItem(func_2158_call(), 2)
func_2840_call = mod.get_global_var('func_2840')
func_2841_call = mutated_mod.get_global_var('func_2841')
call_4131 = relay.TupleGetItem(func_2840_call(), 0)
call_4132 = relay.TupleGetItem(func_2841_call(), 0)
output = relay.Tuple([call_4129,call_4131,])
output2 = relay.Tuple([call_4130,call_4132,])
func_4134 = relay.Function([], output)
mod['func_4134'] = func_4134
mod = relay.transform.InferType()(mod)
mutated_mod['func_4134'] = func_4134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4134_call = mutated_mod.get_global_var('func_4134')
call_4135 = func_4134_call()
output = call_4135
func_4136 = relay.Function([], output)
mutated_mod['func_4136'] = func_4136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4147 = relay.var("var_4147", dtype = "uint8", shape = (16, 6, 12))#candidate|4147|(16, 6, 12)|var|uint8
var_4148 = relay.var("var_4148", dtype = "uint8", shape = (16, 6, 12))#candidate|4148|(16, 6, 12)|var|uint8
bop_4149 = relay.bitwise_xor(var_4147.astype('uint8'), relay.reshape(var_4148.astype('uint8'), relay.shape_of(var_4147))) # shape=(16, 6, 12)
output = bop_4149
output2 = bop_4149
func_4166 = relay.Function([var_4147,var_4148,], output)
mod['func_4166'] = func_4166
mod = relay.transform.InferType()(mod)
var_4167 = relay.var("var_4167", dtype = "uint8", shape = (16, 6, 12))#candidate|4167|(16, 6, 12)|var|uint8
var_4168 = relay.var("var_4168", dtype = "uint8", shape = (16, 6, 12))#candidate|4168|(16, 6, 12)|var|uint8
output = func_4166(var_4167,var_4168,)
func_4169 = relay.Function([var_4167,var_4168,], output)
mutated_mod['func_4169'] = func_4169
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4204 = relay.var("var_4204", dtype = "float32", shape = (7, 16, 3))#candidate|4204|(7, 16, 3)|var|float32
uop_4205 = relay.tan(var_4204.astype('float32')) # shape=(7, 16, 3)
var_4208 = relay.var("var_4208", dtype = "float32", shape = (7, 16, 3))#candidate|4208|(7, 16, 3)|var|float32
bop_4209 = relay.floor_mod(uop_4205.astype('float64'), relay.reshape(var_4208.astype('float64'), relay.shape_of(uop_4205))) # shape=(7, 16, 3)
output = relay.Tuple([bop_4209,])
output2 = relay.Tuple([bop_4209,])
func_4233 = relay.Function([var_4204,var_4208,], output)
mod['func_4233'] = func_4233
mod = relay.transform.InferType()(mod)
mutated_mod['func_4233'] = func_4233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4233_call = mutated_mod.get_global_var('func_4233')
var_4235 = relay.var("var_4235", dtype = "float32", shape = (7, 16, 3))#candidate|4235|(7, 16, 3)|var|float32
var_4236 = relay.var("var_4236", dtype = "float32", shape = (7, 16, 3))#candidate|4236|(7, 16, 3)|var|float32
call_4234 = func_4233_call(var_4235,var_4236,)
output = call_4234
func_4237 = relay.Function([var_4235,var_4236,], output)
mutated_mod['func_4237'] = func_4237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1684_call = mod.get_global_var('func_1684')
func_1685_call = mutated_mod.get_global_var('func_1685')
call_4317 = relay.TupleGetItem(func_1684_call(), 1)
call_4318 = relay.TupleGetItem(func_1685_call(), 1)
var_4320 = relay.var("var_4320", dtype = "float64", shape = (12, 16, 6))#candidate|4320|(12, 16, 6)|var|float64
bop_4321 = relay.minimum(call_4317.astype('uint16'), var_4320.astype('uint16')) # shape=(12, 16, 6)
bop_4324 = relay.minimum(call_4318.astype('uint16'), var_4320.astype('uint16')) # shape=(12, 16, 6)
bop_4336 = relay.not_equal(var_4320.astype('bool'), call_4317.astype('bool')) # shape=(12, 16, 6)
bop_4339 = relay.not_equal(var_4320.astype('bool'), call_4318.astype('bool')) # shape=(12, 16, 6)
func_610_call = mod.get_global_var('func_610')
func_614_call = mutated_mod.get_global_var('func_614')
var_4347 = relay.var("var_4347", dtype = "float64", shape = (2310,))#candidate|4347|(2310,)|var|float64
var_4348 = relay.var("var_4348", dtype = "float32", shape = (2, 216))#candidate|4348|(2, 216)|var|float32
call_4346 = relay.TupleGetItem(func_610_call(relay.reshape(var_4347.astype('float64'), [2310,]), relay.reshape(var_4348.astype('float32'), [432,]), ), 2)
call_4349 = relay.TupleGetItem(func_614_call(relay.reshape(var_4347.astype('float64'), [2310,]), relay.reshape(var_4348.astype('float32'), [432,]), ), 2)
output = relay.Tuple([bop_4321,bop_4336,call_4346,var_4347,var_4348,])
output2 = relay.Tuple([bop_4324,bop_4339,call_4349,var_4347,var_4348,])
func_4351 = relay.Function([var_4320,var_4347,var_4348,], output)
mod['func_4351'] = func_4351
mod = relay.transform.InferType()(mod)
mutated_mod['func_4351'] = func_4351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4351_call = mutated_mod.get_global_var('func_4351')
var_4353 = relay.var("var_4353", dtype = "float64", shape = (12, 16, 6))#candidate|4353|(12, 16, 6)|var|float64
var_4354 = relay.var("var_4354", dtype = "float64", shape = (2310,))#candidate|4354|(2310,)|var|float64
var_4355 = relay.var("var_4355", dtype = "float32", shape = (2, 216))#candidate|4355|(2, 216)|var|float32
call_4352 = func_4351_call(var_4353,var_4354,var_4355,)
output = call_4352
func_4356 = relay.Function([var_4353,var_4354,var_4355,], output)
mutated_mod['func_4356'] = func_4356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3638_call = mod.get_global_var('func_3638')
func_3639_call = mutated_mod.get_global_var('func_3639')
call_4372 = relay.TupleGetItem(func_3638_call(), 0)
call_4373 = relay.TupleGetItem(func_3639_call(), 0)
output = relay.Tuple([call_4372,])
output2 = relay.Tuple([call_4373,])
func_4383 = relay.Function([], output)
mod['func_4383'] = func_4383
mod = relay.transform.InferType()(mod)
mutated_mod['func_4383'] = func_4383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mutated_mod.get_global_var('func_4383')
call_4384 = func_4383_call()
output = call_4384
func_4385 = relay.Function([], output)
mutated_mod['func_4385'] = func_4385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2104_call = mod.get_global_var('func_2104')
func_2105_call = mutated_mod.get_global_var('func_2105')
call_4462 = relay.TupleGetItem(func_2104_call(), 0)
call_4463 = relay.TupleGetItem(func_2105_call(), 0)
output = relay.Tuple([call_4462,])
output2 = relay.Tuple([call_4463,])
func_4474 = relay.Function([], output)
mod['func_4474'] = func_4474
mod = relay.transform.InferType()(mod)
mutated_mod['func_4474'] = func_4474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4474_call = mutated_mod.get_global_var('func_4474')
call_4475 = func_4474_call()
output = call_4475
func_4476 = relay.Function([], output)
mutated_mod['func_4476'] = func_4476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3609_call = mod.get_global_var('func_3609')
func_3610_call = mutated_mod.get_global_var('func_3610')
call_4504 = relay.TupleGetItem(func_3609_call(), 2)
call_4505 = relay.TupleGetItem(func_3610_call(), 2)
output = relay.Tuple([call_4504,])
output2 = relay.Tuple([call_4505,])
func_4523 = relay.Function([], output)
mod['func_4523'] = func_4523
mod = relay.transform.InferType()(mod)
output = func_4523()
func_4524 = relay.Function([], output)
mutated_mod['func_4524'] = func_4524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_396_call = mod.get_global_var('func_396')
func_397_call = mutated_mod.get_global_var('func_397')
call_4525 = relay.TupleGetItem(func_396_call(), 0)
call_4526 = relay.TupleGetItem(func_397_call(), 0)
func_2314_call = mod.get_global_var('func_2314')
func_2316_call = mutated_mod.get_global_var('func_2316')
call_4533 = relay.TupleGetItem(func_2314_call(), 0)
call_4534 = relay.TupleGetItem(func_2316_call(), 0)
func_2647_call = mod.get_global_var('func_2647')
func_2649_call = mutated_mod.get_global_var('func_2649')
const_4539 = relay.const([9,-3,-6,-4,-3,4,7,-8,10,-3,10,9,-6,-5,10,-5,2,7,-4,-6,6,-10,10,10,-3,6,-6,-9,3,-1,8,10,-5,-9,-8,6,2,6,6,-3,-9,-10,-4,-5,-7,-8,6,6,-6,8,7,-7,2,3,9,4,-5,-3,7,5,-8,-10,2,-4,10,-2,8,10,-5,7,-10,-2,-7,-3,-4,-10,-1,7,-8,-2,4,7,-5,1,9,6,9,4,4,2,-6,-10,-5,-10,7,3,-6,-3,-7,-3,-4,-8,6,9,-1,-9,5,4,8,5,6,9,8,2,-8,-4,3,-5,5,-8,9,3,-9,-4,-1,-2,-6,-10,5,-2,7,7,-1,9,-8,-2,6,-1,-4,-2,5,-5,-7,7,-7,6,8,-5,6,7,-3,-9,6,-6,4,-7,-5,1,-7,5,1,9,-5,-8,-8,-4,-4,2,4,2,7,8,4,-4,-10,-5,2,-10,-6,-7,5,-9,-8,-3,-10,-2,-6,1,-2,1,5,4,-7,4,5,2,-5,-1,2,5,8,-1,10,2,-6,-3,-8,6,-3,1,-2,-8,-3,-9,-2,7,4,2,-9,-5,9,5,6,3,4,5,-6,-4,-3,-4,-9,-5,-10,-6,-3,-5,8,-10,-3,-2,-6,4,2,-2,1,10,-6,5,-1,-4,-10,9,-9,2,3,-1,-3,-2,3,1,-10,5,5,-2,1,-3,7,8,-2,-9,6,-5,-7,7,-2,5,9,-10,10,-5,9,1,-1,-3,-1,9,6,-8,2,2,-4,-8,7,-1,1,7,3,10,-6,8,-7,5,-2,8,-10,10,9,1,7,2,-8,-9,-4,-7,-2,-8,-6,4,-9,2,5,5,1,10,10,5,1,-2,-5,-7,-6,7,9,-9,-6,-8,-2,-4,1,-10,-6,-2,1,5,-3,-4,-7,-10,-4,5,-10,10,-7,7,-6,10,4,-2,6,-2,10,-7,-4,-5,7,-8,-2,3,1,-7,6,3,-1,-6,2,3,1,9,10,6,4,6,-2,-5,-8,-2,-2,-8,-9,10,-10,3,5,-1,-8,2,-10,-7,-9,5,-7,-4,9,-1,-6,-10,-6,-10,-7,-7,7,-8,-10,-7,-9,6,9,-4,2,9,-6,6,3,4,6,-6,1,-8,-1,7,9,-6,5,-9,5,7,-6,-5,9,-1,-9,8,3,8,-2,3,-10,2,-1,4,-10,9,-2,-6,-2,-5,-4,-10,8,-10,-6,-6,4,-4,10,2,7,-5,-6,1,8,10,1,-8,1,-3,-10,5,-6,10,-5,5,4,4,-1,-9,-4,-8,10,-6,-3,-7,-10,9,-1,4,-1,-9,-9,6,-7,8,3,-6,3,3,-3,-10,-5,8,8,-2,-1,8,4,-9,-9,4,-2,-7,6,-10,4,-3,7,-5,-5,7,-9,-5,9,6,10,1,4,-6,2,1,-4,-5,6,-7,6,-7,9,8,8,7,5,10,10,10,-10,7,5,-6,-9,-4,-8,-10,4,8,-1,10,7,-7,-5,-8,-8,-10,7,4,10,-3,-8,7,10,-6,10,-8,7,3,-2,9,-6,-3,-7,-2,-6,5,-9,-7,-8,1,10,-5,5,-9,9,-7,10,-9,-8,4,-8,-7,1,-10,-9,-7,10,-4,-9,2,-4,4,-8,1,-6,1,3,-2,3,5,3,-9,-3,-10,7,-2,-10,2,-9,-7,7,-10,-5,7,6,-8,-4,-4,9,1,7,-6,8,-8,-3,2,10,-10,-4,-10,7,-9,-6,-7,-8,-10,10,1,-6,-4,1,-8,-8,5,3,10,7,10,4,-6,-6,7,-4,5,-7,-10,-5,-3,-5,2,-6,-10,6,6,-7,-2,1,-10,-10,-7,-2,-7,-5,9,-9,-10,5,-9,9,-3,-8,-3,4,5,6,3,1,8,-10,-6,8,-7,-7,8,-2,6,3,10,-1,-5,7,9,-8,3,-4,9,6,-6,2,1,-4,5,-4,-9,10,-4,-10,6,-9,-5,8,4,-8,9,6,-6,-4,-10,-8,5,-10,6,3,-7,-10,7,6,4,-6,6,2,4,4,6,2,-9,-2,2,6,-2,-4,4,10,4,2,10,3,-10,6,7,7,10,-3,-7,-4,5,7,7,-9,5,-2,-5,-9,-10,-1,4,-6,-9,9,-6,-6,2,-2,3,2,3,5,9,-5,8,7,-5,-6,-2,4,-7,-10,-8,-10,4,-10,-5,6,-6,4,-8,6,4,2,7,5,-8,5,-5,-6,-6,-7,1,9,-4,-3,-4,8,3,5,5,3,2,9,4,8,2,-5,9,-2,4,5,-4,-7,10,6,9,9,1,1,-3,-5,4,-10,1,6,-7,5,-4,10,-2,9,8,-5,8,-4,6,-8,9,-3,-9,-8,-10,8,5,9,-6,1,8,5,-3,-9,-8,9,-4,-10,3,-9,-2,8,7,-9,6,9,7,10,-2,-8,5,-10,2,-3,-1,-8,3,2,-1,-5,10,-1,-5,-6,-3,7,-2,8,-10,-6,5,-4,10,-8,-9,-10,-6,-6,5,8,-6,5,-6,1,5,-5,-3,-9,-6,-6,2,6,8,-9,-5,8,-5,-1,-5,5,4,-2,-10,2,10,3,-5,-1,2,-3,-10,10,5,4,-8,1,10,10,4,6,-1,9,-9,-10,-2,-9,5,8,5,-1,-3,-4,4,3,-8,-4,-1,7,-3,2,-10,-8,2,-5,7,9,-8,5,9,-10,8,-7,6,8,1,-3,-2,-5,8,-3,-8,7,7,6,7,-4,1,-3,-5,6,-2,6,1,-8,3,-4,-4,-5,-10,-9,-10,-3,4,7,10,3,2,3,3,2,3,-7,6,7,4,4,-9,-4,-4,2,6,-3,-5,2,10,-3,10,1,1,-2,6,-8,3,-7,5,-1,5,9,-2,9,7,-8,-10,-4,7,-6,2,-7,8,-1,5,5,-6,1,9,2,2,4,-9,2,4,8,-4,2,2,8,-5,-9,-9,-9,-2,4,-2,-3,7,-8,5,-9,-2,-4,4,4,-5,10,-7,2,-3,1,-5,6,-4,-4,-10,-10,6,1,-4,-1,1,-4,-2,6,-3,1,-5,-1,-3,8,10,8,-1,-7,-5,5,2,2,6,-7,9,8,-7,1,-5,-3,-4,-4,9,10,-2,10,4,5,-2,-10,2,-2,-8,7,1,-2,-1,10,10,6,6,-5,9,-2,-4,-1,2,-5,8,6,4,-4,6,6,5,7,9,-4,2,9,-10,-4,6,3,-3,-3,8,-1,3,-10,9,-2,7,-7,3,7,-8,4,-2,8,-7,-2,10,1,9,4,7,8,-3,7,1,-7,-6,-3,-1,4,3,5,7,9,-7,6,8,-10,-9,6,10,8,-6,4,3,-7,4,-2,-8,-1,-3,-9,-10,-1,-5,-6,-2,-2,-7,-6,-6,9,-5,-5,1,7,10,6,-6,-9,-5,5,1,-6,4,1,4,-2,-2,-1,-2,8,6,-3,2,-3,-7,4,6,10,-1,1,-10,4,1,-6,6,4,7,-6,9,6,8,6,2,-5,7,-8,-1,1,-2,5,-1,1,6,5,-9,-1,-2,2,-5,9,-4,-10,-1,-7,10,-2,10,-6,-3,2,-5,8,2,-3,4,10,9,3,3,-5,-1,-3,-10,-9,-4,-2,4,8,7,-4,3,1,3,2,-3,10,-3,8,6,4,-8,8,-6,9,-8,-4,-6,3,-10,-7,3,8,-2,9,6,7,10,8,-4,7,2,6,-10,-7,-5,3,4,6,-10,6,-6,1,-2,2,-8,9,4,-7,-6,5,3,-1,-9,-4,10,6,3,-6,6,1,8,-3,-9,7,9,5,9,-8,3,-9,2,-2,3,-1,5,3,6,-8,-8,-8,-6,-8,1,3,-8,8,8,-6,-8,-7,9,-8,8,7,8,5,-10,-1,1,-6,6,10,4,4,2,-6,-3,-5,-8,-9,10,4,-10,-3,-1,-1,-3,-1,-6,-10,6,9,-10,-2,-7,-7,-6,-8,-6,-7,-8,-5,1,7,-1,-6,-4,-8,-7,3,1,2,-2,4,-9,-6,1,-9,7,8,4,-9,-8,1,9,-1,5,-8,4,-7,-4,4,-6,6,9,-3,7,-1,9,2,7,8,9,-1,9,7,-4,-9,-6,-4,-8,-9,-9,1,2,7,9,1,3,-10,-3,8,-10,6,1,-10,-6,-5,9,4,1,1,9,7,-6,-8,6,4,2,-1,-1,1,1,-4,-2,-2,-2,-1,4,6,-5,-9,-8,-8,-5,3,-1,5,8,4,10,3,6,-6,3,10,-4,-10,4,-5,6,-6,10,-1,-3,-8,-9,-8,6,7,5,9,8,4,-7,2,-4,-10,-2,-5,-4,-9,-6,9,-10,-3,-4,6,2,-4,10,-10,-4,1,1,-10,-8,9,-5,-6,-5,-2,1,-2,10,10,4,4,-10,6,10,-8,5,2,8,-5,-7,3,-4,9,-3,-4,8,-4,3,-2,6,-9,7,-8,-9,9,9,4,-7,7,-3,-6,1,9,-10,6,1,4,9,5,7,6,6,-9,-4,-4,1,7,-1,-3,9,6,7,2,-6,-3,-10,8,8,2,8,-10,7,-9,6,-9,3,7,-7,-3,-5,-3,7,5,-1,-9,3,5,7,-8,8,-7,3,1,2,-1,2,2,-7,7,3,6,5,8,5,-4,5,6,-5,8,-10,-4,4,4,-4,9,6,5,-7,5,3,7,-3,6,7,-7,4,3,-7,9,-7,1,4,-9,1,2,-5,1,-9,6,-2,7,4,6,-9,5,5,-1,3,7,4,-7,-6,7,-9,5,7,9,-2,-5,2,-6,7,4,-9,-4,-8,-4,-1,-4,-5,2,-1,-3,6,5,-9,4,10,4,9,-4,10,3,-10,-4,6,-9,8,9,2,-3,6,-5,-3,6,8,1,10,1,-3,-5,10,-5,5,-4,9,-8,-3,1,-3,-10,-9,-10,6,-8,-6,-9,8,7,-9,10,6,-3,10,-7,-1,3,9,-10,7,-6,-3,-1,9,4,-9,-6,-2,-6,-2,-5,-1,4,6,-6,4,-3,-9,7,4,-7,-6,10,5,10,2,-2,-8,4,2,4,-6,-2,5,4,-1,-2,8,-4,-1,-10,-4,7,-1,-5,-5,-1,-9,-7,-4,-2,3,-3,10,-4,6,6,-6,-1,4,-4,-8,-9,9,9,-6,-10,9,-2,3,-1,-9,8,-8,6,8,2,-4,10,8,9,-4,-4,4,-3,-3,-7,-9,-2,7,-10,10,10,-4,9,2,7,1,-1,9,-4,-6,9,-8,-4,-10,10,8,-4,-10,4,5,10,-3,10,6,-6,-5,-10,7,5,-8,-5,-5,-9,-6,-9,-4,-6,1,-9,-8,-9,-4,-3,5,-6,5,9,4,4,-1,-10,1,2,-2,1,9,-2,-1,2,6,-8,3,8,-7,7,5,-5,-5,-10,-9,4,1,1,-2,-5,-2,9,10,3,2,-7,9,-5,8,-9,8,-3,3,10,-6,4,-10,5,2,9,-10,-1,8,-3,-5,1,10,-2,-9,-8,1,-5,7,-3,10,3,8,-8,1,-5,8,10,4,-10,-6,8,-2,-8,-4,8,-3,-3,4,-9,7,-3,-2,2,5,-8,2,-10,-10,-5,-7,10,3,-3,9,4,-8,8,10,-7,-5,7,1,-4,-4,-9,4,-3,7,6,9,-9,-8,6,-8,-2,8,-10,7,-3,-5,-3,4,-5,-3,-4,-2,-9,9,-6,-8,9,10,-6,5,7,2,8,10,-4,6,-5,-10,-7,-10,7,3,-6,7,-9,9,-4,-10,6,8,2,9,-2,-2,1,2,-1,-4,-8,-9,7,5,-1,-4,2,9,7,3,-1,8,8,10,5,-6,-6,1,5,5,-8,2,-2,-6,-3,8,-6,5,-6,-3,8,-5,-6,-8,-2,-6,-1,-2,3,1,9,-1,-6,8,1,5,3,-4,8,-2,2,-3,-8,5,5,7,-7,-6,5,7,5,5,-3,9,-10,4,-8,-6,-1,6,-9,9,-1,3,1,2,-3,8,-4,7,-5,-6,5,-9,-5,4,10,-1,2,-7,-3,3,-5,-10,-7,3,-8,-6,4,-1,10,2,3,-1,5,-2,-8,-4,5,2,-3,-3,-7,-5,-4,-10,4,-4,-3,-5,-4,1,-1,7,-1,7,7,4,-1,-6], dtype = "int64")#candidate|4539|(2310,)|const|int64
call_4538 = func_2647_call(relay.reshape(const_4539.astype('int64'), [15, 14, 11]))
call_4540 = func_2647_call(relay.reshape(const_4539.astype('int64'), [15, 14, 11]))
output = relay.Tuple([call_4525,call_4533,call_4538,const_4539,])
output2 = relay.Tuple([call_4526,call_4534,call_4540,const_4539,])
func_4543 = relay.Function([], output)
mod['func_4543'] = func_4543
mod = relay.transform.InferType()(mod)
output = func_4543()
func_4544 = relay.Function([], output)
mutated_mod['func_4544'] = func_4544
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4554 = relay.var("var_4554", dtype = "uint16", shape = (8, 3, 14))#candidate|4554|(8, 3, 14)|var|uint16
var_4555 = relay.var("var_4555", dtype = "uint16", shape = (8, 3, 14))#candidate|4555|(8, 3, 14)|var|uint16
bop_4556 = relay.subtract(var_4554.astype('uint16'), relay.reshape(var_4555.astype('uint16'), relay.shape_of(var_4554))) # shape=(8, 3, 14)
func_1107_call = mod.get_global_var('func_1107')
func_1110_call = mutated_mod.get_global_var('func_1110')
const_4560 = relay.const([[8,1],[5,6],[-9,5],[-10,3],[-10,8],[8,7],[-6,5],[-4,1],[-2,-6],[4,-6],[-10,8],[-10,7],[-1,-9],[-8,10],[-5,-5],[-7,-2],[1,-5],[1,-9],[2,2],[-10,1],[-3,-10],[-9,9],[7,-6],[2,-5],[-8,-9],[-4,2],[8,8],[-3,1],[1,9],[6,-7],[-3,9],[-3,-8],[7,-1],[-6,8],[7,5],[-7,5],[10,10],[-3,-10],[10,-10],[6,-3],[5,-5],[-7,6],[1,1],[8,5],[-2,-5],[-2,1],[-6,2],[-9,4],[-10,-5],[-4,-8],[-2,2],[-7,-9],[2,3],[-1,-5],[-5,9],[-1,-8],[-4,8],[3,2],[9,7],[-10,4],[-2,-7],[3,-2],[-8,-4],[3,-2],[4,6],[7,5],[3,1],[-8,-5],[-4,-3],[-4,-7],[5,-1],[-3,9],[2,7],[5,-3],[-3,10],[-9,-2],[-9,2],[-2,-6],[-8,7],[-10,3],[2,-1],[-3,3],[-1,9],[-10,-3],[-8,2],[3,6],[5,-7],[10,8],[9,8],[4,-9],[-6,4],[-7,-7],[-3,-4],[-9,10],[-6,10],[6,-9],[-7,-6],[-2,-7],[3,-6],[-2,7],[4,-4],[2,8],[10,5],[9,-10],[2,-1],[-2,3],[-2,6],[-4,9],[-4,2],[8,3],[1,3],[-1,6],[10,-8],[-6,8],[9,-3],[-8,-2],[7,10],[7,3],[-3,-8],[9,8],[3,-2],[6,-8],[5,-10],[4,-7],[8,-6],[1,5],[-6,-8],[8,6],[3,-10],[-9,6],[8,9],[1,-4],[-3,6],[-2,8],[3,-4],[-4,-10],[-10,6],[9,-3],[1,10],[10,-1],[-6,7],[-5,5],[4,8],[-2,5]], dtype = "int64")#candidate|4560|(144, 2)|const|int64
call_4559 = relay.TupleGetItem(func_1107_call(relay.reshape(const_4560.astype('int64'), [12, 4, 6])), 0)
call_4561 = relay.TupleGetItem(func_1110_call(relay.reshape(const_4560.astype('int64'), [12, 4, 6])), 0)
uop_4563 = relay.acos(bop_4556.astype('float32')) # shape=(8, 3, 14)
uop_4573 = relay.cos(call_4559.astype('float64')) # shape=(12, 4, 6)
uop_4575 = relay.cos(call_4561.astype('float64')) # shape=(12, 4, 6)
func_2647_call = mod.get_global_var('func_2647')
func_2649_call = mutated_mod.get_global_var('func_2649')
const_4580 = relay.const([2,-7,7,-7,7,3,4,-4,6,-3,-10,8,-8,-1,10,1,8,-3,5,9,1,5,-6,6,2,8,10,2,-9,-5,2,10,-5,6,-2,1,1,-9,-4,10,6,-2,2,-4,-4,9,-4,-8,2,10,-9,9,6,6,5,-8,3,-7,1,-7,10,-2,7,-7,4,-4,6,-2,5,4,5,3,1,5,1,10,-8,-10,-2,5,-2,-8,6,3,-9,1,1,4,-4,-6,10,8,8,-6,-3,-6,-10,3,6,7,-5,1,-4,7,-3,3,-1,-5,9,9,2,6,10,8,-7,1,-5,7,-9,-7,7,8,-1,7,6,-1,-3,-10,8,1,5,7,-6,9,-9,8,6,-6,-10,-8,-10,5,-8,8,-5,1,-1,-9,-3,10,5,-9,-5,10,7,4,-7,-1,-3,10,8,-7,-10,-5,7,4,-5,-4,8,-6,2,-2,-8,-3,-6,9,4,2,-6,-8,4,6,-7,-10,4,9,5,-6,-8,3,4,7,-2,6,6,1,-6,-9,-7,7,4,-1,1,1,-8,3,-10,2,9,-2,-1,-5,1,-9,1,-4,-4,-6,-2,-4,3,2,8,-9,-1,-2,-5,-9,-10,-7,-6,8,5,5,-10,6,8,1,2,-5,-3,5,-5,-4,-3,-8,3,-9,9,-4,4,-4,-7,-10,-7,2,-1,7,3,1,-4,5,4,-6,9,-3,9,7,4,-5,-2,2,7,-1,1,-6,-2,4,6,-10,9,10,-1,-4,-6,-8,9,6,-9,4,-1,-7,-1,9,-1,2,2,-6,1,-10,2,-9,-9,-4,-2,-10,-1,5,8,-1,5,-8,7,2,7,-7,3,7,9,-10,-2,-5,9,-6,6,-7,1,9,-1,-6,-2,-5,-8,-7,-6,1,9,-2,8,5,-5,6,-8,-4,6,5,-4,5,5,-3,10,10,2,10,-9,-3,-7,-10,3,-4,-5,-9,3,5,7,-8,3,-6,9,-4,-3,3,-5,-5,-9,7,1,-7,1,2,-1,3,-8,1,-9,6,-10,-9,1,3,-6,6,-8,4,4,-7,6,-10,-3,4,6,1,8,-2,8,1,-8,3,-1,-7,-3,-1,-6,-5,-4,8,-8,9,-3,-7,8,4,8,-4,-4,-3,5,6,-6,10,-10,3,1,4,-3,-2,-2,9,-6,8,-3,-7,-4,2,5,-2,-4,3,-7,7,1,-2,-8,10,3,-3,8,7,-4,3,-2,-4,-2,-2,-7,10,8,8,3,9,-7,-2,-4,-8,9,8,10,10,3,4,8,-6,6,-4,6,-2,-8,8,3,-10,1,6,4,-5,5,-6,1,-3,10,7,3,-8,6,-4,-4,-3,-6,4,2,-8,-9,2,-8,9,2,-3,7,-9,7,-2,-10,4,4,8,9,3,-2,-10,-9,8,4,10,3,4,3,-1,-1,-10,4,8,-4,3,-7,-6,-1,2,8,-9,-9,2,-9,6,-7,2,6,7,5,8,3,10,10,3,2,-10,-5,7,-5,-1,-1,4,-6,-7,-8,-3,-1,-9,7,-1,-2,-1,5,-10,-3,1,-5,-1,-3,-2,-5,6,-9,7,4,4,8,4,5,4,-4,-10,-9,10,9,-6,8,-10,-6,-5,-2,-10,-6,6,8,-9,-4,-1,-2,-8,4,7,8,3,4,-6,-8,-9,-1,-8,-6,1,-8,4,5,2,7,-3,7,-9,-3,9,1,6,2,9,2,7,-2,9,4,9,1,4,-10,-10,8,-6,5,9,7,7,-7,9,-9,9,10,-5,-1,-10,2,6,7,-8,-4,-4,-6,10,9,-5,6,2,-3,8,7,-9,-7,-10,-6,1,-7,1,-9,-7,10,7,-9,3,-7,7,10,5,-10,-6,-5,-8,-3,8,-2,10,-8,-8,-7,8,-2,2,-3,-9,-1,-1,1,1,-10,6,5,-4,3,1,-10,8,5,4,-6,-3,8,-5,7,3,-8,-9,-4,-5,2,-1,-4,4,10,9,1,-2,8,-9,7,2,10,-8,4,-3,9,1,-4,7,5,9,10,6,-1,4,-7,-5,8,3,-7,10,-2,-1,8,-10,4,8,1,3,-8,-3,-3,-6,-10,-5,-7,2,8,8,3,-10,9,2,-3,-5,-10,-10,5,-4,-2,1,-5,-1,-6,2,10,8,-9,1,-3,-5,-5,8,8,6,-2,-3,9,2,4,-7,-6,-6,-3,-9,5,3,-10,1,-2,9,-3,-1,-8,-8,-6,9,-9,-7,3,-1,1,-10,5,-8,-10,1,1,4,4,2,-6,-4,-5,7,8,-6,-4,-9,-8,5,5,-1,-7,-6,8,3,-8,-9,9,-8,-8,5,1,-2,-4,-8,5,7,-4,-5,10,6,-6,-10,-5,-1,3,4,3,-4,2,-5,-1,9,7,8,3,-7,1,3,6,-8,1,4,9,-8,-3,-8,-7,-2,2,-2,-5,5,6,3,-1,2,6,-5,-5,-6,7,-3,-4,1,-4,-2,-1,7,6,-7,3,-8,-5,-4,7,1,5,-10,-8,6,3,-10,-6,10,-7,8,8,8,10,-8,-1,10,-2,6,1,-1,-3,-7,-10,-10,7,8,5,-1,-8,-9,5,-9,-2,-6,-9,7,1,-1,-2,1,-1,7,7,-9,4,-5,9,-7,-9,4,-3,9,7,-7,1,10,-7,7,2,8,-6,-6,-7,6,7,3,2,-4,-2,-8,10,-6,-5,-10,1,-5,-3,1,-6,-5,10,-5,-9,-9,-1,-3,-5,8,2,-6,-8,-9,4,10,-1,-4,-2,-1,-9,2,-9,3,-4,5,10,10,-2,8,10,-5,2,2,-10,5,-5,-1,1,-2,4,-4,9,-4,-2,-7,2,-5,-3,10,-10,-3,1,-1,8,9,9,8,-7,8,-7,-4,-9,5,6,7,2,10,4,8,-5,3,10,3,-4,-9,-8,-9,-3,-2,2,2,-9,-7,-4,-4,2,4,-9,-9,9,-5,4,5,10,6,-9,6,-3,-1,-8,7,-2,-1,-7,5,2,-3,6,2,9,8,6,-4,-8,7,9,5,-4,-2,9,-9,7,-5,-1,-9,-5,-8,2,4,-8,6,-5,-1,-7,2,-2,7,2,-2,-9,5,9,-8,7,3,-3,5,1,-6,8,-4,-8,2,5,7,9,1,-7,-1,1,2,-4,-1,-2,3,7,-2,10,-7,10,-8,-5,-6,-8,-9,-2,4,-7,-1,1,8,-1,3,6,8,-1,6,-5,-10,-1,3,-7,9,1,-2,-4,-10,-3,-10,-2,-7,-3,1,-5,-3,10,-10,-3,1,-9,-6,-3,1,9,5,8,-4,-4,10,-8,6,9,2,-4,-3,6,-7,-6,-5,8,6,-1,-6,7,-4,9,10,-3,9,7,-10,3,-2,-6,4,6,-9,-2,3,2,-4,-5,-10,-9,6,3,9,-3,-5,-7,-2,-8,-1,7,10,9,-10,-8,-5,-9,1,8,8,-10,-2,-3,-1,5,-1,-5,-2,5,-1,4,10,-8,7,-2,9,9,8,-6,-3,10,-5,-7,1,1,-6,9,-10,10,5,2,3,-7,-3,1,-8,-10,-8,-2,-8,3,9,2,1,7,-4,-3,-10,10,-5,-7,-4,8,3,-2,-4,-7,-7,4,-2,5,10,3,-10,3,-3,-10,7,-10,-7,-5,7,8,2,-5,3,-8,-10,4,3,-5,8,-3,1,-9,-4,-1,-6,-7,1,1,-2,10,2,-1,-3,-9,-2,-8,-4,3,-9,10,-5,4,-1,-3,-5,-6,-9,2,-3,-3,-3,-10,-7,-6,-9,-4,5,4,2,-10,10,-6,3,1,8,3,-4,-8,-5,-7,-3,1,-8,6,4,-1,-4,-5,4,2,-9,-3,7,-2,-10,-9,2,2,6,-2,-6,7,9,-6,8,-4,5,10,1,-6,-2,3,-4,-4,5,-3,8,-2,1,-9,-7,8,10,-6,1,-1,5,-9,-9,9,10,6,1,-6,-5,1,-9,4,8,-2,9,4,-7,3,7,-1,-4,-6,2,-7,-10,-9,-9,10,-2,-8,8,-5,4,-1,9,-9,-9,-2,-10,10,-9,-9,-1,-8,3,-3,8,6,-5,-7,10,-1,-3,-10,2,-3,8,-1,-4,1,7,-8,4,-10,-2,-5,-3,1,-7,-10,-10,2,-6,-10,-2,-8,7,-3,-2,7,-10,-6,9,8,8,-7,-3,-8,-9,-9,-9,9,7,-6,7,-2,-8,-1,-4,2,-8,-2,-7,-10,-1,9,-10,-8,4,-3,-9,-9,3,-1,8,-1,-4,7,-5,10,-8,6,1,2,-9,-6,1,-3,-7,5,10,4,-1,9,-8,2,10,-5,-3,6,-3,8,10,-2,8,2,3,5,-7,-10,3,-2,-1,4,5,5,2,3,7,-9,-3,4,-9,10,3,-2,3,1,-2,-7,5,-6,-5,9,4,-8,2,-5,-3,8,6,-4,7,-2,-10,-7,-10,2,-2,1,10,5,3,5,-6,4,5,2,3,1,2,8,9,-1,-10,6,-10,-4,-10,1,-3,7,-2,8,-4,1,-6,-10,-9,-7,3,-3,-6,-8,-7,4,1,-8,2,-2,-6,4,2,-9,7,1,3,3,-10,-8,9,9,-5,4,-2,6,9,-1,6,-1,-10,-2,-8,-2,5,7,4,-3,2,10,6,-3,-8,6,-6,6,1,9,-5,10,-5,-4,-3,-1,8,9,7,-7,-8,-8,9,-2,-4,-2,6,-8,8,-1,3,-6,-3,-5,6,-7,6,-1,-1,-7,-6,5,10,-2,-7,1,-4,1,1,8,-7,-4,-10,7,-7,-8,3,4,7,4,-6,-2,-2,-8,8,-10,8,-7,6,4,8,6,-5,7,-6,-6,7,-3,-2,10,6,6,-4,4,4,-5,10,-6,-4,9,-5,2,-6,1,-7,-9,-2,7,-5,-6,-1,-3,-4,9,1,8,6,8,-9,9,1,-9,4,-9,-8,-10,-7,3,-4,-1,-2,-3,-1,8,1,5,9,6,-9,2,1,-10,9,-10,-6,7,2,-6,-10,-4,-4,-4,-3,6,-5,-1,4,-5,-5,-5,-7,-8,-4,-1,-9,-7,6,-5,4,-2,2,5,5,9,4,10,8,-10,2,-9,8,3,-9,-2,-4,2,-8,-3,7,-2,8,4,-1,10,-8,6,7,10,2,9,-4,3,7,6,10,7,-1,-5,7,-10,8,-1,-7,-3,10,-6,-2,-8,-5,-5,2,4,-4,8,6,-6,-5,-1,7,1,5,-2,6,-6,-4,-5,-4,10,8,9,7,2,2,4,5,-7,-5,-7,-10,-2,-5,-1,-6,7,2,-9,1,2,-3,5,4,-10,2,9,-10,8,-6,4,-1,-5,5,3,5,3,2,10,1,-4,-5,7,-2,1,-6,-9,6,-2,-9,-8,10,4,1,-9,-4,-5,6,4,-9,-5,2,3,-9,8,10,4,-9,-4,-4,3,6,7,-2,-9,8,5,9,5,-3,-9,8,4,4,6,-1,-6,-8,8,-5,-10,-10,-2,-5,8,-9,2,10,5,-4,-4,1,-3,-4,-9,-7,-2,8,-7,-1,2,3,7,9,-9,-4,-1,2,2,-6,-5,-1,-9,2,-1,-10,5,6,7,4,2,9,-3,-9,7,7,6,2,7,3,9,1,-9,7,-6,-1,9,2,-1,8,-4,-3,-2,-8,-10,-7,6,-4,6,-10,10,-1,-3,2,5,3,4,-4,10,-5,4,-9,9,3,3,-10,-5,4,7,2,-6,3,-1,-4,8,-9,-1,-1,2,-8,5,9,-8,-8,9,-6,2,-4,-6,-4,-10,-5,3,-3,-1,-1,-8,6,3,2,-3,8,-8,8,5,-8,-7,7,-2,7,3,10,8,9,2,-3,10,10,-8,-3,2,-9,8,-1,10,2,5,5,9,-5,3,-6,1,-4,6,-3,1,-9,2,9,-9,-3,4,8,-2,-4,2,10,6,4,1,2,3,-3,3,-5,3,-7,-8,10,-9,-4,2,6,-10,-2,10,-5,5,-6,-9,1,2,9,-4,-9,1,3,1,-3,-10,2,-9,10,4,-2,-10,-5,2,2,2,8,9,9,1,-9,-9,10,7,-3,10,5,10,-2,-5,6,-8,-3,6,-4,-7,9,-5,5,-10,4,4,10,9,-6,-6,4,-7,-10,-2,-1,9,-7,8,8,-8,10,2,-8,1,9,-6,-1,1,-7,6,-4,-9,-1], dtype = "int64")#candidate|4580|(2310,)|const|int64
call_4579 = func_2647_call(relay.reshape(const_4580.astype('int64'), [15, 14, 11]))
call_4581 = func_2647_call(relay.reshape(const_4580.astype('int64'), [15, 14, 11]))
bop_4590 = relay.floor_mod(var_4554.astype('float32'), relay.reshape(var_4555.astype('float32'), relay.shape_of(var_4554))) # shape=(8, 3, 14)
func_3355_call = mod.get_global_var('func_3355')
func_3356_call = mutated_mod.get_global_var('func_3356')
call_4599 = func_3355_call()
call_4600 = func_3355_call()
output = relay.Tuple([const_4560,uop_4563,uop_4573,call_4579,const_4580,bop_4590,call_4599,])
output2 = relay.Tuple([const_4560,uop_4563,uop_4575,call_4581,const_4580,bop_4590,call_4600,])
func_4607 = relay.Function([var_4554,var_4555,], output)
mod['func_4607'] = func_4607
mod = relay.transform.InferType()(mod)
mutated_mod['func_4607'] = func_4607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4607_call = mutated_mod.get_global_var('func_4607')
var_4609 = relay.var("var_4609", dtype = "uint16", shape = (8, 3, 14))#candidate|4609|(8, 3, 14)|var|uint16
var_4610 = relay.var("var_4610", dtype = "uint16", shape = (8, 3, 14))#candidate|4610|(8, 3, 14)|var|uint16
call_4608 = func_4607_call(var_4609,var_4610,)
output = call_4608
func_4611 = relay.Function([var_4609,var_4610,], output)
mutated_mod['func_4611'] = func_4611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2380_call = mod.get_global_var('func_2380')
func_2381_call = mutated_mod.get_global_var('func_2381')
call_4669 = relay.TupleGetItem(func_2380_call(), 0)
call_4670 = relay.TupleGetItem(func_2381_call(), 0)
func_457_call = mod.get_global_var('func_457')
func_458_call = mutated_mod.get_global_var('func_458')
call_4672 = relay.TupleGetItem(func_457_call(), 0)
call_4673 = relay.TupleGetItem(func_458_call(), 0)
uop_4678 = relay.sigmoid(call_4669.astype('float32')) # shape=(2310,)
uop_4680 = relay.sigmoid(call_4670.astype('float32')) # shape=(2310,)
output = relay.Tuple([call_4672,uop_4678,])
output2 = relay.Tuple([call_4673,uop_4680,])
func_4681 = relay.Function([], output)
mod['func_4681'] = func_4681
mod = relay.transform.InferType()(mod)
mutated_mod['func_4681'] = func_4681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4681_call = mutated_mod.get_global_var('func_4681')
call_4682 = func_4681_call()
output = call_4682
func_4683 = relay.Function([], output)
mutated_mod['func_4683'] = func_4683
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4702 = relay.var("var_4702", dtype = "float64", shape = (8, 3, 9))#candidate|4702|(8, 3, 9)|var|float64
uop_4703 = relay.sinh(var_4702.astype('float64')) # shape=(8, 3, 9)
output = relay.Tuple([uop_4703,])
output2 = relay.Tuple([uop_4703,])
func_4720 = relay.Function([var_4702,], output)
mod['func_4720'] = func_4720
mod = relay.transform.InferType()(mod)
mutated_mod['func_4720'] = func_4720
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4721 = relay.var("var_4721", dtype = "float64", shape = (8, 3, 9))#candidate|4721|(8, 3, 9)|var|float64
func_4720_call = mutated_mod.get_global_var('func_4720')
call_4722 = func_4720_call(var_4721)
output = call_4722
func_4723 = relay.Function([var_4721], output)
mutated_mod['func_4723'] = func_4723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_592_call = mod.get_global_var('func_592')
func_593_call = mutated_mod.get_global_var('func_593')
call_4758 = relay.TupleGetItem(func_592_call(), 0)
call_4759 = relay.TupleGetItem(func_593_call(), 0)
output = relay.Tuple([call_4758,])
output2 = relay.Tuple([call_4759,])
func_4774 = relay.Function([], output)
mod['func_4774'] = func_4774
mod = relay.transform.InferType()(mod)
output = func_4774()
func_4775 = relay.Function([], output)
mutated_mod['func_4775'] = func_4775
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4776 = relay.var("var_4776", dtype = "int32", shape = (8, 11, 11))#candidate|4776|(8, 11, 11)|var|int32
const_4777 = relay.const([[[10,-10,-2,-10,-7,6,4,6,-7,-5,-7],[-7,-4,-2,2,10,1,-9,-4,1,5,-3],[-1,-7,3,1,6,-1,-4,7,10,-9,7],[6,-8,-3,4,2,-6,-6,-2,9,2,6],[2,1,1,4,10,1,7,-3,-1,-8,3],[-6,-8,10,-6,7,10,-1,-10,10,5,9],[5,-2,-6,-5,-2,-5,5,-4,4,8,-9],[-6,6,-8,7,-10,9,3,2,-6,7,7],[-7,-3,-10,6,2,8,-7,-6,6,-9,9],[10,-7,4,-8,-8,-1,7,-3,-3,-4,-2],[9,-5,5,-10,5,-4,8,10,10,-4,-8]],[[6,-3,-6,-10,-8,-8,4,9,6,5,10],[-9,-1,8,-3,6,10,6,8,6,-7,-1],[6,6,-7,5,4,8,4,-1,-4,6,-8],[-10,10,-2,-8,7,-4,9,4,7,-7,-5],[10,-10,5,-8,10,-7,2,7,-2,-8,-9],[-8,-9,3,9,-1,-6,-5,8,-3,-1,-7],[10,5,-10,10,7,2,-2,-6,-3,-4,-7],[-9,2,3,2,6,-6,6,3,-5,4,8],[4,-1,-10,-7,3,2,-10,9,-7,-6,6],[-8,9,-9,3,-3,1,4,-8,-10,9,-6],[-9,2,10,6,3,-6,7,7,5,7,-5]],[[-9,1,2,1,2,-5,-5,-4,2,7,10],[-5,6,-9,6,-3,5,-2,6,8,-5,-2],[-7,-3,4,9,6,10,-4,4,-5,2,-2],[8,2,-8,9,1,-6,7,6,3,1,-5],[-4,-4,-5,8,3,-7,-4,-5,-5,-8,-1],[-1,4,9,7,2,-3,10,-3,7,-6,4],[-9,2,-3,5,9,9,1,-9,-3,2,7],[6,-2,-9,-9,-10,-10,-2,-5,7,2,7],[5,2,7,6,7,6,-6,10,8,4,4],[-10,-3,-3,4,-10,6,-7,-7,-10,6,6],[3,-7,-9,8,9,4,-7,-6,-9,-2,-10]],[[9,-3,-2,7,8,7,10,8,-7,9,8],[-10,-9,-1,-3,9,8,3,8,9,1,-5],[2,-10,-10,-2,-7,3,9,-6,-6,-4,-8],[6,8,-3,-3,-9,-2,4,10,-2,-8,4],[2,-8,6,5,-1,-9,10,8,-2,10,6],[8,2,4,7,-5,-7,-7,9,6,-5,-8],[10,-10,-3,-8,4,6,6,-6,-7,1,-8],[-6,10,-6,10,2,2,-2,-4,-3,-6,6],[8,-4,3,-8,4,7,-9,-1,-6,8,-8],[-2,-3,-1,-5,-3,-7,9,-4,10,-2,-4],[-9,-9,9,-5,-2,-7,4,-5,5,4,-7]],[[-3,-10,1,-1,3,9,6,-1,-4,10,7],[-1,2,10,-9,9,-10,-8,-2,-5,2,-9],[3,-1,-3,10,4,-2,-7,-2,-1,-10,-1],[1,1,8,-3,2,-7,3,-4,1,4,4],[-6,-10,7,-8,-10,2,9,5,-9,8,-9],[-7,5,1,-1,-1,-9,-6,2,-7,-4,-6],[-8,-5,-7,2,-5,7,7,9,2,7,-2],[-10,-6,9,-5,-5,5,10,4,-7,3,10],[1,9,9,5,-10,8,-1,8,-3,10,6],[9,4,-10,2,-8,-9,-8,-3,-2,7,9],[-6,-7,3,-6,-7,-8,2,7,-7,-9,-2]],[[-7,-8,-9,8,7,6,-2,1,-7,-4,9],[-2,2,-1,-8,-5,-9,-3,-10,-6,-6,2],[3,-5,-10,-3,6,5,-7,-8,3,-1,6],[1,-6,4,-9,-9,8,3,6,8,3,2],[4,-8,-3,7,4,7,5,5,10,8,-9],[-7,-9,9,-10,4,10,9,3,-3,4,-1],[1,-4,-10,-8,-5,6,-2,8,7,-4,-5],[10,-8,9,5,4,-5,-7,-3,6,2,4],[8,-5,-5,3,1,10,-8,-5,8,-9,10],[-10,2,4,9,-9,-9,3,5,-6,1,8],[-4,2,-4,8,8,-8,-5,6,10,2,-2]],[[-5,-3,3,-6,3,6,5,8,-6,1,-7],[-4,-10,-8,6,-9,7,2,6,-1,-2,-6],[-8,10,1,6,8,10,-6,2,10,-3,-1],[-7,4,8,4,3,-10,-4,4,8,-1,2],[9,-1,5,-8,-10,-5,-10,10,-7,-7,-6],[8,2,2,6,-3,9,-6,10,1,8,4],[-9,3,7,-10,1,-3,-4,8,-10,-7,-5],[-3,8,2,-10,-3,1,4,5,1,4,9],[-8,9,8,-8,10,7,-5,-3,7,7,-1],[-8,-7,-2,-2,8,-10,9,-5,-10,-10,5],[9,-4,4,-8,10,-1,4,7,-6,7,4]],[[-3,-5,-3,3,-10,-6,1,-4,6,3,-3],[3,-5,5,-7,8,-5,5,7,6,10,-4],[3,-10,-3,6,-1,4,-8,-6,5,4,-10],[-9,-7,-6,8,-8,7,-2,10,-6,7,-5],[-10,-1,-8,6,4,-4,-2,-7,-10,3,-2],[2,3,1,10,4,-8,7,-1,-3,-8,-7],[-7,3,9,9,-1,3,8,3,-9,-10,-3],[4,-9,1,2,-10,-2,8,-10,-5,5,4],[-2,-3,-3,10,1,-2,-1,-10,8,-3,6],[4,-8,5,-4,9,6,-9,-7,7,-4,-8],[1,-7,-1,-9,-2,1,9,3,6,3,4]]], dtype = "int32")#candidate|4777|(8, 11, 11)|const|int32
bop_4778 = relay.right_shift(var_4776.astype('int32'), relay.reshape(const_4777.astype('int32'), relay.shape_of(var_4776))) # shape=(8, 11, 11)
func_3514_call = mod.get_global_var('func_3514')
func_3516_call = mutated_mod.get_global_var('func_3516')
call_4788 = relay.TupleGetItem(func_3514_call(), 1)
call_4789 = relay.TupleGetItem(func_3516_call(), 1)
func_457_call = mod.get_global_var('func_457')
func_458_call = mutated_mod.get_global_var('func_458')
call_4797 = relay.TupleGetItem(func_457_call(), 1)
call_4798 = relay.TupleGetItem(func_458_call(), 1)
const_4803 = relay.const([[[6.988124,5.074752,-5.866008,-9.256054,0.699189,-2.385127],[1.805594,5.905940,-8.357324,-8.132343,-7.157204,0.825090],[-3.980032,7.719141,-6.077303,3.206939,0.960418,6.823246],[1.169228,-4.507766,-3.130133,4.528994,7.702946,-6.944002]],[[-5.270816,4.573603,-2.591800,-8.276297,-4.150563,2.116479],[1.406180,-7.927870,3.073649,-4.925569,9.764807,8.709233],[7.698776,1.417611,9.044079,-4.168457,1.793377,3.724141],[-6.004019,-3.362268,5.164435,-7.905427,2.453288,-8.238465]],[[-3.779857,4.759534,2.324229,7.788868,8.651620,0.495312],[-7.059623,-4.566417,-0.836857,6.325170,-8.399140,3.912243],[7.854712,-1.094663,-5.817166,7.078504,6.189376,-2.088152],[-4.225512,-4.047468,-0.239204,-7.780574,8.487660,-5.115189]],[[-6.499930,8.201188,-2.601568,3.943375,-1.395628,-8.529950],[-4.805548,3.211787,-7.035595,-5.370210,4.119003,-8.644039],[-6.993760,5.800984,-5.660948,2.725009,2.948336,2.409803],[5.859555,-6.781364,-4.514943,-6.781210,-4.992972,-1.258857]],[[6.070839,8.603279,4.650655,0.540538,3.319828,-7.720796],[-1.161328,-2.574887,-5.353681,7.200349,-1.498005,7.798653],[-7.984591,7.362162,9.360037,6.011492,-1.747696,9.808781],[8.040661,-1.014032,3.223063,-5.513861,-4.741425,-7.416753]],[[-4.575615,0.899337,7.098741,1.456745,-1.229738,-9.115619],[-6.464593,0.700442,6.815315,2.869434,9.936818,0.799720],[-3.600613,-1.458256,-1.705203,2.877282,9.520982,-6.378356],[5.008272,-5.531151,-4.998747,9.614748,4.387255,-1.504814]],[[6.801047,7.531123,2.889728,-7.427250,-1.633575,-4.189924],[5.969458,2.725000,-5.714282,8.124579,5.596473,-5.625614],[-8.295617,-5.361824,-2.135234,-4.914335,-6.874182,-7.157820],[-0.075264,3.654512,7.526316,-6.343610,8.638425,1.073184]],[[0.940617,7.458318,2.280121,-8.425024,8.952682,1.939941],[5.909505,-7.361262,3.709030,1.869787,9.821837,-4.642867],[5.208032,0.419205,-5.633345,-2.191635,1.074219,-8.646927],[3.067212,-4.856039,2.224417,-2.111702,-1.088641,1.803376]],[[9.269243,9.130320,4.904904,-5.024469,-9.137792,-5.449367],[-5.149774,-5.134995,-9.732960,-3.187407,-1.764558,5.697250],[-3.290116,-8.646651,-5.311838,-8.101768,3.949214,-9.575057],[6.839835,1.751555,-6.192560,-2.418028,-4.135661,-5.455750]],[[1.004218,1.467029,1.593709,-8.031450,-1.434301,-8.230244],[-2.320524,8.472988,5.992542,-8.339597,-5.373122,-8.492175],[9.326098,7.210133,-9.617576,3.281626,2.502987,1.225765],[3.208173,-7.202767,-3.138554,-6.041409,-3.717876,-5.069157]],[[1.187635,-1.920546,-3.499885,-3.691610,-0.556940,-9.029110],[1.194692,-7.805240,-7.403202,6.394588,2.090232,6.434826],[0.699612,-7.608486,1.806921,0.917903,-5.506184,-8.285037],[-4.292625,-5.777511,8.171635,9.373361,-9.175587,0.895226]],[[8.924073,-1.601598,-2.253881,9.758996,3.584814,7.394212],[-4.167394,1.773076,5.376551,-3.368392,-3.222275,-3.897582],[2.131485,-4.522848,5.874884,-1.358817,0.238998,-4.624007],[-7.582104,8.201115,6.566281,4.722609,4.560984,-4.686625]]], dtype = "float32")#candidate|4803|(12, 4, 6)|const|float32
bop_4804 = relay.greater(call_4788.astype('bool'), relay.reshape(const_4803.astype('bool'), relay.shape_of(call_4788))) # shape=(12, 4, 6)
bop_4807 = relay.greater(call_4789.astype('bool'), relay.reshape(const_4803.astype('bool'), relay.shape_of(call_4789))) # shape=(12, 4, 6)
output = relay.Tuple([bop_4778,call_4797,bop_4804,])
output2 = relay.Tuple([bop_4778,call_4798,bop_4807,])
func_4815 = relay.Function([var_4776,], output)
mod['func_4815'] = func_4815
mod = relay.transform.InferType()(mod)
mutated_mod['func_4815'] = func_4815
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4816 = relay.var("var_4816", dtype = "int32", shape = (8, 11, 11))#candidate|4816|(8, 11, 11)|var|int32
func_4815_call = mutated_mod.get_global_var('func_4815')
call_4817 = func_4815_call(var_4816)
output = call_4817
func_4818 = relay.Function([var_4816], output)
mutated_mod['func_4818'] = func_4818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3704_call = mod.get_global_var('func_3704')
func_3706_call = mutated_mod.get_global_var('func_3706')
call_4879 = func_3704_call()
call_4880 = func_3704_call()
var_4882 = relay.var("var_4882", dtype = "int64", shape = (12, 12, 6))#candidate|4882|(12, 12, 6)|var|int64
bop_4883 = relay.mod(call_4879.astype('float32'), relay.reshape(var_4882.astype('float32'), relay.shape_of(call_4879))) # shape=(12, 12, 6)
bop_4886 = relay.mod(call_4880.astype('float32'), relay.reshape(var_4882.astype('float32'), relay.shape_of(call_4880))) # shape=(12, 12, 6)
output = bop_4883
output2 = bop_4886
func_4901 = relay.Function([var_4882,], output)
mod['func_4901'] = func_4901
mod = relay.transform.InferType()(mod)
mutated_mod['func_4901'] = func_4901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4902 = relay.var("var_4902", dtype = "int64", shape = (12, 12, 6))#candidate|4902|(12, 12, 6)|var|int64
func_4901_call = mutated_mod.get_global_var('func_4901')
call_4903 = func_4901_call(var_4902)
output = call_4903
func_4904 = relay.Function([var_4902], output)
mutated_mod['func_4904'] = func_4904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2901_call = mod.get_global_var('func_2901')
func_2902_call = mutated_mod.get_global_var('func_2902')
call_4906 = relay.TupleGetItem(func_2901_call(), 1)
call_4907 = relay.TupleGetItem(func_2902_call(), 1)
func_2616_call = mod.get_global_var('func_2616')
func_2618_call = mutated_mod.get_global_var('func_2618')
call_4926 = relay.TupleGetItem(func_2616_call(), 0)
call_4927 = relay.TupleGetItem(func_2618_call(), 0)
output = relay.Tuple([call_4906,call_4926,])
output2 = relay.Tuple([call_4907,call_4927,])
func_4929 = relay.Function([], output)
mod['func_4929'] = func_4929
mod = relay.transform.InferType()(mod)
mutated_mod['func_4929'] = func_4929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4929_call = mutated_mod.get_global_var('func_4929')
call_4930 = func_4929_call()
output = call_4930
func_4931 = relay.Function([], output)
mutated_mod['func_4931'] = func_4931
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4934 = relay.const([[[3,3,9,-3,7,-9,8,-7,1,3,8,-3,3,9],[-5,8,-10,8,-5,10,10,4,-1,4,-7,-10,-1,3],[10,-2,1,-10,2,-2,-2,-8,-4,-10,-5,6,3,4],[-8,10,9,2,-1,-2,-2,-4,7,-7,-6,5,-5,-3],[7,-4,6,-3,-3,6,-7,1,-1,6,-6,-8,-1,-6],[-5,5,-6,-7,1,7,4,2,-2,-3,-7,-10,3,7],[-4,-10,-2,1,6,-2,9,-2,3,-4,-6,-7,-7,8],[-8,6,10,10,-3,-3,10,-5,-5,2,3,-2,-5,4],[7,-4,10,8,5,3,-1,-6,-2,-2,8,-4,9,9],[-6,-6,6,-1,-9,6,6,-2,10,2,9,-8,7,7],[7,-10,1,-9,5,3,6,7,-3,-3,-7,2,6,-2]]], dtype = "int8")#candidate|4934|(1, 11, 14)|const|int8
var_4935 = relay.var("var_4935", dtype = "int8", shape = (13, 11, 14))#candidate|4935|(13, 11, 14)|var|int8
bop_4936 = relay.left_shift(const_4934.astype('int8'), var_4935.astype('int8')) # shape=(13, 11, 14)
var_4939 = relay.var("var_4939", dtype = "int8", shape = (13, 11, 14))#candidate|4939|(13, 11, 14)|var|int8
bop_4940 = relay.not_equal(var_4935.astype('bool'), relay.reshape(var_4939.astype('bool'), relay.shape_of(var_4935))) # shape=(13, 11, 14)
uop_4953 = relay.cos(bop_4936.astype('float32')) # shape=(13, 11, 14)
func_3066_call = mod.get_global_var('func_3066')
func_3068_call = mutated_mod.get_global_var('func_3068')
const_4957 = relay.const([[-8.243728,-8.915803,7.438794,4.621936,0.735864,-3.678585,8.817351,-9.361548,-1.215286,-2.102308,-5.915217,9.920846,1.811209,4.382791,-6.166548,-4.474108,2.528892,2.360288,1.404339,9.000520,0.946205,-5.663311,-6.369312,1.451764,-4.415448,-1.391223,-6.705424,-2.733627,7.037996,0.761647,7.473933,-9.015986,-0.572487,3.373641,-3.607528,-9.716179,-8.557622,-3.291570,0.140161,-2.224712,9.328623,6.204074,-6.675649,5.475915,4.273434,-1.048267,5.716593,6.615952,-4.617305,6.888620,-7.718226,-3.755819,-8.287696,9.340004,6.890590,4.544302,1.741595,-3.103031,-7.817681,0.537593,-6.778803,-3.034208,-3.339555,4.689759,-2.839666,2.312896,-3.380630,-6.748034,-3.870700,2.248950,8.130715,2.502034,5.807469,-7.285146,2.119688,9.321389,9.446459,4.944110,-1.153565,5.178842,3.151037,9.952966,-2.144445,1.790167,2.096700,-6.269965,6.784914,5.645356,8.434042,4.493135,5.583312,-5.678358,-7.288363,-0.552793,-9.469044,-0.704695,-7.878786,-7.283911,2.956964,-5.638368,-8.097865,4.807883,-9.144304,-1.031379,-7.676147,-6.428438,-7.412406,5.079768,0.451670,4.764821,9.596596,2.912093,4.565257,-2.577535,3.352598,-6.557464,-2.475606,-6.485354,-8.644283,-0.359165,-2.330466,5.327980,-0.705665,6.479728,-7.012424,4.054265,-0.749752,-9.722547,-4.563893,-4.309198,5.294722,1.801342,-7.787246,-2.686078,-0.183305,-1.877920,7.137593,-7.312830,-2.979196,7.981734,-2.402868,-2.352911,-7.352977,2.137849,6.465777,-9.826750,-2.772419,-1.726450,5.907340,5.344367,-5.471633,-1.465971,5.975233,5.442960,3.788811,0.407575]], dtype = "float64")#candidate|4957|(1, 156)|const|float64
call_4956 = relay.TupleGetItem(func_3066_call(relay.reshape(const_4957.astype('float64'), [13, 1, 12])), 0)
call_4958 = relay.TupleGetItem(func_3068_call(relay.reshape(const_4957.astype('float64'), [13, 1, 12])), 0)
uop_4962 = relay.acosh(uop_4953.astype('float64')) # shape=(13, 11, 14)
const_4966 = relay.constdtype = "float64")#candidate|4966|(13, 11, 14)|const|float64
bop_4967 = relay.logical_or(uop_4962.astype('bool'), relay.reshape(const_4966.astype('bool'), relay.shape_of(uop_4962))) # shape=(13, 11, 14)
var_4988 = relay.var("var_4988", dtype = "bool", shape = (13, 11, 14))#candidate|4988|(13, 11, 14)|var|bool
bop_4989 = relay.floor_divide(bop_4940.astype('float64'), relay.reshape(var_4988.astype('float64'), relay.shape_of(bop_4940))) # shape=(13, 11, 14)
func_2333_call = mod.get_global_var('func_2333')
func_2335_call = mutated_mod.get_global_var('func_2335')
call_4992 = relay.TupleGetItem(func_2333_call(), 0)
call_4993 = relay.TupleGetItem(func_2335_call(), 0)
uop_4999 = relay.erf(uop_4962.astype('float64')) # shape=(13, 11, 14)
output = relay.Tuple([call_4956,const_4957,bop_4967,bop_4989,call_4992,uop_4999,])
output2 = relay.Tuple([call_4958,const_4957,bop_4967,bop_4989,call_4993,uop_4999,])
func_5004 = relay.Function([var_4935,var_4939,var_4988,], output)
mod['func_5004'] = func_5004
mod = relay.transform.InferType()(mod)
mutated_mod['func_5004'] = func_5004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mutated_mod.get_global_var('func_5004')
var_5006 = relay.var("var_5006", dtype = "int8", shape = (13, 11, 14))#candidate|5006|(13, 11, 14)|var|int8
var_5007 = relay.var("var_5007", dtype = "int8", shape = (13, 11, 14))#candidate|5007|(13, 11, 14)|var|int8
var_5008 = relay.var("var_5008", dtype = "bool", shape = (13, 11, 14))#candidate|5008|(13, 11, 14)|var|bool
call_5005 = func_5004_call(var_5006,var_5007,var_5008,)
output = call_5005
func_5009 = relay.Function([var_5006,var_5007,var_5008,], output)
mutated_mod['func_5009'] = func_5009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3447_call = mod.get_global_var('func_3447')
func_3449_call = mutated_mod.get_global_var('func_3449')
call_5045 = func_3447_call()
call_5046 = func_3447_call()
output = relay.Tuple([call_5045,])
output2 = relay.Tuple([call_5046,])
func_5047 = relay.Function([], output)
mod['func_5047'] = func_5047
mod = relay.transform.InferType()(mod)
output = func_5047()
func_5048 = relay.Function([], output)
mutated_mod['func_5048'] = func_5048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_775_call = mod.get_global_var('func_775')
func_777_call = mutated_mod.get_global_var('func_777')
call_5130 = relay.TupleGetItem(func_775_call(), 0)
call_5131 = relay.TupleGetItem(func_777_call(), 0)
func_3410_call = mod.get_global_var('func_3410')
func_3412_call = mutated_mod.get_global_var('func_3412')
call_5133 = relay.TupleGetItem(func_3410_call(), 0)
call_5134 = relay.TupleGetItem(func_3412_call(), 0)
uop_5138 = relay.rsqrt(call_5133.astype('float64')) # shape=(2310,)
uop_5140 = relay.rsqrt(call_5134.astype('float64')) # shape=(2310,)
func_2940_call = mod.get_global_var('func_2940')
func_2941_call = mutated_mod.get_global_var('func_2941')
call_5158 = relay.TupleGetItem(func_2940_call(), 1)
call_5159 = relay.TupleGetItem(func_2941_call(), 1)
func_276_call = mod.get_global_var('func_276')
func_279_call = mutated_mod.get_global_var('func_279')
var_5163 = relay.var("var_5163", dtype = "float32", shape = (432,))#candidate|5163|(432,)|var|float32
call_5162 = relay.TupleGetItem(func_276_call(relay.reshape(call_5133.astype('float64'), [15, 14, 11]), relay.reshape(var_5163.astype('float32'), [432,]), ), 0)
call_5164 = relay.TupleGetItem(func_279_call(relay.reshape(call_5133.astype('float64'), [15, 14, 11]), relay.reshape(var_5163.astype('float32'), [432,]), ), 0)
func_3674_call = mod.get_global_var('func_3674')
func_3676_call = mutated_mod.get_global_var('func_3676')
const_5180 = relay.const([8.928272,4.997899,2.476730,-9.754341,4.257925,8.125074,4.107536,-6.768836,3.463646,5.250299,-3.510168,-7.355554,9.309807,3.912440,4.484129,-0.346636,7.850445,4.859520,7.647107,2.471914,-8.574265,-4.846194,2.349482,3.974698,-1.421930,3.959863,-7.844079,-8.065496,-3.799848,-2.634468,-7.437556,-2.043896,-1.747490,-5.188368,-0.002353,2.839904,-4.229565,-3.841124,-7.019219,5.488024,-8.395282,6.464591,-4.506047,9.923630,-3.892300,2.456205,-9.585415,-4.665974,8.111843,-2.180612,-8.657299,-7.963972,6.197130,-5.903270,-2.039235,7.801100,-5.487429,-9.079009,-1.797336,-7.635876,9.802123,1.059434,1.797659,5.161000,-9.716066,-4.514515,0.771562,-8.262143,-9.105531,-6.528989,-7.905803,7.676172,5.153026,6.833132,2.069864,-6.034866,0.743582,-3.943170,1.386847,4.703324,2.754851,-5.162697,0.235724,-3.750812,3.597839,-8.364621,-5.395900,0.996107,5.111119,8.732690,-3.280243,-3.743051,8.357207,-0.790406,-2.928297,-4.513412,-9.028308,-4.692984,1.944629,1.940714,0.487747,-6.038686,8.721604,6.160405,0.180257,-1.947304,-3.491627,4.952597,9.669422,-0.523539,-8.371813,-6.500004,4.242865,-1.009948,5.861354,-0.763566,0.549536,-3.567659,-0.473634,-1.043211,-7.596419,5.087139,2.222284,-7.474520,-8.382248,-7.578196,2.709070,0.529306,7.936254,-9.056747,3.145375,4.962972,0.390213,-9.446438,-9.196235,2.161011,0.802671,1.159810,-2.233525,1.813931,9.335017,6.447710,-7.972669,9.432020,-3.431889,-4.804624,-2.958620,-1.035941,4.350496,3.776309,2.559279,-0.465756,3.693490,0.884339,7.613491,2.871303,-8.051615,-0.395072,5.076705,-5.927201,9.699330,-4.206600,6.872332,3.969052,0.854845,-4.720794,-4.828720,6.447650,-1.963012,4.927141,8.844071,-2.789525,5.873344,8.572262,4.701560,-8.964979,-8.872088,-0.585067,9.459674,2.090136,8.728012,-0.297435,-4.673037,7.484225,-1.912229,0.507060,2.459029,-7.522161,-9.261609,-0.054626,8.613323,-9.482306,1.229008,1.908617,-6.784578,1.058728,-6.684386,2.972258,7.948621,-6.503249,7.912729,7.648178,1.744281,3.222988,7.066264,5.341288,-5.071348,2.303728,6.410147,9.381983,2.193329,0.990157,-7.159403,-8.646882,5.483517,0.334476,-8.766382,-4.893649,-2.778272,2.165471,1.931547,7.796597,-4.361945,1.386136,9.960728,-9.210172,6.245875,9.505047,-9.699432,9.878961,-8.498795,3.828506,5.860851,-7.277398,5.625527,-2.788164,8.744707,9.892430,-8.420128,2.976721,2.633755,-6.913795,3.931398,-0.915747,0.393205,4.374855,-9.833307,0.566988,-3.527346,-5.167320,7.840257,-6.850182,-1.101330,8.198831,-9.113444,-6.205721,-9.849024,-5.903180,-1.638090,8.085466,-4.540926,5.000370,3.664908,3.833726,3.704455,-7.088450,-8.278711,3.418200,-2.350362,6.475948,4.417240,-3.851908,-2.814559,7.268025,5.292817,-9.986927,5.439223,-9.276846,-1.270036,1.055251,7.805006,4.598777,-1.471519,-8.829225,5.738133,-8.030492,-0.599992,-3.369985,1.449015,0.495282,-8.820591,5.400783,-9.670779,5.602603,9.344798,-8.518681,-3.605541,-8.922164,-7.054080,0.682227,-1.877486,-3.264106,-2.705017,8.413188,-3.217441,-4.517980,-8.553925,-8.128974,7.544657,-7.951331,-0.252606,-6.623138,-2.040939,-6.153958,3.781676,-7.344688,4.464661,-0.704955,5.799359,7.547380,8.955354,-9.681417,7.893430,-5.776712,-7.154955,6.261033,7.327766,3.919100,-2.879420,-5.940609,6.799177,8.617704,6.798436,-2.176498,4.091828,-3.654737,6.830737,9.024249,4.987021,-0.579735,-9.918572,9.080378,3.817622,8.787680,-7.071138,0.309537,-9.385460,-2.252910,9.544966,-0.685557,-9.643984,8.478513,5.998578,6.132059,-8.620226,1.460522,2.604277,-5.359849,8.177261,8.739775,2.779653,-5.820899,3.379370,1.385483,8.774398,-0.580555,-0.637400,-6.847683,-2.128231,-6.749948,1.369353,2.289202,-9.997193,2.898357,2.052040,0.762534,9.377460,-7.549327,-8.413374,0.693034,4.000823,-1.354353,8.573478,5.003619,-8.605395,-2.334389,5.162076,-0.961774,8.083127,-0.503912,-6.544487,5.737581,7.945559,1.732743,3.876759,2.493045,-0.158983,-6.910992,-5.554616,9.512606,-8.681069,-7.614675,5.670561,8.893584,-8.084737,3.686491,-7.619070,0.587728,-7.633791,5.421174,2.987097,-4.327974,-4.283258,-4.356871,-3.420236,3.734427,4.514765,3.607939,4.139268,-2.475063,-4.362844,-8.065583,-4.324876,-2.526341,-5.302496,5.827346,-6.910977,6.966771,-2.639217,-3.647029,1.985427,3.712538,7.050300,9.562158,-8.816848,9.537619,3.029388,6.944040,5.662315,-1.533050,9.410162,2.238278,1.994236,3.587290,-6.022987,8.478246,3.646758,9.077633,2.733643,2.222366,-6.804213,-2.038466,9.520746,2.730230,9.021884,-9.461495,2.256375,-8.092593,1.200630,0.127661,2.382573,3.399734,1.690669,-5.463251,-2.780461,-6.145218,-2.336809,-6.003917,-8.397440,-1.248780,-1.385341,8.457166,-8.104684,-4.796669,9.686797,-3.071177,-6.665440,2.110239,-0.673236,-1.637996,-6.980985,7.375864,3.078607,-9.809983,4.655981,4.796375,7.346733,-4.849036,4.482409,3.864942,-4.813647,9.039568,-5.654669,-0.409967,-1.989141,6.779090,-8.452218,5.961624,-1.552015,8.068354,-3.666334,2.096960,4.182789,-3.418908,0.485497,9.986781,4.384453,-8.643278,-5.377791,-1.699448,-4.382384,8.904707,-1.239084,-0.180320,-3.073882,-2.634538,3.283677,-6.511758,8.714906,8.066800,1.373240,-7.646687,1.172260,-3.949382,-6.584979,1.814579,-0.949384,2.019032,6.748529,9.687397,0.139441,9.834948,-2.688597,-2.291367,-5.188597,-3.093650,-4.808778,-1.082028,9.944231,4.765284,2.541032,-5.829865,1.789279,-1.735952,-7.499626,-4.914666,5.365833,-9.241797,-2.156664,-6.349515,-6.641612,-7.583695,1.764343,-3.593937,8.837399,-0.048676,-1.778719,-6.765575,-3.001560,2.476344,-0.504949,2.989184,9.999028,5.157255,-3.585669,-4.774557,-3.416007,6.676686,6.373436,9.268702,-0.752843,9.286961,-7.730821,-0.849106,-1.782132,5.140928,-4.077490,-6.513008,-3.533367,9.628744,1.372775,2.405979,-1.149174,-6.664107,4.117721,-5.399148,4.331708,-0.437097,1.546106,4.910004,-7.136392,-0.988830,0.261636,-3.239861,8.446159,-8.187151,6.337927,-2.107075,-8.069597,3.030139,-0.381609,6.971060,2.864362,-3.128902,2.257978,-6.696393,-7.231579,-7.321844,-9.374973,-0.769993,-6.924956,-8.333423,-2.304684,0.075258,3.333614,-4.130162,-0.569691,-5.263930,-7.461240,-4.210354,-8.660369,2.250677,5.958172,-2.965617,9.045940,5.477137,1.054901,1.209253,9.315370,-0.198332,-6.284927,-8.591492,5.267927,-8.721252,4.004709,0.513802,-4.576374,7.690747,-1.593861,8.808959,-2.752341,2.146974,-4.659231,6.024183,7.903543,2.481904,3.016317,-2.506410,-6.949632,-7.081667,7.301200,5.386084,-1.742771,9.561396,-4.957291,-8.888504,-1.823272,-7.514504,1.871168,-5.401878,9.990734,-9.876842,7.684502,4.593058,7.934124,-2.267515,7.810191,-8.448852,-4.013160,-8.656226,-5.108457,5.978465,-7.080479,-9.354291,4.636298,-8.696827,-1.364660,8.144789,4.281941,4.197764,-3.740263,9.248108,2.627369,-8.242348,-9.073751,-3.557287,3.150733,7.386510,0.718418,5.220188,-4.845328,4.844920,-1.069223,-1.572514,-1.979051,6.737343,8.460412,-3.766368,-1.506870,-0.483260,-0.509216,-5.868622,-4.757396,6.865425,7.461545,3.164519,8.411318,-2.493810,5.264640,3.387148,-1.711507,0.414771,-5.772052,-5.488726,-6.387074,8.731993,0.843294,-1.130874,2.980555,7.052888,9.450748,-0.110042,5.274995,-3.386543,0.276504,-0.021680,-1.904933,-8.834953,-8.228469,-8.796065,8.978125,4.197063,5.208480,4.973760,6.747562,7.296293,6.029714,3.988189,-4.867190,4.940638,-2.931585,0.791724,7.349543,3.986808,-8.371000,-5.163899,5.154777,-8.122667,-1.244237,7.992885,-7.468324,-1.389088,-6.813653,-6.943221,7.499505,-5.948481,-8.319424,5.667340,2.091701,2.663201,-6.405246,-7.481433,3.569946,-5.350979,-0.279375,0.537234,-4.751453,-6.080094,-1.546661,6.596758,-5.724402,1.711913,0.905276,3.966063,8.663233,-6.151683,-4.865904,0.623324,6.935614,1.502974,7.578040,-2.827851,-2.689035,-8.269902,9.167435,5.740521,2.195894,-3.424169,8.285462,-6.977925,-6.277510,-6.105175,6.260248,-7.108157,4.744574,-2.157491,3.104452,-7.148845,3.479969,-6.506761,-6.363771,-2.546145,-2.165798,-5.115285,-7.567140,-0.116785,8.398480,-6.566044,-4.554002,4.760919,-6.400257,-5.386568,-2.050574,-3.247597,3.654602,-6.425418,-5.229951,2.582691,-6.970140,-1.962423,-3.044184,2.925984,8.449052,-5.308730,2.161221,1.739407,1.145968,9.716373,-1.450822,5.351050,-0.895688,9.583677,8.784917,5.974712,-4.923456,-7.718219,-8.690274,-5.735882,9.581105,0.131790,-7.552781,9.812375,-5.013213,3.536566,-3.093682,-7.056662,-4.405544,1.216418,-2.939750,1.652347,-8.830974,-9.113708,-8.431554,-0.249679,8.317900,-4.511145,-4.483848,-6.195084,-7.673238,7.390895,-9.924798,4.310384,7.217372,-1.480895,3.572091,-6.758426,-6.844572,-7.255459,3.505856,-6.084033,-2.802180,-1.552991,-2.466866,5.922255,-3.270512,9.169778,-3.636554,4.384411,7.094590,1.747351,-7.780634,-8.720262,-3.506564,7.342925,3.772590,1.579161,-2.339479,-5.551103,-3.070405,9.052251,-7.482987,4.648562,0.818874,-5.977109,3.856309,8.706606,4.435969,-5.291861,-6.663357,2.057128,5.122832,0.505830,-3.758057,7.321621,2.639126,0.780449,4.294063,-9.902113,-7.629167,-0.581061,-4.890753,7.306304,3.846858,-3.164703,8.223119,-1.169001,-1.135435,-2.390465,4.947078,2.803861,-1.655401,0.913060,3.619057,-3.733625,-6.538617,8.968337,-2.947043,9.486488,-8.342186,9.350776,9.729242,6.701640,4.601863,7.903307,7.844886,4.448819,6.280936,7.408030,-3.163172,-3.104614,-6.683212,6.942161,-2.668420,3.806725,-7.024063,-0.425879,-1.548345,2.084767,1.141408,-1.721593,6.068063,-5.917787,-0.553090,-8.017149,5.502699,-1.327662,-7.677709,-3.163603,-4.898391,-0.973672,-5.485753,-0.359332,-4.155566,-2.243177,-4.502981,-6.559962,-8.623994,8.521613,-9.965021,0.729706,-5.382363,-9.713840,-6.773525,-9.990530,-9.887688,2.535407,1.507907,6.312422,-4.944372,-0.067252,-8.278873,-3.269696,5.114514,-3.851358,4.726930,-4.147302,9.656550,3.744130,4.653999,-4.428622,-9.517908,9.104462,4.032044,1.233892,-4.474633,9.268658,-8.867905,-1.533261,8.065665,7.810856,-4.306823,-8.472970,-3.419665,7.958322,6.133103,7.953422,-8.080450,-7.735784,0.741216,6.973663,2.913019,5.885046,-8.740511,4.818530,-4.411561,9.801752,-3.473355,-9.914631,2.692465,4.180140,2.587233,-6.874654,9.505383,1.984636,-8.487734,-6.871426,7.783958,4.595015,5.380500,8.222436,5.260201,3.953380,8.568459,4.747800,8.847592,2.103164,9.462729,-8.156013,-8.399601,-5.861168,-5.602466,-5.311402,-1.477796,-7.292575,8.508413,0.765173,-9.489844,-9.182286,-6.752092,-6.592743,-6.352005,-3.767327,3.731875,-0.319495,-1.464794,-7.573542,-8.925345,2.612260,-9.479477,-4.075842,6.765563,-6.192962,-6.460439,2.142296,-5.458462,5.792479,-7.139807,5.930974,-9.920982,9.187267,-5.207489,-1.086183,8.456383,6.840687,1.236478,5.599069,8.343918,-4.979768,-3.266150,-7.669228,5.274749,-4.754423,3.678636,2.954712,5.733409,-7.583796,-0.887951,-8.474662,-2.850993,3.104049,-4.546064,9.585980,-3.462998,6.504145,8.065796,-8.668648,5.321636,-3.117030,-1.181173,0.875255,5.358339,8.259923,-3.013153,1.449531,0.100272,-8.762906,0.086696,3.522274,3.153723,-8.014847,-8.218749,8.998974,3.925812,-0.512946,4.685688,-9.056910,0.392822,-8.421966,4.093540,8.115716,-5.262767,-0.009296,6.224699,8.698436,0.853622,8.223319,-0.111130,6.233562,9.775022,1.947854,1.117570,8.011037,1.243466,-8.679636,2.140020,7.943046,3.581983,0.067656,8.720452,9.297012,-7.664778,-5.439101,4.053317,1.304080,7.951975,2.040454,-1.665183,-0.678339,-0.267030,-8.105667,-1.951188,9.342943,-8.330925,-6.581021,-3.635222,-3.672582,-2.751420,2.732591,-3.997867,-1.803235,-1.655490,9.893226,-7.480699,-9.036248,-6.011438,-6.665748,7.940028,6.259575,-3.479043,1.327568,9.959391,-0.611947,0.865077,-1.636018,-8.853300,2.983164,-0.077053,2.460893,-8.396217,-9.470772,-6.016213,2.509412,-2.303701,7.888234,-5.643460,5.395415,-3.911593,-9.527164,-0.656346,-4.063392,0.988879,4.405855,-2.714884,6.237262,-4.254957,4.990058,-1.844783,-0.851345,9.484810,-0.390656,6.819178,-4.858257,3.921562,7.411524,8.393912,-1.028869,0.551176,-5.979517,-5.987214,9.892159,5.233483,9.543280,8.399260,3.583523,-2.795213,2.359873,0.897046,8.056265,-8.129715,-0.668242,-1.606944,-9.050981,-8.250647,0.287833,-5.532791,-4.659169,-3.153133,-0.382088,8.771342,-2.401092,7.598047,2.879003,2.597692,0.864515,7.561139,9.933355,-8.161191,-4.334466,4.493879,2.431292,-8.971092,7.456928,6.595411,-5.072404,3.442705,-4.225573,-4.396729,-2.909722,4.301171,0.425061,8.367410,-8.781835,6.618163,4.799574,5.577290,-9.983987,-2.556016,-1.312206,8.719010,-7.687723,7.726562,5.032174,4.637833,-2.055856,1.930556,4.940086,-6.070600,-2.424523,-5.628514,-2.712593,-8.932672,5.192393,7.406800,1.853799,5.091537,8.287102,-1.193938,-6.178912,-2.566476,-1.909507,8.643899,4.591277,-2.487693,6.913988,7.892465,-7.302281,-6.610656,-8.409546,6.273819,6.715972,9.065130,9.899581,7.415528,3.848187,-6.331993,-0.115980,-3.700469,-5.906291,0.561053,8.874123,0.013411,9.347658,-8.483081,7.380132,1.332057,-7.290309,-0.472344,-0.151380,5.527928,0.681819,-3.727375,8.012916,4.524406,4.507520,2.876118,6.912088,-7.365988,1.360222,-3.168620,-5.191774,6.420321,2.801688,-7.624091,9.362489,3.287395,-2.369783,-5.155102,-3.741509,2.551283,9.931389,1.339581,5.921650,3.187745,-9.547367,-7.490494,9.215534,4.757847,2.869383,-7.571656,3.155057,2.814416,5.701347,-7.408272,-0.679244,6.374187,-0.391701,-7.950575,-3.073238,-6.104498,-8.024951,3.133701,-8.778532,-4.686023,2.957954,0.277163,-7.032246,-0.913087,-1.673600,-5.929855,-9.477901,-0.374797,-7.139123,-0.630606,-1.718066,9.166353,3.685802,-4.752886,9.503426,5.700166,-7.026852,7.758285,-9.472634,-2.549963,-4.731811,3.773349,3.011119,-0.621254,-3.625295,-1.061461,3.256613,3.369829,7.672343,2.641188,-5.561886,8.531832,8.438116,-0.189338,-9.636190,-4.958971,7.109055,1.433884,-1.852734,-4.572026,-8.628172,6.188439,-7.748059,8.884262,5.248643,-4.176612,9.045248,-5.600989,-8.272906,-2.238638,3.192176], dtype = "float32")#candidate|5180|(1404,)|const|float32
call_5179 = relay.TupleGetItem(func_3674_call(relay.reshape(const_5180.astype('float32'), [12, 9, 13])), 1)
call_5181 = relay.TupleGetItem(func_3676_call(relay.reshape(const_5180.astype('float32'), [12, 9, 13])), 1)
output = relay.Tuple([call_5130,uop_5138,call_5158,call_5162,var_5163,call_5179,const_5180,])
output2 = relay.Tuple([call_5131,uop_5140,call_5159,call_5164,var_5163,call_5181,const_5180,])
func_5191 = relay.Function([var_5163,], output)
mod['func_5191'] = func_5191
mod = relay.transform.InferType()(mod)
var_5192 = relay.var("var_5192", dtype = "float32", shape = (432,))#candidate|5192|(432,)|var|float32
output = func_5191(var_5192)
func_5193 = relay.Function([var_5192], output)
mutated_mod['func_5193'] = func_5193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_396_call = mod.get_global_var('func_396')
func_397_call = mutated_mod.get_global_var('func_397')
call_5198 = relay.TupleGetItem(func_396_call(), 4)
call_5199 = relay.TupleGetItem(func_397_call(), 4)
output = call_5198
output2 = call_5199
func_5202 = relay.Function([], output)
mod['func_5202'] = func_5202
mod = relay.transform.InferType()(mod)
output = func_5202()
func_5203 = relay.Function([], output)
mutated_mod['func_5203'] = func_5203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2314_call = mod.get_global_var('func_2314')
func_2316_call = mutated_mod.get_global_var('func_2316')
call_5238 = relay.TupleGetItem(func_2314_call(), 0)
call_5239 = relay.TupleGetItem(func_2316_call(), 0)
var_5244 = relay.var("var_5244", dtype = "int64", shape = (12, 12, 6))#candidate|5244|(12, 12, 6)|var|int64
bop_5245 = relay.divide(call_5238.astype('float64'), var_5244.astype('float64')) # shape=(12, 12, 6)
bop_5248 = relay.divide(call_5239.astype('float64'), var_5244.astype('float64')) # shape=(12, 12, 6)
func_4607_call = mod.get_global_var('func_4607')
func_4611_call = mutated_mod.get_global_var('func_4611')
var_5250 = relay.var("var_5250", dtype = "uint16", shape = (24, 14))#candidate|5250|(24, 14)|var|uint16
call_5249 = relay.TupleGetItem(func_4607_call(relay.reshape(var_5250.astype('uint16'), [8, 3, 14]), relay.reshape(var_5250.astype('uint16'), [8, 3, 14]), ), 2)
call_5251 = relay.TupleGetItem(func_4611_call(relay.reshape(var_5250.astype('uint16'), [8, 3, 14]), relay.reshape(var_5250.astype('uint16'), [8, 3, 14]), ), 2)
func_746_call = mod.get_global_var('func_746')
func_747_call = mutated_mod.get_global_var('func_747')
call_5253 = relay.TupleGetItem(func_746_call(), 1)
call_5254 = relay.TupleGetItem(func_747_call(), 1)
var_5260 = relay.var("var_5260", dtype = "int64", shape = (15, 14, 11))#candidate|5260|(15, 14, 11)|var|int64
bop_5261 = relay.logical_or(call_5253.astype('bool'), relay.reshape(var_5260.astype('bool'), relay.shape_of(call_5253))) # shape=(15, 14, 11)
bop_5264 = relay.logical_or(call_5254.astype('bool'), relay.reshape(var_5260.astype('bool'), relay.shape_of(call_5254))) # shape=(15, 14, 11)
func_276_call = mod.get_global_var('func_276')
func_279_call = mutated_mod.get_global_var('func_279')
const_5280 = relay.const([-8.331838,2.273508,8.931467,6.344933,2.618214,4.239173,-8.659992,2.400611,-7.396430,6.493548,1.348215,-0.194520,-6.621992,0.864739,4.276909,6.303903,-2.363698,2.439130,-0.684076,8.236628,7.411285,8.513366,3.170142,2.563819,8.879697,9.679045,-4.432477,3.224033,-8.502064,6.697901,6.132139,8.895479,1.400102,-4.516136,7.374662,8.920285,-7.688975,-7.206850,3.425480,3.817496,-9.135943,-3.005625,-8.706566,-9.906871,-6.892377,6.974362,-4.578717,7.464676,5.212699,-2.094302,3.062582,8.874398,-1.016711,6.873334,4.729512,-3.948552,1.457077,8.285850,4.207761,-9.666820,8.816128,6.797477,2.427436,1.465818,-2.315709,7.435517,6.000403,-1.170761,8.815661,-8.718438,-6.866915,-8.730702,1.321212,-5.928272,0.253756,-3.234898,-2.558358,6.569516,-4.518549,-3.995020,-4.256628,-8.527732,-0.804223,6.158797,-3.554898,3.589234,0.981260,8.295989,7.866432,4.297349,-4.317580,2.420212,6.241447,-0.416845,4.081682,9.452959,4.559494,1.451904,-1.371917,8.385441,-3.712915,4.149771,-1.591574,-8.267496,-4.234660,1.765222,4.385709,4.068807,0.451759,-3.633183,-4.574546,-7.825823,5.601268,-4.717111,-0.693525,0.821384,-4.158848,-2.553375,6.743280,-4.633121,-8.780641,-0.756407,-1.681426,2.487711,-0.781980,-6.295077,5.990820,-9.651839,-7.702481,-8.864967,-6.480015,-5.225673,-8.508545,9.584520,3.410933,-9.448890,9.517374,-3.646126,-0.124342,4.198795,6.557312,-1.778870,-6.005542,-9.098572,4.306024,-0.011141,-4.601970,-0.339415,4.985370,-5.900960,3.760315,1.097456,3.415781,-5.347488,0.036944,-6.337897,6.132404,9.444756,1.745014,-2.026233,-8.724103,-2.577773,5.565571,5.916374,8.192509,-9.846059,-0.702364,5.707446,9.820548,-2.769959,-2.597574,3.711637,4.334602,4.207157,-9.329456,9.152931,-3.641331,7.197973,-5.643035,7.759408,-8.267485,-5.883152,1.861193,9.024678,5.339352,6.065355,-8.311654,8.229947,3.210630,2.326917,-5.971975,-4.887412,-2.421141,7.191961,-7.661560,-9.515933,-2.241562,-9.704073,6.317162,-2.592192,7.831159,-5.501159,-3.227036,0.566725,-7.620127,-0.017835,6.161461,-1.873785,-0.059667,-4.620466,-6.918837,-2.893371,4.786687,-1.069296,-3.129359,0.260818,-1.938451,9.741796,1.327386,-2.257911,3.328720,-9.493869,3.451171,9.778900,-4.045982,-0.484603,-8.318179,7.345434,6.380721,-7.918498,-3.221934,8.369822,6.161760,-2.224084,9.187848,5.655282,4.282280,9.627810,-1.984141,-5.225541,-4.743191,4.268978,5.618485,-4.885704,-8.675859,-7.251613,-9.080966,7.881718,5.486166,-3.077083,-2.273397,2.201692,-5.510765,-4.419234,7.886039,5.104292,3.896012,3.894836,-6.302564,-8.704218,-3.450053,5.840893,-2.861569,4.629104,-1.143132,7.587838,1.985078,-9.503139,6.244452,-5.048413,-5.161890,2.571869,-3.201208,-9.080068,-2.420460,4.194453,-8.337330,-8.890789,9.429841,-6.296073,5.122632,-5.925777,-4.947656,-8.820675,4.228628,3.846136,3.132909,4.007315,9.608071,-9.349292,-5.404578,-6.476855,-2.845154,-3.038152,-9.865498,-7.349581,-8.140546,-2.727581,3.362225,-6.532634,7.791363,-9.068404,-9.107292,-5.868959,-2.452345,-4.995510,-8.247803,9.693494,6.036667,-4.871729,-2.722847,5.254833,8.648319,3.445209,7.555049,7.166426,3.988907,3.326621,-5.880816,5.857939,-0.922962,2.922424,8.481344,1.981943,-1.665511,-0.755656,-2.047562,5.838523,-3.892654,2.854383,4.308470,-8.880729,-4.067032,-3.991032,-6.145523,7.347202,8.713972,3.952793,3.763469,8.619312,2.049778,-3.252239,-9.992020,5.421710,8.076126,-3.127941,-5.731765,3.255146,-6.899001,3.864828,-3.191481,9.555189,1.773721,-2.281167,9.213315,5.896453,5.172804,5.074053,1.639343,-3.980618,3.688717,9.252064,-0.939506,-3.347539,2.891193,3.839384,7.467900,7.741695,3.064928,6.240759,-7.775308,2.216669,0.432664,8.360919,-3.760395,4.814094,-5.270224,3.395151,6.644429,3.023611,1.618639,-1.959162,8.237882,9.383005,5.486669,8.439931,7.373305,-9.620412,4.543720,-2.676235,6.664969,3.199772,-7.080313,-4.562240,5.754770,-1.379508,-0.160439,2.533090,4.988489,0.041415,5.750415,-9.176591,6.577282,7.121556,-2.782477,-7.105604,1.092242,9.547383,-4.779045,-6.551733,2.663795,-4.559815,7.947469,1.560614,3.766841,-5.776611,7.731541,0.685962,7.369081,-4.022792,-8.545946,2.091650,-6.186177,-2.746790,4.614511,-6.237576,0.659823,-0.376901,-0.252584,6.929633,-7.264372,8.733246], dtype = "float32")#candidate|5280|(432,)|const|float32
call_5279 = relay.TupleGetItem(func_276_call(relay.reshape(bop_5261.astype('float64'), [15, 14, 11]), relay.reshape(const_5280.astype('float32'), [432,]), ), 1)
call_5281 = relay.TupleGetItem(func_279_call(relay.reshape(bop_5261.astype('float64'), [15, 14, 11]), relay.reshape(const_5280.astype('float32'), [432,]), ), 1)
func_5191_call = mod.get_global_var('func_5191')
func_5193_call = mutated_mod.get_global_var('func_5193')
call_5284 = relay.TupleGetItem(func_5191_call(relay.reshape(call_5279.astype('float32'), [432,])), 1)
call_5285 = relay.TupleGetItem(func_5193_call(relay.reshape(call_5279.astype('float32'), [432,])), 1)
output = relay.Tuple([bop_5245,call_5249,var_5250,bop_5261,call_5279,const_5280,call_5284,])
output2 = relay.Tuple([bop_5248,call_5251,var_5250,bop_5264,call_5281,const_5280,call_5285,])
func_5298 = relay.Function([var_5244,var_5250,var_5260,], output)
mod['func_5298'] = func_5298
mod = relay.transform.InferType()(mod)
var_5299 = relay.var("var_5299", dtype = "int64", shape = (12, 12, 6))#candidate|5299|(12, 12, 6)|var|int64
var_5300 = relay.var("var_5300", dtype = "uint16", shape = (24, 14))#candidate|5300|(24, 14)|var|uint16
var_5301 = relay.var("var_5301", dtype = "int64", shape = (15, 14, 11))#candidate|5301|(15, 14, 11)|var|int64
output = func_5298(var_5299,var_5300,var_5301,)
func_5302 = relay.Function([var_5299,var_5300,var_5301,], output)
mutated_mod['func_5302'] = func_5302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1684_call = mod.get_global_var('func_1684')
func_1685_call = mutated_mod.get_global_var('func_1685')
call_5317 = relay.TupleGetItem(func_1684_call(), 0)
call_5318 = relay.TupleGetItem(func_1685_call(), 0)
output = relay.Tuple([call_5317,])
output2 = relay.Tuple([call_5318,])
func_5322 = relay.Function([], output)
mod['func_5322'] = func_5322
mod = relay.transform.InferType()(mod)
output = func_5322()
func_5323 = relay.Function([], output)
mutated_mod['func_5323'] = func_5323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4134_call = mod.get_global_var('func_4134')
func_4136_call = mutated_mod.get_global_var('func_4136')
call_5359 = relay.TupleGetItem(func_4134_call(), 0)
call_5360 = relay.TupleGetItem(func_4136_call(), 0)
func_4134_call = mod.get_global_var('func_4134')
func_4136_call = mutated_mod.get_global_var('func_4136')
call_5365 = relay.TupleGetItem(func_4134_call(), 1)
call_5366 = relay.TupleGetItem(func_4136_call(), 1)
output = relay.Tuple([call_5359,call_5365,])
output2 = relay.Tuple([call_5360,call_5366,])
func_5373 = relay.Function([], output)
mod['func_5373'] = func_5373
mod = relay.transform.InferType()(mod)
mutated_mod['func_5373'] = func_5373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5373_call = mutated_mod.get_global_var('func_5373')
call_5374 = func_5373_call()
output = call_5374
func_5375 = relay.Function([], output)
mutated_mod['func_5375'] = func_5375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3403_call = mod.get_global_var('func_3403')
func_3404_call = mutated_mod.get_global_var('func_3404')
call_5384 = func_3403_call()
call_5385 = func_3403_call()
const_5386 = relay.const([[[3.782025,-8.795651,-2.065873,8.004734,-0.575334,0.634225],[-7.932151,-5.295027,3.453460,-5.459729,6.017793,3.007343],[0.730687,1.496515,2.785315,-1.498786,9.731437,9.422701],[6.360695,2.864295,1.848362,-4.003188,-8.528442,5.515669],[-0.245518,-6.688680,3.371834,-6.351835,-6.110187,-1.441021],[-0.409808,-0.052345,2.157697,3.493802,-9.292797,-1.226737],[-1.733638,8.980543,3.713112,-3.510642,-4.234628,6.654001],[-3.618386,3.710475,9.014103,6.968944,-0.348976,0.195500],[0.478356,-6.464468,-8.761742,4.724859,2.038557,3.340199],[9.116941,1.038094,-4.259866,-5.819044,-8.392152,7.153697],[0.934410,3.470198,-7.049572,8.616235,-6.218878,7.266946]],[[-4.075134,6.852158,0.187067,-0.900694,-4.556577,-0.393174],[9.637512,-2.650248,-2.231776,0.708089,-6.263610,-6.947635],[-1.482962,-6.389503,3.449227,0.287245,-0.896001,-0.070629],[1.643119,7.236877,-0.939845,-0.191908,-0.038267,4.484203],[-7.136992,-8.744884,7.456523,3.054633,-4.007105,-6.910913],[5.774119,4.297835,-3.276535,4.349702,-4.320779,-3.406220],[-2.918073,-3.088026,6.494198,-1.699696,8.680117,-2.387098],[3.433680,-4.619599,3.507436,8.455147,-8.291199,-6.617817],[-7.015808,-9.876670,-0.208904,5.754022,3.311821,3.017381],[7.138925,-1.011540,-4.440911,-3.902343,-9.122175,3.393778],[6.005655,-3.697096,6.205053,7.759531,-5.559862,4.116882]],[[-5.215454,2.577476,-0.120114,-7.475137,-3.384825,-9.698045],[4.108392,-6.923562,7.928905,1.184714,7.393998,-4.264660],[-3.266231,-7.629154,9.440704,-9.699291,8.058460,0.232498],[-1.487272,4.215850,-5.965623,-7.151879,-9.087991,7.314697],[-0.589999,8.609522,-6.524847,8.075353,0.215732,1.567878],[9.481502,-0.187738,-5.922703,-0.376858,1.613510,9.369781],[-5.626251,7.055331,2.649180,-2.302596,9.801783,5.975774],[-8.830676,-3.897650,-8.270472,-1.688153,2.570223,-5.701234],[8.631070,0.949571,1.099462,-3.636125,-0.981634,-3.968821],[1.528264,4.374354,-0.349779,-4.941889,9.904952,-7.260065],[1.495870,8.146307,0.320790,-7.774584,7.346009,1.987715]],[[-9.013183,-1.480735,8.020934,-7.954501,4.765077,3.871600],[-7.685239,-9.915679,1.106107,-7.612701,-5.104941,2.025959],[8.066354,-3.066824,8.409922,1.776146,9.808749,-2.240568],[5.798935,0.288630,0.786386,-2.983317,3.496078,7.388555],[-5.111458,8.693445,-4.037775,-9.052434,-2.130712,-2.326083],[1.470044,8.824565,7.827022,2.078015,2.796973,7.806744],[-9.880152,-8.948692,3.396925,-5.123913,4.712073,-0.638879],[-4.247244,-2.828107,1.161824,6.592661,-4.113241,8.337333],[-4.334869,-0.509375,-5.116004,-8.149731,-8.222054,-7.433137],[0.933070,4.480643,-6.929895,-8.872511,-3.966279,7.669168],[4.295756,-1.222098,3.674897,3.652886,7.623841,8.008955]],[[5.543642,-8.505437,9.337043,3.611559,3.057209,3.103061],[-6.789951,-8.068480,-5.326235,-8.029895,-1.792310,-5.152319],[9.864377,-0.505700,1.227323,-2.700423,8.680256,-0.985372],[6.879513,4.312748,-0.773142,-3.353585,-7.112306,-2.741788],[-5.765924,-4.375769,1.004493,-2.188522,-5.500573,0.112371],[4.497220,0.893791,-7.334292,2.459623,1.759414,-7.235434],[0.574345,5.626520,-4.197746,6.475921,-8.849026,4.794680],[-6.466785,-8.281635,-7.796180,-5.121983,8.402294,9.900602],[-6.470359,6.139690,5.447620,4.067918,-3.089986,9.784134],[-6.655527,7.940540,-9.499859,4.961646,1.772121,-4.346043],[9.640008,8.448768,-9.794583,1.892335,0.623329,-1.328516]],[[-3.975086,0.019225,-1.314391,7.861398,2.367583,-6.899402],[-8.733825,-5.451705,2.494891,4.327651,-8.737805,-4.997722],[9.878982,2.770410,-6.478200,-7.855321,2.498003,-7.148536],[-6.373861,1.913906,-5.318765,1.040053,6.858437,-8.429021],[-2.533618,7.803277,-2.597408,3.878184,9.202368,-8.891421],[5.052418,6.457486,8.594220,-1.868923,0.298647,0.235138],[2.808549,-5.850962,4.113877,-7.931856,1.690515,-4.675302],[0.803130,5.545397,-8.459633,-6.785590,-7.653136,-2.563441],[9.926405,3.904939,-5.350514,6.426844,-8.834704,-7.039754],[-6.098155,9.613839,2.124797,-6.740735,-0.563157,6.216592],[3.469299,-5.787881,0.049050,2.562074,0.745780,-8.623700]],[[-7.946587,-4.380648,0.341111,-6.483526,1.881971,0.599694],[1.679544,7.573960,-7.195102,-5.748685,-6.434483,0.260051],[6.154766,9.193335,-8.690577,2.888444,4.546105,9.486635],[-4.449475,-3.906838,7.129742,-3.331590,1.487534,-9.055704],[2.941255,-5.117978,7.618872,9.832359,-0.930658,-5.744428],[-7.920843,5.073816,6.523495,8.847292,-0.516970,8.889145],[7.133654,-1.325514,7.801987,-3.915604,6.260368,-5.707372],[8.694662,-2.367820,-5.026050,-4.337800,-5.592046,-0.922684],[-6.264567,5.932366,-1.558680,-8.527906,5.197388,-0.962807],[-3.007430,5.911609,7.067215,-9.719632,0.338404,8.695527],[1.897715,5.469378,7.433755,4.283726,0.575705,6.264248]],[[0.629132,7.370972,-1.923646,1.698964,0.360000,0.939404],[4.494742,9.502920,-7.664927,-3.488370,-6.236007,7.432878],[-0.322803,8.319672,7.881140,1.708186,-0.740643,4.524296],[-3.266189,4.779822,5.878326,2.585854,1.626050,-1.027203],[4.629768,1.221947,-2.795680,0.740290,-2.753877,-7.080923],[1.386444,-0.604405,-4.615764,9.063990,6.041477,-2.590568],[0.910829,4.988717,-1.645800,-2.471867,-8.929283,6.897066],[-4.088933,9.454097,5.939201,-9.247268,7.981571,8.206734],[5.535944,1.634754,7.378598,2.544396,1.529898,8.163392],[-4.964568,3.023298,-2.503219,3.447162,9.088048,7.918040],[-3.030141,-0.043530,-2.396784,-4.115164,-0.111188,-1.597809]],[[4.008250,-0.543980,-7.740739,2.661916,2.368684,-7.441053],[9.194809,-9.623730,-1.713759,-9.596801,6.077207,3.064373],[-8.663569,2.805165,1.557414,-7.518802,-4.532446,7.191922],[0.315074,8.280276,8.296083,-7.425292,-5.864167,2.576082],[-1.556072,7.561963,-0.337556,6.202346,-4.997651,8.927075],[3.543232,7.685032,-1.593894,-1.635256,5.836440,-9.885824],[9.467170,8.099292,8.701985,5.994069,-3.235946,-4.075483],[0.900464,4.691085,-6.721315,4.320771,7.434271,6.665418],[6.655884,6.538766,-8.868978,0.434083,-2.553415,2.133654],[2.717370,5.692949,6.297492,9.566654,4.478252,8.851204],[8.561754,8.431396,0.076694,9.090759,7.737420,2.171876]],[[-6.537482,7.152483,1.508423,7.490917,5.717146,2.126423],[-0.797878,2.428248,2.369790,4.147494,0.259823,7.523668],[-3.880184,4.084211,6.757429,5.158486,7.171962,-1.112459],[8.493403,-1.739545,-7.230099,4.497391,-3.971097,7.647659],[9.921352,-2.211912,4.769566,8.215865,-4.902260,4.598489],[2.361389,-1.201812,-7.519933,-2.139068,-2.237599,-5.773345],[-7.200359,4.063340,6.010052,-9.709314,4.226022,0.732924],[9.935250,-7.584318,-2.033484,0.069459,-0.078009,-5.419710],[6.008417,-5.847926,3.608604,-1.713291,5.005770,-9.996138],[-9.563618,3.139831,-7.076202,7.140769,-0.892203,4.770459],[1.776689,-6.165526,-9.321810,-2.560173,9.276048,2.566487]],[[-3.509594,-3.295042,6.254663,-2.032070,-3.011445,-1.847774],[-3.234448,-0.393245,5.861133,2.440140,-8.271248,3.780994],[9.014286,-4.645161,-8.204163,0.379971,-6.393641,-6.353897],[5.795228,6.109045,7.934147,-7.278785,0.731931,-0.097787],[-2.945190,-3.862908,8.301073,-6.252168,1.392345,-5.232711],[-9.048062,-9.932636,6.701964,7.332227,9.229719,-5.508456],[-3.350420,1.975310,1.874744,-3.862630,2.947094,0.541417],[-8.216312,6.033438,-3.976003,-8.642805,-3.894851,5.738614],[7.153342,-1.369529,-6.199687,3.218822,0.124307,-5.778115],[-3.387399,-2.949560,9.480269,1.474872,2.924835,-5.379435],[-1.581614,8.596410,8.234722,-9.552480,1.954340,-2.143073]],[[-3.759653,-0.445340,-6.145260,-9.330638,3.035116,-2.604880],[-2.034662,9.512645,1.309860,-4.048502,-9.459191,-0.781912],[-8.024694,-4.237987,4.208971,8.767857,7.296058,6.476342],[3.420069,-1.989063,-6.707557,8.879250,-3.317757,2.857455],[-8.966692,7.772928,7.731479,6.814843,8.510972,1.112062],[-1.780239,-2.796824,-8.922272,6.388012,1.650603,-9.412599],[-0.933944,2.590230,-5.487176,-9.613176,-1.056925,1.285332],[8.253313,2.139631,2.226802,5.144821,-4.771553,7.615579],[9.805566,-6.054824,-7.469540,1.556012,-8.762007,-4.219346],[5.641982,-4.639954,-8.550421,3.643479,-1.017862,-4.564749],[7.926251,2.031654,6.040999,-8.671171,1.139907,-5.877589]]], dtype = "float64")#candidate|5386|(12, 11, 6)|const|float64
bop_5387 = relay.less_equal(call_5384.astype('bool'), const_5386.astype('bool')) # shape=(12, 11, 6)
bop_5390 = relay.less_equal(call_5385.astype('bool'), const_5386.astype('bool')) # shape=(12, 11, 6)
func_5202_call = mod.get_global_var('func_5202')
func_5203_call = mutated_mod.get_global_var('func_5203')
call_5394 = func_5202_call()
call_5395 = func_5202_call()
func_2800_call = mod.get_global_var('func_2800')
func_2802_call = mutated_mod.get_global_var('func_2802')
var_5403 = relay.var("var_5403", dtype = "uint32", shape = (560,))#candidate|5403|(560,)|var|uint32
call_5402 = relay.TupleGetItem(func_2800_call(relay.reshape(var_5403.astype('uint32'), [560,])), 2)
call_5404 = relay.TupleGetItem(func_2802_call(relay.reshape(var_5403.astype('uint32'), [560,])), 2)
bop_5410 = relay.floor_divide(const_5386.astype('float64'), relay.reshape(bop_5387.astype('float64'), relay.shape_of(const_5386))) # shape=(12, 11, 6)
bop_5413 = relay.floor_divide(const_5386.astype('float64'), relay.reshape(bop_5390.astype('float64'), relay.shape_of(const_5386))) # shape=(12, 11, 6)
output = relay.Tuple([call_5394,call_5402,var_5403,bop_5410,])
output2 = relay.Tuple([call_5395,call_5404,var_5403,bop_5413,])
func_5421 = relay.Function([var_5403,], output)
mod['func_5421'] = func_5421
mod = relay.transform.InferType()(mod)
mutated_mod['func_5421'] = func_5421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5422 = relay.var("var_5422", dtype = "uint32", shape = (560,))#candidate|5422|(560,)|var|uint32
func_5421_call = mutated_mod.get_global_var('func_5421')
call_5423 = func_5421_call(var_5422)
output = call_5423
func_5424 = relay.Function([var_5422], output)
mutated_mod['func_5424'] = func_5424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5322_call = mod.get_global_var('func_5322')
func_5323_call = mutated_mod.get_global_var('func_5323')
call_5437 = relay.TupleGetItem(func_5322_call(), 0)
call_5438 = relay.TupleGetItem(func_5323_call(), 0)
func_4815_call = mod.get_global_var('func_4815')
func_4818_call = mutated_mod.get_global_var('func_4818')
const_5447 = relay.const([2,7,2,-8,2,6,-4,5,-9,-10,-5,4,10,-10,-6,9,3,-7,2,5,-7,-3,5,-1,-4,-5,-4,4,-10,8,-1,4,-3,-10,8,8,6,4,-1,10,-6,4,-2,1,-5,8,4,-10,4,-1,-5,6,10,5,-5,-7,-7,-10,-3,3,-7,-2,4,9,1,-10,9,-8,-8,-10,-7,5,-10,-5,3,9,-8,3,4,-9,2,-9,-7,-9,9,7,8,10,-6,-3,2,1,4,1,7,-2,9,-1,-10,1,-2,7,-2,-2,-1,-7,8,2,-1,-9,-3,9,-6,-10,3,-8,-4,6,2,-6,2,6,1,-1,1,5,3,-7,4,-7,-1,-1,10,10,-7,6,10,-9,-10,-7,2,-6,-6,6,-10,-9,8,5,7,-1,-4,4,-9,-8,5,1,-9,-6,1,7,5,-4,5,-2,-7,-9,-9,4,7,-8,-7,-2,7,-3,10,-10,5,-9,-3,5,3,8,6,-10,4,-7,-7,9,-9,-2,2,5,6,-10,-2,-7,-10,6,7,-10,6,-3,-10,-6,-3,-9,2,4,7,-5,10,5,6,-7,9,-5,-9,-7,1,10,-4,10,-3,4,-8,-9,10,8,5,-1,3,9,-6,-10,2,2,-9,3,-5,-1,3,-1,2,-1,3,1,-1,9,-5,-6,-9,4,-9,1,2,-6,10,10,-7,10,6,-7,10,-4,-4,-3,-9,2,-1,-1,-5,-8,6,-10,10,2,-9,-10,-4,-5,5,3,2,1,10,-6,2,-1,-1,-1,1,6,-10,-1,1,3,4,1,1,1,5,-8,1,-5,-2,-5,10,5,8,-6,-1,-8,-5,1,2,-9,9,-3,-9,-5,5,-4,-1,-6,-2,-1,-1,10,-7,-2,-2,5,-10,-2,-9,8,8,10,10,2,6,6,2,3,-6,-8,8,10,4,-5,-2,8,6,3,1,9,-7,-5,1,-8,-3,-7,-2,6,-2,10,5,-6,-5,6,-2,-5,10,-10,8,-9,-6,3,-5,5,-2,-1,-2,-8,4,3,9,-7,-8,1,6,-8,-6,2,9,-9,2,-8,5,-1,1,4,-2,10,-9,5,-3,-8,3,2,-5,1,-1,4,-6,-4,1,-9,-1,2,-2,-5,-1,5,3,3,8,-7,-6,4,6,-9,8,-9,-6,10,9,4,10,-3,9,-1,4,8,9,-10,-10,1,8,8,2,-4,5,10,-9,8,-10,5,-7,2,4,8,-2,1,-10,3,-7,2,7,7,6,2,-2,-10,1,-4,7,-9,2,8,-9,3,-10,-7,-8,2,8,2,4,-1,-5,10,-9,-10,6,-5,2,10,5,-10,-10,9,-8,-1,2,-7,-9,10,3,10,-9,-6,-5,5,-4,4,-9,3,3,-10,-8,-3,-2,-6,2,-8,-3,4,-3,-7,-3,-10,-4,-10,8,2,-6,4,8,7,-10,-1,-9,10,-5,8,7,-10,2,-6,1,8,-4,5,4,2,-7,6,9,10,10,1,8,8,3,-10,-3,10,-1,-7,-9,9,-1,3,-1,-3,-3,-10,-6,-8,-2,1,-5,3,8,-10,-9,2,-6,-10,-8,-9,7,-1,-10,10,-9,9,4,9,10,-6,2,10,2,6,5,2,-7,-3,-4,-8,5,-7,9,-10,9,9,5,9,9,1,1,6,-8,4,5,5,1,-1,-9,-9,-9,10,-10,-5,-2,-5,-2,10,9,4,-6,-3,2,-7,-5,1,-7,-9,-10,5,3,-7,-10,-4,9,-4,8,1,-3,3,5,3,-7,-8,-9,10,-5,-4,4,-6,8,9,7,-6,-10,-8,4,-8,4,-7,1,4,6,2,7,-4,-6,-1,-5,-3,7,-8,3,-2,-2,-1,-10,-10,2,-8,-10,6,-5,8,7,5,-3,6,8,4,-9,-6,7,-7,10,1,-8,-5,-5,5,6,-7,2,6,1,2,2,-1,6,9,-3,-5,7,-4,-4,-8,6,1,9,7,-7,2,-1,-10,10,2,-10,-4,6,3,8,10,9,3,-9,9,-3,5,5,10,5,-1,-8,5,-5,-4,2,-9,7,8,-4,2,-8,-1,4,-8,-1,7,-6,-3,-3,-5,5,7,-8,8,1,-9,-8,-4,2,-1,-1,-2,1,7,6,-2,-6,1,-5,7,-10,7,-9,-10,2,-3,10,-9,5,-8,8,2,-8,-1,3,-8,-6,-10,-5,5,-2,10,4,-4,5,-9,-1,-8,-3,9,-7,-8,-2,-8,-7,-4,-1,-10,4,-3,-9,4,3,-8,-3,2,-3,-2,7,4,3,2,2,1,9,5,-8,7,-2,-8,1,4,-2,-1,-8,-4,10,-7,1,8,-1,7,3,1,-8,-10,-2,-3,3,-3,6,4,-5,-10,-10,-6,5,-2,-7,4,3,4,-10,-10,-10,6,4,4,2,4,6,4,-5,-10,9,-10,9,10,3,-4,4,-1,-9,-8,10,-4,-3,-10,5,1,-5,8,4,-5,7,10,-7,-2,7,-9,1,5,-4,-2,-6,-4,-3,7,10,6,1,-1,-8,-7,2,-2,-3,-8,-4,7,3,-1,6,8,9,-3,2,1,6,5,-5,-2,-7,-5], dtype = "int32")#candidate|5447|(968,)|const|int32
call_5446 = relay.TupleGetItem(func_4815_call(relay.reshape(const_5447.astype('int32'), [8, 11, 11])), 0)
call_5448 = relay.TupleGetItem(func_4818_call(relay.reshape(const_5447.astype('int32'), [8, 11, 11])), 0)
uop_5450 = relay.atanh(const_5447.astype('float64')) # shape=(968,)
output = relay.Tuple([call_5437,call_5446,uop_5450,])
output2 = relay.Tuple([call_5438,call_5448,uop_5450,])
func_5459 = relay.Function([], output)
mod['func_5459'] = func_5459
mod = relay.transform.InferType()(mod)
mutated_mod['func_5459'] = func_5459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5459_call = mutated_mod.get_global_var('func_5459')
call_5460 = func_5459_call()
output = call_5460
func_5461 = relay.Function([], output)
mutated_mod['func_5461'] = func_5461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2380_call = mod.get_global_var('func_2380')
func_2381_call = mutated_mod.get_global_var('func_2381')
call_5468 = relay.TupleGetItem(func_2380_call(), 0)
call_5469 = relay.TupleGetItem(func_2381_call(), 0)
func_3066_call = mod.get_global_var('func_3066')
func_3068_call = mutated_mod.get_global_var('func_3068')
const_5471 = relay.const([[-5.010566],[4.169158],[4.594651],[0.747693],[1.975681],[-4.242192],[4.525533],[-7.837267],[7.838951],[-7.364495],[-7.762711],[4.707235],[2.243737],[-6.989062],[-6.098691],[6.933341],[-7.787281],[-4.598671],[-4.380485],[6.816917],[9.127961],[7.214461],[7.676194],[4.447981],[-9.558359],[9.962502],[-9.841091],[7.742645],[-9.486290],[4.767974],[-3.676910],[9.496932],[-2.076047],[-1.535280],[-6.992269],[-2.101340],[9.211112],[-7.532470],[7.321135],[-2.504977],[3.977686],[8.329271],[-9.653195],[8.576583],[-4.113966],[-4.963382],[-5.104954],[-2.108830],[8.453083],[7.974464],[-3.839110],[-3.615374],[4.256181],[6.598386],[-5.995240],[-2.467534],[4.074523],[-9.577673],[-0.564911],[-9.226189],[-3.999029],[7.658345],[5.352632],[1.734157],[-7.399275],[-6.594906],[-4.212636],[3.348211],[4.108659],[0.241447],[-9.633238],[-7.075296],[1.769055],[5.153100],[-5.549887],[-2.112824],[-5.592254],[8.191409],[1.812365],[6.767816],[3.462435],[7.565758],[-4.357642],[1.540477],[1.738726],[5.566627],[7.662797],[7.001392],[-0.306680],[-8.921679],[7.922348],[-2.367614],[7.731237],[3.348831],[-3.250588],[-5.950695],[-7.885679],[-8.935082],[-4.123057],[-9.967256],[-2.433752],[5.640185],[1.793786],[-9.746305],[-6.731037],[9.792057],[5.825800],[9.348798],[6.435049],[-8.865732],[9.008819],[-8.582523],[-6.606925],[-9.650772],[-0.185571],[-9.263172],[1.897504],[-8.927760],[-0.228355],[-8.317962],[-3.891818],[-0.860268],[1.699841],[-7.414821],[-0.406102],[3.608183],[5.486941],[6.962886],[-7.291813],[2.885654],[1.528342],[3.131013],[2.516812],[4.786728],[-0.475279],[-6.774998],[7.427275],[-3.040009],[7.471137],[-7.110952],[8.465376],[8.713336],[8.652210],[-1.803200],[6.639858],[-5.029480],[9.612966],[3.253857],[-4.728237],[1.725498],[-9.008992],[1.927909],[-4.855386],[6.306988],[-6.868783],[-0.422839]], dtype = "float64")#candidate|5471|(156, 1)|const|float64
call_5470 = relay.TupleGetItem(func_3066_call(relay.reshape(const_5471.astype('float64'), [13, 1, 12])), 0)
call_5472 = relay.TupleGetItem(func_3068_call(relay.reshape(const_5471.astype('float64'), [13, 1, 12])), 0)
output = relay.Tuple([call_5468,call_5470,const_5471,])
output2 = relay.Tuple([call_5469,call_5472,const_5471,])
func_5473 = relay.Function([], output)
mod['func_5473'] = func_5473
mod = relay.transform.InferType()(mod)
output = func_5473()
func_5474 = relay.Function([], output)
mutated_mod['func_5474'] = func_5474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5047_call = mod.get_global_var('func_5047')
func_5048_call = mutated_mod.get_global_var('func_5048')
call_5488 = relay.TupleGetItem(func_5047_call(), 0)
call_5489 = relay.TupleGetItem(func_5048_call(), 0)
func_5459_call = mod.get_global_var('func_5459')
func_5461_call = mutated_mod.get_global_var('func_5461')
call_5506 = relay.TupleGetItem(func_5459_call(), 1)
call_5507 = relay.TupleGetItem(func_5461_call(), 1)
output = relay.Tuple([call_5488,call_5506,])
output2 = relay.Tuple([call_5489,call_5507,])
func_5519 = relay.Function([], output)
mod['func_5519'] = func_5519
mod = relay.transform.InferType()(mod)
output = func_5519()
func_5520 = relay.Function([], output)
mutated_mod['func_5520'] = func_5520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4134_call = mod.get_global_var('func_4134')
func_4136_call = mutated_mod.get_global_var('func_4136')
call_5535 = relay.TupleGetItem(func_4134_call(), 1)
call_5536 = relay.TupleGetItem(func_4136_call(), 1)
var_5537 = relay.var("var_5537", dtype = "int64", shape = (432,))#candidate|5537|(432,)|var|int64
bop_5538 = relay.minimum(call_5535.astype('uint16'), relay.reshape(var_5537.astype('uint16'), relay.shape_of(call_5535))) # shape=(432,)
bop_5541 = relay.minimum(call_5536.astype('uint16'), relay.reshape(var_5537.astype('uint16'), relay.shape_of(call_5536))) # shape=(432,)
func_4901_call = mod.get_global_var('func_4901')
func_4904_call = mutated_mod.get_global_var('func_4904')
var_5568 = relay.var("var_5568", dtype = "int64", shape = (864,))#candidate|5568|(864,)|var|int64
call_5567 = func_4901_call(relay.reshape(var_5568.astype('int64'), [12, 12, 6]))
call_5569 = func_4901_call(relay.reshape(var_5568.astype('int64'), [12, 12, 6]))
func_5373_call = mod.get_global_var('func_5373')
func_5375_call = mutated_mod.get_global_var('func_5375')
call_5589 = relay.TupleGetItem(func_5373_call(), 1)
call_5590 = relay.TupleGetItem(func_5375_call(), 1)
output = relay.Tuple([bop_5538,call_5567,var_5568,call_5589,])
output2 = relay.Tuple([bop_5541,call_5569,var_5568,call_5590,])
func_5591 = relay.Function([var_5537,var_5568,], output)
mod['func_5591'] = func_5591
mod = relay.transform.InferType()(mod)
mutated_mod['func_5591'] = func_5591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5591_call = mutated_mod.get_global_var('func_5591')
var_5593 = relay.var("var_5593", dtype = "int64", shape = (432,))#candidate|5593|(432,)|var|int64
var_5594 = relay.var("var_5594", dtype = "int64", shape = (864,))#candidate|5594|(864,)|var|int64
call_5592 = func_5591_call(var_5593,var_5594,)
output = call_5592
func_5595 = relay.Function([var_5593,var_5594,], output)
mutated_mod['func_5595'] = func_5595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3355_call = mod.get_global_var('func_3355')
func_3356_call = mutated_mod.get_global_var('func_3356')
call_5597 = func_3355_call()
call_5598 = func_3355_call()
func_4474_call = mod.get_global_var('func_4474')
func_4476_call = mutated_mod.get_global_var('func_4476')
call_5611 = relay.TupleGetItem(func_4474_call(), 0)
call_5612 = relay.TupleGetItem(func_4476_call(), 0)
func_1833_call = mod.get_global_var('func_1833')
func_1834_call = mutated_mod.get_global_var('func_1834')
call_5622 = relay.TupleGetItem(func_1833_call(), 1)
call_5623 = relay.TupleGetItem(func_1834_call(), 1)
var_5632 = relay.var("var_5632", dtype = "int64", shape = (12, 15, 6))#candidate|5632|(12, 15, 6)|var|int64
bop_5633 = relay.minimum(call_5611.astype('int64'), var_5632.astype('int64')) # shape=(12, 15, 6)
bop_5636 = relay.minimum(call_5612.astype('int64'), var_5632.astype('int64')) # shape=(12, 15, 6)
func_2314_call = mod.get_global_var('func_2314')
func_2316_call = mutated_mod.get_global_var('func_2316')
call_5637 = relay.TupleGetItem(func_2314_call(), 0)
call_5638 = relay.TupleGetItem(func_2316_call(), 0)
func_1015_call = mod.get_global_var('func_1015')
func_1019_call = mutated_mod.get_global_var('func_1019')
var_5644 = relay.var("var_5644", dtype = "float64", shape = (7, 330))#candidate|5644|(7, 330)|var|float64
const_5645 = relay.const([7,-4,10,2,2,2,1,8,-7,-9,3,-10,2,1,-4,-10,10,4,6,5,7,5,9,3,-4,-8,-10,4,-2,1,7,-7,-7,-8,8,-10,3,4,-1,-8,3,-1,-4,4,2,-2,-9,8,1,-7,-9,3,-4,-6,5,-1,-9,1,9,-9,-3,10,9,7,3,-8,-1,-6,9,-2,-7,-3,5,-8,-9,7,-8,-5,-4,7,-4,-2,8,-4,2,-1,8,3,-8,-2,-10,1,6,4,-8,-9,-6,9,-9,-10,10,-7,-3,-4,5,-10,-6,2,-8,-2,-9,-7,10,-8,-1,-9,10,-9,-10,6,10,-10,-8,8,1,10,-1,-7,-7,1,5,-8,7,10,2,-1,-3,-1,-5,8,-9,6,-7,10,-9,-1,10,-9,-9,-2,-4,-3,4,-9,1,5,-6,-9,-5,9,9,-8,1,5,4,-1,10,7,-8,-5,4,8,-2,-4,-7,2,-5,6,-6,8,-10,-8,2,6,-2,8,10,5,-4,-10,-4,-10,1,-6,9,-6,-2,-7,10,4,-4,-7,8,-8,-2,5,1,4,-1,10,6,-7,4,5,-9,7,1,8,7,2,-4,-5,2,10,2,3,10,6,-6,-6,-2,-6,9,2,2,3,-1,-3,-8,8,5,-7,1,-6,6,10,7,1,-2,9,-7,1,3,-4,-7,10,-2,-6,10,-8,6,-4,-5,-8,-8,-2,1,4,5,4,10,5,-1,-5,-5,-5,2,-5,-6,6,1,-10,9,-6,-2,10], dtype = "uint8")#candidate|5645|(286,)|const|uint8
call_5643 = relay.TupleGetItem(func_1015_call(relay.reshape(var_5644.astype('float64'), [2310,]), relay.reshape(const_5645.astype('uint8'), [286,]), ), 6)
call_5646 = relay.TupleGetItem(func_1019_call(relay.reshape(var_5644.astype('float64'), [2310,]), relay.reshape(const_5645.astype('uint8'), [286,]), ), 6)
output = relay.Tuple([call_5597,call_5622,bop_5633,call_5637,call_5643,var_5644,const_5645,])
output2 = relay.Tuple([call_5598,call_5623,bop_5636,call_5638,call_5646,var_5644,const_5645,])
func_5650 = relay.Function([var_5632,var_5644,], output)
mod['func_5650'] = func_5650
mod = relay.transform.InferType()(mod)
var_5651 = relay.var("var_5651", dtype = "int64", shape = (12, 15, 6))#candidate|5651|(12, 15, 6)|var|int64
var_5652 = relay.var("var_5652", dtype = "float64", shape = (7, 330))#candidate|5652|(7, 330)|var|float64
output = func_5650(var_5651,var_5652,)
func_5653 = relay.Function([var_5651,var_5652,], output)
mutated_mod['func_5653'] = func_5653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2616_call = mod.get_global_var('func_2616')
func_2618_call = mutated_mod.get_global_var('func_2618')
call_5701 = relay.TupleGetItem(func_2616_call(), 1)
call_5702 = relay.TupleGetItem(func_2618_call(), 1)
output = relay.Tuple([call_5701,])
output2 = relay.Tuple([call_5702,])
func_5703 = relay.Function([], output)
mod['func_5703'] = func_5703
mod = relay.transform.InferType()(mod)
mutated_mod['func_5703'] = func_5703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5703_call = mutated_mod.get_global_var('func_5703')
call_5704 = func_5703_call()
output = call_5704
func_5705 = relay.Function([], output)
mutated_mod['func_5705'] = func_5705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5756 = relay.var("var_5756", dtype = "uint8", shape = (7, 15, 8))#candidate|5756|(7, 15, 8)|var|uint8
const_5757 = relay.const([[[3,6,2,-1,-1,-3,-3,1],[8,-6,1,-9,6,-2,8,-4],[-2,8,4,5,2,6,-9,-7],[-2,-10,-10,5,8,10,-7,-4],[-5,-5,2,6,7,9,-3,-5],[-9,10,-5,5,4,9,2,-2],[-8,7,6,3,-7,3,7,5],[-4,7,-3,5,10,9,-7,-10],[-8,4,10,1,-10,-9,2,-4],[10,8,-6,1,6,9,-2,10],[-5,6,-2,5,1,8,8,10],[5,-3,10,8,-5,1,5,-9],[-6,8,-2,-1,-6,6,2,4],[-3,-10,-3,9,5,-7,-1,-3],[-1,-6,-3,-4,7,3,-6,-9]],[[-3,2,-7,-6,-10,3,9,-8],[-6,-1,-3,-7,7,-2,-8,1],[-9,-9,-3,9,8,-5,-7,-7],[-9,-5,7,3,-4,6,5,3],[-10,10,-7,-7,10,-4,-4,3],[1,-6,-10,2,-1,3,-6,9],[9,7,10,-3,-3,1,-9,-3],[-2,9,-9,5,-9,-5,7,9],[7,1,8,-2,-10,2,-9,10],[-5,3,-9,-3,9,1,6,-1],[4,4,6,6,-1,5,-3,-1],[-3,-4,5,1,7,-1,2,8],[5,-9,-8,-9,3,-8,9,9],[-4,-6,-10,6,-9,-2,10,-6],[-2,4,-1,-8,6,-5,3,-1]],[[-6,-9,-4,-6,1,-3,-8,4],[5,9,-2,2,-2,7,10,-4],[4,5,-10,2,-10,2,3,9],[7,-6,6,-7,5,-4,1,-3],[3,5,-10,-5,-2,-8,5,7],[-7,1,8,-10,3,10,-5,-8],[-1,-2,-10,9,5,10,-7,4],[-7,5,-2,-2,2,8,3,6],[1,-4,8,-6,3,5,-3,1],[-3,-7,3,1,-1,3,-6,-9],[8,9,-7,8,-1,9,1,3],[-8,8,-2,-9,7,7,2,2],[9,5,-8,-5,8,-2,4,3],[-6,3,10,-2,-3,-2,-7,4],[-8,2,-4,3,-9,-10,-10,6]],[[6,5,3,-2,-6,-1,1,-9],[-8,4,-5,5,4,10,-10,10],[-6,-1,2,-5,-10,-1,4,1],[-10,6,-4,1,6,-1,-8,2],[8,10,7,-10,2,1,3,9],[-8,9,4,1,-3,-8,-5,-2],[-6,-5,-8,1,8,7,3,-5],[1,-3,3,-6,-6,7,9,-6],[-4,7,8,3,9,9,7,2],[-7,-2,-1,-9,7,10,-5,-8],[-9,-2,-2,-3,4,2,6,-9],[9,3,2,-8,-8,-4,9,4],[8,5,1,-10,9,-8,3,10],[-1,-3,7,-3,-4,-9,-10,10],[-9,7,-2,6,-6,-8,2,-5]],[[3,5,1,-4,-6,9,8,-3],[2,-8,6,8,10,4,-4,-4],[-7,6,8,5,4,9,1,10],[1,-10,4,10,-1,-8,1,3],[-3,-6,-10,-5,4,8,-6,-1],[-8,4,6,-8,8,4,-7,7],[-8,1,3,4,-1,-3,1,-6],[2,3,-3,6,4,-3,9,-3],[3,4,-1,5,3,1,-1,-4],[-6,-2,-7,-2,-10,-4,-5,5],[10,-7,-10,-4,-8,8,1,-6],[-9,8,7,-9,-7,6,-9,-1],[10,1,-8,-4,2,-10,4,-2],[4,-8,-1,10,9,7,6,-6],[-8,8,-4,4,4,10,8,10]],[[-3,-5,-5,-10,8,4,-9,-10],[-9,-3,-3,-2,-1,-7,-6,2],[-9,-4,9,-1,-5,-1,-5,-9],[3,1,9,7,6,8,2,1],[-5,6,-3,1,1,-2,6,5],[5,5,7,-3,-7,5,1,3],[-3,3,7,5,7,8,-1,3],[7,10,-2,-7,6,-8,-7,6],[-1,9,-3,6,2,-3,7,8],[6,9,3,-8,-7,-5,-9,-8],[7,8,10,10,-8,-6,1,-10],[-4,-8,3,3,4,6,-8,-4],[2,7,-6,5,-1,10,4,10],[8,-2,-2,3,-4,9,-5,-1],[5,-8,-4,-4,3,7,-5,-7]],[[3,-4,-6,-10,5,-4,-4,-7],[4,7,-8,3,6,-1,4,-2],[7,1,2,-6,5,-9,-7,-6],[-2,9,6,3,9,-5,-4,-10],[-2,6,6,-2,2,-8,8,9],[8,9,-9,10,-8,3,-1,-3],[-5,8,1,-10,3,-1,3,2],[2,-7,-8,9,1,8,-6,-4],[9,2,-6,-2,-2,2,7,-1],[9,-7,5,1,-9,-8,1,6],[6,2,2,-10,9,4,-8,-4],[-2,-2,-9,3,-3,5,-2,5],[-10,-9,3,9,-1,-7,-7,-4],[1,6,-8,-10,-1,-6,-7,-3],[10,-1,1,-4,-2,-9,-9,8]]], dtype = "uint8")#candidate|5757|(7, 15, 8)|const|uint8
bop_5758 = relay.subtract(var_5756.astype('uint8'), relay.reshape(const_5757.astype('uint8'), relay.shape_of(var_5756))) # shape=(7, 15, 8)
uop_5771 = relay.cosh(const_5757.astype('float64')) # shape=(7, 15, 8)
output = relay.Tuple([bop_5758,uop_5771,])
output2 = relay.Tuple([bop_5758,uop_5771,])
func_5781 = relay.Function([var_5756,], output)
mod['func_5781'] = func_5781
mod = relay.transform.InferType()(mod)
var_5782 = relay.var("var_5782", dtype = "uint8", shape = (7, 15, 8))#candidate|5782|(7, 15, 8)|var|uint8
output = func_5781(var_5782)
func_5783 = relay.Function([var_5782], output)
mutated_mod['func_5783'] = func_5783
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5787 = relay.var("var_5787", dtype = "int8", shape = (12, 10, 5))#candidate|5787|(12, 10, 5)|var|int8
var_5788 = relay.var("var_5788", dtype = "int8", shape = (12, 10, 5))#candidate|5788|(12, 10, 5)|var|int8
bop_5789 = relay.logical_xor(var_5787.astype('int8'), relay.reshape(var_5788.astype('int8'), relay.shape_of(var_5787))) # shape=(12, 10, 5)
output = bop_5789
output2 = bop_5789
func_5808 = relay.Function([var_5787,var_5788,], output)
mod['func_5808'] = func_5808
mod = relay.transform.InferType()(mod)
mutated_mod['func_5808'] = func_5808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5808_call = mutated_mod.get_global_var('func_5808')
var_5810 = relay.var("var_5810", dtype = "int8", shape = (12, 10, 5))#candidate|5810|(12, 10, 5)|var|int8
var_5811 = relay.var("var_5811", dtype = "int8", shape = (12, 10, 5))#candidate|5811|(12, 10, 5)|var|int8
call_5809 = func_5808_call(var_5810,var_5811,)
output = call_5809
func_5812 = relay.Function([var_5810,var_5811,], output)
mutated_mod['func_5812'] = func_5812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2022_call = mod.get_global_var('func_2022')
func_2024_call = mutated_mod.get_global_var('func_2024')
call_5834 = relay.TupleGetItem(func_2022_call(), 0)
call_5835 = relay.TupleGetItem(func_2024_call(), 0)
output = relay.Tuple([call_5834,])
output2 = relay.Tuple([call_5835,])
func_5838 = relay.Function([], output)
mod['func_5838'] = func_5838
mod = relay.transform.InferType()(mod)
mutated_mod['func_5838'] = func_5838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5838_call = mutated_mod.get_global_var('func_5838')
call_5839 = func_5838_call()
output = call_5839
func_5840 = relay.Function([], output)
mutated_mod['func_5840'] = func_5840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4929_call = mod.get_global_var('func_4929')
func_4931_call = mutated_mod.get_global_var('func_4931')
call_5864 = relay.TupleGetItem(func_4929_call(), 0)
call_5865 = relay.TupleGetItem(func_4931_call(), 0)
uop_5873 = relay.asinh(call_5864.astype('float64')) # shape=(15, 14, 11)
uop_5875 = relay.asinh(call_5865.astype('float64')) # shape=(15, 14, 11)
output = uop_5873
output2 = uop_5875
func_5878 = relay.Function([], output)
mod['func_5878'] = func_5878
mod = relay.transform.InferType()(mod)
mutated_mod['func_5878'] = func_5878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5878_call = mutated_mod.get_global_var('func_5878')
call_5879 = func_5878_call()
output = call_5879
func_5880 = relay.Function([], output)
mutated_mod['func_5880'] = func_5880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5373_call = mod.get_global_var('func_5373')
func_5375_call = mutated_mod.get_global_var('func_5375')
call_5916 = relay.TupleGetItem(func_5373_call(), 1)
call_5917 = relay.TupleGetItem(func_5375_call(), 1)
func_5047_call = mod.get_global_var('func_5047')
func_5048_call = mutated_mod.get_global_var('func_5048')
call_5920 = relay.TupleGetItem(func_5047_call(), 0)
call_5921 = relay.TupleGetItem(func_5048_call(), 0)
output = relay.Tuple([call_5916,call_5920,])
output2 = relay.Tuple([call_5917,call_5921,])
func_5925 = relay.Function([], output)
mod['func_5925'] = func_5925
mod = relay.transform.InferType()(mod)
mutated_mod['func_5925'] = func_5925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5925_call = mutated_mod.get_global_var('func_5925')
call_5926 = func_5925_call()
output = call_5926
func_5927 = relay.Function([], output)
mutated_mod['func_5927'] = func_5927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4134_call = mod.get_global_var('func_4134')
func_4136_call = mutated_mod.get_global_var('func_4136')
call_5935 = relay.TupleGetItem(func_4134_call(), 1)
call_5936 = relay.TupleGetItem(func_4136_call(), 1)
output = relay.Tuple([call_5935,])
output2 = relay.Tuple([call_5936,])
func_5942 = relay.Function([], output)
mod['func_5942'] = func_5942
mod = relay.transform.InferType()(mod)
output = func_5942()
func_5943 = relay.Function([], output)
mutated_mod['func_5943'] = func_5943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5459_call = mod.get_global_var('func_5459')
func_5461_call = mutated_mod.get_global_var('func_5461')
call_5944 = relay.TupleGetItem(func_5459_call(), 0)
call_5945 = relay.TupleGetItem(func_5461_call(), 0)
uop_5968 = relay.tan(call_5944.astype('float32')) # shape=(15, 14, 11)
uop_5970 = relay.tan(call_5945.astype('float32')) # shape=(15, 14, 11)
bop_5978 = relay.logical_and(uop_5968.astype('bool'), relay.reshape(call_5944.astype('bool'), relay.shape_of(uop_5968))) # shape=(15, 14, 11)
bop_5981 = relay.logical_and(uop_5970.astype('bool'), relay.reshape(call_5945.astype('bool'), relay.shape_of(uop_5970))) # shape=(15, 14, 11)
func_4774_call = mod.get_global_var('func_4774')
func_4775_call = mutated_mod.get_global_var('func_4775')
call_5982 = relay.TupleGetItem(func_4774_call(), 0)
call_5983 = relay.TupleGetItem(func_4775_call(), 0)
func_4607_call = mod.get_global_var('func_4607')
func_4611_call = mutated_mod.get_global_var('func_4611')
const_5988 = relay.const([-6,-9,-6,10,1,-4,-3,-8,-3,2,8,2,1,-10,5,-10,6,-1,-6,-6,7,8,6,-2,5,-6,-9,-7,-4,-1,-8,-1,2,-7,-5,5,-2,1,-9,7,-9,10,-1,-6,-6,7,8,10,-2,-6,9,-8,-4,-7,3,8,-6,8,5,-6,1,-9,-1,-8,-6,-9,-6,6,-7,-3,-6,10,1,-3,4,-9,1,5,-7,-5,9,-7,-3,7,5,-10,-4,7,10,2,-7,10,-1,2,-10,-10,-4,-8,-10,-9,-8,10,-1,7,-4,5,2,-3,-2,8,5,3,-4,8,-9,-1,-8,-8,7,-10,4,6,1,-6,6,5,3,1,-2,-3,8,5,-6,-2,-8,-6,8,-8,-1,1,10,7,5,-3,8,5,4,9,5,-3,-6,5,10,2,-8,7,7,1,5,-9,2,9,4,-5,1,-1,-8,-10,8,10,-3,3,-4,-3,8,1,6,7,-8,-8,-2,-8,5,-1,-10,-8,9,-6,-6,9,3,-8,-10,10,7,8,8,4,-4,6,-7,6,8,8,-2,-9,-8,3,-2,-7,10,-2,1,-2,10,-8,6,2,7,9,-10,-4,7,-8,10,-2,1,9,-8,5,-2,-7,-7,2,1,-3,10,-1,5,-8,3,5,1,-5,6,-9,3,9,-6,-5,-2,10,-6,-9,-8,-5,-6,-6,4,-8,-3,3,2,9,-2,-7,-5,-6,-5,1,3,-8,-6,-4,10,-3,8,1,7,-1,4,-1,2,9,4,5,-10,4,9,-8,-1,-2,-6,-2,2,-2,-1,5,-10,-3,8,2,2,4,6,-10,3,-8,4,-2,3,-3,6,-8,-4,-1,-10,10,8,5,6,-1,-9,7,-8,2,-4,-8,4,-7,8,1,-2,9,-7,-4], dtype = "uint16")#candidate|5988|(336,)|const|uint16
call_5987 = relay.TupleGetItem(func_4607_call(relay.reshape(const_5988.astype('uint16'), [8, 3, 14]), relay.reshape(const_5988.astype('uint16'), [8, 3, 14]), ), 4)
call_5989 = relay.TupleGetItem(func_4611_call(relay.reshape(const_5988.astype('uint16'), [8, 3, 14]), relay.reshape(const_5988.astype('uint16'), [8, 3, 14]), ), 4)
func_2314_call = mod.get_global_var('func_2314')
func_2316_call = mutated_mod.get_global_var('func_2316')
call_5998 = relay.TupleGetItem(func_2314_call(), 0)
call_5999 = relay.TupleGetItem(func_2316_call(), 0)
func_2380_call = mod.get_global_var('func_2380')
func_2381_call = mutated_mod.get_global_var('func_2381')
call_6000 = relay.TupleGetItem(func_2380_call(), 0)
call_6001 = relay.TupleGetItem(func_2381_call(), 0)
func_3355_call = mod.get_global_var('func_3355')
func_3356_call = mutated_mod.get_global_var('func_3356')
call_6015 = func_3355_call()
call_6016 = func_3355_call()
output = relay.Tuple([bop_5978,call_5982,call_5987,const_5988,call_5998,call_6000,call_6015,])
output2 = relay.Tuple([bop_5981,call_5983,call_5989,const_5988,call_5999,call_6001,call_6016,])
func_6033 = relay.Function([], output)
mod['func_6033'] = func_6033
mod = relay.transform.InferType()(mod)
mutated_mod['func_6033'] = func_6033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6033_call = mutated_mod.get_global_var('func_6033')
call_6034 = func_6033_call()
output = call_6034
func_6035 = relay.Function([], output)
mutated_mod['func_6035'] = func_6035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5047_call = mod.get_global_var('func_5047')
func_5048_call = mutated_mod.get_global_var('func_5048')
call_6057 = relay.TupleGetItem(func_5047_call(), 0)
call_6058 = relay.TupleGetItem(func_5048_call(), 0)
uop_6063 = relay.atanh(call_6057.astype('float32')) # shape=(12, 1, 6)
uop_6065 = relay.atanh(call_6058.astype('float32')) # shape=(12, 1, 6)
output = uop_6063
output2 = uop_6065
func_6066 = relay.Function([], output)
mod['func_6066'] = func_6066
mod = relay.transform.InferType()(mod)
output = func_6066()
func_6067 = relay.Function([], output)
mutated_mod['func_6067'] = func_6067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3427_call = mod.get_global_var('func_3427')
func_3428_call = mutated_mod.get_global_var('func_3428')
call_6068 = relay.TupleGetItem(func_3427_call(), 2)
call_6069 = relay.TupleGetItem(func_3428_call(), 2)
uop_6086 = relay.sqrt(call_6068.astype('float32')) # shape=(300,)
uop_6088 = relay.sqrt(call_6069.astype('float32')) # shape=(300,)
output = uop_6086
output2 = uop_6088
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

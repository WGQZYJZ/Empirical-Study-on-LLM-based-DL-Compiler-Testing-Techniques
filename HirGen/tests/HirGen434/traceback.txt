==========mod==========
#[version = "0.0.5"]
def @func_5912() -> Tensor[(9, 14, 4), bool] {
  %0 = @func_3242() /* ty=(Tensor[(8, 14, 6), float32], Tensor[(1, 14, 4), int32], Tensor[(1, 56), int32]) */;
  %1 = %0.1;
  %2 = cast(%1, dtype="bool") /* ty=Tensor[(1, 14, 4), bool] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 14, 4), int32] */, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
  less_equal(%2, %3) /* ty=Tensor[(9, 14, 4), bool] */
}

def @func_11249() -> Tensor[(5, 12, 4), float64] {
  @func_10810() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_10522() -> (Tensor[(5, 12, 4), float64],) {
  %4 = @func_1943() /* ty=Tensor[(5, 12, 4), float64] */;
  (%4,)
}

def @func_7109() -> (Tensor[(9, 14, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(9, 14, 4), bool], Tensor[(3360), float32]) {
  %5 = @func_3758() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %6 = @func_1856() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(3360), float32], float32) */;
  %7 = @func_5912() /* ty=Tensor[(9, 14, 4), bool] */;
  %8 = %5.0;
  %9 = @func_5912() /* ty=Tensor[(9, 14, 4), bool] */;
  %10 = %6.2;
  (%7, %8, %9, %10)
}

def @func_871() -> Tensor[(5, 12, 4), float64] {
  %11 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %11.0
}

def @func_4116() -> Tensor[(5, 12, 4), float64] {
  %12 = @func_1570() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %12.0
}

def @func_4328() -> (int8, Tensor[(5, 12, 4), float64]) {
  %13 = @func_2389() /* ty=(Tensor[(4, 10, 2), float64], Tensor[(15, 15, 6), int8], int8) */;
  %14 = @func_2681() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %15 = %13.2;
  %16 = %14.0;
  (%15, %16)
}

def @func_2324() -> (Tensor[(5, 12, 4), float64],) {
  %17 = @func_1078() /* ty=Tensor[(5, 12, 4), float64] */;
  (%17,)
}

def @func_1458() -> Tensor[(5, 12, 4), float64] {
  %18 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %18.0
}

def @func_9913(%var_9845: Tensor[(56), int32], %var_9857: Tensor[(10, 14, 4), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32], Tensor[(10, 14, 4), float64], Tensor[(10, 14, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %19 = @func_6349() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %20 = @func_5407() /* ty=(Tensor[(5, 12, 4), float64], int8) */;
  %21 = cast(%var_9845, dtype="int32") /* ty=Tensor[(56), int32] */;
  %22 = reshape(%21, newshape=[1, 14, 4]) /* ty=Tensor[(1, 14, 4), int32] */;
  %23 = @func_1129(%22) /* ty=Tensor[(1, 14, 4), int32] */;
  %24 = cast(%23, dtype="float64") /* ty=Tensor[(1, 14, 4), float64] */;
  %25 = cast(%var_9857, dtype="float64") /* ty=Tensor[(10, 14, 4), float64] */;
  %26 = cast(%var_9857, dtype="float64") /* ty=Tensor[(10, 14, 4), float64] */;
  %27 = @func_2324() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %28 = @func_8869() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %29 = %19.2;
  %30 = %20.0;
  %31 = minimum(%24, %25) /* ty=Tensor[(10, 14, 4), float64] */;
  %32 = erf(%26) /* ty=Tensor[(10, 14, 4), float64] */;
  %33 = %27.0;
  %34 = %28.0;
  (%29, %30, %var_9845, %31, %32, %33, %34)
}

def @func_9111(%var_9079: Tensor[(13, 16, 15), int16], %var_9090: Tensor[(8, 30), float64]) -> (Tensor[(13, 16, 15), int16], Tensor[(5, 12, 4), bool], Tensor[(8, 30), float64], Tensor[(13, 16, 15), float32], Tensor[(5, 12, 4), float64]) {
  %35 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 16, 15), int16] */, dtype="int16") /* ty=Tensor[(13, 16, 15), int16] */;
  %36 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(13, 16, 15), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 16, 15), int16] */, dtype="int16") /* ty=Tensor[(13, 16, 15), int16] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %39 = cast(%var_9090, dtype="float64") /* ty=Tensor[(8, 30), float64] */;
  %40 = reshape(%39, newshape=[5, 12, 4]) /* ty=Tensor[(5, 12, 4), float64] */;
  %41 = @func_3586(%40) /* ty=(Tensor[(5, 12, 4), bool],) */;
  %42 = cast(%var_9079, dtype="uint32") /* ty=Tensor[(13, 16, 15), uint32] */;
  %43 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(13, 16, 15), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %44 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 16, 15), int16] */, dtype="uint32") /* ty=Tensor[(13, 16, 15), uint32] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %46 = minimum(%44, %45) /* ty=Tensor[(13, 16, 15), uint32] */;
  %47 = cast(%46, dtype="float32") /* ty=Tensor[(13, 16, 15), float32] */;
  %48 = @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */;
  %49 = logical_xor(%37, %38) /* ty=Tensor[(13, 16, 15), int16] */;
  %50 = %41.0;
  %51 = acos(%47) /* ty=Tensor[(13, 16, 15), float32] */;
  %52 = %48.0;
  (%49, %50, %var_9090, %51, %52)
}

def @func_7041(%var_7039: float32) -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(3360, 1), float32], float32) {
  %53 = @func_3566() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %54 = @func_3707() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) */;
  %55 = cast(%var_7039, dtype="float32") /* ty=float32 */;
  %56 = reshape(%55, newshape=[]) /* ty=float32 */;
  %57 = @func_4550(%56) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360, 1), float32]) */;
  %58 = %53.0;
  %59 = %54.0;
  %60 = @func_2544() /* ty=Tensor[(5, 12, 4), float64] */;
  %61 = %57.4;
  (%58, %59, %60, %61, %var_7039)
}

def @func_3970() -> (Tensor[(5, 12, 4), float64],) {
  %62 = @func_1452() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) */;
  %63 = %62.3;
  (%63,)
}

def @func_8999() -> (Tensor[(6, 13, 8), float32],) {
  %64 = @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */;
  %65 = %64.0;
  (%65,)
}

def @func_12951() -> Tensor[(5, 12, 4), float64] {
  %66 = @func_2324() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %66.0
}

def @func_10443() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %67 = @func_4817() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %68 = @func_10305() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %69 = @func_5635() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %70 = %67.0;
  %71 = %68.1;
  %72 = %69.0;
  (%70, %71, %72)
}

def @func_12204(%var_12189: Tensor[(420, 8), float32]) -> (Tensor[(5, 12, 4), float64], float32, Tensor[(420, 8), float32]) {
  %73 = cast(%var_12189, dtype="float32") /* ty=Tensor[(420, 8), float32] */;
  %74 = reshape(%73, newshape=[3360]) /* ty=Tensor[(3360), float32] */;
  %75 = @func_2275(%74) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) */;
  %76 = @func_8045() /* ty=Tensor[(5, 12, 4), float64] */;
  %77 = %75.2;
  (%76, %77, %var_12189)
}

def @func_13902() -> (Tensor[(6, 13, 8), bool], Tensor[(6, 13, 8), int16]) {
  %78 = @func_8794() /* ty=(int8, Tensor[(1152), float32], Tensor[(6, 13, 8), bool]) */;
  %79 = %78.2;
  %80 = @func_8916() /* ty=Tensor[(6, 13, 8), int16] */;
  (%79, %80)
}

def @func_1554() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %81 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %82 = %81.0;
  %83 = cast(%82, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %84 = cast(%82, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %85 = @func_1458() /* ty=Tensor[(5, 12, 4), float64] */;
  %86 = log10(%83) /* ty=Tensor[(5, 12, 4), float64] */;
  %87 = log2(%84) /* ty=Tensor[(5, 12, 4), float64] */;
  (%85, %86, %87)
}

def @func_2389() -> (Tensor[(4, 10, 2), float64], Tensor[(15, 15, 6), int8], int8) {
  %88 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(4, 10, 2), float64] */;
  %89 = cast(meta[relay.Constant][4] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %90 = reshape(%89, newshape=[]) /* ty=int8 */;
  %91 = @func_2249(%90) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], int8, Tensor[(1, 1350), int8], Tensor[(1152), float32]) */;
  %92 = exp(%88) /* ty=Tensor[(4, 10, 2), float64] */;
  %93 = %91.2;
  (%92, %93, meta[relay.Constant][4] /* ty=int8 */)
}

def @func_2249(%var_2242: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], int8, Tensor[(1, 1350), int8], Tensor[(1152), float32]) {
  %94 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %95 = @func_1304() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %96 = cast(%var_2242, dtype="int8") /* ty=int8 */;
  %97 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 1350), int8] */, dtype="int8") /* ty=Tensor[(1, 1350), int8] */;
  %98 = cast(meta[relay.Constant][6] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %99 = reshape(%96, newshape=[]) /* ty=int8 */;
  %100 = reshape(%97, newshape=[15, 15, 6]) /* ty=Tensor[(15, 15, 6), int8] */;
  %101 = reshape(%98, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %102 = @func_2204(%99, %100, %101) /* ty=(Tensor[(15, 15, 6), int8], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), uint64], Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) */;
  %103 = %94.0;
  %104 = %95.1;
  %105 = %102.0;
  (%103, %104, %105, %var_2242, meta[relay.Constant][5] /* ty=Tensor[(1, 1350), int8] */, meta[relay.Constant][6] /* ty=Tensor[(1152), float32] */)
}

def @func_3860(%var_3838: Tensor[(8, 3, 11), uint8], %var_3839: Tensor[(8, 3, 11), uint8]) -> (Tensor[(8, 3, 11), uint8], Tensor[(5, 12, 4), float64]) {
  %106 = cast(%var_3839, dtype="uint8") /* ty=Tensor[(8, 3, 11), uint8] */;
  %107 = shape_of(%var_3838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(%var_3838, dtype="uint8") /* ty=Tensor[(8, 3, 11), uint8] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %110 = bitwise_or(%108, %109) /* ty=Tensor[(8, 3, 11), uint8] */;
  %111 = @func_2047() /* ty=Tensor[(5, 12, 4), float64] */;
  (%110, %111)
}

def @func_2681() -> (Tensor[(5, 12, 4), float64],) {
  %112 = @func_2570() /* ty=Tensor[(5, 12, 4), float64] */;
  (%112,)
}

def @func_8045() -> Tensor[(5, 12, 4), float64] {
  %113 = @func_1856() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(3360), float32], float32) */;
  %113.0
}

def @func_3418(%var_3387: Tensor[(1152), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %114 = cast(%var_3387, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %115 = reshape(%114, newshape=[8, 12, 12]) /* ty=Tensor[(8, 12, 12), float32] */;
  %116 = @func_1807(%115) /* ty=(Tensor[(8, 12, 12), float32], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %117 = @func_2460() /* ty=Tensor[(5, 12, 4), float64] */;
  %118 = %116.1;
  %119 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  %120 = @func_2948() /* ty=Tensor[(5, 12, 4), float64] */;
  (%117, %118, %var_3387, %119, %120)
}

def @func_6714() -> (Tensor[(5, 12, 4), float64],) {
  %121 = @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */;
  %122 = %121.2;
  (%122,)
}

def @func_4671() -> (Tensor[(2, 28), int32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float32]) {
  %123 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %124 = %123.0;
  %125 = cast(%124, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %126 = reshape(%125, newshape=[5, 12, 4]) /* ty=Tensor[(5, 12, 4), float64] */;
  %127 = @func_2150(%126) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(2, 28), int32], Tensor[(5, 12, 4), int16], Tensor[(5, 12, 4), float64]) */;
  %128 = cast(%124, dtype="float32") /* ty=Tensor[(5, 12, 4), float32] */;
  %129 = %127.1;
  %130 = @func_4614() /* ty=Tensor[(5, 12, 4), float64] */;
  %131 = sigmoid(%128) /* ty=Tensor[(5, 12, 4), float32] */;
  (%129, %130, %131)
}

def @func_4614() -> Tensor[(5, 12, 4), float64] {
  @func_3962() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_7382(%var_7363: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(9, 15, 2), float32], Tensor[(270), float32], Tensor[(5, 12, 4), float64], Tensor[(56), int32]) {
  %132 = @func_2324() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %133 = @func_3566() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %134 = cast(meta[relay.Constant][7] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %135 = reshape(%134, newshape=[9, 15, 2]) /* ty=Tensor[(9, 15, 2), float32] */;
  %136 = cast(%var_7363, dtype="int32") /* ty=Tensor[(56), int32] */;
  %137 = reshape(%136, newshape=[56]) /* ty=Tensor[(56), int32] */;
  %138 = @func_1333(%137) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) */;
  %139 = %132.0;
  %140 = %133.0;
  %141 = @func_6913(%135) /* ty=Tensor[(9, 15, 2), float32] */;
  %142 = %138.0;
  (%139, %140, %141, meta[relay.Constant][7] /* ty=Tensor[(270), float32] */, %142, %var_7363)
}

def @func_3528(%var_3512: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) {
  %143 = @func_1452() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) */;
  %144 = cast(%var_3512, dtype="int32") /* ty=Tensor[(56), int32] */;
  %145 = reshape(%144, newshape=[56]) /* ty=Tensor[(56), int32] */;
  %146 = @func_1333(%145) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) */;
  %147 = cast(meta[relay.Constant][8] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %148 = reshape(%147, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %149 = @func_3418(%148) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %150 = @func_2324() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %151 = @func_3040() /* ty=Tensor[(5, 12, 4), float64] */;
  %152 = %143.0;
  %153 = %146.0;
  %154 = %149.1;
  %155 = %150.0;
  (%151, %152, %153, %var_3512, %154, meta[relay.Constant][8] /* ty=Tensor[(1152), float32] */, %155)
}

def @func_10935() -> (Tensor[(6, 13, 8), uint8],) {
  %156 = @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */;
  %157 = %156.1;
  (%157,)
}

def @func_8869() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %158 = @func_1372() /* ty=Tensor[(5, 12, 4), float64] */;
  %159 = @func_8677() /* ty=Tensor[(5, 12, 4), float64] */;
  (%158, %159)
}

def @func_4287() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %160 = @func_3970() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %161 = %160.0;
  %162 = @func_2570() /* ty=Tensor[(5, 12, 4), float64] */;
  (%161, %162)
}

def @func_6269() -> (Tensor[(6, 13, 8), int16],) {
  %163 = @func_4778() /* ty=Tensor[(6, 13, 8), int16] */;
  (%163,)
}

def @func_6242() -> (Tensor[(5, 12, 4), bool], int8) {
  %164 = @func_5144() /* ty=(int8, Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) */;
  %165 = @func_2389() /* ty=(Tensor[(4, 10, 2), float64], Tensor[(15, 15, 6), int8], int8) */;
  %166 = %164.1;
  %167 = %165.2;
  (%166, %167)
}

def @func_4932() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %168 = @func_3962() /* ty=Tensor[(5, 12, 4), float64] */;
  %169 = @func_1943() /* ty=Tensor[(5, 12, 4), float64] */;
  (%168, %169)
}

def @func_6663() -> Tensor[(15, 15, 6), int8] {
  %170 = @func_5341() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8]) */;
  %170.1
}

def @func_5726() -> (Tensor[(5, 12, 4), float64],) {
  %171 = @func_4287() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %172 = %171.0;
  (%172,)
}

def @func_7673() -> Tensor[(5, 12, 4), float64] {
  %173 = @func_5208() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %173.0
}

def @func_9777(%var_9771: Tensor[(72, 4), float64]) -> (int8, Tensor[(12, 8, 3), float32], Tensor[(72, 4), float64]) {
  %174 = @func_3258() /* ty=(int8,) */;
  %175 = cast(%var_9771, dtype="float64") /* ty=Tensor[(72, 4), float64] */;
  %176 = reshape(%175, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %177 = @func_7193(%176) /* ty=(Tensor[(12, 8, 3), float32],) */;
  %178 = %174.0;
  %179 = %177.0;
  (%178, %179, %var_9771)
}

def @func_11475() -> Tensor[(5, 12, 4), float64] {
  @func_871() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_12029() -> (Tensor[(6, 13, 8), float32],) {
  %180 = @func_3707() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) */;
  %181 = %180.0;
  (%181,)
}

def @func_3040() -> Tensor[(5, 12, 4), float64] {
  @func_1078() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_9656() -> Tensor[(6, 13, 8), int16] {
  @func_8916() /* ty=Tensor[(6, 13, 8), int16] */
}

def @func_13797() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %182 = @func_5208() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %183 = @func_4451() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %184 = %182.0;
  %185 = %183.0;
  (%184, %185)
}

def @func_6616() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(33, 1), float64], Tensor[(264), float64], int8) {
  %186 = cast(meta[relay.Constant][9] /* ty=Tensor[(33, 1), float64] */, dtype="float64") /* ty=Tensor[(33, 1), float64] */;
  %187 = cast(meta[relay.Constant][10] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %188 = cast(meta[relay.Constant][11] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %189 = reshape(%186, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %190 = reshape(%187, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
  %191 = reshape(%188, newshape=[]) /* ty=int8 */;
  %192 = @func_2907(%189, %190, %191) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(11, 3, 8), uint8]) */;
  %193 = @func_1372() /* ty=Tensor[(5, 12, 4), float64] */;
  %194 = %192.1;
  (%193, %194, meta[relay.Constant][9] /* ty=Tensor[(33, 1), float64] */, meta[relay.Constant][10] /* ty=Tensor[(264), float64] */, meta[relay.Constant][11] /* ty=int8 */)
}

def @func_2602() -> (Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) {
  %195 = @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */;
  %196 = %195.0;
  %197 = @func_1715() /* ty=Tensor[(5, 12, 4), float64] */;
  (%196, %197)
}

def @func_7599(%var_7591: Tensor[(2, 28), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(2, 28), bool]) {
  %198 = @func_5341() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8]) */;
  %199 = @func_1272() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %200 = %199.0;
  %201 = cast(%200, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %202 = reshape(%201, newshape=[5, 12, 4]) /* ty=Tensor[(5, 12, 4), float64] */;
  %203 = @func_2150(%202) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(2, 28), int32], Tensor[(5, 12, 4), int16], Tensor[(5, 12, 4), float64]) */;
  %204 = %203.1;
  %205 = cast(%var_7591, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
  %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(2), int32] */;
  %207 = cast(%204, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %209 = %198.0;
  %210 = less(%207, %208) /* ty=Tensor[(2, 28), bool] */;
  (%209, %200, %210)
}

def @func_11188(%var_11179: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(33), float64], int8, Tensor[(5, 12, 4), float64]) {
  %211 = @func_5635() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %212 = cast(%var_11179, dtype="int8") /* ty=int8 */;
  %213 = reshape(%212, newshape=[]) /* ty=int8 */;
  %214 = @func_8412(%213) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(264), float64], Tensor[(33), float64], int8, Tensor[(9, 15, 2), float32], Tensor[(270), float32]) */;
  %215 = %211.0;
  %216 = %214.3;
  %217 = @func_2570() /* ty=Tensor[(5, 12, 4), float64] */;
  (%215, %216, %var_11179, %217)
}

def @func_7285() -> Tensor[(5, 12, 4), float64] {
  %218 = @func_1078() /* ty=Tensor[(5, 12, 4), float64] */;
  %219 = cast(%218, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  cos(%219) /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_1304() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %220 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %221 = @func_1272() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %222 = %220.0;
  %223 = %221.1;
  (%222, %223)
}

def @func_8297() -> (Tensor[(5, 12, 4), float64],) {
  %224 = @func_2570() /* ty=Tensor[(5, 12, 4), float64] */;
  (%224,)
}

def @func_8518() -> (Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(72, 4), bool]) {
  %225 = @func_4378() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %226 = @func_5144() /* ty=(int8, Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) */;
  %227 = cast(meta[relay.Constant][12] /* ty=Tensor[(72, 4), float64] */, dtype="float64") /* ty=Tensor[(72, 4), float64] */;
  %228 = reshape(%227, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %229 = @func_7193(%228) /* ty=(Tensor[(12, 8, 3), float32],) */;
  %230 = %229.0;
  %231 = cast(%230, dtype="bool") /* ty=Tensor[(12, 8, 3), bool] */;
  %232 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(72, 4), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %233 = cast(meta[relay.Constant][12] /* ty=Tensor[(72, 4), float64] */, dtype="bool") /* ty=Tensor[(72, 4), bool] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %235 = %225.0;
  %236 = %226.2;
  %237 = logical_and(%233, %234) /* ty=Tensor[(72, 4), bool] */;
  (%235, %236, %237)
}

def @func_7803() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %238 = @func_7229() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %239 = @func_7673() /* ty=Tensor[(5, 12, 4), float64] */;
  %240 = %238.1;
  (%239, %240)
}

def @func_1921(%var_1914: Tensor[(5, 12, 4), float64]) -> Tensor[(5, 12, 4), bool] {
  %241 = @func_1524() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %242 = %241.0;
  %243 = cast(%var_1914, dtype="bool") /* ty=Tensor[(5, 12, 4), bool] */;
  %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%242, dtype="bool") /* ty=Tensor[(5, 12, 4), bool] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%245, %246) /* ty=Tensor[(5, 12, 4), bool] */
}

def @func_10687() -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16]) {
  %247 = @func_6616() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(33, 1), float64], Tensor[(264), float64], int8) */;
  %248 = %247.0;
  %249 = @func_9656() /* ty=Tensor[(6, 13, 8), int16] */;
  (%248, %249)
}

def @func_13651() -> Tensor[(6, 13, 8), int16] {
  @func_4778() /* ty=Tensor[(6, 13, 8), int16] */
}

def @func_12458() -> (Tensor[(5, 12, 4), float64],) {
  %250 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  (%250,)
}

def @func_12575() -> (Tensor[(5, 12, 4), float64],) {
  %251 = @func_3566() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %252 = %251.0;
  (%252,)
}

def @func_8794() -> (int8, Tensor[(1152), float32], Tensor[(6, 13, 8), bool]) {
  %253 = @func_4328() /* ty=(int8, Tensor[(5, 12, 4), float64]) */;
  %254 = @func_6313() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) */;
  %255 = @func_5801() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(624), int16]) */;
  %256 = %253.0;
  %257 = %254.2;
  %258 = %255.1;
  (%256, %257, %258)
}

def @func_12518(%var_12504: Tensor[(13, 5, 3), float64]) -> Tensor[(13, 5, 3), float32] {
  %259 = cast(%var_12504, dtype="uint16") /* ty=Tensor[(13, 5, 3), uint16] */;
  %260 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(13, 5, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 5, 3), float64] */, dtype="uint16") /* ty=Tensor[(13, 5, 3), uint16] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %263 = right_shift(%261, %262) /* ty=Tensor[(13, 5, 3), uint16] */;
  %264 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 5, 3), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 3), float64] */;
  %265 = acosh(%264) /* ty=Tensor[(13, 5, 3), float64] */;
  %266 = cast(%265, dtype="float32") /* ty=Tensor[(13, 5, 3), float32] */;
  %267 = shape_of(%263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%263, dtype="float32") /* ty=Tensor[(13, 5, 3), float32] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%268, %269) /* ty=Tensor[(13, 5, 3), float32] */
}

def @func_6044() -> Tensor[(5, 12, 4), float64] {
  %270 = @func_4932() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %270.0
}

def @func_2150(%var_2119: Tensor[(5, 12, 4), float64]) -> (Tensor[(5, 12, 4), float64], Tensor[(2, 28), int32], Tensor[(5, 12, 4), int16], Tensor[(5, 12, 4), float64]) {
  %271 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 28), int32] */, dtype="int32") /* ty=Tensor[(2, 28), int32] */;
  %272 = reshape(%271, newshape=[56]) /* ty=Tensor[(56), int32] */;
  %273 = @func_1333(%272) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) */;
  %274 = @func_2047() /* ty=Tensor[(5, 12, 4), float64] */;
  %275 = cast(%var_2119, dtype="int16") /* ty=Tensor[(5, 12, 4), int16] */;
  %276 = shape_of(%274, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%274, dtype="int16") /* ty=Tensor[(5, 12, 4), int16] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %279 = %273.0;
  %280 = add(%277, %278) /* ty=Tensor[(5, 12, 4), int16] */;
  %281 = @func_1458() /* ty=Tensor[(5, 12, 4), float64] */;
  (%279, meta[relay.Constant][14] /* ty=Tensor[(2, 28), int32] */, %280, %281)
}

def @func_9810() -> Tensor[(1, 14, 4), int32] {
  %282 = @func_3242() /* ty=(Tensor[(8, 14, 6), float32], Tensor[(1, 14, 4), int32], Tensor[(1, 56), int32]) */;
  %282.1
}

def @func_1570() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %283 = @func_1524() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %284 = %283.0;
  %285 = @func_1193() /* ty=Tensor[(5, 12, 4), float64] */;
  (%284, %285)
}

def @func_3004() -> (Tensor[(5, 12, 4), float64],) {
  %286 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %287 = %286.0;
  (%287,)
}

def @func_3654(%var_3636: Tensor[(6, 44), float64], %var_3637: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(6, 44), float64], int8) {
  %288 = cast(meta[relay.Constant][15] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %289 = cast(%var_3636, dtype="float64") /* ty=Tensor[(6, 44), float64] */;
  %290 = cast(%var_3637, dtype="int8") /* ty=int8 */;
  %291 = reshape(%288, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %292 = reshape(%289, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
  %293 = reshape(%290, newshape=[]) /* ty=int8 */;
  %294 = @func_2907(%291, %292, %293) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(11, 3, 8), uint8]) */;
  %295 = @func_2948() /* ty=Tensor[(5, 12, 4), float64] */;
  %296 = %294.0;
  (%295, %296, meta[relay.Constant][15] /* ty=Tensor[(33), float64] */, %var_3636, %var_3637)
}

def @func_1372() -> Tensor[(5, 12, 4), float64] {
  @func_871() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_5635() -> (Tensor[(5, 12, 4), float64],) {
  %297 = @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */;
  %298 = %297.2;
  (%298,)
}

def @func_5091(%var_5067: Tensor[(288, 4), float32]) -> (Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(288, 4), float32], Tensor[(5, 12, 4), float64]) {
  %299 = @func_2602() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) */;
  %300 = cast(%var_5067, dtype="float32") /* ty=Tensor[(288, 4), float32] */;
  %301 = reshape(%300, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %302 = @func_3418(%301) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %303 = @func_4287() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %304 = %299.0;
  %305 = %302.3;
  %306 = %303.1;
  (%304, %305, %var_5067, %306)
}

def @func_4778() -> Tensor[(6, 13, 8), int16] {
  %307 = @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */;
  %307.1
}

def @func_861() -> (Tensor[(5, 12, 4), float64],) {
  %308 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %309 = %308.0;
  (%309,)
}

def @func_7779() -> (Tensor[(5, 12, 4), float64],) {
  %310 = @func_1715() /* ty=Tensor[(5, 12, 4), float64] */;
  (%310,)
}

def @func_11133() -> (Tensor[(5, 12, 4), float64],) {
  %311 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %312 = %311.1;
  (%312,)
}

def @func_1129(%var_1121: Tensor[(1, 14, 4), int32]) -> Tensor[(1, 14, 4), int32] {
  %313 = cast(2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %314 = cast(%var_1121, dtype="int32") /* ty=Tensor[(1, 14, 4), int32] */;
  logical_xor(%313, %314) /* ty=Tensor[(1, 14, 4), int32] */
}

def @func_7482() -> (Tensor[(5, 12, 4), float64],) {
  %315 = @func_1458() /* ty=Tensor[(5, 12, 4), float64] */;
  (%315,)
}

def @func_2275(%var_2261: Tensor[(3360), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) {
  %316 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %317 = cast(9.61233f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %318 = cast(%var_2261, dtype="float32") /* ty=Tensor[(3360), float32] */;
  %319 = reshape(%317, newshape=[]) /* ty=float32 */;
  %320 = reshape(%318, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float32] */;
  %321 = @func_176(%319, %320) /* ty=(Tensor[(14, 15, 16), bool],) */;
  %322 = %316.2;
  %323 = %321.0;
  (%322, %323, 9.61233f /* ty=float32 */, %var_2261)
}

def @func_10354(%var_10350: Tensor[(288), float64]) -> (Tensor[(14, 15, 16), bool], Tensor[(8, 12, 12), float32], Tensor[(1152), float32], int8, Tensor[(288), float64]) {
  %324 = @func_1452() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) */;
  %325 = cast(meta[relay.Constant][16] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %326 = reshape(%325, newshape=[8, 12, 12]) /* ty=Tensor[(8, 12, 12), float32] */;
  %327 = @func_1807(%326) /* ty=(Tensor[(8, 12, 12), float32], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %328 = cast(%var_10350, dtype="float64") /* ty=Tensor[(288), float64] */;
  %329 = reshape(%328, newshape=[72, 4]) /* ty=Tensor[(72, 4), float64] */;
  %330 = @func_9777(%329) /* ty=(int8, Tensor[(12, 8, 3), float32], Tensor[(72, 4), float64]) */;
  %331 = %324.1;
  %332 = %327.0;
  %333 = %330.0;
  (%331, %332, meta[relay.Constant][16] /* ty=Tensor[(1152), float32] */, %333, %var_10350)
}

def @func_9229() -> (int8, Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) {
  %334 = @func_8794() /* ty=(int8, Tensor[(1152), float32], Tensor[(6, 13, 8), bool]) */;
  %335 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %336 = cast(meta[relay.Constant][17] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %337 = reshape(%336, newshape=[8, 12, 12]) /* ty=Tensor[(8, 12, 12), float32] */;
  %338 = @func_1807(%337) /* ty=(Tensor[(8, 12, 12), float32], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %339 = @func_7959() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %340 = %334.0;
  %341 = %335.0;
  %342 = %338.2;
  %343 = %339.1;
  (%340, %341, %342, meta[relay.Constant][17] /* ty=Tensor[(1152), float32] */, %343)
}

def @func_3566() -> (Tensor[(5, 12, 4), float64],) {
  %344 = @func_2681() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %345 = %344.0;
  (%345,)
}

def @func_12495() -> (int8,) {
  %346 = @func_5407() /* ty=(Tensor[(5, 12, 4), float64], int8) */;
  %347 = %346.1;
  (%347,)
}

def @func_11801() -> (Tensor[(5, 12, 4), float64],) {
  %348 = @func_6349() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %349 = %348.1;
  (%349,)
}

def @func_13306() -> Tensor[(5, 12, 4), float64] {
  %350 = @func_12562() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %350.0
}

def @func_4885(%var_4875: Tensor[(1, 56), int32]) -> Tensor[(?, 56), int8] {
  %351 = @func_3242() /* ty=(Tensor[(8, 14, 6), float32], Tensor[(1, 14, 4), int32], Tensor[(1, 56), int32]) */;
  %352 = %351.2;
  %353 = cast(%var_4875, dtype="int8") /* ty=Tensor[(1, 56), int8] */;
  %354 = shape_of(%352, dtype="int32") /* ty=Tensor[(2), int32] */;
  %355 = cast(%352, dtype="int8") /* ty=Tensor[(1, 56), int8] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  multiply(%355, %356) /* ty=Tensor[(?, 56), int8] */
}

def @func_10020() -> (Tensor[(6, 13, 8), uint16], Tensor[(6, 13, 8), float32], Tensor[(5, 1, 6), float64], Tensor[(30), float64]) {
  %357 = @func_5801() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(624), int16]) */;
  %358 = %357.1;
  %359 = cast(%358, dtype="float32") /* ty=Tensor[(6, 13, 8), float32] */;
  %360 = tan(%359) /* ty=Tensor[(6, 13, 8), float32] */;
  %361 = cast(%360, dtype="uint16") /* ty=Tensor[(6, 13, 8), uint16] */;
  %362 = shape_of(%358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(%358, dtype="uint16") /* ty=Tensor[(6, 13, 8), uint16] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %365 = cast(%360, dtype="float32") /* ty=Tensor[(6, 13, 8), float32] */;
  %366 = cast(meta[relay.Constant][18] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %367 = reshape(%366, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), float64] */;
  %368 = logical_xor(%363, %364) /* ty=Tensor[(6, 13, 8), uint16] */;
  %369 = cosh(%365) /* ty=Tensor[(6, 13, 8), float32] */;
  %370 = @func_4245(%367) /* ty=Tensor[(5, 1, 6), float64] */;
  (%368, %369, %370, meta[relay.Constant][18] /* ty=Tensor[(30), float64] */)
}

def @func_4024() -> float32 {
  %371 = @func_1452() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) */;
  %371.2
}

def @func_8929() -> (Tensor[(6, 13, 8), int16],) {
  %372 = @func_8916() /* ty=Tensor[(6, 13, 8), int16] */;
  (%372,)
}

def @func_6313() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) {
  %373 = cast(meta[relay.Constant][19] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %374 = reshape(%373, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %375 = @func_3418(%374) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %376 = @func_1078() /* ty=Tensor[(5, 12, 4), float64] */;
  %377 = %375.1;
  (%376, %377, meta[relay.Constant][19] /* ty=Tensor[(1152), float32] */)
}

def @func_13350(%var_13337: Tensor[(15, 15, 10), float32]) -> (Tensor[(15, 15, 10), float32], Tensor[(5, 12, 4), float64]) {
  %378 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 15, 10), float32] */, dtype="float32") /* ty=Tensor[(15, 15, 10), float32] */;
  %379 = shape_of(%var_13337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(%var_13337, dtype="float32") /* ty=Tensor[(15, 15, 10), float32] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %382 = @func_7779() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %383 = divide(%380, %381) /* ty=Tensor[(15, 15, 10), float32] */;
  %384 = %382.0;
  (%383, %384)
}

def @func_1524() -> (Tensor[(5, 12, 4), float64],) {
  %385 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %386 = %385.0;
  (%386,)
}

def @func_4998(%var_4965: Tensor[(6, 13, 8), int16]) -> Tensor[(6, 13, 8), bool] {
  %387 = @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */;
  %388 = %387.2;
  %389 = cast(%var_4965, dtype="bool") /* ty=Tensor[(6, 13, 8), bool] */;
  %390 = shape_of(%388, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%388, dtype="bool") /* ty=Tensor[(6, 13, 8), bool] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%391, %392) /* ty=Tensor[(6, 13, 8), bool] */
}

def @func_3586(%var_3579: Tensor[(5, 12, 4), float64]) -> (Tensor[(5, 12, 4), bool],) {
  %393 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  %394 = cast(%var_3579, dtype="bool") /* ty=Tensor[(5, 12, 4), bool] */;
  %395 = shape_of(%393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%393, dtype="bool") /* ty=Tensor[(5, 12, 4), bool] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %398 = not_equal(%396, %397) /* ty=Tensor[(5, 12, 4), bool] */;
  (%398,)
}

def @func_9602() -> int8 {
  %399 = @func_5407() /* ty=(Tensor[(5, 12, 4), float64], int8) */;
  %399.1
}

def @func_10232() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %400 = @func_9176() /* ty=Tensor[(5, 12, 4), float64] */;
  %401 = @func_7285() /* ty=Tensor[(5, 12, 4), float64] */;
  (%400, %401)
}

def @func_5801() -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(624), int16]) {
  %402 = @func_3326() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %403 = cast(meta[relay.Constant][21] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %404 = reshape(%403, newshape=[6, 13, 8]) /* ty=Tensor[(6, 13, 8), int16] */;
  %405 = %402.0;
  %406 = @func_4998(%404) /* ty=Tensor[(6, 13, 8), bool] */;
  (%405, %406, meta[relay.Constant][21] /* ty=Tensor[(624), int16] */)
}

def @func_9265() -> Tensor[(5, 12, 4), float64] {
  %407 = @func_4451() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %407.0
}

def @func_13490() -> (Tensor[(5, 12, 4), float64],) {
  %408 = @func_13197() /* ty=Tensor[(5, 12, 4), float64] */;
  (%408,)
}

def @func_12905() -> (Tensor[(5, 12, 4), float64], Tensor[(30), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %409 = @func_3004() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %410 = @func_10020() /* ty=(Tensor[(6, 13, 8), uint16], Tensor[(6, 13, 8), float32], Tensor[(5, 1, 6), float64], Tensor[(30), float64]) */;
  %411 = @func_7109() /* ty=(Tensor[(9, 14, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(9, 14, 4), bool], Tensor[(3360), float32]) */;
  %412 = %409.0;
  %413 = %410.3;
  %414 = @func_11475() /* ty=Tensor[(5, 12, 4), float64] */;
  %415 = %411.1;
  (%412, %413, %414, %415)
}

def @func_7193(%var_7175: Tensor[(12, 8, 3), float64]) -> (Tensor[(12, 8, 3), float32],) {
  %416 = cast(%var_7175, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  %417 = tan(%416) /* ty=Tensor[(12, 8, 3), float64] */;
  %418 = cast(%417, dtype="float32") /* ty=Tensor[(12, 8, 3), float32] */;
  %419 = erf(%418) /* ty=Tensor[(12, 8, 3), float32] */;
  (%419,)
}

def @func_9430() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %420 = @func_5726() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %421 = @func_6044() /* ty=Tensor[(5, 12, 4), float64] */;
  %422 = %420.0;
  %423 = @func_8045() /* ty=Tensor[(5, 12, 4), float64] */;
  %424 = @func_8045() /* ty=Tensor[(5, 12, 4), float64] */;
  (%421, %422, %423, %424)
}

def @func_8677() -> Tensor[(5, 12, 4), float64] {
  @func_2948() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_6754(%var_6733: Tensor[(3, 1, 1), float32]) -> Tensor[(3, ?, ?), int16] {
  %425 = cast(%var_6733, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
  %426 = tan(%425) /* ty=Tensor[(3, 1, 1), float32] */;
  %427 = cast(%426, dtype="int16") /* ty=Tensor[(3, 1, 1), int16] */;
  %428 = shape_of(%var_6733, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%var_6733, dtype="int16") /* ty=Tensor[(3, 1, 1), int16] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%429, %430) /* ty=Tensor[(3, ?, ?), int16] */
}

def @func_6433() -> Tensor[(5, 12, 4), float64] {
  %431 = @func_4287() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %431.0
}

def @func_1333(%var_1311: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) {
  %432 = cast(%var_1311, dtype="int32") /* ty=Tensor[(56), int32] */;
  %433 = reshape(%432, newshape=[1, 14, 4]) /* ty=Tensor[(1, 14, 4), int32] */;
  %434 = @func_1193() /* ty=Tensor[(5, 12, 4), float64] */;
  %435 = @func_1129(%433) /* ty=Tensor[(1, 14, 4), int32] */;
  (%434, %435, %var_1311)
}

def @func_3537() -> Tensor[(5, 12, 4), float64] {
  %436 = @func_3004() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %436.0
}

def @func_1943() -> Tensor[(5, 12, 4), float64] {
  @func_1193() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_2047() -> Tensor[(5, 12, 4), float64] {
  %437 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %437.0
}

def @func_8800() -> Tensor[(5, 12, 4), float64] {
  %438 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %438.2
}

def @func_4188(%var_4179: Tensor[(33), float64], %var_4181: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(264), float64], int8) {
  %439 = @func_3707() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) */;
  %440 = cast(%var_4179, dtype="float64") /* ty=Tensor[(33), float64] */;
  %441 = cast(meta[relay.Constant][22] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %442 = cast(%var_4181, dtype="int8") /* ty=int8 */;
  %443 = reshape(%440, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %444 = reshape(%441, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
  %445 = reshape(%442, newshape=[]) /* ty=int8 */;
  %446 = @func_2907(%443, %444, %445) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(11, 3, 8), uint8]) */;
  %447 = @func_1715() /* ty=Tensor[(5, 12, 4), float64] */;
  %448 = %439.0;
  %449 = %446.1;
  (%447, %448, %449, %var_4179, meta[relay.Constant][22] /* ty=Tensor[(264), float64] */, %var_4181)
}

def @func_6349() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %450 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %451 = @func_1458() /* ty=Tensor[(5, 12, 4), float64] */;
  %452 = %450.0;
  %453 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  (%451, %452, %453)
}

def @func_9731(%var_9719: Tensor[(16, 6, 4), float32]) -> (Tensor[(16, 6, 4), float32], Tensor[(6, 13, 8), float32]) {
  %454 = cast(%var_9719, dtype="float32") /* ty=Tensor[(16, 6, 4), float32] */;
  %455 = @func_2602() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) */;
  %456 = erf(%454) /* ty=Tensor[(16, 6, 4), float32] */;
  %457 = %455.0;
  (%456, %457)
}

def @func_10373() -> Tensor[(5, 12, 4), float64] {
  @func_9176() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_8559() -> Tensor[(5, 12, 4), float64] {
  @func_3962() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_8994() -> Tensor[(6, 13, 8), bool] {
  %458 = @func_8794() /* ty=(int8, Tensor[(1152), float32], Tensor[(6, 13, 8), bool]) */;
  %458.2
}

def @func_3297(%var_3268: Tensor[(1, 4, 7), uint16], %var_3269: Tensor[(6, 4, 7), uint16]) -> (Tensor[(6, 4, 7), uint16], Tensor[(6, 4, 7), float64]) {
  %459 = cast(%var_3268, dtype="uint16") /* ty=Tensor[(1, 4, 7), uint16] */;
  %460 = cast(%var_3269, dtype="uint16") /* ty=Tensor[(6, 4, 7), uint16] */;
  %461 = cast(%var_3269, dtype="float64") /* ty=Tensor[(6, 4, 7), float64] */;
  %462 = bitwise_or(%459, %460) /* ty=Tensor[(6, 4, 7), uint16] */;
  %463 = tan(%461) /* ty=Tensor[(6, 4, 7), float64] */;
  (%462, %463)
}

def @func_8843(%var_8836: Tensor[(1152), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(288, 4), float32], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) {
  %464 = @func_1570() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %465 = cast(%var_8836, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %466 = reshape(%465, newshape=[288, 4]) /* ty=Tensor[(288, 4), float32] */;
  %467 = @func_5091(%466) /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(288, 4), float32], Tensor[(5, 12, 4), float64]) */;
  %468 = %464.1;
  %469 = %467.2;
  %470 = @func_8677() /* ty=Tensor[(5, 12, 4), float64] */;
  (%468, %469, %var_8836, %470)
}

def @func_11231(%var_11192: Tensor[(11, 12, 6), float32], %var_11193: Tensor[(11, 12, 6), float32]) -> (Tensor[(11, 12, 6), float32], Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(8, 14, 6), float32]) {
  %471 = cast(%var_11193, dtype="float32") /* ty=Tensor[(11, 12, 6), float32] */;
  %472 = shape_of(%var_11192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%var_11192, dtype="float32") /* ty=Tensor[(11, 12, 6), float32] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %475 = @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */;
  %476 = @func_3242() /* ty=(Tensor[(8, 14, 6), float32], Tensor[(1, 14, 4), int32], Tensor[(1, 56), int32]) */;
  %477 = power(%473, %474) /* ty=Tensor[(11, 12, 6), float32] */;
  %478 = @func_10373() /* ty=Tensor[(5, 12, 4), float64] */;
  %479 = %475.2;
  %480 = %476.0;
  (%477, %478, %479, %480)
}

def @func_9645() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %481 = @func_4817() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %482 = @func_7285() /* ty=Tensor[(5, 12, 4), float64] */;
  %483 = @func_2570() /* ty=Tensor[(5, 12, 4), float64] */;
  %484 = %481.1;
  (%482, %483, %484)
}

def @func_13332() -> (Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], Tensor[(1152), float32]) {
  %485 = @func_7959() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %486 = cast(meta[relay.Constant][23] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %487 = reshape(%486, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %488 = @func_6817(%487) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], int8, Tensor[(1350), int8], Tensor[(1152), float32]) */;
  %489 = %485.0;
  %490 = %488.1;
  (%489, %490, meta[relay.Constant][23] /* ty=Tensor[(1152), float32] */)
}

def @func_12236() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %491 = @func_10305() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %492 = @func_8518() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(72, 4), bool]) */;
  %493 = %491.0;
  %494 = %492.0;
  %495 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  (%493, %494, %495)
}

def @func_11718(%var_11694: Tensor[(16, 3, 13), int8]) -> (Tensor[(16, 3, 13), int8], Tensor[(6, 13, 8), bool]) {
  %496 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 3, 13), int8] */, dtype="int8") /* ty=Tensor[(16, 3, 13), int8] */;
  %497 = shape_of(%var_11694, dtype="int32") /* ty=Tensor[(3), int32] */;
  %498 = cast(%var_11694, dtype="int8") /* ty=Tensor[(16, 3, 13), int8] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %500 = @func_5801() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(624), int16]) */;
  %501 = maximum(%498, %499) /* ty=Tensor[(16, 3, 13), int8] */;
  %502 = %500.1;
  (%501, %502)
}

def @func_11449(%var_11426: Tensor[(15, 12, 14), uint16], %var_11427: Tensor[(15, 12, 14), uint16], %var_11432: Tensor[(56), int64]) -> (Tensor[(15, 12, 14), bool], Tensor[(2, 28), float32], Tensor[(56), int64], Tensor[(5, 12, 4), float64]) {
  %503 = cast(%var_11427, dtype="bool") /* ty=Tensor[(15, 12, 14), bool] */;
  %504 = shape_of(%var_11426, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%var_11426, dtype="bool") /* ty=Tensor[(15, 12, 14), bool] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %507 = cast(%var_11432, dtype="int64") /* ty=Tensor[(56), int64] */;
  %508 = reshape(%507, newshape=[2, 28]) /* ty=Tensor[(2, 28), int64] */;
  %509 = @func_7467(%508) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(2, 28), float32], Tensor[(2, 28), uint64], Tensor[(5, 12, 4), float64], Tensor[(2, 28), uint16], Tensor[(2, 28), uint8]) */;
  %510 = @func_8518() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(72, 4), bool]) */;
  %511 = less(%505, %506) /* ty=Tensor[(15, 12, 14), bool] */;
  %512 = %509.2;
  %513 = %510.0;
  (%511, %512, %var_11432, %513)
}

def @func_13453() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool]) {
  %514 = @func_9176() /* ty=Tensor[(5, 12, 4), float64] */;
  %515 = cast(%514, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %516 = reshape(%515, newshape=[5, 12, 4]) /* ty=Tensor[(5, 12, 4), float64] */;
  %517 = @func_3586(%516) /* ty=(Tensor[(5, 12, 4), bool],) */;
  %518 = %517.0;
  (%514, %518)
}

def @func_12395(%var_12341: Tensor[(1152), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), uint8], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), int32]) {
  %519 = @func_11801() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %520 = cast(%var_12341, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %521 = reshape(%520, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %522 = @func_3418(%521) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %523 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %524 = @func_1452() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) */;
  %525 = %524.1;
  %526 = cast(%525, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %527 = acosh(%526) /* ty=Tensor[(14, 15, 16), float64] */;
  %528 = cast(%525, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %529 = asin(%528) /* ty=Tensor[(14, 15, 16), float32] */;
  %530 = cast(%529, dtype="uint8") /* ty=Tensor[(14, 15, 16), uint8] */;
  %531 = shape_of(%527, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(%527, dtype="uint8") /* ty=Tensor[(14, 15, 16), uint8] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %534 = @func_4328() /* ty=(int8, Tensor[(5, 12, 4), float64]) */;
  %535 = cast(%529, dtype="int32") /* ty=Tensor[(14, 15, 16), int32] */;
  %536 = shape_of(%527, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%527, dtype="int32") /* ty=Tensor[(14, 15, 16), int32] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %539 = %519.0;
  %540 = %522.1;
  %541 = %523.0;
  %542 = logical_xor(%532, %533) /* ty=Tensor[(14, 15, 16), uint8] */;
  %543 = %534.1;
  %544 = bitwise_or(%537, %538) /* ty=Tensor[(14, 15, 16), int32] */;
  (%539, %540, %var_12341, %541, %542, %543, %544)
}

def @func_3326() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %545 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %546 = %545.0;
  %547 = @func_1458() /* ty=Tensor[(5, 12, 4), float64] */;
  (%546, %547)
}

def @func_11599(%var_11515: int8, %var_11516: Tensor[(7, 13, 7), int8]) -> (Tensor[(7, 13, 7), uint8], Tensor[(5, 12, 4), float64], Tensor[(7, 13, 7), float64], Tensor[(5, 12, 4), float64]) {
  %548 = cast(%var_11515, dtype="uint8") /* ty=uint8 */;
  %549 = cast(%var_11516, dtype="uint8") /* ty=Tensor[(7, 13, 7), uint8] */;
  %550 = cast(%var_11515, dtype="bool") /* ty=bool */;
  %551 = cast(%var_11516, dtype="bool") /* ty=Tensor[(7, 13, 7), bool] */;
  %552 = equal(%550, %551) /* ty=Tensor[(7, 13, 7), bool] */;
  %553 = cast(%552, dtype="float64") /* ty=Tensor[(7, 13, 7), float64] */;
  %554 = tan(%553) /* ty=Tensor[(7, 13, 7), float64] */;
  %555 = cast(%554, dtype="float64") /* ty=Tensor[(7, 13, 7), float64] */;
  %556 = @func_11133() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %557 = maximum(%548, %549) /* ty=Tensor[(7, 13, 7), uint8] */;
  %558 = @func_1078() /* ty=Tensor[(5, 12, 4), float64] */;
  %559 = acos(%555) /* ty=Tensor[(7, 13, 7), float64] */;
  %560 = %556.0;
  (%557, %558, %559, %560)
}

def @func_5175() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) {
  %561 = @func_3169() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) */;
  %562 = @func_4614() /* ty=Tensor[(5, 12, 4), float64] */;
  %563 = @func_3040() /* ty=Tensor[(5, 12, 4), float64] */;
  %564 = %561.1;
  (%562, %563, %564)
}

def @func_6009() -> Tensor[(13, 12, 4), float32] {
  %565 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 12, 4), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 4), float32] */;
  cosh(%565) /* ty=Tensor[(13, 12, 4), float32] */
}

def @func_5341() -> (Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8]) {
  %566 = @func_1272() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %567 = @func_2389() /* ty=(Tensor[(4, 10, 2), float64], Tensor[(15, 15, 6), int8], int8) */;
  %568 = %566.1;
  %569 = %567.1;
  (%568, %569)
}

def @func_12712() -> Tensor[(5, 12, 4), float64] {
  @func_7285() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_2907(%var_2799: Tensor[(11, 3, 1), float64], %var_2800: Tensor[(11, 3, 8), float64], %var_2893: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(11, 3, 8), uint8]) {
  %570 = @func_2557() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %571 = @func_1524() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %572 = cast(%var_2893, dtype="int8") /* ty=int8 */;
  %573 = reshape(%572, newshape=[]) /* ty=int8 */;
  %574 = @func_2249(%573) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], int8, Tensor[(1, 1350), int8], Tensor[(1152), float32]) */;
  %575 = cast(%var_2799, dtype="float32") /* ty=Tensor[(11, 3, 1), float32] */;
  %576 = log10(%575) /* ty=Tensor[(11, 3, 1), float32] */;
  %577 = cast(%var_2799, dtype="float64") /* ty=Tensor[(11, 3, 1), float64] */;
  %578 = cast(%var_2800, dtype="float64") /* ty=Tensor[(11, 3, 8), float64] */;
  %579 = divide(%577, %578) /* ty=Tensor[(11, 3, 8), float64] */;
  %580 = cast(%576, dtype="uint8") /* ty=Tensor[(11, 3, 1), uint8] */;
  %581 = cast(%579, dtype="uint8") /* ty=Tensor[(11, 3, 8), uint8] */;
  %582 = @func_2570() /* ty=Tensor[(5, 12, 4), float64] */;
  %583 = %570.1;
  %584 = %571.0;
  %585 = @func_1193() /* ty=Tensor[(5, 12, 4), float64] */;
  %586 = %574.1;
  %587 = bitwise_xor(%580, %581) /* ty=Tensor[(11, 3, 8), uint8] */;
  (%582, %583, %584, %585, %586, %var_2893, %587)
}

def @func_12562() -> (Tensor[(5, 12, 4), float64],) {
  %588 = @func_10810() /* ty=Tensor[(5, 12, 4), float64] */;
  (%588,)
}

def @func_5407() -> (Tensor[(5, 12, 4), float64], int8) {
  %589 = @func_3004() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %590 = @func_3258() /* ty=(int8,) */;
  %591 = %589.0;
  %592 = %590.0;
  (%591, %592)
}

def @func_5050(%var_5048: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) {
  %593 = @func_1458() /* ty=Tensor[(5, 12, 4), float64] */;
  %594 = cast(%593, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %595 = cast(%var_5048, dtype="int32") /* ty=Tensor[(56), int32] */;
  %596 = reshape(%595, newshape=[1, 14, 4]) /* ty=Tensor[(1, 14, 4), int32] */;
  %597 = rsqrt(%594) /* ty=Tensor[(5, 12, 4), float64] */;
  %598 = @func_1129(%596) /* ty=Tensor[(1, 14, 4), int32] */;
  (%597, %598, %var_5048)
}

def @func_3169() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) {
  %599 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %600 = @func_1078() /* ty=Tensor[(5, 12, 4), float64] */;
  %601 = @func_2948() /* ty=Tensor[(5, 12, 4), float64] */;
  %602 = cast(%601, dtype="uint16") /* ty=Tensor[(5, 12, 4), uint16] */;
  %603 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(%600, dtype="uint16") /* ty=Tensor[(5, 12, 4), uint16] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %606 = %599.2;
  %607 = subtract(%604, %605) /* ty=Tensor[(5, 12, 4), uint16] */;
  (%606, %607)
}

def @func_3258() -> (int8,) {
  %608 = @func_2389() /* ty=(Tensor[(4, 10, 2), float64], Tensor[(15, 15, 6), int8], int8) */;
  %609 = %608.2;
  (%609,)
}

def @func_11819() -> (Tensor[(5, 12, 4), float64],) {
  %610 = @func_1715() /* ty=Tensor[(5, 12, 4), float64] */;
  (%610,)
}

def @func_10481() -> Tensor[(5, 12, 4), float64] {
  %611 = @func_1304() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %611.1
}

def @func_3707() -> (Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) {
  %612 = @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */;
  %613 = %612.0;
  %614 = @func_1458() /* ty=Tensor[(5, 12, 4), float64] */;
  (%613, %614)
}

def @func_11870() -> Tensor[(5, 12, 4), float64] {
  @func_9572() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_10586() -> Tensor[(5, 12, 4), float64] {
  %615 = @func_2557() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %615.0
}

def @func_8916() -> Tensor[(6, 13, 8), int16] {
  %616 = @func_6269() /* ty=(Tensor[(6, 13, 8), int16],) */;
  %616.0
}

def @func_2356() -> (Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) {
  %617 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 13, 8), float64] */, dtype="float64") /* ty=Tensor[(6, 13, 8), float64] */;
  %618 = cos(%617) /* ty=Tensor[(6, 13, 8), float64] */;
  %619 = cast(%618, dtype="float32") /* ty=Tensor[(6, 13, 8), float32] */;
  %620 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 13, 8), float64] */, dtype="uint8") /* ty=Tensor[(6, 13, 8), uint8] */;
  %621 = shape_of(%618, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%618, dtype="uint8") /* ty=Tensor[(6, 13, 8), uint8] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %624 = cast(%618, dtype="int16") /* ty=Tensor[(6, 13, 8), int16] */;
  %625 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(6, 13, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 13, 8), float64] */, dtype="int16") /* ty=Tensor[(6, 13, 8), int16] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %628 = atanh(%619) /* ty=Tensor[(6, 13, 8), float32] */;
  %629 = add(%622, %623) /* ty=Tensor[(6, 13, 8), uint8] */;
  %630 = bitwise_and(%626, %627) /* ty=Tensor[(6, 13, 8), int16] */;
  (%628, %629, %630)
}

def @func_11383(%var_11313: Tensor[(56, 1), int32], %var_11321: Tensor[(56, 14), int32], %var_11363: Tensor[(3), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(16, 6, 4), float32], Tensor[(2, 192), float32], Tensor[(56, 14), uint32], Tensor[(5, 12, 4), float64], Tensor[(3, ?, ?), int16], Tensor[(3), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(12, 8, 3), float32], Tensor[(288), float64]) {
  %631 = @func_3970() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %632 = cast(%var_11313, dtype="int32") /* ty=Tensor[(56, 1), int32] */;
  %633 = reshape(%632, newshape=[56]) /* ty=Tensor[(56), int32] */;
  %634 = @func_1333(%633) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) */;
  %635 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 192), float32] */, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %636 = reshape(%635, newshape=[16, 6, 4]) /* ty=Tensor[(16, 6, 4), float32] */;
  %637 = @func_9731(%636) /* ty=(Tensor[(16, 6, 4), float32], Tensor[(6, 13, 8), float32]) */;
  %638 = cast(%var_11313, dtype="uint8") /* ty=Tensor[(56, 1), uint8] */;
  %639 = cast(%var_11321, dtype="uint8") /* ty=Tensor[(56, 14), uint8] */;
  %640 = left_shift(%638, %639) /* ty=Tensor[(56, 14), uint8] */;
  %641 = cast(%640, dtype="float64") /* ty=Tensor[(56, 14), float64] */;
  %642 = atanh(%641) /* ty=Tensor[(56, 14), float64] */;
  %643 = cast(%640, dtype="uint32") /* ty=Tensor[(56, 14), uint32] */;
  %644 = shape_of(%642, dtype="int32") /* ty=Tensor[(2), int32] */;
  %645 = cast(%642, dtype="uint32") /* ty=Tensor[(56, 14), uint32] */;
  %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %647 = @func_3004() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %648 = cast(%var_11363, dtype="float32") /* ty=Tensor[(3), float32] */;
  %649 = reshape(%648, newshape=[3, 1, 1]) /* ty=Tensor[(3, 1, 1), float32] */;
  %650 = @func_10100() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) */;
  %651 = cast(meta[relay.Constant][28] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %652 = reshape(%651, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %653 = @func_7193(%652) /* ty=(Tensor[(12, 8, 3), float32],) */;
  %654 = %631.0;
  %655 = %634.0;
  %656 = %637.0;
  %657 = bitwise_or(%645, %646) /* ty=Tensor[(56, 14), uint32] */;
  %658 = %647.0;
  %659 = @func_6754(%649) /* ty=Tensor[(3, ?, ?), int16] */;
  %660 = @func_1372() /* ty=Tensor[(5, 12, 4), float64] */;
  %661 = %650.0;
  %662 = %653.0;
  (%654, %655, %656, meta[relay.Constant][27] /* ty=Tensor[(2, 192), float32] */, %657, %658, %659, %var_11363, %660, %661, %662, meta[relay.Constant][28] /* ty=Tensor[(288), float64] */)
}

def @func_12108() -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16]) {
  %663 = @func_7482() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %664 = %663.0;
  %665 = @func_4778() /* ty=Tensor[(6, 13, 8), int16] */;
  (%664, %665)
}

def @func_12140() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %666 = @func_8081() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %667 = %666.0;
  %668 = @func_1193() /* ty=Tensor[(5, 12, 4), float64] */;
  (%667, %668)
}

def @func_1452() -> (Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) {
  %669 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %670 = %669.0;
  %671 = cast(%670, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %672 = cast(3.65533f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %673 = reshape(%672, newshape=[]) /* ty=float32 */;
  %674 = @func_684(%673) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) */;
  %675 = cosh(%671) /* ty=Tensor[(5, 12, 4), float64] */;
  %676 = %674.1;
  %677 = @func_1372() /* ty=Tensor[(5, 12, 4), float64] */;
  (%675, %676, 3.65533f /* ty=float32 */, %677)
}

def @func_13737() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(21), int32], Tensor[(273), int32]) {
  %678 = @func_9430() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %679 = @func_5726() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %680 = %678.3;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %682 = cast(meta[relay.Constant][29] /* ty=Tensor[(21), int32] */, dtype="int32") /* ty=Tensor[(21), int32] */;
  %683 = cast(meta[relay.Constant][30] /* ty=Tensor[(273), int32] */, dtype="int32") /* ty=Tensor[(273), int32] */;
  %684 = reshape(%681, newshape=[5, 12, 4]) /* ty=Tensor[(5, 12, 4), float64] */;
  %685 = reshape(%682, newshape=[21]) /* ty=Tensor[(21), int32] */;
  %686 = reshape(%683, newshape=[273]) /* ty=Tensor[(273), int32] */;
  %687 = @func_6550(%684, %685, %686) /* ty=(Tensor[(5, 12, 4), uint8], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(21), int32], Tensor[(42, 2), int32], Tensor[(?, 56), int8], Tensor[(56), int32], Tensor[(273), bool]) */;
  %688 = @func_10810() /* ty=Tensor[(5, 12, 4), float64] */;
  %689 = %679.0;
  %690 = %687.2;
  (%688, %680, %689, %690, meta[relay.Constant][29] /* ty=Tensor[(21), int32] */, meta[relay.Constant][30] /* ty=Tensor[(273), int32] */)
}

def @func_6880() -> Tensor[(6, 13, 8), int16] {
  @func_4778() /* ty=Tensor[(6, 13, 8), int16] */
}

def @func_10810() -> Tensor[(5, 12, 4), float64] {
  @func_9176() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_1715() -> Tensor[(5, 12, 4), float64] {
  %691 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %691.0
}

def @func_9246(%var_9231: Tensor[(5, 16, 3), float32]) -> (Tensor[(5, 16, 3), float32], Tensor[(5, 12, 4), float64], int8) {
  %692 = cast(%var_9231, dtype="float32") /* ty=Tensor[(5, 16, 3), float32] */;
  %693 = cast(meta[relay.Constant][31] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %694 = reshape(%693, newshape=[]) /* ty=int8 */;
  %695 = @func_8412(%694) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(264), float64], Tensor[(33), float64], int8, Tensor[(9, 15, 2), float32], Tensor[(270), float32]) */;
  %696 = acos(%692) /* ty=Tensor[(5, 16, 3), float32] */;
  %697 = %695.1;
  (%696, %697, meta[relay.Constant][31] /* ty=int8 */)
}

def @func_1272() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %698 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %699 = %698.0;
  %700 = @func_1193() /* ty=Tensor[(5, 12, 4), float64] */;
  (%699, %700)
}

def @func_7229() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %701 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %702 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  %703 = %701.2;
  (%702, %703)
}

def @func_11034() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], Tensor[(5, 12, 4), float64]) {
  %704 = @func_4817() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %705 = @func_3962() /* ty=Tensor[(5, 12, 4), float64] */;
  %706 = %704.1;
  %707 = @func_6663() /* ty=Tensor[(15, 15, 6), int8] */;
  %708 = @func_9572() /* ty=Tensor[(5, 12, 4), float64] */;
  (%705, %706, %707, %708)
}

def @func_12757() -> (Tensor[(5, 12, 4), float64],) {
  %709 = @func_12140() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %710 = %709.1;
  (%710,)
}

def @func_13613() -> (Tensor[(5, 12, 4), float64],) {
  %711 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  (%711,)
}

def @func_6817(%var_6812: Tensor[(1152), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], int8, Tensor[(1350), int8], Tensor[(1152), float32]) {
  %712 = @func_1304() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %713 = cast(meta[relay.Constant][32] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %714 = cast(meta[relay.Constant][33] /* ty=Tensor[(1350), int8] */, dtype="int8") /* ty=Tensor[(1350), int8] */;
  %715 = cast(%var_6812, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %716 = reshape(%713, newshape=[]) /* ty=int8 */;
  %717 = reshape(%714, newshape=[15, 15, 6]) /* ty=Tensor[(15, 15, 6), int8] */;
  %718 = reshape(%715, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %719 = @func_2204(%716, %717, %718) /* ty=(Tensor[(15, 15, 6), int8], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), uint64], Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) */;
  %720 = %712.0;
  %721 = %719.0;
  (%720, %721, meta[relay.Constant][32] /* ty=int8 */, meta[relay.Constant][33] /* ty=Tensor[(1350), int8] */, %var_6812)
}

def @func_13842(%var_13831: Tensor[(28, 120), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], Tensor[(28, 120), float32], Tensor[(3360), float32]) {
  %722 = @func_2681() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %723 = @func_12562() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %724 = cast(%var_13831, dtype="float32") /* ty=Tensor[(28, 120), float32] */;
  %725 = reshape(%724, newshape=[3360]) /* ty=Tensor[(3360), float32] */;
  %726 = @func_2275(%725) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) */;
  %727 = @func_7109() /* ty=(Tensor[(9, 14, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(9, 14, 4), bool], Tensor[(3360), float32]) */;
  %728 = %722.0;
  %729 = %723.0;
  %730 = @func_3962() /* ty=Tensor[(5, 12, 4), float64] */;
  %731 = %726.1;
  %732 = %727.3;
  (%728, %729, %730, %731, %var_13831, %732)
}

def @func_5144() -> (int8, Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) {
  %733 = @func_3258() /* ty=(int8,) */;
  %734 = cast(meta[relay.Constant][34] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %735 = reshape(%734, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %736 = @func_3418(%735) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %737 = %733.0;
  %738 = %736.1;
  (%737, %738, meta[relay.Constant][34] /* ty=Tensor[(1152), float32] */)
}

def @func_10100() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) {
  %739 = @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */;
  %740 = @func_3169() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) */;
  %741 = %739.2;
  %742 = %740.1;
  (%741, %742)
}

def @func_1807(%var_1749: Tensor[(8, 12, 12), float32]) -> (Tensor[(8, 12, 12), float32], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %743 = cast(%var_1749, dtype="float32") /* ty=Tensor[(8, 12, 12), float32] */;
  %744 = @func_1524() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %745 = %744.0;
  %746 = @func_1304() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %747 = %746.1;
  %748 = cast(%747, dtype="bool") /* ty=Tensor[(5, 12, 4), bool] */;
  %749 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%745, dtype="bool") /* ty=Tensor[(5, 12, 4), bool] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %752 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %753 = @func_1272() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %754 = exp(%743) /* ty=Tensor[(8, 12, 12), float32] */;
  %755 = less_equal(%750, %751) /* ty=Tensor[(5, 12, 4), bool] */;
  %756 = %752.0;
  %757 = %753.0;
  (%754, %755, %756, %757)
}

def @func_12435(%var_12420: Tensor[(2, 28), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 1, 6), float64], Tensor[(30), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(2, 28), float32], Tensor[(5, 12, 4), float64]) {
  %758 = @func_4932() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %759 = cast(meta[relay.Constant][35] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %760 = reshape(%759, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), float64] */;
  %761 = cast(%var_12420, dtype="int32") /* ty=Tensor[(2, 28), int32] */;
  %762 = reshape(%761, newshape=[56]) /* ty=Tensor[(56), int32] */;
  %763 = @func_7382(%762) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(9, 15, 2), float32], Tensor[(270), float32], Tensor[(5, 12, 4), float64], Tensor[(56), int32]) */;
  %764 = @func_2389() /* ty=(Tensor[(4, 10, 2), float64], Tensor[(15, 15, 6), int8], int8) */;
  %765 = cast(%var_12420, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %766 = %758.1;
  %767 = @func_4245(%760) /* ty=Tensor[(5, 1, 6), float64] */;
  %768 = %763.0;
  %769 = %764.2;
  %770 = log10(%765) /* ty=Tensor[(2, 28), float32] */;
  %771 = @func_11870() /* ty=Tensor[(5, 12, 4), float64] */;
  (%766, %767, meta[relay.Constant][35] /* ty=Tensor[(30), float64] */, %768, %769, %770, %771)
}

def @func_4550(%var_4540: float32) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360, 1), float32]) {
  %772 = @func_4116() /* ty=Tensor[(5, 12, 4), float64] */;
  %773 = cast(%772, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %774 = cast(%var_4540, dtype="float32") /* ty=float32 */;
  %775 = cast(meta[relay.Constant][36] /* ty=Tensor[(3360, 1), float32] */, dtype="float32") /* ty=Tensor[(3360, 1), float32] */;
  %776 = reshape(%774, newshape=[]) /* ty=float32 */;
  %777 = reshape(%775, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float32] */;
  %778 = @func_176(%776, %777) /* ty=(Tensor[(14, 15, 16), bool],) */;
  %779 = exp(%773) /* ty=Tensor[(5, 12, 4), float64] */;
  %780 = @func_3962() /* ty=Tensor[(5, 12, 4), float64] */;
  %781 = %778.0;
  (%779, %780, %781, %var_4540, meta[relay.Constant][36] /* ty=Tensor[(3360, 1), float32] */)
}

def @func_7959() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %782 = @func_2460() /* ty=Tensor[(5, 12, 4), float64] */;
  %783 = @func_7673() /* ty=Tensor[(5, 12, 4), float64] */;
  (%782, %783)
}

def @func_5208() -> (Tensor[(5, 12, 4), float64],) {
  %784 = @func_2544() /* ty=Tensor[(5, 12, 4), float64] */;
  (%784,)
}

def @func_9572() -> Tensor[(5, 12, 4), float64] {
  %785 = @func_2324() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %785.0
}

def @func_9176() -> Tensor[(5, 12, 4), float64] {
  @func_2544() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_13486() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %786 = @func_5208() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %787 = @func_4328() /* ty=(int8, Tensor[(5, 12, 4), float64]) */;
  %788 = %786.0;
  %789 = %787.1;
  (%788, %789)
}

def @func_4378() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %790 = @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */;
  %791 = @func_3004() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %792 = %790.2;
  %793 = %791.0;
  (%792, %793)
}

def @func_11622() -> (Tensor[(6, 13, 8), bool],) {
  %794 = @func_10477() /* ty=(Tensor[(6, 13, 8), bool],) */;
  %795 = %794.0;
  (%795,)
}

def @func_10854(%var_10850: Tensor[(33), float64], %var_10851: Tensor[(3, 88), float64], %var_10852: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(3, 88), float64], int8) {
  %796 = @func_5144() /* ty=(int8, Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) */;
  %797 = cast(%var_10850, dtype="float64") /* ty=Tensor[(33), float64] */;
  %798 = cast(%var_10851, dtype="float64") /* ty=Tensor[(3, 88), float64] */;
  %799 = cast(%var_10852, dtype="int8") /* ty=int8 */;
  %800 = reshape(%797, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %801 = reshape(%798, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
  %802 = reshape(%799, newshape=[]) /* ty=int8 */;
  %803 = @func_2907(%800, %801, %802) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(11, 3, 8), uint8]) */;
  %804 = @func_10586() /* ty=Tensor[(5, 12, 4), float64] */;
  %805 = %796.2;
  %806 = %803.4;
  (%804, %805, %806, %var_10850, %var_10851, %var_10852)
}

def @func_12002() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int64]) {
  %807 = @func_6993() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %808 = cast(meta[relay.Constant][37] /* ty=Tensor[(56), int64] */, dtype="int64") /* ty=Tensor[(56), int64] */;
  %809 = reshape(%808, newshape=[2, 28]) /* ty=Tensor[(2, 28), int64] */;
  %810 = @func_7467(%809) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(2, 28), float32], Tensor[(2, 28), uint64], Tensor[(5, 12, 4), float64], Tensor[(2, 28), uint16], Tensor[(2, 28), uint8]) */;
  %811 = @func_10481() /* ty=Tensor[(5, 12, 4), float64] */;
  %812 = %807.0;
  %813 = %810.4;
  (%811, %812, %813, meta[relay.Constant][37] /* ty=Tensor[(56), int64] */)
}

def @func_13388() -> (Tensor[(5, 12, 4), bool],) {
  %814 = @func_6242() /* ty=(Tensor[(5, 12, 4), bool], int8) */;
  %815 = %814.0;
  (%815,)
}

def @func_9558(%var_9451: Tensor[(624, 1), int16], %var_9508: Tensor[(624, 7), int16], %var_9554: Tensor[(624, 7), int16]) -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(624, 7), bool], Tensor[(624, 7), int8]) {
  %816 = cast(%var_9451, dtype="int16") /* ty=Tensor[(624, 1), int16] */;
  %817 = reshape(%816, newshape=[6, 13, 8]) /* ty=Tensor[(6, 13, 8), int16] */;
  %818 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %819 = @func_5341() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8]) */;
  %820 = cast(%var_9508, dtype="float64") /* ty=Tensor[(624, 7), float64] */;
  %821 = cosh(%820) /* ty=Tensor[(624, 7), float64] */;
  %822 = cast(%var_9451, dtype="float32") /* ty=Tensor[(624, 1), float32] */;
  %823 = sqrt(%822) /* ty=Tensor[(624, 1), float32] */;
  %824 = cast(%var_9451, dtype="uint32") /* ty=Tensor[(624, 1), uint32] */;
  %825 = cast(%var_9508, dtype="uint32") /* ty=Tensor[(624, 7), uint32] */;
  %826 = bitwise_or(%824, %825) /* ty=Tensor[(624, 7), uint32] */;
  %827 = cast(%823, dtype="int8") /* ty=Tensor[(624, 1), int8] */;
  %828 = cast(%826, dtype="int8") /* ty=Tensor[(624, 7), int8] */;
  %829 = add(%827, %828) /* ty=Tensor[(624, 7), int8] */;
  %830 = cast(%829, dtype="bool") /* ty=Tensor[(624, 7), bool] */;
  %831 = shape_of(%821, dtype="int32") /* ty=Tensor[(2), int32] */;
  %832 = cast(%821, dtype="bool") /* ty=Tensor[(624, 7), bool] */;
  %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %834 = cast(%var_9554, dtype="int8") /* ty=Tensor[(624, 7), int8] */;
  %835 = shape_of(%var_9508, dtype="int32") /* ty=Tensor[(2), int32] */;
  %836 = cast(%var_9508, dtype="int8") /* ty=Tensor[(624, 7), int8] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %838 = @func_3962() /* ty=Tensor[(5, 12, 4), float64] */;
  %839 = @func_4998(%817) /* ty=Tensor[(6, 13, 8), bool] */;
  %840 = %818.0;
  %841 = %819.0;
  %842 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  %843 = logical_and(%832, %833) /* ty=Tensor[(624, 7), bool] */;
  %844 = bitwise_and(%836, %837) /* ty=Tensor[(624, 7), int8] */;
  (%838, %839, %840, %841, %842, %843, %844)
}

def @func_5854(%var_5836: Tensor[(3, 7, 1), int32], %var_5837: Tensor[(3, 7, 13), int32], %var_5849: Tensor[(3, 7, 4), int32]) -> (Tensor[(3, 7, 13), int32], Tensor[(3, 7, 4), bool]) {
  %845 = cast(%var_5836, dtype="int32") /* ty=Tensor[(3, 7, 1), int32] */;
  %846 = cast(%var_5837, dtype="int32") /* ty=Tensor[(3, 7, 13), int32] */;
  %847 = cast(%var_5836, dtype="bool") /* ty=Tensor[(3, 7, 1), bool] */;
  %848 = cast(%var_5849, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %849 = left_shift(%845, %846) /* ty=Tensor[(3, 7, 13), int32] */;
  %850 = not_equal(%847, %848) /* ty=Tensor[(3, 7, 4), bool] */;
  (%849, %850)
}

def @func_1078() -> Tensor[(5, 12, 4), float64] {
  @func_871() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_8081() -> (Tensor[(5, 12, 4), float64],) {
  %851 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %852 = %851.0;
  (%852,)
}

def @func_12083(%var_12066: int8) -> (Tensor[(6, 13, 8), int16], int8, Tensor[(264), float64], int8, Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), float32], Tensor[(?, 56), int8], Tensor[(21), int32], Tensor[(273, 1), int32]) {
  %853 = @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */;
  %854 = cast(meta[relay.Constant][38] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %855 = cast(%var_12066, dtype="int8") /* ty=int8 */;
  %856 = reshape(%854, newshape=[6, 44]) /* ty=Tensor[(6, 44), float64] */;
  %857 = reshape(%855, newshape=[]) /* ty=int8 */;
  %858 = @func_3654(%856, %857) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(6, 44), float64], int8) */;
  %859 = @func_8081() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %860 = @func_8999() /* ty=(Tensor[(6, 13, 8), float32],) */;
  %861 = %859.0;
  %862 = cast(%861, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %863 = cast(meta[relay.Constant][39] /* ty=Tensor[(21), int32] */, dtype="int32") /* ty=Tensor[(21), int32] */;
  %864 = cast(meta[relay.Constant][40] /* ty=Tensor[(273, 1), int32] */, dtype="int32") /* ty=Tensor[(273, 1), int32] */;
  %865 = reshape(%862, newshape=[5, 12, 4]) /* ty=Tensor[(5, 12, 4), float64] */;
  %866 = reshape(%863, newshape=[21]) /* ty=Tensor[(21), int32] */;
  %867 = reshape(%864, newshape=[273]) /* ty=Tensor[(273), int32] */;
  %868 = @func_6550(%865, %866, %867) /* ty=(Tensor[(5, 12, 4), uint8], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(21), int32], Tensor[(42, 2), int32], Tensor[(?, 56), int8], Tensor[(56), int32], Tensor[(273), bool]) */;
  %869 = %853.1;
  %870 = %858.4;
  %871 = %860.0;
  %872 = %868.5;
  (%869, %870, meta[relay.Constant][38] /* ty=Tensor[(264), float64] */, %var_12066, %861, %871, %872, meta[relay.Constant][39] /* ty=Tensor[(21), int32] */, meta[relay.Constant][40] /* ty=Tensor[(273, 1), int32] */)
}

def @func_3825(%var_3810: Tensor[(5, 12, 4), int16]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float32], Tensor[(5, 12, 4), float64]) {
  %873 = @func_2948() /* ty=Tensor[(5, 12, 4), float64] */;
  %874 = cast(%873, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %875 = reshape(%874, newshape=[5, 12, 4]) /* ty=Tensor[(5, 12, 4), float64] */;
  %876 = @func_2150(%875) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(2, 28), int32], Tensor[(5, 12, 4), int16], Tensor[(5, 12, 4), float64]) */;
  %877 = %876.2;
  %878 = cast(%var_3810, dtype="float32") /* ty=Tensor[(5, 12, 4), float32] */;
  %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(%877, dtype="float32") /* ty=Tensor[(5, 12, 4), float32] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %882 = @func_1078() /* ty=Tensor[(5, 12, 4), float64] */;
  %883 = floor_mod(%880, %881) /* ty=Tensor[(5, 12, 4), float32] */;
  %884 = @func_2460() /* ty=Tensor[(5, 12, 4), float64] */;
  (%873, %882, %883, %884)
}

def @func_2570() -> Tensor[(5, 12, 4), float64] {
  %885 = @func_1856() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(3360), float32], float32) */;
  %885.0
}

def @func_11759() -> Tensor[(6, 13, 8), int16] {
  @func_9656() /* ty=Tensor[(6, 13, 8), int16] */
}

def @func_6993() -> (Tensor[(5, 12, 4), float64],) {
  %886 = @func_5801() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(624), int16]) */;
  %887 = %886.0;
  (%887,)
}

def @func_13156(%var_13148: Tensor[(624), int8]) -> (Tensor[(5, 12, 4), float64], Tensor[(16, 3, 13), int8], Tensor[(624), int8], Tensor[(288), float64], Tensor[(6, 30), int64]) {
  %888 = @func_5208() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %889 = cast(%var_13148, dtype="int8") /* ty=Tensor[(624), int8] */;
  %890 = reshape(%889, newshape=[16, 3, 13]) /* ty=Tensor[(16, 3, 13), int8] */;
  %891 = @func_11718(%890) /* ty=(Tensor[(16, 3, 13), int8], Tensor[(6, 13, 8), bool]) */;
  %892 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 30), int64] */, dtype="int64") /* ty=Tensor[(6, 30), int64] */;
  %893 = reshape(%892, newshape=[4, 15, 3]) /* ty=Tensor[(4, 15, 3), int64] */;
  %894 = @func_10776(%893) /* ty=(Tensor[(4, 15, 3), int64], Tensor[(5, 12, 4), float64], Tensor[(72, 4), float64], Tensor[(288), float64]) */;
  %895 = %888.0;
  %896 = %891.0;
  %897 = %894.3;
  (%895, %896, %var_13148, %897, meta[relay.Constant][41] /* ty=Tensor[(6, 30), int64] */)
}

def @func_8412(%var_8388: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(264), float64], Tensor[(33), float64], int8, Tensor[(9, 15, 2), float32], Tensor[(270), float32]) {
  %898 = @func_7959() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %899 = cast(meta[relay.Constant][42] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %900 = cast(%var_8388, dtype="int8") /* ty=int8 */;
  %901 = reshape(%899, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %902 = reshape(%900, newshape=[]) /* ty=int8 */;
  %903 = @func_4188(%901, %902) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(264), float64], int8) */;
  %904 = cast(meta[relay.Constant][43] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %905 = reshape(%904, newshape=[9, 15, 2]) /* ty=Tensor[(9, 15, 2), float32] */;
  %906 = %898.1;
  %907 = @func_7285() /* ty=Tensor[(5, 12, 4), float64] */;
  %908 = %903.4;
  %909 = @func_6913(%905) /* ty=Tensor[(9, 15, 2), float32] */;
  (%906, %907, %908, meta[relay.Constant][42] /* ty=Tensor[(33), float64] */, %var_8388, %909, meta[relay.Constant][43] /* ty=Tensor[(270), float32] */)
}

def @func_4817() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %910 = @func_2681() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %911 = @func_1715() /* ty=Tensor[(5, 12, 4), float64] */;
  %912 = %910.0;
  %913 = @func_4764() /* ty=Tensor[(5, 12, 4), float64] */;
  (%911, %912, %913)
}

def @func_2460() -> Tensor[(5, 12, 4), float64] {
  %914 = @func_1570() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %914.1
}

def @func_3242() -> (Tensor[(8, 14, 6), float32], Tensor[(1, 14, 4), int32], Tensor[(1, 56), int32]) {
  %915 = cast(meta[relay.Constant][44] /* ty=Tensor[(8, 14, 6), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 6), float32] */;
  %916 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 56), int32] */, dtype="int32") /* ty=Tensor[(1, 56), int32] */;
  %917 = reshape(%916, newshape=[1, 14, 4]) /* ty=Tensor[(1, 14, 4), int32] */;
  %918 = sigmoid(%915) /* ty=Tensor[(8, 14, 6), float32] */;
  %919 = @func_1129(%917) /* ty=Tensor[(1, 14, 4), int32] */;
  (%918, %919, meta[relay.Constant][45] /* ty=Tensor[(1, 56), int32] */)
}

def @func_1856() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(3360), float32], float32) {
  %920 = cast(7.06467f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %921 = reshape(%920, newshape=[]) /* ty=float32 */;
  %922 = @func_684(%921) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) */;
  %923 = @func_1715() /* ty=Tensor[(5, 12, 4), float64] */;
  %924 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  %925 = %922.3;
  (%923, %924, %925, 7.06467f /* ty=float32 */)
}

def @func_1193() -> Tensor[(5, 12, 4), float64] {
  %926 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  %927 = cast(%926, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  sin(%927) /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_10477() -> (Tensor[(6, 13, 8), bool],) {
  %928 = @func_5801() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(624), int16]) */;
  %929 = %928.1;
  (%929,)
}

def @func_2557() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %930 = @func_1452() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) */;
  %931 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %932 = %930.0;
  %933 = %931.0;
  (%932, %933)
}

def @func_8462(%var_8454: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], int8, int8, Tensor[(6, 13, 8), bool], Tensor[(8, 78), int16]) {
  %934 = @func_5144() /* ty=(int8, Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) */;
  %935 = cast(%var_8454, dtype="int8") /* ty=int8 */;
  %936 = reshape(%935, newshape=[]) /* ty=int8 */;
  %937 = @func_8412(%936) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(264), float64], Tensor[(33), float64], int8, Tensor[(9, 15, 2), float32], Tensor[(270), float32]) */;
  %938 = cast(meta[relay.Constant][46] /* ty=Tensor[(8, 78), int16] */, dtype="int16") /* ty=Tensor[(8, 78), int16] */;
  %939 = reshape(%938, newshape=[6, 13, 8]) /* ty=Tensor[(6, 13, 8), int16] */;
  %940 = @func_1193() /* ty=Tensor[(5, 12, 4), float64] */;
  %941 = %934.1;
  %942 = @func_3040() /* ty=Tensor[(5, 12, 4), float64] */;
  %943 = %937.4;
  %944 = @func_4998(%939) /* ty=Tensor[(6, 13, 8), bool] */;
  (%940, %941, %942, %943, %var_8454, %944, meta[relay.Constant][46] /* ty=Tensor[(8, 78), int16] */)
}

def @func_7467(%var_7457: Tensor[(2, 28), int64]) -> (Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(2, 28), float32], Tensor[(2, 28), uint64], Tensor[(5, 12, 4), float64], Tensor[(2, 28), uint16], Tensor[(2, 28), uint8]) {
  %945 = cast(meta[relay.Constant][47] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %946 = reshape(%945, newshape=[8, 12, 12]) /* ty=Tensor[(8, 12, 12), float32] */;
  %947 = @func_1807(%946) /* ty=(Tensor[(8, 12, 12), float32], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %948 = @func_4671() /* ty=(Tensor[(2, 28), int32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float32]) */;
  %949 = %948.0;
  %950 = cast(%949, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %951 = erf(%950) /* ty=Tensor[(2, 28), float32] */;
  %952 = cast(%951, dtype="uint64") /* ty=Tensor[(2, 28), uint64] */;
  %953 = shape_of(%949, dtype="int32") /* ty=Tensor[(2), int32] */;
  %954 = cast(%949, dtype="uint64") /* ty=Tensor[(2, 28), uint64] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %956 = add(%954, %955) /* ty=Tensor[(2, 28), uint64] */;
  %957 = cast(%956, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %958 = shape_of(%949, dtype="int32") /* ty=Tensor[(2), int32] */;
  %959 = cast(%949, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %961 = floor_mod(%959, %960) /* ty=Tensor[(2, 28), float64] */;
  %962 = cast(%949, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %963 = shape_of(%961, dtype="int32") /* ty=Tensor[(2), int32] */;
  %964 = cast(%961, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %966 = cast(%961, dtype="uint64") /* ty=Tensor[(2, 28), uint64] */;
  %967 = shape_of(%956, dtype="int32") /* ty=Tensor[(2), int32] */;
  %968 = cast(%956, dtype="uint64") /* ty=Tensor[(2, 28), uint64] */;
  %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %970 = @func_1304() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %971 = cast(%951, dtype="int64") /* ty=Tensor[(2, 28), int64] */;
  %972 = shape_of(%956, dtype="int32") /* ty=Tensor[(2), int32] */;
  %973 = cast(%956, dtype="int64") /* ty=Tensor[(2, 28), int64] */;
  %974 = dyn.reshape(%971, %972, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %975 = bitwise_xor(%973, %974) /* ty=Tensor[(2, 28), int64] */;
  %976 = cast(%var_7457, dtype="uint16") /* ty=Tensor[(2, 28), uint16] */;
  %977 = shape_of(%975, dtype="int32") /* ty=Tensor[(2), int32] */;
  %978 = cast(%975, dtype="uint16") /* ty=Tensor[(2, 28), uint16] */;
  %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %980 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 28), uint64] */, dtype="uint8") /* ty=Tensor[(2, 28), uint8] */;
  %981 = shape_of(%956, dtype="int32") /* ty=Tensor[(2), int32] */;
  %982 = cast(%956, dtype="uint8") /* ty=Tensor[(2, 28), uint8] */;
  %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %984 = %947.2;
  %985 = divide(%964, %965) /* ty=Tensor[(2, 28), float32] */;
  %986 = right_shift(%968, %969) /* ty=Tensor[(2, 28), uint64] */;
  %987 = %970.0;
  %988 = subtract(%978, %979) /* ty=Tensor[(2, 28), uint16] */;
  %989 = maximum(%982, %983) /* ty=Tensor[(2, 28), uint8] */;
  (%984, meta[relay.Constant][47] /* ty=Tensor[(1152), float32] */, %985, %986, %987, %988, %989)
}

def @func_3758() -> (Tensor[(5, 12, 4), float64],) {
  %990 = @func_3707() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) */;
  %991 = %990.1;
  (%991,)
}

def @func_13003() -> (Tensor[(5, 12, 4), float64], Tensor[(264), float64]) {
  %992 = @func_6616() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(33, 1), float64], Tensor[(264), float64], int8) */;
  %993 = @func_1372() /* ty=Tensor[(5, 12, 4), float64] */;
  %994 = %992.3;
  (%993, %994)
}

def @func_646() -> (Tensor[(5, 12, 4), float64],) {
  %995 = cast(meta[relay.Constant][49] /* ty=Tensor[(5, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %996 = sqrt(%995) /* ty=Tensor[(5, 12, 4), float64] */;
  (%996,)
}

def @func_2948() -> Tensor[(5, 12, 4), float64] {
  @func_1193() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_13922(%var_13915: Tensor[(6, 1, 13), float64]) -> Tensor[(6, 1, 13), float64] {
  %997 = cast(%var_13915, dtype="float64") /* ty=Tensor[(6, 1, 13), float64] */;
  asinh(%997) /* ty=Tensor[(6, 1, 13), float64] */
}

def @func_684(%var_676: float32) -> (Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) {
  %998 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %999 = cast(%var_676, dtype="float32") /* ty=float32 */;
  %1000 = cast(meta[relay.Constant][50] /* ty=Tensor[(3360), float32] */, dtype="float32") /* ty=Tensor[(3360), float32] */;
  %1001 = reshape(%999, newshape=[]) /* ty=float32 */;
  %1002 = reshape(%1000, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float32] */;
  %1003 = @func_176(%1001, %1002) /* ty=(Tensor[(14, 15, 16), bool],) */;
  %1004 = %998.0;
  %1005 = %1003.0;
  (%1004, %1005, %var_676, meta[relay.Constant][50] /* ty=Tensor[(3360), float32] */)
}

def @func_8822() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %1006 = @func_4614() /* ty=Tensor[(5, 12, 4), float64] */;
  %1007 = @func_2948() /* ty=Tensor[(5, 12, 4), float64] */;
  (%1006, %1007)
}

def @func_4764() -> Tensor[(5, 12, 4), float64] {
  @func_2460() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_10068(%var_10035: Tensor[(2, 5, 12), float32]) -> (Tensor[(2, 5, 12), bool], Tensor[(9, 15, 2), float32], Tensor[(270), float32], Tensor[(5, 12, 4), float64], float32, Tensor[(5, 12, 4), float64], Tensor[(56), int32]) {
  %1008 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 5, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 5, 12), float32] */;
  %1009 = shape_of(%var_10035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1010 = cast(%var_10035, dtype="float32") /* ty=Tensor[(2, 5, 12), float32] */;
  %1011 = dyn.reshape(%1008, %1009, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1012 = divide(%1010, %1011) /* ty=Tensor[(2, 5, 12), float32] */;
  %1013 = cast(%1012, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %1014 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(2, 5, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1015 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 5, 12), float32] */, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
  %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1017 = cast(meta[relay.Constant][52] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %1018 = reshape(%1017, newshape=[9, 15, 2]) /* ty=Tensor[(9, 15, 2), float32] */;
  %1019 = cast(-5.2473f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1020 = reshape(%1019, newshape=[]) /* ty=float32 */;
  %1021 = @func_4550(%1020) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360, 1), float32]) */;
  %1022 = cast(meta[relay.Constant][53] /* ty=Tensor[(56), int32] */, dtype="int32") /* ty=Tensor[(56), int32] */;
  %1023 = reshape(%1022, newshape=[56]) /* ty=Tensor[(56), int32] */;
  %1024 = @func_3528(%1023) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) */;
  %1025 = less(%1015, %1016) /* ty=Tensor[(2, 5, 12), bool] */;
  %1026 = @func_6913(%1018) /* ty=Tensor[(9, 15, 2), float32] */;
  %1027 = %1021.0;
  %1028 = %1024.6;
  (%1025, %1026, meta[relay.Constant][52] /* ty=Tensor[(270), float32] */, %1027, -5.2473f /* ty=float32 */, %1028, meta[relay.Constant][53] /* ty=Tensor[(56), int32] */)
}

def @func_6550(%var_6483: Tensor[(5, 12, 4), float64], %var_6522: Tensor[(21), int32], %var_6523: Tensor[(273), int32]) -> (Tensor[(5, 12, 4), uint8], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(21), int32], Tensor[(42, 2), int32], Tensor[(?, 56), int8], Tensor[(56), int32], Tensor[(273), bool]) {
  %1029 = @func_4451() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1030 = %1029.0;
  %1031 = cast(%var_6483, dtype="uint8") /* ty=Tensor[(5, 12, 4), uint8] */;
  %1032 = shape_of(%1030, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1033 = cast(%1030, dtype="uint8") /* ty=Tensor[(5, 12, 4), uint8] */;
  %1034 = dyn.reshape(%1031, %1032, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1035 = @func_3758() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1036 = @func_1272() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1037 = cast(meta[relay.Constant][55] /* ty=Tensor[(56), int32] */, dtype="int32") /* ty=Tensor[(56), int32] */;
  %1038 = reshape(%1037, newshape=[1, 56]) /* ty=Tensor[(1, 56), int32] */;
  %1039 = cast(%var_6522, dtype="int32") /* ty=Tensor[(21), int32] */;
  %1040 = cast(%var_6523, dtype="int32") /* ty=Tensor[(273), int32] */;
  %1041 = cast(meta[relay.Constant][54] /* ty=Tensor[(42, 2), int32] */, dtype="int32") /* ty=Tensor[(42, 2), int32] */;
  %1042 = reshape(%1039, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), int32] */;
  %1043 = reshape(%1040, newshape=[3, 7, 13]) /* ty=Tensor[(3, 7, 13), int32] */;
  %1044 = reshape(%1041, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), int32] */;
  %1045 = @func_5854(%1042, %1043, %1044) /* ty=(Tensor[(3, 7, 13), int32], Tensor[(3, 7, 4), bool]) */;
  %1046 = %1045.0;
  %1047 = cast(%1046, dtype="bool") /* ty=Tensor[(3, 7, 13), bool] */;
  %1048 = shape_of(%var_6523, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1049 = cast(%var_6523, dtype="bool") /* ty=Tensor[(273), bool] */;
  %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1051 = left_shift(%1033, %1034) /* ty=Tensor[(5, 12, 4), uint8] */;
  %1052 = %1035.0;
  %1053 = %1036.0;
  %1054 = @func_4885(%1038) /* ty=Tensor[(?, 56), int8] */;
  %1055 = less(%1049, %1050) /* ty=Tensor[(273), bool] */;
  (%1051, %1052, %1053, %var_6522, meta[relay.Constant][54] /* ty=Tensor[(42, 2), int32] */, %1054, meta[relay.Constant][55] /* ty=Tensor[(56), int32] */, %1055)
}

def @func_8033() -> Tensor[(5, 12, 4), float64] {
  @func_1078() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_13197() -> Tensor[(5, 12, 4), float64] {
  %1056 = @func_8869() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1056.1
}

def @func_10614(%var_10592: Tensor[(13, 3, 6), float64], %var_10600: Tensor[(240), float32]) -> (Tensor[(13, 3, 6), float64], int8, Tensor[(240), float32], Tensor[(5, 12, 4), float64]) {
  %1057 = cast(%var_10592, dtype="float64") /* ty=Tensor[(13, 3, 6), float64] */;
  %1058 = cast(%var_10600, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1059 = reshape(%1058, newshape=[5, 16, 3]) /* ty=Tensor[(5, 16, 3), float32] */;
  %1060 = @func_9246(%1059) /* ty=(Tensor[(5, 16, 3), float32], Tensor[(5, 12, 4), float64], int8) */;
  %1061 = @func_3326() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1062 = sigmoid(%1057) /* ty=Tensor[(13, 3, 6), float64] */;
  %1063 = %1060.2;
  %1064 = %1061.1;
  (%1062, %1063, %var_10600, %1064)
}

def @main(%var_13974: Tensor[(3, 14, 14), float64], %var_13979: Tensor[(3, 14, 14), float64]) -> (Tensor[(3, 14, 14), bool],) {
  %1065 = cast(%var_13974, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
  %1066 = atan(%1065) /* ty=Tensor[(3, 14, 14), float64] */;
  %1067 = cast(%var_13979, dtype="int16") /* ty=Tensor[(3, 14, 14), int16] */;
  %1068 = shape_of(%var_13974, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1069 = cast(%var_13974, dtype="int16") /* ty=Tensor[(3, 14, 14), int16] */;
  %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1071 = right_shift(%1069, %1070) /* ty=Tensor[(3, 14, 14), int16] */;
  %1072 = cast(%1071, dtype="bool") /* ty=Tensor[(3, 14, 14), bool] */;
  %1073 = shape_of(%1066, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1074 = cast(%1066, dtype="bool") /* ty=Tensor[(3, 14, 14), bool] */;
  %1075 = dyn.reshape(%1072, %1073, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1076 = equal(%1074, %1075) /* ty=Tensor[(3, 14, 14), bool] */;
  (%1076,)
}

def @func_6913(%var_6910: Tensor[(9, 15, 2), float32]) -> Tensor[(9, 15, 2), float32] {
  %1077 = cast(%var_6910, dtype="float32") /* ty=Tensor[(9, 15, 2), float32] */;
  acos(%1077) /* ty=Tensor[(9, 15, 2), float32] */
}

def @func_3962() -> Tensor[(5, 12, 4), float64] {
  @func_2948() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_12601() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %1078 = @func_9645() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1079 = @func_1943() /* ty=Tensor[(5, 12, 4), float64] */;
  %1080 = %1078.0;
  (%1079, %1080)
}

def @func_10659() -> (Tensor[(5, 12, 4), float64],) {
  %1081 = @func_3004() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1082 = %1081.0;
  (%1082,)
}

def @func_2204(%var_2177: int8, %var_2178: Tensor[(15, 15, 6), int8], %var_2194: Tensor[(1152), float32]) -> (Tensor[(15, 15, 6), int8], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), uint64], Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) {
  %1083 = cast(%var_2177, dtype="int8") /* ty=int8 */;
  %1084 = cast(%var_2178, dtype="int8") /* ty=Tensor[(15, 15, 6), int8] */;
  %1085 = cast(%var_2178, dtype="uint64") /* ty=Tensor[(15, 15, 6), uint64] */;
  %1086 = cast(%var_2177, dtype="uint64") /* ty=uint64 */;
  %1087 = cast(%var_2194, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %1088 = reshape(%1087, newshape=[8, 12, 12]) /* ty=Tensor[(8, 12, 12), float32] */;
  %1089 = @func_1807(%1088) /* ty=(Tensor[(8, 12, 12), float32], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1090 = left_shift(%1083, %1084) /* ty=Tensor[(15, 15, 6), int8] */;
  %1091 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  %1092 = add(%1085, %1086) /* ty=Tensor[(15, 15, 6), uint64] */;
  %1093 = %1089.3;
  %1094 = @func_2047() /* ty=Tensor[(5, 12, 4), float64] */;
  (%1090, %1091, %1092, %1093, %var_2194, %1094)
}

def @func_13571() -> (Tensor[(5, 12, 4), uint16], Tensor[(5, 12, 4), float64]) {
  %1095 = @func_3169() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) */;
  %1096 = @func_8869() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1097 = %1095.1;
  %1098 = %1096.1;
  (%1097, %1098)
}

def @func_2544() -> Tensor[(5, 12, 4), float64] {
  %1099 = @func_1272() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1099.1
}

def @func_12445() -> Tensor[(5, 12, 4), float64] {
  %1100 = @func_3758() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1100.0
}

def @func_4451() -> (Tensor[(5, 12, 4), float64],) {
  %1101 = @func_3040() /* ty=Tensor[(5, 12, 4), float64] */;
  (%1101,)
}

def @func_12668(%var_12635: Tensor[(12, 364), int16]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(624), int16], Tensor[(12, 364), int16]) {
  %1102 = @func_11819() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1103 = cast(meta[relay.Constant][56] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %1104 = cast(%var_12635, dtype="int16") /* ty=Tensor[(12, 364), int16] */;
  %1105 = cast(%var_12635, dtype="int16") /* ty=Tensor[(12, 364), int16] */;
  %1106 = reshape(%1103, newshape=[624, 1]) /* ty=Tensor[(624, 1), int16] */;
  %1107 = reshape(%1104, newshape=[624, 7]) /* ty=Tensor[(624, 7), int16] */;
  %1108 = reshape(%1105, newshape=[624, 7]) /* ty=Tensor[(624, 7), int16] */;
  %1109 = @func_9558(%1106, %1107, %1108) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(624, 7), bool], Tensor[(624, 7), int8]) */;
  %1110 = @func_9572() /* ty=Tensor[(5, 12, 4), float64] */;
  %1111 = %1102.0;
  %1112 = %1109.2;
  (%1110, %1111, %1112, meta[relay.Constant][56] /* ty=Tensor[(624), int16] */, %var_12635)
}

def @func_10776(%var_10732: Tensor[(4, 15, 3), int64]) -> (Tensor[(4, 15, 3), int64], Tensor[(5, 12, 4), float64], Tensor[(72, 4), float64], Tensor[(288), float64]) {
  %1113 = cast(%var_10732, dtype="int64") /* ty=Tensor[(4, 15, 3), int64] */;
  %1114 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(4, 15, 3), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1115 = cast(meta[relay.Constant][57] /* ty=Tensor[(4, 15, 3), int64] */, dtype="int64") /* ty=Tensor[(4, 15, 3), int64] */;
  %1116 = dyn.reshape(%1113, %1114, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1117 = cast(meta[relay.Constant][58] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1118 = reshape(%1117, newshape=[72, 4]) /* ty=Tensor[(72, 4), float64] */;
  %1119 = @func_9777(%1118) /* ty=(int8, Tensor[(12, 8, 3), float32], Tensor[(72, 4), float64]) */;
  %1120 = minimum(%1115, %1116) /* ty=Tensor[(4, 15, 3), int64] */;
  %1121 = @func_2544() /* ty=Tensor[(5, 12, 4), float64] */;
  %1122 = %1119.2;
  (%1120, %1121, %1122, meta[relay.Constant][58] /* ty=Tensor[(288), float64] */)
}

def @func_8191() -> Tensor[(5, 12, 4), float64] {
  @func_2948() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_176(%var_166: float32, %var_167: Tensor[(14, 15, 16), float32]) -> (Tensor[(14, 15, 16), bool],) {
  %1123 = cast(%var_166, dtype="bool") /* ty=bool */;
  %1124 = cast(%var_167, dtype="bool") /* ty=Tensor[(14, 15, 16), bool] */;
  %1125 = greater_equal(%1123, %1124) /* ty=Tensor[(14, 15, 16), bool] */;
  (%1125,)
}

def @func_4245(%var_4239: Tensor[(5, 1, 6), float64]) -> Tensor[(5, 1, 6), float64] {
  %1126 = cast(%var_4239, dtype="float64") /* ty=Tensor[(5, 1, 6), float64] */;
  acos(%1126) /* ty=Tensor[(5, 1, 6), float64] */
}

def @func_2759() -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) {
  %1127 = @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */;
  %1128 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  %1129 = %1127.2;
  %1130 = @func_1943() /* ty=Tensor[(5, 12, 4), float64] */;
  (%1128, %1129, %1130)
}

def @func_10305() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %1131 = @func_4378() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1132 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1133 = %1131.1;
  %1134 = %1132.0;
  (%1133, %1134)
}

def @func_13253() -> (Tensor[(8, 14, 6), float64],) {
  %1135 = @func_3242() /* ty=(Tensor[(8, 14, 6), float32], Tensor[(1, 14, 4), int32], Tensor[(1, 56), int32]) */;
  %1136 = %1135.0;
  %1137 = cast(%1136, dtype="float64") /* ty=Tensor[(8, 14, 6), float64] */;
  %1138 = exp(%1137) /* ty=Tensor[(8, 14, 6), float64] */;
  (%1138,)
}

def @func_4588(%var_4581: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32]) {
  %1139 = @func_4378() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1140 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1141 = cast(%var_4581, dtype="int32") /* ty=Tensor[(56), int32] */;
  %1142 = reshape(%1141, newshape=[56]) /* ty=Tensor[(56), int32] */;
  %1143 = @func_3528(%1142) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) */;
  %1144 = %1139.0;
  %1145 = %1140.0;
  %1146 = %1143.1;
  (%1144, %1145, %1146, %var_4581)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12951() -> Tensor[(5, 12, 4), float64] {
  %0 = @func_2324() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %0.0
}

def @func_11602(%var_11600: int8, %var_11601: Tensor[(7, 13, 7), int8]) -> (Tensor[(7, 13, 7), uint8], Tensor[(5, 12, 4), float64], Tensor[(7, 13, 7), float64], Tensor[(5, 12, 4), float64]) {
  %14 = fn (%var_11515: int8, %var_11516: Tensor[(7, 13, 7), int8]) -> (Tensor[(7, 13, 7), uint8], Tensor[(5, 12, 4), float64], Tensor[(7, 13, 7), float64], Tensor[(5, 12, 4), float64]) {
    %1 = cast(%var_11515, dtype="uint8") /* ty=uint8 */;
    %2 = cast(%var_11516, dtype="uint8") /* ty=Tensor[(7, 13, 7), uint8] */;
    %3 = cast(%var_11515, dtype="bool") /* ty=bool */;
    %4 = cast(%var_11516, dtype="bool") /* ty=Tensor[(7, 13, 7), bool] */;
    %5 = equal(%3, %4) /* ty=Tensor[(7, 13, 7), bool] */;
    %6 = cast(%5, dtype="float64") /* ty=Tensor[(7, 13, 7), float64] */;
    %7 = tan(%6) /* ty=Tensor[(7, 13, 7), float64] */;
    %8 = cast(%7, dtype="float64") /* ty=Tensor[(7, 13, 7), float64] */;
    %9 = @func_11133() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %10 = maximum(%1, %2) /* ty=Tensor[(7, 13, 7), uint8] */;
    %11 = @func_1078() /* ty=Tensor[(5, 12, 4), float64] */;
    %12 = acos(%8) /* ty=Tensor[(7, 13, 7), float64] */;
    %13 = %9.0;
    (%10, %11, %12, %13)
  };
  %14(%var_11600, %var_11601) /* ty=(Tensor[(7, 13, 7), uint8], Tensor[(5, 12, 4), float64], Tensor[(7, 13, 7), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_872() -> Tensor[(5, 12, 4), float64] {
  %16 = fn () -> Tensor[(5, 12, 4), float64] {
    %15 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %15.0
  };
  %16() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_4932() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %17 = @func_3962() /* ty=Tensor[(5, 12, 4), float64] */;
  %18 = @func_1943() /* ty=Tensor[(5, 12, 4), float64] */;
  (%17, %18)
}

def @func_8081() -> (Tensor[(5, 12, 4), float64],) {
  %19 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %20 = %19.0;
  (%20,)
}

def @func_8299() -> (Tensor[(5, 12, 4), float64],) {
  @func_8297() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_11720(%var_11719: Tensor[(16, 3, 13), int8]) -> (Tensor[(16, 3, 13), int8], Tensor[(6, 13, 8), bool]) {
  %28 = fn (%var_11694: Tensor[(16, 3, 13), int8]) -> (Tensor[(16, 3, 13), int8], Tensor[(6, 13, 8), bool]) {
    %21 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 3, 13), int8] */, dtype="int8") /* ty=Tensor[(16, 3, 13), int8] */;
    %22 = shape_of(%var_11694, dtype="int32") /* ty=Tensor[(3), int32] */;
    %23 = cast(%var_11694, dtype="int8") /* ty=Tensor[(16, 3, 13), int8] */;
    %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %25 = @func_5801() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(624), int16]) */;
    %26 = maximum(%23, %24) /* ty=Tensor[(16, 3, 13), int8] */;
    %27 = %25.1;
    (%26, %27)
  };
  %28(%var_11719) /* ty=(Tensor[(16, 3, 13), int8], Tensor[(6, 13, 8), bool]) */
}

def @func_5146() -> (int8, Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) {
  @func_5144() /* ty=(int8, Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) */
}

def @func_13738() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(21), int32], Tensor[(273), int32]) {
  %42 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(21), int32], Tensor[(273), int32]) {
    %29 = @func_9430() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %30 = @func_5726() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %31 = %29.3;
    %32 = cast(%31, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
    %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(21), int32] */, dtype="int32") /* ty=Tensor[(21), int32] */;
    %34 = cast(meta[relay.Constant][2] /* ty=Tensor[(273), int32] */, dtype="int32") /* ty=Tensor[(273), int32] */;
    %35 = reshape(%32, newshape=[5, 12, 4]) /* ty=Tensor[(5, 12, 4), float64] */;
    %36 = reshape(%33, newshape=[21]) /* ty=Tensor[(21), int32] */;
    %37 = reshape(%34, newshape=[273]) /* ty=Tensor[(273), int32] */;
    %38 = @func_6550(%35, %36, %37) /* ty=(Tensor[(5, 12, 4), uint8], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(21), int32], Tensor[(42, 2), int32], Tensor[(?, 56), int8], Tensor[(56), int32], Tensor[(273), bool]) */;
    %39 = @func_10810() /* ty=Tensor[(5, 12, 4), float64] */;
    %40 = %30.0;
    %41 = %38.2;
    (%39, %31, %40, %41, meta[relay.Constant][1] /* ty=Tensor[(21), int32] */, meta[relay.Constant][2] /* ty=Tensor[(273), int32] */)
  };
  %42() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(21), int32], Tensor[(273), int32]) */
}

def @func_1372() -> Tensor[(5, 12, 4), float64] {
  @func_871() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_3962() -> Tensor[(5, 12, 4), float64] {
  @func_2948() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_12083(%var_12066: int8) -> (Tensor[(6, 13, 8), int16], int8, Tensor[(264), float64], int8, Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), float32], Tensor[(?, 56), int8], Tensor[(21), int32], Tensor[(273, 1), int32]) {
  %43 = @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */;
  %44 = cast(meta[relay.Constant][3] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %45 = cast(%var_12066, dtype="int8") /* ty=int8 */;
  %46 = reshape(%44, newshape=[6, 44]) /* ty=Tensor[(6, 44), float64] */;
  %47 = reshape(%45, newshape=[]) /* ty=int8 */;
  %48 = @func_3654(%46, %47) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(6, 44), float64], int8) */;
  %49 = @func_8081() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %50 = @func_8999() /* ty=(Tensor[(6, 13, 8), float32],) */;
  %51 = %49.0;
  %52 = cast(%51, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %53 = cast(meta[relay.Constant][4] /* ty=Tensor[(21), int32] */, dtype="int32") /* ty=Tensor[(21), int32] */;
  %54 = cast(meta[relay.Constant][5] /* ty=Tensor[(273, 1), int32] */, dtype="int32") /* ty=Tensor[(273, 1), int32] */;
  %55 = reshape(%52, newshape=[5, 12, 4]) /* ty=Tensor[(5, 12, 4), float64] */;
  %56 = reshape(%53, newshape=[21]) /* ty=Tensor[(21), int32] */;
  %57 = reshape(%54, newshape=[273]) /* ty=Tensor[(273), int32] */;
  %58 = @func_6550(%55, %56, %57) /* ty=(Tensor[(5, 12, 4), uint8], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(21), int32], Tensor[(42, 2), int32], Tensor[(?, 56), int8], Tensor[(56), int32], Tensor[(273), bool]) */;
  %59 = %43.1;
  %60 = %48.4;
  %61 = %50.0;
  %62 = %58.5;
  (%59, %60, meta[relay.Constant][3] /* ty=Tensor[(264), float64] */, %var_12066, %51, %61, %62, meta[relay.Constant][4] /* ty=Tensor[(21), int32] */, meta[relay.Constant][5] /* ty=Tensor[(273, 1), int32] */)
}

def @func_9604() -> int8 {
  @func_9602() /* ty=int8 */
}

def @func_10021() -> (Tensor[(6, 13, 8), uint16], Tensor[(6, 13, 8), float32], Tensor[(5, 1, 6), float64], Tensor[(30), float64]) {
  %77 = fn () -> (Tensor[(6, 13, 8), uint16], Tensor[(6, 13, 8), float32], Tensor[(5, 1, 6), float64], Tensor[(30), float64]) {
    %63 = @func_5801() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(624), int16]) */;
    %64 = %63.1;
    %65 = cast(%64, dtype="float32") /* ty=Tensor[(6, 13, 8), float32] */;
    %66 = tan(%65) /* ty=Tensor[(6, 13, 8), float32] */;
    %67 = cast(%66, dtype="uint16") /* ty=Tensor[(6, 13, 8), uint16] */;
    %68 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
    %69 = cast(%64, dtype="uint16") /* ty=Tensor[(6, 13, 8), uint16] */;
    %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %71 = cast(%66, dtype="float32") /* ty=Tensor[(6, 13, 8), float32] */;
    %72 = cast(meta[relay.Constant][6] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %73 = reshape(%72, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), float64] */;
    %74 = logical_xor(%69, %70) /* ty=Tensor[(6, 13, 8), uint16] */;
    %75 = cosh(%71) /* ty=Tensor[(6, 13, 8), float32] */;
    %76 = @func_4245(%73) /* ty=Tensor[(5, 1, 6), float64] */;
    (%74, %75, %76, meta[relay.Constant][6] /* ty=Tensor[(30), float64] */)
  };
  %77() /* ty=(Tensor[(6, 13, 8), uint16], Tensor[(6, 13, 8), float32], Tensor[(5, 1, 6), float64], Tensor[(30), float64]) */
}

def @func_2204(%var_2177: int8, %var_2178: Tensor[(15, 15, 6), int8], %var_2194: Tensor[(1152), float32]) -> (Tensor[(15, 15, 6), int8], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), uint64], Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) {
  %78 = cast(%var_2177, dtype="int8") /* ty=int8 */;
  %79 = cast(%var_2178, dtype="int8") /* ty=Tensor[(15, 15, 6), int8] */;
  %80 = cast(%var_2178, dtype="uint64") /* ty=Tensor[(15, 15, 6), uint64] */;
  %81 = cast(%var_2177, dtype="uint64") /* ty=uint64 */;
  %82 = cast(%var_2194, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %83 = reshape(%82, newshape=[8, 12, 12]) /* ty=Tensor[(8, 12, 12), float32] */;
  %84 = @func_1807(%83) /* ty=(Tensor[(8, 12, 12), float32], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %85 = left_shift(%78, %79) /* ty=Tensor[(15, 15, 6), int8] */;
  %86 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  %87 = add(%80, %81) /* ty=Tensor[(15, 15, 6), uint64] */;
  %88 = %84.3;
  %89 = @func_2047() /* ty=Tensor[(5, 12, 4), float64] */;
  (%85, %86, %87, %88, %var_2194, %89)
}

def @func_7230() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %93 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %90 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %91 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
    %92 = %90.2;
    (%91, %92)
  };
  %93() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_1132(%var_1130: Tensor[(1, 14, 4), int32]) -> Tensor[(1, 14, 4), int32] {
  @func_1129(%var_1130) /* ty=Tensor[(1, 14, 4), int32] */
}

def @func_646() -> (Tensor[(5, 12, 4), float64],) {
  %94 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %95 = sqrt(%94) /* ty=Tensor[(5, 12, 4), float64] */;
  (%95,)
}

def @func_4026() -> float32 {
  @func_4024() /* ty=float32 */
}

def @func_11035() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], Tensor[(5, 12, 4), float64]) {
  %101 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], Tensor[(5, 12, 4), float64]) {
    %96 = @func_4817() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %97 = @func_3962() /* ty=Tensor[(5, 12, 4), float64] */;
    %98 = %96.1;
    %99 = @func_6663() /* ty=Tensor[(15, 15, 6), int8] */;
    %100 = @func_9572() /* ty=Tensor[(5, 12, 4), float64] */;
    (%97, %98, %99, %100)
  };
  %101() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], Tensor[(5, 12, 4), float64]) */
}

def @func_3538() -> Tensor[(5, 12, 4), float64] {
  %103 = fn () -> Tensor[(5, 12, 4), float64] {
    %102 = @func_3004() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %102.0
  };
  %103() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_2759() -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) {
  %104 = @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */;
  %105 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  %106 = %104.2;
  %107 = @func_1943() /* ty=Tensor[(5, 12, 4), float64] */;
  (%105, %106, %107)
}

def @func_9246(%var_9231: Tensor[(5, 16, 3), float32]) -> (Tensor[(5, 16, 3), float32], Tensor[(5, 12, 4), float64], int8) {
  %108 = cast(%var_9231, dtype="float32") /* ty=Tensor[(5, 16, 3), float32] */;
  %109 = cast(meta[relay.Constant][8] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %110 = reshape(%109, newshape=[]) /* ty=int8 */;
  %111 = @func_8412(%110) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(264), float64], Tensor[(33), float64], int8, Tensor[(9, 15, 2), float32], Tensor[(270), float32]) */;
  %112 = acos(%108) /* ty=Tensor[(5, 16, 3), float32] */;
  %113 = %111.1;
  (%112, %113, meta[relay.Constant][8] /* ty=int8 */)
}

def @func_6243() -> (Tensor[(5, 12, 4), bool], int8) {
  %118 = fn () -> (Tensor[(5, 12, 4), bool], int8) {
    %114 = @func_5144() /* ty=(int8, Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) */;
    %115 = @func_2389() /* ty=(Tensor[(4, 10, 2), float64], Tensor[(15, 15, 6), int8], int8) */;
    %116 = %114.1;
    %117 = %115.2;
    (%116, %117)
  };
  %118() /* ty=(Tensor[(5, 12, 4), bool], int8) */
}

def @func_13003() -> (Tensor[(5, 12, 4), float64], Tensor[(264), float64]) {
  %119 = @func_6616() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(33, 1), float64], Tensor[(264), float64], int8) */;
  %120 = @func_1372() /* ty=Tensor[(5, 12, 4), float64] */;
  %121 = %119.3;
  (%120, %121)
}

def @func_3531(%var_3529: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) {
  @func_3528(%var_3529) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) */
}

def @func_6554(%var_6551: Tensor[(5, 12, 4), float64], %var_6552: Tensor[(21), int32], %var_6553: Tensor[(273), int32]) -> (Tensor[(5, 12, 4), uint8], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(21), int32], Tensor[(42, 2), int32], Tensor[(?, 56), int8], Tensor[(56), int32], Tensor[(273), bool]) {
  %149 = fn (%var_6483: Tensor[(5, 12, 4), float64], %var_6522: Tensor[(21), int32], %var_6523: Tensor[(273), int32]) -> (Tensor[(5, 12, 4), uint8], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(21), int32], Tensor[(42, 2), int32], Tensor[(?, 56), int8], Tensor[(56), int32], Tensor[(273), bool]) {
    %122 = @func_4451() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %123 = %122.0;
    %124 = cast(%var_6483, dtype="uint8") /* ty=Tensor[(5, 12, 4), uint8] */;
    %125 = shape_of(%123, dtype="int32") /* ty=Tensor[(3), int32] */;
    %126 = cast(%123, dtype="uint8") /* ty=Tensor[(5, 12, 4), uint8] */;
    %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %128 = @func_3758() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %129 = @func_1272() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %130 = cast(meta[relay.Constant][10] /* ty=Tensor[(56), int32] */, dtype="int32") /* ty=Tensor[(56), int32] */;
    %131 = reshape(%130, newshape=[1, 56]) /* ty=Tensor[(1, 56), int32] */;
    %132 = cast(%var_6522, dtype="int32") /* ty=Tensor[(21), int32] */;
    %133 = cast(%var_6523, dtype="int32") /* ty=Tensor[(273), int32] */;
    %134 = cast(meta[relay.Constant][9] /* ty=Tensor[(42, 2), int32] */, dtype="int32") /* ty=Tensor[(42, 2), int32] */;
    %135 = reshape(%132, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), int32] */;
    %136 = reshape(%133, newshape=[3, 7, 13]) /* ty=Tensor[(3, 7, 13), int32] */;
    %137 = reshape(%134, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), int32] */;
    %138 = @func_5854(%135, %136, %137) /* ty=(Tensor[(3, 7, 13), int32], Tensor[(3, 7, 4), bool]) */;
    %139 = %138.0;
    %140 = cast(%139, dtype="bool") /* ty=Tensor[(3, 7, 13), bool] */;
    %141 = shape_of(%var_6523, dtype="int32") /* ty=Tensor[(1), int32] */;
    %142 = cast(%var_6523, dtype="bool") /* ty=Tensor[(273), bool] */;
    %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?), bool] */;
    %144 = left_shift(%126, %127) /* ty=Tensor[(5, 12, 4), uint8] */;
    %145 = %128.0;
    %146 = %129.0;
    %147 = @func_4885(%131) /* ty=Tensor[(?, 56), int8] */;
    %148 = less(%142, %143) /* ty=Tensor[(273), bool] */;
    (%144, %145, %146, %var_6522, meta[relay.Constant][9] /* ty=Tensor[(42, 2), int32] */, %147, meta[relay.Constant][10] /* ty=Tensor[(56), int32] */, %148)
  };
  %149(%var_6551, %var_6552, %var_6553) /* ty=(Tensor[(5, 12, 4), uint8], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(21), int32], Tensor[(42, 2), int32], Tensor[(?, 56), int8], Tensor[(56), int32], Tensor[(273), bool]) */
}

def @func_10811() -> Tensor[(5, 12, 4), float64] {
  %150 = fn () -> Tensor[(5, 12, 4), float64] {
    @func_9176() /* ty=Tensor[(5, 12, 4), float64] */
  };
  %150() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_13454() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool]) {
  %156 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool]) {
    %151 = @func_9176() /* ty=Tensor[(5, 12, 4), float64] */;
    %152 = cast(%151, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
    %153 = reshape(%152, newshape=[5, 12, 4]) /* ty=Tensor[(5, 12, 4), float64] */;
    %154 = @func_3586(%153) /* ty=(Tensor[(5, 12, 4), bool],) */;
    %155 = %154.0;
    (%151, %155)
  };
  %156() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool]) */
}

def @func_1195() -> Tensor[(5, 12, 4), float64] {
  @func_1193() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_1717() -> Tensor[(5, 12, 4), float64] {
  @func_1715() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_4245(%var_4239: Tensor[(5, 1, 6), float64]) -> Tensor[(5, 1, 6), float64] {
  %157 = cast(%var_4239, dtype="float64") /* ty=Tensor[(5, 1, 6), float64] */;
  acos(%157) /* ty=Tensor[(5, 1, 6), float64] */
}

def @func_861() -> (Tensor[(5, 12, 4), float64],) {
  %158 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %159 = %158.0;
  (%159,)
}

def @func_1921(%var_1914: Tensor[(5, 12, 4), float64]) -> Tensor[(5, 12, 4), bool] {
  %160 = @func_1524() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %161 = %160.0;
  %162 = cast(%var_1914, dtype="bool") /* ty=Tensor[(5, 12, 4), bool] */;
  %163 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(%161, dtype="bool") /* ty=Tensor[(5, 12, 4), bool] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%164, %165) /* ty=Tensor[(5, 12, 4), bool] */
}

def @func_8464(%var_8463: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], int8, int8, Tensor[(6, 13, 8), bool], Tensor[(8, 78), int16]) {
  %177 = fn (%var_8454: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], int8, int8, Tensor[(6, 13, 8), bool], Tensor[(8, 78), int16]) {
    %166 = @func_5144() /* ty=(int8, Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) */;
    %167 = cast(%var_8454, dtype="int8") /* ty=int8 */;
    %168 = reshape(%167, newshape=[]) /* ty=int8 */;
    %169 = @func_8412(%168) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(264), float64], Tensor[(33), float64], int8, Tensor[(9, 15, 2), float32], Tensor[(270), float32]) */;
    %170 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 78), int16] */, dtype="int16") /* ty=Tensor[(8, 78), int16] */;
    %171 = reshape(%170, newshape=[6, 13, 8]) /* ty=Tensor[(6, 13, 8), int16] */;
    %172 = @func_1193() /* ty=Tensor[(5, 12, 4), float64] */;
    %173 = %166.1;
    %174 = @func_3040() /* ty=Tensor[(5, 12, 4), float64] */;
    %175 = %169.4;
    %176 = @func_4998(%171) /* ty=Tensor[(6, 13, 8), bool] */;
    (%172, %173, %174, %175, %var_8454, %176, meta[relay.Constant][11] /* ty=Tensor[(8, 78), int16] */)
  };
  %177(%var_8463) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], int8, int8, Tensor[(6, 13, 8), bool], Tensor[(8, 78), int16]) */
}

def @func_2209(%var_2206: int8, %var_2207: Tensor[(15, 15, 6), int8], %var_2208: Tensor[(1152), float32]) -> (Tensor[(15, 15, 6), int8], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), uint64], Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) {
  @func_2204(%var_2206, %var_2207, %var_2208) /* ty=(Tensor[(15, 15, 6), int8], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), uint64], Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) */
}

def @func_9810() -> Tensor[(1, 14, 4), int32] {
  %178 = @func_3242() /* ty=(Tensor[(8, 14, 6), float32], Tensor[(1, 14, 4), int32], Tensor[(1, 56), int32]) */;
  %178.1
}

def @func_4379() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %183 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %179 = @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */;
    %180 = @func_3004() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %181 = %179.2;
    %182 = %180.0;
    (%181, %182)
  };
  %183() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_12602() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %187 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %184 = @func_9645() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %185 = @func_1943() /* ty=Tensor[(5, 12, 4), float64] */;
    %186 = %184.0;
    (%185, %186)
  };
  %187() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_13197() -> Tensor[(5, 12, 4), float64] {
  %188 = @func_8869() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %188.1
}

def @func_4287() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %189 = @func_3970() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %190 = %189.0;
  %191 = @func_2570() /* ty=Tensor[(5, 12, 4), float64] */;
  (%190, %191)
}

def @func_3418(%var_3387: Tensor[(1152), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %192 = cast(%var_3387, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %193 = reshape(%192, newshape=[8, 12, 12]) /* ty=Tensor[(8, 12, 12), float32] */;
  %194 = @func_1807(%193) /* ty=(Tensor[(8, 12, 12), float32], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %195 = @func_2460() /* ty=Tensor[(5, 12, 4), float64] */;
  %196 = %194.1;
  %197 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  %198 = @func_2948() /* ty=Tensor[(5, 12, 4), float64] */;
  (%195, %196, %var_3387, %197, %198)
}

def @func_6913(%var_6910: Tensor[(9, 15, 2), float32]) -> Tensor[(9, 15, 2), float32] {
  %199 = cast(%var_6910, dtype="float32") /* ty=Tensor[(9, 15, 2), float32] */;
  acos(%199) /* ty=Tensor[(9, 15, 2), float32] */
}

def @func_13389() -> (Tensor[(5, 12, 4), bool],) {
  %202 = fn () -> (Tensor[(5, 12, 4), bool],) {
    %200 = @func_6242() /* ty=(Tensor[(5, 12, 4), bool], int8) */;
    %201 = %200.0;
    (%201,)
  };
  %202() /* ty=(Tensor[(5, 12, 4), bool],) */
}

def @func_12670(%var_12669: Tensor[(12, 364), int16]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(624), int16], Tensor[(12, 364), int16]) {
  %214 = fn (%var_12635: Tensor[(12, 364), int16]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(624), int16], Tensor[(12, 364), int16]) {
    %203 = @func_11819() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %204 = cast(meta[relay.Constant][12] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
    %205 = cast(%var_12635, dtype="int16") /* ty=Tensor[(12, 364), int16] */;
    %206 = cast(%var_12635, dtype="int16") /* ty=Tensor[(12, 364), int16] */;
    %207 = reshape(%204, newshape=[624, 1]) /* ty=Tensor[(624, 1), int16] */;
    %208 = reshape(%205, newshape=[624, 7]) /* ty=Tensor[(624, 7), int16] */;
    %209 = reshape(%206, newshape=[624, 7]) /* ty=Tensor[(624, 7), int16] */;
    %210 = @func_9558(%207, %208, %209) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(624, 7), bool], Tensor[(624, 7), int8]) */;
    %211 = @func_9572() /* ty=Tensor[(5, 12, 4), float64] */;
    %212 = %203.0;
    %213 = %210.2;
    (%211, %212, %213, meta[relay.Constant][12] /* ty=Tensor[(624), int16] */, %var_12635)
  };
  %214(%var_12669) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(624), int16], Tensor[(12, 364), int16]) */
}

def @func_12110() -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16]) {
  @func_12108() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16]) */
}

def @func_13924(%var_13923: Tensor[(6, 1, 13), float64]) -> Tensor[(6, 1, 13), float64] {
  %216 = fn (%var_13915: Tensor[(6, 1, 13), float64]) -> Tensor[(6, 1, 13), float64] {
    %215 = cast(%var_13915, dtype="float64") /* ty=Tensor[(6, 1, 13), float64] */;
    asinh(%215) /* ty=Tensor[(6, 1, 13), float64] */
  };
  %216(%var_13923) /* ty=Tensor[(6, 1, 13), float64] */
}

def @func_13332() -> (Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], Tensor[(1152), float32]) {
  %217 = @func_7959() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %218 = cast(meta[relay.Constant][13] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %219 = reshape(%218, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %220 = @func_6817(%219) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], int8, Tensor[(1350), int8], Tensor[(1152), float32]) */;
  %221 = %217.0;
  %222 = %220.1;
  (%221, %222, meta[relay.Constant][13] /* ty=Tensor[(1152), float32] */)
}

def @func_3528(%var_3512: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) {
  %223 = @func_1452() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) */;
  %224 = cast(%var_3512, dtype="int32") /* ty=Tensor[(56), int32] */;
  %225 = reshape(%224, newshape=[56]) /* ty=Tensor[(56), int32] */;
  %226 = @func_1333(%225) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) */;
  %227 = cast(meta[relay.Constant][14] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %228 = reshape(%227, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %229 = @func_3418(%228) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %230 = @func_2324() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %231 = @func_3040() /* ty=Tensor[(5, 12, 4), float64] */;
  %232 = %223.0;
  %233 = %226.0;
  %234 = %229.1;
  %235 = %230.0;
  (%231, %232, %233, %var_3512, %234, meta[relay.Constant][14] /* ty=Tensor[(1152), float32] */, %235)
}

def @func_12713() -> Tensor[(5, 12, 4), float64] {
  %236 = fn () -> Tensor[(5, 12, 4), float64] {
    @func_7285() /* ty=Tensor[(5, 12, 4), float64] */
  };
  %236() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_4817() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %237 = @func_2681() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %238 = @func_1715() /* ty=Tensor[(5, 12, 4), float64] */;
  %239 = %237.0;
  %240 = @func_4764() /* ty=Tensor[(5, 12, 4), float64] */;
  (%238, %239, %240)
}

def @func_10776(%var_10732: Tensor[(4, 15, 3), int64]) -> (Tensor[(4, 15, 3), int64], Tensor[(5, 12, 4), float64], Tensor[(72, 4), float64], Tensor[(288), float64]) {
  %241 = cast(%var_10732, dtype="int64") /* ty=Tensor[(4, 15, 3), int64] */;
  %242 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(4, 15, 3), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 15, 3), int64] */, dtype="int64") /* ty=Tensor[(4, 15, 3), int64] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %245 = cast(meta[relay.Constant][16] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %246 = reshape(%245, newshape=[72, 4]) /* ty=Tensor[(72, 4), float64] */;
  %247 = @func_9777(%246) /* ty=(int8, Tensor[(12, 8, 3), float32], Tensor[(72, 4), float64]) */;
  %248 = minimum(%243, %244) /* ty=Tensor[(4, 15, 3), int64] */;
  %249 = @func_2544() /* ty=Tensor[(5, 12, 4), float64] */;
  %250 = %247.2;
  (%248, %249, %250, meta[relay.Constant][16] /* ty=Tensor[(288), float64] */)
}

def @func_10234() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  @func_10232() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_11190(%var_11189: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(33), float64], int8, Tensor[(5, 12, 4), float64]) {
  %258 = fn (%var_11179: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(33), float64], int8, Tensor[(5, 12, 4), float64]) {
    %251 = @func_5635() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %252 = cast(%var_11179, dtype="int8") /* ty=int8 */;
    %253 = reshape(%252, newshape=[]) /* ty=int8 */;
    %254 = @func_8412(%253) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(264), float64], Tensor[(33), float64], int8, Tensor[(9, 15, 2), float32], Tensor[(270), float32]) */;
    %255 = %251.0;
    %256 = %254.3;
    %257 = @func_2570() /* ty=Tensor[(5, 12, 4), float64] */;
    (%255, %256, %var_11179, %257)
  };
  %258(%var_11189) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(33), float64], int8, Tensor[(5, 12, 4), float64]) */
}

def @func_3005() -> (Tensor[(5, 12, 4), float64],) {
  %261 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %259 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %260 = %259.0;
    (%260,)
  };
  %261() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_2390() -> (Tensor[(4, 10, 2), float64], Tensor[(15, 15, 6), int8], int8) {
  %268 = fn () -> (Tensor[(4, 10, 2), float64], Tensor[(15, 15, 6), int8], int8) {
    %262 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(4, 10, 2), float64] */;
    %263 = cast(meta[relay.Constant][18] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %264 = reshape(%263, newshape=[]) /* ty=int8 */;
    %265 = @func_2249(%264) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], int8, Tensor[(1, 1350), int8], Tensor[(1152), float32]) */;
    %266 = exp(%262) /* ty=Tensor[(4, 10, 2), float64] */;
    %267 = %265.2;
    (%266, %267, meta[relay.Constant][18] /* ty=int8 */)
  };
  %268() /* ty=(Tensor[(4, 10, 2), float64], Tensor[(15, 15, 6), int8], int8) */
}

def @func_12575() -> (Tensor[(5, 12, 4), float64],) {
  %269 = @func_3566() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %270 = %269.0;
  (%270,)
}

def @func_12398(%var_12396: Tensor[(1152), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), uint8], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), int32]) {
  @func_12395(%var_12396) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), uint8], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), int32]) */
}

def @func_13798() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %275 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %271 = @func_5208() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %272 = @func_4451() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %273 = %271.0;
    %274 = %272.0;
    (%273, %274)
  };
  %275() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_13352(%var_13351: Tensor[(15, 15, 10), float32]) -> (Tensor[(15, 15, 10), float32], Tensor[(5, 12, 4), float64]) {
  %283 = fn (%var_13337: Tensor[(15, 15, 10), float32]) -> (Tensor[(15, 15, 10), float32], Tensor[(5, 12, 4), float64]) {
    %276 = cast(meta[relay.Constant][19] /* ty=Tensor[(15, 15, 10), float32] */, dtype="float32") /* ty=Tensor[(15, 15, 10), float32] */;
    %277 = shape_of(%var_13337, dtype="int32") /* ty=Tensor[(3), int32] */;
    %278 = cast(%var_13337, dtype="float32") /* ty=Tensor[(15, 15, 10), float32] */;
    %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %280 = @func_7779() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %281 = divide(%278, %279) /* ty=Tensor[(15, 15, 10), float32] */;
    %282 = %280.0;
    (%281, %282)
  };
  %283(%var_13351) /* ty=(Tensor[(15, 15, 10), float32], Tensor[(5, 12, 4), float64]) */
}

def @func_179(%var_177: float32, %var_178: Tensor[(14, 15, 16), float32]) -> (Tensor[(14, 15, 16), bool],) {
  %287 = fn (%var_166: float32, %var_167: Tensor[(14, 15, 16), float32]) -> (Tensor[(14, 15, 16), bool],) {
    %284 = cast(%var_166, dtype="bool") /* ty=bool */;
    %285 = cast(%var_167, dtype="bool") /* ty=Tensor[(14, 15, 16), bool] */;
    %286 = greater_equal(%284, %285) /* ty=Tensor[(14, 15, 16), bool] */;
    (%286,)
  };
  %287(%var_177, %var_178) /* ty=(Tensor[(14, 15, 16), bool],) */
}

def @func_8518() -> (Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(72, 4), bool]) {
  %288 = @func_4378() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %289 = @func_5144() /* ty=(int8, Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) */;
  %290 = cast(meta[relay.Constant][20] /* ty=Tensor[(72, 4), float64] */, dtype="float64") /* ty=Tensor[(72, 4), float64] */;
  %291 = reshape(%290, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %292 = @func_7193(%291) /* ty=(Tensor[(12, 8, 3), float32],) */;
  %293 = %292.0;
  %294 = cast(%293, dtype="bool") /* ty=Tensor[(12, 8, 3), bool] */;
  %295 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(72, 4), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %296 = cast(meta[relay.Constant][20] /* ty=Tensor[(72, 4), float64] */, dtype="bool") /* ty=Tensor[(72, 4), bool] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %298 = %288.0;
  %299 = %289.2;
  %300 = logical_and(%296, %297) /* ty=Tensor[(72, 4), bool] */;
  (%298, %299, %300)
}

def @func_4671() -> (Tensor[(2, 28), int32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float32]) {
  %301 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %302 = %301.0;
  %303 = cast(%302, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %304 = reshape(%303, newshape=[5, 12, 4]) /* ty=Tensor[(5, 12, 4), float64] */;
  %305 = @func_2150(%304) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(2, 28), int32], Tensor[(5, 12, 4), int16], Tensor[(5, 12, 4), float64]) */;
  %306 = cast(%302, dtype="float32") /* ty=Tensor[(5, 12, 4), float32] */;
  %307 = %305.1;
  %308 = @func_4614() /* ty=Tensor[(5, 12, 4), float64] */;
  %309 = sigmoid(%306) /* ty=Tensor[(5, 12, 4), float32] */;
  (%307, %308, %309)
}

def @func_10779(%var_10777: Tensor[(4, 15, 3), int64]) -> (Tensor[(4, 15, 3), int64], Tensor[(5, 12, 4), float64], Tensor[(72, 4), float64], Tensor[(288), float64]) {
  @func_10776(%var_10777) /* ty=(Tensor[(4, 15, 3), int64], Tensor[(5, 12, 4), float64], Tensor[(72, 4), float64], Tensor[(288), float64]) */
}

def @func_12446() -> Tensor[(5, 12, 4), float64] {
  %311 = fn () -> Tensor[(5, 12, 4), float64] {
    %310 = @func_3758() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %310.0
  };
  %311() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_6819(%var_6818: Tensor[(1152), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], int8, Tensor[(1350), int8], Tensor[(1152), float32]) {
  %322 = fn (%var_6812: Tensor[(1152), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], int8, Tensor[(1350), int8], Tensor[(1152), float32]) {
    %312 = @func_1304() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %313 = cast(meta[relay.Constant][21] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %314 = cast(meta[relay.Constant][22] /* ty=Tensor[(1350), int8] */, dtype="int8") /* ty=Tensor[(1350), int8] */;
    %315 = cast(%var_6812, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %316 = reshape(%313, newshape=[]) /* ty=int8 */;
    %317 = reshape(%314, newshape=[15, 15, 6]) /* ty=Tensor[(15, 15, 6), int8] */;
    %318 = reshape(%315, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %319 = @func_2204(%316, %317, %318) /* ty=(Tensor[(15, 15, 6), int8], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), uint64], Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) */;
    %320 = %312.0;
    %321 = %319.0;
    (%320, %321, meta[relay.Constant][21] /* ty=int8 */, meta[relay.Constant][22] /* ty=Tensor[(1350), int8] */, %var_6812)
  };
  %322(%var_6818) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], int8, Tensor[(1350), int8], Tensor[(1152), float32]) */
}

def @func_8414(%var_8413: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(264), float64], Tensor[(33), float64], int8, Tensor[(9, 15, 2), float32], Tensor[(270), float32]) {
  %335 = fn (%var_8388: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(264), float64], Tensor[(33), float64], int8, Tensor[(9, 15, 2), float32], Tensor[(270), float32]) {
    %323 = @func_7959() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %324 = cast(meta[relay.Constant][23] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
    %325 = cast(%var_8388, dtype="int8") /* ty=int8 */;
    %326 = reshape(%324, newshape=[33]) /* ty=Tensor[(33), float64] */;
    %327 = reshape(%325, newshape=[]) /* ty=int8 */;
    %328 = @func_4188(%326, %327) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(264), float64], int8) */;
    %329 = cast(meta[relay.Constant][24] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
    %330 = reshape(%329, newshape=[9, 15, 2]) /* ty=Tensor[(9, 15, 2), float32] */;
    %331 = %323.1;
    %332 = @func_7285() /* ty=Tensor[(5, 12, 4), float64] */;
    %333 = %328.4;
    %334 = @func_6913(%330) /* ty=Tensor[(9, 15, 2), float32] */;
    (%331, %332, %333, meta[relay.Constant][23] /* ty=Tensor[(33), float64] */, %var_8388, %334, meta[relay.Constant][24] /* ty=Tensor[(270), float32] */)
  };
  %335(%var_8413) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(264), float64], Tensor[(33), float64], int8, Tensor[(9, 15, 2), float32], Tensor[(270), float32]) */
}

def @func_6880() -> Tensor[(6, 13, 8), int16] {
  @func_4778() /* ty=Tensor[(6, 13, 8), int16] */
}

def @func_2949() -> Tensor[(5, 12, 4), float64] {
  %336 = fn () -> Tensor[(5, 12, 4), float64] {
    @func_1193() /* ty=Tensor[(5, 12, 4), float64] */
  };
  %336() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_648() -> (Tensor[(5, 12, 4), float64],) {
  @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_2572() -> Tensor[(5, 12, 4), float64] {
  @func_2570() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_5854(%var_5836: Tensor[(3, 7, 1), int32], %var_5837: Tensor[(3, 7, 13), int32], %var_5849: Tensor[(3, 7, 4), int32]) -> (Tensor[(3, 7, 13), int32], Tensor[(3, 7, 4), bool]) {
  %337 = cast(%var_5836, dtype="int32") /* ty=Tensor[(3, 7, 1), int32] */;
  %338 = cast(%var_5837, dtype="int32") /* ty=Tensor[(3, 7, 13), int32] */;
  %339 = cast(%var_5836, dtype="bool") /* ty=Tensor[(3, 7, 1), bool] */;
  %340 = cast(%var_5849, dtype="bool") /* ty=Tensor[(3, 7, 4), bool] */;
  %341 = left_shift(%337, %338) /* ty=Tensor[(3, 7, 13), int32] */;
  %342 = not_equal(%339, %340) /* ty=Tensor[(3, 7, 4), bool] */;
  (%341, %342)
}

def @func_8870() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %345 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %343 = @func_1372() /* ty=Tensor[(5, 12, 4), float64] */;
    %344 = @func_8677() /* ty=Tensor[(5, 12, 4), float64] */;
    (%343, %344)
  };
  %345() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_5859(%var_5856: Tensor[(3, 7, 1), int32], %var_5857: Tensor[(3, 7, 13), int32], %var_5858: Tensor[(3, 7, 4), int32]) -> (Tensor[(3, 7, 13), int32], Tensor[(3, 7, 4), bool]) {
  @func_5854(%var_5856, %var_5857, %var_5858) /* ty=(Tensor[(3, 7, 13), int32], Tensor[(3, 7, 4), bool]) */
}

def @func_6271() -> (Tensor[(6, 13, 8), int16],) {
  @func_6269() /* ty=(Tensor[(6, 13, 8), int16],) */
}

def @func_3709() -> (Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) {
  @func_3707() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) */
}

def @func_9249(%var_9247: Tensor[(5, 16, 3), float32]) -> (Tensor[(5, 16, 3), float32], Tensor[(5, 12, 4), float64], int8) {
  @func_9246(%var_9247) /* ty=(Tensor[(5, 16, 3), float32], Tensor[(5, 12, 4), float64], int8) */
}

def @func_7961() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  @func_7959() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_11477() -> Tensor[(5, 12, 4), float64] {
  @func_11475() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_6715() -> (Tensor[(5, 12, 4), float64],) {
  %348 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %346 = @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */;
    %347 = %346.2;
    (%347,)
  };
  %348() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_13306() -> Tensor[(5, 12, 4), float64] {
  %349 = @func_12562() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %349.0
}

def @func_6433() -> Tensor[(5, 12, 4), float64] {
  %350 = @func_4287() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %350.0
}

def @func_11802() -> (Tensor[(5, 12, 4), float64],) {
  %353 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %351 = @func_6349() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %352 = %351.1;
    (%352,)
  };
  %353() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_6350() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %358 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %354 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %355 = @func_1458() /* ty=Tensor[(5, 12, 4), float64] */;
    %356 = %354.0;
    %357 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
    (%355, %356, %357)
  };
  %358() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_2150(%var_2119: Tensor[(5, 12, 4), float64]) -> (Tensor[(5, 12, 4), float64], Tensor[(2, 28), int32], Tensor[(5, 12, 4), int16], Tensor[(5, 12, 4), float64]) {
  %359 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 28), int32] */, dtype="int32") /* ty=Tensor[(2, 28), int32] */;
  %360 = reshape(%359, newshape=[56]) /* ty=Tensor[(56), int32] */;
  %361 = @func_1333(%360) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) */;
  %362 = @func_2047() /* ty=Tensor[(5, 12, 4), float64] */;
  %363 = cast(%var_2119, dtype="int16") /* ty=Tensor[(5, 12, 4), int16] */;
  %364 = shape_of(%362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %365 = cast(%362, dtype="int16") /* ty=Tensor[(5, 12, 4), int16] */;
  %366 = dyn.reshape(%363, %364, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %367 = %361.0;
  %368 = add(%365, %366) /* ty=Tensor[(5, 12, 4), int16] */;
  %369 = @func_1458() /* ty=Tensor[(5, 12, 4), float64] */;
  (%367, meta[relay.Constant][25] /* ty=Tensor[(2, 28), int32] */, %368, %369)
}

def @func_2153(%var_2151: Tensor[(5, 12, 4), float64]) -> (Tensor[(5, 12, 4), float64], Tensor[(2, 28), int32], Tensor[(5, 12, 4), int16], Tensor[(5, 12, 4), float64]) {
  @func_2150(%var_2151) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(2, 28), int32], Tensor[(5, 12, 4), int16], Tensor[(5, 12, 4), float64]) */
}

def @func_3758() -> (Tensor[(5, 12, 4), float64],) {
  %370 = @func_3707() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) */;
  %371 = %370.1;
  (%371,)
}

def @func_4887(%var_4886: Tensor[(1, 56), int32]) -> Tensor[(?, 56), int8] {
  %378 = fn (%var_4875: Tensor[(1, 56), int32]) -> Tensor[(?, 56), int8] {
    %372 = @func_3242() /* ty=(Tensor[(8, 14, 6), float32], Tensor[(1, 14, 4), int32], Tensor[(1, 56), int32]) */;
    %373 = %372.2;
    %374 = cast(%var_4875, dtype="int8") /* ty=Tensor[(1, 56), int8] */;
    %375 = shape_of(%373, dtype="int32") /* ty=Tensor[(2), int32] */;
    %376 = cast(%373, dtype="int8") /* ty=Tensor[(1, 56), int8] */;
    %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    multiply(%376, %377) /* ty=Tensor[(?, 56), int8] */
  };
  %378(%var_4886) /* ty=Tensor[(?, 56), int8] */
}

def @func_1571() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %382 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %379 = @func_1524() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %380 = %379.0;
    %381 = @func_1193() /* ty=Tensor[(5, 12, 4), float64] */;
    (%380, %381)
  };
  %382() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_2462() -> Tensor[(5, 12, 4), float64] {
  @func_2460() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_12206(%var_12205: Tensor[(420, 8), float32]) -> (Tensor[(5, 12, 4), float64], float32, Tensor[(420, 8), float32]) {
  %388 = fn (%var_12189: Tensor[(420, 8), float32]) -> (Tensor[(5, 12, 4), float64], float32, Tensor[(420, 8), float32]) {
    %383 = cast(%var_12189, dtype="float32") /* ty=Tensor[(420, 8), float32] */;
    %384 = reshape(%383, newshape=[3360]) /* ty=Tensor[(3360), float32] */;
    %385 = @func_2275(%384) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) */;
    %386 = @func_8045() /* ty=Tensor[(5, 12, 4), float64] */;
    %387 = %385.2;
    (%386, %387, %var_12189)
  };
  %388(%var_12205) /* ty=(Tensor[(5, 12, 4), float64], float32, Tensor[(420, 8), float32]) */
}

def @func_3327() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %392 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %389 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %390 = %389.0;
    %391 = @func_1458() /* ty=Tensor[(5, 12, 4), float64] */;
    (%390, %391)
  };
  %392() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_1335(%var_1334: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) {
  %397 = fn (%var_1311: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) {
    %393 = cast(%var_1311, dtype="int32") /* ty=Tensor[(56), int32] */;
    %394 = reshape(%393, newshape=[1, 14, 4]) /* ty=Tensor[(1, 14, 4), int32] */;
    %395 = @func_1193() /* ty=Tensor[(5, 12, 4), float64] */;
    %396 = @func_1129(%394) /* ty=Tensor[(1, 14, 4), int32] */;
    (%395, %396, %var_1311)
  };
  %397(%var_1334) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) */
}

def @func_13653() -> Tensor[(6, 13, 8), int16] {
  @func_13651() /* ty=Tensor[(6, 13, 8), int16] */
}

def @func_863() -> (Tensor[(5, 12, 4), float64],) {
  @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_4451() -> (Tensor[(5, 12, 4), float64],) {
  %398 = @func_3040() /* ty=Tensor[(5, 12, 4), float64] */;
  (%398,)
}

def @func_5802() -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(624), int16]) {
  %404 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(624), int16]) {
    %399 = @func_3326() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %400 = cast(meta[relay.Constant][26] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
    %401 = reshape(%400, newshape=[6, 13, 8]) /* ty=Tensor[(6, 13, 8), int16] */;
    %402 = %399.0;
    %403 = @func_4998(%401) /* ty=Tensor[(6, 13, 8), bool] */;
    (%402, %403, meta[relay.Constant][26] /* ty=Tensor[(624), int16] */)
  };
  %404() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(624), int16]) */
}

def @func_12108() -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16]) {
  %405 = @func_7482() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %406 = %405.0;
  %407 = @func_4778() /* ty=Tensor[(6, 13, 8), int16] */;
  (%406, %407)
}

def @func_4117() -> Tensor[(5, 12, 4), float64] {
  %409 = fn () -> Tensor[(5, 12, 4), float64] {
    %408 = @func_1570() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %408.0
  };
  %409() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_5409() -> (Tensor[(5, 12, 4), float64], int8) {
  @func_5407() /* ty=(Tensor[(5, 12, 4), float64], int8) */
}

def @func_3654(%var_3636: Tensor[(6, 44), float64], %var_3637: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(6, 44), float64], int8) {
  %410 = cast(meta[relay.Constant][27] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %411 = cast(%var_3636, dtype="float64") /* ty=Tensor[(6, 44), float64] */;
  %412 = cast(%var_3637, dtype="int8") /* ty=int8 */;
  %413 = reshape(%410, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %414 = reshape(%411, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
  %415 = reshape(%412, newshape=[]) /* ty=int8 */;
  %416 = @func_2907(%413, %414, %415) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(11, 3, 8), uint8]) */;
  %417 = @func_2948() /* ty=Tensor[(5, 12, 4), float64] */;
  %418 = %416.0;
  (%417, %418, meta[relay.Constant][27] /* ty=Tensor[(33), float64] */, %var_3636, %var_3637)
}

def @func_12520(%var_12519: Tensor[(13, 5, 3), float64]) -> Tensor[(13, 5, 3), float32] {
  %430 = fn (%var_12504: Tensor[(13, 5, 3), float64]) -> Tensor[(13, 5, 3), float32] {
    %419 = cast(%var_12504, dtype="uint16") /* ty=Tensor[(13, 5, 3), uint16] */;
    %420 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(13, 5, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %421 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 5, 3), float64] */, dtype="uint16") /* ty=Tensor[(13, 5, 3), uint16] */;
    %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %423 = right_shift(%421, %422) /* ty=Tensor[(13, 5, 3), uint16] */;
    %424 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 5, 3), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 3), float64] */;
    %425 = acosh(%424) /* ty=Tensor[(13, 5, 3), float64] */;
    %426 = cast(%425, dtype="float32") /* ty=Tensor[(13, 5, 3), float32] */;
    %427 = shape_of(%423, dtype="int32") /* ty=Tensor[(3), int32] */;
    %428 = cast(%423, dtype="float32") /* ty=Tensor[(13, 5, 3), float32] */;
    %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%428, %429) /* ty=Tensor[(13, 5, 3), float32] */
  };
  %430(%var_12519) /* ty=Tensor[(13, 5, 3), float32] */
}

def @func_2358() -> (Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) {
  @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */
}

def @func_9114(%var_9112: Tensor[(13, 16, 15), int16], %var_9113: Tensor[(8, 30), float64]) -> (Tensor[(13, 16, 15), int16], Tensor[(5, 12, 4), bool], Tensor[(8, 30), float64], Tensor[(13, 16, 15), float32], Tensor[(5, 12, 4), float64]) {
  %449 = fn (%var_9079: Tensor[(13, 16, 15), int16], %var_9090: Tensor[(8, 30), float64]) -> (Tensor[(13, 16, 15), int16], Tensor[(5, 12, 4), bool], Tensor[(8, 30), float64], Tensor[(13, 16, 15), float32], Tensor[(5, 12, 4), float64]) {
    %431 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 16, 15), int16] */, dtype="int16") /* ty=Tensor[(13, 16, 15), int16] */;
    %432 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(13, 16, 15), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %433 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 16, 15), int16] */, dtype="int16") /* ty=Tensor[(13, 16, 15), int16] */;
    %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %435 = cast(%var_9090, dtype="float64") /* ty=Tensor[(8, 30), float64] */;
    %436 = reshape(%435, newshape=[5, 12, 4]) /* ty=Tensor[(5, 12, 4), float64] */;
    %437 = @func_3586(%436) /* ty=(Tensor[(5, 12, 4), bool],) */;
    %438 = cast(%var_9079, dtype="uint32") /* ty=Tensor[(13, 16, 15), uint32] */;
    %439 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(13, 16, 15), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %440 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 16, 15), int16] */, dtype="uint32") /* ty=Tensor[(13, 16, 15), uint32] */;
    %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %442 = minimum(%440, %441) /* ty=Tensor[(13, 16, 15), uint32] */;
    %443 = cast(%442, dtype="float32") /* ty=Tensor[(13, 16, 15), float32] */;
    %444 = @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */;
    %445 = logical_xor(%433, %434) /* ty=Tensor[(13, 16, 15), int16] */;
    %446 = %437.0;
    %447 = acos(%443) /* ty=Tensor[(13, 16, 15), float32] */;
    %448 = %444.0;
    (%445, %446, %var_9090, %447, %448)
  };
  %449(%var_9112, %var_9113) /* ty=(Tensor[(13, 16, 15), int16], Tensor[(5, 12, 4), bool], Tensor[(8, 30), float64], Tensor[(13, 16, 15), float32], Tensor[(5, 12, 4), float64]) */
}

def @func_6616() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(33, 1), float64], Tensor[(264), float64], int8) {
  %450 = cast(meta[relay.Constant][31] /* ty=Tensor[(33, 1), float64] */, dtype="float64") /* ty=Tensor[(33, 1), float64] */;
  %451 = cast(meta[relay.Constant][32] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %452 = cast(meta[relay.Constant][33] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %453 = reshape(%450, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %454 = reshape(%451, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
  %455 = reshape(%452, newshape=[]) /* ty=int8 */;
  %456 = @func_2907(%453, %454, %455) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(11, 3, 8), uint8]) */;
  %457 = @func_1372() /* ty=Tensor[(5, 12, 4), float64] */;
  %458 = %456.1;
  (%457, %458, meta[relay.Constant][31] /* ty=Tensor[(33, 1), float64] */, meta[relay.Constant][32] /* ty=Tensor[(264), float64] */, meta[relay.Constant][33] /* ty=int8 */)
}

def @func_7601(%var_7600: Tensor[(2, 28), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(2, 28), bool]) {
  %472 = fn (%var_7591: Tensor[(2, 28), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(2, 28), bool]) {
    %459 = @func_5341() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8]) */;
    %460 = @func_1272() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %461 = %460.0;
    %462 = cast(%461, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
    %463 = reshape(%462, newshape=[5, 12, 4]) /* ty=Tensor[(5, 12, 4), float64] */;
    %464 = @func_2150(%463) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(2, 28), int32], Tensor[(5, 12, 4), int16], Tensor[(5, 12, 4), float64]) */;
    %465 = %464.1;
    %466 = cast(%var_7591, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
    %467 = shape_of(%465, dtype="int32") /* ty=Tensor[(2), int32] */;
    %468 = cast(%465, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
    %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %470 = %459.0;
    %471 = less(%468, %469) /* ty=Tensor[(2, 28), bool] */;
    (%470, %461, %471)
  };
  %472(%var_7600) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(2, 28), bool]) */
}

def @func_11475() -> Tensor[(5, 12, 4), float64] {
  @func_871() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_12563() -> (Tensor[(5, 12, 4), float64],) {
  %474 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %473 = @func_10810() /* ty=Tensor[(5, 12, 4), float64] */;
    (%473,)
  };
  %474() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_13158(%var_13157: Tensor[(624), int8]) -> (Tensor[(5, 12, 4), float64], Tensor[(16, 3, 13), int8], Tensor[(624), int8], Tensor[(288), float64], Tensor[(6, 30), int64]) {
  %485 = fn (%var_13148: Tensor[(624), int8]) -> (Tensor[(5, 12, 4), float64], Tensor[(16, 3, 13), int8], Tensor[(624), int8], Tensor[(288), float64], Tensor[(6, 30), int64]) {
    %475 = @func_5208() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %476 = cast(%var_13148, dtype="int8") /* ty=Tensor[(624), int8] */;
    %477 = reshape(%476, newshape=[16, 3, 13]) /* ty=Tensor[(16, 3, 13), int8] */;
    %478 = @func_11718(%477) /* ty=(Tensor[(16, 3, 13), int8], Tensor[(6, 13, 8), bool]) */;
    %479 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 30), int64] */, dtype="int64") /* ty=Tensor[(6, 30), int64] */;
    %480 = reshape(%479, newshape=[4, 15, 3]) /* ty=Tensor[(4, 15, 3), int64] */;
    %481 = @func_10776(%480) /* ty=(Tensor[(4, 15, 3), int64], Tensor[(5, 12, 4), float64], Tensor[(72, 4), float64], Tensor[(288), float64]) */;
    %482 = %475.0;
    %483 = %478.0;
    %484 = %481.3;
    (%482, %483, %var_13148, %484, meta[relay.Constant][34] /* ty=Tensor[(6, 30), int64] */)
  };
  %485(%var_13157) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(16, 3, 13), int8], Tensor[(624), int8], Tensor[(288), float64], Tensor[(6, 30), int64]) */
}

def @func_13487() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %490 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %486 = @func_5208() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %487 = @func_4328() /* ty=(int8, Tensor[(5, 12, 4), float64]) */;
    %488 = %486.0;
    %489 = %487.1;
    (%488, %489)
  };
  %490() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_9913(%var_9845: Tensor[(56), int32], %var_9857: Tensor[(10, 14, 4), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32], Tensor[(10, 14, 4), float64], Tensor[(10, 14, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %491 = @func_6349() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %492 = @func_5407() /* ty=(Tensor[(5, 12, 4), float64], int8) */;
  %493 = cast(%var_9845, dtype="int32") /* ty=Tensor[(56), int32] */;
  %494 = reshape(%493, newshape=[1, 14, 4]) /* ty=Tensor[(1, 14, 4), int32] */;
  %495 = @func_1129(%494) /* ty=Tensor[(1, 14, 4), int32] */;
  %496 = cast(%495, dtype="float64") /* ty=Tensor[(1, 14, 4), float64] */;
  %497 = cast(%var_9857, dtype="float64") /* ty=Tensor[(10, 14, 4), float64] */;
  %498 = cast(%var_9857, dtype="float64") /* ty=Tensor[(10, 14, 4), float64] */;
  %499 = @func_2324() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %500 = @func_8869() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %501 = %491.2;
  %502 = %492.0;
  %503 = minimum(%496, %497) /* ty=Tensor[(10, 14, 4), float64] */;
  %504 = erf(%498) /* ty=Tensor[(10, 14, 4), float64] */;
  %505 = %499.0;
  %506 = %500.0;
  (%501, %502, %var_9845, %503, %504, %505, %506)
}

def @func_6045() -> Tensor[(5, 12, 4), float64] {
  %508 = fn () -> Tensor[(5, 12, 4), float64] {
    %507 = @func_4932() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %507.0
  };
  %508() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_10356(%var_10355: Tensor[(288), float64]) -> (Tensor[(14, 15, 16), bool], Tensor[(8, 12, 12), float32], Tensor[(1152), float32], int8, Tensor[(288), float64]) {
  %519 = fn (%var_10350: Tensor[(288), float64]) -> (Tensor[(14, 15, 16), bool], Tensor[(8, 12, 12), float32], Tensor[(1152), float32], int8, Tensor[(288), float64]) {
    %509 = @func_1452() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) */;
    %510 = cast(meta[relay.Constant][35] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %511 = reshape(%510, newshape=[8, 12, 12]) /* ty=Tensor[(8, 12, 12), float32] */;
    %512 = @func_1807(%511) /* ty=(Tensor[(8, 12, 12), float32], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %513 = cast(%var_10350, dtype="float64") /* ty=Tensor[(288), float64] */;
    %514 = reshape(%513, newshape=[72, 4]) /* ty=Tensor[(72, 4), float64] */;
    %515 = @func_9777(%514) /* ty=(int8, Tensor[(12, 8, 3), float32], Tensor[(72, 4), float64]) */;
    %516 = %509.1;
    %517 = %512.0;
    %518 = %515.0;
    (%516, %517, meta[relay.Constant][35] /* ty=Tensor[(1152), float32] */, %518, %var_10350)
  };
  %519(%var_10355) /* ty=(Tensor[(14, 15, 16), bool], Tensor[(8, 12, 12), float32], Tensor[(1152), float32], int8, Tensor[(288), float64]) */
}

def @func_4819() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  @func_4817() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_2682() -> (Tensor[(5, 12, 4), float64],) {
  %521 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %520 = @func_2570() /* ty=Tensor[(5, 12, 4), float64] */;
    (%520,)
  };
  %521() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_10307() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  @func_10305() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_9431() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %527 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %522 = @func_5726() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %523 = @func_6044() /* ty=Tensor[(5, 12, 4), float64] */;
    %524 = %522.0;
    %525 = @func_8045() /* ty=Tensor[(5, 12, 4), float64] */;
    %526 = @func_8045() /* ty=Tensor[(5, 12, 4), float64] */;
    (%523, %524, %525, %526)
  };
  %527() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_4330() -> (int8, Tensor[(5, 12, 4), float64]) {
  @func_4328() /* ty=(int8, Tensor[(5, 12, 4), float64]) */
}

def @func_8191() -> Tensor[(5, 12, 4), float64] {
  @func_2948() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_10445() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  @func_10443() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_1858() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(3360), float32], float32) {
  @func_1856() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(3360), float32], float32) */
}

def @func_1555() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %535 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %528 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %529 = %528.0;
    %530 = cast(%529, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
    %531 = cast(%529, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
    %532 = @func_1458() /* ty=Tensor[(5, 12, 4), float64] */;
    %533 = log10(%530) /* ty=Tensor[(5, 12, 4), float64] */;
    %534 = log2(%531) /* ty=Tensor[(5, 12, 4), float64] */;
    (%532, %533, %534)
  };
  %535() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_5341() -> (Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8]) {
  %536 = @func_1272() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %537 = @func_2389() /* ty=(Tensor[(4, 10, 2), float64], Tensor[(15, 15, 6), int8], int8) */;
  %538 = %536.1;
  %539 = %537.1;
  (%538, %539)
}

def @func_13253() -> (Tensor[(8, 14, 6), float64],) {
  %540 = @func_3242() /* ty=(Tensor[(8, 14, 6), float32], Tensor[(1, 14, 4), int32], Tensor[(1, 56), int32]) */;
  %541 = %540.0;
  %542 = cast(%541, dtype="float64") /* ty=Tensor[(8, 14, 6), float64] */;
  %543 = exp(%542) /* ty=Tensor[(8, 14, 6), float64] */;
  (%543,)
}

def @func_1924(%var_1922: Tensor[(5, 12, 4), float64]) -> Tensor[(5, 12, 4), bool] {
  @func_1921(%var_1922) /* ty=Tensor[(5, 12, 4), bool] */
}

def @main(%var_13974: Tensor[(3, 14, 14), float64], %var_13979: Tensor[(3, 14, 14), float64]) -> (Tensor[(3, 14, 14), bool],) {
  %544 = cast(%var_13974, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
  %545 = atan(%544) /* ty=Tensor[(3, 14, 14), float64] */;
  %546 = cast(%var_13979, dtype="int16") /* ty=Tensor[(3, 14, 14), int16] */;
  %547 = shape_of(%var_13974, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(%var_13974, dtype="int16") /* ty=Tensor[(3, 14, 14), int16] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %550 = right_shift(%548, %549) /* ty=Tensor[(3, 14, 14), int16] */;
  %551 = cast(%550, dtype="bool") /* ty=Tensor[(3, 14, 14), bool] */;
  %552 = shape_of(%545, dtype="int32") /* ty=Tensor[(3), int32] */;
  %553 = cast(%545, dtype="bool") /* ty=Tensor[(3, 14, 14), bool] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %555 = equal(%553, %554) /* ty=Tensor[(3, 14, 14), bool] */;
  (%555,)
}

def @func_1945() -> Tensor[(5, 12, 4), float64] {
  @func_1943() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_3242() -> (Tensor[(8, 14, 6), float32], Tensor[(1, 14, 4), int32], Tensor[(1, 56), int32]) {
  %556 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 14, 6), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 6), float32] */;
  %557 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 56), int32] */, dtype="int32") /* ty=Tensor[(1, 56), int32] */;
  %558 = reshape(%557, newshape=[1, 14, 4]) /* ty=Tensor[(1, 14, 4), int32] */;
  %559 = sigmoid(%556) /* ty=Tensor[(8, 14, 6), float32] */;
  %560 = @func_1129(%558) /* ty=Tensor[(1, 14, 4), int32] */;
  (%559, %560, meta[relay.Constant][37] /* ty=Tensor[(1, 56), int32] */)
}

def @func_1943() -> Tensor[(5, 12, 4), float64] {
  @func_1193() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_2249(%var_2242: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], int8, Tensor[(1, 1350), int8], Tensor[(1152), float32]) {
  %561 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %562 = @func_1304() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %563 = cast(%var_2242, dtype="int8") /* ty=int8 */;
  %564 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 1350), int8] */, dtype="int8") /* ty=Tensor[(1, 1350), int8] */;
  %565 = cast(meta[relay.Constant][39] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %566 = reshape(%563, newshape=[]) /* ty=int8 */;
  %567 = reshape(%564, newshape=[15, 15, 6]) /* ty=Tensor[(15, 15, 6), int8] */;
  %568 = reshape(%565, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %569 = @func_2204(%566, %567, %568) /* ty=(Tensor[(15, 15, 6), int8], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), uint64], Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) */;
  %570 = %561.0;
  %571 = %562.1;
  %572 = %569.0;
  (%570, %571, %572, %var_2242, meta[relay.Constant][38] /* ty=Tensor[(1, 1350), int8] */, meta[relay.Constant][39] /* ty=Tensor[(1152), float32] */)
}

def @func_7384(%var_7383: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(9, 15, 2), float32], Tensor[(270), float32], Tensor[(5, 12, 4), float64], Tensor[(56), int32]) {
  %584 = fn (%var_7363: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(9, 15, 2), float32], Tensor[(270), float32], Tensor[(5, 12, 4), float64], Tensor[(56), int32]) {
    %573 = @func_2324() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %574 = @func_3566() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %575 = cast(meta[relay.Constant][40] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
    %576 = reshape(%575, newshape=[9, 15, 2]) /* ty=Tensor[(9, 15, 2), float32] */;
    %577 = cast(%var_7363, dtype="int32") /* ty=Tensor[(56), int32] */;
    %578 = reshape(%577, newshape=[56]) /* ty=Tensor[(56), int32] */;
    %579 = @func_1333(%578) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) */;
    %580 = %573.0;
    %581 = %574.0;
    %582 = @func_6913(%576) /* ty=Tensor[(9, 15, 2), float32] */;
    %583 = %579.0;
    (%580, %581, %582, meta[relay.Constant][40] /* ty=Tensor[(270), float32] */, %583, %var_7363)
  };
  %584(%var_7383) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(9, 15, 2), float32], Tensor[(270), float32], Tensor[(5, 12, 4), float64], Tensor[(56), int32]) */
}

def @func_10688() -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16]) {
  %588 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16]) {
    %585 = @func_6616() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(33, 1), float64], Tensor[(264), float64], int8) */;
    %586 = %585.0;
    %587 = @func_9656() /* ty=Tensor[(6, 13, 8), int16] */;
    (%586, %587)
  };
  %588() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16]) */
}

def @func_5343() -> (Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8]) {
  @func_5341() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8]) */
}

def @func_11870() -> Tensor[(5, 12, 4), float64] {
  @func_9572() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_7467(%var_7457: Tensor[(2, 28), int64]) -> (Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(2, 28), float32], Tensor[(2, 28), uint64], Tensor[(5, 12, 4), float64], Tensor[(2, 28), uint16], Tensor[(2, 28), uint8]) {
  %589 = cast(meta[relay.Constant][41] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %590 = reshape(%589, newshape=[8, 12, 12]) /* ty=Tensor[(8, 12, 12), float32] */;
  %591 = @func_1807(%590) /* ty=(Tensor[(8, 12, 12), float32], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %592 = @func_4671() /* ty=(Tensor[(2, 28), int32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float32]) */;
  %593 = %592.0;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %595 = erf(%594) /* ty=Tensor[(2, 28), float32] */;
  %596 = cast(%595, dtype="uint64") /* ty=Tensor[(2, 28), uint64] */;
  %597 = shape_of(%593, dtype="int32") /* ty=Tensor[(2), int32] */;
  %598 = cast(%593, dtype="uint64") /* ty=Tensor[(2, 28), uint64] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %600 = add(%598, %599) /* ty=Tensor[(2, 28), uint64] */;
  %601 = cast(%600, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %602 = shape_of(%593, dtype="int32") /* ty=Tensor[(2), int32] */;
  %603 = cast(%593, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %605 = floor_mod(%603, %604) /* ty=Tensor[(2, 28), float64] */;
  %606 = cast(%593, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(2), int32] */;
  %608 = cast(%605, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %610 = cast(%605, dtype="uint64") /* ty=Tensor[(2, 28), uint64] */;
  %611 = shape_of(%600, dtype="int32") /* ty=Tensor[(2), int32] */;
  %612 = cast(%600, dtype="uint64") /* ty=Tensor[(2, 28), uint64] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %614 = @func_1304() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %615 = cast(%595, dtype="int64") /* ty=Tensor[(2, 28), int64] */;
  %616 = shape_of(%600, dtype="int32") /* ty=Tensor[(2), int32] */;
  %617 = cast(%600, dtype="int64") /* ty=Tensor[(2, 28), int64] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %619 = bitwise_xor(%617, %618) /* ty=Tensor[(2, 28), int64] */;
  %620 = cast(%var_7457, dtype="uint16") /* ty=Tensor[(2, 28), uint16] */;
  %621 = shape_of(%619, dtype="int32") /* ty=Tensor[(2), int32] */;
  %622 = cast(%619, dtype="uint16") /* ty=Tensor[(2, 28), uint16] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %624 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 28), uint64] */, dtype="uint8") /* ty=Tensor[(2, 28), uint8] */;
  %625 = shape_of(%600, dtype="int32") /* ty=Tensor[(2), int32] */;
  %626 = cast(%600, dtype="uint8") /* ty=Tensor[(2, 28), uint8] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %628 = %591.2;
  %629 = divide(%608, %609) /* ty=Tensor[(2, 28), float32] */;
  %630 = right_shift(%612, %613) /* ty=Tensor[(2, 28), uint64] */;
  %631 = %614.0;
  %632 = subtract(%622, %623) /* ty=Tensor[(2, 28), uint16] */;
  %633 = maximum(%626, %627) /* ty=Tensor[(2, 28), uint8] */;
  (%628, meta[relay.Constant][41] /* ty=Tensor[(1152), float32] */, %629, %630, %631, %632, %633)
}

def @func_9230() -> (int8, Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) {
  %644 = fn () -> (int8, Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) {
    %634 = @func_8794() /* ty=(int8, Tensor[(1152), float32], Tensor[(6, 13, 8), bool]) */;
    %635 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %636 = cast(meta[relay.Constant][43] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %637 = reshape(%636, newshape=[8, 12, 12]) /* ty=Tensor[(8, 12, 12), float32] */;
    %638 = @func_1807(%637) /* ty=(Tensor[(8, 12, 12), float32], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %639 = @func_7959() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %640 = %634.0;
    %641 = %635.0;
    %642 = %638.2;
    %643 = %639.1;
    (%640, %641, %642, meta[relay.Constant][43] /* ty=Tensor[(1152), float32] */, %643)
  };
  %644() /* ty=(int8, Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) */
}

def @func_12906() -> (Tensor[(5, 12, 4), float64], Tensor[(30), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %652 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(30), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %645 = @func_3004() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %646 = @func_10020() /* ty=(Tensor[(6, 13, 8), uint16], Tensor[(6, 13, 8), float32], Tensor[(5, 1, 6), float64], Tensor[(30), float64]) */;
    %647 = @func_7109() /* ty=(Tensor[(9, 14, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(9, 14, 4), bool], Tensor[(3360), float32]) */;
    %648 = %645.0;
    %649 = %646.3;
    %650 = @func_11475() /* ty=Tensor[(5, 12, 4), float64] */;
    %651 = %647.1;
    (%648, %649, %650, %651)
  };
  %652() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(30), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_8916() -> Tensor[(6, 13, 8), int16] {
  %653 = @func_6269() /* ty=(Tensor[(6, 13, 8), int16],) */;
  %653.0
}

def @func_11234(%var_11232: Tensor[(11, 12, 6), float32], %var_11233: Tensor[(11, 12, 6), float32]) -> (Tensor[(11, 12, 6), float32], Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(8, 14, 6), float32]) {
  %664 = fn (%var_11192: Tensor[(11, 12, 6), float32], %var_11193: Tensor[(11, 12, 6), float32]) -> (Tensor[(11, 12, 6), float32], Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(8, 14, 6), float32]) {
    %654 = cast(%var_11193, dtype="float32") /* ty=Tensor[(11, 12, 6), float32] */;
    %655 = shape_of(%var_11192, dtype="int32") /* ty=Tensor[(3), int32] */;
    %656 = cast(%var_11192, dtype="float32") /* ty=Tensor[(11, 12, 6), float32] */;
    %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %658 = @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */;
    %659 = @func_3242() /* ty=(Tensor[(8, 14, 6), float32], Tensor[(1, 14, 4), int32], Tensor[(1, 56), int32]) */;
    %660 = power(%656, %657) /* ty=Tensor[(11, 12, 6), float32] */;
    %661 = @func_10373() /* ty=Tensor[(5, 12, 4), float64] */;
    %662 = %658.2;
    %663 = %659.0;
    (%660, %661, %662, %663)
  };
  %664(%var_11232, %var_11233) /* ty=(Tensor[(11, 12, 6), float32], Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(8, 14, 6), float32]) */
}

def @func_4289() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  @func_4287() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_1856() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(3360), float32], float32) {
  %665 = cast(7.06467f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %666 = reshape(%665, newshape=[]) /* ty=float32 */;
  %667 = @func_684(%666) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) */;
  %668 = @func_1715() /* ty=Tensor[(5, 12, 4), float64] */;
  %669 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  %670 = %667.3;
  (%668, %669, %670, 7.06467f /* ty=float32 */)
}

def @func_2761() -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) {
  @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */
}

def @func_1129(%var_1121: Tensor[(1, 14, 4), int32]) -> Tensor[(1, 14, 4), int32] {
  %671 = cast(2 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %672 = cast(%var_1121, dtype="int32") /* ty=Tensor[(1, 14, 4), int32] */;
  logical_xor(%671, %672) /* ty=Tensor[(1, 14, 4), int32] */
}

def @func_2049() -> Tensor[(5, 12, 4), float64] {
  @func_2047() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_6663() -> Tensor[(15, 15, 6), int8] {
  %673 = @func_5341() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8]) */;
  %673.1
}

def @func_3707() -> (Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) {
  %674 = @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */;
  %675 = %674.0;
  %676 = @func_1458() /* ty=Tensor[(5, 12, 4), float64] */;
  (%675, %676)
}

def @func_10859(%var_10856: Tensor[(33), float64], %var_10857: Tensor[(3, 88), float64], %var_10858: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(3, 88), float64], int8) {
  @func_10854(%var_10856, %var_10857, %var_10858) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(3, 88), float64], int8) */
}

def @func_2557() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %677 = @func_1452() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) */;
  %678 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %679 = %677.0;
  %680 = %678.0;
  (%679, %680)
}

def @func_5913() -> Tensor[(9, 14, 4), bool] {
  %685 = fn () -> Tensor[(9, 14, 4), bool] {
    %681 = @func_3242() /* ty=(Tensor[(8, 14, 6), float32], Tensor[(1, 14, 4), int32], Tensor[(1, 56), int32]) */;
    %682 = %681.1;
    %683 = cast(%682, dtype="bool") /* ty=Tensor[(1, 14, 4), bool] */;
    %684 = cast(meta[relay.Constant][44] /* ty=Tensor[(9, 14, 4), int32] */, dtype="bool") /* ty=Tensor[(9, 14, 4), bool] */;
    less_equal(%683, %684) /* ty=Tensor[(9, 14, 4), bool] */
  };
  %685() /* ty=Tensor[(9, 14, 4), bool] */
}

def @func_3827(%var_3826: Tensor[(5, 12, 4), int16]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float32], Tensor[(5, 12, 4), float64]) {
  %698 = fn (%var_3810: Tensor[(5, 12, 4), int16]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float32], Tensor[(5, 12, 4), float64]) {
    %686 = @func_2948() /* ty=Tensor[(5, 12, 4), float64] */;
    %687 = cast(%686, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
    %688 = reshape(%687, newshape=[5, 12, 4]) /* ty=Tensor[(5, 12, 4), float64] */;
    %689 = @func_2150(%688) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(2, 28), int32], Tensor[(5, 12, 4), int16], Tensor[(5, 12, 4), float64]) */;
    %690 = %689.2;
    %691 = cast(%var_3810, dtype="float32") /* ty=Tensor[(5, 12, 4), float32] */;
    %692 = shape_of(%690, dtype="int32") /* ty=Tensor[(3), int32] */;
    %693 = cast(%690, dtype="float32") /* ty=Tensor[(5, 12, 4), float32] */;
    %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %695 = @func_1078() /* ty=Tensor[(5, 12, 4), float64] */;
    %696 = floor_mod(%693, %694) /* ty=Tensor[(5, 12, 4), float32] */;
    %697 = @func_2460() /* ty=Tensor[(5, 12, 4), float64] */;
    (%686, %695, %696, %697)
  };
  %698(%var_3826) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float32], Tensor[(5, 12, 4), float64]) */
}

def @func_9573() -> Tensor[(5, 12, 4), float64] {
  %700 = fn () -> Tensor[(5, 12, 4), float64] {
    %699 = @func_2324() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %699.0
  };
  %700() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_2912(%var_2909: Tensor[(11, 3, 1), float64], %var_2910: Tensor[(11, 3, 8), float64], %var_2911: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(11, 3, 8), uint8]) {
  @func_2907(%var_2909, %var_2910, %var_2911) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(11, 3, 8), uint8]) */
}

def @func_4934() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  @func_4932() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_8823() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %703 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %701 = @func_4614() /* ty=Tensor[(5, 12, 4), float64] */;
    %702 = @func_2948() /* ty=Tensor[(5, 12, 4), float64] */;
    (%701, %702)
  };
  %703() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_4328() -> (int8, Tensor[(5, 12, 4), float64]) {
  %704 = @func_2389() /* ty=(Tensor[(4, 10, 2), float64], Tensor[(15, 15, 6), int8], int8) */;
  %705 = @func_2681() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %706 = %704.2;
  %707 = %705.0;
  (%706, %707)
}

def @func_7780() -> (Tensor[(5, 12, 4), float64],) {
  %709 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %708 = @func_1715() /* ty=Tensor[(5, 12, 4), float64] */;
    (%708,)
  };
  %709() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_8520() -> (Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(72, 4), bool]) {
  @func_8518() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(72, 4), bool]) */
}

def @func_3041() -> Tensor[(5, 12, 4), float64] {
  %710 = fn () -> Tensor[(5, 12, 4), float64] {
    @func_1078() /* ty=Tensor[(5, 12, 4), float64] */
  };
  %710() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_11133() -> (Tensor[(5, 12, 4), float64],) {
  %711 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %712 = %711.1;
  (%712,)
}

def @func_1810(%var_1808: Tensor[(8, 12, 12), float32]) -> (Tensor[(8, 12, 12), float32], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  @func_1807(%var_1808) /* ty=(Tensor[(8, 12, 12), float32], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_9266() -> Tensor[(5, 12, 4), float64] {
  %714 = fn () -> Tensor[(5, 12, 4), float64] {
    %713 = @func_4451() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %713.0
  };
  %714() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_3971() -> (Tensor[(5, 12, 4), float64],) {
  %717 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %715 = @func_1452() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) */;
    %716 = %715.3;
    (%716,)
  };
  %717() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_13903() -> (Tensor[(6, 13, 8), bool], Tensor[(6, 13, 8), int16]) {
  %721 = fn () -> (Tensor[(6, 13, 8), bool], Tensor[(6, 13, 8), int16]) {
    %718 = @func_8794() /* ty=(int8, Tensor[(1152), float32], Tensor[(6, 13, 8), bool]) */;
    %719 = %718.2;
    %720 = @func_8916() /* ty=Tensor[(6, 13, 8), int16] */;
    (%719, %720)
  };
  %721() /* ty=(Tensor[(6, 13, 8), bool], Tensor[(6, 13, 8), int16]) */
}

def @func_10586() -> Tensor[(5, 12, 4), float64] {
  %722 = @func_2557() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %722.0
}

def @func_13334() -> (Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], Tensor[(1152), float32]) {
  @func_13332() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], Tensor[(1152), float32]) */
}

def @func_7196(%var_7194: Tensor[(12, 8, 3), float64]) -> (Tensor[(12, 8, 3), float32],) {
  @func_7193(%var_7194) /* ty=(Tensor[(12, 8, 3), float32],) */
}

def @func_11760() -> Tensor[(6, 13, 8), int16] {
  %723 = fn () -> Tensor[(6, 13, 8), int16] {
    @func_9656() /* ty=Tensor[(6, 13, 8), int16] */
  };
  %723() /* ty=Tensor[(6, 13, 8), int16] */
}

def @func_13571() -> (Tensor[(5, 12, 4), uint16], Tensor[(5, 12, 4), float64]) {
  %724 = @func_3169() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) */;
  %725 = @func_8869() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %726 = %724.1;
  %727 = %725.1;
  (%726, %727)
}

def @func_4780() -> Tensor[(6, 13, 8), int16] {
  @func_4778() /* ty=Tensor[(6, 13, 8), int16] */
}

def @func_7043(%var_7042: float32) -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(3360, 1), float32], float32) {
  %737 = fn (%var_7039: float32) -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(3360, 1), float32], float32) {
    %728 = @func_3566() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %729 = @func_3707() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) */;
    %730 = cast(%var_7039, dtype="float32") /* ty=float32 */;
    %731 = reshape(%730, newshape=[]) /* ty=float32 */;
    %732 = @func_4550(%731) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360, 1), float32]) */;
    %733 = %728.0;
    %734 = %729.0;
    %735 = @func_2544() /* ty=Tensor[(5, 12, 4), float64] */;
    %736 = %732.4;
    (%733, %734, %735, %736, %var_7039)
  };
  %737(%var_7042) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(3360, 1), float32], float32) */
}

def @func_8297() -> (Tensor[(5, 12, 4), float64],) {
  %738 = @func_2570() /* ty=Tensor[(5, 12, 4), float64] */;
  (%738,)
}

def @func_10661() -> (Tensor[(5, 12, 4), float64],) {
  @func_10659() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_13842(%var_13831: Tensor[(28, 120), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], Tensor[(28, 120), float32], Tensor[(3360), float32]) {
  %739 = @func_2681() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %740 = @func_12562() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %741 = cast(%var_13831, dtype="float32") /* ty=Tensor[(28, 120), float32] */;
  %742 = reshape(%741, newshape=[3360]) /* ty=Tensor[(3360), float32] */;
  %743 = @func_2275(%742) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) */;
  %744 = @func_7109() /* ty=(Tensor[(9, 14, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(9, 14, 4), bool], Tensor[(3360), float32]) */;
  %745 = %739.0;
  %746 = %740.0;
  %747 = @func_3962() /* ty=Tensor[(5, 12, 4), float64] */;
  %748 = %743.1;
  %749 = %744.3;
  (%745, %746, %747, %748, %var_13831, %749)
}

def @func_1079() -> Tensor[(5, 12, 4), float64] {
  %750 = fn () -> Tensor[(5, 12, 4), float64] {
    @func_871() /* ty=Tensor[(5, 12, 4), float64] */
  };
  %750() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_8800() -> Tensor[(5, 12, 4), float64] {
  %751 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %751.2
}

def @func_5728() -> (Tensor[(5, 12, 4), float64],) {
  @func_5726() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_4552(%var_4551: float32) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360, 1), float32]) {
  %762 = fn (%var_4540: float32) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360, 1), float32]) {
    %752 = @func_4116() /* ty=Tensor[(5, 12, 4), float64] */;
    %753 = cast(%752, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
    %754 = cast(%var_4540, dtype="float32") /* ty=float32 */;
    %755 = cast(meta[relay.Constant][45] /* ty=Tensor[(3360, 1), float32] */, dtype="float32") /* ty=Tensor[(3360, 1), float32] */;
    %756 = reshape(%754, newshape=[]) /* ty=float32 */;
    %757 = reshape(%755, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float32] */;
    %758 = @func_176(%756, %757) /* ty=(Tensor[(14, 15, 16), bool],) */;
    %759 = exp(%753) /* ty=Tensor[(5, 12, 4), float64] */;
    %760 = @func_3962() /* ty=Tensor[(5, 12, 4), float64] */;
    %761 = %758.0;
    (%759, %760, %761, %var_4540, meta[relay.Constant][45] /* ty=Tensor[(3360, 1), float32] */)
  };
  %762(%var_4551) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360, 1), float32]) */
}

def @func_7110() -> (Tensor[(9, 14, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(9, 14, 4), bool], Tensor[(3360), float32]) {
  %769 = fn () -> (Tensor[(9, 14, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(9, 14, 4), bool], Tensor[(3360), float32]) {
    %763 = @func_3758() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %764 = @func_1856() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(3360), float32], float32) */;
    %765 = @func_5912() /* ty=Tensor[(9, 14, 4), bool] */;
    %766 = %763.0;
    %767 = @func_5912() /* ty=Tensor[(9, 14, 4), bool] */;
    %768 = %764.2;
    (%765, %766, %767, %768)
  };
  %769() /* ty=(Tensor[(9, 14, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(9, 14, 4), bool], Tensor[(3360), float32]) */
}

def @func_2603() -> (Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) {
  %773 = fn () -> (Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) {
    %770 = @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */;
    %771 = %770.0;
    %772 = @func_1715() /* ty=Tensor[(5, 12, 4), float64] */;
    (%771, %772)
  };
  %773() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) */
}

def @func_1453() -> (Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) {
  %783 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) {
    %774 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %775 = %774.0;
    %776 = cast(%775, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
    %777 = cast(3.65533f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %778 = reshape(%777, newshape=[]) /* ty=float32 */;
    %779 = @func_684(%778) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) */;
    %780 = cosh(%776) /* ty=Tensor[(5, 12, 4), float64] */;
    %781 = %779.1;
    %782 = @func_1372() /* ty=Tensor[(5, 12, 4), float64] */;
    (%780, %781, 3.65533f /* ty=float32 */, %782)
  };
  %783() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) */
}

def @func_12758() -> (Tensor[(5, 12, 4), float64],) {
  %786 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %784 = @func_12140() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %785 = %784.1;
    (%785,)
  };
  %786() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_7483() -> (Tensor[(5, 12, 4), float64],) {
  %788 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %787 = @func_1458() /* ty=Tensor[(5, 12, 4), float64] */;
    (%787,)
  };
  %788() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_12459() -> (Tensor[(5, 12, 4), float64],) {
  %790 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %789 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
    (%789,)
  };
  %790() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_3658(%var_3656: Tensor[(6, 44), float64], %var_3657: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(6, 44), float64], int8) {
  @func_3654(%var_3656, %var_3657) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(6, 44), float64], int8) */
}

def @func_8929() -> (Tensor[(6, 13, 8), int16],) {
  %791 = @func_8916() /* ty=Tensor[(6, 13, 8), int16] */;
  (%791,)
}

def @func_2570() -> Tensor[(5, 12, 4), float64] {
  %792 = @func_1856() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(3360), float32], float32) */;
  %792.0
}

def @func_10617(%var_10615: Tensor[(13, 3, 6), float64], %var_10616: Tensor[(240), float32]) -> (Tensor[(13, 3, 6), float64], int8, Tensor[(240), float32], Tensor[(5, 12, 4), float64]) {
  %801 = fn (%var_10592: Tensor[(13, 3, 6), float64], %var_10600: Tensor[(240), float32]) -> (Tensor[(13, 3, 6), float64], int8, Tensor[(240), float32], Tensor[(5, 12, 4), float64]) {
    %793 = cast(%var_10592, dtype="float64") /* ty=Tensor[(13, 3, 6), float64] */;
    %794 = cast(%var_10600, dtype="float32") /* ty=Tensor[(240), float32] */;
    %795 = reshape(%794, newshape=[5, 16, 3]) /* ty=Tensor[(5, 16, 3), float32] */;
    %796 = @func_9246(%795) /* ty=(Tensor[(5, 16, 3), float32], Tensor[(5, 12, 4), float64], int8) */;
    %797 = @func_3326() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %798 = sigmoid(%793) /* ty=Tensor[(13, 3, 6), float64] */;
    %799 = %796.2;
    %800 = %797.1;
    (%798, %799, %var_10600, %800)
  };
  %801(%var_10615, %var_10616) /* ty=(Tensor[(13, 3, 6), float64], int8, Tensor[(240), float32], Tensor[(5, 12, 4), float64]) */
}

def @func_7193(%var_7175: Tensor[(12, 8, 3), float64]) -> (Tensor[(12, 8, 3), float32],) {
  %802 = cast(%var_7175, dtype="float64") /* ty=Tensor[(12, 8, 3), float64] */;
  %803 = tan(%802) /* ty=Tensor[(12, 8, 3), float64] */;
  %804 = cast(%803, dtype="float32") /* ty=Tensor[(12, 8, 3), float32] */;
  %805 = erf(%804) /* ty=Tensor[(12, 8, 3), float32] */;
  (%805,)
}

def @func_6882() -> Tensor[(6, 13, 8), int16] {
  @func_6880() /* ty=Tensor[(6, 13, 8), int16] */
}

def @func_2559() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  @func_2557() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_7804() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %809 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %806 = @func_7229() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %807 = @func_7673() /* ty=Tensor[(5, 12, 4), float64] */;
    %808 = %806.1;
    (%807, %808)
  };
  %809() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_10523() -> (Tensor[(5, 12, 4), float64],) {
  %811 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %810 = @func_1943() /* ty=Tensor[(5, 12, 4), float64] */;
    (%810,)
  };
  %811() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_5209() -> (Tensor[(5, 12, 4), float64],) {
  %813 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %812 = @func_2544() /* ty=Tensor[(5, 12, 4), float64] */;
    (%812,)
  };
  %813() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_4673() -> (Tensor[(2, 28), int32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float32]) {
  @func_4671() /* ty=(Tensor[(2, 28), int32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float32]) */
}

def @func_9602() -> int8 {
  %814 = @func_5407() /* ty=(Tensor[(5, 12, 4), float64], int8) */;
  %814.1
}

def @func_2275(%var_2261: Tensor[(3360), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) {
  %815 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %816 = cast(9.61233f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %817 = cast(%var_2261, dtype="float32") /* ty=Tensor[(3360), float32] */;
  %818 = reshape(%816, newshape=[]) /* ty=float32 */;
  %819 = reshape(%817, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float32] */;
  %820 = @func_176(%818, %819) /* ty=(Tensor[(14, 15, 16), bool],) */;
  %821 = %815.2;
  %822 = %820.0;
  (%821, %822, 9.61233f /* ty=float32 */, %var_2261)
}

def @func_5636() -> (Tensor[(5, 12, 4), float64],) {
  %825 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %823 = @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */;
    %824 = %823.2;
    (%824,)
  };
  %825() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_10935() -> (Tensor[(6, 13, 8), uint8],) {
  %826 = @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */;
  %827 = %826.1;
  (%827,)
}

def @func_9812() -> Tensor[(1, 14, 4), int32] {
  @func_9810() /* ty=Tensor[(1, 14, 4), int32] */
}

def @func_8047() -> Tensor[(5, 12, 4), float64] {
  @func_8045() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_7959() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %828 = @func_2460() /* ty=Tensor[(5, 12, 4), float64] */;
  %829 = @func_7673() /* ty=Tensor[(5, 12, 4), float64] */;
  (%828, %829)
}

def @func_10482() -> Tensor[(5, 12, 4), float64] {
  %831 = fn () -> Tensor[(5, 12, 4), float64] {
    %830 = @func_1304() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %830.1
  };
  %831() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_3259() -> (int8,) {
  %834 = fn () -> (int8,) {
    %832 = @func_2389() /* ty=(Tensor[(4, 10, 2), float64], Tensor[(15, 15, 6), int8], int8) */;
    %833 = %832.2;
    (%833,)
  };
  %834() /* ty=(int8,) */
}

def @func_6756(%var_6755: Tensor[(3, 1, 1), float32]) -> Tensor[(3, ?, ?), int16] {
  %841 = fn (%var_6733: Tensor[(3, 1, 1), float32]) -> Tensor[(3, ?, ?), int16] {
    %835 = cast(%var_6733, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
    %836 = tan(%835) /* ty=Tensor[(3, 1, 1), float32] */;
    %837 = cast(%836, dtype="int16") /* ty=Tensor[(3, 1, 1), int16] */;
    %838 = shape_of(%var_6733, dtype="int32") /* ty=Tensor[(3), int32] */;
    %839 = cast(%var_6733, dtype="int16") /* ty=Tensor[(3, 1, 1), int16] */;
    %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_xor(%839, %840) /* ty=Tensor[(3, ?, ?), int16] */
  };
  %841(%var_6755) /* ty=Tensor[(3, ?, ?), int16] */
}

def @func_7470(%var_7468: Tensor[(2, 28), int64]) -> (Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(2, 28), float32], Tensor[(2, 28), uint64], Tensor[(5, 12, 4), float64], Tensor[(2, 28), uint16], Tensor[(2, 28), uint8]) {
  @func_7467(%var_7468) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(2, 28), float32], Tensor[(2, 28), uint64], Tensor[(5, 12, 4), float64], Tensor[(2, 28), uint16], Tensor[(2, 28), uint8]) */
}

def @func_7286() -> Tensor[(5, 12, 4), float64] {
  %844 = fn () -> Tensor[(5, 12, 4), float64] {
    %842 = @func_1078() /* ty=Tensor[(5, 12, 4), float64] */;
    %843 = cast(%842, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
    cos(%843) /* ty=Tensor[(5, 12, 4), float64] */
  };
  %844() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_5093(%var_5092: Tensor[(288, 4), float32]) -> (Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(288, 4), float32], Tensor[(5, 12, 4), float64]) {
  %853 = fn (%var_5067: Tensor[(288, 4), float32]) -> (Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(288, 4), float32], Tensor[(5, 12, 4), float64]) {
    %845 = @func_2602() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) */;
    %846 = cast(%var_5067, dtype="float32") /* ty=Tensor[(288, 4), float32] */;
    %847 = reshape(%846, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %848 = @func_3418(%847) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %849 = @func_4287() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %850 = %845.0;
    %851 = %848.3;
    %852 = %849.1;
    (%850, %851, %var_5067, %852)
  };
  %853(%var_5092) /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(288, 4), float32], Tensor[(5, 12, 4), float64]) */
}

def @func_6011() -> Tensor[(13, 12, 4), float32] {
  @func_6009() /* ty=Tensor[(13, 12, 4), float32] */
}

def @func_11250() -> Tensor[(5, 12, 4), float64] {
  %854 = fn () -> Tensor[(5, 12, 4), float64] {
    @func_10810() /* ty=Tensor[(5, 12, 4), float64] */
  };
  %854() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_13490() -> (Tensor[(5, 12, 4), float64],) {
  %855 = @func_13197() /* ty=Tensor[(5, 12, 4), float64] */;
  (%855,)
}

def @func_9646() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %860 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %856 = @func_4817() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %857 = @func_7285() /* ty=Tensor[(5, 12, 4), float64] */;
    %858 = @func_2570() /* ty=Tensor[(5, 12, 4), float64] */;
    %859 = %856.1;
    (%857, %858, %859)
  };
  %860() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_13845(%var_13843: Tensor[(28, 120), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], Tensor[(28, 120), float32], Tensor[(3360), float32]) {
  @func_13842(%var_13843) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], Tensor[(28, 120), float32], Tensor[(3360), float32]) */
}

def @func_6269() -> (Tensor[(6, 13, 8), int16],) {
  %861 = @func_4778() /* ty=Tensor[(6, 13, 8), int16] */;
  (%861,)
}

def @func_6994() -> (Tensor[(5, 12, 4), float64],) {
  %864 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %862 = @func_5801() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(624), int16]) */;
    %863 = %862.0;
    (%863,)
  };
  %864() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_8561() -> Tensor[(5, 12, 4), float64] {
  @func_8559() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_1715() -> Tensor[(5, 12, 4), float64] {
  %865 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %865.0
}

def @func_8794() -> (int8, Tensor[(1152), float32], Tensor[(6, 13, 8), bool]) {
  %866 = @func_4328() /* ty=(int8, Tensor[(5, 12, 4), float64]) */;
  %867 = @func_6313() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) */;
  %868 = @func_5801() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(624), int16]) */;
  %869 = %866.0;
  %870 = %867.2;
  %871 = %868.1;
  (%869, %870, %871)
}

def @func_11387(%var_11384: Tensor[(56, 1), int32], %var_11385: Tensor[(56, 14), int32], %var_11386: Tensor[(3), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(16, 6, 4), float32], Tensor[(2, 192), float32], Tensor[(56, 14), uint32], Tensor[(5, 12, 4), float64], Tensor[(3, ?, ?), int16], Tensor[(3), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(12, 8, 3), float32], Tensor[(288), float64]) {
  %904 = fn (%var_11313: Tensor[(56, 1), int32], %var_11321: Tensor[(56, 14), int32], %var_11363: Tensor[(3), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(16, 6, 4), float32], Tensor[(2, 192), float32], Tensor[(56, 14), uint32], Tensor[(5, 12, 4), float64], Tensor[(3, ?, ?), int16], Tensor[(3), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(12, 8, 3), float32], Tensor[(288), float64]) {
    %872 = @func_3970() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %873 = cast(%var_11313, dtype="int32") /* ty=Tensor[(56, 1), int32] */;
    %874 = reshape(%873, newshape=[56]) /* ty=Tensor[(56), int32] */;
    %875 = @func_1333(%874) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) */;
    %876 = cast(meta[relay.Constant][46] /* ty=Tensor[(2, 192), float32] */, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
    %877 = reshape(%876, newshape=[16, 6, 4]) /* ty=Tensor[(16, 6, 4), float32] */;
    %878 = @func_9731(%877) /* ty=(Tensor[(16, 6, 4), float32], Tensor[(6, 13, 8), float32]) */;
    %879 = cast(%var_11313, dtype="uint8") /* ty=Tensor[(56, 1), uint8] */;
    %880 = cast(%var_11321, dtype="uint8") /* ty=Tensor[(56, 14), uint8] */;
    %881 = left_shift(%879, %880) /* ty=Tensor[(56, 14), uint8] */;
    %882 = cast(%881, dtype="float64") /* ty=Tensor[(56, 14), float64] */;
    %883 = atanh(%882) /* ty=Tensor[(56, 14), float64] */;
    %884 = cast(%881, dtype="uint32") /* ty=Tensor[(56, 14), uint32] */;
    %885 = shape_of(%883, dtype="int32") /* ty=Tensor[(2), int32] */;
    %886 = cast(%883, dtype="uint32") /* ty=Tensor[(56, 14), uint32] */;
    %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %888 = @func_3004() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %889 = cast(%var_11363, dtype="float32") /* ty=Tensor[(3), float32] */;
    %890 = reshape(%889, newshape=[3, 1, 1]) /* ty=Tensor[(3, 1, 1), float32] */;
    %891 = @func_10100() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) */;
    %892 = cast(meta[relay.Constant][47] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
    %893 = reshape(%892, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
    %894 = @func_7193(%893) /* ty=(Tensor[(12, 8, 3), float32],) */;
    %895 = %872.0;
    %896 = %875.0;
    %897 = %878.0;
    %898 = bitwise_or(%886, %887) /* ty=Tensor[(56, 14), uint32] */;
    %899 = %888.0;
    %900 = @func_6754(%890) /* ty=Tensor[(3, ?, ?), int16] */;
    %901 = @func_1372() /* ty=Tensor[(5, 12, 4), float64] */;
    %902 = %891.0;
    %903 = %894.0;
    (%895, %896, %897, meta[relay.Constant][46] /* ty=Tensor[(2, 192), float32] */, %898, %899, %900, %var_11363, %901, %902, %903, meta[relay.Constant][47] /* ty=Tensor[(288), float64] */)
  };
  %904(%var_11384, %var_11385, %var_11386) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(16, 6, 4), float32], Tensor[(2, 192), float32], Tensor[(56, 14), uint32], Tensor[(5, 12, 4), float64], Tensor[(3, ?, ?), int16], Tensor[(3), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(12, 8, 3), float32], Tensor[(288), float64]) */
}

def @func_1458() -> Tensor[(5, 12, 4), float64] {
  %905 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %905.0
}

def @func_11819() -> (Tensor[(5, 12, 4), float64],) {
  %906 = @func_1715() /* ty=Tensor[(5, 12, 4), float64] */;
  (%906,)
}

def @func_8034() -> Tensor[(5, 12, 4), float64] {
  %907 = fn () -> Tensor[(5, 12, 4), float64] {
    @func_1078() /* ty=Tensor[(5, 12, 4), float64] */
  };
  %907() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_13255() -> (Tensor[(8, 14, 6), float64],) {
  @func_13253() /* ty=(Tensor[(8, 14, 6), float64],) */
}

def @func_1374() -> Tensor[(5, 12, 4), float64] {
  @func_1372() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_6618() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(33, 1), float64], Tensor[(264), float64], int8) {
  @func_6616() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(33, 1), float64], Tensor[(264), float64], int8) */
}

def @func_8995() -> Tensor[(6, 13, 8), bool] {
  %909 = fn () -> Tensor[(6, 13, 8), bool] {
    %908 = @func_8794() /* ty=(int8, Tensor[(1152), float32], Tensor[(6, 13, 8), bool]) */;
    %908.2
  };
  %909() /* ty=Tensor[(6, 13, 8), bool] */
}

def @func_8845(%var_8844: Tensor[(1152), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(288, 4), float32], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) {
  %917 = fn (%var_8836: Tensor[(1152), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(288, 4), float32], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) {
    %910 = @func_1570() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %911 = cast(%var_8836, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %912 = reshape(%911, newshape=[288, 4]) /* ty=Tensor[(288, 4), float32] */;
    %913 = @func_5091(%912) /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(288, 4), float32], Tensor[(5, 12, 4), float64]) */;
    %914 = %910.1;
    %915 = %913.2;
    %916 = @func_8677() /* ty=Tensor[(5, 12, 4), float64] */;
    (%914, %915, %var_8836, %916)
  };
  %917(%var_8844) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(288, 4), float32], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) */
}

def @func_4024() -> float32 {
  %918 = @func_1452() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) */;
  %918.2
}

def @func_4192(%var_4190: Tensor[(33), float64], %var_4191: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(264), float64], int8) {
  @func_4188(%var_4190, %var_4191) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(264), float64], int8) */
}

def @func_12435(%var_12420: Tensor[(2, 28), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 1, 6), float64], Tensor[(30), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(2, 28), float32], Tensor[(5, 12, 4), float64]) {
  %919 = @func_4932() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %920 = cast(meta[relay.Constant][48] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %921 = reshape(%920, newshape=[5, 1, 6]) /* ty=Tensor[(5, 1, 6), float64] */;
  %922 = cast(%var_12420, dtype="int32") /* ty=Tensor[(2, 28), int32] */;
  %923 = reshape(%922, newshape=[56]) /* ty=Tensor[(56), int32] */;
  %924 = @func_7382(%923) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(9, 15, 2), float32], Tensor[(270), float32], Tensor[(5, 12, 4), float64], Tensor[(56), int32]) */;
  %925 = @func_2389() /* ty=(Tensor[(4, 10, 2), float64], Tensor[(15, 15, 6), int8], int8) */;
  %926 = cast(%var_12420, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %927 = %919.1;
  %928 = @func_4245(%921) /* ty=Tensor[(5, 1, 6), float64] */;
  %929 = %924.0;
  %930 = %925.2;
  %931 = log10(%926) /* ty=Tensor[(2, 28), float32] */;
  %932 = @func_11870() /* ty=Tensor[(5, 12, 4), float64] */;
  (%927, %928, meta[relay.Constant][48] /* ty=Tensor[(30), float64] */, %929, %930, %931, %932)
}

def @func_13573() -> (Tensor[(5, 12, 4), uint16], Tensor[(5, 12, 4), float64]) {
  @func_13571() /* ty=(Tensor[(5, 12, 4), uint16], Tensor[(5, 12, 4), float64]) */
}

def @func_8931() -> (Tensor[(6, 13, 8), int16],) {
  @func_8929() /* ty=(Tensor[(6, 13, 8), int16],) */
}

def @func_9177() -> Tensor[(5, 12, 4), float64] {
  %933 = fn () -> Tensor[(5, 12, 4), float64] {
    @func_2544() /* ty=Tensor[(5, 12, 4), float64] */
  };
  %933() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_11624() -> (Tensor[(6, 13, 8), bool],) {
  @func_11622() /* ty=(Tensor[(6, 13, 8), bool],) */
}

def @func_3760() -> (Tensor[(5, 12, 4), float64],) {
  @func_3758() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_3244() -> (Tensor[(8, 14, 6), float32], Tensor[(1, 14, 4), int32], Tensor[(1, 56), int32]) {
  @func_3242() /* ty=(Tensor[(8, 14, 6), float32], Tensor[(1, 14, 4), int32], Tensor[(1, 56), int32]) */
}

def @func_6665() -> Tensor[(15, 15, 6), int8] {
  @func_6663() /* ty=Tensor[(15, 15, 6), int8] */
}

def @func_2325() -> (Tensor[(5, 12, 4), float64],) {
  %935 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %934 = @func_1078() /* ty=Tensor[(5, 12, 4), float64] */;
    (%934,)
  };
  %935() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_2047() -> Tensor[(5, 12, 4), float64] {
  %936 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %936.0
}

def @func_2356() -> (Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) {
  %937 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 13, 8), float64] */, dtype="float64") /* ty=Tensor[(6, 13, 8), float64] */;
  %938 = cos(%937) /* ty=Tensor[(6, 13, 8), float64] */;
  %939 = cast(%938, dtype="float32") /* ty=Tensor[(6, 13, 8), float32] */;
  %940 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 13, 8), float64] */, dtype="uint8") /* ty=Tensor[(6, 13, 8), uint8] */;
  %941 = shape_of(%938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(%938, dtype="uint8") /* ty=Tensor[(6, 13, 8), uint8] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %944 = cast(%938, dtype="int16") /* ty=Tensor[(6, 13, 8), int16] */;
  %945 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(6, 13, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %946 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 13, 8), float64] */, dtype="int16") /* ty=Tensor[(6, 13, 8), int16] */;
  %947 = dyn.reshape(%944, %945, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %948 = atanh(%939) /* ty=Tensor[(6, 13, 8), float32] */;
  %949 = add(%942, %943) /* ty=Tensor[(6, 13, 8), uint8] */;
  %950 = bitwise_and(%946, %947) /* ty=Tensor[(6, 13, 8), int16] */;
  (%948, %949, %950)
}

def @func_8083() -> (Tensor[(5, 12, 4), float64],) {
  @func_8081() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_4248(%var_4246: Tensor[(5, 1, 6), float64]) -> Tensor[(5, 1, 6), float64] {
  @func_4245(%var_4246) /* ty=Tensor[(5, 1, 6), float64] */
}

def @func_8918() -> Tensor[(6, 13, 8), int16] {
  @func_8916() /* ty=Tensor[(6, 13, 8), int16] */
}

def @func_9777(%var_9771: Tensor[(72, 4), float64]) -> (int8, Tensor[(12, 8, 3), float32], Tensor[(72, 4), float64]) {
  %951 = @func_3258() /* ty=(int8,) */;
  %952 = cast(%var_9771, dtype="float64") /* ty=Tensor[(72, 4), float64] */;
  %953 = reshape(%952, newshape=[12, 8, 3]) /* ty=Tensor[(12, 8, 3), float64] */;
  %954 = @func_7193(%953) /* ty=(Tensor[(12, 8, 3), float32],) */;
  %955 = %951.0;
  %956 = %954.0;
  (%955, %956, %var_9771)
}

def @func_3170() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) {
  %966 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) {
    %957 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %958 = @func_1078() /* ty=Tensor[(5, 12, 4), float64] */;
    %959 = @func_2948() /* ty=Tensor[(5, 12, 4), float64] */;
    %960 = cast(%959, dtype="uint16") /* ty=Tensor[(5, 12, 4), uint16] */;
    %961 = shape_of(%958, dtype="int32") /* ty=Tensor[(3), int32] */;
    %962 = cast(%958, dtype="uint16") /* ty=Tensor[(5, 12, 4), uint16] */;
    %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %964 = %957.2;
    %965 = subtract(%962, %963) /* ty=Tensor[(5, 12, 4), uint16] */;
    (%964, %965)
  };
  %966() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) */
}

def @func_5726() -> (Tensor[(5, 12, 4), float64],) {
  %967 = @func_4287() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %968 = %967.0;
  (%968,)
}

def @func_12496() -> (int8,) {
  %971 = fn () -> (int8,) {
    %969 = @func_5407() /* ty=(Tensor[(5, 12, 4), float64], int8) */;
    %970 = %969.1;
    (%970,)
  };
  %971() /* ty=(int8,) */
}

def @func_10854(%var_10850: Tensor[(33), float64], %var_10851: Tensor[(3, 88), float64], %var_10852: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(3, 88), float64], int8) {
  %972 = @func_5144() /* ty=(int8, Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) */;
  %973 = cast(%var_10850, dtype="float64") /* ty=Tensor[(33), float64] */;
  %974 = cast(%var_10851, dtype="float64") /* ty=Tensor[(3, 88), float64] */;
  %975 = cast(%var_10852, dtype="int8") /* ty=int8 */;
  %976 = reshape(%973, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %977 = reshape(%974, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
  %978 = reshape(%975, newshape=[]) /* ty=int8 */;
  %979 = @func_2907(%976, %977, %978) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(11, 3, 8), uint8]) */;
  %980 = @func_10586() /* ty=Tensor[(5, 12, 4), float64] */;
  %981 = %972.2;
  %982 = %979.4;
  (%980, %981, %982, %var_10850, %var_10851, %var_10852)
}

def @func_4765() -> Tensor[(5, 12, 4), float64] {
  %983 = fn () -> Tensor[(5, 12, 4), float64] {
    @func_2460() /* ty=Tensor[(5, 12, 4), float64] */
  };
  %983() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_6916(%var_6914: Tensor[(9, 15, 2), float32]) -> Tensor[(9, 15, 2), float32] {
  @func_6913(%var_6914) /* ty=Tensor[(9, 15, 2), float32] */
}

def @func_1272() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %984 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %985 = %984.0;
  %986 = @func_1193() /* ty=Tensor[(5, 12, 4), float64] */;
  (%985, %986)
}

def @func_13492() -> (Tensor[(5, 12, 4), float64],) {
  @func_13490() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_9780(%var_9778: Tensor[(72, 4), float64]) -> (int8, Tensor[(12, 8, 3), float32], Tensor[(72, 4), float64]) {
  @func_9777(%var_9778) /* ty=(int8, Tensor[(12, 8, 3), float32], Tensor[(72, 4), float64]) */
}

def @func_4778() -> Tensor[(6, 13, 8), int16] {
  %987 = @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */;
  %987.1
}

def @func_10588() -> Tensor[(5, 12, 4), float64] {
  @func_10586() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_8796() -> (int8, Tensor[(1152), float32], Tensor[(6, 13, 8), bool]) {
  @func_8794() /* ty=(int8, Tensor[(1152), float32], Tensor[(6, 13, 8), bool]) */
}

def @func_12577() -> (Tensor[(5, 12, 4), float64],) {
  @func_12575() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_3421(%var_3419: Tensor[(1152), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  @func_3418(%var_3419) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_10937() -> (Tensor[(6, 13, 8), uint8],) {
  @func_10935() /* ty=(Tensor[(6, 13, 8), uint8],) */
}

def @func_11622() -> (Tensor[(6, 13, 8), bool],) {
  %988 = @func_10477() /* ty=(Tensor[(6, 13, 8), bool],) */;
  %989 = %988.0;
  (%989,)
}

def @func_5001(%var_4999: Tensor[(6, 13, 8), int16]) -> Tensor[(6, 13, 8), bool] {
  @func_4998(%var_4999) /* ty=Tensor[(6, 13, 8), bool] */
}

def @func_9917(%var_9915: Tensor[(56), int32], %var_9916: Tensor[(10, 14, 4), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32], Tensor[(10, 14, 4), float64], Tensor[(10, 14, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  @func_9913(%var_9915, %var_9916) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32], Tensor[(10, 14, 4), float64], Tensor[(10, 14, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_10659() -> (Tensor[(5, 12, 4), float64],) {
  %990 = @func_3004() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %991 = %990.0;
  (%991,)
}

def @func_8559() -> Tensor[(5, 12, 4), float64] {
  @func_3962() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_1524() -> (Tensor[(5, 12, 4), float64],) {
  %992 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %993 = %992.0;
  (%993,)
}

def @func_12003() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int64]) {
  %1001 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int64]) {
    %994 = @func_6993() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %995 = cast(meta[relay.Constant][50] /* ty=Tensor[(56), int64] */, dtype="int64") /* ty=Tensor[(56), int64] */;
    %996 = reshape(%995, newshape=[2, 28]) /* ty=Tensor[(2, 28), int64] */;
    %997 = @func_7467(%996) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(2, 28), float32], Tensor[(2, 28), uint64], Tensor[(5, 12, 4), float64], Tensor[(2, 28), uint16], Tensor[(2, 28), uint8]) */;
    %998 = @func_10481() /* ty=Tensor[(5, 12, 4), float64] */;
    %999 = %994.0;
    %1000 = %997.4;
    (%998, %999, %1000, meta[relay.Constant][50] /* ty=Tensor[(56), int64] */)
  };
  %1001() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int64]) */
}

def @func_2545() -> Tensor[(5, 12, 4), float64] {
  %1003 = fn () -> Tensor[(5, 12, 4), float64] {
    %1002 = @func_1272() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %1002.1
  };
  %1003() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_13614() -> (Tensor[(5, 12, 4), float64],) {
  %1005 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %1004 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
    (%1004,)
  };
  %1005() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_3567() -> (Tensor[(5, 12, 4), float64],) {
  %1008 = fn () -> (Tensor[(5, 12, 4), float64],) {
    %1006 = @func_2681() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %1007 = %1006.0;
    (%1007,)
  };
  %1008() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_1460() -> Tensor[(5, 12, 4), float64] {
  @func_1458() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_2252(%var_2250: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], int8, Tensor[(1, 1350), int8], Tensor[(1152), float32]) {
  @func_2249(%var_2250) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], int8, Tensor[(1, 1350), int8], Tensor[(1152), float32]) */
}

def @func_1526() -> (Tensor[(5, 12, 4), float64],) {
  @func_1524() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_10443() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %1009 = @func_4817() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1010 = @func_10305() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1011 = @func_5635() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1012 = %1009.0;
  %1013 = %1010.1;
  %1014 = %1011.0;
  (%1012, %1013, %1014)
}

def @func_8678() -> Tensor[(5, 12, 4), float64] {
  %1015 = fn () -> Tensor[(5, 12, 4), float64] {
    @func_2948() /* ty=Tensor[(5, 12, 4), float64] */
  };
  %1015() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_9562(%var_9559: Tensor[(624, 1), int16], %var_9560: Tensor[(624, 7), int16], %var_9561: Tensor[(624, 7), int16]) -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(624, 7), bool], Tensor[(624, 7), int8]) {
  %1045 = fn (%var_9451: Tensor[(624, 1), int16], %var_9508: Tensor[(624, 7), int16], %var_9554: Tensor[(624, 7), int16]) -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(624, 7), bool], Tensor[(624, 7), int8]) {
    %1016 = cast(%var_9451, dtype="int16") /* ty=Tensor[(624, 1), int16] */;
    %1017 = reshape(%1016, newshape=[6, 13, 8]) /* ty=Tensor[(6, 13, 8), int16] */;
    %1018 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %1019 = @func_5341() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8]) */;
    %1020 = cast(%var_9508, dtype="float64") /* ty=Tensor[(624, 7), float64] */;
    %1021 = cosh(%1020) /* ty=Tensor[(624, 7), float64] */;
    %1022 = cast(%var_9451, dtype="float32") /* ty=Tensor[(624, 1), float32] */;
    %1023 = sqrt(%1022) /* ty=Tensor[(624, 1), float32] */;
    %1024 = cast(%var_9451, dtype="uint32") /* ty=Tensor[(624, 1), uint32] */;
    %1025 = cast(%var_9508, dtype="uint32") /* ty=Tensor[(624, 7), uint32] */;
    %1026 = bitwise_or(%1024, %1025) /* ty=Tensor[(624, 7), uint32] */;
    %1027 = cast(%1023, dtype="int8") /* ty=Tensor[(624, 1), int8] */;
    %1028 = cast(%1026, dtype="int8") /* ty=Tensor[(624, 7), int8] */;
    %1029 = add(%1027, %1028) /* ty=Tensor[(624, 7), int8] */;
    %1030 = cast(%1029, dtype="bool") /* ty=Tensor[(624, 7), bool] */;
    %1031 = shape_of(%1021, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1032 = cast(%1021, dtype="bool") /* ty=Tensor[(624, 7), bool] */;
    %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1034 = cast(%var_9554, dtype="int8") /* ty=Tensor[(624, 7), int8] */;
    %1035 = shape_of(%var_9508, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1036 = cast(%var_9508, dtype="int8") /* ty=Tensor[(624, 7), int8] */;
    %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %1038 = @func_3962() /* ty=Tensor[(5, 12, 4), float64] */;
    %1039 = @func_4998(%1017) /* ty=Tensor[(6, 13, 8), bool] */;
    %1040 = %1018.0;
    %1041 = %1019.0;
    %1042 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
    %1043 = logical_and(%1032, %1033) /* ty=Tensor[(624, 7), bool] */;
    %1044 = bitwise_and(%1036, %1037) /* ty=Tensor[(624, 7), int8] */;
    (%1038, %1039, %1040, %1041, %1042, %1043, %1044)
  };
  %1045(%var_9559, %var_9560, %var_9561) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(624, 7), bool], Tensor[(624, 7), int8]) */
}

def @func_12030() -> (Tensor[(6, 13, 8), float32],) {
  %1048 = fn () -> (Tensor[(6, 13, 8), float32],) {
    %1046 = @func_3707() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) */;
    %1047 = %1046.0;
    (%1047,)
  };
  %1048() /* ty=(Tensor[(6, 13, 8), float32],) */
}

def @func_8193() -> Tensor[(5, 12, 4), float64] {
  @func_8191() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_12086(%var_12084: int8) -> (Tensor[(6, 13, 8), int16], int8, Tensor[(264), float64], int8, Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), float32], Tensor[(?, 56), int8], Tensor[(21), int32], Tensor[(273, 1), int32]) {
  @func_12083(%var_12084) /* ty=(Tensor[(6, 13, 8), int16], int8, Tensor[(264), float64], int8, Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), float32], Tensor[(?, 56), int8], Tensor[(21), int32], Tensor[(273, 1), int32]) */
}

def @func_9733(%var_9732: Tensor[(16, 6, 4), float32]) -> (Tensor[(16, 6, 4), float32], Tensor[(6, 13, 8), float32]) {
  %1053 = fn (%var_9719: Tensor[(16, 6, 4), float32]) -> (Tensor[(16, 6, 4), float32], Tensor[(6, 13, 8), float32]) {
    %1049 = cast(%var_9719, dtype="float32") /* ty=Tensor[(16, 6, 4), float32] */;
    %1050 = @func_2602() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) */;
    %1051 = erf(%1049) /* ty=Tensor[(16, 6, 4), float32] */;
    %1052 = %1050.0;
    (%1051, %1052)
  };
  %1053(%var_9732) /* ty=(Tensor[(16, 6, 4), float32], Tensor[(6, 13, 8), float32]) */
}

def @func_13199() -> Tensor[(5, 12, 4), float64] {
  @func_13197() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_11135() -> (Tensor[(5, 12, 4), float64],) {
  @func_11133() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_3301(%var_3299: Tensor[(1, 4, 7), uint16], %var_3300: Tensor[(6, 4, 7), uint16]) -> (Tensor[(6, 4, 7), uint16], Tensor[(6, 4, 7), float64]) {
  @func_3297(%var_3299, %var_3300) /* ty=(Tensor[(6, 4, 7), uint16], Tensor[(6, 4, 7), float64]) */
}

def @func_5050(%var_5048: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) {
  %1054 = @func_1458() /* ty=Tensor[(5, 12, 4), float64] */;
  %1055 = cast(%1054, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  %1056 = cast(%var_5048, dtype="int32") /* ty=Tensor[(56), int32] */;
  %1057 = reshape(%1056, newshape=[1, 14, 4]) /* ty=Tensor[(1, 14, 4), int32] */;
  %1058 = rsqrt(%1055) /* ty=Tensor[(5, 12, 4), float64] */;
  %1059 = @func_1129(%1057) /* ty=Tensor[(1, 14, 4), int32] */;
  (%1058, %1059, %var_5048)
}

def @func_5176() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) {
  %1064 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) {
    %1060 = @func_3169() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) */;
    %1061 = @func_4614() /* ty=Tensor[(5, 12, 4), float64] */;
    %1062 = @func_3040() /* ty=Tensor[(5, 12, 4), float64] */;
    %1063 = %1060.1;
    (%1061, %1062, %1063)
  };
  %1064() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) */
}

def @func_6314() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) {
  %1070 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) {
    %1065 = cast(meta[relay.Constant][51] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %1066 = reshape(%1065, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %1067 = @func_3418(%1066) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %1068 = @func_1078() /* ty=Tensor[(5, 12, 4), float64] */;
    %1069 = %1067.1;
    (%1068, %1069, meta[relay.Constant][51] /* ty=Tensor[(1152), float32] */)
  };
  %1070() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) */
}

def @func_11872() -> Tensor[(5, 12, 4), float64] {
  @func_11870() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_12953() -> Tensor[(5, 12, 4), float64] {
  @func_12951() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_4453() -> (Tensor[(5, 12, 4), float64],) {
  @func_4451() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_12140() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %1071 = @func_8081() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1072 = %1071.0;
  %1073 = @func_1193() /* ty=Tensor[(5, 12, 4), float64] */;
  (%1072, %1073)
}

def @func_9000() -> (Tensor[(6, 13, 8), float32],) {
  %1076 = fn () -> (Tensor[(6, 13, 8), float32],) {
    %1074 = @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */;
    %1075 = %1074.0;
    (%1075,)
  };
  %1076() /* ty=(Tensor[(6, 13, 8), float32],) */
}

def @func_12237() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %1082 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %1077 = @func_10305() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %1078 = @func_8518() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(72, 4), bool]) */;
    %1079 = %1077.0;
    %1080 = %1078.0;
    %1081 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
    (%1079, %1080, %1081)
  };
  %1082() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_6009() -> Tensor[(13, 12, 4), float32] {
  %1083 = cast(meta[relay.Constant][52] /* ty=Tensor[(13, 12, 4), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 4), float32] */;
  cosh(%1083) /* ty=Tensor[(13, 12, 4), float32] */
}

def @func_12395(%var_12341: Tensor[(1152), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), uint8], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), int32]) {
  %1084 = @func_11801() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1085 = cast(%var_12341, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %1086 = reshape(%1085, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %1087 = @func_3418(%1086) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1088 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1089 = @func_1452() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(5, 12, 4), float64]) */;
  %1090 = %1089.1;
  %1091 = cast(%1090, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %1092 = acosh(%1091) /* ty=Tensor[(14, 15, 16), float64] */;
  %1093 = cast(%1090, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %1094 = asin(%1093) /* ty=Tensor[(14, 15, 16), float32] */;
  %1095 = cast(%1094, dtype="uint8") /* ty=Tensor[(14, 15, 16), uint8] */;
  %1096 = shape_of(%1092, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1097 = cast(%1092, dtype="uint8") /* ty=Tensor[(14, 15, 16), uint8] */;
  %1098 = dyn.reshape(%1095, %1096, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1099 = @func_4328() /* ty=(int8, Tensor[(5, 12, 4), float64]) */;
  %1100 = cast(%1094, dtype="int32") /* ty=Tensor[(14, 15, 16), int32] */;
  %1101 = shape_of(%1092, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1102 = cast(%1092, dtype="int32") /* ty=Tensor[(14, 15, 16), int32] */;
  %1103 = dyn.reshape(%1100, %1101, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1104 = %1084.0;
  %1105 = %1087.1;
  %1106 = %1088.0;
  %1107 = logical_xor(%1097, %1098) /* ty=Tensor[(14, 15, 16), uint8] */;
  %1108 = %1099.1;
  %1109 = bitwise_or(%1102, %1103) /* ty=Tensor[(14, 15, 16), int32] */;
  (%1104, %1105, %var_12341, %1106, %1107, %1108, %1109)
}

def @func_13005() -> (Tensor[(5, 12, 4), float64], Tensor[(264), float64]) {
  @func_13003() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(264), float64]) */
}

def @func_3297(%var_3268: Tensor[(1, 4, 7), uint16], %var_3269: Tensor[(6, 4, 7), uint16]) -> (Tensor[(6, 4, 7), uint16], Tensor[(6, 4, 7), float64]) {
  %1110 = cast(%var_3268, dtype="uint16") /* ty=Tensor[(1, 4, 7), uint16] */;
  %1111 = cast(%var_3269, dtype="uint16") /* ty=Tensor[(6, 4, 7), uint16] */;
  %1112 = cast(%var_3269, dtype="float64") /* ty=Tensor[(6, 4, 7), float64] */;
  %1113 = bitwise_or(%1110, %1111) /* ty=Tensor[(6, 4, 7), uint16] */;
  %1114 = tan(%1112) /* ty=Tensor[(6, 4, 7), float64] */;
  (%1113, %1114)
}

def @func_11821() -> (Tensor[(5, 12, 4), float64],) {
  @func_11819() /* ty=(Tensor[(5, 12, 4), float64],) */
}

def @func_5144() -> (int8, Tensor[(5, 12, 4), bool], Tensor[(1152), float32]) {
  %1115 = @func_3258() /* ty=(int8,) */;
  %1116 = cast(meta[relay.Constant][53] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %1117 = reshape(%1116, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %1118 = @func_3418(%1117) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1119 = %1115.0;
  %1120 = %1118.1;
  (%1119, %1120, meta[relay.Constant][53] /* ty=Tensor[(1152), float32] */)
}

def @func_1305() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %1125 = fn () -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
    %1121 = @func_861() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %1122 = @func_1272() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %1123 = %1121.0;
    %1124 = %1122.1;
    (%1123, %1124)
  };
  %1125() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_4998(%var_4965: Tensor[(6, 13, 8), int16]) -> Tensor[(6, 13, 8), bool] {
  %1126 = @func_2356() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(6, 13, 8), uint8], Tensor[(6, 13, 8), int16]) */;
  %1127 = %1126.2;
  %1128 = cast(%var_4965, dtype="bool") /* ty=Tensor[(6, 13, 8), bool] */;
  %1129 = shape_of(%1127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1130 = cast(%1127, dtype="bool") /* ty=Tensor[(6, 13, 8), bool] */;
  %1131 = dyn.reshape(%1128, %1129, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1130, %1131) /* ty=Tensor[(6, 13, 8), bool] */
}

def @func_4188(%var_4179: Tensor[(33), float64], %var_4181: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64], Tensor[(33), float64], Tensor[(264), float64], int8) {
  %1132 = @func_3707() /* ty=(Tensor[(6, 13, 8), float32], Tensor[(5, 12, 4), float64]) */;
  %1133 = cast(%var_4179, dtype="float64") /* ty=Tensor[(33), float64] */;
  %1134 = cast(meta[relay.Constant][54] /* ty=Tensor[(264), float64] */, dtype="float64") /* ty=Tensor[(264), float64] */;
  %1135 = cast(%var_4181, dtype="int8") /* ty=int8 */;
  %1136 = reshape(%1133, newshape=[11, 3, 1]) /* ty=Tensor[(11, 3, 1), float64] */;
  %1137 = reshape(%1134, newshape=[11, 3, 8]) /* ty=Tensor[(11, 3, 8), float64] */;
  %1138 = reshape(%1135, newshape=[]) /* ty=int8 */;
  %1139 = @func_2907(%1136, %1137, %1138) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(11, 3, 8), uint8]) */;
  %1140 = @func_1715() /* ty=Tensor[(5, 12, 4), float64] */;
  %1141 = %1132.0;
  %1142 = %1139.1;
  (%1140, %1141, %1142, %var_4179, meta[relay.Constant][54] /* ty=Tensor[(264), float64] */, %var_4181)
}

def @func_10305() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %1143 = @func_4378() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1144 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1145 = %1143.1;
  %1146 = %1144.0;
  (%1145, %1146)
}

def @func_7674() -> Tensor[(5, 12, 4), float64] {
  %1148 = fn () -> Tensor[(5, 12, 4), float64] {
    %1147 = @func_5208() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %1147.0
  };
  %1148() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_4614() -> Tensor[(5, 12, 4), float64] {
  @func_3962() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_6435() -> Tensor[(5, 12, 4), float64] {
  @func_6433() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_8045() -> Tensor[(5, 12, 4), float64] {
  %1149 = @func_1856() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(3360), float32], float32) */;
  %1149.0
}

def @func_3863(%var_3861: Tensor[(8, 3, 11), uint8], %var_3862: Tensor[(8, 3, 11), uint8]) -> (Tensor[(8, 3, 11), uint8], Tensor[(5, 12, 4), float64]) {
  %1156 = fn (%var_3838: Tensor[(8, 3, 11), uint8], %var_3839: Tensor[(8, 3, 11), uint8]) -> (Tensor[(8, 3, 11), uint8], Tensor[(5, 12, 4), float64]) {
    %1150 = cast(%var_3839, dtype="uint8") /* ty=Tensor[(8, 3, 11), uint8] */;
    %1151 = shape_of(%var_3838, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1152 = cast(%var_3838, dtype="uint8") /* ty=Tensor[(8, 3, 11), uint8] */;
    %1153 = dyn.reshape(%1150, %1151, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1154 = bitwise_or(%1152, %1153) /* ty=Tensor[(8, 3, 11), uint8] */;
    %1155 = @func_2047() /* ty=Tensor[(5, 12, 4), float64] */;
    (%1154, %1155)
  };
  %1156(%var_3861, %var_3862) /* ty=(Tensor[(8, 3, 11), uint8], Tensor[(5, 12, 4), float64]) */
}

def @func_12438(%var_12436: Tensor[(2, 28), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 1, 6), float64], Tensor[(30), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(2, 28), float32], Tensor[(5, 12, 4), float64]) {
  @func_12435(%var_12436) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 1, 6), float64], Tensor[(30), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(2, 28), float32], Tensor[(5, 12, 4), float64]) */
}

def @func_13308() -> Tensor[(5, 12, 4), float64] {
  @func_13306() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_13651() -> Tensor[(6, 13, 8), int16] {
  @func_4778() /* ty=Tensor[(6, 13, 8), int16] */
}

def @func_2460() -> Tensor[(5, 12, 4), float64] {
  %1157 = @func_1570() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1157.1
}

def @func_3588(%var_3587: Tensor[(5, 12, 4), float64]) -> (Tensor[(5, 12, 4), bool],) {
  %1164 = fn (%var_3579: Tensor[(5, 12, 4), float64]) -> (Tensor[(5, 12, 4), bool],) {
    %1158 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
    %1159 = cast(%var_3579, dtype="bool") /* ty=Tensor[(5, 12, 4), bool] */;
    %1160 = shape_of(%1158, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1161 = cast(%1158, dtype="bool") /* ty=Tensor[(5, 12, 4), bool] */;
    %1162 = dyn.reshape(%1159, %1160, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1163 = not_equal(%1161, %1162) /* ty=Tensor[(5, 12, 4), bool] */;
    (%1163,)
  };
  %1164(%var_3587) /* ty=(Tensor[(5, 12, 4), bool],) */
}

def @func_10374() -> Tensor[(5, 12, 4), float64] {
  %1165 = fn () -> Tensor[(5, 12, 4), float64] {
    @func_9176() /* ty=Tensor[(5, 12, 4), float64] */
  };
  %1165() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_1274() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  @func_1272() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_10102() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) {
  @func_10100() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) */
}

def @func_11453(%var_11450: Tensor[(15, 12, 14), uint16], %var_11451: Tensor[(15, 12, 14), uint16], %var_11452: Tensor[(56), int64]) -> (Tensor[(15, 12, 14), bool], Tensor[(2, 28), float32], Tensor[(56), int64], Tensor[(5, 12, 4), float64]) {
  %1177 = fn (%var_11426: Tensor[(15, 12, 14), uint16], %var_11427: Tensor[(15, 12, 14), uint16], %var_11432: Tensor[(56), int64]) -> (Tensor[(15, 12, 14), bool], Tensor[(2, 28), float32], Tensor[(56), int64], Tensor[(5, 12, 4), float64]) {
    %1166 = cast(%var_11427, dtype="bool") /* ty=Tensor[(15, 12, 14), bool] */;
    %1167 = shape_of(%var_11426, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1168 = cast(%var_11426, dtype="bool") /* ty=Tensor[(15, 12, 14), bool] */;
    %1169 = dyn.reshape(%1166, %1167, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1170 = cast(%var_11432, dtype="int64") /* ty=Tensor[(56), int64] */;
    %1171 = reshape(%1170, newshape=[2, 28]) /* ty=Tensor[(2, 28), int64] */;
    %1172 = @func_7467(%1171) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(2, 28), float32], Tensor[(2, 28), uint64], Tensor[(5, 12, 4), float64], Tensor[(2, 28), uint16], Tensor[(2, 28), uint8]) */;
    %1173 = @func_8518() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1152), float32], Tensor[(72, 4), bool]) */;
    %1174 = less(%1168, %1169) /* ty=Tensor[(15, 12, 14), bool] */;
    %1175 = %1172.2;
    %1176 = %1173.0;
    (%1174, %1175, %var_11432, %1176)
  };
  %1177(%var_11450, %var_11451, %var_11452) /* ty=(Tensor[(15, 12, 14), bool], Tensor[(2, 28), float32], Tensor[(56), int64], Tensor[(5, 12, 4), float64]) */
}

def @func_10100() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) {
  %1178 = @func_2759() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), int16], Tensor[(5, 12, 4), float64]) */;
  %1179 = @func_3169() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), uint16]) */;
  %1180 = %1178.2;
  %1181 = %1179.1;
  (%1180, %1181)
}

def @func_5407() -> (Tensor[(5, 12, 4), float64], int8) {
  %1182 = @func_3004() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1183 = @func_3258() /* ty=(int8,) */;
  %1184 = %1182.0;
  %1185 = %1183.0;
  (%1184, %1185)
}

def @func_10478() -> (Tensor[(6, 13, 8), bool],) {
  %1188 = fn () -> (Tensor[(6, 13, 8), bool],) {
    %1186 = @func_5801() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(6, 13, 8), bool], Tensor[(624), int16]) */;
    %1187 = %1186.1;
    (%1187,)
  };
  %1188() /* ty=(Tensor[(6, 13, 8), bool],) */
}

def @func_5053(%var_5051: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) {
  @func_5050(%var_5051) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(1, 14, 4), int32], Tensor[(56), int32]) */
}

def @func_2278(%var_2276: Tensor[(3360), float32]) -> (Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) {
  @func_2275(%var_2276) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) */
}

def @func_3964() -> Tensor[(5, 12, 4), float64] {
  @func_3962() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_4616() -> Tensor[(5, 12, 4), float64] {
  @func_4614() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_1807(%var_1749: Tensor[(8, 12, 12), float32]) -> (Tensor[(8, 12, 12), float32], Tensor[(5, 12, 4), bool], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %1189 = cast(%var_1749, dtype="float32") /* ty=Tensor[(8, 12, 12), float32] */;
  %1190 = @func_1524() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1191 = %1190.0;
  %1192 = @func_1304() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1193 = %1192.1;
  %1194 = cast(%1193, dtype="bool") /* ty=Tensor[(5, 12, 4), bool] */;
  %1195 = shape_of(%1191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1196 = cast(%1191, dtype="bool") /* ty=Tensor[(5, 12, 4), bool] */;
  %1197 = dyn.reshape(%1194, %1195, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1198 = @func_1554() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1199 = @func_1272() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1200 = exp(%1189) /* ty=Tensor[(8, 12, 12), float32] */;
  %1201 = less_equal(%1196, %1197) /* ty=Tensor[(5, 12, 4), bool] */;
  %1202 = %1198.0;
  %1203 = %1199.0;
  (%1200, %1201, %1202, %1203)
}

def @func_9657() -> Tensor[(6, 13, 8), int16] {
  %1204 = fn () -> Tensor[(6, 13, 8), int16] {
    @func_8916() /* ty=Tensor[(6, 13, 8), int16] */
  };
  %1204() /* ty=Tensor[(6, 13, 8), int16] */
}

def @func_4590(%var_4589: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32]) {
  %1213 = fn (%var_4581: Tensor[(56), int32]) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32]) {
    %1205 = @func_4378() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
    %1206 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %1207 = cast(%var_4581, dtype="int32") /* ty=Tensor[(56), int32] */;
    %1208 = reshape(%1207, newshape=[56]) /* ty=Tensor[(56), int32] */;
    %1209 = @func_3528(%1208) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) */;
    %1210 = %1205.0;
    %1211 = %1206.0;
    %1212 = %1209.1;
    (%1210, %1211, %1212, %var_4581)
  };
  %1213(%var_4589) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32]) */
}

def @func_8802() -> Tensor[(5, 12, 4), float64] {
  @func_8800() /* ty=Tensor[(5, 12, 4), float64] */
}

def @func_686(%var_685: float32) -> (Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) {
  %1222 = fn (%var_676: float32) -> (Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) {
    %1214 = @func_646() /* ty=(Tensor[(5, 12, 4), float64],) */;
    %1215 = cast(%var_676, dtype="float32") /* ty=float32 */;
    %1216 = cast(meta[relay.Constant][55] /* ty=Tensor[(3360), float32] */, dtype="float32") /* ty=Tensor[(3360), float32] */;
    %1217 = reshape(%1215, newshape=[]) /* ty=float32 */;
    %1218 = reshape(%1216, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float32] */;
    %1219 = @func_176(%1217, %1218) /* ty=(Tensor[(14, 15, 16), bool],) */;
    %1220 = %1214.0;
    %1221 = %1219.0;
    (%1220, %1221, %var_676, meta[relay.Constant][55] /* ty=Tensor[(3360), float32] */)
  };
  %1222(%var_685) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360), float32]) */
}

def @func_12142() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  @func_12140() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */
}

def @func_10070(%var_10069: Tensor[(2, 5, 12), float32]) -> (Tensor[(2, 5, 12), bool], Tensor[(9, 15, 2), float32], Tensor[(270), float32], Tensor[(5, 12, 4), float64], float32, Tensor[(5, 12, 4), float64], Tensor[(56), int32]) {
  %1244 = fn (%var_10035: Tensor[(2, 5, 12), float32]) -> (Tensor[(2, 5, 12), bool], Tensor[(9, 15, 2), float32], Tensor[(270), float32], Tensor[(5, 12, 4), float64], float32, Tensor[(5, 12, 4), float64], Tensor[(56), int32]) {
    %1223 = cast(meta[relay.Constant][56] /* ty=Tensor[(2, 5, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 5, 12), float32] */;
    %1224 = shape_of(%var_10035, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1225 = cast(%var_10035, dtype="float32") /* ty=Tensor[(2, 5, 12), float32] */;
    %1226 = dyn.reshape(%1223, %1224, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1227 = divide(%1225, %1226) /* ty=Tensor[(2, 5, 12), float32] */;
    %1228 = cast(%1227, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
    %1229 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(2, 5, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1230 = cast(meta[relay.Constant][56] /* ty=Tensor[(2, 5, 12), float32] */, dtype="bool") /* ty=Tensor[(2, 5, 12), bool] */;
    %1231 = dyn.reshape(%1228, %1229, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1232 = cast(meta[relay.Constant][57] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
    %1233 = reshape(%1232, newshape=[9, 15, 2]) /* ty=Tensor[(9, 15, 2), float32] */;
    %1234 = cast(-5.2473f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1235 = reshape(%1234, newshape=[]) /* ty=float32 */;
    %1236 = @func_4550(%1235) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(14, 15, 16), bool], float32, Tensor[(3360, 1), float32]) */;
    %1237 = cast(meta[relay.Constant][58] /* ty=Tensor[(56), int32] */, dtype="int32") /* ty=Tensor[(56), int32] */;
    %1238 = reshape(%1237, newshape=[56]) /* ty=Tensor[(56), int32] */;
    %1239 = @func_3528(%1238) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(56), int32], Tensor[(5, 12, 4), bool], Tensor[(1152), float32], Tensor[(5, 12, 4), float64]) */;
    %1240 = less(%1230, %1231) /* ty=Tensor[(2, 5, 12), bool] */;
    %1241 = @func_6913(%1233) /* ty=Tensor[(9, 15, 2), float32] */;
    %1242 = %1236.0;
    %1243 = %1239.6;
    (%1240, %1241, meta[relay.Constant][57] /* ty=Tensor[(270), float32] */, %1242, -5.2473f /* ty=float32 */, %1243, meta[relay.Constant][58] /* ty=Tensor[(56), int32] */)
  };
  %1244(%var_10069) /* ty=(Tensor[(2, 5, 12), bool], Tensor[(9, 15, 2), float32], Tensor[(270), float32], Tensor[(5, 12, 4), float64], float32, Tensor[(5, 12, 4), float64], Tensor[(56), int32]) */
}

def @func_10232() -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) {
  %1245 = @func_9176() /* ty=Tensor[(5, 12, 4), float64] */;
  %1246 = @func_7285() /* ty=Tensor[(5, 12, 4), float64] */;
  (%1245, %1246)
}

def @func_2907(%var_2799: Tensor[(11, 3, 1), float64], %var_2800: Tensor[(11, 3, 8), float64], %var_2893: int8) -> (Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], int8, Tensor[(11, 3, 8), uint8]) {
  %1247 = @func_2557() /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64]) */;
  %1248 = @func_1524() /* ty=(Tensor[(5, 12, 4), float64],) */;
  %1249 = cast(%var_2893, dtype="int8") /* ty=int8 */;
  %1250 = reshape(%1249, newshape=[]) /* ty=int8 */;
  %1251 = @func_2249(%1250) /* ty=(Tensor[(5, 12, 4), float64], Tensor[(5, 12, 4), float64], Tensor[(15, 15, 6), int8], int8, Tensor[(1, 1350), int8], Tensor[(1152), float32]) */;
  %1252 = cast(%var_2799, dtype="float32") /* ty=Tensor[(11, 3, 1), float32] */;
  %1253 = log10(%1252) /* ty=Tensor[(11, 3, 1), float32] */;
  %1254 = cast(%var_2799, dtype="float64") /* ty=Tensor[(11, 3, 1), float64] */;
  %1255 = cast(%var_2800, dtype="float64") /* ty=Tensor[(11, 3, 8), float64] */;
  %1256 = divide(%1254, %1255) /* ty=Tensor[(11, 3, 8), float64] */;
  %1257 = cast(%1253, dtype="uint8") /* ty=Tensor[(11, 3, 1), uint8] */;
  %1258 = cast(%1256, dtype="uint8") /* ty=Tensor[(11, 3, 8), uint8] */;
  %1259 = @func_2570() /* ty=Tensor[(5, 12, 4), float64] */;
  %1260 = %1247.1;
  %1261 = %1248.0;
  %1262 = @func_1193() /* ty=Tensor[(5, 12, 4), float64] */;
  %1263 = %1251.1;
  %1264 = bitwise_xor(%1257, %1258) /* ty=Tensor[(11, 3, 8), uint8] */;
  (%1259, %1260, %1261, %1262, %1263, %var_2893, %1264)
}

def @func_1193() -> Tensor[(5, 12, 4), float64] {
  %1265 = @func_871() /* ty=Tensor[(5, 12, 4), float64] */;
  %1266 = cast(%1265, dtype="float64") /* ty=Tensor[(5, 12, 4), float64] */;
  sin(%1266) /* ty=Tensor[(5, 12, 4), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen434/build/output.py:4491: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen434/build/output.py", line 4496, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(588) tvmgen_default_fused_atan_cast_cast_cast_reshape_right_shift_cast_reshape_equal_kernel0(signed char* __restrict__ T_equal, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  T_equal[(((int)threadIdx.x))] = ((signed char)(((bool)atan(placeholder[(((int)threadIdx.x))])) == ((bool)(((short)placeholder[(((int)threadIdx.x))]) >> ((short)placeholder1[(((int)threadIdx.x))])))));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~

